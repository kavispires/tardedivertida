import{j as e,k as Ce,T as m,h as ce,e as P,aQ as le,aP as A,I as f,q as de,cl as be,l as $e,r as M,b6 as V,n as Ge,d3 as qe,F as Te,B as W,cv as Ve,cw as Ye,o as te,x as Ee,ch as Me,ci as ae,cp as Fe,a_ as Qe}from"./index-CGSQCK0t.js";import{c as K,h as ne,u as Re,S as D,a as Z,b as pe,P as ue,d as me,j as Je,f as Xe,g as Ke}from"./StepSwitcher-riAWV7qW.js";import{A as Ae}from"./AnimatedProcessingIcon-BZ0FaFPO.js";import{I as H}from"./useDevFeatures-4QR5HvPz.js";import{M as ee,D as Ze,P as es}from"./PathIcon-Dp7mtECC.js";import{V as Oe}from"./ViewOr-Bx1kDirb.js";import{N as F}from"./NoIcon-C2NNfHES.js";import{g as ss}from"./ItemCard-DkBiorfF.js";import{T as Le}from"./TreeCard-CtraLpoM.js";import{S as rs}from"./Sprite-DeL2y2Rc.js";import{u as ke}from"./useMock-DzbdTnVI.js";import{F as ts,C as Be,T as ie}from"./TreeIcon-BvCpyjOk.js";import{P as v}from"./PointsHighlight-CUSwFIdn.js";import{R as L}from"./RuleInstruction-BTOlawPn.js";import{T as os,a as as,R as ns}from"./index.esm-CBmFFNzS.js";import{A as z}from"./ArrowIcon-CEKESqTi.js";import{A as is}from"./PlayerAvatarGroup-Cc8GxxPh.js";import{D as cs}from"./DivButton-C-MZKmtE.js";import{V as Ie}from"./ViewIf-qgMpzyEs.js";import{F as he}from"./FlagIcon-CWnN3uBP.js";import{M as xe}from"./MetricHighlight-BbMtYAlA.js";import{L as ls}from"./LocationIcon-DDU4Rmip.js";import{C as ds}from"./Card-7ZE1WjHe.js";import{T as We}from"./TitledContainer-DUpYPwWK.js";import{T as ps}from"./TextHighlight-BBQU5doS.js";import{u as us}from"./useWhichPlayerIsThe-BcV_n2iV.js";import{T as ms}from"./TurnOrder-CmQ6ImNk.js";import{P as Y}from"./PlayerAvatarName-CZpoHAVP.js";import{D as hs}from"./DevButton-BbZ_bfHf.js";import{M as xs}from"./MouseFollowingContent-Cx-Nib84.js";import{S as js,u as fs}from"./SlideShowControls-CG68maCX.js";import{S as gs}from"./StepRankingWrapper-oj2MiU-f.js";import{P as _s}from"./PlayerAvatar-DZkmtLXb.js";import{P as ys}from"./PlayerAvatarStrip-BpGOU6p8.js";import"./GameBanner-BiB3i5W6.js";import{G as vs}from"./GameOverWrapper-BrlD7RZ7.js";import{A as bs}from"./Achievements-BBt2sdln.js";import{a as Ts}from"./achievements-BKUTTYlo.js";import"./DebugOnly-CI0uw_R2.js";import"./speech-DPLxsvHj.js";import"./RulesModal-WYtPVJHj.js";import"./WritingIcon-DDH-TRUI.js";import"./index-2x-tnb_W.js";import"./PurePanel-DsjFyYmk.js";import"./Game-Bg1Z5STA.js";import"./useMutation-BXEqyBJN.js";import"./index-WouEotSt.js";import"./index-C39LbwFe.js";import"./Overflow-RsMGoRvb.js";import"./index-D3RWvR2x.js";import"./index-DeVsjLs3.js";import"./useTDBaseUrl-BF9foKiS.js";import"./index-BhBdG--N.js";import"./Loading-Be1moASX.js";import"./useBubbleLock-BnRdg95y.js";import"./AnimatedLoaderIcon-DQ1E5w_H.js";import"./InfoCircleOutlined-CPB6yJYi.js";import"./index-D5DYhoAJ.js";import"./SignIn-bWFf5ziQ.js";import"./GoogleIcon-DCtzGIji.js";import"./WaitingRoomIcon-C_iyn3kK.js";import"./AnimatedClockIcon-DGotG7CH.js";import"./LikeFilled-CyE-gQre.js";import"./WarningOutlined-DkrjOcfX.js";import"./StarIcon-C8TDa5V5.js";import"./StarFilled-yu4V3BzG.js";import"./StepBackwardOutlined-Ckh97eW1.js";import"./TrophyOutlined-DfPGpqP5.js";import"./RankingBoard-DENxntVo.js";import"./CaretUpOutlined-BH-Lil8S.js";import"./TheEndIcon-BdMfADAT.js";import"./ArrowRightOutlined-B7g1X7DC.js";import"./progress-BP3zqMsa.js";import"./Medal--dsqLftD.js";function Is({state:s}){return e.jsx(K,{phase:s?.phase,allowedPhase:ne.DEFAULT.WAIT,className:"setup",children:e.jsxs("div",{className:"phase-announcement",children:[e.jsx(Ce,{children:e.jsx(m,{pt:"Processando...",en:"Processing..."})}),e.jsx(Ae,{className:"phase-announcement__icon"}),e.jsx(H,{children:e.jsx(m,{pt:"Aguarde um momento",en:"Just a moment"})})]})})}const O={MAP_BUILDING:"MAP_BUILDING",PATH_FOLLOWING:"PATH_FOLLOWING",RESULTS:"RESULTS"},ze={SUBMIT_MAP:"SUBMIT_MAP",SUBMIT_PATH:"SUBMIT_PATH"},I=7,q=5,N={UP:"UP",RIGHT:"RIGHT",DOWN:"DOWN",LEFT:"LEFT",UP_LEFT:"UP_LEFT",UP_RIGHT:"UP_RIGHT",DOWN_LEFT:"DOWN_LEFT",DOWN_RIGHT:"DOWN_RIGHT"},Ss=15;function Ns(s){const{translate:r}=ce(),a=Re({actionName:"submit-map",onSuccess:()=>s(2),onError:()=>s(0),successMessage:r("Mapa submetido com sucesso","Map submitted successfully"),errorMessage:r("Vixi, o aplicativo encontrou um erro ao tentar enviar seu mapa","Oops, the application found an error while trying to submit your map")});return o=>{a({action:ze.SUBMIT_MAP,...o})}}function Ps(s){const{translate:r}=ce(),a=Re({actionName:"submit-path",onSuccess:()=>s(2),onError:()=>s(0),successMessage:r("Caminho submetido com sucesso","Path submitted successfully"),errorMessage:r("Vixi, o aplicativo encontrou um erro ao tentar enviar seu caminho","Oops, the application found an error while trying to submit your path")});return o=>{a({action:ze.SUBMIT_PATH,...o})}}function U({id:s,text:r,width:a=100,className:o}){if(typeof s=="string"){const[t,i]=ss(s);return e.jsxs("div",{className:P("tree-card",o),style:{width:`${a}px`},children:[e.jsx(rs,{source:t,spriteId:i,width:a,title:r}),e.jsx(le,{title:r,children:e.jsx("div",{className:"tree-card__text",children:r})})]})}return e.jsx(Le,{treeId:s,text:r,width:a,className:o})}function ws({forest:s,map:r,newMap:a}){if(!a||!r)return null;const o=(r??[]).filter(t=>!t.passed);return e.jsx(A,{wrap:!0,children:o.map((t,i)=>{const{treeId:n,passed:l}=t,d=s[n],x=a?.[i];return e.jsxs("div",{className:"map-builder__segment",children:[!!x&&e.jsxs("div",{className:"map-builder__card map-builder__card--new",children:[x.text,x?.negate&&e.jsx(f,{icon:e.jsx(F,{}),size:"small",className:"map-builder__card-no"})]}),t.clues.map(u=>e.jsxs("div",{className:"map-builder__card",children:[u.text,u?.negate&&e.jsx(f,{icon:e.jsx(F,{}),size:"small",className:"map-builder__card-no"})]},`card-${t.index}-${u.id}`)),e.jsx(U,{id:d.treeType,text:l?"":d.card.text})]},n)})})}const E=s=>{const[r,a]=s;return r+a*I},Q=s=>{const r=s%I,a=Math.floor(s/I);return[r,a]},Cs=s=>{const r=Q(s),[a,o]=r;return a===0?N.LEFT:a===I-1?N.RIGHT:o===0?N.UP:o===q-1?N.DOWN:null},oe=(s,r)=>{const[a,o]=Q(s),[t,i]=Q(r),n=t-a+(i-o)*I;return n===1?N.RIGHT:n===-1?N.LEFT:n===I?N.DOWN:n===-I?N.UP:n===I+1?N.DOWN_RIGHT:n===I-1?N.DOWN_LEFT:n===-I+1?N.UP_RIGHT:n===-I-1?N.UP_LEFT:N.UP},je=(s,r)=>{const[a,o]=Q(s),t=[],i=[a,o-1],n=E(i);i[1]>=0&&!r.includes(n)&&t.push(i);const l=[a+1,o],d=E(l);l[0]<I&&!r.includes(d)&&t.push(l);const x=[a,o+1],u=E(x);x[1]<q&&!r.includes(u)&&t.push(x);const h=[a-1,o],S=E(h);h[0]>=0&&!r.includes(S)&&t.push(h);const b=[a-1,o-1],T=E(b);b[0]>=0&&b[1]>=0&&!r.includes(T)&&t.push(b);const y=[a+1,o-1],C=E(y);y[0]<I&&y[1]>=0&&!r.includes(C)&&t.push(y);const w=[a-1,o+1],p=E(w);w[0]>=0&&w[1]<q&&!r.includes(p)&&t.push(w);const c=[a+1,o+1],j=E(c);return c[0]<I&&c[1]<q&&!r.includes(j)&&t.push(c),t.map(_=>E(_))},Es=(s,r)=>{if(!r)return[];const a=s.filter(o=>o.passed).map(o=>o.treeId);return je(r.previousTree??r.treeId,a).filter(o=>o!==r.treeId)},Ms=(s,r)=>{const a=r.map,o=a.filter(i=>i.active),t={};if(o[0].index>0){const i=a[o[0].index-1];t[i.treeId]=Object.keys(s).filter(n=>n!==r.id)}return Object.values(s).forEach(i=>{const n=i.history[r.id];n&&o.forEach((l,d,x)=>{const u=n[l.index];if(u)if(d===x.length-1)u.forEach(h=>{t[h]===void 0&&(t[h]=[]),t[h].push(i.id)});else{const h=u?.[u.length-1];t[h]===void 0&&(t[h]=[]),t[h].push(i.id)}})}),t},Fs=(s,r,a)=>{const o=r[0],t={},i=s.history[a];if(i){const n=i[o.index];n&&n.forEach(l=>{t[l]===void 0&&(t[l]=[]),t[l].push(s.id)})}return t},Rs=(s,r)=>{const o=(r.map??[]).filter(i=>!i.passed),t={};return Object.values(s).forEach(i=>{const n=i.history[r.id];n&&o.forEach((l,d,x)=>{const u=n[l.index];if(u)if(d===x.length-1)u.forEach(h=>{t[h]===void 0&&(t[h]=[]),t[h].push(i.id)});else{const h=u?.[u.length-1];t[h]===void 0&&(t[h]=[]),t[h].push(i.id)}})}),t},As=(s,r,a=!1,o=[])=>{const t=de.union(s.filter(i=>i.passed).map(i=>i.treeId),o);return r.map(i=>{const n=je(t[t.length-1],t),l=i.treeId,d=a?be([...n,l]):be(n);return t.push(d),d})};function Os(){const s=$e({initialWidth:300,initialHeight:300}),[r,a]=M.useState(s);return M.useEffect(()=>{const o=document.getElementById("screen");o&&a({width:Math.min(o.clientWidth,s.width),height:Math.min(o.clientHeight,s.height)})},[s.width,s.height]),[r.width,r.height]}function Se({segment:s,tree:r,startingTeeId:a,finalTreeId:o,currentTreeId:t,showPath:i=!1,showArrow:n=!1,className:l="",hidePassedTreeNames:d=!1,width:x=75}){const u=!!s,h=a===r.id,S=Cs(r.id),b=o===r.id,T=t===r.id,y=(s?.passed&&!T)??!1;return e.jsxs("div",{className:P("forest__tree",h&&`forest__tree--${S}`,b&&i&&"forest__tree--goal",u&&i&&"forest__tree--segment",y&&"forest__tree--passed",T&&"forest__tree--current",l),children:[e.jsx(U,{id:r.treeType,text:s?.passed&&d?"":r.card.text,width:x}),i&&b&&e.jsx(f,{icon:e.jsx(ts,{}),size:"large",className:`forest__end forest__end--${s.direction}`}),T&&e.jsx("div",{className:"forest__compass",children:e.jsx(f,{icon:e.jsx(Be,{}),size:"large",className:P("forest__compass-icon",V("pulse",{infinite:!0}))})}),h&&e.jsx(f,{icon:e.jsx(he,{}),size:"large",className:`forest__start forest__start--${S}`}),(n||i||y)&&!b&&u&&s.direction&&e.jsxs(e.Fragment,{children:[e.jsx("span",{className:P(`forest__arrow-line forest__arrow-line--${s.direction}`,u&&i&&"forest__tree--segment",y&&"forest__tree--passed",T&&"forest__tree--current")}),e.jsx(f,{icon:e.jsx(z,{}),size:"large",className:`forest__arrow forest__arrow--${s.direction}`})]})]})}function $({forest:s,map:r=[],showPath:a,actions:o,players:t,size:i="large",hidePassedTreeNames:n=!1,user:l=qe,forestBorderColor:d="transparent",playerMapping:x}){const[u]=Os(),h=Ge(7,{gap:16,minWidth:60,maxWidth:100});if(!s||!r||r.length===0||!u)return e.jsx(A,{vertical:!0,children:e.jsx(f,{icon:e.jsx(Ae,{}),size:"large"})});const S=r?.[0]?.treeId,b=r.reduce((j,_)=>(j[_.treeId]=_,j),{}),T=de.findLast(r,j=>j.passed)?.treeId??S,y=r[r.length-1]?.treeId,C=150*7+72,c=Math.min(C,u*(i==="small"?.5:.9))/C;return e.jsx("div",{className:"forest-container-area",children:e.jsx(os,{initialScale:c,minScale:.5,maxScale:4,wheel:{step:.05,disabled:!0},centerOnInit:!0,children:({zoomIn:j,zoomOut:_,resetTransform:G})=>e.jsxs(e.Fragment,{children:[e.jsx(Pe,{position:"top",zoomIn:j,zoomOut:_,resetTransform:G}),e.jsx(Pe,{position:"bottom",zoomIn:j,zoomOut:_,resetTransform:G}),e.jsx(as,{wrapperClass:P("forest-container",i==="small"&&"forest-container--small"),children:e.jsx("div",{className:"forest",style:{borderColor:d},children:s.map(g=>{const ge=b?.[g.id];if(o){const{selection:R=[],clickableTrees:He,onSelectTree:Ue,activeTree:_e,disabled:k}=o,B=He.includes(g.id),se=B||R.includes(g.id);if(se){const re=R.includes(g.id),ye=_e===g.id,ve=R.indexOf(g.id);return e.jsxs(cs,{className:P("forest__tree-container forest__tree-button",B&&k&&"forest__tree-button--disabled"),onClick:()=>{(se&&!k||se&&k&&!B)&&Ue(g.id)},children:[e.jsx(Se,{segment:ge,tree:g,startingTeeId:S,finalTreeId:y,currentTreeId:T,showPath:a,className:P(B&&!k&&"forest__tree--clickable",re&&"forest__tree--selected",ye&&"forest__tree--active"),width:h}),re&&T!==g.id&&e.jsxs(e.Fragment,{children:[e.jsx("span",{className:P(`forest__arrow-from-line forest__arrow-from-line--${oe(R[ve-1],g.id)}`,re&&"forest__tree--selected",ye&&"forest__tree--active")}),e.jsx(f,{icon:e.jsx(z,{}),size:"large",className:P(`forest__arrow-to forest__arrow-to--${oe(R[ve-1],g.id)}`)})]}),B&&!k&&e.jsx(f,{icon:e.jsx(z,{}),size:"large",className:P(`forest__arrow-to forest__arrow-to--${oe(R[R.length-1]??_e,g.id)}`)}),e.jsx(Ie,{condition:!!t&&!!x?.[g.id],children:e.jsx("div",{className:"forest__players",children:!!t&&e.jsx(Ne,{players:t,playerIds:x?.[g.id]??[],user:l})})})]},`tree-${g.id}`)}}return e.jsxs("div",{className:"forest__tree-container",children:[e.jsx(Se,{segment:ge,tree:g,startingTeeId:S,finalTreeId:y,currentTreeId:T,showPath:a,hidePassedTreeNames:n,width:h}),e.jsx(Ie,{condition:!!t&&!!x?.[g.id],children:e.jsx("div",{className:"forest__players",children:!!t&&e.jsx(Ne,{players:t,playerIds:x?.[g.id]??[],user:l})})})]},`tree-${g.id}`)})})})]})})})}function Ne({players:s,playerIds:r,user:a}){const{translate:o}=ce(),t=r.map(i=>s[i]);return e.jsx(is,{list:t,user:a,tooltipPrefix:o("Último lugar visitado por: ","Last visited place by: ")})}function Pe({zoomIn:s,zoomOut:r,resetTransform:a,position:o}){return e.jsx(Te,{className:P("forest-container-controls",`forest-container-controls--${o}`),justify:"center",children:e.jsxs(Te,{children:[e.jsx(W,{onClick:()=>s(.1),size:"small",children:e.jsx(Ve,{})}),e.jsx(W,{onClick:()=>r(.1),size:"small",children:e.jsx(Ye,{})}),e.jsx(W,{onClick:()=>a(),size:"small",children:e.jsx(ns,{})})]})})}function we({children:s}){return e.jsx(xe,{icon:e.jsx(Be,{}),children:s})}function J({children:s}){return e.jsx(xe,{icon:e.jsx(ee,{}),children:s})}function X({children:s}){return e.jsx(xe,{icon:e.jsx(ie,{}),children:s})}function Ls({user:s,forest:r,onSubmitMap:a}){const o=s?.map??[],t=o.filter(p=>!p.passed),i=t.map(p=>p.clues),[n,l]=M.useState(t.map(p=>null)),[d,x]=M.useState(0),[u,h]=M.useState([]),S=p=>{l(c=>{const j=[...c];return j[d]={...p},j}),x(c=>c+1)},b=p=>{l(c=>{const j=[...c];return j[d]=null,j}),h(c=>[...c,p]),x(c=>c+1)},T=p=>{l(c=>[...c].map((_,G)=>G<p?_:null)),h(c=>c.filter(j=>j!==p)),x(p)},y=p=>{l(c=>{const j=[...c??[]];return j[p]&&(j[p].negate=!j[p]?.negate),j})},C=n.map(p=>p?.id).filter(Boolean),w=Es(o,t?.[d]);return e.jsxs(e.Fragment,{children:[e.jsx(A,{className:"map-builder",wrap:!0,children:t.map((p,c)=>{if(p.passed)return null;const j=r[p.treeId];return j?e.jsxs("div",{className:"map-builder__segment",children:[d===c&&e.jsx("div",{className:"map-builder__caret",children:e.jsx(f,{icon:e.jsx(ls,{}),className:V("bounce",{speed:"slow",infinite:!0}),size:"small"})}),!!n[c]&&e.jsx(le,{title:e.jsx(m,{pt:`Clique para negar: Não-${n?.[c]?.text}`,en:`Click to negate: Non-${n?.[c]?.text}`}),children:e.jsxs(te,{onClick:()=>y(c),disabled:!n?.[c],className:"map-builder__card map-builder__card--new",children:[n?.[c]?.negate&&e.jsx(f,{icon:e.jsx(F,{}),size:"small",className:"map-builder__card-no"}),n?.[c]?.text]})}),(i?.[c]??[]).map(_=>e.jsxs("div",{className:"map-builder__card",children:[_?.negate&&e.jsx(f,{icon:e.jsx(F,{}),size:"small",className:"map-builder__card-no"}),_.text]},_.id)),e.jsx(te,{onClick:()=>T(c),disabled:!(n?.[c]||u.includes(c)),children:e.jsx(U,{id:j.treeType,text:j.card.text})})]},`map-segment-${p.index}`):null})}),w.length>0&&e.jsxs(Ee,{className:"contained",wrap:!0,children:[e.jsxs("strong",{children:[e.jsx(m,{pt:"Caminhos possíveis para a árvore atual",en:"Possible paths for the current tree"}),":"]}),w.map((p,c)=>e.jsx(ps,{className:V("tada",{delay:c}),children:r?.[p]?.card?.text},`highlighted-possibility-${p}`))]}),e.jsxs(We,{title:e.jsx(m,{pt:"Cartas",en:"Hand"}),contained:!0,children:[(s.hand??[]).map(p=>e.jsx(te,{onClick:()=>S(p),disabled:C.includes(p.id)||d>=t.length,className:"map-builder__card-button",children:e.jsx(ds,{hideHeader:!0,children:p.text})},p.id)),e.jsx(W,{size:"large",type:"default",onClick:()=>b(d),disabled:!i?.[d]?.length,children:e.jsx(m,{pt:"Pular árvore",en:"Skip tree"})})]}),e.jsx(A,{children:e.jsx(Me,{size:"large",disabled:C.length===0,onClick:()=>a({newMap:n}),children:e.jsx(m,{pt:"Enviar Mapa",en:"Submit Map"})})})]})}function ks({players:s,user:r,announcement:a,forest:o,currentRound:t,onSubmitMap:i}){ke();const n=Rs(s,r);return e.jsxs(D,{fullWidth:!0,announcement:a,children:[e.jsx(Z,{children:t===1?e.jsx(m,{pt:"Construa o seu mapa",en:"Build your map"}):e.jsx(m,{pt:"Expanda seu mapa",en:"Expand your map"})}),e.jsx(L,{type:"rule",children:e.jsx(m,{pt:e.jsxs(e.Fragment,{children:["Você precisa ajudar os outros jogadores a descobrirem o seu caminho pela floresta.",e.jsx("br",{}),"Começando da ",e.jsx(we,{children:"bússola"}),", escolha 1 carta para cada árvore do caminho.",e.jsx("br",{}),"Você ganha ",e.jsx(v,{children:"pontos"})," se jogadores adivinharem seu caminho, então tente fazer um bom trabalho."]}),en:e.jsxs(e.Fragment,{children:["You need to help the other players to discover your path through the forest.",e.jsx("br",{}),"Starting from the ",e.jsx(we,{children:"compass"}),", choose 1 card for each tree of the path.",e.jsx("br",{}),"You earn ",e.jsx(v,{children:"points"})," if players guess your path correctly, so try to do a good job."]})})}),e.jsx($,{forest:o,map:r.map,showPath:!0,hidePassedTreeNames:!0,players:s,playerMapping:n}),e.jsx(L,{type:"action",children:e.jsx(m,{pt:e.jsxs(e.Fragment,{children:["Clique nas cartas em sequência para definir seu mapa, uma carta por árvore.",e.jsx("br",{}),"Você pode fazer quantos segmentos quiser desde que pelo menos uma carta esteja em cada árvore (dessa rodada ou de uma rodada anterior já que as cartas são cumulativas).",e.jsx("br",{}),"Na barra abaixo, se quiser negar ",e.jsx(f,{icon:e.jsx(F,{}),size:"small"})," um adjectivo selecionado, clique nele acima da árvore para trocar.",e.jsx("br",{}),"Se quiser refazer uma árvore ",e.jsx(f,{icon:e.jsx(ie,{}),size:"small"}),", clique nela.",e.jsx("br",{}),"Quando você estiver pronto, aperte Enviar Mapa."]}),en:e.jsxs(e.Fragment,{children:["Click on the cards in sequence to define your map, you can't skip any tree.",e.jsx("br",{}),"You can build as many segments you with as long as there is at least one card on each tree (from this round or a previous one since the cards are cumulative).",e.jsx("br",{}),"If you want to negate ",e.jsx(f,{icon:e.jsx(F,{}),size:"small"})," an adjective you selected, click on it below the tree to change.",e.jsx("br",{}),"If you want to redo a tree ",e.jsx(f,{icon:e.jsx(ie,{}),size:"small"}),", click on it.",e.jsx("br",{}),"When you are ready, press Submit Map."]})})}),e.jsx(Ls,{user:r,forest:o,onSubmitMap:i})]})}function Bs({user:s,announcement:r,forest:a}){return e.jsxs(D,{fullWidth:!0,announcement:r,children:[e.jsx(Z,{children:e.jsx(m,{pt:"Todos os jogadores já descobriam seu mapa completamente",en:"All players have discovered your map completely"})}),e.jsx(H,{contained:!0,children:e.jsx(m,{pt:e.jsx(e.Fragment,{children:"Aguarde pacientemente, você ainda vai participar na hora de adivinhar."}),en:e.jsx(e.Fragment,{children:"Sit and wait patiently, you will still participate when it's time to guess."})})}),e.jsx($,{forest:a,map:s.map,showPath:!0})]})}function Ws({state:s,players:r,user:a}){const{step:o,setStep:t}=pe(),i=Ns(t),n=e.jsx(ue,{icon:e.jsx(ee,{}),title:s.round.current===1?e.jsx(m,{pt:"Construa o seu mapa",en:"Build your map"}):e.jsx(m,{pt:"Expanda seu mapa",en:"Expand your map"}),currentRound:s?.round?.current,type:"overlay",children:e.jsx(H,{children:e.jsx(m,{pt:"Você consegue mapear as árvores usando apenas adjetivos?",en:"Can you map the tree path using only adjectives?"})})}),l=a?.map?.every(d=>d.passed);return e.jsx(K,{phase:s?.phase,allowedPhase:O.MAP_BUILDING,children:e.jsx(me,{step:o,players:r,waitingRoom:{content:e.jsx(ws,{forest:s.forest,map:a.map,newMap:a.newMap})},children:e.jsxs(Oe,{condition:l,children:[e.jsx(Bs,{user:a,announcement:n,forest:s.forest}),e.jsx(ks,{players:r,user:a,announcement:n,forest:s.forest,currentRound:s.round.current,onSubmitMap:i})]})})})}function De({segment:s,tree:r,showArrow:a,className:o}){return e.jsxs("div",{className:P("map-entry",o),children:[r&&e.jsx(U,{id:r.treeType,text:r.card.text,className:"map-entry__tree"}),e.jsx(f,{icon:e.jsx(ee,{}),size:"large",className:"map-entry__icon"}),s.clues.map(t=>e.jsxs("div",{className:"map-entry__clue",children:[t.text,t?.negate&&e.jsx(f,{icon:e.jsx(F,{}),size:"small",className:"map-entry__clue-no"})]},`clue-${s.index}-${t.id}`)),a&&e.jsx(f,{icon:e.jsx(z,{}),size:"small",className:"map-entry__arrow"})]},`map-${s.index}`)}const zs={id:0,treeType:0,card:{id:"",text:""}};function fe({map:s=[],selectedTrees:r=[],fullMap:a=!1}){const o=a?s:s.filter(t=>t.active);return e.jsx(A,{wrap:!0,className:"player-map",style:{gridTemplateColumns:`repeat(${o.length}, 100px)`},children:o.map((t,i,n)=>{const l=r[i+1],d=a&&n.length-1===i?zs:void 0;return e.jsx(De,{className:"player-map__segment",tree:d??l,segment:t,showArrow:n.length-1!==i},`map-${t.index}`)})})}function Ds({forest:s,map:r=[],onSubmitPath:a,pathId:o,user:t,players:i}){const n=r.filter(c=>!c.passed&&c.clues.length>0),l=de.findLast(r,c=>c.passed)?.treeId??r?.[0]?.treeId??0,d=r.filter(c=>c.passed).map(c=>c.treeId),x=Fs(t,n,o),[u,h]=M.useState([l]),[S,b]=M.useState(l),T=je(S,[...u,...d]),y=u.length>n.length,C=c=>{b(c);const j=u.indexOf(c);j>-1?h(_=>_.slice(0,j+1)):h(_=>[..._,c])},w=u.map(c=>s[c]),p=n?.[u.length-1];return ke(),e.jsxs(A,{vertical:!0,children:[e.jsx(fe,{map:r,selectedTrees:w}),e.jsx(xs,{active:!!p,children:e.jsx(De,{segment:p,className:V("rubberBand")},p?.treeId)}),e.jsx(Me,{size:"large",onClick:()=>a({guess:u.slice(1),pathId:o,choseRandomly:!1}),disabled:u.length-1<n.length,children:e.jsx(m,{pt:"Concluir",en:"Submit"})}),e.jsx(hs,{onClick:()=>a({guess:As(r,n,!0,Object.values(x).flat().map(Number)),pathId:o,choseRandomly:!0}),ghost:!0,children:"Random Dev"}),e.jsx($,{forest:s,map:r,actions:{selection:u,clickableTrees:T,onSelectTree:C,activeTree:S,disabled:y},playerMapping:x,players:i})]})}function Hs({players:s,announcement:r,forest:a,activePlayer:o,onSubmitPath:t,user:i}){const n=Object.keys(s).length;return e.jsxs(D,{fullWidth:!0,announcement:r,children:[e.jsx(Z,{children:e.jsx(m,{pt:e.jsxs(e.Fragment,{children:["Siga o mapa de ",e.jsx(Y,{player:o})]}),en:e.jsxs(e.Fragment,{children:["Follow ",e.jsx(Y,{player:o}),"'s map"]})})}),e.jsx(L,{type:"action",children:e.jsx(m,{pt:e.jsxs(e.Fragment,{children:["Baseado no ",e.jsx(J,{children:"mapa de adjetivos"}),", clique nas"," ",e.jsx(X,{children:"árvores"})," circuladas de pontinhos brancos para escolher aquele caminho.",e.jsx("br",{}),"Cada árvore correta vale ",e.jsx(v,{children:"1 ponto"})," por jogador que acertar (Por exemplo, 3 jogadores = 3 pontos).",e.jsx("br",{}),"Então, talvez valha a pena discutir! Porém, se somente um jogador acertar o caminho, ele ganha"," ",e.jsxs(v,{children:[n," pontos"]}),".",e.jsx("br",{}),"O criador do mapa ganha o mesmo número de pontos que os jogadores."]}),en:e.jsxs(e.Fragment,{children:["Based on the ",e.jsx(J,{children:"adjectives map"}),", click on the"," ",e.jsx(X,{children:"circled trees"})," with white dots to choose that path.",e.jsx("br",{}),"Each correct tree is worth ",e.jsx(v,{children:"1 point"})," per player that guesses it (For example, 3 players = 3 points).",e.jsx("br",{}),"So, it might be worth discussing out loud! However, if only one player guesses the path, they earn ",e.jsxs(v,{children:[n," points"]}),".",e.jsx("br",{}),"The map creator also earns the same number of points as the players."]})})}),!!a&&o.map&&e.jsx(Ds,{forest:a,map:o.map,onSubmitPath:t,pathId:o.id,user:i,players:s})]})}function Us({players:s,announcement:r,forest:a,activePlayer:o}){const t=Object.keys(s).length;return e.jsxs(D,{fullWidth:!0,announcement:r,children:[e.jsx(Z,{children:e.jsx(m,{pt:e.jsx(e.Fragment,{children:"Os jogadores estão seguindo o seu mapa!"}),en:e.jsx(e.Fragment,{children:"Players are following your map!"})})}),e.jsx(L,{type:"wait",children:e.jsx(m,{pt:e.jsxs(e.Fragment,{children:["Baseado no ",e.jsx(J,{children:"mapa de adjetivos"}),", eles vão clicando nas"," ",e.jsx(X,{children:"árvores"})," para escolher o caminho.",e.jsx("br",{}),"Cada árvore correta vale ",e.jsx(v,{children:"1 ponto"})," por jogador que acertar. Por exemplo, 3 jogadores = 3 pontos.",e.jsx("br",{}),"Se somente um jogador acertar o caminho, ele ganha"," ",e.jsxs(v,{children:[t," pontos"]}),".",e.jsx("br",{}),"Você, como criador do mapa, ganha o mesmo número de pontos que os jogadores."]}),en:e.jsxs(e.Fragment,{children:["Based on the ",e.jsx(J,{children:"adjectives map"}),", players will click on the"," ",e.jsx(X,{children:"trees"})," to choose the path.",e.jsx("br",{}),"Each correct tree is worth ",e.jsx(v,{children:"1 point"})," per player that guesses it. For example, 3 players = 3 points.",e.jsx("br",{}),"If only one player guesses the path, they earn"," ",e.jsxs(v,{children:[t," points"]}),".",e.jsx("br",{}),"You as the map creator also earns the same number of points as the players."]})})}),e.jsx(fe,{map:o.map}),e.jsx($,{forest:a,map:o.map,showPath:!0})]})}function $s({state:s,players:r,user:a}){const{step:o,setStep:t}=pe(),[i,n]=us("activePlayerId",s,r),l=Ps(t),d=e.jsx(ue,{icon:e.jsx(Ze,{}),title:e.jsx(m,{pt:"Siga os mapas!",en:"Follow the maps!"}),currentRound:s?.round?.current,type:"overlay",duration:3,children:e.jsxs(H,{children:[e.jsx(m,{pt:"Vamos analisar e tentar seguir o mapa de cada jogador",en:"Let's analise and try to follow the each player's map"}),e.jsx("br",{}),e.jsx(ms,{players:r,order:s.turnOrder,activePlayerId:s.activePlayerId})]})});return e.jsx(K,{phase:s?.phase,allowedPhase:O.PATH_FOLLOWING,children:e.jsx(me,{step:o,players:r,children:e.jsxs(Oe,{condition:n,children:[e.jsx(Us,{players:r,announcement:d,forest:s.forest,activePlayer:i}),e.jsx(Hs,{players:r,user:a,announcement:d,forest:s.forest,onSubmitPath:l,activePlayer:i,isTheActivePlayer:n})]})})})}function Gs({players:s,ranking:r,onGoBack:a,round:o}){return e.jsxs(gs,{players:s,ranking:r,gainedPointsDescriptions:[e.jsx(m,{pt:"Rotas corretos",en:"Correct paths"},"1"),e.jsx(m,{pt:"Pontos por sua rota",en:"Points for your route"},"2")],children:[e.jsx(L,{type:"event",children:e.jsx(m,{pt:"Não se preocupe se você ficou pra trás! O jogador mais a frente de cada rota, te gritou e você conseguiu encontrá-lo.",en:"Don't worry if you were left behind! The player furthest ahead on that route, call you and you caught up"})}),e.jsx(A,{children:e.jsx(W,{onClick:a,children:e.jsx(m,{pt:"Ver resultado novamente",en:"See results again"})})}),e.jsx(Je,{round:o})]})}function qs({players:s,forest:r,currentPlayer:a}){const o=a.map.filter(t=>t.active);return e.jsx("div",{className:"div-container player-map",style:{gridTemplateColumns:`repeat(${o.length}, 120px)`},children:o.map((t,i,n)=>{const l=t.passed?r[t.treeId]:null;return e.jsxs("div",{className:"player-map__segment",children:[e.jsxs("div",{className:"player-map__top",children:[l?e.jsx(U,{id:l.treeType,text:l.card.text,className:"player-map__tree",width:75}):e.jsx(Le,{treeId:"1",className:"player-map__tree-invisible",text:"",width:75}),e.jsx(f,{icon:e.jsx(ee,{}),size:"large",className:"player-map__icon"}),e.jsx("div",{children:t.clues.map(d=>e.jsxs("div",{className:"player-map__clue",children:[d.text,d?.negate&&e.jsx(f,{icon:e.jsx(F,{}),size:"small",className:"player-map__clue-no"})]},`clue-${t.index}-${d.id}`))}),t.index===0&&e.jsx(f,{icon:e.jsx(he,{}),size:"small",className:"player-map__starting-flag"}),n.length-1!==i&&e.jsx(f,{icon:e.jsx(z,{}),size:"small",className:"player-map__arrow"})]}),e.jsxs("div",{className:"player-map__scoring",children:[t.playersIds.length>0?e.jsx("div",{className:"player-map__players",children:t.playersIds.map(d=>{const x=s[d];return e.jsx(le,{title:x.name,children:e.jsx(_s,{size:"small",avatarId:x.avatarId})},`player-${d}`)})}):e.jsx("div",{className:"player-map__no-players",children:e.jsx(m,{pt:"Nenhum jogador",en:"No players"})}),e.jsx("div",{children:t.score>0&&e.jsx(v,{children:t.score})})]})]},`map-${t.index}`)})})}function Vs({players:s,gallery:r,user:a,forest:o,slideShowConfig:t}){const i=Object.keys(s).length,n=r[t.slideIndex],l=ae(n.avatarId),d=Ms(s,n);return e.jsxs(D,{fullWidth:!0,children:[e.jsx(Ce,{children:e.jsx(m,{pt:e.jsxs(e.Fragment,{children:["Mapa do(a) ",e.jsx(Y,{player:n})]}),en:e.jsxs(e.Fragment,{children:[e.jsx(Y,{player:n}),"'s map"]})})}),e.jsx(L,{type:"rule",children:e.jsx(m,{pt:e.jsxs(e.Fragment,{children:["Você ganha pontos ao acertar o caminho do mapa. ",e.jsx("br",{}),"Cada árvore correta vale ",e.jsx(v,{children:"1 ponto"})," por jogador que acertar."," ",e.jsx("br",{}),"Se você for o único que acertou, você ganha"," ",e.jsxs(v,{children:[i," pontos"]}),"."]}),en:e.jsxs(e.Fragment,{children:["You get points by guessing the map path. ",e.jsx("br",{}),"Each correct tree is worth ",e.jsx(v,{children:"1 point"})," per player who guesses it."," ",e.jsx("br",{}),"If you are the only one who guessed it, you get"," ",e.jsxs(v,{children:[i," points"]}),"."]})})}),e.jsx(qs,{players:s,forest:o,currentPlayer:n}),e.jsxs("div",{children:[e.jsx($,{forest:o,map:n.map,size:"small",players:s,user:a,forestBorderColor:ae(n.avatarId),playerMapping:d}),e.jsx(js,{config:t,barColor:l})]})]})}function Ys({state:s,players:r,user:a}){const{step:o,goToPreviousStep:t,goToNextStep:i}=pe(),n=M.useMemo(()=>Fe(r).filter(x=>x.map.some(u=>u.active)),[r]),l=fs({length:n.length,slideDuration:Ss,onExpire:i}),d=()=>{l.reset(),t()};return e.jsx(K,{phase:s?.phase,allowedPhase:O.RESULTS,children:e.jsxs(me,{step:o,players:r,children:[e.jsx(ue,{icon:e.jsx(es,{}),title:e.jsx(m,{pt:"Resultado",en:"Results"}),currentRound:s?.round?.current,type:"block",onClose:i,unskippable:!0,children:e.jsx(H,{children:e.jsx(m,{pt:"Quem é o melhor em seguir direções?",en:"Who is the best at following directions?"})})}),e.jsx(Vs,{gallery:n,players:r,slideShowConfig:l,forest:s.forest,user:a}),e.jsx(Gs,{players:r,round:s.round,ranking:s.ranking,onGoBack:d})]})})}function Qs({state:s,players:r}){const a=Fe(r),o=s.forest??[];return e.jsxs(vs,{state:s,players:r,announcementIcon:e.jsx(he,{}),children:[e.jsx(bs,{players:r,achievements:s.achievements,reference:Ts}),e.jsx(We,{title:e.jsx(m,{pt:"Mapas dos Jogadores",en:"Players' Maps"}),children:a.map(t=>{const i=(t.map??[]).map(n=>o[n.treeId]);return e.jsxs(Ee,{className:"game-over-strip",style:{borderColor:ae(t.avatarId)},children:[e.jsx(ys,{player:t,withName:!0,className:"game-over-avatar-strip"}),e.jsx(fe,{map:t.map,fullMap:!0,selectedTrees:i})]},t.id)})})]})}function Js(s){switch(s.phase){case ne.DEFAULT.WAIT:return Is;case O.MAP_BUILDING:return Ws;case O.PATH_FOLLOWING:return $s;case O.RESULTS:return Ys;case ne.DEFAULT.GAME_OVER:return Qs;default:return Ke}}function ft(){return e.jsx(Xe,{gameCollection:Qe.LABIRINTO_SECRETO,getActiveComponent:Js})}export{ft as default};
