import{j as e,k as Ee,T as m,h as ce,e as P,aQ as le,aP as R,I as f,q as de,cl as Te,l as Ge,r as M,b6 as V,n as qe,d8 as Ve,F as Ie,B as W,c_ as Ye,c$ as Qe,o as te,x as Me,ch as Fe,ci as ne,co as Ae,b0 as Je}from"./index-wXYFVgVu.js";import{d as K,i as ae,u as Re,S as D,a as Z,b as pe,c as ue,P as me,e as he,k as Xe,g as Ke,h as Ze}from"./StepSwitcher-DZl6mi6V.js";import{A as Oe}from"./AnimatedProcessingIcon-BaW1Sj4I.js";import{I as H}from"./useDevFeatures-DR0fBv5a.js";import{M as ee,D as es,P as ss}from"./PathIcon-8z9dEJwH.js";import{V as Le}from"./ViewOr-Bx1kDirb.js";import{N as F}from"./NoIcon-BuJLfxHz.js";import{g as rs}from"./ItemCard-DkAy6_We.js";import{T as ke}from"./TreeCard-TnGvq7ZW.js";import{S as ts}from"./Sprite-1WdrUazR.js";import{u as Be}from"./useMock-D7KOYUiW.js";import{F as os,C as We,T as ie}from"./TreeIcon-UyinKLiH.js";import{P as y}from"./PointsHighlight-B69s71e-.js";import{R as L}from"./RuleInstruction-CutNl4gA.js";import{T as ns,a as as,R as is}from"./index.esm-C4H9aPdj.js";import{A as z}from"./ArrowIcon-QduPnLlt.js";import{A as cs}from"./AvatarGroup-DnB3BM1Z.js";import{D as ls}from"./DivButton-Bwenwl6t.js";import{V as Se}from"./ViewIf-qgMpzyEs.js";import{F as xe}from"./FlagIcon-9BU54rWI.js";import{M as je}from"./MetricHighlight-Dt3UYazu.js";import{L as ds}from"./LocationIcon-C8x22k5I.js";import{C as ps}from"./Card-DCxKkJ6t.js";import{T as ze}from"./TitledContainer-BiB7bwyp.js";import{T as us}from"./TextHighlight-y6a6d0Nn.js";import{u as ms}from"./useWhichPlayerIsThe-S2ieu1vv.js";import{T as hs}from"./TurnOrder-BaJ8dpuU.js";import{A as Y}from"./AvatarName-CdKGb_eu.js";import{D as xs}from"./DevButton-BPvUAVNZ.js";import{M as js}from"./MouseFollowingContent-CRSr54HM.js";import{S as fs,u as gs}from"./SlideShowControls-Cm68msXz.js";import{S as _s}from"./StepRankingWrapper-CP3ZnY-H.js";import{A as vs}from"./Avatar-uUwe9r9O.js";import{A as ys}from"./AvatarStrip-BUXcI1bP.js";import"./GameBanner-Dyq7gnfJ.js";import{G as bs}from"./GameOverWrapper-DxDFEJ54.js";import{A as Ts}from"./Achievements-BN-5tt_r.js";import{a as Is}from"./achievements-BKUTTYlo.js";import"./DebugOnly-QwPyx80Z.js";import"./speech-BaduMGP9.js";import"./RulesModal-pPdgyLKZ.js";import"./WritingIcon-UbAIwXeP.js";import"./index-CHV90M3A.js";import"./PurePanel-ClpLOmHD.js";import"./Game-D5DqDsxM.js";import"./useMutation-61bclJZ1.js";import"./index-BMo5L5zk.js";import"./index-BIN0JeWf.js";import"./Overflow-D2Cl2WT4.js";import"./index-D6imBQBH.js";import"./index-Ds3QY6bm.js";import"./useTDBaseUrl-BF9foKiS.js";import"./index-jOXplP9Q.js";import"./Loading-Dz0tD1jE.js";import"./useBubbleLock-Bu_P6z1D.js";import"./AnimatedLoaderIcon-tP9DtrpR.js";import"./InfoCircleOutlined-B8kfmqub.js";import"./index-Sp1K-cTu.js";import"./SignIn-B8WyetH7.js";import"./GoogleIcon-otZKZxkT.js";import"./WaitingRoomIcon-DZ6w0DNy.js";import"./AnimatedClockIcon-CuL56U1F.js";import"./LikeFilled-C9Lk6_Kc.js";import"./WarningOutlined-_RYs8tjc.js";import"./StarIcon-DRWGAGuo.js";import"./StarFilled-wMvtN6BX.js";import"./StepBackwardOutlined-T9fgE2CO.js";import"./TrophyOutlined-CrBFTr7z.js";import"./RankingBoard-Dqw7Uqel.js";import"./CaretUpOutlined-DxkzUpnY.js";import"./TheEndIcon-D16ckRXq.js";import"./ArrowRightOutlined-BKV4shdl.js";import"./progress-DR0Qiruo.js";import"./Medal-DCOn6TnU.js";function Ss({state:r}){return e.jsx(K,{phase:r?.phase,allowedPhase:ae.DEFAULT.WAIT,className:"setup",children:e.jsxs("div",{className:"phase-announcement",children:[e.jsx(Ee,{children:e.jsx(m,{pt:"Processando...",en:"Processing..."})}),e.jsx(Oe,{className:"phase-announcement__icon"}),e.jsx(H,{children:e.jsx(m,{pt:"Aguarde um momento",en:"Just a moment"})})]})})}const O={MAP_BUILDING:"MAP_BUILDING",PATH_FOLLOWING:"PATH_FOLLOWING",RESULTS:"RESULTS"},De={SUBMIT_MAP:"SUBMIT_MAP",SUBMIT_PATH:"SUBMIT_PATH"},I=7,q=5,N={UP:"UP",RIGHT:"RIGHT",DOWN:"DOWN",LEFT:"LEFT",UP_LEFT:"UP_LEFT",UP_RIGHT:"UP_RIGHT",DOWN_LEFT:"DOWN_LEFT",DOWN_RIGHT:"DOWN_RIGHT"},Ns=15;function Ps(r){const{translate:s}=ce(),n=Re({actionName:"submit-map",onSuccess:()=>r(2),onError:()=>r(0),successMessage:s("Mapa submetido com sucesso","Map submitted successfully"),errorMessage:s("Vixi, o aplicativo encontrou um erro ao tentar enviar seu mapa","Oops, the application found an error while trying to submit your map")});return o=>{n({action:De.SUBMIT_MAP,...o})}}function ws(r){const{translate:s}=ce(),n=Re({actionName:"submit-path",onSuccess:()=>r(2),onError:()=>r(0),successMessage:s("Caminho submetido com sucesso","Path submitted successfully"),errorMessage:s("Vixi, o aplicativo encontrou um erro ao tentar enviar seu caminho","Oops, the application found an error while trying to submit your path")});return o=>{n({action:De.SUBMIT_PATH,...o})}}function U({id:r,text:s,width:n=100,className:o}){if(typeof r=="string"){const[t,i]=rs(r);return e.jsxs("div",{className:P("tree-card",o),style:{width:`${n}px`},children:[e.jsx(ts,{source:t,id:i,width:n,title:s}),e.jsx(le,{title:s,children:e.jsx("div",{className:"tree-card__text",children:s})})]})}return e.jsx(ke,{id:String(r),text:s,width:n,className:o})}function Cs({forest:r,map:s,newMap:n}){if(!n||!s)return null;const o=(s??[]).filter(t=>!t.passed);return e.jsx(R,{wrap:!0,children:o.map((t,i)=>{const{treeId:a,passed:l}=t,d=r[a],x=n?.[i];return e.jsxs("div",{className:"map-builder__segment",children:[!!x&&e.jsxs("div",{className:"map-builder__card map-builder__card--new",children:[x.text,x?.negate&&e.jsx(f,{icon:e.jsx(F,{}),size:"small",className:"map-builder__card-no"})]}),t.clues.map(u=>e.jsxs("div",{className:"map-builder__card",children:[u.text,u?.negate&&e.jsx(f,{icon:e.jsx(F,{}),size:"small",className:"map-builder__card-no"})]},`card-${t.index}-${u.id}`)),e.jsx(U,{id:d.treeType,text:l?"":d.card.text})]},a)})})}const E=r=>{const[s,n]=r;return s+n*I},Q=r=>{const s=r%I,n=Math.floor(r/I);return[s,n]},Es=r=>{const s=Q(r),[n,o]=s;return n===0?N.LEFT:n===I-1?N.RIGHT:o===0?N.UP:o===q-1?N.DOWN:null},oe=(r,s)=>{const[n,o]=Q(r),[t,i]=Q(s),a=t-n+(i-o)*I;return a===1?N.RIGHT:a===-1?N.LEFT:a===I?N.DOWN:a===-I?N.UP:a===I+1?N.DOWN_RIGHT:a===I-1?N.DOWN_LEFT:a===-I+1?N.UP_RIGHT:a===-I-1?N.UP_LEFT:N.UP},fe=(r,s)=>{const[n,o]=Q(r),t=[],i=[n,o-1],a=E(i);i[1]>=0&&!s.includes(a)&&t.push(i);const l=[n+1,o],d=E(l);l[0]<I&&!s.includes(d)&&t.push(l);const x=[n,o+1],u=E(x);x[1]<q&&!s.includes(u)&&t.push(x);const h=[n-1,o],S=E(h);h[0]>=0&&!s.includes(S)&&t.push(h);const b=[n-1,o-1],T=E(b);b[0]>=0&&b[1]>=0&&!s.includes(T)&&t.push(b);const v=[n+1,o-1],C=E(v);v[0]<I&&v[1]>=0&&!s.includes(C)&&t.push(v);const w=[n-1,o+1],p=E(w);w[0]>=0&&w[1]<q&&!s.includes(p)&&t.push(w);const c=[n+1,o+1],j=E(c);return c[0]<I&&c[1]<q&&!s.includes(j)&&t.push(c),t.map(_=>E(_))},Ms=(r,s)=>{if(!s)return[];const n=r.filter(o=>o.passed).map(o=>o.treeId);return fe(s.previousTree??s.treeId,n).filter(o=>o!==s.treeId)},Fs=(r,s)=>{const n=s.map,o=n.filter(i=>i.active),t={};if(o[0].index>0){const i=n[o[0].index-1];t[i.treeId]=Object.keys(r).filter(a=>a!==s.id)}return Object.values(r).forEach(i=>{const a=i.history[s.id];a&&o.forEach((l,d,x)=>{const u=a[l.index];if(u)if(d===x.length-1)u.forEach(h=>{t[h]===void 0&&(t[h]=[]),t[h].push(i.id)});else{const h=u?.[u.length-1];t[h]===void 0&&(t[h]=[]),t[h].push(i.id)}})}),t},As=(r,s,n)=>{const o=s[0],t={},i=r.history[n];if(i){const a=i[o.index];a&&a.forEach(l=>{t[l]===void 0&&(t[l]=[]),t[l].push(r.id)})}return t},Rs=(r,s)=>{const o=(s.map??[]).filter(i=>!i.passed),t={};return Object.values(r).forEach(i=>{const a=i.history[s.id];a&&o.forEach((l,d,x)=>{const u=a[l.index];if(u)if(d===x.length-1)u.forEach(h=>{t[h]===void 0&&(t[h]=[]),t[h].push(i.id)});else{const h=u?.[u.length-1];t[h]===void 0&&(t[h]=[]),t[h].push(i.id)}})}),t},Os=(r,s,n=!1,o=[])=>{const t=de.union(r.filter(i=>i.passed).map(i=>i.treeId),o);return s.map(i=>{const a=fe(t[t.length-1],t),l=i.treeId,d=n?Te([...a,l]):Te(a);return t.push(d),d})};function Ls(){const r=Ge({initialWidth:300,initialHeight:300}),[s,n]=M.useState(r);return M.useEffect(()=>{const o=document.getElementById("screen");o&&n({width:Math.min(o.clientWidth,r.width),height:Math.min(o.clientHeight,r.height)})},[r.width,r.height]),[s.width,s.height]}function Ne({segment:r,tree:s,startingTeeId:n,finalTreeId:o,currentTreeId:t,showPath:i=!1,showArrow:a=!1,className:l="",hidePassedTreeNames:d=!1,width:x=75}){const u=!!r,h=n===s.id,S=Es(s.id),b=o===s.id,T=t===s.id,v=(r?.passed&&!T)??!1;return e.jsxs("div",{className:P("forest__tree",h&&`forest__tree--${S}`,b&&i&&"forest__tree--goal",u&&i&&"forest__tree--segment",v&&"forest__tree--passed",T&&"forest__tree--current",l),children:[e.jsx(U,{id:s.treeType,text:r?.passed&&d?"":s.card.text,width:x}),i&&b&&e.jsx(f,{icon:e.jsx(os,{}),size:"large",className:`forest__end forest__end--${r.direction}`}),T&&e.jsx("div",{className:"forest__compass",children:e.jsx(f,{icon:e.jsx(We,{}),size:"large",className:P("forest__compass-icon",V("pulse",{infinite:!0}))})}),h&&e.jsx(f,{icon:e.jsx(xe,{}),size:"large",className:`forest__start forest__start--${S}`}),(a||i||v)&&!b&&u&&r.direction&&e.jsxs(e.Fragment,{children:[e.jsx("span",{className:P(`forest__arrow-line forest__arrow-line--${r.direction}`,u&&i&&"forest__tree--segment",v&&"forest__tree--passed",T&&"forest__tree--current")}),e.jsx(f,{icon:e.jsx(z,{}),size:"large",className:`forest__arrow forest__arrow--${r.direction}`})]})]})}function $({forest:r,map:s=[],showPath:n,actions:o,players:t,size:i="large",hidePassedTreeNames:a=!1,user:l=Ve,forestBorderColor:d="transparent",playerMapping:x}){const[u]=Ls(),h=qe(7,{gap:16,minWidth:60,maxWidth:100});if(!r||!s||s.length===0||!u)return e.jsx(R,{vertical:!0,children:e.jsx(f,{icon:e.jsx(Oe,{}),size:"large"})});const S=s?.[0]?.treeId,b=s.reduce((j,_)=>(j[_.treeId]=_,j),{}),T=de.findLast(s,j=>j.passed)?.treeId??S,v=s[s.length-1]?.treeId,C=150*7+72,c=Math.min(C,u*(i==="small"?.5:.9))/C;return e.jsx("div",{className:"forest-container-area",children:e.jsx(ns,{initialScale:c,minScale:.5,maxScale:4,wheel:{step:.05,disabled:!0},centerOnInit:!0,children:({zoomIn:j,zoomOut:_,resetTransform:G})=>e.jsxs(e.Fragment,{children:[e.jsx(we,{position:"top",zoomIn:j,zoomOut:_,resetTransform:G}),e.jsx(we,{position:"bottom",zoomIn:j,zoomOut:_,resetTransform:G}),e.jsx(as,{wrapperClass:P("forest-container",i==="small"&&"forest-container--small"),children:e.jsx("div",{className:"forest",style:{borderColor:d},children:r.map(g=>{const _e=b?.[g.id];if(o){const{selection:A=[],clickableTrees:Ue,onSelectTree:$e,activeTree:ve,disabled:k}=o,B=Ue.includes(g.id),se=B||A.includes(g.id);if(se){const re=A.includes(g.id),ye=ve===g.id,be=A.indexOf(g.id);return e.jsxs(ls,{className:P("forest__tree-container forest__tree-button",B&&k&&"forest__tree-button--disabled"),onClick:()=>{(se&&!k||se&&k&&!B)&&$e(g.id)},children:[e.jsx(Ne,{segment:_e,tree:g,startingTeeId:S,finalTreeId:v,currentTreeId:T,showPath:n,className:P(B&&!k&&"forest__tree--clickable",re&&"forest__tree--selected",ye&&"forest__tree--active"),width:h}),re&&T!==g.id&&e.jsxs(e.Fragment,{children:[e.jsx("span",{className:P(`forest__arrow-from-line forest__arrow-from-line--${oe(A[be-1],g.id)}`,re&&"forest__tree--selected",ye&&"forest__tree--active")}),e.jsx(f,{icon:e.jsx(z,{}),size:"large",className:P(`forest__arrow-to forest__arrow-to--${oe(A[be-1],g.id)}`)})]}),B&&!k&&e.jsx(f,{icon:e.jsx(z,{}),size:"large",className:P(`forest__arrow-to forest__arrow-to--${oe(A[A.length-1]??ve,g.id)}`)}),e.jsx(Se,{condition:!!t&&!!x?.[g.id],children:e.jsx("div",{className:"forest__players",children:!!t&&e.jsx(Pe,{players:t,playerIds:x?.[g.id]??[],user:l})})})]},`tree-${g.id}`)}}return e.jsxs("div",{className:"forest__tree-container",children:[e.jsx(Ne,{segment:_e,tree:g,startingTeeId:S,finalTreeId:v,currentTreeId:T,showPath:n,hidePassedTreeNames:a,width:h}),e.jsx(Se,{condition:!!t&&!!x?.[g.id],children:e.jsx("div",{className:"forest__players",children:!!t&&e.jsx(Pe,{players:t,playerIds:x?.[g.id]??[],user:l})})})]},`tree-${g.id}`)})})})]})})})}function Pe({players:r,playerIds:s,user:n}){const{translate:o}=ce(),t=s.map(i=>r[i]);return e.jsx(cs,{list:t,user:n,tooltipPrefix:o("Último lugar visitado por: ","Last visited place by: ")})}function we({zoomIn:r,zoomOut:s,resetTransform:n,position:o}){return e.jsx(Ie,{className:P("forest-container-controls",`forest-container-controls--${o}`),justify:"center",children:e.jsxs(Ie,{children:[e.jsx(W,{onClick:()=>r(.1),size:"small",children:e.jsx(Ye,{})}),e.jsx(W,{onClick:()=>s(.1),size:"small",children:e.jsx(Qe,{})}),e.jsx(W,{onClick:()=>n(),size:"small",children:e.jsx(is,{})})]})})}function Ce({children:r}){return e.jsx(je,{icon:e.jsx(We,{}),children:r})}function J({children:r}){return e.jsx(je,{icon:e.jsx(ee,{}),children:r})}function X({children:r}){return e.jsx(je,{icon:e.jsx(ie,{}),children:r})}function ks({user:r,forest:s,onSubmitMap:n}){const o=r?.map??[],t=o.filter(p=>!p.passed),i=t.map(p=>p.clues),[a,l]=M.useState(t.map(p=>null)),[d,x]=M.useState(0),[u,h]=M.useState([]),S=p=>{l(c=>{const j=[...c];return j[d]={...p},j}),x(c=>c+1)},b=p=>{l(c=>{const j=[...c];return j[d]=null,j}),h(c=>[...c,p]),x(c=>c+1)},T=p=>{l(c=>[...c].map((_,G)=>G<p?_:null)),h(c=>c.filter(j=>j!==p)),x(p)},v=p=>{l(c=>{const j=[...c??[]];return j[p]&&(j[p].negate=!j[p]?.negate),j})},C=a.map(p=>p?.id).filter(Boolean),w=Ms(o,t?.[d]);return e.jsxs(e.Fragment,{children:[e.jsx(R,{className:"map-builder",wrap:!0,children:t.map((p,c)=>{if(p.passed)return null;const j=s[p.treeId];return j?e.jsxs("div",{className:"map-builder__segment",children:[d===c&&e.jsx("div",{className:"map-builder__caret",children:e.jsx(f,{icon:e.jsx(ds,{}),className:V("bounce",{speed:"slow",infinite:!0}),size:"small"})}),!!a[c]&&e.jsx(le,{title:e.jsx(m,{pt:`Clique para negar: Não-${a?.[c]?.text}`,en:`Click to negate: Non-${a?.[c]?.text}`}),children:e.jsxs(te,{onClick:()=>v(c),disabled:!a?.[c],className:"map-builder__card map-builder__card--new",children:[a?.[c]?.negate&&e.jsx(f,{icon:e.jsx(F,{}),size:"small",className:"map-builder__card-no"}),a?.[c]?.text]})}),(i?.[c]??[]).map(_=>e.jsxs("div",{className:"map-builder__card",children:[_?.negate&&e.jsx(f,{icon:e.jsx(F,{}),size:"small",className:"map-builder__card-no"}),_.text]},_.id)),e.jsx(te,{onClick:()=>T(c),disabled:!(a?.[c]||u.includes(c)),children:e.jsx(U,{id:j.treeType,text:j.card.text})})]},`map-segment-${p.index}`):null})}),w.length>0&&e.jsxs(Me,{className:"contained",wrap:!0,children:[e.jsxs("strong",{children:[e.jsx(m,{pt:"Caminhos possíveis para a árvore atual",en:"Possible paths for the current tree"}),":"]}),w.map((p,c)=>e.jsx(us,{className:V("tada",{delay:c}),children:s?.[p]?.card?.text},`highlighted-possibility-${p}`))]}),e.jsxs(ze,{title:e.jsx(m,{pt:"Cartas",en:"Hand"}),contained:!0,children:[(r.hand??[]).map(p=>e.jsx(te,{onClick:()=>S(p),disabled:C.includes(p.id)||d>=t.length,className:"map-builder__card-button",children:e.jsx(ps,{hideHeader:!0,children:p.text})},p.id)),e.jsx(W,{size:"large",type:"default",onClick:()=>b(d),disabled:!i?.[d]?.length,children:e.jsx(m,{pt:"Pular árvore",en:"Skip tree"})})]}),e.jsx(R,{children:e.jsx(Fe,{size:"large",disabled:C.length===0,onClick:()=>n({newMap:a}),children:e.jsx(m,{pt:"Enviar Mapa",en:"Submit Map"})})})]})}function Bs({players:r,user:s,announcement:n,forest:o,currentRound:t,onSubmitMap:i}){Be();const a=Rs(r,s);return e.jsxs(D,{fullWidth:!0,announcement:n,children:[e.jsx(Z,{children:t===1?e.jsx(m,{pt:"Construa o seu mapa",en:"Build your map"}):e.jsx(m,{pt:"Expanda seu mapa",en:"Expand your map"})}),e.jsx(L,{type:"rule",children:e.jsx(m,{pt:e.jsxs(e.Fragment,{children:["Você precisa ajudar os outros jogadores a descobrirem o seu caminho pela floresta.",e.jsx("br",{}),"Começando da ",e.jsx(Ce,{children:"bússola"}),", escolha 1 carta para cada árvore do caminho.",e.jsx("br",{}),"Você ganha ",e.jsx(y,{children:"pontos"})," se jogadores adivinharem seu caminho, então tente fazer um bom trabalho."]}),en:e.jsxs(e.Fragment,{children:["You need to help the other players to discover your path through the forest.",e.jsx("br",{}),"Starting from the ",e.jsx(Ce,{children:"compass"}),", choose 1 card for each tree of the path.",e.jsx("br",{}),"You earn ",e.jsx(y,{children:"points"})," if players guess your path correctly, so try to do a good job."]})})}),e.jsx($,{forest:o,map:s.map,showPath:!0,hidePassedTreeNames:!0,players:r,playerMapping:a}),e.jsx(L,{type:"action",children:e.jsx(m,{pt:e.jsxs(e.Fragment,{children:["Clique nas cartas em sequência para definir seu mapa, uma carta por árvore.",e.jsx("br",{}),"Você pode fazer quantos segmentos quiser desde que pelo menos uma carta esteja em cada árvore (dessa rodada ou de uma rodada anterior já que as cartas são cumulativas).",e.jsx("br",{}),"Na barra abaixo, se quiser negar ",e.jsx(f,{icon:e.jsx(F,{}),size:"small"})," um adjectivo selecionado, clique nele acima da árvore para trocar.",e.jsx("br",{}),"Se quiser refazer uma árvore ",e.jsx(f,{icon:e.jsx(ie,{}),size:"small"}),", clique nela.",e.jsx("br",{}),"Quando você estiver pronto, aperte Enviar Mapa."]}),en:e.jsxs(e.Fragment,{children:["Click on the cards in sequence to define your map, you can't skip any tree.",e.jsx("br",{}),"You can build as many segments you with as long as there is at least one card on each tree (from this round or a previous one since the cards are cumulative).",e.jsx("br",{}),"If you want to negate ",e.jsx(f,{icon:e.jsx(F,{}),size:"small"})," an adjective you selected, click on it below the tree to change.",e.jsx("br",{}),"If you want to redo a tree ",e.jsx(f,{icon:e.jsx(ie,{}),size:"small"}),", click on it.",e.jsx("br",{}),"When you are ready, press Submit Map."]})})}),e.jsx(ks,{user:s,forest:o,onSubmitMap:i})]})}function Ws({user:r,announcement:s,forest:n}){return e.jsxs(D,{fullWidth:!0,announcement:s,children:[e.jsx(Z,{children:e.jsx(m,{pt:"Todos os jogadores já descobriam seu mapa completamente",en:"All players have discovered your map completely"})}),e.jsx(H,{contained:!0,children:e.jsx(m,{pt:e.jsx(e.Fragment,{children:"Aguarde pacientemente, você ainda vai participar na hora de adivinhar."}),en:e.jsx(e.Fragment,{children:"Sit and wait patiently, you will still participate when it's time to guess."})})}),e.jsx($,{forest:n,map:r.map,showPath:!0})]})}function zs({players:r,state:s}){const n=pe(r,s),{step:o,setStep:t}=ue(),i=Ps(t),a=e.jsx(me,{icon:e.jsx(ee,{}),title:s.round.current===1?e.jsx(m,{pt:"Construa o seu mapa",en:"Build your map"}):e.jsx(m,{pt:"Expanda seu mapa",en:"Expand your map"}),currentRound:s?.round?.current,type:"overlay",children:e.jsx(H,{children:e.jsx(m,{pt:"Você consegue mapear as árvores usando apenas adjetivos?",en:"Can you map the tree path using only adjectives?"})})}),l=n?.map?.every(d=>d.passed);return e.jsx(K,{phase:s?.phase,allowedPhase:O.MAP_BUILDING,children:e.jsx(he,{step:o,players:r,waitingRoom:{content:e.jsx(Cs,{forest:s.forest,map:n.map,newMap:n.newMap})},children:e.jsxs(Le,{condition:l,children:[e.jsx(Ws,{user:n,announcement:a,forest:s.forest}),e.jsx(Bs,{players:r,user:n,announcement:a,forest:s.forest,currentRound:s.round.current,onSubmitMap:i})]})})})}function He({segment:r,tree:s,showArrow:n,className:o}){return e.jsxs("div",{className:P("map-entry",o),children:[s&&e.jsx(U,{id:s.treeType,text:s.card.text,className:"map-entry__tree"}),e.jsx(f,{icon:e.jsx(ee,{}),size:"large",className:"map-entry__icon"}),r.clues.map(t=>e.jsxs("div",{className:"map-entry__clue",children:[t.text,t?.negate&&e.jsx(f,{icon:e.jsx(F,{}),size:"small",className:"map-entry__clue-no"})]},`clue-${r.index}-${t.id}`)),n&&e.jsx(f,{icon:e.jsx(z,{}),size:"small",className:"map-entry__arrow"})]},`map-${r.index}`)}const Ds={id:0,treeType:0,card:{id:"",text:""}};function ge({map:r=[],selectedTrees:s=[],fullMap:n=!1}){const o=n?r:r.filter(t=>t.active);return e.jsx(R,{wrap:!0,className:"player-map",style:{gridTemplateColumns:`repeat(${o.length}, 100px)`},children:o.map((t,i,a)=>{const l=s[i+1],d=n&&a.length-1===i?Ds:void 0;return e.jsx(He,{className:"player-map__segment",tree:d??l,segment:t,showArrow:a.length-1!==i},`map-${t.index}`)})})}function Hs({forest:r,map:s=[],onSubmitPath:n,pathId:o,user:t,players:i}){const a=s.filter(c=>!c.passed&&c.clues.length>0),l=de.findLast(s,c=>c.passed)?.treeId??s?.[0]?.treeId??0,d=s.filter(c=>c.passed).map(c=>c.treeId),x=As(t,a,o),[u,h]=M.useState([l]),[S,b]=M.useState(l),T=fe(S,[...u,...d]),v=u.length>a.length,C=c=>{b(c);const j=u.indexOf(c);j>-1?h(_=>_.slice(0,j+1)):h(_=>[..._,c])},w=u.map(c=>r[c]),p=a?.[u.length-1];return Be(),e.jsxs(R,{vertical:!0,children:[e.jsx(ge,{map:s,selectedTrees:w}),e.jsx(js,{active:!!p,children:e.jsx(He,{segment:p,className:V("rubberBand")},p?.treeId)}),e.jsx(Fe,{size:"large",onClick:()=>n({guess:u.slice(1),pathId:o,choseRandomly:!1}),disabled:u.length-1<a.length,children:e.jsx(m,{pt:"Concluir",en:"Submit"})}),e.jsx(xs,{onClick:()=>n({guess:Os(s,a,!0,Object.values(x).flat().map(Number)),pathId:o,choseRandomly:!0}),ghost:!0,children:"Random Dev"}),e.jsx($,{forest:r,map:s,actions:{selection:u,clickableTrees:T,onSelectTree:C,activeTree:S,disabled:v},playerMapping:x,players:i})]})}function Us({players:r,announcement:s,forest:n,activePlayer:o,onSubmitPath:t,user:i}){const a=Object.keys(r).length;return e.jsxs(D,{fullWidth:!0,announcement:s,children:[e.jsx(Z,{children:e.jsx(m,{pt:e.jsxs(e.Fragment,{children:["Siga o mapa de ",e.jsx(Y,{player:o})]}),en:e.jsxs(e.Fragment,{children:["Follow ",e.jsx(Y,{player:o}),"'s map"]})})}),e.jsx(L,{type:"action",children:e.jsx(m,{pt:e.jsxs(e.Fragment,{children:["Baseado no ",e.jsx(J,{children:"mapa de adjetivos"}),", clique nas"," ",e.jsx(X,{children:"árvores"})," circuladas de pontinhos brancos para escolher aquele caminho.",e.jsx("br",{}),"Cada árvore correta vale ",e.jsx(y,{children:"1 ponto"})," por jogador que acertar (Por exemplo, 3 jogadores = 3 pontos).",e.jsx("br",{}),"Então, talvez valha a pena discutir! Porém, se somente um jogador acertar o caminho, ele ganha"," ",e.jsxs(y,{children:[a," pontos"]}),".",e.jsx("br",{}),"O criador do mapa ganha o mesmo número de pontos que os jogadores."]}),en:e.jsxs(e.Fragment,{children:["Based on the ",e.jsx(J,{children:"adjectives map"}),", click on the"," ",e.jsx(X,{children:"circled trees"})," with white dots to choose that path.",e.jsx("br",{}),"Each correct tree is worth ",e.jsx(y,{children:"1 point"})," per player that guesses it (For example, 3 players = 3 points).",e.jsx("br",{}),"So, it might be worth discussing out loud! However, if only one player guesses the path, they earn ",e.jsxs(y,{children:[a," points"]}),".",e.jsx("br",{}),"The map creator also earns the same number of points as the players."]})})}),!!n&&o.map&&e.jsx(Hs,{forest:n,map:o.map,onSubmitPath:t,pathId:o.id,user:i,players:r})]})}function $s({players:r,announcement:s,forest:n,activePlayer:o}){const t=Object.keys(r).length;return e.jsxs(D,{fullWidth:!0,announcement:s,children:[e.jsx(Z,{children:e.jsx(m,{pt:e.jsx(e.Fragment,{children:"Os jogadores estão seguindo o seu mapa!"}),en:e.jsx(e.Fragment,{children:"Players are following your map!"})})}),e.jsx(L,{type:"wait",children:e.jsx(m,{pt:e.jsxs(e.Fragment,{children:["Baseado no ",e.jsx(J,{children:"mapa de adjetivos"}),", eles vão clicando nas"," ",e.jsx(X,{children:"árvores"})," para escolher o caminho.",e.jsx("br",{}),"Cada árvore correta vale ",e.jsx(y,{children:"1 ponto"})," por jogador que acertar. Por exemplo, 3 jogadores = 3 pontos.",e.jsx("br",{}),"Se somente um jogador acertar o caminho, ele ganha"," ",e.jsxs(y,{children:[t," pontos"]}),".",e.jsx("br",{}),"Você, como criador do mapa, ganha o mesmo número de pontos que os jogadores."]}),en:e.jsxs(e.Fragment,{children:["Based on the ",e.jsx(J,{children:"adjectives map"}),", players will click on the"," ",e.jsx(X,{children:"trees"})," to choose the path.",e.jsx("br",{}),"Each correct tree is worth ",e.jsx(y,{children:"1 point"})," per player that guesses it. For example, 3 players = 3 points.",e.jsx("br",{}),"If only one player guesses the path, they earn"," ",e.jsxs(y,{children:[t," points"]}),".",e.jsx("br",{}),"You as the map creator also earns the same number of points as the players."]})})}),e.jsx(ge,{map:o.map}),e.jsx($,{forest:n,map:o.map,showPath:!0})]})}function Gs({players:r,state:s}){const n=pe(r,s),{step:o,setStep:t}=ue(),[i,a]=ms("activePlayerId",s,r),l=ws(t),d=e.jsx(me,{icon:e.jsx(es,{}),title:e.jsx(m,{pt:"Siga os mapas!",en:"Follow the maps!"}),currentRound:s?.round?.current,type:"overlay",duration:3,children:e.jsxs(H,{children:[e.jsx(m,{pt:"Vamos analisar e tentar seguir o mapa de cada jogador",en:"Let's analise and try to follow the each player's map"}),e.jsx("br",{}),e.jsx(hs,{players:r,order:s.turnOrder,activePlayerId:s.activePlayerId})]})});return e.jsx(K,{phase:s?.phase,allowedPhase:O.PATH_FOLLOWING,children:e.jsx(he,{step:o,players:r,children:e.jsxs(Le,{condition:a,children:[e.jsx($s,{players:r,announcement:d,forest:s.forest,activePlayer:i}),e.jsx(Us,{players:r,user:n,announcement:d,forest:s.forest,onSubmitPath:l,activePlayer:i,isTheActivePlayer:a})]})})})}function qs({players:r,ranking:s,onGoBack:n,round:o}){return e.jsxs(_s,{players:r,ranking:s,gainedPointsDescriptions:[e.jsx(m,{pt:"Rotas corretos",en:"Correct paths"},"1"),e.jsx(m,{pt:"Pontos por sua rota",en:"Points for your route"},"2")],children:[e.jsx(L,{type:"event",children:e.jsx(m,{pt:"Não se preocupe se você ficou pra trás! O jogador mais a frente de cada rota, te gritou e você conseguiu encontrá-lo.",en:"Don't worry if you were left behind! The player furthest ahead on that route, call you and you caught up"})}),e.jsx(R,{children:e.jsx(W,{onClick:n,children:e.jsx(m,{pt:"Ver resultado novamente",en:"See results again"})})}),e.jsx(Xe,{round:o})]})}function Vs({players:r,forest:s,currentPlayer:n}){const o=n.map.filter(t=>t.active);return e.jsx("div",{className:"div-container player-map",style:{gridTemplateColumns:`repeat(${o.length}, 120px)`},children:o.map((t,i,a)=>{const l=t.passed?s[t.treeId]:null;return e.jsxs("div",{className:"player-map__segment",children:[e.jsxs("div",{className:"player-map__top",children:[l?e.jsx(U,{id:l.treeType,text:l.card.text,className:"player-map__tree",width:75}):e.jsx(ke,{id:"1",className:"player-map__tree-invisible",text:"",width:75}),e.jsx(f,{icon:e.jsx(ee,{}),size:"large",className:"player-map__icon"}),e.jsx("div",{children:t.clues.map(d=>e.jsxs("div",{className:"player-map__clue",children:[d.text,d?.negate&&e.jsx(f,{icon:e.jsx(F,{}),size:"small",className:"player-map__clue-no"})]},`clue-${t.index}-${d.id}`))}),t.index===0&&e.jsx(f,{icon:e.jsx(xe,{}),size:"small",className:"player-map__starting-flag"}),a.length-1!==i&&e.jsx(f,{icon:e.jsx(z,{}),size:"small",className:"player-map__arrow"})]}),e.jsxs("div",{className:"player-map__scoring",children:[t.playersIds.length>0?e.jsx("div",{className:"player-map__players",children:t.playersIds.map(d=>{const x=r[d];return e.jsx(le,{title:x.name,children:e.jsx(vs,{size:"small",id:x.avatarId})},`player-${d}`)})}):e.jsx("div",{className:"player-map__no-players",children:e.jsx(m,{pt:"Nenhum jogador",en:"No players"})}),e.jsx("div",{children:t.score>0&&e.jsx(y,{children:t.score})})]})]},`map-${t.index}`)})})}function Ys({players:r,gallery:s,user:n,forest:o,slideShowConfig:t}){const i=Object.keys(r).length,a=s[t.slideIndex],l=ne(a.avatarId),d=Fs(r,a);return e.jsxs(D,{fullWidth:!0,children:[e.jsx(Ee,{children:e.jsx(m,{pt:e.jsxs(e.Fragment,{children:["Mapa do(a) ",e.jsx(Y,{player:a})]}),en:e.jsxs(e.Fragment,{children:[e.jsx(Y,{player:a}),"'s map"]})})}),e.jsx(L,{type:"rule",children:e.jsx(m,{pt:e.jsxs(e.Fragment,{children:["Você ganha pontos ao acertar o caminho do mapa. ",e.jsx("br",{}),"Cada árvore correta vale ",e.jsx(y,{children:"1 ponto"})," por jogador que acertar."," ",e.jsx("br",{}),"Se você for o único que acertou, você ganha"," ",e.jsxs(y,{children:[i," pontos"]}),"."]}),en:e.jsxs(e.Fragment,{children:["You get points by guessing the map path. ",e.jsx("br",{}),"Each correct tree is worth ",e.jsx(y,{children:"1 point"})," per player who guesses it."," ",e.jsx("br",{}),"If you are the only one who guessed it, you get"," ",e.jsxs(y,{children:[i," points"]}),"."]})})}),e.jsx(Vs,{players:r,forest:o,currentPlayer:a}),e.jsxs("div",{children:[e.jsx($,{forest:o,map:a.map,size:"small",players:r,user:n,forestBorderColor:ne(a.avatarId),playerMapping:d}),e.jsx(fs,{config:t,barColor:l})]})]})}function Qs({players:r,state:s}){const n=pe(r,s),{step:o,goToPreviousStep:t,goToNextStep:i}=ue(),a=M.useMemo(()=>Ae(r).filter(x=>x.map.some(u=>u.active)),[r]),l=gs({length:a.length,slideDuration:Ns,onExpire:i}),d=()=>{l.reset(),t()};return e.jsx(K,{phase:s?.phase,allowedPhase:O.RESULTS,children:e.jsxs(he,{step:o,players:r,children:[e.jsx(me,{icon:e.jsx(ss,{}),title:e.jsx(m,{pt:"Resultado",en:"Results"}),currentRound:s?.round?.current,type:"block",onClose:i,unskippable:!0,children:e.jsx(H,{children:e.jsx(m,{pt:"Quem é o melhor em seguir direções?",en:"Who is the best at following directions?"})})}),e.jsx(Ys,{gallery:a,players:r,slideShowConfig:l,forest:s.forest,user:n}),e.jsx(qs,{players:r,round:s.round,ranking:s.ranking,onGoBack:d})]})})}function Js({state:r,players:s}){const n=Ae(s),o=r.forest??[];return e.jsxs(bs,{state:r,players:s,announcementIcon:e.jsx(xe,{}),children:[e.jsx(Ts,{players:s,achievements:r.achievements,reference:Is}),e.jsx(ze,{title:e.jsx(m,{pt:"Mapas dos Jogadores",en:"Players' Maps"}),children:n.map(t=>{const i=(t.map??[]).map(a=>o[a.treeId]);return e.jsxs(Me,{className:"game-over-strip",style:{borderColor:ne(t.avatarId)},children:[e.jsx(ys,{player:t,withName:!0,className:"game-over-avatar-strip"}),e.jsx(ge,{map:t.map,fullMap:!0,selectedTrees:i})]},t.id)})})]})}function Xs(r){switch(r.phase){case ae.DEFAULT.WAIT:return Ss;case O.MAP_BUILDING:return zs;case O.PATH_FOLLOWING:return Gs;case O.RESULTS:return Qs;case ae.DEFAULT.GAME_OVER:return Js;default:return Ze}}function gt(){return e.jsx(Ke,{gameCollection:Je.LABIRINTO_SECRETO,getActiveComponent:Xs})}export{gt as default};
