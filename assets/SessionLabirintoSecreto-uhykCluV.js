import{j as e,i as ze,T as j,f as _e,e as C,aL as ge,aK as U,I as _,ei as ls,ej as $e,bw as ds,bz as us,b5 as Ve,cN as Pe,bA as ps,cj as ms,cf as hs,k as xs,r as M,b1 as J,l as js,ek as fs,bs as Re,B as G,n as ie,s as Ye,cH as Qe,cI as xe,cQ as Xe,aX as _s}from"./index-B83c9TQH.js";import{d as re,i as je,u as Je,S as $,a as te,b as Te,c as Se,P as ve,e as be,k as gs,g as Ts,h as Ss}from"./StepSwitcher-DpzEUkWi.js";import{A as Ke}from"./AnimatedProcessingIcon-DyagUBVt.js";import{I as V}from"./Instruction-IvDPs7BZ.js";import{M as oe,D as vs,P as bs}from"./PathIcon-BH5y5ItT.js";import{V as Ze}from"./ViewOr-CsBd1h52.js";import{N as L}from"./NoIcon-C81rmvh9.js";import{g as Is}from"./ItemCard-CqkzP5JE.js";import{T as es}from"./TreeCard-CGEcRXbG.js";import{S as Es}from"./Sprite-clQlUtYz.js";import{u as ss}from"./useMock-DyCas9aU.js";import{F as ys,C as rs,T as fe}from"./TreeIcon-C65hGwag.js";import{P as O}from"./PointsHighlight-BEsBRa7r.js";import{R as D}from"./RuleInstruction-B5iXMYSs.js";import"./sampleSize-Du-jv_yv.js";import{r as Ns}from"./_baseFlatten-CpNAFkSd.js";import{r as Os}from"./_baseRest-wbDKQJDI.js";import{a as ws,r as As}from"./_arrayIncludesWith-BzIy__D0.js";import{r as Cs}from"./isArrayLikeObject-CZwlBNrD.js";import{r as Ps}from"./findLastIndex-BU-3EQKJ.js";import{T as Rs,a as Fs,R as Ms,b as Ls,c as Ws}from"./index.esm-DHiHM-oG.js";import{A as z}from"./ArrowIcon-CSliukh3.js";import{A as Us}from"./AvatarGroup-BAXvzfsY.js";import{V as Fe}from"./ViewIf-DCU9pM3B.js";import{F as Ie}from"./FlagIcon-Cmmf1-jf.js";import{M as Ee}from"./MetricHighlight-OgaM7s_B.js";import{L as qs}from"./LocationIcon-DBFX0Wzw.js";import{C as Ds}from"./Card-D-p-wknN.js";import{T as ts}from"./TitledContainer-Dq754WQ8.js";import{T as ks}from"./TextHighlight-BfrQTpJU.js";import{u as Hs}from"./useWhichPlayerIsThe-SOKWe0Rc.js";import{T as Bs}from"./TurnOrder-DtpL4zaB.js";import{A as K}from"./AvatarName-DcKrRdR0.js";import{D as Gs}from"./DevButton-Cve33szz.js";import{M as zs}from"./MouseFollowingContent-BONYEHBE.js";import{S as $s,u as Vs}from"./SlideShowControls-CE6BHQr2.js";import{S as Ys}from"./StepRankingWrapper-DfW6_USy.js";import{A as Qs}from"./Avatar-COZjYXIS.js";import{A as Xs}from"./AvatarStrip-CHhCYAko.js";import{G as Js}from"./GameOverWrapper-DjZOIYk2.js";import{A as Ks}from"./Achievements-0zPHj_Dy.js";import"./toFinite-DlvNSgPw.js";import"./speech-CQAlb3m4.js";import"./useDevFeatures-CPgAEBiN.js";import"./RulesModal-BW-pqbDf.js";import"./WritingIcon-DJNif-l_.js";import"./DoubleRightOutlined-Cb8iHebs.js";import"./PurePanel-D6GzHA8p.js";import"./Game-DkYQFeAs.js";import"./useMutation-8jqgbTXR.js";import"./index-C2_d4emY.js";import"./index-FNObLAUU.js";import"./Overflow-DOpqHgGK.js";import"./useEvent-D-difd1N.js";import"./index-BUMrV97I.js";import"./index-B_x3Ec3L.js";import"./GameBanner-CtbWxc3u.js";import"./useTDBaseUrl-BF9foKiS.js";import"./index-CBs8-BCF.js";import"./Loading-GdOJ8GoH.js";import"./useBubbleLock-D7aLmT5n.js";import"./AnimatedLoaderIcon-UJtaa21K.js";import"./InfoCircleOutlined-arLgXxS8.js";import"./index-BlF3bodY.js";import"./SignIn-B3LT7c4F.js";import"./GoogleIcon-CQDoyrU_.js";import"./WaitingRoomIcon-BGs0H-Sw.js";import"./AnimatedClockIcon-DXq4Ch3d.js";import"./WarningOutlined-g8HhVjG5.js";import"./StarIcon-ub_48tQd.js";import"./StarFilled-BwQzFuF_.js";import"./StarFilled-CNctUIhy.js";import"./_copyArray-DyNXx8uz.js";import"./_isIterateeCall-DRTNVfaa.js";import"./constant-BfiDtQIV.js";import"./_defineProperty-mvQNgVI2.js";import"./_baseFindIndex-Ca62E79B.js";import"./StepBackwardOutlined-3l6ZajMT.js";import"./TrophyOutlined-CFFdq-j9.js";import"./RankingBoard-BUtF9L5u.js";import"./CaretUpOutlined-CTN4lzvm.js";import"./TheEndIcon-DWQMhST5.js";import"./ArrowRightOutlined-B5YD9emV.js";import"./useMergedState-Bgw_SNsS.js";import"./progress-B9Tjbynj.js";import"./Medal-31yl3MTr.js";import"./QuestionCircleOutlined-DX19rtzN.js";function Zs({state:r}){return e.jsx(re,{phase:r==null?void 0:r.phase,allowedPhase:je.DEFAULT.WAIT,className:"setup",children:e.jsxs("div",{className:"phase-announcement",children:[e.jsx(ze,{children:e.jsx(j,{pt:"Processando...",en:"Processing..."})}),e.jsx(Ke,{className:"phase-announcement__icon"}),e.jsx(V,{children:e.jsx(j,{pt:"Aguarde um momento",en:"Just a moment"})})]})})}const q={MAP_BUILDING:"MAP_BUILDING",PATH_FOLLOWING:"PATH_FOLLOWING",RESULTS:"RESULTS"},os={SUBMIT_MAP:"SUBMIT_MAP",SUBMIT_PATH:"SUBMIT_PATH"},P=7,X=5,A={UP:"UP",RIGHT:"RIGHT",DOWN:"DOWN",LEFT:"LEFT",UP_LEFT:"UP_LEFT",UP_RIGHT:"UP_RIGHT",DOWN_LEFT:"DOWN_LEFT",DOWN_RIGHT:"DOWN_RIGHT"},er=15;function sr(r){const{translate:s}=_e(),o=Je({actionName:"submit-map",onSuccess:()=>r(2),onError:()=>r(0),successMessage:s("Mapa submetido com sucesso","Map submitted successfully"),errorMessage:s("Vixi, o aplicativo encontrou um erro ao tentar enviar seu mapa","Oops, the application found an error while trying to submit your map")});return n=>{o({action:os.SUBMIT_MAP,...n})}}function rr(r){const{translate:s}=_e(),o=Je({actionName:"submit-path",onSuccess:()=>r(2),onError:()=>r(0),successMessage:s("Caminho submetido com sucesso","Path submitted successfully"),errorMessage:s("Vixi, o aplicativo encontrou um erro ao tentar enviar seu caminho","Oops, the application found an error while trying to submit your path")});return n=>{o({action:os.SUBMIT_PATH,...n})}}function Y({id:r,text:s,width:o=100,className:n}){if(typeof r=="string"){const[t,i]=Is(r);return e.jsxs("div",{className:C("tree-card",n),style:{width:`${o}px`},children:[e.jsx(Es,{source:t,id:i,width:o,title:s}),e.jsx(ge,{title:s,children:e.jsx("div",{className:"tree-card__text",children:s})})]})}return e.jsx(es,{id:String(r),text:s,width:o,className:n})}function tr({forest:r,map:s,newMap:o}){if(!o||!s)return e.jsx(e.Fragment,{});const n=(s??[]).filter(t=>!t.passed);return e.jsx(U,{wrap:!0,children:n.map((t,i)=>{const{treeId:a,passed:p}=t,l=r[a],c=o==null?void 0:o[i];return e.jsxs("div",{className:"map-builder__segment",children:[!!c&&e.jsxs("div",{className:"map-builder__card map-builder__card--new",children:[c.text,(c==null?void 0:c.negate)&&e.jsx(_,{icon:e.jsx(L,{}),size:"small",className:"map-builder__card-no"})]}),t.clues.map(d=>e.jsxs("div",{className:"map-builder__card",children:[d.text,(d==null?void 0:d.negate)&&e.jsx(_,{icon:e.jsx(L,{}),size:"small",className:"map-builder__card-no"})]},`card-${t.index}-${d.id}`)),e.jsx(Y,{id:l.treeType,text:p?"":l.card.text})]},a)})})}const R=r=>{const[s,o]=r;return s+o*P},Z=r=>{const s=r%P,o=Math.floor(r/P);return[s,o]},or=r=>{const s=Z(r),[o,n]=s;return o===0?A.LEFT:o===P-1?A.RIGHT:n===0?A.UP:n===X-1?A.DOWN:null},ce=(r,s)=>{const[o,n]=Z(r),[t,i]=Z(s),a=t-o+(i-n)*P;return a===1?A.RIGHT:a===-1?A.LEFT:a===P?A.DOWN:a===-7?A.UP:a===P+1?A.DOWN_RIGHT:a===P-1?A.DOWN_LEFT:a===-6?A.UP_RIGHT:a===-8?A.UP_LEFT:A.UP},ye=(r,s)=>{const[o,n]=Z(r),t=[],i=[o,n-1],a=R(i);i[1]>=0&&!s.includes(a)&&t.push(i);const p=[o+1,n],l=R(p);p[0]<P&&!s.includes(l)&&t.push(p);const c=[o,n+1],d=R(c);c[1]<X&&!s.includes(d)&&t.push(c);const x=[o-1,n],E=R(x);x[0]>=0&&!s.includes(E)&&t.push(x);const T=[o-1,n-1],v=R(T);T[0]>=0&&T[1]>=0&&!s.includes(v)&&t.push(T);const g=[o+1,n-1],b=R(g);g[0]<P&&g[1]>=0&&!s.includes(b)&&t.push(g);const w=[o-1,n+1],S=R(w);w[0]>=0&&w[1]<X&&!s.includes(S)&&t.push(w);const u=[o+1,n+1],m=R(u);return u[0]<P&&u[1]<X&&!s.includes(m)&&t.push(u),t.map(h=>R(h))},nr=(r,s)=>{if(!s)return[];const o=r.filter(n=>n.passed).map(n=>n.treeId);return ye(s.previousTree??s.treeId,o).filter(n=>n!==s.treeId)},ar=(r,s)=>{const o=s.map,n=o.filter(i=>i.active),t={};if(n[0].index>0){const i=o[n[0].index-1];t[i.treeId]=Object.keys(r).filter(a=>a!==s.id)}return Object.values(r).forEach(i=>{const a=i.history[s.id];a&&n.forEach((p,l,c)=>{const d=a[p.index];if(d)if(l===c.length-1)d.forEach(x=>{t[x]===void 0&&(t[x]=[]),t[x].push(i.id)});else{const x=d==null?void 0:d[d.length-1];t[x]===void 0&&(t[x]=[]),t[x].push(i.id)}})}),t},ir=(r,s,o)=>{const n=s[0],t={},i=r.history[o];if(i){const a=i[n.index];a&&a.forEach(p=>{t[p]===void 0&&(t[p]=[]),t[p].push(r.id)})}return t},cr=(r,s)=>{const n=(s.map??[]).filter(i=>!i.passed),t={};return Object.values(r).forEach(i=>{const a=i.history[s.id];a&&n.forEach((p,l,c)=>{const d=a[p.index];if(d)if(l===c.length-1)d.forEach(x=>{t[x]===void 0&&(t[x]=[]),t[x].push(i.id)});else{const x=d==null?void 0:d[d.length-1];t[x]===void 0&&(t[x]=[]),t[x].push(i.id)}})}),t};var le,Me;function lr(){if(Me)return le;Me=1;function r(){}return le=r,le}var de,Le;function dr(){if(Le)return de;Le=1;var r=ls(),s=lr(),o=$e(),n=1/0,t=r&&1/o(new r([,-0]))[1]==n?function(i){return new r(i)}:s;return de=t,de}var ue,We;function ur(){if(We)return ue;We=1;var r=ds(),s=ws(),o=As(),n=us(),t=dr(),i=$e(),a=200;function p(l,c,d){var x=-1,E=s,T=l.length,v=!0,g=[],b=g;if(d)v=!1,E=o;else if(T>=a){var w=c?null:t(l);if(w)return i(w);v=!1,E=n,b=new r}else b=c?[]:g;e:for(;++x<T;){var S=l[x],u=c?c(S):S;if(S=d||S!==0?S:0,v&&u===u){for(var m=b.length;m--;)if(b[m]===u)continue e;c&&b.push(u),g.push(S)}else E(b,u,d)||(b!==g&&b.push(u),g.push(S))}return g}return ue=p,ue}var pe,Ue;function pr(){if(Ue)return pe;Ue=1;var r=Ns(),s=Os(),o=ur(),n=Cs(),t=s(function(i){return o(r(i,1,n,!0))});return pe=t,pe}var mr=pr();const hr=Ve(mr),xr=(r,s,o=!1,n=[])=>{const t=hr(r.filter(i=>i.passed).map(i=>i.treeId),n);return s.map(i=>{const a=ye(t[t.length-1],t),p=i.treeId,l=o?Pe([...a,p]):Pe(a);return t.push(l),l})};var me,qe;function jr(){if(qe)return me;qe=1;var r=ps(),s=ms(),o=hs();function n(t){return function(i,a,p){var l=Object(i);if(!s(i)){var c=r(a,3);i=o(i),a=function(x){return c(l[x],x,l)}}var d=t(i,a,p);return d>-1?l[c?i[d]:d]:void 0}}return me=n,me}var he,De;function fr(){if(De)return he;De=1;var r=jr(),s=Ps(),o=r(s);return he=o,he}var _r=fr();const ns=Ve(_r);function gr(){const r=xs({initialWidth:300,initialHeight:300}),[s,o]=M.useState(r);return M.useEffect(()=>{const n=document.getElementById("screen");n&&o({width:Math.min(n.clientWidth,r.width),height:Math.min(n.clientHeight,r.height)})},[r.width,r.height]),[s.width,s.height]}function ke({segment:r,tree:s,startingTeeId:o,finalTreeId:n,currentTreeId:t,showPath:i=!1,showArrow:a=!1,className:p="",hidePassedTreeNames:l=!1,width:c=75}){const d=!!r,x=o===s.id,E=or(s.id),T=n===s.id,v=t===s.id,g=((r==null?void 0:r.passed)&&!v)??!1;return e.jsxs("div",{className:C("forest__tree",x&&`forest__tree--${E}`,T&&i&&"forest__tree--goal",d&&i&&"forest__tree--segment",g&&"forest__tree--passed",v&&"forest__tree--current",p),children:[e.jsx(Y,{id:s.treeType,text:r!=null&&r.passed&&l?"":s.card.text,width:c}),i&&T&&e.jsx(_,{icon:e.jsx(ys,{}),size:"large",className:`forest__end forest__end--${r.direction}`}),v&&e.jsx("div",{className:"forest__compass",children:e.jsx(_,{icon:e.jsx(rs,{}),size:"large",className:C("forest__compass-icon",J("pulse",{infinite:!0}))})}),x&&e.jsx(_,{icon:e.jsx(Ie,{}),size:"large",className:`forest__start forest__start--${E}`}),(a||i||g)&&!T&&d&&r.direction&&e.jsxs(e.Fragment,{children:[e.jsx("span",{className:C(`forest__arrow-line forest__arrow-line--${r.direction}`,d&&i&&"forest__tree--segment",g&&"forest__tree--passed",v&&"forest__tree--current")}),e.jsx(_,{icon:e.jsx(z,{}),size:"large",className:`forest__arrow forest__arrow--${r.direction}`})]})]})}function Q({forest:r,map:s=[],showPath:o,actions:n,players:t,size:i="large",hidePassedTreeNames:a=!1,user:p=fs,forestBorderColor:l="transparent",playerMapping:c}){var m,h,y;const[d]=gr(),x=js(7,{gap:16,minWidth:60,maxWidth:100});if(!r||!s||s.length===0||!d)return e.jsx(U,{vertical:!0,children:e.jsx(_,{icon:e.jsx(Ke,{}),size:"large"})});const E=(m=s==null?void 0:s[0])==null?void 0:m.treeId,T=s.reduce((N,F)=>(N[F.treeId]=F,N),{}),v=((h=ns(s,N=>N.passed))==null?void 0:h.treeId)??E,g=(y=s[s.length-1])==null?void 0:y.treeId,b=150*7+72,u=Math.min(b,d*(i==="small"?.5:.9))/b;return e.jsx("div",{className:"forest-container-area",children:e.jsx(Rs,{initialScale:u,minScale:.5,maxScale:4,wheel:{step:.05,disabled:!0},centerOnInit:!0,children:({zoomIn:N,zoomOut:F,resetTransform:k})=>e.jsxs(e.Fragment,{children:[e.jsx(Be,{position:"top",zoomIn:N,zoomOut:F,resetTransform:k}),e.jsx(Be,{position:"bottom",zoomIn:N,zoomOut:F,resetTransform:k}),e.jsx(Fs,{wrapperClass:C("forest-container",i==="small"&&"forest-container--small"),children:e.jsx("div",{className:"forest",style:{borderColor:l},children:r.map(f=>{const Oe=T==null?void 0:T[f.id];if(n){const{selection:W=[],clickableTrees:is,onSelectTree:cs,activeTree:we,disabled:H}=n,B=is.includes(f.id),ne=B||W.includes(f.id);if(ne){const ae=W.includes(f.id),Ae=we===f.id,Ce=W.indexOf(f.id);return e.jsxs("div",{className:C("forest__tree-container forest__tree-button",B&&H&&"forest__tree-button--disabled"),onClick:()=>{(ne&&!H||ne&&H&&!B)&&cs(f.id)},children:[e.jsx(ke,{segment:Oe,tree:f,startingTeeId:E,finalTreeId:g,currentTreeId:v,showPath:o,className:C(B&&!H&&"forest__tree--clickable",ae&&"forest__tree--selected",Ae&&"forest__tree--active"),width:x}),ae&&v!==f.id&&e.jsxs(e.Fragment,{children:[e.jsx("span",{className:C(`forest__arrow-from-line forest__arrow-from-line--${ce(W[Ce-1],f.id)}`,ae&&"forest__tree--selected",Ae&&"forest__tree--active")}),e.jsx(_,{icon:e.jsx(z,{}),size:"large",className:C(`forest__arrow-to forest__arrow-to--${ce(W[Ce-1],f.id)}`)})]}),B&&!H&&e.jsx(_,{icon:e.jsx(z,{}),size:"large",className:C(`forest__arrow-to forest__arrow-to--${ce(W[W.length-1]??we,f.id)}`)}),e.jsx(Fe,{condition:!!t&&!!(c!=null&&c[f.id]),children:e.jsx("div",{className:"forest__players",children:!!t&&e.jsx(He,{players:t,playerIds:(c==null?void 0:c[f.id])??[],user:p})})})]},`tree-${f.id}`)}}return e.jsxs("div",{className:"forest__tree-container",children:[e.jsx(ke,{segment:Oe,tree:f,startingTeeId:E,finalTreeId:g,currentTreeId:v,showPath:o,hidePassedTreeNames:a,width:x}),e.jsx(Fe,{condition:!!t&&!!(c!=null&&c[f.id]),children:e.jsx("div",{className:"forest__players",children:!!t&&e.jsx(He,{players:t,playerIds:(c==null?void 0:c[f.id])??[],user:p})})})]},`tree-${f.id}`)})})})]})})})}function He({players:r,playerIds:s,user:o}){const{translate:n}=_e(),t=s.map(i=>r[i]);return e.jsx(Us,{list:t,user:o,tooltipPrefix:n("Último lugar visitado por: ","Last visited place by: ")})}function Be({zoomIn:r,zoomOut:s,resetTransform:o,position:n}){return e.jsx(Re,{className:C("forest-container-controls",`forest-container-controls--${n}`),justify:"center",children:e.jsxs(Re,{children:[e.jsx(G,{onClick:()=>r(.1),size:"small",children:e.jsx(Ms,{})}),e.jsx(G,{onClick:()=>s(.1),size:"small",children:e.jsx(Ls,{})}),e.jsx(G,{onClick:()=>o(),size:"small",children:e.jsx(Ws,{})})]})})}function Ge({children:r}){return e.jsx(Ee,{icon:e.jsx(rs,{}),children:r})}function ee({children:r}){return e.jsx(Ee,{icon:e.jsx(oe,{}),children:r})}function se({children:r}){return e.jsx(Ee,{icon:e.jsx(fe,{}),children:r})}function Tr({user:r,forest:s,onSubmitMap:o}){var S;const n=(r==null?void 0:r.map)??[],t=n.filter(u=>!u.passed),i=t.map(u=>u.clues),[a,p]=M.useState(t.map(u=>null)),[l,c]=M.useState(0),[d,x]=M.useState([]),E=u=>{p(m=>{const h=[...m];return h[l]={...u},h}),c(m=>m+1)},T=u=>{p(m=>{const h=[...m];return h[l]=null,h}),x(m=>[...m,u]),c(m=>m+1)},v=u=>{p(m=>[...m].map((y,N)=>N<u?y:null)),x(m=>m.filter(h=>h!==u)),c(u)},g=u=>{p(m=>{var y;const h=[...m??[]];return h[u]&&(h[u].negate=!((y=h[u])!=null&&y.negate)),h})},b=a.map(u=>u==null?void 0:u.id).filter(Boolean),w=nr(n,t==null?void 0:t[l]);return e.jsxs(e.Fragment,{children:[e.jsx(U,{className:"map-builder",wrap:!0,children:t.map((u,m)=>{var y,N,F,k;if(u.passed)return e.jsx(e.Fragment,{});const h=s[u.treeId];return h?e.jsxs("div",{className:"map-builder__segment",children:[l===m&&e.jsx("div",{className:"map-builder__caret",children:e.jsx(_,{icon:e.jsx(qs,{}),className:J("bounce",{speed:"slow",infinite:!0}),size:"small"})}),!!a[m]&&e.jsx(ge,{title:e.jsx(j,{pt:`Clique para negar: Não-${(y=a==null?void 0:a[m])==null?void 0:y.text}`,en:`Click to negate: Non-${(N=a==null?void 0:a[m])==null?void 0:N.text}`}),children:e.jsxs(ie,{onClick:()=>g(m),disabled:!(a!=null&&a[m]),className:"map-builder__card map-builder__card--new",children:[((F=a==null?void 0:a[m])==null?void 0:F.negate)&&e.jsx(_,{icon:e.jsx(L,{}),size:"small",className:"map-builder__card-no"}),(k=a==null?void 0:a[m])==null?void 0:k.text]})}),((i==null?void 0:i[m])??[]).map(f=>e.jsxs("div",{className:"map-builder__card",children:[(f==null?void 0:f.negate)&&e.jsx(_,{icon:e.jsx(L,{}),size:"small",className:"map-builder__card-no"}),f.text]},f.id)),e.jsx(ie,{onClick:()=>v(m),disabled:!(a!=null&&a[m]||d.includes(m)),children:e.jsx(Y,{id:h.treeType,text:h.card.text})})]},`map-segment-${u.index}`):e.jsx(e.Fragment,{})})}),w.length>0&&e.jsxs(Ye,{className:"contained",wrap:!0,children:[e.jsxs("strong",{children:[e.jsx(j,{pt:"Caminhos possíveis para a árvore atual",en:"Possible paths for the current tree"}),":"]}),w.map((u,m)=>{var h,y;return e.jsx(ks,{className:J("tada",{delay:m}),children:(y=(h=s==null?void 0:s[u])==null?void 0:h.card)==null?void 0:y.text},`highlighted-possibility-${u}`)})]}),e.jsxs(ts,{title:e.jsx(j,{pt:"Cartas",en:"Hand"}),contained:!0,children:[(r.hand??[]).map(u=>e.jsx(ie,{onClick:()=>E(u),disabled:b.includes(u.id)||l>=t.length,className:"map-builder__card-button",children:e.jsx(Ds,{hideHeader:!0,children:u.text})},u.id)),e.jsx(G,{size:"large",type:"default",onClick:()=>T(l),disabled:!((S=i==null?void 0:i[l])!=null&&S.length),children:e.jsx(j,{pt:"Pular árvore",en:"Skip tree"})})]}),e.jsx(U,{children:e.jsx(Qe,{size:"large",disabled:b.length===0,onClick:()=>o({newMap:a}),children:e.jsx(j,{pt:"Enviar Mapa",en:"Submit Map"})})})]})}function Sr({players:r,user:s,announcement:o,forest:n,currentRound:t,onSubmitMap:i}){ss();const a=cr(r,s);return e.jsxs($,{fullWidth:!0,announcement:o,children:[e.jsx(te,{children:t===1?e.jsx(j,{pt:"Construa o seu mapa",en:"Build your map"}):e.jsx(j,{pt:"Expanda seu mapa",en:"Expand your map"})}),e.jsx(D,{type:"rule",children:e.jsx(j,{pt:e.jsxs(e.Fragment,{children:["Você precisa ajudar os outros jogadores a descobrirem o seu caminho pela floresta.",e.jsx("br",{}),"Começando da ",e.jsx(Ge,{children:"bússola"}),", escolha 1 carta para cada árvore do caminho.",e.jsx("br",{}),"Você ganha ",e.jsx(O,{children:"pontos"})," se jogadores adivinharem seu caminho, então tente fazer um bom trabalho."]}),en:e.jsxs(e.Fragment,{children:["You need to help the other players to discover your path through the forest.",e.jsx("br",{}),"Starting from the ",e.jsx(Ge,{children:"compass"}),", choose 1 card for each tree of the path.",e.jsx("br",{}),"You earn ",e.jsx(O,{children:"points"})," if players guess your path correctly, so try to do a good job."]})})}),e.jsx(Q,{forest:n,map:s.map,showPath:!0,hidePassedTreeNames:!0,players:r,playerMapping:a}),e.jsx(D,{type:"action",children:e.jsx(j,{pt:e.jsxs(e.Fragment,{children:["Clique nas cartas em sequência para definir seu mapa, uma carta por árvore.",e.jsx("br",{}),"Você pode fazer quantos segmentos quiser desde que pelo menos uma carta esteja em cada árvore (dessa rodada ou de uma rodada anterior já que as cartas são cumulativas).",e.jsx("br",{}),"Na barra abaixo, se quiser negar ",e.jsx(_,{icon:e.jsx(L,{}),size:"small"})," um adjectivo selecionado, clique nele acima da árvore para trocar.",e.jsx("br",{}),"Se quiser refazer uma árvore ",e.jsx(_,{icon:e.jsx(fe,{}),size:"small"}),", clique nela.",e.jsx("br",{}),"Quando você estiver pronto, aperte Enviar Mapa."]}),en:e.jsxs(e.Fragment,{children:["Click on the cards in sequence to define your map, you can't skip any tree.",e.jsx("br",{}),"You can build as many segments you with as long as there is at least one card on each tree (from this round or a previous one since the cards are cumulative).",e.jsx("br",{}),"If you want to negate ",e.jsx(_,{icon:e.jsx(L,{}),size:"small"})," an adjective you selected, click on it below the tree to change.",e.jsx("br",{}),"If you want to redo a tree ",e.jsx(_,{icon:e.jsx(fe,{}),size:"small"}),", click on it.",e.jsx("br",{}),"When you are ready, press Submit Map."]})})}),e.jsx(Tr,{user:s,forest:n,onSubmitMap:i})]})}function vr({user:r,announcement:s,forest:o}){return e.jsxs($,{fullWidth:!0,announcement:s,children:[e.jsx(te,{children:e.jsx(j,{pt:"Todos os jogadores já descobriam seu mapa completamente",en:"All players have discovered your map completely"})}),e.jsx(V,{contained:!0,children:e.jsx(j,{pt:e.jsx(e.Fragment,{children:"Aguarde pacientemente, você ainda vai participar na hora de adivinhar."}),en:e.jsx(e.Fragment,{children:"Sit and wait patiently, you will still participate when it's time to guess."})})}),e.jsx(Q,{forest:o,map:r.map,showPath:!0})]})}function br({players:r,state:s}){var l,c;const o=Te(r,s),{step:n,setStep:t}=Se(),i=sr(t),a=e.jsx(ve,{icon:e.jsx(oe,{}),title:s.round.current===1?e.jsx(j,{pt:"Construa o seu mapa",en:"Build your map"}):e.jsx(j,{pt:"Expanda seu mapa",en:"Expand your map"}),currentRound:(l=s==null?void 0:s.round)==null?void 0:l.current,type:"overlay",children:e.jsx(V,{children:e.jsx(j,{pt:"Você consegue mapear as árvores usando apenas adjetivos?",en:"Can you map the tree path using only adjectives?"})})}),p=(c=o==null?void 0:o.map)==null?void 0:c.every(d=>d.passed);return e.jsx(re,{phase:s==null?void 0:s.phase,allowedPhase:q.MAP_BUILDING,children:e.jsx(be,{step:n,players:r,waitingRoom:{content:e.jsx(tr,{forest:s.forest,map:o.map,newMap:o.newMap})},children:e.jsxs(Ze,{condition:p,children:[e.jsx(vr,{user:o,announcement:a,forest:s.forest}),e.jsx(Sr,{players:r,user:o,announcement:a,forest:s.forest,currentRound:s.round.current,onSubmitMap:i})]})})})}function as({segment:r,tree:s,showArrow:o,className:n}){return e.jsxs("div",{className:C("map-entry",n),children:[s&&e.jsx(Y,{id:s.treeType,text:s.card.text,className:"map-entry__tree"}),e.jsx(_,{icon:e.jsx(oe,{}),size:"large",className:"map-entry__icon"}),r.clues.map(t=>e.jsxs("div",{className:"map-entry__clue",children:[t.text,(t==null?void 0:t.negate)&&e.jsx(_,{icon:e.jsx(L,{}),size:"small",className:"map-entry__clue-no"})]},`clue-${r.index}-${t.id}`)),o&&e.jsx(_,{icon:e.jsx(z,{}),size:"small",className:"map-entry__arrow"})]},`map-${r.index}`)}const Ir={id:0,treeType:0,card:{id:"",text:""}};function Ne({map:r=[],selectedTrees:s=[],fullMap:o=!1}){const n=o?r:r.filter(t=>t.active);return e.jsx(U,{wrap:!0,className:"player-map",style:{gridTemplateColumns:`repeat(${n.length}, 100px)`},children:n.map((t,i,a)=>{const p=s[i+1],l=o&&a.length-1===i?Ir:void 0;return e.jsx(as,{className:"player-map__segment",tree:l??p,segment:t,showArrow:a.length-1!==i},`map-${t.index}`)})})}function Er({forest:r,map:s=[],onSubmitPath:o,pathId:n,user:t,players:i}){var u,m;const a=s.filter(h=>!h.passed&&h.clues.length>0),p=((u=ns(s,h=>h.passed))==null?void 0:u.treeId)??((m=s==null?void 0:s[0])==null?void 0:m.treeId)??0,l=s.filter(h=>h.passed).map(h=>h.treeId),c=ir(t,a,n),[d,x]=M.useState([p]),[E,T]=M.useState(p),v=ye(E,[...d,...l]),g=d.length>a.length,b=h=>{T(h);const y=d.indexOf(h);y>-1?x(N=>N.slice(0,y+1)):x(N=>[...N,h])},w=d.map(h=>r[h]),S=a==null?void 0:a[d.length-1];return ss(),e.jsxs(U,{vertical:!0,children:[e.jsx(Ne,{map:s,selectedTrees:w}),e.jsx(zs,{active:!!S,children:e.jsx(as,{segment:S,className:J("rubberBand")},S==null?void 0:S.treeId)}),e.jsx(Qe,{size:"large",onClick:()=>o({guess:d.slice(1),pathId:n,choseRandomly:!1}),disabled:d.length-1<a.length,children:e.jsx(j,{pt:"Concluir",en:"Submit"})}),e.jsx(Gs,{onClick:()=>o({guess:xr(s,a,!0,Object.values(c).flat().map(Number)),pathId:n,choseRandomly:!0}),ghost:!0,children:"Random Dev"}),e.jsx(Q,{forest:r,map:s,actions:{selection:d,clickableTrees:v,onSelectTree:b,activeTree:E,disabled:g},playerMapping:c,players:i})]})}function yr({players:r,announcement:s,forest:o,activePlayer:n,onSubmitPath:t,user:i}){const a=Object.keys(r).length;return e.jsxs($,{fullWidth:!0,announcement:s,children:[e.jsx(te,{children:e.jsx(j,{pt:e.jsxs(e.Fragment,{children:["Siga o mapa de ",e.jsx(K,{player:n})]}),en:e.jsxs(e.Fragment,{children:["Follow ",e.jsx(K,{player:n}),"'s map"]})})}),e.jsx(D,{type:"action",children:e.jsx(j,{pt:e.jsxs(e.Fragment,{children:["Baseado no ",e.jsx(ee,{children:"mapa de adjetivos"}),", clique nas"," ",e.jsx(se,{children:"árvores"})," circuladas de pontinhos brancos para escolher aquele caminho.",e.jsx("br",{}),"Cada árvore correta vale ",e.jsx(O,{children:"1 ponto"})," por jogador que acertar (Por exemplo, 3 jogadores = 3 pontos).",e.jsx("br",{}),"Então, talvez valha a pena discutir! Porém, se somente um jogador acertar o caminho, ele ganha"," ",e.jsxs(O,{children:[a," pontos"]}),".",e.jsx("br",{}),"O criador do mapa ganha o mesmo número de pontos que os jogadores."]}),en:e.jsxs(e.Fragment,{children:["Based on the ",e.jsx(ee,{children:"adjectives map"}),", click on the"," ",e.jsx(se,{children:"circled trees"})," with white dots to choose that path.",e.jsx("br",{}),"Each correct tree is worth ",e.jsx(O,{children:"1 point"})," per player that guesses it (For example, 3 players = 3 points).",e.jsx("br",{}),"So, it might be worth discussing out loud! However, if only one player guesses the path, they earn ",e.jsxs(O,{children:[a," points"]}),".",e.jsx("br",{}),"The map creator also earns the same number of points as the players."]})})}),!!o&&n.map&&e.jsx(Er,{forest:o,map:n.map,onSubmitPath:t,pathId:n.id,user:i,players:r})]})}function Nr({players:r,announcement:s,forest:o,activePlayer:n}){const t=Object.keys(r).length;return e.jsxs($,{fullWidth:!0,announcement:s,children:[e.jsx(te,{children:e.jsx(j,{pt:e.jsx(e.Fragment,{children:"Os jogadores estão seguindo o seu mapa!"}),en:e.jsx(e.Fragment,{children:"Players are following your map!"})})}),e.jsx(D,{type:"wait",children:e.jsx(j,{pt:e.jsxs(e.Fragment,{children:["Baseado no ",e.jsx(ee,{children:"mapa de adjetivos"}),", eles vão clicando nas"," ",e.jsx(se,{children:"árvores"})," para escolher o caminho.",e.jsx("br",{}),"Cada árvore correta vale ",e.jsx(O,{children:"1 ponto"})," por jogador que acertar. Por exemplo, 3 jogadores = 3 pontos.",e.jsx("br",{}),"Se somente um jogador acertar o caminho, ele ganha"," ",e.jsxs(O,{children:[t," pontos"]}),".",e.jsx("br",{}),"Você, como criador do mapa, ganha o mesmo número de pontos que os jogadores."]}),en:e.jsxs(e.Fragment,{children:["Based on the ",e.jsx(ee,{children:"adjectives map"}),", players will click on the"," ",e.jsx(se,{children:"trees"})," to choose the path.",e.jsx("br",{}),"Each correct tree is worth ",e.jsx(O,{children:"1 point"})," per player that guesses it. For example, 3 players = 3 points.",e.jsx("br",{}),"If only one player guesses the path, they earn"," ",e.jsxs(O,{children:[t," points"]}),".",e.jsx("br",{}),"You as the map creator also earns the same number of points as the players."]})})}),e.jsx(Ne,{map:n.map}),e.jsx(Q,{forest:o,map:n.map,showPath:!0})]})}function Or({players:r,state:s}){var c;const o=Te(r,s),{step:n,setStep:t}=Se(),[i,a]=Hs("activePlayerId",s,r),p=rr(t),l=e.jsx(ve,{icon:e.jsx(vs,{}),title:e.jsx(j,{pt:"Siga os mapas!",en:"Follow the maps!"}),currentRound:(c=s==null?void 0:s.round)==null?void 0:c.current,type:"overlay",duration:3,children:e.jsxs(V,{children:[e.jsx(j,{pt:"Vamos analisar e tentar seguir o mapa de cada jogador",en:"Let's analise and try to follow the each player's map"}),e.jsx("br",{}),e.jsx(Bs,{players:r,order:s.turnOrder,activePlayerId:s.activePlayerId})]})});return e.jsx(re,{phase:s==null?void 0:s.phase,allowedPhase:q.PATH_FOLLOWING,children:e.jsx(be,{step:n,players:r,children:e.jsxs(Ze,{condition:a,children:[e.jsx(Nr,{players:r,announcement:l,forest:s.forest,activePlayer:i}),e.jsx(yr,{players:r,user:o,announcement:l,forest:s.forest,onSubmitPath:p,activePlayer:i,isTheActivePlayer:a})]})})})}function wr({players:r,ranking:s,onGoBack:o,round:n}){return e.jsxs(Ys,{players:r,ranking:s,gainedPointsDescriptions:[e.jsx(j,{pt:"Rotas corretos",en:"Correct paths"},"1"),e.jsx(j,{pt:"Pontos por sua rota",en:"Points for your route"},"2")],children:[e.jsx(D,{type:"event",children:e.jsx(j,{pt:"Não se preocupe se você ficou pra trás! O jogador mais a frente de cada rota, te gritou e você conseguiu encontrá-lo.",en:"Don't worry if you were left behind! The player furthest ahead on that route, call you and you caught up"})}),e.jsx(U,{children:e.jsx(G,{onClick:o,children:e.jsx(j,{pt:"Ver resultado novamente",en:"See results again"})})}),e.jsx(gs,{round:n})]})}function Ar({players:r,forest:s,currentPlayer:o}){const n=o.map.filter(t=>t.active);return e.jsx("div",{className:"div-container player-map",style:{gridTemplateColumns:`repeat(${n.length}, 120px)`},children:n.map((t,i,a)=>{const p=t.passed?s[t.treeId]:null;return e.jsxs("div",{className:"player-map__segment",children:[e.jsxs("div",{className:"player-map__top",children:[p?e.jsx(Y,{id:p.treeType,text:p.card.text,className:"player-map__tree",width:75}):e.jsx(es,{id:"1",className:"player-map__tree-invisible",text:"",width:75}),e.jsx(_,{icon:e.jsx(oe,{}),size:"large",className:"player-map__icon"}),e.jsx("div",{children:t.clues.map(l=>e.jsxs("div",{className:"player-map__clue",children:[l.text,(l==null?void 0:l.negate)&&e.jsx(_,{icon:e.jsx(L,{}),size:"small",className:"player-map__clue-no"})]},`clue-${t.index}-${l.id}`))}),t.index===0&&e.jsx(_,{icon:e.jsx(Ie,{}),size:"small",className:"player-map__starting-flag"}),a.length-1!==i&&e.jsx(_,{icon:e.jsx(z,{}),size:"small",className:"player-map__arrow"})]}),e.jsxs("div",{className:"player-map__scoring",children:[t.playersIds.length>0?e.jsx("div",{className:"player-map__players",children:t.playersIds.map(l=>{const c=r[l];return e.jsx(ge,{title:c.name,children:e.jsx(Qs,{size:"small",id:c.avatarId})},`player-${l}`)})}):e.jsx("div",{className:"player-map__no-players",children:e.jsx(j,{pt:"Nenhum jogador",en:"No players"})}),e.jsx("div",{children:t.score>0&&e.jsx(O,{children:t.score})})]})]},`map-${t.index}`)})})}function Cr({players:r,gallery:s,user:o,forest:n,slideShowConfig:t}){const i=Object.keys(r).length,a=s[t.slideIndex],p=xe(a.avatarId),l=ar(r,a);return e.jsxs($,{fullWidth:!0,children:[e.jsx(ze,{children:e.jsx(j,{pt:e.jsxs(e.Fragment,{children:["Mapa do(a) ",e.jsx(K,{player:a})]}),en:e.jsxs(e.Fragment,{children:[e.jsx(K,{player:a}),"'s map"]})})}),e.jsx(D,{type:"rule",children:e.jsx(j,{pt:e.jsxs(e.Fragment,{children:["Você ganha pontos ao acertar o caminho do mapa. ",e.jsx("br",{}),"Cada árvore correta vale ",e.jsx(O,{children:"1 ponto"})," por jogador que acertar."," ",e.jsx("br",{}),"Se você for o único que acertou, você ganha"," ",e.jsxs(O,{children:[i," pontos"]}),"."]}),en:e.jsxs(e.Fragment,{children:["You get points by guessing the map path. ",e.jsx("br",{}),"Each correct tree is worth ",e.jsx(O,{children:"1 point"})," per player who guesses it."," ",e.jsx("br",{}),"If you are the only one who guessed it, you get"," ",e.jsxs(O,{children:[i," points"]}),"."]})})}),e.jsx(Ar,{players:r,forest:n,currentPlayer:a}),e.jsxs("div",{children:[e.jsx(Q,{forest:n,map:a.map,size:"small",players:r,user:o,forestBorderColor:xe(a.avatarId),playerMapping:l}),e.jsx($s,{config:t,barColor:p})]})]})}function Pr({players:r,state:s}){var c;const o=Te(r,s),{step:n,goToPreviousStep:t,goToNextStep:i}=Se(),a=M.useMemo(()=>Xe(r).filter(d=>d.map.some(x=>x.active)),[r]),p=Vs({length:a.length,slideDuration:er,onExpire:i}),l=()=>{p.reset(),t()};return e.jsx(re,{phase:s==null?void 0:s.phase,allowedPhase:q.RESULTS,children:e.jsxs(be,{step:n,players:r,children:[e.jsx(ve,{icon:e.jsx(bs,{}),title:e.jsx(j,{pt:"Resultado",en:"Results"}),currentRound:(c=s==null?void 0:s.round)==null?void 0:c.current,type:"block",onClose:i,unskippable:!0,children:e.jsx(V,{children:e.jsx(j,{pt:"Quem é o melhor em seguir direções?",en:"Who is the best at following directions?"})})}),e.jsx(Cr,{gallery:a,players:r,slideShowConfig:p,forest:s.forest,user:o}),e.jsx(wr,{players:r,round:s.round,ranking:s.ranking,onGoBack:l})]})})}const I={MOST_CARDS:"MOST_CARDS",FEWEST_CARDS:"FEWEST_CARDS",MOST_NEGATIVE_CARDS:"MOST_NEGATIVE_CARDS",FEWEST_NEGATIVE_CARDS:"FEWEST_NEGATIVE_CARDS",MOST_TREES:"MOST_TREES",FEWEST_TREES:"FEWEST_TREES",BEST_MAP:"BEST_MAP",WORST_MAP:"WORST_MAP",BEST_SCOUT:"BEST_SCOUT",WORST_SCOUT:"WORST_SCOUT",MOST_UP:"MOST_UP",MOST_RIGHT:"MOST_RIGHT",MOST_DOWN:"MOST_DOWN",MOST_LEFT:"MOST_LEFT",MOST_UP_LEFT:"MOST_UP_LEFT",MOST_UP_RIGHT:"MOST_UP_RIGHT",MOST_DOWN_LEFT:"MOST_DOWN_LEFT",MOST_DOWN_RIGHT:"MOST_DOWN_RIGHT"},Rr={[I.MOST_CARDS]:{icon:"list",title:{pt:"Mais Cartas",en:"Most Cards"},description:{pt:"Usou o maior número de cartas",en:"Used the most cards"}},[I.FEWEST_CARDS]:{icon:"ellipsis",title:{pt:"Menos Cartas",en:"Fewest Cards"},description:{pt:"Usou o menor número de cartas",en:"Used the fewest cards"}},[I.MOST_NEGATIVE_CARDS]:{icon:"minus",title:{pt:"Mais Adjetivos Negativos",en:"Most Negative Adjectives"},description:{pt:"Usou o maior número de cartas negativas",en:"Used the most negative cards"}},[I.FEWEST_NEGATIVE_CARDS]:{icon:"plus",title:{pt:"Menos Cartas Negativas",en:"Fewest Negative Cards"},description:{pt:"Usou o menor número de cartas negativas",en:"Used the fewest negative cards"}},[I.MOST_TREES]:{icon:"tree",title:{pt:"Mais Árvores",en:"Most Trees"},description:{pt:"Passou pelo maior número de árvores",en:"Passed by the most trees"}},[I.FEWEST_TREES]:{icon:"x",title:{pt:"Menos Árvores",en:"Fewest Trees"},description:{pt:"Passou pelo menor número de árvores",en:"Passed by the fewest trees"}},[I.BEST_MAP]:{icon:"sun",title:{pt:"Melhor Guia",en:"Best Guide"},description:{pt:"Construiu um mapa que os outros jogadores melhor encontraram as direções corretas",en:"Built a map that other players found the correct directions the best"}},[I.WORST_MAP]:{icon:"arrows",title:{pt:"Mapeador Divergente",en:"Diverging Mapper"},description:{pt:"Construiu um mapa que os outros jogadores tiveram mais dificuldade em encontrar as direções corretas",en:"Built a map that other players had the most difficulty finding the correct directions"}},[I.BEST_SCOUT]:{icon:"foot-prints",title:{pt:"Melhor Explorador",en:"Best Scout"},description:{pt:"Acertou as árvores corretas mais vezes",en:"Hit the correct trees the most times"}},[I.WORST_SCOUT]:{icon:"face-tired",title:{pt:"Explorador Confuso",en:"Confused Scout"},description:{pt:"Acertou as árvores corretas menos vezes",en:"Hit the correct trees the fewest times"}},[I.MOST_UP]:{icon:"arrow-up",title:{pt:"Norte",en:"North"},description:{pt:"Andou mais para cima",en:"Walked more up"}},[I.MOST_RIGHT]:{icon:"arrow-right",title:{pt:"Leste",en:"East"},description:{pt:"Andou mais para direita",en:"Walked more right"}},[I.MOST_DOWN]:{icon:"arrow-down",title:{pt:"Sul",en:"South"},description:{pt:"Andou mais para baixo",en:"Walked more down"}},[I.MOST_LEFT]:{icon:"arrow-left",title:{pt:"Oeste",en:"West"},description:{pt:"Andou mais para esquerda",en:"Walked more left"}},[I.MOST_UP_LEFT]:{icon:"double-arrow-up",title:{pt:"Noroeste",en:"Northwest"},description:{pt:"Andou mais para cima e esquerda",en:"Walked more up and left"}},[I.MOST_UP_RIGHT]:{icon:"double-arrow-up",title:{pt:"Nordeste",en:"Northeast"},description:{pt:"Andou mais para cima e direita",en:"Walked more up and right"}},[I.MOST_DOWN_LEFT]:{icon:"double-arrow-down",title:{pt:"Sudoeste",en:"Southwest"},description:{pt:"Andou mais para baixo e esquerda",en:"Walked more down and left"}},[I.MOST_DOWN_RIGHT]:{icon:"double-arrow-down",title:{pt:"Sudeste",en:"Southeast"},description:{pt:"Andou mais para baixo e direita",en:"Walked more down and right"}}};function Fr({state:r,players:s}){const o=Xe(s),n=r.forest??[];return e.jsxs(Js,{state:r,players:s,announcementIcon:e.jsx(Ie,{}),children:[e.jsx(Ks,{players:s,achievements:r.achievements,reference:Rr}),e.jsx(ts,{title:e.jsx(j,{pt:"Mapas dos Jogadores",en:"Players' Maps"}),children:o.map(t=>{const i=(t.map??[]).map(a=>n[a.treeId]);return e.jsxs(Ye,{className:"game-over-strip",style:{borderColor:xe(t.avatarId)},children:[e.jsx(Xs,{player:t,withName:!0,className:"game-over-avatar-strip"}),e.jsx(Ne,{map:t.map,fullMap:!0,selectedTrees:i})]},t.id)})})]})}function Mr(r){switch(r.phase){case je.DEFAULT.WAIT:return Zs;case q.MAP_BUILDING:return br;case q.PATH_FOLLOWING:return Or;case q.RESULTS:return Pr;case je.DEFAULT.GAME_OVER:return Fr;default:return Ss}}function jo(){return e.jsx(Ts,{gameCollection:_s.LABIRINTO_SECRETO,getActiveComponent:Mr})}export{jo as default};
