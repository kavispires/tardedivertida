import{j as e,i as Re,T as j,f as ue,e as O,aM as me,aL as U,I as _,n as he,bI as ye,k as Xe,r as F,b0 as K,bj as Je,da as Qe,bc as Oe,B as q,l as ce,q as Fe,bG as We,bH as de,bL as Le,aY as Ke,aW as Ze,aX as es}from"./index-CSgiS5-z.js";import{e as te,i as D,u as Ue,a as De,S as V,b as oe,c as xe,d as je,P as fe,f as _e,n as ss,h as rs,j as ts,k as os,l as ns}from"./StepSwitcher-59vdKKK-.js";import{A as ke}from"./AnimatedProcessingIcon-drQW5KI2.js";import{I as Y}from"./Instruction-BhKtxEBL.js";import{M as ne,D as as,P as is}from"./PathIcon-Bo3yVRel.js";import{V as Be}from"./ViewOr-B_seEcHY.js";import{N as W}from"./NoIcon-s8qQ8hzG.js";import{g as cs}from"./ItemCard-VFzErVMy.js";import{T as He}from"./TreeCard-B5mQpNWM.js";import{S as ls}from"./Sprite-DKsBMlny.js";import{F as ds,C as Ge,T as pe}from"./TreeIcon-CY8HngIT.js";import{P as E}from"./PointsHighlight-MCJ1aDqV.js";import{R as B}from"./RuleInstruction-CE5oePlz.js";import{T as ps,a as us,R as ms,b as hs,c as xs}from"./index.esm-CGfuqrMz.js";import{A as $}from"./ArrowIcon-BzDljSA3.js";import{A as js}from"./AvatarGroup-DzzS-VQ9.js";import{V as Pe}from"./ViewIf-CGb8XZYd.js";import{F as ge}from"./FlagIcon-DfoOdy_L.js";import{M as Te}from"./MetricHighlight-DndJutgZ.js";import{L as fs}from"./LocationIcon-Dd6pHCly.js";import{C as _s}from"./Card-iwrvLOTv.js";import{C as ze}from"./Container-CNVvrXLx.js";import{T as gs}from"./TextHighlight-f2dfHlnP.js";import{u as Ts}from"./useWhichPlayerIsThe-Cz3w53Ee.js";import{T as Ss}from"./TurnOrder-BLXN6M1N.js";import{A as Z}from"./AvatarName-DyNp7TjJ.js";import{D as vs}from"./DevButton-I3FCcW_z.js";import{M as bs}from"./MouseFollowingContent-Ydi-D5gA.js";import{S as Es,u as Ns}from"./SlideShowControls-iTvnQ1T2.js";import{S as Is}from"./StepRankingWrapper-DSxjhBdR.js";import{A as ys}from"./Avatar-DzdHn8Tj.js";import{A as Os}from"./AvatarStrip-Dt3riVR8.js";import"./GameOver-Dbwr_4gQ.js";import{G as Ps}from"./GameOverWrapper-Bl2DAoDl.js";import{A as ws}from"./Achievements-CSUepuHK.js";import"./useBlurCards-EiuZxAto.js";import"./speech-C960orx4.js";import"./useDevFeatures-B5yHgo7p.js";import"./RulesModal-Dd_NRrG7.js";import"./WritingIcon-DR_9camd.js";import"./DoubleRightOutlined-B9IjKK52.js";import"./PurePanel-BijFlcE0.js";import"./useMutation-CyJ5AjJq.js";import"./Game-JSNPG8tM.js";import"./WaitingRoomIcon-C-etbZ6W.js";import"./AnimatedClockIcon-Dmwhf0hD.js";import"./index-Bcafee-5.js";import"./useBubbleLock-CmIdkOok.js";import"./index-prz0JiuA.js";import"./Overflow-zdB_x8D-.js";import"./useEvent-DrrrUF8p.js";import"./index-BZvTW1ET.js";import"./index-CsZVA3I7.js";import"./GameBanner-BSnwC2DJ.js";import"./useTDBaseUrl-BF9foKiS.js";import"./index-bTsgShmN.js";import"./InfoCircleOutlined-BWzemnN4.js";import"./index-CLdBgnQQ.js";import"./SignIn-CLmmdOJj.js";import"./GoogleIcon-D9IbkC6M.js";import"./Loading-4Chd3RcK.js";import"./AnimatedLoaderIcon-B_Lvi6Be.js";import"./LikeFilled-eqZdsvMt.js";import"./WarningOutlined-DDyATKKa.js";import"./StarIcon-Cd2uRObQ.js";import"./StarFilled-DbPTqDk7.js";import"./StarFilled-CNctUIhy.js";import"./StepBackwardOutlined-Cp385qKZ.js";import"./TrophyOutlined-DzBU_4qt.js";import"./RankingBoard-Dhn_n5jc.js";import"./CaretUpOutlined-CTN4lzvm.js";import"./ArrowRightOutlined-BbLQvkf5.js";import"./useMergedState-zgb0OmaB.js";import"./progress-DptaQlvm.js";import"./TheEndIcon-D_PBhSN8.js";import"./Medal-HVOSKATK.js";import"./QuestionCircleOutlined-wUG9t1ew.js";function Cs({state:r}){return e.jsx(te,{phase:r==null?void 0:r.phase,allowedPhase:D.DEFAULT.WAIT,className:"setup",children:e.jsxs("div",{className:"phase-announcement",children:[e.jsx(Re,{children:e.jsx(j,{pt:"Processando...",en:"Processing..."})}),e.jsx(ke,{className:"phase-announcement__icon"}),e.jsx(Y,{children:e.jsx(j,{pt:"Aguarde um momento",en:"Just a moment"})})]})})}const k={MAP_BUILDING:"MAP_BUILDING",PATH_FOLLOWING:"PATH_FOLLOWING",RESULTS:"RESULTS"},qe={SUBMIT_MAP:"SUBMIT_MAP",SUBMIT_PATH:"SUBMIT_PATH"},w=7,Q=5,y={UP:"UP",RIGHT:"RIGHT",DOWN:"DOWN",LEFT:"LEFT",UP_LEFT:"UP_LEFT",UP_RIGHT:"UP_RIGHT",DOWN_LEFT:"DOWN_LEFT",DOWN_RIGHT:"DOWN_RIGHT"},As=15;function Ms(r){const{translate:s}=ue(),n=Ue({actionName:"submit-map",onSuccess:()=>r(2),onError:()=>r(0),successMessage:s("Mapa submetido com sucesso","Map submitted successfully"),errorMessage:s("Vixi, o aplicativo encontrou um erro ao tentar enviar seu mapa","Oops, the application found an error while trying to submit your map")});return o=>{n({action:qe.SUBMIT_MAP,...o})}}function Rs(r){const{translate:s}=ue(),n=Ue({actionName:"submit-path",onSuccess:()=>r(2),onError:()=>r(0),successMessage:s("Caminho submetido com sucesso","Path submitted successfully"),errorMessage:s("Vixi, o aplicativo encontrou um erro ao tentar enviar seu caminho","Oops, the application found an error while trying to submit your path")});return o=>{n({action:qe.SUBMIT_PATH,...o})}}function X({id:r,text:s,width:n=100,className:o}){if(typeof r=="string"){const[t,i]=cs(r);return e.jsxs("div",{className:O("tree-card",o),style:{width:`${n}px`},children:[e.jsx(ls,{source:t,id:i,width:n,title:s}),e.jsx(me,{title:s,children:e.jsx("div",{className:"tree-card__text",children:s})})]})}return e.jsx(He,{id:String(r),text:s,width:n,className:o})}function Fs({forest:r,map:s,newMap:n}){if(!n||!s)return e.jsx(e.Fragment,{});const o=(s??[]).filter(t=>!t.passed);return e.jsx(U,{wrap:!0,children:o.map((t,i)=>{const{treeId:a,passed:d}=t,l=r[a],c=n==null?void 0:n[i];return e.jsxs("div",{className:"map-builder__segment",children:[!!c&&e.jsxs("div",{className:"map-builder__card map-builder__card--new",children:[c.text,(c==null?void 0:c.negate)&&e.jsx(_,{icon:e.jsx(W,{}),size:"small",className:"map-builder__card-no"})]}),t.clues.map(p=>e.jsxs("div",{className:"map-builder__card",children:[p.text,(p==null?void 0:p.negate)&&e.jsx(_,{icon:e.jsx(W,{}),size:"small",className:"map-builder__card-no"})]},`card-${t.index}-${p.id}`)),e.jsx(X,{id:l.treeType,text:d?"":l.card.text})]},a)})})}const M=r=>{const[s,n]=r;return s+n*w},ee=r=>{const s=r%w,n=Math.floor(r/w);return[s,n]},Ws=r=>{const s=ee(r),[n,o]=s;return n===0?y.LEFT:n===w-1?y.RIGHT:o===0?y.UP:o===Q-1?y.DOWN:null},le=(r,s)=>{const[n,o]=ee(r),[t,i]=ee(s),a=t-n+(i-o)*w;return a===1?y.RIGHT:a===-1?y.LEFT:a===w?y.DOWN:a===-7?y.UP:a===w+1?y.DOWN_RIGHT:a===w-1?y.DOWN_LEFT:a===-6?y.UP_RIGHT:a===-8?y.UP_LEFT:y.UP},Se=(r,s)=>{const[n,o]=ee(r),t=[],i=[n,o-1],a=M(i);i[1]>=0&&!s.includes(a)&&t.push(i);const d=[n+1,o],l=M(d);d[0]<w&&!s.includes(l)&&t.push(d);const c=[n,o+1],p=M(c);c[1]<Q&&!s.includes(p)&&t.push(c);const x=[n-1,o],I=M(x);x[0]>=0&&!s.includes(I)&&t.push(x);const T=[n-1,o-1],N=M(T);T[0]>=0&&T[1]>=0&&!s.includes(N)&&t.push(T);const b=[n+1,o-1],A=M(b);b[0]<w&&b[1]>=0&&!s.includes(A)&&t.push(b);const C=[n-1,o+1],P=M(C);C[0]>=0&&C[1]<Q&&!s.includes(P)&&t.push(C);const u=[n+1,o+1],h=M(u);return u[0]<w&&u[1]<Q&&!s.includes(h)&&t.push(u),t.map(m=>M(m))},Ls=(r,s)=>{if(!s)return[];const n=r.filter(o=>o.passed).map(o=>o.treeId);return Se(s.previousTree??s.treeId,n).filter(o=>o!==s.treeId)},Us=(r,s)=>{const n=s.map,o=n.filter(i=>i.active),t={};if(o[0].index>0){const i=n[o[0].index-1];t[i.treeId]=Object.keys(r).filter(a=>a!==s.id)}return Object.values(r).forEach(i=>{const a=i.history[s.id];a&&o.forEach((d,l,c)=>{const p=a[d.index];if(p)if(l===c.length-1)p.forEach(x=>{t[x]===void 0&&(t[x]=[]),t[x].push(i.id)});else{const x=p==null?void 0:p[p.length-1];t[x]===void 0&&(t[x]=[]),t[x].push(i.id)}})}),t},Ds=(r,s,n)=>{const o=s[0],t={},i=r.history[n];if(i){const a=i[o.index];a&&a.forEach(d=>{t[d]===void 0&&(t[d]=[]),t[d].push(r.id)})}return t},ks=(r,s)=>{const o=(s.map??[]).filter(i=>!i.passed),t={};return Object.values(r).forEach(i=>{const a=i.history[s.id];a&&o.forEach((d,l,c)=>{const p=a[d.index];if(p)if(l===c.length-1)p.forEach(x=>{t[x]===void 0&&(t[x]=[]),t[x].push(i.id)});else{const x=p==null?void 0:p[p.length-1];t[x]===void 0&&(t[x]=[]),t[x].push(i.id)}})}),t},Bs=(r,s,n=!1,o=[])=>{const t=he.union(r.filter(i=>i.passed).map(i=>i.treeId),o);return s.map(i=>{const a=Se(t[t.length-1],t),d=i.treeId,l=n?ye([...a,d]):ye(a);return t.push(l),l})};function Hs(){const r=Xe({initialWidth:300,initialHeight:300}),[s,n]=F.useState(r);return F.useEffect(()=>{const o=document.getElementById("screen");o&&n({width:Math.min(o.clientWidth,r.width),height:Math.min(o.clientHeight,r.height)})},[r.width,r.height]),[s.width,s.height]}function we({segment:r,tree:s,startingTeeId:n,finalTreeId:o,currentTreeId:t,showPath:i=!1,showArrow:a=!1,className:d="",hidePassedTreeNames:l=!1,width:c=75}){const p=!!r,x=n===s.id,I=Ws(s.id),T=o===s.id,N=t===s.id,b=((r==null?void 0:r.passed)&&!N)??!1;return e.jsxs("div",{className:O("forest__tree",x&&`forest__tree--${I}`,T&&i&&"forest__tree--goal",p&&i&&"forest__tree--segment",b&&"forest__tree--passed",N&&"forest__tree--current",d),children:[e.jsx(X,{id:s.treeType,text:r!=null&&r.passed&&l?"":s.card.text,width:c}),i&&T&&e.jsx(_,{icon:e.jsx(ds,{}),size:"large",className:`forest__end forest__end--${r.direction}`}),N&&e.jsx("div",{className:"forest__compass",children:e.jsx(_,{icon:e.jsx(Ge,{}),size:"large",className:O("forest__compass-icon",K("pulse",{infinite:!0}))})}),x&&e.jsx(_,{icon:e.jsx(ge,{}),size:"large",className:`forest__start forest__start--${I}`}),(a||i||b)&&!T&&p&&r.direction&&e.jsxs(e.Fragment,{children:[e.jsx("span",{className:O(`forest__arrow-line forest__arrow-line--${r.direction}`,p&&i&&"forest__tree--segment",b&&"forest__tree--passed",N&&"forest__tree--current")}),e.jsx(_,{icon:e.jsx($,{}),size:"large",className:`forest__arrow forest__arrow--${r.direction}`})]})]})}function J({forest:r,map:s=[],showPath:n,actions:o,players:t,size:i="large",hidePassedTreeNames:a=!1,user:d=Qe,forestBorderColor:l="transparent",playerMapping:c}){var h,m,S;const[p]=Hs(),x=Je(7,{gap:16,minWidth:60,maxWidth:100});if(!r||!s||s.length===0||!p)return e.jsx(U,{vertical:!0,children:e.jsx(_,{icon:e.jsx(ke,{}),size:"large"})});const I=(h=s==null?void 0:s[0])==null?void 0:h.treeId,T=s.reduce((v,R)=>(v[R.treeId]=R,v),{}),N=((m=he.findLast(s,v=>v.passed))==null?void 0:m.treeId)??I,b=(S=s[s.length-1])==null?void 0:S.treeId,A=150*7+72,u=Math.min(A,p*(i==="small"?.5:.9))/A;return e.jsx("div",{className:"forest-container-area",children:e.jsx(ps,{initialScale:u,minScale:.5,maxScale:4,wheel:{step:.05,disabled:!0},centerOnInit:!0,children:({zoomIn:v,zoomOut:R,resetTransform:H})=>e.jsxs(e.Fragment,{children:[e.jsx(Ae,{position:"top",zoomIn:v,zoomOut:R,resetTransform:H}),e.jsx(Ae,{position:"bottom",zoomIn:v,zoomOut:R,resetTransform:H}),e.jsx(us,{wrapperClass:O("forest-container",i==="small"&&"forest-container--small"),children:e.jsx("div",{className:"forest",style:{borderColor:l},children:r.map(f=>{const be=T==null?void 0:T[f.id];if(o){const{selection:L=[],clickableTrees:Ve,onSelectTree:Ye,activeTree:Ee,disabled:G}=o,z=Ve.includes(f.id),ae=z||L.includes(f.id);if(ae){const ie=L.includes(f.id),Ne=Ee===f.id,Ie=L.indexOf(f.id);return e.jsxs("div",{className:O("forest__tree-container forest__tree-button",z&&G&&"forest__tree-button--disabled"),onClick:()=>{(ae&&!G||ae&&G&&!z)&&Ye(f.id)},children:[e.jsx(we,{segment:be,tree:f,startingTeeId:I,finalTreeId:b,currentTreeId:N,showPath:n,className:O(z&&!G&&"forest__tree--clickable",ie&&"forest__tree--selected",Ne&&"forest__tree--active"),width:x}),ie&&N!==f.id&&e.jsxs(e.Fragment,{children:[e.jsx("span",{className:O(`forest__arrow-from-line forest__arrow-from-line--${le(L[Ie-1],f.id)}`,ie&&"forest__tree--selected",Ne&&"forest__tree--active")}),e.jsx(_,{icon:e.jsx($,{}),size:"large",className:O(`forest__arrow-to forest__arrow-to--${le(L[Ie-1],f.id)}`)})]}),z&&!G&&e.jsx(_,{icon:e.jsx($,{}),size:"large",className:O(`forest__arrow-to forest__arrow-to--${le(L[L.length-1]??Ee,f.id)}`)}),e.jsx(Pe,{condition:!!t&&!!(c!=null&&c[f.id]),children:e.jsx("div",{className:"forest__players",children:!!t&&e.jsx(Ce,{players:t,playerIds:(c==null?void 0:c[f.id])??[],user:d})})})]},`tree-${f.id}`)}}return e.jsxs("div",{className:"forest__tree-container",children:[e.jsx(we,{segment:be,tree:f,startingTeeId:I,finalTreeId:b,currentTreeId:N,showPath:n,hidePassedTreeNames:a,width:x}),e.jsx(Pe,{condition:!!t&&!!(c!=null&&c[f.id]),children:e.jsx("div",{className:"forest__players",children:!!t&&e.jsx(Ce,{players:t,playerIds:(c==null?void 0:c[f.id])??[],user:d})})})]},`tree-${f.id}`)})})})]})})})}function Ce({players:r,playerIds:s,user:n}){const{translate:o}=ue(),t=s.map(i=>r[i]);return e.jsx(js,{list:t,user:n,tooltipPrefix:o("Último lugar visitado por: ","Last visited place by: ")})}function Ae({zoomIn:r,zoomOut:s,resetTransform:n,position:o}){return e.jsx(Oe,{className:O("forest-container-controls",`forest-container-controls--${o}`),justify:"center",children:e.jsxs(Oe,{children:[e.jsx(q,{onClick:()=>r(.1),size:"small",children:e.jsx(ms,{})}),e.jsx(q,{onClick:()=>s(.1),size:"small",children:e.jsx(hs,{})}),e.jsx(q,{onClick:()=>n(),size:"small",children:e.jsx(xs,{})})]})})}function Me({children:r}){return e.jsx(Te,{icon:e.jsx(Ge,{}),children:r})}function se({children:r}){return e.jsx(Te,{icon:e.jsx(ne,{}),children:r})}function re({children:r}){return e.jsx(Te,{icon:e.jsx(pe,{}),children:r})}function Gs({user:r,forest:s,onSubmitMap:n}){var P;const o=(r==null?void 0:r.map)??[],t=o.filter(u=>!u.passed),i=t.map(u=>u.clues),[a,d]=F.useState(t.map(u=>null)),[l,c]=F.useState(0),[p,x]=F.useState([]),I=u=>{d(h=>{const m=[...h];return m[l]={...u},m}),c(h=>h+1)},T=u=>{d(h=>{const m=[...h];return m[l]=null,m}),x(h=>[...h,u]),c(h=>h+1)},N=u=>{d(h=>[...h].map((S,v)=>v<u?S:null)),x(h=>h.filter(m=>m!==u)),c(u)},b=u=>{d(h=>{var S;const m=[...h??[]];return m[u]&&(m[u].negate=!((S=m[u])!=null&&S.negate)),m})},A=a.map(u=>u==null?void 0:u.id).filter(Boolean),C=Ls(o,t==null?void 0:t[l]);return e.jsxs(e.Fragment,{children:[e.jsx(U,{className:"map-builder",wrap:!0,children:t.map((u,h)=>{var S,v,R,H;if(u.passed)return e.jsx(e.Fragment,{});const m=s[u.treeId];return m?e.jsxs("div",{className:"map-builder__segment",children:[l===h&&e.jsx("div",{className:"map-builder__caret",children:e.jsx(_,{icon:e.jsx(fs,{}),className:K("bounce",{speed:"slow",infinite:!0}),size:"small"})}),!!a[h]&&e.jsx(me,{title:e.jsx(j,{pt:`Clique para negar: Não-${(S=a==null?void 0:a[h])==null?void 0:S.text}`,en:`Click to negate: Non-${(v=a==null?void 0:a[h])==null?void 0:v.text}`}),children:e.jsxs(ce,{onClick:()=>b(h),disabled:!(a!=null&&a[h]),className:"map-builder__card map-builder__card--new",children:[((R=a==null?void 0:a[h])==null?void 0:R.negate)&&e.jsx(_,{icon:e.jsx(W,{}),size:"small",className:"map-builder__card-no"}),(H=a==null?void 0:a[h])==null?void 0:H.text]})}),((i==null?void 0:i[h])??[]).map(f=>e.jsxs("div",{className:"map-builder__card",children:[(f==null?void 0:f.negate)&&e.jsx(_,{icon:e.jsx(W,{}),size:"small",className:"map-builder__card-no"}),f.text]},f.id)),e.jsx(ce,{onClick:()=>N(h),disabled:!(a!=null&&a[h]||p.includes(h)),children:e.jsx(X,{id:m.treeType,text:m.card.text})})]},`map-segment-${u.index}`):e.jsx(e.Fragment,{})})}),C.length>0&&e.jsxs(Fe,{className:"contained",wrap:!0,children:[e.jsxs("strong",{children:[e.jsx(j,{pt:"Caminhos possíveis para a árvore atual",en:"Possible paths for the current tree"}),":"]}),C.map((u,h)=>{var m,S;return e.jsx(gs,{className:K("tada",{delay:h}),children:(S=(m=s==null?void 0:s[u])==null?void 0:m.card)==null?void 0:S.text},`highlighted-possibility-${u}`)})]}),e.jsxs(ze,{title:e.jsx(j,{pt:"Cartas",en:"Hand"}),contained:!0,children:[(r.hand??[]).map(u=>e.jsx(ce,{onClick:()=>I(u),disabled:A.includes(u.id)||l>=t.length,className:"map-builder__card-button",children:e.jsx(_s,{hideHeader:!0,children:u.text})},u.id)),e.jsx(q,{size:"large",type:"default",onClick:()=>T(l),disabled:!((P=i==null?void 0:i[l])!=null&&P.length),children:e.jsx(j,{pt:"Pular árvore",en:"Skip tree"})})]}),e.jsx(U,{children:e.jsx(We,{size:"large",disabled:A.length===0,onClick:()=>n({newMap:a}),children:e.jsx(j,{pt:"Enviar Mapa",en:"Submit Map"})})})]})}function zs({players:r,user:s,announcement:n,forest:o,currentRound:t,onSubmitMap:i}){De();const a=ks(r,s);return e.jsxs(V,{fullWidth:!0,announcement:n,children:[e.jsx(oe,{children:t===1?e.jsx(j,{pt:"Construa o seu mapa",en:"Build your map"}):e.jsx(j,{pt:"Expanda seu mapa",en:"Expand your map"})}),e.jsx(B,{type:"rule",children:e.jsx(j,{pt:e.jsxs(e.Fragment,{children:["Você precisa ajudar os outros jogadores a descobrirem o seu caminho pela floresta.",e.jsx("br",{}),"Começando da ",e.jsx(Me,{children:"bússola"}),", escolha 1 carta para cada árvore do caminho.",e.jsx("br",{}),"Você ganha ",e.jsx(E,{children:"pontos"})," se jogadores adivinharem seu caminho, então tente fazer um bom trabalho."]}),en:e.jsxs(e.Fragment,{children:["You need to help the other players to discover your path through the forest.",e.jsx("br",{}),"Starting from the ",e.jsx(Me,{children:"compass"}),", choose 1 card for each tree of the path.",e.jsx("br",{}),"You earn ",e.jsx(E,{children:"points"})," if players guess your path correctly, so try to do a good job."]})})}),e.jsx(J,{forest:o,map:s.map,showPath:!0,hidePassedTreeNames:!0,players:r,playerMapping:a}),e.jsx(B,{type:"action",children:e.jsx(j,{pt:e.jsxs(e.Fragment,{children:["Clique nas cartas em sequência para definir seu mapa, uma carta por árvore.",e.jsx("br",{}),"Você pode fazer quantos segmentos quiser desde que pelo menos uma carta esteja em cada árvore (dessa rodada ou de uma rodada anterior já que as cartas são cumulativas).",e.jsx("br",{}),"Na barra abaixo, se quiser negar ",e.jsx(_,{icon:e.jsx(W,{}),size:"small"})," um adjectivo selecionado, clique nele acima da árvore para trocar.",e.jsx("br",{}),"Se quiser refazer uma árvore ",e.jsx(_,{icon:e.jsx(pe,{}),size:"small"}),", clique nela.",e.jsx("br",{}),"Quando você estiver pronto, aperte Enviar Mapa."]}),en:e.jsxs(e.Fragment,{children:["Click on the cards in sequence to define your map, you can't skip any tree.",e.jsx("br",{}),"You can build as many segments you with as long as there is at least one card on each tree (from this round or a previous one since the cards are cumulative).",e.jsx("br",{}),"If you want to negate ",e.jsx(_,{icon:e.jsx(W,{}),size:"small"})," an adjective you selected, click on it below the tree to change.",e.jsx("br",{}),"If you want to redo a tree ",e.jsx(_,{icon:e.jsx(pe,{}),size:"small"}),", click on it.",e.jsx("br",{}),"When you are ready, press Submit Map."]})})}),e.jsx(Gs,{user:s,forest:o,onSubmitMap:i})]})}function qs({user:r,announcement:s,forest:n}){return e.jsxs(V,{fullWidth:!0,announcement:s,children:[e.jsx(oe,{children:e.jsx(j,{pt:"Todos os jogadores já descobriam seu mapa completamente",en:"All players have discovered your map completely"})}),e.jsx(Y,{contained:!0,children:e.jsx(j,{pt:e.jsx(e.Fragment,{children:"Aguarde pacientemente, você ainda vai participar na hora de adivinhar."}),en:e.jsx(e.Fragment,{children:"Sit and wait patiently, you will still participate when it's time to guess."})})}),e.jsx(J,{forest:n,map:r.map,showPath:!0})]})}function $s({players:r,state:s}){var l,c;const n=xe(r,s),{step:o,setStep:t}=je(),i=Ms(t),a=e.jsx(fe,{icon:e.jsx(ne,{}),title:s.round.current===1?e.jsx(j,{pt:"Construa o seu mapa",en:"Build your map"}):e.jsx(j,{pt:"Expanda seu mapa",en:"Expand your map"}),currentRound:(l=s==null?void 0:s.round)==null?void 0:l.current,type:"overlay",children:e.jsx(Y,{children:e.jsx(j,{pt:"Você consegue mapear as árvores usando apenas adjetivos?",en:"Can you map the tree path using only adjectives?"})})}),d=(c=n==null?void 0:n.map)==null?void 0:c.every(p=>p.passed);return e.jsx(te,{phase:s==null?void 0:s.phase,allowedPhase:k.MAP_BUILDING,children:e.jsx(_e,{step:o,players:r,waitingRoom:{content:e.jsx(Fs,{forest:s.forest,map:n.map,newMap:n.newMap})},children:e.jsxs(Be,{condition:d,children:[e.jsx(qs,{user:n,announcement:a,forest:s.forest}),e.jsx(zs,{players:r,user:n,announcement:a,forest:s.forest,currentRound:s.round.current,onSubmitMap:i})]})})})}function $e({segment:r,tree:s,showArrow:n,className:o}){return e.jsxs("div",{className:O("map-entry",o),children:[s&&e.jsx(X,{id:s.treeType,text:s.card.text,className:"map-entry__tree"}),e.jsx(_,{icon:e.jsx(ne,{}),size:"large",className:"map-entry__icon"}),r.clues.map(t=>e.jsxs("div",{className:"map-entry__clue",children:[t.text,(t==null?void 0:t.negate)&&e.jsx(_,{icon:e.jsx(W,{}),size:"small",className:"map-entry__clue-no"})]},`clue-${r.index}-${t.id}`)),n&&e.jsx(_,{icon:e.jsx($,{}),size:"small",className:"map-entry__arrow"})]},`map-${r.index}`)}const Vs={id:0,treeType:0,card:{id:"",text:""}};function ve({map:r=[],selectedTrees:s=[],fullMap:n=!1}){const o=n?r:r.filter(t=>t.active);return e.jsx(U,{wrap:!0,className:"player-map",style:{gridTemplateColumns:`repeat(${o.length}, 100px)`},children:o.map((t,i,a)=>{const d=s[i+1],l=n&&a.length-1===i?Vs:void 0;return e.jsx($e,{className:"player-map__segment",tree:l??d,segment:t,showArrow:a.length-1!==i},`map-${t.index}`)})})}function Ys({forest:r,map:s=[],onSubmitPath:n,pathId:o,user:t,players:i}){var u,h;const a=s.filter(m=>!m.passed&&m.clues.length>0),d=((u=he.findLast(s,m=>m.passed))==null?void 0:u.treeId)??((h=s==null?void 0:s[0])==null?void 0:h.treeId)??0,l=s.filter(m=>m.passed).map(m=>m.treeId),c=Ds(t,a,o),[p,x]=F.useState([d]),[I,T]=F.useState(d),N=Se(I,[...p,...l]),b=p.length>a.length,A=m=>{T(m);const S=p.indexOf(m);S>-1?x(v=>v.slice(0,S+1)):x(v=>[...v,m])},C=p.map(m=>r[m]),P=a==null?void 0:a[p.length-1];return De(),e.jsxs(U,{vertical:!0,children:[e.jsx(ve,{map:s,selectedTrees:C}),e.jsx(bs,{active:!!P,children:e.jsx($e,{segment:P,className:K("rubberBand")},P==null?void 0:P.treeId)}),e.jsx(We,{size:"large",onClick:()=>n({guess:p.slice(1),pathId:o,choseRandomly:!1}),disabled:p.length-1<a.length,children:e.jsx(j,{pt:"Concluir",en:"Submit"})}),e.jsx(vs,{onClick:()=>n({guess:Bs(s,a,!0,Object.values(c).flat().map(Number)),pathId:o,choseRandomly:!0}),ghost:!0,children:"Random Dev"}),e.jsx(J,{forest:r,map:s,actions:{selection:p,clickableTrees:N,onSelectTree:A,activeTree:I,disabled:b},playerMapping:c,players:i})]})}function Xs({players:r,announcement:s,forest:n,activePlayer:o,onSubmitPath:t,user:i}){const a=Object.keys(r).length;return e.jsxs(V,{fullWidth:!0,announcement:s,children:[e.jsx(oe,{children:e.jsx(j,{pt:e.jsxs(e.Fragment,{children:["Siga o mapa de ",e.jsx(Z,{player:o})]}),en:e.jsxs(e.Fragment,{children:["Follow ",e.jsx(Z,{player:o}),"'s map"]})})}),e.jsx(B,{type:"action",children:e.jsx(j,{pt:e.jsxs(e.Fragment,{children:["Baseado no ",e.jsx(se,{children:"mapa de adjetivos"}),", clique nas"," ",e.jsx(re,{children:"árvores"})," circuladas de pontinhos brancos para escolher aquele caminho.",e.jsx("br",{}),"Cada árvore correta vale ",e.jsx(E,{children:"1 ponto"})," por jogador que acertar (Por exemplo, 3 jogadores = 3 pontos).",e.jsx("br",{}),"Então, talvez valha a pena discutir! Porém, se somente um jogador acertar o caminho, ele ganha"," ",e.jsxs(E,{children:[a," pontos"]}),".",e.jsx("br",{}),"O criador do mapa ganha o mesmo número de pontos que os jogadores."]}),en:e.jsxs(e.Fragment,{children:["Based on the ",e.jsx(se,{children:"adjectives map"}),", click on the"," ",e.jsx(re,{children:"circled trees"})," with white dots to choose that path.",e.jsx("br",{}),"Each correct tree is worth ",e.jsx(E,{children:"1 point"})," per player that guesses it (For example, 3 players = 3 points).",e.jsx("br",{}),"So, it might be worth discussing out loud! However, if only one player guesses the path, they earn ",e.jsxs(E,{children:[a," points"]}),".",e.jsx("br",{}),"The map creator also earns the same number of points as the players."]})})}),!!n&&o.map&&e.jsx(Ys,{forest:n,map:o.map,onSubmitPath:t,pathId:o.id,user:i,players:r})]})}function Js({players:r,announcement:s,forest:n,activePlayer:o}){const t=Object.keys(r).length;return e.jsxs(V,{fullWidth:!0,announcement:s,children:[e.jsx(oe,{children:e.jsx(j,{pt:e.jsx(e.Fragment,{children:"Os jogadores estão seguindo o seu mapa!"}),en:e.jsx(e.Fragment,{children:"Players are following your map!"})})}),e.jsx(B,{type:"wait",children:e.jsx(j,{pt:e.jsxs(e.Fragment,{children:["Baseado no ",e.jsx(se,{children:"mapa de adjetivos"}),", eles vão clicando nas"," ",e.jsx(re,{children:"árvores"})," para escolher o caminho.",e.jsx("br",{}),"Cada árvore correta vale ",e.jsx(E,{children:"1 ponto"})," por jogador que acertar. Por exemplo, 3 jogadores = 3 pontos.",e.jsx("br",{}),"Se somente um jogador acertar o caminho, ele ganha"," ",e.jsxs(E,{children:[t," pontos"]}),".",e.jsx("br",{}),"Você, como criador do mapa, ganha o mesmo número de pontos que os jogadores."]}),en:e.jsxs(e.Fragment,{children:["Based on the ",e.jsx(se,{children:"adjectives map"}),", players will click on the"," ",e.jsx(re,{children:"trees"})," to choose the path.",e.jsx("br",{}),"Each correct tree is worth ",e.jsx(E,{children:"1 point"})," per player that guesses it. For example, 3 players = 3 points.",e.jsx("br",{}),"If only one player guesses the path, they earn"," ",e.jsxs(E,{children:[t," points"]}),".",e.jsx("br",{}),"You as the map creator also earns the same number of points as the players."]})})}),e.jsx(ve,{map:o.map}),e.jsx(J,{forest:n,map:o.map,showPath:!0})]})}function Qs({players:r,state:s}){var c;const n=xe(r,s),{step:o,setStep:t}=je(),[i,a]=Ts("activePlayerId",s,r),d=Rs(t),l=e.jsx(fe,{icon:e.jsx(as,{}),title:e.jsx(j,{pt:"Siga os mapas!",en:"Follow the maps!"}),currentRound:(c=s==null?void 0:s.round)==null?void 0:c.current,type:"overlay",duration:3,children:e.jsxs(Y,{children:[e.jsx(j,{pt:"Vamos analisar e tentar seguir o mapa de cada jogador",en:"Let's analise and try to follow the each player's map"}),e.jsx("br",{}),e.jsx(Ss,{players:r,order:s.turnOrder,activePlayerId:s.activePlayerId})]})});return e.jsx(te,{phase:s==null?void 0:s.phase,allowedPhase:k.PATH_FOLLOWING,children:e.jsx(_e,{step:o,players:r,children:e.jsxs(Be,{condition:a,children:[e.jsx(Js,{players:r,announcement:l,forest:s.forest,activePlayer:i}),e.jsx(Xs,{players:r,user:n,announcement:l,forest:s.forest,onSubmitPath:d,activePlayer:i,isTheActivePlayer:a})]})})})}function Ks({players:r,ranking:s,onGoBack:n,round:o}){return e.jsxs(Is,{players:r,ranking:s,gainedPointsDescriptions:[e.jsx(j,{pt:"Rotas corretos",en:"Correct paths"},"1"),e.jsx(j,{pt:"Pontos por sua rota",en:"Points for your route"},"2")],children:[e.jsx(B,{type:"event",children:e.jsx(j,{pt:"Não se preocupe se você ficou pra trás! O jogador mais a frente de cada rota, te gritou e você conseguiu encontrá-lo.",en:"Don't worry if you were left behind! The player furthest ahead on that route, call you and you caught up"})}),e.jsx(U,{children:e.jsx(q,{onClick:n,children:e.jsx(j,{pt:"Ver resultado novamente",en:"See results again"})})}),e.jsx(ss,{round:o})]})}function Zs({players:r,forest:s,currentPlayer:n}){const o=n.map.filter(t=>t.active);return e.jsx("div",{className:"div-container player-map",style:{gridTemplateColumns:`repeat(${o.length}, 120px)`},children:o.map((t,i,a)=>{const d=t.passed?s[t.treeId]:null;return e.jsxs("div",{className:"player-map__segment",children:[e.jsxs("div",{className:"player-map__top",children:[d?e.jsx(X,{id:d.treeType,text:d.card.text,className:"player-map__tree",width:75}):e.jsx(He,{id:"1",className:"player-map__tree-invisible",text:"",width:75}),e.jsx(_,{icon:e.jsx(ne,{}),size:"large",className:"player-map__icon"}),e.jsx("div",{children:t.clues.map(l=>e.jsxs("div",{className:"player-map__clue",children:[l.text,(l==null?void 0:l.negate)&&e.jsx(_,{icon:e.jsx(W,{}),size:"small",className:"player-map__clue-no"})]},`clue-${t.index}-${l.id}`))}),t.index===0&&e.jsx(_,{icon:e.jsx(ge,{}),size:"small",className:"player-map__starting-flag"}),a.length-1!==i&&e.jsx(_,{icon:e.jsx($,{}),size:"small",className:"player-map__arrow"})]}),e.jsxs("div",{className:"player-map__scoring",children:[t.playersIds.length>0?e.jsx("div",{className:"player-map__players",children:t.playersIds.map(l=>{const c=r[l];return e.jsx(me,{title:c.name,children:e.jsx(ys,{size:"small",id:c.avatarId})},`player-${l}`)})}):e.jsx("div",{className:"player-map__no-players",children:e.jsx(j,{pt:"Nenhum jogador",en:"No players"})}),e.jsx("div",{children:t.score>0&&e.jsx(E,{children:t.score})})]})]},`map-${t.index}`)})})}function er({players:r,gallery:s,user:n,forest:o,slideShowConfig:t}){const i=Object.keys(r).length,a=s[t.slideIndex],d=de(a.avatarId),l=Us(r,a);return e.jsxs(V,{fullWidth:!0,children:[e.jsx(Re,{children:e.jsx(j,{pt:e.jsxs(e.Fragment,{children:["Mapa do(a) ",e.jsx(Z,{player:a})]}),en:e.jsxs(e.Fragment,{children:[e.jsx(Z,{player:a}),"'s map"]})})}),e.jsx(B,{type:"rule",children:e.jsx(j,{pt:e.jsxs(e.Fragment,{children:["Você ganha pontos ao acertar o caminho do mapa. ",e.jsx("br",{}),"Cada árvore correta vale ",e.jsx(E,{children:"1 ponto"})," por jogador que acertar."," ",e.jsx("br",{}),"Se você for o único que acertou, você ganha"," ",e.jsxs(E,{children:[i," pontos"]}),"."]}),en:e.jsxs(e.Fragment,{children:["You get points by guessing the map path. ",e.jsx("br",{}),"Each correct tree is worth ",e.jsx(E,{children:"1 point"})," per player who guesses it."," ",e.jsx("br",{}),"If you are the only one who guessed it, you get"," ",e.jsxs(E,{children:[i," points"]}),"."]})})}),e.jsx(Zs,{players:r,forest:o,currentPlayer:a}),e.jsxs("div",{children:[e.jsx(J,{forest:o,map:a.map,size:"small",players:r,user:n,forestBorderColor:de(a.avatarId),playerMapping:l}),e.jsx(Es,{config:t,barColor:d})]})]})}function sr({players:r,state:s}){var c;const n=xe(r,s),{step:o,goToPreviousStep:t,goToNextStep:i}=je(),a=F.useMemo(()=>Le(r).filter(p=>p.map.some(x=>x.active)),[r]),d=Ns({length:a.length,slideDuration:As,onExpire:i}),l=()=>{d.reset(),t()};return e.jsx(te,{phase:s==null?void 0:s.phase,allowedPhase:k.RESULTS,children:e.jsxs(_e,{step:o,players:r,children:[e.jsx(fe,{icon:e.jsx(is,{}),title:e.jsx(j,{pt:"Resultado",en:"Results"}),currentRound:(c=s==null?void 0:s.round)==null?void 0:c.current,type:"block",onClose:i,unskippable:!0,children:e.jsx(Y,{children:e.jsx(j,{pt:"Quem é o melhor em seguir direções?",en:"Who is the best at following directions?"})})}),e.jsx(er,{gallery:a,players:r,slideShowConfig:d,forest:s.forest,user:n}),e.jsx(Ks,{players:r,round:s.round,ranking:s.ranking,onGoBack:l})]})})}const g={MOST_CARDS:"MOST_CARDS",FEWEST_CARDS:"FEWEST_CARDS",MOST_NEGATIVE_CARDS:"MOST_NEGATIVE_CARDS",FEWEST_NEGATIVE_CARDS:"FEWEST_NEGATIVE_CARDS",MOST_TREES:"MOST_TREES",FEWEST_TREES:"FEWEST_TREES",BEST_MAP:"BEST_MAP",WORST_MAP:"WORST_MAP",BEST_SCOUT:"BEST_SCOUT",WORST_SCOUT:"WORST_SCOUT",MOST_UP:"MOST_UP",MOST_RIGHT:"MOST_RIGHT",MOST_DOWN:"MOST_DOWN",MOST_LEFT:"MOST_LEFT",MOST_UP_LEFT:"MOST_UP_LEFT",MOST_UP_RIGHT:"MOST_UP_RIGHT",MOST_DOWN_LEFT:"MOST_DOWN_LEFT",MOST_DOWN_RIGHT:"MOST_DOWN_RIGHT"},rr={[g.MOST_CARDS]:{icon:"list",title:{pt:"Mais Cartas",en:"Most Cards"},description:{pt:"Usou o maior número de cartas",en:"Used the most cards"}},[g.FEWEST_CARDS]:{icon:"ellipsis",title:{pt:"Menos Cartas",en:"Fewest Cards"},description:{pt:"Usou o menor número de cartas",en:"Used the fewest cards"}},[g.MOST_NEGATIVE_CARDS]:{icon:"minus",title:{pt:"Mais Adjetivos Negativos",en:"Most Negative Adjectives"},description:{pt:"Usou o maior número de cartas negativas",en:"Used the most negative cards"}},[g.FEWEST_NEGATIVE_CARDS]:{icon:"plus",title:{pt:"Menos Cartas Negativas",en:"Fewest Negative Cards"},description:{pt:"Usou o menor número de cartas negativas",en:"Used the fewest negative cards"}},[g.MOST_TREES]:{icon:"tree",title:{pt:"Mais Árvores",en:"Most Trees"},description:{pt:"Passou pelo maior número de árvores",en:"Passed by the most trees"}},[g.FEWEST_TREES]:{icon:"x",title:{pt:"Menos Árvores",en:"Fewest Trees"},description:{pt:"Passou pelo menor número de árvores",en:"Passed by the fewest trees"}},[g.BEST_MAP]:{icon:"sun",title:{pt:"Melhor Guia",en:"Best Guide"},description:{pt:"Construiu um mapa que os outros jogadores melhor encontraram as direções corretas",en:"Built a map that other players found the correct directions the best"}},[g.WORST_MAP]:{icon:"arrows",title:{pt:"Mapeador Divergente",en:"Diverging Mapper"},description:{pt:"Construiu um mapa que os outros jogadores tiveram mais dificuldade em encontrar as direções corretas",en:"Built a map that other players had the most difficulty finding the correct directions"}},[g.BEST_SCOUT]:{icon:"foot-prints",title:{pt:"Melhor Explorador",en:"Best Scout"},description:{pt:"Acertou as árvores corretas mais vezes",en:"Hit the correct trees the most times"}},[g.WORST_SCOUT]:{icon:"face-tired",title:{pt:"Explorador Confuso",en:"Confused Scout"},description:{pt:"Acertou as árvores corretas menos vezes",en:"Hit the correct trees the fewest times"}},[g.MOST_UP]:{icon:"arrow-up",title:{pt:"Norte",en:"North"},description:{pt:"Andou mais para cima",en:"Walked more up"}},[g.MOST_RIGHT]:{icon:"arrow-right",title:{pt:"Leste",en:"East"},description:{pt:"Andou mais para direita",en:"Walked more right"}},[g.MOST_DOWN]:{icon:"arrow-down",title:{pt:"Sul",en:"South"},description:{pt:"Andou mais para baixo",en:"Walked more down"}},[g.MOST_LEFT]:{icon:"arrow-left",title:{pt:"Oeste",en:"West"},description:{pt:"Andou mais para esquerda",en:"Walked more left"}},[g.MOST_UP_LEFT]:{icon:"double-arrow-up",title:{pt:"Noroeste",en:"Northwest"},description:{pt:"Andou mais para cima e esquerda",en:"Walked more up and left"}},[g.MOST_UP_RIGHT]:{icon:"double-arrow-up",title:{pt:"Nordeste",en:"Northeast"},description:{pt:"Andou mais para cima e direita",en:"Walked more up and right"}},[g.MOST_DOWN_LEFT]:{icon:"double-arrow-down",title:{pt:"Sudoeste",en:"Southwest"},description:{pt:"Andou mais para baixo e esquerda",en:"Walked more down and left"}},[g.MOST_DOWN_RIGHT]:{icon:"double-arrow-down",title:{pt:"Sudeste",en:"Southeast"},description:{pt:"Andou mais para baixo e direita",en:"Walked more down and right"}}};function tr({state:r,players:s}){const n=Le(s),o=r.forest??[];return e.jsxs(Ps,{state:r,players:s,announcementIcon:e.jsx(ge,{}),children:[e.jsx(ws,{players:s,achievements:r.achievements,reference:rr}),e.jsx(ze,{title:e.jsx(j,{pt:"Mapas dos Jogadores",en:"Players' Maps"}),children:n.map(t=>{const i=(t.map??[]).map(a=>o[a.treeId]);return e.jsxs(Fe,{className:"game-over-strip",style:{borderColor:de(t.avatarId)},children:[e.jsx(Os,{player:t,withName:!0,className:"game-over-avatar-strip"}),e.jsx(ve,{map:t.map,fullMap:!0,selectedTrees:i})]},t.id)})})]})}function or(r){if(r&&!r.phase)return Ze;switch(r.phase){case D.DEFAULT.LOBBY:return ns;case D.DEFAULT.RULES:return os;case D.DEFAULT.SETUP:return ts;case D.DEFAULT.WAIT:return Cs;case k.MAP_BUILDING:return $s;case k.PATH_FOLLOWING:return Qs;case k.RESULTS:return sr;case D.DEFAULT.GAME_OVER:return tr;default:return es}}function Ot(){return e.jsx(rs,{gameCollection:Ke.LABIRINTO_SECRETO,getActiveComponent:or})}export{Ot as default};
