import{j as e,k as Ae,T as j,h as ue,e as w,aN as me,aM as k,I as f,o as he,bE as Ie,l as Ye,r as L,b1 as K,bq as Je,cJ as Qe,bf as ye,B,cK as Xe,cL as Ke,aH as Me,n as ce,s as Fe,bL as de,bQ as Le,aZ as Ze,aX as es,aY as ss}from"./index-bBiYI0CQ.js";import{e as te,f as C,u as We,a as De,S as V,b as oe,c as xe,d as je,P as fe,g as _e,n as rs,i as ts,j as os,k as ns,l as as}from"./StepSwitcher-Bl_4V5a3.js";import{A as Ue}from"./AnimatedProcessingIcon-DQ_ncWtq.js";import{I as Y}from"./Instruction-BzEemjcL.js";import{M as ne,D as is,P as cs}from"./PathIcon-BKD8SNBy.js";import{V as Be}from"./ViewOr-Q_zS8sZX.js";import{N as W}from"./NoIcon-qy9V5S5j.js";import{g as ls}from"./ItemCard-BHppIViA.js";import{T as ke}from"./TreeCard-BRXpOROw.js";import{S as ds}from"./Sprite-BxxaIS-m.js";import{F as ps,C as He,T as pe}from"./TreeIcon-6hltdL7B.js";import{P as b}from"./PointsHighlight-BtBXBGgY.js";import{R as H}from"./RuleInstruction-B2-6R5bj.js";import{T as us,a as ms,R as hs}from"./index.esm-sj78_8rq.js";import{A as $}from"./ArrowIcon-CgqmVLbb.js";import{A as xs}from"./AvatarGroup-Dei7KK5c.js";import{V as Oe}from"./ViewIf-B95MxCXQ.js";import{F as ge}from"./FlagIcon-aoxjxccZ.js";import{M as Te}from"./MetricHighlight-C1_Jcng1.js";import{L as js}from"./LocationIcon-Dwk6SfZh.js";import{C as fs}from"./Card-CaiExK-3.js";import{C as Ge}from"./Container-CD6Fgnjt.js";import{T as _s}from"./TextHighlight-DRC9oNzu.js";import{u as gs}from"./useWhichPlayerIsThe-O6yvZOr-.js";import{T as Ts}from"./TurnOrder-aafwUhJh.js";import{A as Z}from"./AvatarName-DC02_Yqy.js";import{D as Ss}from"./DevButton-C1n9CUk9.js";import{M as vs}from"./MouseFollowingContent-ChOpYPaX.js";import{S as Es,u as bs}from"./SlideShowControls-DKI7gO_H.js";import{S as Ns}from"./StepRankingWrapper-B5YoXS_x.js";import{A as Is}from"./Avatar-CqZ5pSdn.js";import{A as ys}from"./AvatarStrip-DvHlPvUY.js";import"./GameOver-CoHIy9PM.js";import{G as Os}from"./GameOverWrapper-h7LUN5al.js";import{A as Cs}from"./Achievements-I2WnMSMf.js";import"./useBlurCards-Dy8AUFyg.js";import"./speech-CHGnGlLE.js";import"./useDevFeatures-DgcvQaBL.js";import"./RulesModal-CjoFV41N.js";import"./WritingIcon-CBa3-oCr.js";import"./index-CO20-gzn.js";import"./PurePanel-C5LpALB0.js";import"./useMutation-DqONHNjc.js";import"./Game-Bv4KSS2l.js";import"./WaitingRoomIcon-BPg1Fa4m.js";import"./AnimatedClockIcon-BipX8cGN.js";import"./index-C5bzIgq9.js";import"./useBubbleLock-D1QcwQqY.js";import"./index--GJB5fRi.js";import"./Overflow-Dwa0hFn2.js";import"./useEvent-VNzdwCPl.js";import"./index-Dcm09iUa.js";import"./index-BIyT8dRs.js";import"./GameBanner-B4VActZo.js";import"./useTDBaseUrl-BF9foKiS.js";import"./index-7UoZ0tWq.js";import"./InfoCircleOutlined-B2mHCXed.js";import"./index-uCvptK7f.js";import"./SignIn-jhENnYwf.js";import"./GoogleIcon-D8adj3BF.js";import"./Loading-BFplzEri.js";import"./AnimatedLoaderIcon-DrbrbCS7.js";import"./LikeFilled-zC1i874y.js";import"./WarningOutlined-CLcxTX3P.js";import"./StarIcon-Av1qSXhR.js";import"./StarFilled-CCZISw9S.js";import"./StepBackwardOutlined-D0OOx908.js";import"./TrophyOutlined-x8pC4mwy.js";import"./RankingBoard-CbeK3MHC.js";import"./CaretUpOutlined-hFkiG4cq.js";import"./index-DxDqKiYi.js";import"./useMergedState-BvNloe6L.js";import"./progress-CR0OdLRw.js";import"./TheEndIcon-BnRs3148.js";import"./Medal-C8nZHsXz.js";function ws({state:r}){return e.jsx(te,{phase:r==null?void 0:r.phase,allowedPhase:C.DEFAULT.WAIT,className:"setup",children:e.jsxs("div",{className:"phase-announcement",children:[e.jsx(Ae,{children:e.jsx(j,{pt:"Processando...",en:"Processing..."})}),e.jsx(Ue,{className:"phase-announcement__icon"}),e.jsx(Y,{children:e.jsx(j,{pt:"Aguarde um momento",en:"Just a moment"})})]})})}const ze={SUBMIT_MAP:"SUBMIT_MAP",SUBMIT_PATH:"SUBMIT_PATH"},P=7,X=5,O={UP:"UP",RIGHT:"RIGHT",DOWN:"DOWN",LEFT:"LEFT",UP_LEFT:"UP_LEFT",UP_RIGHT:"UP_RIGHT",DOWN_LEFT:"DOWN_LEFT",DOWN_RIGHT:"DOWN_RIGHT"},Ps=15;function Rs(r){const{translate:s}=ue(),o=We({actionName:"submit-map",onSuccess:()=>r(2),onError:()=>r(0),successMessage:s("Mapa submetido com sucesso","Map submitted successfully"),errorMessage:s("Vixi, o aplicativo encontrou um erro ao tentar enviar seu mapa","Oops, the application found an error while trying to submit your map")});return n=>{o({action:ze.SUBMIT_MAP,...n})}}function As(r){const{translate:s}=ue(),o=We({actionName:"submit-path",onSuccess:()=>r(2),onError:()=>r(0),successMessage:s("Caminho submetido com sucesso","Path submitted successfully"),errorMessage:s("Vixi, o aplicativo encontrou um erro ao tentar enviar seu caminho","Oops, the application found an error while trying to submit your path")});return n=>{o({action:ze.SUBMIT_PATH,...n})}}function J({id:r,text:s,width:o=100,className:n}){if(typeof r=="string"){const[t,a]=ls(r);return e.jsxs("div",{className:w("tree-card",n),style:{width:`${o}px`},children:[e.jsx(ds,{source:t,id:a,width:o,title:s}),e.jsx(me,{title:s,children:e.jsx("div",{className:"tree-card__text",children:s})})]})}return e.jsx(ke,{id:String(r),text:s,width:o,className:n})}function Ms({forest:r,map:s,newMap:o}){if(!o||!s)return e.jsx(e.Fragment,{});const n=(s??[]).filter(t=>!t.passed);return e.jsx(k,{wrap:!0,children:n.map((t,a)=>{const{treeId:i,passed:c}=t,d=r[i],l=o==null?void 0:o[a];return e.jsxs("div",{className:"map-builder__segment",children:[!!l&&e.jsxs("div",{className:"map-builder__card map-builder__card--new",children:[l.text,(l==null?void 0:l.negate)&&e.jsx(f,{icon:e.jsx(W,{}),size:"small",className:"map-builder__card-no"})]}),t.clues.map(u=>e.jsxs("div",{className:"map-builder__card",children:[u.text,(u==null?void 0:u.negate)&&e.jsx(f,{icon:e.jsx(W,{}),size:"small",className:"map-builder__card-no"})]},`card-${t.index}-${u.id}`)),e.jsx(J,{id:d.treeType,text:c?"":d.card.text})]},i)})})}const A=r=>{const[s,o]=r;return s+o*P},ee=r=>{const s=r%P,o=Math.floor(r/P);return[s,o]},Fs=r=>{const s=ee(r),[o,n]=s;return o===0?O.LEFT:o===P-1?O.RIGHT:n===0?O.UP:n===X-1?O.DOWN:null},le=(r,s)=>{const[o,n]=ee(r),[t,a]=ee(s),i=t-o+(a-n)*P;return i===1?O.RIGHT:i===-1?O.LEFT:i===P?O.DOWN:i===-7?O.UP:i===P+1?O.DOWN_RIGHT:i===P-1?O.DOWN_LEFT:i===-6?O.UP_RIGHT:i===-8?O.UP_LEFT:O.UP},Se=(r,s)=>{const[o,n]=ee(r),t=[],a=[o,n-1],i=A(a);a[1]>=0&&!s.includes(i)&&t.push(a);const c=[o+1,n],d=A(c);c[0]<P&&!s.includes(d)&&t.push(c);const l=[o,n+1],u=A(l);l[1]<X&&!s.includes(u)&&t.push(l);const m=[o-1,n],N=A(m);m[0]>=0&&!s.includes(N)&&t.push(m);const S=[o-1,n-1],I=A(S);S[0]>=0&&S[1]>=0&&!s.includes(I)&&t.push(S);const v=[o+1,n-1],M=A(v);v[0]<P&&v[1]>=0&&!s.includes(M)&&t.push(v);const R=[o-1,n+1],D=A(R);R[0]>=0&&R[1]<X&&!s.includes(D)&&t.push(R);const E=[o+1,n+1],p=A(E);return E[0]<P&&E[1]<X&&!s.includes(p)&&t.push(E),t.map(h=>A(h))},Ls=(r,s)=>{if(!s)return[];const o=r.filter(n=>n.passed).map(n=>n.treeId);return Se(s.previousTree??s.treeId,o).filter(n=>n!==s.treeId)},Ws=(r,s)=>{const o=s.map,n=o.filter(a=>a.active),t={};if(n[0].index>0){const a=o[n[0].index-1];t[a.treeId]=Object.keys(r).filter(i=>i!==s.id)}return Object.values(r).forEach(a=>{const i=a.history[s.id];i&&n.forEach((c,d,l)=>{const u=i[c.index];if(u)if(d===l.length-1)u.forEach(m=>{t[m]===void 0&&(t[m]=[]),t[m].push(a.id)});else{const m=u==null?void 0:u[u.length-1];t[m]===void 0&&(t[m]=[]),t[m].push(a.id)}})}),t},Ds=(r,s,o)=>{const n=s[0],t={},a=r.history[o];if(a){const i=a[n.index];i&&i.forEach(c=>{t[c]===void 0&&(t[c]=[]),t[c].push(r.id)})}return t},Us=(r,s)=>{const n=(s.map??[]).filter(a=>!a.passed),t={};return Object.values(r).forEach(a=>{const i=a.history[s.id];i&&n.forEach((c,d,l)=>{const u=i[c.index];if(u)if(d===l.length-1)u.forEach(m=>{t[m]===void 0&&(t[m]=[]),t[m].push(a.id)});else{const m=u==null?void 0:u[u.length-1];t[m]===void 0&&(t[m]=[]),t[m].push(a.id)}})}),t},Bs=(r,s,o=!1,n=[])=>{const t=he.union(r.filter(a=>a.passed).map(a=>a.treeId),n);return s.map(a=>{const i=Se(t[t.length-1],t),c=a.treeId,d=o?Ie([...i,c]):Ie(i);return t.push(d),d})};function ks(){const r=Ye({initialWidth:300,initialHeight:300}),[s,o]=L.useState(r);return L.useEffect(()=>{const n=document.getElementById("screen");n&&o({width:Math.min(n.clientWidth,r.width),height:Math.min(n.clientHeight,r.height)})},[r.width,r.height]),[s.width,s.height]}function Ce({segment:r,tree:s,startingTeeId:o,finalTreeId:n,currentTreeId:t,showPath:a=!1,showArrow:i=!1,className:c="",hidePassedTreeNames:d=!1,width:l=75}){const u=!!r,m=o===s.id,N=Fs(s.id),S=n===s.id,I=t===s.id,v=((r==null?void 0:r.passed)&&!I)??!1;return e.jsxs("div",{className:w("forest__tree",m&&`forest__tree--${N}`,S&&a&&"forest__tree--goal",u&&a&&"forest__tree--segment",v&&"forest__tree--passed",I&&"forest__tree--current",c),children:[e.jsx(J,{id:s.treeType,text:r!=null&&r.passed&&d?"":s.card.text,width:l}),a&&S&&e.jsx(f,{icon:e.jsx(ps,{}),size:"large",className:`forest__end forest__end--${r.direction}`}),I&&e.jsx("div",{className:"forest__compass",children:e.jsx(f,{icon:e.jsx(He,{}),size:"large",className:w("forest__compass-icon",K("pulse",{infinite:!0}))})}),m&&e.jsx(f,{icon:e.jsx(ge,{}),size:"large",className:`forest__start forest__start--${N}`}),(i||a||v)&&!S&&u&&r.direction&&e.jsxs(e.Fragment,{children:[e.jsx("span",{className:w(`forest__arrow-line forest__arrow-line--${r.direction}`,u&&a&&"forest__tree--segment",v&&"forest__tree--passed",I&&"forest__tree--current")}),e.jsx(f,{icon:e.jsx($,{}),size:"large",className:`forest__arrow forest__arrow--${r.direction}`})]})]})}function Q({forest:r,map:s=[],showPath:o,actions:n,players:t,size:a="large",hidePassedTreeNames:i=!1,user:c=Qe,forestBorderColor:d="transparent",playerMapping:l}){var p,h,x;const[u]=ks(),m=Je(7,{gap:16,minWidth:60,maxWidth:100});if(!r||!s||s.length===0||!u)return e.jsx(k,{vertical:!0,children:e.jsx(f,{icon:e.jsx(Ue,{}),size:"large"})});const N=(p=s==null?void 0:s[0])==null?void 0:p.treeId,S=s.reduce((g,y)=>(g[y.treeId]=y,g),{}),I=((h=he.findLast(s,g=>g.passed))==null?void 0:h.treeId)??N,v=(x=s[s.length-1])==null?void 0:x.treeId,M=150*7+72,E=Math.min(M,u*(a==="small"?.5:.9))/M;return e.jsx("div",{className:"forest-container-area",children:e.jsx(us,{initialScale:E,minScale:.5,maxScale:4,wheel:{step:.05,disabled:!0},centerOnInit:!0,children:({zoomIn:g,zoomOut:y,resetTransform:G})=>e.jsxs(e.Fragment,{children:[e.jsx(Pe,{position:"top",zoomIn:g,zoomOut:y,resetTransform:G}),e.jsx(Pe,{position:"bottom",zoomIn:g,zoomOut:y,resetTransform:G}),e.jsx(ms,{wrapperClass:w("forest-container",a==="small"&&"forest-container--small"),children:e.jsx("div",{className:"forest",style:{borderColor:d},children:r.map(_=>{const F=S==null?void 0:S[_.id];if(n){const{selection:U=[],clickableTrees:$e,onSelectTree:Ve,activeTree:Ee,disabled:z}=n,q=$e.includes(_.id),ae=q||U.includes(_.id);if(ae){const ie=U.includes(_.id),be=Ee===_.id,Ne=U.indexOf(_.id);return e.jsxs("div",{className:w("forest__tree-container forest__tree-button",q&&z&&"forest__tree-button--disabled"),onClick:()=>{(ae&&!z||ae&&z&&!q)&&Ve(_.id)},children:[e.jsx(Ce,{segment:F,tree:_,startingTeeId:N,finalTreeId:v,currentTreeId:I,showPath:o,className:w(q&&!z&&"forest__tree--clickable",ie&&"forest__tree--selected",be&&"forest__tree--active"),width:m}),ie&&I!==_.id&&e.jsxs(e.Fragment,{children:[e.jsx("span",{className:w(`forest__arrow-from-line forest__arrow-from-line--${le(U[Ne-1],_.id)}`,ie&&"forest__tree--selected",be&&"forest__tree--active")}),e.jsx(f,{icon:e.jsx($,{}),size:"large",className:w(`forest__arrow-to forest__arrow-to--${le(U[Ne-1],_.id)}`)})]}),q&&!z&&e.jsx(f,{icon:e.jsx($,{}),size:"large",className:w(`forest__arrow-to forest__arrow-to--${le(U[U.length-1]??Ee,_.id)}`)}),e.jsx(Oe,{condition:!!t&&!!(l!=null&&l[_.id]),children:e.jsx("div",{className:"forest__players",children:!!t&&e.jsx(we,{players:t,playerIds:(l==null?void 0:l[_.id])??[],user:c})})})]},`tree-${_.id}`)}}return e.jsxs("div",{className:"forest__tree-container",children:[e.jsx(Ce,{segment:F,tree:_,startingTeeId:N,finalTreeId:v,currentTreeId:I,showPath:o,hidePassedTreeNames:i,width:m}),e.jsx(Oe,{condition:!!t&&!!(l!=null&&l[_.id]),children:e.jsx("div",{className:"forest__players",children:!!t&&e.jsx(we,{players:t,playerIds:(l==null?void 0:l[_.id])??[],user:c})})})]},`tree-${_.id}`)})})})]})})})}function we({players:r,playerIds:s,user:o}){const{translate:n}=ue(),t=s.map(a=>r[a]);return e.jsx(xs,{list:t,user:o,tooltipPrefix:n("Último lugar visitado por: ","Last visited place by: ")})}function Pe({zoomIn:r,zoomOut:s,resetTransform:o,position:n}){return e.jsx(ye,{className:w("forest-container-controls",`forest-container-controls--${n}`),justify:"center",children:e.jsxs(ye,{children:[e.jsx(B,{onClick:()=>r(.1),size:"small",children:e.jsx(Xe,{})}),e.jsx(B,{onClick:()=>s(.1),size:"small",children:e.jsx(Ke,{})}),e.jsx(B,{onClick:()=>o(),size:"small",children:e.jsx(hs,{})})]})})}function Re({children:r}){return e.jsx(Te,{icon:e.jsx(He,{}),children:r})}function se({children:r}){return e.jsx(Te,{icon:e.jsx(ne,{}),children:r})}function re({children:r}){return e.jsx(Te,{icon:e.jsx(pe,{}),children:r})}function Hs({user:r,forest:s,onSubmitMap:o}){var E;const{isLoading:n}=Me(),t=(r==null?void 0:r.map)??[],a=t.filter(p=>!p.passed),i=a.map(p=>p.clues),[c,d]=L.useState(a.map(p=>null)),[l,u]=L.useState(0),[m,N]=L.useState([]),S=p=>{d(h=>{const x=[...h];return x[l]={...p},x}),u(h=>h+1)},I=p=>{d(h=>{const x=[...h];return x[l]=null,x}),N(h=>[...h,p]),u(h=>h+1)},v=p=>{d(h=>[...h].map((g,y)=>y<p?g:null)),N(h=>h.filter(x=>x!==p)),u(p)},M=p=>{d(h=>{var g;const x=[...h??[]];return x[p]&&(x[p].negate=!((g=x[p])!=null&&g.negate)),x})},R=c.map(p=>p==null?void 0:p.id).filter(Boolean),D=Ls(t,a==null?void 0:a[l]);return e.jsxs(e.Fragment,{children:[e.jsx(k,{className:"map-builder",wrap:!0,children:a.map((p,h)=>{var g,y,G,_;if(p.passed)return e.jsx(e.Fragment,{});const x=s[p.treeId];return x?e.jsxs("div",{className:"map-builder__segment",children:[l===h&&e.jsx("div",{className:"map-builder__caret",children:e.jsx(f,{icon:e.jsx(js,{}),className:K("bounce",{speed:"slow",infinite:!0}),size:"small"})}),!!c[h]&&e.jsx(me,{title:e.jsx(j,{pt:`Clique para negar: Não-${(g=c==null?void 0:c[h])==null?void 0:g.text}`,en:`Click to negate: Non-${(y=c==null?void 0:c[h])==null?void 0:y.text}`}),children:e.jsxs(ce,{onClick:()=>M(h),disabled:!(c!=null&&c[h]),className:"map-builder__card map-builder__card--new",children:[((G=c==null?void 0:c[h])==null?void 0:G.negate)&&e.jsx(f,{icon:e.jsx(W,{}),size:"small",className:"map-builder__card-no"}),(_=c==null?void 0:c[h])==null?void 0:_.text]})}),((i==null?void 0:i[h])??[]).map(F=>e.jsxs("div",{className:"map-builder__card",children:[(F==null?void 0:F.negate)&&e.jsx(f,{icon:e.jsx(W,{}),size:"small",className:"map-builder__card-no"}),F.text]},F.id)),e.jsx(ce,{onClick:()=>v(h),disabled:!(c!=null&&c[h]||m.includes(h)),children:e.jsx(J,{id:x.treeType,text:x.card.text})})]},`map-segment-${p.index}`):e.jsx(e.Fragment,{})})}),D.length>0&&e.jsxs(Fe,{className:"contained",wrap:!0,children:[e.jsxs("strong",{children:[e.jsx(j,{pt:"Caminhos possíveis para a árvore atual",en:"Possible paths for the current tree"}),":"]}),D.map((p,h)=>{var x,g;return e.jsx(_s,{className:K("tada",{delay:h}),children:(g=(x=s==null?void 0:s[p])==null?void 0:x.card)==null?void 0:g.text},`highlighted-possibility-${p}`)})]}),e.jsxs(Ge,{title:e.jsx(j,{pt:"Cartas",en:"Hand"}),contained:!0,children:[(r.hand??[]).map(p=>e.jsx(ce,{onClick:()=>S(p),disabled:R.includes(p.id)||l>=a.length,className:"map-builder__card-button",children:e.jsx(fs,{hideHeader:!0,children:p.text})},p.id)),e.jsx(B,{size:"large",type:"default",onClick:()=>I(l),disabled:!((E=i==null?void 0:i[l])!=null&&E.length),children:e.jsx(j,{pt:"Pular árvore",en:"Skip tree"})})]}),e.jsx(k,{children:e.jsx(B,{type:"primary",size:"large",disabled:n||R.length===0,onClick:()=>o({newMap:c}),children:e.jsx(j,{pt:"Enviar Mapa",en:"Submit Map"})})})]})}function Gs({players:r,user:s,announcement:o,forest:n,currentRound:t,onSubmitMap:a}){De();const i=Us(r,s);return e.jsxs(V,{fullWidth:!0,announcement:o,children:[e.jsx(oe,{children:t===1?e.jsx(j,{pt:"Construa o seu mapa",en:"Build your map"}):e.jsx(j,{pt:"Expanda seu mapa",en:"Expand your map"})}),e.jsx(H,{type:"rule",children:e.jsx(j,{pt:e.jsxs(e.Fragment,{children:["Você precisa ajudar os outros jogadores a descobrirem o seu caminho pela floresta.",e.jsx("br",{}),"Começando da ",e.jsx(Re,{children:"bússola"}),", escolha 1 carta para cada árvore do caminho.",e.jsx("br",{}),"Você ganha ",e.jsx(b,{children:"pontos"})," se jogadores adivinharem seu caminho, então tente fazer um bom trabalho."]}),en:e.jsxs(e.Fragment,{children:["You need to help the other players to discover your path through the forest.",e.jsx("br",{}),"Starting from the ",e.jsx(Re,{children:"compass"}),", choose 1 card for each tree of the path.",e.jsx("br",{}),"You earn ",e.jsx(b,{children:"points"})," if players guess your path correctly, so try to do a good job."]})})}),e.jsx(Q,{forest:n,map:s.map,showPath:!0,hidePassedTreeNames:!0,players:r,playerMapping:i}),e.jsx(H,{type:"action",children:e.jsx(j,{pt:e.jsxs(e.Fragment,{children:["Clique nas cartas em sequência para definir seu mapa, uma carta por árvore.",e.jsx("br",{}),"Você pode fazer quantos segmentos quiser desde que pelo menos uma carta esteja em cada árvore (dessa rodada ou de uma rodada anterior já que as cartas são cumulativas).",e.jsx("br",{}),"Na barra abaixo, se quiser negar ",e.jsx(f,{icon:e.jsx(W,{}),size:"small"})," um adjectivo selecionado, clique nele acima da árvore para trocar.",e.jsx("br",{}),"Se quiser refazer uma árvore ",e.jsx(f,{icon:e.jsx(pe,{}),size:"small"}),", clique nela.",e.jsx("br",{}),"Quando você estiver pronto, aperte Enviar Mapa."]}),en:e.jsxs(e.Fragment,{children:["Click on the cards in sequence to define your map, you can't skip any tree.",e.jsx("br",{}),"You can build as many segments you with as long as there is at least one card on each tree (from this round or a previous one since the cards are cumulative).",e.jsx("br",{}),"If you want to negate ",e.jsx(f,{icon:e.jsx(W,{}),size:"small"})," an adjective you selected, click on it below the tree to change.",e.jsx("br",{}),"If you want to redo a tree ",e.jsx(f,{icon:e.jsx(pe,{}),size:"small"}),", click on it.",e.jsx("br",{}),"When you are ready, press Submit Map."]})})}),e.jsx(Hs,{user:s,forest:n,onSubmitMap:a})]})}function zs({user:r,announcement:s,forest:o}){return e.jsxs(V,{fullWidth:!0,announcement:s,children:[e.jsx(oe,{children:e.jsx(j,{pt:"Todos os jogadores já descobriam seu mapa completamente",en:"All players have discovered your map completely"})}),e.jsx(Y,{contained:!0,children:e.jsx(j,{pt:e.jsx(e.Fragment,{children:"Aguarde pacientemente, você ainda vai participar na hora de adivinhar."}),en:e.jsx(e.Fragment,{children:"Sit and wait patiently, you will still participate when it's time to guess."})})}),e.jsx(Q,{forest:o,map:r.map,showPath:!0})]})}function qs({players:r,state:s}){var d,l;const o=xe(r,s),{step:n,setStep:t}=je(),a=Rs(t),i=e.jsx(fe,{icon:e.jsx(ne,{}),title:s.round.current===1?e.jsx(j,{pt:"Construa o seu mapa",en:"Build your map"}):e.jsx(j,{pt:"Expanda seu mapa",en:"Expand your map"}),currentRound:(d=s==null?void 0:s.round)==null?void 0:d.current,type:"overlay",children:e.jsx(Y,{children:e.jsx(j,{pt:"Você consegue mapear as árvores usando apenas adjetivos?",en:"Can you map the tree path using only adjectives?"})})}),c=(l=o==null?void 0:o.map)==null?void 0:l.every(u=>u.passed);return e.jsx(te,{phase:s==null?void 0:s.phase,allowedPhase:C.LABIRINTO_SECRETO.MAP_BUILDING,children:e.jsx(_e,{step:n,players:r,waitingRoom:{content:e.jsx(Ms,{forest:s.forest,map:o.map,newMap:o.newMap})},children:e.jsxs(Be,{condition:c,children:[e.jsx(zs,{user:o,announcement:i,forest:s.forest}),e.jsx(Gs,{players:r,user:o,announcement:i,forest:s.forest,currentRound:s.round.current,onSubmitMap:a})]})})})}function qe({segment:r,tree:s,showArrow:o,className:n}){return e.jsxs("div",{className:w("map-entry",n),children:[s&&e.jsx(J,{id:s.treeType,text:s.card.text,className:"map-entry__tree"}),e.jsx(f,{icon:e.jsx(ne,{}),size:"large",className:"map-entry__icon"}),r.clues.map(t=>e.jsxs("div",{className:"map-entry__clue",children:[t.text,(t==null?void 0:t.negate)&&e.jsx(f,{icon:e.jsx(W,{}),size:"small",className:"map-entry__clue-no"})]},`clue-${r.index}-${t.id}`)),o&&e.jsx(f,{icon:e.jsx($,{}),size:"small",className:"map-entry__arrow"})]},`map-${r.index}`)}const $s={id:0,treeType:0,card:{id:"",text:""}};function ve({map:r=[],selectedTrees:s=[],fullMap:o=!1}){const n=o?r:r.filter(t=>t.active);return e.jsx(k,{wrap:!0,className:"player-map",style:{gridTemplateColumns:`repeat(${n.length}, 100px)`},children:n.map((t,a,i)=>{const c=s[a+1],d=o&&i.length-1===a?$s:void 0;return e.jsx(qe,{className:"player-map__segment",tree:d??c,segment:t,showArrow:i.length-1!==a},`map-${t.index}`)})})}function Vs({forest:r,map:s=[],onSubmitPath:o,pathId:n,user:t,players:a}){var p,h;const{isLoading:i}=Me(),c=s.filter(x=>!x.passed&&x.clues.length>0),d=((p=he.findLast(s,x=>x.passed))==null?void 0:p.treeId)??((h=s==null?void 0:s[0])==null?void 0:h.treeId)??0,l=s.filter(x=>x.passed).map(x=>x.treeId),u=Ds(t,c,n),[m,N]=L.useState([d]),[S,I]=L.useState(d),v=Se(S,[...m,...l]),M=m.length>c.length,R=x=>{I(x);const g=m.indexOf(x);g>-1?N(y=>y.slice(0,g+1)):N(y=>[...y,x])},D=m.map(x=>r[x]),E=c==null?void 0:c[m.length-1];return De(),e.jsxs(k,{vertical:!0,children:[e.jsx(ve,{map:s,selectedTrees:D}),e.jsx(vs,{active:!!E,children:e.jsx(qe,{segment:E,className:K("rubberBand")},E==null?void 0:E.treeId)}),e.jsx(B,{type:"primary",size:"large",onClick:()=>o({guess:m.slice(1),pathId:n,choseRandomly:!1}),disabled:i||m.length-1<c.length,children:e.jsx(j,{pt:"Enviar",en:"Submit"})}),e.jsx(Ss,{onClick:()=>o({guess:Bs(s,c,!0,Object.values(u).flat().map(Number)),pathId:n,choseRandomly:!0}),ghost:!0,children:"Random Dev"}),e.jsx(Q,{forest:r,map:s,actions:{selection:m,clickableTrees:v,onSelectTree:R,activeTree:S,disabled:M},playerMapping:u,players:a})]})}function Ys({players:r,announcement:s,forest:o,activePlayer:n,onSubmitPath:t,user:a}){const i=Object.keys(r).length;return e.jsxs(V,{fullWidth:!0,announcement:s,children:[e.jsx(oe,{children:e.jsx(j,{pt:e.jsxs(e.Fragment,{children:["Siga o mapa de ",e.jsx(Z,{player:n})]}),en:e.jsxs(e.Fragment,{children:["Follow ",e.jsx(Z,{player:n}),"'s map"]})})}),e.jsx(H,{type:"action",children:e.jsx(j,{pt:e.jsxs(e.Fragment,{children:["Baseado no ",e.jsx(se,{children:"mapa de adjetivos"}),", clique nas"," ",e.jsx(re,{children:"árvores"})," circuladas de pontinhos brancos para escolher aquele caminho.",e.jsx("br",{}),"Cada árvore correta vale ",e.jsx(b,{children:"1 ponto"})," por jogador que acertar (Por exemplo, 3 jogadores = 3 pontos).",e.jsx("br",{}),"Então, talvez valha a pena discutir! Porém, se somente um jogador acertar o caminho, ele ganha"," ",e.jsxs(b,{children:[i," pontos"]}),".",e.jsx("br",{}),"O criador do mapa ganha o mesmo número de pontos que os jogadores."]}),en:e.jsxs(e.Fragment,{children:["Based on the ",e.jsx(se,{children:"adjectives map"}),", click on the"," ",e.jsx(re,{children:"circled trees"})," with white dots to choose that path.",e.jsx("br",{}),"Each correct tree is worth ",e.jsx(b,{children:"1 point"})," per player that guesses it (For example, 3 players = 3 points).",e.jsx("br",{}),"So, it might be worth discussing out loud! However, if only one player guesses the path, they earn ",e.jsxs(b,{children:[i," points"]}),".",e.jsx("br",{}),"The map creator also earns the same number of points as the players."]})})}),!!o&&n.map&&e.jsx(Vs,{forest:o,map:n.map,onSubmitPath:t,pathId:n.id,user:a,players:r})]})}function Js({players:r,announcement:s,forest:o,activePlayer:n}){const t=Object.keys(r).length;return e.jsxs(V,{fullWidth:!0,announcement:s,children:[e.jsx(oe,{children:e.jsx(j,{pt:e.jsx(e.Fragment,{children:"Os jogadores estão seguindo o seu mapa!"}),en:e.jsx(e.Fragment,{children:"Players are following your map!"})})}),e.jsx(H,{type:"wait",children:e.jsx(j,{pt:e.jsxs(e.Fragment,{children:["Baseado no ",e.jsx(se,{children:"mapa de adjetivos"}),", eles vão clicando nas"," ",e.jsx(re,{children:"árvores"})," para escolher o caminho.",e.jsx("br",{}),"Cada árvore correta vale ",e.jsx(b,{children:"1 ponto"})," por jogador que acertar. Por exemplo, 3 jogadores = 3 pontos.",e.jsx("br",{}),"Se somente um jogador acertar o caminho, ele ganha"," ",e.jsxs(b,{children:[t," pontos"]}),".",e.jsx("br",{}),"Você, como criador do mapa, ganha o mesmo número de pontos que os jogadores."]}),en:e.jsxs(e.Fragment,{children:["Based on the ",e.jsx(se,{children:"adjectives map"}),", players will click on the"," ",e.jsx(re,{children:"trees"})," to choose the path.",e.jsx("br",{}),"Each correct tree is worth ",e.jsx(b,{children:"1 point"})," per player that guesses it. For example, 3 players = 3 points.",e.jsx("br",{}),"If only one player guesses the path, they earn"," ",e.jsxs(b,{children:[t," points"]}),".",e.jsx("br",{}),"You as the map creator also earns the same number of points as the players."]})})}),e.jsx(ve,{map:n.map}),e.jsx(Q,{forest:o,map:n.map,showPath:!0})]})}function Qs({players:r,state:s}){var l;const o=xe(r,s),{step:n,setStep:t}=je(),[a,i]=gs("activePlayerId",s,r),c=As(t),d=e.jsx(fe,{icon:e.jsx(is,{}),title:e.jsx(j,{pt:"Siga os mapas!",en:"Follow the maps!"}),currentRound:(l=s==null?void 0:s.round)==null?void 0:l.current,type:"overlay",duration:3,children:e.jsxs(Y,{children:[e.jsx(j,{pt:"Vamos analisar e tentar seguir o mapa de cada jogador",en:"Let's analise and try to follow the each player's map"}),e.jsx("br",{}),e.jsx(Ts,{players:r,order:s.turnOrder,activePlayerId:s.activePlayerId})]})});return e.jsx(te,{phase:s==null?void 0:s.phase,allowedPhase:C.LABIRINTO_SECRETO.PATH_FOLLOWING,children:e.jsx(_e,{step:n,players:r,children:e.jsxs(Be,{condition:i,children:[e.jsx(Js,{players:r,announcement:d,forest:s.forest,activePlayer:a}),e.jsx(Ys,{players:r,user:o,announcement:d,forest:s.forest,onSubmitPath:c,activePlayer:a,isTheActivePlayer:i})]})})})}function Xs({players:r,ranking:s,onGoBack:o,round:n}){return e.jsxs(Ns,{players:r,ranking:s,gainedPointsDescriptions:[e.jsx(j,{pt:"Rotas corretos",en:"Correct paths"},"1"),e.jsx(j,{pt:"Pontos por sua rota",en:"Points for your route"},"2")],children:[e.jsx(H,{type:"event",children:e.jsx(j,{pt:"Não se preocupe se você ficou pra trás! O jogador mais a frente de cada rota, te gritou e você conseguiu encontrá-lo.",en:"Don't worry if you were left behind! The player furthest ahead on that route, call you and you caught up"})}),e.jsx(k,{children:e.jsx(B,{onClick:o,children:e.jsx(j,{pt:"Ver resultado novamente",en:"See results again"})})}),e.jsx(rs,{round:n})]})}function Ks({players:r,forest:s,currentPlayer:o}){const n=o.map.filter(t=>t.active);return e.jsx("div",{className:"div-container player-map",style:{gridTemplateColumns:`repeat(${n.length}, 120px)`},children:n.map((t,a,i)=>{const c=t.passed?s[t.treeId]:null;return e.jsxs("div",{className:"player-map__segment",children:[e.jsxs("div",{className:"player-map__top",children:[c?e.jsx(J,{id:c.treeType,text:c.card.text,className:"player-map__tree",width:75}):e.jsx(ke,{id:"1",className:"player-map__tree-invisible",text:"",width:75}),e.jsx(f,{icon:e.jsx(ne,{}),size:"large",className:"player-map__icon"}),e.jsx("div",{children:t.clues.map(d=>e.jsxs("div",{className:"player-map__clue",children:[d.text,(d==null?void 0:d.negate)&&e.jsx(f,{icon:e.jsx(W,{}),size:"small",className:"player-map__clue-no"})]},`clue-${t.index}-${d.id}`))}),t.index===0&&e.jsx(f,{icon:e.jsx(ge,{}),size:"small",className:"player-map__starting-flag"}),i.length-1!==a&&e.jsx(f,{icon:e.jsx($,{}),size:"small",className:"player-map__arrow"})]}),e.jsxs("div",{className:"player-map__scoring",children:[t.playersIds.length>0?e.jsx("div",{className:"player-map__players",children:t.playersIds.map(d=>{const l=r[d];return e.jsx(me,{title:l.name,children:e.jsx(Is,{size:"small",id:l.avatarId})},`player-${d}`)})}):e.jsx("div",{className:"player-map__no-players",children:e.jsx(j,{pt:"Nenhum jogador",en:"No players"})}),e.jsx("div",{children:t.score>0&&e.jsx(b,{children:t.score})})]})]},`map-${t.index}`)})})}function Zs({players:r,gallery:s,user:o,forest:n,slideShowConfig:t}){const a=Object.keys(r).length,i=s[t.slideIndex],c=de(i.avatarId),d=Ws(r,i);return e.jsxs(V,{fullWidth:!0,children:[e.jsx(Ae,{children:e.jsx(j,{pt:e.jsxs(e.Fragment,{children:["Mapa do(a) ",e.jsx(Z,{player:i})]}),en:e.jsxs(e.Fragment,{children:[e.jsx(Z,{player:i}),"'s map"]})})}),e.jsx(H,{type:"rule",children:e.jsx(j,{pt:e.jsxs(e.Fragment,{children:["Você ganha pontos ao acertar o caminho do mapa. ",e.jsx("br",{}),"Cada árvore correta vale ",e.jsx(b,{children:"1 ponto"})," por jogador que acertar."," ",e.jsx("br",{}),"Se você for o único que acertou, você ganha"," ",e.jsxs(b,{children:[a," pontos"]}),"."]}),en:e.jsxs(e.Fragment,{children:["You get points by guessing the map path. ",e.jsx("br",{}),"Each correct tree is worth ",e.jsx(b,{children:"1 point"})," per player who guesses it."," ",e.jsx("br",{}),"If you are the only one who guessed it, you get"," ",e.jsxs(b,{children:[a," points"]}),"."]})})}),e.jsx(Ks,{players:r,forest:n,currentPlayer:i}),e.jsxs("div",{children:[e.jsx(Q,{forest:n,map:i.map,size:"small",players:r,user:o,forestBorderColor:de(i.avatarId),playerMapping:d}),e.jsx(Es,{config:t,barColor:c})]})]})}function er({players:r,state:s}){var l;const o=xe(r,s),{step:n,goToPreviousStep:t,goToNextStep:a}=je(),i=L.useMemo(()=>Le(r).filter(u=>u.map.some(m=>m.active)),[r]),c=bs({length:i.length,slideDuration:Ps,onExpire:a}),d=()=>{c.reset(),t()};return e.jsx(te,{phase:s==null?void 0:s.phase,allowedPhase:C.LABIRINTO_SECRETO.RESULTS,children:e.jsxs(_e,{step:n,players:r,children:[e.jsx(fe,{icon:e.jsx(cs,{}),title:e.jsx(j,{pt:"Resultado",en:"Results"}),currentRound:(l=s==null?void 0:s.round)==null?void 0:l.current,type:"block",onClose:a,unskippable:!0,children:e.jsx(Y,{children:e.jsx(j,{pt:"Quem é o melhor em seguir direções?",en:"Who is the best at following directions?"})})}),e.jsx(Zs,{gallery:i,players:r,slideShowConfig:c,forest:s.forest,user:o}),e.jsx(Xs,{players:r,round:s.round,ranking:s.ranking,onGoBack:d})]})})}const T={MOST_CARDS:"MOST_CARDS",FEWEST_CARDS:"FEWEST_CARDS",MOST_NEGATIVE_CARDS:"MOST_NEGATIVE_CARDS",FEWEST_NEGATIVE_CARDS:"FEWEST_NEGATIVE_CARDS",MOST_TREES:"MOST_TREES",FEWEST_TREES:"FEWEST_TREES",BEST_MAP:"BEST_MAP",WORST_MAP:"WORST_MAP",BEST_SCOUT:"BEST_SCOUT",WORST_SCOUT:"WORST_SCOUT",MOST_UP:"MOST_UP",MOST_RIGHT:"MOST_RIGHT",MOST_DOWN:"MOST_DOWN",MOST_LEFT:"MOST_LEFT",MOST_UP_LEFT:"MOST_UP_LEFT",MOST_UP_RIGHT:"MOST_UP_RIGHT",MOST_DOWN_LEFT:"MOST_DOWN_LEFT",MOST_DOWN_RIGHT:"MOST_DOWN_RIGHT"},sr={[T.MOST_CARDS]:{icon:"list",title:{pt:"Mais Cartas",en:"Most Cards"},description:{pt:"Usou o maior número de cartas",en:"Used the most cards"}},[T.FEWEST_CARDS]:{icon:"ellipsis",title:{pt:"Menos Cartas",en:"Fewest Cards"},description:{pt:"Usou o menor número de cartas",en:"Used the fewest cards"}},[T.MOST_NEGATIVE_CARDS]:{icon:"minus",title:{pt:"Mais Adjetivos Negativos",en:"Most Negative Adjectives"},description:{pt:"Usou o maior número de cartas negativas",en:"Used the most negative cards"}},[T.FEWEST_NEGATIVE_CARDS]:{icon:"plus",title:{pt:"Menos Cartas Negativas",en:"Fewest Negative Cards"},description:{pt:"Usou o menor número de cartas negativas",en:"Used the fewest negative cards"}},[T.MOST_TREES]:{icon:"tree",title:{pt:"Mais Árvores",en:"Most Trees"},description:{pt:"Passou pelo maior número de árvores",en:"Passed by the most trees"}},[T.FEWEST_TREES]:{icon:"x",title:{pt:"Menos Árvores",en:"Fewest Trees"},description:{pt:"Passou pelo menor número de árvores",en:"Passed by the fewest trees"}},[T.BEST_MAP]:{icon:"sun",title:{pt:"Melhor Guia",en:"Best Guide"},description:{pt:"Construiu um mapa que os outros jogadores melhor encontraram as direções corretas",en:"Built a map that other players found the correct directions the best"}},[T.WORST_MAP]:{icon:"arrows",title:{pt:"Mapeador Divergente",en:"Diverging Mapper"},description:{pt:"Construiu um mapa que os outros jogadores tiveram mais dificuldade em encontrar as direções corretas",en:"Built a map that other players had the most difficulty finding the correct directions"}},[T.BEST_SCOUT]:{icon:"foot-prints",title:{pt:"Melhor Explorador",en:"Best Scout"},description:{pt:"Acertou as árvores corretas mais vezes",en:"Hit the correct trees the most times"}},[T.WORST_SCOUT]:{icon:"face-tired",title:{pt:"Explorador Confuso",en:"Confused Scout"},description:{pt:"Acertou as árvores corretas menos vezes",en:"Hit the correct trees the fewest times"}},[T.MOST_UP]:{icon:"arrow-up",title:{pt:"Norte",en:"North"},description:{pt:"Andou mais para cima",en:"Walked more up"}},[T.MOST_RIGHT]:{icon:"arrow-right",title:{pt:"Leste",en:"East"},description:{pt:"Andou mais para direita",en:"Walked more right"}},[T.MOST_DOWN]:{icon:"arrow-down",title:{pt:"Sul",en:"South"},description:{pt:"Andou mais para baixo",en:"Walked more down"}},[T.MOST_LEFT]:{icon:"arrow-left",title:{pt:"Oeste",en:"West"},description:{pt:"Andou mais para esquerda",en:"Walked more left"}},[T.MOST_UP_LEFT]:{icon:"double-arrow-up",title:{pt:"Noroeste",en:"Northwest"},description:{pt:"Andou mais para cima e esquerda",en:"Walked more up and left"}},[T.MOST_UP_RIGHT]:{icon:"double-arrow-up",title:{pt:"Nordeste",en:"Northeast"},description:{pt:"Andou mais para cima e direita",en:"Walked more up and right"}},[T.MOST_DOWN_LEFT]:{icon:"double-arrow-down",title:{pt:"Sudoeste",en:"Southwest"},description:{pt:"Andou mais para baixo e esquerda",en:"Walked more down and left"}},[T.MOST_DOWN_RIGHT]:{icon:"double-arrow-down",title:{pt:"Sudeste",en:"Southeast"},description:{pt:"Andou mais para baixo e direita",en:"Walked more down and right"}}};function rr({state:r,players:s}){const o=Le(s),n=r.forest??[];return e.jsxs(Os,{state:r,players:s,announcementIcon:e.jsx(ge,{}),children:[e.jsx(Cs,{players:s,achievements:r.achievements,reference:sr}),e.jsx(Ge,{title:e.jsx(j,{pt:"Mapas dos Jogadores",en:"Players' Maps"}),children:o.map(t=>{const a=(t.map??[]).map(i=>n[i.treeId]);return e.jsxs(Fe,{className:"game-over-strip",style:{borderColor:de(t.avatarId)},children:[e.jsx(ys,{player:t,withName:!0,className:"game-over-avatar-strip"}),e.jsx(ve,{map:t.map,fullMap:!0,selectedTrees:a})]},t.id)})})]})}function tr(r){if(r&&!r.phase)return es;switch(r.phase){case C.DEFAULT.LOBBY:return as;case C.DEFAULT.RULES:return ns;case C.DEFAULT.SETUP:return os;case C.DEFAULT.WAIT:return ws;case C.LABIRINTO_SECRETO.MAP_BUILDING:return qs;case C.LABIRINTO_SECRETO.PATH_FOLLOWING:return Qs;case C.LABIRINTO_SECRETO.RESULTS:return er;case C.DEFAULT.GAME_OVER:return rr;default:return ss}}function Nt(){return e.jsx(ts,{gameCollection:Ze.LABIRINTO_SECRETO,getActiveComponent:tr})}export{Nt as default};
