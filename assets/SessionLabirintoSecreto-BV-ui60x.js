import{j as e,k as Ce,T as u,h as ie,e as P,aQ as ce,aP as R,I as f,q as le,cl as ve,l as qe,r as E,b6 as Me,n as Ve,cX as Ye,F as be,B as W,cY as Qe,cZ as Xe,bI as Ee,bK as Te,o as te,x as Fe,ch as Ae,ci as oe,cp as Re,a_ as Je}from"./index-Bv2JedHY.js";import{P as J,e as ae,u as Oe,S as K,a as de,f as Ke,c as Ze,d as es}from"./Session-BC2hsnNX.js";import{A as Le}from"./AnimatedProcessingIcon-DusSrb72.js";import{I as D}from"./useDevFeatures-BeiftI-c.js";import{M as Z,D as ss,P as ts}from"./PathIcon-BmIXO1KI.js";import{S as H,P as pe,a as me}from"./StepSwitcher-BCjhbxWB.js";import{V as ke}from"./ViewOr-Bx1kDirb.js";import{N as F}from"./NoIcon-DQbjZqun.js";import{g as rs}from"./ItemCard-Bgps-8a2.js";import{T as Be}from"./TreeCard-CTsnS-Dc.js";import{S as os}from"./Sprite-DfY2M0RQ.js";import{u as We}from"./useMock-BtCeD7lq.js";import{F as as,C as ze,T as ne}from"./TreeIcon-DyUCOzU6.js";import{P as v}from"./PointsHighlight-5rvd3ZHy.js";import{R as L}from"./RuleInstruction-BV1a0RUm.js";import{T as ns,a as is,R as cs}from"./index.esm-CmqlOfX5.js";import{A as z}from"./ArrowIcon-CsY40av5.js";import{A as ls}from"./PlayerAvatarGroup-C3WOTQSe.js";import{D as ds}from"./DivButton-B6-c0DeJ.js";import{V as Ie}from"./ViewIf-qgMpzyEs.js";import{F as ue}from"./FlagIcon-BLMSxJK1.js";import{M as he}from"./MetricHighlight-Cuj90xoJ.js";import{L as ps}from"./LocationIcon-NqpzNO5_.js";import{C as ms}from"./Card-Dz6iDFV9.js";import{T as De}from"./TitledContainer-BmxUhwzh.js";import{T as us}from"./TextHighlight-BSLL2u3H.js";import{u as hs}from"./useWhichPlayerIsThe-CLpABNYc.js";import{T as xs}from"./TurnOrder-BaGSppz0.js";import{P as V}from"./PlayerAvatarName-BMN3kBN6.js";import{D as js}from"./DevButton-D3w4WT2g.js";import{M as fs}from"./MouseFollowingContent-CcS9ez9Y.js";import{S as gs,u as _s}from"./SlideShowControls-DsKHqosf.js";import{S as ys}from"./StepRankingWrapper-DrhcRYry.js";import{P as vs}from"./PlayerAvatar-B5XzlucT.js";import{P as bs}from"./PlayerAvatarStrip-8LU4f6zf.js";import"./GameBanner-Dolwj4x9.js";import{G as Ts}from"./GameOverWrapper-CnRDs_o3.js";import{A as Is}from"./Achievements-CG3D0tEY.js";import{a as Ss}from"./achievements-BKUTTYlo.js";import"./Game-DZpwiVJl.js";import"./useMutation-DCFtoaJg.js";import"./speech-BC2r1q_K.js";import"./index-DwpyjPzl.js";import"./index-DXLNxcEI.js";import"./Overflow-B3d7Zff6.js";import"./PurePanel-DveY4EAq.js";import"./index-C5BSkKNN.js";import"./index-DaUC7QhH.js";import"./DebugOnly-D7LSN2fw.js";import"./RulesModal-Blpup0Vo.js";import"./WritingIcon-By_NHQpT.js";import"./index-CMe9jnJg.js";import"./useTDBaseUrl-BF9foKiS.js";import"./index-CTxvdU9G.js";import"./index-Bdm1H7ig.js";import"./useBubbleLock-DK7mwtgu.js";import"./InfoCircleOutlined-C9L3-EY0.js";import"./index-CaG36SC9.js";import"./SignIn-DUuFbELe.js";import"./GoogleIcon-CrKEIhun.js";import"./AnimatedGearIcon-BKgkNme9.js";import"./AnimatedClockIcon-DVggaDGI.js";import"./TimedButton-CZf0Ymvr.js";import"./Loading-DAY2-sf8.js";import"./AnimatedLoaderIcon-_R9dZEpI.js";import"./WaitingRoomIcon-BLlVK-GC.js";import"./LikeFilled-rJSyhYWA.js";import"./WarningOutlined-DhDeJShx.js";import"./StarIcon-CpKrsoeA.js";import"./StarFilled-CQFlL-pg.js";import"./StepBackwardOutlined-CNnRQaro.js";import"./TrophyOutlined-CGBmS05s.js";import"./RankingBoard-Ct5wAnUv.js";import"./CaretUpOutlined-CdAKPD24.js";import"./TheEndIcon-C7dv2XNo.js";import"./ArrowRightOutlined-DIWdYL2V.js";import"./progress-dENqAQyI.js";import"./Medal-0Kmh_WCo.js";function Ns({state:s}){return e.jsx(J,{phase:s?.phase,allowedPhase:ae.DEFAULT.WAIT,className:"setup",children:e.jsxs("div",{className:"phase-announcement",children:[e.jsx(Ce,{children:e.jsx(u,{pt:"Processando...",en:"Processing..."})}),e.jsx(Le,{className:"phase-announcement__icon"}),e.jsx(D,{children:e.jsx(u,{pt:"Aguarde um momento",en:"Just a moment"})})]})})}const O={MAP_BUILDING:"MAP_BUILDING",PATH_FOLLOWING:"PATH_FOLLOWING",RESULTS:"RESULTS"},He={SUBMIT_MAP:"SUBMIT_MAP",SUBMIT_PATH:"SUBMIT_PATH"},I=7,q=7,N={UP:"UP",RIGHT:"RIGHT",DOWN:"DOWN",LEFT:"LEFT",UP_LEFT:"UP_LEFT",UP_RIGHT:"UP_RIGHT",DOWN_LEFT:"DOWN_LEFT",DOWN_RIGHT:"DOWN_RIGHT"},Ps=15;function ws(s){const{translate:t}=ie(),a=Oe({actionName:"submit-map",onSuccess:()=>s(2),onError:()=>s(0),successMessage:t("Mapa submetido com sucesso","Map submitted successfully"),errorMessage:t("Vixi, o aplicativo encontrou um erro ao tentar enviar seu mapa","Oops, the application found an error while trying to submit your map")});return o=>{a({action:He.SUBMIT_MAP,...o})}}function Cs(s){const{translate:t}=ie(),a=Oe({actionName:"submit-path",onSuccess:()=>s(2),onError:()=>s(0),successMessage:t("Caminho submetido com sucesso","Path submitted successfully"),errorMessage:t("Vixi, o aplicativo encontrou um erro ao tentar enviar seu caminho","Oops, the application found an error while trying to submit your path")});return o=>{a({action:He.SUBMIT_PATH,...o})}}function U({id:s,text:t,width:a=100,className:o}){if(typeof s=="string"){const[r,i]=rs(s);return e.jsxs("div",{className:P("tree-card",o),style:{width:`${a}px`},children:[e.jsx(os,{source:r,spriteId:i,width:a,title:t}),e.jsx(ce,{title:t,children:e.jsx("div",{className:"tree-card__text",children:t})})]})}return e.jsx(Be,{treeId:s,text:t,width:a,className:o})}function Ms({forest:s,map:t,newMap:a}){if(!a||!t)return null;const o=(t??[]).filter(r=>!r.passed);return e.jsx(R,{wrap:!0,children:o.map((r,i)=>{const{treeId:n,passed:l}=r,d=s[n],x=a?.[i];return e.jsxs("div",{className:"map-builder__segment",children:[!!x&&e.jsxs("div",{className:"map-builder__card map-builder__card--new",children:[x.text,x?.negate&&e.jsx(f,{icon:e.jsx(F,{}),size:"small",className:"map-builder__card-no"})]}),r.clues.map(m=>e.jsxs("div",{className:"map-builder__card",children:[m.text,m?.negate&&e.jsx(f,{icon:e.jsx(F,{}),size:"small",className:"map-builder__card-no"})]},`card-${r.index}-${m.id}`)),e.jsx(U,{id:d.treeType,text:l?"":d.card.text})]},n)})})}const M=s=>{const[t,a]=s;return t+a*I},Y=s=>{const t=s%I,a=Math.floor(s/I);return[t,a]},Es=s=>{const t=Y(s),[a,o]=t;return a===0?N.LEFT:a===I-1?N.RIGHT:o===0?N.UP:o===q-1?N.DOWN:null},re=(s,t)=>{const[a,o]=Y(s),[r,i]=Y(t),n=r-a+(i-o)*I;return n===1?N.RIGHT:n===-1?N.LEFT:n===I?N.DOWN:n===-I?N.UP:n===I+1?N.DOWN_RIGHT:n===I-1?N.DOWN_LEFT:n===-I+1?N.UP_RIGHT:n===-I-1?N.UP_LEFT:N.UP},xe=(s,t)=>{const[a,o]=Y(s),r=[],i=[a,o-1],n=M(i);i[1]>=0&&!t.includes(n)&&r.push(i);const l=[a+1,o],d=M(l);l[0]<I&&!t.includes(d)&&r.push(l);const x=[a,o+1],m=M(x);x[1]<q&&!t.includes(m)&&r.push(x);const h=[a-1,o],S=M(h);h[0]>=0&&!t.includes(S)&&r.push(h);const b=[a-1,o-1],T=M(b);b[0]>=0&&b[1]>=0&&!t.includes(T)&&r.push(b);const y=[a+1,o-1],C=M(y);y[0]<I&&y[1]>=0&&!t.includes(C)&&r.push(y);const w=[a-1,o+1],p=M(w);w[0]>=0&&w[1]<q&&!t.includes(p)&&r.push(w);const c=[a+1,o+1],j=M(c);return c[0]<I&&c[1]<q&&!t.includes(j)&&r.push(c),r.map(_=>M(_))},Fs=(s,t)=>{if(!t)return[];const a=s.filter(o=>o.passed).map(o=>o.treeId);return xe(t.previousTree??t.treeId,a).filter(o=>o!==t.treeId)},As=(s,t)=>{const a=t.map,o=a.filter(i=>i.active),r={};if(o[0].index>0){const i=a[o[0].index-1];r[i.treeId]=Object.keys(s).filter(n=>n!==t.id)}return Object.values(s).forEach(i=>{const n=i.history[t.id];n&&o.forEach((l,d,x)=>{const m=n[l.index];if(m)if(d===x.length-1)m.forEach(h=>{r[h]===void 0&&(r[h]=[]),r[h].push(i.id)});else{const h=m?.[m.length-1];r[h]===void 0&&(r[h]=[]),r[h].push(i.id)}})}),r},Rs=(s,t,a)=>{const o=t[0],r={},i=s.history[a];if(i){const n=i[o.index];n&&n.forEach(l=>{r[l]===void 0&&(r[l]=[]),r[l].push(s.id)})}return r},Os=(s,t)=>{const o=(t.map??[]).filter(i=>!i.passed),r={};return Object.values(s).forEach(i=>{const n=i.history[t.id];n&&o.forEach((l,d,x)=>{const m=n[l.index];if(m)if(d===x.length-1)m.forEach(h=>{r[h]===void 0&&(r[h]=[]),r[h].push(i.id)});else{const h=m?.[m.length-1];r[h]===void 0&&(r[h]=[]),r[h].push(i.id)}})}),r},Ls=(s,t,a=!1,o=[])=>{const r=le.union(s.filter(i=>i.passed).map(i=>i.treeId),o);return t.map(i=>{const n=xe(r[r.length-1],r),l=i.treeId,d=a?ve([...n,l]):ve(n);return r.push(d),d})};function ks(){const s=qe({initialWidth:300,initialHeight:300}),[t,a]=E.useState(s);return E.useEffect(()=>{const o=document.getElementById("screen");o&&a({width:Math.min(o.clientWidth,s.width),height:Math.min(o.clientHeight,s.height)})},[s.width,s.height]),[t.width,t.height]}function Se({segment:s,tree:t,startingTeeId:a,finalTreeId:o,currentTreeId:r,showPath:i=!1,showArrow:n=!1,className:l="",hidePassedTreeNames:d=!1,width:x=72}){const m=!!s,h=a===t.id,S=Es(t.id),b=o===t.id,T=r===t.id,y=(s?.passed&&!T)??!1;return e.jsxs("div",{className:P("forest__tree",h&&`forest__tree--${S}`,{"forest__tree--blocked":t.blocked,"forest__tree--goal":b&&i,"forest__tree--segment":m&&i,"forest__tree--passed":y,"forest__tree--current":T},l),children:[e.jsx(U,{id:t.treeType,text:s?.passed&&d?"":t.card.text,width:x*(t.blocked?.5:.8)}),i&&b&&e.jsx(f,{icon:e.jsx(as,{}),size:"large",className:`forest__end forest__end--${s.direction}`}),T&&e.jsx("div",{className:"forest__compass",children:e.jsx(f,{icon:e.jsx(ze,{}),size:"large",className:P("forest__compass-icon",Me("pulse",{infinite:!0}))})}),h&&e.jsx(f,{icon:e.jsx(ue,{}),size:"large",className:`forest__start forest__start--${S}`}),(n||i||y)&&!b&&m&&s.direction&&e.jsxs(e.Fragment,{children:[e.jsx("span",{className:P(`forest__arrow-line forest__arrow-line--${s.direction}`,m&&i&&"forest__tree--segment",y&&"forest__tree--passed",T&&"forest__tree--current")}),e.jsx(f,{icon:e.jsx(z,{}),size:"large",className:`forest__arrow forest__arrow--${s.direction}`})]})]})}function $({forest:s,map:t=[],showPath:a,actions:o,players:r,size:i="large",hidePassedTreeNames:n=!1,user:l=Ye,forestBorderColor:d="transparent",playerMapping:x}){const[m]=ks(),h=Ve(7,{gap:16,minWidth:60,maxWidth:100});if(!s||!t||t.length===0||!m)return e.jsx(R,{vertical:!0,children:e.jsx(f,{icon:e.jsx(Le,{}),size:"large"})});const S=t?.[0]?.treeId,b=t.reduce((j,_)=>(j[_.treeId]=_,j),{}),T=le.findLast(t,j=>j.passed)?.treeId??S,y=t[t.length-1]?.treeId,C=150*7+72,c=Math.min(C,m*(i==="small"?.5:.9))/C;return e.jsx("div",{className:"forest-container-area",children:e.jsx(ns,{initialScale:c,minScale:.5,maxScale:4,wheel:{step:.05,disabled:!0},centerOnInit:!0,children:({zoomIn:j,zoomOut:_,resetTransform:G})=>e.jsxs(e.Fragment,{children:[e.jsx(Pe,{position:"top",zoomIn:j,zoomOut:_,resetTransform:G}),e.jsx(Pe,{position:"bottom",zoomIn:j,zoomOut:_,resetTransform:G}),e.jsx(is,{wrapperClass:P("forest-container",i==="small"&&"forest-container--small"),children:e.jsx("div",{className:"forest",style:{borderColor:d},children:s.map(g=>{const fe=b?.[g.id];if(o&&!g.blocked){const{selection:A=[],clickableTrees:$e,onSelectTree:Ge,activeTree:ge,disabled:k}=o,B=$e.includes(g.id),ee=B||A.includes(g.id);if(ee){const se=A.includes(g.id),_e=ge===g.id,ye=A.indexOf(g.id);return e.jsxs(ds,{className:P("forest__tree-container forest__tree-button",B&&k&&"forest__tree-button--disabled"),onClick:()=>{(ee&&!k||ee&&k&&!B)&&Ge(g.id)},children:[e.jsx(Se,{segment:fe,tree:g,startingTeeId:S,finalTreeId:y,currentTreeId:T,showPath:a,className:P(B&&!k&&"forest__tree--clickable",se&&"forest__tree--selected",_e&&"forest__tree--active"),width:h}),se&&T!==g.id&&e.jsxs(e.Fragment,{children:[e.jsx("span",{className:P(`forest__arrow-from-line forest__arrow-from-line--${re(A[ye-1],g.id)}`,se&&"forest__tree--selected",_e&&"forest__tree--active")}),e.jsx(f,{icon:e.jsx(z,{}),size:"large",className:P(`forest__arrow-to forest__arrow-to--${re(A[ye-1],g.id)}`)})]}),B&&!k&&e.jsx(f,{icon:e.jsx(z,{}),size:"large",className:P(`forest__arrow-to forest__arrow-to--${re(A[A.length-1]??ge,g.id)}`)}),e.jsx(Ie,{condition:!!r&&!!x?.[g.id],children:e.jsx("div",{className:"forest__players",children:!!r&&e.jsx(Ne,{players:r,playerIds:x?.[g.id]??[],user:l})})})]},`tree-${g.id}`)}}return e.jsxs("div",{className:"forest__tree-container",children:[e.jsx(Se,{segment:fe,tree:g,startingTeeId:S,finalTreeId:y,currentTreeId:T,showPath:a,hidePassedTreeNames:n,width:h}),e.jsx(Ie,{condition:!!r&&!!x?.[g.id],children:e.jsx("div",{className:"forest__players",children:!!r&&e.jsx(Ne,{players:r,playerIds:x?.[g.id]??[],user:l})})})]},`tree-${g.id}`)})})})]})})})}function Ne({players:s,playerIds:t,user:a}){const{translate:o}=ie(),r=t.map(i=>s[i]);return e.jsx(ls,{list:r,user:a,tooltipPrefix:o("Último lugar visitado por: ","Last visited place by: ")})}function Pe({zoomIn:s,zoomOut:t,resetTransform:a,position:o}){return e.jsx(be,{className:P("forest-container-controls",`forest-container-controls--${o}`),justify:"center",children:e.jsxs(be,{children:[e.jsx(W,{onClick:()=>s(.1),size:"small",children:e.jsx(Qe,{})}),e.jsx(W,{onClick:()=>t(.1),size:"small",children:e.jsx(Xe,{})}),e.jsx(W,{onClick:()=>a(),size:"small",children:e.jsx(cs,{})})]})})}function we({children:s}){return e.jsx(he,{icon:e.jsx(ze,{}),children:s})}function Q({children:s}){return e.jsx(he,{icon:e.jsx(Z,{}),children:s})}function X({children:s}){return e.jsx(he,{icon:e.jsx(ne,{}),children:s})}const Bs=Ee.create(f),Ws=Ee.create(us);function zs({user:s,forest:t,onSubmitMap:a}){const o=s?.map??[],r=o.filter(p=>!p.passed),i=r.map(p=>p.clues),[n,l]=E.useState(r.map(p=>null)),[d,x]=E.useState(0),[m,h]=E.useState([]),S=p=>{l(c=>{const j=[...c];return j[d]={...p},j}),x(c=>c+1)},b=p=>{l(c=>{const j=[...c];return j[d]=null,j}),h(c=>[...c,p]),x(c=>c+1)},T=p=>{l(c=>[...c].map((_,G)=>G<p?_:null)),h(c=>c.filter(j=>j!==p)),x(p)},y=p=>{l(c=>{const j=[...c??[]];return j[p]&&(j[p].negate=!j[p]?.negate),j})},C=n.map(p=>p?.id).filter(Boolean),w=Fs(o,r?.[d]);return e.jsxs(e.Fragment,{children:[e.jsx(R,{className:"map-builder",wrap:!0,children:r.map((p,c)=>{if(p.passed)return null;const j=t[p.treeId];return j?e.jsxs("div",{className:"map-builder__segment",children:[d===c&&e.jsx("div",{className:"map-builder__caret",children:e.jsx(Bs,{icon:e.jsx(ps,{}),size:"small",...Te("bounce",{speed:"slow",infinite:!0})})}),!!n[c]&&e.jsx(ce,{title:e.jsx(u,{pt:`Clique para negar: Não-${n?.[c]?.text}`,en:`Click to negate: Non-${n?.[c]?.text}`}),children:e.jsxs(te,{onClick:()=>y(c),disabled:!n?.[c],className:"map-builder__card map-builder__card--new",children:[n?.[c]?.negate&&e.jsx(f,{icon:e.jsx(F,{}),size:"small",className:"map-builder__card-no"}),n?.[c]?.text]})}),(i?.[c]??[]).map(_=>e.jsxs("div",{className:"map-builder__card",children:[_?.negate&&e.jsx(f,{icon:e.jsx(F,{}),size:"small",className:"map-builder__card-no"}),_.text]},_.id)),e.jsx(te,{onClick:()=>T(c),disabled:!(n?.[c]||m.includes(c)),children:e.jsx(U,{id:j.treeType,text:j.card.text})})]},`map-segment-${p.index}`):null})}),w.length>0&&e.jsxs(Fe,{className:"contained",wrap:!0,children:[e.jsxs("strong",{children:[e.jsx(u,{pt:"Caminhos possíveis para a árvore atual",en:"Possible paths for the current tree"}),":"]}),w.map((p,c)=>e.jsx(Ws,{...Te("tada",{delay:3+.5*c}),children:t?.[p]?.card?.text},`highlighted-possibility-${p}`))]}),e.jsxs(De,{title:e.jsx(u,{pt:"Cartas",en:"Hand"}),contained:!0,children:[(s.hand??[]).map(p=>e.jsx(te,{onClick:()=>S(p),disabled:C.includes(p.id)||d>=r.length,className:"map-builder__card-button",children:e.jsx(ms,{hideHeader:!0,children:p.text})},p.id)),e.jsx(W,{size:"large",type:"default",onClick:()=>b(d),disabled:!i?.[d]?.length,children:e.jsx(u,{pt:"Pular árvore",en:"Skip tree"})})]}),e.jsx(R,{children:e.jsx(Ae,{size:"large",disabled:C.length===0,onClick:()=>a({newMap:n}),children:e.jsx(u,{pt:"Enviar Mapa",en:"Submit Map"})})})]})}function Ds({players:s,user:t,announcement:a,forest:o,currentRound:r,onSubmitMap:i}){We();const n=Os(s,t);return e.jsxs(H,{fullWidth:!0,announcement:a,children:[e.jsx(K,{children:r===1?e.jsx(u,{pt:"Construa o seu mapa",en:"Build your map"}):e.jsx(u,{pt:"Expanda seu mapa",en:"Expand your map"})}),e.jsx(L,{type:"rule",children:e.jsx(u,{pt:e.jsxs(e.Fragment,{children:["Você precisa ajudar os outros jogadores a descobrirem o seu caminho pela floresta.",e.jsx("br",{}),"Começando da ",e.jsx(we,{children:"bússola"}),", escolha 1 carta para cada árvore do caminho.",e.jsx("br",{}),"Você ganha ",e.jsx(v,{children:"pontos"})," se jogadores adivinharem seu caminho, então tente fazer um bom trabalho."]}),en:e.jsxs(e.Fragment,{children:["You need to help the other players to discover your path through the forest.",e.jsx("br",{}),"Starting from the ",e.jsx(we,{children:"compass"}),", choose 1 card for each tree of the path.",e.jsx("br",{}),"You earn ",e.jsx(v,{children:"points"})," if players guess your path correctly, so try to do a good job."]})})}),e.jsx($,{forest:o,map:t.map,showPath:!0,hidePassedTreeNames:!0,players:s,playerMapping:n}),e.jsx(L,{type:"action",children:e.jsx(u,{pt:e.jsxs(e.Fragment,{children:["1. Clique nas cartas em sequência para definir seu mapa, uma carta por árvore.",e.jsx("br",{}),"2. Você pode fazer quantos segmentos quiser desde que pelo menos uma carta esteja em cada árvore (dessa rodada ou de uma rodada anterior já que as cartas são cumulativas).",e.jsx("br",{}),"3. Na barra abaixo, se quiser negar ",e.jsx(f,{icon:e.jsx(F,{}),size:"small"})," um adjectivo selecionado, clique nele acima da árvore para trocar.",e.jsx("br",{}),"4. Se quiser refazer uma árvore ",e.jsx(f,{icon:e.jsx(ne,{}),size:"small"}),", clique nela.",e.jsx("br",{}),"5. Quando você estiver pronto, aperte Enviar Mapa."]}),en:e.jsxs(e.Fragment,{children:["Click on the cards in sequence to define your map, you can't skip any tree.",e.jsx("br",{}),"You can build as many segments you with as long as there is at least one card on each tree (from this round or a previous one since the cards are cumulative).",e.jsx("br",{}),"If you want to negate ",e.jsx(f,{icon:e.jsx(F,{}),size:"small"})," an adjective you selected, click on it below the tree to change.",e.jsx("br",{}),"If you want to redo a tree ",e.jsx(f,{icon:e.jsx(ne,{}),size:"small"}),", click on it.",e.jsx("br",{}),"When you are ready, press Submit Map."]})})}),e.jsx(zs,{user:t,forest:o,onSubmitMap:i})]})}function Hs({user:s,announcement:t,forest:a}){return e.jsxs(H,{fullWidth:!0,announcement:t,children:[e.jsx(K,{children:e.jsx(u,{pt:"Todos os jogadores já descobriam seu mapa completamente",en:"All players have discovered your map completely"})}),e.jsx(D,{contained:!0,children:e.jsx(u,{pt:e.jsx(e.Fragment,{children:"Aguarde pacientemente, você ainda vai participar na hora de adivinhar."}),en:e.jsx(e.Fragment,{children:"Sit and wait patiently, you will still participate when it's time to guess."})})}),e.jsx($,{forest:a,map:s.map,showPath:!0})]})}function Us({state:s,players:t,user:a}){const{step:o,setStep:r}=de(),i=ws(r),n=e.jsx(pe,{icon:e.jsx(Z,{}),title:s.round.current===1?e.jsx(u,{pt:"Construa o seu mapa",en:"Build your map"}):e.jsx(u,{pt:"Expanda seu mapa",en:"Expand your map"}),currentRound:s?.round?.current,type:"overlay",children:e.jsx(D,{children:e.jsx(u,{pt:"Você consegue mapear as árvores usando apenas adjetivos?",en:"Can you map the tree path using only adjectives?"})})}),l=a?.map?.every(d=>d.passed);return e.jsx(J,{phase:s?.phase,allowedPhase:O.MAP_BUILDING,children:e.jsx(me,{step:o,players:t,waitingRoom:{content:e.jsx(Ms,{forest:s.forest,map:a.map,newMap:a.newMap})},children:e.jsxs(ke,{condition:l,children:[e.jsx(Hs,{user:a,announcement:n,forest:s.forest}),e.jsx(Ds,{players:t,user:a,announcement:n,forest:s.forest,currentRound:s.round.current,onSubmitMap:i})]})})})}function Ue({segment:s,tree:t,showArrow:a,className:o}){return e.jsxs("div",{className:P("map-entry",o),children:[t&&e.jsx(U,{id:t.treeType,text:t.card.text,className:"map-entry__tree"}),e.jsx(f,{icon:e.jsx(Z,{}),size:"large",className:"map-entry__icon"}),s.clues.map(r=>e.jsxs("div",{className:"map-entry__clue",children:[r.text,r?.negate&&e.jsx(f,{icon:e.jsx(F,{}),size:"small",className:"map-entry__clue-no"})]},`clue-${s.index}-${r.id}`)),a&&e.jsx(f,{icon:e.jsx(z,{}),size:"small",className:"map-entry__arrow"})]},`map-${s.index}`)}const $s={id:0,treeType:0,card:{id:"",text:""},point:[0,0]};function je({map:s=[],selectedTrees:t=[],fullMap:a=!1}){const o=a?s:s.filter(r=>r.active);return e.jsx(R,{wrap:!0,className:"player-map",style:{gridTemplateColumns:`repeat(${o.length}, 100px)`},children:o.map((r,i,n)=>{const l=t[i+1],d=a&&n.length-1===i?$s:void 0;return e.jsx(Ue,{className:"player-map__segment",tree:d??l,segment:r,showArrow:n.length-1!==i},`map-${r.index}`)})})}function Gs({forest:s,map:t=[],onSubmitPath:a,pathId:o,user:r,players:i}){const n=t.filter(c=>!c.passed&&c.clues.length>0),l=le.findLast(t,c=>c.passed)?.treeId??t?.[0]?.treeId??0,d=t.filter(c=>c.passed).map(c=>c.treeId),x=Rs(r,n,o),[m,h]=E.useState([l]),[S,b]=E.useState(l),T=xe(S,[...m,...d]),y=m.length>n.length,C=c=>{b(c);const j=m.indexOf(c);j>-1?h(_=>_.slice(0,j+1)):h(_=>[..._,c])},w=m.map(c=>s[c]),p=n?.[m.length-1];return We(),e.jsxs(R,{vertical:!0,children:[e.jsx(je,{map:t,selectedTrees:w}),e.jsx(fs,{active:!!p,children:e.jsx(Ue,{segment:p,className:Me("rubberBand")},p?.treeId)}),e.jsx(Ae,{size:"large",onClick:()=>a({guess:m.slice(1),pathId:o,choseRandomly:!1}),disabled:m.length-1<n.length,children:e.jsx(u,{pt:"Concluir",en:"Submit"})}),e.jsx(js,{onClick:()=>a({guess:Ls(t,n,!0,Object.values(x).flat().map(Number)),pathId:o,choseRandomly:!0}),ghost:!0,children:"Random Dev"}),e.jsx($,{forest:s,map:t,actions:{selection:m,clickableTrees:T,onSelectTree:C,activeTree:S,disabled:y},playerMapping:x,players:i})]})}function qs({players:s,announcement:t,forest:a,activePlayer:o,onSubmitPath:r,user:i}){const n=Object.keys(s).length;return e.jsxs(H,{fullWidth:!0,announcement:t,children:[e.jsx(K,{children:e.jsx(u,{pt:e.jsxs(e.Fragment,{children:["Siga o mapa de ",e.jsx(V,{player:o})]}),en:e.jsxs(e.Fragment,{children:["Follow ",e.jsx(V,{player:o}),"'s map"]})})}),e.jsx(L,{type:"action",children:e.jsx(u,{pt:e.jsxs(e.Fragment,{children:["Baseado no ",e.jsx(Q,{children:"mapa de adjetivos"}),", clique nas"," ",e.jsx(X,{children:"árvores"})," circuladas de pontinhos brancos para escolher aquele caminho.",e.jsx("br",{}),"Cada árvore correta vale ",e.jsx(v,{children:"1 ponto"})," por jogador que acertar (Por exemplo, 3 jogadores = 3 pontos).",e.jsx("br",{}),"Então, talvez valha a pena discutir! Porém, se somente um jogador acertar o caminho, ele ganha"," ",e.jsxs(v,{children:[n," pontos"]}),".",e.jsx("br",{}),"O criador do mapa ganha o mesmo número de pontos que os jogadores."]}),en:e.jsxs(e.Fragment,{children:["Based on the ",e.jsx(Q,{children:"adjectives map"}),", click on the"," ",e.jsx(X,{children:"circled trees"})," with white dots to choose that path.",e.jsx("br",{}),"Each correct tree is worth ",e.jsx(v,{children:"1 point"})," per player that guesses it (For example, 3 players = 3 points).",e.jsx("br",{}),"So, it might be worth discussing out loud! However, if only one player guesses the path, they earn ",e.jsxs(v,{children:[n," points"]}),".",e.jsx("br",{}),"The map creator also earns the same number of points as the players."]})})}),!!a&&o.map&&e.jsx(Gs,{forest:a,map:o.map,onSubmitPath:r,pathId:o.id,user:i,players:s})]})}function Vs({players:s,announcement:t,forest:a,activePlayer:o}){const r=Object.keys(s).length;return e.jsxs(H,{fullWidth:!0,announcement:t,children:[e.jsx(K,{children:e.jsx(u,{pt:e.jsx(e.Fragment,{children:"Os jogadores estão seguindo o seu mapa!"}),en:e.jsx(e.Fragment,{children:"Players are following your map!"})})}),e.jsx(L,{type:"wait",children:e.jsx(u,{pt:e.jsxs(e.Fragment,{children:["Baseado no ",e.jsx(Q,{children:"mapa de adjetivos"}),", eles vão clicando nas"," ",e.jsx(X,{children:"árvores"})," para escolher o caminho.",e.jsx("br",{}),"Cada árvore correta vale ",e.jsx(v,{children:"1 ponto"})," por jogador que acertar. Por exemplo, 3 jogadores = 3 pontos.",e.jsx("br",{}),"Se somente um jogador acertar o caminho, ele ganha"," ",e.jsxs(v,{children:[r," pontos"]}),".",e.jsx("br",{}),"Você, como criador do mapa, ganha o mesmo número de pontos que os jogadores."]}),en:e.jsxs(e.Fragment,{children:["Based on the ",e.jsx(Q,{children:"adjectives map"}),", players will click on the"," ",e.jsx(X,{children:"trees"})," to choose the path.",e.jsx("br",{}),"Each correct tree is worth ",e.jsx(v,{children:"1 point"})," per player that guesses it. For example, 3 players = 3 points.",e.jsx("br",{}),"If only one player guesses the path, they earn"," ",e.jsxs(v,{children:[r," points"]}),".",e.jsx("br",{}),"You as the map creator also earns the same number of points as the players."]})})}),e.jsx(je,{map:o.map}),e.jsx($,{forest:a,map:o.map,showPath:!0})]})}function Ys({state:s,players:t,user:a}){const{step:o,setStep:r}=de(),[i,n]=hs("activePlayerId",s,t),l=Cs(r),d=e.jsx(pe,{icon:e.jsx(ss,{}),title:e.jsx(u,{pt:"Siga os mapas!",en:"Follow the maps!"}),currentRound:s?.round?.current,type:"overlay",duration:3,children:e.jsxs(D,{children:[e.jsx(u,{pt:"Vamos analisar e tentar seguir o mapa de cada jogador",en:"Let's analise and try to follow the each player's map"}),e.jsx("br",{}),e.jsx(xs,{players:t,order:s.turnOrder,activePlayerId:s.activePlayerId})]})});return e.jsx(J,{phase:s?.phase,allowedPhase:O.PATH_FOLLOWING,children:e.jsx(me,{step:o,players:t,children:e.jsxs(ke,{condition:n,children:[e.jsx(Vs,{players:t,announcement:d,forest:s.forest,activePlayer:i}),e.jsx(qs,{players:t,user:a,announcement:d,forest:s.forest,onSubmitPath:l,activePlayer:i,isTheActivePlayer:n})]})})})}function Qs({players:s,ranking:t,onGoBack:a,round:o}){return e.jsxs(ys,{players:s,ranking:t,gainedPointsDescriptions:[e.jsx(u,{pt:"Rotas corretos",en:"Correct paths"},"1"),e.jsx(u,{pt:"Pontos por sua rota",en:"Points for your route"},"2")],children:[e.jsx(L,{type:"event",children:e.jsx(u,{pt:"Não se preocupe se você ficou pra trás! O jogador mais a frente de cada rota, te gritou e você conseguiu encontrá-lo.",en:"Don't worry if you were left behind! The player furthest ahead on that route, call you and you caught up"})}),e.jsx(R,{children:e.jsx(W,{onClick:a,children:e.jsx(u,{pt:"Ver resultado novamente",en:"See results again"})})}),e.jsx(Ke,{round:o})]})}function Xs({players:s,forest:t,currentPlayer:a}){const o=a.map.filter(r=>r.active);return e.jsx("div",{className:"div-container player-map",style:{gridTemplateColumns:`repeat(${o.length}, 120px)`},children:o.map((r,i,n)=>{const l=r.passed?t[r.treeId]:null;return e.jsxs("div",{className:"player-map__segment",children:[e.jsxs("div",{className:"player-map__top",children:[l?e.jsx(U,{id:l.treeType,text:l.card.text,className:"player-map__tree",width:75}):e.jsx(Be,{treeId:"1",className:"player-map__tree-invisible",text:"",width:75}),e.jsx(f,{icon:e.jsx(Z,{}),size:"large",className:"player-map__icon"}),e.jsx("div",{children:r.clues.map(d=>e.jsxs("div",{className:"player-map__clue",children:[d.text,d?.negate&&e.jsx(f,{icon:e.jsx(F,{}),size:"small",className:"player-map__clue-no"})]},`clue-${r.index}-${d.id}`))}),r.index===0&&e.jsx(f,{icon:e.jsx(ue,{}),size:"small",className:"player-map__starting-flag"}),n.length-1!==i&&e.jsx(f,{icon:e.jsx(z,{}),size:"small",className:"player-map__arrow"})]}),e.jsxs("div",{className:"player-map__scoring",children:[r.playersIds.length>0?e.jsx("div",{className:"player-map__players",children:r.playersIds.map(d=>{const x=s[d];return e.jsx(ce,{title:x.name,children:e.jsx(vs,{size:"small",avatarId:x.avatarId})},`player-${d}`)})}):e.jsx("div",{className:"player-map__no-players",children:e.jsx(u,{pt:"Nenhum jogador",en:"No players"})}),e.jsx("div",{children:r.score>0&&e.jsx(v,{children:r.score})})]})]},`map-${r.index}`)})})}function Js({players:s,gallery:t,user:a,forest:o,slideShowConfig:r}){const i=Object.keys(s).length,n=t[r.slideIndex],l=oe(n.avatarId),d=As(s,n);return e.jsxs(H,{fullWidth:!0,children:[e.jsx(Ce,{children:e.jsx(u,{pt:e.jsxs(e.Fragment,{children:["Mapa do(a) ",e.jsx(V,{player:n})]}),en:e.jsxs(e.Fragment,{children:[e.jsx(V,{player:n}),"'s map"]})})}),e.jsx(L,{type:"rule",children:e.jsx(u,{pt:e.jsxs(e.Fragment,{children:["Você ganha pontos ao acertar o caminho do mapa. ",e.jsx("br",{}),"Cada árvore correta vale ",e.jsx(v,{children:"1 ponto"})," por jogador que acertar."," ",e.jsx("br",{}),"Se você for o único que acertou, você ganha"," ",e.jsxs(v,{children:[i," pontos"]}),"."]}),en:e.jsxs(e.Fragment,{children:["You get points by guessing the map path. ",e.jsx("br",{}),"Each correct tree is worth ",e.jsx(v,{children:"1 point"})," per player who guesses it."," ",e.jsx("br",{}),"If you are the only one who guessed it, you get"," ",e.jsxs(v,{children:[i," points"]}),"."]})})}),e.jsx(Xs,{players:s,forest:o,currentPlayer:n}),e.jsxs("div",{children:[e.jsx($,{forest:o,map:n.map,size:"small",players:s,user:a,forestBorderColor:oe(n.avatarId),playerMapping:d}),e.jsx(gs,{config:r,barColor:l})]})]})}function Ks({state:s,players:t,user:a}){const{step:o,goToPreviousStep:r,goToNextStep:i}=de(),n=E.useMemo(()=>Re(t).filter(x=>x.map.some(m=>m.active)),[t]),l=_s({length:n.length,slideDuration:Ps,onExpire:i}),d=()=>{l.reset(),r()};return e.jsx(J,{phase:s?.phase,allowedPhase:O.RESULTS,children:e.jsxs(me,{step:o,players:t,children:[e.jsx(pe,{icon:e.jsx(ts,{}),title:e.jsx(u,{pt:"Resultado",en:"Results"}),currentRound:s?.round?.current,type:"block",onClose:i,unskippable:!0,children:e.jsx(D,{children:e.jsx(u,{pt:"Quem é o melhor em seguir direções?",en:"Who is the best at following directions?"})})}),e.jsx(Js,{gallery:n,players:t,slideShowConfig:l,forest:s.forest,user:a}),e.jsx(Qs,{players:t,round:s.round,ranking:s.ranking,onGoBack:d})]})})}function Zs({state:s,players:t}){const a=Re(t),o=s.forest??[];return e.jsxs(Ts,{state:s,players:t,announcementIcon:e.jsx(ue,{}),children:[e.jsx(Is,{players:t,achievements:s.achievements,reference:Ss}),e.jsx(De,{title:e.jsx(u,{pt:"Mapas dos Jogadores",en:"Players' Maps"}),children:a.map(r=>{const i=(r.map??[]).map(n=>o[n.treeId]);return e.jsxs(Fe,{className:"game-over-strip",style:{borderColor:oe(r.avatarId)},children:[e.jsx(bs,{player:r,withName:!0,className:"game-over-avatar-strip"}),e.jsx(je,{map:r.map,fullMap:!0,selectedTrees:i})]},r.id)})})]})}function et(s){switch(s.phase){case ae.DEFAULT.WAIT:return Ns;case O.MAP_BUILDING:return Us;case O.PATH_FOLLOWING:return Ys;case O.RESULTS:return Ks;case ae.DEFAULT.GAME_OVER:return Zs;default:return es}}function Sr(){return e.jsx(Ze,{gameCollection:Je.LABIRINTO_SECRETO,getActiveComponent:et})}export{Sr as default};
