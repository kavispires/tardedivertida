@use 'sass:math';

$particleSize: 20vmin;
$animationDuration: 6s;
$amount: 20;
$colors: (#44bba4, #3a7ca5, #f2e863, #f45b69);

.home {
  width: 100vw;
  height: 100vh;
  height: 100dvh;
  overflow: hidden;
  position: relative;

  &__logo-container {
    width: 100vw;
    height: 100vh;
    height: 100dvh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    z-index: 1000;
  }

  &__logo {
    max-width: 75vw;
    min-width: 300px;

    @include lg {
      width: 40vw;
    }
  }

  &__input {
    opacity: 0;
    transition: opacity 1s ease-in-out;
    margin-top: get-unit(4);

    input {
      text-align: center;
      text-transform: uppercase;
    }

    &--visible {
      opacity: 1;
    }
  }

  &__background {
    position: absolute;
    width: 100vw;
    height: 100vh;
    height: 100dvh;
    overflow: hidden;
    background-color: #3e1e68;

    & span {
      width: $particleSize;
      height: $particleSize;
      border-radius: $particleSize;
      backface-visibility: hidden;
      position: absolute;
      animation-name: move;
      animation-duration: $animationDuration;
      animation-timing-function: linear;
      animation-iteration-count: infinite;

      @for $i from 1 through $amount {
        &:nth-child(#{$i}) {
          color: nth($colors, random(length($colors)));
          top: random(100) * 1%;
          left: random(100) * 1%;
          animation-duration: calc(math.random(math.div($animationDuration * 10, 1s)) * 1s) + 10s;
          animation-delay: calc(math.random(math.div(($animationDuration + 10s) * 10, 1s)) * -1s);
          transform-origin: (random(50) - 25) * 1vw (random(50) - 25) * 1vh;
          $blurRadius: (random() + 0.5) * $particleSize * 0.5;
          $x: if(random() > 0.5, -1, 1);
          box-shadow: ($particleSize * 2 * $x) 0 $blurRadius currentColor;
        }
      }
    }
  }

  @keyframes move {
    100% {
      transform: translate3d(0, 0, 1px) rotate(360deg);
    }
  }
}
