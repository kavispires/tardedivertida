import { cloneDeep, merge } from 'lodash';
import { generateShareableResult, loadLocalToday, writeHeartResultString } from 'pages/Daily/utils';
import { STATUSES } from 'pages/Daily/utils/constants';
import type { BasicResultsOptions } from 'pages/Daily/utils/types';
// Internal
import { SETTINGS } from './settings';
import type { DailyEspionagemEntry, GameState } from './types';

const DEFAULT_LOCAL_TODAY: GameState = {
  id: '',
  number: 0,
  status: STATUSES.IN_PROGRESS,
  hearts: SETTINGS.HEARTS,
  released: [],
};

/**
 * Retrieves the initial state for the game based on the provided data.
 * @param data - The DailyEspionagemEntry object containing the necessary data for the game.
 * @returns The initial GameState object.
 */
export const getInitialState = (data: DailyEspionagemEntry): GameState => {
  const localToday = loadLocalToday({
    key: SETTINGS.KEY,
    gameId: data.id,
    defaultValue: merge(cloneDeep(DEFAULT_LOCAL_TODAY), {
      solution: '',
    }),
  });

  const state: GameState = {
    id: data.id,
    number: data.number,
    status: localToday.status,
    hearts: localToday.hearts,
    released: localToday.released,
  };

  return state;
};

export const FEATURE_PT_TRANSLATIONS: Dictionary<string> = {
  male: '√© homem',
  female: '√© mulher',
  'non-binary': '√© n√£o-bin√°rio(a)',
  black: '√© negro(a)',
  'black.male': '√© negro',
  'black.female': '√© negra',
  'black.non-binary': '√© negre',
  caucasian: '√© branco(a)',
  'caucasian.male': '√© branco',
  'caucasian.female': '√© branca',
  'caucasian.non-binary': '√© branque',
  asian: '√© asi√°tico(a)',
  'asian.male': '√© asi√°tico',
  'asian.female': '√© asi√°tica',
  'asian.non-binary': '√© asiaique',
  latino: '√© latino(a)',
  'latino.male': '√© latino',
  'latino.female': '√© latina',
  'latino.non-binary': '√© latinex',
  thin: '√© magrelo(a)',
  'thin.male': '√© magrelo',
  'thin.female': '√© magrela',
  'thin.non-binary': '√© magrele',
  large: '√© gordo(a)',
  'large.male': '√© gordo',
  'large.female': '√© gorda',
  'large.non-binary': '√© gordix',
  tall: '√© alto(a)',
  'tall.male': '√© alto',
  'tall.female': '√© alta',
  'tall.non-binary': '√© altix',
  short: '√© baixinho(a)',
  'short.male': '√© baixinho',
  'short.female': '√© baixinha',
  'short.non-binary': '√© baixinhe',
  young: '√© jovem',
  adult: '√© adulto(a)',
  'adult.male': '√© adulto',
  'adult.female': '√© adulta',
  'adult.non-binary': '√© adultx',
  senior: '√© idoso(a)',
  'senior.male': '√© da terceira idade',
  'senior.female': '√© da terceira idade',
  'senior.non-binary': '√© da terceira idade',
  average: 'tem corpo normal',
  medium: '√© de altura m√©dia',
  mixed: '√© mesti√ßo(a)',
  'mixed.male': '√© mesti√ßo',
  'mixed.female': '√© mesti√ßa',
  'mixed.non-binary': '√© mesti√ße',
  hat: 'est√° usando um chap√©u',
  tie: 'est√° usando uma gravata',
  glasses: 'est√° usando √≥culos',
  brownHair: 'tem cabelo castanho',
  shortHair: 'tem cabelo curto',
  beard: 'tem barba',
  scarf: 'est√° usando um cachecol',
  blondeHair: 'tem cabelo loiro',
  longHair: 'tem cabelo longo',
  greyHair: 'tem cabelo grisalho',
  bald: '√© careca',
  mustache: 'tem bigode',
  goatee: 'tem cavanhaque',
  muscular: '√© sarado(a)',
  'muscular.male': '√© sarado',
  'muscular.female': '√© sarada',
  'muscular.non-binary': '√© sarade',
  blackHair: 'tem cabelo preto',
  hoodie: 'est√° usando um moletom',
  earrings: 'est√° usando brincos',
  lipstick: 'est√° usando batom',
  necklace: 'est√° usando um colar',
  mediumHair: 'tem cabelo m√©dio',
  'middle-eastern': '√© do Oriente M√©dio',
  headscarf: 'est√° usando um len√ßo na cabe√ßa',
  redHair: 'tem cabelo ruivo',
  piercings: 'tem piercings',
  coloredHair: 'tem cabelo colorido',
  indian: '√© indiano(a)',
  'indian.male': '√© indiano',
  'indian.female': '√© indiana',
  'indian.non-binary': '√© indiane',
  'native-american': '√© nativo-americano(a)',
  noAccessories: 'est√° sem nenhum acess√≥rio',
  avoidingCamera: 'est√° evitando olhar para a c√¢mera',
  wearingStripes: 'tem listras na roupa',
  blackClothes: 'est√° vestindo roupas pretas',
  blueClothes: 'est√° vestindo roupas azuis',
  greenClothes: 'est√° vestindo roupas verdes',
  redClothes: 'est√° vestindo roupas vermelhas',
  yellowClothes: 'est√° vestindo roupas amarelas',
  purpleClothes: 'est√° vestindo roupas roxas',
  orangeClothes: 'est√° vestindo roupas laranjas',
  brownClothes: 'est√° vestindo roupas marrons',
  whiteShirt: 'est√° usando camisa branca',
  pinkClothes: 'est√° vestindo roupas rosas',
  patternedShirt: 'est√° usando roupa estampada',
  buttonShirt: 'est√° usando camisa com bot√µes',
  bow: 'est√° usando um la√ßo',
  hairyChest: 'tem peito peludo',
  wearingFlowers: 'est√° usando flores',
  showTeeth: 'est√° mostrando os dentes',
  hairTie: 'est√° usando um xuxinha ou fita no cabelo',
};

/**
 * Generates a shareable result for the game with the given options.
 * @param options - The options for generating the result.
 */
export function writeResult({
  released,
  remainingHearts,
  totalHearts,
  ...rest
}: BasicResultsOptions & {
  released: string[];
}): string {
  const winIcon = released.length === 11 ? 'üèÜ' : '‚ò†Ô∏è';

  // Calculate percentage based on how many suspects were released (0-11)
  const progress = released ? Math.round((released.length / 11) * 100) : 0;

  return generateShareableResult({
    additionalLines: [`${winIcon} ${writeHeartResultString(remainingHearts, totalHearts)} (${progress}%)`],
    hideHearts: true,
    remainingHearts,
    totalHearts,
    ...rest,
  });
}

/**
 * Generates the written result for the game with the state
 * @param data - The DailyEspionagemEntry data.
 * @param language - The language for the result.
 */
export function getWrittenResult({ data, language }: { data: DailyEspionagemEntry; language: Language }) {
  const state = getInitialState(data);
  return writeResult({
    type: 'espionagem',
    hideLink: true,
    language,
    challengeNumber: state.number,
    totalHearts: SETTINGS.HEARTS,
    remainingHearts: state.hearts,
    released: state.released,
  });
}
