{"version":3,"file":"static/js/page-dev-dailysetup.66171d56.chunk.js","mappings":"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","sources":["components/buttons/FixedMenuButton.tsx","components/buttons/TimedButton.tsx","components/buttons/TransparentButton.tsx","components/canvas/CanvasResizer.tsx","components/canvas/CanvasSVG.tsx","components/canvas/DrawingCanvas.tsx","hooks/useCountdown.ts","pages/Dev/DailySetup/hooks.ts","pages/Dev/DailySetup/utils.ts","pages/Dev/DailySetup/DailySetup.tsx","pages/Dev/DevMenu.tsx","pages/Dev/DevHeader.tsx","../node_modules/@ant-design/icons-svg/es/asn/CaretUpOutlined.js","../node_modules/@ant-design/icons/es/icons/CaretUpOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/DoubleLeftOutlined.js","../node_modules/@ant-design/icons/es/icons/DoubleLeftOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/DoubleRightOutlined.js","../node_modules/@ant-design/icons/es/icons/DoubleRightOutlined.js"],"sourcesContent":["import clsx from 'clsx';\nimport { ReactNode, useState } from 'react';\nimport { useEffectOnce } from 'react-use';\n// Ant Design Resources\nimport { Button, ButtonProps, Popover } from 'antd';\n// Sass\nimport './FixedMenuButton.scss';\n\ntype FixedMenuButtonDefaultProps = {\n  /**\n   * What order it will show up in the screen\n   * 0 for rules\n   * 1 for extras (e.g. card size)\n   * 2 for extras\n   * 3 for rating\n   * -1 for admin only\n   */\n  position: 0 | 1 | 2 | 3 | -1;\n  /**\n   * The displayed icon\n   */\n  icon: ReactNode;\n  /**\n   * The optional label to follow the icon when hover\n   */\n  label?: ReactNode;\n  /**\n   * The custom class\n   */\n  className?: string;\n  /**\n   * Determine if label should be visible\n   */\n  showLabel?: boolean;\n  /**\n   * Any ant design button props\n   */\n  buttonProps?: ButtonProps;\n};\n\ninterface FixedMenuButtonPopoverProps extends FixedMenuButtonDefaultProps {\n  /**\n   * The type of the floater\n   */\n  type: 'popover';\n  /**\n   * Content of popover, required when popover rule\n   */\n  content: ReactNode;\n  /**\n   * Guard onclick from button only\n   */\n  onClick?: never;\n  /**\n   * If popover should be open\n   */\n  open?: boolean;\n}\n\ninterface FixedMenuButtonButtonOnlyProps extends FixedMenuButtonDefaultProps {\n  /**\n   * The type of the floater\n   */\n  type: 'button';\n  /**\n   * The click function for the button\n   */\n  onClick: GenericFunction;\n  /**\n   * Guard content from popover\n   */\n  content?: never;\n  /**\n   * If popover should be open\n   */\n  open?: never;\n}\n\ntype FixedMenuButtonProps = FixedMenuButtonPopoverProps | FixedMenuButtonButtonOnlyProps;\n\n/**\n * Button position on the top left of the screen to display rules, admin button and other features\n */\nexport function FixedMenuButton({ type, position, content, className, open, ...rest }: FixedMenuButtonProps) {\n  return (\n    <div className={clsx('fixed-menu-button', `fixed-menu-button--${position}`, className)}>\n      {type === 'popover' ? (\n        <Popover placement=\"bottomLeft\" content={content} trigger=\"click\" open={open}>\n          <FixedMenuButtonContent {...rest} />\n        </Popover>\n      ) : (\n        <FixedMenuButtonContent {...rest} />\n      )}\n    </div>\n  );\n}\n\nfunction FixedMenuButtonContent({\n  icon,\n  label,\n  showLabel,\n  onClick,\n  buttonProps,\n}: Partial<FixedMenuButtonProps>) {\n  const [isActive, setActive] = useState(showLabel);\n  const hasLabel = Boolean(label);\n\n  useEffectOnce(() => {\n    setActive(showLabel);\n  });\n\n  return (\n    <Button\n      shape={hasLabel && isActive ? 'round' : 'circle'}\n      size=\"middle\"\n      onMouseOver={() => setActive(true)}\n      onMouseLeave={() => setActive(showLabel ?? false)}\n      onClick={onClick ? onClick : undefined}\n      icon={icon}\n      ghost\n      type=\"primary\"\n      {...buttonProps}\n    >\n      {isActive && hasLabel && <span className=\"fixed-menu-button__label\">{label}</span>}\n    </Button>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, ButtonProps } from 'antd';\n// Hook and Utils\nimport { useCountdown } from 'hooks/useCountdown';\n// Sass\nimport './TimedButton.scss';\n\ninterface TimedButtonProps extends ButtonProps {\n  /**\n   * Duration to call onExpire in seconds\n   */\n  duration?: number;\n  /**\n   * Function to be called when the time expires\n   */\n  onExpire?: GenericFunction;\n  /**\n   * Flag indicating if the timer should be hidden (this cancels the onExpire function)\n   */\n  hideTimer?: boolean;\n}\n\n/**\n * Button component that triggers a function when given duration is over\n */\nexport function TimedButton({\n  duration = 10,\n  children,\n  onExpire,\n  type,\n  onClick,\n  hideTimer = false,\n  ...rest\n}: TimedButtonProps) {\n  const { timeLeft } = useCountdown({\n    duration,\n    autoStart: true,\n    onExpire,\n    disabled: hideTimer,\n  });\n\n  const timeClass = 'timed-button__time';\n\n  return (\n    <Button {...rest} type={type} onClick={onClick ?? onExpire}>\n      {children}\n      {Boolean(children && !hideTimer) && ' '}\n      {!hideTimer && <span className={clsx(timeClass, `${timeClass}--${type}`)}>{timeLeft}</span>}\n    </Button>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Sass\nimport './TransparentButton.scss';\ninterface TransparentButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * The content of the button\n   */\n  children: ReactNode;\n  /**\n   * Flag indicating if the button is on its active state\n   */\n  active?: boolean;\n  /**\n   * Custom active class\n   */\n  activeClass?: string;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Behavior when the mouse hovers the button (default: scale)\n   */\n  hoverType?: 'scale' | 'sepia';\n}\n\n/**\n * Transparent button that has all the functionality of a button but no visible styling\n */\nexport const TransparentButton = ({\n  children,\n  active = false,\n  activeClass = '',\n  className = '',\n  hoverType = 'scale',\n  ...rest\n}: TransparentButtonProps) => {\n  return (\n    <button\n      className={clsx(\n        'transparent-button',\n        `transparent-button--${hoverType}`,\n        active && (activeClass || 'transparent-button--active'),\n        className\n      )}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n};\n","// Ant Design Resources\nimport { Slider } from 'antd';\nimport { DragOutlined } from '@ant-design/icons';\n// State & Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\n// Components\nimport { FixedMenuButton } from 'components/buttons';\nimport { Translate } from 'components/language';\n\n/**\n * Fixed Menu Button for resizing canvas\n */\nexport const CanvasResizer = () => {\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n\n  return (\n    <FixedMenuButton\n      type=\"popover\"\n      position={1}\n      icon={<DragOutlined />}\n      label={labelText}\n      content={\n        <div className=\"canvas-resizer\">\n          <div className=\"canvas-resizer__label\">{labelText}</div>\n          <Slider\n            className=\"canvas-resizer__slider\"\n            value={canvasSize ?? 100}\n            min={150}\n            max={500}\n            step={50}\n            onChange={setCanvasSize}\n          />\n        </div>\n      }\n    />\n  );\n};\n\nconst labelText = <Translate pt=\"Tamanho das Artes\" en=\"Art Size\" />;\n","/**\n * Builds paths from canvas lines\n * @param lines\n * @returns\n */\nconst getPathFromKonvaLines = (lines: CanvasLine[]) => {\n  const result = lines.map((lineArr) => {\n    let path = '';\n    for (let x = 0, y = 1; y < lineArr.length; x += 2, y += 2) {\n      if (lineArr[x + 2] && lineArr[y + 2]) {\n        path += `M${lineArr[x]},${lineArr[y]} L${lineArr[x + 2]},${lineArr[y + 2]}`;\n      }\n    }\n\n    return path;\n  });\n\n  return result;\n};\n\ntype CanvasSVGProps = {\n  /**\n   * The stringified svg path\n   */\n  drawing: string;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * The width of the canvas (default: 500)\n   */\n  width?: number;\n  /**\n   * The height of the canvas (default: 500)\n   */\n  height?: number;\n  /**\n   * Size of the stroke. Default: medium\n   */\n  strokeWidth?: 'small' | 'medium' | 'large';\n  /**\n   * Custom view box size (default: '0 0 500')\n   */\n  viewBox?: string;\n};\n\nexport const CanvasSVG = ({\n  drawing = '',\n  className = '',\n  width = 250,\n  height,\n  strokeWidth = 'medium',\n  viewBox = '0 0 500 500',\n}: CanvasSVGProps) => {\n  const konvaLines = JSON.parse(drawing);\n  const paths = getPathFromKonvaLines(konvaLines);\n\n  const strokeWidthBySize =\n    {\n      small: 3,\n      medium: 5,\n      large: 7,\n    }?.[strokeWidth] ?? 5;\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox={viewBox}\n      overflow=\"hidden\"\n      className={className}\n      style={{ width: `${width}px`, height: `${height || width}px` }}\n    >\n      <defs />\n      {paths.map((path, index) => (\n        <path\n          key={`${drawing}-${index}`}\n          d={path}\n          fill=\"none\"\n          stroke=\"#000\"\n          strokeWidth={strokeWidthBySize}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit=\"10\"\n        />\n      ))}\n    </svg>\n  );\n};\n","import { useRef, useState } from 'react';\nimport { Stage, Layer, Line } from 'react-konva';\nimport clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\nimport { DeleteOutlined, UndoOutlined } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\n\ntype DrawingCanvasProps = {\n  /**\n   * Lines drawn in the canvas\n   */\n  lines: CanvasLine[];\n  /**\n   * Function where any new version of the drawing is sent to\n   */\n  setLines: CanvasSetLine;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Show controls to undo, redo, or erase drawing. Default: false\n   */\n  showControls?: boolean;\n  /**\n   * Size of the stroke. Default: medium\n   */\n  strokeWidth?: 'small' | 'medium' | 'large';\n  /**\n   * The width of the canvas (default: 500)\n   */\n  width?: number;\n  /**\n   * The height of the canvas (default: 500)\n   */\n  height?: number;\n  /**\n   *\n   */\n  willReadFrequently?: boolean;\n};\n\n/**\n * Canvas drawing board using react-konva\n * It requires an array of lines and an setState function to save the lines\n */\nexport const DrawingCanvas = ({\n  lines,\n  setLines,\n  className = '',\n  showControls = false,\n  strokeWidth = 'medium',\n  width = 500,\n  height,\n  willReadFrequently = false,\n}: DrawingCanvasProps) => {\n  const [drawingHistory, setDrawingHistory] = useState<CanvasLine[]>([]);\n  const isDrawing = useRef(false);\n\n  /**\n   * Toggles off the isDrawing flag\n   */\n  const startDrawing = () => {\n    isDrawing.current = true;\n  };\n\n  /**\n   * Toggles off the isDrawing flag and resets history\n   */\n  const stopDrawing = () => {\n    isDrawing.current = false;\n    setDrawingHistory([]);\n  };\n\n  const startLine = (e: any) => {\n    startDrawing();\n    const pos = e.target.getStage().getPointerPosition();\n    setLines([...lines, [Math.round(pos.x), Math.round(pos.y)]]);\n  };\n\n  const finishLine = (e: any) => {\n    // Add point if it was a point\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    const x = Math.round(point.x);\n    const y = Math.round(point.y);\n\n    let lastLineEntry = lines[lines.length - 1];\n    lastLineEntry = lastLineEntry.concat([x + 0.1, y + 0.1]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLineEntry);\n    setLines(lines.concat());\n  };\n\n  /**\n   * Start recording drawing\n   * @param e - konva mouse event\n   */\n  const handleMouseDown = (e: any) => {\n    startLine(e);\n  };\n\n  /**\n   * Tracks mouse moving during the drawing\n   * @param e - konva mouse event\n   */\n  const handleMouseMove = (e: any) => {\n    // no drawing - skipping\n    if (!isDrawing.current) {\n      return;\n    }\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    let lastLine = lines[lines.length - 1];\n    // add end point\n    lastLine = lastLine.concat([Math.round(point.x), Math.round(point.y)]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLine);\n    setLines(lines.concat());\n  };\n\n  const handleMouseUp = (e: any) => {\n    if (isDrawing.current) {\n      stopDrawing();\n\n      finishLine(e);\n    }\n  };\n\n  /**\n   * Handles case when a current drawing is stopped off stage\n   * @param e - mouse event\n   */\n  const handleOffsetMouseUp = () => {\n    stopDrawing();\n  };\n\n  /**\n   * Handles case when a current drawing is started off stage\n   * @param e - mouse event\n   */\n  const handleOffsetMouseDown = () => {\n    startDrawing();\n  };\n\n  /**\n   * Handles when mouse leaves the stage\n   * @param e - konva mouse event\n   */\n  const handleMouseLeave = (e: any) => {\n    if (isDrawing.current) {\n      finishLine(e);\n\n      window.document.addEventListener('mouseup', handleOffsetMouseUp);\n      window.document.addEventListener('touchEnd', handleOffsetMouseUp);\n      window.document.addEventListener('mousedown', handleOffsetMouseDown);\n      window.document.addEventListener('touchStart', handleOffsetMouseDown);\n    }\n  };\n\n  /**\n   * Handles when mouse reenters the state\n   * @param e\n   */\n  const handleMouseEnter = (e: any) => {\n    if (isDrawing.current) {\n      startLine(e);\n    }\n    window.document.removeEventListener('mouseup', handleOffsetMouseUp);\n    window.document.removeEventListener('touchEnd', handleOffsetMouseUp);\n    window.document.removeEventListener('mousedown', handleOffsetMouseDown);\n    window.document.removeEventListener('touchStart', handleOffsetMouseDown);\n  };\n\n  const onClear = () => setLines([]);\n\n  const onUndo = () => {\n    const linesCopy = [...lines];\n    const drawingHistoryCopy = [...drawingHistory];\n    const lastLine: CanvasLine | undefined = linesCopy.pop();\n    if (lastLine) {\n      drawingHistoryCopy.push(lastLine);\n      setLines(linesCopy);\n      setDrawingHistory(drawingHistoryCopy);\n    }\n  };\n\n  const onRedo = () => {\n    const linesCopy = [...lines];\n    const drawingHistoryCopy = [...drawingHistory];\n    const lastUndoLine = drawingHistoryCopy.pop();\n    if (lastUndoLine) {\n      linesCopy.push(lastUndoLine);\n      setLines(linesCopy);\n      setDrawingHistory(drawingHistoryCopy);\n    }\n  };\n\n  const strokeWidthBySize =\n    {\n      small: 3,\n      medium: 5,\n      large: 7,\n    }?.[strokeWidth] ?? 5;\n\n  return (\n    <Space direction=\"vertical\" align=\"center\">\n      <Stage\n        width={width}\n        height={height || width}\n        onMouseDown={handleMouseDown}\n        onMousemove={handleMouseMove}\n        onMouseup={handleMouseUp}\n        onTouchStart={handleMouseDown}\n        onTouchMove={handleMouseMove}\n        onTouchEnd={handleMouseUp}\n        onMouseLeave={handleMouseLeave}\n        onMouseEnter={handleMouseEnter}\n        className={clsx('drawing-canvas', className)}\n        style={{ width: `${width}px`, height: `${height || width}px` }}\n        willReadFrequently={willReadFrequently}\n        id=\"drawing-canvas\"\n      >\n        <Layer>\n          {lines.map((line, i) => (\n            <Line\n              key={i}\n              points={line}\n              stroke=\"#222222\"\n              strokeWidth={strokeWidthBySize}\n              tension={0.5}\n              lineCap=\"round\"\n              globalCompositeOperation=\"source-over\"\n            />\n          ))}\n        </Layer>\n      </Stage>\n      {showControls && (\n        <Space>\n          <Button onClick={onUndo} disabled={lines.length === 0}>\n            <UndoOutlined />\n            <Translate pt=\"Desfazer\" en=\"Undo\" />\n          </Button>\n          <Button onClick={onRedo} disabled={drawingHistory.length === 0}>\n            <UndoOutlined />\n            <Translate pt=\"Refazer\" en=\"Redo\" />\n          </Button>\n          <Button onClick={onClear} disabled={lines.length === 0}>\n            <DeleteOutlined />\n            <Translate pt=\"Apagar\" en=\"Clear\" />\n          </Button>\n        </Space>\n      )}\n    </Space>\n  );\n};\n","import { TimerResult, TimerSettings, useTimer } from 'react-timer-hook';\nimport { inNSeconds } from 'utils/helpers';\n\ntype SelectedTimeSettings = Omit<TimerSettings, 'expiryTimestamp'>;\n\nexport interface useCountdownSettings extends SelectedTimeSettings {\n  /**\n   * The duration of the countdown in seconds\n   */\n  duration: number;\n  /**\n   * Disable timer\n   */\n  disabled?: boolean;\n}\n\ninterface useCountdownReturnValue extends TimerResult {\n  /**\n   * Time left in total seconds (minutes + seconds)\n   */\n  timeLeft: number;\n}\n\n/**\n * Timer countdown to perform actions\n * @param settings\n * @returns\n */\nexport function useCountdown({\n  duration,\n  onExpire,\n  disabled = false,\n  ...rest\n}: useCountdownSettings): useCountdownReturnValue {\n  const timer = useTimer({\n    expiryTimestamp: inNSeconds(duration),\n    onExpire: disabled ? undefined : onExpire,\n    ...rest,\n  });\n\n  const timeLeft = timer.minutes * 60 + timer.seconds;\n\n  return {\n    ...timer,\n    timeLeft,\n  };\n}\n","import { useMemo, useState } from 'react';\nimport { doc, getDoc, setDoc } from 'firebase/firestore';\nimport { firestore } from 'services/firebase';\nimport { QueryKey, useMutation, useQuery, useQueryClient, useQueries, UseQueryOptions } from 'react-query';\nimport { App } from 'antd';\nimport { DailyEntry, DailyHistory, DataDrawing, DataSuffixCounts } from './types';\nimport { sampleSize, shuffle } from 'lodash';\nimport { getNextDay } from './utils';\n\nfunction getDocQueryFunction<T>(path: string, docId: string) {\n  return async () => {\n    console.log(`${path}/${docId}`);\n    const docRef = doc(firestore, `${path}/${docId}`);\n    const querySnapshot = await getDoc(docRef);\n    return (querySnapshot.data() ?? {}) as T;\n  };\n}\n\nexport function useLoadDailySetup() {\n  const { notification } = App.useApp();\n\n  // Step 1: Load suffix counts\n  const suffixCountsQuery = useQuery<any, Error, DataSuffixCounts, QueryKey>({\n    queryKey: ['data', 'suffixCounts'],\n    queryFn: getDocQueryFunction<DataSuffixCounts>('data', 'suffixCounts'),\n    enabled: true,\n    onSuccess: () => {\n      notification.info({\n        message: 'Data Suffix Counts loaded',\n        placement: 'bottomLeft',\n      });\n    },\n    onError: () => {\n      notification.error({\n        message: 'Error loading suffix counts',\n        placement: 'bottomLeft',\n      });\n    },\n  });\n\n  console.log(suffixCountsQuery.data);\n\n  // Step 2: Load drawings\n  const drawingsQuery = useLoadDrawings(\n    Boolean(suffixCountsQuery.data?.drawingsPT),\n    suffixCountsQuery.data?.drawingsPT ?? 0\n  );\n  const areDrawingsLoading = drawingsQuery.some((q) => q.isLoading);\n\n  console.log(drawingsQuery?.[0]?.data);\n\n  // Step 3: Load daily history\n  const historyQuery = useQuery<any, Error, DailyHistory, QueryKey>({\n    queryKey: ['daily', 'history'],\n    queryFn: getDocQueryFunction<DataSuffixCounts>('daily', 'history'),\n    enabled: true,\n    onSuccess: () => {\n      notification.info({\n        message: 'Data Daily History loaded',\n        placement: 'bottomLeft',\n      });\n    },\n    onError: () => {\n      notification.error({\n        message: 'Error loading daily history',\n        placement: 'bottomLeft',\n      });\n    },\n  });\n\n  const usedCards = useMemo(() => historyQuery.data?.used ?? [], [historyQuery.data?.used]);\n  const latestDate = historyQuery.data?.latestDate ?? '2023-10-31';\n  console.log({ usedCards, latestDate });\n\n  // Step 4: Parse entries\n  const entries = useMemo(() => {\n    const drawings = (drawingsQuery ?? []).reduce((acc: Record<CardId, DailyEntry>, drawingEntry) => {\n      const drawingsLibrary = (drawingEntry.data ?? {}) as Record<string, DataDrawing>;\n      Object.entries(drawingsLibrary).forEach(([key, dataDrawing]) => {\n        if (dataDrawing.drawing.trim().length < 10) {\n          console.log('Empty drawing', dataDrawing.cardId);\n          return acc;\n        }\n        if (acc[dataDrawing.cardId] === undefined) {\n          acc[dataDrawing.cardId] = {\n            id: dataDrawing.cardId,\n            type: 'arte-ruim',\n            language: 'pt',\n            cardId: dataDrawing.cardId,\n            text: dataDrawing.text,\n            drawings: [dataDrawing.drawing],\n            number: 0,\n            dataIds: [key],\n          };\n        } else {\n          acc[dataDrawing.cardId].drawings.push(dataDrawing.drawing);\n          acc[dataDrawing.cardId].dataIds.push(key);\n        }\n      });\n\n      return acc;\n    }, {});\n\n    console.log({ totalCardCount: Object.keys(drawings).length });\n\n    const atLeastTwoDrawingsList = Object.values(drawings).filter(\n      (e) => e.drawings.length > 1 && e.cardId && !e.cardId?.includes('--')\n    );\n\n    console.log({ shortlistCardCount: atLeastTwoDrawingsList.length });\n\n    const shortList = Object.values(atLeastTwoDrawingsList).filter((e) => !usedCards.includes(e.cardId));\n\n    const shuffledShortList = sampleSize(shuffle(shortList), 45);\n\n    let lastDate = latestDate;\n\n    return shuffledShortList.map((e, index) => {\n      const id = getNextDay(lastDate);\n\n      lastDate = id;\n      return {\n        ...e,\n        id,\n        number: index + 1,\n      };\n    });\n  }, [drawingsQuery, usedCards, latestDate]);\n\n  const round5sample = useMemo(() => {\n    const drawings = (drawingsQuery ?? []).reduce((acc: Record<CardId, DailyEntry>, drawingEntry) => {\n      const drawingsLibrary = (drawingEntry.data ?? {}) as Record<string, DataDrawing>;\n      Object.entries(drawingsLibrary).forEach(([key, dataDrawing]) => {\n        if (dataDrawing.drawing.trim().length < 10) {\n          console.log('Empty drawing', dataDrawing.cardId);\n          return acc;\n        }\n        if (acc[dataDrawing.cardId] === undefined) {\n          acc[dataDrawing.cardId] = {\n            id: dataDrawing.cardId,\n            type: 'arte-ruim',\n            language: 'pt',\n            cardId: dataDrawing.cardId,\n            text: dataDrawing.text,\n            drawings: [dataDrawing.drawing],\n            number: 0,\n            dataIds: [key],\n          };\n        } else {\n          acc[dataDrawing.cardId].drawings.push(dataDrawing.drawing);\n          acc[dataDrawing.cardId].dataIds.push(key);\n        }\n      });\n\n      return acc;\n    }, {});\n\n    return Object.values(drawings).filter((e) => e.cardId?.includes('--'));\n  }, [drawingsQuery]);\n\n  return {\n    isLoading: suffixCountsQuery.isLoading || areDrawingsLoading || historyQuery.isLoading,\n    entries,\n    latestDate: historyQuery.data?.latestDate,\n    round5sample,\n  };\n}\n\nfunction useLoadDrawings(enabled: boolean, libraryCount: number) {\n  const { notification } = App.useApp();\n\n  const queries: UseQueryOptions[] = useMemo(() => {\n    return new Array(libraryCount).fill(0).map((_, index) => {\n      return {\n        queryKey: ['data', `drawingsPT${index + 1}`],\n        queryFn: getDocQueryFunction('data', `drawingsPT${index + 1}`),\n        enabled,\n        onSuccess: () => {\n          notification.info({\n            message: `Data Drawings PT${index + 1} loaded`,\n            placement: 'bottomLeft',\n          });\n        },\n      };\n    });\n  }, [libraryCount]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return useQueries(queries);\n}\n\nexport function useSaveDailySetup() {\n  const { notification } = App.useApp();\n  const queryClient = useQueryClient();\n\n  const [isDirty, setIsDirty] = useState(false);\n\n  const query = useMutation<any, Error, DailyEntry[], QueryKey>(\n    async (data) => {\n      const saves = data.map((entry) => {\n        const docRef = doc(firestore, `daily/${entry.id}`);\n        return setDoc(docRef, entry);\n      });\n\n      const docRec = doc(firestore, `daily/history`);\n      const history: DailyHistory = {\n        latestDate: data[data.length - 1].id,\n        used: data.map((e) => e.cardId),\n      };\n      setDoc(docRec, history);\n\n      return Promise.all(saves);\n    },\n    {\n      onSuccess: () => {\n        notification.info({\n          message: 'Data saved',\n          placement: 'bottomLeft',\n        });\n        queryClient.invalidateQueries(['daily', 'history']);\n        setIsDirty(false);\n      },\n      onError: () => {\n        notification.error({\n          message: 'Error saving data',\n          placement: 'bottomLeft',\n        });\n      },\n    }\n  );\n\n  return {\n    isDirty,\n    setIsDirty,\n    save: query.mutateAsync,\n    isLoading: query.isLoading,\n  };\n}\n","import moment from 'moment';\n\nexport function getNextDay(dateString: string): string {\n  const inputDate = moment(dateString, 'YYYY-MM-DD');\n  const nextDate = inputDate.add(1, 'days');\n\n  return nextDate.format('YYYY-MM-DD');\n}\n","import { useTitle } from 'react-use';\n// Ant Design Resources\nimport { Layout, TableColumnsType, Table, Button } from 'antd';\n// Components\n\nimport { DevHeader } from '../DevHeader';\nimport { useLoadDailySetup, useSaveDailySetup } from './hooks';\nimport { CanvasSVG } from 'components/canvas';\nimport { DailyEntry } from './types';\n\nfunction DailySetupPage() {\n  useTitle('Daily Setup | Dev | Tarde Divertida');\n\n  return (\n    <Layout className=\"dev-layout\">\n      <DevHeader title=\"Daily Setup\" />\n      <Layout.Content className=\"dev-content\">\n        <ul>\n          <li>Get history/useCards and latestDate</li>\n          <li>Get data/suffixCounts</li>\n          <li>Load all /data/drawingsPT</li>\n          <li>Filter cards with more than 2 entries</li>\n          <li>Filter cards that were already used</li>\n          <li>Shuffle and build daily entries</li>\n        </ul>\n        <DataPopulation />\n      </Layout.Content>\n    </Layout>\n  );\n}\n\nfunction DataPopulation() {\n  const dataLoad = useLoadDailySetup();\n\n  const columns: TableColumnsType<DailyEntry> = [\n    {\n      title: 'Id',\n      dataIndex: 'id',\n      key: 'id',\n    },\n    {\n      title: 'CardId',\n      dataIndex: 'cardId',\n      key: 'cardId',\n    },\n    {\n      title: 'Text',\n      dataIndex: 'text',\n      key: 'text',\n      render: (text) => (\n        <div>\n          {text\n            .split('')\n            .map((l: string, i: number) => (i < 2 || l === ' ' ? l : '⏹'))\n            .join('')}\n        </div>\n      ),\n    },\n    {\n      title: 'Count',\n      dataIndex: 'drawings',\n      key: 'count',\n      render: (drawings) => <div>{drawings.length}</div>,\n    },\n    {\n      title: 'Drawings',\n      dataIndex: 'drawings',\n      key: 'drawings',\n      render: (drawings) => (\n        <div>\n          {drawings.map((d: string) => (\n            <CanvasSVG key={d} drawing={d} width={100} height={100} className=\"border round-corners margin\" />\n          ))}\n        </div>\n      ),\n    },\n  ];\n\n  const { save, isLoading: isMutating } = useSaveDailySetup();\n\n  return (\n    <div>\n      {dataLoad.isLoading && <div>Loading...</div>}\n      <h1>Total: {dataLoad.entries.length}</h1>\n      <Table columns={columns} dataSource={dataLoad.entries ?? []} />\n      <Button\n        onClick={() => save(dataLoad.entries)}\n        loading={isMutating}\n        disabled={(dataLoad.entries ?? []).length === 0}\n      >\n        Save\n      </Button>\n    </div>\n  );\n}\n\nexport default DailySetupPage;\n","import { Segmented } from 'antd';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nexport function DevMenu() {\n  const { pathname } = useLocation();\n  const navigate = useNavigate();\n\n  const options = [\n    { label: 'Home', value: '/', disabled: pathname === '/' },\n    { label: 'Hub', value: '/hub', disabled: pathname === '/hub' },\n    { label: 'Icons', value: '/dev/icons', disabled: pathname === '/dev/icons' },\n    { label: 'Colors', value: '/dev/colors', disabled: pathname === '/dev/colors' },\n    { label: 'Sprites', value: '/dev/sprites', disabled: pathname === '/dev/sprites' },\n    { label: 'Resources', value: '/dev/resources', disabled: pathname === '/dev/resources' },\n    { label: 'Playground', value: '/dev/playground', disabled: pathname === '/dev/playground' },\n    { label: 'Daily Setup', value: '/dev/dailysetup', disabled: pathname === '/dev/dailysetup' },\n    { label: 'Showcase', value: '/showcase', disabled: pathname === '/showcase' },\n  ];\n\n  const onNavigate = (path: any) => {\n    navigate(path);\n  };\n\n  return <Segmented options={options} defaultValue={pathname} onChange={onNavigate} />;\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { Space } from 'antd';\n// Components\nimport { DevMenu } from './DevMenu';\n\ntype DevHeaderProps = {\n  title: ReactNode;\n  subTitle?: ReactNode;\n  extra?: ReactNode;\n};\n\nexport function DevHeader({ title, subTitle, extra }: DevHeaderProps) {\n  return (\n    <header className=\"dev-header\">\n      <div className=\"dev-header__heading\">\n        <div className=\"dev-header__left\">\n          <span className=\"dev-header__title\">{title} </span>\n          <span className=\"dev-header__subtitle\">{subTitle}</span>\n        </div>\n        <div className=\"dev-header__extra\">\n          <Space className=\"dev-header__extra-space\" wrap>\n            {extra}\n          </Space>\n          <DevMenu />\n        </div>\n      </div>\n    </header>\n  );\n}\n","// This icon file is generated automatically.\nvar CaretUpOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"0 0 1024 1024\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M858.9 689L530.5 308.2c-9.4-10.9-27.5-10.9-37 0L165.1 689c-12.2 14.2-1.2 35 18.5 35h656.8c19.7 0 30.7-20.8 18.5-35z\" } }] }, \"name\": \"caret-up\", \"theme\": \"outlined\" };\nexport default CaretUpOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport CaretUpOutlinedSvg from \"@ant-design/icons-svg/es/asn/CaretUpOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar CaretUpOutlined = function CaretUpOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: CaretUpOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  CaretUpOutlined.displayName = 'CaretUpOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(CaretUpOutlined);","// This icon file is generated automatically.\nvar DoubleLeftOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M272.9 512l265.4-339.1c4.1-5.2.4-12.9-6.3-12.9h-77.3c-4.9 0-9.6 2.3-12.6 6.1L186.8 492.3a31.99 31.99 0 000 39.5l255.3 326.1c3 3.9 7.7 6.1 12.6 6.1H532c6.7 0 10.4-7.7 6.3-12.9L272.9 512zm304 0l265.4-339.1c4.1-5.2.4-12.9-6.3-12.9h-77.3c-4.9 0-9.6 2.3-12.6 6.1L490.8 492.3a31.99 31.99 0 000 39.5l255.3 326.1c3 3.9 7.7 6.1 12.6 6.1H836c6.7 0 10.4-7.7 6.3-12.9L576.9 512z\" } }] }, \"name\": \"double-left\", \"theme\": \"outlined\" };\nexport default DoubleLeftOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport DoubleLeftOutlinedSvg from \"@ant-design/icons-svg/es/asn/DoubleLeftOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar DoubleLeftOutlined = function DoubleLeftOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: DoubleLeftOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  DoubleLeftOutlined.displayName = 'DoubleLeftOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(DoubleLeftOutlined);","// This icon file is generated automatically.\nvar DoubleRightOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M533.2 492.3L277.9 166.1c-3-3.9-7.7-6.1-12.6-6.1H188c-6.7 0-10.4 7.7-6.3 12.9L447.1 512 181.7 851.1A7.98 7.98 0 00188 864h77.3c4.9 0 9.6-2.3 12.6-6.1l255.3-326.1c9.1-11.7 9.1-27.9 0-39.5zm304 0L581.9 166.1c-3-3.9-7.7-6.1-12.6-6.1H492c-6.7 0-10.4 7.7-6.3 12.9L751.1 512 485.7 851.1A7.98 7.98 0 00492 864h77.3c4.9 0 9.6-2.3 12.6-6.1l255.3-326.1c9.1-11.7 9.1-27.9 0-39.5z\" } }] }, \"name\": \"double-right\", \"theme\": \"outlined\" };\nexport default DoubleRightOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport DoubleRightOutlinedSvg from \"@ant-design/icons-svg/es/asn/DoubleRightOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar DoubleRightOutlined = function DoubleRightOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: DoubleRightOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  DoubleRightOutlined.displayName = 'DoubleRightOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(DoubleRightOutlined);"],"names":["FixedMenuButton","type","position","content","className","open","rest","clsx","placement","trigger","FixedMenuButtonContent","icon","label","showLabel","onClick","buttonProps","useState","isActive","setActive","hasLabel","Boolean","useEffectOnce","shape","size","onMouseOver","onMouseLeave","undefined","ghost","TimedButton","duration","children","onExpire","hideTimer","timeLeft","useCountdown","autoStart","disabled","timeClass","TransparentButton","active","activeClass","hoverType","CanvasResizer","useGlobalState","canvasSize","setCanvasSize","DragOutlined","labelText","value","min","max","step","onChange","pt","en","CanvasSVG","drawing","width","height","strokeWidth","viewBox","konvaLines","JSON","parse","paths","map","lineArr","path","x","y","length","strokeWidthBySize","small","medium","large","xmlns","overflow","style","index","d","fill","stroke","strokeLinecap","strokeLinejoin","strokeMiterlimit","DrawingCanvas","lines","setLines","showControls","willReadFrequently","drawingHistory","setDrawingHistory","isDrawing","useRef","startDrawing","current","stopDrawing","startLine","e","pos","target","getStage","getPointerPosition","Math","round","finishLine","point","lastLineEntry","concat","splice","handleMouseDown","handleMouseMove","lastLine","handleMouseUp","handleOffsetMouseUp","handleOffsetMouseDown","direction","align","onMouseDown","onMousemove","onMouseup","onTouchStart","onTouchMove","onTouchEnd","window","document","addEventListener","onMouseEnter","removeEventListener","id","line","i","points","tension","lineCap","globalCompositeOperation","linesCopy","drawingHistoryCopy","pop","push","UndoOutlined","lastUndoLine","DeleteOutlined","timer","useTimer","expiryTimestamp","inNSeconds","minutes","seconds","getDocQueryFunction","docId","console","log","docRef","doc","firestore","getDoc","querySnapshot","data","useLoadDailySetup","notification","App","suffixCountsQuery","useQuery","queryKey","queryFn","enabled","onSuccess","info","message","onError","error","drawingsQuery","libraryCount","queries","useMemo","Array","_","useQueries","useLoadDrawings","drawingsPT","areDrawingsLoading","some","q","isLoading","historyQuery","usedCards","used","latestDate","entries","drawings","reduce","acc","drawingEntry","drawingsLibrary","Object","forEach","key","dataDrawing","trim","cardId","language","text","number","dataIds","totalCardCount","keys","atLeastTwoDrawingsList","values","filter","includes","shortlistCardCount","shortList","shuffledShortList","sampleSize","shuffle","lastDate","dateString","moment","add","format","round5sample","DataPopulation","dataLoad","columns","title","dataIndex","render","split","l","join","queryClient","useQueryClient","isDirty","setIsDirty","query","useMutation","saves","entry","setDoc","docRec","history","Promise","all","invalidateQueries","save","mutateAsync","useSaveDailySetup","isMutating","dataSource","loading","useTitle","DevHeader","DevMenu","pathname","useLocation","navigate","useNavigate","options","defaultValue","subTitle","extra","wrap","CaretUpOutlined","props","ref","React","AntdIcon","_extends","CaretUpOutlinedSvg","DoubleLeftOutlined","DoubleLeftOutlinedSvg","DoubleRightOutlined","DoubleRightOutlinedSvg"],"sourceRoot":""}