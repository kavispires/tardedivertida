{"version":3,"file":"static/js/galeria-de-sonhos.af1dc1a1.chunk.js","mappings":"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","sources":["components/metrics/CardHighlight.tsx","components/metrics/PlayersHighlight.tsx","components/metrics/PointsHighlight.tsx","components/points/StarPoints.tsx","icons/RulesIcon.tsx","components/pop-up/messageContent.tsx","components/ranking/RankingBoard.tsx","components/ranking/StepRankingWrapper.tsx","components/views/View.tsx","components/views/ViewIf.tsx","components/views/ViewOr.tsx","components/views/ViewSwitch.tsx","components/metrics/BotHighlight.tsx","components/metrics/PlayerHighlight.tsx","games/galeria-de-sonhos/components/RulesBlobs.tsx","games/galeria-de-sonhos/StepWordSelection.tsx","games/galeria-de-sonhos/PhaseWordSelection.tsx","games/galeria-de-sonhos/utils/api-requests.ts","games/galeria-de-sonhos/utils/mock.ts","games/galeria-de-sonhos/components/SelectTable.tsx","games/galeria-de-sonhos/StepDreamsSelection.tsx","games/galeria-de-sonhos/PhaseDreamsSelections.tsx","games/galeria-de-sonhos/components/PlayTable.tsx","games/galeria-de-sonhos/components/PlayersDreamsCount.tsx","games/galeria-de-sonhos/StepPlayDream.tsx","games/galeria-de-sonhos/components/ListPlayers.tsx","games/galeria-de-sonhos/components/MatchCount.tsx","games/galeria-de-sonhos/StepAnnounceDream.tsx","games/galeria-de-sonhos/utils/constants.ts","games/galeria-de-sonhos/PhaseCardPlay.tsx","games/galeria-de-sonhos/PhaseResolution.tsx","games/galeria-de-sonhos/components/BestMatches.tsx","games/galeria-de-sonhos/components/GameOverTable.tsx","games/galeria-de-sonhos/PhaseGameOver.tsx","games/galeria-de-sonhos/SessionGaleriaDeSonhos.tsx","games/galeria-de-sonhos/utils/achievements.ts","hooks/useBooleanDictionary.ts","hooks/useWhichPlayerIsThe.ts","icons/DreamIcon.tsx","icons/ImageCardsIcon.tsx","icons/PlayersIcon.tsx","icons/RankIcon.tsx","icons/StarIcon.tsx","../node_modules/@ant-design/icons-svg/es/asn/CaretUpOutlined.js","../node_modules/@ant-design/icons/es/icons/CaretUpOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/CrownFilled.js","../node_modules/@ant-design/icons/es/icons/CrownFilled.js","../node_modules/@ant-design/icons-svg/es/asn/RobotOutlined.js","../node_modules/@ant-design/icons/es/icons/RobotOutlined.js"],"sourcesContent":["import { ImageCardsIcon } from 'icons/ImageCardsIcon';\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function CardHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<ImageCardsIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import { PlayersIcon } from 'icons/PlayersIcon';\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function PlayersHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<PlayersIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import { StarIcon } from 'icons/StarIcon';\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function PointsHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<StarIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { StarFilled } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\n\ntype StarPointsProps = {\n  keyPrefix: string;\n  quantity?: number;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  hideText?: boolean;\n};\n\nexport const StarPoints = ({ keyPrefix, quantity, className, hideText }: StarPointsProps) => {\n  if (!quantity) {\n    return <span />;\n  }\n\n  const isNegative = quantity < 0;\n  const num = Math.abs(quantity);\n\n  const StarsArray = Array.from({ length: num }, (_, i) => <StarFilled key={`${keyPrefix}-${i}`} />);\n\n  return (\n    <span className={clsx('star-points', isNegative && 'star-points--negative', className)}>\n      {isNegative ? '-' : '+'} <span className=\"star-points__stars\">{StarsArray}</span>\n      {!hideText && (\n        <>\n          <Translate pt=\"ponto\" en=\"point\" />\n          {num > 1 ? 's' : ''}\n        </>\n      )}\n    </span>\n  );\n};\n","export function RulesIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ccad76\"\n        d=\"M489.5 100.5c8.284 0 15 6.716 15 15v301c0 22.091-17.909 40-40 40H276c-11.046 0-20-8.954-20-20v-336z\"\n      ></path>\n      <path\n        fill=\"#b5884d\"\n        d=\"M504.5 115.5v301c0 22.09-17.91 40-40 40h-30c22.09 0 40-17.91 40-40v-301c0-8.28-6.72-15-15-15h30c8.28 0 15 6.72 15 15z\"\n      ></path>\n      <path\n        fill=\"#ccad76\"\n        d=\"M22.5 100.5c-8.284 0-15 6.716-15 15v301c0 22.091 17.909 40 40 40H236c11.046 0 20-8.954 20-20v-336z\"\n      ></path>\n      <path\n        fill=\"#f2f2f2\"\n        d=\"M241 426.572H52.5c-8.284 0-15-6.716-15-15V85.5c0-8.284 6.716-15 15-15H241c8.284 0 15 6.716 15 15v326.072c0 8.284-6.716 15-15 15z\"\n      ></path>\n      <path\n        fill=\"#fff\"\n        d=\"M459.5 426.57l-188.5.002c-8.284 0-15-6.716-15-15V85.5c0-8.284 6.716-15 15-15l188.5-.002c8.284 0 15 6.716 15 15V411.57c0 8.284-6.716 15-15 15z\"\n      ></path>\n      <path\n        fill=\"#e8e8e8\"\n        d=\"M429.5 426.568h30c8.28 0 15-6.71 15-15V85.498c0-8.28-6.72-15-15-15h-30c8.28 0 15 6.72 15 15v326.07c0 8.29-6.72 15-15 15z\"\n      ></path>\n      <path\n        fill=\"#f7aa74\"\n        d=\"M129.212 142.267l-15.925-13.898a5 5 0 00-6.575 0l-15.925 13.898c-3.234 2.823-8.288.526-8.288-3.767v-78a5 5 0 015-5h45a5 5 0 015 5v78c.001 4.293-5.052 6.59-8.287 3.767z\"\n      ></path>\n      <path\n        fill=\"#f49595\"\n        d=\"M395.638 208.929l11.314-11.314c5.858-5.858 5.858-15.355 0-21.213-5.858-5.858-15.355-5.858-21.213 0l-11.314 11.314c-3.905 3.905-10.237 3.905-14.142 0l-12.021-12.021c-5.858-5.858-15.355-5.858-21.213 0-5.858 5.858-5.858 15.355 0 21.213l12.021 12.021c3.905 3.905 3.905 10.237 0 14.142l-12.021 12.021c-5.858 5.858-5.858 15.355 0 21.213 5.858 5.858 15.355 5.858 21.213 0l12.021-12.021c3.905-3.905 10.237-3.905 14.142 0l11.314 11.314c5.858 5.858 15.355 5.858 21.213 0 5.858-5.858 5.858-15.355 0-21.213l-11.314-11.314c-3.905-3.905-3.905-10.237 0-14.142z\"\n      ></path>\n      <path\n        fill=\"#90d399\"\n        d=\"M112.352 205.04l16.263 16.263a5 5 0 007.071 0l45.962-45.962c5.858-5.858 15.355-5.858 21.213 0 5.858 5.858 5.858 15.355 0 21.213l-60.104 60.104c-5.858 5.858-15.355 5.858-21.213 0l-30.406-30.406c-5.858-5.858-5.858-15.355 0-21.213 5.858-5.857 15.356-5.857 21.214.001z\"\n      ></path>\n      <path d=\"M504.5 369a7.5 7.5 0 007.5-7.5v-246c0-12.407-10.093-22.5-22.5-22.5H482v-7.5c0-12.407-10.093-22.5-22.5-22.5H271c-5.758 0-11.016 2.177-15 5.747-3.984-3.57-9.242-5.747-15-5.747h-68.5a7.5 7.5 0 000 15H241c4.136 0 7.5 3.365 7.5 7.5V105H245a7.5 7.5 0 000 15h3.5v39H244a7.5 7.5 0 000 15h4.5v40H244a7.5 7.5 0 000 15h4.5v40H244a7.5 7.5 0 000 15h4.5v40H244a7.5 7.5 0 000 15h4.5v40H244a7.5 7.5 0 000 15h4.5v17.572c0 4.135-3.364 7.5-7.5 7.5H52.5c-4.136 0-7.5-3.365-7.5-7.5V85.5c0-4.135 3.364-7.5 7.5-7.5H75v60.5c0 4.965 2.808 9.325 7.328 11.38a12.578 12.578 0 005.213 1.143c2.944 0 5.834-1.059 8.178-3.104L110 135.455l14.281 12.463c3.741 3.265 8.872 4.016 13.392 1.962 4.52-2.055 7.328-6.415 7.328-11.38v-78c0-6.893-5.607-12.5-12.5-12.5h-45C80.607 48 75 53.607 75 60.5V63H52.5C40.093 63 30 73.093 30 85.5V93h-7.5C10.093 93 0 103.093 0 115.5v301C0 442.691 21.309 464 47.5 464H236c7.875 0 14.982-3.332 20-8.655 5.018 5.322 12.125 8.655 20 8.655h188.5c26.191 0 47.5-21.309 47.5-47.5v-20a7.5 7.5 0 00-15 0v20c0 17.92-14.58 32.5-32.5 32.5H276c-6.893 0-12.5-5.607-12.5-12.5v-3.718a22.38 22.38 0 007.5 1.29h188.5c12.407 0 22.5-10.093 22.5-22.5V108h7.5c4.136 0 7.5 3.364 7.5 7.5v246a7.5 7.5 0 007.5 7.5zM90 63h40v70l-11.781-10.282c-2.343-2.044-5.281-3.067-8.219-3.067s-5.876 1.022-8.219 3.067L90 133zm146 386H47.5C29.58 449 15 434.42 15 416.5v-301c0-4.136 3.364-7.5 7.5-7.5H30v303.572c0 12.407 10.093 22.5 22.5 22.5H241c2.629 0 5.153-.458 7.5-1.29v3.718c0 6.893-5.607 12.5-12.5 12.5zm231-37.428c0 4.135-3.364 7.5-7.5 7.5H271c-4.136 0-7.5-3.365-7.5-7.5V394h3.5a7.5 7.5 0 000-15h-3.5v-40h3.5a7.5 7.5 0 000-15h-3.5v-40h3.5a7.5 7.5 0 000-15h-3.5v-40h3.5a7.5 7.5 0 000-15h-3.5v-40h3.5a7.5 7.5 0 000-15h-3.5v-39h4.5a7.5 7.5 0 000-15h-4.5V85.5c0-4.135 3.364-7.5 7.5-7.5h188.5c4.136 0 7.5 3.365 7.5 7.5z\"></path>\n      <path d=\"M321.745 229.789c-8.773 8.773-8.773 23.047 0 31.82 4.386 4.386 10.148 6.58 15.91 6.58s11.524-2.193 15.91-6.58l12.021-12.021c.637-.637 1.381-.732 1.768-.732s1.131.095 1.768.732l11.313 11.314c4.25 4.25 9.9 6.59 15.91 6.59s11.661-2.34 15.91-6.59c4.25-4.25 6.59-9.9 6.59-15.91s-2.34-11.66-6.59-15.91l-11.314-11.313c-.637-.637-.732-1.381-.732-1.768s.095-1.131.732-1.768l11.314-11.313c4.25-4.25 6.59-9.9 6.59-15.91s-2.34-11.661-6.59-15.91c-4.25-4.25-9.9-6.59-15.91-6.59s-11.66 2.34-15.91 6.59l-11.313 11.314c-.637.637-1.381.732-1.768.732s-1.131-.095-1.768-.732l-12.021-12.021c-8.772-8.773-23.047-8.772-31.82 0-8.773 8.773-8.773 23.047 0 31.82l12.021 12.021c.637.637.732 1.381.732 1.768s-.095 1.131-.732 1.768zm22.628-26.164l-12.021-12.021c-2.924-2.924-2.924-7.683 0-10.607a7.478 7.478 0 015.304-2.193c1.92 0 3.841.731 5.303 2.193l12.021 12.021c6.823 6.823 17.926 6.823 24.749 0l11.313-11.314c2.926-2.924 7.683-2.923 10.607 0 2.924 2.924 2.924 7.683 0 10.607l-11.314 11.313c-6.823 6.823-6.823 17.926 0 24.749l11.314 11.313c2.924 2.924 2.924 7.683 0 10.607s-7.683 2.924-10.607 0l-11.313-11.314c-6.823-6.823-17.926-6.823-24.749 0L342.959 251c-2.925 2.925-7.682 2.924-10.607 0-2.924-2.924-2.924-7.683 0-10.607l12.021-12.021c6.823-6.821 6.823-17.923 0-24.747zm-136.208-33.587c-8.772-8.772-23.047-8.772-31.819 0l-44.194 44.194-14.496-14.496c-4.25-4.25-9.9-6.59-15.91-6.59s-11.66 2.34-15.91 6.59c-8.773 8.772-8.773 23.047 0 31.819l30.405 30.406c4.386 4.387 10.148 6.58 15.91 6.58s11.524-2.193 15.91-6.58l60.104-60.104c8.772-8.772 8.772-23.046 0-31.819zm-10.607 21.213l-60.104 60.104a7.45 7.45 0 01-5.304 2.197 7.448 7.448 0 01-5.303-2.197L96.442 220.95c-1.417-1.417-2.197-3.3-2.197-5.303s.78-3.887 2.197-5.303 3.3-2.197 5.303-2.197 3.887.78 5.303 2.197l16.264 16.263c2.361 2.361 5.5 3.661 8.839 3.661s6.478-1.3 8.839-3.661l45.962-45.962c2.924-2.924 7.683-2.924 10.606 0a7.45 7.45 0 012.197 5.304c0 2.002-.78 3.886-2.197 5.302zM204.5 301.5a7.5 7.5 0 00-7.5-7.5H97a7.5 7.5 0 000 15h100a7.5 7.5 0 007.5-7.5zM117 324a7.5 7.5 0 000 15h60a7.5 7.5 0 000-15zm300-30H317a7.5 7.5 0 000 15h100a7.5 7.5 0 000-15zm-20 30h-60a7.5 7.5 0 000 15h60a7.5 7.5 0 000-15z\"></path>\n    </svg>\n  );\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { message } from 'antd';\n// Icons\nimport { VideoGameControllerIcon } from 'icons/VideoGameControllerIcon';\n// Components\nimport { RulesIcon } from 'icons/RulesIcon';\nimport { Translate } from 'components/language';\n\n/**\n * Pops up a modal with a confirmation button but also closing timeout\n * @param title\n * @param description\n * @param id\n * @param duration\n * @param type\n * @returns\n */\nexport const messageContent = (\n  title: ReactNode,\n  description: ReactNode,\n  id: string,\n  duration = 30,\n  type: 'control' | 'rules' = 'control'\n) => {\n  const key = `${id} - ${title}`;\n\n  return {\n    content: (\n      <div>\n        <h2>{title}</h2>\n        <div>{description}</div>\n        <p>\n          <small>\n            <Translate\n              pt=\"Popup fecha automaticamente ou clique para fechar\"\n              en=\"Auto-close or click to close\"\n            />\n          </small>\n        </p>\n      </div>\n    ),\n    top: window.innerWidth / 2 - 100,\n    duration,\n    key,\n    icon:\n      type === 'control' ? (\n        <VideoGameControllerIcon style={{ width: '64px' }} />\n      ) : (\n        <RulesIcon style={{ width: '64px' }} />\n      ),\n    onClick: () => message.destroy(key),\n  };\n};\n","import clsx from 'clsx';\nimport { ReactNode, useEffect, useMemo, useState } from 'react';\nimport { orderBy } from 'lodash';\nimport { useEffectOnce } from 'react-use';\n// Ant Design Resources\nimport { Tooltip } from 'antd';\nimport { CrownFilled } from '@ant-design/icons';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useDimensions } from 'hooks/useDimensions';\n// Components\nimport { Translate } from 'components/language';\nimport { Avatar } from 'components/avatars';\n\ntype GainedPointProps = {\n  gainedPoint: number;\n  order: number;\n  description?: any;\n};\n\nfunction GainedPoint({ gainedPoint, order, description }: GainedPointProps): JSX.Element {\n  const isPositive = gainedPoint > 0;\n  const isNegative = gainedPoint < 0;\n  return (\n    <li\n      className={clsx(\n        'ranking-board__gained-point',\n        isPositive && 'ranking-board__gained-point--plus',\n        isNegative && 'ranking-board__gained-point--minus',\n        `ranking-board__gained-point--${order}`\n      )}\n    >\n      <Tooltip\n        title={description ?? <Translate pt=\"Pontos ganhos\" en=\"Gained Points\" />}\n        color={isPositive ? 'gold' : isNegative ? 'red' : 'gray'}\n      >\n        {isPositive ? '+' : ''}\n        {gainedPoint}\n      </Tooltip>\n    </li>\n  );\n}\n\ntype GainedPointsProps = {\n  gainedPoints: number[] | number;\n  playerId: PlayerId;\n  gainedPointsDescriptions?: any[];\n};\n\nfunction GainedPoints({\n  gainedPoints,\n  playerId,\n  gainedPointsDescriptions = [],\n}: GainedPointsProps): JSX.Element {\n  const points = Array.isArray(gainedPoints) ? gainedPoints : [gainedPoints];\n  return (\n    <ul className=\"ranking-board__cell-gained-points\">\n      {points.map((gainedPoint, index) => (\n        <GainedPoint\n          key={`gained-point-${playerId}-${index}`}\n          gainedPoint={gainedPoint}\n          order={index}\n          description={gainedPointsDescriptions[index]}\n        />\n      ))}\n    </ul>\n  );\n}\n\ntype RankingBoardProps = {\n  players: GamePlayers;\n  ranking: GameRanking;\n  gainedPointsDescriptions?: ReactNode[];\n  hideGainedPoints?: boolean;\n  delay?: number;\n};\n\nexport function RankingBoard({\n  players,\n  ranking,\n  gainedPointsDescriptions,\n  hideGainedPoints = false,\n  delay = 0,\n}: RankingBoardProps): JSX.Element {\n  const [displayStep, setDisplayStep] = useState(0);\n  const [sortedRanking, setSortedRanking] = useState<GameRanking>([]);\n  const [reRank, setReRank] = useState(0);\n  const [, height] = useDimensions('ranking-row-0');\n\n  const maxPoints = useMemo(() => Math.max(...ranking.map((scores) => scores.newScore)), [ranking]);\n\n  const { seconds } = useCountdown({\n    duration: 5 + delay,\n    autoStart: true,\n    onExpire: () => {\n      setReRank(1);\n      setDisplayStep(3);\n    },\n  });\n\n  // Rank by previousScore\n  useEffectOnce(() => {\n    const positions: PlainObject = {};\n    let lastPosition = 0;\n    let lastPoints = 0;\n\n    const rankByFinalScoreDict = orderBy(ranking, ['newScore', 'name'], ['desc', 'asc']).reduce(\n      (acc: PlainObject, entry, index) => {\n        acc[entry.playerId] = index;\n        // Calculate position\n        if (lastPoints === 0 || entry.newScore < lastPoints) {\n          lastPoints = entry.newScore;\n          lastPosition += 1;\n        }\n        positions[entry.playerId] = [0, lastPosition];\n        return acc;\n      },\n      {}\n    );\n\n    const rankByPreviousScore = orderBy(ranking, ['previousScore', 'name'], ['desc', 'asc']);\n\n    // Reset position trackers\n    lastPosition = 0;\n    lastPoints = 0;\n\n    const tempSortedRanking: GameRanking = rankByPreviousScore.map((entry, index) => {\n      const newEntry = { ...entry };\n\n      newEntry.order = [index, rankByFinalScoreDict[newEntry.playerId]];\n      newEntry.position = positions[newEntry.playerId];\n      // Calculate position\n      if (lastPoints === 0 || entry.previousScore < lastPoints) {\n        lastPoints = entry.previousScore;\n        lastPosition += 1;\n      }\n      newEntry.position[0] = lastPosition;\n      return newEntry;\n    });\n\n    setSortedRanking(tempSortedRanking);\n  });\n\n  // Show gained points\n  useEffect(() => {\n    if (seconds === 4 + delay) {\n      setDisplayStep(1);\n    } else if (seconds === 2 + delay) {\n      setDisplayStep(2);\n    }\n  }, [seconds, delay]);\n\n  return (\n    <div\n      className=\"ranking-board\"\n      style={{ height: `${(Math.max(60, height) + 8) * sortedRanking.length}px` }}\n    >\n      {sortedRanking.map((entry, index) => {\n        const { playerId, newScore, previousScore, gainedPoints, order, position } = entry;\n        const hPosition = (Math.max(60, height) + 8) * (order[reRank] ?? 0);\n\n        return (\n          <div\n            className={`ranking-board__row ranking-board__row--${index}`}\n            key={`ranking-${playerId}`}\n            id={`ranking-row-${index}`}\n            style={{ top: `${hPosition}px` }}\n          >\n            <div className=\"ranking-board__cell-crown\">\n              {newScore > 0 && maxPoints === newScore && displayStep >= 3 && (\n                <CrownFilled className=\"ranking-board__crown-icon\" />\n              )}\n            </div>\n            <div className=\"ranking-board__cell-position\">#{position[reRank] ?? ''}</div>\n            <div className=\"ranking-board__cell-player\">\n              <div className=\"ranking-board__avatar\">\n                <Avatar id={players[playerId].avatarId} />\n              </div>\n              <div className=\"ranking-board__name\">{players[playerId].name}</div>\n            </div>\n            <Tooltip title={<Translate pt=\"Pontos Anteriores\" en=\"Previous Points\" />} color=\"gray\">\n              <div className=\"ranking-board__cell-points\">{previousScore}</div>\n            </Tooltip>\n            {!hideGainedPoints && displayStep >= 1 && gainedPoints !== undefined && (\n              <GainedPoints\n                gainedPoints={gainedPoints}\n                playerId={playerId}\n                gainedPointsDescriptions={gainedPointsDescriptions}\n              />\n            )}\n            {displayStep >= 2 && (\n              <Tooltip title=\"Total\" color=\"gold\">\n                <span className=\"ranking-board__cell-points-total\">{newScore}</span>\n              </Tooltip>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { CaretUpOutlined } from '@ant-design/icons';\n// Hooks\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Components\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { RankingBoard } from './RankingBoard';\n\ntype StepRankingWrapperProps = {\n  /**\n   * The players\n   */\n  players: GamePlayers;\n  /**\n   * The ranking array\n   */\n  ranking: GameRanking;\n  /**\n   * Gained points descriptions for the popover\n   */\n  gainedPointsDescriptions: ReactNode[];\n  /**\n   * Additional content\n   */\n  children?: ReactNode;\n  /**\n   * Replacement title for Ranking\n   */\n  title?: ReactNode;\n  /**\n   * Optional node that goes under the title\n   */\n  subtitle?: ReactNode;\n};\n\nexport function StepRankingWrapper({\n  players,\n  ranking,\n  gainedPointsDescriptions,\n  children,\n  title,\n  subtitle,\n}: StepRankingWrapperProps) {\n  useTemporarilyHidePlayersBar();\n\n  return (\n    <Step>\n      <Title>{title ?? 'Ranking'}</Title>\n\n      {subtitle}\n\n      <RankingBoard players={players} ranking={ranking} gainedPointsDescriptions={gainedPointsDescriptions} />\n      <Instruction className=\"step-ranking-wrapper-gained-points-instruction\">\n        <CaretUpOutlined />\n        <Translate\n          pt=\"Passe o mouse em cada um dos pontos para saber como eles foram distribuídos\"\n          en=\"Hover over the scores to learn how they were granted\"\n        />\n        <CaretUpOutlined />\n      </Instruction>\n\n      {children}\n    </Step>\n  );\n}\n","import { ReactNode } from 'react';\n\ntype ViewProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n};\n\nexport function View({ children }: ViewProps) {\n  return <>{children}</>;\n}\n","import { ReactNode } from 'react';\n\ntype ViewIfProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Displays children only if condition is truthy\n   */\n  condition?: boolean;\n};\n\n/**\n * Wrapper component that only renders the children if the condition is truthy\n */\nexport function ViewIf({ condition = false, children }: ViewIfProps) {\n  return condition ? <>{children}</> : <></>;\n}\n","import { ReactNode } from 'react';\n\ntype ViewOrProps = {\n  /**\n   * The content of the component to be toggled\n   */\n  children: [ReactNode, ReactNode];\n  /**\n   * The condition to be met to render the first children\n   */\n  condition?: boolean;\n};\n\n/**\n * View wrapper that renders one of two children depending on a condition\n */\nexport function ViewOr({ condition = false, children }: ViewOrProps) {\n  return condition ? <>{children[0]}</> : <>{children[1]}</>;\n}\n","type ViewSwitchProps = {\n  cases: boolean[];\n  /**\n   * The content of the component\n   */\n  children: any;\n};\n\nexport function ViewSwitch({ cases, children }: ViewSwitchProps) {\n  if (cases.length > 5) {\n    throw Error('ViewSwitch only supports up to 5 cases');\n  }\n\n  if (cases[0] && children[0]) {\n    return children[0];\n  }\n\n  if (cases[1] && children[1]) {\n    return children[1];\n  }\n\n  if (cases[2] && children[2]) {\n    return children[2];\n  }\n\n  if (cases[3] && children[3]) {\n    return children[3];\n  }\n\n  if (cases[4] && children[4]) {\n    return children[4];\n  }\n  console.warn('Rendering all children in the ViewSwitch');\n  return children;\n}\n","import { RobotIcon } from 'icons/RobotIcon';\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function BotHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<RobotIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import { PlayerIcon } from 'icons/PlayerIcon';\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function PlayerHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<PlayerIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import { AvatarName } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { BotHighlight } from 'components/metrics/BotHighlight';\nimport { CardHighlight } from 'components/metrics/CardHighlight';\nimport { PlayerHighlight } from 'components/metrics/PlayerHighlight';\nimport { PlayersHighlight } from 'components/metrics/PlayersHighlight';\nimport { PointsHighlight } from 'components/metrics/PointsHighlight';\nimport { Instruction } from 'components/text';\n\ntype WordSelectionRulesProps = {\n  scout: GamePlayer;\n};\n\nexport function WordSelectionRules({ scout }: WordSelectionRulesProps) {\n  return (\n    <Instruction>\n      <Translate\n        pt={\n          <>\n            Cada rodada tem seu tema... uma palavra.\n            <br />\n            Para essa rodada, <AvatarName player={scout} addressUser size=\"small\" /> escolherá o tema.\n          </>\n        }\n        en={\n          <>\n            Every round has a theme... a word.\n            <br />\n            For this round,\n            <AvatarName player={scout} addressUser size=\"small\" /> will choose the theme.\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function GeneralRules() {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Somos caçadores de sonhos!\n            <br />\n            Dentro do tema escolhido, podemos visitar os sonhos de até 10 das 15 pessoas (cartas-imagens)\n            disponíveis.\n            <br />\n            O objetivo é encontrar uns aos outros em cada sonho, então escolha apenas sonhos que você acredita\n            que outros jogadores também irão escolher.\n            <br />\n            Parece fácil, mas se você escolher um sonho que ninguém mais escolheu... vixi...\n          </>\n        }\n        en={\n          <>\n            We are dream scouts!\n            <br />\n            Given the chosen theme, we can visit dreams of 10 of the 15 people (image cards) available.\n            <br />\n            The goal of the game is to match the same visited dreams of other players, therefore choose dreams\n            that you think other players will also choose.\n            <br />\n            It seems easy, but if you choose a dream that nobody else has chosen... well...\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function DreamSelectionRules({ contained = false }) {\n  return (\n    <Instruction contained={contained}>\n      <Translate\n        pt={\n          <>\n            Selecione sonhos (cartas) que você acha que se relacionam com a palavra-tema da rodada.\n            <br />\n            Você deve selecionar pelo menos <CardHighlight>1</CardHighlight> e no máximo{' '}\n            <CardHighlight>10</CardHighlight>.\n          </>\n        }\n        en={\n          <>\n            Now select cards that you think match the round's card.\n            <br />\n            You must select at least <CardHighlight>1</CardHighlight> card and a maximum of{' '}\n            <CardHighlight>10</CardHighlight>.\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function DreamSelectionExtendedRules() {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Na próxima fase, de um a um, cada jogador vai escolher um de seus sonhos visitados.\n            <br />\n            Se pelo menos um jogador visitou o mesmo sonho, eles ganham pontos. Se ninguém escolheu, o jogador\n            está fora da rodada!\n            <br />\n            Dai passa-se a vez para o próximo jogador!\n            <br />\n            Sonhos só podem ser escolhidos uma vez por rodada...\n          </>\n        }\n        en={\n          <>\n            On the next phase, one by one, each player will select one of their visited dreams.\n            <br />\n            If at least one other player visited the same dream, they get points! If nobody visited the same\n            dream, you are out of the round!\n            <br />\n            Each dream can be chosen once per round only...\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function CardPlayRules() {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            De um em um, cada jogador vai escolher um de seus sonhos visitados se você ainda tem algum\n            disponível.\n            <br />\n            Selecione o sonho que você mais acha que tem chance de outro jogador ter também visitado.\n            <br />\n            Você ganha <PointsHighlight type=\"positive\">3</PointsHighlight> pontos se apenas mais{' '}\n            <PlayerHighlight>1</PlayerHighlight> jogador visitou o mesmo sonho.\n            <br />\n            Você ganha <PointsHighlight type=\"positive\">2</PointsHighlight> pontos se mais de{' '}\n            <PlayersHighlight>1+</PlayersHighlight> jogador visitou o mesmo sonho.\n            <br />\n            Você está eliminado da rodada se ninguém mais visitou o sonho escolhido.\n          </>\n        }\n        en={\n          <>\n            One by one, each player chooses one of their visited dreams, if you have any still available.\n            <br />\n            Select the dream you think you have the most chances of matching another player.\n            <br />\n            You get <PointsHighlight type=\"positive\">3</PointsHighlight> points if only{' '}\n            <PlayerHighlight>1</PlayerHighlight> player visited the same dream.\n            <br />\n            You get <PointsHighlight type=\"positive\">2</PointsHighlight> points if many{' '}\n            <PlayersHighlight>1+</PlayersHighlight> players have visited the same dream.\n            <br />\n            You are eliminated for this round if nobody else has visited the chosen dream.\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function BotsRules() {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Em um jogo com bots, <BotHighlight>3</BotHighlight> jogadores-robôs são adicionados ao jogo.\n            <br />\n            Antes da fase do Bingo dos Sonhos, os três bots entram em ação e selecionam cartas segundo se\n            seguinte lógica:\n            <br />\n            O bot A seleciona todas as cartas que foram mais selecionadas pelos jogadores.\n            <br />\n            O bot B seleciona cartas que foram selecionadas por apenas um jogador, mas apenas uma por jogador,\n            e somente se mais de um jogador tiver essa carta extra.\n            <br />O bot C simplesmente seleciona 4 cartas aleatórias.\n          </>\n        }\n        en={\n          <>\n            In a game with bos, the <BotHighlight>3</BotHighlight> bots are added to the game.\n            <br />\n            Before the Dream Bingo phase, the three bots select cards based on a pre-determined logic:\n            <br />\n            Bot A select all most visited cards.\n            <br />\n            Bot B select all cards that got a single player visiting them but only one per player and only if\n            more than one player will have a match this way.\n            <br />\n            Bot C simply selects 4 random cards.\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Utils\nimport { LETTERS } from 'utils/constants';\n// Components\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { TransparentButton } from 'components/buttons';\nimport { Card } from 'components/cards';\n\ntype StepWordSelectionProps = {\n  onSubmitWord: GenericFunction;\n  words: GWord[];\n};\n\nexport function StepWordSelection({ onSubmitWord, words }: StepWordSelectionProps) {\n  return (\n    <Step fullWidth>\n      <Title>\n        <Translate pt=\"Selecione o tema da rodada\" en=\"Select the theme for the round\" />\n      </Title>\n\n      <Space className=\"space-container\" align=\"center\">\n        {words.map((word, index) => {\n          return (\n            <TransparentButton key={word.id} onClick={() => onSubmitWord({ wordId: word.id })}>\n              <Card header={LETTERS[index]} color=\"purple\">\n                {word.text}\n              </Card>\n            </TransparentButton>\n          );\n        })}\n      </Space>\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useStep } from 'hooks/useStep';\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\nimport { useOnSubmitWordAPIRequest } from './utils/api-requests';\nimport { useUser } from 'hooks/useUser';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { SleepIcon } from 'icons/SleepIcon';\n// Components\nimport { GeneralRules, WordSelectionRules } from './components/RulesBlobs';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { RoundAnnouncement } from 'components/round';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { ViewOr } from 'components/views';\nimport { WaitingRoom } from 'components/players';\nimport { AvatarName } from 'components/avatars';\nimport { StepWordSelection } from './StepWordSelection';\n\nfunction PhaseWordSelection({ players, state, info }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, goToNextStep, setStep } = useStep();\n\n  const [scout, isUserTheScout] = useWhichPlayerIsThe('scoutId', state, players);\n\n  const onSubmitWord = useOnSubmitWordAPIRequest(setStep);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.GALERIA_DE_SONHOS.WORD_SELECTION}>\n      <StepSwitcher\n        step={step}\n        conditions={[!user.isReady, !user.isReady, !user.isReady]}\n        players={players}\n        waitingRoomInstructionType=\"SERVER\"\n      >\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state?.round}\n          onPressButton={goToNextStep}\n          buttonText=\" \"\n          time={5}\n          circleColor={info?.appearance?.color}\n        >\n          <Instruction contained>\n            <Translate\n              pt=\"Somos caçadores de sonhos tentando encontrar uns aos outros...\"\n              en=\"We're dream scouts trying to find each other...\"\n            />\n          </Instruction>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <PhaseAnnouncement\n          icon={<SleepIcon />}\n          title={<Translate pt=\"Tema dos Sonhos\" en=\"The Dream Theme\" />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          type=\"block\"\n        >\n          <WordSelectionRules scout={scout} />\n        </PhaseAnnouncement>\n\n        {/* Step 2 */}\n        <ViewOr condition={isUserTheScout}>\n          <StepWordSelection onSubmitWord={onSubmitWord} words={state.words} />\n\n          <WaitingRoom\n            players={players}\n            title={<Translate pt=\"Aguarde...\" en=\"Please wait...\" />}\n            instruction={\n              <Translate\n                pt={\n                  <>\n                    <AvatarName player={scout} /> está escolhendo o tema.\n                  </>\n                }\n                en={\n                  <>\n                    <AvatarName player={scout} /> is choosing the theme.\n                  </>\n                }\n              />\n            }\n          >\n            <GeneralRules />\n          </WaitingRoom>\n        </ViewOr>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseWordSelection;\n","import { GALERIA_DE_SONHOS_API } from 'services/adapters';\nimport { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\n\nexport function useOnSubmitWordAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: GALERIA_DE_SONHOS_API.submitAction,\n    actionName: 'submit-word',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(2),\n    successMessage: translate('Palavra enviada com sucesso', 'Word submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua palavra',\n      'Oops, the application failed to send your word'\n    ),\n  });\n\n  return (payload: SubmitWordPayload) => {\n    request({\n      action: 'SUBMIT_WORD',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitCardsAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: GALERIA_DE_SONHOS_API.submitAction,\n    actionName: 'submit-cards',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate('Cartas enviadas com sucesso', 'Cards submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar suas cartas',\n      'Oops, the application failed to send your cards'\n    ),\n  });\n\n  return (payload: SubmitCardsPayload) => {\n    request({\n      action: 'SUBMIT_CARDS',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnPlayCardAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: GALERIA_DE_SONHOS_API.submitAction,\n    actionName: 'play-card',\n    // onBeforeCall: () => setStep(3),\n    onError: () => setStep(2),\n    successMessage: translate('Carta enviada com sucesso', 'Card submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua carta',\n      'Oops, the application failed to send your card'\n    ),\n  });\n\n  return (payload: PlayCardPayload) => {\n    request({\n      action: 'PLAY_CARD',\n      ...payload,\n    });\n  };\n}\n","import { shuffle } from 'utils/helpers';\n\nexport const mockDreamSelection = (cards: GImageCard[]): string[] => {\n  const selectionOrder = [2, 11, 6, 8, 9, 3, 13];\n  const numberOfCards = shuffle([1, 2, 3, 3, 3, 4, 4, 5, 6])[0];\n  const selections = selectionOrder.slice(0, numberOfCards);\n  return selections.map((cardIndex) => cards[cardIndex].id);\n};\n","import clsx from 'clsx';\n// Design Resources\nimport { Button, Image } from 'antd';\nimport { UpCircleOutlined } from '@ant-design/icons';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { ImageBlurButton, ImageCard } from 'components/cards';\nimport { Translate } from 'components/language';\n\ntype SelectTableProps = {\n  table: GImageCard[];\n  onSelectCard: GenericFunction;\n  selectedCards: BooleanDictionary;\n};\n\nexport function SelectTable({ table, onSelectCard, selectedCards }: SelectTableProps) {\n  const cardWidth = useCardWidth(5, 8, 140, 150);\n  return (\n    <div className=\"g-table-container\">\n      <Image.PreviewGroup>\n        <ul className=\"g-table\">\n          {table.map((card) => {\n            const isSelected = selectedCards[card.id];\n\n            return (\n              <li key={`g-table-${card.id}`} className=\"g-table-item\" style={{ width: `${cardWidth + 8}px` }}>\n                <div className=\"center\">\n                  <ImageBlurButton cardId={card.id} />\n                </div>\n                <ImageCard\n                  imageId={card.id}\n                  cardWidth={cardWidth - 6} // 6 is the border total size\n                  className={clsx('g-table-image', isSelected && 'g-table-image--selected')}\n                />\n\n                <Button\n                  shape=\"round\"\n                  size=\"small\"\n                  ghost={!isSelected}\n                  className=\"g-table-item-button\"\n                  onClick={() => onSelectCard(card.id)}\n                >\n                  <UpCircleOutlined />\n                  {isSelected ? (\n                    <Translate pt=\"Desmarcar\" en=\"Deselect\" />\n                  ) : (\n                    <Translate pt=\"Selecionar\" en=\"Select\" />\n                  )}\n                  <UpCircleOutlined />\n                </Button>\n              </li>\n            );\n          })}\n        </ul>\n      </Image.PreviewGroup>\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useBooleanDictionary } from 'hooks/useBooleanDictionary';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockDreamSelection } from './utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { PopoverRule } from 'components/rules';\nimport { Step } from 'components/steps';\nimport { TextHighlight, Title } from 'components/text';\nimport { BotsRules, DreamSelectionExtendedRules, DreamSelectionRules } from './components/RulesBlobs';\nimport { SelectTable } from './components/SelectTable';\nimport { RobotOutlined } from '@ant-design/icons';\nimport { FixedMenuButton } from 'components/buttons';\n\nconst validateSelectedCards = (v: BooleanDictionary) => {\n  return Object.keys(v).length < 10;\n};\n\ntype StepDreamsSelectionProps = {\n  table: GImageCard[];\n  word: GWord;\n  onSubmitCards: GenericFunction;\n  botEnabled: boolean;\n} & AnnouncementProps;\n\nexport function StepDreamsSelection({\n  table,\n  word,\n  onSubmitCards,\n  botEnabled,\n  announcement,\n}: StepDreamsSelectionProps) {\n  const [selectedCards, onSelectCard] = useBooleanDictionary({}, validateSelectedCards);\n\n  const selectedCount = Object.keys(selectedCards).length;\n\n  useMock(() => {\n    onSubmitCards({ cardsIds: mockDreamSelection(table) });\n  }, []);\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title size=\"medium\">\n        <Translate pt=\"Visite sonhos relacionados a \" en=\"Visit dreams related to \" />\n        <TextHighlight>{word.text}</TextHighlight>\n      </Title>\n      <DreamSelectionRules contained />\n\n      <PopoverRule content={<DreamSelectionExtendedRules />} />\n\n      {botEnabled && (\n        <FixedMenuButton\n          type=\"popover\"\n          position={1}\n          icon={<RobotOutlined />}\n          content={<BotsRules />}\n          label={<Translate pt=\" Bots\" en=\" Bots\" />}\n          buttonProps={{\n            type: 'default',\n          }}\n        />\n      )}\n\n      <Space className=\"space-container\" align=\"center\">\n        <Button\n          type=\"primary\"\n          size=\"large\"\n          disabled={selectedCount < 1 || selectedCount > 10}\n          onClick={() => onSubmitCards({ cardsIds: Object.keys(selectedCards) })}\n        >\n          <Translate pt={`Visitar ${selectedCount} sonhos`} en={`Visit ${selectedCount} dreams`} />\n        </Button>\n      </Space>\n      <SelectTable table={table} onSelectCard={onSelectCard} selectedCards={selectedCards} />\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitCardsAPIRequest } from './utils/api-requests';\nimport { useUser } from 'hooks/useUser';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { DreamIcon } from 'icons/DreamIcon';\n// Components\nimport { ImageCardPreloadHand } from 'components/cards';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { DreamSelectionRules } from './components/RulesBlobs';\nimport { StepDreamsSelection } from './StepDreamsSelection';\nimport { Translate } from 'components/language';\n\nfunction PhaseDreamsSelections({ players, state, info, meta }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, setStep } = useStep();\n\n  const onSubmitCards = useOnSubmitCardsAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<DreamIcon />}\n      title={<Translate pt=\"Visite sonhos!\" en=\"Visit dreams!\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <DreamSelectionRules />\n      <ImageCardPreloadHand hand={state.table.map((entry: GImageCard) => entry.id)} />\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.GALERIA_DE_SONHOS.DREAMS_SELECTION}>\n      <StepSwitcher step={step} conditions={[!user.isReady, !user.isReady, !user.isReady]} players={players}>\n        {/* Step 0 */}\n        <StepDreamsSelection\n          table={state.table}\n          word={state.word}\n          onSubmitCards={onSubmitCards}\n          botEnabled={Boolean(meta.options?.withBots)}\n          announcement={announcement}\n        />\n\n        {/* Step 1 */}\n        <></>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseDreamsSelections;\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Image } from 'antd';\nimport { UpCircleOutlined } from '@ant-design/icons';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLoading } from 'hooks/useLoading';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Icons\nimport { StarIcon } from 'icons/StarIcon';\n// Components\nimport { ImageBlurButton, ImageCard, ImageCardBack } from 'components/cards';\nimport { Translate } from 'components/language';\n\ntype PlayTableProps = {\n  table: GImageCard[];\n  onPlayCard: GenericFunction;\n  userCards: PlainObject;\n  isPlayAvailable: boolean;\n};\n\nexport function PlayTable({ table, onPlayCard, userCards, isPlayAvailable }: PlayTableProps) {\n  const cardWidth = useCardWidth(5, 8, 140, 150);\n  const { isLoading } = useLoading();\n\n  return (\n    <Image.PreviewGroup>\n      <div className=\"g-table-container\">\n        <ul className=\"g-table\">\n          {table.map((card) => {\n            const isSelected = Boolean((userCards ?? {})[card.id]);\n            const userCardEntry = userCards[card.id] ?? {};\n            if (card.used) {\n              return (\n                <li\n                  key={`g-table-${card.id}`}\n                  className=\"g-table-item\"\n                  style={{ width: `${cardWidth + 8}px` }}\n                >\n                  <div className=\"center\">\n                    <ImageBlurButton cardId={card.id} />\n                  </div>\n                  <ImageCardBack\n                    cardWidth={cardWidth - 6}\n                    className={clsx(\n                      'g-table-image',\n                      isSelected && 'g-table-image--selected',\n                      getAnimationClass('zoomIn')\n                    )}\n                    previewImageId={card.id}\n                  />\n                  {userCardEntry.used && (\n                    <div className=\"g-star-points\">\n                      {userCardEntry.score === 3 && <StarIcon className=\"g-star g-star--super-spark\" />}\n                      {userCardEntry.score > 1 && <StarIcon className=\"g-star g-star--spark\" />}\n                      {userCardEntry.score > 0 && <StarIcon className=\"g-star g-star--spark\" />}\n                    </div>\n                  )}\n                </li>\n              );\n            }\n\n            return (\n              <li key={`g-table-${card.id}`} className=\"g-table-item\" style={{ width: `${cardWidth + 8}px` }}>\n                <div className=\"center\">\n                  <ImageBlurButton cardId={card.id} />\n                </div>\n                <ImageCard\n                  imageId={card.id}\n                  cardWidth={cardWidth - 6} // 6 is the border total size\n                  className={clsx(\n                    'g-table-image',\n                    isSelected && 'g-table-image--selected',\n                    getAnimationClass('zoomIn')\n                  )}\n                />\n                {isPlayAvailable && userCards[card.id] && (\n                  <Button\n                    shape=\"round\"\n                    size=\"small\"\n                    ghost\n                    className=\"g-table-item-button\"\n                    onClick={() => onPlayCard(card.id)}\n                    disabled={isLoading}\n                  >\n                    <UpCircleOutlined />\n                    <Translate pt=\"Selecionar\" en=\"Select\" />\n                    <UpCircleOutlined />\n                  </Button>\n                )}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </Image.PreviewGroup>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Tooltip } from 'antd';\n// Helpers\nimport { getAnimationClass, getAvatarColorById, sortPlayers } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { useMemo } from 'react';\n\ntype PlayersDreamsCountProps = {\n  players: GamePlayers;\n  playerInNightmareId?: PlayerId;\n};\n\nexport function PlayersDreamsCount({ players, playerInNightmareId }: PlayersDreamsCountProps) {\n  const sortedPlayers = useMemo(() => sortPlayers(players), [players]);\n\n  return (\n    <div className=\"g-players-dreams-count\">\n      <header className=\"g-players-dreams-count__title\">\n        <Translate en=\"Player Dream Count\" pt=\"Sonhos por Jogador\" />\n      </header>\n      <ul className=\"g-players-dreams-count__players\">\n        {sortedPlayers.map((player) => {\n          const cards: GCardInHand[] = Object.values(player.cards);\n          const cardsLeft = cards.filter((card) => !card.used);\n          const isPlayerInNightmare = player.id === playerInNightmareId;\n          const showTooltip = isPlayerInNightmare && !player.fallen;\n\n          return (\n            <span\n              key={`player-dream-count-${player.id}`}\n              className={clsx(\n                'g-players-dreams-count__player',\n                isPlayerInNightmare &&\n                  !player.fallen &&\n                  `g-players-dreams-count__player--nightmare ${getAnimationClass(\n                    'pulse',\n                    undefined,\n                    'faster',\n                    false,\n                    3\n                  )}`\n              )}\n              style={{ backgroundColor: getAvatarColorById(player.avatarId) }}\n            >\n              <Tooltip\n                title={\n                  showTooltip ? (\n                    <div className={getAnimationClass('tada', undefined, 'fast', true)}>\n                      {player.name} <Translate pt=\"tá em apuros!\" en=\"is in danger\" />\n                    </div>\n                  ) : undefined\n                }\n                color=\"black\"\n                placement=\"bottom\"\n                open={showTooltip}\n              >\n                <Avatar shape=\"square\" id={player.avatarId} alt={player.name} />\n\n                <div\n                  className={clsx(\n                    'g-players-dreams-count__count',\n                    player.fallen && 'g-players-dreams-count__count--fallen'\n                  )}\n                >\n                  {cardsLeft.length}\n                </div>\n              </Tooltip>\n            </span>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\n// Ant Design Resources\nimport { message } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { BotsRules, CardPlayRules } from './components/RulesBlobs';\nimport { PlayTable } from './components/PlayTable';\nimport { messageContent } from 'components/pop-up';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { Card } from 'components/cards';\nimport { AvatarName } from 'components/avatars';\nimport { PopoverRule } from 'components/rules';\nimport { TurnOrder } from 'components/players';\nimport { PlayersDreamsCount } from './components/PlayersDreamsCount';\nimport { FixedMenuButton } from 'components/buttons';\nimport { RobotOutlined } from '@ant-design/icons';\n\ntype StepDreamsSelectionProps = {\n  table: GImageCard[];\n  word: GWord;\n  onPlayCard: GenericFunction;\n  user: GamePlayer;\n  activePlayer: GamePlayer;\n  isActivePlayer: boolean;\n  isLoading?: boolean;\n  players: GamePlayers;\n  gameOrder: GameOrder;\n  setLastTurnCount: GenericFunction;\n  playerInNightmareId?: PlayerId;\n  botEnabled?: boolean;\n};\n\nexport function StepPlayDream({\n  table,\n  word,\n  onPlayCard,\n  user,\n  activePlayer,\n  isActivePlayer,\n  isLoading,\n  players,\n  gameOrder,\n  setLastTurnCount,\n  playerInNightmareId,\n  botEnabled = false,\n}: StepDreamsSelectionProps) {\n  useTemporarilyHidePlayersBar();\n  const { translate } = useLanguage();\n  const [showedMessage, setShowedMessage] = useState(false);\n\n  useEffect(() => {\n    setLastTurnCount(activePlayer.id);\n  });\n\n  useEffect(() => {\n    if (isActivePlayer && !isLoading && !showedMessage) {\n      message.info(\n        messageContent(\n          translate('Você controla!', 'You control!'),\n          translate(\n            'Selecione a carta-sonho que você acha que vai dar match com pelo menos um jogador!',\n            'Select the dream card you think will match at least one player'\n          ),\n          activePlayer.id,\n          3\n        )\n      );\n      setShowedMessage(true);\n    }\n  }, [isActivePlayer, activePlayer.id, translate, isLoading, showedMessage]);\n\n  return (\n    <Step fullWidth>\n      <Title size=\"small\">\n        <Translate pt=\"Bingo dos Sonhos\" en=\"Dream Bingo\" />\n      </Title>\n      <Card header={translate('Tema', 'Theme')} color=\"purple\">\n        {word.text}\n      </Card>\n\n      <PlayersDreamsCount players={players} playerInNightmareId={playerInNightmareId} />\n\n      {Boolean(user.fallen) && (\n        <Instruction contained>\n          <Translate\n            pt=\"Você estava em apuros e não conseguiu dar match em uma de suas cartas, então perdeu um ponto por carta que você deu match.\"\n            en=\"You were in danger and didn't get a match in one of your cards. You lost 1 point per scored card.\"\n          />\n        </Instruction>\n      )}\n\n      <Instruction contained>\n        {isActivePlayer ? (\n          <Translate\n            pt=\"Selecione a carta-sonho que você acha que vai dar match com pelo menos um jogador!\"\n            en=\"Select the dream card you think will match at least one player\"\n          />\n        ) : (\n          <Translate\n            pt={\n              <>\n                <AvatarName player={activePlayer} className={getAnimationClass('flash')} /> está selecionando\n                um sonho.\n              </>\n            }\n            en={\n              <>\n                <AvatarName player={activePlayer} className={getAnimationClass('flash')} /> is selecting a\n                dream.\n              </>\n            }\n          />\n        )}\n      </Instruction>\n\n      <PopoverRule content={<CardPlayRules />} />\n\n      {botEnabled && (\n        <FixedMenuButton\n          type=\"popover\"\n          position={1}\n          icon={<RobotOutlined />}\n          content={<BotsRules />}\n          label={<Translate pt=\" Bots\" en=\" Bots\" />}\n          buttonProps={{\n            type: 'default',\n          }}\n        />\n      )}\n\n      <PlayTable\n        table={table}\n        onPlayCard={(cardId: string) => onPlayCard({ cardId })}\n        userCards={user.cards ?? {}}\n        isPlayAvailable={isActivePlayer}\n      />\n\n      <TurnOrder players={players} order={gameOrder} activePlayerId={activePlayer.id} />\n    </Step>\n  );\n}\n","// Components\nimport { AvatarName } from 'components/avatars';\n\ntype ListPlayersProps = {\n  listPlayers: GamePlayer[];\n  className: string;\n};\n\nexport function ListPlayers({ listPlayers, className }: ListPlayersProps) {\n  return (\n    <ul className={className}>\n      {listPlayers.map((player) => (\n        <li key={`${className}-${player.id}`}>\n          <AvatarName player={player} addressUser />\n        </li>\n      ))}\n    </ul>\n  );\n}\n","// Ant Design\n// Utils\nimport { pluralize } from 'utils/helpers';\n// Components\nimport { AvatarName } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { StarPoints } from 'components/points';\nimport { PlayersHighlight } from 'components/metrics/PlayersHighlight';\nimport { PlayerHighlight } from 'components/metrics/PlayerHighlight';\nimport { PointsHighlight } from 'components/metrics/PointsHighlight';\n\ntype MatchCountProps = {\n  matchCount: number;\n  lastActivePlayer: GamePlayer;\n  playerInNightmare?: GamePlayer;\n};\n\nexport function MatchCount({ matchCount, lastActivePlayer, playerInNightmare }: MatchCountProps) {\n  const isSpark = matchCount > 0;\n  const isSuperSpark = matchCount === 1;\n\n  const isPlayerInNightmare = playerInNightmare?.id === lastActivePlayer.id;\n\n  return (\n    <div>\n      {isSpark ? (\n        <Translate\n          pt={\n            <p>\n              E encontrou{' '}\n              {matchCount > 1 ? (\n                <PlayersHighlight>{matchCount}</PlayersHighlight>\n              ) : (\n                <PlayerHighlight>{matchCount}</PlayerHighlight>\n              )}{' '}\n              {pluralize(matchCount, 'jogador')} lá!\n              <br />\n              {isSuperSpark && 'Brilho total!'}\n              <StarPoints keyPrefix=\"dream-result\" quantity={isSuperSpark ? 3 : 2} />\n            </p>\n          }\n          en={\n            <p>\n              And met{' '}\n              {matchCount > 1 ? (\n                <PlayersHighlight>{matchCount}</PlayersHighlight>\n              ) : (\n                <PlayerHighlight>{matchCount}</PlayerHighlight>\n              )}{' '}\n              {pluralize(matchCount, 'player')} there!\n              <br />\n              {isSuperSpark && 'Super Spark!'}\n              <StarPoints keyPrefix=\"dream-result\" quantity={isSuperSpark ? 3 : 2} />\n            </p>\n          }\n        />\n      ) : (\n        <Translate\n          pt={\n            <>\n              <h2 className=\"g-announce-title\">Vixi...</h2>\n              Não sei o que dizer... Ninguém visitou esse sonho e{' '}\n              <AvatarName player={lastActivePlayer} size=\"small\" addressUser /> está fora da rodada{' '}\n              <small>(as cartas restantes ainda contarão pontos para outros jogadores)</small>.{' '}\n              {isPlayerInNightmare && (\n                <>\n                  {' '}\n                  Para piorar, <AvatarName player={lastActivePlayer} size=\"small\" addressUser /> vai perder{' '}\n                  <PointsHighlight type=\"negative\">1</PointsHighlight>\n                  ponto por sonho usado até então.\n                </>\n              )}\n            </>\n          }\n          en={\n            <>\n              <h2 className=\"g-announce-title\">Oops...</h2>I don't know what to say... no one has visited this\n              dream and <AvatarName player={lastActivePlayer} size=\"small\" addressUser /> is/are out of the\n              round <small>(the remaining cards will still count towards scoring for other players)</small>.\n              {isPlayerInNightmare && (\n                <>\n                  {' '}\n                  To make this worse, <AvatarName player={lastActivePlayer} size=\"small\" addressUser /> will\n                  lose <PointsHighlight type=\"negative\">1</PointsHighlight> point for each scored dream.\n                </>\n              )}\n            </>\n          }\n        />\n      )}\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Alert, Divider, Space } from 'antd';\nimport { useMemo } from 'react';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Constants\nimport { GO_TO_CARD_PLAY_STEP } from './utils/constants';\n// Helpers\nimport { getAnimationClass, getAvatarColorById } from 'utils/helpers';\n// Components\nimport { Step } from 'components/steps';\nimport { AvatarName } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { ImageCard } from 'components/cards';\nimport { TimedButton } from 'components/buttons';\nimport { VIPNextPhaseButton } from 'components/vip';\nimport { ListPlayers } from './components/ListPlayers';\nimport { MatchCount } from './components/MatchCount';\nimport { TurnOrder } from 'components/players';\nimport clsx from 'clsx';\n\ntype MatchingPlayersReduceResult = {\n  matchingPlayers: GamePlayer[];\n  fallenMatchingPlayers: GamePlayer[];\n};\n\ntype StepAnnounceDreamProps = {\n  latest: LatestInfo;\n  lastActivePlayer: GamePlayer;\n  activePlayer: GamePlayer;\n  playerInNightmare?: GamePlayer;\n  setStep: GenericFunction;\n  players: GamePlayers;\n  gameOrder: TurnOrder;\n};\n\nexport function StepAnnounceDream({\n  latest,\n  lastActivePlayer,\n  activePlayer,\n  setStep,\n  players,\n  playerInNightmare,\n  gameOrder,\n}: StepAnnounceDreamProps) {\n  useTemporarilyHidePlayersBar();\n  const cardWidth = useCardWidth(5, 8, 140, 150);\n\n  const { matchingPlayers, fallenMatchingPlayers } = useMemo(\n    () =>\n      (latest?.matchedPlayers ?? []).reduce(\n        (acc: MatchingPlayersReduceResult, playerId) => {\n          const player = players[playerId];\n          if (player?.fallen) {\n            if (lastActivePlayer.id !== playerId) {\n              acc.fallenMatchingPlayers.push(player);\n            }\n          } else {\n            acc.matchingPlayers.push(player);\n          }\n          return acc;\n        },\n        { matchingPlayers: [], fallenMatchingPlayers: [] }\n      ),\n    [latest?.matchedPlayers, players, lastActivePlayer.id]\n  );\n\n  const completedPlayers = Object.values(players).filter((player) => player?.skip || player?.fallen);\n\n  return (\n    <Step fullWidth>\n      <div className={clsx('g-dream-result', getAnimationClass('fadeIn', 0, 'slow'))}>\n        <header\n          className=\"g-dream-result__header\"\n          style={{ backgroundColor: getAvatarColorById(lastActivePlayer.avatarId) }}\n        >\n          <AvatarName player={lastActivePlayer} size=\"large\" />\n          <Translate pt=\"escolheu visitar o sonho\" en=\"chose to visit the dream\" />:\n        </header>\n        <div className=\"g-dream-result__card\">\n          <ImageCard imageId={latest.cardId} cardWidth={cardWidth} />\n        </div>\n        <div className=\"g-dream-result__match-result\">\n          <MatchCount\n            matchCount={latest.matchCount}\n            lastActivePlayer={lastActivePlayer}\n            playerInNightmare={playerInNightmare}\n          />\n        </div>\n        <div className=\"g-dream-result__matching-players\">\n          {matchingPlayers.length > 0 && (\n            <>\n              <p>\n                <Translate pt=\"Ganharam pontos:\" en=\"Scored points:\" />\n              </p>\n\n              <ListPlayers listPlayers={matchingPlayers} className=\"g-dream-result__matched-players-list\" />\n            </>\n          )}\n        </div>\n        <div className=\"g-dream-result__fallen-matching-players\">\n          {fallenMatchingPlayers.length > 0 && (\n            <>\n              <p className=\"g-dream-result__label\">\n                <Translate\n                  pt=\"Ganhariam pontos, mas já estão eliminados:\"\n                  en=\"Matched by are out of the round:\"\n                />\n              </p>\n\n              <ListPlayers\n                listPlayers={fallenMatchingPlayers}\n                className=\"g-dream-result__matched-players-list fallen\"\n              />\n            </>\n          )}\n        </div>\n        <footer className=\"g-dream-result__footer\">\n          {latest.isPhaseOver || latest.cardsLeft === 0 ? (\n            <Space align=\"center\" className=\"full-width padding\" direction=\"vertical\">\n              <p className=\"center\">\n                <Translate\n                  pt=\"Todos jogadores já usaram seus sonhos ou não deram match com ninguém. Vamos para a próxima rodada?\"\n                  en=\"All players have used their dreams or didn't match anybody. Ready for the next round?\"\n                />\n              </p>\n              {gameOrder.length === 1 && (\n                <Alert\n                  className=\"center\"\n                  type=\"error\"\n                  message={\n                    playerInNightmare?.id === gameOrder[0] ? (\n                      <Translate\n                        pt={\n                          <>\n                            <AvatarName player={playerInNightmare} /> foi ganancioso(a) não conseguiu usar\n                            todos os sonhos.\n                          </>\n                        }\n                        en={\n                          <>\n                            <AvatarName player={playerInNightmare} /> was too greedy and wasn't able to use of\n                            all their dreams.\n                          </>\n                        }\n                      />\n                    ) : (\n                      <Translate\n                        pt={\n                          <>\n                            Não há mais jogadores pra dar match com{' '}\n                            <AvatarName player={players[gameOrder[0]]} />\n                          </>\n                        }\n                        en={\n                          <>\n                            There are no players to match anymore with{' '}\n                            <AvatarName player={players[gameOrder[0]]} />\n                          </>\n                        }\n                      />\n                    )\n                  }\n                />\n              )}\n            </Space>\n          ) : (\n            <Space align=\"center\" className=\"full-width padding\" direction=\"vertical\">\n              <p className=\"center\">\n                <Translate pt=\"Próximo jogador:\" en=\"Next player:\" />\n                <AvatarName player={activePlayer} addressUser />\n              </p>\n\n              <TimedButton\n                type=\"primary\"\n                duration={12}\n                disabled\n                onExpire={() => setStep(GO_TO_CARD_PLAY_STEP)}\n              >\n                <Translate pt=\"Continuando em...\" en=\"Continuing in...\" />\n              </TimedButton>\n            </Space>\n          )}\n          {completedPlayers.length > 0 && (\n            <>\n              <Divider />\n              <div className=\"g-dream-result__completed-players\">\n                <p className=\"g-dream-result__label center\">\n                  <Translate pt=\"Jogadores fora do rodízio\" en=\"Players out of rotation\" />:\n                </p>\n                <ListPlayers\n                  listPlayers={completedPlayers}\n                  className=\"g-dream-result__matched-players-list g-dream-result__matched-players-list--centered\"\n                />\n              </div>\n            </>\n          )}\n        </footer>\n      </div>\n\n      {gameOrder.length > 1 && (\n        <TurnOrder players={players} order={gameOrder} activePlayerId={activePlayer.id} />\n      )}\n\n      {(latest.isPhaseOver || latest.cardsLeft === 0) && (\n        <VIPNextPhaseButton autoTriggerTime={15}>Ranking</VIPNextPhaseButton>\n      )}\n    </Step>\n  );\n}\n","export const GO_TO_PLAYER_WITH_NIGHTMARE_STEP = 1;\nexport const GO_TO_SEE_CARD_STEP = 3;\nexport const GO_TO_CARD_PLAY_STEP = 5;\n","import { useEffect, useState } from 'react';\n// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\nimport { useStep } from 'hooks/useStep';\nimport { useLoading } from 'hooks/useLoading';\nimport { useOnPlayCardAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\nimport {\n  GO_TO_CARD_PLAY_STEP,\n  GO_TO_PLAYER_WITH_NIGHTMARE_STEP,\n  GO_TO_SEE_CARD_STEP,\n} from './utils/constants';\n// Icons\nimport { DoorSignIcon } from 'icons/DoorSignIcon';\nimport { NightmareIcon } from 'icons/NightmareIcon';\n// Components\nimport { PhaseAnnouncement, PhaseContainer, PhaseTimerReset } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Translate } from 'components/language';\nimport { AvatarName } from 'components/avatars';\nimport { Instruction } from 'components/text';\nimport { CardPlayRules } from './components/RulesBlobs';\nimport { StepPlayDream } from './StepPlayDream';\nimport { StepAnnounceDream } from './StepAnnounceDream';\nimport { PointsHighlight } from 'components/metrics/PointsHighlight';\n\nfunction PhaseCardPlay({ players, state, info, meta }: PhaseProps) {\n  const { isLoading } = useLoading();\n  const { step, goToNextStep, setStep } = useStep();\n  const user = useUser(players, state);\n\n  const [activePlayer, isActivePlayer] = useWhichPlayerIsThe('activePlayerId', state, players);\n  const [lastActivePlayer] = useWhichPlayerIsThe('lastActivePlayerId', state, players);\n  const [playerInNightmare] = useWhichPlayerIsThe('playerInNightmareId', state, players);\n\n  const [lastTurnCount, setLastTurnCount] = useState('');\n\n  const onPlayCard = useOnPlayCardAPIRequest(setStep);\n\n  useEffect(() => {\n    if (lastTurnCount && state.turnCount !== lastTurnCount) {\n      setStep(GO_TO_SEE_CARD_STEP);\n    }\n  }, [state.turnCount]); // eslint-disable-line\n\n  useEffect(() => {\n    if (!state.activePlayerId) {\n      setStep(GO_TO_SEE_CARD_STEP);\n    }\n  }, [state.activePlayerId, setStep]);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.GALERIA_DE_SONHOS.CARD_PLAY}>\n      <StepSwitcher step={step} conditions={[!user.isReady, !user.isReady, !user.isReady]} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<DoorSignIcon />}\n          title={<Translate pt=\"Hora do Bingo dos Sonhos!\" en=\"Time for the Dream Bingo!\" />}\n          onClose={() =>\n            setStep(playerInNightmare.id ? GO_TO_PLAYER_WITH_NIGHTMARE_STEP : GO_TO_CARD_PLAY_STEP)\n          }\n          duration={state.round.current < 2 ? 20 : 5}\n          unskippable\n          type=\"block\"\n        >\n          <CardPlayRules />\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <PhaseTimerReset goToNextStep={goToNextStep} />\n\n        {/* Step 2 */}\n        <PhaseAnnouncement\n          icon={<NightmareIcon />}\n          animationType=\"tada\"\n          title={\n            <Translate\n              pt={\n                <>\n                  <AvatarName player={playerInNightmare} size=\"large\" addressUser /> está em apuros!\n                </>\n              }\n              en={\n                <>\n                  <AvatarName player={playerInNightmare} size=\"large\" addressUser /> is in danger!\n                </>\n              }\n            />\n          }\n          onClose={() => setStep(GO_TO_CARD_PLAY_STEP)}\n          currentRound={state?.round?.current}\n          duration={state.round.current < 3 ? 10 : 5}\n          unskippable\n          type=\"block\"\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  Quando um jogador sozinho selecionou o maior número de sonhos, ele é considerado estar em um\n                  pesadelo!\n                  <br />\n                  Se ele não conseguir achar outro jogador que marcou o mesmo sonho para cada uma das cartas\n                  selecionadas, ele perde <PointsHighlight type=\"negative\">1</PointsHighlight> ponto por carta\n                  que você ganhou ponto.\n                </>\n              }\n              en={\n                <>\n                  When a player alone selected the most dream cards they are considered to be in a nightmare!\n                  <br />\n                  If they are not able to match every single dream, they will lose{' '}\n                  <PointsHighlight type=\"negative\">1</PointsHighlight> point per card you previously scored.\n                </>\n              }\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 3 */}\n        <PhaseTimerReset goToNextStep={goToNextStep} />\n\n        {/* Step 4 */}\n        <StepAnnounceDream\n          latest={state.latest}\n          lastActivePlayer={lastActivePlayer}\n          setStep={setStep}\n          players={players}\n          activePlayer={activePlayer}\n          playerInNightmare={playerInNightmare}\n          gameOrder={state.gameOrder}\n        />\n\n        {/* Step 5 */}\n        <PhaseTimerReset goToNextStep={goToNextStep} />\n\n        {/* Step 6 */}\n        <StepPlayDream\n          table={state.table}\n          word={state.word}\n          onPlayCard={onPlayCard}\n          user={user}\n          activePlayer={activePlayer}\n          isActivePlayer={isActivePlayer}\n          players={players}\n          gameOrder={state.gameOrder}\n          isLoading={isLoading}\n          setLastTurnCount={setLastTurnCount}\n          playerInNightmareId={state.playerInNightmareId}\n          botEnabled={Boolean(meta?.options?.withBots)}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseCardPlay;\n","// State & Hooks\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { RankIcon } from 'icons/RankIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\nimport { StepRankingWrapper } from 'components/ranking';\nimport { Instruction, RoundsLeftInstruction } from 'components/text';\nimport { VIPNextPhaseButton } from 'components/vip';\n\nfunction PhaseResolution({ players, state, info }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, goToNextStep } = useStep();\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.GALERIA_DE_SONHOS.RESOLUTION}>\n      <StepSwitcher\n        step={step}\n        conditions={[!user.isReady, !user.isReady, !user.isReady]}\n        players={players}\n        waitingRoomInstructionType=\"SERVER\"\n      >\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<RankIcon />}\n          title={<Translate pt=\"Ranking\" en=\"Ranking\" />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          type=\"block\"\n        >\n          <Instruction>\n            <Translate pt=\"E quem deu mais matches foi...\" en=\"And who matched the most was...\" />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepRankingWrapper\n          players={players}\n          ranking={state.ranking}\n          gainedPointsDescriptions={[\n            <Translate pt=\"Pontos por encontrar só um jogador\" en=\"Points for matching only 1 player\" />,\n            <Translate\n              pt=\"Pontos por encontrar mais de um jogador\"\n              en=\"Points for matching with more players\"\n            />,\n            <Translate\n              pt=\"Pontos perdidos por não ter dado match e estar em um pesadelo\"\n              en=\"Points lost for not matching any player while in a nightmare\"\n            />,\n          ]}\n        >\n          <RoundsLeftInstruction round={state.round} />\n          <VIPNextPhaseButton round={state.round} />\n        </StepRankingWrapper>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseResolution;\n","import { orderBy } from 'lodash';\n// Ant Design Resources\nimport { Avatar, Divider } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { ImageCard } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\n\ntype BestMatchesProps = {\n  bestMatches: GImageCardMatch[];\n};\n\nexport function BestMatches({ bestMatches }: BestMatchesProps) {\n  const cardWidth = useCardWidth(8, 8, 100, 150);\n\n  return (\n    <Step>\n      <Divider />\n      <Title size=\"x-small\" level={3}>\n        <Translate pt=\"Sonhos mais visitados\" en=\"Most visited dreams\" />\n      </Title>\n\n      <ul className=\"g-best-matches\">\n        {orderBy(bestMatches, 'matchedPlayers.length', 'desc').map((entry, index) => {\n          return (\n            <div key={`${entry.id}-${index}`} className=\"g-best-matches__entry\">\n              <div className=\"g-best-matches__label\">\n                <Avatar size=\"small\">{entry.matchedPlayers.length}</Avatar>\n                <span>{entry.text}</span>\n              </div>\n              <ImageCard\n                imageId={entry.id}\n                cardWidth={cardWidth - 6} // 6 is the border total size\n              />\n            </div>\n          );\n        })}\n      </ul>\n    </Step>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Image } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Helpers\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { ImageBlurButton, ImageCard } from 'components/cards';\n\ntype TableProps = {\n  table: GImageCard[];\n};\n\nexport function GameOverTable({ table }: TableProps) {\n  const cardWidth = useCardWidth(12, 8, 60, 100);\n  return (\n    <Image.PreviewGroup>\n      <ul className=\"g-table g-table--game-over\">\n        {table.map((card) => {\n          return (\n            <li key={`g-table-${card.id}`} className=\"g-table-item\" style={{ width: `${cardWidth + 8}px` }}>\n              <ImageBlurButton cardId={card.id} />\n              <ImageCard\n                imageId={card.id}\n                cardWidth={cardWidth - 6} // 6 is the border total size\n                className={clsx('g-table-image', getAnimationClass('zoomIn'))}\n              />\n            </li>\n          );\n        })}\n      </ul>\n    </Image.PreviewGroup>\n  );\n}\n","// Utils\nimport { achievementsReference } from './utils/achievements';\n// Icons\nimport { LadderIcon } from 'icons/LadderIcon';\n// Components\nimport { GameOverWrapper } from 'components/game-over';\nimport { Achievements } from 'components/general/Achievements';\nimport { BestMatches } from './components/BestMatches';\nimport { GameOverTable } from './components/GameOverTable';\n\nfunction PhaseGameOver({ state, info, players }: PhaseProps) {\n  return (\n    <GameOverWrapper info={info} state={state} players={players} announcementIcon={<LadderIcon />}>\n      <Achievements players={players} achievements={state.achievements} reference={achievementsReference} />\n      <BestMatches bestMatches={state.bestMatches} />\n      <GameOverTable table={state.table} />\n    </GameOverWrapper>\n  );\n}\n\nexport default PhaseGameOver;\n","import { ConfigProvider } from 'antd';\n// Constants\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport PhaseWordSelection from './PhaseWordSelection';\nimport PhaseDreamsSelection from './PhaseDreamsSelections';\nimport PhaseCardPlay from './PhaseCardPlay';\nimport PhaseResolution from './PhaseResolution';\nimport PhaseGameOver from './PhaseGameOver';\n// Sass\nimport './galeria-de-sonhos.scss';\n\nfunction getActiveComponent(phase: string) {\n  switch (phase) {\n    case PHASES.DEFAULT.LOBBY:\n      return PhaseLobby;\n    case PHASES.DEFAULT.RULES:\n      return PhaseRules;\n    case PHASES.DEFAULT.SETUP:\n      return PhaseSetup;\n    case PHASES.GALERIA_DE_SONHOS.WORD_SELECTION:\n      return PhaseWordSelection;\n    case PHASES.GALERIA_DE_SONHOS.DREAMS_SELECTION:\n      return PhaseDreamsSelection;\n    case PHASES.GALERIA_DE_SONHOS.CARD_PLAY:\n      return PhaseCardPlay;\n    case PHASES.GALERIA_DE_SONHOS.RESOLUTION:\n      return PhaseResolution;\n    case PHASES.DEFAULT.GAME_OVER:\n      return PhaseGameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionGaleriaDeSonhos() {\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorPrimary: THEME_COLORS.PLUMP_PURPLE,\n          colorLink: THEME_COLORS.PLUMP_PURPLE,\n        },\n      }}\n    >\n      <Session gameCollection={GAME_COLLECTION.GALERIA_DE_SONHOS} getActiveComponent={getActiveComponent} />\n    </ConfigProvider>\n  );\n}\n\nexport default SessionGaleriaDeSonhos;\n","export const achievementsReference: AchievementReference = {\n  MOST_MATCHES: {\n    icon: 'double-arrow-up',\n    title: {\n      pt: 'Mais Matches',\n      en: 'Most Matches',\n    },\n    description: {\n      pt: 'Deu match com o mais jogadores em cartas sonhos',\n      en: 'Match dream cards with other players the most',\n    },\n  },\n  FEWEST_MATCHES: {\n    icon: 'double-arrow-down',\n    title: {\n      pt: 'Menos Matches',\n      en: 'Fewest Matches',\n    },\n    description: {\n      pt: 'Deu match com o menos jogadores em cartas sonhos',\n      en: 'Match dream cards with other players the fewest',\n    },\n  },\n  MOST_FULL_MATCHES: {\n    icon: 'heart',\n    title: {\n      pt: 'Mais Match Completo',\n      en: 'Most Full Matches',\n    },\n    description: {\n      pt: 'Deu match com todos os sonhos em uma rodada mais vezes',\n      en: 'Match all dream cards in a round most times',\n    },\n  },\n  MOST_VISITS: {\n    icon: 'sand-timer',\n    title: {\n      pt: 'Melhor Visitante',\n      en: 'Best Visitor',\n    },\n    description: {\n      pt: 'Visitou o maior número de cartas-sonhos durante o jogo',\n      en: 'Visited the most dream cards during the game',\n    },\n  },\n  LEAST_ADVENTUROUS: {\n    icon: 'arrow-narrow',\n    title: {\n      pt: 'Mais Comedido',\n      en: 'Least Adventurous',\n    },\n    description: {\n      pt: 'Visitou o menor número de cartas-sonhos durante o jogo',\n      en: 'Visited the fewest dream cards during the game',\n    },\n  },\n  MOST_ADVENTUROUS: {\n    icon: 'face-scared',\n    title: {\n      pt: 'Mais Aventureiro',\n      en: 'Most Adventurous',\n    },\n    description: {\n      pt: 'Esteve em pesadelos mais vezes',\n      en: 'Was in a nightmare more times',\n    },\n  },\n  MOST_PAIRS: {\n    icon: 'puzzle',\n    title: {\n      pt: 'Mais Brilhante',\n      en: 'Brightest',\n    },\n    description: {\n      pt: 'Encontrou somente um outro jogador mais vezes',\n      en: 'Found only one other player most times',\n    },\n  },\n  MOST_OUT_OF_THE_BOX: {\n    icon: 'box',\n    title: {\n      pt: 'Mais Diferentão',\n      en: 'Out of the Box Thinker',\n    },\n    description: {\n      pt: 'Teve mais cartas sem dar match no total',\n      en: 'Had the most cards without a match throughout the game',\n    },\n  },\n  MOST_LONELY: {\n    icon: 'face-tired',\n    title: {\n      pt: 'Mais Solitário',\n      en: 'Loneliest',\n    },\n    description: {\n      pt: 'Não deu mete nenhum mais vezes',\n      en: 'Got zero matches in a round more times',\n    },\n  },\n  POOREST_CHOICES: {\n    icon: 'face-oops',\n    title: {\n      pt: 'Mais Burro',\n      en: 'Poorest Choices',\n    },\n    description: {\n      pt: 'Foi eliminado mais vezes',\n      en: 'Was eliminated the most',\n    },\n  },\n  SMARTEST_CHOICES: {\n    icon: 'brain',\n    title: {\n      pt: 'Mais Esperto',\n      en: 'Smartest Choices',\n    },\n    description: {\n      pt: 'Foi eliminado menos vezes',\n      en: 'Was eliminated the least',\n    },\n  },\n};\n\nexport default achievementsReference;\n","import { useState } from 'react';\n\nexport function useBooleanDictionary(\n  /**\n   * The initial state, usually an empty object\n   */\n  initialState: BooleanDictionary,\n  // Confirm if entry can be added to the dictionary\n  validation?: BooleanFunction\n): [BooleanDictionary, GenericFunction] {\n  const [dict, setDict] = useState(initialState);\n\n  const updateDict = (key: string) => {\n    const isValid = !validation || validation(dict);\n    if (!dict[key] && isValid) {\n      setDict((s) => ({\n        ...s,\n        [key]: true,\n      }));\n    } else {\n      const dictCopy = { ...dict };\n      delete dictCopy[key];\n      setDict(dictCopy);\n    }\n  };\n\n  return [dict, updateDict];\n}\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\n/**\n * Gets player that is assigned to a property in the state\n * @param propertyName\n * @param state\n * @param players\n * @returns a player instance, a boolean if the player is assigned to given property\n */\nexport function useWhichPlayerIsThe(\n  propertyName = 'activePlayer',\n  state: PlainObject = {},\n  players: GamePlayers = {}\n): [GamePlayer, boolean] {\n  const [userId] = useGlobalState('userId');\n  const [activePlayer, setActivePlayer] = useState<GamePlayer>({});\n  const [isUser, setIsUser] = useState(false);\n\n  // Determine if user is active as the guesser, the clue giver, the psychic, the storyteller, etc\n  useEffect(() => {\n    const activePlayer = state?.[propertyName];\n    setActivePlayer(players?.[activePlayer] ?? {});\n    setIsUser(state?.[propertyName] === userId);\n  }, [players, propertyName, state, userId]);\n\n  return [activePlayer, isUser];\n}\n","export function DreamIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        d=\"M505 151.9c0-35.8-29-64.8-64.8-64.8-2.2 0-4.5.1-6.7.3C412 41.1 340.7 7 256 7S100 41 78.5 87.4c-2.2-.2-4.4-.3-6.7-.3C36 87 7 116 7 151.8c0 23.3 12.5 44.8 32.8 56.4-21.3 28.8-15.2 69.3 13.6 90.6 18.7 13.8 43.3 16.6 64.5 7.3 21.4 27.7 57.4 40 91.3 31.1 22.7 25.9 62 28.6 87.9 5.9 2.1-1.8 4.1-3.8 5.9-5.9 33.9 8.9 69.8-3.4 91.3-31.1 32.8 14.4 71-.5 85.3-33.3 9.3-21.3 6.6-45.9-7.3-64.6 20.2-11.5 32.7-33 32.7-56.3z\"\n        fill=\"#DF8EEF\"\n      ></path>\n      <circle cx=\"38.8\" cy=\"473.2\" r=\"31.8\" fill=\"#DF8EEF\"></circle>\n      <circle cx=\"113.6\" cy=\"398.4\" r=\"44\" fill=\"#DF8EEF\"></circle>\n      <path\n        d=\"M281.1 215.4c-51.7 0-93.5-41.9-93.5-93.5 0-9.2 1.3-18.3 4-27-39.9 32.8-45.6 91.8-12.7 131.6s91.8 45.6 131.6 12.7c14.2-11.7 24.7-27.4 30.1-45.1-16.8 13.8-37.8 21.4-59.5 21.3z\"\n        fill=\"#FFE72C\"\n      ></path>\n      <path\n        d=\"M284.8 160.3l-27.7 9.8.8-29.4-17.9-23.2 28.2-8.3L284.8 85l16.6 24.2 28.2 8.3-17.9 23.3.8 29.4-27.7-9.9z\"\n        fill=\"#FFE72C\"\n      ></path>\n      <path d=\"M353.8 31.2c6 2.3 11.9 4.9 17.4 7.7 3.4 1.9 7.6.7 9.5-2.6 1.9-3.4.7-7.6-2.6-9.5l-.6-.3c-5.9-2.9-12.1-5.7-18.6-8.2-3.6-1.4-7.7.4-9.1 4s.4 7.5 4 8.9z\"></path>\n      <path d=\"M512 151.9c0-39.7-32.3-71.9-72-71.8h-2.3c-3.9-7.2-8.7-14-14.3-20.1-2.6-2.9-7-3.1-9.9-.5-2.9 2.6-3.1 7-.5 9.9 5.7 6.2 10.5 13.3 14.1 20.9 1.3 2.7 4.1 4.3 7.1 4 2-.2 4-.3 6-.3 31.9 0 57.8 25.8 57.9 57.7 0 20.8-11.1 40.1-29.2 50.3-3.4 1.9-4.5 6.2-2.6 9.6.1.2.3.5.4.7 19 25.7 13.5 61.8-12.1 80.8-16.6 12.3-38.6 14.8-57.5 6.5-2.9-1.3-6.4-.4-8.3 2.1-19.7 25.5-52.8 36.8-84 28.7-2.6-.7-5.3.2-7 2.2-20.1 23-55.1 25.4-78.1 5.3-1.9-1.6-3.6-3.4-5.3-5.3-1.7-2-4.5-2.8-7-2.2-31.2 8.2-64.3-3.1-84-28.6-2-2.6-5.4-3.4-8.3-2.2-29.2 12.8-63.3-.5-76.1-29.7-8.3-19-5.9-40.9 6.5-57.6 2.3-3.1 1.6-7.5-1.5-9.8-.2-.2-.4-.3-.7-.4-27.8-15.8-37.5-51.1-21.7-78.8C31.8 105.2 51 94.1 71.8 94.1c2 0 4 .1 6 .3 3 .3 5.8-1.3 7.1-4C105.7 45.4 176.1 14 256 14c15 0 30 1.1 44.8 3.3 3.8.6 7.4-2 8-5.9.6-3.8-2-7.4-5.9-8C287.4 1.2 271.7 0 256 0 173.3 0 99.7 32.7 74.3 80.1 34.7 78.7 1.4 109.7 0 149.3c-.8 24 10.4 46.9 29.9 60.9-6.6 11-10 23.6-10 36.4 0 39.7 32.1 71.8 71.8 71.8 8.1 0 16.2-1.4 23.9-4.1 22.5 26 57.5 37.7 91.1 30.5 26.9 27.2 70.8 27.4 98 .5l.5-.5c33.7 7.2 68.6-4.5 91.1-30.5 37.4 13.2 78.4-6.5 91.5-43.9 7-20 4.9-42.1-5.9-60.3 18.9-13.4 30-35.1 30.1-58.2zM38.8 434.3C17.4 434.3 0 451.7 0 473.2S17.4 512 38.8 512s38.8-17.4 38.8-38.8c0-21.5-17.3-38.8-38.8-38.9zm0 63.7C25.1 498 14 486.9 14 473.2s11.1-24.8 24.8-24.8 24.8 11.1 24.8 24.8c.1 13.7-11.1 24.8-24.8 24.8zm74.8-150.5c-28.2 0-51 22.8-51 51 0 10.7 3.4 21.1 9.6 29.8 2.3 3.1 6.6 3.8 9.8 1.6s3.8-6.6 1.6-9.8c-11.9-16.6-8.1-39.7 8.5-51.6s39.7-8.1 51.6 8.5 8.1 39.7-8.5 51.6c-6.3 4.5-13.8 6.9-21.6 6.9-3.9 0-7 3.1-7 7s3.1 7 7 7c28.2-.2 50.8-23.3 50.5-51.4-.3-27.9-22.7-50.4-50.5-50.6z\"></path>\n      <path d=\"M281.1 208.4c-47.8 0-86.5-38.8-86.5-86.5 0-8.5 1.2-16.9 3.7-25 1.1-3.7-1-7.6-4.7-8.7-2.2-.7-4.7-.2-6.5 1.3-42.8 35.3-49 98.6-13.7 141.5s98.6 49 141.5 13.7c15.3-12.6 26.6-29.5 32.3-48.5 1.1-3.7-1-7.6-4.7-8.7-2.2-.7-4.7-.2-6.5 1.3-15.4 12.7-34.8 19.6-54.9 19.6zM251 253.5c-47.8 0-86.5-38.7-86.5-86.5 0-18.1 5.7-35.7 16.2-50.4-.1 1.8-.1 3.6-.1 5.3 0 55.5 45 100.5 100.5 100.5 15 0 29.9-3.4 43.5-9.9-15.9 25.4-43.7 40.9-73.6 41z\"></path>\n      <path d=\"M290.5 81c-2.4-3.2-7-3.8-10.2-1.4-.5.4-1 .9-1.4 1.4l-15.2 22.2-25.8 7.6c-3.7 1.1-5.8 5-4.7 8.7.2.8.6 1.6 1.2 2.3l16.4 21.3-.7 26.9c-.1 3.9 2.9 7.1 6.8 7.2.9 0 1.8-.1 2.6-.4l25.3-9 25.3 9c3.6 1.3 7.6-.6 8.9-4.2.3-.8.4-1.7.4-2.6l-.7-26.9 16.4-21.3c2.4-3.1 1.8-7.5-1.3-9.8-.7-.5-1.5-.9-2.3-1.2l-25.8-7.6L290.5 81zm15.6 55.5c-1 1.3-1.5 2.9-1.5 4.5l.5 19.2-18.1-6.4c-1.5-.5-3.2-.5-4.7 0l-18.1 6.4.5-19.2c0-1.6-.5-3.2-1.5-4.5l-11.7-15.2 18.4-5.4c1.5-.5 2.9-1.4 3.8-2.8l10.8-15.8 10.8 15.8c.9 1.3 2.3 2.3 3.8 2.8l18.4 5.4-11.4 15.2z\"></path>\n    </svg>\n  );\n}\n","export function ImageCardsIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#f1f4f6\"\n        d=\"M319.463 421.666H82.093c-10.698 0-19.37-8.672-19.37-19.37V26.87c0-10.698 8.672-19.37 19.37-19.37h237.371c10.698 0 19.37 8.672 19.37 19.37v375.426c-.001 10.698-8.673 19.37-19.371 19.37z\"\n      ></path>\n      <path\n        fill=\"#dfeaef\"\n        d=\"M319.463 7.5h-20.63v310.431c0 46.246-37.49 83.735-83.735 83.735H62.722v.63c0 10.698 8.672 19.37 19.37 19.37h237.371c10.698 0 19.37-8.672 19.37-19.37V26.87c0-10.698-8.672-19.37-19.37-19.37z\"\n      ></path>\n      <path\n        fill=\"#da387d\"\n        d=\"M301.142 247.455l-9.036 54.215c-4.902 29.412-30.349 50.969-60.166 50.969a41.902 41.902 0 01-29.629-12.273 2.167 2.167 0 00-3.066 0 41.902 41.902 0 01-29.629 12.273c-29.817 0-55.264-21.557-60.166-50.969l-9.036-54.215c-5.277-31.661 19.139-60.483 51.237-60.483a51.947 51.947 0 0136.73 15.214c6.847 6.847 17.948 6.847 24.794 0a51.944 51.944 0 0136.73-15.214c32.098 0 56.514 28.822 51.237 60.483z\"\n      ></path>\n      <path fill=\"#d80a61\" d=\"M298.833 261.305l2.308-13.85c1.521-9.123.576-18.011-2.308-26.041z\"></path>\n      <path\n        fill=\"#8078bc\"\n        d=\"M151.651 186.972a51.947 51.947 0 0136.73 15.214c6.847 6.847 17.948 6.847 24.794 0a51.944 51.944 0 0136.73-15.214c21.47 0 39.503 12.896 47.512 30.911V122.53a4.586 4.586 0 00-4.586-4.586H108.725a4.586 4.586 0 00-4.586 4.586v95.353c8.009-18.015 26.042-30.911 47.512-30.911zM292.106 301.67c-4.902 29.412-30.349 50.969-60.166 50.969a41.902 41.902 0 01-29.629-12.273 2.167 2.167 0 00-3.066 0 41.902 41.902 0 01-29.629 12.273c-29.817 0-55.264-21.557-60.166-50.969l-5.311-31.865v105.859a4.586 4.586 0 004.586 4.586h184.107a4.586 4.586 0 004.586-4.586V269.805z\"\n      ></path>\n      <path\n        fill=\"#6b61b1\"\n        d=\"M297.417 375.664v-42.315c-3.44 18.484-12.953 34.834-26.389 46.901h21.804a4.586 4.586 0 004.585-4.586z\"\n      ></path>\n      <path\n        fill=\"#f1f4f6\"\n        d=\"M429.908 90.333h-91.074v311.963c0 10.698-8.672 19.37-19.37 19.37H173.167v63.463c0 10.698 8.672 19.37 19.37 19.37h237.371c10.698 0 19.37-8.672 19.37-19.37V109.703c0-10.698-8.672-19.37-19.37-19.37z\"\n      ></path>\n      <path\n        fill=\"#dfeaef\"\n        d=\"M429.908 90.333h-20.63v310.431c0 46.246-37.49 83.735-83.735 83.735H173.167v.63c0 10.698 8.672 19.37 19.37 19.37h237.371c10.698 0 19.37-8.672 19.37-19.37V109.703c0-10.698-8.672-19.37-19.37-19.37z\"\n      ></path>\n      <path\n        fill=\"#f4dd45\"\n        d=\"M338.834 232.111v170.185c0 10.698-8.672 19.37-19.37 19.37h-59.93c15.211 8.781 32.864 13.806 51.69 13.806 57.185 0 103.542-46.357 103.542-103.542-.002-47.622-32.153-87.736-75.932-99.819z\"\n      ></path>\n      <path\n        fill=\"#f1d333\"\n        d=\"M409.278 365.273c3.557-10.463 5.486-21.677 5.486-33.343s-1.929-22.88-5.486-33.343z\"\n      ></path>\n      <path\n        fill=\"#86f1a7\"\n        d=\"M338.834 278.693v106.474c43.78-6.444 75.931-27.838 75.931-53.237-.001-25.398-32.152-46.792-75.931-53.237z\"\n      ></path>\n      <path\n        fill=\"#80e29d\"\n        d=\"M409.278 349.713c3.557-5.58 5.486-11.561 5.486-17.783s-1.929-12.203-5.486-17.783z\"\n      ></path>\n      <path\n        fill=\"#7ad0df\"\n        d=\"M407.861 294.681v-89.318a4.586 4.586 0 00-4.586-4.586h-64.442v31.334c31.709 8.752 57.317 32.207 69.028 62.57zm-96.639 140.791c-18.826 0-36.478-5.025-51.69-13.806h-44.949v36.831a4.586 4.586 0 004.586 4.586h184.107a4.586 4.586 0 004.586-4.586V369.18c-14.958 38.78-52.586 66.292-96.64 66.292z\"\n      ></path>\n      <path\n        fill=\"#70c6da\"\n        d=\"M407.861 458.497v-42.315c-3.44 18.484-12.953 34.834-26.389 46.901h21.804a4.586 4.586 0 004.585-4.586z\"\n      ></path>\n      <path d=\"M145.556 97.833a7.5 7.5 0 007.5-7.5V55.819c0-15.554-12.654-28.208-28.208-28.208S96.64 40.265 96.64 55.819v34.514a7.5 7.5 0 0015 0V70.222h26.417v20.111a7.499 7.499 0 007.499 7.5zm-20.709-55.222c7.083 0 12.882 5.604 13.195 12.611h-26.389c.313-7.007 6.112-12.611 13.194-12.611z\"></path>\n      <path d=\"M449.278 180.356a7.5 7.5 0 007.5-7.5v-63.153c0-14.816-12.054-26.871-26.87-26.871h-83.574V26.87c0-14.816-12.054-26.87-26.87-26.87H199.592a7.5 7.5 0 000 15h119.872c6.545 0 11.87 5.325 11.87 11.87v375.426c0 6.545-5.325 11.87-11.87 11.87H82.093c-6.545 0-11.871-5.325-11.871-11.87V26.87c0-6.545 5.325-11.87 11.871-11.87h82.499a7.5 7.5 0 000-15H82.093C67.276 0 55.222 12.054 55.222 26.87v375.426c0 14.816 12.054 26.87 26.871 26.87h83.574v55.963c0 14.816 12.054 26.871 26.87 26.871h237.371c14.816 0 26.87-12.054 26.87-26.871V207.856a7.5 7.5 0 00-15 0v277.273c0 6.545-5.325 11.871-11.87 11.871H192.537c-6.545 0-11.87-5.325-11.87-11.871v-55.963h26.417v29.331c0 6.664 5.421 12.085 12.085 12.085h29.282a7.5 7.5 0 000-15h-26.367v-26.417h35.479c41.673 23.035 95.759 17.569 132.129-18.833a112.935 112.935 0 0010.67-12.339v57.588H283.451a7.5 7.5 0 000 15h119.825c6.664 0 12.085-5.421 12.085-12.085v-88.043c9.28-24.951 9.133-52.488 0-77.169v-87.923c0-6.664-5.421-12.086-12.085-12.086h-56.942V97.833h83.574c6.545 0 11.87 5.325 11.87 11.871v63.153a7.5 7.5 0 007.5 7.499zM346.333 287.611c35.72 7.224 60.841 25.134 60.93 44.217v.265c-.143 19.06-25.249 36.939-60.93 44.155zm0-15.282v-29.832c23.977 9.374 42.714 27.79 52.77 50.6-13.123-9.529-31.229-16.832-52.77-20.768zm-13.342 153.177c7.974-4.666 13.342-13.322 13.342-23.21v-10.765c21.554-3.938 39.669-11.248 52.794-20.786-12.046 27.308-36.432 47.905-66.136 54.761zm67.37-217.229v57.339a110.629 110.629 0 00-54.028-39.062v-18.277z\"></path>\n      <path d=\"M292.831 110.444H108.725c-6.664 0-12.085 5.421-12.085 12.085v93.839a59.35 59.35 0 00-3.623 32.319l3.623 21.739v105.237c0 6.664 5.421 12.086 12.085 12.086h184.106c6.664 0 12.086-5.422 12.086-12.086V270.426l3.623-21.738a59.35 59.35 0 00-3.623-32.319v-93.84c0-6.663-5.422-12.085-12.086-12.085zM111.556 268.689a6.306 6.306 0 00-.041-.246l-3.703-22.22a44.362 44.362 0 019.928-36.034c16.727-19.746 46.877-21.159 65.338-2.699 9.759 9.759 25.641 9.76 35.401 0 8.395-8.394 19.555-13.017 31.426-13.017 13.09 0 25.451 5.729 33.912 15.717s12.08 23.122 9.928 36.033c-5.109 30.643-3.41 20.247-3.743 22.459l-5.293 31.756c-4.317 25.901-26.509 44.701-52.769 44.701-9.189 0-17.828-3.578-24.325-10.076-1.826-1.826-4.254-2.832-6.836-2.832s-5.01 1.005-6.836 2.832c-6.498 6.498-15.137 10.076-24.326 10.076-26.259 0-48.452-18.8-52.769-44.701zm178.361-143.245v69.506c-22.997-20.957-58.86-20.827-81.639 1.53v-19.626c0-7.932 4.407-15.062 11.501-18.61a7.499 7.499 0 003.354-10.062 7.499 7.499 0 00-10.062-3.354c-12.209 6.104-19.793 18.376-19.793 32.026v19.626c-11.18-10.973-25.939-17.009-41.627-17.009a59.324 59.324 0 00-40.012 15.478v-69.506h178.278zM111.639 372.75v-44.537c12.201 19.413 33.736 31.926 57.977 31.926 11.489 0 22.379-3.895 31.162-11.061 8.783 7.166 19.672 11.061 31.162 11.061 24.242 0 45.776-12.513 57.977-31.926v44.538H111.639z\"></path>\n    </svg>\n  );\n}\n","export function PlayersIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#f7d6bf\"\n        d=\"M339 173.72a83.22 83.22 0 01-9.79 39.28c-22.11 40.29-72.72 55.52-113 33.41A82.23 82.23 0 01173 173.72a28.11 28.11 0 01.49-6.39c3.93-45.7 44.22-80.09 89.92-76.16a83.13 83.13 0 0176.16 76.16 28.11 28.11 0 00-.57 6.39z\"\n      ></path>\n      <path\n        fill=\"#b24432\"\n        d=\"M382.77 374.69v46.18H129.23v-46.18a118 118 0 01117.93-117.93h17.68a117.64 117.64 0 01117.93 117.93z\"\n      ></path>\n      <path\n        fill=\"#846e00\"\n        d=\"M167.55 287.22a115.77 115.77 0 00-38.32 87.47v34.88H8.84v-30.95A105.5 105.5 0 01114.49 273c18.67-.52 36.85 4.89 53.06 14.22z\"\n      ></path>\n      <path\n        fill=\"#eabfa2\"\n        d=\"M182.79 213c-5.41 37.83-40.29 64.37-78.13 59s-64.37-40.29-59-78.12 40.29-64.37 78.12-59A70.4 70.4 0 01173 166.84c0 2-.49 4.42-.49 6.39A90.21 90.21 0 00182.79 213z\"\n      ></path>\n      <path\n        fill=\"#840062\"\n        d=\"M503.16 378.13v30.95H382.77V374.2A117 117 0 00344 286.73c50.12-29.48 115-12.77 144.46 37.35a106.45 106.45 0 0114.75 54.05z\"\n      ></path>\n      <path\n        fill=\"#eabfa2\"\n        d=\"M467.29 203.69A69.36 69.36 0 01329.21 213a84.71 84.71 0 009.79-39.28 28.11 28.11 0 00-.49-6.39 69.83 69.83 0 01128.74 36.36z\"\n      ></path>\n      <path d=\"M321.84 420.87c0 4.92-3.93 8.36-8.84 8.85h-7.87a8.85 8.85 0 010-17.69H313a8.8 8.8 0 018.84 8.84zM512 378.13v30.95a8.81 8.81 0 01-8.84 8.85H391.62v2.95c0 4.91-3.94 8.35-8.85 8.84h-32.92a8.85 8.85 0 110-17.69h24.08v-37.34a109.15 109.15 0 00-109.09-109.08h-17.69a109.15 109.15 0 00-109.08 109.08v37.83h127.76a8.85 8.85 0 010 17.69h-136.6c-4.92 0-8.35-3.93-8.85-8.84v-3.44H8.84A8.81 8.81 0 010 409.08v-30.95A113.51 113.51 0 0175.18 271a78.82 78.82 0 01-30-30.95c-2.46-4.43-.5-9.34 3.43-11.8 4.43-2.45 9.34-.49 11.8 3.44a60.54 60.54 0 00113-17.2 88.17 88.17 0 01-9.34-45.2 61.26 61.26 0 00-84.47-15.71 62.63 62.63 0 00-26.53 49.62 8.85 8.85 0 11-17.69 0c0-43.24 35.37-77.63 78.12-77.63 20.15 0 38.82 7.86 53.56 21.62a91.87 91.87 0 01175.91 0 77.84 77.84 0 01108.1 112A90.19 90.19 0 01435.84 271 113.07 113.07 0 01512 378.13zM347.88 169.79a98.26 98.26 0 01-9.33 45.2 60.43 60.43 0 1048.64-70.26 56.25 56.25 0 00-39.31 25.06zm-166.57 3.93a74.34 74.34 0 0075.18 74.19c45.7 0 71.74-36.36 74.2-69.77 2.95-44.22-34.89-82.55-81.08-78.62-39.31 3.93-68.3 36.86-68.3 74.2zm-60.93 227v-26c0-32.43 13.27-64.37 32.92-85-64.36-28.5-136.1 18.67-136.1 88.45v22.6zm90.41-147.41a97.77 97.77 0 01-24.56-20.15A78 78 0 01152.81 271c4.92 2 9.34 3.93 13.76 5.9a128.3 128.3 0 0144.22-23.58zm90.41 0a128.26 128.26 0 0144.23 23.59 81.9 81.9 0 0113.76-5.9 78.56 78.56 0 01-33.42-37.84 80.4 80.4 0 01-24.57 20.15zm193.6 124.82a96.67 96.67 0 00-96.8-96.8 99.11 99.11 0 00-39.3 8.35c18.67 20.15 32.92 51.59 32.92 85v26H494.8z\"></path>\n      <path fill=\"none\" d=\"M0 0h512v512H0z\"></path>\n    </svg>\n  );\n}\n","export function RankIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fb5f7a\"\n        d=\"M305.709 123.258L256 87.857l-49.709 35.401a24.745 24.745 0 00-10.391 20.157v54.673c0 10.884 8.823 19.707 19.707 19.707h80.787c10.884 0 19.707-8.823 19.707-19.707v-54.673a24.746 24.746 0 00-10.392-20.157z\"\n      ></path>\n      <path\n        fill=\"#f74455\"\n        d=\"M316.1 143.42v54.67c0 10.88-8.82 19.71-19.71 19.71h-30.13c10.89 0 19.71-8.83 19.71-19.71v-54.67c0-8.01-3.87-15.52-10.39-20.16l-34.64-24.67L256 87.86l49.71 35.4a24.738 24.738 0 0110.39 20.16z\"\n      ></path>\n      <circle cx=\"256\" cy=\"53.83\" r=\"46.33\" fill=\"#fb5f7a\"></circle>\n      <path\n        fill=\"#f74455\"\n        d=\"M302.33 53.83c0 25.59-20.74 46.33-46.33 46.33-5.27 0-10.34-.88-15.06-2.5 18.19-6.26 31.26-23.52 31.26-43.83S259.13 16.26 240.94 10c4.72-1.62 9.79-2.5 15.06-2.5 25.59 0 46.33 20.74 46.33 46.33z\"\n      ></path>\n      <path\n        fill=\"#99e6fc\"\n        d=\"M395.942 258.439l-49.709-35.401-49.709 35.401a24.746 24.746 0 00-10.391 20.158v54.673c0 10.884 8.823 19.707 19.707 19.707h80.787c10.884 0 19.707-8.823 19.707-19.707v-54.673a24.747 24.747 0 00-10.392-20.158z\"\n      ></path>\n      <path\n        fill=\"#62dbfb\"\n        d=\"M406.333 278.601v54.67c0 10.88-8.82 19.71-19.71 19.71h-30.13c10.89 0 19.71-8.83 19.71-19.71v-54.67c0-8.01-3.87-15.52-10.39-20.16l-34.64-24.67 15.06-10.73 49.71 35.4a24.738 24.738 0 0110.39 20.16z\"\n      ></path>\n      <circle cx=\"346.233\" cy=\"189.011\" r=\"46.33\" fill=\"#99e6fc\"></circle>\n      <path\n        fill=\"#62dbfb\"\n        d=\"M392.563 189.011c0 25.59-20.74 46.33-46.33 46.33-5.27 0-10.34-.88-15.06-2.5 18.19-6.26 31.26-23.52 31.26-43.83s-13.07-37.57-31.26-43.83c4.72-1.62 9.79-2.5 15.06-2.5 25.59 0 46.33 20.74 46.33 46.33z\"\n      ></path>\n      <path\n        fill=\"#99e6fc\"\n        d=\"M215.477 258.439l-49.709-35.401-49.709 35.401a24.746 24.746 0 00-10.391 20.158v54.673c0 10.884 8.823 19.707 19.707 19.707h80.787c10.884 0 19.707-8.823 19.707-19.707v-54.673a24.752 24.752 0 00-10.392-20.158z\"\n      ></path>\n      <path\n        fill=\"#62dbfb\"\n        d=\"M225.867 278.601v54.67c0 10.88-8.82 19.71-19.71 19.71h-30.13c10.89 0 19.71-8.83 19.71-19.71v-54.67c0-8.01-3.87-15.52-10.39-20.16l-34.64-24.67 15.06-10.73 49.71 35.4a24.738 24.738 0 0110.39 20.16z\"\n      ></path>\n      <circle cx=\"165.767\" cy=\"189.011\" r=\"46.33\" fill=\"#99e6fc\"></circle>\n      <path\n        fill=\"#62dbfb\"\n        d=\"M212.097 189.011c0 25.59-20.74 46.33-46.33 46.33-5.27 0-10.34-.88-15.06-2.5 18.19-6.26 31.26-23.52 31.26-43.83s-13.07-37.57-31.26-43.83c4.72-1.62 9.79-2.5 15.06-2.5 25.59 0 46.33 20.74 46.33 46.33z\"\n      ></path>\n      <path\n        fill=\"#ffe177\"\n        d=\"M486.175 409.962l-49.709-35.401-49.709 35.401a24.746 24.746 0 00-10.391 20.158v54.673c0 10.884 8.823 19.707 19.707 19.707h80.787c10.884 0 19.707-8.823 19.707-19.707V430.12a24.747 24.747 0 00-10.392-20.158z\"\n      ></path>\n      <path\n        fill=\"#ffd15b\"\n        d=\"M496.566 430.124v54.67c0 10.88-8.82 19.71-19.71 19.71h-30.13c10.89 0 19.71-8.83 19.71-19.71v-54.67c0-8.01-3.87-15.52-10.39-20.16l-34.64-24.67 15.06-10.73 49.71 35.4a24.738 24.738 0 0110.39 20.16z\"\n      ></path>\n      <circle cx=\"436.466\" cy=\"340.535\" r=\"46.33\" fill=\"#ffe177\"></circle>\n      <path\n        fill=\"#ffd15b\"\n        d=\"M482.796 340.534c0 25.59-20.74 46.33-46.33 46.33-5.27 0-10.34-.88-15.06-2.5 18.19-6.26 31.26-23.52 31.26-43.83s-13.07-37.57-31.26-43.83c4.72-1.62 9.79-2.5 15.06-2.5 25.59 0 46.33 20.74 46.33 46.33z\"\n      ></path>\n      <path\n        fill=\"#ffe177\"\n        d=\"M305.709 409.962L256 374.561l-49.709 35.401A24.746 24.746 0 00195.9 430.12v54.673c0 10.884 8.823 19.707 19.707 19.707h80.787c10.884 0 19.707-8.823 19.707-19.707V430.12a24.747 24.747 0 00-10.392-20.158z\"\n      ></path>\n      <path\n        fill=\"#ffd15b\"\n        d=\"M316.1 430.124v54.67c0 10.88-8.82 19.71-19.71 19.71h-30.13c10.89 0 19.71-8.83 19.71-19.71v-54.67c0-8.01-3.87-15.52-10.39-20.16l-34.64-24.67 15.06-10.73 49.71 35.4a24.738 24.738 0 0110.39 20.16z\"\n      ></path>\n      <circle cx=\"256\" cy=\"340.535\" r=\"46.33\" fill=\"#ffe177\"></circle>\n      <path\n        fill=\"#ffd15b\"\n        d=\"M302.33 340.534c0 25.59-20.74 46.33-46.33 46.33-5.27 0-10.34-.88-15.06-2.5 18.19-6.26 31.26-23.52 31.26-43.83s-13.07-37.57-31.26-43.83c4.72-1.62 9.79-2.5 15.06-2.5 25.59 0 46.33 20.74 46.33 46.33z\"\n      ></path>\n      <path\n        fill=\"#ffe177\"\n        d=\"M125.244 409.962l-49.709-35.401-49.709 35.401a24.746 24.746 0 00-10.391 20.158v54.673c0 10.884 8.823 19.707 19.707 19.707h80.787c10.884 0 19.707-8.823 19.707-19.707V430.12a24.75 24.75 0 00-10.392-20.158z\"\n      ></path>\n      <path\n        fill=\"#ffd15b\"\n        d=\"M135.634 430.124v54.67c0 10.88-8.82 19.71-19.71 19.71h-30.13c10.89 0 19.71-8.83 19.71-19.71v-54.67c0-8.01-3.87-15.52-10.39-20.16l-34.64-24.67 15.06-10.73 49.71 35.4a24.738 24.738 0 0110.39 20.16z\"\n      ></path>\n      <circle cx=\"75.534\" cy=\"340.535\" r=\"46.33\" fill=\"#ffe177\"></circle>\n      <path\n        fill=\"#ffd15b\"\n        d=\"M121.864 340.534c0 25.59-20.74 46.33-46.33 46.33-5.27 0-10.34-.88-15.06-2.5 18.19-6.26 31.26-23.52 31.26-43.83s-13.07-37.57-31.26-43.83c4.72-1.62 9.79-2.5 15.06-2.5 25.59 0 46.33 20.74 46.33 46.33z\"\n      ></path>\n      <path d=\"M490.525 403.853l-25.175-17.929c14.982-9.568 24.946-26.332 24.946-45.389 0-29.682-24.148-53.83-53.83-53.83a53.5 53.5 0 00-22.632 5.006v-13.115a32.308 32.308 0 00-13.541-26.267l-25.177-17.928c14.983-9.568 24.948-26.332 24.948-45.39 0-29.682-24.148-53.83-53.831-53.83a53.497 53.497 0 00-22.801 5.083c-.909-9.214-5.756-17.692-13.372-23.115L284.884 99.22c14.983-9.568 24.946-26.332 24.946-45.389C309.83 24.148 285.682 0 256 0s-53.83 24.148-53.83 53.831c0 19.059 9.965 35.824 24.95 45.392l-25.18 17.926c-7.616 5.424-12.463 13.902-13.372 23.115a53.49 53.49 0 00-22.801-5.083c-5.992 0-11.881.979-17.501 2.911a7.499 7.499 0 104.875 14.185 38.767 38.767 0 0112.626-2.097c21.411 0 38.83 17.419 38.83 38.83s-17.419 38.831-38.83 38.831-38.831-17.419-38.831-38.831c0-6.247 1.436-12.208 4.268-17.717a7.5 7.5 0 10-13.342-6.856c-3.877 7.544-5.926 16.041-5.926 24.574 0 19.059 9.965 35.824 24.95 45.392l-25.18 17.926a32.306 32.306 0 00-13.541 26.267v13.115a53.485 53.485 0 00-22.632-5.006c-29.682 0-53.83 24.148-53.83 53.83 0 19.057 9.963 35.821 24.946 45.389l-25.175 17.929a32.304 32.304 0 00-13.54 26.267v54.673C7.934 499.795 20.139 512 35.141 512h80.787c15.002 0 27.207-12.205 27.207-27.208v-11.664c0-4.142-3.357-7.5-7.5-7.5s-7.5 3.358-7.5 7.5v11.664c0 6.731-5.476 12.208-12.207 12.208H35.141c-6.731 0-12.207-5.476-12.207-12.208V430.12a17.276 17.276 0 017.242-14.048l32.632-23.239c6.901 1.642 16.289 2.274 25.454 0l32.631 23.24a17.276 17.276 0 017.242 14.048v7.251c0 4.142 3.357 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-7.251a32.303 32.303 0 00-13.541-26.267l-25.175-17.929c9.444-6.032 16.886-14.922 21.1-25.447h80.468c4.215 10.526 11.656 19.416 21.101 25.447l-25.176 17.929a32.303 32.303 0 00-13.54 26.267v54.673c0 15.002 12.205 27.208 27.207 27.208h80.787c15.002 0 27.207-12.205 27.207-27.208V430.12a32.303 32.303 0 00-13.541-26.267l-25.175-17.929c14.982-9.568 24.946-26.332 24.946-45.389 0-15.033-6.201-28.639-16.171-38.414v-23.524a17.28 17.28 0 017.241-14.048l32.641-23.238c6.899 1.641 16.281 2.271 25.442-.001l32.635 23.238a17.282 17.282 0 017.242 14.049v23.498c-9.986 9.778-16.198 23.394-16.198 38.44 0 1.667.087 3.313.236 4.942h-44.226c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h47.836c4.215 10.526 11.656 19.416 21.1 25.447l-25.175 17.929a32.303 32.303 0 00-13.541 26.267v54.673c0 15.002 12.205 27.208 27.207 27.208h80.787c15.002 0 27.207-12.205 27.207-27.208V430.12c0-10.41-5.062-20.23-13.541-26.267zM217.17 53.831C217.17 32.419 234.589 15 256 15s38.83 17.419 38.83 38.831-17.419 38.83-38.83 38.83-38.83-17.419-38.83-38.83zm-13.771 96.74v-7.156a17.274 17.274 0 017.241-14.047l32.641-23.238c6.9 1.641 16.282 2.271 25.445-.002l32.632 23.24a17.275 17.275 0 017.242 14.048v7.156c-9.986 9.778-16.198 23.394-16.198 38.44a53.53 53.53 0 004.389 21.27c-1.4.029-80.329.028-81.583 0a53.525 53.525 0 004.389-21.269c.001-15.048-6.212-28.665-16.198-38.442zM36.704 340.535c0-21.411 17.419-38.83 38.83-38.83s38.83 17.419 38.83 38.83-17.419 38.831-38.83 38.831-38.83-17.42-38.83-38.831zm92.424 4.942c1.766-14.97-5.012-33.199-15.962-43.382v-23.498a17.28 17.28 0 017.241-14.048l32.641-23.238c6.899 1.641 16.282 2.272 25.445-.002l32.632 23.239a17.282 17.282 0 017.242 14.049v23.471c-10.717 10.473-17.63 26.704-15.99 43.409zm172.203 70.594a17.276 17.276 0 017.242 14.048v54.673c0 6.731-5.476 12.208-12.207 12.208h-80.787c-6.731 0-12.207-5.476-12.207-12.208V430.12a17.278 17.278 0 017.241-14.048l32.633-23.239c6.9 1.642 16.288 2.274 25.453 0zm-6.528-75.536c0 21.411-17.419 38.831-38.83 38.831-21.31-.228-38.682-17.17-38.831-38.831 0-21.411 17.42-38.83 38.831-38.83s38.83 17.419 38.83 38.83zm-2.63-88.205a32.306 32.306 0 00-13.541 26.267v13.127a53.485 53.485 0 00-22.659-5.019 53.484 53.484 0 00-22.604 4.994v-13.102a32.308 32.308 0 00-13.541-26.267l-25.175-17.929a54.259 54.259 0 0012.134-10.586 27.154 27.154 0 008.82 1.481h80.787c3.033 0 6.002-.516 8.82-1.482a54.225 54.225 0 0012.139 10.589zm15.229-63.319c0-21.411 17.419-38.83 38.83-38.83s38.831 17.419 38.831 38.83-17.42 38.831-38.831 38.831-38.83-17.42-38.83-38.831zm129.064 112.694c21.411 0 38.83 17.419 38.83 38.83s-17.419 38.831-38.83 38.831-38.83-17.419-38.83-38.831 17.419-38.83 38.83-38.83zm52.6 183.087c0 6.731-5.476 12.208-12.207 12.208h-80.787c-6.731 0-12.207-5.476-12.207-12.208V430.12a17.276 17.276 0 017.242-14.048l32.632-23.239c6.901 1.642 16.288 2.274 25.453 0l32.631 23.24a17.276 17.276 0 017.242 14.048v54.671z\"></path>\n    </svg>\n  );\n}\n","export function StarIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffb820\"\n        d=\"M491.64 188.725l-153.53-22.31-68.66-139.12c-2.75-5.57-8.1-8.36-13.45-8.36l.02 400.2 137.3 72.19c11.01 5.78 23.86-3.56 21.76-15.81l-26.22-152.92 111.09-108.29c8.91-8.68 3.99-23.79-8.31-25.58z\"\n      ></path>\n      <path\n        fill=\"#ffd06a\"\n        d=\"M356.62 312.125s23.68 138.03 23.76 138.49c-.08-.01-122.45-31-124.36-31.48-.02-.01-137.34 72.19-137.34 72.19-11.01 5.78-23.86-3.56-21.76-15.81l26.22-152.92-111.09-108.29c-8.91-8.68-3.99-23.79 8.31-25.58l153.53-22.31 68.66-139.12c2.75-5.57 8.1-8.36 13.45-8.36l62.19 174.9 139.06 20.21z\"\n      ></path>\n      <path d=\"M510.883 196.615c-2.666-8.204-9.625-14.07-18.16-15.311l-149.632-21.743-66.918-135.588c-3.817-7.735-11.547-12.54-20.173-12.54s-16.356 4.805-20.173 12.54L168.91 159.561 19.278 181.305c-8.537 1.24-15.495 7.106-18.161 15.311s-.484 17.04 5.693 23.062l108.274 105.541-9.911 57.786a7.501 7.501 0 006.124 8.66 7.499 7.499 0 008.66-6.125l10.578-61.672a7.502 7.502 0 00-2.157-6.639L17.28 208.934c-2.089-2.036-2.798-4.909-1.897-7.684.902-2.775 3.164-4.683 6.052-5.103l153.534-22.31a7.498 7.498 0 005.647-4.103l68.662-139.125c1.292-2.617 3.804-4.179 6.722-4.179s5.431 1.562 6.722 4.179l68.663 139.125a7.5 7.5 0 005.647 4.103l153.534 22.31c2.888.42 5.15 2.327 6.051 5.102.902 2.775.193 5.648-1.896 7.685L383.622 317.228a7.499 7.499 0 00-2.157 6.639l26.227 152.913c.494 2.876-.621 5.617-2.982 7.332-2.361 1.714-5.312 1.929-7.895.57L259.49 412.487a7.504 7.504 0 00-6.98 0l-137.325 72.195c-2.583 1.358-5.535 1.144-7.894-.57-2.361-1.715-3.476-4.456-2.982-7.332l10.578-61.673a7.501 7.501 0 00-6.124-8.66 7.501 7.501 0 00-8.66 6.125l-10.578 61.673c-1.458 8.502 1.971 16.933 8.95 22.003 3.943 2.865 8.557 4.32 13.201 4.32a22.51 22.51 0 0010.49-2.608L256 427.6l133.834 70.36c7.635 4.014 16.713 3.357 23.692-1.712 6.979-5.07 10.408-13.502 8.949-22.003l-25.56-149.027L505.19 219.677c6.177-6.022 8.359-14.859 5.693-23.062z\"></path>\n    </svg>\n  );\n}\n","// This icon file is generated automatically.\nvar CaretUpOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"0 0 1024 1024\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M858.9 689L530.5 308.2c-9.4-10.9-27.5-10.9-37 0L165.1 689c-12.2 14.2-1.2 35 18.5 35h656.8c19.7 0 30.7-20.8 18.5-35z\" } }] }, \"name\": \"caret-up\", \"theme\": \"outlined\" };\nexport default CaretUpOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CaretUpOutlinedSvg from \"@ant-design/icons-svg/es/asn/CaretUpOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar CaretUpOutlined = function CaretUpOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CaretUpOutlinedSvg\n  }));\n};\nCaretUpOutlined.displayName = 'CaretUpOutlined';\nexport default /*#__PURE__*/React.forwardRef(CaretUpOutlined);","// This icon file is generated automatically.\nvar CrownFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M899.6 276.5L705 396.4 518.4 147.5a8.06 8.06 0 00-12.9 0L319 396.4 124.3 276.5c-5.7-3.5-13.1 1.2-12.2 7.9L188.5 865c1.1 7.9 7.9 14 16 14h615.1c8 0 14.9-6 15.9-14l76.4-580.6c.8-6.7-6.5-11.4-12.3-7.9zM512 734.2c-62.1 0-112.6-50.5-112.6-112.6S449.9 509 512 509s112.6 50.5 112.6 112.6S574.1 734.2 512 734.2zm0-160.9c-26.6 0-48.2 21.6-48.2 48.3 0 26.6 21.6 48.3 48.2 48.3s48.2-21.6 48.2-48.3c0-26.6-21.6-48.3-48.2-48.3z\" } }] }, \"name\": \"crown\", \"theme\": \"filled\" };\nexport default CrownFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CrownFilledSvg from \"@ant-design/icons-svg/es/asn/CrownFilled\";\nimport AntdIcon from '../components/AntdIcon';\nvar CrownFilled = function CrownFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CrownFilledSvg\n  }));\n};\nCrownFilled.displayName = 'CrownFilled';\nexport default /*#__PURE__*/React.forwardRef(CrownFilled);","// This icon file is generated automatically.\nvar RobotOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M300 328a60 60 0 10120 0 60 60 0 10-120 0zM852 64H172c-17.7 0-32 14.3-32 32v660c0 17.7 14.3 32 32 32h680c17.7 0 32-14.3 32-32V96c0-17.7-14.3-32-32-32zm-32 660H204V128h616v596zM604 328a60 60 0 10120 0 60 60 0 10-120 0zm250.2 556H169.8c-16.5 0-29.8 14.3-29.8 32v36c0 4.4 3.3 8 7.4 8h729.1c4.1 0 7.4-3.6 7.4-8v-36c.1-17.7-13.2-32-29.7-32zM664 508H360c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h304c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"robot\", \"theme\": \"outlined\" };\nexport default RobotOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport RobotOutlinedSvg from \"@ant-design/icons-svg/es/asn/RobotOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar RobotOutlined = function RobotOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: RobotOutlinedSvg\n  }));\n};\nRobotOutlined.displayName = 'RobotOutlined';\nexport default /*#__PURE__*/React.forwardRef(RobotOutlined);"],"names":["CardHighlight","children","type","iconSize","className","icon","PlayersHighlight","PointsHighlight","StarPoints","keyPrefix","quantity","hideText","isNegative","num","Math","abs","StarsArray","Array","from","length","_","i","StarFilled","clsx","pt","en","RulesIcon","props","xmlns","viewBox","fill","d","messageContent","title","description","id","duration","key","content","top","window","innerWidth","VideoGameControllerIcon","style","width","onClick","message","GainedPoint","gainedPoint","order","isPositive","color","GainedPoints","gainedPoints","playerId","gainedPointsDescriptions","points","isArray","map","index","RankingBoard","players","ranking","hideGainedPoints","delay","useState","displayStep","setDisplayStep","sortedRanking","setSortedRanking","reRank","setReRank","useDimensions","height","maxPoints","useMemo","max","scores","newScore","seconds","useCountdown","autoStart","onExpire","useEffectOnce","positions","lastPosition","lastPoints","rankByFinalScoreDict","orderBy","reduce","acc","entry","rankByPreviousScore","tempSortedRanking","newEntry","position","previousScore","useEffect","hPosition","CrownFilled","avatarId","name","undefined","StepRankingWrapper","subtitle","useTemporarilyHidePlayersBar","CaretUpOutlined","View","ViewIf","condition","ViewOr","ViewSwitch","cases","Error","console","warn","BotHighlight","MetricHighlight","RobotIcon","PlayerHighlight","PlayerIcon","WordSelectionRules","scout","player","addressUser","size","GeneralRules","contained","DreamSelectionRules","DreamSelectionExtendedRules","CardPlayRules","BotsRules","StepWordSelection","onSubmitWord","words","fullWidth","align","word","wordId","header","LETTERS","text","state","info","user","useUser","useStep","step","goToNextStep","setStep","useWhichPlayerIsThe","isUserTheScout","translate","useLanguage","request","useAPICall","apiFunction","GALERIA_DE_SONHOS_API","actionName","onBeforeCall","onError","successMessage","errorMessage","payload","action","useOnSubmitWordAPIRequest","phase","allowedPhase","PHASES","conditions","isReady","waitingRoomInstructionType","round","onPressButton","buttonText","time","circleColor","appearance","SleepIcon","onClose","currentRound","current","instruction","mockDreamSelection","cards","numberOfCards","shuffle","slice","cardIndex","SelectTable","table","onSelectCard","selectedCards","cardWidth","useCardWidth","card","isSelected","cardId","imageId","shape","ghost","UpCircleOutlined","validateSelectedCards","v","Object","keys","StepDreamsSelection","onSubmitCards","botEnabled","announcement","useBooleanDictionary","selectedCount","useMock","cardsIds","RobotOutlined","label","buttonProps","disabled","meta","useOnSubmitCardsAPIRequest","DreamIcon","hand","Boolean","options","withBots","PlayTable","onPlayCard","userCards","isPlayAvailable","isLoading","useLoading","userCardEntry","used","getAnimationClass","previewImageId","score","StarIcon","PlayersDreamsCount","playerInNightmareId","sortedPlayers","sortPlayers","cardsLeft","values","filter","isPlayerInNightmare","showTooltip","fallen","backgroundColor","getAvatarColorById","placement","open","alt","StepPlayDream","activePlayer","isActivePlayer","gameOrder","setLastTurnCount","showedMessage","setShowedMessage","activePlayerId","ListPlayers","listPlayers","MatchCount","matchCount","lastActivePlayer","playerInNightmare","isSpark","isSuperSpark","pluralize","StepAnnounceDream","latest","matchedPlayers","fallenMatchingPlayers","push","matchingPlayers","completedPlayers","skip","isPhaseOver","direction","autoTriggerTime","lastTurnCount","useOnPlayCardAPIRequest","turnCount","DoorSignIcon","unskippable","NightmareIcon","animationType","RankIcon","BestMatches","bestMatches","level","GameOverTable","announcementIcon","LadderIcon","Achievements","achievements","reference","achievementsReference","getActiveComponent","PhaseLobby","PhaseRules","PhaseSetup","PhaseWordSelection","PhaseDreamsSelection","PhaseCardPlay","PhaseResolution","PhaseGameOver","PageError","theme","token","colorPrimary","THEME_COLORS","colorLink","gameCollection","GAME_COLLECTION","MOST_MATCHES","FEWEST_MATCHES","MOST_FULL_MATCHES","MOST_VISITS","LEAST_ADVENTUROUS","MOST_ADVENTUROUS","MOST_PAIRS","MOST_OUT_OF_THE_BOX","MOST_LONELY","POOREST_CHOICES","SMARTEST_CHOICES","initialState","validation","dict","setDict","isValid","s","dictCopy","propertyName","useGlobalState","userId","setActivePlayer","isUser","setIsUser","cx","cy","r","ImageCardsIcon","PlayersIcon","ref","React","AntdIcon","_objectSpread","CaretUpOutlinedSvg","displayName","CrownFilledSvg","RobotOutlinedSvg"],"sourceRoot":""}