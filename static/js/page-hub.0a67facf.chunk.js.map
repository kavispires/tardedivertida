{"version":3,"file":"static/js/page-hub.0a67facf.chunk.js","mappings":"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","sources":["components/general/GameTags.tsx","components/rules/CollapsibleRule.tsx","components/rules/PopoverRule.tsx","components/rules/RulesCarousel.tsx","components/rules/RulesList.tsx","components/rules/RulesModal.tsx","components/text/Instruction.tsx","components/text/RoundsLeftInstruction.tsx","components/text/TextHighlight.tsx","components/text/Title.tsx","hooks/useDevFeatures.ts","pages/Dev/DevMenu.tsx","pages/Dev/DevHeader.tsx","pages/Hub/components/CreateGameModal.tsx","pages/Hub/components/GameCard.tsx","pages/Hub/components/DevEmulatorAlert.tsx","pages/Hub/components/Filters.tsx","pages/Hub/Hub.tsx","services/adapters.ts"],"sourcesContent":["// Ant Design Resources\nimport { Space, SpaceProps, Tag } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { TAG_DICT } from 'utils/constants';\n\nconst sortTags = (tags: string[]) => {\n  const sortedTags: string[] = [];\n\n  tags.forEach((tag) => {\n    if (TAG_DICT?.[tag]?.index !== undefined) {\n      sortedTags[TAG_DICT[tag].index] = tag;\n    } else if (sortedTags.length < 18) {\n      sortedTags[18] = tag;\n    } else {\n      sortedTags.push(tag);\n    }\n  });\n\n  return sortedTags.filter((v) => Boolean(v));\n};\n\ntype GameTagsProps = {\n  tags: string[];\n  gameCode: GameCode;\n} & SpaceProps;\n\nexport function GameTags({ tags, gameCode, ...rest }: GameTagsProps) {\n  const { language } = useLanguage();\n  const sortedTags = sortTags(tags);\n\n  return (\n    <Space wrap {...rest}>\n      {sortedTags.map((tag) => (\n        <Tag key={`${gameCode}-${tag}`} color={TAG_DICT[tag]?.color}>\n          {TAG_DICT[tag]?.label[language]}\n        </Tag>\n      ))}\n    </Space>\n  );\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { Collapse } from 'antd';\n// Components\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\n\ntype CollapsibleRuleProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * The title of the panel (default: Rules/Regras)\n   */\n  title?: ReactNode;\n};\nexport function CollapsibleRule({ children, title }: CollapsibleRuleProps): JSX.Element {\n  return (\n    <Instruction contained>\n      <Collapse ghost>\n        <Collapse.Panel header={<Translate pt=\"Regras\" en=\"Rules\" custom={title} />} key=\"1\">\n          {children}\n        </Collapse.Panel>\n      </Collapse>\n    </Instruction>\n  );\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { ReadOutlined } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\nimport { FixedMenuButton } from 'components/buttons';\n\ntype PopoverRuleProps = {\n  /**\n   * The rules themselves\n   */\n  content: ReactNode;\n  /**\n   * A custom label other than rules/regras\n   */\n  label?: ReactNode;\n  /**\n   * If label should be displayed\n   */\n  showLabel?: boolean;\n};\n\nexport function PopoverRule({ content, label, showLabel = false }: PopoverRuleProps): JSX.Element {\n  return (\n    <FixedMenuButton\n      type=\"popover\"\n      position={0}\n      icon={<ReadOutlined />}\n      content={content}\n      label={label || <Translate pt=\" Regras\" en=\" Rules\" />}\n      showLabel={showLabel}\n      buttonProps={{\n        type: 'primary',\n      }}\n    />\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Typography, Image, Carousel, Button, Space } from 'antd';\nimport { CarouselRef } from 'antd/es/carousel';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Constants\nimport { PUBLIC_URL } from 'utils/constants';\nimport { DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\nimport { createRef } from 'react';\nimport { Translate } from 'components/language';\nimport { useKeyPressEvent } from 'react-use';\n\ntype RulesCarouselProps = {\n  info: GameInfo;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Optional custom class name\n   */\n  ruleClassName?: string;\n  /**\n   * Optional custom class name\n   */\n  actionsClassName?: string;\n};\n\nexport function RulesCarousel({\n  info,\n  className = '',\n  ruleClassName = '',\n  actionsClassName,\n}: RulesCarouselProps): JSX.Element {\n  const { language } = useLanguage();\n  const ref = createRef<CarouselRef>();\n\n  useKeyPressEvent('ArrowLeft', () => {\n    ref.current?.prev();\n  });\n\n  useKeyPressEvent('ArrowRight', () => {\n    ref.current?.next();\n  });\n\n  return (\n    <div>\n      <Carousel className={clsx('rules-carousel', className)} autoplay autoplaySpeed={15000} ref={ref}>\n        {info.rules[language].map((rule, index) => (\n          <div className={clsx('rules-carousel__rule', className)} key={rule}>\n            <span className=\"rules-carousel__rule-number\">{index + 1}</span>\n\n            <Image\n              className=\"rules-carousel__image\"\n              src={\n                index === 0\n                  ? `${PUBLIC_URL.BANNERS}${info.gameName}-${language}.jpg`\n                  : `${PUBLIC_URL.RULES}game-rule-${info.gameName}-${index}.jpg`\n              }\n              fallback={`${PUBLIC_URL.RULES}game-rule-not-found.jpg`}\n              alt={rule}\n            />\n            <Typography.Paragraph className={clsx('rules-carousel__rule-text', ruleClassName)}>\n              {rule}\n            </Typography.Paragraph>\n          </div>\n        ))}\n      </Carousel>\n      <Space className={clsx('space-container', actionsClassName)}>\n        <Button type=\"default\" ghost onClick={() => ref.current?.prev()} size=\"small\">\n          <DoubleLeftOutlined /> <Translate pt=\"Regra Anterior\" en=\"Previous Rule\" />\n        </Button>\n        <Button type=\"default\" ghost onClick={() => ref.current?.next()} size=\"small\">\n          <Translate pt=\"Próxima Regra\" en=\"Next Rule\" /> <DoubleRightOutlined />\n        </Button>\n      </Space>\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n\ntype RulesListProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n};\n\nexport function RulesList({ children, className = '' }: RulesListProps): JSX.Element {\n  return <ul className={clsx('rules-list', className)}>{children}</ul>;\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, ButtonProps, Modal } from 'antd';\nimport { ReadOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Translate } from 'components/language';\nimport { RulesCarousel } from 'components/rules';\n\ntype RulesModalProps = {\n  gameInfo: GameInfo;\n  buttonProps?: ButtonProps;\n};\n\nexport function RulesModal({ gameInfo, buttonProps }: RulesModalProps): JSX.Element {\n  const { language, translate } = useLanguage();\n  const [isVisible, setVisibility] = useState(false);\n\n  const onCloseModal = () => {\n    setVisibility(false);\n  };\n\n  return (\n    <>\n      <Button type=\"default\" onClick={() => setVisibility(true)} icon={<ReadOutlined />} {...buttonProps}>\n        <Translate pt=\"Regras\" en=\"Rules\" />\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`${translate('Regras', 'Rules')}: ${gameInfo.title[language]}`}\n          open={isVisible}\n          onCancel={onCloseModal}\n          className=\"rules-modal\"\n          footer={[\n            <Button key=\"close\" onClick={onCloseModal}>\n              <Translate pt=\"Fechar\" en=\"Close\" />\n            </Button>,\n          ]}\n        >\n          <div className=\"rules-modal-content\">\n            <RulesCarousel info={gameInfo} />\n          </div>\n        </Modal>\n      )}\n    </>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Sass\nimport './Instruction.scss';\n\ntype InstructionsProps = {\n  /**\n   * The content of the instruction\n   */\n  children: ReactNode;\n  /**\n   * Adds a semi transparent background (white or black opposite to the white property)\n   */\n  contained?: boolean;\n  /**\n   * Make text color white\n   */\n  white?: boolean;\n  /**\n   * Makes instruction width 100%\n   */\n  fullWidth?: boolean;\n  /**\n   * Custom class name\n   */\n  className?: string;\n};\n\n/**\n * Typography container for instructions\n */\nexport const Instruction = ({ children, white, className, contained, fullWidth }: InstructionsProps) => {\n  const baseClass = 'instruction';\n\n  return (\n    <Typography.Text\n      className={clsx(\n        baseClass,\n        contained && `${baseClass}--contained`,\n        white && `${baseClass}--white`,\n        fullWidth && `${baseClass}--full-width`,\n        className\n      )}\n      data-testid=\"instruction\"\n    >\n      {children}\n    </Typography.Text>\n  );\n};\n","// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { pluralize } from 'utils/helpers';\n\ntype RoundsLeftInstructionProps = {\n  /**\n   * The state round object with current and total values\n   */\n  round: GameRound;\n};\n\n/**\n * Displays instructional sentence based on the number of rounds left for the game to end\n */\nexport function RoundsLeftInstruction({ round }: RoundsLeftInstructionProps) {\n  const left = (round?.total ?? 0) - (round?.current ?? 0);\n\n  if (left === 0 || round.forceLastRound) {\n    return (\n      <Instruction contained>\n        <Translate pt=\"Essa foi a última rodada\" en=\"No more rounds left\" />\n      </Instruction>\n    );\n  }\n\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            {pluralize(left, 'Falta', 'Faltam')} <strong>{left}</strong>{' '}\n            {pluralize(left, 'rodada', 'rodadas')} para o jogo terminar...\n          </>\n        }\n        en={\n          <>\n            <strong>{left}</strong> {pluralize(left, 'round', 'rounds')} left for the game to end...\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n","import { ReactNode } from 'react';\n// Sass\nimport './TextHighlight.scss';\n\ntype TextHighlightProps = {\n  /**\n   * The text to be highlighted\n   */\n  children: ReactNode;\n};\n\nexport function TextHighlight({ children }: TextHighlightProps) {\n  return <span className=\"text-highlight\">{children}</span>;\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Sass\nimport './Title.scss';\n\ntype TitleProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Makes text white\n   */\n  white?: boolean;\n  /**\n   * Icon prefixing the title\n   */\n  icon?: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * The heading level (default: 2)\n   */\n  level?: 1 | 2 | 3 | 4 | 5;\n  /**\n   * The size of the title (default: medium)\n   */\n  size?: 'xx-small' | 'x-small' | 'small' | 'medium' | 'large';\n};\n\nexport const Title = ({ children, white, icon, className, level = 2, size = 'medium' }: TitleProps) => {\n  return (\n    <Typography.Title\n      level={level}\n      className={clsx('title', `title--${size}`, white && 'title--white', className)}\n    >\n      {Boolean(icon) && icon}\n      {children}\n    </Typography.Title>\n  );\n};\n","import { isDevEnv } from '../utils/helpers';\nimport { useGlobalState } from './useGlobalState';\n\n/**\n * Controls debug and dev environment\n * @returns\n */\nexport function useDevFeatures() {\n  const [isDebugEnabled, setIsDebugEnabled] = useGlobalState('isDebugEnabled');\n\n  const toggleDevFeatures = () => {\n    setIsDebugEnabled((s) => !s);\n  };\n\n  return {\n    isDevEnv,\n    isDebugEnabled,\n    toggleDevFeatures,\n  };\n}\n","import { Segmented } from 'antd';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nexport function DevMenu() {\n  const { pathname } = useLocation();\n  const navigate = useNavigate();\n\n  const options = [\n    { label: 'Home', value: '/', disabled: pathname === '/' },\n    { label: 'Hub', value: '/hub', disabled: pathname === '/hub' },\n    { label: 'Icons', value: '/dev/icons', disabled: pathname === '/dev/icons' },\n    { label: 'Colors', value: '/dev/colors', disabled: pathname === '/dev/colors' },\n    { label: 'Sprites', value: '/dev/sprites', disabled: pathname === '/dev/sprites' },\n    { label: 'Resources', value: '/dev/resources', disabled: pathname === '/dev/resources' },\n    { label: 'Playground', value: '/dev/playground', disabled: pathname === '/dev/playground' },\n    { label: 'Showcase', value: '/showcase', disabled: pathname === '/showcase' },\n  ];\n\n  const onNavigate = (path: any) => {\n    navigate(path);\n  };\n\n  return <Segmented options={options} defaultValue={pathname} onChange={onNavigate} />;\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { Space } from 'antd';\n// Components\nimport { DevMenu } from './DevMenu';\n\ntype DevHeaderProps = {\n  title: ReactNode;\n  subTitle?: ReactNode;\n  extra?: ReactNode;\n};\n\nexport function DevHeader({ title, subTitle, extra }: DevHeaderProps) {\n  return (\n    <header className=\"dev-header\">\n      <div className=\"dev-header__heading\">\n        <div className=\"dev-header__left\">\n          <span className=\"dev-header__title\">{title} </span>\n          <span className=\"dev-header__subtitle\">{subTitle}</span>\n        </div>\n        <div className=\"dev-header__extra\">\n          <Space className=\"dev-header__extra-space\">{extra}</Space>\n          <DevMenu />\n        </div>\n      </div>\n    </header>\n  );\n}\n","import clsx from 'clsx';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useCopyToClipboard } from 'react-use';\n// Ant Design Resources\nimport { Image, Modal, message, Button, notification, Divider, Typography, Switch, Space, Alert } from 'antd';\n// Adapters\nimport { ADMIN_API } from 'services/adapters';\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useLocalStorage } from 'hooks/useLocalStorage';\n// Constants\nimport { LATEST_GAME_IDS, PUBLIC_URL } from 'utils/constants';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\nimport { Loading } from 'components/loaders';\n\nconst updateLocal24hGameIds = (latestGameIds: PlainObject, newId: GameId) => {\n  const now = Date.now();\n  const past24Hours = now - 1000 * 60 * 60 * 24;\n  const cleanedUpIds = Object.entries(latestGameIds ?? {}).reduce((acc: PlainObject, [key, timestamp]) => {\n    if (timestamp > past24Hours) {\n      acc[key] = timestamp;\n    }\n    return acc;\n  }, {});\n  return {\n    [LATEST_GAME_IDS]: {\n      ...cleanedUpIds,\n      [newId]: now,\n    },\n  };\n};\n\ntype CreateGameModalProps = {\n  gameInfo: GameInfo;\n};\n\nexport function CreateGameModal({ gameInfo }: CreateGameModalProps): JSX.Element {\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n  const [state, copyToClipboard] = useCopyToClipboard();\n\n  const { language, translate } = useLanguage();\n  const { setLoader } = useLoading();\n  const [getLocalStorage, setLocalStorage] = useLocalStorage();\n  const [isVisible, setVisibility] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [gameId, setGameId] = useState(null);\n  const [, setUserId] = useGlobalState('userId');\n  const [, setUserName] = useGlobalState('username');\n  const [, setUserAvatarId] = useGlobalState('userAvatarId');\n  const [options, setOptions] = useState({});\n\n  useEffect(() => {\n    if (state.value && gameId) {\n      message.info(`Copied to clipboard: ${state.value}`);\n    }\n  }, [state, gameId]);\n\n  const onCloseModal = useCallback(() => {\n    setVisibility(false);\n  }, []);\n\n  const onChangeOptions = (key: string, value: boolean) => {\n    setOptions((s) => ({\n      ...s,\n      [key]: value,\n    }));\n  };\n\n  const createGame = async () => {\n    try {\n      setLoader('create', true);\n      setLoading(true);\n      const response: PlainObject = await ADMIN_API.createGame({\n        gameName: gameInfo.gameName,\n        language,\n        options,\n      });\n      if (response.data.gameId) {\n        setGameId(response.data.gameId);\n        setUserId(null);\n        setUserName('');\n        setUserAvatarId('');\n        setLocalStorage(updateLocal24hGameIds(getLocalStorage(LATEST_GAME_IDS), response.data.gameId));\n        const baseUrl = window.location.href.split(pathname)[0];\n        copyToClipboard(`${baseUrl}/${response.data.gameId}`);\n      }\n    } catch (e: any) {\n      notification.error({\n        message: translate(\n          'Aplicativo encontrou um erro ao tentar criar o jogo',\n          'The application found an error while trying to create a game',\n          language\n        ),\n        description: JSON.stringify(e.message),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n      setVisibility(false);\n    } finally {\n      setLoading(false);\n      setLoader('create', false);\n    }\n  };\n\n  const onConfirmGame = () => {\n    if (gameId) {\n      navigate(`/${gameId}`);\n    } else {\n      message.info(\n        translate('Péra! O jogo ainda não foi inicializado.', 'Wait! The game has not been created')\n      );\n    }\n  };\n\n  return (\n    <>\n      <Button type=\"primary\" onClick={() => setVisibility(true)} block>\n        <Translate pt=\"Criar\" en=\"Create\" />\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`${translate('Criando novo jogo', 'Creating new game')}: ${gameInfo.title[language]}`}\n          open={isVisible}\n          onCancel={onCloseModal}\n          onOk={onConfirmGame}\n          okButtonProps={{ disabled: Boolean(!gameId) }}\n          maskClosable={false}\n        >\n          <>\n            <Image\n              alt={gameInfo.title[language]}\n              src={`${PUBLIC_URL.BANNERS}${gameInfo.gameName}-${language}.jpg`}\n              fallback={`${PUBLIC_URL.BANNERS}/em-breve-${language}.jpg`}\n              className=\"round-corners\"\n            />\n\n            <Options\n              options={gameInfo.options}\n              disabled={isLoading || Boolean(gameId)}\n              onChangeOptions={onChangeOptions}\n              selectedOptions={options}\n            />\n\n            <Divider />\n\n            {isLoading && (\n              <>\n                <Instruction>\n                  <Translate pt=\"O jogo está sendo criado...\" en=\"The game session is being created\" />\n                </Instruction>\n                <Loading message={translate('Gerando...', 'Generating...')} margin />\n              </>\n            )}\n\n            {gameInfo.version.startsWith('alpha') && (\n              <Alert\n                type=\"warning\"\n                showIcon\n                message={\n                  <Translate\n                    pt=\"Este jogo está em alpha, não o jogue\"\n                    en=\"This game is still in alpha and shouldn't be played\"\n                  />\n                }\n              />\n            )}\n\n            {gameInfo.version.startsWith('beta') && (\n              <Alert\n                type=\"warning\"\n                showIcon\n                message={\n                  <Translate\n                    pt=\"Este jogo está em beta, prossiga com cuidado\"\n                    en=\"This game is in beta and bugs might be everywhere\"\n                  />\n                }\n              />\n            )}\n\n            {Boolean(gameId) ? (\n              <div>\n                <Title className=\"center\">\n                  <Translate pt=\"Jogo inicializado\" en=\"Game Initialized\" />: {gameId}\n                </Title>\n                <Instruction>\n                  <Translate\n                    pt=\"Pressione OK para ser redirecionadx à página do jogo.\"\n                    en=\"Press OK to be redirected to the game page\"\n                  />\n                </Instruction>\n              </div>\n            ) : (\n              <Space className=\"space-container\" align=\"center\">\n                <Button type=\"primary\" size=\"large\" disabled={isLoading} onClick={createGame}>\n                  <Translate pt=\"Criar Jogo\" en=\"Create Game\" />\n                </Button>\n              </Space>\n            )}\n          </>\n        </Modal>\n      )}\n    </>\n  );\n}\n\ntype OptionsProps = {\n  options?: {\n    label: string;\n    key: string;\n    on?: string;\n    off?: string;\n  }[];\n  disabled: boolean;\n  onChangeOptions: GenericFunction;\n  selectedOptions: PlainObject;\n};\nfunction Options({ options, disabled, onChangeOptions, selectedOptions }: OptionsProps) {\n  return Boolean(options) ? (\n    <div className=\"create-game-modal-options\">\n      <Typography.Title level={5} className=\"create-game-modal-options__title\">\n        <Translate pt=\"Opções:\" en=\"Options:\" />\n      </Typography.Title>\n\n      {options!.map((option, index) => (\n        <Typography.Paragraph key={`option-${option.label}`} className=\"create-game-modal-options__option\">\n          <span className=\"create-game-modal-options__label\">{option.label}</span>\n          <span\n            className={clsx(\n              'create-game-modal-options__off',\n              !selectedOptions[option.key] && 'create-game-modal-options__selected'\n            )}\n          >\n            {option?.off ?? ''}\n          </span>\n          <Switch disabled={disabled} onChange={(e) => onChangeOptions(option.key, e)} />\n          <span\n            className={clsx(\n              'create-game-modal-options__on',\n              selectedOptions[option.key] && 'create-game-modal-options__selected'\n            )}\n          >\n            {option?.on ?? ''}\n          </span>\n        </Typography.Paragraph>\n      ))}\n    </div>\n  ) : (\n    <div className=\"create-game-modal-options create-game-modal-options__no-options\">\n      <Typography.Text>\n        <Translate pt=\"Este jogo não possui customizações\" en=\"This game does not support customizations\" />\n      </Typography.Text>\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Card, Image, Divider, Badge, Space } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { PUBLIC_URL } from 'utils/constants';\nimport { calculateGameAverageDuration, isDevEnv, truncateRecommended } from 'utils/helpers';\n// Components\nimport { RulesModal } from 'components/rules';\nimport { CreateGameModal } from './CreateGameModal';\nimport { GameTags } from 'components/general/GameTags';\nimport { ClockCircleOutlined } from '@ant-design/icons';\n\nconst getVersionColor = (version: string) => {\n  if (version.includes('dev')) {\n    return '#6cb3f6';\n  }\n\n  if (version.includes('alpha')) {\n    return '#F97659';\n  }\n\n  if (version.includes('beta')) {\n    return '#F9D859';\n  }\n\n  const major = Number(version.split('.')[0]);\n\n  if (isNaN(major)) {\n    return '#96A0A3';\n  }\n\n  if (major === 0) {\n    return '#F9D859';\n  }\n\n  if (major === 1) {\n    return '#72D984';\n  }\n\n  if (major === 2) {\n    return '#7CBD51';\n  }\n\n  if (major >= 3) {\n    return '#7CBD51';\n  }\n\n  return '#96A0A3';\n};\n\ntype GameCardProps = {\n  game: GameInfo;\n};\n\nexport function GameCard({ game }: GameCardProps) {\n  const { language, translate } = useLanguage();\n\n  const duration = calculateGameAverageDuration(game);\n\n  return (\n    <Card\n      key={game.gameName}\n      className=\"game-card\"\n      cover={\n        <Badge.Ribbon text={game.version} color={getVersionColor(game.version)}>\n          <Image\n            alt={game.title[language]}\n            src={`${PUBLIC_URL.BANNERS}${game.gameName}-${language}.jpg`}\n            fallback={`${PUBLIC_URL.BANNERS}/em-breve-${language}.jpg`}\n          />\n        </Badge.Ribbon>\n      }\n    >\n      <div className=\"game-card__contents\">\n        <Space direction=\"vertical\">\n          <Card.Meta\n            title={\n              <span className=\"game-card__title\" title={game.title[language]}>\n                {isDevEnv && `[${game.gameCode}]`} {game.title[language]}\n              </span>\n            }\n            description={`${translate('Baseado em', 'Based on')} ${game.basedOn\n              .split('')\n              .reverse()\n              .join('')}`}\n          />\n\n          <Card.Meta className=\"game-card__description\" description={game.summary[language]} />\n\n          {Boolean(game.rules?.[language]?.length > 1) && (\n            <RulesModal\n              gameInfo={game}\n              buttonProps={{ size: 'small', className: 'game-card__margin-bottom' }}\n            />\n          )}\n\n          <GameTags\n            wrap\n            size={[1, 6]}\n            style={{ display: 'flex' }}\n            gameCode={game.gameCode}\n            tags={game.tags}\n          />\n        </Space>\n      </div>\n\n      <div className=\"game-card__actions\">\n        {game.duration && (\n          <Card.Meta\n            description={\n              <>\n                <ClockCircleOutlined /> {duration.min} min - {duration.max} min (Avg: {duration.ideal} min)\n              </>\n            }\n          />\n        )}\n\n        <Divider className=\"game-card__divider\" />\n\n        <Space direction=\"vertical\">\n          <Card.Meta\n            description={translate(\n              `Para ${game.playerCount.min}-${game.playerCount.max} jogadores`,\n              `For ${game.playerCount.min}-${game.playerCount.max} players`\n            )}\n          />\n\n          <Card.Meta\n            className=\"game-card__player-count\"\n            description={translate(\n              `Melhor com ${game.playerCount.best || '?'} jogadores`,\n              `Best wih ${game.playerCount.best || '?'} players`\n            )}\n          />\n\n          <Card.Meta\n            className=\"game-card__player-count game-card__margin-bottom\"\n            description={translate(\n              `Recomendado jogar com ${truncateRecommended(game.playerCount.recommended)}`,\n              `Recommended with ${truncateRecommended(game.playerCount.recommended)}`\n            )}\n          />\n        </Space>\n\n        <div style={{ marginTop: '1rem' }}>\n          {Boolean(game.available[language]) && <CreateGameModal gameInfo={game} />}\n        </div>\n      </div>\n    </Card>\n  );\n}\n","import { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { Alert, Button, Modal } from 'antd';\nimport { useDevFeatures } from 'hooks/useDevFeatures';\nimport { useState } from 'react';\nimport { useEffectOnce } from 'react-use';\n\n/**\n * The emulator only properly works if using the local ip, to allow multi device testing\n * including mobile, this component will display an alert in case the current port is localhost\n */\nexport function DevEmulatorAlert() {\n  const { isDevEnv } = useDevFeatures();\n  const [stay, setStay] = useState(false);\n\n  const ip = process.env.REACT_APP_LOCAL_IP;\n  const displayDevWarningMessage = isDevEnv && window.location.hostname !== ip;\n  const { port, pathname, hash, protocol } = window.location;\n  const newPath = `${ip}:${port}${pathname}/${hash}`.replace('//', '/');\n  const emulatorUrl = `${protocol}//${newPath}`;\n\n  useEffectOnce(() => {\n    if (!stay && isDevEnv && displayDevWarningMessage) {\n      Modal.confirm({\n        title: 'Wrong Dev Environment',\n        icon: <ExclamationCircleOutlined />,\n        content: 'You are in a development environment and not using the emulator.',\n        okText: 'Switch Routes',\n        cancelText: 'Stay in Localhost',\n        onOk: () => {\n          setStay(true);\n          window.location.href = emulatorUrl;\n        },\n      });\n    }\n  });\n\n  if (!isDevEnv) return <></>;\n\n  return (\n    <>\n      {displayDevWarningMessage && (\n        <Alert\n          message={\n            <>\n              You are in a development environment and not using the emulator.{' '}\n              <Button href={emulatorUrl} type=\"link\">\n                Switch Routes\n              </Button>\n            </>\n          }\n          type=\"warning\"\n          showIcon\n          banner\n        />\n      )}\n    </>\n  );\n}\n","import { FilterOutlined } from '@ant-design/icons';\nimport { Checkbox, InputNumber, TreeSelect } from 'antd';\nimport { DefaultOptionType } from 'antd/lib/select';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { capitalize } from 'lodash';\nimport { useMemo } from 'react';\nimport { SEPARATOR, TAG_DICT } from 'utils/constants';\n\nconst { SHOW_PARENT } = TreeSelect;\n\ntype FiltersProps = {\n  setTagFilters: GenericFunction;\n  setNumberFilters: GenericFunction;\n  availabilityCount: number;\n};\nexport function Filters({ availabilityCount, setTagFilters, setNumberFilters }: FiltersProps) {\n  const onNumberFiltersUpdate = (key: string, value: number) => {\n    setNumberFilters((prevState: NumberDictionary) => ({\n      ...prevState,\n      [key]: value,\n    }));\n  };\n\n  return (\n    <div className=\"hub-filters\">\n      <FilterOutlined />({availabilityCount}){' '}\n      <div className=\"hub-filters__entry\">\n        <label>Players</label>\n        <InputNumber\n          min={2}\n          max={12}\n          size=\"small\"\n          className=\"hub-filters__input-number\"\n          onChange={(value) => onNumberFiltersUpdate('players', value ?? 0)}\n        />\n      </div>\n      <div className=\"hub-filters__entry\">\n        <label>Recommended with</label>\n        <Checkbox onChange={(e) => onNumberFiltersUpdate('recommendedWith', Number(e.target?.checked))} />\n      </div>\n      <div className=\"hub-filters__entry\">\n        <label>Best with</label>\n        <Checkbox onChange={(e) => onNumberFiltersUpdate('bestWith', Number(e.target?.checked))} />\n      </div>\n      <div className=\"hub-filters__entry\">\n        <label>Duration</label>\n        <InputNumber\n          min={15}\n          step={15}\n          size=\"small\"\n          className=\"hub-filters__input-number\"\n          onChange={(value) => onNumberFiltersUpdate('duration', value ?? 0)}\n        />\n      </div>\n      <div className=\"hub-filters__entry\">\n        <label>Tags</label>\n        <TagTreeSelect value={undefined} onTreeSelectChange={setTagFilters} />\n      </div>\n    </div>\n  );\n}\n\nfunction TagTreeSelect({ value, onTreeSelectChange }: any) {\n  const { dualTranslate } = useLanguage();\n\n  const onChange = (tags: string[]) => {\n    onTreeSelectChange(\n      tags\n      // .map((tag) => {\n      //   if (tag.includes(SEPARATOR)) {\n      //     return tag.split(SEPARATOR);\n      //   }\n      //   return tag;\n      // })\n      // .flat()\n    );\n  };\n\n  const treeData: DefaultOptionType[] = useMemo(\n    () =>\n      Object.values(\n        Object.keys(TAG_DICT).reduce((acc: any, tagKey: string) => {\n          const tagObj = TAG_DICT[tagKey];\n          if (acc[tagObj.group] === undefined) {\n            acc[tagObj.group] = {\n              title: capitalize(tagObj.group),\n              value: tagObj.group,\n              children: [],\n            };\n          }\n\n          acc[tagObj.group].children.push({\n            title: capitalize(dualTranslate(tagObj.label)),\n            value: `${tagObj.group}${SEPARATOR}${tagKey}`,\n          });\n\n          return acc;\n        }, {})\n      ),\n    [dualTranslate]\n  );\n\n  return (\n    <TreeSelect\n      treeData={treeData}\n      value={value}\n      onChange={onChange}\n      treeCheckable={true}\n      showCheckedStrategy={SHOW_PARENT}\n      placeholder=\"Select Game Tags\"\n      size=\"small\"\n      style={{\n        width: '100%',\n        minWidth: '400px',\n      }}\n    />\n  );\n}\n","import { useMemo, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useEffectOnce, useTitle } from 'react-use';\n// Ant Design Resources\nimport { Typography, Layout, Space, Divider, Button, message, Popconfirm } from 'antd';\nimport { DatabaseFilled } from '@ant-design/icons';\n// API\nimport { signOut } from 'services/firebase';\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLocalStorage } from 'hooks/useLocalStorage';\n// Utils\nimport GAME_LIST from 'utils/info';\n// Components\nimport { GameCard } from './components/GameCard';\nimport { LanguageSwitch, Translate } from 'components/language';\nimport { DevHeader } from 'pages/Dev/DevHeader';\nimport { DevEmulatorAlert } from './components/DevEmulatorAlert';\nimport { Filters } from './components/Filters';\nimport { SEPARATOR, TAG_RULES } from 'utils/constants';\nimport { calculateGameAverageDuration, isDevEnv } from 'utils/helpers';\n\n// const TAGS_BY_TAG_GROUP = Object.keys(TAG_DICT).reduce((acc: Record<string, string[]>, key) => {\n//   if (acc[TAG_DICT[key].group] === undefined) {\n//     acc[TAG_DICT[key].group] = [];\n//   }\n//   acc[TAG_DICT[key].group].push(key);\n//   return acc;\n// }, {});\n\nfunction Hub() {\n  useTitle('Hub - Tarde Divertida');\n\n  const navigate = useNavigate();\n  const { language } = useLanguage();\n  const [getLocalStorage] = useLocalStorage();\n  const [, setLanguage] = useGlobalState('language');\n  const [, setIsAuthenticated] = useGlobalState('isAuthenticated');\n  const [tagFilters, setTagFilters] = useState<string[]>([]);\n  const [numberFilters, setNumberFilters] = useState<NumberDictionary>({});\n\n  useEffectOnce(() => {\n    const prevLanguage = getLocalStorage('language');\n    if (prevLanguage) {\n      setLanguage(prevLanguage);\n    }\n  });\n\n  const onSignOut = async () => {\n    try {\n      await signOut();\n      setIsAuthenticated(false);\n\n      navigate('/');\n    } catch (error: any) {\n      message.error('Something went wrong', error);\n    }\n  };\n\n  const gameList = useMemo(\n    () =>\n      Object.values(GAME_LIST).filter((game) => {\n        let result = [];\n\n        // Check player count\n        if (numberFilters.players) {\n          result.push(\n            game.playerCount.min <= numberFilters.players && game.playerCount.max >= numberFilters.players\n          );\n\n          if (numberFilters.bestWith) {\n            result.push(numberFilters.players === game.playerCount.best);\n          }\n\n          if (numberFilters.recommendedWith) {\n            result.push(game.playerCount.recommended.includes(numberFilters.players));\n          }\n        }\n\n        // Check tags\n        // TODO: this does not account for tagGroups and concurrent tags\n        tagFilters.forEach((tagKey) => {\n          const [tagGroup, tag] = tagKey.split(SEPARATOR);\n\n          if (tagGroup && tag && TAG_RULES?.[tagGroup] === 'exclusive') {\n            result.push(game.tags.includes(tag));\n          } else if (tag) {\n            result.push(game.tags.includes(tag));\n          }\n        });\n\n        // Check time\n        if (numberFilters.duration) {\n          const duration = calculateGameAverageDuration(game, numberFilters.players ?? 0);\n\n          if (numberFilters.players) {\n            result.push(\n              numberFilters.duration >= duration.customTime - 10 &&\n                numberFilters.duration <= duration.customTime + 10\n            );\n          } else {\n            result.push(numberFilters.duration >= duration.min && numberFilters.duration <= duration.max);\n          }\n        }\n\n        return result.every(Boolean);\n      }),\n    [tagFilters, numberFilters]\n  );\n\n  const { availableGames, comingSoonGames, devGames } = useMemo(() => {\n    const sortedGameList = gameList.sort((a, b) => (a.title[language] > b.title[language] ? 1 : -1));\n\n    return sortedGameList.reduce(\n      (acc: any, game) => {\n        if (game.available[language]) {\n          if (['alpha', 'dev'].includes(game.version) || game.version.startsWith('beta')) {\n            acc.devGames.push(game);\n          } else {\n            acc.availableGames.push(game);\n          }\n        } else {\n          acc.comingSoonGames.push(game);\n        }\n        return acc;\n      },\n      {\n        availableGames: [],\n        devGames: [],\n        comingSoonGames: [],\n      }\n    );\n  }, [gameList, language]);\n\n  return (\n    <Layout className=\"dev-layout\">\n      <DevHeader\n        title={\n          <>\n            <DatabaseFilled /> Hub\n          </>\n        }\n        subTitle={<Translate pt=\"Selecione um jogo para começar\" en=\"Select a game to start\" />}\n        extra={[\n          <LanguageSwitch key=\"language-switch\" />,\n          <Popconfirm\n            title={<Translate pt=\"Tem certeza?\" en=\"Are you sure?\" />}\n            onConfirm={onSignOut}\n            key=\"logout-button\"\n          >\n            <Button danger ghost key=\"logout-button\" size=\"small\">\n              Logout\n            </Button>\n          </Popconfirm>,\n        ]}\n      />\n\n      <DevEmulatorAlert />\n\n      <Filters\n        setTagFilters={setTagFilters}\n        setNumberFilters={setNumberFilters}\n        availabilityCount={availableGames.length}\n      />\n\n      <Layout.Content className=\"container\" id=\"main-container\">\n        {isDevEnv && (\n          <>\n            <Typography.Title level={2}>\n              <Translate pt=\"Em Desenvolvimento\" en=\"Under Development\" />\n            </Typography.Title>\n            <Space size={[8, 16]} wrap align=\"start\" className=\"game-card-collection\">\n              {devGames.map((game: GameInfo, index: number) => (\n                <GameCard key={`${game.gameCode}-${index}`} game={game} />\n              ))}\n            </Space>\n            <Divider />\n          </>\n        )}\n        <Typography.Title level={2}>\n          <Translate pt=\"Disponíveis\" en=\"Available\" />\n        </Typography.Title>\n        <Space size={[8, 16]} wrap align=\"start\" className=\"game-card-collection\">\n          {availableGames.map((game: GameInfo, index: number) => (\n            <GameCard key={`${game.gameCode}-${index}`} game={game} />\n          ))}\n        </Space>\n        <Divider />\n        {!isDevEnv && (\n          <>\n            <Typography.Title level={2}>\n              <Translate pt=\"Em Desenvolvimento\" en=\"Under Development\" />\n            </Typography.Title>\n            <Space size={[8, 16]} wrap align=\"start\" className=\"game-card-collection\">\n              {devGames.map((game: GameInfo, index: number) => (\n                <GameCard key={`${game.gameCode}-${index}`} game={game} />\n              ))}\n            </Space>\n            <Divider />\n          </>\n        )}\n        <Typography.Title level={2}>\n          <Translate pt=\"Em Breve\" en=\"Coming Soon\" />\n        </Typography.Title>\n        <Space size={[8, 16]} wrap align=\"start\" className=\"game-card-collection\">\n          {comingSoonGames.map((game: GameInfo, index: number) => (\n            <GameCard key={`${game.gameCode}-${index}`} game={game} />\n          ))}\n        </Space>\n      </Layout.Content>\n    </Layout>\n  );\n}\n\nexport default Hub;\n","import { functions } from 'services/firebase';\nimport { httpsCallable } from 'firebase/functions';\n\nexport const GAME_API = {\n  loadGame: httpsCallable(functions, 'loadGame'),\n  addPlayer: httpsCallable(functions, 'addPlayer'),\n  makePlayerReady: httpsCallable(functions, 'makePlayerReady'),\n  rateGame: httpsCallable(functions, 'rateGame'),\n};\n\nexport const ADMIN_API = {\n  createGame: httpsCallable(functions, 'createGame'),\n  lockGame: httpsCallable(functions, 'lockGame'),\n  performAdminAction: httpsCallable(functions, 'performAdminAction'),\n};\n\nexport const ARTE_RUIM_API = {\n  submitAction: httpsCallable(functions, 'arteRuimSubmitAction'),\n};\n\nexport const COMUNICACAO_ALIENIGENA_API = {\n  submitAction: httpsCallable(functions, 'comunicacaoAlienigenaSubmitAction'),\n};\n\nexport const CONTADORES_HISTORIAS_API = {\n  submitAction: httpsCallable(functions, 'contadoresHistoriasSubmitAction'),\n};\n\nexport const CRIMES_HEDIONDOS_API = {\n  submitAction: httpsCallable(functions, 'crimesHediondosSubmitAction'),\n};\n\nexport const CRUZA_PALAVRAS_API = {\n  submitAction: httpsCallable(functions, 'cruzaPalavrasSubmitAction'),\n};\n\nexport const DETETIVES_IMAGINATIVOS_API = {\n  submitAction: httpsCallable(functions, 'detetivesImaginativosSubmitAction'),\n};\n\nexport const ESPIAO_ENTRE_NOS_API = {\n  submitAction: httpsCallable(functions, 'espiaoEntreNosSubmitAction'),\n};\n\nexport const GALERIA_DE_SONHOS_API = {\n  submitAction: httpsCallable(functions, 'galeriaDeSonhosSubmitAction'),\n};\n\nexport const LINHAS_CRUZADAS_API = {\n  submitAction: httpsCallable(functions, 'linhasCruzadasSubmitAction'),\n};\n\nexport const MEGAMIX_API = {\n  submitAction: httpsCallable(functions, 'megamixSubmitAction'),\n};\n\nexport const MENTE_COLETIVA_API = {\n  submitAction: httpsCallable(functions, 'menteColetivaSubmitAction'),\n};\n\nexport const NA_RUA_DO_MEDO_API = {\n  submitAction: httpsCallable(functions, 'naRuaDoMedoSubmitAction'),\n};\n\nexport const ONDA_TELEPATICA_API = {\n  submitAction: httpsCallable(functions, 'ondaTelepaticaSubmitAction'),\n};\n\nexport const POLEMICA_DA_VEZ_API = {\n  submitAction: httpsCallable(functions, 'polemicaDaVezSubmitAction'),\n};\n\nexport const PORTA_DOS_DESESPERADOS = {\n  submitAction: httpsCallable(functions, 'portaDosDesesperadosSubmitAction'),\n};\n\nexport const QUEM_NAO_MATA_API = {\n  submitAction: httpsCallable(functions, 'quemNaoMataSubmitAction'),\n};\n\nexport const QUEM_SOU_EU_API = {\n  submitAction: httpsCallable(functions, 'quemSouEuSubmitAction'),\n};\n\nexport const RETRATO_FALADO_API = {\n  submitAction: httpsCallable(functions, 'retratoFaladoSubmitAction'),\n};\n\nexport const SONHOS_PESADELOS_API = {\n  submitAction: httpsCallable(functions, 'sonhosPesadelosSubmitAction'),\n};\n\nexport const SUPER_CAMPEONATO_API = {\n  submitAction: httpsCallable(functions, 'superCampeonatoSubmitAction'),\n};\n\nexport const TESTEMUNHA_OCULAR_API = {\n  submitAction: httpsCallable(functions, 'testemunhaOcularSubmitAction'),\n};\n\nexport const TREVO_DA_SORTE_API = {\n  submitAction: httpsCallable(functions, 'trevoDaSorteSubmitAction'),\n};\n\nexport const UE_SO_ISSO_API = {\n  submitAction: httpsCallable(functions, 'ueSoIssoSubmitAction'),\n};\n\nexport const VAMOS_AO_CINEMA_API = {\n  submitAction: httpsCallable(functions, 'vamosAoCinemaSubmitAction'),\n};\n\nexport const VENDAVAL_DE_PALPITE_API = {\n  submitAction: httpsCallable(functions, 'vendavalDePalpiteSubmitAction'),\n};\n"],"names":["GameTags","tags","gameCode","rest","language","useLanguage","sortedTags","forEach","tag","undefined","TAG_DICT","index","length","push","filter","v","Boolean","sortTags","wrap","map","color","label","CollapsibleRule","children","title","contained","ghost","header","pt","en","custom","PopoverRule","content","showLabel","type","position","icon","ReadOutlined","buttonProps","RulesCarousel","info","className","ruleClassName","actionsClassName","ref","createRef","useKeyPressEvent","current","prev","next","clsx","autoplay","autoplaySpeed","rules","rule","src","PUBLIC_URL","gameName","fallback","alt","onClick","size","DoubleLeftOutlined","DoubleRightOutlined","RulesList","RulesModal","gameInfo","translate","useState","isVisible","setVisibility","onCloseModal","open","onCancel","footer","Instruction","white","fullWidth","baseClass","RoundsLeftInstruction","round","left","total","forceLastRound","pluralize","TextHighlight","Title","level","useDevFeatures","useGlobalState","isDebugEnabled","setIsDebugEnabled","isDevEnv","toggleDevFeatures","s","DevMenu","pathname","useLocation","navigate","useNavigate","options","value","disabled","defaultValue","onChange","path","DevHeader","subTitle","extra","updateLocal24hGameIds","latestGameIds","newId","now","Date","past24Hours","cleanedUpIds","Object","entries","reduce","acc","key","timestamp","LATEST_GAME_IDS","CreateGameModal","useCopyToClipboard","state","copyToClipboard","setLoader","useLoading","useLocalStorage","getLocalStorage","setLocalStorage","isLoading","setLoading","gameId","setGameId","setUserId","setUserName","setUserAvatarId","setOptions","useEffect","message","useCallback","createGame","ADMIN_API","response","data","baseUrl","window","location","href","split","notification","description","JSON","stringify","placement","console","error","block","onOk","okButtonProps","maskClosable","Options","onChangeOptions","selectedOptions","margin","version","startsWith","showIcon","align","option","off","e","on","getVersionColor","includes","major","Number","isNaN","GameCard","game","duration","calculateGameAverageDuration","cover","text","direction","basedOn","reverse","join","summary","style","display","ClockCircleOutlined","min","max","ideal","playerCount","best","truncateRecommended","recommended","marginTop","available","DevEmulatorAlert","stay","setStay","ip","process","displayDevWarningMessage","hostname","port","hash","protocol","newPath","replace","emulatorUrl","useEffectOnce","Modal","ExclamationCircleOutlined","okText","cancelText","banner","SHOW_PARENT","TreeSelect","Filters","availabilityCount","setTagFilters","setNumberFilters","onNumberFiltersUpdate","prevState","FilterOutlined","target","checked","step","TagTreeSelect","onTreeSelectChange","dualTranslate","treeData","useMemo","values","keys","tagKey","tagObj","group","capitalize","SEPARATOR","treeCheckable","showCheckedStrategy","placeholder","width","minWidth","useTitle","setLanguage","setIsAuthenticated","tagFilters","numberFilters","prevLanguage","onSignOut","signOut","gameList","GAME_LIST","result","players","bestWith","recommendedWith","tagGroup","TAG_RULES","customTime","every","sort","a","b","devGames","availableGames","comingSoonGames","DatabaseFilled","onConfirm","danger","id","GAME_API","loadGame","httpsCallable","functions","addPlayer","makePlayerReady","rateGame","lockGame","performAdminAction","ARTE_RUIM_API","submitAction","COMUNICACAO_ALIENIGENA_API","CONTADORES_HISTORIAS_API","CRIMES_HEDIONDOS_API","CRUZA_PALAVRAS_API","DETETIVES_IMAGINATIVOS_API","ESPIAO_ENTRE_NOS_API","GALERIA_DE_SONHOS_API","LINHAS_CRUZADAS_API","MEGAMIX_API","MENTE_COLETIVA_API","NA_RUA_DO_MEDO_API","ONDA_TELEPATICA_API","POLEMICA_DA_VEZ_API","PORTA_DOS_DESESPERADOS","QUEM_NAO_MATA_API","QUEM_SOU_EU_API","RETRATO_FALADO_API","SONHOS_PESADELOS_API","SUPER_CAMPEONATO_API","TESTEMUNHA_OCULAR_API","TREVO_DA_SORTE_API","UE_SO_ISSO_API","VAMOS_AO_CINEMA_API","VENDAVAL_DE_PALPITE_API"],"sourceRoot":""}