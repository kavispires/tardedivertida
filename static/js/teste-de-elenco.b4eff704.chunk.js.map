{"version":3,"file":"static/js/teste-de-elenco.b4eff704.chunk.js","mappings":"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","sources":["components/general/Container.tsx","games/teste-de-elenco/utils/api-requests.ts","games/teste-de-elenco/utils/helpers.ts","games/teste-de-elenco/StepSelectGenre.tsx","games/teste-de-elenco/PhaseMovieGenreSelection.tsx","games/teste-de-elenco/components/ActorsBoard.tsx","games/teste-de-elenco/components/RoleBoard.tsx","games/teste-de-elenco/StepSelectActor.tsx","games/teste-de-elenco/PhaseActorSelection.tsx","games/teste-de-elenco/StepRanking.tsx","games/teste-de-elenco/components/ActorsSelections.tsx","games/teste-de-elenco/StepResult.tsx","games/teste-de-elenco/PhaseResult.tsx","games/teste-de-elenco/PhaseGameOver.tsx","games/teste-de-elenco/SessionTesteDeElenco.tsx","games/teste-de-elenco/utils/achievements.ts","icons/CrownIcon.tsx","icons/NoIcon.tsx","../node_modules/@ant-design/icons-svg/es/asn/DownCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/DownCircleOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/UpCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/UpCircleOutlined.js"],"sourcesContent":["import { ReactNode } from 'react';\nimport clsx from 'clsx';\n// Ant Design Resources\nimport { Space, SpaceProps } from 'antd';\n// Components\nimport { Title, TitleProps } from 'components/text';\n// Sass\nimport './Container.scss';\n\ntype ContainerProps = {\n  title: ReactNode;\n  children: ReactNode;\n  contained?: boolean;\n  className?: string;\n  titleProps?: TitleProps;\n  childrenContainerProps?: SpaceProps;\n} & Omit<SpaceProps, 'title' | 'children'>;\n\n/**\n * Container component with title and center aligned children\n */\nexport function Container({\n  title,\n  children,\n  className,\n  contained,\n  titleProps,\n  childrenContainerProps,\n  ...spaceProps\n}: ContainerProps) {\n  const { level = 4, size = 'xx-small', ...restTitleProps } = titleProps ?? {};\n\n  const {\n    className: childrenClassName,\n    wrap = true,\n    direction: childrenDirection = 'horizontal',\n    ...restChildrenContainerProps\n  } = childrenContainerProps ?? {};\n\n  return (\n    <Space direction=\"vertical\" className={clsx('container-wrapper', className)} {...spaceProps}>\n      <Title level={level} size={size} {...restTitleProps}>\n        {title}\n      </Title>\n\n      <Space\n        direction={childrenDirection}\n        wrap={wrap}\n        className={clsx(\n          'container-wrapper__children',\n          contained && 'container-wrapper__children--contained',\n          childrenClassName\n        )}\n        {...restChildrenContainerProps}\n      >\n        {children}\n      </Space>\n    </Space>\n  );\n}\n","import { functions } from 'services/firebase';\nimport { httpsCallable } from 'firebase/functions';\nimport { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\n\nconst submitAction = httpsCallable(functions, 'testeDeElencoSubmitAction');\n\nexport function useOnSubmitMovieGenreAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: submitAction,\n    actionName: 'submit-genre',\n    onSuccess: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: translate('Gênero submetido com sucesso', 'Genre submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua ação',\n      'Oops, the application found an error while trying to submit your action'\n    ),\n  });\n\n  return (payload: SubmitMovieGenrePayload) => {\n    request({\n      action: 'SELECT_MOVIE_GENRE',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitMovieActorAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: submitAction,\n    actionName: 'submit-genre',\n    onSuccess: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: translate('Ator submetido com sucesso', 'Actor submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua ação',\n      'Oops, the application found an error while trying to submit your action'\n    ),\n  });\n\n  return (payload: SubmitMovieActorPayload) => {\n    request({\n      action: 'SELECT_ACTOR',\n      ...payload,\n    });\n  };\n}\n","import { MovieComedyIcon } from 'icons/MovieComedyIcon';\nimport { MovieActionIcon } from 'icons/MovieActionIcon';\nimport { MovieDramaIcon } from 'icons/MovieDramaIcon';\nimport { MovieHorrorIcon } from 'icons/MovieHorrorIcon';\nimport { MovieSciFiIcon } from 'icons/MovieSciFiIcon';\n\nexport const Icons: Record<string, any> = {\n  ACTION: MovieActionIcon,\n  COMEDY: MovieComedyIcon,\n  DRAMA: MovieDramaIcon,\n  HORROR: MovieHorrorIcon,\n  SCI_FI: MovieSciFiIcon,\n};\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { getRandomItem } from 'utils/helpers';\nimport { Icons } from './utils/helpers';\n// Icons\nimport { MovieGenreIcon } from 'icons/MovieGenreIcon';\n// Components\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { DualTranslate, Translate } from 'components/language';\nimport { TransparentButton } from 'components/buttons';\nimport { IconAvatar } from 'components/avatars';\n\ntype StepSelectGenreProps = {\n  user: GamePlayer;\n  genres: MovieGenreOption[];\n  onSubmitGenre: (payload: SubmitMovieGenrePayload) => void;\n} & AnnouncementProps;\n\nexport function StepSelectGenre({ user, announcement, genres, onSubmitGenre }: StepSelectGenreProps) {\n  const { isLoading } = useLoading();\n\n  useMock(() => {\n    onSubmitGenre({ genre: getRandomItem(genres).key });\n  });\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title>\n        <Translate pt={<>Selecione o gênero do filme</>} en={<>Select the movie genre</>} />\n      </Title>\n\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Somos diretores de elenco tentando determinar o elenco para um filme! Haverá 5 papéis para\n              escalar, mas primeiro precisamos decidir qual é o gênero do filme em que vamos trabalhar!\n            </>\n          }\n          en={\n            <>\n              We are casting directors trying to determine the cast for a movie! There will be 5 roles to\n              cast, but we first need to decide what genre is the movie we'll be working on!\n            </>\n          }\n        />\n      </Instruction>\n\n      <Space className=\"movie-genre-selection\">\n        {genres.map((genre) => {\n          const Icon = Icons?.[genre.key] ?? MovieGenreIcon;\n          return (\n            <TransparentButton\n              key={genre.key}\n              onClick={() => onSubmitGenre({ genre: genre.key })}\n              disabled={isLoading || user.ready}\n              className=\"movie-genre-selection__button\"\n            >\n              <IconAvatar icon={<Icon />} size={64} />\n              <DualTranslate>{genre.title}</DualTranslate>\n            </TransparentButton>\n          );\n        })}\n      </Space>\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitMovieGenreAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { MovieGenreIcon } from 'icons/MovieGenreIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\nimport { StepSelectGenre } from './StepSelectGenre';\n\nexport function PhaseMovieGenreSelection({ players, state, info }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, setStep } = useStep();\n\n  const onSubmitGenre = useOnSubmitMovieGenreAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<MovieGenreIcon />}\n      title={<Translate pt=\"Seleção do Gênero do Filme\" en=\"Movie Genre Selection\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <Instruction>\n        <Translate\n          pt={\n            <>\n              Somos diretores de elenco tentando determinar o elenco para um filme! Haverá 5 papéis para\n              escalar, mas primeiro precisamos decidir qual é o gênero do filme em que vamos trabalhar!\n            </>\n          }\n          en={\n            <>\n              We are casting directors trying to determine the cast for a movie! There will be 5 roles to\n              cast, but we first need to decide what genre is the movie we'll be working on!\n            </>\n          }\n        />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.TESTE_DE_ELENCO.MOVIE_GENRE_SELECTION}\n    >\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepSelectGenre\n          user={user}\n          onSubmitGenre={onSubmitGenre}\n          genres={state.genres}\n          announcement={announcement}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","// Ant Design Resources\nimport { Popconfirm, Space } from 'antd';\nimport { TransparentButton } from 'components/buttons';\nimport { SuspectCard } from 'components/cards/SuspectCard';\n\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\n\ntype ActorsBoardProps = {\n  actors: ActingRole['candidates'];\n  selection: CardId[];\n  user: GamePlayer;\n  onSubmitActor: (payload: SubmitMovieActorPayload) => void;\n};\n\nexport function ActorsBoard({ actors, user, onSubmitActor, selection }: ActorsBoardProps) {\n  const cardWidth = useCardWidth(4, { gap: 16, minWidth: 80, maxWidth: 150, margin: 16 });\n  const { isLoading } = useLoading();\n  const { language, translate } = useLanguage();\n\n  return (\n    <Space className=\"actors-board space-container\" wrap>\n      {selection.map((actorId) => {\n        const actor = actors[actorId];\n        const name = actor.name[language];\n\n        return (\n          <Popconfirm\n            key={actor.id}\n            title={translate(\n              `Tem certeza que quer escolher ${name}?`,\n              `Are you sure you want to choose ${name}?`\n            )}\n            onConfirm={() => onSubmitActor({ actorId: actor.id })}\n            okText={translate('Sim', 'Yes')}\n            cancelText={translate('Não', 'No')}\n            disabled={isLoading || user.ready}\n          >\n            <TransparentButton\n              className=\"characters-table__character characters-table__character-button\"\n              disabled={isLoading || user.ready}\n            >\n              <SuspectCard suspect={actor} width={cardWidth} />\n            </TransparentButton>\n          </Popconfirm>\n        );\n      })}\n    </Space>\n  );\n}\n","// Ant Design Resources\nimport { Space, Avatar as AntAvatar } from 'antd';\n// Utils\nimport { pluralize } from 'utils/helpers';\nimport { Icons } from '../utils/helpers';\n// Icons\nimport { MovieGenreIcon } from 'icons/MovieGenreIcon';\nimport { NoIcon } from 'icons/NoIcon';\n// Components\nimport { Instruction, TextHighlight, Title } from 'components/text';\nimport { DualTranslate, Translate } from 'components/language';\nimport { IconAvatar } from 'components/avatars';\n\ntype RoleBoardProps = {\n  movie?: FeatureFilm;\n  activeRole: ActingRole;\n  instruction: 'SELECT' | 'RESULT' | 'CAST';\n  children?: React.ReactNode;\n  outcome?: string;\n};\n\nexport function RoleBoard({ activeRole, instruction, movie, children, outcome }: RoleBoardProps) {\n  const traitCount = activeRole.traits.length;\n\n  const movieId = movie?.id ?? '';\n  const Icon = Icons?.[movieId] ?? MovieGenreIcon;\n\n  return (\n    <Space wrap>\n      <Space className=\"role\" direction=\"vertical\" align=\"center\">\n        {movie && (\n          <>\n            <Icon width={75} />\n            <Title size=\"small\" className=\"role__title\">\n              <DualTranslate>{movie.title}</DualTranslate>\n            </Title>\n          </>\n        )}\n        {children}\n      </Space>\n\n      <Space className=\"role\" direction=\"vertical\">\n        {instruction !== 'CAST' && (\n          <div className=\"role__round\">\n            <AntAvatar size=\"large\" style={{ backgroundColor: 'orange' }}>\n              {instruction === 'SELECT' || outcome === 'CAST' ? activeRole.round : activeRole.round - 1}\n            </AntAvatar>\n          </div>\n        )}\n        <Title size=\"small\" className=\"role__title\">\n          <DualTranslate>{activeRole.title}</DualTranslate>\n        </Title>\n        <Instruction className=\"role__description\">\n          \"<DualTranslate>{activeRole.description}</DualTranslate>\"\n        </Instruction>\n\n        <Instruction className=\"role__instructions\">\n          {instruction === 'SELECT' && (\n            <Translate\n              pt={\n                <>\n                  Selecione o ator que mais combina com{' '}\n                  {pluralize(traitCount, 'a característica', 'as características')} abaixo:\n                </>\n              }\n              en={<>Select the actor that best fits the {pluralize(traitCount, 'trait')} below:</>}\n            />\n          )}\n\n          {instruction === 'RESULT' && (\n            <Translate\n              pt=\"Esses são as características para esse papel:\"\n              en=\"These are the traits for this role:\"\n            />\n          )}\n\n          {instruction === 'CAST' && !activeRole.cast && (\n            <div className=\"role__cancelled\">\n              <IconAvatar icon={<NoIcon />} />{' '}\n              <Translate\n                pt=\"Papel cancelado por falta de atores competentes\"\n                en=\"Role canceled due to lack of competent actors\"\n              />\n            </div>\n          )}\n        </Instruction>\n\n        <Instruction className=\"role__traits\">\n          <ul>\n            {activeRole.traits.map((trait, index) => {\n              if (index === traitCount - 1 && instruction === 'RESULT' && outcome === 'CONTINUE') {\n                return <></>;\n              }\n              return (\n                <li key={trait}>\n                  <TextHighlight>{trait}</TextHighlight>\n                </li>\n              );\n            })}\n          </ul>\n        </Instruction>\n      </Space>\n    </Space>\n  );\n}\n","// Hooks\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { getRandomItem } from 'utils/helpers';\n// Components\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { ActorsBoard } from './components/ActorsBoard';\nimport { RoleBoard } from './components/RoleBoard';\nimport { PointsHighlight } from 'components/metrics/PointsHighlight';\n\ntype StepSelectActorProps = {\n  user: GamePlayer;\n  activeRole: ActingRole;\n  onSubmitActor: (payload: SubmitMovieActorPayload) => void;\n  movie: FeatureFilm;\n} & AnnouncementProps;\n\nexport function StepSelectActor({\n  user,\n  announcement,\n  activeRole,\n  onSubmitActor,\n  movie,\n}: StepSelectActorProps) {\n  useMock(() => {\n    onSubmitActor({ actorId: getRandomItem(activeRole.selection) });\n  });\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title size=\"x-small\">\n        <Translate pt={<>Selecione um ator!</>} en={<>Cast a role:</>} />\n      </Title>\n\n      <RoleBoard activeRole={activeRole} instruction=\"SELECT\" movie={movie} />\n\n      <ActorsBoard\n        actors={activeRole.candidates}\n        selection={activeRole.selection}\n        user={user}\n        onSubmitActor={onSubmitActor}\n      />\n\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Se um ator receber mais de 50% dos votos, ele será escolhido para o papel!\n              <br />\n              Caso contrário, o papel vai o final da fila e vamos reselecioná-lo na próxima rodada.\n              <br />\n              Você ganha <PointsHighlight>1</PointsHighlight> por cada jogador que escolher o mesmo ator que\n              você.\n            </>\n          }\n          en={\n            <>\n              If an actor receives more than 50% of the votes, he will be chosen for the role!\n              <br />\n              Otherwise, the role goes to the end of the queue and we will reselect it in the next round.\n              <br />\n              You earn <PointsHighlight>1</PointsHighlight> for each player who chooses the same actor as you.\n            </>\n          }\n        />\n      </Instruction>\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitMovieActorAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { SofaIcon } from 'icons/SofaIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction, TextHighlight } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { DualTranslate, Translate } from 'components/language';\nimport { StepSelectActor } from './StepSelectActor';\n\nexport function PhaseActorSelection({ players, state, info }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, setStep } = useStep();\n\n  const onSubmitActor = useOnSubmitMovieActorAPIRequest(setStep);\n\n  const activeRole = state.movie.roles[state.activeRoleId];\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<SofaIcon />}\n      title={\n        <>\n          <Translate pt=\"Seleção\" en=\"Actor Selection\" />: <DualTranslate>{activeRole.title}</DualTranslate>\n        </>\n      }\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <Instruction>\n        <Translate pt={<>Quem vai ser o</>} en={<>Who is the best choice for</>} />\n        <TextHighlight>\n          <DualTranslate>{activeRole.description}</DualTranslate>\n        </TextHighlight>\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.TESTE_DE_ELENCO.ACTOR_SELECTION}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepSelectActor\n          user={user}\n          activeRole={activeRole}\n          onSubmitActor={onSubmitActor}\n          announcement={announcement}\n          movie={state.movie}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Components\nimport { Translate } from 'components/language';\nimport { StepRankingWrapper } from 'components/ranking';\nimport { VIPNextPhaseButton } from 'components/vip';\n\ntype StepRankingProps = {\n  players: GamePlayers;\n  round: GameRound;\n  ranking: GameRanking;\n  goToPreviousStep: GenericFunction;\n};\n\nexport function StepRanking({ players, ranking, goToPreviousStep, round }: StepRankingProps) {\n  return (\n    <StepRankingWrapper\n      players={players}\n      ranking={ranking}\n      gainedPointsDescriptions={[\n        <Translate pt=\"Adivinhou corretamente\" en=\"Correct guess\" />,\n        <Translate pt=\"Era o alvo e foi adivinhado corretamente\" en=\"Was guessed correctly\" />,\n      ]}\n    >\n      <Space className=\"space-container\" align=\"center\">\n        <Button onClick={goToPreviousStep}>\n          <Translate pt=\"Ver resultado novamente\" en=\"See results again\" />\n        </Button>\n      </Space>\n      <VIPNextPhaseButton round={round} />\n    </StepRankingWrapper>\n  );\n}\n","// Ant Design Resources\nimport { Avatar as AntAvatar, Space } from 'antd';\nimport { Avatar } from 'components/avatars';\nimport { SuspectCard } from 'components/cards/SuspectCard';\n\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useMemo } from 'react';\n\ntype ActorsSelectionsProps = {\n  actors: ActingRole['candidates'];\n  selection: CardId[];\n  players: GamePlayers;\n};\n\nexport function ActorsSelections({ actors, players, selection }: ActorsSelectionsProps) {\n  const cardWidth = useCardWidth(4, { gap: 16, minWidth: 80, maxWidth: 150, margin: 16 });\n\n  const playersSelections = useMemo(() => {\n    return Object.values(players).reduce((acc: Record<CardId, PlayerId[]>, player) => {\n      if (acc[player.actorId] === undefined) {\n        acc[player.actorId] = [];\n      }\n      acc[player.actorId].push(player.id);\n      return acc;\n    }, {});\n  }, [players]);\n\n  return (\n    <Space className=\"actors-board space-container\" wrap>\n      {selection.map((actorId) => {\n        const actor = actors[actorId];\n\n        return (\n          <Space key={actor.id} className=\"actors-board__actor\" direction=\"vertical\">\n            <Space className=\"space-container\">\n              <AntAvatar.Group maxCount={7}>\n                {playersSelections[actorId].map((playerId) => (\n                  <Avatar\n                    id={players[playerId].avatarId}\n                    key={`actor-avatar-${players[playerId].avatarId}`}\n                  />\n                ))}\n              </AntAvatar.Group>\n            </Space>\n\n            <SuspectCard suspect={actor} width={cardWidth} />\n          </Space>\n        );\n      })}\n    </Space>\n  );\n}\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Components\nimport { Step } from 'components/steps';\nimport { Instruction, TextHighlight, Title } from 'components/text';\nimport { DualTranslate, Translate } from 'components/language';\nimport { RoleBoard } from './components/RoleBoard';\nimport { TimedButton } from 'components/buttons';\nimport { SuspectCard } from 'components/cards/SuspectCard';\nimport { ImageCard } from 'components/image-cards';\nimport { ActorsSelections } from './components/ActorsSelections';\n\ntype StepResultProps = {\n  user: GamePlayer;\n  activeRole: ActingRole;\n  outcome: string;\n  players: GamePlayers;\n  goToNextStep: GenericFunction;\n} & AnnouncementProps;\n\nexport function StepResult({\n  user,\n  announcement,\n  activeRole,\n  goToNextStep,\n  outcome,\n  players,\n}: StepResultProps) {\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title size=\"x-small\">\n        <Translate pt=\"Resultado\" en=\"Results\" />\n      </Title>\n\n      <RoleBoard activeRole={activeRole} instruction=\"RESULT\" outcome={outcome}>\n        {outcome === 'CAST' ? (\n          <SuspectCard suspect={activeRole.candidates[activeRole.actor]} width={120} />\n        ) : (\n          <ImageCard imageId=\"us-unknown\" cardWidth={120} preview={false} />\n        )}\n      </RoleBoard>\n\n      <Instruction contained>\n        {outcome === 'CONTINUE' && (\n          <Translate\n            pt=\"Os diretores não chegaram num consenso. Aqui estão os atores selecionados para a próxima fase:\"\n            en=\"The directors did not reach a consensus. Here are the selected actors for the next phase:\"\n          />\n        )}\n        {outcome === 'CAST' && (\n          <Translate\n            pt={\n              <>\n                <TextHighlight>\n                  <DualTranslate>{activeRole.candidates[activeRole.actor].name}</DualTranslate>\n                </TextHighlight>{' '}\n                foi escolhido(a) para o papel!\n              </>\n            }\n            en={\n              <>\n                <TextHighlight>\n                  <DualTranslate>{activeRole.candidates[activeRole.actor].name}</DualTranslate>\n                </TextHighlight>{' '}\n                was chosen for the role!\n              </>\n            }\n          />\n        )}\n        {outcome === 'FAIL' && (\n          <Translate\n            pt=\"Deu ruim! Ninguém foi escolhido para o papel! E vão remover o personagem do roteiro\"\n            en=\"Oh no! Nobody was chosen for the role! And they will remove the character from the script\"\n          />\n        )}\n      </Instruction>\n\n      <ActorsSelections actors={activeRole.candidates} selection={activeRole.selection} players={players} />\n\n      <Space className=\"space-container\" align=\"center\">\n        <TimedButton duration={15} onExpire={goToNextStep} onClick={goToNextStep}>\n          <Translate pt=\"Ver Ranking\" en=\"See Ranking\" />\n        </TimedButton>\n      </Space>\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\nimport { Icons } from './utils/helpers';\n// Icons\nimport { MovieGenreIcon } from 'icons/MovieGenreIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { DualTranslate, Translate } from 'components/language';\nimport { StepRanking } from './StepRanking';\nimport { StepResult } from './StepResult';\n\nexport function PhaseResult({ players, state, info }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, goToNextStep, goToPreviousStep } = useStep(0);\n\n  const activeRole = state.movie.roles[state.activeRoleId];\n\n  const Icon = Icons?.[state?.movie?.id] ?? MovieGenreIcon;\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<Icon />}\n      title={\n        <>\n          <Translate pt=\"Resultado\" en=\"Results\" />: <DualTranslate>{activeRole.title}</DualTranslate>\n        </>\n      }\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n      duration={4}\n    >\n      <Instruction>\n        <Translate pt={<>E o papel foi escolhido?</>} en={<>So was the role cast?</>} />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  //\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.TESTE_DE_ELENCO.RESULT}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepResult\n          user={user}\n          activeRole={activeRole}\n          outcome={state.outcome}\n          players={players}\n          announcement={announcement}\n          goToNextStep={goToNextStep}\n        />\n\n        {/* Step 1 */}\n        <StepRanking\n          players={players}\n          round={state.round}\n          ranking={state.ranking}\n          goToPreviousStep={goToPreviousStep}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Utils\nimport { achievementsReference } from './utils/achievements';\nimport { Icons } from './utils/helpers';\n// Icons\nimport { CrownIcon } from 'icons/CrownIcon';\nimport { MovieGenreIcon } from 'icons/MovieGenreIcon';\n// Components\nimport { GameOverWrapper } from 'components/game-over';\nimport { Achievements } from 'components/general/Achievements';\nimport { Container } from 'components/general/Container';\nimport { DualTranslate, Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { RoleBoard } from './components/RoleBoard';\nimport { SuspectCard } from 'components/cards/SuspectCard';\nimport { ImageCard } from 'components/image-cards';\n\nexport function PhaseGameOver({ state, info, players }: PhaseProps) {\n  const movie: FeatureFilm = state.movie;\n  const movieId = movie?.id ?? '';\n  const Icon = Icons?.[movieId] ?? MovieGenreIcon;\n\n  return (\n    <GameOverWrapper info={info} state={state} players={players} announcementIcon={<CrownIcon />}>\n      <Achievements players={players} achievements={state.achievements} reference={achievementsReference} />\n\n      <Container\n        title={<Translate pt=\"O Filme\" en=\"The Movie\" />}\n        childrenContainerProps={{ className: 'final-gallery' }}\n      >\n        <Space className=\"role\" direction=\"vertical\" align=\"center\">\n          {movie && (\n            <>\n              <Icon width={75} />\n              <Title size=\"small\" className=\"role__title\">\n                <DualTranslate>{movie.title}</DualTranslate>\n              </Title>\n\n              {movie.rolesOrder.map((roleId) => {\n                const role = movie.roles[roleId];\n\n                if (role.cast) {\n                  return (\n                    <RoleBoard activeRole={role} instruction=\"CAST\" key={roleId}>\n                      <SuspectCard suspect={role.candidates[role.actor]} width={100} />\n                    </RoleBoard>\n                  );\n                }\n                return (\n                  <RoleBoard activeRole={role} instruction=\"CAST\" key={roleId}>\n                    <ImageCard imageId=\"us-unknown\" cardWidth={120} preview={false} />\n                  </RoleBoard>\n                );\n              })}\n            </>\n          )}\n        </Space>\n      </Container>\n    </GameOverWrapper>\n  );\n}\n","import { ConfigProvider } from 'antd';\n// Constants\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport { LoadingPage } from 'components/loaders';\nimport { PhaseMovieGenreSelection } from './PhaseMovieGenreSelection';\nimport { PhaseActorSelection } from './PhaseActorSelection';\nimport { PhaseResult } from './PhaseResult';\nimport { PhaseGameOver } from './PhaseGameOver';\n// Sass\nimport './teste-de-elenco.scss';\n\nfunction getActiveComponent(state: GameState) {\n  // If phase is not defined, it is likely that the game is still loading\n  if (state && !state.phase) return LoadingPage;\n\n  switch (state.phase) {\n    case PHASES.DEFAULT.LOBBY:\n      return PhaseLobby;\n    case PHASES.DEFAULT.RULES:\n      return PhaseRules;\n    case PHASES.DEFAULT.SETUP:\n      return PhaseSetup;\n    case PHASES.TESTE_DE_ELENCO.MOVIE_GENRE_SELECTION:\n      return PhaseMovieGenreSelection;\n    case PHASES.TESTE_DE_ELENCO.ACTOR_SELECTION:\n      return PhaseActorSelection;\n    case PHASES.TESTE_DE_ELENCO.RESULT:\n      return PhaseResult;\n    case PHASES.DEFAULT.GAME_OVER:\n      return PhaseGameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionTesteDeElenco() {\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorPrimary: THEME_COLORS.DEFAULT,\n          colorLink: THEME_COLORS.DEFAULT,\n        },\n      }}\n    >\n      <Session gameCollection={GAME_COLLECTION.TESTE_DE_ELENCO} getActiveComponent={getActiveComponent} />\n    </ConfigProvider>\n  );\n}\n\nexport default SessionTesteDeElenco;\n","export const ACHIEVEMENTS = {\n  ALONE_VOTES: 'ALONE_VOTES',\n  TOGETHER_VOTES: 'TOGETHER_VOTES',\n  MOST_CAST: 'MOST_CAST',\n  FEWEST_CAST: 'FEWEST_CAST',\n  CONSISTENCY: 'CONSISTENCY',\n  CHANGELING: 'CHANGELING',\n};\n\nexport const achievementsReference: AchievementReference = {\n  [ACHIEVEMENTS.ALONE_VOTES]: {\n    icon: 'person',\n    title: {\n      pt: 'Iniciante',\n      en: 'Beginner',\n    },\n    description: {\n      pt: 'Votou sozinho em um ator mais vezes',\n      en: 'Voted alone on an actor the most',\n    },\n  },\n  [ACHIEVEMENTS.TOGETHER_VOTES]: {\n    icon: 'people',\n    title: {\n      pt: 'Profissional',\n      en: 'Professional',\n    },\n    description: {\n      pt: 'Votou com alguém em um ator mais vezes',\n      en: 'Voted with someone on an actor the most',\n    },\n  },\n  [ACHIEVEMENTS.MOST_CAST]: {\n    icon: 'eye',\n    title: {\n      pt: 'Melhor olheiro',\n      en: 'Best scout',\n    },\n    description: {\n      pt: 'Escalou mais atores',\n      en: 'Cast the most actors',\n    },\n  },\n  [ACHIEVEMENTS.FEWEST_CAST]: {\n    icon: 'broken-bulb',\n    title: {\n      pt: 'Pior olheiro',\n      en: 'Wrost scout',\n    },\n    description: {\n      pt: 'Escalou menos atores',\n      en: 'Cast the fewest actors',\n    },\n  },\n  [ACHIEVEMENTS.CONSISTENCY]: {\n    icon: 'scale',\n    title: {\n      pt: 'Mais Persistente',\n      en: 'Most Persistent',\n    },\n    description: {\n      pt: 'Votou nos mesmos atores mais vezes',\n      en: 'Voted on the same actors the most',\n    },\n  },\n  [ACHIEVEMENTS.CHANGELING]: {\n    icon: 'arrows',\n    title: {\n      pt: 'Troca-troca',\n      en: 'Mind changer',\n    },\n    description: {\n      pt: 'Votou em mais atores diferentes',\n      en: 'Voted on the most different actors',\n    },\n  },\n};\n\nexport default achievementsReference;\n","export function CrownIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M445.512 460.432H66.488c-16.01 0-28.988-12.978-28.988-28.988 0-16.01 12.978-28.988 28.988-28.988h379.024c16.01 0 28.988 12.978 28.988 28.988 0 16.01-12.978 28.988-28.988 28.988z\"\n      ></path>\n      <path\n        fill=\"#fee97d\"\n        d=\"M445.512 402.456h-30c16.01 0 28.988 12.978 28.988 28.988 0 16.01-12.979 28.988-28.988 28.988h30c16.01 0 28.988-12.978 28.988-28.988 0-16.01-12.979-28.988-28.988-28.988zm28.988-240l-143.5 75-75-135-90 135-128.5-75 45 240h347z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M331 237.46l-75-135.004-16.364 24.546 54.327 97.789c7.274 13.091 23.269 18.563 37.037 12.669zm110.241-57.621L399.5 402.456h30l45-240zM166 237.46L37.5 162.456l3.687 19.661 98.271 57.357A23.432 23.432 0 00166 237.46z\"\n      ></path>\n      <path\n        fill=\"#f58a97\"\n        d=\"M251.05 150.169l-43.326-43.326a6.999 6.999 0 010-9.899l43.326-43.326a6.999 6.999 0 019.899 0l43.326 43.326a6.999 6.999 0 010 9.899l-43.326 43.326a6.999 6.999 0 01-9.899 0z\"\n      ></path>\n      <path\n        fill=\"#f07281\"\n        d=\"M304.276 96.944L260.95 53.618a6.999 6.999 0 00-9.899 0L241 63.668l33.276 33.276a7 7 0 010 9.9L241 140.119l10.05 10.05a6.999 6.999 0 009.899 0l43.326-43.326a7 7 0 00.001-9.899z\"\n      ></path>\n      <path\n        fill=\"#8795de\"\n        d=\"M371.05 331.348l-20.296-20.296a7 7 0 010-9.9l20.296-20.296a6.999 6.999 0 019.899 0l20.296 20.296a7 7 0 010 9.9l-20.296 20.296a6.999 6.999 0 01-9.899 0z\"\n      ></path>\n      <path\n        fill=\"#6c7fd8\"\n        d=\"M401.246 301.152l-20.296-20.296a6.999 6.999 0 00-9.899 0L361 290.906l10.246 10.246a6.999 6.999 0 010 9.899L361 321.298l10.05 10.05a6.999 6.999 0 009.899 0l20.296-20.296a7 7 0 00.001-9.9z\"\n      ></path>\n      <path\n        fill=\"#8795de\"\n        d=\"M131.05 331.348l-20.296-20.296a7 7 0 010-9.9l20.296-20.296a7 7 0 019.9 0l20.296 20.296a7 7 0 010 9.9l-20.296 20.296a7 7 0 01-9.9 0z\"\n      ></path>\n      <path\n        fill=\"#6c7fd8\"\n        d=\"M161.246 301.152l-20.296-20.296a6.999 6.999 0 00-9.899 0L121 290.906l10.246 10.246a6.999 6.999 0 010 9.899L121 321.298l10.05 10.05a6.999 6.999 0 009.899 0l20.296-20.296a7 7 0 00.001-9.9z\"\n      ></path>\n      <path\n        fill=\"#f58a97\"\n        d=\"M278.747 259.703h-45.494a6.999 6.999 0 00-6.062 3.5l-22.747 39.399a7.002 7.002 0 000 7l22.747 39.399a6.999 6.999 0 006.062 3.5h45.494a6.999 6.999 0 006.062-3.5l22.747-39.399a7.002 7.002 0 000-7l-22.747-39.399a7 7 0 00-6.062-3.5z\"\n      ></path>\n      <path\n        fill=\"#f07281\"\n        d=\"M307.556 302.602l-22.747-39.399a6.999 6.999 0 00-6.062-3.5h-30a6.999 6.999 0 016.062 3.5l22.747 39.399a7.002 7.002 0 010 7l-22.747 39.399a6.999 6.999 0 01-6.062 3.5h30a6.999 6.999 0 006.062-3.5l22.747-39.399a7.002 7.002 0 000-7z\"\n      ></path>\n      <circle cx=\"37.625\" cy=\"162.591\" r=\"30.125\" fill=\"#8795de\"></circle>\n      <circle cx=\"474.375\" cy=\"162.591\" r=\"30.125\" fill=\"#8795de\"></circle>\n      <path\n        fill=\"#6c7fd8\"\n        d=\"M474.375 132.466a29.981 29.981 0 00-15 4.004c9.037 5.201 15.125 14.947 15.125 26.121s-6.089 20.921-15.125 26.121a29.981 29.981 0 0015 4.004c16.638 0 30.125-13.488 30.125-30.125 0-16.638-13.488-30.125-30.125-30.125zm-436.75 0a29.981 29.981 0 00-15 4.004c9.037 5.201 15.125 14.947 15.125 26.121s-6.089 20.921-15.125 26.121a29.981 29.981 0 0015 4.004c16.638 0 30.125-13.488 30.125-30.125.001-16.638-13.487-30.125-30.125-30.125z\"\n      ></path>\n      <path d=\"M136 271.306a14.401 14.401 0 00-10.253 4.247L105.45 295.85c-5.653 5.654-5.653 14.853 0 20.505l20.296 20.296c2.827 2.827 6.54 4.24 10.253 4.24s7.426-1.414 10.253-4.24l20.296-20.296c5.653-5.653 5.653-14.852 0-20.506l-20.296-20.295A14.394 14.394 0 00136 271.306zm0 54.385l-19.589-19.589L136 286.513l19.589 19.589zm229.747 10.961A14.455 14.455 0 00376 340.89a14.46 14.46 0 0010.254-4.239l20.296-20.296c5.652-5.653 5.652-14.852 0-20.506l-20.297-20.296c-5.654-5.652-14.853-5.653-20.507 0L345.45 295.85c-5.652 5.654-5.652 14.853 0 20.505zM376 286.513l19.589 19.589L376 325.692l-19.589-19.59zm-178.051 26.839l22.747 39.399a14.54 14.54 0 0012.557 7.25h45.494c5.163 0 9.975-2.778 12.558-7.25l22.745-39.397a14.534 14.534 0 00.001-14.501l-22.747-39.4a14.544 14.544 0 00-12.557-7.249h-45.494a14.54 14.54 0 00-12.557 7.25l-22.747 39.399a14.538 14.538 0 000 14.499zm35.593-46.149h44.917l22.457 38.899-22.457 38.899h-44.917l-22.458-38.899zM512 162.591c0-20.747-16.879-37.625-37.625-37.625-20.747 0-37.626 16.879-37.626 37.625 0 3.596.518 7.072 1.464 10.368l-104.208 54.467-49.893-89.813 25.465-25.465a14.406 14.406 0 004.248-10.254c0-3.873-1.509-7.515-4.247-10.253l-43.326-43.326a14.404 14.404 0 00-10.253-4.247 14.401 14.401 0 00-10.253 4.247L202.42 91.641a14.404 14.404 0 00-4.247 10.253c0 3.874 1.508 7.515 4.247 10.253l22.868 22.868-20.788 31.179a7.5 7.5 0 002.08 10.401c3.412 2.275 8.083 1.397 10.401-2.08l19.125-28.684 9.641 9.641a14.452 14.452 0 0010.252 4.24c3.712 0 7.427-1.414 10.254-4.24l6.828-6.828 51.362 92.457c1.994 3.594 6.486 4.864 10.03 3.005l110.679-57.849a37.809 37.809 0 0015.151 11.219l-37.027 197.479h-63.799c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h86.034c11.849 0 21.488 9.639 21.488 21.488s-9.64 21.488-21.488 21.488H66.488c-11.849 0-21.488-9.64-21.488-21.488s9.64-21.488 21.488-21.488h257.989c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5H88.724L51.696 197.477a37.774 37.774 0 0014.007-9.875l96.516 56.336c3.375 1.973 7.799 1.017 10.021-2.317l25.34-38.006a7.5 7.5 0 00-12.481-8.321l-21.42 32.127-90.42-52.778a37.453 37.453 0 001.991-12.052c0-20.747-16.879-37.625-37.625-37.625S0 141.845 0 162.591c0 20.519 16.512 37.243 36.945 37.608l36.517 194.757h-6.974c-20.12 0-36.488 16.368-36.488 36.488s16.369 36.488 36.488 36.488h379.023c20.12 0 36.488-16.369 36.488-36.488s-16.368-36.488-36.488-36.488h-6.975L475.054 200.2c20.433-.365 36.946-17.09 36.946-37.609zm-256-18.078l-42.619-42.619L256 59.275l42.618 42.619zM15 162.591c0-12.476 10.15-22.625 22.625-22.625s22.625 10.15 22.625 22.625-10.15 22.625-22.625 22.625S15 175.067 15 162.591zm436.749 0c0-12.476 10.15-22.625 22.626-22.625S497 150.116 497 162.591s-10.149 22.625-22.625 22.625-22.626-10.149-22.626-22.625z\"></path>\n    </svg>\n  );\n}\n","export function NoIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path fill=\"none\" d=\"M.09.09h512v512H.09z\"></path>\n      <path\n        fill=\"#e94444\"\n        d=\"M256.09 441.78a184.89 184.89 0 01-85.58-20.86c-4.22-2.2-8.36-4.55-12.38-7.05a3.33 3.33 0 01-.62-5.19l251.16-251.17a3.34 3.34 0 015.2.62c2.49 4 4.85 8.16 7.05 12.38a185.75 185.75 0 01-164.83 271.27M98.33 354.09q-3.75-6-7-12.37a184.43 184.43 0 01-20.8-79.76c-3.24-105 82.25-192.47 187.33-191.5a185 185 0 0183.88 20.85q6.33 3.3 12.36 7.06a3.33 3.33 0 01.61 5.19L103.52 354.65a3.33 3.33 0 01-5.19-.61M256.09 7.5C118.8 7.5 7.5 118.8 7.5 256.09s111.3 248.59 248.59 248.59 248.59-111.29 248.59-248.59S393.38 7.5 256.09 7.5\"\n      ></path>\n      <path\n        fill=\"#d83131\"\n        d=\"M398.28 52.16a248 248 0 0189.35 190.93c0 137.29-111.29 248.59-248.59 248.59a247.45 247.45 0 01-142.18-44.69 247.53 247.53 0 00159.23 57.69c137.29 0 248.59-111.29 248.59-248.59a248.28 248.28 0 00-106.4-203.93\"\n      ></path>\n      <path d=\"M256.09 512.18A256.09 256.09 0 0175.01 75.01a256.11 256.11 0 11291.08 412.4 7.5 7.5 0 01-6.45-13.54 239.89 239.89 0 10-31.63 12.4 7.5 7.5 0 114.47 14.32 256.11 256.11 0 01-76.39 11.59z\"></path>\n      <path d=\"M101.2 363.09a10.48 10.48 0 01-1.25-.07 10.8 10.8 0 01-8-5 191.8 191.8 0 01-7.34-12.88 191 191 0 01-21.64-83c-1.63-52.89 18-103 55.21-141s86.85-58.74 139.71-58.23a191.22 191.22 0 0187.27 21.7c4.37 2.28 8.69 4.75 12.86 7.34a10.83 10.83 0 011.95 16.86L108.83 359.95a10.76 10.76 0 01-7.63 3.14zM256.09 77.9c-48.12 0-93.22 19-127.16 53.72-34.35 35.1-52.44 81.29-50.94 130.06a176 176 0 0020 76.52c1.29 2.47 2.64 4.94 4.06 7.37l243.54-243.6a175.7 175.7 0 00-7.36-4.06 176.41 176.41 0 00-80.47-20zm0 371.38a193.54 193.54 0 01-89-21.71 192.5 192.5 0 01-12.88-7.34 10.82 10.82 0 01-2-16.86l137.55-137.55a7.5 7.5 0 1110.6 10.61L166.59 410.2c2.42 1.41 4.89 2.77 7.38 4.06a178.52 178.52 0 0082.12 20c98.26 0 178.19-79.93 178.19-178.19a176.22 176.22 0 00-20-82.12c-1.29-2.49-2.65-5-4.06-7.38l-84.87 84.87a7.5 7.5 0 01-10.61-10.6l88.65-88.65a10.83 10.83 0 0116.86 1.95c2.58 4.16 5.05 8.49 7.34 12.89a191.11 191.11 0 0121.71 89c-.02 106.59-86.68 193.25-193.21 193.25z\"></path>\n    </svg>\n  );\n}\n","// This icon file is generated automatically.\nvar DownCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M690 405h-46.9c-10.2 0-19.9 4.9-25.9 13.2L512 563.6 406.8 418.2c-6-8.3-15.6-13.2-25.9-13.2H334c-6.5 0-10.3 7.4-6.5 12.7l178 246c3.2 4.4 9.7 4.4 12.9 0l178-246c3.9-5.3.1-12.7-6.4-12.7z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"down-circle\", \"theme\": \"outlined\" };\nexport default DownCircleOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport DownCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/DownCircleOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar DownCircleOutlined = function DownCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: DownCircleOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  DownCircleOutlined.displayName = 'DownCircleOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(DownCircleOutlined);","// This icon file is generated automatically.\nvar UpCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M518.5 360.3a7.95 7.95 0 00-12.9 0l-178 246c-3.8 5.3 0 12.7 6.5 12.7H381c10.2 0 19.9-4.9 25.9-13.2L512 460.4l105.2 145.4c6 8.3 15.6 13.2 25.9 13.2H690c6.5 0 10.3-7.4 6.5-12.7l-178-246z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"up-circle\", \"theme\": \"outlined\" };\nexport default UpCircleOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport UpCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/UpCircleOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar UpCircleOutlined = function UpCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: UpCircleOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  UpCircleOutlined.displayName = 'UpCircleOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(UpCircleOutlined);"],"names":["Container","title","children","className","contained","titleProps","childrenContainerProps","spaceProps","level","size","restTitleProps","childrenClassName","wrap","direction","childrenDirection","restChildrenContainerProps","clsx","submitAction","httpsCallable","functions","Icons","ACTION","MovieActionIcon","COMEDY","MovieComedyIcon","DRAMA","MovieDramaIcon","HORROR","MovieHorrorIcon","SCI_FI","MovieSciFiIcon","StepSelectGenre","user","announcement","genres","onSubmitGenre","isLoading","useLoading","useMock","genre","getRandomItem","key","fullWidth","pt","en","map","Icon","MovieGenreIcon","onClick","disabled","ready","icon","PhaseMovieGenreSelection","players","state","info","useUser","useStep","step","setStep","translate","useLanguage","request","useAPICall","apiFunction","actionName","onSuccess","onError","successMessage","errorMessage","payload","action","useOnSubmitMovieGenreAPIRequest","currentRound","round","current","type","phase","allowedPhase","PHASES","ActorsBoard","actors","onSubmitActor","selection","cardWidth","useCardWidth","gap","minWidth","maxWidth","margin","language","actorId","actor","name","onConfirm","id","okText","cancelText","SuspectCard","suspect","width","RoleBoard","activeRole","instruction","movie","outcome","traitCount","traits","length","movieId","align","style","backgroundColor","description","pluralize","cast","NoIcon","trait","index","StepSelectActor","candidates","PointsHighlight","PhaseActorSelection","useOnSubmitMovieActorAPIRequest","roles","activeRoleId","SofaIcon","StepRanking","ranking","goToPreviousStep","gainedPointsDescriptions","ActorsSelections","playersSelections","useMemo","Object","values","reduce","acc","player","undefined","push","maxCount","playerId","avatarId","StepResult","goToNextStep","imageId","preview","duration","onExpire","PhaseResult","PhaseGameOver","announcementIcon","CrownIcon","C","Achievements","achievements","reference","achievementsReference","rolesOrder","roleId","role","getActiveComponent","LoadingPage","PhaseLobby","PhaseRules","PhaseSetup","PageError","theme","token","colorPrimary","THEME_COLORS","colorLink","gameCollection","GAME_COLLECTION","ACHIEVEMENTS","props","xmlns","viewBox","fill","d","cx","cy","r","DownCircleOutlined","ref","React","AntdIcon","_extends","DownCircleOutlinedSvg","UpCircleOutlined","UpCircleOutlinedSvg"],"sourceRoot":""}