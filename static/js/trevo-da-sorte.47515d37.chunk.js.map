{"version":3,"file":"static/js/trevo-da-sorte.47515d37.chunk.js","mappings":"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","sources":["components/icons/CloverIcon.tsx","components/icons/VerifyListIcon.tsx","components/icons/WritingIcon.tsx","components/views/View.tsx","components/views/ViewIf.tsx","components/views/ViewOr.tsx","components/views/ViewSwitch.tsx","games/trevo-da-sorte/utils/constants.ts","games/trevo-da-sorte/utils/helpers.ts","games/trevo-da-sorte/utils/mock.ts","games/trevo-da-sorte/StepSelectWords.tsx","games/trevo-da-sorte/PhaseWordSelection.tsx","games/trevo-da-sorte/utils/api-requests.ts","games/trevo-da-sorte/utils/useCloverState.ts","../node_modules/react-use/esm/useEvent.js","../node_modules/react-use/esm/useKey.js","../node_modules/react-use/esm/useKeyPress.js","../node_modules/react-use/esm/useUpdateEffect.js","../node_modules/react-use/esm/useFirstMountState.js","../node_modules/react-use/esm/useKeyPressEvent.js","../node_modules/@ant-design/icons-svg/es/asn/RedoOutlined.js","../node_modules/@ant-design/icons/es/icons/RedoOutlined.js","games/trevo-da-sorte/components/Leaf.tsx","games/trevo-da-sorte/components/LeafSlot.tsx","games/trevo-da-sorte/components/Clover.tsx","games/trevo-da-sorte/components/RulesBlobs.tsx","games/trevo-da-sorte/components/ConfirmClues.tsx","games/trevo-da-sorte/StepWriteClues.tsx","games/trevo-da-sorte/PhaseCloverWriting.tsx","games/trevo-da-sorte/components/DetachedLeaves.tsx","games/trevo-da-sorte/StepGuessClover.tsx","games/trevo-da-sorte/StepWaitClover.tsx","games/trevo-da-sorte/PhaseCloverGuessing.tsx","games/trevo-da-sorte/components/PlayersGuesses.tsx","games/trevo-da-sorte/StepRanking.tsx","games/trevo-da-sorte/PhaseResults.tsx","games/trevo-da-sorte/PhaseGameOver.tsx","games/trevo-da-sorte/SessionTrevoDaSorte.tsx","hooks/useBooleanDictionary.ts","hooks/useWhichPlayerIsThe.ts","../node_modules/@ant-design/icons-svg/es/asn/CaretUpOutlined.js","../node_modules/@ant-design/icons/es/icons/CaretUpOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/CrownFilled.js","../node_modules/@ant-design/icons/es/icons/CrownFilled.js","../node_modules/@ant-design/icons-svg/es/asn/DeleteOutlined.js","../node_modules/@ant-design/icons/es/icons/DeleteOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/StarFilled.js","../node_modules/@ant-design/icons/es/icons/StarFilled.js","../node_modules/rc-rate/es/Star.js","../node_modules/rc-rate/es/Rate.js","../node_modules/rc-rate/es/util.js","../node_modules/rc-rate/es/index.js","../node_modules/antd/es/rate/index.js"],"sourcesContent":["export function CloverIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#5eac24\"\n        d=\"M438.93 253.91s-40.8-40.06-108.65-46.44c67.55-6.53 108.16-46.4 108.16-46.4a55.48 55.48 0 000-78.46c-10.02-10.02-24.5-13.82-37.62-14.56a5.96 5.96 0 01-3.57-1.46 5.95 5.95 0 01-2.1-4.2c-.75-13.13-4.55-27.62-14.57-37.64a55.47 55.47 0 00-78.44 0s-41.3 42.06-46.72 111.8C250 66.8 208.69 24.75 208.69 24.75a55.47 55.47 0 00-78.44 0c-10.02 10.02-13.82 24.51-14.57 37.63a5.95 5.95 0 01-2.1 4.21 5.96 5.96 0 01-3.56 1.46c-13.12.74-27.6 4.54-37.63 14.56a55.39 55.39 0 00-9.83 13.3 55.52 55.52 0 009.83 65.15s40.7 39.96 108.37 46.43C113.1 213.95 72.4 253.9 72.4 253.9a55.48 55.48 0 000 78.45c10.02 10.02 24.5 13.82 37.63 14.56 1.36.08 2.6.61 3.56 1.46 1.2 1.02 2 2.52 2.1 4.2.75 13.13 4.55 27.62 14.57 37.64a55.47 55.47 0 0078.44 0s22.37-22.79 36.35-62.61c3.47 24.06 10.96 56.68 26.5 98.23 9.45 25.23 24.6 47.7 43.8 65a111.61 111.61 0 0014.99 11.6 12.9 12.9 0 1013.72-21.86 86.02 86.02 0 01-11.44-8.9c-16.14-14.55-28.9-33.52-36.89-54.89-9.72-25.97-16.08-48.4-20.22-67.2 12.86 26.11 27.12 40.63 27.12 40.63a55.48 55.48 0 0078.45 0c10.02-10.02 13.82-24.5 14.56-37.63.08-1.36.61-2.6 1.45-3.56 1.03-1.2 2.53-2.01 4.21-2.1 13.12-.75 27.62-4.55 37.64-14.57a55.47 55.47 0 000-78.45zm-153.02-45.58a33.5 33.5 0 00-28.88 28.88c-.65 4.97-1.1 9.84-1.37 14.62-.28-4.78-.73-9.65-1.38-14.63a33.5 33.5 0 00-28.88-28.88c-2.53-.33-5.04-.6-7.53-.84 2.49-.23 5-.5 7.54-.83a33.48 33.48 0 0022.98-13.85l.08-.1a33.41 33.41 0 005.81-14.93c.5-3.75.86-7.45 1.14-11.09.28 3.64.64 7.34 1.14 11.09a33.5 33.5 0 0028.88 28.88c2.62.34 5.22.62 7.79.86-2.42.23-4.86.5-7.32.82z\"\n      ></path>\n      <path\n        fill=\"#6dc82a\"\n        d=\"M337.17 504.42c-2.34 0-4.71-.64-6.85-1.98-20.7-13-45.33-40.68-58.77-76.6-17.24-46.27-32.07-99.93-28.64-149.17l.02-.27a12.89 12.89 0 019.47-11.73l.12-.04c1.1-.3 2.25-.45 3.44-.42l.55.01a12.9 12.9 0 0112.2 13.58c-2.66 45.91 11.03 96.09 27.01 138.99 11.18 29.9 31.96 53.5 48.32 63.8 10.95 6.84 6.06 23.83-6.87 23.83z\"\n      ></path>\n      <path\n        fill=\"#5eac24\"\n        d=\"M294.04 412.22c-6.72-9.58-19.13-2.05-28.94-4.4-13.94-41.05-25.21-87.74-22.19-131.15l.02-.27a12.89 12.89 0 019.47-11.73l.12-.03c1.25-.27 2.41-.42 3.44-.42h.55a12.9 12.9 0 0112.2 13.59c-.09 1.38-6.47 47.31 25.33 134.4z\"\n      ></path>\n      <path\n        fill=\"#6dc82a\"\n        d=\"M256.55 177.77a33.5 33.5 0 0028.88 28.88c94.04 12.32 153.01-45.59 153.01-45.59a55.48 55.48 0 000-78.45c-10.02-10.02-24.5-13.82-37.62-14.56a5.96 5.96 0 01-3.57-1.46 5.95 5.95 0 01-2.1-4.2c-.75-13.13-4.55-27.62-14.57-37.64a55.47 55.47 0 00-78.44 0s-57.91 58.97-45.59 153.02z\"\n      ></path>\n      <path\n        fill=\"#4e901e\"\n        d=\"M397.24 66.6L262.37 192.67v.01a33.41 33.41 0 01-5.82-14.92c-12.33-94.05 45.59-153.02 45.59-153.02a55.47 55.47 0 0178.44 0c10.02 10.02 13.82 24.51 14.57 37.63.09 1.69.9 3.2 2.1 4.21z\"\n      ></path>\n      <path\n        fill=\"#4e901e\"\n        d=\"M254.28 177.77a33.42 33.42 0 01-5.81 14.92l-.08.11a33.48 33.48 0 01-22.99 13.85c-94.03 12.32-153-45.59-153-45.59a55.52 55.52 0 01-9.83-65.15 55.38 55.38 0 019.83-13.3c10.02-10.02 24.5-13.82 37.63-14.56a5.96 5.96 0 003.56-1.46 5.947 5.947 0 002.1-4.2c.75-13.13 4.55-27.62 14.57-37.64a55.47 55.47 0 0178.44 0s57.92 58.97 45.59 153.02z\"\n      ></path>\n      <path\n        fill=\"#5eac24\"\n        d=\"M254.28 177.77a33.42 33.42 0 01-5.81 14.92l-.08.11c-103.07 8.36-167.1-56.24-167.1-56.24a67.32 67.32 0 01-18.73-40.65 55.38 55.38 0 019.83-13.3c10.02-10.02 24.5-13.82 37.63-14.56a5.96 5.96 0 003.57-1.46c1.2-1.02 2-2.52 2.1-4.2.74-13.13 4.54-27.62 14.57-37.64a55.47 55.47 0 0178.44 0s57.9 58.97 45.58 153.02z\"\n      ></path>\n      <path\n        fill=\"#6dc82a\"\n        d=\"M254.28 177.77a33.42 33.42 0 01-5.81 14.92L113.59 66.6c1.2-1.02 2-2.52 2.09-4.2.75-13.13 4.55-27.62 14.57-37.64a55.47 55.47 0 0178.45 0s57.9 58.97 45.58 153.02z\"\n      ></path>\n      <path\n        fill=\"#5eac24\"\n        d=\"M397.24 66.6L262.37 192.67c4-94.08 60.11-151.23 60.11-151.23a70.6 70.6 0 0153.76-20.61 56.7 56.7 0 014.34 3.9c10.02 10.03 13.82 24.52 14.57 37.64.09 1.69.9 3.2 2.1 4.21z\"\n      ></path>\n      <path\n        fill=\"#6dc82a\"\n        d=\"M285.9 208.33a33.5 33.5 0 00-28.88 28.88c-12.32 94.03 45.6 153 45.6 153a55.48 55.48 0 0078.45 0c10.02-10.02 13.82-24.5 14.56-37.62.08-1.36.61-2.6 1.45-3.57 1.03-1.2 2.53-2 4.21-2.1 13.12-.75 27.62-4.55 37.64-14.57a55.47 55.47 0 000-78.44S379.95 196 285.91 208.33z\"\n      ></path>\n      <path\n        fill=\"#4e901e\"\n        d=\"M397.08 349.02L271 214.15v-.01a33.41 33.41 0 0114.92-5.82c94.04-12.32 153.02 45.59 153.02 45.59a55.47 55.47 0 010 78.44c-10.02 10.02-24.52 13.82-37.64 14.57-1.68.1-3.19.9-4.2 2.1z\"\n      ></path>\n      <path\n        fill=\"#5eac24\"\n        d=\"M397.08 349.02L271 214.15c94.09 4 151.23 60.1 151.23 60.1a70.6 70.6 0 0120.62 53.76 56.7 56.7 0 01-3.91 4.34c-10.02 10.02-24.52 13.82-37.64 14.57-1.68.1-3.19.9-4.2 2.1z\"\n      ></path>\n      <path\n        fill=\"#6dc82a\"\n        d=\"M254.28 237.2a33.5 33.5 0 00-28.88-28.88c-94.03-12.32-153 45.59-153 45.59a55.48 55.48 0 000 78.45c10.02 10.02 24.5 13.82 37.63 14.56 1.36.08 2.6.61 3.57 1.46 1.2 1.02 2 2.52 2.09 4.2.75 13.12 4.55 27.62 14.57 37.64a55.47 55.47 0 0078.45 0s57.9-58.98 45.58-153.02zm19.66-2.78c.98-3.26 1.77-4.78 1.36-1.62-.12.91-.62 1.4-1.36 1.62z\"\n      ></path>\n      <path\n        fill=\"#4e901e\"\n        d=\"M113.59 348.38l134.87-126.1a33.41 33.41 0 015.82 14.92c12.33 94.05-45.58 153.02-45.58 153.02a55.47 55.47 0 01-78.44 0c-10.03-10.02-13.83-24.52-14.58-37.64a5.94 5.94 0 00-2.1-4.2z\"\n      ></path>\n      <path\n        fill=\"#5eac24\"\n        d=\"M113.59 348.38l134.87-126.1c-4 94.1-60.11 151.23-60.11 151.23a70.6 70.6 0 01-53.75 20.62 56.7 56.7 0 01-4.34-3.9c-10.03-10.03-13.83-24.52-14.58-37.64a5.94 5.94 0 00-2.1-4.21z\"\n      ></path>\n      <path d=\"M444.89 249.34c-15.45-14.96-44.8-32.68-77.61-41.89 48.01-13.44 76.08-40.5 77.66-42.04a62.71 62.71 0 0018.02-51.84 7.52 7.52 0 00-14.93 1.73 47.72 47.72 0 01-13.68 39.43c-.46.45-46.84 45.15-121.6 45.15-8.3 0-16.78-.56-25.17-1.66a26.04 26.04 0 01-22.4-22.4 194.3 194.3 0 01-1.66-25.17c0-74.47 44.71-121.15 45.1-121.56a47.93 47.93 0 0167.82 0c9.22 9.22 11.82 22.9 12.38 32.75a13.53 13.53 0 0012.74 12.74c19.35 1.1 29.77 8.01 36.62 16.75 2.51 3.2 7.15 4.09 10.46 1.73a7.52 7.52 0 001.59-10.73c-9.3-11.99-23.25-21.02-46.48-22.68-.88-12.35-4.55-29.06-16.68-41.19a62.95 62.95 0 00-89.12.05c-1.52 1.54-28.56 29.6-42 77.6-9.34-33.27-27.66-63.1-41.94-77.65a63.06 63.06 0 00-89.07 0c-12.13 12.13-15.8 28.84-16.68 41.2-12.35.87-29.06 4.54-41.19 16.67a62.95 62.95 0 00.05 89.12c14.82 14.57 44.66 32.64 77.6 41.89-48 13.45-76.07 40.5-77.65 42.05-12.93 12.93-19 30.12-18.42 46.17a7.53 7.53 0 008.82 7.2c3.74-.65 6.25-4.12 6.2-7.91a47.65 47.65 0 0113.98-34.79c.46-.45 46.85-45.15 121.6-45.15 8.31 0 16.78.56 25.18 1.66a26.04 26.04 0 0122.4 22.4c3.54 27.15 1.4 53.58-6.43 79.25-12.9 42.3-36.74 67.18-37.02 67.47a47.91 47.91 0 01-67.81 0c-9.21-9.2-11.82-22.89-12.38-32.73a13.53 13.53 0 00-12.74-12.75c-20.9-1.2-32.01-9.13-39.28-20.5a7.52 7.52 0 00-12.67 8.1c11.5 17.95 28.5 25.82 49.76 27.32.89 12.36 4.55 29.07 16.68 41.2a62.93 62.93 0 0089.12-.05c1.15-1.17 17.1-17.72 30.59-46.75 9.14 56.7 23.6 109.03 65.66 146.9a118.34 118.34 0 0016.03 12.38c15.89 9.97 35.48-5.02 30.52-22.8a7.52 7.52 0 00-14.49 4.04 5.39 5.39 0 01-8.04 6.02c-19.44-12.18-42.96-38.71-55.74-72.87-13.66-36.52-20.53-82.22-22.48-99.44-.1-.88 1.16-1.14 1.42-.3a218.8 218.8 0 0015.21 36.64c8.23 43.66 19.85 82.74 50.2 112.77a7.52 7.52 0 0010.57-10.69c-19.93-19.72-29.55-41.3-37.25-67.71 32.75 36.36 102.95 24.19 107.49-39.34 12.35-.87 29.06-4.54 41.2-16.66a62.98 62.98 0 00-.06-89.13zm-220.46-51.12c-46.47 6.1-83.82-6-106.97-17.21-25.27-12.24-39.67-26.15-39.76-26.23a47.92 47.92 0 010-67.82c9.22-9.22 22.9-11.82 32.74-12.38a13.53 13.53 0 0012.75-12.74c.56-9.85 3.16-23.53 12.38-32.74 18.65-18.65 49.07-18.75 67.76-.05.56.56 55.21 57.4 43.5 146.77a26.03 26.03 0 01-22.4 22.4zM256 220.88a40.96 40.96 0 00-13.5-13.48c5.5-3.37 10.13-8 13.5-13.49a41.277 41.277 0 0013.5 13.5 41.03 41.03 0 00-13.5 13.47zm178.3 106.95c-9.22 9.22-22.89 11.82-32.74 12.38a13.53 13.53 0 00-12.74 12.75c-.56 9.84-3.17 23.52-12.38 32.74a47.98 47.98 0 01-67.76.05c-.25-.26-10.81-11.23-21.66-30.98-13.99-25.44-28.44-65.46-21.84-115.8a26.04 26.04 0 0122.4-22.4c56.58-7.42 110.9 11.56 146.73 43.45a47.94 47.94 0 010 67.81z\"></path>\n    </svg>\n  );\n}\n","export function VerifyListIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#bbec6c\"\n        d=\"M81.238 173.151a27.596 27.596 0 01-21.806-10.688L13.29 102.944c-9.338-12.045-7.143-29.379 4.902-38.717 12.046-9.338 29.38-7.143 38.718 4.901l20.714 26.719 40.422-71.574c7.495-13.271 24.327-17.953 37.599-10.458 13.271 7.495 17.952 24.328 10.458 37.599L105.27 159.126a27.596 27.596 0 01-24.032 14.025z\"\n      ></path>\n      <path\n        fill=\"#a2e62e\"\n        d=\"M101.016 164.795a27.521 27.521 0 01-19.777 8.362 27.6 27.6 0 01-21.81-10.689l-46.14-59.524c-9.336-12.041-7.147-29.371 4.903-38.717a27.323 27.323 0 0111.747-5.298c-9.456 9.695-10.56 25.13-2.024 36.141l46.14 59.524a27.612 27.612 0 0021.81 10.689c.662 0 1.334-.028 2.005-.074a25.312 25.312 0 003.146-.414z\"\n      ></path>\n      <path\n        fill=\"#bbec6c\"\n        d=\"M81.238 339.787a27.596 27.596 0 01-21.806-10.688L13.29 269.58c-9.338-12.045-7.143-29.379 4.902-38.717 12.046-9.338 29.38-7.143 38.718 4.901l20.714 26.719 40.422-71.574c7.495-13.271 24.327-17.953 37.599-10.458 13.271 7.495 17.952 24.328 10.458 37.599L105.27 325.762a27.596 27.596 0 01-24.032 14.025z\"\n      ></path>\n      <path\n        fill=\"#a2e62e\"\n        d=\"M101.016 331.431a27.521 27.521 0 01-19.777 8.362 27.6 27.6 0 01-21.81-10.689L13.29 269.58c-9.336-12.041-7.147-29.371 4.903-38.717a27.323 27.323 0 0111.747-5.298c-9.456 9.695-10.56 25.13-2.024 36.141l46.14 59.524a27.612 27.612 0 0021.81 10.689c.662 0 1.334-.028 2.005-.074a25.133 25.133 0 003.145-.414z\"\n      ></path>\n      <path\n        fill=\"#fe646f\"\n        d=\"M118.17 437.674l18.449-18.449c10.437-10.437 10.437-27.358 0-37.795-10.437-10.437-27.359-10.437-37.795 0l-18.449 18.449-18.45-18.449c-10.437-10.437-27.359-10.437-37.795 0-10.437 10.437-10.437 27.359 0 37.795l18.449 18.449-18.449 18.449c-10.437 10.437-10.437 27.358 0 37.795 10.437 10.437 27.358 10.437 37.795 0l18.449-18.449 18.449 18.449c10.437 10.437 27.359 10.437 37.795 0 10.437-10.437 10.437-27.359 0-37.795z\"\n      ></path>\n      <path\n        fill=\"#fd4755\"\n        d=\"M46.963 493.919c-10.437-10.437-10.437-27.359 0-37.795l18.449-18.449-18.449-18.449c-10.437-10.437-10.437-27.358 0-37.795a26.667 26.667 0 017.481-5.27c-9.915-4.683-22.115-2.929-30.314 5.27-10.437 10.437-10.437 27.359 0 37.795l18.449 18.449-18.449 18.448c-10.437 10.437-10.437 27.358 0 37.795 8.199 8.199 20.399 9.953 30.314 5.27a26.663 26.663 0 01-7.481-5.269z\"\n      ></path>\n      <path\n        fill=\"#f9f7f8\"\n        d=\"M268.014 156.832h202.073c19.005 0 34.411-15.406 34.411-34.411V62.852c0-19.005-15.406-34.411-34.411-34.411H268.014c-19.005 0-34.411 15.406-34.411 34.411v59.568c0 19.005 15.406 34.412 34.411 34.412zm0 171.459h202.073c19.005 0 34.411-15.406 34.411-34.411v-59.568c0-19.005-15.406-34.411-34.411-34.411H268.014c-19.005 0-34.411 15.406-34.411 34.411v59.568c0 19.005 15.406 34.411 34.411 34.411zm0 171.459h202.073c19.005 0 34.411-15.406 34.411-34.411v-59.568c0-19.005-15.406-34.411-34.411-34.411H268.014c-19.005 0-34.411 15.406-34.411 34.411v59.568c0 19.005 15.406 34.411 34.411 34.411z\"\n      ></path>\n      <path\n        fill=\"#dedbee\"\n        d=\"M300.134 156.828h-32.127c-18.999 0-34.404-15.405-34.404-34.414V62.851c0-19.009 15.405-34.414 34.404-34.414h32.127c-19.009 0-34.414 15.405-34.414 34.414v59.563c0 19.009 15.405 34.414 34.414 34.414zm0 171.46h-32.127c-18.999 0-34.404-15.405-34.404-34.414v-59.563c0-19.009 15.405-34.414 34.404-34.414h32.127c-19.009 0-34.414 15.405-34.414 34.414v59.563c0 19.009 15.405 34.414 34.414 34.414zm0 171.46h-32.127c-18.999 0-34.404-15.405-34.404-34.414v-59.563c0-19.009 15.405-34.414 34.404-34.414h32.127c-19.009 0-34.414 15.405-34.414 34.414v59.563c0 19.009 15.405 34.414 34.414 34.414z\"\n      ></path>\n      <path d=\"M53.509 167.06c6.599 8.511 16.967 13.592 27.733 13.592.842 0 1.698-.031 2.553-.093a35.02 35.02 0 0028.01-17.744l60.831-107.712c9.517-16.85 3.55-38.301-13.301-47.817-16.85-9.517-38.3-3.547-47.817 13.301L76.642 82.339 62.84 64.535C50.984 49.242 28.897 46.443 13.6 58.301c-15.293 11.857-18.09 33.945-6.235 49.24zM22.79 70.156a19.998 19.998 0 0112.291-4.206c6.005 0 11.949 2.673 15.903 7.775l20.714 26.719a7.49 7.49 0 006.473 2.885 7.495 7.495 0 005.985-3.792l40.422-71.573c5.449-9.648 17.731-13.066 27.381-7.616 9.648 5.449 13.064 17.731 7.616 27.38L98.744 155.439a20.051 20.051 0 01-17.502 10.213c-6.164 0-12.1-2.91-15.879-7.783L19.221 98.351c-6.789-8.758-5.188-21.406 3.569-28.195zm136.542 103.768c-16.845-9.519-38.297-3.556-47.819 13.295l-34.867 61.75-13.806-17.805c-11.865-15.285-33.952-18.082-49.237-6.23-7.411 5.747-12.142 14.033-13.319 23.332-1.178 9.301 1.339 18.503 7.085 25.907l46.142 59.519c6.59 8.51 16.958 13.591 27.734 13.591a35.02 35.02 0 0030.56-17.827l3.944-6.978a7.5 7.5 0 00-2.839-10.22 7.5 7.5 0 00-10.22 2.839l-3.944 6.979a20.056 20.056 0 01-17.501 10.207c-6.171 0-12.105-2.906-15.877-7.778L19.221 264.98a19.945 19.945 0 01-4.057-14.828 19.982 19.982 0 017.63-13.363c8.751-6.784 21.401-5.183 28.194 3.57l20.716 26.716a7.484 7.484 0 006.472 2.884 7.5 7.5 0 005.986-3.792l40.412-71.57c5.452-9.649 17.734-13.062 27.386-7.61a19.94 19.94 0 019.48 12.109 19.96 19.96 0 01-1.864 15.269l-42.181 74.687a7.5 7.5 0 002.842 10.219 7.498 7.498 0 0010.219-2.842l42.18-74.685c4.613-8.163 5.769-17.633 3.256-26.667-2.515-9.038-8.398-16.55-16.56-21.153zm-17.407 202.201c-6.464-6.464-15.059-10.024-24.201-10.024s-17.736 3.56-24.201 10.024L80.378 389.27l-13.145-13.145c-6.464-6.464-15.059-10.024-24.201-10.024s-17.736 3.56-24.201 10.024c-13.344 13.345-13.344 35.057 0 48.401l13.146 13.146-13.147 13.146c-13.344 13.344-13.344 35.057 0 48.401 6.465 6.464 15.059 10.024 24.201 10.024s17.737-3.56 24.202-10.024l13.144-13.145 13.145 13.145c6.465 6.464 15.059 10.024 24.201 10.024s17.737-3.56 24.202-10.024c13.344-13.344 13.344-35.057-.001-48.401l-13.145-13.145 13.146-13.146c13.345-13.344 13.345-35.057 0-48.402zm-10.606 37.795l-18.449 18.449a7.5 7.5 0 000 10.606l18.449 18.449c7.496 7.496 7.496 19.693.001 27.189a19.104 19.104 0 01-13.596 5.631c-5.135 0-9.963-2-13.595-5.631l-18.448-18.449a7.5 7.5 0 00-10.608 0l-18.447 18.449a19.104 19.104 0 01-13.596 5.631 19.1 19.1 0 01-13.594-5.631c-7.496-7.496-7.496-19.693 0-27.189l18.448-18.449a7.497 7.497 0 00.001-10.606L29.438 413.92c-7.496-7.496-7.496-19.693 0-27.189a19.1 19.1 0 0113.594-5.631c5.136 0 9.964 2 13.595 5.631l18.448 18.449a7.5 7.5 0 0010.608 0l18.449-18.449a19.1 19.1 0 0113.594-5.631c5.136 0 9.964 2 13.595 5.631 7.494 7.497 7.494 19.693-.002 27.189zM470.086 20.943H268.018c-23.111 0-41.913 18.802-41.913 41.913v59.562c0 23.111 18.802 41.913 41.913 41.913h131.125c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5H268.018c-14.84 0-26.913-12.073-26.913-26.913V62.856c0-14.84 12.073-26.913 26.913-26.913h202.069c14.841 0 26.914 12.073 26.914 26.913v59.562c0 14.84-12.073 26.913-26.914 26.913h-40.993c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h40.993c23.111 0 41.914-18.802 41.914-41.913V62.856c-.001-23.111-18.804-41.913-41.915-41.913zm.001 171.458h-202.07c-23.11 0-41.912 18.801-41.912 41.911v59.567c0 23.11 18.802 41.911 41.912 41.911h202.071c23.11 0 41.911-18.801 41.911-41.911v-59.567c-.001-23.11-18.802-41.911-41.912-41.911zm26.911 101.478c0 14.839-12.072 26.911-26.911 26.911h-202.07c-14.84 0-26.912-12.072-26.912-26.911v-59.567c0-14.839 12.072-26.911 26.912-26.911h202.071c14.839 0 26.911 12.072 26.911 26.911v59.567zm-26.911 69.98h-202.07c-23.11 0-41.912 18.801-41.912 41.911v59.567c0 23.11 18.802 41.911 41.912 41.911h202.071c23.11 0 41.911-18.801 41.911-41.911V405.77c-.001-23.11-18.802-41.911-41.912-41.911zm26.911 101.478c0 14.839-12.072 26.911-26.911 26.911h-202.07c-14.84 0-26.912-12.072-26.912-26.911V405.77c0-14.839 12.072-26.911 26.912-26.911h202.071c14.839 0 26.911 12.072 26.911 26.911v59.567z\"></path>\n      <path d=\"M473.995 74.074a7.5 7.5 0 00-7.5-7.5H271.608c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h194.887a7.5 7.5 0 007.5-7.5zm-202.387 29.628c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5H399.14c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5zm194.887 134.33H271.608c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h194.887c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5zM399.14 275.16H271.608c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5H399.14a7.5 7.5 0 000-15zm67.355 134.33H271.608c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h194.887c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5zm-67.355 37.128H271.608c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5H399.14a7.5 7.5 0 000-15z\"></path>\n    </svg>\n  );\n}\n","export function WritingIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffddcf\"\n        d=\"M219.421 310.029l-38.936 38.936c-10.935 10.935-28.663 10.935-39.598 0-10.935-10.935-10.935-28.663 0-39.598l27.435-27.435z\"\n      ></path>\n      <path\n        fill=\"#ffddcf\"\n        d=\"M117.575 208.182l-38.936 38.936c-10.935 10.935-28.663 10.935-39.598 0-10.935-10.935-10.935-28.663 0-39.598l27.435-27.435a181.448 181.448 0 01128.303-53.145c66.713 0 128.046 36.609 159.709 95.33L384 277.001l-39.899 150.983z\"\n      ></path>\n      <path\n        fill=\"#91def5\"\n        d=\"M433.343 481.298l-77.274-20.706c-10.669-2.859-17.001-13.826-14.142-24.495l43.482-162.276c2.859-10.669 13.826-17.001 24.495-14.142l77.274 20.706c10.669 2.859 17.001 13.826 14.142 24.495l-43.482 162.276c-2.859 10.669-13.825 17.001-24.495 14.142z\"\n      ></path>\n      <path fill=\"#ffcb7c\" d=\"M295.721 30.003l62.216 62.216L121.075 329.08l-62.216-62.216z\"></path>\n      <path fill=\"#98a1b3\" d=\"M10 377.984L58.839 266.92l62.225 62.226z\"></path>\n      <path\n        fill=\"#ffddcf\"\n        d=\"M256.466 298.519l-60.583-60.583c-12.497-12.497-32.758-12.497-45.255 0s-12.497 32.758 0 45.255l60.583 60.583c21.915 51.09 72.162 84.211 127.754 84.211h5.136z\"\n      ></path>\n      <path d=\"M489.765 270.726l-77.274-20.705c-10.239-2.743-20.679.186-27.989 6.843l-21.212-39.339c-13.197-24.475-31.711-45.893-53.945-62.517l55.689-55.689c3.905-3.905 3.905-10.237 0-14.143L302.809 22.95c-3.905-3.904-10.237-3.904-14.143 0l-93.991 93.991c-25.233.014-49.846 4.915-73.16 14.572-23.345 9.67-44.242 23.633-62.11 41.5L31.97 200.449c-7.178 7.178-11.13 16.72-11.13 26.87s3.953 19.692 11.13 26.87a37.753 37.753 0 0017.207 9.863L.847 373.959a10 10 0 0013.18 13.18l109.921-48.336a37.763 37.763 0 009.869 17.234c7.408 7.408 17.139 11.112 26.87 11.112s19.462-3.704 26.87-11.112l10.888-10.888 4.36 4.36a148.813 148.813 0 00128.643 88.265c-.764 6.39.542 12.827 3.818 18.5 4.006 6.94 10.476 11.904 18.216 13.978l77.274 20.706a29.939 29.939 0 007.757 1.025c13.244 0 25.398-8.853 28.985-22.239l9.829-36.684c1.43-5.334-1.736-10.817-7.071-12.247-5.332-1.43-10.818 1.736-12.247 7.071l-9.829 36.684c-1.427 5.327-6.921 8.5-12.248 7.071l-77.274-20.706a9.935 9.935 0 01-6.072-4.659 9.938 9.938 0 01-.999-7.588l43.481-162.275c1.428-5.326 6.925-8.496 12.248-7.071l77.274 20.705c5.326 1.428 8.499 6.922 7.071 12.248l-10.354 38.643c-1.43 5.334 1.736 10.817 7.071 12.247 5.331 1.43 10.818-1.736 12.247-7.071l10.354-38.643c4.282-15.979-5.235-32.461-21.214-36.743zM343.821 92.247L204.079 231.989l-1.125-1.125c-5.698-5.698-12.749-9.545-20.424-11.267L326.85 75.276zm-48.083-48.083l16.97 16.97L89.951 283.89l-16.97-16.97zM46.112 240.047c-3.4-3.399-5.272-7.92-5.272-12.728s1.872-9.328 5.272-12.728l27.435-27.436c27.277-27.277 62.128-44.229 99.81-48.897L71.567 240.047c-7.017 7.02-18.437 7.018-25.455 0zm15.995 44.284l41.546 41.546-74.155 32.609zm58.958 30.672l-16.97-16.97 28.217-28.217a41.744 41.744 0 0011.246 20.446l1.125 1.125zm52.348 26.891c-7.019 7.018-18.438 7.017-25.456.001-7.018-7.02-7.018-18.439 0-25.457l10.888-10.888 25.456 25.455zm163.028 76.044a128.854 128.854 0 01-116.04-78.106 10.01 10.01 0 00-2.119-3.129l-60.583-60.583c-8.578-8.577-8.578-22.535 0-31.112 4.155-4.155 9.68-6.444 15.556-6.444s11.401 2.289 15.556 6.444l60.583 60.583c3.905 3.904 10.237 3.904 14.143 0 3.905-3.905 3.905-10.237 0-14.143l-45.316-45.316 76.804-76.804c20.953 15.116 38.383 34.917 50.662 57.689l27.998 51.923z\"></path>\n      <path d=\"M479.32 397.003c-2.64 0-5.21-1.07-7.08-2.931a10.08 10.08 0 01-2.92-7.069c0-2.641 1.06-5.21 2.92-7.08 1.86-1.86 4.44-2.92 7.08-2.92 2.63 0 5.21 1.06 7.07 2.92a10.097 10.097 0 012.93 7.08c0 2.63-1.07 5.21-2.93 7.069a10.09 10.09 0 01-7.07 2.931z\"></path>\n    </svg>\n  );\n}\n","import { ReactNode } from 'react';\n\ntype ViewProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n};\n\nexport function View({ children }: ViewProps) {\n  return <>{children}</>;\n}\n","import { ReactNode } from 'react';\n\ntype ViewIfProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  isVisible?: boolean;\n};\n\nexport function ViewIf({ isVisible = false, children }: ViewIfProps) {\n  return isVisible ? <>{children}</> : <></>;\n}\n","type ViewOrProps = {\n  children: [any, any];\n  orCondition?: boolean;\n};\n\nexport function ViewOr({ orCondition = false, children }: ViewOrProps) {\n  return orCondition ? <>{children[0]}</> : <>{children[1]}</>;\n}\n","type ViewSwitchProps = {\n  cases: boolean[];\n  /**\n   * The content of the component\n   */\n  children: any;\n};\n\nexport function ViewSwitch({ cases, children }: ViewSwitchProps) {\n  if (cases.length > 5) {\n    throw Error('ViewSwitch only supports up to 5 cases');\n  }\n\n  if (cases[0] && children[0]) {\n    return children[0];\n  }\n\n  if (cases[1] && children[1]) {\n    return children[1];\n  }\n\n  if (cases[2] && children[2]) {\n    return children[2];\n  }\n\n  if (cases[3] && children[3]) {\n    return children[3];\n  }\n\n  if (cases[4] && children[4]) {\n    return children[4];\n  }\n  console.warn('Rendering all children in the ViewSwitch');\n  return children;\n}\n","export const ACTIONS = {\n  SUBMIT_BAD_WORDS: 'SUBMIT_BAD_WORDS',\n  SUBMIT_CLUES: 'SUBMIT_CLUES',\n  SUBMIT_GUESS: 'SUBMIT_GUESS',\n  UPDATE_CLOVER_STATE: 'UPDATE_CLOVER_STATE',\n};\n\nexport const ROTATIONS = [0, 90, 180, 270];\n\nexport const WORST_TO_REMOVE = 6;\n\nexport const FIRST_ATTEMPT_SCORE = 3;\n\nexport const SECOND_ATTEMPT_SCORE = 1;\n\nexport const LEAVES_ORDER = ['A', 'B', 'C', 'D'];\n\nexport const DIRECTIONS_INDEXES = {\n  top: 0,\n  right: 1,\n  bottom: 2,\n  left: 3,\n};\n","import { DIRECTIONS_INDEXES, LEAVES_ORDER } from './constants';\n\nexport const onRotate = (value: number, direction: number = 1) => {\n  return value + 90 * direction;\n};\n\nexport const parseRotation = (value: number) => {\n  return value % 360;\n};\n\nexport const prepareClueSubmission = (\n  clues: string[],\n  clover: Clover,\n  rotations: NumberDictionary\n): CloverLeaf[] => {\n  return LEAVES_ORDER.map((position, index) => {\n    const leafId = clover.leaves[position as LeafPosition].leafId;\n    return {\n      leafId,\n      clue: clues[index],\n      rotation: rotations[leafId],\n    };\n  });\n};\n\nexport const cleanupGuesses = (guesses: YGuesses) => {\n  Object.values(guesses).forEach((guess) => {\n    if (guess?.rotation) {\n      guess.rotation = parseRotation(guess.rotation);\n    }\n  });\n\n  return guesses;\n};\n\nexport const getWord = (\n  clover: Clover,\n  leaves: Leaves,\n  rotations: NumberDictionary,\n  position: LeafPosition,\n  direction: keyof typeof DIRECTIONS_INDEXES\n): string => {\n  const leaf = leaves[clover.leaves[position].leafId];\n  const rotation = parseRotation(rotations[leaf.id]);\n  const words = [...leaf.cards, ...leaf.cards];\n  const initialIndexBasedOnRotation = [0, 270, 180, 90].indexOf(rotation);\n  return words[initialIndexBasedOnRotation + DIRECTIONS_INDEXES[direction]].text;\n};\n","import { sampleSize } from 'lodash';\n// Utils\nimport { getRandomItem, shuffle } from 'utils/helpers';\nimport { ROTATIONS, WORST_TO_REMOVE } from './constants';\nimport { getWord } from './helpers';\n\nexport const mockSelectCards = (cards: TextCard[]): CardId[] =>\n  shuffle(cards)\n    .slice(0, WORST_TO_REMOVE)\n    .map((card) => card.id);\n\nconst glue2Words = (word1: string, word2: string) => {\n  return `${word1.substring(0, Math.round(word1.length / 2))}${word2.substring(\n    Math.round(word2.length / 2)\n  )}`;\n};\n\nexport const mockClues = (clover: Clover, leaves: Leaves, rotations: NumberDictionary): string[] => {\n  return [\n    glue2Words(\n      getWord(clover, leaves, rotations, 'A', 'top'),\n      getWord(clover, leaves, rotations, 'B', 'top')\n    ),\n    glue2Words(\n      getWord(clover, leaves, rotations, 'B', 'right'),\n      getWord(clover, leaves, rotations, 'C', 'right')\n    ),\n    glue2Words(\n      getWord(clover, leaves, rotations, 'C', 'bottom'),\n      getWord(clover, leaves, rotations, 'D', 'bottom')\n    ),\n    glue2Words(\n      getWord(clover, leaves, rotations, 'D', 'left'),\n      getWord(clover, leaves, rotations, 'A', 'left')\n    ),\n  ];\n};\n\nconst mockedScore = [3, 1, 1, 1, 0, 0];\n\nexport const mockGuesses = (leaves: Leaves): YGuesses => {\n  const selected = sampleSize(Object.keys(leaves), 4);\n\n  return {\n    A: {\n      leafId: selected[0],\n      rotation: getRandomItem(ROTATIONS),\n      score: getRandomItem(mockedScore),\n      tries: 2,\n    },\n    B: {\n      leafId: selected[1],\n      rotation: getRandomItem(ROTATIONS),\n      score: getRandomItem(mockedScore),\n      tries: 2,\n    },\n    C: {\n      leafId: selected[2],\n      rotation: getRandomItem(ROTATIONS),\n      score: getRandomItem(mockedScore),\n      tries: 2,\n    },\n    D: {\n      leafId: selected[3],\n      rotation: getRandomItem(ROTATIONS),\n      score: getRandomItem(mockedScore),\n      tries: 2,\n    },\n  };\n};\n","import clsx from 'clsx';\nimport { orderBy } from 'lodash';\nimport { useMemo } from 'react';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useBooleanDictionary } from 'hooks/useBooleanDictionary';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { WORST_TO_REMOVE } from './utils/constants';\nimport { mockSelectCards } from './utils/mock';\n// Components\nimport { TransparentButton } from 'components/buttons';\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\n\ntype StepSelectWordsProps = {\n  hand: TextCard[];\n  onSubmitBadWords: GenericFunction;\n};\n\nexport function StepSelectWords({ hand, onSubmitBadWords }: StepSelectWordsProps) {\n  const { isLoading } = useLoading();\n  const alphabeticalHand = useMemo(() => orderBy(hand, 'text'), [hand]);\n\n  const [selectedCards, updateSelectedCard] = useBooleanDictionary({});\n\n  const onSubmit = () => {\n    onSubmitBadWords({ cardsIds: Object.keys(selectedCards) });\n  };\n  const onSubmitMock = () => {\n    onSubmitBadWords({ cardsIds: mockSelectCards(hand) });\n  };\n\n  useMock(() => {\n    onSubmitBadWords({ cardsIds: mockSelectCards(hand) });\n  });\n\n  const selectedCount = Object.keys(selectedCards).length;\n  const isComplete = selectedCount === WORST_TO_REMOVE;\n\n  return (\n    <Step fullWidth>\n      <Title size=\"medium\">\n        <Translate pt=\"As Palavras do Trevo\" en=\"The Clover Words\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={`Elimine ${WORST_TO_REMOVE} palavras que você NÃO quer no jogo`}\n          en={`Eliminate ${WORST_TO_REMOVE} words you DO NOT want in the game`}\n        />\n      </Instruction>\n\n      <ul className=\"y-words-list\">\n        {alphabeticalHand.map((card) => (\n          <li className={clsx('y-words-list__word')} key={card.id}>\n            <TransparentButton\n              onClick={() => updateSelectedCard(card.id)}\n              active={selectedCards[card.id]}\n              activeClass=\"y-words-list__word-selected\"\n            >\n              {card.text}\n            </TransparentButton>\n          </li>\n        ))}\n      </ul>\n\n      <Space className=\"space-container\" align=\"center\">\n        <Button type=\"primary\" size=\"large\" onClick={onSubmit} disabled={!isComplete || isLoading}>\n          <Translate\n            pt={<>Enviar Palavras ({selectedCount} de 6)</>}\n            en={<>Submit Words ({selectedCount} of 6)</>}\n          />\n        </Button>\n\n        <Button size=\"large\" onClick={onSubmitMock}>\n          <Translate pt=\"Selecione pra mim\" en=\"Select for me\" />\n        </Button>\n      </Space>\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useIsUserReady } from 'hooks/useIsUserReady';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitBadWordsAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\nimport { WORST_TO_REMOVE } from './utils/constants';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { RoundAnnouncement } from 'components/round';\nimport { Translate } from 'components/language';\nimport { VerifyListIcon } from 'components/icons/VerifyListIcon';\nimport { StepSelectWords } from './StepSelectWords';\n\nfunction PhaseWordSelection({ players, state, info }: PhaseProps) {\n  const isUserReady = useIsUserReady(players, state);\n  const { translate } = useLanguage();\n  const user = useUser(players);\n  const { step, goToNextStep, setStep } = useStep(0);\n\n  const onSubmitBadWords = useOnSubmitBadWordsAPIRequest(setStep);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.TREVO_DA_SORTE.WORD_SELECTION}>\n      <StepSwitcher step={step} conditions={[!isUserReady, !isUserReady, !isUserReady]} players={players}>\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state.round}\n          onPressButton={goToNextStep}\n          time={4}\n          circleColor={info?.appearance?.color}\n        />\n\n        {/* Step 1 */}\n        <PhaseAnnouncement\n          icon={<VerifyListIcon />}\n          title={translate('Seleção das Palavras', 'Words Selection')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <Translate\n              pt={`Selecione ${WORST_TO_REMOVE} palavras que você NÃO quer no jogo`}\n              en={`Select ${WORST_TO_REMOVE} words you DO NOT want in the game`}\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 2 */}\n        <StepSelectWords hand={user.hand} onSubmitBadWords={onSubmitBadWords} />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseWordSelection;\n","import { TREVO_DA_SORTE_API } from 'services/adapters';\nimport { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { ACTIONS } from './constants';\n\nexport function useOnSubmitBadWordsAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: TREVO_DA_SORTE_API.submitAction,\n    actionName: 'submit-bad-words',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(1),\n    successMessage: translate('Palavras ruins enviadas com sucesso!', 'Bad words submitted successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar palavras',\n      'Oops, the application failed to submit words'\n    ),\n  });\n\n  return (payload: SubmitBadWordsPayload) => {\n    request({\n      action: ACTIONS.SUBMIT_BAD_WORDS,\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitCluesAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: TREVO_DA_SORTE_API.submitAction,\n    actionName: 'submit-clues',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(1),\n    successMessage: translate('Dicas enviadas com sucesso!', 'Clues submitted successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar dicas',\n      'Oops, the application failed to submit clues'\n    ),\n  });\n\n  return (payload: SubmitCluesPayload) => {\n    request({\n      action: ACTIONS.SUBMIT_CLUES,\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitGuessAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: TREVO_DA_SORTE_API.submitAction,\n    actionName: 'submit-guess',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate('Palpites enviadas com sucesso!', 'Guesses submitted successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar palpites',\n      'Oops, the application failed to submit guesses'\n    ),\n  });\n\n  return (payload: SubmitCloverGuessesPayload) => {\n    request({\n      action: ACTIONS.SUBMIT_GUESS,\n      ...payload,\n    });\n  };\n}\n","import { useEffect, useState } from 'react';\n// Ant Design Resources\nimport { notification } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Helpers\nimport { onRotate, parseRotation } from './helpers';\nimport { FIRST_ATTEMPT_SCORE, SECOND_ATTEMPT_SCORE } from './constants';\nimport { getRandomItem } from 'utils/helpers';\n\n/**\n * Keeps track of the clover state\n * @param mode\n * @param clover\n * @param leaves\n * @param onSubmit\n * @returns\n */\nexport function useCloverState(mode: CloverMode, clover: Clover, leaves: Leaves, onSubmit?: GenericFunction) {\n  const { translate } = useLanguage();\n  const [attempts, setAttempts] = useState(0);\n  const [clues, setClues] = useState<string[]>(['', '', '', '']);\n  const [rotation, setRotation] = useState<number>(0);\n  const [activeLeafId, setActiveLeafId] = useState<string | null>(null);\n  const [activeSlotId, setActiveSlotId] = useState<LeafPosition | null>(null);\n  const [guesses, setGuesses] = useState<YGuesses>({ A: null, B: null, C: null, D: null });\n  const [locks, setLocks] = useState<LeafLocks>({ A: false, B: false, C: false, D: false });\n  const [rotations, setRotations] = useState<NumberDictionary>(\n    Object.keys(leaves).reduce((acc: NumberDictionary, leafId) => {\n      acc[leafId] = 0;\n      return acc;\n    }, {})\n  );\n  const [usedLeavesIds, setUsedLeavesIds] = useState<string[]>([]);\n\n  // Keep used leaves ids up to date\n  useEffect(() => {\n    setUsedLeavesIds(Object.values(guesses).map((guess) => guess?.leafId ?? ''));\n  }, [guesses]);\n\n  // Keep guess rotation up to date\n  useEffect(() => {\n    setGuesses((prevState) => {\n      const newState = { ...prevState };\n      Object.keys(newState).forEach((k) => {\n        const key = k as LeafPosition;\n        const entry = newState[key];\n        if (entry) {\n          entry.rotation = rotations[entry.leafId];\n        }\n      });\n      return newState;\n    });\n  }, [rotations]);\n\n  /**\n   * Handles clover local rotation\n   * @param direction\n   */\n  const onRotateClover = (direction: number) => {\n    setRotation(onRotate(rotation, direction));\n  };\n\n  /**\n   * Updates the clue according to its index\n   * @param targetIndex\n   * @param value\n   */\n  const onClueChange = (targetIndex: LeafIndex, value: string) => {\n    setClues((prevState) => {\n      const copy = [...prevState];\n      copy[targetIndex] = value;\n      return copy;\n    });\n  };\n\n  /**\n   * Rotates a leaf\n   * @param e\n   * @param leadId\n   * @param quantity - how many times it should rotate\n   */\n  const onLeafRotate = (e: ButtonEvent, leadId: LeafId, quantity = 1) => {\n    e.stopPropagation();\n    const newRotation = onRotate(rotations[leadId], quantity);\n    setRotations((prevState) => ({ ...prevState, [leadId]: newRotation }));\n\n    setActiveLeafId(null);\n    setActiveSlotId(null);\n  };\n\n  /**\n   * Randomly chooses different rotations for the leaves\n   */\n  const onRandomizeLeafRotations = (e: ButtonEvent) => {\n    Object.values(clover.leaves).forEach((cloverLeaf) => {\n      onLeafRotate(e, cloverLeaf.leafId, getRandomItem([1, 2, 3, 4, 5]));\n    });\n  };\n\n  /**\n   * Removes the leaf of the clover\n   * @param targetSlotId\n   */\n  const onLeafRemove = (targetSlotId: LeafPosition) => {\n    setGuesses((prevState) => ({ ...prevState, [targetSlotId]: null }));\n  };\n\n  /**\n   * Activate a leaf to be connected to the clover\n   * @param targetLeafId\n   * @returns\n   */\n  const onActivateLeaf = (targetLeafId: LeafId) => {\n    if (activeLeafId === targetLeafId) {\n      return setActiveLeafId(null);\n    }\n\n    // Attach leaf to slot\n    if (activeSlotId) {\n      setGuesses((g) => {\n        const repeat = Object.keys(g).filter((k) => {\n          const key = k as LeafPosition;\n          const l = g[key];\n          return l?.leafId === targetLeafId;\n        });\n\n        const newGuesses = {\n          ...g,\n          [activeSlotId]: {\n            leafId: targetLeafId,\n            rotation: rotations[targetLeafId],\n          },\n        };\n\n        if (repeat.length > 0) {\n          const key = repeat[0] as LeafPosition;\n          newGuesses[key] = null;\n        }\n\n        return newGuesses;\n      });\n\n      setActiveSlotId(null);\n    } else {\n      setActiveLeafId(targetLeafId);\n    }\n  };\n\n  /**\n   * Activate a slot to receive a leaf on the clover\n   * @param targetSlotId\n   * @returns\n   */\n  const onActivateSlot = (targetSlotId: LeafPosition) => {\n    // If it's the same slot, deactivate it\n    if (activeSlotId === targetSlotId) {\n      return setActiveSlotId(null);\n    }\n\n    // If slot and slot, swap their leaves\n    if (activeSlotId && activeSlotId !== targetSlotId) {\n      setGuesses((g) => {\n        const activeContent = g[activeSlotId];\n        const targetContent = g[targetSlotId];\n\n        return {\n          ...g,\n          [activeSlotId]: targetContent,\n          [targetSlotId]: activeContent,\n        };\n      });\n\n      setActiveSlotId(null);\n      return;\n    }\n\n    // Attach slot to leaf\n    if (activeLeafId) {\n      setGuesses((g) => {\n        const repeat = Object.keys(g).filter((k) => {\n          const key = k as LeafPosition;\n          const l = g[key];\n          return l?.leafId === activeLeafId;\n        });\n\n        const newGuesses = {\n          ...g,\n          [targetSlotId]: {\n            leafId: activeLeafId,\n            rotation: rotations[activeLeafId],\n          },\n        };\n\n        if (repeat.length > 0) {\n          const key = repeat[0] as LeafPosition;\n          newGuesses[key] = null;\n        }\n\n        return newGuesses;\n      });\n\n      setActiveLeafId(null);\n    } else {\n      setActiveSlotId(targetSlotId);\n    }\n  };\n\n  /**\n   * First attempt: Validates clover, if correct submits, else undo wrong leaves\n   * Second attempt: Validates clover, but submits anyway\n   */\n  const submitClover = () => {\n    let correctCount = 0;\n\n    // Verify corrects guesses\n    const locksCopy = { ...locks };\n    const guessesCopy = { ...guesses };\n    Object.keys(guessesCopy).forEach((k) => {\n      const key = k as LeafPosition;\n      const entry = guessesCopy[key];\n\n      if (entry && (entry.score === undefined || entry.score === 0)) {\n        const correctLeaf = clover.leaves[key];\n        const isCorrect =\n          entry.leafId === correctLeaf.leafId && parseRotation(entry.rotation) === correctLeaf.rotation;\n\n        if (isCorrect) {\n          entry.score = attempts === 0 ? FIRST_ATTEMPT_SCORE : SECOND_ATTEMPT_SCORE;\n          correctCount += 1;\n          locksCopy[key] = true;\n        } else if (attempts === 0) {\n          guessesCopy[key] = null;\n        }\n\n        entry.tries = attempts + 1;\n        entry.score = entry.score ?? 0;\n      }\n    });\n\n    // If correct or second attempt, submit\n    if ((correctCount === 4 || attempts === 1) && onSubmit) {\n      onSubmit({\n        activeCloverId: clover.cloverId,\n        guesses: guessesCopy,\n      });\n      return;\n    }\n\n    notification.warn({\n      message: translate(`${4 - correctCount} folhas estão erradas`, `${4 - correctCount} leaves are wrong`),\n      description: translate(\n        'Tente novamente. Pode ter sido folha errada ou rotação errada',\n        'Try again. It may have been wrong leaf or just wrong rotation'\n      ),\n    });\n\n    setGuesses(guessesCopy);\n    setLocks(locksCopy);\n    setAttempts(1);\n  };\n\n  // BOOLEANS\n  const areCluesComplete = clues.every((clue) => clue.trim());\n  const isCloverComplete = Object.values(guesses).every((guess) => Boolean(guess));\n\n  return {\n    mode,\n    rotation,\n    onRotateClover,\n    clues,\n    onClueChange,\n    rotations,\n    onLeafRotate,\n    onRandomizeLeafRotations,\n    guesses,\n    onActivateLeaf,\n    activeLeafId,\n    onActivateSlot,\n    activeSlotId,\n    usedLeavesIds,\n    onLeafRemove,\n    areCluesComplete,\n    isCloverComplete,\n    submitClover,\n    locks,\n  };\n}\n","import { useEffect } from 'react';\nimport { isBrowser, off, on } from './misc/util';\nvar defaultTarget = isBrowser ? window : null;\nvar isListenerType1 = function (target) {\n    return !!target.addEventListener;\n};\nvar isListenerType2 = function (target) {\n    return !!target.on;\n};\nvar useEvent = function (name, handler, target, options) {\n    if (target === void 0) { target = defaultTarget; }\n    useEffect(function () {\n        if (!handler) {\n            return;\n        }\n        if (!target) {\n            return;\n        }\n        if (isListenerType1(target)) {\n            on(target, name, handler, options);\n        }\n        else if (isListenerType2(target)) {\n            target.on(name, handler, options);\n        }\n        return function () {\n            if (isListenerType1(target)) {\n                off(target, name, handler, options);\n            }\n            else if (isListenerType2(target)) {\n                target.off(name, handler, options);\n            }\n        };\n    }, [name, handler, target, JSON.stringify(options)]);\n};\nexport default useEvent;\n","import { useMemo } from 'react';\nimport useEvent from './useEvent';\nimport { noop } from './misc/util';\nvar createKeyPredicate = function (keyFilter) {\n    return typeof keyFilter === 'function'\n        ? keyFilter\n        : typeof keyFilter === 'string'\n            ? function (event) { return event.key === keyFilter; }\n            : keyFilter\n                ? function () { return true; }\n                : function () { return false; };\n};\nvar useKey = function (key, fn, opts, deps) {\n    if (fn === void 0) { fn = noop; }\n    if (opts === void 0) { opts = {}; }\n    if (deps === void 0) { deps = [key]; }\n    var _a = opts.event, event = _a === void 0 ? 'keydown' : _a, target = opts.target, options = opts.options;\n    var useMemoHandler = useMemo(function () {\n        var predicate = createKeyPredicate(key);\n        var handler = function (handlerEvent) {\n            if (predicate(handlerEvent)) {\n                return fn(handlerEvent);\n            }\n        };\n        return handler;\n    }, deps);\n    useEvent(event, useMemoHandler, target, options);\n};\nexport default useKey;\n","import { useState } from 'react';\nimport useKey from './useKey';\nvar useKeyPress = function (keyFilter) {\n    var _a = useState([false, null]), state = _a[0], set = _a[1];\n    useKey(keyFilter, function (event) { return set([true, event]); }, { event: 'keydown' }, [state]);\n    useKey(keyFilter, function (event) { return set([false, event]); }, { event: 'keyup' }, [state]);\n    return state;\n};\nexport default useKeyPress;\n","import { useEffect } from 'react';\nimport { useFirstMountState } from './useFirstMountState';\nvar useUpdateEffect = function (effect, deps) {\n    var isFirstMount = useFirstMountState();\n    useEffect(function () {\n        if (!isFirstMount) {\n            return effect();\n        }\n    }, deps);\n};\nexport default useUpdateEffect;\n","import { useRef } from 'react';\nexport function useFirstMountState() {\n    var isFirst = useRef(true);\n    if (isFirst.current) {\n        isFirst.current = false;\n        return true;\n    }\n    return isFirst.current;\n}\n","import useKeyPressDefault from './useKeyPress';\nimport useUpdateEffect from './useUpdateEffect';\nvar useKeyPressEvent = function (key, keydown, keyup, useKeyPress) {\n    if (useKeyPress === void 0) { useKeyPress = useKeyPressDefault; }\n    var _a = useKeyPress(key), pressed = _a[0], event = _a[1];\n    useUpdateEffect(function () {\n        if (!pressed && keyup) {\n            keyup(event);\n        }\n        else if (pressed && keydown) {\n            keydown(event);\n        }\n    }, [pressed]);\n};\nexport default useKeyPressEvent;\n","// This icon file is generated automatically.\nvar RedoOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M758.2 839.1C851.8 765.9 912 651.9 912 523.9 912 303 733.5 124.3 512.6 124 291.4 123.7 112 302.8 112 523.9c0 125.2 57.5 236.9 147.6 310.2 3.5 2.8 8.6 2.2 11.4-1.3l39.4-50.5c2.7-3.4 2.1-8.3-1.2-11.1-8.1-6.6-15.9-13.7-23.4-21.2a318.64 318.64 0 01-68.6-101.7C200.4 609 192 567.1 192 523.9s8.4-85.1 25.1-124.5c16.1-38.1 39.2-72.3 68.6-101.7 29.4-29.4 63.6-52.5 101.7-68.6C426.9 212.4 468.8 204 512 204s85.1 8.4 124.5 25.1c38.1 16.1 72.3 39.2 101.7 68.6 29.4 29.4 52.5 63.6 68.6 101.7 16.7 39.4 25.1 81.3 25.1 124.5s-8.4 85.1-25.1 124.5a318.64 318.64 0 01-68.6 101.7c-9.3 9.3-19.1 18-29.3 26L668.2 724a8 8 0 00-14.1 3l-39.6 162.2c-1.2 5 2.6 9.9 7.7 9.9l167 .8c6.7 0 10.5-7.7 6.3-12.9l-37.3-47.9z\" } }] }, \"name\": \"redo\", \"theme\": \"outlined\" };\nexport default RedoOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport RedoOutlinedSvg from \"@ant-design/icons-svg/es/asn/RedoOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar RedoOutlined = function RedoOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: RedoOutlinedSvg\n  }));\n};\n\nRedoOutlined.displayName = 'RedoOutlined';\nexport default /*#__PURE__*/React.forwardRef(RedoOutlined);","import { DeleteOutlined, RedoOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport clsx from 'clsx';\nimport { CloverIcon } from 'components/icons/CloverIcon';\nimport { IconAvatar } from 'components/icons/IconAvatar';\nimport { LockIcon } from 'components/icons/LockIcon';\nimport { ReactNode } from 'react';\nimport { getAnimationClass } from 'utils/helpers';\n\ntype LeafProps = {\n  leaf: Leaf;\n  rotation?: number;\n  onLeafGrab?: GenericFunction;\n  onLeafRemove?: GenericFunction;\n  onLeafRotate?: GenericFunction;\n  className?: string;\n  position?: LeafPosition;\n  isLocked?: boolean;\n  icon?: ReactNode;\n};\n\nexport function Leaf({\n  leaf,\n  rotation,\n  onLeafRotate,\n  onLeafRemove,\n  onLeafGrab,\n  className,\n  position,\n  isLocked,\n  icon,\n}: LeafProps) {\n  const grabbable = Boolean(onLeafGrab);\n  const removable = Boolean(onLeafRemove);\n  const rotatable = Boolean(onLeafRotate);\n  const isStatic = !removable && !rotatable;\n\n  return (\n    <div\n      key={`leaf-key-${leaf.id}`}\n      className={clsx('y-leaf', grabbable && `y-leaf--grabbable`, getAnimationClass('fadeIn'), className)}\n      style={{ transform: `rotate(${rotation}deg)` }}\n    >\n      {leaf.cards.map((card: TextCard, cIndex: number) =>\n        !isLocked && grabbable ? (\n          <div\n            role=\"button\"\n            key={card.id}\n            className={clsx('y-leaf__card', 'y-leaf__card-button', `y-leaf__card--${cIndex}`)}\n            onClick={() => onLeafGrab!(leaf.id)}\n          >\n            <div className=\"y-leaf__card-text\">{card.text}</div>\n          </div>\n        ) : (\n          <div key={card.id} className={clsx('y-leaf__card', `y-leaf__card--${cIndex}`)}>\n            <div className=\"y-leaf__card-text\">{card.text}</div>\n          </div>\n        )\n      )}\n      <div className=\"y-leaf__controls\" style={{ transform: `rotate(-${rotation}deg)` }}>\n        {!isLocked && rotatable && (\n          <Button\n            onClick={(e) => onLeafRotate!(e, leaf.id)}\n            className=\"y-leaf__center y-leaf__center--rotatable\"\n            shape=\"circle\"\n          >\n            <RedoOutlined />\n          </Button>\n        )}\n        {!isLocked && removable && (\n          <Button\n            onClick={() => onLeafRemove!(position)}\n            className=\"y-leaf__center y-leaf__center--rotatable\"\n            shape=\"circle\"\n          >\n            <DeleteOutlined />\n          </Button>\n        )}\n\n        {isLocked && (\n          <div className=\"y-leaf__center\">\n            <IconAvatar icon={<LockIcon />} />\n          </div>\n        )}\n\n        {isStatic && (\n          <div className=\"y-leaf__center\">\n            <IconAvatar icon={icon ?? <CloverIcon />} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Components\nimport { Leaf } from './Leaf';\nimport { GuessIcon } from 'components/icons/GuessIcon';\nimport { IconAvatar } from 'components/icons/IconAvatar';\n\ntype LeafSlotProps = {\n  leaf?: Leaf;\n  rotation?: number;\n  position?: LeafPosition;\n  onLeafGrab?: GenericFunction;\n  onLeafRotate?: GenericFunction;\n  onLeafRemove?: GenericFunction;\n  onActivateSlot?: GenericFunction;\n  activeLeafId?: LeafId | null;\n  activeSlotId?: LeafPosition | null;\n  className?: string;\n  isLocked?: boolean;\n  icon?: ReactNode;\n};\n\nexport function LeafSlot({\n  leaf,\n  rotation,\n  position,\n  onLeafGrab,\n  onLeafRotate,\n  onLeafRemove,\n  activeSlotId,\n  onActivateSlot,\n  isLocked,\n  icon,\n}: LeafSlotProps) {\n  if (!leaf && onActivateSlot) {\n    return (\n      <div className={clsx(`y-clover__leaf-${position}`, activeSlotId === position && 'active-class')}>\n        <button\n          key={`clue-key-${position}`}\n          className={clsx(\n            'y-leaf',\n            'y-leaf--empty',\n            'y-leaf--empty-clickable',\n            activeSlotId === position && 'y-leaf--empty-active'\n          )}\n          onClick={(_) => onActivateSlot(position)}\n        >\n          <IconAvatar icon={<GuessIcon />} size=\"large\" />\n        </button>\n      </div>\n    );\n  }\n\n  if (Boolean(onLeafGrab)) {\n    return (\n      <div className={clsx(`y-clover__leaf-${position}`, activeSlotId === position && 'active-class')}>\n        <LeafSlotContent\n          leaf={leaf}\n          position={position}\n          rotation={rotation}\n          onLeafGrab={() => onLeafGrab!(position)}\n          onLeafRotate={onLeafRotate}\n          onLeafRemove={onLeafRemove}\n          isLocked={isLocked}\n          icon={icon}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className={clsx(`y-clover__leaf-${position}`)}>\n      <LeafSlotContent\n        leaf={leaf}\n        position={position}\n        rotation={rotation}\n        onLeafRotate={onLeafRotate}\n        onLeafRemove={onLeafRemove}\n        isLocked={isLocked}\n        icon={icon}\n      />\n    </div>\n  );\n}\n\nfunction LeafSlotContent({\n  leaf,\n  rotation,\n  position,\n  onLeafGrab,\n  onLeafRotate,\n  onLeafRemove,\n  isLocked,\n  className = '',\n  icon,\n}: LeafSlotProps) {\n  return Boolean(leaf) ? (\n    <Leaf\n      key={leaf!.id}\n      leaf={leaf!}\n      onLeafGrab={onLeafGrab}\n      onLeafRotate={onLeafRotate}\n      onLeafRemove={onLeafRemove}\n      rotation={rotation}\n      className={className}\n      position={position}\n      isLocked={isLocked}\n      icon={icon}\n    />\n  ) : (\n    <div key={`clue-key-${position}`} className={clsx('y-leaf', 'y-leaf--empty')}>\n      <IconAvatar icon={<GuessIcon />} size=\"large\" />\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { useRef } from 'react';\nimport { useKeyPressEvent } from 'react-use';\n// Ant Design Resources\nimport { Button, Input, Tooltip } from 'antd';\nimport { RotateLeftOutlined, RotateRightOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { FIRST_ATTEMPT_SCORE, ROTATIONS, SECOND_ATTEMPT_SCORE } from '../utils/constants';\n// Components\nimport { BoxXIcon } from 'components/icons/BoxXIcon';\nimport { BoxOneIcon } from 'components/icons/BoxOneIcon';\nimport { BoxCheckMarkIcon } from 'components/icons/BoxCheckMarkIcon';\nimport { Translate } from 'components/language';\nimport { LeafSlot } from './LeafSlot';\n\ntype CloverProps = {\n  mode: CloverMode;\n  clover: Clover;\n  leaves: Leaves;\n  guesses?: any;\n  rotation: number;\n  onRotate: (direction: number) => void;\n  onClueChange?: (targetIndex: LeafIndex, value: string) => void;\n  rotations?: NumberDictionary;\n  onLeafRotate?: GenericFunction;\n  onLeafRemove?: GenericFunction;\n  activeLeafId?: LeafId | null;\n  activeSlotId?: LeafPosition | null;\n  onLeafGrab?: GenericFunction;\n  onActivateSlot?: GenericFunction;\n  locks?: LeafLocks;\n};\n\nexport function Clover({\n  mode,\n  clover,\n  leaves,\n  guesses,\n  rotation,\n  onRotate,\n  onClueChange,\n  rotations = {},\n  onLeafRotate,\n  onLeafRemove,\n  activeSlotId,\n  onLeafGrab,\n  onActivateSlot,\n  locks,\n}: CloverProps) {\n  const inputRefs = useRef<any[]>([]);\n  const { translate } = useLanguage();\n  const cloverLeaves = Object.entries(clover.leaves);\n\n  useKeyPressEvent('Tab', () => {\n    onRotate(-1);\n  });\n\n  return (\n    <div className=\"container center\">\n      <div className=\"y-clover\" style={{ transform: `rotate(${rotation}deg)` }}>\n        {/* ANSWERS */}\n        {cloverLeaves.map(([_, cloverLeaf], index) => {\n          const leafIndex = Number(index) as LeafIndex;\n\n          if (mode === 'write' && onClueChange) {\n            return (\n              <div\n                key={`clue-key-${leafIndex}`}\n                className={clsx(`y-clover__clue-${leafIndex}`, 'y-clover-clue')}\n              >\n                <Input\n                  ref={(el) => (inputRefs.current[index] = el)}\n                  onChange={onClueChange ? (e) => onClueChange(leafIndex, e.target.value) : undefined}\n                  className={`y-clover-rotation--${ROTATIONS[index]} y-clover-input`}\n                  placeholder={translate('Escreva aqui', 'Write here')}\n                  disabled={!Boolean(onClueChange)}\n                  value={mode === 'write' ? undefined : cloverLeaf.clue}\n                  autoFocus={index === 0}\n                />\n              </div>\n            );\n          }\n\n          return (\n            <div\n              key={`clue-key-${leafIndex}`}\n              className={clsx(`y-clover__clue-${leafIndex}`, 'y-clover-clue')}\n            >\n              <span className={clsx(`y-clover-rotation--${ROTATIONS[index]}`, 'y-clover-clue-readonly')}>\n                {cloverLeaf.clue}\n              </span>\n            </div>\n          );\n        })}\n\n        {/* LEAVES */}\n        {cloverLeaves.map(([cloverLeafPosition, cloverLeaf]) => {\n          const {\n            leaf,\n            rotation: leafRotation,\n            icon,\n          } = getLeaf(mode, leaves, cloverLeafPosition as LeafPosition, cloverLeaf, guesses, rotations);\n\n          return (\n            <LeafSlot\n              key={`slot-${cloverLeafPosition}`}\n              leaf={leaf}\n              rotation={leafRotation}\n              position={cloverLeafPosition as LeafPosition}\n              onLeafGrab={onLeafGrab}\n              onLeafRotate={onLeafRotate}\n              onLeafRemove={onLeafRemove}\n              activeSlotId={activeSlotId}\n              onActivateSlot={onActivateSlot}\n              isLocked={locks?.[cloverLeafPosition as LeafPosition] ?? false}\n              icon={icon}\n            />\n          );\n        })}\n      </div>\n      <div className=\"controls space-container center\">\n        <Button icon={<RotateLeftOutlined />} onClick={() => onRotate(-1)} />\n        <Button icon={<RotateRightOutlined />} onClick={() => onRotate(1)} />\n      </div>\n    </div>\n  );\n}\n\nconst getLeaf = (\n  mode: CloverMode,\n  leaves: Leaves,\n  position: LeafPosition,\n  cloverLeaf: CloverLeaf,\n  guesses: YGuesses,\n  rotations: NumberDictionary\n) => {\n  let leafId = '';\n  switch (mode) {\n    case 'guess':\n      leafId = guesses?.[position]?.leafId ?? '';\n      return {\n        leaf: leaves?.[leafId],\n        rotation: rotations[leafId] ?? 0,\n        icon: undefined,\n      };\n    case 'result':\n      leafId = guesses?.[position]?.leafId ?? '';\n      const guess = guesses?.[position];\n      return {\n        leaf: leaves?.[leafId],\n        rotation: guess?.rotation ?? 0,\n        icon: getIcon(guess?.score ?? 0),\n      };\n    case 'write':\n      leafId = cloverLeaf.leafId;\n      return {\n        leaf: leaves?.[leafId],\n        rotation: rotations[leafId] ?? 0,\n        icon: undefined,\n      };\n    case 'view':\n    default:\n      leafId = cloverLeaf.leafId;\n      return {\n        leaf: leaves?.[leafId],\n        rotation: cloverLeaf.rotation,\n        icon: undefined,\n      };\n  }\n};\n\n/**\n * Get the result icon based on score\n * @param score\n * @returns\n */\nconst getIcon = (score: number) => {\n  switch (score) {\n    case SECOND_ATTEMPT_SCORE:\n      return (\n        <Tooltip title={<Translate pt=\"Acertou na segunda tentativa\" en=\"Got it in their second attempt\" />}>\n          <BoxOneIcon />\n        </Tooltip>\n      );\n    case FIRST_ATTEMPT_SCORE:\n      return (\n        <Tooltip title={<Translate pt=\"Acertou na primeira tentativa\" en=\"Got it in their first attempt\" />}>\n          <BoxCheckMarkIcon />\n        </Tooltip>\n      );\n    case 0:\n    default:\n      return (\n        <Tooltip title={<Translate pt=\"Burro pra carai e não acertou\" en=\"Did not get it right\" />}>\n          <BoxXIcon />;\n        </Tooltip>\n      );\n  }\n};\n","// Utils\nimport { FIRST_ATTEMPT_SCORE, SECOND_ATTEMPT_SCORE } from '../utils/constants';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n\nexport function WritingRules() {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Escreva uma dica (palavra única) que conecte cada um dos pares de palavras na parte de fora do\n            trevo.\n            <br />\n            Você pode girar o trevo para ficar mais fácil de escrever usando os controles na parte inferior.\n            <br />\n            Se o par de palavras estiver muito difícil, você pode girar as cartas brancas, mas cuidado para\n            não avacalhar dicas que você já escreveu.\n          </>\n        }\n        en={\n          <>\n            Write a single-word clue that connects each pair of words in the outer side of the clover.\n            <br />\n            You may rotate the clover when writing using the buttons in the bottom part of the clover\n            container.\n            <br />\n            If the pair of words is too difficult, you may rotate the cards but pay attention on how it will\n            change the other pairs when doing so.\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function GuessingRules() {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Posicione as cartas no trevo de acordo com as dicas.\n            <br />\n            Somente 4 das cartas serão usadas e elas podem estar em qualquer orientação.\n            <br />\n            Clique nas palavras de uma das cartas para pegá-la e então no quadrante do trevo para\n            posicioná-la.\n            <br />\n            Você tem duas chances para adivinhar. Quando apertar Enviar pela primeira vez, o jogo manterá\n            todas as cartas corretas (te dando {FIRST_ATTEMPT_SCORE} pontos) e então você tera uma segunda\n            chance de acertar (ganhando {SECOND_ATTEMPT_SCORE} ponto por cada)\n          </>\n        }\n        en={\n          <>\n            Place the cards below inside the clover according to giving clues.\n            <br />\n            Only 4 of the cards will be used and they can be in any orientation.\n            <br />\n            Click on the card words to grab it then on the clover quadrant you want to place it.\n            <br />\n            You have two chances to guess. When you press the first time the game will validate and keep your\n            correct answers (granting you {FIRST_ATTEMPT_SCORE} points) and then you have a second chance to\n            guess the remainder for {SECOND_ATTEMPT_SCORE} point each.\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n","// Utils\nimport { parseRotation } from '../utils/helpers';\n// Components\nimport { Translate } from 'components/language';\nimport { TextHighlight } from 'components/text';\n\ntype ConfirmCluesProps = {\n  clover: Clover;\n  leaves: Leaves;\n  clues: string[];\n  rotations: NumberDictionary;\n};\n\nexport function ConfirmClues({ clover, leaves, clues, rotations }: ConfirmCluesProps) {\n  const words = getWords(clover, leaves, rotations);\n\n  return (\n    <>\n      <Translate\n        pt=\"Tem certeza que quer enviar as seguintes dicas?\"\n        en=\"Are you sure you want to submit the following clues?\"\n      />\n\n      <ul>\n        {words.map((pair, index) => (\n          <li key={`${pair[0]}-${pair[1]}`}>\n            <TextHighlight>{pair[0]}</TextHighlight>+ <TextHighlight>{pair[1]}</TextHighlight> ={' '}\n            <TextHighlight>{clues[index]}</TextHighlight>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nconst getWords = (clover: Clover, leaves: Leaves, rotations: NumberDictionary) => {\n  const leafA = leaves[clover.leaves.A.leafId];\n  const leafARotation = parseRotation(rotations[leafA.id]);\n  const leafB = leaves[clover.leaves.B.leafId];\n  const leafBRotation = parseRotation(rotations[leafB.id]);\n  const leafC = leaves[clover.leaves.C.leafId];\n  const leafCRotation = parseRotation(rotations[leafC.id]);\n  const leafD = leaves[clover.leaves.D.leafId];\n  const leafDRotation = parseRotation(rotations[leafD.id]);\n\n  const indexes: Record<number, number> = {\n    0: 0,\n    90: 3,\n    180: 2,\n    270: 1,\n  };\n\n  const getIndex = (rotationData: number, addition = 0) => {\n    return (indexes[rotationData % 360] + addition) % 4;\n  };\n\n  return [\n    [leafA.cards[getIndex(leafARotation)].text, leafB.cards[getIndex(leafBRotation)].text],\n    [leafB.cards[getIndex(leafBRotation, 1)].text, leafC.cards[getIndex(leafCRotation, 1)].text],\n    [leafC.cards[getIndex(leafCRotation, 2)].text, leafD.cards[getIndex(leafDRotation, 2)].text],\n    [leafD.cards[getIndex(leafDRotation, 3)].text, leafA.cards[getIndex(leafARotation, 3)].text],\n  ];\n};\n","// Ant Design Resources\nimport { Button, Popconfirm, Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockClues } from './utils/mock';\nimport { prepareClueSubmission } from './utils/helpers';\nimport { useCloverState } from './utils/useCloverState';\n// Components\nimport { DebugOnly } from 'components/debug';\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\nimport { Clover } from './components/Clover';\nimport { WritingRules } from './components/RulesBlobs';\nimport { PopoverRule } from 'components/rules';\nimport { ConfirmClues } from './components/ConfirmClues';\n\ntype StepWriteCluesProps = {\n  clover: Clover;\n  leaves: Leaves;\n  onSubmitClues: GenericFunction;\n};\n\nexport function StepWriteClues({ clover, leaves, onSubmitClues }: StepWriteCluesProps) {\n  const { isLoading } = useLoading();\n  const {\n    mode,\n    rotation,\n    onRotateClover,\n    clues,\n    onClueChange,\n    rotations,\n    onLeafRotate,\n    onRandomizeLeafRotations,\n    areCluesComplete,\n  } = useCloverState('write', clover, leaves);\n\n  const onSubmit = () => {\n    onSubmitClues({ clues: prepareClueSubmission(clues, clover, rotations) });\n  };\n\n  const onSubmitMock = () => {\n    onSubmitClues({ clues: prepareClueSubmission(mockClues(clover, leaves, rotations), clover, rotations) });\n  };\n\n  useMock(() => {\n    onSubmitClues({ clues: prepareClueSubmission(mockClues(clover, leaves, rotations), clover, rotations) });\n  });\n\n  return (\n    <Step fullWidth>\n      <Title size=\"medium\">\n        <Translate pt=\"Escreva as dicas\" en=\"Write clues\" />\n      </Title>\n\n      <WritingRules />\n\n      <PopoverRule content={<WritingRules />} />\n\n      <Space className=\"space-container\" align=\"center\">\n        <Button type=\"default\" size=\"large\" onClick={onRandomizeLeafRotations} disabled={isLoading}>\n          <Translate pt=\"Chacoalhar cartas\" en=\"Randomize rotations\" />\n        </Button>\n      </Space>\n\n      <Clover\n        mode={mode}\n        clover={clover}\n        leaves={leaves}\n        rotation={rotation}\n        onRotate={onRotateClover}\n        onClueChange={onClueChange}\n        rotations={rotations}\n        onLeafRotate={onLeafRotate}\n      />\n\n      <Space className=\"space-container\" align=\"center\">\n        <Popconfirm\n          title={<ConfirmClues clover={clover} leaves={leaves} clues={clues} rotations={rotations} />}\n          disabled={!areCluesComplete || isLoading}\n          onConfirm={onSubmit}\n        >\n          <Button\n            type=\"primary\"\n            size=\"large\"\n            disabled={!areCluesComplete || isLoading}\n            onClick={() => onRotateClover((rotation / 90) * -1)}\n          >\n            <Translate pt=\"Enviar dicas\" en=\"Submit clues\" />\n          </Button>\n        </Popconfirm>\n\n        <DebugOnly devOnly>\n          <Button size=\"large\" onClick={onSubmitMock}>\n            Mock clues\n          </Button>\n        </DebugOnly>\n      </Space>\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useIsUserReady } from 'hooks/useIsUserReady';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useOnSubmitCluesAPIRequest } from './utils/api-requests';\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\nimport { WritingIcon } from 'components/icons/WritingIcon';\nimport { StepWriteClues } from './StepWriteClues';\n\nfunction PhaseCloverWriting({ players, state, info }: PhaseProps) {\n  const isUserReady = useIsUserReady(players, state);\n  const { translate } = useLanguage();\n  const user = useUser(players);\n  const { step, goToNextStep, setStep } = useStep(0);\n\n  const onSubmitClues = useOnSubmitCluesAPIRequest(setStep);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.TREVO_DA_SORTE.CLOVER_WRITING}>\n      <StepSwitcher step={step} conditions={[!isUserReady, !isUserReady, !isUserReady]} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<WritingIcon />}\n          title={translate('Escreva as dicas', 'Write the clues')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <Translate pt=\"Para cada par, escreva uma dica\" en=\"For each pair, write a clue\" />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepWriteClues clover={user.clover} leaves={user.leaves} onSubmitClues={onSubmitClues} />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseCloverWriting;\n","import clsx from 'clsx';\nimport { useMemo } from 'react';\nimport { orderBy } from 'lodash';\n// And Design Resources\nimport { Space } from 'antd';\n// Components\nimport { Instruction } from 'components/text';\nimport { Leaf } from './Leaf';\n\ntype DetachedLeavesProps = {\n  leaves: Leaves;\n  usedLeavesIds: LeafId[];\n  rotations: NumberDictionary;\n  onLeafRotate: LeafEvent;\n  activeLeafId?: LeafId | null;\n  onLeafGrab?: GenericFunction;\n};\n\nexport function DetachedLeaves({\n  leaves,\n  onLeafRotate,\n  rotations,\n  activeLeafId,\n  onLeafGrab,\n  usedLeavesIds,\n}: DetachedLeavesProps) {\n  const availableLeaves = useMemo(\n    () => orderBy(Object.values(leaves), 'id').filter((leaf) => !usedLeavesIds.includes(leaf.id)),\n    [leaves, usedLeavesIds]\n  );\n\n  return (\n    <Instruction contained>\n      <Space className=\"space-container\" align=\"center\" wrap>\n        {availableLeaves.map((leaf) => {\n          return (\n            <div className=\"y-leaf-loose\" key={leaf.id}>\n              <Leaf\n                key={leaf!.id}\n                leaf={leaf!}\n                onLeafGrab={onLeafGrab}\n                onLeafRotate={onLeafRotate}\n                rotation={rotations?.[leaf.id]}\n                className={clsx(activeLeafId === leaf.id && 'y-leaf--active')}\n              />\n            </div>\n          );\n        })}\n      </Space>\n    </Instruction>\n  );\n}\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\n// Utils\nimport { mockGuesses } from './utils/mock';\nimport { useCloverState } from './utils/useCloverState';\n// Components\nimport { AvatarName } from 'components/avatars';\nimport { DebugOnly } from 'components/debug';\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\nimport { Clover } from './components/Clover';\nimport { DetachedLeaves } from './components/DetachedLeaves';\nimport { GuessingRules } from './components/RulesBlobs';\nimport { PopoverRule } from 'components/rules';\n\ntype StepGuessCloverProps = {\n  clover: Clover;\n  leaves: Leaves;\n  onSubmitGuess: GenericFunction;\n  activeCloverPlayer: GamePlayer;\n  isUserTheCloverPlayer: boolean;\n};\n\nexport function StepGuessClover({ clover, leaves, onSubmitGuess, activeCloverPlayer }: StepGuessCloverProps) {\n  const { isLoading } = useLoading();\n  const {\n    rotation,\n    rotations,\n    onLeafRotate,\n    onRotateClover,\n    guesses,\n    onActivateLeaf,\n    activeLeafId,\n    onActivateSlot,\n    activeSlotId,\n    usedLeavesIds,\n    onLeafRemove,\n    isCloverComplete,\n    submitClover,\n    locks,\n  } = useCloverState('guess', clover, leaves, onSubmitGuess);\n\n  const onSubmitMock = () => {\n    onSubmitGuess({\n      guesses: mockGuesses(leaves),\n      activeCloverId: clover.cloverId,\n    });\n  };\n\n  return (\n    <Step fullWidth>\n      <Title size=\"medium\">\n        <Translate\n          pt={\n            <>\n              Adivinhação do trevo do(a) <AvatarName player={activeCloverPlayer} />\n            </>\n          }\n          en={\n            <>\n              Guessing <AvatarName player={activeCloverPlayer} />\n              's clover\n            </>\n          }\n        />\n      </Title>\n\n      <GuessingRules />\n\n      <PopoverRule content={<GuessingRules />} />\n\n      <Clover\n        mode=\"guess\"\n        clover={clover}\n        leaves={leaves}\n        onRotate={onRotateClover}\n        rotation={rotation}\n        onLeafRotate={onLeafRotate}\n        rotations={rotations}\n        guesses={guesses}\n        onLeafGrab={onActivateLeaf}\n        activeLeafId={activeLeafId}\n        onActivateSlot={onActivateSlot}\n        activeSlotId={activeSlotId}\n        onLeafRemove={onLeafRemove}\n        locks={locks}\n      />\n\n      <DetachedLeaves\n        leaves={leaves}\n        rotations={rotations}\n        onLeafRotate={onLeafRotate}\n        onLeafGrab={onActivateLeaf}\n        activeLeafId={activeLeafId}\n        usedLeavesIds={usedLeavesIds}\n      />\n\n      <Space className=\"space-container\" align=\"center\">\n        <Button type=\"primary\" size=\"large\" onClick={submitClover} disabled={!isCloverComplete || isLoading}>\n          <Translate pt=\"Enviar adivinhação\" en=\"Submit guess\" />\n        </Button>\n\n        <DebugOnly devOnly>\n          <Button size=\"large\" onClick={onSubmitMock}>\n            Mock guesses\n          </Button>\n        </DebugOnly>\n      </Space>\n    </Step>\n  );\n}\n","// Hooks\nimport { useCloverState } from './utils/useCloverState';\n// Components\nimport { AvatarName } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Clover } from './components/Clover';\nimport { DetachedLeaves } from './components/DetachedLeaves';\n\ntype StepWaitCloverProps = {\n  activeCloverPlayer: GamePlayer;\n  clover: Clover;\n  leaves: Leaves;\n};\n\nexport function StepWaitClover({ activeCloverPlayer, clover, leaves }: StepWaitCloverProps) {\n  const { mode, rotation, rotations, onLeafRotate, onRotateClover, usedLeavesIds } = useCloverState(\n    'view',\n    clover,\n    leaves\n  );\n\n  return (\n    <Step fullWidth>\n      <Title size=\"medium\">\n        <Translate\n          pt={\n            <>\n              Adivinhação do trevo do(a) <AvatarName player={activeCloverPlayer} />\n            </>\n          }\n          en={\n            <>\n              Guessing <AvatarName player={activeCloverPlayer} />\n              's clover\n            </>\n          }\n        />\n      </Title>\n\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Aguarde enquanto os outros jogadores tentam adivinhar.\n              <br />\n              Enquanto isso, veja as cartas que eles tem disponíveis.\n            </>\n          }\n          en={\n            <>\n              Wait while other players are trying to guess your clover.\n              <br /> In the meantime, check it out the cards they have available.\n            </>\n          }\n        />\n      </Instruction>\n\n      <Clover mode={mode} clover={clover} leaves={leaves} onRotate={onRotateClover} rotation={rotation} />\n\n      <DetachedLeaves\n        leaves={leaves}\n        rotations={rotations}\n        onLeafRotate={onLeafRotate}\n        usedLeavesIds={usedLeavesIds}\n      />\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useIsUserReady } from 'hooks/useIsUserReady';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useOnSubmitGuessAPIRequest } from './utils/api-requests';\nimport { useStep } from 'hooks/useStep';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\nimport { StepGuessClover } from './StepGuessClover';\nimport { CloverIcon } from 'components/icons/CloverIcon';\nimport { ViewOr } from 'components/views';\nimport { TurnOrder } from 'components/players';\nimport { StepWaitClover } from './StepWaitClover';\n\nfunction PhaseCloverGuessing({ players, state, info }: PhaseProps) {\n  const isUserReady = useIsUserReady(players, state);\n  const { translate } = useLanguage();\n  const { step, goToNextStep, setStep } = useStep(0);\n  const [activeCloverPlayer, isUserTheCloverPlayer] = useWhichPlayerIsThe('activeCloverId', state, players);\n\n  const onSubmitGuess = useOnSubmitGuessAPIRequest(setStep);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.TREVO_DA_SORTE.CLOVER_GUESSING}>\n      <StepSwitcher step={step} conditions={[!isUserReady, !isUserReady, !isUserReady]} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<CloverIcon />}\n          title={translate('Hora de Adivinhar', 'Time to guess')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <Translate\n              pt=\"De um em um, vamos tentar adivinhar a posição das folhas em cada trevo\"\n              en=\"One at a time, let's try to guess the position of each leaf on each clover\"\n            />\n          </Instruction>\n\n          <TurnOrder players={players} activePlayerId={state.activeCloverId} order={state.gameOrder} />\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <ViewOr orCondition={isUserTheCloverPlayer}>\n          <StepWaitClover\n            activeCloverPlayer={activeCloverPlayer}\n            clover={state.clover}\n            leaves={state.leaves}\n          />\n\n          <StepGuessClover\n            clover={state.clover}\n            leaves={state.leaves}\n            onSubmitGuess={onSubmitGuess}\n            activeCloverPlayer={activeCloverPlayer}\n            isUserTheCloverPlayer={isUserTheCloverPlayer}\n          />\n        </ViewOr>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseCloverGuessing;\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Tabs } from 'antd';\n// Utils\nimport { sortPlayers } from 'utils/helpers';\n// Components\nimport { AvatarName } from 'components/avatars';\nimport { Instruction } from 'components/text';\nimport { Clover } from './Clover';\n\ntype PlayersGuessesProps = {\n  players: GamePlayers;\n  clover: Clover;\n  leaves: Leaves;\n  rotation: number;\n  onRotate: GenericFunction;\n  activeCloverId: PlayerId;\n};\n\nexport function PlayersGuesses({\n  players,\n  clover,\n  leaves,\n  rotation,\n  onRotate,\n  activeCloverId,\n}: PlayersGuessesProps) {\n  const sortedPlayers = sortPlayers(players).filter((player) => player.id !== activeCloverId);\n  const [activePlayerTab, setActivePlayerTab] = useState(`${sortedPlayers[0].id}::tab`);\n  const items = sortedPlayers.map((player) => {\n    return {\n      key: `${player.id}::tab`,\n      label: <AvatarName player={player} />,\n      children: (\n        <Clover\n          mode=\"result\"\n          clover={clover}\n          leaves={leaves}\n          rotation={rotation}\n          onRotate={onRotate}\n          guesses={player.guesses[activeCloverId]?.leaves ?? {}}\n        />\n      ),\n    };\n  });\n\n  return (\n    <Instruction contained>\n      <Tabs activeKey={activePlayerTab} onChange={(key) => setActivePlayerTab(key)} items={items} />\n    </Instruction>\n  );\n}\n","// Hooks\nimport { useCloverState } from './utils/useCloverState';\n// Components\nimport { AdminNextPhaseButton } from 'components/admin';\nimport { Translate } from 'components/language';\nimport { StepRankingWrapper } from 'components/ranking';\nimport { Clover } from './components/Clover';\nimport { PlayersGuesses } from './components/PlayersGuesses';\n\ntype StepRankingProps = {\n  players: GamePlayers;\n  ranking: GameRanking;\n  round: GameRound;\n  lastRound?: boolean;\n  clover: Clover;\n  leaves: Leaves;\n  activeCloverId: PlayerId;\n};\n\nexport function StepRanking({\n  players,\n  ranking,\n  round,\n  lastRound,\n  clover,\n  leaves,\n  activeCloverId,\n}: StepRankingProps) {\n  const { mode, rotation, onRotateClover } = useCloverState('view', clover, leaves);\n\n  return (\n    <StepRankingWrapper\n      players={players}\n      ranking={ranking}\n      gainedPointsDescriptions={[\n        <Translate pt=\"Pontos por encontrar só um jogador\" en=\"Points for matching only 1 player\" />,\n        <Translate pt=\"Pontos por encontrar mais de um jogador\" en=\"Points for matching with more players\" />,\n        <Translate\n          pt=\"Pontos perdidos por não ter dado match e estar em um pesadelo\"\n          en=\"Points lost for not matching any player while in a nightmare\"\n        />,\n      ]}\n    >\n      <Clover mode={mode} clover={clover} leaves={leaves} onRotate={onRotateClover} rotation={rotation} />\n\n      <PlayersGuesses\n        players={players}\n        clover={clover}\n        leaves={leaves}\n        onRotate={onRotateClover}\n        rotation={rotation}\n        activeCloverId={activeCloverId}\n      />\n\n      <AdminNextPhaseButton round={round} lastRound={lastRound}>\n        <Translate pt=\"Próximo Trevo ou Game Over\" en=\"Next Clover or Game Over\" />\n      </AdminNextPhaseButton>\n    </StepRankingWrapper>\n  );\n}\n","// State & Hooks\nimport { useIsUserReady } from 'hooks/useIsUserReady';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useStep } from 'hooks/useStep';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\nimport { RankIcon } from 'components/icons/RankIcon';\nimport { StepRanking } from './StepRanking';\n\nfunction PhaseResults({ players, state, info }: PhaseProps) {\n  const isUserReady = useIsUserReady(players, state);\n  const { translate } = useLanguage();\n  const { step, goToNextStep } = useStep(0);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.TREVO_DA_SORTE.RESULTS}>\n      <StepSwitcher step={step} conditions={[!isUserReady, !isUserReady]} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<RankIcon />}\n          title={translate('Resultado', 'Results')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <Translate pt=\"Quantos pontos você ganhou?\" en=\"How many points did you get?\" />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepRanking\n          players={players}\n          round={state.round}\n          clover={state.clover}\n          leaves={state.leaves}\n          ranking={state.ranking}\n          lastRound={state.lastRound}\n          activeCloverId={state.activeCloverId}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseResults;\n","// Components\nimport { GameOverWrapper } from 'components/game-over';\nimport { TrophyIcon } from 'components/icons/TrophyIcon';\n\nfunction PhaseGameOver({ state, info }: PhaseProps) {\n  return <GameOverWrapper info={info} state={state} announcementIcon={<TrophyIcon />} />;\n}\n\nexport default PhaseGameOver;\n","import { ConfigProvider } from 'antd';\n// Constants\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport PhaseWordSelection from './PhaseWordSelection';\nimport PhaseCloverWriting from './PhaseCloverWriting';\nimport PhaseCloverGuessing from './PhaseCloverGuessing';\nimport PhaseResults from './PhaseResults';\nimport PhaseGameOver from './PhaseGameOver';\n// Fonts\nimport 'assets/fonts/architects-daughter.scss';\n\nConfigProvider.config({\n  theme: {\n    primaryColor: THEME_COLORS.GRASS,\n  },\n});\n\nfunction SessionTrevoDaSorte({ gameId }: SessionProps) {\n  function getActiveComponent(phase: string) {\n    switch (phase) {\n      case PHASES.DEFAULT.LOBBY:\n        return PhaseLobby;\n      case PHASES.DEFAULT.RULES:\n        return PhaseRules;\n      case PHASES.DEFAULT.SETUP:\n        return PhaseSetup;\n      case PHASES.TREVO_DA_SORTE.WORD_SELECTION:\n        return PhaseWordSelection;\n      case PHASES.TREVO_DA_SORTE.CLOVER_WRITING:\n        return PhaseCloverWriting;\n      case PHASES.TREVO_DA_SORTE.CLOVER_GUESSING:\n        return PhaseCloverGuessing;\n      case PHASES.TREVO_DA_SORTE.RESULTS:\n        return PhaseResults;\n      case PHASES.DEFAULT.GAME_OVER:\n        return PhaseGameOver;\n      default:\n        return PageError;\n    }\n  }\n\n  return (\n    <Session\n      gameId={gameId}\n      gameCollection={GAME_COLLECTION.TREVO_DA_SORTE}\n      getActiveComponent={getActiveComponent}\n      backgroundClassName=\"y-background\"\n    />\n  );\n}\n\nexport default SessionTrevoDaSorte;\n","import { useState } from 'react';\n\nexport function useBooleanDictionary(\n  /**\n   * The initial state, usually an empty object\n   */\n  initialState: BooleanDictionary,\n  // Confirm if entry can be added to the dictionary\n  validation?: BooleanFunction\n): [BooleanDictionary, GenericFunction] {\n  const [dict, setDict] = useState(initialState);\n\n  const updateDict = (key: string) => {\n    const isValid = !validation || validation(dict);\n    if (!dict[key] && isValid) {\n      setDict((s) => ({\n        ...s,\n        [key]: true,\n      }));\n    } else {\n      const dictCopy = { ...dict };\n      delete dictCopy[key];\n      setDict(dictCopy);\n    }\n  };\n\n  return [dict, updateDict];\n}\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\n/**\n * Gets player that is assigned to a property in the state\n * @param propertyName\n * @param state\n * @param players\n * @returns a player instance, a boolean if the player is assigned to given property\n */\nexport function useWhichPlayerIsThe(\n  propertyName = 'activePlayer',\n  state: PlainObject = {},\n  players: Players = {}\n): [GamePlayer, boolean] {\n  const [userId] = useGlobalState('userId');\n  const [activePlayer, setActivePlayer] = useState<GamePlayer>({});\n  const [isUser, setIsUser] = useState(false);\n\n  // Determine if user is active as the guesser, the clue giver, the psychic, the storyteller, etc\n  useEffect(() => {\n    const activePlayer = state?.[propertyName];\n    setActivePlayer(players?.[activePlayer] ?? {});\n    setIsUser(state?.[propertyName] === userId);\n  }, [players, propertyName, state, userId]);\n\n  return [activePlayer, isUser];\n}\n","// This icon file is generated automatically.\nvar CaretUpOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"0 0 1024 1024\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M858.9 689L530.5 308.2c-9.4-10.9-27.5-10.9-37 0L165.1 689c-12.2 14.2-1.2 35 18.5 35h656.8c19.7 0 30.7-20.8 18.5-35z\" } }] }, \"name\": \"caret-up\", \"theme\": \"outlined\" };\nexport default CaretUpOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CaretUpOutlinedSvg from \"@ant-design/icons-svg/es/asn/CaretUpOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CaretUpOutlined = function CaretUpOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CaretUpOutlinedSvg\n  }));\n};\n\nCaretUpOutlined.displayName = 'CaretUpOutlined';\nexport default /*#__PURE__*/React.forwardRef(CaretUpOutlined);","// This icon file is generated automatically.\nvar CrownFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M899.6 276.5L705 396.4 518.4 147.5a8.06 8.06 0 00-12.9 0L319 396.4 124.3 276.5c-5.7-3.5-13.1 1.2-12.2 7.9L188.5 865c1.1 7.9 7.9 14 16 14h615.1c8 0 14.9-6 15.9-14l76.4-580.6c.8-6.7-6.5-11.4-12.3-7.9zM512 734.2c-62.1 0-112.6-50.5-112.6-112.6S449.9 509 512 509s112.6 50.5 112.6 112.6S574.1 734.2 512 734.2zm0-160.9c-26.6 0-48.2 21.6-48.2 48.3 0 26.6 21.6 48.3 48.2 48.3s48.2-21.6 48.2-48.3c0-26.6-21.6-48.3-48.2-48.3z\" } }] }, \"name\": \"crown\", \"theme\": \"filled\" };\nexport default CrownFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CrownFilledSvg from \"@ant-design/icons-svg/es/asn/CrownFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CrownFilled = function CrownFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CrownFilledSvg\n  }));\n};\n\nCrownFilled.displayName = 'CrownFilled';\nexport default /*#__PURE__*/React.forwardRef(CrownFilled);","// This icon file is generated automatically.\nvar DeleteOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z\" } }] }, \"name\": \"delete\", \"theme\": \"outlined\" };\nexport default DeleteOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DeleteOutlinedSvg from \"@ant-design/icons-svg/es/asn/DeleteOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar DeleteOutlined = function DeleteOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: DeleteOutlinedSvg\n  }));\n};\n\nDeleteOutlined.displayName = 'DeleteOutlined';\nexport default /*#__PURE__*/React.forwardRef(DeleteOutlined);","// This icon file is generated automatically.\nvar StarFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M908.1 353.1l-253.9-36.9L540.7 86.1c-3.1-6.3-8.2-11.4-14.5-14.5-15.8-7.8-35-1.3-42.9 14.5L369.8 316.2l-253.9 36.9c-7 1-13.4 4.3-18.3 9.3a32.05 32.05 0 00.6 45.3l183.7 179.1-43.4 252.9a31.95 31.95 0 0046.4 33.7L512 754l227.1 119.4c6.2 3.3 13.4 4.4 20.3 3.2 17.4-3 29.1-19.5 26.1-36.9l-43.4-252.9 183.7-179.1c5-4.9 8.3-11.3 9.3-18.3 2.7-17.5-9.5-33.7-27-36.3z\" } }] }, \"name\": \"star\", \"theme\": \"filled\" };\nexport default StarFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport StarFilledSvg from \"@ant-design/icons-svg/es/asn/StarFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar StarFilled = function StarFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: StarFilledSvg\n  }));\n};\n\nStarFilled.displayName = 'StarFilled';\nexport default /*#__PURE__*/React.forwardRef(StarFilled);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport React from 'react';\n\nvar Star = /*#__PURE__*/function (_React$Component) {\n  _inherits(Star, _React$Component);\n\n  var _super = _createSuper(Star);\n\n  function Star() {\n    var _this;\n\n    _classCallCheck(this, Star);\n\n    _this = _super.apply(this, arguments);\n\n    _this.onHover = function (e) {\n      var _this$props = _this.props,\n          onHover = _this$props.onHover,\n          index = _this$props.index;\n      onHover(e, index);\n    };\n\n    _this.onClick = function (e) {\n      var _this$props2 = _this.props,\n          onClick = _this$props2.onClick,\n          index = _this$props2.index;\n      onClick(e, index);\n    };\n\n    _this.onKeyDown = function (e) {\n      var _this$props3 = _this.props,\n          onClick = _this$props3.onClick,\n          index = _this$props3.index;\n\n      if (e.keyCode === 13) {\n        onClick(e, index);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Star, [{\n    key: \"getClassName\",\n    value: function getClassName() {\n      var _this$props4 = this.props,\n          prefixCls = _this$props4.prefixCls,\n          index = _this$props4.index,\n          value = _this$props4.value,\n          allowHalf = _this$props4.allowHalf,\n          focused = _this$props4.focused;\n      var starValue = index + 1;\n      var className = prefixCls;\n\n      if (value === 0 && index === 0 && focused) {\n        className += \" \".concat(prefixCls, \"-focused\");\n      } else if (allowHalf && value + 0.5 >= starValue && value < starValue) {\n        className += \" \".concat(prefixCls, \"-half \").concat(prefixCls, \"-active\");\n\n        if (focused) {\n          className += \" \".concat(prefixCls, \"-focused\");\n        }\n      } else {\n        className += starValue <= value ? \" \".concat(prefixCls, \"-full\") : \" \".concat(prefixCls, \"-zero\");\n\n        if (starValue === value && focused) {\n          className += \" \".concat(prefixCls, \"-focused\");\n        }\n      }\n\n      return className;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var onHover = this.onHover,\n          onClick = this.onClick,\n          onKeyDown = this.onKeyDown;\n      var _this$props5 = this.props,\n          disabled = _this$props5.disabled,\n          prefixCls = _this$props5.prefixCls,\n          character = _this$props5.character,\n          characterRender = _this$props5.characterRender,\n          index = _this$props5.index,\n          count = _this$props5.count,\n          value = _this$props5.value;\n      var characterNode = typeof character === 'function' ? character(this.props) : character;\n      var start = /*#__PURE__*/React.createElement(\"li\", {\n        className: this.getClassName()\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onClick: disabled ? null : onClick,\n        onKeyDown: disabled ? null : onKeyDown,\n        onMouseMove: disabled ? null : onHover,\n        role: \"radio\",\n        \"aria-checked\": value > index ? 'true' : 'false',\n        \"aria-posinset\": index + 1,\n        \"aria-setsize\": count,\n        tabIndex: disabled ? -1 : 0\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-first\")\n      }, characterNode), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-second\")\n      }, characterNode)));\n\n      if (characterRender) {\n        start = characterRender(start, this.props);\n      }\n\n      return start;\n    }\n  }]);\n\n  return Star;\n}(React.Component);\n\nexport { Star as default };","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport React from 'react';\nimport findDOMNode from \"rc-util/es/Dom/findDOMNode\";\nimport classNames from 'classnames';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport { getOffsetLeft } from './util';\nimport Star from './Star';\n\nfunction noop() {}\n\nvar Rate = /*#__PURE__*/function (_React$Component) {\n  _inherits(Rate, _React$Component);\n\n  var _super = _createSuper(Rate);\n\n  function Rate(props) {\n    var _this;\n\n    _classCallCheck(this, Rate);\n\n    _this = _super.call(this, props);\n\n    _this.onHover = function (event, index) {\n      var onHoverChange = _this.props.onHoverChange;\n\n      var hoverValue = _this.getStarValue(index, event.pageX);\n\n      var cleanedValue = _this.state.cleanedValue;\n\n      if (hoverValue !== cleanedValue) {\n        _this.setState({\n          hoverValue: hoverValue,\n          cleanedValue: null\n        });\n      }\n\n      onHoverChange(hoverValue);\n    };\n\n    _this.onMouseLeave = function () {\n      var onHoverChange = _this.props.onHoverChange;\n\n      _this.setState({\n        hoverValue: undefined,\n        cleanedValue: null\n      });\n\n      onHoverChange(undefined);\n    };\n\n    _this.onClick = function (event, index) {\n      var allowClear = _this.props.allowClear;\n      var value = _this.state.value;\n\n      var newValue = _this.getStarValue(index, event.pageX);\n\n      var isReset = false;\n\n      if (allowClear) {\n        isReset = newValue === value;\n      }\n\n      _this.onMouseLeave();\n\n      _this.changeValue(isReset ? 0 : newValue);\n\n      _this.setState({\n        cleanedValue: isReset ? newValue : null\n      });\n    };\n\n    _this.onFocus = function () {\n      var onFocus = _this.props.onFocus;\n\n      _this.setState({\n        focused: true\n      });\n\n      if (onFocus) {\n        onFocus();\n      }\n    };\n\n    _this.onBlur = function () {\n      var onBlur = _this.props.onBlur;\n\n      _this.setState({\n        focused: false\n      });\n\n      if (onBlur) {\n        onBlur();\n      }\n    };\n\n    _this.onKeyDown = function (event) {\n      var keyCode = event.keyCode;\n      var _this$props = _this.props,\n          count = _this$props.count,\n          allowHalf = _this$props.allowHalf,\n          onKeyDown = _this$props.onKeyDown,\n          direction = _this$props.direction;\n      var reverse = direction === 'rtl';\n      var value = _this.state.value;\n\n      if (keyCode === KeyCode.RIGHT && value < count && !reverse) {\n        if (allowHalf) {\n          value += 0.5;\n        } else {\n          value += 1;\n        }\n\n        _this.changeValue(value);\n\n        event.preventDefault();\n      } else if (keyCode === KeyCode.LEFT && value > 0 && !reverse) {\n        if (allowHalf) {\n          value -= 0.5;\n        } else {\n          value -= 1;\n        }\n\n        _this.changeValue(value);\n\n        event.preventDefault();\n      } else if (keyCode === KeyCode.RIGHT && value > 0 && reverse) {\n        if (allowHalf) {\n          value -= 0.5;\n        } else {\n          value -= 1;\n        }\n\n        _this.changeValue(value);\n\n        event.preventDefault();\n      } else if (keyCode === KeyCode.LEFT && value < count && reverse) {\n        if (allowHalf) {\n          value += 0.5;\n        } else {\n          value += 1;\n        }\n\n        _this.changeValue(value);\n\n        event.preventDefault();\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event);\n      }\n    };\n\n    _this.saveRef = function (index) {\n      return function (node) {\n        _this.stars[index] = node;\n      };\n    };\n\n    _this.saveRate = function (node) {\n      _this.rate = node;\n    };\n\n    var value = props.value;\n\n    if (value === undefined) {\n      value = props.defaultValue;\n    }\n\n    _this.stars = {};\n    _this.state = {\n      value: value,\n      focused: false,\n      cleanedValue: null\n    };\n    return _this;\n  }\n\n  _createClass(Rate, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props2 = this.props,\n          autoFocus = _this$props2.autoFocus,\n          disabled = _this$props2.disabled;\n\n      if (autoFocus && !disabled) {\n        this.focus();\n      }\n    }\n  }, {\n    key: \"getStarDOM\",\n    value: function getStarDOM(index) {\n      return findDOMNode(this.stars[index]);\n    }\n  }, {\n    key: \"getStarValue\",\n    value: function getStarValue(index, x) {\n      var _this$props3 = this.props,\n          allowHalf = _this$props3.allowHalf,\n          direction = _this$props3.direction;\n      var reverse = direction === 'rtl';\n      var value = index + 1;\n\n      if (allowHalf) {\n        var starEle = this.getStarDOM(index);\n        var leftDis = getOffsetLeft(starEle);\n        var width = starEle.clientWidth;\n\n        if (reverse && x - leftDis > width / 2) {\n          value -= 0.5;\n        } else if (!reverse && x - leftDis < width / 2) {\n          value -= 0.5;\n        }\n      }\n\n      return value;\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      var disabled = this.props.disabled;\n\n      if (!disabled) {\n        this.rate.focus();\n      }\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      var disabled = this.props.disabled;\n\n      if (!disabled) {\n        this.rate.blur();\n      }\n    }\n  }, {\n    key: \"changeValue\",\n    value: function changeValue(value) {\n      var onChange = this.props.onChange;\n\n      if (!('value' in this.props)) {\n        this.setState({\n          value: value\n        });\n      }\n\n      onChange(value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          count = _this$props4.count,\n          allowHalf = _this$props4.allowHalf,\n          style = _this$props4.style,\n          prefixCls = _this$props4.prefixCls,\n          disabled = _this$props4.disabled,\n          className = _this$props4.className,\n          character = _this$props4.character,\n          characterRender = _this$props4.characterRender,\n          tabIndex = _this$props4.tabIndex,\n          direction = _this$props4.direction;\n      var _this$state = this.state,\n          value = _this$state.value,\n          hoverValue = _this$state.hoverValue,\n          focused = _this$state.focused;\n      var stars = [];\n      var disabledClass = disabled ? \"\".concat(prefixCls, \"-disabled\") : '';\n\n      for (var index = 0; index < count; index += 1) {\n        stars.push( /*#__PURE__*/React.createElement(Star, {\n          ref: this.saveRef(index),\n          index: index,\n          count: count,\n          disabled: disabled,\n          prefixCls: \"\".concat(prefixCls, \"-star\"),\n          allowHalf: allowHalf,\n          value: hoverValue === undefined ? value : hoverValue,\n          onClick: this.onClick,\n          onHover: this.onHover,\n          key: index,\n          character: character,\n          characterRender: characterRender,\n          focused: focused\n        }));\n      }\n\n      var rateClassName = classNames(prefixCls, disabledClass, className, _defineProperty({}, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'));\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        className: rateClassName,\n        style: style,\n        onMouseLeave: disabled ? null : this.onMouseLeave,\n        tabIndex: disabled ? -1 : tabIndex,\n        onFocus: disabled ? null : this.onFocus,\n        onBlur: disabled ? null : this.onBlur,\n        onKeyDown: disabled ? null : this.onKeyDown,\n        ref: this.saveRate,\n        role: \"radiogroup\"\n      }, stars);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, state) {\n      if ('value' in nextProps && nextProps.value !== undefined) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          value: nextProps.value\n        });\n      }\n\n      return state;\n    }\n  }]);\n\n  return Rate;\n}(React.Component);\n\nRate.defaultProps = {\n  defaultValue: 0,\n  count: 5,\n  allowHalf: false,\n  allowClear: true,\n  style: {},\n  prefixCls: 'rc-rate',\n  onChange: noop,\n  character: '★',\n  onHoverChange: noop,\n  tabIndex: 0,\n  direction: 'ltr'\n};\nexport default Rate;","/* eslint-disable import/prefer-default-export */\nfunction getScroll(w) {\n  var ret = w.pageXOffset;\n  var method = 'scrollLeft';\n\n  if (typeof ret !== 'number') {\n    var d = w.document; // ie6,7,8 standard mode\n\n    ret = d.documentElement[method];\n\n    if (typeof ret !== 'number') {\n      // quirks mode\n      ret = d.body[method];\n    }\n  }\n\n  return ret;\n}\n\nfunction getClientPosition(elem) {\n  var x;\n  var y;\n  var doc = elem.ownerDocument;\n  var body = doc.body;\n  var docElem = doc && doc.documentElement;\n  var box = elem.getBoundingClientRect();\n  x = box.left;\n  y = box.top;\n  x -= docElem.clientLeft || body.clientLeft || 0;\n  y -= docElem.clientTop || body.clientTop || 0;\n  return {\n    left: x,\n    top: y\n  };\n}\n\nexport function getOffsetLeft(el) {\n  var pos = getClientPosition(el);\n  var doc = el.ownerDocument; // Only IE use `parentWindow`\n\n  var w = doc.defaultView || doc.parentWindow;\n  pos.left += getScroll(w);\n  return pos.left;\n}","import Rate from './Rate';\nexport default Rate;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport StarFilled from \"@ant-design/icons/es/icons/StarFilled\";\nimport RcRate from 'rc-rate';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Tooltip from '../tooltip';\nvar Rate = /*#__PURE__*/React.forwardRef(function (_a, ref) {\n  var prefixCls = _a.prefixCls,\n      tooltips = _a.tooltips,\n      props = __rest(_a, [\"prefixCls\", \"tooltips\"]);\n\n  var characterRender = function characterRender(node, _ref) {\n    var index = _ref.index;\n    if (!tooltips) return node;\n    return /*#__PURE__*/React.createElement(Tooltip, {\n      title: tooltips[index]\n    }, node);\n  };\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var ratePrefixCls = getPrefixCls('rate', prefixCls);\n  return /*#__PURE__*/React.createElement(RcRate, _extends({\n    ref: ref,\n    characterRender: characterRender\n  }, props, {\n    prefixCls: ratePrefixCls,\n    direction: direction\n  }));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Rate.displayName = 'Rate';\n}\n\nRate.defaultProps = {\n  character: /*#__PURE__*/React.createElement(StarFilled, null)\n};\nexport default Rate;"],"names":["CloverIcon","props","xmlns","viewBox","fill","d","VerifyListIcon","WritingIcon","View","children","ViewIf","isVisible","ViewOr","orCondition","ViewSwitch","cases","length","Error","console","warn","ACTIONS","ROTATIONS","LEAVES_ORDER","DIRECTIONS_INDEXES","top","right","bottom","left","onRotate","value","direction","parseRotation","prepareClueSubmission","clues","clover","rotations","map","position","index","leafId","leaves","clue","rotation","getWord","leaf","id","cards","indexOf","text","mockSelectCards","shuffle","slice","card","glue2Words","word1","word2","substring","Math","round","mockClues","mockedScore","mockGuesses","selected","sampleSize","Object","keys","A","getRandomItem","score","tries","B","C","D","StepSelectWords","hand","onSubmitBadWords","isLoading","useLoading","alphabeticalHand","useMemo","orderBy","useBooleanDictionary","selectedCards","updateSelectedCard","useMock","cardsIds","selectedCount","isComplete","fullWidth","size","pt","en","contained","className","clsx","onClick","active","activeClass","align","type","disabled","players","state","info","isUserReady","useIsUserReady","translate","useLanguage","user","useUser","useStep","step","goToNextStep","setStep","request","useAPICall","apiFunction","TREVO_DA_SORTE_API","actionName","onBeforeCall","onError","successMessage","errorMessage","payload","action","useOnSubmitBadWordsAPIRequest","phase","allowedPhase","PHASES","conditions","onPressButton","time","circleColor","appearance","color","icon","title","onClose","currentRound","current","useCloverState","mode","onSubmit","useState","attempts","setAttempts","setClues","setRotation","activeLeafId","setActiveLeafId","activeSlotId","setActiveSlotId","guesses","setGuesses","locks","setLocks","reduce","acc","setRotations","usedLeavesIds","setUsedLeavesIds","useEffect","values","guess","prevState","newState","forEach","k","entry","onLeafRotate","e","leadId","quantity","stopPropagation","newRotation","areCluesComplete","every","trim","isCloverComplete","Boolean","onRotateClover","onClueChange","targetIndex","copy","onRandomizeLeafRotations","cloverLeaf","onActivateLeaf","targetLeafId","g","repeat","filter","l","newGuesses","onActivateSlot","targetSlotId","activeContent","targetContent","onLeafRemove","submitClover","correctCount","locksCopy","guessesCopy","key","undefined","correctLeaf","notification","message","description","activeCloverId","cloverId","defaultTarget","isBrowser","window","isListenerType1","target","addEventListener","isListenerType2","on","name","handler","options","off","JSON","stringify","fn","opts","deps","noop","_a","event","useMemoHandler","keyFilter","predicate","handlerEvent","useEvent","set","useKey","effect","isFirstMount","isFirst","useRef","useFirstMountState","keydown","keyup","useKeyPress","useKeyPressDefault","pressed","useUpdateEffect","RedoOutlined","ref","React","AntdIcon","_objectSpread","RedoOutlinedSvg","displayName","Leaf","onLeafGrab","isLocked","grabbable","removable","rotatable","isStatic","getAnimationClass","style","transform","cIndex","role","shape","DeleteOutlined","IconAvatar","LockIcon","LeafSlot","_","GuessIcon","LeafSlotContent","Clover","inputRefs","cloverLeaves","entries","useKeyPressEvent","leafIndex","Number","el","onChange","placeholder","autoFocus","cloverLeafPosition","getLeaf","leafRotation","RotateLeftOutlined","RotateRightOutlined","getIcon","BoxOneIcon","BoxCheckMarkIcon","BoxXIcon","WritingRules","GuessingRules","ConfirmClues","words","getWords","pair","leafA","leafARotation","leafB","leafBRotation","leafC","leafCRotation","leafD","leafDRotation","indexes","getIndex","rotationData","addition","StepWriteClues","onSubmitClues","content","onConfirm","devOnly","useOnSubmitCluesAPIRequest","DetachedLeaves","availableLeaves","includes","wrap","StepGuessClover","onSubmitGuess","activeCloverPlayer","player","StepWaitClover","useWhichPlayerIsThe","isUserTheCloverPlayer","useOnSubmitGuessAPIRequest","activePlayerId","order","gameOrder","PlayersGuesses","sortedPlayers","sortPlayers","activePlayerTab","setActivePlayerTab","items","label","activeKey","StepRanking","ranking","lastRound","gainedPointsDescriptions","RankIcon","announcementIcon","TrophyIcon","ConfigProvider","theme","primaryColor","THEME_COLORS","gameId","gameCollection","GAME_COLLECTION","getActiveComponent","PhaseLobby","PhaseRules","PhaseSetup","PhaseWordSelection","PhaseCloverWriting","PhaseCloverGuessing","PhaseResults","PhaseGameOver","PageError","backgroundClassName","initialState","validation","dict","setDict","isValid","s","dictCopy","propertyName","useGlobalState","userId","activePlayer","setActivePlayer","isUser","setIsUser","CaretUpOutlined","CaretUpOutlinedSvg","CrownFilled","CrownFilledSvg","DeleteOutlinedSvg","StarFilled","StarFilledSvg","Star","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","this","apply","arguments","onHover","_this$props","_this$props2","onKeyDown","_this$props3","keyCode","_createClass","_this$props4","prefixCls","allowHalf","focused","starValue","concat","_this$props5","character","characterRender","count","characterNode","start","getClassName","onMouseMove","tabIndex","Rate","call","onHoverChange","hoverValue","getStarValue","pageX","cleanedValue","setState","onMouseLeave","allowClear","newValue","isReset","changeValue","onFocus","onBlur","reverse","KeyCode","preventDefault","saveRef","node","stars","saveRate","rate","defaultValue","focus","findDOMNode","x","starEle","getStarDOM","leftDis","pos","elem","y","doc","ownerDocument","body","docElem","documentElement","box","getBoundingClientRect","clientLeft","clientTop","getClientPosition","w","defaultView","parentWindow","ret","pageXOffset","method","document","getScroll","getOffsetLeft","width","clientWidth","blur","_this$state","disabledClass","push","rateClassName","classNames","_defineProperty","nextProps","defaultProps","__rest","t","p","prototype","hasOwnProperty","getOwnPropertySymbols","i","propertyIsEnumerable","tooltips","_React$useContext","ConfigContext","getPrefixCls","ratePrefixCls","RcRate","_extends","_ref","Tooltip"],"sourceRoot":""}