{"version":3,"file":"static/js/arte-ruim.fba7b6bc.chunk.js","mappings":"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","sources":["games/arte-ruim/StepDraw.tsx","games/arte-ruim/components/TextBlobs.tsx","games/arte-ruim/components/LevelInstruction.tsx","games/arte-ruim/PhaseDraw.tsx","games/arte-ruim/utils/api-requests.ts","../node_modules/@ant-design/icons-svg/es/asn/ThunderboltOutlined.js","../node_modules/@ant-design/icons/es/icons/ThunderboltOutlined.js","games/arte-ruim/utils/helpers.ts","games/arte-ruim/components/EvaluationAllDrawings.tsx","games/arte-ruim/components/Card.tsx","games/arte-ruim/components/EvaluationAllCards.tsx","games/arte-ruim/StepEvaluation.tsx","games/arte-ruim/components/EvaluatedDrawings.tsx","games/arte-ruim/PhaseEvaluation.tsx","games/arte-ruim/components/GalleryWindowCredits.tsx","games/arte-ruim/components/GalleryWindowGuesses.tsx","games/arte-ruim/components/GalleryWindowResult.tsx","games/arte-ruim/StepGallery.tsx","games/arte-ruim/utils/constants.ts","games/arte-ruim/StepRanking.tsx","games/arte-ruim/PhaseGallery.tsx","games/arte-ruim/components/DrawingGrade.tsx","games/arte-ruim/components/FinalGallery.tsx","games/arte-ruim/PhaseGameOver.tsx","games/arte-ruim/SessionArteRuim.tsx","games/arte-ruim/utils/achievements.ts","icons/PaintingIcon.tsx","../node_modules/@ant-design/icons-svg/es/asn/CloudUploadOutlined.js","../node_modules/@ant-design/icons/es/icons/CloudUploadOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/MessageFilled.js","../node_modules/@ant-design/icons/es/icons/MessageFilled.js","../node_modules/@ant-design/icons-svg/es/asn/WarningOutlined.js","../node_modules/@ant-design/icons/es/icons/WarningOutlined.js","../node_modules/react-use/esm/misc/parseTimeRanges.js","../node_modules/react-use/esm/useAudio.js","../node_modules/react-use/esm/factory/createHTMLMediaHook.js","../node_modules/react-use/esm/useSetState.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useDevFeatures } from 'hooks/useDevFeatures';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockDrawing } from 'mock/drawing';\n// Icons\nimport { PanicIcon } from 'icons/PanicIcon';\n// Components\nimport { Step } from 'components/steps';\nimport { Card } from 'components/cards';\nimport { DrawingCanvas } from 'components/canvas';\nimport { ArteRuimTimerSound } from 'components/audio/ArteRuimTimerSound';\nimport { DevButton } from 'components/debug';\n\ntype StepDrawProps = {\n  secretCard: ArteRuimCard | PlainObject;\n  onSubmitDrawing: GenericFunction;\n  startDrawingTimer: boolean;\n} & AnnouncementProps;\n\nexport function StepDraw({ secretCard, onSubmitDrawing, startDrawingTimer, announcement }: StepDrawProps) {\n  const { translate } = useLanguage();\n  const { isDebugEnabled } = useDevFeatures();\n  const [lines, setLines] = useState<any>([]);\n  const [isTimesUp, setTimesUp] = useState(false);\n\n  const { seconds, start, isRunning } = useCountdown({\n    duration: 12,\n    autoStart: false,\n    onExpire: () => {\n      setTimesUp(true);\n      onSubmitDrawing({\n        drawing: JSON.stringify(lines),\n        cardId: secretCard.id,\n      });\n    },\n  });\n\n  useEffect(() => {\n    if (!isRunning && startDrawingTimer) {\n      start();\n    }\n  }, [startDrawingTimer, isRunning, start]);\n\n  const onMockDrawing = () =>\n    onSubmitDrawing({\n      drawing: JSON.stringify(mockDrawing()),\n      cardId: secretCard.id,\n    });\n\n  useMock(() => {\n    onSubmitDrawing({\n      drawing: JSON.stringify(mockDrawing()),\n      cardId: secretCard.id,\n    });\n  });\n\n  return (\n    <Step announcement={announcement}>\n      <Card\n        size=\"large\"\n        header={translate('Desenhe', 'Draw', isDebugEnabled ? secretCard?.id : undefined)}\n        footer={Array(secretCard?.level).fill('•').join('')}\n        className=\"a-draw-step__card\"\n        color=\"yellow\"\n      >\n        {isRunning && (\n          <>\n            {secretCard?.text}\n            <span className=\"a-draw-step__timer\">{seconds > 1 ? seconds - 2 : 0}</span>\n          </>\n        )}\n      </Card>\n      {isRunning && <ArteRuimTimerSound />}\n\n      <DevButton onClick={onMockDrawing}>Mock Drawing</DevButton>\n\n      {isTimesUp ? (\n        <PanicIcon style={{ background: 'white', width: '500px', padding: '2em' }} />\n      ) : (\n        <DrawingCanvas lines={lines} setLines={setLines} />\n      )}\n    </Step>\n  );\n}\n","import { Translate } from 'components/language';\nimport { PointsHighlight } from 'components/metrics/PointsHighlight';\nimport { TimeHighlight } from 'components/metrics/TimeHighlight';\nimport { Instruction } from 'components/text';\n\nexport const DrawInstruction = () => (\n  <Instruction>\n    <Translate\n      pt={\n        <>\n          Você terá <TimeHighlight>10</TimeHighlight> segundos para ler a sua carta e desenhá-la.\n          <br />\n          Aperte o botão quando estiver pronto!\n          <br />\n          <strong>Não vale usar números e letras.</strong>\n          <br />\n          Fique esperto porque o tempo começa assim que você apertar.\n        </>\n      }\n      en={\n        <>\n          You'll have <TimeHighlight>10</TimeHighlight> seconds to read and draw your card.\n          <br />\n          Press the button when you're ready!\n          <br />\n          <strong>You can NOT use numbers or letters.</strong>\n          <br />\n          Be aware of the timer! It starts as soon as you press the button.\n        </>\n      }\n    />\n  </Instruction>\n);\n\nexport const EvaluationRules = () => (\n  <Instruction>\n    <Translate\n      pt={\n        <>\n          Encontre os pares de desenho e carta clicando em uma carta ou desenho e em seguida clicando em seu\n          par.\n          <br />\n          Uma bandeirinha aparecerá no topo de cada desenho com a cor e letra da carta que você selecionou.\n          <br />\n          Quando encontrar todos os pares, envie sua avaliação!\n        </>\n      }\n      en={\n        <>\n          Find the pairs of artwork and card by clicking on a card or artwork then on its match.\n          <br />\n          A ribbon will show up on the artwork with the color and letter of the matching card.\n          <br />\n          When you're done, click the button to send your evaluation!\n        </>\n      }\n    />\n  </Instruction>\n);\n\nexport const GalleryRules = () => (\n  <Instruction>\n    <Translate\n      pt={\n        <>\n          Agora, mostraremos cada arte, o que os jogadores votaram e a resposta final.\n          <br />\n          Se você votou na expressão correta, você ganha <PointsHighlight type=\"positive\">\n            2\n          </PointsHighlight>{' '}\n          pontos.\n          <br />\n          Quando for a sua arte, você ganha <PointsHighlight type=\"positive\">1</PointsHighlight> ponto para\n          cada pessoa que votou corretamente.\n        </>\n      }\n      en={\n        <>\n          Now we show each art, what players voted, and the final answer.\n          <br />\n          You get <PointsHighlight type=\"positive\">2</PointsHighlight> points if you selected the right card.\n          <br />\n          When players selected the correct card for your artwork, you get{' '}\n          <PointsHighlight type=\"positive\">1</PointsHighlight> point for each match!\n        </>\n      }\n    />\n  </Instruction>\n);\n\nexport const ScoringRules = () => (\n  <Instruction>\n    <Translate\n      pt={\n        <>\n          Você ganha <PointsHighlight type=\"positive\">2</PointsHighlight> pontos para cada ligação correta\n          entre arte e expressão.\n          <br />\n          Para cada ligação correta que sua arte ganha, você recebe{' '}\n          <PointsHighlight type=\"positive\">1</PointsHighlight> ponto.\n        </>\n      }\n      en={\n        <>\n          You get <PointsHighlight type=\"positive\">2</PointsHighlight> points if you matched the right card\n          with artwork.\n          <br />\n          For you own artwork, you get <PointsHighlight type=\"positive\">1</PointsHighlight> point for each\n          correct match the other players done.\n        </>\n      }\n    />\n  </Instruction>\n);\n","import { DualTranslate, Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n\ntype LevelInstructionProps = {\n  level: number;\n  levelType: string;\n};\n\nexport function LevelInstruction({ level, levelType }: LevelInstructionProps) {\n  if (level < 4) {\n    return <></>;\n  }\n\n  if (level === 4) {\n    return (\n      <Instruction contained>\n        <Translate\n          pt=\"No nível 4, as cartas tem um ou dois temas comuns, então preste atenção nos detalhes\"\n          en=\"On level 4, the cards have one or two common themes, so pay attention to details\"\n        />\n      </Instruction>\n    );\n  }\n\n  if (levelType === 'pairs') {\n    return (\n      <Instruction contained>\n        <Translate\n          pt=\"No nível 5, só existem duas cartas para todos\"\n          en=\"On level 5, players draw one of two things only\"\n        />\n      </Instruction>\n    );\n  }\n\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Rodada Especial:{' '}\n            <DualTranslate>{getLevelText[levelType] ?? { pt: 'Surpresa', en: 'Surprise' }}</DualTranslate>\n          </>\n        }\n        en={<>Special Round: {}</>}\n      />\n    </Instruction>\n  );\n}\n\nconst getLevelText: Record<string, DualLanguageValue> = {\n  contenders: {\n    pt: 'Personagens e Personalidades',\n    en: 'Characters and Celebrities',\n  },\n  movies: {\n    pt: 'Filmes',\n    en: 'Movies',\n  },\n  adjectives: {\n    pt: 'Adjetivos',\n    en: 'Adjectives',\n  },\n};\n","import { useState } from 'react';\n// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitDrawingAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { PaintingIcon } from 'icons/PaintingIcon';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { RoundAnnouncement } from 'components/round';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { StepDraw } from './StepDraw';\nimport { DrawInstruction } from './components/TextBlobs';\nimport { LevelInstruction } from './components/LevelInstruction';\n\nfunction PhaseDraw({ players, state, info }: PhaseProps) {\n  const { step, goToNextStep, setStep } = useStep(0);\n  const user = useUser(players, state);\n  const [startDrawingTimer, setStartDrawingTimer] = useState(false);\n\n  const onSubmitDrawing = useOnSubmitDrawingAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<PaintingIcon />}\n      title={<Translate pt=\"Desenhe!\" en=\"Draw!\" />}\n      buttonText={<Translate pt=\"Um dó, lá, si... vamos e... já!\" en=\"Ready! Set! Go!\" />}\n      onClose={() => setStartDrawingTimer(true)}\n      currentRound={state?.round?.current}\n      withoutTimer\n      type=\"overlay\"\n    >\n      <DrawInstruction />\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.ARTE_RUIM.DRAW}>\n      <StepSwitcher\n        step={step}\n        conditions={[!user.isReady, !user.isReady]}\n        players={players}\n        waitingRoomInstruction={\n          <Translate\n            pt=\"Vamos aguardar enquanto os outros jogadores terminam seus desenhos!\"\n            en=\"Please wait while other players finish their artwork!\"\n          />\n        }\n      >\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state?.round}\n          onPressButton={goToNextStep}\n          buttonText=\" \"\n          time={5}\n          circleColor={info?.appearance?.color}\n          unskippable\n        >\n          <Instruction contained>\n            <Translate\n              pt={`Essa rodada usará cartas de nível ${state?.level || '?'}`}\n              en={`This round uses cards of level ${state?.level || '?'}`}\n            />\n            <LevelInstruction level={state.level} levelType={state.levelType} />\n          </Instruction>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <StepDraw\n          secretCard={user.currentCard ?? {}}\n          onSubmitDrawing={onSubmitDrawing}\n          announcement={announcement}\n          startDrawingTimer={startDrawingTimer}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseDraw;\n","import { ARTE_RUIM_API } from 'services/adapters';\nimport { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\n\nexport function useOnSubmitDrawingAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: ARTE_RUIM_API.submitAction,\n    actionName: 'submit-drawing',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate(\n      'Acabou o tempo! Aguarde enquanto os outros participantes desenham',\n      \"Time's up! Wait for the other players to finish their art\"\n    ),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar o desenho',\n      'Oops, the application failed to send your art'\n    ),\n  });\n\n  return (payload: SubmitDrawingPayload) => {\n    request({\n      action: 'SUBMIT_DRAWING',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitVotingAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: ARTE_RUIM_API.submitAction,\n    actionName: 'submit-voting',\n    onSuccess: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: translate(\n      'Avaliação enviada! Agora aguarde os outros jogadores',\n      'Evaluation sent successfully! Wait for the other players'\n    ),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua avaliação',\n      'Oops, the application failed to send your evaluation'\n    ),\n  });\n\n  return (payload: SubmitVotingPayload) => {\n    request({\n      action: 'SUBMIT_VOTING',\n      ...payload,\n    });\n  };\n}\n","// This icon file is generated automatically.\nvar ThunderboltOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M848 359.3H627.7L825.8 109c4.1-5.3.4-13-6.3-13H436c-2.8 0-5.5 1.5-6.9 4L170 547.5c-3.1 5.3.7 12 6.9 12h174.4l-89.4 357.6c-1.9 7.8 7.5 13.3 13.3 7.7L853.5 373c5.2-4.9 1.7-13.7-5.5-13.7zM378.2 732.5l60.3-241H281.1l189.6-327.4h224.6L487 427.4h211L378.2 732.5z\" } }] }, \"name\": \"thunderbolt\", \"theme\": \"outlined\" };\nexport default ThunderboltOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ThunderboltOutlinedSvg from \"@ant-design/icons-svg/es/asn/ThunderboltOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar ThunderboltOutlined = function ThunderboltOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ThunderboltOutlinedSvg\n  }));\n};\nThunderboltOutlined.displayName = 'ThunderboltOutlined';\nexport default /*#__PURE__*/React.forwardRef(ThunderboltOutlined);","import { SEPARATOR } from 'utils/constants';\n\nexport function prepareVotes(votes: StringDictionary) {\n  return Object.entries(votes).reduce((acc: StringDictionary, [drawingEntryId, cardEntryId]) => {\n    const [, drawingId] = drawingEntryId.split(SEPARATOR);\n    const [, cardId] = cardEntryId.split(SEPARATOR);\n    acc[drawingId] = cardId;\n    return acc;\n  }, {});\n}\n","import clsx from 'clsx';\n// Utils\nimport { getEntryId } from 'utils/helpers';\n// Components\nimport { CanvasSVG } from 'components/canvas';\nimport { Ribbon } from 'components/ribbons';\n\ntype EvaluationAllDrawingsProps = {\n  drawings: ArteRuimDrawing[];\n  activeItem: string;\n  onActivateItem: GenericFunction;\n  votes: PlainObject;\n  canvasSize: number;\n  players: GamePlayers;\n};\n\nexport function EvaluationAllDrawings({\n  drawings,\n  activeItem,\n  onActivateItem,\n  votes,\n  canvasSize,\n  players,\n}: EvaluationAllDrawingsProps) {\n  const liButtonBaseClass = 'a-evaluation-all-drawings__li-drawing-button';\n\n  return (\n    <ul className=\"a-evaluation-all-drawings\">\n      {drawings?.map((drawingEntry) => {\n        const canvasEntryId = getEntryId(['drawing', drawingEntry.id]);\n        const isActive = activeItem === canvasEntryId;\n        const vote = votes[canvasEntryId];\n\n        return (\n          <li\n            key={`${canvasEntryId}-${drawingEntry.playerId}`}\n            className={clsx(liButtonBaseClass, isActive && `${liButtonBaseClass}--active`)}\n            onClick={() => onActivateItem(canvasEntryId)}\n          >\n            {votes?.[canvasEntryId] && <Ribbon label={vote.charAt(vote.length - 1)} />}\n            <CanvasSVG\n              drawing={drawingEntry.drawing}\n              className=\"a-evaluation-all-drawings__drawing\"\n              width={canvasSize}\n            />\n            <span className=\"a-evaluation-all-drawings__artist\">{players[drawingEntry.playerId].name}</span>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","// Ant Design Resources\nimport { WarningOutlined } from '@ant-design/icons';\n// Helpers\nimport { getColorFromLetter } from 'utils/helpers';\n// Components\nimport { Card } from 'components/cards';\nimport { ReactNode } from 'react';\n\ntype ArteRuimCardProps = {\n  /**\n   * The text of the card\n   */\n  text?: ReactNode;\n  /**\n   * The level of the card displayed as dots in the footer\n   */\n  level: number;\n  /**\n   * The header of the card. Default: X\n   */\n  header?: string;\n};\n\n/**\n * This is the Card component\n * @param props {object}\n * @returns\n */\nexport const ArteRuimCard = ({ text, level, header = 'X' }: ArteRuimCardProps) => {\n  return (\n    <Card\n      color={getColorFromLetter(header)}\n      header={header}\n      size=\"medium\"\n      footer={Array(level).fill('•').join('')}\n    >\n      {text ?? <WarningOutlined />}\n    </Card>\n  );\n};\n","import clsx from 'clsx';\nimport { useDevFeatures } from 'hooks/useDevFeatures';\n// Utils\nimport { LETTERS } from 'utils/constants';\nimport { getEntryId } from 'utils/helpers';\n// Components\nimport { ArteRuimCard as Card } from './Card';\n\ntype EvaluationAllCardsProps = {\n  cards: ArteRuimCard[];\n  activeItem: string;\n  onActivateItem: GenericFunction;\n  votes: PlainObject;\n  levelType: string;\n};\n\nexport function EvaluationAllCards({\n  cards,\n  activeItem,\n  onActivateItem,\n  votes,\n  levelType,\n}: EvaluationAllCardsProps) {\n  const { isDebugEnabled } = useDevFeatures();\n  const liButtonBaseClass = 'a-evaluation-all-cards__li-card-button';\n\n  return (\n    <ul className=\"a-evaluation-all-cards\">\n      {cards.map((cardEntry, index) => {\n        const letter = LETTERS[index];\n        const cardEntryId = getEntryId(['card', cardEntry.id, letter]);\n        const isActive = activeItem === cardEntryId;\n        const isUsed = Object.values(votes).includes(cardEntryId);\n\n        return (\n          <li\n            role=\"button\"\n            key={cardEntryId}\n            className={clsx(\n              liButtonBaseClass,\n              isActive && `${liButtonBaseClass}--active`,\n              isUsed && levelType !== 'pairs' && `${liButtonBaseClass}--used`\n            )}\n            onClick={() => onActivateItem(cardEntryId)}\n          >\n            <Card\n              text={cardEntry.text}\n              level={cardEntry.level}\n              header={isDebugEnabled ? cardEntry.id : letter}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import { useCallback, useEffect, useState } from 'react';\nimport { useEffectOnce } from 'react-use';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\nimport { CloudUploadOutlined, ThunderboltOutlined } from '@ant-design/icons';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\nimport { useUser } from 'hooks/useUser';\nimport { useVotingMatch } from 'hooks/useVotingMatch';\n// Utils\nimport { LETTERS } from 'utils/constants';\nimport { getEntryId, shuffle } from 'utils/helpers';\nimport { prepareVotes } from './utils/helpers';\n// Components\nimport { Step } from 'components/steps';\nimport { PopoverRule } from 'components/rules';\nimport { CanvasResizer } from 'components/canvas';\nimport { Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { EvaluationAllDrawings } from './components/EvaluationAllDrawings';\nimport { EvaluationAllCards } from './components/EvaluationAllCards';\nimport { EvaluationRules } from './components/TextBlobs';\n\ntype StepEvaluationProps = {\n  drawings: ArteRuimDrawing[];\n  cards: ArteRuimCard[];\n  players: GamePlayers;\n  onSubmitVoting: GenericFunction;\n  levelType: string;\n} & AnnouncementProps;\n\nexport function StepEvaluation({\n  drawings,\n  cards,\n  players,\n  onSubmitVoting,\n  levelType,\n  announcement,\n}: StepEvaluationProps) {\n  const { isLoading } = useLoading();\n  const user = useUser(players);\n  const canvasWidth = useCardWidth(5, 16, 150, 500);\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n  const { votes, setVotes, activeItem, activateItem, resetVoting, isVotingComplete } = useVotingMatch(\n    'drawing',\n    true,\n    drawings.length || 2\n  );\n  const [choseRandomly, setChoseRandomly] = useState(false);\n\n  const onGuessForMe = useCallback(() => {\n    setChoseRandomly(true);\n    const usedDrawings = Object.keys(votes);\n    const usedCards = Object.values(votes);\n    const drawingsKeys = drawings\n      .map((e: ArteRuimDrawing) => getEntryId(['drawing', e.id]))\n      .filter((key: string) => !usedDrawings.includes(key));\n    let cardsKeys = shuffle(\n      cards\n        .map((e: ArteRuimCard, index: number) => getEntryId(['card', e.id, LETTERS[index]]))\n        .filter((key: string) => !usedCards.includes(key))\n    );\n    // For level 5 specifically, if there are less cards than drawings\n    cardsKeys =\n      cardsKeys.length < drawingsKeys.length\n        ? Array(Math.ceil(drawingsKeys.length / cardsKeys.length))\n            .fill(cardsKeys)\n            .flat()\n        : cardsKeys;\n\n    const newVotes = { ...votes };\n    drawingsKeys.forEach((drawingKey: string, index: number) => {\n      if (!newVotes[drawingKey]) {\n        newVotes[drawingKey] = cardsKeys[index];\n      }\n    });\n    setVotes(newVotes);\n  }, [cards, drawings, votes, setVotes]);\n\n  useEffect(() => {\n    if (!canvasSize) {\n      // Round to increments of 50\n      setCanvasSize(Math.floor(canvasWidth / 50) * 50);\n    }\n  }, [canvasSize, canvasWidth]); // eslint-disable-line\n\n  const selectOwnDrawing = useCallback(() => {\n    const playersDrawing = (drawings ?? []).find((drawing: ArteRuimDrawing) => drawing.playerId === user.id);\n    if (playersDrawing && playersDrawing.level !== 5) {\n      const drawingKey = getEntryId(['drawing', playersDrawing.id]);\n      const cardIndex = (cards ?? []).findIndex((card: ArteRuimCard) => card.playerId === user.id);\n      const cardKey = getEntryId(['card', playersDrawing.id, LETTERS[cardIndex]]);\n      const vote = { [drawingKey]: cardKey };\n      return vote;\n    }\n    return {};\n  }, [user, drawings, cards]);\n\n  // Auto-select the players own drawing and word\n  useEffectOnce(() => {\n    const selection = selectOwnDrawing();\n    if (selection) {\n      setVotes((s: any) => ({ ...s, ...selection }));\n    }\n  });\n\n  useMock(() => {\n    onGuessForMe();\n  }, []);\n\n  return (\n    <Step className=\"a-evaluation-step\" announcement={announcement} fullWidth>\n      <PopoverRule content={<EvaluationRules />} />\n      <CanvasResizer />\n      <Title>\n        <Translate pt=\"Adivinhação\" en=\"Match the Pairs\" />\n      </Title>\n\n      <Space className=\"space-container\" align=\"center\" wrap>\n        <Button\n          type=\"default\"\n          icon={<ThunderboltOutlined />}\n          onClick={() => resetVoting(selectOwnDrawing())}\n          disabled={isLoading}\n        >\n          <Translate pt=\"Limpar seleções\" en=\"Clear selections\" />\n        </Button>\n        <Button\n          type=\"default\"\n          icon={<ThunderboltOutlined />}\n          onClick={onGuessForMe}\n          disabled={isLoading || Object.values(votes).length === drawings.length}\n        >\n          <Translate pt=\"Chutar restantes\" en=\"Guess for me\" />\n        </Button>\n        <Button\n          type=\"primary\"\n          onClick={() => onSubmitVoting({ votes: prepareVotes(votes), choseRandomly })}\n          disabled={isLoading || !isVotingComplete}\n          icon={<CloudUploadOutlined />}\n          loading={isLoading}\n        >\n          <Translate pt=\"Enviar sua avaliação\" en=\"Send evaluation\" />\n        </Button>\n      </Space>\n\n      <EvaluationAllDrawings\n        drawings={drawings ?? []}\n        activeItem={activeItem}\n        onActivateItem={activateItem}\n        votes={votes}\n        canvasSize={canvasSize}\n        players={players}\n      />\n\n      <EvaluationAllCards\n        cards={cards ?? []}\n        activeItem={activeItem}\n        onActivateItem={activateItem}\n        votes={votes}\n        levelType={levelType}\n      />\n    </Step>\n  );\n}\n","import { useMemo } from 'react';\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\n// Components\nimport { CanvasSVG } from 'components/canvas';\nimport { IconAvatar } from 'components/avatars/IconAvatar';\nimport { AnimatedLoaderIcon } from 'icons/AnimatedLoaderIcon';\nimport { AvatarName } from 'components/avatars';\n\ntype EvaluatedDrawingsProps = {\n  votes?: StringDictionary;\n  cards: ArteRuimCard[];\n  drawings: ArteRuimDrawing[];\n  players: GamePlayers;\n};\n\n/**\n * Displays drawings in the waiting room after evaluation\n * @param props\n * @returns\n */\nexport function EvaluatedDrawings({ votes, cards, drawings, players }: EvaluatedDrawingsProps) {\n  const [canvasSize] = useGlobalState('canvasSize');\n\n  const cardsDict = useMemo(\n    () =>\n      cards.reduce((acc: Record<string, ArteRuimCard>, card) => {\n        acc[card.id] = card;\n        return acc;\n      }, {}),\n    [cards]\n  );\n\n  const drawingsDict = useMemo(\n    () =>\n      drawings.reduce((acc: Record<string, ArteRuimDrawing>, drawing) => {\n        acc[drawing.id] = drawing;\n        return acc;\n      }, {}),\n    [drawings]\n  );\n\n  if (!votes) {\n    return (\n      <div className=\"a-evaluated-drawings\">\n        <IconAvatar icon={<AnimatedLoaderIcon />} />\n      </div>\n    );\n  }\n  const cSize = Math.min(canvasSize * 0.6, 2000);\n\n  return (\n    <ul className=\"a-evaluated-drawings\">\n      {Object.keys(votes)\n        .sort()\n        .map((drawingKey: string) => {\n          const drawing = drawingsDict[drawingKey] as ArteRuimDrawing;\n          const card = cardsDict[votes[drawingKey]] as ArteRuimCard;\n\n          return (\n            <li className=\"a-evaluated-drawings__item\" key={`${drawing.id}-${card.id}-${card.playerId}`}>\n              <div className=\"a-evaluated-drawings__card\" style={{ maxWidth: `${cSize}px` }}>\n                <AvatarName player={players[drawing.playerId]} size=\"small\" />\n              </div>\n              <CanvasSVG\n                drawing={drawing.drawing}\n                width={cSize}\n                className=\"a-evaluation-all-drawings__drawing\"\n              />\n              <div className=\"a-evaluated-drawings__card\" style={{ maxWidth: `${cSize}px` }}>\n                {card.text}\n              </div>\n            </li>\n          );\n        })}\n    </ul>\n  );\n}\n","// Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitVotingAPIRequest } from './utils/api-requests';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { EvaluateIcon } from 'icons/EvaluateIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { StepEvaluation } from './StepEvaluation';\nimport { EvaluationRules } from './components/TextBlobs';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { EvaluatedDrawings } from './components/EvaluatedDrawings';\nimport { Translate } from 'components/language';\n\nfunction EvaluationPhase({ players, state, info }: PhaseProps) {\n  const { step, setStep } = useStep(0);\n  const user = useUser(players, state);\n\n  const onSubmitVoting = useOnSubmitVotingAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<EvaluateIcon />}\n      title={<Translate pt=\"Adivinhação\" en=\"Match the Pairs\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <EvaluationRules />\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.ARTE_RUIM.EVALUATION}>\n      <StepSwitcher\n        step={step}\n        conditions={[!user.isReady, !user.isReady]}\n        players={players}\n        waitingRoomInstruction={\n          <Translate\n            pt=\"Vamos aguardar enquanto os outros jogadores terminam de avaliar!\"\n            en=\"Please wait while other players finish their evaluations!\"\n          />\n        }\n        waitingRoomContent={\n          <EvaluatedDrawings\n            cards={state.cards}\n            drawings={state.drawings}\n            votes={user?.votes}\n            players={players}\n          />\n        }\n      >\n        {/*Step 0 */}\n        <StepEvaluation\n          drawings={state.drawings}\n          cards={state.cards}\n          players={players}\n          onSubmitVoting={onSubmitVoting}\n          levelType={state.levelType}\n          announcement={announcement}\n        />\n\n        <></>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default EvaluationPhase;\n","// Components\nimport { AvatarEntry } from 'components/avatars';\nimport { Translate } from 'components/language';\n\ntype GalleryWindowCreditsProps = {\n  artist: GamePlayer;\n};\n\nexport function GalleryWindowCredits({ artist }: GalleryWindowCreditsProps) {\n  return (\n    <div className=\"a-gallery__credits\">\n      <div className=\"a-gallery__label\">\n        <Translate pt=\"Artista\" en=\"Artist\" />\n      </div>\n      <span className=\"a-gallery__artist-name\">\n        <AvatarEntry player={artist} />\n      </span>\n    </div>\n  );\n}\n","import { orderBy } from 'lodash';\n// Ant Design Resources\nimport { Avatar as AntAvatar } from 'antd';\nimport { CrownFilled, MessageFilled } from '@ant-design/icons';\n// Utils\nimport { getPlayersFromIds } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\n\ntype GalleryWindowGuessesProps = {\n  playersSay: PlayersSay;\n  players: GamePlayers;\n  cards: ArteRuimCard[];\n  windowCardId: string;\n  artistColor: string;\n};\n\nexport function GalleryWindowGuesses({\n  playersSay,\n  players,\n  cards,\n  windowCardId,\n  artistColor,\n}: GalleryWindowGuessesProps) {\n  const entries = orderBy(\n    Object.entries(playersSay).map(([cardId, playersIds]) => {\n      return {\n        cardId,\n        card: cards.find((i) => i.id === cardId),\n        playersIds,\n        count: playersIds.length,\n        isCorrect: windowCardId === cardId,\n      };\n    }),\n    ['isCorrect', 'count', 'card.text'],\n    ['desc', 'desc', 'asc']\n  );\n\n  return (\n    <div className=\"a-gallery__guesses\">\n      <div className=\"a-gallery__label\">\n        <Translate pt=\"Participantes votaram\" en=\"Players voted\" />\n      </div>\n      {entries.map((entry, index) => {\n        return (\n          <div key={`guess-${entry.cardId}-${index}`} className=\"a-gallery__guess\">\n            <div\n              className=\"a-gallery__speech-bubble\"\n              style={entry.isCorrect ? { backgroundColor: artistColor, color: 'white' } : {}}\n            >\n              {entry.isCorrect ? (\n                <CrownFilled className=\"a-gallery__speech-bubble-icon\" style={{ color: 'white' }} />\n              ) : (\n                <MessageFilled className=\"a-gallery__speech-bubble-icon\" />\n              )}\n              {entry.card?.text}\n            </div>\n            <div className=\"a-gallery__players\">\n              <AntAvatar.Group>\n                {entry.playersIds.map((playerId) => (\n                  <Avatar\n                    id={players[playerId].avatarId}\n                    key={`guess-avatar-${players[playerId].avatarId}`}\n                  />\n                ))}\n              </AntAvatar.Group>\n              <span className=\"a-gallery__players-names\">\n                {getPlayersFromIds(entry.playersIds, players, true).join(', ')}\n              </span>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Avatar as AntAvatar, Typography } from 'antd';\nimport { CrownFilled } from '@ant-design/icons';\n// Utils\nimport { getPlayersFromIds } from 'utils/helpers';\n// Components\nimport { Translate } from 'components/language';\nimport { Avatar } from 'components/avatars';\nimport { StarPoints } from 'components/points';\nimport { GarbageIcon } from 'icons/GarbageIcon';\nimport { IconAvatar } from 'components/avatars/IconAvatar';\n\ntype GalleryWindowResultProps = {\n  playerArtist: GamePlayer;\n  correctAnswerId: string;\n  correctAnswerText: string;\n  playersPoints?: NumberDictionary;\n  playersSay: PlayersSay;\n  players: GamePlayers;\n};\n\nexport function GalleryWindowResult({\n  playerArtist,\n  correctAnswerId,\n  correctAnswerText,\n  playersPoints,\n  playersSay,\n  players,\n}: GalleryWindowResultProps) {\n  const correctGuesses = Object.values(playersSay?.[correctAnswerId] ?? {});\n\n  return (\n    <div className=\"a-gallery__result\">\n      <div className=\"a-gallery__label\">\n        <Translate pt=\"E o título correto da obra é\" en=\"And the masterpiece title is\" />\n      </div>\n      <div className=\"a-gallery__speech-bubble\">\n        <CrownFilled className=\"a-gallery__speech-bubble-icon\" />\n        {correctAnswerText}\n      </div>\n      {correctGuesses.length ? (\n        <>\n          <div className=\"a-gallery__players\">\n            <AntAvatar.Group>\n              {correctGuesses.map((playerId) => {\n                return <Avatar key={`correct-guess-avatar-${playerId}`} id={players[playerId].avatarId} />;\n              })}\n            </AntAvatar.Group>\n            <StarPoints quantity={2} keyPrefix={`guessers-points-${playerArtist.id}`} />\n            <span className=\"a-gallery__players-names\">\n              {getPlayersFromIds(correctGuesses, players, true).join(', ')}\n            </span>\n          </div>\n          <div className=\"a-gallery__artist-points\">\n            <Avatar id={playerArtist.avatarId} />{' '}\n            <StarPoints\n              quantity={playersPoints?.[playerArtist.id]}\n              keyPrefix={`artist-points-${playerArtist.id}`}\n            />{' '}\n            <span className=\"a-gallery__players-names\">{playerArtist.name}</span>\n          </div>\n        </>\n      ) : (\n        <Typography.Text className=\"a-gallery__no-wins\">\n          <IconAvatar icon={<GarbageIcon />} size=\"large\" shape=\"square\" />\n          <Translate\n            pt=\"Nossa, ninguém acertou. Esse desenho deve ter sido muito ruim.\"\n            en=\"Wow, nobody got it. It must have been a very crappy drawing. Shame...\"\n          />\n        </Typography.Text>\n      )}\n    </div>\n  );\n}\n","// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Utils\nimport { WINDOW_DURATION } from './utils/constants';\nimport { getAvatarColorById } from 'utils/helpers';\n// Components\nimport { CanvasSVG } from 'components/canvas';\nimport { Translate } from 'components/language';\nimport { PopoverRule } from 'components/rules';\nimport { SlideShow } from 'components/slide-show';\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\nimport { GalleryWindowCredits } from './components/GalleryWindowCredits';\nimport { GalleryWindowGuesses } from './components/GalleryWindowGuesses';\nimport { GalleryWindowResult } from './components/GalleryWindowResult';\nimport { ScoringRules } from './components/TextBlobs';\n\ntype StepGalleryProps = {\n  gallery: ArteRuimWindow[];\n  players: GamePlayers;\n  cards: ArteRuimCard[];\n  activeIndex: number;\n  setActiveIndex: GenericFunction;\n  setStep: GenericFunction;\n  isFirstGalleryRunThrough: boolean;\n};\n\nexport function StepGallery({\n  gallery,\n  players,\n  cards,\n  activeIndex,\n  setActiveIndex,\n  setStep,\n  isFirstGalleryRunThrough,\n}: StepGalleryProps) {\n  useTemporarilyHidePlayersBar();\n\n  const canvasWidth = useCardWidth(2, 16, 200, 500);\n\n  const { drawing, artistId, id, text, playersPoints, playersSay } = gallery[activeIndex];\n\n  const playerArtist = players[artistId];\n  const currentColor = getAvatarColorById(playerArtist.avatarId);\n\n  return (\n    <Step fullWidth>\n      <Title size=\"small\">\n        <Translate pt=\"Galeria de Arte\" en=\"Art Gallery\" />\n      </Title>\n\n      <PopoverRule content={<ScoringRules />} />\n\n      <SlideShow\n        players={players}\n        length={gallery.length}\n        activeIndex={activeIndex}\n        setActiveIndex={setActiveIndex}\n        setStep={setStep}\n        disableControls={isFirstGalleryRunThrough}\n        barColor={currentColor}\n        windowDuration={WINDOW_DURATION}\n        leftClassName=\"a-gallery__canvas\"\n        rightClassName=\"a-gallery__info\"\n      >\n        <CanvasSVG drawing={drawing} width={canvasWidth} className=\"a-gallery__drawing\" />\n\n        <>\n          <GalleryWindowCredits artist={playerArtist} />\n\n          <GalleryWindowGuesses\n            players={players}\n            playersSay={playersSay}\n            cards={cards}\n            windowCardId={id}\n            artistColor={currentColor}\n          />\n\n          <GalleryWindowResult\n            playerArtist={playerArtist}\n            correctAnswerId={id}\n            correctAnswerText={text}\n            playersPoints={playersPoints}\n            playersSay={playersSay}\n            players={players}\n          />\n        </>\n      </SlideShow>\n    </Step>\n  );\n}\n","export const WINDOW_DURATION = 10;\n","// Ant Design Resources\nimport { Button } from 'antd';\nimport { PictureOutlined } from '@ant-design/icons';\n// Components\nimport { Instruction, RoundsLeftInstruction } from 'components/text';\nimport { StepRankingWrapper } from 'components/ranking';\nimport { PopoverRule } from 'components/rules';\nimport { Translate } from 'components/language';\nimport { VIPNextPhaseButton } from 'components/vip';\nimport { ScoringRules } from './components/TextBlobs';\nimport { PointsHighlight } from 'components/metrics/PointsHighlight';\n\ntype StepRankingProps = {\n  players: GamePlayers;\n  ranking: GameRanking;\n  isGameOver: boolean;\n  round: GameRound;\n  goToPreviousStep: GenericFunction;\n  setActiveIndex: GenericFunction;\n  threshold: number;\n};\n\nexport function StepRanking({\n  players,\n  ranking,\n  isGameOver,\n  round,\n  goToPreviousStep,\n  setActiveIndex,\n  threshold,\n}: StepRankingProps) {\n  return (\n    <StepRankingWrapper\n      players={players}\n      ranking={ranking}\n      gainedPointsDescriptions={[\n        <Translate pt=\"Votos corretos\" en=\"Correct guesses\" />,\n        <Translate\n          pt=\"Votos corretos em seu desenho por outros jogadores\"\n          en=\"Correct guesses on your drawing by other players\"\n        />,\n      ]}\n    >\n      <PopoverRule content={<ScoringRules />} />\n\n      {threshold > 0 && (\n        <Instruction contained>\n          <Translate\n            pt={\n              <>\n                O jogo termina quando alguém passa os <PointsHighlight>{threshold} pontos</PointsHighlight> ou{' '}\n                {round.total} rodadas.\n              </>\n            }\n            en={\n              <>\n                The game ends when someones passes <PointsHighlight>{threshold} points</PointsHighlight> or{' '}\n                {round.total} rounds.\n              </>\n            }\n          />\n        </Instruction>\n      )}\n\n      {!isGameOver && <RoundsLeftInstruction round={round} />}\n\n      <Button\n        size=\"large\"\n        onClick={() => {\n          goToPreviousStep();\n          setActiveIndex(0);\n        }}\n        icon={<PictureOutlined />}\n      >\n        <Translate pt=\"Ver Galeria Novamente\" en=\"See Gallery Again\" />\n      </Button>\n\n      <VIPNextPhaseButton round={round} />\n    </StepRankingWrapper>\n  );\n}\n","// Hooks\nimport { useSlideShow } from 'hooks/useSlideShow';\nimport { useStep } from 'hooks/useStep';\n// Resources and Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { PictureIcon } from 'icons/PictureIcon';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { GalleryRules } from './components/TextBlobs';\nimport { StepGallery } from './StepGallery';\nimport { StepRanking } from './StepRanking';\nimport { Translate } from 'components/language';\n\nfunction PhaseGallery({ players, state, info, meta }: PhaseProps) {\n  const { step, goToNextStep, goToPreviousStep, setStep } = useStep(0);\n  const { activeIndex, setActiveIndex, isFirstGalleryRunThrough } = useSlideShow(state.gallery.length);\n\n  const isGameOver = meta.options?.shortGame\n    ? state.round.current === 5\n    : Object.values(players).some((player) => player.score > 50);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ARTE_RUIM.GALLERY}\n      className=\"a-gallery-phase\"\n    >\n      <StepSwitcher step={step} players={players}>\n        {/*Step 0 */}\n        <PhaseAnnouncement\n          icon={<PictureIcon />}\n          title={<Translate pt=\"Galeria de Arte\" en=\"Art Gallery\" />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          unskippable\n          type=\"block\"\n        >\n          <GalleryRules />\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepGallery\n          gallery={state.gallery}\n          players={players}\n          cards={state.cards}\n          activeIndex={activeIndex}\n          setActiveIndex={setActiveIndex}\n          setStep={setStep}\n          isFirstGalleryRunThrough={isFirstGalleryRunThrough}\n        />\n\n        {/* Step 2 */}\n        <StepRanking\n          players={players}\n          ranking={state.ranking}\n          isGameOver={isGameOver}\n          round={state.round}\n          goToPreviousStep={goToPreviousStep}\n          setActiveIndex={setActiveIndex}\n          threshold={state.threshold}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseGallery;\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Avatar, Tooltip } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n\nconst GRADES = ['F', 'D', 'D+', 'C-', 'C', 'C+', 'B-', 'B', 'B+', 'A-', 'A', 'A+'];\n\ntype DrawingGradeProps = {\n  value: number;\n};\n\nexport const DrawingGrade = ({ value }: DrawingGradeProps) => {\n  const { translate } = useLanguage();\n  const grade = GRADES[Math.floor(value / 0.084)];\n\n  const baseClass = 'a-drawing-grade';\n\n  return (\n    <Tooltip\n      title={translate(\n        `Nota baseada em quantos acertos o desenho teve: ${value * 100}%`,\n        `Grade based on the number of correct guesses the artwork got: ${value * 100}%`\n      )}\n    >\n      <Avatar className={clsx(baseClass, `${baseClass}--${grade[0]}`)}>{grade}</Avatar>\n    </Tooltip>\n  );\n};\n","// Components\nimport { CanvasSVG } from 'components/canvas';\nimport { Translate } from 'components/language';\nimport { DrawingGrade } from './DrawingGrade';\n\ntype FinalGalleryProps = {\n  drawings: ArteRuimDrawing[];\n  players: GamePlayers;\n};\n\nexport function FinalGallery({ drawings, players }: FinalGalleryProps) {\n  return (\n    <ul className=\"a-game-over__gallery\">\n      {drawings.map((entry: ArteRuimDrawing) => {\n        const successRate = entry.successRate ?? 0;\n\n        return (\n          <li className=\"a-game-over__gallery-item\" key={entry.drawing} style={{ width: '200px' }}>\n            <CanvasSVG drawing={entry.drawing} width={200} className=\"a-game-over__gallery-canvas\" />\n            <span className=\"a-game-over__credits\">\n              \"{entry.text}\" <Translate pt=\"por\" en=\"by\" /> {players[entry.playerId].name}\n            </span>\n            <DrawingGrade value={successRate > 1 ? successRate / 100 : successRate} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","// Utils\nimport { achievementsReference } from './utils/achievements';\n// Icons\nimport { TrophyIcon } from 'icons/TrophyIcon';\n// Components\nimport { GameOverWrapper } from 'components/game-over';\nimport { Achievements } from 'components/general/Achievements';\nimport { Translate } from 'components/language';\nimport { FinalGallery } from './components/FinalGallery';\n\nfunction PhaseGameOver({ state, players, info }: PhaseProps) {\n  return (\n    <GameOverWrapper\n      info={info}\n      state={state}\n      players={players}\n      announcementIcon={<TrophyIcon />}\n      rateWidgetCustomText={<Translate pt=\"Alguma sugestão de carta?\" en=\"Any card suggestions?\" />}\n    >\n      <Achievements players={players} achievements={state.achievements} reference={achievementsReference} />\n\n      <FinalGallery players={players} drawings={state.drawings} />\n    </GameOverWrapper>\n  );\n}\n\nexport default PhaseGameOver;\n","import { ConfigProvider } from 'antd';\n// Constants\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport { LoadingPage } from 'components/loaders';\nimport PhaseDraw from './PhaseDraw';\nimport PhaseEvaluation from './PhaseEvaluation';\nimport PhaseGallery from './PhaseGallery';\nimport PhaseGameOver from './PhaseGameOver';\n// Sass\nimport './arte-ruim.scss';\n\nfunction getActiveComponent(state: GameState) {\n  // If phase is not defined, it is likely that the game is still loading\n  if (state && !state.phase) return LoadingPage;\n\n  switch (state.phase) {\n    case PHASES.DEFAULT.LOBBY:\n      return PhaseLobby;\n    case PHASES.DEFAULT.RULES:\n      return PhaseRules;\n    case PHASES.DEFAULT.SETUP:\n      return PhaseSetup;\n    case PHASES.ARTE_RUIM.DRAW:\n      return PhaseDraw;\n    case PHASES.ARTE_RUIM.EVALUATION:\n      return PhaseEvaluation;\n    case PHASES.ARTE_RUIM.GALLERY:\n      return PhaseGallery;\n    case PHASES.DEFAULT.GAME_OVER:\n      return PhaseGameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionArteRuim() {\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorPrimary: THEME_COLORS.WOOD,\n          colorLink: THEME_COLORS.WOOD,\n        },\n      }}\n    >\n      <Session gameCollection={GAME_COLLECTION.ARTE_RUIM} getActiveComponent={getActiveComponent} />\n    </ConfigProvider>\n  );\n}\n\nexport default SessionArteRuim;\n","const ACHIEVEMENTS = {\n  SOLITARY_LOSER: 'SOLITARY_LOSER',\n  SOLITARY_WINNER: 'SOLITARY_WINNER',\n  BEST_ARTIST: 'BEST_ARTIST',\n  WORST_ARTIST: 'WORST_ARTIST',\n  TABLE_VOTES: 'TABLE_VOTES',\n  CHOOSE_FOR_ME: 'CHOOSE_FOR_ME',\n};\n\nexport const achievementsReference: AchievementReference = {\n  [ACHIEVEMENTS.BEST_ARTIST]: {\n    icon: 'paint-brush',\n    title: {\n      pt: 'Melhor Artista',\n      en: 'Best Artist',\n    },\n    description: {\n      pt: 'Todos os jogadores acertaram unanimemente seu desenho mais vezes',\n      en: 'Got players to guess your drawing unanimously the most',\n    },\n  },\n  [ACHIEVEMENTS.WORST_ARTIST]: {\n    icon: 'question-mark',\n    title: {\n      pt: 'Artista Mais Não Convencional',\n      en: 'Most Unconventional Artist',\n    },\n    description: {\n      pt: 'Todos os jogadores NÃO acertaram unanimemente seu desenho mais vezes',\n      en: 'Got players to miss your drawing unanimously the most',\n    },\n  },\n  [ACHIEVEMENTS.SOLITARY_WINNER]: {\n    icon: 'person',\n    title: {\n      pt: 'Adivinhador Solitário',\n      en: 'Best Solitary Guesser',\n    },\n    description: {\n      pt: 'Foi o único que acertou o desenho mais vezes',\n      en: 'Was the only one to get the drawing the most',\n    },\n  },\n  [ACHIEVEMENTS.SOLITARY_LOSER]: {\n    icon: 'difference',\n    title: {\n      pt: 'Mais Diferentão',\n      en: 'Most Unique Guesser',\n    },\n    description: {\n      pt: 'Foi o único que errou o desenho mais vezes',\n      en: 'Was the only one to get the drawing the most',\n    },\n  },\n  [ACHIEVEMENTS.TABLE_VOTES]: {\n    icon: 'table',\n    title: {\n      pt: 'Melhor Votador Pra Mesa',\n      en: 'Best Table Voter',\n    },\n    description: {\n      pt: 'Votou nas cartas extras que não eram de nenhum jogador mais vezes',\n      en: \"Voted for extra cards that didn't belong to any player the most\",\n    },\n  },\n  [ACHIEVEMENTS.CHOOSE_FOR_ME]: {\n    icon: 'dice',\n    title: {\n      pt: 'Menos Brasileiro',\n      en: 'The Shirker',\n    },\n    description: {\n      pt: 'Apertou o botão Chutar Restantes mais vezes',\n      en: \"Pressed 'Guess for me' the most\",\n    },\n  },\n};\n\nexport default achievementsReference;\n","export function PaintingIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#d19a6e\"\n        d=\"M255.517 48.881h-47.52V19.77c0-6.777 5.493-12.27 12.27-12.27h22.98c6.777 0 12.27 5.493 12.27 12.27z\"\n      ></path>\n      <path\n        fill=\"#bc845e\"\n        d=\"M234.907 7.5h-14.64c-6.777 0-12.27 5.493-12.27 12.27v29.111h14.64V19.77c0-6.777 5.494-12.27 12.27-12.27z\"\n      ></path>\n      <path\n        fill=\"#ffc269\"\n        d=\"M306.997 87.601h-150.48v-25.58c0-7.257 5.883-13.14 13.14-13.14h124.2c7.257 0 13.14 5.883 13.14 13.14z\"\n      ></path>\n      <path\n        fill=\"#ffa95f\"\n        d=\"M188.377 48.881h-18.72c-7.257 0-13.14 5.883-13.14 13.14v25.58h18.72v-25.58c0-7.257 5.883-13.14 13.14-13.14z\"\n      ></path>\n      <path\n        fill=\"#d19a6e\"\n        d=\"M175.536 492.233l25.619-71.973h-49.68l-24.066 67.611c-2.886 8.108 3.126 16.629 11.732 16.629h19.009a18.455 18.455 0 0017.386-12.267zM288.138 492.233l-25.619-71.973h49.68l24.066 67.611c2.886 8.108-3.126 16.629-11.732 16.629h-19.009a18.455 18.455 0 01-17.386-12.267z\"\n      ></path>\n      <path\n        fill=\"#bc845e\"\n        d=\"M166.538 446.66h25.22l9.397-26.4h-49.68l-24.066 67.611c-2.886 8.108 3.126 16.629 11.732 16.629h18.24c-8.606 0-14.618-8.521-11.732-16.629l12.583-35.352a8.817 8.817 0 018.306-5.859zM306.378 492.233l-13.836-38.871c-1.163-3.268 1.26-6.703 4.729-6.703h24.325l-9.397-26.4h-49.68l25.619 71.973a18.455 18.455 0 0017.387 12.267h18.24a18.453 18.453 0 01-17.387-12.266z\"\n      ></path>\n      <path\n        fill=\"#ffc269\"\n        d=\"M398.405 429.244H65.27c-6.742 0-12.208-5.466-12.208-12.208v-24.889c0-6.742 5.466-12.208 12.208-12.208h37.194l39.512-21.24 34.244 21.24h222.185c6.742 0 12.208 5.466 12.208 12.208v24.889c-.001 6.742-5.466 12.208-12.208 12.208z\"\n      ></path>\n      <path\n        fill=\"#ffa95f\"\n        d=\"M71.062 417.036v-24.889c0-6.742 5.466-12.208 12.208-12.208h-18c-6.742 0-12.208 5.466-12.208 12.208v24.889c0 6.742 5.466 12.208 12.208 12.208h18c-6.742 0-12.208-5.466-12.208-12.208z\"\n      ></path>\n      <path\n        fill=\"#f4f4f4\"\n        d=\"M376.742 379.94H86.932V112.753c0-13.891 11.261-25.152 25.152-25.152H351.59c13.891 0 25.152 11.261 25.152 25.152z\"\n      ></path>\n      <path\n        fill=\"#e5e5e5\"\n        d=\"M376.742 145.146a67.752 67.752 0 00-3.022-3.232c-12.437-12.437-28.972-19.421-46.558-19.667l-3.622-.047c-9.196 0-17.817 3.607-24.276 10.157-6.458 6.548-9.944 15.22-9.815 24.418l.044 3.142c.246 17.587 7.23 34.122 19.667 46.559a67.3 67.3 0 0029.421 17.196l34.692 34.691a236.08 236.08 0 003.469 3.383zM134.201 87.601h-22.116c-13.891 0-25.152 11.261-25.152 25.152V379.94h22.116V112.753c0-13.891 11.261-25.152 25.152-25.152z\"\n      ></path>\n      <path\n        fill=\"#69d6f4\"\n        d=\"M132.664 161.295v158.191c0 9.055 7.34 16.395 16.395 16.395s16.395-7.34 16.395-16.395V212.909c0-8.83 7.158-15.989 15.989-15.989 8.83 0 15.989 7.158 15.989 15.989v12.45c0 9.189 7.52 16.994 16.708 16.822 8.91-.167 16.082-7.442 16.082-16.392V212.91c0-8.83 7.158-15.989 15.989-15.989h36.024c8.83 0 15.989 7.158 15.989 15.989v74.467c0 9.189 7.52 16.994 16.708 16.822 8.91-.167 16.082-7.442 16.082-16.392V152.51c0-5.694-4.616-10.31-10.31-10.31H151.759c-10.546 0-19.095 8.549-19.095 19.095z\"\n      ></path>\n      <path\n        fill=\"#69d6f4\"\n        d=\"M230.22 286.12c0-8.881-7.199-16.08-16.08-16.08h-.63c-8.881 0-16.08 7.199-16.08 16.08 0 8.881 7.199 16.08 16.08 16.08h.63c8.881 0 16.08-7.199 16.08-16.08z\"\n      ></path>\n      <path\n        fill=\"#51c1ed\"\n        d=\"M320.701 142.2h-28.223a33.96 33.96 0 00-3.029 14.574l.044 3.142c.246 17.587 7.23 34.122 19.667 46.558a67.264 67.264 0 0021.852 14.578V152.51c-.002-5.694-4.617-10.31-10.311-10.31z\"\n      ></path>\n      <path\n        fill=\"#aab2bd\"\n        d=\"M371.204 228.009l16.211 16.211a210.226 210.226 0 0015.636 14.141l37.697 30.801a11.129 11.129 0 0014.911-.749 11.129 11.129 0 00.749-14.911l-30.801-37.697a210.226 210.226 0 00-14.141-15.636l-16.211-16.211z\"\n      ></path>\n      <path\n        fill=\"#969faa\"\n        d=\"M449.658 280.253l-37.697-30.801a210.226 210.226 0 01-15.636-14.141L380.114 219.1l-8.91 8.91 16.211 16.211a210.226 210.226 0 0015.636 14.141l37.697 30.801a11.129 11.129 0 0014.911-.749 11.078 11.078 0 003.063-5.847 11.103 11.103 0 01-9.064-2.314z\"\n      ></path>\n      <path\n        fill=\"#ffc269\"\n        d=\"M355.109 189.154h34.013v31.433h-34.013z\"\n        transform=\"rotate(-45 372.107 204.954)\"\n      ></path>\n      <path\n        fill=\"#fc8d94\"\n        d=\"M309.447 156.495l.044 3.142a47.168 47.168 0 0034.704 44.836l4.783 1.31 24.051-24.051-1.31-4.783a47.172 47.172 0 00-44.836-34.704l-3.142-.044c-7.94-.11-14.405 6.354-14.294 14.294z\"\n      ></path>\n      <path fill=\"#ffa95f\" d=\"M373.028 181.732l-24.051 24.051 22.227 22.226 8.91-8.91-22.227-22.226z\"></path>\n      <path\n        fill=\"#fa6f7c\"\n        d=\"M353.105 195.563a47.172 47.172 0 01-34.704-44.836l-.044-3.142a14.047 14.047 0 01.732-4.652c-5.658 1.886-9.73 7.252-9.642 13.562l.044 3.142a47.168 47.168 0 0034.704 44.836l4.783 1.31 24.051-24.051-15.141 15.141z\"\n      ></path>\n      <g>\n        <path d=\"M398.405 372.44h-14.163V268.92a7.5 7.5 0 00-15 0v103.52H159.071a7.5 7.5 0 000 15h239.334a4.713 4.713 0 014.708 4.708v24.889a4.713 4.713 0 01-4.708 4.708H65.27a4.713 4.713 0 01-4.708-4.708v-24.889a4.713 4.713 0 014.708-4.708h61.408a7.5 7.5 0 000-15H94.432V112.753c0-9.733 7.919-17.652 17.652-17.652H351.59c9.733 0 17.652 7.919 17.652 17.652v25.126a7.5 7.5 0 0015 0v-25.126c0-18.004-14.648-32.652-32.652-32.652h-37.092v-18.08c0-11.381-9.259-20.64-20.64-20.64h-30.84V19.77c0-10.901-8.869-19.77-19.77-19.77h-22.98c-10.901 0-19.77 8.869-19.77 19.77v21.611h-30.84c-11.381 0-20.64 9.259-20.64 20.64v18.08h-36.933c-18.004 0-32.652 14.648-32.652 32.652V372.44H65.27c-10.867 0-19.708 8.841-19.708 19.708v24.889c0 10.867 8.841 19.708 19.708 19.708h72.376l-17.303 48.613c-2.171 6.101-1.239 12.902 2.494 18.193s9.828 8.45 16.304 8.45h19.009c10.953 0 20.78-6.933 24.453-17.251l20.646-58.005h57.177l20.647 58.005c3.673 10.319 13.5 17.251 24.452 17.251h19.009a19.98 19.98 0 0016.304-8.45 19.978 19.978 0 002.494-18.194l-17.303-48.612h72.376c10.867 0 19.708-8.841 19.708-19.708v-24.889c0-10.867-8.841-19.708-19.708-19.708zM215.497 19.77c0-2.63 2.14-4.77 4.77-4.77h22.98c2.63 0 4.77 2.14 4.77 4.77v21.611h-32.52zm-51.48 42.251c0-3.11 2.53-5.64 5.64-5.64h124.2c3.11 0 5.64 2.53 5.64 5.64v18.08h-135.48zm4.453 427.697A10.977 10.977 0 01158.149 497H139.14c-2.317 0-3.602-1.467-4.047-2.098s-1.396-2.333-.619-4.516l19.094-53.643h33.758zm160.729.668c.777 2.183-.174 3.886-.619 4.517s-1.73 2.098-4.047 2.098h-19.009a10.976 10.976 0 01-10.321-7.282l-18.856-52.975h33.758z\"></path>\n        <path d=\"M214.14 262.54h-.629c-13.002 0-23.58 10.578-23.58 23.58s10.578 23.58 23.58 23.58h.629c13.002 0 23.58-10.578 23.58-23.58s-10.578-23.58-23.58-23.58zm0 32.16h-.629c-4.731 0-8.58-3.849-8.58-8.58s3.849-8.58 8.58-8.58h.629c4.731 0 8.58 3.849 8.58 8.58s-3.849 8.58-8.58 8.58z\"></path>\n        <path d=\"M282.232 189.42h-36.023c-12.952 0-23.489 10.537-23.489 23.489v12.879c0 4.813-3.913 8.803-8.722 8.893-2.268.05-4.48-.861-6.195-2.544-1.826-1.792-2.873-4.263-2.873-6.779v-12.45c0-12.952-10.537-23.489-23.488-23.489s-23.489 10.537-23.489 23.489v106.577c0 4.904-3.99 8.895-8.895 8.895-4.904 0-8.895-3.99-8.895-8.895v-158.19c0-6.394 5.201-11.595 11.595-11.595H282.19a7.5 7.5 0 000-15H151.759c-14.665 0-26.595 11.93-26.595 26.595v158.19c0 13.175 10.719 23.895 23.895 23.895 13.175 0 23.895-10.719 23.895-23.895V212.909c0-4.681 3.808-8.489 8.489-8.489s8.488 3.808 8.488 8.489v12.45c0 6.517 2.685 12.89 7.366 17.484 4.613 4.526 10.632 6.954 16.983 6.835 12.925-.242 23.441-10.959 23.441-23.89v-12.879c0-4.681 3.808-8.489 8.489-8.489h36.023c4.681 0 8.489 3.808 8.489 8.489v74.467c0 6.518 2.685 12.89 7.366 17.485 4.612 4.526 10.634 6.959 16.982 6.835 12.925-.242 23.441-10.959 23.441-23.891v-59.796a7.5 7.5 0 00-15 0v59.796c0 4.814-3.913 8.803-8.722 8.894-2.287.039-4.48-.861-6.195-2.544-1.826-1.792-2.873-4.263-2.873-6.779v-74.467c0-12.952-10.537-23.489-23.489-23.489z\"></path>\n        <path d=\"M462.216 268.757l-30.801-37.697a218.436 218.436 0 00-14.646-16.194l-37.032-37.032-.785-2.866a54.76 54.76 0 00-14.07-24.215c-10.123-10.123-23.58-15.807-37.894-16.007l-3.144-.044c-5.86-.066-11.414 2.164-15.573 6.325-4.16 4.16-6.406 9.69-6.323 15.573l.043 3.142c.2 14.314 5.885 27.772 16.007 37.894a54.764 54.764 0 0024.215 14.07l2.866.785 37.032 37.032a218.5 218.5 0 0016.194 14.646l37.697 30.802a18.589 18.589 0 0011.791 4.222 18.58 18.58 0 0013.17-5.476 18.574 18.574 0 001.253-24.96zM316.99 159.532l-.044-3.142a6.548 6.548 0 011.931-4.757c1.271-1.271 2.992-1.98 4.758-1.932l3.143.044c10.386.145 20.151 4.27 27.497 11.615a39.746 39.746 0 0110.21 17.571l.159.58-17.888 17.888-.58-.159a39.74 39.74 0 01-17.571-10.21c-7.346-7.345-11.471-17.111-11.615-27.498zm56.038 32.806l11.62 11.62-13.444 13.444-11.62-11.62zm77.328 90.773a3.619 3.619 0 01-4.862.244l-37.697-30.801a203.468 203.468 0 01-15.079-13.637l-10.908-10.908 13.444-13.444 10.908 10.908a203.67 203.67 0 0113.637 15.079l30.801 37.697a3.618 3.618 0 01-.244 4.862z\"></path>\n      </g>\n    </svg>\n  );\n}\n","// This icon file is generated automatically.\nvar CloudUploadOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M518.3 459a8 8 0 00-12.6 0l-112 141.7a7.98 7.98 0 006.3 12.9h73.9V856c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V613.7H624c6.7 0 10.4-7.7 6.3-12.9L518.3 459z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M811.4 366.7C765.6 245.9 648.9 160 512.2 160S258.8 245.8 213 366.6C127.3 389.1 64 467.2 64 560c0 110.5 89.5 200 199.9 200H304c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8h-40.1c-33.7 0-65.4-13.4-89-37.7-23.5-24.2-36-56.8-34.9-90.6.9-26.4 9.9-51.2 26.2-72.1 16.7-21.3 40.1-36.8 66.1-43.7l37.9-9.9 13.9-36.6c8.6-22.8 20.6-44.1 35.7-63.4a245.6 245.6 0 0152.4-49.9c41.1-28.9 89.5-44.2 140-44.2s98.9 15.3 140 44.2c19.9 14 37.5 30.8 52.4 49.9 15.1 19.3 27.1 40.7 35.7 63.4l13.8 36.5 37.8 10C846.1 454.5 884 503.8 884 560c0 33.1-12.9 64.3-36.3 87.7a123.07 123.07 0 01-87.6 36.3H720c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h40.1C870.5 760 960 670.5 960 560c0-92.7-63.1-170.7-148.6-193.3z\" } }] }, \"name\": \"cloud-upload\", \"theme\": \"outlined\" };\nexport default CloudUploadOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloudUploadOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloudUploadOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar CloudUploadOutlined = function CloudUploadOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CloudUploadOutlinedSvg\n  }));\n};\nCloudUploadOutlined.displayName = 'CloudUploadOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloudUploadOutlined);","// This icon file is generated automatically.\nvar MessageFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M924.3 338.4a447.57 447.57 0 00-96.1-143.3 443.09 443.09 0 00-143-96.3A443.91 443.91 0 00512 64h-2c-60.5.3-119 12.3-174.1 35.9a444.08 444.08 0 00-141.7 96.5 445 445 0 00-95 142.8A449.89 449.89 0 0065 514.1c.3 69.4 16.9 138.3 47.9 199.9v152c0 25.4 20.6 46 45.9 46h151.8a447.72 447.72 0 00199.5 48h2.1c59.8 0 117.7-11.6 172.3-34.3A443.2 443.2 0 00827 830.5c41.2-40.9 73.6-88.7 96.3-142 23.5-55.2 35.5-113.9 35.8-174.5.2-60.9-11.6-120-34.8-175.6zM312.4 560c-26.4 0-47.9-21.5-47.9-48s21.5-48 47.9-48 47.9 21.5 47.9 48-21.4 48-47.9 48zm199.6 0c-26.4 0-47.9-21.5-47.9-48s21.5-48 47.9-48 47.9 21.5 47.9 48-21.5 48-47.9 48zm199.6 0c-26.4 0-47.9-21.5-47.9-48s21.5-48 47.9-48 47.9 21.5 47.9 48-21.5 48-47.9 48z\" } }] }, \"name\": \"message\", \"theme\": \"filled\" };\nexport default MessageFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport MessageFilledSvg from \"@ant-design/icons-svg/es/asn/MessageFilled\";\nimport AntdIcon from '../components/AntdIcon';\nvar MessageFilled = function MessageFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: MessageFilledSvg\n  }));\n};\nMessageFilled.displayName = 'MessageFilled';\nexport default /*#__PURE__*/React.forwardRef(MessageFilled);","// This icon file is generated automatically.\nvar WarningOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M464 720a48 48 0 1096 0 48 48 0 10-96 0zm16-304v184c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V416c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8zm475.7 440l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48zm-783.5-27.9L512 239.9l339.8 588.2H172.2z\" } }] }, \"name\": \"warning\", \"theme\": \"outlined\" };\nexport default WarningOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport WarningOutlinedSvg from \"@ant-design/icons-svg/es/asn/WarningOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar WarningOutlined = function WarningOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: WarningOutlinedSvg\n  }));\n};\nWarningOutlined.displayName = 'WarningOutlined';\nexport default /*#__PURE__*/React.forwardRef(WarningOutlined);","export default function parseTimeRanges(ranges) {\n    var result = [];\n    for (var i = 0; i < ranges.length; i++) {\n        result.push({\n            start: ranges.start(i),\n            end: ranges.end(i),\n        });\n    }\n    return result;\n}\n","import createHTMLMediaHook from './factory/createHTMLMediaHook';\nvar useAudio = createHTMLMediaHook('audio');\nexport default useAudio;\n","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { useEffect, useRef } from 'react';\nimport useSetState from '../useSetState';\nimport parseTimeRanges from '../misc/parseTimeRanges';\nexport default function createHTMLMediaHook(tag) {\n    return function (elOrProps) {\n        var element;\n        var props;\n        if (React.isValidElement(elOrProps)) {\n            element = elOrProps;\n            props = element.props;\n        }\n        else {\n            props = elOrProps;\n        }\n        var _a = useSetState({\n            buffered: [],\n            time: 0,\n            duration: 0,\n            paused: true,\n            muted: false,\n            volume: 1,\n            playing: false,\n        }), state = _a[0], setState = _a[1];\n        var ref = useRef(null);\n        var wrapEvent = function (userEvent, proxyEvent) {\n            return function (event) {\n                try {\n                    proxyEvent && proxyEvent(event);\n                }\n                finally {\n                    userEvent && userEvent(event);\n                }\n            };\n        };\n        var onPlay = function () { return setState({ paused: false }); };\n        var onPlaying = function () { return setState({ playing: true }); };\n        var onWaiting = function () { return setState({ playing: false }); };\n        var onPause = function () { return setState({ paused: true, playing: false }); };\n        var onVolumeChange = function () {\n            var el = ref.current;\n            if (!el) {\n                return;\n            }\n            setState({\n                muted: el.muted,\n                volume: el.volume,\n            });\n        };\n        var onDurationChange = function () {\n            var el = ref.current;\n            if (!el) {\n                return;\n            }\n            var duration = el.duration, buffered = el.buffered;\n            setState({\n                duration: duration,\n                buffered: parseTimeRanges(buffered),\n            });\n        };\n        var onTimeUpdate = function () {\n            var el = ref.current;\n            if (!el) {\n                return;\n            }\n            setState({ time: el.currentTime });\n        };\n        var onProgress = function () {\n            var el = ref.current;\n            if (!el) {\n                return;\n            }\n            setState({ buffered: parseTimeRanges(el.buffered) });\n        };\n        if (element) {\n            element = React.cloneElement(element, __assign(__assign({ controls: false }, props), { ref: ref, onPlay: wrapEvent(props.onPlay, onPlay), onPlaying: wrapEvent(props.onPlaying, onPlaying), onWaiting: wrapEvent(props.onWaiting, onWaiting), onPause: wrapEvent(props.onPause, onPause), onVolumeChange: wrapEvent(props.onVolumeChange, onVolumeChange), onDurationChange: wrapEvent(props.onDurationChange, onDurationChange), onTimeUpdate: wrapEvent(props.onTimeUpdate, onTimeUpdate), onProgress: wrapEvent(props.onProgress, onProgress) }));\n        }\n        else {\n            element = React.createElement(tag, __assign(__assign({ controls: false }, props), { ref: ref, onPlay: wrapEvent(props.onPlay, onPlay), onPlaying: wrapEvent(props.onPlaying, onPlaying), onWaiting: wrapEvent(props.onWaiting, onWaiting), onPause: wrapEvent(props.onPause, onPause), onVolumeChange: wrapEvent(props.onVolumeChange, onVolumeChange), onDurationChange: wrapEvent(props.onDurationChange, onDurationChange), onTimeUpdate: wrapEvent(props.onTimeUpdate, onTimeUpdate), onProgress: wrapEvent(props.onProgress, onProgress) })); // TODO: fix this typing.\n        }\n        // Some browsers return `Promise` on `.play()` and may throw errors\n        // if one tries to execute another `.play()` or `.pause()` while that\n        // promise is resolving. So we prevent that with this lock.\n        // See: https://bugs.chromium.org/p/chromium/issues/detail?id=593273\n        var lockPlay = false;\n        var controls = {\n            play: function () {\n                var el = ref.current;\n                if (!el) {\n                    return undefined;\n                }\n                if (!lockPlay) {\n                    var promise = el.play();\n                    var isPromise = typeof promise === 'object';\n                    if (isPromise) {\n                        lockPlay = true;\n                        var resetLock = function () {\n                            lockPlay = false;\n                        };\n                        promise.then(resetLock, resetLock);\n                    }\n                    return promise;\n                }\n                return undefined;\n            },\n            pause: function () {\n                var el = ref.current;\n                if (el && !lockPlay) {\n                    return el.pause();\n                }\n            },\n            seek: function (time) {\n                var el = ref.current;\n                if (!el || state.duration === undefined) {\n                    return;\n                }\n                time = Math.min(state.duration, Math.max(0, time));\n                el.currentTime = time;\n            },\n            volume: function (volume) {\n                var el = ref.current;\n                if (!el) {\n                    return;\n                }\n                volume = Math.min(1, Math.max(0, volume));\n                el.volume = volume;\n                setState({ volume: volume });\n            },\n            mute: function () {\n                var el = ref.current;\n                if (!el) {\n                    return;\n                }\n                el.muted = true;\n            },\n            unmute: function () {\n                var el = ref.current;\n                if (!el) {\n                    return;\n                }\n                el.muted = false;\n            },\n        };\n        useEffect(function () {\n            var el = ref.current;\n            if (!el) {\n                if (process.env.NODE_ENV !== 'production') {\n                    if (tag === 'audio') {\n                        console.error('useAudio() ref to <audio> element is empty at mount. ' +\n                            'It seem you have not rendered the audio element, which it ' +\n                            'returns as the first argument const [audio] = useAudio(...).');\n                    }\n                    else if (tag === 'video') {\n                        console.error('useVideo() ref to <video> element is empty at mount. ' +\n                            'It seem you have not rendered the video element, which it ' +\n                            'returns as the first argument const [video] = useVideo(...).');\n                    }\n                }\n                return;\n            }\n            setState({\n                volume: el.volume,\n                muted: el.muted,\n                paused: el.paused,\n            });\n            // Start media, if autoPlay requested.\n            if (props.autoPlay && el.paused) {\n                controls.play();\n            }\n        }, [props.src]);\n        return [element, state, controls, ref];\n    };\n}\n","import { useCallback, useState } from 'react';\nvar useSetState = function (initialState) {\n    if (initialState === void 0) { initialState = {}; }\n    var _a = useState(initialState), state = _a[0], set = _a[1];\n    var setState = useCallback(function (patch) {\n        set(function (prevState) {\n            return Object.assign({}, prevState, patch instanceof Function ? patch(prevState) : patch);\n        });\n    }, []);\n    return [state, setState];\n};\nexport default useSetState;\n"],"names":["StepDraw","secretCard","onSubmitDrawing","startDrawingTimer","announcement","translate","useLanguage","isDebugEnabled","useDevFeatures","useState","lines","setLines","isTimesUp","setTimesUp","useCountdown","duration","autoStart","onExpire","drawing","JSON","stringify","cardId","id","seconds","start","isRunning","useEffect","useMock","mockDrawing","size","header","undefined","footer","Array","level","fill","join","className","color","text","ArteRuimTimerSound","onClick","PanicIcon","style","background","width","padding","DrawInstruction","pt","TimeHighlight","en","EvaluationRules","GalleryRules","PointsHighlight","type","ScoringRules","LevelInstruction","levelType","contained","getLevelText","contenders","movies","adjectives","players","state","info","useStep","step","goToNextStep","setStep","user","useUser","setStartDrawingTimer","request","useAPICall","apiFunction","ARTE_RUIM_API","actionName","onBeforeCall","onError","successMessage","errorMessage","payload","action","useOnSubmitDrawingAPIRequest","icon","PaintingIcon","title","buttonText","onClose","currentRound","round","current","withoutTimer","phase","allowedPhase","PHASES","conditions","isReady","waitingRoomInstruction","onPressButton","time","circleColor","appearance","unskippable","currentCard","ThunderboltOutlined","props","ref","React","AntdIcon","_objectSpread","ThunderboltOutlinedSvg","displayName","prepareVotes","votes","Object","entries","reduce","acc","drawingEntryId","cardEntryId","split","SEPARATOR","drawingId","EvaluationAllDrawings","drawings","activeItem","onActivateItem","canvasSize","liButtonBaseClass","map","drawingEntry","canvasEntryId","getEntryId","isActive","vote","clsx","label","charAt","length","playerId","name","ArteRuimCard","getColorFromLetter","WarningOutlined","EvaluationAllCards","cards","cardEntry","index","letter","LETTERS","isUsed","values","includes","role","StepEvaluation","onSubmitVoting","isLoading","useLoading","canvasWidth","useCardWidth","useGlobalState","setCanvasSize","useVotingMatch","setVotes","activateItem","resetVoting","isVotingComplete","choseRandomly","setChoseRandomly","onGuessForMe","useCallback","usedDrawings","keys","usedCards","drawingsKeys","e","filter","key","cardsKeys","shuffle","Math","ceil","flat","newVotes","forEach","drawingKey","floor","selectOwnDrawing","playersDrawing","find","cardIndex","findIndex","card","cardKey","useEffectOnce","selection","s","fullWidth","content","align","wrap","disabled","CloudUploadOutlined","loading","EvaluatedDrawings","cardsDict","useMemo","drawingsDict","IconAvatar","AnimatedLoaderIcon","cSize","min","sort","maxWidth","player","onSuccess","useOnSubmitVotingAPIRequest","EvaluateIcon","waitingRoomContent","GalleryWindowCredits","artist","GalleryWindowGuesses","playersSay","windowCardId","artistColor","orderBy","playersIds","i","count","isCorrect","entry","backgroundColor","CrownFilled","MessageFilled","avatarId","getPlayersFromIds","GalleryWindowResult","playerArtist","correctAnswerId","correctAnswerText","playersPoints","correctGuesses","quantity","keyPrefix","GarbageIcon","shape","StepGallery","gallery","activeIndex","setActiveIndex","isFirstGalleryRunThrough","useTemporarilyHidePlayersBar","artistId","currentColor","getAvatarColorById","disableControls","barColor","windowDuration","leftClassName","rightClassName","StepRanking","ranking","isGameOver","goToPreviousStep","threshold","gainedPointsDescriptions","total","PictureOutlined","meta","useSlideShow","options","shortGame","some","score","PictureIcon","GRADES","DrawingGrade","value","grade","baseClass","FinalGallery","successRate","announcementIcon","TrophyIcon","rateWidgetCustomText","Achievements","achievements","reference","achievementsReference","getActiveComponent","LoadingPage","PhaseLobby","PhaseRules","PhaseSetup","PhaseDraw","PhaseEvaluation","PhaseGallery","PhaseGameOver","PageError","theme","token","colorPrimary","THEME_COLORS","colorLink","gameCollection","GAME_COLLECTION","ACHIEVEMENTS","description","xmlns","viewBox","d","transform","CloudUploadOutlinedSvg","MessageFilledSvg","WarningOutlinedSvg","parseTimeRanges","ranges","result","push","end","tag","elOrProps","element","_a","useSetState","buffered","paused","muted","volume","playing","setState","useRef","wrapEvent","userEvent","proxyEvent","event","onPlay","onPlaying","onWaiting","onPause","onVolumeChange","el","onDurationChange","onTimeUpdate","currentTime","onProgress","__assign","controls","lockPlay","play","promise","resetLock","then","pause","seek","max","mute","unmute","autoPlay","src","initialState","set","patch","prevState","assign","Function"],"sourceRoot":""}