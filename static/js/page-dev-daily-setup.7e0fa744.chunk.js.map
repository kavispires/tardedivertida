{"version":3,"file":"static/js/page-dev-daily-setup.7e0fa744.chunk.js","mappings":"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","sources":["components/canvas/CanvasResizer.tsx","components/canvas/CanvasSVG.tsx","components/canvas/DrawingCanvas.tsx","pages/Dev/DailySetup/hooks.ts","pages/Dev/DailySetup/utils.ts","pages/Dev/DailySetup/DailySetup.tsx","pages/Dev/DevMenu.tsx","pages/Dev/DevHeader.tsx"],"sourcesContent":["// Ant Design Resources\nimport { Slider } from 'antd';\nimport { DragOutlined } from '@ant-design/icons';\n// State & Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\n// Components\nimport { FixedMenuButton } from 'components/buttons';\nimport { Translate } from 'components/language';\n\n/**\n * Fixed Menu Button for resizing canvas\n */\nexport const CanvasResizer = () => {\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n\n  return (\n    <FixedMenuButton\n      type=\"popover\"\n      position={1}\n      icon={<DragOutlined />}\n      label={labelText}\n      content={\n        <div className=\"canvas-resizer\">\n          <div className=\"canvas-resizer__label\">{labelText}</div>\n          <Slider\n            className=\"canvas-resizer__slider\"\n            value={canvasSize ?? 100}\n            min={150}\n            max={500}\n            step={50}\n            onChange={setCanvasSize}\n          />\n        </div>\n      }\n    />\n  );\n};\n\nconst labelText = <Translate pt=\"Tamanho das Artes\" en=\"Art Size\" />;\n","/**\n * Builds paths from canvas lines\n * @param lines\n * @returns\n */\nconst getPathFromKonvaLines = (lines: CanvasLine[]) => {\n  const result = lines.map((lineArr) => {\n    let path = '';\n    for (let x = 0, y = 1; y < lineArr.length; x += 2, y += 2) {\n      if (lineArr[x + 2] && lineArr[y + 2]) {\n        path += `M${lineArr[x]},${lineArr[y]} L${lineArr[x + 2]},${lineArr[y + 2]}`;\n      }\n    }\n\n    return path;\n  });\n\n  return result;\n};\n\ntype CanvasSVGProps = {\n  /**\n   * The stringified svg path\n   */\n  drawing: string;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * The width of the canvas (default: 500)\n   */\n  width?: number;\n  /**\n   * The height of the canvas (default: 500)\n   */\n  height?: number;\n  /**\n   * Size of the stroke. Default: medium\n   */\n  strokeWidth?: 'small' | 'medium' | 'large';\n  /**\n   * Custom view box size (default: '0 0 500')\n   */\n  viewBox?: string;\n};\n\nexport const CanvasSVG = ({\n  drawing = '',\n  className = '',\n  width = 250,\n  height,\n  strokeWidth = 'medium',\n  viewBox = '0 0 500 500',\n}: CanvasSVGProps) => {\n  const konvaLines = JSON.parse(drawing);\n  const paths = getPathFromKonvaLines(konvaLines);\n\n  const strokeWidthBySize =\n    {\n      small: 3,\n      medium: 5,\n      large: 7,\n    }?.[strokeWidth] ?? 5;\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox={viewBox}\n      overflow=\"hidden\"\n      className={className}\n      style={{ width: `${width}px`, height: `${height || width}px` }}\n    >\n      <defs />\n      {paths.map((path, index) => (\n        <path\n          key={`${drawing}-${index}`}\n          d={path}\n          fill=\"none\"\n          stroke=\"#000\"\n          strokeWidth={strokeWidthBySize}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit=\"10\"\n        />\n      ))}\n    </svg>\n  );\n};\n","import { useRef, useState } from 'react';\nimport { Stage, Layer, Line } from 'react-konva';\nimport clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\nimport { DeleteOutlined, UndoOutlined } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\n\ntype DrawingCanvasProps = {\n  /**\n   * Lines drawn in the canvas\n   */\n  lines: CanvasLine[];\n  /**\n   * Function where any new version of the drawing is sent to\n   */\n  setLines: CanvasSetLine;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Show controls to undo, redo, or erase drawing. Default: false\n   */\n  showControls?: boolean;\n  /**\n   * Size of the stroke. Default: medium\n   */\n  strokeWidth?: 'small' | 'medium' | 'large';\n  /**\n   * The width of the canvas (default: 500)\n   */\n  width?: number;\n  /**\n   * The height of the canvas (default: 500)\n   */\n  height?: number;\n  /**\n   *\n   */\n  willReadFrequently?: boolean;\n};\n\n/**\n * Canvas drawing board using react-konva\n * It requires an array of lines and an setState function to save the lines\n */\nexport const DrawingCanvas = ({\n  lines,\n  setLines,\n  className = '',\n  showControls = false,\n  strokeWidth = 'medium',\n  width = 500,\n  height,\n  willReadFrequently = false,\n}: DrawingCanvasProps) => {\n  const [drawingHistory, setDrawingHistory] = useState<CanvasLine[]>([]);\n  const isDrawing = useRef(false);\n\n  /**\n   * Toggles off the isDrawing flag\n   */\n  const startDrawing = () => {\n    isDrawing.current = true;\n  };\n\n  /**\n   * Toggles off the isDrawing flag and resets history\n   */\n  const stopDrawing = () => {\n    isDrawing.current = false;\n    setDrawingHistory([]);\n  };\n\n  const startLine = (e: any) => {\n    startDrawing();\n    const pos = e.target.getStage().getPointerPosition();\n    setLines([...lines, [Math.round(pos.x), Math.round(pos.y)]]);\n  };\n\n  const finishLine = (e: any) => {\n    // Add point if it was a point\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    const x = Math.round(point.x);\n    const y = Math.round(point.y);\n\n    let lastLineEntry = lines[lines.length - 1];\n    lastLineEntry = lastLineEntry.concat([x + 0.1, y + 0.1]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLineEntry);\n    setLines(lines.concat());\n  };\n\n  /**\n   * Start recording drawing\n   * @param e - konva mouse event\n   */\n  const handleMouseDown = (e: any) => {\n    startLine(e);\n  };\n\n  /**\n   * Tracks mouse moving during the drawing\n   * @param e - konva mouse event\n   */\n  const handleMouseMove = (e: any) => {\n    // no drawing - skipping\n    if (!isDrawing.current) {\n      return;\n    }\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    let lastLine = lines[lines.length - 1];\n    // add end point\n    lastLine = lastLine.concat([Math.round(point.x), Math.round(point.y)]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLine);\n    setLines(lines.concat());\n  };\n\n  const handleMouseUp = (e: any) => {\n    if (isDrawing.current) {\n      stopDrawing();\n\n      finishLine(e);\n    }\n  };\n\n  /**\n   * Handles case when a current drawing is stopped off stage\n   * @param e - mouse event\n   */\n  const handleOffsetMouseUp = () => {\n    stopDrawing();\n  };\n\n  /**\n   * Handles case when a current drawing is started off stage\n   * @param e - mouse event\n   */\n  const handleOffsetMouseDown = () => {\n    startDrawing();\n  };\n\n  /**\n   * Handles when mouse leaves the stage\n   * @param e - konva mouse event\n   */\n  const handleMouseLeave = (e: any) => {\n    if (isDrawing.current) {\n      finishLine(e);\n\n      window.document.addEventListener('mouseup', handleOffsetMouseUp);\n      window.document.addEventListener('touchEnd', handleOffsetMouseUp);\n      window.document.addEventListener('mousedown', handleOffsetMouseDown);\n      window.document.addEventListener('touchStart', handleOffsetMouseDown);\n    }\n  };\n\n  /**\n   * Handles when mouse reenters the state\n   * @param e\n   */\n  const handleMouseEnter = (e: any) => {\n    if (isDrawing.current) {\n      startLine(e);\n    }\n    window.document.removeEventListener('mouseup', handleOffsetMouseUp);\n    window.document.removeEventListener('touchEnd', handleOffsetMouseUp);\n    window.document.removeEventListener('mousedown', handleOffsetMouseDown);\n    window.document.removeEventListener('touchStart', handleOffsetMouseDown);\n  };\n\n  const onClear = () => setLines([]);\n\n  const onUndo = () => {\n    const linesCopy = [...lines];\n    const drawingHistoryCopy = [...drawingHistory];\n    const lastLine: CanvasLine | undefined = linesCopy.pop();\n    if (lastLine) {\n      drawingHistoryCopy.push(lastLine);\n      setLines(linesCopy);\n      setDrawingHistory(drawingHistoryCopy);\n    }\n  };\n\n  const onRedo = () => {\n    const linesCopy = [...lines];\n    const drawingHistoryCopy = [...drawingHistory];\n    const lastUndoLine = drawingHistoryCopy.pop();\n    if (lastUndoLine) {\n      linesCopy.push(lastUndoLine);\n      setLines(linesCopy);\n      setDrawingHistory(drawingHistoryCopy);\n    }\n  };\n\n  const strokeWidthBySize =\n    {\n      small: 3,\n      medium: 5,\n      large: 7,\n    }?.[strokeWidth] ?? 5;\n\n  return (\n    <Space direction=\"vertical\" align=\"center\">\n      <Stage\n        width={width}\n        height={height || width}\n        onMouseDown={handleMouseDown}\n        onMousemove={handleMouseMove}\n        onMouseup={handleMouseUp}\n        onTouchStart={handleMouseDown}\n        onTouchMove={handleMouseMove}\n        onTouchEnd={handleMouseUp}\n        onMouseLeave={handleMouseLeave}\n        onMouseEnter={handleMouseEnter}\n        className={clsx('drawing-canvas', className)}\n        style={{ width: `${width}px`, height: `${height || width}px` }}\n        willReadFrequently={willReadFrequently}\n        id=\"drawing-canvas\"\n      >\n        <Layer>\n          {lines.map((line, i) => (\n            <Line\n              key={i}\n              points={line}\n              stroke=\"#222222\"\n              strokeWidth={strokeWidthBySize}\n              tension={0.5}\n              lineCap=\"round\"\n              globalCompositeOperation=\"source-over\"\n            />\n          ))}\n        </Layer>\n      </Stage>\n      {showControls && (\n        <Space>\n          <Button onClick={onUndo} disabled={lines.length === 0}>\n            <UndoOutlined />\n            <Translate pt=\"Desfazer\" en=\"Undo\" />\n          </Button>\n          <Button onClick={onRedo} disabled={drawingHistory.length === 0}>\n            <UndoOutlined />\n            <Translate pt=\"Refazer\" en=\"Redo\" />\n          </Button>\n          <Button onClick={onClear} disabled={lines.length === 0}>\n            <DeleteOutlined />\n            <Translate pt=\"Apagar\" en=\"Clear\" />\n          </Button>\n        </Space>\n      )}\n    </Space>\n  );\n};\n","import { useMemo, useState } from 'react';\nimport { doc, getDoc, setDoc } from 'firebase/firestore';\nimport { firestore } from 'services/firebase';\nimport {\n  QueryKey,\n  useMutation,\n  useQuery,\n  useQueryClient,\n  useQueries,\n  UseQueryOptions,\n} from '@tanstack/react-query';\nimport { App } from 'antd';\nimport { DailyEntry, DailyHistory, DataDrawing, DataSuffixCounts } from './types';\nimport { sampleSize, shuffle } from 'lodash';\nimport { getNextDay } from './utils';\n\nfunction getDocQueryFunction<T>(path: string, docId: string) {\n  return async () => {\n    console.log(`${path}/${docId}`);\n    const docRef = doc(firestore, `${path}/${docId}`);\n    const querySnapshot = await getDoc(docRef);\n    return (querySnapshot.data() ?? {}) as T;\n  };\n}\n\nexport function useLoadDailySetup() {\n  const { notification } = App.useApp();\n\n  // Step 1: Load suffix counts\n  const suffixCountsQuery = useQuery<any, Error, DataSuffixCounts, QueryKey>({\n    queryKey: ['data', 'suffixCounts'],\n    queryFn: getDocQueryFunction<DataSuffixCounts>('data', 'suffixCounts'),\n    enabled: true,\n    onSuccess: () => {\n      notification.info({\n        message: 'Data Suffix Counts loaded',\n        placement: 'bottomLeft',\n      });\n    },\n    onError: () => {\n      notification.error({\n        message: 'Error loading suffix counts',\n        placement: 'bottomLeft',\n      });\n    },\n  });\n\n  console.log(suffixCountsQuery.data);\n\n  // Step 2: Load drawings\n  const drawingsQuery = useLoadDrawings(\n    Boolean(suffixCountsQuery.data?.drawingsPT),\n    suffixCountsQuery.data?.drawingsPT ?? 0\n  );\n  const areDrawingsLoading = drawingsQuery.some((q) => q.isLoading);\n\n  console.log(drawingsQuery?.[0]?.data);\n\n  // Step 3: Load daily history\n  const historyQuery = useQuery<any, Error, DailyHistory, QueryKey>({\n    queryKey: ['daily', 'history'],\n    queryFn: getDocQueryFunction<DataSuffixCounts>('daily', 'history'),\n    enabled: true,\n    onSuccess: () => {\n      notification.info({\n        message: 'Data Daily History loaded',\n        placement: 'bottomLeft',\n      });\n    },\n    onError: () => {\n      notification.error({\n        message: 'Error loading daily history',\n        placement: 'bottomLeft',\n      });\n    },\n  });\n\n  const usedCards = useMemo(() => historyQuery.data?.used ?? [], [historyQuery.data?.used]);\n  const latestDate = historyQuery.data?.latestDate ?? '2023-10-31';\n  console.log({ usedCards, latestDate });\n\n  // Step 4: Parse entries\n  const entries = useMemo(() => {\n    const drawings = (drawingsQuery ?? []).reduce((acc: Record<CardId, DailyEntry>, drawingEntry) => {\n      const drawingsLibrary = (drawingEntry.data ?? {}) as Record<string, DataDrawing>;\n      Object.entries(drawingsLibrary).forEach(([key, dataDrawing]) => {\n        if (dataDrawing.drawing.trim().length < 10) {\n          console.log('Empty drawing', dataDrawing.cardId);\n          return acc;\n        }\n        if (acc[dataDrawing.cardId] === undefined) {\n          acc[dataDrawing.cardId] = {\n            id: dataDrawing.cardId,\n            type: 'arte-ruim',\n            language: 'pt',\n            cardId: dataDrawing.cardId,\n            text: dataDrawing.text,\n            drawings: [dataDrawing.drawing],\n            number: 0,\n            dataIds: [key],\n          };\n        } else {\n          acc[dataDrawing.cardId].drawings.push(dataDrawing.drawing);\n          acc[dataDrawing.cardId].dataIds.push(key);\n        }\n      });\n\n      return acc;\n    }, {});\n\n    console.log({ totalCardCount: Object.keys(drawings).length });\n\n    const atLeastTwoDrawingsList = Object.values(drawings).filter(\n      (e) => e.drawings.length > 1 && e.cardId && !e.cardId?.includes('--')\n    );\n\n    console.log({ shortlistCardCount: atLeastTwoDrawingsList.length });\n\n    const shortList = Object.values(atLeastTwoDrawingsList).filter((e) => !usedCards.includes(e.cardId));\n\n    const shuffledShortList = sampleSize(shuffle(shortList), 45);\n\n    let lastDate = latestDate;\n\n    return shuffledShortList.map((e, index) => {\n      const id = getNextDay(lastDate);\n\n      lastDate = id;\n      return {\n        ...e,\n        id,\n        number: index + 1,\n      };\n    });\n  }, [drawingsQuery, usedCards, latestDate]);\n\n  const round5sample = useMemo(() => {\n    const drawings = (drawingsQuery ?? []).reduce((acc: Record<CardId, DailyEntry>, drawingEntry) => {\n      const drawingsLibrary = (drawingEntry.data ?? {}) as Record<string, DataDrawing>;\n      Object.entries(drawingsLibrary).forEach(([key, dataDrawing]) => {\n        if (dataDrawing.drawing.trim().length < 10) {\n          console.log('Empty drawing', dataDrawing.cardId);\n          return acc;\n        }\n        if (acc[dataDrawing.cardId] === undefined) {\n          acc[dataDrawing.cardId] = {\n            id: dataDrawing.cardId,\n            type: 'arte-ruim',\n            language: 'pt',\n            cardId: dataDrawing.cardId,\n            text: dataDrawing.text,\n            drawings: [dataDrawing.drawing],\n            number: 0,\n            dataIds: [key],\n          };\n        } else {\n          acc[dataDrawing.cardId].drawings.push(dataDrawing.drawing);\n          acc[dataDrawing.cardId].dataIds.push(key);\n        }\n      });\n\n      return acc;\n    }, {});\n\n    return Object.values(drawings).filter((e) => e.cardId?.includes('--'));\n  }, [drawingsQuery]);\n\n  return {\n    isLoading: suffixCountsQuery.isLoading || areDrawingsLoading || historyQuery.isLoading,\n    entries,\n    latestDate: historyQuery.data?.latestDate,\n    round5sample,\n  };\n}\n\nfunction useLoadDrawings(enabled: boolean, libraryCount: number) {\n  const { notification } = App.useApp();\n\n  const queries: UseQueryOptions[] = useMemo(() => {\n    return new Array(libraryCount).fill(0).map((_, index) => {\n      return {\n        queryKey: ['data', `drawingsPT${index + 1}`],\n        queryFn: getDocQueryFunction('data', `drawingsPT${index + 1}`),\n        enabled,\n        onSuccess: () => {\n          notification.info({\n            message: `Data Drawings PT${index + 1} loaded`,\n            placement: 'bottomLeft',\n          });\n        },\n      };\n    });\n  }, [libraryCount]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return useQueries({ queries });\n}\n\nexport function useSaveDailySetup() {\n  const { notification } = App.useApp();\n  const queryClient = useQueryClient();\n\n  const [isDirty, setIsDirty] = useState(false);\n\n  const query = useMutation<any, Error, DailyEntry[], QueryKey>(\n    async (data) => {\n      const saves = data.map((entry) => {\n        const docRef = doc(firestore, `daily/${entry.id}`);\n        return setDoc(docRef, entry);\n      });\n\n      const docRec = doc(firestore, `daily/history`);\n      const history: DailyHistory = {\n        latestDate: data[data.length - 1].id,\n        used: data.map((e) => e.cardId),\n      };\n      setDoc(docRec, history);\n\n      return Promise.all(saves);\n    },\n    {\n      onSuccess: () => {\n        notification.info({\n          message: 'Data saved',\n          placement: 'bottomLeft',\n        });\n        queryClient.invalidateQueries(['daily', 'history']);\n        setIsDirty(false);\n      },\n      onError: () => {\n        notification.error({\n          message: 'Error saving data',\n          placement: 'bottomLeft',\n        });\n      },\n    }\n  );\n\n  return {\n    isDirty,\n    setIsDirty,\n    save: query.mutateAsync,\n    isLoading: query.isLoading,\n  };\n}\n","import moment from 'moment';\n\nexport function getNextDay(dateString: string): string {\n  const inputDate = moment(dateString, 'YYYY-MM-DD');\n  const nextDate = inputDate.add(1, 'days');\n\n  return nextDate.format('YYYY-MM-DD');\n}\n","import { useTitle } from 'react-use';\n// Ant Design Resources\nimport { Layout, TableColumnsType, Table, Button } from 'antd';\n// Components\n\nimport { DevHeader } from '../DevHeader';\nimport { useLoadDailySetup, useSaveDailySetup } from './hooks';\nimport { CanvasSVG } from 'components/canvas';\nimport { DailyEntry } from './types';\n\nfunction DailySetupPage() {\n  useTitle('Daily Setup | Dev | Tarde Divertida');\n\n  return (\n    <Layout className=\"dev-layout\">\n      <DevHeader title=\"Daily Setup\" />\n      <Layout.Content className=\"dev-content\">\n        <ul>\n          <li>Get history/useCards and latestDate</li>\n          <li>Get data/suffixCounts</li>\n          <li>Load all /data/drawingsPT</li>\n          <li>Filter cards with more than 2 entries</li>\n          <li>Filter cards that were already used</li>\n          <li>Shuffle and build daily entries</li>\n        </ul>\n        <DataPopulation />\n      </Layout.Content>\n    </Layout>\n  );\n}\n\nfunction DataPopulation() {\n  const dataLoad = useLoadDailySetup();\n\n  const columns: TableColumnsType<DailyEntry> = [\n    {\n      title: 'Id',\n      dataIndex: 'id',\n      key: 'id',\n    },\n    {\n      title: 'CardId',\n      dataIndex: 'cardId',\n      key: 'cardId',\n    },\n    {\n      title: 'Text',\n      dataIndex: 'text',\n      key: 'text',\n      render: (text) => (\n        <div>\n          {text\n            .split('')\n            .map((l: string, i: number) => (i < 2 || l === ' ' ? l : '⏹'))\n            .join('')}\n        </div>\n      ),\n    },\n    {\n      title: 'Count',\n      dataIndex: 'drawings',\n      key: 'count',\n      render: (drawings) => <div>{drawings.length}</div>,\n    },\n    {\n      title: 'Drawings',\n      dataIndex: 'drawings',\n      key: 'drawings',\n      render: (drawings) => (\n        <div>\n          {drawings.map((d: string) => (\n            <CanvasSVG key={d} drawing={d} width={100} height={100} className=\"border round-corners margin\" />\n          ))}\n        </div>\n      ),\n    },\n  ];\n\n  const { save, isLoading: isMutating } = useSaveDailySetup();\n\n  return (\n    <div>\n      {dataLoad.isLoading && <div>Loading...</div>}\n      <h1>Total: {dataLoad.entries.length}</h1>\n      <Table columns={columns} dataSource={dataLoad.entries ?? []} />\n      <Button\n        onClick={() => save(dataLoad.entries)}\n        loading={isMutating}\n        disabled={(dataLoad.entries ?? []).length === 0}\n      >\n        Save\n      </Button>\n    </div>\n  );\n}\n\nexport default DailySetupPage;\n","import { Segmented } from 'antd';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nexport function DevMenu() {\n  const { pathname } = useLocation();\n  const navigate = useNavigate();\n\n  const options = [\n    { label: 'Home', value: '/', disabled: pathname === '/' },\n    { label: 'Hub', value: '/hub', disabled: pathname === '/hub' },\n    { label: 'Icons', value: '/dev/icons', disabled: pathname === '/dev/icons' },\n    { label: 'Colors', value: '/dev/colors', disabled: pathname === '/dev/colors' },\n    { label: 'Sprites', value: '/dev/sprites', disabled: pathname === '/dev/sprites' },\n    { label: 'Resources', value: '/dev/resources', disabled: pathname === '/dev/resources' },\n    { label: 'Playground', value: '/dev/playground', disabled: pathname === '/dev/playground' },\n    { label: 'Daily Setup', value: '/dev/dailysetup', disabled: pathname === '/dev/dailysetup' },\n    { label: 'Showcase', value: '/showcase', disabled: pathname === '/showcase' },\n  ];\n\n  const onNavigate = (path: any) => {\n    navigate(path);\n  };\n\n  return <Segmented options={options} defaultValue={pathname} onChange={onNavigate} />;\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { Space } from 'antd';\n// Components\nimport { DevMenu } from './DevMenu';\n\ntype DevHeaderProps = {\n  title: ReactNode;\n  subTitle?: ReactNode;\n  extra?: ReactNode;\n};\n\nexport function DevHeader({ title, subTitle, extra }: DevHeaderProps) {\n  return (\n    <header className=\"dev-header\">\n      <div className=\"dev-header__heading\">\n        <div className=\"dev-header__left\">\n          <span className=\"dev-header__title\">{title} </span>\n          <span className=\"dev-header__subtitle\">{subTitle}</span>\n        </div>\n        <div className=\"dev-header__extra\">\n          <Space className=\"dev-header__extra-space\" wrap>\n            {extra}\n          </Space>\n          <DevMenu />\n        </div>\n      </div>\n    </header>\n  );\n}\n"],"names":["CanvasResizer","useGlobalState","canvasSize","setCanvasSize","type","position","icon","DragOutlined","label","labelText","content","className","value","min","max","step","onChange","pt","en","CanvasSVG","drawing","width","height","strokeWidth","viewBox","konvaLines","JSON","parse","paths","map","lineArr","path","x","y","length","strokeWidthBySize","small","medium","large","xmlns","overflow","style","index","d","fill","stroke","strokeLinecap","strokeLinejoin","strokeMiterlimit","DrawingCanvas","lines","setLines","showControls","willReadFrequently","useState","drawingHistory","setDrawingHistory","isDrawing","useRef","startDrawing","current","stopDrawing","startLine","e","pos","target","getStage","getPointerPosition","Math","round","finishLine","point","lastLineEntry","concat","splice","handleMouseDown","handleMouseMove","lastLine","handleMouseUp","handleOffsetMouseUp","handleOffsetMouseDown","direction","align","onMouseDown","onMousemove","onMouseup","onTouchStart","onTouchMove","onTouchEnd","onMouseLeave","window","document","addEventListener","onMouseEnter","removeEventListener","clsx","id","line","i","points","tension","lineCap","globalCompositeOperation","onClick","linesCopy","drawingHistoryCopy","pop","push","disabled","UndoOutlined","lastUndoLine","DeleteOutlined","getDocQueryFunction","docId","console","log","docRef","doc","firestore","getDoc","querySnapshot","data","useLoadDailySetup","notification","App","suffixCountsQuery","useQuery","queryKey","queryFn","enabled","onSuccess","info","message","placement","onError","error","drawingsQuery","libraryCount","queries","useMemo","Array","_","useQueries","useLoadDrawings","Boolean","drawingsPT","areDrawingsLoading","some","q","isLoading","historyQuery","usedCards","used","latestDate","entries","drawings","reduce","acc","drawingEntry","drawingsLibrary","Object","forEach","key","dataDrawing","trim","cardId","undefined","language","text","number","dataIds","totalCardCount","keys","atLeastTwoDrawingsList","values","filter","includes","shortlistCardCount","shortList","shuffledShortList","sampleSize","shuffle","lastDate","dateString","moment","add","format","round5sample","DataPopulation","dataLoad","columns","title","dataIndex","render","split","l","join","queryClient","useQueryClient","isDirty","setIsDirty","query","useMutation","saves","entry","setDoc","docRec","history","Promise","all","invalidateQueries","save","mutateAsync","useSaveDailySetup","isMutating","dataSource","loading","useTitle","DevHeader","DevMenu","pathname","useLocation","navigate","useNavigate","options","defaultValue","subTitle","extra","wrap"],"sourceRoot":""}