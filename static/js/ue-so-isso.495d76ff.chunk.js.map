{"version":3,"file":"static/js/ue-so-isso.495d76ff.chunk.js","mappings":"sXAeaA,EAAO,SAAC,GAUH,IAThBC,EASe,EATfA,SASe,IARfC,OAAAA,OAQe,MARN,QAQM,EAPfC,EAOe,EAPfA,OAOe,IANfC,MAAAA,OAMe,MANP,OAMO,MALfC,KAAAA,OAKe,MALR,SAKQ,MAJfC,YAAAA,OAIe,aAHfC,UAAAA,OAGe,MAHH,GAGG,MAFfC,gBAAAA,OAEe,MAFG,GAEH,MADfC,gBAAAA,OACe,MADG,GACH,EACTC,EAAY,OAEZC,EAAUL,GACZM,EAAAA,EAAAA,IACsB,kBAAbX,EACHA,EAAS,GAAGY,cACD,UAAXX,EACAA,EAAO,GAAGW,cACV,KAENT,EAEJ,OACE,iBAAKG,WAAWO,EAAAA,EAAAA,GAAKJ,EAAD,UAAeA,EAAf,aAA6BL,GAAQE,GAAzD,WACE,iBACEA,WAAWO,EAAAA,EAAAA,GAAK,GAAD,OAAIJ,EAAJ,wCAA8CC,GAAWH,GACxEO,MAAOX,EAAMY,WAAW,KAAO,CAAEC,gBAAiBb,GAAU,GAF9D,SAIGF,KAEH,iBAAMK,UAAS,UAAKG,EAAL,UAAf,SAAwCT,IACvCE,IAAU,iBAAMI,WAAWO,EAAAA,EAAAA,GAAK,GAAD,OAAIJ,EAAJ,YAAyBD,GAA9C,SAAiEN,Q,kDCjC3E,SAASe,EAAT,GAAsF,IAA9DjB,EAA6D,EAA7DA,SAA6D,IAAnDkB,SAAAA,OAAmD,MAAxC,GAAwC,MAApCC,KAAAA,OAAoC,MAA7B,OAA6B,EAC1F,GAAoCC,EAAAA,EAAAA,WAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACQC,GAAcC,EAAAA,EAAAA,MAAdD,UAER,OACE,iCACE,gBAAKjB,UAAU,qCACf,iBACEA,WAAWO,EAAAA,EAAAA,GAAK,gBAAiBQ,GAAc,2BAC/CI,YAAa,kBAAMH,GAAc,IACjCI,aAAc,kBAAMJ,GAAc,IAHpC,WAKE,kBAAMhB,UAAU,uBAAhB,WACE,SAAC,KAAD,CACEa,KAAe,SAATA,EAAkB,gBAAkB,aAC1Cf,KAAMiB,EAAa,GAAK,GACxBf,UAAU,sBACVqB,IAAKJ,EAAU,mBAAiB,oBAElC,SAAC,IAAD,CAAWK,GAAG,+BAA+BC,GAAG,qBAC/CX,KAEFlB,Q,kCCxBF,SAAS8B,EAAT,GAA4D,IAAjCC,EAAgC,EAAhCA,OAChC,GAAoCC,EAAAA,EAAAA,MAA5BC,EAAR,EAAQA,SAER,OAFA,EAAkBC,eAGhB,SAAC,IAAD,CACEC,UAAU,MACVC,OACE,SAAC,IAAD,CACER,GAAG,2EACHC,GAAG,4DALT,UASE,UAAC,IAAD,CAAQQ,OAAK,EAACC,QAAS,kBAAML,EAASF,IAAS3B,KAAK,QAAQE,UAAU,oBAAtE,WACE,SAACiC,EAAA,EAAD,IADF,KAC2B,SAAC,IAAD,CAAWX,GAAG,QAAQC,GAAG,eAItD,wB,4DCnBG,SAASW,EAAT,GAK4B,IAJjCT,EAIgC,EAJhCA,OACAzB,EAGgC,EAHhCA,UACAN,EAEgC,EAFhCA,SACGyC,GAC6B,YAChC,OACE,iCAAKnC,WAAWO,EAAAA,EAAAA,GAAK,8BAA+BP,IAAgBmC,GAApE,cACGzC,GACD,SAAC8B,EAAD,CAAiBC,OAAQA,Q,iCCHlBW,EAAY,SAAC,GAMH,IALrBC,EAKoB,EALpBA,QAKoB,IAJpBvC,KAAAA,OAIoB,MAJb,SAIa,MAHpBwC,UAAAA,OAGoB,MAHR,IAGQ,MAFpBtC,UAAAA,OAEoB,MAFR,GAEQ,MADpBuC,QAAAA,OACoB,SACZC,GAAoBd,EAAAA,EAAAA,MAApBc,gBAEFrC,EAAY,aAEZsC,EAAY,sBAAkBJ,EAAQA,EAAQK,OAAS,IAEvDC,EAAWN,EAAQO,QAAQ,KAAM,KAEjCC,EAAYL,EAAgBH,GAElC,OACE,gBAAKrC,WAAWO,EAAAA,EAAAA,GAAKJ,EAAD,UAAeA,EAAf,aAA6BL,GAAQ+C,GAAS,UAAO1C,EAAP,UAA0BH,GAA5F,UACE,SAAC,IAAD,CACE8C,MAAOR,EACPS,IAAG,UAAKC,0CAAL,OAA2CL,EAA3C,QACHM,aAAa,SAAC,IAAD,CAAOV,SAAS,EAAOQ,IAAKE,EAAaH,MAAOR,IAC7DY,SAAQ,UAAKC,EAAAA,GAAAA,OAAL,OAAwBV,EAAxB,QACRF,WACEA,GAAYM,IACR,CACEO,cAAc,GAAD,OAAKjD,EAAL,wB,SCvBtB,SAASkD,EAAT,GAUiB,IAAD,IATrBC,KAAAA,OASqB,MATd,GASc,EARrBC,EAQqB,EARrBA,aACAC,EAOqB,EAPrBA,kBAOqB,IANrBxD,UAAAA,OAMqB,MANT,GAMS,MALrByD,kBAAAA,OAKqB,MALD,GAKC,MAJrBC,UAAAA,OAIqB,MAJT,EAIS,EAHrBC,EAGqB,EAHrBA,SAGqB,IAFrBC,YAAAA,OAEqB,MAFP,GAEO,MADrBC,qBAAAA,OACqB,SACb5C,GAAcC,EAAAA,EAAAA,MAAdD,UAEFqB,GAAYwB,EAAAA,EAAAA,IAAaJ,EAAW,GAAIE,GAE9C,OACE,SAAC,iBAAD,WACE,gBAAK5D,WAAWO,EAAAA,EAAAA,GAAK,kBAAmBP,GAAxC,SACGsD,EAAKS,KAAI,SAACtC,GACT,OACE,iBAA4BzB,UAAU,kCAAtC,UACGgE,QAAQT,KACP,SAAC,IAAD,CACEU,MAAM,SAACC,EAAA,EAAD,IACNlE,UAAWyD,EACXzB,QAAS,kBAAMuB,EAAc9B,IAC7B3B,KAAK,QACLqE,SAAUN,EALZ,SAOG5C,EAAU,aAAc,SAAUuC,MAGvC,SAACpB,EAAD,CAAWC,QAASZ,EAAQa,UAAWqB,GAAYrB,KACnD,SAACd,EAAD,CAAiBC,OAAQA,MAb3B,eAAkBA,WC3BvB,IAAM2C,EAAgB,SAAC,GAKH,IAAD,IAJxBtE,KAAAA,OAIwB,MAJjB,SAIiB,MAHxBwC,UAAAA,OAGwB,MAHZ,IAGY,MAFxBtC,UAAAA,OAEwB,MAFZ,GAEY,EADxBqE,EACwB,EADxBA,eAEMlE,EAAY,kBAEZ0C,GAAYL,GADUd,EAAAA,EAAAA,MAApBc,iBAC0B6B,GAC5B1B,GAAW,OAAC0B,QAAD,IAACA,EAAAA,EAAkB,IAAIzB,QAAQ,KAAM,KAEtD,OACE,gBAAK5C,WAAWO,EAAAA,EAAAA,GAAKJ,EAAD,UAAeA,EAAf,aAA6BL,GAAQE,GAAzD,UACE,SAAC,IAAD,CACE8C,MAAOR,EACPS,IAAKE,EACLV,UACEyB,QAAQK,MACHxB,GACC,CACEO,cAAe,2BACfL,IAAI,GAAD,OAAKC,0CAAL,OAA2CL,EAA3C,eC7Bd,SAAS2B,EAAT,GAAoE,IAApChB,EAAmC,EAAnCA,KACrC,OAAKA,GAEH,gBAAKtD,UAAU,0BAAf,SACGsD,EAAKS,KAAI,SAACtC,GAAD,OACR,SAACW,EAAD,CAAWC,QAASZ,EAAQa,UAAW,EAA8BC,SAAS,GAA9E,mBAA2Dd,UAJ/C,oB,cCQb,SAAS8C,EAAT,GAMyB,IAL9BvC,EAK6B,EAL7BA,QACAP,EAI6B,EAJ7BA,OACA+C,EAG6B,EAH7BA,YACAC,EAE6B,EAF7BA,cAE6B,IAD7BC,WAAAA,OAC6B,SAC7B,OACE,UAAC,IAAD,CACEC,MAAM,QACN7E,KAAK,QACLiC,OAAQ2C,EACR1E,UAAU,2BACVgC,QAAS,kBAAMA,EAAQP,IALzB,WAOE,SAACmD,EAAA,EAAD,IACCF,GACC,SAAC,IAAD,CAAWpD,GAAG,YAAYC,GAAG,WAAWsD,OAAQJ,KAEhD,SAAC,IAAD,CAAWnD,GAAG,aAAaC,GAAG,SAASsD,OAAQL,KAEjD,SAACI,EAAA,EAAD,S,kJCpBC,SAASE,EAAT,GAS0B,IAR/BC,EAQ8B,EAR9BA,SAQ8B,IAP9BC,cAAAA,OAO8B,MAPd,EAOc,MAN9BC,YAAAA,OAM8B,SAL9BC,EAK8B,EAL9BA,SACAC,EAI8B,EAJ9BA,eAI8B,IAH9BC,oBAAAA,OAG8B,MAHR,GAGQ,MAF9BC,kBAAAA,OAE8B,MAFV,GAEU,EAD9BC,EAC8B,EAD9BA,kBAEA,GAA4BxE,EAAAA,EAAAA,UAAS,IAArC,eAAOyE,EAAP,KAAeC,EAAf,KACQC,GAAcC,EAAAA,EAAAA,MAAdD,UAEFE,EAAgB,SAACC,GACrB,MAA2BA,EAAEC,OAArBC,EAAR,EAAQA,GAAR,IAAYC,MAAAA,OAAZ,MAAoB,GAApB,EACA,GAAID,EAAI,CACN,IAAME,EAAWF,EAAGG,MAAMC,EAAAA,IAAW,GAC/BC,EAAQC,OAAOJ,GACA,kBAAVG,EACTX,GAAU,SAACa,GACT,IAAMC,GAAQ,UAAQD,GAEtB,OADAC,EAASH,GAASJ,EAAMzF,cAAciG,OAC/BD,KAGTE,QAAQC,MAAR,gBAAuBT,EAAvB,gBAAuCF,EAAvC,uBAKAY,EAAcC,OAAOpB,OAAOA,GAG5BqB,EAAe,WACf3B,EACED,IAAkB0B,EAAYhE,QAChCqC,GAAS,UAAGG,EAAWwB,IAGzB3B,EAAS2B,IAIPG,EAAsB1B,EAE5B,OACE,iBAAKnF,UAAU,aAAf,WACE,SAAC,IAAD,CAAO8G,MAAM,SAAS9G,UAAU,qCAAqC+G,MAAI,EAACC,UAAU,aAApF,SACGC,MAAMjC,GACJkC,KAAK,GACLnD,KAAI,SAACoD,EAAOhB,GACX,IAAML,EAAE,eAAWI,EAAAA,IAAX,OAAuBiB,EAAQhB,GACvC,OACE,SAACU,GAAD,QAEEf,GAAIA,EACJH,cAAeA,EACfiB,aAAcA,EACdzC,SAAUsB,GACNL,GALCU,SAWf,SAAC,IAAD,CAAOgB,MAAM,SAAS9G,UAAU,qCAAhC,UACE,SAAC,KAAD,gBACEa,KAAK,UACLmB,QAAS,kBAAM+C,GAAS,UAAGG,EAAWwB,KACtCvC,YAAUsB,IAAaR,IAAcyB,EAAYhE,OAASsC,EAC1DlF,KAAK,SACDuF,GALN,aAOGC,Y,8FC3EE8B,EAAiB,SAACtF,EAAeuF,EAAqBvB,GAA+B,IAAnBwB,EAAkB,uDAAP,GAClFC,EAAG,UAAMzB,EAAN,cAAchE,GAEvB,MAAO,CACL0F,SACE,4BACE,wBAAK1F,KACL,uBAAIuF,KACJ,wBACE,4BACE,SAAC,IAAD,CACE/F,GAAG,oDACHC,GAAG,wCAMbkG,IAAKC,OAAOC,WAAa,EAAI,IAC7BL,SAAAA,EACAC,IAAAA,EACAtD,MAAM,SAAC,wBAAD,CAA2BzD,MAAO,CAAEsC,MAAO,UACjDd,QAAS,kBAAM4F,EAAAA,GAAAA,QAAgBL,O,oFC+BnC,IACA,EAAe,IAA0B,mECnBzC,IACA,EAAe,IAA0B,mE,iDCxBlC,SAASM,EAAT,GASqB,IAAD,IARzBC,EAQyB,EARzBA,MACAC,EAOyB,EAPzBA,cACAC,EAMyB,EANzBA,WAMyB,IALzBC,KAAAA,OAKyB,MALlB,EAKkB,EAJzBjI,EAIyB,EAJzBA,UACAN,EAGyB,EAHzBA,SAGyB,IAFzBwI,YAAAA,OAEyB,aADzBC,YAAAA,OACyB,MADX,SACW,EACjBlH,GAAcC,EAAAA,EAAAA,MAAdD,UAER,OACE,gBAAKjB,WAAWO,EAAAA,EAAAA,GAAK,qBAAsBP,GAA3C,UACE,iBAAKA,UAAU,2BAAf,WACE,gBAAKA,UAAU,4BAAf,UACE,gBAAK+C,IAAK9B,EAAUmH,EAAcC,GAAehH,IAAKJ,EAAU,SAAU,cAE5E,iBAAKjB,WAAWO,EAAAA,EAAAA,GAAK,qCAAqC+H,EAAAA,EAAAA,IAAkB,WAA5E,WACE,gBAAKtI,WAAWO,EAAAA,EAAAA,GAAK,6BAAD,wBAAgD4H,OACpE,gBAAKnI,WAAWO,EAAAA,EAAAA,GAAK,+BAAD,wBAAkD4H,OACtE,gBAAKnI,UAAU,6BAAf,oCAA6C8H,QAA7C,IAA6CA,OAA7C,EAA6CA,EAAOS,eAApD,QAA+DT,SAA/D,QAAwE,OAGzEpI,EAEAsE,QAAQ+D,KAAmB/D,QAAQiE,KAClC,SAAC,IAAD,CAAQpH,KAAK,UAAUmB,QAAS+F,EAAe/H,UAAU,gCAAzD,SACGgI,IAIJhE,QAAQ+D,IAAkB/D,QAAQiE,KACjC,SAAC,IAAD,CACEpH,KAAK,UACLmB,QAAS+F,EACTS,SAAUT,EACVT,SAAUW,EACVQ,WAAS,EACTtE,SAAU+D,EANZ,UAQE,SAAC,IAAD,CAAW5G,GAAG,aAAaC,GAAG,WAAWsD,OAAQmD,a,4JCtDtD,SAASU,EAAT,GAQY,IAPjBC,EAOgB,EAPhBA,MAEAC,GAKgB,EANhBC,cAMgB,EALhBD,OAEA7C,GAGgB,EAJhBlF,KAIgB,EAHhBkF,OAEG5D,GACa,EAFhB2G,QAEgB,aACVC,EAAa,IAAe,IAARhD,EAAe6C,EACzC,OACE,SAAC,KAAD,QACEI,QAASD,EACTJ,MAAOA,EACPM,UAAU,EACVzI,MAAO,CAAE0I,aAAc,QACvBpJ,KAAM6I,GAASA,EAAQ,GAAK,aAAUQ,GAClChH,M,2IC1BH,SAASiH,EAAT,GAAwC,IAAxB1J,EAAuB,EAAvBA,SACrB,OAAO,8BAAGA,ICAL,SAAS2J,EAAT,GAA+D,IAAD,IAA5CC,UAAAA,OAA4C,SAAzB5J,EAAyB,EAAzBA,SAC1C,OAAO4J,GAAY,8BAAG5J,KAAe,wBCDhC,SAAS6J,EAAT,GAAiE,IAAD,IAA9CC,YAAAA,OAA8C,SAAzB9J,EAAyB,EAAzBA,SAC5C,OAAO8J,GAAc,8BAAG9J,EAAS,MAAS,8BAAGA,EAAS,KCDjD,SAAS+J,EAAT,GAA2D,IAArCC,EAAoC,EAApCA,MAAOhK,EAA6B,EAA7BA,SAClC,GAAIgK,EAAMhH,OAAS,EACjB,MAAMiH,MAAM,0CAGd,OAAID,EAAM,IAAMhK,EAAS,GAChBA,EAAS,GAGdgK,EAAM,IAAMhK,EAAS,GAChBA,EAAS,GAGdgK,EAAM,IAAMhK,EAAS,GAChBA,EAAS,GAGdgK,EAAM,IAAMhK,EAAS,GAChBA,EAAS,GAGdgK,EAAM,IAAMhK,EAAS,GAChBA,EAAS,IAElB8G,QAAQoD,KAAK,4CACNlK,K,+OCdF,SAASmK,EAAT,GAAkG,IAArEC,EAAoE,EAApEA,QAASC,EAA2D,EAA3DA,oBAA2D,IAAtCC,MAAAA,OAAsC,MAA9B,GAA8B,EACtG,GAA0ClJ,EAAAA,EAAAA,UAAsB,IAAhE,eAAOmJ,EAAP,KAAsBC,EAAtB,KAEMC,EAAqBxD,OAAOyD,KAAKH,GACjCI,EAA4C,IAA9BF,EAAmBzH,OAmBvC,OACE,UAAC,IAAD,CAAM4H,WAAS,EAAf,WACE,SAAC,KAAD,CAAOC,OAAK,EAAZ,UACE,SAAC,IAAD,CACEjJ,IACE,qEACmC,SAAC,KAAD,CAAYkJ,OAAQV,OAGzDvI,IACE,6DAC2B,SAAC,KAAD,CAAYiJ,OAAQV,YAMrD,SAAC,KAAD,CAAaW,WAAS,EAAtB,UACE,SAAC,IAAD,CACEnJ,IACE,uIAIFC,IACE,wIAON,eAAIvB,UAAU,cAAd,SACGgK,EAAMjG,KAAI,SAAC2G,GACV,OACE,eAAI1K,UAAU,oBAAd,UACE,oBAAQA,UAAU,sBAAsBgC,QAAS,kBAhDvC2I,EAgD0DD,EAAK5E,QA/CnFoE,GAAiB,SAAC7D,GAChB,IAAMC,GAAQ,UAAQD,GAMtB,OALIC,EAASqE,UACJrE,EAASqE,GAEhBrE,EAASqE,IAAU,EAEdrE,KARU,IAACqE,GAgDV,WACE,iBAAM3K,UAAU,oBAAhB,SAAqC0K,EAAKE,QAC1C,iBAAM5K,UAAU,oBAAhB,SACGgE,QAAQiG,EAAcS,EAAK5E,OAAQ,SAAC+E,EAAA,EAAD,UAJHH,EAAK5E,UAYlD,SAAC,IAAD,CACE7B,MAAM,SAAC6G,EAAA,EAAD,IACNjK,KAAK,UACLmB,QAAS,kBAAM+H,EAAoB,CAAEgB,MAAOZ,KAC5ChG,SAAUkG,EACV7B,SArEuB,WAC3B,IAAMwC,EAAkBhB,EAAM,GAAGlE,GACjCiE,EAAoB,CAAEgB,MAAO,CAACC,MAoE1B1D,SAAU,GACVmB,UAAW4B,EAPb,UASE,SAAC,IAAD,CAAW/I,GAAG,eAAeC,GAAG,oB,cCrFjC,SAAS0J,EAAT,GAAuE,IAA5CC,EAA2C,EAA3CA,WAAYpD,EAA+B,EAA/BA,MACtCqD,EAAgBC,KAAKtD,MAAO,KAAOA,EAAMS,QAAU,GAAMT,EAAMc,OAErE,OACE,iBAAK5I,UAAU,4CAAf,WACE,SAAC,IAAD,CAAWsB,GAAG,aAAaC,GAAG,oBAC9B,mBACA,SAAC,IAAD,CACEyH,QAASmC,EACTE,QAAS,CAAErC,QAAO,OAAEkC,QAAF,IAAEA,EAAAA,EAAc,EAAGI,YAAa,WAClDxC,OAAO,SACPwC,YAAY,e,cCPb,SAASC,EAAT,GAAsF,IAAxDC,EAAuD,EAAvDA,QAASC,EAA8C,EAA9CA,kBAC5C,GAAgCvK,EAAAA,EAAAA,MAAxBwK,EAAR,EAAQA,SAAUzK,EAAlB,EAAkBA,UAEZ0K,EAAoB1K,EAAU,8BAA+B,uCAEnE,OACE,SAAC,IAAD,CAAMqJ,WAAS,EAAf,UACE,SAAC,KAAD,CACEkB,QAASA,EACT1J,MAAOb,EAAU,mCAA8B,sBAC/C2K,YAAW,UAAKD,EAAL,YAA0BF,EAAkBC,GAA5C,S,qCCAnB,SAASG,EAAT,GAA4F,IAA3D/B,EAA0D,EAA1DA,QAASoB,EAAiD,EAAjDA,WAAYpD,EAAqC,EAArCA,MACpD,OACE,UAAC,KAAD,CAAa2C,WAAS,EAAtB,WACE,SAAC,IAAD,CACEnJ,IACE,sDACoB,SAAC,KAAD,CAAYkJ,OAAQV,EAASgC,aAAW,IAD5D,mCAIFvK,IACE,oDACkB,SAAC,KAAD,CAAYiJ,OAAQV,EAASgC,aAAW,IAD1D,8BAKJ,mBACA,SAACb,EAAD,CAAiBC,WAAYA,EAAYpD,MAAOA,OAmGtD,MA9FA,YAAmE,IAAD,EAApCiE,EAAoC,EAApCA,MAAOP,EAA6B,EAA7BA,QAASQ,EAAoB,EAApBA,KACtCC,GAAcC,EAAAA,EAAAA,IAAeV,EAASO,GACpC9K,GAAcC,EAAAA,EAAAA,MAAdD,UACR,GAAoCkL,EAAAA,EAAAA,IAAoB,YAAaJ,EAAOP,GAA5E,eAAO1B,EAAP,KAAgBsC,EAAhB,KACA,GAAwCC,EAAAA,EAAAA,IAAQ,GAAxCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,aAAcC,EAA5B,EAA4BA,QAEtBzC,EChDD,SAAoCyC,GACzC,IAAQvL,GAAcC,EAAAA,EAAAA,MAAdD,UAEFwL,GAAUC,EAAAA,EAAAA,IAAW,CACzBC,YAAaC,EAAAA,GAAAA,aACbC,WAAY,eACZC,aAAc,kBAAMN,EAAQ,IAC5BO,QAAS,kBAAMP,EAAQ,IACvBQ,eAAgB/L,EAAU,8BAA+B,4BACzDgM,aAAchM,EACZ,mEACA,qDAIJ,OAAO,SAACiM,GACNT,GAAQ,QACNU,OAAQ,gBACLD,KD8BqBE,CAA2BZ,GAEvD,OACE,SAAC,KAAD,CACER,KAAMA,EACNqB,MAAK,OAAEtB,QAAF,IAAEA,OAAF,EAAEA,EAAOsB,MACdC,aAAcC,EAAAA,EAAAA,WAAAA,eACdvN,UAAU,yBAJZ,UAME,UAAC,IAAD,CAAcsM,KAAMA,EAAMkB,WAAY,EAAEvB,GAAcT,QAASA,EAA/D,WAEE,SAAC,IAAD,CAAmB1D,MAAOiE,EAAMjE,MAAOC,cAAe,kBAAMyE,EAAQ,IAAIvE,KAAM,EAAGE,YAAY,QAA7F,UACE,SAAC0D,EAAD,CAAuB/B,QAASA,EAASoB,WAAYa,EAAMb,WAAYpD,MAAOiE,EAAMjE,WAItF,SAAC,KAAD,CACEjH,KAAK,WACLiB,MAAOb,EAAU,mCAA8B,yBAC/CwM,QAASlB,EACTmB,aAAY,OAAE3B,QAAF,IAAEA,GAAF,UAAEA,EAAOjE,aAAT,aAAE,EAAcS,QAJ9B,SAMG6D,GACC,SAAC,KAAD,WACE,SAAC,IAAD,CACE9K,IACE,wFAEE,kBAFF,gBAMFC,IACE,sFAEE,kBAFF,uBASN,SAAC,KAAD,WACE,SAAC,IAAD,CACED,IACE,iFAEE,kBAFF,2CAIE,kBAJF,uDAOFC,IACE,0EAEE,kBAFF,uCAIE,kBAJF,0DAeV,UAAC,KAAD,CAAQiI,YAAa4C,EAArB,WACE,SAACb,EAAD,CACEC,QAASA,EACTC,kBAAmB,CACjBnK,GAAI,8BACJC,GAAI,2BAIR,SAACsI,EAAD,CACEG,MAAK,OAAE+B,QAAF,IAAEA,OAAF,EAAEA,EAAO/B,MACdD,oBAAqBA,EACrBD,QAASA,a,SEjIf6D,EAAc,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,SAAU,UAAW,WAAS,U,UCUpF,SAASC,EAAT,GAA4F,IAAjE9H,EAAgE,EAAhEA,GAAIH,EAA4D,EAA5DA,cAAeiB,EAA6C,EAA7CA,aAAcb,EAA+B,EAA/BA,MACzD9E,GAAcC,EAAAA,EAAAA,MAAdD,UACR,OACE,iBACE4M,MAAM,6BACNC,QAAQ,aACRC,SAAS,UACTjL,MAAM,MACN9C,UAAU,qBALZ,WAOE,iBAAMkH,KAAK,OAAO8G,EAAE,sCACpB,iBAAM9G,KAAK,UAAU8G,EAAE,uEACvB,iBAAM9G,KAAK,UAAU8G,EAAE,+BACvB,0BAAeC,EAAE,OAAOC,EAAE,OAAOpL,MAAM,MAAMqL,OAAO,MAApD,UACE,0BACE,SAAC,IAAD,CACElL,YAAahC,EAAU,oBAAqB,cAE5C6E,GAAIA,EACJC,MAAOA,EACPqI,SAAUzI,EACV3F,UAAU,4BACVqO,UAAU,EACVzH,aAAcA,EACd0H,aAAa,OAPRxI,QAWX,iBAAMyI,QAAQ,KAAKP,EAAE,kC,cCjCpB,SAASQ,IACd,OACE,SAAC,KAAD,CAAa/D,WAAS,EAAtB,UACE,SAAC,IAAD,CACEnJ,IACE,qFAEE,kBAFF,iFAIE,kBAJF,4FAME,kBANF,iFASFC,IACE,6EAEE,kBAFF,oFAIE,kBAJF,iKAOE,kBAPF,kFAgBH,SAASkN,IACd,OACE,SAAC,KAAD,WACE,SAAC,IAAD,CACEnN,IACE,sFAEE,kBAFF,0IAMFC,IACE,oFAEE,kBAFF,6DAWH,SAASmN,IACd,OACE,SAAC,KAAD,CAAajE,WAAS,EAAtB,UACE,SAAC,IAAD,CACEnJ,IACE,uIAEE,kBAFF,yFAGgF,KAC9E,2DAJF,0GAK+B,+EAL/B,OAQFC,IACE,qIAEE,kBAFF,kEAIE,kBAJF,cAKY,wDALZ,KAME,kBANF,8BAO4B,iDAC1B,kBARF,sCAgBH,SAASoN,EAAT,GAAwF,IAAxDC,EAAuD,EAAvDA,WACrC,OACE,SAAC,KAAD,CAAanE,WAAS,EAAtB,UACE,SAAC,IAAD,CACEnJ,IACE,iCACE,SAACuN,EAAA,EAAD,IADF,yCACgE,KAC9D,SAAC,KAAD,CAAYrE,OAAQoE,EAAY9C,aAAW,IAF7C,2FAIE,kBAJF,sEAME,kBANF,yEAUFvK,IACE,iCACE,SAACsN,EAAA,EAAD,IADF,KACgC,SAAC,KAAD,CAAYrE,OAAQoE,IADpD,4HAIE,kBAJF,0DAME,kBANF,iEAeH,SAASE,EAAT,GAA+E,IAAtDC,EAAqD,EAArDA,YAC9B,OACE,SAAC,KAAD,WACE,SAAC,IAAD,CACEzN,IACE,2CACWyN,EADX,aAEE,kBAFF,mEAIE,kBAJF,uEAQFxN,IACE,uDACuBwN,EADvB,KAEE,kBAFF,sDAIE,kBAJF,uE,uBC5HH,SAASC,EAAT,GAA4D,IAApCtE,EAAmC,EAAnCA,KAAM/K,EAA6B,EAA7BA,OAC3BsB,GAAcC,EAAAA,EAAAA,MAAdD,UAER,OACE,SAAC,KAAD,CAAMpB,MAAM,SAASF,OAAQsB,EAAU,yBAAuB,cAAetB,GAASG,KAAK,QAA3F,gBACG4K,QADH,IACGA,EAAAA,GAAQ,SAACuE,EAAA,EAAD,M,cCQR,SAASC,EAAT,GAMkB,IALvBpF,EAKsB,EALtBA,QACAqF,EAIsB,EAJtBA,kBACAC,EAGsB,EAHtBA,WACA5D,EAEsB,EAFtBA,QAEsB,IADtB6D,kBAAAA,OACsB,MADF,EACE,EAKtB,OAJAC,EAAAA,EAAAA,KAAQ,WACNH,EJ7B2B,SAACE,GAC9B,MAAO,CAAE1B,aAAa4B,EAAAA,EAAAA,YAAW5B,EAAa0B,II4B1BG,CAAgBH,MACjC,KAGD,UAAC,IAAD,CAAM/E,WAAS,EAAf,WACE,SAAC,KAAD,WACE,SAAC,IAAD,CACEhJ,IACE,0DACwB,SAAC,KAAD,CAAYkJ,OAAQV,OAG9CvI,IACE,qDACmB,SAAC,KAAD,CAAYiJ,OAAQV,YAM7C,SAAC0E,EAAD,KAEA,SAAC,EAAD,CAAM9D,KAAM0E,EAAWxE,OAEtByE,EAAoB,IACnB,SAAC,KAAD,CAAa5E,WAAS,EAAtB,UACE,SAAC,IAAD,CACEnJ,IACE,qGAA+D+N,EAA/D,mBAEF9N,IAAI,8EAA8C8N,EAA9C,iBAKV,SAAC,IAAD,CACEtK,SAAUoK,EACVhK,eAAgByI,EAChB1I,SAAS,cACTF,cAAeqK,EACf/J,mBACE,iCACE,SAAC,IAAD,CAAWhE,GAAG,cAAcC,GAAG,cAC9B8N,EAAoB,GAAK,OAG9BhK,kBAAmB,CACjBpB,MAAM,SAAC6G,EAAA,EAAD,IACNhL,KAAM,YAIV,SAAC,KAAD,CAAiB0L,QAASA,OCbhC,MAzDA,YAA6D,IAAD,EAApCO,EAAoC,EAApCA,MAAOP,EAA6B,EAA7BA,QAASQ,EAAoB,EAApBA,KAChCC,GAAcC,EAAAA,EAAAA,IAAeV,EAASO,GACpC9K,GAAcC,EAAAA,EAAAA,MAAdD,UACR,GAAwCoL,EAAAA,EAAAA,IAAQ,GAAxCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,aAAcC,EAA5B,EAA4BA,QAC5B,GAAoCL,EAAAA,EAAAA,IAAoB,YAAaJ,EAAOP,GAA5E,eAAO1B,EAAP,KAAgBsC,EAAhB,KAEM+C,ENKD,SAA0C3C,GAC/C,IAAQvL,GAAcC,EAAAA,EAAAA,MAAdD,UAEFwL,GAAUC,EAAAA,EAAAA,IAAW,CACzBC,YAAaC,EAAAA,GAAAA,aACbC,WAAY,oBACZC,aAAc,kBAAMN,EAAQ,IAC5BO,QAAS,kBAAMP,EAAQ,IACvBQ,eAAgB/L,EAAU,6BAA8B,kCACxDgM,aAAchM,EACZ,mEACA,2DAIJ,OAAO,SAACiM,GACNT,GAAQ,QACNU,OAAQ,sBACLD,KMvBmBuC,CAAiCjD,GAE3D,OACE,SAAC,KAAD,CACER,KAAMA,EACNqB,MAAK,OAAEtB,QAAF,IAAEA,OAAF,EAAEA,EAAOsB,MACdC,aAAcC,EAAAA,EAAAA,WAAAA,QACdvN,UAAU,uBAJZ,UAME,UAAC,IAAD,CAAcsM,KAAMA,EAAMkB,WAAY,EAAEvB,GAAcT,QAASA,EAA/D,WAEE,UAAC,KAAD,CACE3K,KAAK,UACLiB,MAAOb,EAAU,oBAAqB,iBACtCwM,QAASlB,EACTmB,aAAY,OAAE3B,QAAF,IAAEA,GAAF,UAAEA,EAAOjE,aAAT,aAAE,EAAcS,QAJ9B,WAME,SAACiG,EAAD,IACCpC,IACC,SAAC,KAAD,CAAa3B,WAAS,EAAtB,UACE,SAAC,IAAD,CACEnJ,GAAG,4DACHC,GAAG,2DAOX,UAAC,KAAD,CAAQiI,YAAa4C,EAArB,WACE,SAACb,EAAD,CACEC,QAASA,EACTC,kBAAmB,CACjBnK,GAAI,iBACJC,GAAI,kBAIR,SAAC2N,EAAD,CACEpF,QAASA,EACTqF,kBAAmBA,EACnBC,WAAYrD,EAAMqD,WAClBC,kBAAmBtD,EAAMsD,kBACzB7D,QAASA,a,+GC7Cd,SAASkE,GAAT,GAAoG,IAA1EC,EAAyE,EAAzEA,SAAUC,EAA+D,EAA/DA,WAAYzJ,EAAmD,EAAnDA,MAAO0J,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,WACrE,OACE,UAAC,KAAD,CACEhQ,KAAK,SACLD,OAAOkQ,EAAAA,EAAAA,IAAkB5J,GACzBnG,WAAWO,EAAAA,GAAAA,GAAKsP,GAAW,8BAC3BlQ,OAAQiQ,EAAU,UAAMI,EAAAA,GAAQ7J,GAAd,aAAyByJ,EAAzB,KAAyCI,EAAAA,GAAQ7J,GAJrE,UAMG0J,GACC,SAAC,KAAD,CAAW/P,KAAK,QAAQE,UAAU,uCAAlC,UACE,SAACiQ,GAAA,EAAD,OAGF,SAAC,KAAD,CAAQnK,GAAI6J,EAAU7P,KAAK,QAAQE,UAAU,yCAE9C8P,KCtBA,SAASI,GAAT,GAOS,IANdvC,EAMa,EANbA,YACAnC,EAKa,EALbA,QACA2E,EAIa,EAJbA,gBACA1K,EAGa,EAHbA,UACA2K,EAEa,EAFbA,iBAEa,IADbC,SAAAA,OACa,SACb,OACE,SAAC,IAAD,CAAOrQ,UAAU,+CAAjB,SACG2N,EAAY5J,KAAI,SAACuM,EAAiBnK,GAAW,IAAD,EAC3C,OAAIkK,GAEA,0BACE,SAACX,GAAD,CACEI,WAAYQ,EAAgBR,WAC5BD,QAASS,EAAgBT,QACzBD,WAAYpE,EAAQ8E,EAAgBC,UAAUC,KAC9Cb,SAAUnE,EAAQ8E,EAAgBC,UAAUZ,SAC5CxJ,MAAOA,KANX,UAAamK,EAAgBR,WAA7B,YAA2C3J,KAa7C,mBAEEnG,UAAU,qDACVgC,QAAS,kBAAMmO,EAAgBhK,EAAOmK,IACtCnM,SAAUsB,EAJZ,UAME,SAACiK,GAAD,CACEI,WAAYQ,EAAgBR,WAC5BD,QAAO,OAAEO,QAAF,IAAEA,GAAF,UAAEA,EAAmBjK,UAArB,aAAE,EAA2B0J,QACpCF,SAAUnE,EAAQ8E,EAAgBC,UAAUZ,SAC5CC,WAAYpE,EAAQ8E,EAAgBC,UAAUC,KAC9CrK,MAAOA,KAXX,UACUmK,EAAgBR,WAD1B,YACwC3J,SCV3C,SAASsK,GAAT,GAQ0B,IAP/BC,EAO8B,EAP9BA,oBACA9B,EAM8B,EAN9BA,WACA+B,EAK8B,EAL9BA,sBACAC,EAI8B,EAJ9BA,oBACApF,EAG8B,EAH9BA,QACA4D,EAE8B,EAF9BA,WACAzB,EAC8B,EAD9BA,YAEQ1M,GAAcC,EAAAA,EAAAA,MAAdD,UACAwE,GAAcC,EAAAA,EAAAA,MAAdD,UACR,GAAgD3E,EAAAA,EAAAA,WAAgC+P,EAAAA,EAAAA,IAASlD,IAAzF,eAAOyC,EAAP,KAAyBU,EAAzB,KACA,GAAkBC,EAAAA,EAAAA,IAAe,WAA1BC,GAAP,eACA,GAA8ClQ,EAAAA,EAAAA,WAAS,GAAvD,eAAOmQ,EAAP,KAAwBC,EAAxB,KAEMf,EAAkB,SAAChK,EAAemK,EAAsCa,GAC5E,IAAIA,EAAJ,CAEA,IAAMC,GAAiB,OAAOhB,GAC1BgB,EAAkBjL,GACpBiL,EAAkBjL,GAAO0J,SAAWuB,EAAkBjL,GAAO0J,QAE7DuB,EAAkBjL,IAAlB,kBACKmK,GADL,IAEET,SAAS,IAIbe,EAAoB,CAAEjD,YAAayD,IACnCN,EAAoBM,MAGtBC,EAAAA,EAAAA,YAAU,YACJX,GAAwBO,GAAoBxL,IAC9CmC,EAAAA,GAAAA,MACER,EAAAA,EAAAA,GACEnG,EAAU,oBAAkB,gBAC5BA,EAAU,wCAAgC,uCAC1C2N,EAAW9I,GACX,IAGJoL,GAAmB,MAEpB,CAACR,EAAqB9B,EAAW9I,GAAI7E,EAAWgQ,EAAiBxL,IAEpE,IAAM6L,EAAoB3K,OAAOpB,OAAO6K,GAExC,OACE,UAAC,IAAD,CAAM9F,WAAS,EAAf,WACE,SAAC,KAAD,CAAOC,OAAK,EAAZ,UACE,SAAC,IAAD,CAAWjJ,GAAG,oBAAoBC,GAAG,qBAGvC,SAAC,EAAD,CAAMmJ,KAAM0E,EAAWxE,QAEvB,SAAC,KAAD,CAAapD,SAAS,SAACkH,EAAD,IAA6B6C,WAAS,KAE5D,SAAC5C,EAAD,CAAsBC,WAAYA,KAElC,SAACsB,GAAD,CACEvC,YAAaA,EACb0C,UAAWK,EACXlF,QAASA,EACT2E,gBAAiBA,EACjB1K,UAAWA,EACX2K,iBAAkBA,IAGnBM,IACC,SAAC,IAAD,CAAO1Q,UAAU,0CAAjB,UACE,SAAC,IAAD,CACEiE,MAAM,SAAC6G,EAAA,EAAD,IACNjK,KAAK,UACLmB,QAAS,kBACP2O,EAAsB,CACpBa,iBAAkBF,EAAkBG,QAAO,SAAC3B,GAAD,OAAiBA,EAAWD,cAG3E1L,SAAUsB,EARZ,UAUE,SAAC,IAAD,CAAWnE,GAAG,6BAA0BC,GAAG,6BAKjD,UAAC,KAAD,CAAoByF,UAAU,WAAWF,MAAM,SAA/C,WACE,SAACoJ,GAAD,CACEvC,YAAaA,EACb0C,UAAWW,EACXxF,QAASA,EACT2E,gBAAiBA,EACjB1K,UAAWA,EACX2K,iBAAkBA,KAEpB,SAAC,KAAD,CACEpO,QAAS,kBACP2O,EAAsB,CACpBa,iBAAkBF,EAAkBG,QAAO,SAAC3B,GAAD,OAAiBA,EAAWD,cAH7E,UAOE,SAAC,IAAD,CAAWvO,GAAG,wCAAqCC,GAAG,yCCpDhE,OA/DA,YAA6D,IAAD,EAApCwK,EAAoC,EAApCA,MAAOP,EAA6B,EAA7BA,QAASQ,EAAoB,EAApBA,KAC9B/K,GAAcC,EAAAA,EAAAA,MAAdD,UACR,GAAwCoL,EAAAA,EAAAA,IAAQ,GAAxCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,aAAcC,EAA5B,EAA4BA,QAC5B,GAA6BL,EAAAA,EAAAA,IAAoB,YAAaJ,EAAOP,GAA5DY,GAAT,eACA,GAA0CD,EAAAA,EAAAA,IAAoB,eAAgBJ,EAAOP,GAArF,eAAOoD,EAAP,KAAmB8B,EAAnB,KAEMC,EV2BD,SAA0CnE,GAC/C,IAAQvL,GAAcC,EAAAA,EAAAA,MAAdD,UAEFwL,GAAUC,EAAAA,EAAAA,IAAW,CACzBC,YAAaC,EAAAA,GAAAA,aACbC,WAAY,qBACZC,aAAc,kBAAMN,EAAQ,IAC5BO,QAAS,kBAAMP,EAAQ,IACvBQ,eAAgB/L,EAAU,uCAAkC,iCAC5DgM,aAAchM,EACZ,2FACA,yDAIJ,OAAO,SAACiM,GACNT,GAAQ,QACNU,OAAQ,qBACLD,KU7CuBwE,CAAiClF,GAEzDoE,EVgDD,WACL,IAAQ3P,GAAcC,EAAAA,EAAAA,MAAdD,UAEFwL,GAAUC,EAAAA,EAAAA,IAAW,CACzBC,YAAaC,EAAAA,GAAAA,aACbC,WAAY,sBACZG,eAAgB/L,EAAU,cAAe,YACzCgM,aAAchM,EACZ,2DACA,4CAIJ,OAAO,SAACiM,GACNT,GAAQ,QACNU,OAAQ,uBACLD,KUhEqByE,GAE5B,OACE,SAAC,KAAD,CAAgB3F,KAAMA,EAAMqB,MAAK,OAAEtB,QAAF,IAAEA,OAAF,EAAEA,EAAOsB,MAAOC,aAAcC,EAAAA,EAAAA,WAAAA,QAA/D,UACE,UAAC,IAAD,CAAcjB,KAAMA,EAAMd,QAASA,EAAnC,WAEE,UAAC,KAAD,CACE3K,KAAK,cACLiB,MAAOb,EAAU,6BAAwB,eACzCwM,QAASlB,EACTmB,aAAY,OAAE3B,QAAF,IAAEA,GAAF,UAAEA,EAAOjE,aAAT,aAAE,EAAcS,QAJ9B,WAME,SAACkG,EAAD,IACCrC,IACC,SAAC,KAAD,CAAa3B,WAAS,EAAtB,UACE,SAAC,IAAD,CACEnJ,GAAG,sEACHC,GAAG,iEAOX,UAAC,KAAD,CAAQiI,YAAa4C,EAArB,WACE,SAACb,EAAD,CACEC,QAASA,EACTC,kBAAmB,CACjBnK,GAAI,gBACJC,GAAI,yBAIR,SAACkP,GAAD,CACE7B,WAAYA,EACZ8B,oBAAqBA,EACrBtB,WAAYrD,EAAMqD,WAClBzB,YAAa5B,EAAM4B,YACnBnC,QAASA,EACTmF,sBAAuBA,EACvBC,oBAAqBA,QAKzB,SAAC,KAAD,CACEpF,QAASA,EACT1J,MAAOb,EAAU,wCAAmC,wBACpD2K,YAAY,c,sBC1Df,SAASgG,GAAT,GAA8D,IAA7CC,EAA4C,EAA5CA,gBAAiBC,EAA2B,EAA3BA,YAC/B7Q,GAAcC,EAAAA,EAAAA,MAAdD,UACAwE,GAAcC,EAAAA,EAAAA,MAAdD,UACR,GAA0B3E,EAAAA,EAAAA,UAAS,IAAnC,eAAOiR,EAAP,KAAcC,EAAd,KAQA,OACE,UAAC,IAAD,CAAOhS,UAAU,kCAAjB,WACE,SAAC,IAAD,CACEiD,YAAahC,EAAU,wBAAyB,wBAChDmN,SAAU,SAACxI,GAAD,OAAOoM,EAASpM,EAAEC,OAAOE,QACnCa,aAXe,WACfmL,GAASA,EAAMrP,OAAS,GAC1BoP,EAAY,CAAEC,MAAAA,KAUZjS,KAAK,WAEP,SAAC,IAAD,CACEmE,MAAM,SAAC6G,EAAA,EAAD,IACNjK,KAAK,UACLmB,QAAS,kBAAM8P,EAAY,CAAEC,MAAAA,KAC7B5N,SAAU4N,EAAMrP,OAAS,GAAK+C,EAC9B3F,KAAK,QALP,UAOE,SAAC,IAAD,CAAWwB,GAAG,SAASC,GAAG,cAE5B,2BACE,SAAC,IAAD,CAAWD,GAAG,KAAKC,GAAG,UAExB,SAAC,IAAD,CACE0C,MAAM,SAACgO,GAAA,EAAD,IACNpR,KAAK,UACLmB,QAAS,kBAAM6P,EAAgB,CAAEK,QAAS,UAC1C/N,SAAUsB,EAJZ,UAME,SAAC,IAAD,CAAWnE,GAAG,kBAAkBC,GAAG,mBC5BpC,SAAS4Q,GAAT,GAOgB,IANrBrI,EAMoB,EANpBA,QACAsC,EAKoB,EALpBA,iBACAgD,EAIoB,EAJpBA,WACA0C,EAGoB,EAHpBA,YACAD,EAEoB,EAFpBA,gBACAL,EACoB,EADpBA,iBAEA,OACE,SAAC,IAAD,CAAMlH,WAAS,EAAf,UACE,UAAC,KAAD,CAAQd,YAAa4C,EAArB,WACE,UAAC,IAAD,CAAOpF,UAAU,WAAWF,MAAM,SAAlC,WACE,UAAC,KAAD,YACE,SAAC,IAAD,CAAWxF,GAAG,kBAAkBC,GAAG,kBADrC,MACyD,SAAC,KAAD,CAAYiJ,OAAQV,IAD7E,QAGA,SAAC,KAAD,CAAaW,WAAS,EAAtB,UACE,SAAC,IAAD,CACEnJ,GAAG,kEACHC,GAAG,0DAIP,SAAC,EAAD,CAAMmJ,MAAM,SAAC0H,GAAA,EAAD,OAEZ,SAAC,KAAD,CAAa3H,WAAS,EAAtB,UACE,SAAC,IAAD,CAAWnJ,GAAG,oCAAoCC,GAAG,8BAEvD,SAACqQ,GAAD,CAAOC,gBAAiBA,EAAiBC,YAAaA,KAEtD,SAAC,IAAD,CAAO9R,UAAU,kCAAjB,SACGwR,EAAiBzN,KAAI,SAACuM,EAAiBnK,GACtC,IAAML,EAAE,UAAMwK,EAAgBR,WAAtB,YAAoC3J,GAC5C,OAAO,SAACyH,EAAD,CAA0B9H,GAAIA,EAAIC,MAAOuK,EAAgBR,YAAnChK,YAKnC,UAAC,IAAD,CAAOkB,UAAU,WAAWF,MAAM,SAAlC,WACE,SAAC,KAAD,WACE,SAAC,IAAD,CACExF,IACE,4CACU,SAAC,KAAD,CAAYkJ,OAAQV,IAD9B,eAIFvI,IACE,6CACW,SAAC,KAAD,CAAYiJ,OAAQV,IAD/B,qBAON,UAAC,KAAD,CAAaW,WAAS,EAAtB,UACGX,EAAQ0G,KAAM,KACf,SAAC,IAAD,CACElP,GAAG,0DACHC,GAAG,sDAIP,SAAC,EAAD,CAAMmJ,KAAM0E,EAAWxE,QAEvB,UAAC,KAAD,CAAaH,WAAS,EAAtB,UACGX,EAAQ0G,KADX,KACiB,SAAC,IAAD,CAAWlP,GAAG,sBAAmBC,GAAG,uBAGrD,SAAC,IAAD,CAAOvB,UAAU,kCAAjB,SACGwR,EAAiBzN,KAAI,SAACuM,EAAiBnK,GACtC,IAAML,EAAE,UAAMwK,EAAgBR,WAAtB,YAAoC3J,GAC5C,OAAO,SAACyH,EAAD,CAA0B9H,GAAIA,EAAIC,MAAOuK,EAAgBR,YAAnChK,gB,eC9DpC,SAASuM,GAAT,GAWyB,IAV9BN,EAU6B,EAV7BA,MACAjI,EAS6B,EAT7BA,QACAkH,EAQ6B,EAR7BA,QACAvL,EAO6B,EAP7BA,UACA2G,EAM6B,EAN7BA,iBACAsE,EAK6B,EAL7BA,oBACA9B,EAI6B,EAJ7BA,WACAQ,EAG6B,EAH7BA,WACAyC,EAE6B,EAF7BA,gBACAL,EAC6B,EAD7BA,iBAEQvQ,GAAcC,EAAAA,EAAAA,MAAdD,UAeR,OAbAoQ,EAAAA,EAAAA,YAAU,WACJX,IAAwBjL,GAC1BmC,EAAAA,GAAAA,MACER,EAAAA,EAAAA,GACEnG,EAAU,oBAAkB,gBAC5BA,EAAU,+CAA6C,6CACvD2N,EAAW9I,GACX,MAIL,CAAC4K,EAAqB9B,EAAW9I,GAAI7E,EAAWwE,KAGjD,UAAC,IAAD,CAAM6E,WAAS,EAAf,WACE,UAAC,KAAD,CAAOtK,WAAWsI,EAAAA,EAAAA,IAAkB,aAApC,WACE,SAAC,KAAD,CAAYkC,OAAQV,EAASgC,aAAW,IAD1C,KAC8C,SAAC,IAAD,CAAWxK,GAAG,QAAQC,GAAG,SAAU,KAC/E,SAAC,KAAD,UAAgBwQ,QAGlB,SAAC,EAAD,CAAMrH,KAAM0E,EAAWxE,QAEvB,SAAC,KAAD,CAAaH,WAAS,EAAtB,UACE,UAAC,KAAD,CAAQjB,YAAa4C,EAArB,WACE,SAAC,IAAD,CACE9K,IACE,iCACE,SAAC,KAAD,CAAYkJ,OAAQoE,IADtB,kFAEO,kBAFP,uGAG2F,KACzF,kBAJF,qBAQFrN,IACE,iCACE,SAAC,KAAD,CAAYiJ,OAAQoE,IADtB,2DAEE,kBAFF,kEAGgE,kBAHhE,wBASJ,SAAC,IAAD,CACEtN,IACE,iCACE,SAAC,KAAD,CAAYkJ,OAAQoE,EAAY9C,aAAW,IAD7C,qDAC6F,KAC3F,SAAC,KAAD,CAAYtB,OAAQV,IAFtB,uBAGkB,kBAHlB,uGAI2F,KACzF,kBALF,sBASFvI,IACE,iCACE,SAAC,KAAD,CAAYiJ,OAAQoE,EAAY9C,aAAW,IAD7C,8BAC4E,KAC1E,SAAC,KAAD,CAAYtB,OAAQV,IAFtB,4BAEyD,kBAFzD,oEAGkE,kBAHlE,6BAWR,SAAC,IAAD,CAAO9J,UAAU,kCAAjB,SACGwR,EAAiBzN,KAAI,SAACuM,EAAiBnK,GACtC,IAAML,EAAE,UAAMwK,EAAgBR,WAAtB,YAAoC3J,GAC5C,OAAO,SAACyH,EAAD,CAA0B9H,GAAIA,EAAIC,MAAOuK,EAAgBR,YAAnChK,SAI/B4K,GAAuBM,KACvB,UAAC,IAAD,CAAOhR,WAAWO,EAAAA,GAAAA,GAAK,mCAAoCyQ,GAAW,mBAAtE,WACE,SAAC,IAAD,CACE/M,MAAM,SAACqO,GAAA,EAAD,IACNzR,KAAK,UACLL,MAAO,CAAEE,gBAAiB,SAC1BsB,QAAS,kBAAM6P,EAAgB,CAAEK,QAAS,aAC1C/N,SAAUsB,EALZ,UAOE,SAAC,IAAD,CAAWnE,GAAG,UAAUC,GAAG,eAE7B,SAAC,IAAD,CACE0C,MAAM,SAACgM,GAAA,EAAD,IACNpP,KAAK,UACL0R,QAAM,EACNvQ,QAAS,kBAAM6P,EAAgB,CAAEK,QAAS,WAC1C/N,SAAUsB,EALZ,UAOE,SAAC,IAAD,CAAWnE,GAAG,QAAQC,GAAG,kBChErC,OA5DA,YAA2D,IAAD,EAApCwK,EAAoC,EAApCA,MAAOP,EAA6B,EAA7BA,QAASQ,EAAoB,EAApBA,KAC5BvG,GAAcC,EAAAA,EAAAA,MAAdD,UACAxE,GAAcC,EAAAA,EAAAA,MAAdD,UACR,GAAwCoL,EAAAA,EAAAA,IAAQ,GAAxCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,aAAcC,EAA5B,EAA4BA,QAC5B,GAAkBuE,EAAAA,EAAAA,IAAe,WAA1BC,GAAP,eACA,GAAoC7E,EAAAA,EAAAA,IAAoB,YAAaJ,EAAOP,GAA5E,eAAO1B,EAAP,KAAgBsC,EAAhB,KACA,GAA0CD,EAAAA,EAAAA,IAAoB,eAAgBJ,EAAOP,GAArF,eAAOoD,EAAP,KAAmB8B,EAAnB,KAEMmB,EdwED,SAAsCrF,GAC3C,IAAQvL,GAAcC,EAAAA,EAAAA,MAAdD,UAEFwL,GAAUC,EAAAA,EAAAA,IAAW,CACzBC,YAAaC,EAAAA,GAAAA,aACbC,WAAY,iBACZC,aAAc,kBAAMN,EAAQ,IAC5BO,QAAS,kBAAMP,EAAQ,IACvBQ,eAAgB/L,EAAU,iCAAkC,8BAC5DgM,aAAchM,EACZ,oEACA,wDAIJ,OAAO,SAACiM,GACNT,GAAQ,QACNU,OAAQ,kBACLD,Kc1FiBsF,CAA6BhG,GAE/CsF,Ed6FD,WACL,IAAQ7Q,GAAcC,EAAAA,EAAAA,MAAdD,UAEFwL,GAAUC,EAAAA,EAAAA,IAAW,CACzBC,YAAaC,EAAAA,GAAAA,aACbC,WAAY,aACZG,eAAgB/L,EAAU,iBAAkB,eAC5CgM,aAAchM,EACZ,2DACA,4CAIJ,OAAO,SAACiM,GACNT,GAAQ,QACNU,OAAQ,cACLD,Kc7GauF,GASpB,OANApB,EAAAA,EAAAA,YAAU,WACR,OAAItF,QAAJ,IAAIA,GAAAA,EAAOgG,OACTvF,EAAQ,KAET,CAACT,EAAOS,KAGT,SAAC,KAAD,CAAgBR,KAAMA,EAAMqB,MAAK,OAAEtB,QAAF,IAAEA,OAAF,EAAEA,EAAOsB,MAAOC,aAAcC,EAAAA,EAAAA,WAAAA,MAA/D,UACE,UAAC,IAAD,CAAcjB,KAAMA,EAAMd,QAASA,EAAnC,WAEE,SAAC,KAAD,CACE3K,KAAK,QACLiB,MAAOb,EAAU,oBAAe,YAChCwM,QAASlB,EACTmB,aAAY,OAAE3B,QAAF,IAAEA,GAAF,UAAEA,EAAOjE,aAAT,aAAE,EAAcS,QAJ9B,UAME,SAACuG,EAAD,CAAeC,YAAajF,EAAQ0G,UAItC,SAAC2B,GAAD,CACErI,QAASA,EACTsC,iBAAkBA,EAClByF,gBAAiBA,EACjBC,YAAaA,EACbN,iBAAkBzF,EAAMyF,iBACxBpC,WAAYrD,EAAMqD,cAIpB,SAACiD,GAAD,CACEvI,QAASA,EACTiI,MAAOhG,EAAMgG,MACb3F,iBAAkBA,EAClByF,gBAAiBA,EACjBL,iBAAkBzF,EAAMyF,iBACxBpC,WAAYrD,EAAMqD,WAClBR,WAAYA,EACZ8B,oBAAqBA,EACrBM,QAASA,EACTvL,UAAWA,U,WC3DrB,OAJA,YAAqD,IAA5BsG,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAC9B,OAAO,SAAC,KAAD,CAAiBA,KAAMA,EAAMD,MAAOA,EAAO2G,iBAAiB,UC0CrE,OAjCA,YAAoD,IAAzBC,EAAwB,EAAxBA,OAwBzB,OACE,SAAC,IAAD,CACEA,OAAQA,EACRC,eAAgBC,EAAAA,GAAAA,WAChBC,mBA3BJ,SAA4BzF,GAC1B,OAAQA,GACN,KAAKE,EAAAA,EAAAA,QAAAA,MACH,OAAOwF,EAAAA,GACT,KAAKxF,EAAAA,EAAAA,QAAAA,MACH,OAAOyF,EAAAA,GACT,KAAKzF,EAAAA,EAAAA,QAAAA,MACH,OAAO0F,EAAAA,GACT,KAAK1F,EAAAA,EAAAA,WAAAA,eACH,OAAO2F,EACT,KAAK3F,EAAAA,EAAAA,WAAAA,QACH,OAAO4F,EACT,KAAK5F,EAAAA,EAAAA,WAAAA,QACH,OAAO6F,GACT,KAAK7F,EAAAA,EAAAA,WAAAA,MACH,OAAO8F,GACT,KAAK9F,EAAAA,EAAAA,QAAAA,UACH,OAAO+F,GACT,QACE,OAAOC,EAAAA,Q,yOCjBR,SAASC,EAAT,GAAgG,IAA7DhI,EAA4D,EAA5DA,QAASiI,EAAmD,EAAnDA,kBACzChO,GAAcC,EAAAA,EAAAA,MAAdD,UACR,GAAkBsL,EAAAA,EAAAA,IAAe,WAA1BC,GAAP,eAEA,OACE,UAAC,IAAD,YACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAYnQ,KAAK,iBAAiBf,KAAK,WACvC,mBACA,SAAC,IAAD,CAAWwB,GAAG,yBAAyBC,GAAG,kCAG5C,SAAC,KAAD,CAAakJ,WAAS,EAAtB,UACE,SAAC,IAAD,UACG9D,OAAOpB,OAAOiG,GAASzH,KAAI,SAACyG,GAC3B,OAAIwG,GAEA,SAAC,IAAD,CAEE7M,SAAUsB,EACVzD,QAAS,kBAAMyR,EAAkB,CAAEC,OAAQlJ,EAAO1E,MAHpD,UAKE,SAAC,KAAD,CAAqC0E,OAAQA,EAAQmJ,UAAQ,EAAC7H,aAAW,GAAzE,cAAwBtB,EAAO1E,MALjC,eACe0E,EAAO1E,MASnB,SAAC,KAAD,CAAqC0E,OAAQA,EAAQmJ,UAAQ,EAAC7H,aAAW,GAAzE,cAAwBtB,EAAO1E,aAK5C,UAAC,KAAD,gBAEE,SAAC,IAAD,CAAWxE,GAAG,yCAAsCC,GAAG,mCAFzD,SA3BS,GCiCf,MA1CA,YAAyE,IAAD,EAApCwK,EAAoC,EAApCA,MAAOP,EAA6B,EAA7BA,QAASQ,EAAoB,EAApBA,KAC1C/K,GAAcC,EAAAA,EAAAA,MAAdD,UACR,GAAwCoL,EAAAA,EAAAA,IAAQ,GAAxCC,EAAR,EAAQA,KAAME,EAAd,EAAcA,QAASD,EAAvB,EAAuBA,aAEjBkH,ECbD,SAAyCjH,GAC9C,IAAQvL,GAAcC,EAAAA,EAAAA,MAAdD,UAEFwL,GAAUC,EAAAA,EAAAA,IAAW,CACzBC,YAAaiH,EAAAA,GAAAA,aACb/G,WAAY,cACZC,aAAc,kBAAMN,EAAQ,IAC5BO,QAAS,kBAAMP,EAAQ,IACvBQ,eAAgB/L,EAAU,6BAA8B,gCACxDgM,aAAchM,EACZ,gEACA,0DAIJ,OAAO,SAACiM,GACNT,GAAQ,QACNU,OAAQ,eACLD,KDLmB2G,CAAgCrH,GAE1D,OACE,SAAC,KAAD,CAAgBR,KAAMA,EAAMqB,MAAK,OAAEtB,QAAF,IAAEA,OAAF,EAAEA,EAAOsB,MAAOC,aAAcC,EAAAA,EAAAA,oBAAAA,eAA/D,UACE,UAAC,IAAD,CAAcjB,KAAMA,EAAMd,QAASA,EAAnC,WAEE,SAAC,KAAD,CACE3K,KAAK,OACLiB,MAAOb,EAAU,UAAW,YAC5BwM,QAASlB,EACTmB,aAAY,OAAE3B,QAAF,IAAEA,GAAF,UAAEA,EAAOjE,aAAT,aAAE,EAAcS,QAC5BjB,SAAU,GALZ,UAOE,SAAC,KAAD,WACE,SAAC,IAAD,CACEhG,IACE,uLAKFC,IACE,6MAUR,SAACiS,EAAD,CAAyBhI,QAASA,EAASiI,kBAAmBA,U,2DE7B/D,SAASK,EAAT,GAI2B,IAHhC9J,EAG+B,EAH/BA,MACA+J,EAE+B,EAF/BA,WACAC,EAC+B,EAD/BA,mBAEQvO,GAAcC,EAAAA,EAAAA,MAAdD,UACR,GAAoC3E,EAAAA,EAAAA,UAAS,IAA7C,eAAOsO,EAAP,KAAmB6E,EAAnB,KACA,GAAoDnT,EAAAA,EAAAA,UAA4B,IAAhF,eAAOoT,EAAP,KAA2BC,EAA3B,KACMC,EAAgBpQ,QAAQoL,GAAczI,OAAOyD,KAAK8J,GAAoBxR,OAAS,GAoBrF,OACE,UAAC,IAAD,YACE,SAAC,KAAD,CAAO5C,KAAK,SAAZ,UACE,SAAC,IAAD,CAAWwB,GAAG,oBAAoBC,GAAG,uBAEvC,SAAC,KAAD,CAAakJ,WAAS,EAAtB,UACE,SAAC,IAAD,CACEnJ,GAAG,mKACHC,GAAG,oHAIP,SAAC,IAAD,CAAOwF,MAAI,EAAC/G,UAAU,kBAAkB8G,MAAM,SAA9C,SACGkD,EAAMjG,KAAI,SAAC2G,GACV,OACE,SAAC,IAAD,CAEEvG,SAAUsB,EACVzD,QAAS,kBAAMiS,EAAcvJ,EAAKE,OAClCyJ,OAAQjF,IAAe1E,EAAKE,KAJ9B,UAME,SAAC,KAAD,UAAOF,EAAKE,QANd,eACeF,EAAK5E,WAW1B,SAAC,KAAD,CAAOwO,MAAO,EAAGxU,KAAK,UAAtB,UACE,SAAC,IAAD,CAAWwB,GAAG,aAAaC,GAAG,kBAGhC,SAAC,KAAD,CAAakJ,WAAS,EAAtB,UACE,SAAC,IAAD,CAAO1D,MAAI,EAAC/G,UAAU,kBAAkB8G,MAAM,SAA9C,SACGiN,EAAWhQ,KAAI,SAACwQ,GACf,OACE,UAAC,IAAD,CAEEpQ,SAAUsB,IAAc2J,EACxBpN,QAAS,kBAxDG,SAACuS,GACzB,IAAMC,GAAiC,UAAQN,GAC3CM,EAAeD,UACVC,EAAeD,GAGqB,IAAvC5N,OAAOyD,KAAKoK,GAAgB9R,OAC9B+R,EAAAA,EAAAA,MAAmB,CACjB7M,SAAS,SAAC,IAAD,CAAWtG,GAAG,8CAAwCC,GAAG,iCAGpEiT,EAAeD,IAAY,EAI/BJ,EAAsBK,GAyCKE,CAAkBH,EAAS3J,OAC1C5K,UAAU,uBAJZ,UAMGkU,EAAmBK,EAAS3J,QAAS,SAACC,EAAA,EAAD,IANxC,IAMgE0J,EAAS3J,OANzE,eACe2J,EAASzO,aAYhC,UAAC,IAAD,CACEjF,KAAK,UACLsD,UAAWiQ,EACXpS,QAAS,kBACPgS,EAAmB,CACjB5E,WAAAA,EACA2E,WAAYpN,OAAOyD,KAAK8J,MAN9B,WAUE,SAAC,IAAD,CAAW5S,GAAG,UAAUC,GAAG,YAC1B6S,IACC,gCACIhF,EADJ,OACoBzI,OAAOyD,KAAK8J,GAAoBS,KAAK,cA5DpD,G,cCvCR,SAASC,EAAT,GAAkE,IAA3CpJ,EAA0C,EAA1CA,QAASI,EAAiC,EAAjCA,YAC7B3K,GAAcC,EAAAA,EAAAA,MAAdD,UAER,OACE,SAAC,IAAD,CAAMqJ,WAAS,EAAf,UACE,SAAC,KAAD,CAAakB,QAASA,EAAS1J,MAAOb,EAAU,UAAW,eAAgB2K,YAAaA,MCsE9F,MArEA,YAAyE,IAAD,EAApCG,EAAoC,EAApCA,MAAOP,EAA6B,EAA7BA,QAASQ,EAAoB,EAApBA,KAC1C/K,GAAcC,EAAAA,EAAAA,MAAdD,UACR,GAAwCoL,EAAAA,EAAAA,IAAQ,GAAxCC,EAAR,EAAQA,KAAME,EAAd,EAAcA,QAASD,EAAvB,EAAuBA,aACvB,GAA8BJ,EAAAA,EAAAA,IAAoB,SAAUJ,EAAOP,GAAnE,eAAOqJ,EAAP,KAAaC,EAAb,KAEMd,EHMD,SAAyCxH,GAC9C,IAAQvL,GAAcC,EAAAA,EAAAA,MAAdD,UAEFwL,GAAUC,EAAAA,EAAAA,IAAW,CACzBC,YAAaiH,EAAAA,GAAAA,aACb/G,WAAY,qBACZC,aAAc,kBAAMN,EAAQ,IAC5BO,QAAS,kBAAMP,EAAQ,IACvBQ,eAAgB/L,EAAU,uCAAwC,kCAClEgM,aAAchM,EACZ,wEACA,2DAIJ,OAAO,SAACiM,GACNT,GAAQ,QACNU,OAAQ,sBACLD,KGxBoB6H,CAAgCvI,GAE3D,OACE,SAAC,KAAD,CACER,KAAMA,EACNqB,MAAK,OAAEtB,QAAF,IAAEA,OAAF,EAAEA,EAAOsB,MACdC,aAAcC,EAAAA,EAAAA,oBAAAA,sBAHhB,UAKE,UAAC,IAAD,CAAcjB,KAAMA,EAAMd,QAASA,EAAnC,WAEE,SAAC,KAAD,CACE3K,KAAK,YACLiB,MAAOb,EAAU,oBAAqB,mBACtCwM,QAASlB,EACTmB,aAAY,OAAE3B,QAAF,IAAEA,GAAF,UAAEA,EAAOjE,aAAT,aAAE,EAAcS,QAC5BjB,SAAU,EALZ,UAOE,SAAC,KAAD,WACE,SAAC,IAAD,CACEhG,IACE,4CACU,SAAC,KAAD,CAAYkJ,OAAQqK,IAD9B,sDAIFtT,IACE,6CACW,SAAC,KAAD,CAAYiJ,OAAQqK,IAD/B,2DASR,UAAC,KAAD,CAAQrL,YAAasL,EAArB,WACE,SAAChB,EAAD,CACE9J,MAAO+B,EAAM/B,MACb+J,WAAYhI,EAAMgI,WAClBC,mBAAoBA,KAGtB,SAACY,EAAD,CACEpJ,QAASA,EACTI,aACE,SAAC,IAAD,CACEtK,IACE,6CACW,SAAC,KAAD,CAAYkJ,OAAQqK,IAD/B,4DAIFtT,IACE,6CACW,SAAC,KAAD,CAAYiJ,OAAQqK,IAD/B,iE,gDCrEZG,EAAiB,CACrB,OACA,QACA,QACA,QACA,MACA,MACA,iBACA,mBACA,iBACA,SACA,OACA,gBACA,UACA,UACA,SACA,yBACA,eACA,OACA,YACA,2BCtBK,I,8BCWA,SAASC,EAAT,GAAuD,IAAtCC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,MAAO3J,EAAuB,EAAvBA,QAC9B4J,EAAezO,OAAOyD,KAAK8K,GACjC,OACE,gBAAKlV,UAAU,UAAf,SACGoV,EAAarR,KAAI,SAACsR,EAAUlP,GAC3B,IAAMmP,EAAaJ,EAAMG,GACnBE,EAAgBpP,IAAUiP,EAAa1S,OAAS,EAEtD,OACE,iBAEE1C,WAAWO,EAAAA,EAAAA,GAAK,iBAAkBgV,GAAiB,0BAFrD,WAIE,eAAIvV,UAAU,iBAAd,SACGsV,EAAWH,MAAMpR,KAAI,SAACyR,GAAD,OACpB,SAACC,EAAD,CAAMC,KAAMP,EAAMK,GAAsBhK,QAASA,GAAjBgK,SAGpC,gBAAKxV,UAAU,sBAAf,cAC6BmJ,IAA1BmM,EAAWK,YACV,SAAC,IAAD,CAAS7T,OAAO,SAAC,IAAD,CAAWR,GAAG,+BAA+BC,GAAG,4BAAhE,UACE,SAAC,IAAD,CAAQzB,KAAM,GAAI6E,MAAM,SAASnE,MAAO,CAAEE,gBAAiB,SAA3D,SACG4U,EAAWK,gBAIhB,SAAC,KAAD,CAAY7V,KAAM,GAAIe,KAAK,WAAW8D,MAAM,eAjBlD,oBACoB0Q,SA+B9B,SAASI,EAAT,GAA6C,IAA7BC,EAA4B,EAA5BA,KAAMlK,EAAsB,EAAtBA,QACpB,OACE,gBAAIxL,UAAU,SAAd,WACE,gBAAKA,WAAWO,EAAAA,EAAAA,GAAK,eAAgBmV,EAAKE,SAAW,uBAArD,UACE,gBAAK5V,UAAU,qBAAf,SAAqC0V,EAAKA,UAE5C,gBAAK1V,UAAU,iBAAf,UACE,SAAC,KAAD,CAAYwK,OAAQgB,EAAQkK,EAAKnF,iB,kCC5ClC,SAASsF,EAAT,GAOa,IANlB/P,EAMiB,EANjBA,GACAH,EAKiB,EALjBA,cACAiB,EAIiB,EAJjBA,aACAb,EAGiB,EAHjBA,MACA+P,EAEiB,EAFjBA,eACA3R,EACiB,EADjBA,SAEQlD,GAAcC,EAAAA,EAAAA,MAAdD,UACR,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAO8U,EAAP,KAAgBG,EAAhB,KAMA,OAJA1E,EAAAA,EAAAA,YAAU,WACRyE,EAAehQ,EAAI8P,KAClB,CAACA,KAGF,iBAAK5V,WAAWO,EAAAA,EAAAA,GAAK,eAAgBqV,GAAW,uBAAhD,WACE,gBAAK5V,UAAU,sBAAf,UACE,SAAC,IAAD,CACEiD,YACEkB,EAAWlD,EAAU,iBAAkB,aAAeA,EAAU,oBAAqB,cAGvF6E,GAAIA,EACJC,MAAOA,EACPqI,SAAUzI,EACV3F,UAAU,sBACVqO,UAAU,EACVzH,aAAcA,EACd0H,aAAa,MACbnK,SAAUA,GARL2B,MAWT,SAAC,IAAD,CACE9F,UAAU,uBACVF,KAAK,QACLkW,mBAAmB,SAAC,IAAD,CAAW1U,GAAG,OAAOC,GAAG,SAC3C0U,iBAAiB,SAAC,IAAD,CAAW3U,GAAG,WAAWC,GAAG,UAC7C6M,SAAU,SAACxI,GAAD,OAAOmQ,EAAWnQ,SC7C7B,SAASsQ,EAAT,GAA0D,IAAlCnC,EAAiC,EAAjCA,WACrB9S,GAAcC,EAAAA,EAAAA,MAAdD,UAER,OACE,SAAC,KAAD,CACEtB,QAAQwW,EAAAA,EAAAA,IACNpC,EAAWrR,OACXzB,EAAU,YAAa,YACvBA,EAAU,aAAc,eAE1BpB,MAAM,QANR,SAQGkU,EAAWY,KAAK,S,cCgBhB,SAASyB,EAAT,GAWiB,EAVtBhH,WAUuB,IATvB2E,EASsB,EATtBA,WACAsC,EAQsB,EARtBA,cACAnB,EAOsB,EAPtBA,MACAC,EAMsB,EANtBA,MAEAmB,GAIsB,EALtBzB,KAKsB,EAJtByB,kBACAC,EAGsB,EAHtBA,eACA/K,EAEsB,EAFtBA,QACA1D,EACsB,EADtBA,MAEA,GAAoChH,EAAAA,EAAAA,UAAmB,IAAvD,eAAO0V,EAAP,KAAmBC,EAAnB,KACA,GAA0C3V,EAAAA,EAAAA,WAAS,GAAnD,eAAO4V,EAAP,KAAsBC,EAAtB,MAEArH,EAAAA,EAAAA,KAAQ,WL1BH,IAAmBsH,EK2BtBP,EAAc,CAAElB,OL3BMyB,EK2BWL,GL1BfM,EAAAA,EAAAA,IAAQ7B,GAET8B,MAAM,EAAGF,QKyBzB,IAEH,IAAMG,EAA+B,IAAlBjP,EAAMS,QJtDgB,IADZ,IIyD7B,GAA6ByO,EAAAA,EAAAA,UAAS,CACpCC,iBAAiBC,EAAAA,EAAAA,IAAWH,GAC5BI,WAAW,EACX3O,SAAU,WACRmO,GAAiB,MAIfS,EAAkB,GARxB,EAAQC,QAAR,EAAiBC,QAuCjB,OACE,UAAC,IAAD,CAAMhN,WAAS,EAAf,WACE,SAAC,KAAD,CAAOxK,KAAK,SAAZ,UACE,SAAC,IAAD,CAAWwB,GAAG,mBAAmBC,GAAG,mBAGtC,SAAC2U,EAAD,CAAcnC,WAAYA,KAE1B,SAACkB,EAAD,CAAOC,MAAOA,EAAOC,MAAOA,EAAO3J,QAASA,KAE5C,SAAC,KAAD,CAAaf,WAAS,EAAtB,UACE,SAAC,IAAD,CACEnJ,GAAG,kFACHC,GAAG,oFAIP,SAAC,IAAD,CAAUwE,MAAOqR,EAAOxO,MAAOmO,EAAYpO,MAAOoO,EAAa,KAE/D,SAAC,IAAD,CACEhS,SArCqB,SAACmI,GAC1B,IAAMiI,EAAkB,GAClBoC,EAAoB,GAC1BrK,EAAQiI,MAAMqC,SAAQ,SAAC9B,EAAcvP,GAC/BqQ,EAAWiB,SAAStR,GACtBoR,EAAQG,KAAKhC,GAEbP,EAAMuC,KAAKhC,MAIfW,EAAc,CACZlB,MAAAA,EACAoC,QAAAA,KAyBErS,SAAS,QACTF,cAAeuR,EACfpR,eAAgB0Q,EAChB5Q,aAAcyR,EACdtR,oBAAqB,CACnB0Q,eAvDe,SAAChQ,EAAY8P,GAClC,IAAMzP,EAAQC,OAAON,EAAGG,MAAMC,EAAAA,IAAW,IACzCuQ,GAAc,SAACpQ,GACb,IAAIsR,GAAK,OAAOtR,GAChB,OAAIuP,GACF+B,EAAMD,KAAKvR,GACJwR,GAEFA,EAAMlG,QAAO,SAAC7L,GAAD,OAAOA,IAAMO,SAgD7BhC,SAAUuS,GAEZpR,kBACEkR,EAAW9T,OAAS,GAClB,8BACG6T,EAAiB,GAChB,SAAC,IAAD,CAAWjV,GAAG,2BAA2BC,GAAG,4BAE5C,SAAC,IAAD,CAAWD,GAAG,kBAAkBC,GAAG,kBAIvC,iCACE,SAAC,IAAD,CAAWD,GAAG,cAAcC,GAAG,cAC9BgV,EAAiB,GAAK,OAI7BlR,kBAAmB,CACjBpB,MAAM,SAAC6G,EAAA,EAAD,IACNhL,KAAM,WAIT0W,EAAW9T,OAAS,IACnB,SAAC,KAAD,CAAa1C,WAAWsI,EAAAA,EAAAA,IAAkB,UAA1C,UACE,SAAC,IAAD,CACEzH,KAAK,UACL+W,UAAQ,EACRhQ,SACE,SAAC,IAAD,CACEtG,IACE,qHAC4E,IACzEgV,EAFH,gFAKF/U,IACE,oGACoE+U,EAAkB,IADtF,qFAWZ,SAAC,KAAD,WACE,SAAC,IAAD,CACEzV,KAAK,OACL+W,UAAQ,EACRvQ,YACuB,IAArBiP,GACE,SAAC,IAAD,CACEhV,IACE,kPAG8B,kBAH9B,sBAGwDgV,EAHxD,uCAOF/U,IACE,wPAIE,kBAJF,wBAI8B+U,EAJ9B,2BASJ,SAAC,IAAD,CACEhV,IACE,oDACoBgV,EADpB,sLAMF/U,IACE,iDACiB+U,EADjB,wM,aCrMX,SAASuB,EAAT,GAA8D,IAApCzI,EAAmC,EAAnCA,WACvBnO,GAAcC,EAAAA,EAAAA,MAAdD,UAER,OACE,SAAC,KAAD,CAAMtB,OAAQsB,EAAU,kBAAmB,eAAgBpB,MAAM,MAAjE,SACGuP,ICJA,SAAS0I,EAAT,GAAgG,IAAnE/D,EAAkE,EAAlEA,WAAY3E,EAAsD,EAAtDA,WAAY2I,EAA0C,EAA1CA,eAC1D,OACE,UAAC,IAAD,CAAO/X,UAAU,6BAAjB,WACE,SAACkW,EAAD,CAAcnC,WAAYA,IACzBgE,IAAkB,SAACF,EAAD,CAAgBzI,WAAYA,OCG9C,SAAS4I,EAAT,GAAmG,IAAxExM,EAAuE,EAAvEA,QAAS0J,EAA8D,EAA9DA,MAAOC,EAAuD,EAAvDA,MAAO/F,EAAgD,EAAhDA,WAAY2E,EAAoC,EAApCA,WAC3D9S,GAAcC,EAAAA,EAAAA,MAAdD,UAER,OACE,UAAC,IAAD,CAAMqJ,WAAS,EAAf,WACE,SAAC,KAAD,CACEkB,QAASA,EACT1J,MAAOb,EAAU,UAAW,eAC5B2K,aACE,SAAC,IAAD,CAAWtK,GAAG,yCAAsCC,GAAG,qCAI3D,SAACuW,EAAD,CAAmB/D,WAAYA,EAAY3E,WAAYA,EAAY2I,gBAAc,KAEjF,SAAC9C,EAAD,CAAOzJ,QAASA,EAAS2J,MAAOA,EAAOD,MAAOA,OC2DpD,MA3EA,YAAkE,IAAD,EAApCnJ,EAAoC,EAApCA,MAAOP,EAA6B,EAA7BA,QAASQ,EAAoB,EAApBA,KACnC/K,GAAcC,EAAAA,EAAAA,MAAdD,UACR,GAAwCoL,EAAAA,EAAAA,IAAQ,GAAxCC,EAAR,EAAQA,KAAME,EAAd,EAAcA,QAASD,EAAvB,EAAuBA,aACvB,GAA8BJ,EAAAA,EAAAA,IAAoB,SAAUJ,EAAOP,GAAnE,eAAOqJ,EAAP,KAAaC,EAAb,KAEMuB,Eb4BD,SAA0C7J,GAC/C,IAAQvL,GAAcC,EAAAA,EAAAA,MAAdD,UAEFwL,GAAUC,EAAAA,EAAAA,IAAW,CACzBC,YAAaiH,EAAAA,GAAAA,aACb/G,WAAY,sBACZC,aAAc,kBAAMN,EAAQ,IAC5BO,QAAS,kBAAMP,EAAQ,IACvBQ,eAAgB/L,EAAU,4BAA6B,2BACvDgM,aAAchM,EACZ,6DACA,+CAIJ,OAAO,SAACiM,GACNT,GAAQ,QACNU,OAAQ,gBACLD,Ka9Ce+K,CAAiCzL,GAEvD,OACE,SAAC,KAAD,CAAgBR,KAAMA,EAAMqB,MAAK,OAAEtB,QAAF,IAAEA,OAAF,EAAEA,EAAOsB,MAAOC,aAAcC,EAAAA,EAAAA,oBAAAA,cAA/D,UACE,UAAC,IAAD,CACEjB,KAAMA,EACNd,QAASA,EACT0M,oBAAoB,SAACjD,EAAD,CAAOzJ,QAASA,EAAS2J,MAAOpJ,EAAMoJ,MAAOD,MAAOnJ,EAAMmJ,QAHhF,WAME,SAAC,IAAD,CACEpN,MAAK,OAAEiE,QAAF,IAAEA,OAAF,EAAEA,EAAOjE,MACdC,cAAewE,EACfvE,WAAW,IACXC,KAAM,EACNE,YAAY,MALd,UAOE,SAAC,KAAD,CAAuBL,MAAOiE,EAAMjE,WAItC,SAAC,KAAD,CACEjH,KAAK,aACLiB,MAAOb,EAAU,aAAW,WAC5BwM,QAASlB,EACTmB,aAAY,OAAE3B,QAAF,IAAEA,GAAF,UAAEA,EAAOjE,aAAT,aAAE,EAAcS,QAC5BjB,SAAU,EALZ,UAOE,SAAC,KAAD,WACE,SAAC,IAAD,CACEhG,IACE,sPAMFC,IAAI,8CAMV,UAAC,KAAD,CAAQiI,YAAasL,EAArB,WACE,SAACkD,EAAD,CACE5I,WAAYrD,EAAMqD,WAClB8F,MAAOnJ,EAAMmJ,MACbC,MAAOpJ,EAAMoJ,MACbpB,WAAYhI,EAAMgI,WAClBvI,QAASA,KAGX,SAAC4K,EAAD,CACEhH,WAAYrD,EAAMqD,WAClB8F,MAAOnJ,EAAMmJ,MACbC,MAAOpJ,EAAMoJ,MACbpB,WAAYhI,EAAMgI,WAClBsC,cAAeA,EACfxB,KAAMA,EACNyB,iBAAkBvK,EAAMuK,iBACxBC,eAAgBxK,EAAMwK,eACtB/K,QAASA,EACT1D,MAAOiE,EAAMjE,iB,WCxElB,SAASqQ,GAAT,GAA8F,IAApEjG,EAAmE,EAAnEA,QAASL,EAA0D,EAA1DA,gBAAiByE,EAAyC,EAAzCA,iBACzD,OACE,iCACE,SAAC,KAAD,KAEA,SAAC,KAAD,CAAa7L,WAAS,EAAtB,SACGyH,GAAuB,aAAZA,GACV,SAAC,IAAD,CACErR,KAAK,UACL+W,UAAQ,EACRhQ,SACE,iCACE,SAAC,KAAD,CAAQ9B,GAAG,IAAIhG,KAAK,UAAW,KAC/B,SAAC,IAAD,CACEwB,GAAG,sFACHC,GAAG,sGAMX,SAAC,IAAD,CACED,GAAG,2EACHC,GAAG,uEAKT,iBAAKvB,UAAU,mBAAf,WACE,iBAAKA,UAAU,SAAf,WACE,SAAC,KAAD,CAAayK,WAAS,EAAtB,UACE,SAAC,IAAD,CACEnJ,GAAG,oDACHC,GAAG,8CAGP,SAAC,IAAD,CACEV,KAAK,UACLkB,OAAK,EACLC,QAAS,kBACP6P,EAAgB,CACdK,QAAS,SALf,UASE,SAAC,IAAD,CAAW5Q,GAAG,YAAYC,GAAG,eAGjC,iBAAKvB,UAAU,SAAf,WACE,SAAC,KAAD,CAAayK,WAAS,EAAtB,UACE,SAAC,IAAD,CACEnJ,GAAG,kDACHC,GAAG,gDAGP,SAAC,IAAD,CACEgR,QAAM,EACNxQ,OAAK,EACLC,QAAS,kBACP6P,EAAgB,CACdK,QAAS,UALf,UASE,SAAC,IAAD,CAAW5Q,GAAG,YAAYC,GAAG,eAGjC,iBAAKvB,UAAU,SAAf,WACE,UAAC,KAAD,CAAayK,WAAS,EAAtB,WACE,SAAC,IAAD,CACEnJ,GAAG,gDACHC,GAAG,uDACF,IAJL,IAKI+U,EALJ,QAOA,SAAC,IAAD,CACEzV,KAAK,UACL0R,QAAM,EACNxQ,OAAK,EACLC,QAAS,kBACP6P,EAAgB,CACdK,QAAS,UAGb/N,SAAUmS,GAAoB,EAThC,UAWE,SAAC,IAAD,CAAWhV,GAAG,YAAYC,GAAG,oB,oCCrFlC,SAAS6W,GAAT,GAA+F,IAArEjD,EAAoE,EAApEA,MAAOkD,EAA6D,EAA7DA,iBAAkBC,EAA2C,EAA3CA,mBACxD,GAAoCxX,EAAAA,EAAAA,UAClCuX,EAAiBlD,MAAMoD,QAAO,SAACC,EAAwBhD,GAErD,OADAgD,EAAIhD,IAAU,EACPgD,IACN,KAJL,eAAO7C,EAAP,KAAmB8C,EAAnB,KAWA,OACE,iCACE,SAAC,KAAD,CAAahO,WAAS,EAAtB,UACE,SAAC,IAAD,CACEnJ,IACE,8FAEE,kBAFF,sFAKFC,IACE,iKAQN,gBAAIvB,UAAU,oBAAd,UACG2G,OAAOyD,KAAKuL,GAAY5R,KAAI,SAACyR,GAC5B,OACE,gBAAIxV,UAAU,0BAAd,WACE,SAAC,IAAD,CACEiW,iBACE,iCACE,SAAC3D,GAAA,EAAD,IADF,KACoB,SAAC,IAAD,CAAWhR,GAAG,YAAYC,GAAG,eAGnDyU,mBACE,iCACE,SAAC/F,GAAA,EAAD,IADF,KACoB,SAAC,IAAD,CAAW3O,GAAG,aAAaC,GAAG,uBAGpD6M,SAAU,SAACxI,GAAD,OAtCC,SAAC4P,EAAgBzP,GACxC0S,GAAc,SAACpS,GAAD,eAAC,UAAYA,GAAb,eAAiBmP,EAASzP,OAqCX2S,CAAiBlD,EAAQ5P,OAG5C,iBAAM5F,UAAU,0BAAhB,SAA2CmV,EAAMK,GAAQE,cAK/D,SAAC,IAAD,CAAO1V,UAAU,kBAAjB,UACE,SAAC,IAAD,CAAQa,KAAK,UAAUf,KAAK,QAAQkC,QAAS,kBAAMsW,EAAmB,CAAE3C,WAAAA,KAAxE,UACE,SAAC,IAAD,CAAWrU,GAAG,yBAAmBC,GAAG,gCC7CzC,SAASoX,GAAT,GAYsB,IAX3BvJ,EAW0B,EAX1BA,WACA2E,EAU0B,EAV1BA,WACAuE,EAS0B,EAT1BA,mBACAzG,EAQ0B,EAR1BA,gBAEAqD,GAM0B,EAP1B0D,aAO0B,EAN1B1D,OACAC,EAK0B,EAL1BA,MACAmB,EAI0B,EAJ1BA,iBACA9K,EAG0B,EAH1BA,QACA1D,EAE0B,EAF1BA,MACAoK,EAC0B,EAD1BA,QAEMmG,EAAmBnD,EAAMpN,EAAMS,SAErC,OACE,UAAC,IAAD,CAAM+B,WAAS,EAAf,WACE,SAAC,KAAD,CAAOxK,KAAK,SAAZ,UACE,SAAC,IAAD,CAAWwB,GAAG,kBAAYC,GAAG,uBAG/B,SAACuW,EAAD,CAAmB/D,WAAYA,EAAY3E,WAAYA,EAAY2I,gBAAc,KAEjF,SAAC9C,EAAD,CAAOC,MAAOA,EAAOC,MAAOA,EAAO3J,QAASA,KAE5C,SAAC4M,GAAD,CACEjD,MAAOA,EACPkD,iBAAkBA,EAClBC,mBAAoBA,KAGtB,SAACH,GAAD,CACEjG,QAASA,EACTL,gBAAiBA,EACjByE,iBAAkBA,OCtCnB,SAASuC,GAAT,GAO6B,IANlC9E,EAMiC,EANjCA,WACAmB,EAKiC,EALjCA,MACAC,EAIiC,EAJjCA,MACAmB,EAGiC,EAHjCA,iBACAzB,EAEiC,EAFjCA,KACArJ,EACiC,EADjCA,QAEA,OACE,UAAC,IAAD,CAAMlB,WAAS,EAAf,WACE,SAAC,KAAD,CAAOxK,KAAK,SAAZ,UACE,SAAC,IAAD,CAAWwB,GAAG,kBAAYC,GAAG,uBAG/B,SAAC2U,EAAD,CAAcnC,WAAYA,KAE1B,SAAC,KAAD,CAAatJ,WAAS,EAAtB,UACE,SAAC,IAAD,CACEnJ,IACE,mGACiE,SAAC,KAAD,CAAYkJ,OAAQqK,IADrF,iBAKFtT,IACE,mFACiD,SAAC,KAAD,CAAYiJ,OAAQqK,IADrE,+BAON,SAAC,IAAD,CACEhU,KAAK,UACL+W,UAAQ,EACRhQ,SACE,iCACE,SAAC,KAAD,CAAQ9B,GAAG,IAAIhG,KAAK,WACpB,SAAC,IAAD,CACEwB,IAAI,6DAA0B,EAAIgV,EAA9B,oCACJ/U,IAAI,6DAA6B,EAAI+U,EAAjC,yCAMZ,SAACrB,EAAD,CAAOC,MAAOA,EAAOC,MAAOA,EAAO3J,QAASA,OCelD,OA9DA,YAAqE,IAAD,EAApCO,EAAoC,EAApCA,MAAOP,EAA6B,EAA7BA,QAASQ,EAAoB,EAApBA,KACtC/K,GAAcC,EAAAA,EAAAA,MAAdD,UACR,GAAwCoL,EAAAA,EAAAA,IAAQ,GAAxCC,EAAR,EAAQA,KAAME,EAAd,EAAcA,QAASD,EAAvB,EAAuBA,aACvB,GAA8BJ,EAAAA,EAAAA,IAAoB,SAAUJ,EAAOP,GAAnE,eAAOqJ,EAAP,KAAaC,EAAb,KAEMwD,ElBiDD,SAAyC9L,GAC9C,IAAQvL,GAAcC,EAAAA,EAAAA,MAAdD,UAEFwL,GAAUC,EAAAA,EAAAA,IAAW,CACzBC,YAAaiH,EAAAA,GAAAA,aACb/G,WAAY,oBACZC,aAAc,kBAAMN,EAAQ,IAC5BO,QAAS,kBAAMP,EAAQ,IACvBQ,eAAgB/L,EAAU,uCAAkC,iCAC5DgM,aAAchM,EACZ,wEACA,qDAIJ,OAAO,SAACiM,GACNT,GAAQ,QACNU,OAAQ,qBACLD,KkBnEoB4L,CAAgCtM,GACrDqF,ElBuED,SAAsCrF,GAC3C,IAAQvL,GAAcC,EAAAA,EAAAA,MAAdD,UAEFwL,GAAUC,EAAAA,EAAAA,IAAW,CACzBC,YAAaiH,EAAAA,GAAAA,aACb/G,WAAY,iBACZC,aAAc,kBAAMN,EAAQ,IAC5BO,QAAS,kBAAMP,EAAQ,IACvBQ,eAAgB/L,EAAU,iCAAkC,8BAC5DgM,aAAchM,EACZ,2DACA,kDAIJ,OAAO,SAACiM,GACNT,GAAQ,QACNU,OAAQ,kBACLD,KkBzFiBsF,CAA6BhG,GAC/CoM,ElB6FD,SAAmCpM,GACxC,IAAQvL,GAAcC,EAAAA,EAAAA,MAAdD,UAEFwL,GAAUC,EAAAA,EAAAA,IAAW,CACzBC,YAAaiH,EAAAA,GAAAA,aACb/G,WAAY,cACZC,aAAc,kBAAMN,EAAQ,IAC5BO,QAAS,kBAAMP,EAAQ,IACvBQ,eAAgB/L,EAAU,6BAA8B,2BACxDgM,aAAchM,EACZ,8DACA,+CAIJ,OAAO,SAACiM,GACNT,GAAQ,QACNU,OAAQ,eACLD,KkB/Gc6L,CAA0BvM,GAE/C,OACE,SAAC,KAAD,CACER,KAAMA,EACNqB,MAAK,OAAEtB,QAAF,IAAEA,OAAF,EAAEA,EAAOsB,MACdC,aAAcC,EAAAA,EAAAA,oBAAAA,iBAHhB,UAKE,UAAC,IAAD,CAAcjB,KAAMA,EAAMd,QAASA,EAAnC,WAEE,SAAC,KAAD,CACE3K,KAAK,QACLiB,MAAOb,EAAU,6BAAwB,mBACzCwM,QAASlB,EACTmB,aAAY,OAAE3B,QAAF,IAAEA,GAAF,UAAEA,EAAOjE,aAAT,aAAE,EAAcS,QAC5BjB,SAAU,EALZ,UAOE,SAAC,KAAD,WACE,SAAC,IAAD,CACEhG,IAAI,6GACJC,IAAI,kGAMV,UAAC,KAAD,CAAQiI,YAAasL,EAArB,WACE,SAAC6D,GAAD,CACEvJ,WAAYrD,EAAMqD,WAClB8F,MAAOnJ,EAAMmJ,MACbC,MAAOpJ,EAAMoJ,MACbpB,WAAYhI,EAAMgI,WAClBuE,mBAAoBA,EACpBzG,gBAAiBA,EACjB+G,aAAcA,EACdtC,iBAAkBvK,EAAMuK,iBACxB9K,QAASA,EACT1D,MAAOiE,EAAMjE,MACboK,QAASnG,EAAMmG,WAGjB,SAAC2G,GAAD,CACE3D,MAAOnJ,EAAMmJ,MACbC,MAAOpJ,EAAMoJ,MACbpB,WAAYhI,EAAMgI,WAClBc,KAAMA,EACNyB,iBAAkBvK,EAAMuK,iBACxB9K,QAASA,a,WCrCrB,OA3BA,YAA8D,IAArCO,EAAoC,EAApCA,MAAOP,EAA6B,EAA7BA,QAASQ,EAAoB,EAApBA,KACvC,OACE,UAAC,KAAD,CACEA,KAAMA,EACND,MAAOA,EACP2G,iBAAoC,QAAlB3G,EAAMmG,QAAoB,SAAW,UACvD8G,sBAAsB,SAAC,IAAD,CAAW1X,GAAG,2BAA2BC,GAAG,yBAJpE,WAME,SAAC,IAAD,CAAOvB,UAAU,kBAAkBgH,UAAU,WAAWF,MAAM,SAA9D,SACqB,QAAlBiF,EAAMmG,SACL,iCACE,SAAC,KAAD,CAAYrR,KAAK,eAAef,KAAM,IAAK6E,MAAM,YACjD,SAAC,IAAD,CAAWrD,GAAG,aAAUC,GAAG,YAG7B,iCACE,SAAC,KAAD,CAAYV,KAAK,UAAUf,KAAM,IAAK6E,MAAM,YAC5C,SAAC,IAAD,CAAWrD,GAAG,UAAUC,GAAG,eAIjC,SAACuW,EAAD,CAAmB/D,WAAYhI,EAAMgI,WAAY3E,WAAYrD,EAAMqD,WAAY2I,gBAAc,KAC7F,SAAC9C,EAAD,CAAOzJ,QAASA,EAAS2J,MAAOpJ,EAAMoJ,MAAOD,MAAOnJ,EAAMmJ,YCgBhE,OAjCA,YAA6D,IAAzBvC,EAAwB,EAAxBA,OAwBlC,OACE,SAAC,IAAD,CACEA,OAAQA,EACRC,eAAgBC,EAAAA,GAAAA,oBAChBC,mBA3BJ,SAA4BzF,GAC1B,OAAQA,GACN,KAAKE,EAAAA,EAAAA,QAAAA,MACH,OAAOwF,EAAAA,GACT,KAAKxF,EAAAA,EAAAA,QAAAA,MACH,OAAOyF,EAAAA,GACT,KAAKzF,EAAAA,EAAAA,QAAAA,MACH,OAAO0F,EAAAA,GACT,KAAK1F,EAAAA,EAAAA,oBAAAA,eACH,OAAO0L,EACT,KAAK1L,EAAAA,EAAAA,oBAAAA,sBACH,OAAO2L,EACT,KAAK3L,EAAAA,EAAAA,oBAAAA,cACH,OAAO4L,EACT,KAAK5L,EAAAA,EAAAA,oBAAAA,iBACH,OAAO6L,GACT,KAAK7L,EAAAA,EAAAA,QAAAA,UACH,OAAO+F,GACT,QACE,OAAOC,EAAAA,Q,6EC/Bf,EAD0B,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,0JAA6J,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,gqBAAoqB,KAAQ,eAAgB,MAAS,Y,UCMhiCzI,EAAsB,SAA6B3I,EAAOkX,GAC5D,OAAoBC,EAAAA,cAAoBC,EAAAA,GAAUC,EAAAA,EAAAA,IAAcA,EAAAA,EAAAA,GAAc,GAAIrX,GAAQ,GAAI,CAC5FkX,IAAKA,EACLpV,KAAMwV,MAIV3O,EAAoB4O,YAAc,sBAClC,MAA4BJ,EAAAA,WAAiBxO,I,4ECb7C,EADyB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,8LAAiM,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,8IAAkJ,KAAQ,cAAe,MAAS,Y,UCMhjB5G,EAAqB,SAA4B/B,EAAOkX,GAC1D,OAAoBC,EAAAA,cAAoBC,EAAAA,GAAUC,EAAAA,EAAAA,IAAcA,EAAAA,EAAAA,GAAc,GAAIrX,GAAQ,GAAI,CAC5FkX,IAAKA,EACLpV,KAAM0V,MAIVzV,EAAmBwV,YAAc,qBACjC,MAA4BJ,EAAAA,WAAiBpV,I,6ECb7C,EADoB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,gGAAoG,KAAQ,QAAS,MAAS,Y,UCMrR+N,EAAgB,SAAuB9P,EAAOkX,GAChD,OAAoBC,EAAAA,cAAoBC,EAAAA,GAAUC,EAAAA,EAAAA,IAAcA,EAAAA,EAAAA,GAAc,GAAIrX,GAAQ,GAAI,CAC5FkX,IAAKA,EACLpV,KAAM2V,MAIV3H,EAAcyH,YAAc,gBAC5B,MAA4BJ,EAAAA,WAAiBrH,I,6ECb7C,EADuB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,6LAAgM,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,oLAAwL,KAAQ,YAAa,MAAS,Y,UCMjlBrN,EAAmB,SAA0BzC,EAAOkX,GACtD,OAAoBC,EAAAA,cAAoBC,EAAAA,GAAUC,EAAAA,EAAAA,IAAcA,EAAAA,EAAAA,GAAc,GAAIrX,GAAQ,GAAI,CAC5FkX,IAAKA,EACLpV,KAAM4V,MAIVjV,EAAiB8U,YAAc,mBAC/B,MAA4BJ,EAAAA,WAAiB1U,I,6ECb7C,EADsB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,6SAAiT,KAAQ,UAAW,MAAS,Y,UCMteqK,EAAkB,SAAyB9M,EAAOkX,GACpD,OAAoBC,EAAAA,cAAoBC,EAAAA,GAAUC,EAAAA,EAAAA,IAAcA,EAAAA,EAAAA,GAAc,GAAIrX,GAAQ,GAAI,CAC5FkX,IAAKA,EACLpV,KAAM6V,MAIV7K,EAAgByK,YAAc,kBAC9B,MAA4BJ,EAAAA,WAAiBrK,I","sources":["components/cards/Card.tsx","components/cards/FloatingHand.tsx","components/cards/ImageBlurButton.tsx","components/cards/ImageBlurButtonContainer.tsx","components/cards/ImageCard.tsx","components/cards/ImageCardHand.tsx","components/cards/ImageCardBack.tsx","components/cards/ImageCardPreloadHand.tsx","components/cards/ImageCardSelectButton.tsx","components/input/ControlledInputWriting.tsx","components/pop-up/messageContent.tsx","assets/images/round-title-en.svg","assets/images/round-title-pt.svg","components/round/RoundAnnouncement.tsx","components/timers/TimerBar.tsx","components/views/View.tsx","components/views/ViewIf.tsx","components/views/ViewOr.tsx","components/views/ViewSwitch.tsx","games/ue-so-isso/StepWordSelection.tsx","games/ue-so-isso/components/GameProgressBar.tsx","games/ue-so-isso/components/GuesserWaitingRoom.tsx","games/ue-so-isso/PhaseWordSelection.tsx","games/ue-so-isso/utils/api-requests.ts","games/ue-so-isso/utils/mock.ts","games/ue-so-isso/components/SuggestionEasel.tsx","games/ue-so-isso/components/RulesBlobs.tsx","games/ue-so-isso/components/UeSoIssoCard.tsx","games/ue-so-isso/StepSuggestion.tsx","games/ue-so-isso/PhaseSuggest.tsx","games/ue-so-isso/components/SuggestionCard.tsx","games/ue-so-isso/components/Cards.tsx","games/ue-so-isso/StepCompareSuggestions.tsx","games/ue-so-isso/PhaseCompare.tsx","games/ue-so-isso/components/Guess.tsx","games/ue-so-isso/StepGuessing.tsx","games/ue-so-isso/StepGuessVerification.tsx","games/ue-so-isso/PhaseGuess.tsx","games/ue-so-isso/PhaseGameOver.tsx","games/ue-so-isso/SessionUeSoIsso.tsx","games/vendaval-de-palpite/StepBossPlayerSelection.tsx","games/vendaval-de-palpite/PhaseBossPlayerSelection.tsx","games/vendaval-de-palpite/utils/api-requests.ts","games/vendaval-de-palpite/StepSecretWordSelection.tsx","games/vendaval-de-palpite/StepWaiting.tsx","games/vendaval-de-palpite/PhaseSecretWordSelection.tsx","games/vendaval-de-palpite/utils/mock.ts","games/vendaval-de-palpite/utils/constants.ts","games/vendaval-de-palpite/components/Board.tsx","games/vendaval-de-palpite/components/ClueInput.tsx","games/vendaval-de-palpite/components/CategoryCard.tsx","games/vendaval-de-palpite/StepPlayerClue.tsx","games/vendaval-de-palpite/components/SecretWordCard.tsx","games/vendaval-de-palpite/components/CategoryWordGroup.tsx","games/vendaval-de-palpite/StepBossWaiting.tsx","games/vendaval-de-palpite/PhasePlayersClues.tsx","games/vendaval-de-palpite/components/OutcomeOptions.tsx","games/vendaval-de-palpite/components/ClueEvaluation.tsx","games/vendaval-de-palpite/StepBossEvaluation.tsx","games/vendaval-de-palpite/StepPlayersWaitEvaluation.tsx","games/vendaval-de-palpite/PhaseClueEvaluations.tsx","games/vendaval-de-palpite/PhaseGameOver.tsx","games/vendaval-de-palpite/SessionVendavalDePalpite.tsx","../node_modules/@ant-design/icons-svg/es/asn/CloudUploadOutlined.js","../node_modules/@ant-design/icons/es/icons/CloudUploadOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/DownSquareOutlined.js","../node_modules/@ant-design/icons/es/icons/DownSquareOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/MinusOutlined.js","../node_modules/@ant-design/icons/es/icons/MinusOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/UpCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/UpCircleOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/WarningOutlined.js","../node_modules/@ant-design/icons/es/icons/WarningOutlined.js"],"sourcesContent":["import clsx from 'clsx';\n// Utils\nimport { getColorFromLetter } from 'utils/helpers';\n\ntype CardProps = {\n  children: any;\n  header?: string;\n  footer?: string;\n  color?: string;\n  size?: 'small' | 'medium' | 'large';\n  randomColor?: boolean;\n  className?: string;\n  headerClassName?: string;\n  footerClassName?: string;\n};\nexport const Card = ({\n  children,\n  header = 'Carta',\n  footer,\n  color = 'none',\n  size = 'medium',\n  randomColor = false,\n  className = '',\n  headerClassName = '',\n  footerClassName = '',\n}: CardProps) => {\n  const baseClass = 'card';\n\n  const bgColor = randomColor\n    ? getColorFromLetter(\n        typeof children === 'string'\n          ? children[0].toUpperCase()\n          : header !== 'Carta'\n          ? header[0].toUpperCase()\n          : 'X'\n      )\n    : color;\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, className)}>\n      <span\n        className={clsx(`${baseClass}__header`, `color-background--${bgColor}`, headerClassName)}\n        style={color.startsWith('#') ? { backgroundColor: color } : {}}\n      >\n        {header}\n      </span>\n      <span className={`${baseClass}__text`}>{children}</span>\n      {footer && <span className={clsx(`${baseClass}__footer`, footerClassName)}>{footer}</span>}\n    </div>\n  );\n};\n","import clsx from 'clsx';\nimport { useState } from 'react';\n// Hooks\nimport { useLanguage } from 'hooks';\n// Components\nimport { AvatarIcon } from 'components/avatars';\nimport { Translate } from 'components/language';\n\ntype FloatingHandProps = {\n  children: any;\n  type?: 'hand' | 'stats';\n  subtitle?: any;\n};\n\nexport function FloatingHand({ children, subtitle = '', type = 'hand' }: FloatingHandProps) {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const { translate } = useLanguage();\n\n  return (\n    <>\n      <div className=\"floating-hand-added-white-space\"></div>\n      <div\n        className={clsx('floating-hand', isExpanded && 'floating-hand--expanded')}\n        onMouseOver={() => setIsExpanded(true)}\n        onMouseLeave={() => setIsExpanded(false)}\n      >\n        <span className=\"floating-hand__label\">\n          <AvatarIcon\n            type={type === 'hand' ? 'hand-of-cards' : 'user-stats'}\n            size={isExpanded ? 40 : 60}\n            className=\"floating-hand__icon\"\n            alt={translate('Mão de Cartas', 'Hand of Cards')}\n          />\n          <Translate pt=\"Passe o mouse para expandir \" en=\"Hover to expand \" />\n          {subtitle}\n        </span>\n        {children}\n      </div>\n    </>\n  );\n}\n","// Ant Design Resources\nimport { Button, Tooltip } from 'antd';\nimport { EyeInvisibleOutlined } from '@ant-design/icons';\n// Utils\nimport { useBlurCards } from 'hooks';\n// Components\nimport { Translate } from 'components/language';\n\ntype ImageBlurButtonProps = {\n  cardId: string;\n};\n\nexport function ImageBlurButton({ cardId }: ImageBlurButtonProps) {\n  const { blurCard, isBlurEnabled } = useBlurCards();\n\n  return isBlurEnabled ? (\n    <Tooltip\n      placement=\"top\"\n      title={\n        <Translate\n          pt=\"Aperte o botão para embaçar a foto caso você tenha alguma fobia\"\n          en=\"Use this button to blur the image in case of any phobia\"\n        />\n      }\n    >\n      <Button ghost onClick={() => blurCard(cardId)} size=\"small\" className=\"image-blur-button\">\n        <EyeInvisibleOutlined /> <Translate pt=\"Credo\" en=\"Blur\" />\n      </Button>\n    </Tooltip>\n  ) : (\n    <></>\n  );\n}\n","import clsx from 'clsx';\n// Components\nimport { ImageBlurButton } from './ImageBlurButton';\n\ntype ImageBlurButtonContainerProps = {\n  cardId: string;\n  className?: string;\n  children: any;\n  [key: string]: any;\n};\n\nexport function ImageBlurButtonContainer({\n  cardId,\n  className,\n  children,\n  ...props\n}: ImageBlurButtonContainerProps) {\n  return (\n    <div className={clsx('image-blur-button-container', className)} {...props}>\n      {children}\n      <ImageBlurButton cardId={cardId} />\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Image } from 'antd';\n// Constants\nimport { PUBLIC_URL } from 'utils/constants';\n// Assets\nimport placeholder from 'assets/images/placeholder.jpg';\n// Hooks\nimport { useBlurCards } from 'hooks';\n\ntype ImageCardProps = {\n  imageId: string;\n  size?: 'small' | 'medium' | 'large';\n  cardWidth?: number;\n  className?: string;\n  preview?: Boolean;\n};\nexport const ImageCard = ({\n  imageId,\n  size = 'medium',\n  cardWidth = 200,\n  className = '',\n  preview = true,\n}: ImageCardProps) => {\n  const { shouldBeBlurred } = useBlurCards();\n\n  const baseClass = 'image-card';\n\n  const fallbackName = `placeholder-${imageId[imageId.length - 1]}`;\n\n  const imageURL = imageId.replace(/-/g, '/');\n\n  const isBlurred = shouldBeBlurred(imageId);\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, isBlurred && `${baseClass}--blur`, className)}>\n      <Image\n        width={cardWidth}\n        src={`${process.env.REACT_APP_TD_IMAGES_URL}${imageURL}.jpg`}\n        placeholder={<Image preview={false} src={placeholder} width={cardWidth} />}\n        fallback={`${PUBLIC_URL.CARDS}${fallbackName}.jpg`}\n        preview={\n          preview && !isBlurred\n            ? {\n                maskClassName: `${baseClass}__preview-mask`,\n              }\n            : false\n        }\n      />\n    </div>\n  );\n};\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Image } from 'antd';\nimport { DownSquareOutlined } from '@ant-design/icons';\n// Hooks\nimport { useCardWidth, useLanguage } from 'hooks';\n// Components\nimport { ImageBlurButton, ImageCard } from '.';\n\ntype ImageCardHandProps = {\n  hand: string[];\n  onSelectCard?: GenericFunction;\n  selectButtonLabel?: string;\n  className?: string;\n  selectButtonClass?: string;\n  sizeRatio?: number;\n  cardSize?: number;\n  minCardSize?: number;\n  disabledSelectButton?: boolean;\n};\n\nexport function ImageCardHand({\n  hand = [],\n  onSelectCard,\n  selectButtonLabel,\n  className = '',\n  selectButtonClass = '',\n  sizeRatio = 8,\n  cardSize,\n  minCardSize = 80,\n  disabledSelectButton = false,\n}: ImageCardHandProps) {\n  const { translate } = useLanguage();\n  // Prefers cardSize otherwise calculates width based on screen and ratio\n  const cardWidth = useCardWidth(sizeRatio, 32, minCardSize);\n\n  return (\n    <Image.PreviewGroup>\n      <div className={clsx('image-card-hand', className)}>\n        {hand.map((cardId) => {\n          return (\n            <div key={`hand-${cardId}`} className=\"image-card-hand__card-container\">\n              {Boolean(onSelectCard) && (\n                <Button\n                  icon={<DownSquareOutlined />}\n                  className={selectButtonClass}\n                  onClick={() => onSelectCard!(cardId)}\n                  size=\"small\"\n                  disabled={disabledSelectButton}\n                >\n                  {translate('Selecionar', 'Select', selectButtonLabel)}\n                </Button>\n              )}\n              <ImageCard imageId={cardId} cardWidth={cardSize || cardWidth} />\n              <ImageBlurButton cardId={cardId} />\n            </div>\n          );\n        })}\n      </div>\n    </Image.PreviewGroup>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Image } from 'antd';\n// Resources\nimport placeholder from 'assets/images/placeholder.jpg';\nimport { useBlurCards } from 'hooks';\n\ntype ImageCardBackProps = {\n  size?: 'small' | 'medium' | 'large';\n  cardWidth?: number | string;\n  className?: string;\n  previewImageId?: string;\n};\n\nexport const ImageCardBack = ({\n  size = 'medium',\n  cardWidth = 200,\n  className = '',\n  previewImageId,\n}: ImageCardBackProps) => {\n  const baseClass = 'image-card-back';\n  const { shouldBeBlurred } = useBlurCards();\n  const isBlurred = shouldBeBlurred(previewImageId);\n  const imageURL = (previewImageId ?? '').replace(/-/g, '/');\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, className)}>\n      <Image\n        width={cardWidth}\n        src={placeholder}\n        preview={\n          Boolean(previewImageId)\n            ? !isBlurred\n              ? {\n                  maskClassName: 'image-card__preview-mask',\n                  src: `${process.env.REACT_APP_TD_IMAGES_URL}${imageURL}.jpg`,\n                }\n              : false\n            : false\n        }\n      />\n    </div>\n  );\n};\n","// Components\nimport { ImageCard } from './ImageCard';\n\ntype ImageCardPreloadHandProps = {\n  hand: string[];\n};\nexport function ImageCardPreloadHand({ hand }: ImageCardPreloadHandProps) {\n  if (!hand) return <span></span>;\n  return (\n    <div className=\"image-card-preload-hand\">\n      {hand.map((cardId) => (\n        <ImageCard imageId={cardId} cardWidth={1} key={`pre-load-${cardId}`} preview={false} />\n      ))}\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Button } from 'antd';\nimport { UpCircleOutlined } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\n\ntype ImageCardSelectButtonProps = {\n  isSelected?: boolean;\n  cardId: ImageCard;\n  onClick: GenericFunction;\n  className?: string;\n  selectLabel?: string;\n  deselectLabel?: string;\n};\n\nexport function ImageCardSelectButton({\n  onClick,\n  cardId,\n  selectLabel,\n  deselectLabel,\n  isSelected = false,\n}: ImageCardSelectButtonProps) {\n  return (\n    <Button\n      shape=\"round\"\n      size=\"small\"\n      ghost={!isSelected}\n      className=\"image-card-select-button\"\n      onClick={() => onClick(cardId)}\n    >\n      <UpCircleOutlined />\n      {isSelected ? (\n        <Translate pt=\"Desmarcar\" en=\"Deselect\" custom={deselectLabel} />\n      ) : (\n        <Translate pt=\"Selecionar\" en=\"Select\" custom={selectLabel} />\n      )}\n      <UpCircleOutlined />\n    </Button>\n  );\n}\n","import { Button, ButtonProps, Space } from 'antd';\nimport { useLoading } from 'hooks';\nimport { ReactNode, useState } from 'react';\nimport { SEPARATOR } from 'utils/constants';\n\ntype ControlledInputWritingProps = {\n  onSubmit: Function;\n  valueKey: string;\n  inputQuantity?: number;\n  restrictMax?: boolean;\n  inputComponent: GenericComponent;\n  inputComponentProps?: PlainObject;\n  submitButtonProps?: ButtonProps;\n  submitButtonLabel: ReactNode;\n};\n\nexport function ControlledInputWriting({\n  onSubmit,\n  inputQuantity = 1,\n  restrictMax = true,\n  valueKey,\n  inputComponent,\n  inputComponentProps = {},\n  submitButtonProps = {},\n  submitButtonLabel,\n}: ControlledInputWritingProps) {\n  const [values, setValues] = useState([]);\n  const { isLoading } = useLoading();\n\n  const onChangeInput = (e: any) => {\n    const { id, value = '' } = e.target;\n    if (id) {\n      const indexStr = id.split(SEPARATOR)[1];\n      const index = Number(indexStr);\n      if (typeof index === 'number') {\n        setValues((s: any) => {\n          const newState = { ...s };\n          newState[index] = value.toUpperCase().trim();\n          return newState;\n        });\n      } else {\n        console.error(`Index ${indexStr} for ${id} is not a number`);\n      }\n    }\n  };\n\n  const valuesCount = Object.values(values);\n\n  // On enter in the easel if only one suggestion is necessary\n  const onPressEnter = () => {\n    if (restrictMax) {\n      if (inputQuantity === valuesCount.length) {\n        onSubmit({ [valueKey]: valuesCount });\n      }\n    } else {\n      onSubmit(valuesCount);\n    }\n  };\n\n  const InputComponent: any = inputComponent;\n\n  return (\n    <div className=\"full-width\">\n      <Space align=\"center\" className=\"full-width padding space-container\" wrap direction=\"horizontal\">\n        {Array(inputQuantity)\n          .fill(0)\n          .map((entry, index) => {\n            const id = `input${SEPARATOR}${entry + index}`;\n            return (\n              <InputComponent\n                key={id}\n                id={id}\n                onChangeInput={onChangeInput}\n                onPressEnter={onPressEnter}\n                disabled={isLoading}\n                {...inputComponentProps}\n              />\n            );\n          })}\n      </Space>\n\n      <Space align=\"center\" className=\"full-width padding space-container\">\n        <Button\n          type=\"primary\"\n          onClick={() => onSubmit({ [valueKey]: valuesCount })}\n          disabled={isLoading || restrictMax ? valuesCount.length < inputQuantity : false}\n          size=\"large\"\n          {...submitButtonProps}\n        >\n          {submitButtonLabel}\n        </Button>\n      </Space>\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { message } from 'antd';\n// Components\nimport { Icons } from 'components/icons';\nimport { Translate } from 'components/language';\n\n/**\n * Pops up a modal with a confirmation button but also closing timeout\n * @param title\n * @param description\n * @param id\n * @param duration\n * @returns\n */\nexport const messageContent = (title: string, description: string, id: string, duration = 30) => {\n  const key = `${id} - ${title}`;\n\n  return {\n    content: (\n      <div>\n        <h1>{title}</h1>\n        <p>{description}</p>\n        <p>\n          <small>\n            <Translate\n              pt=\"Popup fecha automaticamente ou clique para fechar\"\n              en=\"Auto-close or click to close\"\n            />\n          </small>\n        </p>\n      </div>\n    ),\n    top: window.innerWidth / 2 - 100,\n    duration,\n    key,\n    icon: <Icons.VideoGameController style={{ width: '64px' }} />,\n    onClick: () => message.destroy(key),\n  };\n};\n","var _style, _g, _g2, _g3, _g4, _g5, _g6, _g7, _g8;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRoundTitleEn(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 130 50\",\n    style: {\n      enableBackground: \"new 0 0 130 50\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:#9EC5E7;}\\n\\t.st1{fill:#FFFFFF;}\\n\\t.st2{fill:#3A7CA5;}\\n\\t.st3{fill:#44BBA4;}\\n\\t.st4{fill:#F2E863;}\\n\\t.st5{fill:#F45B69;}\\n\\t.st6{fill:#E6E6F5;}\\n\\t.st7{display:none;}\\n\\t.st8{display:inline;}\\n\\t.st9{display:inline;fill:none;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st10{fill:#DA70D6;}\\n\\t.st11{fill:#008080;}\\n\\t.st12{fill:#D2691E;}\\n\\t.st13{fill:#4682B4;}\\n\\t.st14{fill:#B22222;}\\n\\t.st15{fill:#DFB231;}\\n\\t.st16{fill:#FF6347;}\\n\\t.st17{fill:#9370DB;}\\n\\t.st18{fill:#3C58AC;}\\n\\t.st19{fill:#7CC44F;}\\n\\t.st20{fill:#040303;}\\n\\t.st21{fill:#FCBF00;}\\n\\t.st22{fill:#D70027;}\\n\\t.st23{fill:#EA384D;}\\n\\t.st24{fill:#BFB8B8;}\\n\\t.st25{fill:#F8EFEF;}\\n\\t.st26{fill:#FE2A25;}\\n\\t.st27{fill:#FE9A00;}\\n\\t.st28{fill:#FEE901;}\\n\\t.st29{fill:#FEF6A5;}\\n\\t.st30{fill:#FEF05C;}\\n\\t.st31{fill:#FEFDFD;}\\n\\t.st32{fill:url(#SVGID_1_);}\\n\\t.st33{fill:#D40000;}\\n\\t.st34{clip-path:url(#SVGID_3_);}\\n\\t.st35{fill:url(#SVGID_4_);}\\n\\t.st36{clip-path:url(#SVGID_6_);}\\n\\t.st37{fill:url(#SVGID_7_);}\\n\\t.st38{fill:#008C72;}\\n\\t.st39{clip-path:url(#SVGID_9_);}\\n\\t.st40{clip-path:url(#SVGID_11_);}\\n\\t.st41{clip-path:url(#SVGID_13_);}\\n\\t.st42{clip-path:url(#SVGID_15_);}\\n\\t.st43{clip-path:url(#SVGID_17_);}\\n\\t.st44{clip-path:url(#SVGID_19_);}\\n\\t.st45{fill:#575757;}\\n\\t.st46{clip-path:url(#SVGID_21_);}\\n\\t.st47{fill:url(#SVGID_22_);}\\n\\t.st48{fill:none;stroke:#FFFFFF;stroke-miterlimit:10;}\\n\\t.st49{display:inline;fill:#5C3400;}\\n\\t.st50{fill:none;}\\n\\t.st51{fill:#5C3400;}\\n\\t.st52{display:inline;fill:none;}\\n\\t.st53{display:inline;fill:#FFFFFF;}\\n\\t.st54{display:none;fill:#FFFFFF;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st55{display:inline;fill:#FFFFFF;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st56{display:none;fill:#F2F25F;}\\n\\t.st57{display:inline;fill:#F2F2F2;}\\n\\t.st58{display:inline;fill:#E6E6E6;}\\n\\t.st59{display:inline;fill:#808080;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st60{fill:#808080;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st61{display:inline;fill:#808080;}\\n\\t.st62{fill:#29E257;}\\n\\t.st63{fill:#E2DC29;}\\n\\t.st64{fill:#29ABE2;}\\n\\t.st65{fill:#E22929;}\\n\\t.st66{fill:#E6E6E6;}\\n\\t.st67{fill:#F2F2F2;}\\n\\t.st68{fill:#F9C303;}\\n\\t.st69{fill:#3A3939;}\\n\\t.st70{fill:#FF0000;}\\n\\t.st71{fill:#FEFEFD;}\\n\\t.st72{fill:#181D44;}\\n\\t.st73{fill:#F7931E;}\\n\\t.st74{fill:#A45467;}\\n\\t.st75{fill:#C33F48;}\\n\\t.st76{fill:#866A86;}\\n\\t.st77{fill:#6780A4;}\\n\\t.st78{fill:#4895C3;}\\n\\t.st79{fill:#4D4D4D;}\\n\\t.st80{opacity:0.2;}\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1\"\n  }, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M31.6,8.3c3.6,1.3,5.1,4.6,5.1,8.1c0,5.5-3.8,11.9-9.9,13.3c2.8,2.9,6,8.6,8.4,8.6c0.6,0,1.2-0.4,1.7-1.3 c0.2-0.4,0.5-0.5,0.8-0.5c0.5,0,1.1,0.4,1.1,1.1c0,0.1-0.1,0.4-0.1,0.5c-1,1.8-2.6,2.7-4.3,2.7c-1.5,0-3-0.6-4.2-1.7 c-3-2.7-4.4-5.6-4.6-5.6c-0.1,0-0.1,0.1-0.1,0.1c0,0.6,0.5,2.7,1.3,7.4c0,0.2,0.1,0.4,0.1,0.6c0,1.5-1.1,2.7-2.8,2.7 c-0.2,0-0.4,0-0.7-0.1c-2-0.3-4.5-8.1-4.5-17.6c0-4.2,0.5-8.8,1.8-13.2c0.4-1.5,1.5-2.1,2.6-2.1c1.5,0,3.2,1.2,3.2,3.1 c0,0.1,0,0.4-0.1,0.6c-0.6,3.3-1.1,6.5-1.3,9.7c4.1-2.5,5.7-5.5,5.7-8.1c0-3.5-2.8-6.4-5.6-6.5h-0.3c-4.4,0-9.1,4.4-9.1,9 c0,0.9,0.2,1.8,0.6,2.7c0.1,0.1,0.1,0.3,0.1,0.4c0,0.6-0.4,1.1-0.9,1.1c-0.1,0-0.4-0.1-0.5-0.1c-1.5-0.7-2.1-2-2.1-3.7 c0-4.8,5.5-12.1,13.5-12.1C28,7.3,29.8,7.6,31.6,8.3z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M49,22.7c1.8,2.4,2.6,5.3,2.6,7.9c0,5.5-3.1,10.4-6.9,10.5h-0.1c-4.6,0-6.7-4.3-6.7-8.8 c0-3.3,1.1-6.8,3.2-8.9c-0.6,0-0.8-0.3-0.8-0.7c0-1,1.8-2.7,4.1-2.7C45.8,19.9,47.5,20.6,49,22.7z M42.1,22.6 c0.9-0.6,1.7-0.8,2.4-0.8c1.5,0,2.5,1.3,2.5,2.5c0,0.2,0,0.4-0.1,0.6c-0.6,2.5-2.7,4.1-2.9,6.8c0,0.3-0.1,0.7-0.1,1.1 c0,0.8,0.1,1.5,0.5,2c0.3,0.4,0.7,0.4,1.2,0.4c0.6,0,1.3-0.2,1.8-0.5c1.7-1,2.5-3.2,2.5-5.6c0-3.4-1.5-7-4.3-7.7 c-0.3-0.1-0.6-0.1-0.8-0.1C43.6,21.2,42.6,21.7,42.1,22.6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M59.9,23.2v0.4c-0.3,2.1-1.2,6.3-1.2,9.4c0,1.8,0.3,3.2,1.1,3.7c0.1,0.1,0.3,0.1,0.4,0.1 c1.3,0,2.9-4.1,4.1-7.9c0.1-6,2-7.9,3.6-7.9c1.4,0,2.7,1.3,2.9,2.7c0,0.4,0.1,0.6,0.1,0.9c0,1.6-0.4,2.8-0.4,5.5 c0,1.2,0.1,2.8,0.4,4.8v0.8c0,0.7,0.1,1.3,0.8,1.3c0.1,0,0.2-0.1,0.4-0.1c1.9-0.4,3.6-6.5,4-8.3c0.1-0.2,0.2-0.4,0.4-0.4 s0.4,0.2,0.4,0.4v0.1c-0.8,3.5-2.3,11.2-7,11.2c-0.4,0-0.8-0.1-1.3-0.2c-3.1-0.8-3.7-3.9-3.9-6.7c-2,5.7-4.6,8.1-6.8,8.1 c-2.7,0-4.9-3.6-4.9-9.4c0-2.6,0.4-5.6,1.5-9c0.4-1.3,1.8-2,2.9-2C58.6,20.8,59.9,21.6,59.9,23.2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M80.6,20.6c0.1,0.5,0.1,0.9,0.1,1.4c0,2.5-1,4.9-1,7.7v0.8c1.7-5.3,4.1-11.4,7.6-11.4c0.6,0,1.4,0.2,2.2,0.7 c2.3,1.5,3,5.2,3,8.8c0,4.6-1.1,9-1.1,9c0.1,0,3.7-4.8,4.8-8.5c0.1-0.3,0.3-0.4,0.6-0.4c0.3,0,0.6,0.2,0.6,0.6v0.1 c-0.6,2.8-3.1,9.1-5.5,10.2c-0.4,0.1-0.7,0.2-1.1,0.2c-2.6,0-4.2-3.9-4.5-5.9c-0.1-0.5-0.1-1.1-0.1-1.7c0-1.2,0.1-2.5,0.1-3.8 c0-1.9-0.1-3.7-0.7-5c-0.1-0.1-0.1-0.2-0.2-0.2c-1.1,0-4.3,7.9-4.8,15.6c-0.1,1.2-0.8,2-1.8,2c-1.9,0-4.7-2.9-5.1-10.2 c-0.1-0.8-0.1-1.5-0.1-2.2c0-7.2,2.6-9.5,4.6-9.6C79.4,18.8,80.4,19.6,80.6,20.6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M111.3,5.7c1.4,0,2.9,1,2.9,2.5v0.2c-0.5,5-2.4,9.1-3.6,20.6c-0.2,1.9-0.3,3.4-0.3,4.6c0,2.5,0.4,3.5,1,3.5 c1.1,0,3-3.6,4.5-8.5c0.1-0.4,0.4-0.5,0.7-0.5c0.4,0,0.7,0.2,0.7,0.6c0,0.1-0.1,0.1-0.1,0.2c-0.9,3.4-2.2,8.1-4.7,10.7 c-0.8,0.8-1.6,1.2-2.5,1.2c-2.6,0-5.1-3.6-5.5-7.3c-2,5.1-4.1,7.1-5.8,7.1c-2.4,0-4.1-4.1-4.1-8.6c0-4.7,1.8-9.8,6.5-11.2 c0.4-0.1,0.7-0.1,1-0.1c1.8,0,3.2,1.2,3.4,1.2h0.1c0.8-4.9,1.4-10.3,3.4-14.9c0.4-0.9,1.3-1.3,2.2-1.3H111.3z M99.7,35.1v0.5 c0,0.2-0.1,0.4-0.1,0.6c0,0.4,0.1,0.7,0.4,0.7c1,0,3.9-4.8,4.9-11.1c-0.4-0.4-0.7-0.6-1.1-0.6C101.8,25.2,99.7,31.3,99.7,35.1z\"\n  })))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"avatars\"\n  })), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Time_Bomb\"\n  })), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_4\"\n  })), _g5 || (_g5 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_8\"\n  })), _g6 || (_g6 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_6\"\n  })), _g7 || (_g7 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"dial_svg\"\n  })), _g8 || (_g8 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Sheeps\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRoundTitleEn);\nexport default __webpack_public_path__ + \"static/media/round-title-en.2ad07e1f265a85634ad7940a33f96552.svg\";\nexport { ForwardRef as ReactComponent };","var _style, _g, _g2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRoundTitlePt(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 130 50\",\n    style: {\n      enableBackground: \"new 0 0 130 50\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:#3E1E68;}\\n\\t.st1{fill:#9EC5E7;}\\n\\t.st2{display:none;}\\n\\t.st3{display:inline;fill:#9EC5E7;}\\n\\t.st4{fill:#3A7CA5;}\\n\\t.st5{fill:#44BBA4;}\\n\\t.st6{fill:#F2E863;}\\n\\t.st7{fill:#F45B69;}\\n\\t.st8{fill:#FFFFFF;}\\n\\t.st9{opacity:0.9;fill:#FFFFFF;}\\n\\t.st10{stroke:#000000;stroke-width:8;stroke-miterlimit:10;}\\n\\t.st11{fill:#E6E6F5;}\\n\\t.st12{fill:#DA70D6;}\\n\\t.st13{fill:#008080;}\\n\\t.st14{fill:#D2691E;}\\n\\t.st15{fill:#556B2F;}\\n\\t.st16{fill:#7CC44F;}\\n\\t.st17{fill:#2F4F4F;}\\n\\t.st18{fill:#FF6347;}\\n\\t.st19{fill:#4682B4;}\\n\\t.st20{fill:#D2A467;}\\n\\t.st21{fill:#7FB5C7;}\\n\\t.st22{fill:#B22222;}\\n\\t.st23{fill:#9370DB;}\\n\\t.st24{fill:#778899;}\\n\\t.st25{fill:#663399;}\\n\\t.st26{fill:#696969;}\\n\\t.st27{fill:#20212E;}\\n\\t.st28{fill:#9884B4;}\\n\\t.st29{fill:#DFB231;}\\n\\t.st30{fill:#875131;}\\n\\t.st31{fill:#DB8A34;}\\n\\t.st32{fill:#EB3465;}\\n\\t.st33{fill:#2B1752;}\\n\\t.st34{fill:#3C58AC;}\\n\\t.st35{fill:#BDB74C;}\\n\\t.st36{fill:#C7A4B3;}\\n\\t.st37{display:inline;}\\n\\t.st38{display:inline;fill:none;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st39{fill:#939598;}\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1\"\n  }, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st8\",\n    d: \"M27.8,37.4c-0.4,0-0.6,0.1-0.8,0.5c-0.5,0.9-1.1,1.3-1.7,1.3c-2.5,0-5.6-5.8-8.4-8.6 c6.1-1.4,9.9-7.7,9.9-13.3c0-3.6-1.5-6.8-5.1-8.1c-1.8-0.7-3.6-1.1-5.3-1.1c-8,0.1-13.5,7.3-13.5,12.1c0,1.7,0.6,3,2.1,3.7 c0.1,0.1,0.4,0.1,0.5,0.1c0.5,0,0.9-0.5,0.9-1.1c0-0.1,0-0.3-0.1-0.4c-0.4-0.8-0.6-1.8-0.6-2.7c0-4.6,4.7-9,9.1-9h0.3 c2.8,0.1,5.6,2.9,5.6,6.5c0,2.6-1.5,5.6-5.7,8.1c0.2-3.2,0.7-6.4,1.3-9.7c0.1-0.2,0.1-0.4,0.1-0.6c0-1.9-1.6-3.1-3.2-3.1 c-1.1,0-2.2,0.6-2.6,2.1c-1.3,4.4-1.8,9-1.8,13.2c0,9.5,2.5,17.3,4.5,17.6c0.3,0.1,0.5,0.1,0.7,0.1c1.8,0,2.8-1.2,2.8-2.7 c0-0.2-0.1-0.4-0.1-0.6c-0.8-4.8-1.3-6.9-1.3-7.4c0-0.1,0-0.1,0.1-0.1c0.2,0,1.6,2.9,4.6,5.6c1.2,1.1,2.7,1.7,4.2,1.7 c1.8,0,3.4-0.8,4.4-2.7c0.1-0.1,0.1-0.4,0.1-0.5C29,37.9,28.3,37.4,27.8,37.4z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st8\",\n    d: \"M34.4,20.8c-2.3,0-4.1,1.8-4.1,2.7c0,0.4,0.2,0.7,0.8,0.7c-2.1,2.1-3.2,5.6-3.2,8.9c0,4.6,2.1,8.8,6.7,8.8 h0.1c3.9-0.1,6.9-5.1,6.9-10.5c0-2.7-0.8-5.5-2.6-7.9C37.5,21.5,35.8,20.8,34.4,20.8z M37.3,35.6c-0.4,0.3-1.1,0.5-1.8,0.5 c-0.5,0-0.9-0.1-1.2-0.4c-0.4-0.4-0.5-1.2-0.5-2c0-0.4,0.1-0.8,0.1-1.1c0.3-2.7,2.3-4.3,2.9-6.8c0.1-0.2,0.1-0.4,0.1-0.6 c0-1.2-0.9-2.5-2.5-2.5c-0.7,0-1.5,0.2-2.4,0.8c0.5-0.9,1.5-1.3,2.5-1.3c0.3,0,0.6,0.1,0.8,0.1c2.7,0.7,4.3,4.4,4.3,7.7 C39.8,32.4,39,34.6,37.3,35.6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st8\",\n    d: \"M124.8,29.5c-0.3,0-0.5,0.1-0.6,0.4c-0.8,4.2-3.4,7.4-4.1,7.4h-0.1v-0.1c0-0.2-0.3-1.3-0.4-1.6 c-0.1-0.7-0.2-1.4-0.2-2.1c0-2.8,1.1-5.7,1.8-8.3c0.1-0.2,0.1-0.4,0.1-0.6c0-1.5-1.4-2.9-2.9-2.9c-1.1,0-2.2,0.6-3,2.5 c-0.7-1.8-3.4-3-5.3-3h-0.6c-4.9,0.6-7.4,8.4-7.4,12.6c0,0,0,0.1,0,0.1c-1.1,2.6-2.2,4.2-2.9,4.2c-0.6,0-1-1.1-1-3.5 c0-1.2,0.1-2.7,0.3-4.6c1.2-11.5,3.1-15.6,3.6-20.6V9.1c0-1.5-1.5-2.5-2.9-2.5h-0.1c-0.9,0-1.8,0.4-2.2,1.3c-2,4.6-2.6,10-3.4,15 h-0.1c-0.2,0-1.6-1.2-3.4-1.2c-0.3,0-0.6,0.1-1,0.1c-4.7,1.3-6.5,6.5-6.5,11.2c0,0.5,0,1,0.1,1.5c-1,1.8-2,2.9-2.5,2.9h-0.1v-0.1 c0-0.2-0.3-1.3-0.4-1.6c-0.1-0.7-0.2-1.4-0.2-2.1c0-2.8,1.1-5.7,1.8-8.3c0.1-0.2,0.1-0.4,0.1-0.6c0-1.5-1.4-2.9-2.9-2.9 c-1.1,0-2.2,0.6-3,2.5c-0.7-1.8-3.4-3-5.3-3h-0.6c-4.9,0.6-7.4,8.4-7.4,12.6c0,0,0,0.1,0,0.1c-1.1,2.6-2.2,4.2-2.9,4.2 c-0.6,0-1-1.1-1-3.5c0-1.2,0.1-2.7,0.3-4.6c1.2-11.5,3.1-15.6,3.6-20.6V9.1c0-1.5-1.5-2.5-2.9-2.5h-0.1c-0.9,0-1.8,0.4-2.2,1.3 c-2,4.6-2.6,10-3.4,15h-0.1c-0.2,0-1.6-1.2-3.4-1.2c-0.3,0-0.6,0.1-1,0.1c-4.7,1.3-6.5,6.5-6.5,11.2c0,4.5,1.7,8.6,4.1,8.6 c1.7,0,3.7-2,5.8-7.1c0.4,3.7,2.9,7.3,5.5,7.3c0.8,0,1.7-0.4,2.5-1.2c0.9-1,1.7-2.2,2.3-3.5c0.7,2.1,2.1,3.5,3.9,3.5 c2,0,4.4-1.8,6.6-6.1c0.1,2.8,1,5.1,3.4,6c0.6,0.2,1.2,0.3,1.7,0.3c2.1,0,3.5-1.6,4.6-3.6c0.7,2.6,2,4.4,3.6,4.4 c1.7,0,3.7-2,5.8-7.1c0.4,3.7,2.9,7.3,5.5,7.3c0.8,0,1.7-0.4,2.5-1.2c0.9-1,1.7-2.2,2.3-3.5c0.7,2.1,2.1,3.5,3.9,3.5 c2,0,4.4-1.8,6.6-6.1c0.1,2.8,1,5.1,3.4,6c0.6,0.2,1.2,0.3,1.7,0.3c4.5,0,5.9-7,6.9-10.4c0-0.1,0.1-0.1,0.1-0.2 C125.5,29.7,125,29.5,124.8,29.5z M48.2,37.8c-0.2,0-0.4-0.3-0.4-0.7c0-0.2,0.1-0.4,0.1-0.6V36c0-3.9,2.1-9.9,4.1-9.9 c0.4,0,0.7,0.1,1.1,0.6C52,32.9,49.2,37.8,48.2,37.8z M73.7,30.4c-1.1,2.4-3,5.5-4.3,5.5c-0.4,0-0.8-0.4-1-1.3 c-0.1-0.2-0.1-0.4-0.1-0.7c0-3.1,3-9.4,5.1-9.4c0.6,0,1.1,0.5,1.3,1.8C74.8,26.6,74.2,28,73.7,30.4z M88,37.8 c-0.2,0-0.4-0.3-0.4-0.7c0-0.2,0.1-0.4,0.1-0.6V36c0-3.9,2.1-9.9,4.1-9.9c0.4,0,0.7,0.1,1.1,0.6C91.9,32.9,89,37.8,88,37.8z  M113.6,30.4c-1.1,2.4-3,5.5-4.3,5.5c-0.4,0-0.8-0.4-1-1.3c-0.1-0.2-0.1-0.4-0.1-0.7c0-3.1,3-9.4,5.1-9.4c0.6,0,1.1,0.5,1.3,1.8 C114.6,26.6,114.1,28,113.6,30.4z\"\n  })))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"avatars\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRoundTitlePt);\nexport default __webpack_public_path__ + \"static/media/round-title-pt.2e3f9c1deb85d58d118aa6e3dfa7af23.svg\";\nexport { ForwardRef as ReactComponent };","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button } from 'antd';\n// Assets\nimport roundTitleEn from 'assets/images/round-title-en.svg';\nimport roundTitlePt from 'assets/images/round-title-pt.svg';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Hooks\nimport { useLanguage } from 'hooks';\n// Components\nimport { Translate } from 'components/language';\nimport { TimedButton } from 'components/buttons';\n\ntype RoundAnnouncementProps = {\n  round: GameRound;\n  onPressButton?: GenericFunction;\n  buttonText?: string;\n  time: number;\n  players?: Players;\n  className?: string;\n  children?: any;\n  unskippable?: boolean;\n  circleColor?: Color;\n};\n\nexport function RoundAnnouncement({\n  round,\n  onPressButton,\n  buttonText,\n  time = 0,\n  className,\n  children,\n  unskippable = false,\n  circleColor = 'yellow',\n}: RoundAnnouncementProps) {\n  const { translate } = useLanguage();\n\n  return (\n    <div className={clsx('round-announcement', className)}>\n      <div className=\"round-announcement__main\">\n        <div className=\"round-announcement__title\">\n          <img src={translate(roundTitlePt, roundTitleEn)} alt={translate('Rodada', 'Round')} />\n        </div>\n        <div className={clsx('round-announcement__round-wrapper', getAnimationClass('zoomIn'))}>\n          <div className={clsx('round-announcement__circle', `color-border--${circleColor}`)}></div>\n          <div className={clsx('round-announcement__circle-2', `color-border--${circleColor}`)}></div>\n          <div className=\"round-announcement__number\">{round?.current ?? round ?? 0}</div>\n        </div>\n\n        {children}\n\n        {Boolean(onPressButton) && !Boolean(time) && (\n          <Button type=\"primary\" onClick={onPressButton} className=\"round-announcement__go-button\">\n            {buttonText}\n          </Button>\n        )}\n\n        {Boolean(onPressButton) && Boolean(time) && (\n          <TimedButton\n            type=\"primary\"\n            onClick={onPressButton}\n            onExpire={onPressButton}\n            duration={time}\n            showTimer\n            disabled={unskippable}\n          >\n            <Translate pt=\"Prosseguir\" en=\"Continue\" custom={buttonText} />\n          </TimedButton>\n        )}\n      </div>\n    </div>\n  );\n}\n","import { Progress, ProgressProps } from 'antd';\n\ninterface TimerBarProps extends ProgressProps {\n  steps?: number;\n  value: number;\n  total: number;\n}\n\n/**\n * Time Bar presentational component used in timed operations\n * @param props\n * @returns\n */\nexport function TimerBar({\n  steps,\n  strokeLinecap,\n  total,\n  type = 'line',\n  value,\n  status = 'active',\n  ...props\n}: TimerBarProps) {\n  const percentage = 100 - (value * 100) / total;\n  return (\n    <Progress\n      percent={percentage}\n      steps={steps}\n      showInfo={false}\n      style={{ marginBottom: '1rem' }}\n      size={steps && steps > 30 ? 'small' : undefined}\n      {...props}\n    />\n  );\n}\n","type ViewProps = {\n  children: any;\n};\n\nexport function View({ children }: ViewProps) {\n  return <>{children}</>;\n}\n","type ViewIfProps = {\n  children: any;\n  isVisible?: boolean;\n};\n\nexport function ViewIf({ isVisible = false, children }: ViewIfProps) {\n  return isVisible ? <>{children}</> : <></>;\n}\n","type ViewOrProps = {\n  children: [any, any];\n  orCondition?: boolean;\n};\n\nexport function ViewOr({ orCondition = false, children }: ViewOrProps) {\n  return orCondition ? <>{children[0]}</> : <>{children[1]}</>;\n}\n","type ViewSwitchProps = {\n  cases: boolean[];\n  children: any;\n};\n\nexport function ViewSwitch({ cases, children }: ViewSwitchProps) {\n  if (cases.length > 5) {\n    throw Error('ViewSwitch only supports up to 5 cases');\n  }\n\n  if (cases[0] && children[0]) {\n    return children[0];\n  }\n\n  if (cases[1] && children[1]) {\n    return children[1];\n  }\n\n  if (cases[2] && children[2]) {\n    return children[2];\n  }\n\n  if (cases[3] && children[3]) {\n    return children[3];\n  }\n\n  if (cases[4] && children[4]) {\n    return children[4];\n  }\n  console.warn('Rendering all children in the ViewSwitch');\n  return children;\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { CheckCircleFilled, CloudUploadOutlined } from '@ant-design/icons';\n// Components\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { AvatarName } from 'components/avatars';\nimport { TimedButton } from 'components/buttons';\n\ntype StepWordSelectionProps = {\n  guesser: GamePlayer;\n  onSendSelectedWords: GenericFunction;\n  words: UeSoIssoCard[];\n};\n\nexport function StepWordSelection({ guesser, onSendSelectedWords, words = [] }: StepWordSelectionProps) {\n  const [selectedWords, setSelectedWords] = useState<PlainObject>({});\n\n  const selectedWordsArray = Object.keys(selectedWords);\n  const noSelection = selectedWordsArray.length === 0;\n\n  const autoSelectRandomWord = () => {\n    const randomSelection = words[0].id;\n    onSendSelectedWords({ votes: [randomSelection] });\n  };\n\n  const onSelectWord = (wordId: string) => {\n    setSelectedWords((s: PlainObject) => {\n      const newState = { ...s };\n      if (newState[wordId]) {\n        delete newState[wordId];\n      } else {\n        newState[wordId] = true;\n      }\n      return newState;\n    });\n  };\n\n  return (\n    <Step fullWidth>\n      <Title white>\n        <Translate\n          pt={\n            <>\n              Selecione a Palavra Secreta para <AvatarName player={guesser} />\n            </>\n          }\n          en={\n            <>\n              Select a Secret Word for <AvatarName player={guesser} />\n            </>\n          }\n        />\n      </Title>\n\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              A palavra com mais votos será escolhida para essa rodada. Você pode selecionar quantas quiser!\n            </>\n          }\n          en={\n            <>\n              The word with the most votes will be selected for the round. You can choose as many as you wish!\n            </>\n          }\n        />\n      </Instruction>\n\n      <ul className=\"u-word-card\">\n        {words.map((word) => {\n          return (\n            <li className=\"u-word-card__word\" key={word.id}>\n              <button className=\"u-word-card__button\" onClick={() => onSelectWord(word.id)}>\n                <span className=\"u-word-card__text\">{word.text}</span>\n                <span className=\"u-word-card__icon\">\n                  {Boolean(selectedWords[word.id]) && <CheckCircleFilled />}\n                </span>\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n\n      <TimedButton\n        icon={<CloudUploadOutlined />}\n        type=\"primary\"\n        onClick={() => onSendSelectedWords({ votes: selectedWordsArray })}\n        disabled={noSelection}\n        onExpire={autoSelectRandomWord}\n        duration={15}\n        showTimer={noSelection}\n      >\n        <Translate pt=\"Enviar votos\" en=\"Send votes\" />\n      </TimedButton>\n    </Step>\n  );\n}\n","// Ant Design Resources\nimport { Progress } from 'antd';\n// Components\nimport { Translate } from 'components/language';\n\ntype GameProgressBarProps = {\n  groupScore: number;\n  round: GameRound;\n};\n\nexport function GameProgressBar({ groupScore, round }: GameProgressBarProps) {\n  const totalProgress = Math.round((100 * (round.current - 1)) / round.total);\n\n  return (\n    <div className=\"u-word-selection-phase__game-progress-bar\">\n      <Translate pt=\"Progresso:\" en=\"Group Progress\" />\n      <br />\n      <Progress\n        percent={totalProgress}\n        success={{ percent: groupScore ?? 0, strokeColor: '#bbec6c' }}\n        status=\"active\"\n        strokeColor=\"#fe646f\"\n      />\n    </div>\n  );\n}\n","// Hooks\nimport { WaitingRoom } from 'components/players';\nimport { Step } from 'components/steps';\nimport { useLanguage } from 'hooks';\n// Components\n\ntype GuesserWaitingRoomProps = {\n  players: GamePlayers;\n  instructionSuffix: {\n    pt: string;\n    en: string;\n  };\n};\n\nexport function GuesserWaitingRoom({ players, instructionSuffix }: GuesserWaitingRoomProps) {\n  const { language, translate } = useLanguage();\n\n  const instructionPrefix = translate('Aguarde os outros jogadores', 'Please wait while the other players');\n\n  return (\n    <Step fullWidth>\n      <WaitingRoom\n        players={players}\n        title={translate('Você é o(a) adivinhador(a)', \"You're the guesser\")}\n        instruction={`${instructionPrefix} ${instructionSuffix[language]}.`}\n      />\n    </Step>\n  );\n}\n","// Hooks\nimport { useIsUserReady, useWhichPlayerIsThe, useLanguage, useStep } from 'hooks';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\n\nimport { StepWordSelection } from './StepWordSelection';\nimport { GameProgressBar } from './components/GameProgressBar';\nimport { GuesserWaitingRoom } from './components/GuesserWaitingRoom';\nimport { useOnSubmitVotesAPIRequest } from './utils/api-requests';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { AvatarName } from 'components/avatars';\nimport { StepSwitcher } from 'components/steps';\nimport { RoundAnnouncement } from 'components/round';\nimport { ViewOr } from 'components/views';\n\ntype RoundAnnouncementTextProps = {\n  guesser: GamePlayer;\n  groupScore: number;\n  round: GameRound;\n};\n\nfunction RoundAnnouncementText({ guesser, groupScore, round }: RoundAnnouncementTextProps) {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Para essa rodada, <AvatarName player={guesser} addressUser /> será o(a) adivinhador(a).\n          </>\n        }\n        en={\n          <>\n            For this round, <AvatarName player={guesser} addressUser /> will be the guesser.\n          </>\n        }\n      />\n      <br />\n      <GameProgressBar groupScore={groupScore} round={round} />\n    </Instruction>\n  );\n}\n\nfunction PhaseWordSelection({ state, players, info }: PhaseProps) {\n  const isUserReady = useIsUserReady(players, state);\n  const { translate } = useLanguage();\n  const [guesser, isUserTheGuesser] = useWhichPlayerIsThe('guesserId', state, players);\n  const { step, goToNextStep, setStep } = useStep(0);\n\n  const onSendSelectedWords = useOnSubmitVotesAPIRequest(setStep);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.UE_SO_ISSO.WORD_SELECTION}\n      className=\"u-word-selection-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady]} players={players}>\n        {/* Step 0 */}\n        <RoundAnnouncement round={state.round} onPressButton={() => setStep(1)} time={7} circleColor=\"cream\">\n          <RoundAnnouncementText guesser={guesser} groupScore={state.groupScore} round={state.round} />\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <PhaseAnnouncement\n          type=\"opinions\"\n          title={translate('Seleção da Palavra Secreta', 'Secret Word Selection')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          {isUserTheGuesser ? (\n            <Instruction>\n              <Translate\n                pt={\n                  <>\n                    Os outros jogadores escolherão a palavra secreta.\n                    <br />\n                    Aguarde...\n                  </>\n                }\n                en={\n                  <>\n                    The other players will now choose the secret word.\n                    <br />\n                    Just wait...\n                  </>\n                }\n              />\n            </Instruction>\n          ) : (\n            <Instruction>\n              <Translate\n                pt={\n                  <>\n                    Selecione a palavra secreta para essa rodada.\n                    <br />\n                    Você pode selecionar quantas quiser.\n                    <br />A palavra mais votada será usada nessa rodada!\n                  </>\n                }\n                en={\n                  <>\n                    Choose the secret word for this round.\n                    <br />\n                    You may select as many as you wish.\n                    <br />\n                    The most voted word would be used this round!\n                  </>\n                }\n              />\n            </Instruction>\n          )}\n        </PhaseAnnouncement>\n\n        {/* Step 2 */}\n\n        <ViewOr orCondition={isUserTheGuesser}>\n          <GuesserWaitingRoom\n            players={players}\n            instructionSuffix={{\n              pt: 'decidirem a palavra secreta',\n              en: 'choose a secret word',\n            }}\n          />\n\n          <StepWordSelection\n            words={state?.words}\n            onSendSelectedWords={onSendSelectedWords}\n            guesser={guesser}\n          />\n        </ViewOr>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseWordSelection;\n","import { UE_SO_ISSO_API } from 'services/adapters';\nimport { useAPICall, useLanguage } from 'hooks';\n\nexport function useOnSubmitVotesAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: UE_SO_ISSO_API.submitAction,\n    actionName: 'submit-votes',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(1),\n    successMessage: translate('Votos enviados com sucesso!', 'Votes send successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar seus votos',\n      'Oops, the application failed to send your votes'\n    ),\n  });\n\n  return (payload: SubmitVotesPayload) => {\n    request({\n      action: 'SUBMIT_VOTES',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitSuggestionsAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: UE_SO_ISSO_API.submitAction,\n    actionName: 'submit-suggestion',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate('Dicas enviada com sucesso!', 'Suggestions sent successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar suas dicas',\n      'Oops, the application failed to send your suggestions'\n    ),\n  });\n\n  return (payload: SubmitSuggestionsPayload) => {\n    request({\n      action: 'SUBMIT_SUGGESTIONS',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitValidationsAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: UE_SO_ISSO_API.submitAction,\n    actionName: 'submit-validations',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate('Validação enviada com sucesso!', 'Validation sent successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar a validação das sugestões',\n      'Oops, the application failed to send the validation'\n    ),\n  });\n\n  return (payload: SubmitValidationsPayload) => {\n    request({\n      action: 'SUBMIT_VALIDATION',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnValidateSuggestionAPIRequest() {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: UE_SO_ISSO_API.submitAction,\n    actionName: 'validate-suggestion',\n    successMessage: translate('Atualizado!', 'Updated!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar atualizar',\n      'Oops, the application failed to update'\n    ),\n  });\n\n  return (payload: ValidateSuggestionPayload) => {\n    request({\n      action: 'VALIDATE_SUGGESTION',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitOutcomeAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: UE_SO_ISSO_API.submitAction,\n    actionName: 'submit-outcome',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(0),\n    successMessage: translate('Resultado enviado com sucesso!', 'Outcome sent successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar o resultado',\n      'Oops, the application failed to submit the outcome'\n    ),\n  });\n\n  return (payload: SubmitOutcomePayload) => {\n    request({\n      action: 'SUBMIT_OUTCOME',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSendGuessAPIRequest() {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: UE_SO_ISSO_API.submitAction,\n    actionName: 'send-guess',\n    successMessage: translate('Chute enviado!', 'Guess sent!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar atualizar',\n      'Oops, the application failed to update'\n    ),\n  });\n\n  return (payload: SendGuessPayload) => {\n    request({\n      action: 'SEND_GUESS',\n      ...payload,\n    });\n  };\n}\n","import { sampleSize } from 'lodash';\n\nconst suggestions = ['agua', 'bola', 'coco', 'dedo', 'egua', 'flauta', 'gatilho', 'hélio', 'jaguar'];\n\nexport const mockSuggestions = (suggestionsNumber: number): { suggestions: string[] } => {\n  return { suggestions: sampleSize(suggestions, suggestionsNumber) };\n};\n","// Ant Design Resources\nimport { Input } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks';\n\ntype SuggestionEaselProps = {\n  id: string;\n  onChangeInput?: GenericFunction;\n  onPressEnter?: GenericFunction;\n  value?: string;\n};\n\nexport function SuggestionEasel({ id, onChangeInput, onPressEnter, value }: SuggestionEaselProps) {\n  const { translate } = useLanguage();\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 230 60\"\n      overflow=\"visible\"\n      width=\"230\"\n      className=\"u-suggestion-easel\"\n    >\n      <path fill=\"#fff\" d=\"M26.7 59.5L14.1.5h202.7l12.6 59z\" />\n      <path fill=\"#4d4d4d\" d=\"M216.4 1l12.4 58H27.1L14.7 1h201.7m.8-1H13.5l12.8 60H230L217.2 0z\" />\n      <path fill=\"#4d4d4d\" d=\"M24.2 48.3L13.5 0 0 48.3z\" />\n      <foreignObject x=\"32.6\" y=\"13.9\" width=\"185\" height=\"300\">\n        <div>\n          <Input\n            placeholder={translate('Escreva dica aqui', 'Write here')}\n            key={id}\n            id={id}\n            value={value}\n            onChange={onChangeInput}\n            className=\"u-suggestion-easel__input\"\n            bordered={false}\n            onPressEnter={onPressEnter}\n            autoComplete=\"off\"\n          />\n        </div>\n      </foreignObject>\n      <path opacity=\".2\" d=\"M0 48.3L26.3 60l-2.1-11.7z\" />\n    </svg>\n  );\n}\n","// Ant Design Resources\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\n// Components\nimport { AvatarName } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n\nexport function WritingRules(): JSX.Element {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Hora de escrever uma dica para a palavra secreta!\n            <br />\n            A dica tem que ser uma palavra única que ajude o adivinhador... adivinhar.\n            <br />\n            É proibido usar derivados, partes da palavra ou traduções em outras línguas.\n            <br />E não seja tão óbvio, já que dicas similares são eliminadas!\n          </>\n        }\n        en={\n          <>\n            Time to write a clue for the secret word!\n            <br />\n            The clue MUST be a single word or compound word that helps the guesser... guess.\n            <br />\n            You can't use parts of the Secret word, translations, words in the same family (prince/princess),\n            made-up words, or phonetically identical (weather/whether).\n            <br />\n            Don't be too obvious, identical words (and variants) will be eliminated!\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function ComparisonRules(): JSX.Element {\n  return (\n    <Instruction>\n      <Translate\n        pt={\n          <>\n            Hora de comparar as dicas e eliminar as similares!\n            <br />O aplicativo elimina automaticamente todas as palavras idênticas, mas os jogadores precisam\n            eliminar as inválidas e similares.\n          </>\n        }\n        en={\n          <>\n            Time to compare the clues and eliminate variants\n            <br />\n            The app has already eliminated any identical clues.\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function ComparisonDetailedRules(): JSX.Element {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Já eliminamos todas as palavras idênticas, agora, elimine palavras inválidas ou similares.\n            <br />\n            Lembre-se que são consideradas dicas iguais palavras derivadas e conjugações:{' '}\n            <code>piloto = pilotar = pilotando</code>. Variações como pluralidade, gênero e erros ortográficos\n            também devem ser eliminadas: <code>príncipe = princesa = príncipes = pryncipi</code>.\n          </>\n        }\n        en={\n          <>\n            The app has already eliminated all identical clues, not it's time to eliminate all invalid clues.\n            <br />\n            Remember that the following clue types are considered invalid:\n            <br />\n            Variants: <code>pilot = pilots = piloting</code>.\n            <br />\n            Words on the same family: <code>prince = princess</code>\n            <br />\n            Misspelled or made-up words.\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\nexport function ComparisonPhaseRules({ controller }: { controller: GamePlayer }): JSX.Element {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            <ExclamationCircleOutlined /> Para não virar bagunça, somente{' '}\n            <AvatarName player={controller} addressUser />\n            pode clicar nas palavras para eliminá-las ou ativá-las, mas todos podem discutir.\n            <br />\n            Uma dica ser muito ruim não significa que ela seja inválida.\n            <br />\n            Refiram às palavras por letra, o Adivinhador pode estar ouvindo!\n          </>\n        }\n        en={\n          <>\n            <ExclamationCircleOutlined /> <AvatarName player={controller} />\n            is in charge of clicking on the clues to disable or enable them as valid but everybody (but the\n            guesser) should discuss.\n            <br />\n            A terrible clue is still valid if it follow the rules.\n            <br />\n            Refer to the clues by letter, the Guesser is listening!\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function GuessingRules({ guesserName }: { guesserName: string }): JSX.Element {\n  return (\n    <Instruction>\n      <Translate\n        pt={\n          <>\n            Hora de {guesserName} brilhar!\n            <br />\n            Você tem uma única change de adivinhar a palavra secreta!\n            <br />\n            Pense em voz alta! (É mais divertido para os outros jogadores)\n          </>\n        }\n        en={\n          <>\n            It's time to shine, {guesserName}!\n            <br />\n            You have a single chance to guess the secret word!\n            <br />\n            Think out loud! (It's more entertaining to the other players)\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n","// Ant Design Resources\nimport { WarningOutlined } from '@ant-design/icons';\n// Hooks\nimport { Card } from 'components/cards';\n// Components\nimport { useLanguage } from 'hooks';\n\ntype UeSoIssoCardProps = {\n  word?: any;\n  header?: any;\n};\n\nexport function UeSoIssoCard({ word, header }: UeSoIssoCardProps) {\n  const { translate } = useLanguage();\n\n  return (\n    <Card color=\"purple\" header={translate('A Palavra Secreta é', 'Secret Word', header)} size=\"large\">\n      {word ?? <WarningOutlined />}\n    </Card>\n  );\n}\n","// Ant Design Resources\nimport { CloudUploadOutlined } from '@ant-design/icons';\n// Hooks\nimport { useMock } from 'hooks';\n// Utils\nimport { mockSuggestions } from './utils/mock';\n// Components\nimport { SuggestionEasel } from './components/SuggestionEasel';\nimport { WritingRules } from './components/RulesBlobs';\nimport { UeSoIssoCard as Card } from './components/UeSoIssoCard';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { AvatarName } from 'components/avatars';\nimport { ReadyPlayersBar } from 'components/players';\nimport { ControlledInputWriting } from 'components/input';\n\ntype StepSuggestionProps = {\n  guesser: GamePlayer;\n  onSendSuggestions: GenericFunction;\n  secretWord: UeSoIssoCard;\n  suggestionsNumber?: number;\n  players: GamePlayers;\n};\n\nexport function StepSuggestion({\n  guesser,\n  onSendSuggestions,\n  secretWord,\n  players,\n  suggestionsNumber = 1,\n}: StepSuggestionProps) {\n  useMock(() => {\n    onSendSuggestions(mockSuggestions(suggestionsNumber));\n  }, []);\n\n  return (\n    <Step fullWidth>\n      <Title>\n        <Translate\n          pt={\n            <>\n              Escreva uma dica para <AvatarName player={guesser} />\n            </>\n          }\n          en={\n            <>\n              Write a clue for <AvatarName player={guesser} />\n            </>\n          }\n        />\n      </Title>\n\n      <WritingRules />\n\n      <Card word={secretWord.text} />\n\n      {suggestionsNumber > 1 && (\n        <Instruction contained>\n          <Translate\n            pt={\n              <>Já que esse jogo tem menos jogadores, você tem que escrever {suggestionsNumber} sugestões</>\n            }\n            en={<>Since we have fewer players you must write {suggestionsNumber} clues</>}\n          />\n        </Instruction>\n      )}\n\n      <ControlledInputWriting\n        onSubmit={onSendSuggestions}\n        inputComponent={SuggestionEasel}\n        valueKey=\"suggestions\"\n        inputQuantity={suggestionsNumber}\n        submitButtonLabel={\n          <>\n            <Translate pt=\"Enviar dica\" en=\"Send clue\" />\n            {suggestionsNumber > 1 && 's'}\n          </>\n        }\n        submitButtonProps={{\n          icon: <CloudUploadOutlined />,\n          size: 'large',\n        }}\n      />\n\n      <ReadyPlayersBar players={players} />\n    </Step>\n  );\n}\n","// Hooks\nimport { useIsUserReady, useWhichPlayerIsThe, useLanguage, useStep } from 'hooks';\nimport { useOnSubmitSuggestionsAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { ViewOr } from 'components/views';\nimport { StepSuggestion } from './StepSuggestion';\nimport { WritingRules } from './components/RulesBlobs';\nimport { GuesserWaitingRoom } from './components/GuesserWaitingRoom';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\n\nfunction PhaseSuggest({ state, players, info }: PhaseProps) {\n  const isUserReady = useIsUserReady(players, state);\n  const { translate } = useLanguage();\n  const { step, goToNextStep, setStep } = useStep(0);\n  const [guesser, isUserTheGuesser] = useWhichPlayerIsThe('guesserId', state, players);\n\n  const onSendSuggestions = useOnSubmitSuggestionsAPIRequest(setStep);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.UE_SO_ISSO.SUGGEST}\n      className=\"word-selection-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady]} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          type=\"writing\"\n          title={translate('Escreva uma dica!', 'Write a Clue!')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <WritingRules />\n          {isUserTheGuesser && (\n            <Instruction contained>\n              <Translate\n                pt=\"Já que você é o adivinhador, relaxe e aguarde...\"\n                en=\"Since you're the guesser, just relax and wait...\"\n              />\n            </Instruction>\n          )}\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <ViewOr orCondition={isUserTheGuesser}>\n          <GuesserWaitingRoom\n            players={players}\n            instructionSuffix={{\n              pt: 'escrevem dicas',\n              en: 'write clues',\n            }}\n          />\n\n          <StepSuggestion\n            guesser={guesser}\n            onSendSuggestions={onSendSuggestions}\n            secretWord={state.secretWord}\n            suggestionsNumber={state.suggestionsNumber}\n            players={players}\n          />\n        </ViewOr>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseSuggest;\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Avatar as AntAvatar } from 'antd';\nimport { CloseOutlined } from '@ant-design/icons';\n// Utils\nimport { getColorFromIndex } from 'utils/helpers';\nimport { LETTERS } from 'utils/constants';\nimport { Card } from 'components/cards';\nimport { Avatar } from 'components/avatars';\n// Components\n\ntype SuggestionCardProps = {\n  avatarId: string;\n  index: number;\n  playerName?: PlayerName;\n  invalid?: boolean;\n  suggestion: string;\n};\n\nexport function SuggestionCard({ avatarId, playerName, index, invalid, suggestion }: SuggestionCardProps) {\n  return (\n    <Card\n      size=\"medium\"\n      color={getColorFromIndex(index)}\n      className={clsx(invalid && 'u-suggestion-card__invalid')}\n      header={playerName ? `${LETTERS[index]} (${playerName})` : LETTERS[index]}\n    >\n      {invalid ? (\n        <AntAvatar size=\"small\" className=\"u-suggestion-card__suggestion-avatar\">\n          <CloseOutlined />\n        </AntAvatar>\n      ) : (\n        <Avatar id={avatarId} size=\"small\" className=\"u-suggestion-card__suggestion-avatar\" />\n      )}\n      {suggestion}\n    </Card>\n  );\n}\n","import { Space } from 'antd';\nimport { SuggestionCard } from './SuggestionCard';\n\ntype CardsProps = {\n  suggestions: UseSoIssoSuggestion[];\n  readOnly: boolean;\n  players: GamePlayers;\n  onSetValidation: Function;\n  isLoading: boolean;\n  myRecommendation: UseSoIssoSuggestion[];\n};\n\nexport function Cards({\n  suggestions,\n  players,\n  onSetValidation,\n  isLoading,\n  myRecommendation,\n  readOnly = true,\n}: CardsProps) {\n  return (\n    <Space className=\"u-word-compare-suggestions-step__suggestions\">\n      {suggestions.map((suggestionEntry, index) => {\n        if (readOnly) {\n          return (\n            <div key={`${suggestionEntry.suggestion}-${index}`}>\n              <SuggestionCard\n                suggestion={suggestionEntry.suggestion}\n                invalid={suggestionEntry.invalid}\n                playerName={players[suggestionEntry.playerId].name}\n                avatarId={players[suggestionEntry.playerId].avatarId}\n                index={index}\n              />\n            </div>\n          );\n        }\n\n        return (\n          <button\n            key={`${suggestionEntry.suggestion}-${index}`}\n            className=\"u-word-compare-suggestions-step__suggestion-button\"\n            onClick={() => onSetValidation(index, suggestionEntry)}\n            disabled={isLoading}\n          >\n            <SuggestionCard\n              suggestion={suggestionEntry.suggestion}\n              invalid={myRecommendation?.[index]?.invalid}\n              avatarId={players[suggestionEntry.playerId].avatarId}\n              playerName={players[suggestionEntry.playerId].name}\n              index={index}\n            />\n          </button>\n        );\n      })}\n    </Space>\n  );\n}\n","import { useEffect, useState } from 'react';\n// Ant Design Resources\nimport { Button, message, Space } from 'antd';\nimport { CloudUploadOutlined } from '@ant-design/icons';\n// Hooks\nimport { useGlobalState, useLanguage, useLoading } from 'hooks';\n// Utils\nimport { deepCopy } from 'utils/helpers';\n// Components\nimport { UeSoIssoCard as Card } from './components/UeSoIssoCard';\nimport { ComparisonDetailedRules, ComparisonPhaseRules } from './components/RulesBlobs';\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { PopoverRule } from 'components/rules';\nimport { AdminButton, AdminOnlyContainer } from 'components/admin';\nimport { messageContent } from 'components/pop-up';\nimport { Cards } from './components/Cards';\n\ntype StepCompareSuggestionsProps = {\n  isUserTheController: boolean;\n  controller: GamePlayer;\n  onValidateSuggestions: GenericFunction;\n  onUpdateSuggestions: GenericFunction;\n  players: GamePlayers;\n  secretWord: UeSoIssoCard;\n  suggestions: UseSoIssoSuggestion[];\n};\n\nexport function StepCompareSuggestions({\n  isUserTheController,\n  controller,\n  onValidateSuggestions,\n  onUpdateSuggestions,\n  players,\n  secretWord,\n  suggestions,\n}: StepCompareSuggestionsProps) {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n  const [myRecommendation, setMyRecommendation] = useState<UseSoIssoSuggestion[]>(deepCopy(suggestions));\n  const [isAdmin] = useGlobalState('isAdmin');\n  const [wasMessageShown, setWasMessageShown] = useState(false);\n\n  const onSetValidation = (index: number, suggestionEntry: UseSoIssoSuggestion, notAllowed?: boolean) => {\n    if (notAllowed) return;\n\n    const newRecommendation = [...myRecommendation];\n    if (newRecommendation[index]) {\n      newRecommendation[index].invalid = !newRecommendation[index].invalid;\n    } else {\n      newRecommendation[index] = {\n        ...suggestionEntry,\n        invalid: true,\n      };\n    }\n\n    onUpdateSuggestions({ suggestions: newRecommendation });\n    setMyRecommendation(newRecommendation);\n  };\n\n  useEffect(() => {\n    if (isUserTheController && !wasMessageShown && !isLoading) {\n      message.info(\n        messageContent(\n          translate('Você controla!', 'You control!'),\n          translate('Siga as instruções na página', 'Follow the instructions on the page'),\n          controller.id,\n          3\n        )\n      );\n      setWasMessageShown(true);\n    }\n  }, [isUserTheController, controller.id, translate, wasMessageShown, isLoading]);\n\n  const suggestionsValues = Object.values(myRecommendation);\n\n  return (\n    <Step fullWidth>\n      <Title white>\n        <Translate pt=\"Comparem as Dicas\" en=\"Compare Clues\" />\n      </Title>\n\n      <Card word={secretWord.text} />\n\n      <PopoverRule content={<ComparisonDetailedRules />} showLabel />\n\n      <ComparisonPhaseRules controller={controller} />\n\n      <Cards\n        suggestions={suggestions}\n        readOnly={!isUserTheController}\n        players={players}\n        onSetValidation={onSetValidation}\n        isLoading={isLoading}\n        myRecommendation={myRecommendation}\n      />\n\n      {isUserTheController && (\n        <Space className=\"u-word-compare-suggestions-step__submit\">\n          <Button\n            icon={<CloudUploadOutlined />}\n            type=\"primary\"\n            onClick={() =>\n              onValidateSuggestions({\n                validSuggestions: suggestionsValues.filter((suggestion) => !suggestion.invalid),\n              })\n            }\n            disabled={isLoading}\n          >\n            <Translate pt=\"Confirmar dicas válidas\" en=\"Confirm valid clues\" />\n          </Button>\n        </Space>\n      )}\n\n      <AdminOnlyContainer direction=\"vertical\" align=\"center\">\n        <Cards\n          suggestions={suggestions}\n          readOnly={!isAdmin}\n          players={players}\n          onSetValidation={onSetValidation}\n          isLoading={isLoading}\n          myRecommendation={myRecommendation}\n        />\n        <AdminButton\n          onClick={() =>\n            onValidateSuggestions({\n              validSuggestions: suggestionsValues.filter((suggestion) => !suggestion.invalid),\n            })\n          }\n        >\n          <Translate pt=\"Confirmar dicas válidas como Admin\" en=\"Confirm valid clues as Admin\" />\n        </AdminButton>\n      </AdminOnlyContainer>\n    </Step>\n  );\n}\n","// Hooks\nimport { useWhichPlayerIsThe, useLanguage, useStep } from 'hooks';\nimport { useOnSubmitValidationsAPIRequest, useOnValidateSuggestionAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { StepCompareSuggestions } from './StepCompareSuggestions';\nimport { ComparisonRules } from './components/RulesBlobs';\nimport { GuesserWaitingRoom } from './components/GuesserWaitingRoom';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { ViewOr } from 'components/views';\nimport { WaitingRoom } from 'components/players';\n\nfunction PhaseCompare({ state, players, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, goToNextStep, setStep } = useStep(0);\n  const [, isUserTheGuesser] = useWhichPlayerIsThe('guesserId', state, players);\n  const [controller, isUserTheController] = useWhichPlayerIsThe('controllerId', state, players);\n\n  const onValidateSuggestions = useOnSubmitValidationsAPIRequest(setStep);\n\n  const onUpdateSuggestions = useOnValidateSuggestionAPIRequest();\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.UE_SO_ISSO.COMPARE}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          type=\"verify-list\"\n          title={translate('Comparação de dicas!', 'Clue Check!')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <ComparisonRules />\n          {isUserTheGuesser && (\n            <Instruction contained>\n              <Translate\n                pt=\"Já que você é o adivinhador, relaxe e aguarde... novamente\"\n                en=\"Since you're the guesser, just relax and wait... again\"\n              />\n            </Instruction>\n          )}\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <ViewOr orCondition={isUserTheGuesser}>\n          <GuesserWaitingRoom\n            players={players}\n            instructionSuffix={{\n              pt: 'validam dicas',\n              en: 'validate the clues',\n            }}\n          />\n\n          <StepCompareSuggestions\n            controller={controller}\n            isUserTheController={isUserTheController}\n            secretWord={state.secretWord}\n            suggestions={state.suggestions}\n            players={players}\n            onValidateSuggestions={onValidateSuggestions}\n            onUpdateSuggestions={onUpdateSuggestions}\n          />\n        </ViewOr>\n\n        {/* Step 2 */}\n        <WaitingRoom\n          players={players}\n          title={translate('Enviando a confirmação de dicas', 'Sending confirmation')}\n          instruction=\"...\"\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseCompare;\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, Input, Space } from 'antd';\nimport { CloudUploadOutlined, MinusOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLanguage, useLoading } from 'hooks';\n// Components\nimport { Translate } from 'components/language';\n\ntype GuessProps = {\n  onSubmitOutcome: GenericFunction;\n  onSendGuess: GenericFunction;\n};\n\nexport function Guess({ onSubmitOutcome, onSendGuess }: GuessProps) {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n  const [guess, setGuess] = useState('');\n\n  const onPressEnter = () => {\n    if (guess && guess.length > 0) {\n      onSendGuess({ guess });\n    }\n  };\n\n  return (\n    <Space className=\"u-word-guess-phase__suggestions\">\n      <Input\n        placeholder={translate('Digite aqui seu chute', 'Type your guess here')}\n        onChange={(e) => setGuess(e.target.value)}\n        onPressEnter={onPressEnter}\n        size=\"large\"\n      />\n      <Button\n        icon={<CloudUploadOutlined />}\n        type=\"primary\"\n        onClick={() => onSendGuess({ guess })}\n        disabled={guess.length < 3 || isLoading}\n        size=\"large\"\n      >\n        <Translate pt=\"Enviar\" en=\"Submit\" />\n      </Button>\n      <span>\n        <Translate pt=\"OU\" en=\"OR\" />\n      </span>\n      <Button\n        icon={<MinusOutlined />}\n        type=\"default\"\n        onClick={() => onSubmitOutcome({ outcome: 'PASS' })}\n        disabled={isLoading}\n      >\n        <Translate pt=\"Passar a vez...\" en=\"Skip turn\" />\n      </Button>\n    </Space>\n  );\n}\n","// Ant Design Resources\nimport { Space } from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\n// Components\n\nimport { UeSoIssoCard as Card } from './components/UeSoIssoCard';\nimport { Guess } from './components/Guess';\nimport { SuggestionEasel } from './components/SuggestionEasel';\nimport { Step } from 'components/steps';\nimport { ViewOr } from 'components/views';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { AvatarName } from 'components/avatars';\n\ntype StepGuessingProps = {\n  guesser: GamePlayer;\n  isUserTheGuesser: boolean;\n  secretWord: UeSoIssoCard;\n  onSendGuess: GenericFunction;\n  onSubmitOutcome: GenericFunction;\n  validSuggestions: UseSoIssoSuggestion[];\n};\n\nexport function StepGuessing({\n  guesser,\n  isUserTheGuesser,\n  secretWord,\n  onSendGuess,\n  onSubmitOutcome,\n  validSuggestions,\n}: StepGuessingProps) {\n  return (\n    <Step fullWidth>\n      <ViewOr orCondition={isUserTheGuesser}>\n        <Space direction=\"vertical\" align=\"center\">\n          <Title>\n            <Translate pt=\"Hora de brilhar\" en=\"Time to shine\" />, <AvatarName player={guesser} />!\n          </Title>\n          <Instruction contained>\n            <Translate\n              pt=\"Você tem uma única chance de adivinhar a palavra secreta!\"\n              en=\"You have a single chance to guess the secret word!\"\n            />\n          </Instruction>\n\n          <Card word={<QuestionCircleOutlined />} />\n\n          <Instruction contained>\n            <Translate pt=\"Escreva seu chute no campo abaixo\" en=\"Write your guess below\" />\n          </Instruction>\n          <Guess onSubmitOutcome={onSubmitOutcome} onSendGuess={onSendGuess} />\n\n          <Space className=\"u-word-guess-phase__suggestions\">\n            {validSuggestions.map((suggestionEntry, index) => {\n              const id = `${suggestionEntry.suggestion}-${index}`;\n              return <SuggestionEasel key={id} id={id} value={suggestionEntry.suggestion} />;\n            })}\n          </Space>\n        </Space>\n\n        <Space direction=\"vertical\" align=\"center\">\n          <Title>\n            <Translate\n              pt={\n                <>\n                  Hora de <AvatarName player={guesser} /> brilhar!\n                </>\n              }\n              en={\n                <>\n                  Time for <AvatarName player={guesser} /> to shine!\n                </>\n              }\n            />\n          </Title>\n\n          <Instruction contained>\n            {guesser.name}{' '}\n            <Translate\n              pt=\"tem uma única chance de adivinhar a palavra secreta!\"\n              en=\"has a single chance to guess the secret word!\"\n            />\n          </Instruction>\n\n          <Card word={secretWord.text} />\n\n          <Instruction contained>\n            {guesser.name} <Translate pt=\"está pensando...\" en=\"is thinking...\" />\n          </Instruction>\n\n          <Space className=\"u-word-guess-phase__suggestions\">\n            {validSuggestions.map((suggestionEntry, index) => {\n              const id = `${suggestionEntry.suggestion}-${index}`;\n              return <SuggestionEasel key={id} id={id} value={suggestionEntry.suggestion} />;\n            })}\n          </Space>\n        </Space>\n      </ViewOr>\n    </Step>\n  );\n}\n","import { useEffect } from 'react';\nimport clsx from 'clsx';\n// Ant Design Resources\nimport { Button, message, Space } from 'antd';\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from 'hooks';\n// Components\nimport { UeSoIssoCard as Card } from './components/UeSoIssoCard';\nimport { SuggestionEasel } from './components/SuggestionEasel';\nimport { messageContent } from 'components/pop-up';\nimport { Step } from 'components/steps';\nimport { Instruction, TextHighlight, Title } from 'components/text';\nimport { AvatarName } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { ViewOr } from 'components/views';\nimport { getAnimationClass } from 'utils/helpers';\n\ntype StepGuessVerificationProps = {\n  guess: string;\n  guesser: GamePlayer;\n  isAdmin: boolean;\n  isLoading: boolean;\n  isUserTheGuesser: boolean;\n  isUserTheController: boolean;\n  controller: GamePlayer;\n  secretWord: UeSoIssoCard;\n  onSubmitOutcome: GenericFunction;\n  validSuggestions: UseSoIssoSuggestion[];\n};\n\nexport function StepGuessVerification({\n  guess,\n  guesser,\n  isAdmin,\n  isLoading,\n  isUserTheGuesser,\n  isUserTheController,\n  controller,\n  secretWord,\n  onSubmitOutcome,\n  validSuggestions,\n}: StepGuessVerificationProps) {\n  const { translate } = useLanguage();\n\n  useEffect(() => {\n    if (isUserTheController && !isLoading) {\n      message.info(\n        messageContent(\n          translate('Você controla!', 'You control!'),\n          translate('Selecione se o adivinhador acertou ou não', 'Select if the guesser got it right or not'),\n          controller.id,\n          3\n        )\n      );\n    }\n  }, [isUserTheController, controller.id, translate, isLoading]);\n\n  return (\n    <Step fullWidth>\n      <Title className={getAnimationClass('heartBeat')}>\n        <AvatarName player={guesser} addressUser /> <Translate pt=\"disse\" en=\"said\" />{' '}\n        <TextHighlight>{guess}</TextHighlight>\n      </Title>\n\n      <Card word={secretWord.text} />\n\n      <Instruction contained>\n        <ViewOr orCondition={isUserTheGuesser}>\n          <Translate\n            pt={\n              <>\n                <AvatarName player={controller} /> está encarregado(a) de apertar os botões se você acertou ou\n                não. <br />\n                São 3 pontos se você acertar, -1 se errar, mas você pode passar e não tentar, covarde!..{' '}\n                <br />\n                As dicas foram:\n              </>\n            }\n            en={\n              <>\n                <AvatarName player={controller} /> is in charge of confirming if you got it right or not.\n                <br />\n                It's 3 points if you get it right but -1 if you get it wrong. <br />\n                The clues were:\n              </>\n            }\n          />\n\n          <Translate\n            pt={\n              <>\n                <AvatarName player={controller} addressUser /> está encarregado(a) de apertar os botões se{' '}\n                <AvatarName player={guesser} />\n                acertou ou não. <br />\n                São 3 pontos se você acertar, -1 se errar, mas você pode passar e não tentar, covarde!..{' '}\n                <br />\n                As dicas são:\n              </>\n            }\n            en={\n              <>\n                <AvatarName player={controller} addressUser /> is in charge to confirm if{' '}\n                <AvatarName player={guesser} /> got it correct or not. <br />\n                It's 3 points if they got it right but -1 if they got it wrong. <br />\n                The clues were:\n              </>\n            }\n          />\n        </ViewOr>\n      </Instruction>\n\n      <Space className=\"u-word-guess-phase__suggestions\">\n        {validSuggestions.map((suggestionEntry, index) => {\n          const id = `${suggestionEntry.suggestion}-${index}`;\n          return <SuggestionEasel key={id} id={id} value={suggestionEntry.suggestion} />;\n        })}\n      </Space>\n\n      {(isUserTheController || isAdmin) && (\n        <Space className={clsx('u-word-guess-phase__guess-submit', isAdmin && 'admin-container')}>\n          <Button\n            icon={<CheckOutlined />}\n            type=\"primary\"\n            style={{ backgroundColor: 'green' }}\n            onClick={() => onSubmitOutcome({ outcome: 'CORRECT' })}\n            disabled={isLoading}\n          >\n            <Translate pt=\"Acertou\" en=\"Correct\" />\n          </Button>\n          <Button\n            icon={<CloseOutlined />}\n            type=\"primary\"\n            danger\n            onClick={() => onSubmitOutcome({ outcome: 'WRONG' })}\n            disabled={isLoading}\n          >\n            <Translate pt=\"Errou\" en=\"Wrong\" />\n          </Button>\n        </Space>\n      )}\n    </Step>\n  );\n}\n","import { useEffect } from 'react';\n// Hooks\nimport { useGlobalState, useLoading, useWhichPlayerIsThe, useLanguage, useStep } from 'hooks';\nimport { useOnSendGuessAPIRequest, useOnSubmitOutcomeAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { StepGuessing } from './StepGuessing';\nimport { StepGuessVerification } from './StepGuessVerification';\nimport { GuessingRules } from './components/RulesBlobs';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\n\nfunction PhaseGuess({ state, players, info }: PhaseProps) {\n  const { isLoading } = useLoading();\n  const { translate } = useLanguage();\n  const { step, goToNextStep, setStep } = useStep(0);\n  const [isAdmin] = useGlobalState('isAdmin');\n  const [guesser, isUserTheGuesser] = useWhichPlayerIsThe('guesserId', state, players);\n  const [controller, isUserTheController] = useWhichPlayerIsThe('controllerId', state, players);\n\n  const onSubmitOutcome = useOnSubmitOutcomeAPIRequest(setStep);\n\n  const onSendGuess = useOnSendGuessAPIRequest();\n\n  // If guess is present in the state, move to the next step\n  useEffect(() => {\n    if (state?.guess) {\n      setStep(2);\n    }\n  }, [state, setStep]);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.UE_SO_ISSO.GUESS}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          type=\"guess\"\n          title={translate('Adivinhação', 'Guessing')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <GuessingRules guesserName={guesser.name} />\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepGuessing\n          guesser={guesser}\n          isUserTheGuesser={isUserTheGuesser}\n          onSubmitOutcome={onSubmitOutcome}\n          onSendGuess={onSendGuess}\n          validSuggestions={state.validSuggestions}\n          secretWord={state.secretWord}\n        />\n\n        {/* Step 2 */}\n        <StepGuessVerification\n          guesser={guesser}\n          guess={state.guess}\n          isUserTheGuesser={isUserTheGuesser}\n          onSubmitOutcome={onSubmitOutcome}\n          validSuggestions={state.validSuggestions}\n          secretWord={state.secretWord}\n          controller={controller}\n          isUserTheController={isUserTheController}\n          isAdmin={isAdmin}\n          isLoading={isLoading}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseGuess;\n","// Components\nimport { GameOverWrapper } from 'components/game-over';\n\nfunction PhaseGameOver({ state, info }: PhaseProps) {\n  return <GameOverWrapper info={info} state={state} announcementIcon=\"flag\" />;\n}\n\nexport default PhaseGameOver;\n","// Constants\nimport { GAME_COLLECTION } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport PhaseWordSelection from './PhaseWordSelection';\nimport PhaseSuggest from './PhaseSuggest';\nimport PhaseCompare from './PhaseCompare';\nimport PhaseGuess from './PhaseGuess';\nimport PhaseGameOver from './PhaseGameOver';\n\nfunction SessionUeSoIsso({ gameId }: SessionProps) {\n  function getActiveComponent(phase: string) {\n    switch (phase) {\n      case PHASES.DEFAULT.LOBBY:\n        return PhaseLobby;\n      case PHASES.DEFAULT.RULES:\n        return PhaseRules;\n      case PHASES.DEFAULT.SETUP:\n        return PhaseSetup;\n      case PHASES.UE_SO_ISSO.WORD_SELECTION:\n        return PhaseWordSelection;\n      case PHASES.UE_SO_ISSO.SUGGEST:\n        return PhaseSuggest;\n      case PHASES.UE_SO_ISSO.COMPARE:\n        return PhaseCompare;\n      case PHASES.UE_SO_ISSO.GUESS:\n        return PhaseGuess;\n      case PHASES.DEFAULT.GAME_OVER:\n        return PhaseGameOver;\n      default:\n        return PageError;\n    }\n  }\n\n  return (\n    <Session\n      gameId={gameId}\n      gameCollection={GAME_COLLECTION.UE_SO_ISSO}\n      getActiveComponent={getActiveComponent}\n    />\n  );\n}\n\nexport default SessionUeSoIsso;\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Hooks\nimport { useLoading, useGlobalState } from 'hooks';\n// Components\nimport { AvatarCard, AvatarIcon } from 'components/avatars';\nimport { TransparentButton } from 'components/buttons';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\n\ntype StepBossPlayerSelectionProps = {\n  players: GamePlayers;\n  onBossPlayerClick: GenericFunction;\n};\n\nexport function StepBossPlayerSelection({ players, onBossPlayerClick }: StepBossPlayerSelectionProps) {\n  const { isLoading } = useLoading();\n  const [isAdmin] = useGlobalState('isAdmin');\n\n  return (\n    <Step key={1}>\n      <Title>\n        <AvatarIcon type=\"animated-clock\" size=\"large\" />\n        <br />\n        <Translate pt=\"Quem quer ser o Chefe?\" en=\"Who wants to be the Boss?\" />\n      </Title>\n\n      <Instruction contained>\n        <Space>\n          {Object.values(players).map((player) => {\n            if (isAdmin) {\n              return (\n                <TransparentButton\n                  key={`p-bt-${player.id}`}\n                  disabled={isLoading}\n                  onClick={() => onBossPlayerClick({ bossId: player.id })}\n                >\n                  <AvatarCard key={`p-a-${player.id}`} player={player} withName addressUser />\n                </TransparentButton>\n              );\n            }\n\n            return <AvatarCard key={`p-a-${player.id}`} player={player} withName addressUser />;\n          })}\n        </Space>\n      </Instruction>\n\n      <Instruction>\n        (\n        <Translate pt=\"O administrator selecionará o chefe\" en=\"The Admin will select the boss\" />)\n      </Instruction>\n    </Step>\n  );\n}\n","// Hooks\nimport { useLanguage, useStep } from 'hooks';\nimport { useOnSubmitBossPlayerAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { StepBossPlayerSelection } from './StepBossPlayerSelection';\n\nfunction PhaseBossPlayerSelection({ state, players, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, setStep, goToNextStep } = useStep(0);\n\n  const onBossPlayerClick = useOnSubmitBossPlayerAPIRequest(setStep);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.VENDAVAL_DE_PALPITE.BOSS_SELECTION}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          type=\"boss\"\n          title={translate('O Chefe', 'The Boss')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          duration={10}\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  Um jogador deve ser o Chefe que sabe exatamente o que ele quer (a palavra secreta) e os\n                  outros serão funcionários na reunião de brainstorm.\n                </>\n              }\n              en={\n                <>\n                  One player must be the Boss who knows exactly wht they want (the secret word) and the other\n                  players will be the employees participating in this brainstorm meeting.\n                </>\n              }\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepBossPlayerSelection players={players} onBossPlayerClick={onBossPlayerClick} />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseBossPlayerSelection;\n","import { VENDAVAL_DE_PALPITE_API } from 'services/adapters';\nimport { useAPICall, useLanguage } from 'hooks';\n\nexport function useOnSubmitBossPlayerAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: VENDAVAL_DE_PALPITE_API.submitAction,\n    actionName: 'submit-boss',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate('Chefe enviado com sucesso!', 'Boss submitted successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar o chefe',\n      'Oops, the application failed to send the boss player'\n    ),\n  });\n\n  return (payload: SubmitBossPlayerPayload) => {\n    request({\n      action: 'SUBMIT_BOSS',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitSecretWordAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: VENDAVAL_DE_PALPITE_API.submitAction,\n    actionName: 'submit-secret-word',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate('Palavra Secreta enviada com sucesso!', 'Secret word sent successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar palavra secreta',\n      'Oops, the application failed to send your secret word'\n    ),\n  });\n\n  return (payload: SubmitSecretWordPayload) => {\n    request({\n      action: 'SUBMIT_SECRET_WORD',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitPlayerCluesAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: VENDAVAL_DE_PALPITE_API.submitAction,\n    actionName: 'submit-player-clues',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(1),\n    successMessage: translate('Dica enviada com sucesso!', 'Clue sent successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar dica',\n      'Oops, the application failed to send clue'\n    ),\n  });\n\n  return (payload: SubmitPlayerCluesPayload) => {\n    request({\n      action: 'SUBMIT_CLUES',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitEvaluationAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: VENDAVAL_DE_PALPITE_API.submitAction,\n    actionName: 'submit-evaluation',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate('Avaliação enviada com sucesso!', 'Evaluation sent successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar avaliação',\n      'Oops, the application failed to send evaluation'\n    ),\n  });\n\n  return (payload: SubmitEvaluationPayload) => {\n    request({\n      action: 'SUBMIT_EVALUATION',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitOutcomeAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: VENDAVAL_DE_PALPITE_API.submitAction,\n    actionName: 'submit-outcome',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate('Resultado enviado com sucesso!', 'Outcome sent successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar resultado',\n      'Oops, the application failed to send outcome'\n    ),\n  });\n\n  return (payload: SubmitOutcomePayload) => {\n    request({\n      action: 'SUBMIT_OUTCOME',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitHelpAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: VENDAVAL_DE_PALPITE_API.submitAction,\n    actionName: 'submit-help',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(1),\n    successMessage: translate('Ajuda enviada com sucesso!', 'Help sent successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar ajuda',\n      'Oops, the application failed to send help'\n    ),\n  });\n\n  return (payload: SubmitHelpPayload) => {\n    request({\n      action: 'SUBMIT_HELP',\n      ...payload,\n    });\n  };\n}\n","// Ant Design Resources\nimport { Button, notification, Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks';\n// Components\nimport { TransparentButton } from 'components/buttons';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { useState } from 'react';\nimport { Card } from 'components/cards';\nimport { CheckCircleFilled } from '@ant-design/icons';\n\ntype StepSecretWordSelectionProps = {\n  words: DefaultTextCard[];\n  categories: DefaultTextCard[];\n  onSubmitSecretWord: GenericFunction;\n};\n\nexport function StepSecretWordSelection({\n  words,\n  categories,\n  onSubmitSecretWord,\n}: StepSecretWordSelectionProps) {\n  const { isLoading } = useLoading();\n  const [secretWord, setSecretWord] = useState('');\n  const [selectedCategories, setSelectedCategories] = useState<BooleanDictionary>({});\n  const isReadyToSend = Boolean(secretWord && Object.keys(selectedCategories).length > 0);\n\n  const handleCategoryAdd = (category: string) => {\n    const categoriesCopy: BooleanDictionary = { ...selectedCategories };\n    if (categoriesCopy[category]) {\n      delete categoriesCopy[category];\n    } else {\n      // Block more than 2 categories\n      if (Object.keys(categoriesCopy).length === 2) {\n        notification.error({\n          message: <Translate pt=\"Um máximo de 2 categorias é permitido\" en=\"Up to 2 categories allowed\" />,\n        });\n      } else {\n        categoriesCopy[category] = true;\n      }\n    }\n\n    setSelectedCategories(categoriesCopy);\n  };\n\n  return (\n    <Step key={1}>\n      <Title size=\"medium\">\n        <Translate pt=\"A Palavra Secreta\" en=\"The Secret Word\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt=\"Escolha a palavra secreta para os outros jogadores tentarem adivinhar e então selecione uma ou duas categorias que melhor se encaixam com a palavra escolhida\"\n          en=\"Select a secret word so the other players can guess, then select up to 2 categories that best match the clue\"\n        />\n      </Instruction>\n\n      <Space wrap className=\"space-container\" align=\"center\">\n        {words.map((word) => {\n          return (\n            <TransparentButton\n              key={`p-bt-${word.id}`}\n              disabled={isLoading}\n              onClick={() => setSecretWord(word.text)}\n              active={secretWord === word.text}\n            >\n              <Card>{word.text}</Card>\n            </TransparentButton>\n          );\n        })}\n      </Space>\n\n      <Title level={3} size=\"x-small\">\n        <Translate pt=\"Categorias\" en=\"Categories\" />\n      </Title>\n\n      <Instruction contained>\n        <Space wrap className=\"space-container\" align=\"center\">\n          {categories.map((category) => {\n            return (\n              <Button\n                key={`p-bt-${category.id}`}\n                disabled={isLoading || !secretWord}\n                onClick={() => handleCategoryAdd(category.text)}\n                className=\"v-secret-word-button\"\n              >\n                {selectedCategories[category.text] && <CheckCircleFilled />} {category.text}\n              </Button>\n            );\n          })}\n        </Space>\n      </Instruction>\n\n      <Button\n        type=\"primary\"\n        disabled={!isReadyToSend}\n        onClick={() =>\n          onSubmitSecretWord({\n            secretWord,\n            categories: Object.keys(selectedCategories),\n          })\n        }\n      >\n        <Translate pt=\"Enviar \" en=\"Submit \" />\n        {isReadyToSend && (\n          <span>\n            \"{secretWord}\" + {Object.keys(selectedCategories).join(', ')}\n          </span>\n        )}\n      </Button>\n    </Step>\n  );\n}\n","import { WaitingRoom } from 'components/players';\nimport { Step } from 'components/steps';\nimport { useLanguage } from 'hooks';\n\ntype StepWaitingProps = {\n  players: GamePlayers;\n  instruction: any;\n};\n\nexport function StepWaiting({ players, instruction }: StepWaitingProps) {\n  const { translate } = useLanguage();\n\n  return (\n    <Step fullWidth>\n      <WaitingRoom players={players} title={translate('Aguarde', 'Please wait')} instruction={instruction} />\n    </Step>\n  );\n}\n","// Hooks\nimport { useLanguage, useStep, useWhichPlayerIsThe } from 'hooks';\nimport { useOnSubmitSecretWordAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { AvatarName } from 'components/avatars';\nimport { ViewOr } from 'components/views';\nimport { StepSecretWordSelection } from './StepSecretWordSelection';\nimport { StepWaiting } from './StepWaiting';\n\nfunction PhaseSecretWordSelection({ state, players, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, setStep, goToNextStep } = useStep(0);\n  const [boss, isUserTheBoss] = useWhichPlayerIsThe('bossId', state, players);\n\n  const onSubmitSecretWord = useOnSubmitSecretWordAPIRequest(setStep);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.VENDAVAL_DE_PALPITE.SECRET_WORD_SELECTION}\n    >\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          type=\"knowledge\"\n          title={translate('A Palavra Secreta', 'The Secret Word')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          duration={5}\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  O chefe <AvatarName player={boss} /> escolherá a palavra-secreta e sua categoria.\n                </>\n              }\n              en={\n                <>\n                  The boss <AvatarName player={boss} /> will choose the secret clue and its category.\n                </>\n              }\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <ViewOr orCondition={isUserTheBoss}>\n          <StepSecretWordSelection\n            words={state.words}\n            categories={state.categories}\n            onSubmitSecretWord={onSubmitSecretWord}\n          />\n\n          <StepWaiting\n            players={players}\n            instruction={\n              <Translate\n                pt={\n                  <>\n                    O mestre <AvatarName player={boss} /> está escolhendo a palavra-secreta e sua categoria.\n                  </>\n                }\n                en={\n                  <>\n                    The boss <AvatarName player={boss} /> is choosing the secret clue and its category.\n                  </>\n                }\n              />\n            }\n          />\n        </ViewOr>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseSecretWordSelection;\n","import { shuffle } from 'utils/helpers';\n\nconst suggestedWords = [\n  'tall',\n  'round',\n  'alive',\n  'furry',\n  'big',\n  'red',\n  'lives in water',\n  'related to death',\n  'can be touched',\n  'edible',\n  'long',\n  'do I have it?',\n  'harmful',\n  'virtual',\n  'yellow',\n  'can I put in my mouth?',\n  'is it legal?',\n  'warm',\n  'beautiful',\n  'larger than an elephant',\n];\n\nexport function mockClues(quantity: number): string[] {\n  const randomWords = shuffle(suggestedWords);\n\n  return randomWords.slice(0, quantity);\n}\n","export const WRITE_CLUE_TIME = 180;\nexport const WRITE_CLUE_TIME_FIRST_ROUND = 240;\n","import { Avatar, Tooltip } from 'antd';\nimport clsx from 'clsx';\nimport { AvatarIcon, AvatarName } from 'components/avatars';\nimport { Translate } from 'components/language';\n\ntype BoardProps = {\n  board: VBoard;\n  clues: VClues;\n  players: GamePlayers;\n};\n\nexport function Board({ board, clues, players }: BoardProps) {\n  const boardEntries = Object.keys(board);\n  return (\n    <div className=\"v-board\">\n      {boardEntries.map((boardKey, index) => {\n        const boardEntry = board[boardKey];\n        const isLatestBoard = index === boardEntries.length - 1;\n\n        return (\n          <div\n            key={`board-key-${boardKey}`}\n            className={clsx('v-board__entry', isLatestBoard && 'v-board__entry--active')}\n          >\n            <ul className=\"v-board__clues\">\n              {boardEntry.clues.map((clueId) => (\n                <Clue clue={clues[clueId]} key={clueId} players={players} />\n              ))}\n            </ul>\n            <div className=\"v-board__evaluation\">\n              {boardEntry.evaluation !== undefined ? (\n                <Tooltip title={<Translate pt=\"Quantidade de dicas corretas\" en=\"Amount of correct clues\" />}>\n                  <Avatar size={48} shape=\"circle\" style={{ backgroundColor: 'green' }}>\n                    {boardEntry.evaluation}\n                  </Avatar>\n                </Tooltip>\n              ) : (\n                <AvatarIcon size={48} type=\"question\" shape=\"square\" />\n              )}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\ntype ClueProps = {\n  clue: VClue;\n  players: GamePlayers;\n};\n\nfunction Clue({ clue, players }: ClueProps) {\n  return (\n    <li className=\"v-clue\">\n      <div className={clsx('v-clue__text', clue.isGuess && 'v-clue__text--guess')}>\n        <div className=\"v-clue__text-inner\">{clue.clue}</div>\n      </div>\n      <div className=\"v-clue__player\">\n        <AvatarName player={players[clue.playerId]} />\n      </div>\n    </li>\n  );\n}\n","import { Input, Switch } from 'antd';\nimport clsx from 'clsx';\nimport { Translate } from 'components/language';\nimport { useLanguage } from 'hooks';\nimport { useEffect, useState } from 'react';\n\ntype ClueInputProps = {\n  id: string;\n  onChangeInput?: GenericFunction;\n  onPressEnter?: GenericFunction;\n  value?: string;\n  toggleGuessIds: Function;\n  disabled: boolean;\n};\n\nexport function ClueInput({\n  id,\n  onChangeInput,\n  onPressEnter,\n  value,\n  toggleGuessIds,\n  disabled,\n}: ClueInputProps) {\n  const { translate } = useLanguage();\n  const [isGuess, setIsGuess] = useState(false);\n\n  useEffect(() => {\n    toggleGuessIds(id, isGuess);\n  }, [isGuess]); // eslint-disable-line\n\n  return (\n    <div className={clsx('v-clue-input', isGuess && 'v-clue-input--guess')}>\n      <div className=\"v-clue-input__inner\">\n        <Input\n          placeholder={\n            disabled ? translate('Acabou o tempo', \"Time's up\") : translate('Escreva dica aqui', 'Write here')\n          }\n          key={id}\n          id={id}\n          value={value}\n          onChange={onChangeInput}\n          className=\"v-clue-input__input\"\n          bordered={false}\n          onPressEnter={onPressEnter}\n          autoComplete=\"off\"\n          disabled={disabled}\n        />\n      </div>\n      <Switch\n        className=\"v-clue-input__switch\"\n        size=\"small\"\n        unCheckedChildren={<Translate pt=\"Dica\" en=\"Clue\" />}\n        checkedChildren={<Translate pt=\"Resposta\" en=\"Guess\" />}\n        onChange={(e) => setIsGuess(e)}\n      />\n    </div>\n  );\n}\n","import { Card } from 'components/cards';\nimport { useLanguage } from 'hooks';\nimport { pluralize } from 'utils/helpers';\n\ntype CategoryCardProps = {\n  categories: string[];\n};\n\nexport function CategoryCard({ categories }: CategoryCardProps) {\n  const { translate } = useLanguage();\n\n  return (\n    <Card\n      header={pluralize(\n        categories.length,\n        translate('Categoria', 'Category'),\n        translate('Categorias', 'Categories')\n      )}\n      color=\"brown\"\n    >\n      {categories.join(' + ')}\n    </Card>\n  );\n}\n","import { useState } from 'react';\nimport { useTimer } from 'react-timer-hook';\n// Ant Design Resources\nimport { Alert } from 'antd';\nimport { CloudUploadOutlined } from '@ant-design/icons';\n// Hooks\nimport { useMock } from 'hooks';\n// Utils\nimport { mockClues } from './utils/mock';\nimport { inNSeconds } from 'utils/helpers';\nimport { getAnimationClass } from 'utils/helpers';\nimport { SEPARATOR } from 'utils/constants';\nimport { WRITE_CLUE_TIME, WRITE_CLUE_TIME_FIRST_ROUND } from './utils/constants';\n// Components\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { Board } from './components/Board';\nimport { ControlledInputWriting } from 'components/input';\nimport { ClueInput } from './components/ClueInput';\nimport { CategoryCard } from './components/CategoryCard';\nimport { TimerBar } from 'components/timers';\n\ntype StepPlayerClueProps = {\n  secretWord: string;\n  categories: string[];\n  onSubmitClues: GenericFunction;\n  board: VBoard;\n  clues: VClues;\n  boss: GamePlayer;\n  finalAnswersLeft: number;\n  cluesPerPlayer: number;\n  players: GamePlayers;\n  round: GameRound;\n};\n\nexport function StepPlayerClue({\n  secretWord,\n  categories,\n  onSubmitClues,\n  board,\n  clues,\n  boss,\n  finalAnswersLeft,\n  cluesPerPlayer,\n  players,\n  round,\n}: StepPlayerClueProps) {\n  const [guessesIds, setGuessesIds] = useState<number[]>([]);\n  const [disableInputs, setDisableInputs] = useState(false);\n\n  useMock(() => {\n    onSubmitClues({ clues: mockClues(cluesPerPlayer) });\n  }, []);\n\n  const timerTotal = round.current === 1 ? WRITE_CLUE_TIME_FIRST_ROUND : WRITE_CLUE_TIME;\n\n  const { minutes, seconds } = useTimer({\n    expiryTimestamp: inNSeconds(timerTotal),\n    autoStart: true,\n    onExpire: () => {\n      setDisableInputs(true);\n    },\n  });\n\n  const timer = minutes * 60 + seconds;\n\n  const toggleGuessIds = (id: string, isGuess: boolean) => {\n    const index = Number(id.split(SEPARATOR)[1]);\n    setGuessesIds((s) => {\n      let sCopy = [...s];\n      if (isGuess) {\n        sCopy.push(index);\n        return sCopy;\n      }\n      return sCopy.filter((e) => e !== index);\n    });\n  };\n\n  const onSubmitEverything = (payload: PlainObject) => {\n    const clues: string[] = [];\n    const guesses: string[] = [];\n    payload.clues.forEach((clue: string, index: number) => {\n      if (guessesIds.includes(index)) {\n        guesses.push(clue);\n      } else {\n        clues.push(clue);\n      }\n    });\n\n    onSubmitClues({\n      clues,\n      guesses,\n    });\n  };\n\n  return (\n    <Step fullWidth>\n      <Title size=\"medium\">\n        <Translate pt=\"Escreva palpites\" en=\"Write Ideas\" />\n      </Title>\n\n      <CategoryCard categories={categories} />\n\n      <Board board={board} clues={clues} players={players} />\n\n      <Instruction contained>\n        <Translate\n          pt=\"Escreva pistas para ajudar a afunilar as possibilidades. Vocês tem 3 minutos\"\n          en=\"Write clues that will have narrow down the possibilities. You have 3 minutes\"\n        />\n      </Instruction>\n\n      <TimerBar value={timer} total={timerTotal} steps={timerTotal / 3} />\n\n      <ControlledInputWriting\n        onSubmit={onSubmitEverything}\n        valueKey=\"clues\"\n        inputQuantity={cluesPerPlayer}\n        inputComponent={ClueInput}\n        restrictMax={!disableInputs}\n        inputComponentProps={{\n          toggleGuessIds,\n          disabled: disableInputs,\n        }}\n        submitButtonLabel={\n          guessesIds.length > 0 ? (\n            <>\n              {cluesPerPlayer > 1 ? (\n                <Translate pt=\"Enviar dicas e respostas\" en=\"Send clues and guesses\" />\n              ) : (\n                <Translate pt=\"Enviar resposta\" en=\"Send guess\" />\n              )}\n            </>\n          ) : (\n            <>\n              <Translate pt=\"Enviar dica\" en=\"Send clue\" />\n              {cluesPerPlayer > 1 && 's'}\n            </>\n          )\n        }\n        submitButtonProps={{\n          icon: <CloudUploadOutlined />,\n          size: 'large',\n        }}\n      />\n\n      {guessesIds.length > 0 && (\n        <Instruction className={getAnimationClass('zoomIn')}>\n          <Alert\n            type=\"warning\"\n            showIcon\n            message={\n              <Translate\n                pt={\n                  <>\n                    Você está prestes a enviar uma resposta. O grupo pode enviar um máximo de{' '}\n                    {finalAnswersLeft} respostas. Se esse número exceder, o grupo perde o jogo imediatamente.\n                  </>\n                }\n                en={\n                  <>\n                    You are about to send an Answer. The group may send a maximum of {finalAnswersLeft}{' '}\n                    answers total. If this number is exceeded, the game is lost immediately.\n                  </>\n                }\n              />\n            }\n          />\n        </Instruction>\n      )}\n\n      <Instruction>\n        <Alert\n          type=\"info\"\n          showIcon\n          description={\n            finalAnswersLeft === 3 ? (\n              <Translate\n                pt={\n                  <>\n                    Durante o jogo, o grupo tem 3 chances de adivinhar a palavra secreta, para isso o jogador\n                    que escrever a palavra secreta tem que marcar a sua dica como 'Resposta' clicando no\n                    botãozinho 'Dica' na carta. <br /> O grupo ainda tem {finalAnswersLeft} chances sobrando\n                    para adivinhar.\n                  </>\n                }\n                en={\n                  <>\n                    During the game, the group has 3 chances of guessing the secret word, to do so the player\n                    who wants to write the secret word must switch the type of answer to 'Guess' by clicking\n                    on the 'Clue' button in the card.\n                    <br /> The group still has {finalAnswersLeft} chances to guess.\n                  </>\n                }\n              />\n            ) : (\n              <Translate\n                pt={\n                  <>\n                    O grupo tem mais {finalAnswersLeft} chances de adivinhar a palavra secreta, para isso o\n                    jogador que escrever a palavra secreta tem que marcar a sua dica como 'Resposta' clicando\n                    no botãozinho 'Dica' na carta.\n                  </>\n                }\n                en={\n                  <>\n                    The group has {finalAnswersLeft} more chances of guessing the secret word, to do so the\n                    player who wants to write the secret word must switch the type of answer to 'Guess' by\n                    clicking on the 'Clue' button in the card.\n                  </>\n                }\n              />\n            )\n          }\n        />\n      </Instruction>\n    </Step>\n  );\n}\n","// Hooks\nimport { useLanguage } from 'hooks';\n// Components\nimport { Card } from 'components/cards';\n\ntype SecretWordCardProps = {\n  secretWord: string;\n};\n\nexport function SecretWordCard({ secretWord }: SecretWordCardProps) {\n  const { translate } = useLanguage();\n\n  return (\n    <Card header={translate('Palavra Secreta', 'Secret Word')} color=\"red\">\n      {secretWord}\n    </Card>\n  );\n}\n","import { Space } from 'antd';\nimport { CategoryCard } from './CategoryCard';\nimport { SecretWordCard } from './SecretWordCard';\n\ntype CategoryWordGroupProps = {\n  categories: string[];\n  secretWord: string;\n  showSecretWord?: boolean;\n};\n\nexport function CategoryWordGroup({ categories, secretWord, showSecretWord }: CategoryWordGroupProps) {\n  return (\n    <Space className=\"full-width space-container\">\n      <CategoryCard categories={categories} />\n      {showSecretWord && <SecretWordCard secretWord={secretWord} />}\n    </Space>\n  );\n}\n","// Hooks\nimport { useLanguage } from 'hooks';\n// Components\nimport { Translate } from 'components/language';\nimport { WaitingRoom } from 'components/players';\nimport { Step } from 'components/steps';\nimport { Board } from './components/Board';\nimport { CategoryWordGroup } from './components/CategoryWordGroup';\n\ntype StepBossWaitingProps = {\n  players: GamePlayers;\n  board: VBoard;\n  clues: VClues;\n  secretWord: string;\n  categories: string[];\n};\n\nexport function StepBossWaiting({ players, board, clues, secretWord, categories }: StepBossWaitingProps) {\n  const { translate } = useLanguage();\n\n  return (\n    <Step fullWidth>\n      <WaitingRoom\n        players={players}\n        title={translate('Aguarde', 'Please wait')}\n        instruction={\n          <Translate pt=\"Os jogadores estão escrevendo dicas\" en=\"The players are writing clues\" />\n        }\n      />\n\n      <CategoryWordGroup categories={categories} secretWord={secretWord} showSecretWord />\n\n      <Board players={players} clues={clues} board={board} />\n    </Step>\n  );\n}\n","// Hooks\nimport { useLanguage, useStep, useWhichPlayerIsThe } from 'hooks';\nimport { useOnSubmitPlayerCluesAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction, RoundsLeftInstruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { StepPlayerClue } from './StepPlayerClue';\nimport { RoundAnnouncement } from 'components/round';\nimport { ViewOr } from 'components/views';\nimport { StepBossWaiting } from './StepBossWaiting';\nimport { Board } from './components/Board';\n\nfunction PhasePlayersClues({ state, players, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, setStep, goToNextStep } = useStep(0);\n  const [boss, isUserTheBoss] = useWhichPlayerIsThe('bossId', state, players);\n\n  const onSubmitClues = useOnSubmitPlayerCluesAPIRequest(setStep);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.VENDAVAL_DE_PALPITE.PLAYERS_CLUES}>\n      <StepSwitcher\n        step={step}\n        players={players}\n        waitingRoomContent={<Board players={players} clues={state.clues} board={state.board} />}\n      >\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state?.round}\n          onPressButton={goToNextStep}\n          buttonText=\" \"\n          time={5}\n          circleColor=\"red\"\n        >\n          <RoundsLeftInstruction round={state.round} />\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <PhaseAnnouncement\n          type=\"discussion\"\n          title={translate('Reunião', 'Meeting')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          duration={5}\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  O chefe quer a próxima ideia brilhante! Escreva dicas para tentar desvendar o que o chefe\n                  quer! Discuta com os outros funcionários e evitem escrever a mesma coisa. Ideias contrárias\n                  não ajudam muito.\n                </>\n              }\n              en={<>TODO</>}\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <ViewOr orCondition={isUserTheBoss}>\n          <StepBossWaiting\n            secretWord={state.secretWord}\n            board={state.board}\n            clues={state.clues}\n            categories={state.categories}\n            players={players}\n          />\n\n          <StepPlayerClue\n            secretWord={state.secretWord}\n            board={state.board}\n            clues={state.clues}\n            categories={state.categories}\n            onSubmitClues={onSubmitClues}\n            boss={boss}\n            finalAnswersLeft={state.finalAnswersLeft}\n            cluesPerPlayer={state.cluesPerPlayer}\n            players={players}\n            round={state.round}\n          />\n        </ViewOr>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhasePlayersClues;\n","import { Alert, Button, Divider } from 'antd';\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n\ntype OutcomeOptionsProps = {\n  outcome?: string;\n  onSubmitOutcome: Function;\n  finalAnswersLeft: number;\n};\n\nexport function OutcomeOptions({ outcome, onSubmitOutcome, finalAnswersLeft }: OutcomeOptionsProps) {\n  return (\n    <>\n      <Divider />\n\n      <Instruction contained>\n        {outcome && outcome !== 'CONTINUE' ? (\n          <Alert\n            type=\"warning\"\n            showIcon\n            message={\n              <>\n                <Avatar id=\"A\" size=\"small\" />{' '}\n                <Translate\n                  pt=\"Meu algorítimo me diz que um dos casos abaixo aconteceu, selecione o apropriado:\"\n                  en=\"According to my calculations, one of the cases below happened, select the appropriate case:\"\n                />\n              </>\n            }\n          />\n        ) : (\n          <Translate\n            pt=\"Se qualquer um dos casos abaixo acontecer, clique no botão apropriado\"\n            en=\"If any of the cases below trigger, click the appropriate button\"\n          />\n        )}\n      </Instruction>\n\n      <div className=\"v-case-container\">\n        <div className=\"v-case\">\n          <Instruction contained>\n            <Translate\n              pt=\"Alguém escreveu a resposta numa carta VERMELHA\"\n              en=\"Someone wrote the answer in a RED card\"\n            />\n          </Instruction>\n          <Button\n            type=\"primary\"\n            ghost\n            onClick={() =>\n              onSubmitOutcome({\n                outcome: 'WIN',\n              })\n            }\n          >\n            <Translate pt=\"Ganhamos!\" en=\"Win!\" />\n          </Button>\n        </div>\n        <div className=\"v-case\">\n          <Instruction contained>\n            <Translate\n              pt=\"Alguém escreveu a resposta numa carta BRANCA\"\n              en=\"Someone wrote the answer in a WHITE card\"\n            />\n          </Instruction>\n          <Button\n            danger\n            ghost\n            onClick={() =>\n              onSubmitOutcome({\n                outcome: 'FAIL',\n              })\n            }\n          >\n            <Translate pt=\"Perdermos\" en=\"Lose\" />\n          </Button>\n        </div>\n        <div className=\"v-case\">\n          <Instruction contained>\n            <Translate\n              pt=\"Jogadores usaram mais respostas do que tinham\"\n              en=\"Players wrote more Guesses than they had available\"\n            />{' '}\n            ({finalAnswersLeft})\n          </Instruction>\n          <Button\n            type=\"primary\"\n            danger\n            ghost\n            onClick={() =>\n              onSubmitOutcome({\n                outcome: 'FAIL',\n              })\n            }\n            disabled={finalAnswersLeft >= 0}\n          >\n            <Translate pt=\"Perdermos\" en=\"Lose\" />\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n}\n","import { CheckOutlined, CloseOutlined } from '@ant-design/icons';\nimport { Button, Space, Switch } from 'antd';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { useState } from 'react';\n\ntype ClueEvaluationProps = {\n  clues: VClues;\n  latestBoardEntry: BoardEntry;\n  onSubmitEvaluation: Function;\n};\n\nexport function ClueEvaluation({ clues, latestBoardEntry, onSubmitEvaluation }: ClueEvaluationProps) {\n  const [evaluation, setEvaluation] = useState<BooleanDictionary>(\n    latestBoardEntry.clues.reduce((acc: BooleanDictionary, clueId) => {\n      acc[clueId] = false;\n      return acc;\n    }, {})\n  );\n\n  const updateEvaluation = (clueId: string, value: boolean) => {\n    setEvaluation((s) => ({ ...s, [clueId]: value }));\n  };\n\n  return (\n    <>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Avalie as dicas tem ou não a ver com a palavra secreta.\n              <br /> Você pode fazer perguntar para clarificar o que os jogadores quiseram dizer.\n            </>\n          }\n          en={\n            <>\n              Evaluate if each of the current clues are related to the secret word. You can ask clarifying\n              questions about any of them.\n            </>\n          }\n        />\n      </Instruction>\n\n      <ul className=\"v-boss-evaluation\">\n        {Object.keys(evaluation).map((clueId) => {\n          return (\n            <li className=\"v-boss-evaluation__item\">\n              <Switch\n                checkedChildren={\n                  <>\n                    <CheckOutlined /> <Translate pt=\"Tem a ver\" en=\"Relates\" />\n                  </>\n                }\n                unCheckedChildren={\n                  <>\n                    <CloseOutlined /> <Translate pt=\"Nada a ver\" en=\"Does not relate\" />\n                  </>\n                }\n                onChange={(e) => updateEvaluation(clueId, e)}\n              />\n\n              <span className=\"v-boss-evaluation__clue\">{clues[clueId].clue}</span>\n            </li>\n          );\n        })}\n\n        <Space className=\"space-container\">\n          <Button type=\"primary\" size=\"large\" onClick={() => onSubmitEvaluation({ evaluation })}>\n            <Translate pt=\"Enviar avaliação\" en=\"Submit evaluation\" />\n          </Button>\n        </Space>\n      </ul>\n    </>\n  );\n}\n","// Components\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { Board } from './components/Board';\nimport { CategoryWordGroup } from './components/CategoryWordGroup';\nimport { OutcomeOptions } from './components/OutcomeOptions';\nimport { ClueEvaluation } from './components/ClueEvaluation';\n\ntype StepBossEvaluationProps = {\n  secretWord: string;\n  categories: string[];\n  onSubmitEvaluation: Function;\n  onSubmitOutcome: Function;\n  onSubmitHelp: Function;\n  board: VBoard;\n  clues: VClues;\n  finalAnswersLeft: number;\n  players: GamePlayers;\n  round: GameRound;\n  outcome?: string;\n};\n\nexport function StepBossEvaluation({\n  secretWord,\n  categories,\n  onSubmitEvaluation,\n  onSubmitOutcome,\n  onSubmitHelp,\n  board,\n  clues,\n  finalAnswersLeft,\n  players,\n  round,\n  outcome,\n}: StepBossEvaluationProps) {\n  const latestBoardEntry = board[round.current];\n\n  return (\n    <Step fullWidth>\n      <Title size=\"medium\">\n        <Translate pt=\"Avaliação\" en=\"Avaliação\" />\n      </Title>\n\n      <CategoryWordGroup categories={categories} secretWord={secretWord} showSecretWord />\n\n      <Board board={board} clues={clues} players={players} />\n\n      <ClueEvaluation\n        clues={clues}\n        latestBoardEntry={latestBoardEntry}\n        onSubmitEvaluation={onSubmitEvaluation}\n      />\n\n      <OutcomeOptions\n        outcome={outcome}\n        onSubmitOutcome={onSubmitOutcome}\n        finalAnswersLeft={finalAnswersLeft}\n      />\n    </Step>\n  );\n}\n","// Ant Design Resources\nimport { Alert } from 'antd';\n// Components\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { Board } from './components/Board';\nimport { CategoryCard } from './components/CategoryCard';\nimport { Avatar, AvatarName } from 'components/avatars';\n\ntype StepPlayersWaitEvaluationProps = {\n  categories: string[];\n  board: VBoard;\n  clues: VClues;\n  finalAnswersLeft: number;\n  players: GamePlayers;\n  boss: GamePlayer;\n};\n\nexport function StepPlayersWaitEvaluation({\n  categories,\n  board,\n  clues,\n  finalAnswersLeft,\n  boss,\n  players,\n}: StepPlayersWaitEvaluationProps) {\n  return (\n    <Step fullWidth>\n      <Title size=\"medium\">\n        <Translate pt=\"Avaliação\" en=\"Avaliação\" />\n      </Title>\n\n      <CategoryCard categories={categories} />\n\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Veja as pistas escrita por outros jogadores e aguarde enquanto <AvatarName player={boss} /> as\n              avalia.\n            </>\n          }\n          en={\n            <>\n              Check the clues written by other players while <AvatarName player={boss} /> is evaluating them.\n            </>\n          }\n        />\n      </Instruction>\n\n      <Alert\n        type=\"warning\"\n        showIcon\n        message={\n          <>\n            <Avatar id=\"A\" size=\"small\" />\n            <Translate\n              pt={<>O grupo usou até agora {3 - finalAnswersLeft}/3 chances de respostas finais</>}\n              en={<>The group has used so far {3 - finalAnswersLeft}/3 chances of final answers</>}\n            />\n          </>\n        }\n      />\n\n      <Board board={board} clues={clues} players={players} />\n    </Step>\n  );\n}\n","// Hooks\nimport { useLanguage, useStep, useWhichPlayerIsThe } from 'hooks';\nimport {\n  useOnSubmitEvaluationAPIRequest,\n  useOnSubmitHelpAPIRequest,\n  useOnSubmitOutcomeAPIRequest,\n} from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { ViewOr } from 'components/views';\nimport { StepBossEvaluation } from './StepBossEvaluation';\nimport { StepPlayersWaitEvaluation } from './StepPlayersWaitEvaluation';\n\nfunction PhaseClueEvaluations({ state, players, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, setStep, goToNextStep } = useStep(0);\n  const [boss, isUserTheBoss] = useWhichPlayerIsThe('bossId', state, players);\n\n  const onSubmitEvaluation = useOnSubmitEvaluationAPIRequest(setStep);\n  const onSubmitOutcome = useOnSubmitOutcomeAPIRequest(setStep);\n  const onSubmitHelp = useOnSubmitHelpAPIRequest(setStep);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.VENDAVAL_DE_PALPITE.CLUE_EVALUATIONS}\n    >\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          type=\"loupe\"\n          title={translate('Avaliação das Pistas', 'Clue Evaluation')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          duration={5}\n        >\n          <Instruction>\n            <Translate\n              pt={<>Os jogadores agora escrevem dicas para tentar adivinhar a palavra secreta.</>}\n              en={<>Players now write clues to try to guess the secret word.</>}\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <ViewOr orCondition={isUserTheBoss}>\n          <StepBossEvaluation\n            secretWord={state.secretWord}\n            board={state.board}\n            clues={state.clues}\n            categories={state.categories}\n            onSubmitEvaluation={onSubmitEvaluation}\n            onSubmitOutcome={onSubmitOutcome}\n            onSubmitHelp={onSubmitHelp}\n            finalAnswersLeft={state.finalAnswersLeft}\n            players={players}\n            round={state.round}\n            outcome={state.outcome}\n          />\n\n          <StepPlayersWaitEvaluation\n            board={state.board}\n            clues={state.clues}\n            categories={state.categories}\n            boss={boss}\n            finalAnswersLeft={state.finalAnswersLeft}\n            players={players}\n          />\n        </ViewOr>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseClueEvaluations;\n","import { Space } from 'antd';\n// Components\nimport { AvatarIcon } from 'components/avatars';\nimport { GameOverWrapper } from 'components/game-over';\nimport { Translate } from 'components/language';\nimport { Board } from './components/Board';\nimport { CategoryWordGroup } from './components/CategoryWordGroup';\n\nfunction PhaseGameOver({ state, players, info }: PhaseProps) {\n  return (\n    <GameOverWrapper\n      info={info}\n      state={state}\n      announcementIcon={state.outcome === 'WIN' ? 'trophy' : 'the-end'}\n      rateWidgetCustomText={<Translate pt=\"Sugira palavras-secretas\" en=\"Suggest secret words\" />}\n    >\n      <Space className=\"space-container\" direction=\"vertical\" align=\"center\">\n        {state.outcome === 'WIN' ? (\n          <>\n            <AvatarIcon type=\"quality-seal\" size={100} shape=\"square\" />\n            <Translate pt=\"VITÓRIA\" en=\"WIN\" />\n          </>\n        ) : (\n          <>\n            <AvatarIcon type=\"garbage\" size={100} shape=\"square\" />\n            <Translate pt=\"DERROTA\" en=\"LOSE\" />\n          </>\n        )}\n      </Space>\n      <CategoryWordGroup categories={state.categories} secretWord={state.secretWord} showSecretWord />\n      <Board players={players} clues={state.clues} board={state.board} />\n    </GameOverWrapper>\n  );\n}\n\nexport default PhaseGameOver;\n","// Constants\nimport { GAME_COLLECTION } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport PhaseBossPlayerSelection from './PhaseBossPlayerSelection';\nimport PhaseSecretWordSelection from './PhaseSecretWordSelection';\nimport PhasePlayersClues from './PhasePlayersClues';\nimport PhaseClueEvaluations from './PhaseClueEvaluations';\nimport PhaseGameOver from './PhaseGameOver';\n\nfunction SessionVendavalDePalpite({ gameId }: SessionProps) {\n  function getActiveComponent(phase: string) {\n    switch (phase) {\n      case PHASES.DEFAULT.LOBBY:\n        return PhaseLobby;\n      case PHASES.DEFAULT.RULES:\n        return PhaseRules;\n      case PHASES.DEFAULT.SETUP:\n        return PhaseSetup;\n      case PHASES.VENDAVAL_DE_PALPITE.BOSS_SELECTION:\n        return PhaseBossPlayerSelection;\n      case PHASES.VENDAVAL_DE_PALPITE.SECRET_WORD_SELECTION:\n        return PhaseSecretWordSelection;\n      case PHASES.VENDAVAL_DE_PALPITE.PLAYERS_CLUES:\n        return PhasePlayersClues;\n      case PHASES.VENDAVAL_DE_PALPITE.CLUE_EVALUATIONS:\n        return PhaseClueEvaluations;\n      case PHASES.DEFAULT.GAME_OVER:\n        return PhaseGameOver;\n      default:\n        return PageError;\n    }\n  }\n\n  return (\n    <Session\n      gameId={gameId}\n      gameCollection={GAME_COLLECTION.VENDAVAL_DE_PALPITE}\n      getActiveComponent={getActiveComponent}\n    />\n  );\n}\n\nexport default SessionVendavalDePalpite;\n","// This icon file is generated automatically.\nvar CloudUploadOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M518.3 459a8 8 0 00-12.6 0l-112 141.7a7.98 7.98 0 006.3 12.9h73.9V856c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V613.7H624c6.7 0 10.4-7.7 6.3-12.9L518.3 459z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M811.4 366.7C765.6 245.9 648.9 160 512.2 160S258.8 245.8 213 366.6C127.3 389.1 64 467.2 64 560c0 110.5 89.5 200 199.9 200H304c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8h-40.1c-33.7 0-65.4-13.4-89-37.7-23.5-24.2-36-56.8-34.9-90.6.9-26.4 9.9-51.2 26.2-72.1 16.7-21.3 40.1-36.8 66.1-43.7l37.9-9.9 13.9-36.6c8.6-22.8 20.6-44.1 35.7-63.4a245.6 245.6 0 0152.4-49.9c41.1-28.9 89.5-44.2 140-44.2s98.9 15.3 140 44.2c19.9 14 37.5 30.8 52.4 49.9 15.1 19.3 27.1 40.7 35.7 63.4l13.8 36.5 37.8 10C846.1 454.5 884 503.8 884 560c0 33.1-12.9 64.3-36.3 87.7a123.07 123.07 0 01-87.6 36.3H720c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h40.1C870.5 760 960 670.5 960 560c0-92.7-63.1-170.7-148.6-193.3z\" } }] }, \"name\": \"cloud-upload\", \"theme\": \"outlined\" };\nexport default CloudUploadOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloudUploadOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloudUploadOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CloudUploadOutlined = function CloudUploadOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CloudUploadOutlinedSvg\n  }));\n};\n\nCloudUploadOutlined.displayName = 'CloudUploadOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloudUploadOutlined);","// This icon file is generated automatically.\nvar DownSquareOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M505.5 658.7c3.2 4.4 9.7 4.4 12.9 0l178-246c3.8-5.3 0-12.7-6.5-12.7H643c-10.2 0-19.9 4.9-25.9 13.2L512 558.6 406.8 413.2c-6-8.3-15.6-13.2-25.9-13.2H334c-6.5 0-10.3 7.4-6.5 12.7l178 246z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z\" } }] }, \"name\": \"down-square\", \"theme\": \"outlined\" };\nexport default DownSquareOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DownSquareOutlinedSvg from \"@ant-design/icons-svg/es/asn/DownSquareOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar DownSquareOutlined = function DownSquareOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: DownSquareOutlinedSvg\n  }));\n};\n\nDownSquareOutlined.displayName = 'DownSquareOutlined';\nexport default /*#__PURE__*/React.forwardRef(DownSquareOutlined);","// This icon file is generated automatically.\nvar MinusOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M872 474H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h720c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"minus\", \"theme\": \"outlined\" };\nexport default MinusOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport MinusOutlinedSvg from \"@ant-design/icons-svg/es/asn/MinusOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar MinusOutlined = function MinusOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: MinusOutlinedSvg\n  }));\n};\n\nMinusOutlined.displayName = 'MinusOutlined';\nexport default /*#__PURE__*/React.forwardRef(MinusOutlined);","// This icon file is generated automatically.\nvar UpCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M518.5 360.3a7.95 7.95 0 00-12.9 0l-178 246c-3.8 5.3 0 12.7 6.5 12.7H381c10.2 0 19.9-4.9 25.9-13.2L512 460.4l105.2 145.4c6 8.3 15.6 13.2 25.9 13.2H690c6.5 0 10.3-7.4 6.5-12.7l-178-246z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"up-circle\", \"theme\": \"outlined\" };\nexport default UpCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport UpCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/UpCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar UpCircleOutlined = function UpCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: UpCircleOutlinedSvg\n  }));\n};\n\nUpCircleOutlined.displayName = 'UpCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(UpCircleOutlined);","// This icon file is generated automatically.\nvar WarningOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M464 720a48 48 0 1096 0 48 48 0 10-96 0zm16-304v184c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V416c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8zm475.7 440l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48zm-783.5-27.9L512 239.9l339.8 588.2H172.2z\" } }] }, \"name\": \"warning\", \"theme\": \"outlined\" };\nexport default WarningOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport WarningOutlinedSvg from \"@ant-design/icons-svg/es/asn/WarningOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar WarningOutlined = function WarningOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: WarningOutlinedSvg\n  }));\n};\n\nWarningOutlined.displayName = 'WarningOutlined';\nexport default /*#__PURE__*/React.forwardRef(WarningOutlined);"],"names":["Card","children","header","footer","color","size","randomColor","className","headerClassName","footerClassName","baseClass","bgColor","getColorFromLetter","toUpperCase","clsx","style","startsWith","backgroundColor","FloatingHand","subtitle","type","useState","isExpanded","setIsExpanded","translate","useLanguage","onMouseOver","onMouseLeave","alt","pt","en","ImageBlurButton","cardId","useBlurCards","blurCard","isBlurEnabled","placement","title","ghost","onClick","EyeInvisibleOutlined","ImageBlurButtonContainer","props","ImageCard","imageId","cardWidth","preview","shouldBeBlurred","fallbackName","length","imageURL","replace","isBlurred","width","src","process","placeholder","fallback","PUBLIC_URL","maskClassName","ImageCardHand","hand","onSelectCard","selectButtonLabel","selectButtonClass","sizeRatio","cardSize","minCardSize","disabledSelectButton","useCardWidth","map","Boolean","icon","DownSquareOutlined","disabled","ImageCardBack","previewImageId","ImageCardPreloadHand","ImageCardSelectButton","selectLabel","deselectLabel","isSelected","shape","UpCircleOutlined","custom","ControlledInputWriting","onSubmit","inputQuantity","restrictMax","valueKey","inputComponent","inputComponentProps","submitButtonProps","submitButtonLabel","values","setValues","isLoading","useLoading","onChangeInput","e","target","id","value","indexStr","split","SEPARATOR","index","Number","s","newState","trim","console","error","valuesCount","Object","onPressEnter","InputComponent","align","wrap","direction","Array","fill","entry","messageContent","description","duration","key","content","top","window","innerWidth","message","RoundAnnouncement","round","onPressButton","buttonText","time","unskippable","circleColor","roundTitlePt","roundTitleEn","getAnimationClass","current","onExpire","showTimer","TimerBar","steps","total","strokeLinecap","status","percentage","percent","showInfo","marginBottom","undefined","View","ViewIf","isVisible","ViewOr","orCondition","ViewSwitch","cases","Error","warn","StepWordSelection","guesser","onSendSelectedWords","words","selectedWords","setSelectedWords","selectedWordsArray","keys","noSelection","fullWidth","white","player","contained","word","wordId","text","CheckCircleFilled","CloudUploadOutlined","votes","randomSelection","GameProgressBar","groupScore","totalProgress","Math","success","strokeColor","GuesserWaitingRoom","players","instructionSuffix","language","instructionPrefix","instruction","RoundAnnouncementText","addressUser","state","info","isUserReady","useIsUserReady","useWhichPlayerIsThe","isUserTheGuesser","useStep","step","goToNextStep","setStep","request","useAPICall","apiFunction","UE_SO_ISSO_API","actionName","onBeforeCall","onError","successMessage","errorMessage","payload","action","useOnSubmitVotesAPIRequest","phase","allowedPhase","PHASES","conditions","onClose","currentRound","suggestions","SuggestionEasel","xmlns","viewBox","overflow","d","x","y","height","onChange","bordered","autoComplete","opacity","WritingRules","ComparisonRules","ComparisonDetailedRules","ComparisonPhaseRules","controller","ExclamationCircleOutlined","GuessingRules","guesserName","UeSoIssoCard","WarningOutlined","StepSuggestion","onSendSuggestions","secretWord","suggestionsNumber","useMock","sampleSize","mockSuggestions","useOnSubmitSuggestionsAPIRequest","SuggestionCard","avatarId","playerName","invalid","suggestion","getColorFromIndex","LETTERS","CloseOutlined","Cards","onSetValidation","myRecommendation","readOnly","suggestionEntry","playerId","name","StepCompareSuggestions","isUserTheController","onValidateSuggestions","onUpdateSuggestions","deepCopy","setMyRecommendation","useGlobalState","isAdmin","wasMessageShown","setWasMessageShown","notAllowed","newRecommendation","useEffect","suggestionsValues","showLabel","validSuggestions","filter","useOnSubmitValidationsAPIRequest","useOnValidateSuggestionAPIRequest","Guess","onSubmitOutcome","onSendGuess","guess","setGuess","MinusOutlined","outcome","StepGuessing","QuestionCircleOutlined","StepGuessVerification","CheckOutlined","danger","useOnSubmitOutcomeAPIRequest","useOnSendGuessAPIRequest","announcementIcon","gameId","gameCollection","GAME_COLLECTION","getActiveComponent","PhaseLobby","PhaseRules","PhaseSetup","PhaseWordSelection","PhaseSuggest","PhaseCompare","PhaseGuess","PhaseGameOver","PageError","StepBossPlayerSelection","onBossPlayerClick","bossId","withName","VENDAVAL_DE_PALPITE_API","useOnSubmitBossPlayerAPIRequest","StepSecretWordSelection","categories","onSubmitSecretWord","setSecretWord","selectedCategories","setSelectedCategories","isReadyToSend","active","level","category","categoriesCopy","notification","handleCategoryAdd","join","StepWaiting","boss","isUserTheBoss","useOnSubmitSecretWordAPIRequest","suggestedWords","Board","board","clues","boardEntries","boardKey","boardEntry","isLatestBoard","clueId","Clue","clue","evaluation","isGuess","ClueInput","toggleGuessIds","setIsGuess","unCheckedChildren","checkedChildren","CategoryCard","pluralize","StepPlayerClue","onSubmitClues","finalAnswersLeft","cluesPerPlayer","guessesIds","setGuessesIds","disableInputs","setDisableInputs","quantity","shuffle","slice","timerTotal","useTimer","expiryTimestamp","inNSeconds","autoStart","timer","minutes","seconds","guesses","forEach","includes","push","sCopy","showIcon","SecretWordCard","CategoryWordGroup","showSecretWord","StepBossWaiting","useOnSubmitPlayerCluesAPIRequest","waitingRoomContent","OutcomeOptions","ClueEvaluation","latestBoardEntry","onSubmitEvaluation","reduce","acc","setEvaluation","updateEvaluation","StepBossEvaluation","onSubmitHelp","StepPlayersWaitEvaluation","useOnSubmitEvaluationAPIRequest","useOnSubmitHelpAPIRequest","rateWidgetCustomText","PhaseBossPlayerSelection","PhaseSecretWordSelection","PhasePlayersClues","PhaseClueEvaluations","ref","React","AntdIcon","_objectSpread","CloudUploadOutlinedSvg","displayName","DownSquareOutlinedSvg","MinusOutlinedSvg","UpCircleOutlinedSvg","WarningOutlinedSvg"],"sourceRoot":""}