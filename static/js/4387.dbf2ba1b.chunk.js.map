{"version":3,"file":"static/js/4387.dbf2ba1b.chunk.js","mappings":"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","sources":["components/session/GameInfoContext.tsx","components/text/Instruction.tsx","components/text/RoundsLeftInstruction.tsx","components/text/TextHighlight.tsx","components/text/Title.tsx","components/text/RuleInstruction.tsx","utils/info.ts"],"sourcesContent":["import { createContext, ReactNode, useContext } from 'react';\nimport { useTitle } from 'react-use';\n// Types\nimport { GameInfo } from 'types/game-info';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport GAME_LIST from 'utils/info';\n\nconst PLACEHOLDER_GAME_INFO: GameInfo = {\n  gameCode: ' ',\n  gameName: '',\n  version: '',\n  release: '',\n  available: false,\n  title: { en: '', pt: '' },\n  popularName: { en: '', pt: '' },\n  basedOn: '',\n  summary: { en: '', pt: '' },\n  appearance: {\n    clouds: 'cloud',\n    primaryColor: '',\n    backgroundColor: 'rgba(0,0,0,0)',\n    colorScheme: 'light',\n  },\n  rules: {\n    pt: [''],\n    en: [''],\n  },\n  playerCount: {\n    recommended: [0],\n    min: 0,\n    max: 0,\n  },\n  tags: [''],\n};\n\nexport const GameInfoContext = createContext<GameInfo>(PLACEHOLDER_GAME_INFO);\n\ntype GameInfoContextType = {\n  gameCollection: GameName;\n  children: ReactNode;\n};\n\n/**\n * Provides game information context to its children components.\n * @param props.gameCollection - The key for the game collection to be used.\n * @param props.children - The child components that will consume the context.\n * @returns The provider component that wraps its children with game information context.\n */\nexport const GameInfoProvider = ({ gameCollection, children }: GameInfoContextType) => {\n  const { dualTranslate } = useLanguage();\n  const info =\n    gameCollection && GAME_LIST[gameCollection] ? GAME_LIST[gameCollection] : PLACEHOLDER_GAME_INFO;\n  const gameName = dualTranslate(info?.title ?? PLACEHOLDER_GAME_INFO.title);\n\n  useTitle(`${gameName ? `${gameName} | ` : ''}Tarde Divertida`);\n\n  return <GameInfoContext.Provider value={info}>{children}</GameInfoContext.Provider>;\n};\n\n/**\n * Custom hook to access the GameInfoContext.\n *\n * This hook provides the current context value of GameInfoContext.\n * If the hook is used outside of a GameInfoProvider, a warning is logged\n * and the context defaults to a placeholder.\n *\n * @returns The current context value of GameInfoContext.\n *\n * @example\n * const gameInfo = useGameInfoContext();\n *\n * @throws If the hook is used outside of a GameInfoProvider.\n */\nexport const useGameInfoContext = () => {\n  const context = useContext(GameInfoContext);\n\n  if (!context) {\n    console.warn('useGameInfoContext should be used within a GameInfoProvider, defaulting to placeholder');\n  }\n\n  return context;\n};\n\nexport const useGameAppearance = () => {\n  const info = useGameInfoContext();\n\n  return info.appearance;\n};\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Sass\nimport './Instruction.scss';\n\ntype InstructionsProps = {\n  /**\n   * The content of the instruction\n   */\n  children: ReactNode;\n  /**\n   * Adds a semi transparent background (white or black opposite to the white property)\n   */\n  contained?: boolean;\n  /**\n   * Make text color white\n   * @deprecated\n   */\n  white?: boolean;\n  /**\n   * Makes instruction width 100%\n   */\n  fullWidth?: boolean;\n  /**\n   * Custom class name\n   */\n  className?: string;\n  /**\n   * Removes margin from the instruction\n   */\n  noMargin?: boolean;\n  /**\n   * Color scheme\n   */\n  colorScheme?: ColorScheme;\n};\n\n/**\n * Typography container for instructions\n */\nexport const Instruction = ({\n  children,\n  white,\n  className,\n  contained,\n  fullWidth,\n  noMargin = false,\n  colorScheme,\n}: InstructionsProps) => {\n  const baseClass = 'instruction';\n\n  return (\n    <Typography.Text\n      className={clsx(\n        baseClass,\n        contained && `${baseClass}--contained`,\n        colorScheme === 'dark' && `${baseClass}--dark`,\n        white && `${baseClass}--white`,\n        fullWidth && `${baseClass}--full-width`,\n        noMargin && `${baseClass}--no-margin`,\n        className\n      )}\n      data-testid=\"instruction\"\n    >\n      {children}\n    </Typography.Text>\n  );\n};\n","// Types\nimport type { GameRound } from 'types/game';\n// Utils\nimport { pluralize } from 'utils/helpers';\n// Components\nimport { Translate } from 'components/language';\nimport { RuleInstruction } from 'components/text';\n\ntype RoundsLeftInstructionProps = {\n  /**\n   * The state round object with current and total values\n   */\n  round: GameRound;\n};\n\n/**\n * Displays instructional sentence based on the number of rounds left for the game to end\n */\nexport function RoundsLeftInstruction({ round }: RoundsLeftInstructionProps) {\n  const left = (round?.total ?? 0) - (round?.current ?? 0);\n\n  if (left === 0 || round.forceLastRound) {\n    return (\n      <RuleInstruction type=\"event\">\n        <Translate pt=\"Essa foi a Ãºltima rodada\" en=\"No more rounds left\" />\n      </RuleInstruction>\n    );\n  }\n\n  return (\n    <RuleInstruction type=\"tip\">\n      <Translate\n        pt={\n          <>\n            {pluralize(left, 'Falta', 'Faltam')} <strong>{left}</strong> {pluralize(left, 'rodada')} para o\n            jogo terminar...\n          </>\n        }\n        en={\n          <>\n            <strong>{left}</strong> {pluralize(left, 'round')} left for the game to end...\n          </>\n        }\n      />\n    </RuleInstruction>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Sass\nimport './TextHighlight.scss';\n\ntype TextHighlightProps = {\n  /**\n   * The text to be highlighted\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * If the highlight should be dark\n   */\n  dark?: boolean;\n};\n\nexport function TextHighlight({ children, className, dark }: TextHighlightProps) {\n  return (\n    <span className={clsx('text-highlight', dark && 'text-highlight--dark', className)}>{children}</span>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Components\nimport { useGameAppearance } from 'components/session/GameInfoContext';\n// Sass\nimport './Title.scss';\n\nexport type TitleProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * The color scheme of the title (@default: the game info appearance color scheme or light)\n   */\n  colorScheme?: ColorScheme;\n  /**\n   * Makes text white\n   * @deprecated\n   */\n  white?: boolean;\n  /**\n   * Icon prefixing the title\n   */\n  icon?: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * The heading level (@default: 2)\n   */\n  level?: 1 | 2 | 3 | 4 | 5;\n  /**\n   * The size of the title (@default: medium)\n   */\n  size?: 'xx-small' | 'x-small' | 'small' | 'medium' | 'large';\n  /**\n   * The alignment of the text (@default: center)\n   */\n  align?: 'left' | 'right' | 'center';\n};\n\nexport const Title = ({\n  children,\n  white,\n  colorScheme,\n  icon,\n  className,\n  level = 2,\n  size = 'medium',\n  align = 'center',\n}: TitleProps) => {\n  const appearance = useGameAppearance();\n  const color = colorScheme ?? appearance.colorScheme ?? 'light';\n\n  return (\n    <Typography.Title\n      level={level}\n      className={clsx(\n        'title',\n        `title--${size}`,\n        `title--align-${align}`,\n        `title--${color}`,\n        white && 'title--white',\n        className\n      )}\n    >\n      {Boolean(icon) && <span className=\"title__icon\">{icon}</span>}\n      {children}\n    </Typography.Title>\n  );\n};\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport {\n  AlertFilled,\n  BulbFilled,\n  ClockCircleFilled,\n  ExclamationCircleFilled,\n  MessageFilled,\n  PlayCircleFilled,\n  ReadFilled,\n  RobotFilled,\n  StarFilled,\n} from '@ant-design/icons';\nimport { Typography, theme } from 'antd';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Sass\nimport './RuleInstruction.scss';\n\nexport type RuleInstructionProps = {\n  /**\n   * The content of the rule instruction\n   */\n  children: ReactNode;\n  /**\n   * Makes instruction width 100%\n   */\n  fullWidth?: boolean;\n  /**\n   * Custom class name\n   */\n  className?: string;\n  /**\n   * The type of the rule instruction (default: rule)\n   * Rule is used for general rules\n   * Action is used when the player must do something\n   * Event is used when something happens like the result of an action or decision\n   * Alert is used when something very important needs attention (constant animation)\n   * Lore is used for story elements\n   * Scoring for result points (not rule)\n   * Wait for when the player must wait for something to happen\n   */\n  type: 'rule' | 'action' | 'event' | 'alert' | 'lore' | 'tip' | 'scoring' | 'wait' | 'bot';\n  /**\n   * Optional sound effect played when the component is rendered\n   */\n  sfx?: ReactNode;\n};\n\n/**\n * Typography container for rules instructions, if multiple lines, use <br /> to break lines\n * Do not use lists (ul, ol, li) inside this component\n * Add an icon on the left side\n */\nexport const RuleInstruction = ({\n  children,\n  className,\n  fullWidth,\n  type = 'rule',\n  sfx,\n}: RuleInstructionProps) => {\n  const baseClass = 'rule-instruction';\n\n  const icon = {\n    action: <PlayCircleFilled />,\n    alert: <AlertFilled />,\n    event: <ExclamationCircleFilled />,\n    lore: <MessageFilled />,\n    rule: <ReadFilled />,\n    tip: <BulbFilled />,\n    scoring: <StarFilled />,\n    wait: <ClockCircleFilled />,\n    bot: <RobotFilled />,\n  }[type];\n\n  const animationClass = {\n    action: getAnimationClass('shakeX'),\n    alert: getAnimationClass('flash', { infinite: true, speed: 'fast' }),\n    event: getAnimationClass('tada', { repeat: 3, speed: 'fast' }),\n    lore: getAnimationClass('pulse'),\n    rule: getAnimationClass('pulse'),\n    tip: getAnimationClass('pulse'),\n    scoring: getAnimationClass('pulse'),\n    wait: getAnimationClass('pulse'),\n    bot: getAnimationClass('pulse'),\n  }[type];\n\n  const { token } = theme.useToken();\n  const color = type === 'action' ? { background: token.colorPrimary } : {};\n\n  return (\n    <div\n      className={clsx(baseClass, fullWidth && `${baseClass}--full-width`, className)}\n      data-testid=\"rule-instruction\"\n    >\n      <div className={clsx(`${baseClass}__icon`, `${baseClass}__icon--${type}`)} style={color}>\n        <div className={animationClass}>{icon}</div>\n      </div>\n      {sfx}\n      <Typography.Paragraph className={clsx(`${baseClass}__content`)}>{children}</Typography.Paragraph>\n    </div>\n  );\n};\n","import comingSoonGames from 'assets/data/coming-soon-games.json';\nimport ADEDANHX from 'games/adedanhx/game-info.json';\nimport ARTE_RUIM from 'games/arte-ruim/game-info.json';\nimport BOMBA_RELOGIO from 'games/bomba-relogio/game-info.json';\nimport CINEGRAFISTAS_AMADORES from 'games/cinegrafistas-amadores/game-info.json';\nimport COMUNICACAO_ALIENIGENA from 'games/comunicacao-alienigena/game-info.json';\nimport CONTADORES_HISTORIAS from 'games/contadores-historias/game-info.json';\nimport CONTROLE_DE_ESTOQUE from 'games/controle-de-estoque/game-info.json';\nimport CRIMES_HEDIONDOS from 'games/crimes-hediondos/game-info.json';\nimport CRUZA_PALAVRAS from 'games/cruza-palavras/game-info.json';\nimport DETETIVES_IMAGINATIVOS from 'games/detetives-imaginativos/game-info.json';\nimport DILEMA_DOS_ESQUIADORES from 'games/dilema-dos-esquiadores/game-info.json';\nimport DUETOS from 'games/duetos/game-info.json';\nimport ESCAPE_ROOM from 'games/escape-room/game-info.json';\nimport ESPIAO_ENTRE_NOS from 'games/espiao-entre-nos/game-info.json';\nimport FILEIRA_DE_FATOS from 'games/fileira-de-fatos/game-info.json';\nimport GALERIA_DE_SONHOS from 'games/galeria-de-sonhos/game-info.json';\nimport INSTRUMENTOS_CODIFICADOS from 'games/instrumentos-codificados/game-info.json';\nimport LABIRINTO_SECRETO from 'games/labirinto-secreto/game-info.json';\nimport LINHAS_CRUZADAS from 'games/linhas-cruzadas/game-info.json';\nimport MEGAMIX from 'games/megamix/game-info.json';\nimport MENTE_COLETIVA from 'games/mente-coletiva/game-info.json';\nimport MESMICE from 'games/mesmice/game-info.json';\nimport NA_RUA_DO_MEDO from 'games/na-rua-do-medo/game-info.json';\nimport NAO_SOU_ROBO from 'games/nao-sou-robo/game-info.json';\nimport NAUFRAGOS from 'games/naufragos/game-info.json';\nimport ONDA_TELEPATICA from 'games/onda-telepatica/game-info.json';\nimport PALHETA_DE_CORES from 'games/palheta-de-cores/game-info.json';\nimport PLANEJAMENTO_URBANO from 'games/planejamento-urbano/game-info.json';\nimport POLEMICA_DA_VEZ from 'games/polemica-da-vez/game-info.json';\nimport PORTA_DOS_DESESPERADOS from 'games/porta-dos-desesperados/game-info.json';\nimport QUEM_NAO_MATA from 'games/quem-nao-mata/game-info.json';\nimport QUEM_SOU_EU from 'games/quem-sou-eu/game-info.json';\nimport RETRATO_FALADO from 'games/retrato-falado/game-info.json';\nimport SINAIS_DE_ALERTA from 'games/sinais-de-alerta/game-info.json';\nimport SONHOS_PESADELOS from 'games/sonhos-pesadelos/game-info.json';\nimport SUPER_CAMPEONATO from 'games/super-campeonato/game-info.json';\nimport TA_NA_CARA from 'games/ta-na-cara/game-info.json';\nimport TEORIA_DE_CONJUNTOS from 'games/teoria-de-conjuntos/game-info.json';\nimport TESTE_DE_ELENCO from 'games/teste-de-elenco/game-info.json';\nimport TESTEMUNHA_OCULAR from 'games/testemunha-ocular/game-info.json';\nimport TREVO_DA_SORTE from 'games/trevo-da-sorte/game-info.json';\nimport UE_SO_ISSO from 'games/ue-so-isso/game-info.json';\nimport VAMOS_AO_CINEMA from 'games/vamos-ao-cinema/game-info.json';\nimport VENDAVAL_DE_PALPITE from 'games/vendaval-de-palpite/game-info.json';\nimport VICE_CAMPEAO from 'games/vice-campeao/game-info.json';\nimport VINGATIVOS from 'games/vingativos/game-info.json';\n// Types\nimport type { GameInfo } from 'types/game-info';\n\nconst others = comingSoonGames as Record<GameName, GameInfo>;\n\nexport const GAME_LIST: Record<GameName, GameInfo> = {\n  ...others,\n  adedanhx: ADEDANHX,\n  'arte-ruim': ARTE_RUIM,\n  'bomba-relogio': BOMBA_RELOGIO,\n  'cinegrafistas-amadores': CINEGRAFISTAS_AMADORES,\n  'comunicacao-alienigena': COMUNICACAO_ALIENIGENA,\n  'contadores-historias': CONTADORES_HISTORIAS,\n  'controle-de-estoque': CONTROLE_DE_ESTOQUE,\n  'crimes-hediondos': CRIMES_HEDIONDOS,\n  'cruza-palavras': CRUZA_PALAVRAS,\n  'detetives-imaginativos': DETETIVES_IMAGINATIVOS,\n  'dilema-dos-esquiadores': DILEMA_DOS_ESQUIADORES,\n  duetos: DUETOS,\n  'escape-room': ESCAPE_ROOM,\n  'espiao-entre-nos': ESPIAO_ENTRE_NOS,\n  'fileira-de-fatos': FILEIRA_DE_FATOS,\n  'galeria-de-sonhos': GALERIA_DE_SONHOS,\n  'instrumentos-codificados': INSTRUMENTOS_CODIFICADOS,\n  'labirinto-secreto': LABIRINTO_SECRETO,\n  'linhas-cruzadas': LINHAS_CRUZADAS,\n  megamix: MEGAMIX,\n  'mente-coletiva': MENTE_COLETIVA,\n  mesmice: MESMICE,\n  'na-rua-do-medo': NA_RUA_DO_MEDO,\n  'nao-sou-robo': NAO_SOU_ROBO,\n  naufragos: NAUFRAGOS,\n  'onda-telepatica': ONDA_TELEPATICA,\n  'palheta-de-cores': PALHETA_DE_CORES,\n  'planejamento-urbano': PLANEJAMENTO_URBANO,\n  'polemica-da-vez': POLEMICA_DA_VEZ,\n  'porta-dos-desesperados': PORTA_DOS_DESESPERADOS,\n  'quem-nao-mata': QUEM_NAO_MATA,\n  'quem-sou-eu': QUEM_SOU_EU,\n  'retrato-falado': RETRATO_FALADO,\n  'sinais-de-alerta': SINAIS_DE_ALERTA,\n  'sonhos-pesadelos': SONHOS_PESADELOS,\n  'super-campeonato': SUPER_CAMPEONATO,\n  'ta-na-cara': TA_NA_CARA,\n  'teoria-de-conjuntos': TEORIA_DE_CONJUNTOS,\n  'testemunha-ocular': TESTEMUNHA_OCULAR,\n  'teste-de-elenco': TESTE_DE_ELENCO,\n  'trevo-da-sorte': TREVO_DA_SORTE,\n  'ue-so-isso': UE_SO_ISSO,\n  'vamos-ao-cinema': VAMOS_AO_CINEMA,\n  'vendaval-de-palpite': VENDAVAL_DE_PALPITE,\n  'vice-campeao': VICE_CAMPEAO,\n  vingativos: VINGATIVOS,\n};\n\nexport default GAME_LIST;\n"],"names":["PLACEHOLDER_GAME_INFO","gameCode","gameName","version","release","available","title","en","pt","popularName","basedOn","summary","appearance","clouds","primaryColor","backgroundColor","colorScheme","rules","playerCount","recommended","min","max","tags","GameInfoContext","createContext","GameInfoProvider","gameCollection","children","dualTranslate","useLanguage","info","GAME_LIST","useTitle","Provider","value","useGameInfoContext","context","useContext","console","warn","useGameAppearance","Instruction","white","className","contained","fullWidth","noMargin","baseClass","Text","clsx","RoundsLeftInstruction","round","left","total","current","forceLastRound","type","pluralize","TextHighlight","dark","Title","icon","level","size","align","color","Boolean","RuleInstruction","sfx","action","PlayCircleFilled","alert","AlertFilled","A","event","ExclamationCircleFilled","lore","MessageFilled","rule","ReadFilled","tip","BulbFilled","scoring","StarFilled","wait","ClockCircleFilled","bot","RobotFilled","animationClass","getAnimationClass","infinite","speed","repeat","token","theme","useToken","background","colorPrimary","style","Paragraph","others","comingSoonGames","adedanhx","ADEDANHX","ARTE_RUIM","BOMBA_RELOGIO","CINEGRAFISTAS_AMADORES","COMUNICACAO_ALIENIGENA","CONTADORES_HISTORIAS","CONTROLE_DE_ESTOQUE","CRIMES_HEDIONDOS","CRUZA_PALAVRAS","DETETIVES_IMAGINATIVOS","DILEMA_DOS_ESQUIADORES","duetos","DUETOS","ESCAPE_ROOM","ESPIAO_ENTRE_NOS","FILEIRA_DE_FATOS","GALERIA_DE_SONHOS","INSTRUMENTOS_CODIFICADOS","LABIRINTO_SECRETO","LINHAS_CRUZADAS","megamix","MEGAMIX","MENTE_COLETIVA","mesmice","MESMICE","NA_RUA_DO_MEDO","NAO_SOU_ROBO","naufragos","NAUFRAGOS","ONDA_TELEPATICA","PALHETA_DE_CORES","PLANEJAMENTO_URBANO","POLEMICA_DA_VEZ","PORTA_DOS_DESESPERADOS","QUEM_NAO_MATA","QUEM_SOU_EU","RETRATO_FALADO","SINAIS_DE_ALERTA","SONHOS_PESADELOS","SUPER_CAMPEONATO","TA_NA_CARA","TEORIA_DE_CONJUNTOS","TESTEMUNHA_OCULAR","TESTE_DE_ELENCO","TREVO_DA_SORTE","UE_SO_ISSO","VAMOS_AO_CINEMA","VENDAVAL_DE_PALPITE","VICE_CAMPEAO","vingativos","VINGATIVOS"],"sourceRoot":""}