{"version":3,"file":"static/js/arte-ruim.238d2431.chunk.js","mappings":"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","sources":["components/icons/MedalLightBulbIcon.tsx","components/icons/MedalPersonIcon.tsx","components/icons/TrophyIcon.tsx","components/metrics/TimeHighlight.tsx","components/points/StarPoints.tsx","components/ribbons/Ribbon.tsx","components/ribbons/RibbonGroup.tsx","components/slide-show/SlideShowControls.tsx","components/slide-show/SlideShow.tsx","games/arte-ruim/StepDraw.tsx","games/arte-ruim/components/TextBlobs.tsx","games/arte-ruim/PhaseDraw.tsx","games/arte-ruim/utils/api-requests.ts","games/arte-ruim/utils/helpers.ts","games/arte-ruim/components/EvaluationAllDrawings.tsx","games/arte-ruim/components/Card.tsx","games/arte-ruim/components/EvaluationAllCards.tsx","games/arte-ruim/StepEvaluation.tsx","games/arte-ruim/components/EvaluatedDrawings.tsx","games/arte-ruim/PhaseEvaluation.tsx","games/arte-ruim/components/GalleryWindowCredits.tsx","games/arte-ruim/components/GalleryWindowGuesses.tsx","games/arte-ruim/components/GalleryWindowResult.tsx","games/arte-ruim/StepGallery.tsx","games/arte-ruim/utils/constants.ts","games/arte-ruim/StepRanking.tsx","games/arte-ruim/PhaseGallery.tsx","games/arte-ruim/utils/achievements.ts","games/arte-ruim/components/DrawingGrade.tsx","games/arte-ruim/components/FinalGallery.tsx","games/arte-ruim/PhaseGameOver.tsx","games/arte-ruim/SessionArteRuim.tsx","hooks/useSlideShow.ts","hooks/useVotingMatch.ts"],"sourcesContent":["export function MedalLightBulbIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffe07d\"\n        d=\"M186.3 499l-22.2-41.8a10.41 10.41 0 00-12.2-5.1L106.7 466a10.4 10.4 0 01-13-6.9 10.51 10.51 0 01.3-7l79.8-192.6 111.1 46-79.8 192.6a10.41 10.41 0 01-13.6 5.6 10 10 0 01-5.2-4.7z\"\n      ></path>\n      <path\n        fill=\"#ffd064\"\n        d=\"M226.4 281.3l-70.5 170.4a10.55 10.55 0 018.3 5.5l22.1 41.8a10.4 10.4 0 0018.8-.9l79.8-192.6z\"\n      ></path>\n      <path\n        fill=\"#ffe07d\"\n        d=\"M325.5 499l22.2-41.8a10.41 10.41 0 0112.2-5.1l45.2 13.9a10.4 10.4 0 0013-6.9 10.51 10.51 0 00-.3-7L338 259.5l-111 46 79.8 192.6a10.41 10.41 0 0013.6 5.6 10.15 10.15 0 005.1-4.7z\"\n      ></path>\n      <path\n        fill=\"#ffd064\"\n        d=\"M417.8 452.1L338 259.5l-58.2 24.1L350.4 454a10.46 10.46 0 019.5-1.8l45.2 13.9a10.4 10.4 0 0013-6.9 10.77 10.77 0 00-.3-7.1z\"\n      ></path>\n      <path\n        fill=\"#e8ae4d\"\n        d=\"M275.9 14.5a32.14 32.14 0 0029.6 5.5 32.14 32.14 0 0137.4 14.5 32.14 32.14 0 0025.6 15.8 32.23 32.23 0 0129.6 27 32.22 32.22 0 0018.1 24 32.26 32.26 0 0117.9 35.9 32.51 32.51 0 008.2 29 32.16 32.16 0 013.7 39.9 32.31 32.31 0 00-2.8 30 32.2 32.2 0 01-11 38.5 32.44 32.44 0 00-13.4 26.9 32.19 32.19 0 01-24.1 32 32.3 32.3 0 00-22.2 20.3 32.2 32.2 0 01-34.1 21.1 32.23 32.23 0 00-28.1 10.9 32.25 32.25 0 01-39.4 7.4 32.08 32.08 0 00-30.1 0 32.27 32.27 0 01-39.4-7.4 32.5 32.5 0 00-28.1-10.9 32.32 32.32 0 01-34.1-21.1 32.3 32.3 0 00-22.2-20.3 32.39 32.39 0 01-24.2-32 32.24 32.24 0 00-13.4-27 32.2 32.2 0 01-11-38.5 32.31 32.31 0 00-2.8-30 32.16 32.16 0 013.7-39.9 32 32 0 008.2-29 32.25 32.25 0 0117.9-35.8 32.58 32.58 0 0018.2-24 32.23 32.23 0 0129.6-27 32.25 32.25 0 0025.6-15.9 32.39 32.39 0 0137.4-14.5 32.14 32.14 0 0029.6-5.5 32.44 32.44 0 0140.1.1z\"\n      ></path>\n      <circle cx=\"255.9\" cy=\"202.2\" r=\"142.2\" fill=\"#ffe07d\"></circle>\n      <path\n        fill=\"#ffd064\"\n        d=\"M255.9 60a146.64 146.64 0 00-31.7 3.5 142.24 142.24 0 010 277.3c76.6 17.5 152.8-30.5 170.3-107a142.08 142.08 0 00-107-170.2 140.52 140.52 0 00-31.6-3.6z\"\n      ></path>\n      <path d=\"M452.3 210.2a39.44 39.44 0 00-4.6-49.2 24.79 24.79 0 01-6.3-22.2 39.48 39.48 0 00-22-44.2 24.81 24.81 0 01-13.9-18.4A39.58 39.58 0 00369 42.9a24.56 24.56 0 01-19.6-12.2 39.47 39.47 0 00-46.1-17.8 25 25 0 01-22.7-4.2 39.68 39.68 0 00-49.4 0 24.44 24.44 0 01-22.7 4.2 39.77 39.77 0 00-46.1 17.8 24.71 24.71 0 01-19.6 12.2 39.58 39.58 0 00-36.5 33.3 24.46 24.46 0 01-13.9 18.4 39.54 39.54 0 00-22 44.2 24.79 24.79 0 01-6.3 22.2 39.69 39.69 0 00-4.6 49.2 24.45 24.45 0 012.1 23 39.64 39.64 0 0013.5 47.5 24.86 24.86 0 0110.3 20.7 39.6 39.6 0 0029.8 39.4 25.09 25.09 0 0113.2 8.6l-41.3 99.8a17.87 17.87 0 009.7 23.4 18.28 18.28 0 0012.2.6l45.2-13.9a3 3 0 013.4 1.4l22.2 41.8a17.88 17.88 0 0032.3-1.5l43.1-104h1.7L300 501a17.92 17.92 0 0023.4 9.7 18.67 18.67 0 009-8.1l22.2-41.8a3 3 0 013.4-1.4l45.2 13.9a17.82 17.82 0 0021.7-23.9l-41.3-99.8a24.51 24.51 0 0113.2-8.6 39.6 39.6 0 0029.8-39.4 24.86 24.86 0 0110.3-20.7 39.55 39.55 0 0013.5-47.5 24.79 24.79 0 011.9-23.2zm-254.2 285a2.91 2.91 0 01-3.8 1.6 3.74 3.74 0 01-1.5-1.3l-22.2-41.8a17.84 17.84 0 00-21-8.7l-45.2 13.9a2.81 2.81 0 01-3.6-1.9 2.74 2.74 0 01.1-2l36.7-88.5a39.54 39.54 0 0036.7 16 24.9 24.9 0 0121.5 8.3 39.37 39.37 0 0040.6 12.2zm209.3-36.4l-45.2-13.9a17.91 17.91 0 00-21 8.7l-22.3 41.9a2.92 2.92 0 01-3.9 1.2 2.43 2.43 0 01-1.3-1.5L275.5 403a39.51 39.51 0 0040.5-12.3 24.81 24.81 0 0121.5-8.4 39.78 39.78 0 0036.7-15.9l36.7 88.6a2.91 2.91 0 01-1.6 3.8 2.5 2.5 0 01-1.9 0zM439.8 202a39.58 39.58 0 00-3.4 37 24.65 24.65 0 01-8.4 29.5 39.43 39.43 0 00-16.5 33.2 24.49 24.49 0 01-18.5 24.5 40 40 0 00-24.6 18.7v.1a43.87 43.87 0 00-2.9 6.2 24.65 24.65 0 01-26.1 16.2 39.85 39.85 0 00-34.6 13.4 24.49 24.49 0 01-30.2 5.6 38.17 38.17 0 00-10.9-3.8h-.1a38.38 38.38 0 00-15.1 0h-.1a35.56 35.56 0 00-10.9 3.9 24.6 24.6 0 01-30.2-5.6 39.85 39.85 0 00-34.6-13.4 24.58 24.58 0 01-26.1-16.2 38.66 38.66 0 00-2.9-6.2v-.1a39.79 39.79 0 00-24.5-18.7 24.49 24.49 0 01-18.5-24.5 39.78 39.78 0 00-16.6-33.2 24.43 24.43 0 01-8.4-29.5 39.58 39.58 0 00-3.4-37 24.62 24.62 0 012.9-30.6 39.72 39.72 0 0010.2-35.7 24.67 24.67 0 0113.7-27.5 39.71 39.71 0 0022.4-29.6A24.49 24.49 0 01144.2 58a39.93 39.93 0 0031.6-19.5 24.65 24.65 0 0128.7-11.1 40 40 0 0036.5-6.8 24.66 24.66 0 0130.8 0 39.62 39.62 0 0036.5 6.8A24.78 24.78 0 01337 38.5 39.75 39.75 0 00368.5 58a24.69 24.69 0 0122.7 20.7 39.71 39.71 0 0022.4 29.6 24.73 24.73 0 0113.7 27.5 40 40 0 0010.1 35.7 25.1 25.1 0 012.4 30.5z\"></path>\n      <path d=\"M113.9 192.1a7.59 7.59 0 008.4-6.5c8.2-67.3 65.7-118.1 133.6-118.1a134.77 134.77 0 01133.7 118.1 7.46 7.46 0 007.4 6.6 2.77 2.77 0 00.9-.1 7.48 7.48 0 006.5-8.4c-9.1-74.7-73-131.2-148.5-131.2S116.5 109 107.3 183.8a7.44 7.44 0 006.6 8.3zM398 212.3a7.59 7.59 0 00-8.4 6.5 134.73 134.73 0 01-267.4 0 7.51 7.51 0 10-14.9 1.9c9.2 74.8 73.1 131.2 148.6 131.2s139.4-56.5 148.6-131.3a7.44 7.44 0 00-6.5-8.3z\"></path>\n      <path\n        fill=\"#ffd064\"\n        d=\"M302.9 213.77c-13.75 13.76-12 41.51-12 41.51h-69.78s1.47-27.75-12-41.51a71 71 0 1193.82 0z\"\n      ></path>\n      <path\n        fill=\"#e8ae4d\"\n        d=\"M292.83 277.14a6.61 6.61 0 01-6.63 6.63h-60.66a6.6 6.6 0 01-6.63-6.63 6.6 6.6 0 016.63-6.64h60.41a6.82 6.82 0 016.88 6.64zm-9.09 27.5a6.59 6.59 0 01-6.63 6.63h-42.48a6.6 6.6 0 01-6.64-6.63 6.61 6.61 0 016.64-6.63h42.48a6.6 6.6 0 016.63 6.63z\"\n      ></path>\n      <path\n        fill=\"#210b20\"\n        d=\"M306.58 216.23a75.84 75.84 0 10-100.93.74c12 12 10.8 37.57 10.8 37.82a5.89 5.89 0 001.23 3.44 4.85 4.85 0 003.44 1.47h69.5a4.85 4.85 0 003.44-1.47 4.63 4.63 0 001.23-3.44c0-.25-1.23-25.79 10.8-37.82.25-.25.49-.5.49-.74zm-6.87-6.14a2.53 2.53 0 00-1 1.23c-10.8 11.54-12.52 30.45-12.77 39.29h-60.16c-.24-9.08-2.21-28.73-13.75-40.27a66.53 66.53 0 11110.27-50.11 66 66 0 01-22.59 49.86z\"\n      ></path>\n      <path\n        fill=\"#210b20\"\n        d=\"M255.75 103.75a4.67 4.67 0 100 9.33 49.89 49.89 0 0149.85 49.86 4.67 4.67 0 009.33 0 59.21 59.21 0 00-59.18-59.19zm41.75 173.39a11.27 11.27 0 00-11.3-11.3h-60.66a11.3 11.3 0 100 22.59h60.41a11.32 11.32 0 0011.55-11.29zm-11.55 2h-60.41a2 2 0 110-3.93h60.41a1.94 1.94 0 012 2c.21 1.15-.77 1.89-2 1.89zm-8.84 14.2h-42.48a11.3 11.3 0 100 22.6h42.48a11.27 11.27 0 0011.3-11.3 11.43 11.43 0 00-11.3-11.3zm0 13.27h-42.48a2 2 0 110-3.93h42.48a1.94 1.94 0 012 2 1.81 1.81 0 01-2 1.93z\"\n      ></path>\n    </svg>\n  );\n}\n","export function MedalPersonIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffe07d\"\n        d=\"M186.32 499l-22.17-41.81a10.4 10.4 0 00-12.22-5.08L106.68 466a10.38 10.38 0 01-12.64-13.9l79.78-192.62 111.05 46-79.79 192.61a10.39 10.39 0 01-18.77.89z\"\n      ></path>\n      <path\n        fill=\"#ffd064\"\n        d=\"M226.47 281.29L155.93 451.7a10.39 10.39 0 018.26 5.47L186.32 499a10.39 10.39 0 0018.77-.89l79.78-192.62z\"\n      ></path>\n      <path\n        fill=\"#ffe07d\"\n        d=\"M325.55 499l22.18-41.81a10.37 10.37 0 0112.2-5.08L405.18 466a10.39 10.39 0 0012.65-13.9l-79.79-192.63-111 46 79.79 192.62a10.39 10.39 0 0018.77.89z\"\n      ></path>\n      <path\n        fill=\"#ffd064\"\n        d=\"M417.83 452.09l-79.79-192.61-58.19 24.1 70.56 170.35a10.42 10.42 0 019.53-1.82L405.18 466a10.39 10.39 0 0012.65-13.9z\"\n      ></path>\n      <path\n        fill=\"#e8ae4d\"\n        d=\"M275.93 14.53a32.23 32.23 0 0029.59 5.53 32.23 32.23 0 0137.41 14.47 32.25 32.25 0 0025.61 15.85 32.24 32.24 0 0129.61 27 32.24 32.24 0 0018.14 24 32.24 32.24 0 0117.86 35.87 32.23 32.23 0 008.24 29 32.24 32.24 0 013.7 39.9 32.21 32.21 0 00-2.78 30 32.25 32.25 0 01-11 38.54 32.21 32.21 0 00-13.38 26.9 32.24 32.24 0 01-24.14 32 32.22 32.22 0 00-22.25 20.28A32.27 32.27 0 01338.45 375a32.24 32.24 0 00-28.08 10.87 32.24 32.24 0 01-39.39 7.37 32.19 32.19 0 00-30.1 0 32.25 32.25 0 01-39.39-7.37A32.22 32.22 0 00173.41 375a32.24 32.24 0 01-34.06-21.1 32.22 32.22 0 00-22.25-20.28 32.23 32.23 0 01-24.15-32 32.19 32.19 0 00-13.42-27 32.25 32.25 0 01-11-38.54 32.21 32.21 0 00-2.78-30 32.24 32.24 0 013.7-39.9 32.2 32.2 0 008.23-29 32.27 32.27 0 0117.9-35.8 32.23 32.23 0 0018.16-24 32.22 32.22 0 0129.61-27 32.24 32.24 0 0025.58-15.85 32.22 32.22 0 0137.36-14.47 32.2 32.2 0 0029.64-5.53 32.26 32.26 0 0140.09 0z\"\n      ></path>\n      <circle cx=\"255.93\" cy=\"202.23\" r=\"142.21\" fill=\"#ffe07d\"></circle>\n      <path\n        fill=\"#ffd064\"\n        d=\"M255.93 60a142.49 142.49 0 00-31.67 3.54 142.24 142.24 0 010 277.32A142.21 142.21 0 10255.93 60z\"\n      ></path>\n      <path d=\"M452.36 210.23a39.57 39.57 0 00-4.56-49.18 24.71 24.71 0 01-6.32-22.22 39.59 39.59 0 00-22-44.22 24.71 24.71 0 01-13.94-18.43 39.57 39.57 0 00-36.5-33.28 24.71 24.71 0 01-19.64-12.16 39.57 39.57 0 00-46.07-17.84 24.73 24.73 0 01-22.71-4.25 39.57 39.57 0 00-49.38 0 24.7 24.7 0 01-22.7 4.25 39.55 39.55 0 00-46.06 17.84 24.75 24.75 0 01-19.65 12.16 39.58 39.58 0 00-36.5 33.28A24.7 24.7 0 0192.4 94.61a39.59 39.59 0 00-22 44.22 24.71 24.71 0 01-6.32 22.22 39.57 39.57 0 00-4.56 49.18 24.67 24.67 0 012.13 23 39.57 39.57 0 0013.53 47.51 24.72 24.72 0 0110.29 20.68 39.56 39.56 0 0029.77 39.41 24.81 24.81 0 0113.21 8.63l-41.34 99.76a17.89 17.89 0 0021.82 23.95l45.25-13.89a2.89 2.89 0 013.39 1.41l22.17 41.81a17.88 17.88 0 0032.27-1.5l43.07-104h1.71l43.07 104a17.88 17.88 0 0032.32 1.54l22.17-41.81a2.9 2.9 0 013.4-1.41l45.24 13.89a17.88 17.88 0 0021.77-23.94l-41.34-99.77a24.84 24.84 0 0113.22-8.63 39.56 39.56 0 0029.76-39.41 24.78 24.78 0 0110.3-20.68 39.57 39.57 0 0013.52-47.51 24.73 24.73 0 012.13-23zm-254.2 285a2.89 2.89 0 01-3.76 1.57 2.83 2.83 0 01-1.45-1.32l-22.17-41.81a17.93 17.93 0 00-21-8.72l-45.24 13.89a2.89 2.89 0 01-3.61-3.84l36.67-88.51a39.57 39.57 0 0036.66 15.95 24.74 24.74 0 0121.54 8.34A39.37 39.37 0 00236.36 403zm209.23-36.4L362.15 445a17.91 17.91 0 00-21 8.72l-22.22 41.75a2.87 2.87 0 01-5.2-.25L275.51 403a39.53 39.53 0 0040.52-12.27 24.74 24.74 0 0121.54-8.35 39.49 39.49 0 0036.66-15.94l36.7 88.56a2.88 2.88 0 01-1.56 3.78 2.85 2.85 0 01-1.95.09zM439.79 202a39.75 39.75 0 00-3.42 37 24.6 24.6 0 01-8.44 29.55 39.75 39.75 0 00-16.54 33.22 24.61 24.61 0 01-18.46 24.54A39.73 39.73 0 00368.36 345v.08a40.3 40.3 0 00-2.85 6.19 24.65 24.65 0 01-26.15 16.19 39.71 39.71 0 00-34.6 13.4 24.63 24.63 0 01-30.22 5.65 40.06 40.06 0 00-10.93-3.84h-.09a39.59 39.59 0 00-15.11 0h-.06a40.08 40.08 0 00-10.93 3.85 24.63 24.63 0 01-30.23-5.65 39.69 39.69 0 00-34.59-13.4 24.63 24.63 0 01-26.14-16.19 40.4 40.4 0 00-2.87-6.19V345a39.73 39.73 0 00-24.51-18.72 24.62 24.62 0 01-18.53-24.54 39.72 39.72 0 00-16.62-33.19A24.64 24.64 0 0175.5 239a39.69 39.69 0 00-3.43-37 24.65 24.65 0 012.86-30.59 39.73 39.73 0 0010.17-35.69 24.63 24.63 0 0113.69-27.53 39.72 39.72 0 0022.38-29.61 24.62 24.62 0 0122.76-20.72 39.65 39.65 0 0031.5-19.53 24.65 24.65 0 0128.67-11.11 39.69 39.69 0 0036.48-6.82 24.64 24.64 0 0130.75 0 39.71 39.71 0 0036.49 6.82 24.63 24.63 0 0128.67 11.11 39.67 39.67 0 0031.55 19.53 24.62 24.62 0 0122.69 20.72 39.73 39.73 0 0022.37 29.61 24.62 24.62 0 0113.7 27.53 39.76 39.76 0 0010.13 35.69 24.63 24.63 0 012.86 30.59z\"></path>\n      <path d=\"M113.93 192.13a7.5 7.5 0 008.36-6.53c8.23-67.31 65.72-118.07 133.64-118.07a134.77 134.77 0 01133.71 118.14 7.48 7.48 0 007.43 6.58 5.8 5.8 0 00.92-.05 7.52 7.52 0 006.54-8.36C395.35 109 331.46 52.53 255.93 52.53S116.56 109 107.35 183.77a7.52 7.52 0 006.53 8.36zm284.05 20.13a7.53 7.53 0 00-8.35 6.53 134.72 134.72 0 01-267.39.06 7.5 7.5 0 10-14.89 1.83c9.2 74.83 73.08 131.25 148.58 131.25s139.41-56.45 148.58-131.32a7.48 7.48 0 00-6.49-8.35z\"></path>\n      <path\n        fill=\"#e8ae4d\"\n        d=\"M316.12 272.42c12.18 7.07 26.14 15.17 36.14 26.35a143.32 143.32 0 01-192.64 0c10-11.18 24-19.28 36.14-26.35 14.95-8.69 27.89-16.2 27.89-25.61a32.89 32.89 0 00-12.15-26.26c-7.14-1.18-10.87-14.58-10.87-21.93a10.22 10.22 0 013.05-8.63c-5.17-16.78-5.08-40.08 6.67-56.56 9.18-12.9 24.32-19.75 43.79-19.81a41.59 41.59 0 0140.09 8.44c8.75 7.88 22 27.1 13.92 67.75 1.69 1.18 3.31 3.64 3.31 8.81 0 7.35-3.74 20.78-10.91 21.93a32.62 32.62 0 00-12.3 26.26c-.01 9.41 12.92 16.92 27.87 25.61z\"\n      ></path>\n      <path d=\"M352.26 305a6.2 6.2 0 01-4.65-2.08c-9.34-10.44-22.76-18.23-34.6-25.11-16.65-9.67-31-18-31-31a39 39 0 0114.66-31.14 6.32 6.32 0 012.9-1.27c1.78-.29 5.66-8.37 5.66-15.78 0-2.94-.69-3.73-.69-3.74a6.12 6.12 0 01-2.49-6.29c7.53-37.69-4.28-55-12-61.9a35.53 35.53 0 00-34-7.14 6.64 6.64 0 01-1.87.3c-17.37.05-30.77 6-38.74 17.19-11.1 15.57-10.06 37.27-5.79 51.12a6.23 6.23 0 01-1.63 6.32 4 4 0 00-1.19 3.37v.77c0 7.36 3.88 15.47 5.66 15.78a6.54 6.54 0 012.9 1.31A39.33 39.33 0 01229.86 247c0 12.84-14.34 21.18-31 30.83-11.88 6.9-25.31 14.69-34.65 25.13a6.23 6.23 0 11-9.6-7.93l.32-.37c10.65-11.92 25-20.24 37.64-27.59 11.64-6.75 24.78-14.4 24.78-20.21a26.85 26.85 0 00-8.86-20.59c-10.37-3.45-14-19.56-14.15-27.23a16.53 16.53 0 012.42-10.35c-4.27-16.6-4.42-40.76 8.45-58.83 10.25-14.39 26.8-22.13 47.91-22.42a48.1 48.1 0 0145.17 10c9.49 8.55 23.94 28.89 16.5 70.51 1.59 2.34 2.83 5.75 2.83 10.73 0 7.54-3.63 24.18-14.22 27.61a26.63 26.63 0 00-9 20.44c0 6 13.16 13.6 24.77 20.34 12.67 7.36 27 15.69 37.66 27.6a6.24 6.24 0 01-4.57 10.33z\"></path>\n    </svg>\n  );\n}\n","export function TrophyIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M397.763 87.5h-98.509v213.476h98.509c58.855 0 106.737-47.882 106.737-106.738S456.618 87.5 397.763 87.5zm0 183.476h-68.509V117.5h68.509c42.381 0 76.738 34.357 76.738 76.738-.001 42.381-34.357 76.738-76.738 76.738zM114.237 87.5C55.382 87.5 7.5 135.382 7.5 194.238s47.882 106.738 106.737 106.738h98.509V87.5zm68.509 183.476h-68.509c-42.381 0-76.738-34.357-76.738-76.738S71.856 117.5 114.237 117.5h68.509zM314 419.5H198l15-91h86z\"\n      ></path>\n      <path fill=\"#fee97d\" d=\"M299 328.5h-30l15 91h30z\"></path>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M382.221 504.5H129.779a7 7 0 01-7-7v-11.629c0-22.091 17.909-40 40-40h186.442c22.091 0 40 17.909 40 40V497.5a7 7 0 01-7 7z\"\n      ></path>\n      <path\n        fill=\"#fee97d\"\n        d=\"M349.221 445.871h-30c22.092 0 40 17.909 40 40V497.5a7 7 0 01-7 7h30a7 7 0 007-7v-11.629c0-22.092-17.909-40-40-40zm-5 0H167.779v-3.629c0-22.091 17.909-40 40-40h96.442c22.091 0 40 17.909 40 40z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M304.221 402.241h-30c22.092 0 40 17.909 40 40v3.629h30v-3.629c0-22.091-17.909-40-40-40z\"\n      ></path>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M411.5 57.5h-311c-13.807 0-25-11.193-25-25s11.193-25 25-25h311c13.807 0 25 11.193 25 25s-11.193 25-25 25z\"\n      ></path>\n      <path\n        fill=\"#fee97d\"\n        d=\"M411.5 7.5h-30c13.807 0 25 11.193 25 25s-11.193 25-25 25h30c13.807 0 25-11.193 25-25s-11.193-25-25-25zM256 362.5c-83.119 0-150.5-67.381-150.5-150.5V57.5h301V212c0 83.119-67.381 150.5-150.5 150.5z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M376.5 57.5V212c0 78.056-59.424 142.229-135.5 149.757 4.934.488 9.937.743 15 .743 83.119 0 150.5-67.381 150.5-150.5V57.5z\"\n      ></path>\n      <circle cx=\"256\" cy=\"207.96\" r=\"94.169\" fill=\"#fff\"></circle>\n      <path\n        fill=\"#fee97d\"\n        d=\"M262.277 154.391l13.139 26.623a7 7 0 005.271 3.829l29.38 4.269c5.742.834 8.034 7.89 3.879 11.94l-21.26 20.723a6.998 6.998 0 00-2.013 6.196l5.019 29.261c.981 5.718-5.021 10.079-10.157 7.379l-26.278-13.815a7.001 7.001 0 00-6.515 0l-26.278 13.815c-5.135 2.7-11.137-1.661-10.157-7.379l5.019-29.261a7 7 0 00-2.013-6.196l-21.26-20.723c-4.155-4.05-1.862-11.106 3.879-11.94l29.38-4.269a7 7 0 005.271-3.829l13.139-26.623c2.569-5.203 9.987-5.203 12.555 0z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M313.946 201.052c4.155-4.05 1.862-11.106-3.88-11.94l-29.38-4.269a6.997 6.997 0 01-5.27-3.829l-13.139-26.623c-2.568-5.203-9.987-5.203-12.554 0l-10.888 22.061 3.874 7.85a18.632 18.632 0 0014.03 10.193c15.284 2.221 21.386 21.003 10.327 31.783a18.632 18.632 0 00-5.359 16.493l1.755 10.236 22.073 11.604c5.135 2.7 11.137-1.661 10.157-7.379l-5.019-29.261a7 7 0 012.013-6.196z\"\n      ></path>\n      <path d=\"M282.025 177.458l-13.022-26.387c-2.462-4.985-7.443-8.082-13.003-8.082s-10.541 3.097-13.003 8.083l-13.022 26.387-29.119 4.231c-5.502.799-9.987 4.581-11.706 9.868-1.718 5.288-.312 10.983 3.669 14.865l21.071 20.539-4.975 29.003c-.939 5.479 1.271 10.914 5.77 14.182s10.349 3.691 15.271 1.104L256 257.557l26.045 13.693c4.903 2.578 10.759 2.174 15.271-1.104 4.498-3.268 6.709-8.702 5.769-14.182l-4.974-29.003 21.071-20.539c3.981-3.881 5.387-9.577 3.669-14.865-1.719-5.287-6.204-9.068-11.706-9.867zm5.426 38.946a14.494 14.494 0 00-4.169 12.834l4.847 28.264-25.382-13.345a14.498 14.498 0 00-13.495 0l-25.381 13.344 4.847-28.262a14.495 14.495 0 00-4.169-12.835l-20.534-20.016 28.377-4.124a14.494 14.494 0 0010.918-7.932L256 158.618l12.69 25.714a14.494 14.494 0 0010.918 7.932l28.377 4.124zm194.096-99.749c-17.941-19.36-41.716-31.799-67.547-35.49v-16.27c16.756-1.282 30-15.316 30-32.394C444 14.58 429.421 0 411.5 0h-311C82.579 0 68 14.58 68 32.5c0 17.078 13.244 31.112 30 32.394v16.27c-25.714 3.676-49.409 16.029-67.321 35.248a7.5 7.5 0 0010.972 10.228C56.721 110.471 76.495 99.908 98 96.352v15.236c-39.204 7.62-68 42.024-68 82.652 0 22.509 8.765 43.663 24.675 59.561 15.532 15.543 36.076 24.242 57.996 24.641a157.847 157.847 0 008.007 15.038h-6.438c-54.722 0-99.24-44.519-99.24-99.24 0-14.091 2.904-27.711 8.633-40.48a7.5 7.5 0 00-13.685-6.14C3.347 162.333 0 178.019 0 194.24c0 62.992 51.248 114.24 114.24 114.24h16.729c17.756 22.957 41.679 40.906 69.267 51.348l-6.089 36.917c-18.396 5.522-32.123 21.915-33.701 41.685-25.112 1.221-45.167 22.032-45.167 47.441V497.5c0 7.995 6.505 14.5 14.5 14.5H382.22c7.995 0 14.5-6.505 14.5-14.5v-11.629c0-25.409-20.055-46.22-45.167-47.441-1.579-19.771-15.306-36.163-33.701-41.685l-6.089-36.917c27.588-10.441 51.511-28.391 69.267-51.348h16.729c62.992 0 114.24-51.248 114.24-114.24.001-28.841-10.814-56.394-30.452-77.585zM65.281 243.195C52.203 230.126 45 212.74 45 194.24c0-32.392 22.265-59.968 53-67.308V212c0 17.851 2.98 35.018 8.461 51.034-15.554-1.728-29.958-8.609-41.18-19.839zM100.5 50C90.851 50 83 42.149 83 32.5S90.851 15 100.5 15h311c9.649 0 17.5 7.851 17.5 17.5S421.149 50 411.5 50zM414 126.932c30.735 7.34 53 34.916 53 67.308 0 18.5-7.203 35.886-20.286 48.958-11.218 11.227-25.621 18.108-41.175 19.836C411.02 247.018 414 229.851 414 212zm-77.518 311.439h-22.895c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h35.634c17.921 0 32.5 14.58 32.5 32.5V497H130.279v-11.129c0-17.92 14.579-32.5 32.5-32.5h115.808c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5H175.518c1.921-16.101 15.651-28.629 32.261-28.629h96.441c16.611-.001 30.342 12.527 32.262 28.629zm-126.801-43.63l4.987-30.237C227.849 368.08 241.703 370 256 370s28.151-1.92 41.332-5.496l4.987 30.237zM256 355c-78.851 0-143-64.149-143-143V65h286v147c0 78.851-64.149 143-143 143zm141.76-61.52h-6.438a157.741 157.741 0 008.007-15.038c21.919-.399 42.463-9.097 57.991-24.637C473.235 237.903 482 216.749 482 194.24c0-40.627-28.796-75.032-68-82.652V96.352c21.605 3.57 41.449 14.208 56.545 30.498C487.604 145.259 497 169.192 497 194.24c0 54.721-44.519 99.24-99.24 99.24zM256 106.291c-56.061 0-101.67 45.609-101.67 101.669S199.939 309.629 256 309.629 357.67 264.02 357.67 207.96 312.061 106.291 256 106.291zm0 188.338c-47.79 0-86.67-38.88-86.67-86.669s38.88-86.669 86.67-86.669 86.67 38.88 86.67 86.669-38.88 86.669-86.67 86.669z\"></path>\n    </svg>\n  );\n}\n","import { ClockIcon } from 'components/icons/ClockIcon';\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function TimeHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<ClockIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { StarFilled } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\n\ntype StarPointsProps = {\n  keyPrefix: string;\n  quantity?: number;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  hideText?: boolean;\n};\n\nexport const StarPoints = ({ keyPrefix, quantity, className, hideText }: StarPointsProps) => {\n  if (!quantity) {\n    return <span />;\n  }\n\n  const isNegative = quantity < 0;\n  const num = Math.abs(quantity);\n\n  const StarsArray = Array.from({ length: num }, (_, i) => <StarFilled key={`${keyPrefix}-${i}`} />);\n\n  return (\n    <span className={clsx('star-points', isNegative && 'star-points--negative', className)}>\n      {isNegative ? '-' : '+'} <span className=\"star-points__stars\">{StarsArray}</span>\n      {!hideText && (\n        <>\n          <Translate pt=\"ponto\" en=\"point\" />\n          {num > 1 ? 's' : ''}\n        </>\n      )}\n    </span>\n  );\n};\n","import clsx from 'clsx';\n// Utils\nimport { getAnimationClass, getColorFromLetter } from 'utils/helpers';\n\ntype RibbonProps = {\n  label: string;\n  position?: 'absolute' | 'static';\n};\n\nexport function Ribbon({ label, position = 'absolute' }: RibbonProps): JSX.Element {\n  return (\n    <div className={clsx('ribbon', `ribbon--${position}`)}>\n      <div\n        className={clsx(\n          'ribbon__content',\n          `ribbon__content--${label}`,\n          `color-background--${getColorFromLetter(label)}`,\n          getAnimationClass('bounceIn')\n        )}\n      >\n        {label}\n      </div>\n    </div>\n  );\n}\n","import { Ribbon } from './Ribbon';\n\ntype RibbonGroupProps = {\n  labels: string[];\n};\n\nexport function RibbonGroup({ labels }: RibbonGroupProps) {\n  return (\n    <div className=\"ribbon-group ribbon--absolute\">\n      {labels.length > 0 &&\n        labels.map((label) => (\n          <Ribbon\n            key={label}\n            label={label.length > 0 ? label.charAt(label.length - 1) : label}\n            position=\"static\"\n          />\n        ))}\n    </div>\n  );\n}\n","import { useEffect } from 'react';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\nimport {\n  PauseOutlined,\n  PlayCircleOutlined,\n  StepBackwardOutlined,\n  StepForwardOutlined,\n  TrophyOutlined,\n} from '@ant-design/icons';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\n// Components\nimport { Translate } from 'components/language';\n\ntype SlideShowControlsProps = {\n  length: number;\n  activeIndex: number;\n  setActiveIndex: GenericFunction;\n  setStep: GenericFunction;\n  disableControls: boolean;\n  barColor: string;\n  windowDuration: number;\n};\n\nexport function SlideShowControls({\n  length,\n  activeIndex,\n  setActiveIndex,\n  setStep,\n  disableControls,\n  barColor = 'gray',\n  windowDuration = 10,\n}: SlideShowControlsProps) {\n  const { timeLeft, isRunning, pause, resume } = useCountdown({\n    duration: windowDuration * length,\n    autoStart: true,\n    onExpire: () => setStep(2),\n  });\n\n  // Automatically go to the next window every {windowDuration} seconds\n  useEffect(() => {\n    if (timeLeft < windowDuration * length && timeLeft > 0 && timeLeft % windowDuration === 0) {\n      setActiveIndex((s: number) => Math.min(s + 1, length - 1));\n    }\n  }, [timeLeft, setActiveIndex, length, windowDuration]);\n\n  const goToPreviousStep = () => {\n    setActiveIndex((s: number) => Math.max(s - 1, 0));\n  };\n\n  const goToNextStep = () => {\n    setActiveIndex((s: number) => Math.min(s + 1, length - 1));\n  };\n\n  return (\n    <div className=\"slide-show__controls\">\n      <div className=\"slide-show__controls-timer-bar\">\n        <div className=\"slide-show__controls-timer-bar-base\">\n          {Array(length)\n            .fill('')\n            .map((e, i) => {\n              return (\n                <div\n                  key={`control-timer-bar-${e + i}`}\n                  className=\"slide-show__controls-timer-bar-node\"\n                  style={{ width: `${99 / length}%` }}\n                >\n                  {e}\n                </div>\n              );\n            })}\n        </div>\n        <span\n          className=\"slide-show__controls-timer-bar-pill\"\n          style={{\n            width: `${Math.abs((windowDuration * timeLeft) / length - 100)}%`,\n            backgroundColor: barColor,\n          }}\n        ></span>\n      </div>\n\n      {!disableControls && (\n        <Space>\n          <Button\n            size=\"large\"\n            icon={<StepBackwardOutlined />}\n            onClick={goToPreviousStep}\n            disabled={disableControls || activeIndex === 0}\n          >\n            <Translate pt=\"Anterior\" en=\"Previous\" />\n          </Button>\n          <Button\n            size=\"large\"\n            icon={isRunning ? <PauseOutlined /> : <PlayCircleOutlined />}\n            onClick={isRunning ? pause : resume}\n          />\n          <Button\n            size=\"large\"\n            onClick={goToNextStep}\n            disabled={disableControls || activeIndex === length - 1}\n          >\n            <Translate pt=\"Próximo\" en=\"Next\" /> <StepForwardOutlined />\n          </Button>\n          <Button\n            size=\"large\"\n            onClick={() => setStep(2)}\n            icon={<TrophyOutlined />}\n            disabled={disableControls}\n          >\n            <Translate pt=\"Ver Ranking\" en=\"See Ranking\" />\n          </Button>\n        </Space>\n      )}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Components\nimport { SlideShowControls } from './SlideShowControls';\n\ntype SlideShowProps = {\n  players: GamePlayers;\n  children: [ReactNode, ReactNode];\n  length: number;\n  activeIndex: number;\n  setActiveIndex: GenericFunction;\n  setStep: GenericFunction;\n  disableControls: boolean;\n  barColor: string;\n  windowDuration: number;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  leftClassName?: string;\n  rightClassName?: string;\n};\n\n/**\n * Display Slick show with a left and right sides with full navigation controls\n * @param props\n * @returns\n */\nexport function SlideShow({\n  children,\n  length,\n  activeIndex,\n  setActiveIndex,\n  setStep,\n  disableControls,\n  barColor,\n  windowDuration = 10,\n  className = '',\n  leftClassName = '',\n  rightClassName = '',\n}: SlideShowProps) {\n  return (\n    <div className={clsx('slide-show', className)}>\n      <div className={clsx('slide-show__left', leftClassName)} id=\"gallery-left\">\n        {children[0]}\n      </div>\n      <div className={clsx('slide-show__right', rightClassName)} id=\"gallery-right\">\n        {children[1]}\n      </div>\n      <SlideShowControls\n        length={length}\n        activeIndex={activeIndex}\n        setActiveIndex={setActiveIndex}\n        setStep={setStep}\n        disableControls={disableControls}\n        barColor={barColor}\n        windowDuration={windowDuration}\n      />\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\n// Utils\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useDevFeatures } from 'hooks/useDevFeatures';\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Step } from 'components/steps';\nimport { Card } from 'components/cards';\nimport { DrawingCanvas } from 'components/canvas';\nimport { PanicIcon } from 'components/icons/PanicIcon';\nimport { ArteRuimTimerSound } from 'components/audio/ArteRuimTimerSound';\n\ntype StepDrawProps = {\n  secretCard: ArteRuimCard | PlainObject;\n  onSubmitDrawing: GenericFunction;\n  startDrawingTimer: boolean;\n} & AnnouncementProps;\n\nexport function StepDraw({ secretCard, onSubmitDrawing, startDrawingTimer, announcement }: StepDrawProps) {\n  const { translate } = useLanguage();\n  const { isDebugEnabled } = useDevFeatures();\n  const [lines, setLines] = useState<any>([]);\n  const [isTimesUp, setTimesUp] = useState(false);\n\n  const { seconds, start, isRunning } = useCountdown({\n    duration: 12,\n    autoStart: false,\n    onExpire: () => {\n      setTimesUp(true);\n      onSubmitDrawing({\n        drawing: JSON.stringify(lines),\n        cardId: secretCard.id,\n      });\n    },\n  });\n\n  useEffect(() => {\n    if (!isRunning && startDrawingTimer) {\n      start();\n    }\n  }, [startDrawingTimer, isRunning, start]);\n\n  return (\n    <Step announcement={announcement}>\n      <Card\n        size=\"large\"\n        header={translate('Desenhe', 'Draw', isDebugEnabled ? secretCard?.id : undefined)}\n        footer={Array(secretCard?.level).fill('•').join('')}\n        className=\"a-draw-step__card\"\n        color=\"yellow\"\n      >\n        {isRunning && (\n          <>\n            {secretCard?.text}\n            <span className=\"a-draw-step__timer\">{seconds > 1 ? seconds - 2 : 0}</span>\n          </>\n        )}\n      </Card>\n      {isRunning && <ArteRuimTimerSound />}\n      {isTimesUp ? (\n        <PanicIcon style={{ background: 'white', width: '500px', padding: '2em' }} />\n      ) : (\n        <DrawingCanvas lines={lines} setLines={setLines} />\n      )}\n    </Step>\n  );\n}\n","import { Translate } from 'components/language';\nimport { PointsHighlight } from 'components/metrics/PointsHighlight';\nimport { TimeHighlight } from 'components/metrics/TimeHighlight';\nimport { Instruction } from 'components/text';\n\nexport const DrawInstruction = () => (\n  <Instruction>\n    <Translate\n      pt={\n        <>\n          Você terá <TimeHighlight>10</TimeHighlight> segundos para ler a sua carta e desenhá-la.\n          <br />\n          Aperte o botão quando estiver pronto!\n          <br />\n          <strong>Não vale usar números e letras.</strong>\n          <br />\n          Fique esperto porque o tempo começa assim que você apertar.\n        </>\n      }\n      en={\n        <>\n          You'll have <TimeHighlight>10</TimeHighlight> seconds to read and draw your card.\n          <br />\n          Press the button when you're ready!\n          <br />\n          <strong>You can NOT use numbers or letters.</strong>\n          <br />\n          Be aware of the timer! It starts as soon as you press the button.\n        </>\n      }\n    />\n  </Instruction>\n);\n\nexport const EvaluationRules = () => (\n  <Instruction>\n    <Translate\n      pt={\n        <>\n          Encontre os pares de desenho e carta clicando em uma carta ou desenho e em seguida clicando em seu\n          par.\n          <br />\n          Uma bandeirinha aparecerá no topo de cada desenho com a cor e letra da carta que você selecionou.\n          <br />\n          Quando encontrar todos os pares, envie sua avaliação!\n        </>\n      }\n      en={\n        <>\n          Find the pairs of artwork and card by clicking on a card or artwork then on its match.\n          <br />\n          A ribbon will show up on the artwork with the color and letter of the matching card.\n          <br />\n          When you're done, click the button to send your evaluation!\n        </>\n      }\n    />\n  </Instruction>\n);\n\nexport const GalleryRules = () => (\n  <Instruction>\n    <Translate\n      pt={\n        <>\n          Agora, mostraremos cada arte, o que os jogadores votaram e a resposta final.\n          <br />\n          Se você votou na expressão correta, você ganha <PointsHighlight type=\"positive\">\n            2\n          </PointsHighlight>{' '}\n          pontos.\n          <br />\n          Quando for a sua arte, você ganha <PointsHighlight type=\"positive\">1</PointsHighlight> ponto para\n          cada pessoa que votou corretamente.\n        </>\n      }\n      en={\n        <>\n          Now we show each art, what players voted, and the final answer.\n          <br />\n          You get <PointsHighlight type=\"positive\">2</PointsHighlight> points if you selected the right card.\n          <br />\n          When players selected the correct card for your artwork, you get{' '}\n          <PointsHighlight type=\"positive\">1</PointsHighlight> point for each match!\n        </>\n      }\n    />\n  </Instruction>\n);\n\nexport const ScoringRules = () => (\n  <Instruction>\n    <Translate\n      pt={\n        <>\n          Você ganha <PointsHighlight type=\"positive\">2</PointsHighlight> pontos para cada ligação correta\n          entre arte e expressão.\n          <br />\n          Para cada ligação correta que sua arte ganha, você recebe{' '}\n          <PointsHighlight type=\"positive\">1</PointsHighlight> ponto.\n        </>\n      }\n      en={\n        <>\n          You get <PointsHighlight type=\"positive\">2</PointsHighlight> points if you matched the right card\n          with artwork.\n          <br />\n          For you own artwork, you get <PointsHighlight type=\"positive\">1</PointsHighlight> point for each\n          correct match the other players done.\n        </>\n      }\n    />\n  </Instruction>\n);\n","import { useState } from 'react';\n// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitDrawingAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { RoundAnnouncement } from 'components/round';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { StepDraw } from './StepDraw';\nimport { PaintingIcon } from 'components/icons/PaintingIcon';\nimport { DrawInstruction } from './components/TextBlobs';\n\nfunction PhaseDraw({ players, state, info }: PhaseProps) {\n  const { step, goToNextStep, setStep } = useStep(0);\n  const user = useUser(players, state);\n  const [startDrawingTimer, setStartDrawingTimer] = useState(false);\n\n  const onSubmitDrawing = useOnSubmitDrawingAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<PaintingIcon />}\n      title={<Translate pt=\"Desenhe!\" en=\"Draw!\" />}\n      buttonText={<Translate pt=\"Um dó, lá, si... vamos ir... já!\" en=\"Ready! Set! Go!\" />}\n      onClose={() => setStartDrawingTimer(true)}\n      currentRound={state?.round?.current}\n      withoutTimer\n      type=\"overlay\"\n    >\n      <DrawInstruction />\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.ARTE_RUIM.DRAW}>\n      <StepSwitcher\n        step={step}\n        conditions={[!user.isReady, !user.isReady, !user.isReady]}\n        players={players}\n        waitingRoomInstruction={\n          <Translate\n            pt=\"Vamos aguardar enquanto os outros jogadores terminam seus desenhos!\"\n            en=\"Please wait while other players finish their artwork!\"\n          />\n        }\n      >\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state?.round}\n          onPressButton={goToNextStep}\n          buttonText=\" \"\n          time={5}\n          circleColor={info?.appearance?.color}\n        >\n          <Instruction contained>\n            <Translate\n              pt={`Essa rodada usará cartas de nível ${state?.level || '?'}`}\n              en={`This round uses cards of level ${state?.level || '?'}`}\n            />\n            {state.level === 4 && (\n              <Instruction contained>\n                <Translate\n                  pt=\"No nível 4, as cartas tem um ou dois temas comuns, então preste atenção nos detalhes\"\n                  en=\"On level 4, the cards have one or two common themes, so pay attention to details\"\n                />\n              </Instruction>\n            )}\n            {state.level === 5 && (\n              <Instruction contained>\n                <Translate\n                  pt=\"No nível 5, só existem duas cartas para todos\"\n                  en=\"On level 5, players draw one of two things only\"\n                />\n              </Instruction>\n            )}\n          </Instruction>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <StepDraw\n          secretCard={user.currentCard ?? {}}\n          onSubmitDrawing={onSubmitDrawing}\n          announcement={announcement}\n          startDrawingTimer={startDrawingTimer}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseDraw;\n","import { ARTE_RUIM_API } from 'services/adapters';\nimport { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\n\nexport function useOnSubmitDrawingAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: ARTE_RUIM_API.submitAction,\n    actionName: 'submit-drawing',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate(\n      'Acabou o tempo! Aguarde enquanto os outros participantes desenham',\n      \"Time's up! Wait for the other players to finish their art\"\n    ),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar o desenho',\n      'Oops, the application failed to send your art'\n    ),\n  });\n\n  return (payload: SubmitDrawingPayload) => {\n    request({\n      action: 'SUBMIT_DRAWING',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitVotingAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: ARTE_RUIM_API.submitAction,\n    actionName: 'submit-voting',\n    onSuccess: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: translate(\n      'Avaliação enviada! Agora aguarde os outros jogadores',\n      'Evaluation sent successfully! Wait for the other players'\n    ),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua avaliação',\n      'Oops, the application failed to send your evaluation'\n    ),\n  });\n\n  return (payload: SubmitVotingPayload) => {\n    request({\n      action: 'SUBMIT_VOTING',\n      ...payload,\n    });\n  };\n}\n","import { SEPARATOR } from 'utils/constants';\n\nexport function prepareVotes(votes: StringDictionary) {\n  return Object.entries(votes).reduce((acc: StringDictionary, [drawingEntryId, cardEntryId]) => {\n    const [, drawingId] = drawingEntryId.split(SEPARATOR);\n    const [, cardId] = cardEntryId.split(SEPARATOR);\n    acc[drawingId] = cardId;\n    return acc;\n  }, {});\n}\n","import clsx from 'clsx';\n// Utils\nimport { getEntryId } from 'utils/helpers';\n// Components\nimport { CanvasSVG } from 'components/canvas';\nimport { Ribbon } from 'components/ribbons';\n\ntype EvaluationAllDrawingsProps = {\n  drawings: ArteRuimDrawing[];\n  activeItem: string;\n  onActivateItem: GenericFunction;\n  votes: PlainObject;\n  canvasSize: number;\n  players: GamePlayers;\n};\n\nexport function EvaluationAllDrawings({\n  drawings,\n  activeItem,\n  onActivateItem,\n  votes,\n  canvasSize,\n  players,\n}: EvaluationAllDrawingsProps) {\n  const liButtonBaseClass = 'a-evaluation-all-drawings__li-drawing-button';\n\n  return (\n    <ul className=\"a-evaluation-all-drawings\">\n      {drawings?.map((drawingEntry) => {\n        const canvasEntryId = getEntryId(['drawing', drawingEntry.id]);\n        const isActive = activeItem === canvasEntryId;\n        const vote = votes[canvasEntryId];\n\n        return (\n          <li\n            key={`${canvasEntryId}-${drawingEntry.playerId}`}\n            className={clsx(liButtonBaseClass, isActive && `${liButtonBaseClass}--active`)}\n            onClick={() => onActivateItem(canvasEntryId)}\n          >\n            {votes?.[canvasEntryId] && <Ribbon label={vote.charAt(vote.length - 1)} />}\n            <CanvasSVG\n              drawing={drawingEntry.drawing}\n              className=\"a-evaluation-all-drawings__drawing\"\n              size={canvasSize}\n            />\n            <span className=\"a-evaluation-all-drawings__artist\">{players[drawingEntry.playerId].name}</span>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","// Ant Design Resources\nimport { WarningOutlined } from '@ant-design/icons';\n// Helpers\nimport { getColorFromLetter } from 'utils/helpers';\n// Components\nimport { Card } from 'components/cards';\nimport { ReactNode } from 'react';\n\ntype ArteRuimCardProps = {\n  /**\n   * The text of the card\n   */\n  text?: ReactNode;\n  /**\n   * The level of the card displayed as dots in the footer\n   */\n  level: number;\n  /**\n   * The header of the card. Default: X\n   */\n  header?: string;\n};\n\n/**\n * This is the Card component\n * @param props {object}\n * @returns\n */\nexport const ArteRuimCard = ({ text, level, header = 'X' }: ArteRuimCardProps) => {\n  return (\n    <Card\n      color={getColorFromLetter(header)}\n      header={header}\n      size=\"medium\"\n      footer={Array(level).fill('•').join('')}\n    >\n      {text ?? <WarningOutlined />}\n    </Card>\n  );\n};\n","import clsx from 'clsx';\nimport { useDevFeatures } from 'hooks/useDevFeatures';\n// Utils\nimport { LETTERS } from 'utils/constants';\nimport { getEntryId } from 'utils/helpers';\n// Components\nimport { ArteRuimCard as Card } from './Card';\n\ntype EvaluationAllCardsProps = {\n  cards: ArteRuimCard[];\n  activeItem: string;\n  onActivateItem: GenericFunction;\n  votes: PlainObject;\n};\n\nexport function EvaluationAllCards({ cards, activeItem, onActivateItem, votes }: EvaluationAllCardsProps) {\n  const { isDebugEnabled } = useDevFeatures();\n  const liButtonBaseClass = 'a-evaluation-all-cards__li-card-button';\n\n  return (\n    <ul className=\"a-evaluation-all-cards\">\n      {cards.map((cardEntry, index) => {\n        const letter = LETTERS[index];\n        const cardEntryId = getEntryId(['card', cardEntry.id, letter]);\n        const isActive = activeItem === cardEntryId;\n        const isUsed = Object.values(votes).includes(cardEntryId);\n\n        return (\n          <li\n            role=\"button\"\n            key={cardEntryId}\n            className={clsx(\n              liButtonBaseClass,\n              isActive && `${liButtonBaseClass}--active`,\n              isUsed && `${liButtonBaseClass}--used`\n            )}\n            onClick={() => onActivateItem(cardEntryId)}\n          >\n            <Card\n              text={cardEntry.text}\n              level={cardEntry.level}\n              header={isDebugEnabled ? cardEntry.id : letter}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import { useCallback, useEffect } from 'react';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\nimport { CloudUploadOutlined, ThunderboltOutlined } from '@ant-design/icons';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\nimport { useUser } from 'hooks/useUser';\nimport { useVotingMatch } from 'hooks/useVotingMatch';\n// Utils\nimport { LETTERS } from 'utils/constants';\nimport { getEntryId, shuffle } from 'utils/helpers';\nimport { prepareVotes } from './utils/helpers';\n// Components\nimport { Step } from 'components/steps';\nimport { PopoverRule } from 'components/rules';\nimport { CanvasResizer } from 'components/canvas';\nimport { Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { EvaluationAllDrawings } from './components/EvaluationAllDrawings';\nimport { EvaluationAllCards } from './components/EvaluationAllCards';\nimport { EvaluationRules } from './components/TextBlobs';\nimport { useEffectOnce } from 'react-use';\n\ntype StepEvaluationProps = {\n  drawings: ArteRuimDrawing[];\n  cards: ArteRuimCard[];\n  players: GamePlayers;\n  onSubmitVoting: GenericFunction;\n} & AnnouncementProps;\n\nexport function StepEvaluation({\n  drawings,\n  cards,\n  players,\n  onSubmitVoting,\n  announcement,\n}: StepEvaluationProps) {\n  const { isLoading } = useLoading();\n  const user = useUser(players);\n  const canvasWidth = useCardWidth(5, 16, 150, 500);\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n  const { votes, setVotes, activeItem, activateItem, resetVoting, isVotingComplete } = useVotingMatch(\n    'drawing',\n    true,\n    drawings.length || 2\n  );\n\n  const onGuessForMe = useCallback(() => {\n    const usedDrawings = Object.keys(votes);\n    const usedCards = Object.values(votes);\n    const drawingsKeys = drawings\n      .map((e: ArteRuimDrawing) => getEntryId(['drawing', e.id]))\n      .filter((key: string) => !usedDrawings.includes(key));\n    let cardsKeys = shuffle(\n      cards\n        .map((e: ArteRuimCard, index: number) => getEntryId(['card', e.id, LETTERS[index]]))\n        .filter((key: string) => !usedCards.includes(key))\n    );\n    // For level 5 specifically, if there are less cards than drawings\n    cardsKeys =\n      cardsKeys.length < drawingsKeys.length\n        ? Array(Math.ceil(drawingsKeys.length / cardsKeys.length))\n            .fill(cardsKeys)\n            .flat()\n        : cardsKeys;\n\n    const newVotes = { ...votes };\n    drawingsKeys.forEach((drawingKey: string, index: number) => {\n      if (!newVotes[drawingKey]) {\n        newVotes[drawingKey] = cardsKeys[index];\n      }\n    });\n    setVotes(newVotes);\n  }, [cards, drawings, votes, setVotes]);\n\n  useEffect(() => {\n    if (!canvasSize) {\n      // Round to increments of 50\n      setCanvasSize(Math.floor(canvasWidth / 50) * 50);\n    }\n  }, [canvasSize, canvasWidth]); // eslint-disable-line\n\n  const selectOwnDrawing = useCallback(() => {\n    const playersDrawing = (drawings ?? []).find((drawing: ArteRuimDrawing) => drawing.playerId === user.id);\n    if (playersDrawing && playersDrawing.level !== 5) {\n      const drawingKey = getEntryId(['drawing', playersDrawing.id]);\n      const cardIndex = (cards ?? []).findIndex((card: ArteRuimCard) => card.playerId === user.id);\n      const cardKey = getEntryId(['card', playersDrawing.id, LETTERS[cardIndex]]);\n      const vote = { [drawingKey]: cardKey };\n      return vote;\n    }\n    return {};\n  }, [user, drawings, cards]);\n\n  // // Auto-select the players own drawing and word\n  useEffectOnce(() => {\n    const selection = selectOwnDrawing();\n    if (selection) {\n      setVotes((s: any) => ({ ...s, ...selection }));\n    }\n  });\n\n  useMock(() => {\n    onGuessForMe();\n  }, []);\n\n  return (\n    <Step className=\"a-evaluation-step\" announcement={announcement} fullWidth>\n      <PopoverRule content={<EvaluationRules />} />\n      <CanvasResizer />\n      <Title>\n        <Translate pt=\"Adivinhação\" en=\"Match the Pairs\" />\n      </Title>\n\n      <Space className=\"space-container\" align=\"center\" wrap>\n        <Button\n          type=\"default\"\n          icon={<ThunderboltOutlined />}\n          onClick={() => resetVoting(selectOwnDrawing())}\n          disabled={isLoading}\n        >\n          <Translate pt=\"Limpar seleções\" en=\"Clear selections\" />\n        </Button>\n        <Button\n          type=\"default\"\n          icon={<ThunderboltOutlined />}\n          onClick={onGuessForMe}\n          disabled={isLoading || Object.values(votes).length === drawings.length}\n        >\n          <Translate pt=\"Chutar restantes\" en=\"Guess for me\" />\n        </Button>\n        <Button\n          type=\"primary\"\n          onClick={() => onSubmitVoting({ votes: prepareVotes(votes) })}\n          disabled={isLoading || !isVotingComplete}\n          icon={<CloudUploadOutlined />}\n          loading={isLoading}\n        >\n          <Translate pt=\"Enviar sua avaliação\" en=\"Send evaluation\" />\n        </Button>\n      </Space>\n\n      <EvaluationAllDrawings\n        drawings={drawings ?? []}\n        activeItem={activeItem}\n        onActivateItem={activateItem}\n        votes={votes}\n        canvasSize={canvasSize}\n        players={players}\n      />\n\n      <EvaluationAllCards\n        cards={cards ?? []}\n        activeItem={activeItem}\n        onActivateItem={activateItem}\n        votes={votes}\n      />\n    </Step>\n  );\n}\n","import { useMemo } from 'react';\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\n// Components\nimport { CanvasSVG } from 'components/canvas';\nimport { IconAvatar } from 'components/icons/IconAvatar';\nimport { AnimatedLoaderIcon } from 'components/icons/AnimatedLoaderIcon';\nimport { AvatarName } from 'components/avatars';\n\ntype EvaluatedDrawingsProps = {\n  votes?: StringDictionary;\n  cards: ArteRuimCard[];\n  drawings: ArteRuimDrawing[];\n  players: GamePlayers;\n};\n\n/**\n * Displays drawings in the waiting room after evaluation\n * @param props\n * @returns\n */\nexport function EvaluatedDrawings({ votes, cards, drawings, players }: EvaluatedDrawingsProps) {\n  const [canvasSize] = useGlobalState('canvasSize');\n\n  const cardsDict = useMemo(\n    () =>\n      cards.reduce((acc: Record<string, ArteRuimCard>, card) => {\n        acc[card.id] = card;\n        return acc;\n      }, {}),\n    [cards]\n  );\n\n  const drawingsDict = useMemo(\n    () =>\n      drawings.reduce((acc: Record<string, ArteRuimDrawing>, drawing) => {\n        acc[drawing.id] = drawing;\n        return acc;\n      }, {}),\n    [drawings]\n  );\n\n  if (!votes) {\n    return (\n      <div className=\"a-evaluated-drawings\">\n        <IconAvatar icon={<AnimatedLoaderIcon />} />\n      </div>\n    );\n  }\n  const cSize = Math.min(canvasSize * 0.6, 2000);\n\n  return (\n    <ul className=\"a-evaluated-drawings\">\n      {Object.keys(votes)\n        .sort()\n        .map((drawingKey: string) => {\n          const drawing = drawingsDict[drawingKey] as ArteRuimDrawing;\n          const card = cardsDict[votes[drawingKey]] as ArteRuimCard;\n\n          return (\n            <li className=\"a-evaluated-drawings__item\" key={`${drawing.id}-${card.id}-${card.playerId}`}>\n              <div className=\"a-evaluated-drawings__card\" style={{ maxWidth: `${cSize}px` }}>\n                <AvatarName player={players[drawing.playerId]} size=\"small\" />\n              </div>\n              <CanvasSVG\n                drawing={drawing.drawing}\n                size={cSize}\n                className=\"a-evaluation-all-drawings__drawing\"\n              />\n              <div className=\"a-evaluated-drawings__card\" style={{ maxWidth: `${cSize}px` }}>\n                {card.text}\n              </div>\n            </li>\n          );\n        })}\n    </ul>\n  );\n}\n","// Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitVotingAPIRequest } from './utils/api-requests';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { StepEvaluation } from './StepEvaluation';\nimport { EvaluationRules } from './components/TextBlobs';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { EvaluatedDrawings } from './components/EvaluatedDrawings';\nimport { EvaluateIcon } from 'components/icons/EvaluateIcon';\nimport { Translate } from 'components/language';\nimport { NOOP } from 'utils/constants';\n\nfunction EvaluationPhase({ players, state, info }: PhaseProps) {\n  const { step, setStep } = useStep(0);\n  const user = useUser(players, state);\n\n  const onSubmitVoting = useOnSubmitVotingAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<EvaluateIcon />}\n      title={<Translate pt=\"Adivinhação\" en=\"Match the Pairs\" />}\n      onClose={NOOP}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <EvaluationRules />\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.ARTE_RUIM.EVALUATION}>\n      <StepSwitcher\n        step={step}\n        conditions={[!user.isReady, !user.isReady]}\n        players={players}\n        waitingRoomInstruction={\n          <Translate\n            pt=\"Vamos aguardar enquanto os outros jogadores terminam de avaliar!\"\n            en=\"Please wait while other players finish their evaluations!\"\n          />\n        }\n        waitingRoomContent={\n          <EvaluatedDrawings\n            cards={state.cards}\n            drawings={state.drawings}\n            votes={user?.votes}\n            players={players}\n          />\n        }\n      >\n        {/*Step 0 */}\n        <StepEvaluation\n          drawings={state.drawings}\n          cards={state.cards}\n          players={players}\n          onSubmitVoting={onSubmitVoting}\n          announcement={announcement}\n        />\n\n        <></>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default EvaluationPhase;\n","// Components\nimport { AvatarEntry } from 'components/avatars';\nimport { Translate } from 'components/language';\n\ntype GalleryWindowCreditsProps = {\n  artist: GamePlayer;\n};\n\nexport function GalleryWindowCredits({ artist }: GalleryWindowCreditsProps) {\n  return (\n    <div className=\"a-gallery__credits\">\n      <div className=\"a-gallery__label\">\n        <Translate pt=\"Artista\" en=\"Artist\" />\n      </div>\n      <span className=\"a-gallery__artist-name\">\n        <AvatarEntry player={artist} />\n      </span>\n    </div>\n  );\n}\n","import { orderBy } from 'lodash';\n// Ant Design Resources\nimport { Avatar as AntAvatar } from 'antd';\nimport { CrownFilled, MessageFilled } from '@ant-design/icons';\n// Utils\nimport { getPlayersFromIds } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\n\ntype GalleryWindowGuessesProps = {\n  playersSay: PlayersSay;\n  players: GamePlayers;\n  cards: ArteRuimCard[];\n  windowCardId: string;\n  artistColor: string;\n};\n\nexport function GalleryWindowGuesses({\n  playersSay,\n  players,\n  cards,\n  windowCardId,\n  artistColor,\n}: GalleryWindowGuessesProps) {\n  const entries = orderBy(\n    Object.entries(playersSay).map(([cardId, playersIds]) => {\n      return {\n        cardId,\n        card: cards.find((i) => i.id === cardId),\n        playersIds,\n        count: playersIds.length,\n        isCorrect: windowCardId === cardId,\n      };\n    }),\n    ['isCorrect', 'count', 'card.text'],\n    ['desc', 'desc', 'asc']\n  );\n\n  return (\n    <div className=\"a-gallery__guesses\">\n      <div className=\"a-gallery__label\">\n        <Translate pt=\"Participantes votaram\" en=\"Players voted\" />\n      </div>\n      {entries.map((entry, index) => {\n        return (\n          <div key={`guess-${entry.cardId}-${index}`} className=\"a-gallery__guess\">\n            <div\n              className=\"a-gallery__speech-bubble\"\n              style={entry.isCorrect ? { backgroundColor: artistColor, color: 'white' } : {}}\n            >\n              {entry.isCorrect ? (\n                <CrownFilled className=\"a-gallery__speech-bubble-icon\" style={{ color: 'white' }} />\n              ) : (\n                <MessageFilled className=\"a-gallery__speech-bubble-icon\" />\n              )}\n              {entry.card?.text}\n            </div>\n            <div className=\"a-gallery__players\">\n              <AntAvatar.Group>\n                {entry.playersIds.map((playerId) => (\n                  <Avatar\n                    id={players[playerId].avatarId}\n                    key={`guess-avatar-${players[playerId].avatarId}`}\n                  />\n                ))}\n              </AntAvatar.Group>\n              <span className=\"a-gallery__players-names\">\n                {getPlayersFromIds(entry.playersIds, players, true).join(', ')}\n              </span>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Avatar as AntAvatar, Typography } from 'antd';\nimport { CrownFilled } from '@ant-design/icons';\n// Utils\nimport { getPlayersFromIds } from 'utils/helpers';\n// Components\nimport { Translate } from 'components/language';\nimport { Avatar } from 'components/avatars';\nimport { StarPoints } from 'components/points';\nimport { GarbageIcon } from 'components/icons/GarbageIcon';\nimport { IconAvatar } from 'components/icons/IconAvatar';\n\ntype GalleryWindowResultProps = {\n  playerArtist: GamePlayer;\n  correctAnswerId: string;\n  correctAnswerText: string;\n  playersPoints?: NumberDictionary;\n  playersSay: PlayersSay;\n  players: GamePlayers;\n};\n\nexport function GalleryWindowResult({\n  playerArtist,\n  correctAnswerId,\n  correctAnswerText,\n  playersPoints,\n  playersSay,\n  players,\n}: GalleryWindowResultProps) {\n  const correctGuesses = Object.values(playersSay?.[correctAnswerId] ?? {});\n\n  return (\n    <div className=\"a-gallery__result\">\n      <div className=\"a-gallery__label\">\n        <Translate pt=\"E o título correto da obra é\" en=\"And the masterpiece title is\" />\n      </div>\n      <div className=\"a-gallery__speech-bubble\">\n        <CrownFilled className=\"a-gallery__speech-bubble-icon\" />\n        {correctAnswerText}\n      </div>\n      {correctGuesses.length ? (\n        <>\n          <div className=\"a-gallery__players\">\n            <AntAvatar.Group>\n              {correctGuesses.map((playerId) => {\n                return <Avatar key={`correct-guess-avatar-${playerId}`} id={players[playerId].avatarId} />;\n              })}\n            </AntAvatar.Group>\n            <StarPoints quantity={2} keyPrefix={`guessers-points-${playerArtist.id}`} />\n            <span className=\"a-gallery__players-names\">\n              {getPlayersFromIds(correctGuesses, players, true).join(', ')}\n            </span>\n          </div>\n          <div className=\"a-gallery__artist-points\">\n            <Avatar id={playerArtist.avatarId} />{' '}\n            <StarPoints\n              quantity={playersPoints?.[playerArtist.id]}\n              keyPrefix={`artist-points-${playerArtist.id}`}\n            />{' '}\n            <span className=\"a-gallery__players-names\">{playerArtist.name}</span>\n          </div>\n        </>\n      ) : (\n        <Typography.Text className=\"a-gallery__no-wins\">\n          <IconAvatar icon={<GarbageIcon />} size=\"large\" shape=\"square\" />\n          <Translate\n            pt=\"Nossa, ninguém acertou. Esse desenho deve ter sido muito ruim.\"\n            en=\"Wow, nobody got it. It must have been a very crappy drawing. Shame...\"\n          />\n        </Typography.Text>\n      )}\n    </div>\n  );\n}\n","// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Utils\nimport { AVATARS } from 'utils/avatars';\nimport { WINDOW_DURATION } from './utils/constants';\n// Components\nimport { CanvasSVG } from 'components/canvas';\nimport { Translate } from 'components/language';\nimport { PopoverRule } from 'components/rules';\nimport { SlideShow } from 'components/slide-show';\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\nimport { GalleryWindowCredits } from './components/GalleryWindowCredits';\nimport { GalleryWindowGuesses } from './components/GalleryWindowGuesses';\nimport { GalleryWindowResult } from './components/GalleryWindowResult';\nimport { ScoringRules } from './components/TextBlobs';\n\ntype StepGalleryProps = {\n  gallery: ArteRuimWindow[];\n  players: GamePlayers;\n  cards: ArteRuimCard[];\n  activeIndex: number;\n  setActiveIndex: GenericFunction;\n  setStep: GenericFunction;\n  isFirstGalleryRunThrough: boolean;\n};\n\nexport function StepGallery({\n  gallery,\n  players,\n  cards,\n  activeIndex,\n  setActiveIndex,\n  setStep,\n  isFirstGalleryRunThrough,\n}: StepGalleryProps) {\n  useTemporarilyHidePlayersBar();\n\n  const canvasWidth = useCardWidth(2, 16, 200, 500);\n\n  const { drawing, artistId, id, text, playersPoints, playersSay } = gallery[activeIndex];\n\n  const playerArtist = players[artistId];\n  const currentColor = AVATARS[playerArtist.avatarId].color;\n\n  return (\n    <Step fullWidth>\n      <Title size=\"small\">\n        <Translate pt=\"Galeria de Arte\" en=\"Art Gallery\" />\n      </Title>\n\n      <PopoverRule content={<ScoringRules />} />\n\n      <SlideShow\n        players={players}\n        length={gallery.length}\n        activeIndex={activeIndex}\n        setActiveIndex={setActiveIndex}\n        setStep={setStep}\n        disableControls={isFirstGalleryRunThrough}\n        barColor={currentColor}\n        windowDuration={WINDOW_DURATION}\n        leftClassName=\"a-gallery__canvas\"\n        rightClassName=\"a-gallery__info\"\n      >\n        <CanvasSVG drawing={drawing} size={canvasWidth} className=\"a-gallery__drawing\" />\n\n        <>\n          <GalleryWindowCredits artist={playerArtist} />\n\n          <GalleryWindowGuesses\n            players={players}\n            playersSay={playersSay}\n            cards={cards}\n            windowCardId={id}\n            artistColor={currentColor}\n          />\n\n          <GalleryWindowResult\n            playerArtist={playerArtist}\n            correctAnswerId={id}\n            correctAnswerText={text}\n            playersPoints={playersPoints}\n            playersSay={playersSay}\n            players={players}\n          />\n        </>\n      </SlideShow>\n    </Step>\n  );\n}\n","export const WINDOW_DURATION = 10;\n","// Ant Design Resources\nimport { Button } from 'antd';\nimport { PictureOutlined } from '@ant-design/icons';\n// Components\nimport { RoundsLeftInstruction } from 'components/text';\nimport { StepRankingWrapper } from 'components/ranking';\nimport { PopoverRule } from 'components/rules';\nimport { Translate } from 'components/language';\nimport { AdminNextPhaseButton } from 'components/admin';\nimport { ScoringRules } from './components/TextBlobs';\n\ntype StepRankingProps = {\n  players: GamePlayers;\n  ranking: GameRanking;\n  isGameOver: boolean;\n  round: GameRound;\n  goToPreviousStep: GenericFunction;\n  setActiveIndex: GenericFunction;\n  isLastRound?: boolean;\n};\n\nexport function StepRanking({\n  players,\n  ranking,\n  isGameOver,\n  round,\n  goToPreviousStep,\n  setActiveIndex,\n  isLastRound = false,\n}: StepRankingProps) {\n  return (\n    <StepRankingWrapper\n      players={players}\n      ranking={ranking}\n      gainedPointsDescriptions={[\n        <Translate pt=\"Votos corretos\" en=\"Correct guesses\" />,\n        <Translate\n          pt=\"Votos corretos em seu desenho por outros jogadores\"\n          en=\"Correct guesses on your drawing by other players\"\n        />,\n      ]}\n    >\n      <PopoverRule content={<ScoringRules />} />\n\n      {!isGameOver && <RoundsLeftInstruction round={round} lastRound={isLastRound} />}\n\n      <Button\n        size=\"large\"\n        onClick={() => {\n          goToPreviousStep();\n          setActiveIndex(0);\n        }}\n        icon={<PictureOutlined />}\n      >\n        <Translate pt=\"Ver Galeria Novamente\" en=\"See Gallery Again\" />\n      </Button>\n\n      <AdminNextPhaseButton round={round} lastRound={isLastRound} />\n    </StepRankingWrapper>\n  );\n}\n","// Hooks\nimport { useSlideShow } from 'hooks/useSlideShow';\nimport { useStep } from 'hooks/useStep';\n// Resources and Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { GalleryRules } from './components/TextBlobs';\nimport { StepGallery } from './StepGallery';\nimport { StepRanking } from './StepRanking';\nimport { PictureIcon } from 'components/icons/PictureIcon';\nimport { Translate } from 'components/language';\n\nfunction PhaseGallery({ players, state, info, meta }: PhaseProps) {\n  const { step, goToNextStep, goToPreviousStep, setStep } = useStep(0);\n  const { activeIndex, setActiveIndex, isFirstGalleryRunThrough } = useSlideShow(state.gallery.length);\n\n  const isGameOver = meta.options?.shortGame\n    ? state.round.current === 5\n    : Object.values(players).some((player) => player.score > 50);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ARTE_RUIM.GALLERY}\n      className=\"a-gallery-phase\"\n    >\n      <StepSwitcher step={step} players={players}>\n        {/*Step 0 */}\n        <PhaseAnnouncement\n          icon={<PictureIcon />}\n          title={<Translate pt=\"Galeria de Arte\" en=\"Art Gallery\" />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          unskippable\n        >\n          <GalleryRules />\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepGallery\n          gallery={state.gallery}\n          players={players}\n          cards={state.cards}\n          activeIndex={activeIndex}\n          setActiveIndex={setActiveIndex}\n          setStep={setStep}\n          isFirstGalleryRunThrough={isFirstGalleryRunThrough}\n        />\n\n        {/* Step 2 */}\n        <StepRanking\n          players={players}\n          ranking={state.ranking}\n          isGameOver={isGameOver}\n          round={state.round}\n          goToPreviousStep={goToPreviousStep}\n          setActiveIndex={setActiveIndex}\n          isLastRound={state?.lastRound}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseGallery;\n","import { MedalBrushIcon } from 'components/icons/MedalBrushIcon';\nimport { MedalLightBulbIcon } from 'components/icons/MedalLightBulbIcon';\nimport { MedalPersonIcon } from 'components/icons/MedalPersonIcon';\nimport { MedalQuestionMarkIcon } from 'components/icons/MedalQuestionMarkIcon';\nimport { MedalRobotIcon } from 'components/icons/MedalRobotIcon';\n\nexport const achievementsReference: AchievementReference = {\n  BEST_ARTIST: {\n    Icon: MedalBrushIcon,\n    title: {\n      pt: 'Melhor Artista',\n      en: 'Best Artist',\n    },\n    description: {\n      pt: 'Todos os jogadores acertaram unanimemente seu desenho mais vezes',\n      en: 'Got players to guess your drawing unanimously the most',\n    },\n  },\n  WORST_ARTIST: {\n    Icon: MedalQuestionMarkIcon,\n    title: {\n      pt: 'Artista Mais Não Convencional',\n      en: 'Most Unconventional Artist',\n    },\n    description: {\n      pt: 'Todos os jogadores NÃO acertaram unanimemente seu desenho mais vezes',\n      en: 'Got players to miss your drawing unanimously the most',\n    },\n  },\n  SOLITARY_WINNER: {\n    Icon: MedalPersonIcon,\n    title: {\n      pt: 'Adivinhador Solitário',\n      en: 'Best Solitary Guesser',\n    },\n    description: {\n      pt: 'Foi o único que acertou o desenho mais vezes',\n      en: 'Was the only one to get the drawing the most',\n    },\n  },\n  SOLITARY_LOSER: {\n    Icon: MedalLightBulbIcon,\n    title: {\n      pt: 'Mais Diferentão',\n      en: 'Most Unique Guesser',\n    },\n    description: {\n      pt: 'Foi o único que errou o desenho mais vezes',\n      en: 'Was the only one to get the drawing the most',\n    },\n  },\n  TABLE_VOTES: {\n    Icon: MedalRobotIcon,\n    title: {\n      pt: 'Melhor Votador Pra Mesa',\n      en: 'Best Table Voter',\n    },\n    description: {\n      pt: 'Votou nas cartas extras que não eram de nenhum jogador mais vezes',\n      en: \"Voted for extra cards that didn't belong to any player the most\",\n    },\n  },\n};\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Avatar, Tooltip } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n\nconst GRADES = ['F', 'D', 'D+', 'C-', 'C', 'C+', 'B-', 'B', 'B+', 'A-', 'A', 'A+'];\n\ntype DrawingGradeProps = {\n  value: number;\n};\n\nexport const DrawingGrade = ({ value }: DrawingGradeProps) => {\n  const { translate } = useLanguage();\n  const grade = GRADES[Math.floor(value / 0.084)];\n\n  const baseClass = 'a-drawing-grade';\n\n  return (\n    <Tooltip\n      title={translate(\n        `Nota baseada em quantos acertos o desenho teve: ${value * 100}%`,\n        `Grade based on the number of correct guesses the artwork got: ${value * 100}%`\n      )}\n    >\n      <Avatar className={clsx(baseClass, `${baseClass}--${grade[0]}`)}>{grade}</Avatar>\n    </Tooltip>\n  );\n};\n","// Components\nimport { CanvasSVG } from 'components/canvas';\nimport { Translate } from 'components/language';\nimport { DrawingGrade } from './DrawingGrade';\n\ntype FinalGalleryProps = {\n  drawings: ArteRuimDrawing[];\n  players: GamePlayers;\n};\n\nexport function FinalGallery({ drawings, players }: FinalGalleryProps) {\n  return (\n    <ul className=\"a-game-over__gallery\">\n      {drawings.map((entry: ArteRuimDrawing) => {\n        const successRate = entry.successRate ?? 0;\n\n        return (\n          <li className=\"a-game-over__gallery-item\" key={entry.drawing} style={{ width: '200px' }}>\n            <CanvasSVG drawing={entry.drawing} size={200} className=\"a-game-over__gallery-canvas\" />\n            <span className=\"a-game-over__credits\">\n              \"{entry.text}\" <Translate pt=\"por\" en=\"by\" /> {players[entry.playerId].name}\n            </span>\n            <DrawingGrade value={successRate > 1 ? successRate / 100 : successRate} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","// Utils\nimport { achievementsReference } from './utils/achievements';\n// Components\nimport { GameOverWrapper } from 'components/game-over';\nimport { Achievements } from 'components/general/Achievements';\nimport { TrophyIcon } from 'components/icons/TrophyIcon';\nimport { Translate } from 'components/language';\nimport { FinalGallery } from './components/FinalGallery';\n\nfunction PhaseGameOver({ state, players, info }: PhaseProps) {\n  return (\n    <GameOverWrapper\n      info={info}\n      state={state}\n      announcementIcon={<TrophyIcon />}\n      rateWidgetCustomText={<Translate pt=\"Alguma sugestão de carta?\" en=\"Any card suggestions?\" />}\n    >\n      <Achievements players={players} achievements={state.achievements} reference={achievementsReference} />\n\n      <FinalGallery players={players} drawings={state.drawings} />\n    </GameOverWrapper>\n  );\n}\n\nexport default PhaseGameOver;\n","import { ConfigProvider } from 'antd';\n// Constants\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport PhaseDraw from './PhaseDraw';\nimport PhaseEvaluation from './PhaseEvaluation';\nimport PhaseGallery from './PhaseGallery';\nimport PhaseGameOver from './PhaseGameOver';\n// Sass\nimport './arte-ruim.scss';\n\nfunction getActiveComponent(phase: string) {\n  switch (phase) {\n    case PHASES.DEFAULT.LOBBY:\n      return PhaseLobby;\n    case PHASES.DEFAULT.RULES:\n      return PhaseRules;\n    case PHASES.DEFAULT.SETUP:\n      return PhaseSetup;\n    case PHASES.ARTE_RUIM.DRAW:\n      return PhaseDraw;\n    case PHASES.ARTE_RUIM.EVALUATION:\n      return PhaseEvaluation;\n    case PHASES.ARTE_RUIM.GALLERY:\n      return PhaseGallery;\n    case PHASES.DEFAULT.GAME_OVER:\n      return PhaseGameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionArteRuim({ gameId }: SessionProps) {\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorPrimary: THEME_COLORS.WOOD,\n        },\n      }}\n    >\n      <Session\n        gameId={gameId}\n        gameCollection={GAME_COLLECTION.ARTE_RUIM}\n        getActiveComponent={getActiveComponent}\n      />\n    </ConfigProvider>\n  );\n}\n\nexport default SessionArteRuim;\n","import { useEffect, useState } from 'react';\n\n/**\n * Controls slide show\n * @param length\n */\nexport function useSlideShow(length: number): {\n  activeIndex: number;\n  setActiveIndex: React.Dispatch<React.SetStateAction<number>>;\n  isFirstGalleryRunThrough: boolean;\n  setIsFirstGalleryRunThrough: React.Dispatch<React.SetStateAction<boolean>>;\n} {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [isFirstGalleryRunThrough, setIsFirstGalleryRunThrough] = useState(true);\n\n  useEffect(() => {\n    if (isFirstGalleryRunThrough && activeIndex === length - 1) {\n      setIsFirstGalleryRunThrough(false);\n    }\n  }, [isFirstGalleryRunThrough, activeIndex, length]);\n\n  return {\n    activeIndex,\n    setActiveIndex,\n    isFirstGalleryRunThrough,\n    setIsFirstGalleryRunThrough,\n  };\n}\n","import { useCallback, useEffect, useState } from 'react';\nimport { SEPARATOR } from 'utils/constants';\n\n/**\n * Delete duplicated votes on the 'value' side of the votes object\n * @param votes\n * @param target\n */\nconst deleteDuplicate = (votes: PlainObject, target: string) => {\n  const votesArray = Object.entries(votes);\n  const duplicateIndex = votesArray.findIndex((el) => el[1] === target);\n  if (duplicateIndex > -1) {\n    const duplicateKey = votesArray[duplicateIndex][0];\n    delete votes[duplicateKey];\n  }\n};\n\ntype Votes = {\n  [key: string]: string;\n};\n\n/**\n * Keeps track of an object with votes following the schema:\n * {<typeSEPARATORid...>: <typeSEPARATORid...>\n * @param keyType the type of the entry that will work as the key of the voting object\n * @param uniqueOnly Indicates if it is allow to voting duplicates\n * @param completeCount\n * @returns\n */\nexport function useVotingMatch(\n  keyType: string,\n  allowDuplicates: boolean = true,\n  completeCount?: number,\n  initialState: Votes = {}\n): {\n  votes: Votes;\n  setVotes: React.Dispatch<any>;\n  activeItem: string;\n  activateItem: (entryId: string) => void;\n  isVotingComplete: boolean;\n  resetVoting: (newInitialState: Votes) => void;\n} {\n  const [votes, setVotes]: [Votes, React.Dispatch<any>] = useState({ ...initialState });\n  const [activeItem, setActiveItem]: [string, React.Dispatch<any>] = useState('');\n  const [isVotingComplete, setIsVotingComplete]: [boolean, React.Dispatch<any>] = useState(false);\n\n  const activateItem = useCallback(\n    (entryId: string) => {\n      // When new Item is already the active item, deselect it\n      if (entryId === activeItem) {\n        return setActiveItem('');\n      }\n\n      const [type] = entryId.split(SEPARATOR);\n\n      // When no active item or type of new item is the same as active item, set it\n      if (!activeItem || activeItem.startsWith(type)) {\n        return setActiveItem(entryId);\n      }\n\n      // When new item type is a key\n      if (type === keyType) {\n        setVotes((prevVotes: Votes) => {\n          const copy = { ...prevVotes };\n          // Find and clear any previous vote if uniqueOnly\n          if (!allowDuplicates) {\n            deleteDuplicate(copy, activeItem);\n          }\n\n          return {\n            ...copy,\n            [entryId]: activeItem,\n          };\n        });\n        return setActiveItem('');\n      }\n\n      // When new item is a value\n      setVotes((prevVotes: Votes) => {\n        const copy = { ...prevVotes };\n        // Find and clear any previous vote if uniqueOnly\n        if (!allowDuplicates) {\n          deleteDuplicate(copy, entryId);\n        }\n\n        return {\n          ...copy,\n          [activeItem]: entryId,\n        };\n      });\n\n      return setActiveItem('');\n    },\n    [activeItem, keyType, allowDuplicates]\n  );\n\n  const resetVoting = (newInitialState: Votes) => {\n    setVotes(newInitialState ?? initialState);\n    setActiveItem('');\n  };\n\n  useEffect(() => {\n    if (completeCount) {\n      setIsVotingComplete(Object.keys(votes).length === completeCount);\n    }\n  }, [completeCount, votes]);\n\n  return { votes, setVotes, activeItem, activateItem, isVotingComplete, resetVoting };\n}\n"],"names":["MedalLightBulbIcon","props","xmlns","viewBox","fill","d","cx","cy","r","MedalPersonIcon","TrophyIcon","TimeHighlight","children","type","iconSize","className","icon","StarPoints","keyPrefix","quantity","hideText","isNegative","num","Math","abs","StarsArray","Array","from","length","_","i","StarFilled","clsx","pt","en","Ribbon","label","position","getColorFromLetter","getAnimationClass","RibbonGroup","labels","map","charAt","SlideShowControls","activeIndex","setActiveIndex","setStep","disableControls","barColor","windowDuration","useCountdown","duration","autoStart","onExpire","timeLeft","isRunning","pause","resume","useEffect","s","min","e","style","width","backgroundColor","size","StepBackwardOutlined","onClick","max","disabled","PauseOutlined","PlayCircleOutlined","StepForwardOutlined","TrophyOutlined","SlideShow","leftClassName","rightClassName","id","StepDraw","secretCard","onSubmitDrawing","startDrawingTimer","announcement","translate","useLanguage","isDebugEnabled","useDevFeatures","useState","lines","setLines","isTimesUp","setTimesUp","drawing","JSON","stringify","cardId","seconds","start","header","undefined","footer","level","join","color","text","ArteRuimTimerSound","PanicIcon","background","padding","DrawInstruction","EvaluationRules","GalleryRules","PointsHighlight","ScoringRules","players","state","info","useStep","step","goToNextStep","user","useUser","setStartDrawingTimer","request","useAPICall","apiFunction","ARTE_RUIM_API","actionName","onBeforeCall","onError","successMessage","errorMessage","payload","action","useOnSubmitDrawingAPIRequest","PaintingIcon","title","buttonText","onClose","currentRound","round","current","withoutTimer","phase","allowedPhase","PHASES","conditions","isReady","waitingRoomInstruction","onPressButton","time","circleColor","appearance","contained","currentCard","prepareVotes","votes","Object","entries","reduce","acc","drawingEntryId","cardEntryId","split","SEPARATOR","drawingId","EvaluationAllDrawings","drawings","activeItem","onActivateItem","canvasSize","liButtonBaseClass","drawingEntry","canvasEntryId","getEntryId","isActive","vote","playerId","name","ArteRuimCard","WarningOutlined","EvaluationAllCards","cards","cardEntry","index","letter","LETTERS","isUsed","values","includes","role","StepEvaluation","onSubmitVoting","isLoading","useLoading","canvasWidth","useCardWidth","useGlobalState","setCanvasSize","useVotingMatch","setVotes","activateItem","resetVoting","isVotingComplete","onGuessForMe","useCallback","usedDrawings","keys","usedCards","drawingsKeys","filter","key","cardsKeys","shuffle","ceil","flat","newVotes","forEach","drawingKey","floor","selectOwnDrawing","playersDrawing","find","cardIndex","findIndex","card","cardKey","useEffectOnce","selection","useMock","fullWidth","content","align","wrap","ThunderboltOutlined","CloudUploadOutlined","loading","EvaluatedDrawings","cardsDict","useMemo","drawingsDict","IconAvatar","AnimatedLoaderIcon","cSize","sort","maxWidth","player","onSuccess","useOnSubmitVotingAPIRequest","EvaluateIcon","NOOP","waitingRoomContent","GalleryWindowCredits","artist","GalleryWindowGuesses","playersSay","windowCardId","artistColor","orderBy","playersIds","count","isCorrect","entry","CrownFilled","MessageFilled","avatarId","getPlayersFromIds","GalleryWindowResult","playerArtist","correctAnswerId","correctAnswerText","playersPoints","correctGuesses","GarbageIcon","shape","StepGallery","gallery","isFirstGalleryRunThrough","useTemporarilyHidePlayersBar","artistId","currentColor","AVATARS","StepRanking","ranking","isGameOver","goToPreviousStep","isLastRound","gainedPointsDescriptions","lastRound","PictureOutlined","meta","useSlideShow","options","shortGame","some","score","PictureIcon","unskippable","achievementsReference","BEST_ARTIST","Icon","MedalBrushIcon","description","WORST_ARTIST","MedalQuestionMarkIcon","SOLITARY_WINNER","SOLITARY_LOSER","TABLE_VOTES","MedalRobotIcon","GRADES","DrawingGrade","value","grade","baseClass","FinalGallery","successRate","announcementIcon","rateWidgetCustomText","Achievements","achievements","reference","getActiveComponent","PhaseLobby","PhaseRules","PhaseSetup","PhaseDraw","PhaseEvaluation","PhaseGallery","PhaseGameOver","PageError","gameId","theme","token","colorPrimary","THEME_COLORS","gameCollection","GAME_COLLECTION","setIsFirstGalleryRunThrough","deleteDuplicate","target","votesArray","duplicateIndex","el","keyType","allowDuplicates","completeCount","initialState","setActiveItem","setIsVotingComplete","entryId","startsWith","prevVotes","copy","newInitialState"],"sourceRoot":""}