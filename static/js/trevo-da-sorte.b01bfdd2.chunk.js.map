{"version":3,"file":"static/js/trevo-da-sorte.b01bfdd2.chunk.js","mappings":"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","sources":["components/ranking/RankingBoard.tsx","components/ranking/StepRankingWrapper.tsx","assets/images/round-title-en.svg","assets/images/round-title-pt.svg","components/round/RoundAnnouncement.tsx","components/views/View.tsx","components/views/ViewIf.tsx","components/views/ViewOr.tsx","components/views/ViewSwitch.tsx","games/trevo-da-sorte/utils/constants.ts","games/trevo-da-sorte/utils/helpers.ts","games/trevo-da-sorte/utils/mock.ts","games/trevo-da-sorte/StepSelectWords.tsx","games/trevo-da-sorte/PhaseWordSelection.tsx","games/trevo-da-sorte/utils/api-requests.ts","games/trevo-da-sorte/utils/useCloverState.ts","games/trevo-da-sorte/components/Leaf.tsx","games/trevo-da-sorte/components/LeafSlot.tsx","games/trevo-da-sorte/components/Clover.tsx","games/trevo-da-sorte/components/RulesBlobs.tsx","games/trevo-da-sorte/components/ConfirmClues.tsx","games/trevo-da-sorte/StepWriteClues.tsx","games/trevo-da-sorte/PhaseCloverWriting.tsx","games/trevo-da-sorte/components/DetachedLeaves.tsx","games/trevo-da-sorte/StepGuessClover.tsx","games/trevo-da-sorte/StepWaitClover.tsx","games/trevo-da-sorte/PhaseCloverGuessing.tsx","games/trevo-da-sorte/components/PlayersGuesses.tsx","games/trevo-da-sorte/StepRanking.tsx","games/trevo-da-sorte/PhaseResults.tsx","games/trevo-da-sorte/PhaseGameOver.tsx","games/trevo-da-sorte/SessionTrevoDaSorte.tsx","hooks/useBooleanDictionary.ts","hooks/useDimensions.ts","hooks/useWhichPlayerIsThe.ts","icons/CloverIcon.tsx","icons/TrophyIcon.tsx","icons/VerifyListIcon.tsx","icons/WritingIcon.tsx"],"sourcesContent":["import clsx from 'clsx';\nimport { ReactNode, useEffect, useMemo, useState } from 'react';\nimport { orderBy } from 'lodash';\nimport { useEffectOnce } from 'react-use';\n// Ant Design Resources\nimport { Tooltip } from 'antd';\nimport { CrownFilled } from '@ant-design/icons';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useDimensions } from 'hooks/useDimensions';\n// Components\nimport { Translate } from 'components/language';\nimport { Avatar } from 'components/avatars';\n\ntype GainedPointProps = {\n  gainedPoint: number;\n  order: number;\n  description?: any;\n};\n\nfunction GainedPoint({ gainedPoint, order, description }: GainedPointProps): JSX.Element {\n  const isPositive = gainedPoint > 0;\n  const isNegative = gainedPoint < 0;\n  return (\n    <li\n      className={clsx(\n        'ranking-board__gained-point',\n        isPositive && 'ranking-board__gained-point--plus',\n        isNegative && 'ranking-board__gained-point--minus',\n        `ranking-board__gained-point--${order}`\n      )}\n    >\n      <Tooltip\n        title={description ?? <Translate pt=\"Pontos ganhos\" en=\"Gained Points\" />}\n        color={isPositive ? 'gold' : isNegative ? 'red' : 'gray'}\n      >\n        {isPositive ? '+' : ''}\n        {gainedPoint}\n      </Tooltip>\n    </li>\n  );\n}\n\ntype GainedPointsProps = {\n  gainedPoints: number[] | number;\n  playerId: PlayerId;\n  gainedPointsDescriptions?: any[];\n};\n\nfunction GainedPoints({\n  gainedPoints,\n  playerId,\n  gainedPointsDescriptions = [],\n}: GainedPointsProps): JSX.Element {\n  const points = Array.isArray(gainedPoints) ? gainedPoints : [gainedPoints];\n  return (\n    <ul className=\"ranking-board__cell-gained-points\">\n      {points.map((gainedPoint, index) => (\n        <GainedPoint\n          key={`gained-point-${playerId}-${index}`}\n          gainedPoint={gainedPoint}\n          order={index}\n          description={gainedPointsDescriptions[index]}\n        />\n      ))}\n    </ul>\n  );\n}\n\ntype RankingBoardProps = {\n  players: GamePlayers;\n  ranking: GameRanking;\n  gainedPointsDescriptions?: ReactNode[];\n  hideGainedPoints?: boolean;\n  delay?: number;\n};\n\nexport function RankingBoard({\n  players,\n  ranking,\n  gainedPointsDescriptions,\n  hideGainedPoints = false,\n  delay = 0,\n}: RankingBoardProps): JSX.Element {\n  const [displayStep, setDisplayStep] = useState(0);\n  const [sortedRanking, setSortedRanking] = useState<GameRanking>([]);\n  const [reRank, setReRank] = useState(0);\n  const [, height] = useDimensions('ranking-row-0');\n\n  const maxPoints = useMemo(() => Math.max(...ranking.map((scores) => scores.newScore)), [ranking]);\n\n  const { seconds } = useCountdown({\n    duration: 5 + delay,\n    autoStart: true,\n    onExpire: () => {\n      setReRank(1);\n      setDisplayStep(3);\n    },\n  });\n\n  // Rank by previousScore\n  useEffectOnce(() => {\n    const positions: PlainObject = {};\n    let lastPosition = 0;\n    let lastPoints = 0;\n\n    const rankByFinalScoreDict = orderBy(ranking, ['newScore', 'name'], ['desc', 'asc']).reduce(\n      (acc: PlainObject, entry, index) => {\n        acc[entry.playerId] = index;\n        // Calculate position\n        if (lastPoints === 0 || entry.newScore < lastPoints) {\n          lastPoints = entry.newScore;\n          lastPosition += 1;\n        }\n        positions[entry.playerId] = [0, lastPosition];\n        return acc;\n      },\n      {}\n    );\n\n    const rankByPreviousScore = orderBy(ranking, ['previousScore', 'name'], ['desc', 'asc']);\n\n    // Reset position trackers\n    lastPosition = 0;\n    lastPoints = 0;\n\n    const tempSortedRanking: GameRanking = rankByPreviousScore.map((entry, index) => {\n      const newEntry = { ...entry };\n\n      newEntry.order = [index, rankByFinalScoreDict[newEntry.playerId]];\n      newEntry.position = positions[newEntry.playerId];\n      // Calculate position\n      if (lastPoints === 0 || entry.previousScore < lastPoints) {\n        lastPoints = entry.previousScore;\n        lastPosition += 1;\n      }\n      newEntry.position[0] = lastPosition;\n      return newEntry;\n    });\n\n    setSortedRanking(tempSortedRanking);\n  });\n\n  // Show gained points\n  useEffect(() => {\n    if (seconds === 4 + delay) {\n      setDisplayStep(1);\n    } else if (seconds === 2 + delay) {\n      setDisplayStep(2);\n    }\n  }, [seconds, delay]);\n\n  return (\n    <div\n      className=\"ranking-board\"\n      style={{ height: `${(Math.max(60, height) + 8) * sortedRanking.length}px` }}\n    >\n      {sortedRanking.map((entry, index) => {\n        const { playerId, newScore, previousScore, gainedPoints, order, position } = entry;\n        const hPosition = (Math.max(60, height) + 8) * (order[reRank] ?? 0);\n\n        return (\n          <div\n            className={`ranking-board__row ranking-board__row--${index}`}\n            key={`ranking-${playerId}`}\n            id={`ranking-row-${index}`}\n            style={{ top: `${hPosition}px` }}\n          >\n            <div className=\"ranking-board__cell-crown\">\n              {newScore > 0 && maxPoints === newScore && displayStep >= 3 && (\n                <CrownFilled className=\"ranking-board__crown-icon\" />\n              )}\n            </div>\n            <div className=\"ranking-board__cell-position\">#{position[reRank] ?? ''}</div>\n            <div className=\"ranking-board__cell-player\">\n              <div className=\"ranking-board__avatar\">\n                <Avatar id={players[playerId].avatarId} />\n              </div>\n              <div className=\"ranking-board__name\">{players[playerId].name}</div>\n            </div>\n            <Tooltip title={<Translate pt=\"Pontos Anteriores\" en=\"Previous Points\" />} color=\"gray\">\n              <div className=\"ranking-board__cell-points\">{previousScore}</div>\n            </Tooltip>\n            {!hideGainedPoints && displayStep >= 1 && gainedPoints !== undefined && (\n              <GainedPoints\n                gainedPoints={gainedPoints}\n                playerId={playerId}\n                gainedPointsDescriptions={gainedPointsDescriptions}\n              />\n            )}\n            {displayStep >= 2 && (\n              <Tooltip title=\"Total\" color=\"gold\">\n                <span className=\"ranking-board__cell-points-total\">{newScore}</span>\n              </Tooltip>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { CaretUpOutlined } from '@ant-design/icons';\n// Hooks\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Components\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { RankingBoard } from './RankingBoard';\n\ntype StepRankingWrapperProps = {\n  /**\n   * The players\n   */\n  players: GamePlayers;\n  /**\n   * The ranking array\n   */\n  ranking: GameRanking;\n  /**\n   * Gained points descriptions for the popover\n   */\n  gainedPointsDescriptions: ReactNode[];\n  /**\n   * Additional content\n   */\n  children?: ReactNode;\n  /**\n   * Replacement title for Ranking\n   */\n  title?: ReactNode;\n  /**\n   * Optional node that goes under the title\n   */\n  subtitle?: ReactNode;\n};\n\nexport function StepRankingWrapper({\n  players,\n  ranking,\n  gainedPointsDescriptions,\n  children,\n  title,\n  subtitle,\n}: StepRankingWrapperProps) {\n  useTemporarilyHidePlayersBar();\n\n  return (\n    <Step>\n      <Title>{title ?? 'Ranking'}</Title>\n\n      {subtitle}\n\n      <RankingBoard players={players} ranking={ranking} gainedPointsDescriptions={gainedPointsDescriptions} />\n      <Instruction className=\"step-ranking-wrapper-gained-points-instruction\">\n        <CaretUpOutlined />\n        <Translate\n          pt=\"Passe o mouse em cada um dos pontos para saber como eles foram distribuídos\"\n          en=\"Hover over the scores to learn how they were granted\"\n        />\n        <CaretUpOutlined />\n      </Instruction>\n\n      {children}\n    </Step>\n  );\n}\n","var _style, _g, _g2, _g3, _g4, _g5, _g6, _g7, _g8;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRoundTitleEn(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 130 50\",\n    style: {\n      enableBackground: \"new 0 0 130 50\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:#9EC5E7;}\\n\\t.st1{fill:#FFFFFF;}\\n\\t.st2{fill:#3A7CA5;}\\n\\t.st3{fill:#44BBA4;}\\n\\t.st4{fill:#F2E863;}\\n\\t.st5{fill:#F45B69;}\\n\\t.st6{fill:#E6E6F5;}\\n\\t.st7{display:none;}\\n\\t.st8{display:inline;}\\n\\t.st9{display:inline;fill:none;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st10{fill:#DA70D6;}\\n\\t.st11{fill:#008080;}\\n\\t.st12{fill:#D2691E;}\\n\\t.st13{fill:#4682B4;}\\n\\t.st14{fill:#B22222;}\\n\\t.st15{fill:#DFB231;}\\n\\t.st16{fill:#FF6347;}\\n\\t.st17{fill:#9370DB;}\\n\\t.st18{fill:#3C58AC;}\\n\\t.st19{fill:#7CC44F;}\\n\\t.st20{fill:#040303;}\\n\\t.st21{fill:#FCBF00;}\\n\\t.st22{fill:#D70027;}\\n\\t.st23{fill:#EA384D;}\\n\\t.st24{fill:#BFB8B8;}\\n\\t.st25{fill:#F8EFEF;}\\n\\t.st26{fill:#FE2A25;}\\n\\t.st27{fill:#FE9A00;}\\n\\t.st28{fill:#FEE901;}\\n\\t.st29{fill:#FEF6A5;}\\n\\t.st30{fill:#FEF05C;}\\n\\t.st31{fill:#FEFDFD;}\\n\\t.st32{fill:url(#SVGID_1_);}\\n\\t.st33{fill:#D40000;}\\n\\t.st34{clip-path:url(#SVGID_3_);}\\n\\t.st35{fill:url(#SVGID_4_);}\\n\\t.st36{clip-path:url(#SVGID_6_);}\\n\\t.st37{fill:url(#SVGID_7_);}\\n\\t.st38{fill:#008C72;}\\n\\t.st39{clip-path:url(#SVGID_9_);}\\n\\t.st40{clip-path:url(#SVGID_11_);}\\n\\t.st41{clip-path:url(#SVGID_13_);}\\n\\t.st42{clip-path:url(#SVGID_15_);}\\n\\t.st43{clip-path:url(#SVGID_17_);}\\n\\t.st44{clip-path:url(#SVGID_19_);}\\n\\t.st45{fill:#575757;}\\n\\t.st46{clip-path:url(#SVGID_21_);}\\n\\t.st47{fill:url(#SVGID_22_);}\\n\\t.st48{fill:none;stroke:#FFFFFF;stroke-miterlimit:10;}\\n\\t.st49{display:inline;fill:#5C3400;}\\n\\t.st50{fill:none;}\\n\\t.st51{fill:#5C3400;}\\n\\t.st52{display:inline;fill:none;}\\n\\t.st53{display:inline;fill:#FFFFFF;}\\n\\t.st54{display:none;fill:#FFFFFF;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st55{display:inline;fill:#FFFFFF;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st56{display:none;fill:#F2F25F;}\\n\\t.st57{display:inline;fill:#F2F2F2;}\\n\\t.st58{display:inline;fill:#E6E6E6;}\\n\\t.st59{display:inline;fill:#808080;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st60{fill:#808080;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st61{display:inline;fill:#808080;}\\n\\t.st62{fill:#29E257;}\\n\\t.st63{fill:#E2DC29;}\\n\\t.st64{fill:#29ABE2;}\\n\\t.st65{fill:#E22929;}\\n\\t.st66{fill:#E6E6E6;}\\n\\t.st67{fill:#F2F2F2;}\\n\\t.st68{fill:#F9C303;}\\n\\t.st69{fill:#3A3939;}\\n\\t.st70{fill:#FF0000;}\\n\\t.st71{fill:#FEFEFD;}\\n\\t.st72{fill:#181D44;}\\n\\t.st73{fill:#F7931E;}\\n\\t.st74{fill:#A45467;}\\n\\t.st75{fill:#C33F48;}\\n\\t.st76{fill:#866A86;}\\n\\t.st77{fill:#6780A4;}\\n\\t.st78{fill:#4895C3;}\\n\\t.st79{fill:#4D4D4D;}\\n\\t.st80{opacity:0.2;}\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1\"\n  }, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M31.6,8.3c3.6,1.3,5.1,4.6,5.1,8.1c0,5.5-3.8,11.9-9.9,13.3c2.8,2.9,6,8.6,8.4,8.6c0.6,0,1.2-0.4,1.7-1.3 c0.2-0.4,0.5-0.5,0.8-0.5c0.5,0,1.1,0.4,1.1,1.1c0,0.1-0.1,0.4-0.1,0.5c-1,1.8-2.6,2.7-4.3,2.7c-1.5,0-3-0.6-4.2-1.7 c-3-2.7-4.4-5.6-4.6-5.6c-0.1,0-0.1,0.1-0.1,0.1c0,0.6,0.5,2.7,1.3,7.4c0,0.2,0.1,0.4,0.1,0.6c0,1.5-1.1,2.7-2.8,2.7 c-0.2,0-0.4,0-0.7-0.1c-2-0.3-4.5-8.1-4.5-17.6c0-4.2,0.5-8.8,1.8-13.2c0.4-1.5,1.5-2.1,2.6-2.1c1.5,0,3.2,1.2,3.2,3.1 c0,0.1,0,0.4-0.1,0.6c-0.6,3.3-1.1,6.5-1.3,9.7c4.1-2.5,5.7-5.5,5.7-8.1c0-3.5-2.8-6.4-5.6-6.5h-0.3c-4.4,0-9.1,4.4-9.1,9 c0,0.9,0.2,1.8,0.6,2.7c0.1,0.1,0.1,0.3,0.1,0.4c0,0.6-0.4,1.1-0.9,1.1c-0.1,0-0.4-0.1-0.5-0.1c-1.5-0.7-2.1-2-2.1-3.7 c0-4.8,5.5-12.1,13.5-12.1C28,7.3,29.8,7.6,31.6,8.3z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M49,22.7c1.8,2.4,2.6,5.3,2.6,7.9c0,5.5-3.1,10.4-6.9,10.5h-0.1c-4.6,0-6.7-4.3-6.7-8.8 c0-3.3,1.1-6.8,3.2-8.9c-0.6,0-0.8-0.3-0.8-0.7c0-1,1.8-2.7,4.1-2.7C45.8,19.9,47.5,20.6,49,22.7z M42.1,22.6 c0.9-0.6,1.7-0.8,2.4-0.8c1.5,0,2.5,1.3,2.5,2.5c0,0.2,0,0.4-0.1,0.6c-0.6,2.5-2.7,4.1-2.9,6.8c0,0.3-0.1,0.7-0.1,1.1 c0,0.8,0.1,1.5,0.5,2c0.3,0.4,0.7,0.4,1.2,0.4c0.6,0,1.3-0.2,1.8-0.5c1.7-1,2.5-3.2,2.5-5.6c0-3.4-1.5-7-4.3-7.7 c-0.3-0.1-0.6-0.1-0.8-0.1C43.6,21.2,42.6,21.7,42.1,22.6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M59.9,23.2v0.4c-0.3,2.1-1.2,6.3-1.2,9.4c0,1.8,0.3,3.2,1.1,3.7c0.1,0.1,0.3,0.1,0.4,0.1 c1.3,0,2.9-4.1,4.1-7.9c0.1-6,2-7.9,3.6-7.9c1.4,0,2.7,1.3,2.9,2.7c0,0.4,0.1,0.6,0.1,0.9c0,1.6-0.4,2.8-0.4,5.5 c0,1.2,0.1,2.8,0.4,4.8v0.8c0,0.7,0.1,1.3,0.8,1.3c0.1,0,0.2-0.1,0.4-0.1c1.9-0.4,3.6-6.5,4-8.3c0.1-0.2,0.2-0.4,0.4-0.4 s0.4,0.2,0.4,0.4v0.1c-0.8,3.5-2.3,11.2-7,11.2c-0.4,0-0.8-0.1-1.3-0.2c-3.1-0.8-3.7-3.9-3.9-6.7c-2,5.7-4.6,8.1-6.8,8.1 c-2.7,0-4.9-3.6-4.9-9.4c0-2.6,0.4-5.6,1.5-9c0.4-1.3,1.8-2,2.9-2C58.6,20.8,59.9,21.6,59.9,23.2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M80.6,20.6c0.1,0.5,0.1,0.9,0.1,1.4c0,2.5-1,4.9-1,7.7v0.8c1.7-5.3,4.1-11.4,7.6-11.4c0.6,0,1.4,0.2,2.2,0.7 c2.3,1.5,3,5.2,3,8.8c0,4.6-1.1,9-1.1,9c0.1,0,3.7-4.8,4.8-8.5c0.1-0.3,0.3-0.4,0.6-0.4c0.3,0,0.6,0.2,0.6,0.6v0.1 c-0.6,2.8-3.1,9.1-5.5,10.2c-0.4,0.1-0.7,0.2-1.1,0.2c-2.6,0-4.2-3.9-4.5-5.9c-0.1-0.5-0.1-1.1-0.1-1.7c0-1.2,0.1-2.5,0.1-3.8 c0-1.9-0.1-3.7-0.7-5c-0.1-0.1-0.1-0.2-0.2-0.2c-1.1,0-4.3,7.9-4.8,15.6c-0.1,1.2-0.8,2-1.8,2c-1.9,0-4.7-2.9-5.1-10.2 c-0.1-0.8-0.1-1.5-0.1-2.2c0-7.2,2.6-9.5,4.6-9.6C79.4,18.8,80.4,19.6,80.6,20.6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M111.3,5.7c1.4,0,2.9,1,2.9,2.5v0.2c-0.5,5-2.4,9.1-3.6,20.6c-0.2,1.9-0.3,3.4-0.3,4.6c0,2.5,0.4,3.5,1,3.5 c1.1,0,3-3.6,4.5-8.5c0.1-0.4,0.4-0.5,0.7-0.5c0.4,0,0.7,0.2,0.7,0.6c0,0.1-0.1,0.1-0.1,0.2c-0.9,3.4-2.2,8.1-4.7,10.7 c-0.8,0.8-1.6,1.2-2.5,1.2c-2.6,0-5.1-3.6-5.5-7.3c-2,5.1-4.1,7.1-5.8,7.1c-2.4,0-4.1-4.1-4.1-8.6c0-4.7,1.8-9.8,6.5-11.2 c0.4-0.1,0.7-0.1,1-0.1c1.8,0,3.2,1.2,3.4,1.2h0.1c0.8-4.9,1.4-10.3,3.4-14.9c0.4-0.9,1.3-1.3,2.2-1.3H111.3z M99.7,35.1v0.5 c0,0.2-0.1,0.4-0.1,0.6c0,0.4,0.1,0.7,0.4,0.7c1,0,3.9-4.8,4.9-11.1c-0.4-0.4-0.7-0.6-1.1-0.6C101.8,25.2,99.7,31.3,99.7,35.1z\"\n  })))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"avatars\"\n  })), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Time_Bomb\"\n  })), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_4\"\n  })), _g5 || (_g5 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_8\"\n  })), _g6 || (_g6 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_6\"\n  })), _g7 || (_g7 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"dial_svg\"\n  })), _g8 || (_g8 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Sheeps\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRoundTitleEn);\nexport default __webpack_public_path__ + \"static/media/round-title-en.2ad07e1f265a85634ad7940a33f96552.svg\";\nexport { ForwardRef as ReactComponent };","var _style, _g, _g2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRoundTitlePt(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 130 50\",\n    style: {\n      enableBackground: \"new 0 0 130 50\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:#3E1E68;}\\n\\t.st1{fill:#9EC5E7;}\\n\\t.st2{display:none;}\\n\\t.st3{display:inline;fill:#9EC5E7;}\\n\\t.st4{fill:#3A7CA5;}\\n\\t.st5{fill:#44BBA4;}\\n\\t.st6{fill:#F2E863;}\\n\\t.st7{fill:#F45B69;}\\n\\t.st8{fill:#FFFFFF;}\\n\\t.st9{opacity:0.9;fill:#FFFFFF;}\\n\\t.st10{stroke:#000000;stroke-width:8;stroke-miterlimit:10;}\\n\\t.st11{fill:#E6E6F5;}\\n\\t.st12{fill:#DA70D6;}\\n\\t.st13{fill:#008080;}\\n\\t.st14{fill:#D2691E;}\\n\\t.st15{fill:#556B2F;}\\n\\t.st16{fill:#7CC44F;}\\n\\t.st17{fill:#2F4F4F;}\\n\\t.st18{fill:#FF6347;}\\n\\t.st19{fill:#4682B4;}\\n\\t.st20{fill:#D2A467;}\\n\\t.st21{fill:#7FB5C7;}\\n\\t.st22{fill:#B22222;}\\n\\t.st23{fill:#9370DB;}\\n\\t.st24{fill:#778899;}\\n\\t.st25{fill:#663399;}\\n\\t.st26{fill:#696969;}\\n\\t.st27{fill:#20212E;}\\n\\t.st28{fill:#9884B4;}\\n\\t.st29{fill:#DFB231;}\\n\\t.st30{fill:#875131;}\\n\\t.st31{fill:#DB8A34;}\\n\\t.st32{fill:#EB3465;}\\n\\t.st33{fill:#2B1752;}\\n\\t.st34{fill:#3C58AC;}\\n\\t.st35{fill:#BDB74C;}\\n\\t.st36{fill:#C7A4B3;}\\n\\t.st37{display:inline;}\\n\\t.st38{display:inline;fill:none;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st39{fill:#939598;}\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1\"\n  }, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st8\",\n    d: \"M27.8,37.4c-0.4,0-0.6,0.1-0.8,0.5c-0.5,0.9-1.1,1.3-1.7,1.3c-2.5,0-5.6-5.8-8.4-8.6 c6.1-1.4,9.9-7.7,9.9-13.3c0-3.6-1.5-6.8-5.1-8.1c-1.8-0.7-3.6-1.1-5.3-1.1c-8,0.1-13.5,7.3-13.5,12.1c0,1.7,0.6,3,2.1,3.7 c0.1,0.1,0.4,0.1,0.5,0.1c0.5,0,0.9-0.5,0.9-1.1c0-0.1,0-0.3-0.1-0.4c-0.4-0.8-0.6-1.8-0.6-2.7c0-4.6,4.7-9,9.1-9h0.3 c2.8,0.1,5.6,2.9,5.6,6.5c0,2.6-1.5,5.6-5.7,8.1c0.2-3.2,0.7-6.4,1.3-9.7c0.1-0.2,0.1-0.4,0.1-0.6c0-1.9-1.6-3.1-3.2-3.1 c-1.1,0-2.2,0.6-2.6,2.1c-1.3,4.4-1.8,9-1.8,13.2c0,9.5,2.5,17.3,4.5,17.6c0.3,0.1,0.5,0.1,0.7,0.1c1.8,0,2.8-1.2,2.8-2.7 c0-0.2-0.1-0.4-0.1-0.6c-0.8-4.8-1.3-6.9-1.3-7.4c0-0.1,0-0.1,0.1-0.1c0.2,0,1.6,2.9,4.6,5.6c1.2,1.1,2.7,1.7,4.2,1.7 c1.8,0,3.4-0.8,4.4-2.7c0.1-0.1,0.1-0.4,0.1-0.5C29,37.9,28.3,37.4,27.8,37.4z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st8\",\n    d: \"M34.4,20.8c-2.3,0-4.1,1.8-4.1,2.7c0,0.4,0.2,0.7,0.8,0.7c-2.1,2.1-3.2,5.6-3.2,8.9c0,4.6,2.1,8.8,6.7,8.8 h0.1c3.9-0.1,6.9-5.1,6.9-10.5c0-2.7-0.8-5.5-2.6-7.9C37.5,21.5,35.8,20.8,34.4,20.8z M37.3,35.6c-0.4,0.3-1.1,0.5-1.8,0.5 c-0.5,0-0.9-0.1-1.2-0.4c-0.4-0.4-0.5-1.2-0.5-2c0-0.4,0.1-0.8,0.1-1.1c0.3-2.7,2.3-4.3,2.9-6.8c0.1-0.2,0.1-0.4,0.1-0.6 c0-1.2-0.9-2.5-2.5-2.5c-0.7,0-1.5,0.2-2.4,0.8c0.5-0.9,1.5-1.3,2.5-1.3c0.3,0,0.6,0.1,0.8,0.1c2.7,0.7,4.3,4.4,4.3,7.7 C39.8,32.4,39,34.6,37.3,35.6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st8\",\n    d: \"M124.8,29.5c-0.3,0-0.5,0.1-0.6,0.4c-0.8,4.2-3.4,7.4-4.1,7.4h-0.1v-0.1c0-0.2-0.3-1.3-0.4-1.6 c-0.1-0.7-0.2-1.4-0.2-2.1c0-2.8,1.1-5.7,1.8-8.3c0.1-0.2,0.1-0.4,0.1-0.6c0-1.5-1.4-2.9-2.9-2.9c-1.1,0-2.2,0.6-3,2.5 c-0.7-1.8-3.4-3-5.3-3h-0.6c-4.9,0.6-7.4,8.4-7.4,12.6c0,0,0,0.1,0,0.1c-1.1,2.6-2.2,4.2-2.9,4.2c-0.6,0-1-1.1-1-3.5 c0-1.2,0.1-2.7,0.3-4.6c1.2-11.5,3.1-15.6,3.6-20.6V9.1c0-1.5-1.5-2.5-2.9-2.5h-0.1c-0.9,0-1.8,0.4-2.2,1.3c-2,4.6-2.6,10-3.4,15 h-0.1c-0.2,0-1.6-1.2-3.4-1.2c-0.3,0-0.6,0.1-1,0.1c-4.7,1.3-6.5,6.5-6.5,11.2c0,0.5,0,1,0.1,1.5c-1,1.8-2,2.9-2.5,2.9h-0.1v-0.1 c0-0.2-0.3-1.3-0.4-1.6c-0.1-0.7-0.2-1.4-0.2-2.1c0-2.8,1.1-5.7,1.8-8.3c0.1-0.2,0.1-0.4,0.1-0.6c0-1.5-1.4-2.9-2.9-2.9 c-1.1,0-2.2,0.6-3,2.5c-0.7-1.8-3.4-3-5.3-3h-0.6c-4.9,0.6-7.4,8.4-7.4,12.6c0,0,0,0.1,0,0.1c-1.1,2.6-2.2,4.2-2.9,4.2 c-0.6,0-1-1.1-1-3.5c0-1.2,0.1-2.7,0.3-4.6c1.2-11.5,3.1-15.6,3.6-20.6V9.1c0-1.5-1.5-2.5-2.9-2.5h-0.1c-0.9,0-1.8,0.4-2.2,1.3 c-2,4.6-2.6,10-3.4,15h-0.1c-0.2,0-1.6-1.2-3.4-1.2c-0.3,0-0.6,0.1-1,0.1c-4.7,1.3-6.5,6.5-6.5,11.2c0,4.5,1.7,8.6,4.1,8.6 c1.7,0,3.7-2,5.8-7.1c0.4,3.7,2.9,7.3,5.5,7.3c0.8,0,1.7-0.4,2.5-1.2c0.9-1,1.7-2.2,2.3-3.5c0.7,2.1,2.1,3.5,3.9,3.5 c2,0,4.4-1.8,6.6-6.1c0.1,2.8,1,5.1,3.4,6c0.6,0.2,1.2,0.3,1.7,0.3c2.1,0,3.5-1.6,4.6-3.6c0.7,2.6,2,4.4,3.6,4.4 c1.7,0,3.7-2,5.8-7.1c0.4,3.7,2.9,7.3,5.5,7.3c0.8,0,1.7-0.4,2.5-1.2c0.9-1,1.7-2.2,2.3-3.5c0.7,2.1,2.1,3.5,3.9,3.5 c2,0,4.4-1.8,6.6-6.1c0.1,2.8,1,5.1,3.4,6c0.6,0.2,1.2,0.3,1.7,0.3c4.5,0,5.9-7,6.9-10.4c0-0.1,0.1-0.1,0.1-0.2 C125.5,29.7,125,29.5,124.8,29.5z M48.2,37.8c-0.2,0-0.4-0.3-0.4-0.7c0-0.2,0.1-0.4,0.1-0.6V36c0-3.9,2.1-9.9,4.1-9.9 c0.4,0,0.7,0.1,1.1,0.6C52,32.9,49.2,37.8,48.2,37.8z M73.7,30.4c-1.1,2.4-3,5.5-4.3,5.5c-0.4,0-0.8-0.4-1-1.3 c-0.1-0.2-0.1-0.4-0.1-0.7c0-3.1,3-9.4,5.1-9.4c0.6,0,1.1,0.5,1.3,1.8C74.8,26.6,74.2,28,73.7,30.4z M88,37.8 c-0.2,0-0.4-0.3-0.4-0.7c0-0.2,0.1-0.4,0.1-0.6V36c0-3.9,2.1-9.9,4.1-9.9c0.4,0,0.7,0.1,1.1,0.6C91.9,32.9,89,37.8,88,37.8z  M113.6,30.4c-1.1,2.4-3,5.5-4.3,5.5c-0.4,0-0.8-0.4-1-1.3c-0.1-0.2-0.1-0.4-0.1-0.7c0-3.1,3-9.4,5.1-9.4c0.6,0,1.1,0.5,1.3,1.8 C114.6,26.6,114.1,28,113.6,30.4z\"\n  })))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"avatars\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRoundTitlePt);\nexport default __webpack_public_path__ + \"static/media/round-title-pt.2e3f9c1deb85d58d118aa6e3dfa7af23.svg\";\nexport { ForwardRef as ReactComponent };","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button } from 'antd';\n// Assets\nimport roundTitleEn from 'assets/images/round-title-en.svg';\nimport roundTitlePt from 'assets/images/round-title-pt.svg';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Components\nimport { Translate } from 'components/language';\nimport { TimedButton } from 'components/buttons';\n\ntype RoundAnnouncementProps = {\n  round: GameRound;\n  onPressButton?: GenericFunction;\n  buttonText?: string;\n  time: number;\n  players?: GamePlayers;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  children?: any;\n  unskippable?: boolean;\n  circleColor?: string;\n};\n\nexport function RoundAnnouncement({\n  round,\n  onPressButton,\n  buttonText,\n  time = 0,\n  className,\n  children,\n  unskippable = false,\n  circleColor,\n}: RoundAnnouncementProps) {\n  useTemporarilyHidePlayersBar();\n  const { translate } = useLanguage();\n\n  const circleStyle = circleColor ? { borderColor: circleColor } : {};\n\n  return (\n    <div className={clsx('round-announcement', className)}>\n      <div className=\"round-announcement__main\">\n        <div className=\"round-announcement__title\">\n          <img src={translate(roundTitlePt, roundTitleEn)} alt={translate('Rodada', 'Round')} />\n        </div>\n        <div className={clsx('round-announcement__round-wrapper', getAnimationClass('zoomIn'))}>\n          <div className=\"round-announcement__circle\" style={circleStyle} />\n          <div className=\"round-announcement__circle-2\" style={circleStyle} />\n          <div className=\"round-announcement__number\">{round?.current ?? round ?? 0}</div>\n        </div>\n\n        {children}\n\n        {Boolean(onPressButton) && !Boolean(time) && (\n          <Button type=\"primary\" onClick={onPressButton} className=\"round-announcement__go-button\">\n            {buttonText}\n          </Button>\n        )}\n\n        {Boolean(onPressButton) && Boolean(time) && (\n          <TimedButton\n            type=\"primary\"\n            onClick={onPressButton}\n            onExpire={onPressButton}\n            duration={time}\n            disabled={unskippable}\n          >\n            <Translate pt=\"Prosseguir\" en=\"Continue\" custom={buttonText} />\n          </TimedButton>\n        )}\n      </div>\n    </div>\n  );\n}\n","import { ReactNode } from 'react';\n\ntype ViewProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n};\n\nexport function View({ children }: ViewProps) {\n  return <>{children}</>;\n}\n","import { ReactNode } from 'react';\n\ntype ViewIfProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Displays children only if condition is truthy\n   */\n  condition?: boolean;\n};\n\n/**\n * Wrapper component that only renders the children if the condition is truthy\n */\nexport function ViewIf({ condition = false, children }: ViewIfProps) {\n  return condition ? <>{children}</> : <></>;\n}\n","import { ReactNode } from 'react';\n\ntype ViewOrProps = {\n  /**\n   * The content of the component to be toggled\n   */\n  children: [ReactNode, ReactNode];\n  /**\n   * The condition to be met to render the first children\n   */\n  condition?: boolean;\n};\n\n/**\n * View wrapper that renders one of two children depending on a condition\n */\nexport function ViewOr({ condition = false, children }: ViewOrProps) {\n  return condition ? <>{children[0]}</> : <>{children[1]}</>;\n}\n","type ViewSwitchProps = {\n  cases: boolean[];\n  /**\n   * The content of the component\n   */\n  children: any;\n};\n\nexport function ViewSwitch({ cases, children }: ViewSwitchProps) {\n  if (cases.length > 5) {\n    throw Error('ViewSwitch only supports up to 5 cases');\n  }\n\n  if (cases[0] && children[0]) {\n    return children[0];\n  }\n\n  if (cases[1] && children[1]) {\n    return children[1];\n  }\n\n  if (cases[2] && children[2]) {\n    return children[2];\n  }\n\n  if (cases[3] && children[3]) {\n    return children[3];\n  }\n\n  if (cases[4] && children[4]) {\n    return children[4];\n  }\n  console.warn('Rendering all children in the ViewSwitch');\n  return children;\n}\n","export const ACTIONS = {\n  SUBMIT_BAD_WORDS: 'SUBMIT_BAD_WORDS',\n  SUBMIT_CLUES: 'SUBMIT_CLUES',\n  SUBMIT_GUESS: 'SUBMIT_GUESS',\n  UPDATE_CLOVER_STATE: 'UPDATE_CLOVER_STATE',\n};\n\nexport const ROTATIONS = [0, 90, 180, 270];\n\nexport const WORST_TO_REMOVE = 6;\n\nexport const FIRST_ATTEMPT_SCORE = 3;\n\nexport const SECOND_ATTEMPT_SCORE = 1;\n\nexport const LEAVES_ORDER = ['A', 'B', 'C', 'D'];\n\nexport const DIRECTIONS_INDEXES = {\n  top: 0,\n  right: 1,\n  bottom: 2,\n  left: 3,\n};\n","import { DIRECTIONS_INDEXES, LEAVES_ORDER } from './constants';\n\nexport const onRotate = (value: number, direction: number = 1) => {\n  return value + 90 * direction;\n};\n\nexport const parseRotation = (value: number) => {\n  return value % 360;\n};\n\nexport const prepareClueSubmission = (\n  clues: string[],\n  clover: Clover,\n  rotations: NumberDictionary\n): CloverLeaf[] => {\n  return LEAVES_ORDER.map((position, index) => {\n    const leafId = clover.leaves[position as LeafPosition].leafId;\n    return {\n      leafId,\n      clue: clues[index],\n      rotation: rotations[leafId],\n    };\n  });\n};\n\nexport const cleanupGuesses = (guesses: YGuesses) => {\n  Object.values(guesses).forEach((guess) => {\n    if (guess?.rotation) {\n      guess.rotation = parseRotation(guess.rotation);\n    }\n  });\n\n  return guesses;\n};\n\nexport const getWord = (\n  clover: Clover,\n  leaves: Leaves,\n  rotations: NumberDictionary,\n  position: LeafPosition,\n  direction: keyof typeof DIRECTIONS_INDEXES\n): string => {\n  const leaf = leaves[clover.leaves[position].leafId];\n  const rotation = parseRotation(rotations[leaf.id]);\n  const words = [...leaf.cards, ...leaf.cards];\n  const initialIndexBasedOnRotation = [0, 270, 180, 90].indexOf(rotation);\n  return words[initialIndexBasedOnRotation + DIRECTIONS_INDEXES[direction]].text;\n};\n","import { sampleSize } from 'lodash';\n// Utils\nimport { getRandomItem, shuffle } from 'utils/helpers';\nimport { ROTATIONS, WORST_TO_REMOVE } from './constants';\nimport { getWord } from './helpers';\n\nexport const mockSelectCards = (cards: TextCard[]): CardId[] =>\n  shuffle(cards)\n    .slice(0, WORST_TO_REMOVE)\n    .map((card) => card.id);\n\nconst glue2Words = (word1: string, word2: string) => {\n  return `${word1.substring(0, Math.round(word1.length / 2))}${word2.substring(\n    Math.round(word2.length / 2)\n  )}`;\n};\n\nexport const mockClues = (clover: Clover, leaves: Leaves, rotations: NumberDictionary): string[] => {\n  return [\n    glue2Words(\n      getWord(clover, leaves, rotations, 'A', 'top'),\n      getWord(clover, leaves, rotations, 'B', 'top')\n    ),\n    glue2Words(\n      getWord(clover, leaves, rotations, 'B', 'right'),\n      getWord(clover, leaves, rotations, 'C', 'right')\n    ),\n    glue2Words(\n      getWord(clover, leaves, rotations, 'C', 'bottom'),\n      getWord(clover, leaves, rotations, 'D', 'bottom')\n    ),\n    glue2Words(\n      getWord(clover, leaves, rotations, 'D', 'left'),\n      getWord(clover, leaves, rotations, 'A', 'left')\n    ),\n  ];\n};\n\nconst mockedScore = [3, 1, 1, 1, 0, 0];\n\nexport const mockGuesses = (leaves: Leaves): YGuesses => {\n  const selected = sampleSize(Object.keys(leaves), 4);\n\n  return {\n    A: {\n      leafId: selected[0],\n      rotation: getRandomItem(ROTATIONS),\n      score: getRandomItem(mockedScore),\n      tries: 2,\n    },\n    B: {\n      leafId: selected[1],\n      rotation: getRandomItem(ROTATIONS),\n      score: getRandomItem(mockedScore),\n      tries: 2,\n    },\n    C: {\n      leafId: selected[2],\n      rotation: getRandomItem(ROTATIONS),\n      score: getRandomItem(mockedScore),\n      tries: 2,\n    },\n    D: {\n      leafId: selected[3],\n      rotation: getRandomItem(ROTATIONS),\n      score: getRandomItem(mockedScore),\n      tries: 2,\n    },\n  };\n};\n","import clsx from 'clsx';\nimport { orderBy } from 'lodash';\nimport { useMemo } from 'react';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useBooleanDictionary } from 'hooks/useBooleanDictionary';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { WORST_TO_REMOVE } from './utils/constants';\nimport { mockSelectCards } from './utils/mock';\n// Components\nimport { TransparentButton } from 'components/buttons';\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\n\ntype StepSelectWordsProps = {\n  hand: TextCard[];\n  onSubmitBadWords: GenericFunction;\n};\n\nexport function StepSelectWords({ hand, onSubmitBadWords }: StepSelectWordsProps) {\n  const { isLoading } = useLoading();\n  const alphabeticalHand = useMemo(() => orderBy(hand, 'text'), [hand]);\n\n  const [selectedCards, updateSelectedCard] = useBooleanDictionary({});\n\n  const onSubmit = () => {\n    onSubmitBadWords({ cardsIds: Object.keys(selectedCards) });\n  };\n  const onSubmitMock = () => {\n    onSubmitBadWords({ cardsIds: mockSelectCards(hand) });\n  };\n\n  useMock(() => {\n    onSubmitBadWords({ cardsIds: mockSelectCards(hand) });\n  });\n\n  const selectedCount = Object.keys(selectedCards).length;\n  const isComplete = selectedCount === WORST_TO_REMOVE;\n\n  return (\n    <Step fullWidth>\n      <Title size=\"medium\">\n        <Translate pt=\"As Palavras do Trevo\" en=\"The Clover Words\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={`Elimine ${WORST_TO_REMOVE} palavras que você NÃO quer no jogo`}\n          en={`Eliminate ${WORST_TO_REMOVE} words you DO NOT want in the game`}\n        />\n      </Instruction>\n\n      <ul className=\"y-words-list\">\n        {alphabeticalHand.map((card) => (\n          <li className={clsx('y-words-list__word')} key={card.id}>\n            <TransparentButton\n              onClick={() => updateSelectedCard(card.id)}\n              active={selectedCards[card.id]}\n              activeClass=\"y-words-list__word-selected\"\n            >\n              {card.text}\n            </TransparentButton>\n          </li>\n        ))}\n      </ul>\n\n      <Space className=\"space-container\" align=\"center\">\n        <Button type=\"primary\" size=\"large\" onClick={onSubmit} disabled={!isComplete || isLoading}>\n          <Translate\n            pt={<>Enviar Palavras ({selectedCount} de 6)</>}\n            en={<>Submit Words ({selectedCount} of 6)</>}\n          />\n        </Button>\n\n        <Button size=\"large\" onClick={onSubmitMock}>\n          <Translate pt=\"Selecione pra mim\" en=\"Select for me\" />\n        </Button>\n      </Space>\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitBadWordsAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\nimport { WORST_TO_REMOVE } from './utils/constants';\n// Icons\nimport { VerifyListIcon } from 'icons/VerifyListIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { RoundAnnouncement } from 'components/round';\nimport { Translate } from 'components/language';\nimport { StepSelectWords } from './StepSelectWords';\n\nfunction PhaseWordSelection({ players, state, info }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, goToNextStep, setStep } = useStep(0);\n\n  const onSubmitBadWords = useOnSubmitBadWordsAPIRequest(setStep);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.TREVO_DA_SORTE.WORD_SELECTION}>\n      <StepSwitcher step={step} conditions={[!user.isReady, !user.isReady, !user.isReady]} players={players}>\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state.round}\n          onPressButton={goToNextStep}\n          time={4}\n          circleColor={info?.appearance?.color}\n        />\n\n        {/* Step 1 */}\n        <PhaseAnnouncement\n          icon={<VerifyListIcon />}\n          title={<Translate pt=\"Seleção das Palavras\" en=\"Words Selection\" />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          type=\"block\"\n        >\n          <Instruction>\n            <Translate\n              pt={`Selecione ${WORST_TO_REMOVE} palavras que você NÃO quer no jogo`}\n              en={`Select ${WORST_TO_REMOVE} words you DO NOT want in the game`}\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 2 */}\n        <StepSelectWords hand={user.hand} onSubmitBadWords={onSubmitBadWords} />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseWordSelection;\n","import { TREVO_DA_SORTE_API } from 'services/adapters';\nimport { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { ACTIONS } from './constants';\n\nexport function useOnSubmitBadWordsAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: TREVO_DA_SORTE_API.submitAction,\n    actionName: 'submit-bad-words',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(1),\n    successMessage: translate('Palavras ruins enviadas com sucesso!', 'Bad words submitted successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar palavras',\n      'Oops, the application failed to submit words'\n    ),\n  });\n\n  return (payload: SubmitBadWordsPayload) => {\n    request({\n      action: ACTIONS.SUBMIT_BAD_WORDS,\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitCluesAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: TREVO_DA_SORTE_API.submitAction,\n    actionName: 'submit-clues',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(1),\n    successMessage: translate('Dicas enviadas com sucesso!', 'Clues submitted successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar dicas',\n      'Oops, the application failed to submit clues'\n    ),\n  });\n\n  return (payload: SubmitCluesPayload) => {\n    request({\n      action: ACTIONS.SUBMIT_CLUES,\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitGuessAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: TREVO_DA_SORTE_API.submitAction,\n    actionName: 'submit-guess',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate('Palpites enviadas com sucesso!', 'Guesses submitted successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar palpites',\n      'Oops, the application failed to submit guesses'\n    ),\n  });\n\n  return (payload: SubmitCloverGuessesPayload) => {\n    request({\n      action: ACTIONS.SUBMIT_GUESS,\n      ...payload,\n    });\n  };\n}\n","import { useEffect, useState } from 'react';\n// Ant Design Resources\nimport { notification } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Helpers\nimport { onRotate, parseRotation } from './helpers';\nimport { FIRST_ATTEMPT_SCORE, SECOND_ATTEMPT_SCORE } from './constants';\nimport { getRandomItem } from 'utils/helpers';\n\n/**\n * Keeps track of the clover state\n * @param mode\n * @param clover\n * @param leaves\n * @param onSubmit\n * @returns\n */\nexport function useCloverState(mode: CloverMode, clover: Clover, leaves: Leaves, onSubmit?: GenericFunction) {\n  const { translate } = useLanguage();\n  const [attempts, setAttempts] = useState(0);\n  const [clues, setClues] = useState<string[]>(['', '', '', '']);\n  const [rotation, setRotation] = useState<number>(0);\n  const [activeLeafId, setActiveLeafId] = useState<string | null>(null);\n  const [activeSlotId, setActiveSlotId] = useState<LeafPosition | null>(null);\n  const [guesses, setGuesses] = useState<YGuesses>({ A: null, B: null, C: null, D: null });\n  const [locks, setLocks] = useState<LeafLocks>({ A: false, B: false, C: false, D: false });\n  const [rotations, setRotations] = useState<NumberDictionary>(\n    Object.keys(leaves).reduce((acc: NumberDictionary, leafId) => {\n      acc[leafId] = 0;\n      return acc;\n    }, {})\n  );\n  const [usedLeavesIds, setUsedLeavesIds] = useState<string[]>([]);\n\n  // Keep used leaves ids up to date\n  useEffect(() => {\n    setUsedLeavesIds(Object.values(guesses).map((guess) => guess?.leafId ?? ''));\n  }, [guesses]);\n\n  // Keep guess rotation up to date\n  useEffect(() => {\n    setGuesses((prevState) => {\n      const newState = { ...prevState };\n      Object.keys(newState).forEach((k) => {\n        const key = k as LeafPosition;\n        const entry = newState[key];\n        if (entry) {\n          entry.rotation = rotations[entry.leafId];\n        }\n      });\n      return newState;\n    });\n  }, [rotations]);\n\n  /**\n   * Handles clover local rotation\n   * @param direction\n   */\n  const onRotateClover = (direction: number) => {\n    setRotation(onRotate(rotation, direction));\n  };\n\n  /**\n   * Updates the clue according to its index\n   * @param targetIndex\n   * @param value\n   */\n  const onClueChange = (targetIndex: LeafIndex, value: string) => {\n    setClues((prevState) => {\n      const copy = [...prevState];\n      copy[targetIndex] = value;\n      return copy;\n    });\n  };\n\n  /**\n   * Rotates a leaf\n   * @param e\n   * @param leadId\n   * @param quantity - how many times it should rotate\n   */\n  const onLeafRotate = (e: ButtonEvent, leadId: LeafId, quantity = 1) => {\n    e.stopPropagation();\n    const newRotation = onRotate(rotations[leadId], quantity);\n    setRotations((prevState) => ({ ...prevState, [leadId]: newRotation }));\n\n    setActiveLeafId(null);\n    setActiveSlotId(null);\n  };\n\n  /**\n   * Randomly chooses different rotations for the leaves\n   */\n  const onRandomizeLeafRotations = (e: any) => {\n    Object.values(clover.leaves).forEach((cloverLeaf) => {\n      onLeafRotate(e, cloverLeaf.leafId, getRandomItem([1, 2, 3, 4, 5]));\n    });\n  };\n\n  /**\n   * Removes the leaf of the clover\n   * @param targetSlotId\n   */\n  const onLeafRemove = (targetSlotId: LeafPosition) => {\n    setGuesses((prevState) => ({ ...prevState, [targetSlotId]: null }));\n  };\n\n  /**\n   * Activate a leaf to be connected to the clover\n   * @param targetLeafId\n   * @returns\n   */\n  const onActivateLeaf = (targetLeafId: LeafId) => {\n    if (activeLeafId === targetLeafId) {\n      return setActiveLeafId(null);\n    }\n\n    // Attach leaf to slot\n    if (activeSlotId) {\n      setGuesses((g) => {\n        const repeat = Object.keys(g).filter((k) => {\n          const key = k as LeafPosition;\n          const l = g[key];\n          return l?.leafId === targetLeafId;\n        });\n\n        const newGuesses = {\n          ...g,\n          [activeSlotId]: {\n            leafId: targetLeafId,\n            rotation: rotations[targetLeafId],\n          },\n        };\n\n        if (repeat.length > 0) {\n          const key = repeat[0] as LeafPosition;\n          newGuesses[key] = null;\n        }\n\n        return newGuesses;\n      });\n\n      setActiveSlotId(null);\n    } else {\n      setActiveLeafId(targetLeafId);\n    }\n  };\n\n  /**\n   * Activate a slot to receive a leaf on the clover\n   * @param targetSlotId\n   * @returns\n   */\n  const onActivateSlot = (targetSlotId: LeafPosition) => {\n    // If it's the same slot, deactivate it\n    if (activeSlotId === targetSlotId) {\n      return setActiveSlotId(null);\n    }\n\n    // If slot and slot, swap their leaves\n    if (activeSlotId && activeSlotId !== targetSlotId) {\n      setGuesses((g) => {\n        const activeContent = g[activeSlotId];\n        const targetContent = g[targetSlotId];\n\n        return {\n          ...g,\n          [activeSlotId]: targetContent,\n          [targetSlotId]: activeContent,\n        };\n      });\n\n      setActiveSlotId(null);\n      return;\n    }\n\n    // Attach slot to leaf\n    if (activeLeafId) {\n      setGuesses((g) => {\n        const repeat = Object.keys(g).filter((k) => {\n          const key = k as LeafPosition;\n          const l = g[key];\n          return l?.leafId === activeLeafId;\n        });\n\n        const newGuesses = {\n          ...g,\n          [targetSlotId]: {\n            leafId: activeLeafId,\n            rotation: rotations[activeLeafId],\n          },\n        };\n\n        if (repeat.length > 0) {\n          const key = repeat[0] as LeafPosition;\n          newGuesses[key] = null;\n        }\n\n        return newGuesses;\n      });\n\n      setActiveLeafId(null);\n    } else {\n      setActiveSlotId(targetSlotId);\n    }\n  };\n\n  /**\n   * First attempt: Validates clover, if correct submits, else undo wrong leaves\n   * Second attempt: Validates clover, but submits anyway\n   */\n  const submitClover = () => {\n    let correctCount = 0;\n\n    // Verify corrects guesses\n    const locksCopy = { ...locks };\n    const guessesCopy = { ...guesses };\n    Object.keys(guessesCopy).forEach((k) => {\n      const key = k as LeafPosition;\n      const entry = guessesCopy[key];\n\n      if (entry && (entry.score === undefined || entry.score === 0)) {\n        const correctLeaf = clover.leaves[key];\n        const isCorrect =\n          entry.leafId === correctLeaf.leafId && parseRotation(entry.rotation) === correctLeaf.rotation;\n\n        if (isCorrect) {\n          entry.score = attempts === 0 ? FIRST_ATTEMPT_SCORE : SECOND_ATTEMPT_SCORE;\n          correctCount += 1;\n          locksCopy[key] = true;\n        } else if (attempts === 0) {\n          guessesCopy[key] = null;\n        }\n\n        entry.tries = attempts + 1;\n        entry.score = entry.score ?? 0;\n      }\n    });\n\n    // If correct or second attempt, submit\n    if ((correctCount === 4 || attempts === 1) && onSubmit) {\n      onSubmit({\n        activeCloverId: clover.cloverId,\n        guesses: guessesCopy,\n      });\n      return;\n    }\n\n    notification.warning({\n      message: translate(`${4 - correctCount} folhas estão erradas`, `${4 - correctCount} leaves are wrong`),\n      description: translate(\n        'Tente novamente. Pode ter sido folha errada ou rotação errada',\n        'Try again. It may have been wrong leaf or just wrong rotation'\n      ),\n    });\n\n    setGuesses(guessesCopy);\n    setLocks(locksCopy);\n    setAttempts(1);\n  };\n\n  // BOOLEANS\n  const areCluesComplete = clues.every((clue) => clue.trim());\n  const isCloverComplete = Object.values(guesses).every((guess) => Boolean(guess));\n\n  return {\n    mode,\n    rotation,\n    onRotateClover,\n    clues,\n    onClueChange,\n    rotations,\n    onLeafRotate,\n    onRandomizeLeafRotations,\n    guesses,\n    onActivateLeaf,\n    activeLeafId,\n    onActivateSlot,\n    activeSlotId,\n    usedLeavesIds,\n    onLeafRemove,\n    areCluesComplete,\n    isCloverComplete,\n    submitClover,\n    locks,\n  };\n}\n","import { ReactNode } from 'react';\nimport clsx from 'clsx';\n// Ant Design Resources\nimport { Button } from 'antd';\nimport { DeleteOutlined, RedoOutlined } from '@ant-design/icons';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Icons\nimport { CloverIcon } from 'icons/CloverIcon';\nimport { LockIcon } from 'icons/LockIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\n\ntype LeafProps = {\n  leaf: Leaf;\n  rotation?: number;\n  onLeafGrab?: GenericFunction;\n  onLeafRemove?: GenericFunction;\n  onLeafRotate?: GenericFunction;\n  className?: string;\n  position?: LeafPosition;\n  isLocked?: boolean;\n  icon?: ReactNode;\n};\n\nexport function Leaf({\n  leaf,\n  rotation,\n  onLeafRotate,\n  onLeafRemove,\n  onLeafGrab,\n  className,\n  position,\n  isLocked,\n  icon,\n}: LeafProps) {\n  const grabbable = Boolean(onLeafGrab);\n  const removable = Boolean(onLeafRemove);\n  const rotatable = Boolean(onLeafRotate);\n  const isStatic = !removable && !rotatable;\n\n  return (\n    <div\n      key={`leaf-key-${leaf.id}`}\n      className={clsx('y-leaf', grabbable && `y-leaf--grabbable`, getAnimationClass('fadeIn'), className)}\n      style={{ transform: `rotate(${rotation}deg)` }}\n    >\n      {leaf.cards.map((card: TextCard, cIndex: number) =>\n        !isLocked && grabbable ? (\n          <div\n            role=\"button\"\n            key={card.id}\n            className={clsx('y-leaf__card', 'y-leaf__card-button', `y-leaf__card--${cIndex}`)}\n            onClick={() => onLeafGrab!(leaf.id)}\n          >\n            <div className=\"y-leaf__card-text\">{card.text}</div>\n          </div>\n        ) : (\n          <div key={card.id} className={clsx('y-leaf__card', `y-leaf__card--${cIndex}`)}>\n            <div className=\"y-leaf__card-text\">{card.text}</div>\n          </div>\n        )\n      )}\n      <div className=\"y-leaf__controls\" style={{ transform: `rotate(-${rotation}deg)` }}>\n        {!isLocked && rotatable && (\n          <Button\n            onClick={(e) => onLeafRotate!(e, leaf.id)}\n            className=\"y-leaf__center y-leaf__center--rotatable\"\n            shape=\"circle\"\n          >\n            <RedoOutlined />\n          </Button>\n        )}\n        {!isLocked && removable && (\n          <Button\n            onClick={() => onLeafRemove!(position)}\n            className=\"y-leaf__center y-leaf__center--rotatable\"\n            shape=\"circle\"\n          >\n            <DeleteOutlined />\n          </Button>\n        )}\n\n        {isLocked && (\n          <div className=\"y-leaf__center\">\n            <IconAvatar icon={<LockIcon />} />\n          </div>\n        )}\n\n        {isStatic && (\n          <div className=\"y-leaf__center\">\n            <IconAvatar icon={icon ?? <CloverIcon />} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Icons\nimport { GuessIcon } from 'icons/GuessIcon';\n// Components\nimport { Leaf } from './Leaf';\nimport { IconAvatar } from 'components/avatars';\n\ntype LeafSlotProps = {\n  leaf?: Leaf;\n  rotation?: number;\n  position?: LeafPosition;\n  onLeafGrab?: GenericFunction;\n  onLeafRotate?: GenericFunction;\n  onLeafRemove?: GenericFunction;\n  onActivateSlot?: GenericFunction;\n  activeLeafId?: LeafId | null;\n  activeSlotId?: LeafPosition | null;\n  className?: string;\n  isLocked?: boolean;\n  icon?: ReactNode;\n};\n\nexport function LeafSlot({\n  leaf,\n  rotation,\n  position,\n  onLeafGrab,\n  onLeafRotate,\n  onLeafRemove,\n  activeSlotId,\n  onActivateSlot,\n  isLocked,\n  icon,\n}: LeafSlotProps) {\n  if (!leaf && onActivateSlot) {\n    return (\n      <div className={clsx(`y-clover__leaf-${position}`, activeSlotId === position && 'active-class')}>\n        <button\n          key={`clue-key-${position}`}\n          className={clsx(\n            'y-leaf',\n            'y-leaf--empty',\n            'y-leaf--empty-clickable',\n            activeSlotId === position && 'y-leaf--empty-active'\n          )}\n          onClick={(_) => onActivateSlot(position)}\n        >\n          <IconAvatar icon={<GuessIcon />} size=\"large\" />\n        </button>\n      </div>\n    );\n  }\n\n  if (Boolean(onLeafGrab)) {\n    return (\n      <div className={clsx(`y-clover__leaf-${position}`, activeSlotId === position && 'active-class')}>\n        <LeafSlotContent\n          leaf={leaf}\n          position={position}\n          rotation={rotation}\n          onLeafGrab={() => onLeafGrab!(position)}\n          onLeafRotate={onLeafRotate}\n          onLeafRemove={onLeafRemove}\n          isLocked={isLocked}\n          icon={icon}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className={clsx(`y-clover__leaf-${position}`)}>\n      <LeafSlotContent\n        leaf={leaf}\n        position={position}\n        rotation={rotation}\n        onLeafRotate={onLeafRotate}\n        onLeafRemove={onLeafRemove}\n        isLocked={isLocked}\n        icon={icon}\n      />\n    </div>\n  );\n}\n\nfunction LeafSlotContent({\n  leaf,\n  rotation,\n  position,\n  onLeafGrab,\n  onLeafRotate,\n  onLeafRemove,\n  isLocked,\n  className = '',\n  icon,\n}: LeafSlotProps) {\n  return Boolean(leaf) ? (\n    <Leaf\n      key={leaf!.id}\n      leaf={leaf!}\n      onLeafGrab={onLeafGrab}\n      onLeafRotate={onLeafRotate}\n      onLeafRemove={onLeafRemove}\n      rotation={rotation}\n      className={className}\n      position={position}\n      isLocked={isLocked}\n      icon={icon}\n    />\n  ) : (\n    <div key={`clue-key-${position}`} className={clsx('y-leaf', 'y-leaf--empty')}>\n      <IconAvatar icon={<GuessIcon />} size=\"large\" />\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { useRef } from 'react';\nimport { useKeyPressEvent } from 'react-use';\n// Ant Design Resources\nimport { Button, Input, Tooltip } from 'antd';\nimport { RotateLeftOutlined, RotateRightOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { FIRST_ATTEMPT_SCORE, ROTATIONS, SECOND_ATTEMPT_SCORE } from '../utils/constants';\n// Icons\nimport { BoxXIcon } from 'icons/BoxXIcon';\nimport { BoxOneIcon } from 'icons/BoxOneIcon';\nimport { BoxCheckMarkIcon } from 'icons/BoxCheckMarkIcon';\n// Components\nimport { Translate } from 'components/language';\nimport { LeafSlot } from './LeafSlot';\n\ntype CloverProps = {\n  mode: CloverMode;\n  clover: Clover;\n  leaves: Leaves;\n  guesses?: any;\n  rotation: number;\n  onRotate: (direction: number) => void;\n  onClueChange?: (targetIndex: LeafIndex, value: string) => void;\n  rotations?: NumberDictionary;\n  onLeafRotate?: GenericFunction;\n  onLeafRemove?: GenericFunction;\n  activeLeafId?: LeafId | null;\n  activeSlotId?: LeafPosition | null;\n  onLeafGrab?: GenericFunction;\n  onActivateSlot?: GenericFunction;\n  locks?: LeafLocks;\n};\n\nexport function Clover({\n  mode,\n  clover,\n  leaves,\n  guesses,\n  rotation,\n  onRotate,\n  onClueChange,\n  rotations = {},\n  onLeafRotate,\n  onLeafRemove,\n  activeSlotId,\n  onLeafGrab,\n  onActivateSlot,\n  locks,\n}: CloverProps) {\n  const inputRefs = useRef<any[]>([]);\n  const { translate } = useLanguage();\n  const cloverLeaves = Object.entries(clover.leaves);\n\n  useKeyPressEvent('Tab', () => {\n    onRotate(-1);\n  });\n\n  return (\n    <div className=\"container center\">\n      <div className=\"y-clover\" style={{ transform: `rotate(${rotation}deg)` }}>\n        {/* ANSWERS */}\n        {cloverLeaves.map(([_, cloverLeaf], index) => {\n          const leafIndex = Number(index) as LeafIndex;\n\n          if (mode === 'write' && onClueChange) {\n            return (\n              <div\n                key={`clue-key-${leafIndex}`}\n                className={clsx(`y-clover__clue-${leafIndex}`, 'y-clover-clue')}\n              >\n                <Input\n                  ref={(el) => (inputRefs.current[index] = el)}\n                  onChange={onClueChange ? (e) => onClueChange(leafIndex, e.target.value) : undefined}\n                  className={`y-clover-rotation--${ROTATIONS[index]} y-clover-input`}\n                  placeholder={translate('Escreva aqui', 'Write here')}\n                  disabled={!Boolean(onClueChange)}\n                  value={mode === 'write' ? undefined : cloverLeaf.clue}\n                  autoFocus={index === 0}\n                />\n              </div>\n            );\n          }\n\n          return (\n            <div\n              key={`clue-key-${leafIndex}`}\n              className={clsx(`y-clover__clue-${leafIndex}`, 'y-clover-clue')}\n            >\n              <span className={clsx(`y-clover-rotation--${ROTATIONS[index]}`, 'y-clover-clue-readonly')}>\n                {cloverLeaf.clue}\n              </span>\n            </div>\n          );\n        })}\n\n        {/* LEAVES */}\n        {cloverLeaves.map(([cloverLeafPosition, cloverLeaf]) => {\n          const {\n            leaf,\n            rotation: leafRotation,\n            icon,\n          } = getLeaf(mode, leaves, cloverLeafPosition as LeafPosition, cloverLeaf, guesses, rotations);\n\n          return (\n            <LeafSlot\n              key={`slot-${cloverLeafPosition}`}\n              leaf={leaf}\n              rotation={leafRotation}\n              position={cloverLeafPosition as LeafPosition}\n              onLeafGrab={onLeafGrab}\n              onLeafRotate={onLeafRotate}\n              onLeafRemove={onLeafRemove}\n              activeSlotId={activeSlotId}\n              onActivateSlot={onActivateSlot}\n              isLocked={locks?.[cloverLeafPosition as LeafPosition] ?? false}\n              icon={icon}\n            />\n          );\n        })}\n      </div>\n      <div className=\"controls space-container center\">\n        <Button icon={<RotateLeftOutlined />} onClick={() => onRotate(-1)} />\n        <Button icon={<RotateRightOutlined />} onClick={() => onRotate(1)} />\n      </div>\n    </div>\n  );\n}\n\nconst getLeaf = (\n  mode: CloverMode,\n  leaves: Leaves,\n  position: LeafPosition,\n  cloverLeaf: CloverLeaf,\n  guesses: YGuesses,\n  rotations: NumberDictionary\n) => {\n  let leafId = '';\n  switch (mode) {\n    case 'guess':\n      leafId = guesses?.[position]?.leafId ?? '';\n      return {\n        leaf: leaves?.[leafId],\n        rotation: rotations[leafId] ?? 0,\n        icon: undefined,\n      };\n    case 'result':\n      leafId = guesses?.[position]?.leafId ?? '';\n      const guess = guesses?.[position];\n      return {\n        leaf: leaves?.[leafId],\n        rotation: guess?.rotation ?? 0,\n        icon: getIcon(guess?.score ?? 0),\n      };\n    case 'write':\n      leafId = cloverLeaf.leafId;\n      return {\n        leaf: leaves?.[leafId],\n        rotation: rotations[leafId] ?? 0,\n        icon: undefined,\n      };\n    case 'view':\n    default:\n      leafId = cloverLeaf.leafId;\n      return {\n        leaf: leaves?.[leafId],\n        rotation: cloverLeaf.rotation,\n        icon: undefined,\n      };\n  }\n};\n\n/**\n * Get the result icon based on score\n * @param score\n * @returns\n */\nconst getIcon = (score: number) => {\n  switch (score) {\n    case SECOND_ATTEMPT_SCORE:\n      return (\n        <Tooltip title={<Translate pt=\"Acertou na segunda tentativa\" en=\"Got it in their second attempt\" />}>\n          <BoxOneIcon />\n        </Tooltip>\n      );\n    case FIRST_ATTEMPT_SCORE:\n      return (\n        <Tooltip title={<Translate pt=\"Acertou na primeira tentativa\" en=\"Got it in their first attempt\" />}>\n          <BoxCheckMarkIcon />\n        </Tooltip>\n      );\n    case 0:\n    default:\n      return (\n        <Tooltip title={<Translate pt=\"Burro pra carai e não acertou\" en=\"Did not get it right\" />}>\n          <BoxXIcon />;\n        </Tooltip>\n      );\n  }\n};\n","// Utils\nimport { FIRST_ATTEMPT_SCORE, SECOND_ATTEMPT_SCORE } from '../utils/constants';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n\nexport function WritingRules() {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Escreva uma dica (palavra única) que conecte cada um dos pares de palavras na parte de fora do\n            trevo.\n            <br />\n            Você pode girar o trevo para ficar mais fácil de escrever usando os controles na parte inferior.\n            <br />\n            Se o par de palavras estiver muito difícil, você pode girar as cartas brancas, mas cuidado para\n            não avacalhar dicas que você já escreveu.\n          </>\n        }\n        en={\n          <>\n            Write a single-word clue that connects each pair of words in the outer side of the clover.\n            <br />\n            You may rotate the clover when writing using the buttons in the bottom part of the clover\n            container.\n            <br />\n            If the pair of words is too difficult, you may rotate the cards but pay attention on how it will\n            change the other pairs when doing so.\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function GuessingRules() {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Posicione as cartas no trevo de acordo com as dicas.\n            <br />\n            Somente 4 das cartas serão usadas e elas podem estar em qualquer orientação.\n            <br />\n            Clique nas palavras de uma das cartas para pegá-la e então no quadrante do trevo para\n            posicioná-la.\n            <br />\n            Você tem duas chances para adivinhar. Quando apertar Enviar pela primeira vez, o jogo manterá\n            todas as cartas corretas (te dando {FIRST_ATTEMPT_SCORE} pontos) e então você tera uma segunda\n            chance de acertar (ganhando {SECOND_ATTEMPT_SCORE} ponto por cada)\n          </>\n        }\n        en={\n          <>\n            Place the cards below inside the clover according to giving clues.\n            <br />\n            Only 4 of the cards will be used and they can be in any orientation.\n            <br />\n            Click on the card words to grab it then on the clover quadrant you want to place it.\n            <br />\n            You have two chances to guess. When you press the first time the game will validate and keep your\n            correct answers (granting you {FIRST_ATTEMPT_SCORE} points) and then you have a second chance to\n            guess the remainder for {SECOND_ATTEMPT_SCORE} point each.\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n","// Utils\nimport { parseRotation } from '../utils/helpers';\n// Components\nimport { Translate } from 'components/language';\nimport { TextHighlight } from 'components/text';\n\ntype ConfirmCluesProps = {\n  clover: Clover;\n  leaves: Leaves;\n  clues: string[];\n  rotations: NumberDictionary;\n};\n\nexport function ConfirmClues({ clover, leaves, clues, rotations }: ConfirmCluesProps) {\n  const words = getWords(clover, leaves, rotations);\n\n  return (\n    <>\n      <Translate\n        pt=\"Tem certeza que quer enviar as seguintes dicas?\"\n        en=\"Are you sure you want to submit the following clues?\"\n      />\n\n      <ul>\n        {words.map((pair, index) => (\n          <li key={`${pair[0]}-${pair[1]}`}>\n            <TextHighlight>{pair[0]}</TextHighlight>+ <TextHighlight>{pair[1]}</TextHighlight> ={' '}\n            <TextHighlight>{clues[index]}</TextHighlight>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nconst getWords = (clover: Clover, leaves: Leaves, rotations: NumberDictionary) => {\n  const leafA = leaves[clover.leaves.A.leafId];\n  const leafARotation = parseRotation(rotations[leafA.id]);\n  const leafB = leaves[clover.leaves.B.leafId];\n  const leafBRotation = parseRotation(rotations[leafB.id]);\n  const leafC = leaves[clover.leaves.C.leafId];\n  const leafCRotation = parseRotation(rotations[leafC.id]);\n  const leafD = leaves[clover.leaves.D.leafId];\n  const leafDRotation = parseRotation(rotations[leafD.id]);\n\n  const indexes: Record<number, number> = {\n    0: 0,\n    90: 3,\n    180: 2,\n    270: 1,\n  };\n\n  const getIndex = (rotationData: number, addition = 0) => {\n    return (indexes[rotationData % 360] + addition) % 4;\n  };\n\n  return [\n    [leafA.cards[getIndex(leafARotation)].text, leafB.cards[getIndex(leafBRotation)].text],\n    [leafB.cards[getIndex(leafBRotation, 1)].text, leafC.cards[getIndex(leafCRotation, 1)].text],\n    [leafC.cards[getIndex(leafCRotation, 2)].text, leafD.cards[getIndex(leafDRotation, 2)].text],\n    [leafD.cards[getIndex(leafDRotation, 3)].text, leafA.cards[getIndex(leafARotation, 3)].text],\n  ];\n};\n","// Ant Design Resources\nimport { Button, Popconfirm, Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockClues } from './utils/mock';\nimport { prepareClueSubmission } from './utils/helpers';\nimport { useCloverState } from './utils/useCloverState';\n// Components\nimport { DebugOnly } from 'components/debug';\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\nimport { Clover } from './components/Clover';\nimport { WritingRules } from './components/RulesBlobs';\nimport { PopoverRule } from 'components/rules';\nimport { ConfirmClues } from './components/ConfirmClues';\n\ntype StepWriteCluesProps = {\n  clover: Clover;\n  leaves: Leaves;\n  onSubmitClues: GenericFunction;\n};\n\nexport function StepWriteClues({ clover, leaves, onSubmitClues }: StepWriteCluesProps) {\n  const { isLoading } = useLoading();\n  const {\n    mode,\n    rotation,\n    onRotateClover,\n    clues,\n    onClueChange,\n    rotations,\n    onLeafRotate,\n    onRandomizeLeafRotations,\n    areCluesComplete,\n  } = useCloverState('write', clover, leaves);\n\n  const onSubmit = () => {\n    onSubmitClues({ clues: prepareClueSubmission(clues, clover, rotations) });\n  };\n\n  const onSubmitMock = () => {\n    onSubmitClues({ clues: prepareClueSubmission(mockClues(clover, leaves, rotations), clover, rotations) });\n  };\n\n  useMock(() => {\n    onSubmitClues({ clues: prepareClueSubmission(mockClues(clover, leaves, rotations), clover, rotations) });\n  });\n\n  return (\n    <Step fullWidth>\n      <Title size=\"medium\">\n        <Translate pt=\"Escreva as dicas\" en=\"Write clues\" />\n      </Title>\n\n      <WritingRules />\n\n      <PopoverRule content={<WritingRules />} />\n\n      <Space className=\"space-container\" align=\"center\">\n        <Button type=\"default\" size=\"large\" onClick={onRandomizeLeafRotations} disabled={isLoading}>\n          <Translate pt=\"Chacoalhar cartas\" en=\"Randomize rotations\" />\n        </Button>\n      </Space>\n\n      <Clover\n        mode={mode}\n        clover={clover}\n        leaves={leaves}\n        rotation={rotation}\n        onRotate={onRotateClover}\n        onClueChange={onClueChange}\n        rotations={rotations}\n        onLeafRotate={onLeafRotate}\n      />\n\n      <Space className=\"space-container\" align=\"center\">\n        <Popconfirm\n          title={<ConfirmClues clover={clover} leaves={leaves} clues={clues} rotations={rotations} />}\n          disabled={!areCluesComplete || isLoading}\n          onConfirm={onSubmit}\n        >\n          <Button\n            type=\"primary\"\n            size=\"large\"\n            disabled={!areCluesComplete || isLoading}\n            onClick={() => onRotateClover((rotation / 90) * -1)}\n          >\n            <Translate pt=\"Enviar dicas\" en=\"Submit clues\" />\n          </Button>\n        </Popconfirm>\n\n        <DebugOnly devOnly>\n          <Button size=\"large\" onClick={onSubmitMock}>\n            Mock clues\n          </Button>\n        </DebugOnly>\n      </Space>\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useOnSubmitCluesAPIRequest } from './utils/api-requests';\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { WritingIcon } from 'icons/WritingIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\nimport { StepWriteClues } from './StepWriteClues';\n\nfunction PhaseCloverWriting({ players, state, info }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, goToNextStep, setStep } = useStep(0);\n\n  const onSubmitClues = useOnSubmitCluesAPIRequest(setStep);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.TREVO_DA_SORTE.CLOVER_WRITING}>\n      <StepSwitcher step={step} conditions={[!user.isReady, !user.isReady, !user.isReady]} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<WritingIcon />}\n          title={<Translate pt=\"Escreva as dicas\" en=\"Write the clues\" />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          type=\"block\"\n        >\n          <Instruction>\n            <Translate pt=\"Para cada par, escreva uma dica\" en=\"For each pair, write a clue\" />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepWriteClues clover={user.clover} leaves={user.leaves} onSubmitClues={onSubmitClues} />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseCloverWriting;\n","import clsx from 'clsx';\nimport { useMemo } from 'react';\nimport { orderBy } from 'lodash';\n// And Design Resources\nimport { Space } from 'antd';\n// Components\nimport { Instruction } from 'components/text';\nimport { Leaf } from './Leaf';\n\ntype DetachedLeavesProps = {\n  leaves: Leaves;\n  usedLeavesIds: LeafId[];\n  rotations: NumberDictionary;\n  onLeafRotate: LeafEvent;\n  activeLeafId?: LeafId | null;\n  onLeafGrab?: GenericFunction;\n};\n\nexport function DetachedLeaves({\n  leaves,\n  onLeafRotate,\n  rotations,\n  activeLeafId,\n  onLeafGrab,\n  usedLeavesIds,\n}: DetachedLeavesProps) {\n  const availableLeaves = useMemo(\n    () => orderBy(Object.values(leaves), 'id').filter((leaf) => !usedLeavesIds.includes(leaf.id)),\n    [leaves, usedLeavesIds]\n  );\n\n  return (\n    <Instruction contained>\n      <Space className=\"space-container\" align=\"center\" wrap>\n        {availableLeaves.map((leaf) => {\n          return (\n            <div className=\"y-leaf-loose\" key={leaf.id}>\n              <Leaf\n                key={leaf!.id}\n                leaf={leaf!}\n                onLeafGrab={onLeafGrab}\n                onLeafRotate={onLeafRotate}\n                rotation={rotations?.[leaf.id]}\n                className={clsx(activeLeafId === leaf.id && 'y-leaf--active')}\n              />\n            </div>\n          );\n        })}\n      </Space>\n    </Instruction>\n  );\n}\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\n// Utils\nimport { mockGuesses } from './utils/mock';\nimport { useCloverState } from './utils/useCloverState';\n// Components\nimport { AvatarName } from 'components/avatars';\nimport { DevButton } from 'components/debug';\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\nimport { Clover } from './components/Clover';\nimport { DetachedLeaves } from './components/DetachedLeaves';\nimport { GuessingRules } from './components/RulesBlobs';\nimport { PopoverRule } from 'components/rules';\n\ntype StepGuessCloverProps = {\n  clover: Clover;\n  leaves: Leaves;\n  onSubmitGuess: GenericFunction;\n  activeCloverPlayer: GamePlayer;\n  isUserTheCloverPlayer: boolean;\n};\n\nexport function StepGuessClover({ clover, leaves, onSubmitGuess, activeCloverPlayer }: StepGuessCloverProps) {\n  const { isLoading } = useLoading();\n  const {\n    rotation,\n    rotations,\n    onLeafRotate,\n    onRotateClover,\n    guesses,\n    onActivateLeaf,\n    activeLeafId,\n    onActivateSlot,\n    activeSlotId,\n    usedLeavesIds,\n    onLeafRemove,\n    isCloverComplete,\n    submitClover,\n    locks,\n  } = useCloverState('guess', clover, leaves, onSubmitGuess);\n\n  const onSubmitMock = () => {\n    onSubmitGuess({\n      guesses: mockGuesses(leaves),\n      activeCloverId: clover.cloverId,\n    });\n  };\n\n  return (\n    <Step fullWidth>\n      <Title size=\"medium\">\n        <Translate\n          pt={\n            <>\n              Adivinhação do trevo do(a) <AvatarName player={activeCloverPlayer} />\n            </>\n          }\n          en={\n            <>\n              Guessing <AvatarName player={activeCloverPlayer} />\n              's clover\n            </>\n          }\n        />\n      </Title>\n\n      <GuessingRules />\n\n      <PopoverRule content={<GuessingRules />} />\n\n      <Clover\n        mode=\"guess\"\n        clover={clover}\n        leaves={leaves}\n        onRotate={onRotateClover}\n        rotation={rotation}\n        onLeafRotate={onLeafRotate}\n        rotations={rotations}\n        guesses={guesses}\n        onLeafGrab={onActivateLeaf}\n        activeLeafId={activeLeafId}\n        onActivateSlot={onActivateSlot}\n        activeSlotId={activeSlotId}\n        onLeafRemove={onLeafRemove}\n        locks={locks}\n      />\n\n      <DetachedLeaves\n        leaves={leaves}\n        rotations={rotations}\n        onLeafRotate={onLeafRotate}\n        onLeafGrab={onActivateLeaf}\n        activeLeafId={activeLeafId}\n        usedLeavesIds={usedLeavesIds}\n      />\n\n      <Space className=\"space-container\" align=\"center\">\n        <Button type=\"primary\" size=\"large\" onClick={submitClover} disabled={!isCloverComplete || isLoading}>\n          <Translate pt=\"Enviar adivinhação\" en=\"Submit guess\" />\n        </Button>\n\n        <DevButton size=\"large\" onClick={onSubmitMock}>\n          Mock guesses\n        </DevButton>\n      </Space>\n    </Step>\n  );\n}\n","// Hooks\nimport { useCloverState } from './utils/useCloverState';\n// Components\nimport { AvatarName } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Clover } from './components/Clover';\nimport { DetachedLeaves } from './components/DetachedLeaves';\n\ntype StepWaitCloverProps = {\n  activeCloverPlayer: GamePlayer;\n  clover: Clover;\n  leaves: Leaves;\n};\n\nexport function StepWaitClover({ activeCloverPlayer, clover, leaves }: StepWaitCloverProps) {\n  const { mode, rotation, rotations, onLeafRotate, onRotateClover, usedLeavesIds } = useCloverState(\n    'view',\n    clover,\n    leaves\n  );\n\n  return (\n    <Step fullWidth>\n      <Title size=\"medium\">\n        <Translate\n          pt={\n            <>\n              Adivinhação do trevo do(a) <AvatarName player={activeCloverPlayer} />\n            </>\n          }\n          en={\n            <>\n              Guessing <AvatarName player={activeCloverPlayer} />\n              's clover\n            </>\n          }\n        />\n      </Title>\n\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Aguarde enquanto os outros jogadores tentam adivinhar.\n              <br />\n              Enquanto isso, veja as cartas que eles tem disponíveis.\n            </>\n          }\n          en={\n            <>\n              Wait while other players are trying to guess your clover.\n              <br /> In the meantime, check it out the cards they have available.\n            </>\n          }\n        />\n      </Instruction>\n\n      <Clover mode={mode} clover={clover} leaves={leaves} onRotate={onRotateClover} rotation={rotation} />\n\n      <DetachedLeaves\n        leaves={leaves}\n        rotations={rotations}\n        onLeafRotate={onLeafRotate}\n        usedLeavesIds={usedLeavesIds}\n      />\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\nimport { useOnSubmitGuessAPIRequest } from './utils/api-requests';\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { CloverIcon } from 'icons/CloverIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\nimport { StepGuessClover } from './StepGuessClover';\nimport { ViewOr } from 'components/views';\nimport { TurnOrder } from 'components/players';\nimport { StepWaitClover } from './StepWaitClover';\n\nfunction PhaseCloverGuessing({ players, state, info }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, goToNextStep, setStep } = useStep(0);\n  const [activeCloverPlayer, isUserTheCloverPlayer] = useWhichPlayerIsThe('activeCloverId', state, players);\n\n  const onSubmitGuess = useOnSubmitGuessAPIRequest(setStep);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.TREVO_DA_SORTE.CLOVER_GUESSING}>\n      <StepSwitcher step={step} conditions={[!user.isReady, !user.isReady, !user.isReady]} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<CloverIcon />}\n          title={<Translate pt=\"Hora de Adivinhar\" en=\"Time to guess\" />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          type=\"block\"\n        >\n          <Instruction>\n            <Translate\n              pt=\"De um em um, vamos tentar adivinhar a posição das folhas em cada trevo\"\n              en=\"One at a time, let's try to guess the position of each leaf on each clover\"\n            />\n          </Instruction>\n\n          <TurnOrder players={players} activePlayerId={state.activeCloverId} order={state.gameOrder} />\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <ViewOr condition={isUserTheCloverPlayer}>\n          <StepWaitClover\n            activeCloverPlayer={activeCloverPlayer}\n            clover={state.clover}\n            leaves={state.leaves}\n          />\n\n          <StepGuessClover\n            clover={state.clover}\n            leaves={state.leaves}\n            onSubmitGuess={onSubmitGuess}\n            activeCloverPlayer={activeCloverPlayer}\n            isUserTheCloverPlayer={isUserTheCloverPlayer}\n          />\n        </ViewOr>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseCloverGuessing;\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Tabs } from 'antd';\n// Utils\nimport { sortPlayers } from 'utils/helpers';\n// Components\nimport { AvatarName } from 'components/avatars';\nimport { Instruction } from 'components/text';\nimport { Clover } from './Clover';\n\ntype PlayersGuessesProps = {\n  players: GamePlayers;\n  clover: Clover;\n  leaves: Leaves;\n  rotation: number;\n  onRotate: GenericFunction;\n  activeCloverId: PlayerId;\n};\n\nexport function PlayersGuesses({\n  players,\n  clover,\n  leaves,\n  rotation,\n  onRotate,\n  activeCloverId,\n}: PlayersGuessesProps) {\n  const sortedPlayers = sortPlayers(players).filter((player) => player.id !== activeCloverId);\n  const [activePlayerTab, setActivePlayerTab] = useState(`${sortedPlayers[0].id}::tab`);\n  const items = sortedPlayers.map((player) => {\n    return {\n      key: `${player.id}::tab`,\n      label: <AvatarName player={player} />,\n      children: (\n        <Clover\n          mode=\"result\"\n          clover={clover}\n          leaves={leaves}\n          rotation={rotation}\n          onRotate={onRotate}\n          guesses={player.guesses[activeCloverId]?.leaves ?? {}}\n        />\n      ),\n    };\n  });\n\n  return (\n    <Instruction contained>\n      <Tabs activeKey={activePlayerTab} onChange={(key) => setActivePlayerTab(key)} items={items} />\n    </Instruction>\n  );\n}\n","// Hooks\nimport { useCloverState } from './utils/useCloverState';\n// Components\nimport { VIPNextPhaseButton } from 'components/vip';\nimport { Translate } from 'components/language';\nimport { StepRankingWrapper } from 'components/ranking';\nimport { Clover } from './components/Clover';\nimport { PlayersGuesses } from './components/PlayersGuesses';\n\ntype StepRankingProps = {\n  players: GamePlayers;\n  ranking: GameRanking;\n  round: GameRound;\n  clover: Clover;\n  leaves: Leaves;\n  activeCloverId: PlayerId;\n};\n\nexport function StepRanking({ players, ranking, round, clover, leaves, activeCloverId }: StepRankingProps) {\n  const { mode, rotation, onRotateClover } = useCloverState('view', clover, leaves);\n\n  return (\n    <StepRankingWrapper\n      players={players}\n      ranking={ranking}\n      gainedPointsDescriptions={[\n        <Translate pt=\"Pontos por encontrar só um jogador\" en=\"Points for matching only 1 player\" />,\n        <Translate pt=\"Pontos por encontrar mais de um jogador\" en=\"Points for matching with more players\" />,\n        <Translate\n          pt=\"Pontos perdidos por não ter dado match e estar em um pesadelo\"\n          en=\"Points lost for not matching any player while in a nightmare\"\n        />,\n      ]}\n    >\n      <Clover mode={mode} clover={clover} leaves={leaves} onRotate={onRotateClover} rotation={rotation} />\n\n      <PlayersGuesses\n        players={players}\n        clover={clover}\n        leaves={leaves}\n        onRotate={onRotateClover}\n        rotation={rotation}\n        activeCloverId={activeCloverId}\n      />\n\n      <VIPNextPhaseButton round={round}>\n        <Translate pt=\"Próximo Trevo ou Game Over\" en=\"Next Clover or Game Over\" />\n      </VIPNextPhaseButton>\n    </StepRankingWrapper>\n  );\n}\n","// State & Hooks\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { RankIcon } from 'icons/RankIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\nimport { StepRanking } from './StepRanking';\n\nfunction PhaseResults({ players, state, info }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, goToNextStep } = useStep(0);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.TREVO_DA_SORTE.RESULTS}>\n      <StepSwitcher step={step} conditions={[!user.isReady, !user.isReady]} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<RankIcon />}\n          title={<Translate pt=\"Resultado\" en=\"Results\" />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          type=\"block\"\n        >\n          <Instruction>\n            <Translate pt=\"Quantos pontos você ganhou?\" en=\"How many points did you get?\" />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepRanking\n          players={players}\n          round={state.round}\n          clover={state.clover}\n          leaves={state.leaves}\n          ranking={state.ranking}\n          activeCloverId={state.activeCloverId}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseResults;\n","// Icons\nimport { TrophyIcon } from 'icons/TrophyIcon';\n// Components\nimport { GameOverWrapper } from 'components/game-over';\n\nfunction PhaseGameOver({ state, info, players }: PhaseProps) {\n  return <GameOverWrapper info={info} state={state} players={players} announcementIcon={<TrophyIcon />} />;\n}\n\nexport default PhaseGameOver;\n","import { ConfigProvider } from 'antd';\n// Constants\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport PhaseWordSelection from './PhaseWordSelection';\nimport PhaseCloverWriting from './PhaseCloverWriting';\nimport PhaseCloverGuessing from './PhaseCloverGuessing';\nimport PhaseResults from './PhaseResults';\nimport PhaseGameOver from './PhaseGameOver';\n// Fonts\nimport 'assets/fonts/architects-daughter.scss';\n// Sass\nimport './trevo-da-sorte.scss';\n\nfunction getActiveComponent(phase: string) {\n  switch (phase) {\n    case PHASES.DEFAULT.LOBBY:\n      return PhaseLobby;\n    case PHASES.DEFAULT.RULES:\n      return PhaseRules;\n    case PHASES.DEFAULT.SETUP:\n      return PhaseSetup;\n    case PHASES.TREVO_DA_SORTE.WORD_SELECTION:\n      return PhaseWordSelection;\n    case PHASES.TREVO_DA_SORTE.CLOVER_WRITING:\n      return PhaseCloverWriting;\n    case PHASES.TREVO_DA_SORTE.CLOVER_GUESSING:\n      return PhaseCloverGuessing;\n    case PHASES.TREVO_DA_SORTE.RESULTS:\n      return PhaseResults;\n    case PHASES.DEFAULT.GAME_OVER:\n      return PhaseGameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionTrevoDaSorte() {\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorPrimary: THEME_COLORS.GRASS,\n          colorLink: THEME_COLORS.GRASS,\n        },\n      }}\n    >\n      <Session gameCollection={GAME_COLLECTION.TREVO_DA_SORTE} getActiveComponent={getActiveComponent} />\n    </ConfigProvider>\n  );\n}\n\nexport default SessionTrevoDaSorte;\n","import { useState } from 'react';\n\nexport function useBooleanDictionary(\n  /**\n   * The initial state, usually an empty object\n   */\n  initialState: BooleanDictionary,\n  // Confirm if entry can be added to the dictionary\n  validation?: BooleanFunction\n): [BooleanDictionary, GenericFunction] {\n  const [dict, setDict] = useState(initialState);\n\n  const updateDict = (key: string) => {\n    const isValid = !validation || validation(dict);\n    if (!dict[key] && isValid) {\n      setDict((s) => ({\n        ...s,\n        [key]: true,\n      }));\n    } else {\n      const dictCopy = { ...dict };\n      delete dictCopy[key];\n      setDict(dictCopy);\n    }\n  };\n\n  return [dict, updateDict];\n}\n","import { useGlobalState } from './useGlobalState';\n\n/**\n * Get width and height of given element or from the screen\n * @param [elementId]\n * @returns representing width and height of the element\n */\nexport function useDimensions(elementId?: string): [number, number] {\n  const [[sWidth, sHeight]] = useGlobalState('screenSize');\n\n  if (!elementId) {\n    return [sWidth, sHeight];\n  }\n\n  const element = document.getElementById(elementId);\n\n  if (!element) {\n    // console.warn(`Element of id #${elementId} is not present in the dom`);\n  }\n\n  return [element?.offsetWidth ?? 32, element?.offsetHeight ?? 32];\n}\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\n/**\n * Gets player that is assigned to a property in the state\n * @param propertyName\n * @param state\n * @param players\n * @returns a player instance, a boolean if the player is assigned to given property\n */\nexport function useWhichPlayerIsThe(\n  propertyName = 'activePlayer',\n  state: PlainObject = {},\n  players: GamePlayers = {}\n): [GamePlayer, boolean] {\n  const [userId] = useGlobalState('userId');\n  const [activePlayer, setActivePlayer] = useState<GamePlayer>({});\n  const [isUser, setIsUser] = useState(false);\n\n  // Determine if user is active as the guesser, the clue giver, the psychic, the storyteller, etc\n  useEffect(() => {\n    const activePlayer = state?.[propertyName];\n    setActivePlayer(players?.[activePlayer] ?? {});\n    setIsUser(state?.[propertyName] === userId);\n  }, [players, propertyName, state, userId]);\n\n  return [activePlayer, isUser];\n}\n","export function CloverIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#5eac24\"\n        d=\"M438.93 253.91s-40.8-40.06-108.65-46.44c67.55-6.53 108.16-46.4 108.16-46.4a55.48 55.48 0 000-78.46c-10.02-10.02-24.5-13.82-37.62-14.56a5.96 5.96 0 01-3.57-1.46 5.95 5.95 0 01-2.1-4.2c-.75-13.13-4.55-27.62-14.57-37.64a55.47 55.47 0 00-78.44 0s-41.3 42.06-46.72 111.8C250 66.8 208.69 24.75 208.69 24.75a55.47 55.47 0 00-78.44 0c-10.02 10.02-13.82 24.51-14.57 37.63a5.95 5.95 0 01-2.1 4.21 5.96 5.96 0 01-3.56 1.46c-13.12.74-27.6 4.54-37.63 14.56a55.39 55.39 0 00-9.83 13.3 55.52 55.52 0 009.83 65.15s40.7 39.96 108.37 46.43C113.1 213.95 72.4 253.9 72.4 253.9a55.48 55.48 0 000 78.45c10.02 10.02 24.5 13.82 37.63 14.56 1.36.08 2.6.61 3.56 1.46 1.2 1.02 2 2.52 2.1 4.2.75 13.13 4.55 27.62 14.57 37.64a55.47 55.47 0 0078.44 0s22.37-22.79 36.35-62.61c3.47 24.06 10.96 56.68 26.5 98.23 9.45 25.23 24.6 47.7 43.8 65a111.61 111.61 0 0014.99 11.6 12.9 12.9 0 1013.72-21.86 86.02 86.02 0 01-11.44-8.9c-16.14-14.55-28.9-33.52-36.89-54.89-9.72-25.97-16.08-48.4-20.22-67.2 12.86 26.11 27.12 40.63 27.12 40.63a55.48 55.48 0 0078.45 0c10.02-10.02 13.82-24.5 14.56-37.63.08-1.36.61-2.6 1.45-3.56 1.03-1.2 2.53-2.01 4.21-2.1 13.12-.75 27.62-4.55 37.64-14.57a55.47 55.47 0 000-78.45zm-153.02-45.58a33.5 33.5 0 00-28.88 28.88c-.65 4.97-1.1 9.84-1.37 14.62-.28-4.78-.73-9.65-1.38-14.63a33.5 33.5 0 00-28.88-28.88c-2.53-.33-5.04-.6-7.53-.84 2.49-.23 5-.5 7.54-.83a33.48 33.48 0 0022.98-13.85l.08-.1a33.41 33.41 0 005.81-14.93c.5-3.75.86-7.45 1.14-11.09.28 3.64.64 7.34 1.14 11.09a33.5 33.5 0 0028.88 28.88c2.62.34 5.22.62 7.79.86-2.42.23-4.86.5-7.32.82z\"\n      ></path>\n      <path\n        fill=\"#6dc82a\"\n        d=\"M337.17 504.42c-2.34 0-4.71-.64-6.85-1.98-20.7-13-45.33-40.68-58.77-76.6-17.24-46.27-32.07-99.93-28.64-149.17l.02-.27a12.89 12.89 0 019.47-11.73l.12-.04c1.1-.3 2.25-.45 3.44-.42l.55.01a12.9 12.9 0 0112.2 13.58c-2.66 45.91 11.03 96.09 27.01 138.99 11.18 29.9 31.96 53.5 48.32 63.8 10.95 6.84 6.06 23.83-6.87 23.83z\"\n      ></path>\n      <path\n        fill=\"#5eac24\"\n        d=\"M294.04 412.22c-6.72-9.58-19.13-2.05-28.94-4.4-13.94-41.05-25.21-87.74-22.19-131.15l.02-.27a12.89 12.89 0 019.47-11.73l.12-.03c1.25-.27 2.41-.42 3.44-.42h.55a12.9 12.9 0 0112.2 13.59c-.09 1.38-6.47 47.31 25.33 134.4z\"\n      ></path>\n      <path\n        fill=\"#6dc82a\"\n        d=\"M256.55 177.77a33.5 33.5 0 0028.88 28.88c94.04 12.32 153.01-45.59 153.01-45.59a55.48 55.48 0 000-78.45c-10.02-10.02-24.5-13.82-37.62-14.56a5.96 5.96 0 01-3.57-1.46 5.95 5.95 0 01-2.1-4.2c-.75-13.13-4.55-27.62-14.57-37.64a55.47 55.47 0 00-78.44 0s-57.91 58.97-45.59 153.02z\"\n      ></path>\n      <path\n        fill=\"#4e901e\"\n        d=\"M397.24 66.6L262.37 192.67v.01a33.41 33.41 0 01-5.82-14.92c-12.33-94.05 45.59-153.02 45.59-153.02a55.47 55.47 0 0178.44 0c10.02 10.02 13.82 24.51 14.57 37.63.09 1.69.9 3.2 2.1 4.21z\"\n      ></path>\n      <path\n        fill=\"#4e901e\"\n        d=\"M254.28 177.77a33.42 33.42 0 01-5.81 14.92l-.08.11a33.48 33.48 0 01-22.99 13.85c-94.03 12.32-153-45.59-153-45.59a55.52 55.52 0 01-9.83-65.15 55.38 55.38 0 019.83-13.3c10.02-10.02 24.5-13.82 37.63-14.56a5.96 5.96 0 003.56-1.46 5.947 5.947 0 002.1-4.2c.75-13.13 4.55-27.62 14.57-37.64a55.47 55.47 0 0178.44 0s57.92 58.97 45.59 153.02z\"\n      ></path>\n      <path\n        fill=\"#5eac24\"\n        d=\"M254.28 177.77a33.42 33.42 0 01-5.81 14.92l-.08.11c-103.07 8.36-167.1-56.24-167.1-56.24a67.32 67.32 0 01-18.73-40.65 55.38 55.38 0 019.83-13.3c10.02-10.02 24.5-13.82 37.63-14.56a5.96 5.96 0 003.57-1.46c1.2-1.02 2-2.52 2.1-4.2.74-13.13 4.54-27.62 14.57-37.64a55.47 55.47 0 0178.44 0s57.9 58.97 45.58 153.02z\"\n      ></path>\n      <path\n        fill=\"#6dc82a\"\n        d=\"M254.28 177.77a33.42 33.42 0 01-5.81 14.92L113.59 66.6c1.2-1.02 2-2.52 2.09-4.2.75-13.13 4.55-27.62 14.57-37.64a55.47 55.47 0 0178.45 0s57.9 58.97 45.58 153.02z\"\n      ></path>\n      <path\n        fill=\"#5eac24\"\n        d=\"M397.24 66.6L262.37 192.67c4-94.08 60.11-151.23 60.11-151.23a70.6 70.6 0 0153.76-20.61 56.7 56.7 0 014.34 3.9c10.02 10.03 13.82 24.52 14.57 37.64.09 1.69.9 3.2 2.1 4.21z\"\n      ></path>\n      <path\n        fill=\"#6dc82a\"\n        d=\"M285.9 208.33a33.5 33.5 0 00-28.88 28.88c-12.32 94.03 45.6 153 45.6 153a55.48 55.48 0 0078.45 0c10.02-10.02 13.82-24.5 14.56-37.62.08-1.36.61-2.6 1.45-3.57 1.03-1.2 2.53-2 4.21-2.1 13.12-.75 27.62-4.55 37.64-14.57a55.47 55.47 0 000-78.44S379.95 196 285.91 208.33z\"\n      ></path>\n      <path\n        fill=\"#4e901e\"\n        d=\"M397.08 349.02L271 214.15v-.01a33.41 33.41 0 0114.92-5.82c94.04-12.32 153.02 45.59 153.02 45.59a55.47 55.47 0 010 78.44c-10.02 10.02-24.52 13.82-37.64 14.57-1.68.1-3.19.9-4.2 2.1z\"\n      ></path>\n      <path\n        fill=\"#5eac24\"\n        d=\"M397.08 349.02L271 214.15c94.09 4 151.23 60.1 151.23 60.1a70.6 70.6 0 0120.62 53.76 56.7 56.7 0 01-3.91 4.34c-10.02 10.02-24.52 13.82-37.64 14.57-1.68.1-3.19.9-4.2 2.1z\"\n      ></path>\n      <path\n        fill=\"#6dc82a\"\n        d=\"M254.28 237.2a33.5 33.5 0 00-28.88-28.88c-94.03-12.32-153 45.59-153 45.59a55.48 55.48 0 000 78.45c10.02 10.02 24.5 13.82 37.63 14.56 1.36.08 2.6.61 3.57 1.46 1.2 1.02 2 2.52 2.09 4.2.75 13.12 4.55 27.62 14.57 37.64a55.47 55.47 0 0078.45 0s57.9-58.98 45.58-153.02zm19.66-2.78c.98-3.26 1.77-4.78 1.36-1.62-.12.91-.62 1.4-1.36 1.62z\"\n      ></path>\n      <path\n        fill=\"#4e901e\"\n        d=\"M113.59 348.38l134.87-126.1a33.41 33.41 0 015.82 14.92c12.33 94.05-45.58 153.02-45.58 153.02a55.47 55.47 0 01-78.44 0c-10.03-10.02-13.83-24.52-14.58-37.64a5.94 5.94 0 00-2.1-4.2z\"\n      ></path>\n      <path\n        fill=\"#5eac24\"\n        d=\"M113.59 348.38l134.87-126.1c-4 94.1-60.11 151.23-60.11 151.23a70.6 70.6 0 01-53.75 20.62 56.7 56.7 0 01-4.34-3.9c-10.03-10.03-13.83-24.52-14.58-37.64a5.94 5.94 0 00-2.1-4.21z\"\n      ></path>\n      <path d=\"M444.89 249.34c-15.45-14.96-44.8-32.68-77.61-41.89 48.01-13.44 76.08-40.5 77.66-42.04a62.71 62.71 0 0018.02-51.84 7.52 7.52 0 00-14.93 1.73 47.72 47.72 0 01-13.68 39.43c-.46.45-46.84 45.15-121.6 45.15-8.3 0-16.78-.56-25.17-1.66a26.04 26.04 0 01-22.4-22.4 194.3 194.3 0 01-1.66-25.17c0-74.47 44.71-121.15 45.1-121.56a47.93 47.93 0 0167.82 0c9.22 9.22 11.82 22.9 12.38 32.75a13.53 13.53 0 0012.74 12.74c19.35 1.1 29.77 8.01 36.62 16.75 2.51 3.2 7.15 4.09 10.46 1.73a7.52 7.52 0 001.59-10.73c-9.3-11.99-23.25-21.02-46.48-22.68-.88-12.35-4.55-29.06-16.68-41.19a62.95 62.95 0 00-89.12.05c-1.52 1.54-28.56 29.6-42 77.6-9.34-33.27-27.66-63.1-41.94-77.65a63.06 63.06 0 00-89.07 0c-12.13 12.13-15.8 28.84-16.68 41.2-12.35.87-29.06 4.54-41.19 16.67a62.95 62.95 0 00.05 89.12c14.82 14.57 44.66 32.64 77.6 41.89-48 13.45-76.07 40.5-77.65 42.05-12.93 12.93-19 30.12-18.42 46.17a7.53 7.53 0 008.82 7.2c3.74-.65 6.25-4.12 6.2-7.91a47.65 47.65 0 0113.98-34.79c.46-.45 46.85-45.15 121.6-45.15 8.31 0 16.78.56 25.18 1.66a26.04 26.04 0 0122.4 22.4c3.54 27.15 1.4 53.58-6.43 79.25-12.9 42.3-36.74 67.18-37.02 67.47a47.91 47.91 0 01-67.81 0c-9.21-9.2-11.82-22.89-12.38-32.73a13.53 13.53 0 00-12.74-12.75c-20.9-1.2-32.01-9.13-39.28-20.5a7.52 7.52 0 00-12.67 8.1c11.5 17.95 28.5 25.82 49.76 27.32.89 12.36 4.55 29.07 16.68 41.2a62.93 62.93 0 0089.12-.05c1.15-1.17 17.1-17.72 30.59-46.75 9.14 56.7 23.6 109.03 65.66 146.9a118.34 118.34 0 0016.03 12.38c15.89 9.97 35.48-5.02 30.52-22.8a7.52 7.52 0 00-14.49 4.04 5.39 5.39 0 01-8.04 6.02c-19.44-12.18-42.96-38.71-55.74-72.87-13.66-36.52-20.53-82.22-22.48-99.44-.1-.88 1.16-1.14 1.42-.3a218.8 218.8 0 0015.21 36.64c8.23 43.66 19.85 82.74 50.2 112.77a7.52 7.52 0 0010.57-10.69c-19.93-19.72-29.55-41.3-37.25-67.71 32.75 36.36 102.95 24.19 107.49-39.34 12.35-.87 29.06-4.54 41.2-16.66a62.98 62.98 0 00-.06-89.13zm-220.46-51.12c-46.47 6.1-83.82-6-106.97-17.21-25.27-12.24-39.67-26.15-39.76-26.23a47.92 47.92 0 010-67.82c9.22-9.22 22.9-11.82 32.74-12.38a13.53 13.53 0 0012.75-12.74c.56-9.85 3.16-23.53 12.38-32.74 18.65-18.65 49.07-18.75 67.76-.05.56.56 55.21 57.4 43.5 146.77a26.03 26.03 0 01-22.4 22.4zM256 220.88a40.96 40.96 0 00-13.5-13.48c5.5-3.37 10.13-8 13.5-13.49a41.277 41.277 0 0013.5 13.5 41.03 41.03 0 00-13.5 13.47zm178.3 106.95c-9.22 9.22-22.89 11.82-32.74 12.38a13.53 13.53 0 00-12.74 12.75c-.56 9.84-3.17 23.52-12.38 32.74a47.98 47.98 0 01-67.76.05c-.25-.26-10.81-11.23-21.66-30.98-13.99-25.44-28.44-65.46-21.84-115.8a26.04 26.04 0 0122.4-22.4c56.58-7.42 110.9 11.56 146.73 43.45a47.94 47.94 0 010 67.81z\"></path>\n    </svg>\n  );\n}\n","export function TrophyIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M397.763 87.5h-98.509v213.476h98.509c58.855 0 106.737-47.882 106.737-106.738S456.618 87.5 397.763 87.5zm0 183.476h-68.509V117.5h68.509c42.381 0 76.738 34.357 76.738 76.738-.001 42.381-34.357 76.738-76.738 76.738zM114.237 87.5C55.382 87.5 7.5 135.382 7.5 194.238s47.882 106.738 106.737 106.738h98.509V87.5zm68.509 183.476h-68.509c-42.381 0-76.738-34.357-76.738-76.738S71.856 117.5 114.237 117.5h68.509zM314 419.5H198l15-91h86z\"\n      ></path>\n      <path fill=\"#fee97d\" d=\"M299 328.5h-30l15 91h30z\"></path>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M382.221 504.5H129.779a7 7 0 01-7-7v-11.629c0-22.091 17.909-40 40-40h186.442c22.091 0 40 17.909 40 40V497.5a7 7 0 01-7 7z\"\n      ></path>\n      <path\n        fill=\"#fee97d\"\n        d=\"M349.221 445.871h-30c22.092 0 40 17.909 40 40V497.5a7 7 0 01-7 7h30a7 7 0 007-7v-11.629c0-22.092-17.909-40-40-40zm-5 0H167.779v-3.629c0-22.091 17.909-40 40-40h96.442c22.091 0 40 17.909 40 40z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M304.221 402.241h-30c22.092 0 40 17.909 40 40v3.629h30v-3.629c0-22.091-17.909-40-40-40z\"\n      ></path>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M411.5 57.5h-311c-13.807 0-25-11.193-25-25s11.193-25 25-25h311c13.807 0 25 11.193 25 25s-11.193 25-25 25z\"\n      ></path>\n      <path\n        fill=\"#fee97d\"\n        d=\"M411.5 7.5h-30c13.807 0 25 11.193 25 25s-11.193 25-25 25h30c13.807 0 25-11.193 25-25s-11.193-25-25-25zM256 362.5c-83.119 0-150.5-67.381-150.5-150.5V57.5h301V212c0 83.119-67.381 150.5-150.5 150.5z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M376.5 57.5V212c0 78.056-59.424 142.229-135.5 149.757 4.934.488 9.937.743 15 .743 83.119 0 150.5-67.381 150.5-150.5V57.5z\"\n      ></path>\n      <circle cx=\"256\" cy=\"207.96\" r=\"94.169\" fill=\"#fff\"></circle>\n      <path\n        fill=\"#fee97d\"\n        d=\"M262.277 154.391l13.139 26.623a7 7 0 005.271 3.829l29.38 4.269c5.742.834 8.034 7.89 3.879 11.94l-21.26 20.723a6.998 6.998 0 00-2.013 6.196l5.019 29.261c.981 5.718-5.021 10.079-10.157 7.379l-26.278-13.815a7.001 7.001 0 00-6.515 0l-26.278 13.815c-5.135 2.7-11.137-1.661-10.157-7.379l5.019-29.261a7 7 0 00-2.013-6.196l-21.26-20.723c-4.155-4.05-1.862-11.106 3.879-11.94l29.38-4.269a7 7 0 005.271-3.829l13.139-26.623c2.569-5.203 9.987-5.203 12.555 0z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M313.946 201.052c4.155-4.05 1.862-11.106-3.88-11.94l-29.38-4.269a6.997 6.997 0 01-5.27-3.829l-13.139-26.623c-2.568-5.203-9.987-5.203-12.554 0l-10.888 22.061 3.874 7.85a18.632 18.632 0 0014.03 10.193c15.284 2.221 21.386 21.003 10.327 31.783a18.632 18.632 0 00-5.359 16.493l1.755 10.236 22.073 11.604c5.135 2.7 11.137-1.661 10.157-7.379l-5.019-29.261a7 7 0 012.013-6.196z\"\n      ></path>\n      <path d=\"M282.025 177.458l-13.022-26.387c-2.462-4.985-7.443-8.082-13.003-8.082s-10.541 3.097-13.003 8.083l-13.022 26.387-29.119 4.231c-5.502.799-9.987 4.581-11.706 9.868-1.718 5.288-.312 10.983 3.669 14.865l21.071 20.539-4.975 29.003c-.939 5.479 1.271 10.914 5.77 14.182s10.349 3.691 15.271 1.104L256 257.557l26.045 13.693c4.903 2.578 10.759 2.174 15.271-1.104 4.498-3.268 6.709-8.702 5.769-14.182l-4.974-29.003 21.071-20.539c3.981-3.881 5.387-9.577 3.669-14.865-1.719-5.287-6.204-9.068-11.706-9.867zm5.426 38.946a14.494 14.494 0 00-4.169 12.834l4.847 28.264-25.382-13.345a14.498 14.498 0 00-13.495 0l-25.381 13.344 4.847-28.262a14.495 14.495 0 00-4.169-12.835l-20.534-20.016 28.377-4.124a14.494 14.494 0 0010.918-7.932L256 158.618l12.69 25.714a14.494 14.494 0 0010.918 7.932l28.377 4.124zm194.096-99.749c-17.941-19.36-41.716-31.799-67.547-35.49v-16.27c16.756-1.282 30-15.316 30-32.394C444 14.58 429.421 0 411.5 0h-311C82.579 0 68 14.58 68 32.5c0 17.078 13.244 31.112 30 32.394v16.27c-25.714 3.676-49.409 16.029-67.321 35.248a7.5 7.5 0 0010.972 10.228C56.721 110.471 76.495 99.908 98 96.352v15.236c-39.204 7.62-68 42.024-68 82.652 0 22.509 8.765 43.663 24.675 59.561 15.532 15.543 36.076 24.242 57.996 24.641a157.847 157.847 0 008.007 15.038h-6.438c-54.722 0-99.24-44.519-99.24-99.24 0-14.091 2.904-27.711 8.633-40.48a7.5 7.5 0 00-13.685-6.14C3.347 162.333 0 178.019 0 194.24c0 62.992 51.248 114.24 114.24 114.24h16.729c17.756 22.957 41.679 40.906 69.267 51.348l-6.089 36.917c-18.396 5.522-32.123 21.915-33.701 41.685-25.112 1.221-45.167 22.032-45.167 47.441V497.5c0 7.995 6.505 14.5 14.5 14.5H382.22c7.995 0 14.5-6.505 14.5-14.5v-11.629c0-25.409-20.055-46.22-45.167-47.441-1.579-19.771-15.306-36.163-33.701-41.685l-6.089-36.917c27.588-10.441 51.511-28.391 69.267-51.348h16.729c62.992 0 114.24-51.248 114.24-114.24.001-28.841-10.814-56.394-30.452-77.585zM65.281 243.195C52.203 230.126 45 212.74 45 194.24c0-32.392 22.265-59.968 53-67.308V212c0 17.851 2.98 35.018 8.461 51.034-15.554-1.728-29.958-8.609-41.18-19.839zM100.5 50C90.851 50 83 42.149 83 32.5S90.851 15 100.5 15h311c9.649 0 17.5 7.851 17.5 17.5S421.149 50 411.5 50zM414 126.932c30.735 7.34 53 34.916 53 67.308 0 18.5-7.203 35.886-20.286 48.958-11.218 11.227-25.621 18.108-41.175 19.836C411.02 247.018 414 229.851 414 212zm-77.518 311.439h-22.895c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h35.634c17.921 0 32.5 14.58 32.5 32.5V497H130.279v-11.129c0-17.92 14.579-32.5 32.5-32.5h115.808c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5H175.518c1.921-16.101 15.651-28.629 32.261-28.629h96.441c16.611-.001 30.342 12.527 32.262 28.629zm-126.801-43.63l4.987-30.237C227.849 368.08 241.703 370 256 370s28.151-1.92 41.332-5.496l4.987 30.237zM256 355c-78.851 0-143-64.149-143-143V65h286v147c0 78.851-64.149 143-143 143zm141.76-61.52h-6.438a157.741 157.741 0 008.007-15.038c21.919-.399 42.463-9.097 57.991-24.637C473.235 237.903 482 216.749 482 194.24c0-40.627-28.796-75.032-68-82.652V96.352c21.605 3.57 41.449 14.208 56.545 30.498C487.604 145.259 497 169.192 497 194.24c0 54.721-44.519 99.24-99.24 99.24zM256 106.291c-56.061 0-101.67 45.609-101.67 101.669S199.939 309.629 256 309.629 357.67 264.02 357.67 207.96 312.061 106.291 256 106.291zm0 188.338c-47.79 0-86.67-38.88-86.67-86.669s38.88-86.669 86.67-86.669 86.67 38.88 86.67 86.669-38.88 86.669-86.67 86.669z\"></path>\n    </svg>\n  );\n}\n","export function VerifyListIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#bbec6c\"\n        d=\"M81.238 173.151a27.596 27.596 0 01-21.806-10.688L13.29 102.944c-9.338-12.045-7.143-29.379 4.902-38.717 12.046-9.338 29.38-7.143 38.718 4.901l20.714 26.719 40.422-71.574c7.495-13.271 24.327-17.953 37.599-10.458 13.271 7.495 17.952 24.328 10.458 37.599L105.27 159.126a27.596 27.596 0 01-24.032 14.025z\"\n      ></path>\n      <path\n        fill=\"#a2e62e\"\n        d=\"M101.016 164.795a27.521 27.521 0 01-19.777 8.362 27.6 27.6 0 01-21.81-10.689l-46.14-59.524c-9.336-12.041-7.147-29.371 4.903-38.717a27.323 27.323 0 0111.747-5.298c-9.456 9.695-10.56 25.13-2.024 36.141l46.14 59.524a27.612 27.612 0 0021.81 10.689c.662 0 1.334-.028 2.005-.074a25.312 25.312 0 003.146-.414z\"\n      ></path>\n      <path\n        fill=\"#bbec6c\"\n        d=\"M81.238 339.787a27.596 27.596 0 01-21.806-10.688L13.29 269.58c-9.338-12.045-7.143-29.379 4.902-38.717 12.046-9.338 29.38-7.143 38.718 4.901l20.714 26.719 40.422-71.574c7.495-13.271 24.327-17.953 37.599-10.458 13.271 7.495 17.952 24.328 10.458 37.599L105.27 325.762a27.596 27.596 0 01-24.032 14.025z\"\n      ></path>\n      <path\n        fill=\"#a2e62e\"\n        d=\"M101.016 331.431a27.521 27.521 0 01-19.777 8.362 27.6 27.6 0 01-21.81-10.689L13.29 269.58c-9.336-12.041-7.147-29.371 4.903-38.717a27.323 27.323 0 0111.747-5.298c-9.456 9.695-10.56 25.13-2.024 36.141l46.14 59.524a27.612 27.612 0 0021.81 10.689c.662 0 1.334-.028 2.005-.074a25.133 25.133 0 003.145-.414z\"\n      ></path>\n      <path\n        fill=\"#fe646f\"\n        d=\"M118.17 437.674l18.449-18.449c10.437-10.437 10.437-27.358 0-37.795-10.437-10.437-27.359-10.437-37.795 0l-18.449 18.449-18.45-18.449c-10.437-10.437-27.359-10.437-37.795 0-10.437 10.437-10.437 27.359 0 37.795l18.449 18.449-18.449 18.449c-10.437 10.437-10.437 27.358 0 37.795 10.437 10.437 27.358 10.437 37.795 0l18.449-18.449 18.449 18.449c10.437 10.437 27.359 10.437 37.795 0 10.437-10.437 10.437-27.359 0-37.795z\"\n      ></path>\n      <path\n        fill=\"#fd4755\"\n        d=\"M46.963 493.919c-10.437-10.437-10.437-27.359 0-37.795l18.449-18.449-18.449-18.449c-10.437-10.437-10.437-27.358 0-37.795a26.667 26.667 0 017.481-5.27c-9.915-4.683-22.115-2.929-30.314 5.27-10.437 10.437-10.437 27.359 0 37.795l18.449 18.449-18.449 18.448c-10.437 10.437-10.437 27.358 0 37.795 8.199 8.199 20.399 9.953 30.314 5.27a26.663 26.663 0 01-7.481-5.269z\"\n      ></path>\n      <path\n        fill=\"#f9f7f8\"\n        d=\"M268.014 156.832h202.073c19.005 0 34.411-15.406 34.411-34.411V62.852c0-19.005-15.406-34.411-34.411-34.411H268.014c-19.005 0-34.411 15.406-34.411 34.411v59.568c0 19.005 15.406 34.412 34.411 34.412zm0 171.459h202.073c19.005 0 34.411-15.406 34.411-34.411v-59.568c0-19.005-15.406-34.411-34.411-34.411H268.014c-19.005 0-34.411 15.406-34.411 34.411v59.568c0 19.005 15.406 34.411 34.411 34.411zm0 171.459h202.073c19.005 0 34.411-15.406 34.411-34.411v-59.568c0-19.005-15.406-34.411-34.411-34.411H268.014c-19.005 0-34.411 15.406-34.411 34.411v59.568c0 19.005 15.406 34.411 34.411 34.411z\"\n      ></path>\n      <path\n        fill=\"#dedbee\"\n        d=\"M300.134 156.828h-32.127c-18.999 0-34.404-15.405-34.404-34.414V62.851c0-19.009 15.405-34.414 34.404-34.414h32.127c-19.009 0-34.414 15.405-34.414 34.414v59.563c0 19.009 15.405 34.414 34.414 34.414zm0 171.46h-32.127c-18.999 0-34.404-15.405-34.404-34.414v-59.563c0-19.009 15.405-34.414 34.404-34.414h32.127c-19.009 0-34.414 15.405-34.414 34.414v59.563c0 19.009 15.405 34.414 34.414 34.414zm0 171.46h-32.127c-18.999 0-34.404-15.405-34.404-34.414v-59.563c0-19.009 15.405-34.414 34.404-34.414h32.127c-19.009 0-34.414 15.405-34.414 34.414v59.563c0 19.009 15.405 34.414 34.414 34.414z\"\n      ></path>\n      <path d=\"M53.509 167.06c6.599 8.511 16.967 13.592 27.733 13.592.842 0 1.698-.031 2.553-.093a35.02 35.02 0 0028.01-17.744l60.831-107.712c9.517-16.85 3.55-38.301-13.301-47.817-16.85-9.517-38.3-3.547-47.817 13.301L76.642 82.339 62.84 64.535C50.984 49.242 28.897 46.443 13.6 58.301c-15.293 11.857-18.09 33.945-6.235 49.24zM22.79 70.156a19.998 19.998 0 0112.291-4.206c6.005 0 11.949 2.673 15.903 7.775l20.714 26.719a7.49 7.49 0 006.473 2.885 7.495 7.495 0 005.985-3.792l40.422-71.573c5.449-9.648 17.731-13.066 27.381-7.616 9.648 5.449 13.064 17.731 7.616 27.38L98.744 155.439a20.051 20.051 0 01-17.502 10.213c-6.164 0-12.1-2.91-15.879-7.783L19.221 98.351c-6.789-8.758-5.188-21.406 3.569-28.195zm136.542 103.768c-16.845-9.519-38.297-3.556-47.819 13.295l-34.867 61.75-13.806-17.805c-11.865-15.285-33.952-18.082-49.237-6.23-7.411 5.747-12.142 14.033-13.319 23.332-1.178 9.301 1.339 18.503 7.085 25.907l46.142 59.519c6.59 8.51 16.958 13.591 27.734 13.591a35.02 35.02 0 0030.56-17.827l3.944-6.978a7.5 7.5 0 00-2.839-10.22 7.5 7.5 0 00-10.22 2.839l-3.944 6.979a20.056 20.056 0 01-17.501 10.207c-6.171 0-12.105-2.906-15.877-7.778L19.221 264.98a19.945 19.945 0 01-4.057-14.828 19.982 19.982 0 017.63-13.363c8.751-6.784 21.401-5.183 28.194 3.57l20.716 26.716a7.484 7.484 0 006.472 2.884 7.5 7.5 0 005.986-3.792l40.412-71.57c5.452-9.649 17.734-13.062 27.386-7.61a19.94 19.94 0 019.48 12.109 19.96 19.96 0 01-1.864 15.269l-42.181 74.687a7.5 7.5 0 002.842 10.219 7.498 7.498 0 0010.219-2.842l42.18-74.685c4.613-8.163 5.769-17.633 3.256-26.667-2.515-9.038-8.398-16.55-16.56-21.153zm-17.407 202.201c-6.464-6.464-15.059-10.024-24.201-10.024s-17.736 3.56-24.201 10.024L80.378 389.27l-13.145-13.145c-6.464-6.464-15.059-10.024-24.201-10.024s-17.736 3.56-24.201 10.024c-13.344 13.345-13.344 35.057 0 48.401l13.146 13.146-13.147 13.146c-13.344 13.344-13.344 35.057 0 48.401 6.465 6.464 15.059 10.024 24.201 10.024s17.737-3.56 24.202-10.024l13.144-13.145 13.145 13.145c6.465 6.464 15.059 10.024 24.201 10.024s17.737-3.56 24.202-10.024c13.344-13.344 13.344-35.057-.001-48.401l-13.145-13.145 13.146-13.146c13.345-13.344 13.345-35.057 0-48.402zm-10.606 37.795l-18.449 18.449a7.5 7.5 0 000 10.606l18.449 18.449c7.496 7.496 7.496 19.693.001 27.189a19.104 19.104 0 01-13.596 5.631c-5.135 0-9.963-2-13.595-5.631l-18.448-18.449a7.5 7.5 0 00-10.608 0l-18.447 18.449a19.104 19.104 0 01-13.596 5.631 19.1 19.1 0 01-13.594-5.631c-7.496-7.496-7.496-19.693 0-27.189l18.448-18.449a7.497 7.497 0 00.001-10.606L29.438 413.92c-7.496-7.496-7.496-19.693 0-27.189a19.1 19.1 0 0113.594-5.631c5.136 0 9.964 2 13.595 5.631l18.448 18.449a7.5 7.5 0 0010.608 0l18.449-18.449a19.1 19.1 0 0113.594-5.631c5.136 0 9.964 2 13.595 5.631 7.494 7.497 7.494 19.693-.002 27.189zM470.086 20.943H268.018c-23.111 0-41.913 18.802-41.913 41.913v59.562c0 23.111 18.802 41.913 41.913 41.913h131.125c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5H268.018c-14.84 0-26.913-12.073-26.913-26.913V62.856c0-14.84 12.073-26.913 26.913-26.913h202.069c14.841 0 26.914 12.073 26.914 26.913v59.562c0 14.84-12.073 26.913-26.914 26.913h-40.993c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h40.993c23.111 0 41.914-18.802 41.914-41.913V62.856c-.001-23.111-18.804-41.913-41.915-41.913zm.001 171.458h-202.07c-23.11 0-41.912 18.801-41.912 41.911v59.567c0 23.11 18.802 41.911 41.912 41.911h202.071c23.11 0 41.911-18.801 41.911-41.911v-59.567c-.001-23.11-18.802-41.911-41.912-41.911zm26.911 101.478c0 14.839-12.072 26.911-26.911 26.911h-202.07c-14.84 0-26.912-12.072-26.912-26.911v-59.567c0-14.839 12.072-26.911 26.912-26.911h202.071c14.839 0 26.911 12.072 26.911 26.911v59.567zm-26.911 69.98h-202.07c-23.11 0-41.912 18.801-41.912 41.911v59.567c0 23.11 18.802 41.911 41.912 41.911h202.071c23.11 0 41.911-18.801 41.911-41.911V405.77c-.001-23.11-18.802-41.911-41.912-41.911zm26.911 101.478c0 14.839-12.072 26.911-26.911 26.911h-202.07c-14.84 0-26.912-12.072-26.912-26.911V405.77c0-14.839 12.072-26.911 26.912-26.911h202.071c14.839 0 26.911 12.072 26.911 26.911v59.567z\"></path>\n      <path d=\"M473.995 74.074a7.5 7.5 0 00-7.5-7.5H271.608c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h194.887a7.5 7.5 0 007.5-7.5zm-202.387 29.628c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5H399.14c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5zm194.887 134.33H271.608c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h194.887c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5zM399.14 275.16H271.608c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5H399.14a7.5 7.5 0 000-15zm67.355 134.33H271.608c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h194.887c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5zm-67.355 37.128H271.608c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5H399.14a7.5 7.5 0 000-15z\"></path>\n    </svg>\n  );\n}\n","export function WritingIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffddcf\"\n        d=\"M219.421 310.029l-38.936 38.936c-10.935 10.935-28.663 10.935-39.598 0-10.935-10.935-10.935-28.663 0-39.598l27.435-27.435z\"\n      ></path>\n      <path\n        fill=\"#ffddcf\"\n        d=\"M117.575 208.182l-38.936 38.936c-10.935 10.935-28.663 10.935-39.598 0-10.935-10.935-10.935-28.663 0-39.598l27.435-27.435a181.448 181.448 0 01128.303-53.145c66.713 0 128.046 36.609 159.709 95.33L384 277.001l-39.899 150.983z\"\n      ></path>\n      <path\n        fill=\"#91def5\"\n        d=\"M433.343 481.298l-77.274-20.706c-10.669-2.859-17.001-13.826-14.142-24.495l43.482-162.276c2.859-10.669 13.826-17.001 24.495-14.142l77.274 20.706c10.669 2.859 17.001 13.826 14.142 24.495l-43.482 162.276c-2.859 10.669-13.825 17.001-24.495 14.142z\"\n      ></path>\n      <path fill=\"#ffcb7c\" d=\"M295.721 30.003l62.216 62.216L121.075 329.08l-62.216-62.216z\"></path>\n      <path fill=\"#98a1b3\" d=\"M10 377.984L58.839 266.92l62.225 62.226z\"></path>\n      <path\n        fill=\"#ffddcf\"\n        d=\"M256.466 298.519l-60.583-60.583c-12.497-12.497-32.758-12.497-45.255 0s-12.497 32.758 0 45.255l60.583 60.583c21.915 51.09 72.162 84.211 127.754 84.211h5.136z\"\n      ></path>\n      <path d=\"M489.765 270.726l-77.274-20.705c-10.239-2.743-20.679.186-27.989 6.843l-21.212-39.339c-13.197-24.475-31.711-45.893-53.945-62.517l55.689-55.689c3.905-3.905 3.905-10.237 0-14.143L302.809 22.95c-3.905-3.904-10.237-3.904-14.143 0l-93.991 93.991c-25.233.014-49.846 4.915-73.16 14.572-23.345 9.67-44.242 23.633-62.11 41.5L31.97 200.449c-7.178 7.178-11.13 16.72-11.13 26.87s3.953 19.692 11.13 26.87a37.753 37.753 0 0017.207 9.863L.847 373.959a10 10 0 0013.18 13.18l109.921-48.336a37.763 37.763 0 009.869 17.234c7.408 7.408 17.139 11.112 26.87 11.112s19.462-3.704 26.87-11.112l10.888-10.888 4.36 4.36a148.813 148.813 0 00128.643 88.265c-.764 6.39.542 12.827 3.818 18.5 4.006 6.94 10.476 11.904 18.216 13.978l77.274 20.706a29.939 29.939 0 007.757 1.025c13.244 0 25.398-8.853 28.985-22.239l9.829-36.684c1.43-5.334-1.736-10.817-7.071-12.247-5.332-1.43-10.818 1.736-12.247 7.071l-9.829 36.684c-1.427 5.327-6.921 8.5-12.248 7.071l-77.274-20.706a9.935 9.935 0 01-6.072-4.659 9.938 9.938 0 01-.999-7.588l43.481-162.275c1.428-5.326 6.925-8.496 12.248-7.071l77.274 20.705c5.326 1.428 8.499 6.922 7.071 12.248l-10.354 38.643c-1.43 5.334 1.736 10.817 7.071 12.247 5.331 1.43 10.818-1.736 12.247-7.071l10.354-38.643c4.282-15.979-5.235-32.461-21.214-36.743zM343.821 92.247L204.079 231.989l-1.125-1.125c-5.698-5.698-12.749-9.545-20.424-11.267L326.85 75.276zm-48.083-48.083l16.97 16.97L89.951 283.89l-16.97-16.97zM46.112 240.047c-3.4-3.399-5.272-7.92-5.272-12.728s1.872-9.328 5.272-12.728l27.435-27.436c27.277-27.277 62.128-44.229 99.81-48.897L71.567 240.047c-7.017 7.02-18.437 7.018-25.455 0zm15.995 44.284l41.546 41.546-74.155 32.609zm58.958 30.672l-16.97-16.97 28.217-28.217a41.744 41.744 0 0011.246 20.446l1.125 1.125zm52.348 26.891c-7.019 7.018-18.438 7.017-25.456.001-7.018-7.02-7.018-18.439 0-25.457l10.888-10.888 25.456 25.455zm163.028 76.044a128.854 128.854 0 01-116.04-78.106 10.01 10.01 0 00-2.119-3.129l-60.583-60.583c-8.578-8.577-8.578-22.535 0-31.112 4.155-4.155 9.68-6.444 15.556-6.444s11.401 2.289 15.556 6.444l60.583 60.583c3.905 3.904 10.237 3.904 14.143 0 3.905-3.905 3.905-10.237 0-14.143l-45.316-45.316 76.804-76.804c20.953 15.116 38.383 34.917 50.662 57.689l27.998 51.923z\"></path>\n      <path d=\"M479.32 397.003c-2.64 0-5.21-1.07-7.08-2.931a10.08 10.08 0 01-2.92-7.069c0-2.641 1.06-5.21 2.92-7.08 1.86-1.86 4.44-2.92 7.08-2.92 2.63 0 5.21 1.06 7.07 2.92a10.097 10.097 0 012.93 7.08c0 2.63-1.07 5.21-2.93 7.069a10.09 10.09 0 01-7.07 2.931z\"></path>\n    </svg>\n  );\n}\n"],"names":["GainedPoint","gainedPoint","order","description","isPositive","isNegative","className","clsx","title","pt","en","color","GainedPoints","gainedPoints","playerId","gainedPointsDescriptions","points","Array","isArray","map","index","RankingBoard","players","ranking","hideGainedPoints","delay","useState","displayStep","setDisplayStep","sortedRanking","setSortedRanking","reRank","setReRank","useDimensions","height","maxPoints","useMemo","Math","max","scores","newScore","seconds","useCountdown","duration","autoStart","onExpire","useEffectOnce","positions","lastPosition","lastPoints","rankByFinalScoreDict","orderBy","reduce","acc","entry","rankByPreviousScore","tempSortedRanking","newEntry","position","previousScore","useEffect","style","length","hPosition","id","top","CrownFilled","avatarId","name","undefined","StepRankingWrapper","children","subtitle","useTemporarilyHidePlayersBar","CaretUpOutlined","RoundAnnouncement","round","onPressButton","buttonText","time","unskippable","circleColor","translate","useLanguage","circleStyle","borderColor","src","roundTitlePt","roundTitleEn","alt","getAnimationClass","current","Boolean","type","onClick","disabled","custom","View","ViewIf","condition","ViewOr","ViewSwitch","cases","Error","console","warn","ACTIONS","ROTATIONS","LEAVES_ORDER","DIRECTIONS_INDEXES","right","bottom","left","onRotate","value","direction","parseRotation","prepareClueSubmission","clues","clover","rotations","leafId","leaves","clue","rotation","getWord","leaf","cards","indexOf","text","mockSelectCards","shuffle","slice","card","glue2Words","word1","word2","substring","mockClues","mockedScore","mockGuesses","selected","sampleSize","Object","keys","A","getRandomItem","score","tries","B","C","D","StepSelectWords","hand","onSubmitBadWords","isLoading","useLoading","alphabeticalHand","useBooleanDictionary","selectedCards","updateSelectedCard","useMock","cardsIds","selectedCount","isComplete","fullWidth","size","contained","active","activeClass","align","state","info","user","useUser","useStep","step","goToNextStep","setStep","request","useAPICall","apiFunction","TREVO_DA_SORTE_API","actionName","onBeforeCall","onError","successMessage","errorMessage","payload","action","useOnSubmitBadWordsAPIRequest","phase","allowedPhase","PHASES","conditions","isReady","appearance","icon","VerifyListIcon","onClose","currentRound","useCloverState","mode","onSubmit","attempts","setAttempts","setClues","setRotation","activeLeafId","setActiveLeafId","activeSlotId","setActiveSlotId","guesses","setGuesses","locks","setLocks","setRotations","usedLeavesIds","setUsedLeavesIds","values","guess","prevState","newState","forEach","k","onLeafRotate","e","leadId","quantity","stopPropagation","newRotation","areCluesComplete","every","trim","isCloverComplete","onRotateClover","onClueChange","targetIndex","copy","onRandomizeLeafRotations","cloverLeaf","onActivateLeaf","targetLeafId","g","repeat","filter","l","newGuesses","onActivateSlot","targetSlotId","activeContent","targetContent","onLeafRemove","submitClover","correctCount","locksCopy","guessesCopy","key","correctLeaf","notification","message","activeCloverId","cloverId","Leaf","onLeafGrab","isLocked","grabbable","removable","rotatable","isStatic","transform","cIndex","role","shape","RedoOutlined","DeleteOutlined","LockIcon","CloverIcon","LeafSlot","_","GuessIcon","LeafSlotContent","Clover","inputRefs","useRef","cloverLeaves","entries","useKeyPressEvent","leafIndex","Number","ref","el","onChange","target","placeholder","autoFocus","cloverLeafPosition","getLeaf","leafRotation","RotateLeftOutlined","RotateRightOutlined","getIcon","BoxOneIcon","BoxCheckMarkIcon","BoxXIcon","WritingRules","GuessingRules","ConfirmClues","words","getWords","pair","leafA","leafARotation","leafB","leafBRotation","leafC","leafCRotation","leafD","leafDRotation","indexes","getIndex","rotationData","addition","StepWriteClues","onSubmitClues","content","onConfirm","devOnly","useOnSubmitCluesAPIRequest","WritingIcon","DetachedLeaves","availableLeaves","includes","wrap","StepGuessClover","onSubmitGuess","activeCloverPlayer","player","StepWaitClover","useWhichPlayerIsThe","isUserTheCloverPlayer","useOnSubmitGuessAPIRequest","activePlayerId","gameOrder","PlayersGuesses","sortedPlayers","sortPlayers","activePlayerTab","setActivePlayerTab","items","label","activeKey","StepRanking","RankIcon","announcementIcon","TrophyIcon","getActiveComponent","PhaseLobby","PhaseRules","PhaseSetup","PhaseWordSelection","PhaseCloverWriting","PhaseCloverGuessing","PhaseResults","PhaseGameOver","PageError","theme","token","colorPrimary","THEME_COLORS","colorLink","gameCollection","GAME_COLLECTION","initialState","validation","dict","setDict","isValid","s","dictCopy","elementId","useGlobalState","sWidth","sHeight","element","document","getElementById","offsetWidth","offsetHeight","propertyName","userId","activePlayer","setActivePlayer","isUser","setIsUser","props","xmlns","viewBox","fill","d","cx","cy","r"],"sourceRoot":""}