{"version":3,"file":"static/js/na-rua-do-medo.6e702c16.chunk.js","mappings":"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","sources":["games/na-rua-do-medo/utils/mock.ts","games/na-rua-do-medo/components/PlayerStats.tsx","games/na-rua-do-medo/components/Highlights.tsx","games/na-rua-do-medo/components/RulesBlobs.tsx","games/na-rua-do-medo/components/Street.tsx","games/na-rua-do-medo/components/PlayersDecisionState.tsx","games/na-rua-do-medo/components/NewHouseCard.tsx","games/na-rua-do-medo/StepMakeDecision.tsx","games/na-rua-do-medo/PhaseTrickOrTreat.tsx","games/na-rua-do-medo/utils/api-requests.ts","games/na-rua-do-medo/StepResult.tsx","games/na-rua-do-medo/PhaseResult.tsx","games/na-rua-do-medo/StepStreetEnd.tsx","games/na-rua-do-medo/PhaseStreetEnd.tsx","games/na-rua-do-medo/PhaseGameOver.tsx","games/na-rua-do-medo/SessionNaRuaDoMedo.tsx","games/na-rua-do-medo/components/CandyCount.tsx","games/na-rua-do-medo/components/HouseCard.tsx","games/na-rua-do-medo/utils/achievements.ts","icons/MedalScaredIcon.tsx","icons/QuestionIcon.tsx","icons/ScaredIcon.tsx"],"sourcesContent":["import { getRandomItem } from 'utils/helpers';\n\nconst MORE_CONTINUE = ['CONTINUE', 'CONTINUE', 'CONTINUE', 'CONTINUE', 'GO_HOME'];\nconst MORE_HOME = ['GO_HOME', 'GO_HOME', 'CONTINUE', 'CONTINUE', 'CONTINUE'];\n\nexport const mockPlayerDecision = (horrorLength: number, hand: number) => {\n  let decision = getRandomItem(MORE_CONTINUE);\n\n  if (hand < 2 || horrorLength < 2) {\n    decision = 'CONTINUE';\n  } else if (horrorLength >= 3 && hand > 4) {\n    decision = getRandomItem(MORE_HOME);\n  }\n\n  return decision;\n};\n","// Icons\nimport { HouseIcon } from 'icons/HouseIcon';\nimport { QuestionIcon } from 'icons/QuestionIcon';\nimport { TrickOrTreatIcon } from 'icons/TrickOrTreatIcon';\nimport { WalkIcon } from 'icons/WalkIcon';\n// Components\nimport { AvatarStrip, IconAvatar } from 'components/avatars';\nimport { FloatingHand, ImageCard } from 'components/cards';\nimport { Translate } from 'components/language';\n\ntype PlayerStatsProps = {\n  user: GamePlayer;\n  omitDecision?: boolean;\n};\n\nexport function PlayerStats({ user, omitDecision = false }: PlayerStatsProps) {\n  return (\n    <FloatingHand title={<Translate pt=\"Informações\" en=\"Stats\" />} icon={<TrickOrTreatIcon />}>\n      <div className=\"n-player-stats\">\n        <AvatarStrip player={user} withName size=\"small\" />\n        <div className=\"n-player-stats__decision\">\n          <DecisionIcon decision={user.decision} omitDecision={omitDecision} />\n        </div>\n        <div className=\"n-player-stats__container n-player-stats__container--candy\">\n          <span className=\"n-player-stats__title\">\n            <Translate pt=\"Doces\" en=\"Candy\" />\n          </span>\n          <div className=\"n-player-stats__count\">\n            <span className=\"n-player-stats__count-label\">\n              <Translate pt=\"Em mão\" en=\"In hand\" />\n            </span>\n            <span className=\"n-player-stats__count-value\">{user.hand}</span>\n          </div>\n\n          <div className=\"n-player-stats__count\">\n            <span className=\"n-player-stats__count-label\">\n              <Translate pt=\"Em casa (pontos)\" en=\"At home (points)\" />\n            </span>\n            <span className=\"n-player-stats__count-value\">{user.totalCandy}</span>\n          </div>\n        </div>\n\n        <div className=\"n-player-stats__container\">\n          <span className=\"n-player-stats__title\">\n            <Translate pt=\"Boladas\" en=\"Jackpots\" />\n          </span>\n          {user.jackpots?.length > 0 ? (\n            <ul className=\"n-player-stats__jackpots\">\n              {user.jackpots.map((jackpot: NCard) => (\n                <ImageCard\n                  key={jackpot.id}\n                  imageId={jackpot.key}\n                  cardWidth={60}\n                  className=\"n-player-stats__jackpot\"\n                />\n              ))}\n            </ul>\n          ) : (\n            <div className=\"n-player-stats__no-jackpot\">\n              <Translate\n                pt=\"Você não coletou nenhuma bolada até o momento.\"\n                en=\"You haven't gotten any jackpot yet.\"\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    </FloatingHand>\n  );\n}\n\ntype DecisionIconProps = {\n  decision: NDecision;\n  omitDecision: boolean;\n};\n\nfunction DecisionIcon({ decision, omitDecision }: DecisionIconProps) {\n  if (omitDecision) {\n    return (\n      <>\n        <IconAvatar icon={<QuestionIcon />} shape=\"square\" />\n        <Translate pt=\"Decida\" en=\"Decide\" />\n      </>\n    );\n  }\n\n  return decision === 'CONTINUE' ? (\n    <>\n      <IconAvatar icon={<WalkIcon />} />\n      <Translate pt=\"Continuando\" en=\"Continuing\" />\n    </>\n  ) : (\n    <>\n      <IconAvatar icon={<HouseIcon />} />\n      <Translate pt=\"Em casa\" en=\"At home\" />\n    </>\n  );\n}\n","import clsx from 'clsx';\n// Icons\nimport { CandyIcon } from 'icons/CandyIcon';\nimport { TabletIcon } from 'icons/TabletIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function CandyHighlight({ children, type }: HighlightProps) {\n  return (\n    <MetricHighlight\n      icon={<CandyIcon />}\n      type={type}\n      className={clsx(type === 'positive' && 'n-candy-highlight')}\n    >\n      {children}\n    </MetricHighlight>\n  );\n}\n\nexport function TitleCandyHighlight({ children, type }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<IconAvatar size=\"large\" icon={<CandyIcon />} />} type={type}>\n      {children}\n    </MetricHighlight>\n  );\n}\n\nexport function TitleIPadHighlight({ children, type }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<IconAvatar size=\"small\" icon={<TabletIcon />} />} type={type}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","// Components\nimport { Translate } from 'components/language';\nimport { RulesList } from 'components/rules';\nimport { Instruction } from 'components/text';\nimport { CandyHighlight } from './Highlights';\n\nconst CANDY_VALUES = [1, 2, 3, 4, 5, 5, 5, 7, 7, 7, 8, 9, 10, 11, 11, 12, 13, 14, 15, 17, 19];\n\ntype DecisionExplanationProps = {\n  user: GamePlayer;\n  totalCandyInSidewalk: number;\n};\n\nexport function DecisionExplanation({ user, totalCandyInSidewalk }: DecisionExplanationProps) {\n  const isThereAnyCandy = Boolean(user.hand + totalCandyInSidewalk);\n\n  return (\n    <Instruction contained>\n      {isThereAnyCandy ? (\n        <Translate\n          pt={\n            <>\n              Se você voltar pra sua casa você come todos os doces em mãos{' '}\n              <CandyHighlight>{user.hand}</CandyHighlight> e divide os doces ainda na rua{' '}\n              <CandyHighlight>{totalCandyInSidewalk}</CandyHighlight> com os jogadores que também decidirem\n              voltar.\n            </>\n          }\n          en={\n            <>\n              If you go back home you cash in all your candy in hand{' '}\n              <CandyHighlight>{user.hand}</CandyHighlight> and divide all candy still in the street{' '}\n              <CandyHighlight>{totalCandyInSidewalk}</CandyHighlight> with other players who also decide to go\n              back.\n            </>\n          }\n        />\n      ) : (\n        <Translate\n          pt=\"Não tem doce nenhum ainda, então, melhor simplesmente continuar!\"\n          en=\"There's no candy yet, so why not just continue?\"\n        />\n      )}\n      <br />\n\n      <Translate\n        pt=\"Lembre-se que se dois monstros iguais aparecerem, todos entram em pânico, derrubam todos os doces em mãos e correm pra casa.\"\n        en=\"Remember that if two of the same monster show up, you lose all candy in hand because you freaked out, dropped everything, and ran home.\"\n      />\n    </Instruction>\n  );\n}\n\nexport function CardCountExplanation() {\n  return (\n    <Instruction>\n      <Translate\n        pt={\n          <RulesList>\n            <li>\n              O baralho de cartas contém {CANDY_VALUES.length} cartas Gostosuras que variam de 1 a 19 doces.{' '}\n              <br />({CANDY_VALUES.join(', ')})\n            </li>\n            <li>Também contém 5 tipos de monstros com 3 cartas para cada (Total: 15).</li>\n            <li>\n              Cada vez que um monstro aparece duas vezes e causa pânico, uma de suas cartas é removida do\n              baralho.\n            </li>\n            <li>\n              Cada rua adiciona um iPad indivisível ao baralho, somente uma pessoa pode tê-lo, se ninguém\n              conseguir pegar o iPad a rua, ele fica no baralho para a próxima rodada.\n            </li>\n          </RulesList>\n        }\n        en={\n          <RulesList>\n            <li>\n              The deck has {CANDY_VALUES.length} Candy cards varying from 1 to 19 candies.\n              <br />({CANDY_VALUES.join(', ')})\n            </li>\n            <li>It also has 5 types of monsters with 3 cards each (15 total).</li>\n            <li>\n              When a second monster of the same type shows up, one of its cards is remove for the next round.\n            </li>\n            <li>\n              Each street adds an unshareable iPad to the deck, only one person get get it, if nobody has\n              gotten the iPad on the current street, it will remain in the deck for the next round.\n            </li>\n          </RulesList>\n        }\n      />\n    </Instruction>\n  );\n}\n","import clsx from 'clsx';\nimport { useEffect } from 'react';\nimport { PUBLIC_URL } from 'utils/constants';\n// Helpers\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { HouseCard } from './HouseCard';\n\ntype StreetProps = {\n  street: NStreet;\n  currentCard?: NCard;\n  candySidewalk: CandySidewalk;\n};\n\nexport function Street({ street, currentCard, candySidewalk }: StreetProps) {\n  useEffect(() => {\n    const streetEl = document.getElementById('street');\n    const currentCardEl = document.getElementById('current-card');\n\n    if (streetEl !== null && currentCardEl !== null) {\n      streetEl.scrollLeft = currentCardEl.offsetLeft;\n    }\n  }, [street, currentCard]);\n\n  return (\n    <div\n      className=\"n-street\"\n      id=\"street\"\n      style={{\n        backgroundImage: `url('${PUBLIC_URL.IN_GAME}n-street.png')`,\n      }}\n    >\n      {street.map((card, index) => {\n        return (\n          <HouseCard\n            key={card.id}\n            card={card}\n            candyLeftover={candySidewalk[index].leftover}\n            id={index === street.length - 1 ? 'current-card' : undefined}\n          />\n        );\n      })}\n      {currentCard && (\n        <HouseCard\n          card={currentCard}\n          candyLeftover={candySidewalk[candySidewalk.length - 1].leftover}\n          className={clsx('n-current-card', getAnimationClass('flipInY'))}\n          id=\"current-card\"\n          active\n        />\n      )}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Icons\nimport { CandyIcon } from 'icons/CandyIcon';\nimport { HouseIcon } from 'icons/HouseIcon';\nimport { WalkIcon } from 'icons/WalkIcon';\nimport { TrickOrTreatIcon } from 'icons/TrickOrTreatIcon';\nimport { ScaredIcon } from 'icons/ScaredIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { CostumeAvatar } from './CostumeAvatar';\n\ntype PlayersDecisionStateProps = {\n  players: GamePlayers;\n  goingHomePlayerIds: PlayerId[];\n  continuingPlayerIds: PlayerId[];\n  alreadyAtHomePlayerIds: PlayerId[];\n  cashedInCandy: number;\n  candyInHand: number;\n  phase: 'TRICK_OR_TREAT' | 'RESULT' | 'STREET_END';\n};\n\nexport function PlayersDecisionState({\n  players,\n  goingHomePlayerIds,\n  continuingPlayerIds,\n  alreadyAtHomePlayerIds,\n  cashedInCandy,\n  candyInHand,\n  phase,\n}: PlayersDecisionStateProps) {\n  return (\n    <div className=\"n-players-decision\">\n      <DecisionSection\n        players={players}\n        playersInSection={alreadyAtHomePlayerIds}\n        icon={<HouseIcon />}\n        title={<Translate pt=\"Em Casa\" en=\"At Home\" />}\n        description={\n          <Translate\n            pt=\"Você se lembra quantos doces eles levaram?\"\n            en=\"Do you remember how much candy they took?\"\n          />\n        }\n      />\n      <div className=\"n-players-decision__divider\" />\n      <DecisionSection\n        players={players}\n        playersInSection={goingHomePlayerIds}\n        icon={<WalkIcon className=\"svg-mirror\" />}\n        title={<Translate pt=\"Voltando pra Casa\" en=\"Going Home\" />}\n        description={\n          <Translate\n            pt={\n              <>\n                Cada um levou {candyInHand + cashedInCandy} <IconAvatar icon={<CandyIcon />} size=\"small\" />{' '}\n                pra casa.\n              </>\n            }\n            en={\n              <>\n                Each one took {candyInHand + cashedInCandy} <IconAvatar icon={<CandyIcon />} size=\"small\" />{' '}\n                home.\n              </>\n            }\n          />\n        }\n      />\n      <div className=\"n-players-decision__divider\" />\n      <DecisionSection\n        players={players}\n        playersInSection={continuingPlayerIds}\n        icon={phase === 'STREET_END' ? <ScaredIcon /> : <TrickOrTreatIcon />}\n        title={\n          <>\n            {phase === 'TRICK_OR_TREAT' && (\n              <Translate pt=\"Continua ou Volta?\" en=\"Continuing or Going Home?\" />\n            )}\n            {phase === 'RESULT' && <Translate pt=\"Continuando\" en=\"Continuing\" />}\n            {phase === 'STREET_END' && <Translate pt=\"Continuariam\" en=\"Would continue\" />}\n          </>\n        }\n        description={\n          phase === 'STREET_END' ? (\n            <Translate\n              pt={\n                <>\n                  Perderam {candyInHand} <IconAvatar icon={<CandyIcon />} size=\"small\" />.\n                </>\n              }\n              en={\n                <>\n                  Lost {candyInHand} <IconAvatar icon={<CandyIcon />} size=\"small\" /> .\n                </>\n              }\n            />\n          ) : (\n            <Translate\n              pt={\n                <>\n                  Cada um tem {candyInHand} <IconAvatar icon={<CandyIcon />} size=\"small\" /> na sacolinha.\n                </>\n              }\n              en={\n                <>\n                  Each one has {candyInHand} <IconAvatar icon={<CandyIcon />} size=\"small\" /> in their bag.\n                </>\n              }\n            />\n          )\n        }\n      />\n    </div>\n  );\n}\n\ntype DecisionSectionProps = {\n  players: GamePlayers;\n  playersInSection: PlayerId[];\n  icon: ReactNode;\n  title: ReactNode;\n  description: ReactNode;\n};\n\nfunction DecisionSection({ players, playersInSection, icon, title, description }: DecisionSectionProps) {\n  const hasPlayers = playersInSection.length > 0;\n\n  return (\n    <div className={clsx('n-players-decision__section', !hasPlayers && 'n-players-decision__section--empty')}>\n      <h3\n        className={clsx(\n          'n-players-decision__title',\n          !hasPlayers && getAnimationClass('fadeOut') && 'n-players-decision__title--empty'\n        )}\n      >\n        <IconAvatar icon={icon} />\n        {title}\n      </h3>\n\n      <ul className=\"n-players-decision__players\">\n        {hasPlayers &&\n          playersInSection.map((playerId) => {\n            const player = players[playerId];\n            return (\n              <span key={`going-home-player-${player.id}`} className=\"n-players-decision__player\">\n                <CostumeAvatar id={player.avatarId} costumeId={player.costumeId} />\n                {player.name}\n              </span>\n            );\n          })}\n      </ul>\n      <p className={clsx('n-players-decision__info', !hasPlayers && 'n-players-decision__info--empty')}>\n        {hasPlayers && description}\n      </p>\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useCountdown } from 'hooks/useCountdown';\n// Utils\nimport { NOOP } from 'utils/constants';\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { ImageCard } from 'components/cards';\n\ntype NewHouseCardProps = {\n  /**\n   * The candy, monster, jackpot card\n   */\n  card: NCard;\n};\n\nexport function NewHouseCard({ card }: NewHouseCardProps) {\n  const { dualTranslate } = useLanguage();\n\n  const baseClass = 'n-new-house-card';\n  const cardBaseClass = 'n-new-house-card__card';\n\n  const { timeLeft } = useCountdown({\n    duration: 3,\n    onExpire: () => NOOP,\n  });\n\n  return (\n    <div\n      className={clsx(\n        `${baseClass}`,\n        timeLeft > 0 ? getAnimationClass('bounceIn') : getAnimationClass('bounceOut')\n      )}\n    >\n      <div className={clsx(`${baseClass}--container`, `${baseClass}--${card.type}`)}>\n        <ImageCard imageId={card.key} cardWidth={200} className={clsx(cardBaseClass)} />\n\n        <h3 className={`${baseClass}__name`}>{dualTranslate(card.name)}</h3>\n      </div>\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useMock } from 'hooks/useMock';\nimport { useLoading } from 'hooks/useLoading';\n// Utils\nimport { mockPlayerDecision } from './utils/mock';\n// Icons\nimport { WalkIcon } from 'icons/WalkIcon';\nimport { HouseIcon } from 'icons/HouseIcon';\nimport { IconAvatar } from 'components/avatars/IconAvatar';\n// Components\nimport { CandyCount } from './components/CandyCount';\nimport { PlayerStats } from './components/PlayerStats';\nimport { CardCountExplanation, DecisionExplanation } from './components/RulesBlobs';\nimport { Street } from './components/Street';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { PopoverRule } from 'components/rules';\nimport { TransparentButton } from 'components/buttons';\nimport { CandyHighlight, TitleIPadHighlight } from './components/Highlights';\nimport { getAnimationClass } from 'utils/helpers';\nimport { PlayersDecisionState } from './components/PlayersDecisionState';\nimport { NewHouseCard } from './components/NewHouseCard';\n\ntype StepMakeDecisionProps = {\n  players: GamePlayers;\n  user: GamePlayer;\n  street: NStreet;\n  currentCard: NCard;\n  onSubmitDecision: GenericFunction;\n  continuingPlayerIds: PlayerId[];\n  alreadyAtHomePlayerIds: PlayerId[];\n  candySidewalk: CandySidewalk;\n  totalCandyInSidewalk: number;\n  candyInHand: number;\n  candyPerPlayer: number;\n  cashedInCandy: number;\n};\n\nexport function StepMakeDecision({\n  players,\n  street,\n  currentCard,\n  candySidewalk,\n  totalCandyInSidewalk,\n  continuingPlayerIds,\n  alreadyAtHomePlayerIds,\n  onSubmitDecision,\n  user,\n  candyPerPlayer,\n  candyInHand,\n}: StepMakeDecisionProps) {\n  const { dualTranslate } = useLanguage();\n  const { isLoading } = useLoading();\n\n  // DEV: make decision\n  useMock(() => {\n    if (user.isTrickOrTreating && !user.ready) {\n      onSubmitDecision({\n        decision: mockPlayerDecision(street.filter((card) => card.type === 'horror').length, user.hand),\n      });\n    }\n  }, [user.isTrickOrTreating, user.ready]);\n\n  return (\n    <Step fullWidth className=\"n-step-trick-or-treat\">\n      <Title size=\"medium\" white className={clsx('n-title', getAnimationClass('tada'))} level={2}>\n        <Translate pt=\"Continua ou Volta pra Casa?\" en=\"Next House or Go Home?\" />\n      </Title>\n\n      <Title size=\"small\" white level={3} className=\"n-subtitle\">\n        {currentCard.type === 'candy' && (\n          <Translate\n            pt={\n              <>\n                Que delícia! <CandyHighlight>{currentCard.value}</CandyHighlight>! Cada criança ganha{' '}\n                <CandyHighlight type=\"positive\">{candyPerPlayer}</CandyHighlight> !\n              </>\n            }\n            en={\n              <>\n                Yummy! <CandyCount candyCount={currentCard.value} size=\"large\" />! {candyPerPlayer} for each\n                one of us!\n              </>\n            }\n          />\n        )}\n        {currentCard.type === 'horror' && (\n          <Translate\n            pt={`Ahh! Cruz credo! Um(a) ${dualTranslate(currentCard.name)} super assustador(a)!`}\n            en={`Ahh! Yikes! A very scary ${dualTranslate(currentCard.name)}!`}\n          />\n        )}\n        {currentCard.type === 'jackpot' && (\n          <Translate\n            pt={\n              <>\n                Um <TitleIPadHighlight>iPad</TitleIPadHighlight>! Mas somente uma criança pode ficar com\n                ele...\n              </>\n            }\n            en={\n              <>\n                An <TitleIPadHighlight>iPad</TitleIPadHighlight>! But only one kid can keep it...\n              </>\n            }\n          />\n        )}\n      </Title>\n\n      <PopoverRule content={<CardCountExplanation />} />\n\n      <PlayersDecisionState\n        players={players}\n        goingHomePlayerIds={[]}\n        continuingPlayerIds={continuingPlayerIds}\n        alreadyAtHomePlayerIds={alreadyAtHomePlayerIds ?? []}\n        cashedInCandy={0}\n        candyInHand={candyInHand}\n        phase=\"TRICK_OR_TREAT\"\n      />\n\n      <Street street={street} currentCard={currentCard} candySidewalk={candySidewalk} />\n\n      <NewHouseCard card={currentCard} />\n\n      {user.isTrickOrTreating ? (\n        <DecisionExplanation user={user} totalCandyInSidewalk={totalCandyInSidewalk} />\n      ) : (\n        <Instruction contained>\n          <Translate\n            pt={\n              <>\n                Essa é a nova casa! Mas você já voltou para sua casa, então, apenas observe.\n                <br />\n                Você não tem que fazer nada.\n              </>\n            }\n            en={\n              <>\n                A new house! But you are already home, so, just chill.\n                <br />\n                You don't have to do anything.\n              </>\n            }\n          />\n        </Instruction>\n      )}\n\n      {user.isTrickOrTreating && !user.ready && (\n        <div className=\"n-decision-buttons-container\">\n          <TransparentButton\n            className=\"n-decision-button n-decision-button--home\"\n            onClick={() => onSubmitDecision({ decision: 'GO_HOME' })}\n            disabled={isLoading || user.ready}\n          >\n            <IconAvatar icon={<HouseIcon />} size=\"large\" />\n            <Translate pt=\"Voltar pra casa\" en=\"Go back home\" />\n          </TransparentButton>\n          <TransparentButton\n            className=\"n-decision-button n-decision-button--continue\"\n            onClick={() => onSubmitDecision({ decision: 'CONTINUE' })}\n            disabled={isLoading || user.ready}\n          >\n            <IconAvatar icon={<WalkIcon />} size=\"large\" />\n            <Translate pt=\"Continuar para a próxima casa\" en=\"Continue trick or treating\" />\n          </TransparentButton>\n        </div>\n      )}\n\n      <PlayerStats user={user} omitDecision={!user.ready} />\n    </Step>\n  );\n}\n","// Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitDecisionAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { StreetIcon } from 'icons/StreetIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { RoundAnnouncement } from 'components/round';\nimport { ImageCardPreloadHand } from 'components/cards';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { StepMakeDecision } from './StepMakeDecision';\nimport { PlayerStats } from './components/PlayerStats';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\n\nfunction PhaseTrickOrTreat({ state, players, info }: PhaseProps) {\n  const user = useUser(players, state);\n\n  const isNewStreet = state.street.length === 0;\n  const { step, goToNextStep, setStep } = useStep(isNewStreet ? 0 : 2);\n\n  const onSubmitDecision = useOnSubmitDecisionAPIRequest(setStep);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.NA_RUA_DO_MEDO.TRICK_OR_TREAT}>\n      <StepSwitcher\n        step={step}\n        conditions={[!user.isReady]}\n        players={players}\n        waitingRoomContent={<PlayerStats user={user} />}\n      >\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state.round}\n          buttonText=\" \"\n          onPressButton={goToNextStep}\n          time={5}\n          circleColor={info?.appearance?.color}\n        >\n          <Instruction contained>\n            <Translate\n              pt={`Vamos pegar doces na Rua do Medo ${state.round.current} de ${state.round.total}`}\n              en={`Let's get candy on Fear Street ${state.round.current} of ${state.round.total}`}\n            />\n          </Instruction>\n          <ImageCardPreloadHand hand={[state.currentCard.key]} />\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <PhaseAnnouncement\n          icon={<StreetIcon />}\n          title={<Translate pt=\"Gostosuras ou Travessuras?\" en=\"Trick or Treat?\" />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          duration={5}\n          type=\"block\"\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  Nova rua! Vamos de porta em porta pegar doces!\n                  <br />\n                  Espero que essa rua não dê medo...\n                </>\n              }\n              en={\n                <>\n                  New street! Let's go door to door to get candy!\n                  <br />I hope this street is not scary...\n                </>\n              }\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 2 */}\n        <StepMakeDecision\n          players={players}\n          street={state.street}\n          currentCard={state.currentCard}\n          candySidewalk={state.candySidewalk}\n          cashedInCandy={state.cashedInCandy}\n          candyPerPlayer={state.candyPerPlayer}\n          candyInHand={state.candyInHand}\n          totalCandyInSidewalk={state.totalCandyInSidewalk}\n          continuingPlayerIds={state.continuingPlayerIds}\n          alreadyAtHomePlayerIds={state.alreadyAtHomePlayerIds}\n          onSubmitDecision={onSubmitDecision}\n          user={user}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseTrickOrTreat;\n","import { NA_RUA_DO_MEDO_API } from 'services/adapters';\nimport { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\n\nexport function useOnSubmitDecisionAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: NA_RUA_DO_MEDO_API.submitAction,\n    actionName: 'submit-decision',\n    onSuccess: () => {\n      window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n    },\n    successMessage: translate('Decisão submetida com sucesso', 'Decision submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua decisão',\n      'Oops, the application found an error while trying to submit your decision'\n    ),\n  });\n\n  return (payload: SubmitDecisionPayload) => {\n    request({\n      action: 'SUBMIT_DECISION',\n      ...payload,\n    });\n  };\n}\n","import clsx from 'clsx';\n// Hooks\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { PlayerStats } from './components/PlayerStats';\nimport { Street } from './components/Street';\nimport { CardCountExplanation } from './components/RulesBlobs';\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { PopoverRule } from 'components/rules';\nimport { VIPNextPhaseButton } from 'components/vip';\nimport { PlayersDecisionState } from './components/PlayersDecisionState';\n\ntype StepResultProps = {\n  players: GamePlayers;\n  street: NStreet;\n  currentCard: NCard;\n  candySidewalk: CandySidewalk;\n  cashedInCandy: number;\n  user: GamePlayer;\n  alreadyAtHomePlayerIds: PlayerId[];\n  continuingPlayerIds: PlayerId[];\n  goingHomePlayerIds: PlayerId[];\n  candyInHand: number;\n};\n\nexport function StepResult({\n  players,\n  street,\n  currentCard,\n  candySidewalk,\n  user,\n  cashedInCandy,\n  alreadyAtHomePlayerIds,\n  continuingPlayerIds,\n  goingHomePlayerIds,\n  candyInHand,\n}: StepResultProps) {\n  useTemporarilyHidePlayersBar();\n\n  return (\n    <Step fullWidth>\n      <Title size=\"medium\" white className={clsx('n-title', getAnimationClass('fadeIn'))} level={2}>\n        <Translate pt=\"Decisões\" en=\"Decisions\" />:\n      </Title>\n\n      <Title size=\"small\" white level={3} className={clsx('n-subtitle', getAnimationClass('fadeIn', 1))}>\n        {goingHomePlayerIds.length === 0 && (\n          <Translate pt=\"Todos continuaram...\" en=\"Everybody will continue...\" />\n        )}\n\n        {goingHomePlayerIds.length === 1 && (\n          <Translate pt=\"Olha o cagão voltando pra casa...\" en=\"Look at this scared cat going back home...\" />\n        )}\n        {goingHomePlayerIds.length > 1 && (\n          <Translate\n            pt=\"Olha os cagões voltando pra casa...\"\n            en=\"Look at these scared cats going back home...\"\n          />\n        )}\n      </Title>\n\n      <PopoverRule content={<CardCountExplanation />} />\n\n      <PlayersDecisionState\n        players={players}\n        goingHomePlayerIds={goingHomePlayerIds ?? []}\n        continuingPlayerIds={continuingPlayerIds}\n        alreadyAtHomePlayerIds={alreadyAtHomePlayerIds ?? []}\n        cashedInCandy={cashedInCandy}\n        candyInHand={candyInHand}\n        phase=\"RESULT\"\n      />\n\n      <Street street={street} currentCard={currentCard} candySidewalk={candySidewalk} />\n\n      <VIPNextPhaseButton autoTriggerTime={10}>\n        <Translate pt=\"Próxima Casa\" en=\"Next House\" />\n      </VIPNextPhaseButton>\n\n      <PlayerStats user={user} />\n    </Step>\n  );\n}\n","// Hooks\nimport { useUser } from 'hooks/useUser';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { StepResult } from './StepResult';\nimport { PhaseContainer } from 'components/phases';\n\nfunction PhaseResult({ state, players, info }: PhaseProps) {\n  const user = useUser(players, state);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.NA_RUA_DO_MEDO.RESULT}>\n      {/* Step 1 */}\n      <StepResult\n        players={players}\n        street={state.street}\n        currentCard={state.currentCard}\n        candySidewalk={state.candySidewalk}\n        cashedInCandy={state.cashedInCandy}\n        candyInHand={state.candyInHand}\n        user={user}\n        alreadyAtHomePlayerIds={state.alreadyAtHomePlayerIds}\n        continuingPlayerIds={state.continuingPlayerIds}\n        goingHomePlayerIds={state.goingHomePlayerIds}\n      />\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseResult;\n","// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { PlayerStats } from './components/PlayerStats';\nimport { Street } from './components/Street';\nimport { CardCountExplanation } from './components/RulesBlobs';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { PopoverRule } from 'components/rules';\nimport { VIPNextPhaseButton } from 'components/vip';\nimport { PlayersDecisionState } from './components/PlayersDecisionState';\n\ntype StepStreetEndProps = {\n  street: NStreet;\n  currentCard: NCard;\n  candySidewalk: CandySidewalk;\n  user: GamePlayer;\n  isDoubleHorror: boolean;\n  round: GameRound;\n  players: GamePlayers;\n  alreadyAtHomePlayerIds: PlayerId[];\n  goingHomePlayerIds: PlayerId[];\n  continuingPlayerIds: PlayerId[];\n  candyInHand: number;\n};\n\nexport function StepStreetEnd({\n  street,\n  currentCard,\n  candySidewalk,\n  user,\n  isDoubleHorror,\n  round,\n  players,\n  alreadyAtHomePlayerIds,\n  goingHomePlayerIds,\n  continuingPlayerIds,\n  candyInHand,\n}: StepStreetEndProps) {\n  const { language } = useLanguage();\n\n  const monsterName = currentCard?.name?.[language] ?? '';\n\n  return (\n    <Step fullWidth>\n      <Title size=\"medium\" white>\n        {isDoubleHorror ? (\n          <Translate\n            pt={<>Um segundo {monsterName} surgiu do nada!</>}\n            en={<>A second {monsterName} came out of nowhere!</>}\n          />\n        ) : (\n          <Translate pt=\"Todo mundo voltou pra casa...\" en=\"Everybody went back home for now...\" />\n        )}\n      </Title>\n\n      <PopoverRule content={<CardCountExplanation />} />\n\n      <Instruction contained>\n        {isDoubleHorror && (\n          <>\n            <Translate\n              pt={<>Jogamos todos os doces pra cima e corremos desesperados pra casa!</>}\n              en={<>We threw all candy in the air and ran desperately home!</>}\n            />\n            <br />\n          </>\n        )}\n        {round.current < round.total && monsterName && (\n          <>\n            <Translate\n              pt={<>Uma carta do {monsterName} será removida, menos chances dele aparece novamente!</>}\n              en={<>One of the {monsterName} will be removed, so less chances of it showing up again!</>}\n            />\n            <br />\n          </>\n        )}\n\n        {round.current === round.total ? (\n          <Translate\n            pt=\"E a noite chegou ao fim... Hora de comer gostosuras!\"\n            en=\"And the night is over... Time to eat candy!\"\n          />\n        ) : (\n          <Translate pt=\"Próxima rua?\" en=\"Let's hit the next street?\" />\n        )}\n      </Instruction>\n\n      <PlayersDecisionState\n        players={players}\n        goingHomePlayerIds={[]}\n        continuingPlayerIds={continuingPlayerIds}\n        alreadyAtHomePlayerIds={[...goingHomePlayerIds, ...alreadyAtHomePlayerIds]}\n        cashedInCandy={0}\n        candyInHand={candyInHand}\n        phase=\"STREET_END\"\n      />\n\n      <Street street={street} currentCard={currentCard} candySidewalk={candySidewalk} />\n\n      <VIPNextPhaseButton>\n        {round.current < round.total ? <Translate pt=\"Próxima Casa\" en=\"Next House\" /> : 'Game Over'}\n      </VIPNextPhaseButton>\n\n      <PlayerStats user={user} />\n    </Step>\n  );\n}\n","// Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { ScaredIcon } from 'icons/ScaredIcon';\nimport { HouseIcon } from 'icons/HouseIcon';\n// Components\nimport { Translate } from 'components/language';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { StepStreetEnd } from './StepStreetEnd';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\n\nfunction PhaseStreetEnd({ state, players, info }: PhaseProps) {\n  const { step, goToNextStep } = useStep(0);\n  const user = useUser(players, state);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.NA_RUA_DO_MEDO.STREET_END}>\n      <StepSwitcher step={step} conditions={[!user.isReady]} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={state.isDoubleHorror ? <ScaredIcon /> : <HouseIcon />}\n          title={<Translate pt=\"Fim da Rua\" en=\"End of the Street\" />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          duration={3}\n          type=\"block\"\n        >\n          <Instruction>\n            {state.isDoubleHorror ? (\n              <Translate pt=\"Corre cambada!!!\" en=\"Run for your life!!!\" />\n            ) : (\n              <Translate pt=\"E todo mundo foi pra casa...\" en=\"And everybody went home...\" />\n            )}\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepStreetEnd\n          street={state.street}\n          currentCard={state.currentCard}\n          candySidewalk={state.candySidewalk}\n          user={user}\n          isDoubleHorror={state.isDoubleHorror}\n          round={state.round}\n          players={players}\n          alreadyAtHomePlayerIds={state.alreadyAtHomePlayerIds}\n          goingHomePlayerIds={state.goingHomePlayerIds}\n          continuingPlayerIds={state.continuingPlayerIds}\n          candyInHand={state.candyInHand}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseStreetEnd;\n","import { orderBy } from 'lodash';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useUser } from 'hooks/useUser';\n// Utils\nimport { AVATARS } from 'utils/avatars';\nimport { achievementsReference } from './utils/achievements';\n// Icons\nimport { PoopIcon } from 'icons/PoopIcon';\n// Components\nimport { CandyCount } from './components/CandyCount';\nimport { PlayerStats } from './components/PlayerStats';\nimport { GameOverWrapper } from 'components/game-over';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { Achievements } from 'components/general/Achievements';\nimport { CostumeAvatar } from './components/CostumeAvatar';\n\nconst GRID_REPEAT: NumberDictionary = {\n  3: 3,\n  4: 4,\n  5: 5,\n  6: 3,\n  7: 4,\n  8: 4,\n  9: 5,\n  10: 5,\n};\n\nfunction PhaseGameOver({ state, players, info }: PhaseProps) {\n  const { language } = useLanguage();\n  const user = useUser(players, state);\n\n  const winningPlayersIds = state.winners.map((player: GamePlayer) => player.id);\n  const nonWinningPlayers = orderBy(\n    Object.values(players).filter((player) => !winningPlayersIds.includes(player.id)),\n    'score',\n    'desc'\n  );\n\n  return (\n    <GameOverWrapper\n      info={info}\n      state={state}\n      players={players}\n      announcementIcon={<PoopIcon />}\n      announcementDuration={6}\n      announcementContent={\n        <Instruction>\n          <Translate\n            pt=\"O jogador que comeu mais doces, teve uma caganeira horrível, mas é o campeão é...\"\n            en=\"The player who ate candy the most, had a terrible diarrhea, but it's the winner is...\"\n          />\n        </Instruction>\n      }\n    >\n      <Instruction contained>\n        <p>\n          <Translate pt=\"com\" en=\"with\" />\n        </p>\n        <ul className=\"n-game-over-players\">\n          {state.winners.map((player: GamePlayer) => {\n            return (\n              <div className=\"n-game-over-player\">\n                <CostumeAvatar\n                  key={`winner-${player.id}`}\n                  id={state.winners[0].avatarId}\n                  costumeId={player.costumeId}\n                />\n                <div>\n                  <CandyCount candyCount={player.score} size=\"default\" />\n                </div>\n              </div>\n            );\n          })}\n        </ul>\n      </Instruction>\n\n      <ul\n        className=\"n-game-over-players\"\n        style={{ gridTemplateColumns: `repeat(${GRID_REPEAT?.[Object.keys(players).length] ?? 5}, 1fr)` }}\n      >\n        {nonWinningPlayers.map((player) => (\n          <li className=\"n-game-over-player\" key={`game-over-player-${player.id}`}>\n            <div className=\"n-game-over-player__name\">\n              <CostumeAvatar id={player.avatarId} costumeId={player.costumeId} />\n              <br />\n              <strong>{player.name}</strong>, {AVATARS[player.avatarId].description[language]}\n            </div>\n            <div className=\"n-game-over-player__candy\">\n              <CandyCount candyCount={player.score} size=\"small\" />\n            </div>\n          </li>\n        ))}\n      </ul>\n\n      <Achievements players={players} achievements={state.achievements} reference={achievementsReference} />\n\n      <PlayerStats user={user} />\n    </GameOverWrapper>\n  );\n}\n\nexport default PhaseGameOver;\n","import { ConfigProvider } from 'antd';\n// Constants\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport PhaseTrickOrTreat from './PhaseTrickOrTreat';\nimport PhaseResult from './PhaseResult';\nimport PhaseStreetEnd from './PhaseStreetEnd';\nimport PhaseGameOver from './PhaseGameOver';\n// Sass\nimport './na-rua-do-medo.scss';\n\nfunction getActiveComponent(phase: string) {\n  switch (phase) {\n    case PHASES.DEFAULT.LOBBY:\n      return PhaseLobby;\n    case PHASES.DEFAULT.RULES:\n      return PhaseRules;\n    case PHASES.DEFAULT.SETUP:\n      return PhaseSetup;\n    case PHASES.NA_RUA_DO_MEDO.TRICK_OR_TREAT:\n      return PhaseTrickOrTreat;\n    case PHASES.NA_RUA_DO_MEDO.RESULT:\n      return PhaseResult;\n    case PHASES.NA_RUA_DO_MEDO.STREET_END:\n      return PhaseStreetEnd;\n    case PHASES.DEFAULT.GAME_OVER:\n      return PhaseGameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionNaRuaDoMedo() {\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorPrimary: THEME_COLORS.ORANGE,\n          colorLink: THEME_COLORS.ORANGE,\n        },\n      }}\n    >\n      <Session gameCollection={GAME_COLLECTION.NA_RUA_DO_MEDO} getActiveComponent={getActiveComponent} />\n    </ConfigProvider>\n  );\n}\n\nexport default SessionNaRuaDoMedo;\n","// Ant Design Resources\nimport { Avatar } from 'antd';\n// Icons\nimport { CandyIcon } from 'icons/CandyIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\n\ntype CandyCountProps = {\n  candyCount: number;\n  size?: 'small' | 'default' | 'large';\n};\n\nexport function CandyCount({ candyCount, size = 'small' }: CandyCountProps) {\n  return (\n    <>\n      <IconAvatar icon={<CandyIcon />} size={size} />\n      <Avatar size={size} style={{ backgroundColor: 'hotPink' }}>\n        {candyCount}\n      </Avatar>\n    </>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Tooltip } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { ImageCard } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { CandyCount } from './CandyCount';\n\ntype HouseCardProps = {\n  /**\n   * The candy, monster, jackpot card\n   */\n  card: NCard;\n  /**\n   * The quantity of candy left in the sidewalk\n   */\n  candyLeftover: number;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Unique id\n   */\n  id?: string;\n  /**\n   * If the house is the last one\n   */\n  active?: boolean;\n  /**\n   * Enables or disables preview\n   */\n  preview?: boolean;\n};\n\nexport function HouseCard({\n  card,\n  candyLeftover,\n  id,\n  className = '',\n  active = false,\n  preview,\n}: HouseCardProps) {\n  const { dualTranslate } = useLanguage();\n\n  const baseClass = 'n-house-card';\n  const cardBaseClass = 'n-house-card__card';\n\n  return (\n    <div\n      className={clsx(baseClass, `${baseClass}--${card.type}`, active && `${baseClass}--active`, className)}\n      id={id}\n    >\n      <div className=\"n-house-card__sidewalk\">\n        {card.type === 'candy' && candyLeftover > 0 && (\n          <Tooltip\n            color=\"hotPink\"\n            title={\n              <Translate\n                pt=\"Doces que não foram divididos entre os jogadores\"\n                en=\"Candy that wasn't shared between players\"\n              />\n            }\n          >\n            <CandyCount candyCount={candyLeftover} />\n          </Tooltip>\n        )}\n      </div>\n      <ImageCard imageId={card.key} cardWidth={80} className={clsx(cardBaseClass)} preview={preview} />\n\n      <h3 className={`${baseClass}__name`}>{dualTranslate(card.name)}</h3>\n\n      {active && (\n        <span\n          className={clsx(`${baseClass}__active`, getAnimationClass('heartBeat', undefined, 'slow', true))}\n        />\n      )}\n    </div>\n  );\n}\n","import { MedalCandyIcon } from 'icons/MedalCandyIcon';\nimport { MedalCloverIcon } from 'icons/MedalCloverIcon';\nimport { MedalDollarSignIcon } from 'icons/MedalDollarSignIcon';\nimport { MedalHouseIcon } from 'icons/MedalHouseIcon';\nimport { MedalScaredIcon } from 'icons/MedalScaredIcon';\nimport { MedalSwordIcon } from 'icons/MedalSwordIcon';\nimport { MedalWideIcon } from 'icons/MedalWideIcon';\n\nexport const achievementsReference: AchievementReference = {\n  BRAVEST: {\n    Icon: MedalSwordIcon,\n    title: {\n      pt: 'Mais Corajoso',\n      en: 'Bravest',\n    },\n    description: {\n      pt: 'Encontrou o maior número de monstros',\n      en: 'Encounter the most number of monsters',\n    },\n  },\n  LUCKIEST: {\n    Icon: MedalCloverIcon,\n    title: {\n      pt: 'Mais Sortudo',\n      en: 'Luckiest',\n    },\n    description: {\n      pt: 'Encontrou o menor número de monstros',\n      en: 'Encounter the fewest monsters',\n    },\n  },\n  CANDY_LOSER: {\n    Icon: MedalCandyIcon,\n    title: {\n      pt: 'Mais Desesperado',\n      en: 'Most Desperate',\n    },\n    description: {\n      pt: 'Perdeu mais doces para ataques dos monstros',\n      en: 'Lost the most number of candy for a double monster',\n    },\n  },\n  MOST_SCARED: {\n    Icon: MedalScaredIcon,\n    title: {\n      pt: 'Mais Assustado',\n      en: 'Most Scared',\n    },\n    description: {\n      pt: 'Visitou o menor número de casas',\n      en: 'Visited the fewest houses',\n    },\n  },\n  MOST_HOUSES: {\n    Icon: MedalHouseIcon,\n    title: {\n      pt: 'Mais Andador',\n      en: 'Most Houses',\n    },\n    description: {\n      pt: 'Visitou o maior número de casas',\n      en: 'Visited the most houses',\n    },\n  },\n  MOST_JACKPOTS: {\n    Icon: MedalDollarSignIcon,\n    title: {\n      pt: 'Mais Boladas',\n      en: 'Most Jackpots',\n    },\n    description: {\n      pt: 'Ganhou mais boladas',\n      en: 'Got the most jackpots',\n    },\n  },\n  MOST_SIDEWALK: {\n    Icon: MedalWideIcon,\n    title: {\n      pt: 'Mais Mendigo',\n      en: 'Most Sidewalk Candy',\n    },\n    description: {\n      pt: 'Catou mais doces da calçada',\n      en: 'Got the most candy from the sidewalk',\n    },\n  },\n};\n\nexport default achievementsReference;\n","export function MedalScaredIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffe07d\"\n        d=\"M186.3 499l-22.2-41.8a10.41 10.41 0 00-12.2-5.1L106.7 466a10.4 10.4 0 01-13-6.9 10.51 10.51 0 01.3-7l79.8-192.6 111.1 46-79.8 192.6a10.41 10.41 0 01-13.6 5.6 10 10 0 01-5.2-4.7z\"\n      ></path>\n      <path\n        fill=\"#ffd064\"\n        d=\"M226.4 281.3l-70.5 170.4a10.55 10.55 0 018.3 5.5l22.1 41.8a10.4 10.4 0 0018.8-.9l79.8-192.6z\"\n      ></path>\n      <path\n        fill=\"#ffe07d\"\n        d=\"M325.5 499l22.2-41.8a10.41 10.41 0 0112.2-5.1l45.2 13.9a10.4 10.4 0 0013-6.9 10.51 10.51 0 00-.3-7L338 259.5l-111 46 79.8 192.6a10.41 10.41 0 0013.6 5.6 10.15 10.15 0 005.1-4.7z\"\n      ></path>\n      <path\n        fill=\"#ffd064\"\n        d=\"M417.8 452.1L338 259.5l-58.2 24.1L350.4 454a10.46 10.46 0 019.5-1.8l45.2 13.9a10.4 10.4 0 0013-6.9 10.77 10.77 0 00-.3-7.1z\"\n      ></path>\n      <path\n        fill=\"#e8ae4d\"\n        d=\"M275.9 14.5a32.14 32.14 0 0029.6 5.5 32.14 32.14 0 0137.4 14.5 32.14 32.14 0 0025.6 15.8 32.23 32.23 0 0129.6 27 32.22 32.22 0 0018.1 24 32.26 32.26 0 0117.9 35.9 32.51 32.51 0 008.2 29 32.16 32.16 0 013.7 39.9 32.31 32.31 0 00-2.8 30 32.2 32.2 0 01-11 38.5 32.44 32.44 0 00-13.4 26.9 32.19 32.19 0 01-24.1 32 32.3 32.3 0 00-22.2 20.3 32.2 32.2 0 01-34.1 21.1 32.23 32.23 0 00-28.1 10.9 32.25 32.25 0 01-39.4 7.4 32.08 32.08 0 00-30.1 0 32.27 32.27 0 01-39.4-7.4 32.5 32.5 0 00-28.1-10.9 32.32 32.32 0 01-34.1-21.1 32.3 32.3 0 00-22.2-20.3 32.39 32.39 0 01-24.2-32 32.24 32.24 0 00-13.4-27 32.2 32.2 0 01-11-38.5 32.31 32.31 0 00-2.8-30 32.16 32.16 0 013.7-39.9 32 32 0 008.2-29 32.25 32.25 0 0117.9-35.8 32.58 32.58 0 0018.2-24 32.23 32.23 0 0129.6-27 32.25 32.25 0 0025.6-15.9 32.39 32.39 0 0137.4-14.5 32.14 32.14 0 0029.6-5.5 32.44 32.44 0 0140.1.1z\"\n      ></path>\n      <circle cx=\"255.9\" cy=\"202.2\" r=\"142.2\" fill=\"#ffe07d\"></circle>\n      <path\n        fill=\"#ffd064\"\n        d=\"M255.9 60a146.64 146.64 0 00-31.7 3.5 142.24 142.24 0 010 277.3c76.6 17.5 152.8-30.5 170.3-107a142.08 142.08 0 00-107-170.2 140.52 140.52 0 00-31.6-3.6z\"\n      ></path>\n      <path d=\"M452.3 210.2a39.44 39.44 0 00-4.6-49.2 24.79 24.79 0 01-6.3-22.2 39.48 39.48 0 00-22-44.2 24.81 24.81 0 01-13.9-18.4A39.58 39.58 0 00369 42.9a24.56 24.56 0 01-19.6-12.2 39.47 39.47 0 00-46.1-17.8 25 25 0 01-22.7-4.2 39.68 39.68 0 00-49.4 0 24.44 24.44 0 01-22.7 4.2 39.77 39.77 0 00-46.1 17.8 24.71 24.71 0 01-19.6 12.2 39.58 39.58 0 00-36.5 33.3 24.46 24.46 0 01-13.9 18.4 39.54 39.54 0 00-22 44.2 24.79 24.79 0 01-6.3 22.2 39.69 39.69 0 00-4.6 49.2 24.45 24.45 0 012.1 23 39.64 39.64 0 0013.5 47.5 24.86 24.86 0 0110.3 20.7 39.6 39.6 0 0029.8 39.4 25.09 25.09 0 0113.2 8.6l-41.3 99.8a17.87 17.87 0 009.7 23.4 18.28 18.28 0 0012.2.6l45.2-13.9a3 3 0 013.4 1.4l22.2 41.8a17.88 17.88 0 0032.3-1.5l43.1-104h1.7L300 501a17.92 17.92 0 0023.4 9.7 18.67 18.67 0 009-8.1l22.2-41.8a3 3 0 013.4-1.4l45.2 13.9a17.82 17.82 0 0021.7-23.9l-41.3-99.8a24.51 24.51 0 0113.2-8.6 39.6 39.6 0 0029.8-39.4 24.86 24.86 0 0110.3-20.7 39.55 39.55 0 0013.5-47.5 24.79 24.79 0 011.9-23.2zm-254.2 285a2.91 2.91 0 01-3.8 1.6 3.74 3.74 0 01-1.5-1.3l-22.2-41.8a17.84 17.84 0 00-21-8.7l-45.2 13.9a2.81 2.81 0 01-3.6-1.9 2.74 2.74 0 01.1-2l36.7-88.5a39.54 39.54 0 0036.7 16 24.9 24.9 0 0121.5 8.3 39.37 39.37 0 0040.6 12.2zm209.3-36.4l-45.2-13.9a17.91 17.91 0 00-21 8.7l-22.3 41.9a2.92 2.92 0 01-3.9 1.2 2.43 2.43 0 01-1.3-1.5L275.5 403a39.51 39.51 0 0040.5-12.3 24.81 24.81 0 0121.5-8.4 39.78 39.78 0 0036.7-15.9l36.7 88.6a2.91 2.91 0 01-1.6 3.8 2.5 2.5 0 01-1.9 0zM439.8 202a39.58 39.58 0 00-3.4 37 24.65 24.65 0 01-8.4 29.5 39.43 39.43 0 00-16.5 33.2 24.49 24.49 0 01-18.5 24.5 40 40 0 00-24.6 18.7v.1a43.87 43.87 0 00-2.9 6.2 24.65 24.65 0 01-26.1 16.2 39.85 39.85 0 00-34.6 13.4 24.49 24.49 0 01-30.2 5.6 38.17 38.17 0 00-10.9-3.8h-.1a38.38 38.38 0 00-15.1 0h-.1a35.56 35.56 0 00-10.9 3.9 24.6 24.6 0 01-30.2-5.6 39.85 39.85 0 00-34.6-13.4 24.58 24.58 0 01-26.1-16.2 38.66 38.66 0 00-2.9-6.2v-.1a39.79 39.79 0 00-24.5-18.7 24.49 24.49 0 01-18.5-24.5 39.78 39.78 0 00-16.6-33.2 24.43 24.43 0 01-8.4-29.5 39.58 39.58 0 00-3.4-37 24.62 24.62 0 012.9-30.6 39.72 39.72 0 0010.2-35.7 24.67 24.67 0 0113.7-27.5 39.71 39.71 0 0022.4-29.6A24.49 24.49 0 01144.2 58a39.93 39.93 0 0031.6-19.5 24.65 24.65 0 0128.7-11.1 40 40 0 0036.5-6.8 24.66 24.66 0 0130.8 0 39.62 39.62 0 0036.5 6.8A24.78 24.78 0 01337 38.5 39.75 39.75 0 00368.5 58a24.69 24.69 0 0122.7 20.7 39.71 39.71 0 0022.4 29.6 24.73 24.73 0 0113.7 27.5 40 40 0 0010.1 35.7 25.1 25.1 0 012.4 30.5z\"></path>\n      <path d=\"M113.9 192.1a7.59 7.59 0 008.4-6.5c8.2-67.3 65.7-118.1 133.6-118.1a134.77 134.77 0 01133.7 118.1 7.46 7.46 0 007.4 6.6 2.77 2.77 0 00.9-.1 7.48 7.48 0 006.5-8.4c-9.1-74.7-73-131.2-148.5-131.2S116.5 109 107.3 183.8a7.44 7.44 0 006.6 8.3zM398 212.3a7.59 7.59 0 00-8.4 6.5 134.73 134.73 0 01-267.4 0 7.51 7.51 0 10-14.9 1.9c9.2 74.8 73.1 131.2 148.6 131.2s139.4-56.5 148.6-131.3a7.44 7.44 0 00-6.5-8.3z\"></path>\n      <path fill=\"none\" d=\"M0 0h512v512H0z\"></path>\n      <ellipse cx=\"255.9\" cy=\"194.71\" fill=\"#ffe07d\" rx=\"96.33\" ry=\"94.24\"></ellipse>\n      <path\n        fill=\"#ffd064\"\n        d=\"M320.57 264.55C186.83 272.72 175.21 169.2 229.65 104c-40.44 11.18-70.08 47.55-70.08 90.7 0 52 43.13 94.24 96.33 94.24a97.16 97.16 0 0064.67-24.4z\"\n      ></path>\n      <ellipse cx=\"201.68\" cy=\"183.75\" fill=\"#e8ae4d\" rx=\"20.01\" ry=\"15.93\"></ellipse>\n      <ellipse cx=\"310.12\" cy=\"183.75\" fill=\"#e8ae4d\" rx=\"20.01\" ry=\"15.93\"></ellipse>\n      <path\n        fill=\"#ffd064\"\n        d=\"M273.96 180.25a11.86 11.86 0 00-5.75-10.17 23.92 23.92 0 00-24.62 0 11.86 11.86 0 00-5.75 10.17v57.47a18.06 18.06 0 1036.12 0v-57.47z\"\n      ></path>\n      <circle cx=\"213.2\" cy=\"156.35\" r=\"19.17\" fill=\"#fff\"></circle>\n      <circle cx=\"298.6\" cy=\"156.35\" r=\"19.17\" fill=\"#fff\"></circle>\n      <path\n        fill=\"#e8ae4d\"\n        d=\"M180.3 207.4l13 11.6c8.65 7.77 11.31 9.72 14.51 13.66a49.25 49.25 0 0111.33 30.07l.89 15.25a21.47 21.47 0 11-42.87 0l.92-15.55a9.67 9.67 0 00-1.71-7.27l-3.25-3.66-17.4-19.57a17.38 17.38 0 0124.58-24.53zm151.21 0L318.46 219c-8.64 7.77-11.3 9.72-14.51 13.66a49.33 49.33 0 00-11.33 30.07l-.89 15.25a21.47 21.47 0 1042.87 0c0-.06-.89-15.33-.92-15.55a9.67 9.67 0 011.71-7.27l3.25-3.66 17.41-19.57a17.38 17.38 0 00-24.54-24.53z\"\n      ></path>\n      <path d=\"M241.97 167.37a15.11 15.11 0 00-7.28 12.88v57.47a21.22 21.22 0 0042.43 0v-57.47a15.11 15.11 0 00-7.28-12.88 27.11 27.11 0 00-27.87 0zm28.84 70.35a14.91 14.91 0 01-29.81 0v-57.47a8.74 8.74 0 014.22-7.47 20.8 20.8 0 0121.37 0 8.76 8.76 0 014.22 7.47v57.47zm-62.45-81.37a4.84 4.84 0 104.84-4.83 4.84 4.84 0 00-4.84 4.83zm85.41 0a4.84 4.84 0 104.83-4.83 4.83 4.83 0 00-4.83 4.83zm61.19 47.3a95.49 95.49 0 00-15.54-61.87 3.15 3.15 0 10-5.26 3.48 89.21 89.21 0 0114.74 55.43 20.52 20.52 0 00-19.49 4.31l-13.06 11.61c-8.65 7.79-11.45 9.84-14.83 14a52.07 52.07 0 00-12 31.27c0 .21-.94 15.81-.94 15.88q-.06 1.13 0 2.25a95.46 95.46 0 01-65.3 0c.07-2.3-.83-15-1-18.13a52 52 0 00-12-31.24c-3.4-4.18-6.19-6.23-14.86-14l-13-11.6a20.5 20.5 0 00-19.52-4.35c-3.55-52.79 39.25-97.07 93-97.07a94.3 94.3 0 0169.32 30.23 3.16 3.16 0 004.65-4.27 100.62 100.62 0 00-74-32.27c-58.23 0-104.43 48.83-99.05 106.34a20.53 20.53 0 00-4.92 28.48 3.16 3.16 0 105.17-3.62 14.23 14.23 0 0121.13-18.76l13 11.59c8.61 7.75 11.16 9.61 14.2 13.33a45.87 45.87 0 0110.55 27.51c0 .38-.09-1.52.94 16a18.32 18.32 0 11-36.57 0c.05-.82.81-13.88.91-15.34a12.87 12.87 0 00-2.24-9.43l-11.94-13.63a3.16 3.16 0 00-4.72 4.19l9 10.27 2.57 2.86a6.46 6.46 0 011.1 4.79c-.07.41-1 15.88-1 15.92a24.63 24.63 0 0048.17 8.56 101.72 101.72 0 0067.36 0 24.63 24.63 0 0048.17-8.55s-.89-15.51-1-15.93a6.46 6.46 0 011.1-4.79l3.11-3.5L358.4 234a20.53 20.53 0 00-3.44-30.38zM222.26 262a2.07 2.07 0 010 .23c.03-.06.01-.13 0-.23zm67.24.23V262c.03.1.02.17 0 .25zm64.19-32.41l-17.4 19.57c-1.06 1.2-3.27 3.65-3.49 4a12.78 12.78 0 00-2.24 9.43l.9 15.33a18.32 18.32 0 01-36.42 3.69c-.46-4.52.22-6.51.79-19.65a45.8 45.8 0 0110.58-27.53c2.66-3.27 2.72-3.12 27.21-24.9a14.23 14.23 0 0120.08 20.09z\"></path>\n    </svg>\n  );\n}\n","export function QuestionIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#0573ce\"\n        d=\"M441.421 22.803H70.579C35.741 22.803 7.5 51.045 7.5 85.882v262.21c0 34.838 28.241 63.079 63.079 63.079h91.616l66.896 66.896c14.861 14.861 38.956 14.861 53.817 0l66.896-66.896h91.616c34.838 0 63.079-28.241 63.079-63.079V85.882c.001-34.837-28.24-63.079-63.078-63.079z\"\n      ></path>\n      <path\n        fill=\"#0067c5\"\n        d=\"M35.51 85.882v262.21c0 34.84 28.24 63.08 63.08 63.08H70.58c-34.84 0-63.08-28.24-63.08-63.08V85.882c0-34.84 28.24-63.08 63.08-63.08h28.01c-34.84 0-63.08 28.24-63.08 63.08zm234.5 400.66c-13.68 5.41-29.86 2.58-40.92-8.48l-66.89-66.89h20.665c4.697 0 9.201 1.865 12.522 5.186l61.713 61.704c3.8 3.8 8.21 6.63 12.91 8.48z\"\n      ></path>\n      <path\n        fill=\"#f9f7f8\"\n        d=\"M256.002 297.061c-14.574 0-26.39-11.815-26.39-26.39v-11.194c0-26.048 16.402-49.348 40.816-57.979 18.364-6.493 30.197-24.654 28.774-44.162-1.557-21.362-18.853-38.527-40.231-39.927-22.612-1.494-42.759 14.837-45.872 37.149a44.164 44.164 0 00-.419 6.076c0 14.574-11.815 26.39-26.39 26.39-14.574 0-26.39-11.815-26.39-26.39 0-4.468.312-8.966.926-13.369 6.914-49.552 51.539-85.807 101.592-82.522 47.518 3.112 85.961 41.269 89.423 88.756 3.146 43.161-23.098 83.361-63.82 97.76-3.368 1.191-5.631 4.494-5.631 8.219v11.194c.002 14.574-11.813 26.389-26.388 26.389zm0 78.522c-14.574 0-26.39-11.815-26.39-26.39v-.219c0-14.574 11.815-26.39 26.39-26.39 14.574 0 26.39 11.815 26.39 26.39v.219c0 14.575-11.815 26.39-26.39 26.39z\"\n      ></path>\n      <path\n        fill=\"#dedbee\"\n        d=\"M184.155 147.268a96.29 96.29 0 00-.923 13.366c0 10.387 5.997 19.376 14.723 23.674a26.227 26.227 0 01-11.665 2.715c-14.565 0-26.389-11.81-26.389-26.389 0-4.468.316-8.963.936-13.366 6.907-49.562 51.539-85.81 101.588-82.528 1.793.119 3.572.29 5.339.514-42.378 5.219-77.532 38.489-83.609 82.014zm109.603 54.228c-24.412 8.634-40.822 31.938-40.822 57.985v11.191c0 10.387 6.011 19.377 14.737 23.674a26.227 26.227 0 01-11.665 2.715c-14.579 0-26.389-11.81-26.389-26.389V259.48c0-26.046 16.398-49.351 40.822-57.985 18.362-6.498 30.185-24.649 28.762-44.157-1.331-18.348-14.275-33.599-31.451-38.41a43.132 43.132 0 0114.552-1.516c21.38 1.397 38.674 18.559 40.229 39.926 1.423 19.509-10.414 37.659-28.775 44.158zm-26.086 171.37a26.227 26.227 0 01-11.665 2.715c-14.579 0-26.389-11.81-26.389-26.389v-.224c0-14.565 11.81-26.389 26.389-26.389 4.192 0 8.146.975 11.665 2.715-8.726 4.31-14.737 13.3-14.737 23.674v.224c0 10.387 6.011 19.376 14.737 23.674z\"\n      ></path>\n      <path d=\"M256 496.692c-11.667 0-23.332-4.44-32.213-13.321l-64.693-64.704H70.58c-38.918 0-70.58-31.662-70.58-70.58V85.878c0-38.913 31.662-70.57 70.58-70.57h370.84c38.918 0 70.58 31.657 70.58 70.57v262.21c0 31.374-21.052 59.288-51.193 67.883a7.499 7.499 0 01-9.269-5.156 7.5 7.5 0 015.156-9.269c23.731-6.767 40.306-28.75 40.306-53.458V85.878c0-30.641-24.933-55.57-55.58-55.57H70.58C39.933 30.308 15 55.236 15 85.878v262.21c0 30.647 24.933 55.58 55.58 55.58h91.62c1.989 0 3.897.79 5.304 2.197l66.89 66.9c11.914 11.914 31.299 11.914 43.213 0l66.889-66.9a7.5 7.5 0 015.304-2.197h74.12a7.5 7.5 0 010 15h-71.013l-64.693 64.703c-8.881 8.881-20.548 13.321-32.214 13.321z\"></path>\n      <path d=\"M256 304.558c-18.687 0-33.89-15.203-33.89-33.89v-11.19c0-29.219 18.414-55.362 45.82-65.051 15.19-5.37 24.973-20.396 23.79-36.541-1.281-17.655-15.571-31.837-33.24-32.994-18.715-1.231-35.38 12.253-37.952 30.702a36.335 36.335 0 00-.348 5.044c0 18.687-15.203 33.89-33.89 33.89s-33.89-15.203-33.89-33.89c0-4.841.338-9.692 1.003-14.417a102.082 102.082 0 018.645-29.195 7.5 7.5 0 0113.584 6.362 87.145 87.145 0 00-7.374 24.918 88.583 88.583 0 00-.858 12.331c0 10.416 8.474 18.89 18.89 18.89s18.89-8.474 18.89-18.89c0-2.405.166-4.802.493-7.126 3.65-26.185 27.296-45.335 53.79-43.588 25.097 1.644 45.397 21.794 47.217 46.871 1.675 22.865-12.203 44.157-33.751 51.774-21.425 7.575-35.82 28.033-35.82 50.909v11.19c0 10.416 8.474 18.89 18.89 18.89s18.89-8.474 18.89-18.89v-11.19c0-6.901 4.273-13.047 10.633-15.292 37.546-13.274 61.742-50.343 58.837-90.142-3.189-43.774-38.626-78.945-82.43-81.812-24.875-1.633-49.509 7.462-67.584 24.956a7.499 7.499 0 01-10.605-.174 7.5 7.5 0 01.173-10.605c21.112-20.432 49.903-31.056 78.998-29.145 51.231 3.353 92.678 44.49 96.408 95.689 3.396 46.521-24.896 89.854-68.8 105.376-.314.111-.63.541-.63 1.149v11.19c.001 18.687-15.202 33.891-33.889 33.891zm.002 78.525c-18.687 0-33.89-15.203-33.89-33.89v-.219c0-18.687 15.203-33.89 33.89-33.89s33.89 15.203 33.89 33.89v.219c0 18.687-15.203 33.89-33.89 33.89zm0-52.998c-10.416 0-18.89 8.474-18.89 18.89v.219c0 10.416 8.474 18.89 18.89 18.89s18.89-8.474 18.89-18.89v-.219c0-10.416-8.474-18.89-18.89-18.89z\"></path>\n    </svg>\n  );\n}\n","export function ScaredIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <ellipse cx=\"256.01\" cy=\"242.035\" fill=\"#a2ddfd\" rx=\"228.989\" ry=\"224.02\"></ellipse>\n      <path\n        fill=\"#7acdf9\"\n        d=\"M409.744 408.066C91.82 427.476 64.192 181.406 193.608 26.433 97.466 53.009 27.021 139.473 27.021 242.035c0 123.723 102.522 224.02 228.989 224.02 59.167.001 113.096-21.955 153.734-57.989z\"\n      ></path>\n      <ellipse cx=\"127.128\" cy=\"215.984\" fill=\"#6a95d6\" rx=\"47.555\" ry=\"37.87\"></ellipse>\n      <ellipse cx=\"384.892\" cy=\"215.984\" fill=\"#6a95d6\" rx=\"47.555\" ry=\"37.87\"></ellipse>\n      <path\n        fill=\"#4e5660\"\n        d=\"M298.938 207.672c0-9.9-5.18-19.089-13.666-24.19-8.55-5.14-18.559-8.097-29.263-8.097s-20.713 2.958-29.263 8.097a28.222 28.222 0 00-13.666 24.19v136.605c0 23.709 19.22 42.928 42.928 42.928 23.709 0 42.928-19.22 42.928-42.928V207.672z\"\n      ></path>\n      <g fill=\"#fff\">\n        <circle cx=\"154.502\" cy=\"150.864\" r=\"45.58\"></circle>\n        <circle cx=\"357.518\" cy=\"150.864\" r=\"45.58\"></circle>\n      </g>\n      <path\n        fill=\"#a2ddfd\"\n        d=\"M76.284 272.196l31.011 27.579c20.549 18.483 26.875 23.107 34.496 32.47 27.968 33.671 26.497 69.603 26.926 71.477l2.123 36.251c1.648 28.14-19.828 52.289-47.968 53.937-29.753 1.743-55.558-22.475-53.937-53.937.007-.138 2.121-36.441 2.181-36.947.98-5.618-.147-11.572-4.06-17.282l-7.734-8.701-41.369-46.517c-15.164-17.05-13.634-43.166 3.417-58.33 15.831-14.079 39.475-13.762 54.914 0z\"\n      ></path>\n      <path\n        fill=\"#7acdf9\"\n        d=\"M435.736 272.196l-31.011 27.579c-20.549 18.483-26.875 23.107-34.496 32.47-27.968 33.671-26.497 69.603-26.926 71.477l-2.123 36.251c-1.648 28.14 19.828 52.289 47.968 53.937 29.753 1.743 55.558-22.475 53.937-53.937-.007-.138-2.121-36.441-2.181-36.947-.98-5.618.147-11.572 4.06-17.282l7.734-8.701 41.369-46.517c15.164-17.051 13.634-43.167-3.417-58.331-15.831-14.078-39.475-13.761-54.914.001z\"\n      ></path>\n      <path d=\"M222.883 177.053c-10.672 6.415-17.302 18.147-17.302 30.619v136.604c0 27.806 22.622 50.428 50.429 50.428s50.429-22.622 50.429-50.428V207.672c0-12.471-6.63-24.203-17.302-30.618-20.328-12.22-45.907-12.231-66.254-.001zm68.556 167.223c0 19.535-15.893 35.428-35.429 35.428-19.535 0-35.429-15.893-35.429-35.428V207.672c0-7.237 3.843-14.043 10.03-17.763 15.575-9.362 35.207-9.371 50.797.001 6.188 3.719 10.03 10.525 10.03 17.762v136.604zM143.002 150.864c0 6.352 5.149 11.501 11.501 11.501s11.501-5.149 11.501-11.501-5.149-11.501-11.501-11.501-11.501 5.149-11.501 11.501zm203.015 0c0 6.352 5.149 11.501 11.501 11.501s11.5-5.149 11.5-11.501-5.149-11.501-11.5-11.501c-6.352 0-11.501 5.149-11.501 11.501zm145.463 112.43c4.895-52.397-8.283-103.859-36.925-147.088a7.5 7.5 0 00-12.504 8.286c25.695 38.782 38.109 84.725 34.947 131.756-15.731-4.634-33.304-1.191-46.253 10.35L399.709 294.2c-20.569 18.502-27.227 23.396-35.25 33.254-12.186 14.671-27.031 39.476-28.544 74.332-.021.496-2.213 37.591-2.223 37.751a59.472 59.472 0 00-.064 5.337c-48.55 17.778-104.111 18.721-155.237 0 .17-5.471-1.963-35.59-2.287-43.088-1.514-34.855-16.358-59.66-28.496-74.273-8.086-9.934-14.725-14.805-35.329-33.34L81.274 266.6c-12.95-11.542-30.522-14.985-46.253-10.351C26.586 130.763 128.34 25.515 256.01 25.515c62.749 0 122.811 26.186 164.787 71.842a7.5 7.5 0 0011.043-10.152c-44.809-48.737-108.895-76.69-175.83-76.69-138.418 0-248.24 116.073-235.47 252.779-22.084 15.735-26.926 45.987-11.765 67.691a7.5 7.5 0 0010.443 1.854 7.5 7.5 0 001.854-10.443c-9.8-14.029-7.529-33.201 5.283-44.594 12.582-11.191 31.944-11.589 44.945 0l30.979 27.551c20.473 18.414 26.535 22.831 33.742 31.686 10.714 12.898 23.765 34.714 25.097 65.397.039.886-.228-3.616 2.234 37.978 1.408 24.019-16.893 44.604-40.919 46.011-25.07 1.48-47.41-18.855-46.01-46.035.109-1.941 1.923-32.994 2.148-36.477 1.246-7.756-.592-15.495-5.329-22.407-.069-.101-28.285-32.306-28.375-32.407a7.5 7.5 0 00-11.209 9.968c.572.643 21.444 24.521 21.343 24.407l6.112 6.875c2.412 3.677 3.291 7.506 2.613 11.388-.166.976-2.277 37.751-2.282 37.851-1.814 35.18 26.116 61.911 58.454 61.91 26.457 0 48.777-17.524 56.04-41.581 51.575 18.19 108.515 18.208 160.14 0 6.83 22.621 27.228 39.994 52.629 41.482 33.971 1.979 63.731-25.627 61.866-61.796-.005-.1-2.115-36.88-2.283-37.865-.678-3.882.201-7.711 2.613-11.388l7.402-8.328 41.363-46.51c19.112-21.488 15.765-55.152-8.188-72.218zM176.029 402.053c.028.122.071.3.103.536a7.667 7.667 0 00-.103-.536zm159.86.536c.031-.236.074-.414.103-.536a6.659 6.659 0 00-.103.536zm152.573-77.047l-41.369 46.517.009.007-.002.002-.009-.007c-2.52 2.866-7.79 8.678-8.314 9.443-4.737 6.912-6.575 14.651-5.329 22.407.226 3.479 2.039 34.535 2.146 36.449 1.406 27.274-20.982 47.529-46.008 46.063-21.282-1.246-37.768-17.447-40.566-37.298-1.092-10.738.516-15.454 1.881-46.691 1.331-30.684 14.383-52.499 25.144-65.455 6.332-7.781 6.465-7.411 64.68-59.185 20.948-18.673 54.57-4.957 56.226 23.298.529 9.017-2.486 17.701-8.489 24.45z\"></path>\n    </svg>\n  );\n}\n"],"names":["MORE_CONTINUE","MORE_HOME","mockPlayerDecision","horrorLength","hand","decision","getRandomItem","PlayerStats","user","omitDecision","title","pt","en","icon","TrickOrTreatIcon","className","player","withName","size","DecisionIcon","totalCandy","jackpots","length","map","jackpot","imageId","key","cardWidth","id","QuestionIcon","shape","WalkIcon","HouseIcon","CandyHighlight","children","type","clsx","TitleIPadHighlight","TabletIcon","CANDY_VALUES","DecisionExplanation","totalCandyInSidewalk","isThereAnyCandy","Boolean","contained","CardCountExplanation","join","Street","street","currentCard","candySidewalk","useEffect","streetEl","document","getElementById","currentCardEl","scrollLeft","offsetLeft","style","backgroundImage","PUBLIC_URL","card","index","HouseCard","candyLeftover","leftover","undefined","getAnimationClass","active","PlayersDecisionState","players","goingHomePlayerIds","continuingPlayerIds","alreadyAtHomePlayerIds","cashedInCandy","candyInHand","phase","DecisionSection","playersInSection","description","ScaredIcon","hasPlayers","playerId","CostumeAvatar","avatarId","costumeId","name","NewHouseCard","dualTranslate","useLanguage","baseClass","timeLeft","useCountdown","duration","onExpire","NOOP","StepMakeDecision","onSubmitDecision","candyPerPlayer","isLoading","useLoading","useMock","isTrickOrTreating","ready","filter","fullWidth","white","level","value","CandyCount","candyCount","content","onClick","disabled","state","info","useUser","isNewStreet","useStep","step","goToNextStep","setStep","translate","request","useAPICall","apiFunction","NA_RUA_DO_MEDO_API","actionName","onSuccess","window","scrollTo","top","left","behavior","successMessage","errorMessage","payload","action","useOnSubmitDecisionAPIRequest","allowedPhase","PHASES","conditions","isReady","waitingRoomContent","round","buttonText","onPressButton","time","circleColor","appearance","color","current","total","StreetIcon","onClose","currentRound","StepResult","useTemporarilyHidePlayersBar","autoTriggerTime","StepStreetEnd","isDoubleHorror","language","monsterName","GRID_REPEAT","winningPlayersIds","winners","nonWinningPlayers","orderBy","Object","values","includes","announcementIcon","PoopIcon","announcementDuration","announcementContent","score","gridTemplateColumns","keys","AVATARS","Achievements","achievements","reference","achievementsReference","getActiveComponent","PhaseLobby","PhaseRules","PhaseSetup","PhaseTrickOrTreat","PhaseResult","PhaseStreetEnd","PhaseGameOver","PageError","theme","token","colorPrimary","THEME_COLORS","colorLink","gameCollection","GAME_COLLECTION","backgroundColor","preview","BRAVEST","Icon","MedalSwordIcon","LUCKIEST","MedalCloverIcon","CANDY_LOSER","MedalCandyIcon","MOST_SCARED","MedalScaredIcon","MOST_HOUSES","MedalHouseIcon","MOST_JACKPOTS","MedalDollarSignIcon","MOST_SIDEWALK","MedalWideIcon","props","xmlns","viewBox","fill","d","cx","cy","r","rx","ry"],"sourceRoot":""}