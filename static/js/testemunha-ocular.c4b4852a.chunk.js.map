{"version":3,"file":"static/js/testemunha-ocular.c4b4852a.chunk.js","mappings":"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","sources":["components/cards/Card.tsx","components/image-cards/ImageBlurButton.tsx","components/image-cards/ImageBlurButtonContainer.tsx","components/image-cards/ImageCard.tsx","components/image-cards/ImageCardBack.tsx","components/image-cards/ImageCardButton.tsx","components/image-cards/ImageCardHand.tsx","components/image-cards/ImageCardPreloadHand.tsx","components/image-cards/ImageCardSelectButton.tsx","components/metrics/PlayersHighlight.tsx","components/metrics/TimeHighlight.tsx","components/steps/StepSelectPlayer.tsx","components/views/View.tsx","components/views/ViewIf.tsx","components/views/ViewOr.tsx","components/views/ViewSwitch.tsx","games/testemunha-ocular/utils/constants.ts","games/testemunha-ocular/PhaseWitnessSelection.tsx","games/testemunha-ocular/utils/api-requests.ts","games/testemunha-ocular/components/QuestionsHistory.tsx","games/testemunha-ocular/components/Suspects.tsx","games/testemunha-ocular/StepQuestionWaiting.tsx","games/testemunha-ocular/StepSelectQuestion.tsx","games/testemunha-ocular/PhaseQuestionSelection.tsx","games/testemunha-ocular/StepQuestioning.tsx","games/testemunha-ocular/PhaseQuestioning.tsx","games/testemunha-ocular/StepSuspectElimination.tsx","games/testemunha-ocular/PhaseTrial.tsx","games/testemunha-ocular/components/TextBlobs.tsx","games/testemunha-ocular/PhaseGameOver.tsx","games/testemunha-ocular/SessionTestemunhaOcular.tsx","hooks/useWhichPlayerIsThe.ts","icons/EyeIcon.tsx","icons/InvestigationIcon.tsx","icons/LawIcon.tsx","icons/NewspaperIcon.tsx"],"sourcesContent":["import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Utils\nimport { getColorFromLetter } from 'utils/helpers';\n// Sass\nimport './Card.scss';\n\ntype CardProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  header?: string;\n  footer?: string;\n  color?: string;\n  size?: 'small' | 'medium' | 'large';\n  randomColor?: boolean;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  headerClassName?: string;\n  footerClassName?: string;\n  hideHeader?: boolean;\n};\nexport const Card = ({\n  children,\n  header = 'Carta',\n  footer,\n  color = 'none',\n  size = 'medium',\n  randomColor = false,\n  className = '',\n  headerClassName = '',\n  footerClassName = '',\n  hideHeader = false,\n}: CardProps) => {\n  const baseClass = 'card';\n\n  const bgColor = randomColor\n    ? getColorFromLetter(\n        typeof children === 'string'\n          ? children[0].toUpperCase()\n          : header !== 'Carta'\n          ? header[0].toUpperCase()\n          : 'X'\n      )\n    : color;\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, className)}>\n      {!hideHeader && (\n        <span\n          className={clsx(`${baseClass}__header`, `color-background--${bgColor}`, headerClassName)}\n          style={color.startsWith('#') ? { backgroundColor: color } : {}}\n        >\n          {header}\n        </span>\n      )}\n      <span className={`${baseClass}__text`}>{children}</span>\n      {footer && <span className={clsx(`${baseClass}__footer`, footerClassName)}>{footer}</span>}\n    </div>\n  );\n};\n","// Ant Design Resources\nimport { EyeInvisibleOutlined, EyeOutlined } from '@ant-design/icons';\nimport { Button, Tooltip } from 'antd';\n// Hooks\nimport { useBlurCards } from 'hooks/useBlurCards';\n// Components\nimport { Translate } from 'components/language';\n// Sass\nimport './ImageBlurButton.scss';\n\ntype ImageBlurButtonProps = {\n  /**\n   * The card to be blurred\n   */\n  cardId: string;\n  /**\n   * Determines if the button is ghost or not (default: true)\n   */\n  ghost?: boolean;\n};\n\nexport function ImageBlurButton({ cardId, ghost = true }: ImageBlurButtonProps) {\n  const { blurCard, isBlurEnabled, shouldBeBlurred } = useBlurCards();\n\n  return isBlurEnabled ? (\n    <Tooltip\n      placement=\"top\"\n      title={\n        <Translate\n          pt=\"Aperte o botão para embaçar a foto caso você tenha alguma fobia\"\n          en=\"Use this button to blur the image in case of any phobia\"\n        />\n      }\n    >\n      <Button ghost={ghost} onClick={() => blurCard(cardId)} size=\"small\" className=\"image-blur-button\">\n        {shouldBeBlurred(cardId) ? (\n          <>\n            <EyeOutlined /> <Translate pt=\"Descredar\" en=\"Focus\" />\n          </>\n        ) : (\n          <>\n            <EyeInvisibleOutlined /> <Translate pt=\"Credo\" en=\"Blur\" />\n          </>\n        )}\n      </Button>\n    </Tooltip>\n  ) : (\n    <></>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Internal\nimport { ImageBlurButton } from './ImageBlurButton';\n// Sass\nimport './ImageBlurButtonContainer.scss';\n\ninterface ImageBlurButtonContainerProps extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * The card to be blurred\n   */\n  cardId: string;\n  /**\n   * The content the component is wrapping\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * The position of the button (default: bottom)\n   */\n  position?: 'top' | 'bottom';\n  /**\n   * Determines if the button is ghost or not (default: true)\n   */\n  ghost?: boolean;\n}\n\nexport function ImageBlurButtonContainer({\n  cardId,\n  children,\n  className = '',\n  position = 'bottom',\n  ghost = true,\n  ...rest\n}: ImageBlurButtonContainerProps) {\n  return (\n    <div className={clsx('image-blur-button-container', className)} {...rest}>\n      {position === 'top' && <ImageBlurButton cardId={cardId} ghost={ghost} />}\n      {children}\n      {position === 'bottom' && <ImageBlurButton cardId={cardId} ghost={ghost} />}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { useMemo } from 'react';\n// Ant Design Resources\nimport { Image, ImageProps } from 'antd';\n// Hooks\nimport { useBlurCards } from 'hooks/useBlurCards';\nimport { useTDBaseUrl } from 'hooks/useTDBaseUrl';\n// Utils\nimport { PUBLIC_URL } from 'utils/constants';\n// Images\nimport placeholder from 'assets/images/placeholder.jpg';\n// Sass\nimport './ImageCard.scss';\n// Assets\n\nexport type ImageCardProps = {\n  /**\n   * The id of the image\n   */\n  id: string;\n  /**\n   * The width of the card (Default: 200px)\n   */\n  cardWidth?: number;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Enables or disables the preview (default: true)\n   */\n  preview?: ImageProps['preview'];\n  /**\n   * Replacement image when the preview is open\n   */\n  previewImageId?: string;\n  /**\n   * The file extension for the image (default: jpg)\n   */\n  fileExtension?: 'jpg' | 'png' | 'gif';\n  /**\n   * Forces height to be the same as the width\n   */\n  square?: boolean;\n  /**\n   * Use classic image library\n   */\n  classic?: boolean;\n};\n\n/**\n * Renders an Image Card on tdi\n */\nexport const ImageCard = ({\n  id,\n  cardWidth = 200,\n  className = '',\n  preview = true,\n  previewImageId = '',\n  fileExtension = 'jpg',\n  square = false,\n  classic = false,\n}: ImageCardProps) => {\n  const { shouldBeBlurred } = useBlurCards();\n  const baseUrl = useTDBaseUrl(classic ? 'classic' : 'images');\n\n  const baseClass = 'image-card';\n\n  const { imageURL, fallbackName } = useMemo(() => {\n    const imageURL = id.replace(/-/g, '/');\n    const numId = Number(imageURL?.split('/')?.at(-1) ?? id[id.length - 1]) % 12;\n\n    const fallbackName = `placeholder-${numId}`;\n    return {\n      imageURL,\n      fallbackName,\n    };\n  }, [id]);\n\n  const isBlurred = shouldBeBlurred(id);\n\n  const previewConfig = typeof preview === 'boolean' ? {} : preview;\n\n  return (\n    <div\n      className={clsx(\n        baseClass,\n        isBlurred && `${baseClass}--blur`,\n        square && `${baseClass}--square`,\n        className\n      )}\n      style={{ height: square ? `${cardWidth}px` : undefined }}\n    >\n      <Image\n        width={cardWidth}\n        src={`${baseUrl}/${imageURL}.${fileExtension}`}\n        placeholder={<Image preview={false} src={placeholder} width={cardWidth} />}\n        fallback={`${PUBLIC_URL.CARDS}${fallbackName}.jpg`}\n        preview={\n          isBlurred || !preview\n            ? false\n            : {\n                ...previewConfig,\n                maskClassName: clsx(`${baseClass}__preview-mask`, previewConfig?.maskClassName),\n                src: Boolean(previewImageId)\n                  ? `${baseUrl}/${previewImageId.replace(/-/g, '/')}.${fileExtension}`\n                  : previewConfig?.src,\n              }\n        }\n      />\n    </div>\n  );\n};\n","// Internal\nimport { ImageCard, ImageCardProps } from './ImageCard';\n\ntype ImageCardBackProps = Omit<ImageCardProps, 'id'> & { id?: ImageCardId };\n\nexport const ImageCardBack = ({ id = 'back-default', ...rest }: ImageCardBackProps) => {\n  return <ImageCard id={id} {...rest} />;\n};\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { DownCircleOutlined, UpCircleOutlined } from '@ant-design/icons';\nimport { Button, ButtonProps } from 'antd';\n// Components\nimport { DebugOnly } from 'components/debug';\nimport { Translate } from 'components/language';\n// Internal\nimport { ImageBlurButtonContainer } from './ImageBlurButtonContainer';\n// Sass\nimport './ImageCardButton.scss';\n//  Components\n\ntype ImageCardButtonProps = {\n  /**\n   * The id of the image\n   */\n  id: string;\n  /**\n   * The content, usually a ImageCard component\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name for the container\n   */\n  className?: string;\n  /**\n   * The position of the button (default: top)\n   */\n  buttonPosition?: 'top' | 'bottom';\n  /**\n   * The button is over the image (default: false)\n   */\n  over?: boolean;\n  /**\n   * Button icon replacement\n   */\n  icon?: ReactNode;\n  /**\n   * The function to be called when the button is clicked\n   */\n  onClick?: (...args: any) => void;\n  /**\n   * Disables the button (default: false)\n   */\n  disabled?: boolean;\n  /**\n   * The text for the button\n   */\n  buttonText?: ReactNode;\n  /**\n   * The props for the button\n   */\n  buttonProps?: Omit<ButtonProps, 'onClick' | 'disabled'>;\n};\n\nexport function ImageCardButton({\n  id,\n  children,\n  className = '',\n  buttonPosition = 'top',\n  over = false,\n  icon,\n  onClick,\n  disabled = false,\n  buttonText,\n  buttonProps = {},\n}: ImageCardButtonProps) {\n  const isTop = buttonPosition === 'top';\n\n  const iconComponent = icon ?? (isTop ? <DownCircleOutlined /> : <UpCircleOutlined />);\n\n  const { className: buttonClassName, ...restButtonProps } = buttonProps;\n\n  const button = onClick ? (\n    <Button\n      shape=\"round\"\n      size=\"small\"\n      ghost={over}\n      className={clsx(\n        'image-card-button__button',\n        over && 'image-card-button__button--over',\n        over && `image-card-button__button--over-${buttonPosition}`,\n        buttonClassName\n      )}\n      onClick={() => onClick(id)}\n      disabled={disabled}\n      {...restButtonProps}\n    >\n      {iconComponent}\n      {buttonText ?? <Translate pt=\"Selecionar\" en=\"Select\" />}\n      {iconComponent}\n    </Button>\n  ) : (\n    <></>\n  );\n\n  return (\n    <div className={clsx('image-card-button', className)}>\n      <ImageBlurButtonContainer cardId={id} position={buttonPosition === 'bottom' ? 'top' : 'bottom'}>\n        <DebugOnly>{id}</DebugOnly>\n        <div className=\"image-card-button__container\">\n          {isTop && button}\n          {children}\n          {!isTop && button}\n        </div>\n      </ImageBlurButtonContainer>\n    </div>\n  );\n}\n","import { ImageCard, ImageCardButton } from '.';\nimport clsx from 'clsx';\nimport { LegacyRef, ReactNode } from 'react';\n// Ant Design Resources\nimport { GetProps, Image } from 'antd';\n// Hooks\nimport { useCardWidthByContainerRef } from 'hooks/useCardWidth';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Sass\nimport './ImageCardHand.scss';\n\ntype ImageCardHandProps = {\n  /**\n   * The list of card ids\n   */\n  hand: ImageCardId[];\n  /**\n   * Function to trigger when clicking on the select button\n   */\n  onSelectCard?: GenericFunction;\n  /**\n   * Select button custom label\n   */\n  selectButtonText?: ReactNode;\n  /**\n   * Select button custom icon\n   */\n  selectButtonIcon?: ReactNode;\n  /**\n   * Select button custom class\n   */\n  selectButtonClass?: string;\n  /**\n   * Disable select button\n   */\n  disabledSelectButton?: boolean;\n  /**\n   * Optional custom class name for the hand container\n   */\n  className?: string;\n  /**\n   * The size of the card\n   */\n  cardSize?: number;\n  /**\n   * If no card size is provided, the ratio is used instead to determine card size (default 8)\n   */\n  sizeRatio?: number;\n  /**\n   * Minimum width of a card (default 80)\n   */\n  minCardSize?: number;\n  /**\n   * Cache showing which cards have been selected and should be highlighted\n   */\n  selectedCards?: BooleanDictionary;\n  /**\n   * Custom card class\n   */\n  cardClassName?: string;\n  /**\n   * Enable preview (default: true)\n   */\n  preview?: boolean;\n  /**\n   * The Image group preview object\n   */\n  imageGroupPreview?: GetProps<typeof Image.PreviewGroup>['preview'];\n};\n\nexport function ImageCardHand({\n  hand = [],\n  onSelectCard,\n  selectButtonText,\n  selectButtonIcon,\n  className = '',\n  selectButtonClass = '',\n  sizeRatio = 8,\n  cardSize,\n  minCardSize = 80,\n  disabledSelectButton = false,\n  selectedCards = {},\n  cardClassName = '',\n  preview = true,\n  imageGroupPreview,\n}: ImageCardHandProps) {\n  // Prefers cardSize otherwise calculates width based on screen and ratio\n  const [cardWidth, containerRef] = useCardWidthByContainerRef(Math.max(sizeRatio, 6), {\n    minWidth: minCardSize,\n  });\n\n  return (\n    <Image.PreviewGroup preview={imageGroupPreview}>\n      <div className={clsx('image-card-hand', className)} ref={containerRef as LegacyRef<HTMLDivElement>}>\n        {hand.map((cardId, index) => {\n          return (\n            <div\n              key={`hand-${cardId}`}\n              className={clsx(\n                'image-card-hand__card-container',\n                getAnimationClass('slideInUp', {\n                  delay: index,\n                })\n              )}\n            >\n              <ImageCardButton\n                onClick={onSelectCard}\n                id={cardId}\n                buttonProps={{ className: selectButtonClass }}\n                icon={selectButtonIcon}\n                buttonText={selectButtonText}\n                disabled={disabledSelectButton}\n              >\n                <ImageCard\n                  id={cardId}\n                  cardWidth={cardSize || cardWidth}\n                  className={clsx(selectedCards[cardId] && 'image-card-hand__selected', cardClassName)}\n                  preview={preview}\n                />\n              </ImageCardButton>\n            </div>\n          );\n        })}\n      </div>\n    </Image.PreviewGroup>\n  );\n}\n","// Internal\nimport { ImageCard } from './ImageCard';\n// Sass\nimport './ImageCardPreloadHand.scss';\n\ntype ImageCardPreloadHandProps = {\n  hand: string[];\n};\nexport function ImageCardPreloadHand({ hand }: ImageCardPreloadHandProps) {\n  if (!hand) return <span></span>;\n  return (\n    <div className=\"image-card-preload-hand\">\n      {hand.map((cardId) => (\n        <ImageCard id={cardId} cardWidth={1} key={`pre-load-${cardId}`} preview={false} />\n      ))}\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { UpCircleOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\n// Components\nimport { Translate } from 'components/language';\n\ntype ImageCardSelectButtonProps = {\n  isSelected?: boolean;\n  cardId: ImageCardId;\n  onClick: GenericFunction;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  selectLabel?: string;\n  deselectLabel?: string;\n};\n\nexport function ImageCardSelectButton({\n  onClick,\n  cardId,\n  selectLabel,\n  deselectLabel,\n  isSelected = false,\n}: ImageCardSelectButtonProps) {\n  return (\n    <Button\n      shape=\"round\"\n      size=\"small\"\n      ghost={!isSelected}\n      className=\"image-card-select-button\"\n      onClick={() => onClick(cardId)}\n    >\n      <UpCircleOutlined />\n      {isSelected ? (\n        <Translate pt=\"Desmarcar\" en=\"Deselect\" custom={deselectLabel} />\n      ) : (\n        <Translate pt=\"Selecionar\" en=\"Select\" custom={selectLabel} />\n      )}\n      <UpCircleOutlined />\n    </Button>\n  );\n}\n","// Icons\nimport { PlayersIcon } from 'icons/PlayersIcon';\n// Components\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function PlayersHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<PlayersIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","// Icons\nimport { ClockIcon } from 'icons/ClockIcon';\n// Components\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function TimeHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<ClockIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","// Ant Design Resources\nimport { Flex } from 'antd';\n// Types\nimport { GamePlayers } from 'types/player';\n// Hooks\nimport { useHost } from 'hooks/useHost';\nimport { useLoading } from 'hooks/useLoading';\n// Utils\nimport { sortPlayers } from 'utils/helpers';\n// Components\nimport { AvatarCard } from 'components/avatars';\nimport { TransparentButton } from 'components/buttons';\nimport { Translate } from 'components/language';\nimport { Step, type StepProps } from 'components/steps';\nimport { Instruction, RuleInstruction, RuleInstructionProps, Title, TitleProps } from 'components/text';\n\ntype StepSelectPlayerProps = {\n  players: GamePlayers;\n  onSubmitPlayer: (playerId: PlayerId) => void;\n  titleProps: TitleProps;\n  ruleInstructionProps: RuleInstructionProps;\n} & Pick<StepProps, 'announcement'>;\n\nexport function StepSelectPlayer({\n  players,\n  announcement,\n  onSubmitPlayer,\n  titleProps,\n  ruleInstructionProps,\n}: StepSelectPlayerProps) {\n  const { isLoading } = useLoading();\n  const isHost = useHost();\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title {...titleProps} />\n\n      <RuleInstruction {...ruleInstructionProps} />\n\n      <Instruction contained>\n        <Flex className=\"space-container\" gap={8} wrap=\"wrap\">\n          {sortPlayers(players).map((player) => {\n            if (isHost) {\n              return (\n                <TransparentButton\n                  key={`p-bt-${player.id}`}\n                  disabled={isLoading}\n                  onClick={() => onSubmitPlayer(player.id)}\n                >\n                  <AvatarCard key={`p-a-${player.id}`} player={player} withName addressUser />\n                </TransparentButton>\n              );\n            }\n\n            return <AvatarCard key={`p-a-${player.id}`} player={player} withName addressUser />;\n          })}\n        </Flex>\n      </Instruction>\n\n      <RuleInstruction type=\"event\">\n        <Translate pt=\"O Anfitrião selecionará o jogador\" en=\"The Host will select the player\" />\n      </RuleInstruction>\n    </Step>\n  );\n}\n","import { ReactNode } from 'react';\n\ntype ViewProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n};\n\nexport function View({ children }: ViewProps) {\n  return <>{children}</>;\n}\n","import { ReactNode } from 'react';\n\ntype ViewIfProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Displays children only if condition is truthy\n   */\n  condition?: boolean;\n};\n\n/**\n * Wrapper component that only renders the children if the condition is truthy\n */\nexport function ViewIf({ condition = false, children }: ViewIfProps) {\n  return condition ? <>{children}</> : <></>;\n}\n","import { ReactNode } from 'react';\n\ntype ViewOrProps = {\n  /**\n   * The content of the component to be toggled\n   */\n  children: [ReactNode, ReactNode];\n  /**\n   * The condition to be met to render the first children\n   */\n  condition?: boolean;\n};\n\n/**\n * View wrapper that renders one of two children depending on a condition\n */\nexport function ViewOr({ condition = false, children }: ViewOrProps) {\n  return condition ? <>{children[0]}</> : <>{children[1]}</>;\n}\n","type ViewSwitchProps = {\n  cases: boolean[];\n  /**\n   * The content of the component\n   */\n  children: any;\n};\n\nexport function ViewSwitch({ cases, children }: ViewSwitchProps) {\n  if (cases.length > 5) {\n    throw Error('ViewSwitch only supports up to 5 cases');\n  }\n\n  if (cases[0] && children[0]) {\n    return children[0];\n  }\n\n  if (cases[1] && children[1]) {\n    return children[1];\n  }\n\n  if (cases[2] && children[2]) {\n    return children[2];\n  }\n\n  if (cases[3] && children[3]) {\n    return children[3];\n  }\n\n  if (cases[4] && children[4]) {\n    return children[4];\n  }\n  console.warn('Rendering all children in the ViewSwitch');\n  return children;\n}\n","export const TESTEMUNHA_OCULAR_ACTIONS = {\n  SELECT_WITNESS: 'SELECT_WITNESS',\n  SELECT_QUESTION: 'SELECT_QUESTION',\n  GIVE_TESTIMONY: 'GIVE_TESTIMONY',\n  ELIMINATE_SUSPECT: 'ELIMINATE_SUSPECT',\n} as const;\n","// Types\nimport { PhaseProps } from 'types/game';\n// Hooks\nimport { useStep } from 'hooks/useStep';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { AnimatedClockIcon } from 'icons/AnimatedClockIcon';\nimport { CrimeSceneIcon } from 'icons/CrimeSceneIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { PlayersHighlight } from 'components/metrics/PlayersHighlight';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { StepSelectPlayer } from 'components/steps/StepSelectPlayer';\nimport { Instruction } from 'components/text';\n// Internal\nimport { useOnSelectWitnessAPIRequest } from './utils/api-requests';\n\nfunction PhaseWitnessSelection({ state, players, info }: PhaseProps) {\n  const { step } = useStep(0);\n\n  const onWitnessButtonClick = useOnSelectWitnessAPIRequest();\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<CrimeSceneIcon />}\n      title={<Translate pt=\"O Caso\" en=\"The Case\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <Instruction>\n        <Translate\n          pt={\n            <>\n              Um crime horrível aconteceu. Tão horrível quem não consigo nem explicar e nem podemos contar com\n              a ciência forense para resolvê-lo. Portanto, só há uma pessoa que pode nos ajudar agora: uma\n              testemunha ocular...\n            </>\n          }\n          en={\n            <>\n              A horrible crime has happened. So horrible that I can't even explain, neither can't rely on\n              forensics and science to solve it. So there's only one person that could help us now: An eye\n              witness...\n            </>\n          }\n        />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  const title = (\n    <>\n      <IconAvatar icon={<AnimatedClockIcon />} size=\"large\" />\n      <br />\n      <Translate pt=\"Quem quer ser a testemunha ocular?\" en=\"Who wants to be the eye witness?\" />\n    </>\n  );\n\n  const ruleInstruction = (\n    <Translate\n      pt={\n        <>\n          Em Testemunha Ocular, um jogador será a testemunha que presenciou um crime desconhecido. Essa\n          testemunha responderá perguntas de sim-ou-não para ajudar os outros jogadores, detetives, a\n          liberarem pelo menos um dos <PlayersHighlight>12 suspeitos</PlayersHighlight> em cada rodada. Você\n          quer ser a testemunha?\n        </>\n      }\n      en={\n        <>\n          In Eye Witness, a player will be the witness who witnessed an unknown crime. This witness will\n          answer yes-or-no questions to help the other players, detective, to release at least one of the{' '}\n          <PlayersHighlight>12 suspects</PlayersHighlight>\n          each round. Do you want to be the witness?\n        </>\n      }\n    />\n  );\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.TESTEMUNHA_OCULAR.WITNESS_SELECTION}\n      className=\"t-phase\"\n    >\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepSelectPlayer\n          players={players}\n          announcement={announcement}\n          titleProps={{\n            children: <>{title}</>,\n          }}\n          ruleInstructionProps={{\n            children: <>{ruleInstruction}</>,\n            type: 'lore',\n          }}\n          onSubmitPlayer={(playerId) => onWitnessButtonClick({ witnessId: playerId })}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseWitnessSelection;\n","// Hooks\nimport { useGameActionRequest } from 'hooks/useGameActionRequest';\nimport { useLanguage } from 'hooks/useLanguage';\n// Internal\nimport { TESTEMUNHA_OCULAR_ACTIONS } from './constants';\n\nexport function useOnSelectWitnessAPIRequest() {\n  const { translate } = useLanguage();\n\n  const request = useGameActionRequest({\n    actionName: 'select-witness',\n    successMessage: translate('Testemunha enviada com sucesso', 'Witness submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar selecionar a testemunha',\n      'Oops, the application found an error while trying to submit the witness'\n    ),\n  });\n\n  return (payload: SelectWitnessPayload) => {\n    request({\n      action: TESTEMUNHA_OCULAR_ACTIONS.SELECT_WITNESS,\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSelectQuestionAPIRequest() {\n  const { translate } = useLanguage();\n\n  const request = useGameActionRequest({\n    actionName: 'select-question',\n    successMessage: translate('Pergunta enviada com sucesso', 'Question submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar pergunta',\n      'Oops, the application found an error while trying to submit question'\n    ),\n  });\n\n  return (payload: SelectQuestionPayload) => {\n    request({\n      action: TESTEMUNHA_OCULAR_ACTIONS.SELECT_QUESTION,\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitTestimonyAPIRequest() {\n  const { translate } = useLanguage();\n\n  const request = useGameActionRequest({\n    actionName: 'submit-testimony',\n    successMessage: translate('Testemunho enviada com sucesso', 'Testimony submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar seu testemunho',\n      'Oops, the application found an error while trying to send your testimony'\n    ),\n  });\n\n  return (payload: SubmitTestimonyPayload) => {\n    request({\n      action: TESTEMUNHA_OCULAR_ACTIONS.GIVE_TESTIMONY,\n      ...payload,\n    });\n  };\n}\n\nexport function useOnEliminateSuspectAPIRequest() {\n  const { translate } = useLanguage();\n\n  const request = useGameActionRequest({\n    actionName: 'eliminate-suspect',\n    successMessage: translate('Suspeito eliminado com sucesso', 'Suspect release submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar eliminar o suspeito',\n      'Oops, the application found an error while trying to release the suspect'\n    ),\n  });\n\n  return (payload: EliminatePayload) => {\n    request({\n      action: TESTEMUNHA_OCULAR_ACTIONS.ELIMINATE_SUSPECT,\n      ...payload,\n    });\n  };\n}\n","// Ant Design Resources\nimport { Tooltip } from 'antd';\n// Icons\nimport { SpeechBubbleAcceptedIcon } from 'icons/SpeechBubbleAcceptedIcon';\nimport { SpeechBubbleDeclinedIcon } from 'icons/SpeechBubbleDeclinedIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { CollapsibleRule } from 'components/rules';\n\ntype QuestionsHistoryProps = {\n  history: THistoryEntry[];\n};\n\nexport function QuestionsHistory({ history }: QuestionsHistoryProps) {\n  return (\n    <CollapsibleRule title={<Translate pt=\"Respostas Anteriores\" en=\"Previous Answers\" />}>\n      <ol>\n        {history.map((entry) => (\n          <li key={`history-entry-${entry.id}`} className=\"t-history__entry\">\n            <span className=\"t-history__question\">{entry.question}</span>\n            {entry.answer ? (\n              <Tooltip title={<Translate pt=\"Sim\" en=\"Yes\" />} className=\"t-history__icon\">\n                <IconAvatar icon={<SpeechBubbleAcceptedIcon />} size=\"small\" />\n              </Tooltip>\n            ) : (\n              <Tooltip title={<Translate pt=\"Não\" en=\"No\" />} className=\"t-history__icon\">\n                <IconAvatar icon={<SpeechBubbleDeclinedIcon />} size=\"small\" />\n              </Tooltip>\n            )}\n          </li>\n        ))}\n      </ol>\n    </CollapsibleRule>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Image, Popconfirm } from 'antd';\n// Types\nimport type { SuspectCard } from 'types/tdr';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\n// Components\nimport { ImageCard } from 'components/image-cards';\nimport { DualTranslate } from 'components/language';\n\ntype SuspectsProps = {\n  suspects: SuspectCard[];\n  perpetrator?: SuspectCard;\n  onCardClick?: GenericFunction;\n  eliminatedSuspects?: string[];\n};\n\nexport function Suspects({ suspects, perpetrator, onCardClick, eliminatedSuspects = [] }: SuspectsProps) {\n  const { language, translate } = useLanguage();\n  const { isLoading } = useLoading();\n  const cardWidth = useCardWidth(7);\n\n  if (onCardClick) {\n    return (\n      <div className=\"t-suspects-table\">\n        {suspects.map((suspect) => {\n          const wasEliminated = eliminatedSuspects.includes(suspect.id);\n          const name = suspect.name[language];\n\n          return (\n            <Popconfirm\n              key={suspect.id}\n              title={translate(\n                `Tem certeza que quer liberar ${name}?`,\n                `Are you sure you want to release ${name}?`\n              )}\n              onConfirm={() => onCardClick(suspect.id)}\n              okText={translate('Sim', 'Yes')}\n              cancelText={translate('Não', 'No')}\n              disabled={wasEliminated || isLoading}\n            >\n              <button\n                className=\"t-suspects-table__suspect t-suspects-table__suspect-button\"\n                disabled={wasEliminated || isLoading}\n              >\n                <ImageCard\n                  id={wasEliminated ? 'us-00' : suspect.id}\n                  className={clsx(\n                    't-suspects-table__suspect-image',\n                    perpetrator?.id === suspect.id && 't-suspects-table__suspect-image--active',\n                    wasEliminated && 't-suspects-table__suspect-image--disabled'\n                  )}\n                  cardWidth={cardWidth}\n                  preview={false}\n                />\n                {!wasEliminated && <div className=\"t-suspects-table__suspect-name\">{name}</div>}\n              </button>\n            </Popconfirm>\n          );\n        })}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"t-suspects-table\">\n      <Image.PreviewGroup>\n        {suspects.map((suspect) => {\n          const wasEliminated = eliminatedSuspects.includes(suspect.id);\n          return (\n            <div className=\"t-suspects-table__suspect\" key={suspect.id}>\n              <ImageCard\n                id={wasEliminated ? 'us-00' : suspect.id}\n                previewImageId={suspect.id}\n                className={clsx(\n                  't-suspects-table__suspect-image',\n                  perpetrator?.id === suspect.id && 't-suspects-table__suspect-image--active'\n                )}\n                cardWidth={cardWidth}\n              />\n              {!wasEliminated && (\n                <div className=\"t-suspects-table__suspect-name\">\n                  <DualTranslate>{suspect.name}</DualTranslate>\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </Image.PreviewGroup>\n    </div>\n  );\n}\n","// Types\nimport type { GamePlayer } from 'types/player';\nimport type { SuspectCard } from 'types/tdr';\n// Icons\nimport { AnimatedClockIcon } from 'icons/AnimatedClockIcon';\n// Components\nimport { AvatarName, IconAvatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { Step, type StepProps } from 'components/steps';\nimport { RuleInstruction, Title } from 'components/text';\n// Internal\nimport { QuestionsHistory } from './components/QuestionsHistory';\nimport { Suspects } from './components/Suspects';\n\ntype StepQuestionWaitingProps = {\n  suspects: SuspectCard[];\n  previouslyEliminatedSuspects: string[];\n  perpetrator: SuspectCard;\n  questioner: GamePlayer;\n  isUserTheWitness: boolean;\n  history: THistoryEntry[];\n} & Pick<StepProps, 'announcement'>;\n\nexport function StepQuestionWaiting({\n  suspects,\n  previouslyEliminatedSuspects,\n  perpetrator,\n  questioner,\n  isUserTheWitness,\n  history,\n  announcement,\n}: StepQuestionWaitingProps) {\n  return (\n    <Step announcement={announcement}>\n      <Title>\n        <IconAvatar icon={<AnimatedClockIcon />} size=\"large\" />\n        <br />\n        <Translate pt={<>Examine os suspeitos</>} en={<>Examine the suspects</>} />\n      </Title>\n      <RuleInstruction type=\"wait\">\n        <Translate\n          pt={\n            <>\n              <AvatarName player={questioner} /> está escolhendo uma pergunta para essa rodada.\n            </>\n          }\n          en={\n            <>\n              <AvatarName player={questioner} /> is picking a question for this round.\n            </>\n          }\n        />{' '}\n        {isUserTheWitness && (\n          <Translate\n            pt=\"O criminoso que você viu está marcado com borda amarela\"\n            en=\"The criminal you saw is highlighted in yellow\"\n          />\n        )}\n      </RuleInstruction>\n\n      <Suspects\n        suspects={suspects}\n        perpetrator={isUserTheWitness ? perpetrator : undefined}\n        eliminatedSuspects={previouslyEliminatedSuspects}\n      />\n\n      {history.length > 0 && <QuestionsHistory history={history} />}\n    </Step>\n  );\n}\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Types\nimport type { SuspectCard } from 'types/tdr';\n// Utils\nimport { LETTERS } from 'utils/constants';\n// Components\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Step, type StepProps } from 'components/steps';\nimport { RuleInstruction, Title } from 'components/text';\n// Internal\nimport { Suspects } from './components/Suspects';\nimport { QuestionsHistory } from './components/QuestionsHistory';\n\ntype StepSelectQuestionProps = {\n  questions: Question[];\n  onSelectQuestion: GenericFunction;\n  isLoading: boolean;\n  suspects: SuspectCard[];\n  previouslyEliminatedSuspects: string[];\n  history: THistoryEntry[];\n} & Pick<StepProps, 'announcement'>;\n\nexport function StepSelectQuestion({\n  questions,\n  onSelectQuestion,\n  isLoading,\n  suspects,\n  previouslyEliminatedSuspects,\n  history,\n  announcement,\n}: StepSelectQuestionProps) {\n  return (\n    <Step announcement={announcement}>\n      <Title>\n        <Translate pt=\"Selecione uma pergunta\" en=\"Select a question\" />\n      </Title>\n      <RuleInstruction type=\"action\">\n        <Translate\n          pt=\"A testemunha responderá a pergunta sobre o  sobre criminoso. A pergunta que você não escolher será descartada.\"\n          en=\"The witness will answer the question about the perpetrator. The unchosen question will be discarded.\"\n        />{' '}\n      </RuleInstruction>\n\n      <Space className=\"space-container\" align=\"center\">\n        {questions.map(({ question, id }, index) => {\n          return (\n            <button\n              key={id}\n              className=\"t-select-question__button\"\n              onClick={() => onSelectQuestion({ questionId: id })}\n              disabled={isLoading}\n            >\n              <Card header={LETTERS[index]} randomColor className=\"t-card\">\n                {question}\n              </Card>\n            </button>\n          );\n        })}\n      </Space>\n\n      <Suspects suspects={suspects} eliminatedSuspects={previouslyEliminatedSuspects} />\n\n      {history.length > 0 && <QuestionsHistory history={history} />}\n    </Step>\n  );\n}\n","// Types\nimport { PhaseProps } from 'types/game';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useStep } from 'hooks/useStep';\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { InvestigationIcon } from 'icons/InvestigationIcon';\n// Components\nimport { AvatarName } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { TimeHighlight } from 'components/metrics/TimeHighlight';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { ViewOr } from 'components/views';\n// Internal\nimport { useOnSelectQuestionAPIRequest } from './utils/api-requests';\nimport { StepQuestionWaiting } from './StepQuestionWaiting';\nimport { StepSelectQuestion } from './StepSelectQuestion';\n\nfunction PhaseQuestionSelection({ state, players, info }: PhaseProps) {\n  const { isLoading } = useLoading();\n  const { step } = useStep(0);\n  const [witness, isUserTheWitness] = useWhichPlayerIsThe('witnessId', state, players);\n  const [questioner, isUserTheQuestioner] = useWhichPlayerIsThe('questionerId', state, players);\n  const onSelectQuestion = useOnSelectQuestionAPIRequest();\n\n  const roundsLeft = (state?.round?.total ?? 0) - (state?.round?.current ?? 0) + 1 || 11;\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<InvestigationIcon />}\n      title={<Translate pt=\"Seleção da Pergunta\" en=\"Question Selection\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <Instruction>\n        <Translate\n          pt={\n            <>\n              Agora que encontramos nossa testemunha (<AvatarName player={witness} />) é hora de questioná-la.\n              <br />\n              Só temos tempo para <TimeHighlight>{roundsLeft}</TimeHighlight> perguntas. Portanto,{' '}\n              <AvatarName player={questioner} />, escolha a pergunta certa.\n            </>\n          }\n          en={\n            <>\n              Now that we have a Witness (<AvatarName player={witness} />\n              ), it's time to choose the question to ask them.\n              <br />\n              We can only have time for <TimeHighlight>{roundsLeft}</TimeHighlight> questions. So{' '}\n              <AvatarName player={questioner} />, choose a question\n            </>\n          }\n        />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.TESTEMUNHA_OCULAR.QUESTION_SELECTION}\n      className=\"t-phase\"\n    >\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <ViewOr condition={isUserTheQuestioner}>\n          <StepSelectQuestion\n            isLoading={isLoading}\n            onSelectQuestion={onSelectQuestion}\n            previouslyEliminatedSuspects={state.previouslyEliminatedSuspects}\n            questions={state.questions}\n            suspects={state.suspects}\n            history={state.history}\n            announcement={announcement}\n          />\n\n          <StepQuestionWaiting\n            isUserTheWitness={isUserTheWitness}\n            perpetrator={state.perpetrator}\n            previouslyEliminatedSuspects={state.previouslyEliminatedSuspects}\n            questioner={questioner}\n            suspects={state.suspects}\n            history={state.history}\n            announcement={announcement}\n          />\n        </ViewOr>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseQuestionSelection;\n","// Ant Design Resources\nimport { Avatar, Button, Flex, Space } from 'antd';\n// Types\nimport type { GamePlayer } from 'types/player';\nimport type { SuspectCard } from 'types/tdr';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Icons\nimport { SpeechBubbleAcceptedIcon } from 'icons/SpeechBubbleAcceptedIcon';\nimport { SpeechBubbleDeclinedIcon } from 'icons/SpeechBubbleDeclinedIcon';\n// Components\nimport { AvatarName } from 'components/avatars';\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Step, type StepProps } from 'components/steps';\nimport { Instruction, RuleInstruction, Title } from 'components/text';\nimport { ViewIf } from 'components/views';\n// Internal\nimport { Suspects } from './components/Suspects';\nimport { QuestionsHistory } from './components/QuestionsHistory';\n\ntype StepQuestioningProps = {\n  suspects: SuspectCard[];\n  previouslyEliminatedSuspects: string[];\n  perpetrator: SuspectCard;\n  isUserTheWitness: boolean;\n  witness: GamePlayer;\n  isLoading: boolean;\n  onAnswer: GenericFunction;\n  question: GamePlayer;\n  history: THistoryEntry[];\n} & Pick<StepProps, 'announcement'>;\n\nexport function StepQuestioning({\n  suspects,\n  previouslyEliminatedSuspects,\n  perpetrator,\n  isUserTheWitness,\n  witness,\n  isLoading,\n  onAnswer,\n  question,\n  history,\n  announcement,\n}: StepQuestioningProps) {\n  const { translate } = useLanguage();\n\n  return (\n    <Step announcement={announcement}>\n      <Title level={3} size=\"medium\">\n        <Translate\n          pt={\n            <>\n              Testemunha <AvatarName player={witness} />, responda:\n            </>\n          }\n          en={\n            <>\n              Witness <AvatarName player={witness} />, please answer:\n            </>\n          }\n        />\n      </Title>\n\n      <ViewIf condition={isUserTheWitness}>\n        <Flex align=\"center\" className=\"margin\">\n          <Instruction contained>\n            <Button\n              type=\"text\"\n              size=\"large\"\n              onClick={() => onAnswer({ testimony: false })}\n              className=\"t-questioning-answer-grid__button t-questioning-answer-grid__button--no\"\n              disabled={!isUserTheWitness || isLoading}\n            >\n              <span className=\"t-questioning-answer-grid__answer\">\n                <Translate pt=\"Não\" en=\"No\" />\n              </span>\n              <Avatar\n                size=\"large\"\n                icon={<SpeechBubbleDeclinedIcon />}\n                style={{ backgroundColor: 'transparent' }}\n                shape=\"square\"\n              />\n            </Button>\n          </Instruction>\n\n          <Card\n            header={translate('O suspeito...', 'The perpetrator...')}\n            randomColor\n            className=\"t-card\"\n            size=\"large\"\n          >\n            {question.question}\n          </Card>\n\n          <Instruction contained>\n            <Button\n              type=\"text\"\n              size=\"large\"\n              onClick={() => onAnswer({ testimony: true })}\n              className=\"t-questioning-answer-grid__button t-questioning-answer-grid__button--no\"\n              disabled={!isUserTheWitness || isLoading}\n            >\n              <Avatar\n                size=\"large\"\n                icon={<SpeechBubbleAcceptedIcon />}\n                style={{ backgroundColor: 'transparent' }}\n                shape=\"square\"\n              />\n              <span className=\"t-questioning-answer-grid__answer\">\n                <Translate pt=\"Sim\" en=\"Yes\" />\n              </span>\n            </Button>\n          </Instruction>\n        </Flex>\n      </ViewIf>\n\n      <ViewIf condition={!isUserTheWitness}>\n        <Space className=\"space-container\" align=\"center\" direction=\"vertical\">\n          <Card\n            header={translate('O suspeito...', 'The perpetrator...')}\n            randomColor\n            className=\"t-card\"\n            size=\"large\"\n          >\n            {question.question}\n          </Card>\n        </Space>\n\n        <RuleInstruction type=\"wait\">\n          <Translate pt=\"Aguarde a testemunha responder.\" en=\"Wait for the witness to answer.\" />\n        </RuleInstruction>\n      </ViewIf>\n\n      <Suspects\n        suspects={suspects}\n        perpetrator={isUserTheWitness ? perpetrator : undefined}\n        eliminatedSuspects={previouslyEliminatedSuspects}\n      />\n\n      {history.length > 0 && <QuestionsHistory history={history} />}\n    </Step>\n  );\n}\n","// Types\nimport { PhaseProps } from 'types/game';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useStep } from 'hooks/useStep';\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { EyeIcon } from 'icons/EyeIcon';\n// Components\nimport { AvatarName } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\n// Internal\nimport { useOnSubmitTestimonyAPIRequest } from './utils/api-requests';\nimport { StepQuestioning } from './StepQuestioning';\n\nfunction PhaseQuestioning({ state, players, info }: PhaseProps) {\n  const { isLoading } = useLoading();\n  const { step } = useStep(0);\n  const [witness, isUserTheWitness] = useWhichPlayerIsThe('witnessId', state, players);\n\n  const onAnswer = useOnSubmitTestimonyAPIRequest();\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<EyeIcon />}\n      title={state.question.question}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <Instruction>\n        <Translate\n          pt={\n            <>\n              Nossa testemunha só sabe julgar por aparência.\n              <br />\n              <AvatarName player={witness} />, é hora de nos ajudar a pegar esse criminoso hediondo.\n            </>\n          }\n          en={\n            <>\n              Our witness loves to judge the book by its cover.\n              <br />\n              <AvatarName player={witness} />, it's time to help us find this heinous perpetrator!\n            </>\n          }\n        />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.TESTEMUNHA_OCULAR.QUESTIONING}\n      className=\"t-phase\"\n    >\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepQuestioning\n          suspects={state.suspects}\n          previouslyEliminatedSuspects={state.previouslyEliminatedSuspects}\n          perpetrator={state.perpetrator}\n          isUserTheWitness={isUserTheWitness}\n          witness={witness}\n          isLoading={isLoading}\n          onAnswer={onAnswer}\n          question={state.question}\n          history={state.history}\n          announcement={announcement}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseQuestioning;\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Types\nimport type { GamePlayer } from 'types/player';\nimport type { SuspectCard } from 'types/tdr';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Icons\nimport { SpeechBubbleAcceptedIcon } from 'icons/SpeechBubbleAcceptedIcon';\nimport { SpeechBubbleDeclinedIcon } from 'icons/SpeechBubbleDeclinedIcon';\n// Components\nimport { AvatarName, IconAvatar } from 'components/avatars';\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Step, type StepProps } from 'components/steps';\nimport { RuleInstruction, Title } from 'components/text';\n// Internal\nimport { Suspects } from './components/Suspects';\nimport { QuestionsHistory } from './components/QuestionsHistory';\n\ntype StepSuspectEliminationProps = {\n  suspects: SuspectCard[];\n  previouslyEliminatedSuspects: string[];\n  eliminatedSuspects: string[];\n  perpetrator: SuspectCard;\n  isUserTheWitness: boolean;\n  isUserTheQuestioner: boolean;\n  witness: GamePlayer;\n  questioner: GamePlayer;\n  isLoading: boolean;\n  onEliminate: GenericFunction;\n  question: GamePlayer;\n  testimony: boolean;\n  history: THistoryEntry[];\n} & Pick<StepProps, 'announcement'>;\n\nexport function StepSuspectElimination({\n  suspects,\n  previouslyEliminatedSuspects,\n  eliminatedSuspects,\n  perpetrator,\n  isUserTheWitness,\n  isUserTheQuestioner,\n  witness,\n  isLoading,\n  onEliminate,\n  question,\n  testimony,\n  history,\n  questioner,\n  announcement,\n}: StepSuspectEliminationProps) {\n  const { translate } = useLanguage();\n\n  const onEliminateSuspect = (suspectId: string) => onEliminate({ suspectId, pass: false });\n  const onPass = () => onEliminate({ suspectId: '', pass: true });\n\n  return (\n    <Step announcement={announcement}>\n      <Title level={3} size=\"medium\">\n        <AvatarName player={witness} addressUser />\n        <Translate en=\"answered\" pt=\"respondeu\" />{' '}\n        {testimony ? (\n          <Translate en=\"YES\" pt=\"SIM\" />\n        ) : (\n          <>\n            <Translate en=\"NO\" pt=\"NÃO\" />\n          </>\n        )}{' '}\n        <IconAvatar\n          size=\"large\"\n          icon={testimony ? <SpeechBubbleAcceptedIcon /> : <SpeechBubbleDeclinedIcon />}\n        />{' '}\n        <Translate en=\"to the question\" pt=\"para a pergunta:\" />\n      </Title>\n\n      <Space className=\"space-container\" align=\"center\">\n        <Card\n          header={translate('O suspeito...', 'The perpetrator...')}\n          color={testimony ? 'green' : 'red'}\n          className=\"t-card\"\n          size=\"large\"\n        >\n          {question.question}\n        </Card>\n      </Space>\n\n      {isUserTheQuestioner ? (\n        <RuleInstruction type=\"action\">\n          <Translate\n            pt=\"Clique em um suspeito para liberá-lo(a).\"\n            en=\"Click on a suspect card to release it.\"\n          />\n          <br />\n          {Boolean(eliminatedSuspects?.length && isUserTheQuestioner) && (\n            <Button type=\"primary\" onClick={onPass} disabled={isLoading}>\n              <Translate\n                pt=\"Parar de eliminar e ir para a próxima pergunta\"\n                en=\"Stop releasing suspects and go to next question\"\n              />\n            </Button>\n          )}\n        </RuleInstruction>\n      ) : (\n        <RuleInstruction type=\"wait\">\n          <AvatarName player={questioner} />{' '}\n          <Translate\n            pt=\"é quem libera os suspeitos e ele(a) precisa liberar pelo menos um.\"\n            en=\"is the one who is releasing the suspects and they must release at least one.\"\n          />\n        </RuleInstruction>\n      )}\n\n      <Suspects\n        suspects={suspects}\n        perpetrator={isUserTheWitness ? perpetrator : undefined}\n        onCardClick={isUserTheQuestioner ? onEliminateSuspect : undefined}\n        eliminatedSuspects={[...(eliminatedSuspects ?? []), ...(previouslyEliminatedSuspects ?? [])]}\n      />\n\n      {history.length > 0 && <QuestionsHistory history={history} />}\n    </Step>\n  );\n}\n","// Types\nimport { PhaseProps } from 'types/game';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useStep } from 'hooks/useStep';\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { LawIcon } from 'icons/LawIcon';\n// Components\nimport { AvatarName } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\n// Internal\nimport { useOnEliminateSuspectAPIRequest } from './utils/api-requests';\nimport { StepSuspectElimination } from './StepSuspectElimination';\n\nfunction PhaseTrial({ state, players, info }: PhaseProps) {\n  const { isLoading } = useLoading();\n  const { step } = useStep(0);\n\n  const [witness, isUserTheWitness] = useWhichPlayerIsThe('witnessId', state, players);\n  const [questioner, isUserTheQuestioner] = useWhichPlayerIsThe('questionerId', state, players);\n\n  const onEliminate = useOnEliminateSuspectAPIRequest();\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<LawIcon />}\n      title={<Translate pt=\"Julgamento\" en=\"Trial\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <Instruction>\n        <Translate\n          pt={\n            <>\n              Precisamos eliminar suspeitos! Para cada pergunta, pelo menos um suspeito tem que se eliminado.\n              Lembre-se que estamos tentando liberar testemunhas. Desvendamos o caso se o último suspeito for\n              o criminoso!\n              <br />\n              <AvatarName player={questioner} addressUser /> está encarregado(a) de selecionar os inocentes.\n            </>\n          }\n          en={\n            <>\n              We need to eliminate suspects! For each question we must eliminate at least one suspect.\n              Remember we are trying to release witnesses. We solve the case if the last man (or woman)\n              standing is the perpetrator!\n              <br />\n              <AvatarName player={questioner} /> is in charge of selecting the innocent people.\n            </>\n          }\n        />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.TESTEMUNHA_OCULAR.TRIAL}\n      className=\"t-phase\"\n    >\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepSuspectElimination\n          suspects={state.suspects}\n          previouslyEliminatedSuspects={state.previouslyEliminatedSuspects}\n          perpetrator={state.perpetrator}\n          isUserTheWitness={isUserTheWitness}\n          witness={witness}\n          isLoading={isLoading}\n          onEliminate={onEliminate}\n          question={state.question}\n          eliminatedSuspects={state.eliminatedSuspects}\n          questioner={questioner}\n          isUserTheQuestioner={isUserTheQuestioner}\n          testimony={state.testimony}\n          history={state.history}\n          announcement={announcement}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseTrial;\n","// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n\ntype AnnouncementContentProps = {\n  didUserWin: boolean;\n};\n\nexport function AnnouncementContent({ didUserWin }: AnnouncementContentProps) {\n  return didUserWin ? (\n    <Instruction>\n      <Translate\n        pt=\"O criminoso foi capturado e preso e vai morrer na cadeira elétrica! Obrigado pelo seu serviço e dedicação nesse caso!\"\n        en=\"The perpetrator was captured, arrested, and will be executed by the electric chair! Thank you for your service!\"\n      />\n    </Instruction>\n  ) : (\n    <Instruction>\n      <Translate\n        pt=\"O criminoso não foi capturado. Tudo por conta da sua investigação porca. Ele(a) saiu pelo mundo a fora cometendo mais crimes. Saiu até nos jornais!\"\n        en=\"The perpetrator got away. Thanks to you and your lousy investigation. Now they are out and about committing more crimes. It was even on the news!\"\n      />\n    </Instruction>\n  );\n}\n","// Types\nimport { PhaseProps } from 'types/game';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Icons\nimport { CriminalIcon } from 'icons/CriminalIcon';\nimport { NewspaperIcon } from 'icons/NewspaperIcon';\n// Components\nimport { GameOverWrapper } from 'components/game-over';\nimport { ImageCard } from 'components/image-cards';\nimport { Translate } from 'components/language';\nimport { TimeHighlight } from 'components/metrics/TimeHighlight';\nimport { Instruction } from 'components/text';\n// Internal\nimport { AnnouncementContent } from './components/TextBlobs';\nimport { QuestionsHistory } from './components/QuestionsHistory';\n\nfunction PhaseGameOver({ state, info, players }: PhaseProps) {\n  const { language } = useLanguage();\n\n  const didUserWin = state.outcome === 'WIN';\n\n  return (\n    <GameOverWrapper\n      info={info}\n      state={state}\n      players={players}\n      announcementIcon={didUserWin ? <CriminalIcon /> : <NewspaperIcon />}\n      announcementDuration={15}\n      announcementTitle={\n        didUserWin ? (\n          <Translate pt=\"Capturado!\" en=\"Arrested!\" />\n        ) : (\n          <Translate pt=\"O criminoso escapou!\" en=\"They got away!\" />\n        )\n      }\n      announcementContent={<AnnouncementContent didUserWin={didUserWin} />}\n    >\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              O interrogatório durou <TimeHighlight>{state.groupScore ?? '?'}</TimeHighlight> horas.\n            </>\n          }\n          en={\n            <>\n              The interrogation lasted for <TimeHighlight>{state.groupScore ?? '?'}</TimeHighlight> hours.\n            </>\n          }\n        />\n        <br />\n        <Translate pt=\"O criminoso era:\" en=\"The perpetrator was:\" />\n\n        <div className=\"t-suspects-table__suspect\">\n          <ImageCard id={state.perpetrator.id} className=\"t-suspects-table__suspect-image\" cardWidth={150} />\n          <div className=\"t-suspects-table__suspect-name\">{state.perpetrator.name[language]}</div>\n        </div>\n      </Instruction>\n\n      <QuestionsHistory history={state.history} />\n    </GameOverWrapper>\n  );\n}\n\nexport default PhaseGameOver;\n","// Ant Design Resources\nimport { ConfigProvider } from 'antd';\n// Types\nimport type { GameState } from 'types/game';\n// Utils\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { PageError } from 'components/errors';\nimport { LoadingPage } from 'components/loaders';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { Session } from 'components/session';\n// Internal\nimport PhaseWitnessSelection from './PhaseWitnessSelection';\nimport PhaseQuestionSelection from './PhaseQuestionSelection';\nimport PhaseQuestioning from './PhaseQuestioning';\nimport PhaseTrial from './PhaseTrial';\nimport PhaseGameOver from './PhaseGameOver';\n// Sass\nimport 'assets/fonts/architects-daughter.scss';\nimport './testemunha-ocular.scss';\n// Fonts\n\nfunction getActiveComponent(state: GameState) {\n  // If phase is not defined, it is likely that the game is still loading\n  if (state && !state.phase) return LoadingPage;\n\n  switch (state.phase) {\n    case PHASES.DEFAULT.LOBBY:\n      return PhaseLobby;\n    case PHASES.DEFAULT.RULES:\n      return PhaseRules;\n    case PHASES.DEFAULT.SETUP:\n      return PhaseSetup;\n    case PHASES.TESTEMUNHA_OCULAR.WITNESS_SELECTION:\n      return PhaseWitnessSelection;\n    case PHASES.TESTEMUNHA_OCULAR.QUESTION_SELECTION:\n      return PhaseQuestionSelection;\n    case PHASES.TESTEMUNHA_OCULAR.QUESTIONING:\n      return PhaseQuestioning;\n    case PHASES.TESTEMUNHA_OCULAR.TRIAL:\n      return PhaseTrial;\n    case PHASES.DEFAULT.GAME_OVER:\n      return PhaseGameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionTestemunhaOcular() {\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorPrimary: THEME_COLORS.SLATE,\n          colorLink: THEME_COLORS.SLATE,\n        },\n      }}\n    >\n      <Session gameCollection={GAME_COLLECTION.TESTEMUNHA_OCULAR} getActiveComponent={getActiveComponent} />\n    </ConfigProvider>\n  );\n}\n\nexport default SessionTestemunhaOcular;\n","import { useEffect, useState } from 'react';\n// Types\nimport type { GamePlayers, GamePlayer } from 'types/player';\n// Utils\nimport { PLACEHOLDER_PLAYER } from 'utils/constants';\n// Internal\nimport { useGlobalState } from './useGlobalState';\n\n/**\n * Gets player that is assigned to a property in the state\n * @param propertyName\n * @param state\n * @param players\n * @returns a player instance, a boolean if the player is assigned to given property\n */\nexport function useWhichPlayerIsThe(\n  propertyName = 'activePlayer',\n  state: PlainObject = {},\n  players: GamePlayers = {}\n): [GamePlayer, boolean] {\n  const [userId] = useGlobalState('userId');\n  const [activePlayer, setActivePlayer] = useState<GamePlayer>(PLACEHOLDER_PLAYER);\n  const [isUser, setIsUser] = useState(false);\n\n  // Determine if user is active as the guesser, the clue giver, the psychic, the storyteller, etc\n  useEffect(() => {\n    const activePlayer = state?.[propertyName];\n    setActivePlayer(players?.[activePlayer] ?? {});\n    setIsUser(state?.[propertyName] === userId);\n  }, [players, propertyName, state, userId]);\n\n  return [activePlayer, isUser];\n}\n","export function EyeIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#D1EFF2\"\n        d=\"M256 130.246c109.138 0 199.851 67.317 242.28 110.438 8.373 8.509 8.373 22.121 0 30.63C455.851 314.435 365.138 381.753 256 381.753S56.15 314.435 13.721 271.314c-8.373-8.509-8.373-22.121 0-30.63C56.15 197.563 146.862 130.246 256 130.246z\"\n      ></path>\n      <circle cx=\"256.001\" cy=\"256\" r=\"125.75\" fill=\"#76B7EB\"></circle>\n      <path\n        d=\"M190.937 148.366c-36.378 22.037-60.69 61.995-60.69 107.633 0 69.452 56.301 125.753 125.753 125.753 29.998 0 57.537-10.509 79.151-28.04-191.149 46.405-204.903-137.001-144.214-205.346z\"\n        opacity=\"0.1\"\n      ></path>\n      <circle cx=\"256.001\" cy=\"256\" r=\"61.605\" fill=\"#38648C\"></circle>\n      <circle cx=\"316.396\" cy=\"223.042\" r=\"29.097\" fill=\"#FFF\"></circle>\n      <path\n        d=\"M18.148 236.272C60.356 210.211 154.601 155.981 256 155.981s195.644 54.23 237.852 80.291C449.751 193.129 361.484 130.246 256 130.246S62.249 193.129 18.148 236.272z\"\n        opacity=\"0.15\"\n      ></path>\n      <path\n        d=\"M333.405 326.463a7.468 7.468 0 01-4.729-1.682l-8.888-7.23c-3.215-2.615-3.7-7.339-1.086-10.554s7.339-3.701 10.553-1.086l8.888 7.23a7.502 7.502 0 01-4.738 13.322zm18.042-33.858a7.517 7.517 0 01-2.191-.328l-10.958-3.341a7.5 7.5 0 01-4.987-9.363 7.5 7.5 0 019.363-4.987l10.958 3.341a7.5 7.5 0 01-2.185 14.678zm-104.623 70.254a7.501 7.501 0 01-7.478-8.192l1.054-11.408a7.501 7.501 0 1114.939 1.38l-1.054 11.408a7.5 7.5 0 01-7.461 6.812zm-87.485-74.575a7.504 7.504 0 01-1.859-14.77l11.098-2.846a7.502 7.502 0 013.726 14.533l-11.098 2.846a7.456 7.456 0 01-1.867.237zm49.63-99.541a7.495 7.495 0 01-6.357-3.508l-6.101-9.696a7.501 7.501 0 1112.699-7.989l6.101 9.696a7.5 7.5 0 01-2.355 10.344 7.452 7.452 0 01-3.987 1.153zm87.92-3.529a7.502 7.502 0 01-6.644-10.976l5.304-10.154a7.502 7.502 0 0113.298 6.945l-5.304 10.154a7.498 7.498 0 01-6.654 4.031z\"\n        opacity=\"0.1\"\n      ></path>\n      <path d=\"M503.627 235.422a345.342 345.342 0 00-7.779-7.654 7.502 7.502 0 00-10.355 10.859 325.772 325.772 0 017.438 7.319c5.455 5.543 5.455 14.563 0 20.108-15.241 15.489-47.758 45.183-94.309 70.033-20.571 10.981-41.244 19.611-61.911 25.868 31.913-24.368 52.544-62.794 52.544-105.954 0-43.075-20.551-81.435-52.356-105.81 54.173 16.484 97.442 45.811 122.612 65.842a7.502 7.502 0 009.343-11.74C430.585 173.838 352.045 122.747 256 122.747c-49.688 0-100.05 13.435-149.688 39.933-48.311 25.788-82.098 56.646-97.938 72.745-11.165 11.346-11.165 29.807 0 41.154 9.64 9.797 25.728 24.859 47.624 40.967a7.476 7.476 0 004.439 1.459 7.502 7.502 0 004.451-13.545c-21.101-15.522-36.565-29.995-45.822-39.403-5.455-5.543-5.455-14.563 0-20.108 15.241-15.489 47.758-45.183 94.309-70.033 20.571-10.981 41.244-19.611 61.911-25.868-31.912 24.365-52.543 62.792-52.543 105.952 0 43.05 20.527 81.391 52.3 105.768-27.488-8.336-54.925-20.766-81.538-37.063a7.501 7.501 0 10-7.836 12.795c55.292 33.858 114.191 51.754 170.329 51.754 49.688 0 100.05-13.435 149.688-39.932 48.311-25.789 82.098-56.647 97.938-72.746 11.167-11.346 11.167-29.807.003-41.154zm-365.879 20.577c0-65.204 53.048-118.251 118.252-118.251s118.252 53.048 118.252 118.251S321.205 374.25 256 374.25s-118.252-53.047-118.252-118.251zm215.243-32.956c0-20.178-16.416-36.594-36.594-36.594-9.754 0-18.622 3.844-25.19 10.087-10.631-6.324-22.668-9.648-35.206-9.648-38.108 0-69.11 31.002-69.11 69.109s31.002 69.109 69.11 69.109c37.237 0 67.672-29.606 69.044-66.513 16.016-3.895 27.946-18.351 27.946-35.55zM256 310.105c-29.834 0-54.107-24.272-54.107-54.106s24.273-54.106 54.107-54.106c9.458 0 18.555 2.407 26.648 7.009a36.39 36.39 0 00-2.846 14.142c0 18 13.067 32.996 30.211 36.026-1.596 28.409-25.209 51.035-54.013 51.035zm60.397-65.471c-11.905 0-21.59-9.685-21.59-21.59s9.685-21.59 21.59-21.59 21.59 9.685 21.59 21.59-9.685 21.59-21.59 21.59z\"></path>\n    </svg>\n  );\n}\n","export function InvestigationIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path fill=\"#d7e6eb\" d=\"M80 24h248v48H80z\"></path>\n      <path fill=\"#ccdce4\" d=\"M112 24l32 32h88l-32-32z\"></path>\n      <path fill=\"#b4c2c9\" d=\"M56 24l32 32h88l-32-32z\"></path>\n      <path fill=\"#ecae49\" d=\"M24 456V24h56l32 32h216v400z\"></path>\n      <path fill=\"#ccdce4\" d=\"M67.136 160.762l233.52-55.2 75.44 319.144-233.52 55.2z\"></path>\n      <path fill=\"#7a8a9a\" d=\"M115.26 190.481l155.68-36.8 14.72 62.272-155.68 36.8z\"></path>\n      <circle cx=\"376\" cy=\"216\" r=\"112\" fill=\"#0093ba\"></circle>\n      <path fill=\"#ecae49\" d=\"M392 352v120a16 16 0 01-16 16 16 16 0 01-16-16V352z\"></path>\n      <path fill=\"#d7a145\" d=\"M360 352h32v24h-32z\"></path>\n      <rect width=\"64\" height=\"32\" x=\"344\" y=\"328\" fill=\"#d08b29\" rx=\"16\"></rect>\n      <circle cx=\"376\" cy=\"216\" r=\"80\" fill=\"#7fcbe5\"></circle>\n      <path fill=\"#d08b29\" d=\"M360 456h32v16a16 16 0 01-16 16 16 16 0 01-16-16v-16z\"></path>\n      <path d=\"M376 128a88 88 0 1088 88 88.1 88.1 0 00-88-88zm0 160a72 72 0 1172-72 72.081 72.081 0 01-72 72z\"></path>\n      <path d=\"M496 216a120 120 0 10-155.851 114.529A23.979 23.979 0 00352 366.624V472a24 24 0 0048 0V366.624a23.979 23.979 0 0011.851-36.1A120.215 120.215 0 00496 216zM384 368v80h-16v-80zm-8 112a8.009 8.009 0 01-8-8v-8h16v8a8.009 8.009 0 01-8 8zm16-144a8 8 0 010 16h-32a8 8 0 010-16zm-16-16a104 104 0 11104-104 104.118 104.118 0 01-104 104z\"></path>\n      <path d=\"M32 32h44.687l29.656 29.657A8 8 0 00112 64h208v24h16V24a8 8 0 00-8-8H24a8 8 0 00-8 8v432a8 8 0 008 8h88v-16H32zm67.314 0h41.372l16 16h-41.373zm64 0h33.372l16 16h-33.372zM320 48h-84.686l-16-16H320z\"></path>\n      <path d=\"M148.527 470.375l-71.75-303.638 225.783-53.353-3.68-15.571-233.568 55.193a8 8 0 00-5.945 9.625L134.8 481.84a8 8 0 009.625 5.945L337.84 442.08l-3.68-15.57z\"></path>\n      <path d=\"M145.118 282.05l15.568-3.68 3.68 15.567-15.568 3.68zm31.134-7.353l69.862-16.514 3.68 15.567-69.862 16.514zm-39.347 42.175l125.206-29.596 3.68 15.567-125.206 29.596zm7.358 31.137l141.843-33.529 3.68 15.567-141.843 33.53zm7.365 31.13l171.248-40.48 3.68 15.567-171.248 40.48zm7.362 31.133l140.112-33.12 3.68 15.567-140.112 33.12zm83.61-258.057l-129.159 30.52a8 8 0 00-5.945 9.625l14.718 62.285a7.987 7.987 0 009.625 5.945l110-25.993-3.68-15.571-102.216 24.154-11.043-46.713 121.373-28.682z\"></path>\n    </svg>\n  );\n}\n","export function LawIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 60 60\" {...props}>\n      <g>\n        <g transform=\"translate(1 1)\">\n          <path fill=\"#624421\" d=\"M27.964 24.95h4v10.02h-4z\" transform=\"rotate(-45 29.96 29.968)\"></path>\n          <path fill=\"#f57c00\" d=\"M23 51v4H3v-4a3 3 0 013-3h14a3 3 0 013 3z\"></path>\n          <path fill=\"#ff9801\" d=\"M20 51v4H3v-4a3 3 0 013-3h11a3 3 0 013 3z\"></path>\n          <path\n            fill=\"#825a2c\"\n            d=\"M32.79 24.3l-8.49 8.49a2 2 0 01-2.83 0l-1.41-1.42 11.31-11.31 1.42 1.41a2 2 0 010 2.83z\"\n          ></path>\n          <path\n            fill=\"sienna\"\n            d=\"M15.11 37.74l-1.42 1.41a1 1 0 01-1.41 0L1 27.84a1 1 0 010-1.42L2.38 25a3 3 0 014.24 0l8.49 8.48a3 3 0 010 4.26z\"\n          ></path>\n          <path\n            fill=\"#783e22\"\n            d=\"M39.15 13.69l-1.41 1.42a3 3 0 01-4.25 0L25 6.62a3 3 0 010-4.24L26.42 1a1 1 0 011.42 0l11.31 11.28a1 1 0 010 1.41z\"\n          ></path>\n          <path\n            fill=\"sienna\"\n            d=\"M37.48 12l-1.42 1.42a3 3 0 01-4.24 0L25 6.62a3 3 0 010-4.24L26.42 1a1 1 0 011.42 0l9.64 9.64a1 1 0 010 1.36z\"\n          ></path>\n          <path fill=\"#783e22\" d=\"M26 55v2a1 1 0 01-1 1H1a1 1 0 01-1-1v-2a2 2 0 012-2h22a2 2 0 012 2z\"></path>\n          <path fill=\"sienna\" d=\"M23 55v2a1 1 0 01-1 1H1a1 1 0 01-1-1v-2a2 2 0 012-2h19a2 2 0 012 2z\"></path>\n          <path\n            fill=\"#f57c00\"\n            d=\"M33.49 17.94L17.94 33.49a2 2 0 01-2.83 0l-6.36-6.36L27.13 8.75l6.36 6.36a2 2 0 010 2.83z\"\n          ></path>\n          <path\n            fill=\"#ff9801\"\n            d=\"M27.13 8.75L8.75 27.13 6.62 25a2 2 0 010-2.83L22.18 6.62a2 2 0 012.83 0z\"\n          ></path>\n          <path\n            fill=\"#783e22\"\n            d=\"M51.88 46.22l-5.66 5.66C32.63 38.29 32.79 38.54 32.79 38.44l5.65-5.65z\"\n          ></path>\n          <path fill=\"sienna\" d=\"M49.7 48.41l-3.48 3.47C32.63 38.29 32.79 38.54 32.79 38.44L36.26 35z\"></path>\n          <path\n            fill=\"#fec108\"\n            d=\"M38.44 32.79l-5.65 5.65L30 35.62a2 2 0 010-2.83L31.75 31l1-1a2 2 0 012.83 0z\"\n          ></path>\n          <path\n            fill=\"#ffdc00\"\n            d=\"M36 34.42L32.38 38 30 35.62a2 2 0 010-2.83L31.75 31a2 2 0 011.43.59z\"\n          ></path>\n          <path fill=\"#707070\" d=\"M54.71 49.05l-5.66 5.66-2.83-2.83 5.66-5.66z\"></path>\n          <path\n            fill=\"#9e9e9e\"\n            d=\"M46.77 49.506h5.18v3.69h-5.18z\"\n            transform=\"rotate(-45 49.354 51.363)\"\n          ></path>\n          <path\n            fill=\"#624421\"\n            d=\"M56.83 56.83a4 4 0 01-5.66 0l-2.12-2.12 5.66-5.66 2.12 2.12a4 4 0 010 5.66z\"\n          ></path>\n          <path\n            fill=\"#825a2c\"\n            d=\"M55.55 57.69a4 4 0 01-4.38-.86l-2.12-2.12 3.66-3.66 2.07 2.07a4 4 0 01.77 4.57z\"\n          ></path>\n        </g>\n        <g fill=\"#000\">\n          <path d=\"M37.32 30.25a3 3 0 00-3.4-.58l-1.55-1.54L34.49 26a3 3 0 000-4.24l-.7-.71c1.33-1.34 2.08-1.85 2.25-3.13a4 4 0 003.4-1.11l1.42-1.42a2 2 0 000-2.83L29.54 1.26a2 2 0 00-2.82 0L25.3 2.67a4 4 0 00-1.11 3.41 3 3 0 00-1.72.84L6.92 22.47a3 3 0 00-.85 1.75 4 4 0 00-3.4 1.08l-1.41 1.42a2 2 0 000 2.82l11.31 11.32a2 2 0 002.83 0l1.42-1.42A3.91 3.91 0 0017.93 36c1.3-.18 1.81-.93 3.13-2.25.84.84 1.44 1.58 2.83 1.58a3 3 0 002.11-.84l2.12-2.12 1.54 1.55a3 3 0 00.58 3.4C39.74 46.8 14 21 51.46 58.54a5.006 5.006 0 007.08-7.08c-44.39-44.38-1.39-1.39-21.22-21.21zm11.32 22.63l4.24-4.24 1.41 1.41-4.24 4.24zM35.2 39.44l4.24-4.24 12 12-4.24 4.24zM26.72 4.09l1.41-1.42L39.44 14 38 15.4a2 2 0 01-2.83 0l-8.45-8.48a2 2 0 010-2.83zM15.4 38L14 39.44 2.67 28.13l1.42-1.41a2 2 0 012.83 0l8.48 8.48a2 2 0 010 2.8zm2.83-4.24a1 1 0 01-1.41 0l-5.66-5.66 2.12-2.1a1 1 0 10-1.41-1.42l-2.12 2.14C8.19 25.16 8 25.12 8 24.59a1 1 0 01.29-.7l15.6-15.56a1 1 0 011.41 0l1.42 1.42-12 12a1 1 0 001.42 1.41l12-12 5.66 5.66a1 1 0 010 1.41c.09 0-.14.09-15.57 15.56zm6.36-.71a1 1 0 01-1.41 0l-.71-.71 9.9-9.9.71.71a1 1 0 010 1.41c-4.01 4.04.67-.62-8.49 8.52zM31 29.54L32.37 31 31 32.37 29.54 31zm.41 5.66a1 1 0 01.3-.71l2.82-2.82a1 1 0 011.42 0L38 33.79 33.79 38c-2.31-2.27-2.42-2.26-2.42-2.8zm25.71 21.92a3 3 0 01-4.24 0l-1.42-1.41 4.25-4.25 1.41 1.42a3 3 0 010 4.24zM25 53v-1a4 4 0 00-4-4H7a4 4 0 00-4 4v1a3 3 0 00-3 3v3a1 1 0 001 1h26a1 1 0 001-1v-3a3 3 0 00-3-3zM5 52a2 2 0 012-2h14a2 2 0 012 2v1H5zm21 6H2v-2a1 1 0 011-1h22a1 1 0 011 1z\"></path>\n          <path d=\"M25 44v-4a1 1 0 00-2 0v4a1 1 0 002 0zM32 47h-4a1 1 0 000 2h4a1 1 0 000-2zM27.71 45.71l3-3a1.004 1.004 0 00-1.42-1.42l-3 3A1 1 0 0027 46a1 1 0 00.71-.29z\"></path>\n        </g>\n      </g>\n    </svg>\n  );\n}\n","export function NewspaperIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fff\"\n        d=\"M82.501 501.98h369.826c15.011 0 27.179-13.47 27.179-30.087v-441.1c0-11.473-9.301-20.773-20.773-20.773H153.806c-11.473 0-20.773 9.301-20.773 20.773v415.529c-.001 0 .412 51.484-50.532 55.658z\"\n      ></path>\n      <path\n        fill=\"#a0c8ff\"\n        d=\"M82.871 501.98h-.197c-27.714 0-50.181-22.467-50.181-50.181v-209.37c0-12.872 10.435-23.307 23.307-23.307h77.251V451.8c.001 27.714-22.466 50.18-50.18 50.18z\"\n      ></path>\n      <path fill=\"#ff7b79\" d=\"M173.86 168.977h80.231v80.231H173.86z\"></path>\n      <path fill=\"#7ddac2\" d=\"M353.936 369.554h80.231v80.231h-80.231z\"></path>\n      <circle cx=\"32.493\" cy=\"329.689\" r=\"10\"></circle>\n      <path d=\"M464.478 0H148.062c-13.812 0-25.049 11.237-25.049 25.049v184.053H47.522c-13.812 0-25.049 11.237-25.049 25.049v50.325c0 5.534 4.486 10.02 10.02 10.02s10.02-4.486 10.02-10.02v-50.325a5.016 5.016 0 015.01-5.01h75.491v217.181c0 .088.011.174.013.262-.125 25.044-18.132 45.376-40.254 45.376-22.199 0-40.26-20.473-40.26-45.638v-71.419c0-5.534-4.486-10.02-10.02-10.02s-10.02 4.486-10.02 10.02v71.419c0 35.98 26.704 65.282 59.658 65.659.124.005.245.019.37.019h369.826c20.512 0 37.199-17.992 37.199-40.106V25.049C489.527 11.237 478.29 0 464.478 0zm5.01 471.894c0 11.065-7.698 20.067-17.16 20.067H126.073c10.51-11.827 16.998-27.919 16.998-45.639 0-.128-.014-.251-.019-.378V25.049a5.016 5.016 0 015.01-5.01h316.416a5.016 5.016 0 015.01 5.01z\"></path>\n      <path d=\"M173.86 134.745c5.534 0 10.02-4.486 10.02-10.02V92.674l25.143 36.409c2.866 4.14 7.679 5.891 12.257 4.46 4.657-1.455 7.666-5.766 7.666-10.984V60.413c0-5.534-4.486-10.02-10.02-10.02s-10.02 4.486-10.02 10.02v33.238l-26.803-38.812a10.02 10.02 0 00-18.265 5.694v64.193c.003 5.533 4.489 10.019 10.022 10.019zm74.731-.293h26.851c5.534 0 10.02-4.486 10.02-10.02s-4.486-10.02-10.02-10.02H258.61v-11.824h14.852c5.534 0 10.02-4.486 10.02-10.02s-4.486-10.02-10.02-10.02H258.61V70.726h16.832c5.534 0 10.02-4.486 10.02-10.02s-4.486-10.02-10.02-10.02h-26.851c-5.534 0-10.02 4.486-10.02 10.02v63.726c.001 5.534 4.486 10.02 10.02 10.02zm164.917-19.746c-5.842 0-11.445-2.334-14.987-6.242-3.717-4.101-10.053-4.411-14.153-.696-4.1 3.716-4.412 10.052-.696 14.153 7.387 8.15 18.261 12.824 29.836 12.824 14.514 0 26.716-9.335 29.012-22.197 1.742-9.756-2.587-22.464-19.96-28.873-7.551-2.785-14.605-5.811-17.122-6.909-.719-.691-.781-1.561-.688-2.212.23-1.604 1.589-2.894 3.726-3.538 7.288-2.195 16.848 2.59 19.927 4.625 4.581 3.071 10.788 1.861 13.879-2.711 3.099-4.585 1.895-10.814-2.69-13.912-1.916-1.296-19.238-12.506-36.896-7.189-9.624 2.9-16.438 10.516-17.782 19.878-1.268 8.832 2.563 17.329 9.997 22.176a10 10 0 001.39.757c.375.167 9.29 4.136 19.325 7.837 3.781 1.395 7.65 3.848 7.168 6.549-.41 2.291-3.644 5.68-9.286 5.68zM304.38 125.704c1.021 5.154 5.797 8.941 10.995 9.038 5.013.093 9.663-3.239 11.148-8.038l9.989-32.273 9.944 32.279c1.481 4.825 6.197 8.16 11.225 8.03 5.176-.134 9.897-3.914 10.919-9.042l12.58-63.21c1.08-5.428-2.444-10.703-7.871-11.783-5.431-1.079-10.703 2.444-11.783 7.871l-5.924 29.763-9.512-30.876c-1.629-5.288-7.234-8.254-12.525-6.625-3.536 1.089-6.024 3.96-6.804 7.322l-9.344 30.188-5.91-29.879c-1.074-5.429-6.344-8.959-11.773-7.885s-8.959 6.345-7.885 11.773zM173.86 259.228h80.231c5.534 0 10.02-4.486 10.02-10.02v-80.231c0-5.534-4.486-10.02-10.02-10.02H173.86c-5.534 0-10.02 4.486-10.02 10.02v80.231c.001 5.534 4.487 10.02 10.02 10.02zm10.02-80.231h60.192v60.192H183.88zm250.287 180.537h-80.231c-5.534 0-10.02 4.486-10.02 10.02v80.231c0 5.534 4.486 10.02 10.02 10.02h80.231c5.534 0 10.02-4.486 10.02-10.02v-80.231c-.001-5.534-4.487-10.02-10.02-10.02zm-10.02 80.231h-60.192v-60.192h60.192zM294.322 219.112h139.659c5.534 0 10.02-4.486 10.02-10.02s-4.486-10.02-10.02-10.02H294.322c-5.534 0-10.02 4.486-10.02 10.02s4.486 10.02 10.02 10.02zm139.659 20.076H294.322c-5.534 0-10.02 4.486-10.02 10.02s4.486 10.02 10.02 10.02h139.659c5.534 0 10.02-4.486 10.02-10.02s-4.486-10.02-10.02-10.02zM173.86 339.458h260.121c5.534 0 10.02-4.486 10.02-10.02s-4.486-10.02-10.02-10.02H173.86c-5.534 0-10.02 4.486-10.02 10.02s4.487 10.02 10.02 10.02zm0-40.116h260.121c5.534 0 10.02-4.486 10.02-10.02s-4.486-10.02-10.02-10.02H173.86c-5.534 0-10.02 4.486-10.02 10.02s4.487 10.02 10.02 10.02zm139.915 60.192H173.86c-5.534 0-10.02 4.486-10.02 10.02s4.486 10.02 10.02 10.02h139.914c5.534 0 10.02-4.486 10.02-10.02s-4.486-10.02-10.019-10.02zm0 40.116H173.86c-5.534 0-10.02 4.486-10.02 10.02s4.486 10.02 10.02 10.02h139.914c5.534 0 10.02-4.486 10.02-10.02s-4.486-10.02-10.019-10.02z\"></path>\n    </svg>\n  );\n}\n"],"names":["Card","children","header","footer","color","size","randomColor","className","headerClassName","footerClassName","hideHeader","baseClass","bgColor","getColorFromLetter","toUpperCase","clsx","style","startsWith","backgroundColor","ImageBlurButton","cardId","ghost","useBlurCards","blurCard","isBlurEnabled","shouldBeBlurred","placement","title","pt","en","onClick","EyeOutlined","EyeInvisibleOutlined","ImageBlurButtonContainer","position","rest","ImageCard","id","cardWidth","preview","previewImageId","fileExtension","square","classic","baseUrl","useTDBaseUrl","useMemo","imageURL","replace","numId","Number","split","at","length","fallbackName","isBlurred","previewConfig","height","undefined","width","src","placeholder","fallback","PUBLIC_URL","CARDS","maskClassName","Boolean","ImageCardBack","ImageCardButton","buttonPosition","over","icon","disabled","buttonText","buttonProps","isTop","iconComponent","DownCircleOutlined","UpCircleOutlined","buttonClassName","restButtonProps","button","shape","ImageCardHand","hand","onSelectCard","selectButtonText","selectButtonIcon","selectButtonClass","sizeRatio","cardSize","minCardSize","disabledSelectButton","selectedCards","cardClassName","imageGroupPreview","useCardWidthByContainerRef","Math","max","minWidth","containerRef","PreviewGroup","ref","map","index","getAnimationClass","delay","ImageCardPreloadHand","ImageCardSelectButton","selectLabel","deselectLabel","isSelected","custom","PlayersHighlight","type","iconSize","TimeHighlight","StepSelectPlayer","players","announcement","onSubmitPlayer","titleProps","ruleInstructionProps","isLoading","useLoading","isHost","useHost","fullWidth","contained","gap","wrap","sortPlayers","player","withName","addressUser","View","ViewIf","condition","ViewOr","ViewSwitch","cases","Error","console","warn","TESTEMUNHA_OCULAR_ACTIONS","state","info","step","useStep","onWitnessButtonClick","translate","useLanguage","request","useGameActionRequest","actionName","successMessage","errorMessage","payload","action","useOnSelectWitnessAPIRequest","CrimeSceneIcon","currentRound","round","current","AnimatedClockIcon","ruleInstruction","phase","allowedPhase","PHASES","TESTEMUNHA_OCULAR","WITNESS_SELECTION","playerId","witnessId","QuestionsHistory","history","entry","question","answer","SpeechBubbleAcceptedIcon","SpeechBubbleDeclinedIcon","Suspects","suspects","perpetrator","onCardClick","eliminatedSuspects","language","useCardWidth","suspect","wasEliminated","includes","name","onConfirm","okText","cancelText","StepQuestionWaiting","previouslyEliminatedSuspects","questioner","isUserTheWitness","StepSelectQuestion","questions","onSelectQuestion","align","questionId","LETTERS","useWhichPlayerIsThe","witness","isUserTheQuestioner","useOnSelectQuestionAPIRequest","roundsLeft","total","InvestigationIcon","QUESTION_SELECTION","StepQuestioning","onAnswer","level","testimony","A","direction","useOnSubmitTestimonyAPIRequest","EyeIcon","QUESTIONING","StepSuspectElimination","onEliminate","suspectId","pass","useOnEliminateSuspectAPIRequest","LawIcon","TRIAL","AnnouncementContent","didUserWin","outcome","announcementIcon","CriminalIcon","NewspaperIcon","announcementDuration","announcementTitle","announcementContent","groupScore","getActiveComponent","LoadingPage","DEFAULT","LOBBY","PhaseLobby","RULES","PhaseRules","SETUP","PhaseSetup","PhaseWitnessSelection","PhaseQuestionSelection","PhaseQuestioning","PhaseTrial","GAME_OVER","PhaseGameOver","PageError","theme","token","colorPrimary","THEME_COLORS","SLATE","colorLink","gameCollection","GAME_COLLECTION","propertyName","useGlobalState","userId","useState","PLACEHOLDER_PLAYER","activePlayer","setActivePlayer","isUser","setIsUser","useEffect","props","xmlns","viewBox","fill","d","cx","cy","r","opacity","x","y","rx","transform"],"sourceRoot":""}