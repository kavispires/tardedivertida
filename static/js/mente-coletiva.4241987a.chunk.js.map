{"version":3,"file":"static/js/mente-coletiva.4241987a.chunk.js","mappings":"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","sources":["components/icons/MedalArrowDownIcon.tsx","components/icons/MedalArrowUpIcon.tsx","components/icons/MedalPersonIcon.tsx","components/icons/SheepIcon.tsx","components/icons/StarIcon.tsx","components/metrics/PointsHighlight.tsx","components/ranking/RankingBoard.tsx","components/ranking/StepRankingWrapper.tsx","components/views/View.tsx","components/views/ViewIf.tsx","components/views/ViewOr.tsx","components/views/ViewSwitch.tsx","games/mente-coletiva/components/RulesBlobs.tsx","games/mente-coletiva/utils/mock.ts","games/mente-coletiva/components/RoundType.tsx","games/mente-coletiva/components/Pasture.tsx","games/mente-coletiva/components/CustomQuestion.tsx","games/mente-coletiva/StepQuestionSelection.tsx","games/mente-coletiva/StepQuestionSelectionWaiting.tsx","games/mente-coletiva/PhaseQuestionSelection.tsx","games/mente-coletiva/utils/api-requests.ts","games/mente-coletiva/components/Question.tsx","games/mente-coletiva/StepAnswering.tsx","games/mente-coletiva/PhaseEverybodyWrites.tsx","games/mente-coletiva/components/AdminAnswerControl.tsx","games/mente-coletiva/components/AnswerGroup.tsx","games/mente-coletiva/components/UserAnswers.tsx","games/mente-coletiva/StepCompare.tsx","games/mente-coletiva/PhaseCompare.tsx","../node_modules/@ant-design/icons-svg/es/asn/HeartFilled.js","../node_modules/@ant-design/icons/es/icons/HeartFilled.js","games/mente-coletiva/StepResolution.tsx","games/mente-coletiva/PhaseResolution.tsx","games/mente-coletiva/utils/achievements.ts","games/mente-coletiva/PhaseGameOver.tsx","games/mente-coletiva/SessionMenteColetiva.tsx","hooks/useWhichPlayerIsThe.ts","../node_modules/@ant-design/icons-svg/es/asn/CaretUpOutlined.js","../node_modules/@ant-design/icons/es/icons/CaretUpOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/CrownFilled.js","../node_modules/@ant-design/icons/es/icons/CrownFilled.js","../node_modules/@ant-design/icons-svg/es/asn/LockFilled.js","../node_modules/@ant-design/icons/es/icons/LockFilled.js","../node_modules/@ant-design/icons-svg/es/asn/PlusCircleFilled.js","../node_modules/@ant-design/icons/es/icons/PlusCircleFilled.js","../node_modules/@ant-design/icons-svg/es/asn/QuestionCircleFilled.js","../node_modules/@ant-design/icons/es/icons/QuestionCircleFilled.js"],"sourcesContent":["export function MedalArrowDownIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffe07d\"\n        d=\"M186.3 499l-22.2-41.8a10.41 10.41 0 00-12.2-5.1L106.7 466a10.41 10.41 0 01-13-6.89 10.52 10.52 0 01.3-7l79.8-192.6 111.1 46-79.8 192.59a10.41 10.41 0 01-13.6 5.6 10 10 0 01-5.2-4.7z\"\n      ></path>\n      <path\n        fill=\"#ffd064\"\n        d=\"M226.4 281.3l-70.5 170.4a10.54 10.54 0 018.3 5.5l22.1 41.8a10.4 10.4 0 0018.8-.9l79.8-192.6z\"\n      ></path>\n      <path\n        fill=\"#ffe07d\"\n        d=\"M325.5 499l22.2-41.8a10.41 10.41 0 0112.2-5.1l45.2 13.9a10.41 10.41 0 0013-6.89 10.52 10.52 0 00-.3-7L338 259.5l-111 46 79.8 192.6a10.41 10.41 0 0013.6 5.6 10.15 10.15 0 005.1-4.7z\"\n      ></path>\n      <path\n        fill=\"#ffd064\"\n        d=\"M417.8 452.1L338 259.5l-58.2 24.1L350.4 454a10.44 10.44 0 019.5-1.8l45.2 13.9a10.41 10.41 0 0013-6.89 10.75 10.75 0 00-.3-7.1z\"\n      ></path>\n      <path\n        fill=\"#e8ae4d\"\n        d=\"M275.9 14.5a32.12 32.12 0 0029.6 5.5 32.15 32.15 0 0137.4 14.5 32.15 32.15 0 0025.6 15.8 32.23 32.23 0 0129.6 27 32.21 32.21 0 0018.1 24 32.26 32.26 0 0117.9 35.9 32.51 32.51 0 008.2 29 32.15 32.15 0 013.7 39.9 32.33 32.33 0 00-2.8 30 32.2 32.2 0 01-11 38.5 32.43 32.43 0 00-13.4 26.9 32.2 32.2 0 01-24.1 32 32.32 32.32 0 00-22.2 20.3 32.2 32.2 0 01-34.1 21.1 32.23 32.23 0 00-28.1 10.9 32.25 32.25 0 01-39.4 7.4 32.08 32.08 0 00-30.1 0 32.27 32.27 0 01-39.4-7.4 32.5 32.5 0 00-28.1-10.9 32.32 32.32 0 01-34.1-21.1 32.32 32.32 0 00-22.2-20.3 32.39 32.39 0 01-24.2-32 32.25 32.25 0 00-13.4-27 32.2 32.2 0 01-11-38.5 32.33 32.33 0 00-2.8-30 32.15 32.15 0 013.7-39.9 32 32 0 008.2-29 32.24 32.24 0 0117.9-35.8 32.59 32.59 0 0018.2-24 32.23 32.23 0 0129.6-27 32.23 32.23 0 0025.6-15.9 32.38 32.38 0 0137.4-14.5 32.12 32.12 0 0029.6-5.5 32.44 32.44 0 0140.1.1z\"\n      ></path>\n      <circle cx=\"255.9\" cy=\"202.2\" r=\"142.2\" fill=\"#ffe07d\"></circle>\n      <path\n        fill=\"#ffd064\"\n        d=\"M255.9 60a146.36 146.36 0 00-31.7 3.5 142.24 142.24 0 010 277.3c76.6 17.5 152.8-30.5 170.3-107A142.08 142.08 0 00287.65 63.63h-.15A140.57 140.57 0 00255.9 60z\"\n      ></path>\n      <path d=\"M452.3 210.2a39.45 39.45 0 00-4.6-49.2 24.78 24.78 0 01-6.3-22.2 39.48 39.48 0 00-22-44.2 24.82 24.82 0 01-13.9-18.4A39.58 39.58 0 00369 42.9a24.55 24.55 0 01-19.6-12.2 39.47 39.47 0 00-46.1-17.8 25 25 0 01-22.7-4.2 39.68 39.68 0 00-49.4 0 24.44 24.44 0 01-22.7 4.2 39.77 39.77 0 00-46.1 17.8 24.71 24.71 0 01-19.6 12.2 39.58 39.58 0 00-36.5 33.3 24.45 24.45 0 01-13.9 18.4 39.54 39.54 0 00-22 44.2 24.78 24.78 0 01-6.3 22.2 39.69 39.69 0 00-4.6 49.2 24.45 24.45 0 012.1 23 39.63 39.63 0 0013.5 47.5 24.86 24.86 0 0110.3 20.7 39.6 39.6 0 0029.8 39.4 25.1 25.1 0 0113.2 8.6l-41.3 99.8a17.87 17.87 0 009.62 23.37h.08a18.33 18.33 0 0012.2.6l45.2-13.9a3 3 0 013.4 1.4l22.2 41.8a17.88 17.88 0 0032.3-1.5l43.1-104h1.7L300 501a17.92 17.92 0 0023.4 9.7 18.72 18.72 0 009-8.1l22.2-41.8a3 3 0 013.4-1.4l45.2 13.9a17.82 17.82 0 0021.7-23.9l-41.3-99.8a24.51 24.51 0 0113.2-8.6 39.6 39.6 0 0029.8-39.4 24.86 24.86 0 0110.3-20.7 39.55 39.55 0 0013.5-47.5 24.8 24.8 0 011.9-23.2zm-254.2 285a2.9 2.9 0 01-3.79 1.6 3.7 3.7 0 01-1.5-1.3l-22.2-41.8a17.85 17.85 0 00-21-8.7l-45.2 13.9a2.82 2.82 0 01-3.56-1.77V457a2.76 2.76 0 01.1-2l36.7-88.5a39.54 39.54 0 0036.7 16 24.88 24.88 0 0121.5 8.3A39.37 39.37 0 00236.4 403zm209.3-36.4l-45.2-13.9a17.91 17.91 0 00-21 8.7l-22.3 41.9a2.92 2.92 0 01-3.9 1.2 2.42 2.42 0 01-1.3-1.5L275.5 403a39.5 39.5 0 0040.5-12.3 24.8 24.8 0 0121.5-8.4 39.79 39.79 0 0036.7-15.9l36.7 88.6a2.91 2.91 0 01-1.59 3.8 2.5 2.5 0 01-1.9 0zM439.8 202a39.57 39.57 0 00-3.4 37 24.66 24.66 0 01-8.4 29.5 39.45 39.45 0 00-16.5 33.2 24.49 24.49 0 01-18.5 24.5 40 40 0 00-24.6 18.7v.1a43.15 43.15 0 00-2.9 6.2 24.66 24.66 0 01-26.1 16.2 39.85 39.85 0 00-34.6 13.4 24.5 24.5 0 01-30.2 5.6 38.38 38.38 0 00-10.9-3.8h-.1a38.38 38.38 0 00-15.1 0h-.1a35.64 35.64 0 00-10.9 3.9 24.6 24.6 0 01-30.2-5.6 39.85 39.85 0 00-34.6-13.4 24.58 24.58 0 01-26.1-16.2 38.43 38.43 0 00-2.9-6.2v-.1a39.78 39.78 0 00-24.5-18.7 24.49 24.49 0 01-18.5-24.5 39.78 39.78 0 00-16.6-33.2 24.44 24.44 0 01-8.4-29.5 39.57 39.57 0 00-3.4-37 24.62 24.62 0 012.9-30.6 39.75 39.75 0 0010.2-35.7 24.67 24.67 0 0113.7-27.5 39.71 39.71 0 0022.4-29.6A24.49 24.49 0 01144.2 58a39.94 39.94 0 0031.6-19.5 24.65 24.65 0 0128.7-11.1 40 40 0 0036.5-6.8 24.66 24.66 0 0130.8 0 39.61 39.61 0 0036.5 6.8A24.78 24.78 0 01337 38.5 39.76 39.76 0 00368.5 58a24.69 24.69 0 0122.7 20.7 39.71 39.71 0 0022.4 29.6 24.72 24.72 0 0113.7 27.5 40 40 0 0010.1 35.7 25.11 25.11 0 012.4 30.5z\"></path>\n      <path d=\"M113.9 192.1a7.59 7.59 0 008.4-6.5c8.2-67.3 65.7-118.1 133.6-118.1a134.78 134.78 0 01133.7 118.1 7.47 7.47 0 007.4 6.6 2.74 2.74 0 00.9-.1 7.49 7.49 0 006.51-8.34v-.06c-9.1-74.7-73-131.2-148.5-131.2S116.5 109 107.3 183.8a7.44 7.44 0 006.48 8.29zM398 212.3a7.59 7.59 0 00-8.4 6.5 134.73 134.73 0 01-267.4 0 7.51 7.51 0 10-14.9 1.9c9.2 74.8 73.1 131.2 148.6 131.2s139.4-56.5 148.6-131.3a7.45 7.45 0 00-6.47-8.3z\"></path>\n      <path\n        fill=\"#e8ae4d\"\n        d=\"M252.9 222.44L174 143.52a8 8 0 010-11.3l19.56-19.56a8 8 0 0111.31 0l53.75 53.65 31.52-31.53 22.23-22.22a8.08 8.08 0 0111.39 0l19.56 19.56a8 8 0 010 11.3l-53.08 53.09-25.84 25.83a8.12 8.12 0 01-11.47.12z\"\n      ></path>\n      <path d=\"M346.35 129l-19.56-19.56a12.54 12.54 0 00-17.66 0L258.51 160l-50.61-50.48a12.55 12.55 0 00-17.66 0l-19.56 19.56a12.55 12.55 0 000 17.67l78.91 78.91a12.55 12.55 0 0017.67 0l79.1-79a12.54 12.54 0 000-17.66zm-6.26 11.4l-78.92 78.9a3.49 3.49 0 01-4.94.06l-.06-.06-78.92-78.91a3.51 3.51 0 010-5l19.56-19.56a3.51 3.51 0 015 0l50.61 50.62a9 9 0 0012.54 0l50.61-50.62a3.6 3.6 0 012.85-1 3.53 3.53 0 012.28 1.14l19.38 19.38a3.72 3.72 0 010 5.13z\"></path>\n      <path\n        fill=\"#e8ae4d\"\n        d=\"M252.9 313.38L174 234.47a8 8 0 010-11.3l19.56-19.56a8 8 0 0111.31 0l53.75 53.65 31.52-31.53 22.23-22.22a8.08 8.08 0 0111.39 0l19.56 19.56a8 8 0 010 11.3l-53.08 53.09-25.84 25.83a8.1 8.1 0 01-11.45.13z\"\n      ></path>\n      <path d=\"M346.35 219.94l-19.56-19.56a12.54 12.54 0 00-17.66 0L258.51 251l-50.61-50.53a12.55 12.55 0 00-17.66 0L170.67 220a12.55 12.55 0 000 17.67l78.91 78.91a12.55 12.55 0 0017.67 0l79.1-79a12.54 12.54 0 000-17.66zm-6.26 11.4l-78.92 78.91a3.49 3.49 0 01-4.94.06l-.06-.06-78.92-78.91a3.51 3.51 0 010-5l19.56-19.56a3.5 3.5 0 014.95-.05l.05.05 50.61 50.62a9 9 0 0012.54 0l50.61-50.62a3.6 3.6 0 012.85-1.05 3.53 3.53 0 012.28 1.14l19.38 19.38a3.72 3.72 0 010 5.13z\"></path>\n      <path fill=\"none\" d=\"M0 0h512v512H0z\"></path>\n    </svg>\n  );\n}\n","export function MedalArrowUpIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffe07d\"\n        d=\"M186.3 499l-22.2-41.8a10.41 10.41 0 00-12.2-5.1L106.7 466a10.41 10.41 0 01-13-6.89 10.52 10.52 0 01.3-7l79.8-192.6 111.1 46-79.8 192.59a10.41 10.41 0 01-13.6 5.6 10 10 0 01-5.2-4.7z\"\n      ></path>\n      <path\n        fill=\"#ffd064\"\n        d=\"M226.4 281.3l-70.5 170.4a10.54 10.54 0 018.3 5.5l22.1 41.8a10.4 10.4 0 0018.8-.9l79.8-192.6z\"\n      ></path>\n      <path\n        fill=\"#ffe07d\"\n        d=\"M325.5 499l22.2-41.8a10.41 10.41 0 0112.2-5.1l45.2 13.9a10.41 10.41 0 0013-6.89 10.52 10.52 0 00-.3-7L338 259.5l-111 46 79.8 192.6a10.41 10.41 0 0013.6 5.6 10.15 10.15 0 005.1-4.7z\"\n      ></path>\n      <path\n        fill=\"#ffd064\"\n        d=\"M417.8 452.1L338 259.5l-58.2 24.1L350.4 454a10.44 10.44 0 019.5-1.8l45.2 13.9a10.41 10.41 0 0013-6.89 10.75 10.75 0 00-.3-7.1z\"\n      ></path>\n      <path\n        fill=\"#e8ae4d\"\n        d=\"M275.9 14.5a32.12 32.12 0 0029.6 5.5 32.15 32.15 0 0137.4 14.5 32.15 32.15 0 0025.6 15.8 32.23 32.23 0 0129.6 27 32.21 32.21 0 0018.1 24 32.26 32.26 0 0117.9 35.9 32.51 32.51 0 008.2 29 32.15 32.15 0 013.7 39.9 32.33 32.33 0 00-2.8 30 32.2 32.2 0 01-11 38.5 32.43 32.43 0 00-13.4 26.9 32.2 32.2 0 01-24.1 32 32.32 32.32 0 00-22.2 20.3 32.2 32.2 0 01-34.1 21.1 32.23 32.23 0 00-28.1 10.9 32.25 32.25 0 01-39.4 7.4 32.08 32.08 0 00-30.1 0 32.27 32.27 0 01-39.4-7.4 32.5 32.5 0 00-28.1-10.9 32.32 32.32 0 01-34.1-21.1 32.32 32.32 0 00-22.2-20.3 32.39 32.39 0 01-24.2-32 32.25 32.25 0 00-13.4-27 32.2 32.2 0 01-11-38.5 32.33 32.33 0 00-2.8-30 32.15 32.15 0 013.7-39.9 32 32 0 008.2-29 32.24 32.24 0 0117.9-35.8 32.59 32.59 0 0018.2-24 32.23 32.23 0 0129.6-27 32.23 32.23 0 0025.6-15.9 32.38 32.38 0 0137.4-14.5 32.12 32.12 0 0029.6-5.5 32.44 32.44 0 0140.1.1z\"\n      ></path>\n      <circle cx=\"255.9\" cy=\"202.2\" r=\"142.2\" fill=\"#ffe07d\"></circle>\n      <path\n        fill=\"#ffd064\"\n        d=\"M255.9 60a146.36 146.36 0 00-31.7 3.5 142.24 142.24 0 010 277.3c76.6 17.5 152.8-30.5 170.3-107A142.08 142.08 0 00287.65 63.63h-.15A140.57 140.57 0 00255.9 60z\"\n      ></path>\n      <path d=\"M452.3 210.2a39.45 39.45 0 00-4.6-49.2 24.78 24.78 0 01-6.3-22.2 39.48 39.48 0 00-22-44.2 24.82 24.82 0 01-13.9-18.4A39.58 39.58 0 00369 42.9a24.55 24.55 0 01-19.6-12.2 39.47 39.47 0 00-46.1-17.8 25 25 0 01-22.7-4.2 39.68 39.68 0 00-49.4 0 24.44 24.44 0 01-22.7 4.2 39.77 39.77 0 00-46.1 17.8 24.71 24.71 0 01-19.6 12.2 39.58 39.58 0 00-36.5 33.3 24.45 24.45 0 01-13.9 18.4 39.54 39.54 0 00-22 44.2 24.78 24.78 0 01-6.3 22.2 39.69 39.69 0 00-4.6 49.2 24.45 24.45 0 012.1 23 39.63 39.63 0 0013.5 47.5 24.86 24.86 0 0110.3 20.7 39.6 39.6 0 0029.8 39.4 25.1 25.1 0 0113.2 8.6l-41.3 99.8a17.87 17.87 0 009.62 23.37h.08a18.33 18.33 0 0012.2.6l45.2-13.9a3 3 0 013.4 1.4l22.2 41.8a17.88 17.88 0 0032.3-1.5l43.1-104h1.7L300 501a17.92 17.92 0 0023.4 9.7 18.72 18.72 0 009-8.1l22.2-41.8a3 3 0 013.4-1.4l45.2 13.9a17.82 17.82 0 0021.7-23.9l-41.3-99.8a24.51 24.51 0 0113.2-8.6 39.6 39.6 0 0029.8-39.4 24.86 24.86 0 0110.3-20.7 39.55 39.55 0 0013.5-47.5 24.8 24.8 0 011.9-23.2zm-254.2 285a2.9 2.9 0 01-3.79 1.6 3.7 3.7 0 01-1.5-1.3l-22.2-41.8a17.85 17.85 0 00-21-8.7l-45.2 13.9a2.82 2.82 0 01-3.56-1.77V457a2.76 2.76 0 01.1-2l36.7-88.5a39.54 39.54 0 0036.7 16 24.88 24.88 0 0121.5 8.3A39.37 39.37 0 00236.4 403zm209.3-36.4l-45.2-13.9a17.91 17.91 0 00-21 8.7l-22.3 41.9a2.92 2.92 0 01-3.9 1.2 2.42 2.42 0 01-1.3-1.5L275.5 403a39.5 39.5 0 0040.5-12.3 24.8 24.8 0 0121.5-8.4 39.79 39.79 0 0036.7-15.9l36.7 88.6a2.91 2.91 0 01-1.59 3.8 2.5 2.5 0 01-1.9 0zM439.8 202a39.57 39.57 0 00-3.4 37 24.66 24.66 0 01-8.4 29.5 39.45 39.45 0 00-16.5 33.2 24.49 24.49 0 01-18.5 24.5 40 40 0 00-24.6 18.7v.1a43.15 43.15 0 00-2.9 6.2 24.66 24.66 0 01-26.1 16.2 39.85 39.85 0 00-34.6 13.4 24.5 24.5 0 01-30.2 5.6 38.38 38.38 0 00-10.9-3.8h-.1a38.38 38.38 0 00-15.1 0h-.1a35.64 35.64 0 00-10.9 3.9 24.6 24.6 0 01-30.2-5.6 39.85 39.85 0 00-34.6-13.4 24.58 24.58 0 01-26.1-16.2 38.43 38.43 0 00-2.9-6.2v-.1a39.78 39.78 0 00-24.5-18.7 24.49 24.49 0 01-18.5-24.5 39.78 39.78 0 00-16.6-33.2 24.44 24.44 0 01-8.4-29.5 39.57 39.57 0 00-3.4-37 24.62 24.62 0 012.9-30.6 39.75 39.75 0 0010.2-35.7 24.67 24.67 0 0113.7-27.5 39.71 39.71 0 0022.4-29.6A24.49 24.49 0 01144.2 58a39.94 39.94 0 0031.6-19.5 24.65 24.65 0 0128.7-11.1 40 40 0 0036.5-6.8 24.66 24.66 0 0130.8 0 39.61 39.61 0 0036.5 6.8A24.78 24.78 0 01337 38.5 39.76 39.76 0 00368.5 58a24.69 24.69 0 0122.7 20.7 39.71 39.71 0 0022.4 29.6 24.72 24.72 0 0113.7 27.5 40 40 0 0010.1 35.7 25.11 25.11 0 012.4 30.5z\"></path>\n      <path d=\"M113.9 192.1a7.59 7.59 0 008.4-6.5c8.2-67.3 65.7-118.1 133.6-118.1a134.78 134.78 0 01133.7 118.1 7.47 7.47 0 007.4 6.6 2.74 2.74 0 00.9-.1 7.49 7.49 0 006.51-8.34v-.06c-9.1-74.7-73-131.2-148.5-131.2S116.5 109 107.3 183.8a7.44 7.44 0 006.48 8.29zM398 212.3a7.59 7.59 0 00-8.4 6.5 134.73 134.73 0 01-267.4 0 7.51 7.51 0 10-14.9 1.9c9.2 74.8 73.1 131.2 148.6 131.2s139.4-56.5 148.6-131.3a7.45 7.45 0 00-6.47-8.3z\"></path>\n      <path\n        fill=\"#e8ae4d\"\n        d=\"M264.11 183.6L343 262.52a8 8 0 010 11.3l-19.56 19.56a8 8 0 01-11.3 0l-53.75-53.65-31.49 31.53-22.22 22.22a8.09 8.09 0 01-11.4 0l-19.56-19.56a8 8 0 010-11.31l53.08-53.08 25.83-25.83a8.12 8.12 0 0111.47-.12z\"\n      ></path>\n      <path d=\"M170.67 277.05l19.56 19.56a12.54 12.54 0 0017.66 0L258.51 246l50.62 50.52a12.55 12.55 0 0017.66 0L346.35 277a12.54 12.54 0 000-17.66l-78.91-78.91a12.55 12.55 0 00-17.67 0l-79.1 79a12.54 12.54 0 000 17.66zm6.27-11.4l79-78.91a3.49 3.49 0 014.94-.06l.06.06 78.92 78.91a3.51 3.51 0 010 5l-19.56 19.56a3.51 3.51 0 01-5 0l-50.61-50.62a9 9 0 00-12.54 0l-50.65 50.62a3.54 3.54 0 01-2.85 1 3.46 3.46 0 01-2.28-1.14l-19.47-19.29a3.7 3.7 0 010-5.13z\"></path>\n      <path\n        fill=\"#e8ae4d\"\n        d=\"M264.11 92.65L343 171.57a8 8 0 010 11.3l-19.56 19.56a8 8 0 01-11.3 0l-53.75-53.65-31.49 31.53-22.22 22.22a8.09 8.09 0 01-11.4 0L173.71 183a8 8 0 010-11.3l53.08-53.09 25.83-25.83a8.12 8.12 0 0111.47-.12z\"\n      ></path>\n      <path d=\"M170.67 186.1l19.56 19.56a12.54 12.54 0 0017.66 0l50.62-50.61 50.62 50.52a12.55 12.55 0 0017.66 0L346.35 186a12.54 12.54 0 000-17.66l-78.91-78.91a12.55 12.55 0 00-17.67 0l-79.1 79a12.54 12.54 0 000 17.66zm6.23-11.4l79-78.91a3.49 3.49 0 014.94-.06l.06.06 78.9 78.91a3.51 3.51 0 010 5l-19.56 19.6a3.51 3.51 0 01-5 0l-50.61-50.62a9 9 0 00-12.54 0l-50.65 50.62a3.59 3.59 0 01-5.13-.13l-19.41-19.34a3.7 3.7 0 010-5.13z\"></path>\n    </svg>\n  );\n}\n","export function MedalPersonIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffe07d\"\n        d=\"M186.32 499l-22.17-41.81a10.4 10.4 0 00-12.22-5.08L106.68 466a10.38 10.38 0 01-12.64-13.9l79.78-192.62 111.05 46-79.79 192.61a10.39 10.39 0 01-18.77.89z\"\n      ></path>\n      <path\n        fill=\"#ffd064\"\n        d=\"M226.47 281.29L155.93 451.7a10.39 10.39 0 018.26 5.47L186.32 499a10.39 10.39 0 0018.77-.89l79.78-192.62z\"\n      ></path>\n      <path\n        fill=\"#ffe07d\"\n        d=\"M325.55 499l22.18-41.81a10.37 10.37 0 0112.2-5.08L405.18 466a10.39 10.39 0 0012.65-13.9l-79.79-192.63-111 46 79.79 192.62a10.39 10.39 0 0018.77.89z\"\n      ></path>\n      <path\n        fill=\"#ffd064\"\n        d=\"M417.83 452.09l-79.79-192.61-58.19 24.1 70.56 170.35a10.42 10.42 0 019.53-1.82L405.18 466a10.39 10.39 0 0012.65-13.9z\"\n      ></path>\n      <path\n        fill=\"#e8ae4d\"\n        d=\"M275.93 14.53a32.23 32.23 0 0029.59 5.53 32.23 32.23 0 0137.41 14.47 32.25 32.25 0 0025.61 15.85 32.24 32.24 0 0129.61 27 32.24 32.24 0 0018.14 24 32.24 32.24 0 0117.86 35.87 32.23 32.23 0 008.24 29 32.24 32.24 0 013.7 39.9 32.21 32.21 0 00-2.78 30 32.25 32.25 0 01-11 38.54 32.21 32.21 0 00-13.38 26.9 32.24 32.24 0 01-24.14 32 32.22 32.22 0 00-22.25 20.28A32.27 32.27 0 01338.45 375a32.24 32.24 0 00-28.08 10.87 32.24 32.24 0 01-39.39 7.37 32.19 32.19 0 00-30.1 0 32.25 32.25 0 01-39.39-7.37A32.22 32.22 0 00173.41 375a32.24 32.24 0 01-34.06-21.1 32.22 32.22 0 00-22.25-20.28 32.23 32.23 0 01-24.15-32 32.19 32.19 0 00-13.42-27 32.25 32.25 0 01-11-38.54 32.21 32.21 0 00-2.78-30 32.24 32.24 0 013.7-39.9 32.2 32.2 0 008.23-29 32.27 32.27 0 0117.9-35.8 32.23 32.23 0 0018.16-24 32.22 32.22 0 0129.61-27 32.24 32.24 0 0025.58-15.85 32.22 32.22 0 0137.36-14.47 32.2 32.2 0 0029.64-5.53 32.26 32.26 0 0140.09 0z\"\n      ></path>\n      <circle cx=\"255.93\" cy=\"202.23\" r=\"142.21\" fill=\"#ffe07d\"></circle>\n      <path\n        fill=\"#ffd064\"\n        d=\"M255.93 60a142.49 142.49 0 00-31.67 3.54 142.24 142.24 0 010 277.32A142.21 142.21 0 10255.93 60z\"\n      ></path>\n      <path d=\"M452.36 210.23a39.57 39.57 0 00-4.56-49.18 24.71 24.71 0 01-6.32-22.22 39.59 39.59 0 00-22-44.22 24.71 24.71 0 01-13.94-18.43 39.57 39.57 0 00-36.5-33.28 24.71 24.71 0 01-19.64-12.16 39.57 39.57 0 00-46.07-17.84 24.73 24.73 0 01-22.71-4.25 39.57 39.57 0 00-49.38 0 24.7 24.7 0 01-22.7 4.25 39.55 39.55 0 00-46.06 17.84 24.75 24.75 0 01-19.65 12.16 39.58 39.58 0 00-36.5 33.28A24.7 24.7 0 0192.4 94.61a39.59 39.59 0 00-22 44.22 24.71 24.71 0 01-6.32 22.22 39.57 39.57 0 00-4.56 49.18 24.67 24.67 0 012.13 23 39.57 39.57 0 0013.53 47.51 24.72 24.72 0 0110.29 20.68 39.56 39.56 0 0029.77 39.41 24.81 24.81 0 0113.21 8.63l-41.34 99.76a17.89 17.89 0 0021.82 23.95l45.25-13.89a2.89 2.89 0 013.39 1.41l22.17 41.81a17.88 17.88 0 0032.27-1.5l43.07-104h1.71l43.07 104a17.88 17.88 0 0032.32 1.54l22.17-41.81a2.9 2.9 0 013.4-1.41l45.24 13.89a17.88 17.88 0 0021.77-23.94l-41.34-99.77a24.84 24.84 0 0113.22-8.63 39.56 39.56 0 0029.76-39.41 24.78 24.78 0 0110.3-20.68 39.57 39.57 0 0013.52-47.51 24.73 24.73 0 012.13-23zm-254.2 285a2.89 2.89 0 01-3.76 1.57 2.83 2.83 0 01-1.45-1.32l-22.17-41.81a17.93 17.93 0 00-21-8.72l-45.24 13.89a2.89 2.89 0 01-3.61-3.84l36.67-88.51a39.57 39.57 0 0036.66 15.95 24.74 24.74 0 0121.54 8.34A39.37 39.37 0 00236.36 403zm209.23-36.4L362.15 445a17.91 17.91 0 00-21 8.72l-22.22 41.75a2.87 2.87 0 01-5.2-.25L275.51 403a39.53 39.53 0 0040.52-12.27 24.74 24.74 0 0121.54-8.35 39.49 39.49 0 0036.66-15.94l36.7 88.56a2.88 2.88 0 01-1.56 3.78 2.85 2.85 0 01-1.95.09zM439.79 202a39.75 39.75 0 00-3.42 37 24.6 24.6 0 01-8.44 29.55 39.75 39.75 0 00-16.54 33.22 24.61 24.61 0 01-18.46 24.54A39.73 39.73 0 00368.36 345v.08a40.3 40.3 0 00-2.85 6.19 24.65 24.65 0 01-26.15 16.19 39.71 39.71 0 00-34.6 13.4 24.63 24.63 0 01-30.22 5.65 40.06 40.06 0 00-10.93-3.84h-.09a39.59 39.59 0 00-15.11 0h-.06a40.08 40.08 0 00-10.93 3.85 24.63 24.63 0 01-30.23-5.65 39.69 39.69 0 00-34.59-13.4 24.63 24.63 0 01-26.14-16.19 40.4 40.4 0 00-2.87-6.19V345a39.73 39.73 0 00-24.51-18.72 24.62 24.62 0 01-18.53-24.54 39.72 39.72 0 00-16.62-33.19A24.64 24.64 0 0175.5 239a39.69 39.69 0 00-3.43-37 24.65 24.65 0 012.86-30.59 39.73 39.73 0 0010.17-35.69 24.63 24.63 0 0113.69-27.53 39.72 39.72 0 0022.38-29.61 24.62 24.62 0 0122.76-20.72 39.65 39.65 0 0031.5-19.53 24.65 24.65 0 0128.67-11.11 39.69 39.69 0 0036.48-6.82 24.64 24.64 0 0130.75 0 39.71 39.71 0 0036.49 6.82 24.63 24.63 0 0128.67 11.11 39.67 39.67 0 0031.55 19.53 24.62 24.62 0 0122.69 20.72 39.73 39.73 0 0022.37 29.61 24.62 24.62 0 0113.7 27.53 39.76 39.76 0 0010.13 35.69 24.63 24.63 0 012.86 30.59z\"></path>\n      <path d=\"M113.93 192.13a7.5 7.5 0 008.36-6.53c8.23-67.31 65.72-118.07 133.64-118.07a134.77 134.77 0 01133.71 118.14 7.48 7.48 0 007.43 6.58 5.8 5.8 0 00.92-.05 7.52 7.52 0 006.54-8.36C395.35 109 331.46 52.53 255.93 52.53S116.56 109 107.35 183.77a7.52 7.52 0 006.53 8.36zm284.05 20.13a7.53 7.53 0 00-8.35 6.53 134.72 134.72 0 01-267.39.06 7.5 7.5 0 10-14.89 1.83c9.2 74.83 73.08 131.25 148.58 131.25s139.41-56.45 148.58-131.32a7.48 7.48 0 00-6.49-8.35z\"></path>\n      <path\n        fill=\"#e8ae4d\"\n        d=\"M316.12 272.42c12.18 7.07 26.14 15.17 36.14 26.35a143.32 143.32 0 01-192.64 0c10-11.18 24-19.28 36.14-26.35 14.95-8.69 27.89-16.2 27.89-25.61a32.89 32.89 0 00-12.15-26.26c-7.14-1.18-10.87-14.58-10.87-21.93a10.22 10.22 0 013.05-8.63c-5.17-16.78-5.08-40.08 6.67-56.56 9.18-12.9 24.32-19.75 43.79-19.81a41.59 41.59 0 0140.09 8.44c8.75 7.88 22 27.1 13.92 67.75 1.69 1.18 3.31 3.64 3.31 8.81 0 7.35-3.74 20.78-10.91 21.93a32.62 32.62 0 00-12.3 26.26c-.01 9.41 12.92 16.92 27.87 25.61z\"\n      ></path>\n      <path d=\"M352.26 305a6.2 6.2 0 01-4.65-2.08c-9.34-10.44-22.76-18.23-34.6-25.11-16.65-9.67-31-18-31-31a39 39 0 0114.66-31.14 6.32 6.32 0 012.9-1.27c1.78-.29 5.66-8.37 5.66-15.78 0-2.94-.69-3.73-.69-3.74a6.12 6.12 0 01-2.49-6.29c7.53-37.69-4.28-55-12-61.9a35.53 35.53 0 00-34-7.14 6.64 6.64 0 01-1.87.3c-17.37.05-30.77 6-38.74 17.19-11.1 15.57-10.06 37.27-5.79 51.12a6.23 6.23 0 01-1.63 6.32 4 4 0 00-1.19 3.37v.77c0 7.36 3.88 15.47 5.66 15.78a6.54 6.54 0 012.9 1.31A39.33 39.33 0 01229.86 247c0 12.84-14.34 21.18-31 30.83-11.88 6.9-25.31 14.69-34.65 25.13a6.23 6.23 0 11-9.6-7.93l.32-.37c10.65-11.92 25-20.24 37.64-27.59 11.64-6.75 24.78-14.4 24.78-20.21a26.85 26.85 0 00-8.86-20.59c-10.37-3.45-14-19.56-14.15-27.23a16.53 16.53 0 012.42-10.35c-4.27-16.6-4.42-40.76 8.45-58.83 10.25-14.39 26.8-22.13 47.91-22.42a48.1 48.1 0 0145.17 10c9.49 8.55 23.94 28.89 16.5 70.51 1.59 2.34 2.83 5.75 2.83 10.73 0 7.54-3.63 24.18-14.22 27.61a26.63 26.63 0 00-9 20.44c0 6 13.16 13.6 24.77 20.34 12.67 7.36 27 15.69 37.66 27.6a6.24 6.24 0 01-4.57 10.33z\"></path>\n    </svg>\n  );\n}\n","export function SheepIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fff\"\n        d=\"M202.566 18.465c-19.308 8.652-35.28 23.418-45.464 41.828-10.934-6.543-23.813-10.172-37.57-9.793-35.684.988-65.102 29.41-67.344 65.04a69.42 69.42 0 002.398 22.976C28.446 149.098 10 174.71 10 204.645c0 20.546 8.7 39.054 22.602 52.074a69.512 69.512 0 00-2.73 19.265c0 30.055 19.097 55.645 45.812 65.317a72.42 72.42 0 00-.133 4.133c0 38.355 31.094 69.449 69.449 69.449a69.167 69.167 0 0028.629-6.18c17.601 17.54 41.883 28.387 68.691 28.387h.243c26.812 0 51.09-10.848 68.69-28.387a69.181 69.181 0 0028.63 6.18c38.355 0 69.449-31.094 69.449-69.45 0-1.386-.05-2.761-.133-4.132 26.719-9.672 45.813-35.262 45.813-65.317 0-6.687-.965-13.148-2.73-19.265 13.902-13.02 22.6-31.524 22.6-52.074 0-29.934-18.445-55.547-44.581-66.13a69.523 69.523 0 002.398-22.976c-2.242-35.629-31.664-64.05-67.347-65.039-13.754-.379-26.633 3.25-37.57 9.793-10.137-18.328-26.016-33.047-45.212-41.715l-.054-.023a100.043 100.043 0 00-79.95-.09zm0 0\"\n      ></path>\n      <g fill=\"#898998\">\n        <path d=\"M334.941 425v66c0 6.074-4.925 11-11 11h-18c-6.074 0-11-4.926-11-11v-66l18.457-15.375zm-185 0v66c0 6.074 4.926 11 11 11h18c6.075 0 11-4.926 11-11v-66l-16.832-15.375zm151.004-229.29c-10.191 0-19.398-4.206-25.996-10.968-5.996 11.797-18.238 19.887-32.383 19.887-14.207 0-26.503-8.168-32.468-20.063-6.606 6.868-15.883 11.145-26.16 11.145-.97 0-1.926-.05-2.875-.125-14.204 16.824-22.907 39.484-22.907 64.414 0 51.914 37.735 94 84.285 94 46.547 0 84.282-42.086 84.282-94 0-24.93-8.703-47.59-22.903-64.414a36.82 36.82 0 01-2.875.125zm0 0\"></path>\n        <path d=\"M181.047 195.605s-35.387 14.407-73.777 20.684c-5.586.914-8.293 7.383-5.063 12.027 18.902 27.204 55.95 23.582 55.95 23.582m147.007-56.293s35.39 14.407 73.781 20.684c5.586.914 8.293 7.383 5.063 12.027-18.903 27.204-55.95 23.582-55.95 23.582\"></path>\n      </g>\n      <path d=\"M484.883 204.645c0-30.434-16.668-57.774-43.11-71.801a79.151 79.151 0 001.063-12.922c0-43.809-35.645-79.45-79.45-79.45a79.39 79.39 0 00-31.945 6.704c-11.117-16.36-26.726-29.567-44.757-37.711-5.032-2.27-10.957-.035-13.23 5-2.27 5.031-.036 10.957 5 13.23 17.077 7.711 31.487 21.008 40.573 37.438a9.993 9.993 0 006.153 4.816 9.993 9.993 0 007.734-1.074 59.352 59.352 0 0130.473-8.402c32.777 0 59.449 26.668 59.449 59.449 0 5.363-.734 10.719-2.176 15.922a9.998 9.998 0 005.883 11.937c23.289 9.434 38.336 31.754 38.336 56.864 0 17.136-6.902 33.035-19.434 44.773a9.989 9.989 0 00-2.773 10.07 59.538 59.538 0 012.336 16.496c0 24.954-15.758 47.422-39.215 55.914a10.001 10.001 0 00-6.578 9.993c.078 1.32.117 2.476.117 3.543 0 32.78-26.668 59.449-59.45 59.449-8.519 0-16.76-1.778-24.5-5.29a10.005 10.005 0 00-11.187 2.024c-16.48 16.426-38.37 25.469-61.636 25.469-.04 0-.079.008-.118.008-.043 0-.082-.008-.12-.008-23.266 0-45.153-9.043-61.637-25.469a10.007 10.007 0 00-11.188-2.023c-7.738 3.511-15.98 5.289-24.5 5.289-32.777 0-59.445-26.668-59.445-59.45 0-1.066.035-2.222.113-3.542a10.001 10.001 0 00-6.578-9.993c-23.457-8.492-39.215-30.96-39.215-55.914 0-5.566.79-11.117 2.34-16.496a10.005 10.005 0 00-2.773-10.07C26.902 237.68 20 221.781 20 204.645c0-25.11 15.047-47.43 38.336-56.864a9.994 9.994 0 005.883-11.937 59.64 59.64 0 01-2.172-15.922c0-32.777 26.668-59.45 59.45-59.45a59.339 59.339 0 0130.468 8.403 10 10 0 0013.887-3.742c9.128-16.508 23.62-29.844 40.804-37.543 5.04-2.258 7.293-8.176 5.035-13.215-2.257-5.04-8.175-7.293-13.214-5.035-18.153 8.137-33.86 21.387-45.036 37.832a79.452 79.452 0 00-31.945-6.7c-43.808 0-79.45 35.641-79.45 79.45 0 4.328.356 8.648 1.063 12.922C16.668 146.87 0 174.21 0 204.644c0 20.399 7.79 40.168 21.547 55.118a79.468 79.468 0 00-1.676 16.222c0 30.914 18.102 58.977 45.715 71.946 1.27 40.972 33.723 74.215 74.367 76.773-.004.102-.016.195-.016.297v66c0 11.578 9.422 21 21 21h18c11.583 0 21-9.422 21-21v-52.578c13.215 5.68 27.57 8.664 42.383 8.664.04 0 .078-.008.118-.008.042 0 .082.008.12.008 14.81 0 29.169-2.984 42.38-8.664V491c0 11.578 9.421 21 21 21h18c11.582 0 21-9.422 21-21v-66c0-.102-.012-.195-.012-.297 40.64-2.558 73.097-35.8 74.363-76.773 27.617-12.97 45.719-41.032 45.719-71.946 0-5.449-.563-10.882-1.68-16.222 13.766-14.95 21.555-34.719 21.555-55.117zM179.94 491c0 .55-.449 1-1 1h-18c-.55 0-1-.45-1-1v-66c0-.516-.05-1.02-.129-1.516a78.758 78.758 0 0011.63-3.129 108.163 108.163 0 008.5 6.747zm145 0c0 .55-.449 1-1 1h-18c-.55 0-1-.45-1-1v-63.898c2.926-2.102 5.77-4.34 8.496-6.747a79.018 79.018 0 0011.63 3.13c-.075.495-.126 1-.126 1.515zm0 0\"></path>\n      <path d=\"M242.32 20h.243c5.523 0 10-4.477 10-10s-4.477-10-10-10h-.243c-5.523 0-10 4.477-10 10s4.477 10 10 10zm-39.43 157.633c-5.011 5.21-11.742 8.078-18.952 8.078-14.508 0-26.313-11.805-26.313-26.313 0-5.523-4.477-10-10-10s-10 4.477-10 10c0 14.067 6.313 26.68 16.242 35.18-13.129 4.16-30.398 8.93-48.21 11.844-6.024.984-11.04 4.933-13.423 10.558-2.39 5.649-1.734 12.016 1.762 17.043 15.3 22.024 39.984 26.954 54.184 27.856C149.09 318.359 191.023 364 242.44 364c51.395 0 93.313-45.598 94.262-102.047 13.938-.68 39.723-5.2 55.52-27.93 3.492-5.027 4.152-11.398 1.761-17.043-2.386-5.625-7.402-9.574-13.425-10.558-18.25-2.984-35.946-7.922-49.184-12.152 9.723-8.497 15.887-20.973 15.887-34.872 0-5.523-4.48-10-10-10-5.524 0-10 4.477-10 10 0 14.508-11.805 26.313-26.317 26.313-7.144 0-13.836-2.824-18.832-7.95-2.254-2.312-5.48-3.394-8.668-2.906s-5.945 2.48-7.406 5.356c-4.523 8.89-13.516 14.418-23.469 14.418-10.015 0-19.035-5.574-23.53-14.543a9.997 9.997 0 00-7.438-5.402 10.003 10.003 0 00-8.711 2.949zm-90.25 47.883c16.688-2.957 32.512-7.246 45.075-11.157-3.86 8.711-6.594 17.985-8.117 27.59-9.578-.57-26.114-3.539-36.957-16.433zm222.65 16.46c-1.552-9.788-4.353-19.242-8.33-28.097 12.794 4.031 29.235 8.559 46.61 11.637-11.289 13.379-28.953 16.043-38.28 16.46zm-92.724-27.347c13.461 0 25.918-5.734 34.579-15.48 6.578 3.956 14.058 6.183 21.894 6.5 11.43 15.18 17.688 34.292 17.688 54.351 0 42.48-28.04 77.676-64.286 83.219v-13.586l13.18-10.703c4.29-3.48 4.942-9.778 1.461-14.067-3.484-4.289-9.781-4.941-14.066-1.457l-10.45 8.48-10.445-8.48c-4.289-3.48-10.586-2.828-14.066 1.457-3.485 4.29-2.828 10.586 1.457 14.067l12.93 10.496v13.793c-36.247-5.543-64.286-40.739-64.286-83.219 0-20.059 6.258-39.172 17.688-54.352 7.906-.316 15.441-2.578 22.058-6.597 8.653 9.808 21.141 15.578 34.664 15.578zm0 0\"></path>\n      <path d=\"M205.36 259.5c0 2.629 1.07 5.21 2.93 7.07a10.087 10.087 0 007.07 2.93c2.64 0 5.21-1.07 7.07-2.93 1.87-1.86 2.93-4.441 2.93-7.07s-1.06-5.21-2.93-7.07a10.073 10.073 0 00-7.07-2.93c-2.63 0-5.208 1.07-7.07 2.93a10.08 10.08 0 00-2.93 7.07zm64.16 10c2.632 0 5.21-1.07 7.07-2.93 1.86-1.86 2.93-4.441 2.93-7.07s-1.07-5.21-2.93-7.07a10.073 10.073 0 00-7.07-2.93c-2.637 0-5.208 1.07-7.07 2.93-1.86 1.86-2.93 4.441-2.93 7.07s1.07 5.21 2.93 7.07a10.073 10.073 0 007.07 2.93zm0 0\"></path>\n    </svg>\n  );\n}\n","export function StarIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffb820\"\n        d=\"M491.64 188.725l-153.53-22.31-68.66-139.12c-2.75-5.57-8.1-8.36-13.45-8.36l.02 400.2 137.3 72.19c11.01 5.78 23.86-3.56 21.76-15.81l-26.22-152.92 111.09-108.29c8.91-8.68 3.99-23.79-8.31-25.58z\"\n      ></path>\n      <path\n        fill=\"#ffd06a\"\n        d=\"M356.62 312.125s23.68 138.03 23.76 138.49c-.08-.01-122.45-31-124.36-31.48-.02-.01-137.34 72.19-137.34 72.19-11.01 5.78-23.86-3.56-21.76-15.81l26.22-152.92-111.09-108.29c-8.91-8.68-3.99-23.79 8.31-25.58l153.53-22.31 68.66-139.12c2.75-5.57 8.1-8.36 13.45-8.36l62.19 174.9 139.06 20.21z\"\n      ></path>\n      <path d=\"M510.883 196.615c-2.666-8.204-9.625-14.07-18.16-15.311l-149.632-21.743-66.918-135.588c-3.817-7.735-11.547-12.54-20.173-12.54s-16.356 4.805-20.173 12.54L168.91 159.561 19.278 181.305c-8.537 1.24-15.495 7.106-18.161 15.311s-.484 17.04 5.693 23.062l108.274 105.541-9.911 57.786a7.501 7.501 0 006.124 8.66 7.499 7.499 0 008.66-6.125l10.578-61.672a7.502 7.502 0 00-2.157-6.639L17.28 208.934c-2.089-2.036-2.798-4.909-1.897-7.684.902-2.775 3.164-4.683 6.052-5.103l153.534-22.31a7.498 7.498 0 005.647-4.103l68.662-139.125c1.292-2.617 3.804-4.179 6.722-4.179s5.431 1.562 6.722 4.179l68.663 139.125a7.5 7.5 0 005.647 4.103l153.534 22.31c2.888.42 5.15 2.327 6.051 5.102.902 2.775.193 5.648-1.896 7.685L383.622 317.228a7.499 7.499 0 00-2.157 6.639l26.227 152.913c.494 2.876-.621 5.617-2.982 7.332-2.361 1.714-5.312 1.929-7.895.57L259.49 412.487a7.504 7.504 0 00-6.98 0l-137.325 72.195c-2.583 1.358-5.535 1.144-7.894-.57-2.361-1.715-3.476-4.456-2.982-7.332l10.578-61.673a7.501 7.501 0 00-6.124-8.66 7.501 7.501 0 00-8.66 6.125l-10.578 61.673c-1.458 8.502 1.971 16.933 8.95 22.003 3.943 2.865 8.557 4.32 13.201 4.32a22.51 22.51 0 0010.49-2.608L256 427.6l133.834 70.36c7.635 4.014 16.713 3.357 23.692-1.712 6.979-5.07 10.408-13.502 8.949-22.003l-25.56-149.027L505.19 219.677c6.177-6.022 8.359-14.859 5.693-23.062z\"></path>\n    </svg>\n  );\n}\n","import { StarIcon } from 'components/icons/StarIcon';\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function PointsHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<StarIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode, useEffect, useMemo, useState } from 'react';\nimport { orderBy } from 'lodash';\nimport { useEffectOnce } from 'react-use';\n// Ant Design Resources\nimport { Tooltip } from 'antd';\nimport { CrownFilled } from '@ant-design/icons';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useDimensions } from 'hooks/useDimensions';\n// Components\nimport { Translate } from 'components/language';\nimport { Avatar } from 'components/avatars';\n\ntype GainedPointProps = {\n  gainedPoint: number;\n  order: number;\n  description?: any;\n};\n\nfunction GainedPoint({ gainedPoint, order, description }: GainedPointProps): JSX.Element {\n  const isPositive = gainedPoint > 0;\n  const isNegative = gainedPoint < 0;\n  return (\n    <li\n      className={clsx(\n        'ranking-board__gained-point',\n        isPositive && 'ranking-board__gained-point--plus',\n        isNegative && 'ranking-board__gained-point--minus',\n        `ranking-board__gained-point--${order}`\n      )}\n    >\n      <Tooltip\n        title={description ?? <Translate pt=\"Pontos ganhos\" en=\"Gained Points\" />}\n        color={isPositive ? 'gold' : isNegative ? 'red' : 'gray'}\n      >\n        {isPositive ? '+' : ''}\n        {gainedPoint}\n      </Tooltip>\n    </li>\n  );\n}\n\ntype GainedPointsProps = {\n  gainedPoints: number[] | number;\n  playerId: PlayerId;\n  gainedPointsDescriptions?: any[];\n};\n\nfunction GainedPoints({\n  gainedPoints,\n  playerId,\n  gainedPointsDescriptions = [],\n}: GainedPointsProps): JSX.Element {\n  const points = Array.isArray(gainedPoints) ? gainedPoints : [gainedPoints];\n  return (\n    <ul className=\"ranking-board__cell-gained-points\">\n      {points.map((gainedPoint, index) => (\n        <GainedPoint\n          key={`gained-point-${playerId}-${index}`}\n          gainedPoint={gainedPoint}\n          order={index}\n          description={gainedPointsDescriptions[index]}\n        />\n      ))}\n    </ul>\n  );\n}\n\ntype RankingBoardProps = {\n  players: GamePlayers;\n  ranking: GameRanking;\n  gainedPointsDescriptions?: ReactNode[];\n  hideGainedPoints?: boolean;\n  delay?: number;\n};\n\nexport function RankingBoard({\n  players,\n  ranking,\n  gainedPointsDescriptions,\n  hideGainedPoints = false,\n  delay = 0,\n}: RankingBoardProps): JSX.Element {\n  const [displayStep, setDisplayStep] = useState(0);\n  const [sortedRanking, setSortedRanking] = useState<GameRanking>([]);\n  const [reRank, setReRank] = useState(0);\n  const [, height] = useDimensions('ranking-row-0');\n\n  const maxPoints = useMemo(() => Math.max(...ranking.map((scores) => scores.newScore)), [ranking]);\n\n  const { seconds } = useCountdown({\n    duration: 5 + delay,\n    autoStart: true,\n    onExpire: () => {\n      setReRank(1);\n      setDisplayStep(3);\n    },\n  });\n\n  // Rank by previousScore\n  useEffectOnce(() => {\n    const positions: PlainObject = {};\n    let lastPosition = 0;\n    let lastPoints = 0;\n\n    const rankByFinalScoreDict = orderBy(ranking, ['newScore', 'name'], ['desc', 'asc']).reduce(\n      (acc: PlainObject, entry, index) => {\n        acc[entry.playerId] = index;\n        // Calculate position\n        if (lastPoints === 0 || entry.newScore < lastPoints) {\n          lastPoints = entry.newScore;\n          lastPosition += 1;\n        }\n        positions[entry.playerId] = [0, lastPosition];\n        return acc;\n      },\n      {}\n    );\n\n    const rankByPreviousScore = orderBy(ranking, ['previousScore', 'name'], ['desc', 'asc']);\n\n    // Reset position trackers\n    lastPosition = 0;\n    lastPoints = 0;\n\n    const tempSortedRanking: GameRanking = rankByPreviousScore.map((entry, index) => {\n      const newEntry = { ...entry };\n\n      newEntry.order = [index, rankByFinalScoreDict[newEntry.playerId]];\n      newEntry.position = positions[newEntry.playerId];\n      // Calculate position\n      if (lastPoints === 0 || entry.previousScore < lastPoints) {\n        lastPoints = entry.previousScore;\n        lastPosition += 1;\n      }\n      newEntry.position[0] = lastPosition;\n      return newEntry;\n    });\n\n    setSortedRanking(tempSortedRanking);\n  });\n\n  // Show gained points\n  useEffect(() => {\n    if (seconds === 4 + delay) {\n      setDisplayStep(1);\n    } else if (seconds === 2 + delay) {\n      setDisplayStep(2);\n    }\n  }, [seconds, delay]);\n\n  return (\n    <div\n      className=\"ranking-board\"\n      style={{ height: `${(Math.max(60, height) + 8) * sortedRanking.length}px` }}\n    >\n      {sortedRanking.map((entry, index) => {\n        const { playerId, newScore, previousScore, gainedPoints, order, position } = entry;\n        const hPosition = (Math.max(60, height) + 8) * (order[reRank] ?? 0);\n\n        return (\n          <div\n            className={`ranking-board__row ranking-board__row--${index}`}\n            key={`ranking-${playerId}`}\n            id={`ranking-row-${index}`}\n            style={{ top: `${hPosition}px` }}\n          >\n            <div className=\"ranking-board__cell-crown\">\n              {newScore > 0 && maxPoints === newScore && displayStep >= 3 && (\n                <CrownFilled className=\"ranking-board__crown-icon\" />\n              )}\n            </div>\n            <div className=\"ranking-board__cell-position\">#{position[reRank] ?? ''}</div>\n            <div className=\"ranking-board__cell-player\">\n              <div className=\"ranking-board__avatar\">\n                <Avatar id={players[playerId].avatarId} />\n              </div>\n              <div className=\"ranking-board__name\">{players[playerId].name}</div>\n            </div>\n            <Tooltip title={<Translate pt=\"Pontos Anteriores\" en=\"Previous Points\" />} color=\"gray\">\n              <div className=\"ranking-board__cell-points\">{previousScore}</div>\n            </Tooltip>\n            {!hideGainedPoints && displayStep >= 1 && gainedPoints !== undefined && (\n              <GainedPoints\n                gainedPoints={gainedPoints}\n                playerId={playerId}\n                gainedPointsDescriptions={gainedPointsDescriptions}\n              />\n            )}\n            {displayStep >= 2 && (\n              <Tooltip title=\"Total\" color=\"gold\">\n                <span className=\"ranking-board__cell-points-total\">{newScore}</span>\n              </Tooltip>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { CaretUpOutlined } from '@ant-design/icons';\n// Hooks\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Components\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { RankingBoard } from './RankingBoard';\n\ntype StepRankingWrapperProps = {\n  /**\n   * The players\n   */\n  players: GamePlayers;\n  /**\n   * The ranking array\n   */\n  ranking: GameRanking;\n  /**\n   * Gained points descriptions for the popover\n   */\n  gainedPointsDescriptions: ReactNode[];\n  /**\n   * Additional content\n   */\n  children?: ReactNode;\n  /**\n   * Replacement title for Ranking\n   */\n  title?: ReactNode;\n  /**\n   * Optional node that goes under the title\n   */\n  subtitle?: ReactNode;\n};\n\nexport function StepRankingWrapper({\n  players,\n  ranking,\n  gainedPointsDescriptions,\n  children,\n  title,\n  subtitle,\n}: StepRankingWrapperProps) {\n  useTemporarilyHidePlayersBar();\n\n  return (\n    <Step>\n      <Title>{title ?? 'Ranking'}</Title>\n\n      {subtitle}\n\n      <RankingBoard players={players} ranking={ranking} gainedPointsDescriptions={gainedPointsDescriptions} />\n      <Instruction className=\"step-ranking-wrapper-gained-points-instruction\">\n        <CaretUpOutlined />\n        <Translate\n          pt=\"Passe o mouse em cada um dos pontos para saber como eles foram distribuídos\"\n          en=\"Hover over the scores to learn how they were granted\"\n        />\n        <CaretUpOutlined />\n      </Instruction>\n\n      {children}\n    </Step>\n  );\n}\n","import { ReactNode } from 'react';\n\ntype ViewProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n};\n\nexport function View({ children }: ViewProps) {\n  return <>{children}</>;\n}\n","import { ReactNode } from 'react';\n\ntype ViewIfProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Displays children only if condition is truthy\n   */\n  condition?: boolean;\n};\n\n/**\n * Wrapper component that only renders the children if the condition is truthy\n */\nexport function ViewIf({ condition = false, children }: ViewIfProps) {\n  return condition ? <>{children}</> : <></>;\n}\n","import { ReactNode } from 'react';\n\ntype ViewOrProps = {\n  /**\n   * The content of the component to be toggled\n   */\n  children: [ReactNode, ReactNode];\n  /**\n   * The condition to be met to render the first children\n   */\n  condition?: boolean;\n};\n\n/**\n * View wrapper that renders one of two children depending on a condition\n */\nexport function ViewOr({ condition = false, children }: ViewOrProps) {\n  return condition ? <>{children[0]}</> : <>{children[1]}</>;\n}\n","type ViewSwitchProps = {\n  cases: boolean[];\n  /**\n   * The content of the component\n   */\n  children: any;\n};\n\nexport function ViewSwitch({ cases, children }: ViewSwitchProps) {\n  if (cases.length > 5) {\n    throw Error('ViewSwitch only supports up to 5 cases');\n  }\n\n  if (cases[0] && children[0]) {\n    return children[0];\n  }\n\n  if (cases[1] && children[1]) {\n    return children[1];\n  }\n\n  if (cases[2] && children[2]) {\n    return children[2];\n  }\n\n  if (cases[3] && children[3]) {\n    return children[3];\n  }\n\n  if (cases[4] && children[4]) {\n    return children[4];\n  }\n  console.warn('Rendering all children in the ViewSwitch');\n  return children;\n}\n","import { AvatarName } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { PointsHighlight } from 'components/metrics/PointsHighlight';\nimport { Instruction } from 'components/text';\n\ntype GamePremiseRulesProps = {\n  activePlayer: GamePlayer;\n};\n\nexport function GamePremiseRules({ activePlayer }: GamePremiseRulesProps) {\n  return (\n    <Instruction>\n      <Translate\n        pt={\n          <>\n            Precisamos reduzir essa população! Vamos fazer uma pergunta em que todos tem que escrever uma\n            certa quantidade de respostas. Você ganha um ponto para cada resposta igual a de outra ovelha.\n            Quem receber o menor número de pontos move uma seção para a direita.\n            <br />\n            Se você já está no último pasto e tiver que mover pra direita, você cai no precipício e morre. O\n            pasto fica menos lotado e todos mais felizes.\n            <br />\n            <Instruction contained>\n              <AvatarName player={activePlayer} addressUser /> escolherá uma pergunta para essa rodada.\n            </Instruction>\n          </>\n        }\n        en={\n          <>\n            We are sheep and our pasture is overcrowded! We need to decide who should leave.\n            <br />\n            Let's ask a question and everyone has to give a certain number of answers. You are trying to match\n            answers with other sheep to get points. Whoever gets the fewest points moves one section to the\n            right.\n            <br />\n            If you are already in the last pasture and have to move to the right, you fall off the cliff and\n            die. The pasture is less crowded and everyone is happier.\n            <br />\n            <Instruction contained>\n              <AvatarName player={activePlayer} addressUser /> will choose a question for this round.\n            </Instruction>\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function AnsweringRules() {\n  return (\n    <Instruction>\n      <Translate\n        pt={\n          <>\n            Agora é hora de responder!\n            <br />\n            Pense em respostas comuns que fará com que você responda igual a outros jogadores.\n            <br />\n            Você ganha <PointsHighlight>1</PointsHighlight> ponto para cada uma de suas respostas +{' '}\n            <PointsHighlight>1</PointsHighlight> ponto para cada resposta igual a de outro jogador (1 ponto\n            por jogador).\n            <br />\n            Por exemplo, se 3 jogadores escreveram 'bola', são <PointsHighlight>+3</PointsHighlight> pontos\n            para cada.\n          </>\n        }\n        en={\n          <>\n            It's time to answer!\n            <br />\n            Think of common answers that will help you match the largest number of players.\n            <br />\n            You get <PointsHighlight>1</PointsHighlight> point for each of your answers +{' '}\n            <PointsHighlight>1</PointsHighlight> point for each match with other players.\n            <br />\n            For example, if 3 players write 'chicken', each of those players get{' '}\n            <PointsHighlight>3</PointsHighlight> points.\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function ComparingRules() {\n  return (\n    <Instruction>\n      <Translate\n        pt={\n          <>\n            Hora de comparar respostas!\n            <br />\n            O jogo agrupará todas as respostas iguais, mas agora vocês tem a chance de adicionar palavras que\n            o jogo não agrupou por conta de erro gramatical, acento ou plural.\n            <br />\n            Lembre-se gêneros são considerados diferentes <code>príncipe ≠ princesa</code>, assim como geral\n            vs específico <code>caminhão ≠ caminhão de mudança</code>.\n          </>\n        }\n        en={\n          <>\n            Time to compare answers!\n            <br />\n            The game will group all identical answers, but now the group has a chance to add answers that it\n            missed because of typo, accents, or pluralization.\n            <br />\n            Remember that genders are considered different <code>prince ≠ princess</code>, as well as general\n            vs specific <code>truck ≠ fire truck</code>.\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n","import { shuffle } from 'lodash';\nimport { getEntryId, getRandomItem } from 'utils/helpers';\n\nexport const mockAnswers = (userId: PlayerId, numAnswers: number) => {\n  const list = ['agua', 'bola', 'coco', 'dedo', 'egua', 'flauta', 'gatilho', 'hélio', 'jaguar', 'pêssego'];\n  const list2 = ['água', 'bola', 'cocô', 'dedo', 'égua', 'flauta', 'gatilho', 'helio', 'jipe'];\n\n  const shuffled = shuffle(Math.random() > 0.5 ? list : list2);\n\n  return Array(numAnswers)\n    .fill(0)\n    .map((i, index) => ({ [getEntryId(['answer', `${index}`, userId])]: shuffled[i + index].toUpperCase() }))\n    .reduce((acc, item) => {\n      acc = { ...acc, ...item };\n      return acc;\n    }, {});\n};\n\nexport const mockSelectQuestion = (questions: MQuestion[]) => getRandomItem(questions).id;\n","import clsx from 'clsx';\nimport { ArrowIcon } from 'components/icons/ArrowIcon';\nimport { Translate } from 'components/language';\n// Components\n\ntype RoundTypeProps = {\n  roundType: Number;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n};\n\nexport function RoundType({ roundType, className = '' }: RoundTypeProps) {\n  const arrowBaseClass = 'm-round-type__arrow';\n  return (\n    <div className={clsx('m-round-type', className)}>\n      <div className=\"m-round-type__arrows\">\n        {roundType === 0 && <ArrowIcon className={clsx(arrowBaseClass, `${arrowBaseClass}--0`)} />}\n        <ArrowIcon className={clsx(arrowBaseClass, `${arrowBaseClass}--1`)} />\n        {roundType >= 2 && <ArrowIcon className={clsx(arrowBaseClass, `${arrowBaseClass}--2`)} />}\n        {roundType === 3 && <ArrowIcon className={clsx(arrowBaseClass, `${arrowBaseClass}--3`)} />}\n      </div>\n\n      <div>\n        <Translate pt={<>Nesta rodada,</>} en={<>This round</>} />\n      </div>\n      {roundType === 1 && (\n        <Translate\n          pt={<>todos com a pontuação mais baixa movem uma cerquinha para direita.</>}\n          en={<>all players with the lowest score move one fence to the right.</>}\n        />\n      )}\n      {roundType === 2 && (\n        <Translate\n          pt={\n            <>\n              todos com as <span className=\"m-round-type__number\">2</span> pontuações mais baixas movem uma\n              cerquinha para direita.\n            </>\n          }\n          en={\n            <>\n              all players with the <span className=\"m-round-type__number\">2</span> lowest scores move one\n              fence to the right.\n            </>\n          }\n        />\n      )}\n      {roundType === 3 && (\n        <Translate\n          pt={\n            <>\n              todos com as <span className=\"m-round-type__number\">3</span> pontuações mais baixas movem uma\n              cerquinha para direita.\n            </>\n          }\n          en={\n            <>\n              all players with the <span className=\"m-round-type__number\">3</span> lowest scores move one\n              fence to the right.\n            </>\n          }\n        />\n      )}\n      {roundType === 0 && (\n        <Translate\n          pt={\n            <>\n              todos com a pontuação mais baixa movem uma cerquinha para direita e todos com a pontuação mais\n              alta movem uma cerquinha <span className=\"m-round-type__highlight\">para a esquerda</span>!\n            </>\n          }\n          en={\n            <>\n              all players with the lowest score move one fence to the right and all players with the highest\n              score move one fence <span className=\"m-round-type__highlight\">to the left</span>!\n            </>\n          }\n        />\n      )}\n    </div>\n  );\n}\n","import { useMemo } from 'react';\nimport clsx from 'clsx';\n// Hooks\nimport { useDimensions } from 'hooks/useDimensions';\n// Utils\nimport { PUBLIC_URL } from 'utils/constants';\n// Components\nimport { RoundType } from './RoundType';\nimport { SheepAvatar } from './SheepAvatar';\n\ntype PastureProps = {\n  players: GamePlayers;\n  pastureSize?: number;\n  roundType?: number;\n};\n\nexport function Pasture({ players, pastureSize = 5, roundType }: PastureProps) {\n  const [width] = useDimensions();\n  const isShortPasture = pastureSize === 3;\n\n  const pastureBase = Math.min(width, 1360) - 36;\n  const pastureWidth = Math.max(pastureBase * (isShortPasture ? 0.65 : 1), 300);\n  const pastureHeight = pastureBase / 4;\n  const sheepWidth = Math.min(width, 1360) / 22;\n  const gridStyleDistribution = {\n    gridTemplateColumns: isShortPasture ? '1fr 1fr 1fr 0.65fr' : '1fr 1fr 1fr 1fr 1fr 0.65fr',\n  };\n\n  const sheepPerEnclosure = useMemo(() => {\n    const spe = Array(pastureSize + 1).fill(null);\n    Object.values(players).forEach((player) => {\n      if (spe[player.level] === null) {\n        spe[player.level] = [];\n      }\n      spe[player.level].push(player);\n    });\n\n    return spe;\n  }, [players, pastureSize]);\n\n  return (\n    <div className=\"m-pasture-container\" style={{ width: `${pastureWidth}px` }}>\n      {roundType !== undefined && <RoundType roundType={roundType} className=\"m-pasture-round-type\" />}\n\n      <div className=\"m-pasture\" style={{ height: `${pastureHeight}px` }}>\n        <img\n          src={`${PUBLIC_URL.IN_GAME}m-pasture-${pastureSize}.png`}\n          alt=\"pasture background\"\n          className=\"m-pasture__background\"\n        />\n\n        <div className=\"m-enclosures\" style={gridStyleDistribution}>\n          {sheepPerEnclosure.map((sheepPlayers, enclosureId) => {\n            const enclosureKey = `m-enclosure-${enclosureId}`;\n            return (\n              <div className={clsx('m-enclosure', enclosureKey)} key={enclosureKey}>\n                {sheepPlayers &&\n                  sheepPlayers.map((player: GamePlayer, index: number) => {\n                    const sheepKey = `${enclosureKey}-${player.id}`;\n                    const sheepClassName = `m-sheep--pos-${index}`;\n\n                    return (\n                      <SheepAvatar\n                        key={sheepKey}\n                        id={player.avatarId}\n                        sheepId={player.sheepId}\n                        className={clsx(\n                          'm-sheep',\n                          sheepClassName,\n                          player.animateRight && 'm-sheep--animate-right',\n                          player.animateLeft && 'm-sheep--animate-left',\n                          player.animateRebound && 'm-sheep--animate-rebound',\n                          player.level === pastureSize && 'm-sheep--animate-die'\n                        )}\n                        width={sheepWidth}\n                        animate\n                      />\n                    );\n                  })}\n              </div>\n            );\n          })}\n        </div>\n\n        <img\n          src={`${PUBLIC_URL.IN_GAME}m-fence-${pastureSize}.svg`}\n          alt=\"fence\"\n          className=\"m-pasture__fence\"\n        />\n        <div className=\"m-pasture-names\">\n          <div className=\"m-enclosures m-enclosures--names\" style={gridStyleDistribution}>\n            {sheepPerEnclosure.map((sheepPlayers, index) => {\n              const names = sheepPlayers?.map((p: GamePlayer) => p.name)?.join(',\\n') ?? '';\n              return (\n                <span\n                  key={`m-enclosure-${index}`}\n                  className={clsx('m-enclosure-names', names && 'm-enclosure-names--has-names')}\n                >\n                  {names}\n                </span>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { Button, Input, InputNumber, Select, Space } from 'antd';\nimport { Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useState } from 'react';\n\ntype CustomQuestionProps = {\n  onSubmit: GenericFunction;\n  userId: PlayerId;\n};\n\nexport function CustomQuestion({ onSubmit, userId }: CustomQuestionProps) {\n  const { isLoading } = useLoading();\n  const { translate } = useLanguage();\n  const [questionType, setQuestionType] = useState(translate('Cite', 'What are'));\n  const [questionNumber, setQuestionNumber] = useState<number>(3);\n  const [questionText, setQuestionText] = useState('');\n\n  return (\n    <>\n      <Space className=\"space-container\">\n        <Translate pt=\"OU\" en=\"OR\" />\n      </Space>\n      <Space className=\"contained center\" direction=\"vertical\">\n        <Title size=\"xx-small\">\n          <Translate pt=\"Criar pergunta\" en=\"Write custom question\" />:\n        </Title>\n        <div className=\"m-custom-question-form\">\n          <Select value={questionType} onChange={(e) => setQuestionType(e)} size=\"small\">\n            <Select.Option value={translate('Cite', 'What are')}>\n              <Translate pt=\"Cite\" en=\"What are\" />\n            </Select.Option>\n            <Select.Option value={translate('Complete a frase', 'Fill in the blank')}>\n              <Translate pt=\"Complete a frase\" en=\"Fill in the blank\" />\n            </Select.Option>\n          </Select>\n          <InputNumber\n            defaultValue={3}\n            min={2}\n            max={4}\n            onChange={(e) => setQuestionNumber(e ?? 3)}\n            value={questionNumber}\n            size=\"small\"\n            placeholder={translate('...escreva aqui', '...write here')}\n          />\n          <Input onChange={(e) => setQuestionText(e.target.value)} size=\"small\" />\n        </div>\n        <div className=\"m-custom-question-sample\">\n          \"{questionType} {questionNumber} {questionText || '...'}\"\n        </div>\n        <Button\n          onClick={() =>\n            onSubmit({\n              customQuestion: {\n                id: `${userId}-${Date.now()}`,\n                prefix: questionType,\n                number: questionNumber,\n                suffix: questionText,\n              },\n            })\n          }\n          disabled={!questionText}\n          loading={isLoading}\n        >\n          <Translate pt=\"Enviar pergunta personalizada\" en=\"Submit custom question\" />\n        </Button>\n      </Space>\n    </>\n  );\n}\n","// Hooks\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelectQuestion } from './utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { PopoverRule } from 'components/rules';\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\nimport { Pasture } from './components/Pasture';\nimport { GamePremiseRules } from './components/RulesBlobs';\nimport { CustomQuestion } from './components/CustomQuestion';\nimport { useLoading } from 'hooks/useLoading';\n\ntype StepQuestionSelectionProps = {\n  activePlayer: GamePlayer;\n  currentQuestions: MQuestion[];\n  onSubmitQuestion: GenericFunction;\n  onSubmitCustomQuestion: GenericFunction;\n  players: GamePlayers;\n  roundType: number;\n  pastureSize: number;\n  user: GamePlayer;\n} & AnnouncementProps;\n\nexport function StepQuestionSelection({\n  announcement,\n  currentQuestions,\n  onSubmitQuestion,\n  onSubmitCustomQuestion,\n  players,\n  roundType,\n  activePlayer,\n  pastureSize,\n  user,\n}: StepQuestionSelectionProps) {\n  const { isLoading } = useLoading();\n\n  // DEV: Mock answers\n  useMock(() => {\n    onSubmitQuestion({ questionId: mockSelectQuestion(currentQuestions) });\n  });\n\n  return (\n    <Step fullWidth className=\"m-step\" announcement={announcement}>\n      <Title size=\"small\">\n        <Translate pt=\"Selecione uma das perguntas\" en=\"Select one of the questions\" />\n      </Title>\n\n      <PopoverRule content={<GamePremiseRules activePlayer={activePlayer} />} />\n\n      <ul className=\"contained\">\n        {currentQuestions.map((question) => (\n          <li className=\"m-questions__item\" key={question.id}>\n            <button\n              onClick={() => onSubmitQuestion({ questionId: question.id })}\n              className=\"m-question m-question--button\"\n              disabled={isLoading || user.ready}\n            >\n              <span className=\"m-question__prefix\">{question.prefix}</span>\n              <span className=\"m-question__number\">{question.number}</span>\n              <span className=\"m-question__suffix\">{question.suffix}</span>\n            </button>\n          </li>\n        ))}\n      </ul>\n      <CustomQuestion onSubmit={onSubmitCustomQuestion} userId={user.id} />\n\n      <Pasture players={players} pastureSize={pastureSize} roundType={roundType} />\n    </Step>\n  );\n}\n","// Components\n\nimport { AvatarName } from 'components/avatars';\nimport { AnimatedClockIcon } from 'components/icons/AnimatedClockIcon';\nimport { IconAvatar } from 'components/icons/IconAvatar';\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Pasture } from './components/Pasture';\n\ntype StepQuestionSelectionWaitingProps = {\n  activePlayer: GamePlayer;\n  players: GamePlayers;\n  roundType: number;\n  pastureSize: number;\n} & AnnouncementProps;\n\nexport function StepQuestionSelectionWaiting({\n  announcement,\n  activePlayer,\n  players,\n  roundType,\n  pastureSize,\n}: StepQuestionSelectionWaitingProps) {\n  return (\n    <Step fullWidth className=\"m-step\" announcement={announcement}>\n      <Title>\n        <IconAvatar icon={<AnimatedClockIcon />} size=\"large\" />{' '}\n        <Translate pt=\"Aguarde...\" en=\"Please wait...\" />\n      </Title>\n\n      <Instruction contained>\n        <AvatarName player={activePlayer} addressUser />{' '}\n        <Translate pt=\"está escolhendo a pergunta da rodada.\" en=\"is choosing the question for the round.\" />\n        <br />\n      </Instruction>\n\n      <Pasture players={players} pastureSize={pastureSize} roundType={roundType} />\n    </Step>\n  );\n}\n","// Hooks\nimport { useStep } from 'hooks/useStep';\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\nimport { useUser } from 'hooks/useUser';\nimport { useOnSubmitCustomQuestionAPIRequest, useOnSubmitQuestionAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\nimport { NOOP } from 'utils/constants';\n// Components\nimport { GamePremiseRules } from './components/RulesBlobs';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { RoundAnnouncement } from 'components/round';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { ViewOr } from 'components/views';\nimport { SheepIcon } from 'components/icons/SheepIcon';\nimport { StepQuestionSelection } from './StepQuestionSelection';\nimport { StepQuestionSelectionWaiting } from './StepQuestionSelectionWaiting';\n\nfunction PhaseQuestionSelection({ state, players, info }: PhaseProps) {\n  const { step, goToNextStep, setStep } = useStep(0);\n  const user = useUser(players, state);\n  const [activePlayer, isUserTheActivePlayer] = useWhichPlayerIsThe('activePlayerId', state, players);\n\n  const onSubmitQuestion = useOnSubmitQuestionAPIRequest(setStep);\n  const onSubmitCustomQuestion = useOnSubmitCustomQuestionAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<SheepIcon />}\n      title={<Translate pt=\"O Pasto Superlotado\" en=\"A Overcrowded Pasture\" />}\n      onClose={NOOP}\n      currentRound={state?.round?.current}\n      duration={state?.round?.current < 3 ? 40 : 10}\n      type=\"overlay\"\n    >\n      <GamePremiseRules activePlayer={activePlayer} />\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.MENTE_COLETIVA.QUESTION_SELECTION}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state.round}\n          onPressButton={goToNextStep}\n          time={3}\n          circleColor={info?.appearance?.color}\n        >\n          <Instruction contained>\n            <Translate\n              pt=\"Somos ovelhinhas e nosso pasto está superlotado!\"\n              en=\"We are sheep and our pasture is overcrowded!\"\n            />\n          </Instruction>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <ViewOr condition={isUserTheActivePlayer}>\n          <StepQuestionSelection\n            players={players}\n            currentQuestions={state.currentQuestions}\n            onSubmitQuestion={onSubmitQuestion}\n            onSubmitCustomQuestion={onSubmitCustomQuestion}\n            roundType={state.roundType}\n            activePlayer={activePlayer}\n            pastureSize={state.pastureSize}\n            user={user}\n            announcement={announcement}\n          />\n\n          <StepQuestionSelectionWaiting\n            activePlayer={activePlayer}\n            players={players}\n            roundType={state.roundType}\n            pastureSize={state.pastureSize}\n            announcement={announcement}\n          />\n        </ViewOr>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseQuestionSelection;\n","import { MENTE_COLETIVA_API } from 'services/adapters';\n\nimport { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\n\nexport function useOnSubmitQuestionAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: MENTE_COLETIVA_API.submitAction,\n    actionName: 'submit-question',\n    onSuccess: () => setStep(3),\n    onError: () => setStep(1),\n    successMessage: translate('Pergunta enviada com sucesso!', 'Question send successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar a pergunta',\n      'Oops, the application failed to submit the question'\n    ),\n  });\n\n  return (payload: SubmitQuestionPayload) => {\n    request({\n      action: 'SUBMIT_QUESTION',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitCustomQuestionAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: MENTE_COLETIVA_API.submitAction,\n    actionName: 'submit-question',\n    onSuccess: () => setStep(3),\n    onError: () => setStep(1),\n    successMessage: translate('Pergunta enviada com sucesso!', 'Question send successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar a pergunta',\n      'Oops, the application failed to submit the question'\n    ),\n  });\n\n  return (payload: SubmitCustomQuestionPayload) => {\n    request({\n      action: 'SUBMIT_CUSTOM_QUESTION',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitAnswersAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: MENTE_COLETIVA_API.submitAction,\n    actionName: 'submit-answers',\n    onSuccess: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate('Respostas enviadas com sucesso!', 'Answers send successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar respostas',\n      'Oops, the application failed to submit answers'\n    ),\n  });\n\n  return (payload: SubmitAnswersPayload) => {\n    request({\n      action: 'SUBMIT_ANSWERS',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnAddAnswerAPIRequest() {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: MENTE_COLETIVA_API.submitAction,\n    actionName: 'add-answer',\n    successMessage: translate('Resposta adicionada com sucesso!', 'Answer added successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar adicionar respostar',\n      'Oops, the application failed to add answer'\n    ),\n  });\n\n  return (payload: AddAnswerPayload) => {\n    request({\n      action: 'ADD_ANSWER',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnNextAnswersAPIRequest(clearAllowList: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: MENTE_COLETIVA_API.submitAction,\n    actionName: 'next-answers',\n    onSuccess: clearAllowList,\n    successMessage: translate(\n      'Próximas respostas acionadas com sucesso!',\n      'Next answers triggered successfully!'\n    ),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar avançar',\n      'Oops, the application failed to advance'\n    ),\n  });\n\n  return (payload: NextAnswersPayload) => {\n    request({\n      action: 'NEXT_ANSWERS',\n      ...payload,\n    });\n  };\n}\n","type QuestionProps = {\n  question: MQuestion;\n};\n\nexport function Question({ question }: QuestionProps) {\n  return (\n    <span className=\"m-question m-question--span\">\n      <span className=\"m-question__prefix\">{question.prefix}</span>\n      <span className=\"m-question__number\">{question.number}</span>\n      <span className=\"m-question__suffix\">{question.suffix}</span>\n    </span>\n  );\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, Input, Space } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useMock } from 'hooks/useMock';\nimport { useLoading } from 'hooks/useLoading';\n// Utils\nimport { getEntryId } from 'utils/helpers';\nimport { mockAnswers } from './utils/mock';\n// Components\nimport { Pasture } from './components/Pasture';\nimport { Question } from './components/Question';\nimport { AnsweringRules } from './components/RulesBlobs';\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { PopoverRule } from 'components/rules';\nimport { DevButton } from 'components/debug';\n\ntype StepAnsweringProps = {\n  currentQuestion: MQuestion;\n  onSubmitAnswers: GenericFunction;\n  players: GamePlayers;\n  roundType: number;\n  user: GamePlayer;\n  pastureSize: number;\n} & AnnouncementProps;\n\nexport function StepAnswering({\n  user,\n  currentQuestion,\n  players,\n  roundType,\n  onSubmitAnswers,\n  pastureSize,\n  announcement,\n}: StepAnsweringProps) {\n  const { isLoading } = useLoading();\n  const { translate } = useLanguage();\n  const [answers, setAnswers] = useState({});\n\n  // DEV: Mock answers\n  useMock(() => {\n    onSubmitAnswers({ answers: mockAnswers(user.id, currentQuestion.number) });\n  }, []);\n\n  const onWriteAnswer = (e: any) => {\n    setAnswers((s) => ({\n      ...s,\n      [e.target.id]: e.target.value.toUpperCase().trim(),\n    }));\n  };\n\n  const isDisabled =\n    Object.keys(answers).length < currentQuestion.number ||\n    new Set(Object.values(answers)).size !== currentQuestion.number;\n\n  const onPressEnter = () => {\n    if (!isDisabled) {\n      onSubmitAnswers({ answers });\n    }\n  };\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <div className=\"m-step__contained-content\">\n        <Title level={3} size=\"small\">\n          <Translate pt=\"Responda a pergunta:\" en=\"Answer the question:\" />\n        </Title>\n        <Question question={currentQuestion} />\n\n        <PopoverRule content={<AnsweringRules />} />\n\n        <ol className=\"m-answers\">\n          {Array(currentQuestion.number)\n            .fill(1)\n            .map((i, index) => {\n              const num = i + index;\n              const key = `answer-${index}`;\n              const id = getEntryId(['answer', index, user.id]);\n              return (\n                <li className=\"m-answers__item\" key={key}>\n                  <Input\n                    className=\"m-answers__input\"\n                    id={id}\n                    placeholder={translate(`Escreva a resposta ${num} aqui`, `Write answer ${num} here`)}\n                    autoComplete=\"off\"\n                    onChange={onWriteAnswer}\n                    onPressEnter={onPressEnter}\n                  />\n                </li>\n              );\n            })}\n        </ol>\n        <Space className=\"space-container\" align=\"center\">\n          <Button\n            type=\"primary\"\n            disabled={isDisabled || isLoading}\n            onClick={() => onSubmitAnswers({ answers })}\n          >\n            <Translate pt=\"Enviar respostas\" en=\"Submit answers\" />\n          </Button>\n\n          <DevButton\n            ghost\n            onClick={() => onSubmitAnswers({ answers: mockAnswers(user.id, currentQuestion.number) })}\n          >\n            Mock Answers\n          </DevButton>\n        </Space>\n      </div>\n\n      <Pasture players={players} pastureSize={pastureSize} roundType={roundType} />\n    </Step>\n  );\n}\n","// Hooks\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\nimport { useOnSubmitAnswersAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\nimport { NOOP } from 'utils/constants';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { StepAnswering } from './StepAnswering';\nimport { AnsweringRules } from './components/RulesBlobs';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { WritingIcon } from 'components/icons/WritingIcon';\nimport { Translate } from 'components/language';\n\nfunction PhaseEverybodyWrites({ state, players, info }: PhaseProps) {\n  const { step, setStep } = useStep(0);\n  const user = useUser(players, state);\n\n  const onSubmitAnswers = useOnSubmitAnswersAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<WritingIcon />}\n      title={<Translate pt=\"Todos Respondem\" en=\"Everybody Writes\" />}\n      onClose={NOOP}\n      currentRound={state?.round?.current}\n      duration={state?.round?.current < 3 ? 20 : undefined}\n      type=\"overlay\"\n    >\n      <AnsweringRules />\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.MENTE_COLETIVA.EVERYBODY_WRITES}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepAnswering\n          announcement={announcement}\n          currentQuestion={state.currentQuestion}\n          players={players}\n          roundType={state.roundType}\n          onSubmitAnswers={onSubmitAnswers}\n          user={user}\n          pastureSize={state.pastureSize}\n        />\n\n        {/* Step 1 */}\n        <></>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseEverybodyWrites;\n","import { useMemo, useState } from 'react';\n// Ant Design Resources\nimport { Button } from 'antd';\nimport { PlusCircleFilled, RocketFilled } from '@ant-design/icons';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useDevFeatures } from 'hooks/useDevFeatures';\n// Components\nimport { AdminOnlyContainer } from 'components/admin';\nimport { Translate } from 'components/language';\nimport { Avatar } from 'components/avatars';\nimport { TimedButton } from 'components/buttons';\n\ntype AdminAnswerControlProps = {\n  allAnswers: MAnswer[];\n  allowedList: AllowedList;\n  answerGroup: AnswerGroup;\n  onAddAnswer: GenericFunction;\n  onNextAnswer: GenericFunction;\n  players: GamePlayers;\n  remainingGroupsCount: number;\n};\n\nexport function AdminAnswerControl({\n  allAnswers,\n  allowedList,\n  answerGroup,\n  onNextAnswer,\n  onAddAnswer,\n  players,\n  remainingGroupsCount,\n}: AdminAnswerControlProps) {\n  const { isLoading } = useLoading();\n  const { isDevEnv } = useDevFeatures();\n  const [disableButton, setDisableButton] = useState(true);\n  const playerCount = Object.keys(players).length;\n\n  const filteredAnswers = useMemo(\n    () =>\n      allAnswers.filter((answer) => {\n        if (answer.isLocked) return false;\n\n        const included = answerGroup.entries.map((a: MAnswer) => a.id);\n        const playerIds = answerGroup.entries.map((a: MAnswer) => a.playerId);\n\n        return !included.includes(answer.id) && !playerIds.includes(answer.playerId);\n      }),\n    [allAnswers, answerGroup]\n  );\n\n  // How long to wait to enable the button to avoid ignoring player's custom adds to the answer group\n  const waitDuration = useMemo(() => {\n    const answersCount = answerGroup.entries.length;\n    // Dev\n    if (isDevEnv) return 1;\n    // When all players are in\n    if (playerCount === answersCount) return 1;\n    // When only 2 or less answers left\n    if (answersCount < 3 && remainingGroupsCount < 3) return 3;\n    // When only 1 answer in\n    if (answersCount === 1) return 2;\n    // Other cases\n    return 5;\n  }, [answerGroup.entries.length, isDevEnv, playerCount, remainingGroupsCount]);\n\n  return (\n    <AdminOnlyContainer className=\"m-admin\" direction=\"vertical\" align=\"center\">\n      <TimedButton\n        onClick={() => onNextAnswer({ allowedList: Object.keys(allowedList) })}\n        disabled={disableButton || isLoading}\n        type=\"primary\"\n        danger\n        duration={waitDuration}\n        icon={<RocketFilled />}\n        onExpire={() => setDisableButton(false)}\n      >\n        <Translate pt=\"Confirmar e ir para próxima resposta\" en=\"Confirm and go to next answer\" />\n      </TimedButton>\n\n      <ul className=\"m-admin__players-answers\">\n        {filteredAnswers.map((answer) => {\n          return (\n            <Button\n              size=\"large\"\n              disabled={isLoading}\n              className=\"m-admin__answer\"\n              icon={<PlusCircleFilled />}\n              key={`admin-${answer.id}`}\n              onClick={() => onAddAnswer({ answer: { ...answer } })}\n            >\n              <Avatar id={players[answer.playerId].avatarId} /> {answer.answer}\n            </Button>\n          );\n        })}\n      </ul>\n    </AdminOnlyContainer>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Checkbox } from 'antd';\nimport { LockFilled, QuestionCircleFilled } from '@ant-design/icons';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\n\nimport { Question } from './Question';\nimport { SheepAvatar } from './SheepAvatar';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { Card } from 'components/cards';\n\ntype AnswerGroupProps = {\n  currentQuestion: MQuestion;\n  answerGroup: AnswerGroup;\n  players: GamePlayers;\n  remainingGroupsCount: number;\n  allowUserAnswer: GenericFunction;\n};\n\nexport function AnswerGroup({\n  answerGroup,\n  currentQuestion,\n  players,\n  allowUserAnswer,\n  remainingGroupsCount,\n}: AnswerGroupProps) {\n  const { translate } = useLanguage();\n  const [isAdmin] = useGlobalState('isAdmin');\n\n  return (\n    <Step className=\"m-step\">\n      <Title level={3} size=\"small\">\n        <Translate pt=\"Comparar Respostas\" en=\"Compare Answers\" />\n      </Title>\n      <Card\n        header={translate('Pergunta', 'Question')}\n        color={['yellow', 'orange', 'green', 'blue', 'purple'][remainingGroupsCount % 5]}\n        className=\"m-question-card\"\n        footer={Array(remainingGroupsCount).fill('•').join('')}\n      >\n        <Question question={currentQuestion} />\n      </Card>\n\n      <Instruction contained>\n        <Translate\n          pt=\"Não existe resposta certa ou errada. Aqui, apenas agrupamos respostas iguais para ganhar pontos. O objetivo é pensar como o grupo!\"\n          en=\"There's no wrong or right answer. Here, we just group equal answers for points. The goal is to think like the group\"\n        />\n      </Instruction>\n\n      <div className=\"m-answer-group\">\n        <div className=\"m-answer-group__answer-container\">\n          <div className=\"m-answer-group__answer\">{answerGroup.answer}</div>\n        </div>\n        <ul className=\"m-answer-group__players\">\n          {answerGroup.entries.map((entry) => {\n            const key = `ag-${entry.id}`;\n            const player = players[entry.playerId];\n            const isLocked =\n              player.answers[entry.id].parsedAnswer === answerGroup.parsedAnswer ||\n              player.answers[entry.id].isLocked;\n            return (\n              <li className=\"m-answer-group__player\" key={key}>\n                <SheepAvatar\n                  id={player.avatarId}\n                  sheepId={player.sheepId}\n                  className=\"m-answer-group__sheep-avatar\"\n                  width={40}\n                  animate\n                />\n                <span className=\"m-answer-group__player-name\">\n                  {player.name} {isLocked ? <LockFilled /> : <QuestionCircleFilled />}\n                </span>\n                {!isLocked && (\n                  <span className={clsx('m-answer-group__speech-bubble-small', getAnimationClass('tada'))}>\n                    {player.answers[entry.id].answer}\n                  </span>\n                )}\n                {!isLocked && isAdmin && (\n                  <div className=\"m-answer-group__allow-add\">\n                    <Checkbox\n                      data-allowanswer={entry.id}\n                      onChange={(e) => allowUserAnswer(e.target.checked, entry.id)}\n                    />\n                  </div>\n                )}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </Step>\n  );\n}\n\nexport default AnswerGroup;\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\nimport { LockFilled, PlusCircleFilled } from '@ant-design/icons';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { PointsHighlight } from 'components/metrics/PointsHighlight';\n\ntype UserAnswersProps = {\n  answerGroup: any;\n  user: GamePlayer;\n  onAddAnswer: GenericFunction;\n};\n\nexport function UserAnswers({ answerGroup, user, onAddAnswer }: UserAnswersProps) {\n  const { isLoading } = useLoading();\n\n  const answers = user.answers ?? {};\n\n  const alreadyHasAnswer = answerGroup.entries.some((entry: any) => entry.playerId === user.id);\n\n  const points = Object.values(answers).reduce((acc: number, answer: any) => {\n    return acc + Number(answer?.score ?? 0);\n  }, 0);\n\n  return (\n    <div className=\"m-step\">\n      <div className=\"m-step__contained-content\">\n        <Instruction contained>\n          <Translate\n            pt=\"Se você cometeu um erro ortográfico ou acha que sua resposta deveria estar no grupo acima, clique nela para adicioná-la. Você só pode ter uma resposta por pergunta!\"\n            en=\"If you made a typo or for some reason think your answer should be in this group, click on it to add it. You can only have one answer per question.\"\n          />\n          <br />\n          <Translate\n            pt={\n              <>\n                Você tem: <PointsHighlight>{points}</PointsHighlight> ponto(s)\n              </>\n            }\n            en={\n              <>\n                You have:<PointsHighlight>{points}</PointsHighlight> point(s)\n              </>\n            }\n          />\n        </Instruction>\n\n        <Space className=\"space-container m-user-answers\" align=\"center\">\n          {Object.entries(answers).map(([key, answerObj]: any) => {\n            return (\n              <Button\n                key={`a-b-${key}`}\n                disabled={answerObj?.isLocked || alreadyHasAnswer || isLoading}\n                className=\"m-user-answer\"\n                icon={answerObj.isLocked ? <LockFilled /> : <PlusCircleFilled />}\n                onClick={() => onAddAnswer({ answer: { id: key, playerId: user.id, ...answerObj } })}\n              >\n                {answerObj.answer} {Boolean(answerObj.score) && `(${answerObj.score})`}\n              </Button>\n            );\n          })}\n        </Space>\n      </div>\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Divider } from 'antd';\n// Hook\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Components\nimport { Step } from 'components/steps';\nimport { AdminAnswerControl } from './components/AdminAnswerControl';\nimport { AnswerGroup } from './components/AnswerGroup';\nimport { UserAnswers } from './components/UserAnswers';\nimport { Translate } from 'components/language';\n\ntype StepCompareProps = {\n  currentQuestion: MQuestion;\n  answerGroup: AnswerGroup;\n  players: GamePlayers;\n  user: GamePlayer;\n  allAnswers: MAnswer[];\n  onAddAnswer: GenericFunction;\n  onNextAnswer: GenericFunction;\n  remainingGroupsCount: number;\n  allowedList: AllowedList;\n  setAllowedList: GenericFunction;\n} & AnnouncementProps;\n\nexport function StepCompare({\n  announcement,\n  currentQuestion,\n  answerGroup,\n  players,\n  user,\n  allAnswers,\n  onAddAnswer,\n  onNextAnswer,\n  remainingGroupsCount,\n  allowedList,\n  setAllowedList,\n}: StepCompareProps) {\n  useTemporarilyHidePlayersBar();\n  const allowUserAnswer = (isAllowed: boolean, answerId: string) => {\n    const allowedListCopy = { ...allowedList };\n    if (!isAllowed) {\n      delete allowedListCopy?.[answerId];\n      setAllowedList(allowedListCopy);\n    } else {\n      setAllowedList({ ...allowedListCopy, [answerId]: true });\n    }\n  };\n\n  if (!answerGroup) {\n    return (\n      <Step fullWidth>\n        <Translate pt=\"Pronto!\" en=\"All done!\" />\n      </Step>\n    );\n  }\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <AnswerGroup\n        currentQuestion={currentQuestion}\n        answerGroup={answerGroup}\n        players={players}\n        allowUserAnswer={allowUserAnswer}\n        remainingGroupsCount={remainingGroupsCount}\n      />\n      <Divider />\n      <UserAnswers user={user} answerGroup={answerGroup} onAddAnswer={onAddAnswer} />\n      <Divider />\n      <AdminAnswerControl\n        key={answerGroup.answer}\n        answerGroup={answerGroup}\n        allAnswers={allAnswers}\n        players={players}\n        onAddAnswer={onAddAnswer}\n        onNextAnswer={onNextAnswer}\n        allowedList={allowedList}\n        remainingGroupsCount={remainingGroupsCount}\n      />\n    </Step>\n  );\n}\n","import { useState } from 'react';\n// Hooks\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\nimport { useOnAddAnswerAPIRequest, useOnNextAnswersAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { StepCompare } from './StepCompare';\nimport { ComparingRules } from './components/RulesBlobs';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { DiscussionIcon } from 'components/icons/DiscussionIcon';\nimport { Translate } from 'components/language';\nimport { NOOP } from 'utils/constants';\n\nfunction PhaseCompare({ state, players, info }: PhaseProps) {\n  const { step } = useStep(0);\n  const user = useUser(players, state);\n  const [allowedList, setAllowedList] = useState({});\n\n  const onAddAnswer = useOnAddAnswerAPIRequest();\n  const onNextAnswer = useOnNextAnswersAPIRequest(() => setAllowedList({}));\n\n  const answerGroup = state.answersList[0];\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<DiscussionIcon />}\n      title={<Translate pt=\"Respostas\" en=\"Answers\" />}\n      onClose={NOOP}\n      currentRound={state?.round?.current}\n      duration={state?.round?.current < 3 ? 20 : undefined}\n      type=\"overlay\"\n    >\n      <ComparingRules />\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.MENTE_COLETIVA.COMPARE}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepCompare\n          currentQuestion={state.currentQuestion}\n          answerGroup={answerGroup}\n          players={players}\n          user={user}\n          allAnswers={state.allAnswers}\n          onAddAnswer={onAddAnswer}\n          onNextAnswer={onNextAnswer}\n          remainingGroupsCount={state.answersList.length}\n          allowedList={allowedList}\n          setAllowedList={setAllowedList}\n          announcement={announcement}\n        />\n\n        {/* Step 1 */}\n        <></>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseCompare;\n","// This icon file is generated automatically.\nvar HeartFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M923 283.6a260.04 260.04 0 00-56.9-82.8 264.4 264.4 0 00-84-55.5A265.34 265.34 0 00679.7 125c-49.3 0-97.4 13.5-139.2 39-10 6.1-19.5 12.8-28.5 20.1-9-7.3-18.5-14-28.5-20.1-41.8-25.5-89.9-39-139.2-39-35.5 0-69.9 6.8-102.4 20.3-31.4 13-59.7 31.7-84 55.5a258.44 258.44 0 00-56.9 82.8c-13.9 32.3-21 66.6-21 101.9 0 33.3 6.8 68 20.3 103.3 11.3 29.5 27.5 60.1 48.2 91 32.8 48.9 77.9 99.9 133.9 151.6 92.8 85.7 184.7 144.9 188.6 147.3l23.7 15.2c10.5 6.7 24 6.7 34.5 0l23.7-15.2c3.9-2.5 95.7-61.6 188.6-147.3 56-51.7 101.1-102.7 133.9-151.6 20.7-30.9 37-61.5 48.2-91 13.5-35.3 20.3-70 20.3-103.3.1-35.3-7-69.6-20.9-101.9z\" } }] }, \"name\": \"heart\", \"theme\": \"filled\" };\nexport default HeartFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport HeartFilledSvg from \"@ant-design/icons-svg/es/asn/HeartFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar HeartFilled = function HeartFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: HeartFilledSvg\n  }));\n};\n\nHeartFilled.displayName = 'HeartFilled';\nexport default /*#__PURE__*/React.forwardRef(HeartFilled);","import clsx from 'clsx';\nimport { useEffect, useMemo, useState } from 'react';\n// Ant Design Resources\nimport { HeartFilled } from '@ant-design/icons';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { Pasture } from './components/Pasture';\nimport { RoundType } from './components/RoundType';\nimport { Step, StepSwitcher } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { RankingBoard } from 'components/ranking';\nimport { AdminNextPhaseButton } from 'components/admin';\n\ntype StepResolutionProps = {\n  ranking: GameRanking;\n  players: GamePlayers;\n  roundType: number;\n  pastureChangeStr: string;\n  round: GameRound;\n  announceSave: boolean;\n  pastureSize: number;\n} & AnnouncementProps;\n\nexport function StepResolution({\n  announcement,\n  ranking,\n  players,\n  roundType,\n  pastureChangeStr,\n  round,\n  pastureSize,\n  announceSave = false,\n}: StepResolutionProps) {\n  useTemporarilyHidePlayersBar();\n  const [step, setStep] = useState(0);\n  const [pastureIndex, setPastureIndex] = useState(0);\n  const [showAnnounceSave, setShowAnnounceSave] = useState(false);\n\n  const pastureChange = useMemo(() => JSON.parse(pastureChangeStr), [pastureChangeStr]);\n  const { timeLeft } = useCountdown({\n    duration: 15,\n    autoStart: true,\n  });\n\n  useEffect(() => {\n    if (timeLeft === 7) {\n      setStep(1);\n    }\n    if (timeLeft === 5) {\n      setPastureIndex(1);\n    }\n    if (timeLeft === 4 && announceSave) {\n      setShowAnnounceSave(true);\n    }\n\n    if (timeLeft === 1) {\n      setPastureIndex(2);\n    }\n  }, [timeLeft]); // eslint-disable-line\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title level={2}>\n        <Translate pt=\"Resultado\" en=\"Results\" />\n      </Title>\n\n      {step === 0 && <RoundType roundType={roundType} />}\n\n      <StepSwitcher step={step} players={players}>\n        <Step key={0}>\n          <RankingBoard ranking={ranking} players={players} hideGainedPoints delay={0} />\n        </Step>\n\n        <Step key={1}>\n          {showAnnounceSave && (\n            <Instruction contained className={clsx('m-save-card', getAnimationClass('zoomInDown'))}>\n              <HeartFilled style={{ color: 'red' }} />{' '}\n              <Translate\n                pt=\"Vamos dar uma última chance para a pobre ovelhinha que\n              ia morrer agora\"\n                en=\"Let's give one more chance to the poor sheep about to die. The last one!\"\n              />{' '}\n              <HeartFilled style={{ color: 'red' }} />\n            </Instruction>\n          )}\n          <Pasture\n            players={pastureChange[pastureIndex]}\n            pastureSize={pastureSize}\n            roundType={step > 0 ? roundType : undefined}\n          />\n          <AdminNextPhaseButton round={round} />\n        </Step>\n      </StepSwitcher>\n    </Step>\n  );\n}\n","// Hooks\nimport { useStep } from 'hooks/useStep';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\nimport { NOOP } from 'utils/constants';\n// Components\nimport { Translate } from 'components/language';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { StepResolution } from './StepResolution';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { CustomerReviewIcon } from 'components/icons/CustomerReviewIcon';\n\nfunction PhaseResolution({ state, players, info }: PhaseProps) {\n  const { step } = useStep(0);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<CustomerReviewIcon />}\n      title={<Translate pt=\"Resultado\" en=\"And who moves is...\" />}\n      onClose={NOOP}\n      currentRound={state?.round?.current}\n      duration={3}\n      type=\"overlay\"\n    >\n      <Instruction>\n        <Translate\n          pt={\n            <>\n              Agora podemos saber quem deve ser linchado porque não combina com o grupo!\n              <br />\n              Graças a Deus, mais espaço!\n            </>\n          }\n          en={\n            <>\n              Now we will know who can be moved because they don't match with the group!\n              <br />\n              Thank God, more room!\n            </>\n          }\n        />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.MENTE_COLETIVA.RESOLUTION}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepResolution\n          announcement={announcement}\n          ranking={state.ranking}\n          players={players}\n          pastureChangeStr={state.pastureChangeStr}\n          roundType={state.roundType}\n          announceSave={state?.announceSave}\n          round={state.round}\n          pastureSize={state.pastureSize}\n        />\n\n        {/* Step 1 */}\n        <></>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseResolution;\n","import { MedalArrowDownIcon } from 'components/icons/MedalArrowDownIcon';\nimport { MedalArrowUpIcon } from 'components/icons/MedalArrowUpIcon';\nimport { MedalFootprintsIcon } from 'components/icons/MedalFootprintsIcon';\nimport { MedalPersonIcon } from 'components/icons/MedalPersonIcon';\nimport { MedalSkullIcon } from 'components/icons/MedalSkullIcon';\n\nexport const achievementsReference: AchievementReference = {\n  MOST_MATCHES: {\n    Icon: MedalArrowUpIcon,\n    title: {\n      pt: 'Mais Matches',\n      en: 'Best Matcher',\n    },\n    description: {\n      pt: 'As respostas combinaram mais vezes com outros jogadores',\n      en: 'Their answers matched the most with other players',\n    },\n  },\n  LEAST_MATCHES: {\n    Icon: MedalArrowDownIcon,\n    title: {\n      pt: 'Mais Diferentão',\n      en: 'Most Unique',\n    },\n    description: {\n      pt: 'As respostas combinaram menos vezes com outros jogadores',\n      en: 'Their answers matched the least with other players',\n    },\n  },\n  MOST_DEAD: {\n    Icon: MedalSkullIcon,\n    title: {\n      pt: 'Mais Morta',\n      en: 'Most Dead',\n    },\n    description: {\n      pt: 'A única ovelhinha morta no final',\n      en: 'The only dead sheep in the end',\n    },\n  },\n  MOST_LONELY: {\n    Icon: MedalPersonIcon,\n    title: {\n      pt: 'Mais Solitária',\n      en: 'Most Lonely',\n    },\n    description: {\n      pt: 'A única ovelhinha num pasto sozinha no final',\n      en: 'The only sheep by itself in the end',\n    },\n  },\n  BEST_TRAVELER: {\n    Icon: MedalFootprintsIcon,\n    title: {\n      pt: 'Mais Viajada',\n      en: 'Best Traveler',\n    },\n    description: {\n      pt: 'Ovelhinha que mais moveu pra direita e esquerda',\n      en: 'Sheep who moved the most left or right',\n    },\n  },\n};\n","// Utils\nimport { achievementsReference } from './utils/achievements';\n// Components\nimport { GameOverWrapper } from 'components/game-over';\nimport { Achievements } from 'components/general/Achievements';\nimport { TheEndIcon } from 'components/icons/TheEndIcon';\nimport { Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { SheepAvatar } from './components/SheepAvatar';\n\nfunction PhaseGameOver({ state, info, players }: PhaseProps) {\n  return (\n    <GameOverWrapper\n      info={info}\n      state={state}\n      announcementIcon={<TheEndIcon />}\n      rateWidgetCustomText={<Translate pt=\"Sugira uma pergunta:\" en=\"Suggest a question:\" />}\n    >\n      <div className=\"m-game-over-in-memoriam\">\n        <Title>In memoriam</Title>\n        <div className=\"m-sheep-rip\">\n          {state.losers.map((player: GamePlayer) => {\n            return (\n              <div className=\"m-sheep-rip__entry\" key={`sheep-player-1`}>\n                <SheepAvatar id={player.avatarId} width={80} sheepId={player.sheepId} />\n                <span className=\"m-sheep-rip__name\">{player.name}</span>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      <Achievements players={players} achievements={state.achievements} reference={achievementsReference} />\n    </GameOverWrapper>\n  );\n}\n\nexport default PhaseGameOver;\n","import { ConfigProvider } from 'antd';\n// Constants\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport PhaseQuestionSelection from './PhaseQuestionSelection';\nimport PhaseEverybodyWrites from './PhaseEverybodyWrites';\nimport PhaseCompare from './PhaseCompare';\nimport PhaseResolution from './PhaseResolution';\nimport PhaseGameOver from './PhaseGameOver';\n// Sass\nimport 'assets/fonts/architects-daughter.scss';\nimport './mente-coletiva.scss';\n\nfunction getActiveComponent(phase: string) {\n  switch (phase) {\n    case PHASES.DEFAULT.LOBBY:\n      return PhaseLobby;\n    case PHASES.DEFAULT.RULES:\n      return PhaseRules;\n    case PHASES.DEFAULT.SETUP:\n      return PhaseSetup;\n    case PHASES.MENTE_COLETIVA.QUESTION_SELECTION:\n      return PhaseQuestionSelection;\n    case PHASES.MENTE_COLETIVA.EVERYBODY_WRITES:\n      return PhaseEverybodyWrites;\n    case PHASES.MENTE_COLETIVA.COMPARE:\n      return PhaseCompare;\n    case PHASES.MENTE_COLETIVA.RESOLUTION:\n      return PhaseResolution;\n    case PHASES.DEFAULT.GAME_OVER:\n      return PhaseGameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionMenteColetiva({ gameId }: SessionProps) {\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorPrimary: THEME_COLORS.WOOD,\n        },\n      }}\n    >\n      <Session\n        gameId={gameId}\n        gameCollection={GAME_COLLECTION.MENTE_COLETIVA}\n        getActiveComponent={getActiveComponent}\n        backgroundClassName=\"m-background\"\n      />\n    </ConfigProvider>\n  );\n}\n\nexport default SessionMenteColetiva;\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\n/**\n * Gets player that is assigned to a property in the state\n * @param propertyName\n * @param state\n * @param players\n * @returns a player instance, a boolean if the player is assigned to given property\n */\nexport function useWhichPlayerIsThe(\n  propertyName = 'activePlayer',\n  state: PlainObject = {},\n  players: Players = {}\n): [GamePlayer, boolean] {\n  const [userId] = useGlobalState('userId');\n  const [activePlayer, setActivePlayer] = useState<GamePlayer>({});\n  const [isUser, setIsUser] = useState(false);\n\n  // Determine if user is active as the guesser, the clue giver, the psychic, the storyteller, etc\n  useEffect(() => {\n    const activePlayer = state?.[propertyName];\n    setActivePlayer(players?.[activePlayer] ?? {});\n    setIsUser(state?.[propertyName] === userId);\n  }, [players, propertyName, state, userId]);\n\n  return [activePlayer, isUser];\n}\n","// This icon file is generated automatically.\nvar CaretUpOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"0 0 1024 1024\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M858.9 689L530.5 308.2c-9.4-10.9-27.5-10.9-37 0L165.1 689c-12.2 14.2-1.2 35 18.5 35h656.8c19.7 0 30.7-20.8 18.5-35z\" } }] }, \"name\": \"caret-up\", \"theme\": \"outlined\" };\nexport default CaretUpOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CaretUpOutlinedSvg from \"@ant-design/icons-svg/es/asn/CaretUpOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CaretUpOutlined = function CaretUpOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CaretUpOutlinedSvg\n  }));\n};\n\nCaretUpOutlined.displayName = 'CaretUpOutlined';\nexport default /*#__PURE__*/React.forwardRef(CaretUpOutlined);","// This icon file is generated automatically.\nvar CrownFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M899.6 276.5L705 396.4 518.4 147.5a8.06 8.06 0 00-12.9 0L319 396.4 124.3 276.5c-5.7-3.5-13.1 1.2-12.2 7.9L188.5 865c1.1 7.9 7.9 14 16 14h615.1c8 0 14.9-6 15.9-14l76.4-580.6c.8-6.7-6.5-11.4-12.3-7.9zM512 734.2c-62.1 0-112.6-50.5-112.6-112.6S449.9 509 512 509s112.6 50.5 112.6 112.6S574.1 734.2 512 734.2zm0-160.9c-26.6 0-48.2 21.6-48.2 48.3 0 26.6 21.6 48.3 48.2 48.3s48.2-21.6 48.2-48.3c0-26.6-21.6-48.3-48.2-48.3z\" } }] }, \"name\": \"crown\", \"theme\": \"filled\" };\nexport default CrownFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CrownFilledSvg from \"@ant-design/icons-svg/es/asn/CrownFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CrownFilled = function CrownFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CrownFilledSvg\n  }));\n};\n\nCrownFilled.displayName = 'CrownFilled';\nexport default /*#__PURE__*/React.forwardRef(CrownFilled);","// This icon file is generated automatically.\nvar LockFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM540 701v53c0 4.4-3.6 8-8 8h-40c-4.4 0-8-3.6-8-8v-53a48.01 48.01 0 1156 0zm152-237H332V240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224z\" } }] }, \"name\": \"lock\", \"theme\": \"filled\" };\nexport default LockFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LockFilledSvg from \"@ant-design/icons-svg/es/asn/LockFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar LockFilled = function LockFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: LockFilledSvg\n  }));\n};\n\nLockFilled.displayName = 'LockFilled';\nexport default /*#__PURE__*/React.forwardRef(LockFilled);","// This icon file is generated automatically.\nvar PlusCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm192 472c0 4.4-3.6 8-8 8H544v152c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V544H328c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h152V328c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v152h152c4.4 0 8 3.6 8 8v48z\" } }] }, \"name\": \"plus-circle\", \"theme\": \"filled\" };\nexport default PlusCircleFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusCircleFilledSvg from \"@ant-design/icons-svg/es/asn/PlusCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PlusCircleFilled = function PlusCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusCircleFilledSvg\n  }));\n};\n\nPlusCircleFilled.displayName = 'PlusCircleFilled';\nexport default /*#__PURE__*/React.forwardRef(PlusCircleFilled);","// This icon file is generated automatically.\nvar QuestionCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 708c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zm62.9-219.5a48.3 48.3 0 00-30.9 44.8V620c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-21.5c0-23.1 6.7-45.9 19.9-64.9 12.9-18.6 30.9-32.8 52.1-40.9 34-13.1 56-41.6 56-72.7 0-44.1-43.1-80-96-80s-96 35.9-96 80v7.6c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V420c0-39.3 17.2-76 48.4-103.3C430.4 290.4 470 276 512 276s81.6 14.5 111.6 40.7C654.8 344 672 380.7 672 420c0 57.8-38.1 109.8-97.1 132.5z\" } }] }, \"name\": \"question-circle\", \"theme\": \"filled\" };\nexport default QuestionCircleFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport QuestionCircleFilledSvg from \"@ant-design/icons-svg/es/asn/QuestionCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar QuestionCircleFilled = function QuestionCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: QuestionCircleFilledSvg\n  }));\n};\n\nQuestionCircleFilled.displayName = 'QuestionCircleFilled';\nexport default /*#__PURE__*/React.forwardRef(QuestionCircleFilled);"],"names":["MedalArrowDownIcon","props","xmlns","viewBox","fill","d","cx","cy","r","MedalArrowUpIcon","MedalPersonIcon","SheepIcon","StarIcon","PointsHighlight","children","type","iconSize","className","icon","GainedPoint","gainedPoint","order","description","isPositive","isNegative","clsx","title","pt","en","color","GainedPoints","gainedPoints","playerId","gainedPointsDescriptions","points","Array","isArray","map","index","RankingBoard","players","ranking","hideGainedPoints","delay","useState","displayStep","setDisplayStep","sortedRanking","setSortedRanking","reRank","setReRank","useDimensions","height","maxPoints","useMemo","Math","max","scores","newScore","seconds","useCountdown","duration","autoStart","onExpire","useEffectOnce","positions","lastPosition","lastPoints","rankByFinalScoreDict","orderBy","reduce","acc","entry","rankByPreviousScore","tempSortedRanking","newEntry","position","previousScore","useEffect","style","length","hPosition","id","top","CrownFilled","avatarId","name","undefined","StepRankingWrapper","subtitle","useTemporarilyHidePlayersBar","CaretUpOutlined","View","ViewIf","condition","ViewOr","ViewSwitch","cases","Error","console","warn","GamePremiseRules","activePlayer","contained","player","addressUser","AnsweringRules","ComparingRules","mockAnswers","userId","numAnswers","shuffled","shuffle","random","i","getEntryId","toUpperCase","item","RoundType","roundType","arrowBaseClass","ArrowIcon","Pasture","pastureSize","width","isShortPasture","pastureBase","min","pastureWidth","pastureHeight","sheepWidth","gridStyleDistribution","gridTemplateColumns","sheepPerEnclosure","spe","Object","values","forEach","level","push","src","PUBLIC_URL","alt","sheepPlayers","enclosureId","enclosureKey","sheepKey","sheepClassName","SheepAvatar","sheepId","animateRight","animateLeft","animateRebound","animate","names","p","join","CustomQuestion","onSubmit","isLoading","useLoading","translate","useLanguage","questionType","setQuestionType","questionNumber","setQuestionNumber","questionText","setQuestionText","direction","size","value","onChange","e","defaultValue","placeholder","target","onClick","customQuestion","Date","now","prefix","number","suffix","disabled","loading","StepQuestionSelection","announcement","currentQuestions","onSubmitQuestion","onSubmitCustomQuestion","user","useMock","questions","questionId","getRandomItem","fullWidth","content","question","ready","StepQuestionSelectionWaiting","IconAvatar","AnimatedClockIcon","state","info","useStep","step","goToNextStep","setStep","useUser","useWhichPlayerIsThe","isUserTheActivePlayer","request","useAPICall","apiFunction","MENTE_COLETIVA_API","actionName","onSuccess","onError","successMessage","errorMessage","payload","action","useOnSubmitQuestionAPIRequest","useOnSubmitCustomQuestionAPIRequest","onClose","NOOP","currentRound","round","current","phase","allowedPhase","PHASES","onPressButton","time","circleColor","appearance","Question","StepAnswering","currentQuestion","onSubmitAnswers","answers","setAnswers","onWriteAnswer","s","trim","isDisabled","keys","Set","onPressEnter","num","key","autoComplete","align","ghost","useOnSubmitAnswersAPIRequest","WritingIcon","AdminAnswerControl","allAnswers","allowedList","answerGroup","onNextAnswer","onAddAnswer","remainingGroupsCount","isDevEnv","useDevFeatures","disableButton","setDisableButton","playerCount","filteredAnswers","filter","answer","isLocked","included","entries","a","playerIds","includes","waitDuration","answersCount","danger","RocketFilled","PlusCircleFilled","AnswerGroup","allowUserAnswer","useGlobalState","isAdmin","header","footer","parsedAnswer","LockFilled","QuestionCircleFilled","getAnimationClass","checked","UserAnswers","alreadyHasAnswer","some","Number","score","answerObj","Boolean","StepCompare","setAllowedList","isAllowed","answerId","allowedListCopy","useOnAddAnswerAPIRequest","clearAllowList","useOnNextAnswersAPIRequest","answersList","DiscussionIcon","HeartFilled","ref","React","AntdIcon","_objectSpread","HeartFilledSvg","displayName","StepResolution","pastureChangeStr","announceSave","pastureIndex","setPastureIndex","showAnnounceSave","setShowAnnounceSave","pastureChange","JSON","parse","timeLeft","CustomerReviewIcon","achievementsReference","MOST_MATCHES","Icon","LEAST_MATCHES","MOST_DEAD","MedalSkullIcon","MOST_LONELY","BEST_TRAVELER","MedalFootprintsIcon","announcementIcon","TheEndIcon","T","rateWidgetCustomText","losers","Achievements","achievements","reference","getActiveComponent","PhaseLobby","PhaseRules","PhaseSetup","PhaseQuestionSelection","PhaseEverybodyWrites","PhaseCompare","PhaseResolution","PhaseGameOver","PageError","gameId","theme","token","colorPrimary","THEME_COLORS","gameCollection","GAME_COLLECTION","backgroundClassName","propertyName","setActivePlayer","isUser","setIsUser","CaretUpOutlinedSvg","CrownFilledSvg","LockFilledSvg","PlusCircleFilledSvg","QuestionCircleFilledSvg"],"sourceRoot":""}