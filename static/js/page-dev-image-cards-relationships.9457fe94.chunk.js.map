{"version":3,"file":"static/js/page-dev-image-cards-relationships.9457fe94.chunk.js","mappings":"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","sources":["hooks/useQueryParams.ts","pages/Dev/ImageCards/RelationshipCountTag.tsx","pages/Dev/ImageCards/Comparator.tsx","pages/Dev/ImageCards/ImageCardsPage.tsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport function useQueryParams(defaultParams: Record<string, string | number> = {}) {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  /**\n   * Adds a query param\n   * @param key - the key of the query param to add\n   * @param value - the value of the query param to add\n   */\n  const add = (key: string, value: unknown) => {\n    if (value === undefined) {\n      searchParams.delete(key);\n    } else {\n      searchParams.set(key, String(value));\n    }\n\n    setSearchParams(searchParams);\n  };\n\n  /**\n   * Removes a query param\n   * @param key - the key of the query param to remove\n   */\n  const remove = (key: string) => {\n    searchParams.delete(key);\n    setSearchParams(searchParams);\n  };\n\n  useEffect(() => {\n    Object.entries(defaultParams).forEach(([key, value]) => {\n      if (!searchParams.has(key)) {\n        add(key, value);\n      }\n    });\n  }, []); // eslint-disable-line\n\n  const queryParams = searchParams\n    .toString()\n    .split('&')\n    .reduce((qp: Record<string, string>, entry) => {\n      const [key, value] = entry.split('=');\n      if (key && value !== undefined) {\n        qp[key] = value;\n      }\n      return qp;\n    }, {});\n\n  return {\n    add,\n    remove,\n    queryParams,\n  };\n}\n","import { TagsFilled } from '@ant-design/icons';\nimport { Tag } from 'antd';\n\ntype RelationshipCountTagProps = {\n  card: string[];\n};\nexport function RelationshipCountTag({ card }: RelationshipCountTagProps) {\n  return (\n    <div>\n      <Tag color=\"blue\" icon={<TagsFilled />}>\n        {' '}\n        {card.length}\n      </Tag>\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Button, Card, Image, Layout, Space } from 'antd';\n\nimport { ImageCard } from 'components/image-cards';\n\nimport { CheckCircleFilled } from '@ant-design/icons';\n// Components\nimport './dev-image-cards.scss';\nimport { UseImageCardsRelationshipDataReturnValue, useRandomCards } from './hooks';\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { RelationshipCountTag } from './RelationshipCountTag';\n\ntype ComparatorProps = {\n  query: UseImageCardsRelationshipDataReturnValue;\n};\n\nexport function Comparator({ query }: ComparatorProps) {\n  const cardWidth = useCardWidth(2, { containerId: 'root' });\n\n  const { data, isDirty, setDirty, isSuccess, isSaving, save } = query;\n\n  // Selects a random deck, but gives option select for a specific deck (1-10)\n  const { cardAId, cardA, cardBId, cardB, relate, unrelate, areRelated, onRandomCards } = useRandomCards(\n    data,\n    setDirty\n  );\n\n  return (\n    <Layout.Content className=\"dev-content\">\n      {isSaving && <div>Saving...</div>}\n      {isSuccess && !isSaving && (\n        <Space className=\"space-container\" direction=\"vertical\">\n          <Button onClick={onRandomCards}>New Random Cards</Button>\n          <Card title={`${cardAId} X ${cardBId}`} extra={areRelated && <CheckCircleFilled />}>\n            <div className=\"image-card-card\">\n              <Image.PreviewGroup>\n                <div className=\"image-card-card__image\">\n                  <ImageCard imageId={cardAId} cardWidth={cardWidth} />\n                  <RelationshipCountTag card={cardA} />\n                </div>\n                <div className=\"image-card-card__image\">\n                  <ImageCard imageId={cardBId} cardWidth={cardWidth} />\n                  <RelationshipCountTag card={cardB} />\n                </div>\n              </Image.PreviewGroup>\n            </div>\n\n            <Space className=\"image-card-categorizer-options\">\n              <Button onClick={unrelate} size=\"large\" block>\n                Unrelated\n              </Button>\n              <Button onClick={relate} size=\"large\" block type=\"primary\">\n                Related\n              </Button>\n            </Space>\n          </Card>\n\n          <Button type=\"primary\" onClick={() => save({})} disabled={!isDirty} loading={isSaving}>\n            Save\n          </Button>\n        </Space>\n      )}\n    </Layout.Content>\n  );\n}\n","import { useTitle } from 'react-use';\n// Ant Design Resources\nimport { Segmented } from 'antd';\nimport { DevHeader } from '../DevHeader';\n\n// Components\nimport './dev-image-cards.scss';\nimport { useImageCardsRelationshipData } from './hooks';\nimport { useEffect, useState } from 'react';\nimport { LoadingPage } from 'components/loaders';\nimport { isEmpty } from 'lodash';\nimport { PageError } from 'components/errors';\nimport { useQueryParams } from 'hooks/useQueryParams';\nimport { Comparator } from './Comparator';\n\nfunction ImageCardsRelationshipsPage() {\n  useTitle('Image Cards Relationships | Dev | Tarde Divertida');\n  const [view, setView] = useState('default');\n  const qp = useQueryParams({ view: 'default' });\n\n  useEffect(() => {\n    setView(qp.queryParams.view ?? 'default');\n  }, [qp.queryParams.view]);\n\n  const query = useImageCardsRelationshipData();\n\n  if (isEmpty(query.data) && query.isLoading) {\n    return <LoadingPage />;\n  }\n\n  if (query.isError) {\n    return <PageError message=\"Something is wrong\" />;\n  }\n\n  const segments = [\n    { label: 'Compare', value: 'default', disabled: view === 'default' },\n    { label: 'Grouping', value: 'grouping', disabled: true },\n  ];\n\n  return (\n    <div>\n      <DevHeader\n        title=\"Classifier\"\n        extra={<Segmented options={segments} defaultValue={view} onChange={(v: any) => qp.add('view', v)} />}\n      />\n\n      {view === 'default' && <Comparator query={query} />}\n      {/* {view === 'grouping' && <Grouping />} */}\n    </div>\n  );\n}\n\nexport default ImageCardsRelationshipsPage;\n"],"names":["useQueryParams","defaultParams","useSearchParams","searchParams","setSearchParams","add","key","value","undefined","delete","set","String","remove","useEffect","Object","entries","forEach","has","queryParams","toString","split","reduce","qp","entry","RelationshipCountTag","card","color","icon","TagsFilled","length","Comparator","query","cardWidth","useCardWidth","containerId","data","isDirty","setDirty","isSuccess","isSaving","save","useRandomCards","cardAId","cardA","cardBId","cardB","relate","unrelate","areRelated","onRandomCards","className","direction","onClick","title","extra","CheckCircleFilled","imageId","size","block","type","disabled","loading","useTitle","useState","view","setView","useImageCardsRelationshipData","isEmpty","isLoading","isError","message","segments","label","DevHeader","options","defaultValue","onChange","v"],"sourceRoot":""}