{"version":3,"sources":["reportWebVitals.js","services/firebase.js","hooks/useAPICall.js","hooks/useDimensions.js","hooks/useGlobalState.js","hooks/useIsUserReady.js","hooks/useIsUserThe.js","hooks/useIsUsersTeamActive.js","hooks/useLanguage.js","hooks/useLoading.js","hooks/useUser.js","hooks/useWhichPlayerIsThe.js","images/tarde-divertida-logo.svg","components/Home.jsx","utils/constants.js","utils/index.js","adapters/index.js","components/loaders/Loading.jsx","components/loaders/LoadingBar.jsx","components/shared/ButtonContainer.jsx","components/shared/EmergencyAlert.jsx","images/game-over-title.svg","images/avatars.svg","components/shared/Translate.jsx","components/avatars/Avatar.jsx","components/avatars/AvatarEntry.jsx","components/avatars/AvatarName.jsx","components/admin/AdminButton.jsx","components/avatars/AvatarReady.jsx","components/admin/AdminForceNextPhase.jsx","components/admin/ForceNextPhaseButton.jsx","components/admin/ValueFormItem.jsx","components/admin/ForceStateForm.jsx","components/admin/AdminMenu.jsx","components/admin/AdminOnly.jsx","components/admin/AdminOnlyButton.jsx","components/shared/GameOver.jsx","components/shared/Instruction.jsx","components/shared/LanguageSwitch.jsx","components/errors/PageError.jsx","components/shared/PhaseContainer.jsx","components/shared/Title.jsx","components/icons/Painting.jsx","components/icons/Evaluate.jsx","components/icons/Multitask.jsx","components/icons/Picture.jsx","components/icons/Seal.jsx","components/shared/PhaseAnnouncement.jsx","components/shared/RankingBoard.jsx","components/shared/ReadyPlayersBar.jsx","images/round-title-en.svg","images/round-title-pt.svg","components/shared/RoundAnnouncement.jsx","services/localStorage.js","components/lobby/_private/Join.jsx","components/lobby/_private/Waiting.jsx","components/lobby/_private/CloudBackground.jsx","components/lobby/Lobby.jsx","components/drawers/_internal/SectionMe.jsx","components/drawers/_internal/SectionMeta.jsx","components/drawers/_internal/SectionTeamPlayers.jsx","components/drawers/_internal/SectionTeams.jsx","components/drawers/_internal/SectionRankedPlayers.jsx","components/drawers/GameInfoDrawer.jsx","components/shared/Session.jsx","hooks/useGamePlayers.js","hooks/useGameState.js","components/shared/StarPoints.jsx","components/shared/StepSwitcher.jsx","components/shared/TimedButton.jsx","components/shared/View.jsx","components/shared/WaitingRoom.jsx","components/loaders/LoadingPage.jsx","components/modals/CreateGameModal.jsx","components/rules/Rules.jsx","components/rules/RulesCarousel.jsx","components/rules/CollapsibleRule.jsx","components/modals/RulesModal.jsx","components/modals/messageContent.js","components/Hub.jsx","adapters/auth.js","components/Login.jsx","sounds/arte-ruim-timer.mp3","components/cards/ArteRuimCard.jsx","components/cards/Card.jsx","components/cards/EspiaoEntreNosCard.jsx","components/cards/ImageCard.jsx","components/cards/ImageCardHand.jsx","components/cards/UeSoIssoCard.jsx","components/canvas/CanvasReSizer.jsx","components/canvas/CanvasSVG.jsx","components/canvas/DrawingCanvas.jsx","components/games/arte-ruim/DrawPhaseDrawStep.jsx","components/games/arte-ruim/PhaseDraw.jsx","components/games/arte-ruim/Ribbon.jsx","components/games/arte-ruim/EvaluationAllDrawings.jsx","components/games/arte-ruim/EvaluationAllCards.jsx","components/games/arte-ruim/PhaseEvaluation.jsx","components/games/arte-ruim/GalleryWindowCredits.jsx","components/games/arte-ruim/GalleryWindowGuesses.jsx","components/games/arte-ruim/GalleryWindowControls.jsx","components/games/arte-ruim/GalleryWindowResult.jsx","components/games/arte-ruim/GalleryWindow.jsx","components/games/arte-ruim/PhaseGallery.jsx","components/games/arte-ruim/DrawingGrade.jsx","components/games/arte-ruim/PhaseGameOver.jsx","components/games/arte-ruim/SessionArteRuim.jsx","components/games/clube-detetives/SecretClueWrite.jsx","components/games/clube-detetives/SecretClueWaiting.jsx","components/games/clube-detetives/SecretCluePhase.jsx","components/games/clube-detetives/Table.jsx","components/games/clube-detetives/CardPlayPhase.jsx","components/games/clube-detetives/TableFocus.jsx","components/games/clube-detetives/MagnifyingGlassSVG.jsx","components/games/clube-detetives/DefensePhase.jsx","components/games/clube-detetives/VotingOptions.jsx","components/games/clube-detetives/VotingPhase.jsx","components/games/clube-detetives/RevealPhase.jsx","components/games/clube-detetives/SessionClubeDetetives.jsx","components/games/espiao-entre-nos/Notes.jsx","components/games/espiao-entre-nos/AdminTimerControlButton.jsx","components/games/espiao-entre-nos/LocationsList.jsx","components/games/espiao-entre-nos/AssignmentPhase.jsx","components/games/espiao-entre-nos/PlayerSelect.jsx","components/games/espiao-entre-nos/LocationSelect.jsx","components/games/espiao-entre-nos/Timer.jsx","components/games/espiao-entre-nos/SuspectsList.jsx","components/games/espiao-entre-nos/InvestigationPhase.jsx","components/games/espiao-entre-nos/EmergencyAlert.jsx","components/games/espiao-entre-nos/AssessmentPhase.jsx","components/games/espiao-entre-nos/ResolutionPhase.jsx","components/games/espiao-entre-nos/FinalAssessmentPhase.jsx","components/games/espiao-entre-nos/SessionEspiaoEntreNos.jsx","components/games/onda-telepatica/Card.jsx","components/games/onda-telepatica/CardSelection.jsx","components/games/onda-telepatica/DialSidesPhase.jsx","components/games/onda-telepatica/Dial.jsx","components/games/onda-telepatica/DialClueWriting.jsx","components/games/onda-telepatica/DialCluePhase.jsx","components/games/onda-telepatica/DialGuessSelection.jsx","components/games/onda-telepatica/GuessPhase.jsx","components/games/onda-telepatica/DialRivalSelection.jsx","components/games/onda-telepatica/RivalPhase.jsx","components/games/onda-telepatica/RevealPhase.jsx","components/games/onda-telepatica/SessionOndaTelepatica.jsx","components/games/ue-so-isso/WordSelectionStep.jsx","components/games/ue-so-isso/WordSelectionPhase.jsx","components/games/ue-so-isso/SuggestionEasel.jsx","components/games/ue-so-isso/SuggestionStep.jsx","components/games/ue-so-isso/SuggestPhase.jsx","components/games/ue-so-isso/SuggestionCard.jsx","components/games/ue-so-isso/CompareSuggestionsStep.jsx","components/games/ue-so-isso/ComparePhase.jsx","components/games/ue-so-isso/Guess.jsx","components/games/ue-so-isso/GuessingStep.jsx","components/games/ue-so-isso/GuessVerificationStep.jsx","components/games/ue-so-isso/GuessPhase.jsx","components/games/ue-so-isso/SessionUeSoIsso.jsx","components/games/index.js","components/Game.jsx","hooks/useIsGameStale.js","components/TestingZone.jsx","components/Gallery.jsx","components/App.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","firestore","functions","window","location","hostname","includes","useEmulator","useAPICall","apiFunction","actionName","onBeforeCall","onAfterCall","onError","successMessage","errorMessage","useLoading","setLoader","useGlobalState","gameId","gameName","userId","func","timer","timeout","args","clearTimeout","setTimeout","apply","debounce","useCallback","payload","a","playerId","data","message","success","notification","error","description","JSON","stringify","placement","console","useDimensions","elementId","sWidth","sHeight","element","document","getElementById","warn","offsetWidth","offsetHeight","initialState","isLoading","loaders","appStartedAt","Date","now","screenSize","language","gameMeta","username","userAvatarId","isAuthenticated","isAdmin","canvasSize","cachedCanvasSize","espiaoEntreNosCache","createGlobalState","setGlobalState","getGlobalState","useIsUserReady","players","state","useState","isReady","setIsReady","useEffect","ready","updatedAt","useIsUserThe","propertyName","isUser","setIsUser","useIsUsersTeamActive","isUsersTeamActive","setIsUsersTeamActive","activeTeam","team","useLanguage","setLoading","setLoaders","Object","values","some","v","key","value","useUser","user","setUser","useWhichPlayerIsThe","activePlayer","setActivePlayer","Home","className","src","logo","preview","alt","PUBLIC_URL","BANNERS","RULES","CARDS","ROOT","TAG_DICT","competitive","label","color","cooperative","traitor","timed","drawing","guessing","writing","images","discussion","AVATARS","0","id","pt","en","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","LETTERS","keys","SEPARATOR","GAME_COLLECTION","split","PHASES","LOBBY","DRAW","EVALUATION","GALLERY","GAME_OVER","SECRET_CLUE","CARD_PLAY","DEFENSE","VOTING","REVEAL","ASSIGNMENT","INVESTIGATION","ASSESSMENT","FINAL_ASSESSMENT","RESOLUTION","DIAL_SIDES","DIAL_CLUE","GUESS","RIVAL_GUESS","WORD_SELECTION","SUGGEST","COMPARE","getRandomItem","list","Math","floor","random","length","inNSeconds","seconds","isDevEnv","isValidGameId","getColorFromIndex","letter","getColorFromLetter","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","getOppositeTeam","teams","teamsNames","Array","isArray","getPlayersFromIds","playerIds","justNames","map","player","name","orderBy","properties","orders","sortBy","_key","_cb","b","sortByDesc","cb","p","reverse","o","entries","i","order","Error","sort","GAME_API","helloWorld","httpsCallable","initializeGame","loadGame","addPlayer","lockGame","makePlayerReady","playAgain","goToNextPhase","forceStateProperty","ARTE_RUIM_API","submitDrawing","submitVoting","CLUBE_DETETIVES_API","submitAction","ESPIAO_ENTRE_NOS_API","handleAdminAction","makeAccusation","guessLocation","ONDA_TELEPATICA","submitSides","submitClue","submitGuess","submitRivalGuess","UE_SO_ISSO_API","submitWordSelectionVotes","submitSuggestions","submitValidation","confirmGuess","sendGuess","Loading","margin","clsx","Boolean","Text","LoadingBar","ButtonContainer","children","wrap","data-testid","defaultProps","EmergencyAlert","duration","isVisible","setVisible","useTimer","expiryTimestamp","autoStart","onExpire","centered","footer","visible","closable","Translate","custom","string","translate","Avatar","memo","size","shape","viewBox","href","avatars","AvatarEntry","animate","propTypes","PropTypes","bool","AvatarName","withDescription","uppercase","addressUser","baseClass","addressedUser","avatarId","AdminButton","action","icon","RocketFilled","danger","type","onClick","disabled","score","number","AdminForceNextPhase","buttonText","onGoToNextPhase","FireFilled","ForceNextPhaseButton","ValueFormItem","valueType","Item","checkedChildren","unCheckedChildren","defaultChecked","ForceStateForm","onForceStateProperty","Form","useForm","form","setValueType","stateKeys","k","onFinish","e","parsedValue","Number","undefined","confirm","resetFields","initialValues","rules","required","options","onChange","newType","setFieldsValue","Option","htmlType","AdminMenu","offsetBottom","title","content","trigger","onVisibleChange","AdminOnly","AdminOnlyButton","GameOverText","GameOver","info","onPlayAgain","PhaseContainer","phase","allowedPhase","gameOverTitle","winners","winner","group","strokeColor","victory","percent","onConfirm","okText","cancelText","Instruction","white","contained","LanguageSwitch","setLanguage","PageError","showIcon","fullScreen","screenRef","useRef","setScreenSize","current","height","width","LoadingPage","ref","Title","level","Painting","props","xmlns","fill","d","transform","Evaluate","cx","cy","rx","ry","Multitask","r","Picture","Seal","PhaseAnnouncement","currentRound","onClose","withoutTimer","durationPerRound","Icon","getIconType","TimedButton","RankingBoard","ranking","displayStep","setDisplayStep","sortedRanking","setSortedRanking","reRank","setReRank","maxPoints","newScore","positions","lastPosition","lastPoints","rankByFinalScoreDict","reduce","acc","entry","index","rankByPreviousScore","previousScore","tempSortedRanking","newEntry","position","style","max","gainedPoints","hPosition","top","CrownFilled","ReadyPlayersBar","readyText","readyTextPlural","showNames","readyPlayers","filter","Group","LikeFilled","join","Team","members","playerName","RoundAnnouncement","round","onPressButton","time","roundTitlePt","roundTitleEn","showTimer","this","store","notLoaded","appName","init","load","get","localStorage","parse","getItem","forEach","item","save","setItem","AVATAR_IDS","Join","setUserId","setUsername","setUserAvatarId","availableAvatars","setAvailableAvatars","tempAvatar","setTempAvatar","tempUsername","setTempUsername","sameGameId","setSameGameId","localStorageAvatar","setLocalStorageAvatar","usedAvatars","newAvailableAvatars","lsAvatarId","lsUsername","lsGameId","onPreviousAvatar","indexOf","newIndex","onNextAvatar","onAddPlayer","playerAvatarId","response","set","fallback","CaretLeftOutlined","CaretRightOutlined","target","trim","placeholder","maxLength","suffix","InfoCircleOutlined","onKeyPress","loading","Waiting","onLockGameAndStart","isLocked","numPlayers","min","Cloud","CyberCloud","data-name","FunkyCloud","DetectiveCloud","result","ArtsyCloud","CloudBackground","TypeComponent","getTypeComponent","backgroundType","Lobby","gameCode","SectionMe","isTeamGame","count","SectionMeta","roundsToEndGame","groupScore","pointsToVictory","total","backgroundColor","pagination","columns","teamId","teamObj","dataIndex","align","dataSource","SectionTeamPlayers","sortedPlayers","useMemo","SectionTeams","SectionRankedPlayers","rankedPlayers","GameInfoDrawer","completeMe","offsetTop","InfoCircleFilled","RulesModal","gameInfo","Session","gameCollection","getActiveComponent","useDocument","doc","snapshotListenOptions","includeMetadataChanges","snapshot","log","useGamePlayers","useGameState","setInfo","gameList","ActiveComponent","StarPoints","quantity","keyPrefix","starsArray","from","_","StarFilled","StepSwitcher","step","conditions","Step","fullWidth","timeClass","View","ViewIf","ViewSwitch","cases","WaitingRoom","instruction","Content","CreateGameModal","history","useHistory","setVisibility","setGameId","onCloseModal","createGame","onCancel","onOk","push","Rules","isUserReady","onBeReady","onBeReadyQue","RulesCarousel","ruleClass","CheckCircleFilled","SmileFilled","MehFilled","RobotFilled","settings","prevArrow","DoubleLeftOutlined","nextArrow","DoubleRightOutlined","autoplay","autoplaySpeed","arrows","rule","Paragraph","CollapsibleRule","Panel","header","ReadOutlined","messageContent","innerWidth","destroy","GameCard","game","hoverable","cover","Meta","summary","recommended","tags","tag","available","Hub","availableGames","comingSoonGames","code","signIn","email","password","signInWithEmailAndPassword","layout","labelCol","span","wrapperCol","tailLayout","offset","Login","setIsAuthenticated","setError","setEmail","setPassword","onHandleSubmit","uid","onValuesChange","autoComplete","ArteRuimCard","text","Card","WarningOutlined","randomColor","headerClassName","footerClassName","bgColor","EspiaoEntreNosCard","role","QuestionCircleFilled","ImageCard","imageId","cardWidth","fallbackName","imageURL","replace","maskClassName","bordered","ImageCardHand","hand","onSelectCard","selectButtonLabel","selectButtonClass","sizeRatio","cardSize","disabledSelectButton","screenWidth","cardId","DownSquareOutlined","ghost","UeSoIssoCard","word","CanvasReSizer","setCanvasSize","defaultValue","CanvasSVG","konvaLines","paths","lineArr","path","x","y","overflow","stroke","strokeWidth","strokeLinecap","strokeLinejoin","strokeMiterlimit","DrawingCanvas","lines","setLines","isDrawing","handleMouseDown","pos","getStage","getPointerPosition","handleMouseMove","point","lastLine","concat","splice","handleMouseUp","onMouseDown","onMousemove","onMouseup","onTouchStart","onTouchMove","onTouchEnd","line","points","tension","lineCap","globalCompositeOperation","DrawPhaseDrawStep","secretCard","onSubmitDrawing","PhaseDraw","setStep","setSecretCard","useSound","arteRuimTimer","volume","play","currentCard","Ribbon","cardEntryId","EvaluationAllDrawings","drawings","activeItem","onActivateItem","votes","liButtonBaseClass","drawingEntry","canvasEntryId","isActive","EvaluationAllCards","cards","cardEntry","isUsed","prepareVotes","drawingEntryId","drawingId","EvaluationRules","EvaluationPhase","setVotes","setActiveItem","onSubmitVoting","entryId","startsWith","prevVotes","ThunderboltOutlined","usedDrawings","usedCards","drawingsKeys","cardsKeys","shuffle","newVotes","drawingKey","CloudUploadOutlined","GalleryWindowCredits","artistName","artistAvatarId","GalleryWindowGuesses","playersSay","card","find","MessageFilled","GalleryWindowControls","galleryLength","activeIndex","setActiveIndex","isRunning","pause","resume","s","abs","StepBackwardOutlined","PauseOutlined","PlayCircleOutlined","StepForwardOutlined","TrophyOutlined","GalleryWindowResult","playerArtist","correctAnswerId","correctAnswerText","playersPoints","correctGuesses","DeleteFilled","GalleryWindow","artist","correctAnswer","correctAnswerLevel","GalleryRules","PhaseGallery","setCachedCanvasSize","gallery","PictureOutlined","grades","minValues","DrawingGrade","grade","findIndex","PhaseGameOver","successRate","SessionArteRuim","PhaseEvaluation","SecretClueWrite","onSubmitClue","clue","setClue","onButtonClick","SecretClueWaiting","leader","SecretCluePhase","isUserTheLeader","onSubmitSecretClue","Table","table","playerEntryKey","CardPlayPhase","currentPlayer","isUserTheImpostor","isUserTheCurrentPlayer","onPlayCard","FileImageOutlined","TableFocus","tableEntry","MagnifyingGlassSVG","DefensePhase","onFinishDefense","VotingOptions","onVote","isAllDisabled","votingOptions","playerOption","votedForPlayer","vote","vPlayer","VotingPhase","onSubmitVote","RevealPhase","impostor","onGoToNextRound","impostorVotes","SessionClubeDetetives","Notes","cols","rows","AdminTimerControlButton","onControlStopwatch","List","locations","cache","setCache","EnvironmentOutlined","ClearOutlined","newState","onCross","AssignmentPhase","isUserTheSpy","LocationsList","possibleLocations","PlayerSelect","onSend","isFinalAssessment","selectedPlayerId","setSelectedPlayerId","playersWithoutMe","LoadingOutlined","LocationSelect","selectedLocation","setSelectedLocation","guess","FinalAssessmentModal","isModalVisible","onAdminControl","UserOutlined","lastPlayer","Timer","timeRemaining","hideAccusationSelect","setModalVisible","warning","minutes","SuspectsList","AimOutlined","usedAccusation","IssuesCloseOutlined","InvestigationPhase","startingPlayer","isAccusationSelectVisible","setAccusationSelectVisible","onMakeAccusation","onGuessLocation","outcome","votedYes","EmergencyAlertSVG","AssessmentPhase","isUserTheTarget","isUserTheAccuser","submittedAction","setSubmitAction","accuser","finalAssessment","ResolutionPhase","currentSpy","resolutionType","spyWin","viewInfo","playerVictory","wasABadVoting","wasAnAccusationAttempt","didSpyGuess","didTheSpyWin","determineView","currentLocation","FinalAssessmentInstruction","playerOrder","playerOrderIndex","FinalAssessmentPhase","setAccuser","setTarget","SessionEspiaoEntreNos","getColorModifier","left","right","setNeedle","leftColor","rightColor","cardSideClass","isButton","onSetNeedle","direction","n","ArrowLeftOutlined","MinusOutlined","ArrowRightOutlined","cardName","CardSelection","onSendChosenSide","DialSidesPhase","psychic","isUserThePsychic","getBracketClass","showNeedle","needle","showTarget","baseBracketClass","modifier","Dial","rivalGuess","rivalTeam","showPoints","basePointsClass","baseRivalClass","textAnchor","getHint","DialClueWriting","onSendClue","FileUnknownOutlined","toUpperCase","DialCluePhase","Prompt","TeamInstructions","teamController","PsychicView","ControllerView","onSendGuess","ActiveTeamView","OtherTeamView","DialGuessSelection","isUserTheController","viewDelegator","GuessPhase","controller","rivalController","RivalControllerView","onSendRivalGuess","BackwardOutlined","ForwardOutlined","RivalTeamView","DialRivalSelection","isUserTheRivalController","isUsersTeamRival","RivalPhase","getResultInstructionLine","pointsBreakdown","catchup","got","getRivalResultInstructionLine","PointDistributionExplanation","activeTeamMessageType","getMessageType","shouldCatchup","rival","SessionOndaTelepatica","WordSelectionStep","guesser","onSendSelectedWords","words","selectedWords","setSelectedWords","selectedWordsArray","noSelection","wordId","randomSelection","WordSelectionPhase","isUserTheGuesser","nextGuesser","status","SuggestionEasel","onChangeInput","opacity","SuggestionStep","onSendSuggestions","secretWord","suggestionsNumber","suggestions","setSuggestions","indexStr","suggestionsValues","SuggestPhase","SuggestionCard","invalid","suggestion","CloseOutlined","CompareSuggestionsStep","obj","isUserTheNextGuesser","onValidateSuggestions","myRecommendation","setMyRecommendation","ExclamationCircleOutlined","suggestionEntry","notAllowed","arr","newArr","onSetValidation","validSuggestions","ComparePhase","Guess","onSubmitGuess","setGuess","GuessingStep","QuestionCircleOutlined","GuessVerificationStep","onConfirmGuess","CheckOutlined","SessionUeSoIsso","games","ArteRuim","ClubeDetetives","EspiaoEntreNos","OndaTelepatica","UeSoIsso","Game","setGameName","setGameMeta","isPageLoading","setPageLoading","isGameStale","gameCreatedAt","setGameStale","useIsGameStale","createdAt","urlGameId","pathname","substring","getGameIdFromURL","listen","getGameIdFromLocation","meta","loadGameSession","TestingZone","Gallery","pastDrawings","render","PrivateRoute","Component","component","authenticated","rest","to","PublicRoute","fromPath","App","setIsLoading","setIsAdmin","onAuthStateChanged","exact","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.20203de6.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/functions';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_API_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n// firebase.analytics();\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const functions = firebase.functions();\n\nif (window.location.hostname.includes('localhost')) {\n  firestore.useEmulator('localhost', 8091);\n  functions.useEmulator('localhost', 5001);\n}\n\nexport default firebase;\n","import { useCallback } from 'react';\nimport { message, notification } from 'antd';\nimport { useGlobalState, useLoading } from './index';\n\nfunction debounce(func, timeout = 500) {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      func.apply(this, args);\n    }, timeout);\n  };\n}\n\n/**\n * Wrapper around common firebase http call\n * @param {object} data\n * @param {Function} data.apiFunction\n * @param {Function} [data.onBeforeCall]\n * @param {Function} [data.onAfterCall]\n * @param {Function} [data.onError]\n * @param {string} [data.actionName] the name used in the loader hook\n * @param {string} [data.successMessage]\n * @param {string} [data.errorMessage]\n * @returns\n */\nexport function useAPICall({\n  apiFunction,\n  actionName = 'api-action',\n  onBeforeCall = () => {},\n  onAfterCall = () => {},\n  onError = () => {},\n  successMessage = 'API call was successful',\n  errorMessage = 'API call has failed',\n}) {\n  const [, setLoader] = useLoading();\n  const [gameId] = useGlobalState('gameId');\n  const [gameName] = useGlobalState('gameName');\n  const [userId] = useGlobalState('userId');\n\n  const onAPICall = debounce(\n    useCallback(\n      async (payload) => {\n        try {\n          setLoader(actionName, true);\n          await onBeforeCall();\n          const response = await apiFunction({\n            gameId,\n            gameName,\n            playerId: userId,\n            ...payload,\n          });\n\n          if (response.data) {\n            message.success(successMessage);\n          }\n        } catch (e) {\n          notification.error({\n            message: errorMessage,\n            description: JSON.stringify(e.message),\n            placement: 'bottomLeft',\n          });\n          console.error(e);\n          onError();\n        } finally {\n          await onAfterCall();\n          setLoader(actionName, false);\n        }\n      },\n      [\n        actionName,\n        apiFunction,\n        errorMessage,\n        gameId,\n        gameName,\n        userId,\n        setLoader,\n        successMessage,\n        onBeforeCall,\n        onAfterCall,\n        onError,\n      ]\n    )\n  );\n\n  return onAPICall;\n}\n","import { useGlobalState } from './index';\n\n/**\n * Get width and height of given element or from the screen\n * @returns [number, number] representing width and height of the element\n */\nexport function useDimensions(elementId) {\n  const [[sWidth, sHeight]] = useGlobalState('screenSize');\n\n  if (!elementId) {\n    return [sWidth, sHeight];\n  }\n\n  const element = document.getElementById(elementId);\n\n  if (!element) {\n    console.warn(`Element of id #${elementId} is not present in the dom`);\n  }\n\n  return [element?.offsetWidth ?? 32, element?.offsetHeight ?? 32];\n}\n","import { createGlobalState } from 'react-hooks-global-state';\n\nconst initialState = {\n  isLoading: false,\n  loaders: false,\n  appStartedAt: Date.now(),\n  screenSize: [],\n  // Language\n  language: 'pt',\n  // Meta\n  gameId: null,\n  gameName: null,\n  gameMeta: {},\n  // User/Player\n  userId: null,\n  username: '',\n  userAvatarId: '',\n  isAuthenticated: false,\n  isAdmin: false,\n  // Arte-Ruim\n  canvasSize: 250,\n  cachedCanvasSize: 250,\n  // Espiao-entre-nos\n  espiaoEntreNosCache: {},\n};\n\nconst { useGlobalState, setGlobalState, getGlobalState } = createGlobalState(initialState);\n\nexport { setGlobalState, getGlobalState, useGlobalState };\n\nexport default useGlobalState;\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\nexport function useIsUserReady(players, state = {}) {\n  const [userId] = useGlobalState('userId');\n  const [isReady, setIsReady] = useState(false);\n\n  useEffect(() => {\n    // Check if user is ready and check if user has been ready after the last state change\n    if (players[userId].ready === false) {\n      setIsReady(false);\n      return;\n    }\n\n    if (!state?.updatedAt) {\n      setIsReady(true);\n      return;\n    }\n\n    // If state was updated after the player was updated, data might not be synced\n    if (players[userId]?.updatedAt < state?.updatedAt) {\n      setIsReady(false);\n      return;\n    }\n\n    setIsReady(true);\n  }, [userId, players, state?.updatedAt]);\n\n  return isReady;\n}\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\n/**\n * Check if the current user is associated with given property\n * @param {string} propertyName - the property to be check in the state\n * @param {*} state - the game state\n * @returns {boolean}\n */\nexport function useIsUserThe(propertyName = 'activePlayer', state = {}) {\n  const [userId] = useGlobalState('userId');\n  const [isUser, setIsUser] = useState(false);\n\n  // Determine if user is active as the guesser, the clue giver, the psychic, the storyteller, etc\n  useEffect(() => {\n    setIsUser(state?.[propertyName] === userId);\n  }, [state, userId, propertyName]);\n\n  return isUser;\n}\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\nexport function useIsUsersTeamActive(state, players) {\n  const [userId] = useGlobalState('userId');\n  const [isUsersTeamActive, setIsUsersTeamActive] = useState(false);\n\n  // Determine if user's team is active\n  useEffect(() => {\n    setIsUsersTeamActive(state?.activeTeam === players?.[userId]?.team);\n  }, [state, userId, players]);\n\n  return isUsersTeamActive;\n}\n","import { useGlobalState } from './index';\n\n/**\n * Returns current selected language\n * @returns {string}\n */\nexport function useLanguage() {\n  const [language] = useGlobalState('language');\n  return language;\n}\n","import { useEffect } from 'react';\n\nimport { useGlobalState } from './index';\n\n/**\n * Aggregate loading states into a single object, and single isLoading state\n * @returns [boolean, function, object]\n */\nexport function useLoading() {\n  const [isLoading, setLoading] = useGlobalState('isLoading');\n  const [loaders, setLoaders] = useGlobalState('loaders');\n\n  useEffect(() => {\n    setLoading(Object.values(loaders).some((v) => v));\n  }, [loaders, setLoading]);\n\n  const setLoader = (key, value) => {\n    setLoaders((values) => ({\n      ...values,\n      [key]: value,\n    }));\n  };\n\n  return [isLoading, setLoader, loaders];\n}\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\nexport function useUser(players) {\n  const [userId] = useGlobalState('userId');\n  const [user, setUser] = useState({});\n\n  // Determine if user is active as the guesser, the clue giver, the psychic, the storyteller, etc\n  useEffect(() => {\n    setUser(players?.[userId]);\n  }, [players, userId]);\n\n  return user;\n}\n","import { useEffect, useState } from 'react';\n\n/**\n * Gets player that is assigned to a property in the state\n * @param {string} propertyName\n * @param {object} state\n * @param {object} players\n * @returns {object} a player instance\n */\nexport function useWhichPlayerIsThe(propertyName = 'activePlayer', state = {}, players = {}) {\n  const [activePlayer, setActivePlayer] = useState({});\n\n  // Determine if user is active as the guesser, the clue giver, the psychic, the storyteller, etc\n  useEffect(() => {\n    const activePlayer = state?.[propertyName];\n    setActivePlayer(players?.[activePlayer]);\n  }, [players, propertyName, state]);\n\n  return activePlayer;\n}\n","export default __webpack_public_path__ + \"static/media/tarde-divertida-logo.7e15410c.svg\";","import React from 'react';\nimport { Image, Layout } from 'antd';\n\nimport logo from '../images/tarde-divertida-logo.svg';\n\nfunction Home() {\n  return (\n    <Layout className=\"home\">\n      <div className=\"home__logo-container\">\n        <Image src={logo} className=\"home__logo\" preview={false} alt=\"Tarde Divertida logo\" />\n      </div>\n      <div className=\"home__background\">\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Home;\n","/**\n * List of urls residing in the public folder\n */\nexport const PUBLIC_URL = {\n  BANNERS: `${process.env.PUBLIC_URL}/images/banners/`,\n  RULES: `${process.env.PUBLIC_URL}/images/rules/`,\n  CARDS: `${process.env.PUBLIC_URL}/images/cards/`,\n  ROOT: `${process.env.PUBLIC_URL}/images/`,\n};\n\n/**\n * List of tags translation and color\n */\nexport const TAG_DICT = {\n  competitive: {\n    label: 'competitivo',\n    color: 'red',\n  },\n  cooperative: {\n    label: 'cooperativo',\n    color: 'green',\n  },\n  traitor: {\n    label: 'inimigo',\n    color: 'volcano',\n  },\n  'real-time': {\n    label: 'juntos',\n    color: 'volcano',\n  },\n  'turn-based': {\n    label: 'vez',\n    color: 'volcano',\n  },\n  timed: {\n    label: 'tempo',\n    color: 'orange',\n  },\n  drawing: {\n    label: 'desenho',\n    color: 'gold',\n  },\n  guessing: {\n    label: 'adivinhar',\n    color: 'cyan',\n  },\n  writing: {\n    label: 'escrever',\n    color: 'blue',\n  },\n  images: {\n    label: 'imagens',\n    color: 'purple',\n  },\n  discussion: {\n    label: 'discussão/fala',\n    color: 'geekblue',\n  },\n};\n\n/**\n * List of avatar ids\n */\nexport const AVATARS = {\n  0: {\n    id: '0',\n    description: { pt: 'o axolote', en: 'the axolotl' },\n    color: '#da70d6',\n  },\n  1: {\n    id: '1',\n    description: { pt: 'a tartaruga', en: 'the turtle' },\n    color: '#008080',\n  },\n  2: {\n    id: '2',\n    description: { pt: 'a raposa', en: 'the fox' },\n    color: '#d2691e',\n  },\n  3: {\n    id: '3',\n    description: { pt: 'o sapo', en: 'the toad' },\n    color: '#556b2f',\n  },\n  4: {\n    id: '4',\n    description: { pt: 'a salamandra', en: 'the lizard' },\n    color: '#7cc44f',\n  },\n  5: {\n    id: '5',\n    description: { pt: 'a toupeira', en: 'the mole' },\n    color: '#2f4f4f',\n  },\n  6: {\n    id: '6',\n    description: { pt: 'o esquilo', en: 'the squirrel' },\n    color: '#ff6347',\n  },\n  7: {\n    id: '7',\n    description: { pt: 'o corvo', en: 'the starling' },\n    color: '#4682b4',\n  },\n  8: {\n    id: '8',\n    description: { pt: 'a lontra', en: 'the otter' },\n    color: '#d2a467',\n  },\n  9: {\n    id: '9',\n    description: { pt: 'o camundongo', en: 'the mouse' },\n    color: '#7fb5c7',\n  },\n  10: {\n    id: '10',\n    description: { pt: 'o sabiá', en: 'the cardinal' },\n    color: '#b22222',\n  },\n  11: {\n    id: '11',\n    description: { pt: 'a coruja', en: 'the owl' },\n    color: '#9370db',\n  },\n  12: {\n    id: '12',\n    description: { pt: 'o porco-espinho', en: 'the hedgehog' },\n    color: '#778899',\n  },\n  13: {\n    id: '13',\n    description: { pt: 'o ornitorrinco', en: 'the platypus' },\n    color: '#663399',\n  },\n  14: {\n    id: '14',\n    description: { pt: 'o rato', en: 'the rat' },\n    color: '#696969',\n  },\n  15: {\n    id: '15',\n    description: { pt: 'a rã', en: 'the frog' },\n    color: '#20212e',\n  },\n  16: {\n    id: '16',\n    description: { pt: 'o caramujo', en: 'the snail' },\n    color: '#9884b4',\n  },\n  17: {\n    id: '17',\n    description: { pt: 'a abelha', en: 'the bee' },\n    color: '#dfb231',\n  },\n  18: {\n    id: '18',\n    description: { pt: 'o morcego', en: 'the bat' },\n    color: '#875131',\n  },\n  19: {\n    id: '19',\n    description: { pt: 'o gato', en: 'the cat' },\n    color: '#db8a34',\n  },\n  20: {\n    id: '20',\n    description: { pt: 'o coelho', en: 'the rabbit' },\n    color: '#eb3465',\n  },\n  21: {\n    id: '21',\n    description: { pt: 'a aranha', en: 'the spider' },\n    color: '#2b1752',\n  },\n  22: {\n    id: '22',\n    description: { pt: 'a borboleta', en: 'the butterfly' },\n    color: '#3c58ac',\n  },\n  23: {\n    id: '23',\n    description: { pt: 'o arminho', en: 'the stoat' },\n    color: '#bdb74c',\n  },\n  24: {\n    id: '24',\n    description: { pt: 'o porco', en: 'the pig' },\n    color: '#dd9fbd',\n  },\n};\n\nexport const AVAILABLE_AVATAR_IDS = Object.keys(AVATARS);\n\nexport const LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\nexport const SEPARATOR = '::';\n\n/**\n * Random names used during Dev\n */\nexport const RANDOM_NAMES = 'Ana,Bob,Cam,Dan,Evan,Fred,Gus,Helen,Ian,Jess,Kim,Liam,Max,Nick,Oliver,Peter,Quinn,Roy,Tina'.split(\n  ','\n);\n\n/**\n * Enum of available games\n */\nexport const GAME_COLLECTION = {\n  ARTE_RUIM: 'arte-ruim',\n  CLUBE_DETETIVES: 'clube-detetives',\n  ESPIAO_ENTRE_NOS: 'espiao-entre-nos',\n  ONDA_TELEPATICA: 'onda-telepatica',\n  UE_SO_ISSO: 'ue-so-isso',\n};\n\n/**\n * Enum of Game Phases\n */\nexport const PHASES = {\n  ARTE_RUIM: {\n    LOBBY: 'LOBBY',\n    RULES: 'RULES',\n    DRAW: 'DRAW',\n    EVALUATION: 'EVALUATION',\n    GALLERY: 'GALLERY',\n    GAME_OVER: 'GAME_OVER',\n  },\n  CLUBE_DETETIVES: {\n    LOBBY: 'LOBBY',\n    RULES: 'RULES',\n    SECRET_CLUE: 'SECRET_CLUE',\n    CARD_PLAY: 'CARD_PLAY',\n    DEFENSE: 'DEFENSE',\n    VOTING: 'VOTING',\n    REVEAL: 'REVEAL',\n    GAME_OVER: 'GAME_OVER',\n  },\n  ESPIAO_ENTRE_NOS: {\n    LOBBY: 'LOBBY',\n    RULES: 'RULES',\n    ASSIGNMENT: 'ASSIGNMENT',\n    INVESTIGATION: 'INVESTIGATION',\n    ASSESSMENT: 'ASSESSMENT',\n    FINAL_ASSESSMENT: 'FINAL_ASSESSMENT',\n    RESOLUTION: 'RESOLUTION',\n    GAME_OVER: 'GAME_OVER',\n  },\n  ONDA_TELEPATICA: {\n    LOBBY: 'LOBBY',\n    RULES: 'RULES',\n    DIAL_SIDES: 'DIAL_SIDES',\n    DIAL_CLUE: 'DIAL_CLUE',\n    GUESS: 'GUESS',\n    RIVAL_GUESS: 'RIVAL_GUESS',\n    REVEAL: 'REVEAL',\n    GAME_OVER: 'GAME_OVER',\n  },\n  UE_SO_ISSO: {\n    LOBBY: 'LOBBY',\n    RULES: 'RULES',\n    WORD_SELECTION: 'WORD_SELECTION',\n    SUGGEST: 'SUGGEST',\n    COMPARE: 'COMPARE',\n    GUESS: 'GUESS',\n    GAME_OVER: 'GAME_OVER',\n  },\n};\n","/**\n * Creates a copy of given object\n * @param {object} obj\n * @returns {object}\n */\nexport const deepCopy = (obj) => JSON.parse(JSON.stringify(obj));\n\n/**\n * Extract the gameId from react history\n * @param {object} history\n * @returns {string}\n */\nexport const getGameIdFromURL = (history) => {\n  const { pathname = '/' } = history?.location ?? {};\n  return pathname.substring(1);\n};\n\n/**\n * Extract the gameId from react history.location\n * @param {object} history\n * @returns {string}\n */\nexport const getGameIdFromLocation = (location) => {\n  const { pathname = '/' } = location ?? {};\n  return pathname.substring(1);\n};\n\n/**\n * Get random element/item from a list\n * @param {array} list\n * @returns one random item\n */\nexport const getRandomItem = (list) => {\n  return list[Math.floor(Math.random() * list.length)];\n};\n\n/**\n * Get date from now within the given seconds\n * @param {number} seconds\n * @returns\n */\nexport const inNSeconds = (seconds) => {\n  return Date.now() + seconds * 1000;\n};\n\n/**\n * Flag indicating if the environment is for development and not storybook\n * @type {boolean}\n */\nexport const isDevEnv = process.env.NODE_ENV === 'development' && window.location.port !== '6006';\n\n/**\n * Verify if the game id exists and has the correct length\n * @param {string} gameId\n * @returns\n */\nexport const isValidGameId = (gameId) => {\n  return gameId && gameId.length === 4;\n};\n\n/**\n * Gets color name from index\n * @param {number} letter\n * @returns\n */\nexport const getColorFromIndex = (letter) => {\n  return (\n    [\n      'red',\n      'blue',\n      'green',\n      'yellow',\n      'pink',\n      'purple',\n      'teal',\n      'orange',\n      'coffee',\n      'navy',\n      'light-green',\n      'brown',\n      'hot-pink',\n      'violet',\n      'forest',\n      'cream',\n    ][letter] ?? 'none'\n  );\n};\n\n/**\n * Get color name from letter\n * @param {string} letter\n * @returns\n */\nexport const getColorFromLetter = (letter) => {\n  return (\n    {\n      A: 'red',\n      B: 'blue',\n      C: 'green',\n      D: 'yellow',\n      E: 'pink',\n      F: 'purple',\n      G: 'teal',\n      H: 'orange',\n      I: 'coffee',\n      J: 'navy',\n      K: 'light-green',\n      L: 'brown',\n      M: 'hot-pink',\n      N: 'violet',\n      O: 'forest',\n      P: 'cream',\n\n      // repeats\n      Q: 'red',\n      R: 'blue',\n      S: 'green',\n      T: 'yellow',\n      U: 'pink',\n      V: 'purple',\n      W: 'teal',\n      X: 'none',\n      Y: 'orange',\n      Z: 'coffee',\n    }[letter] ?? 'none'\n  );\n};\n\n/**\n * Get the team name that is not active\n * @param {object|array} teams\n * @param {string} activeTeam\n * @returns {string}\n */\nexport const getOppositeTeam = (teams, activeTeam) => {\n  if (!teams || !activeTeam || teams?.length < 2 || teams?.length > 2) return '?';\n\n  const teamsNames = Array.isArray(teams) ? teams : Object.keys(teams);\n  if (teamsNames[0] === activeTeam) return teamsNames[1];\n  else return teamsNames[0];\n};\n\n/**\n * Get given players from list of ids\n * @param {string[]} playerIds\n * @param {object} players\n * @param {boolean} justNames if true, only return names\n * @returns\n */\nexport const getPlayersFromIds = (playerIds, players, justNames = false) => {\n  return playerIds.map((playerId) => {\n    const player = players[playerId];\n    if (justNames) return player.name;\n    return player;\n  });\n};\n\n/**\n * Orders array by a value its item object\n * @param {object[]} list\n * @param {string|string[]} properties\n * @param {string|string[]} orders\n * @returns {object[]}\n */\nexport const orderBy = (list, properties, orders) => {\n  function sortBy(_key, _cb) {\n    if (!_cb) _cb = () => 0;\n    return (a, b) => (a[_key] > b[_key] ? 1 : b[_key] > a[_key] ? -1 : _cb(a, b));\n  }\n\n  function sortByDesc(key, _cb) {\n    if (!_cb) _cb = () => 0;\n    return (b, a) => (a[key] > b[key] ? 1 : b[key] > a[key] ? -1 : _cb(b, a));\n  }\n\n  let cb = () => 0;\n  const p = Array.isArray(properties) ? properties.reverse() : [properties];\n  const o = Array.isArray(orders) ? orders.reverse() : [orders];\n\n  for (const [i, key] of p.entries()) {\n    const order = o[i] ?? o[0] ?? 'asc';\n    if (order === 'asc') {\n      cb = sortBy(key, cb);\n    } else if (order === 'desc') {\n      cb = sortByDesc(key, cb);\n    } else {\n      throw new Error(`Unsupported order \"${order}\"`);\n    }\n  }\n\n  return [...list].sort(cb);\n};\n\n/**\n * Determines if it should output the singular or plural argument depending on given quantity\n * @param {number} quantity\n * @param {string} singular\n * @param {string} plural\n * @returns\n */\nexport const pluralize = (quantity, singular, plural) => {\n  if (!plural) return singular;\n  return quantity === 1 ? singular : plural;\n};\n\n/**\n * Shuffle list copy\n * @param {any[]} list\n * @returns\n */\nexport const shuffle = (list) => {\n  const result = [...list];\n  result.sort(() => Math.random() - 0.5);\n  return result;\n};\n","import { functions } from '../services/firebase';\nimport { GAME_COLLECTION } from '../utils/constants';\n\nexport const GAME_API = {\n  helloWorld: functions.httpsCallable('helloWorld'),\n  initializeGame: functions.httpsCallable('initializeGame'),\n  loadGame: functions.httpsCallable('loadGame'),\n  addPlayer: functions.httpsCallable('addPlayer'),\n  lockGame: functions.httpsCallable('lockGame'),\n  makePlayerReady: functions.httpsCallable('makePlayerReady'),\n  playAgain: functions.httpsCallable('playAgain'),\n  goToNextPhase: functions.httpsCallable('goToNextPhase'),\n  forceStateProperty: functions.httpsCallable('forceStateProperty'),\n};\n\nexport const ARTE_RUIM_API = {\n  submitDrawing: functions.httpsCallable('arteRuimSubmitDrawing'),\n  submitVoting: functions.httpsCallable('arteRuimSubmitVoting'),\n};\n\nexport const CLUBE_DETETIVES_API = {\n  submitAction: functions.httpsCallable('clubeDetetivesSubmitAction'),\n};\n\nexport const ESPIAO_ENTRE_NOS_API = {\n  handleAdminAction: functions.httpsCallable('espiaoEntreNosHandleAdminAction'),\n  makeAccusation: functions.httpsCallable('espiaoEntreNosMakeAccusation'),\n  guessLocation: functions.httpsCallable('espiaoEntreNosGuessLocation'),\n  submitVoting: functions.httpsCallable('espiaoEntreNosSubmitVoting'),\n};\n\nexport const ONDA_TELEPATICA = {\n  submitSides: functions.httpsCallable('ondaTelepaticaSubmitSides'),\n  submitClue: functions.httpsCallable('ondaTelepaticaSubmitClue'),\n  submitGuess: functions.httpsCallable('ondaTelepaticaSubmitGuess'),\n  submitRivalGuess: functions.httpsCallable('ondaTelepaticaSubmitRivalGuess'),\n};\n\nexport const UE_SO_ISSO_API = {\n  submitWordSelectionVotes: functions.httpsCallable('ueSoIssoSubmitWordSelectionVotes'),\n  submitSuggestions: functions.httpsCallable('ueSoIssoSubmitSuggestions'),\n  submitValidation: functions.httpsCallable('ueSoIssoSubmitValidation'),\n  confirmGuess: functions.httpsCallable('ueSoIssoConfirmGuess'),\n  sendGuess: functions.httpsCallable('ueSoIssoSendGuess'),\n};\n\n/**\n * Gets the game specific API http functions\n * @param {string} gameName\n * @returns\n */\nexport const getAPI = (gameName) => {\n  switch (gameName) {\n    case GAME_COLLECTION.ARTE_RUIM:\n      return ARTE_RUIM_API;\n    case GAME_COLLECTION.ESPIAO_ENTRE_NOS:\n      return ESPIAO_ENTRE_NOS_API;\n    case GAME_COLLECTION.ONDA_TELEPATICA:\n      return ONDA_TELEPATICA;\n    case GAME_COLLECTION.UE_SO_ISSO:\n      return UE_SO_ISSO_API;\n    default:\n      throw Error(`Adapter for ${gameName} does not exist`);\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Space, Spin, Typography } from 'antd';\n\nexport function Loading({ message, margin }) {\n  return (\n    <Space className={clsx('loading', margin && 'loading--margin')}>\n      <Spin />\n      {Boolean(message) && <Typography.Text>{message}</Typography.Text>}\n    </Space>\n  );\n}\n\nLoading.propTypes = {\n  margin: PropTypes.bool,\n  message: PropTypes.string,\n};\n\nLoading.defaultProps = {\n  margin: false,\n};\n","import React from 'react';\n// Hooks\nimport { useLoading } from '../../hooks';\n\nexport function LoadingBar() {\n  const [isLoading] = useLoading();\n\n  return isLoading ? <div className=\"loading-bar\"></div> : <></>;\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Space } from 'antd';\n\nexport function ButtonContainer({ children, wrap = false, className = '' }) {\n  const baseClass = 'button-container';\n  return (\n    <Space className={clsx(baseClass, className)} wrap={wrap} data-testid=\"button-container\">\n      {children}\n    </Space>\n  );\n}\n\nButtonContainer.propTypes = {\n  children: PropTypes.element.isRequired,\n  className: PropTypes.string,\n  wrap: PropTypes.bool,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal } from 'antd';\nimport { useTimer } from 'react-timer-hook';\n// Utils\nimport { inNSeconds } from '../../utils';\n\nexport function EmergencyAlert({ children, duration = 2 }) {\n  const [isVisible, setVisible] = useState(true);\n\n  useTimer({\n    expiryTimestamp: inNSeconds(duration),\n    autoStart: true,\n    onExpire: () => setVisible(false),\n  });\n\n  return (\n    <Modal centered footer={null} visible={isVisible} className=\"emergency-alert\" closable={false}>\n      {children}\n    </Modal>\n  );\n}\n\nEmergencyAlert.propTypes = {\n  children: PropTypes.any,\n  duration: PropTypes.number,\n};\n","export default __webpack_public_path__ + \"static/media/game-over-title.7073f1c0.svg\";","export default __webpack_public_path__ + \"static/media/avatars.a2364409.svg\";","import React from 'react';\n// Design Resources\nimport { message } from 'antd';\n// Hooks\nimport { useLanguage } from '../../hooks';\n\n/**\n * Delegate between two strings depending on the active language\n * @param {*} pt\n * @param {*} en\n * @param {*} [custom] text that will override anything else\n * @returns a fragment\n */\nexport function Translate({ pt, en, custom = null, string = false }) {\n  const language = useLanguage();\n\n  if (string) return translate(pt, en, language, custom);\n\n  if (!language) {\n    const errorMessage = 'Could not reach the useLanguage hook';\n    console.error(errorMessage);\n    message.error(errorMessage);\n    return <span>?</span>;\n  }\n\n  if (custom) {\n    return <span>{custom}</span>;\n  }\n\n  if (!pt || !en) {\n    const errorMessage = '`pt` or `en` translation was not provided';\n    console.error(errorMessage);\n    message.error(errorMessage);\n    return <span>?</span>;\n  }\n\n  return language === 'pt' ? <span>{pt}</span> : <span>{en}</span>;\n}\n\n/**\n * Delegate between two strings depending on the active language\n * @param {string} pt\n * @param {string} en\n * @param {string} language\n * @param {*} [custom] text that will override anything else\n * @returns {string}\n */\nexport function translate(pt, en, language, custom = null) {\n  if (!language) {\n    const errorMessage = 'Could not reach the language global state';\n    console.error(errorMessage);\n\n    return '?';\n  }\n\n  if (custom) {\n    return custom;\n  }\n\n  if (!pt || !en) {\n    const errorMessage = 'PT or EN translation was not provided';\n    console.error(errorMessage);\n\n    return '?';\n  }\n\n  return language === 'pt' ? pt : en;\n}\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Avatar as AntAvatar } from 'antd';\n// Images\nimport avatars from '../../images/avatars.svg';\n// Hooks\nimport { useLanguage } from '../../hooks';\n// Utils\nimport { AVAILABLE_AVATAR_IDS } from '../../utils/constants';\nimport { translate } from '../shared/Translate';\n\n/**\n * Displays an Avatar svg image for given player\n */\nexport const Avatar = memo(function ({ id, size, shape, alt, className }) {\n  const language = useLanguage();\n\n  return (\n    <AntAvatar\n      className={clsx('avatar', className)}\n      size={size}\n      shape={shape}\n      alt={alt ?? translate('Fulano', 'John Doe', language)}\n      src={\n        <svg viewBox=\"0 0 100 100\">\n          <use href={avatars + `#avatar-${id}`}></use>\n        </svg>\n      }\n    />\n  );\n});\n\nAvatar.propTypes = {\n  alt: PropTypes.string,\n  className: PropTypes.string,\n  id: PropTypes.oneOf(AVAILABLE_AVATAR_IDS),\n  shape: PropTypes.oneOf(['circle', 'square']),\n  size: PropTypes.oneOfType([PropTypes.oneOf(['large', 'small', 'default']), PropTypes.number]),\n};\n\nAvatar.defaultProps = {\n  className: '',\n  id: '25',\n  shape: 'circle',\n  size: 'large',\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Components\nimport { Avatar } from './Avatar';\n// Utils\nimport { Translate } from '../shared';\n\nexport const AvatarEntry = memo(function ({ id, name, animate, className }) {\n  return (\n    <div className={clsx('avatar-entry', animate && 'avatar-entry--floating', className)}>\n      <Avatar id={id} className=\"avatar-entry__avatar\" size=\"large\" />\n      <div className=\"avatar-entry__name\">\n        <Translate pt=\"Fulano\" en=\"John Doe\" custom={name} />\n      </div>\n    </div>\n  );\n});\n\nAvatar.propTypes = {\n  animate: PropTypes.bool,\n  className: PropTypes.string,\n  id: PropTypes.string,\n  name: PropTypes.string,\n};\n\nAvatar.defaultProps = {\n  animate: false,\n  className: '',\n  id: '25',\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Resources\nimport { AVATARS } from '../../utils/constants';\n// Hooks\nimport { useGlobalState, useLanguage } from '../../hooks';\n// Components\nimport { Avatar } from './Avatar';\nimport { translate } from '../shared';\n\nexport const AvatarName = memo(function ({\n  player,\n  size,\n  className,\n  withDescription,\n  uppercase,\n  addressUser,\n}) {\n  const [userId] = useGlobalState('userId');\n  const language = useLanguage();\n\n  const baseClass = 'avatar-name';\n\n  const isUser = player.id === userId;\n  const addressedUser = translate('VOCÊ', 'YOU', language);\n\n  return (\n    <span\n      className={clsx(baseClass, `${baseClass}--${size}`, uppercase && `${baseClass}--uppercase`, className)}\n    >\n      <Avatar id={player.avatarId} className=\"avatar-name__avatar\" size={size} />\n      <span className=\"avatar-name__name\">{addressUser && isUser ? addressedUser : player.name}</span>\n      {withDescription && (\n        <span className=\"avatar-name__name\">, {AVATARS[player.avatarId].description[language]}</span>\n      )}\n    </span>\n  );\n});\n\nAvatarName.propTypes = {\n  addressUser: PropTypes.bool,\n  className: PropTypes.string,\n  player: PropTypes.shape({\n    avatarId: PropTypes.string,\n    id: PropTypes.any,\n    name: PropTypes.string,\n  }).isRequired,\n  size: PropTypes.oneOf(['small', 'default', 'large']),\n  uppercase: PropTypes.bool,\n  withDescription: PropTypes.bool,\n};\n\nAvatarName.defaultProps = {\n  addressUser: false,\n  className: '',\n  size: 'default',\n  uppercase: false,\n  withDescription: false,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button } from 'antd';\nimport { RocketFilled } from '@ant-design/icons';\n// State\nimport { useLoading } from '../../hooks';\n\nexport function AdminButton({ action, label }) {\n  const [isLoading] = useLoading();\n  return (\n    <Button icon={<RocketFilled />} danger type=\"primary\" onClick={action} disabled={isLoading}>\n      {label}\n    </Button>\n  );\n}\n\nAdminButton.propTypes = {\n  action: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Components\nimport { Avatar } from './Avatar';\nimport { CrownFilled, LikeFilled } from '@ant-design/icons';\n\nexport const AvatarReady = memo(function ({\n  id = 25,\n  name = 'Fulano',\n  score = 0,\n  ready = false,\n  className = '',\n}) {\n  return (\n    <div className={clsx('avatar-entry', className)}>\n      <Avatar id={id} className=\"avatar-entry__avatar\" />\n      <div className=\"avatar-entry__name\">{name}</div>\n      <LikeFilled />\n      <CrownFilled />\n    </div>\n  );\n});\n\nAvatar.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  score: PropTypes.number,\n  ready: PropTypes.bool,\n  animate: PropTypes.bool,\n  className: PropTypes.string,\n};\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Space } from 'antd';\nimport { FireFilled } from '@ant-design/icons';\n// State & Hooks\nimport { useAPICall, useGlobalState, useLanguage, useLoading } from '../../hooks';\nimport { GAME_API } from '../../adapters';\nimport { translate } from '../shared';\n\nexport function AdminForceNextPhase({ buttonText, className = '' }) {\n  const language = useLanguage();\n  const [isLoading] = useLoading();\n  const [isAdmin] = useGlobalState('isAdmin');\n\n  const onGoToNextPhase = useAPICall({\n    apiFunction: GAME_API.goToNextPhase,\n    actionName: 'force-next-phase',\n    successMessage: translate('Funcionou, próxima fase!', 'It worked, next phase!', language),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar ir para a próxima fase',\n      'The application found an error while trying to go to the next phase',\n      language\n    ),\n  });\n\n  if (!isAdmin) return <span></span>;\n\n  return (\n    <Space className={clsx('admin-only-container', className)}>\n      <Button\n        icon={<FireFilled />}\n        type=\"primary\"\n        danger\n        onClick={() => onGoToNextPhase({})}\n        disabled={isLoading}\n      >\n        {buttonText ?? <>Force Next Phase</>}\n      </Button>\n    </Space>\n  );\n}\n\nAdminForceNextPhase.propTypes = {\n  buttonText: PropTypes.string,\n  className: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button } from 'antd';\nimport { FireFilled } from '@ant-design/icons';\n\nexport const ForceNextPhaseButton = ({ isLoading, onGoToNextPhase }) => (\n  <Button\n    icon={<FireFilled />}\n    type=\"primary\"\n    danger\n    onClick={() => onGoToNextPhase({})}\n    disabled={isLoading}\n    size=\"large\"\n    className=\"full-width\"\n  >\n    Force Next Phase\n  </Button>\n);\n\nForceNextPhaseButton.propTypes = {\n  isLoading: PropTypes.bool,\n  onGoToNextPhase: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Input, Form, InputNumber, Switch } from 'antd';\n\nexport const ValueFormItem = ({ valueType }) => {\n  switch (valueType) {\n    case 'number':\n      return (\n        <Form.Item label=\"Value\" name=\"value\">\n          <InputNumber />\n        </Form.Item>\n      );\n    case 'boolean':\n      return (\n        <Form.Item label=\"Value\" name=\"value\">\n          <Switch checkedChildren=\"true\" unCheckedChildren=\"false\" defaultChecked />\n        </Form.Item>\n      );\n    case 'nullish':\n      return (\n        <Form.Item label=\"Value\" name=\"value\">\n          <Switch checkedChildren=\"null\" unCheckedChildren=\"undefined\" defaultChecked />\n        </Form.Item>\n      );\n    default:\n      return (\n        <Form.Item label=\"Value\" name=\"value\">\n          <Input />\n        </Form.Item>\n      );\n  }\n};\nValueFormItem.propTypes = {\n  valueType: PropTypes.string,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Form, Select, AutoComplete, message } from 'antd';\n// Components\nimport { ValueFormItem } from './ValueFormItem';\n\nexport const ForceStateForm = ({ isLoading, state, onForceStateProperty }) => {\n  const [form] = Form.useForm();\n  const [valueType, setValueType] = useState('string');\n  const stateKeys = Object.keys(state).map((k) => ({ label: k, value: k }));\n\n  const onValueTypeSelectChange = (newType) => {\n    if (['boolean', 'nullish'].includes(newType)) form.setFieldsValue({ value: true });\n    if (newType === 'number') form.setFieldsValue({ value: 0 });\n    if (newType === 'string') form.setFieldsValue({ value: '' });\n    setValueType(newType);\n  };\n\n  const onFinish = async (e) => {\n    let parsedValue = e.value;\n\n    try {\n      if (e.valueType === 'number') {\n        parsedValue = Number(e.value) ?? 0;\n      }\n      if (e.valueType === 'nullish') {\n        parsedValue = e.value ? null : undefined;\n      }\n\n      const payload = {\n        [e.key]: parsedValue,\n      };\n\n      if (window.confirm(`Tem certeza que quer forçar o estado ${JSON.stringify(payload)}`)) {\n        await onForceStateProperty({ state: payload });\n\n        form.resetFields();\n        setValueType('string');\n      }\n    } catch (e) {\n      message.error('Something went wrong', e);\n    }\n  };\n\n  return (\n    <Form name=\"basic\" form={form} initialValues={{ valueType: 'string' }} onFinish={onFinish}>\n      <h3>Force Property</h3>\n      <Form.Item label=\"Key\" name=\"key\" rules={[{ required: true }]}>\n        <AutoComplete options={stateKeys} />\n      </Form.Item>\n      <Form.Item label=\"Type\" name=\"valueType\">\n        <Select onChange={onValueTypeSelectChange}>\n          <Select.Option value=\"string\">string</Select.Option>\n          <Select.Option value=\"number\">number</Select.Option>\n          <Select.Option value=\"boolean\">boolean</Select.Option>\n          <Select.Option value=\"nullish\">nullish</Select.Option>\n        </Select>\n      </Form.Item>\n\n      <ValueFormItem valueType={valueType} />\n\n      <Button type=\"primary\" htmlType=\"submit\" disabled={isLoading} danger>\n        Submit\n      </Button>\n    </Form>\n  );\n};\n\nForceStateForm.propTypes = {\n  isLoading: PropTypes.bool,\n  onForceStateProperty: PropTypes.func.isRequired,\n  state: PropTypes.object,\n};\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Affix, Button, Popover, Spin } from 'antd';\nimport { FireFilled } from '@ant-design/icons';\n// Hooks and API\nimport { GAME_API } from '../../adapters';\nimport { useAPICall, useGlobalState, useLoading } from '../../hooks';\n// Components\nimport { ForceNextPhaseButton } from './ForceNextPhaseButton';\nimport { ForceStateForm } from './ForceStateForm';\n\nexport const AdminMenu = ({ state }) => {\n  const [isLoading] = useLoading();\n  const [isAdmin] = useGlobalState('isAdmin');\n  const [visible, setVisible] = useState(false);\n\n  const onGoToNextPhase = useAPICall({\n    apiFunction: GAME_API.goToNextPhase,\n    actionName: 'force-next-phase',\n    successMessage: 'Funcionou, próxima fase!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar ir para a próxima fase',\n    onAfterCall: () => setVisible(false),\n  });\n\n  const onForceStateProperty = useAPICall({\n    apiFunction: GAME_API.forceStateProperty,\n    actionName: 'force-state-property',\n    successMessage: 'Estato forçado com sucesso!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar forçar uma propriedade do estado',\n    onAfterCall: () => setVisible(false),\n  });\n\n  if (!isAdmin) return <span></span>;\n\n  const handleVisibility = (isVisible) => setVisible(isVisible);\n  const showMenu = () => setVisible(true);\n\n  return (\n    <Fragment>\n      <Affix offsetBottom={10} className=\"admin-menu__affix-button\">\n        <Popover\n          placement=\"topLeft\"\n          title=\"Admin Actions\"\n          content={\n            <ul>\n              <li>\n                <ForceNextPhaseButton isLoading={isLoading} onGoToNextPhase={onGoToNextPhase} />\n              </li>\n              <li>\n                <hr />\n              </li>\n              <li>\n                <ForceStateForm\n                  isLoading={isLoading}\n                  onForceStateProperty={onForceStateProperty}\n                  state={state}\n                />\n              </li>\n            </ul>\n          }\n          trigger=\"click\"\n          visible={visible}\n          onVisibleChange={handleVisibility}\n        >\n          <Button\n            type=\"primary\"\n            danger\n            shape=\"circle\"\n            size=\"large\"\n            className=\"game-info-drawer__button\"\n            onClick={showMenu}\n            disabled={isLoading}\n            icon={isLoading ? <Spin /> : <FireFilled />}\n          />\n        </Popover>\n      </Affix>\n    </Fragment>\n  );\n};\n\nAdminMenu.propTypes = {\n  state: PropTypes.object,\n};\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Space } from 'antd';\n// State\nimport { useGlobalState } from '../../hooks';\n\nexport const AdminOnly = ({ children, className = '' }) => {\n  const [isAdmin] = useGlobalState('isAdmin');\n\n  if (!isAdmin) return <span></span>;\n\n  return <Space className={clsx('admin-only-container', className)}>{children}</Space>;\n};\n\nAdminOnly.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)]).isRequired,\n  className: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Components\nimport { AdminOnly, AdminButton } from './index';\n\nexport function AdminOnlyButton({ action, label }) {\n  return (\n    <AdminOnly>\n      <AdminButton action={action} label={label} />\n    </AdminOnly>\n  );\n}\n\nAdminOnlyButton.propTypes = {\n  action: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n};\n","import React from 'react';\n// Design Resources\nimport { Button, Popconfirm, Progress } from 'antd';\nimport { RocketFilled } from '@ant-design/icons';\n// Images\nimport gameOverTitle from '../../images/game-over-title.svg';\n// Utils\nimport { useAPICall, useLanguage, useLoading } from '../../hooks';\nimport { GAME_API } from '../../adapters';\nimport { AVATARS } from '../../utils/constants';\n// Components\nimport { Avatar } from '../avatars';\nimport { AdminOnly } from '../admin/index';\nimport { PhaseContainer } from './index';\nimport { translate, Translate } from './Translate';\n\nconst GameOverText = () => <Translate pt=\"Jogo concluído\" en=\"The game is over\" />;\n\nexport function GameOver({ info, state, children }) {\n  const language = useLanguage();\n  const [isLoading] = useLoading();\n\n  const onPlayAgain = useAPICall({\n    apiFunction: GAME_API.playAgain,\n    actionName: 'play-=again',\n    successMessage: translate('Jogando novamente o mesmo jogo!', 'Restarting the same game', language),\n    errorMessage: translate(\n      'Vixi, ocorreu um erro ao tentar ir reiniciar o jogo',\n      'Oops, the application found an error while trying to restart the game',\n      language\n    ),\n  });\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase=\"GAME_OVER\" className=\"game-over\">\n      <div className=\"game-over__title\">\n        <img src={gameOverTitle} alt=\"Game Over\" />\n      </div>\n\n      {Boolean(state.winners) && (\n        <div className=\"game-over__winner-container\">\n          <div className=\"game-over__text\">\n            <GameOverText />{' '}\n            {state.winners.length > 1 ? (\n              <Translate pt=\"e os vencedores são\" en=\"and the winners are\" />\n            ) : (\n              <Translate pt=\"o vencedor é\" en=\"and the winner is\" />\n            )}\n            :\n          </div>\n          <ul className=\"game-over__winners\">\n            {state.winners.map((winner) => {\n              return (\n                <li className=\"game-over__winner\" key={`winner-${winner.name}`}>\n                  <Avatar className=\"game-over__avatar\" id={winner.avatarId ?? 25} />\n                  <div className=\"game-over__winner-name\">\n                    <strong>{winner.name ?? '?'}</strong>, {AVATARS[winner.avatarId].description[language]}\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      )}\n\n      {Boolean(state.group) && (\n        <div className=\"game-over__winner\">\n          <div className=\"game-over__text\">\n            <GameOverText />\n          </div>\n          <Progress\n            type=\"circle\"\n            strokeColor={\n              state.group.victory\n                ? {\n                    '0%': '#4ba226',\n                    '100%': '#87d068',\n                  }\n                : {\n                    '0%': '#ff0000',\n                    '70%': '#ff0000',\n                    '100%': '#87d068',\n                  }\n            }\n            percent={state.group.score ?? 0}\n          />\n          <div className=\"game-over__text\">\n            {state.group.victory ? (\n              <Translate pt=\"Parabéns, vocês ganharam!\" en=\"Congratulations, you won!\" />\n            ) : (\n              <Translate pt=\"Não foi dessa vez, que vergonha heim!\" en=\"You lost! What a shame!\" />\n            )}\n          </div>\n        </div>\n      )}\n\n      {Boolean(state.team) && (\n        <div className=\"game-over__winner\">\n          <div className=\"game-over__text\">\n            <GameOverText />\n          </div>\n          <Progress\n            type=\"circle\"\n            strokeColor={{\n              '0%': '#ff0000',\n              '70%': '#ff0000',\n              '100%': '#87d068',\n            }}\n            percent={state.team.score ?? 0}\n          />\n          <div className=\"game-over__text\">\n            {state.team.victory ? (\n              <Translate pt=\"Parabéns, vocês ganharam!\" en=\"Congratulations, you won!\" />\n            ) : (\n              <Translate pt=\"Não foi dessa vez, que vergonha heim!\" en=\"You lost! What a shame!\" />\n            )}\n          </div>\n        </div>\n      )}\n\n      {!Boolean(state.winners) && !Boolean(state.team) && !Boolean(state.group) && (\n        <div className=\"game-over__text\">\n          <GameOverText />\n        </div>\n      )}\n\n      {children}\n\n      <AdminOnly>\n        <Popconfirm\n          title={translate(\n            'Tem certeza que que jogar este jogo novamente?',\n            'Are you sure you want to play this game again?',\n            language\n          )}\n          onConfirm={() => onPlayAgain({})}\n          okText={translate('Sim', 'Yes', language)}\n          cancelText={translate('Não', 'No', language)}\n        >\n          <Button icon={<RocketFilled />} danger type=\"primary\" disabled={isLoading}>\n            <Translate pt=\"Jogar novamente\" en=\"Play again\" />\n          </Button>\n        </Popconfirm>\n      </AdminOnly>\n    </PhaseContainer>\n  );\n}\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Typography } from 'antd';\nimport clsx from 'clsx';\n\nexport const Instruction = memo(function ({ children, white, className, contained }) {\n  const baseClass = 'instruction';\n\n  return (\n    <Typography.Text\n      className={clsx(\n        baseClass,\n        contained && `${baseClass}--contained`,\n        white && `${baseClass}--white`,\n        className\n      )}\n      data-testid=\"instruction\"\n    >\n      {children}\n    </Typography.Text>\n  );\n});\n\nInstruction.propTypes = {\n  children: PropTypes.any.isRequired,\n  white: PropTypes.bool,\n  className: PropTypes.string,\n};\n","import { Switch } from 'antd';\nimport React from 'react';\nimport { useGlobalState } from '../../hooks';\n\nexport function LanguageSwitch() {\n  const [language, setLanguage] = useGlobalState('language');\n  const onSwitchClick = (e) => setLanguage(e ? 'pt' : 'en');\n\n  return (\n    <Switch checkedChildren=\"pt\" unCheckedChildren=\"en\" defaultChecked={language} onClick={onSwitchClick} />\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Alert } from 'antd';\n// Hooks\nimport { useLanguage } from '../../hooks';\n// Components\nimport { translate } from '../shared';\n\nexport function PageError({ message, description }) {\n  const language = useLanguage();\n\n  return (\n    <div className=\"container container--center\">\n      <Alert\n        message={translate('Algo errado não está certo', 'Something wrong is not right', language, message)}\n        description={translate(\n          'Não era pra você estar vendo esta mensagem.',\n          'You were not supposed to see this message.',\n          language,\n          description\n        )}\n        type=\"error\"\n        showIcon\n      />\n    </div>\n  );\n}\n\nPageError.propTypes = {\n  message: PropTypes.string,\n  description: PropTypes.string,\n};\n","import React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useGlobalState, useLanguage } from '../../hooks';\n// Utils\nimport { isDevEnv } from '../../utils';\n// Components\nimport { LoadingPage } from '../loaders';\nimport { PageError } from '../errors/PageError';\nimport { translate } from './Translate';\n\n/**\n * Wrapping container around a game screen\n * @param {*} props\n * @returns\n */\nexport function PhaseContainer({ info, phase, allowedPhase, children, className, fullScreen, white }) {\n  const language = useLanguage();\n  const screenRef = useRef(null);\n  const [username] = useGlobalState('username');\n  const [, setScreenSize] = useGlobalState('screenSize');\n\n  useEffect(() => {\n    if (screenRef.current) {\n      let height = screenRef.current.offsetHeight;\n      let width = screenRef.current.offsetWidth;\n      setScreenSize([width, height]);\n    }\n  }, [screenRef, setScreenSize]);\n\n  if (!info?.gameName || allowedPhase !== phase) {\n    return <LoadingPage />;\n  }\n\n  if (!phase) {\n    return (\n      <PageError\n        description={translate('Estado do jogo não está correto', 'Game state is not correct', language)}\n      />\n    );\n  }\n\n  const baseClass = 'phase-container';\n\n  return (\n    <main\n      className={clsx(\n        baseClass,\n        fullScreen && `${baseClass}--full-screen`,\n        white && `${baseClass}--white`,\n        className\n      )}\n      id=\"screen\"\n      ref={screenRef}\n    >\n      <span className={`${baseClass}__title`}>\n        {info.title[language]}\n        {isDevEnv && Boolean(username) && `| ${username}`}\n      </span>\n      {children}\n    </main>\n  );\n}\n\nPhaseContainer.propTypes = {\n  allowedPhase: PropTypes.string,\n  children: PropTypes.any.isRequired,\n  className: PropTypes.string,\n  fullScreen: PropTypes.bool,\n  info: PropTypes.shape({\n    gameName: PropTypes.string,\n    title: PropTypes.shape({\n      pt: PropTypes.string,\n      en: PropTypes.string,\n    }),\n  }),\n  phase: PropTypes.string,\n  white: PropTypes.bool,\n};\n\nPhaseContainer.defaultProps = {\n  allowedPhase: '',\n  className: '',\n  fullScreen: false,\n  phase: '',\n  white: false,\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Typography } from 'antd';\nimport clsx from 'clsx';\n\nexport const Title = memo(function ({ children, white, icon, className, level }) {\n  return (\n    <Typography.Title level={level} className={clsx('title', white && 'title--white', className)}>\n      {Boolean(icon) && icon}\n      {children}\n    </Typography.Title>\n  );\n});\n\nTitle.propTypes = {\n  children: PropTypes.any.isRequired,\n  white: PropTypes.bool,\n  icon: PropTypes.element,\n  className: PropTypes.string,\n  level: PropTypes.number,\n};\n\nTitle.defaultProps = {\n  className: '',\n  level: 1,\n};\n","import React from 'react';\n\nexport function Painting(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#d19a6e\"\n        d=\"M255.517 48.881h-47.52V19.77c0-6.777 5.493-12.27 12.27-12.27h22.98c6.777 0 12.27 5.493 12.27 12.27z\"\n      ></path>\n      <path\n        fill=\"#bc845e\"\n        d=\"M234.907 7.5h-14.64c-6.777 0-12.27 5.493-12.27 12.27v29.111h14.64V19.77c0-6.777 5.494-12.27 12.27-12.27z\"\n      ></path>\n      <path\n        fill=\"#ffc269\"\n        d=\"M306.997 87.601h-150.48v-25.58c0-7.257 5.883-13.14 13.14-13.14h124.2c7.257 0 13.14 5.883 13.14 13.14z\"\n      ></path>\n      <path\n        fill=\"#ffa95f\"\n        d=\"M188.377 48.881h-18.72c-7.257 0-13.14 5.883-13.14 13.14v25.58h18.72v-25.58c0-7.257 5.883-13.14 13.14-13.14z\"\n      ></path>\n      <path\n        fill=\"#d19a6e\"\n        d=\"M175.536 492.233l25.619-71.973h-49.68l-24.066 67.611c-2.886 8.108 3.126 16.629 11.732 16.629h19.009a18.455 18.455 0 0017.386-12.267zM288.138 492.233l-25.619-71.973h49.68l24.066 67.611c2.886 8.108-3.126 16.629-11.732 16.629h-19.009a18.455 18.455 0 01-17.386-12.267z\"\n      ></path>\n      <path\n        fill=\"#bc845e\"\n        d=\"M166.538 446.66h25.22l9.397-26.4h-49.68l-24.066 67.611c-2.886 8.108 3.126 16.629 11.732 16.629h18.24c-8.606 0-14.618-8.521-11.732-16.629l12.583-35.352a8.817 8.817 0 018.306-5.859zM306.378 492.233l-13.836-38.871c-1.163-3.268 1.26-6.703 4.729-6.703h24.325l-9.397-26.4h-49.68l25.619 71.973a18.455 18.455 0 0017.387 12.267h18.24a18.453 18.453 0 01-17.387-12.266z\"\n      ></path>\n      <path\n        fill=\"#ffc269\"\n        d=\"M398.405 429.244H65.27c-6.742 0-12.208-5.466-12.208-12.208v-24.889c0-6.742 5.466-12.208 12.208-12.208h37.194l39.512-21.24 34.244 21.24h222.185c6.742 0 12.208 5.466 12.208 12.208v24.889c-.001 6.742-5.466 12.208-12.208 12.208z\"\n      ></path>\n      <path\n        fill=\"#ffa95f\"\n        d=\"M71.062 417.036v-24.889c0-6.742 5.466-12.208 12.208-12.208h-18c-6.742 0-12.208 5.466-12.208 12.208v24.889c0 6.742 5.466 12.208 12.208 12.208h18c-6.742 0-12.208-5.466-12.208-12.208z\"\n      ></path>\n      <path\n        fill=\"#f4f4f4\"\n        d=\"M376.742 379.94H86.932V112.753c0-13.891 11.261-25.152 25.152-25.152H351.59c13.891 0 25.152 11.261 25.152 25.152z\"\n      ></path>\n      <path\n        fill=\"#e5e5e5\"\n        d=\"M376.742 145.146a67.752 67.752 0 00-3.022-3.232c-12.437-12.437-28.972-19.421-46.558-19.667l-3.622-.047c-9.196 0-17.817 3.607-24.276 10.157-6.458 6.548-9.944 15.22-9.815 24.418l.044 3.142c.246 17.587 7.23 34.122 19.667 46.559a67.3 67.3 0 0029.421 17.196l34.692 34.691a236.08 236.08 0 003.469 3.383zM134.201 87.601h-22.116c-13.891 0-25.152 11.261-25.152 25.152V379.94h22.116V112.753c0-13.891 11.261-25.152 25.152-25.152z\"\n      ></path>\n      <path\n        fill=\"#69d6f4\"\n        d=\"M132.664 161.295v158.191c0 9.055 7.34 16.395 16.395 16.395s16.395-7.34 16.395-16.395V212.909c0-8.83 7.158-15.989 15.989-15.989 8.83 0 15.989 7.158 15.989 15.989v12.45c0 9.189 7.52 16.994 16.708 16.822 8.91-.167 16.082-7.442 16.082-16.392V212.91c0-8.83 7.158-15.989 15.989-15.989h36.024c8.83 0 15.989 7.158 15.989 15.989v74.467c0 9.189 7.52 16.994 16.708 16.822 8.91-.167 16.082-7.442 16.082-16.392V152.51c0-5.694-4.616-10.31-10.31-10.31H151.759c-10.546 0-19.095 8.549-19.095 19.095z\"\n      ></path>\n      <path\n        fill=\"#69d6f4\"\n        d=\"M230.22 286.12c0-8.881-7.199-16.08-16.08-16.08h-.63c-8.881 0-16.08 7.199-16.08 16.08 0 8.881 7.199 16.08 16.08 16.08h.63c8.881 0 16.08-7.199 16.08-16.08z\"\n      ></path>\n      <path\n        fill=\"#51c1ed\"\n        d=\"M320.701 142.2h-28.223a33.96 33.96 0 00-3.029 14.574l.044 3.142c.246 17.587 7.23 34.122 19.667 46.558a67.264 67.264 0 0021.852 14.578V152.51c-.002-5.694-4.617-10.31-10.311-10.31z\"\n      ></path>\n      <path\n        fill=\"#aab2bd\"\n        d=\"M371.204 228.009l16.211 16.211a210.226 210.226 0 0015.636 14.141l37.697 30.801a11.129 11.129 0 0014.911-.749 11.129 11.129 0 00.749-14.911l-30.801-37.697a210.226 210.226 0 00-14.141-15.636l-16.211-16.211z\"\n      ></path>\n      <path\n        fill=\"#969faa\"\n        d=\"M449.658 280.253l-37.697-30.801a210.226 210.226 0 01-15.636-14.141L380.114 219.1l-8.91 8.91 16.211 16.211a210.226 210.226 0 0015.636 14.141l37.697 30.801a11.129 11.129 0 0014.911-.749 11.078 11.078 0 003.063-5.847 11.103 11.103 0 01-9.064-2.314z\"\n      ></path>\n      <path\n        fill=\"#ffc269\"\n        d=\"M355.109 189.154h34.013v31.433h-34.013z\"\n        transform=\"rotate(-45 372.107 204.954)\"\n      ></path>\n      <path\n        fill=\"#fc8d94\"\n        d=\"M309.447 156.495l.044 3.142a47.168 47.168 0 0034.704 44.836l4.783 1.31 24.051-24.051-1.31-4.783a47.172 47.172 0 00-44.836-34.704l-3.142-.044c-7.94-.11-14.405 6.354-14.294 14.294z\"\n      ></path>\n      <path fill=\"#ffa95f\" d=\"M373.028 181.732l-24.051 24.051 22.227 22.226 8.91-8.91-22.227-22.226z\"></path>\n      <path\n        fill=\"#fa6f7c\"\n        d=\"M353.105 195.563a47.172 47.172 0 01-34.704-44.836l-.044-3.142a14.047 14.047 0 01.732-4.652c-5.658 1.886-9.73 7.252-9.642 13.562l.044 3.142a47.168 47.168 0 0034.704 44.836l4.783 1.31 24.051-24.051-15.141 15.141z\"\n      ></path>\n      <g>\n        <path d=\"M398.405 372.44h-14.163V268.92a7.5 7.5 0 00-15 0v103.52H159.071a7.5 7.5 0 000 15h239.334a4.713 4.713 0 014.708 4.708v24.889a4.713 4.713 0 01-4.708 4.708H65.27a4.713 4.713 0 01-4.708-4.708v-24.889a4.713 4.713 0 014.708-4.708h61.408a7.5 7.5 0 000-15H94.432V112.753c0-9.733 7.919-17.652 17.652-17.652H351.59c9.733 0 17.652 7.919 17.652 17.652v25.126a7.5 7.5 0 0015 0v-25.126c0-18.004-14.648-32.652-32.652-32.652h-37.092v-18.08c0-11.381-9.259-20.64-20.64-20.64h-30.84V19.77c0-10.901-8.869-19.77-19.77-19.77h-22.98c-10.901 0-19.77 8.869-19.77 19.77v21.611h-30.84c-11.381 0-20.64 9.259-20.64 20.64v18.08h-36.933c-18.004 0-32.652 14.648-32.652 32.652V372.44H65.27c-10.867 0-19.708 8.841-19.708 19.708v24.889c0 10.867 8.841 19.708 19.708 19.708h72.376l-17.303 48.613c-2.171 6.101-1.239 12.902 2.494 18.193s9.828 8.45 16.304 8.45h19.009c10.953 0 20.78-6.933 24.453-17.251l20.646-58.005h57.177l20.647 58.005c3.673 10.319 13.5 17.251 24.452 17.251h19.009a19.98 19.98 0 0016.304-8.45 19.978 19.978 0 002.494-18.194l-17.303-48.612h72.376c10.867 0 19.708-8.841 19.708-19.708v-24.889c0-10.867-8.841-19.708-19.708-19.708zM215.497 19.77c0-2.63 2.14-4.77 4.77-4.77h22.98c2.63 0 4.77 2.14 4.77 4.77v21.611h-32.52zm-51.48 42.251c0-3.11 2.53-5.64 5.64-5.64h124.2c3.11 0 5.64 2.53 5.64 5.64v18.08h-135.48zm4.453 427.697A10.977 10.977 0 01158.149 497H139.14c-2.317 0-3.602-1.467-4.047-2.098s-1.396-2.333-.619-4.516l19.094-53.643h33.758zm160.729.668c.777 2.183-.174 3.886-.619 4.517s-1.73 2.098-4.047 2.098h-19.009a10.976 10.976 0 01-10.321-7.282l-18.856-52.975h33.758z\"></path>\n        <path d=\"M214.14 262.54h-.629c-13.002 0-23.58 10.578-23.58 23.58s10.578 23.58 23.58 23.58h.629c13.002 0 23.58-10.578 23.58-23.58s-10.578-23.58-23.58-23.58zm0 32.16h-.629c-4.731 0-8.58-3.849-8.58-8.58s3.849-8.58 8.58-8.58h.629c4.731 0 8.58 3.849 8.58 8.58s-3.849 8.58-8.58 8.58z\"></path>\n        <path d=\"M282.232 189.42h-36.023c-12.952 0-23.489 10.537-23.489 23.489v12.879c0 4.813-3.913 8.803-8.722 8.893-2.268.05-4.48-.861-6.195-2.544-1.826-1.792-2.873-4.263-2.873-6.779v-12.45c0-12.952-10.537-23.489-23.488-23.489s-23.489 10.537-23.489 23.489v106.577c0 4.904-3.99 8.895-8.895 8.895-4.904 0-8.895-3.99-8.895-8.895v-158.19c0-6.394 5.201-11.595 11.595-11.595H282.19a7.5 7.5 0 000-15H151.759c-14.665 0-26.595 11.93-26.595 26.595v158.19c0 13.175 10.719 23.895 23.895 23.895 13.175 0 23.895-10.719 23.895-23.895V212.909c0-4.681 3.808-8.489 8.489-8.489s8.488 3.808 8.488 8.489v12.45c0 6.517 2.685 12.89 7.366 17.484 4.613 4.526 10.632 6.954 16.983 6.835 12.925-.242 23.441-10.959 23.441-23.89v-12.879c0-4.681 3.808-8.489 8.489-8.489h36.023c4.681 0 8.489 3.808 8.489 8.489v74.467c0 6.518 2.685 12.89 7.366 17.485 4.612 4.526 10.634 6.959 16.982 6.835 12.925-.242 23.441-10.959 23.441-23.891v-59.796a7.5 7.5 0 00-15 0v59.796c0 4.814-3.913 8.803-8.722 8.894-2.287.039-4.48-.861-6.195-2.544-1.826-1.792-2.873-4.263-2.873-6.779v-74.467c0-12.952-10.537-23.489-23.489-23.489z\"></path>\n        <path d=\"M462.216 268.757l-30.801-37.697a218.436 218.436 0 00-14.646-16.194l-37.032-37.032-.785-2.866a54.76 54.76 0 00-14.07-24.215c-10.123-10.123-23.58-15.807-37.894-16.007l-3.144-.044c-5.86-.066-11.414 2.164-15.573 6.325-4.16 4.16-6.406 9.69-6.323 15.573l.043 3.142c.2 14.314 5.885 27.772 16.007 37.894a54.764 54.764 0 0024.215 14.07l2.866.785 37.032 37.032a218.5 218.5 0 0016.194 14.646l37.697 30.802a18.589 18.589 0 0011.791 4.222 18.58 18.58 0 0013.17-5.476 18.574 18.574 0 001.253-24.96zM316.99 159.532l-.044-3.142a6.548 6.548 0 011.931-4.757c1.271-1.271 2.992-1.98 4.758-1.932l3.143.044c10.386.145 20.151 4.27 27.497 11.615a39.746 39.746 0 0110.21 17.571l.159.58-17.888 17.888-.58-.159a39.74 39.74 0 01-17.571-10.21c-7.346-7.345-11.471-17.111-11.615-27.498zm56.038 32.806l11.62 11.62-13.444 13.444-11.62-11.62zm77.328 90.773a3.619 3.619 0 01-4.862.244l-37.697-30.801a203.468 203.468 0 01-15.079-13.637l-10.908-10.908 13.444-13.444 10.908 10.908a203.67 203.67 0 0113.637 15.079l30.801 37.697a3.618 3.618 0 01-.244 4.862z\"></path>\n      </g>\n    </svg>\n  );\n}\n","import React from 'react';\n\nexport function Evaluate(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffd15b\"\n        d=\"M347.757 451.78a5 5 0 01-5-5V312.308a45.2 45.2 0 01-26.675 8.668H311v39.209c0 3.854-4.176 6.259-7.509 4.325l-44.981-26.101a5.002 5.002 0 00-5.019 0L208.51 364.51c-3.333 1.934-7.509-.471-7.509-4.325v-39.209h-5.082a45.2 45.2 0 01-26.675-8.668V446.78a5 5 0 01-5 5H123v33.744a5 5 0 005 5h256a5 5 0 005-5V451.78z\"\n      ></path>\n      <path fill=\"#fdb441\" d=\"M163 485.524V451.78h-40v33.744a5 5 0 005 5h40a5 5 0 01-5-5z\"></path>\n      <path\n        fill=\"#fff\"\n        d=\"M258.509 338.408a5.002 5.002 0 00-5.019 0l-19.573 11.357 17.388 47.411c1.603 4.371 7.785 4.371 9.388 0l17.388-47.411z\"\n      ></path>\n      <path\n        fill=\"#fe7701\"\n        d=\"M284.625 33.636c-9.799-7.614-22.101-12.16-35.471-12.16h-21.779c-42.457 0-76.875 34.418-76.875 76.875v161.385h13.743a5 5 0 015 5v47.572a45.2 45.2 0 0026.675 8.668H201v-33.342c0-1.662.826-3.215 2.203-4.145l21.911-14.786a70.13 70.13 0 0024.783 4.505h12.206a70.157 70.157 0 0024.783-4.505l21.911 14.786a5.002 5.002 0 012.203 4.145v33.342h5.082a45.2 45.2 0 0026.675-8.668v-47.572a5 5 0 015-5H361.5V110.511c0-42.457-34.418-76.875-76.875-76.875z\"\n      ></path>\n      <path\n        fill=\"#f46700\"\n        d=\"M159.825 156.976h19.757c0 .048-.007.095-.007.143 0-11.191 8.518-20.39 19.425-21.473V98.351c0-37.572 26.96-68.828 62.586-75.528a57.922 57.922 0 00-12.432-1.347h-21.779c-42.457 0-76.875 34.418-76.875 76.875v60.182a28.666 28.666 0 019.325-1.557zM201 288.917a45.404 45.404 0 01-2-13.358v-24.176c-7.365-7.727-13.002-17.114-16.255-27.56h-22.92c-3.266 0-6.4-.553-9.325-1.557v37.471h13.743a5 5 0 015 5v47.572a45.2 45.2 0 0026.675 8.668H201z\"\n      ></path>\n      <path\n        fill=\"#eaf6ff\"\n        d=\"M308.797 283.489l-21.911-14.786a70.13 70.13 0 01-24.783 4.505h-12.206a70.157 70.157 0 01-24.783-4.505l-21.911 14.786a5 5 0 00-2.203 4.145v72.551c0 3.854 4.176 6.259 7.509 4.325l44.981-26.101c1.552-.9 3.467-.9 5.019 0l44.981 26.101c3.333 1.934 7.509-.471 7.509-4.325v-72.551a4.999 4.999 0 00-2.202-4.145z\"\n      ></path>\n      <path\n        fill=\"#d8ecfe\"\n        d=\"M225.114 268.703l-21.911 14.786a5 5 0 00-2.203 4.145v72.551c0 3.854 4.176 6.259 7.509 4.325L226 354.36v-66.727c0-1.662.826-3.215 2.203-4.145l15.644-10.557a69.91 69.91 0 01-18.733-4.228z\"\n      ></path>\n      <path\n        fill=\"#fed2a4\"\n        d=\"M262.103 273.208h-12.206a70.193 70.193 0 01-22.87-3.824v36.592L256 336.952l28.973-30.976v-36.592a70.193 70.193 0 01-22.87 3.824z\"\n      ></path>\n      <path\n        fill=\"#ffbd86\"\n        d=\"M252.054 273.208h-2.157a70.193 70.193 0 01-22.87-3.824v36.592L256 336.952l16.296-17.422-20.242-21.641z\"\n      ></path>\n      <path\n        fill=\"#ffe5c2\"\n        d=\"M179.575 202.886v-45.768c0-.048.007-.095.007-.143h-19.757c-15.856 0-28.71 12.854-28.71 28.71v9.425c0 15.856 12.854 28.71 28.71 28.71h22.92a70.261 70.261 0 01-3.17-20.934zm172.6-45.91h-19.75v45.911c0 7.291-1.11 14.322-3.17 20.935h22.92c15.856 0 28.71-12.854 28.71-28.71v-9.425c0-15.857-12.854-28.711-28.71-28.711z\"\n      ></path>\n      <path\n        fill=\"#ffe5c2\"\n        d=\"M295.681 112.592c7.497-5.43 17.747-5.644 25.168-.11 7.026 5.24 11.576 13.616 11.576 23.054v67.35c0 38.837-31.484 70.321-70.321 70.321h-12.206c-38.837 0-70.321-31.484-70.321-70.321v-45.768c0-11.92 9.663-21.582 21.582-21.582h55.848c4.547 0 8.977-1.436 12.659-4.103z\"\n      ></path>\n      <path\n        fill=\"#fed2a4\"\n        d=\"M213.151 202.886v-45.768c0-11.92 9.663-21.582 21.582-21.582h-33.575c-11.92 0-21.582 9.663-21.582 21.582v45.768c0 38.837 31.484 70.322 70.321 70.322h12.206a70.9 70.9 0 0010.685-.807c-33.767-5.148-59.637-34.31-59.637-69.515z\"\n      ></path>\n      <path\n        fill=\"#fff\"\n        d=\"M229.269 216.388c-2.863 0-5.061 2.595-4.535 5.41 2.537 13.558 14.435 23.819 28.729 23.819h5.073c14.294 0 26.192-10.261 28.729-23.819.527-2.814-1.672-5.41-4.535-5.41z\"\n      ></path>\n      <path\n        fill=\"#d8ecfe\"\n        d=\"M164.243 259.736h-139a5 5 0 00-5 5v142.633h21.746c6.349 0 11.496 5.147 11.496 11.496v32.915h110.757a5 5 0 005-5V264.736a4.998 4.998 0 00-4.999-5z\"\n      ></path>\n      <path\n        fill=\"#c4e2ff\"\n        d=\"M61 446.78V264.736a5 5 0 015-5H25.243a5 5 0 00-5 5v142.633h21.746c6.349 0 11.496 5.147 11.496 11.496v32.915H66a5 5 0 01-5-5z\"\n      ></path>\n      <path\n        fill=\"#ffe5c2\"\n        d=\"M41.989 466H18.996C12.647 466 7.5 460.853 7.5 454.504v-35.638c0-6.349 5.147-11.496 11.496-11.496h22.993c6.349 0 11.496 5.147 11.496 11.496v35.638c0 6.349-5.147 11.496-11.496 11.496z\"\n      ></path>\n      <path\n        fill=\"#fed2a4\"\n        d=\"M31 454.504v-35.638c0-6.264 5.012-11.347 11.243-11.483-.085-.002-.168-.013-.254-.013H18.996c-6.349 0-11.496 5.147-11.496 11.496v35.638C7.5 460.853 12.647 466 18.996 466h22.993c.086 0 .169-.011.254-.013-6.231-.136-11.243-5.22-11.243-11.483z\"\n      ></path>\n      <path\n        fill=\"#0593fc\"\n        d=\"M458.515 418.865c0-6.349 5.147-11.496 11.496-11.496h21.746V264.736a5 5 0 00-5-5h-139a5 5 0 00-5 5V446.78a5 5 0 005 5h110.757v-32.915z\"\n      ></path>\n      <path\n        fill=\"#0182fc\"\n        d=\"M387 446.78V264.736a5 5 0 015-5h-44.243a5 5 0 00-5 5V446.78a5 5 0 005 5H392a5 5 0 01-5-5z\"\n      ></path>\n      <path\n        fill=\"#fb2b3a\"\n        d=\"M443.43 327.481a22.016 22.016 0 01-5.773 10.118c-5.428 5.428-12.972 7.446-19.976 6.06a22.15 22.15 0 01-.409-3.726.133.133 0 00-.014.019c-5.912-8.361-14.482-13.458-23.443-12.84-14.999 1.035-25.405 17.686-23.241 37.191s16.076 34.477 31.076 33.442h31.217c14.999 1.035 28.912-13.938 31.076-33.442 2.028-18.298-7.004-34.083-20.513-36.822z\"\n      ></path>\n      <path\n        fill=\"#e41f2d\"\n        d=\"M404.348 364.302c-1.324-11.934 2.064-22.793 8.324-29.667-5.382-5.118-12.003-7.997-18.857-7.524-14.999 1.035-25.405 17.686-23.241 37.191s16.076 34.477 31.076 33.442h30.879c-13.856-.924-26.158-15.199-28.181-33.442z\"\n      ></path>\n      <ellipse\n        cx=\"430.699\"\n        cy=\"330.641\"\n        fill=\"#97d729\"\n        rx=\"18.41\"\n        ry=\"9.841\"\n        transform=\"rotate(-45 430.671 330.745)\"\n      ></ellipse>\n      <path\n        fill=\"#ffe5c2\"\n        d=\"M493.004 466h-22.993c-6.349 0-11.496-5.147-11.496-11.496v-35.638c0-6.349 5.147-11.496 11.496-11.496h22.993c6.349 0 11.496 5.147 11.496 11.496v35.638c0 6.349-5.147 11.496-11.496 11.496z\"\n      ></path>\n      <path\n        fill=\"#fed2a4\"\n        d=\"M482.015 454.504v-35.638c0-6.264 5.012-11.347 11.243-11.483-.085-.002-.168-.013-.254-.013h-22.993c-6.349 0-11.496 5.147-11.496 11.496v35.638c0 6.349 5.147 11.496 11.496 11.496h22.993c.086 0 .169-.011.254-.013-6.231-.136-11.243-5.22-11.243-11.483z\"\n      ></path>\n      <g>\n        <path d=\"M282.731 208.889h-53.462a12.09 12.09 0 00-9.329 4.382 12.009 12.009 0 00-2.578 9.907c3.247 17.348 18.429 29.939 36.101 29.939h5.073c17.672 0 32.854-12.592 36.101-29.939a12.008 12.008 0 00-2.578-9.907 12.083 12.083 0 00-9.328-4.382zm-24.194 29.228h-5.073c-9.235 0-17.32-5.806-20.405-14.229h45.883c-3.085 8.423-11.171 14.229-20.405 14.229zm-31.845-64.496v-18.924c0-4.143-3.358-7.5-7.5-7.5s-7.5 3.357-7.5 7.5v18.924c0 4.143 3.358 7.5 7.5 7.5s7.5-3.357 7.5-7.5zm66.116-26.424a7.5 7.5 0 00-7.5 7.5v18.924c0 4.143 3.358 7.5 7.5 7.5s7.5-3.357 7.5-7.5v-18.924a7.5 7.5 0 00-7.5-7.5zm-42.413 48.22a7.479 7.479 0 005.608 2.518 7.468 7.468 0 004.98-1.895 7.5 7.5 0 00.623-10.588l-6.313-7.104 6.564-8.205a7.501 7.501 0 00-11.713-9.371l-10.517 13.146a7.5 7.5 0 00.251 9.668zM94.743 309.014a7.5 7.5 0 00-6.866 4.482l-34.5 78.488a7.5 7.5 0 1013.732 6.035l8.14-18.518h38.989l8.14 18.518a7.5 7.5 0 1013.732-6.036l-34.5-78.488a7.502 7.502 0 00-6.867-4.481zm12.901 55.488H81.842l12.901-29.35zm343.982-42.095a29.787 29.787 0 00-.552-6.241 7.5 7.5 0 00-5.901-5.9 29.635 29.635 0 00-20.423 3.314 7.496 7.496 0 00-7.493-7.359 7.5 7.5 0 00-7.5 7.5v9.61c-5.187-2.775-10.828-4.093-16.459-3.7-7.996.552-15.432 4.485-20.936 11.077-7.327 8.775-10.696 21.321-9.243 34.423 2.508 22.614 18.928 40.166 37.104 40.164.552 0 1.108-.016 1.664-.049h30.74c.557.033 1.11.049 1.664.049 18.174 0 34.596-17.551 37.104-40.164 1.454-13.102-1.916-25.647-9.243-34.422-3.006-3.602-6.59-6.407-10.526-8.302zm-22.582 6.579a14.605 14.605 0 017.271-3.961c-.583 2.715-1.937 5.246-3.961 7.271s-4.555 3.378-7.271 3.961a14.625 14.625 0 013.961-7.271zm27.443 34.49c-1.645 14.825-11.667 26.821-22.163 26.819-.313 0-.628-.011-.942-.032a7.419 7.419 0 00-.517-.018h-31.216a7.39 7.39 0 00-.516.018c-10.854.739-21.412-11.52-23.105-26.787-.99-8.927 1.196-17.583 5.848-23.153 2.023-2.424 5.48-5.385 10.456-5.728.305-.021.61-.032.917-.032 5.173 0 10.519 2.989 14.716 8.185.091.79.203 1.58.359 2.368a7.5 7.5 0 005.901 5.901c1.929.382 3.868.568 5.792.568a29.586 29.586 0 0020.944-8.682 29.666 29.666 0 004.417-5.643 18.046 18.046 0 013.262 3.062c4.651 5.572 6.838 14.227 5.847 23.154z\"></path>\n        <path d=\"M499.257 400.948V321c0-4.143-3.358-7.5-7.5-7.5s-7.5 3.357-7.5 7.5v78.869h-14.246c-10.475 0-18.997 8.521-18.997 18.996v25.415H350.257V267.235h134V286c0 4.143 3.358 7.5 7.5 7.5s7.5-3.357 7.5-7.5v-21.265c0-6.893-5.607-12.5-12.5-12.5H369V227.16c11.514-6.069 19.385-18.154 19.385-32.049v-9.425c0-13.895-7.871-25.98-19.385-32.05V110.51c0-45.676-36.48-82.99-81.835-84.337-11.135-7.989-24.223-12.198-38.011-12.198h-21.779C180.851 13.976 143 51.826 143 98.351v55.286c-11.514 6.069-19.385 18.155-19.385 32.05v9.425c0 13.895 7.871 25.979 19.385 32.049v25.075h-12c-4.142 0-7.5 3.357-7.5 7.5s3.358 7.5 7.5 7.5h30.743V444.28H60.985v-25.415c0-10.475-8.522-18.996-18.997-18.996H27.743V267.235H96c4.142 0 7.5-3.357 7.5-7.5s-3.358-7.5-7.5-7.5H25.243c-6.893 0-12.5 5.607-12.5 12.5v136.213C5.336 403.542 0 410.584 0 418.865v35.639C0 464.979 8.521 473.5 18.996 473.5h22.993c8.822 0 16.238-6.054 18.364-14.22H115.5v26.244c0 6.893 5.607 12.5 12.5 12.5h173c4.142 0 7.5-3.357 7.5-7.5s-3.358-7.5-7.5-7.5H130.5V459.28h33.743c6.893 0 12.5-5.607 12.5-12.5V324.867a52.467 52.467 0 0016.757 3.547v31.771c0 4.457 2.399 8.607 6.262 10.832a12.537 12.537 0 0012.512-.02l17.68-10.26 14.311 39.02c1.826 4.979 6.432 8.197 11.736 8.197s9.91-3.218 11.736-8.197l14.311-39.021 17.68 10.26a12.495 12.495 0 006.272 1.683c2.157 0 4.313-.555 6.239-1.663a12.535 12.535 0 006.262-10.832v-31.771a52.461 52.461 0 0016.757-3.547V446.78c0 6.893 5.607 12.5 12.5 12.5H381.5v23.744H336c-4.142 0-7.5 3.357-7.5 7.5s3.358 7.5 7.5 7.5h48c6.893 0 12.5-5.607 12.5-12.5V459.28h55.147c2.127 8.166 9.542 14.22 18.364 14.22h22.993c10.475 0 18.996-8.521 18.996-18.996v-35.639c0-8.281-5.336-15.323-12.743-17.917zM45.985 454.504a4.001 4.001 0 01-3.997 3.996H18.996A4 4 0 0115 454.504v-35.639a4 4 0 013.996-3.996h22.993a4.001 4.001 0 013.997 3.996v35.639zm327.4-259.393c0 11.695-9.515 21.21-21.21 21.21h-13.417a77.985 77.985 0 001.167-13.435v-38.411h12.25c11.695 0 21.21 9.516 21.21 21.211zM158 98.351c0-38.254 31.122-69.375 69.375-69.375h21.779c11.285 0 21.959 3.659 30.87 10.582a7.497 7.497 0 004.602 1.578c38.253 0 69.375 31.121 69.375 69.375v39.011a36.831 36.831 0 00-1.825-.046h-12.25v-13.939c0-11.387-5.455-22.252-14.593-29.066-10.014-7.467-23.698-7.449-34.05.048l-26.016 18.842a14 14 0 01-8.261 2.677h-55.848c-13.391 0-24.691 9.101-28.056 21.439h-13.276c-.612 0-1.22.016-1.825.046V98.351zm104.103 167.357h-12.206c-34.64 0-62.822-28.182-62.822-62.821v-45.768c0-7.766 6.317-14.083 14.083-14.083h55.848a28.912 28.912 0 0017.059-5.528l26.016-18.842c4.934-3.572 11.63-3.643 16.285-.171 5.439 4.057 8.56 10.268 8.56 17.041v67.351c-.001 34.639-28.183 62.821-62.823 62.821zm15.37 13.469v23.838L256 325.973l-21.473-22.958v-23.838a77.862 77.862 0 0015.37 1.531h12.206c5.261 0 10.399-.531 15.37-1.531zm-138.858-93.49c0-11.695 9.515-21.211 21.21-21.211h12.25v38.411c0 4.581.404 9.069 1.167 13.435h-13.417c-11.695 0-21.21-9.515-21.21-21.21zm60.392 91.585a12.483 12.483 0 00-5.507 10.361v25.756a37.622 37.622 0 01-16.757-5.142v-43.513c0-6.893-5.607-12.5-12.5-12.5H158v-20.96c.605.03 1.213.046 1.825.046h17.641c6.358 16.13 17.951 29.645 32.681 38.434zm9.493 78.572v-66.881l11.027-7.442v24.454c0 1.902.723 3.733 2.022 5.123l22.537 24.095zm47.5 32.349l-12.873-35.1 12.873-7.47 12.873 7.47zm47.5-32.349l-35.586-20.65 22.537-24.095a7.503 7.503 0 002.022-5.123v-24.454l11.027 7.442zm31.757-91.109v43.513a37.635 37.635 0 01-16.757 5.142v-25.756c0-4.16-2.059-8.033-5.508-10.361l-11.139-7.517c14.73-8.789 26.322-22.304 32.681-38.434h17.641c.612 0 1.22-.016 1.825-.046v20.96h-6.243c-6.892-.001-12.5 5.607-12.5 12.499zM497 454.504a4 4 0 01-3.996 3.996h-22.993a4.001 4.001 0 01-3.997-3.996v-35.639a4.001 4.001 0 013.997-3.996h22.993a4 4 0 013.996 3.996z\"></path>\n      </g>\n    </svg>\n  );\n}\n","import React from 'react';\n\nexport function Multitask(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#c8effe\"\n        d=\"M133.945 154.535c0 13.094-3.981 25.259-10.798 35.35-11.362 16.818-30.603-4.94-52.427-4.94-21.181 0-39.93 22.4-51.403 6.41-7.441-10.369-11.822-23.083-11.822-36.82 0-34.918 28.307-63.225 63.225-63.225s63.225 28.307 63.225 63.225z\"\n      ></path>\n      <path\n        fill=\"#99e6fc\"\n        d=\"M38.158 154.535c0 13.412 4.181 25.855 11.311 36.085-12.23 5.333-22.724 11.099-30.157.737a63.005 63.005 0 01-11.816-36.823c0-34.914 28.309-63.223 63.223-63.223A62.82 62.82 0 0186.05 93.19c-27.512 6.849-47.892 31.724-47.892 61.345z\"\n      ></path>\n      <path\n        fill=\"#bc7c63\"\n        d=\"M85.04 321.094l-6.541 25.34-27.11-2.98-11.544-17.371c-6.171-9.292-3.646-21.835 5.646-28.006s21.835-3.646 28.006 5.646zM474.284 326.083l-11.544 17.371H438l-8.911-22.36 11.544-17.371c6.171-9.292 18.714-11.816 28.006-5.646 9.291 6.171 11.816 18.715 5.645 28.006z\"\n      ></path>\n      <path\n        fill=\"#bbec6c\"\n        d=\"M462.733 343.454l-43.125 64.889a20.244 20.244 0 01-12.089 8.463l-85.856 20.704c.263 2.373.414 4.777.414 7.221v58.739H192.048v-58.739c0-2.444.141-4.848.404-7.221l-85.856-20.704a20.282 20.282 0 01-12.089-8.463l-43.115-64.889 33.641-22.36 38.742 58.294 85.997 20.744c11.847-12.564 28.642-20.421 47.286-20.421a64.734 64.734 0 0126.198 5.494 65.296 65.296 0 0121.098 14.927l85.997-20.744 38.731-58.294z\"\n      ></path>\n      <path\n        fill=\"#a2e62e\"\n        d=\"M257.068 399.082c-39.751 14.553-37.075 74.867-33.197 104.388h-31.823v-58.739c0-2.444.141-4.848.404-7.221l-85.856-20.704a20.282 20.282 0 01-12.089-8.463l-43.115-64.889 33.641-22.36 38.742 58.294 85.997 20.744c11.847-12.564 28.642-20.421 47.286-20.421 1.182 0 2.353.03 3.515.091 6.15 8.938 5.999 15.806-3.505 19.28z\"\n      ></path>\n      <path\n        fill=\"#7a6d79\"\n        d=\"M281.809 194.283h-49.484c-41.829 0-73.937 37.085-67.95 78.484l10.653 73.668h164.079l10.653-73.668c5.986-41.398-26.122-78.484-67.951-78.484z\"\n      ></path>\n      <path\n        fill=\"#685e68\"\n        d=\"M229.477 272.767l10.656 73.663h-65.111l-10.647-73.663c-5.989-41.399 26.113-78.482 67.944-78.482h49.483c2.644 0 5.251.153 7.814.441-37.929 4.27-65.751 39.258-60.139 78.041z\"\n      ></path>\n      <path\n        fill=\"#aa6a51\"\n        d=\"M335.267 357.621h-156.4c-12.559 0-22.74-10.181-22.74-22.74s10.181-22.74 22.74-22.74h156.4c12.559 0 22.74 10.181 22.74 22.74s-10.181 22.74-22.74 22.74z\"\n      ></path>\n      <path\n        fill=\"#bc7c63\"\n        d=\"M322.903 286.385v66.08c0 36.3-29.034 66.39-65.334 66.661-36.589.273-66.338-29.308-66.338-65.834v-66.907h7.389c14.303 0 25.898-11.595 25.898-25.898 16.438 21.322 48.603 21.322 65.041 0 0 14.303 11.595 25.898 25.898 25.898h7.389\"\n      ></path>\n      <path\n        fill=\"#aa6a51\"\n        d=\"M277.95 415.696a64.755 64.755 0 01-20.385 3.435c-36.589.27-66.334-29.305-66.334-65.84v-66.907h7.382c14.306 0 25.906-11.591 25.906-25.897a41.19 41.19 0 008.632 8.354v109.19c.001 29.009 18.758 28.889 44.799 37.665z\"\n      ></path>\n      <path\n        fill=\"#f9f7f8\"\n        d=\"M504.496 94.345v103.361c0 11.641-9.44 21.078-21.081 21.078h-83c-.556 0-1.11-.021-1.657-.064-10.866-.846-19.421-9.929-19.421-21.014V142.55a26.348 26.348 0 017.718-18.63l42.935-42.935a26.348 26.348 0 0118.63-7.718h34.795c11.641 0 21.081 9.436 21.081 21.078z\"\n      ></path>\n      <path\n        fill=\"#dedbee\"\n        d=\"M379.335 142.555v4.498c0-8.512 6.903-15.415 15.415-15.415h21.877c11.64 0 21.077-9.437 21.077-21.077V88.683c0-8.512 6.903-15.415 15.415-15.415h-4.498a26.366 26.366 0 00-18.634 7.717l-42.935 42.935a26.374 26.374 0 00-7.717 18.635z\"\n      ></path>\n      <path\n        fill=\"#fe646f\"\n        d=\"M122.127 191.35c-11.473 15.998-30.218 26.41-51.406 26.41-21.179 0-39.933-10.413-51.396-26.41 11.463-16.008 30.207-26.42 51.396-26.42 21.188 0 39.933 10.413 51.406 26.42z\"\n      ></path>\n      <path\n        fill=\"#fd4755\"\n        d=\"M86.061 215.882a63.01 63.01 0 01-15.341 1.878c-21.179 0-39.933-10.413-51.396-26.41a63.172 63.172 0 0121.421-18.866 62.815 62.815 0 009.241 18.876s.01 0 .01.01c8.605 11.999 21.31 20.846 36.065 24.512z\"\n      ></path>\n      <g>\n        <circle cx=\"257.067\" cy=\"78.27\" r=\"69.745\" fill=\"#c8effe\"></circle>\n        <path\n          fill=\"#99e6fc\"\n          d=\"M276.742 145.2a69.497 69.497 0 01-19.674 2.818c-38.519 0-69.747-31.228-69.747-69.747s31.228-69.747 69.747-69.747c6.837 0 13.432.98 19.674 2.818-28.935 8.494-50.063 35.247-50.063 66.929s21.128 58.435 50.063 66.929z\"\n        ></path>\n      </g>\n      <path fill=\"#bbec6c\" d=\"M51.395 343.454h-.01\"></path>\n      <g>\n        <path d=\"M472.791 291.83c-12.727-8.452-29.955-4.978-38.402 7.742l-48.657 73.215-64.563 15.576a74.137 74.137 0 008.138-23.247h5.961c8.084 0 15.681-3.144 21.39-8.853 5.708-5.709 8.852-13.301 8.852-21.376 0-10.495-5.376-19.755-13.517-25.18l5.188-35.868a76.101 76.101 0 00-17.794-60.741 76.106 76.106 0 00-57.573-26.308h-49.48a76.124 76.124 0 00-57.593 26.316 76.078 76.078 0 00-17.783 60.733l5.178 35.84a30.463 30.463 0 00-4.658 3.82c-5.709 5.709-8.853 13.305-8.853 21.39 0 16.668 13.566 30.229 30.242 30.229h5.824a72.432 72.432 0 007.888 23.153l-64.173-15.482-48.656-73.213c-8.449-12.721-25.676-16.196-38.403-7.744-6.163 4.093-10.362 10.343-11.824 17.599-1.462 7.253-.013 14.642 4.081 20.806l54.668 82.259A27.671 27.671 0 00104.85 424.1l79.714 19.223c-.01.471-.015.942-.015 1.411v58.738a7.5 7.5 0 007.5 7.5H322.09a7.5 7.5 0 007.5-7.5v-58.738c0-.47-.005-.94-.015-1.411l22.965-5.538a7.5 7.5 0 10-3.516-14.582l-29.106 7.019a7.5 7.5 0 00-5.696 8.116c.248 2.24.369 4.333.369 6.396v51.238H199.547v-51.238c0-2.059.121-4.152.369-6.397a7.5 7.5 0 00-5.696-8.115l-85.844-20.701a12.71 12.71 0 01-7.612-5.326L61.79 345.549l21.158-14.059 34.591 52.049a7.502 7.502 0 004.488 3.14l85.441 20.613c13.577 12.495 31.054 19.336 49.594 19.336l.564-.002c18.655-.139 35.688-7.41 48.581-19.222l85.904-20.724a7.5 7.5 0 004.488-3.14l34.59-52.048 21.158 14.059-38.974 58.644a12.698 12.698 0 01-7.6 5.322l-27.299 6.585a7.5 7.5 0 003.518 14.581l27.31-6.588a27.666 27.666 0 0016.565-11.6l54.669-82.262c4.093-6.162 5.542-13.551 4.08-20.804-1.463-7.256-5.662-13.506-11.825-17.599zM53.488 333.056l-7.391-11.122a12.624 12.624 0 01-1.871-9.542 12.609 12.609 0 015.418-8.066c5.836-3.876 13.736-2.284 17.61 3.549l7.392 11.123zm292.563 12.6a15.146 15.146 0 01-10.783 4.459h-4.865v-30.471h4.865c8.405 0 15.242 6.838 15.242 15.242a15.13 15.13 0 01-4.459 10.77zm-182.427-10.769c0-4.078 1.583-7.907 4.459-10.783a15.147 15.147 0 0110.783-4.459h4.865v30.471h-4.865c-8.405 0-15.242-6.832-15.242-15.229zm20.107-48.502v18.259h-4.865c-.769 0-1.531.037-2.289.094l-4.775-33.048a61.092 61.092 0 0114.279-48.768 61.132 61.132 0 0146.251-21.133h49.48c17.758 0 34.609 7.7 46.233 21.126a61.107 61.107 0 0114.289 48.776l-4.78 33.048a30.371 30.371 0 00-2.288-.095h-4.865v-18.259a7.5 7.5 0 00-7.5-7.5H315.455c-10.145 0-18.398-8.253-18.398-18.398a7.5 7.5 0 00-13.44-4.579c-6.404 8.307-16.092 13.071-26.581 13.071-10.488 0-20.177-4.764-26.581-13.071a7.499 7.499 0 00-13.44 4.579c0 10.145-8.253 18.398-18.398 18.398h-7.389a7.5 7.5 0 00-7.497 7.5zm73.782 125.241c-15.681.095-30.423-5.896-41.54-16.93-11.119-11.036-17.242-25.74-17.242-41.404v-59.407c13.204-.043 24.628-7.789 30.006-18.969 8.134 5.855 17.948 9.063 28.301 9.063 10.352 0 20.167-3.208 28.301-9.063 5.386 11.197 16.835 18.948 30.063 18.969v58.58c.001 32.384-25.968 58.923-57.889 59.161zm210.528-89.694l-7.393 11.124-21.158-14.059 7.394-11.125c3.874-5.832 11.772-7.424 17.609-3.548a12.604 12.604 0 015.418 8.067c.67 3.328.006 6.717-1.87 9.541z\"></path>\n        <path d=\"M271.037 351.403c-3.731 3.731-8.693 5.786-13.97 5.786s-10.238-2.055-13.97-5.786a7.5 7.5 0 00-10.606 10.607c6.564 6.565 15.292 10.18 24.576 10.18s18.012-3.615 24.576-10.18a7.5 7.5 0 00-10.606-10.607zM239.888 331.93a7.5 7.5 0 007.5-7.5v-13.3a7.5 7.5 0 00-15 0v13.3a7.5 7.5 0 007.5 7.5zM274.246 331.93a7.5 7.5 0 007.5-7.5v-13.3a7.5 7.5 0 00-15 0v13.3a7.5 7.5 0 007.5 7.5zM483.415 65.767H448.62c-9.041 0-17.541 3.521-23.933 9.915l-42.935 42.935c-6.394 6.393-9.915 14.893-9.915 23.934v55.156c0 14.826 11.569 27.341 26.324 28.49.733.058 1.492.088 2.253.088h83c15.76 0 28.581-12.82 28.581-28.578V94.345c.001-15.758-12.821-28.578-28.58-28.578zm-53.209 25.608v19.185c0 7.487-6.091 13.577-13.578 13.577h-19.185zm66.79 106.331c0 7.487-6.092 13.578-13.581 13.578h-83c-.356 0-.71-.013-1.075-.042-7.011-.546-12.503-6.492-12.503-13.536v-50.672c.011-4.356 3.556-7.896 7.914-7.896h21.877c15.758 0 28.578-12.82 28.578-28.577V88.683c0-4.365 3.551-7.915 7.915-7.915v-.001h30.294c7.489 0 13.581 6.091 13.581 13.578z\"></path>\n        <path d=\"M476.135 151.971h-68.438a7.5 7.5 0 000 15h68.438a7.5 7.5 0 000-15zM476.135 177.065h-68.438a7.5 7.5 0 000 15h68.438a7.5 7.5 0 000-15zM141.445 154.534c0-38.997-31.726-70.723-70.723-70.723-10.746 0-21.067 2.351-30.678 6.986a7.5 7.5 0 006.517 13.511c7.562-3.647 15.691-5.497 24.162-5.497 30.726 0 55.723 24.997 55.723 55.723a55.385 55.385 0 01-5.412 23.935 71.035 71.035 0 00-36.942-19.756l21.013-30.542a7.5 7.5 0 00-12.358-8.502l-26.055 37.87a70.707 70.707 0 00-26.574 6.873 32.187 32.187 0 01-1.566-9.879c0-17.739 14.432-32.171 32.171-32.171 2.128 0 4.248.209 6.3.621a7.5 7.5 0 002.954-14.707 47.088 47.088 0 00-9.253-.914c-26.01 0-47.171 21.161-47.171 47.171a47.108 47.108 0 003.566 17.961 70.651 70.651 0 00-6.708 5.97A55.362 55.362 0 0115 154.534c0-12.092 3.803-23.59 10.998-33.252a7.501 7.501 0 00-12.031-8.96C4.83 124.593 0 139.189 0 154.534c0 38.997 31.726 70.723 70.723 70.723s70.722-31.727 70.722-70.723zM28.93 191.331c10.514-11.92 25.748-18.91 41.787-18.91 16.037 0 31.275 6.991 41.796 18.912-10.219 11.59-25.16 18.922-41.79 18.922-16.632.001-31.574-7.332-41.793-18.924zM257.067 155.515c42.593 0 77.245-34.652 77.245-77.245S299.66 1.025 257.067 1.025s-77.245 34.652-77.245 77.245 34.652 77.245 77.245 77.245zm0-139.49c34.322 0 62.245 27.923 62.245 62.245s-27.923 62.245-62.245 62.245-62.245-27.923-62.245-62.245 27.923-62.245 62.245-62.245z\"></path>\n        <path d=\"M257.067 85.77h18.862a7.5 7.5 0 000-15h-11.362V49.25a7.5 7.5 0 00-15 0v29.02a7.5 7.5 0 007.5 7.5zM257.067 35.414a7.5 7.5 0 007.5-7.5v-.446a7.5 7.5 0 00-15 0v.446a7.5 7.5 0 007.5 7.5zM257.067 136.572a7.5 7.5 0 007.5-7.5v-.446a7.5 7.5 0 00-15 0v.446a7.5 7.5 0 007.5 7.5zM307.423 85.77h.445a7.5 7.5 0 000-15h-.445a7.5 7.5 0 000 15zM206.71 70.77h-.446a7.5 7.5 0 000 15h.446a7.5 7.5 0 000-15z\"></path>\n      </g>\n    </svg>\n  );\n}\n","import React from 'react';\n\nexport function Picture(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path fill=\"#fccd7f\" d=\"M57.142 7.501h397.717v497H57.142z\"></path>\n      <path fill=\"#f0b95f\" d=\"M435.756 7.501h19.103v497h-19.103z\"></path>\n      <path fill=\"#8ce1a4\" d=\"M422.859 39.501v433H89.142v-433z\"></path>\n      <path fill=\"#78c2a4\" d=\"M399.756 39.501h23.103v433h-23.103z\"></path>\n      <path\n        fill=\"#7a6d79\"\n        d=\"M365.53 343.679H163.056V150.643c0-38.777 31.435-70.212 70.212-70.212h62.049c38.777 0 70.212 31.435 70.212 70.212v193.036z\"\n      ></path>\n      <path\n        fill=\"#685e68\"\n        d=\"M295.318 80.431h-23.103c38.777 0 70.212 31.435 70.212 70.212v193.036h23.103V150.643c0-38.777-31.435-70.212-70.212-70.212z\"\n      ></path>\n      <path\n        fill=\"#f6a96c\"\n        d=\"M315.644 282.905h-75.73c-25.941 0-46.971-21.03-46.971-46.971v-89.285a8.347 8.347 0 018.347-8.347h53.004s10.527 47.113 61.351 47.113v97.49\"\n      ></path>\n      <path\n        fill=\"#ea9b58\"\n        d=\"M254.293 138.302H231.19s10.527 47.113 61.351 47.113v97.489h23.103v-97.489c-50.823 0-61.351-47.113-61.351-47.113z\"\n      ></path>\n      <path fill=\"#7a6d79\" d=\"M192.952 345.671h122.7v126.83h-122.7z\"></path>\n      <path fill=\"#685e68\" d=\"M315.652 345.671v126.83h-42.76v-109.43c0-6.56 2.24-12.6 6-17.4z\"></path>\n      <path\n        fill=\"#f6a96c\"\n        d=\"M315.652 282.901v65.85c0 25.45-18.49 46.57-42.76 50.68-2.81.47-5.7.72-8.64.72h-19.91c-28.38 0-51.39-23.01-51.39-51.4v-13.9l25.6-6.84c14.41-3.85 24.44-16.91 24.44-31.83v-13.28z\"\n      ></path>\n      <path\n        fill=\"#ea9b58\"\n        d=\"M315.652 334.851v13.9c0 25.45-18.49 46.57-42.76 50.68v-36.36c0-15.59 12.63-28.22 28.22-28.22z\"\n      ></path>\n      <path\n        fill=\"#ea9b58\"\n        d=\"M292.544 282.901v65.85c0 27.854-22.163 50.514-49.803 51.36.532.016 1.061.04 1.597.04h19.91c28.38 0 51.4-23.01 51.4-51.4v-65.85z\"\n      ></path>\n      <path\n        fill=\"#c4a098\"\n        d=\"M192.943 472.501H89.142l35.302-110.855c5.082-15.958 19.905-26.794 36.652-26.794h31.846v137.649z\"\n      ></path>\n      <path fill=\"#a3847e\" d=\"M169.84 334.852h23.103v137.649H169.84z\"></path>\n      <path\n        fill=\"#c4a098\"\n        d=\"M422.859 472.501H295.996V363.07c0-15.584 12.634-28.218 28.218-28.218h46.072c13.283 0 24.767 9.263 27.579 22.245z\"\n      ></path>\n      <path\n        fill=\"#a3847e\"\n        d=\"M397.865 357.097c-2.812-12.982-14.296-22.245-27.579-22.245h-23.103c13.283 0 24.767 9.263 27.579 22.245l24.994 115.404h23.103z\"\n      ></path>\n      <path d=\"M461.096 508.665c.686-1.178 1.244-2.231 1.263-4.167V89.017a7.5 7.5 0 00-15 0v397.377l-17-17V42.607l17-17v27.282a7.5 7.5 0 0015 0V7.503c.063-3.554-3.005-7.563-7.5-7.502H57.142c-3.589-.037-7.537 2.973-7.5 7.502v496.995c-.046 3.557 2.976 7.557 7.5 7.503h397.717c2.337-.207 4.354-.665 6.237-3.336zm-157.6-43.664V363.07c0-11.424 9.294-20.718 20.718-20.718h46.072c9.683 0 18.199 6.869 20.249 16.333l23.026 106.316zm-103.044 0v-77.033c10.792 12.069 26.466 19.683 43.89 19.683h19.91c8.507 0 16.704-1.778 24.245-5.197v62.547zm88.044-101.931v22.283c-7.184 4.783-15.495 7.297-24.245 7.297h-19.91c-28.205.077-46.745-25.282-43.89-52.041l20.036-5.354c19.61-4.92 31.878-24.792 30.004-44.852h57.66v40.778c-11.646 5.892-19.655 17.969-19.655 31.889zm19.648-87.669h-65.152c-22.343 1.627-42.642-16.56-42.549-39.467v-89.285c0-.467.38-.847.847-.847h47.475c8.907 22.621 25.022 42.863 59.38 46.786v82.813zM201.289 130.802c-8.738 0-15.847 7.109-15.847 15.847v89.285c0 28.545 22.076 52.016 50.049 54.276 1.611 12.915-5.305 27.013-18.876 30.555l-24.652 6.587h-21.408V150.643c-.186-35.586 30.655-64.766 66.557-62.712l-28.76 42.872h-7.063zm-40.192 211.55h24.346v122.649H99.402l32.189-101.079c4.108-12.902 15.966-21.57 29.506-21.57zM419.752 32.001H92.248l-17-17h361.504zM81.642 42.607v219.597a7.5 7.5 0 0015 0V47.001h318.717V402.44l-10.164-46.93c-3.534-16.316-18.215-28.158-34.909-28.158-1.883.028-45.16-.053-47.134.027l-.008-134.464c4.288.75 10.079-1.726 10.396-7.5a7.5 7.5 0 00-7.5-7.5c-50.97 3.96-62.148-33.357-64.428-41.249a7.5 7.5 0 00-7.319-5.864h-27.877l28.76-42.872h40.141c34.58 0 62.712 28.132 62.712 62.712v148.061a7.5 7.5 0 0015 0v-148.06c0-42.851-34.862-77.712-77.712-77.712h-62.049c-42.851 0-77.712 34.861-77.712 77.712v177.039c-17.736 2.121-32.728 14.32-38.259 31.688l-20.656 64.863V297.406a7.5 7.5 0 00-15 0v171.988l-17 17V25.607zm10.606 437.394h327.504l17 17H75.248z\"></path>\n      <path d=\"M246.293 187.543h-12.396a7.5 7.5 0 00-7.5 7.5v37.686a7.5 7.5 0 0015 0v-30.186h4.896a7.5 7.5 0 000-15z\"></path>\n    </svg>\n  );\n}\n","import React from 'react';\n\nexport function Seal(props) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#a6f5cf\"\n        d=\"M255.787 471.779c-57.584 0-111.722-22.425-152.44-63.143s-63.143-94.855-63.143-152.44 22.425-111.722 63.143-152.44 94.855-63.143 152.44-63.143 111.722 22.425 152.44 63.143 63.143 94.855 63.143 152.44-22.425 111.722-63.143 152.44-94.856 63.143-152.44 63.143z\"\n      ></path>\n      <circle cx=\"255.787\" cy=\"256.196\" r=\"175.583\" fill=\"#7776d0\"></circle>\n      <path\n        fill=\"#6967bf\"\n        d=\"M255.787 80.613c-6.763 0-13.436.383-20 1.127 87.554 9.927 155.583 84.247 155.583 174.456s-68.029 164.529-155.583 174.456a177.527 177.527 0 0020 1.127c96.972 0 175.583-78.611 175.583-175.583S352.758 80.613 255.787 80.613z\"\n      ></path>\n      <path\n        fill=\"#a6f5cf\"\n        d=\"M221.695 333.406a20.04 20.04 0 01-13.764-5.456l-53.097-49.989c-18.338-17.244 8.356-47.367 27.529-29.339l39.332 37.046 107.277-101.352c18.34-17.241 46.702 11.311 27.529 29.339L235.459 327.95a20.041 20.041 0 01-13.764 5.456z\"\n      ></path>\n      <path d=\"M177.236 28.276c4.638 0 8.643-5.416 7.1-9.93-1.34-3.92-5.61-6.01-9.53-4.67s-6.01 5.6-4.67 9.52a7.51 7.51 0 007.1 5.08zm-36.639 15.94c5.151 0 9.121-6.34 6.61-11.04-1.95-3.65-6.49-5.03-10.15-3.08-3.65 1.95-5.03 6.5-3.08 10.15a7.493 7.493 0 006.62 3.97zm-33.631 21.56c5.722 0 9.513-7.359 5.96-12.03-2.5-3.3-7.2-3.94-10.5-1.44s-3.95 7.21-1.45 10.51a7.514 7.514 0 005.99 2.96zm-35.049 24.48c3.566 2.855 7.102 2.785 10.61-.21 2.86-2.99 2.77-7.74-.22-10.61s-7.73-2.77-10.6.22-2.781 7.73.21 10.6zm-56.81 104.4c3.657 1.081 8.233-1.378 9.32-5.07a7.504 7.504 0 00-5.07-9.32 7.497 7.497 0 00-9.31 5.07c-1.18 3.97 1.089 8.14 5.06 9.32zm-7.29 79.31a7.494 7.494 0 007.18-7.81c-.17-4.14-3.67-7.35-7.81-7.18a7.516 7.516 0 00-7.18 7.82c.17 4.03 3.5 7.18 7.49 7.18.11 0 .219 0 .32-.01zm12 30.59c-.85-4.05-4.83-6.65-8.88-5.79a7.497 7.497 0 00-5.8 8.88c1.979 9.319 16.686 6.467 14.68-3.09zm-11.63-70.55c.31.04.62.06.92.06a7.5 7.5 0 007.44-6.58c.5-4.12-2.42-7.86-6.53-8.36a7.497 7.497 0 10-1.83 14.88zm285.08-215.8c3.734.547 7.992-2.42 8.6-6.21.66-4.09-2.12-7.94-6.2-8.6-4.09-.66-7.94 2.12-8.61 6.21a7.505 7.505 0 006.21 8.6zm140.349 73.27c1.88 0 3.76-.7 5.22-2.11 2.98-2.89 3.05-7.64.17-10.61a7.503 7.503 0 00-10.61-.16c-2.97 2.88-3.05 7.63-.16 10.6a7.452 7.452 0 005.38 2.28zm25.491 30.78c1.49 0 3-.45 4.31-1.37 3.39-2.38 4.2-7.06 1.82-10.45s-7.06-4.2-10.45-1.82a7.503 7.503 0 00-1.82 10.45 7.48 7.48 0 006.14 3.19zm35.779 104.15c.472 3.636 4.68 7.041 8.4 6.48 4.1-.52 7.01-4.28 6.48-8.39-.52-4.11-4.28-7.01-8.39-6.49-4.109.53-7.01 4.29-6.49 8.4zM215.977 18.486c4.179 0 8.104-4.563 7.41-8.73-.69-4.09-4.55-6.85-8.63-6.17a7.503 7.503 0 00-6.17 8.63c.609 3.67 3.79 6.27 7.39 6.27zm270.85 170.03c1.116 3.7 5.68 6.099 9.34 5.03a7.514 7.514 0 005.03-9.35 7.516 7.516 0 00-9.35-5.02c-3.961 1.19-6.211 5.37-5.02 9.34zm-87.68-124.97c3.705 2.426 7.205 1.929 10.5-1.49 2.49-3.31 1.82-8.01-1.49-10.5s-8.01-1.82-10.5 1.49-1.82 8.01 1.49 10.5zm-377.98 273.87c-3.86 1.5-5.77 5.85-4.27 9.71 1.427 3.641 6.108 5.647 9.71 4.27 3.86-1.51 5.77-5.85 4.27-9.71s-5.851-5.78-9.71-4.27zm345.259-294.63c3.458 1.837 8.301.35 10.13-3.13 1.94-3.66.54-8.2-3.13-10.13a7.489 7.489 0 00-10.13 3.12 7.496 7.496 0 003.13 10.14z\"></path>\n      <circle cx=\"255.787\" cy=\"7.696\" r=\"7.5\"></circle>\n      <path d=\"M330.847 27.506c3.62 1.238 8.28-1.073 9.5-4.72a7.501 7.501 0 10-9.5 4.72zm-283.35 94.39c3.737 2.276 7.217 1.653 10.44-1.87 2.37-3.4 1.53-8.07-1.87-10.44s-8.07-1.53-10.44 1.87-1.53 8.07 1.87 10.44zm405.319 284.47a7.503 7.503 0 00-10.55 1.06 7.507 7.507 0 001.07 10.56c3.662 2.566 7.179 2.21 10.55-1.07a7.495 7.495 0 00-1.07-10.55zm21.791-33.5a7.493 7.493 0 00-10.26 2.71c-2.08 3.58-.87 8.17 2.71 10.25 3.422 1.984 8.261.703 10.26-2.71 2.08-3.58.87-8.17-2.71-10.25zm-59.141 62.59c-3.09 2.76-3.36 7.51-.59 10.59 3.446 3.12 6.976 3.32 10.59.6 3.08-2.77 3.35-7.51.59-10.59-2.769-3.09-7.51-3.36-10.59-.6zm-30.85 23.51c-3.48 2.24-4.48 6.88-2.24 10.36 3.146 3.642 6.603 4.392 10.37 2.25a7.51 7.51 0 002.24-10.37 7.51 7.51 0 00-10.37-2.24zm-34.15 18.34a7.495 7.495 0 00-3.86 9.87c1.563 3.583 6.331 5.428 9.88 3.87 3.79-1.66 5.52-6.09 3.86-9.88a7.486 7.486 0 00-9.88-3.86zm135.71-331.44a7.505 7.505 0 00-10.03-3.46c-3.72 1.82-5.27 6.31-3.45 10.03 1.724 3.54 6.52 5.172 10.03 3.45a7.486 7.486 0 003.45-10.02zm18.221 111.99c-4.14-.15-7.62 3.08-7.78 7.21-.15 4.14 3.08 7.62 7.21 7.78 3.738.367 7.652-3.768 7.78-7.21.16-4.14-3.07-7.62-7.21-7.78zm-3.56 39.8c-4.06-.83-8.03 1.78-8.86 5.84-.83 4.05 1.78 8.02 5.84 8.85 3.696.796 8.092-2.143 8.85-5.83.839-4.06-1.781-8.03-5.83-8.86zm-187 192.25c-4.01 1.03-6.44 5.11-5.41 9.12.936 3.698 5.442 6.367 9.12 5.42 4.01-1.03 6.43-5.11 5.41-9.12s-5.11-6.44-9.12-5.42zm176.95-153.57a7.497 7.497 0 00-9.69 4.31 7.489 7.489 0 004.31 9.69c3.593 1.374 8.298-.67 9.69-4.31 1.48-3.87-.45-8.21-4.31-9.69zm-253.821 160.11c-4.13-.34-7.74 2.74-8.08 6.87a7.506 7.506 0 006.88 8.08c.2.02.41.02.61.02a7.496 7.496 0 00.59-14.97zm-140-60.22c-3.1-2.75-7.84-2.46-10.59.64-2.74 3.1-2.46 7.84.64 10.58 3.617 2.717 7.147 2.504 10.59-.64a7.487 7.487 0 00-.64-10.58zm30.951 23.35a7.503 7.503 0 00-8.07 12.65c3.768 2.136 7.222 1.373 10.36-2.29 2.219-3.49 1.199-8.13-2.29-10.36zm147.759 36.78a7.5 7.5 0 00-6.84 8.11c.33 3.91 3.61 6.86 7.46 6.86.22 0 .43-.01.65-.03a7.496 7.496 0 006.83-8.1c-.35-4.13-3.98-7.19-8.1-6.84zm-113.549-18.61c-3.8-1.64-8.22.11-9.86 3.91s.11 8.22 3.91 9.86c3.561 1.541 8.301-.323 9.86-3.91 1.639-3.8-.111-8.21-3.91-9.86zM37.526 373.886a7.503 7.503 0 00-2.66 10.27c2.012 3.42 6.854 4.653 10.27 2.66 3.57-2.1 4.76-6.69 2.66-10.27a7.503 7.503 0 00-10.27-2.66zm21.951 33.41a7.504 7.504 0 00-1.02 10.56c3.379 3.26 6.899 3.6 10.56 1.02a7.504 7.504 0 001.02-10.56c-2.64-3.2-7.37-3.65-10.56-1.02zm139.299 82.88a7.497 7.497 0 00-9.1 5.45c-1 4.02 1.44 8.09 5.46 9.1 3.686.905 8.164-1.748 9.1-5.46 1-4.02-1.44-8.09-5.46-9.09zm-160.399-336.7c1.8-3.73.23-8.21-3.5-10.01s-8.21-.24-10.01 3.49a7.498 7.498 0 003.5 10.02c3.513 1.673 8.303.046 10.01-3.5zM259.733 33.148c-50.078-.869-97.552 14.399-137.345 44.203-7.762 5.813 1.23 17.817 8.992 12.006 37.1-27.786 81.414-42.047 128.087-41.21 55.572.983 107.436 23.548 146.036 63.539 38.601 39.991 59.318 92.62 58.334 148.192-.983 55.572-23.548 107.436-63.539 146.036-39.991 38.601-92.629 59.316-148.192 58.334-55.572-.983-107.436-23.548-146.036-63.539-38.601-39.991-59.318-92.62-58.334-148.192.906-51.216 20.499-100.045 55.169-137.492 6.588-7.115-4.419-17.306-11.007-10.19-37.178 40.154-58.188 92.508-59.16 147.415-1.054 59.578 21.157 116.001 62.54 158.875s96.985 67.065 156.563 68.12c1.353.024 2.703.036 4.052.036 58.08 0 112.922-22.132 154.822-62.575 42.874-41.383 67.065-96.985 68.12-156.563 1.054-59.578-21.157-116.001-62.54-158.875-41.383-42.874-96.984-67.066-156.562-68.12z\"></path>\n      <path d=\"M255.787 439.279c100.952 0 183.083-82.131 183.083-183.083S356.739 73.113 255.787 73.113 72.704 155.244 72.704 256.196s82.131 183.083 183.083 183.083zm0-351.166c92.681 0 168.083 75.402 168.083 168.083s-75.402 168.083-168.083 168.083S87.704 348.877 87.704 256.196 163.106 88.113 255.787 88.113z\"></path>\n      <path d=\"M149.692 283.421l53.1 49.993c5.298 4.982 12.097 7.473 18.898 7.473 6.804 0 13.611-2.495 18.918-7.484l42.815-40.429c7.051-6.658-3.248-17.565-10.298-10.906l-42.804 40.418c-4.756 4.473-12.497 4.472-17.25.003l-53.1-49.993c-6.805-6.398-3.032-14.048.27-17.56 1.401-1.49 8.809-8.54 16.98-.856l39.332 37.046a7.5 7.5 0 0010.293-.008l107.263-101.339c6.782-6.375 14.157-2.156 17.446 1.342 1.407 1.497 8.012 9.354-.204 17.079l-49.488 46.73c-7.051 6.658 3.246 17.562 10.298 10.906l49.477-46.719c12.833-12.066 10.138-28.386.845-38.271-9.274-9.864-25.972-13.915-38.662-1.983l-102.134 96.493-34.187-32.2c-12.814-12.049-28.909-8.363-38.188 1.504-9.289 9.882-12.313 26.825.38 38.761z\"></path>\n    </svg>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resource\nimport { Button } from 'antd';\n// Hooks\nimport { useLanguage } from '../../hooks';\n// Components\nimport { TimedButton } from './index';\nimport { translate } from './Translate';\nimport { Title } from './Title';\nimport { Painting, Evaluate, Multitask, Picture, Seal } from '../icons';\n\nconst getIconType = (type) => {\n  switch (type) {\n    case 'painting':\n      return Painting;\n    case 'evaluate':\n      return Evaluate;\n    case 'picture':\n      return Picture;\n    case 'seal':\n      return Seal;\n    default:\n      return Multitask;\n  }\n};\n\nexport function PhaseAnnouncement({\n  buttonText,\n  type,\n  title,\n  children,\n  duration,\n  currentRound,\n  onClose,\n  className,\n  withoutTimer,\n}) {\n  const language = useLanguage();\n  const durationPerRound = [15, 10, 7, 5]?.[currentRound] ?? 4;\n  const Icon = getIconType(type);\n\n  return (\n    <div className={clsx('phase-announcement', className)}>\n      <Title>{title}</Title>\n      <Icon className=\"phase-announcement__icon\" />\n\n      {children}\n\n      {withoutTimer ? (\n        <Button type=\"primary\" onClick={onClose}>\n          {translate('Prosseguir', 'Continue', language, buttonText)}\n        </Button>\n      ) : (\n        <TimedButton\n          duration={duration || durationPerRound}\n          type=\"text\"\n          label={translate('Prosseguir', 'Continue', language, buttonText)}\n          onClick={onClose}\n          onExpire={onClose}\n        />\n      )}\n    </div>\n  );\n}\n\nPhaseAnnouncement.propTypes = {\n  buttonText: PropTypes.string,\n  children: PropTypes.any,\n  className: PropTypes.string,\n  currentRound: PropTypes.number,\n  duration: PropTypes.number,\n  onClose: PropTypes.func,\n  title: PropTypes.string,\n  type: PropTypes.string,\n  withoutTimer: PropTypes.bool,\n};\n\nPhaseAnnouncement.defaultProps = {\n  currentRound: 0,\n  withoutTimer: false,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTimer } from 'react-timer-hook';\n// Design Resources\nimport { CrownFilled } from '@ant-design/icons';\n// Hooks\nimport { useDimensions } from '../../hooks';\n// Utils\nimport { inNSeconds } from '../../utils';\n// Components\nimport { Avatar } from '../avatars';\n\nexport function RankingBoard({ players, ranking }) {\n  const [displayStep, setDisplayStep] = useState(0);\n  const [sortedRanking, setSortedRanking] = useState([]);\n  const [reRank, setReRank] = useState(0);\n  const [, height] = useDimensions('ranking-row-0');\n\n  const maxPoints = ranking[0].newScore;\n\n  const { seconds } = useTimer({\n    expiryTimestamp: inNSeconds(4),\n    autoStart: true,\n    onExpire: () => setReRank(1),\n  });\n\n  // Rank by previousScore\n  useEffect(() => {\n    const positions = {};\n    let lastPosition = 0;\n    let lastPoints = null;\n\n    const rankByFinalScoreDict = ranking\n      .sort((a, b) => (a.newScore < b.newScore ? 1 : -1))\n      .reduce((acc, entry, index) => {\n        acc[entry.playerId] = index;\n        // Calculate position\n        if (lastPoints === null || entry.newScore < lastPoints) {\n          lastPoints = entry.newScore;\n          lastPosition += 1;\n        }\n        positions[entry.playerId] = [0, lastPosition];\n        return acc;\n      }, {});\n\n    const rankByPreviousScore = ranking.sort((a, b) => (a.previousScore < b.previousScore ? 1 : -1));\n\n    // Reset position trackers\n    lastPosition = 0;\n    lastPoints = null;\n\n    const tempSortedRanking = rankByPreviousScore.map((entry, index) => {\n      const newEntry = { ...entry };\n\n      newEntry.order = [index, rankByFinalScoreDict[newEntry.playerId]];\n      newEntry.position = positions[newEntry.playerId];\n      // Calculate position\n      if (lastPoints === null || entry.previousScore < lastPoints) {\n        lastPoints = entry.previousScore;\n        lastPosition += 1;\n      }\n      newEntry.position[0] = lastPosition;\n      return newEntry;\n    });\n\n    setSortedRanking(tempSortedRanking);\n  }, []); // eslint-disable-line\n\n  // Show gained points\n  useEffect(() => {\n    if (seconds === 3) {\n      setDisplayStep(1);\n    } else if (seconds === 2) {\n      setDisplayStep(2);\n    }\n  }, [seconds]);\n\n  return (\n    <div\n      className=\"ranking-board\"\n      style={{ height: `${(Math.max(60, height) + 8) * sortedRanking.length}px` }}\n    >\n      {sortedRanking.map((entry, index) => {\n        const { playerId, newScore, previousScore, gainedPoints, order, position } = entry;\n        const hPosition = (Math.max(60, height) + 8) * (order[reRank] ?? 0);\n        return (\n          <div\n            className={`ranking-board__row ranking-board__row--${index}`}\n            key={`ranking-${playerId}`}\n            id={`ranking-row-${index}`}\n            style={{ top: `${hPosition}px` }}\n          >\n            <div className=\"ranking-board__cell-crown\">\n              {newScore > 0 && maxPoints === newScore && displayStep >= 3 && (\n                <CrownFilled className=\"ranking-board__crown-icon\" />\n              )}\n            </div>\n            <div className=\"ranking-board__cell-position\">#{position[reRank] ?? ''}</div>\n            <div className=\"ranking-board__cell-player\">\n              <div className=\"ranking-board__avatar\">\n                <Avatar id={players[playerId].avatarId} />\n              </div>\n              <div className=\"ranking-board__name\">{players[playerId].name}</div>\n            </div>\n            <div className=\"ranking-board__cell-points\">{previousScore}</div>\n            {displayStep >= 1 && <div className=\"ranking-board__cell-points-plus\">+{gainedPoints}</div>}\n            {displayStep >= 2 && <div className=\"ranking-board__cell-points-total\">{newScore}</div>}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nRankingBoard.propTypes = {\n  players: PropTypes.object,\n  ranking: PropTypes.arrayOf(\n    PropTypes.shape({\n      playerId: PropTypes.string,\n      previousScore: PropTypes.number,\n      gainedPoints: PropTypes.number,\n      newScore: PropTypes.number,\n    })\n  ),\n};\n\nexport default RankingBoard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Avatar as AntAvatar, Typography } from 'antd';\nimport { LikeFilled } from '@ant-design/icons';\n// Components\nimport { Avatar } from '../avatars';\nimport { Translate } from './Translate';\n\nexport function ReadyPlayersBar({ players, readyText, readyTextPlural, showNames }) {\n  const readyPlayers = Object.values(players).filter((player) => player.ready);\n  if (readyPlayers.length === 0) {\n    return <span></span>;\n  }\n\n  return (\n    <div className=\"ready-player-bar\">\n      <div className=\"ready-player-bar__bar\">\n        <AntAvatar.Group size=\"small\">\n          {readyPlayers.map((player) => (\n            <Avatar key={player.name} id={player.avatarId} />\n          ))}\n        </AntAvatar.Group>\n        <span className=\"ready-player-bar__speech-bubble\">\n          <Typography.Text>\n            {readyPlayers.length > 1 ? (\n              <Translate pt=\"Estamos prontos!\" en=\"We're ready!\" custom={readyTextPlural} />\n            ) : (\n              <Translate pt=\"Estou pronto!\" en=\"I'm ready!\" custom={readyText} />\n            )}\n          </Typography.Text>\n          <LikeFilled className=\"ready-player-bar__speech-bubble-icon\" />\n        </span>\n      </div>\n      {showNames && (\n        <span className=\"ready-player-bar__names\">\n          ({readyPlayers.map((player) => player.name).join(', ')})\n        </span>\n      )}\n    </div>\n  );\n}\n\nReadyPlayersBar.propTypes = {\n  players: PropTypes.object.isRequired,\n  readyText: PropTypes.string,\n  readyTextPlural: PropTypes.string,\n  showNames: PropTypes.bool,\n};\n\nReadyPlayersBar.defaultProps = {\n  showNames: false,\n};\n","export default __webpack_public_path__ + \"static/media/round-title-en.2ad07e1f.svg\";","export default __webpack_public_path__ + \"static/media/round-title-pt.2e3f9c1d.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Button, Tag } from 'antd';\n// Images\nimport roundTitleEn from '../../images/round-title-en.svg';\nimport roundTitlePt from '../../images/round-title-pt.svg';\n// Components\nimport { AvatarName } from '../avatars';\nimport { TimedButton } from './index';\nimport { useLanguage } from '../../hooks';\nimport { translate, Translate } from './Translate';\n\nfunction Team({ team, players, className }) {\n  return (\n    <div className={className}>\n      <h1>\n        <Translate pt=\"Time\" en=\"Team\" /> {team.name}\n      </h1>\n      <ul className=\"round-announcement__team-members\">\n        {team.members.map((playerName) => (\n          <li key={`team-member-${playerName}`} className=\"round-announcement__team-member\">\n            <AvatarName player={players[playerName]} />\n          </li>\n        ))}\n      </ul>\n      <Tag className=\"round-announcement__points\" color=\"blue\">\n        {team.score}{' '}\n        <Translate pt={team.score > 1 ? 'pontos' : 'ponto'} en={team.score > 1 ? 'points' : 'point'} />\n      </Tag>\n    </div>\n  );\n}\n\nexport function RoundAnnouncement({\n  round,\n  onPressButton,\n  buttonText,\n  time,\n  teams,\n  players,\n  className,\n  children,\n}) {\n  const language = useLanguage();\n\n  return (\n    <div className={clsx('round-announcement', className)}>\n      {Boolean(teams?.A) && (\n        <Team className=\"round-announcement__team-left\" team={teams.A} players={players} />\n      )}\n\n      <div className=\"round-announcement__main\">\n        <div className=\"round-announcement__title\">\n          <img\n            src={translate(roundTitlePt, roundTitleEn, language)}\n            alt={translate('Rodada', 'Round', language)}\n          />\n        </div>\n        <div className=\"round-announcement__round-wrapper\">\n          <div className=\"round-announcement__circle\"></div>\n          <div className=\"round-announcement__number\">{round?.current ?? round ?? 0}</div>\n        </div>\n\n        {children}\n\n        {Boolean(onPressButton) && !Boolean(time) && (\n          <Button type=\"primary\" onClick={onPressButton} className=\"round-announcement__go-button\">\n            {buttonText}\n          </Button>\n        )}\n\n        {Boolean(onPressButton) && Boolean(time) && (\n          <TimedButton\n            label={buttonText || translate('Prosseguir', 'Continue', language)}\n            type=\"primary\"\n            onClick={onPressButton}\n            onExpire={onPressButton}\n            duration={time}\n            showTimer\n          />\n        )}\n      </div>\n\n      {Boolean(teams?.B) && (\n        <Team className=\"round-announcement__team-right\" team={teams.B} players={players} />\n      )}\n    </div>\n  );\n}\n\nRoundAnnouncement.propTypes = {\n  round: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.shape({ current: PropTypes.number, total: PropTypes.number }),\n  ]),\n  onPressButton: PropTypes.func,\n  buttonText: PropTypes.string,\n  time: PropTypes.number,\n  players: PropTypes.object,\n  teams: PropTypes.object,\n  className: PropTypes.string,\n};\n\nRoundAnnouncement.defaultProps = {\n  time: 0,\n};\n","class LocalStorage {\n  constructor() {\n    this.store = {};\n    this.notLoaded = true;\n    this.appName = 'tarde-divertida';\n\n    this.init();\n  }\n\n  init() {\n    this.load();\n    return this.get();\n  }\n\n  get(key) {\n    if (this.notLoaded) {\n      this.load();\n    }\n\n    if (key) {\n      return this.store[key] || null;\n    }\n    return this.store;\n  }\n\n  load() {\n    const localStorage = JSON.parse(window.localStorage.getItem(this.appName));\n    if (localStorage) {\n      this.store = localStorage;\n      this.notLoaded = false;\n    }\n  }\n\n  // To Remove a property, you can use the set method, but passing an object with the key and value\n  // null, the property will be removed from local storage\n  set(value) {\n    if (this.notLoaded) {\n      this.load();\n    }\n\n    const type = typeof value;\n    if (type !== 'string' && type !== 'object') {\n      console.error('localStorage set value must be a string or a key-value object');\n      return;\n    }\n\n    // When value is a string, use as a property toggle\n    if (typeof value === 'string') {\n      this.store[value] = !this.store[value];\n    } else {\n      // Remove any null or undefined property\n      Object.entries(value).forEach(([key, item]) => {\n        if (item === null || item === undefined) {\n          delete value[key];\n        }\n      });\n\n      this.store = {\n        ...this.store,\n        ...value,\n      };\n    }\n\n    this.save();\n  }\n\n  save() {\n    if (this.notLoaded) {\n      this.load();\n    }\n\n    window.localStorage.setItem(this.appName, JSON.stringify(this.store));\n    this.load();\n  }\n}\n\nexport default new LocalStorage();\n","import React, { useCallback, useEffect, useState } from 'react';\n// Design Resources\nimport { Alert, Button, Image, Input, notification, Tooltip } from 'antd';\nimport { CaretLeftOutlined, CaretRightOutlined, InfoCircleOutlined } from '@ant-design/icons';\n// API & Hooks\nimport { GAME_API } from '../../../adapters';\nimport { useLanguage, useLoading } from '../../../hooks';\nimport useGlobalState from '../../../hooks/useGlobalState';\n// Images\nimport avatars from '../../../images/avatars.svg';\n// Services\nimport localStorage from '../../../services/localStorage';\n// Utils\nimport { AVATARS, PUBLIC_URL, RANDOM_NAMES } from '../../../utils/constants';\nimport { getRandomItem, isDevEnv } from '../../../utils/index';\nimport { Translate, translate } from '../../shared';\n\nconst randomName = isDevEnv ? getRandomItem(RANDOM_NAMES) : undefined;\n\nconst AVATAR_IDS = Object.keys(AVATARS);\n\nfunction Join({ players, info }) {\n  const language = useLanguage();\n  const [isLoading, setLoader] = useLoading();\n  const [gameId] = useGlobalState('gameId');\n  const [gameName] = useGlobalState('gameName');\n  const [, setUserId] = useGlobalState('userId');\n  const [, setUsername] = useGlobalState('username');\n  const [, setUserAvatarId] = useGlobalState('userAvatarId');\n\n  const [availableAvatars, setAvailableAvatars] = useState(AVATAR_IDS);\n  const [tempAvatar, setTempAvatar] = useState(getRandomItem(AVATAR_IDS));\n  const [tempUsername, setTempUsername] = useState('');\n  const [sameGameId, setSameGameId] = useState(false);\n\n  const [localStorageAvatar, setLocalStorageAvatar] = useState(null);\n\n  // Calculate available avatars and monitor if user chose a non-available one\n  useEffect(() => {\n    const usedAvatars = Object.values(players).reduce((acc, { avatarId }) => {\n      acc[avatarId] = true;\n      return acc;\n    }, {});\n\n    const newAvailableAvatars = AVATAR_IDS.filter((avatarId) => usedAvatars[avatarId] === undefined);\n\n    if (newAvailableAvatars.includes(tempAvatar) && !localStorageAvatar) {\n      setTempAvatar(getRandomItem(newAvailableAvatars));\n    }\n\n    setAvailableAvatars(newAvailableAvatars);\n  }, [players]); // eslint-disable-line\n\n  // Load name and avatarId from localStorage\n  useEffect(() => {\n    const lsAvatarId = localStorage.get('avatarId');\n    const lsUsername = localStorage.get('username');\n    const lsGameId = localStorage.get('gameId');\n\n    if (lsAvatarId && lsUsername) {\n      setTempAvatar(localStorage.get('avatarId'));\n      setTempUsername(localStorage.get('username') ?? '');\n      setLocalStorageAvatar(lsAvatarId);\n\n      if (lsGameId === gameId) {\n        setSameGameId(true);\n      }\n    }\n  }, []); // eslint-disable-line\n\n  const onPreviousAvatar = useCallback(() => {\n    const index = availableAvatars.indexOf(tempAvatar);\n    const newIndex = index === 0 ? availableAvatars.length - 1 : index - 1;\n    setTempAvatar(availableAvatars[newIndex]);\n  }, [availableAvatars, tempAvatar]);\n\n  const onNextAvatar = useCallback(() => {\n    const index = availableAvatars.indexOf(tempAvatar);\n    const newIndex = index === availableAvatars.length - 1 ? 0 : index + 1;\n    setTempAvatar(availableAvatars[newIndex]);\n  }, [availableAvatars, tempAvatar]);\n\n  const onAddPlayer = useCallback(async () => {\n    try {\n      setLoader('add-player', true);\n      const response = await GAME_API.addPlayer({\n        gameId,\n        gameName,\n        playerName: tempUsername,\n        playerAvatarId: tempAvatar,\n      });\n\n      setUserId(response.data.id);\n      setUsername(response.data.name);\n      setUserAvatarId(response.data.avatarId);\n\n      localStorage.set({\n        username: response.data.name,\n        avatarId: response.data.avatarId,\n        gameId,\n      });\n    } catch (e) {\n      notification.error({\n        message: translate(\n          'Vixi, o aplicativo encontrou um erro ao tentar te adicionar como jogador',\n          'Oops, the application failed when trying to add you as a player',\n          translate\n        ),\n        description: JSON.stringify(e.message),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n    } finally {\n      setLoader('add-player', false);\n    }\n  }, [gameId, gameName, tempUsername, tempAvatar]); // eslint-disable-line\n\n  const onEnterInput = (e) => {\n    if (e.key === 'Enter') {\n      onAddPlayer();\n    }\n  };\n\n  return (\n    <div className=\"lobby-join\">\n      <Image\n        alt={info?.title[language]}\n        src={`${PUBLIC_URL.BANNERS}game-image-${info?.gameName}-${language}.jpg`}\n        fallback={`${PUBLIC_URL.BANNERS}/game-image-em-breve.jpg`}\n        className=\"lobby-join__game-image\"\n      />\n      <h1 className=\"lobby-join__title\">\n        {Boolean(localStorageAvatar) ? (\n          <Translate pt=\"Bem-vindo de volta!\" en=\"Welcome Back!\" />\n        ) : (\n          <Translate pt=\"Selecione seu avatar\" en=\"Select your avatar\" />\n        )}\n      </h1>\n      <div className=\"lobby-join__avatar-selection\">\n        <Button type=\"dashed\" onClick={onPreviousAvatar} className=\"lobby-join__avatar-nav-button\">\n          <CaretLeftOutlined />\n        </Button>\n        <svg viewBox=\"0 0 100 100\" className=\"lobby-join__avatar-selection-image\">\n          <use href={avatars + `#avatar-${tempAvatar}`}></use>\n          <title>{AVATARS[tempAvatar].description[language]}</title>\n        </svg>\n        <Button type=\"dashed\" onClick={onNextAvatar} className=\"lobby-join__avatar-nav-button\">\n          <CaretRightOutlined />\n        </Button>\n      </div>\n\n      {Boolean(localStorageAvatar) ? (\n        <Alert\n          className=\"lobby-join__avatar-alert\"\n          type=\"success\"\n          message={translate(\n            'Você está de volta! Lembramos seu nome e avatar!',\n            \"You're back! We saved your name and avatar!\",\n            language\n          )}\n        />\n      ) : (\n        <Alert\n          className=\"lobby-join__avatar-alert\"\n          type=\"warning\"\n          message={translate(\n            'Se alguém selecionar um mesmo avatar, um avatar aleatório será atribuido à você.',\n            'If you selected the same avatar of someone else, a new random avatar will be given to you.',\n            language\n          )}\n        />\n      )}\n\n      {Boolean(sameGameId) && (\n        <Alert\n          className=\"lobby-join__avatar-alert\"\n          type=\"error\"\n          message={translate(\n            'Se você está retornando a um jogo, NÃO mude seu apelido! Se o apelido for modificado, você será adicionado como um novo jogador e tudo pode bugar.',\n            'If you are returning to a game, DO NOT change your nickname else the game might crash.',\n            language\n          )}\n        />\n      )}\n\n      <Input\n        className=\"lobby-join__name-input\"\n        onChange={(e) => setTempUsername(e.target.value.trim())}\n        placeholder={translate('Digite seu nome', 'Insert your name', language)}\n        value={tempUsername || randomName}\n        maxLength={10}\n        suffix={\n          <Tooltip title={translate('Máximo de 10 caracteres', '10 characters max', language)}>\n            <InfoCircleOutlined />\n          </Tooltip>\n        }\n        onKeyPress={onEnterInput}\n      />\n      <Button\n        className=\"lobby-join__join-button\"\n        type=\"primary\"\n        disabled={!Boolean(tempUsername) || isLoading}\n        onClick={onAddPlayer}\n        loading={isLoading}\n      >\n        {translate('Entrar no jogo', 'Enter', language)}\n      </Button>\n    </div>\n  );\n}\n\nexport default Join;\n","import React, { useCallback } from 'react';\n// Design Resources\nimport { Button, Image, message, notification, Typography } from 'antd';\n// API & Hooks\nimport { GAME_API } from '../../../adapters';\nimport { useLoading, useGlobalState, useLanguage } from '../../../hooks';\n// Images\nimport avatars from '../../../images/avatars.svg';\n// Utils and Resources\nimport { PUBLIC_URL } from '../../../utils/constants';\n// Components\nimport { AdminOnly } from '../../admin/index';\nimport { Translate, translate } from '../../shared';\n\nfunction Waiting({ info, players }) {\n  const language = useLanguage();\n  const [isLoading, setLoader] = useLoading();\n  const [gameId] = useGlobalState('gameId');\n  const [gameName] = useGlobalState('gameName');\n  const [gameMeta] = useGlobalState('gameMeta');\n\n  const [username] = useGlobalState('username');\n  const [userAvatarId] = useGlobalState('userAvatarId');\n\n  const onLockGameAndStart = useCallback(async () => {\n    try {\n      setLoader('lock-game', true);\n      const response = await GAME_API.lockGame({\n        gameId,\n        gameName,\n      });\n      if (response.data.isLocked) {\n        message.success(\n          translate(\n            'Jogo trancado e iniciado com sucesso!',\n            'Game locked and initialized successfully',\n            language\n          )\n        );\n      }\n    } catch (e) {\n      notification.error({\n        message: translate(\n          'Vixi, o aplicativo encontrou um erro ao tentar trancar e iniciar o jogo',\n          'Oops, the application found an error while trying to lock and start the game',\n          language\n        ),\n        description: JSON.stringify(e.message),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n    } finally {\n      setLoader('lock-game', false);\n    }\n  }, [gameId, gameName, setLoader, language]);\n\n  const numPlayers = Object.keys(players).length;\n  return (\n    <div className=\"lobby-waiting\">\n      <Image\n        alt={info?.title[language]}\n        src={`${PUBLIC_URL.BANNERS}game-image-${info?.gameName}-${language}.jpg`}\n        fallback={`${PUBLIC_URL.BANNERS}/game-image-em-breve.jpg`}\n      />\n\n      <h1 className=\"center\">{username || 'Fulano'},</h1>\n      <svg viewBox=\"0 0 100 100\" className=\"lobby-waiting__avatar\">\n        <use href={avatars + `#avatar-${userAvatarId}`}></use>\n      </svg>\n      <h3 className=\"center\">\n        <Translate pt=\"Aguarde os outros jogadores entrarem.\" en=\"Please, wait while other players join...\" />\n      </h3>\n      <AdminOnly className=\"lobby-waiting__lock-button\">\n        <Typography.Text className=\"center padding\">\n          <Translate pt=\"Jogadores necessários\" en=\"Players needed\" />: {numPlayers}/{gameMeta.min}\n        </Typography.Text>\n        <Button\n          type=\"primary\"\n          danger\n          onClick={onLockGameAndStart}\n          disabled={isLoading || numPlayers < gameMeta.min}\n          loading={isLoading}\n        >\n          <Translate pt=\"Trancar e Iniciar Jogo\" en=\"Lock and Start Game\" />\n        </Button>\n      </AdminOnly>\n    </div>\n  );\n}\n\nexport default Waiting;\n","import PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport React from 'react';\nimport { PUBLIC_URL } from '../../../utils/constants';\n\nfunction Cloud() {\n  return <div className=\"cloud-background__cloud cloud-background__cloud-basic\"></div>;\n}\n\nfunction CyberCloud() {\n  return (\n    <div className=\"cloud-background__cloud cloud-background__cyber-cloud\">\n      <svg data-name=\"Layer 6\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 352 215.72\">\n        <defs />\n        <path\n          d=\"M352 83.98h-48.56v-84H119.07v40.76H50.29v50.71H.05v111.5h36.24v12.77h283.26v-14.43h32.5zm-231-82h180.42v82h-66.74v54.79H121.07v-15.71h11.52v-82.3h-11.52zm196.48 197.29h-80.8v-14.82h66.74V140.8h14.06zm-16.04-16.82H236.7V140.8h64.74zm-180.37-41.68h113.68v41.68H121.07zm115.68-2V85.98h64.74v52.79zm-117.68 0h-7.48v-15.71h7.48zm2-17.71v-78.3h9.52v78.3zm-68.78-78.3h66.78v78.3h-7.48V91.45h-59.3zm0 50.65h57.3v27.65h-57.3zM2 200.95V93.45h48.24v29.65h59.3v15.71h-73.3v62.18zm107.54-60.18v60.18h-71.3v-60.18zm208 73H38.24v-10.82h73.3v-62.18h7.53v43.68h115.68v16.87h82.8zm32.5-14.43h-30.5v-60.52h-16.06V86.03h46.56z\"\n          fill=\"#0f0\"\n        />\n      </svg>\n    </div>\n  );\n}\n\nfunction FunkyCloud() {\n  return (\n    <div className=\"cloud-background__cloud cloud-background__funky-cloud\">\n      <svg data-name=\"Layer 6\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 377.96 227.27\">\n        <defs />\n        <path\n          d=\"M377.96 162.03a65.23 65.23 0 00-55.76-64.55v-.7a96.8 96.8 0 00-96.8-96.8 96.8 96.8 0 00-86.44 53.18 53.48 53.48 0 00-31.33-10.09 53.71 53.71 0 00-53.71 53.71v1a65.25 65.25 0 00-54 64.24 65.22 65.22 0 0065.23 65.23h253.71v-.29a65.23 65.23 0 0059.1-64.93z\"\n          fill=\"#f45b69\"\n        />\n        <path\n          d=\"M353.29 168.55a56.72 56.72 0 00-48.49-56.07v-.6a84.17 84.17 0 00-84.17-84.17 84.14 84.14 0 00-75.15 46.21 46.53 46.53 0 00-27.26-8.79 46.7 46.7 0 00-46.7 46.71v.86a56.71 56.71 0 00-46.91 55.85 56.72 56.72 0 0056.72 56.71h220.51v-.25a56.72 56.72 0 0051.45-56.46z\"\n          fill=\"#3a7ca5\"\n        />\n        <path\n          d=\"M322.21 175.86a47.42 47.42 0 00-40.53-46.91v-.5a70.36 70.36 0 00-70.36-70.35 70.33 70.33 0 00-62.8 38.66 38.81 38.81 0 00-22.78-7.35 39 39 0 00-39 39v.72a47.42 47.42 0 00-39.21 46.69 47.41 47.41 0 0047.41 47.4h184.32v-.21a47.41 47.41 0 0042.95-47.15z\"\n          fill=\"#44bba4\"\n        />\n        <path\n          d=\"M290.48 184.3a36 36 0 00-30.75-35.59v-.38a53.37 53.37 0 00-53.37-53.37 53.34 53.34 0 00-47.65 29.33 29.5 29.5 0 00-17.28-5.57 29.62 29.62 0 00-29.62 29.61v.55a36 36 0 00-29.75 35.42 36 36 0 0036 36H257.9v-.16a36 36 0 0032.58-35.84z\"\n          fill=\"#f2e863\"\n        />\n      </svg>\n    </div>\n  );\n}\n\nfunction DetectiveCloud() {\n  const result = Math.round(Math.random());\n\n  return (\n    <div className=\"cloud-background__cloud cloud-background__body-mark\">\n      {result === 0 ? (\n        <svg data-name=\"Layer 6\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 360.01 214.25\">\n          <defs />\n          <path\n            d=\"M167.81 214.25c-7.08 0-9.84-4-10.21-4.65a74.21 74.21 0 01-7-15.79c-.38-1.33-9.27-32.55-10.51-44.86-.93-9.19-5.64-12.57-5.84-12.71a137.57 137.57 0 00-13.37-7.3l-26.12-12.06 8.37 28.8a13.91 13.91 0 01-8.31 16.61l-72.7 27.37a12.85 12.85 0 01-10-.36 12.83 12.83 0 01-6.74-7.35l-4.59-12.9a14 14 0 017.08-17.22l43.7-20.87a1.58 1.58 0 00.72-.55 1.94 1.94 0 00-.49-.72l-5.12-5.33c-3.35-3.49-6.95-9.31-6.95-13.84 0-3.44 1.25-9.62 2.43-13.69l.5-1.71a32.92 32.92 0 01-28.3-7.53C6.11 80.54 1.64 70.22 3.73 63.06c.3-1 .57-2.09.85-3.18 2.67-10.31 6.32-24.42 32.88-28.81 18.5-3.06 32.89 12.64 33.49 13.31l.27.3 1.83-2.8a49.15 49.15 0 0111.74-13.17l27.05-19.67a43.43 43.43 0 0116.68-6.75L143.32.2a27.67 27.67 0 0117.8 4.35c7.24 4.06 40.27 22.94 46.25 32.65 1.22 2 3.48 5.66-9.73 21.47a13.81 13.81 0 01-18.15 3.38l-33.39-21a6.89 6.89 0 00-7.12.48l-12 9.95-.18.16.22.12 47.37 22.95a39.55 39.55 0 0013.19 3.2l49.86 1.27a38.33 38.33 0 0117.35 5.34l66.23 42.68a6 6 0 006.53-.57l1.56-1.45a15 15 0 0118.71-1l7.18 5.38a12.38 12.38 0 014.92 8.67 12.37 12.37 0 01-3.18 9.45l-24.86 27.46a14.08 14.08 0 01-18.51 1.79l-56.61-42.42a88.18 88.18 0 00-12.7-7.61 38.18 38.18 0 00-13.09-2.87h-37a2.14 2.14 0 00-1.64.65 2.17 2.17 0 00-.45 1.71l3.39 27.77a2 2 0 00.78 1.45 2 2 0 001.64.17l52.39-14.42a15.65 15.65 0 0117.3 7.33l20 36.62a13.17 13.17 0 01-5.09 17.73l-9.19 5.15a16.26 16.26 0 01-18.66-2.57c-7.32-7.32-11.24-11.86-13.3-14.84-5.26 1.37-20.37 6-63.61 21.36l-.94.33a26.62 26.62 0 01-8.78 1.78zm-2-10.33c.69.37 3 .78 7.46-.81l.93-.33c6.23-2.21 22.76-8.08 38.06-13.26 31.59-10.68 32.28-10.12 34.85-8a5.13 5.13 0 011.79 3c1.35 2.24 7.44 8.92 12.63 14.11a6.26 6.26 0 006.69.92l9.19-5.15a3.16 3.16 0 001.21-4.21l-20-36.62a5.7 5.7 0 00-5.87-2.49l-52.38 14.42a12 12 0 01-9.86-1.5 12 12 0 01-5.14-8.55l-3.39-27.77a12.14 12.14 0 012.89-9.55 12.17 12.17 0 019.12-4h37a48.13 48.13 0 0117.31 3.8 97.37 97.37 0 0114.48 8.68l56.61 42.42a4 4 0 005.1-.5l24.86-27.48a2.29 2.29 0 00.65-1.78 2.29 2.29 0 00-1-1.63l-7.17-5.38a5.08 5.08 0 00-5.92.31l-1.56 1.44a16 16 0 01-18.74 1.63l-66.23-42.67a29.27 29.27 0 00-12.19-3.76l-49.85-1.26a49.24 49.24 0 01-17.3-4.2L122.67 60.8a10.23 10.23 0 01-6.07-7.87 10.23 10.23 0 014-9.1l12-10a16.92 16.92 0 0118.82-1.26l33.43 20.95a3.74 3.74 0 004.82-.93l.21-.27a75.74 75.74 0 008-11.22c-5.68-6.33-27.23-19.82-41.87-28l-.52-.33a17.72 17.72 0 00-10.75-2.71l-14.8 2.09a33.29 33.29 0 00-12.19 4.94L90.7 36.76a39 39 0 00-9 10.12l-.17.28-5.34 8.21c-2.39 4.11-5.69 4-7 3.74-4-.76-5.79-5-6.59-9-3-2.84-12.61-11-23.48-9.18-20.14 3.33-22.41 12.13-24.82 21.44-.31 1.19-.62 2.36-.94 3.48-.74 2.52 1.52 9 7.53 14.13 4.42 3.77 13.82 9.18 27.1 2.91l10-4.73-6.23 21.45a54.14 54.14 0 00-2 10.9c.08.93 1.63 4.27 4.16 6.91l5.12 5.33a10.84 10.84 0 013.11 9.46 10.83 10.83 0 01-6.24 7.76l-43.7 20.88a4.12 4.12 0 00-2 4.8l4.65 12.92a2.92 2.92 0 001.52 1.66 2.86 2.86 0 002.24.08l72.71-27.37a3.83 3.83 0 002.23-4.46l-9.19-31.62c-1.65-5.66.91-8.63 2.09-9.64s4.5-3.11 9.85-.64l28.79 13.29a146.4 146.4 0 0114.65 8c.9.57 8.9 6.06 10.31 20.07 1.16 11.43 10.1 42.8 10.19 43.12a64.66 64.66 0 005.6 12.86zm83.13-17.76zm0 0zM126.39 51.38z\"\n            fill=\"#fff\"\n          />\n        </svg>\n      ) : (\n        <svg data-name=\"Layer 6\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 235.56 235.54\">\n          <defs />\n          <path\n            d=\"M214.71 121.48a71.16 71.16 0 10-113.63-17.8l-.58.49-96.51 90.6a12.55 12.55 0 00-.28 18.09l19 19a12.45 12.45 0 0018-.35l90-97.1c.11-.11.21-.24.31-.36a71.19 71.19 0 0083.69-12.57zm-86.67-14a51.41 51.41 0 1172.71 0 51.41 51.41 0 01-72.71.04z\"\n            fill=\"#f45b69\"\n          />\n        </svg>\n      )}\n    </div>\n  );\n}\n\nfunction ArtsyCloud({ index }) {\n  return (\n    <div className=\"cloud-background__cloud cloud-background__body-mark\">\n      <img src={`${PUBLIC_URL.ROOT}cloud-arte-ruim-${index}.jpg`} alt=\"cloud\" />\n    </div>\n  );\n}\n\nfunction getTypeComponent(type) {\n  switch (type) {\n    case 'cloud':\n      return Cloud;\n    case 'cyber-cloud':\n      return CyberCloud;\n    case 'funky-cloud':\n      return FunkyCloud;\n    case 'detective-cloud':\n      return DetectiveCloud;\n    case 'artsy-cloud':\n      return ArtsyCloud;\n    default:\n      return Cloud;\n  }\n}\n\nfunction CloudBackground({ type = 'cloud' }) {\n  const TypeComponent = getTypeComponent(type);\n\n  const baseClass = 'cloud-background';\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${type}`)}>\n      <div className=\"cloud-background__animation-1\">\n        <TypeComponent index={0} />\n      </div>\n\n      <div className=\"cloud-background__animation-2\">\n        <TypeComponent index={1} />\n      </div>\n\n      <div className=\"cloud-background__animation-3\">\n        <TypeComponent index={2} />\n      </div>\n\n      <div className=\"cloud-background__animation-4\">\n        <TypeComponent index={3} />\n      </div>\n\n      <div className=\"cloud-background__animation-5\">\n        <TypeComponent index={4} />\n      </div>\n    </div>\n  );\n}\n\nCloudBackground.propTypes = {\n  type: PropTypes.oneOf(['cloud', 'cyber-cloud', 'funky-cloud', 'detective-cloud', 'artsy-cloud']),\n};\n\nexport default CloudBackground;\n","import React from 'react';\n// Hooks\nimport useGlobalState from '../../hooks/useGlobalState';\n// Components\nimport { PhaseContainer } from '../shared';\nimport Join from './_private/Join';\nimport Waiting from './_private/Waiting';\nimport CloudBackground from './_private/CloudBackground';\nimport { AvatarEntry } from '../avatars';\n\nconst backgroundType = {\n  A: 'artsy-cloud',\n  E: 'cyber-cloud',\n  O: 'funky-cloud',\n  D: 'detective-cloud',\n  U: 'cloud',\n};\n\nfunction Lobby({ players, info }) {\n  const [userId] = useGlobalState('userId');\n  const [username] = useGlobalState('username');\n  const [userAvatarId] = useGlobalState('userAvatarId');\n\n  return (\n    <PhaseContainer phase=\"LOBBY\" allowedPhase=\"LOBBY\" info={info}>\n      <div className=\"lobby__room\">\n        {Object.values(players).map((player, index) => (\n          <AvatarEntry\n            key={player.name}\n            id={player.avatarId}\n            name={player.name}\n            className={`lobby__seat lobby__seat--${index}`}\n            animate\n          />\n        ))}\n\n        {userId && username && userAvatarId !== undefined ? (\n          <Waiting players={players} info={info} />\n        ) : (\n          <Join players={players} info={info} />\n        )}\n      </div>\n\n      <CloudBackground type={backgroundType?.[info.gameCode]} />\n    </PhaseContainer>\n  );\n}\n\nexport default Lobby;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n// Design Resources\nimport { Badge } from 'antd';\n// Utils\nimport { AVATARS } from '../../../utils/constants';\n// Hooks\nimport { useLanguage } from '../../../hooks';\n// Components\nimport { Avatar } from '../../avatars';\nimport { Translate } from '../../shared';\n\nexport function SectionMe({ player, isTeamGame }) {\n  const language = useLanguage();\n\n  return (\n    <div className=\"game-info-drawer__section-me\">\n      <div className=\"game-info-drawer__label\">\n        <Translate pt=\"Você é\" en=\"You are\" />\n        {isTeamGame && (\n          <Translate pt={` do time ${player?.team ?? '?'}`} en={` on team ${player?.team ?? '?'}`} />\n        )}\n      </div>\n      <div className=\"game-info-drawer__me\">\n        <Badge count={player.score} className=\"game-info-drawer__avatar-with-badge\">\n          <Avatar id={player.avatarId} shape=\"square\" />\n        </Badge>\n        {player.name}, {AVATARS[player.avatarId].description[language]}\n      </div>\n    </div>\n  );\n}\n\nSectionMe.propTypes = {\n  isTeamGame: PropTypes.bool,\n  player: PropTypes.shape({\n    avatarId: PropTypes.string,\n    name: PropTypes.string,\n    score: PropTypes.number,\n    team: PropTypes.string,\n  }),\n};\n\nSectionMe.defaultProps = {\n  isTeamGame: false,\n};\n","import PropTypes from 'prop-types';\nimport React, { Fragment } from 'react';\n// Design Resources\nimport { Avatar as AntAvatar, Table } from 'antd';\nimport { Translate } from '../../shared';\n\nexport function SectionMeta({ round, roundsToEndGame, groupScore, pointsToVictory, isTeamGame, teams }) {\n  return (\n    <ul className=\"game-info-drawer__meta\">\n      <li className=\"game-info-drawer__meta-item\">\n        <div className=\"game-info-drawer__label-inline\">\n          <Translate pt=\"Rodada:\" en=\"Round:\" />\n        </div>\n        <AntAvatar className=\"game-info-drawer__round\" size=\"small\">\n          {round?.current || round}\n        </AntAvatar>\n        {Boolean(round?.total || roundsToEndGame) && (\n          <Fragment>\n            <span className=\"game-info-drawer__inline-separator\">\n              <Translate pt=\"de\" en=\"out of\" />\n            </span>\n            <AntAvatar className=\"game-info-drawer__round\" size=\"small\">\n              {round?.total || round + roundsToEndGame}\n            </AntAvatar>\n          </Fragment>\n        )}\n      </li>\n\n      {Boolean(groupScore) && (\n        <li className=\"game-info-drawer__meta-item\">\n          <div className=\"game-info-drawer__label-inline\">\n            <Translate pt=\"Pontos:\" en=\"Points:\" />\n          </div>\n          <AntAvatar className=\"game-info-drawer__round\" size=\"default\" style={{ backgroundColor: 'gold' }}>\n            {groupScore ?? 0}\n          </AntAvatar>\n        </li>\n      )}\n\n      {Boolean(teams) && (\n        <li className=\"game-info-drawer__meta-item\">\n          <div className=\"game-info-drawer__label-inline\">\n            <Translate pt=\"Pontos:\" en=\"Points:\" />\n          </div>\n          <Table\n            size=\"small\"\n            pagination={false}\n            className\n            columns={Object.entries(teams).map(([teamId, teamObj]) => ({\n              title: teamObj?.name ?? teamId,\n              dataIndex: teamId,\n              key: teamId,\n              align: 'center',\n            }))}\n            dataSource={Object.entries(teams).reduce(\n              (acc, [teamId, teamObj]) => {\n                acc[0][teamId] = teamObj.score;\n                return acc;\n              },\n              [{}]\n            )}\n          />\n        </li>\n      )}\n\n      {Boolean(pointsToVictory) && (\n        <div>\n          <div className=\"game-info-drawer__label-inline\">\n            <Translate\n              pt={`Pontos restantes para ${isTeamGame ? 'um time' : 'alguém'} ganhar:`}\n              en={`Points left for ${isTeamGame ? 'a team' : 'someone'} to win:`}\n            />\n          </div>\n          <AntAvatar className=\"game-info-drawer__round\" size=\"small\">\n            {pointsToVictory}\n          </AntAvatar>\n        </div>\n      )}\n    </ul>\n  );\n}\n\nSectionMeta.propTypes = {\n  groupScore: PropTypes.number,\n  isTeamGame: PropTypes.bool,\n  pointsToVictory: PropTypes.number,\n  round: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.shape({ current: PropTypes.number, total: PropTypes.number }),\n  ]),\n  roundsToEndGame: PropTypes.number,\n  teams: PropTypes.objectOf(\n    PropTypes.shape({\n      score: PropTypes.number,\n    })\n  ),\n};\n","import PropTypes from 'prop-types';\nimport React, { useMemo } from 'react';\n// Utils\nimport { AVATARS } from '../../../utils/constants';\nimport { orderBy } from '../../../utils';\n// Components\nimport { Avatar } from '../../avatars';\nimport { Translate } from '../../shared';\nimport { useLanguage } from '../../../hooks';\n\nexport function SectionTeamPlayers({ team, players }) {\n  const language = useLanguage();\n\n  const sortedPlayers = useMemo(\n    () =>\n      orderBy(\n        team.members.map((playerId) => {\n          return players[playerId];\n        }),\n        'name'\n      ),\n    [players, team]\n  );\n\n  return (\n    <div className=\"game-info-drawer__team\" key={team.name}>\n      <h3>\n        <Translate pt=\"Time \" en=\"Team \" />\n        {team.name}\n      </h3>\n      <ul>\n        {sortedPlayers.map((player) => {\n          return (\n            <div className=\"game-info-drawer__ranked-player\" key={`ranked-${player.id}`}>\n              <Avatar id={player.avatarId} shape=\"square\" className=\"game-info-drawer__avatar-with-badge\" />\n              {player.name}, {AVATARS[player.avatarId].description[language]}\n            </div>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nSectionTeamPlayers.propTypes = {\n  players: PropTypes.objectOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      avatarId: PropTypes.string,\n    })\n  ).isRequired,\n  team: PropTypes.shape({\n    members: PropTypes.arrayOf(PropTypes.string),\n    name: PropTypes.string,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// Components\nimport { SectionTeamPlayers } from './SectionTeamPlayers';\n\nexport function SectionTeams({ players, teams }) {\n  return (\n    <div className=\"game-info-drawer__team-players\">\n      {Object.values(teams).map((team) => (\n        <SectionTeamPlayers key={team.name} team={team} players={players} />\n      ))}\n    </div>\n  );\n}\n\nSectionTeams.propTypes = {\n  players: PropTypes.objectOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      avatarId: PropTypes.string,\n      score: PropTypes.number,\n    })\n  ),\n  teams: PropTypes.objectOf(\n    PropTypes.shape({\n      members: PropTypes.arrayOf(PropTypes.string),\n      name: PropTypes.string,\n    })\n  ),\n};\n","import PropTypes from 'prop-types';\nimport React, { useMemo } from 'react';\n// Design Resources\nimport { Badge } from 'antd';\n// Hooks\nimport { useLanguage } from '../../../hooks';\n// Utils\nimport { AVATARS } from '../../../utils/constants';\nimport { orderBy } from '../../../utils';\n// Components\nimport { Avatar } from '../../avatars';\n\nexport function SectionRankedPlayers({ players }) {\n  const language = useLanguage();\n\n  const rankedPlayers = useMemo(() => orderBy(Object.values(players), 'score'), [players]);\n  return (\n    <ul>\n      {rankedPlayers.map((player, index) => {\n        return (\n          <div className=\"game-info-drawer__ranked-player\" key={`ranked-${player.name}`}>\n            {index + 1}.{' '}\n            <Badge count={player.score} className=\"game-info-drawer__avatar-with-badge\">\n              <Avatar id={player.avatarId} shape=\"square\" />\n            </Badge>\n            {player.name}, {AVATARS[player.avatarId].description[language]}\n          </div>\n        );\n      })}\n    </ul>\n  );\n}\n\nSectionRankedPlayers.propTypes = {\n  players: PropTypes.objectOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      avatarId: PropTypes.string,\n      score: PropTypes.number,\n    })\n  ),\n};\n","import PropTypes from 'prop-types';\nimport React, { Fragment, useState } from 'react';\n// Design Resources\nimport { Affix, Button, Divider, Drawer } from 'antd';\nimport { InfoCircleFilled } from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from '../../hooks';\n// Components\nimport { RulesModal } from '../modals';\nimport { SectionMe } from './_internal/SectionMe';\nimport { SectionMeta } from './_internal/SectionMeta';\nimport { SectionTeams } from './_internal/SectionTeams';\nimport { SectionRankedPlayers } from './_internal/SectionRankedPlayers';\nimport { LanguageSwitch } from '../shared';\n\nexport function GameInfoDrawer({ players, state, info, userId }) {\n  const language = useLanguage();\n  const [visible, setVisible] = useState(false);\n\n  if (state.phase === 'LOBBY') {\n    return <></>;\n  }\n\n  const showDrawer = () => {\n    setVisible(true);\n  };\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  const completeMe = players?.[userId] ?? {};\n  const isTeamGame = Boolean(completeMe?.team) && Boolean(state.teams);\n\n  return (\n    <Fragment>\n      <Affix offsetTop={10} className=\"game-info-drawer__affix-button\">\n        <Button\n          type=\"primary\"\n          shape=\"circle\"\n          size=\"large\"\n          className=\"game-info-drawer__button\"\n          onClick={showDrawer}\n          icon={<InfoCircleFilled style={{ color: 'white' }} />}\n        />\n      </Affix>\n\n      <Drawer\n        title={info?.title?.[language]}\n        placement=\"right\"\n        closable={false}\n        onClose={onClose}\n        visible={visible}\n      >\n        <LanguageSwitch />\n\n        <Divider />\n\n        {completeMe && <SectionMe player={completeMe} isTeamGame={isTeamGame} />}\n\n        <Divider />\n\n        <RulesModal gameInfo={info} />\n\n        <Divider />\n\n        <SectionMeta\n          round={state?.round || '?'}\n          roundsToEndGame={state?.roundsToEndGame}\n          groupScore={state?.groupScore}\n          pointsToVictory={state?.pointsToVictory}\n          isTeamGame={isTeamGame}\n          teams={state?.teams}\n        />\n\n        <Divider />\n\n        {isTeamGame ? (\n          <SectionTeams players={players} teams={state?.teams} />\n        ) : (\n          <SectionRankedPlayers players={players} />\n        )}\n      </Drawer>\n    </Fragment>\n  );\n}\n\nGameInfoDrawer.propTypes = {\n  info: PropTypes.shape({\n    title: PropTypes.shape({\n      pt: PropTypes.string,\n      en: PropTypes.string,\n    }),\n  }),\n  players: PropTypes.objectOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      avatarId: PropTypes.string,\n    })\n  ),\n  state: PropTypes.shape({\n    groupScore: PropTypes.number,\n    phase: PropTypes.string,\n    pointsToVictory: PropTypes.number,\n    round: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.shape({ current: PropTypes.number, total: PropTypes.number }),\n    ]),\n    roundsToEndGame: PropTypes.number,\n    teams: PropTypes.objectOf(\n      PropTypes.shape({\n        members: PropTypes.arrayOf(PropTypes.string),\n        name: PropTypes.string,\n      })\n    ),\n  }),\n  userId: PropTypes.string,\n};\n","import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useGameState, useGlobalState, useGamePlayers } from '../../hooks';\n// Utils\nimport gameList from '../../resources/games.json';\nimport { isDevEnv } from '../../utils';\n// Components\nimport Lobby from '../lobby/Lobby';\nimport { GameInfoDrawer } from '../drawers';\nimport { AdminMenu } from '../admin/index';\n\nexport function Session({ gameId, gameCollection, getActiveComponent }) {\n  const players = useGamePlayers(gameId, gameCollection);\n  const state = useGameState(gameId, gameCollection);\n  const [userId] = useGlobalState('userId');\n  const [info, setInfo] = useState({});\n\n  // Update game description as the gameId comes in\n  useEffect(() => {\n    setInfo(gameId?.[0] ? gameList[gameId[0]] : {});\n  }, [gameId]);\n\n  if (isDevEnv) {\n    console.table(players);\n    console.log({ state });\n  }\n\n  if (!userId) {\n    return <Lobby players={players} state={state} info={info} />;\n  }\n\n  const ActiveComponent = getActiveComponent(state.phase);\n\n  return (\n    <Fragment>\n      <GameInfoDrawer players={players} state={state} info={info} userId={userId} />\n      <ActiveComponent players={players} state={state} info={info} />\n      <AdminMenu state={state} />\n    </Fragment>\n  );\n}\n\nSession.propTypes = {\n  gameId: PropTypes.string.isRequired,\n  gameCollection: PropTypes.string.isRequired,\n  getActiveComponent: PropTypes.func.isRequired,\n};\n","import { notification } from 'antd';\nimport { useDocument } from 'react-firebase-hooks/firestore';\n// Services\nimport { firestore } from '../services/firebase';\n\nexport function useGamePlayers(gameId, gameName) {\n  const [snapshot, loading, error] = useDocument(firestore.doc(`${gameName}/${gameId}/session/players`), {\n    snapshotListenOptions: { includeMetadataChanges: true },\n  });\n\n  if (error) {\n    notification.error({\n      message: 'Applicativo encontrou um erro ao tentar atualizar os jogadores',\n      description: JSON.stringify(error),\n      placement: 'bottomLeft',\n    });\n    console.error(error);\n  }\n\n  if (loading) {\n    console.log('%cRefreshing players...', 'color:orange');\n  }\n\n  return snapshot?.data() ?? {};\n}\n","import { notification } from 'antd';\nimport { useDocument } from 'react-firebase-hooks/firestore';\n// Services\nimport { firestore } from '../services/firebase';\n\nexport function useGameState(gameId, gameName) {\n  const [snapshot, loading, error] = useDocument(firestore.doc(`${gameName}/${gameId}/session/state`), {\n    snapshotListenOptions: { includeMetadataChanges: true },\n  });\n\n  if (error) {\n    notification.error({\n      message: 'Aplicativo encontrou um erro ao tentar atualizar o estado do jogo',\n      description: JSON.stringify(error),\n      placement: 'bottomLeft',\n    });\n    console.error(error);\n  }\n\n  if (loading) {\n    console.log('%cRefreshing state...', 'color:tomato');\n  }\n\n  return snapshot?.data() ?? {};\n}\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { StarFilled } from '@ant-design/icons';\n// Components\nimport { Translate } from './Translate';\n\nexport const StarPoints = memo(function ({ quantity, keyPrefix, className = '' }) {\n  if (!quantity || quantity < 1) {\n    return <span></span>;\n  }\n  const starsArray = Array.from({ length: quantity }, (_, i) => <StarFilled key={`${keyPrefix}-${i}`} />);\n  return (\n    <span className={clsx('star-points', className)}>\n      + <span className=\"star-points__stars\">{starsArray}</span> <Translate pt=\"ponto\" en=\"point\" />\n      {quantity > 1 ? 's' : ''}\n    </span>\n  );\n});\n\nStarPoints.propTypes = {\n  quantity: PropTypes.number,\n  className: PropTypes.string,\n  keyPrefix: PropTypes.string.isRequired,\n};\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Components\nimport { Loading } from '../loaders';\n\nexport function StepSwitcher({ children, step, conditions }) {\n  if (!children[step]) {\n    return <Loading />;\n  }\n\n  return (conditions?.[step] ?? true) && <Fragment>{children[step]}</Fragment>;\n}\n\nStepSwitcher.propTypes = {\n  children: PropTypes.any.isRequired,\n  step: PropTypes.number.isRequired,\n  conditions: PropTypes.arrayOf(PropTypes.bool),\n};\n\nexport function Step({ children, fullWidth = false, className }) {\n  return <div className={clsx('step', fullWidth && 'step--full-width', className)}>{children}</div>;\n}\n\nStep.propTypes = {\n  children: PropTypes.any.isRequired,\n  fullWidth: PropTypes.bool,\n  className: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Button } from 'antd';\n// Hook and Utils\nimport { useTimer } from 'react-timer-hook';\nimport { inNSeconds } from '../../utils';\n\nexport function TimedButton({ duration, label, onExpire, showTimer, ...props }) {\n  const { seconds } = useTimer({\n    expiryTimestamp: inNSeconds(duration),\n    autoStart: true,\n    onExpire: showTimer ? onExpire : undefined,\n  });\n\n  const timeClass = 'timed-button__time';\n\n  return (\n    <Button {...props}>\n      {label} {showTimer && <span className={clsx(timeClass, `${timeClass}--${props.type}`)}>{seconds}</span>}\n    </Button>\n  );\n}\n\nTimedButton.propTypes = {\n  duration: PropTypes.number,\n  label: PropTypes.any.isRequired,\n  onExpire: PropTypes.func.isRequired,\n  showTimer: PropTypes.bool,\n};\n\nTimedButton.defaultProps = {\n  duration: 10,\n  showTimer: true,\n};\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nexport function View({ children }) {\n  return <Fragment>{children}</Fragment>;\n}\n\nexport function ViewIf({ isVisible = false, children }) {\n  return isVisible && <Fragment>{children}</Fragment>;\n}\n\nexport function ViewSwitch({ cases, children }) {\n  if (cases.length > 5) {\n    throw Error('ViewSwitch only supports up to 5 cases');\n  }\n\n  if (cases[0] && children[0]) {\n    return children[0];\n  }\n\n  if (cases[1] && children[1]) {\n    return children[1];\n  }\n\n  if (cases[2] && children[2]) {\n    return children[2];\n  }\n\n  if (cases[3] && children[3]) {\n    return children[3];\n  }\n\n  if (cases[4] && children[4]) {\n    return children[4];\n  }\n  console.warn('Rendering all children in the ViewSwitch');\n  return children;\n}\n\nView.propTypes = {\n  children: PropTypes.any.isRequired,\n};\n\nViewIf.propTypes = {\n  children: PropTypes.any.isRequired,\n  isVisible: PropTypes.bool,\n};\n\nViewIf.propTypes = {\n  children: PropTypes.any.isRequired,\n  cases: PropTypes.arrayOf(PropTypes.bool),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Spin } from 'antd';\n// Components\nimport { Instruction, ReadyPlayersBar, Title } from './index';\n\nexport function WaitingRoom({ players, title, instruction, children }) {\n  return (\n    <div className=\"waiting-room\">\n      <Title>{title}</Title>\n      <Spin />\n      <Instruction>{instruction}</Instruction>\n      {children}\n      <ReadyPlayersBar players={players} showNames />\n    </div>\n  );\n}\n\nWaitingRoom.propTypes = {\n  players: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n  instruction: PropTypes.string.isRequired,\n  children: PropTypes.any,\n};\n\nexport default WaitingRoom;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Layout, Spin, Typography } from 'antd';\nimport { Translate } from '../shared';\n\nexport function LoadingPage({ message }) {\n  return (\n    <Layout.Content className=\"loading-page\">\n      <Spin size=\"large\" />\n      <Typography.Text>\n        <Translate pt=\"Carregando...\" en=\"Loading...\" custom={message} />\n      </Typography.Text>\n    </Layout.Content>\n  );\n}\n\nLoadingPage.propTypes = {\n  message: PropTypes.string,\n};\n","import React, { Fragment, useCallback, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Image, Modal, message, Button, notification } from 'antd';\n// Adapters\nimport { GAME_API } from '../../adapters';\n// Hooks\nimport { useLanguage, useLoading } from '../../hooks';\n// Constants\nimport { PUBLIC_URL } from '../../utils/constants';\n// Components\nimport { Loading } from '../loaders';\nimport { Instruction, Title, Translate, translate } from '../shared';\n\nexport function CreateGameModal({ gameInfo }) {\n  const history = useHistory();\n  const language = useLanguage();\n  const [, setLoader] = useLoading();\n  const [isVisible, setVisibility] = useState(false);\n  const [isLoading, setLoading] = useState(true);\n  const [gameId, setGameId] = useState(null);\n\n  const onCloseModal = useCallback(() => {\n    setVisibility(false);\n  }, []);\n\n  useEffect(() => {\n    async function createGame() {\n      try {\n        setLoader('create', true);\n        const response = await GAME_API.initializeGame({ gameCode: gameInfo.gameCode, language });\n        if (response.data.gameId) {\n          setGameId(response.data.gameId);\n        }\n      } catch (e) {\n        notification.error({\n          message: translate(\n            'Applicativo encontrou um erro ao tentar criar o jogo',\n            'The application found an error while trying to create a game',\n            language\n          ),\n          description: JSON.stringify(e.message),\n          placement: 'bottomLeft',\n        });\n        console.error(e);\n        setVisibility(false);\n      } finally {\n        setLoading(false);\n        setLoader('create', false);\n      }\n    }\n\n    if (isVisible) {\n      createGame();\n    }\n  }, [isVisible]); // eslint-disable-line\n\n  const onConfirmGame = () => {\n    if (gameId) {\n      history.push(`/${gameId}`);\n    } else {\n      message.info(\n        translate('Péra! O jogo ainda não foi inicializado.', 'Wait! The game has not been created', language)\n      );\n    }\n  };\n\n  return (\n    <Fragment>\n      <Button type=\"primary\" onClick={() => setVisibility(true)}>\n        <Translate pt=\"Criar Jogo\" en=\"Create Game\" />\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`${translate('Criando jogo', 'Creating game', language)}: ${gameInfo.title[language]}`}\n          visible={isVisible}\n          onCancel={onCloseModal}\n          onOk={onConfirmGame}\n        >\n          <Fragment>\n            <Image\n              alt={gameInfo.title}\n              src={`${PUBLIC_URL.BANNERS}game-image-${gameInfo.gameName}-${language}.jpg`}\n              fallback={`${PUBLIC_URL.BANNERS}/game-image-em-breve-${language}.jpg`}\n            />\n\n            {isLoading ? (\n              <Fragment>\n                <Instruction>\n                  <Translate pt=\"O jogo está sendo criado...\" en=\"The game session is being created\" />\n                </Instruction>\n                <Loading message={translate('Gerando...', 'Generating...', language)} margin />\n              </Fragment>\n            ) : (\n              <div>\n                <Title className=\"center\">\n                  <Translate pt=\"Jogo inicializado\" en=\"Game Initialized\" />: {gameId}\n                </Title>\n                <Instruction>\n                  <Translate\n                    pt=\"Pressione OK para ser redirecionadx à página do jogo.\"\n                    en=\"Press OK to be redirected to the game page\"\n                  />\n                </Instruction>\n              </div>\n            )}\n          </Fragment>\n        </Modal>\n      )}\n    </Fragment>\n  );\n}\n\nCreateGameModal.propTypes = {\n  gameInfo: PropTypes.shape({\n    gameCode: PropTypes.string.isRequired,\n    gameName: PropTypes.string,\n    title: PropTypes.shape({\n      pt: PropTypes.string,\n      en: PropTypes.string,\n    }),\n  }),\n};\n","import React from 'react';\n// Design Resources\nimport { Button, Layout, Space, Typography } from 'antd';\nimport { CheckCircleFilled, MehFilled, RobotFilled, SmileFilled } from '@ant-design/icons';\n// State\nimport { GAME_API } from '../../adapters';\nimport { useLoading, useIsUserReady, useAPICall, useLanguage } from '../../hooks';\n// Components\nimport { RulesCarousel } from './index';\nimport { LoadingPage } from '../loaders';\nimport { ReadyPlayersBar, Translate, translate } from '../shared';\n\nexport function Rules({ players, info }) {\n  const [isLoading] = useLoading();\n  const language = useLanguage();\n  const isUserReady = useIsUserReady(players);\n\n  const onBeReady = useAPICall({\n    apiFunction: GAME_API.makePlayerReady,\n    actionName: 'be-ready',\n    successMessage: translate(\n      'Pronto! Aguarde os outros jogadores estarem prontos',\n      'Done! Now wait for the other players',\n      language\n    ),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar continuar',\n      'Oh no! The application found an error when trying to continue',\n      language\n    ),\n  });\n\n  const onBeReadyQue = useAPICall({\n    apiFunction: GAME_API.makePlayerReady,\n    actionName: 'be-ready',\n    successMessage: translate(\n      'Vixi, se fudeu então, porque o jogo vai começar!',\n      'Sorry, you are screwed because the game is starting anyway!',\n      language\n    ),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar continuar',\n      'Oh no! The application found an error when trying to continue',\n      language\n    ),\n  });\n\n  if (!info?.gameName) {\n    return <LoadingPage />;\n  }\n\n  return (\n    <Layout.Content className=\"rules\">\n      <Typography.Title className=\"center\">\n        <Translate pt=\"Regras do Jogo\" en=\"Game Rules\" />\n      </Typography.Title>\n\n      <RulesCarousel info={info} className=\"rules__carousel\" ruleClass=\"rules__rule\" />\n\n      <Space className=\"rules__actions\">\n        <Button\n          type=\"primary\"\n          icon={isUserReady ? <CheckCircleFilled /> : <SmileFilled />}\n          disabled={isLoading || isUserReady}\n          onClick={() => onBeReady({})}\n          loading={isLoading}\n        >\n          <Translate\n            pt=\"Entendi tudo e estou pronto para jogar!\"\n            en=\"I understood everything and I'm ready to play!\"\n          />\n        </Button>\n        <Button\n          icon={isUserReady ? <CheckCircleFilled /> : <MehFilled />}\n          disabled={isLoading || isUserReady}\n          onClick={() => onBeReady({})}\n          loading={isLoading}\n        >\n          <Translate pt=\"Não entendi nada, mas vamos lá!\" en=\"I don't get it but let's go!\" />\n        </Button>\n        <Button\n          type=\"primary\"\n          danger\n          icon={isUserReady ? <CheckCircleFilled /> : <RobotFilled />}\n          disabled={isLoading || isUserReady}\n          onClick={() => onBeReadyQue({})}\n          loading={isLoading}\n        >\n          <Translate pt=\"Quê?\" en=\"What?\" />\n        </Button>\n      </Space>\n      <ReadyPlayersBar players={players} showNames />\n    </Layout.Content>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Typography, Image, Carousel, Button } from 'antd';\n// Hooks\nimport { useLanguage } from '../../hooks';\n// Constants\nimport { PUBLIC_URL } from '../../utils/constants';\nimport { DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\n\nexport function RulesCarousel({ info, className, ruleClass }) {\n  const language = useLanguage();\n  const settings = {\n    prevArrow: (\n      <Button>\n        <DoubleLeftOutlined className=\"rules-carousel__nav rules-carousel__nav--left\" />\n      </Button>\n    ),\n    nextArrow: (\n      <Button>\n        <DoubleRightOutlined className=\"rules-carousel__nav rules-carousel__nav--right\" />\n      </Button>\n    ),\n  };\n\n  return (\n    <Carousel\n      className={clsx('rules-carousel', className)}\n      autoplay\n      autoplaySpeed={15000}\n      arrows\n      {...settings}\n    >\n      {info.rules[language].map((rule, index) => (\n        <div className={clsx('rules-carousel__rule', ruleClass)} key={rule}>\n          <span className=\"rules-carousel__rule-number\">{index + 1}</span>\n\n          <Image\n            className=\"rules-carousel__image\"\n            src={\n              index === 0\n                ? `${PUBLIC_URL.BANNERS}game-image-${info.gameName}-${language}.jpg`\n                : `${PUBLIC_URL.RULES}game-rule-${info.gameName}-${index}.jpg`\n            }\n            fallback={`${PUBLIC_URL.RULES}game-rule-not-found.jpg`}\n            alt={rule}\n          />\n          <Typography.Paragraph className=\"rules-carousel__rule-text\">{rule}</Typography.Paragraph>\n        </div>\n      ))}\n    </Carousel>\n  );\n}\n\nRulesCarousel.propTypes = {\n  info: PropTypes.shape({\n    gameName: PropTypes.string,\n    rules: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.shape({\n      pt: PropTypes.string,\n      en: PropTypes.string,\n    }),\n  }),\n  className: PropTypes.string,\n  ruleClass: PropTypes.string,\n};\n\nRulesCarousel.defaultProps = {\n  className: '',\n  ruleClass: '',\n};\n","import React from 'react';\n//\nimport { Collapse } from 'antd';\nimport { useLanguage } from '../../hooks';\nimport { translate } from '../shared';\n\nexport function CollapsibleRule({ children, title }) {\n  const language = useLanguage();\n  return (\n    <Collapse>\n      <Collapse.Panel header={translate('Regras', 'Rules', language, title)} key=\"1\">\n        {children}\n      </Collapse.Panel>\n    </Collapse>\n  );\n}\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\n\n// Design Resources\nimport { Button, Modal } from 'antd';\nimport { ReadOutlined } from '@ant-design/icons';\n// Components\nimport { RulesCarousel } from '../rules/index';\nimport { useLanguage } from '../../hooks';\nimport { Translate, translate } from '../shared';\n\nexport function RulesModal({ gameInfo }) {\n  const language = useLanguage();\n  const [isVisible, setVisibility] = useState(false);\n\n  const onCloseModal = () => {\n    setVisibility(false);\n  };\n\n  return (\n    <Fragment>\n      <Button type=\"default\" onClick={() => setVisibility(true)} icon={<ReadOutlined />}>\n        <Translate pt=\"Regras\" en=\"Rules\" />\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`${translate('Regras', 'Rules', language)}: ${gameInfo.title[language]}`}\n          visible={isVisible}\n          onCancel={onCloseModal}\n          className=\"rules-modal\"\n          footer={[\n            <Button key=\"close\" onClick={onCloseModal}>\n              <Translate pt=\"Fechar\" en=\"Close\" />\n            </Button>,\n          ]}\n        >\n          <RulesCarousel info={gameInfo} />\n        </Modal>\n      )}\n    </Fragment>\n  );\n}\n\nRulesModal.propTypes = {\n  gameInfo: PropTypes.shape({\n    gameName: PropTypes.string,\n    rules: PropTypes.shape({\n      pt: PropTypes.arrayOf(PropTypes.string),\n      en: PropTypes.arrayOf(PropTypes.string),\n    }),\n    title: PropTypes.shape({\n      pt: PropTypes.string,\n      en: PropTypes.string,\n    }),\n  }),\n};\n","import React from 'react';\nimport { message } from 'antd';\n\n/**\n * Pops up a modal with a confirmation button but also closing timeout\n * @param {string} title\n * @param {string} description\n * @param {string} id\n * @param {number} duration\n * @returns\n */\nexport const messageContent = (title, description, id, duration = 30) => {\n  const key = `${id} - ${title}`;\n\n  return {\n    content: (\n      <div>\n        <h1>{title}</h1>\n        <p>{description}</p>\n        <p>\n          <small>Click para fechar</small>\n        </p>\n      </div>\n    ),\n    top: window.innerWidth / 2 - 100,\n    duration,\n    key,\n    onClick: () => message.destroy(key),\n  };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Typography, Layout, Space, Card, Image, Divider, Tag } from 'antd';\n// Hooks\nimport { useDimensions, useLanguage } from '../hooks';\n// Utils\nimport gameList from '../resources/games.json';\nimport { PUBLIC_URL, TAG_DICT } from '../utils/constants';\nimport { orderBy } from '../utils';\n// Components\nimport { CreateGameModal, RulesModal } from './modals';\nimport { LanguageSwitch, Translate, translate } from './shared';\n\nfunction GameCard({ game, language }) {\n  const [width] = useDimensions();\n\n  return (\n    <Card\n      key={game.gameName}\n      hoverable\n      style={{ width: width && width > 0 ? Math.max(width / 5, 250) : 250 }}\n      cover={\n        <Image\n          alt={game.title[language]}\n          src={`${PUBLIC_URL.BANNERS}game-image-${game.gameName}-${language}.jpg`}\n          fallback={`${PUBLIC_URL.BANNERS}/game-image-em-breve-${language}.jpg`}\n        />\n      }\n    >\n      <Card.Meta title={game.title[language]} description={game.summary[language]} />\n      <Divider />\n      <Card.Meta\n        description={translate(\n          `Para ${game.min}-${game.max} jogadores`,\n          `For ${game.min}-${game.max} players`,\n          language\n        )}\n      />\n      <Card.Meta\n        description={translate(\n          `Recomendado jogar com ${game.recommended}`,\n          `Recommended with ${game.recommended}`,\n          language\n        )}\n      />\n      <Divider />\n      <Space wrap size={[1, 6]}>\n        {game.tags.map((tag) => (\n          <Tag key={`${game.gameCode}-${tag}`} color={TAG_DICT[tag]?.color}>\n            {language === 'pt' ? TAG_DICT[tag]?.label : tag}\n          </Tag>\n        ))}\n      </Space>\n      <Divider />\n      <Space>\n        <RulesModal gameInfo={game} />\n        {Boolean(game.available[language]) && <CreateGameModal gameInfo={game} />}\n      </Space>\n    </Card>\n  );\n}\n\nGameCard.propTypes = {\n  game: PropTypes.shape({\n    available: PropTypes.shape({\n      pt: PropTypes.bool,\n      en: PropTypes.bool,\n    }),\n    gameCode: PropTypes.string,\n    gameName: PropTypes.string,\n    max: PropTypes.number,\n    min: PropTypes.number,\n    recommended: PropTypes.string,\n    summary: PropTypes.shape({\n      pt: PropTypes.string,\n      en: PropTypes.string,\n    }),\n    tags: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.shape({\n      pt: PropTypes.string,\n      en: PropTypes.string,\n    }),\n  }),\n};\n\nfunction Hub() {\n  const language = useLanguage();\n  const sortedGameList = orderBy(Object.values(gameList), ['available', 'title'], ['desc', 'asc']);\n\n  const { availableGames, comingSoonGames } = sortedGameList.reduce(\n    (acc, game) => {\n      if (game.available[language]) {\n        acc.availableGames.push(game);\n      } else {\n        acc.comingSoonGames.push(game);\n      }\n      return acc;\n    },\n    {\n      availableGames: [],\n      comingSoonGames: [],\n    }\n  );\n\n  return (\n    <Layout.Content className=\"container\">\n      <Typography.Title>\n        Hub <LanguageSwitch />\n      </Typography.Title>\n\n      <Typography.Paragraph>\n        <Translate pt=\"Selecione um jogo para começar\" en=\"Select a game to start\" />\n      </Typography.Paragraph>\n      <Space size={[8, 16]} wrap align=\"start\">\n        {availableGames.map((game) => (\n          <GameCard key={game.code} game={game} language={language} />\n        ))}\n      </Space>\n      <Divider />\n      <Typography.Title level={2}>\n        <Translate pt=\"Em Breve\" en=\"Coming Soon\" />\n      </Typography.Title>\n      <Space size={[8, 16]} wrap align=\"start\">\n        {comingSoonGames.map((game) => (\n          <GameCard key={game.code} game={game} language={language} />\n        ))}\n      </Space>\n    </Layout.Content>\n  );\n}\n\nexport default Hub;\n","import { auth } from '../services/firebase';\n\n/**\n * Sign up user via email through firebase auth\n * @param {string} email\n * @param {string} password\n * @returns {Promise}\n */\nexport function signUp(email, password) {\n  return auth.createUserWithEmailAndPassword(email, password);\n}\n\n/**\n * Sign in user via email through firebase auth\n * @param {string} email\n * @param {string} password\n * @returns {Promise}\n */\nexport function signIn(email, password) {\n  return auth.signInWithEmailAndPassword(email, password);\n}\n\n/**\n * Sign out current user\n * @returns {Promise}\n */\nexport async function signOut() {\n  return auth.signOut().then(() => {\n    alert(`You've been signed out`);\n  });\n}\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\n// Design Resources\nimport { Layout, Button, Form, Input, Alert, Image } from 'antd';\n// API\nimport { signIn } from '../adapters/auth';\n// State\nimport { useGlobalState } from '../hooks';\n// Image\nimport logo from '../images/tarde-divertida-logo.svg';\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 0, span: 8 },\n};\n\nfunction Login() {\n  const history = useHistory();\n  const [, setIsAuthenticated] = useGlobalState('isAuthenticated');\n\n  const [error, setError] = useState(null);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const onValuesChange = (data) => {\n    if (data.email) {\n      setEmail(data.email.trim());\n    }\n    if (data.password) {\n      setPassword(data.password.trim());\n    }\n  };\n\n  const onHandleSubmit = async () => {\n    setError('');\n    try {\n      const response = await signIn(email, password);\n      if (response?.user?.uid) {\n        setIsAuthenticated(true);\n        history.push('/admin');\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <Layout.Content className=\"login\">\n      <div className=\"login__content\">\n        <div className=\"login__logo\">\n          <Image src={logo} preview={false} />\n        </div>\n\n        {Boolean(error) && (\n          <Alert message=\"Error\" description={error} type=\"error\" showIcon className=\"login__error-alert\" />\n        )}\n        <Form\n          {...layout}\n          layout=\"horizontal\"\n          name=\"sign-in\"\n          onValuesChange={onValuesChange}\n          className=\"login__form\"\n          autoComplete=\"off\"\n        >\n          <Form.Item {...tailLayout} label=\"E-mail\" name=\"email\" className=\"login__form-item\">\n            <Input type=\"email\" />\n          </Form.Item>\n          <Form.Item {...tailLayout} label=\"Password\" name=\"password\" className=\"login__form-item\">\n            <Input type=\"password\" />\n          </Form.Item>\n          <div className=\"login__form-action\">\n            <Button type=\"primary\" onClick={onHandleSubmit}>\n              Login\n            </Button>\n          </div>\n        </Form>\n      </div>\n    </Layout.Content>\n  );\n}\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/arte-ruim-timer.1f16745a.mp3\";","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { WarningOutlined } from '@ant-design/icons';\nimport { getColorFromLetter } from '../../utils';\n// Components\nimport { Card } from './index';\n\nexport const ArteRuimCard = memo(function ({ text, level, header = 'X' }) {\n  return (\n    <Card\n      color={getColorFromLetter(header)}\n      header={header}\n      size=\"medium\"\n      footer={Array(level).fill('•').join('')}\n    >\n      {text ?? <WarningOutlined />}\n    </Card>\n  );\n});\n\nArteRuimCard.propTypes = {\n  text: PropTypes.string.isRequired,\n  header: PropTypes.string,\n  level: PropTypes.number,\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { getColorFromLetter } from '../../utils';\n\nexport const Card = memo(function ({\n  children,\n  header,\n  footer,\n  color,\n  size,\n  randomColor,\n  className,\n  headerClassName,\n  footerClassName,\n}) {\n  const baseClass = 'card';\n\n  const bgColor = randomColor ? getColorFromLetter(typeof children === 'string' ? children[0] : 'X') : color;\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, className)}>\n      <span className={clsx(`${baseClass}__header`, `color-background--${bgColor}`, headerClassName)}>\n        {header}\n      </span>\n      <span className={`${baseClass}__text`}>{children}</span>\n      {footer && <span className={clsx(`${baseClass}__footer`, footerClassName)}>{footer}</span>}\n    </div>\n  );\n});\n\nCard.propTypes = {\n  children: PropTypes.any.isRequired,\n  header: PropTypes.string,\n  footer: PropTypes.string,\n  color: PropTypes.string,\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  randomColor: PropTypes.bool,\n  className: PropTypes.string,\n  headerClassName: PropTypes.string,\n  footerClassName: PropTypes.string,\n};\n\nCard.defaultProps = {\n  header: 'Carta',\n  color: 'none',\n  size: 'medium',\n  randomColor: false,\n  className: '',\n  headerClassName: '',\n  footerClassName: '',\n};\n\nexport default memo(Card);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { QuestionCircleFilled } from '@ant-design/icons';\n// Components\nimport { Card } from './index';\n\nexport const EspiaoEntreNosCard = memo(function ({ location, role, header = 'Local' }) {\n  return (\n    <Card\n      color={location === 'SPY' ? 'red' : 'lime'}\n      header={location === 'SPY' ? 'Local Desconhecido' : header}\n      size=\"large\"\n      footer={`Você é ${role === 'SPY' ? 'o espião' : `um(a) ${role}`} `}\n      className=\"e-card\"\n      footerClassName=\"e-card__footer\"\n    >\n      {location === 'SPY' ? <QuestionCircleFilled /> : location}\n    </Card>\n  );\n});\n\nEspiaoEntreNosCard.propTypes = {\n  location: PropTypes.string,\n  header: PropTypes.string,\n  role: PropTypes.string,\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Image } from 'antd';\nimport { PUBLIC_URL } from '../../utils/constants';\n\nexport const ImageCard = memo(function ({ imageId, size, cardWidth, className }) {\n  const baseClass = 'image-card';\n\n  const fallbackName = `placeholder-${imageId[imageId.length - 1]}`;\n\n  const imageURL = imageId.replace(/-/g, '/');\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, className)}>\n      <Image\n        width={cardWidth}\n        src={`${process.env.REACT_APP_IMG_URL}${imageURL}.jpg`}\n        fallback={`${PUBLIC_URL.CARDS}${fallbackName}.jpg`}\n        preview={{\n          maskClassName: `${baseClass}__preview-mask`,\n        }}\n      />\n    </div>\n  );\n});\n\nImageCard.propTypes = {\n  imageId: PropTypes.string.isRequired,\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  bordered: PropTypes.bool,\n  cardWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  className: PropTypes.string,\n};\n\nImageCard.defaultProps = {\n  size: 'medium',\n  className: '',\n  bordered: false,\n  cardWidth: 200,\n};\n\nexport default memo(ImageCard);\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Button } from 'antd';\nimport { DownSquareOutlined } from '@ant-design/icons';\n// Hooks\nimport { useDimensions } from '../../hooks';\n// Components\nimport { ImageCard } from '.';\n\nexport function ImageCardHand({\n  hand = [],\n  onSelectCard,\n  selectButtonLabel,\n  className,\n  selectButtonClass,\n  sizeRatio,\n  cardSize,\n  disabledSelectButton,\n}) {\n  const [screenWidth] = useDimensions();\n  // Prefers cardSize otherwise calculates width based on screen and ratio\n  const cardWidth = useMemo(() => cardSize || screenWidth / sizeRatio || 200, [\n    cardSize,\n    screenWidth,\n    sizeRatio,\n  ]);\n\n  return (\n    <div className={clsx('image-card-hand', className)}>\n      {hand.map((cardId) => {\n        return (\n          <div key={`hand-${cardId}`} className=\"image-card-hand__card-container\">\n            {Boolean(onSelectCard) && (\n              <Button\n                icon={<DownSquareOutlined />}\n                className={selectButtonClass}\n                onClick={() => onSelectCard(cardId)}\n                size=\"small\"\n                ghost\n                disabled={disabledSelectButton}\n              >\n                {selectButtonLabel}\n              </Button>\n            )}\n            <ImageCard imageId={cardId} cardWidth={cardWidth} />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nImageCardHand.propTypes = {\n  cardSize: PropTypes.number,\n  className: PropTypes.string,\n  disabledSelectButton: PropTypes.bool,\n  hand: PropTypes.arrayOf(PropTypes.string),\n  onSelectCard: PropTypes.func,\n  selectButtonClass: PropTypes.string,\n  selectButtonLabel: PropTypes.string,\n  sizeRatio: PropTypes.number,\n};\n\nImageCardHand.defaultProps = {\n  className: '',\n  disabledSelectButton: false,\n  hand: [],\n  onSelectCard: null,\n  selectButtonClass: '',\n  sizeRatio: 8,\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { WarningOutlined } from '@ant-design/icons';\n// Components\nimport { Card } from './index';\n\nexport const UeSoIssoCard = memo(function ({ word, header = 'Palavra Secreta' }) {\n  return (\n    <Card color=\"purple\" header={header} size=\"large\">\n      {word ?? <WarningOutlined />}\n    </Card>\n  );\n});\n\nUeSoIssoCard.propTypes = {\n  word: PropTypes.any.isRequired,\n  title: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\n// Design Resources\nimport { Slider } from 'antd';\n// State & Hooks\nimport { useDimensions, useGlobalState } from '../../hooks';\n// Components\nimport { Translate } from '../shared';\n\nexport const CanvasReSizer = ({ numPlayers = 5 }) => {\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n  const [cachedCanvasSize] = useGlobalState('cachedCanvasSize');\n  const [width] = useDimensions();\n\n  useEffect(() => {\n    if (canvasSize === 250 || canvasSize !== cachedCanvasSize) {\n      setCanvasSize(Math.round(width / numPlayers) - 30);\n    }\n  }, [width]); // eslint-disable-line\n\n  return (\n    <div className=\"canvas-resizer\">\n      <div className=\"canvas-resizer__label\">\n        <Translate pt=\"Tamanho das Images\" en=\"Image Size\" />\n      </div>\n      <Slider\n        className=\"canvas-resizer__slider\"\n        defaultValue={canvasSize}\n        min={100}\n        max={500}\n        step={50}\n        onChange={setCanvasSize}\n      />\n    </div>\n  );\n};\n\nCanvasReSizer.propTypes = {\n  numPlayers: PropTypes.number,\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nconst getPathFromKonvaLines = (lines) => {\n  const result = lines.map((lineArr) => {\n    let path = '';\n    for (let x = 0, y = 1; y < lineArr.length; x += 2, y += 2) {\n      if (lineArr[x + 2] && lineArr[y + 2]) {\n        path += `M${lineArr[x]},${lineArr[y]} L${lineArr[x + 2]},${lineArr[y + 2]}`;\n      }\n    }\n\n    return path;\n  });\n\n  return result;\n};\n\nexport const CanvasSVG = memo(function ({ drawing = '', className = '', size = 250 }) {\n  const konvaLines = JSON.parse(drawing);\n  const paths = getPathFromKonvaLines(konvaLines);\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 500 500\"\n      overflow=\"hidden\"\n      className={className}\n      style={{ width: `${size}px` }}\n    >\n      <defs />\n      {paths.map((path, index) => (\n        <path\n          key={`${drawing}-${index}`}\n          d={path}\n          fill=\"none\"\n          stroke=\"#000\"\n          strokeWidth=\"4\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit=\"10\"\n        />\n      ))}\n    </svg>\n  );\n});\n\nCanvasSVG.propTypes = {\n  className: PropTypes.string,\n  drawing: PropTypes.string.isRequired,\n  size: PropTypes.number,\n};\n\nCanvasSVG.defaultProps = {\n  size: 250,\n};\n","import React, { useRef } from 'react';\nimport { Stage, Layer, Line } from 'react-konva';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n\nexport const DrawingCanvas = ({ lines, setLines, className = '' }) => {\n  const isDrawing = useRef(false);\n\n  const handleMouseDown = (e) => {\n    isDrawing.current = true;\n    const pos = e.target.getStage().getPointerPosition();\n    setLines([...lines, [pos.x, pos.y]]);\n  };\n\n  const handleMouseMove = (e) => {\n    // no drawing - skipping\n    if (!isDrawing.current) {\n      return;\n    }\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    let lastLine = lines[lines.length - 1];\n    // add point\n    lastLine = lastLine.concat([point.x, point.y]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLine);\n    setLines(lines.concat());\n  };\n\n  const handleMouseUp = () => {\n    isDrawing.current = false;\n  };\n\n  return (\n    <Stage\n      width={500}\n      height={500}\n      onMouseDown={handleMouseDown}\n      onMousemove={handleMouseMove}\n      onMouseup={handleMouseUp}\n      onTouchStart={handleMouseDown}\n      onTouchMove={handleMouseMove}\n      onTouchEnd={handleMouseUp}\n      className={clsx('drawing-canvas', className)}\n    >\n      <Layer>\n        {lines.map((line, i) => (\n          <Line\n            key={i}\n            points={line}\n            stroke=\"#222222\"\n            strokeWidth={5}\n            tension={0.5}\n            lineCap=\"round\"\n            globalCompositeOperation=\"source-over\"\n          />\n        ))}\n      </Layer>\n    </Stage>\n  );\n};\n\nDrawingCanvas.propTypes = {\n  className: PropTypes.string,\n  lines: PropTypes.array.isRequired,\n  setLines: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTimer } from 'react-timer-hook';\n// Utils\nimport { inNSeconds } from '../../../utils';\n// Components\nimport { Step, translate } from '../../shared';\nimport { Card } from '../../cards';\nimport { DrawingCanvas } from '../../canvas';\nimport { useLanguage } from '../../../hooks';\n\nfunction DrawPhaseDrawStep({ secretCard, onSubmitDrawing }) {\n  const language = useLanguage();\n  const [lines, setLines] = useState([]);\n\n  const { seconds } = useTimer({\n    expiryTimestamp: inNSeconds(11),\n    autoStart: true,\n    onExpire: () =>\n      onSubmitDrawing({\n        drawing: JSON.stringify(lines),\n        cardId: secretCard.id,\n      }),\n  });\n\n  return (\n    <Step>\n      <Card\n        size=\"large\"\n        header={translate('Desenhe', 'Draw', language)}\n        footer={Array(secretCard?.level).fill('•').join('')}\n        className=\"a-draw-step__card\"\n        color=\"yellow\"\n      >\n        {secretCard?.text}\n        <span className=\"a-draw-step__timer\">{seconds > 0 ? seconds - 1 : 0}</span>\n      </Card>\n      <DrawingCanvas lines={lines} setLines={setLines} />\n    </Step>\n  );\n}\n\nDrawPhaseDrawStep.propTypes = {\n  onSubmitDrawing: PropTypes.func.isRequired,\n  secretCard: PropTypes.shape({\n    id: PropTypes.string,\n    level: PropTypes.number,\n    text: PropTypes.string,\n  }).isRequired,\n};\n\nexport default DrawPhaseDrawStep;\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport useSound from 'use-sound';\n// State & Hooks\nimport { useIsUserReady, useAPICall, useUser, useLanguage } from '../../../hooks';\n// Resources & Utils\nimport { ARTE_RUIM_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\nimport arteRuimTimer from '../../../sounds/arte-ruim-timer.mp3';\n// Components\nimport {\n  Instruction,\n  PhaseAnnouncement,\n  PhaseContainer,\n  RoundAnnouncement,\n  Step,\n  StepSwitcher,\n  translate,\n  Translate,\n  WaitingRoom,\n} from '../../shared';\nimport DrawPhaseDrawStep from './DrawPhaseDrawStep';\n\nfunction PhaseDraw({ players, state, info }) {\n  const isUserReady = useIsUserReady(players, state);\n  const language = useLanguage();\n  const user = useUser(players);\n  const [step, setStep] = useState(0);\n  const [secretCard, setSecretCard] = useState({});\n  const [play] = useSound(arteRuimTimer, { volume: 0.4 });\n\n  useEffect(() => {\n    setSecretCard(players[user?.id]?.currentCard ?? {});\n  }, [players, user?.id]);\n\n  const onSubmitDrawing = useAPICall({\n    apiFunction: ARTE_RUIM_API.submitDrawing,\n    actionName: 'submit-drawing',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(1),\n    successMessage: translate(\n      'Acabou o tempo! Aguarde enquanto os outros participantes desenham',\n      \"Time's up! Wait for the other players to finish their art\",\n      language\n    ),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar o desenho',\n      'Oops, the application fail to send your art',\n      language\n    ),\n  });\n\n  const onStartDrawing = () => {\n    play();\n    setStep(2);\n  };\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.ARTE_RUIM.DRAW} className=\"a-phase\">\n      <StepSwitcher step={step} conditions={[!isUserReady, !isUserReady, !isUserReady]}>\n        {/* Step 0 */}\n        <RoundAnnouncement round={state?.round} onPressButton={() => setStep(1)} buttonText=\" \" time={5} />\n\n        {/* Step 1 */}\n        <PhaseAnnouncement\n          type=\"painting\"\n          title={translate('Desenhe!', 'Draw!', language)}\n          buttonText={translate('Um dó, lá, si... vamos ir... já!', 'Ready! Set! Go!', language)}\n          onClose={onStartDrawing}\n          currentRound={state?.round?.current}\n          withoutTimer\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  Você terá 10 segundos para ler a sua carta e desenhá-la.\n                  <br />\n                  Aperte o botão quando estiver pronto!\n                  <br />\n                  Não vale usar números e letras.\n                  <br />\n                  Fique esperto porque o tempo começa assim que você apertar.\n                </>\n              }\n              en={\n                <>\n                  You'll have 10 seconds to read and draw your card.\n                  <br />\n                  Press the button when you're ready!\n                  <br />\n                  You can use numbers or letters.\n                  <br />\n                  Be aware of the timer! It starts as soon as you press the button.\n                </>\n              }\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 2 */}\n        <DrawPhaseDrawStep secretCard={secretCard} onSubmitDrawing={onSubmitDrawing} />\n\n        {/* Step 3 */}\n        <Step fullWidth>\n          <WaitingRoom\n            players={players}\n            title={translate('Pronto!', 'Done!', language)}\n            instruction={translate(\n              'Vamos aguardar enquanto os outros jogadores terminam seus desenhos!',\n              'Please wait while other players finish their artwork!',\n              language\n            )}\n          />\n        </Step>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nPhaseDraw.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.shape({\n    phase: PropTypes.string,\n    round: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.shape({ current: PropTypes.number, total: PropTypes.number }),\n    ]),\n  }),\n};\n\nexport default PhaseDraw;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { getColorFromLetter } from '../../../utils';\n\nfunction Ribbon({ cardEntryId }) {\n  const [, , letter] = cardEntryId.split('::');\n  return (\n    <div className=\"a-ribbon\">\n      <div\n        className={`a-ribbon__content a-ribbon__content--${letter} color-background--${getColorFromLetter(\n          letter\n        )}`}\n      >\n        {letter}\n      </div>\n    </div>\n  );\n}\n\nRibbon.propTypes = {\n  cardEntryId: PropTypes.string,\n};\n\nexport default Ribbon;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Components\nimport { CanvasSVG } from '../../canvas';\nimport Ribbon from './Ribbon';\n\nfunction EvaluationAllDrawings({ drawings, activeItem, onActivateItem, votes, canvasSize, players }) {\n  const liButtonBaseClass = 'a-evaluation-all-drawings__li-drawing-button';\n\n  return (\n    <ul className=\"a-evaluation-all-drawings\">\n      {drawings?.map((drawingEntry) => {\n        const canvasEntryId = `drawing::${drawingEntry.id}`;\n        const isActive = activeItem === canvasEntryId;\n        return (\n          <li\n            key={canvasEntryId}\n            className={clsx(liButtonBaseClass, isActive && `${liButtonBaseClass}--active`)}\n            onClick={() => onActivateItem(canvasEntryId)}\n          >\n            {votes?.[canvasEntryId] && <Ribbon cardEntryId={votes[canvasEntryId]} />}\n            <CanvasSVG\n              drawing={drawingEntry.drawing}\n              className=\"a-evaluation-all-drawings__drawing\"\n              size={canvasSize}\n            />\n            <span className=\"a-evaluation-all-drawings__artist\">{players[drawingEntry.playerId].name}</span>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nEvaluationAllDrawings.propTypes = {\n  activeItem: PropTypes.string,\n  canvasSize: PropTypes.number,\n  drawings: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      drawing: PropTypes.string,\n      playerId: PropTypes.string,\n    })\n  ),\n  onActivateItem: PropTypes.func,\n  onActiveItem: PropTypes.func,\n  votes: PropTypes.object,\n  players: PropTypes.object,\n};\n\nexport default EvaluationAllDrawings;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Utils\nimport { LETTERS } from '../../../utils/constants';\n// Components\nimport { ArteRuimCard as Card } from '../../cards';\n\nfunction EvaluationAllCards({ cards, activeItem, onActivateItem, votes }) {\n  const liButtonBaseClass = 'a-evaluation-all-cards__li-card-button';\n\n  return (\n    <ul className=\"a-evaluation-all-cards\">\n      {cards.map((cardEntry, index) => {\n        const letter = LETTERS[index];\n        const cardEntryId = `card::${cardEntry.id}::${letter}`;\n        const isActive = activeItem === cardEntryId;\n        const isUsed = Object.values(votes).includes(cardEntryId);\n\n        return (\n          <li\n            role=\"button\"\n            key={cardEntryId}\n            className={clsx(\n              liButtonBaseClass,\n              isActive && `${liButtonBaseClass}--active`,\n              isUsed && `${liButtonBaseClass}--used`\n            )}\n            onClick={() => onActivateItem(cardEntryId)}\n          >\n            <Card text={cardEntry.text} level={cardEntry.level} header={letter} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nEvaluationAllCards.propTypes = {\n  activeItem: PropTypes.string,\n  cards: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n    })\n  ),\n  onActivateItem: PropTypes.func,\n  onActiveItem: PropTypes.func,\n  votes: PropTypes.object,\n};\n\nexport default EvaluationAllCards;\n","import PropTypes from 'prop-types';\nimport React, { useCallback, useEffect, useState } from 'react';\n// Design Resources\nimport { Button } from 'antd';\nimport { CloudUploadOutlined, ThunderboltOutlined } from '@ant-design/icons';\n// Hooks\nimport { useIsUserReady, useGlobalState, useAPICall, useLanguage } from '../../../hooks';\n// Utils\nimport { ARTE_RUIM_API } from '../../../adapters';\nimport { LETTERS, PHASES, SEPARATOR } from '../../../utils/constants';\n// Components\nimport {\n  ButtonContainer,\n  Instruction,\n  PhaseContainer,\n  StepSwitcher,\n  Step,\n  Title,\n  WaitingRoom,\n  ReadyPlayersBar,\n  PhaseAnnouncement,\n  translate,\n  Translate,\n} from '../../shared';\nimport EvaluationAllDrawings from './EvaluationAllDrawings';\nimport EvaluationAllCards from './EvaluationAllCards';\nimport { CanvasReSizer } from '../../canvas';\nimport { shuffle } from '../../../utils';\nimport { CollapsibleRule } from '../../rules';\n\nfunction prepareVotes(votes) {\n  return Object.entries(votes).reduce((acc, [drawingEntryId, cardEntryId]) => {\n    const [, drawingId] = drawingEntryId.split(SEPARATOR);\n    const [, cardId] = cardEntryId.split(SEPARATOR);\n    acc[drawingId] = cardId;\n    return acc;\n  }, {});\n}\n\nconst EvaluationRules = () => (\n  <Instruction>\n    <Translate\n      pt={\n        <>\n          Encontre os pares de desenho e carta clicando em uma carta ou desenho e em seguida clicando em seu\n          par.\n          <br />\n          Uma bandeirinha aparecerá no topo de cada desenho com a cor e letra da carta que você selecionou.\n          <br />\n          Quando encontrar todos os pares, envie sua avaliação!\n        </>\n      }\n      en={\n        <>\n          Find the pairs of artwork and card by clicking on a card or artwork then on its match.\n          <br />\n          A ribbon will show up on the artwork with the color and letter of the matching card.\n          <br />\n          When you're done, click the button to send your evaluation!\n        </>\n      }\n    />\n  </Instruction>\n);\n\nfunction EvaluationPhase({ players, state, info }) {\n  const language = useLanguage();\n  const isUserReady = useIsUserReady(players, state);\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n  const [cachedCanvasSize] = useGlobalState('cachedCanvasSize');\n  const [step, setStep] = useState(0);\n  const [votes, setVotes] = useState({});\n  const [activeItem, setActiveItem] = useState(null);\n\n  const onSubmitVoting = useAPICall({\n    apiFunction: ARTE_RUIM_API.submitVoting,\n    actionName: 'submit-drawing',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: translate(\n      'Avaliação enviada! Agora aguarde os outros jogadores',\n      'Evaluation sent successfully! Wait for the other players',\n      language\n    ),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua avaliação',\n      'Oops, the application fail to send your evaluation',\n      language\n    ),\n  });\n\n  const onGuessForMe = () => {\n    const usedDrawings = Object.keys(votes);\n    const usedCards = Object.values(votes);\n    const drawingsKeys = state?.drawings\n      .map((e) => `drawing${SEPARATOR}${e.id}`)\n      .filter((key) => !usedDrawings.includes(key));\n    const cardsKeys = shuffle(\n      state?.cards\n        .map((e, index) => `card${SEPARATOR}${e.id}${SEPARATOR}${LETTERS[index]}`)\n        .filter((key) => !usedCards.includes(key))\n    );\n    const newVotes = { ...votes };\n    drawingsKeys.forEach((drawingKey, index) => {\n      if (!newVotes[drawingKey]) {\n        newVotes[drawingKey] = cardsKeys[index];\n      }\n    });\n    setVotes(newVotes);\n  };\n\n  useEffect(() => {\n    setCanvasSize(cachedCanvasSize);\n  }, []); // eslint-disable-line\n\n  const onActivateItem = useCallback(\n    (entryId) => {\n      if (entryId === activeItem) {\n        return setActiveItem(null);\n      }\n\n      const [type] = entryId.split(SEPARATOR);\n      if (!activeItem || activeItem.startsWith(type)) {\n        setActiveItem(entryId);\n      } else {\n        if (type === 'card') {\n          setVotes((prevVotes) => {\n            return {\n              ...prevVotes,\n              [activeItem]: entryId,\n            };\n          });\n        } else {\n          setVotes((prevVotes) => {\n            return {\n              ...prevVotes,\n              [entryId]: activeItem,\n            };\n          });\n        }\n        setActiveItem(null);\n      }\n    },\n    [activeItem]\n  );\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ARTE_RUIM.EVALUATION}\n      className=\"a-evaluation-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady, !isUserReady]}>\n        {/*Step 0 */}\n        <PhaseAnnouncement\n          type=\"evaluate\"\n          title={translate('Adivinhação', 'Match the Pairs', language)}\n          onClose={() => setStep(1)}\n          currentRound={state?.round?.current}\n        >\n          <EvaluationRules />\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <Step className=\"a-evaluation-step\">\n          <CanvasReSizer numPlayers={Object.keys(players).length} />\n          <Title>{translate('Adivinhação', 'Match the Pairs', language)}</Title>\n          <CollapsibleRule>\n            <EvaluationRules />\n          </CollapsibleRule>\n\n          <EvaluationAllDrawings\n            drawings={state?.drawings ?? []}\n            activeItem={activeItem}\n            onActivateItem={onActivateItem}\n            votes={votes}\n            canvasSize={canvasSize}\n            players={players}\n          />\n\n          <EvaluationAllCards\n            cards={state?.cards ?? []}\n            activeItem={activeItem}\n            onActivateItem={onActivateItem}\n            votes={votes}\n          />\n\n          <ButtonContainer>\n            <Button\n              type=\"default\"\n              icon={<ThunderboltOutlined />}\n              onClick={onGuessForMe}\n              disabled={Object.values(votes).length === state.drawings.length}\n            >\n              <Translate pt=\"Chutar restantes\" en=\"Guess for me\" />\n            </Button>\n            <Button\n              type=\"primary\"\n              onClick={() => onSubmitVoting({ votes: prepareVotes(votes) })}\n              disabled={Object.values(votes).length < state.drawings.length}\n              icon={<CloudUploadOutlined />}\n            >\n              <Translate pt=\"Enviar sua avaliação\" en=\"Send evaluation\" />\n            </Button>\n          </ButtonContainer>\n\n          <ReadyPlayersBar\n            players={players}\n            readyText={translate('Já acabei, anda logo!', \"I'm done, hurry up!\", language)}\n            readyTextPlural={translate('Já acabamos, anda logo!', \"We're done, hurry up!\", language)}\n            showNames\n          />\n        </Step>\n\n        {/*Step 2 */}\n        <Step fullWidth>\n          <WaitingRoom\n            players={players}\n            title={translate('Pronto!', 'Done!', language)}\n            instruction={translate(\n              'Vamos aguardar enquanto os outros jogadores terminam seus desenhos!',\n              'Please wait while other players finish their evaluations!',\n              language\n            )}\n          />\n        </Step>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nEvaluationPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.shape({\n    cards: PropTypes.array,\n    drawings: PropTypes.array,\n    phase: PropTypes.string,\n  }),\n};\n\nexport default EvaluationPhase;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Components\nimport { AvatarEntry } from '../../avatars';\nimport { Translate } from '../../shared';\n\nfunction GalleryWindowCredits({ artistName, artistAvatarId }) {\n  return (\n    <div className=\"a-gallery-window__credits\">\n      <div className=\"a-gallery-window__label\">\n        <Translate pt=\"Artista\" en=\"Artist\" />\n      </div>\n      <span className=\"a-gallery-window__artist-name\">\n        <AvatarEntry id={artistAvatarId} name={artistName} />\n      </span>\n    </div>\n  );\n}\n\nGalleryWindowCredits.propTypes = {\n  artistAvatarId: PropTypes.string,\n  artistName: PropTypes.string,\n};\n\nexport default memo(GalleryWindowCredits);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Avatar as AntAvatar } from 'antd';\nimport { MessageFilled } from '@ant-design/icons';\n// Utils\nimport { getPlayersFromIds } from '../../../utils';\n// Components\nimport { Avatar } from '../../avatars';\nimport { Translate } from '../../shared';\n\nfunction GalleryWindowGuesses({ playersSay, players, cards }) {\n  return (\n    <div className=\"a-gallery-window__guesses\">\n      <div className=\"a-gallery-window__label\">\n        <Translate pt=\"Participantes votaram\" en=\"Players voted\" />\n      </div>\n      {Object.entries(playersSay).map(([cardId, playerIds], index) => {\n        const card = cards.find((i) => i.id === cardId);\n        return (\n          <div key={`guess-${cardId}-${index}`} className=\"a-gallery-window__guess\">\n            <div className=\"a-gallery-window__speech-bubble\">\n              <MessageFilled className=\"a-gallery-window__speech-bubble-icon\" /> {card.text}\n            </div>\n            <div className=\"a-gallery-window__players\">\n              <AntAvatar.Group>\n                {playerIds.map((playerId) => (\n                  <Avatar\n                    id={players[playerId].avatarId}\n                    key={`guess-avatar-${players[playerId].avatarId}`}\n                  />\n                ))}\n              </AntAvatar.Group>\n              <span className=\"a-gallery-window__players-names\">\n                {getPlayersFromIds(playerIds, players, true).join(', ')}\n              </span>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nGalleryWindowGuesses.propTypes = {\n  cards: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      text: PropTypes.string,\n    })\n  ),\n  players: PropTypes.object,\n  playersSay: PropTypes.object,\n};\n\nexport default memo(GalleryWindowGuesses);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTimer } from 'react-timer-hook';\n// Design Resources\nimport { Button, Space } from 'antd';\nimport {\n  PauseOutlined,\n  PlayCircleOutlined,\n  StepBackwardOutlined,\n  StepForwardOutlined,\n  TrophyOutlined,\n} from '@ant-design/icons';\n// Utils\nimport { inNSeconds } from '../../../utils';\n// Components\nimport { Translate } from '../../shared';\n\nfunction GalleryWindowControls({ galleryLength, activeIndex, setActiveIndex, setStep }) {\n  const { seconds, isRunning, pause, resume } = useTimer({\n    expiryTimestamp: inNSeconds(10 * galleryLength),\n    autoStart: true,\n    onExpire: () => setStep(2),\n  });\n\n  // Automatically go to the next window every 10 seconds\n  useEffect(() => {\n    if (seconds < 10 * galleryLength && seconds > 0 && seconds % 10 === 0) {\n      setActiveIndex((s) => Math.min(s + 1, galleryLength - 1));\n    }\n  }, [seconds, setActiveIndex, galleryLength]);\n\n  const previousStep = () => {\n    setActiveIndex((s) => Math.max(s - 1, 0));\n  };\n\n  const nextStep = () => {\n    setActiveIndex((s) => Math.min(s + 1, galleryLength - 1));\n  };\n\n  return (\n    <div className=\"a-gallery-window__controls\">\n      <div className=\"a-gallery-window__timer-bar\">\n        <span style={{ width: `${Math.abs((10 * seconds) / galleryLength - 100)}%` }}></span>\n      </div>\n      <Space>\n        <Button\n          size=\"large\"\n          icon={<StepBackwardOutlined />}\n          onClick={previousStep}\n          disabled={activeIndex === 0}\n        >\n          <Translate pt=\"Desenho Anterior\" en=\"Previous Art\" />\n        </Button>\n        <Button\n          size=\"large\"\n          icon={isRunning ? <PauseOutlined /> : <PlayCircleOutlined />}\n          onClick={isRunning ? pause : resume}\n        />\n        <Button size=\"large\" onClick={nextStep} disabled={activeIndex === galleryLength - 1}>\n          <Translate pt=\"Próximo Desenho\" en=\"Next Art\" /> <StepForwardOutlined />\n        </Button>\n        <Button size=\"large\" onClick={() => setStep(2)} icon={<TrophyOutlined />}>\n          <Translate pt=\"Ver Ranking\" en=\"See Ranking\" />\n        </Button>\n      </Space>\n    </div>\n  );\n}\n\nGalleryWindowControls.propTypes = {\n  activeIndex: PropTypes.number,\n  galleryLength: PropTypes.number,\n  setActiveIndex: PropTypes.func,\n  setStep: PropTypes.func,\n};\n\nexport default GalleryWindowControls;\n","import React, { Fragment, memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Avatar as AntAvatar, Typography } from 'antd';\nimport { CrownFilled, DeleteFilled } from '@ant-design/icons';\n// Utils\nimport { getPlayersFromIds } from '../../../utils';\n// Components\nimport { Avatar } from '../../avatars';\nimport { StarPoints, Translate } from '../../shared';\n\nfunction GalleryWindowResult({\n  playerArtist,\n  correctAnswerId,\n  correctAnswerText,\n  playersPoints,\n  playersSay,\n  players,\n}) {\n  const correctGuesses = Object.values(playersSay?.[correctAnswerId] ?? {});\n\n  return (\n    <div className=\"a-gallery-window__result\">\n      <div className=\"a-gallery-window__label\">\n        <Translate pt=\"E o título correto da obra é\" en=\"And the masterpiece title is\" />\n      </div>\n      <div className=\"a-gallery-window__speech-bubble\">\n        <CrownFilled className=\"a-gallery-window__speech-bubble-icon\" />\n        {correctAnswerText}\n      </div>\n      {correctGuesses.length ? (\n        <Fragment>\n          <div className=\"a-gallery-window__players\">\n            <AntAvatar.Group>\n              {correctGuesses.map((playerId) => {\n                return <Avatar key={`correct-guess-avatar-${playerId}`} id={players[playerId].avatarId} />;\n              })}\n            </AntAvatar.Group>\n            <StarPoints quantity={2} keyPrefix={`guessers-points-${playerArtist.id}`} />\n            <span className=\"a-gallery-window__players-names\">\n              {getPlayersFromIds(correctGuesses, players, true).join(', ')}\n            </span>\n          </div>\n          <div className=\"a-gallery-window__artist-points\">\n            <Avatar id={playerArtist.avatarId} />{' '}\n            <StarPoints\n              quantity={playersPoints?.[playerArtist.id]}\n              keyPrefix={`artist-points-${playerArtist.id}`}\n            />{' '}\n            <span className=\"a-gallery-window__players-names\">{playerArtist.name}</span>\n          </div>\n        </Fragment>\n      ) : (\n        <Typography.Text className=\"a-gallery-window__no-wins\">\n          <DeleteFilled />{' '}\n          <Translate\n            pt=\"Nossa, ninguém acertou. Esse desenho deve ter sido muito ruim.\"\n            en=\"Wow, nobody got it. It must have been a very crappy drawing. Shame...\"\n          />\n        </Typography.Text>\n      )}\n    </div>\n  );\n}\n\nGalleryWindowResult.propTypes = {\n  correctAnswer: PropTypes.string,\n  correctAnswerId: PropTypes.string,\n  correctAnswerText: PropTypes.string,\n  playerArtist: PropTypes.object,\n  players: PropTypes.object,\n  playersPoints: PropTypes.object,\n  playersSay: PropTypes.object,\n};\n\nexport default memo(GalleryWindowResult);\n","import PropTypes from 'prop-types';\nimport React, { memo } from 'react';\n\n// Hooks\nimport { useGlobalState } from '../../../hooks';\n// Components\nimport { CanvasSVG, CanvasReSizer } from '../../canvas';\nimport GalleryWindowCredits from './GalleryWindowCredits';\nimport GalleryWindowGuesses from './GalleryWindowGuesses';\nimport GalleryWindowControls from './GalleryWindowControls';\nimport GalleryWindowResult from './GalleryWindowResult';\n\nfunction GalleryWindow({ window, galleryLength, players, activeIndex, setActiveIndex, setStep, cards }) {\n  const [canvasSize] = useGlobalState('canvasSize');\n\n  const { drawing, artist, id, text, level, playersPoints, playersSay } = window;\n\n  const playerArtist = players[artist];\n\n  return (\n    <div className=\"a-gallery-window\">\n      <CanvasReSizer numPlayers={Object.keys(players).length} />\n      <div className=\"a-gallery-window__drawing-container\">\n        <CanvasSVG\n          key={window.correctAnswer}\n          drawing={drawing}\n          size={canvasSize}\n          className=\"a-gallery-window__drawing\"\n        />\n      </div>\n\n      <GalleryWindowCredits artistName={playerArtist.name} artistAvatarId={playerArtist.avatarId} />\n\n      <GalleryWindowGuesses players={players} playersSay={playersSay} cards={cards} />\n\n      <GalleryWindowResult\n        playerArtist={playerArtist}\n        correctAnswerId={id}\n        correctAnswerText={text}\n        correctAnswerLevel={level}\n        playersPoints={playersPoints}\n        playersSay={playersSay}\n        players={players}\n      />\n\n      <GalleryWindowControls\n        galleryLength={galleryLength}\n        activeIndex={activeIndex}\n        setActiveIndex={setActiveIndex}\n        setStep={setStep}\n      />\n    </div>\n  );\n}\n\nGalleryWindow.propTypes = {\n  activeIndex: PropTypes.number,\n  cards: PropTypes.array,\n  galleryLength: PropTypes.number,\n  players: PropTypes.object,\n  setActiveIndex: PropTypes.func,\n  setStep: PropTypes.func,\n  window: PropTypes.shape({\n    artist: PropTypes.string,\n    correctAnswer: PropTypes.string,\n    drawing: PropTypes.string,\n    id: PropTypes.string,\n    level: PropTypes.number,\n    playersPoints: PropTypes.object,\n    playersSay: PropTypes.object,\n    text: PropTypes.string,\n  }),\n};\n\nexport default memo(GalleryWindow);\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\n// Design Resources\nimport { Button } from 'antd';\nimport { PictureOutlined } from '@ant-design/icons';\n// State & Hooks\nimport { useGlobalState, useLanguage } from '../../../hooks';\n// Resources and Utils\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { AdminForceNextPhase } from '../../admin/index';\nimport {\n  Instruction,\n  PhaseContainer,\n  RankingBoard,\n  StepSwitcher,\n  Step,\n  Title,\n  PhaseAnnouncement,\n  translate,\n  Translate,\n} from '../../shared';\nimport GalleryWindow from './GalleryWindow';\n\nconst GalleryRules = () => (\n  <Instruction>\n    <Translate\n      pt={\n        <>\n          Agora, mostraremos cada arte, o que os jogadores votaram e a resposta final.\n          <br />\n          Se você votou na expressão correta, você ganha 2 pontos.\n          <br />\n          Quando for a sua arte, você ganha 1 ponto para cada pessoa que votou corretamente.\n        </>\n      }\n      en={\n        <>\n          Now we show each art, what players voted, and the final answer.\n          <br />\n          You get 2 points if you selected the right card.\n          <br />\n          When players selected the correct card for your artwork, you get 1 point for each match!\n        </>\n      }\n    />\n  </Instruction>\n);\n\nfunction PhaseGallery({ players, state, info }) {\n  const language = useLanguage();\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [step, setStep] = useState(0);\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n  const [cachedCanvasSize, setCachedCanvasSize] = useGlobalState('cachedCanvasSize');\n\n  // The gallery needs a bigger image, its annoying that we are changing the users settings but whatever\n  useEffect(() => {\n    if (step === 1) {\n      setCachedCanvasSize(canvasSize);\n      setCanvasSize(Math.min(window.innerWidth / 2 - 100, 500));\n    } else {\n      setCanvasSize(cachedCanvasSize);\n    }\n  }, [step]); // eslint-disable-line\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ARTE_RUIM.GALLERY}\n      className=\"a-gallery-phase\"\n    >\n      <StepSwitcher step={step}>\n        {/*Step 1 */}\n        <PhaseAnnouncement\n          type=\"picture\"\n          title={translate('Galeria de Arte', 'Art Gallery', language)}\n          onClose={() => setStep(1)}\n          currentRound={state?.round?.current}\n        >\n          <GalleryRules />\n        </PhaseAnnouncement>\n\n        {/* Step 2 */}\n        <Step className=\"a-gallery-phase__windows\">\n          <Title>\n            <Translate pt=\"Galeria de Arte\" en=\"Art Gallery\" />\n          </Title>\n          {state?.gallery && (\n            <GalleryWindow\n              window={state.gallery[activeIndex]}\n              galleryLength={state.gallery.length}\n              cards={state.cards}\n              players={players}\n              activeIndex={activeIndex}\n              setActiveIndex={setActiveIndex}\n              setStep={setStep}\n            />\n          )}\n        </Step>\n\n        {/* Step 3 */}\n        <Step>\n          <Title>{state.pointsToVictory >= 0 ? 'Ranking' : 'Game Over'}</Title>\n          <RankingBoard players={players} ranking={state.ranking} />\n\n          <Instruction contained>\n            <Translate\n              pt={\n                <>\n                  Faltam <strong>{(state?.round?.total ?? 0) - (state?.round?.current ?? 0)}</strong> rodadas\n                  para o jogo terminar...\n                </>\n              }\n              en={\n                <>\n                  <strong>{(state?.round?.total ?? 0) - (state?.round?.current ?? 0)}</strong> rounds left for\n                  the game to end...\n                </>\n              }\n            />\n          </Instruction>\n\n          <Button size=\"large\" onClick={() => setStep(0)} icon={<PictureOutlined />}>\n            <Translate pt=\"Ver Galeria De Novo\" en=\"See Gallery Again\" />\n          </Button>\n\n          <AdminForceNextPhase\n            buttonText={translate(\n              'Ir para próxima rodada ou game over',\n              'Go to next round or Game Over',\n              language\n            )}\n          />\n        </Step>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nPhaseGallery.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.shape({\n    cards: PropTypes.array,\n    gallery: PropTypes.array,\n    phase: PropTypes.string,\n    ranking: PropTypes.array,\n  }),\n};\n\nexport default PhaseGallery;\n","import React, { memo } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Avatar, Tooltip } from 'antd';\n\nconst grades = ['A+', 'A', 'A-', 'B+', 'B', 'B-', 'C+', 'C', 'C-', 'D+', 'D', 'F'];\nconst minValues = [97, 93, 90, 87, 83, 80, 77, 73, 70, 67, 65, 0];\n\nconst DrawingGrade = ({ value }) => {\n  const grade = grades[minValues.findIndex((i) => value * 100 >= i) ?? 11];\n\n  const baseClass = 'a-drawing-grade';\n\n  return (\n    <Tooltip title={`Nota baseada em quantos acertos o desenho teve: ${value * 100}%`}>\n      <Avatar className={clsx(baseClass, `${baseClass}--${grade[0]}`)}>{grade}</Avatar>\n    </Tooltip>\n  );\n};\n\nDrawingGrade.propTypes = {\n  value: PropTypes.number.isRequired,\n};\n\nexport default memo(DrawingGrade);\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\n// Hooks\nimport { useLanguage } from '../../../hooks';\n// Components\nimport {\n  GameOver,\n  PhaseAnnouncement,\n  PhaseContainer,\n  StepSwitcher,\n  translate,\n  Translate,\n} from '../../shared';\nimport { CanvasSVG } from '../../canvas';\nimport DrawingGrade from './DrawingGrade';\n\nfunction PhaseGameOver({ state, players, info }) {\n  const [step, setStep] = useState(0);\n  const language = useLanguage();\n\n  return (\n    <StepSwitcher step={step}>\n      {/*Step 0 */}\n      <PhaseContainer info={info} phase={state?.phase} allowedPhase=\"GAME_OVER\" className=\"game-over\">\n        <PhaseAnnouncement\n          type=\"evaluate\"\n          title={translate('E o jogo chegou ao fim...', 'And the game is over...', language)}\n          onClose={() => setStep(1)}\n          currentRound={state?.round?.current}\n          duration={4}\n        />\n      </PhaseContainer>\n\n      <GameOver info={info} state={state}>\n        {/*Step 1 */}\n        <ul className=\"a-game-over__gallery\">\n          {state.drawings.map((entry) => {\n            return (\n              <li className=\"a-game-over__gallery-item\" key={entry.drawing}>\n                <CanvasSVG drawing={entry.drawing} size={200} className=\"a-game-over__gallery-canvas\" />\n                <span className=\"a-game-over__credits\">\n                  \"{entry.text}\" <Translate pt=\"por\" en=\"by\" /> {players[entry.playerId].name}\n                </span>\n                <DrawingGrade value={entry.successRate} />\n              </li>\n            );\n          })}\n        </ul>\n      </GameOver>\n    </StepSwitcher>\n  );\n}\n\nPhaseGameOver.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.shape({\n    drawings: PropTypes.array,\n  }),\n};\n\nexport default PhaseGameOver;\n","import React from 'react';\n// Hooks\nimport { GAME_COLLECTION, PHASES } from '../../../utils/constants';\n// Components\nimport { Session } from '../../shared';\nimport Lobby from '../../lobby/Lobby';\nimport { Rules } from '../../rules';\nimport { PageError } from '../../errors/PageError';\nimport PhaseDraw from './PhaseDraw';\nimport PhaseEvaluation from './PhaseEvaluation';\nimport PhaseGallery from './PhaseGallery';\nimport PhaseGameOver from './PhaseGameOver';\n\nfunction SessionArteRuim({ gameId }) {\n  function getActiveComponent(phase) {\n    switch (phase) {\n      case PHASES.ARTE_RUIM.LOBBY:\n        return Lobby;\n      case PHASES.ARTE_RUIM.RULES:\n        return Rules;\n      case PHASES.ARTE_RUIM.DRAW:\n        return PhaseDraw;\n      case PHASES.ARTE_RUIM.EVALUATION:\n        return PhaseEvaluation;\n      case PHASES.ARTE_RUIM.GALLERY:\n        return PhaseGallery;\n      case PHASES.ARTE_RUIM.GAME_OVER:\n        return PhaseGameOver;\n      default:\n        return PageError;\n    }\n  }\n\n  return (\n    <Session\n      gameId={gameId}\n      gameCollection={GAME_COLLECTION.ARTE_RUIM}\n      getActiveComponent={getActiveComponent}\n    />\n  );\n}\n\nexport default SessionArteRuim;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useLoading } from '../../../hooks';\n// Design Resources\nimport { Button, Input } from 'antd';\n// Components\nimport { ButtonContainer, Instruction, Title } from '../../shared';\nimport { ImageCardHand as Hand } from '../../cards';\n\nfunction SecretClueWrite({ user, onSubmitClue }) {\n  const [isLoading] = useLoading();\n  const [clue, setClue] = useState('');\n\n  const onButtonClick = () => {\n    onSubmitClue({\n      action: 'SUBMIT_CLUE',\n      clue,\n    });\n  };\n\n  const onEnterInput = (e) => {\n    if (e.key === 'Enter') {\n      onButtonClick();\n    }\n  };\n\n  return (\n    <div className=\"d-secret-clue-write\">\n      <Title>Escreva a Pista!</Title>\n      <Instruction contained>\n        <ul>\n          <li>Escreva uma pista que relacione com duas das suas cartas.</li>\n          <li>A pista pode ser qualquer coisa que você quiser. Não há restricões!</li>\n          <li>Você ganha pontos somente se o Impostor não for encontrado, então escolha algo fácil.</li>\n        </ul>\n      </Instruction>\n      <ButtonContainer className=\"d-input-container\">\n        <Input\n          className=\"uppercase-input\"\n          placeholder=\"Escreva sua pista aqui\"\n          onChange={(e) => setClue(e.target.value)}\n          onKeyPress={onEnterInput}\n        />\n        <Button type=\"primary\" disabled={isLoading || clue.length < 1} onClick={onButtonClick}>\n          Enviar pista secreta\n        </Button>\n      </ButtonContainer>\n      <Hand hand={user.hand} />\n    </div>\n  );\n}\n\nSecretClueWrite.propTypes = {\n  onSubmitClue: PropTypes.func,\n  user: PropTypes.shape({\n    hand: PropTypes.arrayOf(PropTypes.string),\n  }),\n};\n\nexport default SecretClueWrite;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Spin } from 'antd';\n// Components\nimport { Instruction, Title } from '../../shared';\nimport { AvatarName } from '../../avatars';\nimport { ImageCardHand as Hand } from '../../cards';\n\nfunction SecretClueWaiting({ leader, user }) {\n  return (\n    <div className=\"d-secret-clue-write\">\n      <Title>\n        <Spin /> Aguarde...\n      </Title>\n      <Instruction contained>\n        <AvatarName player={leader} addressUser /> está escrevendo a pista secreta.\n        <br />\n        Enquanto isso, examine suas cartas! Você as usará durante esta rodada.\n      </Instruction>\n      <Hand hand={user.hand} />\n    </div>\n  );\n}\n\nSecretClueWaiting.propTypes = {\n  leader: PropTypes.shape({\n    name: PropTypes.string,\n  }),\n  user: PropTypes.shape({\n    hand: PropTypes.arrayOf(PropTypes.string),\n  }),\n};\n\nexport default SecretClueWaiting;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useIsUserReady, useIsUserThe, useWhichPlayerIsThe, useAPICall, useUser } from '../../../hooks';\n// Resources & Utils\nimport { CLUBE_DETETIVES_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport {\n  Instruction,\n  PhaseContainer,\n  RoundAnnouncement,\n  Step,\n  StepSwitcher,\n  ViewIf,\n  WaitingRoom,\n} from '../../shared';\nimport { AvatarName } from '../../avatars';\nimport SecretClueWrite from './SecretClueWrite';\nimport SecretClueWaiting from './SecretClueWaiting';\n\nfunction SecretCluePhase({ state, players, info }) {\n  const user = useUser(players);\n  const isUserReady = useIsUserReady(players, state);\n  const leader = useWhichPlayerIsThe('leader', state, players);\n  const isUserTheLeader = useIsUserThe('leader', state);\n  const [step, setStep] = useState(0);\n\n  const onSubmitSecretClue = useAPICall({\n    apiFunction: CLUBE_DETETIVES_API.submitAction,\n    actionName: 'submit-secret-clue',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: 'Pista Secreta submetida com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar sua pista secreta',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.CLUBE_DETETIVES.SECRET_CLUE}\n      className=\"d-secret-clue-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady]}>\n        {/* Step 0 */}\n        <RoundAnnouncement round={state.round} onPressButton={() => setStep(1)} time={5}>\n          <Instruction contained>\n            Para essa rodada, <AvatarName player={leader} addressUser /> será o(a) líder!\n          </Instruction>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <Step fullWidth>\n          <ViewIf isVisible={!isUserTheLeader}>\n            <SecretClueWaiting user={user} leader={leader} />\n          </ViewIf>\n\n          <ViewIf isVisible={isUserTheLeader}>\n            <SecretClueWrite user={user} onSubmitClue={onSubmitSecretClue} />\n          </ViewIf>\n        </Step>\n\n        {/* Step 2 */}\n        <WaitingRoom\n          players={players}\n          title=\"Pronto!\"\n          instruction=\"Aguardando o servidor dar sinal de vida\"\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nSecretCluePhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.shape({\n    phase: PropTypes.string,\n    round: PropTypes.number,\n  }),\n};\n\nexport default SecretCluePhase;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Spin } from 'antd';\n// Hooks\nimport { useDimensions } from '../../../hooks';\n// Components\nimport { ImageCard } from '../../cards';\nimport { Avatar } from '../../avatars';\nimport { AVATARS } from '../../../utils/constants';\n\nexport function Table({ table, players }) {\n  const baseClass = 'd-table';\n  const [width] = useDimensions();\n\n  if (!table || !table?.length) {\n    return (\n      <div className={clsx(baseClass, `${baseClass}--center`)}>\n        <Spin size=\"large\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className={baseClass}>\n      {table.map((entry) => {\n        const { playerId, cards } = entry;\n        const playerEntryKey = `table-${playerId}`;\n        return (\n          <div key={playerEntryKey} className=\"d-table__player-entry\">\n            <div className=\"d-table__cards\">\n              {cards.map((cardId) => {\n                if (!cardId) {\n                  return (\n                    <div\n                      key={`${playerEntryKey}-placeholder`}\n                      className=\"d-table__card d-table__card-placeholder\"\n                      style={{ width: 1 }}\n                    />\n                  );\n                }\n\n                return (\n                  <ImageCard\n                    key={`${playerEntryKey}${cardId}`}\n                    imageId={cardId}\n                    cardWidth={Math.max(width / 12, 120)}\n                    className=\"d-table__card\"\n                  />\n                );\n              })}\n            </div>\n            <div className=\"d-table__player-info\">\n              <Avatar id={players[playerId].avatarId} className=\"d-table__player-avatar\" size=\"medium\" />\n              <span\n                className=\"d-table__player-bar\"\n                style={{ backgroundColor: AVATARS[players[playerId].avatarId].color }}\n              />\n              <span className=\"d-table__player-name\">{players[playerId].name}</span>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nTable.propTypes = {\n  players: PropTypes.any,\n  table: PropTypes.arrayOf(\n    PropTypes.shape({\n      playerId: PropTypes.string,\n      cards: PropTypes.arrayOf(PropTypes.string),\n    })\n  ),\n};\n\nexport default Table;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { message, Spin } from 'antd';\nimport { FileImageOutlined, QuestionCircleFilled } from '@ant-design/icons';\n// Hooks\nimport { useIsUserThe, useWhichPlayerIsThe, useAPICall, useUser, useLoading } from '../../../hooks';\n// Resources & Utils\nimport { CLUBE_DETETIVES_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { Instruction, PhaseContainer, Title } from '../../shared';\nimport { AvatarName } from '../../avatars';\nimport { messageContent } from '../../modals';\nimport { ImageCardHand as Hand } from '../../cards';\nimport Table from './Table';\n\nfunction CardPlayPhase({ state, players, info }) {\n  const [isLoading] = useLoading();\n  const user = useUser(players);\n  const currentPlayer = useWhichPlayerIsThe('currentPlayerId', state, players);\n  const isUserTheImpostor = useIsUserThe('impostor', state);\n  const isUserTheCurrentPlayer = useIsUserThe('currentPlayerId', state);\n\n  const onPlayCard = useAPICall({\n    apiFunction: CLUBE_DETETIVES_API.submitAction,\n    actionName: 'play-card',\n    successMessage: 'Carta enviada com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar sua carta',\n  });\n\n  const onSelectCard = (cardId) => {\n    onPlayCard({\n      action: 'PLAY_CARD',\n      cardId,\n    });\n  };\n\n  useEffect(() => {\n    if (isUserTheCurrentPlayer) {\n      message.info(\n        messageContent(\n          'Escolha uma carta!',\n          'Aperte o botão Selecionar acima da carta escolhida',\n          currentPlayer.id,\n          3\n        )\n      );\n    }\n  }, [isUserTheCurrentPlayer, currentPlayer.id]);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.CLUBE_DETETIVES.CARD_PLAY}\n      className=\"d-phase d-play-card-phase\"\n    >\n      <Title>\n        A pista secreta é{' '}\n        <span className=\"d-clue\">{isUserTheImpostor ? <QuestionCircleFilled /> : state.clue}</span>\n      </Title>\n      <Instruction>\n        {isUserTheCurrentPlayer && !isUserTheImpostor && (\n          <>\n            <FileImageOutlined /> Selecione uma carta que mais combine com a pista secreta.\n          </>\n        )}\n        {isUserTheCurrentPlayer && isUserTheImpostor && (\n          <>\n            <FileImageOutlined /> Selecione uma carta que mais combine com as cartas que os outros jogadores\n            estão usando.\n          </>\n        )}\n        {!isUserTheCurrentPlayer && (\n          <>\n            <Spin /> Aguarde enquanto <AvatarName player={currentPlayer} addressUser /> escolhe uma carta\n          </>\n        )}\n      </Instruction>\n      <Table table={state.table} players={players} />\n      <Hand\n        hand={user.hand}\n        onSelectCard={isUserTheCurrentPlayer ? onSelectCard : null}\n        disabledSelectButton={isLoading}\n        selectButtonLabel=\"Selecionar\"\n        sizeRatio={10}\n      />\n    </PhaseContainer>\n  );\n}\n\nCardPlayPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.shape({\n    clue: PropTypes.string,\n    phase: PropTypes.string,\n    table: PropTypes.arrayOf(\n      PropTypes.shape({\n        playerId: PropTypes.string,\n        cards: PropTypes.arrayOf(PropTypes.string),\n      })\n    ),\n  }),\n};\n\nexport default CardPlayPhase;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Spin } from 'antd';\n// Utils\nimport { AVATARS } from '../../../utils/constants';\n// Components\nimport { ImageCard } from '../../cards';\nimport { Avatar } from '../../avatars';\nimport { useDimensions } from '../../../hooks';\n\nexport function TableFocus({ table, currentPlayer }) {\n  const tableEntry = table.find((entry) => entry.playerId === currentPlayer.id);\n  const baseClass = 'd-table';\n  const [width] = useDimensions();\n\n  if (!currentPlayer || !tableEntry?.cards) {\n    return (\n      <div className={clsx(baseClass, `${baseClass}--center`)}>\n        <Spin />\n      </div>\n    );\n  }\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--center`)}>\n      <div className=\"d-table__player-entry\">\n        <div className=\"d-table__cards\">\n          {tableEntry?.cards.map((cardId) => {\n            return (\n              <ImageCard\n                key={`table-focous-${cardId}`}\n                imageId={cardId}\n                cardWidth={Math.max(200, Math.min(400, width / 6))}\n                className=\"d-table__card\"\n              />\n            );\n          })}\n        </div>\n        <div className=\"d-table__player-info\">\n          <Avatar id={currentPlayer.avatarId} className=\"d-table__player-avatar\" size=\"medium\" />\n          <span\n            className=\"d-table__player-bar\"\n            style={{ backgroundColor: AVATARS[currentPlayer.avatarId].color }}\n          />\n          <span className=\"d-table__player-name\">{currentPlayer.name}</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nTableFocus.propTypes = {\n  currentPlayer: PropTypes.shape({\n    avatarId: PropTypes.string,\n    name: PropTypes.string,\n  }),\n  table: PropTypes.arrayOf(\n    PropTypes.shape({\n      playerId: PropTypes.string,\n      cards: PropTypes.arrayOf(PropTypes.string),\n    })\n  ),\n};\n\nexport default TableFocus;\n","import React from 'react';\n\nfunction MagnifyingGlassSVG() {\n  return (\n    <svg\n      data-name=\"Layer 6\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 280.85 152.43\"\n      className=\"emergency-alert__svg\"\n    >\n      <defs />\n      <path\n        d=\"M90.89 2.8A71.17 71.17 0 002.8 51.47a71.16 71.16 0 0048.67 88.09 71.2 71.2 0 0078.79-28.69 6.09 6.09 0 00.71.27l126 40.67a12.55 12.55 0 0016-8.5l7.44-25.8a12.46 12.46 0 00-9-15.62l-128.6-31.83c-.15 0-.31-.06-.46-.09A71.2 71.2 0 0090.89 2.8zm29.69 82.62a51.4 51.4 0 01-63.64 35.16 51.41 51.41 0 01-35.16-63.64 51.41 51.41 0 0163.64-35.16 51.41 51.41 0 0135.16 63.64z\"\n        fill=\"#f45b69\"\n      />\n    </svg>\n  );\n}\n\nexport default MagnifyingGlassSVG;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, message } from 'antd';\n// Hooks\nimport { useIsUserThe, useWhichPlayerIsThe, useAPICall, useLoading } from '../../../hooks';\n// Resources & Utils\nimport { CLUBE_DETETIVES_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { ButtonContainer, EmergencyAlert, Instruction, PhaseContainer, Title } from '../../shared';\nimport { AvatarName } from '../../avatars';\nimport { messageContent } from '../../modals';\nimport TableFocus from './TableFocus';\nimport MagnifyingGlassSVG from './MagnifyingGlassSVG';\n\nfunction DefensePhase({ state, players, info }) {\n  const [isLoading] = useLoading();\n  const currentPlayer = useWhichPlayerIsThe('currentPlayerId', state, players);\n  const isUserTheCurrentPlayer = useIsUserThe('currentPlayerId', state);\n\n  const onFinishDefense = useAPICall({\n    apiFunction: CLUBE_DETETIVES_API.submitAction,\n    actionName: 'submit-secret-clue',\n    successMessage: 'Defesa concluída com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar concluir sua defesa',\n  });\n\n  const onFinishDefenseClick = () => {\n    onFinishDefense({\n      action: 'DEFEND',\n    });\n  };\n\n  useEffect(() => {\n    if (isUserTheCurrentPlayer) {\n      message.info(\n        messageContent(\n          'Sua vez de defender suas escolhas!',\n          'Aperte o botão Concluir Defesa quando terminar',\n          currentPlayer?.id,\n          4\n        )\n      );\n    }\n  }, [isUserTheCurrentPlayer, currentPlayer?.id]);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.CLUBE_DETETIVES.DEFENSE}\n      className=\"d-defense-phase\"\n    >\n      <EmergencyAlert duration={5}>\n        <MagnifyingGlassSVG />\n        <Title className=\"d-emergency-alert-title\">\n          Pista secreta: <span className=\"d-clue\">{state.clue}</span>\n        </Title>\n      </EmergencyAlert>\n\n      <Title>\n        Defesa: A pista secreta era <span className=\"d-clue\">{state.clue}</span>\n      </Title>\n      <Instruction>\n        <AvatarName player={currentPlayer} />, explique porque você escolheu as cartas.\n        {isUserTheCurrentPlayer && <> Quando terminar sua defesa, aperte concluir.</>}\n      </Instruction>\n\n      <TableFocus table={state.table} currentPlayer={currentPlayer} />\n\n      {isUserTheCurrentPlayer && (\n        <ButtonContainer>\n          <Button type=\"primary\" onClick={onFinishDefenseClick} disabled={isLoading} size=\"large\">\n            Concluir Defesa\n          </Button>\n        </ButtonContainer>\n      )}\n    </PhaseContainer>\n  );\n}\n\nDefensePhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.shape({\n    clue: PropTypes.string,\n    phase: PropTypes.string,\n    table: PropTypes.arrayOf(\n      PropTypes.shape({\n        playerId: PropTypes.string,\n        cards: PropTypes.arrayOf(PropTypes.string),\n      })\n    ),\n  }),\n};\n\nexport default DefensePhase;\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button } from 'antd';\n// Components\nimport { Avatar, AvatarName } from '../../avatars';\nimport { ButtonContainer } from '../../shared';\nimport { orderBy } from '../../../utils';\n\nexport function VotingOptions({ players, leader, user, onVote, isLoading, isAllDisabled }) {\n  const votingOptions = useMemo(\n    () =>\n      orderBy(\n        Object.values(players).filter((player) => player.id !== leader),\n        'name'\n      ),\n    [players, leader]\n  );\n\n  return (\n    <ButtonContainer className=\"d-voting-options\">\n      {votingOptions?.map((playerOption) => {\n        const votedForPlayer = Object.values(players).filter((player) => player?.vote === playerOption.id);\n        return (\n          <div className=\"d-voting-options__container\" key={`voting-button-${playerOption.name}`}>\n            <Button\n              onClick={() => onVote(playerOption.id)}\n              ghost\n              size=\"large\"\n              disabled={isAllDisabled || user.vote || isLoading || user.name === playerOption.name}\n            >\n              <AvatarName player={playerOption} uppercase />\n            </Button>\n            <div className=\"d-voting-options__vote-container\">\n              Votos: {votedForPlayer.length}\n              <ul className=\"d-voting-options__votes\">\n                {votedForPlayer.map((vPlayer) => (\n                  <Avatar id={vPlayer.avatarId} size=\"small\" alt={vPlayer.name} />\n                ))}\n              </ul>\n            </div>\n          </div>\n        );\n      })}\n    </ButtonContainer>\n  );\n}\n\nVotingOptions.propTypes = {\n  isAllDisabled: PropTypes.any,\n  isLoading: PropTypes.bool,\n  leader: PropTypes.string,\n  onVote: PropTypes.func,\n  players: PropTypes.object,\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    vote: PropTypes.any,\n  }),\n};\n\nexport default VotingOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Spin } from 'antd';\n// Hooks\nimport { useIsUserThe, useAPICall, useUser, useLoading } from '../../../hooks';\n// Resources & Utils\nimport { CLUBE_DETETIVES_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { Instruction, PhaseContainer, Title } from '../../shared';\nimport Table from './Table';\nimport VotingOptions from './VotingOptions';\n\nfunction VotingPhase({ state, players, info }) {\n  const [isLoading] = useLoading();\n  const user = useUser(players);\n  const isUserTheLeader = useIsUserThe('leader', state);\n\n  const onSubmitVote = useAPICall({\n    apiFunction: CLUBE_DETETIVES_API.submitAction,\n    actionName: 'submit-vote',\n    successMessage: 'Voto enviado com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar seu voto',\n  });\n\n  const onVote = (playerId) => {\n    onSubmitVote({\n      action: 'SUBMIT_VOTE',\n      vote: playerId,\n    });\n  };\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.CLUBE_DETETIVES.VOTING}\n      className=\"d-voting-phase\"\n    >\n      <Title>{isLoading ? <Spin size=\"large\" /> : 'Quem é o impostor?'}</Title>\n      <Instruction>\n        {isUserTheLeader && 'Aguarde enquanto os outros jogadorem votam em quem eles acham ser o impostor'}\n\n        {!isUserTheLeader &&\n          !user.vote &&\n          'Vote para quem você acha que pode ser o impostor! O impostor só perde se 2 ou mais detetives votarem nele! Discutam antes de votar!'}\n\n        {!isUserTheLeader && user.vote && 'Aguarde enquanto os outros jogadores votam...'}\n      </Instruction>\n\n      <VotingOptions\n        players={players}\n        leader={state.leader}\n        user={user}\n        onVote={onVote}\n        isLoading={isLoading}\n        isAllDisabled={isUserTheLeader}\n      />\n\n      <Table table={state.table} players={players} />\n    </PhaseContainer>\n  );\n}\n\nVotingPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.shape({\n    leader: PropTypes.string,\n    phase: PropTypes.string,\n    table: PropTypes.arrayOf(\n      PropTypes.shape({\n        playerId: PropTypes.string,\n        cards: PropTypes.arrayOf(PropTypes.string),\n      })\n    ),\n  }),\n};\n\nexport default VotingPhase;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useWhichPlayerIsThe, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { GAME_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { Instruction, PhaseContainer, RankingBoard, Title } from '../../shared';\nimport { AvatarName } from '../../avatars';\nimport { AdminOnlyButton } from '../../admin/index';\nimport VotingOptions from './VotingOptions';\n\nfunction RevealPhase({ state, players, info }) {\n  const impostor = useWhichPlayerIsThe('impostor', state, players);\n\n  const onGoToNextRound = useAPICall({\n    apiFunction: GAME_API.goToNextPhase,\n    actionName: 'go-to-next-phase',\n    successMessage: 'Ranking!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar ir para a próxima fase',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.CLUBE_DETETIVES.REVEAL}\n      className=\"d-voting-phase\"\n    >\n      <Title>O impostor era {<AvatarName player={impostor} />}</Title>\n      <Instruction contained>\n        {state.impostorVotes > 1 ? (\n          <>Ele(a) recebeu mais de dois votos! Quem votou nele(a) ganha 3 pontos!</>\n        ) : (\n          <>\n            Ele(a) não recebeu mais de 2 votos: <b>Impostor</b> ganha 5 pontos e <b>Líder</b> ganha 4 pontos!\n          </>\n        )}\n      </Instruction>\n      <VotingOptions players={players} isAllDisabled={true} leader={state.leader} />\n      <RankingBoard players={players} ranking={state.ranking} />\n\n      <Instruction contained>Faltam {state.roundsToEndGame} rodadas para o jogo terminar</Instruction>\n\n      <AdminOnlyButton action={() => onGoToNextRound({})} label=\"Ir para próxima rodada ou game over\" />\n    </PhaseContainer>\n  );\n}\n\nRevealPhase.propTypes = {\n  info: PropTypes.any,\n  players: PropTypes.any,\n  state: PropTypes.shape({\n    impostorVotes: PropTypes.number,\n    phase: PropTypes.any,\n    ranking: PropTypes.any,\n    roundsToEndGame: PropTypes.number,\n  }),\n};\n\nexport default RevealPhase;\n","import React from 'react';\n// Hooks\nimport { GAME_COLLECTION, PHASES } from '../../../utils/constants';\n// Components\nimport { GameOver, Session } from '../../shared';\nimport Lobby from '../../lobby/Lobby';\nimport { Rules } from '../../rules';\nimport { PageError } from '../../errors/PageError';\nimport SecretCluePhase from './SecretCluePhase';\nimport CardPlayPhase from './CardPlayPhase';\nimport DefensePhase from './DefensePhase';\nimport VotingPhase from './VotingPhase';\nimport RevealPhase from './RevealPhase';\n\nfunction SessionClubeDetetives({ gameId }) {\n  function getActiveComponent(phase) {\n    switch (phase) {\n      case PHASES.CLUBE_DETETIVES.LOBBY:\n        return Lobby;\n      case PHASES.CLUBE_DETETIVES.RULES:\n        return Rules;\n      case PHASES.CLUBE_DETETIVES.SECRET_CLUE:\n        return SecretCluePhase;\n      case PHASES.CLUBE_DETETIVES.CARD_PLAY:\n        return CardPlayPhase;\n      case PHASES.CLUBE_DETETIVES.DEFENSE:\n        return DefensePhase;\n      case PHASES.CLUBE_DETETIVES.VOTING:\n        return VotingPhase;\n      case PHASES.CLUBE_DETETIVES.REVEAL:\n        return RevealPhase;\n      case PHASES.CLUBE_DETETIVES.GAME_OVER:\n        return GameOver;\n      default:\n        return PageError;\n    }\n  }\n\n  return (\n    <Session\n      gameId={gameId}\n      gameCollection={GAME_COLLECTION.CLUBE_DETETIVES}\n      getActiveComponent={getActiveComponent}\n    />\n  );\n}\n\nexport default SessionClubeDetetives;\n","import React, { memo } from 'react';\n\nfunction Notes() {\n  return (\n    <textarea\n      name=\"\"\n      id=\"\"\n      cols=\"30\"\n      rows=\"10\"\n      className=\"e-notes\"\n      placeholder=\"Escreva anotações aqui se quiser, mas cuidado com o teclado fazendo muito barulho\"\n    ></textarea>\n  );\n}\n\nNotes.propTypes = {};\n\nexport default memo(Notes);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { ESPIAO_ENTRE_NOS_API } from '../../../adapters';\n// Components\nimport { AdminOnlyButton } from '../../admin/index';\n\nfunction AdminTimerControlButton({ label = 'Continuar', action = 'resume' }) {\n  const onControlStopwatch = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.handleAdminAction,\n    actionName: 'timer-control',\n    successMessage: 'Admin action com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar ação',\n  });\n\n  return <AdminOnlyButton action={() => onControlStopwatch({ action })} label={label} />;\n}\n\nAdminTimerControlButton.propTypes = {\n  label: PropTypes.string,\n  action: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nexport default AdminTimerControlButton;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Button, Tooltip } from 'antd';\nimport { ClearOutlined, EnvironmentOutlined } from '@ant-design/icons';\n// Hooks\nimport { useGlobalState } from '../../../hooks';\n\nfunction List({ locations }) {\n  const [cache, setCache] = useGlobalState('espiaoEntreNosCache');\n\n  const onCross = (item) => {\n    setCache((s) => {\n      const newState = { ...s };\n      if (newState[item]) {\n        delete newState[item];\n      } else {\n        newState[item] = true;\n      }\n      return newState;\n    });\n  };\n\n  const onClearCrossed = () => setCache({});\n\n  return (\n    <div className=\"e-list\">\n      <h3 className=\"e-list__title\">\n        <EnvironmentOutlined /> Possíveis Locais\n        <Tooltip title=\"Deselecionar todos\">\n          <Button\n            shape=\"circle\"\n            ghost\n            type=\"default\"\n            size=\"small\"\n            icon={<ClearOutlined />}\n            onClick={onClearCrossed}\n            className=\"e-list__clear-button\"\n          />\n        </Tooltip>\n      </h3>\n      <ul className={clsx('e-list__list', 'e-list__list--column')}>\n        {locations.map((item) => (\n          <li\n            className={clsx('e-list__item', cache[item] && 'e-list__item--crossed')}\n            key={item}\n            role=\"button\"\n            onClick={() => onCross(item)}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nList.propTypes = {\n  locations: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default memo(List);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\n// Hooks\nimport { useIsUserReady, useUser, useIsUserThe } from '../../../hooks';\n// Resources & Utils\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { Instruction, PhaseContainer, RoundAnnouncement, StepSwitcher, Title } from '../../shared';\nimport { EspiaoEntreNosCard as Card } from '../../cards';\nimport Notes from './Notes';\nimport AdminTimerControlButton from './AdminTimerControlButton';\nimport LocationsList from './LocationsList';\n\nfunction AssignmentPhase({ state, players, info }) {\n  const isUserReady = useIsUserReady(players, state);\n  const user = useUser(players);\n  const isUserTheSpy = useIsUserThe('currentSpy', state);\n  const [step, setStep] = useState(0);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ESPIAO_ENTRE_NOS.ASSIGNMENT}\n      className=\"e-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady]}>\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state.round}\n          onPressButton={() => setStep(1)}\n          time={5}\n          className=\"e-round-announcement\"\n        >\n          <Instruction className=\"e-phase-instruction\">Há um espião entre nós!</Instruction>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <div className=\"e-phase-step\">\n          <Title level={2} className=\"e-phase-title\">\n            Você está no(a)...\n          </Title>\n\n          <Card location={user.location} role={user.role} />\n\n          <AdminTimerControlButton label=\"Começar cronômetro\" action=\"start\" />\n\n          <Instruction className=\"e-phase-instruction\">\n            {isUserTheSpy\n              ? 'Você terá 10 minutos para descobrir onde os outros agentes estão! Pronto?'\n              : 'Você terá 10 minutos para descobrir quem é o espião entre nós! Pronto?'}\n          </Instruction>\n\n          <Instruction className=\"e-lists\">\n            <LocationsList locations={state.possibleLocations} />\n          </Instruction>\n          <Notes />\n        </div>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nAssignmentPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default AssignmentPhase;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Popconfirm, Select, Space } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n// Hooks\nimport { useGlobalState, useLoading } from '../../../hooks';\n\nfunction PlayerSelect({ players, onSend, isFinalAssessment = false }) {\n  const [isLoading] = useLoading();\n  const [userId] = useGlobalState('userId');\n\n  const [selectedPlayerId, setSelectedPlayerId] = useState(null);\n\n  const playersWithoutMe = Object.values(players).filter((player) => player.id !== userId);\n\n  return (\n    <Space>\n      <Select onChange={setSelectedPlayerId} className=\"e-select\" placeholder=\"Acuse um jogador\">\n        {playersWithoutMe.map((player) => (\n          <Select.Option key={player.id} value={player.id}>\n            {player.name}\n          </Select.Option>\n        ))}\n      </Select>\n      <Popconfirm\n        title={`${\n          isFinalAssessment ? '' : 'Você só pode acusar uma vez durante o jogo! '\n        }Tem certeza que quer acusar ${players[selectedPlayerId]?.name}?`}\n        onConfirm={() => onSend({ vote: selectedPlayerId })}\n        okText=\"Sim\"\n        cancelText=\"Não\"\n      >\n        <Button\n          type=\"primary\"\n          disabled={!selectedPlayerId || isLoading}\n          icon={isLoading ? <LoadingOutlined /> : null}\n        >\n          Acusar{selectedPlayerId ? `: ${players[selectedPlayerId]?.name}` : ''}\n        </Button>\n      </Popconfirm>\n    </Space>\n  );\n}\n\nPlayerSelect.propTypes = {\n  players: PropTypes.object.isRequired,\n  onSend: PropTypes.func.isRequired,\n  isFinalAssessment: PropTypes.bool,\n};\n\nexport default PlayerSelect;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Popconfirm, Select, Space } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLoading } from '../../../hooks';\n\nfunction LocationSelect({ locations, onSend }) {\n  const [isLoading] = useLoading();\n  const [selectedLocation, setSelectedLocation] = useState(null);\n\n  return (\n    <Space className=\"e-select-container e-select-container--locations\">\n      <Select onChange={setSelectedLocation} placeholder=\"Chute um local\">\n        {locations.map((location) => (\n          <Select.Option key={`select-${location}`} value={location}>\n            {location}\n          </Select.Option>\n        ))}\n      </Select>\n      <Popconfirm\n        title={`Você só pode chutar uma vez durante o jogo! Tem certeza que quer chutar ${selectedLocation}?`}\n        onConfirm={() => onSend({ guess: selectedLocation })}\n        okText=\"Sim\"\n        cancelText=\"Não\"\n      >\n        <Button\n          type=\"primary\"\n          disabled={!selectedLocation || isLoading}\n          icon={isLoading ? <LoadingOutlined /> : null}\n        >\n          Chutar{selectedLocation ? `: ${selectedLocation}` : ''}\n        </Button>\n      </Popconfirm>\n    </Space>\n  );\n}\n\nLocationSelect.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default LocationSelect;\n","import React, { useState } from 'react';\nimport { useTimer } from 'react-timer-hook';\n// Design Resources\nimport { Button, message, Modal } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\n// Hooks and API\nimport { ESPIAO_ENTRE_NOS_API } from '../../../adapters';\nimport { useAPICall, useGlobalState } from '../../../hooks';\n// Components\nimport { ButtonContainer } from '../../shared';\n\nfunction FinalAssessmentModal({ isModalVisible, onAdminControl, players }) {\n  return (\n    <Modal\n      visible={isModalVisible}\n      title=\"O Tempo Acabou!\"\n      footer={null}\n      closable={false}\n      className=\"e-modal\"\n    >\n      Quem foi a última pessoa a responder uma pergunta?\n      <ButtonContainer wrap>\n        {Object.entries(players).map(([playerId, player]) => (\n          <Button\n            type=\"default\"\n            key={playerId}\n            icon={<UserOutlined />}\n            onClick={() => onAdminControl({ action: 'final', lastPlayer: playerId })}\n          >\n            {player.name}\n          </Button>\n        ))}\n      </ButtonContainer>\n    </Modal>\n  );\n}\n\nfunction Timer({ timeRemaining, players, hideAccusationSelect }) {\n  const [isAdmin] = useGlobalState('isAdmin');\n  const [isModalVisible, setModalVisible] = useState(false);\n\n  const onAdminControl = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.handleAdminAction,\n    actionName: 'admin-control',\n    successMessage: 'Admin action com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar ação',\n  });\n\n  const onTimesUp = () => {\n    if (isAdmin) {\n      setModalVisible(true);\n    }\n    hideAccusationSelect();\n    message.warning('O tempo acabou!!! Preparado para a avaliação final?', 10);\n  };\n\n  const { minutes, seconds } = useTimer({\n    expiryTimestamp: Date.now() + timeRemaining,\n    autoStart: true,\n    onExpire: onTimesUp,\n  });\n\n  return (\n    <div className=\"e-timer\">\n      {minutes}:{seconds < 10 ? `0${seconds}` : seconds}\n      <FinalAssessmentModal\n        isModalVisible={isModalVisible}\n        onAdminControl={onAdminControl}\n        players={players}\n      />\n    </div>\n  );\n}\n\nexport default Timer;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Button, Tooltip } from 'antd';\nimport { AimOutlined, ClearOutlined, IssuesCloseOutlined } from '@ant-design/icons';\n// Hooks\nimport { useGlobalState } from '../../../hooks';\n// Utils\nimport { orderBy } from '../../../utils';\n\nfunction SuspectsList({ players }) {\n  const [cache, setCache] = useGlobalState('espiaoEntreNosCache');\n  const sortedPlayers = orderBy(Object.values(players), 'name');\n\n  const onCross = (item) => {\n    setCache((s) => {\n      const newState = { ...s };\n      if (newState[item]) {\n        delete newState[item];\n      } else {\n        newState[item] = true;\n      }\n      return newState;\n    });\n  };\n\n  const onClearCrossed = () => setCache({});\n\n  return (\n    <div className={clsx('e-list')}>\n      <h3 className=\"e-list__title\">\n        <AimOutlined /> Suspeitos\n        <Tooltip title=\"Deselecionar todos\">\n          <Button\n            shape=\"circle\"\n            ghost\n            type=\"default\"\n            size=\"small\"\n            icon={<ClearOutlined />}\n            onClick={onClearCrossed}\n            className=\"e-list__clear-button\"\n          />\n        </Tooltip>\n      </h3>\n      <ul className=\"e-list__list\">\n        {sortedPlayers.map((player) => (\n          <li\n            className={clsx('e-list__item', cache[player.id] && 'e-list__item--crossed')}\n            key={player.id}\n            role=\"button\"\n            onClick={() => onCross(player.id)}\n          >\n            {player.name}{' '}\n            {player.usedAccusation && (\n              <Tooltip title=\"Já usou acusação\">\n                <IssuesCloseOutlined size=\"small\" />\n              </Tooltip>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nSuspectsList.propTypes = {\n  players: PropTypes.objectOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      usedAccusation: PropTypes.bool,\n    })\n  ),\n};\n\nexport default memo(SuspectsList);\n","import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { notification } from 'antd';\n// Hooks\nimport { useUser, useAPICall, useIsUserThe, useWhichPlayerIsThe } from '../../../hooks';\n// Resources & Utils\nimport { ESPIAO_ENTRE_NOS_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { Instruction, PhaseContainer, Title } from '../../shared';\nimport { EspiaoEntreNosCard as Card } from '../../cards';\nimport Notes from './Notes';\nimport PlayerSelect from './PlayerSelect';\nimport LocationSelect from './LocationSelect';\nimport Timer from './Timer';\nimport AdminTimerControlButton from './AdminTimerControlButton';\nimport SuspectsList from './SuspectsList';\nimport LocationsList from './LocationsList';\n\nfunction InvestigationPhase({ state, players, info }) {\n  const user = useUser(players);\n  const isUserTheSpy = useIsUserThe('currentSpy', state);\n  const startingPlayer = useWhichPlayerIsThe('startingPlayer', state, players);\n  const [isAccusationSelectVisible, setAccusationSelectVisible] = useState(true);\n\n  const onMakeAccusation = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.makeAccusation,\n    actionName: 'accuse',\n    successMessage: 'Jogador acusado com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar acusar',\n  });\n\n  const onGuessLocation = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.guessLocation,\n    actionName: 'guess',\n    successMessage: 'Chute enviado com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar chutar o local',\n  });\n\n  const hideAccusationSelect = () => {\n    setAccusationSelectVisible(false);\n  };\n\n  useEffect(() => {\n    if (state?.outcome === 'VOTE_FAIL') {\n      notification.info({\n        message: 'A votação não foi unânime',\n        description: state?.votedYes ? `Votaram sim: ${state?.votedYes}` : 'Ninguém votou sim',\n        duration: 10,\n      });\n    }\n\n    if (state.timeRemaining > 590000 && startingPlayer.name) {\n      notification.info({\n        message: '10 minutos!',\n        description: `${startingPlayer.name} começa perguntando!`,\n        duration: 10,\n      });\n    }\n  }, [startingPlayer.name]); // eslint-disable-line\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ESPIAO_ENTRE_NOS.INVESTIGATION}\n      className=\"e-phase\"\n    >\n      <div className=\"e-phase-step-header\">\n        <div className=\"e-phase-step-header__timer-container\">\n          <Timer\n            timeRemaining={state.timeRemaining}\n            players={players}\n            hideAccusationSelect={hideAccusationSelect}\n          />\n        </div>\n\n        <div className=\"e-phase-step-header__center\">\n          <Title level={2} className=\"e-phase-title\">\n            {isUserTheSpy ? 'Onde eles estão?' : 'Quem é o Espião?'}\n          </Title>\n          <Card location={user.location} role={user.role} />\n        </div>\n      </div>\n\n      {isAccusationSelectVisible && (\n        <Fragment>\n          {isUserTheSpy && <LocationSelect locations={state.possibleLocations} onSend={onGuessLocation} />}\n\n          {!user?.usedAccusation ? (\n            <PlayerSelect players={players} onSend={onMakeAccusation} />\n          ) : (\n            <Instruction className=\"e-phase-instruction\">Você já usou sua chance de acusar</Instruction>\n          )}\n        </Fragment>\n      )}\n\n      <Instruction className=\"e-lists\">\n        <SuspectsList players={players} />\n        <LocationsList locations={state.possibleLocations} />\n      </Instruction>\n\n      <Notes />\n\n      <AdminTimerControlButton label=\"Forçar pausar cronômetro\" action=\"pause\" />\n    </PhaseContainer>\n  );\n}\n\nInvestigationPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default InvestigationPhase;\n","import { Modal } from 'antd';\nimport React, { useState } from 'react';\nimport { useTimer } from 'react-timer-hook';\nimport { inNSeconds } from '../../../utils';\n\nfunction EmergencyAlertSVG() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 245.8 204.8\"\n      overflow=\"visible\"\n      className=\"e-emergency-alert__svg\"\n    >\n      <defs />\n\n      <g id=\"g6f2cE_2_\">\n        <path\n          fill=\"#f9c303\"\n          d=\"M0 114.9c2.6-3.2 5.8-4.4 10-4.1 4 .3 8 0 11.9.1 4.6.1 7.8 2.7 8 6.4.2 3.7-3.1 6.5-7.7 6.6-4.5.1-9-.2-13.4.1-3.9.3-6.7-1.1-8.8-4.2v-4.9zM245.8 119.9c-2.1 3.1-4.9 4.5-8.8 4.2-4.6-.3-9.3 0-14-.1-4.3-.1-7.5-2.9-7.1-6.6.4-3.9 2.8-6.4 6.9-6.5 5.3-.1 10.6.1 16-.1 3.3-.1 4.8 2.4 7 4v5.1zM129.9 0c3.8 2.2 5.3 5.5 5 9.9-.2 4.1.1 8.3-.1 12.5-.2 4.6-3.2 7.7-6.9 7.6-4-.1-6.2-2.8-6.3-7.8-.1-4.3.2-8.7-.1-13-.3-4 1-7 4.4-9.2h4z\"\n        />\n        <path\n          d=\"M197.1 170c-3.5-.2-6.9-.2-10.4-.2h-1.6c-19.2.1-38.5.2-57.7.2-22.2 0-44.5-.1-66.7-.2h-1.6c-2.8.1-5.6.1-8.4.2-7.1.2-12.2 3.6-13.7 9.2-2.6 9.5-.1 20.2 5.6 23.6 1.3.8 2.6 1.3 4.2 1.2.1.3.1.6.2.9h152.9c.2-.2.3-.5.3-.8-2.7 0-5.4-.1-8.1-.1 2.7 0 5.4.1 8.1.1 6.3-1.7 9.6-5.6 9.7-11.9.1-3-.2-6 .1-8.9.5-6.7-5.3-12.9-12.9-13.3z\"\n          fill=\"#3a3939\"\n        />\n        <path\n          fill=\"#f9c303\"\n          d=\"M189.9 22.6c0 .1-.1 1.4-.6 2.3-2.7 4.8-5.4 9.5-8.2 14.2-2.2 3.6-5.6 4.3-9 2.4-3.5-2-4.3-5.4-2.2-9 2.7-4.8 5.4-9.5 8.3-14.2 1.6-2.6 4.1-4 7.2-3 2.8 1 4.8 2.9 4.5 7.3zM77.4 35.6c-.3 3-1.7 5.2-4.1 6.2-2.7 1.1-5.9 1.2-7.7-1.6-3.4-5.3-6.7-10.7-9.5-16.3-1.2-2.4-.6-5.3 1.8-7.2 2.3-1.7 5-2.8 7.3-.7 5.9 5.4 8.4 12.9 12.2 19.6zM22.4 55.9c.3.1 1.3.1 2.2.5 4.9 2.8 9.8 5.5 14.6 8.5 3.6 2.2 4 5.8 2.1 9.1-1.9 3.2-5.2 4.1-8.7 2.1-4.9-2.8-9.8-5.5-14.6-8.5-2.6-1.6-3.8-4.3-2.8-7.3s3.2-4.7 7.2-4.4zM230.8 62c.1 2.6-1.2 4.5-3.3 5.8-4.8 2.9-9.7 5.8-14.6 8.5-3.5 1.9-6.8.7-8.6-2.5-1.8-3.1-1.3-6.6 2.1-8.7 4.8-3 9.6-5.9 14.6-8.5 4.8-2.5 9.8.5 9.8 5.4z\"\n        />\n        <path\n          d=\"M186 105.9c-1.5-28.5-22-48.9-46.3-54.7-14.7-3.5-29.8-2.8-43.8 3.4-21.3 9.4-33.5 26-36.2 49.3-1 1.9-.6 3.9-.6 5.9v60.1h1.6c22.2.1 44.5.2 66.7.2 19.2 0 38.5-.1 57.7-.2h1.6v-57.1c-.1-2.4.3-4.7-.7-6.9zm-95.5 9.6c-1.5 10-2.2 20.1-2.2 30.3 0 3.4-.7 4.6-4.3 4.5-7.9-.2-8.1 0-7.9-7.7.2-11.6-1.1-23.3.9-34.8 2.5-14.8 10.9-25.7 23.6-33.4.5-.3 1.2-.3 2.9-.8-6.5 14-10.9 27.6-13 41.9z\"\n          fill=\"red\"\n        />\n        <path\n          d=\"M103.4 73.5c-6.4 14-10.7 27.6-12.9 41.9-1.5 10-2.2 20.1-2.2 30.3 0 3.4-.7 4.6-4.3 4.5-7.9-.2-8.1 0-7.9-7.7.2-11.6-1.1-23.3.9-34.8 2.5-14.8 10.9-25.7 23.6-33.4.4-.3 1.1-.3 2.8-.8z\"\n          fill=\"#fefefd\"\n        />\n      </g>\n    </svg>\n  );\n}\n\nfunction EmergencyAlert() {\n  const [isVisible, setVisible] = useState(true);\n\n  useTimer({\n    expiryTimestamp: inNSeconds(2),\n    autoStart: true,\n    onExpire: () => setVisible(false),\n  });\n\n  return (\n    <Modal centered footer={null} visible={isVisible} className=\"e-emergency-alert\" closable={false}>\n      <EmergencyAlertSVG />\n    </Modal>\n  );\n}\n\nexport default EmergencyAlert;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useUser, useAPICall, useIsUserThe, useWhichPlayerIsThe } from '../../../hooks';\n// Resources & Utils\nimport { ESPIAO_ENTRE_NOS_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { Instruction, PhaseContainer, ReadyPlayersBar, Title, View, ViewSwitch } from '../../shared';\nimport { EspiaoEntreNosCard as Card } from '../../cards';\nimport Notes from './Notes';\nimport AdminTimerControlButton from './AdminTimerControlButton';\nimport SuspectsList from './SuspectsList';\nimport EmergencyAlert from './EmergencyAlert';\nimport LocationsList from './LocationsList';\n\nfunction AssessmentPhase({ state, players, info }) {\n  const user = useUser(players);\n  const isUserTheTarget = useIsUserThe('target', state);\n  const isUserTheAccuser = useIsUserThe('accuser', state);\n  const [submittedAction, setSubmitAction] = useState(false);\n  const accuser = useWhichPlayerIsThe('accuser', state, players);\n  const target = useWhichPlayerIsThe('target', state, players);\n\n  const onSubmitVoting = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.submitVoting,\n    actionName: 'guess',\n    onBeforeCall: () => setSubmitAction(true),\n    onError: () => setSubmitAction(false),\n    successMessage: 'Voto enviado com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar seu voto',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ESPIAO_ENTRE_NOS.ASSESSMENT}\n      className=\"e-phase\"\n    >\n      <Title level={2} className=\"e-phase-title\">\n        {accuser.name} está acusando {target.name} de ser o espião. Concorda?\n      </Title>\n\n      {!state?.finalAssessment && <EmergencyAlert />}\n\n      <ViewSwitch cases={[isUserTheAccuser, isUserTheTarget, true]}>\n        <View key=\"accuser\">\n          <Instruction className=\"e-phase-instruction\">\n            Você não participa dessa votacão, afinal, você quem acusou!\n          </Instruction>\n        </View>\n\n        <View key=\"target\">\n          <Instruction className=\"e-phase-instruction\">\n            Você não participa dessa votacão, afinal, é você quem está no paredão!\n          </Instruction>\n        </View>\n\n        <View key=\"others\">\n          <Space>\n            <Button ghost disabled={submittedAction} onClick={() => onSubmitVoting({ vote: true })}>\n              Também acho!\n            </Button>\n            <Button ghost disabled={submittedAction} onClick={() => onSubmitVoting({ vote: false })}>\n              Não é ele(a)\n            </Button>\n          </Space>\n        </View>\n      </ViewSwitch>\n\n      <Card location={user.location} role={user.role} />\n\n      <ReadyPlayersBar players={players} readyText=\"Votei\" readyTextPlural=\"Votamos\" />\n\n      <Instruction className=\"e-lists\">\n        <SuspectsList players={players} />\n        <LocationsList locations={state.possibleLocations} />\n      </Instruction>\n\n      <Notes />\n\n      <AdminTimerControlButton label=\"Forçar continuar cronômetro\" action=\"resume\" />\n    </PhaseContainer>\n  );\n}\n\nAssessmentPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default AssessmentPhase;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { message } from 'antd';\n// Hooks\nimport { useAPICall, useIsUserThe, useWhichPlayerIsThe } from '../../../hooks';\n// Resources & Utils\nimport { ESPIAO_ENTRE_NOS_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { AdminOnly, AdminButton } from '../../admin/index';\nimport { Instruction, PhaseContainer, Title } from '../../shared';\n\nconst determineView = (resolutionType, spyWin, isUserTheSpy, timeRemaining) => {\n  return {\n    playerVictory: spyWin === isUserTheSpy,\n    isUserTheSpy,\n    wasABadVoting: spyWin && Boolean(timeRemaining > 0),\n    wasAnAccusationAttempt: resolutionType === 'SPY_FOUND',\n    didSpyGuess: resolutionType === 'SPY_GUESS',\n    didTheSpyWin: spyWin,\n  };\n};\n\nfunction ResolutionPhase({ state, players, info }) {\n  const isUserTheSpy = useIsUserThe('currentSpy', state);\n  const currentSpy = useWhichPlayerIsThe('currentSpy', state, players);\n  const target = useWhichPlayerIsThe('target', state, players);\n\n  const onAdminControl = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.handleAdminAction,\n    actionName: 'admin-control',\n    successMessage: 'Admin action com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar ação',\n  });\n\n  useEffect(() => {\n    if (state?.resolutionType === 'SPY_GUESS') {\n      if (state.spyWin) {\n        message.warning(`${currentSpy?.name} chutou ${state.guess} e acertou`, 6);\n      } else {\n        message.warning(`${currentSpy?.name} chutou ${state.guess} e error feio`, 6);\n      }\n    }\n  }, []); // eslint-disable-line\n\n  const viewInfo = determineView(state.resolutionType, state.spyWin, isUserTheSpy, state?.timeRemaining);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ESPIAO_ENTRE_NOS.RESOLUTION}\n      className=\"e-phase e-phase--center\"\n    >\n      <div className=\"e-phase-step\">\n        <Title level={2} className=\"e-phase-title\">\n          {viewInfo.playerVictory ? 'Missão Cumprida!' : 'Missão Fracassada!'}\n        </Title>\n\n        {viewInfo.wasAnAccusationAttempt && (\n          <Instruction className=\"e-phase-instruction\">\n            Os agentes tentaram incriminar {target.name}\n            {viewInfo.didTheSpyWin ? ' e erraram feio!' : ' e acertaram na mosca!'}\n            <br />\n            {viewInfo.didTheSpyWin\n              ? `O espião era ${currentSpy.name}! Todos os segredos da agência foram revelados e o mundo vai acabar.`\n              : `Parabéns! O mundo está salvo graças a você.`}\n            <br />\n            {viewInfo.wasABadVoting &&\n              'Da próxima vez, discutam mais antes de fazerem uma votação precipitada.'}\n          </Instruction>\n        )}\n\n        {viewInfo.didSpyGuess && (\n          <Instruction className=\"e-phase-instruction\">\n            O espião disse que o local é {state?.guess}\n            {viewInfo.didTheSpyWin\n              ? ' e acertou na mosca!'\n              : ` e errou feio! Os Agentes estão no ${state.currentLocation}`}\n            <br />\n            {viewInfo.didTheSpyWin\n              ? `Todos os segredos da agência foram revelados e o mundo vai acabar.`\n              : `Foi por pouco, mas não foi dessa vez que o mal venceu.`}\n            <br />\n          </Instruction>\n        )}\n      </div>\n\n      <Instruction className=\"e-phase-instruction\">\n        Disfarces dos infiltrados:\n        {Object.values(players).map(({ id, name, role }) => (\n          <li key={`role-list-${id}`}>\n            {name} como {role}\n          </li>\n        ))}\n      </Instruction>\n\n      <AdminOnly>\n        <AdminButton action={() => onAdminControl({ action: 'round' })} label=\"Iniciar nova rodada\" />\n        <AdminButton action={() => onAdminControl({ action: 'end' })} label=\"Terminar o jogo\" />\n      </AdminOnly>\n    </PhaseContainer>\n  );\n}\n\nResolutionPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default ResolutionPhase;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Modal, notification, Select } from 'antd';\n// Hooks\nimport { useUser, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { ESPIAO_ENTRE_NOS_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\nimport { getPlayersFromIds } from '../../../utils';\n// Components\nimport { AdminOnly } from '../../admin/index';\nimport { ButtonContainer, Instruction, PhaseContainer, Title } from '../../shared';\nimport { EspiaoEntreNosCard as Card } from '../../cards';\nimport LocationsList from './LocationsList';\nimport SuspectsList from './SuspectsList';\nimport Notes from './Notes';\nimport PlayerSelect from './PlayerSelect';\n\nfunction FinalAssessmentInstruction({ playerOrder, playerOrderIndex, players }) {\n  return (\n    <Instruction className=\"e-phase-instruction\">\n      Já que vocês falharam em encontrar o espião, há uma última possibilidade!\n      <ul>\n        {playerOrderIndex === 0 ? (\n          <li>Cada jogador, começando por {players?.[playerOrder[0]]?.name}, faz uma acusação.</li>\n        ) : (\n          <li>Agora é a vez de {playerOrder[playerOrderIndex]} faz uma acusação.</li>\n        )}\n        <li>Se a votação for unânime em qualquer uma das votações, o jogo acaba e revelam-se os papéis.</li>\n        <li>Sem discussão dessa vez, simplesmente acuse alguém! Não temos mais tempo!</li>\n        <li>A ordem será essa: {getPlayersFromIds(playerOrder, players, true).join(', ')}</li>\n      </ul>\n    </Instruction>\n  );\n}\n\nfunction FinalAssessmentModal({ isModalVisible, onMakeAccusation, players, playerOrder, playerOrderIndex }) {\n  return (\n    <Modal\n      visible={isModalVisible}\n      title=\"Quem você vai acusar?\"\n      footer={null}\n      closable={false}\n      className=\"e-modal\"\n    >\n      <FinalAssessmentInstruction\n        playerOrder={playerOrder}\n        playerOrderIndex={playerOrderIndex}\n        players={players}\n      />\n      Não há tempo pra pensar, escolha alguém!\n      <ButtonContainer>\n        <PlayerSelect players={players} onSend={onMakeAccusation} isFinalAssessment />\n      </ButtonContainer>\n    </Modal>\n  );\n}\n\nfunction FinalAssessmentPhase({ state, players, info }) {\n  const user = useUser(players);\n  const [accuser, setAccuser] = useState(null);\n  const [target, setTarget] = useState(null);\n\n  const onAdminControl = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.handleAdminAction,\n    actionName: 'admin-control',\n    successMessage: 'Admin action com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar ação',\n  });\n\n  const onMakeAccusation = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.makeAccusation,\n    actionName: 'accuse',\n    successMessage: 'Jogador acusado com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar acusar',\n  });\n\n  useEffect(() => {\n    if (state?.outcome === 'VOTE_FAIL') {\n      notification.info({\n        message: 'A votação não foi unânime',\n        description: state?.votedYes ? `Votaram sim: ${state?.votedYes}` : 'Ninguém votou sim',\n        duration: 10,\n      });\n    }\n  }, []); // eslint-disable-line\n\n  const isUserTheAccuser = state.playerOrder[state.playerOrderIndex] === user.id;\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ESPIAO_ENTRE_NOS.FINAL_ASSESSMENT}\n      className=\"e-phase\"\n    >\n      <Title level={2} className=\"e-phase-title\">\n        Última Chance!\n      </Title>\n\n      <FinalAssessmentModal\n        isModalVisible={isUserTheAccuser}\n        onMakeAccusation={onMakeAccusation}\n        players={players}\n        playerOrder={state.playerOrder}\n        playerOrderIndex={state.playerOrderIndex}\n      />\n\n      <FinalAssessmentInstruction\n        playerOrder={state.playerOrder}\n        playerOrderIndex={state.playerOrderIndex}\n        players={players}\n      />\n\n      <Card location={user.location} role={user.role} />\n\n      <Instruction className=\"e-lists\">\n        <SuspectsList players={players} />\n        <LocationsList locations={state.possibleLocations} />\n      </Instruction>\n\n      <Notes />\n\n      <AdminOnly className=\"e-admin-final-assessment\">\n        <span>Acusador:</span>\n        <Select onChange={setAccuser} className=\"e-select\" placeholder=\"Acusador\">\n          {Object.values(players).map((player) => (\n            <Select.Option key={player.id} value={player.id}>\n              {player.name}\n            </Select.Option>\n          ))}\n        </Select>\n        <span>Acusado:</span>\n        <Select onChange={setTarget} className=\"e-select\" placeholder=\"Acusado\">\n          {Object.values(players).map((player) => (\n            <Select.Option key={player.id} value={player.id}>\n              {player.name}\n            </Select.Option>\n          ))}\n        </Select>\n        <Button\n          type=\"primary\"\n          disabled={!accuser || !target || accuser === target}\n          onClick={() =>\n            onAdminControl({\n              action: {\n                accuser,\n                target,\n              },\n            })\n          }\n        >\n          Enviar decisão final\n        </Button>\n      </AdminOnly>\n    </PhaseContainer>\n  );\n}\n\nFinalAssessmentPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default FinalAssessmentPhase;\n","import React from 'react';\n// Hooks\nimport { GAME_COLLECTION, PHASES } from '../../../utils/constants';\n// Components\nimport { GameOver, Session } from '../../shared';\nimport Lobby from '../../lobby/Lobby';\nimport { Rules } from '../../rules';\nimport { PageError } from '../../errors/PageError';\nimport AssignmentPhase from './AssignmentPhase';\nimport InvestigationPhase from './InvestigationPhase';\nimport AssessmentPhase from './AssessmentPhase';\nimport ResolutionPhase from './ResolutionPhase';\nimport FinalAssessmentPhase from './FinalAssessmentPhase';\n\nfunction SessionEspiaoEntreNos({ gameId }) {\n  function getActiveComponent(phase) {\n    switch (phase) {\n      case PHASES.ESPIAO_ENTRE_NOS.LOBBY:\n        return Lobby;\n      case PHASES.ESPIAO_ENTRE_NOS.RULES:\n        return Rules;\n      case PHASES.ESPIAO_ENTRE_NOS.ASSIGNMENT:\n        return AssignmentPhase;\n      case PHASES.ESPIAO_ENTRE_NOS.INVESTIGATION:\n        return InvestigationPhase;\n      case PHASES.ESPIAO_ENTRE_NOS.ASSESSMENT:\n        return AssessmentPhase;\n      case PHASES.ESPIAO_ENTRE_NOS.FINAL_ASSESSMENT:\n        return FinalAssessmentPhase;\n      case PHASES.ESPIAO_ENTRE_NOS.RESOLUTION:\n        return ResolutionPhase;\n      case PHASES.ESPIAO_ENTRE_NOS.GAME_OVER:\n        return GameOver;\n      default:\n        return PageError;\n    }\n  }\n\n  return (\n    <Session\n      gameId={gameId}\n      gameCollection={GAME_COLLECTION.ESPIAO_ENTRE_NOS}\n      getActiveComponent={getActiveComponent}\n    />\n  );\n}\n\nexport default SessionEspiaoEntreNos;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { ArrowLeftOutlined, ArrowRightOutlined, MinusOutlined } from '@ant-design/icons';\nimport { LETTERS } from '../../../utils/constants';\n\nconst getColorModifier = (letter) => {\n  const index = LETTERS.indexOf(letter);\n  return Math.abs(index) % 4;\n};\n\nfunction Card({ left, right, className, setNeedle }) {\n  const leftColor = getColorModifier(left[0]);\n  const rightColor = getColorModifier(right[0]);\n  const cardSideClass = 'o-card__side';\n  const isButton = Boolean(setNeedle);\n\n  const onSetNeedle = (direction) => {\n    if (setNeedle) {\n      if (direction === 1) {\n        setNeedle((n) => Math.min(n + direction, 10));\n      } else {\n        setNeedle((n) => Math.max(n + direction, -10));\n      }\n    }\n  };\n\n  return (\n    <div className={clsx('o-card', className)}>\n      <div\n        className={clsx(\n          cardSideClass,\n          `${cardSideClass}--left`,\n          `${cardSideClass}--L${leftColor}`,\n          isButton && `${cardSideClass}--button`\n        )}\n        onClick={() => onSetNeedle(-1)}\n      >\n        <span className=\"o-card__arrow\">\n          <ArrowLeftOutlined /> <MinusOutlined /> <MinusOutlined />\n        </span>\n        <span className=\"o-card__text\">{left}</span>\n      </div>\n      <div\n        className={clsx(\n          cardSideClass,\n          `${cardSideClass}--right`,\n          `${cardSideClass}--R${rightColor}`,\n          isButton && `${cardSideClass}--button`\n        )}\n        onClick={() => onSetNeedle(1)}\n      >\n        <span className=\"o-card__arrow\">\n          <MinusOutlined /> <MinusOutlined /> <ArrowRightOutlined />\n        </span>\n        <span className=\"o-card__text\">{right}</span>\n      </div>\n    </div>\n  );\n}\n\nCard.propTypes = {\n  left: PropTypes.string.isRequired,\n  right: PropTypes.string.isRequired,\n  className: PropTypes.string,\n};\n\nCard.defaultProps = {\n  cardName: '',\n};\n\nexport default memo(Card);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Components\nimport { Instruction, Title } from '../../shared';\nimport Card from './Card';\n\nfunction CardSelection({ onSendChosenSide, cards }) {\n  return (\n    <div className=\"o-card-selection\">\n      <Title>Selecione a carta que será usada nessa rodada!</Title>\n      <Instruction contained>Escolha uma carta que você acredita que conseguirá criar uma dica.</Instruction>\n      <div className=\"o-card-selection__container\">\n        {cards.map((card) => (\n          <button\n            key={`card-button-${card.id}`}\n            className=\"o-card-selection__button\"\n            onClick={() => onSendChosenSide({ cardId: card.id })}\n          >\n            <Card left={card.left} right={card.right} />\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nCardSelection.propTypes = {\n  onSendChosenSide: PropTypes.func.isRequired,\n  cards: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      left: PropTypes.string,\n      right: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default CardSelection;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport {\n  useIsUserReady,\n  useWhichPlayerIsThe,\n  useIsUserThe,\n  useAPICall,\n  useIsUsersTeamActive,\n} from '../../../hooks';\n// Resources & Utils\nimport { ONDA_TELEPATICA } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport {\n  Instruction,\n  PhaseContainer,\n  RoundAnnouncement,\n  Step,\n  StepSwitcher,\n  ViewIf,\n  WaitingRoom,\n} from '../../shared';\nimport CardSelection from './CardSelection';\nimport { AvatarName } from '../../avatars';\n\nfunction DialSidesPhase({ state, players, info }) {\n  const isUserReady = useIsUserReady(players, state);\n  const [step, setStep] = useState(0);\n  const psychic = useWhichPlayerIsThe('psychic', state, players);\n  const isUserThePsychic = useIsUserThe('psychic', state);\n  const isUsersTeamActive = useIsUsersTeamActive(state, players);\n\n  const onSendChosenSide = useAPICall({\n    apiFunction: ONDA_TELEPATICA.submitSides,\n    actionName: 'submit-side',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: 'Carta selecionada com sucesso',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar enviar a carta',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ONDA_TELEPATICA.DIAL_SIDES}\n      className=\"o-dial-sides-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady]}>\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state.round}\n          onPressButton={() => setStep(1)}\n          players={players}\n          teams={state.teams}\n          time={10}\n        >\n          <ViewIf isVisible={isUsersTeamActive}>\n            <Instruction contained>\n              É a vez do seu time!\n              <br />\n              <AvatarName player={psychic} uppercase size=\"large\" addressUser />\n              será o(a) medium\n            </Instruction>\n          </ViewIf>\n\n          <ViewIf isVisible={!isUsersTeamActive}>\n            <Instruction contained>\n              É a vez do\n              <span className=\"u-word-selection-phase__guesser-name-announcement\">\n                TIME {state.activeTeam}\n              </span>\n              <br />\n              <AvatarName player={psychic} uppercase size=\"large\" addressUser />\n              será o(a) medium\n            </Instruction>\n          </ViewIf>\n\n          <div className=\"u-word-selection-phase__team-points\"></div>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <Step fullWidth>\n          <ViewIf isVisible={isUserThePsychic}>\n            <CardSelection onSendChosenSide={onSendChosenSide} cards={state.cards} />\n          </ViewIf>\n\n          <ViewIf isVisible={!isUserThePsychic}>\n            <WaitingRoom\n              players={players}\n              title={`${psychic.name} está escolhendo uma carta...`}\n              instruction=\"Aguarde enquanto ele(a) decide a carta que será usada nessa rodada.\"\n            />\n          </ViewIf>\n        </Step>\n\n        {/* Step 2 */}\n        <WaitingRoom\n          players={players}\n          title=\"Pronto!\"\n          instruction=\"Vamos aguardar o jogo iniciar a próxima fase.\"\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nDialSidesPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default DialSidesPhase;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Components\nimport Card from './Card';\n\nconst getBracketClass = (number, showNeedle, needle, showTarget, target) => {\n  const baseBracketClass = 'o-dial-numbers';\n  const modifier = number % 2 === 0 ? 'even' : 'odd';\n  return clsx(\n    baseBracketClass,\n    `${baseBracketClass}--${modifier}`,\n    showNeedle && needle === number && `${baseBracketClass}--active`,\n    showTarget && target === number && `${baseBracketClass}--target`\n  );\n};\n\nfunction Dial({\n  card,\n  needle = 0,\n  showNeedle = false,\n  target = 0,\n  showTarget = false,\n  rivalGuess = 0,\n  rivalTeam = 'rival',\n  animate = false,\n  showPoints,\n  setNeedle,\n}) {\n  const baseClass = 'o-dial';\n  const basePointsClass = 'o-dial-points';\n  const baseRivalClass = 'o-dial-rival';\n  const points = Math.abs(needle - target);\n\n  return (\n    <div\n      className={clsx(\n        `${baseClass}`,\n        animate && `${baseClass}--animated`,\n        Boolean(setNeedle) && `${baseClass}--clickable`\n      )}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 670 340\"\n        overflow=\"visible\"\n        className={clsx(`${baseClass}__svg`)}\n      >\n        <defs />\n\n        <path\n          d=\"M669.9 329.9c-1.1-21-6.1-71.9-27.3-127.7C591.2 83.3 472.8 0 335 0h-.2C198.2.1 80.7 81.9 28.7 199.2 5.7 258 1 312.1 0 332c-.1 1.1.1 2.1.5 3 1.1 2.9 3.9 5 7.2 5h654.6c3.3 0 6.1-2.1 7.2-5 .2-.5.3-1.1.4-1.7v-3.4z\"\n          fill=\"#181d44\"\n        />\n\n        {showTarget && (\n          <path\n            id=\"target\"\n            className={clsx(`${baseClass}__target`, animate && `${basePointsClass}--animated-2`)}\n            style={{ transform: `rotate(${target * 8}deg)` }}\n            d=\"M335.2 0l7.1 11.4 13 3.2-8.6 10.3.9 13.4-12.4-5.1-12.5 5.1 1-13.4-8.6-10.3 13-3.2z\"\n          />\n        )}\n\n        <g className=\"o-dial-numbers\">\n          <path\n            id=\"bracket-number-10-r\"\n            className={getBracketClass(10, showNeedle, needle, showTarget, target)}\n            d=\"M341.2 51.9l-3 5.4v-5.1c0-.4.1-.8.4-1.1.3-.3.6-.4 1.1-.4.8 0 1.3.4 1.5 1.2zm-2.5 9c.2.2.6.3 1 .3s.8-.1 1.1-.5c.3-.3.4-.7.4-1.1v-5.1l-3 5.3c.1.6.2.9.5 1.1zm16.8-20.2L335 340 314.5 40.7h41zm-23.8 8.5h-1.5l-3 1.5v1.5h1.5v10.5h3V49.2zm12.5 10.5v-7.5c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v7.5c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.6.9-1.3.9-2.1z\"\n            onClick={() => setNeedle(10)}\n          />\n          <path\n            id=\"bracket-number-9-r\"\n            className={getBracketClass(9, showNeedle, needle, showTarget, target)}\n            d=\"M336 51.1c.3.3.4.7.4 1.1v3c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.8-.1-1.1-.5-.3-.3-.4-.7-.4-1.1v-3c0-.4.1-.8.4-1.1s.6-.5 1.1-.5c.5.1.8.2 1.1.5zm19.5-10.4L335 340 314.5 40.7h41zm-16.1 16.7v-5.2c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v3c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h1.5c.9 0 1.4-.5 1.5-1.5v1.5c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-1.5v1.5h2.2c1.4 0 2.7-.5 3.7-1.5s1.6-2.3 1.6-3.8z\"\n            onClick={() => setNeedle(9)}\n          />\n          <path\n            id=\"bracket-number-8-r\"\n            className={getBracketClass(8, showNeedle, needle, showTarget, target)}\n            d=\"M336.4 58.2v1.5c0 .4-.1.8-.4 1.1s-.7.4-1.1.4c-.4 0-.8-.1-1.1-.4s-.4-.7-.4-1.1v-1.5c0-1 .5-1.5 1.5-1.5s1.5.5 1.5 1.5zm-1.5-7.5c-.4 0-.8.1-1.1.4-.3.3-.4.7-.4 1.1v1.5c0 .4.1.8.4 1.1.3.3.6.4 1.1.4.4 0 .8-.1 1.1-.4.3-.3.4-.6.4-1.1v-1.5c0-.4-.1-.8-.4-1.1-.3-.3-.6-.4-1.1-.4zm20.6-10L335 340 314.5 40.7h41zm-19.1 15.2c1-.1 1.7-.4 2.2-.9.5-.5.7-1.2.7-2.1v-.7c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v.7c0 .9.3 1.6.8 2.1s1.3.8 2.2.9c-1 0-1.7.3-2.2 1-.5.6-.8 1.3-.8 2v.7c0 .7.3 1.3.9 2 .6.7 1.3 1 2.1 1h3c.8 0 1.5-.3 2.1-1 .6-.7.9-1.3.9-2V59c0-.7-.2-1.4-.7-2-.4-.7-1.2-1.1-2.2-1.1z\"\n            onClick={() => setNeedle(8)}\n          />\n          <path\n            id=\"bracket-number-7-r\"\n            className={getBracketClass(7, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm24.2 13l-.8 1.5c-1 2.1-1.5 3.6-1.5 4.5v3h-3v-3c0-1 .5-2.5 1.5-4.5l1.5-3v-1.5h-6v-1.5h9v3l-.7 1.5z\"\n            onClick={() => setNeedle(7)}\n          />\n\n          <path\n            id=\"bracket-number-6-r\"\n            className={getBracketClass(6, showNeedle, needle, showTarget, target)}\n            d=\"M336 55.6c.3.3.4.7.4 1.1v3c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.8-.1-1.1-.5-.3-.3-.4-.7-.4-1.1v-3c0-.4.1-.8.4-1.1.3-.3.6-.4 1.1-.4.5 0 .8.1 1.1.4zm19.5-14.9L335 340 314.5 40.7h41zm-16.1 19v-3c0-.8-.3-1.5-.9-2.1s-1.3-.9-2.1-.9h-1.5c-.4 0-.8.1-1 .4-.3.3-.4.6-.5 1.1v-1.5c0-.8.3-1.5.9-2.1s1.3-.9 2.1-.9h1.5v-1.5h-2.2c-1.4 0-2.7.5-3.7 1.5s-1.6 2.3-1.6 3.7v5.2c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.5.9-1.2.9-2z\"\n            onClick={() => setNeedle(6)}\n          />\n\n          <path\n            id=\"bracket-number-5-r\"\n            className={getBracketClass(5, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm21.9 13c.8 0 1.5.3 2.1.9s.9 1.3.9 2.1v3c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-3c-1.8 0-2.8-1-3-3h1.5c.1 1 .6 1.5 1.5 1.5h1.5c.4 0 .8-.1 1.1-.4s.4-.7.4-1.1v-3c0-.4-.1-.8-.4-1.1-.3-.3-.7-.4-1.1-.4h-4.5v-6h9v1.5h-6v3h3z\"\n            onClick={() => setNeedle(5)}\n          />\n\n          <path\n            id=\"bracket-number-4-r\"\n            className={getBracketClass(4, showNeedle, needle, showTarget, target)}\n            d=\"M330.4 56.7l4.5-5.6v5.6h-4.5zm25.1-16L335 340 314.5 40.7h41zm-16.1 17.5v-1.5h-1.5v-7.5h-3l-6 7.5v1.5h6v4.5h3v-4.5h1.5z\"\n            onClick={() => setNeedle(4)}\n          />\n\n          <path\n            id=\"bracket-number-3-r\"\n            className={getBracketClass(3, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm21.9 13c.9 0 1.6.3 2.1 1s.8 1.3.8 2v3c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-3c-1.8 0-2.8-1-3-3h1.5c.1 1 .6 1.5 1.5 1.5h1.5c.4 0 .8-.1 1.1-.4s.4-.7.4-1.1v-3c0-.2-.1-.6-.4-.9s-.6-.6-1.1-.6h-3v-1.5l4.5-3h-6v-1.5h9v1.5l-4.5 3h1.6z\"\n            onClick={() => setNeedle(3)}\n          />\n\n          <path\n            id=\"bracket-number-2-r\"\n            className={getBracketClass(2, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm24.9 20.5v1.5h-9v-1.5c0-1 1-2.4 2.9-4l.2-.2c1.9-1.7 2.9-3 2.9-4v-.7c0-.4-.1-.8-.4-1.1-.3-.3-.7-.4-1.1-.4h-1.5c-.9 0-1.4.5-1.5 1.5h-1.5c.2-2 1.2-3 3-3h3c.8 0 1.5.3 2.1.9.6.6.9 1.3.9 2.1v.7c0 1-1 2.4-2.9 4l-.2.2c-1.9 1.7-2.9 3-2.9 3.9v.1h6z\"\n            onClick={() => setNeedle(2)}\n          />\n          <path\n            id=\"bracket-number-1-r\"\n            className={getBracketClass(1, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm18.9 22V52.2h-1.5v-1.5l3-1.5h1.5v13.5h-3z\"\n            onClick={() => setNeedle(1)}\n          />\n\n          <path\n            id=\"bracket-number-10-l\"\n            className={getBracketClass(-10, showNeedle, needle, showTarget, target)}\n            d=\"M341.2 51.9l-3 5.4v-5.1c0-.4.1-.8.4-1.1.3-.3.6-.4 1.1-.4.8 0 1.3.4 1.5 1.2zm-2.5 9c.2.2.6.3 1 .3s.8-.1 1.1-.5c.3-.3.4-.7.4-1.1v-5.1l-3 5.3c.1.6.2.9.5 1.1zm16.8-20.2L335 340 314.5 40.7h41zm-23.8 8.5h-1.5l-3 1.5v1.5h1.5v10.5h3V49.2zm12.5 10.5v-7.5c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v7.5c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.6.9-1.3.9-2.1z\"\n            onClick={() => setNeedle(-10)}\n          />\n          <path\n            id=\"bracket-number-9-l\"\n            className={getBracketClass(-9, showNeedle, needle, showTarget, target)}\n            d=\"M336 51.1c.3.3.4.7.4 1.1v3c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.8-.1-1.1-.5-.3-.3-.4-.7-.4-1.1v-3c0-.4.1-.8.4-1.1s.6-.5 1.1-.5c.5.1.8.2 1.1.5zm19.5-10.4L335 340 314.5 40.7h41zm-16.1 16.7v-5.2c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v3c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h1.5c.9 0 1.4-.5 1.5-1.5v1.5c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-1.5v1.5h2.2c1.4 0 2.7-.5 3.7-1.5s1.6-2.3 1.6-3.8z\"\n            onClick={() => setNeedle(-9)}\n          />\n          <path\n            id=\"bracket-number-8-l\"\n            className={getBracketClass(-8, showNeedle, needle, showTarget, target)}\n            d=\"M336.4 58.2v1.5c0 .4-.1.8-.4 1.1s-.7.4-1.1.4c-.4 0-.8-.1-1.1-.4s-.4-.7-.4-1.1v-1.5c0-1 .5-1.5 1.5-1.5s1.5.5 1.5 1.5zm-1.5-7.5c-.4 0-.8.1-1.1.4-.3.3-.4.7-.4 1.1v1.5c0 .4.1.8.4 1.1.3.3.6.4 1.1.4.4 0 .8-.1 1.1-.4.3-.3.4-.6.4-1.1v-1.5c0-.4-.1-.8-.4-1.1-.3-.3-.6-.4-1.1-.4zm20.6-10L335 340 314.5 40.7h41zm-19.1 15.2c1-.1 1.7-.4 2.2-.9.5-.5.7-1.2.7-2.1v-.7c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v.7c0 .9.3 1.6.8 2.1s1.3.8 2.2.9c-1 0-1.7.3-2.2 1-.5.6-.8 1.3-.8 2v.7c0 .7.3 1.3.9 2 .6.7 1.3 1 2.1 1h3c.8 0 1.5-.3 2.1-1 .6-.7.9-1.3.9-2V59c0-.7-.2-1.4-.7-2-.4-.7-1.2-1.1-2.2-1.1z\"\n            onClick={() => setNeedle(-8)}\n          />\n          <path\n            id=\"bracket-number-7-l\"\n            className={getBracketClass(-7, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm24.2 13l-.8 1.5c-1 2.1-1.5 3.6-1.5 4.5v3h-3v-3c0-1 .5-2.5 1.5-4.5l1.5-3v-1.5h-6v-1.5h9v3l-.7 1.5z\"\n            onClick={() => setNeedle(-7)}\n          />\n          <path\n            id=\"bracket-number-6-l\"\n            className={getBracketClass(-6, showNeedle, needle, showTarget, target)}\n            d=\"M336 55.6c.3.3.4.7.4 1.1v3c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.8-.1-1.1-.5-.3-.3-.4-.7-.4-1.1v-3c0-.4.1-.8.4-1.1.3-.3.6-.4 1.1-.4.5 0 .8.1 1.1.4zm19.5-14.9L335 340 314.5 40.7h41zm-16.1 19v-3c0-.8-.3-1.5-.9-2.1s-1.3-.9-2.1-.9h-1.5c-.4 0-.8.1-1 .4-.3.3-.4.6-.5 1.1v-1.5c0-.8.3-1.5.9-2.1s1.3-.9 2.1-.9h1.5v-1.5h-2.2c-1.4 0-2.7.5-3.7 1.5s-1.6 2.3-1.6 3.7v5.2c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.5.9-1.2.9-2z\"\n            onClick={() => setNeedle(-6)}\n          />\n          <path\n            id=\"bracket-number-5-l\"\n            className={getBracketClass(-5, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm21.9 13c.8 0 1.5.3 2.1.9s.9 1.3.9 2.1v3c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-3c-1.8 0-2.8-1-3-3h1.5c.1 1 .6 1.5 1.5 1.5h1.5c.4 0 .8-.1 1.1-.4s.4-.7.4-1.1v-3c0-.4-.1-.8-.4-1.1-.3-.3-.7-.4-1.1-.4h-4.5v-6h9v1.5h-6v3h3z\"\n            onClick={() => setNeedle(-5)}\n          />\n          <path\n            id=\"bracket-number-4-l\"\n            className={getBracketClass(-4, showNeedle, needle, showTarget, target)}\n            d=\"M330.4 56.7l4.5-5.6v5.6h-4.5zm25.1-16L335 340 314.5 40.7h41zm-16.1 17.5v-1.5h-1.5v-7.5h-3l-6 7.5v1.5h6v4.5h3v-4.5h1.5z\"\n            onClick={() => setNeedle(-4)}\n          />\n          <path\n            id=\"bracket-number-3-l\"\n            className={getBracketClass(-3, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm21.9 13c.9 0 1.6.3 2.1 1s.8 1.3.8 2v3c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-3c-1.8 0-2.8-1-3-3h1.5c.1 1 .6 1.5 1.5 1.5h1.5c.4 0 .8-.1 1.1-.4s.4-.7.4-1.1v-3c0-.2-.1-.6-.4-.9s-.6-.6-1.1-.6h-3v-1.5l4.5-3h-6v-1.5h9v1.5l-4.5 3h1.6z\"\n            onClick={() => setNeedle(-3)}\n          />\n          <path\n            id=\"bracket-number-2-l\"\n            className={getBracketClass(-2, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm24.9 20.5v1.5h-9v-1.5c0-1 1-2.4 2.9-4l.2-.2c1.9-1.7 2.9-3 2.9-4v-.7c0-.4-.1-.8-.4-1.1-.3-.3-.7-.4-1.1-.4h-1.5c-.9 0-1.4.5-1.5 1.5h-1.5c.2-2 1.2-3 3-3h3c.8 0 1.5.3 2.1.9.6.6.9 1.3.9 2.1v.7c0 1-1 2.4-2.9 4l-.2.2c-1.9 1.7-2.9 3-2.9 3.9v.1h6z\"\n            onClick={() => setNeedle(-2)}\n          />\n          <path\n            id=\"bracket-number-1-l\"\n            className={getBracketClass(-1, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm18.9 22V52.2h-1.5v-1.5l3-1.5h1.5v13.5h-3z\"\n            onClick={() => setNeedle(-1)}\n          />\n\n          <path\n            id=\"bracket-number-0\"\n            className={getBracketClass(0, showNeedle, needle, showTarget, target)}\n            d=\"M333.5 59.9l3-5.3v5.1c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.7-.1-1-.3-.3-.3-.5-.6-.5-1.1zm1.4-9.2c-.4 0-.8.1-1.1.4-.3.3-.4.7-.4 1.1v5.1l3-5.4c-.2-.8-.7-1.2-1.5-1.2zm20.6-10L335 340 314.5 40.7h41zm-16.1 19v-7.5c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v7.5c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.6.9-1.3.9-2.1z\"\n            onClick={() => setNeedle(0)}\n          />\n        </g>\n\n        {showNeedle && (\n          <path\n            id=\"needle\"\n            className={clsx(`${baseClass}__needle`, animate && `${basePointsClass}--animated-1`)}\n            style={{ transform: `rotate(${needle * 8}deg)` }}\n            d=\"M335 340c-.9 0-3.7-.8-3.7-1.8l2-260.6c0-1 .8-1.8 1.7-1.8.9 0 1.7.8 1.7 1.8l2 260.6c0 1-2.8 1.8-3.7 1.8z\"\n          />\n        )}\n\n        {showPoints && (\n          <g className={clsx(`${baseClass}__points`)}>\n            {points === 0 && (\n              <g>\n                <path\n                  fill=\"#29abe2\"\n                  d=\"M335.2 102.7l14 22.5 25.8 6.4-17.1 20.3 1.9 26.5-24.6-10-24.6 10 1.9-26.5-17.1-20.3 25.7-6.4z\"\n                />\n                <path\n                  d=\"M334.9 158.7v-10.1h-13.5v-3.4l13.5-16.9h6.8v16.9h3.4v3.4h-3.4v10.1h-6.8zm0-13.4v-12.7l-10.1 12.7h10.1z\"\n                  fill=\"#fff\"\n                />\n              </g>\n            )}\n\n            {points === 1 && (\n              <g>\n                <path\n                  fill=\"#a45467\"\n                  d=\"M335.2 102.7l14 22.5 25.8 6.4-17.1 20.3 1.9 26.5-24.6-10-24.6 10 1.9-26.5-17.1-20.3 25.7-6.4z\"\n                />\n                <path\n                  d=\"M324.8 130.4H345v3.4l-10.1 6.8h3.4c1.9 0 3.6.7 4.8 2.2 1.3 1.5 1.9 3 1.9 4.5v6.7c0 1.9-.7 3.5-2 4.8-1.3 1.3-2.9 2-4.7 2h-6.8c-4 0-6.2-2.3-6.8-6.8h3.4c.2 2.3 1.3 3.4 3.4 3.4h3.4c.9 0 1.7-.3 2.4-1s1-1.5 1-2.4v-6.7c0-.5-.3-1.2-.9-2.1-.6-.9-1.4-1.3-2.6-1.3h-6.7v-3.4l10.1-6.8h-13.5v-3.3z\"\n                  fill=\"#fff\"\n                />\n              </g>\n            )}\n\n            {points === 2 && (\n              <g className={clsx(`${baseClass}__points`)}>\n                <path\n                  fill=\"#a45467\"\n                  d=\"M335.2 102.7l14 22.5 25.8 6.4-17.1 20.3 1.9 26.5-24.6-10-24.6 10 1.9-26.5-17.1-20.3 25.7-6.4z\"\n                />\n                <path\n                  d=\"M328.2 136.1h-3.4c.5-4.5 2.8-6.8 6.8-6.8h6.8c1.8 0 3.4.7 4.7 2 1.3 1.3 2 2.9 2 4.8v1.7c0 2.3-2.2 5.4-6.5 9.1l-.4.4c-4.3 3.7-6.5 6.7-6.5 8.8v.3H345v3.4h-20.3v-3.4c0-2.4 2.2-5.4 6.6-9.1l.4-.4c4.3-3.7 6.5-6.8 6.5-9.1v-1.7c0-.9-.3-1.7-1-2.4s-1.5-1-2.4-1h-3.4c-1.9 0-3.1 1.2-3.2 3.4z\"\n                  fill=\"#fff\"\n                />\n              </g>\n            )}\n          </g>\n        )}\n\n        {rivalGuess === -1 && (\n          <g className={clsx(`${baseRivalClass} ${baseRivalClass}---1`)}>\n            <path\n              fill=\"#FFFFFF\"\n              d=\"M64.6 14.1c-23.9 0-43.3 14.4-43.3 32.1 0 8.8 4.8 16.8 12.6 22.6-5.3 4.6-12.3 7-19.4 6.6 1.8 1.5 3.7 2.7 5.9 3.7 9 4 19.1 2.2 26.2-3.6 5.5 1.9 11.6 2.9 18 2.9 23.9 0 43.3-14.4 43.3-32.1S88.5 14.1 64.6 14.1z\"\n            />\n            <path\n              fill=\"#f7931e\"\n              d=\"M45.4 49.1c-2.3-1.3-2.3-4.6 0-5.9l13.1-7.6L71.6 28c2.3-1.3 5.1.3 5.1 2.9v30.2c0 2.6-2.8 4.2-5.1 2.9l-13.1-7.6-13.1-7.3z\"\n            />\n            <text x=\"10\" y=\"11\" fill=\"#FFFFFF\" style={{ textAnchor: 'start' }}>\n              O time {rivalTeam} disse que tá mais pra cá!\n            </text>\n          </g>\n        )}\n\n        {rivalGuess === 1 && (\n          <g className={clsx(`${baseRivalClass} ${baseRivalClass}---1`)}>\n            <text x=\"660\" y=\"11\" fill=\"#FFFFFF\" style={{ textAnchor: 'end' }}>\n              O time {rivalTeam} disse que tá mais pra cá!\n            </text>\n            <path\n              fill=\"#FFFFFF\"\n              d=\"M605.4 14.1c23.9 0 43.3 14.4 43.3 32.1 0 8.8-4.8 16.8-12.6 22.6 5.3 4.6 12.3 7 19.4 6.6-1.8 1.5-3.7 2.7-5.9 3.7-9 4-19.1 2.2-26.2-3.6-5.5 1.9-11.6 2.9-18 2.9-23.9 0-43.3-14.4-43.3-32.1s19.4-32.2 43.3-32.2z\"\n            />\n            <path\n              fill=\"#f7931e\"\n              d=\"M624.6 49.1c2.3-1.3 2.3-4.6 0-5.9l-13.1-7.6-13.1-7.6c-2.3-1.3-5.1.3-5.1 2.9v30.2c0 2.6 2.8 4.2 5.1 2.9l13.1-7.6 13.1-7.3z\"\n            />\n          </g>\n        )}\n      </svg>\n      <Card left={card.left} right={card.right} className=\"o-dial__card\" setNeedle={setNeedle} />\n    </div>\n  );\n}\n\nDial.propTypes = {\n  card: PropTypes.shape({\n    id: PropTypes.string,\n    left: PropTypes.string,\n    right: PropTypes.string,\n  }).isRequired,\n  needle: PropTypes.number,\n  showNeedle: PropTypes.bool,\n  target: PropTypes.number,\n  showTarget: PropTypes.bool,\n  showPoints: PropTypes.bool,\n  rivalGuess: PropTypes.number,\n  rivalTeam: PropTypes.string,\n  animate: PropTypes.bool,\n};\n\nDial.defaultProps = {\n  needle: 0,\n  showNeedle: false,\n  target: 0,\n  showTarget: false,\n  showPoints: false,\n  rivalGuess: 0,\n  rivalTeam: 'rival',\n  animate: false,\n};\n\nexport default memo(Dial);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Input, Popover, Space } from 'antd';\nimport { FileUnknownOutlined } from '@ant-design/icons';\n// Components\nimport { Instruction, Title } from '../../shared';\nimport Dial from './Dial';\n\nconst getHint = (card) => {\n  if (card.target === 0) {\n    return 'número 0, bem no centro,';\n  }\n\n  if (card.target < 0) {\n    return `\"${Math.abs(card.target)}\" do lado \"${card.left}\"`;\n  }\n\n  return `\"${card.target}\" do lado \"${card.right}\"`;\n};\n\nfunction Rules() {\n  return (\n    <ul>\n      <li>\n        Use uma única idea. Evite usar \"mas\", \"enquanto\", \"quando\", e também superlativos \"super\", \"muito\"\n      </li>\n      <li>Não invente coisas. Exemplo: 'Nicolas Cage cantando uma música dos Beatles' é inválido.</li>\n      <li>Mantenha-se no assunto da carta. Exemplo: 'Amor' não é uma dica válida para 'Sujo'.</li>\n      <li>Não use números para sugerir a posição do espectro.</li>\n      <li>Não use partes, derivados ou sinônimos das palavras da carta.</li>\n    </ul>\n  );\n}\n\nfunction DialClueWriting({ onSendClue, card }) {\n  const [clue, setClue] = useState('');\n\n  const onEnterInput = (e) => {\n    if (e.key === 'Enter') {\n      onSendClue({ clue });\n    }\n  };\n\n  return (\n    <div className=\"o-dial-clue-writing\">\n      <Title>Escreva uma dica!</Title>\n      <Instruction contained>\n        Escreva uma dica que ajudará seu time a apontar o número {getHint(card)} do medidor de ondas\n        telepáticas.\n        <br />\n        <Popover title=\"Regras\" content={Rules}>\n          <Button type=\"link\" icon={<FileUnknownOutlined />}>\n            Regras\n          </Button>\n        </Popover>\n      </Instruction>\n\n      <Dial card={card} showTarget target={card.target} />\n\n      <Space className=\"container container--center container--transparent\">\n        <Input\n          onChange={(e) => setClue(e.target.value.toUpperCase())}\n          placeholder=\"Digite sua dica aqui\"\n          className=\"uppercase-input\"\n          onKeyPress={onEnterInput}\n        />\n        <Button\n          type=\"primary\"\n          disabled={!Boolean(clue)}\n          onClick={() => {\n            onSendClue({ clue });\n          }}\n        >\n          Enviar dica\n        </Button>\n      </Space>\n    </div>\n  );\n}\n\nDialClueWriting.propTypes = {\n  onSendClue: PropTypes.func.isRequired,\n  card: PropTypes.shape({\n    id: PropTypes.string,\n    left: PropTypes.string,\n    right: PropTypes.string,\n  }).isRequired,\n};\n\nexport default DialClueWriting;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useIsUserReady, useWhichPlayerIsThe, useIsUserThe, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { ONDA_TELEPATICA } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { PhaseContainer, StepSwitcher, Step, ViewIf, WaitingRoom } from '../../shared';\nimport Card from './Card';\nimport DialClueWriting from './DialClueWriting';\n\nfunction DialCluePhase({ state, players, info }) {\n  const isUserReady = useIsUserReady(players, state);\n  const [step, setStep] = useState(0);\n  const psychic = useWhichPlayerIsThe('psychic', state, players);\n  const isUserThePsychic = useIsUserThe('psychic', state);\n\n  const onSendClue = useAPICall({\n    apiFunction: ONDA_TELEPATICA.submitClue,\n    actionName: 'submit-clue',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage: 'Dica submetida com sucesso',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar enviar a dica',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ONDA_TELEPATICA.DIAL_CLUE}\n      className=\"o-dial-clue-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady]}>\n        {/* Step 0 */}\n        <Step>\n          <ViewIf isVisible={isUserThePsychic}>\n            <DialClueWriting card={state.card} onSendClue={onSendClue} />\n          </ViewIf>\n\n          <ViewIf isVisible={!isUserThePsychic}>\n            <WaitingRoom\n              players={players}\n              title={`${psychic.name} está pensando em uma dica...`}\n              instruction=\"Aguarde enquanto ele(a) escreve uma dica para:\"\n            >\n              <div className=\"container container--center\">\n                <Card left={state.card.left} right={state.card.right} />\n              </div>\n            </WaitingRoom>\n          </ViewIf>\n        </Step>\n\n        {/* Step 1 */}\n        <WaitingRoom\n          players={players}\n          title=\"Pronto!\"\n          instruction=\"Vamos aguardar o jogo iniciar a próxima fase.\"\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nDialCluePhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default DialCluePhase;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Popconfirm, Slider } from 'antd';\n// Components\nimport { ButtonContainer, Instruction, Title } from '../../shared';\nimport Dial from './Dial';\nimport { AvatarName } from '../../avatars';\n\nfunction Prompt({ card }) {\n  return (\n    <Instruction contained>\n      Qual número melhor indica <span className=\"o-dial-guess-selection__clue\">{card.clue}</span> na escala de{' '}\n      <strong>\n        {card.left}-{card.right}\n      </strong>\n      ?\n    </Instruction>\n  );\n}\n\nfunction TeamInstructions({ teamController }) {\n  return (\n    <Instruction contained>\n      <ul>\n        <li>\n          Discuta com seu time em qual número do medidor de ondas telepáticas você acha que a dica se melhor\n          encaixa.\n        </li>\n        <li>\n          Todos podem controlar o ponteiro usando a barra abaixo, mas somente{' '}\n          <AvatarName player={teamController} addressUser /> pode apertar o botão para enviar a resposta\n          final.\n        </li>\n      </ul>\n    </Instruction>\n  );\n}\n\nfunction PsychicView({ card, needle, setNeedle }) {\n  return (\n    <div className=\"o-dial-guess-selection\">\n      <Title>Seu time está pensando...</Title>\n      <Prompt card={card} />\n      <Dial card={card} target={card.target} needle={needle} showNeedle showTarget setNeedle={setNeedle} />\n      <Instruction contained>Pokerface e bico fechado!</Instruction>\n    </div>\n  );\n}\n\nfunction ControllerView({ activeTeam, card, needle, onSendGuess, setNeedle, teamController }) {\n  return (\n    <div className=\"o-dial-guess-selection\">\n      <Title>Hora de brilhar, Time {activeTeam}!</Title>\n      <Prompt card={card} />\n      <Dial\n        card={card}\n        target={card.target}\n        needle={needle}\n        showNeedle\n        showTarget={false}\n        setNeedle={setNeedle}\n      />\n      <Slider defaultValue={0} min={-10} max={10} onChange={setNeedle} value={needle} />\n      <TeamInstructions teamController={teamController} />\n      <ButtonContainer>\n        <Popconfirm\n          title=\"Essa é a sua resposta final?\"\n          onConfirm={() => {\n            onSendGuess({ guess: needle });\n          }}\n          okText=\"Sim\"\n          cancelText=\"Não\"\n        >\n          <Button type=\"primary\">\n            Enviar resposta: {needle < 0 ? card.left : card.right} » {Math.abs(needle)}\n          </Button>\n        </Popconfirm>\n      </ButtonContainer>\n    </div>\n  );\n}\n\nfunction ActiveTeamView({ activeTeam, card, needle, setNeedle, teamController }) {\n  return (\n    <div className=\"o-dial-guess-selection\">\n      <Title>Hora de brilhar, Time {activeTeam}!</Title>\n      <Prompt card={card} />\n      <Dial\n        card={card}\n        target={card.target}\n        needle={needle}\n        showNeedle\n        showTarget={false}\n        setNeedle={setNeedle}\n      />\n      <Slider defaultValue={0} min={-10} max={10} onChange={setNeedle} value={needle} />\n      <TeamInstructions teamController={teamController} />\n    </div>\n  );\n}\n\nfunction OtherTeamView({ activeTeam, card, needle }) {\n  return (\n    <div className=\"o-dial-guess-selection\">\n      <Title>Hora do time {activeTeam} brilhar!</Title>\n      <Prompt card={card} />\n      <Dial card={card} target={card.target} needle={needle} showNeedle={false} showTarget={false} />\n      <Instruction contained>\n        O outro time agora está tentando adivinhar onde no medidor de ondas telepáticas a dica se encaixa\n        melhor. Daqui a pouco, você e seu time terão a change de contra-atacar dizendo se a solução está mais\n        para esquerda ou mais para a direita do que eles escolheram!\n      </Instruction>\n    </div>\n  );\n}\n\nfunction viewDelegator(isUserThePsychic, isUserTheController, isUsersTeamActive) {\n  if (isUserThePsychic) {\n    return PsychicView;\n  }\n  if (isUserTheController) {\n    return ControllerView;\n  }\n  if (isUsersTeamActive) {\n    return ActiveTeamView;\n  }\n  return OtherTeamView;\n}\n\nfunction DialGuessSelection({\n  activeTeam,\n  card,\n  isUsersTeamActive,\n  isUserTheController,\n  isUserThePsychic,\n  onSendGuess,\n  teamController,\n}) {\n  const [needle, setNeedle] = useState(0);\n\n  const ActiveComponent = viewDelegator(isUserThePsychic, isUserTheController, isUsersTeamActive);\n\n  return (\n    <ActiveComponent\n      activeTeam={activeTeam}\n      needle={needle}\n      onSendGuess={onSendGuess}\n      teamController={teamController}\n      card={card}\n      setNeedle={setNeedle}\n    />\n  );\n}\n\nDialGuessSelection.propTypes = {\n  onSendGuess: PropTypes.func.isRequired,\n  card: PropTypes.shape({\n    id: PropTypes.string,\n    left: PropTypes.string,\n    right: PropTypes.string,\n  }).isRequired,\n  activeTeam: PropTypes.oneOf(['A', 'B']),\n  teamController: PropTypes.object,\n  isUserTheController: PropTypes.bool,\n  isMyTeamActive: PropTypes.bool,\n  isUserThePsychic: PropTypes.bool,\n};\n\nexport default DialGuessSelection;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { message } from 'antd';\n// Hooks\nimport {\n  useIsUserReady,\n  useWhichPlayerIsThe,\n  useIsUserThe,\n  useAPICall,\n  useIsUsersTeamActive,\n} from '../../../hooks';\n// Resources & Utils\nimport { ONDA_TELEPATICA } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { PhaseContainer, StepSwitcher, WaitingRoom } from '../../shared';\nimport DialGuessSelection from './DialGuessSelection';\nimport { messageContent } from '../../modals/messageContent';\n\nfunction GuessPhase({ state, players, info }) {\n  const isUserReady = useIsUserReady(players, state);\n  const [step, setStep] = useState(0);\n  const psychic = useWhichPlayerIsThe('psychic', state, players);\n  const controller = useWhichPlayerIsThe('teamController', state, players);\n  const isUserTheController = useIsUserThe('teamController', state);\n  const isUserThePsychic = useIsUserThe('psychic', state);\n  const isUsersTeamActive = useIsUsersTeamActive(state, players);\n\n  const onSendGuess = useAPICall({\n    apiFunction: ONDA_TELEPATICA.submitGuess,\n    actionName: 'submit-guess',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage: 'Chute submetido com sucesso',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar enviar seu chute',\n  });\n\n  useEffect(() => {\n    if (isUserTheController) {\n      message.info(\n        messageContent(\n          'Você controla!',\n          'Move o ponteiro para a posição desejada pelo time e aperte Enviar Resposta',\n          controller.name\n        )\n      );\n    }\n  }, [isUserTheController, controller.name]);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ONDA_TELEPATICA.GUESS}\n      className=\"o-guess-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady]}>\n        {/* Step 0 */}\n        <DialGuessSelection\n          activeTeam={state.activeTeam}\n          psychic={psychic}\n          teamController={controller}\n          isUserTheController={isUserTheController}\n          onSendGuess={onSendGuess}\n          isUsersTeamActive={isUsersTeamActive}\n          card={state.card}\n          isUserThePsychic={isUserThePsychic}\n        />\n\n        {/* Step 1 */}\n        <WaitingRoom\n          players={players}\n          title=\"Pronto!\"\n          instruction=\"Vamos aguardar o jogo iniciar a próxima fase.\"\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nGuessPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default GuessPhase;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button } from 'antd';\nimport { BackwardOutlined, ForwardOutlined } from '@ant-design/icons';\n// Components\nimport { ButtonContainer, Instruction, Title } from '../../shared';\nimport Dial from './Dial';\nimport { AvatarName } from '../../avatars';\n\nfunction Prompt({ card }) {\n  return (\n    <Instruction contained>\n      A solução esta mais pra esquerda ou mais pr direita do número {card.needle} para a dica{' '}\n      <span className=\"o-dial-guess-selection__clue\">{card.clue}</span> na escala de{' '}\n      <strong>\n        {card.left}-{card.right}\n      </strong>\n      ?\n    </Instruction>\n  );\n}\n\nfunction TeamInstructions({ rivalController }) {\n  return (\n    <Instruction contained>\n      Você pode ganhar um ponto se escolher a direção correta.\n      <br />\n      <AvatarName player={rivalController} addressUser /> está no comando para apertar os botões! <br />E\n      então, a solução está mais para a esquerda ou mais para a direita do ponteiro vermelho?\n    </Instruction>\n  );\n}\n\nfunction RivalControllerView({ activeTeam, card, onSendRivalGuess, rivalController }) {\n  return (\n    <div className=\"o-dial-guess-selection\">\n      <Title>Hora de brilhar, Time {activeTeam}!</Title>\n      <Prompt card={card} />\n      <ButtonContainer>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            onSendRivalGuess({ rivalGuess: -1 });\n          }}\n        >\n          <BackwardOutlined /> Mais para a esquerda\n        </Button>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            onSendRivalGuess({ rivalGuess: 1 });\n          }}\n        >\n          Mais para a direita <ForwardOutlined />\n        </Button>\n      </ButtonContainer>\n      <Dial card={card} showTarget={false} target={card.target} showNeedle needle={card.needle} />\n      <TeamInstructions rivalController={rivalController} />\n    </div>\n  );\n}\n\nfunction RivalTeamView({ card, rivalController }) {\n  return (\n    <div className=\"o-dial-guess-selection\">\n      <Title>Hora de contra-atacar!</Title>\n      <Prompt card={card} />\n      <Dial card={card} showTarget={false} target={card.target} showNeedle needle={card.needle} />\n      <TeamInstructions rivalController={rivalController} />\n    </div>\n  );\n}\n\nfunction OtherTeamView({ card, rivalTeam }) {\n  return (\n    <div className=\"o-dial-guess-selection\">\n      <Title>Hora do time {rivalTeam} contra-atacar!</Title>\n      <Prompt card={card} />\n      <Dial card={card} showTarget={false} target={card.target} showNeedle needle={card.needle} />\n      <Instruction contained>\n        Agora, o time oposto tem a chance de ganhar 1 ponto ao tentar adivinhar se a solução está mais para a\n        esquerda ou mais para a direita do que o seu time escolheu.\n      </Instruction>\n    </div>\n  );\n}\n\nfunction viewDelegator(isUserTheRivalController, isUsersTeamRival) {\n  if (isUserTheRivalController) {\n    return RivalControllerView;\n  }\n  if (isUsersTeamRival) {\n    return RivalTeamView;\n  }\n  return OtherTeamView;\n}\n\nfunction DialRivalSelection({\n  rivalTeam,\n  rivalController,\n  isUserTheRivalController,\n  isUsersTeamRival,\n  onSendRivalGuess,\n  card,\n}) {\n  const ActiveComponent = viewDelegator(isUserTheRivalController, isUsersTeamRival);\n\n  return (\n    <ActiveComponent\n      card={card}\n      rivalTeam={rivalTeam}\n      rivalController={rivalController}\n      onSendRivalGuess={onSendRivalGuess}\n    />\n\n    // return (\n    //   <div className=\"o-dial-guess-selection\">\n    //     <Title>Hora do time {rivalTeam} contra-atacar!</Title>\n    //     <Instruction contained>\n    //       A solução esta mais pra esquerda ou mais pr direita do número {card.needle} para a dica{' '}\n    //       <span className=\"o-dial-guess-selection__clue\">{card.clue}</span> na escala de{' '}\n    //       <strong>\n    //         {card.left}-{card.right}\n    //       </strong>\n    //       ?\n    //     </Instruction>\n\n    //     <Dial card={card} showTarget={false} target={card.target} showNeedle needle={card.needle} />\n\n    //     {isUsersTeamRival ? (\n    //       <Instruction contained>\n    //         Você pode ganhar um ponto se escolher a direção correta.\n    //         <br />\n    //         {isUserTheRivalController ? 'VOCÊ ' : <AvatarName player={rivalController} />}está no comando para\n    //         apertar os botões! <br />E então, a solução está mais para a esquerda ou mais para a direita do\n    //         ponteiro vermelho?\n    //       </Instruction>\n    //     ) : (\n    //       <Instruction contained>\n    //         Agora, o time oposto tem a chance de ganhar 1 ponto ao tentar adivinhar se a solução está mais para\n    //         a esquerda ou mais para a direita do que o seu time escolheu.\n    //       </Instruction>\n    //     )}\n\n    //     {isUserTheRivalController && (\n    //       <div className=\"container container--center container--transparent\">\n    //         <Space>\n    //           <Button\n    //             type=\"primary\"\n    //             onClick={() => {\n    //               onSendRivalGuess({ rivalGuess: -1 });\n    //             }}\n    //           >\n    //             <BackwardOutlined /> Mais para a esquerda\n    //           </Button>\n    //           <Button\n    //             type=\"primary\"\n    //             onClick={() => {\n    //               onSendRivalGuess({ rivalGuess: 1 });\n    //             }}\n    //           >\n    //             Mais para a direita <ForwardOutlined />\n    //           </Button>\n    //         </Space>\n    //       </div>\n    //     )}\n    //   </div>\n  );\n}\n\nDialRivalSelection.propTypes = {\n  onSendRivalGuess: PropTypes.func.isRequired,\n  card: PropTypes.shape({\n    id: PropTypes.string,\n    left: PropTypes.string,\n    right: PropTypes.string,\n  }).isRequired,\n  rivalTeam: PropTypes.oneOf(['A', 'B']),\n  rivalController: PropTypes.object,\n  isUserTheRivalController: PropTypes.bool,\n  isUsersTeamRival: PropTypes.bool,\n};\n\nexport default DialRivalSelection;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { message } from 'antd';\n// Hooks\nimport {\n  useIsUserReady,\n  useWhichPlayerIsThe,\n  useIsUserThe,\n  useAPICall,\n  useIsUsersTeamActive,\n} from '../../../hooks';\n// Resources & Utils\nimport { ONDA_TELEPATICA } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\nimport { getOppositeTeam } from '../../../utils';\n// Components\nimport { PhaseContainer, StepSwitcher, WaitingRoom } from '../../shared';\nimport DialRivalSelection from './DialRivalSelection';\nimport { messageContent } from '../../modals/messageContent';\n\nfunction RivalPhase({ state, players, info }) {\n  const isUserReady = useIsUserReady(players, state);\n  const [step, setStep] = useState(0);\n  const rivalController = useWhichPlayerIsThe('rivalController', state, players);\n  const isUserTheRivalController = useIsUserThe('rivalController', state);\n  const isUsersTeamActive = useIsUsersTeamActive(state, players);\n\n  const onSendRivalGuess = useAPICall({\n    apiFunction: ONDA_TELEPATICA.submitRivalGuess,\n    actionName: 'submit-rival-guess',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage: 'Chute submetido com sucesso',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar enviar seu chute',\n  });\n\n  useEffect(() => {\n    if (isUserTheRivalController) {\n      message.info(\n        messageContent('Você controla!', 'Aperte um dos botões após seu time discutir', rivalController.name)\n      );\n    }\n  }, [isUserTheRivalController, rivalController.name]);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ONDA_TELEPATICA.RIVAL_GUESS}\n      className=\"o-guess-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady]}>\n        {/* Step 0 */}\n        <DialRivalSelection\n          rivalTeam={getOppositeTeam(state.teams, state.activeTeam)}\n          rivalController={rivalController}\n          isUserTheRivalController={isUserTheRivalController}\n          onSendRivalGuess={onSendRivalGuess}\n          isUsersTeamRival={!isUsersTeamActive}\n          card={state.card}\n        />\n\n        {/* Step 1 */}\n        <WaitingRoom\n          players={players}\n          title=\"Pronto!\"\n          instruction=\"Vamos aguardar o jogo iniciar a próxima fase.\"\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nRivalPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default RivalPhase;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTimer } from 'react-timer-hook';\n// Design Resources\nimport { Button, message, Popover } from 'antd';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n// Hooks\nimport { useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { GAME_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\nimport { getOppositeTeam, inNSeconds } from '../../../utils';\n// Components\nimport { AdminOnlyButton } from '../../admin/index';\nimport { Instruction, PhaseContainer, Title } from '../../shared';\n\nimport Dial from './Dial';\n\nfunction getResultInstructionLine(pointsBreakdown, team, catchup = false) {\n  const { got, now } = pointsBreakdown;\n\n  if (got === 0) {\n    return `O time ${team} não conseguiu nenhum ponto dessa vez e continua com ${now} pontos.\n      `;\n  }\n\n  if (got === 3) {\n    return `Quase na mosca! O time ${team} ganhou 3 pontos!`;\n  }\n\n  if (got === 4 && catchup) {\n    return `\n        Wow! O time ${team} ganhou ${got} pontos nessa rodada e agora tem ${now} pontos, mas como eles estão indo\n        muito mal vão ter rodada dupla!\n      `;\n  }\n\n  if (got === 4) {\n    return `Na mosca!!! 4 pontos para o time ${team}`;\n  }\n\n  return `\n      O time ${team} ganhou ${got} pontos nessa rodada e agora tá com ${now} pontos.\n    `;\n}\n\nfunction getRivalResultInstructionLine(pointsBreakdown, team) {\n  const { got } = pointsBreakdown;\n\n  if (got === 0) {\n    return `\n        O contra-ataque falhou para o time ${team}.\n      `;\n  }\n\n  return `\n      O time ${team} conseguiu contra atacar e ganhou ${got} ponto!\n    `;\n}\n\nconst getMessageType = (value) => {\n  switch (value) {\n    case 4:\n    case 3:\n      return 'success';\n    case 2:\n      return 'info';\n    default:\n      return 'error';\n  }\n};\n\nfunction RevealPhase({ state, players, info }) {\n  const onGoToNextRound = useAPICall({\n    apiFunction: GAME_API.goToNextPhase,\n    actionName: 'next-phase',\n    successMessage: 'Próxima fase ativada com sucesso',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar ir pra próxima fase',\n  });\n\n  const showMessage = () => {\n    const activeTeamMessageType = getMessageType(state.pointsBreakdown[state.activeTeam].got);\n\n    message[activeTeamMessageType](\n      getResultInstructionLine(\n        state.pointsBreakdown[state.activeTeam],\n        state.activeTeam,\n        state.shouldCatchup\n      ),\n      5\n    );\n    message.info(getRivalResultInstructionLine(state.pointsBreakdown[rivalTeam], rivalTeam), 6);\n  };\n\n  const { seconds } = useTimer({\n    expiryTimestamp: inNSeconds(7),\n    onExpire: showMessage,\n    autoStart: true,\n  });\n\n  const rivalTeam = getOppositeTeam(state.teams, state.activeTeam);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ONDA_TELEPATICA.REVEAL}\n      className=\"o-guess-phase\"\n    >\n      <Title>E o resultado é...</Title>\n      <Dial\n        card={state.card}\n        showNeedle={seconds < 6}\n        needle={state.card.needle}\n        showTarget={seconds < 4}\n        target={state.card.target}\n        showPoints={seconds < 1}\n        points={state?.pointsBreakdown?.[state?.activeTeam].got}\n        rivalGuess={state.card.rival}\n        rivalTeam={rivalTeam}\n        animate\n      />\n\n      {seconds < 1 && (\n        <Instruction contained>\n          <p>\n            {getResultInstructionLine(\n              state.pointsBreakdown[state.activeTeam],\n              state.activeTeam,\n              state.shouldCatchup\n            )}\n          </p>\n          <p>{getRivalResultInstructionLine(state.pointsBreakdown[rivalTeam], rivalTeam)}</p>\n          <Popover title=\"Como a distribuição de pontos functiona?\" content={PointDistributionExplanation}>\n            <Button type=\"link\" icon={<InfoCircleOutlined />}>\n              Como a distribuição de pontos funciona?\n            </Button>\n          </Popover>\n        </Instruction>\n      )}\n\n      <AdminOnlyButton action={() => onGoToNextRound({})} label=\"Ir para próxima rodada ou game over\" />\n    </PhaseContainer>\n  );\n}\n\nfunction PointDistributionExplanation() {\n  return (\n    <div>\n      Distribuição de pontos:\n      <ul>\n        <li>Na mosca: 4 pontos</li>\n        <li>Quase: 3 pontos</li>\n        <li>Dois de distância: 2 pontos</li>\n        <li>Mais de dois distância: 0 ponto</li>\n        <li>Time adversário acertou a direção: 1 ponto</li>\n      </ul>\n    </div>\n  );\n}\n\nRevealPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default RevealPhase;\n","import React from 'react';\n// Hooks\nimport { GAME_COLLECTION, PHASES } from '../../../utils/constants';\n// Components\nimport { GameOver, Session } from '../../shared';\nimport Lobby from '../../lobby/Lobby';\nimport { Rules } from '../../rules';\nimport { PageError } from '../../errors/PageError';\nimport DialSidesPhase from './DialSidesPhase';\nimport DialCluePhase from './DialCluePhase';\nimport GuessPhase from './GuessPhase';\nimport RivalPhase from './RivalPhase';\nimport RevealPhase from './RevealPhase';\n\nfunction SessionOndaTelepatica({ gameId }) {\n  function getActiveComponent(phase) {\n    switch (phase) {\n      case PHASES.ONDA_TELEPATICA.LOBBY:\n        return Lobby;\n      case PHASES.ONDA_TELEPATICA.RULES:\n        return Rules;\n      case PHASES.ONDA_TELEPATICA.DIAL_SIDES:\n        return DialSidesPhase;\n      case PHASES.ONDA_TELEPATICA.DIAL_CLUE:\n        return DialCluePhase;\n      case PHASES.ONDA_TELEPATICA.GUESS:\n        return GuessPhase;\n      case PHASES.ONDA_TELEPATICA.RIVAL_GUESS:\n        return RivalPhase;\n      case PHASES.ONDA_TELEPATICA.REVEAL:\n        return RevealPhase;\n      case PHASES.ONDA_TELEPATICA.GAME_OVER:\n        return GameOver;\n      default:\n        return PageError;\n    }\n  }\n\n  return (\n    <Session\n      gameId={gameId}\n      gameCollection={GAME_COLLECTION.ONDA_TELEPATICA}\n      getActiveComponent={getActiveComponent}\n    />\n  );\n}\n\nexport default SessionOndaTelepatica;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { CheckCircleFilled, CloudUploadOutlined } from '@ant-design/icons';\n// Components\nimport { Instruction, Step, TimedButton, Title } from '../../shared';\nimport { AvatarName } from '../../avatars';\n\nfunction WordSelectionStep({ guesser, onSendSelectedWords, words = [] }) {\n  const [selectedWords, setSelectedWords] = useState({});\n\n  const selectedWordsArray = Object.keys(selectedWords);\n  const noSelection = selectedWordsArray.length === 0;\n\n  const autoSelectRandomWord = () => {\n    const randomSelection = words[0].id;\n    onSendSelectedWords({ votes: [randomSelection] });\n  };\n\n  const onSelectWord = (wordId) => {\n    setSelectedWords((s) => {\n      const newState = { ...s };\n      if (newState[wordId]) {\n        delete newState[wordId];\n      } else {\n        newState[wordId] = true;\n      }\n      return newState;\n    });\n  };\n\n  return (\n    <Step>\n      <Title white>\n        Selecione a Palavra-Secreta para <AvatarName player={guesser} />\n      </Title>\n\n      <Instruction white>\n        A palavra secreta com mais votos será escolhida para essa rodada. Você pode selecionar quantas quiser!\n      </Instruction>\n\n      <ul className=\"u-word-card\">\n        {words.map((word) => {\n          return (\n            <li className=\"u-word-card__word\" key={word.id}>\n              <button className=\"u-word-card__button\" onClick={() => onSelectWord(word.id)}>\n                <span className=\"u-word-card__text\">{word.text}</span>\n                <span className=\"u-word-card__icon\">{selectedWords[word.id] && <CheckCircleFilled />}</span>\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n\n      <TimedButton\n        label=\"Enviar votos\"\n        icon={<CloudUploadOutlined />}\n        type=\"primary\"\n        onClick={() => onSendSelectedWords({ votes: selectedWordsArray })}\n        disabled={noSelection}\n        onExpire={autoSelectRandomWord}\n        duration={15}\n        showTimer={noSelection}\n      />\n    </Step>\n  );\n}\n\nWordSelectionStep.propTypes = {\n  guesser: PropTypes.shape({\n    avatarId: PropTypes.string,\n    name: PropTypes.string,\n  }),\n  onSendSelectedWords: PropTypes.func.isRequired,\n  words: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      text: PropTypes.string,\n    })\n  ),\n};\n\nexport default WordSelectionStep;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Progress } from 'antd';\n// Hooks\nimport { useIsUserReady, useIsUserThe, useWhichPlayerIsThe, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { UE_SO_ISSO_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport {\n  Instruction,\n  PhaseContainer,\n  RoundAnnouncement,\n  Step,\n  StepSwitcher,\n  ViewIf,\n  WaitingRoom,\n} from '../../shared';\nimport WordSelectionStep from './WordSelectionStep';\nimport { AvatarName } from '../../avatars';\n\nfunction WordSelectionPhase({ state, players, info }) {\n  const isUserReady = useIsUserReady(players, state);\n  const guesser = useWhichPlayerIsThe('guesser', state, players);\n  const isUserTheGuesser = useIsUserThe('guesser', state);\n  const nextGuesser = useWhichPlayerIsThe('nextGuesser', state, players);\n  const [step, setStep] = useState(0);\n\n  const onSendSelectedWords = useAPICall({\n    apiFunction: UE_SO_ISSO_API.submitWordSelectionVotes,\n    actionName: 'submit-votes',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: 'Aguarde enquanto os outros participantes votam',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar seus votos',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.UE_SO_ISSO.WORD_SELECTION}\n      className=\"u-word-selection-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady]}>\n        {/* Step 0 */}\n        <RoundAnnouncement round={state.round} onPressButton={() => setStep(1)} time={7}>\n          <Instruction contained>\n            Para essa rodada, <AvatarName player={guesser} addressUser /> será o(a) adivinhador(a) <br />\n            {state?.nextGuesser ? `Próximo adivinhador(a): ${nextGuesser.name}` : 'Essa é a última rodada'}\n          </Instruction>\n          <div className=\"u-word-selection-phase__team-points\">\n            Pontos do Grupo:\n            <br />\n            <Progress\n              percent={state.groupScore ?? 0}\n              status=\"active\"\n              strokeColor={{\n                '0%': '#ff0000',\n                '70%': '#ff0000',\n                '100%': '#87d068',\n              }}\n            />\n          </div>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <Step fullWidth>\n          <ViewIf isVisible={isUserTheGuesser}>\n            <WaitingRoom\n              players={players}\n              title=\"Você é o(a) adivinhador(a)\"\n              instruction=\"Aguarde os outros jogadores decidirem a palavra secreta.\"\n            />\n          </ViewIf>\n\n          <ViewIf isVisible={!isUserTheGuesser}>\n            <WordSelectionStep\n              words={state?.words}\n              onSendSelectedWords={onSendSelectedWords}\n              guesser={guesser}\n            />\n          </ViewIf>\n        </Step>\n\n        {/* Step 2 */}\n        <WaitingRoom players={players} title=\"Pronto!\" instruction=\"Vamos aguardar os outros joadores.\" />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nWordSelectionPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default WordSelectionPhase;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Input } from 'antd';\n\nfunction SuggestionEasel({ id, onChangeInput, value }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 230 60\"\n      overflow=\"visible\"\n      width=\"230\"\n      className=\"u-suggestion-easel\"\n    >\n      <path fill=\"#fff\" d=\"M26.7 59.5L14.1.5h202.7l12.6 59z\" />\n      <path fill=\"#4d4d4d\" d=\"M216.4 1l12.4 58H27.1L14.7 1h201.7m.8-1H13.5l12.8 60H230L217.2 0z\" />\n      <path fill=\"#4d4d4d\" d=\"M24.2 48.3L13.5 0 0 48.3z\" />\n      <foreignObject x=\"32.6\" y=\"13.9\" width=\"185\" height=\"300\">\n        <div xmlns=\"http://www.w3.org/1999/xhtml\">\n          <Input\n            placeholder=\"Escreva dica aqui\"\n            key={id}\n            id={id}\n            value={value}\n            onChange={onChangeInput}\n            className=\"u-suggestion-easel__input\"\n            bordered={false}\n          />\n        </div>\n      </foreignObject>\n      <path opacity=\".2\" d=\"M0 48.3L26.3 60l-2.1-11.7z\" />\n    </svg>\n  );\n}\n\nSuggestionEasel.propTypes = {\n  id: PropTypes.string,\n  onChangeInput: PropTypes.func,\n  value: PropTypes.string,\n};\n\nexport default SuggestionEasel;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Space } from 'antd';\nimport { CloudUploadOutlined } from '@ant-design/icons';\n// Components\nimport { Instruction, Step, Title } from '../../shared';\nimport { UeSoIssoCard as Card } from '../../cards';\nimport { AvatarName } from '../../avatars';\nimport SuggestionEasel from './SuggestionEasel';\n\nfunction SuggestionStep({ guesser, onSendSuggestions, secretWord, suggestionsNumber = 1 }) {\n  const [suggestions, setSuggestions] = useState([]);\n\n  const onChangeInput = (e) => {\n    const { id, value } = e.target;\n    if (id && value?.length > 1) {\n      const indexStr = id.split('-')[1];\n      const index = Number(indexStr) - 1;\n      setSuggestions((s) => {\n        const newState = { ...s };\n        newState[index] = value.toUpperCase().trim();\n        return newState;\n      });\n    }\n  };\n\n  const suggestionsValues = Object.values(suggestions);\n\n  return (\n    <Step>\n      <Title>\n        Escreva uma dica para <AvatarName player={guesser} />\n      </Title>\n\n      <Instruction contained>\n        A dica tem que ser uma palavra única que ajude o adivinhador... adivinhar.\n        <br />\n        É proibido usar derivados, partes da palavra ou traduções em outras línguas.\n        <br />\n        E não seja tão óbvio, já que dicas similares são eliminadas.\n        <br />\n      </Instruction>\n\n      <Card word={secretWord.text} header=\"Palavra Secreta\" />\n\n      {suggestionsNumber > 1 && (\n        <Instruction contained>\n          Já que esse jogo tem menos jogadores, você tem que escrever {suggestionsNumber} sugestões\n        </Instruction>\n      )}\n\n      <Space className=\"u-word-suggestion-step__inputs\">\n        {Array(suggestionsNumber)\n          .fill(1)\n          .map((entry, index) => {\n            const id = `suggestion-${entry + index}`;\n            return <SuggestionEasel key={id} id={id} onChangeInput={onChangeInput} />;\n          })}\n      </Space>\n\n      <Space className=\"u-word-suggestion-step__submit\">\n        <Button\n          icon={<CloudUploadOutlined />}\n          type=\"primary\"\n          onClick={() => onSendSuggestions({ suggestions: suggestionsValues })}\n          disabled={suggestionsValues.length < suggestionsNumber}\n        >\n          {suggestionsNumber > 1 ? 'Enviar sugestões' : 'Enviar sugestão'}\n        </Button>\n      </Space>\n    </Step>\n  );\n}\n\nSuggestionStep.propTypes = {\n  guesser: PropTypes.shape({\n    avatarId: PropTypes.string,\n    name: PropTypes.string,\n  }),\n  onSendSuggestions: PropTypes.func,\n  secretWord: PropTypes.shape({ text: PropTypes.string }),\n  suggestionsNumber: PropTypes.number,\n};\n\nSuggestionStep.defaultProps = {\n  suggestionsNumber: 1,\n};\n\nexport default SuggestionStep;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useIsUserReady, useWhichPlayerIsThe, useIsUserThe, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { UE_SO_ISSO_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { PhaseContainer, Step, StepSwitcher, ViewIf, WaitingRoom } from '../../shared';\nimport SuggestionStep from './SuggestionStep';\n\nfunction SuggestPhase({ state, players, info }) {\n  const isUserReady = useIsUserReady(players, state);\n  const [step, setStep] = useState(0);\n  const guesser = useWhichPlayerIsThe('guesser', state, players);\n  const isUserTheGuesser = useIsUserThe('guesser', state);\n\n  const onSendSuggestions = useAPICall({\n    apiFunction: UE_SO_ISSO_API.submitSuggestions,\n    actionName: 'submit-suggestion',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage:\n      'Sugestão enviada com successo! Aguarde enquanto os outros participantes escrevem suas dicas',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar sua(s) dica(s)',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.UE_SO_ISSO.SUGGEST}\n      className=\"word-selection-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady]}>\n        {/* Step 0 */}\n        <Step fullWidth>\n          <ViewIf isVisible={isUserTheGuesser}>\n            <WaitingRoom\n              players={players}\n              title=\"Você é o(a) adivinhador(a)\"\n              instruction=\"Aguarde enquanto os outros jogadores escrevem dicas para você adivinhar.\"\n            />\n          </ViewIf>\n\n          <ViewIf isVisible={!isUserTheGuesser}>\n            <SuggestionStep\n              guesser={guesser}\n              onSendSuggestions={onSendSuggestions}\n              secretWord={state.secretWord}\n              suggestionsNumber={state.suggestionsNumber}\n            />\n          </ViewIf>\n        </Step>\n\n        {/* Step 1 */}\n        <WaitingRoom players={players} title=\"Pronto!\" instruction=\"Vamos aguardar os outros joadores.\" />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nSuggestPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default SuggestPhase;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Avatar as AntAvatar } from 'antd';\nimport { CloseOutlined } from '@ant-design/icons';\n// Utils\nimport { getColorFromIndex } from '../../../utils';\nimport { LETTERS } from '../../../utils/constants';\n// Components\nimport BasicCard from '../../cards/Card';\nimport { Avatar } from '../../avatars';\n\nfunction SuggestionCard({ avatarId, playerName, index, invalid, suggestion }) {\n  return (\n    <BasicCard\n      size=\"medium\"\n      color={getColorFromIndex(index)}\n      className={clsx(invalid && 'u-suggestion-card__invalid')}\n      header={playerName ? `${LETTERS[index]} (${playerName})` : LETTERS[index]}\n    >\n      {invalid ? (\n        <AntAvatar size=\"small\" className=\"u-suggestion-card__suggestion-avatar\">\n          <CloseOutlined />\n        </AntAvatar>\n      ) : (\n        <Avatar id={avatarId} size=\"small\" className=\"u-suggestion-card__suggestion-avatar\" />\n      )}\n      {suggestion}\n    </BasicCard>\n  );\n}\n\nSuggestionCard.propTypes = {\n  avatarId: PropTypes.number.isRequired,\n  index: PropTypes.number.isRequired,\n  invalid: PropTypes.bool,\n  suggestion: PropTypes.string.isRequired,\n};\n\nexport default memo(SuggestionCard);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, message, Space } from 'antd';\nimport { CloudUploadOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\n// Hooks\nimport { useGlobalState, useLoading } from '../../../hooks';\n// Utils\nimport { deepCopy } from '../../../utils';\n// Components\nimport { AdminOnlyButton } from '../../admin/index';\nimport { Instruction, Step, Title } from '../../shared';\nimport { UeSoIssoCard as Card } from '../../cards';\nimport { AvatarName } from '../../avatars';\nimport { messageContent } from '../../modals/messageContent';\nimport SuggestionCard from './SuggestionCard';\n\nfunction CompareSuggestionsStep({\n  isUserTheNextGuesser,\n  nextGuesser,\n  onValidateSuggestions,\n  players,\n  secretWord,\n  suggestions,\n}) {\n  const [isLoading] = useLoading();\n  const [myRecommendation, setMyRecommendation] = useState(deepCopy(suggestions));\n  const [isAdmin] = useGlobalState('isAdmin');\n\n  const onSetValidation = (index, suggestionEntry, notAllowed) => {\n    if (notAllowed) return;\n\n    setMyRecommendation((arr) => {\n      const newArr = [...arr];\n      if (newArr[index]) {\n        newArr[index].invalid = !newArr[index].invalid;\n      } else {\n        newArr[index] = {\n          ...suggestionEntry,\n          invalid: true,\n        };\n      }\n      return newArr;\n    });\n  };\n\n  useEffect(() => {\n    if (isUserTheNextGuesser) {\n      message.info(\n        messageContent(\n          'Você controla!',\n          'Clique nas cartas para desclassificá-las, então, pressione \"Confirmar Dicas Válidas\"',\n          nextGuesser.name\n        )\n      );\n    }\n  }, [isUserTheNextGuesser, nextGuesser.name]);\n\n  const suggestionsValues = Object.values(myRecommendation);\n\n  return (\n    <Step>\n      <Title white>Comparem as sugestões</Title>\n      <Card word={secretWord.text} header=\"Palavra Secreta\" />\n      <Instruction contained>\n        Já eliminamos todas as palavras idênticas, agora, elimine palavras inválidas ou similares.\n        <br />\n        Lembre-se que são consideradas dicas iguais palavras derivadas e conjugações:{' '}\n        <code>piloto = pilotar = pilotando</code>. Variações como pluralidade, gênero e erros ortográficos\n        também devem ser eliminadas: <code>príncipe = princesa = principes = pryncipi</code>.\n        <br />\n        <ExclamationCircleOutlined /> Para não virar bagunça, somente{' '}\n        <AvatarName player={nextGuesser} addressUser />\n        pode clicar nas palavras para eliminá-las ou ativá-las, mas todos podem discutir. Uma dica ser muito\n        ruim não significa que ela seja inválida.\n        <br />\n        Refiram às palavras por letra, o Adivinhador pode estar ouvindo!\n      </Instruction>\n\n      <Space className=\"u-word-compare-suggestions-step__suggestions\">\n        {suggestions.map((suggestionEntry, index) => {\n          if (!isUserTheNextGuesser && !isAdmin) {\n            return (\n              <div key={`${suggestionEntry.suggestion}-${index}`}>\n                <SuggestionCard\n                  suggestion={suggestionEntry.suggestion}\n                  invalid={suggestionEntry.invalid}\n                  playerName={players[suggestionEntry.playerId].name}\n                  avatarId={players[suggestionEntry.playerId].avatarId}\n                  index={index}\n                />\n              </div>\n            );\n          }\n\n          return (\n            <button\n              key={`${suggestionEntry.suggestion}-${index}`}\n              className=\"u-word-compare-suggestions-step__suggestion-button\"\n              onClick={() => onSetValidation(index, suggestionEntry, suggestionEntry.invalid)}\n            >\n              <SuggestionCard\n                suggestion={suggestionEntry.suggestion}\n                invalid={myRecommendation?.[index]?.invalid ?? suggestionEntry.invalid}\n                avatarId={players[suggestionEntry.playerId].avatarId}\n                playerName={players[suggestionEntry.playerId].name}\n                index={index}\n              />\n            </button>\n          );\n        })}\n      </Space>\n\n      {isUserTheNextGuesser && (\n        <Space className=\"u-word-compare-suggestions-step__submit\">\n          <Button\n            icon={<CloudUploadOutlined />}\n            type=\"primary\"\n            onClick={() =>\n              onValidateSuggestions({\n                validSuggestions: suggestionsValues.filter((suggestion) => !suggestion.invalid),\n              })\n            }\n            disabled={isLoading}\n          >\n            Confirmar dicas válidas\n          </Button>\n        </Space>\n      )}\n\n      <AdminOnlyButton\n        action={() =>\n          onValidateSuggestions({\n            validSuggestions: suggestionsValues.filter((suggestion) => !suggestion.invalid),\n          })\n        }\n        label=\"Confirmar dicas válidas como Admin\"\n      />\n    </Step>\n  );\n}\n\nCompareSuggestionsStep.propTypes = {\n  isUserTheNextGuesser: PropTypes.bool,\n  nextGuesser: PropTypes.shape({\n    avatarId: PropTypes.string,\n    name: PropTypes.string,\n  }),\n  onValidateSuggestions: PropTypes.func,\n  players: PropTypes.object,\n  secretWord: PropTypes.shape({ text: PropTypes.string }),\n  suggestions: PropTypes.arrayOf(\n    PropTypes.shape({\n      suggestion: PropTypes.string,\n      invalid: PropTypes.bool,\n      playerId: PropTypes.string,\n    })\n  ),\n};\n\nexport default CompareSuggestionsStep;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useIsUserThe, useAPICall, useWhichPlayerIsThe } from '../../../hooks';\n// Resources & Utils\nimport { UE_SO_ISSO_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { PhaseContainer, Step, StepSwitcher, ViewIf, WaitingRoom } from '../../shared';\nimport CompareSuggestionsStep from './CompareSuggestionsStep';\n\nfunction ComparePhase({ state, players, info }) {\n  const [step, setStep] = useState(0);\n  const isUserTheGuesser = useIsUserThe('guesser', state);\n  const isUserTheNextGuesser = useIsUserThe('nextGuesser', state);\n  const nextGuesser = useWhichPlayerIsThe('nextGuesser', state, players);\n\n  const onValidateSuggestions = useAPICall({\n    apiFunction: UE_SO_ISSO_API.submitValidation,\n    actionName: 'validate-suggestions',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage: 'Validação enviada com sucesso!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar a confirmação das sugestões',\n  });\n\n  // TODO: Add modal\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.UE_SO_ISSO.COMPARE}\n      className=\"u-compare-phase\"\n    >\n      <StepSwitcher step={step}>\n        {/* Step 0 */}\n        <Step fullWidth>\n          <ViewIf isVisible={isUserTheGuesser}>\n            <WaitingRoom\n              players={players}\n              title=\"Você é o(a) adivinhador(a)\"\n              instruction=\"Aguarde os outros jogadores selecionarem as dicas válidas.\"\n            />\n          </ViewIf>\n\n          <ViewIf isVisible={!isUserTheGuesser}>\n            <CompareSuggestionsStep\n              nextGuesser={nextGuesser}\n              isUserTheNextGuesser={isUserTheNextGuesser}\n              secretWord={state.secretWord}\n              suggestions={state.suggestions}\n              players={players}\n              onValidateSuggestions={onValidateSuggestions}\n            />\n          </ViewIf>\n        </Step>\n\n        {/* Step 1 */}\n        <WaitingRoom players={players} title=\"Enviando a confirmação de sugestões\" instruction=\"Aguarde...\" />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nComparePhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default ComparePhase;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Input, Space } from 'antd';\nimport { CloudUploadOutlined, MinusOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLoading } from '../../../hooks';\n\nfunction Guess({ onSubmitGuess, onSendGuess }) {\n  const [isLoading] = useLoading();\n  const [guess, setGuess] = useState('');\n\n  const onEnterInput = (e) => {\n    if (e.key === 'Enter') {\n      onSendGuess({ guess });\n    }\n  };\n\n  return (\n    <Space className=\"u-word-guess-phase__suggestions\">\n      <Input\n        placeholder=\"Digite aqui seu chute\"\n        onChange={(e) => setGuess(e.target.value)}\n        onKeyPress={onEnterInput}\n      />\n      <Button\n        icon={<CloudUploadOutlined />}\n        type=\"primary\"\n        onClick={() => onSendGuess({ guess })}\n        disabled={guess.length < 3 || isLoading}\n      >\n        Enviar\n      </Button>\n      <Button\n        icon={<MinusOutlined />}\n        type=\"default\"\n        onClick={() => onSubmitGuess({ guess: 'PASS' })}\n        disabled={isLoading}\n      >\n        Passar a vez...\n      </Button>\n    </Space>\n  );\n}\n\nGuess.propTypes = {\n  onSendGuess: PropTypes.func.isRequired,\n  onSubmitGuess: PropTypes.func,\n};\n\nexport default Guess;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Space } from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\n// Components\nimport { Instruction, Step, Title, ViewIf } from '../../shared';\nimport { UeSoIssoCard as Card } from '../../cards';\nimport { AvatarName } from '../../avatars';\nimport Guess from './Guess';\nimport SuggestionEasel from './SuggestionEasel';\n\nfunction GuessingStep({\n  guesser,\n  isUserTheGuesser,\n  secretWord,\n  onSendGuess,\n  onSubmitGuess,\n  validSuggestions,\n}) {\n  return (\n    <Step>\n      <ViewIf isVisible={isUserTheGuesser}>\n        <Title>\n          Hora de brilhar, <AvatarName player={guesser} />!\n        </Title>\n        <Instruction contained>Você tem uma única change de adivinhar a palavra secreta!</Instruction>\n\n        <Card word={<QuestionCircleOutlined />} header=\"A Palavra Secreta é\" />\n\n        <Instruction contained>Escreva seu chute no campo abaixo</Instruction>\n\n        <Space className=\"u-word-guess-phase__suggestions\">\n          {validSuggestions.map((suggestionEntry, index) => {\n            const id = `${suggestionEntry.suggestion}-${index}`;\n            return <SuggestionEasel key={id} id={id} value={suggestionEntry.suggestion} />;\n          })}\n        </Space>\n\n        <Guess onSubmitGuess={onSubmitGuess} onSendGuess={onSendGuess} />\n      </ViewIf>\n\n      <ViewIf isVisible={!isUserTheGuesser}>\n        <Title>\n          Hora de <AvatarName player={guesser} /> brilhar!\n        </Title>\n        <Instruction contained>\n          {guesser.name} tem uma única change de adivinhar a palavra secreta!\n        </Instruction>\n        <Card word={secretWord.text} header=\"A Palavra Secreta é\" />\n        <Instruction contained>{guesser.name} está pensando...</Instruction>\n\n        <Space className=\"u-word-guess-phase__suggestions\">\n          {validSuggestions.map((suggestionEntry, index) => {\n            const id = `${suggestionEntry.suggestion}-${index}`;\n            return <SuggestionEasel key={id} id={id} value={suggestionEntry.suggestion} />;\n          })}\n        </Space>\n      </ViewIf>\n    </Step>\n  );\n}\n\nGuessingStep.propTypes = {\n  guesser: PropTypes.shape({\n    avatarId: PropTypes.string,\n    name: PropTypes.string,\n  }),\n  isUserTheGuesser: PropTypes.bool,\n  onSendGuess: PropTypes.func,\n  onSubmitGuess: PropTypes.func,\n  secretWord: PropTypes.shape({ text: PropTypes.string }),\n  validSuggestions: PropTypes.arrayOf(\n    PropTypes.shape({\n      suggestion: PropTypes.string,\n    })\n  ),\n};\n\nexport default GuessingStep;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Button, message, Space } from 'antd';\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\n// Components\nimport { Instruction, Step, Title, ViewIf } from '../../shared';\nimport { UeSoIssoCard as Card } from '../../cards';\nimport { AvatarName } from '../../avatars';\nimport { messageContent } from '../../modals/messageContent';\nimport SuggestionEasel from './SuggestionEasel';\n\nfunction GuessVerificationStep({\n  guess,\n  guesser,\n  isAdmin,\n  isLoading,\n  isUserTheGuesser,\n  isUserTheNextGuesser,\n  nextGuesser,\n  secretWord,\n  onConfirmGuess,\n  validSuggestions,\n}) {\n  useEffect(() => {\n    if (isUserTheNextGuesser) {\n      message.info(\n        messageContent('Você controla!', 'Selecione se o adivinhador acertou ou não', nextGuesser.name)\n      );\n    }\n  }, [isUserTheNextGuesser, nextGuesser.name]);\n\n  return (\n    <Step>\n      <ViewIf isVisible={isUserTheGuesser}>\n        <Title>\n          <AvatarName player={guesser} addressUser /> disse \"{guess}\"\n        </Title>\n\n        <Card word={secretWord.text} header=\"A Palavra Secreta é\" />\n\n        <Instruction contained>\n          <AvatarName player={nextGuesser} /> está encarregado(a) de apertar os botões se você acertou ou não.{' '}\n          <br />\n          São 3 pontos se você acertar, -1 se errar, mas você pode passar e não tentar, covarde!.. <br />\n          As dicas foram:\n        </Instruction>\n\n        <Space className=\"u-word-guess-phase__suggestions\">\n          {validSuggestions.map((suggestionEntry, index) => {\n            const id = `${suggestionEntry.suggestion}-${index}`;\n            return <SuggestionEasel key={id} id={id} value={suggestionEntry.suggestion} />;\n          })}\n        </Space>\n      </ViewIf>\n\n      <ViewIf isVisible={!isUserTheGuesser}>\n        <Title>\n          <AvatarName player={guesser} addressUser /> disse \"{guess}\"\n        </Title>\n\n        <Card word={secretWord.text} header=\"A Palavra Secreta é\" />\n\n        <Instruction contained>\n          <AvatarName player={nextGuesser} addressUser /> está encarregado(a) de apertar os botões se você\n          acertou ou não. <br />\n          São 3 pontos se você acertar, -1 se errar, mas você pode passar e não tentar, covarde!.. <br />\n          As dicas são:\n        </Instruction>\n\n        <Space className=\"u-word-guess-phase__suggestions\">\n          {validSuggestions.map((suggestionEntry, index) => {\n            const id = `${suggestionEntry.suggestion}-${index}`;\n            return <SuggestionEasel key={id} id={id} value={suggestionEntry.suggestion} />;\n          })}\n        </Space>\n\n        {(isUserTheNextGuesser || isAdmin) && (\n          <Space className={clsx('u-word-guess-phase__guess-submit', isAdmin && 'admin-container')}>\n            <Button\n              icon={<CheckOutlined />}\n              type=\"primary\"\n              style={{ backgroundColor: 'green' }}\n              onClick={() => onConfirmGuess({ guess: 'CORRECT' })}\n              disabled={isLoading}\n            >\n              Acertou\n            </Button>\n            <Button\n              icon={<CloseOutlined />}\n              type=\"primary\"\n              danger\n              onClick={() => onConfirmGuess({ guess: 'WRONG' })}\n              disabled={isLoading}\n            >\n              Errou\n            </Button>\n          </Space>\n        )}\n      </ViewIf>\n    </Step>\n  );\n}\n\nGuessVerificationStep.propTypes = {\n  guess: PropTypes.string,\n  guesser: PropTypes.shape({\n    avatarId: PropTypes.string,\n    name: PropTypes.string,\n  }),\n  isAdmin: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  isUserTheGuesser: PropTypes.bool,\n  isUserTheNextGuesser: PropTypes.bool,\n  nextGuesser: PropTypes.shape({\n    avatarId: PropTypes.string,\n    name: PropTypes.string,\n  }),\n  onConfirmGuess: PropTypes.func,\n  secretWord: PropTypes.shape({ text: PropTypes.string }),\n  validSuggestions: PropTypes.arrayOf(\n    PropTypes.shape({\n      suggestion: PropTypes.string,\n    })\n  ),\n};\n\nexport default GuessVerificationStep;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useGlobalState, useLoading, useWhichPlayerIsThe, useIsUserThe, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { UE_SO_ISSO_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { PhaseContainer, StepSwitcher, WaitingRoom } from '../../shared';\nimport GuessingStep from './GuessingStep';\nimport GuessVerificationStep from './GuessVerificationStep';\n\nfunction GuessPhase({ state, players, info }) {\n  const [isLoading] = useLoading();\n  const [isAdmin] = useGlobalState('isAdmin');\n  const [step, setStep] = useState(0);\n  const guesser = useWhichPlayerIsThe('guesser', state, players);\n  const nextGuesser = useWhichPlayerIsThe('nextGuesser', state, players);\n  const isUserTheNextGuesser = useIsUserThe('nextGuesser', state);\n  const isUserTheGuesser = useIsUserThe('guesser', state);\n\n  const onConfirmGuess = useAPICall({\n    apiFunction: UE_SO_ISSO_API.confirmGuess,\n    actionName: 'guess',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: 'Resultado enviado com sucesso!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar o resultado',\n  });\n\n  const onSendGuess = useAPICall({\n    apiFunction: UE_SO_ISSO_API.sendGuess,\n    actionName: 'guess',\n    successMessage: 'Resultado enviado com sucesso!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar o resultado',\n  });\n\n  // If guess is present in the state, move to the next step\n  useEffect(() => {\n    if (state?.guess) {\n      setStep(1);\n    }\n  }, [state]);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.UE_SO_ISSO.GUESS}\n      className=\"u-word-guess-phase\"\n    >\n      <StepSwitcher step={step}>\n        {/* Step 0 */}\n        <GuessingStep\n          guesser={guesser}\n          isUserTheGuesser={isUserTheGuesser}\n          onConfirmGuess={onConfirmGuess}\n          onSendGuess={onSendGuess}\n          validSuggestions={state.validSuggestions}\n          secretWord={state.secretWord}\n          players={players}\n        />\n\n        {/* Step 1 */}\n        <GuessVerificationStep\n          guesser={guesser}\n          guess={state.guess}\n          isUserTheGuesser={isUserTheGuesser}\n          onConfirmGuess={onConfirmGuess}\n          validSuggestions={state.validSuggestions}\n          secretWord={state.secretWord}\n          nextGuesser={nextGuesser}\n          isUserTheNextGuesser={isUserTheNextGuesser}\n          isAdmin={isAdmin}\n          isLoading={isLoading}\n        />\n\n        {/* Step 2 */}\n        <WaitingRoom players={players} title=\"Enviando a confirmação de sugestões\" instruction=\"Aguarde...\" />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nGuessPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default GuessPhase;\n","import React from 'react';\n// Hooks\nimport { GAME_COLLECTION, PHASES } from '../../../utils/constants';\n// Components\nimport { GameOver, Session } from '../../shared';\nimport Lobby from '../../lobby/Lobby';\nimport { Rules } from '../../rules';\nimport { PageError } from '../../errors/PageError';\nimport WordSelectionPhase from './WordSelectionPhase';\nimport SuggestPhase from './SuggestPhase';\nimport ComparePhase from './ComparePhase';\nimport GuessPhase from './GuessPhase';\n\nfunction SessionUeSoIsso({ gameId }) {\n  function getActiveComponent(phase) {\n    switch (phase) {\n      case PHASES.UE_SO_ISSO.LOBBY:\n        return Lobby;\n      case PHASES.UE_SO_ISSO.RULES:\n        return Rules;\n      case PHASES.UE_SO_ISSO.WORD_SELECTION:\n        return WordSelectionPhase;\n      case PHASES.UE_SO_ISSO.SUGGEST:\n        return SuggestPhase;\n      case PHASES.UE_SO_ISSO.COMPARE:\n        return ComparePhase;\n      case PHASES.UE_SO_ISSO.GUESS:\n        return GuessPhase;\n      case PHASES.UE_SO_ISSO.GAME_OVER:\n        return GameOver;\n      default:\n        return PageError;\n    }\n  }\n\n  return (\n    <Session\n      gameId={gameId}\n      gameCollection={GAME_COLLECTION.UE_SO_ISSO}\n      getActiveComponent={getActiveComponent}\n    />\n  );\n}\n\nexport default SessionUeSoIsso;\n","import ArteRuim from './arte-ruim/SessionArteRuim';\nimport ClubeDetetives from './clube-detetives/SessionClubeDetetives';\nimport EspiaoEntreNos from './espiao-entre-nos/SessionEspiaoEntreNos';\nimport OndaTelepatica from './onda-telepatica/SessionOndaTelepatica';\nimport UeSoIsso from './ue-so-isso/SessionUeSoIsso';\n\nconst games = {\n  ArteRuim,\n  ClubeDetetives,\n  EspiaoEntreNos,\n  OndaTelepatica,\n  UeSoIsso,\n};\n\nexport default games;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n// Design Resources\nimport { message, notification } from 'antd';\n// Adapters\nimport { GAME_API } from '../adapters';\n// Hooks\nimport { useIsGameStale, useLoading, useGlobalState } from '../hooks';\n// Utils\nimport { getGameIdFromURL, getGameIdFromLocation, isValidGameId } from '../utils';\nimport { GAME_COLLECTION } from '../utils/constants';\n// Components\nimport { LoadingPage } from './loaders';\nimport { PageError } from './errors/PageError';\nimport GameSessions from './games';\n\nfunction Game() {\n  const history = useHistory();\n  const [, setLoader] = useLoading();\n  const [gameId, setGameId] = useGlobalState('gameId');\n  const [gameName, setGameName] = useGlobalState('gameName');\n  const [gameMeta, setGameMeta] = useGlobalState('gameMeta');\n  const [, setUserId] = useGlobalState('userId');\n  const [, setUsername] = useGlobalState('username');\n  const [, setUserAvatarId] = useGlobalState('userAvatarId');\n  const [, setLanguage] = useGlobalState('language');\n\n  const [isPageLoading, setPageLoading] = useState(true);\n  const isGameStale = useIsGameStale(gameMeta?.createdAt);\n\n  // Verify url game code\n  useEffect(() => {\n    const urlGameId = getGameIdFromURL(history);\n    if (isValidGameId(urlGameId)) {\n      setGameId(urlGameId);\n    } else {\n      message.error('Vixi, a id do jogo na barra de endereços tá errada');\n      history.push('/');\n    }\n  }, [history, setGameId, setUsername, setUserAvatarId]);\n\n  // Keeps track of url changes\n  useEffect(() => {\n    return history.listen((location) => {\n      const urlGameId = getGameIdFromLocation(location);\n      if (isValidGameId(urlGameId)) {\n        setGameId(urlGameId);\n        setUserId(null);\n        setUsername('');\n        setUserAvatarId('');\n        message.info('Uma nova id de jogo foi provida');\n      } else {\n        message.error('Vixi, a id do jogo na barra de endereços está errada');\n        history.push('/');\n      }\n    });\n  }, [history, setGameId, setUsername, setUserAvatarId, setUserId]);\n\n  // Load game\n  useEffect(() => {\n    setPageLoading(true);\n    async function loadGameSession() {\n      try {\n        setLoader('load', true);\n        const meta = await GAME_API.loadGame({ gameId });\n        setGameName(meta.data.gameName);\n        setGameMeta(meta.data);\n        setLanguage(meta.data?.language ?? 'pt');\n      } catch (e) {\n        console.error(e);\n        notification.error({\n          message: 'Erro ao carregar o jogo',\n          description: JSON.stringify(e.message),\n        });\n        console.error(e);\n      } finally {\n        setPageLoading(false);\n        setLoader('load', false);\n      }\n    }\n\n    if (gameId) {\n      loadGameSession();\n    }\n  }, [gameId]); // eslint-disable-line\n\n  // Deffer to load screen if any major API call is running\n  if (isPageLoading) {\n    return <LoadingPage />;\n  }\n\n  if (isGameStale) {\n    return (\n      <PageError message=\"Jogo expirado\" description=\"Esse jogo é muito antigo e não pode ser usado mais\" />\n    );\n  }\n\n  if (gameId && gameName) {\n    switch (gameName) {\n      case GAME_COLLECTION.ARTE_RUIM:\n        return <GameSessions.ArteRuim gameId={gameId} />;\n      case GAME_COLLECTION.CLUBE_DETETIVES:\n        return <GameSessions.ClubeDetetives gameId={gameId} />;\n      case GAME_COLLECTION.ESPIAO_ENTRE_NOS:\n        return <GameSessions.EspiaoEntreNos gameId={gameId} />;\n      case GAME_COLLECTION.ONDA_TELEPATICA:\n        return <GameSessions.OndaTelepatica gameId={gameId} />;\n      case GAME_COLLECTION.UE_SO_ISSO:\n        return <GameSessions.UeSoIsso gameId={gameId} />;\n      default:\n        console.warn('Wrong game library provided');\n    }\n  }\n\n  // If switch fails, it's an error\n  return <PageError />;\n}\n\nexport default Game;\n","import { useEffect, useState } from 'react';\n\nexport function useIsGameStale(gameCreatedAt) {\n  const [isGameStale, setGameStale] = useState(false);\n\n  useEffect(() => {\n    setGameStale(Date.now() - 24 * 60 * 60 * 1000 > gameCreatedAt);\n  }, [gameCreatedAt, setGameStale]);\n\n  return isGameStale;\n}\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\n// import { Image, Layout } from 'antd';\nimport gameList from '../resources/games.json';\nimport { Avatar, AvatarEntry } from './avatars';\nimport { GameOver, Instruction, PhaseAnnouncement, PhaseContainer, RoundAnnouncement, Title } from './shared';\n// Resources\nimport { CheckCircleFilled, CheckCircleOutlined } from '@ant-design/icons';\nimport { Button, Input } from 'antd';\nimport { LETTERS } from '../utils/constants';\nimport Card from './cards/Card';\nimport { getColorFromLetter } from '../utils';\n\nfunction TestingZone() {\n  const info = gameList['U'];\n\n  const players = {\n    Flaviane: {\n      avatarId: '10',\n      name: 'Flaviane',\n      ready: false,\n      score: 0,\n      updatedAt: Date.now(),\n    },\n    Kavis: {\n      avatarId: '11',\n      name: 'Kavis',\n      ready: false,\n      score: 0,\n      updatedAt: Date.now(),\n    },\n    Stephanie: {\n      avatarId: '12',\n      name: 'Stephanie',\n      ready: false,\n      score: 0,\n      updatedAt: Date.now(),\n    },\n  };\n\n  // Mock State\n  const state = {\n    phase: 'WORD_SELECTION',\n    guesser: 'Kavis',\n    playerOrder: ['Flaviane', 'Stephanie', 'Kavis', 'Flaviane', 'Stephanie', 'Kavis'],\n    round: {\n      current: 1,\n      total: 4,\n    },\n  };\n  const onRun = () => console.log('RUN');\n\n  // return <GameOver info={info} state={state} players={players} />;\n  return (\n    <PhaseContainer info={info} phase={state.phase} allowedPhase=\"WORD_SELECTION\" className=\"\" fullScreen>\n      <PhaseAnnouncement title=\"Drawing!\" round={state.round.current} onClose={onRun}>\n        <Instruction>Do this and that and the other thing</Instruction>\n      </PhaseAnnouncement>\n    </PhaseContainer>\n  );\n}\n\nexport default TestingZone;\n","import React from 'react';\n// Design Resources\nimport { Layout, Progress, Table } from 'antd';\n// Utils\nimport pastDrawings from '../resources/pastDrawings.json';\nimport { CanvasSVG } from './canvas';\nimport { Title } from './shared';\nimport { orderBy } from '../utils';\n\nfunction Gallery() {\n  const dataSource = orderBy(\n    Object.values(pastDrawings).reduce((acc, entry) => {\n      const data = {\n        id: entry.id,\n        text: entry.text,\n        level: entry.level,\n      };\n\n      entry.entries.forEach((drawingEntry) => {\n        acc.push({\n          ...data,\n          drawing: drawingEntry.drawing,\n          playerId: drawingEntry.playerId,\n          successRate: drawingEntry.successRate,\n          createdAt: drawingEntry.createdAt,\n        });\n      });\n      return acc;\n    }, []),\n    ['level', 'id'],\n    ['asc', 'asc']\n  );\n\n  const columns = [\n    {\n      title: 'Id',\n      dataIndex: 'id',\n      key: 'id',\n    },\n    {\n      title: 'Text',\n      dataIndex: 'text',\n      key: 'text',\n    },\n    {\n      title: 'Level',\n      dataIndex: 'level',\n      key: 'level',\n      render: (v) => Array(v).fill('☆').join(''),\n    },\n    {\n      title: 'Artist',\n      dataIndex: 'playerId',\n      key: 'playerId',\n    },\n    {\n      title: 'Created On',\n      dataIndex: 'createdAt',\n      key: 'createdAt',\n    },\n    {\n      title: 'Drawing',\n      dataIndex: 'drawing',\n      key: 'drawing',\n      render: (v) => <CanvasSVG drawing={v} className=\"a-evaluation-all-drawings__drawing\" />,\n    },\n    {\n      title: 'Success Rate',\n      dataIndex: 'successRate',\n      key: 'successRate',\n      render: (v) => <Progress type=\"circle\" percent={v ? v * 100 : 0} width={80} />,\n    },\n  ];\n\n  return (\n    <Layout.Content className=\"container\">\n      <Title>Galeria</Title>\n      <Table dataSource={dataSource} columns={columns} />\n    </Layout.Content>\n  );\n}\n\nexport default Gallery;\n","import React, { useState, useEffect } from 'react';\nimport { HashRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\n\n// Design Resources\nimport { Layout, message } from 'antd';\n// Firebase\nimport { auth } from '../services/firebase';\n// State\nimport { useGlobalState } from '../hooks';\n// Pages\nimport Home from './Home';\nimport Hub from './Hub';\nimport Login from './Login';\nimport Game from './Game';\nimport TestingZone from './TestingZone';\nimport Gallery from './Gallery';\nimport { LoadingBar, LoadingPage } from './loaders';\n\nfunction PrivateRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authenticated === true ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        )\n      }\n    />\n  );\n}\n\nfunction PublicRoute({ component: Component, authenticated, ...rest }) {\n  const fromPath = rest?.location?.state?.from?.pathname ?? '/';\n  return (\n    <Route\n      {...rest}\n      render={(props) => (authenticated === false ? <Component {...props} /> : <Redirect to={fromPath} />)}\n    />\n  );\n}\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useGlobalState('isAuthenticated');\n  const [, setIsAdmin] = useGlobalState('isAdmin');\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoading(false);\n        setIsAuthenticated(true);\n        setIsAdmin(true);\n        message.info('Você foi logado de volta automaticamente.');\n      } else {\n        setIsLoading(false);\n        setIsAuthenticated(false);\n        setIsAdmin(false);\n      }\n    });\n  }, []); // eslint-disable-line\n\n  return (\n    <Layout className=\"app\">\n      <LoadingBar />\n      <Router>\n        {isLoading ? (\n          <LoadingPage />\n        ) : (\n          <Switch>\n            <Route exact path=\"/\" component={Home}></Route>\n            <PrivateRoute path=\"/hub\" authenticated={isAuthenticated} component={Hub} />\n            <PublicRoute path=\"/login\" authenticated={isAuthenticated} component={Login} />\n            <PrivateRoute path=\"/testing-zone\" authenticated={isAuthenticated} component={TestingZone} />\n            <Route path=\"/gallery\" component={Gallery} />\n\n            <Route path=\"*\" component={Game} />\n          </Switch>\n        )}\n      </Router>\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport './styles/index.css';\n\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}