{"version":3,"file":"static/js/teoria-de-conjuntos.7e2577d5.chunk.js","mappings":"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","sources":["components/cards/ItemCard.tsx","components/general/Achievements.tsx","components/general/Container.tsx","components/mouse/MouseFollowingContent.tsx","components/sprites/Sprite.tsx","components/steps/StepSelectPlayer.tsx","components/text/SpeechBubble.tsx","components/views/View.tsx","components/views/ViewIf.tsx","components/views/ViewOr.tsx","components/views/ViewSwitch.tsx","games/teoria-de-conjuntos/utils/api-requests.ts","games/teoria-de-conjuntos/PhaseJudgeSelection.tsx","games/teoria-de-conjuntos/utils/constants.ts","games/teoria-de-conjuntos/components/SelectedAreasCircles.tsx","games/teoria-de-conjuntos/components/Announcement.tsx","games/teoria-de-conjuntos/components/Highlights.tsx","games/teoria-de-conjuntos/components/RulesBlobs.tsx","games/teoria-de-conjuntos/components/TripleDiagram/AreaPlacedItems.tsx","games/teoria-de-conjuntos/components/TripleDiagram/TripleDiagram.tsx","games/teoria-de-conjuntos/components/TripleDiagram/HoverableAreas.tsx","games/teoria-de-conjuntos/components/TripleDiagram/TripleDiagramClickableAreas.tsx","games/teoria-de-conjuntos/components/DiagramSection.tsx","games/teoria-de-conjuntos/StepPlaceItem.tsx","games/teoria-de-conjuntos/utils/mock.ts","games/teoria-de-conjuntos/components/MyThings.tsx","games/teoria-de-conjuntos/components/YesNoSwitch.tsx","games/teoria-de-conjuntos/components/Solution.tsx","games/teoria-de-conjuntos/utils/helper.ts","games/teoria-de-conjuntos/StepWaitPlaceItem.tsx","games/teoria-de-conjuntos/PhaseItemPlacement.tsx","games/teoria-de-conjuntos/components/EvaluationModal.tsx","games/teoria-de-conjuntos/components/PlayerGuess.tsx","games/teoria-de-conjuntos/StepEvaluate.tsx","games/teoria-de-conjuntos/PhaseEvaluation.tsx","games/teoria-de-conjuntos/utils/achievements.ts","games/teoria-de-conjuntos/PhaseGameOver.tsx","games/teoria-de-conjuntos/SessionTeoriaDeConjuntos.tsx","hooks/useWhichPlayerIsThe.ts","icons/ArrowIcon.tsx","icons/CheckMarkIcon.tsx","icons/CircleIcon.tsx","icons/DiagramIcon.tsx","icons/LawIcon.tsx","../node_modules/@ant-design/icons-svg/es/asn/WarningOutlined.js","../node_modules/@ant-design/icons/es/icons/WarningOutlined.js"],"sourcesContent":["import clsx from 'clsx';\n// Components\nimport { Sprite } from 'components/sprites';\n// Sass\nimport './ItemCard.scss';\nimport { DualTranslate } from 'components/language';\n\nexport type ItemCardProps = {\n  /**\n   * The id of the item\n   */\n  id: string;\n  /**\n   * The width of the item\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n  /**\n   * Replacement title, usually the name of the item\n   */\n  title?: string;\n  /**\n   * Optional text to display\n   */\n  text?: DualLanguageValue;\n};\n\nconst BASE = 64;\n\n/**\n * Retrieves the source and item ID based on a given string.\n *\n * @param str - The input string.\n * @returns An array containing the source and item ID.\n */\nconst getSource = (str: string) => {\n  const match = str.match(/\\d+/);\n  const numId = match ? parseInt(match[0], 10) : 0;\n  const itemId = `item-${numId}`;\n  const sourceId = Math.ceil(numId / BASE) * BASE;\n  const source = `items-${sourceId}`;\n  return [source, itemId];\n};\n\n/**\n * An item card component.\n */\nexport function ItemCard({ id, width = 75, className, title, text }: ItemCardProps) {\n  const [source, itemId] = getSource(id);\n\n  const height = text ? 'auto' : `${width}px`;\n\n  return (\n    <div className={clsx('item-card', className)} style={{ width: `${width}px`, height }}>\n      <Sprite source={source} id={itemId} width={width} title={title} />\n      {Boolean(text) && (\n        <span className=\"item-card__text\">\n          <DualTranslate>{text!}</DualTranslate>\n        </span>\n      )}\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Popover } from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\n// Types\nimport type { GamePlayers } from 'types/player';\nimport type { Achievement, AchievementReference } from 'types/achievements';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { DualTranslate, Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { Medal } from './Medal';\n\ntype AchievementsProps = {\n  players: GamePlayers;\n  achievements: Achievement[];\n  reference: AchievementReference;\n};\n\nconst unknownText = { pt: 'Desconhecido', en: 'Unknown' };\n\nexport function Achievements({ players, achievements, reference }: AchievementsProps) {\n  if (achievements.length === 0) return <></>;\n\n  return (\n    <div className={clsx('achievements', getAnimationClass('fadeIn'))}>\n      <Title size=\"small\" level={3}>\n        <Translate pt=\"Medalhas\" en=\"Achievements\" />\n      </Title>\n      <ul className=\"achievements-list\">\n        {achievements.map((achievement, index) => {\n          const { icon = 'star', ...achievementObj } = reference[achievement.type] ?? {};\n          const player = players[achievement.playerId];\n          return (\n            <li\n              key={`achievement-${achievement.type}`}\n              className={clsx(\n                'achievements-entry',\n                getAnimationClass('flipInY', {\n                  delay: index < achievements.length / 2 ? index : achievements.length - 1 - index,\n                })\n              )}\n            >\n              <div className=\"achievement__medal\">\n                <Medal id={icon} />\n              </div>\n              <h4 className=\"achievement__title\">\n                <DualTranslate>{achievementObj.title ?? unknownText}</DualTranslate>\n              </h4>\n              <div className=\"achievement__avatar\">\n                <Avatar id={player.avatarId} />\n              </div>\n              <div className=\"achievement__name\">{player.name}</div>\n              {Boolean(achievementObj.description) && (\n                <div className=\"achievement__description\">\n                  <Popover\n                    content={\n                      <>\n                        <DualTranslate>{achievementObj.description ?? unknownText}</DualTranslate> (\n                        {achievement.value})\n                      </>\n                    }\n                  >\n                    <Button icon={<QuestionCircleOutlined />} shape=\"circle\" type=\"text\" size=\"small\" />\n                  </Popover>\n                </div>\n              )}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","import { ReactNode } from 'react';\nimport clsx from 'clsx';\n// Ant Design Resources\nimport { Space, SpaceProps } from 'antd';\n// Components\nimport { Title, TitleProps } from 'components/text';\n// Sass\nimport './Container.scss';\n\ntype ContainerProps = {\n  title: ReactNode;\n  children: ReactNode;\n  contained?: boolean;\n  className?: string;\n  titleProps?: Omit<TitleProps, 'children'>;\n  contentProps?: SpaceProps;\n} & Omit<SpaceProps, 'title' | 'children'>;\n\n/**\n * Container component with title and center aligned children\n */\nexport function Container({\n  title,\n  children,\n  className,\n  contained,\n  titleProps,\n  contentProps,\n  ...spaceProps\n}: ContainerProps) {\n  const { level = 4, size = 'xx-small', ...restTitleProps } = titleProps ?? {};\n\n  const {\n    className: childrenClassName,\n    wrap = true,\n    direction: childrenDirection = 'horizontal',\n    ...restChildrenContainerProps\n  } = contentProps ?? {};\n\n  return (\n    <Space direction=\"vertical\" className={clsx('container-wrapper', className)} {...spaceProps}>\n      <Title level={level} size={size} {...restTitleProps}>\n        {title}\n      </Title>\n\n      <Space\n        direction={childrenDirection}\n        wrap={wrap}\n        className={clsx(\n          'container-wrapper__children',\n          contained && 'container-wrapper__children--contained',\n          childrenClassName\n        )}\n        {...restChildrenContainerProps}\n      >\n        {children}\n      </Space>\n    </Space>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode, useEffect, useRef } from 'react';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Sass\nimport './MouseFollowingContent.scss';\n\ntype MouseTrackedContentProps = {\n  /**\n   * The content to be rendered.\n   */\n  children: ReactNode;\n  /**\n   * Optional class name to be added to the `<div>` element.\n   */\n  className?: string;\n  /**\n   * Whether the content should be rendered or not.\n   */\n  active?: boolean;\n  /**\n   * Styles the wrapper div with a `contained` class.\n   */\n  contained?: boolean;\n};\n\n/**\n * A React component that renders a `<div>` element that follows the mouse cursor within the browser window.\n */\nexport function MouseFollowingContent({\n  children,\n  className = '',\n  contained = false,\n  active,\n}: MouseTrackedContentProps) {\n  if (!active) {\n    return <></>;\n  }\n\n  return (\n    <MouseFollowingContentInternal className={className} contained={contained}>\n      {children}\n    </MouseFollowingContentInternal>\n  );\n}\n\nfunction MouseFollowingContentInternal({\n  children,\n  contained,\n  className = '',\n}: Partial<MouseTrackedContentProps>) {\n  const divRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleMouseMove = (e: MouseEvent) => {\n      if (divRef.current) {\n        divRef.current.style.left = e.clientX + 16 + 'px';\n        divRef.current.style.top = e.clientY + 16 + 'px';\n      }\n    };\n\n    document.addEventListener('mousemove', handleMouseMove);\n\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, []);\n\n  return (\n    <div\n      ref={divRef}\n      className={clsx(\n        'mouse-following-content',\n        contained && 'mouse-following-content--contained',\n        getAnimationClass('bounceIn'),\n        className\n      )}\n    >\n      {children}\n    </div>\n  );\n}\n","import { WarningOutlined } from '@ant-design/icons';\nimport { useQuery } from '@tanstack/react-query';\nimport { Spin, Tooltip } from 'antd';\nimport { useTDBaseUrl } from 'hooks/useTDBaseUrl';\n\ntype SpriteProps = {\n  /**\n   * The sprite source name\n   */\n  source: string;\n  /**\n   * The id of the item\n   */\n  id: string;\n  /**\n   * The width of the item\n   */\n  width?: number;\n  /**\n   * Replacement title, usually the name of the item\n   */\n  title?: string;\n  /**\n   * Optional class name\n   */\n  className?: string;\n  /**\n   *\n   */\n  padding?: number;\n};\n\n/**\n * Loads a sprite from the Tarde Divertida sprites\n * @param {SpriteProps} props\n * @returns a single sprite item\n */\nexport function Sprite({ id, source, width = 75, padding = 6, title, className }: SpriteProps) {\n  const baseUrl = useTDBaseUrl('tdi');\n\n  const { isLoading, data, isError } = useQuery({\n    queryKey: ['sprite', source],\n    queryFn: async () => {\n      const response = await fetch(`${baseUrl}sprites/${source}.svg`);\n      return await response.text();\n    },\n    enabled: !!id && !!source,\n  });\n\n  const paddedWidth = width - 12;\n\n  if (isLoading) {\n    return (\n      <span\n        style={{\n          width: `${paddedWidth}px`,\n          height: `${paddedWidth}px`,\n          padding,\n          display: 'grid',\n          placeItems: 'center',\n        }}\n        className={className}\n      >\n        <Spin />\n      </span>\n    );\n  }\n\n  const svgContent = data;\n\n  if (isError || !svgContent) {\n    return (\n      <span\n        style={{\n          width: `${paddedWidth}px`,\n          height: `${paddedWidth}px`,\n          padding,\n          display: 'grid',\n          placeItems: 'center',\n        }}\n        className={className}\n      >\n        <WarningOutlined />\n      </span>\n    );\n  }\n\n  return (\n    <svg\n      viewBox=\"0 0 512 512\"\n      style={{ width: `${paddedWidth}px`, height: `${paddedWidth}px`, padding }}\n      className={className}\n    >\n      <use xlinkHref={`#${id}`} dangerouslySetInnerHTML={{ __html: svgContent }} />\n      <foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">\n        {title && (\n          <Tooltip title={title}>\n            <div style={{ background: 'transparent', width: '100%', height: '100vh' }}></div>\n          </Tooltip>\n        )}\n      </foreignObject>\n    </svg>\n  );\n}\n","// Ant Design Resources\nimport { Flex } from 'antd';\n// Types\nimport { GamePlayers } from 'types/player';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useHost } from 'hooks/useHost';\n// Utils\nimport { sortPlayers } from 'utils/helpers';\n// Components\nimport { Step, type StepProps } from 'components/steps';\nimport { Instruction, RuleInstruction, RuleInstructionProps, Title, TitleProps } from 'components/text';\nimport { Translate } from 'components/language';\nimport { TransparentButton } from 'components/buttons';\nimport { AvatarCard } from 'components/avatars';\n\ntype StepSelectPlayerProps = {\n  players: GamePlayers;\n  onSubmitPlayer: (playerId: PlayerId) => void;\n  titleProps: TitleProps;\n  ruleInstructionProps: RuleInstructionProps;\n} & Pick<StepProps, 'announcement'>;\n\nexport function StepSelectPlayer({\n  players,\n  announcement,\n  onSubmitPlayer,\n  titleProps,\n  ruleInstructionProps,\n}: StepSelectPlayerProps) {\n  const { isLoading } = useLoading();\n  const isHost = useHost();\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title {...titleProps} />\n\n      <RuleInstruction {...ruleInstructionProps} />\n\n      <Instruction contained>\n        <Flex className=\"space-container\" gap={8} wrap=\"wrap\">\n          {sortPlayers(players).map((player) => {\n            if (isHost) {\n              return (\n                <TransparentButton\n                  key={`p-bt-${player.id}`}\n                  disabled={isLoading}\n                  onClick={() => onSubmitPlayer(player.id)}\n                >\n                  <AvatarCard key={`p-a-${player.id}`} player={player} withName addressUser />\n                </TransparentButton>\n              );\n            }\n\n            return <AvatarCard key={`p-a-${player.id}`} player={player} withName addressUser />;\n          })}\n        </Flex>\n      </Instruction>\n\n      <RuleInstruction type=\"event\">\n        <Translate pt=\"O Anfitrião selecionará o jogador\" en=\"The Host will select the player\" />\n      </RuleInstruction>\n    </Step>\n  );\n}\n","import { ComponentProps, ReactNode } from 'react';\nimport clsx from 'clsx';\n// Sass\nimport './SpeechBubble.scss';\n\ntype SpeechBubbleProps = {\n  children: ReactNode;\n  direction?: 'left' | 'right' | 'top' | 'bottom';\n  shadow?: boolean;\n  size?: 'small' | 'medium' | 'large';\n} & ComponentProps<'div'>;\n\nexport function SpeechBubble({ children, direction = 'left', shadow, size, ...rest }: SpeechBubbleProps) {\n  const baseClass = 'speech-bubble';\n  return (\n    <div\n      {...rest}\n      className={clsx(\n        baseClass,\n        `${baseClass}--${direction}`,\n        shadow && `${baseClass}--shadow`,\n        size && `${baseClass}--${size}`\n      )}\n    >\n      {children}\n    </div>\n  );\n}\n","import { ReactNode } from 'react';\n\ntype ViewProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n};\n\nexport function View({ children }: ViewProps) {\n  return <>{children}</>;\n}\n","import { ReactNode } from 'react';\n\ntype ViewIfProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Displays children only if condition is truthy\n   */\n  condition?: boolean;\n};\n\n/**\n * Wrapper component that only renders the children if the condition is truthy\n */\nexport function ViewIf({ condition = false, children }: ViewIfProps) {\n  return condition ? <>{children}</> : <></>;\n}\n","import { ReactNode } from 'react';\n\ntype ViewOrProps = {\n  /**\n   * The content of the component to be toggled\n   */\n  children: [ReactNode, ReactNode];\n  /**\n   * The condition to be met to render the first children\n   */\n  condition?: boolean;\n};\n\n/**\n * View wrapper that renders one of two children depending on a condition\n */\nexport function ViewOr({ condition = false, children }: ViewOrProps) {\n  return condition ? <>{children[0]}</> : <>{children[1]}</>;\n}\n","type ViewSwitchProps = {\n  cases: boolean[];\n  /**\n   * The content of the component\n   */\n  children: any;\n};\n\nexport function ViewSwitch({ cases, children }: ViewSwitchProps) {\n  if (cases.length > 5) {\n    throw Error('ViewSwitch only supports up to 5 cases');\n  }\n\n  if (cases[0] && children[0]) {\n    return children[0];\n  }\n\n  if (cases[1] && children[1]) {\n    return children[1];\n  }\n\n  if (cases[2] && children[2]) {\n    return children[2];\n  }\n\n  if (cases[3] && children[3]) {\n    return children[3];\n  }\n\n  if (cases[4] && children[4]) {\n    return children[4];\n  }\n  console.warn('Rendering all children in the ViewSwitch');\n  return children;\n}\n","import type { SubmitEvaluationPayload, SubmitItemPlacementPayload, SubmitJudgePayload } from './types';\nimport { functions } from 'services/firebase';\nimport { httpsCallable } from 'firebase/functions';\nimport { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\nimport type { UseStep } from 'hooks/useStep';\n\nconst submitAction = httpsCallable(functions, 'teoriaDeConjuntosSubmitAction');\n\nexport function useOnSubmitJudgeAPIRequest(setStep: UseStep['setStep']) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: submitAction,\n    actionName: 'submit-judge',\n    onSuccess: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: translate('Juiz submetido com sucesso', 'Judged submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua ação',\n      'Oops, the application found an error while trying to submit your action'\n    ),\n  });\n\n  return (payload: SubmitJudgePayload) => {\n    request({\n      action: 'SUBMIT_JUDGE',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitItemPlacementAPIRequest(setStep: UseStep['setStep']) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: submitAction,\n    actionName: 'submit-item-placement',\n    onSuccess: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: translate('Item submetido com sucesso', 'Item submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua ação',\n      'Oops, the application found an error while trying to submit your action'\n    ),\n  });\n\n  return (payload: SubmitItemPlacementPayload) => {\n    request({\n      action: 'SUBMIT_ITEM_PLACEMENT',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitEvaluationAPIRequest(setStep: UseStep['setStep']) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: submitAction,\n    actionName: 'submit-evaluation',\n    onSuccess: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: translate('Avaliação submetida com sucesso', 'Evaluation submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua ação',\n      'Oops, the application found an error while trying to submit your action'\n    ),\n  });\n\n  return (payload: SubmitEvaluationPayload) => {\n    request({\n      action: 'SUBMIT_EVALUATION',\n      ...payload,\n    });\n  };\n}\n","// Types\nimport type { PhaseProps } from 'types/game';\n// State & Hooks\nimport { useStep } from 'hooks/useStep';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\nimport { useOnSubmitJudgeAPIRequest } from './utils/api-requests';\n// Icons\nimport { LawIcon } from 'icons/LawIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\nimport { StepSelectPlayer } from 'components/steps/StepSelectPlayer';\n\nexport function PhaseJudgeSelection({ players, state, info }: PhaseProps) {\n  const { step, setStep } = useStep();\n\n  const onSubmitJudge = useOnSubmitJudgeAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<LawIcon />}\n      title={<Translate pt=\"Quem quer ser o juiz?\" en=\"Who will be the Judge?\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n      duration={4}\n    />\n  );\n\n  const title = <Translate pt=\"Quem quer ser o juiz?\" en=\"Who will be the Judge?\" />;\n\n  const ruleInstruction = (\n    <Translate\n      en={\n        <>\n          The judge will be responsible for evaluating the answers of the players determining where each\n          submitted item goes in the Venn diagram.\n        </>\n      }\n      pt={\n        <>\n          O juiz será responsável por avaliar as respostas dos jogadores determinando onde cada item submetido\n          vai no diagrama.\n        </>\n      }\n    />\n  );\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.TEORIA_DE_CONJUNTOS.JUDGE_SELECTION}\n    >\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepSelectPlayer\n          players={players}\n          announcement={announcement}\n          titleProps={{\n            children: <>{title}</>,\n            white: true,\n            size: 'small',\n          }}\n          ruleInstructionProps={{\n            children: <>{ruleInstruction}</>,\n            type: 'lore',\n          }}\n          onSubmitPlayer={(playerId) => onSubmitJudge({ judgeId: playerId })}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","export const OUTCOME = {\n  CONTINUE: 'CONTINUE',\n  WRONG: 'WRONG',\n  PENDING: 'PENDING',\n  WIN: 'WIN',\n};\n","import { Fragment, ReactElement } from 'react';\nimport { IconAvatar } from 'components/avatars';\nimport { CircleIcon } from 'icons/CircleIcon';\nimport { XIcon } from 'icons/XIcon';\n\ntype SelectedAreasCirclesProps = {\n  selectedArea: string | null;\n  size?: 'small' | 'large' | number;\n};\n\nexport function SelectedAreasCircles({ selectedArea, size = 'small' }: SelectedAreasCirclesProps) {\n  if (selectedArea === null) {\n    return <></>;\n  }\n\n  const areas = selectedArea.split('');\n\n  const icons: Record<string, ReactElement> = {\n    A: <IconAvatar size={size} icon={<CircleIcon mainColor=\"blue\" />} />,\n    W: <IconAvatar size={size} icon={<CircleIcon mainColor=\"yellow\" />} />,\n    C: <IconAvatar size={size} icon={<CircleIcon mainColor=\"red\" />} />,\n    O: <IconAvatar size={size} icon={<XIcon mainColor=\"#736357\" />} />,\n  };\n\n  return (\n    <>\n      {areas.map((areaId, index, arr) => (\n        <Fragment key={areaId}>\n          {icons[areaId]}\n          {index < arr.length - 1 ? ' + ' : ''}\n        </Fragment>\n      ))}\n    </>\n  );\n}\n","import { Flex } from 'antd';\nimport { AvatarName, IconAvatar } from 'components/avatars';\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { Translate } from 'components/language';\nimport { PhaseAnnouncement } from 'components/phases';\nimport { Instruction } from 'components/text';\nimport { ApplauseIcon } from 'icons/ApplauseIcon';\nimport { ArrowIcon } from 'icons/ArrowIcon';\nimport { BoxEqualIcon } from 'icons/BoxEqualIcon';\nimport { DiagramIcon } from 'icons/DiagramIcon';\nimport { SkullIcon } from 'icons/SkullIcon';\nimport { GamePlayer } from 'types/player';\nimport { Item } from 'types/tdr';\n\nimport { OUTCOME } from '../utils/constants';\nimport { Guess } from '../utils/types';\nimport { SelectedAreasCircles } from './SelectedAreasCircles';\nimport { CheckMarkIcon } from 'icons/CheckMarkIcon';\n\ntype AnnouncementProps = {\n  activePlayer: GamePlayer;\n  previousActivePlayer: GamePlayer;\n  isTheActivePlayer: boolean;\n  previousGuess: Guess | null;\n  currentRound: number;\n  items: Dictionary<Item>;\n};\n\nexport function Announcement({\n  activePlayer,\n  previousActivePlayer,\n  previousGuess,\n  currentRound,\n  items,\n  isTheActivePlayer,\n}: AnnouncementProps) {\n  if (!previousGuess) {\n    return (\n      <PhaseAnnouncement\n        icon={<DiagramIcon />}\n        title={<Translate pt=\"Vamos começar!\" en=\"Let's start!\" />}\n        currentRound={currentRound}\n        type=\"overlay\"\n        duration={20}\n      >\n        <Instruction>\n          <Translate\n            en={\n              <>\n                Every turn a player will be placing one of their things in the correct area of the Venn\n                diagram.\n                <br />\n                If you get it right, you may place another thing.\n                <br />\n                If you get it wrong, you will receive a new thing, and it's the next player's turn.\n                <br />\n                The themes of each area are secret and it's up to you to figure out the logic!\n                <br />\n                Let's start with <AvatarName player={activePlayer} addressUser />.\n              </>\n            }\n            pt={\n              <>\n                A cada rodada um jogador irá colocar uma das suas coisas na área correta do diagrama.\n                <br />\n                Se você acertar, poderá colocar outra outra.\n                <br />\n                Se você errar, receberá uma coisa nova, e será a vez do próximo jogador.\n                <br />\n                Os temas de cada área são secretos e cabe a você descobrir a lógica!\n                <br />\n                Vamos começar com <AvatarName player={activePlayer} addressUser />.\n              </>\n            }\n          />\n        </Instruction>\n      </PhaseAnnouncement>\n    );\n  }\n\n  const item = items[previousGuess.itemId];\n\n  if (previousGuess.outcome === OUTCOME.CONTINUE) {\n    return (\n      <PhaseAnnouncement\n        icon={\n          <Flex gap={6} justify=\"center\" align=\"center\" style={{ height: '100%' }}>\n            <ItemCard id={item.id} text={item.name} width={100} />{' '}\n            <IconAvatar icon={<ArrowIcon />} size=\"large\" />{' '}\n            <SelectedAreasCircles selectedArea={previousGuess.correctArea} size={75} />\n            <IconAvatar icon={<BoxEqualIcon />} size=\"large\" />\n            <IconAvatar icon={<ApplauseIcon />} size={75} />\n          </Flex>\n        }\n        title={<Translate pt=\"Muito bem!\" en=\"Good job!\" />}\n        currentRound={currentRound}\n        type=\"overlay\"\n        duration={7}\n      >\n        <Instruction>\n          <Translate\n            en={\n              <>\n                <AvatarName player={activePlayer} addressUser /> got it right!{' '}\n                {isTheActivePlayer ? 'You' : 'They'} may place another item.\n              </>\n            }\n            pt={\n              <>\n                <AvatarName player={activePlayer} addressUser /> acertou!{' '}\n                {isTheActivePlayer ? 'Você' : 'Ele(a)'} pode colocar outro item.\n              </>\n            }\n          />\n        </Instruction>\n      </PhaseAnnouncement>\n    );\n  }\n\n  return (\n    <PhaseAnnouncement\n      icon={\n        <>\n          <Flex gap={6} justify=\"center\" align=\"center\" style={{ height: '100%' }}>\n            <ItemCard id={item.id} text={item.name} width={75} />{' '}\n            <IconAvatar icon={<ArrowIcon />} size=\"small\" />{' '}\n            <SelectedAreasCircles selectedArea={previousGuess.suggestedArea} size={50} />\n            <IconAvatar icon={<BoxEqualIcon />} size=\"small\" />\n            <IconAvatar icon={<SkullIcon />} size={50} />\n          </Flex>\n          <Flex gap={6} justify=\"center\" align=\"center\" style={{ height: '100%', marginTop: 16 }}>\n            <ItemCard id={item.id} text={item.name} width={75} />{' '}\n            <IconAvatar icon={<ArrowIcon />} size=\"small\" />{' '}\n            <SelectedAreasCircles selectedArea={previousGuess.correctArea} size={50} />\n            <IconAvatar icon={<BoxEqualIcon />} size=\"small\" />\n            <IconAvatar icon={<CheckMarkIcon />} size={50} />\n          </Flex>\n        </>\n      }\n      title={\n        <Translate\n          pt={\n            <>\n              <AvatarName player={previousActivePlayer} /> errou... Próximo jogador!\n            </>\n          }\n          en={\n            <>\n              <AvatarName player={previousActivePlayer} /> got it wrong... Next player!\n            </>\n          }\n        />\n      }\n      currentRound={currentRound}\n      type=\"overlay\"\n      duration={7}\n    >\n      <Instruction>\n        <Translate\n          en={\n            <>\n              It's <AvatarName player={activePlayer} />\n              's turn.\n              <br />\n              The themes of each area are secret!\n            </>\n          }\n          pt={\n            <>\n              É a vez do(a) <AvatarName player={activePlayer} />.\n              <br />\n              Os temas de cada área são secretos!\n            </>\n          }\n        />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n}\n","// Icons\nimport { CircleIcon } from 'icons/CircleIcon';\nimport { XIcon } from 'icons/XIcon';\n// Components\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function CircleHighlight({ children, type, color }: HighlightProps & { color: string }) {\n  return (\n    <MetricHighlight icon={<CircleIcon mainColor={color} />} type={type} iconPlacement=\"before\">\n      {children}\n    </MetricHighlight>\n  );\n}\n\nexport function OutsideHighlight({ children, type }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<XIcon mainColor=\"#736357\" />} type={type} iconPlacement=\"before\">\n      {children}\n    </MetricHighlight>\n  );\n}\n","import { ReactNode } from 'react';\nimport { Button, Popover } from 'antd';\n// Types\nimport { DiagramTopic } from 'types/tdr';\n// Utils\nimport { DiagramExamples } from '../utils/types';\n// Components\nimport { Translate } from 'components/language';\nimport { TextHighlight } from 'components/text';\nimport { CircleHighlight } from './Highlights';\n\ntype ExamplesProps = {\n  examples: DiagramTopic[];\n  title: ReactNode;\n};\n\nfunction Examples({ examples, title }: ExamplesProps) {\n  const content = (\n    <ul>\n      {examples.map((example) => (\n        <li key={example.id}>- {example.text}.</li>\n      ))}\n    </ul>\n  );\n\n  return (\n    <Popover content={content} title={title}>\n      <Button type=\"link\">\n        <Translate en=\"See examples\" pt=\"Ver exemplos\" />\n      </Button>\n    </Popover>\n  );\n}\n\ntype DiagramRulesProps = {\n  examples: DiagramExamples;\n};\n\nexport function DiagramRules({ examples }: DiagramRulesProps) {\n  const hasContext = Boolean(examples.context);\n  return (\n    <Translate\n      en={\n        <>\n          The Venn diagram has {hasContext ? 'three' : 'two'} areas and each area has a secret rule.\n          <br />\n          The <CircleHighlight color=\"blue\">blue area</CircleHighlight> has a rule related to an{' '}\n          <TextHighlight>Attribute</TextHighlight> of the thing, like its physical properties.{' '}\n          <Examples examples={examples.attribute} title=\"Attribute Examples\" />\n          <br />\n          The <CircleHighlight color=\"yellow\">yellow area</CircleHighlight> has a rule related to the{' '}\n          <TextHighlight>word</TextHighlight>: the name of the thing, spelling, grammar or pronunciation.\n          <Examples examples={examples.word} title=\"Word Examples\" />\n          {\n            <>\n              <br />\n              The <CircleHighlight color=\"red\">red area</CircleHighlight> has a rule related to the{' '}\n              <TextHighlight>context</TextHighlight>\n              of the thing, where you might find it or use it.{' '}\n              <Examples examples={examples.context!} title=\"Context Examples\" />\n            </>\n          }\n        </>\n      }\n      pt={\n        <>\n          O diagrama tem {hasContext ? 'três' : 'duas'} áreas e cada área tem uma regra secreta.\n          <br />A <CircleHighlight color=\"blue\">área azul</CircleHighlight> tem uma regra relacionada a um{' '}\n          <TextHighlight>Atributo</TextHighlight> da coisa, como suas propriedades físicas.{' '}\n          <Examples examples={examples.attribute} title=\"Exemplos de Atributos\" />\n          <br />A <CircleHighlight color=\"yellow\">área amarela</CircleHighlight> tem uma regra relacionada à{' '}\n          <TextHighlight>palavra</TextHighlight>: o nome da coisa, soletração, gramática ou pronúncia.\n          <Examples examples={examples.word} title=\"Exemplos de Palavras\" />\n          {\n            <>\n              <br />A <CircleHighlight color=\"red\">área azul</CircleHighlight> tem uma regra relacionada ao{' '}\n              <TextHighlight>contexto</TextHighlight> da coisa, onde você pode encontrá-la ou usá-la.{' '}\n              <Examples examples={examples.context!} title=\"Exemplos de Contexto\" />\n            </>\n          }\n        </>\n      }\n    />\n  );\n}\n\nexport function EvaluationRules() {\n  return (\n    <Translate\n      en=\"The judge will evaluate the position of the thing in the Venn diagram if it makes correctly the secret rules.\"\n      pt=\"O juiz avaliará a posição da coisa no diagrama de Venn se ele fizer corretamente as regras secretas.\"\n    />\n  );\n}\n","import { Avatar } from 'antd';\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { DiagramArea } from 'games/teoria-de-conjuntos/utils/types';\nimport { useMemo } from 'react';\nimport { getAnimationClass } from 'utils/helpers';\n\nconst CONTAINER_BOX_WIDTH = 820;\nconst CONTAINER_BOX_HEIGHT = 720;\n\nexport function calculateProportionalValues(containerWidth: number, objectX: number, objectY: number) {\n  const scaleFactor = containerWidth / CONTAINER_BOX_WIDTH;\n  return {\n    width: containerWidth,\n    height: CONTAINER_BOX_HEIGHT * scaleFactor,\n    x: objectX * scaleFactor,\n    y: objectY * scaleFactor,\n  };\n}\n\ntype Point = {\n  x: number;\n  y: number;\n};\n\nconst BOUNDARIES_BY_AREA: Record<string, Point[]> = {\n  A: [\n    { x: 191, y: 218 },\n    { x: 222, y: 131 },\n    { x: 108, y: 288 },\n    { x: 154, y: 149 },\n    { x: 188, y: 292 },\n    { x: 296, y: 106 },\n    { x: 121, y: 217 },\n    { x: 259, y: 195 },\n    { x: 249, y: 263 },\n    { x: 138, y: 358 },\n  ],\n  W: [\n    { x: 637, y: 240 },\n    { x: 640, y: 166 },\n    { x: 625, y: 310 },\n    { x: 563, y: 246 },\n    { x: 513, y: 101 },\n    { x: 709, y: 232 },\n    { x: 601, y: 99 },\n    { x: 700, y: 305 },\n    { x: 553, y: 173 },\n    { x: 679, y: 374 },\n  ],\n  C: [\n    { x: 378, y: 601 },\n    { x: 444, y: 603 },\n    { x: 311, y: 569 },\n    { x: 511, y: 564 },\n    { x: 409, y: 530 },\n    { x: 302, y: 635 },\n    { x: 523, y: 630 },\n    { x: 243, y: 570 },\n    { x: 579, y: 563 },\n    { x: 413, y: 673 },\n  ],\n  AW: [\n    { x: 405, y: 170 },\n    { x: 369, y: 225 },\n    { x: 440, y: 225 },\n  ],\n  WC: [\n    { x: 544, y: 387 },\n    { x: 510, y: 450 },\n    { x: 580, y: 455 },\n  ],\n  AC: [\n    { x: 281, y: 380 },\n    { x: 237, y: 446 },\n    { x: 312, y: 450 },\n  ],\n  AWC: [\n    { x: 377, y: 337 },\n    { x: 431, y: 341 },\n    { x: 411, y: 396 },\n  ],\n  O: [\n    { x: 710, y: 552 },\n    { x: 669, y: 654 },\n    { x: 614, y: 730 },\n    { x: 778, y: 480 },\n    { x: 759, y: 640 },\n    { x: 115, y: 570 },\n    { x: 42, y: 569 },\n    { x: 203, y: 728 },\n    { x: 54, y: 484 },\n    { x: 52, y: 644 },\n    { x: 86, y: 730 },\n    { x: 140, y: 659 },\n    { x: 776, y: 567 },\n    { x: 745, y: 724 },\n  ],\n};\n\ntype AreaPlacedItemsProps = {\n  areaKey: string;\n  diagramArea: DiagramArea;\n  containerWidth: number;\n};\n\nexport function AreaPlacedItems({ areaKey, diagramArea, containerWidth }: AreaPlacedItemsProps) {\n  const boundaries = BOUNDARIES_BY_AREA[areaKey];\n\n  const itemWidth = containerWidth / 9;\n\n  // const itemsIds = useMemo(\n  //   () => [\n  //     ...diagramArea.itemsIds,\n  //     '4',\n  //     '56',\n  //     '123',\n  //     '456',\n  //     '168',\n  //     '855',\n  //     '0',\n  //     '166',\n  //     '963',\n  //     '1456',\n  //     '777',\n  //     '888',\n  //   ],\n  //   [diagramArea.itemsIds]\n  // );\n  const { itemsIds } = diagramArea;\n\n  const elements = useMemo(() => {\n    return itemsIds\n      .map((itemId, index) => {\n        // If more than boundaries list, don't render\n        if (index >= boundaries.length) return null;\n\n        const { x, y } = boundaries[index];\n        const points = calculateProportionalValues(containerWidth, x, y);\n        const left = points.x;\n        const top = points.y;\n\n        // If it's the last item, just render the number\n        if (index === boundaries.length - 1 && itemsIds.length > boundaries.length) {\n          return (\n            <span key={itemId} style={{ position: 'absolute', left: `${left - 12}px`, top: `${top - 12}px` }}>\n              <Avatar size={itemWidth / 2}>+ {itemsIds.length - boundaries.length + 1}</Avatar>\n            </span>\n          );\n        }\n\n        return (\n          <span\n            key={itemId}\n            style={{ position: 'absolute', left: `${left + 12}px`, top: `${top + 12}px` }}\n            className={getAnimationClass('bounceIn', { delay: index * 0.5 })}\n          >\n            <ItemCard id={itemId} width={itemWidth} className=\"bare-item\" />\n          </span>\n        );\n      })\n      .filter(Boolean);\n  }, [itemsIds, boundaries, containerWidth, itemWidth]);\n\n  return <>{elements.map((item) => item)}</>;\n}\n","import { forwardRef } from 'react';\n\ntype TripleDiagramProps = {\n  width: number;\n};\n\nexport const TripleDiagram = forwardRef<SVGSVGElement, TripleDiagramProps>(({ width }, ref) => {\n  return (\n    <svg ref={ref} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 820 780\" width={width}>\n      <path\n        fill=\"#007ae0\"\n        d=\"M275.35 26.64v31c112.39 0 217 85.63 218 217.53.94 122.81-105.66 218.05-218 218.05v30.45c137.24 0 248.5-111.26 248.5-248.5S412.59 26.64 275.35 26.64z\"\n      ></path>\n      <path\n        fill=\"#31a1ff\"\n        d=\"M275.35 26.64c-137.24 0-248.5 111.26-248.5 248.5s111.26 248.5 248.5 248.5c120.67 0 218.5-111.26 218.5-248.5S396 26.64 275.35 26.64zm0 463.55c-118.77 0-215.06-96.28-215.06-215S156.58 60.08 275.35 60.08s215 96.29 215 215.06-96.23 215.05-215 215.05z\"\n      ></path>\n      <path d=\"M456.37 94.12a256 256 0 00-362 362 256 256 0 00362-362zm-181 422c-132.89 0-241-108.11-241-241s108.11-241 241-241 241 108.11 241 241-108.13 241.02-241.02 241.02z\"></path>\n      <path d=\"M275.35 49.19a226 226 0 00-146.55 54 8.64 8.64 0 1011.2 13.13 208.73 208.73 0 01135.35-49.84c115 0 208.66 93.6 208.66 208.66S390.4 483.8 275.35 483.8 66.69 390.19 66.69 275.14a208.73 208.73 0 0149.84-135.33 8.64 8.64 0 10-13.15-11.22 226 226 0 00-54 146.55c0 124.59 101.36 226 226 226s226-101.36 226-225.95-101.44-226-226.03-226z\"></path>\n      <path\n        fill=\"#e0a100\"\n        d=\"M544.65 26.64v31c112.39 0 217.06 85.63 218.06 217.53C763.64 398 657 493.19 544.65 493.19v30.45c137.24 0 248.5-111.26 248.5-248.5s-111.26-248.5-248.5-248.5z\"\n      ></path>\n      <path\n        fill=\"#ffc531\"\n        d=\"M544.65 26.64c-137.24 0-248.5 111.26-248.5 248.5s111.26 248.5 248.5 248.5c120.68 0 218.5-111.26 218.5-248.5s-97.82-248.5-218.5-248.5zm0 463.55c-118.77 0-215-96.28-215-215s96.28-215.06 215-215.06 215.06 96.29 215.06 215.06-96.29 215-215.06 215z\"\n      ></path>\n      <path d=\"M725.67 94.12a256 256 0 00-362 362 256 256 0 00362-362zm-181 422c-132.89 0-241-108.11-241-241s108.11-241 241-241 241 108.11 241 241-108.13 241.02-241.02 241.02z\"></path>\n      <path d=\"M544.65 49.19a226 226 0 00-146.55 54 8.64 8.64 0 0011.22 13.15 208.73 208.73 0 01135.33-49.86c115.06 0 208.66 93.6 208.66 208.66S659.71 483.8 544.65 483.8 336 390.19 336 275.14a208.69 208.69 0 0149.85-135.33 8.65 8.65 0 10-13.16-11.22 226 226 0 00-54 146.55c0 124.59 101.36 226 226 226s226-101.36 226-225.95-101.45-226-226.04-226z\"></path>\n      <path\n        fill=\"#e0230d\"\n        d=\"M407 253.48v31c112.34-.03 217 85.6 218 217.52.94 122.79-105.66 218-218 218v30.45c137.25 0 248.5-111.26 248.5-248.5S544.2 253.48 407 253.48z\"\n      ></path>\n      <path\n        fill=\"#ff5440\"\n        d=\"M407 253.48c-137.24 0-248.5 111.26-248.5 248.5s111.21 248.5 248.5 248.5c120.68 0 218.5-111.26 218.5-248.5s-97.87-248.5-218.5-248.5zM407 717c-118.77 0-215-96.28-215-215s96.18-215.08 215-215.08S622 383.21 622 502s-96.27 215-215 215z\"\n      ></path>\n      <path d=\"M588 321a256 256 0 1075 181 254.33 254.33 0 00-75-181zM407 743c-132.88 0-241-108.11-241-241s108.07-241 241-241 241 108.09 241 241-108.16 241-241 241z\"></path>\n      <path d=\"M407 276a226 226 0 00-146.54 54 8.64 8.64 0 1011.22 13.15A208.68 208.68 0 01407 293.32c115.06 0 208.66 93.6 208.66 208.66S522 710.64 407 710.64 198.29 617 198.29 502a208.69 208.69 0 0149.85-135.33A8.65 8.65 0 10235 355.43 226 226 0 00181 502c0 124.59 101.36 225.95 226 225.95S633 626.59 633 502 531.55 276 407 276z\"></path>\n    </svg>\n  );\n});\n","import { useState } from 'react';\n\ntype HoverablePathProps = {\n  d: string;\n  fill: string;\n  areaKey: string;\n  onClick: (areaKey: string) => void;\n};\n\nexport function HoverablePath({ d, fill, onClick, areaKey }: HoverablePathProps) {\n  const [isHovered, setIsHovered] = useState(false);\n  const handleMouseEnter = () => {\n    setIsHovered(true);\n  };\n\n  const handleMouseLeave = () => {\n    setIsHovered(false);\n  };\n\n  return (\n    <>\n      <path\n        id={`area-key-${areaKey}`}\n        fill={isHovered ? '#FFF' : fill}\n        d={d}\n        opacity={isHovered ? '0.5' : '0.25'}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n        cursor=\"pointer\"\n        onClick={() => onClick(areaKey)}\n      />\n    </>\n  );\n}\n","import { forwardRef } from 'react';\nimport { HoverablePath } from './HoverableAreas';\n\ntype TripleDiagramClickableAreasProps = {\n  width: number;\n  onClick: (areaKey: string) => void;\n};\n\nexport const TripleDiagramClickableAreas = forwardRef<SVGSVGElement, TripleDiagramClickableAreasProps>(\n  ({ width, onClick }, ref) => {\n    return (\n      <svg\n        ref={ref}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 820 780\"\n        width={width}\n        className=\"clickable-areas\"\n      >\n        {/* A */}\n        <HoverablePath\n          areaKey=\"A\"\n          onClick={onClick}\n          fill=\"#31a1ff\"\n          d=\"M116.53 139.81a208.54 208.54 0 0040.36 307 257.08 257.08 0 01131.77-172 254.31 254.31 0 0175-180.71c1.81-1.81 3.66-3.59 5.51-5.34A208.55 208.55 0 00140 116.32a8.63 8.63 0 01-10.36.64q-6.5 6-12.49 12.49a8.62 8.62 0 01-.62 10.36z\"\n        />\n        {/* AW */}\n        <HoverablePath\n          areaKey=\"AW\"\n          onClick={onClick}\n          fill=\"#71b371\"\n          d=\"M385.84 139.81a208.66 208.66 0 0 0-48.93 115.83 258.62 258.62 0 0 1 146.35 1.86 208.43 208.43 0 0 0-73.33-141.68l-.61.5A8.62 8.62 0 0 1 399 117q-6.49 6-12.48 12.49a8.65 8.65 0 0 1-.68 10.32Z\"\n        />\n        {/* W */}\n        <HoverablePath\n          areaKey=\"W\"\n          onClick={onClick}\n          fill=\"#ffc531\"\n          d=\"M531.35 275.14v3A257 257 0 0 1 588 321a254.15 254.15 0 0 1 69.8 129.43 208.64 208.64 0 0 0 95.54-175.25c0-115.06-93.6-208.66-208.66-208.66a208.8 208.8 0 0 0-93.81 22.29c1.86 1.75 3.71 3.53 5.53 5.35a254.33 254.33 0 0 1 74.95 180.98Z\"\n        />\n        {/* WC */}\n        <HoverablePath\n          areaKey=\"WC\"\n          onClick={onClick}\n          fill=\"#ff8d39\"\n          d=\"M525.41 330.3a254.32 254.32 0 0 1-69 125.86 276.17 276.17 0 0 1-5.51 5.33 208.42 208.42 0 0 0 162.61 10.63 208.94 208.94 0 0 0-88.1-141.82Z\"\n        />\n        {/* C */}\n        <HoverablePath\n          areaKey=\"C\"\n          onClick={onClick}\n          fill=\"#ff5440\"\n          d=\"M410 493a257.19 257.19 0 0 1-210.95 26.66c9 106.83 98.79 191 207.9 191 108.49 0 197.88-83.22 207.75-189.16a257.32 257.32 0 0 1-70.05 9.66A254.39 254.39 0 0 1 410 493Z\"\n        />\n        {/* AC */}\n        <HoverablePath\n          areaKey=\"AC\"\n          onClick={onClick}\n          fill=\"#9360a0\"\n          d=\"M369.14 461.49c-1.85-1.75-3.7-3.52-5.51-5.33a254.18 254.18 0 0 1-69.81-129.5 208.07 208.07 0 0 0-22.19 16.5 8.63 8.63 0 0 1-10.36.64q-6.49 6-12.49 12.49a8.65 8.65 0 0 1-.64 10.36A208.7 208.7 0 0 0 200.76 470a208.44 208.44 0 0 0 168.38-8.52Z\"\n        />\n        {/* AWC */}\n        <HoverablePath\n          areaKey=\"AWC\"\n          onClick={onClick}\n          fill=\"#b09e95\"\n          d=\"M410 434.4a208.64 208.64 0 0 0 71.56-127.28A208.48 208.48 0 0 0 338.14 305 208.59 208.59 0 0 0 410 434.4Z\"\n        />\n\n        {/* O */}\n        <HoverablePath\n          areaKey=\"O\"\n          onClick={onClick}\n          fill=\"#fff\"\n          d=\"M0 0v780h820V0Zm725.67 456.16A256.75 256.75 0 0 1 663 502.29a256 256 0 0 1-512-.29v-3a257.25 257.25 0 0 1-56.66-42.86A256.06 256.06 0 0 1 410 57.32a256 256 0 0 1 315.67 398.84Z\"\n        />\n\n        {/* Fake contain items */}\n      </svg>\n    );\n  }\n);\n","import { Flex } from 'antd';\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\nimport { useState } from 'react';\nimport { Item } from 'types/tdr';\n\nimport { DiagramArea } from '../utils/types';\nimport { SelectedAreasCircles } from './SelectedAreasCircles';\nimport { AreaPlacedItems, calculateProportionalValues } from './TripleDiagram/AreaPlacedItems';\nimport { TripleDiagram } from './TripleDiagram/TripleDiagram';\nimport { TripleDiagramClickableAreas } from './TripleDiagram/TripleDiagramClickableAreas';\n\ntype DiagramSectionProps = {\n  width: number;\n  onSelectArea?: (area: string) => void;\n  items: Dictionary<Item>;\n  diagrams: Dictionary<DiagramArea>;\n  currentItem?: Item;\n};\n\nexport function DiagramSection({ width, onSelectArea, diagrams, items, currentItem }: DiagramSectionProps) {\n  const [selectedArea, setSelectedArea] = useState<string>('');\n\n  const onAreaClick = (area: string) => {\n    setSelectedArea(area);\n    if (onSelectArea) {\n      onSelectArea(area);\n    }\n  };\n\n  const hasAnAreaSelected = !!selectedArea;\n\n  const selectedAreaItems = hasAnAreaSelected ? diagrams[selectedArea].itemsIds : [];\n\n  const floatingItemSizes = calculateProportionalValues(width, 410, 360);\n  const containerSizes = calculateProportionalValues(width, 0, 0);\n\n  return (\n    <div className=\"diagram-section\">\n      <Instruction contained={hasAnAreaSelected} className=\"diagram-section__selected-scope\">\n        {hasAnAreaSelected && (\n          <>\n            <Title size=\"xx-small\">\n              {selectedArea === 'O' ? (\n                <Translate pt=\"Fora do Diagrama\" en=\"Outside the Diagram\" />\n              ) : (\n                <Translate pt=\"Área Selecionada\" en=\"Selected Area\" />\n              )}\n              <br />\n              <SelectedAreasCircles selectedArea={selectedArea} />\n            </Title>\n            <Flex\n              justify=\"center\"\n              align=\"center\"\n              gap={6}\n              wrap=\"wrap\"\n              style={{ maxHeight: containerSizes.height, overflowY: 'scroll' }}\n            >\n              {selectedAreaItems.map((itemId) => (\n                <ItemCard key={itemId} id={itemId} width={100} text={items[itemId].name} />\n              ))}\n            </Flex>\n          </>\n        )}\n      </Instruction>\n      <Instruction contained className=\"diagram-section__world\">\n        <TripleDiagram width={width} />\n        {Object.values(diagrams).map((diagramArea) => (\n          <AreaPlacedItems\n            key={diagramArea.key}\n            areaKey={diagramArea.key}\n            diagramArea={diagramArea}\n            containerWidth={width}\n          />\n        ))}\n        <TripleDiagramClickableAreas width={width} onClick={onAreaClick} />\n        {!!currentItem && (\n          <div\n            className=\"floating-item\"\n            style={{ top: floatingItemSizes.y - 50, left: floatingItemSizes.x - 50 }}\n          >\n            <ItemCard\n              id={currentItem.id}\n              width={100}\n              // text={currentItem?.name}\n              className=\"floating-item__item\"\n            />\n          </div>\n        )}\n      </Instruction>\n    </div>\n  );\n}\n","// Types\nimport type { GamePlayers, GamePlayer } from 'types/player';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\n// Components\nimport { Step, type StepProps } from 'components/steps';\nimport { RuleInstruction, Title } from 'components/text';\nimport { DualTranslate, Translate } from 'components/language';\nimport { DiagramRules } from './components/RulesBlobs';\nimport { DiagramArea, DiagramExamples, SubmitItemPlacementPayload } from './utils/types';\nimport { Item } from 'types/tdr';\nimport { useCardWidthByContainerRef } from 'hooks/useCardWidth';\nimport { Button, Flex, Space } from 'antd';\nimport { MouseFollowingContent } from 'components/mouse/MouseFollowingContent';\nimport { useState } from 'react';\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { TransparentButton } from 'components/buttons';\nimport { getAnimationClass } from 'utils/helpers';\n\nimport { SelectedAreasCircles } from './components/SelectedAreasCircles';\nimport { TurnOrder } from 'components/players';\nimport { Container } from 'components/general/Container';\nimport { DiagramSection } from './components/DiagramSection';\nimport { useMock } from 'hooks/useMock';\nimport { mockDiagramSelection } from './utils/mock';\n\ntype StepPlaceItemProps = {\n  players: GamePlayers;\n  user: GamePlayer;\n  examples: DiagramExamples;\n  diagrams: Dictionary<DiagramArea>;\n  items: Dictionary<Item>;\n  turnOrder: GameOrder;\n  activePlayer: GamePlayer;\n  onSubmitItemPlacement: (payload: SubmitItemPlacementPayload) => void;\n} & Pick<StepProps, 'announcement'>;\n\nexport function StepPlaceItem({\n  players,\n  user,\n  announcement,\n  examples,\n  diagrams,\n  items,\n  turnOrder,\n  activePlayer,\n  onSubmitItemPlacement,\n}: StepPlaceItemProps) {\n  const { isLoading } = useLoading();\n\n  const [width, ref] = useCardWidthByContainerRef(2, { maxWidth: 1000 });\n  const [selectedItemId, setSelectedItemId] = useState<string | null>(null);\n  const [selectedArea, setSelectedArea] = useState<string | null>(null);\n\n  const selectedItem = items[selectedItemId ?? ''] ?? { name: { en: '', pt: '' } };\n\n  useMock(() => {\n    onSubmitItemPlacement(mockDiagramSelection(user.hand ?? [], diagrams));\n  });\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <div ref={ref} style={{ width: '100%' }} />\n      <Title>\n        <Translate\n          pt={<>Selecione um item e uma área do diagrama que você acha que ele pode se encaixar</>}\n          en={<>Select an item and an area of the diagram where you think it could fit</>}\n        />\n      </Title>\n\n      <RuleInstruction type=\"rule\">\n        <DiagramRules examples={examples} />\n      </RuleInstruction>\n\n      <Space className=\"space-container\">\n        <Button\n          type=\"primary\"\n          size=\"large\"\n          loading={isLoading}\n          disabled={!selectedArea || !selectedItemId}\n          onClick={() => onSubmitItemPlacement({ position: selectedArea!, itemId: selectedItemId! })}\n        >\n          <Flex gap={8}>\n            <Translate en=\"Submit\" pt=\"Enviar\" />\n            <span className=\"selected-item\">\n              <DualTranslate>{selectedItem?.name}</DualTranslate>\n            </span>{' '}\n            <span>=</span>\n            <SelectedAreasCircles selectedArea={selectedArea} />\n          </Flex>\n        </Button>\n      </Space>\n\n      <MouseFollowingContent active={Boolean(selectedItemId) && !selectedArea} contained>\n        <ItemCard\n          id={selectedItemId ?? ''}\n          width={100}\n          text={items[selectedItemId ?? '']?.name}\n          className={getAnimationClass('pulse', { infinite: true, speed: 'faster' })}\n        />\n      </MouseFollowingContent>\n\n      <DiagramSection width={width} onSelectArea={setSelectedArea} diagrams={diagrams} items={items} />\n\n      <RuleInstruction type=\"action\">\n        <Translate\n          en={\n            <>\n              Select one of your things and place them in one of the areas of the diagram. If there are\n              already things there, you can try to base your placement off of them.\n              <br />\n              The goal is to correctly place your things in the diagram based on the secret rules of each\n              area.\n              <br />\n              If you place it right, you can place another thing. If you place it wrong, you will receive a\n              new thing and it will be the next player's turn.\n            </>\n          }\n          pt={\n            <>\n              Selecione uma de suas coisas e coloque-as em uma das áreas do diagrama. Se já houver coisas lá,\n              você pode tentar basear sua colocação nelas.\n              <br />\n              O objetivo é colocar corretamente suas coisas no diagrama com base nas regras secretas de cada\n              área.\n              <br />\n              Se você colocar certo, poderá colocar outra coisa. Se você colocar errado, receberá uma nova\n              coisa e será a vez do próximo jogador.\n            </>\n          }\n        />\n      </RuleInstruction>\n\n      <Container contained title={<Translate pt=\"Suas coisas\" en=\"Your items\" />}>\n        <Flex gap={8} justify=\"center\">\n          {(user.hand ?? []).map((itemId: string) => (\n            <TransparentButton key={itemId} onClick={() => setSelectedItemId(itemId)}>\n              <ItemCard id={itemId} width={100} text={items[itemId]?.name} />\n            </TransparentButton>\n          ))}\n        </Flex>\n      </Container>\n\n      <TurnOrder players={players} order={turnOrder} activePlayerId={activePlayer.id} />\n    </Step>\n  );\n}\n","import { sample } from 'lodash';\nimport { DiagramArea } from './types';\n\nexport const mockDiagramSelection = (hand: CardId[], diagrams: Dictionary<DiagramArea>) => {\n  const selectedItem = sample(hand);\n\n  const counts = Object.values(diagrams).reduce((acc: Dictionary<string[]>, diagram) => {\n    const count = diagram.itemsIds.length;\n\n    if (!acc[count]) {\n      acc[count] = [diagram.key];\n    } else {\n      acc[count].push(diagram.key);\n    }\n\n    return acc;\n  }, {});\n\n  const max = Math.max(...Object.keys(counts).map(Number));\n\n  const selectedDiagrams = counts[max];\n  if (counts[max - 1]) {\n    selectedDiagrams.push(...counts[max - 1]);\n  }\n  selectedDiagrams.push(...['O', 'O', 'O']);\n\n  return { itemId: selectedItem ?? hand[0], position: sample(selectedDiagrams) ?? 'O' };\n};\n","import { Flex } from 'antd';\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { Container } from 'components/general/Container';\nimport { Translate } from 'components/language';\nimport { ViewOr } from 'components/views';\nimport { Item } from 'types/tdr';\n\ntype MyThingsProps = {\n  hand: string[];\n  items: Dictionary<Item>;\n};\n\nexport function MyThings({ hand, items }: MyThingsProps) {\n  return (\n    <Container\n      contained\n      title={<Translate pt=\"Suas coisas\" en=\"Your items\" />}\n      contentProps={{ direction: 'vertical' }}\n    >\n      <Translate\n        pt=\"Essas são as suas coisas que você poderá posicionar quando chegar sua vez.\"\n        en=\"These are your items that you will be able to place when it's your turn.\"\n      />\n\n      <ViewOr condition={hand.length > 0}>\n        <Flex gap={8} justify=\"center\">\n          {hand.map((itemId: string) => (\n            <ItemCard key={itemId} id={itemId} width={100} text={items[itemId]?.name} />\n          ))}\n        </Flex>\n\n        <p>\n          <Translate en=\"You don't have any items yet\" pt=\"Você ainda não tem itens.\" />\n        </p>\n      </ViewOr>\n    </Container>\n  );\n}\n","import { Switch, SwitchProps } from 'antd';\nimport { Translate } from 'components/language';\n\nexport function YesNoSwitch({ checkedChildren, unCheckedChildren, ...props }: SwitchProps) {\n  return (\n    <Switch\n      checkedChildren={checkedChildren ?? <Translate en=\"Yes\" pt=\"Sim\" />}\n      unCheckedChildren={unCheckedChildren ?? <Translate en=\"No\" pt=\"Não\" />}\n      {...props}\n    />\n  );\n}\n","import { Divider, Flex, Typography } from 'antd';\nimport { useLoading } from 'hooks/useLoading';\nimport { Solutions } from '../utils/types';\nimport { Translate } from 'components/language';\nimport { CircleHighlight } from './Highlights';\nimport { YesNoSwitch } from './YesNoSwitch';\nimport { Fragment, useMemo } from 'react';\nimport { countWordProperties } from '../utils/helper';\n\ntype SolutionProps = {\n  solutions: Solutions;\n  attribute?: string;\n  word?: string;\n  context?: string;\n  setAttribute?: (value: string) => void;\n  setWord?: (value: string) => void;\n  setContext?: (value: string) => void;\n  showHints?: boolean;\n  itemName?: string;\n};\n\nexport function Solution({\n  solutions,\n  attribute,\n  word,\n  context,\n  setAttribute,\n  setWord,\n  setContext,\n  showHints,\n  itemName,\n}: SolutionProps) {\n  const { isLoading } = useLoading();\n\n  return (\n    <div>\n      <Typography.Paragraph>\n        <CircleHighlight color=\"blue\">\n          <Translate en=\"Attribute\" pt=\"Atributo\" />\n        </CircleHighlight>\n        {solutions.attribute.text}\n        {!!setAttribute && (\n          <>\n            {' '}\n            <YesNoSwitch\n              loading={isLoading}\n              checked={!!attribute}\n              onChange={(checked) => setAttribute(checked ? 'A' : '')}\n            />\n          </>\n        )}\n      </Typography.Paragraph>\n      <Divider />\n      <Typography.Paragraph>\n        <CircleHighlight color=\"gold\">\n          <Translate en=\"Word\" pt=\"Palavra\" />\n        </CircleHighlight>\n        {solutions.word.text}\n\n        {!!setWord && (\n          <>\n            {' '}\n            <YesNoSwitch\n              loading={isLoading}\n              checked={!!word}\n              onChange={(checked) => setWord(checked ? 'W' : '')}\n            />\n          </>\n        )}\n      </Typography.Paragraph>\n      {showHints && itemName && <Hints word={itemName} />}\n      {solutions.context && (\n        <>\n          <Divider />\n          <Typography.Paragraph>\n            <CircleHighlight color=\"red\">\n              <Translate en=\"Context\" pt=\"Contexto\" />\n            </CircleHighlight>\n            {solutions.context.text}\n            {!!setContext && (\n              <>\n                {' '}\n                <YesNoSwitch\n                  loading={isLoading}\n                  checked={!!context}\n                  onChange={(checked) => setContext(checked ? 'C' : '')}\n                />\n              </>\n            )}\n          </Typography.Paragraph>\n        </>\n      )}\n    </div>\n  );\n}\n\nfunction Hints({ word }: { word: string }) {\n  const hintsObj = useMemo(() => countWordProperties(word), [word]);\n\n  const getCheckIcon = (value: boolean) => (value ? '✅' : '❌');\n\n  const hints = [\n    <>\n      <Translate en=\"Letters\" pt=\"Letras\" />: {hintsObj.letters}\n    </>,\n\n    <>\n      <Translate en=\"Vowels\" pt=\"Vogais\" />: {hintsObj.vowels}\n    </>,\n    <>\n      <Translate en=\"Consonants\" pt=\"Consoantes\" />: {hintsObj.consonants}\n    </>,\n    <>\n      <Translate en=\"Number of words\" pt=\"Número de palavras\" />: {hintsObj.numberOfWords}\n    </>,\n    <>\n      <Translate en=\"Repeated vowels\" pt=\"Repetição de vogais\" />: {getCheckIcon(hintsObj.hasRepeatedVowels)}\n    </>,\n    <>\n      <Translate en=\"Repeated consonants\" pt=\"Repetição de consoantes\" />:{' '}\n      {getCheckIcon(hintsObj.hasRepeatedConsonants)}\n    </>,\n    <>\n      <Translate en=\"Consecutive vowels\" pt=\"Vogais consecutivas\" />: {hintsObj.consecutiveVowels}\n    </>,\n    <>\n      <Translate en=\"Consecutive consonants\" pt=\"Consoantes consecutivas\" />: {hintsObj.consecutiveConsonants}\n    </>,\n    <>\n      <Translate en=\"Hyphen\" pt=\"Hífen\" />: {getCheckIcon(hintsObj.hasHyphen)}\n    </>,\n    <>\n      <Translate en=\"Accents\" pt=\"Acentos\" />: {getCheckIcon(hintsObj.hasAccents)}\n    </>,\n  ];\n\n  return (\n    <Flex wrap=\"wrap\" gap={8} className=\"venn-word-hints\">\n      {hints.map((hint, index) => (\n        <div key={index}>{hint}</div>\n      ))}\n    </Flex>\n  );\n}\n","import { stringRemoveAccents } from 'utils/helpers';\n\nexport function countWordProperties(word: string): {\n  letters: number;\n  vowels: number;\n  consonants: number;\n  hasRepeatedVowels: boolean;\n  hasRepeatedConsonants: boolean;\n  consecutiveVowels: number;\n  consecutiveConsonants: number;\n  hasHyphen: boolean;\n  numberOfWords: number;\n  hasAccents: boolean;\n} {\n  const vowels = 'aeiou';\n  const consonants = 'bcdfghjklmnpqrstvwxyz';\n  const accents = /[áéíóúãẽĩõũâêîôûàèìòùäëïöü]/;\n  const cleanupWord = stringRemoveAccents(word.toLowerCase());\n\n  let letters = 0,\n    vowelsCount = 0,\n    consonantsCount = 0,\n    hasRepeatedVowels = false,\n    hasRepeatedConsonants = false,\n    maxConsecutiveVowels = 0,\n    maxConsecutiveConsonants = 0,\n    hasHyphen = word.includes('-'),\n    numberOfWords = word.split(' ').length,\n    hasAccents = accents.test(word);\n\n  let consecutiveVowels = 0,\n    consecutiveConsonants = 0;\n\n  for (let i = 0; i < cleanupWord.length; i++) {\n    let char = cleanupWord[i];\n    if (/[a-zA-Z]/.test(char)) {\n      letters++;\n      if (vowels.includes(char)) {\n        vowelsCount++;\n        consecutiveVowels++;\n        consecutiveConsonants = 0;\n      } else if (consonants.includes(char)) {\n        consonantsCount++;\n        consecutiveConsonants++;\n        consecutiveVowels = 0;\n      }\n    }\n    if (consecutiveVowels > maxConsecutiveVowels) {\n      maxConsecutiveVowels = consecutiveVowels;\n    }\n    if (consecutiveConsonants > maxConsecutiveConsonants) {\n      maxConsecutiveConsonants = consecutiveConsonants;\n    }\n  }\n\n  const vowelsDict: Dictionary<boolean> = {};\n  const consonantsDict: Dictionary<boolean> = {};\n  for (let i = 0; i < cleanupWord.length; i++) {\n    let char = cleanupWord[i];\n    if (/[a-zA-Z]/.test(char)) {\n      if (vowels.includes(char)) {\n        if (vowelsDict[char]) {\n          hasRepeatedVowels = true;\n        } else {\n          vowelsDict[char] = true;\n        }\n      } else if (consonants.includes(char)) {\n        if (consonantsDict[char]) {\n          hasRepeatedConsonants = true;\n        } else {\n          consonantsDict[char] = true;\n        }\n      }\n    }\n  }\n\n  return {\n    letters,\n    vowels: vowelsCount,\n    consonants: consonantsCount,\n    hasRepeatedVowels,\n    hasRepeatedConsonants,\n    consecutiveVowels: maxConsecutiveVowels > 1 ? maxConsecutiveVowels : 0,\n    consecutiveConsonants: maxConsecutiveConsonants > 1 ? maxConsecutiveConsonants : 0,\n    hasHyphen,\n    numberOfWords,\n    hasAccents,\n  };\n}\n","// Types\nimport type { GamePlayers, GamePlayer } from 'types/player';\n// Hooks\nimport { AvatarName, IconAvatar } from 'components/avatars';\nimport { Container } from 'components/general/Container';\nimport { Translate } from 'components/language';\nimport { TurnOrder } from 'components/players';\n// Components\nimport { Step, StepProps } from 'components/steps';\nimport { RuleInstruction, Title } from 'components/text';\nimport { useCardWidthByContainerRef } from 'hooks/useCardWidth';\nimport { AnimatedClockIcon } from 'icons/AnimatedClockIcon';\nimport { Item } from 'types/tdr';\n\nimport { DiagramRules } from './components/RulesBlobs';\nimport { DiagramArea, DiagramExamples, Solutions } from './utils/types';\nimport { MyThings } from './components/MyThings';\nimport { Solution } from './components/Solution';\nimport { DiagramSection } from './components/DiagramSection';\n\ntype StepWaitPlaceItemProps = {\n  players: GamePlayers;\n  user: GamePlayer;\n  examples: DiagramExamples;\n  diagrams: Dictionary<DiagramArea>;\n  items: Dictionary<Item>;\n  turnOrder: GameOrder;\n  activePlayer: GamePlayer;\n  isJudge: boolean;\n  solutions: Solutions;\n} & Pick<StepProps, 'announcement'>;\n\nexport function StepWaitPlaceItem({\n  players,\n  user,\n  announcement,\n  examples,\n  diagrams,\n  items,\n  turnOrder,\n  activePlayer,\n  isJudge,\n  solutions,\n}: StepWaitPlaceItemProps) {\n  const [width, ref] = useCardWidthByContainerRef(2, { maxWidth: 1000 });\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <div ref={ref} style={{ width: '100%' }} />\n      <Title>\n        <Translate\n          pt={\n            <>\n              <AvatarName player={activePlayer} /> vai posicionar uma coisa\n            </>\n          }\n          en={\n            <>\n              <AvatarName player={activePlayer} /> will place an item\n            </>\n          }\n        />{' '}\n        <IconAvatar icon={<AnimatedClockIcon />} />\n      </Title>\n\n      <RuleInstruction type=\"rule\">\n        <DiagramRules examples={examples} />\n      </RuleInstruction>\n\n      <DiagramSection width={width} diagrams={diagrams} items={items} />\n\n      {!isJudge && <MyThings hand={user.hand ?? []} items={items} />}\n\n      {isJudge && (\n        <Container\n          contained\n          title={<Translate pt=\"As Regras Secretas\" en=\"The Secret Rules\" />}\n          contentProps={{ direction: 'vertical' }}\n        >\n          <Translate\n            pt=\"Essas são aas regras secretas de cada círculo, não fale elas com ninguém.\"\n            en=\"These are the secret rules of each circle, don't tell them to anyone.\"\n          />\n\n          <Solution solutions={solutions} />\n        </Container>\n      )}\n\n      <TurnOrder players={players} order={turnOrder} activePlayerId={activePlayer.id} />\n    </Step>\n  );\n}\n","// Types\nimport type { PhaseProps } from 'types/game';\n// State & Hooks\nimport { useStep } from 'hooks/useStep';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\nimport { useOnSubmitItemPlacementAPIRequest } from './utils/api-requests';\n// Icons\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { PhaseContainer } from 'components/phases';\nimport { Guess } from './utils/types';\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\nimport { Announcement } from './components/Announcement';\nimport { StepPlaceItem } from './StepPlaceItem';\nimport { useUser } from 'hooks/useUser';\nimport { ViewOr } from 'components/views';\nimport { StepWaitPlaceItem } from './StepWaitPlaceItem';\n\nexport function PhaseItemPlacement({ players, state, info }: PhaseProps) {\n  const { step, setStep } = useStep();\n  const user = useUser(players, state);\n  const [, isTheJudge] = useWhichPlayerIsThe('judgeId', state, players);\n  const [activePlayer, isTheActivePlayer] = useWhichPlayerIsThe('activePlayerId', state, players);\n  const [previousActivePlayer] = useWhichPlayerIsThe('previousActivePlayerId', state, players);\n\n  const onSubmitItemPlacement = useOnSubmitItemPlacementAPIRequest(setStep);\n\n  const previousGuess: Guess | null = state.previousGuess;\n\n  const announcement = (\n    <Announcement\n      activePlayer={activePlayer}\n      previousGuess={previousGuess}\n      currentRound={state.round.current}\n      items={state.items}\n      isTheActivePlayer={isTheActivePlayer}\n      previousActivePlayer={previousActivePlayer}\n    />\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.TEORIA_DE_CONJUNTOS.ITEM_PLACEMENT}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <ViewOr condition={isTheActivePlayer}>\n          <StepPlaceItem\n            players={players}\n            user={user}\n            examples={state.examples}\n            diagrams={state.diagrams}\n            items={state.items}\n            turnOrder={state.turnOrder}\n            activePlayer={activePlayer}\n            onSubmitItemPlacement={onSubmitItemPlacement}\n            announcement={announcement}\n          />\n\n          <StepWaitPlaceItem\n            players={players}\n            user={user}\n            examples={state.examples}\n            diagrams={state.diagrams}\n            items={state.items}\n            turnOrder={state.turnOrder}\n            activePlayer={activePlayer}\n            announcement={announcement}\n            isJudge={isTheJudge}\n            solutions={state.solutions}\n          />\n        </ViewOr>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","import { Button, Divider, Flex, Modal, Typography } from 'antd';\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { Translate } from 'components/language';\nimport { useState } from 'react';\nimport { Item } from 'types/tdr';\n\nimport { Solutions } from '../utils/types';\nimport { Solution } from './Solution';\nimport { useLanguage } from 'hooks/useLanguage';\n\ntype EvaluationModalProps = {\n  item: Item;\n  onSubmitEvaluation: (evaluation: string) => void;\n  solutions: Solutions;\n};\n\nexport function EvaluationModal({ item, onSubmitEvaluation, solutions }: EvaluationModalProps) {\n  const [areaA, setA] = useState('');\n  const [areaC, setC] = useState('');\n  const [areaW, setW] = useState('');\n  const { dualTranslate } = useLanguage();\n\n  const evaluation = [areaA, areaW, areaC].join('') || 'O';\n\n  return (\n    <Modal\n      title={<Translate en=\"Evaluate the item\" pt=\"Avalie o item\" />}\n      open\n      footer={null}\n      closable={false}\n    >\n      <Typography.Paragraph>\n        Para cada uma das áreas do diagrama, avalie se o item se encaixa ou não.\n      </Typography.Paragraph>\n\n      <Flex justify=\"center\">\n        <ItemCard id={item.id} text={item.name} width={120} />\n      </Flex>\n\n      <Divider />\n\n      <Solution\n        solutions={solutions}\n        attribute={areaA}\n        word={areaW}\n        context={areaC}\n        setAttribute={setA}\n        setWord={setW}\n        setContext={setC}\n        itemName={dualTranslate(item.name)}\n        showHints\n      />\n\n      <Divider />\n\n      <Flex justify=\"center\">\n        <Button type=\"primary\" onClick={() => onSubmitEvaluation(evaluation)}>\n          <Translate en=\"Submit\" pt=\"Enviar\" />\n        </Button>\n      </Flex>\n    </Modal>\n  );\n}\n","import { Flex } from 'antd';\nimport { AvatarCard, IconAvatar } from 'components/avatars';\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { SpeechBubble } from 'components/text/SpeechBubble';\nimport { ArrowIcon } from 'icons/ArrowIcon';\nimport { Item } from 'types/tdr';\nimport { Guess } from '../utils/types';\nimport { GamePlayer } from 'types/player';\nimport { SelectedAreasCircles } from './SelectedAreasCircles';\n\ntype PlayerGuessProps = {\n  item: Item;\n  currentGuess: Guess;\n  activePlayer: GamePlayer;\n};\n\nexport function PlayerGuess({ item, currentGuess, activePlayer }: PlayerGuessProps) {\n  return (\n    <Flex justify=\"center\">\n      <AvatarCard player={activePlayer} withName addressUser withRoundCorners />\n      <SpeechBubble shadow size=\"medium\">\n        <Flex gap={6} justify=\"center\" align=\"center\" style={{ height: '100%' }} className=\"contained\">\n          <ItemCard id={item.id} text={item.name} width={75} className=\"q-player-guess-bubble\" />{' '}\n          <IconAvatar icon={<ArrowIcon />} size=\"small\" />\n          <SelectedAreasCircles selectedArea={currentGuess.suggestedArea} size={50} />\n        </Flex>\n      </SpeechBubble>\n    </Flex>\n  );\n}\n","// Types\nimport type { GamePlayers, GamePlayer } from 'types/player';\n// Hooks\n// Components\nimport { Step, type StepProps } from 'components/steps';\nimport { RuleInstruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { DiagramRules, EvaluationRules } from './components/RulesBlobs';\nimport { DiagramArea, DiagramExamples, Guess, Solutions, SubmitEvaluationPayload } from './utils/types';\nimport { Item } from 'types/tdr';\nimport { useCardWidthByContainerRef } from 'hooks/useCardWidth';\nimport { TurnOrder } from 'components/players';\nimport { AvatarName, IconAvatar } from 'components/avatars';\nimport { AnimatedClockIcon } from 'icons/AnimatedClockIcon';\nimport { MyThings } from './components/MyThings';\nimport { EvaluationModal } from './components/EvaluationModal';\nimport { DiagramSection } from './components/DiagramSection';\nimport { PlayerGuess } from './components/PlayerGuess';\n\ntype StepEvaluateProps = {\n  players: GamePlayers;\n  user: GamePlayer;\n  examples: DiagramExamples;\n  diagrams: Dictionary<DiagramArea>;\n  items: Dictionary<Item>;\n  turnOrder: GameOrder;\n  activePlayer: GamePlayer;\n  judge: GamePlayer;\n  isJudge: boolean;\n  onSubmitEvaluation: (payload: SubmitEvaluationPayload) => void;\n  currentGuess: Guess;\n  solutions: Solutions;\n} & Pick<StepProps, 'announcement'>;\n\nexport function StepEvaluate({\n  players,\n  user,\n  announcement,\n  examples,\n  diagrams,\n  items,\n  turnOrder,\n  activePlayer,\n  judge,\n  isJudge,\n  onSubmitEvaluation,\n  solutions,\n  currentGuess,\n}: StepEvaluateProps) {\n  const [width, ref] = useCardWidthByContainerRef(2, { maxWidth: 1000 });\n\n  const item = items[currentGuess.itemId];\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <div ref={ref} style={{ width: '100%' }} />\n      <Title>\n        <Translate\n          pt={\n            <>\n              <AvatarName player={judge} /> está avaliando a posição do item\n            </>\n          }\n          en={\n            <>\n              <AvatarName player={judge} /> is evaluating the item's position\n            </>\n          }\n        />{' '}\n        <IconAvatar icon={<AnimatedClockIcon />} />\n      </Title>\n\n      <RuleInstruction type=\"rule\">\n        <DiagramRules examples={examples} />\n      </RuleInstruction>\n\n      {isJudge ? (\n        <EvaluationModal\n          item={item}\n          onSubmitEvaluation={(evaluation) => onSubmitEvaluation({ evaluation })}\n          solutions={solutions}\n        />\n      ) : (\n        <PlayerGuess item={item} currentGuess={currentGuess} activePlayer={activePlayer} />\n      )}\n\n      <DiagramSection\n        width={width}\n        diagrams={diagrams}\n        items={items}\n        currentItem={!isJudge ? item : undefined}\n      />\n\n      <RuleInstruction type=\"wait\">\n        <EvaluationRules />\n      </RuleInstruction>\n\n      {!isJudge && <MyThings hand={user.hand ?? []} items={items} />}\n\n      <TurnOrder players={players} order={turnOrder} activePlayerId={activePlayer.id} />\n    </Step>\n  );\n}\n","// Types\nimport type { PhaseProps } from 'types/game';\n// State & Hooks\nimport { useStep } from 'hooks/useStep';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\nimport { useOnSubmitEvaluationAPIRequest } from './utils/api-requests';\n// Icons\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { PhaseContainer } from 'components/phases';\nimport { Guess } from './utils/types';\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\nimport { useUser } from 'hooks/useUser';\nimport { StepEvaluate } from './StepEvaluate';\n\nexport function PhaseEvaluation({ players, state, info }: PhaseProps) {\n  const { step, setStep } = useStep();\n  const user = useUser(players, state);\n  const [judge, isTheJudge] = useWhichPlayerIsThe('judgeId', state, players);\n  const [activePlayer] = useWhichPlayerIsThe('activePlayerId', state, players);\n\n  const onSubmitEvaluation = useOnSubmitEvaluationAPIRequest(setStep);\n\n  const currentGuess: Guess = state.currentGuess;\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.TEORIA_DE_CONJUNTOS.EVALUATION}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepEvaluate\n          players={players}\n          user={user}\n          examples={state.examples}\n          diagrams={state.diagrams}\n          items={state.items}\n          turnOrder={state.turnOrder}\n          activePlayer={activePlayer}\n          onSubmitEvaluation={onSubmitEvaluation}\n          judge={judge}\n          isJudge={isTheJudge}\n          currentGuess={currentGuess}\n          solutions={state.solutions}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","import { AchievementReference } from 'types/achievements';\n\nexport const ACHIEVEMENTS = {\n  MOST_ATTRIBUTE_CIRCLE: 'MOST_ATTRIBUTE_CIRCLE',\n  MOST_WORD_CIRCLE: 'MOST_WORD_CIRCLE',\n  MOST_CONTEXT_CIRCLE: 'MOST_CONTEXT_CIRCLE',\n  MOST_OUTSIDE: 'MOST_OUTSIDE',\n  MOST_INTERSECTIONS: 'MOST_INTERSECTIONS',\n  THE_JUDGE: 'THE_JUDGE',\n  MOST_WRONG: 'MOST_WRONG',\n};\n\nexport const achievementsReference: AchievementReference = {\n  [ACHIEVEMENTS.MOST_ATTRIBUTE_CIRCLE]: {\n    icon: 'check-mark',\n    title: {\n      pt: 'Mais Atributos',\n      en: 'Most Attributes',\n    },\n    description: {\n      pt: 'Posicionou coisas no círculo azul (atributo) mais vezes',\n      en: 'Placed things in the blue circle (attribute) the most',\n    },\n  },\n  [ACHIEVEMENTS.MOST_WORD_CIRCLE]: {\n    icon: 'people',\n    title: {\n      pt: 'Mais Palavras',\n      en: 'Most Words',\n    },\n    description: {\n      pt: 'Posicionou coisas no círculo amarelo (palavra) mais vezes',\n      en: 'Placed things in the yellow circle (word) the most',\n    },\n  },\n  [ACHIEVEMENTS.MOST_CONTEXT_CIRCLE]: {\n    icon: 'arrow-wide',\n    title: {\n      pt: 'Mais Contextos',\n      en: 'Most Contexts',\n    },\n    description: {\n      pt: 'Posicionou coisas no círculo verde (contexto) mais vezes',\n      en: 'Placed things in the green circle (context) the most',\n    },\n  },\n  [ACHIEVEMENTS.MOST_OUTSIDE]: {\n    icon: 'target',\n    title: {\n      pt: 'Mais Fora',\n      en: 'Most Outside',\n    },\n    description: {\n      pt: 'Posicionou coisas fora dos círculos mais vezes',\n      en: 'Placed things outside the circles the most',\n    },\n  },\n  [ACHIEVEMENTS.MOST_INTERSECTIONS]: {\n    icon: 'brain',\n    title: {\n      pt: 'Mais Interseções',\n      en: 'Most Intersections',\n    },\n    description: {\n      pt: 'Posicionou coisas em interseções mais vezes',\n      en: 'Placed things in intersections the most',\n    },\n  },\n  [ACHIEVEMENTS.THE_JUDGE]: {\n    icon: 'brain',\n    title: {\n      pt: 'O Juiz',\n      en: 'The Judge',\n    },\n    description: {\n      pt: 'Foi o juiz',\n      en: 'Was the judge',\n    },\n  },\n  [ACHIEVEMENTS.MOST_WRONG]: {\n    icon: 'face-embarrassed',\n    title: {\n      pt: 'Mais Errado',\n      en: 'Most Wrong',\n    },\n    description: {\n      pt: 'Posicionou coisas erradas mais vezes',\n      en: 'Placed things wrong the most',\n    },\n  },\n};\n\nexport default achievementsReference;\n","// Types\nimport type { PhaseProps } from 'types/game';\n// import type { MesmiceGalleryEntry } from './utils/types';\n// Utils\nimport { achievementsReference } from './utils/achievements';\n// Icons\nimport { CrownIcon } from 'icons/CrownIcon';\n// Components\nimport { GameOverWrapper } from 'components/game-over';\nimport { Achievements } from 'components/general/Achievements';\nimport { Container } from 'components/general/Container';\nimport { Translate } from 'components/language';\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\nimport { DiagramSection } from './components/DiagramSection';\nimport { useCardWidthByContainerRef } from 'hooks/useCardWidth';\nimport { Solution } from './components/Solution';\nimport { MyThings } from './components/MyThings';\nimport { useUser } from 'hooks/useUser';\n\nexport function PhaseGameOver({ state, info, players }: PhaseProps) {\n  const user = useUser(players, state);\n  const [, isTheJudge] = useWhichPlayerIsThe('judgeId', state, players);\n  const [width, ref] = useCardWidthByContainerRef(2, { maxWidth: 1000 });\n\n  return (\n    <GameOverWrapper info={info} state={state} players={players} announcementIcon={<CrownIcon />}>\n      <div ref={ref} style={{ width: '100%' }} />\n      <Achievements players={players} achievements={state.achievements} reference={achievementsReference} />\n\n      <DiagramSection width={width} diagrams={state.diagrams} items={state.items} />\n\n      <Container\n        contained\n        title={<Translate pt=\"As Regras Secretas\" en=\"The Secret Rules\" />}\n        contentProps={{ direction: 'vertical' }}\n      >\n        <Solution solutions={state.solutions} />\n      </Container>\n\n      {!isTheJudge && user.hand && <MyThings hand={user.hand ?? []} items={state.items ?? {}} />}\n    </GameOverWrapper>\n  );\n}\n","import { ConfigProvider } from 'antd';\n// Types\nimport type { GameState } from 'types/game';\n// Constants\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport { LoadingPage } from 'components/loaders';\nimport { PhaseJudgeSelection } from './PhaseJudgeSelection';\nimport { PhaseItemPlacement } from './PhaseItemPlacement';\nimport { PhaseEvaluation } from './PhaseEvaluation';\nimport { PhaseGameOver } from './PhaseGameOver';\n// Sass\nimport './utils/styles.scss';\n\nfunction getActiveComponent(state: GameState) {\n  // If phase is not defined, it is likely that the game is still loading\n  if (state && !state.phase) return LoadingPage;\n\n  switch (state.phase) {\n    case PHASES.DEFAULT.LOBBY:\n      return PhaseLobby;\n    case PHASES.DEFAULT.RULES:\n      return PhaseRules;\n    case PHASES.DEFAULT.SETUP:\n      return PhaseSetup;\n    case PHASES.TEORIA_DE_CONJUNTOS.JUDGE_SELECTION:\n      return PhaseJudgeSelection;\n    case PHASES.TEORIA_DE_CONJUNTOS.ITEM_PLACEMENT:\n      return PhaseItemPlacement;\n    case PHASES.TEORIA_DE_CONJUNTOS.EVALUATION:\n      return PhaseEvaluation;\n    case PHASES.DEFAULT.GAME_OVER:\n      return PhaseGameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionTeoriaDeConjuntos() {\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorPrimary: THEME_COLORS.DEFAULT,\n          colorLink: THEME_COLORS.DEFAULT,\n        },\n      }}\n    >\n      <Session gameCollection={GAME_COLLECTION.TEORIA_DE_CONJUNTOS} getActiveComponent={getActiveComponent} />\n    </ConfigProvider>\n  );\n}\n\nexport default SessionTeoriaDeConjuntos;\n","import { useEffect, useState } from 'react';\n// Types\nimport type { GamePlayers, GamePlayer } from 'types/player';\n// Hooks\nimport { useGlobalState } from './useGlobalState';\n// Utils\nimport { PLACEHOLDER_PLAYER } from 'utils/constants';\n\n/**\n * Gets player that is assigned to a property in the state\n * @param propertyName\n * @param state\n * @param players\n * @returns a player instance, a boolean if the player is assigned to given property\n */\nexport function useWhichPlayerIsThe(\n  propertyName = 'activePlayer',\n  state: PlainObject = {},\n  players: GamePlayers = {}\n): [GamePlayer, boolean] {\n  const [userId] = useGlobalState('userId');\n  const [activePlayer, setActivePlayer] = useState<GamePlayer>(PLACEHOLDER_PLAYER);\n  const [isUser, setIsUser] = useState(false);\n\n  // Determine if user is active as the guesser, the clue giver, the psychic, the storyteller, etc\n  useEffect(() => {\n    const activePlayer = state?.[propertyName];\n    setActivePlayer(players?.[activePlayer] ?? {});\n    setIsUser(state?.[propertyName] === userId);\n  }, [players, propertyName, state, userId]);\n\n  return [activePlayer, isUser];\n}\n","export function ArrowIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#f5f5f5\"\n        d=\"M318.4 412.8c-24 0-43.3-19.3-43.3-43.3v-12H52.7c-25 0-45.2-20.1-45.2-45v-113c0-24.9 20.2-45 45.2-45H275v-12a43.4 43.4 0 0 1 70.2-34l142.8 113.6a43 43 0 0 1 0 67.8L345.3 403.4c-7.6 6.1-17.2 9.4-26.9 9.4z\"\n      />\n      <path\n        fill=\"#fddf7c\"\n        d=\"M464.3 252.1 321.5 138.6a5 5 0 0 0-8 3.9v45.3a5 5 0 0 1-5 5H59.6c-7.6 0-13.8 6.1-13.8 13.7v99c0 7.6 6.2 13.7 13.8 13.7h248.9a5 5 0 0 1 5 5v45.3a5 5 0 0 0 8 4l142.8-113.6a5 5 0 0 0 0-7.8z\"\n      />\n      <path\n        fill=\"#ebe5ed\"\n        d=\"M488.1 222.1 345.3 108.6a43.4 43.4 0 0 0-42-6.8c4.4 1.6 8.4 3.9 12 6.8L458.1 222a43 43 0 0 1 0 67.8L315.3 403.4a43.4 43.4 0 0 1-12 6.8 43.4 43.4 0 0 0 42-6.7l142.8-113.6a43 43 0 0 0 0-67.8z\"\n      />\n      <path\n        fill=\"#fcce63\"\n        d=\"M464.3 252.1 321.5 138.6a5 5 0 0 0-8 3.9V156l120.8 96.1a5 5 0 0 1 0 7.8l-120.9 96v13.6a5 5 0 0 0 8 4l142.9-113.6a5 5 0 0 0 0-7.8z\"\n      />\n      <path d=\"M318.4 420.3c-28 0-50.8-22.8-50.8-50.8v-4.4H208a7.5 7.5 0 1 1 0-15h67c4.1 0 7.5 3.3 7.5 7.5v12a35.9 35.9 0 0 0 58 28L483.6 284a35.6 35.6 0 0 0 0-56L340.7 114.4a36 36 0 0 0-58.1 28v12c0 4.2-3.4 7.5-7.5 7.5H52.7A37.7 37.7 0 0 0 15 199.6v112.8a37.7 37.7 0 0 0 37.7 37.7H178a7.5 7.5 0 1 1 0 15H52.7C23.7 365 0 341.5 0 312.4V199.6c0-29 23.6-52.7 52.7-52.7h214.9v-4.4a50.9 50.9 0 0 1 82.4-39.8l142.8 113.5a50.5 50.5 0 0 1 0 79.6L350 409.3a51 51 0 0 1-31.6 11z\" />\n      <path d=\"M318.4 382a12.5 12.5 0 0 1-12.5-12.5v-42.8H59.6a21.3 21.3 0 0 1-21.3-21.2v-99c0-11.7 9.6-21.2 21.3-21.2h51.7a7.5 7.5 0 1 1 0 15H59.6a6.3 6.3 0 0 0-6.3 6.2v99c0 3.4 2.9 6.2 6.3 6.2h248.9c6.8 0 12.4 5.6 12.4 12.5v40L457.1 256 321 147.7v40c0 7-5.6 12.6-12.4 12.6H141.3a7.5 7.5 0 1 1 0-15h164.6v-42.8a12.4 12.4 0 0 1 20.2-9.8L469 246.2a12.4 12.4 0 0 1 0 19.6L326 379.3c-2.2 1.8-5 2.7-7.7 2.7z\" />\n    </svg>\n  );\n}\n","export function CheckMarkIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#a5eb78\"\n        d=\"M427.53 73.08L203.03 297.6a15.5 15.5 0 01-21.92 0l-96.64-96.64L8.1 277.3l145.78 145.8a54 54 0 0076.37 0L503.9 149.45l-76.37-76.37z\"\n      ></path>\n      <path\n        d=\"M478.65 124.2l-288.9 288.89a59.103 59.103 0 01-28.9 15.87 54 54 0 0069.4-5.86L503.9 149.45l-25.25-25.25z\"\n        opacity=\"0.1\"\n      ></path>\n      <path d=\"M192.07 447.01a61.7 61.7 0 01-43.91-18.18L2.37 283.03a8.1 8.1 0 010-11.45l76.37-76.37a8.1 8.1 0 0111.45 0l28.67 28.67a8.1 8.1 0 11-11.45 11.45L84.47 212.4l-64.91 64.91L159.6 417.37a45.6 45.6 0 0032.46 13.44 45.6 45.6 0 0032.46-13.44l186.95-186.95a8.1 8.1 0 1111.45 11.45L235.98 428.83A61.7 61.7 0 01192.07 447z\"></path>\n      <path d=\"M192.07 310.23c-6.3 0-12.23-2.45-16.69-6.9l-45.06-45.08a8.1 8.1 0 1111.45-11.45l45.07 45.07c1.4 1.4 3.25 2.16 5.23 2.16s3.83-.77 5.23-2.16L421.8 67.36a8.1 8.1 0 0111.46 0l76.37 76.36a8.1 8.1 0 010 11.46l-63.79 63.78a8.1 8.1 0 01-11.45-11.45l58.06-58.06-64.91-64.91-218.79 218.78a23.45 23.45 0 01-16.68 6.91z\"></path>\n    </svg>\n  );\n}\n","export function CircleIcon({\n  mainColor,\n  ...props\n}: React.SVGProps<SVGSVGElement> & { mainColor?: string }): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill={mainColor ?? '#e0230d'}\n        d=\"M256 7.5v45c112.39 0 203.5 91.11 203.5 203.5S368.39 459.5 256 459.5v45c137.24 0 248.5-111.26 248.5-248.5S393.24 7.5 256 7.5z\"\n      ></path>\n      <path\n        d=\"M256 7.5v45c112.39 0 203.5 91.11 203.5 203.5S368.39 459.5 256 459.5v45c137.24 0 248.5-111.26 248.5-248.5S393.24 7.5 256 7.5z\"\n        opacity=\".25\"\n      ></path>\n      <path\n        fill={mainColor ?? '#e0230d'}\n        d=\"M256 7.5C118.76 7.5 7.5 118.76 7.5 256S118.76 504.5 256 504.5c120.67 0 218.5-111.26 218.5-248.5S376.67 7.5 256 7.5zm0 437c-104.1 0-188.5-84.4-188.5-188.5S151.9 67.5 256 67.5 444.5 151.9 444.5 256 360.1 444.5 256 444.5z\"\n      ></path>\n      <path d=\"M437.02 74.98C388.67 26.63 324.38 0 256 0S123.33 26.63 74.98 74.98 0 187.62 0 256s26.63 132.67 74.98 181.02S187.62 512 256 512s132.67-26.63 181.02-74.98S512 324.38 512 256s-26.63-132.67-74.98-181.02zM256 497C123.11 497 15 388.89 15 256S123.11 15 256 15s241 108.11 241 241-108.11 241-241 241z\"></path>\n      <path d=\"M256 60a196.04 196.04 0 00-127.12 46.83 7.5 7.5 0 009.73 11.4A181.04 181.04 0 01256 75c99.8 0 181 81.2 181 181s-81.2 181-181 181S75 355.8 75 256c0-43 15.36-84.7 43.24-117.39a7.5 7.5 0 10-11.41-9.73A196.04 196.04 0 0060 256c0 108.08 87.92 196 196 196s196-87.92 196-196S364.07 60 256 60z\"></path>\n    </svg>\n  );\n}\n","export function DiagramIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fee45a\"\n        d=\"M362.5 193.75c0 79.4-52.14 146.63-124.05 169.31-16.87 5.32-32.61.7-51.24.7-98.03 0-167.49-71.98-167.49-170.01 0-49.15 9.04-93.03 41.32-125.18C67.34 62.3 80 50.63 80 50.63a176.71 176.71 0 01105-34.38c98.03 0 177.5 79.47 177.5 177.5z\"\n      ></path>\n      <path\n        fill=\"#ffd15b\"\n        d=\"M312.52 317.22A176.99 176.99 0 01185 371.25c-98.03 0-177.5-79.47-177.5-177.5 0-58.95 28.74-111.19 72.98-143.47A176.92 176.92 0 0030.5 173.75c0 98.03 79.47 177.5 177.5 177.5 39.08 0 75.21-12.63 104.52-34.03z\"\n      ></path>\n      <path\n        fill=\"#6cabca\"\n        d=\"M504.5 288.25c0 30.1-9.67 57.94-26.07 80.58 0 0-1.04 1.27-2.55 2.52-7.86 6.54-33.55 27-51.1 35.35-17.89 8.53-36.63 13.71-57.78 13.71-75.94 0-129.06-57.45-129.06-133.39 0-70.77 48.78-123.7 117.1-131.25 1.86-.2 2.3-4.69 2.3-4.69 3.19-.22 6.41-.33 9.66-.33 75.94 0 137.5 61.56 137.5 137.5z\"\n      ></path>\n      <path\n        fill=\"#3b98bc\"\n        d=\"M388 402.75c-23.87 0-46.32-6.09-65.89-16.79-3.35 9.38-8.34 18.1-12.83 27.12A136.97 136.97 0 00367 425.75c45.84 0 86.44-22.43 111.43-56.92A137 137 0 01388 402.75z\"\n      ></path>\n      <path\n        fill=\"#fe7c66\"\n        d=\"M326.38 400.75c0 6.56 3.96 12.96 2.69 19.15a94.56 94.56 0 01-16.64 37.28c-14.28 12.33-23.85 19.25-38.4 26-12.13 5.6-23.79 5.6-38.03 5.6-52.47 0-88.9-35.56-88.9-88.03s36.43-88 88.9-88 90.38 35.53 90.38 88z\"\n      ></path>\n      <path\n        fill=\"#fe6c55\"\n        d=\"M312.43 457.18A95 95 0 01141 400.75c0-11.75 2.13-23 6.03-33.4 0 0 17.4-16.52 15.04-.9A95 95 0 00256 475.75c21.14 0 40.65-6.9 56.43-18.57z\"\n      ></path>\n      <path\n        fill=\"#757575\"\n        d=\"M299.09 329.73c-5.4 10.08-12.13 15.37-20.09 20.16-8.63 5.2-18.51 9.38-29.76 9.38-8.15-6.95-15.4-17.73-18.62-27.38-2.79-8.33-2.05-16.97 0-25.99 1.78-.1 5.5-3.37 7.32-3.37 24.22 0 55.04 10.22 61.15 27.2z\"\n      ></path>\n      <path\n        fill=\"#fe6c55\"\n        d=\"M331 400.75c0 6.74-.7 13.32-2.04 19.66a136.7 136.7 0 01-27.38-11.2c-2.6-1.4-2.22-5.03-4.7-6.6-2.12-1.32-7.12-.56-9.16-2a138.04 138.04 0 01-12.25-9.74c-2.03-1.81.85-5.6-1.07-7.53-1.66-1.67-8.14-1.47-9.71-3.23a137.75 137.75 0 01-15.45-20.84 177.33 177.33 0 0049.85-29.54 95.4 95.4 0 0114.47 16.15c1.42 2-1.35 6.12-.1 8.23 1.32 2.2 6.67 2.39 7.8 4.7a94.24 94.24 0 015.67 14.34c.72 2.37-1.08 6.98-.55 9.42.63 2.87 3.55 3.58 3.91 6.54.47 3.81.71 7.7.71 11.64z\"\n      ></path>\n      <path\n        fill=\"#b4e555\"\n        d=\"M362.5 193.75c0 1.95-.04 3.89-.1 5.82-.13 4-3.22 2.9-3.61 6.83-.28 2.84 2.2 10.73 1.8 13.52a176.35 176.35 0 01-4.2 20.13c-.9 3.39-3.77 2.24-4.88 5.55-.72 2.16.37 8.8-.44 10.92-2.15 5.7-4.6 11.27-7.3 16.67-1.28 2.54-4.78 2.87-6.17 5.34-1.2 2.14-.27 6.41-1.56 8.5-3 4.84-6.22 9.53-9.66 14.05-2.04 2.69-4.34.04-6.53 2.6-1.1 1.28-2.02 7.82-3.15 9.07-3.8 4.2-7.8 8.22-11.97 12.04l-8.73-2.66s-12.34-4.15-21.28-8.15a94.65 94.65 0 00-44.1-8.08 138.93 138.93 0 01.68-39.94c.52-3.19 3.97-3.47 4.7-6.58.67-2.82-1.4-8.46-.56-11.21a136.52 136.52 0 016.78-17.77c.92-1.97 7.43-1.14 8.44-3.06 1.46-2.79-2.54-8.3-.9-10.97 2.98-4.85 6.25-9.5 9.8-13.93 1.3-1.64 7.07-1.79 8.45-3.37 1.94-2.2-.47-5.8 1.6-7.87 3.9-3.92 8.05-7.61 12.4-11.04 1.94-1.53 7.73.1 9.76-1.33 2.1-1.48.43-6 2.61-7.36 4.82-3 9.84-5.71 15.04-8.11 2.21-1.03 8.54 2.2 10.81 1.3 2.64-1.05 1.32-6.25 4.03-7.13a136.15 136.15 0 0133.08-6.44 178.06 178.06 0 015.16 42.66z\"\n      ></path>\n      <path\n        fill=\"#ffd15b\"\n        d=\"M249.24 359.27a175.92 175.92 0 01-22.14 6.96c-2.57.62-5.36-2.04-7.97-1.53-2.36.46-4.53 4.11-6.92 4.48-4.86.75-9.79 1.3-14.77 1.64l-8.12-1.64s-6.6 2.05-7.73 2.03a178.36 178.36 0 01-34.49-4.01 95.03 95.03 0 0120.87-32.76c2.05-2.1 5.09-.02 7.33-1.93 1.83-1.56 2.83-7.15 4.78-8.56a94.95 94.95 0 0112.5-7.72c2.04-1.05 5.85 1.24 7.97.34 2.5-1.06 3.3-5.28 5.9-6.13a94.68 94.68 0 0124.17-4.54 136.58 136.58 0 0018.62 53.37z\"\n      ></path>\n      <path d=\"M15 193.75c0-93.74 76.26-170 170-170 28.3 0 56.32 7.1 81.03 20.51a7.5 7.5 0 007.16-13.18A185.28 185.28 0 00185 8.75c-102 0-185 82.99-185 185 0 50.51 19.98 97.7 56.26 132.86a7.47 7.47 0 0010.6-.17 7.5 7.5 0 00-.16-10.6A168.65 168.65 0 0115 193.75zm352-50.5c-1.33 0-2.65.02-3.98.06a184.72 184.72 0 00-59.7-91.78 7.5 7.5 0 10-9.6 11.53 169.79 169.79 0 0154.02 81.47c-59.73 7.96-108.07 52.42-121.8 110.15a147.43 147.43 0 00-3.53 44.47c-19.61 2.58-39.4 11.58-54.05 24.66a103.04 103.04 0 00-25.7 34.61A168.99 168.99 0 0193 336.73a7.5 7.5 0 00-8.13 12.6 184 184 0 0052.57 23.23 102.23 102.23 0 00-3.94 28.2c0 56.51 45.98 102.5 102.5 102.5 13.86 0 27.31-2.73 39.97-8.1a7.5 7.5 0 00-5.85-13.8 86.94 86.94 0 01-34.12 6.89c-48.25 0-87.5-39.25-87.5-87.5 0-8.66 1.27-17.02 3.62-24.92a185.92 185.92 0 0032.88 2.92c21.44 0 42.03-3.68 61.19-10.41a145.71 145.71 0 0073.79 57.08 86.92 86.92 0 01-23.12 38.2 7.5 7.5 0 0010.43 10.78c13-12.6 22.23-27.98 27.13-44.84a144.92 144.92 0 0032.58 3.69c79.95 0 145-65.05 145-145s-65.05-145-145-145zm-52.26 25.98l39.21 43.36c-.78 7.06-2 13.98-3.61 20.75l-50.81-56.17a129.6 129.6 0 0115.2-7.94zm15.17-5.58a128.94 128.94 0 0121.55-4.47 170.52 170.52 0 013.5 32.17zm-42.82 22.13l58.26 64.42c-2.05 5.8-4.4 11.47-7.04 16.97L324 251.34a7.5 7.5 0 00-11.13 10.06l17.88 19.77a172.5 172.5 0 01-9.54 14.2l-66.15-73.14a130.5 130.5 0 019.63-14.1l24.54 27.13a7.48 7.48 0 0010.6.53 7.5 7.5 0 00.53-10.6l-25.67-28.38c3.9-3.93 8.03-7.62 12.4-11.03zM237 288.25c0-5.08.3-10.1.87-15.02l26.15 28.91a102.2 102.2 0 00-26.64-3.87c-.25-3.3-.38-6.65-.38-10.02zm49.98 41.43a170.08 170.08 0 01-34.48 20.08 129.01 129.01 0 01-13.06-36.44 86.99 86.99 0 0147.54 16.36zm12.66-10.52l-58.26-64.41a129 129 0 016.37-18.24l63.84 70.58a171.56 171.56 0 01-11.95 12.07zm-104.92 44.3l-11.9-32.14c3.89-2.99 8.04-5.66 12.41-7.97l14.3 38.62c-4.87.71-9.81 1.21-14.81 1.5zm-23.82-21.11l7.89 21.29c-7.07-.26-14.08-.97-21-2.09a87.86 87.86 0 0113.11-19.2zm53.57 16.76l-15.4-41.61c4.9-1.6 9.99-2.76 15.23-3.47a143.9 143.9 0 0014.09 41.12 167.9 167.9 0 01-13.92 3.96zm74.12-19.44c3.2 3.28 6.14 6.8 8.8 10.54l-36.46 25.53c-3.76-4.13-7.26-8.5-10.47-13.1a185.38 185.38 0 0038.13-22.97zm-16.74 46.73l33.16-23.22a86.83 86.83 0 015.4 14.53L294.32 396a131.1 131.1 0 01-12.46-9.59zm26.69 17.94l14.7-10.3c.27 3.11.45 9.87-.3 16.52a129.19 129.19 0 01-14.4-6.22zM367 418.25c-10.13 0-20-1.17-29.46-3.37.63-4.64.96-9.36.96-14.13 0-27.43-10.83-52.38-28.45-70.8C346.88 296.12 370 247.6 370 193.75c0-12.03-1.16-23.91-3.41-35.5 71.52-.3 130.5 58.2 130.41 130 0 71.68-58.32 130-130 130z\"></path>\n      <path d=\"M162 146.57a7.5 7.5 0 100-15h-40a7.5 7.5 0 100 15zm25 15H97a7.5 7.5 0 100 15h90a7.5 7.5 0 100-15zm0 30H97a7.5 7.5 0 100 15h90a7.5 7.5 0 100-15zm210 92.11h30a7.5 7.5 0 100-15h-30a7.5 7.5 0 100 15zm50 15h-70a7.5 7.5 0 100 15h70a7.5 7.5 0 100-15zm-207 99.57h-40a7.5 7.5 0 100 15h40a7.5 7.5 0 100-15zm0 30h-40a7.5 7.5 0 100 15h40a7.5 7.5 0 100-15z\"></path>\n    </svg>\n  );\n}\n","export function LawIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 60 60\" {...props}>\n      <g>\n        <g transform=\"translate(1 1)\">\n          <path fill=\"#624421\" d=\"M27.964 24.95h4v10.02h-4z\" transform=\"rotate(-45 29.96 29.968)\"></path>\n          <path fill=\"#f57c00\" d=\"M23 51v4H3v-4a3 3 0 013-3h14a3 3 0 013 3z\"></path>\n          <path fill=\"#ff9801\" d=\"M20 51v4H3v-4a3 3 0 013-3h11a3 3 0 013 3z\"></path>\n          <path\n            fill=\"#825a2c\"\n            d=\"M32.79 24.3l-8.49 8.49a2 2 0 01-2.83 0l-1.41-1.42 11.31-11.31 1.42 1.41a2 2 0 010 2.83z\"\n          ></path>\n          <path\n            fill=\"sienna\"\n            d=\"M15.11 37.74l-1.42 1.41a1 1 0 01-1.41 0L1 27.84a1 1 0 010-1.42L2.38 25a3 3 0 014.24 0l8.49 8.48a3 3 0 010 4.26z\"\n          ></path>\n          <path\n            fill=\"#783e22\"\n            d=\"M39.15 13.69l-1.41 1.42a3 3 0 01-4.25 0L25 6.62a3 3 0 010-4.24L26.42 1a1 1 0 011.42 0l11.31 11.28a1 1 0 010 1.41z\"\n          ></path>\n          <path\n            fill=\"sienna\"\n            d=\"M37.48 12l-1.42 1.42a3 3 0 01-4.24 0L25 6.62a3 3 0 010-4.24L26.42 1a1 1 0 011.42 0l9.64 9.64a1 1 0 010 1.36z\"\n          ></path>\n          <path fill=\"#783e22\" d=\"M26 55v2a1 1 0 01-1 1H1a1 1 0 01-1-1v-2a2 2 0 012-2h22a2 2 0 012 2z\"></path>\n          <path fill=\"sienna\" d=\"M23 55v2a1 1 0 01-1 1H1a1 1 0 01-1-1v-2a2 2 0 012-2h19a2 2 0 012 2z\"></path>\n          <path\n            fill=\"#f57c00\"\n            d=\"M33.49 17.94L17.94 33.49a2 2 0 01-2.83 0l-6.36-6.36L27.13 8.75l6.36 6.36a2 2 0 010 2.83z\"\n          ></path>\n          <path\n            fill=\"#ff9801\"\n            d=\"M27.13 8.75L8.75 27.13 6.62 25a2 2 0 010-2.83L22.18 6.62a2 2 0 012.83 0z\"\n          ></path>\n          <path\n            fill=\"#783e22\"\n            d=\"M51.88 46.22l-5.66 5.66C32.63 38.29 32.79 38.54 32.79 38.44l5.65-5.65z\"\n          ></path>\n          <path fill=\"sienna\" d=\"M49.7 48.41l-3.48 3.47C32.63 38.29 32.79 38.54 32.79 38.44L36.26 35z\"></path>\n          <path\n            fill=\"#fec108\"\n            d=\"M38.44 32.79l-5.65 5.65L30 35.62a2 2 0 010-2.83L31.75 31l1-1a2 2 0 012.83 0z\"\n          ></path>\n          <path\n            fill=\"#ffdc00\"\n            d=\"M36 34.42L32.38 38 30 35.62a2 2 0 010-2.83L31.75 31a2 2 0 011.43.59z\"\n          ></path>\n          <path fill=\"#707070\" d=\"M54.71 49.05l-5.66 5.66-2.83-2.83 5.66-5.66z\"></path>\n          <path\n            fill=\"#9e9e9e\"\n            d=\"M46.77 49.506h5.18v3.69h-5.18z\"\n            transform=\"rotate(-45 49.354 51.363)\"\n          ></path>\n          <path\n            fill=\"#624421\"\n            d=\"M56.83 56.83a4 4 0 01-5.66 0l-2.12-2.12 5.66-5.66 2.12 2.12a4 4 0 010 5.66z\"\n          ></path>\n          <path\n            fill=\"#825a2c\"\n            d=\"M55.55 57.69a4 4 0 01-4.38-.86l-2.12-2.12 3.66-3.66 2.07 2.07a4 4 0 01.77 4.57z\"\n          ></path>\n        </g>\n        <g fill=\"#000\">\n          <path d=\"M37.32 30.25a3 3 0 00-3.4-.58l-1.55-1.54L34.49 26a3 3 0 000-4.24l-.7-.71c1.33-1.34 2.08-1.85 2.25-3.13a4 4 0 003.4-1.11l1.42-1.42a2 2 0 000-2.83L29.54 1.26a2 2 0 00-2.82 0L25.3 2.67a4 4 0 00-1.11 3.41 3 3 0 00-1.72.84L6.92 22.47a3 3 0 00-.85 1.75 4 4 0 00-3.4 1.08l-1.41 1.42a2 2 0 000 2.82l11.31 11.32a2 2 0 002.83 0l1.42-1.42A3.91 3.91 0 0017.93 36c1.3-.18 1.81-.93 3.13-2.25.84.84 1.44 1.58 2.83 1.58a3 3 0 002.11-.84l2.12-2.12 1.54 1.55a3 3 0 00.58 3.4C39.74 46.8 14 21 51.46 58.54a5.006 5.006 0 007.08-7.08c-44.39-44.38-1.39-1.39-21.22-21.21zm11.32 22.63l4.24-4.24 1.41 1.41-4.24 4.24zM35.2 39.44l4.24-4.24 12 12-4.24 4.24zM26.72 4.09l1.41-1.42L39.44 14 38 15.4a2 2 0 01-2.83 0l-8.45-8.48a2 2 0 010-2.83zM15.4 38L14 39.44 2.67 28.13l1.42-1.41a2 2 0 012.83 0l8.48 8.48a2 2 0 010 2.8zm2.83-4.24a1 1 0 01-1.41 0l-5.66-5.66 2.12-2.1a1 1 0 10-1.41-1.42l-2.12 2.14C8.19 25.16 8 25.12 8 24.59a1 1 0 01.29-.7l15.6-15.56a1 1 0 011.41 0l1.42 1.42-12 12a1 1 0 001.42 1.41l12-12 5.66 5.66a1 1 0 010 1.41c.09 0-.14.09-15.57 15.56zm6.36-.71a1 1 0 01-1.41 0l-.71-.71 9.9-9.9.71.71a1 1 0 010 1.41c-4.01 4.04.67-.62-8.49 8.52zM31 29.54L32.37 31 31 32.37 29.54 31zm.41 5.66a1 1 0 01.3-.71l2.82-2.82a1 1 0 011.42 0L38 33.79 33.79 38c-2.31-2.27-2.42-2.26-2.42-2.8zm25.71 21.92a3 3 0 01-4.24 0l-1.42-1.41 4.25-4.25 1.41 1.42a3 3 0 010 4.24zM25 53v-1a4 4 0 00-4-4H7a4 4 0 00-4 4v1a3 3 0 00-3 3v3a1 1 0 001 1h26a1 1 0 001-1v-3a3 3 0 00-3-3zM5 52a2 2 0 012-2h14a2 2 0 012 2v1H5zm21 6H2v-2a1 1 0 011-1h22a1 1 0 011 1z\"></path>\n          <path d=\"M25 44v-4a1 1 0 00-2 0v4a1 1 0 002 0zM32 47h-4a1 1 0 000 2h4a1 1 0 000-2zM27.71 45.71l3-3a1.004 1.004 0 00-1.42-1.42l-3 3A1 1 0 0027 46a1 1 0 00.71-.29z\"></path>\n        </g>\n      </g>\n    </svg>\n  );\n}\n","// This icon file is generated automatically.\nvar WarningOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M464 720a48 48 0 1096 0 48 48 0 10-96 0zm16-304v184c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V416c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8zm475.7 440l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48zm-783.5-27.9L512 239.9l339.8 588.2H172.2z\" } }] }, \"name\": \"warning\", \"theme\": \"outlined\" };\nexport default WarningOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport WarningOutlinedSvg from \"@ant-design/icons-svg/es/asn/WarningOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar WarningOutlined = function WarningOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: WarningOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  WarningOutlined.displayName = 'WarningOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(WarningOutlined);"],"names":["ItemCard","id","width","className","title","text","str","match","numId","parseInt","itemId","sourceId","Math","ceil","getSource","source","height","clsx","style","Boolean","unknownText","pt","en","Achievements","players","achievements","reference","length","getAnimationClass","size","level","map","achievement","index","type","icon","achievementObj","player","playerId","delay","avatarId","name","description","content","value","shape","Container","children","contained","titleProps","contentProps","spaceProps","restTitleProps","childrenClassName","wrap","direction","childrenDirection","restChildrenContainerProps","MouseFollowingContent","active","MouseFollowingContentInternal","divRef","useRef","useEffect","handleMouseMove","e","current","left","clientX","top","clientY","document","addEventListener","removeEventListener","ref","Sprite","padding","baseUrl","useTDBaseUrl","useQuery","queryKey","queryFn","fetch","response","enabled","isLoading","data","isError","paddedWidth","display","placeItems","svgContent","WarningOutlined","viewBox","xlinkHref","dangerouslySetInnerHTML","__html","x","y","background","StepSelectPlayer","announcement","onSubmitPlayer","ruleInstructionProps","useLoading","isHost","useHost","fullWidth","gap","sortPlayers","disabled","onClick","withName","addressUser","SpeechBubble","shadow","rest","baseClass","View","ViewIf","condition","ViewOr","ViewSwitch","cases","Error","console","warn","submitAction","httpsCallable","functions","PhaseJudgeSelection","state","info","useStep","step","onSubmitJudge","setStep","translate","useLanguage","request","useAPICall","apiFunction","actionName","onSuccess","onError","successMessage","errorMessage","payload","action","useOnSubmitJudgeAPIRequest","LawIcon","currentRound","round","duration","ruleInstruction","phase","allowedPhase","PHASES","white","judgeId","OUTCOME","SelectedAreasCircles","selectedArea","areas","split","icons","A","CircleIcon","mainColor","W","C","O","areaId","arr","Fragment","Announcement","activePlayer","previousActivePlayer","previousGuess","items","isTheActivePlayer","DiagramIcon","item","outcome","justify","align","ArrowIcon","correctArea","BoxEqualIcon","ApplauseIcon","suggestedArea","SkullIcon","marginTop","CheckMarkIcon","CircleHighlight","color","iconPlacement","Examples","examples","example","DiagramRules","hasContext","context","attribute","word","EvaluationRules","calculateProportionalValues","containerWidth","objectX","objectY","scaleFactor","BOUNDARIES_BY_AREA","AW","WC","AC","AWC","AreaPlacedItems","areaKey","diagramArea","boundaries","itemWidth","itemsIds","elements","useMemo","points","position","filter","TripleDiagram","forwardRef","xmlns","fill","d","HoverablePath","useState","isHovered","setIsHovered","opacity","onMouseEnter","onMouseLeave","cursor","TripleDiagramClickableAreas","DiagramSection","onSelectArea","diagrams","currentItem","setSelectedArea","hasAnAreaSelected","selectedAreaItems","floatingItemSizes","containerSizes","maxHeight","overflowY","Object","values","key","area","StepPlaceItem","user","turnOrder","onSubmitItemPlacement","useCardWidthByContainerRef","maxWidth","selectedItemId","setSelectedItemId","selectedItem","useMock","hand","sample","counts","reduce","acc","diagram","count","push","max","keys","Number","selectedDiagrams","mockDiagramSelection","loading","infinite","speed","order","activePlayerId","MyThings","YesNoSwitch","checkedChildren","unCheckedChildren","props","Solution","solutions","setAttribute","setWord","setContext","showHints","itemName","checked","onChange","Hints","hintsObj","vowels","consonants","cleanupWord","stringRemoveAccents","toLowerCase","letters","vowelsCount","consonantsCount","hasRepeatedVowels","hasRepeatedConsonants","maxConsecutiveVowels","maxConsecutiveConsonants","hasHyphen","includes","numberOfWords","hasAccents","test","consecutiveVowels","consecutiveConsonants","i","char","vowelsDict","consonantsDict","countWordProperties","getCheckIcon","hints","hint","StepWaitPlaceItem","isJudge","AnimatedClockIcon","PhaseItemPlacement","useUser","useWhichPlayerIsThe","isTheJudge","useOnSubmitItemPlacementAPIRequest","EvaluationModal","onSubmitEvaluation","areaA","setA","areaC","setC","areaW","setW","dualTranslate","evaluation","join","open","footer","closable","PlayerGuess","currentGuess","withRoundCorners","StepEvaluate","judge","undefined","PhaseEvaluation","useOnSubmitEvaluationAPIRequest","ACHIEVEMENTS","achievementsReference","PhaseGameOver","announcementIcon","CrownIcon","getActiveComponent","LoadingPage","PhaseLobby","PhaseRules","PhaseSetup","PageError","theme","token","colorPrimary","THEME_COLORS","colorLink","gameCollection","GAME_COLLECTION","propertyName","useGlobalState","userId","PLACEHOLDER_PLAYER","setActivePlayer","isUser","setIsUser","transform","React","AntdIcon","_extends","WarningOutlinedSvg"],"sourceRoot":""}