{"version":3,"file":"static/js/vendaval-de-palpite.99dd8efb.chunk.js","mappings":"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","sources":["games/vendaval-de-palpite/utils/constants.ts","games/vendaval-de-palpite/StepBossPlayerSelection.tsx","games/vendaval-de-palpite/PhaseBossPlayerSelection.tsx","games/vendaval-de-palpite/utils/api-requests.ts","games/vendaval-de-palpite/StepSecretWordSelection.tsx","games/vendaval-de-palpite/StepWaiting.tsx","games/vendaval-de-palpite/PhaseSecretWordSelection.tsx","games/vendaval-de-palpite/components/Board.tsx","games/vendaval-de-palpite/utils/mock.ts","games/vendaval-de-palpite/components/ClueInput.tsx","games/vendaval-de-palpite/components/CategoryCard.tsx","games/vendaval-de-palpite/StepPlayerClue.tsx","games/vendaval-de-palpite/components/SecretWordCard.tsx","games/vendaval-de-palpite/components/CategoryWordGroup.tsx","games/vendaval-de-palpite/StepBossWaiting.tsx","games/vendaval-de-palpite/PhasePlayersClues.tsx","games/vendaval-de-palpite/components/OutcomeOptions.tsx","games/vendaval-de-palpite/components/ClueEvaluation.tsx","games/vendaval-de-palpite/StepBossEvaluation.tsx","games/vendaval-de-palpite/StepPlayersWaitEvaluation.tsx","games/vendaval-de-palpite/PhaseClueEvaluations.tsx","games/vendaval-de-palpite/PhaseGameOver.tsx","games/vendaval-de-palpite/SessionVendavalDePalpite.tsx","icons/GarbageIcon.tsx","icons/LoupeIcon.tsx","icons/QuestionIcon.tsx","icons/TrophyIcon.tsx"],"sourcesContent":["export const VENDAVAL_DE_PALPITE_ACTIONS = {\n  SUBMIT_BOSS: 'SUBMIT_BOSS',\n  SUBMIT_SECRET_WORD: 'SUBMIT_SECRET_WORD',\n  SUBMIT_CLUES: 'SUBMIT_CLUES',\n  SUBMIT_EVALUATION: 'SUBMIT_EVALUATION',\n  SUBMIT_OUTCOME: 'SUBMIT_OUTCOME',\n  SUBMIT_HELP: 'SUBMIT_HELP',\n} as const;\n\nexport const WRITE_CLUE_TIME = 180;\nexport const WRITE_CLUE_TIME_FIRST_ROUND = 240;\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Types\nimport type { GamePlayers } from 'types/player';\n// Hooks\nimport { useHost } from 'hooks/useHost';\nimport { useLoading } from 'hooks/useLoading';\n// Icons\nimport { AnimatedClockIcon } from 'icons/AnimatedClockIcon';\n// Components\nimport { AvatarCard, IconAvatar } from 'components/avatars';\nimport { TransparentButton } from 'components/buttons';\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, RuleInstruction, Title } from 'components/text';\n\ntype StepBossPlayerSelectionProps = {\n  players: GamePlayers;\n  onBossPlayerClick: GenericFunction;\n};\n\nexport function StepBossPlayerSelection({ players, onBossPlayerClick }: StepBossPlayerSelectionProps) {\n  const { isLoading } = useLoading();\n  const isHost = useHost();\n\n  return (\n    <Step key={1}>\n      <Title>\n        <IconAvatar icon={<AnimatedClockIcon />} size=\"large\" />\n        <br />\n        <Translate pt=\"Quem quer ser o Chefe?\" en=\"Who wants to be the Boss?\" />\n      </Title>\n\n      <Instruction contained>\n        <Space>\n          {Object.values(players).map((player) => {\n            if (isHost) {\n              return (\n                <TransparentButton\n                  key={`p-bt-${player.id}`}\n                  disabled={isLoading}\n                  onClick={() => onBossPlayerClick({ bossId: player.id })}\n                >\n                  <AvatarCard key={`p-a-${player.id}`} player={player} withName addressUser />\n                </TransparentButton>\n              );\n            }\n\n            return <AvatarCard key={`p-a-${player.id}`} player={player} withName addressUser />;\n          })}\n        </Space>\n      </Instruction>\n\n      <RuleInstruction type=\"wait\">\n        <Translate pt=\"O anfitrião selecionará o chefe\" en=\"The host will select the boss\" />)\n      </RuleInstruction>\n    </Step>\n  );\n}\n","// Types\nimport type { PhaseProps } from 'types/game';\n// Hooks\nimport { useStep } from 'hooks/useStep';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { BossIcon } from 'icons/BossIcon';\n// Components\nimport { Translate } from 'components/language';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\n// Internal\nimport { useOnSubmitBossPlayerAPIRequest } from './utils/api-requests';\nimport { StepBossPlayerSelection } from './StepBossPlayerSelection';\n\nexport function PhaseBossPlayerSelection({ state, players }: PhaseProps) {\n  const { step, setStep, goToNextStep } = useStep(0);\n\n  const onBossPlayerClick = useOnSubmitBossPlayerAPIRequest(setStep);\n\n  return (\n    <PhaseContainer phase={state?.phase} allowedPhase={PHASES.VENDAVAL_DE_PALPITE.BOSS_SELECTION}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<BossIcon />}\n          title={<Translate pt=\"O Chefe\" en=\"The Boss\" />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          duration={10}\n          type=\"block\"\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  Um jogador deve ser o Chefe que sabe exatamente o que ele quer (a palavra secreta) e os\n                  outros serão funcionários na reunião de brainstorm.\n                </>\n              }\n              en={\n                <>\n                  One player must be the Boss who knows exactly wht they want (the secret word) and the other\n                  players will be the employees participating in this brainstorm meeting.\n                </>\n              }\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepBossPlayerSelection players={players} onBossPlayerClick={onBossPlayerClick} />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","// Hooks\nimport { useGameActionRequest } from 'hooks/useGameActionRequest';\nimport { useLanguage } from 'hooks/useLanguage';\nimport type { UseStep } from 'hooks/useStep';\n// Internal\nimport type {\n  SubmitBossPlayerPayload,\n  SubmitSecretWordPayload,\n  SubmitPlayerCluesPayload,\n  SubmitEvaluationPayload,\n  SubmitOutcomePayload,\n  SubmitHelpPayload,\n} from './types';\nimport { VENDAVAL_DE_PALPITE_ACTIONS } from './constants';\n\nexport function useOnSubmitBossPlayerAPIRequest(setStep: UseStep['setStep']) {\n  const { translate } = useLanguage();\n\n  const request = useGameActionRequest({\n    actionName: 'submit-boss',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate('Chefe enviado com sucesso!', 'Boss submitted successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar o chefe',\n      'Oops, the application failed to send the boss player'\n    ),\n  });\n\n  return (payload: SubmitBossPlayerPayload) => {\n    request({\n      action: VENDAVAL_DE_PALPITE_ACTIONS.SUBMIT_BOSS,\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitSecretWordAPIRequest(setStep: UseStep['setStep']) {\n  const { translate } = useLanguage();\n\n  const request = useGameActionRequest({\n    actionName: 'submit-secret-word',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate('Palavra Secreta enviada com sucesso!', 'Secret word sent successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar palavra secreta',\n      'Oops, the application failed to send your secret word'\n    ),\n  });\n\n  return (payload: SubmitSecretWordPayload) => {\n    request({\n      action: VENDAVAL_DE_PALPITE_ACTIONS.SUBMIT_SECRET_WORD,\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitPlayerCluesAPIRequest(setStep: UseStep['setStep']) {\n  const { translate } = useLanguage();\n\n  const request = useGameActionRequest({\n    actionName: 'submit-player-clues',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(1),\n    successMessage: translate('Dica enviada com sucesso!', 'Clue sent successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar dica',\n      'Oops, the application failed to send clue'\n    ),\n  });\n\n  return (payload: SubmitPlayerCluesPayload) => {\n    request({\n      action: VENDAVAL_DE_PALPITE_ACTIONS.SUBMIT_CLUES,\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitEvaluationAPIRequest(setStep: UseStep['setStep']) {\n  const { translate } = useLanguage();\n\n  const request = useGameActionRequest({\n    actionName: 'submit-evaluation',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate('Avaliação enviada com sucesso!', 'Evaluation sent successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar avaliação',\n      'Oops, the application failed to send evaluation'\n    ),\n  });\n\n  return (payload: SubmitEvaluationPayload) => {\n    request({\n      action: VENDAVAL_DE_PALPITE_ACTIONS.SUBMIT_EVALUATION,\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitOutcomeAPIRequest(setStep: UseStep['setStep']) {\n  const { translate } = useLanguage();\n\n  const request = useGameActionRequest({\n    actionName: 'submit-outcome',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate('Resultado enviado com sucesso!', 'Outcome sent successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar resultado',\n      'Oops, the application failed to send outcome'\n    ),\n  });\n\n  return (payload: SubmitOutcomePayload) => {\n    request({\n      action: VENDAVAL_DE_PALPITE_ACTIONS.SUBMIT_OUTCOME,\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitHelpAPIRequest(setStep: UseStep['setStep']) {\n  const { translate } = useLanguage();\n\n  const request = useGameActionRequest({\n    actionName: 'submit-help',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(1),\n    successMessage: translate('Ajuda enviada com sucesso!', 'Help sent successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar ajuda',\n      'Oops, the application failed to send help'\n    ),\n  });\n\n  return (payload: SubmitHelpPayload) => {\n    request({\n      action: VENDAVAL_DE_PALPITE_ACTIONS.SUBMIT_HELP,\n      ...payload,\n    });\n  };\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { CheckCircleFilled } from '@ant-design/icons';\nimport { Button, App, Space } from 'antd';\n// Types\nimport type { TextCard } from 'types/tdr';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\n// Components\nimport { TransparentButton } from 'components/buttons';\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\n\ntype StepSecretWordSelectionProps = {\n  words: TextCard[];\n  categories: TextCard[];\n  onSubmitSecretWord: GenericFunction;\n};\n\nexport function StepSecretWordSelection({\n  words,\n  categories,\n  onSubmitSecretWord,\n}: StepSecretWordSelectionProps) {\n  const { notification } = App.useApp();\n  const { isLoading } = useLoading();\n  const [secretWord, setSecretWord] = useState('');\n  const [selectedCategories, setSelectedCategories] = useState<BooleanDictionary>({});\n  const isReadyToSend = Boolean(secretWord && Object.keys(selectedCategories).length > 0);\n\n  const handleCategoryAdd = (category: string) => {\n    const categoriesCopy: BooleanDictionary = { ...selectedCategories };\n    if (categoriesCopy[category]) {\n      delete categoriesCopy[category];\n    } else {\n      // Block more than 2 categories\n      if (Object.keys(categoriesCopy).length === 2) {\n        notification.error({\n          message: <Translate pt=\"Um máximo de 2 categorias é permitido\" en=\"Up to 2 categories allowed\" />,\n        });\n      } else {\n        categoriesCopy[category] = true;\n      }\n    }\n\n    setSelectedCategories(categoriesCopy);\n  };\n\n  return (\n    <Step key={1}>\n      <Title size=\"medium\">\n        <Translate pt=\"A Palavra Secreta\" en=\"The Secret Word\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt=\"Escolha a palavra secreta para os outros jogadores tentarem adivinhar e então selecione uma ou duas categorias que melhor se encaixam com a palavra escolhida\"\n          en=\"Select a secret word so the other players can guess, then select up to 2 categories that best match the clue\"\n        />\n      </Instruction>\n\n      <Space wrap className=\"space-container\" align=\"center\">\n        {words.map((word) => {\n          return (\n            <TransparentButton\n              key={`p-bt-${word.id}`}\n              disabled={isLoading}\n              onClick={() => setSecretWord(word.text)}\n              active={secretWord === word.text}\n            >\n              <Card>{word.text}</Card>\n            </TransparentButton>\n          );\n        })}\n      </Space>\n\n      <Title level={3} size=\"x-small\">\n        <Translate pt=\"Categorias\" en=\"Categories\" />\n      </Title>\n\n      <Instruction contained>\n        <Space wrap className=\"space-container\" align=\"center\">\n          {categories.map((category) => {\n            return (\n              <Button\n                key={`p-bt-${category.id}`}\n                disabled={isLoading || !secretWord}\n                onClick={() => handleCategoryAdd(category.text)}\n                className=\"v-secret-word-button\"\n              >\n                {selectedCategories[category.text] && <CheckCircleFilled />} {category.text}\n              </Button>\n            );\n          })}\n        </Space>\n      </Instruction>\n\n      <Button\n        type=\"primary\"\n        disabled={!isReadyToSend}\n        onClick={() =>\n          onSubmitSecretWord({\n            secretWord,\n            categories: Object.keys(selectedCategories),\n          })\n        }\n      >\n        <Translate pt=\"Enviar \" en=\"Submit \" />\n        {isReadyToSend && (\n          <span>\n            \"{secretWord}\" + {Object.keys(selectedCategories).join(', ')}\n          </span>\n        )}\n      </Button>\n    </Step>\n  );\n}\n","import { ReactNode } from 'react';\n// Types\nimport type { GamePlayers } from 'types/player';\n// Components\nimport { Translate } from 'components/language';\nimport { WaitingRoom } from 'components/players';\nimport { Step } from 'components/steps';\n\ntype StepWaitingProps = {\n  players: GamePlayers;\n  instruction: ReactNode;\n};\n\nexport function StepWaiting({ players, instruction }: StepWaitingProps) {\n  return (\n    <Step fullWidth>\n      <WaitingRoom\n        players={players}\n        title={<Translate pt=\"Aguarde\" en=\"Please wait\" />}\n        instruction={instruction}\n      />\n    </Step>\n  );\n}\n","// Types\nimport type { PhaseProps } from 'types/game';\n// Hooks\nimport { useStep } from 'hooks/useStep';\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { KnowledgeIcon } from 'icons/KnowledgeIcon';\n// Components\nimport { AvatarName } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { ViewOr } from 'components/views';\n// Internal\nimport { useOnSubmitSecretWordAPIRequest } from './utils/api-requests';\nimport { StepSecretWordSelection } from './StepSecretWordSelection';\nimport { StepWaiting } from './StepWaiting';\n\nexport function PhaseSecretWordSelection({ state, players }: PhaseProps) {\n  const { step, setStep, goToNextStep } = useStep(0);\n  const [boss, isUserTheBoss] = useWhichPlayerIsThe('bossId', state, players);\n\n  const onSubmitSecretWord = useOnSubmitSecretWordAPIRequest(setStep);\n\n  return (\n    <PhaseContainer phase={state?.phase} allowedPhase={PHASES.VENDAVAL_DE_PALPITE.SECRET_WORD_SELECTION}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<KnowledgeIcon />}\n          title={<Translate pt=\"A Palavra Secreta\" en=\"The Secret Word\" />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          duration={5}\n          type=\"block\"\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  O chefe <AvatarName player={boss} /> escolherá a palavra-secreta e sua categoria.\n                </>\n              }\n              en={\n                <>\n                  The boss <AvatarName player={boss} /> will choose the secret clue and its category.\n                </>\n              }\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <ViewOr condition={isUserTheBoss}>\n          <StepSecretWordSelection\n            words={state.words}\n            categories={state.categories}\n            onSubmitSecretWord={onSubmitSecretWord}\n          />\n\n          <StepWaiting\n            players={players}\n            instruction={\n              <Translate\n                pt={\n                  <>\n                    O mestre <AvatarName player={boss} /> está escolhendo a palavra-secreta e sua categoria.\n                  </>\n                }\n                en={\n                  <>\n                    The boss <AvatarName player={boss} /> is choosing the secret clue and its category.\n                  </>\n                }\n              />\n            }\n          />\n        </ViewOr>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Avatar, Tooltip } from 'antd';\n// Types\nimport type { GamePlayers } from 'types/player';\n// Icons\nimport { QuestionIcon } from 'icons/QuestionIcon';\n// Components\nimport { AvatarName, IconAvatar } from 'components/avatars';\nimport { Translate } from 'components/language';\n// Internal\nimport type { BoardObject, Clue, Clues } from '../utils/types';\n\ntype BoardProps = {\n  board: BoardObject;\n  clues: Clues;\n  players: GamePlayers;\n};\n\nexport function Board({ board, clues, players }: BoardProps) {\n  const boardEntries = Object.keys(board);\n  return (\n    <div className=\"v-board\">\n      {boardEntries.map((boardKey, index) => {\n        const boardEntry = board[boardKey];\n        const isLatestBoard = index === boardEntries.length - 1;\n\n        return (\n          <div\n            key={`board-key-${boardKey}`}\n            className={clsx('v-board__entry', isLatestBoard && 'v-board__entry--active')}\n          >\n            <ul className=\"v-board__clues\">\n              {boardEntry.clues.map((clueId) => (\n                <ClueEntry clue={clues[clueId]} key={clueId} players={players} />\n              ))}\n            </ul>\n            <div className=\"v-board__evaluation\">\n              {boardEntry.evaluation !== undefined ? (\n                <Tooltip title={<Translate pt=\"Quantidade de dicas corretas\" en=\"Amount of correct clues\" />}>\n                  <Avatar size={48} shape=\"circle\" style={{ backgroundColor: 'green' }}>\n                    {boardEntry.evaluation}\n                  </Avatar>\n                </Tooltip>\n              ) : (\n                <IconAvatar icon={<QuestionIcon />} size={48} shape=\"square\" />\n              )}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\ntype ClueProps = {\n  clue: Clue;\n  players: GamePlayers;\n};\n\nfunction ClueEntry({ clue, players }: ClueProps) {\n  return (\n    <li className=\"v-clue\">\n      <div className={clsx('v-clue__text', clue.isGuess && 'v-clue__text--guess')}>\n        <div className=\"v-clue__text-inner\">{clue.clue}</div>\n      </div>\n      <div className=\"v-clue__player\">\n        <AvatarName player={players[clue.playerId]} />\n      </div>\n    </li>\n  );\n}\n","// Utils\nimport { shuffle } from 'utils/helpers';\n\nconst suggestedWords = [\n  'tall',\n  'round',\n  'alive',\n  'furry',\n  'big',\n  'red',\n  'lives in water',\n  'related to death',\n  'can be touched',\n  'edible',\n  'long',\n  'do I have it?',\n  'harmful',\n  'virtual',\n  'yellow',\n  'can I put in my mouth?',\n  'is it legal?',\n  'warm',\n  'beautiful',\n  'larger than an elephant',\n];\n\nexport function mockClues(quantity: number): string[] {\n  const randomWords = shuffle(suggestedWords);\n\n  return randomWords.slice(0, quantity);\n}\n","import clsx from 'clsx';\nimport { useEffect, useState } from 'react';\n// Ant Design Resources\nimport { Input, Switch } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Translate } from 'components/language';\n\ntype ClueInputProps = {\n  id: string;\n  onChangeInput?: GenericFunction;\n  onPressEnter?: GenericFunction;\n  value?: string;\n  toggleGuessIds: Function;\n  disabled: boolean;\n};\n\nexport function ClueInput({\n  id,\n  onChangeInput,\n  onPressEnter,\n  value,\n  toggleGuessIds,\n  disabled,\n}: ClueInputProps) {\n  const { translate } = useLanguage();\n  const [isGuess, setIsGuess] = useState(false);\n\n  useEffect(() => {\n    toggleGuessIds(id, isGuess);\n  }, [isGuess]); // eslint-disable-line\n\n  return (\n    <div className={clsx('v-clue-input', isGuess && 'v-clue-input--guess')}>\n      <div className=\"v-clue-input__inner\">\n        <Input\n          placeholder={\n            disabled ? translate('Acabou o tempo', \"Time's up\") : translate('Escreva dica aqui', 'Write here')\n          }\n          key={id}\n          id={id}\n          value={value}\n          onChange={onChangeInput}\n          className=\"v-clue-input__input\"\n          bordered={false}\n          onPressEnter={onPressEnter}\n          autoComplete=\"off\"\n          disabled={disabled}\n        />\n      </div>\n      <Switch\n        className=\"v-clue-input__switch\"\n        size=\"small\"\n        unCheckedChildren={<Translate pt=\"Dica\" en=\"Clue\" />}\n        checkedChildren={<Translate pt=\"Resposta\" en=\"Guess\" />}\n        onChange={(e) => setIsGuess(e)}\n      />\n    </div>\n  );\n}\n","// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { pluralize } from 'utils/helpers';\n// Components\nimport { Card } from 'components/cards';\n\ntype CategoryCardProps = {\n  categories: string[];\n};\n\nexport function CategoryCard({ categories }: CategoryCardProps) {\n  const { translate } = useLanguage();\n\n  return (\n    <Card\n      header={pluralize(\n        categories.length,\n        translate('Categoria', 'Category'),\n        translate('Categorias', 'Categories')\n      )}\n      color=\"brown\"\n    >\n      {categories.join(' + ')}\n    </Card>\n  );\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { CloudUploadOutlined } from '@ant-design/icons';\nimport { Alert } from 'antd';\n// Types\nimport type { GameRound } from 'types/game';\nimport type { GamePlayers, GamePlayer } from 'types/player';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { SEPARATOR } from 'utils/constants';\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { ControlledInputWriting } from 'components/input';\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { TimerBar } from 'components/timers';\n// Internal\nimport type { Clues, BoardObject } from './utils/types';\nimport { mockClues } from './utils/mock';\nimport { WRITE_CLUE_TIME, WRITE_CLUE_TIME_FIRST_ROUND } from './utils/constants';\nimport { Board } from './components/Board';\nimport { ClueInput } from './components/ClueInput';\nimport { CategoryCard } from './components/CategoryCard';\n\ntype StepPlayerClueProps = {\n  secretWord: string;\n  categories: string[];\n  onSubmitClues: GenericFunction;\n  board: BoardObject;\n  clues: Clues;\n  boss: GamePlayer;\n  finalAnswersLeft: number;\n  cluesPerPlayer: number;\n  players: GamePlayers;\n  round: GameRound;\n};\n\nexport function StepPlayerClue({\n  secretWord,\n  categories,\n  onSubmitClues,\n  board,\n  clues,\n  boss,\n  finalAnswersLeft,\n  cluesPerPlayer,\n  players,\n  round,\n}: StepPlayerClueProps) {\n  const [guessesIds, setGuessesIds] = useState<number[]>([]);\n  const [disableInputs, setDisableInputs] = useState(false);\n\n  useMock(() => {\n    onSubmitClues({ clues: mockClues(cluesPerPlayer) });\n  }, []);\n\n  const timerTotal = round.current === 1 ? WRITE_CLUE_TIME_FIRST_ROUND : WRITE_CLUE_TIME;\n\n  const { timeLeft } = useCountdown({\n    duration: timerTotal,\n    autoStart: true,\n    onExpire: () => {\n      setDisableInputs(true);\n    },\n  });\n\n  const toggleGuessIds = (id: string, isGuess: boolean) => {\n    const index = Number(id.split(SEPARATOR)[1]);\n    setGuessesIds((s) => {\n      let sCopy = [...s];\n      if (isGuess) {\n        sCopy.push(index);\n        return sCopy;\n      }\n      return sCopy.filter((e) => e !== index);\n    });\n  };\n\n  const onSubmitEverything = (payload: PlainObject) => {\n    const clues: string[] = [];\n    const guesses: string[] = [];\n    payload.clues.forEach((clue: string, index: number) => {\n      if (guessesIds.includes(index)) {\n        guesses.push(clue);\n      } else {\n        clues.push(clue);\n      }\n    });\n\n    onSubmitClues({\n      clues,\n      guesses,\n    });\n  };\n\n  return (\n    <Step fullWidth>\n      <Title size=\"medium\">\n        <Translate pt=\"Escreva palpites\" en=\"Write Ideas\" />\n      </Title>\n\n      <CategoryCard categories={categories} />\n\n      <Board board={board} clues={clues} players={players} />\n\n      <Instruction contained>\n        <Translate\n          pt=\"Escreva pistas para ajudar a afunilar as possibilidades. Vocês tem 3 minutos\"\n          en=\"Write clues that will have narrow down the possibilities. You have 3 minutes\"\n        />\n      </Instruction>\n\n      <TimerBar value={timeLeft} total={timerTotal} steps={timerTotal / 3} />\n\n      <ControlledInputWriting\n        onSubmit={onSubmitEverything}\n        valueKey=\"clues\"\n        inputQuantity={cluesPerPlayer}\n        inputComponent={ClueInput}\n        restrictMax={!disableInputs}\n        inputComponentProps={{\n          toggleGuessIds,\n          disabled: disableInputs,\n        }}\n        submitButtonLabel={\n          guessesIds.length > 0 ? (\n            <>\n              {cluesPerPlayer > 1 ? (\n                <Translate pt=\"Enviar dicas e respostas\" en=\"Send clues and guesses\" />\n              ) : (\n                <Translate pt=\"Enviar resposta\" en=\"Send guess\" />\n              )}\n            </>\n          ) : (\n            <>\n              <Translate pt=\"Enviar dica\" en=\"Send clue\" />\n              {cluesPerPlayer > 1 && 's'}\n            </>\n          )\n        }\n        submitButtonProps={{\n          icon: <CloudUploadOutlined />,\n          size: 'large',\n        }}\n      />\n\n      {guessesIds.length > 0 && (\n        <Instruction className={getAnimationClass('zoomIn')}>\n          <Alert\n            type=\"warning\"\n            showIcon\n            message={\n              <Translate\n                pt={\n                  <>\n                    Você está prestes a enviar uma resposta. O grupo pode enviar um máximo de{' '}\n                    {finalAnswersLeft} respostas. Se esse número exceder, o grupo perde o jogo imediatamente.\n                  </>\n                }\n                en={\n                  <>\n                    You are about to send an Answer. The group may send a maximum of {finalAnswersLeft}{' '}\n                    answers total. If this number is exceeded, the game is lost immediately.\n                  </>\n                }\n              />\n            }\n          />\n        </Instruction>\n      )}\n\n      <Instruction>\n        <Alert\n          type=\"info\"\n          showIcon\n          description={\n            finalAnswersLeft === 3 ? (\n              <Translate\n                pt={\n                  <>\n                    Durante o jogo, o grupo tem 3 chances de adivinhar a palavra secreta, para isso o jogador\n                    que escrever a palavra secreta tem que marcar a sua dica como 'Resposta' clicando no\n                    botãozinho 'Dica' na carta. <br /> O grupo ainda tem {finalAnswersLeft} chances sobrando\n                    para adivinhar.\n                  </>\n                }\n                en={\n                  <>\n                    During the game, the group has 3 chances of guessing the secret word, to do so the player\n                    who wants to write the secret word must switch the type of answer to 'Guess' by clicking\n                    on the 'Clue' button in the card.\n                    <br /> The group still has {finalAnswersLeft} chances to guess.\n                  </>\n                }\n              />\n            ) : (\n              <Translate\n                pt={\n                  <>\n                    O grupo tem mais {finalAnswersLeft} chances de adivinhar a palavra secreta, para isso o\n                    jogador que escrever a palavra secreta tem que marcar a sua dica como 'Resposta' clicando\n                    no botãozinho 'Dica' na carta.\n                  </>\n                }\n                en={\n                  <>\n                    The group has {finalAnswersLeft} more chances of guessing the secret word, to do so the\n                    player who wants to write the secret word must switch the type of answer to 'Guess' by\n                    clicking on the 'Clue' button in the card.\n                  </>\n                }\n              />\n            )\n          }\n        />\n      </Instruction>\n    </Step>\n  );\n}\n","// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Card } from 'components/cards';\n\ntype SecretWordCardProps = {\n  secretWord: string;\n};\n\nexport function SecretWordCard({ secretWord }: SecretWordCardProps) {\n  const { translate } = useLanguage();\n\n  return (\n    <Card header={translate('Palavra Secreta', 'Secret Word')} color=\"red\">\n      {secretWord}\n    </Card>\n  );\n}\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Internal\nimport { CategoryCard } from './CategoryCard';\nimport { SecretWordCard } from './SecretWordCard';\n\ntype CategoryWordGroupProps = {\n  categories: string[];\n  secretWord: string;\n  showSecretWord?: boolean;\n};\n\nexport function CategoryWordGroup({ categories, secretWord, showSecretWord }: CategoryWordGroupProps) {\n  return (\n    <Space className=\"full-width space-container\">\n      <CategoryCard categories={categories} />\n      {showSecretWord && <SecretWordCard secretWord={secretWord} />}\n    </Space>\n  );\n}\n","// Types\nimport type { GamePlayers } from 'types/player';\n// Components\nimport { Translate } from 'components/language';\nimport { WaitingRoom } from 'components/players';\nimport { Step } from 'components/steps';\n// Internal\nimport type { Clues, BoardObject } from './utils/types';\nimport { Board } from './components/Board';\nimport { CategoryWordGroup } from './components/CategoryWordGroup';\n\ntype StepBossWaitingProps = {\n  players: GamePlayers;\n  board: BoardObject;\n  clues: Clues;\n  secretWord: string;\n  categories: string[];\n};\n\nexport function StepBossWaiting({ players, board, clues, secretWord, categories }: StepBossWaitingProps) {\n  return (\n    <Step fullWidth>\n      <WaitingRoom\n        players={players}\n        title={<Translate pt=\"Aguarde\" en=\"Please wait\" />}\n        instruction={\n          <Translate pt=\"Os jogadores estão escrevendo dicas\" en=\"The players are writing clues\" />\n        }\n      />\n\n      <CategoryWordGroup categories={categories} secretWord={secretWord} showSecretWord />\n\n      <Board players={players} clues={clues} board={board} />\n    </Step>\n  );\n}\n","// Types\nimport type { PhaseProps } from 'types/game';\n// Hooks\nimport { useStep } from 'hooks/useStep';\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { DiscussionIcon } from 'icons/DiscussionIcon';\n// Components\nimport { Translate } from 'components/language';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { RoundAnnouncement } from 'components/round';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction, RoundsLeftInstruction } from 'components/text';\nimport { ViewOr } from 'components/views';\n// Internal\nimport { useOnSubmitPlayerCluesAPIRequest } from './utils/api-requests';\nimport { Board } from './components/Board';\nimport { StepPlayerClue } from './StepPlayerClue';\nimport { StepBossWaiting } from './StepBossWaiting';\n\nexport function PhasePlayersClues({ state, players }: PhaseProps) {\n  const { step, setStep, goToNextStep } = useStep(0);\n  const [boss, isUserTheBoss] = useWhichPlayerIsThe('bossId', state, players);\n\n  const onSubmitClues = useOnSubmitPlayerCluesAPIRequest(setStep);\n\n  return (\n    <PhaseContainer phase={state?.phase} allowedPhase={PHASES.VENDAVAL_DE_PALPITE.PLAYERS_CLUES}>\n      <StepSwitcher\n        step={step}\n        players={players}\n        waitingRoom={{ content: <Board players={players} clues={state.clues} board={state.board} /> }}\n      >\n        {/* Step 0 */}\n        <RoundAnnouncement round={state?.round} onPressButton={goToNextStep} buttonText=\" \" time={5}>\n          <RoundsLeftInstruction round={state.round} />\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <PhaseAnnouncement\n          icon={<DiscussionIcon />}\n          title={<Translate pt=\"Reunião\" en=\"Meeting\" />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          duration={5}\n          type=\"block\"\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  O chefe quer a próxima ideia brilhante! Escreva dicas para tentar desvendar o que o chefe\n                  quer! Discuta com os outros funcionários e evitem escrever a mesma coisa. Ideias contrárias\n                  não ajudam muito.\n                </>\n              }\n              en={<>TODO</>}\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <ViewOr condition={isUserTheBoss}>\n          <StepBossWaiting\n            secretWord={state.secretWord}\n            board={state.board}\n            clues={state.clues}\n            categories={state.categories}\n            players={players}\n          />\n\n          <StepPlayerClue\n            secretWord={state.secretWord}\n            board={state.board}\n            clues={state.clues}\n            categories={state.categories}\n            onSubmitClues={onSubmitClues}\n            boss={boss}\n            finalAnswersLeft={state.finalAnswersLeft}\n            cluesPerPlayer={state.cluesPerPlayer}\n            players={players}\n            round={state.round}\n          />\n        </ViewOr>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","// Ant Design Resources\nimport { Alert, Button, Divider } from 'antd';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n\ntype OutcomeOptionsProps = {\n  outcome?: string;\n  onSubmitOutcome: Function;\n  finalAnswersLeft: number;\n};\n\nexport function OutcomeOptions({ outcome, onSubmitOutcome, finalAnswersLeft }: OutcomeOptionsProps) {\n  return (\n    <>\n      <Divider />\n\n      <Instruction contained>\n        {outcome && outcome !== 'CONTINUE' ? (\n          <Alert\n            type=\"warning\"\n            showIcon\n            message={\n              <>\n                <Avatar id=\"A\" size=\"small\" />{' '}\n                <Translate\n                  pt=\"Meu algorítimo me diz que um dos casos abaixo aconteceu, selecione o apropriado:\"\n                  en=\"According to my calculations, one of the cases below happened, select the appropriate case:\"\n                />\n              </>\n            }\n          />\n        ) : (\n          <Translate\n            pt=\"Se qualquer um dos casos abaixo acontecer, clique no botão apropriado\"\n            en=\"If any of the cases below trigger, click the appropriate button\"\n          />\n        )}\n      </Instruction>\n\n      <div className=\"v-case-container\">\n        <div className=\"v-case\">\n          <Instruction contained>\n            <Translate\n              pt=\"Alguém escreveu a resposta numa carta VERMELHA\"\n              en=\"Someone wrote the answer in a RED card\"\n            />\n          </Instruction>\n          <Button\n            type=\"primary\"\n            ghost\n            onClick={() =>\n              onSubmitOutcome({\n                outcome: 'WIN',\n              })\n            }\n          >\n            <Translate pt=\"Ganhamos!\" en=\"Win!\" />\n          </Button>\n        </div>\n        <div className=\"v-case\">\n          <Instruction contained>\n            <Translate\n              pt=\"Alguém escreveu a resposta numa carta BRANCA\"\n              en=\"Someone wrote the answer in a WHITE card\"\n            />\n          </Instruction>\n          <Button\n            danger\n            ghost\n            onClick={() =>\n              onSubmitOutcome({\n                outcome: 'FAIL',\n              })\n            }\n          >\n            <Translate pt=\"Perdermos\" en=\"Lose\" />\n          </Button>\n        </div>\n        <div className=\"v-case\">\n          <Instruction contained>\n            <Translate\n              pt=\"Jogadores usaram mais respostas do que tinham\"\n              en=\"Players wrote more Guesses than they had available\"\n            />{' '}\n            ({finalAnswersLeft})\n          </Instruction>\n          <Button\n            type=\"primary\"\n            danger\n            ghost\n            onClick={() =>\n              onSubmitOutcome({\n                outcome: 'FAIL',\n              })\n            }\n            disabled={finalAnswersLeft >= 0}\n          >\n            <Translate pt=\"Perdermos\" en=\"Lose\" />\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\nimport { Button, Space, Switch } from 'antd';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n// Internal\nimport type { Clues, BoardEntry } from '../utils/types';\n\ntype ClueEvaluationProps = {\n  clues: Clues;\n  latestBoardEntry: BoardEntry;\n  onSubmitEvaluation: Function;\n};\n\nexport function ClueEvaluation({ clues, latestBoardEntry, onSubmitEvaluation }: ClueEvaluationProps) {\n  const [evaluation, setEvaluation] = useState<BooleanDictionary>(\n    latestBoardEntry.clues.reduce((acc: BooleanDictionary, clueId) => {\n      acc[clueId] = false;\n      return acc;\n    }, {})\n  );\n\n  const updateEvaluation = (clueId: string, value: boolean) => {\n    setEvaluation((s) => ({ ...s, [clueId]: value }));\n  };\n\n  return (\n    <>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Avalie as dicas tem ou não a ver com a palavra secreta.\n              <br /> Você pode fazer perguntar para clarificar o que os jogadores quiseram dizer.\n            </>\n          }\n          en={\n            <>\n              Evaluate if each of the current clues are related to the secret word. You can ask clarifying\n              questions about any of them.\n            </>\n          }\n        />\n      </Instruction>\n\n      <ul className=\"v-boss-evaluation\">\n        {Object.keys(evaluation).map((clueId) => {\n          return (\n            <li className=\"v-boss-evaluation__item\">\n              <Switch\n                checkedChildren={\n                  <>\n                    <CheckOutlined /> <Translate pt=\"Tem a ver\" en=\"Relates\" />\n                  </>\n                }\n                unCheckedChildren={\n                  <>\n                    <CloseOutlined /> <Translate pt=\"Nada a ver\" en=\"Does not relate\" />\n                  </>\n                }\n                onChange={(e) => updateEvaluation(clueId, e)}\n              />\n\n              <span className=\"v-boss-evaluation__clue\">{clues[clueId].clue}</span>\n            </li>\n          );\n        })}\n\n        <Space className=\"space-container\">\n          <Button type=\"primary\" size=\"large\" onClick={() => onSubmitEvaluation({ evaluation })}>\n            <Translate pt=\"Enviar avaliação\" en=\"Submit evaluation\" />\n          </Button>\n        </Space>\n      </ul>\n    </>\n  );\n}\n","// Types\nimport type { GameRound } from 'types/game';\nimport type { GamePlayers } from 'types/player';\n// Components\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\n// Internal\nimport type { Clues, BoardObject } from './utils/types';\nimport { Board } from './components/Board';\nimport { CategoryWordGroup } from './components/CategoryWordGroup';\nimport { OutcomeOptions } from './components/OutcomeOptions';\nimport { ClueEvaluation } from './components/ClueEvaluation';\n\ntype StepBossEvaluationProps = {\n  secretWord: string;\n  categories: string[];\n  onSubmitEvaluation: Function;\n  onSubmitOutcome: Function;\n  board: BoardObject;\n  clues: Clues;\n  finalAnswersLeft: number;\n  players: GamePlayers;\n  round: GameRound;\n  outcome?: string;\n};\n\nexport function StepBossEvaluation({\n  secretWord,\n  categories,\n  onSubmitEvaluation,\n  onSubmitOutcome,\n\n  board,\n  clues,\n  finalAnswersLeft,\n  players,\n  round,\n  outcome,\n}: StepBossEvaluationProps) {\n  const latestBoardEntry = board[round.current];\n\n  return (\n    <Step fullWidth>\n      <Title size=\"medium\">\n        <Translate pt=\"Avaliação\" en=\"Avaliação\" />\n      </Title>\n\n      <CategoryWordGroup categories={categories} secretWord={secretWord} showSecretWord />\n\n      <Board board={board} clues={clues} players={players} />\n\n      <ClueEvaluation\n        clues={clues}\n        latestBoardEntry={latestBoardEntry}\n        onSubmitEvaluation={onSubmitEvaluation}\n      />\n\n      <OutcomeOptions\n        outcome={outcome}\n        onSubmitOutcome={onSubmitOutcome}\n        finalAnswersLeft={finalAnswersLeft}\n      />\n    </Step>\n  );\n}\n","// Ant Design Resources\nimport { Alert } from 'antd';\n// Types\nimport type { GamePlayers, GamePlayer } from 'types/player';\n// Components\nimport { Avatar, AvatarName } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\n// Internal\nimport type { Clues, BoardObject } from './utils/types';\nimport { Board } from './components/Board';\nimport { CategoryCard } from './components/CategoryCard';\n// Types\n\ntype StepPlayersWaitEvaluationProps = {\n  categories: string[];\n  board: BoardObject;\n  clues: Clues;\n  finalAnswersLeft: number;\n  players: GamePlayers;\n  boss: GamePlayer;\n};\n\nexport function StepPlayersWaitEvaluation({\n  categories,\n  board,\n  clues,\n  finalAnswersLeft,\n  boss,\n  players,\n}: StepPlayersWaitEvaluationProps) {\n  return (\n    <Step fullWidth>\n      <Title size=\"medium\">\n        <Translate pt=\"Avaliação\" en=\"Avaliação\" />\n      </Title>\n\n      <CategoryCard categories={categories} />\n\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Veja as pistas escrita por outros jogadores e aguarde enquanto <AvatarName player={boss} /> as\n              avalia.\n            </>\n          }\n          en={\n            <>\n              Check the clues written by other players while <AvatarName player={boss} /> is evaluating them.\n            </>\n          }\n        />\n      </Instruction>\n\n      <Alert\n        type=\"warning\"\n        showIcon\n        message={\n          <>\n            <Avatar id=\"A\" size=\"small\" />\n            <Translate\n              pt={<>O grupo usou até agora {3 - finalAnswersLeft}/3 chances de respostas finais</>}\n              en={<>The group has used so far {3 - finalAnswersLeft}/3 chances of final answers</>}\n            />\n          </>\n        }\n      />\n\n      <Board board={board} clues={clues} players={players} />\n    </Step>\n  );\n}\n","// Types\nimport type { PhaseProps } from 'types/game';\n// Hooks\nimport { useStep } from 'hooks/useStep';\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { LoupeIcon } from 'icons/LoupeIcon';\n// Components\nimport { Translate } from 'components/language';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { ViewOr } from 'components/views';\n// Internal\nimport { useOnSubmitEvaluationAPIRequest, useOnSubmitOutcomeAPIRequest } from './utils/api-requests';\nimport { StepBossEvaluation } from './StepBossEvaluation';\nimport { StepPlayersWaitEvaluation } from './StepPlayersWaitEvaluation';\n\nexport function PhaseClueEvaluations({ state, players }: PhaseProps) {\n  const { step, setStep, goToNextStep } = useStep(0);\n  const [boss, isUserTheBoss] = useWhichPlayerIsThe('bossId', state, players);\n\n  const onSubmitEvaluation = useOnSubmitEvaluationAPIRequest(setStep);\n  const onSubmitOutcome = useOnSubmitOutcomeAPIRequest(setStep);\n\n  return (\n    <PhaseContainer phase={state?.phase} allowedPhase={PHASES.VENDAVAL_DE_PALPITE.CLUE_EVALUATIONS}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<LoupeIcon />}\n          title={<Translate pt=\"Avaliação das Pistas\" en=\"Clue Evaluation\" />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          duration={5}\n          type=\"block\"\n        >\n          <Instruction>\n            <Translate\n              pt={<>Os jogadores agora escrevem dicas para tentar adivinhar a palavra secreta.</>}\n              en={<>Players now write clues to try to guess the secret word.</>}\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <ViewOr condition={isUserTheBoss}>\n          <StepBossEvaluation\n            secretWord={state.secretWord}\n            board={state.board}\n            clues={state.clues}\n            categories={state.categories}\n            onSubmitEvaluation={onSubmitEvaluation}\n            onSubmitOutcome={onSubmitOutcome}\n            finalAnswersLeft={state.finalAnswersLeft}\n            players={players}\n            round={state.round}\n            outcome={state.outcome}\n          />\n\n          <StepPlayersWaitEvaluation\n            board={state.board}\n            clues={state.clues}\n            categories={state.categories}\n            boss={boss}\n            finalAnswersLeft={state.finalAnswersLeft}\n            players={players}\n          />\n        </ViewOr>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Types\nimport type { PhaseProps } from 'types/game';\n// Icons\nimport { GarbageIcon } from 'icons/GarbageIcon';\nimport { QualitySealIcon } from 'icons/QualitySealIcon';\nimport { TheEndIcon } from 'icons/TheEndIcon';\nimport { TrophyIcon } from 'icons/TrophyIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { GameOverWrapper } from 'components/game-over';\nimport { Translate } from 'components/language';\n// Internal\nimport { Board } from './components/Board';\nimport { CategoryWordGroup } from './components/CategoryWordGroup';\n\nexport function PhaseGameOver({ state, players }: PhaseProps) {\n  return (\n    <GameOverWrapper\n      state={state}\n      players={players}\n      announcementIcon={state.outcome === 'WIN' ? <TrophyIcon /> : <TheEndIcon />}\n      rateWidgetCustomText={<Translate pt=\"Sugira palavras-secretas\" en=\"Suggest secret words\" />}\n    >\n      <Space className=\"space-container\" direction=\"vertical\" align=\"center\">\n        {state.outcome === 'WIN' ? (\n          <>\n            <IconAvatar icon={<QualitySealIcon />} size={100} shape=\"square\" />\n            <Translate pt=\"VITÓRIA\" en=\"WIN\" />\n          </>\n        ) : (\n          <>\n            <IconAvatar icon={<GarbageIcon />} size={100} shape=\"square\" />\n            <Translate pt=\"DERROTA\" en=\"LOSE\" />\n          </>\n        )}\n      </Space>\n      <CategoryWordGroup categories={state.categories} secretWord={state.secretWord} showSecretWord />\n      <Board players={players} clues={state.clues} board={state.board} />\n    </GameOverWrapper>\n  );\n}\n","// Ant Design Resources\nimport { ConfigProvider } from 'antd';\n// Types\nimport type { GameState } from 'types/game';\n// Utils\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { PageError } from 'components/errors';\nimport { LoadingPage } from 'components/loaders';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { Session } from 'components/session';\n// Internal\nimport { PhaseBossPlayerSelection } from './PhaseBossPlayerSelection';\nimport { PhaseSecretWordSelection } from './PhaseSecretWordSelection';\nimport { PhasePlayersClues } from './PhasePlayersClues';\nimport { PhaseClueEvaluations } from './PhaseClueEvaluations';\nimport { PhaseGameOver } from './PhaseGameOver';\n// Sass\nimport 'assets/fonts/architects-daughter.scss';\nimport './utils/styles.scss';\n// Fonts\n\nfunction getActiveComponent(state: GameState) {\n  // If phase is not defined, it is likely that the game is still loading\n  if (state && !state.phase) return LoadingPage;\n\n  switch (state.phase) {\n    case PHASES.DEFAULT.LOBBY:\n      return PhaseLobby;\n    case PHASES.DEFAULT.RULES:\n      return PhaseRules;\n    case PHASES.DEFAULT.SETUP:\n      return PhaseSetup;\n    case PHASES.VENDAVAL_DE_PALPITE.BOSS_SELECTION:\n      return PhaseBossPlayerSelection;\n    case PHASES.VENDAVAL_DE_PALPITE.SECRET_WORD_SELECTION:\n      return PhaseSecretWordSelection;\n    case PHASES.VENDAVAL_DE_PALPITE.PLAYERS_CLUES:\n      return PhasePlayersClues;\n    case PHASES.VENDAVAL_DE_PALPITE.CLUE_EVALUATIONS:\n      return PhaseClueEvaluations;\n    case PHASES.DEFAULT.GAME_OVER:\n      return PhaseGameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionVendavalDePalpite() {\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorPrimary: THEME_COLORS.DEFAULT,\n          colorLink: THEME_COLORS.DEFAULT,\n        },\n      }}\n    >\n      <Session gameCollection={GAME_COLLECTION.VENDAVAL_DE_PALPITE} getActiveComponent={getActiveComponent} />\n    </ConfigProvider>\n  );\n}\n\nexport default SessionVendavalDePalpite;\n","export function GarbageIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#f7f3f1\"\n        d=\"M199.02 408.89h-19.67a5 5 0 01-5-5V290.5a5 5 0 015-5h19.67a5 5 0 015 5v113.4a5 5 0 01-5 5z\"\n      ></path>\n      <path\n        fill=\"#e38523\"\n        d=\"M411.84 215.02c-1.39-9.14-9.04-16.98-18.13-18.6-9.15-1.62-18.34 3.41-23.99 10.73a5.25 5.25 0 01-8.34 0c-5.64-7.32-14.84-12.35-23.98-10.72-9.1 1.61-16.75 9.45-18.13 18.59-.94 6.17.79 12.55 3.94 17.94 5.86 10.03 16.25 15.4 23.54 24.12h37.6c7.3-8.72 17.68-14.1 23.55-24.12 3.14-5.39 4.87-11.77 3.94-17.94z\"\n      ></path>\n      <path\n        fill=\"#e9a52d\"\n        d=\"M365.55 245.72c-39.32 0-71.2 55.63-71.2 91.73s31.88 65.38 71.2 65.38 71.2-29.27 71.2-65.37-31.88-91.74-71.2-91.74z\"\n      ></path>\n      <path\n        fill=\"#e38523\"\n        d=\"M388.03 251.79c18.94 19.47 31.4 49.66 31.4 72.23 0 36.11-31.88 65.38-71.2 65.38-13.4 0-25.92-3.4-36.62-9.3 13.05 13.9 32.37 22.73 53.94 22.73 39.32 0 71.2-29.27 71.2-65.38 0-28.89-20.42-70.28-48.72-85.66z\"\n      ></path>\n      <path\n        fill=\"#5ea570\"\n        d=\"M104.99 268.48a18.95 18.95 0 00-19.37-9.33c-7.57 1.33-13.3 7.84-15.62 15.13a4.34 4.34 0 01-6.49 2.36c-6.46-4.09-15.04-5.4-21.7-1.55a18.95 18.95 0 00-8.83 19.6c1.02 5.07 4.17 9.54 8.15 12.84 7.4 6.14 17 7.38 25.13 12.1l29.26-10.65c3.2-8.85 9.76-15.97 11.48-25.43.93-5.08.46-10.53-2.01-15.07z\"\n      ></path>\n      <path\n        fill=\"#6dc17d\"\n        d=\"M78.8 308.56c-36.94 13.45-47.87 76.62-35.52 110.55s52.31 50.54 89.26 37.1 56.89-51.86 44.54-85.8-61.33-75.3-98.28-61.85z\"\n      ></path>\n      <path\n        fill=\"#a87c72\"\n        d=\"M476.3 403.63a4.19 4.19 0 01-3.12-4.88 51.27 51.27 0 00-64.43-59.42 6.9 6.9 0 01-7.18-2.2 98.46 98.46 0 00-75.29-34.88 98.29 98.29 0 00-65.88 25.21 6.26 6.26 0 01-6.31 1.21 78.15 78.15 0 00-26.5-4.6 78.24 78.24 0 00-61.63 29.96 3.86 3.86 0 01-5.7.43 42.62 42.62 0 00-65.02 7.93 5.7 5.7 0 01-5.62 2.56 48.62 48.62 0 00-54.36 35.59 6.8 6.8 0 01-4.1 4.56A37.38 37.38 0 007.5 439.87v23.96a5 5 0 005 5h487a5 5 0 005-5v-23.96a37.36 37.36 0 00-28.2-36.24z\"\n      ></path>\n      <path\n        fill=\"#9a695e\"\n        d=\"M476.3 403.63a4.19 4.19 0 01-3.12-4.88 51.27 51.27 0 00-62.74-59.88 51.28 51.28 0 0137.74 59.88 4.19 4.19 0 003.12 4.88 37.36 37.36 0 0128.2 36.24v23.95a5 5 0 01-5 5h25a5 5 0 005-5v-23.95a37.36 37.36 0 00-28.2-36.24z\"\n      ></path>\n      <path\n        fill=\"#de5791\"\n        d=\"M249.31 269.6l8.26 22.67 33.77-12.3-8.26-22.67a7.59 7.59 0 00-9.72-4.53l-19.51 7.1a7.59 7.59 0 00-4.54 9.72z\"\n      ></path>\n      <path\n        fill=\"#91dafa\"\n        d=\"M318.11 322.21c-1.78-4.88-.66-10.16 2.5-14.23a7.77 7.77 0 001.04-7.4l-4.74-13.04a15.85 15.85 0 00-20.32-9.48l-44.28 16.12a15.85 15.85 0 00-9.47 20.32l4.74 13.03a7.77 7.77 0 005.57 5c5.03 1.1 9.27 4.42 11.05 9.3s.66 10.16-2.49 14.23a7.77 7.77 0 00-1.05 7.4l23.96 65.84 74.07-26.96-23.96-65.83a7.77 7.77 0 00-5.57-5c-5.02-1.09-9.27-4.41-11.05-9.3z\"\n      ></path>\n      <path\n        fill=\"#6cbff8\"\n        d=\"M334.73 336.5a7.77 7.77 0 00-5.57-5c-5.02-1.08-9.27-4.4-11.05-9.29s-.66-10.16 2.5-14.23a7.77 7.77 0 001.04-7.4l-4.74-13.04a15.85 15.85 0 00-20.32-9.48l-18.14 6.6c7.97-2.9 16.86 1.42 19.86 9.65l4.74 13.03c.9 2.5.61 5.3-.95 7.38-3.03 4.02-4.06 9.27-2.28 14.15s5.94 8.24 10.84 9.37a7.84 7.84 0 015.47 5.04l23.96 65.83 18.6-6.77z\"\n      ></path>\n      <path\n        fill=\"#a87c72\"\n        d=\"M410.44 432.03a26.44 26.44 0 00-31.2-26 4.75 4.75 0 01-5.44-3.55 45.62 45.62 0 00-82.3-13.59 5.38 5.38 0 01-7.04 1.77 26.45 26.45 0 00-39.09 23.23v35h165.07z\"\n      ></path>\n      <path d=\"M481.06 397.2a58.85 58.85 0 00-36.92-63.4 95.22 95.22 0 00-3.21-19.66 7.5 7.5 0 00-14.5 3.86 86.2 86.2 0 012.36 12.12 58.59 58.59 0 00-21.72 1.9 106.05 106.05 0 00-79.55-37.26l-3.56-9.8a23.39 23.39 0 00-1.78-3.78c10.27-14.3 25.77-27.96 43.37-27.96 20.13 0 37.28 17.5 47.81 34.63a7.5 7.5 0 0012.78-7.85c-7.31-11.9-15.79-21.52-24.9-28.52 4.77-4.14 9.53-8.59 13.13-14.74 4.27-7.3 6-15.42 4.89-22.85-1.86-12.24-12.06-22.69-24.24-24.85-10.3-1.84-21.6 2.6-29.47 11.4-7.86-8.8-19.16-13.24-29.45-11.4-12.2 2.16-22.4 12.61-24.24 24.85-1.13 7.42.6 15.53 4.87 22.85 3.6 6.17 8.39 10.62 13.18 14.76a98.34 98.34 0 00-19.11 19.84 23.28 23.28 0 00-14.95-.9l-5.72-15.7a15.1 15.1 0 00-19.34-9.03l-19.5 7.1c-3.8 1.38-6.82 4.15-8.52 7.8s-1.88 7.76-.5 11.54l5.71 15.72a23.15 23.15 0 00-11.41 11.33 23.19 23.19 0 00-.81 17.75 86.77 86.77 0 00-24.24 1.11v-27.55c0-6.9-5.6-12.5-12.5-12.5h-19.67c-6.9 0-12.5 5.6-12.5 12.5v48.47c-10.1-12.15-22.8-22.8-36.02-30.04a88.17 88.17 0 00-22.46-8.8c2.46-4.44 4.95-9.42 6-15.24 1.32-7.17.33-14.28-2.8-20.02a26.28 26.28 0 00-27.25-13.12c-8.7 1.53-16.15 7.8-20.12 16.7-8.7-4.2-18.62-4.22-26.14.14-9.33 5.41-14.56 17-12.43 27.56 1.28 6.39 5.09 12.47 10.7 17.14 4.57 3.79 9.7 6 14.43 7.82a85.38 85.38 0 00-10.06 17.51c-6.65 15.35-10.08 33.6-9.74 51.62a55.84 55.84 0 00-2.85 8A44.63 44.63 0 000 439.86v23.96c0 6.9 5.6 12.5 12.5 12.5h86.87a7.5 7.5 0 100-15H15v-21.46a29.71 29.71 0 0118.93-27.8 14.34 14.34 0 008.58-9.61 37.14 37.14 0 012.81-7.53 41.14 41.14 0 0143.2-22.56 13.26 13.26 0 0013.02-5.9 35.04 35.04 0 0129.52-16.08 35 35 0 0124.05 9.52 11.39 11.39 0 0016.74-1.24 71 71 0 0170.12-25.62 15.01 15.01 0 009.6 6.81c2.71.59 4.75 2.24 5.58 4.54.84 2.29.34 4.86-1.37 7.06a15.35 15.35 0 00-2.17 14.58l5.9 16.22a34 34 0 00-21.64 31.63v15.45a7.5 7.5 0 1015 0V413.9a18.97 18.97 0 0128-16.65 12.92 12.92 0 0016.9-4.23 38.02 38.02 0 0131.87-17.23 38.08 38.08 0 0136.9 28.57 12.3 12.3 0 0014.04 9.05 18.96 18.96 0 0122.36 18.63v3a7.5 7.5 0 1015 0v-3a33.97 33.97 0 00-37.54-33.75 53.03 53.03 0 00-26.77-31.78l-11.86-32.57a15.17 15.17 0 00-11.02-9.75c-2.72-.6-4.76-2.25-5.6-4.54-.83-2.29-.33-4.86 1.36-7.05.68-.87 1.25-1.82 1.71-2.82a91.08 91.08 0 0167.62 32.2 14.41 14.41 0 0014.99 4.57 43.82 43.82 0 0155 50.7 11.68 11.68 0 008.63 13.66A29.82 29.82 0 01497 439.87v21.46H134.37a7.5 7.5 0 100 15H499.5c6.9 0 12.5-5.6 12.5-12.5v-23.96a44.8 44.8 0 00-30.94-42.67zM196.52 293v29.35a84.97 84.97 0 00-14.67 7.38V293zm-156.19.2a11.54 11.54 0 015.25-11.62c4.23-2.45 10.03-1.06 13.93 1.42a11.8 11.8 0 0010.41 1.1 11.78 11.78 0 007.23-7.55c1.4-4.37 4.95-9.17 9.76-10.01a11.54 11.54 0 0111.5 5.52c1.48 2.73 1.91 6.33 1.21 10.15-.78 4.32-3.09 8.4-5.53 12.73-.65 1.15-1.3 2.33-1.95 3.53-5.53.2-10.85 1.2-15.9 3.04a51.38 51.38 0 00-14.1 7.9c-5.99-2.38-11.98-4.13-16.22-7.65-3-2.48-4.98-5.52-5.59-8.55zm49.24 64.17a56.06 56.06 0 00-42.29 11.77c4.45-28.7 19.1-48.08 34.08-53.53 19.2-6.99 44.04 4.24 63.06 21.59a50.24 50.24 0 00-13.36-1.81 49.97 49.97 0 00-41.49 21.98zm240.12-128.2c-2.55-4.36-3.62-8.98-3-13.03.9-5.97 6.07-11.27 12.03-12.33 5.67-1 12.23 2.1 16.72 7.92 2.44 3.17 6.13 4.98 10.11 4.98s7.67-1.81 10.1-4.98c4.5-5.82 11.07-8.92 16.74-7.91 5.95 1.05 11.13 6.35 12.03 12.32.61 4.04-.46 8.67-3 13.04-3.18 5.42-8.47 9.61-13.66 14.1a53.19 53.19 0 00-22.21-5.06 53.04 53.04 0 00-22.18 5.08c-5.13-4.43-10.52-8.7-13.68-14.13zm-73.28 37.74l19.51-7.1c.05-.02.1 0 .12.06l5.68 15.62-19.67 7.16-5.69-15.62c-.01-.04.01-.1.05-.12zm71.1 71.9c.02.02.12.1.17.26l8.03 22.06a52.98 52.98 0 00-49.4 22.06 34 34 0 00-11.62-3.11l-6.99-19.19c-.05-.15-.03-.27-.06-.24 4.85-6.27 6.2-14.26 3.61-21.38-2.59-7.13-8.76-12.4-16.44-14.05a.58.58 0 01-.18-.26l-4.74-13.03a8.3 8.3 0 01.27-6.4 8.28 8.28 0 014.72-4.3l44.27-16.12a8.37 8.37 0 0110.71 5l4.75 13.03.02.11c0 .06 0 .11.02.16-4.84 6.27-6.18 14.26-3.59 21.37a22.3 22.3 0 0016.45 14.04zM167.72 146.83a7.47 7.47 0 0010.52-1.3 7.5 7.5 0 00-1.3-10.53c-6.48-5.05-6.74-15.99-4.12-24.59 1.5-4.94 3.75-9.74 6.13-14.81 2.69-5.75 5.47-11.7 7.3-18.2 5.35-19.12-1.74-34.09-11.13-40.44a7.5 7.5 0 00-8.4 12.42c6.81 4.61 7.4 15.66 5.08 23.97-1.49 5.31-3.9 10.45-6.44 15.89-2.5 5.33-5.07 10.84-6.89 16.8-6.1 20.03 1.17 34.5 9.25 40.79zm83.85 0a7.47 7.47 0 0010.52-1.3 7.5 7.5 0 00-1.3-10.53c-6.48-5.05-6.74-15.99-4.12-24.59 1.5-4.94 3.75-9.74 6.13-14.81 2.69-5.75 5.47-11.7 7.3-18.2 5.35-19.12-1.74-34.09-11.13-40.44a7.5 7.5 0 00-8.4 12.43c6.8 4.6 7.4 15.65 5.08 23.96-1.49 5.31-3.9 10.45-6.44 15.89-2.5 5.33-5.07 10.84-6.9 16.8-6.09 20.03 1.18 34.5 9.26 40.79zm83.85 0a7.47 7.47 0 0010.52-1.3 7.5 7.5 0 00-1.3-10.53c-6.48-5.05-6.74-15.99-4.12-24.59 1.5-4.94 3.75-9.74 6.13-14.81 2.69-5.75 5.47-11.7 7.3-18.2 5.35-19.12-1.73-34.09-11.13-40.44a7.5 7.5 0 00-8.4 12.42c6.81 4.61 7.4 15.66 5.08 23.97-1.49 5.31-3.9 10.45-6.44 15.89-2.5 5.33-5.07 10.84-6.89 16.8-6.1 20.03 1.17 34.5 9.25 40.79z\"></path>\n    </svg>\n  );\n}\n","export function LoupeIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffd88e\"\n        d=\"M19.45 492.55a32.26 32.26 0 0045.63 0l126.36-126.36-45.63-45.63L19.45 446.92a32.26 32.26 0 000 45.63z\"\n      ></path>\n      <path\n        fill=\"#fff\"\n        d=\"M169.13 259.72l-23.82 23.83a25.8 25.8 0 000 36.5l46.64 46.64a25.8 25.8 0 0036.5 0l23.83-23.82z\"\n      ></path>\n      <circle cx=\"327.65\" cy=\"184.35\" r=\"174.35\" fill=\"#a0c8ff\"></circle>\n      <circle cx=\"327.65\" cy=\"184.35\" r=\"122\" fill=\"#dfecff\"></circle>\n      <path d=\"M327.65 52.35c-72.78 0-132 59.21-132 132s59.22 132 132 132 132-59.22 132-132c0-72.79-59.21-132-132-132zm0 20c61.76 0 112 50.24 112 112s-50.24 112-112 112-112-50.24-112-112 50.25-112 112-112z\"></path>\n      <path d=\"M388.6 123.4a10 10 0 01-14.15 14.14c-12.5-12.5-29.12-19.38-46.8-19.38s-34.3 6.88-46.8 19.38a9.97 9.97 0 01-14.14 0 10 10 0 010-14.14 85.62 85.62 0 0160.94-25.24 85.63 85.63 0 0160.95 25.24z\"></path>\n      <path d=\"M0 469.74c0 11.29 4.4 21.9 12.38 29.88S30.98 512 42.26 512s21.9-4.4 29.89-12.38L192.3 379.46a35.83 35.83 0 0043.21-5.7l19.84-19.84a183.32 183.32 0 0072.3 14.78C429.3 368.7 512 286 512 184.35c0-83.63-56.4-156.94-137.18-178.26a10 10 0 00-5.1 19.34c72 19 122.28 84.36 122.28 158.92 0 90.62-73.73 164.35-164.35 164.35S163.3 274.97 163.3 184.35c0-74.56 50.28-139.91 122.28-158.92a10 10 0 00-5.1-19.33C199.7 27.42 143.3 100.72 143.3 184.35c0 25.64 5.27 50.08 14.78 72.29l-19.85 19.84a35.87 35.87 0 00-5.7 43.21L12.39 439.85A41.99 41.99 0 000 469.74zm199.02-110.12l-46.64-46.64a15.83 15.83 0 010-22.36l15.1-15.1c16.4 28.7 40.3 52.6 69 69l-15.1 15.1a15.83 15.83 0 01-22.36 0zM20 469.74c0-5.95 2.32-11.54 6.52-15.74l119.3-119.3 31.48 31.49L58 485.48c-4.2 4.2-9.8 6.52-15.74 6.52a22.11 22.11 0 01-15.74-6.52c-4.2-4.2-6.52-9.8-6.52-15.74z\"></path>\n      <path d=\"M327.65 20c-2.63 0-5.21-1.07-7.07-2.93-1.86-1.86-2.93-4.44-2.93-7.07s1.07-5.21 2.93-7.07S325.02 0 327.65 0s5.21 1.07 7.07 2.93 2.93 4.44 2.93 7.07-1.07 5.21-2.93 7.07-4.44 2.93-7.07 2.93z\"></path>\n    </svg>\n  );\n}\n","export function QuestionIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#0573ce\"\n        d=\"M441.421 22.803H70.579C35.741 22.803 7.5 51.045 7.5 85.882v262.21c0 34.838 28.241 63.079 63.079 63.079h91.616l66.896 66.896c14.861 14.861 38.956 14.861 53.817 0l66.896-66.896h91.616c34.838 0 63.079-28.241 63.079-63.079V85.882c.001-34.837-28.24-63.079-63.078-63.079z\"\n      ></path>\n      <path\n        fill=\"#0067c5\"\n        d=\"M35.51 85.882v262.21c0 34.84 28.24 63.08 63.08 63.08H70.58c-34.84 0-63.08-28.24-63.08-63.08V85.882c0-34.84 28.24-63.08 63.08-63.08h28.01c-34.84 0-63.08 28.24-63.08 63.08zm234.5 400.66c-13.68 5.41-29.86 2.58-40.92-8.48l-66.89-66.89h20.665c4.697 0 9.201 1.865 12.522 5.186l61.713 61.704c3.8 3.8 8.21 6.63 12.91 8.48z\"\n      ></path>\n      <path\n        fill=\"#f9f7f8\"\n        d=\"M256.002 297.061c-14.574 0-26.39-11.815-26.39-26.39v-11.194c0-26.048 16.402-49.348 40.816-57.979 18.364-6.493 30.197-24.654 28.774-44.162-1.557-21.362-18.853-38.527-40.231-39.927-22.612-1.494-42.759 14.837-45.872 37.149a44.164 44.164 0 00-.419 6.076c0 14.574-11.815 26.39-26.39 26.39-14.574 0-26.39-11.815-26.39-26.39 0-4.468.312-8.966.926-13.369 6.914-49.552 51.539-85.807 101.592-82.522 47.518 3.112 85.961 41.269 89.423 88.756 3.146 43.161-23.098 83.361-63.82 97.76-3.368 1.191-5.631 4.494-5.631 8.219v11.194c.002 14.574-11.813 26.389-26.388 26.389zm0 78.522c-14.574 0-26.39-11.815-26.39-26.39v-.219c0-14.574 11.815-26.39 26.39-26.39 14.574 0 26.39 11.815 26.39 26.39v.219c0 14.575-11.815 26.39-26.39 26.39z\"\n      ></path>\n      <path\n        fill=\"#dedbee\"\n        d=\"M184.155 147.268a96.29 96.29 0 00-.923 13.366c0 10.387 5.997 19.376 14.723 23.674a26.227 26.227 0 01-11.665 2.715c-14.565 0-26.389-11.81-26.389-26.389 0-4.468.316-8.963.936-13.366 6.907-49.562 51.539-85.81 101.588-82.528 1.793.119 3.572.29 5.339.514-42.378 5.219-77.532 38.489-83.609 82.014zm109.603 54.228c-24.412 8.634-40.822 31.938-40.822 57.985v11.191c0 10.387 6.011 19.377 14.737 23.674a26.227 26.227 0 01-11.665 2.715c-14.579 0-26.389-11.81-26.389-26.389V259.48c0-26.046 16.398-49.351 40.822-57.985 18.362-6.498 30.185-24.649 28.762-44.157-1.331-18.348-14.275-33.599-31.451-38.41a43.132 43.132 0 0114.552-1.516c21.38 1.397 38.674 18.559 40.229 39.926 1.423 19.509-10.414 37.659-28.775 44.158zm-26.086 171.37a26.227 26.227 0 01-11.665 2.715c-14.579 0-26.389-11.81-26.389-26.389v-.224c0-14.565 11.81-26.389 26.389-26.389 4.192 0 8.146.975 11.665 2.715-8.726 4.31-14.737 13.3-14.737 23.674v.224c0 10.387 6.011 19.376 14.737 23.674z\"\n      ></path>\n      <path d=\"M256 496.692c-11.667 0-23.332-4.44-32.213-13.321l-64.693-64.704H70.58c-38.918 0-70.58-31.662-70.58-70.58V85.878c0-38.913 31.662-70.57 70.58-70.57h370.84c38.918 0 70.58 31.657 70.58 70.57v262.21c0 31.374-21.052 59.288-51.193 67.883a7.499 7.499 0 01-9.269-5.156 7.5 7.5 0 015.156-9.269c23.731-6.767 40.306-28.75 40.306-53.458V85.878c0-30.641-24.933-55.57-55.58-55.57H70.58C39.933 30.308 15 55.236 15 85.878v262.21c0 30.647 24.933 55.58 55.58 55.58h91.62c1.989 0 3.897.79 5.304 2.197l66.89 66.9c11.914 11.914 31.299 11.914 43.213 0l66.889-66.9a7.5 7.5 0 015.304-2.197h74.12a7.5 7.5 0 010 15h-71.013l-64.693 64.703c-8.881 8.881-20.548 13.321-32.214 13.321z\"></path>\n      <path d=\"M256 304.558c-18.687 0-33.89-15.203-33.89-33.89v-11.19c0-29.219 18.414-55.362 45.82-65.051 15.19-5.37 24.973-20.396 23.79-36.541-1.281-17.655-15.571-31.837-33.24-32.994-18.715-1.231-35.38 12.253-37.952 30.702a36.335 36.335 0 00-.348 5.044c0 18.687-15.203 33.89-33.89 33.89s-33.89-15.203-33.89-33.89c0-4.841.338-9.692 1.003-14.417a102.082 102.082 0 018.645-29.195 7.5 7.5 0 0113.584 6.362 87.145 87.145 0 00-7.374 24.918 88.583 88.583 0 00-.858 12.331c0 10.416 8.474 18.89 18.89 18.89s18.89-8.474 18.89-18.89c0-2.405.166-4.802.493-7.126 3.65-26.185 27.296-45.335 53.79-43.588 25.097 1.644 45.397 21.794 47.217 46.871 1.675 22.865-12.203 44.157-33.751 51.774-21.425 7.575-35.82 28.033-35.82 50.909v11.19c0 10.416 8.474 18.89 18.89 18.89s18.89-8.474 18.89-18.89v-11.19c0-6.901 4.273-13.047 10.633-15.292 37.546-13.274 61.742-50.343 58.837-90.142-3.189-43.774-38.626-78.945-82.43-81.812-24.875-1.633-49.509 7.462-67.584 24.956a7.499 7.499 0 01-10.605-.174 7.5 7.5 0 01.173-10.605c21.112-20.432 49.903-31.056 78.998-29.145 51.231 3.353 92.678 44.49 96.408 95.689 3.396 46.521-24.896 89.854-68.8 105.376-.314.111-.63.541-.63 1.149v11.19c.001 18.687-15.202 33.891-33.889 33.891zm.002 78.525c-18.687 0-33.89-15.203-33.89-33.89v-.219c0-18.687 15.203-33.89 33.89-33.89s33.89 15.203 33.89 33.89v.219c0 18.687-15.203 33.89-33.89 33.89zm0-52.998c-10.416 0-18.89 8.474-18.89 18.89v.219c0 10.416 8.474 18.89 18.89 18.89s18.89-8.474 18.89-18.89v-.219c0-10.416-8.474-18.89-18.89-18.89z\"></path>\n    </svg>\n  );\n}\n","export function TrophyIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M397.763 87.5h-98.509v213.476h98.509c58.855 0 106.737-47.882 106.737-106.738S456.618 87.5 397.763 87.5zm0 183.476h-68.509V117.5h68.509c42.381 0 76.738 34.357 76.738 76.738-.001 42.381-34.357 76.738-76.738 76.738zM114.237 87.5C55.382 87.5 7.5 135.382 7.5 194.238s47.882 106.738 106.737 106.738h98.509V87.5zm68.509 183.476h-68.509c-42.381 0-76.738-34.357-76.738-76.738S71.856 117.5 114.237 117.5h68.509zM314 419.5H198l15-91h86z\"\n      ></path>\n      <path fill=\"#fee97d\" d=\"M299 328.5h-30l15 91h30z\"></path>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M382.221 504.5H129.779a7 7 0 01-7-7v-11.629c0-22.091 17.909-40 40-40h186.442c22.091 0 40 17.909 40 40V497.5a7 7 0 01-7 7z\"\n      ></path>\n      <path\n        fill=\"#fee97d\"\n        d=\"M349.221 445.871h-30c22.092 0 40 17.909 40 40V497.5a7 7 0 01-7 7h30a7 7 0 007-7v-11.629c0-22.092-17.909-40-40-40zm-5 0H167.779v-3.629c0-22.091 17.909-40 40-40h96.442c22.091 0 40 17.909 40 40z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M304.221 402.241h-30c22.092 0 40 17.909 40 40v3.629h30v-3.629c0-22.091-17.909-40-40-40z\"\n      ></path>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M411.5 57.5h-311c-13.807 0-25-11.193-25-25s11.193-25 25-25h311c13.807 0 25 11.193 25 25s-11.193 25-25 25z\"\n      ></path>\n      <path\n        fill=\"#fee97d\"\n        d=\"M411.5 7.5h-30c13.807 0 25 11.193 25 25s-11.193 25-25 25h30c13.807 0 25-11.193 25-25s-11.193-25-25-25zM256 362.5c-83.119 0-150.5-67.381-150.5-150.5V57.5h301V212c0 83.119-67.381 150.5-150.5 150.5z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M376.5 57.5V212c0 78.056-59.424 142.229-135.5 149.757 4.934.488 9.937.743 15 .743 83.119 0 150.5-67.381 150.5-150.5V57.5z\"\n      ></path>\n      <circle cx=\"256\" cy=\"207.96\" r=\"94.169\" fill=\"#fff\"></circle>\n      <path\n        fill=\"#fee97d\"\n        d=\"M262.277 154.391l13.139 26.623a7 7 0 005.271 3.829l29.38 4.269c5.742.834 8.034 7.89 3.879 11.94l-21.26 20.723a6.998 6.998 0 00-2.013 6.196l5.019 29.261c.981 5.718-5.021 10.079-10.157 7.379l-26.278-13.815a7.001 7.001 0 00-6.515 0l-26.278 13.815c-5.135 2.7-11.137-1.661-10.157-7.379l5.019-29.261a7 7 0 00-2.013-6.196l-21.26-20.723c-4.155-4.05-1.862-11.106 3.879-11.94l29.38-4.269a7 7 0 005.271-3.829l13.139-26.623c2.569-5.203 9.987-5.203 12.555 0z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M313.946 201.052c4.155-4.05 1.862-11.106-3.88-11.94l-29.38-4.269a6.997 6.997 0 01-5.27-3.829l-13.139-26.623c-2.568-5.203-9.987-5.203-12.554 0l-10.888 22.061 3.874 7.85a18.632 18.632 0 0014.03 10.193c15.284 2.221 21.386 21.003 10.327 31.783a18.632 18.632 0 00-5.359 16.493l1.755 10.236 22.073 11.604c5.135 2.7 11.137-1.661 10.157-7.379l-5.019-29.261a7 7 0 012.013-6.196z\"\n      ></path>\n      <path d=\"M282.025 177.458l-13.022-26.387c-2.462-4.985-7.443-8.082-13.003-8.082s-10.541 3.097-13.003 8.083l-13.022 26.387-29.119 4.231c-5.502.799-9.987 4.581-11.706 9.868-1.718 5.288-.312 10.983 3.669 14.865l21.071 20.539-4.975 29.003c-.939 5.479 1.271 10.914 5.77 14.182s10.349 3.691 15.271 1.104L256 257.557l26.045 13.693c4.903 2.578 10.759 2.174 15.271-1.104 4.498-3.268 6.709-8.702 5.769-14.182l-4.974-29.003 21.071-20.539c3.981-3.881 5.387-9.577 3.669-14.865-1.719-5.287-6.204-9.068-11.706-9.867zm5.426 38.946a14.494 14.494 0 00-4.169 12.834l4.847 28.264-25.382-13.345a14.498 14.498 0 00-13.495 0l-25.381 13.344 4.847-28.262a14.495 14.495 0 00-4.169-12.835l-20.534-20.016 28.377-4.124a14.494 14.494 0 0010.918-7.932L256 158.618l12.69 25.714a14.494 14.494 0 0010.918 7.932l28.377 4.124zm194.096-99.749c-17.941-19.36-41.716-31.799-67.547-35.49v-16.27c16.756-1.282 30-15.316 30-32.394C444 14.58 429.421 0 411.5 0h-311C82.579 0 68 14.58 68 32.5c0 17.078 13.244 31.112 30 32.394v16.27c-25.714 3.676-49.409 16.029-67.321 35.248a7.5 7.5 0 0010.972 10.228C56.721 110.471 76.495 99.908 98 96.352v15.236c-39.204 7.62-68 42.024-68 82.652 0 22.509 8.765 43.663 24.675 59.561 15.532 15.543 36.076 24.242 57.996 24.641a157.847 157.847 0 008.007 15.038h-6.438c-54.722 0-99.24-44.519-99.24-99.24 0-14.091 2.904-27.711 8.633-40.48a7.5 7.5 0 00-13.685-6.14C3.347 162.333 0 178.019 0 194.24c0 62.992 51.248 114.24 114.24 114.24h16.729c17.756 22.957 41.679 40.906 69.267 51.348l-6.089 36.917c-18.396 5.522-32.123 21.915-33.701 41.685-25.112 1.221-45.167 22.032-45.167 47.441V497.5c0 7.995 6.505 14.5 14.5 14.5H382.22c7.995 0 14.5-6.505 14.5-14.5v-11.629c0-25.409-20.055-46.22-45.167-47.441-1.579-19.771-15.306-36.163-33.701-41.685l-6.089-36.917c27.588-10.441 51.511-28.391 69.267-51.348h16.729c62.992 0 114.24-51.248 114.24-114.24.001-28.841-10.814-56.394-30.452-77.585zM65.281 243.195C52.203 230.126 45 212.74 45 194.24c0-32.392 22.265-59.968 53-67.308V212c0 17.851 2.98 35.018 8.461 51.034-15.554-1.728-29.958-8.609-41.18-19.839zM100.5 50C90.851 50 83 42.149 83 32.5S90.851 15 100.5 15h311c9.649 0 17.5 7.851 17.5 17.5S421.149 50 411.5 50zM414 126.932c30.735 7.34 53 34.916 53 67.308 0 18.5-7.203 35.886-20.286 48.958-11.218 11.227-25.621 18.108-41.175 19.836C411.02 247.018 414 229.851 414 212zm-77.518 311.439h-22.895c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h35.634c17.921 0 32.5 14.58 32.5 32.5V497H130.279v-11.129c0-17.92 14.579-32.5 32.5-32.5h115.808c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5H175.518c1.921-16.101 15.651-28.629 32.261-28.629h96.441c16.611-.001 30.342 12.527 32.262 28.629zm-126.801-43.63l4.987-30.237C227.849 368.08 241.703 370 256 370s28.151-1.92 41.332-5.496l4.987 30.237zM256 355c-78.851 0-143-64.149-143-143V65h286v147c0 78.851-64.149 143-143 143zm141.76-61.52h-6.438a157.741 157.741 0 008.007-15.038c21.919-.399 42.463-9.097 57.991-24.637C473.235 237.903 482 216.749 482 194.24c0-40.627-28.796-75.032-68-82.652V96.352c21.605 3.57 41.449 14.208 56.545 30.498C487.604 145.259 497 169.192 497 194.24c0 54.721-44.519 99.24-99.24 99.24zM256 106.291c-56.061 0-101.67 45.609-101.67 101.669S199.939 309.629 256 309.629 357.67 264.02 357.67 207.96 312.061 106.291 256 106.291zm0 188.338c-47.79 0-86.67-38.88-86.67-86.669s38.88-86.669 86.67-86.669 86.67 38.88 86.67 86.669-38.88 86.669-86.67 86.669z\"></path>\n    </svg>\n  );\n}\n"],"names":["VENDAVAL_DE_PALPITE_ACTIONS","StepBossPlayerSelection","players","onBossPlayerClick","isLoading","useLoading","isHost","useHost","icon","AnimatedClockIcon","size","pt","en","contained","Object","values","map","player","disabled","onClick","bossId","id","withName","addressUser","type","PhaseBossPlayerSelection","state","useStep","step","setStep","goToNextStep","translate","useLanguage","request","useGameActionRequest","actionName","onBeforeCall","onError","successMessage","errorMessage","payload","action","useOnSubmitBossPlayerAPIRequest","phase","allowedPhase","PHASES","VENDAVAL_DE_PALPITE","BOSS_SELECTION","BossIcon","title","onClose","currentRound","round","current","duration","StepSecretWordSelection","words","categories","onSubmitSecretWord","notification","App","useApp","useState","secretWord","setSecretWord","selectedCategories","setSelectedCategories","isReadyToSend","Boolean","keys","length","wrap","className","align","word","text","active","level","category","categoriesCopy","error","message","handleCategoryAdd","CheckCircleFilled","join","StepWaiting","instruction","fullWidth","PhaseSecretWordSelection","useWhichPlayerIsThe","boss","isUserTheBoss","useOnSubmitSecretWordAPIRequest","SECRET_WORD_SELECTION","KnowledgeIcon","condition","Board","board","clues","boardEntries","boardKey","index","boardEntry","isLatestBoard","clsx","clueId","ClueEntry","clue","undefined","evaluation","A","shape","style","backgroundColor","QuestionIcon","isGuess","playerId","suggestedWords","ClueInput","onChangeInput","onPressEnter","value","toggleGuessIds","setIsGuess","useEffect","placeholder","onChange","bordered","autoComplete","unCheckedChildren","checkedChildren","e","CategoryCard","header","pluralize","color","StepPlayerClue","onSubmitClues","finalAnswersLeft","cluesPerPlayer","guessesIds","setGuessesIds","disableInputs","setDisableInputs","useMock","quantity","shuffle","slice","timerTotal","timeLeft","useCountdown","autoStart","onExpire","total","steps","onSubmit","guesses","forEach","includes","push","valueKey","inputQuantity","inputComponent","restrictMax","inputComponentProps","Number","split","SEPARATOR","s","sCopy","filter","submitButtonLabel","submitButtonProps","CloudUploadOutlined","getAnimationClass","showIcon","description","SecretWordCard","CategoryWordGroup","showSecretWord","StepBossWaiting","PhasePlayersClues","useOnSubmitPlayerCluesAPIRequest","PLAYERS_CLUES","waitingRoom","content","onPressButton","buttonText","time","DiscussionIcon","OutcomeOptions","outcome","onSubmitOutcome","ghost","danger","ClueEvaluation","latestBoardEntry","onSubmitEvaluation","reduce","acc","setEvaluation","CheckOutlined","CloseOutlined","updateEvaluation","StepBossEvaluation","StepPlayersWaitEvaluation","PhaseClueEvaluations","useOnSubmitEvaluationAPIRequest","useOnSubmitOutcomeAPIRequest","CLUE_EVALUATIONS","LoupeIcon","L","PhaseGameOver","announcementIcon","TrophyIcon","TheEndIcon","rateWidgetCustomText","direction","QualitySealIcon","GarbageIcon","getActiveComponent","LoadingPage","DEFAULT","LOBBY","PhaseLobby","RULES","PhaseRules","SETUP","PhaseSetup","GAME_OVER","PageError","theme","token","colorPrimary","THEME_COLORS","colorLink","gameCollection","GAME_COLLECTION","props","xmlns","viewBox","fill","d","cx","cy","r"],"sourceRoot":""}