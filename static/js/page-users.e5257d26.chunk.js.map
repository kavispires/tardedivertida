{"version":3,"file":"static/js/page-users.e5257d26.chunk.js","mappings":"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","sources":["pages/Me/Users.tsx","../node_modules/antd/es/select/index.js"],"sourcesContent":["import { useTitle } from 'react-use';\n// Hooks\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\n// Components\nimport { MeContent } from './MeContent';\n// Sass\nimport './Me.scss';\nimport { useQuery } from 'react-query';\nimport { useState } from 'react';\nimport { collection, getDocs, query, where } from 'firebase/firestore';\nimport { firestore } from 'services/firebase';\nimport { Select } from 'antd';\n\nfunction Users() {\n  useTitle('Users - Tarde Divertida');\n  const { currentUser } = useCurrentUserContext();\n  const [selectedUser, setSelectedUser] = useState(currentUser);\n\n  // const q = useQuery({\n  //   queryKey: 'users',\n  //   queryFn: async () => {\n  //     const querySnapshot = await getDocs(\n  //       query(collection(firestore, 'users'), where('isGuest', '!=', true))\n  //     );\n  //     const result: any[] = [];\n  //     querySnapshot.forEach((doc) => result.push(doc.data()));\n  //     return result;\n  //   },\n  // });\n  const q = { data: null };\n\n  const data: Me[] = q.data ?? [];\n\n  const onSelectUser = (uid: string) => {\n    setSelectedUser(data.find((e) => e.id === uid) ?? currentUser);\n  };\n\n  const select = (\n    <Select onChange={onSelectUser} style={{ minWidth: 300 }}>\n      {data.map((entry) => (\n        <Select.Option key={entry.id} value={entry.id}>\n          {entry.id}\n        </Select.Option>\n      ))}\n    </Select>\n  );\n\n  return <MeContent user={selectedUser} additionalContent={select} />;\n}\n\nexport default Users;\n","var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n// TODO: 4.0 - codemod should help to change `filterOption` to support node props.\nimport classNames from 'classnames';\nimport RcSelect, { OptGroup, Option } from 'rc-select';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport DefaultRenderEmpty from '../config-provider/defaultRenderEmpty';\nimport DisabledContext from '../config-provider/DisabledContext';\nimport SizeContext from '../config-provider/SizeContext';\nimport { FormItemInputContext } from '../form/context';\nimport { getTransitionDirection, getTransitionName } from '../_util/motion';\nimport { getMergedStatus, getStatusClassNames } from '../_util/statusUtils';\nimport getIcons from './utils/iconUtil';\nimport { useCompactItemContext } from '../space/Compact';\nimport genPurePanel from '../_util/PurePanel';\nimport warning from '../_util/warning';\nimport useStyle from './style';\nimport useShowArrow from './useShowArrow';\nconst SECRET_COMBOBOX_MODE_DO_NOT_USE = 'SECRET_COMBOBOX_MODE_DO_NOT_USE';\nconst InternalSelect = (_a, ref) => {\n  var {\n      prefixCls: customizePrefixCls,\n      bordered = true,\n      className,\n      rootClassName,\n      getPopupContainer,\n      popupClassName,\n      dropdownClassName,\n      listHeight = 256,\n      placement,\n      listItemHeight = 24,\n      size: customizeSize,\n      disabled: customDisabled,\n      notFoundContent,\n      status: customStatus,\n      showArrow\n    } = _a,\n    props = __rest(_a, [\"prefixCls\", \"bordered\", \"className\", \"rootClassName\", \"getPopupContainer\", \"popupClassName\", \"dropdownClassName\", \"listHeight\", \"placement\", \"listItemHeight\", \"size\", \"disabled\", \"notFoundContent\", \"status\", \"showArrow\"]);\n  const {\n    getPopupContainer: getContextPopupContainer,\n    getPrefixCls,\n    renderEmpty,\n    direction,\n    virtual,\n    dropdownMatchSelectWidth,\n    select\n  } = React.useContext(ConfigContext);\n  const size = React.useContext(SizeContext);\n  const prefixCls = getPrefixCls('select', customizePrefixCls);\n  const rootPrefixCls = getPrefixCls();\n  const {\n    compactSize,\n    compactItemClassnames\n  } = useCompactItemContext(prefixCls, direction);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const mode = React.useMemo(() => {\n    const {\n      mode: m\n    } = props;\n    if (m === 'combobox') {\n      return undefined;\n    }\n    if (m === SECRET_COMBOBOX_MODE_DO_NOT_USE) {\n      return 'combobox';\n    }\n    return m;\n  }, [props.mode]);\n  const isMultiple = mode === 'multiple' || mode === 'tags';\n  const mergedShowArrow = useShowArrow(showArrow);\n  // ===================== Form Status =====================\n  const {\n    status: contextStatus,\n    hasFeedback,\n    isFormItemInput,\n    feedbackIcon\n  } = React.useContext(FormItemInputContext);\n  const mergedStatus = getMergedStatus(contextStatus, customStatus);\n  // ===================== Empty =====================\n  let mergedNotFound;\n  if (notFoundContent !== undefined) {\n    mergedNotFound = notFoundContent;\n  } else if (mode === 'combobox') {\n    mergedNotFound = null;\n  } else {\n    mergedNotFound = (renderEmpty === null || renderEmpty === void 0 ? void 0 : renderEmpty('Select')) || /*#__PURE__*/React.createElement(DefaultRenderEmpty, {\n      componentName: \"Select\"\n    });\n  }\n  // ===================== Icons =====================\n  const {\n    suffixIcon,\n    itemIcon,\n    removeIcon,\n    clearIcon\n  } = getIcons(Object.assign(Object.assign({}, props), {\n    multiple: isMultiple,\n    hasFeedback,\n    feedbackIcon,\n    showArrow: mergedShowArrow,\n    prefixCls\n  }));\n  const selectProps = omit(props, ['suffixIcon', 'itemIcon']);\n  const rcSelectRtlDropdownClassName = classNames(popupClassName || dropdownClassName, {\n    [`${prefixCls}-dropdown-${direction}`]: direction === 'rtl'\n  }, rootClassName, hashId);\n  const mergedSize = compactSize || customizeSize || size;\n  // ===================== Disabled =====================\n  const disabled = React.useContext(DisabledContext);\n  const mergedDisabled = customDisabled !== null && customDisabled !== void 0 ? customDisabled : disabled;\n  const mergedClassName = classNames({\n    [`${prefixCls}-lg`]: mergedSize === 'large',\n    [`${prefixCls}-sm`]: mergedSize === 'small',\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-borderless`]: !bordered,\n    [`${prefixCls}-in-form-item`]: isFormItemInput\n  }, getStatusClassNames(prefixCls, mergedStatus, hasFeedback), compactItemClassnames, className, rootClassName, hashId);\n  // ===================== Placement =====================\n  const getPlacement = () => {\n    if (placement !== undefined) {\n      return placement;\n    }\n    return direction === 'rtl' ? 'bottomRight' : 'bottomLeft';\n  };\n  // ====================== Warning ======================\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!dropdownClassName, 'Select', '`dropdownClassName` is deprecated. Please use `popupClassName` instead.') : void 0;\n  }\n  // ====================== Render =======================\n  return wrapSSR( /*#__PURE__*/React.createElement(RcSelect, Object.assign({\n    ref: ref,\n    virtual: virtual,\n    dropdownMatchSelectWidth: dropdownMatchSelectWidth,\n    showSearch: select === null || select === void 0 ? void 0 : select.showSearch\n  }, selectProps, {\n    transitionName: getTransitionName(rootPrefixCls, getTransitionDirection(placement), props.transitionName),\n    listHeight: listHeight,\n    listItemHeight: listItemHeight,\n    mode: mode,\n    prefixCls: prefixCls,\n    placement: getPlacement(),\n    direction: direction,\n    inputIcon: suffixIcon,\n    menuItemSelectedIcon: itemIcon,\n    removeIcon: removeIcon,\n    clearIcon: clearIcon,\n    notFoundContent: mergedNotFound,\n    className: mergedClassName,\n    getPopupContainer: getPopupContainer || getContextPopupContainer,\n    dropdownClassName: rcSelectRtlDropdownClassName,\n    showArrow: hasFeedback || mergedShowArrow,\n    disabled: mergedDisabled\n  })));\n};\nif (process.env.NODE_ENV !== 'production') {\n  InternalSelect.displayName = 'Select';\n}\nconst Select = /*#__PURE__*/React.forwardRef(InternalSelect);\n// We don't care debug panel\n/* istanbul ignore next */\nconst PurePanel = genPurePanel(Select);\nSelect.SECRET_COMBOBOX_MODE_DO_NOT_USE = SECRET_COMBOBOX_MODE_DO_NOT_USE;\nSelect.Option = Option;\nSelect.OptGroup = OptGroup;\nSelect._InternalPanelDoNotUseOrYouWillBeFired = PurePanel;\nexport default Select;"],"names":["useTitle","currentUser","useCurrentUserContext","useState","selectedUser","setSelectedUser","data","select","onChange","uid","find","e","id","style","minWidth","map","entry","value","user","additionalContent","__rest","s","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","SECRET_COMBOBOX_MODE_DO_NOT_USE","InternalSelect","_a","ref","mergedNotFound","customizePrefixCls","prefixCls","bordered","className","rootClassName","getPopupContainer","popupClassName","dropdownClassName","listHeight","placement","listItemHeight","customizeSize","size","customDisabled","disabled","notFoundContent","customStatus","status","showArrow","props","React","ConfigContext","getContextPopupContainer","getPrefixCls","renderEmpty","direction","virtual","dropdownMatchSelectWidth","SizeContext","rootPrefixCls","useCompactItemContext","compactSize","compactItemClassnames","useStyle","wrapSSR","hashId","mode","m","isMultiple","mergedShowArrow","useShowArrow","FormItemInputContext","contextStatus","hasFeedback","isFormItemInput","feedbackIcon","mergedStatus","getMergedStatus","undefined","DefaultRenderEmpty","componentName","getIcons","assign","multiple","suffixIcon","itemIcon","removeIcon","clearIcon","selectProps","omit","rcSelectRtlDropdownClassName","classNames","mergedSize","DisabledContext","mergedDisabled","mergedClassName","getStatusClassNames","RcSelect","showSearch","transitionName","getTransitionName","getTransitionDirection","inputIcon","menuItemSelectedIcon","Select","PurePanel","genPurePanel","Option","OptGroup","_InternalPanelDoNotUseOrYouWillBeFired"],"sourceRoot":""}