{"version":3,"file":"static/js/237.8e0c5aff.chunk.js","mappings":"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","sources":["games/espiao-entre-nos/Card.tsx","../node_modules/@ant-design/icons-svg/es/asn/ClearOutlined.js","../node_modules/@ant-design/icons/es/icons/ClearOutlined.js","games/espiao-entre-nos/LocationsList.tsx","games/espiao-entre-nos/Notes.tsx","games/espiao-entre-nos/StepAssignment.tsx","games/espiao-entre-nos/PhaseAssignment.tsx","games/espiao-entre-nos/api-requests.ts","games/espiao-entre-nos/LocationSelect.tsx","games/espiao-entre-nos/PlayerSelect.tsx","../node_modules/@ant-design/icons-svg/es/asn/AimOutlined.js","../node_modules/@ant-design/icons/es/icons/AimOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/IssuesCloseOutlined.js","../node_modules/@ant-design/icons/es/icons/IssuesCloseOutlined.js","games/espiao-entre-nos/SuspectsList.tsx","games/espiao-entre-nos/Timer.tsx","games/espiao-entre-nos/StepInvestigation.tsx","../node_modules/@ant-design/icons-svg/es/asn/UserOutlined.js","../node_modules/@ant-design/icons/es/icons/UserOutlined.js","games/espiao-entre-nos/FinalAssessmentPreparationModal.tsx","games/espiao-entre-nos/PhaseInvestigation.tsx","games/espiao-entre-nos/StepVoting.tsx","games/espiao-entre-nos/PhaseAssessment.tsx","games/espiao-entre-nos/StepResolution.tsx","games/espiao-entre-nos/PhaseResolution.tsx","games/espiao-entre-nos/helpers.ts","games/espiao-entre-nos/RulesBlobs.tsx","games/espiao-entre-nos/FinalAssessmentModal.tsx","games/espiao-entre-nos/StepFinalAssessment.tsx","games/espiao-entre-nos/PhaseFinalAssessment.tsx","games/espiao-entre-nos/SessionEspiaoEntreNos.tsx","../node_modules/@ant-design/icons-svg/es/asn/EnvironmentOutlined.js","../node_modules/@ant-design/icons/es/icons/EnvironmentOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/QuestionCircleFilled.js","../node_modules/@ant-design/icons/es/icons/QuestionCircleFilled.js"],"sourcesContent":["// Ant Design Resources\nimport { QuestionCircleFilled } from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from 'hooks';\n// Components\nimport { Card } from 'components';\n\ntype EspiaoEntreNosCardProps = {\n  location: string;\n  role: string;\n  header?: string;\n};\n\nexport const EspiaoEntreNosCard = ({ location, role, header }: EspiaoEntreNosCardProps) => {\n  const { translate } = useLanguage();\n\n  const spyHeader = translate('Local Desconhecido', 'Unknown Location');\n  const spyFooter = translate('Você é o espião', 'You are the spy');\n  const agentFooter = translate(`Você é um(a) ${role}`, `You are a ${role}`);\n\n  return (\n    <Card\n      color={location === 'SPY' ? 'red' : 'lime'}\n      header={location === 'SPY' ? spyHeader : header}\n      size=\"large\"\n      footer={role === 'SPY' ? spyFooter : agentFooter}\n      className=\"e-card\"\n      footerClassName=\"e-card__footer\"\n    >\n      {location === 'SPY' ? <QuestionCircleFilled /> : location}\n    </Card>\n  );\n};\n","// This icon file is generated automatically.\nvar ClearOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"defs\", \"attrs\": {}, \"children\": [{ \"tag\": \"style\", \"attrs\": {} }] }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M899.1 869.6l-53-305.6H864c14.4 0 26-11.6 26-26V346c0-14.4-11.6-26-26-26H618V138c0-14.4-11.6-26-26-26H432c-14.4 0-26 11.6-26 26v182H160c-14.4 0-26 11.6-26 26v192c0 14.4 11.6 26 26 26h17.9l-53 305.6a25.95 25.95 0 0025.6 30.4h723c1.5 0 3-.1 4.4-.4a25.88 25.88 0 0021.2-30zM204 390h272V182h72v208h272v104H204V390zm468 440V674c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v156H416V674c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v156H202.8l45.1-260H776l45.1 260H672z\" } }] }, \"name\": \"clear\", \"theme\": \"outlined\" };\nexport default ClearOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ClearOutlinedSvg from \"@ant-design/icons-svg/es/asn/ClearOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ClearOutlined = function ClearOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ClearOutlinedSvg\n  }));\n};\n\nClearOutlined.displayName = 'ClearOutlined';\nexport default /*#__PURE__*/React.forwardRef(ClearOutlined);","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Tooltip } from 'antd';\nimport { ClearOutlined, EnvironmentOutlined } from '@ant-design/icons';\n// Hooks\nimport { useGlobalState, useLanguage } from 'hooks';\n// Components\nimport { Translate } from 'components';\n\ntype LocationsListProps = {\n  locations: ELocation[];\n};\n\nexport function LocationsList({ locations }: LocationsListProps) {\n  const { translate } = useLanguage();\n  const [cache, setCache] = useGlobalState('cache');\n\n  const onCross = (locationId: string) => {\n    setCache((s) => {\n      const newState = { ...s };\n      if (newState[locationId]) {\n        delete newState[locationId];\n      } else {\n        newState[locationId] = true;\n      }\n      return newState;\n    });\n  };\n\n  const onClearCrossed = () => {\n    setCache((s) => {\n      const newState = { ...s };\n      Object.keys(newState).forEach((key) => {\n        if (!key.startsWith('_')) {\n          delete newState[key];\n        }\n      });\n      return newState;\n    });\n  };\n\n  return (\n    <div className=\"e-list\">\n      <h3 className=\"e-list__title\">\n        <EnvironmentOutlined /> <Translate pt=\"Possíveis Locais\" en=\"Possible Locations\" />\n        <Tooltip title={translate('Desmarcar todos', 'Unselect all')}>\n          <Button\n            shape=\"circle\"\n            ghost\n            type=\"default\"\n            size=\"small\"\n            icon={<ClearOutlined />}\n            onClick={onClearCrossed}\n            className=\"e-list__clear-button\"\n          />\n        </Tooltip>\n      </h3>\n      <ul className={clsx('e-list__list', 'e-list__list--column')}>\n        {locations.map((location) => (\n          <li\n            className={clsx('e-list__item', cache[location.id] && 'e-list__item--crossed')}\n            key={location.id}\n            role=\"button\"\n            onClick={() => onCross(location.id)}\n          >\n            {location.name}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","// Hooks\nimport { useLanguage } from 'hooks';\n\nexport function Notes() {\n  const { translate } = useLanguage();\n  return (\n    <textarea\n      name=\"\"\n      id=\"\"\n      cols={30}\n      rows={10}\n      className=\"e-notes\"\n      placeholder={translate(\n        'Escreva anotações aqui se quiser, mas cuidado com o teclado fazendo muito barulho',\n        \"Write your notes here, but don't make too much noise with those key strokes\"\n      )}\n    />\n  );\n}\n","// Hooks\nimport { useLanguage } from 'hooks';\n// Components\nimport { AdminNextRoundButton, Instruction, Step, Title, Translate } from 'components';\nimport { EspiaoEntreNosCard as Card } from './Card';\nimport { LocationsList } from './LocationsList';\nimport { Notes } from './Notes';\n\ntype StepAssignmentProps = {\n  user: GamePlayer;\n  isUserTheSpy: boolean;\n  locations: ELocation[];\n};\n\nexport function StepAssignment({ user, isUserTheSpy, locations }: StepAssignmentProps) {\n  const { translate } = useLanguage();\n\n  return (\n    <Step className=\"e-phase-step\">\n      <Title level={2} className=\"e-phase-title\">\n        <Translate pt=\"Você está no(a)...\" en=\"We are in/at/on...\" />\n      </Title>\n\n      <Card location={user.location} role={user.role} />\n\n      <AdminNextRoundButton buttonText={translate('Começar cronômetro', 'Start Timer')} />\n\n      <Instruction className=\"e-phase-instruction\">\n        {isUserTheSpy ? (\n          <Translate\n            pt=\"Você terá 10 minutos para descobrir onde os outros agentes estão! Pronto?\"\n            en=\"You have 10 minutes to find out where the other agents are! Ready?\"\n          />\n        ) : (\n          <Translate\n            pt=\"Você terá 10 minutos para descobrir quem é o espião entre nós! Pronto?\"\n            en=\"You have 10 minutes to find out who is the spy! Ready?\"\n          />\n        )}\n      </Instruction>\n\n      <Instruction className=\"e-lists\">\n        <LocationsList locations={locations} />\n      </Instruction>\n      <Notes />\n    </Step>\n  );\n}\n","// Hooks\nimport { useIsUserReady, useWhichPlayerIsThe, useUser, useLanguage, useStep } from 'hooks';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport {\n  Instruction,\n  PhaseAnnouncement,\n  PhaseContainer,\n  PhaseTimerReset,\n  RoundAnnouncement,\n  StepSwitcher,\n  Translate,\n} from 'components';\nimport { StepAssignment } from './StepAssignment';\n\nfunction PhaseAssignment({ state, players, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, goToNextStep } = useStep(0);\n  const user = useUser(players);\n  const isUserReady = useIsUserReady(players, state);\n  const [, isUserTheSpy] = useWhichPlayerIsThe('currentSpyId', state, players);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ESPIAO_ENTRE_NOS.ASSIGNMENT}\n      className=\"e-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady]} players={players}>\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state.round}\n          onPressButton={goToNextStep}\n          time={5}\n          className=\"e-round-announcement\"\n          circleColor=\"lime\"\n        >\n          <Instruction className=\"e-phase-instruction\">\n            <Translate pt=\"Há um espião entre nós!\" en=\"There's a spy among us!\" />\n          </Instruction>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <PhaseAnnouncement\n          type=\"spy-newspaper\"\n          title={translate('Prólogo', 'Prologue')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          buttonText=\"\"\n          className=\"e-phase-announcement e-phase-announcement--animated\"\n          duration={15}\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  Estamos todos em um local que somente agentes confiáveis sabem onde é, mas um espião\n                  conseguiu se infiltrar em nosso sistema.\n                  <br />\n                  Estamos nos comunicando pelo ponto em nossos ouvidos porque somos espiões hi-tech.\n                </>\n              }\n              en={\n                <>\n                  We're all in a secret location that only the most trustworthy agents are assigned to, but a\n                  spy has hacked our system.\n                  <br />\n                  We are communication through our in-ear spy tech.\n                </>\n              }\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 2 */}\n        <PhaseTimerReset goToNextStep={goToNextStep} />\n\n        {/* Step 3 */}\n        <PhaseAnnouncement\n          type=\"secret\"\n          title={translate('Você tem uma missão', 'You have one mission')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          buttonText=\"\"\n          className=\"e-phase-announcement e-phase-announcement--animated\"\n          duration={10}\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  Se você é um agente, sua missão é descobrir quem é o espião.\n                  <br />\n                  Se você é o espião, sua missão é descobrir qual local os outros estão.\n                </>\n              }\n              en={\n                <>\n                  If you are an agent, your mission is to figure out who the spy is.\n                  <br />\n                  If you are the spy, your mission is to find out where the agents are and nuke it!.\n                </>\n              }\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 4 */}\n        <PhaseTimerReset goToNextStep={goToNextStep} />\n\n        {/* Step 5 */}\n        <PhaseAnnouncement\n          type=\"passport\"\n          title={translate('Mais detalhes', 'More details')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          buttonText=\"\"\n          className=\"e-phase-announcement e-phase-announcement--animated\"\n          duration={30}\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  Um jogador faz uma pergunta a outro, qualquer tipo de pergunta, e então esse o jogador\n                  responde, de qualquer forma.\n                  <br />\n                  Você quer ser específico o suficiente para que outros jogadores não te acusem, mas vago o\n                  suficiente para que espião não sabia onde estamos.\n                  <br />O jogador que responde se torna o novo 'perguntador'.\n                  <br />\n                  Mas fique esperto, você só pode acusar alguém (ou tentar descobrir a localização) uma única\n                  vez durante o jogo.\n                </>\n              }\n              en={\n                <>\n                  One player will ask a question to another player, any kind of question, then this player\n                  will respond, in any way.\n                  <br />\n                  You want to be specific enough so other players don't accuse you, but vague enough so the\n                  spy does not figure out where you are.\n                  <br />\n                  The asked player becomes the new questioner.\n                  <br />\n                  But watch out! You can only accuse someone (or guess the location) a single time during the\n                  game.\n                </>\n              }\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 6 */}\n        <StepAssignment user={user} isUserTheSpy={isUserTheSpy} locations={state.locations} />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseAssignment;\n","import { ADMIN_API, ESPIAO_ENTRE_NOS_API } from 'adapters';\nimport { useAPICall, useLanguage } from 'hooks';\nimport { ADMIN_ACTIONS } from 'utils/constants';\n\nexport function useOnGuessLocationAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.submitAction,\n    actionName: 'submit-guess',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(0),\n    successMessage: translate('Chute submetido com sucesso', 'Guess submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar seu chute',\n      'Oops, the application found an error while trying to submit your guess'\n    ),\n  });\n\n  return (payload: GuessLocationPayload) => {\n    request({\n      action: 'GUESS_LOCATION',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnMakeAccusationAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.submitAction,\n    actionName: 'make-accusation',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(0),\n    successMessage: translate('Acusação submetida com sucesso', 'Accusation submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua acusação',\n      'Oops, the application found an error while trying to submit your acusação'\n    ),\n  });\n\n  return (payload: MakeAccusationPayload) => {\n    request({\n      action: 'MAKE_ACCUSATION',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitVoteAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.submitAction,\n    actionName: 'submit-vote',\n    onError: () => setStep(1),\n    successMessage: translate('Voto submetido com sucesso', 'Vote submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar seu voto',\n      'Oops, the application found an error while trying to submit your vote'\n    ),\n  });\n\n  return (payload: SubmitVotePayload) => {\n    request({\n      action: 'SUBMIT_VOTE',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSendLastQuestionerAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.submitAction,\n    actionName: 'submit-last-questioner',\n    onError: () => setStep(1),\n    successMessage: translate(\n      'Último perguntador submetido com sucesso',\n      'Last questioner submitted successfully'\n    ),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar o último perguntador',\n      'Oops, the application found an error while trying to submit the last questioner'\n    ),\n  });\n\n  return (payload: SendLastQuestionerPayload) => {\n    request({\n      action: 'LAST_QUESTIONER',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnProgressGameAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: ADMIN_API.performAdminAction,\n    actionName: 'progress-game',\n    onError: () => setStep(1),\n    successMessage: translate('Jogo progredido com sucesso', 'Game progressed successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar continuar',\n      'Oops, the application found an error while trying to continue'\n    ),\n  });\n\n  return (payload: GameProgressPayload) => {\n    request({\n      action: payload.end ? ADMIN_ACTIONS.FORCE_END_GAME : ADMIN_ACTIONS.GO_TO_NEXT_PHASE,\n    });\n  };\n}\n","import { useMemo, useState } from 'react';\n// Ant Design Resources\nimport { Button, Popconfirm, Select, Space } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLanguage, useLoading } from 'hooks';\n// Components\nimport { Translate } from 'components';\n\ntype LocationSelectProps = {\n  locations: ELocation[];\n  onSend: GenericFunction;\n};\n\nexport function LocationSelect({ locations, onSend }: LocationSelectProps) {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n  const [selectedLocationId, setSelectedLocationId] = useState<string>('');\n\n  const onSelectLocation = (locationId: string) => setSelectedLocationId(locationId);\n\n  const selectedLocationName = useMemo(() => {\n    return locations.find((location) => location.id === selectedLocationId)?.name ?? '';\n  }, [selectedLocationId, locations]);\n\n  return (\n    <Space className=\"e-select-container e-select-container--locations\">\n      <Select onChange={onSelectLocation} placeholder={translate('Chute um local', 'Guess location')}>\n        {locations.map((location) => (\n          <Select.Option key={`select-${location.id}`} value={location.id}>\n            {location.name}\n          </Select.Option>\n        ))}\n      </Select>\n      <Popconfirm\n        title={translate(\n          `Você só pode chutar uma vez durante o jogo! Tem certeza que quer chutar ${selectedLocationName}?`,\n          `You may guess the location only once! Are you sure you want to guess ${selectedLocationName}?`\n        )}\n        onConfirm={() => onSend({ locationId: selectedLocationId })}\n        okText=\"Sim\"\n        cancelText=\"Não\"\n      >\n        <Button\n          type=\"primary\"\n          disabled={!selectedLocationId || isLoading}\n          icon={isLoading ? <LoadingOutlined /> : null}\n        >\n          <Translate pt=\"Chutar\" en=\"Guess\" />\n          {selectedLocationName ? `: ${selectedLocationName}` : ''}\n        </Button>\n      </Popconfirm>\n    </Space>\n  );\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, Popconfirm, Select, Space } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n// Hooks\nimport { useGlobalState, useLanguage, useLoading } from 'hooks';\n// Components\nimport { Translate } from 'components';\n\ntype PlayersElectProps = {\n  players: GamePlayers;\n  onSend: GenericFunction;\n  isFinalAssessment?: boolean;\n};\n\nexport function PlayerSelect({ players, onSend, isFinalAssessment = false }: PlayersElectProps) {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n  const [userId] = useGlobalState('userId');\n\n  const [selectedPlayerId, setSelectedPlayerId] = useState<string>('');\n\n  const playersWithoutMe = Object.values(players).filter((player) => player.id !== userId);\n\n  const onSelectPlayerId = (playerId: PlayerId) => setSelectedPlayerId(playerId);\n\n  return (\n    <Space>\n      <Select\n        onChange={onSelectPlayerId}\n        className=\"e-select\"\n        placeholder={translate('Acuse um jogador', 'Accuse a player')}\n      >\n        {playersWithoutMe.map((player) => (\n          <Select.Option key={player.id} value={player.id}>\n            {player.name}\n          </Select.Option>\n        ))}\n      </Select>\n      <Popconfirm\n        title={`${\n          isFinalAssessment\n            ? ''\n            : translate(\n                'Você só pode acusar uma vez durante o jogo! ',\n                'You may only make one accusation during the game!'\n              )\n        } ${translate('Tem certeza que quer acusar', 'Are you sure you want to accuse')} ${\n          players[selectedPlayerId!]?.name\n        }?`}\n        onConfirm={() => onSend({ targetId: selectedPlayerId })}\n        okText={translate('Sim', 'Yes')}\n        cancelText={translate('Não', 'No')}\n      >\n        <Button\n          type=\"primary\"\n          disabled={!selectedPlayerId || isLoading}\n          icon={isLoading ? <LoadingOutlined /> : null}\n        >\n          <Translate pt=\"Acusar\" en=\"Accuse\" />\n          {selectedPlayerId ? `: ${players[selectedPlayerId]?.name}` : ''}\n        </Button>\n      </Popconfirm>\n    </Space>\n  );\n}\n","// This icon file is generated automatically.\nvar AimOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"defs\", \"attrs\": {}, \"children\": [{ \"tag\": \"style\", \"attrs\": {} }] }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M952 474H829.8C812.5 327.6 696.4 211.5 550 194.2V72c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v122.2C327.6 211.5 211.5 327.6 194.2 474H72c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h122.2C211.5 696.4 327.6 812.5 474 829.8V952c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V829.8C696.4 812.5 812.5 696.4 829.8 550H952c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8zM512 756c-134.8 0-244-109.2-244-244s109.2-244 244-244 244 109.2 244 244-109.2 244-244 244z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 392c-32.1 0-62.1 12.4-84.8 35.2-22.7 22.7-35.2 52.7-35.2 84.8s12.5 62.1 35.2 84.8C449.9 619.4 480 632 512 632s62.1-12.5 84.8-35.2C619.4 574.1 632 544 632 512s-12.5-62.1-35.2-84.8A118.57 118.57 0 00512 392z\" } }] }, \"name\": \"aim\", \"theme\": \"outlined\" };\nexport default AimOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport AimOutlinedSvg from \"@ant-design/icons-svg/es/asn/AimOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar AimOutlined = function AimOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: AimOutlinedSvg\n  }));\n};\n\nAimOutlined.displayName = 'AimOutlined';\nexport default /*#__PURE__*/React.forwardRef(AimOutlined);","// This icon file is generated automatically.\nvar IssuesCloseOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M464 688a48 48 0 1096 0 48 48 0 10-96 0zm72-112c4.4 0 8-3.6 8-8V296c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v272c0 4.4 3.6 8 8 8h48zm400-188h-59.3c-2.6 0-5 1.2-6.5 3.3L763.7 538.1l-49.9-68.8a7.92 7.92 0 00-6.5-3.3H648c-6.5 0-10.3 7.4-6.5 12.7l109.2 150.7a16.1 16.1 0 0026 0l165.8-228.7c3.8-5.3 0-12.7-6.5-12.7zm-44 306h-64.2c-5.5 0-10.6 2.9-13.6 7.5a352.2 352.2 0 01-49.8 62.2A355.92 355.92 0 01651.1 840a355 355 0 01-138.7 27.9c-48.1 0-94.8-9.4-138.7-27.9a355.92 355.92 0 01-113.3-76.3A353.06 353.06 0 01184 650.5c-18.6-43.8-28-90.5-28-138.5s9.4-94.7 28-138.5c17.9-42.4 43.6-80.5 76.4-113.2 32.8-32.7 70.9-58.4 113.3-76.3a355 355 0 01138.7-27.9c48.1 0 94.8 9.4 138.7 27.9 42.4 17.9 80.5 43.6 113.3 76.3 19 19 35.6 39.8 49.8 62.2 2.9 4.7 8.1 7.5 13.6 7.5H892c6 0 9.8-6.3 7.2-11.6C828.8 178.5 684.7 82 517.7 80 278.9 77.2 80.5 272.5 80 511.2 79.5 750.1 273.3 944 512.4 944c169.2 0 315.6-97 386.7-238.4A8 8 0 00892 694z\" } }] }, \"name\": \"issues-close\", \"theme\": \"outlined\" };\nexport default IssuesCloseOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport IssuesCloseOutlinedSvg from \"@ant-design/icons-svg/es/asn/IssuesCloseOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar IssuesCloseOutlined = function IssuesCloseOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: IssuesCloseOutlinedSvg\n  }));\n};\n\nIssuesCloseOutlined.displayName = 'IssuesCloseOutlined';\nexport default /*#__PURE__*/React.forwardRef(IssuesCloseOutlined);","import { orderBy } from 'lodash';\nimport clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Tooltip } from 'antd';\nimport { AimOutlined, ClearOutlined, IssuesCloseOutlined } from '@ant-design/icons';\n// Hooks\nimport { useGlobalState, useLanguage } from 'hooks';\n// Components\nimport { Translate } from 'components';\n\ntype SuspectsListProps = {\n  players: GamePlayers;\n};\n\nexport function SuspectsList({ players }: SuspectsListProps) {\n  const { translate } = useLanguage();\n  const [cache, setCache] = useGlobalState('cache');\n  const sortedPlayers: Player[] = orderBy(Object.values(players), ['name'], ['asc']);\n\n  const onCross = (playerId: string) => {\n    setCache((s) => {\n      const newState = { ...s };\n      if (newState[playerId]) {\n        delete newState[playerId];\n      } else {\n        newState[playerId] = true;\n      }\n      return newState;\n    });\n  };\n\n  const onClearCrossed = () => {\n    setCache((s) => {\n      const newState = { ...s };\n      Object.keys(newState).forEach((key) => {\n        if (key.startsWith('_')) {\n          delete newState[key];\n        }\n      });\n      return newState;\n    });\n  };\n\n  return (\n    <div className=\"e-list\">\n      <h3 className=\"e-list__title\">\n        <AimOutlined /> <Translate pt=\"Suspeitos\" en=\"Suspects\" />\n        <Tooltip title={translate('Desmarcar todos', 'Unselect all')}>\n          <Button\n            shape=\"circle\"\n            ghost\n            type=\"default\"\n            size=\"small\"\n            icon={<ClearOutlined />}\n            onClick={onClearCrossed}\n            className=\"e-list__clear-button\"\n          />\n        </Tooltip>\n      </h3>\n      <ul className=\"e-list__list\">\n        {sortedPlayers.map((player) => (\n          <li\n            className={clsx('e-list__item', cache[player.id] && 'e-list__item--crossed')}\n            key={player.id}\n            role=\"button\"\n            onClick={() => onCross(player.id)}\n          >\n            {player.name}{' '}\n            {player.usedAccusation && (\n              <Tooltip title=\"Já usou acusação\">\n                <IssuesCloseOutlined size={12} />\n              </Tooltip>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import { useTimer } from 'react-timer-hook';\n// Utils\nimport { inNTime } from 'utils/helpers';\n\ntype TimerProps = {\n  timer: Timer;\n  hideAccusationSelect: GenericFunction;\n  setStep: GenericFunction;\n};\n\nexport function Timer({ timer, hideAccusationSelect, setStep }: TimerProps) {\n  const onTimesUp = () => {\n    hideAccusationSelect();\n    setStep(2);\n  };\n\n  const { minutes, seconds } = useTimer({\n    expiryTimestamp: inNTime(timer.timeRemaining - 2000),\n    autoStart: true,\n    onExpire: onTimesUp,\n  });\n\n  return (\n    <div className=\"e-timer\">\n      {minutes}:{seconds < 10 ? `0${seconds}` : seconds}\n    </div>\n  );\n}\n","// Components\nimport { notification } from 'antd';\nimport { useEffect, useState } from 'react';\n// Components\nimport { ButtonContainer, Instruction, Step, Title, Translate } from 'components';\nimport { useLanguage } from 'hooks';\nimport { EspiaoEntreNosCard as Card } from './Card';\nimport { LocationSelect } from './LocationSelect';\nimport { LocationsList } from './LocationsList';\nimport { Notes } from './Notes';\nimport { PlayerSelect } from './PlayerSelect';\nimport { SuspectsList } from './SuspectsList';\nimport { Timer } from './Timer';\n\ntype StepInvestigationProps = {\n  user: GamePlayer;\n  isUserTheSpy: boolean;\n  locations: ELocation[];\n  players: GamePlayers;\n  timer: Timer;\n  onGuessLocation: GenericFunction;\n  onMakeAccusation: GenericFunction;\n  onSendLastQuestioner: GenericFunction;\n  outcome?: EOutcome;\n  setStep: GenericFunction;\n};\n\nexport function StepInvestigation({\n  user,\n  isUserTheSpy,\n  locations,\n  players,\n  timer,\n  onGuessLocation,\n  onMakeAccusation,\n  onSendLastQuestioner,\n  outcome,\n  setStep,\n}: StepInvestigationProps) {\n  const { translate } = useLanguage();\n  const [isAccusationSelectVisible, setAccusationSelectVisible] = useState(true);\n\n  useEffect(() => {\n    if (outcome?.type === 'VOTE_FAIL') {\n      notification.info({\n        message: translate('A votação não foi unânime', 'The voting was not unanimous'),\n        description: outcome.votedYes ? `Votaram sim: ${outcome.votedYes}` : 'Ninguém votou sim',\n        duration: 10,\n      });\n    }\n  }, [outcome?.type]); // eslint-disable-line\n\n  const hideAccusationSelect = () => {\n    setAccusationSelectVisible(false);\n  };\n\n  return (\n    <Step className=\"e-phase-step\">\n      <div className=\"e-phase-step-header\">\n        <div className=\"e-phase-step-header__timer-container\">\n          <Timer timer={timer} hideAccusationSelect={hideAccusationSelect} setStep={setStep} />\n        </div>\n\n        <div className=\"e-phase-step-header__center\">\n          <Title level={2} className=\"e-phase-title\">\n            {isUserTheSpy ? (\n              <Translate pt=\"Onde eles estão?\" en=\"Where are they?\" />\n            ) : (\n              <Translate pt=\"Quem é o espião?\" en=\"Who is the spy?\" />\n            )}\n          </Title>\n\n          <Card location={user.location} role={user.role} />\n        </div>\n      </div>\n\n      {isAccusationSelectVisible && (\n        <ButtonContainer>\n          {isUserTheSpy && <LocationSelect locations={locations} onSend={onGuessLocation} />}|\n          {!user?.usedAccusation ? (\n            <PlayerSelect players={players} onSend={onMakeAccusation} />\n          ) : (\n            <Instruction className=\"e-phase-instruction\">\n              <Translate pt=\"Você já usou sua chance de acusar\" en=\"You already used your accusation\" />\n            </Instruction>\n          )}\n        </ButtonContainer>\n      )}\n\n      <Instruction className=\"e-lists\">\n        <SuspectsList players={players} />\n        <LocationsList locations={locations} />\n      </Instruction>\n\n      <Notes />\n    </Step>\n  );\n}\n","// This icon file is generated automatically.\nvar UserOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M858.5 763.6a374 374 0 00-80.6-119.5 375.63 375.63 0 00-119.5-80.6c-.4-.2-.8-.3-1.2-.5C719.5 518 760 444.7 760 362c0-137-111-248-248-248S264 225 264 362c0 82.7 40.5 156 102.8 201.1-.4.2-.8.3-1.2.5-44.8 18.9-85 46-119.5 80.6a375.63 375.63 0 00-80.6 119.5A371.7 371.7 0 00136 901.8a8 8 0 008 8.2h60c4.4 0 7.9-3.5 8-7.8 2-77.2 33-149.5 87.8-204.3 56.7-56.7 132-87.9 212.2-87.9s155.5 31.2 212.2 87.9C779 752.7 810 825 812 902.2c.1 4.4 3.6 7.8 8 7.8h60a8 8 0 008-8.2c-1-47.8-10.9-94.3-29.5-138.2zM512 534c-45.9 0-89.1-17.9-121.6-50.4S340 407.9 340 362c0-45.9 17.9-89.1 50.4-121.6S466.1 190 512 190s89.1 17.9 121.6 50.4S684 316.1 684 362c0 45.9-17.9 89.1-50.4 121.6S557.9 534 512 534z\" } }] }, \"name\": \"user\", \"theme\": \"outlined\" };\nexport default UserOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport UserOutlinedSvg from \"@ant-design/icons-svg/es/asn/UserOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar UserOutlined = function UserOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: UserOutlinedSvg\n  }));\n};\n\nUserOutlined.displayName = 'UserOutlined';\nexport default /*#__PURE__*/React.forwardRef(UserOutlined);","// Ant Design Resources\nimport { Button, Modal } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\n// Hooks and API\nimport { useGlobalState, useLanguage } from 'hooks';\n// Components\nimport { ButtonContainer, Translate } from 'components';\n\ntype FinalAssessmentModalProps = {\n  // isModalVisible: boolean;\n  onSendLastQuestioner: GenericFunction;\n  players: GamePlayers;\n};\n\nexport function FinalAssessmentPreparationModal({\n  // isModalVisible,\n  onSendLastQuestioner,\n  players,\n}: FinalAssessmentModalProps) {\n  const [isAdmin] = useGlobalState('isAdmin');\n  const { translate } = useLanguage();\n\n  return (\n    <Modal\n      visible={isAdmin}\n      title={translate('O Tempo Acabou!', \"Time's up\")}\n      footer={null}\n      closable={false}\n      className=\"e-modal\"\n    >\n      <Translate\n        pt=\"Quem foi a última pessoa a responder uma pergunta?\"\n        en=\"Who was the last person to answer a question?\"\n      />\n      <ButtonContainer wrap>\n        {Object.entries(players).map(([playerId, player]) => (\n          <Button\n            type=\"default\"\n            key={playerId}\n            icon={<UserOutlined />}\n            onClick={() => onSendLastQuestioner({ lastPlayerId: playerId })}\n          >\n            {player.name}\n          </Button>\n        ))}\n      </ButtonContainer>\n    </Modal>\n  );\n}\n","import { useEffect } from 'react';\n// Ant Design Resources\nimport { notification } from 'antd';\n// Hooks\nimport { useIsUserReady, useWhichPlayerIsThe, useUser, useLanguage, useStep } from 'hooks';\nimport {\n  useOnGuessLocationAPIRequest,\n  useOnMakeAccusationAPIRequest,\n  useOnSendLastQuestionerAPIRequest,\n} from './api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Instruction, PhaseAnnouncement, PhaseContainer, StepSwitcher, Translate } from 'components';\nimport { StepInvestigation } from './StepInvestigation';\nimport { FinalAssessmentPreparationModal } from './FinalAssessmentPreparationModal';\n\nfunction PhaseInvestigation({ state, players, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, goToNextStep, setStep } = useStep(0);\n  const user = useUser(players);\n  const isUserReady = useIsUserReady(players, state);\n  const [, isUserTheSpy] = useWhichPlayerIsThe('currentSpyId', state, players);\n  const [startingPlayer] = useWhichPlayerIsThe('startingPlayerId', state, players);\n\n  const onGuessLocation = useOnGuessLocationAPIRequest(setStep);\n  const onMakeAccusation = useOnMakeAccusationAPIRequest(setStep);\n  const onSendLastQuestioner = useOnSendLastQuestionerAPIRequest(setStep);\n\n  useEffect(() => {\n    if (state.timeRemaining > 590000 && startingPlayer.name) {\n      notification.info({\n        message: translate('10 minutos!', '10 minutes!'),\n        description: translate(\n          `${startingPlayer.name} começa perguntando!`,\n          `${startingPlayer.name} starts questioning!`\n        ),\n        duration: 10,\n      });\n    }\n  }, [startingPlayer.name]); // eslint-disable-line\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ESPIAO_ENTRE_NOS.INVESTIGATION}\n      className=\"e-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady]} players={players}>\n        {/* Step 0 */}\n        {state?.outcome?.type !== 'VOTE_FAIL' ? (\n          <PhaseAnnouncement\n            type=\"loupe\"\n            title={translate('Investigação', 'Investigation')}\n            onClose={goToNextStep}\n            currentRound={state?.round?.current}\n            buttonText=\"\"\n            className=\"e-phase-announcement\"\n            duration={3}\n          />\n        ) : (\n          <PhaseAnnouncement\n            type=\"opinions\"\n            title={translate('A investigação continua', 'The investigation continues')}\n            onClose={goToNextStep}\n            currentRound={state?.round?.current}\n            buttonText=\"\"\n            className=\"e-phase-announcement\"\n            duration={3}\n          >\n            <Instruction>\n              <Translate pt=\"A votação não foi unanime\" en=\"The vote wasn't unanimous\" />\n            </Instruction>\n          </PhaseAnnouncement>\n        )}\n\n        {/* Step 1 */}\n        <StepInvestigation\n          user={user}\n          isUserTheSpy={isUserTheSpy}\n          locations={state.locations}\n          players={players}\n          timer={state.timer}\n          onGuessLocation={onGuessLocation}\n          onMakeAccusation={onMakeAccusation}\n          onSendLastQuestioner={onSendLastQuestioner}\n          outcome={state.outcome}\n          setStep={setStep}\n        />\n\n        {/* Step 2 */}\n        <PhaseAnnouncement\n          type=\"timer\"\n          title={translate('O tempo acabou!!!', \"Time's up!!!\")}\n          unskippable\n          duration={300}\n          onClose={() => {}}\n          currentRound={state?.round?.current}\n          buttonText=\"\"\n          className=\"e-phase-announcement\"\n        >\n          <Instruction>\n            <Translate pt=\"Preparado para a avaliação final?\" en=\"Are you ready for the final assessment?\" />\n          </Instruction>\n          <FinalAssessmentPreparationModal onSendLastQuestioner={onSendLastQuestioner} players={players} />\n        </PhaseAnnouncement>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseInvestigation;\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useLanguage, useLoading } from 'hooks';\n// Components\nimport { Instruction, ReadyPlayersBar, Step, Title, Translate, View, ViewSwitch } from 'components';\nimport { EspiaoEntreNosCard as Card } from './Card';\nimport { LocationsList } from './LocationsList';\nimport { Notes } from './Notes';\nimport { SuspectsList } from './SuspectsList';\n\ntype StepVotingProps = {\n  user: GamePlayer;\n  locations: ELocation[];\n  players: GamePlayers;\n  onSubmitVote: GenericFunction;\n  accuser: GamePlayer;\n  isUserTheAccuser: boolean;\n  target: GamePlayer;\n  isUserTheTarget: boolean;\n};\n\nexport function StepVoting({\n  user,\n  locations,\n  players,\n  onSubmitVote,\n  accuser,\n  isUserTheAccuser,\n  target,\n  isUserTheTarget,\n}: StepVotingProps) {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n\n  return (\n    <Step className=\"e-phase-step\">\n      <Title level={2} className=\"e-phase-title\">\n        <Translate\n          pt={`${accuser.name} está acusando ${target.name} de ser o espião. Concorda?`}\n          en={`${accuser.name} is accusing ${target.name} to be the spy. Do you agree?`}\n        />\n      </Title>\n\n      <ViewSwitch cases={[isUserTheAccuser, isUserTheTarget, true]}>\n        <View key=\"accuser\">\n          <Instruction className=\"e-phase-instruction\">\n            <Translate\n              pt=\"Você não participa dessa votação, afinal, você quem acusou!\"\n              en=\"You do not join the voting, after all, you triggered it!\"\n            />\n          </Instruction>\n        </View>\n\n        <View key=\"target\">\n          <Instruction className=\"e-phase-instruction\">\n            <Translate\n              pt=\"Você não participa dessa votação, afinal, é você quem está no paredão!\"\n              en=\"You do not joint the voting, after all, you are the target\"\n            />\n          </Instruction>\n        </View>\n\n        <View key=\"others\">\n          {!user.ready ? (\n            <Space>\n              <Button ghost disabled={isLoading} onClick={() => onSubmitVote({ vote: true })}>\n                <Translate pt=\"Também acho!\" en=\"Agree!\" />\n              </Button>\n              <Button ghost disabled={isLoading} onClick={() => onSubmitVote({ vote: false })}>\n                <Translate pt=\"Não é ele(a)\" en=\"It's not them\" />\n              </Button>\n            </Space>\n          ) : (\n            <Instruction className=\"e-phase-instruction\">\n              <Translate pt=\"Voto computado\" en=\"Vote accepted\" />\n            </Instruction>\n          )}\n        </View>\n      </ViewSwitch>\n\n      <Card location={user.location} role={user.role} />\n\n      <ReadyPlayersBar\n        players={players}\n        readyText={translate('Votei', 'I voted')}\n        readyTextPlural={translate('Votamos', 'We voted')}\n        hideNames\n      />\n\n      <Instruction className=\"e-lists\">\n        <SuspectsList players={players} />\n        <LocationsList locations={locations} />\n      </Instruction>\n\n      <Notes />\n    </Step>\n  );\n}\n","// Hooks\nimport { useIsUserReady, useWhichPlayerIsThe, useUser, useLanguage, useStep } from 'hooks';\nimport { useOnSubmitVoteAPIRequest } from './api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Instruction, PhaseAnnouncement, PhaseContainer, StepSwitcher, Translate } from 'components';\nimport { StepVoting } from './StepVoting';\n\nfunction PhaseAssessment({ state, players, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, goToNextStep, setStep } = useStep(0);\n  const user = useUser(players);\n  const isUserReady = useIsUserReady(players, state);\n  const [accuser, isUserTheAccuser] = useWhichPlayerIsThe('accuserId', state, players);\n  const [target, isUserTheTarget] = useWhichPlayerIsThe('targetId', state, players);\n\n  const onSubmitVote = useOnSubmitVoteAPIRequest(setStep);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ESPIAO_ENTRE_NOS.ASSESSMENT}\n      className=\"e-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady]} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          type=\"alert\"\n          title={translate('Acusação!', 'Accusation!')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          buttonText=\"\"\n          className=\"e-phase-announcement e-phase-announcement--alert\"\n          duration={5}\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  Alguém foi acusado! Bafo!\n                  <br />\n                  Apenas se a votação for unanime que o resultado é revelado.\n                </>\n              }\n              en={\n                <>\n                  Someone was accused! Drama!!!\n                  <br />\n                  The solution is revealed only if the voting is unanimous.\n                </>\n              }\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepVoting\n          user={user}\n          locations={state.locations}\n          players={players}\n          onSubmitVote={onSubmitVote}\n          accuser={accuser}\n          isUserTheAccuser={isUserTheAccuser}\n          target={target}\n          isUserTheTarget={isUserTheTarget}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseAssessment;\n","import clsx from 'clsx';\n// Hooks\nimport { useLanguage, useLoading } from 'hooks';\n// Components\nimport { AdminButton, AdminOnlyContainer, Instruction, Step, Title, Translate } from 'components';\n\ntype StepVotingProps = {\n  players: GamePlayers;\n  currentSpy: GamePlayer;\n  resolutionStatus: ResolutionStatus;\n  target?: GamePlayer;\n  onProgressGame: GenericFunction;\n};\n\nexport function StepResolution({\n  players,\n  target,\n  resolutionStatus,\n  currentSpy,\n  onProgressGame,\n}: StepVotingProps) {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n\n  return (\n    <Step className=\"e-phase-step\">\n      <Title\n        level={2}\n        className={clsx('e-phase-title', !resolutionStatus.isPlayerVictory && 'e-phase-title--fail')}\n      >\n        {resolutionStatus.isPlayerVictory ? (\n          <Translate pt=\"Missão Cumprida!\" en=\"Mission Accomplished!\" />\n        ) : (\n          <Translate pt=\"Missão Fracassada\" en=\"Mission Failed\" />\n        )}\n      </Title>\n\n      {resolutionStatus.wasAnAccusationAttempt && (\n        <Instruction className=\"e-phase-instruction\">\n          <Translate\n            pt={\n              <>\n                Os agentes tentaram incriminar {target!.name}\n                {resolutionStatus.didTheSpyWin ? ' e erraram feio!' : ' e acertaram na mosca!'}\n                <br />\n                {resolutionStatus.didTheSpyWin\n                  ? `O espião era ${currentSpy.name}! Todos os segredos da agência foram revelados e o mundo vai acabar.`\n                  : `Parabéns! O mundo está salvo graças a você.`}\n                <br />\n                {resolutionStatus.wasABadVoting &&\n                  'Da próxima vez, discutam mais antes de fazerem uma votação precipitada.'}\n              </>\n            }\n            en={\n              <>\n                The agents tried to pin {target!.name}\n                {resolutionStatus.didTheSpyWin ? ' and got it all wrong!' : \" and hit the bull's eye!\"}\n                <br />\n                {resolutionStatus.didTheSpyWin\n                  ? `The spy was ${currentSpy.name}! All of the agency secrets were revealed and the world will end.`\n                  : `Congratulations! The world is safe and sound thanks to you.`}\n                <br />\n                {resolutionStatus.wasABadVoting && 'Next time, discuss more before making a rash decision.'}\n              </>\n            }\n          />\n        </Instruction>\n      )}\n\n      {resolutionStatus.didSpyGuess && (\n        <Instruction className=\"e-phase-instruction\">\n          <Translate\n            pt={\n              <>\n                O espião disse que o local é {resolutionStatus.guess.name}\n                {resolutionStatus.didTheSpyWin\n                  ? ' e acertou na mosca!'\n                  : ` e errou feio! Os Agentes estão num(a) ${resolutionStatus.currentLocation!.name}.`}\n                <br />\n                {resolutionStatus.didTheSpyWin\n                  ? `Todos os segredos da agência foram revelados e o mundo vai acabar.`\n                  : `Foi por pouco, mas não foi dessa vez que o mal venceu.`}\n              </>\n            }\n            en={\n              <>\n                The spy guessed the location: {resolutionStatus.guess.name}\n                {resolutionStatus.didTheSpyWin\n                  ? \" and hit the bull's eye!\"\n                  : ` and got it all wrong! The agents were at a ${resolutionStatus.currentLocation!.name}.`}\n                <br />\n                {resolutionStatus.didTheSpyWin\n                  ? 'All of the agency secrets were revealed and the world will end...'\n                  : \"That was close... but evil won't win this time.\"}\n              </>\n            }\n          />\n        </Instruction>\n      )}\n\n      <Instruction className=\"e-phase-instruction\">\n        <h4>{resolutionStatus.currentLocation!.name}</h4>\n        <Translate pt=\"Disfarces dos infiltrados:\" en=\"Agent's roles:\" />\n        {Object.values(players).map(({ id, name, role }) => (\n          <li key={`role-list-${id}`}>\n            {name} <Translate pt=\"como\" en=\"as\" /> {role}\n          </li>\n        ))}\n      </Instruction>\n\n      {\n        <AdminOnlyContainer>\n          <AdminButton\n            action={() => onProgressGame({ continue: true })}\n            label={translate('Jogar mais uma rodada', 'Play another round')}\n            disabled={isLoading}\n          />\n          <AdminButton\n            action={() => onProgressGame({ end: true })}\n            label={translate('Terminar Jogo', 'End Game')}\n            disabled={isLoading}\n          />\n        </AdminOnlyContainer>\n      }\n    </Step>\n  );\n}\n","import { useMemo } from 'react';\n// Hooks\nimport { useIsUserReady, useWhichPlayerIsThe, useLanguage, useStep } from 'hooks';\nimport { useOnProgressGameAPIRequest } from './api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\nimport { determineView } from './helpers';\n// Components\nimport { PhaseAnnouncement, PhaseContainer, PhaseTimerReset, StepSwitcher, ViewOr } from 'components';\nimport { StepResolution } from './StepResolution';\n\nfunction PhaseResolution({ state, players, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, goToNextStep, setStep } = useStep(0);\n  const isUserReady = useIsUserReady(players, state);\n  const [currentSpy, isUserTheSpy] = useWhichPlayerIsThe('currentSpyId', state, players);\n  const [target] = useWhichPlayerIsThe('targetId', state, players);\n\n  const onProgressGame = useOnProgressGameAPIRequest(setStep);\n\n  const resolutionStatus = useMemo(\n    () => determineView(state.resolution, isUserTheSpy, state.timeRemaining, state.locations),\n    [state.resolution, isUserTheSpy, state.timeRemaining, state.locations]\n  );\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ESPIAO_ENTRE_NOS.RESOLUTION}\n      className=\"e-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady]} players={players}>\n        {/* Step 0 */}\n        <ViewOr orCondition={resolutionStatus.didSpyGuess}>\n          <PhaseAnnouncement\n            type=\"map-location\"\n            title={translate('O espião tentou adivinhar o local', 'The spy tried to guess the location')}\n            onClose={goToNextStep}\n            currentRound={state?.round?.current}\n            buttonText=\"\"\n            className=\"e-phase-announcement\"\n            duration={5}\n          />\n\n          <PhaseAnnouncement\n            type=\"thief\"\n            title={translate('A votação foi unanime!', 'The vote was unanimous!')}\n            onClose={goToNextStep}\n            currentRound={state?.round?.current}\n            buttonText=\"\"\n            className=\"e-phase-announcement\"\n            duration={5}\n          />\n        </ViewOr>\n\n        {/* Step 1 */}\n        <PhaseTimerReset goToNextStep={goToNextStep} />\n\n        {/* Step 2 */}\n        <PhaseAnnouncement\n          type={resolutionStatus.phaseIcon}\n          title={translate('O fim chegou!', 'The end is here!')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          buttonText=\"\"\n          className=\"e-phase-announcement\"\n          duration={5}\n        />\n\n        {/* Step 3 */}\n        <StepResolution\n          players={players}\n          target={target}\n          resolutionStatus={resolutionStatus}\n          currentSpy={currentSpy}\n          onProgressGame={onProgressGame}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseResolution;\n","export const determineView = (\n  resolution: EResolution,\n  isUserTheSpy: boolean,\n  timeRemaining: number,\n  locations: ELocation[]\n): ResolutionStatus => {\n  const guess = locations.find((location: ELocation) => location.id === resolution?.guess) ?? {};\n\n  return {\n    isPlayerVictory: resolution.isSpyWin === isUserTheSpy,\n    isUserTheSpy,\n    wasABadVoting: resolution.isSpyWin && Boolean(timeRemaining > 0),\n    wasAnAccusationAttempt: resolution.type === 'SPY_FOUND',\n    didSpyGuess: resolution.type === 'SPY_GUESS',\n    didTheSpyWin: resolution.isSpyWin,\n    phaseIcon: resolution.isSpyWin ? 'nuclear-explosion' : 'handcuffs',\n    guess,\n    currentLocation: resolution.currentLocation,\n  };\n};\n","import { Instruction, Translate } from 'components';\nimport { getPlayersFromIds } from 'utils/helpers';\n\ntype FinalAssessmentInstructionProps = {\n  finalAssessment: FinalAssessment;\n  players: GamePlayers;\n};\n\nexport function FinalAssessmentInstruction({ finalAssessment, players }: FinalAssessmentInstructionProps) {\n  const { playerOrder, playerOrderIndex } = finalAssessment;\n  const player = players[playerOrder[playerOrderIndex]];\n\n  const playerOrderNames = getPlayersFromIds(playerOrder, players, true).join(', ');\n\n  return (\n    <Instruction className=\"e-phase-instruction\">\n      <Translate\n        pt={\n          <>\n            Já que vocês falharam em encontrar o espião, há uma última possibilidade!\n            <ul>\n              {playerOrderIndex === 0 ? (\n                <li>Cada jogador, começando por {player.name}, faz uma acusação.</li>\n              ) : (\n                <li>Agora é a vez de {player.name} faz uma acusação.</li>\n              )}\n              <li>\n                Se a votação for unânime em qualquer uma das votações, o jogo acaba e revelam-se os papéis.\n              </li>\n              <li>Sem discussão dessa vez, simplesmente acuse alguém! Não temos mais tempo!</li>\n              <li>A ordem será essa: {playerOrderNames}</li>\n            </ul>\n          </>\n        }\n        en={\n          <>\n            Since you've failed to find the spy, here's a last resort!\n            <ul>\n              {playerOrderIndex === 0 ? (\n                <li>Each player will, starting with {player.name}, will make an accusation.</li>\n              ) : (\n                <li>Now it's time for {player.name} to make an accusation.</li>\n              )}\n              <li>If the voting result is unanimous, the game is over and the roles are revealed.</li>\n              <li>No discussion, just accuse somebody! There's no time anymore!</li>\n              <li>The order is: {playerOrderNames}</li>\n            </ul>\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n","// Ant Design Resources\nimport { Modal } from 'antd';\n// Components\nimport { ButtonContainer, Translate } from 'components';\nimport { useLanguage } from 'hooks';\nimport { PlayerSelect } from './PlayerSelect';\nimport { FinalAssessmentInstruction } from './RulesBlobs';\n\ntype FinalAssessmentModalProps = {\n  isModalVisible: boolean;\n  onMakeAccusation: GenericFunction;\n  players: GamePlayers;\n  finalAssessment: FinalAssessment;\n};\n\nexport function FinalAssessmentModal({\n  isModalVisible,\n  onMakeAccusation,\n  players,\n  finalAssessment,\n}: FinalAssessmentModalProps) {\n  const { translate } = useLanguage();\n\n  return (\n    <Modal\n      visible={isModalVisible}\n      title={translate('Quem você vai acusar?', 'Who are you gonna accuse?')}\n      footer={null}\n      closable={false}\n      className=\"e-modal\"\n    >\n      <FinalAssessmentInstruction finalAssessment={finalAssessment} players={players} />\n      <Translate\n        pt=\"Não há tempo pra pensar, escolha alguém!\"\n        en=\"There's no time to think, just choose someone\"\n      />\n\n      <ButtonContainer>\n        <PlayerSelect players={players} onSend={onMakeAccusation} isFinalAssessment />\n      </ButtonContainer>\n    </Modal>\n  );\n}\n","import { Instruction, Step, Title, Translate } from 'components';\nimport { FinalAssessmentInstruction } from './RulesBlobs';\nimport { EspiaoEntreNosCard as Card } from './Card';\nimport { LocationsList } from './LocationsList';\nimport { Notes } from './Notes';\nimport { SuspectsList } from './SuspectsList';\nimport { FinalAssessmentModal } from './FinalAssessmentModal';\nimport { useEffect } from 'react';\nimport { notification } from 'antd';\nimport { useLanguage } from 'hooks';\n\ntype StepFinalAssessmentProps = {\n  onMakeAccusation: GenericFunction;\n  players: GamePlayers;\n  user: GamePlayer;\n  locations: ELocation[];\n  isUserTheAccuser: boolean;\n  outcome?: EOutcome;\n  finalAssessment: FinalAssessment;\n};\n\nexport function StepFinalAssessment({\n  finalAssessment,\n  players,\n  user,\n  locations,\n  isUserTheAccuser,\n  onMakeAccusation,\n  outcome,\n}: StepFinalAssessmentProps) {\n  const { translate } = useLanguage();\n\n  useEffect(() => {\n    if (outcome?.type === 'VOTE_FAIL') {\n      notification.info({\n        message: translate('A votação não foi unânime', 'The voting was not unanimous'),\n        description: outcome.votedYes ? `Votaram sim: ${outcome.votedYes}` : 'Ninguém votou sim',\n        duration: 10,\n      });\n    }\n  }, [outcome?.type]); // eslint-disable-line\n\n  return (\n    <Step>\n      <Title level={2} className=\"e-phase-title\">\n        <Translate pt=\"Última Chance!\" en=\"Last chance!\" />\n      </Title>\n\n      <FinalAssessmentModal\n        isModalVisible={isUserTheAccuser}\n        onMakeAccusation={onMakeAccusation}\n        players={players}\n        finalAssessment={finalAssessment}\n      />\n\n      <FinalAssessmentInstruction finalAssessment={finalAssessment} players={players} />\n\n      <Card location={user.location} role={user.role} />\n\n      <Instruction className=\"e-lists\">\n        <SuspectsList players={players} />\n        <LocationsList locations={locations} />\n      </Instruction>\n\n      <Notes />\n    </Step>\n  );\n}\n","// Hooks\nimport { useIsUserReady, useUser, useLanguage, useStep } from 'hooks';\nimport { useOnMakeAccusationAPIRequest } from './api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Instruction, PhaseAnnouncement, PhaseContainer, StepSwitcher, Translate } from 'components';\nimport { StepFinalAssessment } from './StepFinalAssessment';\n\nfunction PhaseFinalAssessment({ state, players, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, goToNextStep, setStep } = useStep(0);\n  const isUserReady = useIsUserReady(players, state);\n  const user = useUser(players);\n\n  const onMakeAccusation = useOnMakeAccusationAPIRequest(setStep);\n\n  const isUserTheAccuser =\n    state.finalAssessment.playerOrder[state.finalAssessment.playerOrderIndex] === user.id;\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ESPIAO_ENTRE_NOS.FINAL_ASSESSMENT}\n      className=\"e-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady]} players={players}>\n        {/* Step 0 */}\n        {state.finalAssessment.playerOrderIndex === 0 ? (\n          <PhaseAnnouncement\n            type=\"people-assessment\"\n            title={translate('O tempo acabou!', \"Time's up!\")}\n            onClose={goToNextStep}\n            currentRound={state?.round?.current}\n            buttonText=\"\"\n            className=\"e-phase-announcement\"\n            duration={2}\n          />\n        ) : (\n          <PhaseAnnouncement\n            type=\"opinions\"\n            title={translate('A avaliação final continua', 'The final assessment continues')}\n            onClose={goToNextStep}\n            currentRound={state?.round?.current}\n            buttonText=\"\"\n            className=\"e-phase-announcement\"\n            duration={3}\n          >\n            <Instruction>\n              <Translate pt=\"A votação não foi unanime\" en=\"The vote wasn't unanimous\" />\n            </Instruction>\n          </PhaseAnnouncement>\n        )}\n\n        {/* Step 1 */}\n        <StepFinalAssessment\n          onMakeAccusation={onMakeAccusation}\n          players={players}\n          finalAssessment={state.finalAssessment}\n          outcome={state.outcome}\n          user={user}\n          locations={state.locations}\n          isUserTheAccuser={isUserTheAccuser}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseFinalAssessment;\n","// Constants\nimport { GAME_COLLECTION } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { GameOver, Session, PhaseSetup, PhaseRules, PageError, PhaseLobby } from 'components';\nimport PhaseAssignment from './PhaseAssignment';\nimport PhaseInvestigation from './PhaseInvestigation';\nimport PhaseAssessment from './PhaseAssessment';\nimport PhaseResolution from './PhaseResolution';\nimport PhaseFinalAssessment from './PhaseFinalAssessment';\n\nfunction SessionEspiaoEntreNos({ gameId }: SessionProps) {\n  function getActiveComponent(phase: string) {\n    switch (phase) {\n      case PHASES.DEFAULT.LOBBY:\n        return PhaseLobby;\n      case PHASES.DEFAULT.RULES:\n        return PhaseRules;\n      case PHASES.DEFAULT.SETUP:\n        return PhaseSetup;\n      case PHASES.ESPIAO_ENTRE_NOS.ASSIGNMENT:\n        return PhaseAssignment;\n      case PHASES.ESPIAO_ENTRE_NOS.INVESTIGATION:\n        return PhaseInvestigation;\n      case PHASES.ESPIAO_ENTRE_NOS.ASSESSMENT:\n        return PhaseAssessment;\n      case PHASES.ESPIAO_ENTRE_NOS.FINAL_ASSESSMENT:\n        return PhaseFinalAssessment;\n      case PHASES.ESPIAO_ENTRE_NOS.RESOLUTION:\n        return PhaseResolution;\n      case PHASES.DEFAULT.GAME_OVER:\n        return GameOver;\n      default:\n        return PageError;\n    }\n  }\n\n  return (\n    <Session\n      gameId={gameId}\n      gameCollection={GAME_COLLECTION.ESPIAO_ENTRE_NOS}\n      getActiveComponent={getActiveComponent}\n    />\n  );\n}\n\nexport default SessionEspiaoEntreNos;\n","// This icon file is generated automatically.\nvar EnvironmentOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M854.6 289.1a362.49 362.49 0 00-79.9-115.7 370.83 370.83 0 00-118.2-77.8C610.7 76.6 562.1 67 512 67c-50.1 0-98.7 9.6-144.5 28.5-44.3 18.3-84 44.5-118.2 77.8A363.6 363.6 0 00169.4 289c-19.5 45-29.4 92.8-29.4 142 0 70.6 16.9 140.9 50.1 208.7 26.7 54.5 64 107.6 111 158.1 80.3 86.2 164.5 138.9 188.4 153a43.9 43.9 0 0022.4 6.1c7.8 0 15.5-2 22.4-6.1 23.9-14.1 108.1-66.8 188.4-153 47-50.4 84.3-103.6 111-158.1C867.1 572 884 501.8 884 431.1c0-49.2-9.9-97-29.4-142zM512 880.2c-65.9-41.9-300-207.8-300-449.1 0-77.9 31.1-151.1 87.6-206.3C356.3 169.5 431.7 139 512 139s155.7 30.5 212.4 85.9C780.9 280 812 353.2 812 431.1c0 241.3-234.1 407.2-300 449.1zm0-617.2c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm79.2 255.2A111.6 111.6 0 01512 551c-29.9 0-58-11.7-79.2-32.8A111.6 111.6 0 01400 439c0-29.9 11.7-58 32.8-79.2C454 338.6 482.1 327 512 327c29.9 0 58 11.6 79.2 32.8C612.4 381 624 409.1 624 439c0 29.9-11.6 58-32.8 79.2z\" } }] }, \"name\": \"environment\", \"theme\": \"outlined\" };\nexport default EnvironmentOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EnvironmentOutlinedSvg from \"@ant-design/icons-svg/es/asn/EnvironmentOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar EnvironmentOutlined = function EnvironmentOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: EnvironmentOutlinedSvg\n  }));\n};\n\nEnvironmentOutlined.displayName = 'EnvironmentOutlined';\nexport default /*#__PURE__*/React.forwardRef(EnvironmentOutlined);","// This icon file is generated automatically.\nvar QuestionCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 708c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zm62.9-219.5a48.3 48.3 0 00-30.9 44.8V620c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-21.5c0-23.1 6.7-45.9 19.9-64.9 12.9-18.6 30.9-32.8 52.1-40.9 34-13.1 56-41.6 56-72.7 0-44.1-43.1-80-96-80s-96 35.9-96 80v7.6c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V420c0-39.3 17.2-76 48.4-103.3C430.4 290.4 470 276 512 276s81.6 14.5 111.6 40.7C654.8 344 672 380.7 672 420c0 57.8-38.1 109.8-97.1 132.5z\" } }] }, \"name\": \"question-circle\", \"theme\": \"filled\" };\nexport default QuestionCircleFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport QuestionCircleFilledSvg from \"@ant-design/icons-svg/es/asn/QuestionCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar QuestionCircleFilled = function QuestionCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: QuestionCircleFilledSvg\n  }));\n};\n\nQuestionCircleFilled.displayName = 'QuestionCircleFilled';\nexport default /*#__PURE__*/React.forwardRef(QuestionCircleFilled);"],"names":["EspiaoEntreNosCard","location","role","header","translate","useLanguage","spyHeader","spyFooter","agentFooter","color","size","footer","className","footerClassName","QuestionCircleFilled","ClearOutlined","props","ref","React","AntdIcon","_objectSpread","icon","ClearOutlinedSvg","displayName","LocationsList","locations","useGlobalState","cache","setCache","EnvironmentOutlined","pt","en","title","shape","ghost","type","onClick","s","newState","Object","keys","forEach","key","startsWith","clsx","map","id","locationId","name","Notes","cols","rows","placeholder","StepAssignment","user","isUserTheSpy","level","buttonText","state","players","info","useStep","step","goToNextStep","useUser","isUserReady","useIsUserReady","useWhichPlayerIsThe","phase","allowedPhase","PHASES","conditions","round","onPressButton","time","circleColor","onClose","currentRound","current","duration","useOnMakeAccusationAPIRequest","setStep","request","useAPICall","apiFunction","ESPIAO_ENTRE_NOS_API","actionName","onBeforeCall","onError","successMessage","errorMessage","payload","action","LocationSelect","onSend","isLoading","useLoading","useState","selectedLocationId","setSelectedLocationId","selectedLocationName","useMemo","find","onChange","value","onConfirm","okText","cancelText","disabled","LoadingOutlined","PlayerSelect","isFinalAssessment","userId","selectedPlayerId","setSelectedPlayerId","playersWithoutMe","values","filter","player","playerId","targetId","AimOutlined","AimOutlinedSvg","IssuesCloseOutlined","IssuesCloseOutlinedSvg","SuspectsList","sortedPlayers","orderBy","usedAccusation","Timer","timer","hideAccusationSelect","useTimer","expiryTimestamp","inNTime","timeRemaining","autoStart","onExpire","minutes","seconds","StepInvestigation","onGuessLocation","onMakeAccusation","outcome","onSendLastQuestioner","isAccusationSelectVisible","setAccusationSelectVisible","useEffect","notification","message","description","votedYes","UserOutlined","UserOutlinedSvg","FinalAssessmentPreparationModal","isAdmin","visible","closable","wrap","entries","lastPlayerId","startingPlayer","useOnGuessLocationAPIRequest","useOnSendLastQuestionerAPIRequest","unskippable","StepVoting","onSubmitVote","accuser","isUserTheAccuser","target","isUserTheTarget","cases","ready","vote","readyText","readyTextPlural","hideNames","useOnSubmitVoteAPIRequest","StepResolution","resolutionStatus","currentSpy","onProgressGame","isPlayerVictory","wasAnAccusationAttempt","didTheSpyWin","wasABadVoting","didSpyGuess","guess","currentLocation","continue","label","end","ADMIN_API","ADMIN_ACTIONS","useOnProgressGameAPIRequest","resolution","isSpyWin","Boolean","phaseIcon","determineView","orCondition","FinalAssessmentInstruction","finalAssessment","playerOrder","playerOrderIndex","playerOrderNames","getPlayersFromIds","join","FinalAssessmentModal","isModalVisible","StepFinalAssessment","gameId","gameCollection","GAME_COLLECTION","getActiveComponent","PhaseLobby","PhaseRules","PhaseSetup","PhaseAssignment","PhaseInvestigation","PhaseAssessment","PhaseFinalAssessment","PhaseResolution","GameOver","PageError","EnvironmentOutlinedSvg","QuestionCircleFilledSvg"],"sourceRoot":""}