{"version":3,"file":"static/js/page-td-daily.8984c183.chunk.js","mappings":"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","sources":["components/canvas/CanvasResizer.tsx","components/canvas/CanvasSVG.tsx","components/canvas/DrawingCanvas.tsx","components/cards/ItemCard.tsx","components/cards/SignCard.tsx","components/cards/WarehouseGoodCard.tsx","components/cards/Card.tsx","components/metrics/MetricHighlight.tsx","components/metrics/TimeHighlight.tsx","components/sprites/Sprite.tsx","components/timers/TimerClock.tsx","components/timers/TimerBar.tsx","components/timers/TimedTimerBar.tsx","components/timers/TimedTimerClock.tsx","components/timers/WaitingTime.tsx","hooks/useTDBaseUrl.ts","icons/ApplauseIcon.tsx","pages/Daily/hooks/useDailyChallenge.tsx","pages/Daily/games/AquiO/utils/settings.ts","pages/Daily/games/ArteRuim/utils/settings.ts","pages/Daily/games/Picaco/utils/settings.ts","pages/Daily/games/ControleDeEstoque/utils/settings.ts","pages/Daily/games/Filmaco/utils/settings.ts","pages/Daily/games/Palavreado/utils/settings.ts","pages/Daily/games/TeoriaDeConjuntos/utils/settings.ts","pages/Daily/games/ComunicacaoAlienigena/utils/settings.ts","pages/Daily/components/DevResetLocalStorageButton.tsx","pages/Daily/components/Header.tsx","pages/Daily/components/DailyChrome.tsx","pages/Daily/components/DailyError.tsx","pages/Daily/components/DailyLoading.tsx","pages/Daily/games/AquiO/data/useRandomAquiOChallenge.ts","pages/Daily/hooks/useDailyGameState.ts","pages/Daily/hooks/useDailyLocalToday.ts","pages/Daily/hooks/useShowResultModal.ts","pages/Daily/games/AquiO/utils/helpers.ts","pages/Daily/components/Menu.tsx","pages/Daily/games/AquiO/components/Disc.tsx","pages/Daily/games/AquiO/components/PreloadItems.tsx","pages/Daily/components/NextGameSuggestion.tsx","pages/Daily/components/CopyToClipboardResult.tsx","pages/Daily/games/AquiO/components/ResultsModalContent.tsx","pages/Daily/games/AquiO/components/Rules.tsx","pages/Daily/games/AquiO/components/DailyAquiO.tsx","pages/Daily/games/AquiO/utils/useAquiOEngine.ts","pages/Daily/games/AquiO/DailyAquiOGame.tsx","pages/Daily/components/Keyboard.tsx","pages/Daily/games/ArteRuim/utils/helpers.ts","pages/Daily/games/ArteRuim/components/DrawingCarousel.tsx","pages/Daily/games/ArteRuim/components/Prompt.tsx","pages/Daily/games/ArteRuim/components/ResultsModalContent.tsx","pages/Daily/games/ArteRuim/components/Rules.tsx","pages/Daily/games/ArteRuim/components/DailyArteRuim.tsx","pages/Daily/games/ArteRuim/utils/useArteRuimEngine.ts","pages/Daily/games/ArteRuim/DailyArteRuimGame.tsx","pages/Daily/components/Region.tsx","pages/Daily/games/ControleDeEstoque/utils/helpers.ts","pages/Daily/games/ControleDeEstoque/utils/useControleDeEstoqueEngine.ts","pages/Daily/games/ControleDeEstoque/components/FulfillmentBoard.tsx","pages/Daily/games/ControleDeEstoque/components/Orders.tsx","pages/Daily/games/ControleDeEstoque/components/FulfillingPhase.tsx","pages/Daily/games/ControleDeEstoque/components/PreloadItems.tsx","pages/Daily/games/ControleDeEstoque/components/ResultsModalContent.tsx","pages/Daily/components/BetaBanner.tsx","pages/Daily/games/ControleDeEstoque/components/Rules.tsx","pages/Daily/games/ControleDeEstoque/components/StockingBoard.tsx","pages/Daily/games/ControleDeEstoque/components/StockingPhase.tsx","pages/Daily/games/ControleDeEstoque/components/DailyControleDeEstoque.tsx","pages/Daily/games/ControleDeEstoque/DailyControleDeEstoqueGame.tsx","pages/Daily/games/Debug.tsx","pages/Daily/games/Filmaco/utils/helpers.ts","pages/Daily/games/Filmaco/components/Prompt.tsx","pages/Daily/games/Filmaco/components/ResultsModalContent.tsx","pages/Daily/games/Filmaco/components/Rules.tsx","pages/Daily/games/Filmaco/components/DailyFilmaco.tsx","pages/Daily/games/Filmaco/utils/useFilmacoEngine.ts","pages/Daily/games/Filmaco/DailyFilmacoGame.tsx","pages/Daily/components/PlayedWrapper.tsx","pages/Daily/games/Hub.tsx","pages/Daily/games/Palavreado/utils/helpers.ts","pages/Daily/games/Palavreado/components/Board.tsx","pages/Daily/games/Palavreado/components/ResultsModalContent.tsx","pages/Daily/games/Palavreado/components/Rules.tsx","pages/Daily/games/Palavreado/components/DailyPalavreado.tsx","pages/Daily/games/Palavreado/utils/usePalavreadoEngine.ts","pages/Daily/games/Palavreado/DailyPalavreadoGame.tsx","pages/Daily/games/Picaco/utils/helpers.ts","pages/Daily/games/Picaco/utils/usePicacoEngine.ts","pages/Daily/hooks/useDailySaveDrawings.ts","pages/Daily/games/Picaco/components/Canvas.tsx","pages/Daily/games/Picaco/components/Rules.tsx","pages/Daily/games/Picaco/components/DailyPicaco.tsx","pages/Daily/games/Picaco/DailyPicacoGame.tsx","pages/Daily/games/TeoriaDeConjuntos/utils/helpers.ts","pages/Daily/games/TeoriaDeConjuntos/components/Diagram.tsx","pages/Daily/games/TeoriaDeConjuntos/components/Thing.tsx","pages/Daily/games/TeoriaDeConjuntos/components/InDiagramThings.tsx","pages/Daily/games/TeoriaDeConjuntos/components/PlacementModal.tsx","pages/Daily/games/TeoriaDeConjuntos/components/ResultsModalContent.tsx","pages/Daily/games/TeoriaDeConjuntos/components/Rules.tsx","pages/Daily/games/TeoriaDeConjuntos/components/RulesHints.tsx","pages/Daily/games/TeoriaDeConjuntos/components/DailyTeoriaDeConjuntos.tsx","pages/Daily/games/TeoriaDeConjuntos/utils/useTeoriaDeConjuntosEngine.ts","pages/Daily/games/TeoriaDeConjuntos/DailyTeoriaDeConjuntosGame.tsx","pages/Daily/games/ComunicacaoAlienigena/utils/useComunicacaoAlienigenaDemo.ts","pages/Daily/games/ComunicacaoAlienigena/utils/helpers.ts","pages/Daily/games/ComunicacaoAlienigena/components/ResultsModalContent.tsx","pages/Daily/games/ComunicacaoAlienigena/components/Rules.tsx","pages/Daily/games/ComunicacaoAlienigena/components/DailyComunicacaoAlienigena.tsx","pages/Daily/games/ComunicacaoAlienigena/utils/useComunicacaoAlienigenaEngine.ts","pages/Daily/games/ComunicacaoAlienigena/DailyComunicacaoAlienigenaGame.tsx","pages/Daily/Daily.tsx"],"sourcesContent":["// Ant Design Resources\nimport { DragOutlined } from '@ant-design/icons';\nimport { Slider } from 'antd';\n// Hooks\nimport { useGlobalLocalStorage } from 'hooks/useGlobalLocalStorage';\n// Components\nimport { FixedMenuButton } from 'components/buttons';\nimport { Translate } from 'components/language';\n\n/**\n * Fixed Menu Button for resizing canvas\n */\nexport const CanvasResizer = () => {\n  const [canvasSize, setCanvasSize] = useGlobalLocalStorage('canvasSize');\n\n  return (\n    <FixedMenuButton\n      type=\"popover\"\n      position={1}\n      icon={<DragOutlined />}\n      label={labelText}\n      content={\n        <div className=\"canvas-resizer\">\n          <div className=\"canvas-resizer__label\">{labelText}</div>\n          <Slider\n            className=\"canvas-resizer__slider\"\n            value={canvasSize ?? 100}\n            min={150}\n            max={500}\n            step={50}\n            onChange={setCanvasSize}\n          />\n        </div>\n      }\n    />\n  );\n};\n\nconst labelText = <Translate pt=\"Tamanho das Artes\" en=\"Art Size\" />;\n","/**\n * Builds paths from canvas lines\n * @param lines\n * @returns\n */\nconst getPathFromKonvaLines = (lines: CanvasLine[]) => {\n  const result = lines.map((lineArr) => {\n    let path = '';\n    for (let x = 0, y = 1; y < lineArr.length; x += 2, y += 2) {\n      if (lineArr[x + 2] && lineArr[y + 2]) {\n        path += `M${lineArr[x]},${lineArr[y]} L${lineArr[x + 2]},${lineArr[y + 2]}`;\n      }\n    }\n\n    return path;\n  });\n\n  return result;\n};\n\ntype CanvasSVGProps = {\n  /**\n   * The stringified svg path\n   */\n  drawing: string;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * The width of the canvas (default: 500)\n   */\n  width?: number;\n  /**\n   * The height of the canvas (default: 500)\n   */\n  height?: number;\n  /**\n   * Size of the stroke. Default: medium\n   */\n  strokeWidth?: 'small' | 'medium' | 'large';\n  /**\n   * Custom view box size (default: '0 0 500')\n   */\n  viewBox?: string;\n};\n\nexport const CanvasSVG = ({\n  drawing = '',\n  className = '',\n  width = 250,\n  height,\n  strokeWidth = 'medium',\n  viewBox = '0 0 500 500',\n}: CanvasSVGProps) => {\n  const konvaLines = JSON.parse(drawing);\n  const paths = getPathFromKonvaLines(konvaLines);\n\n  const strokeWidthBySize =\n    {\n      small: 3,\n      medium: 5,\n      large: 7,\n    }?.[strokeWidth] ?? 5;\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox={viewBox}\n      overflow=\"hidden\"\n      className={className}\n      style={{ width: `${width}px`, height: `${height || width}px` }}\n    >\n      <defs />\n      {paths.map((path, index) => (\n        <path\n          key={`${drawing}-${index}`}\n          d={path}\n          fill=\"none\"\n          stroke=\"#000\"\n          strokeWidth={strokeWidthBySize}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit=\"10\"\n        />\n      ))}\n    </svg>\n  );\n};\n","import clsx from 'clsx';\nimport { type CSSProperties, type ReactNode, useRef, useState } from 'react';\nimport { Stage, Layer, Line } from 'react-konva';\nimport { DeleteOutlined, UndoOutlined } from '@ant-design/icons';\nimport { Button, Flex, Space } from 'antd';\nimport { Translate } from 'components/language';\n\ntype DrawingCanvasProps = {\n  /**\n   * Lines drawn in the canvas\n   */\n  lines: CanvasLine[];\n  /**\n   * Function where any new version of the drawing is sent to\n   */\n  setLines: CanvasSetLine;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Show controls to undo, redo, or erase drawing. Default: false\n   */\n  showControls?: boolean;\n  /**\n   * Size of the stroke. Default: medium\n   */\n  strokeWidth?: 'small' | 'medium' | 'large';\n  /**\n   * The width of the canvas (default: 500)\n   */\n  width?: number;\n  /**\n   * The height of the canvas (default: 500)\n   */\n  height?: number;\n  /**\n   * If the canvas will be read frequently, it will be rendered in a different way\n   */\n  willReadFrequently?: boolean;\n  /**\n   * Custom style for the canvas\n   */\n  style?: CSSProperties;\n  /**\n   * A mask to be used under the canvas\n   * Requires changing canvas to be transparent and setting the mask to have an absolute position\n   */\n  mask?: ReactNode;\n};\n\n/**\n * Canvas drawing board using react-konva\n * It requires an array of lines and an setState function to save the lines\n */\nexport const DrawingCanvas = ({\n  lines,\n  setLines,\n  className = '',\n  showControls = false,\n  strokeWidth = 'medium',\n  width = 500,\n  height,\n  willReadFrequently = false,\n  style = {},\n  mask,\n}: DrawingCanvasProps) => {\n  const [drawingHistory, setDrawingHistory] = useState<CanvasLine[]>([]);\n  const isDrawing = useRef(false);\n\n  /**\n   * Toggles off the isDrawing flag\n   */\n  const startDrawing = () => {\n    isDrawing.current = true;\n  };\n\n  /**\n   * Toggles off the isDrawing flag and resets history\n   */\n  const stopDrawing = () => {\n    isDrawing.current = false;\n    setDrawingHistory([]);\n  };\n\n  const startLine = (e: any) => {\n    startDrawing();\n    const pos = e.target.getStage().getPointerPosition();\n    setLines([...lines, [Math.round(pos.x), Math.round(pos.y)]]);\n  };\n\n  const finishLine = (e: any) => {\n    // Add point if it was a point\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    const x = Math.round(point.x);\n    const y = Math.round(point.y);\n\n    let lastLineEntry = lines[lines.length - 1];\n    lastLineEntry = lastLineEntry.concat([x + 0.1, y + 0.1]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLineEntry);\n    setLines(lines.concat());\n  };\n\n  /**\n   * Start recording drawing\n   * @param e - konva mouse event\n   */\n  const handleMouseDown = (e: any) => {\n    startLine(e);\n  };\n\n  /**\n   * Tracks mouse moving during the drawing\n   * @param e - konva mouse event\n   */\n  const handleMouseMove = (e: any) => {\n    // no drawing - skipping\n    if (!isDrawing.current) {\n      return;\n    }\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    let lastLine = lines[lines.length - 1];\n    // add end point\n    lastLine = lastLine.concat([Math.round(point.x), Math.round(point.y)]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLine);\n    setLines(lines.concat());\n  };\n\n  const handleMouseUp = (e: any) => {\n    if (isDrawing.current) {\n      stopDrawing();\n\n      finishLine(e);\n    }\n  };\n\n  /**\n   * Handles case when a current drawing is stopped off stage\n   * @param e - mouse event\n   */\n  const handleOffsetMouseUp = () => {\n    stopDrawing();\n  };\n\n  /**\n   * Handles case when a current drawing is started off stage\n   * @param e - mouse event\n   */\n  const handleOffsetMouseDown = () => {\n    startDrawing();\n  };\n\n  /**\n   * Handles when mouse leaves the stage\n   * @param e - konva mouse event\n   */\n  const handleMouseLeave = (e: any) => {\n    if (isDrawing.current) {\n      finishLine(e);\n\n      window.document.addEventListener('mouseup', handleOffsetMouseUp);\n      window.document.addEventListener('touchEnd', handleOffsetMouseUp);\n      window.document.addEventListener('mousedown', handleOffsetMouseDown);\n      window.document.addEventListener('touchStart', handleOffsetMouseDown);\n    }\n  };\n\n  /**\n   * Handles when mouse reenters the state\n   * @param e\n   */\n  const handleMouseEnter = (e: any) => {\n    if (isDrawing.current) {\n      startLine(e);\n    }\n    window.document.removeEventListener('mouseup', handleOffsetMouseUp);\n    window.document.removeEventListener('touchEnd', handleOffsetMouseUp);\n    window.document.removeEventListener('mousedown', handleOffsetMouseDown);\n    window.document.removeEventListener('touchStart', handleOffsetMouseDown);\n  };\n\n  const onClear = () => setLines([]);\n\n  const onUndo = () => {\n    const linesCopy = [...lines];\n    const drawingHistoryCopy = [...drawingHistory];\n    const lastLine: CanvasLine | undefined = linesCopy.pop();\n    if (lastLine) {\n      drawingHistoryCopy.push(lastLine);\n      setLines(linesCopy);\n      setDrawingHistory(drawingHistoryCopy);\n    }\n  };\n\n  const onRedo = () => {\n    const linesCopy = [...lines];\n    const drawingHistoryCopy = [...drawingHistory];\n    const lastUndoLine = drawingHistoryCopy.pop();\n    if (lastUndoLine) {\n      linesCopy.push(lastUndoLine);\n      setLines(linesCopy);\n      setDrawingHistory(drawingHistoryCopy);\n    }\n  };\n\n  const strokeWidthBySize =\n    {\n      small: 3,\n      medium: 5,\n      large: 7,\n    }?.[strokeWidth] ?? 5;\n\n  return (\n    <Flex vertical align=\"center\" className=\"relative\">\n      {mask}\n      <Stage\n        width={width}\n        height={height || width}\n        onMouseDown={handleMouseDown}\n        onMousemove={handleMouseMove}\n        onMouseup={handleMouseUp}\n        onTouchStart={handleMouseDown}\n        onTouchMove={handleMouseMove}\n        onTouchEnd={handleMouseUp}\n        onMouseLeave={handleMouseLeave}\n        onMouseEnter={handleMouseEnter}\n        className={clsx('drawing-canvas', className)}\n        style={{\n          width: `${width}px`,\n          height: `${height || width}px`,\n          ...style,\n        }}\n        willReadFrequently={willReadFrequently}\n        id=\"drawing-canvas\"\n      >\n        <Layer>\n          {lines.map((line) => (\n            <Line\n              key={String(line)}\n              points={line}\n              stroke=\"#222222\"\n              strokeWidth={strokeWidthBySize}\n              tension={0.5}\n              lineCap=\"round\"\n              globalCompositeOperation=\"source-over\"\n            />\n          ))}\n        </Layer>\n      </Stage>\n      {showControls && (\n        <Space className=\"mt-2\">\n          <Button onClick={onUndo} disabled={lines.length === 0}>\n            <UndoOutlined />\n            <Translate pt=\"Desfazer\" en=\"Undo\" />\n          </Button>\n          <Button onClick={onRedo} disabled={drawingHistory.length === 0}>\n            <UndoOutlined />\n            <Translate pt=\"Refazer\" en=\"Redo\" />\n          </Button>\n          <Button onClick={onClear} disabled={lines.length === 0}>\n            <DeleteOutlined />\n            <Translate pt=\"Apagar\" en=\"Clear\" />\n          </Button>\n        </Space>\n      )}\n    </Flex>\n  );\n};\n","import clsx from 'clsx';\n// Components\nimport { DualTranslate } from 'components/language';\nimport { Sprite } from 'components/sprites';\n// Sass\nimport './ItemCard.scss';\n\nexport type ItemCardProps = {\n  /**\n   * The id of the item\n   */\n  id: string;\n  /**\n   * The width of the item\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n  /**\n   * Replacement title, usually the name of the item\n   */\n  title?: string;\n  /**\n   * Optional text to display\n   */\n  text?: DualLanguageValue;\n  /**\n   * Optional padding\n   */\n  padding?: number;\n};\n\nconst BASE = 64;\n\n/**\n * Retrieves the source and item ID based on a given string.\n *\n * @param str - The input string.\n * @returns An array containing the source and item ID.\n */\nexport const getSource = (str: string) => {\n  const match = str.match(/\\d+/);\n  const numId = match ? Number.parseInt(match[0], 10) : 0;\n  const itemId = `item-${numId}`;\n  const sourceId = Math.ceil(numId / BASE) * BASE;\n  const source = `items-${sourceId}`;\n  return [source, itemId];\n};\n\n/**\n * An item card component.\n */\nexport function ItemCard({ id, width = 75, className, title, text, padding }: ItemCardProps) {\n  const [source, itemId] = getSource(id);\n\n  const height = text ? 'auto' : `${width}px`;\n  const divPadding = padding === 0 ? { padding: 0 } : {};\n\n  return (\n    <div className={clsx('item-card', className)} style={{ width: `${width}px`, height, ...divPadding }}>\n      <Sprite source={source} id={itemId} width={width} title={title} padding={padding} />\n      {!!text && (\n        <span className=\"item-card__text\">\n          <DualTranslate>{text}</DualTranslate>\n        </span>\n      )}\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Components\nimport { Sprite } from 'components/sprites';\n// Sass\nimport './SignCard.scss';\n\ntype SignCardProps = {\n  /**\n   * The id of the sign (do not prefix with sign)\n   */\n  id: string | number;\n  /**\n   * The width of the sign\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\n/**\n * An alien sign card component.\n */\nexport function SignCard({ id, width = 50, className = '' }: SignCardProps) {\n  return (\n    <div className={clsx('sign-card', className)} style={{ width: `${width}px`, height: `${width}px` }}>\n      <svg viewBox=\"0 0 512 512\" style={{ width: `${width - 12}px`, height: `${width - 12}px` }}>\n        <Sprite source=\"alien-signs\" id={`sign-${id}`} width={width} />\n      </svg>\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Components\nimport { DualTranslate } from 'components/language';\nimport { Sprite } from 'components/sprites';\n// Sass\nimport './WarehouseGoodCard.scss';\n\nexport type WarehouseGoodCardProps = {\n  /**\n   * The id of the warehouse good\n   */\n  id: string;\n  /**\n   * The width of the warehouse good\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n  /**\n   * Replacement title, usually the name of the warehouse good\n   */\n  title?: string;\n  /**\n   * Optional text to display\n   */\n  text?: DualLanguageValue;\n  /**\n   * Optional padding\n   */\n  padding?: number;\n};\n\nconst BASE = 64;\n\n/**\n * Retrieves the source and warehouse good ID based on a given string.\n *\n * @param str - The input string.\n * @returns An array containing the source and warehouse good ID.\n */\nexport const getSource = (str: string) => {\n  const match = str.match(/\\d+/);\n  const numId = match ? Number.parseInt(match[0], 10) : 0;\n  const goodId = `good-${numId}`;\n  const sourceId = Math.ceil(numId / BASE) * BASE;\n  const source = `warehouse-goods-${sourceId}`;\n  return [source, goodId];\n};\n\n/**\n * An good card component.\n */\nexport function WarehouseGoodCard({\n  id,\n  width = 75,\n  className,\n  title,\n  text,\n  padding,\n}: WarehouseGoodCardProps) {\n  const [source, goodId] = getSource(id);\n\n  const height = text ? 'auto' : `${width}px`;\n\n  return (\n    <div className={clsx('warehouse-good-card', className)} style={{ width: `${width}px`, height, padding }}>\n      <Sprite source={source} id={goodId} width={width} title={title} padding={padding} />\n      {!!text && (\n        <span className=\"warehouse-good-card__text\">\n          <DualTranslate>{text}</DualTranslate>\n        </span>\n      )}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport type { ReactNode } from 'react';\n// Utils\nimport { getColorFromLetter } from 'utils/helpers';\n// Sass\nimport './Card.scss';\n\ntype CardProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  header?: string;\n  footer?: string;\n  color?: string;\n  size?: 'small' | 'medium' | 'large';\n  randomColor?: boolean;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  headerClassName?: string;\n  footerClassName?: string;\n  hideHeader?: boolean;\n};\nexport const Card = ({\n  children,\n  header = 'Carta',\n  footer,\n  color = 'none',\n  size = 'medium',\n  randomColor = false,\n  className = '',\n  headerClassName = '',\n  footerClassName = '',\n  hideHeader = false,\n}: CardProps) => {\n  const baseClass = 'card';\n\n  const bgColor = randomColor\n    ? getColorFromLetter(\n        typeof children === 'string'\n          ? children[0].toUpperCase()\n          : header !== 'Carta'\n            ? header[0].toUpperCase()\n            : 'X',\n      )\n    : color;\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, className)}>\n      {!hideHeader && (\n        <span\n          className={clsx(`${baseClass}__header`, `color-background--${bgColor}`, headerClassName)}\n          style={color.startsWith('#') ? { backgroundColor: color } : {}}\n        >\n          {header}\n        </span>\n      )}\n      <span className={`${baseClass}__text`}>{children}</span>\n      {footer && <span className={clsx(`${baseClass}__footer`, footerClassName)}>{footer}</span>}\n    </div>\n  );\n};\n","import type { AvatarSize } from 'antd/lib/avatar/AvatarContext';\nimport clsx from 'clsx';\nimport type { ReactNode } from 'react';\n// Components\nimport { IconAvatar } from 'components/avatars/IconAvatar';\n\nexport type MetricHighlightProps = {\n  /**\n   * The text to be highlighted\n   */\n  children: ReactNode;\n  /**\n   * The icon representing the metric\n   */\n  icon: ReactNode;\n  /**\n   * Indicates if it's a negative metric\n   */\n  type?: 'positive' | 'negative' | 'default';\n  /**\n   * The size of the avatar (default: small)\n   */\n  iconSize?: AvatarSize;\n  /**\n   * Custom class\n   */\n  className?: string;\n  /**\n   * Icon placement (default: after)\n   */\n  iconPlacement?: 'before' | 'after';\n};\n\nexport function MetricHighlight({\n  children,\n  icon,\n  type,\n  className,\n  iconSize = 'small',\n  iconPlacement = 'after',\n}: MetricHighlightProps) {\n  return (\n    <span className={clsx('metric-highlight', type && `metric-highlight--${type}`, className)}>\n      {iconPlacement === 'before' && (\n        <>\n          <IconAvatar size={iconSize} icon={icon} />{' '}\n        </>\n      )}\n      {children}\n      {iconPlacement === 'after' && (\n        <>\n          {' '}\n          <IconAvatar size={iconSize} icon={icon} />\n        </>\n      )}\n    </span>\n  );\n}\n\nexport type HighlightProps = Omit<MetricHighlightProps, 'icon'>;\n","// Icons\nimport { ClockIcon } from 'icons/ClockIcon';\n// Components\nimport { type HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function TimeHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<ClockIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import { useQuery } from '@tanstack/react-query';\n// Ant Design Resources\nimport { WarningOutlined } from '@ant-design/icons';\nimport { Spin, Tooltip } from 'antd';\n// Hooks\nimport { useTDBaseUrl } from 'hooks/useTDBaseUrl';\n\ntype SpriteProps = {\n  /**\n   * The sprite source name\n   */\n  source: string;\n  /**\n   * The id of the item\n   */\n  id: string;\n  /**\n   * The width of the item\n   */\n  width?: number;\n  /**\n   * Replacement title, usually the name of the item\n   */\n  title?: string;\n  /**\n   * Optional class name\n   */\n  className?: string;\n  /**\n   *\n   */\n  padding?: number;\n};\n\n/**\n * Loads a sprite from the Tarde Divertida sprites\n * @param {SpriteProps} props\n * @returns a single sprite item\n */\nexport function Sprite({ id, source, width = 75, padding = 6, title, className }: SpriteProps) {\n  const baseUrl = useTDBaseUrl('sprites');\n\n  const { isLoading, data, isError } = useQuery({\n    queryKey: ['sprite', source],\n    queryFn: async () => {\n      const response = await fetch(`${baseUrl}/sprites/${source}.svg`);\n      return await response.text();\n    },\n    enabled: !!id && !!source,\n  });\n\n  const paddedWidth = width - padding * 2;\n\n  if (isLoading) {\n    return (\n      <span\n        style={{\n          width: `${paddedWidth}px`,\n          height: `${paddedWidth}px`,\n          padding,\n          display: 'grid',\n          placeItems: 'center',\n        }}\n        className={className}\n      >\n        <Spin />\n      </span>\n    );\n  }\n\n  const svgContent = data;\n\n  if (isError || !svgContent) {\n    return (\n      <span\n        style={{\n          width: `${paddedWidth}px`,\n          height: `${paddedWidth}px`,\n          padding,\n          display: 'grid',\n          placeItems: 'center',\n        }}\n        className={className}\n      >\n        <WarningOutlined />\n      </span>\n    );\n  }\n\n  return (\n    <svg\n      viewBox=\"0 0 512 512\"\n      style={{ width: `${paddedWidth}px`, height: `${paddedWidth}px`, padding }}\n      className={className}\n    >\n      <use xlinkHref={`#${id}`} dangerouslySetInnerHTML={{ __html: svgContent }} />\n      <foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">\n        {title && (\n          <Tooltip title={title}>\n            <div style={{ background: 'transparent', width: '100%', height: '100vh' }}></div>\n          </Tooltip>\n        )}\n      </foreignObject>\n    </svg>\n  );\n}\n","import type { ReactNode } from 'react';\n// Icons\nimport { AnimatedClockIcon } from 'icons/AnimatedClockIcon';\n// Components\nimport { MetricHighlight, type MetricHighlightProps } from 'components/metrics/MetricHighlight';\n\nconst padTime = (value: number) => (value < 10 ? `0${value}` : value);\n\ntype TimerClockProps = {\n  /**\n   * Replacement icon for the clock icon\n   */\n  icon?: ReactNode;\n  /**\n   * Optional children that comes after the time\n   */\n  children?: ReactNode;\n  /**\n   * Minutes\n   */\n  minutes?: number;\n  /**\n   * Seconds\n   */\n  seconds: number;\n} & Omit<MetricHighlightProps, 'icon' | 'children'>;\n\n/**\n * Timer highlight with countdown functionality\n */\nexport function TimerClock({\n  icon,\n  type,\n  iconSize,\n  children,\n  className = '',\n  iconPlacement = 'before',\n  minutes = 0,\n  seconds,\n}: TimerClockProps) {\n  return (\n    <MetricHighlight\n      icon={icon ?? <AnimatedClockIcon />}\n      type={type}\n      iconSize={iconSize}\n      className={className}\n      iconPlacement={iconPlacement}\n    >\n      {minutes}:{padTime(seconds)}\n      {children}\n    </MetricHighlight>\n  );\n}\n","// Ant Design Resources\nimport { Progress, type ProgressProps } from 'antd';\n\ninterface TimerBarProps extends ProgressProps {\n  steps?: number;\n  value: number;\n  total: number;\n}\n\n/**\n * Time Bar presentational component used in timed operations\n * @param props\n * @returns\n */\nexport function TimerBar({\n  steps,\n  strokeLinecap,\n  total,\n  type = 'line',\n  value,\n  status = 'active',\n  ...props\n}: TimerBarProps) {\n  const percentage = 100 - (value * 100) / total;\n  return (\n    <Progress\n      percent={percentage}\n      steps={steps}\n      showInfo={false}\n      style={{ marginBottom: '1rem' }}\n      size={steps && steps > 30 ? 'small' : undefined}\n      type={type}\n      {...props}\n    />\n  );\n}\n","import clsx from 'clsx';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\n// Internal\nimport { TimerBar } from './TimerBar';\n\ntype TimedTimerBarProps = {\n  /**\n   * Duration in seconds\n   */\n  duration: number;\n  /**\n   * Function executed when the time is up\n   */\n  onExpire: GenericFunction;\n  /**\n   * Number of ticks in the bar\n   */\n  steps?: number;\n  /**\n   * Type of bar. Default: line\n   */\n  type?: 'circle' | 'line' | 'dashboard';\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\nexport function TimedTimerBar({ duration, onExpire, type, steps = 10, className }: TimedTimerBarProps) {\n  const { timeLeft } = useCountdown({\n    duration,\n    autoStart: true,\n    onExpire,\n  });\n\n  return (\n    <div className={clsx('timer-number', className)}>\n      {timeLeft} <TimerBar steps={steps} value={timeLeft} total={duration} type={type} /> {timeLeft}\n    </div>\n  );\n}\n","import type { ReactNode } from 'react';\n// Hooks\nimport { useCountdown, type useCountdownSettings } from 'hooks/useCountdown';\n// Icons\nimport { AnimatedClockIcon } from 'icons/AnimatedClockIcon';\n// Components\nimport { MetricHighlight, type MetricHighlightProps } from 'components/metrics/MetricHighlight';\n\nconst padTime = (value: number) => (value < 10 ? `0${value}` : value);\n\ntype TimedTimerClockProps = {\n  /**\n   * Replacement icon for the clock icon\n   */\n  icon?: ReactNode;\n  /**\n   * Optional children that comes after the time\n   */\n  children?: ReactNode;\n} & useCountdownSettings &\n  Omit<MetricHighlightProps, 'icon' | 'children'>;\n\n/**\n * Timer highlight with countdown functionality\n */\nexport function TimedTimerClock({\n  icon,\n  type,\n  iconSize,\n  children,\n  className = '',\n  iconPlacement = 'before',\n  ...timerProps\n}: TimedTimerClockProps) {\n  const { minutes, seconds } = useCountdown({ ...timerProps });\n\n  return (\n    <MetricHighlight\n      icon={icon ?? <AnimatedClockIcon />}\n      type={type}\n      iconSize={iconSize}\n      className={className}\n      iconPlacement={iconPlacement}\n    >\n      {minutes}:{padTime(seconds)}\n      {children}\n    </MetricHighlight>\n  );\n}\n","// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\n\ntype TimeForActionProps = {\n  duration: number;\n  onExpire?: () => void;\n  timeLeft?: number;\n};\n\nexport function WaitingTime({ duration, timeLeft, onExpire }: TimeForActionProps) {\n  const { timeLeft: privateTimeLeft } = useCountdown({\n    duration,\n    autoStart: timeLeft === undefined,\n    onExpire,\n  });\n\n  const percentage = ((timeLeft ?? privateTimeLeft) / duration) * 100;\n\n  return (\n    <div className=\"timer-waiting-time-bar\">\n      <span className=\"timer-waiting-time-bar__container\">\n        <span className=\"timer-waiting-time-bar__left\" style={{ width: `${percentage}%` }} />\n      </span>\n    </div>\n  );\n}\n","/**\n * Returns the URL for the given kind of resource\n * @param kind the kind of resource\n * @returns the URL for the given kind of resource\n */\nexport function useTDBaseUrl(library: 'images' | 'sprites' | 'resources' | 'classic'): string {\n  const baseUrl = process.env.REACT_APP_TD_BASE_URL;\n\n  switch (library) {\n    case 'images':\n      return `${baseUrl}/${process.env.REACT_APP_TD_IMAGES}`;\n    case 'sprites':\n      return `${baseUrl}/${process.env.REACT_APP_TD_SPRITES}`;\n    case 'resources':\n      return `${baseUrl}/${process.env.REACT_APP_TD_RESOURCES}`;\n    case 'classic':\n      return `${baseUrl}/${process.env.REACT_APP_TD_CLASSIC}`;\n    default:\n      throw new Error('Invalid library');\n  }\n}\n","export function ApplauseIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path fill=\"none\" d=\"M0 .01h512v512H0z\"></path>\n      <path\n        fill=\"#ffbc86\"\n        d=\"M445.7 199.19l-34.24 21.18-154.58 95.64a71.63 71.63 0 01-32.28 10.5l-6.93.51a131 131 0 00-59.12 19.23l-15.94 9.86-15.68 9.7a10.06 10.06 0 01-13.84-3.26l-85.92-138.9a10.06 10.06 0 013.26-13.84l11.66-7.22a132.47 132.47 0 0037.83-35.26 132.53 132.53 0 0021.45-47 72.37 72.37 0 0132.37-44.95l101.53-62.86a33.41 33.41 0 1135.15 56.82l22.87-14.15 68.77-42.54a25.33 25.33 0 0126.66 43.08l20.45-12.65a25.33 25.33 0 0126.65 43.08l-20.45 12.65a25.33 25.33 0 0134.6 7.8c7.7 11.93 3.64 28.12-8.43 35.58l-22 13.62a25.33 25.33 0 0134.6 7.8c7.7 11.93 3.64 28.11-8.43 35.58\"\n      ></path>\n      <path\n        fill=\"#f7a86c\"\n        d=\"M411.46 220.37l-154.58 95.64a71.63 71.63 0 01-32.28 10.5l-6.93.51a131 131 0 00-59.12 19.23l-15.94 9.86-32.47-100.1a47.52 47.52 0 0145.17-62.15 48.84 48.84 0 015 .27l-19.85-61.24A39.42 39.42 0 01178 81.3h1.35a39.43 39.43 0 0170.82-22.94 38.49 38.49 0 0134.4-6.82 33.33 33.33 0 01-14.1 17.79l22.87-14.16a40.77 40.77 0 0113.56 12.41 38.6 38.6 0 0123.49-8 40.36 40.36 0 0137.93 27.75z\"\n      ></path>\n      <path d=\"M27.18 231.15a7.5 7.5 0 01-6.39-3.56 17.58 17.58 0 015.69-24.16l12.23-7.56a124.26 124.26 0 0055.35-77.27 79.47 79.47 0 0135.43-49.46l24.93-15.43a7.5 7.5 0 017.89 12.76l-24.93 15.42a64.46 64.46 0 00-28.7 40.12 139.36 139.36 0 01-62.08 86.62l-12.22 7.56a2.55 2.55 0 00-.83 3.51 7.5 7.5 0 01-6.37 11.45zm94.5 143.65a17.56 17.56 0 01-15-8.31 7.5 7.5 0 1112.75-7.9 2.56 2.56 0 003.52.83l31.62-19.56a139 139 0 0162.5-20.32l6.93-.53a64.37 64.37 0 0028.9-9.4l188.89-116.82c8.38-5.19 11.29-16.13 6.49-24.38a17.83 17.83 0 00-24.77-6.25 7.5 7.5 0 01-7.89-12.76h.05l22-13.61c8.38-5.18 11.29-16.12 6.49-24.38a17.84 17.84 0 00-24.81-6.22 7.5 7.5 0 01-7.89-12.76l20.45-12.65a17.83 17.83 0 005.78-24.54 17.85 17.85 0 00-24.54-5.78L392.68 62.1a7.5 7.5 0 01-7.89-12.76A17.84 17.84 0 00366 19.01l-91.63 56.71a7.5 7.5 0 01-7.89-12.71 25.92 25.92 0 00-27.27-44.08l-46.69 28.85a7.5 7.5 0 11-7.89-12.77l46.69-28.87a40.92 40.92 0 0162.09 40.17l64.71-40a32.85 32.85 0 0150.1 28.79 32.83 32.83 0 0134.36 55.53 32.66 32.66 0 0114.51 13.28c8.57 14.75 4 34-10.2 43.79a32.51 32.51 0 0114.35 13.21c8.85 15.21 3.67 35.25-11.56 44.68L260.83 322.38a79.33 79.33 0 01-35.67 11.63l-6.93.52a123.94 123.94 0 00-55.73 18.13l-31.62 19.56a17.5 17.5 0 01-9.2 2.58z\"></path>\n      <path d=\"M243.13 153.3a7.5 7.5 0 01-3.95-13.88l145.59-90.07a7.5 7.5 0 017.89 12.76l-145.59 90.07a7.46 7.46 0 01-3.94 1.12zm26.66 43.08a7.5 7.5 0 01-4-13.87l145.63-90.07a7.5 7.5 0 117.89 12.75l-145.58 90.07a7.49 7.49 0 01-3.94 1.12zm26.65 43.08a7.5 7.5 0 01-3.95-13.88l145.59-90.06a7.5 7.5 0 117.92 12.75l-145.62 90.07a7.46 7.46 0 01-3.94 1.12z\"></path>\n      <path d=\"M147.74 254.39a7.5 7.5 0 01-4-13.88c31.63-19.58 48.68-46 50.67-78.44a105.11 105.11 0 00-6.32-43.06 7.49 7.49 0 012.95-9.32l75.44-46.68a7.5 7.5 0 117.89 12.75l-70.29 43.45a123.57 123.57 0 015.35 43.8c-1.58 25.87-12.88 62.53-57.75 90.28a7.47 7.47 0 01-3.94 1.1z\"></path>\n      <path\n        fill=\"#fed1a4\"\n        d=\"M322.39 75.01a25.34 25.34 0 00-15.82 31.75l-8-24.61c-4.36-13.48-19.11-21.28-32.57-16.64a25.32 25.32 0 00-15.81 31.75l-7.42-22.87a25.33 25.33 0 00-48.15 15.62l7.38 22.88a25.33 25.33 0 00-48.19 15.63l33.28 102.49a33.42 33.42 0 00-63.57 20.62l36.83 113.56a72.39 72.39 0 0036 42.14 132.55 132.55 0 0165.83 77.17l4.23 13.05a10.06 10.06 0 0012.59 6.46l155.35-50.38a10.06 10.06 0 006.5-12.62l-11.47-35.37a131 131 0 01-4.59-62l1.15-6.86a71.56 71.56 0 00-2.51-33.85L354.94 91.71c-4.38-13.51-19.13-21.31-32.55-16.7\"\n      ></path>\n      <path\n        fill=\"#ffbc86\"\n        d=\"M354.93 91.68l68.5 211.22a71.56 71.56 0 012.51 33.85l-1.15 6.86a131 131 0 004.59 62l11.47 35.4a10 10 0 01-6.46 12.66l-14.12 4.58-14.57-44.97a130.83 130.83 0 01-4.59-62l1.14-6.86a71.43 71.43 0 00-2.5-33.85L331.08 98.85a25.29 25.29 0 00-19.05-17 25.16 25.16 0 0111.52-7.17c13.24-3.88 27.12 3.88 31.38 17\"\n      ></path>\n      <path d=\"M434.39 461.14a7.5 7.5 0 01-2.31-14.64 2.55 2.55 0 001.64-3.21l-11.47-35.37a139 139 0 01-4.86-65.55l1.15-6.85a64.24 64.24 0 00-2.25-30.31l-7.7-23.75a7.5 7.5 0 1114.27-4.62l7.7 23.75a79.18 79.18 0 012.77 37.4l-1.14 6.86a123.85 123.85 0 004.33 58.44L448 438.66a17.58 17.58 0 01-11.28 22.11 7.5 7.5 0 01-2.33.37zm-158.47 50.87a17.6 17.6 0 01-16.68-12.15l-4.44-13.67a124.21 124.21 0 00-61.87-72.18 79.5 79.5 0 01-39.6-46.19l-16-49.23a7.5 7.5 0 1114.3-4.58l16 49.24a64.39 64.39 0 0032.08 37.41 139.34 139.34 0 0169.39 80.93l4.44 13.67a2.5 2.5 0 001.27 1.49 2.53 2.53 0 001.94.16 7.5 7.5 0 114.63 14.26 17.52 17.52 0 01-5.46.84zM133 288.19a7.51 7.51 0 01-7.14-5.19l-9.42-29.05a40.92 40.92 0 0153.8-50.74l-23.47-72.38a32.81 32.81 0 0139.83-41.82 32.83 32.83 0 0162.12-20.17 32.62 32.62 0 0116.35-10.93c16.37-4.82 34 4.26 40.1 20.33a32.61 32.61 0 0116.25-10.8c16.88-5 35.11 4.84 40.64 21.87l49.85 153.71a7.5 7.5 0 01-14.27 4.62L347.79 94.01c-3-9.38-13-14.81-22.14-12.11a17.83 17.83 0 00-11.94 22.61 7.5 7.5 0 01-14.27 4.63l-8-24.61c-3-9.38-13-14.81-22.14-12.11a17.84 17.84 0 00-11.95 22.59 7.5 7.5 0 11-14.27 4.63l-7.42-22.88a17.83 17.83 0 00-33.92 11l7.42 22.88a7.5 7.5 0 01-14.27 4.62 17.83 17.83 0 00-33.92 11l33.26 102.45a7.5 7.5 0 01-14.23 4.62 25.91 25.91 0 00-49.28 16l9.42 29.06a7.51 7.51 0 01-7.13 9.81z\"></path>\n      <path d=\"M254.85 283.24a7.5 7.5 0 01-7.13-5.19L194.9 115.2a7.5 7.5 0 0114.27-4.62L262 273.42a7.5 7.5 0 01-4.82 9.45 7.39 7.39 0 01-2.33.37zM303 267.61a7.5 7.5 0 01-7.14-5.19L243.09 99.58a7.5 7.5 0 0114.27-4.63l52.81 162.85a7.5 7.5 0 01-4.82 9.45 7.78 7.78 0 01-2.35.36zm48.22-15.6a7.51 7.51 0 01-7.13-5.19L291.28 83.95a7.5 7.5 0 0114.27-4.63l52.81 162.85a7.51 7.51 0 01-7.14 9.82zm-138.49 65.55a7.5 7.5 0 01-7.14-5.18L180 233.33a7.5 7.5 0 0114.27-4.62l25.63 79a7.48 7.48 0 01-7.13 9.81zM92.94 60.01a7.44 7.44 0 01-5.3-2.2l-12.2-12.22a7.5 7.5 0 0110.61-10.58l12.19 12.2a7.5 7.5 0 01-5.3 12.8zm23.87-15.38a7.51 7.51 0 01-7.34-6L106 21.74a7.5 7.5 0 1114.69-3l3.46 16.9a7.51 7.51 0 01-5.85 8.85 7.73 7.73 0 01-1.49.14zM77.6 83.86a7.73 7.73 0 01-1.51-.15l-16.9-3.46a7.5 7.5 0 113-14.69l16.9 3.45a7.5 7.5 0 01-1.49 14.85zm397.61 180.92a7.51 7.51 0 01-3.78-1l-14.89-8.7a7.52 7.52 0 017.57-13l14.89 8.73a7.5 7.5 0 01-3.79 14zm-26.45 27.67a7.48 7.48 0 01-6.73-4.18l-7.63-15.46a7.5 7.5 0 1113.45-6.64l7.63 15.46a7.51 7.51 0 01-3.41 10.05 7.43 7.43 0 01-3.31.77zm20.35-63.36a7.5 7.5 0 01-.4-15l17.21-1a7.51 7.51 0 11.82 15l-17.21.95z\"></path>\n    </svg>\n  );\n}\n","import { useQuery, type UseQueryResult } from '@tanstack/react-query';\nimport moment from 'moment';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Services\nimport { DAILY_API, DAILY_API_ACTIONS } from 'services/adapters';\n// Utils\nimport { print } from 'utils/helpers';\n// Internal\nimport type { DailyResponse } from '../utils/types';\nimport { getSourceName, getToday } from '../utils';\nimport { createContext, type ReactNode, useContext } from 'react';\n\ntype DailyContextType = Pick<\n  UseQueryResult<DailyResponse, Error>,\n  'isLoading' | 'data' | 'error' | 'isError' | 'isRefetching'\n>;\n\nconst DailyContext = createContext<DailyContextType>({\n  isLoading: false,\n  data: undefined,\n  error: null,\n  isError: false,\n  isRefetching: false,\n});\n\ntype DailyContextProviderProps = {\n  children: ReactNode;\n};\n\nexport const DailyContextProvider = ({ children }: DailyContextProviderProps) => {\n  const { language } = useLanguage();\n  const collectionName = getSourceName(language);\n\n  // Load challenge\n  const query = useQuery<DailyResponse>({\n    queryKey: [collectionName, language],\n    queryFn: async () => {\n      console.count(`Fetching ${collectionName}...`);\n      const response = await DAILY_API.run({\n        action: DAILY_API_ACTIONS.GET_DAILY,\n        date: getToday(),\n        document: collectionName,\n      });\n      const responseData = response.data as DailyResponse;\n      print({ [collectionName]: responseData }, 'table');\n      return responseData;\n    },\n    staleTime: () => {\n      // Calculate time until midnight\n      const now = moment();\n      const midnight = moment().endOf('day');\n      return midnight.diff(now); // Difference in milliseconds\n    },\n    enabled: language === 'pt',\n    retry: false,\n  });\n\n  return (\n    <DailyContext.Provider\n      value={{\n        isLoading: query.isLoading,\n        data: query.data,\n        error: query.error,\n        isError: query.isError,\n        isRefetching: query.isRefetching,\n      }}\n    >\n      {children}\n    </DailyContext.Provider>\n  );\n};\n\nexport const useDailyChallenge = () => {\n  const context = useContext(DailyContext);\n  if (context === undefined) {\n    throw new Error('useDailyChallenge must be used within a DailyContextProvider');\n  }\n  return context;\n};\n","export const SETTINGS = {\n  NAME: { pt: 'Aqui Ó', en: 'Find This' },\n  ICON: '🔍',\n  HEARTS: 3,\n  GOAL: 15,\n  TD_DAILY_AQUI_O_MODE: 'TD_AQUI_DAILY_O_MODE',\n  KEY: 'AQUI_O',\n};\n","export const SETTINGS = {\n  NAME: { pt: 'Arte Ruim', en: 'Questionable Art' },\n  ICON: '🖼️',\n  HEARTS: 3,\n  KEY: 'ARTE_RUIM',\n};\n","export const SETTINGS = {\n  NAME: { pt: 'Picaço!', en: 'Big Artist' },\n  DURATION: 60,\n  DRAWINGS: 6,\n  KEY: 'PICACO',\n};\n","export const SETTINGS = {\n  NAME: { pt: 'Controle De Estoque', en: 'Warehouse Stock' },\n  ICON: '📦',\n  HEARTS: 4,\n  KEY: 'CONTROLE_DE_ESTOQUE',\n};\n\nexport const PHASES = {\n  STOCKING: 'STOCKING',\n  FULFILLING: 'FULFILLING',\n  DELIVERING: 'DELIVERING',\n} as const;\n","export const SETTINGS = {\n  NAME: { pt: 'Filmaço', en: 'Movicon' },\n  ICON: '🎬',\n  HEARTS: 3,\n  KEY: 'FILMACO',\n};\n","export const SETTINGS = {\n  NAME: { pt: 'Palavreado', en: 'Word Game' },\n  ICON: '🔤',\n  HEARTS: 4,\n  WORD_LENGTH: 4,\n  KEY: 'PALAVREADO',\n};\n","export const SETTINGS = {\n  NAME: { pt: 'Teoria de Conjuntos', en: 'Diagram Theory' },\n  ICON: '⭕️',\n  HEARTS: 4,\n  KEY: 'TEORIA_DE_CONJUNTOS',\n};\n","export const SETTINGS = {\n  NAME: { pt: 'Comunicação Alienígena', en: 'Alien Communication' },\n  ICON: '🛸',\n  HEARTS: 4,\n  KEY: 'COMUNICACAO_ALIENIGENA',\n};\n","import { useNavigate } from 'react-router-dom';\n// Ant Design Resources\nimport { BugOutlined } from '@ant-design/icons';\nimport { App, Button, Flex, Popconfirm } from 'antd';\n// Utils\nimport { isDevEnv } from 'utils/helpers';\n// Components\nimport { Translate } from 'components/language';\n// Internal\nimport { SETTINGS as AQUI_O } from '../games/AquiO/utils/settings';\nimport { SETTINGS as ARTE_RUIM } from '../games/ArteRuim/utils/settings';\nimport { SETTINGS as ARTISTA } from '../games/Picaco/utils/settings';\nimport { SETTINGS as CONTROLE_DE_ESTOQUE } from '../games/ControleDeEstoque/utils/settings';\nimport { SETTINGS as FILMACO } from '../games/Filmaco/utils/settings';\nimport { SETTINGS as PALAVREADO } from '../games/Palavreado/utils/settings';\nimport { SETTINGS as TEORIA_DE_CONJUNTOS } from '../games/TeoriaDeConjuntos/utils/settings';\nimport { SETTINGS as COMUNICACAO_ALIENIGENA } from '../games/ComunicacaoAlienigena/utils/settings';\nimport { composeLocalPlayedKey, composeLocalTodayKey } from '../utils';\n\nconst keys = [\n  AQUI_O,\n  ARTE_RUIM,\n  PALAVREADO,\n  ARTISTA,\n  FILMACO,\n  CONTROLE_DE_ESTOQUE,\n  TEORIA_DE_CONJUNTOS,\n  COMUNICACAO_ALIENIGENA,\n];\n\ntype DevResetLocalStorageButtonProps = {\n  localStorageKey?: string;\n};\n\nexport function DevResetLocalStorageButton({ localStorageKey }: DevResetLocalStorageButtonProps) {\n  const { message } = App.useApp();\n  const navigate = useNavigate();\n\n  const onReset = () => {\n    if (localStorageKey) {\n      localStorage.removeItem(composeLocalTodayKey(localStorageKey));\n      localStorage.removeItem(composeLocalPlayedKey(localStorageKey));\n    } else {\n      keys.forEach((key) => {\n        localStorage.removeItem(composeLocalTodayKey(key.KEY));\n        localStorage.removeItem(composeLocalPlayedKey(key.KEY));\n      });\n    }\n    message.success(<Translate pt=\"LS resetado corretamente\" en=\"LS reset successfully\" />);\n    navigate('/diario');\n  };\n\n  const onDayBefore = () => {\n    const yesterday = JSON.stringify({\n      id: '2023-10-30',\n      number: -1,\n    });\n    if (localStorageKey) {\n      localStorage.setItem(composeLocalTodayKey(localStorageKey), yesterday);\n      return;\n    }\n    keys.forEach((key) => {\n      localStorage.setItem(composeLocalTodayKey(key.KEY), yesterday);\n      localStorage.setItem(composeLocalPlayedKey(key.KEY), yesterday);\n    });\n\n    navigate('/diario');\n  };\n\n  const onLog = () => {\n    if (localStorageKey) {\n      const value = JSON.parse(localStorage.getItem(composeLocalTodayKey(localStorageKey)) ?? '{}');\n      if (isDevEnv) {\n        console.log(value);\n      } else {\n        alert(JSON.stringify(value, null, 2));\n      }\n    }\n  };\n\n  return (\n    <Flex justify=\"center\" gap={12}>\n      <Button.Group>\n        <Popconfirm\n          title={\n            <Translate\n              pt=\"Tem certeza que quer resetar o jogo?\"\n              en=\"Are you sure you want to reset the game?\"\n            />\n          }\n          onConfirm={onReset}\n        >\n          <Button size=\"large\" type=\"dashed\" icon={<BugOutlined />}>\n            <Translate pt=\"Resetar LS\" en=\"Reset LS\" />\n          </Button>\n        </Popconfirm>\n        {isDevEnv && (\n          <Button size=\"large\" type=\"dashed\" onClick={onDayBefore} icon={<BugOutlined />}>\n            Yesterday LS\n          </Button>\n        )}\n        <Button size=\"large\" type=\"dashed\" onClick={onLog}>\n          Log\n        </Button>\n      </Button.Group>\n    </Flex>\n  );\n}\n","import { type ReactNode, useState } from 'react';\n// Ant Design Resources\nimport { Layout, Typography } from 'antd';\n// Components\nimport { IconAvatar } from 'components/avatars';\n// Internal\nimport { DevResetLocalStorageButton } from './DevResetLocalStorageButton';\n\ntype HeaderProps = {\n  icon: ReactNode;\n  children: ReactNode;\n  localStorageKey: string;\n};\n\nexport function Header({ icon, children, localStorageKey }: HeaderProps) {\n  const [count, setCount] = useState(0);\n\n  return (\n    <Layout.Header className=\"daily-header\">\n      <button\n        type=\"button\"\n        onClick={localStorageKey ? () => setCount((prev) => prev + 1) : undefined}\n        className=\"invisible-secret-button daily-header\"\n      >\n        <IconAvatar icon={icon} className=\"daily-header__icon\" />\n        <Typography.Title level={1} className=\"daily-heading\">\n          {children}\n        </Typography.Title>\n      </button>\n      {count >= 5 && <DevResetLocalStorageButton localStorageKey={localStorageKey} />}\n    </Layout.Header>\n  );\n}\n","import { type ReactNode, useState } from 'react';\n// Ant Design Resources\nimport { Layout } from 'antd';\n// Icons\nimport { CalendarIcon } from 'icons/CalendarIcon';\n// Components\nimport { Translate } from 'components/language';\nimport { PageLayout } from 'components/layout/PageLayout';\n// Internal\nimport { useDailyChallenge } from '../hooks/useDailyChallenge';\nimport { DevResetLocalStorageButton } from './DevResetLocalStorageButton';\nimport { Header } from './Header';\n\nconst { Content, Footer } = Layout;\n\ntype DailyChromeProps = {\n  children: ReactNode;\n};\n\nexport function DailyChrome({ children }: DailyChromeProps) {\n  const challengeQuery = useDailyChallenge();\n  const [count, setCount] = useState(0);\n\n  return (\n    <PageLayout className=\"app\">\n      <Header icon={<CalendarIcon />} localStorageKey=\"\">\n        <button\n          type=\"button\"\n          onClick={() => setCount((prev) => prev + 1)}\n          className=\"invisible-secret-button\"\n        >\n          <Translate pt=\"TD Diário\" en=\"TD Daily\" />\n        </button>\n      </Header>\n      {challengeQuery.isLoading && <div className=\"loading-bar\"></div>}\n      <Content>{children}</Content>\n      {count >= 5 && (\n        <Footer>\n          <DevResetLocalStorageButton />\n        </Footer>\n      )}\n    </PageLayout>\n  );\n}\n","import { useNavigate } from 'react-router-dom';\n// Ant Design Resources\nimport { Alert, Button, Space, Typography } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Translate } from 'components/language';\n// Internal\nimport { DailyChrome } from './DailyChrome';\n\nexport function DailyError() {\n  const { toggleLanguage, language } = useLanguage();\n  const navigate = useNavigate();\n\n  const onRedirect = () => {\n    toggleLanguage();\n    navigate(language === 'en' ? '/diario' : '/daily');\n  };\n  return (\n    <DailyChrome>\n      <Space className=\"container container--center\">\n        <Alert\n          message={\n            <Translate pt=\"O servidor decidiu não cooperar\" en=\"The server decided not to cooperate\" />\n          }\n          description={\n            <Space direction=\"vertical\">\n              <Typography.Paragraph>\n                <Translate\n                  en=\"It's likely that the administrator forgot to generate new challenges for today. If you know them, please complain immediately. Bullying is the way.\"\n                  pt=\"Provavelmente o administrador esqueceu de gerar novos desafios para hoje. Se você os conhece, reclame imediatamente. O bullying é o caminho.\"\n                />\n                <br />\n                <Translate\n                  en=\"It is also possible that you are in the wrong URL. Press here to go back to the right page.\"\n                  pt=\"Também é possível que você esteja na URL errada. Pressione aqui para voltar para a página correta.\"\n                />\n                <Button type=\"link\" onClick={onRedirect}>\n                  Redirecionar/Redirect\n                </Button>\n              </Typography.Paragraph>\n            </Space>\n          }\n          type=\"error\"\n          showIcon\n        />\n      </Space>\n    </DailyChrome>\n  );\n}\n","// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { Loading } from 'components/loaders';\n// Internal\nimport { DailyChrome } from './DailyChrome';\n\nexport function DailyLoading() {\n  const { translate } = useLanguage();\n  return (\n    <DailyChrome>\n      <div className=\"daily-loading\">\n        <SpaceContainer>\n          <Loading message={translate('Carregando desafio...', 'Loading challenge...')} margin />\n        </SpaceContainer>\n      </div>\n    </DailyChrome>\n  );\n}\n","import { useQuery } from '@tanstack/react-query';\nimport { sample } from 'lodash';\n// Utils\nimport { print } from 'utils/helpers';\n// Internal\nimport type { AquiOSet, DailyAquiOEntry } from '../utils/types';\nimport { wait } from '../../../utils';\nimport miscSets from './misc-sets.json';\n\nconst MISC_SETS: AquiOSet[] = miscSets;\n\nexport function useRandomAquiOChallenge(collectionName: string) {\n  // Load challenge\n  return useQuery<DailyAquiOEntry>({\n    queryKey: [collectionName, 'aqui-o', 'random'],\n    queryFn: async () => {\n      console.count(`Creating Ache Isso ${collectionName}...`);\n      // Build game getting the set based on today's date\n      await wait(150);\n\n      const chosenSet = sample(MISC_SETS);\n\n      if (!chosenSet) {\n        throw new Error('No set found');\n      }\n\n      const gameData: DailyAquiOEntry = {\n        id: 'random',\n        type: 'aqui-o',\n        setId: chosenSet.title.en,\n        title: chosenSet.title,\n        itemsIds: chosenSet.itemsIds,\n        number: 0,\n      };\n\n      print({ [collectionName]: gameData }, 'table');\n      return gameData;\n    },\n    retry: false,\n  });\n}\n","import { useState } from 'react';\n\nexport function useDailyGameState<TState = PlainObject>(initialState: TState) {\n  const [state, setState] = useState<TState>(initialState);\n\n  const updateState = (newState: Partial<TState>) => {\n    setState((prev) => ({ ...prev, ...newState }));\n  };\n\n  return { state, setState, updateState };\n}\n","import { useEffect } from 'react';\nimport { useLocalStorage } from 'react-use';\n// Internal\nimport type { WithRequiredId } from '../utils/types';\nimport { composeLocalPlayedKey, composeLocalTodayKey } from '../utils';\n\ntype UseDailyLocalTodayProps<TLocal> = {\n  key: string;\n  gameId: string;\n  defaultValue: TLocal;\n};\n\n/**\n * Custom hook for managing local state related to the current day.\n * @param options - The options for the hook.\n * @param options.key - The key used to compose the local storage key.\n * @param options.gameId - The ID of the game.\n * @param options.defaultValue - The default value for the local state.\n * @returns - An object containing the current local state and a function to update it.\n */\nexport function useDailyLocalToday<TLocal extends WithRequiredId>({\n  key,\n  gameId,\n  defaultValue,\n}: UseDailyLocalTodayProps<TLocal>) {\n  const localKey = composeLocalTodayKey(key);\n  const [localToday, setLocalToday] = useLocalStorage<TLocal>(localKey, {\n    status: 'idle',\n    ...defaultValue,\n    id: gameId,\n  });\n\n  const updateLocalStorage = (value: Partial<TLocal>) => {\n    setLocalToday((prev) => ({ ...(prev ?? defaultValue), id: gameId, ...value }));\n  };\n\n  return {\n    localToday,\n    updateLocalStorage,\n  };\n}\n\n/**\n * Marks a key as played if it is complete.\n * @param key - The key to mark as played.\n * @param isComplete - Whether the key is complete.\n */\nexport function useMarkAsPlayed({ key, isComplete }: { key: string; isComplete: boolean }) {\n  const localPlayedKey = composeLocalPlayedKey(key);\n  const [played, setPlayed] = useLocalStorage<boolean>(localPlayedKey, false);\n\n  useEffect(() => {\n    if (!played && isComplete) {\n      setPlayed(true);\n    }\n  }, [isComplete, played, setPlayed]);\n}\n","import { useEffect, useState } from 'react';\n\nexport function useShowResultModal(condition: boolean, onUpdate?: GenericFunction) {\n  const [showResultModal, setShowResultModal] = useState(false);\n\n  // Controls auto result modal\n  // biome-ignore lint/correctness/useExhaustiveDependencies: <explanation>\n  useEffect(() => {\n    if (condition) {\n      setShowResultModal(true);\n      onUpdate?.();\n    }\n  }, [condition]);\n\n  return { showResultModal, setShowResultModal };\n}\n","import { chain, orderBy, random, sample, sampleSize, shuffle } from 'lodash';\nimport { loadLocalToday } from 'pages/Daily/utils';\n// Utils\nimport { SEPARATOR } from 'utils/constants';\nimport { deepCopy } from 'utils/helpers';\n// Internal\nimport type { AquiODisc, AquiOLocalToday, DailyAquiOEntry, GameState } from './types';\nimport { SETTINGS } from './settings';\n\nexport const DEFAULT_LOCAL_TODAY: AquiOLocalToday = {\n  id: '',\n  number: 0,\n  maxProgress: 0,\n  hardMode: false,\n  attempts: 0,\n  hearts: SETTINGS.HEARTS,\n};\n\n/**\n * Retrieves the initial state for the game.\n * @param data - The DailyAquiOEntry data.\n * @param isRandomGame - A boolean indicating if the game is random.\n * @returns The initial game state.\n */\nexport const getInitialState = (data: DailyAquiOEntry, isRandomGame: boolean): GameState => {\n  const localToday = loadLocalToday({\n    key: SETTINGS.KEY,\n    gameId: data.id,\n    defaultValue: deepCopy(DEFAULT_LOCAL_TODAY),\n  });\n\n  const state: GameState = {\n    hearts: SETTINGS.HEARTS,\n    goal: SETTINGS.GOAL,\n    discs: [],\n    discIndex: 0,\n    attempts: 0,\n    maxProgress: 0,\n  };\n\n  if (!isRandomGame) {\n    state.attempts = localToday.attempts ?? 0;\n    state.discIndex = localToday.maxProgress ?? 0;\n    state.maxProgress = localToday.maxProgress ?? 0;\n    state.hearts = localToday.hearts ?? SETTINGS.HEARTS;\n  }\n\n  return state;\n};\n\nexport const getDiscs = (entry: DailyAquiOEntry, challengingGame?: boolean): AquiODisc[] => {\n  const allItems = shuffle(entry.itemsIds);\n\n  const discs: AquiODisc[] = [];\n\n  for (let i = 0; i < 17; i++) {\n    const previousCard = discs[i - 1];\n\n    const card = createCards(allItems, previousCard, challengingGame ? discs[i - 1]?.match : undefined);\n    discs.push(card);\n  }\n\n  return discs;\n};\n\nconst POSITIONS = Array(9)\n  .fill(0)\n  .map((_, i) => i);\nconst SIZES = [100, 90, 110, 80, 105, 130, 120, 150];\n\nconst Z_INDEXES: NumberDictionary = {\n  80: 7,\n  90: 6,\n  100: 5,\n  105: 4,\n  110: 3,\n  120: 2,\n  130: 1,\n  150: 0,\n};\n\nfunction createCards(list: string[], previousCard?: AquiODisc, previousMatchId?: string): AquiODisc {\n  const shuffledList = shuffle(list);\n  const randomPositions = shuffle(POSITIONS);\n  const randomSizes = shuffle(SIZES);\n\n  if (!previousCard) {\n    const items = sampleSize(shuffledList, 8).map((itemId, i) => ({\n      itemId,\n      position: randomPositions[i],\n      size: randomSizes[i],\n      rotation: random(0, 360),\n      zIndex: Z_INDEXES[randomSizes[i]],\n    }));\n\n    return {\n      id: orderBy(items.map((item) => Number(item.itemId))).join(SEPARATOR),\n      items,\n    };\n  }\n\n  const previousCardItems = previousCard.items.map((item) => item.itemId);\n\n  const newCardItems = chain(shuffledList).difference(previousCardItems).take(7).value();\n  const matchingItem =\n    sample(previousCardItems.filter((item) => item !== previousMatchId)) ?? previousCardItems[0];\n\n  const items = shuffle([...newCardItems, matchingItem]).map((itemId, i) => ({\n    itemId,\n    position: randomPositions[i],\n    size: randomSizes[i],\n    rotation: random(0, 360),\n    zIndex: Z_INDEXES[randomSizes[i]],\n  }));\n\n  return {\n    id: orderBy(items.map((item) => Number(item.itemId))).join(SEPARATOR),\n    items,\n    match: matchingItem,\n  };\n}\n","import { useState } from 'react';\nimport type { ReactNode } from 'react';\nimport { Link } from 'react-router-dom';\n// Ant Design Resources\nimport { AppstoreFilled, HeartFilled, HeartOutlined, QuestionCircleFilled } from '@ant-design/icons';\nimport { Button, Drawer, Space } from 'antd';\n// Components\nimport { LanguageSwitch, Translate } from 'components/language';\n\ntype MenuProps = {\n  hearts: number;\n  total: number;\n  openRules: boolean;\n  rules: ReactNode;\n};\n\nexport function Menu({ hearts, total, openRules, rules }: MenuProps) {\n  return (\n    <div className=\"menu\">\n      <DailyHubLink />\n      <Hearts remaining={hearts} total={total} />\n      <RulesModal defaultOpen={openRules} rules={rules} />\n    </div>\n  );\n}\n\ntype HeartsProps = {\n  remaining: number;\n  total: number;\n};\n\nfunction Hearts({ remaining, total }: HeartsProps) {\n  const hearts = Array(total)\n    .fill(false)\n    .map((_, i) => i < remaining);\n\n  return (\n    <div className=\"menu-hearts\">\n      {hearts.map((heart, i) => (heart ? <HeartFilled key={i} /> : <HeartOutlined key={i} />))}\n    </div>\n  );\n}\n\ntype RulesModalProps = {\n  rules: ReactNode;\n  defaultOpen: boolean;\n};\n\nfunction RulesModal({ rules, defaultOpen }: RulesModalProps) {\n  const [open, setOpen] = useState(defaultOpen);\n\n  return (\n    <>\n      <Button\n        type=\"text\"\n        style={{ color: 'white' }}\n        icon={<QuestionCircleFilled />}\n        onClick={() => setOpen(true)}\n      />\n      <Drawer\n        title={<Translate pt=\"Regras\" en=\"Rules\" />}\n        placement=\"bottom\"\n        open={open}\n        onClose={() => setOpen(false)}\n      >\n        <Space direction=\"vertical\" size=\"small\">\n          <LanguageSwitch />\n          <ul className=\"list\">{rules}</ul>\n        </Space>\n      </Drawer>\n    </>\n  );\n}\n\nfunction DailyHubLink() {\n  return (\n    <Link to=\"/diario/hub\">\n      <Button type=\"text\" style={{ color: 'white' }} icon={<AppstoreFilled />} />\n    </Link>\n  );\n}\n","import clsx from 'clsx';\n// Components\nimport { ItemCard } from 'components/cards/ItemCard';\n// Internal\nimport type { AquiODisc } from '../utils/types';\n\ntype DiscProps = {\n  disc: AquiODisc;\n  onSelect: (itemId: string) => void;\n  width: number;\n  className: string;\n};\nexport function Disc({ disc, onSelect, width, className }: DiscProps) {\n  return (\n    <div className={clsx('aqui-o-disc', className)} style={{ width: width, height: width }}>\n      {disc.items.map((item) => (\n        <div\n          key={item.itemId}\n          className={clsx('aqui-o-disc-item', `aqui-o-disc-item--pos-${item.position}`)}\n          style={{\n            transform: `rotate(${item.rotation}deg) scale(${item.size / 100})`,\n            zIndex: item.zIndex,\n          }}\n          role=\"button\"\n          onClick={() => onSelect(item.itemId)}\n        >\n          <ItemCard id={item.itemId} className=\"aqui-o-disc-sprite\" width={width / 4} />\n        </div>\n      ))}\n    </div>\n  );\n}\n","// Components\nimport { ItemCard } from 'components/cards/ItemCard';\n\ntype PreloadItemsProps = {\n  items: string[];\n};\n\nexport function PreloadItems({ items }: PreloadItemsProps) {\n  return (\n    <div style={{ display: 'none' }}>\n      {items.map((itemId) => (\n        <ItemCard key={itemId} id={itemId} className=\"transparent\" width={1} />\n      ))}\n    </div>\n  );\n}\n","import { Link } from 'react-router-dom';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Icons\nimport { DailyAlienGameIcon } from 'icons/DailyAlienGameIcon';\nimport { DailyArtGameIcon } from 'icons/DailyArtGameIcon';\nimport { DailyDiagramGameIcon } from 'icons/DailyDiagramGameIcon';\nimport { DailyDrawingGameIcon } from 'icons/DailyDrawingGameIcon';\nimport { DailyFindingGameIcon } from 'icons/DailyFindingGameIcon';\nimport { DailyMovieGameIcon } from 'icons/DailyMovieGameIcon';\nimport { DailyWarehouseGameIcon } from 'icons/DailyWarehouseGameIcon';\nimport { DailyWordGameIcon } from 'icons/DailyWordGameIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { DualTranslate, Translate } from 'components/language';\n// Internal\nimport { SETTINGS as AQUI_O } from '../games/AquiO/utils/settings';\nimport { SETTINGS as ARTE_RUIM } from '../games/ArteRuim/utils/settings';\nimport { SETTINGS as ARTISTA } from '../games/Picaco/utils/settings';\nimport { SETTINGS as CONTROLE_DE_ESTOQUE } from '../games/ControleDeEstoque/utils/settings';\nimport { SETTINGS as FILMACO } from '../games/Filmaco/utils/settings';\nimport { SETTINGS as PALAVREADO } from '../games/Palavreado/utils/settings';\nimport { SETTINGS as TEORIA_DE_CONJUNTOS } from '../games/TeoriaDeConjuntos/utils/settings';\nimport { SETTINGS as COMUNICACAO_ALIENIGENA } from '../games/ComunicacaoAlienigena/utils/settings';\nimport { checkWasPlayedToday } from '../utils';\n\nconst PRIORITY_LIST = [\n  COMUNICACAO_ALIENIGENA,\n  TEORIA_DE_CONJUNTOS,\n  ARTE_RUIM,\n  FILMACO,\n  PALAVREADO,\n  AQUI_O,\n  CONTROLE_DE_ESTOQUE,\n  ARTISTA,\n];\n\nconst getNextGame = (): string => {\n  for (const game of PRIORITY_LIST) {\n    if (!checkWasPlayedToday(game.KEY)) {\n      return game.KEY;\n    }\n  }\n  return '';\n};\n\nexport function NextGameSuggestion() {\n  switch (getNextGame()) {\n    case AQUI_O.KEY:\n      return (\n        <Typography.Paragraph className=\"center\" strong>\n          <Translate\n            pt=\"Já encontrou a coisa em comum? Ela está...\"\n            en=\"Have you found the matching thing?\"\n          />\n          <br />\n\n          <Link to=\"/diario/aqui-o\">\n            <IconAvatar icon={<DailyFindingGameIcon />} /> <DualTranslate>{AQUI_O.NAME}</DualTranslate>!\n          </Link>\n        </Typography.Paragraph>\n      );\n\n    case ARTE_RUIM.KEY:\n      return (\n        <Typography.Paragraph className=\"center\" strong>\n          <Translate pt=\"Adivinhe o título das obras de arte!\" en=\"Guess the title of the artworks!\" />\n          <br />\n          <Link to=\"/diario/arte-ruim\">\n            <IconAvatar icon={<DailyArtGameIcon />} /> <DualTranslate>{ARTE_RUIM.NAME}</DualTranslate>!\n          </Link>\n        </Typography.Paragraph>\n      );\n\n    case COMUNICACAO_ALIENIGENA.KEY:\n      return (\n        <Typography.Paragraph className=\"center\" strong>\n          <Translate\n            pt=\"Não sabe se comunicar com seu cônjuge? Fale com alienígenas!\"\n            en=\"Communication with the aliens is hard!\"\n          />\n          <br />\n          <Link to=\"/diario/comunicacao-alienigena\">\n            <IconAvatar icon={<DailyAlienGameIcon />} />{' '}\n            <DualTranslate>{COMUNICACAO_ALIENIGENA.NAME}</DualTranslate>!\n          </Link>\n        </Typography.Paragraph>\n      );\n\n    case CONTROLE_DE_ESTOQUE.KEY:\n      return (\n        <Typography.Paragraph className=\"center\" strong>\n          <Translate\n            pt=\"Venha aplicar um feng-shui nessa prateleira!\"\n            en=\"Come apply some feng-shui to this shelf!\"\n          />\n          <br />\n          <Link to=\"/diario/controle-de-estoque\">\n            <IconAvatar icon={<DailyWarehouseGameIcon />} />{' '}\n            <DualTranslate>{CONTROLE_DE_ESTOQUE.NAME}</DualTranslate>!\n          </Link>\n        </Typography.Paragraph>\n      );\n\n    case FILMACO.KEY:\n      return (\n        <Typography.Paragraph className=\"center\" strong>\n          <Translate\n            pt=\"Pegue a pipoca e venha descobrir esse filme!\"\n            en=\"Get the popcorn and come find out about this movie!\"\n          />\n          <br />\n          <Link to=\"/diario/filmaco\">\n            <IconAvatar icon={<DailyMovieGameIcon />} /> <DualTranslate>{FILMACO.NAME}</DualTranslate>!\n          </Link>\n        </Typography.Paragraph>\n      );\n\n    case PALAVREADO.KEY:\n      return (\n        <Typography.Paragraph className=\"center\" strong>\n          <Translate\n            pt=\"E se o caça palavras estivesse todo embaralhado?\"\n            en=\"What if the word search was all scrambled?\"\n          />\n          <br />\n\n          <Link to=\"/diario/palavreado\">\n            <IconAvatar icon={<DailyWordGameIcon />} /> <DualTranslate>{PALAVREADO.NAME}</DualTranslate>!\n          </Link>\n        </Typography.Paragraph>\n      );\n\n    case ARTISTA.KEY:\n      return (\n        <Typography.Paragraph className=\"center\" strong>\n          <Translate\n            pt=\"Já desenhou hoje? Novas frases todos os dias!\"\n            en=\"Already drawn today? New phrases every day!\"\n          />\n          <br />\n          <Link to=\"/diario/picaco\">\n            <IconAvatar icon={<DailyDrawingGameIcon />} /> <DualTranslate>{ARTISTA.NAME}</DualTranslate>!\n          </Link>\n        </Typography.Paragraph>\n      );\n\n    case TEORIA_DE_CONJUNTOS.KEY:\n      return (\n        <Typography.Paragraph className=\"center\" strong>\n          <Translate pt=\"Quantas vogais têm em PQP?\" en=\"Can you solve this set challenge?\" />\n          <br />\n          <Link to=\"/diario/teoria-de-conjuntos\">\n            <IconAvatar icon={<DailyDiagramGameIcon />} />{' '}\n            <DualTranslate>{TEORIA_DE_CONJUNTOS.NAME}</DualTranslate>!\n          </Link>\n        </Typography.Paragraph>\n      );\n\n    default:\n      return (\n        <Typography.Paragraph className=\"center\" strong>\n          <Translate pt=\"Você já jogou todos os jogos de hoje!\" en=\"You've played all today's games!\" />\n          <br />\n          <Translate pt=\"Que eficiência!\" en=\"How efficient!\" />\n        </Typography.Paragraph>\n      );\n  }\n}\n","import { useEffect } from 'react';\nimport { useCopyToClipboard } from 'react-use';\n// Ant Design Resources\nimport { App, Input, Typography } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { TransparentButton } from 'components/buttons';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\n\ntype CopyToClipboardResultProps = {\n  result: string;\n  rows?: number;\n};\n\nexport function CopyToClipboardResult({ result, rows = 4 }: CopyToClipboardResultProps) {\n  const { message } = App.useApp();\n  const { translate } = useLanguage();\n  const [state, copyToClipboard] = useCopyToClipboard();\n\n  useEffect(() => {\n    if (state.value) {\n      message.info(\n        translate(\n          `Copiado para a área de transferência: ${state.value}`,\n          `Copied to clipboard: ${state.value}`,\n        ),\n      );\n    }\n  }, [state, message, translate]);\n\n  return (\n    <SpaceContainer vertical fullWidth>\n      <TransparentButton onClick={() => copyToClipboard(result)}>\n        <Input.TextArea value={result} readOnly cols={30} rows={rows} />\n      </TransparentButton>\n\n      <Typography.Paragraph className=\"center\">\n        <Translate\n          pt=\"Clique no campo acima para copiar e compartilhe com os amigos\"\n          en=\"Click the field above to copy and share it with friends\"\n        />\n      </Typography.Paragraph>\n    </SpaceContainer>\n  );\n}\n","import clsx from 'clsx';\nimport { NextGameSuggestion } from 'pages/Daily/components/NextGameSuggestion';\nimport { getDailyName, getSourceName, writeHeartResultString } from 'pages/Daily/utils';\nimport { Fragment } from 'react/jsx-runtime';\n// Ant Design Resources\nimport { Flex, Typography } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Icons\nimport { ApplauseIcon } from 'icons/ApplauseIcon';\nimport { SealOfApprovalIcon } from 'icons/SealOfApprovalIcon';\nimport { SkullIcon } from 'icons/SkullIcon';\nimport { TrophyIcon } from 'icons/TrophyIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\n// Internal\nimport { SETTINGS } from '../utils/settings';\nimport { CopyToClipboardResult } from '../../../components/CopyToClipboardResult';\n\nconst titles = [\n  <Fragment key=\"1\">\n    <IconAvatar icon={<SkullIcon />} /> <Translate pt=\"Você é muito ruim!\" en=\"You are really bad!\" />\n  </Fragment>,\n  <Fragment key=\"2\">\n    <IconAvatar icon={<SealOfApprovalIcon />} /> <Translate pt=\"Foi bem mais ou menos!\" en=\"Pretty Weak!\" />\n  </Fragment>,\n  <Fragment key=\"3\">\n    <IconAvatar icon={<ApplauseIcon />} /> <Translate pt=\"Muito bom!\" en=\"Very good!\" />\n  </Fragment>,\n  <Fragment key=\"4\">\n    <IconAvatar icon={<TrophyIcon />} /> <Translate pt=\"Parabéns!\" en=\"Congratulations!\" />\n  </Fragment>,\n  <Fragment key=\"5\">\n    <IconAvatar icon={<TrophyIcon />} /> <Translate pt=\"Incrível!\" en=\"Incredible!\" />\n  </Fragment>,\n];\n\nconst getTitle = (progress: number, remainingHearts: number) => {\n  if (progress <= 3 || remainingHearts === 0) return titles[0];\n  if (progress <= 8) return titles[1];\n  if (progress <= 10) return titles[2];\n  if (progress < 15) return titles[3];\n\n  return titles[4];\n};\n\ntype ResultsModalContentProps = {\n  challengeTitle: string;\n  challengeNumber: number;\n  hearts: number;\n  progress: number;\n  itemsIds: string[];\n  isRandomGame: boolean;\n  hardMode: boolean;\n  lastMatch: string;\n  maxProgress: number;\n  attempts: number;\n};\n\nexport function ResultsModalContent({\n  challengeTitle,\n  challengeNumber,\n  hearts,\n  progress,\n  itemsIds,\n  isRandomGame,\n  hardMode,\n  lastMatch,\n  maxProgress,\n  attempts,\n}: ResultsModalContentProps) {\n  const { language, dualTranslate } = useLanguage();\n  const result = writeResult({\n    game: dualTranslate(SETTINGS.NAME),\n    title: challengeTitle,\n    remainingHearts: hearts,\n    totalHearts: SETTINGS.HEARTS,\n    progress: Math.max(progress, maxProgress),\n    goal: SETTINGS.GOAL,\n    language,\n    hardMode,\n    challengeNumber,\n    attempts,\n  });\n\n  const title = getTitle(progress, hearts);\n  const worse = maxProgress > progress;\n\n  return (\n    <SpaceContainer vertical>\n      <Typography.Title level={2} className=\"center\">\n        {title}\n      </Typography.Title>\n      <Typography.Paragraph className=\"center\">\n        <Translate\n          pt={`Você avançou ${progress} discos de ${SETTINGS.GOAL}.`}\n          en={`You advanced ${progress} discs out of ${SETTINGS.GOAL}.`}\n        />\n        <br />\n      </Typography.Paragraph>\n      {!isRandomGame && (\n        <Typography.Paragraph className=\"center\">\n          <Translate\n            pt=\"Você pode tentar novamente até conseguir 15 ou até não ter mais corações.\"\n            en=\"You can try again until you reach 15 or until you run out of hearts.\"\n          />\n          {worse && (\n            <>\n              <br />\n              <Translate\n                pt={`Seu melhor hoje foi de ${maxProgress} discos. Tente novamente!`}\n                en={`Your best today was ${maxProgress} discs. Try again!`}\n              />\n            </>\n          )}\n        </Typography.Paragraph>\n      )}\n\n      <Flex gap={6}>\n        {!!lastMatch && (\n          <ItemCard\n            id={lastMatch}\n            width={45}\n            className={clsx(getAnimationClass('pulse', { speed: 'fast' }), 'item-match-outline')}\n          />\n        )}\n        {progress > 0 &&\n          itemsIds\n            .filter((id) => id !== lastMatch)\n            .slice(0, Math.floor((progress - 1) / 3))\n            .map((id, index) => (\n              <ItemCard\n                key={id}\n                id={id}\n                width={45}\n                className={getAnimationClass('pulse', {\n                  speed: 'fast',\n                  delay: index * 0.5,\n                })}\n              />\n            ))}\n      </Flex>\n\n      {!isRandomGame ? (\n        <CopyToClipboardResult result={result} rows={3} />\n      ) : (\n        <Typography.Paragraph className=\"center\">\n          <Translate\n            pt=\"Baralhos aleatórios não são compartilháveis, mas você pode jogar mais.\"\n            en=\"Random decks are not shareable, but you can play more.\"\n          />\n        </Typography.Paragraph>\n      )}\n\n      <NextGameSuggestion />\n    </SpaceContainer>\n  );\n}\n\nfunction writeResult({\n  game,\n  title,\n  challengeNumber,\n  remainingHearts,\n  totalHearts,\n  progress,\n  goal,\n  language,\n  hardMode,\n  attempts,\n}: {\n  game: string;\n  title: string;\n  challengeNumber: number;\n  remainingHearts: number;\n  totalHearts: number;\n  progress: number;\n  goal: number;\n  language: Language;\n  hardMode: boolean;\n  attempts: number;\n}): string {\n  return [\n    `${SETTINGS.ICON} ${getDailyName(language)} ${game} #${challengeNumber}`,\n    `${title}${hardMode ? '*' : ''}: ${progress}/${goal}  ${writeHeartResultString(remainingHearts, totalHearts)}`,\n    `Tentativas: ${attempts}`,\n    `https://www.kavispires.com/tardedivertida/#/${getSourceName(language)}`,\n  ].join('\\n');\n}\n","// Ant Design Resources\nimport { HeartFilled } from '@ant-design/icons';\nimport { Typography } from 'antd';\n// Components\nimport { Translate } from 'components/language';\n\nexport function Rules() {\n  return (\n    <Typography>\n      <Translate\n        pt={\n          <>\n            <li>Você é apresentado com dois discos com 8 itens cada.</li>\n            <li>Existe apenas um item que é comum nos dois discos, clique nele o mais rápido possível.</li>\n            <li>Você tem 60 segundos para acertar o maior número de discos.</li>\n            <li>\n              Cada item errado que você clica, remove-se um coração e você tem apenas 3 <HeartFilled />.\n            </li>\n            <li>\n              <strong>Modo difícil:</strong> Itens nunca repetem em sequência.\n            </li>\n            <li>Boa sorte e cuidado com dedos gordos!</li>\n          </>\n        }\n        en={\n          <>\n            <li>You are presented with two discs with 8 items each.</li>\n            <li>There is only one item that is common in both discs, click on it as quickly as possible.</li>\n            <li>You have 60 seconds to hit the most discs.</li>\n            <li>\n              Each wrong item you click, a heart is removed and you only have 3 <HeartFilled />.\n            </li>\n            <li>\n              <strong>Hard mode:</strong> Items never repeat in sequence.\n            </li>\n            <li>Good luck and watch out for fat fingers!</li>\n          </>\n        }\n      />\n    </Typography>\n  );\n}\n","import { useMemo, useState } from 'react';\nimport { useMeasure } from 'react-use';\n// Ant Design Resources\nimport { Button, Divider, FloatButton, Layout, Modal, Space, Switch, Typography } from 'antd';\n// Utils\nimport { getAnimationClass, isDevEnv } from 'utils/helpers';\n// Icons\nimport { DailyFindingGameIcon } from 'icons/DailyFindingGameIcon';\n// Components\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { DualTranslate, Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { TimerBar } from 'components/timers';\n// Internal\nimport { SETTINGS } from '../utils/settings';\nimport type { DailyAquiOEntry } from '../utils/types';\nimport { useAquiOEngine } from '../utils/useAquiOEngine';\nimport { getInitialState } from '../utils/helpers';\nimport { Header } from '../../../components/Header';\nimport { Menu } from '../../../components/Menu';\nimport { Disc } from './Disc';\nimport { PreloadItems } from './PreloadItems';\nimport { ResultsModalContent } from './ResultsModalContent';\nimport { Rules } from './Rules';\n\ntype DailyAquiOProps = {\n  data: DailyAquiOEntry;\n  language: Language;\n  onToggleGame: () => void;\n  isRandomGame: boolean;\n};\n\nexport function DailyAquiO({ data, language, onToggleGame, isRandomGame }: DailyAquiOProps) {\n  const [initialState] = useState(getInitialState(data, isRandomGame));\n\n  const {\n    hearts,\n    showResultModal,\n    setShowResultModal,\n    discIndex,\n    isWin,\n    isLose,\n    isComplete,\n    onStart,\n    onSelect,\n    timeLeft,\n    mode,\n    setMode,\n    discA,\n    discB,\n    result,\n    isPlaying,\n    attempts,\n    maxProgress,\n  } = useAquiOEngine(data, initialState, isRandomGame);\n\n  // UI state\n  const [contentRef, contentMeasure] = useMeasure<HTMLDivElement>();\n  const [headerRef, headerMeasure] = useMeasure<HTMLDivElement>();\n  const discWidth = useMemo(() => {\n    const width = contentMeasure.width - 24;\n    const height = (contentMeasure.height - headerMeasure.height) / 2 - 24;\n    return Math.max(Math.min(width, height, 450), 150);\n  }, [contentMeasure.height, contentMeasure.width, headerMeasure.height]);\n\n  return (\n    <Layout className=\"app\">\n      <Header icon={<DailyFindingGameIcon />} localStorageKey={SETTINGS.KEY}>\n        TD <DualTranslate>{SETTINGS.NAME}</DualTranslate> #{data.number}\n      </Header>\n      <Layout.Content ref={contentRef}>\n        <div ref={headerRef}>\n          <Menu hearts={hearts} total={SETTINGS.HEARTS} openRules={true} rules={<Rules />} />\n          <SpaceContainer>\n            <Typography.Text strong>\n              {data.title[language]} | <Translate pt=\"Disco\" en=\"Disc\" /> {discIndex}/{SETTINGS.GOAL}\n              {!isRandomGame && (\n                <>\n                  {' '}\n                  | <Translate pt=\"Tentativa\" en=\"Attempt\" /> {attempts}\n                </>\n              )}\n            </Typography.Text>\n          </SpaceContainer>\n\n          <div className=\"full-width padding\">\n            <TimerBar value={timeLeft} total={60} />\n          </div>\n        </div>\n\n        <SpaceContainer direction=\"vertical\">\n          {!isPlaying && (\n            <>\n              <Button\n                size=\"large\"\n                onClick={onStart}\n                type=\"primary\"\n                disabled={isRandomGame ? false : isWin || isLose}\n                icon=\"🔘\"\n              >\n                <Translate pt=\"Começar\" en=\"Start\" />\n                &nbsp;\n                {isRandomGame ? (\n                  <DualTranslate>{data.title}</DualTranslate>\n                ) : (\n                  <Translate pt=\" Diário\" en=\" Daily\" />\n                )}\n              </Button>\n              <PreloadItems items={data.itemsIds} />\n\n              <Switch\n                unCheckedChildren={<Translate pt=\"Modo Normal\" en=\"Normal Mode\" />}\n                checkedChildren={<Translate pt=\"Modo Difícil\" en=\"Challenge Mode\" />}\n                value={mode === 'challenge'}\n                onChange={(checked) => setMode(checked ? 'challenge' : 'normal')}\n              />\n            </>\n          )}\n\n          {isComplete && (\n            <Space className=\"results-container\" align=\"center\" direction=\"vertical\">\n              <Button onClick={() => setShowResultModal(true)}>\n                <Translate pt=\"Ver Resultado\" en=\"Show Results\" />\n              </Button>\n            </Space>\n          )}\n\n          {(isRandomGame || isComplete) && !isPlaying && (\n            <Space className=\"results-container\" align=\"center\" direction=\"vertical\">\n              <Divider />\n\n              <Button onClick={onToggleGame}>\n                {isRandomGame ? (\n                  <Translate pt=\"Jogar o Desafio Diário\" en=\"Play the daily challenge\" />\n                ) : (\n                  <Translate pt=\"Jogar com baralho aleatório\" en=\"Play a random deck\" />\n                )}\n              </Button>\n            </Space>\n          )}\n\n          {isPlaying && (\n            <SpaceContainer direction=\"vertical\">\n              <Disc\n                disc={discA}\n                onSelect={onSelect}\n                key={discA.id}\n                width={discWidth}\n                className={getAnimationClass('slideInUp', { speed: 'fast' })}\n              />\n              <Disc\n                disc={discB}\n                onSelect={onSelect}\n                key={discB.id}\n                width={discWidth}\n                className={getAnimationClass('zoomIn', { speed: 'fast' })}\n              />\n              <DevResult result={result} />\n            </SpaceContainer>\n          )}\n\n          <Modal\n            title={<Translate pt=\"Resultado\" en=\"Results\" />}\n            open={showResultModal}\n            onCancel={() => setShowResultModal(false)}\n            okButtonProps={{ hidden: true }}\n            cancelButtonProps={{ hidden: true }}\n          >\n            <ResultsModalContent\n              challengeTitle={data.title[language]}\n              challengeNumber={data.number}\n              hearts={hearts}\n              attempts={attempts}\n              progress={discIndex}\n              itemsIds={data.itemsIds}\n              isRandomGame={isRandomGame}\n              hardMode={mode === 'challenge'}\n              lastMatch={result}\n              maxProgress={maxProgress}\n            />\n          </Modal>\n        </SpaceContainer>\n      </Layout.Content>\n    </Layout>\n  );\n}\n\nfunction DevResult({ result }: { result: string }) {\n  if (!isDevEnv) return <></>;\n\n  return (\n    <FloatButton shape=\"square\" icon={<ItemCard id={result} width={50} padding={0} className=\"raw-item\" />} />\n  );\n}\n","import { intersectionBy } from 'lodash';\nimport { useDailyGameState } from 'pages/Daily/hooks/useDailyGameState';\nimport { useDailyLocalToday, useMarkAsPlayed } from 'pages/Daily/hooks/useDailyLocalToday';\nimport { useShowResultModal } from 'pages/Daily/hooks/useShowResultModal';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useLocalStorage } from 'react-use';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\n// Utils\nimport { inNSeconds } from 'utils/helpers';\n// Internal\nimport { DEFAULT_LOCAL_TODAY, getDiscs } from './helpers';\nimport { SETTINGS } from './settings';\nimport type { AquiOLocalToday, DailyAquiOEntry, GameState } from './types';\n\nconst DURATION = 60;\n\nexport function useAquiOEngine(data: DailyAquiOEntry, initialState: GameState, isRandomGame: boolean) {\n  const [timesUp, setTimesUp] = useState(false);\n\n  const [mode, setMode] = useLocalStorage(SETTINGS.TD_DAILY_AQUI_O_MODE, 'normal');\n\n  const { state, setState, updateState } = useDailyGameState<GameState>(initialState);\n\n  const { updateLocalStorage } = useDailyLocalToday<AquiOLocalToday>({\n    key: SETTINGS.KEY,\n    gameId: data.id,\n    defaultValue: DEFAULT_LOCAL_TODAY,\n  });\n\n  // ADDITIONAL STATE\n  const discA = state.discs[state.discIndex];\n  const discB = state.discs[state.discIndex + 1];\n\n  const result = useMemo(\n    () => intersectionBy(discA?.items ?? [], discB?.items ?? [], 'itemId')?.[0]?.itemId,\n    [discA, discB],\n  );\n\n  // TIMER\n  const { timeLeft, isRunning, restart, pause } = useCountdown({\n    duration: DURATION,\n    autoStart: false,\n    onExpire: () => {\n      setTimesUp(true);\n      if (!isRandomGame) {\n        updateLocalStorage({\n          hardMode: mode === 'challenge',\n          hearts: state.hearts,\n          maxProgress: Math.max(state.discIndex, state.maxProgress),\n        });\n        updateState({\n          maxProgress: Math.max(state.discIndex, state.maxProgress),\n        });\n      }\n    },\n  });\n\n  // ACTIONS\n  const onStart = () => {\n    updateLocalStorage({\n      attempts: state.attempts + 1,\n    });\n    setState((prev) => ({\n      ...prev,\n      discs: getDiscs(data, mode === 'challenge'),\n      discIndex: 0,\n      attempts: prev.attempts + 1,\n    }));\n\n    restart(inNSeconds(DURATION), true);\n  };\n\n  const onSelect = (itemId: string) => {\n    if (itemId === result) {\n      setState((prev) => ({ ...prev, discIndex: prev.discIndex + 1 }));\n    } else {\n      setState((prev) => ({ ...prev, hearts: prev.hearts - 1 }));\n    }\n  };\n\n  // CONDITIONS\n  const isWin = state.discIndex === SETTINGS.GOAL;\n  const isLose = state.hearts <= 0;\n  const isComplete = (isWin || isLose || timesUp || state.attempts > 0) && !isRunning;\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: we only need isWin and isLose\n  useEffect(() => {\n    if (isWin || isLose) {\n      pause();\n      setTimesUp(true);\n      if (isWin) {\n        updateLocalStorage({\n          maxProgress: SETTINGS.GOAL,\n        });\n      }\n    }\n  }, [isWin, isLose]);\n\n  useMarkAsPlayed({\n    key: SETTINGS.KEY,\n    isComplete,\n  });\n\n  // RESULTS MODAL\n  const { showResultModal, setShowResultModal } = useShowResultModal(isComplete, () => pause());\n\n  return {\n    hearts: state.hearts,\n    discIndex: state.discIndex,\n    attempts: state.attempts,\n    maxProgress: state.maxProgress,\n    showResultModal,\n    setShowResultModal,\n    isWin,\n    isLose,\n    isComplete,\n    onStart,\n    onSelect,\n    timeLeft,\n    mode,\n    setMode,\n    discA,\n    discB,\n    result,\n    isPlaying: isRunning,\n  };\n}\n","import { DailyError } from 'pages/Daily/components/DailyError';\nimport { DailyLoading } from 'pages/Daily/components/DailyLoading';\nimport { useRandomAquiOChallenge } from 'pages/Daily/games/AquiO/data/useRandomAquiOChallenge';\nimport { useDailyChallenge } from 'pages/Daily/hooks/useDailyChallenge';\nimport { useState } from 'react';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Internal\nimport { DailyAquiO } from './components/DailyAquiO';\nimport { getToday, wait } from '../../utils';\n// Sass\nimport './utils/styles.scss';\n\nexport function DailyAquiOGame() {\n  const today = getToday();\n  const { language } = useLanguage();\n  const [isRandomGame, setRandomGame] = useState(false);\n\n  // Load challenge\n  const challengeQuery = useDailyChallenge();\n  const randomGameQuery = useRandomAquiOChallenge(`${today}`);\n\n  if (challengeQuery.isLoading || challengeQuery.isRefetching || randomGameQuery.isLoading) {\n    return <DailyLoading />;\n  }\n\n  const dailyData = challengeQuery?.data?.['aqui-o'];\n  const data = isRandomGame ? randomGameQuery?.data : dailyData;\n\n  if (challengeQuery.isError || !data) {\n    return <DailyError />;\n  }\n\n  const onToggleGame = async () => {\n    setRandomGame((prev) => !prev);\n    await wait(250);\n  };\n\n  return (\n    <DailyAquiO\n      key={String(isRandomGame)}\n      data={data}\n      language={language}\n      onToggleGame={onToggleGame}\n      isRandomGame={isRandomGame}\n    />\n  );\n}\n","import clsx from 'clsx';\nimport { useEffectOnce } from 'react-use';\n// Ant Design Resources\nimport { Flex, Space } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Internal\nimport type { LettersDictionary } from '../utils/types';\n\nconst NUMBERS = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'];\nconst FIRST_ROW = ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p'];\nconst SECOND_ROW = ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l'];\nconst THIRD_ROW = ['z', 'x', 'c', 'v', 'b', 'n', 'm'];\n\ntype KeyboardProps = {\n  onLetterClick: GenericFunction;\n  lettersState?: LettersDictionary;\n  disabled?: boolean;\n  onEnterClick?: GenericFunction;\n  onBackspaceClick?: GenericFunction;\n  withNumbers?: boolean;\n};\n\nexport function Keyboard({\n  lettersState,\n  onLetterClick,\n  disabled,\n  onBackspaceClick,\n  onEnterClick,\n  withNumbers,\n}: KeyboardProps) {\n  const width = useCardWidth(FIRST_ROW.length + 2, {\n    margin: 16,\n    maxWidth: 30,\n  });\n\n  useEffectOnce(() => {\n    const handleKeyUp = (event: KeyboardEvent) => {\n      const key = event.key;\n      if (disabled) return;\n\n      if (key === 'Enter' && onEnterClick) {\n        return onEnterClick();\n      }\n      if (key === 'Backspace' && onBackspaceClick) {\n        return onBackspaceClick();\n      }\n      if (\n        !disabled &&\n        (FIRST_ROW.includes(key) || SECOND_ROW.includes(key) || THIRD_ROW.includes(key)) &&\n        lettersState?.[key].disabled\n      ) {\n        return onLetterClick(key);\n      }\n    };\n\n    window.addEventListener('keyup', handleKeyUp);\n\n    return () => window.removeEventListener('keyup', handleKeyUp);\n  });\n\n  return (\n    <Space direction=\"vertical\" align=\"center\" className=\"daily-keyboard\" size=\"small\">\n      {withNumbers && (\n        <Flex className=\"daily-keyboard__row\">\n          {NUMBERS.map((letter) => (\n            <Key\n              key={letter}\n              width={width}\n              letter={letter}\n              state={lettersState?.[letter]?.state}\n              onLetterClick={onLetterClick}\n              disabled={disabled || lettersState?.[letter]?.disabled}\n            />\n          ))}\n        </Flex>\n      )}\n      <Flex className=\"daily-keyboard__row\">\n        {FIRST_ROW.map((letter) => (\n          <Key\n            key={letter}\n            width={width}\n            letter={letter}\n            state={lettersState?.[letter]?.state}\n            onLetterClick={onLetterClick}\n            disabled={disabled || lettersState?.[letter]?.disabled}\n          />\n        ))}\n      </Flex>\n      <Flex className=\"daily-keyboard__row\">\n        {SECOND_ROW.map((letter) => (\n          <Key\n            key={letter}\n            width={width}\n            letter={letter}\n            state={lettersState?.[letter]?.state}\n            onLetterClick={onLetterClick}\n            disabled={disabled || lettersState?.[letter]?.disabled}\n          />\n        ))}\n      </Flex>\n      <Flex className=\"daily-keyboard__row\">\n        {!!onEnterClick && (\n          <button\n            type=\"button\"\n            style={{ width }}\n            className=\"daily-keyboard__key daily-keyboard__key--enter\"\n            onClick={onEnterClick}\n            disabled={disabled}\n          >\n            Enter\n          </button>\n        )}\n        {THIRD_ROW.map((letter) => (\n          <Key\n            key={letter}\n            width={width}\n            letter={letter}\n            state={lettersState?.[letter]?.state}\n            onLetterClick={onLetterClick}\n            disabled={disabled || lettersState?.[letter]?.disabled}\n          />\n        ))}\n        {!!onBackspaceClick && (\n          <button\n            type=\"button\"\n            style={{ width }}\n            className=\"daily-keyboard__key daily-keyboard__key--backspace\"\n            onClick={onBackspaceClick}\n            disabled={disabled}\n          >\n            ⌫\n          </button>\n        )}\n      </Flex>\n    </Space>\n  );\n}\n\ntype KeyProps = {\n  letter: string;\n  width: number;\n  state?: string;\n} & Pick<KeyboardProps, 'onLetterClick' | 'disabled'>;\n\nfunction Key({ letter, state, onLetterClick, disabled }: KeyProps) {\n  const baseClassName = 'daily-keyboard__key';\n  const width = useCardWidth(FIRST_ROW.length + 2, {\n    margin: 16,\n    maxWidth: 30,\n  });\n\n  return (\n    <button\n      type=\"button\"\n      data-key={letter}\n      key={letter}\n      style={{ width }}\n      className={clsx(baseClassName, `${baseClassName}--${state}`)}\n      onClick={() => onLetterClick(letter)}\n      disabled={disabled || state === 'disabled'}\n    >\n      {letter}\n    </button>\n  );\n}\n","import { loadLocalToday } from 'pages/Daily/utils';\nimport type { LettersDictionary } from 'pages/Daily/utils/types';\n// Utils\nimport { deepCopy, stringRemoveAccents } from 'utils/helpers';\n// Internal\nimport { SETTINGS } from './settings';\nimport type { ArteRuimLocalToday, DailyArteRuimEntry, GameState } from './types';\n\nexport const DEFAULT_LOCAL_TODAY: ArteRuimLocalToday = {\n  id: '',\n  letters: [],\n  number: 0,\n};\n\n/**\n * Retrieves the initial state for the game based on the provided data.\n * @param data - The DailyArteRuimEntry object containing the necessary data.\n * @returns The initial GameState object.\n */\nexport function getInitialState(data: DailyArteRuimEntry): GameState {\n  const localToday = loadLocalToday({\n    key: SETTINGS.KEY,\n    gameId: data.id,\n    defaultValue: deepCopy(DEFAULT_LOCAL_TODAY),\n  });\n\n  const state: GameState = {\n    solution: getLettersInWord(data.text),\n    hearts: SETTINGS.HEARTS,\n    guesses: {},\n    win: false,\n  };\n\n  let solution = { ...state.solution };\n  const guesses = localToday.letters.reduce((acc: LettersDictionary, letter) => {\n    const isCorrect = state.solution[letter] !== undefined;\n    if (state.solution[letter] !== undefined) {\n      solution = { ...solution, [letter]: true };\n    }\n    acc[letter] = {\n      letter: letter,\n      state: isCorrect ? 'correct' : 'incorrect',\n      disabled: true,\n    };\n    state.hearts = isCorrect ? state.hearts : state.hearts - 1;\n    return acc;\n  }, {});\n  state.solution = solution;\n\n  state.guesses = guesses;\n  state.win = Object.values(solution)\n    .filter((value) => value !== undefined)\n    .every(Boolean);\n\n  return state;\n}\n\n/**\n * Returns an object with each letter in the word as a key and a boolean value indicating if the letter has been found.\n * @param text - The word to extract the letters from.\n * @returns An object with each letter in the word as a key and a boolean value indicating if the letter has been found.\n */\nexport function getLettersInWord(text: string): BooleanDictionary {\n  const cleanedUpText = stringRemoveAccents(text).toLowerCase();\n  const letters = cleanedUpText.split('');\n  const lettersInWord: BooleanDictionary = {};\n\n  letters.forEach((letter) => {\n    if (letter.match(/[a-zA-Z]/)) {\n      lettersInWord[letter] = false;\n    }\n  });\n\n  return lettersInWord;\n}\n\n/**\n * Removes diacritical marks from a given character and converts it to lowercase.\n *\n * @param char - The character to be cleaned up.\n * @returns The cleaned up character.\n */\nexport function cleanupLetter(char: string): string {\n  return stringRemoveAccents(char).toLowerCase();\n}\n\n/**\n * Checks if a character is a letter.\n *\n * @param char - The character to check.\n * @returns `true` if the character is a letter, `false` otherwise.\n */\nexport function isLetter(char: string): boolean {\n  return cleanupLetter(char).match(/[a-zA-Z]/) !== null;\n}\n","// Ant Design Resources\nimport { Carousel } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { CanvasSVG } from 'components/canvas';\n\ntype DrawingCarouselProps = {\n  drawings: string[];\n};\n\nexport function DrawingCarousel({ drawings }: DrawingCarouselProps) {\n  const width = useCardWidth(1, { margin: 64, maxWidth: 250, minWidth: 150 });\n\n  return (\n    <Carousel autoplay className=\"carousel\" autoplaySpeed={4000}>\n      {drawings.map((d: string) => (\n        <CanvasSVG key={d} drawing={d} width={width} height={width} className=\"canvas\" />\n      ))}\n    </Carousel>\n  );\n}\n","import type { LettersDictionary } from 'pages/Daily/utils/types';\nimport { useMemo } from 'react';\n// Ant Design Resources\nimport { Avatar, Space } from 'antd';\n// Icons\nimport { BoxBlankIcon } from 'icons/BoxBlankIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\n// Internal\nimport { cleanupLetter, isLetter } from '../utils/helpers';\n\ntype PromptProps = {\n  text: string;\n  guesses: LettersDictionary;\n};\n\nexport function Prompt({ text, guesses }: PromptProps) {\n  const prompt = useMemo(() => text.split(' ').map((word) => word.split('')), [text]);\n  return (\n    <Space className=\"prompt\" wrap align=\"center\">\n      {prompt.map((word, i, p) => {\n        return (\n          <Space key={`word-${i}`} className=\"prompt-word\" wrap align=\"center\">\n            {word.map((l, j) => {\n              const letter = cleanupLetter(l);\n              const isCorrect = guesses?.[letter]?.state === 'correct';\n              const key = `${j}-${l}-${i}`;\n              if (isLetter(letter)) {\n                return isCorrect ? (\n                  <Avatar key={key} className=\"letter-correct\" shape=\"square\">\n                    {l}\n                  </Avatar>\n                ) : (\n                  <IconAvatar key={key} icon={<BoxBlankIcon />} className=\"letter-blank\" />\n                );\n              }\n\n              return (\n                <Avatar key={key} shape=\"square\">\n                  {l}\n                </Avatar>\n              );\n            })}\n            {i + 1 < p.length && <Avatar shape=\"square\"></Avatar>}\n          </Space>\n        );\n      })}\n    </Space>\n  );\n}\n","import { NextGameSuggestion } from 'pages/Daily/components/NextGameSuggestion';\nimport { getDailyName, getSourceName, writeHeartResultString } from 'pages/Daily/utils';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Icons\nimport { BoxXIcon } from 'icons/BoxXIcon';\nimport { TrophyIcon } from 'icons/TrophyIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { TextHighlight } from 'components/text';\n// Internal\nimport { SETTINGS } from '../utils/settings';\nimport { CopyToClipboardResult } from '../../../components/CopyToClipboardResult';\n\ntype ResultsModalContentProps = {\n  challenge: number;\n  text: string;\n  win: boolean;\n  hearts: number;\n  solution: BooleanDictionary;\n};\n\nexport function ResultsModalContent({ text, challenge, win, hearts, solution }: ResultsModalContentProps) {\n  const { language, dualTranslate } = useLanguage();\n\n  const result = writeResult({\n    game: dualTranslate(SETTINGS.NAME),\n    challenge,\n    remainingHearts: hearts,\n    solution,\n    language,\n  });\n\n  return (\n    <SpaceContainer vertical>\n      <Typography.Title level={2} className=\"center\">\n        {win ? (\n          <>\n            <IconAvatar icon={<TrophyIcon />} /> <Translate pt=\"Parabéns!\" en=\"Congratulations!\" />\n          </>\n        ) : (\n          <>\n            <IconAvatar icon={<BoxXIcon />} /> <Translate pt=\"Que pena!\" en=\"Too bad!\" />\n          </>\n        )}\n      </Typography.Title>\n      <Typography.Paragraph className=\"center\">\n        {win ? (\n          <Translate pt=\"Você acertou a palavra!\" en=\"You guessed the word!\" />\n        ) : (\n          <Translate pt=\"Você errou a palavra!\" en=\"You missed the word!\" />\n        )}\n      </Typography.Paragraph>\n\n      <TextHighlight className=\"result-answer\">\n        <Typography.Paragraph className=\"text-center\">{text}</Typography.Paragraph>\n      </TextHighlight>\n\n      <CopyToClipboardResult result={result} rows={3} />\n\n      <NextGameSuggestion />\n    </SpaceContainer>\n  );\n}\n\nfunction writeResult({\n  game,\n  challenge,\n  remainingHearts,\n  solution,\n  language,\n}: {\n  game: string;\n  challenge: number;\n  remainingHearts: number;\n  solution: BooleanDictionary;\n  language: Language;\n}) {\n  const totalLetters = Object.keys(solution).length;\n  const guessedLetters = Object.values(solution).filter(Boolean).length;\n\n  return [\n    `${SETTINGS.ICON} ${getDailyName(language)} ${game} #${challenge}`,\n    `${writeHeartResultString(remainingHearts, SETTINGS.HEARTS)} (${Math.round((guessedLetters / totalLetters) * 100)}%)`,\n    `https://www.kavispires.com/tardedivertida/#/${getSourceName(language)}`,\n  ].join('\\n');\n}\n","// Ant Design Resources\nimport { HeartFilled } from '@ant-design/icons';\nimport { Typography } from 'antd';\n// Components\nimport { Translate } from 'components/language';\n\nexport function Rules() {\n  return (\n    <Typography>\n      <Translate\n        pt={\n          <>\n            <li>Tente adivinhar a expressão secreta observando os desenhos.</li>\n            <li>Você deve apertar letra por letra até que o nome esteja completo.</li>\n            <li>\n              Cada letra que você aperta que não está presente na resposta remove um coração e você tem apenas\n              3 <HeartFilled />.\n            </li>\n            <li>Boa sorte!</li>\n          </>\n        }\n        en={\n          <>\n            <li>Try to guess the secret expression by looking at the drawings.</li>\n            <li>You must press letter by letter until the name is complete.</li>\n            <li>\n              Each letter you press that is not present in the answer removes a heart and you only have 3{' '}\n              <HeartFilled />.\n            </li>\n            <li>Good luck!</li>\n          </>\n        }\n      />\n    </Typography>\n  );\n}\n","import { Keyboard } from 'pages/Daily/components/Keyboard';\nimport { useState } from 'react';\n// Ant Design Resources\nimport { BarChartOutlined } from '@ant-design/icons';\nimport { Button, Layout, Modal, Space } from 'antd';\n// Types\nimport type { Me } from 'types/user';\n// Icons\nimport { DailyArtGameIcon } from 'icons/DailyArtGameIcon';\n// Components\nimport { DualTranslate, Translate } from 'components/language';\n// Internal\nimport { getInitialState } from '../utils/helpers';\nimport { SETTINGS } from '../utils/settings';\nimport type { DailyArteRuimEntry } from '../utils/types';\nimport { useArteRuimEngine } from '../utils/useArteRuimEngine';\nimport { Header } from '../../../components/Header';\nimport { Menu } from '../../../components/Menu';\nimport { DrawingCarousel } from './DrawingCarousel';\nimport { Prompt } from './Prompt';\nimport { ResultsModalContent } from './ResultsModalContent';\nimport { Rules } from './Rules';\n\ntype DailyArteRuimProps = {\n  data: DailyArteRuimEntry;\n  currentUser: Me;\n};\n\nexport function DailyArteRuim({ data }: DailyArteRuimProps) {\n  const [initialState] = useState(getInitialState(data));\n\n  const { hearts, guesses, showResultModal, setShowResultModal, isWin, isComplete, guessLetter, solution } =\n    useArteRuimEngine(data, initialState);\n\n  return (\n    <Layout className=\"app\">\n      <Header icon={<DailyArtGameIcon />} localStorageKey={SETTINGS.KEY}>\n        TD <DualTranslate>{SETTINGS.NAME}</DualTranslate> #{data.number}\n      </Header>\n      <Layout.Content>\n        <Menu\n          hearts={hearts}\n          total={SETTINGS.HEARTS}\n          openRules={!isComplete || hearts === SETTINGS.HEARTS}\n          rules={<Rules />}\n        />\n\n        <DrawingCarousel drawings={data.drawings} />\n\n        <Prompt text={data.text} guesses={guesses} />\n\n        {isComplete && (\n          <Space className=\"results-container\" direction=\"vertical\" align=\"center\">\n            <Button onClick={() => setShowResultModal(true)} type=\"primary\" icon={<BarChartOutlined />}>\n              <Translate pt=\"Ver Resultado\" en=\"Show Results\" />\n            </Button>\n          </Space>\n        )}\n        <Modal\n          title={<Translate pt=\"Resultado\" en=\"Results\" />}\n          open={showResultModal}\n          onCancel={() => setShowResultModal(false)}\n          footer={null}\n        >\n          <ResultsModalContent\n            challenge={data.number}\n            win={isWin}\n            hearts={hearts}\n            text={data.text}\n            solution={solution}\n          />\n        </Modal>\n\n        <Keyboard lettersState={guesses} onLetterClick={guessLetter} disabled={isComplete} />\n      </Layout.Content>\n    </Layout>\n  );\n}\n","import { useDailyGameState } from 'pages/Daily/hooks/useDailyGameState';\nimport { useDailyLocalToday, useMarkAsPlayed } from 'pages/Daily/hooks/useDailyLocalToday';\nimport { useShowResultModal } from 'pages/Daily/hooks/useShowResultModal';\n// Utils\nimport { removeDuplicates } from 'utils/helpers';\n// Internal\nimport { DEFAULT_LOCAL_TODAY } from './helpers';\nimport { SETTINGS } from './settings';\nimport type { ArteRuimLocalToday, DailyArteRuimEntry, GameState } from './types';\n\nexport function useArteRuimEngine(data: DailyArteRuimEntry, initialState: GameState) {\n  const { state, setState } = useDailyGameState<GameState>(initialState);\n\n  const { localToday, updateLocalStorage } = useDailyLocalToday<ArteRuimLocalToday>({\n    key: SETTINGS.KEY,\n    gameId: data.id,\n    defaultValue: DEFAULT_LOCAL_TODAY,\n  });\n\n  // ACTIONS\n  const guessLetter = (letter: string) => {\n    // Ignore previously guessed letters\n    if (state.guesses[letter]) {\n      return;\n    }\n\n    const isCorrect = state.solution[letter] !== undefined;\n\n    updateLocalStorage({\n      letters: removeDuplicates([...(localToday?.letters ?? []), letter]),\n    });\n\n    const solution = { ...state.solution };\n    if (isCorrect) {\n      solution[letter] = true;\n    }\n\n    const win = Object.values(solution)\n      .filter((value) => value !== undefined)\n      .every(Boolean);\n\n    setState((prev) => ({\n      ...prev,\n      guesses: {\n        ...prev.guesses,\n        [letter]: {\n          letter: letter,\n          state: isCorrect ? 'correct' : 'incorrect',\n          disabled: true,\n        },\n      },\n      solution,\n      hearts: isCorrect ? prev.hearts : prev.hearts - 1,\n      win,\n    }));\n  };\n\n  // CONDITIONS\n  const isWin = state.win;\n  const isLose = state.hearts <= 0;\n  const isComplete = isWin || isLose;\n\n  useMarkAsPlayed({\n    key: SETTINGS.KEY,\n    isComplete,\n  });\n\n  // RESULTS MODAL\n  const { showResultModal, setShowResultModal } = useShowResultModal(isWin || isLose || isComplete);\n\n  return {\n    hearts: state.hearts,\n    guesses: state.guesses,\n    solution: state.solution,\n    showResultModal,\n    setShowResultModal,\n    isWin,\n    isLose,\n    isComplete,\n    guessLetter,\n  };\n}\n","import { DailyError } from 'pages/Daily/components/DailyError';\nimport { DailyLoading } from 'pages/Daily/components/DailyLoading';\n// Hooks\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\n// Internal\nimport { DailyArteRuim } from './components/DailyArteRuim';\nimport { useDailyChallenge } from '../../hooks/useDailyChallenge';\n// Sass\nimport './utils/styles.scss';\n\nexport function DailyArteRuimGame() {\n  const { currentUser } = useCurrentUserContext();\n\n  // Load challenge\n  const challengeQuery = useDailyChallenge();\n\n  if (challengeQuery.isLoading) {\n    return <DailyLoading />;\n  }\n\n  const dailyData = challengeQuery?.data?.['arte-ruim'];\n\n  if (challengeQuery.isError || !dailyData) {\n    return <DailyError />;\n  }\n\n  return <DailyArteRuim data={dailyData} currentUser={currentUser} />;\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Space, type SpaceProps } from 'antd';\n// Components\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\n\nexport function Region({ className, align, direction, children, ...props }: SpaceProps) {\n  return (\n    <SpaceContainer direction={direction ?? 'vertical'} align={align ?? 'center'} {...props}>\n      {children}\n    </SpaceContainer>\n  );\n}\n\nexport function TextRegion({ className, align, children, ...props }: SpaceProps) {\n  return (\n    <Space className={clsx('text-region', className)} align={align ?? 'center'} {...props}>\n      {children}\n    </Space>\n  );\n}\n","import { loadLocalToday } from 'pages/Daily/utils';\n// Utils\nimport { SEPARATOR } from 'utils/constants';\nimport { deepCopy } from 'utils/helpers';\n// Internal\nimport { PHASES, SETTINGS } from './settings';\nimport type { ControleDeEstoqueLocalToday, DailyControleDeEstoqueEntry, GameState } from './types';\n\nexport const DEFAULT_LOCAL_TODAY: ControleDeEstoqueLocalToday = {\n  id: '',\n  number: 0,\n  warehouse: [],\n  guesses: [],\n  extraAttempts: 0,\n};\n\nexport const getInitialState = (data: DailyControleDeEstoqueEntry, removeHeart?: boolean): GameState => {\n  const localToday = loadLocalToday({\n    key: SETTINGS.KEY,\n    gameId: data.id,\n    defaultValue: deepCopy(DEFAULT_LOCAL_TODAY),\n  });\n\n  const state: GameState = {\n    hearts: SETTINGS.HEARTS,\n    phase: PHASES.STOCKING,\n    warehouse: Array(data.goods.length).fill(null),\n    fulfillments: [],\n    lastPlacedGoodId: null,\n    latestAttempt: null,\n    win: false,\n    guesses: [],\n    evaluations: [],\n    activeOrder: null,\n    extraAttempts: 0,\n  };\n\n  if (localToday.warehouse.length || localToday.extraAttempts) {\n    // Update phase\n    const warehouse =\n      localToday.warehouse.length > 0 ? localToday.warehouse : Array(data.goods.length).fill(null);\n    const guesses = localToday.warehouse.length > 0 ? (localToday.guesses ?? []) : [];\n\n    // Activate the last order attempt\n    const fulfillments = guesses.length > 0 ? parseGuessString(guesses[guesses.length - 1]) : [];\n    // Determine win\n    const attempts = validateAttempts(warehouse, fulfillments);\n    const extraAttempts = localToday.extraAttempts ?? 0;\n    const win = attempts.length > 0 && attempts.every(Boolean);\n\n    state.phase = warehouse.every(Boolean) ? PHASES.FULFILLING : PHASES.STOCKING;\n    state.warehouse = warehouse;\n    state.guesses = guesses;\n    state.evaluations = guesses.map((g) => validateAttempts(warehouse, parseGuessString(g)));\n    state.hearts = SETTINGS.HEARTS - guesses.length - extraAttempts - (removeHeart ? 1 : 0);\n    state.extraAttempts = extraAttempts;\n    state.fulfillments = fulfillments;\n    state.win = win;\n  }\n\n  return state;\n};\n\n/**\n * Validates the attempts made to fulfill orders in the warehouse.\n * @param warehouse - The current state of the warehouse.\n * @param fulfillments - The list of order fulfillments.\n * @returns An array of boolean values indicating whether each fulfillment attempt was successful or not.\n */\nexport const validateAttempts = (\n  warehouse: GameState['warehouse'],\n  fulfillments: GameState['fulfillments'],\n) => {\n  return fulfillments.reduce((acc: boolean[], fulfillment) => {\n    // If it's out of stock\n    if (fulfillment.shelfIndex === -1) {\n      const evaluation = !warehouse.some((good) => good === fulfillment.order);\n      acc.push(evaluation);\n      return acc;\n    }\n\n    // Any other order, should be placed correctly\n    const evaluation = fulfillment.order === warehouse[fulfillment.shelfIndex];\n    acc.push(evaluation);\n    return acc;\n  }, []);\n};\n\n/**\n * Returns a string representation of the guesses made in the game.\n * @param fulfillments - The fulfillments array containing the game state.\n * @returns A string representing the guesses made in the game.\n */\nexport const getGuessString = (fulfillments: GameState['fulfillments']) => {\n  return fulfillments.map((f) => `${f.order}${SEPARATOR}${f.shelfIndex}`).join(',');\n};\n\n/**\n * Parses a guess string into an array of objects containing order and shelf index.\n * @param guessString - The guess string to be parsed.\n * @returns An array of objects containing order and shelf index.\n */\nconst parseGuessString = (guessString: string) => {\n  return guessString.split(',').map((g) => {\n    const [order, shelfIndex] = g.split(SEPARATOR);\n    return { order, shelfIndex: Number(shelfIndex) };\n  });\n};\n","import { useDailyGameState } from 'pages/Daily/hooks/useDailyGameState';\nimport { useDailyLocalToday, useMarkAsPlayed } from 'pages/Daily/hooks/useDailyLocalToday';\nimport { useShowResultModal } from 'pages/Daily/hooks/useShowResultModal';\n// Ant Design Resources\nimport { App } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { deepCopy } from 'utils/helpers';\n// Internal\nimport { DEFAULT_LOCAL_TODAY, getGuessString, getInitialState, validateAttempts } from './helpers';\nimport { PHASES, SETTINGS } from './settings';\nimport type { ControleDeEstoqueLocalToday, DailyControleDeEstoqueEntry, GameState } from './types';\n\nexport function useControleDeEstoqueEngine(data: DailyControleDeEstoqueEntry, initialState: GameState) {\n  const { message } = App.useApp();\n  const { translate } = useLanguage();\n  const { state, setState, updateState } = useDailyGameState<GameState>(initialState);\n\n  const currentGood: string | undefined = data.goods[state.warehouse.filter(Boolean).length];\n\n  const { updateLocalStorage } = useDailyLocalToday<ControleDeEstoqueLocalToday>({\n    key: SETTINGS.KEY,\n    gameId: data.id,\n    defaultValue: DEFAULT_LOCAL_TODAY,\n  });\n\n  /**\n   * Places a good in the warehouse\n   */\n  const onPlaceGood = (shelfIndex: number) => {\n    if (shelfIndex >= 0 && currentGood) {\n      setState((prev) => {\n        const copy = deepCopy(prev);\n\n        copy.warehouse[shelfIndex] = currentGood;\n        copy.lastPlacedGoodId = currentGood;\n\n        if (copy.warehouse.every(Boolean)) {\n          copy.phase = PHASES.FULFILLING;\n\n          updateLocalStorage({ warehouse: copy.warehouse as string[] });\n        }\n\n        return copy;\n      });\n    }\n  };\n\n  /**\n   * Selects an order to fulfill\n   */\n  const onSelectOrder = (order: string) => {\n    updateState({ activeOrder: order });\n  };\n\n  /**\n   * Fulfills an order\n   * (assigns an order to a shelf)\n   */\n  const onFulfill = (shelfIndex: number) => {\n    setState((prev) => {\n      const copy = deepCopy(prev);\n      if (state.activeOrder) {\n        copy.fulfillments.push({\n          order: state.activeOrder,\n          shelfIndex: shelfIndex,\n        });\n        copy.activeOrder = null;\n      }\n      return copy;\n    });\n  };\n\n  /**\n   * Takes back an order from a shelf\n   */\n  const onTakeBack = (orderId: string) => {\n    setState((prev) => {\n      const copy = deepCopy(prev);\n      copy.fulfillments = copy.fulfillments.filter((fulfillment) => fulfillment.order !== orderId);\n      copy.activeOrder = orderId;\n      return copy;\n    });\n  };\n\n  /**\n   * Attempt to deliver the orders\n   * The order placements must match where the products are in the warehouse\n   */\n  const onSubmit = () => {\n    const newGuessString = getGuessString(state.fulfillments);\n\n    if (state.guesses.includes(newGuessString)) {\n      message.warning({\n        content: translate(\n          'Você já tentou essa combinação. Tente outra!',\n          'You already tried this combination. Try another one!',\n        ),\n        duration: 5,\n      });\n\n      return updateState({\n        latestAttempt: Date.now(),\n      });\n    }\n\n    updateLocalStorage({\n      guesses: [...state.guesses, newGuessString],\n      warehouse: state.warehouse as string[],\n    });\n\n    const attemptResult = validateAttempts(state.warehouse, state.fulfillments);\n\n    const isAllCorrect = attemptResult.every(Boolean);\n\n    if (!isAllCorrect) {\n      message.warning({\n        content: translate(\n          'Um ou mais produtos estão fora de lugar. Tente novamente!',\n          'One or more products are out of place. Try again!',\n        ),\n        duration: 3,\n      });\n    }\n\n    setState((prev) => {\n      const copy = deepCopy(prev);\n      copy.latestAttempt = Date.now();\n      copy.evaluations.push(attemptResult);\n      copy.guesses.push(newGuessString);\n\n      if (isAllCorrect) {\n        copy.win = true;\n      } else {\n        copy.hearts -= 1;\n      }\n\n      return copy;\n    });\n  };\n\n  // CONDITIONS\n  const isWin = state.win;\n  const isLose = state.hearts <= 0;\n  const isComplete = isWin || isLose;\n\n  useMarkAsPlayed({\n    key: SETTINGS.KEY,\n    isComplete,\n  });\n\n  // RESULTS MODAL\n  const { showResultModal, setShowResultModal } = useShowResultModal(isComplete);\n\n  const reset = () => {\n    updateLocalStorage({\n      warehouse: Array(data.goods.length).fill(null),\n      guesses: [],\n      extraAttempts: state.extraAttempts + 1,\n    });\n    const resetState = getInitialState(data, true);\n    setState({\n      ...resetState,\n      extraAttempts: state.extraAttempts + 1,\n      hearts: SETTINGS.HEARTS - state.extraAttempts - 1,\n    });\n  };\n\n  return {\n    hearts: state.hearts,\n    phase: state.phase,\n    warehouse: state.warehouse,\n    fulfillments: state.fulfillments,\n    lastPlacedGoodId: state.lastPlacedGoodId,\n    guesses: state.guesses,\n    evaluations: state.evaluations,\n    latestAttempt: state.latestAttempt,\n    orders: data.orders,\n    currentGood,\n    activeOrder: state.activeOrder,\n    showResultModal,\n    setShowResultModal,\n    isWin,\n    isLose,\n    isComplete,\n    onPlaceGood,\n    onSelectOrder,\n    onFulfill,\n    onTakeBack,\n    onSubmit,\n    reset,\n  };\n}\n","import clsx from 'clsx';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Icons\nimport { ShippingBoxIcon } from 'icons/ShippingBoxIcon';\n// Components\nimport { TransparentButton } from 'components/buttons';\nimport { WarehouseGoodCard } from 'components/cards/WarehouseGoodCard';\n// Internal\nimport type { useControleDeEstoqueEngine } from '../utils/useControleDeEstoqueEngine';\n\ntype FulfillmentBoardProps = {\n  activeOrder: ReturnType<typeof useControleDeEstoqueEngine>['activeOrder'];\n  warehouse: ReturnType<typeof useControleDeEstoqueEngine>['warehouse'];\n  onFulfill: ReturnType<typeof useControleDeEstoqueEngine>['onFulfill'];\n  onTakeBack: ReturnType<typeof useControleDeEstoqueEngine>['onTakeBack'];\n  fulfillments: ReturnType<typeof useControleDeEstoqueEngine>['fulfillments'];\n  width: number;\n  reveal?: boolean;\n};\n\nexport function FulfillmentBoard({\n  activeOrder,\n  warehouse,\n  fulfillments,\n  onFulfill,\n  onTakeBack,\n  width,\n  reveal = false,\n}: FulfillmentBoardProps) {\n  const size = { width, height: width };\n\n  return (\n    <div className=\"shelves-board\">\n      {warehouse.map((goodId, index) => {\n        if (!goodId) {\n          return <div key={index}>X</div>;\n        }\n\n        const isFulfilled = fulfillments.find((f) => f.shelfIndex === index);\n\n        if (isFulfilled) {\n          return (\n            <div\n              key={index}\n              className={clsx('shelves-board__shelf', 'shelves-board__shelf-fulfilled')}\n              style={size}\n            >\n              {reveal ? (\n                <WarehouseGoodCard\n                  id={isFulfilled.order}\n                  padding={1}\n                  width={width - 24}\n                  className=\"shelves-board__placed-order\"\n                />\n              ) : (\n                <TransparentButton onClick={() => onTakeBack(isFulfilled.order)} hoverType=\"none\">\n                  <WarehouseGoodCard\n                    id={isFulfilled.order}\n                    padding={1}\n                    width={width - 24}\n                    className=\"shelves-board__placed-order\"\n                  />\n                </TransparentButton>\n              )}\n              {reveal ? (\n                <WarehouseGoodCard id={goodId} padding={1} width={width - 12} />\n              ) : (\n                <ShippingBoxIcon width={width - 12} />\n              )}\n            </div>\n          );\n        }\n\n        return (\n          <div key={index} className={clsx('shelves-board__shelf')} style={size}>\n            {reveal ? (\n              <WarehouseGoodCard id={goodId} padding={1} width={width - 12} />\n            ) : (\n              <TransparentButton onClick={activeOrder ? () => onFulfill(index) : undefined}>\n                <ShippingBoxIcon width={width - 12} className={getAnimationClass('bounce')} />\n              </TransparentButton>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Icons\nimport { CheckMarkIcon } from 'icons/CheckMarkIcon';\nimport { LocationIcon } from 'icons/LocationIcon';\nimport { OnlineOrderIcon } from 'icons/OnlineOrderIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { TransparentButton } from 'components/buttons';\nimport { WarehouseGoodCard } from 'components/cards/WarehouseGoodCard';\n// Internal\nimport type { useControleDeEstoqueEngine } from '../utils/useControleDeEstoqueEngine';\n\ntype OrdersProps = {\n  fulfillments: ReturnType<typeof useControleDeEstoqueEngine>['fulfillments'];\n  orders: ReturnType<typeof useControleDeEstoqueEngine>['orders'];\n  activeOrder: ReturnType<typeof useControleDeEstoqueEngine>['activeOrder'];\n  onSelectOrder: ReturnType<typeof useControleDeEstoqueEngine>['onSelectOrder'];\n  shelfWidth: number;\n};\n\nexport function Orders({ fulfillments, orders, onSelectOrder, shelfWidth, activeOrder }: OrdersProps) {\n  return (\n    <div className=\"fulfillment-center\">\n      <OnlineOrderIcon\n        width={shelfWidth / 1.5}\n        className={getAnimationClass('headShake', { infinite: true })}\n      />\n      <div className={clsx('fulfillment-center__orders', getAnimationClass('lightSpeedInLeft'))}>\n        {orders.map((order) => {\n          const isFulfilled = fulfillments.find((f) => f.order === order);\n\n          return (\n            <TransparentButton\n              key={order}\n              onClick={() => onSelectOrder(order)}\n              disabled={fulfillments.length === 4 || !!isFulfilled}\n            >\n              {!!isFulfilled && <IconAvatar icon={<CheckMarkIcon />} />}\n              {activeOrder === order && (\n                <IconAvatar\n                  icon={<LocationIcon />}\n                  className={getAnimationClass('bounce', { infinite: true })}\n                />\n              )}\n              <WarehouseGoodCard\n                key={order}\n                id={order}\n                width={shelfWidth * 0.85}\n                className={clsx(\n                  'order',\n                  activeOrder === order && 'order--active',\n                  !!isFulfilled && 'order--fulfilled',\n                )}\n              />\n            </TransparentButton>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import { Region, TextRegion } from 'pages/Daily/components/Region';\n// Ant Design Resources\nimport { BarChartOutlined, WarningFilled } from '@ant-design/icons';\nimport { Button } from 'antd';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n// Internal\nimport { PHASES } from '../utils/settings';\nimport type { useControleDeEstoqueEngine } from '../utils/useControleDeEstoqueEngine';\nimport { FulfillmentBoard } from './FulfillmentBoard';\nimport { Orders } from './Orders';\n\ntype FulfillingPhaseProps = {\n  phase: ReturnType<typeof useControleDeEstoqueEngine>['phase'];\n  orders: ReturnType<typeof useControleDeEstoqueEngine>['orders'];\n  warehouse: ReturnType<typeof useControleDeEstoqueEngine>['warehouse'];\n  onSelectOrder: ReturnType<typeof useControleDeEstoqueEngine>['onSelectOrder'];\n  onFulfill: ReturnType<typeof useControleDeEstoqueEngine>['onFulfill'];\n  onTakeBack: ReturnType<typeof useControleDeEstoqueEngine>['onTakeBack'];\n  onSubmit: ReturnType<typeof useControleDeEstoqueEngine>['onSubmit'];\n  activeOrder: ReturnType<typeof useControleDeEstoqueEngine>['activeOrder'];\n  fulfillments: ReturnType<typeof useControleDeEstoqueEngine>['fulfillments'];\n  setShowResultModal: ReturnType<typeof useControleDeEstoqueEngine>['setShowResultModal'];\n  isComplete: ReturnType<typeof useControleDeEstoqueEngine>['isComplete'];\n  shelfWidth: number;\n};\n\nexport function FulfillingPhase({\n  phase,\n  orders,\n  warehouse,\n  activeOrder,\n  fulfillments,\n  onSelectOrder,\n  onFulfill,\n  onTakeBack,\n  onSubmit,\n  shelfWidth,\n  isComplete,\n  setShowResultModal,\n}: FulfillingPhaseProps) {\n  const isFulfilling = phase === PHASES.FULFILLING && !isComplete;\n  const isDelivering = phase === PHASES.DELIVERING;\n\n  const board = (\n    <Region>\n      <FulfillmentBoard\n        activeOrder={activeOrder}\n        warehouse={warehouse}\n        onFulfill={onFulfill}\n        onTakeBack={onTakeBack}\n        width={shelfWidth}\n        fulfillments={fulfillments}\n        reveal={isComplete}\n      />\n    </Region>\n  );\n\n  if (isFulfilling) {\n    return (\n      <>\n        {board}\n\n        <TextRegion>\n          <Instruction contained noMargin>\n            <Translate\n              pt={\n                <>\n                  Recebemos 5 pedidos e 4 deles estão em estoque!\n                  <br />\n                  Selecione os pedidos um a um e coloque-nos na prateleira correta.\n                  <br />\n                  <strong>Pedidos Posicionados ({fulfillments.length}/4).</strong>\n                </>\n              }\n              en={\n                <>\n                  We have received 5 orders and 4 of them are in stock!\n                  <br />\n                  Select the orders one by one and place them on the correct shelf.\n                  <br />\n                  <strong>Orders Placed ({fulfillments.length}/4).</strong>\n                </>\n              }\n            />\n          </Instruction>\n        </TextRegion>\n\n        <Orders\n          orders={orders}\n          activeOrder={activeOrder}\n          onSelectOrder={onSelectOrder}\n          shelfWidth={shelfWidth}\n          fulfillments={fulfillments}\n        />\n\n        {!isComplete && (\n          <TextRegion>\n            <Instruction contained noMargin>\n              <Translate\n                pt={<>Para desfazer um pedido, é só clicar nele na prateleira.</>}\n                en={<>To undo an order, just click on it on the shelf.</>}\n              />\n            </Instruction>\n          </TextRegion>\n        )}\n\n        {fulfillments.length === 4 && !isComplete && (\n          <>\n            <Region>\n              <Button size=\"large\" type=\"primary\" onClick={onSubmit}>\n                <Translate pt=\"Enviar pacotes\" en=\"Send packages\" />\n              </Button>\n            </Region>\n\n            <TextRegion>\n              <Instruction contained noMargin>\n                <Translate\n                  pt={\n                    <>\n                      Se tudo estiver nos confirmes, aperte o botão de enviar.\n                      <br />\n                      Você perde um coração se qualquer um deles estiver errado.\n                    </>\n                  }\n                  en={\n                    <>\n                      If everything is in order, press the delivery button.\n                      <br />\n                      You lose a heart if any of them are wrong\n                    </>\n                  }\n                />\n              </Instruction>\n            </TextRegion>\n          </>\n        )}\n      </>\n    );\n  }\n\n  if (isDelivering) {\n    const isMissingOutOfStock = !fulfillments.some((f) => f.shelfIndex === -1);\n\n    return (\n      <>\n        {board}\n\n        <TextRegion>\n          <Instruction contained noMargin>\n            <Translate pt=\"Tudo pronto, hora de entregar!\" en=\"All set, time to deliver!\" />\n          </Instruction>\n        </TextRegion>\n\n        <Region>\n          <Button size=\"large\" type=\"primary\" onClick={onSubmit}>\n            <Translate pt=\"Enviar pacotes\" en=\"Send packages\" />\n          </Button>\n        </Region>\n\n        <TextRegion>\n          <Instruction contained noMargin>\n            <Translate\n              pt={\n                <>\n                  <strong>Pedidos Assinalados</strong>\n                  {isMissingOutOfStock ? (\n                    <>\n                      <br />\n                      <span style={{ color: 'red' }}>\n                        <WarningFilled /> Você não colocou nenhum pedido na lata de lixo! Um dos produtos NÃO\n                        está na prateleira!!!\n                      </span>\n                    </>\n                  ) : (\n                    <></>\n                  )}\n                  <br />\n                  Se tudo estiver nos confirmes, aperte o botão de enviar.\n                  <br />\n                  Você perde um coração se qualquer um deles estiver errado.\n                </>\n              }\n              en={\n                <>\n                  <strong>All Orders have been assigned</strong>\n                  <br />\n                  If everything is in order, press the delivery button.\n                  <br />\n                  You lose a heart if any of them are wrong\n                </>\n              }\n            />\n          </Instruction>\n        </TextRegion>\n      </>\n    );\n  }\n\n  return (\n    <>\n      {board}\n\n      <TextRegion>\n        <Instruction contained noMargin>\n          <Translate pt=\"Você completou todos os pedidos!\" en=\"You have completed all orders!\" />\n        </Instruction>\n      </TextRegion>\n\n      <Region>\n        <Button onClick={() => setShowResultModal(true)} type=\"primary\" icon={<BarChartOutlined />}>\n          <Translate pt=\"Ver Resultado\" en=\"Show Results\" />\n        </Button>\n      </Region>\n    </>\n  );\n}\n","// Components\nimport { WarehouseGoodCard } from 'components/cards/WarehouseGoodCard';\n\ntype PreloadItemsProps = {\n  goods: string[];\n};\n\nexport function PreloadItems({ goods }: PreloadItemsProps) {\n  return (\n    <div style={{ display: 'none' }}>\n      {goods.map((itemId) => (\n        <WarehouseGoodCard key={itemId} id={itemId} className=\"transparent\" width={1} />\n      ))}\n    </div>\n  );\n}\n","import { NextGameSuggestion } from 'pages/Daily/components/NextGameSuggestion';\nimport { getSourceName, writeHeartResultString } from 'pages/Daily/utils';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Icons\nimport { BoxXIcon } from 'icons/BoxXIcon';\nimport { TrophyIcon } from 'icons/TrophyIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\n// Internal\nimport { SETTINGS } from '../utils/settings';\nimport { CopyToClipboardResult } from '../../../components/CopyToClipboardResult';\n\ntype ResultsModalContentProps = {\n  challenge: number;\n  title: string;\n  isWin: boolean;\n  hearts: number;\n  evaluations: boolean[][];\n};\n\nexport function ResultsModalContent({\n  challenge,\n  title,\n  isWin,\n  hearts,\n  evaluations,\n}: ResultsModalContentProps) {\n  const { language, dualTranslate } = useLanguage();\n\n  const result = writeResult({\n    game: dualTranslate(SETTINGS.NAME),\n    challenge,\n    remainingHearts: hearts,\n    language,\n    evaluations,\n  });\n\n  return (\n    <SpaceContainer vertical>\n      <Typography.Title level={2} className=\"center\">\n        {isWin ? (\n          <>\n            <IconAvatar icon={<TrophyIcon />} /> <Translate pt=\"Parabéns!\" en=\"Congratulations!\" />\n          </>\n        ) : (\n          <>\n            <IconAvatar icon={<BoxXIcon />} /> <Translate pt=\"Que pena!\" en=\"Too bad!\" />\n          </>\n        )}\n      </Typography.Title>\n\n      <Typography.Text strong className=\"center\">\n        {title}\n      </Typography.Text>\n\n      <Typography.Paragraph className=\"center\">\n        {isWin ? (\n          <Translate pt=\"Você entregou todos os pedidos!\" en=\"You delivered all orders!\" />\n        ) : (\n          <Translate\n            pt=\"Você não conseguiu entregar todos os pedidos.\"\n            en=\"You couldn't deliver all orders.\"\n          />\n        )}\n      </Typography.Paragraph>\n\n      <CopyToClipboardResult result={result} rows={6} />\n\n      <NextGameSuggestion />\n    </SpaceContainer>\n  );\n}\n\nfunction writeResult({\n  game,\n  challenge,\n  remainingHearts,\n  language,\n  evaluations,\n}: {\n  game: string;\n  challenge: number;\n  remainingHearts: number;\n  language: Language;\n  evaluations: boolean[][];\n}) {\n  const cleanUpAttempts = evaluations.map((row) =>\n    row.map((value) => {\n      return value ? '📫' : '🤬';\n    }),\n  );\n\n  return [\n    `${SETTINGS.ICON} TD ${game} #${challenge}`,\n    `${writeHeartResultString(remainingHearts, SETTINGS.HEARTS, ' ')}`,\n    cleanUpAttempts\n      .map((row) => row.join(' ').trim())\n      .filter(Boolean)\n      .join('\\n'),\n    `https://www.kavispires.com/tardedivertida/#/${getSourceName(language)}`,\n  ].join('\\n');\n}\n","// Ant Design Resources\nimport { Alert } from 'antd';\n// Components\nimport { Translate } from 'components/language';\n\nexport function BetaBanner() {\n  return (\n    <Alert\n      message={\n        <Translate\n          pt=\"Jogo em fase de testes. Reporte qualquer problema.\"\n          en=\"Game in beta mode. Report any bugs!\"\n        />\n      }\n      type=\"warning\"\n      showIcon\n      banner\n    />\n  );\n}\n","import { BetaBanner } from 'pages/Daily/components/BetaBanner';\n// Ant Design Resources\nimport { HeartFilled } from '@ant-design/icons';\nimport { Typography } from 'antd';\n// Components\nimport { Translate } from 'components/language';\n// Internal\nimport { SETTINGS } from '../utils/settings';\n\nexport function Rules() {\n  return (\n    <Typography>\n      <BetaBanner />\n      <Translate\n        pt={\n          <>\n            <li>Você é o funcionário uma empresa de compras online e está encarregado do estoque.</li>\n            <li>\n              Coloque os 16 produtos na prateleira do jeito que você preferir. O ideal é que você siga uma\n              lógica que depois você saiba onde eles estão.\n            </li>\n            <li>A pegadinha é que você não vê mais o produto depois de posicioná-lo.</li>\n            <li>\n              Após todos os produtos estarem organizados, você receberá 5 pedidos. Desses 5, apenas 4 estão em\n              estoque (na prateleira).\n            </li>\n            <li>Selecione os produtos em estoque deixando de fora o produto fora de estoque.</li>\n            <li>\n              Tente completar todos os pedidos sem errar. A cada erro, você perde um <HeartFilled />.\n            </li>\n            <li>\n              Você tem {SETTINGS.HEARTS} <HeartFilled /> chances. Boa sorte!\n            </li>\n          </>\n        }\n        en={\n          <>\n            <li>You are an employee at an online shopping company and are in charge of the stock.</li>\n            <li>\n              Place the 16 products on the shelf as you prefer. It is ideal that you follow a logic that you\n              can remember where they are later.\n            </li>\n            <li>The catch is that you won't see the product anymore after you position it.</li>\n            <li>\n              After all products are organized, you will receive 5 orders. Of these 5, only 4 are in stock (on\n              the shelf).\n            </li>\n            <li>Select the products in stock, leaving out the out-of-stock product.</li>\n            <li>\n              Try to complete all orders without making mistakes. For each mistake, you lose a <HeartFilled />\n              .\n            </li>\n            <li>\n              You have {SETTINGS.HEARTS} <HeartFilled /> chances. Good luck!\n            </li>\n          </>\n        }\n      />\n    </Typography>\n  );\n}\n","import clsx from 'clsx';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Icons\nimport { ShippingBoxIcon } from 'icons/ShippingBoxIcon';\n// Components\nimport { WarehouseGoodCard } from 'components/cards/WarehouseGoodCard';\n// Internal\nimport type { useControleDeEstoqueEngine } from '../utils/useControleDeEstoqueEngine';\n\ntype StockingBoardProps = {\n  warehouse: ReturnType<typeof useControleDeEstoqueEngine>['warehouse'];\n  onPlaceGood: ReturnType<typeof useControleDeEstoqueEngine>['onPlaceGood'];\n  lastPlacedGoodId: ReturnType<typeof useControleDeEstoqueEngine>['lastPlacedGoodId'];\n  width: number;\n};\n\nexport function StockingBoard({ warehouse, onPlaceGood, width, lastPlacedGoodId }: StockingBoardProps) {\n  const size = { width, height: width };\n\n  return (\n    <div className=\"shelves-board\">\n      {warehouse.map((goodId, index) => {\n        if (!goodId) {\n          return (\n            <div key={index} className={clsx('shelves-board__empty-shelf')} style={size}>\n              <button\n                type=\"button\"\n                className=\"shelves-board__empty-shelf-button\"\n                onClick={() => onPlaceGood(index)}\n              >\n                ?\n              </button>\n            </div>\n          );\n        }\n\n        if (goodId !== lastPlacedGoodId) {\n          return (\n            <div\n              key={index}\n              className={clsx('shelves-board__shelf', getAnimationClass('flipInY'))}\n              style={size}\n            >\n              <ShippingBoxIcon width={width - 12} />\n            </div>\n          );\n        }\n\n        return (\n          <div key={index} className={clsx('shelves-board__shelf')} style={size}>\n            <WarehouseGoodCard\n              id={goodId}\n              padding={1}\n              width={width - 12}\n              className={getAnimationClass('bounce')}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import { Region, TextRegion } from 'pages/Daily/components/Region';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { WarehouseGoodCard } from 'components/cards/WarehouseGoodCard';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n// Internal\nimport type { useControleDeEstoqueEngine } from '../utils/useControleDeEstoqueEngine';\nimport { StockingBoard } from './StockingBoard';\n\ntype StockingPhaseProps = {\n  warehouse: ReturnType<typeof useControleDeEstoqueEngine>['warehouse'];\n  onPlaceGood: ReturnType<typeof useControleDeEstoqueEngine>['onPlaceGood'];\n  currentGood: ReturnType<typeof useControleDeEstoqueEngine>['currentGood'];\n  lastPlacedGoodId: ReturnType<typeof useControleDeEstoqueEngine>['lastPlacedGoodId'];\n  shelfWidth: number;\n};\n\nexport function StockingPhase({\n  warehouse,\n  currentGood,\n  lastPlacedGoodId,\n  onPlaceGood,\n  shelfWidth,\n}: StockingPhaseProps) {\n  return (\n    <>\n      <Region>\n        <StockingBoard\n          warehouse={warehouse}\n          onPlaceGood={onPlaceGood}\n          width={shelfWidth}\n          lastPlacedGoodId={lastPlacedGoodId}\n        />\n      </Region>\n\n      <TextRegion>\n        <Instruction contained noMargin>\n          <Translate\n            pt=\"Coloque o produto em uma prateleira vazia:\"\n            en=\"Place the product on an empty shelf:\"\n          />\n        </Instruction>\n      </TextRegion>\n\n      <Region>\n        {currentGood && (\n          <WarehouseGoodCard\n            id={currentGood}\n            width={shelfWidth}\n            key={currentGood}\n            className={getAnimationClass('lightSpeedInLeft')}\n          />\n        )}\n      </Region>\n\n      <TextRegion>\n        <Instruction contained noMargin>\n          <Typography.Text>\n            <Translate\n              pt=\"\n                Um bom funcionário sempre sabe onde está cada produto. Lembre-se de usar uma certa lógica para memorizar a posição de cada produto.\"\n              en=\"A good employee always knows where each product is. Remember to use a certain logic to memorize the position of each product.\"\n            />\n          </Typography.Text>\n        </Instruction>\n      </TextRegion>\n    </>\n  );\n}\n","import { Region, TextRegion } from 'pages/Daily/components/Region';\nimport { useMemo, useState } from 'react';\nimport { useMeasure } from 'react-use';\n// Ant Design Resources\nimport { Button, Divider, Layout, Modal, Popconfirm, Tooltip, Typography } from 'antd';\n// Types\nimport type { Me } from 'types/user';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Icons\nimport { DailyWarehouseGameIcon } from 'icons/DailyWarehouseGameIcon';\n// Components\nimport { DualTranslate, Translate } from 'components/language';\n// Internal\nimport { getInitialState } from '../utils/helpers';\nimport { PHASES, SETTINGS } from '../utils/settings';\nimport type { DailyControleDeEstoqueEntry } from '../utils/types';\nimport { useControleDeEstoqueEngine } from '../utils/useControleDeEstoqueEngine';\nimport { Header } from '../../../components/Header';\nimport { Menu } from '../../../components/Menu';\nimport { FulfillingPhase } from './FulfillingPhase';\nimport { PreloadItems } from './PreloadItems';\nimport { ResultsModalContent } from './ResultsModalContent';\nimport { Rules } from './Rules';\nimport { StockingPhase } from './StockingPhase';\n\ntype DailyControleDeEstoqueProps = {\n  data: DailyControleDeEstoqueEntry;\n  currentUser: Me;\n};\n\nexport function DailyControleDeEstoque({ data }: DailyControleDeEstoqueProps) {\n  const [initialState] = useState(getInitialState(data));\n\n  const {\n    hearts,\n    warehouse,\n    currentGood,\n    activeOrder,\n    lastPlacedGoodId,\n    onPlaceGood,\n    onSelectOrder,\n    onFulfill,\n    onTakeBack,\n    onSubmit,\n    fulfillments,\n    showResultModal,\n    setShowResultModal,\n    isWin,\n    isComplete,\n    evaluations,\n    reset,\n    latestAttempt,\n    phase,\n    orders,\n  } = useControleDeEstoqueEngine(data, initialState);\n  const [contentRef, contentMeasure] = useMeasure<HTMLDivElement>();\n\n  const shouldShakeScreen = latestAttempt && !isComplete;\n\n  const shelfWidth = useMemo(() => {\n    const totalWidth = contentMeasure.width / 5 - 16;\n    return Math.min(Math.max(totalWidth, 48), 96);\n  }, [contentMeasure.width]);\n\n  return (\n    <Layout className=\"app\">\n      <Header icon={<DailyWarehouseGameIcon />} localStorageKey={SETTINGS.KEY}>\n        <DualTranslate>{SETTINGS.NAME}</DualTranslate> #{data.number}\n      </Header>\n      <Layout.Content ref={contentRef}>\n        <Menu hearts={hearts} total={SETTINGS.HEARTS} openRules={true} rules={<Rules />} />\n\n        <PreloadItems goods={data.goods} />\n\n        <Region>\n          <Typography.Text strong className=\"controle-de-estoque-title\">\n            {data.title}\n          </Typography.Text>\n        </Region>\n\n        {phase === PHASES.STOCKING && currentGood && (\n          <StockingPhase\n            warehouse={warehouse}\n            currentGood={currentGood}\n            lastPlacedGoodId={lastPlacedGoodId}\n            onPlaceGood={onPlaceGood}\n            shelfWidth={shelfWidth}\n          />\n        )}\n\n        <div key={latestAttempt} className={shouldShakeScreen ? getAnimationClass('shakeX') : ''}>\n          {phase !== PHASES.STOCKING && (\n            <FulfillingPhase\n              phase={phase}\n              warehouse={warehouse}\n              orders={orders}\n              activeOrder={activeOrder}\n              fulfillments={fulfillments}\n              shelfWidth={shelfWidth}\n              onSelectOrder={onSelectOrder}\n              onFulfill={onFulfill}\n              onTakeBack={onTakeBack}\n              onSubmit={onSubmit}\n              isComplete={isComplete}\n              setShowResultModal={setShowResultModal}\n            />\n          )}\n        </div>\n\n        <TextRegion direction=\"horizontal\" split={<Divider type=\"vertical\" />}>\n          {evaluations.map((attempt, index) => (\n            <Tooltip key={`${attempt}-${index}`} title={<Translate pt=\"Acertos\" en=\"Correct\" />}>\n              <span>{attempt.filter(Boolean).length} 📫</span>\n            </Tooltip>\n          ))}\n        </TextRegion>\n\n        <Modal\n          title={<Translate pt=\"Resultado\" en=\"Results\" />}\n          open={showResultModal}\n          onCancel={() => setShowResultModal(false)}\n          footer={null}\n        >\n          <ResultsModalContent\n            challenge={data?.number}\n            isWin={isWin}\n            hearts={hearts}\n            evaluations={evaluations}\n            title={data.title}\n          />\n        </Modal>\n      </Layout.Content>\n\n      <Region>\n        <Popconfirm\n          title={<Translate pt=\"Deseja mesmo recomeçar o jogo?\" en=\"Do you really want to reset the game?\" />}\n          description={<Translate pt=\"Você perderá um coração.\" en=\"You will lose a heart.\" />}\n          onConfirm={reset}\n        >\n          <Button type=\"primary\" danger disabled={hearts <= 0}>\n            <Translate pt=\"Recomeçar Jogo\" en=\"Reset Game\" />\n          </Button>\n        </Popconfirm>\n      </Region>\n    </Layout>\n  );\n}\n","import { DailyError } from 'pages/Daily/components/DailyError';\nimport { DailyLoading } from 'pages/Daily/components/DailyLoading';\nimport { useDailyChallenge } from 'pages/Daily/hooks/useDailyChallenge';\n// Hooks\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\n// Internal\nimport { DailyControleDeEstoque } from './components/DailyControleDeEstoque';\n// Sass\nimport './utils/styles.scss';\n\nexport function DailyControleDeEstoqueGame() {\n  const { currentUser } = useCurrentUserContext();\n\n  // Load challenge\n  const challengeQuery = useDailyChallenge();\n\n  if (challengeQuery.isLoading) {\n    return <DailyLoading />;\n  }\n  const dailyData = challengeQuery?.data?.['controle-de-estoque'];\n\n  if (challengeQuery.isError || !dailyData) {\n    return <DailyError />;\n  }\n\n  return <DailyControleDeEstoque data={dailyData} currentUser={currentUser} />;\n}\n","import { useMemo } from 'react';\n// Ant Design Resources\nimport { Input, Space, Typography } from 'antd';\n// Hooks\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\n// Internal\nimport { DailyChrome } from '../components/DailyChrome';\nimport { SETTINGS as AQUI_O } from '../games/AquiO/utils/settings';\nimport { SETTINGS as ARTE_RUIM } from '../games/ArteRuim/utils/settings';\nimport { SETTINGS as ARTISTA } from './Picaco/utils/settings';\nimport { SETTINGS as FILMACO } from '../games/Filmaco/utils/settings';\nimport { SETTINGS as PALAVREADO } from '../games/Palavreado/utils/settings';\nimport { SETTINGS as CONTROLE_DE_ESTOQUE } from '../games/ControleDeEstoque/utils/settings';\nimport { getToday } from '../utils';\n\nconst PRIORITY_LIST = [ARTE_RUIM, CONTROLE_DE_ESTOQUE, FILMACO, PALAVREADO, AQUI_O, ARTISTA];\n\nexport function DebugPage() {\n  const { isAdmin } = useCurrentUserContext();\n\n  if (!isAdmin) {\n    return <Typography.Text>Unauthorized</Typography.Text>;\n  }\n\n  return (\n    <DailyChrome>\n      <Space direction=\"vertical\" className=\"margin\">\n        <pre>Today: {getToday()}</pre>\n        {PRIORITY_LIST.map((game) => (\n          <Content key={game.KEY} localKey={game.KEY} />\n        ))}\n      </Space>\n    </DailyChrome>\n  );\n}\n\nfunction Content({ localKey }: { localKey: string }) {\n  const value = useMemo(\n    () => JSON.stringify(JSON.parse(localStorage.getItem(localKey) || '{}'), null, 2),\n    [localKey],\n  );\n  return (\n    <Space direction=\"vertical\">\n      <Typography.Paragraph className=\"center\" strong>\n        {localKey}\n      </Typography.Paragraph>\n\n      <Input.TextArea cols={10} rows={8} value={value} style={{ width: 'clamp(300px, 80vw, 960px)' }} />\n    </Space>\n  );\n}\n","import { loadLocalToday } from 'pages/Daily/utils';\nimport type { LettersDictionary } from 'pages/Daily/utils/types';\n// Utils\nimport { deepCopy, stringRemoveAccents } from 'utils/helpers';\n// Internal\nimport { SETTINGS } from './settings';\nimport type { DailyFilmacoEntry, FilmacoLocalToday, GameState } from './types';\n\nexport const DEFAULT_LOCAL_TODAY: FilmacoLocalToday = {\n  id: '',\n  letters: [],\n  number: 0,\n};\n\n/**\n * Retrieves the initial state for the game based on the provided data.\n * @param data - The DailyFilmacoEntry object containing the necessary data for the game.\n * @returns The initial GameState object.\n */\nexport const getInitialState = (data: DailyFilmacoEntry): GameState => {\n  const localToday = loadLocalToday({\n    key: SETTINGS.KEY,\n    gameId: data.id,\n    defaultValue: deepCopy(DEFAULT_LOCAL_TODAY),\n  });\n\n  const state: GameState = {\n    solution: getLettersInWord(data.title, true),\n    hearts: SETTINGS.HEARTS,\n    guesses: {},\n  };\n\n  if (localToday) {\n    let hearts = SETTINGS.HEARTS;\n    let solution = { ...state.solution };\n    const guesses = localToday.letters.reduce((acc: LettersDictionary, letter) => {\n      const isCorrect = state.solution[letter] !== undefined;\n      if (state.solution[letter] !== undefined) {\n        solution = { ...solution, [letter]: true };\n      }\n      acc[letter] = {\n        letter: letter,\n        state: isCorrect ? 'correct' : 'incorrect',\n        disabled: true,\n      };\n      hearts = isCorrect ? hearts : hearts - 1;\n      return acc;\n    }, {});\n\n    state.guesses = guesses;\n    state.hearts = hearts;\n    state.solution = solution;\n  }\n\n  return state;\n};\n\n/**\n * Returns an object with each letter in the word as a key and a boolean value indicating if the letter has been found.\n * @param text - The word to extract the letters from.\n * @returns An object with each letter in the word as a key and a boolean value indicating if the letter has been found.\n */\nexport function getLettersInWord(text: string, allowNumbers?: boolean): BooleanDictionary {\n  const cleanedUpText = stringRemoveAccents(text).toLowerCase();\n  const letters = cleanedUpText.split('');\n  const lettersInWord: BooleanDictionary = {};\n\n  letters.forEach((letter) => {\n    if (allowNumbers) {\n      if (letter.match(/[a-zA-Z0-9]/)) {\n        lettersInWord[letter] = false;\n      }\n    } else {\n      if (letter.match(/[a-zA-Z]/)) {\n        lettersInWord[letter] = false;\n      }\n    }\n  });\n  return lettersInWord;\n}\n\n/**\n * Removes diacritical marks from a given character and converts it to lowercase.\n *\n * @param char - The character to be cleaned up.\n * @returns The cleaned up character.\n */\nexport function cleanupLetter(char: string): string {\n  return stringRemoveAccents(char).toLowerCase();\n}\n\n/**\n * Checks if a character is a letter.\n *\n * @param char - The character to check.\n * @returns `true` if the character is a letter, `false` otherwise.\n */\nexport function isLetter(char: string, allowNumbers?: boolean): boolean {\n  if (allowNumbers) {\n    return cleanupLetter(char).match(/[a-zA-Z0-9]/) !== null;\n  }\n  return cleanupLetter(char).match(/[a-zA-Z]/) !== null;\n}\n","import type { LettersDictionary } from 'pages/Daily/utils/types';\nimport { useMemo } from 'react';\n// Ant Design Resources\nimport { Avatar, Space } from 'antd';\n// Icons\nimport { BoxBlankIcon } from 'icons/BoxBlankIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\n// Internal\nimport { cleanupLetter, isLetter } from '../utils/helpers';\n\ntype PromptProps = {\n  text: string;\n  guesses: LettersDictionary;\n};\n\nexport function Prompt({ text, guesses }: PromptProps) {\n  const prompt = useMemo(() => text.split(' ').map((word) => word.split('')), [text]);\n  return (\n    <Space className=\"prompt\" wrap align=\"center\">\n      {prompt.map((word, i, p) => {\n        return (\n          <Space key={`word-${i}`} className=\"prompt-word\" wrap align=\"center\">\n            {word.map((l, j) => {\n              const letter = cleanupLetter(l);\n              const isCorrect = guesses?.[letter]?.state === 'correct';\n              const key = `${j}-${l}-${i}`;\n              if (isLetter(letter, true)) {\n                return isCorrect ? (\n                  <Avatar key={key} className=\"letter-correct\" shape=\"square\">\n                    {l}\n                  </Avatar>\n                ) : (\n                  <IconAvatar key={key} icon={<BoxBlankIcon />} className=\"letter-blank\" />\n                );\n              }\n\n              return (\n                <Avatar key={key} shape=\"square\">\n                  {l}\n                </Avatar>\n              );\n            })}\n            {i + 1 < p.length && <Avatar shape=\"square\"></Avatar>}\n          </Space>\n        );\n      })}\n    </Space>\n  );\n}\n","import { NextGameSuggestion } from 'pages/Daily/components/NextGameSuggestion';\nimport { getDailyName, getSourceName, writeHeartResultString } from 'pages/Daily/utils';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Icons\nimport { BoxXIcon } from 'icons/BoxXIcon';\nimport { TrophyIcon } from 'icons/TrophyIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { TextHighlight } from 'components/text';\n// Internal\nimport { SETTINGS } from '../utils/settings';\nimport { CopyToClipboardResult } from '../../../components/CopyToClipboardResult';\n\ntype ResultsModalContentProps = {\n  challenge: number;\n  text: string;\n  win: boolean;\n  hearts: number;\n  solution: BooleanDictionary;\n};\n\nexport function ResultsModalContent({ text, challenge, win, hearts, solution }: ResultsModalContentProps) {\n  const { language, dualTranslate } = useLanguage();\n\n  const result = writeResult({\n    game: dualTranslate(SETTINGS.NAME),\n    challenge,\n    remainingHearts: hearts,\n    solution,\n    language,\n  });\n\n  return (\n    <SpaceContainer vertical>\n      <Typography.Title level={2} className=\"center\">\n        {win ? (\n          <>\n            <IconAvatar icon={<TrophyIcon />} /> <Translate pt=\"Parabéns!\" en=\"Congratulations!\" />\n          </>\n        ) : (\n          <>\n            <IconAvatar icon={<BoxXIcon />} /> <Translate pt=\"Que pena!\" en=\"Too bad!\" />\n          </>\n        )}\n      </Typography.Title>\n      <Typography.Paragraph className=\"center\">\n        {win ? (\n          <Translate pt=\"Você acertou o filme!\" en=\"You guessed the movie!\" />\n        ) : (\n          <Translate pt=\"Você errou o filme!\" en=\"You missed the movie!\" />\n        )}\n      </Typography.Paragraph>\n\n      <TextHighlight className=\"result-answer\">\n        <Typography.Paragraph className=\"text-center\">{text}</Typography.Paragraph>\n      </TextHighlight>\n\n      <CopyToClipboardResult result={result} rows={3} />\n\n      <NextGameSuggestion />\n    </SpaceContainer>\n  );\n}\n\nfunction writeResult({\n  game,\n  challenge,\n  remainingHearts,\n  solution,\n  language,\n}: {\n  game: string;\n  challenge: number;\n  remainingHearts: number;\n  solution: BooleanDictionary;\n  language: Language;\n}) {\n  const totalLetters = Object.keys(solution).length;\n  const guessedLetters = Object.values(solution).filter(Boolean).length;\n\n  return [\n    `${SETTINGS.ICON} ${getDailyName(language)} ${game} #${challenge}`,\n    `${writeHeartResultString(remainingHearts, SETTINGS.HEARTS)} (${Math.round((guessedLetters / totalLetters) * 100)}%)`,\n    `https://www.kavispires.com/tardedivertida/#/${getSourceName(language)}`,\n  ].join('\\n');\n}\n","// Ant Design Resources\nimport { HeartFilled } from '@ant-design/icons';\nimport { Typography } from 'antd';\n// Components\nimport { Translate } from 'components/language';\n\nexport function Rules() {\n  return (\n    <Typography>\n      <Translate\n        pt={\n          <>\n            <li>Tente adivinhar o filme secreto observando os ícones e ano do filme.</li>\n            <li>\n              Os ícones não estão em ordem e podem significar palavras no título ou sobre o enredo do filme.\n            </li>\n            <li>Você deve apertar letra por letra (e números!) até que o nome esteja completo.</li>\n            <li>\n              Cada letra que você aperta que não está presente na resposta remove um coração e você tem apenas\n              3 <HeartFilled />.\n            </li>\n            <li>Boa sorte!</li>\n          </>\n        }\n        en={\n          <>\n            <li>Try to guess the secret movie by looking at the icons and movie year.</li>\n            <li>The icons are not in order and may mean words in the movie title or about the plot.</li>\n            <li>You must press letter by letter (and numbers!) until the name is complete.</li>\n            <li>\n              Each letter you press that is not present in the answer removes a heart and you only have 3{' '}\n              <HeartFilled />.\n            </li>\n            <li>Good luck!</li>\n          </>\n        }\n      />\n    </Typography>\n  );\n}\n","import { Keyboard } from 'pages/Daily/components/Keyboard';\nimport { Region } from 'pages/Daily/components/Region';\nimport { useState } from 'react';\n// Ant Design Resources\nimport { BarChartOutlined } from '@ant-design/icons';\nimport { Button, Layout, Modal, Space, Typography } from 'antd';\n// Types\nimport type { Me } from 'types/user';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Icons\nimport { DailyMovieGameIcon } from 'icons/DailyMovieGameIcon';\n// Components\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { DualTranslate, Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\n// Internal\nimport { getInitialState } from '../utils/helpers';\nimport { SETTINGS } from '../utils/settings';\nimport type { DailyFilmacoEntry } from '../utils/types';\nimport { useFilmacoEngine } from '../utils/useFilmacoEngine';\nimport { Header } from '../../../components/Header';\nimport { Menu } from '../../../components/Menu';\nimport { Prompt } from './Prompt';\nimport { ResultsModalContent } from './ResultsModalContent';\nimport { Rules } from './Rules';\n\ntype DailyFilmacoProps = {\n  data: DailyFilmacoEntry;\n  currentUser: Me;\n};\n\nexport function DailyFilmaco({ data }: DailyFilmacoProps) {\n  const [initialState] = useState(getInitialState(data));\n  const { hearts, guesses, showResultModal, setShowResultModal, isWin, isComplete, guessLetter, solution } =\n    useFilmacoEngine(data, initialState);\n  const width = useCardWidth(5, { margin: 64, maxWidth: 100, minWidth: 65 });\n\n  return (\n    <Layout className=\"app\">\n      <Header icon={<DailyMovieGameIcon />} localStorageKey={SETTINGS.KEY}>\n        TD <DualTranslate>{SETTINGS.NAME}</DualTranslate> #{data.number}\n      </Header>\n      <Layout.Content>\n        <Menu\n          hearts={hearts}\n          total={SETTINGS.HEARTS}\n          openRules={!isComplete || hearts === SETTINGS.HEARTS}\n          rules={<Rules />}\n        />\n\n        <Region>\n          <Typography.Text strong>\n            <Translate pt=\"Ano de Lançamento\" en=\"Release Year\" />: {data.year}\n          </Typography.Text>\n        </Region>\n\n        <SpaceContainer wrap>\n          {data.itemsIds.map((itemId, index) => (\n            <ItemCard key={`${itemId}-${index}`} id={itemId} width={width} />\n          ))}\n        </SpaceContainer>\n\n        <Prompt text={data.title} guesses={guesses} />\n\n        {isComplete && (\n          <Space className=\"results-container\" direction=\"vertical\" align=\"center\">\n            <Button onClick={() => setShowResultModal(true)} type=\"primary\" icon={<BarChartOutlined />}>\n              <Translate pt=\"Ver Resultado\" en=\"Show Results\" />\n            </Button>\n          </Space>\n        )}\n        <Modal\n          title={<Translate pt=\"Resultado\" en=\"Results\" />}\n          open={showResultModal}\n          onCancel={() => setShowResultModal(false)}\n          footer={null}\n        >\n          <ResultsModalContent\n            challenge={data.number}\n            win={isWin}\n            hearts={hearts}\n            text={data.title}\n            solution={solution}\n          />\n        </Modal>\n\n        <Keyboard lettersState={guesses} onLetterClick={guessLetter} disabled={isComplete} withNumbers />\n      </Layout.Content>\n    </Layout>\n  );\n}\n","import { useDailyGameState } from 'pages/Daily/hooks/useDailyGameState';\nimport { useDailyLocalToday, useMarkAsPlayed } from 'pages/Daily/hooks/useDailyLocalToday';\nimport { useShowResultModal } from 'pages/Daily/hooks/useShowResultModal';\n// Utils\nimport { removeDuplicates } from 'utils/helpers';\n// Internal\nimport { DEFAULT_LOCAL_TODAY } from './helpers';\nimport { SETTINGS } from './settings';\nimport type { DailyFilmacoEntry, FilmacoLocalToday, GameState } from './types';\n\nexport function useFilmacoEngine(data: DailyFilmacoEntry, initialState: GameState) {\n  const { state, setState } = useDailyGameState<GameState>(initialState);\n\n  const { localToday, updateLocalStorage } = useDailyLocalToday<FilmacoLocalToday>({\n    key: SETTINGS.KEY,\n    gameId: data.id,\n    defaultValue: DEFAULT_LOCAL_TODAY,\n  });\n  // ACTIONS\n  const guessLetter = (letter: string) => {\n    // Ignore previously guessed letters\n    if (state.guesses[letter]) {\n      return;\n    }\n\n    const isCorrect = state.solution[letter] !== undefined;\n\n    updateLocalStorage({\n      letters: removeDuplicates([...(localToday?.letters ?? []), letter]),\n    });\n\n    const solution = { ...state.solution };\n    if (isCorrect) {\n      solution[letter] = true;\n    }\n\n    setState((prev) => ({\n      ...prev,\n      guesses: {\n        ...prev.guesses,\n        [letter]: {\n          letter: letter,\n          state: isCorrect ? 'correct' : 'incorrect',\n          disabled: true,\n        },\n      },\n      solution,\n      hearts: isCorrect ? prev.hearts : prev.hearts - 1,\n    }));\n  };\n\n  // CONDITIONS\n  const isWin = Object.values(state.solution)\n    .filter((value) => value !== undefined)\n    .every(Boolean);\n  const isLose = state.hearts <= 0;\n  const isComplete = isWin || isLose;\n\n  useMarkAsPlayed({\n    key: SETTINGS.KEY,\n    isComplete,\n  });\n\n  // RESULTS MODAL\n  const { showResultModal, setShowResultModal } = useShowResultModal(isWin || isLose || isComplete);\n\n  return {\n    hearts: state.hearts,\n    guesses: state.guesses,\n    solution: state.solution,\n    showResultModal,\n    setShowResultModal,\n    isWin,\n    isLose,\n    isComplete,\n    guessLetter,\n  };\n}\n","import { DailyError } from 'pages/Daily/components/DailyError';\nimport { DailyLoading } from 'pages/Daily/components/DailyLoading';\n// Hooks\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\n// Internal\nimport { DailyFilmaco } from './components/DailyFilmaco';\nimport { useDailyChallenge } from '../../hooks/useDailyChallenge';\n// Sass\nimport './utils/styles.scss';\n\nexport function DailyFilmacoGame() {\n  const { currentUser } = useCurrentUserContext();\n\n  // Load challenge\n  const challengeQuery = useDailyChallenge();\n\n  if (challengeQuery.isLoading) {\n    return <DailyLoading />;\n  }\n\n  const dailyData = challengeQuery?.data?.filmaco;\n\n  if (challengeQuery.isError || !dailyData) {\n    return <DailyError />;\n  }\n\n  return <DailyFilmaco data={dailyData} currentUser={currentUser} />;\n}\n","import type { ReactNode } from 'react';\n// Icons\nimport { SpeechBubbleAcceptedIcon } from 'icons/SpeechBubbleAcceptedIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\n// Internal\nimport { checkWasPlayedToday } from '../utils';\n\ntype PlayedWrapperProps = {\n  children: ReactNode;\n  lsKey: string;\n};\nexport function PlayedWrapper({ children, lsKey }: PlayedWrapperProps) {\n  const wasPlayed = checkWasPlayedToday(lsKey);\n\n  return (\n    <div className=\"played-wrapper\">\n      {wasPlayed && (\n        <IconAvatar icon={<SpeechBubbleAcceptedIcon />} size=\"small\" className=\"played-wrapper__played\" />\n      )}\n      {children}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { Link } from 'react-router-dom';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Icons\nimport { DailyAlienGameIcon } from 'icons/DailyAlienGameIcon';\nimport { DailyArtGameIcon } from 'icons/DailyArtGameIcon';\nimport { DailyDiagramGameIcon } from 'icons/DailyDiagramGameIcon';\nimport { DailyDrawingGameIcon } from 'icons/DailyDrawingGameIcon';\nimport { DailyFindingGameIcon } from 'icons/DailyFindingGameIcon';\nimport { DailyMovieGameIcon } from 'icons/DailyMovieGameIcon';\nimport { DailyWarehouseGameIcon } from 'icons/DailyWarehouseGameIcon';\nimport { DailyWordGameIcon } from 'icons/DailyWordGameIcon';\n// Components\nimport { TransparentButton } from 'components/buttons';\nimport { LanguageSwitch, Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\n// Internal\nimport { DailyChrome } from '../components/DailyChrome';\nimport { PlayedWrapper } from '../components/PlayedWrapper';\nimport { SETTINGS as AQUI_O } from '../games/AquiO/utils/settings';\nimport { SETTINGS as ARTE_RUIM } from '../games/ArteRuim/utils/settings';\nimport { SETTINGS as PICACO } from './Picaco/utils/settings';\nimport { SETTINGS as CONTROLE_DE_ESTOQUE } from '../games/ControleDeEstoque/utils/settings';\nimport { SETTINGS as FILMACO } from '../games/Filmaco/utils/settings';\nimport { SETTINGS as PALAVREADO } from '../games/Palavreado/utils/settings';\nimport { SETTINGS as TEORIA_DE_CONJUNTOS } from '../games/TeoriaDeConjuntos/utils/settings';\nimport { SETTINGS as COMUNICACAO_ALIENIGENA } from '../games/ComunicacaoAlienigena/utils/settings';\nimport { checkWasPlayedToday } from '../utils';\n// import { DailyGroupingGameIcon } from 'icons/DailyGroupingGameIcon';\n// import { DailyCrimeGameIcon } from 'icons/DailyCrimeGameIcon';\n// import { DailyImagesGameIcon } from 'icons/DailyImagesGameIcon';\n\nexport function Hub() {\n  return (\n    <DailyChrome>\n      <div className=\"hub\">\n        <Typography.Title level={5}>\n          <Translate pt=\"Escolha um jogo\" en=\"Choose a game\" />\n        </Typography.Title>\n        <SpaceContainer>\n          <LanguageSwitch />\n        </SpaceContainer>\n\n        <div className=\"hub-list\">\n          <PlayedWrapper lsKey={ARTE_RUIM.KEY}>\n            <TransparentButton hoverType=\"sepia\">\n              <Link to=\"/diario/arte-ruim\" className=\"hub-item\">\n                <DailyArtGameIcon style={{ width: 75 }} />\n                <Translate pt=\"Arte Ruim\" en=\"Questionable Art\" />\n              </Link>\n            </TransparentButton>\n          </PlayedWrapper>\n\n          <PlayedWrapper lsKey={AQUI_O.KEY}>\n            <TransparentButton hoverType=\"sepia\">\n              <Link to=\"/diario/aqui-o\" className=\"hub-item\">\n                <DailyFindingGameIcon style={{ width: 75 }} />\n                <Translate pt=\"Aqui Ó\" en=\"Find This\" />\n              </Link>\n            </TransparentButton>\n          </PlayedWrapper>\n\n          <PlayedWrapper lsKey={COMUNICACAO_ALIENIGENA.KEY}>\n            <TransparentButton\n              hoverType=\"sepia\"\n              className={clsx(\n                !checkWasPlayedToday(COMUNICACAO_ALIENIGENA.KEY) && getAnimationClass('tada', { repeat: 3 }),\n              )}\n            >\n              <Link to=\"/diario/comunicacao-alienigena\" className=\"hub-item\">\n                <DailyAlienGameIcon style={{ width: 75 }} />\n                <Translate pt=\"Comunicação Alienígena\" en=\"Alien Communication\" />\n              </Link>\n            </TransparentButton>\n          </PlayedWrapper>\n\n          <PlayedWrapper lsKey={CONTROLE_DE_ESTOQUE.KEY}>\n            <TransparentButton hoverType=\"sepia\">\n              <Link to=\"/diario/controle-de-estoque\" className=\"hub-item\">\n                <DailyWarehouseGameIcon style={{ width: 75 }} />\n                <Translate pt=\"Controle De Estoque\" en=\"Warehouse\" />\n              </Link>\n            </TransparentButton>\n          </PlayedWrapper>\n\n          <PlayedWrapper lsKey={FILMACO.KEY}>\n            <TransparentButton hoverType=\"sepia\">\n              <Link to=\"/diario/filmaco\" className=\"hub-item\">\n                <DailyMovieGameIcon style={{ width: 75 }} />\n                <Translate pt=\"Filmaço\" en=\"Movicon\" />\n              </Link>\n            </TransparentButton>\n          </PlayedWrapper>\n\n          <PlayedWrapper lsKey={PALAVREADO.KEY}>\n            <TransparentButton hoverType=\"sepia\">\n              <Link to=\"/diario/palavreado\" className=\"hub-item\">\n                <DailyWordGameIcon style={{ width: 75 }} />\n                <Translate pt=\"Palavreado\" en=\"Rewording\" />\n              </Link>\n            </TransparentButton>\n          </PlayedWrapper>\n\n          <PlayedWrapper lsKey={PICACO.KEY}>\n            <TransparentButton hoverType=\"sepia\">\n              <Link to=\"/diario/picaco\" className=\"hub-item\">\n                <DailyDrawingGameIcon style={{ width: 75 }} />\n                <Translate pt=\"Picaço!\" en=\"Big Artist!\" />\n              </Link>\n            </TransparentButton>\n          </PlayedWrapper>\n\n          <PlayedWrapper lsKey={TEORIA_DE_CONJUNTOS.KEY}>\n            <TransparentButton hoverType=\"sepia\">\n              <Link to=\"/diario/teoria-de-conjuntos\" className=\"hub-item\">\n                <DailyDiagramGameIcon style={{ width: 75 }} />\n                <Translate pt=\"Teoria de Conjuntos\" en=\"Diagram Theory\" />\n              </Link>\n            </TransparentButton>\n          </PlayedWrapper>\n\n          {/* <TransparentButton hoverType=\"sepia\" disabled className=\"hub-item-disabled\">\n            <Link to=\"/diario\" className=\"hub-item\">\n              <DailyGroupingGameIcon style={{ width: 75 }} />\n              <Translate pt=\"Quarteto\" en=\"Connect Four\" />\n            </Link>\n          </TransparentButton> */}\n\n          {/* <TransparentButton hoverType=\"sepia\" disabled className=\"hub-item-disabled\">\n            <Link to=\"/diario\" className=\"hub-item\">\n              <DailyCrimeGameIcon style={{ width: 75 }} />\n              <Translate pt=\"Crime Hediondo\" en=\"Horrible Crimes\" />\n            </Link>\n          </TransparentButton> */}\n\n          {/* <TransparentButton hoverType=\"sepia\" disabled className=\"hub-item-disabled\">\n            <Link to=\"/diario\" className=\"hub-item\">\n              <DailyImagesGameIcon style={{ width: 75 }} />\n              <Translate pt=\"Imagine\" en=\"Imagine\" />\n            </Link>\n          </TransparentButton> */}\n        </div>\n      </div>\n    </DailyChrome>\n  );\n}\n","import { chunk, cloneDeep } from 'lodash';\nimport { loadLocalToday } from 'pages/Daily/utils';\n// Utils\nimport { deepCopy } from 'utils/helpers';\n// Internal\nimport { SETTINGS } from './settings';\nimport type { DailyPalavreadoEntry, GameState, PalavreadoLetter, PalavreadoLocalToday } from './types';\n\nexport const DEFAULT_LOCAL_TODAY: PalavreadoLocalToday = {\n  id: '',\n  boardState: [],\n  number: 0,\n  swaps: 0,\n};\n\nexport const getInitialState = (data: DailyPalavreadoEntry): GameState => {\n  const size = data.keyword.length;\n\n  const localToday = loadLocalToday({\n    key: SETTINGS.KEY,\n    gameId: data.id,\n    defaultValue: deepCopy(DEFAULT_LOCAL_TODAY),\n  });\n\n  const state: GameState = {\n    selection: null,\n    swap: [],\n    letters: parseLetters(data.letters, size),\n    boardState: [],\n    guesses: [],\n    hearts: Math.max(SETTINGS.HEARTS, size),\n    state: '',\n    swaps: 0,\n  };\n\n  if (localToday.boardState) {\n    const hearts = Math.max(SETTINGS.HEARTS, size) - localToday.boardState.length;\n\n    // Read state of the board and apply guesses\n    const lsGuesses = (localToday.boardState ?? []).map((board) => {\n      const guess = chunk(board, size);\n      return guess.map((g) => g.join(''));\n    });\n\n    // Apply latest board state\n    const latestBoardState = localToday.boardState[localToday.boardState.length - 1];\n    const copyLetters = cloneDeep(state.letters);\n    const answer = data.words.join('');\n    if (latestBoardState) {\n      copyLetters.forEach((letter, index) => {\n        letter.letter = latestBoardState[index];\n\n        if (letter.state === 'idle' && letter.letter === answer[index]) {\n          letter.state = String(Math.floor(index / size)) as PalavreadoLetter['state'];\n          letter.locked = true;\n        }\n\n        return letter;\n      });\n    }\n\n    state.hearts = hearts;\n    state.guesses = lsGuesses;\n    state.letters = copyLetters;\n    state.boardState = localToday.boardState ?? [];\n    state.swaps = localToday.swaps ?? 0;\n  }\n\n  return state;\n};\n\nconst KEYWORD_INDEXES: Record<number, number[]> = {\n  4: [0, 5, 10, 15],\n  5: [0, 6, 12, 18, 24],\n};\n\nconst KEYWORD_STATES: Record<number, string[]> = {\n  4: ['0', '1', '2', '3'],\n  5: ['0', '1', '2', '3', '4'],\n};\n\nexport const parseLetters = (letters: string[], size: number): PalavreadoLetter[] => {\n  const indexes = KEYWORD_INDEXES[size];\n  const states = KEYWORD_STATES[size];\n  return letters.map((letter, index) => ({\n    letter,\n    index,\n    state: (indexes.includes(index) ? states[indexes.indexOf(index)] : 'idle') as PalavreadoLetter['state'],\n    locked: indexes.includes(index),\n  }));\n};\n\n// export const orderLettersByWord = (letters: PalavreadoLetter[], word: string): PalavreadoLetter[] => {\n//   const orderedLetters: PalavreadoLetter[] = [];\n//   const usedIndexes: number[] = [];\n//   word.split('').forEach((wordLetter) => {\n//     const foundLetter = letters.find((cl) => !usedIndexes.includes(cl.index) && cl.letter === wordLetter);\n//     if (foundLetter) {\n//       usedIndexes.push(foundLetter?.index);\n//       orderedLetters.push(foundLetter);\n//     }\n//   });\n//   return orderedLetters;\n// };\n\nexport const calculateGuessValue = (word: string, guess: string): number => {\n  let value = 0;\n  word.split('').forEach((letter, index) => {\n    if (letter === guess[index]) {\n      value += 1;\n    }\n  });\n  return value;\n};\n","import clsx from 'clsx';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Internal\nimport type { PalavreadoLetter } from '../utils/types';\n\ntype BoardProps = {\n  letters: PalavreadoLetter[];\n  selection: number | null;\n  swap: number[];\n  onLetterSelection: (index: number) => void;\n  guesses: string[][];\n  size: number;\n};\n\nexport function Board({ letters, onLetterSelection, selection, swap, guesses, size }: BoardProps) {\n  return (\n    <div\n      className=\"palavreado-board\"\n      style={{\n        gridTemplateColumns: `repeat(${size}, 1fr)`,\n        gridTemplateRows: `repeat(${size}, 1fr)`,\n      }}\n    >\n      {letters.map(({ letter, locked, state }, index) => {\n        const row = Math.floor(index / size);\n        const col = index % size;\n        const previousWrongPlacement = guesses.some((attempts) => attempts[row][col] === letter) && !locked;\n\n        return (\n          <button\n            key={`${letter}-${index}`}\n            type=\"button\"\n            className={clsx(\n              'palavreado-board__tile',\n              swap.includes(index) && getAnimationClass('zoomIn', { speed: 'faster' }),\n              !locked && selection !== index && 'palavreado-board__tile--button',\n              selection === index && 'palavreado-board__tile--selected',\n              `palavreado-board__tile--${state}`,\n              previousWrongPlacement && 'palavreado-board__tile--place-guessed',\n            )}\n            onClick={() => (!locked ? onLetterSelection(index) : null)}\n          >\n            {letter}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n","import { chunk } from 'lodash';\nimport { NextGameSuggestion } from 'pages/Daily/components/NextGameSuggestion';\nimport { getDailyName, getSourceName, writeHeartResultString } from 'pages/Daily/utils';\n// Ant Design Resources\nimport { Divider, Space, Typography } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Icons\nimport { BoxXIcon } from 'icons/BoxXIcon';\nimport { TrophyIcon } from 'icons/TrophyIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\n// Internal\nimport { SETTINGS } from '../utils/settings';\nimport type { PalavreadoLetter } from '../utils/types';\nimport { CopyToClipboardResult } from '../../../components/CopyToClipboardResult';\n\ntype ResultsModalContentProps = {\n  challenge: number;\n  words: string[];\n  isWin: boolean;\n  hearts: number;\n  letters: PalavreadoLetter[];\n  swaps: number;\n  size: number;\n};\n\nexport function ResultsModalContent({\n  challenge,\n  words,\n  isWin,\n  hearts,\n  letters,\n  swaps,\n  size,\n}: ResultsModalContentProps) {\n  const { language, dualTranslate } = useLanguage();\n\n  const result = writeResult({\n    game: dualTranslate(SETTINGS.NAME),\n    challenge,\n    remainingHearts: hearts,\n    letters,\n    language,\n    swaps,\n    size,\n  });\n\n  return (\n    <SpaceContainer vertical>\n      <Typography.Title level={2} className=\"center\">\n        {isWin ? (\n          <>\n            <IconAvatar icon={<TrophyIcon />} /> <Translate pt=\"Parabéns!\" en=\"Congratulations!\" />\n          </>\n        ) : (\n          <>\n            <IconAvatar icon={<BoxXIcon />} /> <Translate pt=\"Que pena!\" en=\"Too bad!\" />\n          </>\n        )}\n      </Typography.Title>\n      <Typography.Paragraph className=\"center\">\n        {isWin ? (\n          <Translate pt=\"Você acertou as palavras!\" en=\"You guessed the words!\" />\n        ) : (\n          <Translate pt=\"Você não acertou todas as palavras!\" en=\"You missed the words!\" />\n        )}\n      </Typography.Paragraph>\n\n      <Space className=\"result-answer\" split={<Divider type=\"vertical\" />}>\n        {words.map((word) => (\n          <Typography.Text key={word}>{word}</Typography.Text>\n        ))}\n      </Space>\n\n      <CopyToClipboardResult result={result} rows={size + 2} />\n\n      <NextGameSuggestion />\n    </SpaceContainer>\n  );\n}\n\nfunction writeResult({\n  game,\n  challenge,\n  remainingHearts,\n  letters,\n  language,\n  swaps,\n  size,\n}: {\n  game: string;\n  challenge: number;\n  remainingHearts: number;\n  letters: PalavreadoLetter[];\n  language: Language;\n  swaps: number;\n  size: number;\n}) {\n  const cleanUpAttempts = chunk(letters, size).map((row) =>\n    row.map((letter) => {\n      switch (letter.state) {\n        case '0':\n          return '🟥';\n        case '1':\n          return '🟦';\n        case '2':\n          return '🟪';\n        case '3':\n          return '🟫';\n        case '4':\n          return '🟧';\n        default:\n          return '⬜️';\n      }\n    }),\n  );\n\n  return [\n    `${SETTINGS.ICON} ${getDailyName(language)} ${game} #${challenge}`,\n    `${writeHeartResultString(remainingHearts, Math.max(SETTINGS.HEARTS, size), ' ')} (${swaps} trocas)`,\n    cleanUpAttempts\n      .map((row) => row.join(' ').trim())\n      .filter(Boolean)\n      .join('\\n'),\n    `https://www.kavispires.com/tardedivertida/#/${getSourceName(language)}`,\n  ].join('\\n');\n}\n","// Ant Design Resources\nimport { HeartFilled } from '@ant-design/icons';\nimport { Typography } from 'antd';\n// Components\nimport { Translate } from 'components/language';\n// Internal\nimport { SETTINGS } from '../utils/settings';\n\nexport function Rules() {\n  return (\n    <Typography>\n      <Translate\n        pt={\n          <>\n            <li>\n              Junto à palavra-chave de {SETTINGS.WORD_LENGTH} letras diagonal na grade existem{' '}\n              {SETTINGS.HEARTS} palavras embaralhadas.\n            </li>\n            <li>Você precisa ordenar as letras para formar as {SETTINGS.HEARTS} palavras horizontais.</li>\n            <li>Selecione uma letra e depois uma outra para que elas troquem de lugar.</li>\n            <li>Quando você acha que a grade está certa, aperte \"Enviar\".</li>\n            <li>\n              Todas as letras colocadas na posição corretas serão coloridas da corta da linha. Mas se você não\n              acertas todas, você perde um <HeartFilled />.\n            </li>\n            <li>\n              Você tem {SETTINGS.HEARTS} <HeartFilled /> chances. Boa sorte!\n            </li>\n          </>\n        }\n        en={\n          <>\n            <li>\n              Next to the {SETTINGS.WORD_LENGTH}-letter keyword diagonally in the grid are {SETTINGS.HEARTS}{' '}\n              shuffled words.\n            </li>\n            <li>You need to order the letters to form the {SETTINGS.HEARTS} words in the rows.</li>\n            <li>Select a letter and then another so they swap places.</li>\n            <li>When you think the grid is correct, press \"Submit\".</li>\n            <li>\n              All letters placed in the correct position will be colored in the line color. But if you don't\n              get them all, you lose a <HeartFilled />.\n            </li>\n            <li>\n              You have {SETTINGS.HEARTS} <HeartFilled /> chances. Good luck!\n            </li>\n          </>\n        }\n      />\n    </Typography>\n  );\n}\n","import { Region, TextRegion } from 'pages/Daily/components/Region';\nimport { useState } from 'react';\n// Ant Design Resources\nimport { BarChartOutlined } from '@ant-design/icons';\nimport { Button, Divider, Flex, Layout, Modal, Space, Typography } from 'antd';\n// Types\nimport type { Me } from 'types/user';\n// Icons\nimport { DailyWordGameIcon } from 'icons/DailyWordGameIcon';\n// Components\nimport { DualTranslate, Translate } from 'components/language';\n// Internal\nimport { getInitialState } from '../utils/helpers';\nimport { SETTINGS } from '../utils/settings';\nimport type { DailyPalavreadoEntry } from '../utils/types';\nimport { usePalavreadoEngine } from '../utils/usePalavreadoEngine';\nimport { Header } from '../../../components/Header';\nimport { Menu } from '../../../components/Menu';\nimport { Board } from './Board';\nimport { ResultsModalContent } from './ResultsModalContent';\nimport { Rules } from './Rules';\n\ntype DailyPalavreadoProps = {\n  data: DailyPalavreadoEntry;\n  currentUser: Me;\n};\n\nexport function DailyPalavreado({ data }: DailyPalavreadoProps) {\n  const [initialState] = useState(getInitialState(data));\n  const {\n    hearts,\n    selection,\n    guesses,\n    letters,\n    showResultModal,\n    setShowResultModal,\n    isWin,\n    isComplete,\n    selectLetter,\n    submitGrid,\n    swap,\n    swaps,\n    size,\n    keyword,\n  } = usePalavreadoEngine(data, initialState);\n\n  return (\n    <Layout className=\"app\">\n      <Header icon={<DailyWordGameIcon />} localStorageKey={SETTINGS.KEY}>\n        TD <DualTranslate>{SETTINGS.NAME}</DualTranslate> #{data.number}\n      </Header>\n      <Layout.Content>\n        <Menu hearts={hearts} total={Math.max(SETTINGS.HEARTS, size)} openRules={true} rules={<Rules />} />\n\n        <Region>\n          <Typography.Text strong className=\"palavreado-word\">\n            {keyword} {swaps > 0 && ` ↔️ ${swaps}`}\n          </Typography.Text>\n          <Board\n            letters={letters}\n            onLetterSelection={selectLetter}\n            selection={selection}\n            swap={swap}\n            guesses={guesses}\n            size={size}\n          />\n        </Region>\n\n        <Region>\n          {isComplete ? (\n            <Button onClick={() => setShowResultModal(true)} type=\"primary\" icon={<BarChartOutlined />}>\n              <Translate pt=\"Ver Resultado\" en=\"Show Results\" />\n            </Button>\n          ) : (\n            <Button type=\"primary\" onClick={submitGrid} disabled={isComplete} block>\n              <Translate pt=\"Enviar\" en=\"Submit\" />\n            </Button>\n          )}\n        </Region>\n\n        <TextRegion direction=\"vertical\" size=\"small\">\n          {guesses.map((attempt, index) => (\n            <Space\n              key={`${attempt}-${index}`}\n              split={<Divider type=\"vertical\" className=\"mx-0\" />}\n              size=\"small\"\n            >\n              {attempt.map((word, i) => (\n                <Typography.Text\n                  keyboard\n                  className=\"palavreado-word\"\n                  key={`${attempt}-${index}-${word}-${i}`}\n                >\n                  {word}\n                </Typography.Text>\n              ))}\n            </Space>\n          ))}\n        </TextRegion>\n\n        {guesses.length > 0 && (\n          <TextRegion>\n            <Flex className=\"contained\" gap={12} align=\"center\">\n              <div className=\"palavreado-board__tile palavreado-board__tile--place-guessed palavreado-board__tile--sample\">\n                ?\n              </div>\n              <Typography.Text>\n                <Translate\n                  pt={\n                    <>\n                      Posições que já foram testadas com a letra específica aparecem assim (borda preta\n                      pontilhada).\n                      <br />\n                      Evite enviar com letras assim, elas continuarão erradas.\n                    </>\n                  }\n                  en={\n                    <>\n                      Positions that have already been tested with a specific letter appear like this (dotted\n                      black border).\n                      <br />\n                      Avoid submitting with letters like this, they will remain wrong.\n                    </>\n                  }\n                />\n              </Typography.Text>\n            </Flex>\n          </TextRegion>\n        )}\n\n        <Modal\n          title={<Translate pt=\"Resultado\" en=\"Results\" />}\n          open={showResultModal}\n          onCancel={() => setShowResultModal(false)}\n          footer={null}\n        >\n          <ResultsModalContent\n            challenge={data?.number}\n            isWin={isWin}\n            hearts={hearts}\n            words={data.words}\n            letters={letters}\n            swaps={swaps}\n            size={size}\n          />\n        </Modal>\n      </Layout.Content>\n    </Layout>\n  );\n}\n","import { chunk, cloneDeep } from 'lodash';\nimport { useDailyGameState } from 'pages/Daily/hooks/useDailyGameState';\nimport { useDailyLocalToday, useMarkAsPlayed } from 'pages/Daily/hooks/useDailyLocalToday';\nimport { useShowResultModal } from 'pages/Daily/hooks/useShowResultModal';\n// Internal\nimport { DEFAULT_LOCAL_TODAY } from './helpers';\nimport { SETTINGS } from './settings';\nimport type { DailyPalavreadoEntry, GameState, PalavreadoLetter, PalavreadoLocalToday } from './types';\n\nexport function usePalavreadoEngine(data: DailyPalavreadoEntry, initialState: GameState) {\n  const size = data.keyword.length;\n  const { state, setState, updateState } = useDailyGameState<GameState>(initialState);\n\n  const { updateLocalStorage } = useDailyLocalToday<PalavreadoLocalToday>({\n    key: SETTINGS.KEY,\n    gameId: data.id,\n    defaultValue: DEFAULT_LOCAL_TODAY,\n  });\n\n  // ACTIONS\n  const selectLetter = (index: number) => {\n    if (state.selection === index) {\n      updateState({\n        selection: null,\n        swap: [],\n      });\n      return;\n    }\n\n    if (state.selection === null) {\n      updateState({\n        selection: index,\n        swap: [],\n      });\n      return;\n    }\n\n    setState((prev) => {\n      if (prev.selection === null) {\n        return prev;\n      }\n\n      const copyLetters = cloneDeep(state.letters);\n      const temp = copyLetters[prev.selection];\n      copyLetters[prev.selection] = copyLetters[index];\n      copyLetters[index] = temp;\n\n      updateLocalStorage({\n        swaps: prev.swaps + 1,\n      });\n\n      return {\n        ...prev,\n        letters: copyLetters,\n        selection: null,\n        swap: [prev.selection, index],\n        swaps: prev.swaps + 1,\n      };\n    });\n  };\n\n  const submitGrid = () => {\n    const answer = data.words.join('');\n\n    setState((prev) => {\n      // Evaluate letters and mark any correct letter as correct and locked\n      const copyLetters = cloneDeep(state.letters);\n      copyLetters.map((letter, index) => {\n        if (letter.state === 'idle' && letter.letter === answer[index]) {\n          letter.state = String(Math.floor(index / size)) as PalavreadoLetter['state'];\n          letter.locked = true;\n        }\n        return letter;\n      });\n\n      // Generate the guessed words from the letter\n      const generatedWords = chunk(copyLetters, size).map((lg) => lg.map((l) => l.letter).join(''));\n\n      // Evaluate if any of the words match the words in the data\n      generatedWords.forEach((word, wordIndex) => {\n        if (data.words[wordIndex] === word) {\n          word.split('').forEach((_, i) => {\n            copyLetters[wordIndex * size + i].state = String(wordIndex) as PalavreadoLetter['state'];\n            copyLetters[wordIndex * size + i].locked = true;\n          });\n        }\n      });\n\n      const isAllCorrect = copyLetters.every((letter) => letter.locked);\n\n      const guesses = generatedWords;\n      const newBoardState = copyLetters.map((l) => l.letter);\n\n      updateLocalStorage({\n        boardState: [...state.boardState, newBoardState],\n        swaps: prev.swaps,\n      });\n\n      return {\n        ...prev,\n        guesses: [...prev.guesses, guesses],\n        boardState: [...prev.boardState, newBoardState],\n        letters: copyLetters,\n        selection: null,\n        swap: [],\n        hearts: isAllCorrect ? prev.hearts : prev.hearts - 1,\n      };\n    });\n  };\n\n  // CONDITIONS\n  const isWin = Object.values(state.letters).every((l) => l.locked);\n  const isLose = state.hearts <= 0;\n  const isComplete = isWin || isLose;\n\n  useMarkAsPlayed({\n    key: SETTINGS.KEY,\n    isComplete,\n  });\n\n  // RESULTS MODAL\n  const { showResultModal, setShowResultModal } = useShowResultModal(isComplete);\n\n  return {\n    hearts: state.hearts,\n    guesses: state.guesses,\n    letters: state.letters,\n    selection: state.selection,\n    swap: state.swap,\n    swaps: state.swaps,\n    showResultModal,\n    setShowResultModal,\n    isWin,\n    isLose,\n    isComplete,\n    selectLetter,\n    submitGrid,\n    keyword: data.keyword,\n    size,\n  };\n}\n","import { DailyError } from 'pages/Daily/components/DailyError';\nimport { DailyLoading } from 'pages/Daily/components/DailyLoading';\n// Hooks\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\n// Internal\nimport { DailyPalavreado } from './components/DailyPalavreado';\nimport { useDailyChallenge } from '../../hooks/useDailyChallenge';\n// Sass\nimport './utils/styles.scss';\n\nexport function DailyPalavreadoGame() {\n  const { currentUser } = useCurrentUserContext();\n\n  // Load challenge\n  const challengeQuery = useDailyChallenge();\n\n  if (challengeQuery.isLoading) {\n    return <DailyLoading />;\n  }\n  const dailyData = challengeQuery?.data?.palavreado;\n\n  if (challengeQuery.isError || !dailyData) {\n    return <DailyError />;\n  }\n\n  return <DailyPalavreado data={dailyData} currentUser={currentUser} />;\n}\n","import { sampleSize } from 'lodash';\nimport { loadLocalToday } from 'pages/Daily/utils';\n// Utils\nimport { deepCopy } from 'utils/helpers';\n// Internal\nimport { SETTINGS } from './settings';\nimport type { PicacoLocalToday, DailyPicacoEntry, GameState } from './types';\n\nexport const DEFAULT_LOCAL_TODAY: PicacoLocalToday = {\n  id: '',\n  number: 0,\n  played: false,\n};\n\nexport const getInitialState = (data: DailyPicacoEntry): GameState => {\n  const localToday = loadLocalToday({\n    key: SETTINGS.KEY,\n    gameId: data.id,\n    defaultValue: deepCopy(DEFAULT_LOCAL_TODAY),\n  });\n\n  return {\n    cards: sampleSize(data.cards, SETTINGS.DRAWINGS),\n    drawings: [],\n    cardIndex: 0,\n    played: localToday.played ?? false,\n    screen: 'idle',\n  };\n};\n","import { useDailyGameState } from 'pages/Daily/hooks/useDailyGameState';\nimport { useDailyLocalToday, useMarkAsPlayed } from 'pages/Daily/hooks/useDailyLocalToday';\nimport { useDailySaveDrawings } from 'pages/Daily/hooks/useDailySaveDrawings';\nimport { wait } from 'pages/Daily/utils';\n// Types\nimport type { Me } from 'types/user';\n// Utils\nimport { SEPARATOR } from 'utils/constants';\nimport { removeDuplicates } from 'utils/helpers';\n// Internal\nimport { DEFAULT_LOCAL_TODAY } from './helpers';\nimport { SETTINGS } from './settings';\nimport type { PicacoLocalToday, DailyPicacoEntry, DrawingToSave, GameState } from './types';\n\nexport function usePicacoEngine(data: DailyPicacoEntry, currentUser: Me, initialState: GameState) {\n  const { state, setState, updateState } = useDailyGameState<GameState>(initialState);\n\n  const { updateLocalStorage } = useDailyLocalToday<PicacoLocalToday>({\n    key: SETTINGS.KEY,\n    gameId: data.id,\n    defaultValue: DEFAULT_LOCAL_TODAY,\n  });\n\n  const card = state.cards[state.cardIndex];\n\n  const onStart = () => updateState({ screen: 'playing' });\n\n  const onNextCard = async (drawing: any) => {\n    if (state.cardIndex < state.cards.length - 1) {\n      return setState((prev) => ({\n        ...prev,\n        drawings: [...prev.drawings, JSON.stringify(drawing)],\n        cardIndex: prev.cardIndex + 1,\n      }));\n    }\n\n    if (state.cardIndex === state.cards.length - 1) {\n      updateState({ screen: 'saving' });\n\n      // SAVE\n      await wait(1000);\n\n      onSaveDrawings({\n        ...state,\n        drawings: removeDuplicates([...state.drawings, JSON.stringify(drawing)]),\n        screen: 'saving',\n      });\n    }\n  };\n\n  const mutation = useDailySaveDrawings(() => {\n    updateLocalStorage({ played: true });\n    updateState({ played: true, screen: 'idle' });\n  });\n\n  useMarkAsPlayed({\n    key: SETTINGS.KEY,\n    isComplete: state.played,\n  });\n\n  const onSaveDrawings = (stateToSave: GameState) => {\n    const toSave = stateToSave.drawings.reduce((acc: Dictionary<DrawingToSave>, drawing, index) => {\n      if (drawing.length > 50) {\n        const card = stateToSave.cards[index];\n        acc[`${card.id}${SEPARATOR}${Date.now()}`] = {\n          drawing,\n          cardId: card.id,\n          level: card.level,\n          playerId: currentUser.id,\n          successRate: 0,\n          text: card.text,\n        };\n      }\n\n      return acc;\n    }, {});\n\n    mutation.mutate(toSave);\n  };\n\n  return {\n    cardNumber: state.cardIndex + 1,\n    card,\n    isPlaying: state.screen === 'playing',\n    isIdle: state.screen === 'idle',\n    isSaving: state.screen === 'saving' || mutation.isPending,\n    alreadyPlayed: state.played,\n    onStart,\n    onNextCard,\n  };\n}\n","import { useMutation } from '@tanstack/react-query';\n// Ant Design Resources\nimport { App } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Services\nimport { DAILY_API, DAILY_API_ACTIONS } from 'services/adapters';\n// Internal\nimport type { DrawingToSave } from '../games/Picaco/utils/types';\n\nexport function useDailySaveDrawings(onSuccess: GenericFunction) {\n  const { translate } = useLanguage();\n  const { notification } = App.useApp();\n\n  const query = useMutation({\n    mutationKey: ['add-player'],\n    mutationFn: async (payload: Dictionary<DrawingToSave>) =>\n      await DAILY_API.run({\n        action: DAILY_API_ACTIONS.SAVE_DRAWING,\n        drawings: payload,\n        language: Object.values(payload)?.[0]?.cardId?.split('-')?.[2] ?? 'pt',\n      }),\n    onSuccess: () => {\n      notification.success({\n        message: translate('Desenhos salvos com sucesso!', 'Drawings saved successfully!'),\n        placement: 'bottomLeft',\n      });\n      onSuccess();\n    },\n    onError: (e: any) => {\n      notification.error({\n        message: translate(\n          'Vixi, o aplicativo encontrou um erro ao tentar salvar desenhos',\n          'Oops, the application failed when trying to save drawings',\n        ),\n        description: JSON.stringify(e.message),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n    },\n  });\n\n  return query;\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Flex } from 'antd';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { DrawingCanvas } from 'components/canvas';\nimport { TimerBar } from 'components/timers';\n// Internal\nimport { SETTINGS } from '../utils/settings';\n\ntype CanvasProps = {\n  onNextCard: (lines: any) => void;\n  maxWidth: number;\n};\n\nconst duration = SETTINGS.DURATION / SETTINGS.DRAWINGS;\n\nexport function Canvas({ onNextCard, maxWidth }: CanvasProps) {\n  const [lines, setLines] = useState<CanvasLine[]>([]);\n\n  const { timeLeft } = useCountdown({\n    duration: duration + 2,\n    autoStart: true,\n    onExpire: () => {\n      onNextCard(lines);\n    },\n  });\n\n  return (\n    <Flex className=\"full-width\" vertical style={{ maxWidth }}>\n      <TimerBar value={timeLeft - 1} total={duration} className=\"picaco-time-bar\" />\n      {timeLeft < 12 && (\n        <DrawingCanvas\n          lines={lines}\n          className={getAnimationClass('zoomIn', { speed: 'faster' })}\n          setLines={setLines}\n          strokeWidth=\"small\"\n          style={{\n            transform: `scale(${maxWidth / 500})`,\n            transformOrigin: 'top center',\n          }}\n        />\n      )}\n    </Flex>\n  );\n}\n","// Ant Design Resources\nimport { Typography } from 'antd';\n// Components\nimport { Translate } from 'components/language';\n\nexport function Rules() {\n  return (\n    <Typography>\n      <Translate\n        pt={\n          <>\n            <li>Contribua com o banco de dados do TD!</li>\n            <li>A cada 10 segundos, você irá ler uma expressão e desenhar.</li>\n            <li>Após 6 expressões, ou 1 minuto, seus desenhos serão salvos no banco de dados.</li>\n            <li>Tente fazer o melhor possível, evite pornografia, e foque nos detalhes.</li>\n            <li>Boa sorte!</li>\n          </>\n        }\n        en={\n          <>\n            <li>Contribute to TD's database!</li>\n            <li>Every 10 seconds, you will read an expression and draw.</li>\n            <li>After 6 expressions or 1 minute, your drawings will be saved in the database</li>\n            <li>Try to do your best possible, avoid NSFW content, and focus on the details.</li>\n            <li>Good luck!</li>\n          </>\n        }\n      />\n    </Typography>\n  );\n}\n","import { NextGameSuggestion } from 'pages/Daily/components/NextGameSuggestion';\nimport { useMemo, useState } from 'react';\nimport { useMeasure } from 'react-use';\n// Ant Design Resources\nimport { Button, Divider, Layout } from 'antd';\n// Types\nimport type { Me } from 'types/user';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Icons\nimport { AnimatedProcessingIcon } from 'icons/AnimatedProcessingIcon';\nimport { DailyDrawingGameIcon } from 'icons/DailyDrawingGameIcon';\nimport { ThumbsUpIcon } from 'icons/ThumbsUpIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { Card } from 'components/cards';\nimport { DualTranslate, Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { TimeHighlight } from 'components/metrics/TimeHighlight';\nimport { Instruction } from 'components/text';\n// Internal\nimport { getInitialState } from '../utils/helpers';\nimport { SETTINGS } from '../utils/settings';\nimport type { DailyPicacoEntry } from '../utils/types';\nimport { usePicacoEngine } from '../utils/usePicacoEngine';\nimport { Header } from '../../../components/Header';\nimport { Menu } from '../../../components/Menu';\nimport { Canvas } from './Canvas';\nimport { Rules } from './Rules';\n\ntype DailyPicacoProps = {\n  data: DailyPicacoEntry;\n  currentUser: Me;\n};\n\nexport function DailyPicaco({ data, currentUser }: DailyPicacoProps) {\n  const [initialState] = useState(getInitialState(data));\n  const { cardNumber, card, onNextCard, isPlaying, isIdle, isSaving, alreadyPlayed, onStart } =\n    usePicacoEngine(data, currentUser, initialState);\n\n  // UI state\n  const [contentRef, contentMeasure] = useMeasure<HTMLDivElement>();\n  const [headerRef, headerMeasure] = useMeasure<HTMLDivElement>();\n  const maxWidth = useMemo(() => {\n    const width = contentMeasure.width - 24;\n    const height = contentMeasure.height - headerMeasure.height - 24;\n    return Math.max(Math.min(width, height, 500), 150);\n  }, [contentMeasure.height, contentMeasure.width, headerMeasure.height]);\n\n  return (\n    <Layout className=\"app\">\n      <Header icon={<DailyDrawingGameIcon />} localStorageKey={SETTINGS.KEY}>\n        TD <DualTranslate>{SETTINGS.NAME}</DualTranslate> #{data.number}\n      </Header>\n      <Layout.Content ref={contentRef}>\n        <div ref={headerRef}>\n          <Menu hearts={0} total={0} openRules rules={<Rules />} />\n          {alreadyPlayed && (\n            <Instruction className=\"info-screen\">\n              <IconAvatar icon={<ThumbsUpIcon />} />\n              <Translate pt=\"Você já jogou hoje!\" en=\"You've already played today!\" />\n              <Translate pt=\"Volte amanhã para jogar novamente!\" en=\"Come back tomorrow to play again!\" />\n              <Divider />\n              <NextGameSuggestion />\n            </Instruction>\n          )}\n\n          {!alreadyPlayed && !isSaving && (\n            <SpaceContainer>\n              <Card\n                key={isPlaying ? card.id : 'none'}\n                header={isPlaying ? `#${cardNumber}` : '?'}\n                color=\"gold\"\n                className={!isPlaying ? 'invisible' : getAnimationClass('tada')}\n              >\n                {!isPlaying ? (\n                  <>\n                    Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut\n                    labore et dolore.\n                  </>\n                ) : (\n                  card.text\n                )}\n              </Card>\n            </SpaceContainer>\n          )}\n        </div>\n\n        {isPlaying && (\n          <SpaceContainer>\n            <Canvas key={card.id} maxWidth={maxWidth} onNextCard={onNextCard} />\n          </SpaceContainer>\n        )}\n\n        {isSaving && (\n          <Instruction className=\"info-screen\">\n            <IconAvatar icon={<AnimatedProcessingIcon />} />\n            <Translate pt=\"Salvando\" en=\"Saving\" />\n          </Instruction>\n        )}\n\n        {isIdle && !alreadyPlayed && (\n          <SpaceContainer>\n            <SpaceContainer vertical>\n              <Instruction contained>\n                <Translate\n                  pt={\n                    <>\n                      Você tem <TimeHighlight>{SETTINGS.DURATION / SETTINGS.DRAWINGS}</TimeHighlight> segundos\n                      para fazer cada um dos {SETTINGS.DRAWINGS} desenhos.\n                      <br />\n                      Você <strong>NÃO</strong> pode usar letras ou números.\n                      <br />O tempo começa assim que você aperta \"Começar\".\n                    </>\n                  }\n                  en={\n                    <>\n                      You have <TimeHighlight>{SETTINGS.DURATION / SETTINGS.DRAWINGS}</TimeHighlight> seconds\n                      to draw each of the {SETTINGS.DRAWINGS} drawings.\n                      <br />\n                      You <strong>CANNOT</strong> use letters or numbers.\n                      <br />\n                      The time starts as soon as you press \"Start\".\n                    </>\n                  }\n                />\n              </Instruction>\n              <Button type=\"primary\" size=\"large\" onClick={onStart} disabled={alreadyPlayed}>\n                {isSaving ? <Translate pt=\"Salvando\" en=\"Saving\" /> : <Translate pt=\"Começar\" en=\"Start\" />}\n              </Button>\n            </SpaceContainer>\n          </SpaceContainer>\n        )}\n      </Layout.Content>\n    </Layout>\n  );\n}\n","import { DailyError } from 'pages/Daily/components/DailyError';\nimport { DailyLoading } from 'pages/Daily/components/DailyLoading';\n// Hooks\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\n// Internal\nimport { DailyPicaco } from './components/DailyPicaco';\nimport { useDailyChallenge } from '../../hooks/useDailyChallenge';\n// Sass\nimport './utils/styles.scss';\n\nexport function DailyPicacoGame() {\n  const { currentUser, isLoading } = useCurrentUserContext();\n\n  // Load challenge\n  const challengeQuery = useDailyChallenge();\n\n  if (challengeQuery.isLoading || isLoading) {\n    return <DailyLoading />;\n  }\n\n  const dailyData = challengeQuery?.data?.artista;\n\n  if (challengeQuery.isError || !dailyData) {\n    return <DailyError />;\n  }\n\n  return <DailyPicaco data={dailyData} currentUser={currentUser} />;\n}\n","import { loadLocalToday } from 'pages/Daily/utils';\n// Utils\nimport { deepCopy } from 'utils/helpers';\n// Internal\nimport { SETTINGS } from './settings';\nimport type { DailyTeoriaDeConjuntosEntry, GameState, TeoriaDeConjuntosLocalToday } from './types';\n\nexport const DEFAULT_LOCAL_TODAY: TeoriaDeConjuntosLocalToday = {\n  id: '',\n  guesses: [],\n  hearts: SETTINGS.HEARTS,\n};\n\nexport const getInitialState = (data: DailyTeoriaDeConjuntosEntry): GameState => {\n  const localToday = loadLocalToday({\n    key: SETTINGS.KEY,\n    gameId: data.id,\n    defaultValue: deepCopy(DEFAULT_LOCAL_TODAY),\n  });\n\n  const state: GameState = {\n    hearts: SETTINGS.HEARTS,\n    win: false,\n    hand: data.things.slice(0, 4),\n    deck: data.things.slice(4),\n    rule1Things: [\n      {\n        id: data.rule1.thing.id,\n        name: data.rule1.thing.name,\n        rule: 1,\n      },\n    ],\n    rule2Things: [\n      {\n        id: data.rule2.thing.id,\n        name: data.rule2.thing.name,\n        rule: 2,\n      },\n    ],\n    intersectingThings: [\n      {\n        id: data.intersectingThing.id,\n        name: data.intersectingThing.name,\n      },\n    ],\n    activeThing: null,\n    activeArea: null,\n    guesses: [],\n  };\n\n  // Apply local state\n  localToday.guesses.forEach((guess) => {\n    const activeThing = state.hand.find((t) => t.id === guess.thingId);\n\n    if (activeThing) {\n      // Remove it from hand\n      state.hand = state.hand.filter((t) => t.id !== guess.thingId);\n\n      // Place it correctly\n      if (activeThing.rule === 1) {\n        state.rule1Things.push(activeThing);\n      } else if (activeThing.rule === 2) {\n        state.rule2Things.push(activeThing);\n      } else if (activeThing.rule === 0) {\n        state.intersectingThings.push(activeThing);\n      }\n\n      if (activeThing.rule !== guess.sectionId) {\n        if (state.deck.length > 0) {\n          const thing = state.deck.pop();\n          if (thing) {\n            state.hand.push(thing);\n          }\n        }\n      } else {\n        if (state.hand.length === 0) {\n          state.win = true;\n        }\n      }\n    }\n  });\n\n  state.guesses = localToday.guesses ?? state.guesses ?? [];\n  state.hearts = localToday.hearts ?? state.hearts ?? SETTINGS.HEARTS;\n\n  return state;\n};\n","import type { ReactNode } from 'react';\n\ntype DiagramProps = {\n  leftCircleChildren: ReactNode;\n  rightCircleChildren: ReactNode;\n  intersectionChildren: ReactNode;\n} & React.SVGProps<SVGSVGElement>;\n\nexport function Diagram({\n  leftCircleChildren,\n  rightCircleChildren,\n  intersectionChildren,\n  ...props\n}: DiagramProps) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 760 500\" {...props}>\n      <path\n        fill=\"#fbb03b\"\n        stroke=\"#000\"\n        strokeMiterlimit=\"10\"\n        strokeWidth=\"5\"\n        d=\"M252.78 3.5c-136.42 0-247 110.59-247 247s110.59 247 247 247 247-110.59 247-247-110.59-247-247-247zm.99 483.07C123.39 486.57 17.7 380.88 17.7 250.5S123.39 14.43 253.77 14.43 489.84 120.12 489.84 250.5 384.15 486.57 253.77 486.57z\"\n      ></path>\n      <path\n        fill=\"#f15a24\"\n        stroke=\"#000\"\n        strokeMiterlimit=\"10\"\n        strokeWidth=\"5\"\n        d=\"M508.22 3.5c-136.41 0-247 110.59-247 247s110.59 247 247 247 247-110.59 247-247-110.58-247-247-247zm.99 483.07c-130.38 0-236.07-105.69-236.07-236.07S378.84 14.43 509.22 14.43 745.29 120.12 745.29 250.5 639.6 486.57 509.22 486.57z\"\n      ></path>\n      <path\n        fill=\"#eee\"\n        d=\"M487.34 250.5c0-62.39-24.29-121.04-68.41-165.16a235.9 235.9 0 00-37.43-30.47 235.35 235.35 0 00-37.43 30.47c-44.12 44.11-68.41 102.77-68.41 165.16s24.29 121.04 68.41 165.16a235.9 235.9 0 0037.43 30.47 235.35 235.35 0 0037.43-30.47c44.12-44.11 68.41-102.77 68.41-165.16z\"\n      ></path>\n      <path\n        // fill=\"#535353\"\n        fill=\"#eee\"\n        d=\"M258.72 250.5c0-66.64 25.95-129.3 73.08-176.42a253.125 253.125 0 0134.1-28.57c-33.98-18.65-72.29-28.57-112.13-28.57-62.39 0-121.04 24.29-165.16 68.41C44.5 129.46 20.2 188.11 20.2 250.5s24.29 121.04 68.41 165.16c44.11 44.12 102.77 68.41 165.16 68.41 39.84 0 78.15-9.92 112.13-28.57a252.507 252.507 0 01-34.1-28.57c-47.12-47.12-73.08-109.78-73.08-176.42zM674.37 85.34C630.25 41.22 571.6 16.93 509.21 16.93c-40.27 0-78.98 10.14-113.24 29.18 11.74 8.26 22.86 17.6 33.22 27.96 47.12 47.12 73.08 109.78 73.08 176.42s-25.95 129.3-73.08 176.42a252.312 252.312 0 01-33.22 27.96c34.25 19.04 72.96 29.18 113.24 29.18 62.39 0 121.04-24.29 165.16-68.41 44.12-44.11 68.41-102.77 68.41-165.16s-24.29-121.04-68.41-165.16z\"\n      ></path>\n      <foreignObject x=\"30\" y=\"25\" width=\"250\" height=\"450\">\n        <div className=\"venn-diagram__circle-content-left\">{leftCircleChildren}</div>\n      </foreignObject>\n      <foreignObject x=\"480\" y=\"25\" width=\"250\" height=\"450\">\n        <div className=\"venn-diagram__circle-content-right\">{rightCircleChildren}</div>\n      </foreignObject>\n      <foreignObject x=\"290\" y=\"65\" width=\"182\" height=\"370\">\n        <div className=\"venn-diagram__circle-content-intersection\">{intersectionChildren}</div>\n      </foreignObject>\n    </svg>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Flex, Typography } from 'antd';\n// Components\nimport { ItemCard } from 'components/cards/ItemCard';\n\ntype ThingProps = {\n  itemId: string;\n  name: string;\n  width?: number;\n  className?: string;\n  minimize?: boolean;\n};\n\nexport function Thing({ itemId, name, width = 50, className, minimize }: ThingProps) {\n  return (\n    <Flex vertical align=\"center\" className={clsx('thing', className)}>\n      {!minimize && (\n        <ItemCard\n          id={itemId}\n          width={Math.max(Math.min(width, 100), 35)}\n          padding={0}\n          className=\"thing__sprite\"\n        />\n      )}\n      <Typography.Text code key={itemId} className=\"thing__name\">\n        {name}\n      </Typography.Text>\n    </Flex>\n  );\n}\n","// Internal\nimport type { TThing } from '../utils/types';\nimport { Thing } from './Thing';\n\ntype InDiagramThingsProps = {\n  things: TThing[];\n  width: number;\n};\n\nexport function InDiagramThings({ things, width }: InDiagramThingsProps) {\n  return (\n    <>\n      {things.map((thing, index, arr) => {\n        const isLatestThing = index === arr.length - 1;\n\n        return (\n          <Thing\n            key={thing.id}\n            itemId={thing.id}\n            name={thing.name}\n            width={width * (isLatestThing ? 2 : 1)}\n            className=\"thing-enlarged\"\n            minimize={arr.length > 3 && !isLatestThing}\n          />\n        );\n      })}\n    </>\n  );\n}\n","import { Region } from 'pages/Daily/components/Region';\n// Ant Design Resources\nimport { CaretDownOutlined } from '@ant-design/icons';\nimport { Flex, Modal } from 'antd';\n// Components\nimport { Translate } from 'components/language';\n// Internal\nimport type { useTeoriaDeConjuntosEngine } from '../utils/useTeoriaDeConjuntosEngine';\nimport { Thing } from './Thing';\n\ntype PlacementModalProps = Pick<\n  ReturnType<typeof useTeoriaDeConjuntosEngine>,\n  | 'activeThing'\n  | 'activeArea'\n  | 'onSelectArea'\n  | 'onConfirmPlacement'\n  | 'rule1Things'\n  | 'rule2Things'\n  | 'intersectingThings'\n>;\n\nexport function PlacementModal({\n  activeThing,\n  activeArea,\n  onSelectArea,\n  onConfirmPlacement,\n  rule1Things,\n  rule2Things,\n  intersectingThings,\n}: PlacementModalProps) {\n  const title = {\n    1: <Translate pt=\"no círculo da esquerda\" en=\"in the left circle?\" />,\n    2: <Translate pt=\"no círculo da direita\" en=\"in the right circle?\" />,\n    0: <Translate pt=\"na interseção\" en=\"in the intersection?\" />,\n    null: <Translate pt=\"\" en=\"\" />,\n  }[String(activeArea)] ?? <Translate pt=\"\" en=\"\" />;\n\n  const things =\n    {\n      1: rule1Things,\n      2: rule2Things,\n      0: intersectingThings,\n      null: [],\n    }[String(activeArea)] ?? [];\n\n  return (\n    <Modal\n      title={\n        <>\n          <Translate\n            pt={`Tem certeza que quer colocar ${activeThing?.name} `}\n            en={`Are you sure you want to place ${activeThing?.name} `}\n          />\n          {title}\n        </>\n      }\n      open\n      onCancel={() => onSelectArea(null)}\n      cancelText={<Translate pt=\"Não\" en=\"No\" />}\n      onOk={() => onConfirmPlacement()}\n      okText={<Translate pt=\"Sim\" en=\"Yes\" />}\n    >\n      <Region>\n        {activeThing && <Thing itemId={activeThing?.id} name={activeThing?.name} width={50} />}\n        <CaretDownOutlined />\n        <Flex wrap=\"wrap\" align=\"center\" justify=\"center\" gap={6} className=\"diagram-area-sample\">\n          {things.map((thing) => (\n            <Thing key={thing.id} itemId={thing.id} name={thing.name} width={50} />\n          ))}\n        </Flex>\n      </Region>\n    </Modal>\n  );\n}\n","import { NextGameSuggestion } from 'pages/Daily/components/NextGameSuggestion';\nimport { getSourceName, writeHeartResultString } from 'pages/Daily/utils';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Icons\nimport { BoxXIcon } from 'icons/BoxXIcon';\nimport { CircleIcon } from 'icons/CircleIcon';\nimport { TrophyIcon } from 'icons/TrophyIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\n// Internal\nimport { SETTINGS } from '../utils/settings';\nimport type { useTeoriaDeConjuntosEngine } from '../utils/useTeoriaDeConjuntosEngine';\nimport type { DailyTeoriaDeConjuntosEntry } from '../utils/types';\nimport { CopyToClipboardResult } from '../../../components/CopyToClipboardResult';\n\ntype ResultsModalContentProps = {\n  challenge: number;\n  isWin: boolean;\n  hearts: number;\n  guesses: ReturnType<typeof useTeoriaDeConjuntosEngine>['guesses'];\n  data: DailyTeoriaDeConjuntosEntry;\n};\n\nexport function ResultsModalContent({ challenge, isWin, hearts, guesses, data }: ResultsModalContentProps) {\n  const { language, dualTranslate } = useLanguage();\n\n  const result = writeResult({\n    game: dualTranslate(SETTINGS.NAME),\n    challenge,\n    remainingHearts: hearts,\n    language,\n    guesses,\n  });\n\n  return (\n    <SpaceContainer vertical>\n      <Typography.Title level={2} className=\"center\">\n        {isWin ? (\n          <>\n            <IconAvatar icon={<TrophyIcon />} /> <Translate pt=\"Parabéns!\" en=\"Congratulations!\" />\n          </>\n        ) : (\n          <>\n            <IconAvatar icon={<BoxXIcon />} /> <Translate pt=\"Que pena!\" en=\"Too bad!\" />\n          </>\n        )}\n      </Typography.Title>\n\n      <Typography.Paragraph className=\"center\">\n        Regra do círculo <IconAvatar icon={<CircleIcon mainColor=\"gold\" />} size=\"small\" />\n        <br />\n        <Typography.Text code> {data.rule1.text}</Typography.Text>\n      </Typography.Paragraph>\n\n      <Typography.Paragraph className=\"center\">\n        Regra do círculo <IconAvatar icon={<CircleIcon mainColor=\"red\" />} size=\"small\" />\n        <br />\n        <Typography.Text code> {data.rule2.text}</Typography.Text>\n      </Typography.Paragraph>\n\n      <CopyToClipboardResult result={result} rows={3} />\n\n      <NextGameSuggestion />\n    </SpaceContainer>\n  );\n}\n\nfunction writeResult({\n  game,\n  challenge,\n  remainingHearts,\n  language,\n  guesses,\n}: {\n  game: string;\n  challenge: number;\n  remainingHearts: number;\n  language: Language;\n  guesses: ReturnType<typeof useTeoriaDeConjuntosEngine>['guesses'];\n}) {\n  const cleanUpAttempts = guesses.map((guess) => {\n    return {\n      1: '🟡',\n      2: '🔴',\n      0: '🟠',\n      false: '✖️',\n    }[String(guess.result)];\n  });\n\n  return [\n    `${SETTINGS.ICON} TD ${game} #${challenge}`,\n    `${writeHeartResultString(remainingHearts, SETTINGS.HEARTS, ' ')}`,\n    cleanUpAttempts.join(' '),\n    `https://www.kavispires.com/tardedivertida/#/${getSourceName(language)}`,\n  ].join('\\n');\n}\n","// Ant Design Resources\nimport { HeartFilled } from '@ant-design/icons';\nimport { Typography } from 'antd';\n// Components\nimport { Translate } from 'components/language';\n// Internal\nimport { SETTINGS } from '../utils/settings';\n\nexport function Rules() {\n  return (\n    <Typography>\n      <Translate\n        pt={\n          <>\n            <li>Existem dois círculos conectados formando um diagrama com uma intercessão.</li>\n            <li>\n              Cada um dos dois círculo possui uma regra gramatical secreta que pode ir desde \"Começa com B\" ou\n              \"Tem três sílabas\" ou \"Tem mais consoantes que vogais\", etc.\n            </li>\n            <li>\n              Para começar, existe uma \"coisa\" em cada uma das áreas do diagrama. A coisa na área central\n              obedece a regra do círculo amarelo e a do vermelho, enquanto a coisa em só um lado obedece\n              somente a regra daquele círculo. Teoria de conjuntos básica! Matemática 5a série.\n            </li>\n            <li>O objetivo é você colocar 4 coisas, uma a uma, na área correta do diagrama.</li>\n            <li>\n              Se você colocar uma coisa na área errada, o jogo vai colocar a coisa na área correta, você perde\n              uma vida, e ganha uma coisa para posicionar.\n            </li>\n            <li>\n              Dica: o título do jogo é uma pista sobre a regra dos círculos. \"Gramática\" pode ser sobre o\n              número de sílabas ou sílaba tônica, \"Contagem\" sobre quantidade de letras. \"Inclusão\" sobre se\n              tem uma letra específica, etc...\n            </li>\n\n            <li>\n              Você tem {SETTINGS.HEARTS} <HeartFilled /> chances. Boa sorte!\n            </li>\n          </>\n        }\n        en={\n          <>\n            <li>There are two connected circles forming a diagram with an intersection.</li>\n            <li>\n              Each of the two circles has a secret grammar rule that can range from \"Starts with B\" or \"Has\n              three syllables\" or \"Has more consonants than vowels\"\n            </li>\n            <li>\n              To start, there is a \"thing\" in each of the diagram areas. The thing in the central area obeys\n              the rule of the yellow circle and the red one, while the thing on just one side obeys only the\n              rule of that circle. Basic set theory! 5th grade math.\n            </li>\n            <li>The goal is for you to place 4 things, one by one, in the correct area of the diagram.</li>\n            <li>\n              If you place a thing in the wrong area, the game will place the thing in the correct area, you\n              lose a heart, and gain a thing to position.\n            </li>\n            <li>\n              You have {SETTINGS.HEARTS} <HeartFilled /> chances. Good luck!\n            </li>\n          </>\n        }\n      />\n    </Typography>\n  );\n}\n","import { Region } from 'pages/Daily/components/Region';\nimport { useToggle } from 'react-use';\n// Ant Design Resources\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport { Button, Modal, Typography } from 'antd';\n// Components\nimport { Translate } from 'components/language';\n\nexport function RulesHints() {\n  const [showTipsModal, toggleTipsModal] = useToggle(false);\n\n  return (\n    <>\n      <Region className=\"rules-hints\">\n        <Button onClick={() => toggleTipsModal(true)} icon={<QuestionCircleOutlined />} ghost>\n          <Translate pt=\"Entenda as regras gramaticais\" en=\"Understand the grammar rules\" />\n        </Button>\n      </Region>\n      <Modal\n        title={<Translate pt=\"Regras gramaticais\" en=\"Grammar rules\" />}\n        open={showTipsModal}\n        footer={null}\n        onCancel={toggleTipsModal}\n      >\n        <Typography.Paragraph>\n          O título do jogo diário contém dicas sobres as regras gramaticais secretas dos círculos em forma de\n          categorias.\n          <br />\n          As estrelas é a classificação do nível de dificuldade das regras (1-5).\n        </Typography.Paragraph>\n\n        <Entry category=\"Comparação\" hints={['Quantidade de vogais vs consoantes ou posição']} />\n\n        <Entry\n          category=\"Contagem\"\n          hints={['Contém um número específico de letras, vogais, consoantes, ou sílabas']}\n        />\n\n        <Entry category=\"Gramática\" hints={['Sílaba tônica, origem, gênero']} />\n\n        <Entry category=\"Inclusão\" hints={['Contém uma ou mais letras específicas']} />\n\n        <Entry category=\"Inicialização\" hints={['Começa com uma letra (ou letras) específica']} />\n\n        <Entry category=\"Repetição\" hints={['Contém letras repetidas ou repetidas de maneira específica']} />\n\n        <Entry category=\"Sequência\" hints={['Contém uma sequência de letras específica']} />\n\n        <Entry category=\"Terminação\" hints={['Termina com uma letra (ou letras) específica']} />\n      </Modal>\n    </>\n  );\n}\n\nfunction Entry({ category, hints }: { category: string; hints: string[] }) {\n  return (\n    <>\n      <Typography.Paragraph>\n        <Typography.Text strong>{category}: </Typography.Text>\n        {hints.join(', ')}.\n      </Typography.Paragraph>\n      <ul></ul>\n    </>\n  );\n}\n","import clsx from 'clsx';\nimport { Region, TextRegion } from 'pages/Daily/components/Region';\nimport { useMemo, useState } from 'react';\nimport { useMeasure } from 'react-use';\n// Ant Design Resources\nimport { BarChartOutlined } from '@ant-design/icons';\nimport { Button, Layout, Modal, Rate, Tooltip, Typography } from 'antd';\n// Types\nimport type { Me } from 'types/user';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Icons\nimport { DailyDiagramGameIcon } from 'icons/DailyDiagramGameIcon';\n// Components\nimport { TransparentButton } from 'components/buttons';\nimport { DualTranslate, Translate } from 'components/language';\n// Internal\nimport { getInitialState } from '../utils/helpers';\nimport { SETTINGS } from '../utils/settings';\nimport type { DailyTeoriaDeConjuntosEntry } from '../utils/types';\nimport { useTeoriaDeConjuntosEngine } from '../utils/useTeoriaDeConjuntosEngine';\nimport { Header } from '../../../components/Header';\nimport { Menu } from '../../../components/Menu';\nimport { Diagram } from './Diagram';\nimport { InDiagramThings } from './InDiagramThings';\nimport { PlacementModal } from './PlacementModal';\nimport { ResultsModalContent } from './ResultsModalContent';\nimport { Rules } from './Rules';\nimport { RulesHints } from './RulesHints';\nimport { Thing } from './Thing';\n\ntype DailyTeoriaDeConjuntosProps = {\n  data: DailyTeoriaDeConjuntosEntry;\n  currentUser: Me;\n};\n\nexport function DailyTeoriaDeConjuntos({ data }: DailyTeoriaDeConjuntosProps) {\n  const [initialState] = useState(getInitialState(data));\n  const {\n    hearts,\n    showResultModal,\n    setShowResultModal,\n    isWin,\n    isComplete,\n    hand,\n    rule1Things,\n    rule2Things,\n    intersectingThings,\n    activeThing,\n    activeArea,\n    onSelectThing,\n    onSelectArea,\n    onConfirmPlacement,\n    guesses,\n  } = useTeoriaDeConjuntosEngine(data, initialState);\n\n  const [contentRef, contentMeasure] = useMeasure<HTMLDivElement>();\n\n  const thingWidth = useMemo(() => {\n    const totalWidth = contentMeasure.width / 6 - 16;\n    return Math.min(Math.max(totalWidth, 48), 96);\n  }, [contentMeasure.width]);\n\n  return (\n    <Layout className=\"app\">\n      <Header icon={<DailyDiagramGameIcon />} localStorageKey={SETTINGS.KEY}>\n        <DualTranslate>{SETTINGS.NAME}</DualTranslate> #{data.number}\n      </Header>\n      <Layout.Content ref={contentRef}>\n        <Menu hearts={hearts} total={SETTINGS.HEARTS} openRules={true} rules={<Rules />} />\n\n        <Region>\n          <Typography.Text strong className=\"teoria-de-conjuntos-title\">\n            {data.title}\n          </Typography.Text>\n          <Tooltip title={<Translate pt=\"Dificuldade\" en=\"Difficulty\" />}>\n            <Rate disabled value={data.level} count={data.level} />\n          </Tooltip>\n        </Region>\n\n        <Region>\n          <Diagram\n            width={Math.min(contentMeasure.width - 16, 600)}\n            leftCircleChildren={\n              isComplete ? (\n                <InDiagramThings things={rule1Things} width={thingWidth} />\n              ) : (\n                <TransparentButton onClick={() => onSelectArea(1)} disabled={isComplete} hoverType=\"none\">\n                  <InDiagramThings things={rule1Things} width={thingWidth} />\n                </TransparentButton>\n              )\n            }\n            rightCircleChildren={\n              isComplete ? (\n                <InDiagramThings things={rule2Things} width={thingWidth} />\n              ) : (\n                <TransparentButton onClick={() => onSelectArea(2)} disabled={isComplete} hoverType=\"none\">\n                  <InDiagramThings things={rule2Things} width={thingWidth} />\n                </TransparentButton>\n              )\n            }\n            intersectionChildren={\n              isComplete ? (\n                <InDiagramThings things={intersectingThings} width={thingWidth} />\n              ) : (\n                <TransparentButton onClick={() => onSelectArea(0)} disabled={isComplete} hoverType=\"none\">\n                  <InDiagramThings things={intersectingThings} width={thingWidth} />\n                </TransparentButton>\n              )\n            }\n          />\n        </Region>\n\n        {isComplete ? (\n          <TextRegion>\n            <Translate pt=\"Você já completou o desafio!\" en=\"You have already completed the challenge!\" />\n          </TextRegion>\n        ) : (\n          <TextRegion>\n            <Translate\n              pt=\"Selecione uma coisa e coloque na área correta:\"\n              en=\"Select a thing and place it in the correct area:\"\n            />\n          </TextRegion>\n        )}\n\n        {isComplete && (\n          <Region>\n            <Button onClick={() => setShowResultModal(true)} type=\"primary\" icon={<BarChartOutlined />}>\n              <Translate pt=\"Ver Resultado\" en=\"Show Results\" />\n            </Button>\n          </Region>\n        )}\n\n        <Region className=\"space-center\" direction=\"horizontal\">\n          {hand.map((thing) => (\n            <TransparentButton\n              key={thing.id}\n              className={clsx('thing-button', getAnimationClass('heartBeat'))}\n              activeClass=\"thing-button__active\"\n              onClick={() => onSelectThing(thing)}\n              active={thing.id === activeThing?.id}\n              disabled={isComplete}\n              hoverType=\"none\"\n            >\n              <Thing itemId={thing.id} name={thing.name} width={thingWidth} />\n            </TransparentButton>\n          ))}\n        </Region>\n\n        <RulesHints />\n\n        {activeThing && activeArea !== null && (\n          <PlacementModal\n            activeThing={activeThing}\n            activeArea={activeArea}\n            onSelectArea={onSelectArea}\n            onConfirmPlacement={onConfirmPlacement}\n            rule1Things={rule1Things}\n            rule2Things={rule2Things}\n            intersectingThings={intersectingThings}\n          />\n        )}\n\n        <Modal\n          title={<Translate pt=\"Resultado\" en=\"Results\" />}\n          open={showResultModal}\n          onCancel={() => setShowResultModal(false)}\n          footer={null}\n        >\n          <ResultsModalContent\n            challenge={data?.number}\n            isWin={isWin}\n            hearts={hearts}\n            guesses={guesses}\n            data={data}\n          />\n        </Modal>\n      </Layout.Content>\n    </Layout>\n  );\n}\n","import { useDailyGameState } from 'pages/Daily/hooks/useDailyGameState';\nimport { useDailyLocalToday, useMarkAsPlayed } from 'pages/Daily/hooks/useDailyLocalToday';\nimport { useShowResultModal } from 'pages/Daily/hooks/useShowResultModal';\n// Ant Design Resources\nimport { App } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { deepCopy } from 'utils/helpers';\n// Internal\nimport { DEFAULT_LOCAL_TODAY } from './helpers';\nimport { SETTINGS } from './settings';\nimport type {\n  DailyTeoriaDeConjuntosEntry,\n  GameState,\n  Guess,\n  TeoriaDeConjuntosLocalToday,\n  TThing,\n} from './types';\n\nexport function useTeoriaDeConjuntosEngine(data: DailyTeoriaDeConjuntosEntry, initialState: GameState) {\n  const { message } = App.useApp();\n  const { translate } = useLanguage();\n  const { state, setState, updateState } = useDailyGameState<GameState>(initialState);\n\n  const { updateLocalStorage } = useDailyLocalToday<TeoriaDeConjuntosLocalToday>({\n    key: SETTINGS.KEY,\n    gameId: data.id,\n    defaultValue: DEFAULT_LOCAL_TODAY,\n  });\n\n  // CONDITIONS\n  const isWin = state.win;\n  const isLose = state.hearts <= 0;\n  const isComplete = isWin || isLose;\n\n  useMarkAsPlayed({\n    key: SETTINGS.KEY,\n    isComplete,\n  });\n\n  // RESULTS MODAL\n  const { showResultModal, setShowResultModal } = useShowResultModal(isComplete);\n\n  const onSelectThing = (thing: TThing) => {\n    updateState({ activeThing: thing });\n  };\n\n  const onSelectArea = (area: number | null) => {\n    if (!state.activeThing) return;\n\n    updateState({ activeArea: area });\n  };\n\n  const onConfirmPlacement = () => {\n    if (!state.activeThing && state.activeArea === null) return;\n\n    let isCorrect = false;\n    if (state.activeThing?.rule === state.activeArea) {\n      isCorrect = true;\n      message.success({\n        content: translate('Correto!', 'Correct!'),\n      });\n    } else {\n      isCorrect = false;\n      message.error({\n        content: translate('Incorreto!', 'Incorrect!'),\n      });\n    }\n\n    let localStateUpdateGuesses = state.guesses;\n    let localStateUpdateHearts = state.hearts;\n\n    setState((prevState) => {\n      const copy = deepCopy(prevState);\n\n      if (state.activeThing && state.activeArea !== null) {\n        // Remove thing from hand\n        copy.hand = copy.hand.filter((thing) => thing.id !== state.activeThing?.id);\n\n        const guess: Guess = {\n          thingId: state.activeThing.id,\n          sectionId: state.activeArea,\n          result: state.activeArea,\n        };\n\n        // Add to the appropriate area\n        if (state.activeThing.rule === 1) {\n          copy.rule1Things.push(state.activeThing);\n        } else if (state.activeThing.rule === 2) {\n          copy.rule2Things.push(state.activeThing);\n        } else if (state.activeThing.rule === 0) {\n          copy.intersectingThings.push(state.activeThing);\n        }\n\n        // If incorrect, add from the deck and lose a heart\n        if (!isCorrect) {\n          guess.result = false;\n          copy.hearts -= 1;\n          localStateUpdateHearts -= 1;\n          if (copy.deck.length > 0) {\n            const thing = copy.deck.pop();\n            if (thing) {\n              copy.hand.push(thing);\n            }\n          }\n        }\n\n        // Add guess\n        copy.guesses.push(guess);\n        localStateUpdateGuesses = deepCopy(copy.guesses);\n\n        // Remove active things\n        copy.activeThing = null;\n        copy.activeArea = null;\n\n        // Check if all things are placed and update win state\n        if (copy.hand.length === 0) {\n          copy.win = true;\n        }\n      }\n\n      return copy;\n    });\n\n    // Update local today\n    updateLocalStorage({\n      guesses: localStateUpdateGuesses,\n      hearts: localStateUpdateHearts,\n    });\n  };\n\n  return {\n    hearts: state.hearts,\n    showResultModal,\n    setShowResultModal,\n    isWin,\n    isLose,\n    isComplete,\n    hand: state.hand,\n    rule1Things: state.rule1Things,\n    rule2Things: state.rule2Things,\n    intersectingThings: state.intersectingThings,\n    activeThing: state.activeThing,\n    activeArea: state.activeArea,\n    guesses: state.guesses,\n    onSelectThing,\n    onSelectArea,\n    onConfirmPlacement,\n  };\n}\n","import { DailyError } from 'pages/Daily/components/DailyError';\nimport { DailyLoading } from 'pages/Daily/components/DailyLoading';\nimport { useDailyChallenge } from 'pages/Daily/hooks/useDailyChallenge';\n// Hooks\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\n// Internal\nimport { DailyTeoriaDeConjuntos } from './components/DailyTeoriaDeConjuntos';\n// Sass\nimport './utils/styles.scss';\n\nexport function DailyTeoriaDeConjuntosGame() {\n  const { currentUser } = useCurrentUserContext();\n\n  // Load challenge\n  const challengeQuery = useDailyChallenge();\n\n  if (challengeQuery.isLoading || challengeQuery.isRefetching) {\n    return <DailyLoading />;\n  }\n  const dailyData = challengeQuery?.data?.['teoria-de-conjuntos'];\n\n  if (challengeQuery.isError || !dailyData) {\n    return <DailyError />;\n  }\n\n  return <DailyTeoriaDeConjuntos data={dailyData} currentUser={currentUser} />;\n}\n","import { useQuery } from '@tanstack/react-query';\nimport { getSourceName, wait } from 'pages/Daily/utils';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { print } from 'utils/helpers';\n// Internal\nimport DEMO from './demo.json';\nimport type { DailyComunicacaoAlienigenaEntry } from './types';\n// Services\n\nexport const useComunicacaoAlienigenaDemo = () => {\n  const { language } = useLanguage();\n  const collectionName = getSourceName(language);\n\n  // Load challenge\n  return useQuery<DailyComunicacaoAlienigenaEntry>({\n    queryKey: ['comunicacao-alienigena-demo'],\n    queryFn: async () => {\n      console.count(`Fetching ${collectionName}...`);\n      await wait(1250);\n      const responseData = DEMO[1] as DailyComunicacaoAlienigenaEntry;\n      print({ [collectionName]: responseData }, 'table');\n      return responseData;\n    },\n\n    enabled: language === 'pt',\n    retry: false,\n  });\n};\n","import { loadLocalToday } from 'pages/Daily/utils';\n// Utils\nimport { deepCopy } from 'utils/helpers';\n// Internal\nimport { SETTINGS } from './settings';\nimport type { ComunicacaoAlienigenaLocalToday, DailyComunicacaoAlienigenaEntry, GameState } from './types';\n\nexport const DEFAULT_LOCAL_TODAY: ComunicacaoAlienigenaLocalToday = {\n  id: '',\n  guesses: [],\n  number: 0,\n};\n\nexport const getInitialState = (data: DailyComunicacaoAlienigenaEntry): GameState => {\n  const localToday = loadLocalToday({\n    key: SETTINGS.KEY,\n    gameId: data.id,\n    defaultValue: deepCopy(DEFAULT_LOCAL_TODAY),\n  });\n\n  const state: GameState = {\n    hearts: SETTINGS.HEARTS,\n    guesses: [],\n    selection: [null, null, null, null],\n    latestAttempt: null,\n    win: false,\n    slotIndex: null,\n  };\n\n  if (localToday) {\n    state.hearts = SETTINGS.HEARTS - localToday.guesses.length;\n    state.guesses = localToday.guesses;\n  }\n\n  return state;\n};\n","import { NextGameSuggestion } from 'pages/Daily/components/NextGameSuggestion';\nimport { getDailyName, getSourceName } from 'pages/Daily/utils';\nimport { useMemo } from 'react';\n// Ant Design Resources\nimport { Flex, Space, Typography } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Icons\nimport { BoxXIcon } from 'icons/BoxXIcon';\nimport { TrophyIcon } from 'icons/TrophyIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { SignCard } from 'components/cards/SignCard';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\n// Internal\nimport { SETTINGS } from '../utils/settings';\nimport type { DailyComunicacaoAlienigenaEntry } from '../utils/types';\nimport { CopyToClipboardResult } from '../../../components/CopyToClipboardResult';\n\ntype ResultsModalContentProps = {\n  challenge: number;\n  guesses: string[];\n  attributes: DailyComunicacaoAlienigenaEntry['attributes'];\n  win: boolean;\n  hearts: number;\n  solution: string;\n  width: number;\n};\n\nexport function ResultsModalContent({\n  guesses,\n  attributes,\n  challenge,\n  win,\n  hearts,\n  solution,\n  width,\n}: ResultsModalContentProps) {\n  const { language, dualTranslate } = useLanguage();\n\n  const result = useMemo(\n    () =>\n      writeResult({\n        game: dualTranslate(SETTINGS.NAME),\n        challenge,\n        remainingHearts: hearts,\n        guesses,\n        solution,\n        language,\n      }),\n    [challenge, dualTranslate, guesses, hearts, language, solution],\n  );\n\n  return (\n    <SpaceContainer vertical>\n      <Typography.Title level={2} className=\"center\">\n        {win ? (\n          <>\n            <IconAvatar icon={<TrophyIcon />} /> <Translate pt=\"Parabéns!\" en=\"Congratulations!\" />\n          </>\n        ) : (\n          <>\n            <IconAvatar icon={<BoxXIcon />} /> <Translate pt=\"Que pena!\" en=\"Too bad!\" />\n          </>\n        )}\n      </Typography.Title>\n      <Typography.Paragraph className=\"center\">\n        {win ? (\n          <Translate pt=\"O alienígena abduziu todos os itens!\" en=\"The alien abducted all items!\" />\n        ) : (\n          <Translate\n            pt=\"O alienígena vai destruir a Terra porque você não estregou as coisas certas!\"\n            en=\"The alien will destroy Earth because you didn't deliver the right items!\"\n          />\n        )}\n      </Typography.Paragraph>\n\n      <Space direction=\"vertical\">\n        {attributes.map((attribute) => (\n          <Flex key={attribute.id} gap={6}>\n            <SignCard id={attribute.spriteId} width={width} />\n            <Flex vertical>\n              <Typography.Text strong>{attribute.name}</Typography.Text>\n              <Typography.Text italic>{attribute.description}</Typography.Text>\n            </Flex>\n          </Flex>\n        ))}\n      </Space>\n\n      <CopyToClipboardResult result={result} rows={3} />\n\n      <NextGameSuggestion />\n    </SpaceContainer>\n  );\n}\n\nfunction writeResult({\n  game,\n  challenge,\n  remainingHearts,\n  guesses,\n  solution,\n  language,\n}: {\n  game: string;\n  challenge: number;\n  remainingHearts: number;\n  guesses: string[];\n  solution: string;\n  language: Language;\n}) {\n  const solutionItems = solution.split('-');\n\n  const indexEmojis = ['🟤', '🟡', '🔵', '🟣'];\n\n  const result = guesses.map((guess) => {\n    const guessItems = guess.split('-');\n    return guessItems\n      .map((item, i) => {\n        // Correct?\n        if (item === solutionItems[i]) {\n          return indexEmojis[i];\n        }\n        // Incorrect?\n        if (solutionItems.includes(item)) {\n          return '❌';\n        }\n        // Missing?\n        return '👽';\n      })\n      .join('');\n  });\n\n  return [\n    `${SETTINGS.ICON} ${getDailyName(language)} ${game} #${challenge}`,\n    ...result,\n    `https://www.kavispires.com/tardedivertida/#/${getSourceName(language)}`,\n  ].join('\\n');\n}\n","// Ant Design Resources\nimport { HeartFilled } from '@ant-design/icons';\nimport { Typography } from 'antd';\n// Components\nimport { Translate } from 'components/language';\n// Internal\nimport { SETTINGS } from '../utils/settings';\n\nexport function Rules() {\n  return (\n    <Typography>\n      <Translate\n        pt={\n          <>\n            <li>\n              O alienígena precisa de sua ajuda para abduzir 4 coisas, porém ele não fala a língua dos\n              terráqueos.\n            </li>\n            <li>\n              O alienígena se comunica através de símbolos que representam um atributo em comum entre os\n              exemplos dados.\n            </li>\n            <li>\n              Por exemplo, o que uma bola, uma melancia e uma pizza tem em comum? Todos são redondos! Será que\n              o alienígena quer dizer que aquele símbolo significa redondo?\n            </li>\n            <li>\n              Você deve entregar as 4 coisas na ordem correta de uma vez. O alienígena apenas te diz se todas\n              estão corretas ou não.\n            </li>\n            <li>\n              Cada tentativa errada remove um coração e você tem apenas {SETTINGS.HEARTS} <HeartFilled />.\n            </li>\n            <li>Boa sorte!</li>\n          </>\n        }\n        en={\n          <>\n            <li>The alien needs to abduct some things, but it can't speak our language.</li>\n            <li>\n              The alien communicates through symbols that represent a common attribute between the given\n              examples.\n            </li>\n            <li>\n              For example, what does a ball, a watermelon, and a pizza have in common? They're all round! Does\n              the alien mean that symbol represents round?\n            </li>\n            <li>\n              You must deliver 4 things in the correct order and press send. The alien only tells you if all\n              are correct or not.\n            </li>\n            <li>\n              Each wrong attempt removes a heart and you only have 3 <HeartFilled />.\n            </li>\n            <li>Good luck!</li>\n          </>\n        }\n      />\n    </Typography>\n  );\n}\n","import clsx from 'clsx';\nimport { Region } from 'pages/Daily/components/Region';\nimport { useMemo, useState } from 'react';\n// Ant Design Resources\nimport { ArrowRightOutlined, BarChartOutlined } from '@ant-design/icons';\nimport { Avatar, Button, Flex, Layout, Modal, Space, Typography } from 'antd';\n// Types\nimport type { Me } from 'types/user';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Icons\nimport { DailyAlienGameIcon } from 'icons/DailyAlienGameIcon';\n// Components\nimport { TransparentButton } from 'components/buttons';\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { SignCard } from 'components/cards/SignCard';\nimport { DualTranslate, Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\n// Internal\nimport { getInitialState } from '../utils/helpers';\nimport { SETTINGS } from '../utils/settings';\nimport type { DailyComunicacaoAlienigenaEntry } from '../utils/types';\nimport { useComunicacaoAlienigenaEngine } from '../utils/useComunicacaoAlienigenaEngine';\nimport { Header } from '../../../components/Header';\nimport { Menu } from '../../../components/Menu';\nimport { ResultsModalContent } from './ResultsModalContent';\nimport { Rules } from './Rules';\n\ntype DailyComunicacaoAlienigenaProps = {\n  data: DailyComunicacaoAlienigenaEntry;\n  currentUser: Me;\n};\n\nexport function DailyComunicacaoAlienigena({ data }: DailyComunicacaoAlienigenaProps) {\n  const [initialState] = useState(getInitialState(data));\n  const {\n    hearts,\n    selection,\n    showResultModal,\n    setShowResultModal,\n    isWin,\n    isLose,\n    isComplete,\n    onItemClick,\n    onSlotClick,\n    slotIndex,\n    isReady,\n    submitGuess,\n    latestAttempt,\n    guesses,\n  } = useComunicacaoAlienigenaEngine(data, initialState);\n  const width = useCardWidth(7, { margin: 64, maxWidth: 75, minWidth: 55 });\n\n  const shouldShakeScreen = latestAttempt && !isComplete;\n\n  const previousGuesses = useMemo(() => guesses.map((guess) => guess.split('-')), [guesses]);\n\n  return (\n    <Layout className=\"app\">\n      <Header icon={<DailyAlienGameIcon />} localStorageKey={SETTINGS.KEY}>\n        TD <DualTranslate>{SETTINGS.NAME}</DualTranslate> #{data.number}\n      </Header>\n      <Layout.Content>\n        <Menu\n          hearts={hearts}\n          total={SETTINGS.HEARTS}\n          openRules={!isComplete || hearts === SETTINGS.HEARTS}\n          rules={<Rules />}\n        />\n\n        <Region>\n          <Typography.Text strong>\n            <Translate pt=\"Atributos\" en=\"Attributes\" />\n          </Typography.Text>\n\n          <Space direction=\"vertical\" className=\"alien-attributes\">\n            {data.attributes.map((attribute) => (\n              <Flex className=\"alien-attributes__attribute\" key={attribute.id} gap={8}>\n                <SignCard id={attribute.spriteId} width={width} className=\"alien-attributes__sign\" />\n                <ArrowRightOutlined />\n                <Flex className=\"alien-attributes__items\">\n                  {attribute.itemsIds.map((itemId) => (\n                    <ItemCard\n                      key={itemId}\n                      id={itemId}\n                      width={width - 12}\n                      className=\"alien-attributes__item\"\n                      padding={0}\n                    />\n                  ))}\n                </Flex>\n              </Flex>\n            ))}\n          </Space>\n        </Region>\n\n        <Region key={latestAttempt} className={shouldShakeScreen ? getAnimationClass('shakeX') : ''}>\n          <Typography.Text strong>\n            <Translate pt=\"Pedidos\" en=\"Requests\" />\n          </Typography.Text>\n\n          <Flex className=\"alien-requests\" gap={8}>\n            {data.requests.map((request, index) => {\n              const selected = selection[index];\n              return (\n                <Flex\n                  vertical\n                  className=\"alien-requests__request\"\n                  key={request.itemId}\n                  align=\"center\"\n                  justify=\"flex-start\"\n                >\n                  <Avatar className=\"mb-2\">{index + 1}</Avatar>\n                  <Flex vertical className=\"alien-requests__attributes\" align=\"center\">\n                    <SignCard\n                      id={request.spritesIds[2]}\n                      width={width - 12}\n                      className=\"alien-requests__sign\"\n                    />\n                    <SignCard\n                      id={request.spritesIds[1]}\n                      width={width - 12}\n                      className=\"alien-requests__sign\"\n                    />\n                    <SignCard\n                      id={request.spritesIds[0]}\n                      width={width - 12}\n                      className=\"alien-requests__sign\"\n                    />\n                  </Flex>\n\n                  {selected ? (\n                    <TransparentButton\n                      onClick={() => onItemClick(selected)}\n                      className=\"mt-1\"\n                      disabled={isComplete}\n                    >\n                      <ItemCard id={selected} width={isLose ? width / 2 : width} padding={0} />\n                    </TransparentButton>\n                  ) : (\n                    <TransparentButton\n                      onClick={() => onSlotClick(index)}\n                      className=\"mt-3\"\n                      disabled={isComplete}\n                      active={slotIndex === index}\n                      activeClass=\"alien-request__slot--active\"\n                    >\n                      <Avatar shape=\"square\" size=\"large\">\n                        ?\n                      </Avatar>\n                    </TransparentButton>\n                  )}\n\n                  {isComplete && isLose && (\n                    <ItemCard\n                      id={request.itemId}\n                      width={width}\n                      padding={0}\n                      className={clsx('alien-request__answer', getAnimationClass('zoomIn'))}\n                    />\n                  )}\n                </Flex>\n              );\n            })}\n          </Flex>\n\n          {isReady && !isComplete && (\n            <Region>\n              <Button type=\"primary\" onClick={submitGuess}>\n                <Translate pt=\"Enviar\" en=\"Submit\" />\n              </Button>\n            </Region>\n          )}\n        </Region>\n\n        {isComplete && (\n          <Space className=\"results-container\" direction=\"vertical\" align=\"center\" size=\"large\">\n            <Button onClick={() => setShowResultModal(true)} type=\"primary\" icon={<BarChartOutlined />}>\n              <Translate pt=\"Ver Resultado\" en=\"Show Results\" />\n            </Button>\n          </Space>\n        )}\n\n        <Region>\n          <Typography.Text strong>\n            <Translate pt=\"Entregue essas coisas:\" en=\"Deliver these things:\" />\n          </Typography.Text>\n\n          <SpaceContainer wrap>\n            {data.itemsIds.map((itemId) => (\n              <TransparentButton\n                key={itemId}\n                onClick={() => onItemClick(itemId)}\n                disabled={isComplete || isReady || selection.includes(itemId)}\n                className=\"alien-items__item-button\"\n              >\n                <ItemCard id={itemId} width={width} padding={0} />\n              </TransparentButton>\n            ))}\n          </SpaceContainer>\n        </Region>\n\n        {previousGuesses.length > 0 && (\n          <Region>\n            <Typography.Text strong>\n              <Translate pt=\"Tentativas anteriores\" en=\"Previous Guesses:\" />\n            </Typography.Text>\n            <Space direction=\"vertical\" className=\"previous-guesses\">\n              {previousGuesses.map((guess) => (\n                <Space key={String(guess)}>\n                  {guess.map((itemId) => (\n                    <ItemCard\n                      key={itemId}\n                      id={itemId}\n                      width={Math.max(width / 2, 40)}\n                      padding={0}\n                      className=\"alien-requests__previous-item\"\n                    />\n                  ))}\n                </Space>\n              ))}\n            </Space>\n          </Region>\n        )}\n\n        <Modal\n          title={<Translate pt=\"Resultado\" en=\"Results\" />}\n          open={showResultModal}\n          onCancel={() => setShowResultModal(false)}\n          footer={null}\n        >\n          <ResultsModalContent\n            challenge={data.number}\n            win={isWin}\n            hearts={hearts}\n            guesses={guesses}\n            attributes={data.attributes}\n            solution={data.solution}\n            width={width}\n          />\n        </Modal>\n      </Layout.Content>\n    </Layout>\n  );\n}\n","import { useDailyGameState } from 'pages/Daily/hooks/useDailyGameState';\nimport { useDailyLocalToday, useMarkAsPlayed } from 'pages/Daily/hooks/useDailyLocalToday';\nimport { useShowResultModal } from 'pages/Daily/hooks/useShowResultModal';\nimport { useEffect } from 'react';\n// Ant Design Resources\nimport { App } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { deepCopy } from 'utils/helpers';\n// Internal\nimport type { ComunicacaoAlienigenaLocalToday, DailyComunicacaoAlienigenaEntry, GameState } from './types';\nimport { SETTINGS } from './settings';\nimport { DEFAULT_LOCAL_TODAY } from './helpers';\n\nexport function useComunicacaoAlienigenaEngine(\n  data: DailyComunicacaoAlienigenaEntry,\n  initialState: GameState,\n) {\n  const { message } = App.useApp();\n  const { translate } = useLanguage();\n  const { state, setState, updateState } = useDailyGameState<GameState>(initialState);\n\n  const { updateLocalStorage } = useDailyLocalToday<ComunicacaoAlienigenaLocalToday>({\n    key: SETTINGS.KEY,\n    gameId: data.id,\n    defaultValue: DEFAULT_LOCAL_TODAY,\n  });\n\n  // ACTIONS\n  const onSlotClick = (slotIndex: number) => {\n    setState((prev) => ({\n      ...prev,\n      slotIndex,\n    }));\n  };\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: <explanation>\n  useEffect(() => {\n    if (!state.win && state.guesses.some((guess) => guess === data.solution)) {\n      setState((prev) => ({ ...prev, win: true }));\n    }\n  }, [state.guesses, data.solution, state.win]);\n\n  const onItemClick = (itemId: string) => {\n    if (state.selection.includes(itemId)) {\n      setState((prev) => ({\n        ...prev,\n        selection: prev.selection.map((item) => (item === itemId ? null : item)),\n      }));\n    } else {\n      const firstNullIndex = state.slotIndex ?? state.selection.indexOf(null);\n      if (firstNullIndex !== -1) {\n        setState((prev) => {\n          const newSelection = [...prev.selection];\n          newSelection[firstNullIndex] = itemId;\n          return {\n            ...prev,\n            selection: newSelection,\n            slotIndex: null,\n          };\n        });\n      }\n    }\n  };\n\n  const submitGuess = () => {\n    const newGuessString = state.selection.join('-');\n\n    if (state.guesses.includes(newGuessString)) {\n      message.warning({\n        content: translate(\n          'Você já tentou essa combinação. Tente outra!',\n          'You already tried this combination. Try another one!',\n        ),\n        duration: 5,\n      });\n\n      return updateState({\n        latestAttempt: Date.now(),\n      });\n    }\n\n    updateLocalStorage({\n      guesses: [...state.guesses, newGuessString],\n    });\n\n    const isCorrect = data.solution === newGuessString;\n\n    if (!isCorrect) {\n      message.warning({\n        content: translate('Combinação incorreta. Tente novamente!', 'Incorrect combination. Try again!'),\n        duration: 3,\n      });\n    }\n\n    setState((prev) => {\n      const copy = deepCopy(prev);\n      copy.latestAttempt = Date.now();\n      copy.guesses.push(newGuessString);\n\n      if (isCorrect) {\n        copy.win = true;\n      } else {\n        copy.hearts -= 1;\n      }\n\n      return copy;\n    });\n  };\n\n  // CONDITIONS\n  const isWin = state.win;\n  const isLose = state.hearts <= 0;\n  const isComplete = isWin || isLose;\n\n  useMarkAsPlayed({\n    key: SETTINGS.KEY,\n    isComplete,\n  });\n\n  // RESULTS MODAL\n  const { showResultModal, setShowResultModal } = useShowResultModal(isWin || isLose || isComplete);\n\n  const isReady = state.selection.filter(Boolean).length === data.requests.length;\n\n  return {\n    hearts: state.hearts,\n    guesses: state.guesses,\n    selection: state.selection,\n    latestAttempt: state.latestAttempt,\n    slotIndex: state.slotIndex,\n    showResultModal,\n    setShowResultModal,\n    isWin,\n    isLose,\n    isComplete,\n    onSlotClick,\n    onItemClick,\n    submitGuess,\n    isReady,\n  };\n}\n","import { DailyError } from 'pages/Daily/components/DailyError';\nimport { DailyLoading } from 'pages/Daily/components/DailyLoading';\nimport { useDailyChallenge } from 'pages/Daily/hooks/useDailyChallenge';\n// Hooks\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\n// Internal\nimport { useComunicacaoAlienigenaDemo } from './utils/useComunicacaoAlienigenaDemo';\nimport { DailyComunicacaoAlienigena } from './components/DailyComunicacaoAlienigena';\n// Sass\nimport './utils/styles.scss';\n\nexport function DailyComunicacaoAlienigenaGame() {\n  const { currentUser } = useCurrentUserContext();\n\n  // Load challenge\n  const challengeQuery = useDailyChallenge();\n  const demo = useComunicacaoAlienigenaDemo();\n\n  if (challengeQuery.isLoading || demo.isLoading) {\n    return <DailyLoading />;\n  }\n\n  const dailyData = challengeQuery?.data?.['comunicacao-alienigena'];\n  const demoData = demo?.data;\n\n  if (challengeQuery.isError || (!dailyData && !demoData)) {\n    return <DailyError />;\n  }\n\n  if (dailyData) {\n    return <DailyComunicacaoAlienigena data={dailyData} currentUser={currentUser} />;\n  }\n\n  if (!demoData) {\n    return <DailyError />;\n  }\n\n  return <DailyComunicacaoAlienigena key={demoData.id} data={demoData} currentUser={currentUser} />;\n}\n","import { LoginModal } from 'pages/Me/components/LoginModal';\nimport { useLocation } from 'react-router-dom';\nimport { useEffectOnce, useTitle } from 'react-use';\n// Hooks\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\nimport { useLanguage } from 'hooks/useLanguage';\n// Internal\nimport { DailyChrome } from './components/DailyChrome';\nimport { DailyAquiOGame } from './games/AquiO/DailyAquiOGame';\nimport { DailyArteRuimGame } from './games/ArteRuim/DailyArteRuimGame';\nimport { DailyControleDeEstoqueGame } from './games/ControleDeEstoque/DailyControleDeEstoqueGame';\nimport { DebugPage } from './games/Debug';\nimport { DailyFilmacoGame } from './games/Filmaco/DailyFilmacoGame';\nimport { Hub } from './games/Hub';\nimport { DailyPalavreadoGame } from './games/Palavreado/DailyPalavreadoGame';\nimport { DailyPicacoGame } from './games/Picaco/DailyPicacoGame';\nimport { DailyTeoriaDeConjuntosGame } from './games/TeoriaDeConjuntos/DailyTeoriaDeConjuntosGame';\nimport { getDailyName } from './utils';\nimport { DailyContextProvider } from './hooks/useDailyChallenge';\nimport { DailyComunicacaoAlienigenaGame } from './games/ComunicacaoAlienigena/DailyComunicacaoAlienigenaGame';\n// Sass\nimport './utils/daily.scss';\n\nfunction DailyPage() {\n  const { isAuthenticated } = useCurrentUserContext();\n  const { pathname } = useLocation();\n  const { setLanguage, language } = useLanguage();\n\n  useEffectOnce(() => {\n    setLanguage(pathname.includes('diario') ? 'pt' : 'en');\n  });\n\n  const subPath = pathname.split('/')?.[2];\n\n  useTitle(`${getDailyName(language)} - Tarde Divertida`);\n\n  if (!isAuthenticated) {\n    return (\n      <DailyContextProvider>\n        <DailyChrome>\n          <LoginModal isAuthenticated={false} />\n        </DailyChrome>\n      </DailyContextProvider>\n    );\n  }\n\n  const Outlet =\n    {\n      '': Hub,\n      'aqui-o': DailyAquiOGame,\n      'arte-ruim': DailyArteRuimGame,\n      'comunicacao-alienigena': DailyComunicacaoAlienigenaGame,\n      'controle-de-estoque': DailyControleDeEstoqueGame,\n      filmaco: DailyFilmacoGame,\n      hub: Hub,\n      palavreado: DailyPalavreadoGame,\n      picaco: DailyPicacoGame,\n      'teoria-de-conjuntos': DailyTeoriaDeConjuntosGame,\n      debug: DebugPage,\n    }?.[subPath] ?? Hub;\n\n  return (\n    <DailyContextProvider>\n      <Outlet />\n    </DailyContextProvider>\n  );\n}\n\nexport default DailyPage;\n"],"names":["CanvasResizer","useGlobalLocalStorage","canvasSize","setCanvasSize","type","position","icon","DragOutlined","label","labelText","content","className","value","min","max","step","onChange","pt","en","CanvasSVG","drawing","width","height","strokeWidth","viewBox","konvaLines","JSON","parse","paths","map","lineArr","path","x","y","length","strokeWidthBySize","small","medium","large","xmlns","overflow","style","index","d","fill","stroke","strokeLinecap","strokeLinejoin","strokeMiterlimit","DrawingCanvas","lines","setLines","showControls","willReadFrequently","mask","useState","drawingHistory","setDrawingHistory","isDrawing","useRef","startDrawing","current","stopDrawing","startLine","e","pos","target","getStage","getPointerPosition","Math","round","finishLine","point","lastLineEntry","concat","splice","handleMouseDown","handleMouseMove","lastLine","handleMouseUp","handleOffsetMouseUp","handleOffsetMouseDown","vertical","align","onMouseDown","onMousemove","onMouseup","onTouchStart","onTouchMove","onTouchEnd","onMouseLeave","window","document","addEventListener","onMouseEnter","removeEventListener","clsx","id","line","points","tension","lineCap","globalCompositeOperation","String","onClick","linesCopy","drawingHistoryCopy","pop","push","disabled","UndoOutlined","lastUndoLine","DeleteOutlined","getSource","str","match","numId","Number","parseInt","itemId","sourceId","ceil","ItemCard","title","text","padding","source","divPadding","SignCard","WarehouseGoodCard","goodId","Card","children","header","footer","color","size","randomColor","headerClassName","footerClassName","hideHeader","baseClass","bgColor","getColorFromLetter","toUpperCase","startsWith","backgroundColor","MetricHighlight","iconSize","iconPlacement","TimeHighlight","Sprite","baseUrl","useTDBaseUrl","useQuery","queryKey","queryFn","fetch","response","enabled","isLoading","data","isError","paddedWidth","display","placeItems","svgContent","WarningOutlined","xlinkHref","dangerouslySetInnerHTML","__html","background","TimerClock","minutes","seconds","AnimatedClockIcon","TimerBar","steps","total","props","status","percentage","percent","showInfo","marginBottom","undefined","TimedTimerBar","duration","onExpire","timeLeft","useCountdown","autoStart","TimedTimerClock","timerProps","WaitingTime","privateTimeLeft","library","process","Error","ApplauseIcon","DailyContext","createContext","error","isRefetching","DailyContextProvider","language","useLanguage","collectionName","getSourceName","query","console","count","DAILY_API","run","action","DAILY_API_ACTIONS","GET_DAILY","date","getToday","responseData","print","staleTime","now","moment","endOf","diff","retry","Provider","useDailyChallenge","context","useContext","SETTINGS","NAME","ICON","HEARTS","GOAL","TD_DAILY_AQUI_O_MODE","KEY","DURATION","DRAWINGS","PHASES","WORD_LENGTH","keys","AQUI_O","ARTE_RUIM","PALAVREADO","ARTISTA","FILMACO","CONTROLE_DE_ESTOQUE","TEORIA_DE_CONJUNTOS","COMUNICACAO_ALIENIGENA","DevResetLocalStorageButton","localStorageKey","message","App","useApp","navigate","useNavigate","justify","gap","Group","onConfirm","localStorage","removeItem","composeLocalTodayKey","composeLocalPlayedKey","forEach","key","success","BugOutlined","isDevEnv","yesterday","stringify","number","setItem","getItem","log","alert","Header","setCount","prev","Title","level","Content","Layout","Footer","DailyChrome","challengeQuery","PageLayout","CalendarIcon","C","DailyError","toggleLanguage","A","description","direction","Paragraph","showIcon","DailyLoading","translate","SpaceContainer","margin","MISC_SETS","useDailyGameState","initialState","state","setState","updateState","newState","useDailyLocalToday","gameId","defaultValue","localKey","useLocalStorage","localToday","setLocalToday","updateLocalStorage","useMarkAsPlayed","isComplete","localPlayedKey","played","setPlayed","useEffect","useShowResultModal","condition","onUpdate","showResultModal","setShowResultModal","DEFAULT_LOCAL_TODAY","maxProgress","hardMode","attempts","hearts","getDiscs","entry","challengingGame","allItems","shuffle","itemsIds","discs","i","card","createCards","POSITIONS","Array","_","SIZES","Z_INDEXES","list","previousCard","previousMatchId","shuffledList","randomPositions","randomSizes","items","sampleSize","rotation","random","zIndex","orderBy","item","join","SEPARATOR","previousCardItems","newCardItems","chain","difference","take","matchingItem","sample","filter","Menu","openRules","rules","DailyHubLink","Hearts","remaining","RulesModal","defaultOpen","heart","HeartFilled","HeartOutlined","open","setOpen","QuestionCircleFilled","placement","onClose","to","AppstoreFilled","Disc","disc","onSelect","transform","role","I","PreloadItems","PRIORITY_LIST","NextGameSuggestion","game","checkWasPlayedToday","getNextGame","strong","DailyFindingGameIcon","DailyArtGameIcon","DailyAlienGameIcon","DailyWarehouseGameIcon","DailyMovieGameIcon","D","DailyWordGameIcon","DailyDrawingGameIcon","DailyDiagramGameIcon","CopyToClipboardResult","result","rows","useCopyToClipboard","copyToClipboard","info","fullWidth","TextArea","readOnly","cols","titles","Fragment","SkullIcon","SealOfApprovalIcon","TrophyIcon","ResultsModalContent","challengeTitle","challengeNumber","progress","isRandomGame","lastMatch","remainingHearts","totalHearts","goal","getDailyName","writeHeartResultString","writeResult","dualTranslate","getTitle","worse","getAnimationClass","speed","slice","floor","delay","Rules","DailyAquiO","onToggleGame","loadLocalToday","deepCopy","discIndex","getInitialState","timesUp","setTimesUp","mode","setMode","discA","discB","useMemo","intersectionBy","isRunning","restart","pause","isWin","isLose","onStart","inNSeconds","isPlaying","useAquiOEngine","useMeasure","contentRef","contentMeasure","headerRef","headerMeasure","discWidth","ref","Text","unCheckedChildren","checkedChildren","checked","DevResult","onCancel","okButtonProps","hidden","cancelButtonProps","shape","DailyAquiOGame","today","setRandomGame","randomGameQuery","wait","chosenSet","gameData","setId","dailyData","NUMBERS","FIRST_ROW","SECOND_ROW","THIRD_ROW","Keyboard","lettersState","onLetterClick","onBackspaceClick","onEnterClick","withNumbers","useCardWidth","maxWidth","useEffectOnce","handleKeyUp","event","includes","letter","Key","baseClassName","letters","getLettersInWord","stringRemoveAccents","toLowerCase","split","lettersInWord","cleanupLetter","char","DrawingCarousel","drawings","minWidth","autoplay","autoplaySpeed","Prompt","guesses","prompt","word","wrap","p","l","j","isCorrect","BoxBlankIcon","challenge","win","solution","totalLetters","Object","guessedLetters","values","Boolean","BoxXIcon","DailyArteRuim","reduce","acc","every","guessLetter","removeDuplicates","useArteRuimEngine","BarChartOutlined","DailyArteRuimGame","currentUser","useCurrentUserContext","Region","TextRegion","warehouse","extraAttempts","removeHeart","phase","goods","fulfillments","lastPlacedGoodId","latestAttempt","evaluations","activeOrder","parseGuessString","validateAttempts","g","fulfillment","shelfIndex","evaluation","some","good","order","guessString","useControleDeEstoqueEngine","currentGood","orders","onPlaceGood","copy","onSelectOrder","onFulfill","onTakeBack","orderId","onSubmit","newGuessString","f","warning","Date","attemptResult","isAllCorrect","reset","resetState","FulfillmentBoard","reveal","isFulfilled","find","hoverType","ShippingBoxIcon","Orders","shelfWidth","OnlineOrderIcon","infinite","CheckMarkIcon","LocationIcon","FulfillingPhase","isFulfilling","isDelivering","board","contained","noMargin","isMissingOutOfStock","WarningFilled","cleanUpAttempts","row","trim","BetaBanner","banner","StockingBoard","StockingPhase","DailyControleDeEstoque","shouldShakeScreen","totalWidth","attempt","danger","DailyControleDeEstoqueGame","DebugPage","isAdmin","allowNumbers","DailyFilmaco","useFilmacoEngine","year","DailyFilmacoGame","filmaco","PlayedWrapper","lsKey","wasPlayed","SpeechBubbleAcceptedIcon","Hub","repeat","PICACO","boardState","swaps","KEYWORD_INDEXES","KEYWORD_STATES","parseLetters","indexes","states","indexOf","locked","Board","onLetterSelection","selection","swap","gridTemplateColumns","gridTemplateRows","col","previousWrongPlacement","words","chunk","DailyPalavreado","keyword","lsGuesses","latestBoardState","copyLetters","cloneDeep","answer","selectLetter","temp","submitGrid","generatedWords","lg","wordIndex","newBoardState","usePalavreadoEngine","block","keyboard","DailyPalavreadoGame","palavreado","usePicacoEngine","cards","cardIndex","onNextCard","screen","onSaveDrawings","mutation","onSuccess","notification","useMutation","mutationKey","mutationFn","payload","SAVE_DRAWING","cardId","onError","useDailySaveDrawings","stateToSave","toSave","playerId","successRate","mutate","cardNumber","isIdle","isSaving","isPending","alreadyPlayed","Canvas","transformOrigin","DailyPicaco","ThumbsUpIcon","AnimatedProcessingIcon","DailyPicacoGame","artista","Diagram","leftCircleChildren","rightCircleChildren","intersectionChildren","Thing","name","minimize","code","InDiagramThings","things","thing","arr","isLatestThing","PlacementModal","activeThing","activeArea","onSelectArea","onConfirmPlacement","rule1Things","rule2Things","intersectingThings","null","cancelText","onOk","okText","CaretDownOutlined","guess","false","CircleIcon","mainColor","rule1","rule2","RulesHints","useToggle","showTipsModal","toggleTipsModal","QuestionCircleOutlined","ghost","Entry","category","hints","DailyTeoriaDeConjuntos","hand","deck","rule","intersectingThing","t","thingId","sectionId","onSelectThing","area","localStateUpdateGuesses","localStateUpdateHearts","prevState","useTeoriaDeConjuntosEngine","thingWidth","activeClass","active","DailyTeoriaDeConjuntosGame","attributes","solutionItems","indexEmojis","attribute","spriteId","italic","DailyComunicacaoAlienigena","slotIndex","isReady","requests","onSlotClick","onItemClick","firstNullIndex","newSelection","submitGuess","useComunicacaoAlienigenaEngine","previousGuesses","ArrowRightOutlined","request","selected","spritesIds","DailyComunicacaoAlienigenaGame","demo","DEMO","useComunicacaoAlienigenaDemo","demoData","isAuthenticated","pathname","useLocation","setLanguage","subPath","useTitle","LoginModal","Outlet","hub","picaco","debug"],"sourceRoot":""}