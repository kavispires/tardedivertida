{"version":3,"file":"static/js/comunicacao-duo.aca19206.chunk.js","mappings":"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","sources":["components/cards/ItemCard.tsx","components/cards/SignCard.tsx","components/general/Achievements.tsx","components/image-cards/ImageBlurButton.tsx","components/image-cards/ImageBlurButtonContainer.tsx","components/image-cards/ImageCard.tsx","components/image-cards/ImageCardBack.tsx","components/image-cards/ImageCardButton.tsx","components/image-cards/ImageCardHand.tsx","components/image-cards/ImageCardPreloadHand.tsx","components/image-cards/ImageCardSelectButton.tsx","components/layout/Container.tsx","components/sprites/Sprite.tsx","components/views/View.tsx","components/views/ViewIf.tsx","components/views/ViewOr.tsx","components/views/ViewSwitch.tsx","games/comunicacao-duo/utils/constants.ts","components/alien/useAlienAttributes.ts","components/alien/AlienKeyboard.tsx","components/alien/AlienText.tsx","games/comunicacao-duo/components/BoardEntry.tsx","games/comunicacao-duo/components/Board.tsx","games/comunicacao-duo/components/SummaryBox.tsx","games/comunicacao-duo/components/HistoryDeliverableEntry.tsx","games/comunicacao-duo/components/History.tsx","games/comunicacao-duo/StepAsk.tsx","games/comunicacao-duo/PhaseAskingForSomething.tsx","games/comunicacao-duo/utils/api-requests.ts","games/comunicacao-duo/StepVerification.tsx","games/comunicacao-duo/PhaseVerification.tsx","games/comunicacao-duo/StepDeliver.tsx","games/comunicacao-duo/PhaseDeliveringSomething.tsx","games/comunicacao-duo/PhaseGameOver.tsx","games/comunicacao-duo/SessionComunicacaoDuo.tsx","games/comunicacao-duo/utils/achievements.ts","hooks/useWhichPlayerIsThe.ts","icons/AlienHeartEyesIcon.tsx","icons/AlienNeutralIcon.tsx","icons/AlienStarEyesIcon.tsx","icons/MysteryBoxIcon.tsx","icons/QuestionIcon.tsx"],"sourcesContent":["import clsx from 'clsx';\n// Components\nimport { DualTranslate } from 'components/language';\nimport { Sprite } from 'components/sprites';\n// Sass\nimport './ItemCard.scss';\n\nexport type ItemCardProps = {\n  /**\n   * The id of the item\n   */\n  id: string;\n  /**\n   * The width of the item\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n  /**\n   * Replacement title, usually the name of the item\n   */\n  title?: string;\n  /**\n   * Optional text to display\n   */\n  text?: DualLanguageValue;\n  /**\n   * Optional padding\n   */\n  padding?: number;\n};\n\nconst BASE = 64;\n\n/**\n * Retrieves the source and item ID based on a given string.\n *\n * @param str - The input string.\n * @returns An array containing the source and item ID.\n */\nexport const getSource = (str: string) => {\n  const match = str.match(/\\d+/);\n  const numId = match ? Number.parseInt(match[0], 10) : 0;\n  const itemId = `item-${numId}`;\n  const sourceId = Math.ceil(numId / BASE) * BASE;\n  const source = `items-${sourceId}`;\n  return [source, itemId];\n};\n\n/**\n * An item card component.\n */\nexport function ItemCard({ id, width = 75, className, title, text, padding }: ItemCardProps) {\n  const [source, itemId] = getSource(id);\n\n  const height = text ? 'auto' : `${width}px`;\n  const divPadding = padding === 0 ? { padding: 0 } : {};\n\n  return (\n    <div className={clsx('item-card', className)} style={{ width: `${width}px`, height, ...divPadding }}>\n      <Sprite source={source} id={itemId} width={width} title={title} padding={padding} />\n      {!!text && (\n        <span className=\"item-card__text\">\n          <DualTranslate>{text}</DualTranslate>\n        </span>\n      )}\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Components\nimport { Sprite } from 'components/sprites';\n// Sass\nimport './SignCard.scss';\n\ntype SignCardProps = {\n  /**\n   * The id of the sign (do not prefix with sign)\n   */\n  id: string | number;\n  /**\n   * The width of the sign\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\n/**\n * An alien sign card component.\n */\nexport function SignCard({ id, width = 50, className = '' }: SignCardProps) {\n  return (\n    <div className={clsx('sign-card', className)} style={{ width: `${width}px`, height: `${width}px` }}>\n      <svg viewBox=\"0 0 512 512\" style={{ width: `${width - 12}px`, height: `${width - 12}px` }}>\n        <Sprite source=\"alien-signs\" id={`sign-${id}`} width={width} />\n      </svg>\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { motion } from 'framer-motion';\n// Ant Design Resources\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport { Button, Popover } from 'antd';\n// Types\nimport type { Achievement, AchievementReference } from 'types/achievements';\nimport type { GamePlayers } from 'types/player';\n// Utils\nimport { getAnimation } from 'utils/animations';\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { DualTranslate, Translate } from 'components/language';\nimport { Container } from 'components/layout/Container';\nimport { Instruction } from 'components/text';\n// Internal\nimport { Medal } from './Medal';\n\ntype AchievementsProps = {\n  /**\n   * Players of the game\n   */\n  players: GamePlayers;\n  /**\n   * Achievements to be displayed\n   */\n  achievements: Achievement[];\n  /**\n   * Reference for the achievements\n   */\n  reference: AchievementReference;\n  /**\n   * Color scheme for the component\n   */\n  colorScheme?: ColorScheme;\n};\n\nconst unknownText = { pt: 'Desconhecido', en: 'Unknown' };\n\nexport function Achievements({ players, achievements, reference, colorScheme }: AchievementsProps) {\n  return (\n    <Container\n      title={<Translate pt=\"Medalhas\" en=\"Achievements\" />}\n      titleProps={{\n        colorScheme,\n        size: 'small',\n      }}\n      className={clsx('achievements', getAnimationClass('fadeIn'))}\n    >\n      {achievements.length === 0 && (\n        <Instruction contained>\n          <Translate\n            pt={\n              <>\n                Nenhuma medalha foi conquistada nesse jogo.\n                <br />\n                Para ganhar uma medalha, apenas uma jogador pode atender a condição.\n              </>\n            }\n            en={\n              <>\n                No achievements were achieved in this game.\n                <br />\n                To win a medal, only one player can meet the condition.\n              </>\n            }\n          />\n        </Instruction>\n      )}\n      <ul className=\"achievements-list\">\n        {achievements.map((achievement, index) => {\n          const { icon = 'star', ...achievementObj } = reference[achievement.type] ?? {};\n          const player = players[achievement.playerId];\n          return (\n            <motion.li\n              key={`achievement-${achievement.type}`}\n              className={'achievements-entry'}\n              {...getAnimation('flipInY', {\n                duration: 2,\n                delay: (index < achievements.length / 2 ? index : achievements.length - 1 - index) + 2.5,\n              })}\n            >\n              <div className=\"achievement__medal\">\n                <Medal id={icon} />\n              </div>\n              <h4 className=\"achievement__title\">\n                <DualTranslate>{achievementObj.title ?? unknownText}</DualTranslate>\n              </h4>\n              <div className=\"achievement__avatar\">\n                <Avatar id={player.avatarId} />\n              </div>\n              <div className=\"achievement__name\">{player.name}</div>\n              {Boolean(achievementObj.description) && (\n                <div className=\"achievement__description\">\n                  <Popover\n                    content={\n                      <span>\n                        <DualTranslate>{achievementObj.description ?? unknownText}</DualTranslate> (\n                        {String(achievement.value)})\n                      </span>\n                    }\n                  >\n                    <Button icon={<QuestionCircleOutlined />} shape=\"circle\" type=\"text\" size=\"small\" />\n                  </Popover>\n                </div>\n              )}\n            </motion.li>\n          );\n        })}\n      </ul>\n    </Container>\n  );\n}\n","// Ant Design Resources\nimport { EyeInvisibleOutlined, EyeOutlined } from '@ant-design/icons';\nimport { Button, Tooltip } from 'antd';\n// Hooks\nimport { useBlurCards } from 'hooks/useBlurCards';\n// Components\nimport { Translate } from 'components/language';\n// Sass\nimport './ImageBlurButton.scss';\n\ntype ImageBlurButtonProps = {\n  /**\n   * The card to be blurred\n   */\n  cardId: string;\n  /**\n   * Determines if the button is ghost or not (default: true)\n   */\n  ghost?: boolean;\n};\n\nexport function ImageBlurButton({ cardId, ghost = true }: ImageBlurButtonProps) {\n  const { blurCard, isBlurEnabled, shouldBeBlurred } = useBlurCards();\n\n  return isBlurEnabled ? (\n    <Tooltip\n      placement=\"top\"\n      title={\n        <Translate\n          pt=\"Aperte o botão para embaçar a foto caso você tenha alguma fobia\"\n          en=\"Use this button to blur the image in case of any phobia\"\n        />\n      }\n    >\n      <Button ghost={ghost} onClick={() => blurCard(cardId)} size=\"small\" className=\"image-blur-button\">\n        {shouldBeBlurred(cardId) ? (\n          <>\n            <EyeOutlined /> <Translate pt=\"Descredar\" en=\"Focus\" />\n          </>\n        ) : (\n          <>\n            <EyeInvisibleOutlined /> <Translate pt=\"Credo\" en=\"Blur\" />\n          </>\n        )}\n      </Button>\n    </Tooltip>\n  ) : (\n    <></>\n  );\n}\n","import clsx from 'clsx';\nimport type { ReactNode } from 'react';\n// Internal\nimport { ImageBlurButton } from './ImageBlurButton';\n// Sass\nimport './ImageBlurButtonContainer.scss';\n\ninterface ImageBlurButtonContainerProps extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * The card to be blurred\n   */\n  cardId: string;\n  /**\n   * The content the component is wrapping\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * The position of the button (default: bottom)\n   */\n  position?: 'top' | 'bottom';\n  /**\n   * Determines if the button is ghost or not (default: true)\n   */\n  ghost?: boolean;\n}\n\nexport function ImageBlurButtonContainer({\n  cardId,\n  children,\n  className = '',\n  position = 'bottom',\n  ghost = true,\n  ...rest\n}: ImageBlurButtonContainerProps) {\n  return (\n    <div className={clsx('image-blur-button-container', className)} {...rest}>\n      {position === 'top' && <ImageBlurButton cardId={cardId} ghost={ghost} />}\n      {children}\n      {position === 'bottom' && <ImageBlurButton cardId={cardId} ghost={ghost} />}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { useMemo } from 'react';\n// Ant Design Resources\nimport { Image, type ImageProps } from 'antd';\n// Hooks\nimport { useBlurCards } from 'hooks/useBlurCards';\nimport { useTDBaseUrl } from 'hooks/useTDBaseUrl';\n// Utils\nimport { PUBLIC_URL } from 'utils/constants';\n// Images\nimport placeholder from 'assets/images/placeholder.jpg';\n// Sass\nimport './ImageCard.scss';\n// Assets\n\nexport type ImageCardProps = {\n  /**\n   * The id of the image\n   */\n  id: string;\n  /**\n   * The width of the card (Default: 200px)\n   */\n  cardWidth?: number;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Enables or disables the preview (default: true)\n   */\n  preview?: ImageProps['preview'];\n  /**\n   * Replacement image when the preview is open\n   */\n  previewImageId?: string;\n  /**\n   * The file extension for the image (default: jpg)\n   */\n  fileExtension?: 'jpg' | 'png' | 'gif';\n  /**\n   * Forces height to be the same as the width\n   */\n  square?: boolean;\n  /**\n   * Use classic image library\n   */\n  classic?: boolean;\n};\n\n/**\n * Renders an Image Card on tdi\n */\nexport const ImageCard = ({\n  id,\n  cardWidth = 200,\n  className = '',\n  preview = true,\n  previewImageId = '',\n  fileExtension = 'jpg',\n  square = false,\n  classic = false,\n}: ImageCardProps) => {\n  const { shouldBeBlurred } = useBlurCards();\n  const baseUrl = useTDBaseUrl(classic ? 'classic' : 'images');\n\n  const baseClass = 'image-card';\n\n  const { imageURL, fallbackName } = useMemo(() => {\n    const imageURL = id.replace(/-/g, '/');\n    const numId = Number(imageURL?.split('/')?.at(-1) ?? id[id.length - 1]) % 12;\n\n    const fallbackName = `placeholder-${numId}`;\n    return {\n      imageURL,\n      fallbackName,\n    };\n  }, [id]);\n\n  const isBlurred = shouldBeBlurred(id);\n\n  const previewConfig = typeof preview === 'boolean' ? {} : preview;\n\n  return (\n    <div\n      className={clsx(\n        baseClass,\n        isBlurred && `${baseClass}--blur`,\n        square && `${baseClass}--square`,\n        className,\n      )}\n      style={{ height: square ? `${cardWidth}px` : undefined }}\n    >\n      <Image\n        width={cardWidth}\n        src={`${baseUrl}/${imageURL}.${fileExtension}`}\n        placeholder={<Image preview={false} src={placeholder} width={cardWidth} />}\n        fallback={`${PUBLIC_URL.CARDS}${fallbackName}.jpg`}\n        preview={\n          isBlurred || !preview\n            ? false\n            : {\n                ...previewConfig,\n                maskClassName: clsx(`${baseClass}__preview-mask`, previewConfig?.maskClassName),\n                src: previewImageId\n                  ? `${baseUrl}/${previewImageId.replace(/-/g, '/')}.${fileExtension}`\n                  : previewConfig?.src,\n              }\n        }\n      />\n    </div>\n  );\n};\n","// Internal\nimport { ImageCard, type ImageCardProps } from './ImageCard';\n\ntype ImageCardBackProps = Omit<ImageCardProps, 'id'> & { id?: ImageCardId };\n\nexport const ImageCardBack = ({ id = 'back-default', ...rest }: ImageCardBackProps) => {\n  return <ImageCard id={id} {...rest} />;\n};\n","import clsx from 'clsx';\nimport type { ReactNode } from 'react';\n// Ant Design Resources\nimport { DownCircleOutlined, UpCircleOutlined } from '@ant-design/icons';\nimport { Button, type ButtonProps } from 'antd';\n// Components\nimport { DebugOnly } from 'components/debug';\nimport { Translate } from 'components/language';\n// Internal\nimport { ImageBlurButtonContainer } from './ImageBlurButtonContainer';\n// Sass\nimport './ImageCardButton.scss';\n//  Components\n\ntype ImageCardButtonProps = {\n  /**\n   * The id of the image\n   */\n  id: string;\n  /**\n   * The content, usually a ImageCard component\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name for the container\n   */\n  className?: string;\n  /**\n   * The position of the button (default: top)\n   */\n  buttonPosition?: 'top' | 'bottom';\n  /**\n   * The button is over the image (default: false)\n   */\n  over?: boolean;\n  /**\n   * Button icon replacement\n   */\n  icon?: ReactNode;\n  /**\n   * The function to be called when the button is clicked\n   */\n  onClick?: (cardId: CardId) => void;\n  /**\n   * Disables the button (default: false)\n   */\n  disabled?: boolean;\n  /**\n   * The text for the button\n   */\n  buttonText?: ReactNode;\n  /**\n   * The props for the button\n   */\n  buttonProps?: Omit<ButtonProps, 'onClick' | 'disabled'>;\n  /**\n   * Hides button\n   */\n  hideButton?: boolean;\n};\n\nexport function ImageCardButton({\n  id,\n  children,\n  className = '',\n  buttonPosition = 'top',\n  over = false,\n  icon,\n  onClick,\n  disabled = false,\n  buttonText,\n  buttonProps = {},\n  hideButton = false,\n}: ImageCardButtonProps) {\n  const isTop = buttonPosition === 'top';\n\n  const iconComponent = icon ?? (isTop ? <DownCircleOutlined /> : <UpCircleOutlined />);\n\n  const { className: buttonClassName, ...restButtonProps } = buttonProps;\n\n  const button =\n    !hideButton && onClick ? (\n      <Button\n        shape=\"round\"\n        size=\"small\"\n        ghost={over}\n        className={clsx(\n          'image-card-button__button',\n          over && 'image-card-button__button--over',\n          over && `image-card-button__button--over-${buttonPosition}`,\n          buttonClassName,\n        )}\n        onClick={() => onClick(id)}\n        disabled={disabled}\n        {...restButtonProps}\n      >\n        {iconComponent}\n        {buttonText ?? <Translate pt=\"Selecionar\" en=\"Select\" />}\n        {iconComponent}\n      </Button>\n    ) : (\n      <></>\n    );\n\n  return (\n    <div className={clsx('image-card-button', className)}>\n      <ImageBlurButtonContainer cardId={id} position={buttonPosition === 'bottom' ? 'top' : 'bottom'}>\n        <DebugOnly>{id}</DebugOnly>\n        <div className=\"image-card-button__container\">\n          {isTop && button}\n          {children}\n          {!isTop && button}\n        </div>\n      </ImageBlurButtonContainer>\n    </div>\n  );\n}\n","import { ImageCard, ImageCardButton } from '.';\nimport clsx from 'clsx';\nimport { motion } from 'framer-motion';\nimport type { ReactNode, Ref } from 'react';\n// Ant Design Resources\nimport { type GetProps, Image, Space } from 'antd';\n// Hooks\nimport { useCardWidthByContainerRef } from 'hooks/useCardWidth';\n// Utils\nimport { getAnimation } from 'utils/animations';\n// Sass\nimport './ImageCardHand.scss';\n\ntype ImageCardHandProps = {\n  /**\n   * The list of card ids\n   */\n  hand: ImageCardId[];\n  /**\n   * Function to trigger when clicking on the select button\n   */\n  onSelectCard?: GenericFunction;\n  /**\n   * Select button custom label\n   */\n  selectButtonText?: ReactNode;\n  /**\n   * Select button custom icon\n   */\n  selectButtonIcon?: ReactNode;\n  /**\n   * Select button custom class\n   */\n  selectButtonClass?: string;\n  /**\n   * Disable select button\n   */\n  disabledSelectButton?: boolean;\n  /**\n   * Optional custom class name for the hand container\n   */\n  className?: string;\n  /**\n   * The size of the card\n   */\n  cardSize?: number;\n  /**\n   * If no card size is provided, the ratio is used instead to determine card size (default 8)\n   */\n  sizeRatio?: number;\n  /**\n   * Minimum width of a card (default 80)\n   */\n  minCardSize?: number;\n  /**\n   * Cache showing which cards have been selected and should be highlighted\n   */\n  selectedCards?: BooleanDictionary;\n  /**\n   * Custom card class\n   */\n  cardClassName?: string;\n  /**\n   * Enable preview (default: true)\n   */\n  preview?: boolean;\n  /**\n   * The Image group preview object\n   */\n  imageGroupPreview?: GetProps<typeof Image.PreviewGroup>['preview'];\n};\n\nexport function ImageCardHand({\n  hand = [],\n  onSelectCard,\n  selectButtonText,\n  selectButtonIcon,\n  className = '',\n  selectButtonClass = '',\n  sizeRatio = 8,\n  cardSize,\n  minCardSize = 110,\n  disabledSelectButton = false,\n  selectedCards = {},\n  cardClassName = '',\n  preview = true,\n  imageGroupPreview,\n}: ImageCardHandProps) {\n  // Prefers cardSize otherwise calculates width based on screen and ratio\n  const [cardWidth, containerRef] = useCardWidthByContainerRef(Math.max(sizeRatio, 6), {\n    minWidth: minCardSize,\n  });\n\n  return (\n    <Image.PreviewGroup preview={imageGroupPreview}>\n      <Space className={clsx('image-card-hand', className)} ref={containerRef as Ref<HTMLDivElement>}>\n        {hand.map((cardId, index) => {\n          return (\n            <motion.div\n              key={`hand-${cardId}`}\n              className=\"image-card-hand__card-container\"\n              {...getAnimation('slideInUp', { delay: index / 10, ease: 'easeOut', duration: 0.5 })}\n            >\n              <ImageCardButton\n                onClick={onSelectCard}\n                id={cardId}\n                buttonProps={{ className: selectButtonClass }}\n                icon={selectButtonIcon}\n                buttonText={selectButtonText}\n                disabled={disabledSelectButton}\n              >\n                <ImageCard\n                  id={cardId}\n                  cardWidth={cardSize || cardWidth}\n                  className={clsx(selectedCards[cardId] && 'image-card-hand__selected', cardClassName)}\n                  preview={preview}\n                />\n              </ImageCardButton>\n            </motion.div>\n          );\n        })}\n      </Space>\n    </Image.PreviewGroup>\n  );\n}\n","// Internal\nimport { ImageCard } from './ImageCard';\n// Sass\nimport './ImageCardPreloadHand.scss';\n\ntype ImageCardPreloadHandProps = {\n  hand: string[];\n};\nexport function ImageCardPreloadHand({ hand }: ImageCardPreloadHandProps) {\n  if (!hand) return <span></span>;\n  return (\n    <div className=\"image-card-preload-hand\">\n      {hand.map((cardId) => (\n        <ImageCard id={cardId} cardWidth={1} key={`pre-load-${cardId}`} preview={false} />\n      ))}\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { UpCircleOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\n// Components\nimport { Translate } from 'components/language';\n\ntype ImageCardSelectButtonProps = {\n  isSelected?: boolean;\n  cardId: ImageCardId;\n  onClick: GenericFunction;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  selectLabel?: string;\n  deselectLabel?: string;\n};\n\nexport function ImageCardSelectButton({\n  onClick,\n  cardId,\n  selectLabel,\n  deselectLabel,\n  isSelected = false,\n}: ImageCardSelectButtonProps) {\n  return (\n    <Button\n      shape=\"round\"\n      size=\"small\"\n      ghost={!isSelected}\n      className=\"image-card-select-button\"\n      onClick={() => onClick(cardId)}\n    >\n      <UpCircleOutlined />\n      {isSelected ? (\n        <Translate pt=\"Desmarcar\" en=\"Deselect\" custom={deselectLabel} />\n      ) : (\n        <Translate pt=\"Selecionar\" en=\"Select\" custom={selectLabel} />\n      )}\n      <UpCircleOutlined />\n    </Button>\n  );\n}\n","import clsx from 'clsx';\nimport type { ReactNode } from 'react';\n// Ant Design Resources\nimport { Space, type SpaceProps } from 'antd';\n// Components\nimport { Title, type TitleProps } from 'components/text';\n// Sass\nimport './Container.scss';\n\ntype ContainerProps = {\n  title: ReactNode;\n  children: ReactNode;\n  contained?: boolean;\n  className?: string;\n  titleProps?: Omit<TitleProps, 'children'>;\n  contentProps?: SpaceProps;\n} & Omit<SpaceProps, 'title' | 'children'>;\n\n/**\n * Container component with title and center aligned children\n */\nexport function Container({\n  title,\n  children,\n  className,\n  contained,\n  titleProps,\n  contentProps,\n  ...spaceProps\n}: ContainerProps) {\n  const { level = 4, size = 'xx-small', ...restTitleProps } = titleProps ?? {};\n\n  const {\n    className: childrenClassName,\n    wrap = true,\n    direction: childrenDirection = 'horizontal',\n    ...restChildrenContainerProps\n  } = contentProps ?? {};\n\n  return (\n    <Space direction=\"vertical\" className={clsx('container-wrapper', className)} {...spaceProps}>\n      <Title level={level} size={size} {...restTitleProps}>\n        {title}\n      </Title>\n\n      <Space\n        direction={childrenDirection}\n        wrap={wrap}\n        className={clsx(\n          'container-wrapper__children',\n          contained && 'container-wrapper__children--contained',\n          childrenClassName,\n        )}\n        {...restChildrenContainerProps}\n      >\n        {children}\n      </Space>\n    </Space>\n  );\n}\n","import { useQuery } from '@tanstack/react-query';\n// Ant Design Resources\nimport { WarningOutlined } from '@ant-design/icons';\nimport { Spin, Tooltip } from 'antd';\n// Hooks\nimport { useTDBaseUrl } from 'hooks/useTDBaseUrl';\n\ntype SpriteProps = {\n  /**\n   * The sprite source name\n   */\n  source: string;\n  /**\n   * The id of the item\n   */\n  id: string;\n  /**\n   * The width of the item\n   */\n  width?: number;\n  /**\n   * Replacement title, usually the name of the item\n   */\n  title?: string;\n  /**\n   * Optional class name\n   */\n  className?: string;\n  /**\n   *\n   */\n  padding?: number;\n};\n\n/**\n * Loads a sprite from the Tarde Divertida sprites\n * @param {SpriteProps} props\n * @returns a single sprite item\n */\nexport function Sprite({ id, source, width = 75, padding = 6, title, className }: SpriteProps) {\n  const baseUrl = useTDBaseUrl('sprites');\n\n  const { isLoading, data, isError } = useQuery({\n    queryKey: ['sprite', source],\n    queryFn: async () => {\n      const response = await fetch(`${baseUrl}/sprites/${source}.svg`);\n      return await response.text();\n    },\n    enabled: !!id && !!source,\n  });\n\n  const paddedWidth = width - padding * 2;\n\n  if (isLoading) {\n    return (\n      <span\n        style={{\n          width: `${paddedWidth}px`,\n          height: `${paddedWidth}px`,\n          padding,\n          display: 'grid',\n          placeItems: 'center',\n        }}\n        className={className}\n      >\n        <Spin />\n      </span>\n    );\n  }\n\n  const svgContent = data;\n\n  if (isError || !svgContent) {\n    return (\n      <span\n        style={{\n          width: `${paddedWidth}px`,\n          height: `${paddedWidth}px`,\n          padding,\n          display: 'grid',\n          placeItems: 'center',\n        }}\n        className={className}\n      >\n        <WarningOutlined />\n      </span>\n    );\n  }\n\n  return (\n    <svg\n      viewBox=\"0 0 512 512\"\n      style={{ width: `${paddedWidth}px`, height: `${paddedWidth}px`, padding }}\n      className={className}\n    >\n      <use xlinkHref={`#${id}`} dangerouslySetInnerHTML={{ __html: svgContent }} />\n      <foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">\n        {title && (\n          <Tooltip title={title}>\n            <div style={{ background: 'transparent', width: '100%', height: '100vh' }}></div>\n          </Tooltip>\n        )}\n      </foreignObject>\n    </svg>\n  );\n}\n","import type { ReactNode } from 'react';\n\ntype ViewProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n};\n\nexport function View({ children }: ViewProps) {\n  return <>{children}</>;\n}\n","import type { ReactNode } from 'react';\n\ntype ViewIfProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Displays children only if condition is truthy\n   */\n  condition?: boolean;\n};\n\n/**\n * Wrapper component that only renders the children if the condition is truthy\n */\nexport function ViewIf({ condition = false, children }: ViewIfProps) {\n  return condition ? <>{children}</> : <></>;\n}\n","import type { ReactNode } from 'react';\n\ntype ViewOrProps = {\n  /**\n   * The content of the component to be toggled\n   */\n  children: [ReactNode, ReactNode];\n  /**\n   * The condition to be met to render the first children\n   */\n  condition?: boolean;\n};\n\n/**\n * View wrapper that renders one of two children depending on a condition\n */\nexport function ViewOr({ condition = false, children }: ViewOrProps) {\n  return condition ? <>{children[0]}</> : <>{children[1]}</>;\n}\n","type ViewSwitchProps = {\n  cases: boolean[];\n  /**\n   * The content of the component\n   */\n  children: any;\n};\n\nexport function ViewSwitch({ cases, children }: ViewSwitchProps) {\n  if (cases.length > 5) {\n    throw Error('ViewSwitch only supports up to 5 cases');\n  }\n\n  if (cases[0] && children[0]) {\n    return children[0];\n  }\n\n  if (cases[1] && children[1]) {\n    return children[1];\n  }\n\n  if (cases[2] && children[2]) {\n    return children[2];\n  }\n\n  if (cases[3] && children[3]) {\n    return children[3];\n  }\n\n  if (cases[4] && children[4]) {\n    return children[4];\n  }\n  console.warn('Rendering all children in the ViewSwitch');\n  return children;\n}\n","export const COMUNICACAO_DUO_ACTIONS = {\n  SUBMIT_REQUEST: 'SUBMIT_REQUEST',\n  SUBMIT_DELIVERY: 'SUBMIT_DELIVERY',\n  STOP_DELIVERY: 'STOP_DELIVERY',\n};\n\nexport const TOTAL_ITEMS = 16;\n\nexport const AFFILIATIONS = {\n  A: 'A',\n  B: 'B',\n  TABOO: 'TABOO',\n  NONE: 'NONE',\n};\n\nexport const SIDES = [AFFILIATIONS.A, AFFILIATIONS.B];\n\nexport const STATUS = {\n  IDLE: 'IDLE',\n  WIN: 'WIN',\n  LOSE: 'LOSE',\n  CONTINUE: 'CONTINUE',\n};\n\nexport const DECK_ENTRY_STATUS = {\n  IDLE: 'IDLE',\n  A: AFFILIATIONS.A,\n  B: AFFILIATIONS.B,\n  NONE: AFFILIATIONS.NONE,\n  TABOO: AFFILIATIONS.TABOO,\n};\n","import { useQuery } from '@tanstack/react-query';\n// Types\nimport type { ItemAttribute } from 'types/tdr';\n// Hooks\nimport { useTDBaseUrl } from 'hooks/useTDBaseUrl';\n\nexport function useAlienAttributes(enabled: boolean) {\n  const baseUrl = useTDBaseUrl('resources');\n  return useQuery<Dictionary<ItemAttribute>, ResponseError>({\n    queryKey: ['items-attributes'],\n    queryFn: async () => {\n      const response = await fetch(`${baseUrl}/items-attributes.json`);\n      return await response.json();\n    },\n    enabled,\n    staleTime: Number.POSITIVE_INFINITY,\n  });\n}\n","import { orderBy } from 'lodash';\nimport debounce from 'lodash/debounce';\nimport { useCallback, useMemo, useState } from 'react';\n// Ant Design Resources\nimport {\n  DashOutlined,\n  StepBackwardOutlined,\n  VerticalAlignBottomOutlined,\n  VerticalAlignTopOutlined,\n} from '@ant-design/icons';\nimport { Input, Spin, Tooltip } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { LETTERS } from 'utils/constants';\nimport { stringRemoveAccents } from 'utils/helpers';\n// Components\nimport { SignCard } from 'components/cards/SignCard';\nimport { DualTranslate } from 'components/language';\n// Internal\nimport { useAlienAttributes } from './useAlienAttributes';\n// Sass\nimport './AlienKeyboard.scss';\n\ntype AlienKeyboardProps = {\n  /**\n   * The current sentence\n   */\n  value: string;\n  /**\n   * Callback to update the sentence\n   */\n  onChange: (value: string) => void;\n  /**\n   * If provided, only these keys will be available on the keyboard\n   */\n  availableAttributeKeys?: string[];\n  /**\n   * Disable the keyboard\n   */\n  disabled?: boolean;\n};\n\nexport function AlienKeyboard({ value, onChange, availableAttributeKeys, disabled }: AlienKeyboardProps) {\n  const { language } = useLanguage();\n  const { isLoading, data: attributes = {} } = useAlienAttributes(true);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  // Create a debounced function to handle search\n  const debouncedSearch = useCallback(\n    debounce((query) => {\n      setSearchQuery(query);\n    }, 300),\n    [],\n  );\n\n  const allowedAttributes = useMemo(() => {\n    return orderBy(\n      availableAttributeKeys\n        ? Object.values(attributes).filter((attribute) => availableAttributeKeys.includes(attribute.id))\n        : Object.values(attributes),\n      [`name.${language}`],\n      ['asc'],\n    );\n  }, [attributes, availableAttributeKeys, language]);\n\n  const searchDict = useMemo(() => {\n    return allowedAttributes.reduce((acc: StringDictionary, attribute) => {\n      acc[attribute.id] = stringRemoveAccents(\n        `${attribute.name[language]} ${attribute.description[language]} ${attribute.keywords[language]}`,\n      ).toLowerCase();\n      return acc;\n    }, {});\n  }, [allowedAttributes, language]);\n\n  const attributesList = useMemo(() => {\n    return allowedAttributes.filter((a) => {\n      return searchQuery === '' || searchDict[a.id].includes(stringRemoveAccents(searchQuery.toLowerCase()));\n    });\n  }, [allowedAttributes, searchDict, searchQuery]);\n\n  const onTap = (key: string, type: 'attribute' | 'helper') => {\n    onChange(updateSentence(value, key, type));\n  };\n\n  return (\n    <Spin spinning={isLoading}>\n      <div className=\"alien-keyboard\" style={{ width: '100%' }}>\n        <div className=\"alien-keyboard__keys\">\n          {HELPER_KEYS.map((key) => {\n            return (\n              <button\n                type=\"button\"\n                className=\"alien-keyboard__key alien-keyboard__key--helper\"\n                key={key.id}\n                onClick={() => onTap(key.id, 'helper')}\n                disabled={disabled}\n              >\n                {key.icon}\n                <small>\n                  <DualTranslate>{key.name}</DualTranslate>\n                </small>\n              </button>\n            );\n          })}\n          <div className=\"alien-keyboard__search\">\n            <Input.Search\n              placeholder=\"Search\"\n              onChange={(e) => debouncedSearch(e.target.value)}\n              onSearch={(value) => debouncedSearch(value)}\n              style={{ width: 156 }}\n              disabled={disabled}\n              allowClear\n            />\n          </div>\n        </div>\n        <div className=\"alien-keyboard__keys\">\n          {attributesList.map((attribute) => {\n            return (\n              <Tooltip\n                key={attribute.id}\n                title={\n                  <div className=\"center\">\n                    <DualTranslate>{attribute.description}</DualTranslate>\n                  </div>\n                }\n              >\n                <button\n                  type=\"button\"\n                  className=\"alien-keyboard__key\"\n                  onClick={() => onTap(attribute.id, 'attribute')}\n                  disabled={disabled}\n                >\n                  <SignCard width={32} id={`${attribute.spriteId.split('-')[1]}`} className=\"transparent\" />\n\n                  <small>\n                    <DualTranslate>{attribute.name}</DualTranslate>\n                  </small>\n                </button>\n              </Tooltip>\n            );\n          })}\n        </div>\n      </div>\n    </Spin>\n  );\n}\n\nconst HELPER_KEYS = [\n  {\n    id: '^',\n    name: { en: 'NOT', pt: 'NÃO' },\n    icon: <VerticalAlignTopOutlined />,\n    type: 'helper',\n  },\n  {\n    id: '~',\n    name: { en: 'SORTA', pt: 'MEIO' },\n    icon: <DashOutlined />,\n    type: 'helper',\n  },\n  {\n    id: '*',\n    name: { en: 'VERY', pt: 'MUITO' },\n    icon: <VerticalAlignBottomOutlined />,\n    type: 'helper',\n  },\n  {\n    id: '<',\n    name: { en: 'Backspace', pt: 'Apagar' },\n    icon: <StepBackwardOutlined />,\n  },\n];\n\nconst updateSentence = (prev: string, key: string, type: 'attribute' | 'helper') => {\n  const lastChar = prev[prev.length - 1] ?? '';\n  const isLastHelper = !LETTERS.includes(lastChar.toUpperCase());\n\n  if (type === 'attribute') {\n    if (isLastHelper) {\n      return `${prev}${key}`;\n    }\n    if (!prev.includes(key)) {\n      return `${prev}+${key}`;\n    }\n    return prev;\n  }\n\n  if (type === 'helper') {\n    if (key === '<') {\n      if (isLastHelper) {\n        return prev.slice(0, -1);\n      }\n      return prev.slice(0, -4);\n    }\n    if (isLastHelper) {\n      return `${prev.slice(0, -1)}${key}`;\n    }\n    return `${prev}${key}`;\n  }\n\n  return prev;\n};\n","import clsx from 'clsx';\nimport { useMemo } from 'react';\n// Ant Design Resources\nimport { Spin, Tooltip } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { SignCard } from 'components/cards/SignCard';\n// Internal\nimport { useAlienAttributes } from './useAlienAttributes';\n// Sass\nimport './AlienText.scss';\n\ntype AlienTextProps = {\n  /**\n   * The text value to be displayed (in alien language)\n   */\n  value: string;\n  /**\n   * If true, it will display the translation of the text\n   */\n  withTranslation?: boolean;\n} & ElementProps;\n\nexport function AlienText({ value, withTranslation = false, className, ...divProps }: AlienTextProps) {\n  const { isLoading, data: attributes = {} } = useAlienAttributes(true);\n  const { dualTranslate } = useLanguage();\n\n  const characters = useMemo(() => {\n    const splitLetters = splitStringEvery4(value);\n\n    return splitLetters.map((character) => {\n      const variantKey = character[0];\n      const attributeId = character.substring(1);\n      if (attributeId && attributes?.[attributeId]) {\n        const attribute = attributes[attributeId];\n        return {\n          spriteId: attribute?.spriteId,\n          variant: variantsName[variantKey],\n          name: {\n            pt: `${variants[variantKey].pt}${attribute?.name.pt}`.trim().toLowerCase(),\n            en: `${variants[variantKey].en}${attribute?.name.en}`.trim().toLowerCase(),\n          },\n          description: {\n            en: attribute?.description.en ?? '',\n            pt: attribute?.description.pt ?? '',\n          },\n        };\n      }\n\n      return {\n        spriteId: '',\n        variant: variantsName[variantKey],\n        name: { pt: `${variants[variantKey].pt} `, en: `${variants[variantKey].en} ` },\n        description: { pt: '', en: '' },\n      };\n    });\n  }, [value, attributes]);\n\n  return (\n    <Spin spinning={isLoading}>\n      <div className={clsx('alien-text', className)} {...divProps}>\n        {characters.map((character) => {\n          return (\n            <Tooltip title={dualTranslate(character.name)} key={`${character.spriteId}-${character.variant}`}>\n              <div className={clsx('alien-text__character', `alien-text__character--${character.variant}`)}>\n                <SignCard width={48} id={`${character.spriteId.split('-')[1]}`} className=\"transparent\" />\n              </div>\n            </Tooltip>\n          );\n        })}\n      </div>\n      {withTranslation && (\n        <div className=\"alien-text-translation\">\n          {characters.map((character) => {\n            return (\n              <Tooltip\n                title={dualTranslate(character.description)}\n                key={`${character.spriteId}-${character.variant}`}\n              >\n                <span className=\"alien-text-translation__text\">{dualTranslate(character.name)}</span>\n              </Tooltip>\n            );\n          })}\n        </div>\n      )}\n    </Spin>\n  );\n}\n\nfunction splitStringEvery4(str: string): string[] {\n  const result: string[] = [];\n  for (let i = 0; i < str.length; i += 4) {\n    result.push(str.substring(i, i + 4));\n  }\n  return result;\n}\n\nconst variants: Record<string, DualLanguageValue> = {\n  '+': {\n    en: '',\n    pt: '',\n  },\n  '^': {\n    en: 'not ',\n    pt: 'não ',\n  },\n  '~': {\n    en: 'sorta ',\n    pt: 'meio ',\n  },\n  '*': {\n    en: 'very ',\n    pt: 'muito ',\n  },\n};\n\nconst variantsName: Record<string, string> = {\n  '+': 'normal',\n  '^': 'not',\n  '~': 'sorta',\n  '*': 'very',\n};\n","import clsx from 'clsx';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { ImageCard } from 'components/image-cards';\n// Internal\nimport { SIDES } from '../utils/constants';\nimport type { DeckEntry } from '../utils/types';\n\ntype BoardEntryProps = {\n  entry: DeckEntry;\n  deckType: string;\n  userSide: string;\n};\nexport function BoardEntry({ entry, deckType, userSide }: BoardEntryProps) {\n  const { dualTranslate } = useLanguage();\n\n  const sideIndex = SIDES.indexOf(userSide);\n\n  if (deckType === 'items') {\n    return (\n      <div\n        key={`cd-board-entry-${entry.data.id}`}\n        className={clsx('cd-board-entry', `cd-board-entry--${entry.affiliation[sideIndex]}`)}\n      >\n        <ItemCard\n          id={`${entry.data.id}`}\n          title={entry.data.name ? dualTranslate(entry.data.name) : undefined}\n        />\n      </div>\n    );\n  }\n\n  if (deckType === 'images') {\n    return (\n      <div\n        key={`cd-board-entry-${entry.data.id}`}\n        className={clsx('cd-board-entry', `cd-board-entry--${entry.affiliation[sideIndex]}`)}\n      >\n        <ImageCard id={entry.data.id} cardWidth={72} className=\"board-entry-image-card\" />\n      </div>\n    );\n  }\n\n  return <div className=\"cd-board-entry\">{entry.id}</div>;\n}\n","import clsx from 'clsx';\nimport { useMemo, type ReactNode } from 'react';\nimport { useToggle } from 'react-use';\n// Ant Design Resources\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { Button, Image, Popconfirm, Tooltip } from 'antd';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Icons\nimport { AlienHeartEyesIcon } from 'icons/AlienHeartEyesIcon';\nimport { AlienNeutralIcon } from 'icons/AlienNeutralIcon';\nimport { AlienStarEyesIcon } from 'icons/AlienStarEyesIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { TransparentButton } from 'components/buttons';\nimport { Translate } from 'components/language';\n// Internal\nimport type { DeckEntry } from '../utils/types';\nimport { AFFILIATIONS, DECK_ENTRY_STATUS, SIDES } from '../utils/constants';\nimport { BoardEntry } from './BoardEntry';\n\ntype BoardProps = {\n  deck: DeckEntry[];\n  deckType: string;\n  userSide: string;\n  userId: string;\n  onClick?: (entry: DeckEntry) => void;\n  animateEntries?: string[];\n  disabled?: boolean;\n};\n\nexport function Board({\n  deck,\n  deckType,\n  userId,\n  userSide,\n  onClick,\n  animateEntries = [],\n  disabled,\n}: BoardProps) {\n  const userIndex = SIDES.indexOf(userSide);\n\n  const hasTheOtherPlayersTabooBeenSelected = useMemo(() => {\n    // If any of your three taboo has been selected and it's the other player's affiliation.\n    const otherPlayerIndex = userIndex === 0 ? 1 : 0;\n    const otherPlayerSide = getOtherSide(userSide);\n    return deck.some(\n      (entry) =>\n        entry.affiliation[userIndex] === AFFILIATIONS.TABOO &&\n        entry.affiliation[otherPlayerIndex] === otherPlayerSide &&\n        entry.deliveredBy?.length,\n    );\n  }, [deck, userSide, userIndex]);\n\n  return (\n    <Image.PreviewGroup>\n      <div className=\"cd-board\">\n        {deck.map((entry) => {\n          const disabledTaboo =\n            entry.affiliation[userIndex] === AFFILIATIONS.TABOO && hasTheOtherPlayersTabooBeenSelected;\n\n          if (\n            onClick &&\n            entry.status === DECK_ENTRY_STATUS.IDLE &&\n            !entry.deliveredBy?.includes(userId) &&\n            !disabledTaboo\n          ) {\n            return (\n              <Popconfirm\n                key={entry.id}\n                title={\n                  <Translate\n                    en=\"Are you sure you want to deliver this item?\"\n                    pt=\"Você tem certeza que deseja entregar este item?\"\n                  />\n                }\n                trigger={deckType === 'images' ? 'hover' : 'click'}\n                onConfirm={() => onClick(entry)}\n              >\n                <TransparentButton\n                  key={entry.id}\n                  disabled={disabled}\n                  className=\"cd-board-entry-entry-wrapper\"\n                >\n                  <NeutralDeliveriesWrapper\n                    entry={entry}\n                    userId={userId}\n                    userSide={userSide}\n                    animateEntries={animateEntries}\n                  >\n                    <BoardEntry entry={entry} deckType={deckType} userSide={userSide} />\n                  </NeutralDeliveriesWrapper>\n                </TransparentButton>\n              </Popconfirm>\n            );\n          }\n\n          if (entry.status === DECK_ENTRY_STATUS.A || entry.status === DECK_ENTRY_STATUS.B) {\n            return (\n              <span\n                key={entry.id}\n                className={clsx(animateEntries.includes(entry.id) && getAnimationClass('slideInDown'))}\n              >\n                <CoverAlienCard side={entry.status}>\n                  <BoardEntry entry={entry} deckType={deckType} userSide={userSide} />\n                </CoverAlienCard>\n              </span>\n            );\n          }\n\n          if ((entry?.deliveredBy?.length ?? 0) > 0) {\n            return (\n              <div key={entry.id} className=\"cd-board-entry-entry-wrapper\">\n                <NeutralDeliveriesWrapper\n                  entry={entry}\n                  userId={userId}\n                  userSide={userSide}\n                  animateEntries={animateEntries}\n                >\n                  <BoardEntry entry={entry} deckType={deckType} userSide={userSide} />\n                </NeutralDeliveriesWrapper>\n              </div>\n            );\n          }\n\n          return (\n            <div\n              key={entry.id}\n              className={clsx(\n                'cd-board-entry-entry-wrapper',\n                disabledTaboo && onClick && 'cd-board-entry-entry-wrapper--not-allowed',\n              )}\n            >\n              {disabledTaboo && (\n                <div className=\"cd-board-entry-taboo\">\n                  <Tooltip\n                    title={\n                      <Translate\n                        en=\"You already found the other player's item that matches one of your taboos so none of these other ones can be an item for the other player anymore.\"\n                        pt=\"Você já encontrou o item do outro jogador que corresponde a um dos seus tabus, então nenhum desses outros tabus seus pode ser um item para o outro jogador.\"\n                      />\n                    }\n                  >\n                    <Button shape=\"circle\" size=\"small\" icon={<CloseCircleOutlined />} />\n                  </Tooltip>\n                </div>\n              )}\n              <BoardEntry entry={entry} deckType={deckType} userSide={userSide} />\n            </div>\n          );\n        })}\n      </div>\n    </Image.PreviewGroup>\n  );\n}\n\ntype CoverAlienCardProps = {\n  side: string;\n  children: ReactNode;\n};\nfunction CoverAlienCard({ side, children }: CoverAlienCardProps) {\n  const [open, setOpen] = useToggle(false);\n\n  return (\n    <div className=\"cd-board-entry-cover\" onClick={setOpen}>\n      <div\n        className={clsx(\n          'cd-board-entry-cover__alien',\n          `cd-board-entry-cover__alien--${getOtherSide(side)}`,\n          open && 'cd-board-entry-cover__alien--open',\n        )}\n      >\n        {side === 'A' ? (\n          <AlienHeartEyesIcon style={{ width: 36 }} />\n        ) : (\n          <AlienStarEyesIcon style={{ width: 36 }} />\n        )}\n      </div>\n      {children}\n    </div>\n  );\n}\n\ntype NeutralDeliveriesWrapperProps = {\n  children: ReactNode;\n  entry: DeckEntry;\n  userId: string;\n  userSide: string;\n  animateEntries: string[];\n};\n\nfunction NeutralDeliveriesWrapper({\n  children,\n  entry,\n  userId,\n  userSide,\n  animateEntries,\n}: NeutralDeliveriesWrapperProps) {\n  if ((entry?.deliveredBy?.length ?? 0) === 0) {\n    return <>{children}</>;\n  }\n\n  const haveIDelivered = entry.deliveredBy?.includes(userId);\n  const hasTheOtherPlayerDelivered = !!entry.deliveredBy?.filter((id) => id !== userId).length;\n\n  return (\n    <div\n      className={clsx(\n        'cd-board-entry-neutral',\n        entry.deliveredBy?.includes(userId) && 'cd-board-entry-neutral--not-allowed',\n      )}\n    >\n      {haveIDelivered && (\n        <span className={clsx(animateEntries.includes(entry.id) && getAnimationClass('tada'))}>\n          <IconAvatar\n            className={clsx('cd-board-entry-neutral-item', `cd-board-entry-neutral-item--${userSide}`)}\n            icon={<AlienNeutralIcon color={userSide === 'A' ? 'teal' : 'orange'} />}\n          />\n        </span>\n      )}\n      {hasTheOtherPlayerDelivered && (\n        <span className={clsx(animateEntries.includes(entry.id) && getAnimationClass('tada'))}>\n          <IconAvatar\n            className={clsx(\n              'cd-board-entry-neutral-item',\n              `cd-board-entry-neutral-item--${getOtherSide(userSide)}`,\n            )}\n            icon={<AlienNeutralIcon color={userSide === 'A' ? 'orange' : 'teal'} />}\n          />\n        </span>\n      )}\n      {children}\n    </div>\n  );\n}\n\nconst getOtherSide = (side: string) => (side === 'A' ? 'B' : 'A');\n","import type { GamePlayers } from 'types/player';\nimport type { Summary } from '../utils/types';\nimport { Translate } from 'components/language';\nimport { AvatarName } from 'components/avatars';\nimport type { GameRound } from 'types/game';\n\ntype SummaryBoxProps = {\n  summary: Summary;\n  players: GamePlayers;\n  round: GameRound;\n};\n\nexport function SummaryBox({ summary, players, round }: SummaryBoxProps) {\n  const playerA = Object.values(players).find((player) => player.side === 'A');\n  const playerB = Object.values(players).find((player) => player.side === 'B');\n\n  if (!playerA || !playerB) return null;\n\n  return (\n    <div className=\"cd-summary\">\n      <div className=\"cd-summary__entry\">\n        <div className=\"cd-summary__number\">{round.total - round.current + 1}</div>\n        <div className=\"cd-summary__entry-label\">\n          <Translate en=\"Rounds left\" pt=\"Rodadas restantes\" />\n        </div>\n      </div>\n\n      <div className=\"cd-summary__entry\">\n        <div className=\"cd-summary__number cd-summary__number--left\">{summary.deliverablesLeft}</div>\n        <div className=\"cd-summary__entry-label\">\n          <Translate en=\"Items left\" pt=\"Itens restantes\" />\n        </div>\n      </div>\n\n      <div className=\"cd-summary__entry\">\n        <div className=\"cd-summary__number cd-summary__number--A\">{summary.deliverablesLeftForA}</div>\n        <div className=\"cd-summary__entry-label\">\n          <AvatarName player={playerA} />\n        </div>\n      </div>\n\n      <div className=\"cd-summary__entry\">\n        <div className=\"cd-summary__number cd-summary__number--B\">{summary.deliverablesLeftForB}</div>\n        <div className=\"cd-summary__entry-label\">\n          <AvatarName player={playerB} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { ImageCard } from 'components/image-cards';\n// Internal\nimport type { DeckEntry } from '../utils/types';\nimport { SIDES } from '../utils/constants';\n\ntype HistoryDeliverableEntryProps = {\n  deliverable: DeckEntry;\n  deckType: string;\n  userSide: string;\n};\n\nexport function HistoryDeliverableEntry({ deliverable, deckType, userSide }: HistoryDeliverableEntryProps) {\n  const { dualTranslate } = useLanguage();\n\n  const sideIndex = SIDES.indexOf(userSide);\n\n  if (deckType === 'items') {\n    return (\n      <div\n        key={`cd-history-entry-${deliverable.data.id}`}\n        className={clsx('cd-history-entry', `cd-history-entry--${deliverable.affiliation[sideIndex]}`)}\n      >\n        <ItemCard\n          id={`${deliverable.data.id}`}\n          title={deliverable.data.name ? dualTranslate(deliverable.data.name) : undefined}\n          width={64}\n        />\n      </div>\n    );\n  }\n\n  if (deckType === 'images') {\n    return (\n      <div\n        key={`cd-history-entry-${deliverable.data.id}`}\n        className={clsx('cd-history-entry', `cd-history-entry--${deliverable.affiliation[sideIndex]}`)}\n      >\n        <ImageCard id={deliverable.data.id} cardWidth={48} className=\"history-entry-image-card\" />\n      </div>\n    );\n  }\n\n  return <div className=\"cd-board-entry\">{deliverable.id}</div>;\n}\n","import { keyBy } from 'lodash';\nimport { useMemo } from 'react';\n// Ant Design Resources\nimport { Collapse, Table, type TableProps, type CollapseProps, Flex } from 'antd';\n// Types\nimport type { GamePlayers } from 'types/player';\n// Components\nimport { AlienText } from 'components/alien/AlienText';\nimport { AvatarName } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n// Internal\nimport type { DeckEntry, HistoryEntry } from '../utils/types';\nimport { HistoryDeliverableEntry } from './HistoryDeliverableEntry';\n\ntype HistoryProps = {\n  players: GamePlayers;\n  history: HistoryEntry[];\n  clueInputType: string;\n  deck: DeckEntry[];\n  deckType: string;\n  userSide: string;\n};\n\nexport function History({ history, players, deck, deckType, clueInputType, userSide }: HistoryProps) {\n  const deckDict = useMemo(() => keyBy(deck, 'id'), [deck]);\n\n  const columns: TableProps<HistoryEntry>['columns'] = [\n    {\n      key: 'player',\n      title: <Translate pt=\"Jogador\" en=\"Player\" />,\n      dataIndex: 'requesterId',\n      render: (requesterId) => <AvatarName player={players[requesterId]} />,\n    },\n    {\n      key: 'clue',\n      title: <Translate pt=\"Pedido\" en=\"Dica\" />,\n      dataIndex: 'clue',\n      render: (clue) => {\n        if (clueInputType === 'alien-keyboard') {\n          return <AlienText value={clue} withTranslation />;\n        }\n        return clue;\n      },\n    },\n    {\n      key: 'quantity',\n      title: <Translate pt=\"Quantidade\" en=\"Quantity\" />,\n      dataIndex: 'quantity',\n    },\n    {\n      key: 'deliverables',\n      title: <Translate pt=\"Itens\" en=\"Items\" />,\n      dataIndex: 'deliverables',\n      render: (deliverables: string[]) => {\n        return (\n          <Flex wrap=\"wrap\" gap={8}>\n            {deliverables.map((deliverableId) => (\n              <HistoryDeliverableEntry\n                key={deliverableId}\n                deliverable={deckDict[deliverableId]}\n                deckType={deckType}\n                userSide={userSide}\n              />\n            ))}\n          </Flex>\n        );\n      },\n    },\n  ];\n\n  const panels: CollapseProps['items'] = [\n    {\n      key: 'history',\n      label: <Translate pt=\"Histórico de Perguntas\" en=\"Inquiry History\" />,\n      children: <Table dataSource={history} columns={columns} pagination={false} />,\n    },\n  ];\n\n  return (\n    <Instruction contained>\n      <Collapse items={panels} />\n    </Instruction>\n  );\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Flex, Input, InputNumber } from 'antd';\n// Types\nimport type { GameRound } from 'types/game';\nimport type { GamePlayers, GamePlayer } from 'types/player';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\n// Components\nimport { AlienKeyboard } from 'components/alien/AlienKeyboard';\nimport { AlienText } from 'components/alien/AlienText';\nimport { AvatarName } from 'components/avatars';\nimport { SendButton } from 'components/buttons';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { Step, type StepProps } from 'components/steps';\nimport { RuleInstruction, StepTitle } from 'components/text';\nimport { ViewIf } from 'components/views';\n// Internal\nimport type { DeckEntry, HistoryEntry, SubmitRequestPayload, Summary } from './utils/types';\nimport { STATUS } from './utils/constants';\nimport { Board } from './components/Board';\nimport { SummaryBox } from './components/SummaryBox';\nimport { History } from './components/History';\n\ntype StepAskProps = {\n  players: GamePlayers;\n  user: GamePlayer;\n  deckType: string;\n  deck: DeckEntry[];\n  status: string;\n  history: HistoryEntry[];\n  requester: GamePlayer;\n  isTheRequester: boolean;\n  summary: Summary;\n  clueInputType: string;\n  round: GameRound;\n  onSubmitRequest: (payload: SubmitRequestPayload) => void;\n} & Pick<StepProps, 'announcement'>;\n\nexport function StepAsk({\n  players,\n  user,\n  announcement,\n  deckType,\n  deck,\n  status,\n  history,\n  requester,\n  isTheRequester,\n  summary,\n  clueInputType,\n  round,\n  onSubmitRequest,\n}: StepAskProps) {\n  const { isLoading } = useLoading();\n  const [sentence, setSentence] = useState<string>('');\n  const [clueQuantity, setQuantity] = useState<number>(1);\n  const { dualTranslate } = useLanguage();\n\n  const onSubmit = () => {\n    onSubmitRequest({ clue: sentence, clueQuantity });\n  };\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <StepTitle size=\"small\" wait={isTheRequester}>\n        {isTheRequester ? (\n          <Translate pt={<>Peça algo!</>} en={<>Ask for something!</>} />\n        ) : (\n          <Translate\n            pt={\n              <>\n                Aguarde <AvatarName player={requester} /> pedir algo\n              </>\n            }\n            en={\n              <>\n                Wait for <AvatarName player={requester} /> to ask for something\n              </>\n            }\n          />\n        )}\n      </StepTitle>\n\n      <RuleInstruction type=\"rule\">\n        {status === STATUS.IDLE ? (\n          <Translate\n            en=\"It's the first round, so any of you can give the first clue\"\n            pt=\"É a primeira rodada, então qualquer um de vocês pode dar a primeira dica\"\n          />\n        ) : (\n          <Translate\n            en=\"Players alternate asking for items, unless one player is done asking for all of their items\"\n            pt=\"Os jogadores alternam pedindo itens, a menos que um jogador tenha terminado de pedir todos os seus itens\"\n          />\n        )}\n      </RuleInstruction>\n\n      <Flex gap={8} align=\"center\">\n        <Board deck={deck} deckType={deckType} userId={user.id} userSide={user.side} />\n        <SummaryBox summary={summary} players={players} round={round} />\n      </Flex>\n\n      <ViewIf condition={clueInputType === 'alien-keyboard'}>\n        <ViewIf condition={isTheRequester}>\n          <RuleInstruction type=\"action\">\n            <Translate\n              en=\"Use the keyboard below to type your request and add the number of items you want\"\n              pt=\"Use o teclado abaixo para digitar seu pedido e adicione o número de itens que deseja\"\n            />\n          </RuleInstruction>\n        </ViewIf>\n\n        <SpaceContainer vertical>\n          <ViewIf condition={isTheRequester}>\n            <Flex gap={8} align=\"center\">\n              <AlienText value={sentence} withTranslation />\n              <strong>\n                <Translate en=\"Quantity\" pt=\"Quantidade\" />:\n              </strong>\n              <InputNumber\n                value={clueQuantity}\n                onChange={(v) => setQuantity(v ?? 1)}\n                min={0}\n                max={6}\n                size=\"large\"\n              />\n              <SendButton size=\"large\" loading={isLoading} disabled={!sentence} onClick={onSubmit}>\n                <Translate en=\"Submit\" pt=\"Enviar\" />\n              </SendButton>\n            </Flex>\n          </ViewIf>\n          <AlienKeyboard value={sentence} onChange={setSentence} disabled={!isTheRequester || user.ready} />\n        </SpaceContainer>\n      </ViewIf>\n\n      <ViewIf condition={clueInputType !== 'alien-keyboard' && isTheRequester}>\n        <RuleInstruction type=\"rule\">\n          <Translate\n            en=\"You can ask for items by typing your request in the input box\"\n            pt=\"Você pode pedir itens digitando seu pedido no campo de entrada\"\n          />\n        </RuleInstruction>\n\n        <SpaceContainer vertical>\n          <Flex gap={8} align=\"center\">\n            <Input\n              size=\"large\"\n              value={sentence}\n              onChange={(e) => setSentence(e.target.value)}\n              placeholder={dualTranslate({\n                pt: 'Digite seu pedido aqui',\n                en: 'Type your request here',\n              })}\n            />\n            <strong>\n              <Translate en=\"Quantity\" pt=\"Quantidade\" />:\n            </strong>\n            <InputNumber\n              value={clueQuantity}\n              onChange={(v) => setQuantity(v ?? 1)}\n              min={0}\n              max={6}\n              size=\"large\"\n            />\n          </Flex>\n          <SendButton size=\"large\" loading={isLoading} disabled={!sentence} onClick={onSubmit}>\n            <Translate en=\"Submit\" pt=\"Enviar\" />\n          </SendButton>\n        </SpaceContainer>\n      </ViewIf>\n\n      <History\n        history={history}\n        players={players}\n        deck={deck}\n        deckType={deckType}\n        clueInputType={clueInputType}\n        userSide={user.side}\n      />\n    </Step>\n  );\n}\n","// Types\nimport type { PhaseProps } from 'types/game';\n// Hooks\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { QuestionIcon } from 'icons/QuestionIcon';\n// Components\nimport { Translate } from 'components/language';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\n// Internal\nimport { STATUS } from './utils/constants';\nimport { useOnSubmitRequestAPIRequest } from './utils/api-requests';\nimport { StepAsk } from './StepAsk';\n\nexport function PhaseAskingForSomething({ players, state }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step } = useStep();\n  const [requester, isTheRequester] =\n    state.status === STATUS.IDLE ? [user, true] : useWhichPlayerIsThe('requesterId', state, players);\n\n  const onSubmitRequest = useOnSubmitRequestAPIRequest();\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<QuestionIcon />}\n      title={\n        isTheRequester ? (\n          <Translate pt=\"Peça algo\" en=\"Ask for something\" />\n        ) : (\n          <Translate pt=\"O outro jogador pede algo\" en=\"The other player asks for something\" />\n        )\n      }\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <Instruction>\n        <Translate\n          pt={<>Cada alienígena deve dar dicar para todos os itens marcados com sua cor</>}\n          en={<>Each alien must give clues for all items marked with their color</>}\n        />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer phase={state?.phase} allowedPhase={PHASES.COMUNICACAO_DUO.ASKING_FOR_SOMETHING}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepAsk\n          user={user}\n          players={players}\n          announcement={announcement}\n          deckType={state.deckType}\n          deck={state.deck}\n          status={state.status}\n          history={state.history}\n          requester={requester}\n          isTheRequester={isTheRequester}\n          summary={state.summary}\n          clueInputType={state.clueInputType}\n          onSubmitRequest={onSubmitRequest}\n          round={state.round}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","// Hooks\nimport { useGameActionRequest } from 'hooks/useGameActionRequest';\nimport { useLanguage } from 'hooks/useLanguage';\n// Internal\nimport type { SubmitDeliveryPayload, SubmitRequestPayload } from './types';\nimport { COMUNICACAO_DUO_ACTIONS } from './constants';\n\nexport function useOnSubmitRequestAPIRequest() {\n  const { translate } = useLanguage();\n\n  const request = useGameActionRequest({\n    actionName: 'submit-request',\n    successMessage: translate('Ação submetida com sucesso', 'Action submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua ação',\n      'Oops, the application found an error while trying to submit your action',\n    ),\n  });\n\n  return (payload: SubmitRequestPayload) => {\n    request({\n      action: COMUNICACAO_DUO_ACTIONS.SUBMIT_REQUEST,\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitDeliveryAPIRequest() {\n  const { translate } = useLanguage();\n\n  const request = useGameActionRequest({\n    actionName: 'submit-delivery',\n    successMessage: translate('Ação submetida com sucesso', 'Action submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua ação',\n      'Oops, the application found an error while trying to submit your action',\n    ),\n  });\n\n  return (payload: SubmitDeliveryPayload) => {\n    request({\n      action: COMUNICACAO_DUO_ACTIONS.SUBMIT_DELIVERY,\n      ...payload,\n    });\n  };\n}\n\nexport function useOnStopDeliveryAPIRequest() {\n  const { translate } = useLanguage();\n\n  const request = useGameActionRequest({\n    actionName: 'stop-delivery',\n\n    successMessage: translate('Ação submetida com sucesso', 'Action submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua ação',\n      'Oops, the application found an error while trying to submit your action',\n    ),\n  });\n\n  return () => {\n    request({\n      action: COMUNICACAO_DUO_ACTIONS.STOP_DELIVERY,\n    });\n  };\n}\n","import { useMemo } from 'react';\n// Ant Design Resources\nimport { Flex } from 'antd';\n// Types\nimport type { GameRound } from 'types/game';\nimport type { GamePlayers, GamePlayer } from 'types/player';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { AlienKeyboard } from 'components/alien/AlienKeyboard';\nimport { AlienText } from 'components/alien/AlienText';\nimport { HostNextPhaseButton } from 'components/host';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { Step, type StepProps } from 'components/steps';\nimport { RuleInstruction, StepTitle, TextHighlight } from 'components/text';\nimport { ViewIf, ViewOr } from 'components/views';\n// Internal\nimport type { DeckEntry, HistoryEntry, Summary } from './utils/types';\nimport { STATUS } from './utils/constants';\nimport { Board } from './components/Board';\nimport { SummaryBox } from './components/SummaryBox';\nimport { History } from './components/History';\n\ntype StepDeliverProps = {\n  players: GamePlayers;\n  user: GamePlayer;\n  deckType: string;\n  deck: DeckEntry[];\n  status: string;\n  history: HistoryEntry[];\n  summary: Summary;\n  clueInputType: string;\n  round: GameRound;\n  clue: string;\n  clueQuantity: number;\n  entryIdToAnimate: string | null;\n  nextPhase: string;\n} & Pick<StepProps, 'announcement'>;\n\nexport function StepVerification({\n  players,\n  user,\n  deckType,\n  deck,\n  status,\n  history,\n  summary,\n  clueInputType,\n  round,\n  clue,\n  clueQuantity,\n  entryIdToAnimate,\n  nextPhase,\n}: StepDeliverProps) {\n  const results = useMemo(() => {\n    // Delivered nothing / skipped\n    if (status === STATUS.CONTINUE && !entryIdToAnimate) {\n      return {\n        en: (\n          <>\n            <strong>Skip!</strong> All done for this round, let's try another clue\n          </>\n        ),\n        pt: (\n          <>\n            <strong>Passa!</strong> Tudo certo para esta rodada, vamos tentar outra dica\n          </>\n        ),\n      };\n    }\n\n    // All delivered\n    if (status === STATUS.WIN) {\n      return {\n        en: <>All items have been found!</>,\n        pt: <>Todos os itens foram encontrados!</>,\n      };\n    }\n\n    // Delivered taboo\n    if (status === STATUS.LOSE) {\n      return {\n        en: (\n          <>\n            Nooooo, a <TextHighlight>taboo</TextHighlight> item has been selected!\n          </>\n        ),\n        pt: (\n          <>\n            Nãããão, um item <TextHighlight>taboo</TextHighlight> foi selecionado!\n          </>\n        ),\n      };\n    }\n\n    // Delivered incorrectly\n    if (status === STATUS.CONTINUE) {\n      if (nextPhase === PHASES.COMUNICACAO_DUO.ASKING_FOR_SOMETHING) {\n        return {\n          en: (\n            <>\n              <TextHighlight>Neutral!</TextHighlight> All done fir this round, let's try another clue.\n            </>\n          ),\n          pt: (\n            <>\n              <TextHighlight>Neutral!</TextHighlight> Vamos para a próxima rodada.\n            </>\n          ),\n        };\n      }\n    }\n\n    // Delivered correct\n    return {\n      en: (\n        <>\n          <TextHighlight>Correct!</TextHighlight> Want to try one more item?\n        </>\n      ),\n      pt: (\n        <>\n          <TextHighlight>Correto!</TextHighlight> Quer tentar outro item?\n        </>\n      ),\n    };\n  }, [status, entryIdToAnimate, nextPhase]);\n\n  return (\n    <Step fullWidth>\n      <StepTitle size=\"small\">\n        <Translate en=\"Results\" pt=\"Resultado\" />\n      </StepTitle>\n\n      <RuleInstruction type=\"event\">\n        <Translate en={results.en} pt={results.pt} />\n      </RuleInstruction>\n\n      <HostNextPhaseButton round={round} autoTriggerTime={3} withWaitingTimeBar />\n\n      <Flex gap={8} align=\"center\" className=\"mb-4\">\n        <div className=\"cd-clue-quantity\">{clueQuantity}</div>\n        <ViewOr condition={clueInputType === 'alien-keyboard'}>\n          <AlienText value={clue} withTranslation />\n          <TextHighlight style={{ fontSize: '1.5rem', background: 'white' }}>{clue}</TextHighlight>\n        </ViewOr>\n      </Flex>\n\n      <Flex gap={8} align=\"center\">\n        <Board\n          deck={deck}\n          deckType={deckType}\n          userId={user.id}\n          userSide={user.side}\n          animateEntries={entryIdToAnimate ? [entryIdToAnimate] : []}\n        />\n        <SummaryBox summary={summary} players={players} round={round} />\n      </Flex>\n\n      <ViewIf condition={clueInputType === 'alien-keyboard'}>\n        <SpaceContainer>\n          <AlienKeyboard value={''} onChange={() => {}} disabled />\n        </SpaceContainer>\n      </ViewIf>\n\n      <History\n        history={history}\n        players={players}\n        deck={deck}\n        deckType={deckType}\n        clueInputType={clueInputType}\n        userSide={user.side}\n      />\n    </Step>\n  );\n}\n","// Types\nimport type { PhaseProps } from 'types/game';\n// Hooks\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Icons\n// Components\nimport { PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\n// Internal\nimport { StepVerification } from './StepVerification';\n\nexport function PhaseVerification({ players, state }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step } = useStep();\n\n  return (\n    <PhaseContainer phase={state?.phase} allowedPhase={PHASES.COMUNICACAO_DUO.VERIFICATION}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepVerification\n          user={user}\n          players={players}\n          deckType={state.deckType}\n          deck={state.deck}\n          status={state.status}\n          history={state.history}\n          summary={state.summary}\n          clueInputType={state.clueInputType}\n          clue={state.clue}\n          clueQuantity={state.clueQuantity}\n          round={state.round}\n          entryIdToAnimate={state.entryIdToAnimate}\n          nextPhase={state.nextPhase}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","// Ant Design Resources\nimport { Flex } from 'antd';\n// Types\nimport type { GameRound } from 'types/game';\nimport type { GamePlayers, GamePlayer } from 'types/player';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\n// Components\nimport { AlienKeyboard } from 'components/alien/AlienKeyboard';\nimport { AlienText } from 'components/alien/AlienText';\nimport { SendButton } from 'components/buttons';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { Step, type StepProps } from 'components/steps';\nimport { RuleInstruction, StepTitle, TextHighlight } from 'components/text';\nimport { ViewIf, ViewOr } from 'components/views';\n// Internal\nimport type { DeckEntry, HistoryEntry, SubmitDeliveryPayload, Summary } from './utils/types';\nimport { Board } from './components/Board';\nimport { SummaryBox } from './components/SummaryBox';\nimport { History } from './components/History';\n\ntype StepDeliverProps = {\n  players: GamePlayers;\n  user: GamePlayer;\n  deckType: string;\n  deck: DeckEntry[];\n  status: string;\n  history: HistoryEntry[];\n  requester: GamePlayer;\n  isTheRequester: boolean;\n  summary: Summary;\n  clueInputType: string;\n  round: GameRound;\n  onSubmitDelivery: (payload: SubmitDeliveryPayload) => void;\n  onStopDelivery: () => void;\n  clue: string;\n  clueQuantity: number;\n} & Pick<StepProps, 'announcement'>;\n\nexport function StepDeliver({\n  players,\n  user,\n  announcement,\n  deckType,\n  deck,\n  history,\n  isTheRequester,\n  summary,\n  clueInputType,\n  round,\n  onSubmitDelivery,\n  onStopDelivery,\n  clue,\n  clueQuantity,\n}: StepDeliverProps) {\n  const { isLoading } = useLoading();\n\n  const onDeliver = (entry: DeckEntry) => {\n    onSubmitDelivery({ delivery: entry.id });\n  };\n\n  const latestHistoryEntry = history[history.length - 1];\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <StepTitle size=\"small\" wait={isTheRequester}>\n        {!isTheRequester ? (\n          <Translate pt={<>Dê um item</>} en={<>Give an item</>} />\n        ) : (\n          <Translate\n            pt={<>Aguarde o outro jogador responder com alguma coisa</>}\n            en={<>Wait for the other player to answer with something</>}\n          />\n        )}\n      </StepTitle>\n\n      <RuleInstruction type={isTheRequester ? 'wait' : 'action'}>\n        {isTheRequester ? (\n          <>\n            <Translate\n              en=\"You asked for an item and the other player now must deliver at least one item. If they are correct, they can try another\"\n              pt=\"Você pediu um item e o outro jogador agora deve entregar pelo menos um deles. Se eles acertarem, podem tentar outro\"\n            />\n            <br />\n            <Translate\n              en=\"After delivering at least one, the player may stop and skip to the next turn\"\n              pt=\"Depois de entregar pelo menos um, o jogador pode parar e pular para a próxima rodada\"\n            />\n          </>\n        ) : (\n          <>\n            <Translate\n              en=\"The other player asked for an item and you must deliver at least one item. If you are correct, you can try another\"\n              pt=\"O outro jogador pediu um item e você deve entregar pelo menos um deles. Se você acertar, você pode tentar outro\"\n            />\n            <br />\n            <Translate\n              en=\"Click on the item one by one to deliver them. After delivering at least one, you will able to stop and skip to the next turn\"\n              pt=\"Clique nos itens um por um para entregá-los. Depois de entregar pelo menos um, você poderá parar e pular para a próxima rodada\"\n            />\n          </>\n        )}\n      </RuleInstruction>\n      <ViewIf condition={latestHistoryEntry.deliverables?.length > 0 && !isTheRequester}>\n        <RuleInstruction type=\"rule\">\n          {latestHistoryEntry.deliverables?.length >= clueQuantity ? (\n            <Translate\n              en=\"You have delivered all the items you needed in this round. You can stop now or try to deliver more\"\n              pt=\"Você entregou todos os itens que precisava nesta rodada. Você pode parar agora ou tentar entregar mais\"\n            />\n          ) : (\n            <Translate\n              en={`You have delivered ${latestHistoryEntry.deliverables?.length} things this round. You may stop now and skip to the next turn`}\n              pt={`Você entregou ${latestHistoryEntry.deliverables?.length} coisas essa rodada. Você pode parar agora e pular para a próxima rodada`}\n            />\n          )}\n          <br />\n          <SendButton onClick={onStopDelivery} type=\"primary\" loading={isLoading}>\n            <Translate en=\"Stop\" pt=\"Parar\" />\n          </SendButton>\n        </RuleInstruction>\n      </ViewIf>\n\n      <Flex gap={8} align=\"center\" className=\"mb-4\">\n        <div className=\"cd-clue-quantity\">{clueQuantity}</div>\n        <ViewOr condition={clueInputType === 'alien-keyboard'}>\n          <AlienText value={clue} withTranslation />\n          <TextHighlight style={{ fontSize: '1.5rem', background: 'white' }}>{clue}</TextHighlight>\n        </ViewOr>\n      </Flex>\n\n      <Flex gap={8} align=\"center\">\n        <Board\n          deck={deck}\n          deckType={deckType}\n          userId={user.id}\n          userSide={user.side}\n          onClick={!isTheRequester ? onDeliver : undefined}\n          disabled={isLoading}\n        />\n        <SummaryBox summary={summary} players={players} round={round} />\n      </Flex>\n\n      <ViewIf condition={clueInputType === 'alien-keyboard'}>\n        <SpaceContainer>\n          <AlienKeyboard value={''} onChange={() => {}} disabled />\n        </SpaceContainer>\n      </ViewIf>\n\n      <History\n        history={history}\n        players={players}\n        deck={deck}\n        deckType={deckType}\n        clueInputType={clueInputType}\n        userSide={user.side}\n      />\n    </Step>\n  );\n}\n","// Types\nimport type { PhaseProps } from 'types/game';\n// Hooks\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { MysteryBoxIcon } from 'icons/MysteryBoxIcon';\n// Components\nimport { AlienText } from 'components/alien/AlienText';\nimport { Translate } from 'components/language';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction, TextHighlight } from 'components/text';\nimport { ViewOr } from 'components/views';\n// Internal\nimport { useOnStopDeliveryAPIRequest, useOnSubmitDeliveryAPIRequest } from './utils/api-requests';\nimport { StepDeliver } from './StepDeliver';\n\nexport function PhaseDeliveringSomething({ players, state }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step } = useStep();\n  const [requester, isTheRequester] = useWhichPlayerIsThe('requesterId', state, players);\n\n  const onSubmitDelivery = useOnSubmitDeliveryAPIRequest();\n  const onStopDelivery = useOnStopDeliveryAPIRequest();\n\n  const latestHistoryEntry = state.history[state.history.length - 1];\n  const hasADelivery = latestHistoryEntry.deliverables.length > 0;\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<MysteryBoxIcon />}\n      title={\n        isTheRequester ? (\n          <Translate pt=\"Você pediu!\" en=\"You asked for\" />\n        ) : (\n          <Translate pt=\"Por favor, me vê aí...\" en=\"Please give me...\" />\n        )\n      }\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n      duration={3}\n    >\n      <Instruction>\n        <ViewOr condition={state.clueInputType === 'alien-keyboard'}>\n          <AlienText value={state.clue ?? ''} />\n\n          <TextHighlight style={{ fontSize: '1.5rem' }}>{state.clue}</TextHighlight>\n        </ViewOr>\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer phase={state?.phase} allowedPhase={PHASES.COMUNICACAO_DUO.DELIVER_SOMETHING}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepDeliver\n          user={user}\n          players={players}\n          announcement={hasADelivery ? undefined : announcement}\n          deckType={state.deckType}\n          deck={state.deck}\n          status={state.status}\n          history={state.history}\n          requester={requester}\n          isTheRequester={isTheRequester}\n          summary={state.summary}\n          clueInputType={state.clueInputType}\n          clue={state.clue}\n          clueQuantity={state.clueQuantity}\n          onSubmitDelivery={onSubmitDelivery}\n          onStopDelivery={onStopDelivery}\n          round={state.round}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","// Ant Design Resources\nimport { Flex } from 'antd';\n// Types\nimport type { PhaseProps } from 'types/game';\n// Hooks\nimport { useUser } from 'hooks/useUser';\n// Icons\nimport { TheEndIcon } from 'icons/TheEndIcon';\n// Components\nimport { GameOverWrapper } from 'components/game-over';\nimport { Achievements } from 'components/general/Achievements';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { Instruction, Title } from 'components/text';\n// Internal\nimport { STATUS } from './utils/constants';\nimport achievementsReference from './utils/achievements';\nimport { Board } from './components/Board';\nimport { SummaryBox } from './components/SummaryBox';\nimport { History } from './components/History';\n// Internal;\n\nexport function PhaseGameOver({ state, players }: PhaseProps) {\n  const user = useUser(players, state);\n\n  return (\n    <GameOverWrapper state={state} players={players} announcementIcon={<TheEndIcon />}>\n      <SpaceContainer vertical>\n        {state.status === STATUS.WIN && (\n          <>\n            <Title level={3}>\n              <Translate pt=\"Vocês venceram!\" en=\"You won!\" />\n            </Title>\n            <Instruction contained>\n              <Translate pt=\"Vocês comunicaram todos os items\" en=\"You communicated all items\" />\n            </Instruction>\n          </>\n        )}\n        {state.status === STATUS.LOSE && (\n          <>\n            <Title level={3}>\n              <Translate pt=\"Vocês perderam!\" en=\"You lost!\" />\n            </Title>\n            <Instruction contained>\n              <Translate pt=\"Alguém clicou em  um tabu\" en=\"Someone selected a taboo\" />\n            </Instruction>\n          </>\n        )}\n        {state.status === STATUS.CONTINUE && (\n          <>\n            <Title level={3}>\n              <Translate pt=\"Vocês perderam!\" en=\"You lost!\" />\n            </Title>\n            <Instruction contained>\n              <Translate\n                pt=\"As rodadas acabaram antes que vocês comunicassem todos os itens\"\n                en=\"The rounds ended before you communicated all items\"\n              />\n            </Instruction>\n          </>\n        )}\n      </SpaceContainer>\n\n      <Achievements players={players} achievements={state.achievements} reference={achievementsReference} />\n\n      <Flex gap={8} align=\"center\">\n        <Board deck={state.deck} deckType={state.deckType} userId={user.id} userSide={user.side} />\n        <SummaryBox summary={state.summary} players={players} round={state.round} />\n      </Flex>\n\n      <History\n        history={state.history}\n        players={players}\n        deck={state.deck}\n        deckType={state.deckType}\n        clueInputType={state.clueInputType}\n        userSide={user.side}\n      />\n    </GameOverWrapper>\n  );\n}\n","// Types\nimport type { GameState } from 'types/game';\n// Utils\nimport { GAME_COLLECTION } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { PageError } from 'components/errors';\nimport { LoadingPage } from 'components/loaders';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { Session } from 'components/session';\n// Internal\nimport { PhaseAskingForSomething } from './PhaseAskingForSomething';\nimport { PhaseVerification } from './PhaseVerification';\nimport { PhaseDeliveringSomething } from './PhaseDeliveringSomething';\nimport { PhaseGameOver } from './PhaseGameOver';\n// Sass\nimport './utils/styles.scss';\n\nfunction getActiveComponent(state: GameState) {\n  // If phase is not defined, it is likely that the game is still loading\n  if (state && !state.phase) return LoadingPage;\n\n  switch (state.phase) {\n    case PHASES.DEFAULT.LOBBY:\n      return PhaseLobby;\n    case PHASES.DEFAULT.RULES:\n      return PhaseRules;\n    case PHASES.DEFAULT.SETUP:\n      return PhaseSetup;\n    case PHASES.COMUNICACAO_DUO.ASKING_FOR_SOMETHING:\n      return PhaseAskingForSomething;\n    case PHASES.COMUNICACAO_DUO.DELIVER_SOMETHING:\n      return PhaseDeliveringSomething;\n    case PHASES.COMUNICACAO_DUO.VERIFICATION:\n      return PhaseVerification;\n    case PHASES.DEFAULT.GAME_OVER:\n      return PhaseGameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionComunicacaoDuo() {\n  return <Session gameCollection={GAME_COLLECTION.COMUNICACAO_DUO} getActiveComponent={getActiveComponent} />;\n}\n\nexport default SessionComunicacaoDuo;\n","// Types\nimport type { AchievementReference } from 'types/achievements';\n\nconst ACHIEVEMENTS = {\n  DELIVERED_TABOO: 'DELIVERED_TABOO',\n  MOST_REQUESTED_AT_ONCE: 'MOST_REQUESTED_AT_ONCE',\n  FEWEST_REQUESTED_AT_ONCE: 'FEWEST_REQUESTED_AT_ONCE',\n  MOST_DELIVERED_ITEMS: 'MOST_DELIVERED_ITEMS',\n  FEWEST_DELIVERED_ITEMS: 'FEWEST_DELIVERED_ITEMS',\n  MOST_DELIVERED_AT_ONCE: 'MOST_DELIVERED_AT_ONCE',\n  FEWEST_DELIVERED_AT_ONCE: 'FEWEST_DELIVERED_AT_ONCE',\n  MOST_NEUTRAL_DELIVERIES: 'MOST_NEUTRAL_DELIVERIES',\n  FEWEST_NEUTRAL_DELIVERIES: 'FEWEST_NEUTRAL_DELIVERIES',\n};\n\nexport const achievementsReference: AchievementReference = {\n  [ACHIEVEMENTS.DELIVERED_TABOO]: {\n    icon: 'skull',\n    title: {\n      pt: 'Entregador de Tabu',\n      en: 'Taboo Deliverer',\n    },\n    description: {\n      pt: 'Entregou o maior número de itens tabu',\n      en: 'Delivered the most taboo items',\n    },\n  },\n  [ACHIEVEMENTS.MOST_REQUESTED_AT_ONCE]: {\n    icon: 'dialog',\n    title: {\n      pt: 'Melhores Dicas',\n      en: 'Best Clues',\n    },\n    description: {\n      pt: 'Fez o maior número de pedidos de uma vez',\n      en: 'Made the most requests at once',\n    },\n  },\n  [ACHIEVEMENTS.FEWEST_REQUESTED_AT_ONCE]: {\n    icon: 'thought',\n    title: {\n      en: 'Most Specific Clues',\n      pt: 'Dicas Mais Específicas',\n    },\n    description: {\n      pt: 'Fez o menor número de pedidos de uma vez',\n      en: 'Made the fewest requests at once',\n    },\n  },\n  [ACHIEVEMENTS.MOST_DELIVERED_ITEMS]: {\n    icon: 'double-arrow-up',\n    title: {\n      pt: 'Melhor Entregador',\n      en: 'Best Deliverer',\n    },\n    description: {\n      pt: 'Entregou o maior número de itens',\n      en: 'Delivered the most items',\n    },\n  },\n  [ACHIEVEMENTS.FEWEST_DELIVERED_ITEMS]: {\n    icon: 'double-arrow-down',\n    title: {\n      pt: 'Entregador Econômico',\n      en: 'Economical Deliverer',\n    },\n    description: {\n      pt: 'Entregou o menor número de itens',\n      en: 'Delivered the fewest items',\n    },\n  },\n  [ACHIEVEMENTS.MOST_DELIVERED_AT_ONCE]: {\n    icon: 'plus',\n    title: {\n      pt: 'Mais Eficiente',\n      en: 'Most Efficient',\n    },\n    description: {\n      pt: 'Entregou o maior número de itens de uma vez',\n      en: 'Delivered the most items at once',\n    },\n  },\n  [ACHIEVEMENTS.FEWEST_DELIVERED_AT_ONCE]: {\n    icon: 'minus',\n    title: {\n      pt: 'Mais Comedido',\n      en: 'Most Reserved',\n    },\n    description: {\n      pt: 'Entregou o menor número de itens de uma vez',\n      en: 'Delivered the fewest items at once',\n    },\n  },\n  [ACHIEVEMENTS.MOST_NEUTRAL_DELIVERIES]: {\n    icon: 'arrow-wide',\n    title: {\n      pt: 'Mais Neutro',\n      en: 'Most Neutral',\n    },\n    description: {\n      pt: 'Entregou o maior número de itens neutros',\n      en: 'Delivered the most neutral items',\n    },\n  },\n  [ACHIEVEMENTS.FEWEST_NEUTRAL_DELIVERIES]: {\n    icon: 'arrow-narrow',\n    title: {\n      pt: 'Menos Neutro',\n      en: 'Least Neutral',\n    },\n    description: {\n      pt: 'Entregou o menor número de itens neutros',\n      en: 'Delivered the fewest neutral items',\n    },\n  },\n};\n\nexport default achievementsReference;\n","import { useEffect, useState } from 'react';\n// Types\nimport type { GamePlayers, GamePlayer } from 'types/player';\n// Utils\nimport { PLACEHOLDER_PLAYER } from 'utils/constants';\n// Internal\nimport { useGlobalState } from './useGlobalState';\n\n/**\n * Gets player that is assigned to a property in the state\n * @param propertyName\n * @param state\n * @param players\n * @returns a player instance, a boolean if the player is assigned to given property\n */\nexport function useWhichPlayerIsThe(\n  propertyName = 'activePlayer',\n  state: PlainObject = {},\n  players: GamePlayers = {},\n): [GamePlayer, boolean] {\n  const [userId] = useGlobalState('userId');\n  const [activePlayer, setActivePlayer] = useState<GamePlayer>(PLACEHOLDER_PLAYER);\n  const [isUser, setIsUser] = useState(false);\n\n  // Determine if user is active as the guesser, the clue giver, the psychic, the storyteller, etc\n  useEffect(() => {\n    const activePlayer = state?.[propertyName];\n    setActivePlayer(players?.[activePlayer] ?? {});\n    setIsUser(state?.[propertyName] === userId);\n  }, [players, propertyName, state, userId]);\n\n  return [activePlayer, isUser];\n}\n","export function AlienHeartEyesIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#f7ae6a\"\n        d=\"m310 480.7 113.7-124C546 222.8 451.2 7.4 270 7.4h-28C60.8 7.5-34 222.9 88.3 356.6l113.6 124a73.3 73.3 0 0 0 108.2 0Z\"\n      />\n      <path\n        d=\"M407.8 118a58.2 58.2 0 0 1 48.6 4.7A205 205 0 0 0 295.8 9a213 213 0 0 1 112 109ZM456 223.2 425.2 241c-6.2 39-23.5 77.3-54.1 110.7L234 501.2c26.2 8.1 56 1.3 76-20.5l113.6-124A204.2 204.2 0 0 0 478 200.3a57.8 57.8 0 0 1-22.1 22.8Z\"\n        opacity=\".1\"\n      />\n\n      <path\n        fill=\"#3e5959\"\n        d=\"M254.4 406.1c44.1.7 81.2-27.6 90.4-65.6a15 15 0 0 0-14.5-18.5H182c-9.7 0-17 7.8-14.7 17.3 8.9 37.4 44.2 66.1 87.2 66.8Z\"\n      />\n      <path\n        fill=\"#384949\"\n        d=\"M330.3 322h-18.7c-12.9 39.3-49 69.2-93.5 76.4 11 4.7 23.4 7.5 36.3 7.7 44.1.7 81.2-27.6 90.4-65.6a15 15 0 0 0-14.5-18.5Z\"\n      />\n      <path\n        fill=\"#fe7d43\"\n        d=\"m123 120-3.2 5.7-5.6-3.2A58.1 58.1 0 1 0 56 223.2l93.4 53.9a15 15 0 0 0 20.5-5.5l53.9-93.4a58.1 58.1 0 1 0-100.7-58.1Z\"\n      />\n      <path\n        fill=\"#fd6930\"\n        d=\"M202.5 98.8a58 58 0 0 0-47.8-4.7 58.4 58.4 0 0 1 31.5 84.1l-52 90.1 15.2 8.8a15 15 0 0 0 20.5-5.5l53.9-93.4a58.1 58.1 0 0 0-21.3-79.4Z\"\n      />\n      <path\n        fill=\"#fe7d43\"\n        d=\"m397.8 122.5-5.6 3.2-3.3-5.6a58.1 58.1 0 1 0-100.7 58.1l53.9 93.4a15 15 0 0 0 20.5 5.5l93.4-53.9a58.1 58.1 0 0 0-58.2-100.7Z\"\n      />\n      <path\n        fill=\"#fd6930\"\n        d=\"M477.3 143.8a58.2 58.2 0 0 0-58.3-28.6 58 58 0 0 1-4.4 97.9l-79.7 46 7.2 12.5a15 15 0 0 0 20.5 5.5l93.4-54a58.2 58.2 0 0 0 21.3-79.3Z\"\n      />\n      <path\n        fill=\"#fead8a\"\n        d=\"M257.1 355.8a50 50 0 0 0-49.5 37.2 96.3 96.3 0 0 0 96.6.3c-5.6-21-24.4-37-47.1-37.5Z\"\n      />\n      <path\n        fill=\"#fd9468\"\n        d=\"M284.7 365a121.9 121.9 0 0 1-66.6 33.4 96.3 96.3 0 0 0 86.1-5 51.3 51.3 0 0 0-19.5-28.3Z\"\n      />\n      <path d=\"M193.4 392.4a100.7 100.7 0 0 0 61 21.2h1.6c45.8 0 86-29.8 96.1-71.3a22.4 22.4 0 0 0-21.8-27.8H182c-7.3 0-14 3-18.2 8.4a21 21 0 0 0-4 18 93 93 0 0 0 33.6 51.5Zm61.2 6.2a86.9 86.9 0 0 1-37.8-9.1 42.4 42.4 0 0 1 78.2.2c-12.1 5.9-26 9.1-40.4 9Zm-79-66.4a7.9 7.9 0 0 1 6.2-2.7h148.5a7.5 7.5 0 0 1 7.2 9.2A75.8 75.8 0 0 1 308 382a57.3 57.3 0 0 0-104.1-.4l-1.3-1a78 78 0 0 1-28.1-43 6 6 0 0 1 1-5.3Z\" />\n      <path d=\"M483.8 140a65.4 65.4 0 0 0-21.8-22.6A216.6 216.6 0 0 0 387.5 34 215 215 0 0 0 270 0h-28a215 215 0 0 0-117.4 34 216.5 216.5 0 0 0-74.7 83.4A65.6 65.6 0 0 0 26.2 202a212.3 212.3 0 0 0 56.6 159.7l42.6 46.6a7.5 7.5 0 0 0 10.6.4c3-2.7 3.3-7.5.5-10.5l-42.6-46.6a198 198 0 0 1-53.1-130.3c3.4 3.1 7.3 6 11.5 8.4l20.4 11.8a7.5 7.5 0 0 0 7.5-13l-20.4-11.8a50.7 50.7 0 0 1 50.6-87.7l5.7 3.2a7.5 7.5 0 0 0 10.2-2.7l3.3-5.6a50.7 50.7 0 0 1 87.7 50.6l-53.9 93.3a7.5 7.5 0 0 1-10.3 2.8L110.5 246a7.5 7.5 0 0 0-7.5 13l42.6 24.6a22.4 22.4 0 0 0 17.1 2.3 22.4 22.4 0 0 0 13.7-10.5l53.9-93.4a65.2 65.2 0 0 0 6.5-49.8A65.7 65.7 0 0 0 117 115.5a65.2 65.2 0 0 0-44.8-7c15.6-24.9 36.2-46 60.5-61.8A200 200 0 0 1 242 15h28a200 200 0 0 1 109.2 31.7c24.3 15.8 45 37 60.6 61.8a65 65 0 0 0-44.9 7A65.6 65.6 0 0 0 312.6 89a7.5 7.5 0 1 0 6 13.8 50.6 50.6 0 0 1 63.8 21.2l3.3 5.6a7.5 7.5 0 0 0 10.2 2.7l5.7-3.2a50.3 50.3 0 0 1 69.2 18.5 50.7 50.7 0 0 1-18.6 69.2l-93.3 54a7.6 7.6 0 0 1-10.3-2.8l-53.9-93.4c-9.3-16.1-9-36 .7-51.9a7.5 7.5 0 1 0-12.7-7.9 65.6 65.6 0 0 0-1 67.3l53.9 93.3a22.4 22.4 0 0 0 30.8 8.3l93.3-53.9c4.2-2.4 8-5.3 11.5-8.4a198 198 0 0 1-53 130.3l-113.6 124C291.9 489.4 274.7 497 256 497s-36-7.6-48.5-21.4L160.2 424a7.5 7.5 0 0 0-11.1 10.1l47.3 51.7a81 81 0 0 0 119.2 0l113.6-124a212.3 212.3 0 0 0 56.5-159.9c9.4-19 9.4-42.2-2-61.9Z\" />\n    </svg>\n  );\n}\n","export function AlienNeutralIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill={props.color ?? '#05e39c'}\n        d=\"M310.09 480.69l113.58-124.05C546.1 222.95 451.25 7.5 269.97 7.5h-27.93C60.77 7.5-34.08 222.95 88.34 356.64l113.58 124.05c29.07 31.75 79.1 31.75 108.17 0z\"\n      ></path>\n      <path\n        fill=\"000000\"\n        d=\"M295.82 9.01c129.22 53.22 180.74 227.47 75.27 342.65L234.17 501.2c26.15 8.12 55.97 1.29 75.92-20.5l113.58-124.05C540.13 229.46 459.96 28.3 295.81 9.01z\"\n        opacity=\".1\"\n      ></path>\n      <path\n        fill=\"#3e5959\"\n        d=\"M280.68 229v68.79c0 8.28 6.72 15 15 15h48.03c41.03 0 75.7-27.25 86.89-64.64 2.86-9.56-4.44-19.15-14.42-19.15H280.67z\"\n      ></path>\n      <path\n        fill=\"#384949\"\n        d=\"M398.37 229c-7.79 28.67-33.98 49.77-65.12 49.77h-52.57v19.02c0 8.28 6.72 15 15 15h48.03c41.03 0 75.7-27.25 86.89-64.64 2.86-9.56-4.44-19.15-14.42-19.15h-17.81z\"\n      ></path>\n      <path\n        fill=\"#3e5959\"\n        d=\"M95.84 229c-9.98 0-17.28 9.59-14.42 19.15 11.19 37.39 45.86 64.64 86.89 64.64h48.03c8.28 0 15-6.72 15-15V229H95.84z\"\n      ></path>\n      <path\n        fill=\"#384949\"\n        d=\"M168.31 312.79h48.03c8.28 0 15-6.72 15-15v-19.02H97.53c16.62 20.73 42.14 34.02 70.78 34.02z\"\n      ></path>\n      <path\n        fill=\"#7ca1b1\"\n        d=\"M129.57 229a26.06 26.06 0 00-.96 7c0 14.36 11.64 26 26 26s26-11.64 26-26c0-2.43-.34-4.77-.96-7h-50.08z\"\n      ></path>\n      <path\n        fill=\"#678d98\"\n        d=\"M179.65 229h-19.82c-1.48 12.91-12.42 22.94-25.71 23 4.76 6.09 12.16 10 20.49 10 14.36 0 26-11.64 26-26 0-2.43-.34-4.77-.96-7z\"\n      ></path>\n      <path\n        fill=\"#7ca1b1\"\n        d=\"M332.37 229a26.06 26.06 0 00-.96 7c0 14.36 11.64 26 26 26s26-11.64 26-26c0-2.43-.34-4.77-.96-7h-50.08z\"\n      ></path>\n      <path\n        fill=\"#678d98\"\n        d=\"M382.44 229h-19.61c-1.49 12.95-12.48 23-25.82 23h-.09c4.76 6.09 12.16 10 20.49 10 14.36 0 26-11.64 26-26 0-2.43-.34-4.77-.96-7z\"\n      ></path>\n      <path d=\"M204.16 383.5h103.69c4.14 0 7.5-3.36 7.5-7.5s-3.36-7.5-7.5-7.5H204.16c-4.14 0-7.5 3.36-7.5 7.5s3.36 7.5 7.5 7.5zM93.87 351.58c-27.96-30.54-45.68-67.52-51.23-106.94-5.19-36.89.17-74.82 15.52-109.68 15.35-34.87 39.7-64.44 70.41-85.52C161.39 26.91 200.63 15 242.03 15h27.93c55.84 0 107.26 21.73 144.8 61.19 2.86 3 7.6 3.12 10.6.26 3-2.86 3.12-7.6.26-10.6C385.24 23.38 329.96 0 269.97 0h-27.93c-44.45 0-86.62 12.82-121.95 37.07-33.02 22.66-59.17 54.42-75.65 91.84s-22.23 78.17-16.65 117.82c5.98 42.43 25 82.19 55.02 114.98l42.64 46.57a7.453 7.453 0 005.53 2.43c1.81 0 3.62-.65 5.06-1.97 3.05-2.8 3.26-7.54.47-10.6l-42.64-46.57z\"></path>\n      <path d=\"M448.36 94.11a7.508 7.508 0 00-10.41-2.02 7.508 7.508 0 00-2.02 10.41c24.57 36.37 37.06 80.19 35.16 123.39-2.05 46.62-20.36 90.08-52.95 125.68L304.56 475.62C291.94 489.4 274.7 497 256.01 497s-35.93-7.59-48.55-21.38l-47.29-51.65a7.516 7.516 0 00-10.6-.47 7.516 7.516 0 00-.47 10.6l47.29 51.65c15.27 16.68 37 26.24 59.62 26.24s44.34-9.57 59.62-26.24L429.21 361.7c35-38.23 54.67-84.96 56.87-135.15 2.04-46.39-11.36-93.43-37.72-132.44zM216.34 305.29h-48.03c-25.41 0-49.11-11.41-65.01-31.31-2.59-3.23-7.31-3.76-10.54-1.18a7.502 7.502 0 00-1.18 10.54c18.76 23.48 46.73 36.94 76.73 36.94h48.03c12.41 0 22.5-10.09 22.5-22.5v-89.79c0-4.14-3.36-7.5-7.5-7.5s-7.5 3.36-7.5 7.5v13.5h-128c-7.03 0-13.53 3.19-17.83 8.75-4.27 5.51-5.72 12.51-4 19.21a7.508 7.508 0 009.14 5.39 7.502 7.502 0 005.39-9.13c-.56-2.18-.08-4.46 1.33-6.28a7.484 7.484 0 015.98-2.93h25.29c.27 18.24 15.18 33 33.49 33s33.22-14.76 33.49-33h35.74v61.29c0 4.14-3.36 7.5-7.5 7.5zm-61.73-50.79c-10.03 0-18.23-8.03-18.49-18h36.99c-.27 9.97-8.46 18-18.49 18z\"></path>\n      <path d=\"M288.18 221.5V208c0-4.14-3.36-7.5-7.5-7.5s-7.5 3.36-7.5 7.5v89.79c0 12.41 10.09 22.5 22.5 22.5h48.03c21.55 0 42.01-6.85 59.16-19.82 16.58-12.54 28.99-30.36 34.92-50.17 2.04-6.8.76-13.98-3.5-19.7-4.3-5.78-10.9-9.1-18.11-9.1h-128zm87.72 15c-.27 9.97-8.46 18-18.49 18s-18.23-8.03-18.49-18h36.99zm46.35 3.06c1.4 1.88 1.82 4.23 1.16 6.44-5.02 16.78-15.53 31.88-29.59 42.51-14.52 10.98-31.85 16.78-50.11 16.78h-48.03c-4.14 0-7.5-3.36-7.5-7.5V236.5h35.74c.27 18.24 15.18 33 33.49 33s33.22-14.76 33.49-33h25.29c2.42 0 4.63 1.11 6.07 3.06zM127 148.5c.49 0 .99-.05 1.49-.15l70-14.14c4.06-.82 6.69-4.78 5.87-8.84s-4.77-6.68-8.84-5.87l-70 14.14a7.506 7.506 0 00-5.87 8.84 7.507 7.507 0 007.34 6.02zm256.52-.15c.5.1 1 .15 1.49.15 3.5 0 6.62-2.46 7.34-6.02a7.506 7.506 0 00-5.87-8.84l-70-14.14a7.501 7.501 0 00-8.84 5.87 7.506 7.506 0 005.87 8.84l70 14.14z\"></path>\n      <path fill=\"none\" d=\"M0 0h512v512H0z\"></path>\n    </svg>\n  );\n}\n","export function AlienStarEyesIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#78cbb4\"\n        d=\"M449.9 165a16.7 16.7 0 0 0-8 13.3l-2.9 49c-.5 8.8-8 14-14.8 14-3.5 0-6.8-1.2-9.6-3.6l-37.2-32a16.8 16.8 0 0 0-15.2-3.6l-47.5 12.5a14.7 14.7 0 0 1-17.4-20l19-45.3c2.2-5.1 1.6-11-1.3-15.6l-26.6-41.3c-3-4.7-3.2-10.3-.5-15a14.5 14.5 0 0 1 14.2-7.7l49 4 1.3.1c5 0 9.8-2.2 13-6.1l20.8-25.4A205.9 205.9 0 0 0 270 7.5h-28c-44.6 0-84 13-116.2 34.8l20.8 25.4a16.7 16.7 0 0 0 14.4 6l49-4a14.5 14.5 0 0 1 14.1 7.6 14.6 14.6 0 0 1-.5 15l-26.5 41.4c-3 4.7-3.5 10.5-1.4 15.6l19 45.3c2 4.6 1.5 9.7-1.3 13.8a14.7 14.7 0 0 1-16 6.2L149.8 202a17 17 0 0 0-15.2 3.5l-37.2 32.1A14.8 14.8 0 0 1 73 227.4l-2.8-49a16.8 16.8 0 0 0-8-13.5l-19-11.4c-21 66.2-10 143 45.2 203.1l113.5 124.1a73.3 73.3 0 0 0 108.2 0l113.6-124a204.9 204.9 0 0 0 45.2-203.2l-19 11.4Z\"\n      />\n      <path\n        fill=\"#3e5959\"\n        d=\"M341.7 263.4v4.7a34.2 34.2 0 0 1-34.2 34.2h-103a34.2 34.2 0 0 1-34.2-34.2v-4.7a17.9 17.9 0 0 0-14.3 17.5v18.9c0 54.6 44.7 101 99.3 101.3A100 100 0 0 0 356 301v-20.2c0-8.7-6.2-15.9-14.3-17.5Z\"\n      />\n      <path\n        fill=\"#231f20\"\n        d=\"m369.8 60.7 15.6-19A203.4 203.4 0 0 0 295.8 9a208.5 208.5 0 0 1 74 51.7ZM450.4 165.8a15.7 15.7 0 0 0-7.6 12.6l-2.8 49a15.7 15.7 0 0 1-15 14.9 211.7 211.7 0 0 1-54 109.4L234.3 501.2c26.1 8.1 56 1.3 75.9-20.5l113.6-124A204.8 204.8 0 0 0 469 154.4l-18.7 11.4Z\"\n        opacity=\".1\"\n      />\n      <path\n        fill=\"#384949\"\n        d=\"M341.7 263.4v4.7a34.2 34.2 0 0 1-26.2 33.2A100 100 0 0 1 213 391a96.8 96.8 0 0 0 42.3 10A100 100 0 0 0 356 301V281c0-8.7-6.1-15.9-14.3-17.5Z\"\n      />\n      <path\n        fill=\"#fead8a\"\n        d=\"M257.1 348.7a51.8 51.8 0 0 0-51.2 38.5 97.3 97.3 0 0 0 49.4 13.9c18.5.1 35.8-4.8 50.7-13.4a52 52 0 0 0-48.9-39Z\"\n      />\n      <path\n        fill=\"#fd9468\"\n        d=\"M288.3 360.2a99.7 99.7 0 0 1-73 30.9h-2.2a99.5 99.5 0 0 0 92.9-3.3c-3-11-9.2-20.7-17.7-27.6Z\"\n      />\n      <path\n        fill=\"#fff\"\n        d=\"M307.5 302.3a34.2 34.2 0 0 0 34.2-34.2v-4.7c-1.1-.3-2.3-.4-3.6-.4H174c-1.3 0-2.5.1-3.6.4v4.7a34.2 34.2 0 0 0 34.2 34.2h103Z\"\n      />\n      <path\n        fill=\"#eef5f6\"\n        d=\"M338.1 263H316v28c0 3.5-.2 7-.5 10.3a34.2 34.2 0 0 0 26.2-33.2v-4.7c-1.1-.3-2.3-.4-3.6-.4Z\"\n      />\n      <path\n        fill=\"#ffe177\"\n        d=\"m423.3 35.4 11.3 47.8c1.1 5 4.7 9.2 9.6 11.1l45.8 17.9a15.8 15.8 0 0 1 2.4 28.1l-42 25.5a15.7 15.7 0 0 0-7.6 12.6l-2.8 49a15.8 15.8 0 0 1-26 11l-37.2-32c-4-3.4-9.3-4.6-14.4-3.3L315 215.5a15.8 15.8 0 0 1-18.5-21.3l19-45.3c2-4.8 1.5-10.3-1.3-14.7L287.6 93c-7-11 1.5-25.3 14.5-24.2l49 4c5.2.5 10.2-1.7 13.5-5.7l31.2-38a15.8 15.8 0 0 1 27.5 6.4Z\"\n      />\n      <path\n        fill=\"#ffd15b\"\n        d=\"M490 112.2 453 97.8A115.7 115.7 0 0 1 306 171.6l-9.5 22.6c-5 12 5.9 24.7 18.5 21.4l47.5-12.5c5-1.3 10.4-.1 14.3 3.3l37.3 32c9.9 8.6 25.2 2 26-11l2.8-49c.3-5.2 3.1-9.9 7.6-12.6l42-25.5a15.8 15.8 0 0 0-2.5-28.1Z\"\n      />\n      <path\n        fill=\"#ffe177\"\n        d=\"M88.7 35.4 77.4 83.2c-1.1 5-4.7 9.2-9.6 11.1L22 112.2a15.8 15.8 0 0 0-2.4 28.1l42 25.5c4.4 2.7 7.3 7.4 7.6 12.6l2.8 49c.8 13 16.1 19.6 26 11l37.3-32c3.9-3.4 9.2-4.6 14.2-3.3l47.6 12.4a15.8 15.8 0 0 0 18.5-21.3l-19-45.3c-2-4.8-1.5-10.3 1.3-14.7L224.4 93c7.1-11-1.5-25.3-14.5-24.2l-49 4c-5.2.5-10.2-1.7-13.5-5.7l-31.1-38a15.8 15.8 0 0 0-27.6 6.4Z\"\n      />\n      <path\n        fill=\"#ffd15b\"\n        d=\"M224.4 93c7-11-1.5-25.4-14.5-24.3L180.3 71A115.6 115.6 0 0 1 69.4 184l2.6 43.5c.7 13 16.1 19.6 26 11l37.2-32c4-3.4 9.3-4.7 14.3-3.3l47.6 12.4a15.8 15.8 0 0 0 18.5-21.3l-19-45.3c-2-4.8-1.5-10.3 1.3-14.7L224.4 93Z\"\n      />\n      <path d=\"M219.5 263c0-4.1-3.4-7.5-7.5-7.5h-38.1c-14 0-25.4 11.4-25.4 25.4v18.9c0 28.4 11.1 55.5 31.3 76.2a105.9 105.9 0 0 0 75.5 32.6h.7c28.6 0 55.5-11.1 75.8-31.3a106.8 106.8 0 0 0 31.7-76.2v-20.2c0-14-11.4-25.4-25.4-25.4H247a7.5 7.5 0 0 0 0 15h87a26.7 26.7 0 0 1-26.5 24.3h-103a26.7 26.7 0 0 1-26.6-24.3h34c4.2 0 7.6-3.4 7.6-7.5Zm35.9 130.6c-14.2-.1-28-3.5-40.4-10a44.2 44.2 0 0 1 81.9.5 92.3 92.3 0 0 1-41.5 9.5Zm-51-83.8h103.1a41.8 41.8 0 0 0 40.6-32c.2 1 .4 2 .4 3v20.3a91.9 91.9 0 0 1-38.7 75.2 59 59 0 0 0-107.7-.7 96 96 0 0 1-38.6-75.8v-19c0-1 .2-2 .4-3a41.8 41.8 0 0 0 40.6 32Z\" />\n      <path d=\"M507.4 124.8a23.1 23.1 0 0 0-14.7-19.6l-45.8-17.9a8.2 8.2 0 0 1-5-5.8l-1.7-7a7.5 7.5 0 1 0-14.6 3.5l1.6 7c1.8 7.4 7.1 13.5 14.3 16.3l45.7 17.8c3 1.2 5 3.8 5.3 7s-1.2 6.1-4 7.8l-42 25.5c-6.5 4-10.7 11-11.2 18.5l-2.8 49.1c-.2 3.2-2 5.9-5 7.1-3 1.3-6.2.8-8.6-1.3l-37.3-32c-5.8-5-13.6-7-21-5L313 208.3c-3.1.8-6.2-.2-8.3-2.6a8.1 8.1 0 0 1-1.4-8.6l19-45.3c3-7 2.3-15.2-1.9-21.6L294 89a8.1 8.1 0 0 1-.2-8.8 8.1 8.1 0 0 1 7.8-4l49 4.1c7.6.7 15-2.5 20-8.4l31-38c2-2.5 5.2-3.6 8.3-2.9 3.2.8 5.5 3 6.2 6.2l1.6 6.7a7.5 7.5 0 1 0 14.6-3.4l-1.6-6.8c-2-8.6-8.7-15.3-17.4-17.3s-17.6 1-23.3 8l-6.1 7.5A215.3 215.3 0 0 0 270 0h-28c-41 0-80.2 11-113.8 31.8l-6.1-7.5a23.1 23.1 0 0 0-23.3-8c-8.7 2-15.4 8.7-17.4 17.4L70.1 81.5a8.3 8.3 0 0 1-5 5.8l-45.8 17.9a23.1 23.1 0 0 0-14.7 19.6 23.1 23.1 0 0 0 11.1 22l18.3 11a213 213 0 0 0 48.8 203.9l42.6 46.6a7.5 7.5 0 0 0 10.6.4c3-2.7 3.3-7.5.5-10.5l-42.6-46.6a198.1 198.1 0 0 1-49.3-95.3c-6-29.5-5-60.6 2.8-90.3l10.3 6.2a8.3 8.3 0 0 1 4 6.6l2.8 49a23.1 23.1 0 0 0 23.3 22c5.5 0 10.8-2 15.1-5.7l37.3-32c2-1.8 4.8-2.5 7.5-1.8l47.5 12.5c8.6 2.3 17.6-.5 23.5-7.3 5.8-6.7 7.3-16 3.8-24.2l-19-45.3c-1-2.5-.8-5.4.7-7.7l26.6-41.4c4.8-7.5 5-16.9.3-24.5-4.6-7.6-13-12-21.9-11.2l-49 4c-2.6.3-5.3-.8-7-3l-15.4-18.7A200.5 200.5 0 0 1 242.1 15H270c37.5 0 73.4 9.8 104.2 28.5l-15.4 18.8a8.2 8.2 0 0 1-7 3l-49-4.1a23.1 23.1 0 0 0-21.9 11.2c-4.6 7.6-4.4 17 .4 24.6l26.5 41.3a8.3 8.3 0 0 1 .7 7.7l-19 45.3a23.2 23.2 0 0 0 27.4 31.5l47.5-12.5c2.6-.7 5.4 0 7.5 1.8l37.2 32a23.1 23.1 0 0 0 24.3 3.8 23.1 23.1 0 0 0 14.1-20l2.8-49a8.3 8.3 0 0 1 4-6.7l10.3-6.2c7.8 29.7 8.8 60.8 2.8 90.3a198.2 198.2 0 0 1-49.2 95.3l-113.6 124C292 489.4 274.7 497 256 497s-35.9-7.6-48.5-21.4L160.2 424a7.5 7.5 0 0 0-11 10.1l47.2 51.7a81 81 0 0 0 119.2 0l113.6-124a213 213 0 0 0 48.8-204l18.3-11c7.7-4.7 12-13 11.1-22ZM161.5 80.2l49-4a8.1 8.1 0 0 1 7.8 4c1.6 2.7 1.6 6-.2 8.7l-26.5 41.3a23.3 23.3 0 0 0-2 21.6l19.1 45.3c1.2 3 .7 6.2-1.4 8.6a8.1 8.1 0 0 1-8.3 2.6l-47.5-12.5c-7.5-2-15.3 0-21.1 5l-37.3 32a8.1 8.1 0 0 1-8.6 1.4c-3-1.3-4.8-4-5-7.2l-2.8-49a23.2 23.2 0 0 0-11.2-18.6l-42-25.5c-2.8-1.6-4.3-4.6-4-7.8s2.3-5.8 5.3-7l45.7-17.8A23.3 23.3 0 0 0 84.7 85L96 37c.7-3.1 3-5.4 6.2-6.1.6-.2 1.3-.3 2-.3a8 8 0 0 1 6.2 3l31.2 38.1c4.8 6 12.3 9 19.9 8.4Z\" />\n    </svg>\n  );\n}\n","export function MysteryBoxIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#b3ceec\"\n        d=\"M498.5 132h-485c-3.31 0-6-2.69-6-6V76c0-3.31 2.69-6 6-6h485c3.31 0 6 2.69 6 6v50c0 3.31-2.69 6-6 6z\"\n      ></path>\n      <path\n        fill=\"#98bce5\"\n        d=\"M498.5 70h-30c3.31 0 6 2.69 6 6v50c0 3.31-2.69 6-6 6h30c3.31 0 6-2.69 6-6V76c0-3.31-2.69-6-6-6z\"\n      ></path>\n      <path fill=\"#e8ad8c\" d=\"M23.92 132h464.16v310H23.92V132z\"></path>\n      <path fill=\"#e19974\" d=\"M458.08 132h30v310h-30V132z\"></path>\n      <path\n        fill=\"#fff0ad\"\n        d=\"M322.1 215.45c-35.88-36.94-94.91-37.3-131.17-1.05-31.32 31.3-35.32 79.58-12.01 115.26.33.5.44 1.11.31 1.69l-6.29 28.53c-.35 1.59 1.07 3 2.66 2.65l28.55-6.28c.58-.13 1.19-.01 1.69.31 35.84 23.38 84.38 19.26 115.69-12.37 35.06-35.42 35.32-92.96.57-128.74z\"\n      ></path>\n      <path\n        fill=\"#ffe177\"\n        d=\"M322.1 215.45c-21.89-22.54-52.4-31.43-81.1-26.73 18.78 3.09 36.79 11.98 51.1 26.73 34.75 35.78 34.49 93.32-.57 128.74-14.19 14.34-31.93 23.01-50.42 26.04 28.42 4.67 58.6-4 80.42-26.04 35.06-35.42 35.32-92.96.57-128.74z\"\n      ></path>\n      <path fill=\"#b5adb6\" d=\"M71.69 70h32v372h-32V70zm336.62 0h32v372h-32V70z\"></path>\n      <path d=\"M498.5 62.5H157.41c-9.92.31-9.91 14.7 0 15h243.4v47H111.19v-47h11.15c9.92-.31 9.91-14.7 0-15H13.5C6.06 62.5 0 68.56 0 76v50c0 7.44 6.06 13.5 13.5 13.5h2.92V442c0 4.14 3.36 7.5 7.5 7.5h464.16c4.14 0 7.5-3.36 7.5-7.5v-49.02c-.31-9.92-14.7-9.91-15 0v41.52h-32.77v-295h32.77v218.4c.31 9.92 14.7 9.91 15 0V139.5h2.92c7.44 0 13.5-6.06 13.5-13.5V76c0-7.44-6.06-13.5-13.5-13.5zm-97.69 77v295H111.19v-295h289.62zM15 77.5h49.19v47H15v-47zm16.42 62h32.77v295H31.42v-295zm47.77 295v-357h17v357h-17zm336.62 0v-357h17v357h-17zm81.19-310h-49.19v-47H497v47z\"></path>\n      <path d=\"M256.02 319.31h-.01c-9.91.31-9.9 14.7.01 15 9.91-.31 9.91-14.7 0-15zm-23.7-55.87c4.14 0 7.5-3.36 7.5-7.5 0-.76.05-1.52.16-2.27 1.12-8.1 8.2-14.09 16.36-13.91 8.43.17 15.38 6.89 15.82 15.31.23 4.49-1.34 8.76-4.42 12.01-3.09 3.25-7.26 5.05-11.73 5.05-4.14 0-7.5 3.36-7.5 7.5v19.15c.31 9.92 14.7 9.91 15 0v-12.57c14.18-3.32 24.67-17.3 23.64-31.9-.84-16.23-14.24-29.2-30.5-29.52-15.73-.34-29.36 11.21-31.52 26.84-1.11 5.74.48 11.51 7.2 11.84z\"></path>\n      <path d=\"M171.44 331.87l-5.81 26.39c-.72 3.26.26 6.61 2.62 8.97a9.673 9.673 0 008.97 2.62l26.41-5.81c16.09 9.99 34.25 14.87 52.34 14.86 25.94 0 51.71-10.04 70.9-29.44 61.4-61.5 16.9-169.7-70.15-169.49-50.15-1.37-95.65 39.76-99.75 89.67-2.13 21.75 3 43.75 14.46 62.22zm24.8-112.17c16.12-16.11 37.58-24.88 60.38-24.72 73.95-.18 111.73 91.73 59.6 143.94-28.12 28.41-72.81 33.19-106.27 11.36a9.75 9.75 0 00-7.4-1.35l-20.49 4.51 4.51-20.47c.56-2.53.06-5.24-1.36-7.41-21.71-33.24-17.07-77.76 11.04-105.86z\"></path>\n      <path fill=\"none\" d=\"M0 0h512v512H0z\"></path>\n    </svg>\n  );\n}\n","export function QuestionIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#0573ce\"\n        d=\"M441.421 22.803H70.579C35.741 22.803 7.5 51.045 7.5 85.882v262.21c0 34.838 28.241 63.079 63.079 63.079h91.616l66.896 66.896c14.861 14.861 38.956 14.861 53.817 0l66.896-66.896h91.616c34.838 0 63.079-28.241 63.079-63.079V85.882c.001-34.837-28.24-63.079-63.078-63.079z\"\n      ></path>\n      <path\n        fill=\"#0067c5\"\n        d=\"M35.51 85.882v262.21c0 34.84 28.24 63.08 63.08 63.08H70.58c-34.84 0-63.08-28.24-63.08-63.08V85.882c0-34.84 28.24-63.08 63.08-63.08h28.01c-34.84 0-63.08 28.24-63.08 63.08zm234.5 400.66c-13.68 5.41-29.86 2.58-40.92-8.48l-66.89-66.89h20.665c4.697 0 9.201 1.865 12.522 5.186l61.713 61.704c3.8 3.8 8.21 6.63 12.91 8.48z\"\n      ></path>\n      <path\n        fill=\"#f9f7f8\"\n        d=\"M256.002 297.061c-14.574 0-26.39-11.815-26.39-26.39v-11.194c0-26.048 16.402-49.348 40.816-57.979 18.364-6.493 30.197-24.654 28.774-44.162-1.557-21.362-18.853-38.527-40.231-39.927-22.612-1.494-42.759 14.837-45.872 37.149a44.164 44.164 0 00-.419 6.076c0 14.574-11.815 26.39-26.39 26.39-14.574 0-26.39-11.815-26.39-26.39 0-4.468.312-8.966.926-13.369 6.914-49.552 51.539-85.807 101.592-82.522 47.518 3.112 85.961 41.269 89.423 88.756 3.146 43.161-23.098 83.361-63.82 97.76-3.368 1.191-5.631 4.494-5.631 8.219v11.194c.002 14.574-11.813 26.389-26.388 26.389zm0 78.522c-14.574 0-26.39-11.815-26.39-26.39v-.219c0-14.574 11.815-26.39 26.39-26.39 14.574 0 26.39 11.815 26.39 26.39v.219c0 14.575-11.815 26.39-26.39 26.39z\"\n      ></path>\n      <path\n        fill=\"#dedbee\"\n        d=\"M184.155 147.268a96.29 96.29 0 00-.923 13.366c0 10.387 5.997 19.376 14.723 23.674a26.227 26.227 0 01-11.665 2.715c-14.565 0-26.389-11.81-26.389-26.389 0-4.468.316-8.963.936-13.366 6.907-49.562 51.539-85.81 101.588-82.528 1.793.119 3.572.29 5.339.514-42.378 5.219-77.532 38.489-83.609 82.014zm109.603 54.228c-24.412 8.634-40.822 31.938-40.822 57.985v11.191c0 10.387 6.011 19.377 14.737 23.674a26.227 26.227 0 01-11.665 2.715c-14.579 0-26.389-11.81-26.389-26.389V259.48c0-26.046 16.398-49.351 40.822-57.985 18.362-6.498 30.185-24.649 28.762-44.157-1.331-18.348-14.275-33.599-31.451-38.41a43.132 43.132 0 0114.552-1.516c21.38 1.397 38.674 18.559 40.229 39.926 1.423 19.509-10.414 37.659-28.775 44.158zm-26.086 171.37a26.227 26.227 0 01-11.665 2.715c-14.579 0-26.389-11.81-26.389-26.389v-.224c0-14.565 11.81-26.389 26.389-26.389 4.192 0 8.146.975 11.665 2.715-8.726 4.31-14.737 13.3-14.737 23.674v.224c0 10.387 6.011 19.376 14.737 23.674z\"\n      ></path>\n      <path d=\"M256 496.692c-11.667 0-23.332-4.44-32.213-13.321l-64.693-64.704H70.58c-38.918 0-70.58-31.662-70.58-70.58V85.878c0-38.913 31.662-70.57 70.58-70.57h370.84c38.918 0 70.58 31.657 70.58 70.57v262.21c0 31.374-21.052 59.288-51.193 67.883a7.499 7.499 0 01-9.269-5.156 7.5 7.5 0 015.156-9.269c23.731-6.767 40.306-28.75 40.306-53.458V85.878c0-30.641-24.933-55.57-55.58-55.57H70.58C39.933 30.308 15 55.236 15 85.878v262.21c0 30.647 24.933 55.58 55.58 55.58h91.62c1.989 0 3.897.79 5.304 2.197l66.89 66.9c11.914 11.914 31.299 11.914 43.213 0l66.889-66.9a7.5 7.5 0 015.304-2.197h74.12a7.5 7.5 0 010 15h-71.013l-64.693 64.703c-8.881 8.881-20.548 13.321-32.214 13.321z\"></path>\n      <path d=\"M256 304.558c-18.687 0-33.89-15.203-33.89-33.89v-11.19c0-29.219 18.414-55.362 45.82-65.051 15.19-5.37 24.973-20.396 23.79-36.541-1.281-17.655-15.571-31.837-33.24-32.994-18.715-1.231-35.38 12.253-37.952 30.702a36.335 36.335 0 00-.348 5.044c0 18.687-15.203 33.89-33.89 33.89s-33.89-15.203-33.89-33.89c0-4.841.338-9.692 1.003-14.417a102.082 102.082 0 018.645-29.195 7.5 7.5 0 0113.584 6.362 87.145 87.145 0 00-7.374 24.918 88.583 88.583 0 00-.858 12.331c0 10.416 8.474 18.89 18.89 18.89s18.89-8.474 18.89-18.89c0-2.405.166-4.802.493-7.126 3.65-26.185 27.296-45.335 53.79-43.588 25.097 1.644 45.397 21.794 47.217 46.871 1.675 22.865-12.203 44.157-33.751 51.774-21.425 7.575-35.82 28.033-35.82 50.909v11.19c0 10.416 8.474 18.89 18.89 18.89s18.89-8.474 18.89-18.89v-11.19c0-6.901 4.273-13.047 10.633-15.292 37.546-13.274 61.742-50.343 58.837-90.142-3.189-43.774-38.626-78.945-82.43-81.812-24.875-1.633-49.509 7.462-67.584 24.956a7.499 7.499 0 01-10.605-.174 7.5 7.5 0 01.173-10.605c21.112-20.432 49.903-31.056 78.998-29.145 51.231 3.353 92.678 44.49 96.408 95.689 3.396 46.521-24.896 89.854-68.8 105.376-.314.111-.63.541-.63 1.149v11.19c.001 18.687-15.202 33.891-33.889 33.891zm.002 78.525c-18.687 0-33.89-15.203-33.89-33.89v-.219c0-18.687 15.203-33.89 33.89-33.89s33.89 15.203 33.89 33.89v.219c0 18.687-15.203 33.89-33.89 33.89zm0-52.998c-10.416 0-18.89 8.474-18.89 18.89v.219c0 10.416 8.474 18.89 18.89 18.89s18.89-8.474 18.89-18.89v-.219c0-10.416-8.474-18.89-18.89-18.89z\"></path>\n    </svg>\n  );\n}\n"],"names":["getSource","str","match","numId","Number","parseInt","itemId","sourceId","Math","ceil","ItemCard","id","width","className","title","text","padding","source","height","divPadding","clsx","style","SignCard","viewBox","unknownText","pt","en","Achievements","players","achievements","reference","colorScheme","titleProps","size","getAnimationClass","length","contained","map","achievement","index","type","icon","achievementObj","player","playerId","li","getAnimation","duration","delay","avatarId","name","Boolean","description","content","String","value","shape","ImageBlurButton","cardId","ghost","useBlurCards","blurCard","isBlurEnabled","shouldBeBlurred","placement","onClick","EyeOutlined","EyeInvisibleOutlined","ImageBlurButtonContainer","children","position","rest","ImageCard","cardWidth","preview","previewImageId","fileExtension","square","classic","baseUrl","useTDBaseUrl","baseClass","useMemo","imageURL","replace","split","at","fallbackName","isBlurred","previewConfig","undefined","src","placeholder","fallback","PUBLIC_URL","CARDS","maskClassName","ImageCardBack","ImageCardButton","buttonPosition","over","disabled","buttonText","buttonProps","hideButton","isTop","iconComponent","DownCircleOutlined","UpCircleOutlined","buttonClassName","restButtonProps","button","ImageCardHand","hand","onSelectCard","selectButtonText","selectButtonIcon","selectButtonClass","sizeRatio","cardSize","minCardSize","disabledSelectButton","selectedCards","cardClassName","imageGroupPreview","useCardWidthByContainerRef","max","minWidth","containerRef","PreviewGroup","ref","div","ease","ImageCardPreloadHand","ImageCardSelectButton","selectLabel","deselectLabel","isSelected","custom","Container","contentProps","spaceProps","level","restTitleProps","childrenClassName","wrap","direction","childrenDirection","restChildrenContainerProps","Sprite","useQuery","queryKey","queryFn","fetch","response","enabled","isLoading","data","isError","paddedWidth","display","placeItems","svgContent","WarningOutlined","xlinkHref","dangerouslySetInnerHTML","__html","x","y","background","View","ViewIf","condition","ViewOr","ViewSwitch","cases","Error","console","warn","COMUNICACAO_DUO_ACTIONS","AFFILIATIONS","SIDES","STATUS","DECK_ENTRY_STATUS","useAlienAttributes","json","staleTime","POSITIVE_INFINITY","AlienKeyboard","onChange","availableAttributeKeys","language","useLanguage","attributes","useState","searchQuery","setSearchQuery","debouncedSearch","useCallback","debounce","query","allowedAttributes","orderBy","Object","values","filter","attribute","includes","searchDict","reduce","acc","stringRemoveAccents","keywords","toLowerCase","attributesList","a","onTap","key","updateSentence","spinning","HELPER_KEYS","Search","e","target","onSearch","allowClear","spriteId","VerticalAlignTopOutlined","DashOutlined","VerticalAlignBottomOutlined","StepBackwardOutlined","prev","lastChar","isLastHelper","LETTERS","toUpperCase","slice","AlienText","withTranslation","divProps","dualTranslate","characters","result","i","push","substring","splitStringEvery4","character","variantKey","attributeId","variant","variantsName","variants","trim","BoardEntry","entry","deckType","userSide","sideIndex","indexOf","affiliation","I","Board","deck","userId","animateEntries","userIndex","hasTheOtherPlayersTabooBeenSelected","otherPlayerIndex","otherPlayerSide","getOtherSide","some","deliveredBy","disabledTaboo","status","CoverAlienCard","side","NeutralDeliveriesWrapper","CloseCircleOutlined","trigger","onConfirm","useToggle","open","setOpen","AlienHeartEyesIcon","AlienStarEyesIcon","haveIDelivered","hasTheOtherPlayerDelivered","AlienNeutralIcon","color","SummaryBox","summary","round","playerA","find","playerB","total","current","deliverablesLeft","deliverablesLeftForA","deliverablesLeftForB","HistoryDeliverableEntry","deliverable","History","history","clueInputType","deckDict","keyBy","columns","dataIndex","render","requesterId","clue","deliverables","gap","deliverableId","panels","label","dataSource","pagination","items","StepAsk","user","announcement","requester","isTheRequester","onSubmitRequest","useLoading","sentence","setSentence","clueQuantity","setQuantity","onSubmit","fullWidth","wait","align","SpaceContainer","vertical","v","min","loading","ready","PhaseAskingForSomething","state","useUser","step","useStep","useWhichPlayerIsThe","translate","request","useGameActionRequest","actionName","successMessage","errorMessage","payload","action","useOnSubmitRequestAPIRequest","QuestionIcon","currentRound","phase","allowedPhase","PHASES","COMUNICACAO_DUO","ASKING_FOR_SOMETHING","StepVerification","entryIdToAnimate","nextPhase","results","autoTriggerTime","withWaitingTimeBar","fontSize","PhaseVerification","VERIFICATION","StepDeliver","onSubmitDelivery","onStopDelivery","latestHistoryEntry","delivery","PhaseDeliveringSomething","useOnSubmitDeliveryAPIRequest","useOnStopDeliveryAPIRequest","hasADelivery","MysteryBoxIcon","DELIVER_SOMETHING","PhaseGameOver","announcementIcon","TheEndIcon","achievementsReference","getActiveComponent","LoadingPage","DEFAULT","LOBBY","PhaseLobby","RULES","PhaseRules","SETUP","PhaseSetup","GAME_OVER","PageError","gameCollection","GAME_COLLECTION","ACHIEVEMENTS","propertyName","useGlobalState","PLACEHOLDER_PLAYER","activePlayer","setActivePlayer","isUser","setIsUser","useEffect","props","xmlns","fill","d","opacity"],"sourceRoot":""}