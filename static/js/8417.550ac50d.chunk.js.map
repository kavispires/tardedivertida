{"version":3,"file":"static/js/8417.550ac50d.chunk.js","mappings":"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","sources":["components/buttons/FixedMenuButton.tsx","components/buttons/TimedButton.tsx","components/buttons/TransparentButton.tsx","components/rules/CollapsibleRule.tsx","components/rules/PopoverRule.tsx","components/rules/RulesCarousel.tsx","components/rules/RulesList.tsx","components/rules/RulesModal.tsx","components/text/Instruction.tsx","components/text/RoundsLeftInstruction.tsx","components/text/TextHighlight.tsx","components/text/Title.tsx","hooks/useCountdown.ts","utils/info.ts"],"sourcesContent":["import clsx from 'clsx';\nimport { ReactNode, useState } from 'react';\nimport { useEffectOnce } from 'react-use';\n// Ant Design Resources\nimport { Button, ButtonProps, Popover } from 'antd';\n// Sass\nimport './FixedMenuButton.scss';\n\ntype FixedMenuButtonDefaultProps = {\n  /**\n   * What order it will show up in the screen\n   * 0 for rules\n   * 1 for extras (e.g. card size)\n   * 2 for extras\n   * 3 for rating\n   * -1 for admin only\n   */\n  position: 0 | 1 | 2 | 3 | -1;\n  /**\n   * The displayed icon\n   */\n  icon: ReactNode;\n  /**\n   * The optional label to follow the icon when hover\n   */\n  label?: ReactNode;\n  /**\n   * The custom class\n   */\n  className?: string;\n  /**\n   * Determine if label should be visible\n   */\n  showLabel?: boolean;\n  /**\n   * Any ant design button props\n   */\n  buttonProps?: ButtonProps;\n};\n\ninterface FixedMenuButtonPopoverProps extends FixedMenuButtonDefaultProps {\n  /**\n   * The type of the floater\n   */\n  type: 'popover';\n  /**\n   * Content of popover, required when popover rule\n   */\n  content: ReactNode;\n  /**\n   * Guard onclick from button only\n   */\n  onClick?: never;\n  /**\n   * If popover should be open\n   */\n  open?: boolean;\n}\n\ninterface FixedMenuButtonButtonOnlyProps extends FixedMenuButtonDefaultProps {\n  /**\n   * The type of the floater\n   */\n  type: 'button';\n  /**\n   * The click function for the button\n   */\n  onClick: GenericFunction;\n  /**\n   * Guard content from popover\n   */\n  content?: never;\n  /**\n   * If popover should be open\n   */\n  open?: never;\n}\n\ntype FixedMenuButtonProps = FixedMenuButtonPopoverProps | FixedMenuButtonButtonOnlyProps;\n\n/**\n * Button position on the top left of the screen to display rules, admin button and other features\n */\nexport function FixedMenuButton({ type, position, content, className, open, ...rest }: FixedMenuButtonProps) {\n  return (\n    <div className={clsx('fixed-menu-button', `fixed-menu-button--${position}`, className)}>\n      {type === 'popover' ? (\n        <Popover placement=\"bottomLeft\" content={content} trigger=\"click\" open={open}>\n          <FixedMenuButtonContent {...rest} />\n        </Popover>\n      ) : (\n        <FixedMenuButtonContent {...rest} />\n      )}\n    </div>\n  );\n}\n\nfunction FixedMenuButtonContent({\n  icon,\n  label,\n  showLabel,\n  onClick,\n  buttonProps,\n}: Partial<FixedMenuButtonProps>) {\n  const [isActive, setActive] = useState(showLabel);\n  const hasLabel = Boolean(label);\n\n  useEffectOnce(() => {\n    setActive(showLabel);\n  });\n\n  return (\n    <Button\n      shape={hasLabel && isActive ? 'round' : 'circle'}\n      size=\"middle\"\n      onMouseOver={() => setActive(true)}\n      onMouseLeave={() => setActive(showLabel ?? false)}\n      onClick={onClick ? onClick : undefined}\n      icon={icon}\n      type=\"ghost\"\n      {...buttonProps}\n    >\n      {isActive && hasLabel && <span className=\"fixed-menu-button__label\">{label}</span>}\n    </Button>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, ButtonProps } from 'antd';\n// Hook and Utils\nimport { useCountdown } from 'hooks/useCountdown';\n// Sass\nimport './TimedButton.scss';\n\ninterface TimedButtonProps extends ButtonProps {\n  /**\n   * Duration to call onExpire in seconds\n   */\n  duration?: number;\n  /**\n   * Function to be called when the time expires\n   */\n  onExpire?: GenericFunction;\n  /**\n   * Flag indicating if the timer should be hidden (this cancels the onExpire function)\n   */\n  hideTimer?: boolean;\n}\n\n/**\n * Button component that triggers a function when given duration is over\n */\nexport function TimedButton({\n  duration = 10,\n  children,\n  onExpire,\n  type,\n  onClick,\n  hideTimer = false,\n  ...rest\n}: TimedButtonProps) {\n  const { timeLeft } = useCountdown({\n    duration,\n    autoStart: true,\n    onExpire,\n    disabled: hideTimer,\n  });\n\n  const timeClass = 'timed-button__time';\n\n  return (\n    <Button {...rest} type={type} onClick={onClick ?? onExpire}>\n      {children}\n      {Boolean(children && !hideTimer) && ' '}\n      {!hideTimer && <span className={clsx(timeClass, `${timeClass}--${type}`)}>{timeLeft}</span>}\n    </Button>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Sass\nimport './TransparentButton.scss';\ninterface TransparentButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * The content of the button\n   */\n  children: ReactNode;\n  /**\n   * Flag indicating if the button is on its active state\n   */\n  active?: boolean;\n  /**\n   * Custom active class\n   */\n  activeClass?: string;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Behavior when the mouse hovers the button (default: scale)\n   */\n  hoverType?: 'scale' | 'sepia';\n}\n\n/**\n * Transparent button that has all the functionality of a button but no visible styling\n */\nexport const TransparentButton = ({\n  children,\n  active = false,\n  activeClass = '',\n  className = '',\n  hoverType = 'scale',\n  ...rest\n}: TransparentButtonProps) => {\n  return (\n    <button\n      className={clsx(\n        'transparent-button',\n        `transparent-button--${hoverType}`,\n        active && (activeClass || 'transparent-button--active'),\n        className\n      )}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n};\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { Collapse } from 'antd';\n// Components\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\n\ntype CollapsibleRuleProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * The title of the panel (default: Rules/Regras)\n   */\n  title?: ReactNode;\n};\nexport function CollapsibleRule({ children, title }: CollapsibleRuleProps): JSX.Element {\n  return (\n    <Instruction contained>\n      <Collapse ghost>\n        <Collapse.Panel header={<Translate pt=\"Regras\" en=\"Rules\" custom={title} />} key=\"1\">\n          {children}\n        </Collapse.Panel>\n      </Collapse>\n    </Instruction>\n  );\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { ReadOutlined } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\nimport { FixedMenuButton } from 'components/buttons';\n\ntype PopoverRuleProps = {\n  /**\n   * The rules themselves\n   */\n  content: ReactNode;\n  /**\n   * A custom label other than rules/regras\n   */\n  label?: ReactNode;\n  /**\n   * If label should be displayed\n   */\n  showLabel?: boolean;\n};\n\nexport function PopoverRule({ content, label, showLabel = false }: PopoverRuleProps): JSX.Element {\n  return (\n    <FixedMenuButton\n      type=\"popover\"\n      position={0}\n      icon={<ReadOutlined />}\n      content={content}\n      label={label || <Translate pt=\" Regras\" en=\" Rules\" />}\n      showLabel={showLabel}\n      buttonProps={{\n        type: 'primary',\n      }}\n    />\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Typography, Image, Carousel, Button, Space } from 'antd';\nimport { CarouselRef } from 'antd/es/carousel';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Constants\nimport { PUBLIC_URL } from 'utils/constants';\nimport { DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\nimport { createRef } from 'react';\nimport { Translate } from 'components/language';\nimport { useKeyPressEvent } from 'react-use';\n\ntype RulesCarouselProps = {\n  info: GameInfo;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Optional custom class name\n   */\n  ruleClassName?: string;\n  /**\n   * Optional custom class name\n   */\n  actionsClassName?: string;\n};\n\nexport function RulesCarousel({\n  info,\n  className = '',\n  ruleClassName = '',\n  actionsClassName,\n}: RulesCarouselProps): JSX.Element {\n  const { language } = useLanguage();\n  const ref = createRef<CarouselRef>();\n\n  useKeyPressEvent('ArrowLeft', () => {\n    ref.current?.prev();\n  });\n\n  useKeyPressEvent('ArrowRight', () => {\n    ref.current?.next();\n  });\n\n  return (\n    <div>\n      <Carousel className={clsx('rules-carousel', className)} autoplay autoplaySpeed={15000} ref={ref}>\n        {info.rules[language].map((rule, index) => (\n          <div className={clsx('rules-carousel__rule', className)} key={rule}>\n            <span className=\"rules-carousel__rule-number\">{index + 1}</span>\n\n            <Image\n              className=\"rules-carousel__image\"\n              src={\n                index === 0\n                  ? `${PUBLIC_URL.BANNERS}${info.gameName}-${language}.jpg`\n                  : `${PUBLIC_URL.RULES}game-rule-${info.gameName}-${index}.jpg`\n              }\n              fallback={`${PUBLIC_URL.RULES}game-rule-not-found.jpg`}\n              alt={rule}\n            />\n            <Typography.Paragraph className={clsx('rules-carousel__rule-text', ruleClassName)}>\n              {rule}\n            </Typography.Paragraph>\n          </div>\n        ))}\n      </Carousel>\n      <Space className={clsx('space-container', actionsClassName)}>\n        <Button type=\"default\" ghost onClick={() => ref.current?.prev()} size=\"small\">\n          <DoubleLeftOutlined /> <Translate pt=\"Regra Anterior\" en=\"Previous Rule\" />\n        </Button>\n        <Button type=\"default\" ghost onClick={() => ref.current?.next()} size=\"small\">\n          <Translate pt=\"Próxima Regra\" en=\"Next Rule\" /> <DoubleRightOutlined />\n        </Button>\n      </Space>\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n\ntype RulesListProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n};\n\nexport function RulesList({ children, className = '' }: RulesListProps): JSX.Element {\n  return <ul className={clsx('rules-list', className)}>{children}</ul>;\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, ButtonProps, Modal } from 'antd';\nimport { ReadOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Translate } from 'components/language';\nimport { RulesCarousel } from 'components/rules';\n\ntype RulesModalProps = {\n  gameInfo: GameInfo;\n  buttonProps?: ButtonProps;\n};\n\nexport function RulesModal({ gameInfo, buttonProps }: RulesModalProps): JSX.Element {\n  const { language, translate } = useLanguage();\n  const [isVisible, setVisibility] = useState(false);\n\n  const onCloseModal = () => {\n    setVisibility(false);\n  };\n\n  return (\n    <>\n      <Button type=\"default\" onClick={() => setVisibility(true)} icon={<ReadOutlined />} {...buttonProps}>\n        <Translate pt=\"Regras\" en=\"Rules\" />\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`${translate('Regras', 'Rules')}: ${gameInfo.title[language]}`}\n          open={isVisible}\n          onCancel={onCloseModal}\n          className=\"rules-modal\"\n          footer={[\n            <Button key=\"close\" onClick={onCloseModal}>\n              <Translate pt=\"Fechar\" en=\"Close\" />\n            </Button>,\n          ]}\n        >\n          <div className=\"rules-modal-content\">\n            <RulesCarousel info={gameInfo} />\n          </div>\n        </Modal>\n      )}\n    </>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Sass\nimport './Instruction.scss';\n\ntype InstructionsProps = {\n  /**\n   * The content of the instruction\n   */\n  children: ReactNode;\n  /**\n   * Adds a semi transparent background (white or black opposite to the white property)\n   */\n  contained?: boolean;\n  /**\n   * Make text color white\n   */\n  white?: boolean;\n  /**\n   * Makes instruction width 100%\n   */\n  fullWidth?: boolean;\n  /**\n   * Custom class name\n   */\n  className?: string;\n};\n\n/**\n * Typography container for instructions\n */\nexport const Instruction = ({ children, white, className, contained, fullWidth }: InstructionsProps) => {\n  const baseClass = 'instruction';\n\n  return (\n    <Typography.Text\n      className={clsx(\n        baseClass,\n        contained && `${baseClass}--contained`,\n        white && `${baseClass}--white`,\n        fullWidth && `${baseClass}--full-width`,\n        className\n      )}\n      data-testid=\"instruction\"\n    >\n      {children}\n    </Typography.Text>\n  );\n};\n","// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { pluralize } from 'utils/helpers';\n\ntype RoundsLeftInstructionProps = {\n  /**\n   * The state round object with current and total values\n   */\n  round: GameRound;\n};\n\n/**\n * Displays instructional sentence based on the number of rounds left for the game to end\n */\nexport function RoundsLeftInstruction({ round }: RoundsLeftInstructionProps) {\n  const left = (round?.total ?? 0) - (round?.current ?? 0);\n\n  if (left === 0 || round.forceLastRound) {\n    return (\n      <Instruction contained>\n        <Translate pt=\"Essa foi a última rodada\" en=\"No more rounds left\" />\n      </Instruction>\n    );\n  }\n\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            {pluralize(left, 'Falta', 'Faltam')} <strong>{left}</strong> {pluralize(left, 'rodada')} para o\n            jogo terminar...\n          </>\n        }\n        en={\n          <>\n            <strong>{left}</strong> {pluralize(left, 'round')} left for the game to end...\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n","import { ReactNode } from 'react';\n// Sass\nimport './TextHighlight.scss';\n\ntype TextHighlightProps = {\n  /**\n   * The text to be highlighted\n   */\n  children: ReactNode;\n};\n\nexport function TextHighlight({ children }: TextHighlightProps) {\n  return <span className=\"text-highlight\">{children}</span>;\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Sass\nimport './Title.scss';\n\ntype TitleProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Makes text white\n   */\n  white?: boolean;\n  /**\n   * Icon prefixing the title\n   */\n  icon?: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * The heading level (default: 2)\n   */\n  level?: 1 | 2 | 3 | 4 | 5;\n  /**\n   * The size of the title (default: medium)\n   */\n  size?: 'xx-small' | 'x-small' | 'small' | 'medium' | 'large';\n  /**\n   * The alignment of the text (default: center)\n   */\n  align?: 'left' | 'right' | 'center';\n};\n\nexport const Title = ({\n  children,\n  white,\n  icon,\n  className,\n  level = 2,\n  size = 'medium',\n  align = 'center',\n}: TitleProps) => {\n  return (\n    <Typography.Title\n      level={level}\n      className={clsx('title', `title--${size}`, `title--align-${align}`, white && 'title--white', className)}\n    >\n      {Boolean(icon) && icon}\n      {children}\n    </Typography.Title>\n  );\n};\n","import { TimerResult, TimerSettings, useTimer } from 'react-timer-hook';\nimport { inNSeconds } from 'utils/helpers';\n\ntype SelectedTimeSettings = Omit<TimerSettings, 'expiryTimestamp'>;\n\nexport interface useCountdownSettings extends SelectedTimeSettings {\n  /**\n   * The duration of the countdown in seconds\n   */\n  duration: number;\n  /**\n   * Disable timer\n   */\n  disabled?: boolean;\n}\n\ninterface useCountdownResults extends TimerResult {\n  /**\n   * Time left in total seconds (minutes + seconds)\n   */\n  timeLeft: number;\n}\n\n/**\n * Timer countdown to perform actions\n * @param settings\n * @returns\n */\nexport function useCountdown({\n  duration,\n  onExpire,\n  disabled = false,\n  ...rest\n}: useCountdownSettings): useCountdownResults {\n  const timer = useTimer({\n    expiryTimestamp: inNSeconds(duration),\n    onExpire: disabled ? undefined : onExpire,\n    ...rest,\n  });\n\n  const timeLeft = timer.minutes * 60 + timer.seconds;\n\n  return {\n    ...timer,\n    timeLeft,\n  };\n}\n","import ARTE_RUIM from 'games/arte-ruim/game-info.json';\nimport BOMBA_RELOGIO from 'games/bomba-relogio/game-info.json';\nimport CAMINHOS_MAGICOS from 'games/caminhos-magicos/game-info.json';\nimport CINEGRAFISTAS_AMADORES from 'games/cinegrafistas-amadores/game-info.json';\nimport COMUNICACAO_ALIENIGENA from 'games/comunicacao-alienigena/game-info.json';\nimport CONTADORES_HISTORIAS from 'games/contadores-historias/game-info.json';\nimport CRIMES_HEDIONDOS from 'games/crimes-hediondos/game-info.json';\nimport CRUZA_PALAVRAS from 'games/cruza-palavras/game-info.json';\nimport DETETIVES_IMAGINATIVOS from 'games/detetives-imaginativos/game-info.json';\nimport DILEMA_DOS_ESQUIADORES from 'games/dilema-dos-esquiadores/game-info.json';\nimport ESPIAO_ENTRE_NOS from 'games/espiao-entre-nos/game-info.json';\nimport FILEIRA_DE_FATOS from 'games/fileira-de-fatos/game-info.json';\nimport GALERIA_DE_SONHOS from 'games/galeria-de-sonhos/game-info.json';\nimport INSTRUMENTOS_CODIFICADOS from 'games/instrumentos-codificados/game-info.json';\nimport LINHAS_CRUZADAS from 'games/linhas-cruzadas/game-info.json';\nimport MEGAMIX from 'games/megamix/game-info.json';\nimport MENTE_COLETIVA from 'games/mente-coletiva/game-info.json';\nimport NA_RUA_DO_MEDO from 'games/na-rua-do-medo/game-info.json';\nimport NAUFRAGOS from 'games/naufragos/game-info.json';\nimport ONDA_TELEPATICA from 'games/onda-telepatica/game-info.json';\nimport PALHETA_DE_CORES from 'games/palheta-de-cores/game-info.json';\nimport POLEMICA_DA_VEZ from 'games/polemica-da-vez/game-info.json';\nimport PORTA_DOS_DESESPERADOS from 'games/porta-dos-desesperados/game-info.json';\nimport QUEM_NAO_MATA from 'games/quem-nao-mata/game-info.json';\nimport QUEM_SOU_EU from 'games/quem-sou-eu/game-info.json';\nimport RETRATO_FALADO from 'games/retrato-falado/game-info.json';\nimport SONHOS_PESADELOS from 'games/sonhos-pesadelos/game-info.json';\nimport SUPER_CAMPEONATO from 'games/super-campeonato/game-info.json';\nimport TESTEMUNHA_OCULAR from 'games/testemunha-ocular/game-info.json';\nimport TREVO_DA_SORTE from 'games/trevo-da-sorte/game-info.json';\nimport UE_SO_ISSO from 'games/ue-so-isso/game-info.json';\nimport VAMOS_AO_CINEMA from 'games/vamos-ao-cinema/game-info.json';\nimport VENDAVAL_DE_PALPITE from 'games/vendaval-de-palpite/game-info.json';\nimport TA_NA_CARA from 'games/ta-na-cara/game-info.json';\nimport comingSoonGames from 'assets/data/coming-soon-games.json';\n\nconst others = comingSoonGames as Record<GameName, GameInfo>;\n\nexport const GAME_LIST: Record<GameName, GameInfo> = {\n  ...others,\n  'arte-ruim': ARTE_RUIM,\n  'bomba-relogio': BOMBA_RELOGIO,\n  'caminhos-magicos': CAMINHOS_MAGICOS,\n  'cinegrafistas-amadores': CINEGRAFISTAS_AMADORES,\n  'comunicacao-alienigena': COMUNICACAO_ALIENIGENA,\n  'contadores-historias': CONTADORES_HISTORIAS,\n  'crimes-hediondos': CRIMES_HEDIONDOS,\n  'cruza-palavras': CRUZA_PALAVRAS,\n  'detetives-imaginativos': DETETIVES_IMAGINATIVOS,\n  'dilema-dos-esquiadores': DILEMA_DOS_ESQUIADORES,\n  'espiao-entre-nos': ESPIAO_ENTRE_NOS,\n  'fileira-de-fatos': FILEIRA_DE_FATOS,\n  'galeria-de-sonhos': GALERIA_DE_SONHOS,\n  'instrumentos-codificados': INSTRUMENTOS_CODIFICADOS,\n  'linhas-cruzadas': LINHAS_CRUZADAS,\n  megamix: MEGAMIX,\n  'mente-coletiva': MENTE_COLETIVA,\n  'na-rua-do-medo': NA_RUA_DO_MEDO,\n  naufragos: NAUFRAGOS,\n  'onda-telepatica': ONDA_TELEPATICA,\n  'palheta-de-cores': PALHETA_DE_CORES,\n  'polemica-da-vez': POLEMICA_DA_VEZ,\n  'porta-dos-desesperados': PORTA_DOS_DESESPERADOS,\n  'quem-nao-mata': QUEM_NAO_MATA,\n  'quem-sou-eu': QUEM_SOU_EU,\n  'retrato-falado': RETRATO_FALADO,\n  'sonhos-pesadelos': SONHOS_PESADELOS,\n  'super-campeonato': SUPER_CAMPEONATO,\n  'ta-na-cara': TA_NA_CARA,\n  'testemunha-ocular': TESTEMUNHA_OCULAR,\n  'trevo-da-sorte': TREVO_DA_SORTE,\n  'ue-so-isso': UE_SO_ISSO,\n  'vamos-ao-cinema': VAMOS_AO_CINEMA,\n  'vendaval-de-palpite': VENDAVAL_DE_PALPITE,\n};\n\nexport default GAME_LIST;\n"],"names":["FixedMenuButton","type","position","content","className","open","rest","clsx","placement","trigger","FixedMenuButtonContent","icon","label","showLabel","onClick","buttonProps","useState","isActive","setActive","hasLabel","Boolean","useEffectOnce","shape","size","onMouseOver","onMouseLeave","undefined","TimedButton","duration","children","onExpire","hideTimer","timeLeft","useCountdown","autoStart","disabled","timeClass","TransparentButton","active","activeClass","hoverType","CollapsibleRule","title","contained","ghost","header","pt","en","custom","PopoverRule","ReadOutlined","RulesCarousel","info","ruleClassName","actionsClassName","language","useLanguage","ref","createRef","useKeyPressEvent","current","prev","next","autoplay","autoplaySpeed","rules","map","rule","index","src","PUBLIC_URL","gameName","fallback","alt","DoubleLeftOutlined","DoubleRightOutlined","RulesList","RulesModal","gameInfo","translate","isVisible","setVisibility","onCloseModal","onCancel","footer","Instruction","white","fullWidth","baseClass","RoundsLeftInstruction","round","left","total","forceLastRound","pluralize","TextHighlight","Title","level","align","timer","useTimer","expiryTimestamp","inNSeconds","minutes","seconds","others","ARTE_RUIM","BOMBA_RELOGIO","CAMINHOS_MAGICOS","CINEGRAFISTAS_AMADORES","COMUNICACAO_ALIENIGENA","CONTADORES_HISTORIAS","CRIMES_HEDIONDOS","CRUZA_PALAVRAS","DETETIVES_IMAGINATIVOS","DILEMA_DOS_ESQUIADORES","ESPIAO_ENTRE_NOS","FILEIRA_DE_FATOS","GALERIA_DE_SONHOS","INSTRUMENTOS_CODIFICADOS","LINHAS_CRUZADAS","megamix","MEGAMIX","MENTE_COLETIVA","NA_RUA_DO_MEDO","naufragos","NAUFRAGOS","ONDA_TELEPATICA","PALHETA_DE_CORES","POLEMICA_DA_VEZ","PORTA_DOS_DESESPERADOS","QUEM_NAO_MATA","QUEM_SOU_EU","RETRATO_FALADO","SONHOS_PESADELOS","SUPER_CAMPEONATO","TA_NA_CARA","TESTEMUNHA_OCULAR","TREVO_DA_SORTE","UE_SO_ISSO","VAMOS_AO_CINEMA","VENDAVAL_DE_PALPITE"],"sourceRoot":""}