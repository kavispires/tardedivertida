{"version":3,"file":"static/js/page-dev-playground.6e211818.chunk.js","mappings":"kLAIO,SAASA,IACd,IAAQC,GAAaC,EAAAA,EAAAA,MAAbD,SACFE,GAAWC,EAAAA,EAAAA,MAEXC,EAAU,CACd,CAAEC,MAAO,OAAQC,MAAO,IAAKC,SAAuB,MAAbP,GACvC,CAAEK,MAAO,MAAOC,MAAO,OAAQC,SAAuB,SAAbP,GACzC,CAAEK,MAAO,QAASC,MAAO,aAAcC,SAAuB,eAAbP,GACjD,CAAEK,MAAO,SAAUC,MAAO,cAAeC,SAAuB,gBAAbP,GACnD,CAAEK,MAAO,UAAWC,MAAO,eAAgBC,SAAuB,iBAAbP,GACrD,CAAEK,MAAO,aAAcC,MAAO,kBAAmBC,SAAuB,oBAAbP,GAC3D,CAAEK,MAAO,WAAYC,MAAO,YAAaC,SAAuB,cAAbP,IAOrD,OAAO,SAAC,IAAD,CAAWI,QAASA,EAASI,aAAcR,EAAUS,SAJzC,SAACC,GAClBR,EAASQ,EACV,GAGF,CCXM,SAASC,EAAT,GAAgE,IAA3CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,MAC3C,OACE,mBAAQC,UAAU,aAAlB,UACE,iBAAKA,UAAU,sBAAf,WACE,iBAAKA,UAAU,mBAAf,WACE,kBAAMA,UAAU,oBAAhB,UAAqCH,EAArC,QACA,iBAAMG,UAAU,uBAAhB,SAAwCF,QAE1C,iBAAKE,UAAU,oBAAf,WACE,SAAC,IAAD,CAAOA,UAAU,0BAA0BC,MAAI,EAA/C,SACGF,KAEH,SAACf,EAAD,WAKT,C,gICiBD,QAnCA,YACEkB,EAAAA,EAAAA,GAAS,sCAET,IAoBA,GAA0BC,EAAAA,EAAAA,UAAc,IAAxC,eAEA,OAFA,WAGE,UAAC,IAAD,YACE,SAAC,IAAD,CAAWN,MAAM,gBACjB,SAAC,IAAOO,QAAR,CAAgBJ,UAAU,cAA1B,UACE,oDAIP,C,8ECpCD,IAAIK,EAAO,EAQX,IAAIC,GAXcC,EAAAA,EAAAA,GAAc,CAAC,EAAGC,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,KACjBC,MAWnB,QAAeH,EAEf,SAAeI,GACb,IAAIC,EAAUL,IAGd,OAAII,GAQGC,CACR,EAED,SAAqBD,GAEnB,IAAIE,EAAkBJ,EAAAA,SAAe,UACnCK,GAAmBC,EAAAA,EAAAA,GAAeF,EAAiB,GACnDG,EAAUF,EAAiB,GAC3BG,EAAaH,EAAiB,GAQhC,OAPAL,EAAAA,WAAgB,WACd,IAAIS,EAASZ,EACbA,GAAQ,EACRW,EAAW,aAAaE,OAAOD,GAChC,GAAE,IAGCP,GAUGK,CACR,C","sources":["pages/Dev/DevMenu.tsx","pages/Dev/DevHeader.tsx","pages/Dev/Playground.tsx","../node_modules/antd/node_modules/rc-util/es/hooks/useId.js"],"sourcesContent":["import { useLocation, useNavigate } from 'react-router-dom';\n// Ant Design Resources\nimport { Segmented } from 'antd';\n\nexport function DevMenu() {\n  const { pathname } = useLocation();\n  const navigate = useNavigate();\n\n  const options = [\n    { label: 'Home', value: '/', disabled: pathname === '/' },\n    { label: 'Hub', value: '/hub', disabled: pathname === '/hub' },\n    { label: 'Icons', value: '/dev/icons', disabled: pathname === '/dev/icons' },\n    { label: 'Colors', value: '/dev/colors', disabled: pathname === '/dev/colors' },\n    { label: 'Sprites', value: '/dev/sprites', disabled: pathname === '/dev/sprites' },\n    { label: 'Playground', value: '/dev/playground', disabled: pathname === '/dev/playground' },\n    { label: 'Showcase', value: '/showcase', disabled: pathname === '/showcase' },\n  ];\n\n  const onNavigate = (path: any) => {\n    navigate(path);\n  };\n\n  return <Segmented options={options} defaultValue={pathname} onChange={onNavigate} />;\n}\n","import type { ReactNode } from 'react';\n// Ant Design Resources\nimport { Space } from 'antd';\n// Internal\nimport { DevMenu } from './DevMenu';\n\ntype DevHeaderProps = {\n  title: ReactNode;\n  subTitle?: ReactNode;\n  extra?: ReactNode;\n};\n\nexport function DevHeader({ title, subTitle, extra }: DevHeaderProps) {\n  return (\n    <header className=\"dev-header\">\n      <div className=\"dev-header__heading\">\n        <div className=\"dev-header__left\">\n          <span className=\"dev-header__title\">{title} </span>\n          <span className=\"dev-header__subtitle\">{subTitle}</span>\n        </div>\n        <div className=\"dev-header__extra\">\n          <Space className=\"dev-header__extra-space\" wrap>\n            {extra}\n          </Space>\n          <DevMenu />\n        </div>\n      </div>\n    </header>\n  );\n}\n","import { type CSSProperties, useState } from 'react';\nimport { useTitle } from 'react-use';\n// Ant Design Resources\nimport { Layout } from 'antd';\n// Components\nimport { PageLayout } from 'components/layout/PageLayout';\n// Internal\nimport { DevHeader } from './DevHeader';\n// import { Image, Layout } from 'antd';\n// Resources\n\nfunction Playground() {\n  useTitle('Playground | Dev | Tarde Divertida');\n\n  const styles: CSSProperties = {\n    // display: 'grid',\n    // gridTemplateColumns: 'repeat(5, 1fr)',\n\n    // gap: '1rem',\n    display: 'flex',\n    flexWrap: 'wrap',\n  };\n  const stylesLi: CSSProperties = {\n    border: '1px solid black',\n    margin: '4px',\n    padding: '8px',\n    // width: '132px',\n    // display: 'flex',\n    // flexDirection: 'column',\n    background: 'white',\n    // alignItems: 'center',\n    // justifyContent: 'space-between',\n  };\n\n  const [lines, setLines] = useState<any>([]);\n\n  return (\n    <PageLayout>\n      <DevHeader title=\"Playground\" />\n      <Layout.Content className=\"dev-content\">\n        <div>playground content</div>\n      </Layout.Content>\n    </PageLayout>\n  );\n}\n\nexport default Playground;\n","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport * as React from 'react';\nfunction getUseId() {\n  // We need fully clone React function here to avoid webpack warning React 17 do not export `useId`\n  var fullClone = _objectSpread({}, React);\n  return fullClone.useId;\n}\nvar uuid = 0;\n\n/** @private Note only worked in develop env. Not work in production. */\nexport function resetUuid() {\n  if (process.env.NODE_ENV !== 'production') {\n    uuid = 0;\n  }\n}\nvar useOriginId = getUseId();\nexport default useOriginId ?\n// Use React `useId`\nfunction useId(id) {\n  var reactId = useOriginId();\n\n  // Developer passed id is single source of truth\n  if (id) {\n    return id;\n  }\n\n  // Test env always return mock id\n  if (process.env.NODE_ENV === 'test') {\n    return 'test-id';\n  }\n  return reactId;\n} :\n// Use compatible of `useId`\nfunction useCompatId(id) {\n  // Inner id for accessibility usage. Only work in client side\n  var _React$useState = React.useState('ssr-id'),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    innerId = _React$useState2[0],\n    setInnerId = _React$useState2[1];\n  React.useEffect(function () {\n    var nextId = uuid;\n    uuid += 1;\n    setInnerId(\"rc_unique_\".concat(nextId));\n  }, []);\n\n  // Developer passed id is single source of truth\n  if (id) {\n    return id;\n  }\n\n  // Test env always return mock id\n  if (process.env.NODE_ENV === 'test') {\n    return 'test-id';\n  }\n\n  // Return react native id or inner id\n  return innerId;\n};"],"names":["DevMenu","pathname","useLocation","navigate","useNavigate","options","label","value","disabled","defaultValue","onChange","path","DevHeader","title","subTitle","extra","className","wrap","useTitle","useState","Content","uuid","useOriginId","_objectSpread","React","useId","id","reactId","_React$useState","_React$useState2","_slicedToArray","innerId","setInnerId","nextId","concat"],"sourceRoot":""}