{"version":3,"file":"static/js/9395.c2df006b.chunk.js","mappings":"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","sources":["components/auth/SignIn.tsx","components/debug/DebugOnly.tsx","components/debug/DevButton.tsx","components/general/AutoNextPhase.tsx","components/general/GameBanner.tsx","components/host/HostButton.tsx","components/host/HostOnlyContainer.tsx","components/host/HostNextPhaseButton.tsx","components/host/HostOnlyButton.tsx","components/metrics/MetricHighlight.tsx","components/phases/PhaseContainer.tsx","components/phases/PhaseAnnouncement.tsx","components/phases/lobby/CloudBackground.tsx","components/phases/lobby/StepJoin.tsx","mock/players.ts","components/phases/lobby/AvatarSelection.tsx","components/phases/lobby/Settings.tsx","components/phases/lobby/UsualAvatarsSelection.tsx","components/phases/lobby/StepInfo.tsx","hooks/useAddPlayer.ts","components/phases/lobby/StepWaiting.tsx","components/phases/lobby/JoinedPlayers.tsx","components/phases/lobby/LobbyRules.tsx","components/phases/PhaseLobby.tsx","components/phases/PhasePlaceholder.tsx","components/phases/PhaseRules.tsx","components/phases/PhaseSetup.tsx","components/phases/PhaseTimerReset.tsx","components/players/ReadyPlayersBar.tsx","components/players/TurnOrder.tsx","components/players/WaitingRoom.tsx","components/players/reorder.tsx","components/rules/CollapsibleRule.tsx","components/rules/PopoverRule.tsx","components/rules/RulesCarousel.tsx","components/rules/RulesList.tsx","components/rules/RulesModal.tsx","hooks/useGameState.ts","hooks/useFirestoreDocument.ts","components/players/PlayersStatusBar.tsx","components/drawers/_internal/SectionMeta.tsx","components/drawers/_internal/SectionRankedPlayers.tsx","components/drawers/_internal/BlurOptions.tsx","components/drawers/_internal/SectionSettings.tsx","components/drawers/GameInfoDrawer.tsx","components/session/RedirectSession.tsx","components/session/Session.tsx","hooks/useIdleRedirect.ts","components/steps/Step.tsx","components/steps/StepSwitcher.tsx","components/timers/TimerClock.tsx","components/timers/TimerBar.tsx","components/timers/TimedTimerBar.tsx","components/timers/TimedTimerClock.tsx","components/timers/WaitingTime.tsx","hooks/useBlurCards.ts","hooks/useDevFeatures.ts","hooks/useGameActionRequest.ts","hooks/useHost.ts","hooks/useMock.ts","hooks/useStep.ts","hooks/useTDBaseUrl.ts","hooks/useTemporarilyHidePlayersBar.ts","hooks/useUser.ts","utils/phases.ts","utils/speech.ts"],"sourcesContent":["import { useMutation } from '@tanstack/react-query';\nimport type { UserCredential } from 'firebase/auth';\nimport { useState } from 'react';\nimport { Button, Form, Input, Alert, Image, App, Switch, Space, type ButtonProps } from 'antd';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { resetPassword, signIn, signInWithGoogle } from 'services/firebase';\nimport { GoogleIcon } from 'icons/GoogleIcon';\nimport { IconAvatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport logo from 'assets/images/tarde-divertida-logo.svg';\n// API\n// Image\n\ntype SignInProps = {\n  onSuccess: GenericFunction;\n};\n\nexport function SignIn({ onSuccess }: SignInProps) {\n  const [view, setView] = useState('google');\n\n  return (\n    <div className=\"sign-in\">\n      <div className=\"sign-in__logo\">\n        <Image src={logo} preview={false} />\n      </div>\n\n      <Space className=\"space-container\">\n        <Switch\n          checkedChildren={<Translate pt=\"E-mail e senha\" en=\"Email and Password\" />}\n          unCheckedChildren=\"Google\"\n          onChange={(checked) => setView(checked ? 'email' : 'google')}\n        />\n      </Space>\n\n      {view === 'google' ? (\n        <SignInWithGoogle onSuccess={onSuccess} />\n      ) : (\n        <SignInWithEmail onSuccess={onSuccess} />\n      )}\n    </div>\n  );\n}\n\nexport function SignInWithGoogle({ onSuccess, ...buttonProps }: SignInProps & ButtonProps) {\n  const { isPending, mutate, isError } = useMutation<UserCredential, Error, void, unknown>({\n    mutationFn: async () => await signInWithGoogle(),\n    onSuccess,\n  });\n\n  const onFinish = () => {\n    mutate();\n  };\n\n  return (\n    <Space\n      className=\"space-container\"\n      direction=\"vertical\"\n      align=\"center\"\n      classNames={{ item: 'full-width' }}\n    >\n      <>\n        {isError && (\n          <Alert\n            description={\n              <Translate pt=\"Algo deu errado, tente novamente\" en=\"Something went wrong. Please try again\" />\n            }\n            type=\"error\"\n            showIcon\n            className=\"sign-in__error-alert\"\n          />\n        )}\n        <Button\n          type=\"primary\"\n          size=\"large\"\n          onClick={onFinish}\n          loading={isPending}\n          block\n          icon={<IconAvatar icon={<GoogleIcon />} size=\"small\" />}\n          {...buttonProps}\n        >\n          <Translate pt=\"Entrar com Google\" en=\"Sign in with Google\" />\n        </Button>\n      </>\n    </Space>\n  );\n}\n\nfunction SignInWithEmail({ onSuccess }: SignInProps) {\n  const [form] = Form.useForm();\n  const { translate } = useLanguage();\n  const [showForgotPassword, setShowForgotPassword] = useState(false);\n\n  const { isPending, mutate, isError } = useMutation<UserCredential, Error, void, unknown>({\n    mutationFn: async () => await signIn(form.getFieldValue('username'), form.getFieldValue('password')),\n    onSuccess,\n  });\n\n  const onFinish = () => {\n    mutate();\n  };\n\n  return (\n    <>\n      <Form\n        name=\"login\"\n        form={form}\n        labelCol={{ span: 8 }}\n        wrapperCol={{ span: 16 }}\n        style={{ maxWidth: 600 }}\n        initialValues={{ remember: true }}\n        onFinish={onFinish}\n        autoComplete=\"off\"\n      >\n        <Form.Item\n          label={<Translate pt=\"E-mail\" en=\"E-mail\" />}\n          name=\"username\"\n          rules={[\n            {\n              required: true,\n              message: translate('e-mail é um campo obrigatório', 'e-mail is required'),\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label={<Translate pt=\"Senha\" en=\"Password\" />}\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: translate('e-mail é um campo obrigatório', 'e-mail is required'),\n            },\n          ]}\n          help={translate('Mínimo 6 caracteres', 'Minimum of 6 characters')}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        {isError && (\n          <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n            <Alert\n              description={\n                <Translate\n                  pt=\"Algo deu errado, tente novamente\"\n                  en=\"Something went wrong. Please try again\"\n                />\n              }\n              type=\"error\"\n              showIcon\n              className=\"sign-in__error-alert\"\n            />\n          </Form.Item>\n        )}\n\n        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n          <Button type=\"primary\" htmlType=\"submit\" loading={isPending}>\n            <Translate pt=\"Entrar\" en=\"Submit\" />\n          </Button>\n\n          <Button type=\"link\" onClick={() => setShowForgotPassword((v) => !v)}>\n            <Translate pt=\"Esqueci minha senha\" en=\"Forgot my password\" />\n          </Button>\n        </Form.Item>\n      </Form>\n      {showForgotPassword && (\n        <Alert\n          type=\"info\"\n          message={\n            <ResetPasswordForm\n              email={form.getFieldValue('username')}\n              onSuccess={() => setShowForgotPassword(false)}\n            />\n          }\n        />\n      )}\n    </>\n  );\n}\n\ntype ResetPasswordFormProps = {\n  email?: string;\n  onSuccess: GenericFunction;\n};\n\nfunction ResetPasswordForm({ email, onSuccess }: ResetPasswordFormProps) {\n  const { message } = App.useApp();\n  const [form] = Form.useForm();\n  const { translate } = useLanguage();\n\n  const { isPending, mutate, isError } = useMutation({\n    mutationFn: async () => await resetPassword(form.getFieldValue('username')),\n    onSuccess: () => {\n      onSuccess();\n      message.success(\n        translate(\n          'Verifique seu e-mail enviado para redefinir a sua senha',\n          'Verify your email to reset your password',\n        ),\n      );\n    },\n  });\n\n  const onFinish = () => {\n    mutate();\n  };\n\n  return (\n    <Form\n      name=\"forgot-password\"\n      form={form}\n      labelCol={{ span: 8 }}\n      wrapperCol={{ span: 16 }}\n      style={{ maxWidth: 600 }}\n      initialValues={{ username: email, remember: true }}\n      onFinish={onFinish}\n      autoComplete=\"off\"\n    >\n      <Form.Item>\n        <Title level={4} size=\"xx-small\">\n          <Translate pt=\"Redefinir a senha\" en=\"Password Reset\" />\n        </Title>\n      </Form.Item>\n      <Form.Item\n        label={<Translate pt=\"E-mail\" en=\"E-mail\" />}\n        name=\"username\"\n        rules={[\n          {\n            required: true,\n            message: translate('e-mail é um campo obrigatório', 'e-mail is required'),\n          },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      {isError && (\n        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n          <Alert\n            description={\n              <Translate\n                pt=\"Algo deu errado, provavelmente este e-mail não existe no banco de dados da Tarde Divertida\"\n                en=\"Something went wrong. Please try again\"\n              />\n            }\n            type=\"error\"\n            showIcon\n            className=\"sign-in__error-alert\"\n          />\n        </Form.Item>\n      )}\n\n      <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n        <Button type=\"primary\" htmlType=\"submit\" loading={isPending}>\n          <Translate pt=\"Enviar\" en=\"Submit\" />\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n","import type { ReactNode } from 'react';\n// Hooks\nimport { useDevFeatures } from 'hooks/useDevFeatures';\n\ntype DebugOnlyProps = {\n  dev?: boolean;\n  devOnly?: boolean;\n  div?: boolean;\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n};\n\n/**\n * Wrapper component for information only displayed if the debug mode is on\n * @param props\n * @returns\n */\nexport function DebugOnly({ children, div = false, dev = false, devOnly = false }: DebugOnlyProps) {\n  const { isDebugEnabled, isDevEnv } = useDevFeatures();\n\n  if (devOnly) {\n    if (div && isDevEnv) {\n      return <div>{children}</div>;\n    }\n\n    return isDevEnv ? <> {children}</> : <></>;\n  }\n\n  if ((dev && isDevEnv) || isDebugEnabled) {\n    if (div) {\n      return <div>{children}</div>;\n    }\n    return <>{children}</>;\n  }\n  return <></>;\n}\n","// Ant Design Resources\nimport { BugFilled } from '@ant-design/icons';\nimport { Button, type ButtonProps } from 'antd';\n// Internal\nimport { DebugOnly } from './DebugOnly';\n\n/**\n * Button only available during dev only\n * @returns\n */\nexport function DevButton({ children, type, ...rest }: ButtonProps) {\n  return (\n    <DebugOnly devOnly>\n      <Button icon={<BugFilled />} type={type ?? 'primary'} {...rest}>\n        {children}\n      </Button>\n    </DebugOnly>\n  );\n}\n","// Types\nimport type { GamePlayers } from 'types/player';\n// Components\nimport { HostNextPhaseButton } from 'components/host';\nimport { Translate } from 'components/language';\n\ntype AutoNextPhaseProps = {\n  players: GamePlayers;\n};\n\n/**\n * Add this component to a game if you want the game to automatically go to the next phase when all players are ready.\n */\nexport function AutoNextPhase({ players }: AutoNextPhaseProps) {\n  const isEverybodyReady = Object.values(players).every((player) => player.ready);\n\n  if (!isEverybodyReady) return <></>;\n\n  return (\n    <HostNextPhaseButton round={{ current: -1, total: 10, forceLastRound: false }} autoTriggerTime={20}>\n      <Translate pt=\"Continuar\" en=\"Next\" />\n    </HostNextPhaseButton>\n  );\n}\n","import { motion } from 'framer-motion';\nimport type { ReactNode } from 'react';\n// Ant Design Resources\nimport { Image } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { PUBLIC_URL } from 'utils/constants';\n\ntype BannerProps = {\n  /**\n   * Display title of the game\n   */\n  title?: DualLanguageValue;\n  /**\n   * Name (collection key) of the game\n   */\n  gameName?: string;\n  /**\n   * Custom class name\n   */\n  className?: string;\n  /**\n   * Determine if image should be able to be previewed\n   */\n  preview?: boolean;\n};\n\nexport function GameBanner({ title, gameName, className, preview }: BannerProps) {\n  const { language } = useLanguage();\n\n  return (\n    <figure>\n      <Image\n        alt={title?.[language]}\n        src={`${PUBLIC_URL.BANNERS}${gameName}-${language}.jpg`}\n        fallback={`${PUBLIC_URL.BANNERS}/em-breve-${language}.jpg`}\n        className={className}\n        preview={preview}\n      />\n    </figure>\n  );\n}\n\ntype GameStripProps = {\n  /**\n   * Name (collection key) of the game\n   */\n  gameName: string;\n  /**\n   *\n   */\n  width: number;\n  /**\n   * Custom class name\n   */\n  className?: string;\n  /**\n   *\n   */\n  title: DualLanguageValue;\n  /**\n   *\n   */\n  stripWidth?: number | string;\n  /**\n   * any additional content\n   */\n  children?: ReactNode;\n  /**\n   * Show logo\n   */\n  showLogo?: boolean;\n};\n\nexport function GameStrip({\n  gameName,\n  width,\n  title,\n  stripWidth = '100%',\n  className,\n  children,\n  showLogo = true,\n}: GameStripProps) {\n  const { language, dualTranslate } = useLanguage();\n\n  const logoHeight = width / 1.5; // Logo width/height ratio is 1.5\n  const backgroundHeight = logoHeight;\n\n  return (\n    <div\n      style={{\n        width: typeof stripWidth === 'number' ? `${stripWidth}px` : stripWidth,\n        minWidth: `${width}px`,\n        height: `${backgroundHeight}px`,\n        position: 'relative',\n        overflow: 'hidden',\n      }}\n      className={className}\n    >\n      <img\n        src={`${PUBLIC_URL.STRIPS}strip-${gameName}.jpg`}\n        alt={`${dualTranslate(title)} background`}\n        style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n          objectFit: 'cover',\n        }}\n      />\n      <motion.img\n        src={`${PUBLIC_URL.LOGOS}logo-${gameName}-${language}.svg`}\n        alt={`${dualTranslate(title)} logo`}\n        style={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          width: `${width}px`,\n          height: `${logoHeight}px`,\n          opacity: showLogo ? 1 : 0,\n          transition: 'opacity 0.5s',\n        }}\n        animate={{\n          transform: ['translate(-50%, -50%)', 'translate(-50%, -45%)', 'translate(-50%, -50%)'],\n          transition: { duration: 7, repeat: Number.POSITIVE_INFINITY },\n        }}\n      />\n      {children}\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { RocketOutlined } from '@ant-design/icons';\nimport { Button, type ButtonProps } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\n// Sass\nimport './HostButton.scss';\n\n/**\n * Host Button (orange with rocket icon)\n * Important: This button is NOT guarded by HostOnlyContainer, and it must be wrapped by it.\n */\nexport function HostButton({ onClick, icon, disabled, className = '', ...rest }: ButtonProps) {\n  const { isLoading } = useLoading();\n\n  return (\n    <Button\n      icon={icon ?? <RocketOutlined />}\n      ghost\n      onClick={onClick}\n      disabled={disabled || isLoading}\n      className={clsx('host-button', className)}\n      {...rest}\n    />\n  );\n}\n","import clsx from 'clsx';\nimport type { ReactNode } from 'react';\n// Ant Design Resources\nimport { RocketOutlined } from '@ant-design/icons';\nimport { Space, type SpaceProps } from 'antd';\n// Hooks\nimport { useHost } from 'hooks/useHost';\n// Sass\nimport './HostOnlyContainer.scss';\n\ninterface HostOnlyContainerProps extends SpaceProps {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Custom label\n   */\n  label?: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n}\n\nexport const HostOnlyContainer = ({ children, label, className = '', ...rest }: HostOnlyContainerProps) => {\n  const isHost = useHost();\n\n  if (!isHost) return <></>;\n\n  return (\n    <fieldset className={clsx('host-only-container', className)}>\n      <legend className=\"host-only-container__legend\">\n        <RocketOutlined /> {label ?? 'Host Controls'}\n      </legend>\n      <Space {...rest}>{children}</Space>\n    </fieldset>\n  );\n};\n","import clsx from 'clsx';\nimport { type ReactNode, useEffect } from 'react';\n// Ant Design Resources\nimport { PauseOutlined, PlayCircleOutlined } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\n// Types\nimport type { GameRound } from 'types/game';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useHost } from 'hooks/useHost';\nimport { useHostActionRequest } from 'hooks/useHostActionRequest';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\n// Services\nimport { HOST_API_ACTIONS } from 'services/adapters';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { Translate } from 'components/language';\nimport { WaitingTime } from 'components/timers';\n// Internal\nimport { HostOnlyContainer } from './HostOnlyContainer';\nimport { HostButton } from './HostButton';\n\nfunction ButtonLabel({ round }: { round?: GameRound }) {\n  if (!round || round.current === round.total || round.forceLastRound) {\n    return <Translate pt=\"Tela de Game Over\" en=\"Game Over Screen\" />;\n  }\n\n  return <Translate pt=\"Próxima rodada\" en=\"Next Round\" />;\n}\n\ntype HostNextPhaseButtonProps = {\n  /**\n   * The button content, if not present \"Next Round is used instead\"\n   */\n  children?: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Game round information used to determine if it is game over\n   */\n  round?: GameRound;\n  /**\n   * Time to auto trigger the button in seconds (default: 45 seconds)\n   */\n  autoTriggerTime?: number;\n  /**\n   *\n   */\n  withWaitingTimeBar?: boolean;\n};\n\n/**\n * Button only available to the Host to go to the next phase.\n * It will be auto-triggered after 60 seconds unless value is overridden with a 0\n * It may be paused\n */\nexport function HostNextPhaseButton({\n  round,\n  autoTriggerTime = 30,\n  children,\n  withWaitingTimeBar,\n}: HostNextPhaseButtonProps) {\n  const isHost = useHost();\n  const { translate } = useLanguage();\n  const { isKeyLoading } = useLoading();\n  const isLoading = isKeyLoading('go-to-next-phase');\n\n  const onGoToNextPhase = useHostActionRequest({\n    actionName: 'go-to-next-phase',\n    successMessage: translate('Funcionou, próxima fase!', 'It worked, next phase!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar ir para a próxima fase',\n      'The application found an error while trying to go to the next phase',\n    ),\n  });\n\n  const handleClick = () => onGoToNextPhase({ action: HOST_API_ACTIONS.GO_TO_NEXT_PHASE });\n\n  const hasTimer = Boolean(autoTriggerTime);\n\n  const { timeLeft, isRunning, pause, resume } = useCountdown({\n    autoStart: autoTriggerTime > 0,\n    duration: autoTriggerTime,\n    onExpire: handleClick,\n    disabled: !isHost || !hasTimer,\n  });\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: only watch for isLoading\n  useEffect(() => {\n    if (isLoading) {\n      pause();\n    }\n    return () => pause();\n  }, [isLoading]);\n\n  return (\n    <>\n      {withWaitingTimeBar && <WaitingTime duration={autoTriggerTime} timeLeft={timeLeft} />}\n\n      <HostOnlyContainer\n        label=\"Host Action\"\n        className={clsx('host-only-container--float', getAnimationClass('slideInUp'))}\n      >\n        <Tooltip title=\"Pause\">\n          <HostButton\n            icon={isRunning ? <PauseOutlined /> : <PlayCircleOutlined />}\n            onClick={isRunning ? pause : resume}\n            disabled={isLoading}\n          />\n        </Tooltip>\n        <HostButton\n          disabled={isLoading}\n          onClick={handleClick}\n          icon={\n            hasTimer && (\n              <span\n                className={clsx(\n                  'host-button-timer',\n                  !isRunning &&\n                    getAnimationClass('flash', {\n                      speed: 'slow',\n                      infinite: true,\n                    }),\n                )}\n              >\n                {timeLeft}\n              </span>\n            )\n          }\n        >\n          {children ?? <ButtonLabel round={round} />}\n        </HostButton>\n      </HostOnlyContainer>\n    </>\n  );\n}\n","import type { ReactNode } from 'react';\n// Ant Design Resources\nimport type { ButtonProps } from 'antd';\n// Internal\nimport { HostButton, HostOnlyContainer } from './index';\n\ntype HostOnlyButtonProps = {\n  /**\n   * The click action\n   */\n  onClick: GenericFunction;\n  /**\n   * The button label\n   */\n  children: ReactNode;\n} & ButtonProps;\n\nexport function HostOnlyButton({ onClick, children, ...buttonProps }: HostOnlyButtonProps) {\n  return (\n    <HostOnlyContainer>\n      <HostButton onClick={onClick} {...buttonProps}>\n        {children}\n      </HostButton>\n    </HostOnlyContainer>\n  );\n}\n","import type { AvatarSize } from 'antd/lib/avatar/AvatarContext';\nimport clsx from 'clsx';\nimport type { ReactNode } from 'react';\n// Components\nimport { IconAvatar } from 'components/avatars/IconAvatar';\n\nexport type MetricHighlightProps = {\n  /**\n   * The text to be highlighted\n   */\n  children: ReactNode;\n  /**\n   * The icon representing the metric\n   */\n  icon: ReactNode;\n  /**\n   * Indicates if it's a negative metric\n   */\n  type?: 'positive' | 'negative' | 'default';\n  /**\n   * The size of the avatar (default: small)\n   */\n  iconSize?: AvatarSize;\n  /**\n   * Custom class\n   */\n  className?: string;\n  /**\n   * Icon placement (default: after)\n   */\n  iconPlacement?: 'before' | 'after';\n};\n\nexport function MetricHighlight({\n  children,\n  icon,\n  type,\n  className,\n  iconSize = 'small',\n  iconPlacement = 'after',\n}: MetricHighlightProps) {\n  return (\n    <span className={clsx('metric-highlight', type && `metric-highlight--${type}`, className)}>\n      {iconPlacement === 'before' && (\n        <>\n          <IconAvatar size={iconSize} icon={icon} />{' '}\n        </>\n      )}\n      {children}\n      {iconPlacement === 'after' && (\n        <>\n          {' '}\n          <IconAvatar size={iconSize} icon={icon} />\n        </>\n      )}\n    </span>\n  );\n}\n\nexport type HighlightProps = Omit<MetricHighlightProps, 'icon'>;\n","import clsx from 'clsx';\nimport { type ReactNode, useRef } from 'react';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { PageError } from 'components/errors';\nimport { LoadingPage } from 'components/loaders';\nimport { useGameAppearance } from 'components/session/GameInfoContext';\n\ntype PhaseContainerProps = {\n  /**\n   * The current phase that must match the allowed phase\n   */\n  phase?: string;\n  /**\n   * The allowed phase\n   */\n  allowedPhase?: string;\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * If the container should take the full screen\n   */\n  fullScreen?: boolean;\n  /**\n   * If the container should be white\n   * @deprecated\n   */\n  white?: boolean;\n};\n\n/**\n * Wrapping container around a game screen\n * @param props\n * @returns\n */\nexport function PhaseContainer({\n  phase,\n  allowedPhase = '',\n  children,\n  className = '',\n  fullScreen = false,\n  white = false,\n}: PhaseContainerProps) {\n  const appearance = useGameAppearance();\n  const { translate } = useLanguage();\n  const screenRef = useRef<HTMLScriptElement>(null);\n\n  if (allowedPhase !== phase) {\n    return <LoadingPage />;\n  }\n\n  if (!phase) {\n    return (\n      <PageError description={translate('Estado do jogo não está correto', 'Game state is not correct')} />\n    );\n  }\n\n  const baseClass = 'phase-container';\n  const backgroundColorOverlay = appearance?.backgroundColor;\n\n  return (\n    <main\n      className={clsx(\n        baseClass,\n        fullScreen && `${baseClass}--full-screen`,\n        white && `${baseClass}--white`,\n        className,\n      )}\n      id=\"screen\"\n      ref={screenRef}\n      style={backgroundColorOverlay ? { backgroundColor: backgroundColorOverlay } : {}}\n    >\n      {children}\n    </main>\n  );\n}\n","import clsx from 'clsx';\nimport { type ReactNode, useState } from 'react';\nimport { useKeyPressEvent } from 'react-use';\n// Ant Design Resources\nimport { Button } from 'antd';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Utils\nimport { type AnimationType, getAnimationClass } from 'utils/helpers';\n// Components\nimport { TimedButton } from 'components/buttons';\nimport { Translate } from 'components/language';\nimport { Title } from 'components/text';\n// Sass\nimport './PhaseAnnouncement.scss';\n// Design Resource\n\ntype PhaseAnnouncementBasicProps = {\n  /**\n   * The title of the game phase\n   */\n  title: ReactNode;\n  /**\n   * The icon displayed to illustrate the phase\n   */\n  icon: ReactNode;\n  /**\n   * The Text\n   */\n  buttonText?: ReactNode;\n  /**\n   * Additional content of the announcement, usually a simple instruction\n   */\n  children?: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Current round number (default 0)\n   */\n  currentRound?: number;\n  /**\n   * Duration to override default duration.\n   * The default duration follows the current round going for 15, 10, then 5 seconds\n   */\n  duration?: number;\n  /**\n   * Prevents user from skipping the the announcement card\n   */\n  unskippable?: boolean;\n  /**\n   * Removes timer from the continue button\n   */\n  withoutTimer?: boolean;\n  /**\n   * In animation for the announcement\n   */\n  animationType?: AnimationType;\n  /**\n   * If component should be an overlay or a block\n   */\n  type?: 'block' | 'overlay';\n};\n\ntype PhaseAnnouncementBlock = {\n  /**\n   * The phase announcement will be its own screen without overlaying any content\n   */\n  type: 'block';\n  /**\n   * The function called when the close button is clicked\n   */\n  onClose: GenericFunction;\n} & PhaseAnnouncementBasicProps;\n\ntype PhaseAnnouncementOverlay = {\n  /**\n   * The phase announcement will be its own screen without overlaying any content\n   */\n  type: 'overlay';\n  /**\n   * The function called when the close button is clicked\n   */\n  onClose?: GenericFunction;\n} & PhaseAnnouncementBasicProps;\n\ntype PhaseAnnouncementProps = PhaseAnnouncementBlock | PhaseAnnouncementOverlay;\n\n/**\n * Screen displayed before (or over) any game phase with title and illustration and some simple instruction\n */\nexport function PhaseAnnouncement({\n  buttonText,\n  icon,\n  title,\n  children,\n  currentRound = 3,\n  onClose = () => {},\n  className,\n  duration,\n  withoutTimer = false,\n  unskippable,\n  animationType = 'backInDown',\n  type = 'block',\n}: PhaseAnnouncementProps) {\n  useTemporarilyHidePlayersBar(type === 'overlay');\n  const durationPerRound = [7, 15, 7, 5]?.[currentRound] ?? 4;\n  const [isActive, setActive] = useState(true);\n  const [isRemoved, setRemoved] = useState(false);\n\n  /**\n   * Deactivate component (triggering animation)\n   * Start timer to remove it from dom\n   * Perform the onClose function\n   */\n  const onContinue = () => {\n    setActive(false);\n    start();\n    onClose();\n  };\n\n  // Allow skip when pressing the space bar in a skippable announcement\n  useKeyPressEvent(' ', () => {\n    if (!unskippable) {\n      onContinue();\n    }\n  });\n\n  /**\n   * When the overlay is dismissed the component needs to disappear so the screen\n   * components can be clickable again\n   */\n  const { start } = useCountdown({\n    autoStart: false,\n    duration: 1,\n    onExpire: () => setRemoved(true),\n  });\n\n  if (isRemoved) {\n    return <></>;\n  }\n\n  return (\n    <div\n      className={clsx(\n        type === 'overlay' && 'phase-announcement-overlay',\n        !isActive && getAnimationClass('fadeOut', { speed: 'faster' }),\n      )}\n    >\n      <div className=\"phase-announcement-wrapper\">\n        <div\n          className={clsx(\n            'phase-announcement',\n            isActive ? getAnimationClass(animationType, { speed: 'fast' }) : getAnimationClass('bounceOut'),\n            className,\n          )}\n        >\n          <Title colorScheme=\"light\">{title}</Title>\n\n          <span className=\"phase-announcement__icon\">{icon}</span>\n\n          {children}\n\n          {withoutTimer ? (\n            <Button type=\"primary\" onClick={onContinue} autoFocus>\n              <Translate pt=\"Prosseguir\" en=\"Continue\" custom={buttonText} />\n            </Button>\n          ) : (\n            <TimedButton\n              duration={duration || durationPerRound}\n              type=\"text\"\n              onClick={onContinue}\n              onExpire={onContinue}\n              disabled={unskippable}\n              autoFocus\n            >\n              <Translate pt=\"Prosseguir\" en=\"Continue\" custom={buttonText} />\n            </TimedButton>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Utils\nimport { PUBLIC_URL } from 'utils/constants';\n// Components\nimport { useGameInfoContext } from 'components/session/GameInfoContext';\n\nfunction SingleCloud({ type }: { type: string; index?: number }) {\n  return (\n    <div\n      className=\"cloud-background__cloud\"\n      style={{\n        backgroundImage: `url('${PUBLIC_URL.CLOUDS}${type}.png')`,\n        backgroundPositionX: '0',\n      }}\n    ></div>\n  );\n}\n\nconst cloudData = [\n  {\n    backgroundPositionX: '0',\n  },\n  {\n    backgroundPositionX: '-300px',\n  },\n  {\n    backgroundPositionX: '-600px',\n  },\n  {\n    backgroundPositionX: '-900px',\n  },\n  {\n    backgroundPositionX: '-1200px',\n  },\n];\n\nfunction MultiCloud({ type, index }: { type: string; index: number }) {\n  return (\n    <div\n      className=\"cloud-background__cloud\"\n      style={{\n        backgroundImage: `url('${PUBLIC_URL.CLOUDS}${type}.png')`,\n        ...cloudData[index],\n      }}\n    ></div>\n  );\n}\n\nfunction getCloudComponent(type: string) {\n  if (type) {\n    const plural = type.split('-cloud')?.[1];\n\n    if (plural === 's') {\n      return MultiCloud;\n    }\n  }\n  return SingleCloud;\n}\n\nexport function CloudBackground() {\n  const gameInfo = useGameInfoContext();\n  const cloudType = gameInfo?.appearance?.clouds ?? 'cloud';\n  const backgroundColor = gameInfo?.appearance?.backgroundColor;\n\n  const CloudTypeComponent = getCloudComponent(cloudType);\n\n  const baseClass = 'cloud-background';\n\n  return (\n    <div\n      className={clsx(baseClass, `${baseClass}--${cloudType}`)}\n      style={backgroundColor ? { backgroundColor } : {}}\n    >\n      <div className=\"cloud-background__animation-0\">\n        <CloudTypeComponent index={0} type={cloudType} />\n      </div>\n\n      <div className=\"cloud-background__animation-1\">\n        <CloudTypeComponent index={1} type={cloudType} />\n      </div>\n\n      <div className=\"cloud-background__animation-2\">\n        <CloudTypeComponent index={2} type={cloudType} />\n      </div>\n\n      <div className=\"cloud-background__animation-3\">\n        <CloudTypeComponent index={3} type={cloudType} />\n      </div>\n\n      <div className=\"cloud-background__animation-4\">\n        <CloudTypeComponent index={4} type={cloudType} />\n      </div>\n    </div>\n  );\n}\n","import { useMutation } from '@tanstack/react-query';\nimport { motion } from 'framer-motion';\nimport { useEffect, useState } from 'react';\n// Ant Design Resources\nimport { Alert, Button, Divider, Modal, Typography } from 'antd';\n// Hooks\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\nimport type { UseStep } from 'hooks/useStep';\n// Services\nimport { signInAsGuest } from 'services/firebase';\n// Components\nimport { SignIn, SignInWithGoogle } from 'components/auth/SignIn';\nimport { SignUp } from 'components/auth/SignUp';\nimport { Translate } from 'components/language';\n\nconst Title = motion(Typography.Title);\n\ntype StepJoinProps = {\n  setStep: UseStep['setStep'];\n};\n\nexport function StepJoin({ setStep }: StepJoinProps) {\n  const { isAuthenticated } = useCurrentUserContext();\n\n  const { isPending, mutate, isError, error } = useMutation({\n    mutationKey: ['sign-in-anon'],\n    mutationFn: async () => signInAsGuest(),\n    onSuccess: () => setStep(1),\n  });\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      setStep(1);\n    }\n  }, [isAuthenticated, setStep]);\n\n  return (\n    <>\n      <Title level={2} className=\"lobby-step__title\" layoutId=\"lobby-step-title\">\n        <Translate pt=\"Bem-vindo!\" en=\"Welcome\" />\n      </Title>\n\n      <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n        <SignInWithGoogle onSuccess={() => setStep(1)} block size=\"large\" />\n\n        {isError && <Alert message=\"Error\" description={JSON.stringify(error)} type=\"error\" showIcon />}\n\n        <Divider>\n          <Translate pt=\"ou\" en=\"or\" />\n        </Divider>\n\n        <Button type=\"primary\" block disabled={isAuthenticated} onClick={() => mutate()} loading={isPending}>\n          <Translate pt=\"Entrar como visitante\" en=\"Join as a Guest\" />\n        </Button>\n      </motion.div>\n    </>\n  );\n}\n\ntype LoginButtonProps = {\n  disabled: boolean;\n  setStep: UseStep['setStep'];\n};\n\nexport function LoginButton({ disabled, setStep }: LoginButtonProps) {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <div>\n      <Modal\n        open={open}\n        title={<Translate pt=\"Logar\" en=\"LogIn\" />}\n        cancelText={<Translate pt=\"Cancelar\" en=\"Cancel\" />}\n        onCancel={() => setOpen(false)}\n        okButtonProps={{\n          style: { display: 'none' },\n        }}\n      >\n        <SignIn onSuccess={() => setStep(1)} />\n      </Modal>\n      <Button type=\"link\" block disabled={disabled} onClick={() => setOpen(true)}>\n        <Translate pt=\"Fazer Login\" en=\"Login\" />\n      </Button>\n    </div>\n  );\n}\n\ntype SignUpButtonProps = {\n  disabled: boolean;\n  setStep: UseStep['setStep'];\n};\n\nexport function SignUpButton({ disabled, setStep }: SignUpButtonProps) {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <div>\n      <Modal\n        open={open}\n        title={<Translate pt=\"Cadastro\" en=\"Sign Up Form\" />}\n        cancelText={<Translate pt=\"Cancelar\" en=\"Cancel\" />}\n        onCancel={() => setOpen(false)}\n        okButtonProps={{\n          style: { display: 'none' },\n        }}\n      >\n        <SignUp onSuccess={() => setStep(1)} />\n      </Modal>\n      <Button type=\"link\" block disabled={disabled} onClick={() => setOpen(true)}>\n        <Translate pt=\"Cadastrar\" en=\"Sign up\" />\n      </Button>\n    </div>\n  );\n}\n","// Types\nimport type { GamePlayer, GamePlayers } from 'types/player';\n// Utils\nimport { AVAILABLE_AVATAR_IDS } from 'utils/avatars';\nimport { getRandomItem } from 'utils/helpers';\n\n/**\n * Random names used during Dev\n */\nconst DEV_NAMES: string[] =\n  'Abe,Bob,Cam,Dan,Eva,Fin,Gus,Hal,Ian,Jan,Kim,Leo,Max,Nic,Oli,Pat,Quinn,Roy,Sam,Tim,Una,Vic,Will,Xavier,Yara,Zoe'.split(\n    ',',\n  );\n\nconst cacheNames: BooleanDictionary = {};\nconst cacheAvatars: BooleanDictionary = {};\n\nlet cacheMockedPlayers: GamePlayers = {};\n\n/**\n * Gets a random unique item from list based on the cached dictionary or used dictionary\n * @param source\n * @param used\n * @param cache\n * @returns\n */\nconst getRandomUniqueItemFromList = (\n  source: string[],\n  used: string[] = [],\n  cache: BooleanDictionary = {},\n) => {\n  let randomItem = '';\n  let tries = 0;\n  while (!randomItem || cache[randomItem] || used?.includes(randomItem) || tries < 50) {\n    randomItem = getRandomItem(source);\n    tries += 1;\n  }\n  cache[randomItem] = true;\n  return randomItem;\n};\n\n/**\n * Get random user name\n * @param used\n * @returns\n */\nexport function mockPlayerName(used?: string[]): string {\n  return getRandomUniqueItemFromList(DEV_NAMES, used, cacheNames);\n}\n\n/**\n * Mock players to be used during dev\n * @param players\n * @param quantity\n * @param properties\n * @returns\n */\nexport function mockPlayers(\n  players: GamePlayers,\n  quantity = 10,\n  properties: PlainObject | GenericFunction = {},\n): GamePlayers {\n  if (Object.keys(cacheMockedPlayers).length === quantity) {\n    return {\n      ...cacheMockedPlayers,\n      ...players,\n    };\n  }\n\n  const usedNames: BooleanDictionary = {};\n  const usedAvatars: BooleanDictionary = {};\n  Object.values(players).forEach((player) => {\n    usedNames[player.name] = true;\n    usedAvatars[player.avatarId] = true;\n  });\n\n  const neededQuantity = quantity - Object.keys(players).length;\n\n  const mockedPlayers: GamePlayer[] = Array(neededQuantity)\n    .fill(0)\n    .map((e, i) => {\n      const name = mockPlayerName(Object.keys(usedNames));\n\n      return {\n        id: `_${name.toLowerCase()}`,\n        name: `${name}`,\n        avatarId: getRandomUniqueItemFromList(AVAILABLE_AVATAR_IDS, Object.keys(usedAvatars), cacheAvatars),\n        updatedAt: Date.now(),\n        ready: true,\n        ...(typeof properties === 'function' ? properties(i) : properties),\n      };\n    });\n\n  const newMockedPlayers: GamePlayers = {\n    ...mockedPlayers.reduce((acc: GamePlayers, player) => {\n      acc[player.id] = player;\n      return acc;\n    }, {}),\n    ...players,\n  };\n\n  cacheMockedPlayers = newMockedPlayers;\n  return cacheMockedPlayers;\n}\n","import clsx from 'clsx';\nimport { motion } from 'framer-motion';\nimport { useMemo } from 'react';\nimport { useToggle } from 'react-use';\n// Ant Design Resources\nimport { Button, Popover, Tooltip } from 'antd';\n// Types\nimport type { GamePlayers } from 'types/player';\n// Utils\nimport { AVAILABLE_AVATAR_IDS, AVATARS } from 'utils/avatars';\n// Components\nimport { TransparentButton } from 'components/buttons';\nimport { DualTranslate, Translate } from 'components/language';\n// Images\nimport avatars from 'assets/images/avatars.svg';\ntype AvatarSelectionProps = {\n  players: GamePlayers;\n  selectedAvatar: string;\n  setSelectedAvatar: GenericFunction;\n  userId: PlayerId;\n};\n\nexport function AvatarSelection({\n  players,\n  setSelectedAvatar,\n  selectedAvatar,\n  userId,\n}: AvatarSelectionProps) {\n  const [open, setOpen] = useToggle(false);\n\n  return (\n    <>\n      <div className=\"lobby-step__avatar-selection\">\n        <Popover\n          arrow\n          placement=\"right\"\n          content={\n            <AvatarOptions\n              players={players}\n              setSelectedAvatar={setSelectedAvatar}\n              selectedAvatar={selectedAvatar}\n              userId={userId}\n            />\n          }\n          title={<Translate pt=\"Escolha seu avatar\" en=\"Choose your avatar\" />}\n          trigger=\"click\"\n          open={open}\n          onOpenChange={setOpen}\n        >\n          <motion.svg viewBox=\"0 0 100 100\" className=\"lobby-avatar\" layoutId=\"avatar\">\n            <use href={`${avatars}#avatar-${selectedAvatar}`}></use>\n            <title>\n              <DualTranslate>{AVATARS[selectedAvatar].description}</DualTranslate>\n            </title>\n          </motion.svg>\n        </Popover>\n      </div>\n      <div className=\"lobby-step__description\">\n        <small>\n          <DualTranslate>{AVATARS[selectedAvatar].description}</DualTranslate>\n        </small>\n      </div>\n      <Button type=\"link\" onClick={setOpen} block>\n        <Translate pt=\"Trocar avatar\" en=\"Change avatar\" />\n      </Button>\n    </>\n  );\n}\n\nfunction AvatarOptions({ players, setSelectedAvatar, selectedAvatar, userId }: AvatarSelectionProps) {\n  const usedAvatars = useMemo(() => {\n    return Object.values(players).reduce((acc: StringDictionary, { name, avatarId, id }) => {\n      if (id !== userId) {\n        acc[avatarId] = name;\n      }\n      return acc;\n    }, {});\n  }, [players, userId]);\n\n  return (\n    <div className=\"avatar-selection-options\">\n      {AVAILABLE_AVATAR_IDS.map((avatarId) => {\n        const avatar = AVATARS[avatarId];\n        const isUsed = !!usedAvatars[avatarId];\n\n        return (\n          <Tooltip\n            key={avatarId}\n            title={\n              isUsed ? (\n                <Translate\n                  pt={`Usado por ${usedAvatars[avatarId]}`}\n                  en={`Used by ${usedAvatars[avatarId]}`}\n                />\n              ) : (\n                <DualTranslate>{avatar.description}</DualTranslate>\n              )\n            }\n          >\n            <TransparentButton\n              onClick={() => setSelectedAvatar(avatarId)}\n              disabled={isUsed}\n              className={clsx(\n                'avatar-selection-options__avatar',\n                avatarId === selectedAvatar && 'avatar-selection-options__avatar--selected',\n                isUsed && 'avatar-selection-options__avatar--used',\n              )}\n            >\n              <svg viewBox=\"0 0 100 100\" className=\"avatar-selection-options__avatar-svg\">\n                <use href={`${avatars}#avatar-${avatarId}`}></use>\n                <title>\n                  <DualTranslate>{avatar.description}</DualTranslate>\n                </title>\n              </svg>\n            </TransparentButton>\n          </Tooltip>\n        );\n      })}\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport { Button, Divider, Space, Switch, Tooltip } from 'antd';\n// Hooks\nimport { useGlobalLocalStorage } from 'hooks/useGlobalLocalStorage';\n// Components\nimport { Translate } from 'components/language';\n\ntype SettingsProps = {\n  hasImages: boolean;\n};\n\nexport function Settings({ hasImages }: SettingsProps) {\n  const [blurEnabled, setBlurEnabled] = useGlobalLocalStorage('blurEnabled');\n  const [volume, setVolume] = useGlobalLocalStorage('volume');\n\n  const onBlurSwitchClick = (value: boolean) => {\n    setBlurEnabled(value);\n  };\n\n  const onSoundSwitchClick = (value: boolean) => {\n    setVolume(value ? 0.5 : 0);\n  };\n\n  return (\n    <Space className=\"lobby-step__settings\" split={<Divider type=\"vertical\" />}>\n      <div className=\"lobby-step__settings-entry\">\n        <div className=\"lobby-step__switch-label\">\n          <Translate pt=\"Som\" en=\"Sound\" />\n          <Tooltip\n            title={\n              <Translate\n                pt=\"Alguns jogos tocam sons ou falas. Você pode mudar essa configuração durante o jogo.\"\n                en=\"A few games will play sound effects or speech. You may change this setting during the game.\"\n              />\n            }\n          >\n            <Button type=\"text\" shape=\"circle\" icon={<InfoCircleOutlined />} size=\"small\" />\n          </Tooltip>\n        </div>\n\n        <Switch\n          checkedChildren=\"on\"\n          unCheckedChildren=\"off\"\n          checked={volume > 0}\n          onClick={onSoundSwitchClick}\n        />\n      </div>\n\n      <div className=\"lobby-step__settings-entry\">\n        <div className=\"lobby-step__switch-label\">\n          <Translate pt=\"Efeitos\" en=\"Effects\" />\n          <Tooltip\n            title={\n              <Translate\n                pt=\"Alguns jogos tocam sons ou falas. Você pode mudar essa configuração durante o jogo.\"\n                en=\"A few games will play sound effects or speech. You may change this setting during the game.\"\n              />\n            }\n          >\n            <Button type=\"text\" shape=\"circle\" icon={<InfoCircleOutlined />} size=\"small\" />\n          </Tooltip>\n        </div>\n\n        <Switch checkedChildren=\"on\" unCheckedChildren=\"off\" disabled />\n      </div>\n\n      <div className=\"lobby-step__settings-entry\">\n        <div className=\"lobby-step__switch-label\">\n          <Translate pt=\"Credo\" en=\"Blur Button\" />\n          <Tooltip\n            title={\n              <Translate\n                pt=\"Adiciona um botão em todas Cartas-imagem para embaça-las caso você tenha alguma fobia. Você pode mudar essa configuração durante o jogo\"\n                en=\"Adds a button to every Image Card to blur them in case you have any phobia. You may change this setting during the game\"\n              />\n            }\n          >\n            <Button type=\"text\" shape=\"circle\" icon={<InfoCircleOutlined />} size=\"small\" />\n          </Tooltip>\n        </div>\n\n        <Switch\n          checkedChildren=\"on\"\n          unCheckedChildren=\"off\"\n          checked={blurEnabled}\n          onClick={onBlurSwitchClick}\n          disabled={!hasImages}\n        />\n      </div>\n    </Space>\n  );\n}\n","// Utils\nimport { AVATARS } from 'utils/avatars';\n// Components\nimport { TransparentButton } from 'components/buttons';\nimport { DualTranslate, Translate } from 'components/language';\n// Images\nimport avatars from 'assets/images/avatars.svg';\n\ntype UsualAvatarsSelectionProps = {\n  setSelectedAvatar: GenericFunction;\n  avatarsIds: string[];\n};\n\nexport function UsualAvatarsSelection({ avatarsIds, setSelectedAvatar }: UsualAvatarsSelectionProps) {\n  return (\n    <div className=\"lobby-usual-avatar-selection\">\n      <div className=\"lobby-usual-avatar-selection__title\">\n        <small>\n          <Translate pt=\"Seus avatars mais usados\" en=\"Frequently used avatars\" />\n        </small>\n      </div>\n      <ul className=\"lobby-usual-avatar-selection__list\">\n        {avatarsIds.map((avatarId) => (\n          <TransparentButton key={avatarId} onClick={() => setSelectedAvatar(avatarId)}>\n            <svg viewBox=\"0 0 100 100\" className=\"lobby-usual-avatar-selection__avatar\">\n              <use href={`${avatars}#avatar-${avatarId}`}></use>\n              <title>\n                <DualTranslate>{AVATARS[avatarId].description}</DualTranslate>\n              </title>\n            </svg>\n          </TransparentButton>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import { motion } from 'framer-motion';\nimport { mockPlayerName } from 'mock/players';\nimport { useEffect, useState } from 'react';\nimport { useLocalStorage } from 'react-use';\n// Ant Design Resources\nimport { Alert, AutoComplete, Button, Typography } from 'antd';\n// Types\nimport type { GamePlayers } from 'types/player';\n// Hooks\nimport { useAddPlayer } from 'hooks/useAddPlayer';\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\nimport { useLanguage } from 'hooks/useLanguage';\nimport type { UseStep } from 'hooks/useStep';\n// Utils\nimport { AVAILABLE_AVATAR_IDS } from 'utils/avatars';\nimport { getRandomItem, isDevEnv } from 'utils/helpers';\n// Components\nimport { Translate } from 'components/language';\nimport { useGameInfoContext } from 'components/session/GameInfoContext';\n// Internal\nimport { AvatarSelection } from './AvatarSelection';\nimport { Settings } from './Settings';\nimport { UsualAvatarsSelection } from './UsualAvatarsSelection';\n\nconst Title = motion(Typography.Title);\n\nconst randomName = isDevEnv ? mockPlayerName() : undefined;\n\ntype StepInfoProps = {\n  players: GamePlayers;\n  setStep: UseStep['setStep'];\n};\n\nexport function StepInfo({ players, setStep }: StepInfoProps) {\n  const { currentUser, isGuest } = useCurrentUserContext();\n  const info = useGameInfoContext();\n  const { translate } = useLanguage();\n  const [selectedAvatar, setSelectedAvatar] = useState(\n    currentUser?.avatars?.[0] ?? getRandomItem(AVAILABLE_AVATAR_IDS),\n  );\n\n  const [name, setName] = useState((currentUser?.names ?? []).at(-1) ?? '');\n  const [lsAvatarId] = useLocalStorage('username', '');\n  const [lsUsername] = useLocalStorage('avatarId', '');\n\n  // Load username and avatar from localStorage if any\n  // biome-ignore lint/correctness/useExhaustiveDependencies: This is only necessary if the account is a for a guest\n  useEffect(() => {\n    if (isGuest) {\n      if (lsAvatarId) {\n        setSelectedAvatar(lsAvatarId);\n      }\n\n      if (lsUsername) {\n        setName(lsUsername ?? '');\n      }\n    }\n  }, [isGuest]);\n\n  const { isPending, mutate } = useAddPlayer(name, selectedAvatar, isGuest, () => setStep(2));\n\n  const hasPlayedBefore = Boolean(currentUser.games?.[info.gameName]);\n\n  const nameOptions = (currentUser?.names ?? []).map((name) => ({\n    value: name,\n  }));\n\n  return (\n    <>\n      <Title level={2} className=\"lobby-step__title\" layoutId=\"lobby-step-title\">\n        <Translate pt=\"Adicione seus dados\" en=\"Add your info\" />\n      </Title>\n\n      {hasPlayedBefore && (\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n          <Alert\n            type=\"info\"\n            message={<Translate pt=\"Você jogou esse jogo anteriormente\" en=\"You played this game before\" />}\n            className=\"margin\"\n          />\n        </motion.div>\n      )}\n\n      <AvatarSelection\n        players={players}\n        setSelectedAvatar={setSelectedAvatar}\n        selectedAvatar={selectedAvatar}\n        userId={currentUser.id}\n      />\n\n      <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n        {currentUser?.avatars.length > 0 && (\n          <UsualAvatarsSelection avatarsIds={currentUser.avatars} setSelectedAvatar={setSelectedAvatar} />\n        )}\n\n        <AutoComplete\n          className=\"lobby-step__name-input\"\n          options={nameOptions}\n          onChange={(value) => setName(value.trim())}\n          onSelect={(value) => setName(value.trim())}\n          placeholder={translate('Digite seu nome', 'Type your name')}\n          maxLength={10}\n          value={name || randomName}\n        />\n\n        <Settings hasImages={info.tags.includes('images')} />\n\n        <Button\n          block\n          loading={isPending}\n          disabled={!name || !selectedAvatar}\n          type=\"primary\"\n          onClick={() => mutate()}\n        >\n          <Translate pt=\"Entrar\" en=\"Enter\" />\n        </Button>\n      </motion.div>\n    </>\n  );\n}\n","import { useMutation } from '@tanstack/react-query';\n// Ant Design Resources\nimport { App } from 'antd';\n// Services\nimport { GAME_API, GAME_API_COMMON_ACTIONS } from 'services/adapters';\n// Utils\nimport { getRandomWelcomeMessage, speak } from 'utils/speech';\n// Internal\nimport { useGameMeta } from './useGameMeta';\nimport { useGlobalState } from './useGlobalState';\nimport { useLanguage } from './useLanguage';\nimport { getKey, useGlobalLocalStorage } from './useGlobalLocalStorage';\n\nexport function useAddPlayer(name: string, avatarId: string, isGuest: boolean, onSuccess: GenericFunction) {\n  const { gameId, gameName } = useGameMeta();\n  const [, setUserId] = useGlobalState('userId');\n  const [, setUsername] = useGlobalState('username');\n  const [, setUserAvatarId] = useGlobalState('userAvatarId');\n  const [volume] = useGlobalLocalStorage('volume');\n  const { language, translate } = useLanguage();\n  const { notification } = App.useApp();\n\n  const query = useMutation({\n    mutationKey: ['add-player'],\n    mutationFn: async () =>\n      await GAME_API.run({\n        action: GAME_API_COMMON_ACTIONS.JOIN_GAME,\n        gameId,\n        gameName,\n        playerName: name,\n        playerAvatarId: avatarId,\n        isGuest,\n      }),\n    onSuccess: (response) => {\n      const data = response.data as PlainObject;\n      setUserId(data.id);\n      setUsername(data.name);\n      setUserAvatarId(data.avatarId);\n\n      localStorage.setItem(getKey('username'), data.name);\n      localStorage.setItem(getKey('avatarId'), data.avatarId);\n      localStorage.setItem(getKey('gameId'), gameId);\n\n      if (volume) {\n        speak(getRandomWelcomeMessage(name ?? translate('vei', 'babe')), language, volume);\n      }\n\n      onSuccess();\n    },\n    onError: (e: Error) => {\n      notification.error({\n        message: translate(\n          'Vixi, o aplicativo encontrou um erro ao tentar te adicionar como jogador',\n          'Oops, the application failed when trying to add you as a player',\n        ),\n        description: JSON.stringify(e.message),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n    },\n  });\n\n  return query;\n}\n","import { useMutation } from '@tanstack/react-query';\nimport { motion } from 'framer-motion';\nimport { useEffect } from 'react';\n// Ant Design Resources\nimport { App, Space, Typography } from 'antd';\n// Types\nimport type { GamePlayers } from 'types/player';\n// Hooks\nimport { useGameMeta } from 'hooks/useGameMeta';\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\n// Services\nimport { HOST_API, HOST_API_ACTIONS } from 'services/adapters';\n// Utils\nimport { AVATARS } from 'utils/avatars';\n// Components\nimport { HostButton, HostOnlyContainer } from 'components/host';\nimport { DualTranslate, Translate } from 'components/language';\n// Images\nimport avatars from 'assets/images/avatars.svg';\n\nconst Title = motion(Typography.Title);\nconst Paragraph = motion(Typography.Paragraph);\n\ntype StepWaitingProps = {\n  players: GamePlayers;\n};\n\nexport function StepWaiting({ players }: StepWaitingProps) {\n  const { message, notification } = App.useApp();\n  const { gameId, gameName } = useGameMeta();\n  const { translate } = useLanguage();\n  const { isLoading, setLoader } = useLoading();\n\n  const gameMeta = useGameMeta();\n\n  const [username] = useGlobalState('username');\n  const [userAvatarId] = useGlobalState('userAvatarId');\n\n  const { mutate, isPending: isLocking } = useMutation({\n    mutationKey: ['lock-game'],\n    mutationFn: async () => {\n      setLoader('lock-game', true);\n      return await HOST_API.run({\n        action: HOST_API_ACTIONS.LOCK_GAME,\n        gameId,\n        gameName,\n      });\n    },\n    onSuccess: (response) => {\n      const data = response.data as PlainObject;\n\n      if (data.isLocked) {\n        message.success(\n          translate('Jogo trancado e iniciado com sucesso!', 'Game locked and initialized successfully'),\n        );\n      }\n    },\n    onError: (e: Error) => {\n      notification.error({\n        message: translate(\n          'Vixi, o aplicativo encontrou um erro ao tentar trancar e iniciar o jogo',\n          'Oops, the application found an error while trying to lock and start the game',\n        ),\n        description: JSON.stringify(e.message),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n    },\n    onSettled: () => {\n      setLoader('lock-game', false);\n    },\n  });\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: <explanation>\n  useEffect(() => {\n    setLoader('lock-game', isLocking);\n\n    return () => {\n      setLoader('lock-game', false);\n    };\n  }, [isLocking]);\n\n  const numPlayers = Object.keys(players).length;\n\n  return (\n    <>\n      <Title level={2} className=\"lobby-step__title\" layoutId=\"lobby-step-title\">\n        <Translate pt=\"Pronto!\" en=\"Ready!\" />\n      </Title>\n\n      <Space className=\"space-container\" direction=\"vertical\">\n        <motion.svg viewBox=\"0 0 100 100\" className=\"lobby-avatar\" layoutId=\"avatar\">\n          <use href={`${avatars}#avatar-${userAvatarId}`}></use>\n        </motion.svg>\n\n        <div className=\"lobby-step__description\">\n          <small>\n            {username || translate('Fulano', 'Unknown')},{' '}\n            <DualTranslate>{AVATARS[userAvatarId].description}</DualTranslate>\n          </small>\n        </div>\n      </Space>\n\n      <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n        <Paragraph className=\"lobby-heading\">\n          <Translate\n            pt=\"Aguarde os outros jogadores entrarem.\"\n            en=\"Please, wait while other players join...\"\n          />\n        </Paragraph>\n        <HostOnlyContainer className=\"lobby-waiting__lock-button\" direction=\"vertical\">\n          <Typography.Text className=\"center padding\">\n            <Translate pt=\"Jogadores necessários\" en=\"Players needed\" />: {numPlayers}/{gameMeta.min}\n          </Typography.Text>\n          <HostButton\n            onClick={() => mutate()}\n            disabled={isLoading || numPlayers < gameMeta.min}\n            loading={isLoading}\n            block\n          >\n            <Translate pt=\"Trancar e Iniciar Jogo\" en=\"Lock and Start Game\" />\n          </HostButton>\n        </HostOnlyContainer>\n      </motion.div>\n    </>\n  );\n}\n","import clsx from 'clsx';\nimport { motion } from 'framer-motion';\nimport { orderBy, sample } from 'lodash';\nimport { useMemo } from 'react';\n// Types\nimport type { GamePlayers } from 'types/player';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\n\ntype JoinedPlayersProps = {\n  players: GamePlayers;\n  orientation: 'horizontal' | 'vertical';\n};\n\nexport function JoinedPlayers({ players, orientation }: JoinedPlayersProps) {\n  const orderedPlayers = useMemo(\n    () => orderBy(Object.values(players), ['updatedAt', 'name'], ['asc']),\n    [players],\n  );\n\n  return (\n    <div className={clsx('joined-players', orientation === 'horizontal' && 'joined-players--horizontal')}>\n      {orderedPlayers.map((player, index) => (\n        <motion.div\n          key={player.id}\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ duration: 1, delay: index * 0.25 }}\n        >\n          <motion.div\n            layoutId={`player-${player.id}`}\n            className=\"joined-players__player\"\n            animate={{\n              y: [0, 5, 0], // Y-axis movement\n              filter: [\n                'drop-shadow(0px 10px 4px rgba(0, 0, 0, 0.1))',\n                'drop-shadow(0px 20px 4px rgba(0, 0, 0, 0.05))',\n                'drop-shadow(0px 10px 4px rgba(0, 0, 0, 0.1))',\n              ],\n              transition: {\n                duration: sample([6, 6.2, 7, 7.5, 8]), // Total time for one cycle\n                ease: 'easeInOut',\n                repeat: Number.POSITIVE_INFINITY,\n              },\n            }}\n          >\n            <Avatar id={player?.avatarId} size=\"large\" />\n            <div className=\"joined-players__avatar-name\">\n              <Translate pt=\"Fulano\" en=\"John Doe\" custom={player?.name} />\n            </div>\n          </motion.div>\n        </motion.div>\n      ))}\n    </div>\n  );\n}\n","import { motion } from 'framer-motion';\n// Ant Design Resources\nimport { Image, Space, Typography } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { PUBLIC_URL } from 'utils/constants';\n// Components\nimport { Translate } from 'components/language';\nimport { useGameInfoContext } from 'components/session/GameInfoContext';\n\nexport function LobbyRules() {\n  const info = useGameInfoContext();\n  const { language } = useLanguage();\n  return (\n    <motion.div\n      className=\"lobby-step__rules\"\n      initial={{ opacity: 0, width: 0 }}\n      animate={{ opacity: 1, width: 'auto' }}\n      exit={{ opacity: 0 }}\n      transition={{ delay: 0.25 }}\n    >\n      <Typography.Title level={4} style={{ marginTop: 0 }}>\n        <Translate pt=\"Revise as regras\" en=\"Review the rules\" />\n      </Typography.Title>\n      <Image.PreviewGroup\n        fallback={`${PUBLIC_URL.RULES}no-rules.jpg`}\n        preview={{\n          countRender: (current, total) => (\n            <Space direction=\"vertical\" size=\"small\" className=\"text-center\">\n              <span>{info.rules[language][current]}</span>\n              <span>\n                {current}/{total}\n              </span>\n            </Space>\n          ),\n        }}\n      >\n        <ul className=\"lobby-step__rule-list\">\n          {info.rules[language].map((rule, index) => (\n            <li key={rule} className=\"lobby-step__rule\">\n              {index > 0 && (\n                <Image\n                  src={`${PUBLIC_URL.RULES}game-rule-${info.gameName}-${index}.jpg`}\n                  width={96}\n                  className=\"border-radius\"\n                  fallback={`${PUBLIC_URL.RULES}no-rules.jpg`}\n                />\n              )}\n              <Typography.Paragraph style={{ marginBottom: 0 }}>{rule}</Typography.Paragraph>\n            </li>\n          ))}\n        </ul>\n      </Image.PreviewGroup>\n    </motion.div>\n  );\n}\n","import { AnimatePresence, motion } from 'framer-motion';\nimport { useEffect } from 'react';\nimport { useLocalStorage } from 'react-use';\n// Ant Design Resources\nimport { Alert, Typography } from 'antd';\n// Types\nimport type { GameMeta } from 'types/game';\nimport type { GamePlayers } from 'types/player';\n// Hooks\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\nimport { resetGlobalState, useGlobalState } from 'hooks/useGlobalState';\nimport { useStep } from 'hooks/useStep';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { AdminMenuDrawer } from 'components/admin';\nimport { GameStrip } from 'components/general/GameBanner';\nimport { DualTranslate, Translate } from 'components/language';\nimport { PhaseContainer } from 'components/phases';\nimport { useGameInfoContext } from 'components/session/GameInfoContext';\n// Internal\nimport { CloudBackground } from './lobby/CloudBackground';\nimport { StepJoin } from './lobby/StepJoin';\nimport { StepInfo } from './lobby/StepInfo';\nimport { StepWaiting } from './lobby/StepWaiting';\nimport { JoinedPlayers } from './lobby/JoinedPlayers';\nimport { LobbyRules } from './lobby/LobbyRules';\n// Sass\nimport './PhaseLobby.scss';\n\nconst Paragraph = motion(Typography.Paragraph);\n\ntype PhaseLobbyProps = {\n  players: GamePlayers;\n  meta: GameMeta;\n};\n\nexport function PhaseLobby({ players, meta }: PhaseLobbyProps) {\n  const { step, setStep } = useStep();\n  const { currentUser, isAuthenticated } = useCurrentUserContext();\n  const [, setUserId] = useGlobalState('userId');\n  const [, setUsername] = useGlobalState('username');\n  const [, setUserAvatarId] = useGlobalState('userAvatarId');\n  const [localUsername] = useLocalStorage('username', '');\n  const [localAvatarId] = useLocalStorage('avatarId', '');\n  const info = useGameInfoContext();\n\n  const player = players?.[currentUser.id];\n\n  useEffect(() => {\n    if (player) {\n      setStep(2);\n      setUserId(player.id);\n      setUsername(player.name);\n      setUserAvatarId(player.avatarId);\n    } else if (isAuthenticated) {\n      setStep(1);\n      resetGlobalState();\n    } else {\n      setStep(0);\n      setUsername(localUsername ?? '');\n      setUserAvatarId(localAvatarId ?? '');\n    }\n  }, [\n    player,\n    setStep,\n    setUserId,\n    setUsername,\n    setUserAvatarId,\n    isAuthenticated,\n    localUsername,\n    localAvatarId,\n  ]);\n\n  return (\n    <PhaseContainer phase=\"LOBBY\" allowedPhase={PHASES.DEFAULT.LOBBY} className=\"lobby\">\n      <AnimatePresence>\n        <motion.div className=\"lobby-step\" layout>\n          <motion.div className=\"lobby-step__card\">\n            <GameStrip\n              width={340}\n              title={info?.title}\n              gameName={info?.gameName}\n              className=\"lobby-step__banner\"\n            />\n            <div className=\"lobby-step__content\">\n              <Paragraph className=\"lobby-step__summary\" layoutId=\"lobby-step-summary\">\n                <DualTranslate>{info.summary}</DualTranslate>\n              </Paragraph>\n\n              {meta.isLocked ? (\n                <>\n                  <Typography.Title className=\"lobby-step__title\">\n                    <Translate pt=\"Esse jogo está trancado\" en=\"This session is locked\" />\n                  </Typography.Title>\n\n                  <Alert\n                    type=\"warning\"\n                    showIcon\n                    message={\n                      <Translate\n                        pt=\"O jogo já foi iniciado e novos jogadores não podem ser adicionados\"\n                        en=\"The game has started and new players cannot be added at this time\"\n                      />\n                    }\n                  />\n                </>\n              ) : (\n                <>\n                  {step === 0 && <StepJoin setStep={setStep} />}\n                  {step === 1 && <StepInfo players={players} setStep={setStep} />}\n                  {step === 2 && <StepWaiting players={players} />}\n                </>\n              )}\n            </div>\n          </motion.div>\n          <div className=\"lobby-step__waiting\">\n            {step === 2 && <LobbyRules />}\n\n            <JoinedPlayers players={players} orientation={step === 1 ? 'vertical' : 'horizontal'} />\n          </div>\n        </motion.div>\n\n        <AdminMenuDrawer\n          state={{\n            phase: 'LOBBY',\n            round: { current: 0, total: 0, forceLastRound: false },\n            players: {},\n          }}\n          players={players}\n        />\n        <CloudBackground />\n      </AnimatePresence>\n    </PhaseContainer>\n  );\n}\n","// Types\nimport type { GameState } from 'types/game';\n// Internal\nimport { PhaseContainer } from './index';\n\ntype PhasePlaceholderProps = {\n  state: GameState;\n};\n\nexport function PhasePlaceholder({ state }: PhasePlaceholderProps) {\n  return (\n    <PhaseContainer phase=\"ANY\" allowedPhase=\"ANY\" className=\"phase-placeholder\">\n      {state?.phase ?? 'Unknown Phase'}\n    </PhaseContainer>\n  );\n}\n","import { useQueryClient } from '@tanstack/react-query';\nimport { useEffect } from 'react';\n// Ant Design Resources\nimport { CheckCircleFilled, MehFilled, RobotFilled, SmileFilled } from '@ant-design/icons';\nimport { Button, Layout, Space } from 'antd';\n// Types\nimport type { GameInfo } from 'types/game-info';\nimport type { GamePlayers } from 'types/player';\n// Hooks\nimport { useGameActionRequest } from 'hooks/useGameActionRequest';\nimport { useGameId } from 'hooks/useGameId';\nimport { useGlobalLocalStorage } from 'hooks/useGlobalLocalStorage';\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\nimport { useUser } from 'hooks/useUser';\n// Services\nimport { GAME_API_COMMON_ACTIONS } from 'services/adapters';\n// Utils\nimport {\n  getRandomNegativeReadyMessage,\n  getRandomNeutralReadyMessage,\n  getRandomPositiveReadyMessage,\n  speak,\n} from 'utils/speech';\n// Components\nimport { Translate } from 'components/language';\nimport { LoadingPage } from 'components/loaders';\nimport { useGameInfoContext } from 'components/session/GameInfoContext';\nimport { Title } from 'components/text';\n// Internal\nimport { RulesCarousel } from '../rules';\nimport { AutoNextPhase } from '../general/AutoNextPhase';\nimport { useEffectOnce } from 'react-use';\n\ntype PhaseRulesProps = {\n  players: GamePlayers;\n  info: GameInfo;\n};\n\nexport function PhaseRules({ players }: PhaseRulesProps) {\n  const { isLoading } = useLoading();\n  const info = useGameInfoContext();\n  const { language, translate } = useLanguage();\n  const user = useUser(players);\n  const [volume] = useGlobalLocalStorage('volume');\n  const [, setIsAdminEnabled] = useGlobalState('isAdminEnabled');\n\n  useEffectOnce(() => {\n    setIsAdminEnabled(true);\n  });\n\n  const gameId = useGameId();\n  // TODO: check if this is working\n  const queryClient = useQueryClient();\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: only gameId is necessary\n  useEffect(() => {\n    queryClient.invalidateQueries({ queryKey: ['meta', gameId] });\n  }, [gameId]);\n\n  const errorMessage = translate(\n    'Vixi, o aplicativo encontrou um erro ao tentar continuar',\n    'Oh no! The application found an error when trying to continue',\n  );\n\n  const onBeReady = useGameActionRequest({\n    actionName: 'be-ready',\n    successMessage: translate(\n      'Pronto! Aguarde os outros jogadores estarem prontos',\n      'Done! Now wait for the other players',\n    ),\n    errorMessage,\n    onSuccess: () => {\n      speak(getRandomPositiveReadyMessage(user.name), language, volume);\n    },\n  });\n\n  const onBeReadyIDK = useGameActionRequest({\n    actionName: 'be-ready',\n    successMessage: translate(\n      'Pronto! Aguarde os outros jogadores estarem prontos',\n      'Done! Now wait for the other players',\n    ),\n    errorMessage,\n    onSuccess: () => {\n      speak(getRandomNeutralReadyMessage(user.name), language, volume);\n    },\n  });\n\n  const onBeReadyQue = useGameActionRequest({\n    actionName: 'be-ready',\n    successMessage: translate(\n      'Vixi, se fudeu então, porque o jogo vai começar!',\n      'Sorry, you are screwed because the game is starting anyway!',\n    ),\n    errorMessage,\n    onSuccess: () => {\n      speak(getRandomNegativeReadyMessage(user.name), language, volume);\n    },\n  });\n\n  // DEV: Auto-ready\n  useMock(() => onBeReady({ action: GAME_API_COMMON_ACTIONS.MAKE_ME_READY }), [], 2);\n\n  if (!info?.gameName) {\n    return <LoadingPage />;\n  }\n\n  return (\n    <Layout.Content className=\"phase-rules\">\n      <Title>\n        <Translate pt=\"Regras do Jogo\" en=\"Game Rules\" />\n      </Title>\n\n      <RulesCarousel\n        info={info}\n        className=\"phase-rules__carousel\"\n        ruleClassName=\"phase-rules__rule\"\n        actionsClassName=\"phase-rules__actions\"\n      />\n\n      <Space className=\"phase-rules__actions\" wrap>\n        <Button\n          type=\"primary\"\n          icon={user.isReady ? <CheckCircleFilled /> : <SmileFilled />}\n          disabled={isLoading || user.isReady}\n          onClick={() => onBeReady({ action: GAME_API_COMMON_ACTIONS.MAKE_ME_READY })}\n          loading={isLoading}\n        >\n          <Translate\n            pt=\"Entendi tudo e estou pronto para jogar!\"\n            en=\"I understood everything and I'm ready to play!\"\n          />\n        </Button>\n        <Button\n          icon={user.isReady ? <CheckCircleFilled /> : <MehFilled />}\n          disabled={isLoading || user.isReady}\n          onClick={() => onBeReadyIDK({ action: GAME_API_COMMON_ACTIONS.MAKE_ME_READY })}\n          loading={isLoading}\n        >\n          <Translate pt=\"Não entendi nada, mas vamos lá!\" en=\"I don't get it but let's go!\" />\n        </Button>\n        <Button\n          type=\"primary\"\n          danger\n          icon={user.isReady ? <CheckCircleFilled /> : <RobotFilled />}\n          disabled={isLoading || user.isReady}\n          onClick={() => onBeReadyQue({ action: GAME_API_COMMON_ACTIONS.MAKE_ME_READY })}\n          loading={isLoading}\n        >\n          <Translate pt=\"Quê?\" en=\"What?\" />\n        </Button>\n      </Space>\n\n      <AutoNextPhase players={players} />\n    </Layout.Content>\n  );\n}\n","// Types\nimport type { GameState } from 'types/game';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { AnimatedGearIcon } from 'icons/AnimatedGearIcon';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\n// Internal\nimport { PhaseContainer } from './PhaseContainer';\n\ntype PhaseSetupProps = {\n  state: GameState;\n};\n\nexport function PhaseSetup({ state }: PhaseSetupProps) {\n  return (\n    <PhaseContainer phase={state?.phase} allowedPhase={PHASES.DEFAULT.SETUP} className=\"setup\">\n      <div className=\"phase-announcement\">\n        <Title colorScheme=\"light\">\n          <Translate pt=\"Preparando o jogo...\" en=\"Setting up...\" />\n        </Title>\n\n        <AnimatedGearIcon className=\"phase-announcement__icon\" />\n\n        <Instruction>\n          <Translate pt=\"Aguarde um momento\" en=\"Just a moment\" />\n        </Instruction>\n      </div>\n    </PhaseContainer>\n  );\n}\n","import { useEffectOnce } from 'react-use';\n// Hooks\nimport type { UseStep } from 'hooks/useStep';\n\ntype PhaseTimerResetProps = {\n  goToNextStep: UseStep['goToNextStep'];\n};\n\n/**\n * Component to be place in between sequential PhaseAnnouncement to reset the automatic timer\n * @param props\n * @returns\n */\nexport function PhaseTimerReset({ goToNextStep }: PhaseTimerResetProps) {\n  useEffectOnce(() => {\n    const delay = () => new Promise((res) => setTimeout(res, 100));\n    const next = async () => {\n      await delay();\n      goToNextStep();\n    };\n\n    next();\n  });\n\n  return <div></div>;\n}\n","// Ant Design Resources\nimport { LikeFilled } from '@ant-design/icons';\nimport { Avatar as AntAvatar, Typography } from 'antd';\n// Types\nimport type { GamePlayers, GamePlayer } from 'types/player';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\n\ntype ReadyPlayersBarProps = {\n  players: GamePlayers;\n  readyText?: string;\n  readyTextPlural?: string;\n  hideNames?: boolean;\n};\n\nexport function ReadyPlayersBar({\n  players,\n  readyText,\n  readyTextPlural,\n  hideNames = false,\n}: ReadyPlayersBarProps) {\n  const { readyPlayers, notReadyPlayers }: { readyPlayers: GamePlayer[]; notReadyPlayers: string[] } =\n    Object.values(players).reduce(\n      (acc: any, player: GamePlayer) => {\n        if (player.ready) {\n          acc.readyPlayers.push(player);\n        } else {\n          acc.notReadyPlayers.push(player.name);\n        }\n        return acc;\n      },\n      {\n        readyPlayers: [],\n        notReadyPlayers: [],\n      },\n    );\n\n  if (readyPlayers.length === 0) {\n    return <span></span>;\n  }\n\n  return (\n    <div className=\"ready-player-bar\">\n      <div className=\"ready-player-bar__bar\">\n        <AntAvatar.Group size=\"small\">\n          {readyPlayers.map((player) => (\n            <Avatar key={player.name} id={player.avatarId} />\n          ))}\n        </AntAvatar.Group>\n        <span className=\"ready-player-bar__speech-bubble\">\n          <Typography.Text>\n            {readyPlayers.length > 1 ? (\n              <Translate pt=\"Estamos prontos!\" en=\"We're ready!\" custom={readyTextPlural} />\n            ) : (\n              <Translate pt=\"Estou pronto!\" en=\"I'm ready!\" custom={readyText} />\n            )}\n          </Typography.Text>\n          <LikeFilled className=\"ready-player-bar__speech-bubble-icon\" />\n        </span>\n      </div>\n      {!hideNames && notReadyPlayers.length > 0 && (\n        <span className=\"ready-player-bar__names\">\n          <Translate pt=\"Esperando\" en=\"Waiting for\" />: {notReadyPlayers.join(', ')}\n        </span>\n      )}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { Fragment, type ReactNode, useMemo } from 'react';\n// Ant Design Resources\nimport { ForwardFilled } from '@ant-design/icons';\n// Types\nimport type { GamePlayer, GamePlayers } from 'types/player';\n// Utils\nimport { getAvatarColorById } from 'utils/helpers';\n// Components\nimport { AvatarName } from 'components/avatars';\nimport { Translate } from 'components/language';\n// Internal\nimport { reorder } from './reorder';\n\ntype TurnOrderProps = {\n  /**\n   * Game players\n   */\n  players: GamePlayers;\n  /**\n   * The order array\n   */\n  order: PlayerId[];\n  /**\n   * The active player who should be highlighted\n   */\n  activePlayerId?: PlayerId;\n  /**\n   * Optional custom title\n   */\n  title?: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Reorder turn order so it starts with given player\n   */\n  reorderByUser?: PlayerId;\n  /**\n   *\n   */\n  additionalInfoParser?: (player: GamePlayer) => ReactNode;\n};\n\nexport function TurnOrder({\n  players,\n  order,\n  activePlayerId,\n  reorderByUser,\n  title,\n  className = '',\n  additionalInfoParser,\n}: TurnOrderProps) {\n  const orderList = useMemo(\n    () => (reorderByUser ? reorder(order, reorderByUser) : order),\n    [reorderByUser, order],\n  );\n\n  return (\n    <div className={clsx('turn-order', className)}>\n      <header className=\"turn-order__title\">\n        <Translate en=\"Player Order\" pt=\"Ordem dos Jogadores\" custom={title} />\n      </header>\n      <ol className=\"turn-order__players\">\n        {orderList.map((playerId, index) => {\n          const player = players[playerId];\n          const isActive = activePlayerId === playerId;\n          return (\n            <Fragment key={`turn-order-player-${playerId}`}>\n              <span\n                className={clsx('turn-order__player', isActive && 'turn-order__player--active')}\n                style={isActive ? { backgroundColor: getAvatarColorById(player.avatarId) } : undefined}\n              >\n                <AvatarName player={player} />\n                {!!additionalInfoParser && additionalInfoParser(player)}\n              </span>\n              {index < order.length - 1 && (\n                <span className=\"turn-order__arrow\">\n                  <ForwardFilled />\n                </span>\n              )}\n            </Fragment>\n          );\n        })}\n      </ol>\n    </div>\n  );\n}\n","import type { ReactNode } from 'react';\n// Types\nimport type { GamePlayers } from 'types/player';\n// Hooks\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Icons\nimport { WaitingRoomIcon } from 'icons/WaitingRoomIcon';\n// Components\nimport { Translate } from 'components/language';\nimport { ReadyPlayersBar } from 'components/players';\nimport { Instruction, Title } from 'components/text';\n// Sass\nimport './WaitingRoom.scss';\n\ntype WaitingRoomProps = {\n  /**\n   * The game players\n   */\n  players: GamePlayers;\n  /**\n   * Replacement title of the waiting room\n   */\n  title?: ReactNode;\n  /**\n   * Replacement instruction for the waiting room\n   */\n  instruction?: ReactNode;\n  /**\n   * Additional content of the waiting room\n   */\n  children?: ReactNode;\n  /**\n   * Icon the replaces the default Waiting Room icon\n   */\n  icon?: ReactNode;\n};\n\nexport function WaitingRoom({ players, title, instruction, children, icon }: WaitingRoomProps) {\n  useTemporarilyHidePlayersBar();\n\n  return (\n    <div className=\"waiting-room\">\n      <Title colorScheme=\"light\">\n        <Translate pt=\"Pronto!\" en=\"Done!\" custom={title} />\n      </Title>\n      {icon ?? <WaitingRoomIcon style={{ width: '6rem' }} />}\n      <div className=\"waiting-room__content\">\n        <Instruction>\n          {instruction ? (\n            instruction\n          ) : (\n            <Translate pt=\"Vamos aguardar os outros jogadores!\" en=\"Please wait for the other players!\" />\n          )}\n        </Instruction>\n        {children}\n      </div>\n      <ReadyPlayersBar players={players} />\n    </div>\n  );\n}\n","export function reorder(order: PlayerId[], startWith: PlayerId): PlayerId[] {\n  const starterIndex = order.indexOf(startWith);\n\n  return [...order.slice(starterIndex), ...order.slice(0, starterIndex)];\n}\n","import type { ReactNode } from 'react';\n// Ant Design Resources\nimport { Collapse, type CollapseProps } from 'antd';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n\ntype CollapsibleRuleProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * The title of the panel (default: Rules/Regras)\n   */\n  title?: ReactNode;\n};\nexport function CollapsibleRule({ children, title }: CollapsibleRuleProps) {\n  const panels: CollapseProps['items'] = [\n    {\n      key: '1',\n      label: <Translate pt=\"Regras\" en=\"Rules\" custom={title} />,\n      children: children,\n    },\n  ];\n\n  return (\n    <Instruction contained>\n      <Collapse ghost items={panels} />\n    </Instruction>\n  );\n}\n","import type { ReactNode } from 'react';\n// Ant Design Resources\nimport { ReadOutlined } from '@ant-design/icons';\n// Components\nimport { FixedMenuButton } from 'components/buttons';\nimport { Translate } from 'components/language';\n\ntype PopoverRuleProps = {\n  /**\n   * The rules themselves\n   */\n  content: ReactNode;\n  /**\n   * A custom label other than rules/regras\n   */\n  label?: ReactNode;\n  /**\n   * If label should be displayed\n   */\n  showLabel?: boolean;\n};\n\nexport function PopoverRule({ content, label, showLabel = false }: PopoverRuleProps) {\n  return (\n    <FixedMenuButton\n      type=\"popover\"\n      position={0}\n      icon={<ReadOutlined />}\n      content={content}\n      label={label || <Translate pt=\" Regras\" en=\" Rules\" />}\n      showLabel={showLabel}\n    />\n  );\n}\n","import type { CarouselRef } from 'antd/es/carousel';\nimport clsx from 'clsx';\nimport { createRef } from 'react';\nimport { useKeyPressEvent } from 'react-use';\n// Ant Design Resources\nimport { DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\nimport { Typography, Image, Carousel, Button, Space } from 'antd';\n// Types\nimport type { GameInfo } from 'types/game-info';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { PUBLIC_URL } from 'utils/constants';\n// Components\nimport { Translate } from 'components/language';\n\ntype RulesCarouselProps = {\n  info: GameInfo;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Optional custom class name\n   */\n  ruleClassName?: string;\n  /**\n   * Optional custom class name\n   */\n  actionsClassName?: string;\n};\n\nexport function RulesCarousel({\n  info,\n  className = '',\n  ruleClassName = '',\n  actionsClassName,\n}: RulesCarouselProps) {\n  const { language } = useLanguage();\n  const ref = createRef<CarouselRef>();\n\n  useKeyPressEvent('ArrowLeft', () => {\n    ref.current?.prev();\n  });\n\n  useKeyPressEvent('ArrowRight', () => {\n    ref.current?.next();\n  });\n\n  return (\n    <div>\n      <Carousel className={clsx('rules-carousel', className)} autoplay autoplaySpeed={15000} ref={ref}>\n        {info.rules[language].map((rule, index) => (\n          <div className={clsx('rules-carousel__rule', className)} key={rule}>\n            <span className=\"rules-carousel__rule-number\">{index + 1}</span>\n\n            <Image\n              className=\"rules-carousel__image\"\n              src={\n                index === 0\n                  ? `${PUBLIC_URL.BANNERS}${info.gameName}-${language}.jpg`\n                  : `${PUBLIC_URL.RULES}game-rule-${info.gameName}-${index}.jpg`\n              }\n              fallback={`${PUBLIC_URL.RULES}game-rule-not-found.jpg`}\n              alt={rule}\n            />\n            <Typography.Paragraph className={clsx('rules-carousel__rule-text', ruleClassName)}>\n              {rule}\n            </Typography.Paragraph>\n          </div>\n        ))}\n      </Carousel>\n      <Space className={clsx('space-container', actionsClassName)}>\n        <Button type=\"default\" ghost onClick={() => ref.current?.prev()} size=\"small\">\n          <DoubleLeftOutlined /> <Translate pt=\"Regra Anterior\" en=\"Previous Rule\" />\n        </Button>\n        <Button type=\"default\" ghost onClick={() => ref.current?.next()} size=\"small\">\n          <Translate pt=\"Próxima Regra\" en=\"Next Rule\" /> <DoubleRightOutlined />\n        </Button>\n      </Space>\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport type { ReactNode } from 'react';\n\ntype RulesListProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n};\n\nexport function RulesList({ children, className = '' }: RulesListProps) {\n  return <ul className={clsx('rules-list', className)}>{children}</ul>;\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { ReadOutlined } from '@ant-design/icons';\nimport { Button, type ButtonProps, Modal } from 'antd';\n// Types\nimport type { GameInfo } from 'types/game-info';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Translate } from 'components/language';\nimport { RulesCarousel } from 'components/rules';\n\ntype RulesModalProps = {\n  gameInfo: GameInfo;\n  buttonProps?: ButtonProps;\n};\n\nexport function RulesModal({ gameInfo, buttonProps }: RulesModalProps) {\n  const { language, translate } = useLanguage();\n  const [isVisible, setVisibility] = useState(false);\n\n  const onCloseModal = () => {\n    setVisibility(false);\n  };\n\n  return (\n    <>\n      <Button type=\"default\" onClick={() => setVisibility(true)} icon={<ReadOutlined />} {...buttonProps}>\n        <Translate pt=\"Regras\" en=\"Rules\" />\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`${translate('Regras', 'Rules')}: ${gameInfo.title[language]}`}\n          open={isVisible}\n          onCancel={onCloseModal}\n          className=\"rules-modal\"\n          footer={[\n            <Button key=\"close\" onClick={onCloseModal}>\n              <Translate pt=\"Fechar\" en=\"Close\" />\n            </Button>,\n          ]}\n        >\n          <div className=\"rules-modal-content\">\n            <RulesCarousel info={gameInfo} />\n          </div>\n        </Modal>\n      )}\n    </>\n  );\n}\n","import { useEffect } from 'react';\n// Ant Design Resources\nimport { App } from 'antd';\n// Types\nimport type { GameState } from 'types/game';\n// Utils\nimport { print } from 'utils/helpers';\n// Internal\nimport { useFirestoreDocument } from './useFirestoreDocument';\n\nexport function useGameState(gameId: GameId, gameName: GameName): GameState {\n  const { notification } = App.useApp();\n  const docPath = `games/${gameName}/${gameId}/state`;\n\n  const { isLoading, isRefetching, isError, error, data } = useFirestoreDocument(docPath, true);\n\n  if (isError) {\n    notification.error({\n      message: 'The application found an error while trying to update the game state',\n      description: JSON.stringify(error),\n      placement: 'bottomLeft',\n    });\n    console.error(error);\n  }\n\n  const state = data ?? {};\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: <explanation>\n  useEffect(() => {\n    if (isLoading || isRefetching) {\n      console.count('Refreshing state...');\n    } else {\n      print({ state });\n    }\n  }, [isLoading, isRefetching]);\n\n  return state as GameState;\n}\n","import { type UseQueryResult, useQuery } from '@tanstack/react-query';\nimport { doc, getDoc, onSnapshot } from 'firebase/firestore';\nimport { useEffect } from 'react';\n// Services\nimport { firestore } from 'services/firebase';\n\n/**\n * React hook that retrieves a Firestore document and provides the result as a query object.\n * @param docPath - The path to the Firestore document.\n * @param [subscribe=false] - Whether to subscribe to real-time updates on the document.\n * @returns A React Query object containing the document data.\n */\nexport function useFirestoreDocument(docPath: string, subscribe = false): UseQueryResult {\n  const docRef = doc(firestore, docPath);\n  const query = useQuery({\n    queryKey: ['firestore', 'doc', docPath],\n    queryFn: async () => {\n      const snapshot = await getDoc(docRef);\n      return snapshot.data();\n    },\n  });\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: <explanation>\n  useEffect(() => {\n    if (subscribe) {\n      const unsubscribe = onSnapshot(docRef, () => {\n        query.refetch();\n      });\n\n      return () => unsubscribe();\n    }\n  }, [subscribe]);\n\n  return query;\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Badge, Tooltip } from 'antd';\n// Types\nimport type { GamePlayers } from 'types/player';\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\n// Utils\nimport { getAnimationClass, sortPlayers } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\n\ntype PlayersStatusBarProps = {\n  players: GamePlayers;\n};\n\nexport function PlayersStatusBar({ players }: PlayersStatusBarProps) {\n  const [showPlayersBar] = useGlobalState('showPlayersBar');\n\n  if (!showPlayersBar) {\n    return <></>;\n  }\n\n  return (\n    <div className={clsx('players-status-bar', getAnimationClass('slideInRight'))}>\n      <ul className=\"players-status-bar__list\">\n        {sortPlayers(players).map((player) => {\n          return (\n            <li className=\"players-status-bar__player\" key={`players-status-bar-${player.id}`}>\n              <Tooltip title={player.name} placement=\"left\" trigger=\"hover\">\n                <Badge dot color={player.ready ? 'green' : 'gray'}>\n                  <Avatar\n                    id={player.avatarId}\n                    alt={player.name}\n                    size=\"small\"\n                    className={clsx(!player.ready && 'players-status-bar__avatar-not-ready')}\n                  />\n                </Badge>\n              </Tooltip>\n              {player.ready && (\n                <div className=\"players-status-bar__ready\">\n                  <div className=\"players-status-bar__ready-speech\">\n                    <Translate pt=\"Pronto!\" en=\"I'm ready!\" />\n                  </div>\n                </div>\n              )}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Avatar as AntAvatar } from 'antd';\n// Types\nimport type { GameRound } from 'types/game';\n// Components\nimport { Translate } from 'components/language';\n\ntype SectionMetaProps = {\n  round: GameRound;\n  groupScore?: number;\n};\n\nexport function SectionMeta({ round, groupScore }: SectionMetaProps) {\n  return (\n    <ul className=\"game-info-drawer__meta\">\n      <li>\n        <div className=\"game-info-drawer__label-inline\">\n          <Translate pt=\"Rodada:\" en=\"Round:\" />\n        </div>\n        <AntAvatar className=\"game-info-drawer__round\" size=\"small\">\n          {round.current}\n        </AntAvatar>\n        <span className=\"game-info-drawer__inline-separator\">\n          <Translate pt=\"de\" en=\"out of\" />\n        </span>\n        <AntAvatar className=\"game-info-drawer__round\" size=\"small\">\n          {round.total}\n        </AntAvatar>\n      </li>\n\n      {Boolean(groupScore) && (\n        <li>\n          <div className=\"game-info-drawer__label-inline\">\n            <Translate pt=\"Pontos:\" en=\"Points:\" />\n          </div>\n          <AntAvatar\n            className=\"game-info-drawer__round\"\n            size=\"default\"\n            style={{ backgroundColor: 'gold', color: 'black' }}\n          >\n            {groupScore}\n          </AntAvatar>\n        </li>\n      )}\n    </ul>\n  );\n}\n","import { orderBy } from 'lodash';\nimport { useMemo } from 'react';\n// Ant Design Resources\nimport { Badge, Tag } from 'antd';\n// Types\nimport type { GamePlayers } from 'types/player';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useUser } from 'hooks/useUser';\n// Utils\nimport { AVATARS } from 'utils/avatars';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\n\ntype SectionRankedPlayersProps = {\n  players: GamePlayers;\n};\n\nexport function SectionRankedPlayers({ players }: SectionRankedPlayersProps) {\n  const { language } = useLanguage();\n  const user = useUser(players);\n\n  const rankedPlayers = useMemo(\n    () => orderBy(Object.values(players), ['score', 'name'], ['desc', 'asc']),\n    [players],\n  );\n  return (\n    <ul>\n      {rankedPlayers.map((player, index) => {\n        return (\n          <div className=\"game-info-drawer__ranked-player\" key={`ranked-${player.name}`}>\n            {index + 1}.{' '}\n            <Badge count={player.score} className=\"game-info-drawer__avatar-with-badge\">\n              <Avatar id={player.avatarId} shape=\"square\" />\n            </Badge>\n            {player.name}, {AVATARS[player.avatarId].description[language]}\n            {player.id === user.id && (\n              <Tag color={AVATARS[player.avatarId].color} className=\"game-info-drawer__avatar-tag\">\n                <Translate pt=\"VOCÊ\" en=\"YOU\" />\n              </Tag>\n            )}\n          </div>\n        );\n      })}\n    </ul>\n  );\n}\n","import { useQuery } from '@tanstack/react-query';\nimport { useState } from 'react';\n// Ant Design Resources\nimport { Alert, App, Button, Checkbox, Spin } from 'antd';\n// Hooks\nimport { useBlurCards } from 'hooks/useBlurCards';\nimport { useTDBaseUrl } from 'hooks/useTDBaseUrl';\n// Components\nimport { Translate } from 'components/language';\n// Ant Design Resource\n\nexport function BlurOptions() {\n  const { message } = App.useApp();\n  const { blurCard } = useBlurCards();\n  const baseUrl = useTDBaseUrl('resources');\n\n  const { isLoading, isError, data } = useQuery({\n    queryKey: ['credo'],\n    queryFn: async () => {\n      const response = await fetch(`${baseUrl}/images-credo.json`);\n      return await response.json();\n    },\n  });\n\n  const [selected, setSelected] = useState<BooleanDictionary>({\n    aliens: false,\n    cockroaches: false,\n    scorpions: false,\n    snakes: false,\n    spiders: false,\n  });\n\n  const onUpdateSelected = (key: string, value: boolean) => {\n    setSelected((prevState) => ({\n      ...prevState,\n      [key]: value,\n    }));\n  };\n\n  const onBlurSelected = () => {\n    // Gather all ids of all trues\n    const selectedGroups: string[][] = [];\n    Object.keys(selected).forEach((key) => {\n      if (selected[key] && data[key]) {\n        selectedGroups.push(data[key]);\n      }\n    });\n\n    selectedGroups.flat().forEach(blurCard);\n    message.success(<Translate pt=\"Cartas 'credadas' com sucesso\" en=\"Cards blurred successfully\" />);\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"blur-options\">\n        <Spin />\n      </div>\n    );\n  }\n\n  if (isError) {\n    return (\n      <div className=\"blur-options\">\n        <Alert\n          type=\"error\"\n          message={\n            <Translate\n              pt=\"Servidor falhou ao tentar baixar a lista de cartas credo\"\n              en=\"Server failed while trying to fetch blur cards list\"\n            />\n          }\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"blur-options\">\n      <p>\n        <Translate\n          pt=\"Você pode embaçar cartas automaticamente por tema\"\n          en=\"You may blur cards automatically by theme\"\n        />\n        :\n      </p>\n\n      <Checkbox\n        checked={selected.aliens}\n        disabled={!data.aliens}\n        onChange={(e) => onUpdateSelected('aliens', e.target.checked)}\n        className=\"blur-options__checkbox\"\n      >\n        <Translate pt=\"alienígenas\" en=\"aliens\" />\n      </Checkbox>\n\n      <Checkbox\n        checked={selected.cockroaches}\n        disabled={!data.cockroaches}\n        onChange={(e) => onUpdateSelected('cockroaches', e.target.checked)}\n        className=\"blur-options__checkbox\"\n      >\n        <Translate pt=\"baratas\" en=\"cockroaches\" />\n      </Checkbox>\n\n      <Checkbox\n        checked={selected.scorpions}\n        disabled={!data.scorpions}\n        onChange={(e) => onUpdateSelected('scorpions', e.target.checked)}\n        className=\"blur-options__checkbox\"\n      >\n        <Translate pt=\"escorpiões\" en=\"scorpions\" />\n      </Checkbox>\n\n      <Checkbox\n        checked={selected.snakes}\n        disabled={!data.snakes}\n        onChange={(e) => onUpdateSelected('snakes', e.target.checked)}\n        className=\"blur-options__checkbox\"\n      >\n        <Translate pt=\"cobras\" en=\"snakes\" />\n      </Checkbox>\n\n      <Checkbox\n        checked={selected.spiders}\n        disabled={!data.spiders}\n        onChange={(e) => onUpdateSelected('spiders', e.target.checked)}\n        className=\"blur-options__checkbox\"\n      >\n        <Translate pt=\"aranhas\" en=\"spiders\" />\n      </Checkbox>\n\n      <Button type=\"primary\" ghost size=\"small\" onClick={onBlurSelected}>\n        <Translate pt=\"Credar selecionados\" en=\"Blur selected\" />\n      </Button>\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport { Button, Switch, Tooltip } from 'antd';\n// Hooks\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\nimport { useDevFeatures } from 'hooks/useDevFeatures';\nimport { useGlobalLocalStorage } from 'hooks/useGlobalLocalStorage';\nimport { useGlobalState } from 'hooks/useGlobalState';\n// Components\nimport { LanguageSwitch, Translate } from 'components/language';\n// Internal\nimport { BlurOptions } from './BlurOptions';\n\nexport function SectionSettings() {\n  const { isAdmin } = useCurrentUserContext();\n  const [isAdminEnabled, setIsAdminEnabled] = useGlobalState('isAdminEnabled');\n  const { isDebugEnabled, toggleDevFeatures } = useDevFeatures();\n  const [blurEnabled, setBlurEnabled] = useGlobalLocalStorage('blurEnabled');\n  const [volume, setVolume] = useGlobalLocalStorage('volume');\n\n  const onBlurSwitchClick = (value: boolean) => {\n    setBlurEnabled(value);\n  };\n\n  const onSoundSwitchClick = (value: boolean) => {\n    setVolume(value ? 0.5 : 0);\n  };\n\n  return (\n    <div className=\"game-info-drawer__section-settings\">\n      <div className=\"game-info-drawer__settings-entry\">\n        <div className=\"game-info-drawer__switch-label\">\n          <Translate pt=\"Idioma\" en=\"Language\" />{' '}\n          <Tooltip\n            title={\n              <Translate\n                pt=\"Mudar língua do aplicativo, as cartas do jogo continuarão em sua língua original\"\n                en=\"Change app language, the game cards will remain in its original language\"\n              />\n            }\n          >\n            <Button type=\"text\" shape=\"circle\" icon={<InfoCircleOutlined />} size=\"small\" />\n          </Tooltip>\n        </div>\n\n        <LanguageSwitch />\n      </div>\n\n      <div className=\"game-info-drawer__settings-entry\">\n        <div className=\"game-info-drawer__switch-label\">\n          <Translate pt=\"Som\" en=\"Sound\" />\n          <Tooltip\n            title={<Translate pt=\"Muda ou desmuda sons no aplicativo\" en=\"Mute/Unmute sounds in the app\" />}\n          >\n            <Button type=\"text\" shape=\"circle\" icon={<InfoCircleOutlined />} size=\"small\" />\n          </Tooltip>\n        </div>\n\n        <Switch\n          checkedChildren=\"on\"\n          unCheckedChildren=\"off\"\n          checked={volume > 0}\n          onClick={onSoundSwitchClick}\n        />\n      </div>\n\n      <div className=\"game-info-drawer__settings-entry\">\n        <div className=\"game-info-drawer__switch-label\">\n          <Translate pt=\"Botão Credo\" en=\"Blur Button\" />\n          <Tooltip\n            title={\n              <Translate\n                pt=\"Adiciona um botão em todas Cartas-imagem para embaça-las caso você tenha alguma fobia\"\n                en=\"Adds a button to every Image Card to blur them in case you have any phobia\"\n              />\n            }\n          >\n            <Button type=\"text\" shape=\"circle\" icon={<InfoCircleOutlined />} size=\"small\" />\n          </Tooltip>\n        </div>\n\n        <Switch\n          checkedChildren=\"on\"\n          unCheckedChildren=\"off\"\n          checked={blurEnabled}\n          onClick={onBlurSwitchClick}\n        />\n      </div>\n\n      {blurEnabled && (\n        <div className=\"game-info-drawer__settings-entry\">\n          <BlurOptions />\n        </div>\n      )}\n\n      <div className=\"game-info-drawer__settings-entry\">\n        <div className=\"game-info-drawer__switch-label\">\n          Debug\n          <Tooltip\n            title={\n              <Translate\n                pt=\"Ativa coisas para ajudar o desenvolvedor a encontrar error. Use apenas quando instruído\"\n                en=\"Activate debug mode. Only turn on when instructed\"\n              />\n            }\n          >\n            <Button type=\"text\" shape=\"circle\" icon={<InfoCircleOutlined />} size=\"small\" />\n          </Tooltip>\n        </div>\n\n        <Switch\n          checkedChildren=\"on\"\n          unCheckedChildren=\"off\"\n          checked={isDebugEnabled}\n          onClick={toggleDevFeatures}\n        />\n      </div>\n\n      {isAdmin && (\n        <div className=\"game-info-drawer__settings-entry\">\n          <div className=\"game-info-drawer__switch-label\">\n            Admin\n            <Tooltip title={<Translate pt=\"Ativa recursos para o administrador\" en=\"Activate admin mode\" />}>\n              <Button type=\"text\" shape=\"circle\" icon={<InfoCircleOutlined />} size=\"small\" />\n            </Tooltip>\n          </div>\n\n          <Switch\n            checkedChildren=\"on\"\n            unCheckedChildren=\"off\"\n            checked={isAdminEnabled}\n            onClick={() => setIsAdminEnabled((s) => !s)}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n","import { useNavigate } from 'react-router-dom';\nimport { useToggle } from 'react-use';\n// Ant Design Resources\nimport { FireOutlined, SettingOutlined } from '@ant-design/icons';\nimport { Avatar as AntAvatar, Badge, Button, Divider, Drawer, Space } from 'antd';\n// Types\nimport type { GameState } from 'types/game';\nimport type { GamePlayers } from 'types/player';\n// Hooks\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { DebugOnly } from 'components/debug';\nimport { GameBanner } from 'components/general/GameBanner';\nimport { Translate } from 'components/language';\nimport { PlayersStatusBar } from 'components/players/PlayersStatusBar';\nimport { RulesModal } from 'components/rules';\nimport { useGameInfoContext } from 'components/session/GameInfoContext';\n// Internal\nimport { SectionMeta } from './_internal/SectionMeta';\nimport { SectionRankedPlayers } from './_internal/SectionRankedPlayers';\nimport { SectionSettings } from './_internal/SectionSettings';\n\ntype GameInfoDrawerProps = {\n  players: GamePlayers;\n  state: GameState;\n  userId: string;\n};\n\nexport function GameInfoDrawer({ players, state, userId }: GameInfoDrawerProps) {\n  const info = useGameInfoContext();\n  const { language } = useLanguage();\n  const [isDrawerOpen, toggleDrawer] = useToggle(false);\n  const [isSettingsOpen, toggleSettingsDrawer] = useToggle(false);\n  const navigate = useNavigate();\n  const { isAdmin, isAuthenticated, isGuest } = useCurrentUserContext();\n\n  if (state.phase === 'LOBBY') {\n    return <></>;\n  }\n\n  return (\n    <>\n      <div className=\"game-info-drawer-container\">\n        <button type=\"button\" className=\"game-info-drawer-button\" onClick={toggleDrawer}>\n          <span className=\"game-info-drawer-button__game-title\">\n            {info.title?.[language] ?? '?'}\n            <DebugOnly devOnly>({players?.[userId]?.name})</DebugOnly>\n          </span>\n          <AntAvatar icon={<SettingOutlined />} size=\"small\" />\n          <div className=\"game-info-drawer-button__player-status-bar\">\n            <PlayersStatusBar players={players} />\n          </div>\n        </button>\n\n        <Drawer\n          title={\n            <GameBanner\n              title={info?.title}\n              gameName={info.gameName}\n              preview={false}\n              className=\"round-corners\"\n            />\n          }\n          placement=\"right\"\n          closable={false}\n          onClose={toggleDrawer}\n          open={isDrawerOpen}\n        >\n          {isAuthenticated && !isGuest && (\n            <p>\n              <Badge size=\"default\" dot color=\"green\">\n                <Avatar id={players?.[userId]?.avatarId} shape=\"square\" size=\"small\" />\n              </Badge>{' '}\n              <Translate pt=\"Você está logado!\" en=\"You are logged in!\" />\n            </p>\n          )}\n\n          <Space>\n            <Button type=\"default\" onClick={() => toggleSettingsDrawer(true)} icon={<SettingOutlined />}>\n              <Translate pt=\"Configurações\" en=\"Settings\" />\n            </Button>\n            <RulesModal gameInfo={info} />\n            <Drawer\n              title={<Translate pt=\"Configurações\" en=\"Settings\" />}\n              width={200}\n              closable={false}\n              onClose={toggleSettingsDrawer}\n              open={isSettingsOpen}\n            >\n              <SectionSettings />\n            </Drawer>\n            {isAdmin && (\n              <Button type=\"default\" danger onClick={() => navigate('/hub')} icon={<FireOutlined />}>\n                Hub\n              </Button>\n            )}\n          </Space>\n\n          <Divider />\n\n          <SectionMeta round={state?.round || 0} groupScore={state?.groupScore} />\n\n          <SectionRankedPlayers players={players} />\n        </Drawer>\n      </div>\n    </>\n  );\n}\n","import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// Ant Design Resources\nimport { Image, Modal } from 'antd';\n// Types\nimport type { GameState } from 'types/game';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { PUBLIC_URL } from 'utils/constants';\nimport GAME_LIST from 'utils/info';\n// Components\nimport { Translate } from 'components/language';\nimport { Title } from 'components/text';\n\ntype RedirectSessionProps = {\n  state: GameState;\n};\n\nexport function RedirectSession({ state }: RedirectSessionProps) {\n  const { language } = useLanguage();\n  const navigate = useNavigate();\n\n  const [open, setOpen] = useState<boolean | null>(null);\n\n  const hideModal = () => {\n    setOpen(false);\n  };\n\n  const redirect = state.redirect;\n\n  if (redirect) {\n    const twoHoursInMilliseconds = 2 * 60 * 60 * 1000; // 2 hours\n    const currentMilliseconds = Date.now();\n\n    if (redirect.redirectAt - currentMilliseconds > twoHoursInMilliseconds) {\n      return <></>;\n    }\n\n    const gameInfo = GAME_LIST[redirect.gameName];\n    return (\n      <>\n        <Modal\n          title={\n            <Translate\n              pt=\"Você está convidado para uma nova partida\"\n              en=\"You've been invited to a new session\"\n            />\n          }\n          open={open ?? true}\n          onCancel={hideModal}\n          onOk={() => {\n            navigate(`/${redirect.gameId}`);\n          }}\n          okText={<Translate pt=\"Quero participar!\" en=\"Take me there!\" />}\n          cancelText={<Translate pt=\"Cancelar\" en=\"Cancel\" />}\n        >\n          <Image\n            alt={gameInfo.title[language]}\n            src={`${PUBLIC_URL.BANNERS}${gameInfo.gameName}-${language}.jpg`}\n            fallback={`${PUBLIC_URL.BANNERS}/em-breve-${language}.jpg`}\n            className=\"round-corners\"\n          />\n          <Title>{redirect.gameId}</Title>\n        </Modal>\n      </>\n    );\n  }\n\n  return <></>;\n}\n","import type { AliasToken } from 'antd/es/theme/internal';\nimport { type ReactNode, useEffect, useMemo } from 'react';\n// Ant Design Resources\nimport { ConfigProvider } from 'antd';\n// Hooks\nimport { useGameMeta } from 'hooks/useGameMeta';\nimport { useGameState } from 'hooks/useGameState';\nimport { useGlobalLocalStorage } from 'hooks/useGlobalLocalStorage';\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useIdleRedirect } from 'hooks/useIdleRedirect';\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { AdminMenuDrawer } from 'components/admin';\nimport { GameInfoDrawer } from 'components/drawers';\nimport { AutoNextPhase } from 'components/general/AutoNextPhase';\nimport { PageLayout } from 'components/general/PageLayout';\nimport { PhaseLobby } from 'components/phases';\n// Internal\nimport { RedirectSession } from './RedirectSession';\nimport { GameInfoProvider, useGameAppearance } from './GameInfoContext';\n// Utils\n\ntype SessionProps = {\n  /**\n   * The game collection name\n   */\n  gameCollection: GameName;\n  /**\n   * The active component to be rendered, usually a Phase... component\n   */\n  getActiveComponent: (args: any) => any;\n};\n\nexport function Session({ gameCollection, getActiveComponent }: SessionProps) {\n  const gameMeta = useGameMeta();\n  const { language } = useLanguage();\n  const state = useGameState(gameMeta.gameId, gameCollection);\n  const [userId] = useGlobalState('userId');\n  const [, setLanguage] = useGlobalLocalStorage('language');\n\n  const players = state.players ?? {};\n\n  useIdleRedirect();\n\n  // Update session language to match the game\n  // biome-ignore lint/correctness/useExhaustiveDependencies: only update then receiving the game language\n  useEffect(() => {\n    if (language !== gameMeta.language) {\n      setLanguage(gameMeta.language);\n    }\n  }, [gameMeta.language]);\n\n  if (!userId || !players[userId]) {\n    return (\n      <GameInfoProvider gameCollection={gameCollection}>\n        <SessionConfigWrapper>\n          <RedirectSession state={state} />\n          <PhaseLobby players={players} meta={gameMeta} />\n        </SessionConfigWrapper>\n      </GameInfoProvider>\n    );\n  }\n\n  const ActiveComponent: any = getActiveComponent(state);\n\n  return (\n    <PageLayout>\n      <GameInfoProvider gameCollection={gameCollection}>\n        <SessionConfigWrapper>\n          <GameInfoDrawer players={players} state={state} userId={userId} />\n          <RedirectSession state={state} />\n          <ActiveComponent players={players} state={state} meta={gameMeta} />\n          <AutoNextPhase players={players} />\n          <AdminMenuDrawer state={state} players={players} />\n        </SessionConfigWrapper>\n      </GameInfoProvider>\n    </PageLayout>\n  );\n}\n\ntype SessionConfigWrapperProps = {\n  children: ReactNode;\n};\n\nexport function SessionConfigWrapper({ children }: SessionConfigWrapperProps) {\n  const customTokens = useGetCustomTokens();\n\n  return (\n    <ConfigProvider\n      theme={{\n        token: customTokens,\n      }}\n    >\n      {children}\n    </ConfigProvider>\n  );\n}\n\nfunction useGetCustomTokens() {\n  const gameAppearance = useGameAppearance();\n\n  return useMemo(() => {\n    const customTokens: Partial<AliasToken> = {};\n    if (gameAppearance.primaryColor) {\n      customTokens.colorPrimary = gameAppearance.primaryColor;\n      customTokens.colorLink = gameAppearance.primaryColor;\n    }\n    if (gameAppearance.surfaceColor) {\n      customTokens.colorBgContainer = gameAppearance.surfaceColor;\n    }\n    return customTokens;\n  }, [gameAppearance]);\n}\n","import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useIdle } from 'react-use';\n// Ant Design Resources\nimport { App } from 'antd';\n// Internal\nimport { useLanguage } from './useLanguage';\n\nexport function useIdleRedirect() {\n  const { notification } = App.useApp();\n  const navigate = useNavigate();\n  const { translate } = useLanguage();\n\n  // Considers a player idle after 15 minutes of inactivity\n  const isIdle = useIdle(9e5);\n\n  useEffect(() => {\n    if (isIdle) {\n      notification.warning({\n        message: translate(\n          'Página parada por um longo tempo, redirecionando...',\n          'The page has been idle for too long, redirecting...',\n        ),\n        duration: 5,\n        onClose: () => navigate('/'),\n        placement: 'top',\n      });\n    }\n  }, [isIdle, navigate, translate, notification]);\n}\n","import clsx from 'clsx';\nimport { type ReactNode, forwardRef } from 'react';\n\nexport type StepProps = {\n  /**\n   * Overlay PhaseAnnouncement\n   */\n  announcement?: ReactNode;\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Flag indicating if the step should be full width\n   */\n  fullWidth?: boolean;\n  /**\n   * Flag indicating if the step should be full height\n   */\n  fullHeight?: boolean;\n};\n\nexport const Step = forwardRef<HTMLDivElement, StepProps>(\n  ({ children, announcement, fullWidth = false, fullHeight = false, className = '' }: StepProps, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          'step',\n          fullWidth && 'step--full-width',\n          fullHeight && 'step--full-height',\n          className,\n        )}\n      >\n        {announcement}\n        {children}\n      </div>\n    );\n  },\n);\n","import type { ReactNode } from 'react';\n// Types\nimport type { GamePlayers } from 'types/player';\n// Utils\nimport { print } from 'utils/helpers';\n// Components\nimport { Translate } from 'components/language';\nimport { Loading } from 'components/loaders';\nimport { WaitingRoom } from 'components/players';\n\nconst getWaitingRoomInstruction = (kind: string) => {\n  switch (kind) {\n    case 'SERVER':\n      return (\n        <Translate pt=\"Aguardando o servidor dar sinal de vida\" en=\"Waiting for the server to resuscitate\" />\n      );\n    case 'PLAYERS':\n      return (\n        <Translate\n          pt=\"Vamos aguardar enquanto os outros jogadores terminam!\"\n          en=\"Please wait while other players finish!\"\n        />\n      );\n\n    default:\n      return <Translate pt=\"Aguardando algo acontecer...\" en=\"Waiting for something...\" />;\n  }\n};\n\ntype StepSwitcherProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode[] | ReactNode;\n  /**\n   * The current step\n   */\n  step: number;\n  /*\n   * The conditions to render each step, otherwise the waiting room is rendered\n   */\n  conditions?: boolean[];\n  /**\n   * The players dictionary\n   */\n  players?: GamePlayers;\n  /**\n   * Waiting room customizations\n   */\n  waitingRoom?: {\n    /**\n     * The type of waiting room (for players or server)\n     */\n    type?: 'SERVER' | 'PLAYERS';\n    /**\n     * The instruction to replace the default one\n     */\n    instruction?: ReactNode;\n    /**\n     * Additional content to be rendered\n     */\n    content?: ReactNode;\n  };\n};\n\nexport function StepSwitcher({ children, step, conditions, players, waitingRoom = {} }: StepSwitcherProps) {\n  if (!players) print('SetSwitcher is being used without `players`, please add it.', 'warn');\n\n  const content = Array.isArray(children) ? children : [children];\n\n  if (players && step >= content.length) {\n    return (\n      <WaitingRoom\n        players={players}\n        title={<Translate pt=\"Pronto!\" en=\"Done!\" />}\n        instruction={waitingRoom.instruction ?? getWaitingRoomInstruction(waitingRoom.type ?? 'PLAYERS')}\n      >\n        {waitingRoom.content}\n      </WaitingRoom>\n    );\n  }\n\n  if (!content[step]) {\n    return <Loading />;\n  }\n\n  if (conditions?.[step] ?? true) {\n    return <>{content[step]}</>;\n  }\n\n  return <div></div>;\n}\n","import type { ReactNode } from 'react';\n// Icons\nimport { AnimatedClockIcon } from 'icons/AnimatedClockIcon';\n// Components\nimport { MetricHighlight, type MetricHighlightProps } from 'components/metrics/MetricHighlight';\n\nconst padTime = (value: number) => (value < 10 ? `0${value}` : value);\n\ntype TimerClockProps = {\n  /**\n   * Replacement icon for the clock icon\n   */\n  icon?: ReactNode;\n  /**\n   * Optional children that comes after the time\n   */\n  children?: ReactNode;\n  /**\n   * Minutes\n   */\n  minutes?: number;\n  /**\n   * Seconds\n   */\n  seconds: number;\n} & Omit<MetricHighlightProps, 'icon' | 'children'>;\n\n/**\n * Timer highlight with countdown functionality\n */\nexport function TimerClock({\n  icon,\n  type,\n  iconSize,\n  children,\n  className = '',\n  iconPlacement = 'before',\n  minutes = 0,\n  seconds,\n}: TimerClockProps) {\n  return (\n    <MetricHighlight\n      icon={icon ?? <AnimatedClockIcon />}\n      type={type}\n      iconSize={iconSize}\n      className={className}\n      iconPlacement={iconPlacement}\n    >\n      {minutes}:{padTime(seconds)}\n      {children}\n    </MetricHighlight>\n  );\n}\n","// Ant Design Resources\nimport { Progress, type ProgressProps } from 'antd';\n\ninterface TimerBarProps extends ProgressProps {\n  steps?: number;\n  value: number;\n  total: number;\n}\n\n/**\n * Time Bar presentational component used in timed operations\n * @param props\n * @returns\n */\nexport function TimerBar({\n  steps,\n  strokeLinecap,\n  total,\n  type = 'line',\n  value,\n  status = 'active',\n  ...props\n}: TimerBarProps) {\n  const percentage = 100 - (value * 100) / total;\n  return (\n    <Progress\n      percent={percentage}\n      steps={steps}\n      showInfo={false}\n      style={{ marginBottom: '1rem' }}\n      size={steps && steps > 30 ? 'small' : undefined}\n      type={type}\n      {...props}\n    />\n  );\n}\n","import clsx from 'clsx';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\n// Internal\nimport { TimerBar } from './TimerBar';\n\ntype TimedTimerBarProps = {\n  /**\n   * Duration in seconds\n   */\n  duration: number;\n  /**\n   * Function executed when the time is up\n   */\n  onExpire: GenericFunction;\n  /**\n   * Number of ticks in the bar\n   */\n  steps?: number;\n  /**\n   * Type of bar. Default: line\n   */\n  type?: 'circle' | 'line' | 'dashboard';\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\nexport function TimedTimerBar({ duration, onExpire, type, steps = 10, className }: TimedTimerBarProps) {\n  const { timeLeft } = useCountdown({\n    duration,\n    autoStart: true,\n    onExpire,\n  });\n\n  return (\n    <div className={clsx('timer-number', className)}>\n      {timeLeft} <TimerBar steps={steps} value={timeLeft} total={duration} type={type} /> {timeLeft}\n    </div>\n  );\n}\n","import type { ReactNode } from 'react';\n// Hooks\nimport { useCountdown, type useCountdownSettings } from 'hooks/useCountdown';\n// Icons\nimport { AnimatedClockIcon } from 'icons/AnimatedClockIcon';\n// Components\nimport { MetricHighlight, type MetricHighlightProps } from 'components/metrics/MetricHighlight';\n\nconst padTime = (value: number) => (value < 10 ? `0${value}` : value);\n\ntype TimedTimerClockProps = {\n  /**\n   * Replacement icon for the clock icon\n   */\n  icon?: ReactNode;\n  /**\n   * Optional children that comes after the time\n   */\n  children?: ReactNode;\n} & useCountdownSettings &\n  Omit<MetricHighlightProps, 'icon' | 'children'>;\n\n/**\n * Timer highlight with countdown functionality\n */\nexport function TimedTimerClock({\n  icon,\n  type,\n  iconSize,\n  children,\n  className = '',\n  iconPlacement = 'before',\n  ...timerProps\n}: TimedTimerClockProps) {\n  const { minutes, seconds } = useCountdown({ ...timerProps });\n\n  return (\n    <MetricHighlight\n      icon={icon ?? <AnimatedClockIcon />}\n      type={type}\n      iconSize={iconSize}\n      className={className}\n      iconPlacement={iconPlacement}\n    >\n      {minutes}:{padTime(seconds)}\n      {children}\n    </MetricHighlight>\n  );\n}\n","// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\n\ntype TimeForActionProps = {\n  duration: number;\n  onExpire?: () => void;\n  timeLeft?: number;\n};\n\nexport function WaitingTime({ duration, timeLeft, onExpire }: TimeForActionProps) {\n  const { timeLeft: privateTimeLeft } = useCountdown({\n    duration,\n    autoStart: timeLeft === undefined,\n    onExpire,\n  });\n\n  const percentage = ((timeLeft ?? privateTimeLeft) / duration) * 100;\n\n  return (\n    <div className=\"timer-waiting-time-bar\">\n      <span className=\"timer-waiting-time-bar__container\">\n        <span className=\"timer-waiting-time-bar__left\" style={{ width: `${percentage}%` }} />\n      </span>\n    </div>\n  );\n}\n","// Internal\nimport { useGlobalLocalStorage } from './useGlobalLocalStorage';\n\ntype UseBlurCards = {\n  blurredCards: BooleanDictionary;\n  shouldBeBlurred: (cardId?: string) => boolean;\n  blurCard: (cardId: string) => void;\n  isBlurEnabled: boolean;\n};\n\n/**\n * Add card ids to the blur dictionary\n * @returns the dictionary of blurred ids, the function to add a blur card, the function to check if a card should be blurred, the flag indicating if the feature was enabled by the user\n */\nexport function useBlurCards(): UseBlurCards {\n  const [blurredCards, setBlurredCards] = useGlobalLocalStorage('blurredCards');\n  const [blurEnabled] = useGlobalLocalStorage('blurEnabled');\n\n  const blurCard = (cardId: string) => {\n    setBlurredCards({\n      ...blurredCards,\n      [cardId]: !blurredCards?.[cardId] ?? true,\n    });\n  };\n\n  const shouldBeBlurred = (cardId?: string) => {\n    return Boolean(cardId && blurEnabled && blurredCards?.[cardId]);\n  };\n\n  return {\n    blurredCards,\n    shouldBeBlurred,\n    blurCard,\n    isBlurEnabled: blurEnabled,\n  };\n}\n","// Internal\nimport { isDevEnv } from '../utils/helpers';\nimport { useGlobalState } from './useGlobalState';\n\n/**\n * Controls debug and dev environment\n * @returns\n */\nexport function useDevFeatures() {\n  const [isDebugEnabled, setIsDebugEnabled] = useGlobalState('isDebugEnabled');\n\n  const toggleDevFeatures = () => {\n    setIsDebugEnabled((s) => !s);\n  };\n\n  return {\n    isDevEnv,\n    isDebugEnabled,\n    toggleDevFeatures,\n  };\n}\n","import { useMutation } from '@tanstack/react-query';\n// Ant Design Resources\nimport { App } from 'antd';\n// Services\nimport { GAME_API, type GAME_API_COMMON_ACTIONS } from 'services/adapters';\n// Internal\nimport { useLoading } from './useLoading';\nimport { useGlobalState } from './useGlobalState';\nimport { useGameMeta } from './useGameMeta';\n\nconst debounce = (func: any, timeout = 1000): ((...args: any[]) => any) => {\n  let timer: NodeJS.Timeout;\n  return (...args: any[]) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      func.apply(this, args);\n    }, timeout);\n  };\n};\n\nexport type UseGameActionRequestArgs = {\n  actionName: string;\n  onBeforeCall?: (...args: any) => any;\n  onAfterCall?: (...args: any) => any;\n  onError?: (...args: any) => any;\n  onSuccess?: (...args: any) => any;\n  successMessage?: string;\n  errorMessage?: string;\n};\n\ninterface Payload {\n  action: keyof typeof GAME_API_COMMON_ACTIONS | string;\n  [key: string]: any;\n}\n\n/**\n * Custom hook for making a game action request.\n *\n * @param options - The options for the game action request.\n * @param options.actionName - The name of the action.\n * @param [options.onBeforeCall] - The callback function to be called before making the API call.\n * @param [options.onAfterCall] - The callback function to be called after making the API call.\n * @param [options.onError] - The callback function to be called when an error occurs during the API call.\n * @param [options.onSuccess] - The callback function to be called when the API call is successful.\n * @param [options.successMessage] - The success message to be displayed.\n * @param [options.errorMessage] - The error message to be displayed.\n * @returns The debounced function for making the game action request.\n */\nexport function useGameActionRequest({\n  actionName,\n  onBeforeCall = () => {},\n  onAfterCall = () => {},\n  onError = () => {},\n  onSuccess = () => {},\n  successMessage = 'API call was successful',\n  errorMessage = 'API call has failed',\n}: UseGameActionRequestArgs): (...args: any[]) => any {\n  const { message, notification } = App.useApp();\n  const { setLoader } = useLoading();\n  const { gameId, gameName } = useGameMeta();\n  const [userId] = useGlobalState('userId');\n\n  const query = useMutation({\n    mutationKey: [actionName],\n    mutationFn: (payload: Payload) =>\n      GAME_API.run({\n        gameId,\n        gameName,\n        playerId: userId,\n        ...payload,\n      }),\n    onMutate: async () => {\n      setLoader(actionName, true);\n      await onBeforeCall();\n    },\n    onSuccess: async () => {\n      await onSuccess();\n      message.success(successMessage);\n    },\n    onError: (e: Error) => {\n      notification.error({\n        message: errorMessage,\n        description: JSON.stringify(e?.message),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n      onError();\n    },\n    onSettled: async () => {\n      await onAfterCall();\n      setLoader(actionName, false);\n    },\n  });\n\n  return debounce(query.mutate);\n}\n","// Internal\nimport { useGameMeta } from './useGameMeta';\nimport { useGlobalState } from './useGlobalState';\n\n/**\n * Determine is user is the Host by checking if they were the one who created the game.\n * @returns Returns true if the user is the Host, false otherwise\n */\nexport function useHost(): boolean {\n  const { createdBy } = useGameMeta();\n  const [userId] = useGlobalState('userId');\n\n  return createdBy === userId;\n}\n","import { USE_MOCKS } from 'dev-configs';\nimport { useState } from 'react';\n// Utils\nimport { VIEWER_ID } from 'utils/constants';\nimport { getRandomItem, isDevEnv } from 'utils/helpers';\n// Internal\nimport { useCountdown } from './useCountdown';\nimport { useGlobalState } from './useGlobalState';\nimport { useHost } from './useHost';\n\n/**\n * Runs mock function tht performs whatever after 3-6 seconds\n * @param whatToDo\n * @param requirements\n * @param delay (default a random value between 3-6 seconds)\n * @returns\n */\nexport function useMock(whatToDo: GenericFunction, requirements: any[] = [], delay?: number) {\n  const isHost = useHost();\n  const [userId] = useGlobalState('userId');\n  const [runOnce, setRunOnce] = useState(false);\n  const duration = delay ?? getRandomItem([3, 4, 4, 5, 6]);\n\n  return useCountdown({\n    duration,\n    onExpire: () => {\n      if (\n        !runOnce &&\n        isDevEnv &&\n        USE_MOCKS &&\n        !isHost &&\n        userId !== VIEWER_ID &&\n        requirements.every(Boolean)\n      ) {\n        whatToDo();\n        setRunOnce(true);\n      }\n    },\n    disabled: runOnce,\n  });\n}\n","import { useState } from 'react';\n\nexport type UseStep = {\n  step: number;\n  setStep: React.Dispatch<React.SetStateAction<number>>;\n  goToNextStep: () => void;\n  goToPreviousStep: () => void;\n};\n\n/**\n * Controls steps\n * @param startingStep\n */\nexport function useStep(startingStep = 0): UseStep {\n  const [step, setStep] = useState<number>(startingStep);\n\n  const goToNextStep = () => setStep((s) => s + 1);\n\n  const goToPreviousStep = () => setStep((s) => (s - 1 < 0 ? 0 : s - 1));\n\n  return {\n    step,\n    setStep,\n    goToNextStep,\n    goToPreviousStep,\n  };\n}\n","/**\n * Returns the URL for the given kind of resource\n * @param kind the kind of resource\n * @returns the URL for the given kind of resource\n */\nexport function useTDBaseUrl(library: 'images' | 'sprites' | 'resources' | 'classic'): string {\n  const baseUrl = process.env.REACT_APP_TD_BASE_URL;\n\n  switch (library) {\n    case 'images':\n      return `${baseUrl}/${process.env.REACT_APP_TD_IMAGES}`;\n    case 'sprites':\n      return `${baseUrl}/${process.env.REACT_APP_TD_SPRITES}`;\n    case 'resources':\n      return `${baseUrl}/${process.env.REACT_APP_TD_RESOURCES}`;\n    case 'classic':\n      return `${baseUrl}/${process.env.REACT_APP_TD_CLASSIC}`;\n    default:\n      throw new Error('Invalid library');\n  }\n}\n","import { useEffectOnce } from 'react-use';\n// Internal\nimport { useGlobalState } from './useGlobalState';\n\nexport function useTemporarilyHidePlayersBar(ignore = false) {\n  const [, setShowPlayersBar] = useGlobalState('showPlayersBar');\n\n  useEffectOnce(() => {\n    setShowPlayersBar(ignore);\n    return () => {\n      setShowPlayersBar(true);\n    };\n  });\n}\n","import { useEffect, useState } from 'react';\n// Types\nimport type { GameState } from 'types/game';\nimport type { GamePlayers, GamePlayer } from 'types/player';\n// Utils\nimport { PLACEHOLDER_PLAYER, VIEWER_ID } from 'utils/constants';\n// Internal\nimport { useGlobalState } from './useGlobalState';\n\nconst THREE_MINUTES = 3 * 60 * 1000;\n\n/**\n * Get player data for the user\n * @param players\n * @returns\n */\nexport function useUser(players: GamePlayers, state?: GameState): GamePlayer {\n  const [userId] = useGlobalState('userId');\n  const [user, setUser] = useGlobalState('user');\n  const [isReady, setIsReady] = useState(false);\n\n  useEffect(() => {\n    if (userId === VIEWER_ID) {\n      setUser({\n        ...PLACEHOLDER_PLAYER,\n        id: VIEWER_ID,\n        ready: true,\n      });\n      return;\n    }\n\n    if (userId && players?.[userId]) {\n      setUser(players?.[userId]);\n    }\n  }, [players, userId, setUser]);\n\n  useEffect(() => {\n    if (userId === VIEWER_ID) {\n      setIsReady(false);\n      return;\n    }\n    // Check if user is ready and check if user has been ready after the last state change\n    if (userId && user?.ready === false) {\n      setIsReady(false);\n      return;\n    }\n\n    if (!state?.updatedAt) {\n      setIsReady(user?.ready ?? true);\n      return;\n    }\n\n    // If state was updated after the player was updated, data might not be synced\n    if (userId && user?.updatedAt < state?.updatedAt) {\n      setIsReady(false);\n      return;\n    }\n\n    setIsReady(true);\n  }, [userId, user?.ready, user?.updatedAt, state?.updatedAt]);\n\n  return {\n    ...user,\n    isReady,\n    online: user.updatedAt ? Date.now() - user.updatedAt < THREE_MINUTES : false,\n  };\n}\n","/**\n * Enum of Game Phases\n */\nexport const PHASES = {\n  DEFAULT: {\n    LOBBY: 'LOBBY',\n    RULES: 'RULES',\n    SETUP: 'SETUP',\n    GAME_OVER: 'GAME_OVER',\n    WAIT: 'WAIT',\n  },\n  ADEDANHX: {\n    ANSWERING: 'ANSWERING',\n    EVALUATION: 'EVALUATION',\n    RESULTS: 'RESULTS',\n  },\n  ARTE_RUIM: {\n    DRAW: 'DRAW',\n    EVALUATION: 'EVALUATION',\n    GALLERY: 'GALLERY',\n  },\n  BOMBA_RELOGIO: {\n    ROLE_ASSIGNMENT: 'ROLE_ASSIGNMENT',\n    DECLARATION: 'DECLARATION',\n    EXAMINATION: 'EXAMINATION',\n    RESULT: 'RESULT',\n  },\n  CINEGRAFISTAS_AMADORES: {\n    UNKNOWN: 'UNKNOWN',\n  },\n  COMUNICACAO_ALIENIGENA: {\n    ALIEN_SELECTION: 'ALIEN_SELECTION',\n    ALIEN_SEEDING: 'ALIEN_SEEDING',\n    HUMAN_ASK: 'HUMAN_ASK',\n    ALIEN_ANSWER: 'ALIEN_ANSWER',\n    ALIEN_REQUEST: 'ALIEN_REQUEST',\n    OFFERINGS: 'OFFERINGS',\n    REVEAL: 'REVEAL',\n  },\n  COMUNICACAO_DUO: {\n    ASKING_FOR_SOMETHING: 'ASKING_FOR_SOMETHING',\n    DELIVER_SOMETHING: 'DELIVER_SOMETHING',\n    VERIFICATION: 'VERIFICATION',\n  },\n  CONTADORES_HISTORIAS: {\n    STORY: 'STORY',\n    CARD_PLAY: 'CARD_PLAY',\n    VOTING: 'VOTING',\n    RESOLUTION: 'RESOLUTION',\n  },\n  CONTROLE_DE_ESTOQUE: {\n    // PHASE ONE\n    GOOD_PLACEMENT: 'GOOD_PLACEMENT',\n    PLACEMENT_CONFIRMATION: 'PLACEMENT_CONFIRMATION',\n    // PHASE TWO\n    FULFILLMENT: 'FULFILLMENT',\n    RESULTS: 'RESULTS',\n  },\n  CRUZA_PALAVRAS: {\n    WORDS_SELECTION: 'WORDS_SELECTION',\n    CLUE_WRITING: 'CLUE_WRITING',\n    GUESSING: 'GUESSING',\n    REVEAL: 'REVEAL',\n  },\n  DETETIVES_IMAGINATIVOS: {\n    SECRET_CLUE: 'SECRET_CLUE',\n    CARD_PLAY: 'CARD_PLAY',\n    DEFENSE: 'DEFENSE',\n    VOTING: 'VOTING',\n    REVEAL: 'REVEAL',\n  },\n  DILEMA_DOS_ESQUIADORES: {\n    UNKNOWN: 'UNKNOWN',\n  },\n  DUETOS: {\n    PAIRING: 'PAIRING',\n    RESULTS: 'RESULTS',\n  },\n  ESPIAO_ENTRE_NOS: {\n    ASSIGNMENT: 'ASSIGNMENT',\n    INVESTIGATION: 'INVESTIGATION',\n    ASSESSMENT: 'ASSESSMENT',\n    FINAL_ASSESSMENT: 'FINAL_ASSESSMENT',\n    RESOLUTION: 'RESOLUTION',\n  },\n  FILEIRA_DE_FATOS: {\n    ORDERING: 'ORDERING',\n    RESULTS: 'RESULTS',\n  },\n  GALERIA_DE_SONHOS: {\n    WORD_SELECTION: 'WORD_SELECTION',\n    DREAMS_SELECTION: 'DREAMS_SELECTION',\n    CARD_PLAY: 'CARD_PLAY',\n    RESOLUTION: 'RESOLUTION',\n  },\n  CRIMES_HEDIONDOS: {\n    CRIME_SELECTION: 'CRIME_SELECTION',\n    SCENE_MARKING: 'SCENE_MARKING',\n    GUESSING: 'GUESSING',\n    REVEAL: 'REVEAL',\n  },\n  INSTRUMENTOS_CODIFICADOS: {\n    UNKNOWN: 'UNKNOWN',\n  },\n  LABIRINTO_SECRETO: {\n    MAP_BUILDING: 'MAP_BUILDING',\n    PATH_FOLLOWING: 'PATH_FOLLOWING',\n    RESULTS: 'RESULTS',\n  },\n  LINHAS_CRUZADAS: {\n    PROMPT_SELECTION: 'PROMPT_SELECTION',\n    DRAWING: 'DRAWING',\n    NAMING: 'NAMING',\n    PRESENTATION: 'PRESENTATION',\n  },\n  MEGAMIX: {\n    SEEDING: 'SEEDING',\n    TRACK: 'TRACK',\n    RESULT: 'RESULT',\n  },\n  MENTE_COLETIVA: {\n    QUESTION_SELECTION: 'QUESTION_SELECTION',\n    EVERYBODY_WRITES: 'EVERYBODY_WRITES',\n    COMPARE: 'COMPARE',\n    RESOLUTION: 'RESOLUTION',\n  },\n  MESMICE: {\n    CLUE_WRITING: 'CLUE_WRITING',\n    OBJECT_FEATURE_ELIMINATION: 'OBJECT_FEATURE_ELIMINATION',\n    RESULT: 'RESULT',\n  },\n  NA_RUA_DO_MEDO: {\n    TRICK_OR_TREAT: 'TRICK_OR_TREAT',\n    RESULT: 'RESULT',\n    STREET_END: 'STREET_END',\n  },\n  NAO_SOU_ROBO: {\n    CARD_SELECTION: 'CARD_SELECTION',\n    ARE_YOU_A_ROBOT: 'ARE_YOU_A_ROBOT',\n    RESULTS: 'RESULTS',\n  },\n  NAUFRAGOS: {\n    UNKNOWN: 'UNKNOWN',\n  },\n  ONDA_TELEPATICA: {\n    DIAL_CLUE: 'DIAL_CLUE',\n    GUESS: 'GUESS',\n    REVEAL: 'REVEAL',\n  },\n  PALHETA_DE_CORES: {\n    UNKNOWN: 'UNKNOWN',\n  },\n  PLANEJAMENTO_URBANO: {\n    PLANNING: 'PLANNING',\n    PLACING: 'PLACING',\n    RESOLUTION: 'RESOLUTION',\n  },\n  POLEMICA_DA_VEZ: {\n    TOPIC_SELECTION: 'TOPIC_SELECTION',\n    REACT: 'REACT',\n    RESOLUTION: 'RESOLUTION',\n  },\n  PORTA_DOS_DESESPERADOS: {\n    BOOK_POSSESSION: 'BOOK_POSSESSION',\n    DOOR_CHOICE: 'DOOR_CHOICE',\n    RESOLUTION: 'RESOLUTION',\n  },\n  QUEM_NAO_MATA: {\n    TARGETING: 'TARGETING',\n    STANDOFF: 'STANDOFF',\n    DUEL: 'DUEL',\n    RESOLUTION: 'RESOLUTION',\n  },\n  QUEM_SOU_EU: {\n    CHARACTER_FILTERING: 'CHARACTER_FILTERING',\n    CHARACTER_DESCRIPTION: 'CHARACTER_DESCRIPTION',\n    GUESSING: 'GUESSING',\n    RESULTS: 'RESULTS',\n  },\n  RETRATO_FALADO: {\n    COMPOSITE_SKETCH: 'COMPOSITE_SKETCH',\n    EVALUATION: 'EVALUATION',\n    REVEAL: 'REVEAL',\n  },\n  SINAIS_DE_ALERTA: {\n    DRAWING: 'DRAWING',\n    EVALUATION: 'EVALUATION',\n    GALLERY: 'GALLERY',\n  },\n  SONHOS_PESADELOS: {\n    DREAM_TELLING: 'DREAM_TELLING',\n    MATCHING: 'MATCHING',\n    RESOLUTION: 'RESOLUTION',\n  },\n  SUPER_CAMPEONATO: {\n    CHALLENGE_SELECTION: 'CHALLENGE_SELECTION',\n    CONTENDER_SELECTION: 'CONTENDER_SELECTION',\n    BETS: 'BETS',\n    BATTLE: 'BATTLE',\n    RESULTS: 'RESULTS',\n  },\n  TA_NA_CARA: {\n    PROMPT: 'PROMPT',\n    ANSWERING: 'ANSWERING',\n    GUESSING: 'GUESSING',\n    REVEAL: 'REVEAL',\n  },\n  TEORIA_DE_CONJUNTOS: {\n    JUDGE_SELECTION: 'JUDGE_SELECTION',\n    ITEM_PLACEMENT: 'ITEM_PLACEMENT',\n    EVALUATION: 'EVALUATION',\n    REVEAL: 'REVEAL',\n  },\n  TESTEMUNHA_OCULAR: {\n    WITNESS_SELECTION: 'WITNESS_SELECTION',\n    QUESTION_SELECTION: 'QUESTION_SELECTION',\n    QUESTIONING: 'QUESTIONING',\n    TRIAL: 'TRIAL',\n  },\n  TESTE_DE_ELENCO: {\n    MOVIE_GENRE_SELECTION: 'MOVIE_GENRE_SELECTION',\n    ACTOR_SELECTION: 'ACTOR_SELECTION',\n    RESULT: 'RESULT',\n  },\n  TREVO_DA_SORTE: {\n    WORD_SELECTION: 'WORD_SELECTION',\n    CLOVER_WRITING: 'CLOVER_WRITING',\n    CLOVER_GUESSING: 'CLOVER_GUESSING',\n    RESULTS: 'RESULTS',\n  },\n  UE_SO_ISSO: {\n    WORD_SELECTION: 'WORD_SELECTION',\n    SUGGEST: 'SUGGEST',\n    COMPARE: 'COMPARE',\n    GUESS: 'GUESS',\n    VERIFY_GUESS: 'VERIFY_GUESS',\n    RESULT: 'RESULT',\n  },\n  VAMOS_AO_CINEMA: {\n    MOVIE_SELECTION: 'MOVIE_SELECTION',\n    MOVIE_ELIMINATION: 'MOVIE_ELIMINATION',\n    REVEAL: 'REVEAL',\n  },\n  VENDAVAL_DE_PALPITE: {\n    BOSS_SELECTION: 'BOSS_SELECTION',\n    SECRET_WORD_SELECTION: 'SECRET_WORD_SELECTION',\n    PLAYERS_CLUES: 'PLAYERS_CLUES',\n    CLUE_EVALUATIONS: 'CLUE_EVALUATIONS',\n  },\n  VINGATIVOS: {\n    UNKNOWN: 'UNKNOWN',\n  },\n  TEMPLATE: {\n    UNKNOWN: 'UNKNOWN',\n  },\n};\n","// Internal\nimport { getRandomItem, stringRemoveAccents } from './helpers';\n\n/**\n * Tells browser to speak out loud given sentence in given language in given volume\n * @param text\n * @param language\n * @param volume\n */\nexport function speak(\n  text: DualLanguageValue,\n  language: Language,\n  volume: number,\n  onEnd: GenericFunction = () => {},\n): void {\n  const utterance = new SpeechSynthesisUtterance(text[language]);\n  utterance.lang = language === 'pt' ? 'pt-BR' : 'en-US';\n  utterance.volume = volume;\n  utterance.addEventListener('end', onEnd);\n  window.speechSynthesis.speak(utterance);\n}\n\n/**\n * Give variety to the lobby greeting message\n * @param name\n * @returns\n */\nexport function getRandomWelcomeMessage(name: string): DualLanguageValue {\n  // Special flavia\n  if (stringRemoveAccents(name.toLowerCase()).startsWith('fla')) {\n    const options = [\n      {\n        pt: `A mais sexy de todas chegou! Bem-vinda, ${name}!`,\n        en: `Welcome, ${name}!`,\n      },\n      {\n        pt: `Fiu, fiu! ${name} chegou para abalar e sensualizar!`,\n        en: `Welcome, ${name}!`,\n      },\n      {\n        pt: `Olha só quem chegou! ${name}, a mais linda de todas!`,\n        en: `Welcome, ${name}!`,\n      },\n    ];\n\n    return getRandomItem(options);\n  }\n\n  const options = [\n    {\n      pt: `Bem-vindo, ${name}!`,\n      en: `Welcome, ${name}!`,\n    },\n    {\n      pt: 'Olha ele, ou ela, ou elix, aqui!',\n      en: 'Look at you! Ready to play!',\n    },\n    {\n      pt: 'Eba! Você entrou',\n      en: `Yay, you're in!`,\n    },\n    {\n      pt: `Saudações, ${name}!`,\n      en: `Greetings, ${name}!`,\n    },\n    {\n      pt: `${name} chegou para abalar essa geringonça!`,\n      en: `${name} is here!`,\n    },\n    {\n      pt: `Presente, presidente. ${name} está aqui, fessô!`,\n      en: `You are here, ${name}!`,\n    },\n    {\n      pt: 'O jogo vai ser muito mais sensual agora que você entrou',\n      en: `The game will be so much better now that you're here!`,\n    },\n    {\n      pt: `Olha quem decidiu dar as caras! Bem-vindo, ${name}!`,\n      en: `Look who decided to show up! Welcome, ${name}!`,\n    },\n    {\n      pt: `A festa começou! ${name} chegou!`,\n      en: `The party has started! ${name} is here!`,\n    },\n    {\n      pt: `Seja bem-vindo ao rolê, ${name}!`,\n      en: `Welcome to the fun, ${name}!`,\n    },\n    {\n      pt: `Você trouxe a energia boa, ${name}! Vamos lá!`,\n      en: `You brought the good vibes, ${name}! Let’s go!`,\n    },\n    {\n      pt: `Ah, que delícia! ${name} chegou para animar a galera!`,\n      en: `Oh, how wonderful! ${name} is here to spice things up!`,\n    },\n    {\n      pt: `Atenção, pessoal! O rei ou rainha ${name} chegou!`,\n      en: `Attention, everyone! King or Queen ${name} has arrived!`,\n    },\n    {\n      pt: `Ei, ${name}! Você trouxe o lanche? Porque a diversão já começou!`,\n      en: `Hey, ${name}! Did you bring snacks? Because the fun has already started!`,\n    },\n    {\n      pt: `Preparem-se! ${name} é a estrela do show!`,\n      en: `Get ready! ${name} is the star of the show!`,\n    },\n    {\n      pt: `Olha o povo! ${name} entrou e agora é só alegria!`,\n      en: `Look out, world! ${name} is here and it’s all fun from now on!`,\n    },\n    {\n      pt: `Parou tudo! ${name} chegou e agora o jogo vai bombar!`,\n      en: `Hold everything! ${name} has arrived, and now the game is about to blow up!`,\n    },\n  ];\n\n  return getRandomItem(options);\n}\n\nexport function getRandomPositiveReadyMessage(name: string): DualLanguageValue {\n  const options = [\n    {\n      pt: `Pronto! Aguarde os outros jogadores estarem prontos. Boa sorte, ${name}`,\n      en: `Done! Now wait for the other players. Good luck, ${name}`,\n    },\n    {\n      pt: 'Pronto! Agora é so esperar esses manés',\n      en: 'Done and Ready to play! Were you born ready?',\n    },\n    {\n      pt: 'Pronto! Cá entre nós, estou torcendo por você!',\n      en: 'Done! And can I tell you a secret? I’m rooting for you!',\n    },\n    {\n      pt: `Pronto! Que comece a diversão! Não se esqueça de respirar, ${name}!`,\n      en: `Ready! Let the fun begin! Don't forget to breathe, ${name}!`,\n    },\n    {\n      pt: 'Pronto! Agora é só esperar esses lagartixas chegarem!',\n      en: 'Ready! Now just waiting for those slowpokes to show up!',\n    },\n    {\n      pt: 'Pronto! Se você estiver tão empolgado quanto eu, vamos arrebentar!',\n      en: `Ready! If you're as excited as I am, we’re going to crush it!`,\n    },\n    {\n      pt: 'Pronto! Espero que você tenha trazido suas habilidades secretas!',\n      en: 'Ready! I hope you brought your secret skills with you!',\n    },\n    {\n      pt: 'Pronto! Estou mais ansioso que criança na véspera de Natal!',\n      en: 'Ready! I’m more excited than a kid on Christmas Eve!',\n    },\n    {\n      pt: `Pronto! Hora de mostrar quem manda! Boa sorte, ${name}!`,\n      en: `Ready! Time to show who’s boss! Good luck, ${name}!`,\n    },\n    {\n      pt: 'Pronto! Prepare-se para a aventura mais épica da sua vida!',\n      en: 'Ready! Get ready for the most epic adventure of your life!',\n    },\n  ];\n\n  return getRandomItem(options);\n}\n\nexport function getRandomNeutralReadyMessage(name: string): DualLanguageValue {\n  const options = [\n    {\n      pt: `Agora só resta rezar, ${name}, porque o jogo vai começar mesmo assim!`,\n      en: `Now all you have left is to pray ${name} because the game is starting anyway!`,\n    },\n    {\n      pt: 'Tudo bem. Não se preocupe em vencer, já que as chances são bem baixas.',\n      en: \"It’s alright. Don't worry too much about winning, there’s very little chance anyway.\",\n    },\n    {\n      pt: 'Ok, ok, ok. Respire fundo, e vamos lá!',\n      en: 'Okay, okay okay. Take deep breaths and let’s go!',\n    },\n    {\n      pt: `Relaxa, ${name}! O importante é se divertir... e perder!`,\n      en: `Relax, ${name}! The important thing is to have fun... and lose!`,\n    },\n    {\n      pt: 'Não se preocupe, a confusão faz parte do jogo!',\n      en: 'Don’t worry, confusion is part of the game!',\n    },\n    {\n      pt: 'Ok, sem regras, só instinto! Vamos ver no que dá!',\n      en: 'Okay, no rules, just instincts! Let’s see how this goes!',\n    },\n    {\n      pt: 'Quem precisa de regras? O jogo vai ficar mais interessante assim!',\n      en: 'Who needs rules? The game will be way more interesting this way!',\n    },\n    {\n      pt: 'Não tenha medo! O pior que pode acontecer é... bem, vamos descobrir!',\n      en: 'Don’t be scared! The worst that can happen is... well, let’s find out!',\n    },\n    {\n      pt: 'Vai ser divertido! E se não for, pelo menos temos histórias!',\n      en: 'It’ll be fun! And if not, at least we’ll have stories to tell!',\n    },\n    {\n      pt: `A única regra é... não há regras! Vamos nessa, ${name}!`,\n      en: `The only rule is... there are no rules! Let’s do this, ${name}!`,\n    },\n  ];\n\n  return getRandomItem(options);\n}\n\nexport function getRandomNegativeReadyMessage(name: string): DualLanguageValue {\n  const options = [\n    {\n      pt: `Vixi ${name}, se fudeu então, porque o jogo vai começar mesmo assim!`,\n      en: `Oh ${name}, you are screwed because the game is starting anyway!`,\n    },\n    {\n      pt: 'Que carai, eim. As regras foram explicadas super bem. Agora vai assim mesmo!',\n      en: 'W.T.F, the rules were so clear! Well, the game is starting anyway',\n    },\n    {\n      pt: 'Segura o tchan, amarra o tchan, segura o tchan-tchan-tchan-tchan-tchan. Estou cantando pra esquecer que você vai me decepcionar',\n      en: 'Oh my... let’s hope for the best!',\n    },\n    {\n      pt: `Olha só, ${name}. Se não entendeu as regras, é melhor segurar o choro!`,\n      en: `Look, ${name}. If you didn't get the rules, you better hold back those tears!`,\n    },\n    {\n      pt: `Uau, ${name}, você é um verdadeiro prodígio da confusão! Vamos lá!`,\n      en: `Wow, ${name}, you’re a true prodigy of confusion! Let’s do this!`,\n    },\n    {\n      pt: `Ah, não se preocupe, ${name}. A derrota vai ser tão engraçada quanto a sua falta de atenção!`,\n      en: `Oh, don’t worry, ${name}. Your loss is going to be as funny as your lack of focus!`,\n    },\n    {\n      pt: `Vish, ${name}, quem precisa de regras quando se tem uma boa dose de caos?`,\n      en: `Yikes, ${name}, who needs rules when you can have a good dose of chaos?`,\n    },\n    {\n      pt: 'Se você não entendeu nada, é melhor pedir ajuda a alguém... ou não!',\n      en: 'If you didn’t get anything, you might want to ask for help... or not!',\n    },\n    {\n      pt: 'Espero que você seja bom em improvisar, porque as regras não ajudaram!',\n      en: 'I hope you’re good at improvising because the rules didn’t help!',\n    },\n    {\n      pt: `Que lindo, ${name}. Você entrou na aventura sem saber o que está fazendo!`,\n      en: `How lovely, ${name}. You jumped into the adventure without knowing what you’re doing!`,\n    },\n  ];\n\n  return getRandomItem(options);\n}\n"],"names":["SignIn","onSuccess","useState","view","setView","className","src","logo","preview","checkedChildren","pt","en","unCheckedChildren","onChange","checked","SignInWithGoogle","SignInWithEmail","buttonProps","useMutation","mutationFn","signInWithGoogle","isPending","mutate","isError","direction","align","classNames","item","A","description","type","showIcon","size","onClick","loading","block","icon","Form","useForm","form","translate","useLanguage","showForgotPassword","setShowForgotPassword","signIn","getFieldValue","name","labelCol","span","wrapperCol","style","maxWidth","initialValues","remember","onFinish","autoComplete","Item","label","rules","required","message","help","Password","offset","htmlType","v","ResetPasswordForm","email","App","useApp","resetPassword","success","username","level","DebugOnly","children","div","dev","devOnly","useDevFeatures","isDebugEnabled","isDevEnv","DevButton","rest","BugFilled","AutoNextPhase","players","Object","values","every","player","ready","round","current","total","forceLastRound","autoTriggerTime","GameBanner","title","gameName","language","alt","PUBLIC_URL","BANNERS","fallback","GameStrip","width","stripWidth","showLogo","dualTranslate","logoHeight","backgroundHeight","minWidth","height","position","overflow","STRIPS","top","left","objectFit","img","LOGOS","transform","opacity","transition","animate","duration","repeat","Number","POSITIVE_INFINITY","HostButton","disabled","isLoading","useLoading","RocketOutlined","ghost","clsx","HostOnlyContainer","useHost","ButtonLabel","HostNextPhaseButton","withWaitingTimeBar","isHost","isKeyLoading","onGoToNextPhase","useHostActionRequest","actionName","successMessage","errorMessage","handleClick","action","HOST_API_ACTIONS","GO_TO_NEXT_PHASE","hasTimer","Boolean","useCountdown","autoStart","onExpire","timeLeft","isRunning","pause","resume","useEffect","getAnimationClass","PauseOutlined","PlayCircleOutlined","speed","infinite","HostOnlyButton","MetricHighlight","iconSize","iconPlacement","PhaseContainer","phase","allowedPhase","fullScreen","white","appearance","useGameAppearance","screenRef","useRef","baseClass","backgroundColorOverlay","backgroundColor","id","ref","PhaseAnnouncement","buttonText","currentRound","onClose","withoutTimer","unskippable","animationType","useTemporarilyHidePlayersBar","durationPerRound","isActive","setActive","isRemoved","setRemoved","onContinue","start","useKeyPressEvent","colorScheme","autoFocus","custom","SingleCloud","backgroundImage","CLOUDS","backgroundPositionX","cloudData","MultiCloud","index","CloudBackground","gameInfo","useGameInfoContext","cloudType","clouds","CloudTypeComponent","split","getCloudComponent","Title","motion","Typography","StepJoin","setStep","isAuthenticated","useCurrentUserContext","mutationKey","signInAsGuest","error","layoutId","initial","exit","S","JSON","stringify","DEV_NAMES","cacheNames","getRandomUniqueItemFromList","source","used","cache","randomItem","tries","includes","getRandomItem","mockPlayerName","AvatarSelection","setSelectedAvatar","selectedAvatar","userId","useToggle","open","setOpen","arrow","placement","content","AvatarOptions","trigger","onOpenChange","svg","viewBox","href","avatars","AVATARS","usedAvatars","useMemo","reduce","acc","avatarId","AVAILABLE_AVATAR_IDS","map","avatar","isUsed","Settings","hasImages","useGlobalLocalStorage","blurEnabled","setBlurEnabled","volume","setVolume","shape","InfoCircleOutlined","value","UsualAvatarsSelection","avatarsIds","randomName","undefined","StepInfo","currentUser","isGuest","info","names","at","setName","useLocalStorage","lsAvatarId","lsUsername","useGameMeta","gameId","useGlobalState","setUserId","setUsername","setUserAvatarId","notification","query","GAME_API","run","GAME_API_COMMON_ACTIONS","JOIN_GAME","playerName","playerAvatarId","response","data","localStorage","setItem","getKey","speak","getRandomWelcomeMessage","onError","e","console","useAddPlayer","hasPlayedBefore","games","nameOptions","length","options","trim","onSelect","placeholder","maxLength","tags","Paragraph","StepWaiting","setLoader","gameMeta","userAvatarId","HOST_API","LOCK_GAME","isLocked","onSettled","isLocking","numPlayers","keys","Text","min","JoinedPlayers","orientation","orderedPlayers","orderBy","delay","y","filter","sample","ease","LobbyRules","marginTop","PreviewGroup","RULES","countRender","rule","marginBottom","PhaseLobby","meta","useStep","step","localUsername","localAvatarId","resetGlobalState","PHASES","DEFAULT","LOBBY","AnimatePresence","layout","summary","state","PhasePlaceholder","PhaseRules","user","useUser","setIsAdminEnabled","useEffectOnce","useGameId","queryClient","useQueryClient","invalidateQueries","queryKey","onBeReady","useGameActionRequest","getRandomPositiveReadyMessage","onBeReadyIDK","getRandomNeutralReadyMessage","onBeReadyQue","getRandomNegativeReadyMessage","useMock","MAKE_ME_READY","Content","ruleClassName","actionsClassName","wrap","isReady","CheckCircleFilled","SmileFilled","MehFilled","danger","RobotFilled","PhaseSetup","SETUP","AnimatedGearIcon","PhaseTimerReset","goToNextStep","next","Promise","res","setTimeout","ReadyPlayersBar","readyText","readyTextPlural","hideNames","readyPlayers","push","notReadyPlayers","LikeFilled","join","TurnOrder","order","activePlayerId","reorderByUser","additionalInfoParser","orderList","reorder","playerId","Fragment","getAvatarColorById","ForwardFilled","WaitingRoom","instruction","WaitingRoomIcon","startWith","starterIndex","indexOf","slice","CollapsibleRule","panels","key","contained","items","PopoverRule","showLabel","ReadOutlined","RulesCarousel","createRef","prev","autoplay","autoplaySpeed","DoubleLeftOutlined","DoubleRightOutlined","RulesList","RulesModal","isVisible","setVisibility","onCloseModal","onCancel","footer","useGameState","docPath","subscribe","docRef","doc","firestore","useQuery","queryFn","getDoc","snapshot","unsubscribe","onSnapshot","refetch","useFirestoreDocument","isRefetching","count","print","PlayersStatusBar","sortPlayers","dot","color","SectionMeta","groupScore","SectionRankedPlayers","rankedPlayers","score","BlurOptions","blurCard","useBlurCards","baseUrl","useTDBaseUrl","fetch","json","aliens","cockroaches","scorpions","snakes","spiders","selected","setSelected","onUpdateSelected","prevState","target","selectedGroups","forEach","flat","SectionSettings","isAdmin","isAdminEnabled","toggleDevFeatures","s","GameInfoDrawer","isDrawerOpen","toggleDrawer","isSettingsOpen","toggleSettingsDrawer","navigate","useNavigate","SettingOutlined","closable","FireOutlined","RedirectSession","redirect","currentMilliseconds","Date","now","redirectAt","GAME_LIST","onOk","okText","cancelText","Session","gameCollection","getActiveComponent","setLanguage","isIdle","useIdle","warning","useIdleRedirect","SessionConfigWrapper","ActiveComponent","PageLayout","customTokens","gameAppearance","primaryColor","colorPrimary","colorLink","surfaceColor","colorBgContainer","useGetCustomTokens","theme","token","Step","forwardRef","announcement","fullWidth","fullHeight","getWaitingRoomInstruction","kind","StepSwitcher","conditions","waitingRoom","Array","isArray","TimerClock","minutes","seconds","AnimatedClockIcon","TimerBar","steps","strokeLinecap","props","status","percentage","percent","showInfo","TimedTimerBar","TimedTimerClock","timerProps","WaitingTime","privateTimeLeft","blurredCards","setBlurredCards","shouldBeBlurred","cardId","isBlurEnabled","setIsDebugEnabled","onBeforeCall","onAfterCall","payload","onMutate","func","timer","timeout","args","clearTimeout","apply","debounce","createdBy","whatToDo","requirements","runOnce","setRunOnce","USE_MOCKS","VIEWER_ID","startingStep","goToPreviousStep","library","process","Error","ignore","setShowPlayersBar","setUser","setIsReady","PLACEHOLDER_PLAYER","updatedAt","online","GAME_OVER","WAIT","ADEDANHX","ANSWERING","EVALUATION","RESULTS","ARTE_RUIM","DRAW","GALLERY","BOMBA_RELOGIO","ROLE_ASSIGNMENT","DECLARATION","EXAMINATION","RESULT","CINEGRAFISTAS_AMADORES","UNKNOWN","COMUNICACAO_ALIENIGENA","ALIEN_SELECTION","ALIEN_SEEDING","HUMAN_ASK","ALIEN_ANSWER","ALIEN_REQUEST","OFFERINGS","REVEAL","COMUNICACAO_DUO","ASKING_FOR_SOMETHING","DELIVER_SOMETHING","VERIFICATION","CONTADORES_HISTORIAS","STORY","CARD_PLAY","VOTING","RESOLUTION","CONTROLE_DE_ESTOQUE","GOOD_PLACEMENT","PLACEMENT_CONFIRMATION","FULFILLMENT","CRUZA_PALAVRAS","WORDS_SELECTION","CLUE_WRITING","GUESSING","DETETIVES_IMAGINATIVOS","SECRET_CLUE","DEFENSE","DILEMA_DOS_ESQUIADORES","DUETOS","PAIRING","ESPIAO_ENTRE_NOS","ASSIGNMENT","INVESTIGATION","ASSESSMENT","FINAL_ASSESSMENT","FILEIRA_DE_FATOS","ORDERING","GALERIA_DE_SONHOS","WORD_SELECTION","DREAMS_SELECTION","CRIMES_HEDIONDOS","CRIME_SELECTION","SCENE_MARKING","INSTRUMENTOS_CODIFICADOS","LABIRINTO_SECRETO","MAP_BUILDING","PATH_FOLLOWING","LINHAS_CRUZADAS","PROMPT_SELECTION","DRAWING","NAMING","PRESENTATION","MEGAMIX","SEEDING","TRACK","MENTE_COLETIVA","QUESTION_SELECTION","EVERYBODY_WRITES","COMPARE","MESMICE","OBJECT_FEATURE_ELIMINATION","NA_RUA_DO_MEDO","TRICK_OR_TREAT","STREET_END","NAO_SOU_ROBO","CARD_SELECTION","ARE_YOU_A_ROBOT","NAUFRAGOS","ONDA_TELEPATICA","DIAL_CLUE","GUESS","PALHETA_DE_CORES","PLANEJAMENTO_URBANO","PLANNING","PLACING","POLEMICA_DA_VEZ","TOPIC_SELECTION","REACT","PORTA_DOS_DESESPERADOS","BOOK_POSSESSION","DOOR_CHOICE","QUEM_NAO_MATA","TARGETING","STANDOFF","DUEL","QUEM_SOU_EU","CHARACTER_FILTERING","CHARACTER_DESCRIPTION","RETRATO_FALADO","COMPOSITE_SKETCH","SINAIS_DE_ALERTA","SONHOS_PESADELOS","DREAM_TELLING","MATCHING","SUPER_CAMPEONATO","CHALLENGE_SELECTION","CONTENDER_SELECTION","BETS","BATTLE","TA_NA_CARA","PROMPT","TEORIA_DE_CONJUNTOS","JUDGE_SELECTION","ITEM_PLACEMENT","TESTEMUNHA_OCULAR","WITNESS_SELECTION","QUESTIONING","TRIAL","TESTE_DE_ELENCO","MOVIE_GENRE_SELECTION","ACTOR_SELECTION","TREVO_DA_SORTE","CLOVER_WRITING","CLOVER_GUESSING","UE_SO_ISSO","SUGGEST","VERIFY_GUESS","VAMOS_AO_CINEMA","MOVIE_SELECTION","MOVIE_ELIMINATION","VENDAVAL_DE_PALPITE","BOSS_SELECTION","SECRET_WORD_SELECTION","PLAYERS_CLUES","CLUE_EVALUATIONS","VINGATIVOS","TEMPLATE","text","onEnd","utterance","SpeechSynthesisUtterance","lang","addEventListener","window","speechSynthesis","stringRemoveAccents","toLowerCase","startsWith"],"sourceRoot":""}