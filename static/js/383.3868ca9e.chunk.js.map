{"version":3,"file":"static/js/383.3868ca9e.chunk.js","mappings":"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","sources":["components/cards/Card.tsx","components/cards/FloatingHand.tsx","hooks/useBlurCards.ts","components/cards/ImageBlurButton.tsx","components/cards/ImageBlurButtonContainer.tsx","components/cards/ImageCard.tsx","components/cards/ImageCardHand.tsx","components/cards/ImageCardBack.tsx","components/cards/ImageCardPreloadHand.tsx","components/cards/ImageCardSelectButton.tsx","components/icons/HandOfCardsIcon.tsx","components/icons/UserStatsIcon.tsx","hooks/useCardWidth.ts"],"sourcesContent":["import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Utils\nimport { getColorFromLetter } from 'utils/helpers';\n\ntype CardProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  header?: string;\n  footer?: string;\n  color?: string;\n  size?: 'small' | 'medium' | 'large';\n  randomColor?: boolean;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  headerClassName?: string;\n  footerClassName?: string;\n};\nexport const Card = ({\n  children,\n  header = 'Carta',\n  footer,\n  color = 'none',\n  size = 'medium',\n  randomColor = false,\n  className = '',\n  headerClassName = '',\n  footerClassName = '',\n}: CardProps) => {\n  const baseClass = 'card';\n\n  const bgColor = randomColor\n    ? getColorFromLetter(\n        typeof children === 'string'\n          ? children[0].toUpperCase()\n          : header !== 'Carta'\n          ? header[0].toUpperCase()\n          : 'X'\n      )\n    : color;\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, className)}>\n      <span\n        className={clsx(`${baseClass}__header`, `color-background--${bgColor}`, headerClassName)}\n        style={color.startsWith('#') ? { backgroundColor: color } : {}}\n      >\n        {header}\n      </span>\n      <span className={`${baseClass}__text`}>{children}</span>\n      {footer && <span className={clsx(`${baseClass}__footer`, footerClassName)}>{footer}</span>}\n    </div>\n  );\n};\n","import clsx from 'clsx';\nimport { ReactNode, useState } from 'react';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Translate } from 'components/language';\nimport { IconAvatar } from 'components/icons/IconAvatar';\nimport { HandOfCardsIcon } from 'components/icons/HandOfCardsIcon';\nimport { UserStatsIcon } from 'components/icons/UserStatsIcon';\n\ntype FloatingHandProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  type?: 'hand' | 'stats';\n  subtitle?: any;\n};\n\nexport function FloatingHand({ children, subtitle = '', type = 'hand' }: FloatingHandProps) {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const { translate } = useLanguage();\n\n  return (\n    <>\n      <div className=\"floating-hand-added-white-space\"></div>\n      <div\n        className={clsx('floating-hand', isExpanded && 'floating-hand--expanded')}\n        onMouseOver={() => setIsExpanded(true)}\n        onMouseLeave={() => setIsExpanded(false)}\n      >\n        <span className=\"floating-hand__label\">\n          <IconAvatar\n            icon={type === 'hand' ? <HandOfCardsIcon /> : <UserStatsIcon />}\n            size={isExpanded ? 40 : 60}\n            className=\"floating-hand__icon\"\n            alt={translate('MÃ£o de Cartas', 'Hand of Cards')}\n          />\n          <Translate pt=\"Passe o mouse para expandir \" en=\"Hover to expand \" />\n          {subtitle}\n        </span>\n        {children}\n      </div>\n    </>\n  );\n}\n","import { useEffect } from 'react';\nimport { useEffectOnce } from 'react-use';\nimport { useGlobalState } from './useGlobalState';\nimport { useLocalStorage } from './useLocalStorage';\n\ntype UseBlueCards = {\n  blurredCards: BooleanDictionary;\n  shouldBeBlurred: (cardId?: string) => boolean;\n  blurCard: (cardId: string) => void;\n  isBlurEnabled: boolean;\n};\n\n/**\n * Add card ids to the blur dictionary\n * @returns the dictionary of blurred ids, the function to add a blur card, the function to check if a card should be blurred, the flag indicating if the feature was enabled by the user\n */\nexport function useBlurCards(): UseBlueCards {\n  const [blurredCards, setBlurredCards] = useGlobalState('blurredCards');\n  const [blurEnabled] = useGlobalState('blurEnabled');\n  const [getLocalStorage, setLocalStorage] = useLocalStorage();\n\n  const blurCard = (cardId: string) => {\n    setBlurredCards((s: BooleanDictionary) => ({\n      ...s,\n      [cardId]: !s?.[cardId] ?? true,\n    }));\n  };\n\n  const shouldBeBlurred = (cardId?: string) => {\n    return Boolean(cardId && blurEnabled && blurredCards?.[cardId]);\n  };\n\n  useEffectOnce(() => {\n    setBlurredCards(getLocalStorage('blurredCards') ?? {});\n  });\n\n  useEffect(() => {\n    if (Object.keys(blurredCards ?? {}).length) {\n      setLocalStorage({ blurredCards: blurredCards ?? {} });\n    }\n  }, [blurredCards, setLocalStorage]);\n\n  return {\n    blurredCards,\n    shouldBeBlurred,\n    blurCard,\n    isBlurEnabled: blurEnabled,\n  };\n}\n","// Ant Design Resources\nimport { Button, Tooltip } from 'antd';\nimport { EyeInvisibleOutlined } from '@ant-design/icons';\n// Utils\nimport { useBlurCards } from 'hooks/useBlurCards';\n// Components\nimport { Translate } from 'components/language';\n\ntype ImageBlurButtonProps = {\n  cardId: string;\n};\n\nexport function ImageBlurButton({ cardId }: ImageBlurButtonProps) {\n  const { blurCard, isBlurEnabled } = useBlurCards();\n\n  return isBlurEnabled ? (\n    <Tooltip\n      placement=\"top\"\n      title={\n        <Translate\n          pt=\"Aperte o botÃ£o para embaÃ§ar a foto caso vocÃª tenha alguma fobia\"\n          en=\"Use this button to blur the image in case of any phobia\"\n        />\n      }\n    >\n      <Button ghost onClick={() => blurCard(cardId)} size=\"small\" className=\"image-blur-button\">\n        <EyeInvisibleOutlined /> <Translate pt=\"Credo\" en=\"Blur\" />\n      </Button>\n    </Tooltip>\n  ) : (\n    <></>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Components\nimport { ImageBlurButton } from './ImageBlurButton';\n\ninterface ImageBlurButtonContainerProps extends React.HTMLAttributes<HTMLDivElement> {\n  cardId: string;\n  /**\n   * The content the component is wrapping\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n}\n\nexport function ImageBlurButtonContainer({\n  cardId,\n  children,\n  className = '',\n  ...rest\n}: ImageBlurButtonContainerProps) {\n  return (\n    <div className={clsx('image-blur-button-container', className)} {...rest}>\n      {children}\n      <ImageBlurButton cardId={cardId} />\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Image } from 'antd';\n// Constants\nimport { PUBLIC_URL } from 'utils/constants';\n// Assets\nimport placeholder from 'assets/images/placeholder.jpg';\n// Hooks\nimport { useBlurCards } from 'hooks/useBlurCards';\n\ntype ImageCardProps = {\n  imageId: string;\n  size?: 'small' | 'medium' | 'large';\n  cardWidth?: number;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  preview?: Boolean;\n  previewImageId?: string;\n};\nexport const ImageCard = ({\n  imageId,\n  size = 'medium',\n  cardWidth = 200,\n  className = '',\n  preview = true,\n  previewImageId = '',\n}: ImageCardProps) => {\n  const { shouldBeBlurred } = useBlurCards();\n\n  const baseClass = 'image-card';\n\n  const fallbackName = `placeholder-${imageId[imageId.length - 1]}`;\n\n  const imageURL = imageId.replace(/-/g, '/');\n\n  const isBlurred = shouldBeBlurred(imageId);\n\n  const booleanPreviewConfig =\n    preview && !isBlurred\n      ? {\n          maskClassName: `${baseClass}__preview-mask`,\n        }\n      : false;\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, isBlurred && `${baseClass}--blur`, className)}>\n      <Image\n        width={cardWidth}\n        src={`${process.env.REACT_APP_TD_IMAGES_URL}${imageURL}.jpg`}\n        placeholder={<Image preview={false} src={placeholder} width={cardWidth} />}\n        fallback={`${PUBLIC_URL.CARDS}${fallbackName}.jpg`}\n        preview={\n          Boolean(previewImageId)\n            ? {\n                src: `${process.env.REACT_APP_TD_IMAGES_URL}${previewImageId.replace(/-/g, '/')}.jpg`,\n              }\n            : booleanPreviewConfig\n        }\n      />\n    </div>\n  );\n};\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Image } from 'antd';\nimport { DownSquareOutlined } from '@ant-design/icons';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { ImageBlurButton, ImageCard } from '.';\n\ntype ImageCardHandProps = {\n  hand: string[];\n  onSelectCard?: GenericFunction;\n  selectButtonLabel?: string;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  selectButtonClass?: string;\n  sizeRatio?: number;\n  cardSize?: number;\n  minCardSize?: number;\n  disabledSelectButton?: boolean;\n};\n\nexport function ImageCardHand({\n  hand = [],\n  onSelectCard,\n  selectButtonLabel,\n  className = '',\n  selectButtonClass = '',\n  sizeRatio = 8,\n  cardSize,\n  minCardSize = 80,\n  disabledSelectButton = false,\n}: ImageCardHandProps) {\n  const { translate } = useLanguage();\n  // Prefers cardSize otherwise calculates width based on screen and ratio\n  const cardWidth = useCardWidth(sizeRatio, 32, minCardSize);\n\n  return (\n    <Image.PreviewGroup>\n      <div className={clsx('image-card-hand', className)}>\n        {hand.map((cardId) => {\n          return (\n            <div key={`hand-${cardId}`} className=\"image-card-hand__card-container\">\n              {Boolean(onSelectCard) && (\n                <Button\n                  icon={<DownSquareOutlined />}\n                  className={selectButtonClass}\n                  onClick={() => onSelectCard!(cardId)}\n                  size=\"small\"\n                  disabled={disabledSelectButton}\n                >\n                  {translate('Selecionar', 'Select', selectButtonLabel)}\n                </Button>\n              )}\n              <ImageCard imageId={cardId} cardWidth={cardSize || cardWidth} />\n              <ImageBlurButton cardId={cardId} />\n            </div>\n          );\n        })}\n      </div>\n    </Image.PreviewGroup>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Image } from 'antd';\n// Resources\nimport placeholder from 'assets/images/placeholder.jpg';\nimport { useBlurCards } from 'hooks/useBlurCards';\n\ntype ImageCardBackProps = {\n  size?: 'small' | 'medium' | 'large';\n  cardWidth?: number | string;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  previewImageId?: string;\n};\n\nexport const ImageCardBack = ({\n  size = 'medium',\n  cardWidth = 200,\n  className = '',\n  previewImageId,\n}: ImageCardBackProps) => {\n  const baseClass = 'image-card-back';\n  const { shouldBeBlurred } = useBlurCards();\n  const isBlurred = shouldBeBlurred(previewImageId);\n  const imageURL = (previewImageId ?? '').replace(/-/g, '/');\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, className)}>\n      <Image\n        width={cardWidth}\n        src={placeholder}\n        preview={\n          Boolean(previewImageId)\n            ? !isBlurred\n              ? {\n                  maskClassName: 'image-card__preview-mask',\n                  src: `${process.env.REACT_APP_TD_IMAGES_URL}${imageURL}.jpg`,\n                }\n              : false\n            : false\n        }\n      />\n    </div>\n  );\n};\n","// Components\nimport { ImageCard } from './ImageCard';\n\ntype ImageCardPreloadHandProps = {\n  hand: string[];\n};\nexport function ImageCardPreloadHand({ hand }: ImageCardPreloadHandProps) {\n  if (!hand) return <span></span>;\n  return (\n    <div className=\"image-card-preload-hand\">\n      {hand.map((cardId) => (\n        <ImageCard imageId={cardId} cardWidth={1} key={`pre-load-${cardId}`} preview={false} />\n      ))}\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Button } from 'antd';\nimport { UpCircleOutlined } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\n\ntype ImageCardSelectButtonProps = {\n  isSelected?: boolean;\n  cardId: ImageCard;\n  onClick: GenericFunction;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  selectLabel?: string;\n  deselectLabel?: string;\n};\n\nexport function ImageCardSelectButton({\n  onClick,\n  cardId,\n  selectLabel,\n  deselectLabel,\n  isSelected = false,\n}: ImageCardSelectButtonProps) {\n  return (\n    <Button\n      shape=\"round\"\n      size=\"small\"\n      ghost={!isSelected}\n      className=\"image-card-select-button\"\n      onClick={() => onClick(cardId)}\n    >\n      <UpCircleOutlined />\n      {isSelected ? (\n        <Translate pt=\"Desmarcar\" en=\"Deselect\" custom={deselectLabel} />\n      ) : (\n        <Translate pt=\"Selecionar\" en=\"Select\" custom={selectLabel} />\n      )}\n      <UpCircleOutlined />\n    </Button>\n  );\n}\n","export function HandOfCardsIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffcbbe\"\n        d=\"M264.64 146.27c-.48.74-.94 1.49-1.4 2.27-14.58 24.74 6.45 45.81 6.45 45.81l42.82 42.84c-13.18 49.55 10.6 77.06 10.6 77.06l-14.15 4.26L208.86 398l37 37a133.18 133.18 0 0066.33 36.05 82.51 82.51 0 0141.1 22.32l8.19 8.19 129.21-129.24z\"\n      ></path>\n      <path\n        fill=\"#eaac9d\"\n        d=\"M373.41 473.24a82.28 82.28 0 00-41.11-22.32 133.16 133.16 0 01-66.35-36.06l-22.76-22.77 68.17-70.43s11.76-7.41 19.45.55l-7.69-8-14.15 4.26-77.67 61.73-22.45 17.8 37 37a133.24 133.24 0 0066.34 36.05 82.49 82.49 0 0141.11 22.32l8.19 8.19 20.13-20.13z\"\n      ></path>\n      <path\n        fill=\"#f1f4f6\"\n        d=\"M410.19 282.56L251.6 330.32a13.52 13.52 0 01-16.84-9.05L159.19 70.4a13.52 13.52 0 019.05-16.84L326.9 5.81a13.52 13.52 0 0116.84 9.05l75.52 250.86a13.5 13.5 0 01-9.07 16.84z\"\n      ></path>\n      <path\n        fill=\"#dfeaef\"\n        d=\"M326.9 5.81L313.11 10l62.45 207.4a58.41 58.41 0 01-39.11 72.79l-101.82 30.66.13.42a13.52 13.52 0 0016.84 9.05l158.59-47.76a13.5 13.5 0 009-16.84L343.74 14.86a13.53 13.53 0 00-16.84-9z\"\n      ></path>\n      <path\n        fill=\"#da9438\"\n        d=\"M362.93 169.84l4.87 38a42.58 42.58 0 01-29.95 46.17 29.27 29.27 0 01-22.27-2.24 1.51 1.51 0 00-2.05.61 29.21 29.21 0 01-17.34 14.2 42.56 42.56 0 01-50.46-21.95l-16.94-34.41a36.25 36.25 0 0149.67-47.95 12.24 12.24 0 0016.57-5 36.25 36.25 0 0167.89 12.55z\"\n      ></path>\n      <path fill=\"#d80a61\" d=\"M364.19 179.56l-1.24-9.72a36.1 36.1 0 00-6.76-16.94z\"></path>\n      <path\n        fill=\"#86f1a7\"\n        d=\"M250.87 159.5a36.2 36.2 0 0127.6 2.77 12.24 12.24 0 0016.57-5 36.25 36.25 0 0159.45-6.46l-19.18-63.7a3.21 3.21 0 00-4-2.14l-123 37a3.19 3.19 0 00-2.15 4l19.19 63.72a36.21 36.21 0 0125.52-30.19zm116.93 48.38a42.58 42.58 0 01-29.95 46.17 29.27 29.27 0 01-22.27-2.24 1.51 1.51 0 00-2.05.61 29.21 29.21 0 01-17.34 14.16 42.56 42.56 0 01-50.46-21.95l-10-20.23 21.3 70.74a3.2 3.2 0 004 2.14l123-37a3.21 3.21 0 002.14-4l-21.29-70.74z\"\n      ></path>\n      <path\n        fill=\"#64b57d\"\n        d=\"M386.19 256.26L377.72 228a58.34 58.34 0 01-8.2 36.65l14.57-4.38a3.21 3.21 0 002.14-4z\"\n      ></path>\n      <path d=\"M329.81 80l-123 37a8.45 8.45 0 00-5.62 10.5l18.88 62.71a41.4 41.4 0 004.08 22.32l6.8 13.8 21.17 70.32a8.43 8.43 0 0010.5 5.64l123-37a8.45 8.45 0 005.64-10.51l-21.17-70.32-1.95-15.26a41.42 41.42 0 00-8.95-20.89L340.32 85.6a8.45 8.45 0 00-10.51-5.6zm-89.3 142.21c0-.06 0-.11-.07-.16l-6.95-14.1a31 31 0 0142.5-41 17.49 17.49 0 0023.66-7.12 31 31 0 0158.09 10.74c2.75 21.51 1.79 14.22 2 15.76l2.86 22.29A37.23 37.23 0 01336.34 249a23.81 23.81 0 01-18.28-1.84 6.76 6.76 0 00-9.14 2.76 23.9 23.9 0 01-14.23 11.62 37.21 37.21 0 01-44.25-19.25zm90.37-131.6l14 46.44a41.47 41.47 0 00-54.24 17.45l-3.95-13.12a14.45 14.45 0 013.94-14.75 5.231 5.231 0 10-7.18-7.61 24.84 24.84 0 00-6.78 25.38l4 13.12a41.48 41.48 0 00-54.87 15.4l-14-46.45 119.08-35.9zM261.5 291.69l-9-29.76a47.69 47.69 0 0045.17 9.67 34.29 34.29 0 0018.6-13.66 34.21 34.21 0 0023 1.12 47.63 47.63 0 0032.32-33l9 29.76-119.09 35.87z\"></path>\n      <path d=\"M420.07 282.38a18.82 18.82 0 001.5-1.84l.08-.11.48-.72.23-.37.24-.41c2-3.54 3.23-8.39 1.72-14.75l-2.21-7.18-3.08-10.21-17.84-59.21-3.07-10.21-6-19.94-3.21-10.65-3.68-12.21-27.5-91.36-9-29.86A18.77 18.77 0 00325.39.8l-80.1 24.11a5.24 5.24 0 103 10l80.1-24.12a8.29 8.29 0 0110.32 5.55l75.52 250.86a8.29 8.29 0 01-5.54 10.32L340.77 298l-25.25 7.6-65.43 19.7a8.29 8.29 0 01-10.32-5.54L164.25 68.89a8.29 8.29 0 015.54-10.32L224.92 42a5.24 5.24 0 00-3-10l-55.13 16.6a18.77 18.77 0 00-12.6 23.31l75.53 250.87a18.77 18.77 0 0023.36 12.55l41.62-12.53 14.23-4.29 10-3 17.65-5.32 10-3 23.78-7.19 9-2.71 35.17-10.59a20.2 20.2 0 005.54-4.32z\"></path>\n      <path\n        fill=\"#f1f4f6\"\n        d=\"M319.49 304.06l-130 102.65a13.52 13.52 0 01-19-2.23L8.19 198.86a13.52 13.52 0 012.23-19l130-102.65a13.51 13.51 0 0119 2.23l162.3 205.63a13.54 13.54 0 01-2.23 18.99z\"\n      ></path>\n      <path\n        fill=\"#dfeaef\"\n        d=\"M140.38 77.22l-11.3 8.92 134.25 170a58.45 58.45 0 01-9.65 82.08l-83.49 65.91.27.35a13.52 13.52 0 0019 2.23l130-102.65a13.54 13.54 0 002.23-19L159.36 79.45a13.51 13.51 0 00-19-2.23z\"\n      ></path>\n      <path\n        fill=\"#f4dd45\"\n        d=\"M234.11 216.57l18.5 33.6a42.57 42.57 0 01-10.91 53.93 29.21 29.21 0 01-21.51 6.09 1.52 1.52 0 00-1.68 1.33 29.19 29.19 0 01-10.92 19.53 42.55 42.55 0 01-55-1.89l-28.4-25.79a36.25 36.25 0 0128.61-62.83 12.25 12.25 0 0013.58-10.73 36.24 36.24 0 0167.75-13.24z\"\n      ></path>\n      <path fill=\"#d80a61\" d=\"M238.84 225.15l-4.73-8.58a36 36 0 00-12.52-13.27z\"></path>\n      <path\n        fill=\"#7ad0df\"\n        d=\"M126.08 248.09a36.22 36.22 0 0126.7-7.55 12.25 12.25 0 0013.58-10.73A36.25 36.25 0 01219.28 202l-41.23-52.22a3.2 3.2 0 00-4.5-.53L72.72 228.84a3.21 3.21 0 00-.53 4.5l41.24 52.22a36.2 36.2 0 0112.65-37.47zm126.53 2.08a42.57 42.57 0 01-10.91 53.93 29.21 29.21 0 01-21.51 6.09 1.52 1.52 0 00-1.68 1.33 29.19 29.19 0 01-10.92 19.53 42.55 42.55 0 01-55-1.89L135.88 314l45.78 58a3.2 3.2 0 004.49.53l100.84-79.64a3.21 3.21 0 00.53-4.5l-45.78-58z\"\n      ></path>\n      <path\n        fill=\"#64abb8\"\n        d=\"M287.52 288.4l-18.33-23.18a58.36 58.36 0 015.83 37.1l11.94-9.43a3.2 3.2 0 00.53-4.49z\"\n      ></path>\n      <path d=\"M170.31 145.12L69.48 224.74a8.44 8.44 0 00-1.4 11.84L108.66 288a41.35 41.35 0 0012 19.26l11.38 10.34 45.51 57.64a8.45 8.45 0 0011.85 1.4L290.19 297a8.44 8.44 0 001.39-11.85l-45.51-57.64L238.7 214a41.46 41.46 0 00-16-16.13l-40.51-51.36a8.44 8.44 0 00-11.88-1.39zm-30.85 165.06l-.13-.11-11.64-10.57a31 31 0 0124.5-53.77 17.49 17.49 0 0019.39-15.31 31 31 0 0158-11.33c10.45 19 6.89 12.56 7.66 13.92l10.84 19.68a37.22 37.22 0 01-9.57 47.3 23.84 23.84 0 01-17.68 5 6.75 6.75 0 00-7.49 5.92 23.89 23.89 0 01-9 16 37.22 37.22 0 01-48.23-1.67zm35.73-155.59l30.06 38.07a41.47 41.47 0 00-44 36.15l-8.49-10.75a14.45 14.45 0 01-1.75-15.17 5.24 5.24 0 00-9.48-4.45 24.87 24.87 0 003 26.1l8.49 10.75a41.49 41.49 0 00-45.37 34.47l-30.09-38.07 97.63-77.1zm9.31 212.55l-19.26-24.39a47.67 47.67 0 0045.56-7.59 34.22 34.22 0 0012.28-19.53 34.24 34.24 0 0021.85-7.42 47.66 47.66 0 0017.95-42.56L282.19 290l-97.64 77.1z\"></path>\n      <path d=\"M328.59 300.27a22 22 0 00.72-2.26v-.13c.07-.28.13-.57.18-.85s.06-.29.08-.43.05-.31.07-.46c.58-4-.07-9-3.81-14.35l-4.66-5.9-6.61-8.37L276.19 219l-6.61-8.37-12.9-16.34-6.9-8.74-7.9-10-59.12-74.87-19.29-24.47a18.77 18.77 0 00-26.34-3.1L71.48 125a5.24 5.24 0 006.49 8.22l65.65-51.84a8.3 8.3 0 0111.64 1.37l162.35 205.56a8.29 8.29 0 01-1.37 11.69l-55.69 44-20.68 16.34-53.63 42.26a8.29 8.29 0 01-11.64-1.37L12.25 195.61A8.29 8.29 0 0113.61 184l45.19-35.7a5.233 5.233 0 10-6.49-8.21L7.13 175.76a18.77 18.77 0 00-3.1 26.34l162.36 205.62a18.77 18.77 0 0026.33 3.1l34.11-26.94 11.67-9.21 8.21-6.48 14.48-11.43 8.22-6.48 19.44-15.35 7.37-5.82 28.83-22.76a20.26 20.26 0 003.54-6.08z\"></path>\n      <path d=\"M63.25 187.7l-.42-20.7a5.141 5.141 0 00-10.28.21l.37 17.79-17.2-4.47a5.164 5.164 0 10-2.58 10l20 5.2.42 20.66a5.14 5.14 0 005.25 5 5.06 5.06 0 003.07-1.1 5.12 5.12 0 002-4.14l-.36-17.76 17.19 4.47a5.14 5.14 0 102.59-9.95z\"></path>\n      <path\n        fill=\"#f1f4f6\"\n        d=\"M345.38 281.81l-147 76.3a13.51 13.51 0 01-18.22-5.77L59.44 119.81a13.53 13.53 0 015.75-18.23l147-76.3a13.51 13.51 0 0118.22 5.77l120.78 232.53a13.53 13.53 0 01-5.81 18.23z\"\n      ></path>\n      <path\n        fill=\"#dfeaef\"\n        d=\"M212.24 25.28l-12.78 6.63 99.79 192.28A58.43 58.43 0 01274.3 303l-94.38 49 .21.39a13.51 13.51 0 0018.22 5.77l147-76.3a13.53 13.53 0 005.84-18.28L230.46 31.05a13.51 13.51 0 00-18.22-5.77z\"\n      ></path>\n      <path\n        fill=\"#da387d\"\n        d=\"M278.03 179.79l11.83 36.49a42.58 42.58 0 01-20.88 50.91 29.27 29.27 0 01-22.3 1.92 1.51 1.51 0 00-1.9 1 29.21 29.21 0 01-14.41 17.12A42.56 42.56 0 01176.72 275l-23-30.68A36.25 36.25 0 01193.63 188a12.24 12.24 0 0015.36-8 36.25 36.25 0 0169-.24z\"\n      ></path>\n      <path fill=\"#d80a61\" d=\"M281.05 189.11l-3-9.32a36 36 0 00-9.8-15.38z\"></path>\n      <path\n        fill=\"#8078bc\"\n        d=\"M165.99 190.39a36.25 36.25 0 0127.64-2.39 12.24 12.24 0 0015.36-8 36.26 36.26 0 0157.2-17.33l-30.65-59.06a3.19 3.19 0 00-4.31-1.36l-114.04 59.18a3.19 3.19 0 00-1.36 4.31l30.65 59.07a36.22 36.22 0 0119.51-34.42zm123.87 25.89a42.58 42.58 0 01-20.88 50.91 29.27 29.27 0 01-22.3 1.92 1.51 1.51 0 00-1.9 1 29.21 29.21 0 01-14.41 17.12A42.56 42.56 0 01176.72 275l-13.53-18 34 65.56a3.2 3.2 0 004.31 1.37l114-59.18a3.2 3.2 0 001.36-4.32l-34-65.57z\"\n      ></path>\n      <path\n        fill=\"#6b61b1\"\n        d=\"M316.93 260.4l-13.6-26.21a58.34 58.34 0 01-1.27 37.54l13.51-7a3.2 3.2 0 001.36-4.32z\"\n      ></path>\n      <path d=\"M228.83 97.6l-114 59.18a8.45 8.45 0 00-3.6 11.37l30.17 58.13a41.42 41.42 0 008.14 21.18l9.23 12.3 33.83 65.18a8.45 8.45 0 0011.37 3.61l114-59.19a8.44 8.44 0 003.6-11.37l-33.83-65.18-4.74-14.63a41.38 41.38 0 00-12.64-18.85l-30.17-58.13a8.46 8.46 0 00-11.36-3.6zm-61.41 156.29l-.1-.14-9.44-12.57A31 31 0 01192.05 193a17.49 17.49 0 0021.93-11.38 31 31 0 0159.07-.2c6.68 20.62 4.4 13.63 4.9 15.11l6.93 21.37a37.22 37.22 0 01-18.31 44.65 23.82 23.82 0 01-18.31 1.58 6.75 6.75 0 00-8.47 4.4 23.9 23.9 0 01-11.83 14.06 37.21 37.21 0 01-47.05-10.73zm64.43-146.06l22.34 43.05a41.47 41.47 0 00-50.08 27.19l-6.31-12.15a14.46 14.46 0 011.14-15.23 5.23 5.23 0 10-8.46-6.15 24.85 24.85 0 00-2 26.2l6.31 12.15a41.5 41.5 0 00-51.06 25.3l-22.34-43.05 110.42-57.31zm-30.92 210.49l-14.32-27.59a47.65 47.65 0 0046.17 1.14A34.22 34.22 0 00248.53 275a34.16 34.16 0 0022.86-3.17 47.62 47.62 0 0025.64-38.41L311.35 261l-110.42 57.32z\"></path>\n      <path d=\"M355.03 279.8a19 19 0 001.13-2.08l.06-.13c.12-.26.23-.53.34-.8s.11-.27.16-.41.11-.29.16-.44c1.32-3.85 1.62-8.84-1-14.81l-3.46-6.66-5-9.47-28.49-54.9-4.92-9.47-9.59-18.48-5.12-9.87-5.88-11.28-43.94-84.68-14.37-27.68a18.77 18.77 0 00-25.28-8l-74.25 38.53a5.233 5.233 0 104.82 9.29l74.25-38.54a8.3 8.3 0 0111.17 3.54L346.5 266a8.29 8.29 0 01-3.53 11.17l-63 32.69L256.59 322l-60.65 31.48a8.3 8.3 0 01-11.17-3.54L64.09 117.4a8.29 8.29 0 013.53-11.17l51.1-26.52a5.233 5.233 0 10-4.82-9.29L62.8 96.94a18.76 18.76 0 00-8 25.28l120.68 232.53a18.77 18.77 0 0025.28 8l38.58-20 13.19-6.85 9.29-4.82 16.37-8.5 9.29-4.82 22-11.41 8.31-4.35 32.6-16.92a20 20 0 004.64-5.28z\"></path>\n      <path d=\"M97.93 99.76a19.66 19.66 0 00-8.38 26.48l5.29 10.2a19.64 19.64 0 1034.86-18.1l-5.29-10.2a19.66 19.66 0 00-26.48-8.38zm22.65 23.32a9.36 9.36 0 01-16.61 8.62l-5.3-10.2a9.36 9.36 0 1116.61-8.62z\"></path>\n      <path\n        fill=\"#ffcbbe\"\n        d=\"M360.32 330.89a70.09 70.09 0 01-47.8-66.46v-27.24l-8-8-34.83-34.84A38.45 38.45 0 11324.06 140l125.13 125.1a55 55 0 0116.08 38.9v26.31a40.16 40.16 0 0011.74 28.38l13.68 13.67\"\n      ></path>\n      <path\n        fill=\"#eaac9d\"\n        d=\"M401.19 343.9l-40.91-13a70.11 70.11 0 01-47.8-66.46v-27.25l-8-8-34.79-34.84a38.45 38.45 0 0141.14-63 38.45 38.45 0 00-13.23 63l34.81 34.82 8 8v27.25a70.11 70.11 0 0047.78 66.48z\"\n      ></path>\n      <path\n        fill=\"none\"\n        d=\"M307.9 285.42a77.79 77.79 0 01-2.88-21v-24.13l-5.22-5.21-5.42 24.73s12.81 22.94 13.52 25.61zm-18.71-60.95l-24.8-24.82a45.41 45.41 0 01-10.56-16.48l-3.05 15.75zm27.63-98.7a46 46 0 0112.54 8.89l23.69 23.7-17.76-26.25s-11.04-3.32-18.47-6.34zm-68.99-2.97s2.33 29.43 3.19 42a45.88 45.88 0 0143.5-43.5l-8.12-9.08z\"\n      ></path>\n      <path d=\"M240.51 440.3a140.48 140.48 0 0070.11 38.09 74.93 74.93 0 0137.35 20.28l8.19 8.19a7.5 7.5 0 0010.61-10.6l-8.19-8.19a89.89 89.89 0 00-44.84-24.35 125.43 125.43 0 01-62.63-34l-36.57-36.58-14.12 7.09zm203.36-191.11l-79.8-79.81-11-11-23.69-23.7a46 46 0 00-12.54-8.89c-1.25-.51-2.41-1-3.38-1.48-6.78-3.28-18.92-3-18.92-3a45.88 45.88 0 00-43.5 43.5c.87 12.53 2.81 18.4 2.81 18.4a45.41 45.41 0 0010.56 16.48l24.78 24.78 10.6 10.61 5.22 5.21v24.15a77.79 77.79 0 002.88 21c.7 2.67 6.05 15.16 6.05 15.16a77.51 77.51 0 0044 37.43 7.38 7.38 0 002.39.39 7.5 7.5 0 002.38-14.61 62.54 62.54 0 01-42.68-59.35v-27.27a7.52 7.52 0 00-2.19-5.3l-42.85-42.84a31 31 0 0143.77-43.78l114.51 114.52a7.5 7.5 0 0010.6-10.6z\"></path>\n      <path d=\"M316.82 125.77c-1.11-.53-2.23-1-3.38-1.48.97.47 2.13.97 3.38 1.48zM495.99 367l-13.67-13.66a32.81 32.81 0 01-9.55-23.08V304a62.56 62.56 0 00-8-30.58 7.504 7.504 0 10-13.08 7.36 47.37 47.37 0 016.08 23.22v26.3a48 48 0 0013.94 33.7l13.68 13.67a7.52 7.52 0 1010.6-10.67z\"></path>\n    </svg>\n  );\n}\n","export function UserStatsIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#f6e266\"\n        d=\"M232.766 7.5v107.077c78.106 0 141.423 63.317 141.423 141.423h107.077c0-137.243-111.257-248.5-248.5-248.5z\"\n      ></path>\n      <path\n        fill=\"#f1d333\"\n        d=\"M422.677 200.946c0 18.894-2.041 37.309-5.881 55.054h64.471c0-83.705-41.388-157.742-104.814-202.769 29.132 41.906 46.224 92.81 46.224 147.715z\"\n      ></path>\n      <path\n        fill=\"#c8ea73\"\n        d=\"M332.767 356.001c-25.592 25.593-60.948 41.422-100.001 41.422s-74.408-15.829-100.001-41.422L57.05 431.716c44.97 44.97 107.095 72.784 175.716 72.784s130.746-27.814 175.716-72.784z\"\n      ></path>\n      <path\n        fill=\"#b7e445\"\n        d=\"M163.57 460.053c-33.875 0-66.228-6.51-95.887-18.332 43.895 39.046 101.713 62.779 165.083 62.779 68.621 0 130.746-27.814 175.716-72.784l-54.773-54.773c-47.328 51.106-114.991 83.11-190.139 83.11z\"\n      ></path>\n      <path\n        fill=\"#dd5790\"\n        d=\"M374.189 256c0 39.053-15.829 74.408-41.422 100.001l42.858 42.858c36.561-36.561 59.174-87.069 59.174-142.859z\"\n      ></path>\n      <path\n        fill=\"#da387d\"\n        d=\"M416.796 256c-9.971 46.074-32.189 87.579-63.086 120.943l21.916 21.916C412.187 362.298 434.8 311.79 434.8 256z\"\n      ></path>\n      <path\n        fill=\"#9dc6fb\"\n        d=\"M91.343 256c0-78.106 63.317-141.423 141.423-141.423v-60.61C121.187 53.967 30.734 144.42 30.734 256c0 55.79 22.613 106.298 59.174 142.859l42.858-42.858C107.173 330.408 91.343 295.053 91.343 256z\"\n      ></path>\n      <circle cx=\"232.766\" cy=\"208.522\" r=\"40.407\" fill=\"#f1d0a5\"></circle>\n      <path\n        fill=\"#f1b986\"\n        d=\"M252.864 173.474a40.202 40.202 0 015.358 20.098c0 22.316-18.091 40.407-40.406 40.407a40.212 40.212 0 01-20.098-5.358c6.972 12.132 20.051 20.309 35.048 20.309 22.316 0 40.406-18.091 40.406-40.407.001-14.998-8.176-28.076-20.308-35.049z\"\n      ></path>\n      <path\n        fill=\"#e49542\"\n        d=\"M158.014 289.335v34.346h149.504v-34.346c0-22.316-18.091-40.406-40.406-40.406h-68.691c-22.316 0-40.407 18.09-40.407 40.406z\"\n      ></path>\n      <path\n        fill=\"#e28424\"\n        d=\"M267.112 248.929h-24.244c22.316 0 40.406 18.091 40.406 40.406v34.346h24.244v-34.346c0-22.315-18.09-40.406-40.406-40.406z\"\n      ></path>\n      <path d=\"M450.864 121.895a7.5 7.5 0 10-12.769 7.871c22.032 35.739 34.259 76.64 35.559 118.734h-92.151c-3.797-76.156-65.077-137.436-141.233-141.233V15.115c69.109 2.129 133.654 33.596 178.039 87.075a7.5 7.5 0 0011.543-9.581C381.005 33.755 309.172 0 232.77 0a7.5 7.5 0 00-7.5 7.5v39.109c-44.972 1.554-87.222 17.073-122.609 45.137-36.231 28.733-62.267 69.139-73.311 113.773a7.5 7.5 0 0014.56 3.604C64.82 124.62 138.782 64.896 225.27 61.619v45.646C146.623 111.184 83.843 176.397 83.843 256c0 37.269 13.599 72.448 38.448 99.872L90.02 388.143C56.573 352.078 38.23 305.45 38.23 256c0-4.598.159-9.174.472-13.601a7.5 7.5 0 00-6.953-8.011c-4.137-.302-7.718 2.82-8.01 6.953a209.246 209.246 0 00-.509 14.658c0 53.457 19.9 103.852 56.176 142.756l-27.66 27.66a7.5 7.5 0 000 10.607C100.096 485.373 164.384 512 232.77 512c68.379 0 132.664-26.627 181.013-74.977a7.5 7.5 0 000-10.606l-27.657-27.661c34.572-37.076 54.255-84.595 56.026-135.256h39.118a7.5 7.5 0 007.5-7.5c0-47.507-13.107-93.88-37.906-134.105zM232.77 497c-61.872 0-120.183-23.154-165.033-65.36l65.168-65.168c22.681 20.482 51.411 33.662 81.689 37.344 4.12.502 7.851-2.428 8.351-6.54s-2.428-7.851-6.54-8.351c-29.441-3.579-57.26-17.155-78.332-38.229l-.049-.045C112.758 325.362 98.843 291.75 98.843 256c0-73.831 60.054-133.899 133.88-133.922l.047.002c73.839 0 133.911 60.068 133.92 133.905l-.001.015c0 35.772-13.931 69.403-39.225 94.697l-.015.016c-20.967 20.95-48.624 34.503-77.881 38.165a7.5 7.5 0 001.864 14.885c30.083-3.766 58.641-16.926 81.202-37.292l65.16 65.168C352.943 473.846 294.636 497 232.77 497zm142.744-108.858l-32.27-32.274c23.174-25.576 36.561-57.898 38.259-92.369h45.639c-1.756 46.656-19.88 90.411-51.628 124.643z\"></path>\n      <path d=\"M307.518 331.181a7.5 7.5 0 007.5-7.5v-34.346c0-26.278-21.268-47.672-47.494-47.896 8.14-8.591 13.149-20.176 13.149-32.917 0-26.416-21.491-47.906-47.907-47.906s-47.906 21.49-47.906 47.906c0 12.741 5.009 24.326 13.149 32.917-26.226.223-47.494 21.618-47.494 47.896v34.346a7.5 7.5 0 007.5 7.5zm-74.752-155.565c18.145 0 32.907 14.762 32.907 32.906s-14.762 32.906-32.907 32.906-32.906-14.762-32.906-32.906 14.762-32.906 32.906-32.906zm-67.252 113.719c0-18.145 14.762-32.906 32.907-32.906h68.691c18.145 0 32.906 14.762 32.906 32.906v26.846h-27.427v-12.703c0-4.143-3.358-7.5-7.5-7.5s-7.5 3.357-7.5 7.5v12.703h-49.65v-12.703c0-4.143-3.358-7.5-7.5-7.5s-7.5 3.357-7.5 7.5v12.703h-27.427z\"></path>\n    </svg>\n  );\n}\n","import { useMemo } from 'react';\nimport { useDimensions } from './useDimensions';\n\n/**\n * Get a card width in px based on the window size of the user's browser\n * @param quantity how many cards should be fitted in the page screen width\n * @param gap total value of padding and margin on the left and right of the card\n * @param minWidth minimum width of a card\n * @param maxWidth maximum width of a card\n * @returns\n */\nexport function useCardWidth(quantity: number, gap = 32, minWidth = 120, maxWidth = 300): number {\n  const [width] = useDimensions();\n\n  return useMemo(() => {\n    return Math.min(Math.max(Math.floor(width / quantity) - gap, minWidth), maxWidth);\n  }, [width, quantity, gap, minWidth, maxWidth]);\n}\n"],"names":["Card","children","header","footer","color","size","randomColor","className","headerClassName","footerClassName","baseClass","bgColor","getColorFromLetter","toUpperCase","clsx","style","startsWith","backgroundColor","FloatingHand","subtitle","type","useState","isExpanded","setIsExpanded","translate","useLanguage","onMouseOver","onMouseLeave","IconAvatar","icon","HandOfCardsIcon","UserStatsIcon","alt","pt","en","useBlurCards","useGlobalState","blurredCards","setBlurredCards","blurEnabled","useLocalStorage","getLocalStorage","setLocalStorage","useEffectOnce","useEffect","Object","keys","length","shouldBeBlurred","cardId","Boolean","blurCard","s","isBlurEnabled","ImageBlurButton","placement","title","ghost","onClick","EyeInvisibleOutlined","ImageBlurButtonContainer","rest","ImageCard","imageId","cardWidth","preview","previewImageId","fallbackName","imageURL","replace","isBlurred","booleanPreviewConfig","maskClassName","width","src","process","placeholder","fallback","PUBLIC_URL","ImageCardHand","hand","onSelectCard","selectButtonLabel","selectButtonClass","sizeRatio","cardSize","minCardSize","disabledSelectButton","useCardWidth","map","DownSquareOutlined","disabled","ImageCardBack","ImageCardPreloadHand","ImageCardSelectButton","selectLabel","deselectLabel","isSelected","shape","UpCircleOutlined","custom","props","xmlns","viewBox","fill","d","cx","cy","r","quantity","gap","minWidth","maxWidth","useDimensions","useMemo","Math","min","max","floor"],"sourceRoot":""}