{"version":3,"file":"static/js/page-me.900085ba.chunk.js","mappings":"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","sources":["components/auth/SignIn.tsx","icons/GoogleIcon.tsx","pages/Me/Me.tsx","pages/Me/components/LoginModal.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { useMutation } from 'react-query';\n// Ant Design Resources\nimport { Button, Form, Input, Alert, Image, App, Switch, Space, ButtonProps } from 'antd';\n// API\nimport { resetPassword, signIn, signInWithGoogle } from 'services/firebase';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Image\nimport logo from 'assets/images/tarde-divertida-logo.svg';\nimport { Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { UserCredential } from 'firebase/auth';\nimport { IconAvatar } from 'components/avatars';\nimport { GoogleIcon } from 'icons/GoogleIcon';\n\ntype SignInProps = {\n  onSuccess: GenericFunction;\n};\n\nexport function SignIn({ onSuccess }: SignInProps) {\n  const [view, setView] = useState('google');\n\n  return (\n    <div className=\"sign-in\">\n      <div className=\"sign-in__logo\">\n        <Image src={logo} preview={false} />\n      </div>\n\n      <Space className=\"space-container\">\n        <Switch\n          checkedChildren={<Translate pt=\"E-mail e senha\" en=\"Email and Password\" />}\n          unCheckedChildren=\"Google\"\n          onChange={(checked) => setView(checked ? 'email' : 'google')}\n        />\n      </Space>\n\n      {view === 'google' ? (\n        <SignInWithGoogle onSuccess={onSuccess} />\n      ) : (\n        <SignInWithEmail onSuccess={onSuccess} />\n      )}\n    </div>\n  );\n}\n\nexport function SignInWithGoogle({ onSuccess, ...buttonProps }: SignInProps & ButtonProps) {\n  const { isLoading, mutate, isError } = useMutation<UserCredential, Error, void, unknown>(\n    async () => await signInWithGoogle(),\n    {\n      onSuccess: () => onSuccess(),\n    }\n  );\n\n  const onFinish = () => {\n    mutate();\n  };\n\n  return (\n    <Space\n      className=\"space-container\"\n      direction=\"vertical\"\n      align=\"center\"\n      classNames={{ item: 'full-width' }}\n    >\n      <>\n        {isError && (\n          <Alert\n            description={\n              <Translate pt=\"Algo deu errado, tente novamente\" en=\"Something went wrong. Please try again\" />\n            }\n            type=\"error\"\n            showIcon\n            className=\"sign-in__error-alert\"\n          />\n        )}\n        <Button\n          type=\"primary\"\n          size=\"large\"\n          onClick={onFinish}\n          loading={isLoading}\n          block\n          icon={<IconAvatar icon={<GoogleIcon />} size=\"small\" />}\n          {...buttonProps}\n        >\n          <Translate pt=\"Entrar com Google\" en=\"Sign in with Google\" />\n        </Button>\n      </>\n    </Space>\n  );\n}\n\nfunction SignInWithEmail({ onSuccess }: SignInProps) {\n  const [form] = Form.useForm();\n  const { translate } = useLanguage();\n  const [showForgotPassword, setShowForgotPassword] = useState(false);\n\n  const { isLoading, mutate, isError } = useMutation<UserCredential, Error, void, unknown>(\n    async () => await signIn(form.getFieldValue('username'), form.getFieldValue('password')),\n    {\n      onSuccess: () => {\n        onSuccess();\n      },\n    }\n  );\n\n  const onFinish = () => {\n    mutate();\n  };\n\n  return (\n    <>\n      <Form\n        name=\"login\"\n        form={form}\n        labelCol={{ span: 8 }}\n        wrapperCol={{ span: 16 }}\n        style={{ maxWidth: 600 }}\n        initialValues={{ remember: true }}\n        onFinish={onFinish}\n        autoComplete=\"off\"\n      >\n        <Form.Item\n          label={<Translate pt=\"E-mail\" en=\"E-mail\" />}\n          name=\"username\"\n          rules={[\n            { required: true, message: translate('e-mail é um campo obrigatório', 'e-mail is required') },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label={<Translate pt=\"Senha\" en=\"Password\" />}\n          name=\"password\"\n          rules={[\n            { required: true, message: translate('e-mail é um campo obrigatório', 'e-mail is required') },\n          ]}\n          help={translate('Mínimo 6 caracteres', 'Minimum of 6 characters')}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        {isError && (\n          <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n            <Alert\n              description={\n                <Translate\n                  pt=\"Algo deu errado, tente novamente\"\n                  en=\"Something went wrong. Please try again\"\n                />\n              }\n              type=\"error\"\n              showIcon\n              className=\"sign-in__error-alert\"\n            />\n          </Form.Item>\n        )}\n\n        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n          <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\n            <Translate pt=\"Entrar\" en=\"Submit\" />\n          </Button>\n\n          <Button type=\"link\" onClick={() => setShowForgotPassword((v) => !v)}>\n            <Translate pt=\"Esqueci minha senha\" en=\"Forgot my password\" />\n          </Button>\n        </Form.Item>\n      </Form>\n      {showForgotPassword && (\n        <Alert\n          type=\"info\"\n          message={\n            <ResetPasswordForm\n              email={form.getFieldValue('username')}\n              onSuccess={() => setShowForgotPassword(false)}\n            />\n          }\n        />\n      )}\n    </>\n  );\n}\n\ntype ResetPasswordFormProps = {\n  email?: string;\n  onSuccess: GenericFunction;\n};\n\nfunction ResetPasswordForm({ email, onSuccess }: ResetPasswordFormProps) {\n  const { message } = App.useApp();\n  const [form] = Form.useForm();\n  const { translate } = useLanguage();\n\n  const { isLoading, mutate, isError } = useMutation(\n    async () => await resetPassword(form.getFieldValue('username')),\n    {\n      onSuccess: () => {\n        onSuccess();\n        message.success(\n          translate(\n            'Verifique seu e-mail enviado para redefinir a sua senha',\n            'Verify your email to reset your password'\n          )\n        );\n      },\n    }\n  );\n\n  const onFinish = () => {\n    mutate();\n  };\n\n  return (\n    <Form\n      name=\"forgot-password\"\n      form={form}\n      labelCol={{ span: 8 }}\n      wrapperCol={{ span: 16 }}\n      style={{ maxWidth: 600 }}\n      initialValues={{ username: email, remember: true }}\n      onFinish={onFinish}\n      autoComplete=\"off\"\n    >\n      <Form.Item>\n        <Title level={4} size=\"xx-small\">\n          <Translate pt=\"Redefinir a senha\" en=\"Password Reset\" />\n        </Title>\n      </Form.Item>\n      <Form.Item\n        label={<Translate pt=\"E-mail\" en=\"E-mail\" />}\n        name=\"username\"\n        rules={[\n          { required: true, message: translate('e-mail é um campo obrigatório', 'e-mail is required') },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      {isError && (\n        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n          <Alert\n            description={\n              <Translate\n                pt=\"Algo deu errado, provavelmente este e-mail não existe no banco de dados da Tarde Divertida\"\n                en=\"Something went wrong. Please try again\"\n              />\n            }\n            type=\"error\"\n            showIcon\n            className=\"sign-in__error-alert\"\n          />\n        </Form.Item>\n      )}\n\n      <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n        <Button type=\"primary\" htmlType=\"submit\" disabled={isLoading}>\n          <Translate pt=\"Enviar\" en=\"Submit\" />\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n","export function GoogleIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#2196f3\"\n        d=\"M501 210c2 0 4 2 4 4v42a249 249 0 1 1-76-179v6l-60 60h-5a156 156 0 0 0-264 112 157 157 0 0 0 306 47H260c-2 0-4-2-4-4v-84c0-2 2-4 4-4z\"\n      />\n      <path\n        fill=\"#1e88e5\"\n        d=\"M501 210h-30c2 0 4 2 4 4v42a249 249 0 0 1-221 248 249 249 0 0 0 251-248v-42c0-2-2-4-4-4z\"\n      />\n      <path fill=\"#f44336\" d=\"m114 190-76-54a248 248 0 0 1 391-59v6l-60 60h-5a156 156 0 0 0-250 47z\" />\n      <path\n        fill=\"#e53935\"\n        d=\"m92 175 22 15c22-49 70-84 126-90h1l-15-1c-57 0-107 31-134 76zM399 77v6l-48 48 13 12h5l60-60v-6A248 248 0 0 0 241 8c61 4 116 29 158 69z\"\n      />\n      <path fill=\"#4caf50\" d=\"M438 425a248 248 0 0 1-404-58l77-53a157 157 0 0 0 252 56z\" />\n      <path\n        fill=\"#43a047\"\n        d=\"m111 314-23 16a156 156 0 0 0 153 82c-59-6-109-45-130-98zM256 505c72 0 137-31 182-80l-18-13c-43 53-107 88-179 92l15 1z\"\n      />\n      <path fill=\"#ffc107\" d=\"M100 256c0 21 3 40 11 58l-77 53a247 247 0 0 1 4-231l76 54c-9 20-15 43-15 66z\" />\n      <path fill=\"#ffb300\" d=\"m88 330 23-16a156 156 0 0 1 3-124l-22-15a156 156 0 0 0-4 155z\" />\n      <path d=\"M501 203h-52a8 8 0 0 0 0 15h48v38a242 242 0 0 1-60 159l-63-46c18-18 31-40 39-65a7 7 0 0 0-7-9H263v-77h153a8 8 0 0 0 0-15H260c-6 0-12 5-12 11v84c0 6 6 12 12 12h135a148 148 0 0 1-229 65 8 8 0 0 0-9 12 163 163 0 0 0 206-7l64 46a241 241 0 0 1-383-57l64-43c6 13 14 26 25 38a7 7 0 1 0 11-10 149 149 0 0 1 215-206c4 4 11 4 16 0l59-60c2-2 4-5 4-8s-2-6-4-8a255 255 0 0 0-289-47 8 8 0 0 0 7 14 239 239 0 0 1 269 41l-54 55a163 163 0 0 0-227 5c-12 11-21 25-29 39l-63-45c19-32 45-59 76-80a8 8 0 0 0-8-13 255 255 0 1 0 396 215v-42c0-6-5-11-12-11zM41 147l63 46a165 165 0 0 0-2 118l-65 45a239 239 0 0 1 4-209z\" />\n    </svg>\n  );\n}\n","import { useTitle } from 'react-use';\n// Hooks\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\n// Components\nimport { LoginModal } from './components/LoginModal';\nimport { MeContent } from './components/MeContent';\n// Sass\nimport './Me.scss';\nimport { useEffect } from 'react';\nimport { useGlobalState } from 'hooks/useGlobalState';\n\nfunction Me() {\n  useTitle('Me - Tarde Divertida');\n  const { isAuthenticated, currentUser } = useCurrentUserContext();\n  const [, setLanguage] = useGlobalState('language');\n\n  useEffect(() => {\n    if (currentUser.language) {\n      setLanguage(currentUser.language);\n    }\n  }, [currentUser.language, setLanguage]);\n\n  return (\n    <MeContent user={currentUser} additionalContent={<LoginModal isAuthenticated={isAuthenticated} />} />\n  );\n}\n\nexport default Me;\n","// Ant Design Resources\nimport { Modal } from 'antd';\n// Utils\nimport { NOOP } from 'utils/constants';\n// Components\nimport { SignIn } from 'components/auth/SignIn';\nimport { Translate } from 'components/language';\n\ntype LoginModalProps = {\n  isAuthenticated: boolean;\n};\n\nexport function LoginModal({ isAuthenticated }: LoginModalProps) {\n  return (\n    <Modal\n      open={!isAuthenticated}\n      title={<Translate pt=\"Logar\" en=\"LogIn\" />}\n      cancelText={<Translate pt=\"Cancelar\" en=\"Cancel\" />}\n      onCancel={NOOP}\n      okButtonProps={{\n        style: { display: 'none' },\n      }}\n      cancelButtonProps={{\n        style: { display: 'none' },\n      }}\n      closable={false}\n    >\n      <SignIn onSuccess={NOOP} />\n    </Modal>\n  );\n}\n"],"names":["SignIn","onSuccess","useState","view","setView","className","src","logo","preview","checkedChildren","pt","en","unCheckedChildren","onChange","checked","SignInWithGoogle","SignInWithEmail","buttonProps","useMutation","signInWithGoogle","isLoading","mutate","isError","direction","align","classNames","item","description","type","showIcon","size","onClick","loading","block","icon","Form","form","translate","useLanguage","showForgotPassword","setShowForgotPassword","signIn","getFieldValue","name","labelCol","span","wrapperCol","style","maxWidth","initialValues","remember","onFinish","autoComplete","label","rules","required","message","help","offset","htmlType","v","ResetPasswordForm","email","App","resetPassword","success","username","level","disabled","GoogleIcon","props","xmlns","viewBox","fill","d","useTitle","useCurrentUserContext","isAuthenticated","currentUser","useGlobalState","setLanguage","useEffect","language","user","additionalContent","LoginModal","open","title","cancelText","onCancel","NOOP","okButtonProps","display","cancelButtonProps","closable"],"sourceRoot":""}