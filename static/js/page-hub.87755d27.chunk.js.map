{"version":3,"file":"static/js/page-hub.87755d27.chunk.js","mappings":"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","sources":["components/general/GameTags.tsx","hooks/useDevFeatures.ts","pages/Dev/DevMenu.tsx","pages/Dev/DevHeader.tsx","pages/Hub/components/DevEmulatorAlert.tsx","pages/Hub/components/Filters.tsx","pages/Hub/Hub.tsx","pages/Hub/components/CreateGameModal.tsx","pages/Hub/components/GameCard.tsx"],"sourcesContent":["// Ant Design Resources\nimport { Space, SpaceProps, Tag } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { TAG_DICT } from 'utils/constants';\n\nconst sortTags = (tags: string[]) => {\n  const sortedTags: string[] = [];\n\n  tags.forEach((tag) => {\n    if (TAG_DICT?.[tag]?.index !== undefined) {\n      sortedTags[TAG_DICT[tag].index] = tag;\n    } else if (sortedTags.length < 18) {\n      sortedTags[18] = tag;\n    } else {\n      sortedTags.push(tag);\n    }\n  });\n\n  return sortedTags.filter((v) => Boolean(v));\n};\n\ntype GameTagsProps = {\n  tags: string[];\n  gameCode: GameCode;\n} & SpaceProps;\n\nexport function GameTags({ tags, gameCode, ...rest }: GameTagsProps) {\n  const { language } = useLanguage();\n  const sortedTags = sortTags(tags);\n\n  return (\n    <Space wrap {...rest}>\n      {sortedTags.map((tag) => (\n        <Tag key={`${gameCode}-${tag}`} color={TAG_DICT[tag]?.color}>\n          {TAG_DICT[tag]?.label[language]}\n        </Tag>\n      ))}\n    </Space>\n  );\n}\n","import { isDevEnv } from '../utils/helpers';\nimport { useGlobalState } from './useGlobalState';\n\n/**\n * Controls debug and dev environment\n * @returns\n */\nexport function useDevFeatures() {\n  const [isDebugEnabled, setIsDebugEnabled] = useGlobalState('isDebugEnabled');\n\n  const toggleDevFeatures = () => {\n    setIsDebugEnabled((s) => !s);\n  };\n\n  return {\n    isDevEnv,\n    isDebugEnabled,\n    toggleDevFeatures,\n  };\n}\n","import { Segmented } from 'antd';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nexport function DevMenu() {\n  const { pathname } = useLocation();\n  const navigate = useNavigate();\n\n  const options = [\n    { label: 'Home', value: '/', disabled: pathname === '/' },\n    { label: 'Hub', value: '/hub', disabled: pathname === '/hub' },\n    { label: 'Icons', value: '/dev/icons', disabled: pathname === '/dev/icons' },\n    { label: 'Colors', value: '/dev/colors', disabled: pathname === '/dev/colors' },\n    { label: 'Sprites', value: '/dev/sprites', disabled: pathname === '/dev/sprites' },\n    { label: 'Resources', value: '/dev/resources', disabled: pathname === '/dev/resources' },\n    { label: 'Playground', value: '/dev/playground', disabled: pathname === '/dev/playground' },\n    { label: 'Showcase', value: '/showcase', disabled: pathname === '/showcase' },\n  ];\n\n  const onNavigate = (path: any) => {\n    navigate(path);\n  };\n\n  return <Segmented options={options} defaultValue={pathname} onChange={onNavigate} />;\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { Space } from 'antd';\n// Components\nimport { DevMenu } from './DevMenu';\n\ntype DevHeaderProps = {\n  title: ReactNode;\n  subTitle?: ReactNode;\n  extra?: ReactNode;\n};\n\nexport function DevHeader({ title, subTitle, extra }: DevHeaderProps) {\n  return (\n    <header className=\"dev-header\">\n      <div className=\"dev-header__heading\">\n        <div className=\"dev-header__left\">\n          <span className=\"dev-header__title\">{title} </span>\n          <span className=\"dev-header__subtitle\">{subTitle}</span>\n        </div>\n        <div className=\"dev-header__extra\">\n          <Space className=\"dev-header__extra-space\">{extra}</Space>\n          <DevMenu />\n        </div>\n      </div>\n    </header>\n  );\n}\n","import { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { Alert, Button, Modal } from 'antd';\nimport { useDevFeatures } from 'hooks/useDevFeatures';\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useState } from 'react';\nimport { useEffectOnce } from 'react-use';\n\n/**\n * The emulator only properly works if using the local ip, to allow multi device testing\n * including mobile, this component will display an alert in case the current port is localhost\n */\nexport function DevEmulatorAlert() {\n  const { isDevEnv } = useDevFeatures();\n  const [stay, setStay] = useState(false);\n  const [usingFirestoreEmulator] = useGlobalState('usingFirestoreEmulator');\n  const [usingFunctionsEmulator] = useGlobalState('usingFunctionsEmulator');\n\n  const ip = process.env.REACT_APP_LOCAL_IP;\n  const displayDevWarningMessage = isDevEnv && window.location.hostname !== usingFirestoreEmulator;\n  const displayDevWarningMessageFunctions = isDevEnv && window.location.hostname !== usingFunctionsEmulator;\n  const { port, pathname, hash, protocol } = window.location;\n  const newPath = `${ip}:${port}${pathname}/${hash}`.replace('//', '/');\n  const emulatorUrl = `${protocol}//${newPath}`;\n\n  useEffectOnce(() => {\n    if (!stay && isDevEnv && displayDevWarningMessage) {\n      Modal.confirm({\n        title: 'Wrong Dev Environment',\n        icon: <ExclamationCircleOutlined />,\n        content: 'You are in a development environment and not using the Firestore emulator.',\n        okText: 'Switch Routes',\n        cancelText: 'Stay in Localhost',\n        onOk: () => {\n          setStay(true);\n          window.location.href = emulatorUrl;\n        },\n      });\n    }\n  });\n\n  if (!isDevEnv) return <></>;\n\n  return (\n    <>\n      {displayDevWarningMessage && (\n        <Alert\n          message={\n            <>\n              You are in a development environment and not using the Firestore emulator.{' '}\n              <Button href={emulatorUrl} type=\"link\">\n                Switch Routes\n              </Button>\n            </>\n          }\n          type=\"error\"\n          showIcon\n          banner\n        />\n      )}\n      {displayDevWarningMessageFunctions && (\n        <Alert\n          message={\n            <>\n              You are in a development environment and not using the Functions emulator.{' '}\n              <Button href={emulatorUrl} type=\"link\">\n                Switch Routes\n              </Button>\n            </>\n          }\n          type=\"warning\"\n          showIcon\n          banner\n        />\n      )}\n      {!displayDevWarningMessageFunctions && !displayDevWarningMessage && (\n        <Alert message={<>You are running emulators safely.</>} type=\"success\" showIcon banner />\n      )}\n    </>\n  );\n}\n","import { FilterOutlined } from '@ant-design/icons';\nimport { Checkbox, InputNumber, Space, TreeSelect } from 'antd';\nimport { DefaultOptionType } from 'antd/lib/select';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { capitalize } from 'lodash';\nimport { useMemo } from 'react';\nimport { SEPARATOR, TAG_DICT } from 'utils/constants';\n\nconst { SHOW_PARENT } = TreeSelect;\n\ntype FiltersProps = {\n  setTagFilters: GenericFunction;\n  setNumberFilters: GenericFunction;\n  availabilityCount: number;\n};\nexport function Filters({ availabilityCount, setTagFilters, setNumberFilters }: FiltersProps) {\n  const onNumberFiltersUpdate = (key: string, value: number) => {\n    setNumberFilters((prevState: NumberDictionary) => ({\n      ...prevState,\n      [key]: value,\n    }));\n  };\n\n  return (\n    <Space className=\"hub-filters\" wrap>\n      <FilterOutlined />({availabilityCount}){' '}\n      <div className=\"hub-filters__entry\">\n        <label>Players</label>\n        <InputNumber\n          min={2}\n          max={12}\n          size=\"small\"\n          className=\"hub-filters__input-number\"\n          onChange={(value) => onNumberFiltersUpdate('players', value ?? 0)}\n        />\n      </div>\n      <div className=\"hub-filters__entry\">\n        <label>Recommended with</label>\n        <Checkbox onChange={(e) => onNumberFiltersUpdate('recommendedWith', Number(e.target?.checked))} />\n      </div>\n      <div className=\"hub-filters__entry\">\n        <label>Best with</label>\n        <Checkbox onChange={(e) => onNumberFiltersUpdate('bestWith', Number(e.target?.checked))} />\n      </div>\n      <div className=\"hub-filters__entry\">\n        <label>Duration</label>\n        <InputNumber\n          min={15}\n          step={15}\n          size=\"small\"\n          className=\"hub-filters__input-number\"\n          onChange={(value) => onNumberFiltersUpdate('duration', value ?? 0)}\n        />\n      </div>\n      <div className=\"hub-filters__entry\">\n        <label>Tags</label>\n        <TagTreeSelect value={undefined} onTreeSelectChange={setTagFilters} />\n      </div>\n    </Space>\n  );\n}\n\nfunction TagTreeSelect({ value, onTreeSelectChange }: any) {\n  const { dualTranslate } = useLanguage();\n\n  const onChange = (tags: string[]) => {\n    onTreeSelectChange(\n      tags\n      // .map((tag) => {\n      //   if (tag.includes(SEPARATOR)) {\n      //     return tag.split(SEPARATOR);\n      //   }\n      //   return tag;\n      // })\n      // .flat()\n    );\n  };\n\n  const treeData: DefaultOptionType[] = useMemo(\n    () =>\n      Object.values(\n        Object.keys(TAG_DICT).reduce((acc: any, tagKey: string) => {\n          const tagObj = TAG_DICT[tagKey];\n          if (acc[tagObj.group] === undefined) {\n            acc[tagObj.group] = {\n              title: capitalize(tagObj.group),\n              value: tagObj.group,\n              children: [],\n            };\n          }\n\n          acc[tagObj.group].children.push({\n            title: capitalize(dualTranslate(tagObj.label)),\n            value: `${tagObj.group}${SEPARATOR}${tagKey}`,\n          });\n\n          return acc;\n        }, {})\n      ),\n    [dualTranslate]\n  );\n\n  return (\n    <TreeSelect\n      treeData={treeData}\n      value={value}\n      onChange={onChange}\n      treeCheckable={true}\n      showCheckedStrategy={SHOW_PARENT}\n      placeholder=\"Select Game Tags\"\n      size=\"small\"\n      style={{\n        width: '100%',\n        minWidth: '400px',\n      }}\n    />\n  );\n}\n","import { useMemo, useState } from 'react';\nimport { useEffectOnce, useTitle } from 'react-use';\n// Ant Design Resources\nimport { Typography, Layout, Divider, Row, Col } from 'antd';\nimport { DatabaseFilled } from '@ant-design/icons';\n\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLocalStorage } from 'hooks/useLocalStorage';\n// Utils\nimport GAME_LIST from 'utils/info';\nimport { SEPARATOR, TAG_RULES } from 'utils/constants';\nimport { calculateGameAverageDuration, isDevEnv } from 'utils/helpers';\n// Components\nimport { GameCard } from './components/GameCard';\nimport { LanguageSwitch, Translate } from 'components/language';\nimport { DevHeader } from 'pages/Dev/DevHeader';\nimport { DevEmulatorAlert } from './components/DevEmulatorAlert';\nimport { Filters } from './components/Filters';\nimport { LogoutButton } from 'components/auth/LogoutButton';\n\n// Players migration\nconst migrationBlocked = [\n  'comunicacao-alienigena',\n  'crimes-hediondos',\n  'cruza-palavras',\n  'espiao-entre-nos',\n  'linhas-cruzadas',\n  'megamix',\n  'na-rua-do-medo',\n  'polemica-da-vez',\n  'sonhos-pesadelos',\n  'ta-na-cara',\n  'testemunha-ocular',\n  'ue-so-isso',\n  'vendaval-de-palpite',\n];\n\nfunction Hub() {\n  useTitle('Hub - Tarde Divertida');\n\n  const { language } = useLanguage();\n  const [getLocalStorage] = useLocalStorage();\n  const [, setLanguage] = useGlobalState('language');\n  const [tagFilters, setTagFilters] = useState<string[]>([]);\n  const [numberFilters, setNumberFilters] = useState<NumberDictionary>({});\n\n  useEffectOnce(() => {\n    const prevLanguage = getLocalStorage('language');\n    if (prevLanguage) {\n      setLanguage(prevLanguage);\n    }\n  });\n\n  const gameList = useMemo(\n    () =>\n      Object.values(GAME_LIST).filter((game) => {\n        let result = [];\n\n        // Check player count\n        if (numberFilters.players) {\n          result.push(\n            game.playerCount.min <= numberFilters.players && game.playerCount.max >= numberFilters.players\n          );\n\n          if (numberFilters.bestWith) {\n            result.push(numberFilters.players === game.playerCount.best);\n          }\n\n          if (numberFilters.recommendedWith) {\n            result.push(game.playerCount.recommended.includes(numberFilters.players));\n          }\n        }\n\n        // Check tags\n        // TODO: this does not account for tagGroups and concurrent tags\n        tagFilters.forEach((tagKey) => {\n          const [tagGroup, tag] = tagKey.split(SEPARATOR);\n\n          if (tagGroup && tag && TAG_RULES?.[tagGroup] === 'exclusive') {\n            result.push(game.tags.includes(tag));\n          } else if (tag) {\n            result.push(game.tags.includes(tag));\n          }\n        });\n\n        // Check time\n        if (numberFilters.duration) {\n          const duration = calculateGameAverageDuration(game, numberFilters.players ?? 0);\n\n          if (numberFilters.players) {\n            result.push(\n              numberFilters.duration >= duration.customTime - 10 &&\n                numberFilters.duration <= duration.customTime + 10\n            );\n          } else {\n            result.push(numberFilters.duration >= duration.min && numberFilters.duration <= duration.max);\n          }\n        }\n\n        return result.every(Boolean);\n      }),\n    [tagFilters, numberFilters]\n  );\n\n  const { availableGames, comingSoonGames, devGames } = useMemo(() => {\n    const sortedGameList = gameList.sort((a, b) => (a.title[language] > b.title[language] ? 1 : -1));\n\n    return sortedGameList.reduce(\n      (acc: any, game) => {\n        if (game.available[language]) {\n          if (['alpha', 'dev'].includes(game.version) || game.version.startsWith('beta')) {\n            acc.devGames.push(game);\n          } else {\n            acc.availableGames.push(game);\n          }\n        } else {\n          acc.comingSoonGames.push(game);\n        }\n        return acc;\n      },\n      {\n        availableGames: [],\n        devGames: [],\n        comingSoonGames: [],\n      }\n    );\n  }, [gameList, language]);\n  return (\n    <Layout className=\"dev-layout\">\n      <DevHeader\n        title={\n          <>\n            <DatabaseFilled /> Hub\n          </>\n        }\n        subTitle={<Translate pt=\"Selecione um jogo para começar\" en=\"Select a game to start\" />}\n        extra={[\n          <LanguageSwitch key=\"language-switch\" />,\n          <LogoutButton key=\"logout-button\" danger ghost size=\"small\" />,\n        ]}\n      />\n\n      <DevEmulatorAlert />\n\n      <Filters\n        setTagFilters={setTagFilters}\n        setNumberFilters={setNumberFilters}\n        availabilityCount={availableGames.length}\n      />\n\n      <Layout.Content className=\"container\" id=\"main-container\">\n        {isDevEnv && (\n          <>\n            <Typography.Title level={2}>\n              <Translate pt=\"Em Desenvolvimento\" en=\"Under Development\" />\n            </Typography.Title>\n            <RowOfGames games={devGames} />\n            <Divider />\n          </>\n        )}\n        <Typography.Title level={2}>\n          <Translate pt=\"Disponíveis\" en=\"Available\" />\n        </Typography.Title>\n        <RowOfGames games={availableGames} />\n\n        <Divider />\n        {!isDevEnv && (\n          <>\n            <Typography.Title level={2}>\n              <Translate pt=\"Em Desenvolvimento\" en=\"Under Development\" />\n            </Typography.Title>\n            <RowOfGames games={comingSoonGames} />\n\n            <Divider />\n          </>\n        )}\n        <Typography.Title level={2}>\n          <Translate pt=\"Em Breve\" en=\"Coming Soon\" />\n        </Typography.Title>\n        <RowOfGames games={comingSoonGames} />\n      </Layout.Content>\n    </Layout>\n  );\n}\n\ntype RowOfGamesProps = {\n  games: GameInfo[];\n};\n\nfunction RowOfGames({ games }: RowOfGamesProps) {\n  return (\n    <Row gutter={[8, 16]}>\n      {games.map((game: GameInfo) => (\n        <Col key={game.gameName} xs={24} sm={12} md={8} lg={8} xl={6} xxl={4}>\n          <GameCard game={game} isAdmin={!migrationBlocked.includes(game.gameName)} />\n        </Col>\n      ))}\n    </Row>\n  );\n}\n\nexport default Hub;\n","import clsx from 'clsx';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useCopyToClipboard } from 'react-use';\n// Ant Design Resources\nimport { Image, Modal, message, Button, notification, Divider, Typography, Switch, Space, Alert } from 'antd';\n// Adapters\nimport { ADMIN_API } from 'services/adapters';\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useLocalStorage } from 'hooks/useLocalStorage';\n// Constants\nimport { LATEST_GAME_IDS, PUBLIC_URL } from 'utils/constants';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\nimport { Loading } from 'components/loaders';\n\nconst updateLocal24hGameIds = (latestGameIds: PlainObject, newId: GameId) => {\n  const now = Date.now();\n  const past24Hours = now - 1000 * 60 * 60 * 24;\n  const cleanedUpIds = Object.entries(latestGameIds ?? {}).reduce((acc: PlainObject, [key, timestamp]) => {\n    if (timestamp > past24Hours) {\n      acc[key] = timestamp;\n    }\n    return acc;\n  }, {});\n  return {\n    [LATEST_GAME_IDS]: {\n      ...cleanedUpIds,\n      [newId]: now,\n    },\n  };\n};\n\ntype CreateGameModalProps = {\n  gameInfo: GameInfo;\n};\n\nexport function CreateGameModal({ gameInfo }: CreateGameModalProps): JSX.Element {\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n  const [state, copyToClipboard] = useCopyToClipboard();\n\n  const { language, translate } = useLanguage();\n  const { setLoader } = useLoading();\n  const [getLocalStorage, setLocalStorage] = useLocalStorage();\n  const [isVisible, setVisibility] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [gameId, setGameId] = useState(null);\n  const [, setUserId] = useGlobalState('userId');\n  const [, setUserName] = useGlobalState('username');\n  const [, setUserAvatarId] = useGlobalState('userAvatarId');\n  const [options, setOptions] = useState({});\n\n  useEffect(() => {\n    if (state.value && gameId) {\n      message.info(`Copied to clipboard: ${state.value}`);\n    }\n  }, [state, gameId]);\n\n  const onCloseModal = useCallback(() => {\n    setVisibility(false);\n  }, []);\n\n  const onChangeOptions = (key: string, value: boolean) => {\n    setOptions((s) => ({\n      ...s,\n      [key]: value,\n    }));\n  };\n\n  const createGame = async () => {\n    try {\n      setLoader('create', true);\n      setLoading(true);\n      const response: PlainObject = await ADMIN_API.createGame({\n        gameName: gameInfo.gameName,\n        language,\n        options,\n      });\n      if (response.data.gameId) {\n        setGameId(response.data.gameId);\n        setUserId(null);\n        setUserName('');\n        setUserAvatarId('');\n        setLocalStorage(updateLocal24hGameIds(getLocalStorage(LATEST_GAME_IDS), response.data.gameId));\n        const baseUrl = window.location.href.split(pathname)[0];\n        copyToClipboard(`${baseUrl}/${response.data.gameId}`);\n      }\n    } catch (e: any) {\n      notification.error({\n        message: translate(\n          'Aplicativo encontrou um erro ao tentar criar o jogo',\n          'The application found an error while trying to create a game',\n          language\n        ),\n        description: JSON.stringify(e.message),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n      setVisibility(false);\n    } finally {\n      setLoading(false);\n      setLoader('create', false);\n    }\n  };\n\n  const onConfirmGame = () => {\n    if (gameId) {\n      navigate(`/${gameId}`);\n    } else {\n      message.info(\n        translate('Péra! O jogo ainda não foi inicializado.', 'Wait! The game has not been created')\n      );\n    }\n  };\n\n  return (\n    <>\n      <Button type=\"primary\" onClick={() => setVisibility(true)} block>\n        <Translate pt=\"Criar\" en=\"Create\" />\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`${translate('Criando novo jogo', 'Creating new game')}: ${gameInfo.title[language]}`}\n          open={isVisible}\n          onCancel={onCloseModal}\n          onOk={onConfirmGame}\n          okButtonProps={{ disabled: Boolean(!gameId) }}\n          maskClosable={false}\n        >\n          <>\n            <Image\n              alt={gameInfo.title[language]}\n              src={`${PUBLIC_URL.BANNERS}${gameInfo.gameName}-${language}.jpg`}\n              fallback={`${PUBLIC_URL.BANNERS}/em-breve-${language}.jpg`}\n              className=\"round-corners\"\n            />\n\n            <Options\n              options={gameInfo.options}\n              disabled={isLoading || Boolean(gameId)}\n              onChangeOptions={onChangeOptions}\n              selectedOptions={options}\n            />\n\n            <Divider />\n\n            {isLoading && (\n              <>\n                <Instruction>\n                  <Translate pt=\"O jogo está sendo criado...\" en=\"The game session is being created\" />\n                </Instruction>\n                <Loading message={translate('Gerando...', 'Generating...')} margin />\n              </>\n            )}\n\n            {gameInfo.version.startsWith('alpha') && (\n              <Alert\n                type=\"warning\"\n                showIcon\n                message={\n                  <Translate\n                    pt=\"Este jogo está em alpha, não o jogue\"\n                    en=\"This game is still in alpha and shouldn't be played\"\n                  />\n                }\n              />\n            )}\n\n            {gameInfo.version.startsWith('beta') && (\n              <Alert\n                type=\"warning\"\n                showIcon\n                message={\n                  <Translate\n                    pt=\"Este jogo está em beta, prossiga com cuidado\"\n                    en=\"This game is in beta and bugs might be everywhere\"\n                  />\n                }\n              />\n            )}\n\n            {Boolean(gameId) ? (\n              <div>\n                <Title className=\"center\">\n                  <Translate pt=\"Jogo inicializado\" en=\"Game Initialized\" />: {gameId}\n                </Title>\n                <Instruction>\n                  <Translate\n                    pt=\"Pressione OK para ser redirecionadx à página do jogo.\"\n                    en=\"Press OK to be redirected to the game page\"\n                  />\n                </Instruction>\n              </div>\n            ) : (\n              <Space className=\"space-container\" align=\"center\">\n                <Button type=\"primary\" size=\"large\" disabled={isLoading} onClick={createGame}>\n                  <Translate pt=\"Criar Jogo\" en=\"Create Game\" />\n                </Button>\n              </Space>\n            )}\n          </>\n        </Modal>\n      )}\n    </>\n  );\n}\n\ntype OptionsProps = {\n  options?: GameInfo['options'];\n  disabled: boolean;\n  onChangeOptions: GenericFunction;\n  selectedOptions: PlainObject;\n};\nfunction Options({ options = [], disabled, onChangeOptions, selectedOptions }: OptionsProps) {\n  return Boolean(options) ? (\n    <div className=\"create-game-modal-options\">\n      <Typography.Title level={5} className=\"create-game-modal-options__title\">\n        <Translate pt=\"Opções:\" en=\"Options:\" />\n      </Typography.Title>\n      {(options ?? []).map((option) => (\n        <Typography.Paragraph key={`option-${option.label}`} className=\"create-game-modal-options__option\">\n          <span className=\"create-game-modal-options__label\">{option.label}</span>\n          <span\n            className={clsx(\n              'create-game-modal-options__off',\n              !selectedOptions[option.key] && 'create-game-modal-options--selected'\n            )}\n          >\n            {option?.off ?? ''}\n          </span>\n          <Switch disabled={disabled} onChange={(e) => onChangeOptions(option.key, e)} />\n          <span\n            className={clsx(\n              'create-game-modal-options__on',\n              selectedOptions[option.key] && 'create-game-modal-options--selected'\n            )}\n          >\n            {option?.on ?? ''}\n          </span>\n          {Boolean(option.description) && (\n            <span className=\"create-game-modal-options__option-description\">{option.description}</span>\n          )}\n        </Typography.Paragraph>\n      ))}\n    </div>\n  ) : (\n    <div className=\"create-game-modal-options create-game-modal-options__no-options\">\n      <Typography.Text>\n        <Translate pt=\"Este jogo não possui customizações\" en=\"This game does not support customizations\" />\n      </Typography.Text>\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Card, Image, Divider, Badge, Space } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { PUBLIC_URL } from 'utils/constants';\nimport { calculateGameAverageDuration, isDevEnv, truncateRecommended } from 'utils/helpers';\n// Components\nimport { RulesModal } from 'components/rules';\nimport { CreateGameModal } from './CreateGameModal';\nimport { GameTags } from 'components/general/GameTags';\nimport { ClockCircleOutlined } from '@ant-design/icons';\n\nconst getVersionColor = (version: string) => {\n  if (version.includes('dev')) {\n    return '#6cb3f6';\n  }\n\n  if (version.includes('alpha')) {\n    return '#F97659';\n  }\n\n  if (version.includes('beta')) {\n    return '#F9D859';\n  }\n\n  const major = Number(version.split('.')[0]);\n\n  if (isNaN(major)) {\n    return '#96A0A3';\n  }\n\n  if (major === 0) {\n    return '#F9D859';\n  }\n\n  if (major === 1) {\n    return '#72D984';\n  }\n\n  if (major === 2) {\n    return '#7CBD51';\n  }\n\n  if (major >= 3) {\n    return '#7CBD51';\n  }\n\n  return '#96A0A3';\n};\n\ntype GameCardProps = {\n  game: GameInfo;\n  isAdmin?: boolean;\n};\n\nexport function GameCard({ game, isAdmin = true }: GameCardProps) {\n  const { language, translate } = useLanguage();\n\n  const duration = calculateGameAverageDuration(game);\n\n  return (\n    <Card\n      key={game.gameName}\n      className=\"game-card\"\n      cover={\n        <Badge.Ribbon text={game.version} color={getVersionColor(game.version)}>\n          <Image\n            alt={game.title[language]}\n            src={`${PUBLIC_URL.BANNERS}${game.gameName}-${language}.jpg`}\n            fallback={`${PUBLIC_URL.BANNERS}/em-breve-${language}.jpg`}\n          />\n        </Badge.Ribbon>\n      }\n    >\n      <div className=\"game-card__contents\">\n        <Space direction=\"vertical\">\n          <Card.Meta\n            title={\n              <span className=\"game-card__title\" title={game.title[language]}>\n                {isDevEnv && `[${game.gameCode}]`} {game.title[language]}\n              </span>\n            }\n            description={`${translate('Baseado em', 'Based on')} ${game.basedOn\n              .split('')\n              .reverse()\n              .join('')}`}\n          />\n\n          <Card.Meta className=\"game-card__description\" description={game.summary[language]} />\n\n          {Boolean(game.rules?.[language]?.length > 1) && (\n            <RulesModal\n              gameInfo={game}\n              buttonProps={{ size: 'small', className: 'game-card__margin-bottom' }}\n            />\n          )}\n\n          <GameTags\n            wrap\n            size={[1, 6]}\n            style={{ display: 'flex' }}\n            gameCode={game.gameCode}\n            tags={game.tags}\n          />\n        </Space>\n      </div>\n\n      <div className=\"game-card__actions\">\n        {game.duration && (\n          <Card.Meta\n            description={\n              <>\n                <ClockCircleOutlined /> {duration.min} min - {duration.max} min (Avg: {duration.ideal} min)\n              </>\n            }\n          />\n        )}\n\n        <Divider className=\"game-card__divider\" />\n\n        <Space direction=\"vertical\">\n          <Card.Meta\n            description={translate(\n              `Para ${game.playerCount.min}-${game.playerCount.max} jogadores`,\n              `For ${game.playerCount.min}-${game.playerCount.max} players`\n            )}\n          />\n\n          <Card.Meta\n            className=\"game-card__player-count\"\n            description={translate(\n              `Melhor com ${game.playerCount.best || '?'} jogadores`,\n              `Best wih ${game.playerCount.best || '?'} players`\n            )}\n          />\n\n          <Card.Meta\n            className=\"game-card__player-count game-card__margin-bottom\"\n            description={translate(\n              `Recomendado jogar com ${truncateRecommended(game.playerCount.recommended)}`,\n              `Recommended with ${truncateRecommended(game.playerCount.recommended)}`\n            )}\n          />\n        </Space>\n\n        {isAdmin && (\n          <div style={{ marginTop: '1rem' }}>\n            {Boolean(game.available[language]) && <CreateGameModal gameInfo={game} />}\n          </div>\n        )}\n      </div>\n    </Card>\n  );\n}\n"],"names":["GameTags","tags","gameCode","rest","language","useLanguage","sortedTags","forEach","tag","undefined","TAG_DICT","index","length","push","filter","v","Boolean","sortTags","wrap","map","color","label","useDevFeatures","useGlobalState","isDebugEnabled","setIsDebugEnabled","isDevEnv","toggleDevFeatures","s","DevMenu","pathname","useLocation","navigate","useNavigate","options","value","disabled","defaultValue","onChange","path","DevHeader","title","subTitle","extra","className","DevEmulatorAlert","useState","stay","setStay","usingFirestoreEmulator","usingFunctionsEmulator","displayDevWarningMessage","window","location","hostname","displayDevWarningMessageFunctions","port","hash","protocol","newPath","process","replace","emulatorUrl","useEffectOnce","Modal","icon","ExclamationCircleOutlined","content","okText","cancelText","onOk","href","message","type","showIcon","banner","SHOW_PARENT","TreeSelect","Filters","availabilityCount","setTagFilters","setNumberFilters","onNumberFiltersUpdate","key","prevState","FilterOutlined","min","max","size","e","Number","target","checked","step","TagTreeSelect","onTreeSelectChange","dualTranslate","treeData","useMemo","Object","values","keys","reduce","acc","tagKey","tagObj","group","capitalize","children","SEPARATOR","treeCheckable","showCheckedStrategy","placeholder","style","width","minWidth","migrationBlocked","RowOfGames","games","gutter","game","xs","sm","md","lg","xl","xxl","GameCard","isAdmin","includes","gameName","useTitle","useLocalStorage","getLocalStorage","setLanguage","tagFilters","numberFilters","prevLanguage","gameList","GAME_LIST","result","players","playerCount","bestWith","best","recommendedWith","recommended","split","tagGroup","TAG_RULES","duration","calculateGameAverageDuration","customTime","every","sort","a","b","available","version","startsWith","devGames","availableGames","comingSoonGames","DatabaseFilled","pt","en","LogoutButton","danger","ghost","id","level","updateLocal24hGameIds","latestGameIds","newId","now","Date","past24Hours","cleanedUpIds","entries","timestamp","LATEST_GAME_IDS","CreateGameModal","gameInfo","useCopyToClipboard","state","copyToClipboard","translate","setLoader","useLoading","setLocalStorage","isVisible","setVisibility","isLoading","setLoading","gameId","setGameId","setUserId","setUserName","setUserAvatarId","setOptions","useEffect","onCloseModal","useCallback","createGame","ADMIN_API","response","data","baseUrl","notification","description","JSON","stringify","placement","console","error","onClick","block","open","onCancel","okButtonProps","maskClosable","alt","src","PUBLIC_URL","fallback","Options","onChangeOptions","selectedOptions","margin","align","option","clsx","off","on","getVersionColor","major","isNaN","cover","text","direction","basedOn","reverse","join","summary","rules","buttonProps","display","ClockCircleOutlined","ideal","truncateRecommended","marginTop"],"sourceRoot":""}