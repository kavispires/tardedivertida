{"version":3,"file":"static/js/page-hub.2152dc0b.chunk.js","mappings":"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","sources":["components/auth/LogoutButton.tsx","components/general/GameTags.tsx","hooks/useDevFeatures.ts","pages/Dev/DevMenu.tsx","pages/Dev/DevHeader.tsx","pages/Hub/components/CreateGameModal.tsx","hooks/useRedirectToNewGame.ts","pages/Hub/components/GameCard.tsx","pages/Hub/components/DevEmulatorAlert.tsx","pages/Hub/components/Filters.tsx","pages/Hub/Hub.tsx"],"sourcesContent":["import { useMutation } from 'react-query';\nimport { useNavigate } from 'react-router-dom';\n// Ant Design Resources\nimport { App, Button, ButtonProps, Popconfirm } from 'antd';\n// Services\nimport { signOut } from 'services/firebase';\n// Components\nimport { Translate } from 'components/language';\n\nexport function LogoutButton(props: ButtonProps) {\n  const navigate = useNavigate();\n  const { message } = App.useApp();\n\n  const { isLoading, mutate } = useMutation({\n    // mutationKey: ['sign-out'],\n    mutationFn: async () => await signOut(),\n    onSuccess: () => {\n      navigate('/');\n    },\n    onError: (error: any) => {\n      message.error(`Something went wrong: ${JSON.stringify(error, null, 2)}`);\n    },\n  });\n\n  return (\n    <Popconfirm\n      title={<Translate pt=\"Tem certeza que quer deslogar?\" en=\"Are you sure you want to log out?\" />}\n      onConfirm={() => mutate()}\n      key=\"logout-button\"\n    >\n      <Button danger ghost {...props} loading={isLoading}>\n        Logout\n      </Button>\n    </Popconfirm>\n  );\n}\n","// Ant Design Resources\nimport { Space, SpaceProps, Tag } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { TAG_DICT } from 'utils/constants';\n\nconst sortTags = (tags: string[]) => {\n  const sortedTags: string[] = [];\n\n  tags.forEach((tag) => {\n    if (TAG_DICT?.[tag]?.index !== undefined) {\n      sortedTags[TAG_DICT[tag].index] = tag;\n    } else if (sortedTags.length < 18) {\n      sortedTags[18] = tag;\n    } else {\n      sortedTags.push(tag);\n    }\n  });\n\n  return sortedTags.filter((v) => Boolean(v));\n};\n\ntype GameTagsProps = {\n  tags: string[];\n  gameCode: GameCode;\n} & SpaceProps;\n\nexport function GameTags({ tags, gameCode, ...rest }: GameTagsProps) {\n  const { language } = useLanguage();\n  const sortedTags = sortTags(tags);\n\n  return (\n    <Space wrap {...rest}>\n      {sortedTags.map((tag) => (\n        <Tag key={`${gameCode}-${tag}`} color={TAG_DICT[tag]?.color}>\n          {TAG_DICT[tag]?.label[language]}\n        </Tag>\n      ))}\n    </Space>\n  );\n}\n","import { isDevEnv } from '../utils/helpers';\nimport { useGlobalState } from './useGlobalState';\n\n/**\n * Controls debug and dev environment\n * @returns\n */\nexport function useDevFeatures() {\n  const [isDebugEnabled, setIsDebugEnabled] = useGlobalState('isDebugEnabled');\n\n  const toggleDevFeatures = () => {\n    setIsDebugEnabled((s) => !s);\n  };\n\n  return {\n    isDevEnv,\n    isDebugEnabled,\n    toggleDevFeatures,\n  };\n}\n","import { Segmented } from 'antd';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nexport function DevMenu() {\n  const { pathname } = useLocation();\n  const navigate = useNavigate();\n\n  const options = [\n    { label: 'Home', value: '/', disabled: pathname === '/' },\n    { label: 'Hub', value: '/hub', disabled: pathname === '/hub' },\n    { label: 'Icons', value: '/dev/icons', disabled: pathname === '/dev/icons' },\n    { label: 'Colors', value: '/dev/colors', disabled: pathname === '/dev/colors' },\n    { label: 'Sprites', value: '/dev/sprites', disabled: pathname === '/dev/sprites' },\n    { label: 'Resources', value: '/dev/resources', disabled: pathname === '/dev/resources' },\n    { label: 'Playground', value: '/dev/playground', disabled: pathname === '/dev/playground' },\n    { label: 'Daily Setup', value: '/dev/dailysetup', disabled: pathname === '/dev/dailysetup' },\n    { label: 'Showcase', value: '/showcase', disabled: pathname === '/showcase' },\n  ];\n\n  const onNavigate = (path: any) => {\n    navigate(path);\n  };\n\n  return <Segmented options={options} defaultValue={pathname} onChange={onNavigate} />;\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { Space } from 'antd';\n// Components\nimport { DevMenu } from './DevMenu';\n\ntype DevHeaderProps = {\n  title: ReactNode;\n  subTitle?: ReactNode;\n  extra?: ReactNode;\n};\n\nexport function DevHeader({ title, subTitle, extra }: DevHeaderProps) {\n  return (\n    <header className=\"dev-header\">\n      <div className=\"dev-header__heading\">\n        <div className=\"dev-header__left\">\n          <span className=\"dev-header__title\">{title} </span>\n          <span className=\"dev-header__subtitle\">{subTitle}</span>\n        </div>\n        <div className=\"dev-header__extra\">\n          <Space className=\"dev-header__extra-space\" wrap>\n            {extra}\n          </Space>\n          <DevMenu />\n        </div>\n      </div>\n    </header>\n  );\n}\n","import clsx from 'clsx';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useCopyToClipboard } from 'react-use';\nimport { orderBy } from 'lodash';\n// Ant Design Resources\nimport { Image, Modal, Button, Divider, Typography, Switch, Space, Alert, App } from 'antd';\n// Adapters\nimport { ADMIN_API } from 'services/adapters';\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useLocalStorage } from 'hooks/useLocalStorage';\nimport { useRedirectToNewGame } from 'hooks/useRedirectToNewGame';\n// Constants\nimport { LATEST_GAME_IDS, PUBLIC_URL } from 'utils/constants';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\nimport { Loading } from 'components/loaders';\n\nconst updateLocal24hGameIds = (latestGameIds: NumberDictionary, newId: GameId) => {\n  const now = Date.now();\n  const past24Hours = now - 1000 * 60 * 60 * 24;\n  const cleanedUpIds = Object.entries(latestGameIds ?? {}).reduce((acc: PlainObject, [key, timestamp]) => {\n    if (timestamp > past24Hours) {\n      acc[key] = timestamp;\n    }\n    return acc;\n  }, {});\n  return {\n    [LATEST_GAME_IDS]: {\n      ...cleanedUpIds,\n      [newId]: now,\n    },\n  };\n};\n\nconst latestGameBeforeNewOne = (latestGameIds: NumberDictionary) => {\n  const idsObjectList = Object.entries(latestGameIds).map(([gameId, createdAt]) => ({ gameId, createdAt }));\n  if (idsObjectList.length < 2) {\n    return null;\n  }\n\n  const orderedList = orderBy(idsObjectList, 'createdAt', 'desc');\n  const twoHoursInMilliseconds = 2 * 60 * 60 * 1000; // 2 hours\n  const currentMilliseconds = Date.now();\n\n  // Check if game is too old\n  if (orderedList[1].createdAt - currentMilliseconds > twoHoursInMilliseconds) {\n    return null;\n  }\n\n  return orderedList[1].gameId;\n};\n\ntype CreateGameModalProps = {\n  gameInfo: GameInfo;\n};\n\nexport function CreateGameModal({ gameInfo }: CreateGameModalProps): JSX.Element {\n  const { message, notification } = App.useApp();\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n  const [state, copyToClipboard] = useCopyToClipboard();\n\n  const { language, translate } = useLanguage();\n  const { setLoader } = useLoading();\n  const [getLocalStorage, setLocalStorage] = useLocalStorage();\n  const [isVisible, setVisibility] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [gameId, setGameId] = useState(null);\n  const [, setUserId] = useGlobalState('userId');\n  const [, setUserName] = useGlobalState('username');\n  const [, setUserAvatarId] = useGlobalState('userAvatarId');\n  const [options, setOptions] = useState({});\n  const previousGameId = latestGameBeforeNewOne(getLocalStorage(LATEST_GAME_IDS));\n\n  const { startRedirect, isSettingRedirect, wasRedirectSuccessful } = useRedirectToNewGame();\n\n  useEffect(() => {\n    if (state.value && gameId) {\n      message.info(`Copied to clipboard: ${state.value}`);\n    }\n  }, [state, gameId, message]);\n\n  const onCloseModal = useCallback(() => {\n    setVisibility(false);\n  }, []);\n\n  const onChangeOptions = (key: string, value: boolean) => {\n    setOptions((s) => ({\n      ...s,\n      [key]: value,\n    }));\n  };\n\n  const createGame = async () => {\n    try {\n      setLoader('create', true);\n      setLoading(true);\n      const response: PlainObject = await ADMIN_API.createGame({\n        gameName: gameInfo.gameName,\n        language,\n        options,\n      });\n      if (response.data.gameId) {\n        setGameId(response.data.gameId);\n        setUserId(null);\n        setUserName('');\n        setUserAvatarId('');\n        setLocalStorage(updateLocal24hGameIds(getLocalStorage(LATEST_GAME_IDS), response.data.gameId));\n        const baseUrl = window.location.href.split(pathname)[0];\n        copyToClipboard(`${baseUrl}/${response.data.gameId}`);\n      }\n    } catch (e: any) {\n      notification.error({\n        message: translate(\n          'Aplicativo encontrou um erro ao tentar criar o jogo',\n          'The application found an error while trying to create a game',\n          language\n        ),\n        description: JSON.stringify(e.message),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n      setVisibility(false);\n    } finally {\n      setLoading(false);\n      setLoader('create', false);\n    }\n  };\n\n  const onConfirmGame = async () => {\n    if (gameId) {\n      navigate(`/${gameId}`);\n    } else {\n      message.info(\n        translate('Péra! O jogo ainda não foi inicializado.', 'Wait! The game has not been created')\n      );\n    }\n  };\n\n  return (\n    <>\n      <Button type=\"primary\" onClick={() => setVisibility(true)} block>\n        <Translate pt=\"Criar\" en=\"Create\" />\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`${translate('Criando novo jogo', 'Creating new game')}: ${gameInfo.title[language]}`}\n          open={isVisible}\n          onCancel={onCloseModal}\n          onOk={onConfirmGame}\n          okButtonProps={{ disabled: Boolean(!gameId) || isSettingRedirect }}\n          maskClosable={false}\n        >\n          <>\n            <Image\n              alt={gameInfo.title[language]}\n              src={`${PUBLIC_URL.BANNERS}${gameInfo.gameName}-${language}.jpg`}\n              fallback={`${PUBLIC_URL.BANNERS}/em-breve-${language}.jpg`}\n              className=\"round-corners\"\n            />\n\n            <Options\n              options={gameInfo.options}\n              disabled={isLoading || Boolean(gameId)}\n              onChangeOptions={onChangeOptions}\n              selectedOptions={options}\n            />\n\n            <Divider />\n\n            {isLoading && (\n              <>\n                <Instruction>\n                  <Translate pt=\"O jogo está sendo criado...\" en=\"The game session is being created\" />\n                </Instruction>\n                <Loading message={translate('Gerando...', 'Generating...')} margin />\n              </>\n            )}\n\n            {gameInfo.version.startsWith('alpha') && (\n              <Alert\n                type=\"warning\"\n                showIcon\n                message={\n                  <Translate\n                    pt=\"Este jogo está em alpha, não o jogue\"\n                    en=\"This game is still in alpha and shouldn't be played\"\n                  />\n                }\n              />\n            )}\n\n            {gameInfo.version.startsWith('beta') && (\n              <Alert\n                type=\"warning\"\n                showIcon\n                message={\n                  <Translate\n                    pt=\"Este jogo está em beta, prossiga com cuidado\"\n                    en=\"This game is in beta and bugs might be everywhere\"\n                  />\n                }\n              />\n            )}\n\n            {Boolean(gameId) ? (\n              <div>\n                <Title className=\"center\">\n                  <Translate pt=\"Jogo inicializado\" en=\"Game Initialized\" />: {gameId}\n                </Title>\n                <Instruction>\n                  {previousGameId && !wasRedirectSuccessful && (\n                    <Alert\n                      type=\"info\"\n                      showIcon\n                      message={\n                        <>\n                          <Translate\n                            pt={\n                              <>\n                                Você quer redirecionar jogadores em {previousGameId} para essa nova partida?\n                              </>\n                            }\n                            en={<>Redirect players in {previousGameId} to this new play?</>}\n                          />\n                          <Button\n                            size=\"large\"\n                            onClick={() =>\n                              startRedirect(previousGameId ?? '', gameId ?? '', gameInfo.gameName)\n                            }\n                            disabled={!gameId || !previousGameId}\n                            loading={isSettingRedirect}\n                          >\n                            <Translate pt=\"Redirecione-os\" en=\"Redirect them\" />\n                          </Button>\n                        </>\n                      }\n                    />\n                  )}\n                  {wasRedirectSuccessful && (\n                    <Alert\n                      type=\"info\"\n                      showIcon\n                      message={\n                        <Translate\n                          pt={\n                            <>\n                              Jogadores em {previousGameId} foram convidados para o jogo {gameId}\n                            </>\n                          }\n                          en={\n                            <>\n                              Players in {previousGameId} have been invited to {gameId}\n                            </>\n                          }\n                        />\n                      }\n                    />\n                  )}\n                </Instruction>\n              </div>\n            ) : (\n              <Space className=\"space-container\" align=\"center\">\n                <Button type=\"primary\" size=\"large\" disabled={isLoading} onClick={createGame}>\n                  <Translate pt=\"Criar Jogo\" en=\"Create Game\" />\n                </Button>\n              </Space>\n            )}\n          </>\n        </Modal>\n      )}\n    </>\n  );\n}\n\ntype OptionsProps = {\n  options?: GameInfo['options'];\n  disabled: boolean;\n  onChangeOptions: GenericFunction;\n  selectedOptions: PlainObject;\n};\nfunction Options({ options = [], disabled, onChangeOptions, selectedOptions }: OptionsProps) {\n  return Boolean(options.length) ? (\n    <div className=\"create-game-modal-options\">\n      <Typography.Title level={5} className=\"create-game-modal-options__title\">\n        <Translate pt=\"Opções:\" en=\"Options:\" />\n      </Typography.Title>\n      <div className=\"create-game-modal-options__list\">\n        {(options ?? []).map((option) => (\n          <Typography.Paragraph\n            key={`option-${option.label}`}\n            className={clsx(\n              'create-game-modal-options__option',\n              option.disabled && 'create-game-modal-options__option--disabled'\n            )}\n          >\n            <span className=\"create-game-modal-options__label\">{option.label}</span>\n            <span\n              className={clsx(\n                'create-game-modal-options__off',\n                !selectedOptions[option.key] && 'create-game-modal-options--selected'\n              )}\n            >\n              {option?.off ?? ''}\n            </span>\n            <Switch disabled={disabled || option.disabled} onChange={(e) => onChangeOptions(option.key, e)} />\n            <span\n              className={clsx(\n                'create-game-modal-options__on',\n                selectedOptions[option.key] && 'create-game-modal-options--selected'\n              )}\n            >\n              {option?.on ?? ''}\n            </span>\n            {Boolean(option.description) && (\n              <span className=\"create-game-modal-options__option-description\">{option.description}</span>\n            )}\n          </Typography.Paragraph>\n        ))}\n      </div>\n    </div>\n  ) : (\n    <div className=\"create-game-modal-options create-game-modal-options__no-options\">\n      <Typography.Text>\n        <Translate pt=\"Este jogo não possui customizações\" en=\"This game does not support customizations\" />\n      </Typography.Text>\n    </div>\n  );\n}\n","import { App } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { useMutation, useQuery } from 'react-query';\nimport { GAME_API } from 'services/adapters';\nimport { ADMIN_API } from 'services/adapters';\nimport { useCurrentUserContext } from './useCurrentUserContext';\nimport { ADMIN_ACTIONS } from 'utils/constants';\n\ntype GameMetaResponse = {\n  data: GameMeta;\n};\n\nexport function useRedirectToNewGame() {\n  const { notification } = App.useApp();\n  const { currentUser } = useCurrentUserContext();\n  const [happenedOnce, setHappenedOnce] = useState(false);\n  const [previousGameId, setPreviousGameId] = useState('');\n  const [newGame, setNewGame] = useState({\n    gameId: '',\n    gameName: '',\n  });\n\n  const metaQuery = useQuery<GameMetaResponse>({\n    queryKey: ['meta', previousGameId],\n    queryFn: async () => {\n      console.count('Fetching game meta...');\n      return (await GAME_API.loadGame({ gameId: previousGameId })) as GameMetaResponse;\n    },\n    enabled: Boolean(previousGameId),\n    onError: (e: any) => {\n      console.error(e);\n      notification.error({\n        message: 'Failed to load previous game to trigger the redirect',\n        description: JSON.stringify(e.message),\n      });\n    },\n  });\n\n  const mutation = useMutation({\n    mutationKey: ['oldState', newGame.gameId],\n    mutationFn: async (payload: {}) => {\n      const meta = metaQuery.data?.data as GameMeta;\n\n      return await ADMIN_API.performAdminAction({\n        gameId: previousGameId,\n        gameName: meta?.gameName ?? '',\n        playerId: currentUser.id,\n        action: ADMIN_ACTIONS.FORCE_STATE_PROPERTY,\n        state: payload,\n      });\n    },\n    onSuccess: async () => {\n      notification.success({\n        message: 'Redirect successfully triggered',\n      });\n    },\n    onError: (e: any) => {\n      console.error(e);\n      notification.error({\n        message: 'Failed to load previous game to continue the redirect',\n        description: JSON.stringify(e.message),\n      });\n    },\n  });\n\n  useEffect(() => {\n    if (\n      !happenedOnce &&\n      previousGameId &&\n      newGame.gameId &&\n      newGame.gameName &&\n      metaQuery.isSuccess &&\n      metaQuery?.data?.data?.gameName\n    ) {\n      setHappenedOnce(true);\n      mutation.mutate({\n        redirect: {\n          redirectAt: Date.now(),\n          ...newGame,\n        },\n      });\n    }\n  }, [previousGameId, happenedOnce, newGame, metaQuery?.data?.data?.gameName, metaQuery.isSuccess, mutation]);\n\n  const startRedirect = async (previousGameId: GameId, newGameId: GameId, newGameName: GameName) => {\n    if (happenedOnce) {\n      notification.error({\n        message: 'Redirect has failed to trigger',\n      });\n      return;\n    }\n    setNewGame({\n      gameId: newGameId,\n      gameName: newGameName,\n    });\n    setPreviousGameId(previousGameId);\n  };\n\n  return {\n    isSettingRedirect: metaQuery.isLoading && mutation.isLoading,\n    startRedirect,\n    wasRedirectSuccessful: mutation.isSuccess,\n  };\n}\n","// Ant Design Resources\nimport { Card, Image, Divider, Badge, Space } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { PUBLIC_URL } from 'utils/constants';\nimport { calculateGameAverageDuration, isDevEnv, truncateRecommended } from 'utils/helpers';\n// Components\nimport { RulesModal } from 'components/rules';\nimport { CreateGameModal } from './CreateGameModal';\nimport { GameTags } from 'components/general/GameTags';\nimport { ClockCircleOutlined } from '@ant-design/icons';\n\nconst getVersionColor = (version: string) => {\n  if (version.includes('dev')) {\n    return '#6cb3f6';\n  }\n\n  if (version.includes('alpha')) {\n    return '#F97659';\n  }\n\n  if (version.includes('beta')) {\n    return '#F9D859';\n  }\n\n  const major = Number(version.split('.')[0]);\n\n  if (isNaN(major)) {\n    return '#96A0A3';\n  }\n\n  if (major === 0) {\n    return '#F9D859';\n  }\n\n  if (major === 1) {\n    return '#72D984';\n  }\n\n  if (major === 2) {\n    return '#7CBD51';\n  }\n\n  if (major >= 3) {\n    return '#7CBD51';\n  }\n\n  return '#96A0A3';\n};\n\ntype GameCardProps = {\n  game: GameInfo;\n  isAdmin?: boolean;\n};\n\nexport function GameCard({ game, isAdmin = true }: GameCardProps) {\n  const { language, translate } = useLanguage();\n\n  const duration = calculateGameAverageDuration(game);\n\n  return (\n    <Card\n      key={game.gameName}\n      className=\"game-card\"\n      cover={\n        <Badge.Ribbon text={game.version} color={getVersionColor(game.version)}>\n          <Image\n            alt={game.title[language]}\n            src={`${PUBLIC_URL.BANNERS}${game.gameName}-${language}.jpg`}\n            fallback={`${PUBLIC_URL.BANNERS}/em-breve-${language}.jpg`}\n          />\n        </Badge.Ribbon>\n      }\n    >\n      <div className=\"game-card__contents\">\n        <Space direction=\"vertical\">\n          <Card.Meta\n            title={\n              <span className=\"game-card__title\" title={game.title[language]}>\n                {isDevEnv && `[${game.gameCode}]`} {game.title[language]}\n              </span>\n            }\n            description={`${translate('Baseado em', 'Based on')} ${game.basedOn\n              .split('')\n              .reverse()\n              .join('')}`}\n          />\n\n          <Card.Meta className=\"game-card__description\" description={game.summary[language]} />\n\n          {Boolean(game.rules?.[language]?.length > 1) && (\n            <RulesModal\n              gameInfo={game}\n              buttonProps={{ size: 'small', className: 'game-card__margin-bottom' }}\n            />\n          )}\n\n          <GameTags\n            wrap\n            size={[1, 6]}\n            style={{ display: 'flex' }}\n            gameCode={game.gameCode}\n            tags={game.tags}\n          />\n        </Space>\n      </div>\n\n      <div className=\"game-card__actions\">\n        {game.duration && (\n          <Card.Meta\n            description={\n              <>\n                <ClockCircleOutlined /> {duration.min} min - {duration.max} min (Avg: {duration.ideal} min)\n              </>\n            }\n          />\n        )}\n\n        <Divider className=\"game-card__divider\" />\n\n        <Space direction=\"vertical\">\n          <Card.Meta\n            description={translate(\n              `Para ${game.playerCount.min}-${game.playerCount.max} jogadores`,\n              `For ${game.playerCount.min}-${game.playerCount.max} players`\n            )}\n          />\n\n          <Card.Meta\n            className=\"game-card__player-count\"\n            description={translate(\n              `Melhor com ${game.playerCount.best || '?'} jogadores`,\n              `Best wih ${game.playerCount.best || '?'} players`\n            )}\n          />\n\n          <Card.Meta\n            className=\"game-card__player-count game-card__margin-bottom\"\n            description={translate(\n              `Recomendado jogar com ${truncateRecommended(game.playerCount.recommended)}`,\n              `Recommended with ${truncateRecommended(game.playerCount.recommended)}`\n            )}\n          />\n        </Space>\n\n        {isAdmin && (\n          <div style={{ marginTop: '1rem' }}>\n            {Boolean(game.available[language]) && <CreateGameModal gameInfo={game} />}\n          </div>\n        )}\n      </div>\n    </Card>\n  );\n}\n","import { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { Alert, Button, Modal } from 'antd';\nimport { useDevFeatures } from 'hooks/useDevFeatures';\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useState } from 'react';\nimport { useEffectOnce } from 'react-use';\n\n/**\n * The emulator only properly works if using the local ip, to allow multi device testing\n * including mobile, this component will display an alert in case the current port is localhost\n */\nexport function DevEmulatorAlert() {\n  const { isDevEnv } = useDevFeatures();\n  const [stay, setStay] = useState(false);\n  const [usingFirestoreEmulator] = useGlobalState('usingFirestoreEmulator');\n  const [usingFunctionsEmulator] = useGlobalState('usingFunctionsEmulator');\n\n  const ip = process.env.REACT_APP_LOCAL_IP;\n  const displayDevWarningMessage = isDevEnv && window.location.hostname !== usingFirestoreEmulator;\n  const displayDevWarningMessageFunctions = isDevEnv && window.location.hostname !== usingFunctionsEmulator;\n  const { port, pathname, hash, protocol } = window.location;\n  const newPath = `${ip}:${port}${pathname}/${hash}`.replace('//', '/');\n  const emulatorUrl = `${protocol}//${newPath}`;\n\n  useEffectOnce(() => {\n    if (!stay && isDevEnv && displayDevWarningMessage) {\n      Modal.confirm({\n        title: 'Wrong Dev Environment',\n        icon: <ExclamationCircleOutlined />,\n        content: 'You are in a development environment and not using the Firestore emulator.',\n        okText: 'Switch Routes',\n        cancelText: 'Stay in Localhost',\n        onOk: () => {\n          setStay(true);\n          window.location.href = emulatorUrl;\n        },\n      });\n    }\n  });\n\n  if (!isDevEnv) return <></>;\n\n  return (\n    <>\n      {displayDevWarningMessage && (\n        <Alert\n          message={\n            <>\n              You are in a development environment and not using the Firestore emulator.{' '}\n              <Button href={emulatorUrl} type=\"link\">\n                Switch Routes\n              </Button>\n            </>\n          }\n          type=\"error\"\n          showIcon\n          banner\n        />\n      )}\n      {displayDevWarningMessageFunctions && (\n        <Alert\n          message={\n            <>\n              You are in a development environment and not using the Functions emulator.{' '}\n              <Button href={emulatorUrl} type=\"link\">\n                Switch Routes\n              </Button>\n            </>\n          }\n          type=\"warning\"\n          showIcon\n          banner\n        />\n      )}\n      {!displayDevWarningMessageFunctions && !displayDevWarningMessage && (\n        <Alert message={<>You are running emulators safely.</>} type=\"success\" showIcon banner />\n      )}\n    </>\n  );\n}\n","import { capitalize } from 'lodash';\nimport { useMemo } from 'react';\n// Ant Design Resources\nimport { FilterOutlined } from '@ant-design/icons';\nimport { InputNumber, Select, Space, TreeSelect } from 'antd';\nimport { DefaultOptionType } from 'antd/lib/select';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { SEPARATOR, TAG_DICT } from 'utils/constants';\n\nconst { SHOW_PARENT } = TreeSelect;\n\ntype FiltersProps = {\n  setTagFilters: GenericFunction;\n  setNumberFilters: GenericFunction;\n  availabilityCount: number;\n};\nexport function Filters({ availabilityCount, setTagFilters, setNumberFilters }: FiltersProps) {\n  const onNumberFiltersUpdate = (key: string, value: number) => {\n    setNumberFilters((prevState: NumberDictionary) => ({\n      ...prevState,\n      [key]: value,\n    }));\n  };\n\n  const onPlayingSelectChange = (value: string) => {\n    onNumberFiltersUpdate('recommendedWith', Number(value === 'recommended'));\n    onNumberFiltersUpdate('bestWith', Number(value === 'best'));\n  };\n\n  return (\n    <Space className=\"hub-filters\" wrap size=\"middle\">\n      <span>\n        <FilterOutlined /> ({availabilityCount})\n      </span>\n      <Select defaultValue=\"\" style={{ minWidth: '20ch' }} size=\"small\" onChange={onPlayingSelectChange}>\n        <Select.Option value=\"\">Playing with</Select.Option>\n        <Select.Option value=\"recommended\">Recommended with</Select.Option>\n        <Select.Option value=\"best\">Best with</Select.Option>\n      </Select>\n      <div className=\"hub-filters__entry\">\n        <label>Players</label>\n        <InputNumber\n          min={2}\n          max={12}\n          size=\"small\"\n          className=\"hub-filters__input-number\"\n          onChange={(value) => onNumberFiltersUpdate('players', value ?? 0)}\n        />\n      </div>\n      <div className=\"hub-filters__entry\">\n        <label>Duration</label>\n        <InputNumber\n          min={15}\n          step={15}\n          size=\"small\"\n          className=\"hub-filters__input-number\"\n          onChange={(value) => onNumberFiltersUpdate('duration', value ?? 0)}\n        />\n      </div>\n      <div className=\"hub-filters__entry\">\n        <label>Tags</label>\n        <TagTreeSelect value={undefined} onTreeSelectChange={setTagFilters} />\n      </div>\n    </Space>\n  );\n}\n\nfunction TagTreeSelect({ value, onTreeSelectChange }: any) {\n  const { dualTranslate } = useLanguage();\n\n  const onChange = (tags: string[]) => {\n    onTreeSelectChange(\n      tags\n      // .map((tag) => {\n      //   if (tag.includes(SEPARATOR)) {\n      //     return tag.split(SEPARATOR);\n      //   }\n      //   return tag;\n      // })\n      // .flat()\n    );\n  };\n\n  const treeData: DefaultOptionType[] = useMemo(\n    () =>\n      Object.values(\n        Object.keys(TAG_DICT).reduce((acc: any, tagKey: string) => {\n          const tagObj = TAG_DICT[tagKey];\n          if (acc[tagObj.group] === undefined) {\n            acc[tagObj.group] = {\n              title: capitalize(tagObj.group),\n              value: tagObj.group,\n              children: [],\n            };\n          }\n\n          acc[tagObj.group].children.push({\n            title: capitalize(dualTranslate(tagObj.label)),\n            value: `${tagObj.group}${SEPARATOR}${tagKey}`,\n          });\n\n          return acc;\n        }, {})\n      ),\n    [dualTranslate]\n  );\n\n  return (\n    <TreeSelect\n      treeData={treeData}\n      value={value}\n      onChange={onChange}\n      treeCheckable={true}\n      showCheckedStrategy={SHOW_PARENT}\n      placeholder=\"Select Game Tags\"\n      size=\"small\"\n      style={{\n        width: '100%',\n        minWidth: '400px',\n      }}\n    />\n  );\n}\n","import { useMemo, useState } from 'react';\nimport { useEffectOnce, useTitle } from 'react-use';\n// Ant Design Resources\nimport { Typography, Layout, Divider, Row, Col } from 'antd';\nimport { DatabaseFilled } from '@ant-design/icons';\n\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLocalStorage } from 'hooks/useLocalStorage';\n// Utils\nimport GAME_LIST from 'utils/info';\nimport { SEPARATOR, TAG_RULES } from 'utils/constants';\nimport { calculateGameAverageDuration, isDevEnv } from 'utils/helpers';\n// Components\nimport { GameCard } from './components/GameCard';\nimport { LanguageSwitch, Translate } from 'components/language';\nimport { DevHeader } from 'pages/Dev/DevHeader';\nimport { DevEmulatorAlert } from './components/DevEmulatorAlert';\nimport { Filters } from './components/Filters';\nimport { LogoutButton } from 'components/auth/LogoutButton';\n\n// Players migration\nconst migrationBlocked = ['espiao-entre-nos', 'sonhos-pesadelos', 'ta-na-cara', 'vendaval-de-palpite'];\n\nfunction Hub() {\n  useTitle('Hub - Tarde Divertida');\n\n  const { language } = useLanguage();\n  const [getLocalStorage] = useLocalStorage();\n  const [, setLanguage] = useGlobalState('language');\n  const [tagFilters, setTagFilters] = useState<string[]>([]);\n  const [numberFilters, setNumberFilters] = useState<NumberDictionary>({});\n\n  useEffectOnce(() => {\n    const prevLanguage = getLocalStorage('language');\n\n    if (prevLanguage) {\n      setLanguage(prevLanguage);\n    }\n  });\n\n  const gameList = useMemo(\n    () =>\n      Object.values(GAME_LIST).filter((game) => {\n        let result = [];\n\n        // Check player count\n        if (numberFilters.players) {\n          result.push(\n            game.playerCount.min <= numberFilters.players && game.playerCount.max >= numberFilters.players\n          );\n\n          if (numberFilters.bestWith) {\n            result.push(numberFilters.players === game.playerCount.best);\n          }\n\n          if (numberFilters.recommendedWith) {\n            result.push(game.playerCount.recommended.includes(numberFilters.players));\n          }\n        }\n\n        // Check tags\n        // TODO: this does not account for tagGroups and concurrent tags\n        tagFilters.forEach((tagKey) => {\n          const [tagGroup, tag] = tagKey.split(SEPARATOR);\n\n          if (tagGroup && tag && TAG_RULES?.[tagGroup] === 'exclusive') {\n            result.push(game.tags.includes(tag));\n          } else if (tag) {\n            result.push(game.tags.includes(tag));\n          }\n        });\n\n        // Check time\n        if (numberFilters.duration) {\n          const duration = calculateGameAverageDuration(game, numberFilters.players ?? 0);\n\n          if (numberFilters.players) {\n            result.push(\n              numberFilters.duration >= duration.customTime - 10 &&\n                numberFilters.duration <= duration.customTime + 10\n            );\n          } else {\n            result.push(numberFilters.duration >= duration.min && numberFilters.duration <= duration.max);\n          }\n        }\n\n        return result.every(Boolean);\n      }),\n    [tagFilters, numberFilters]\n  );\n\n  const { availableGames, comingSoonGames, devGames } = useMemo(() => {\n    const sortedGameList = gameList.sort((a, b) => (a.title[language] > b.title[language] ? 1 : -1));\n\n    return sortedGameList.reduce(\n      (acc: any, game) => {\n        if (game.available[language]) {\n          if (['alpha', 'dev'].includes(game.version) || game.version.startsWith('beta')) {\n            acc.devGames.push(game);\n          } else {\n            acc.availableGames.push(game);\n          }\n        } else {\n          acc.comingSoonGames.push(game);\n        }\n        return acc;\n      },\n      {\n        availableGames: [],\n        devGames: [],\n        comingSoonGames: [],\n      }\n    );\n  }, [gameList, language]);\n  return (\n    <Layout className=\"dev-layout\">\n      <DevHeader\n        title={\n          <>\n            <DatabaseFilled /> Hub\n          </>\n        }\n        subTitle={<Translate pt=\"Selecione um jogo para começar\" en=\"Select a game to start\" />}\n        extra={[\n          <LanguageSwitch key=\"language-switch\" />,\n          <LogoutButton key=\"logout-button\" danger ghost size=\"small\" />,\n        ]}\n      />\n\n      <DevEmulatorAlert />\n\n      <Filters\n        setTagFilters={setTagFilters}\n        setNumberFilters={setNumberFilters}\n        availabilityCount={availableGames.length}\n      />\n\n      <Layout.Content className=\"container\" id=\"main-container\">\n        {isDevEnv && (\n          <>\n            <Typography.Title level={2}>\n              <Translate pt=\"Em Desenvolvimento\" en=\"Under Development\" />\n            </Typography.Title>\n            <RowOfGames games={devGames} />\n            <Divider />\n          </>\n        )}\n        <Typography.Title level={2}>\n          <Translate pt=\"Disponíveis\" en=\"Available\" />\n        </Typography.Title>\n        <RowOfGames games={availableGames} />\n\n        <Divider />\n        {!isDevEnv && (\n          <>\n            <Typography.Title level={2}>\n              <Translate pt=\"Em Desenvolvimento\" en=\"Under Development\" />\n            </Typography.Title>\n            <RowOfGames games={devGames} />\n\n            <Divider />\n          </>\n        )}\n        <Typography.Title level={2}>\n          <Translate pt=\"Em Breve\" en=\"Coming Soon\" />\n        </Typography.Title>\n        <RowOfGames games={comingSoonGames} />\n      </Layout.Content>\n    </Layout>\n  );\n}\n\ntype RowOfGamesProps = {\n  games: GameInfo[];\n};\n\nfunction RowOfGames({ games }: RowOfGamesProps) {\n  return (\n    <Row gutter={[8, 16]}>\n      {games.map((game: GameInfo) => (\n        <Col key={game.gameName} xs={24} sm={12} md={8} lg={8} xl={6} xxl={4}>\n          <GameCard game={game} isAdmin={!migrationBlocked.includes(game.gameName)} />\n        </Col>\n      ))}\n    </Row>\n  );\n}\n\nexport default Hub;\n"],"names":["LogoutButton","props","navigate","useNavigate","message","App","useMutation","mutationFn","signOut","onSuccess","onError","error","JSON","stringify","isLoading","mutate","title","pt","en","onConfirm","danger","ghost","loading","GameTags","tags","gameCode","rest","language","useLanguage","sortedTags","forEach","tag","undefined","TAG_DICT","index","length","push","filter","v","Boolean","sortTags","wrap","map","color","label","useDevFeatures","useGlobalState","isDebugEnabled","setIsDebugEnabled","isDevEnv","toggleDevFeatures","s","DevMenu","pathname","useLocation","options","value","disabled","defaultValue","onChange","path","DevHeader","subTitle","extra","className","updateLocal24hGameIds","latestGameIds","newId","now","Date","past24Hours","cleanedUpIds","Object","entries","reduce","acc","key","timestamp","LATEST_GAME_IDS","CreateGameModal","gameInfo","notification","useCopyToClipboard","state","copyToClipboard","translate","setLoader","useLoading","useLocalStorage","getLocalStorage","setLocalStorage","useState","isVisible","setVisibility","setLoading","gameId","setGameId","setUserId","setUserName","setUserAvatarId","setOptions","previousGameId","idsObjectList","createdAt","orderedList","orderBy","currentMilliseconds","latestGameBeforeNewOne","currentUser","useCurrentUserContext","happenedOnce","setHappenedOnce","setPreviousGameId","gameName","newGame","setNewGame","metaQuery","useQuery","queryKey","queryFn","console","count","GAME_API","enabled","e","description","mutation","mutationKey","payload","meta","data","ADMIN_API","playerId","id","action","ADMIN_ACTIONS","success","useEffect","isSuccess","redirect","redirectAt","startRedirect","newGameId","newGameName","isSettingRedirect","wasRedirectSuccessful","useRedirectToNewGame","info","onCloseModal","useCallback","createGame","response","baseUrl","window","location","href","split","placement","onConfirmGame","type","onClick","block","open","onCancel","onOk","okButtonProps","maskClosable","alt","src","PUBLIC_URL","fallback","Options","onChangeOptions","selectedOptions","margin","version","startsWith","showIcon","size","align","level","option","clsx","off","on","getVersionColor","includes","major","Number","isNaN","GameCard","game","isAdmin","duration","calculateGameAverageDuration","cover","text","direction","basedOn","reverse","join","summary","rules","buttonProps","style","display","ClockCircleOutlined","min","max","ideal","playerCount","best","truncateRecommended","recommended","marginTop","available","DevEmulatorAlert","stay","setStay","usingFirestoreEmulator","usingFunctionsEmulator","displayDevWarningMessage","hostname","displayDevWarningMessageFunctions","port","hash","protocol","newPath","process","replace","emulatorUrl","useEffectOnce","Modal","icon","ExclamationCircleOutlined","content","okText","cancelText","banner","SHOW_PARENT","TreeSelect","Filters","availabilityCount","setTagFilters","setNumberFilters","onNumberFiltersUpdate","prevState","FilterOutlined","minWidth","step","TagTreeSelect","onTreeSelectChange","dualTranslate","treeData","useMemo","values","keys","tagKey","tagObj","group","capitalize","children","SEPARATOR","treeCheckable","showCheckedStrategy","placeholder","width","migrationBlocked","RowOfGames","games","gutter","xs","sm","md","lg","xl","xxl","useTitle","setLanguage","tagFilters","numberFilters","prevLanguage","gameList","GAME_LIST","result","players","bestWith","recommendedWith","tagGroup","TAG_RULES","customTime","every","sort","a","b","devGames","availableGames","comingSoonGames","DatabaseFilled"],"sourceRoot":""}