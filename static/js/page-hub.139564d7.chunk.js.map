{"version":3,"file":"static/js/page-hub.139564d7.chunk.js","mappings":"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","sources":["components/rules/CollapsibleRule.tsx","components/rules/PopoverRule.tsx","components/rules/RulesCarousel.tsx","components/rules/RulesList.tsx","components/rules/RulesModal.tsx","components/text/Instruction.tsx","components/text/RoundsLeftInstruction.tsx","components/text/TextHighlight.tsx","components/text/Title.tsx","hooks/useDevFeatures.ts","pages/Hub/components/CreateGameModal.tsx","pages/Hub/components/GameCard.tsx","pages/Hub/components/DevEmulatorAlert.tsx","pages/Hub/Hub.tsx","services/adapters.ts"],"sourcesContent":["// Ant Design Resources\nimport { Collapse } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Instruction } from 'components/text';\nimport { ReactNode } from 'react';\n\ntype CollapsibleRuleProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * The title of the panel (default: Rules/Regras)\n   */\n  title?: string;\n};\nexport function CollapsibleRule({ children, title }: CollapsibleRuleProps): JSX.Element {\n  const { translate } = useLanguage();\n\n  return (\n    <Instruction contained>\n      <Collapse ghost>\n        <Collapse.Panel header={translate('Regras', 'Rules', title)} key=\"1\">\n          {children}\n        </Collapse.Panel>\n      </Collapse>\n    </Instruction>\n  );\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { ReadOutlined } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\nimport { FixedMenuButton } from 'components/buttons';\n\ntype PopoverRuleProps = {\n  /**\n   * The rules themselves\n   */\n  content: ReactNode;\n  /**\n   * A custom label other than rules/regras\n   */\n  label?: ReactNode;\n  /**\n   * If label should be displayed\n   */\n  showLabel?: boolean;\n};\n\nexport function PopoverRule({ content, label, showLabel = false }: PopoverRuleProps): JSX.Element {\n  return (\n    <FixedMenuButton\n      type=\"popover\"\n      position={0}\n      icon={<ReadOutlined />}\n      content={content}\n      label={label || <Translate pt=\" Regras\" en=\" Rules\" />}\n      showLabel={showLabel}\n      buttonProps={{\n        type: 'primary',\n      }}\n    />\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Typography, Image, Carousel, Button } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Constants\nimport { PUBLIC_URL } from 'utils/constants';\nimport { DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\n\ntype RulesCarouselProps = {\n  info: GameInfo;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  ruleClass?: string;\n};\n\nexport function RulesCarousel({ info, className = '', ruleClass = '' }: RulesCarouselProps): JSX.Element {\n  const { language } = useLanguage();\n  const settings = {\n    prevArrow: (\n      <Button>\n        <DoubleLeftOutlined className=\"rules-carousel__nav rules-carousel__nav--left\" />\n      </Button>\n    ),\n    nextArrow: (\n      <Button>\n        <DoubleRightOutlined className=\"rules-carousel__nav rules-carousel__nav--right\" />\n      </Button>\n    ),\n  };\n\n  return (\n    <Carousel\n      className={clsx('rules-carousel', className)}\n      autoplay\n      autoplaySpeed={15000}\n      arrows\n      {...settings}\n    >\n      {info.rules[language].map((rule, index) => (\n        <div className={clsx('rules-carousel__rule', ruleClass)} key={rule}>\n          <span className=\"rules-carousel__rule-number\">{index + 1}</span>\n\n          <Image\n            className=\"rules-carousel__image\"\n            src={\n              index === 0\n                ? `${PUBLIC_URL.BANNERS}${info.gameName}-${language}.jpg`\n                : `${PUBLIC_URL.RULES}game-rule-${info.gameName}-${index}.jpg`\n            }\n            fallback={`${PUBLIC_URL.RULES}game-rule-not-found.jpg`}\n            alt={rule}\n          />\n          <Typography.Paragraph className=\"rules-carousel__rule-text\">{rule}</Typography.Paragraph>\n        </div>\n      ))}\n    </Carousel>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n\ntype RulesListProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n};\n\nexport function RulesList({ children, className = '' }: RulesListProps): JSX.Element {\n  return <ul className={clsx('rules-list', className)}>{children}</ul>;\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, ButtonProps, Modal } from 'antd';\nimport { ReadOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Translate } from 'components/language';\nimport { RulesCarousel } from 'components/rules';\n\ntype RulesModalProps = {\n  gameInfo: GameInfo;\n  buttonProps?: ButtonProps;\n};\n\nexport function RulesModal({ gameInfo, buttonProps }: RulesModalProps): JSX.Element {\n  const { language, translate } = useLanguage();\n  const [isVisible, setVisibility] = useState(false);\n\n  const onCloseModal = () => {\n    setVisibility(false);\n  };\n\n  return (\n    <>\n      <Button type=\"default\" onClick={() => setVisibility(true)} icon={<ReadOutlined />} {...buttonProps}>\n        <Translate pt=\"Regras\" en=\"Rules\" />\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`${translate('Regras', 'Rules')}: ${gameInfo.title[language]}`}\n          visible={isVisible}\n          onCancel={onCloseModal}\n          className=\"rules-modal\"\n          footer={[\n            <Button key=\"close\" onClick={onCloseModal}>\n              <Translate pt=\"Fechar\" en=\"Close\" />\n            </Button>,\n          ]}\n        >\n          <RulesCarousel info={gameInfo} />\n        </Modal>\n      )}\n    </>\n  );\n}\n","import clsx from 'clsx';\nimport { Typography } from 'antd';\nimport { ReactNode } from 'react';\n\ntype InstructionsProps = {\n  /**\n   * The content of the instruction\n   */\n  children: ReactNode;\n  /**\n   * Adds a semi transparent background (white or black opposite to the white property)\n   */\n  contained?: boolean;\n  /**\n   * Make text color white\n   */\n  white?: boolean;\n  /**\n   * Makes instruction width 100%\n   */\n  fullWidth?: boolean;\n  /**\n   * Custom class name\n   */\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n};\n\n/**\n * Typography container for instructions\n */\nexport const Instruction = ({ children, white, className, contained, fullWidth }: InstructionsProps) => {\n  const baseClass = 'instruction';\n\n  return (\n    <Typography.Text\n      className={clsx(\n        baseClass,\n        contained && `${baseClass}--contained`,\n        white && `${baseClass}--white`,\n        fullWidth && `${baseClass}--full-width`,\n        className\n      )}\n      data-testid=\"instruction\"\n    >\n      {children}\n    </Typography.Text>\n  );\n};\n","// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { pluralize } from 'utils/helpers';\n\ntype RoundsLeftInstructionProps = {\n  /**\n   * The state round object with current and total values\n   */\n  round: GameRound;\n  /**\n   * Flag indicating if it is the last round\n   */\n  lastRound?: boolean;\n};\n\n/**\n * Displays instructional sentence based on the number of rounds left for the game to end\n */\nexport function RoundsLeftInstruction({ round, lastRound }: RoundsLeftInstructionProps) {\n  const left = (round?.total ?? 0) - (round?.current ?? 0);\n\n  if (left === 0 || lastRound) {\n    return (\n      <Instruction contained>\n        <Translate pt=\"Essa foi a última rodada\" en=\"No more rounds left\" />\n      </Instruction>\n    );\n  }\n\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            {pluralize(left, 'Falta', 'Faltam')} <strong>{left}</strong>{' '}\n            {pluralize(left, 'rodada', 'rodadas')} para o jogo terminar...\n          </>\n        }\n        en={\n          <>\n            <strong>{left}</strong> {pluralize(left, 'round', 'rounds')} left for the game to end...\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n","import { ReactNode } from 'react';\n\ntype TextHighlightProps = {\n  /**\n   * The text to be highlighted\n   */\n  children: ReactNode;\n};\n\nexport function TextHighlight({ children }: TextHighlightProps) {\n  return <span className=\"text-highlight\">{children}</span>;\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Typography } from 'antd';\nimport { ReactNode } from 'react';\n\ntype TitleProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  white?: boolean;\n  icon?: any;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  level?: 1 | 2 | 3 | 4 | 5 | undefined;\n  size?: 'xx-small' | 'x-small' | 'small' | 'medium' | 'large';\n};\n\nexport const Title = ({ children, white, icon, className, level = 1, size = 'large' }: TitleProps) => {\n  return (\n    <Typography.Title\n      level={level}\n      className={clsx('title', `title--${size}`, white && 'title--white', className)}\n    >\n      {Boolean(icon) && icon}\n      {children}\n    </Typography.Title>\n  );\n};\n","import { isDevEnv } from '../utils/helpers';\nimport { useGlobalState } from './useGlobalState';\n\n/**\n * Controls debug and dev environment\n * @returns\n */\nexport function useDevFeatures() {\n  const [isDebugEnabled, setIsDebugEnabled] = useGlobalState('isDebugEnabled');\n\n  const toggleDevFeatures = () => {\n    setIsDebugEnabled((s) => !s);\n  };\n\n  return {\n    isDevEnv,\n    isDebugEnabled,\n    toggleDevFeatures,\n  };\n}\n","import clsx from 'clsx';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useCopyToClipboard } from 'react-use';\n// Ant Design Resources\nimport { Image, Modal, message, Button, notification, Divider, Typography, Switch, Space, Alert } from 'antd';\n// Adapters\nimport { ADMIN_API } from 'services/adapters';\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useLocalStorage } from 'hooks/useLocalStorage';\n// Constants\nimport { LATEST_GAME_IDS, PUBLIC_URL } from 'utils/constants';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\nimport { Loading } from 'components/loaders';\n\nconst updateLocal24hGameIds = (latestGameIds: PlainObject, newId: GameId) => {\n  const now = Date.now();\n  const past24Hours = now - 1000 * 60 * 60 * 24;\n  const cleanedUpIds = Object.entries(latestGameIds ?? {}).reduce((acc: PlainObject, [key, timestamp]) => {\n    if (timestamp > past24Hours) {\n      acc[key] = timestamp;\n    }\n    return acc;\n  }, {});\n  return {\n    [LATEST_GAME_IDS]: {\n      ...cleanedUpIds,\n      [newId]: now,\n    },\n  };\n};\n\ntype CreateGameModalProps = {\n  gameInfo: GameInfo;\n};\n\nexport function CreateGameModal({ gameInfo }: CreateGameModalProps): JSX.Element {\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n  const [state, copyToClipboard] = useCopyToClipboard();\n\n  const { language, translate } = useLanguage();\n  const { setLoader } = useLoading();\n  const [getLocalStorage, setLocalStorage] = useLocalStorage();\n  const [isVisible, setVisibility] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [gameId, setGameId] = useState(null);\n  const [, setUserId] = useGlobalState('userId');\n  const [, setUserName] = useGlobalState('username');\n  const [, setUserAvatarId] = useGlobalState('userAvatarId');\n  const [options, setOptions] = useState({});\n\n  useEffect(() => {\n    if (state.value && gameId) {\n      message.info(`Copied to clipboard: ${state.value}`);\n    }\n  }, [state, gameId]);\n\n  const onCloseModal = useCallback(() => {\n    setVisibility(false);\n  }, []);\n\n  const onChangeOptions = (key: string, value: boolean) => {\n    setOptions((s) => ({\n      ...s,\n      [key]: value,\n    }));\n  };\n\n  const createGame = async () => {\n    try {\n      setLoader('create', true);\n      setLoading(true);\n      const response: PlainObject = await ADMIN_API.createGame({\n        gameCode: gameInfo.gameCode,\n        language,\n        options,\n      });\n      if (response.data.gameId) {\n        setGameId(response.data.gameId);\n        setUserId(null);\n        setUserName('');\n        setUserAvatarId('');\n        setLocalStorage(updateLocal24hGameIds(getLocalStorage(LATEST_GAME_IDS), response.data.gameId));\n        const baseUrl = window.location.href.split(pathname)[0];\n        copyToClipboard(`${baseUrl}/${response.data.gameId}`);\n      }\n    } catch (e: any) {\n      notification.error({\n        message: translate(\n          'Aplicativo encontrou um erro ao tentar criar o jogo',\n          'The application found an error while trying to create a game',\n          language\n        ),\n        description: JSON.stringify(e.message),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n      setVisibility(false);\n    } finally {\n      setLoading(false);\n      setLoader('create', false);\n    }\n  };\n\n  const onConfirmGame = () => {\n    if (gameId) {\n      navigate(`/${gameId}`);\n    } else {\n      message.info(\n        translate('Péra! O jogo ainda não foi inicializado.', 'Wait! The game has not been created')\n      );\n    }\n  };\n\n  return (\n    <>\n      <Button type=\"primary\" onClick={() => setVisibility(true)} block>\n        <Translate pt=\"Criar\" en=\"Create\" />\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`${translate('Criando novo jogo', 'Creating new game')}: ${gameInfo.title[language]}`}\n          visible={isVisible}\n          onCancel={onCloseModal}\n          onOk={onConfirmGame}\n          okButtonProps={{ disabled: Boolean(!gameId) }}\n          maskClosable={false}\n        >\n          <>\n            <Image\n              alt={gameInfo.title[language]}\n              src={`${PUBLIC_URL.BANNERS}${gameInfo.gameName}-${language}.jpg`}\n              fallback={`${PUBLIC_URL.BANNERS}/em-breve-${language}.jpg`}\n            />\n\n            <Options\n              options={gameInfo.options}\n              disabled={isLoading || Boolean(gameId)}\n              onChangeOptions={onChangeOptions}\n              selectedOptions={options}\n            />\n\n            <Divider />\n\n            {isLoading && (\n              <>\n                <Instruction>\n                  <Translate pt=\"O jogo está sendo criado...\" en=\"The game session is being created\" />\n                </Instruction>\n                <Loading message={translate('Gerando...', 'Generating...')} margin />\n              </>\n            )}\n\n            {gameInfo.version.startsWith('alpha') && (\n              <Alert\n                type=\"warning\"\n                showIcon\n                message={\n                  <Translate\n                    pt=\"Este jogo está em alpha, não o jogue\"\n                    en=\"This game is still in alpha and shouldn't be played\"\n                  />\n                }\n              />\n            )}\n\n            {gameInfo.version.startsWith('beta') && (\n              <Alert\n                type=\"warning\"\n                showIcon\n                message={\n                  <Translate\n                    pt=\"Este jogo está em beta, prossiga com cuidado\"\n                    en=\"This game is in beta and bugs might be everywhere\"\n                  />\n                }\n              />\n            )}\n\n            {Boolean(gameId) ? (\n              <div>\n                <Title className=\"center\">\n                  <Translate pt=\"Jogo inicializado\" en=\"Game Initialized\" />: {gameId}\n                </Title>\n                <Instruction>\n                  <Translate\n                    pt=\"Pressione OK para ser redirecionadx à página do jogo.\"\n                    en=\"Press OK to be redirected to the game page\"\n                  />\n                </Instruction>\n              </div>\n            ) : (\n              <Space className=\"space-container\" align=\"center\">\n                <Button type=\"primary\" size=\"large\" disabled={isLoading} onClick={createGame}>\n                  <Translate pt=\"Criar Jogo\" en=\"Create Game\" />\n                </Button>\n              </Space>\n            )}\n          </>\n        </Modal>\n      )}\n    </>\n  );\n}\n\ntype OptionsProps = {\n  options?: {\n    label: string;\n    key: string;\n    on?: string;\n    off?: string;\n  }[];\n  disabled: boolean;\n  onChangeOptions: GenericFunction;\n  selectedOptions: PlainObject;\n};\nfunction Options({ options, disabled, onChangeOptions, selectedOptions }: OptionsProps) {\n  return Boolean(options) ? (\n    <div className=\"create-game-modal-options\">\n      <Typography.Title level={5} className=\"create-game-modal-options__title\">\n        <Translate pt=\"Opções:\" en=\"Options:\" />\n      </Typography.Title>\n\n      {options!.map((option, index) => (\n        <Typography.Paragraph key={`option-${option.label}`} className=\"create-game-modal-options__option\">\n          <span className=\"create-game-modal-options__label\">{option.label}</span>\n          <span\n            className={clsx(\n              'create-game-modal-options__off',\n              !selectedOptions[option.key] && 'create-game-modal-options__selected'\n            )}\n          >\n            {option?.off ?? ''}\n          </span>\n          <Switch disabled={disabled} onChange={(e) => onChangeOptions(option.key, e)} />\n          <span\n            className={clsx(\n              'create-game-modal-options__on',\n              selectedOptions[option.key] && 'create-game-modal-options__selected'\n            )}\n          >\n            {option?.on ?? ''}\n          </span>\n        </Typography.Paragraph>\n      ))}\n    </div>\n  ) : (\n    <div className=\"create-game-modal-options create-game-modal-options__no-options\">\n      <Typography.Text>\n        <Translate pt=\"Este jogo não possui customizações\" en=\"This game does not support customizations\" />\n      </Typography.Text>\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Space, Card, Image, Divider, Tag, Badge } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { PUBLIC_URL, TAG_DICT } from 'utils/constants';\nimport { truncateRecommended } from 'utils/helpers';\n// Components\nimport { RulesModal } from 'components/rules';\nimport { CreateGameModal } from './CreateGameModal';\n\nconst getVersionColor = (version: string) => {\n  if (version.includes('alpha')) {\n    return '#F97659';\n  }\n  if (version.includes('beta')) {\n    return '#F9D859';\n  }\n\n  if (version.startsWith('1.')) {\n    return '#72D984';\n  }\n  if (version.startsWith('2.')) {\n    return '#7CBD51';\n  }\n\n  if (version.startsWith('3.')) {\n    return '#7CBD51';\n  }\n\n  return '#96A0A3';\n};\n\ntype GameCardProps = {\n  game: GameInfo;\n};\n\nexport function GameCard({ game }: GameCardProps) {\n  const { language, translate } = useLanguage();\n\n  return (\n    <Card\n      key={game.gameName}\n      className=\"game-card\"\n      cover={\n        <Badge.Ribbon text={game.version} color={getVersionColor(game.version)}>\n          <Image\n            alt={game.title[language]}\n            src={`${PUBLIC_URL.BANNERS}${game.gameName}-${language}.jpg`}\n            fallback={`${PUBLIC_URL.BANNERS}/em-breve-${language}.jpg`}\n          />\n        </Badge.Ribbon>\n      }\n    >\n      <div className=\"game-card__contents\">\n        <Card.Meta\n          title={\n            <span className=\"game-card__title\" title={game.title[language]}>\n              [{game.gameCode}] {game.title[language]}\n            </span>\n          }\n          description={`${translate('Baseado em', 'Based on')} ${game.basedOn.split('').reverse().join('')}`}\n        />\n        <Card.Meta className=\"game-card__description\" description={game.summary[language]} />\n        {Boolean(game.rules?.[language]?.length > 1) && (\n          <RulesModal\n            gameInfo={game}\n            buttonProps={{ size: 'small', className: 'game-card__margin-bottom' }}\n          />\n        )}\n\n        <Space wrap size={[1, 6]} style={{ display: 'flex' }}>\n          {game.tags.map((tag) => (\n            <Tag key={`${game.gameCode}-${tag}`} color={TAG_DICT[tag]?.color}>\n              {language === 'pt' ? TAG_DICT[tag]?.label : tag}\n            </Tag>\n          ))}\n        </Space>\n      </div>\n\n      <div className=\"game-card__actions\">\n        <Divider className=\"game-card__divider\" />\n\n        <Card.Meta\n          description={translate(\n            `Para ${game.playerCount.min}-${game.playerCount.max} jogadores`,\n            `For ${game.playerCount.min}-${game.playerCount.max} players`\n          )}\n        />\n\n        <Card.Meta\n          className=\"game-card__player-count\"\n          description={translate(\n            `Melhor com ${game.playerCount.best || '?'} jogadores`,\n            `Best wih ${game.playerCount.best || '?'} players`\n          )}\n        />\n\n        <Card.Meta\n          className=\"game-card__player-count game-card__margin-bottom\"\n          description={translate(\n            `Recomendado jogar com ${truncateRecommended(game.playerCount.recommended)}`,\n            `Recommended with ${truncateRecommended(game.playerCount.recommended)}`\n          )}\n        />\n\n        <div>{Boolean(game.available[language]) && <CreateGameModal gameInfo={game} />}</div>\n      </div>\n    </Card>\n  );\n}\n","import { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { Alert, Button, Modal } from 'antd';\nimport { useDevFeatures } from 'hooks/useDevFeatures';\nimport { useState } from 'react';\nimport { useEffectOnce } from 'react-use';\n\n/**\n * The emulator only properly works if using the local ip, to allow multi device testing\n * including mobile, this component will display an alert in case the current port is localhost\n */\nexport function DevEmulatorAlert() {\n  const { isDevEnv } = useDevFeatures();\n  const [stay, setStay] = useState(false);\n\n  const ip = process.env.REACT_APP_LOCAL_IP;\n  const displayDevWarningMessage = isDevEnv && window.location.hostname !== ip;\n  const { port, pathname, hash, protocol } = window.location;\n  const newPath = `${ip}:${port}${pathname}/${hash}`.replace('//', '/');\n  const emulatorUrl = `${protocol}//${newPath}`;\n\n  useEffectOnce(() => {\n    if (!stay && isDevEnv && displayDevWarningMessage) {\n      Modal.confirm({\n        title: 'Wrong Dev Environment',\n        icon: <ExclamationCircleOutlined />,\n        content: 'You are in a development environment and not using the emulator.',\n        okText: 'Switch Routes',\n        cancelText: 'Stay in Localhost',\n        onOk: () => {\n          setStay(true);\n          window.location.href = emulatorUrl;\n        },\n      });\n    }\n  });\n\n  if (!isDevEnv) return <></>;\n\n  return (\n    <>\n      {displayDevWarningMessage && (\n        <Alert\n          message={\n            <>\n              You are in a development environment and not using the emulator.{' '}\n              <Button href={emulatorUrl} type=\"link\">\n                Switch Routes\n              </Button>\n            </>\n          }\n          type=\"warning\"\n          showIcon\n          banner\n        />\n      )}\n    </>\n  );\n}\n","import { useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useEffectOnce, useTitle } from 'react-use';\n// Ant Design Resources\nimport { Typography, Layout, Space, Divider, Button, message, Popconfirm } from 'antd';\nimport { DatabaseFilled } from '@ant-design/icons';\n// API\nimport { signOut } from 'services/firebase';\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLocalStorage } from 'hooks/useLocalStorage';\n// Utils\nimport GAME_LIST from 'utils/info';\n// Components\nimport { GameCard } from './components/GameCard';\nimport { LanguageSwitch, Translate } from 'components/language';\nimport { DevHeader } from 'pages/Dev/DevHeader';\nimport { DevEmulatorAlert } from './components/DevEmulatorAlert';\n\nfunction Hub() {\n  useTitle('Hub - Tarde Divertida');\n\n  const navigate = useNavigate();\n  const { language } = useLanguage();\n  const [getLocalStorage] = useLocalStorage();\n  const [, setLanguage] = useGlobalState('language');\n  const [, setIsAuthenticated] = useGlobalState('isAuthenticated');\n\n  useEffectOnce(() => {\n    const prevLanguage = getLocalStorage('language');\n    if (prevLanguage) {\n      setLanguage(prevLanguage);\n    }\n  });\n\n  const onSignOut = async () => {\n    try {\n      await signOut();\n      setIsAuthenticated(false);\n\n      navigate('/');\n    } catch (error: any) {\n      message.error('Something went wrong', error);\n    }\n  };\n\n  const { availableGames, comingSoonGames } = useMemo(() => {\n    const sortedGameList = Object.values(GAME_LIST).sort((a, b) =>\n      a.title[language] > b.title[language] ? 1 : -1\n    );\n\n    return sortedGameList.reduce(\n      (acc: any, game) => {\n        if (game.available[language]) {\n          acc.availableGames.push(game);\n        } else {\n          acc.comingSoonGames.push(game);\n        }\n        return acc;\n      },\n      {\n        availableGames: [],\n        comingSoonGames: [],\n      }\n    );\n  }, [language]);\n\n  return (\n    <Layout className=\"dev-layout\">\n      <DevHeader\n        title={\n          <>\n            <DatabaseFilled /> Hub\n          </>\n        }\n        subTitle={<Translate pt=\"Selecione um jogo para começar\" en=\"Select a game to start\" />}\n        extra={[\n          <LanguageSwitch key=\"language-switch\" />,\n          <Popconfirm\n            title={<Translate pt=\"Tem certeza?\" en=\"Are you sure?\" />}\n            onConfirm={onSignOut}\n            key=\"logout-button\"\n          >\n            <Button danger ghost key=\"logout-button\" size=\"small\">\n              Logout\n            </Button>\n          </Popconfirm>,\n        ]}\n      />\n\n      <DevEmulatorAlert />\n\n      <Layout.Content className=\"container\" id=\"main-container\">\n        <Space size={[8, 16]} wrap align=\"start\" className=\"game-card-collection\">\n          {availableGames.map((game: GameInfo, index: number) => (\n            <GameCard key={`${game.gameCode}-${index}`} game={game} />\n          ))}\n        </Space>\n        <Divider />\n        <Typography.Title level={2}>\n          <Translate pt=\"Em Breve\" en=\"Coming Soon\" />\n        </Typography.Title>\n        <Space size={[8, 16]} wrap align=\"start\" className=\"game-card-collection\">\n          {comingSoonGames.map((game: GameInfo, index: number) => (\n            <GameCard key={`${game.gameCode}-${index}`} game={game} />\n          ))}\n        </Space>\n      </Layout.Content>\n    </Layout>\n  );\n}\n\nexport default Hub;\n","import { functions } from 'services/firebase';\nimport { httpsCallable } from 'firebase/functions';\n\nexport const GAME_API = {\n  loadGame: httpsCallable(functions, 'loadGame'),\n  addPlayer: httpsCallable(functions, 'addPlayer'),\n  makePlayerReady: httpsCallable(functions, 'makePlayerReady'),\n  rateGame: httpsCallable(functions, 'rateGame'),\n};\n\nexport const ADMIN_API = {\n  createGame: httpsCallable(functions, 'createGame'),\n  lockGame: httpsCallable(functions, 'lockGame'),\n  performAdminAction: httpsCallable(functions, 'performAdminAction'),\n};\n\nexport const ARTE_RUIM_API = {\n  submitAction: httpsCallable(functions, 'arteRuimSubmitAction'),\n};\n\nexport const CONTADORES_HISTORIAS_API = {\n  submitAction: httpsCallable(functions, 'contadoresHistoriasSubmitAction'),\n};\n\nexport const DETETIVES_IMAGINATIVOS_API = {\n  submitAction: httpsCallable(functions, 'detetivesImaginativosSubmitAction'),\n};\n\nexport const ESPIAO_ENTRE_NOS_API = {\n  submitAction: httpsCallable(functions, 'espiaoEntreNosSubmitAction'),\n};\n\nexport const GALERIA_DE_SONHOS_API = {\n  submitAction: httpsCallable(functions, 'galeriaDeSonhosSubmitAction'),\n};\n\nexport const CRIMES_HEDIONDOS_API = {\n  submitAction: httpsCallable(functions, 'crimesHediondosSubmitAction'),\n};\n\nexport const INSTRUMENTOS_CODIFICADOS_API = {\n  submitAction: httpsCallable(functions, 'instrumentosCodificadosSubmitAction'),\n};\n\nexport const LINHAS_CRUZADAS_API = {\n  submitAction: httpsCallable(functions, 'linhasCruzadasSubmitAction'),\n};\n\nexport const MENTE_COLETIVA_API = {\n  submitAction: httpsCallable(functions, 'menteColetivaSubmitAction'),\n};\n\nexport const NA_RUA_DO_MEDO_API = {\n  submitAction: httpsCallable(functions, 'naRuaDoMedoSubmitAction'),\n};\n\nexport const ONDA_TELEPATICA_API = {\n  submitAction: httpsCallable(functions, 'ondaTelepaticaSubmitAction'),\n};\n\nexport const POLEMICA_DA_VEZ_API = {\n  submitAction: httpsCallable(functions, 'polemicaDaVezSubmitAction'),\n};\n\nexport const QUEM_NAO_MATA_API = {\n  submitAction: httpsCallable(functions, 'quemNaoMataSubmitAction'),\n};\n\nexport const RETRATO_FALADO_API = {\n  submitAction: httpsCallable(functions, 'retratoFaladoSubmitAction'),\n};\n\nexport const SONHOS_PESADELOS_API = {\n  submitAction: httpsCallable(functions, 'sonhosPesadelosSubmitAction'),\n};\n\nexport const TESTEMUNHA_OCULAR_API = {\n  submitAction: httpsCallable(functions, 'testemunhaOcularSubmitAction'),\n};\n\nexport const UE_SO_ISSO_API = {\n  submitAction: httpsCallable(functions, 'ueSoIssoSubmitAction'),\n};\n\nexport const VENDAVAL_DE_PALPITE_API = {\n  submitAction: httpsCallable(functions, 'vendavalDePalpiteSubmitAction'),\n};\n\nexport const SUPER_CAMPEONATO_API = {\n  submitAction: httpsCallable(functions, 'superCampeonatoSubmitAction'),\n};\n\nexport const CRUZA_PALAVRAS_API = {\n  submitAction: httpsCallable(functions, 'cruzaPalavrasSubmitAction'),\n};\n\nexport const TREVO_DA_SORTE_API = {\n  submitAction: httpsCallable(functions, 'trevoDaSorteSubmitAction'),\n};\n"],"names":["CollapsibleRule","children","title","translate","useLanguage","contained","ghost","header","PopoverRule","content","label","showLabel","type","position","icon","ReadOutlined","pt","en","buttonProps","RulesCarousel","info","className","ruleClass","language","settings","prevArrow","DoubleLeftOutlined","nextArrow","DoubleRightOutlined","clsx","autoplay","autoplaySpeed","arrows","rules","map","rule","index","src","PUBLIC_URL","gameName","fallback","alt","RulesList","RulesModal","gameInfo","useState","isVisible","setVisibility","onCloseModal","onClick","visible","onCancel","footer","Instruction","white","fullWidth","baseClass","RoundsLeftInstruction","round","lastRound","left","total","current","pluralize","TextHighlight","Title","level","size","Boolean","useDevFeatures","useGlobalState","isDebugEnabled","setIsDebugEnabled","isDevEnv","toggleDevFeatures","s","updateLocal24hGameIds","latestGameIds","newId","now","Date","past24Hours","cleanedUpIds","Object","entries","reduce","acc","key","timestamp","LATEST_GAME_IDS","CreateGameModal","navigate","useNavigate","pathname","useLocation","useCopyToClipboard","state","copyToClipboard","setLoader","useLoading","useLocalStorage","getLocalStorage","setLocalStorage","isLoading","setLoading","gameId","setGameId","setUserId","setUserName","setUserAvatarId","options","setOptions","useEffect","value","message","useCallback","createGame","ADMIN_API","gameCode","response","data","baseUrl","window","location","href","split","notification","description","JSON","stringify","placement","console","error","block","onOk","okButtonProps","disabled","maskClosable","Options","onChangeOptions","selectedOptions","margin","version","startsWith","showIcon","align","option","off","onChange","e","on","GameCard","game","cover","text","color","includes","basedOn","reverse","join","summary","length","wrap","style","display","tags","tag","TAG_DICT","playerCount","min","max","best","truncateRecommended","recommended","available","DevEmulatorAlert","stay","setStay","ip","process","displayDevWarningMessage","hostname","port","hash","protocol","newPath","replace","emulatorUrl","useEffectOnce","Modal","ExclamationCircleOutlined","okText","cancelText","banner","useTitle","setLanguage","setIsAuthenticated","prevLanguage","onSignOut","signOut","useMemo","values","GAME_LIST","sort","a","b","availableGames","push","comingSoonGames","DevHeader","DatabaseFilled","subTitle","extra","onConfirm","danger","id","GAME_API","loadGame","httpsCallable","functions","addPlayer","makePlayerReady","rateGame","lockGame","performAdminAction","ARTE_RUIM_API","submitAction","CONTADORES_HISTORIAS_API","DETETIVES_IMAGINATIVOS_API","ESPIAO_ENTRE_NOS_API","GALERIA_DE_SONHOS_API","CRIMES_HEDIONDOS_API","LINHAS_CRUZADAS_API","MENTE_COLETIVA_API","NA_RUA_DO_MEDO_API","ONDA_TELEPATICA_API","POLEMICA_DA_VEZ_API","QUEM_NAO_MATA_API","RETRATO_FALADO_API","SONHOS_PESADELOS_API","TESTEMUNHA_OCULAR_API","UE_SO_ISSO_API","VENDAVAL_DE_PALPITE_API","SUPER_CAMPEONATO_API","CRUZA_PALAVRAS_API","TREVO_DA_SORTE_API"],"sourceRoot":""}