{"version":3,"file":"static/js/megamix.3d134a24.chunk.js","mappings":"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","sources":["components/audio/ArteRuimTimerSound.tsx","components/audio/DJPruPruPruSound.tsx","components/cards/CrimeItemCard.tsx","components/cards/EmojiCard.tsx","components/cards/GlyphCard.tsx","components/cards/GroupQuestionCard.tsx","components/cards/ItemCard.tsx","components/cards/MonsterCard.tsx","components/cards/MovieCard.tsx","components/text/ParagraphHighlighter.tsx","components/cards/MovieReviewCard.tsx","components/cards/SignCard.tsx","components/cards/SuspectCard.tsx","components/game/BookPages.tsx","components/game/DoorFrame.tsx","components/game/SceneTile.tsx","components/game/SuggestionEasel.tsx","components/metrics/CardHighlight.tsx","components/metrics/PlayersHighlight.tsx","components/metrics/PointsHighlight.tsx","components/ranking/RankingBoard.tsx","components/ranking/StepRankingWrapper.tsx","components/sprites/Sprite.tsx","components/text/SpeechBubble.tsx","games/megamix/utils/constants.ts","games/megamix/utils/useColorizeBackground.ts","games/megamix/utils/helpers.ts","games/megamix/components/TrackIcon.tsx","games/megamix/components/TrackInstructions.tsx","games/megamix/components/TrackTitle.tsx","games/megamix/components/RulesBlobs.tsx","games/megamix/components/ClubLine.tsx","games/megamix/components/FallbackComponent.tsx","games/megamix/utils/mock.ts","games/megamix/components/MinigameTitle.tsx","games/megamix/components/Tracks/TrackArteRuim.tsx","games/megamix/components/Tracks/TrackLabirintoSecreto.tsx","games/megamix/components/Tracks/TrackContadoresHistorias.tsx","games/megamix/components/Tracks/TrackCrimesHediondos.tsx","components/general/SpreadsheetGrid.tsx","games/megamix/components/Tracks/TrackCruzaPalavras.tsx","games/megamix/components/Tracks/TrackDetetivesImaginativos.tsx","games/megamix/components/Tracks/TrackEsquiadores.tsx","games/megamix/components/Tracks/TrackEspiaoEntreNos.tsx","games/megamix/components/Tracks/TrackFileiraDeFatos.tsx","games/megamix/components/Tracks/TrackGaleriaDeSonhos.tsx","games/megamix/components/Tracks/TrackMenteColetiva.tsx","games/megamix/components/Candidate.tsx","games/megamix/components/Tracks/TrackNamoroOuAmizade.tsx","games/megamix/components/Tracks/TrackNaRuaDoMedo.tsx","games/megamix/components/Tracks/TrackOndaTelepatica.tsx","games/megamix/components/Tracks/TrackPalhetaDeFores.tsx","components/game/SocialProfile.tsx","games/megamix/components/Tracks/TrackPolemicaDaVez.tsx","games/megamix/components/Tracks/TrackPortaDosDesesperados.tsx","games/megamix/components/Tracks/TrackQuemNaoMata.tsx","games/megamix/components/Tracks/TrackRetratoFalado.tsx","games/megamix/components/Tracks/TrackSuperCampeonato.tsx","games/megamix/components/Tracks/TrackTestemunhaOcular.tsx","games/megamix/components/Tracks/TrackUeSoIsso.tsx","games/megamix/components/Tracks/TrackVamosAoCinema.tsx","games/megamix/components/Tracks/TrackMegamixBestOfThree.tsx","games/megamix/components/Tracks/TrackMegamixThisThat.tsx","games/megamix/components/Tracks/TrackComunicacaoAlienigena.tsx","games/megamix/components/Tracks/TrackQuemSouEu.tsx","games/megamix/components/Tracks/TrackTaNaCara.tsx","games/megamix/components/Tracks/TrackMegamixWhoSaidThis.tsx","games/megamix/StepTrack.tsx","games/megamix/PhaseTrack.tsx","games/megamix/utils/api-requests.ts","games/megamix/components/Seeds/SeedArteRuim.tsx","games/megamix/components/Seeds/SeedLabirintoSecreto.tsx","games/megamix/components/Seeds/SeedClubber.tsx","games/megamix/components/Seeds/SeedOndaTelepatica.tsx","games/megamix/components/Seeds/SeedPolemicaDaVez.tsx","games/megamix/components/Seeds/SeedRetratoFalado.tsx","games/megamix/components/SVGPhone.tsx","games/megamix/components/Seeds/SeedUeSoIsso.tsx","games/megamix/components/Seeds/SeedMenteColetiva.tsx","games/megamix/components/Seeds/SeedContadoresHistorias.tsx","games/megamix/components/Seeds/SeedParty.tsx","games/megamix/StepSeeding.tsx","games/megamix/PhaseSeeding.tsx","games/megamix/components/WinningCount.tsx","games/megamix/components/Results/ResultArteRuim.tsx","games/megamix/components/Results/ResultCruzaPalavras.tsx","games/megamix/components/Results/ResultNamoroOuAmizade.tsx","games/megamix/components/Results/ResultNaRuaDoMedo.tsx","games/megamix/components/Results/ResultRetratoFalado.tsx","games/megamix/components/Results/ResultVamosNoCinema.tsx","games/megamix/components/Results/ResultMegamix.tsx","games/megamix/components/Results/ResultImage.tsx","games/megamix/components/Results/ResultText.tsx","games/megamix/components/Results/ResultCharacter.tsx","games/megamix/components/Results/ResultOndaTelepatica.tsx","games/megamix/components/Results/ResultComunicacaoAlienigena.tsx","games/megamix/components/Results/ResultTaNaCara.tsx","games/megamix/components/Results/ResultLabirintoSecreto.tsx","games/megamix/components/Results/ResultPalhetaDeCores.tsx","games/megamix/components/Results/ResultQuemNaoMata.tsx","games/megamix/components/Results/ResultWhoSaidThis.tsx","games/megamix/components/Results/ResultCrimesHediondos.tsx","games/megamix/components/ResultValueDelegator.tsx","games/megamix/components/SpacePlayerCheckWrapper.tsx","games/megamix/components/Votes/VoteArteRuim.tsx","games/megamix/components/Votes/VoteCruzaPalavras.tsx","games/megamix/components/Votes/VoteNamoroOuAmizade.tsx","games/megamix/components/Votes/VoteNaRuaDoMedo.tsx","games/megamix/components/Votes/VoteRetratoFalado.tsx","games/megamix/components/Votes/VoteVamosAoCinema.tsx","games/megamix/components/Votes/VoteMegamix.tsx","games/megamix/components/Votes/VoteImagesTrack.tsx","games/megamix/components/Votes/VoteValue.tsx","games/megamix/components/Votes/VoteOndaTelepatica.tsx","games/megamix/components/Votes/VoteCharacterTrack.tsx","games/megamix/components/Votes/VotePalhetaDeCores.tsx","games/megamix/components/Votes/VoteQuemNaoMata.tsx","games/megamix/components/Votes/VoteComunicacaoAlienigena.tsx","games/megamix/components/Votes/VoteTaNaCara.tsx","games/megamix/components/Votes/VoteLabirintoSecreto.tsx","games/megamix/components/Votes/VoteWhoSaidThis.tsx","games/megamix/components/Votes/VoteCrimesHediondos.tsx","games/megamix/components/VotesDelegator.tsx","games/megamix/StepResult.tsx","games/megamix/StepRanking.tsx","games/megamix/PhaseResult.tsx","games/megamix/PhaseGameOver.tsx","games/megamix/SessionMegamix.tsx","games/megamix/utils/achievements.ts","games/na-rua-do-medo/components/CandyCount.tsx","games/na-rua-do-medo/components/HouseCard.tsx","games/onda-telepatica/utils/helpers.ts","games/porta-dos-desesperados/components/Book.tsx","games/quem-sou-eu/components/PlayerGlyphs.tsx","games/quem-sou-eu/utils/helpers.ts","icons/CrownIcon.tsx","mock/clues.ts"],"sourcesContent":["import { useEffect } from 'react';\nimport { useAudio } from 'react-use';\n// Hooks\nimport { useGlobalLocalStorage } from 'hooks/useGlobalLocalStorage';\n// Sound\nconst arteRuimTimer = require('assets/sounds/arte-ruim-timer-remix.mp3');\n\nexport function ArteRuimTimerSound() {\n  const [volume] = useGlobalLocalStorage('volume');\n  const [audio, , controls] = useAudio({\n    src: arteRuimTimer,\n    autoPlay: true,\n    loop: false,\n  });\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: it only needs to be retriggered when the volume changes\n  useEffect(() => {\n    controls.volume(volume);\n  }, [volume]);\n\n  return <>{audio}</>;\n}\n","import { useEffect } from 'react';\nimport { useAudio } from 'react-use';\n// Hooks\nimport { useGlobalLocalStorage } from 'hooks/useGlobalLocalStorage';\n// Sound\nconst airHorn = require('assets/sounds/airhorn.mp3');\n\nexport function DJPruPruPruSound() {\n  const [volume] = useGlobalLocalStorage('volume');\n  const [audio, , controls] = useAudio({\n    src: airHorn,\n    autoPlay: true,\n  });\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: it only needs to be retriggered when the volume changes\n  useEffect(() => {\n    controls.volume(volume);\n  }, [volume]);\n\n  return <>{audio}</>;\n}\n","import clsx from 'clsx';\nimport { capitalize } from 'lodash';\n// Ant Design Resources\nimport { Popover } from 'antd';\n// Types\nimport type { CrimesHediondosCard } from 'types/tdr';\n// Hooks\nimport { useDevFeatures } from 'hooks/useDevFeatures';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useTDBaseUrl } from 'hooks/useTDBaseUrl';\n// Components\nimport { ImageBlurButtonContainer } from 'components/image-cards';\nimport { DualTranslate } from 'components/language';\n// Internal\nimport { ItemSprite } from './ItemCard';\n// Sass\nimport './CrimeItemCard.scss';\n\ntype CrimeItemCardProps = {\n  /**\n   * Crime item\n   */\n  item: CrimesHediondosCard;\n  /**\n   * Card width\n   */\n  cardWidth: number;\n  /**\n   * Whether the card is selected or not\n   */\n  isSelected?: boolean;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Optional active color\n   */\n  activeColor?: string;\n};\n\nexport function CrimeItemCard({\n  item,\n  cardWidth,\n  activeColor,\n  isSelected = false,\n  className = '',\n}: CrimeItemCardProps) {\n  const { dualTranslate } = useLanguage();\n  const { isDebugEnabled } = useDevFeatures();\n  const baseUrl = useTDBaseUrl('images');\n  const backgroundImage = `back/crime${capitalize(item.type)}`;\n\n  return (\n    <ImageBlurButtonContainer cardId={item.id}>\n      <div\n        className={clsx(\n          'crime-item-card',\n          `crime-item-card--${item.type}`,\n          isSelected && 'crime-item-card--selected',\n          className,\n        )}\n        style={{\n          width: cardWidth,\n          backgroundImage: `url(${baseUrl}/${backgroundImage}.jpg)`,\n          ...(activeColor && isSelected ? { borderColor: activeColor, backgroundColor: activeColor } : {}),\n        }}\n      >\n        <Popover content={dualTranslate(item.name).toUpperCase()}>\n          <div className=\"crime-item-card__name\" style={{ maxWidth: `${cardWidth}px` }}>\n            <span>{isDebugEnabled ? item.id : <DualTranslate>{item.name}</DualTranslate>}</span>\n          </div>\n        </Popover>\n        <div\n          className={clsx('crime-item-card__item-container', `crime-item-card__item-container--${item.type}`)}\n        >\n          <ItemSprite id={item.itemId ?? '0'} width={cardWidth * 0.75} className=\"crime-item-card__item\" />\n        </div>\n      </div>\n    </ImageBlurButtonContainer>\n  );\n}\n\nexport function CrimeItemBackgroundCard({\n  id,\n  cardWidth,\n  className = '',\n}: Pick<CrimeItemCardProps, 'cardWidth' | 'className'> & { id: 'blank' | 'x' | 'weapon' | 'evidence' }) {\n  const baseUrl = useTDBaseUrl('images');\n  const backgroundImage = `back/crime${capitalize(id)}`;\n\n  return (\n    <div\n      className={clsx('crime-item-card', `crime-item-card--${id}`, className)}\n      style={{\n        width: cardWidth,\n        backgroundImage: `url(${baseUrl}/${backgroundImage}.jpg)`,\n      }}\n    >\n      .\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Components\nimport { Sprite } from 'components/sprites';\n// Sass\nimport './EmojiCard.scss';\n\ntype EmojiCardProps = {\n  /**\n   * The id of the emoji\n   */\n  id: string;\n  /**\n   * The width of the emoji\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\n/**\n * An emoji card component.\n */\nexport function EmojiCard({ id, width, className }: EmojiCardProps) {\n  const emojiId = id.startsWith('emoji') ? id : `emoji-${id}`;\n\n  return (\n    <div className={clsx('emoji-card', className)} style={{ width: `${width}px`, height: `${width}px` }}>\n      <Sprite source=\"emojis\" id={emojiId} width={width} />\n    </div>\n  );\n}\n\n/**\n * An emoji sprite component.\n */\nexport function EmojiSprite({\n  id,\n  width = 64,\n  ...props\n}: Pick<EmojiCardProps, 'id' | 'width'> & ElementProps) {\n  const emojiId = id.startsWith('emoji') ? id : `emoji-${id}`;\n  return <Sprite source=\"emojis\" id={emojiId} width={width} padding={0} {...props} />;\n}\n","import clsx from 'clsx';\n// Components\nimport { Sprite } from 'components/sprites';\n// Sass\nimport './GlyphCard.scss';\n\ntype GlyphCardProps = {\n  /**\n   * The id of the glyph\n   */\n  id: number | string;\n  /**\n   * The width of the glyph\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\nconst BASE = 128;\n\n/**\n * Retrieves the source and glyph ID based on a given string.\n *\n * @param str - The input string.\n * @returns An array containing the source and glyph ID.\n */\nconst getSource = (numId: number) => {\n  const glyphId = `glyph-${numId}`;\n  const sourceId = Math.ceil(numId / BASE) * BASE;\n  const source = `glyphs-${sourceId}`;\n  return [source, glyphId];\n};\n\n/**\n * A glyph card component.\n */\nexport function GlyphCard({ id, width, className }: GlyphCardProps) {\n  const [source, glyphId] = getSource(+id);\n\n  return (\n    <div className={clsx('glyph-card', className)} style={{ width: `${width}px`, height: `${width}px` }}>\n      <Sprite source={source} id={glyphId} width={width ? width - 12 : undefined} padding={0} />\n    </div>\n  );\n}\n\n/**\n * A glyph sprite component.\n */\nexport function GlyphSprite({\n  id,\n  width = 64,\n  ...props\n}: Pick<GlyphCardProps, 'id' | 'width'> & ElementProps) {\n  const [source, glyphId] = getSource(+id);\n  return <Sprite source={source} id={glyphId} width={width} padding={0} {...props} />;\n}\n","// Types\nimport type { GroupQuestionCard as GroupQuestionCardType } from 'types/tdr';\n// Sass\nimport './GroupQuestionCard.scss';\n// Type\n\ntype GroupQuestionCardProps = {\n  /**\n   * The question to be displayed\n   */\n  question: GroupQuestionCardType;\n  /**\n   * The number to be displayed. If not provided, the question's number will be used.\n   */\n  overrideNumber?: number;\n};\n\nexport function GroupQuestionCard({ question, overrideNumber }: GroupQuestionCardProps) {\n  return (\n    <span className=\"group-question-card group-question-card--span\">\n      <span className=\"group-question-card__prefix\">{question.prefix}</span>\n      <span className=\"group-question-card__number\">{overrideNumber ?? question.number}</span>\n      <span className=\"group-question-card__suffix\">{question.suffix}</span>\n    </span>\n  );\n}\n","import clsx from 'clsx';\nimport { memoize } from 'lodash';\n// Components\nimport { DualTranslate } from 'components/language';\nimport { Sprite } from 'components/sprites';\n// Sass\nimport './ItemCard.scss';\n\nexport type ItemCardProps = {\n  /**\n   * The id of the item\n   */\n  id: string;\n  /**\n   * The width of the item\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n  /**\n   * Replacement title, usually the name of the item\n   */\n  title?: string;\n  /**\n   * Optional text to display\n   */\n  text?: DualLanguageValue;\n  /**\n   * Optional padding\n   */\n  padding?: number;\n};\n\nconst BASE = 64;\n\n/**\n * Retrieves the source and item ID based on a given string.\n *\n * @param str - The input string.\n * @returns An array containing the source and item ID.\n */\nexport const getSource = memoize((str: string) => {\n  const match = str.match(/\\d+/);\n  const numId = match ? Number.parseInt(match[0], 10) : 0;\n  const itemId = `item-${numId}`;\n  const sourceId = Math.ceil(numId / BASE) * BASE;\n  const source = `items-${sourceId}`;\n  return [source, itemId];\n});\n\n/**\n * An item card component.\n */\nexport function ItemCard({ id, width = 75, className, title, text, padding }: ItemCardProps) {\n  const [source, itemId] = getSource(id);\n\n  const height = text ? 'auto' : `${width}px`;\n  const divPadding = padding === 0 ? { padding: 0 } : {};\n\n  return (\n    <div\n      className={clsx('item-card', className)}\n      style={{ width: `${width}px`, height, ...divPadding }}\n      data-testid=\"item-card\"\n    >\n      <Sprite\n        source={source}\n        id={itemId}\n        width={width - (padding ?? 0) * 2}\n        title={title}\n        padding={padding}\n      />\n      {!!text && (\n        <span className=\"item-card__text\">\n          <DualTranslate>{text}</DualTranslate>\n        </span>\n      )}\n    </div>\n  );\n}\n\n/**\n * An item sprite component.\n */\nexport function ItemSprite({ id, width = 75, ...props }: Pick<ItemCardProps, 'id' | 'width'> & ElementProps) {\n  const [source, itemId] = getSource(id);\n  return <Sprite source={source} id={itemId} width={width} padding={0} {...props} />;\n}\n","import clsx from 'clsx';\nimport { useEffectOnce } from 'react-use';\n// Ant Design Resources\nimport { RotateLeftOutlined, RotateRightOutlined } from '@ant-design/icons';\nimport { Button, Space, type SpaceProps } from 'antd';\n// Types\nimport type { MonsterImage } from 'types/tdr';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useGlobalState } from 'hooks/useGlobalState';\n// Components\nimport { ImageCard } from 'components/image-cards';\nimport { Translate } from 'components/language';\n// Sass\nimport './MonsterCard.scss';\n\ninterface MonsterCardProps extends SpaceProps {\n  currentMonster: MonsterImage;\n  showControls?: boolean;\n  cardWidth?: number;\n}\n\nexport function MonsterCard({ currentMonster, showControls = true, cardWidth, ...props }: MonsterCardProps) {\n  const [monsterOrientation, setMonsterOrientation] = useGlobalState('monsterOrientation');\n  const defaultCardWidth = useCardWidth(5, { gap: 16, maxWidth: 360 });\n\n  useEffectOnce(() => {\n    if (currentMonster.orientation === 'horizontal') {\n      setMonsterOrientation(currentMonster.orientation);\n    }\n  });\n\n  const onChangeOrientation = () => {\n    const newOrientation = monsterOrientation === 'vertical' ? 'horizontal' : 'vertical';\n    setMonsterOrientation(newOrientation);\n  };\n\n  const baseClass = 'monster-card';\n  return (\n    <Space direction=\"vertical\" align=\"center\" {...props}>\n      <ImageCard\n        classic\n        id={currentMonster.id}\n        cardWidth={cardWidth || defaultCardWidth}\n        className={clsx(\n          baseClass,\n          monsterOrientation === 'vertical' ? `${baseClass}--vertical` : `${baseClass}--horizontal`,\n        )}\n      />\n      {showControls && (\n        <Button onClick={onChangeOrientation}>\n          {monsterOrientation === 'vertical' ? <RotateRightOutlined /> : <RotateLeftOutlined />}\n          <Translate pt=\"Girar\" en=\"Rotate\" />\n        </Button>\n      )}\n    </Space>\n  );\n}\n","import clsx from 'clsx';\n// Types\nimport type { MovieCard as MovieCardType } from 'types/tdr';\n// Sass\nimport './MovieCard.scss';\n\ntype MovieCardProps = {\n  movie: MovieCardType;\n  disableSuffix?: boolean;\n  suffixColor?: string;\n  disablePrefix?: boolean;\n  prefixColor?: string;\n};\n\nexport function MovieCard({ movie, disableSuffix, disablePrefix, prefixColor, suffixColor }: MovieCardProps) {\n  return (\n    <div className=\"movie-card\">\n      <div\n        className={clsx('movie-card__suffix', disableSuffix && 'movie-card__suffix--disabled')}\n        style={{ backgroundColor: !disableSuffix && suffixColor ? suffixColor : 'rgba(248, 248, 248, 0.6)' }}\n      >\n        <span style={{ fontSize: movie.suffix.length > 25 ? '0.8em' : '1em' }}>{movie.suffix}</span>\n      </div>\n\n      <div\n        className={clsx('movie-card__prefix', disablePrefix && 'movie-card__prefix--disabled')}\n        style={{ backgroundColor: !disablePrefix && prefixColor ? prefixColor : 'rgba(248, 248, 248, 0.6)' }}\n      >\n        <span style={{ fontSize: movie.prefix.length > 25 ? '0.8em' : '1em' }}>{movie.prefix}</span>\n      </div>\n    </div>\n  );\n}\n","import { useMemo } from 'react';\n\ntype HighlightTextProps = {\n  text: string;\n  highlights: string[];\n  className?: string;\n  highlightClassName?: string;\n} & ElementProps<HTMLSpanElement>;\n\nexport const ParagraphHighlighter: React.FC<HighlightTextProps> = ({\n  text,\n  highlights,\n  highlightClassName,\n  className,\n  ...props\n}) => {\n  if (!highlights.length) return <span {...props}>{text}</span>;\n\n  const { regex, parts } = useMemo(() => {\n    // Escape regex special characters in highlights\n    const escapedHighlights = highlights.map((highlight) => highlight.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'));\n\n    // Create a regex to match all highlights\n    const regex = new RegExp(`(${escapedHighlights.join('|')})`, 'gi');\n\n    // Split the text based on the regex and wrap matches\n    const parts = text.split(regex);\n\n    return { regex, parts };\n  }, [text, highlights]);\n\n  return (\n    <span>\n      {parts.map((part, index) =>\n        regex.test(part) ? (\n          // biome-ignore lint/suspicious/noArrayIndexKey: <explanation>\n          <span key={index} className={highlightClassName ?? 'highlight'}>\n            {part}\n          </span>\n        ) : (\n          part\n        ),\n      )}\n    </span>\n  );\n};\n","import clsx from 'clsx';\n// Components\nimport { Translate } from 'components/language';\nimport { ParagraphHighlighter } from 'components/text/ParagraphHighlighter';\n// Sass\nimport './MovieReviewCard.scss';\n\ntype MovieReviewCardProps = {\n  /**\n   * The type of review\n   */\n  type: 'positive' | 'negative';\n  /**\n   * The review itself\n   */\n  text: string;\n  /**\n   * Optional list of words to be highlighted in the review\n   */\n  highlights?: string[];\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n};\n\nexport const MovieReviewCard = ({ type, text, highlights = [], className = '' }: MovieReviewCardProps) => {\n  const baseClass = 'movie-review-card';\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${type}`, className)}>\n      <span className={`${baseClass}__header`}>\n        {type === 'positive' ? (\n          <Translate pt=\"Crítica Positiva\" en=\"Positive Review\" />\n        ) : (\n          <Translate pt=\"Crítica Negativa\" en=\"Negative Review\" />\n        )}\n        {type === 'positive' ? ' 👏' : ' 🤮'}\n      </span>\n      <div className={`${baseClass}__content`}>\n        <ParagraphHighlighter\n          text={text}\n          highlights={highlights}\n          className={`${baseClass}__text`}\n          highlightClassName={clsx(`${baseClass}__text-highlight`, `${baseClass}__text-highlight--${type}`)}\n        />\n      </div>\n    </div>\n  );\n};\n","import clsx from 'clsx';\n// Components\nimport { Sprite } from 'components/sprites';\n// Sass\nimport './SignCard.scss';\n\ntype SignCardProps = {\n  /**\n   * The id of the sign (do not prefix with sign)\n   */\n  id: string | number;\n  /**\n   * The width of the sign\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\n/**\n * An alien sign card component.\n */\nexport function SignCard({ id, width = 50, className = '' }: SignCardProps) {\n  return (\n    <div className={clsx('sign-card', className)} style={{ width: `${width}px`, height: `${width}px` }}>\n      <Sprite source=\"alien-signs\" id={`sign-${id}`} width={width} />\n    </div>\n  );\n}\n\n/**\n * An alien sign sprite component.\n */\nexport function SignSprite({ id, width = 64, ...props }: Pick<SignCardProps, 'id' | 'width'> & ElementProps) {\n  const signId = id.startsWith('sign') ? id : `sign-${id}`;\n  return <Sprite source=\"alien-signs\" id={signId} width={width} padding={0} {...props} />;\n}\n","// Types\nimport type { SuspectCard as SuspectCardType } from 'types/tdr';\n// Components\nimport { ImageCard } from 'components/image-cards';\nimport { DualTranslate } from 'components/language';\n// Sass\nimport './SuspectCard.scss';\n// Type\n\ntype SuspectCardProps = {\n  /**\n   * Suspect object\n   */\n  suspect: SuspectCardType;\n  /**\n   * Card width\n   */\n  width: number;\n  /**\n   * Hide the suspect name\n   */\n  hideName?: boolean;\n};\n\nexport function SuspectCard({ suspect, width, hideName }: SuspectCardProps) {\n  return (\n    <div className=\"suspect-card\" style={{ width: `${width}px` }}>\n      <ImageCard id={suspect.id} className=\"suspect-card__image\" cardWidth={width} preview={false} />\n      {!hideName && (\n        <div className=\"suspect-card__name\">\n          <DualTranslate>{suspect.name}</DualTranslate>\n        </div>\n      )}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport type { ReactNode } from 'react';\n// Sass\nimport './BookPages.scss';\n\ntype BookPagesProps = {\n  /**\n   * The left page content\n   */\n  leftPage: ReactNode;\n  /**\n   * The right page content\n   */\n  rightPage: ReactNode;\n  /**\n   * The class name to be applied to the component\n   */\n  className?: string;\n};\n\nexport function BookPages({ leftPage, rightPage, className }: BookPagesProps) {\n  return (\n    <svg viewBox=\"0 0 590 320\" className={clsx('book-pages', className)}>\n      <path\n        d=\"M4 12.46s71.16 8 145.65 0S295 16 295 16s90.78-12.42 156 0S586 5.14 586 5.14v296s-43.23 24.6-158.29 8S295 314 295 314s-94.44-17.89-143.33-3.59c-29.88 8.74-147.64-4-147.64-4z\"\n        fill=\"#ffffff\"\n      ></path>\n      <foreignObject x=\"13\" y=\"23\" width=\"280\" height=\"276\">\n        <div>{leftPage}</div>\n      </foreignObject>\n\n      <foreignObject x=\"295\" y=\"23\" width=\"280\" height=\"276\">\n        <div>{rightPage}</div>\n      </foreignObject>\n      <path d=\"M294.75 23.77h.5v280.66h-.5z\" fill=\"grey\"></path>\n    </svg>\n  );\n}\n","import type { ReactNode } from 'react';\n\ntype DoorFrameProps = {\n  /**\n   * The optional children\n   */\n  children?: ReactNode;\n  /**\n   * The optional class name\n   */\n  className?: string;\n  /**\n   * The optional width\n   */\n  width?: number;\n  /**\n   * The optional index\n   */\n  index?: number;\n};\n\n/**\n * Door frame component\n */\nexport function DoorFrame({ children, width, index, className = '' }: DoorFrameProps) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 257.1 318.8\"\n      style={width ? { width: `${width}px` } : {}}\n      className={className}\n    >\n      <defs>\n        <linearGradient id=\"d\" x1=\"130.72\" x2=\"130.72\" y1=\"318.8\" y2=\"34.78\" gradientUnits=\"userSpaceOnUse\">\n          <stop offset=\"0.03\" stopColor=\"#fdd3b6\"></stop>\n          <stop offset=\"0.31\" stopColor=\"#fbcdaa\"></stop>\n          <stop offset=\"0.81\" stopColor=\"#f5bd89\"></stop>\n          <stop offset=\"1\" stopColor=\"#f3b67b\"></stop>\n        </linearGradient>\n        <linearGradient id=\"a\" x1=\"130.72\" x2=\"130.72\" y1=\"65.32\" y2=\"14.51\" gradientUnits=\"userSpaceOnUse\">\n          <stop offset=\"0\" stopColor=\"#fdd5b9\"></stop>\n          <stop offset=\"0.32\" stopColor=\"#fdd0b1\"></stop>\n          <stop offset=\"0.97\" stopColor=\"#fcc9a5\"></stop>\n        </linearGradient>\n        <linearGradient id=\"e\" x1=\"130.72\" x2=\"130.72\" y1=\"23.84\" y2=\"4.14\" xlinkHref=\"#a\"></linearGradient>\n        <linearGradient id=\"f\" x1=\"27.14\" x2=\"234.29\" y1=\"46.01\" y2=\"46.01\" gradientUnits=\"userSpaceOnUse\">\n          <stop offset=\"0\" stopColor=\"#a16261\"></stop>\n          <stop offset=\"0.56\" stopColor=\"#b37572\"></stop>\n          <stop offset=\"1\" stopColor=\"#c48783\"></stop>\n        </linearGradient>\n        <linearGradient id=\"g\" x1=\"128.55\" x2=\"128.55\" y1=\"6.73\" y2=\"0\" xlinkHref=\"#a\"></linearGradient>\n        <linearGradient id=\"h\" x1=\"130.72\" x2=\"130.72\" y1=\"313.13\" y2=\"78.41\" gradientUnits=\"userSpaceOnUse\">\n          <stop offset=\"0\" stopColor=\"#c48783\"></stop>\n          <stop offset=\"0.44\" stopColor=\"#b37572\"></stop>\n          <stop offset=\"1\" stopColor=\"#a16261\"></stop>\n        </linearGradient>\n        <linearGradient id=\"b\" x1=\"223.42\" x2=\"223.42\" y1=\"230.96\" y2=\"171.86\" gradientUnits=\"userSpaceOnUse\">\n          <stop offset=\"0\" stopColor=\"#f3b67b\"></stop>\n          <stop offset=\"0.07\" stopColor=\"#f5bb86\"></stop>\n          <stop offset=\"0.24\" stopColor=\"#f8c69b\"></stop>\n          <stop offset=\"0.42\" stopColor=\"#fbcdaa\"></stop>\n          <stop offset=\"0.64\" stopColor=\"#fdd2b3\"></stop>\n          <stop offset=\"0.97\" stopColor=\"#fdd3b6\"></stop>\n        </linearGradient>\n        <linearGradient id=\"i\" x1=\"38\" x2=\"38\" y1=\"230.96\" y2=\"171.86\" xlinkHref=\"#b\"></linearGradient>\n        <linearGradient id=\"c\" x1=\"37.84\" x2=\"226.06\" y1=\"47.43\" y2=\"47.43\" gradientUnits=\"userSpaceOnUse\">\n          <stop offset=\"0\" stopColor=\"#fcb645\"></stop>\n          <stop offset=\"1\" stopColor=\"#e3a129\"></stop>\n        </linearGradient>\n        <linearGradient id=\"j\" x1=\"38.38\" x2=\"38.38\" y1=\"198.04\" y2=\"193.37\" xlinkHref=\"#c\"></linearGradient>\n        <linearGradient\n          id=\"k\"\n          x1=\"223.04\"\n          x2=\"223.04\"\n          y1=\"198.04\"\n          y2=\"193.37\"\n          xlinkHref=\"#c\"\n        ></linearGradient>\n        <linearGradient id=\"l\" x1=\"43.98\" x2=\"217.44\" y1=\"313.74\" y2=\"313.74\" gradientUnits=\"userSpaceOnUse\">\n          <stop offset=\"0\" stopColor=\"#623c57\"></stop>\n          <stop offset=\"1\" stopColor=\"#3d1931\"></stop>\n        </linearGradient>\n      </defs>\n      <g style={{ isolation: 'isolate' }}>\n        <path\n          fill=\"url(#d)\"\n          d=\"M236.27 34.78l-.6 30.02-.22 11.41-2.95 150.6-.2 10.11-1.6 81.88H30.74L25.99 76.21l-.23-11.41-.59-30.02h211.1z\"\n        ></path>\n        <path\n          d=\"M235.67 64.8l-.22 11.41H25.99l-.23-11.41h209.91z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.7\"\n        ></path>\n        <path fill=\"url(#a)\" d=\"M16.7 14.51h228.02v50.81H16.7z\"></path>\n        <path\n          d=\"M16.7 14.51h228.02V31.1H16.7z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.55\"\n        ></path>\n        <path\n          fill=\"url(#e)\"\n          d=\"M252.77 4.14l-.09.53-1.28 6.73-2.34 12.44H12.38L10.04 11.4 8.76 4.67l-.1-.53h244.11z\"\n        ></path>\n        <path fill=\"url(#f)\" d=\"M27.14 35.51h207.15v21H27.14z\"></path>\n        <path\n          d=\"M31.78 39.01h202.51v-3.5H27.14v21h4.64v-17.5z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.85\"\n        ></path>\n        <path fill=\"#f3b67b\" d=\"M220.07 79.83l-1.84 228.64h5.06l4.16-228.64h-7.38z\"></path>\n        <path\n          d=\"M220.7 307.95l1.84-228.12h-2.47l-1.84 228.64h5.06l.02-.52h-2.61z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.5\"\n        ></path>\n        <path fill=\"#fee0cc\" d=\"M226.05 79.83l-4.15 228.25h-3.67v.39h5.06l4.16-228.64h-1.4z\"></path>\n        <path fill=\"#f3b67b\" d=\"M34.25 79.6l4.4 228.6 5.06-.23-2.08-228.65-7.38.28z\"></path>\n        <path\n          d=\"M41.11 307.64L36.72 79.55l-2.47.05 4.4 228.6 5.06-.23v-.52l-2.6.19z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.5\"\n        ></path>\n        <path fill=\"#fee0cc\" d=\"M40.23 79.35l2.08 228.26-3.67.21.01.38 5.06-.23-2.08-228.65-1.4.03z\"></path>\n        <path fill=\"#f3b67b\" d=\"M53.68 23.84h-12.3L40 7.77l-1.15-3.64h14.38l-.44 2.6z\"></path>\n        <path\n          fill=\"#f3b67b\"\n          d=\"M147.26.9l-.32 3.24-1.93 19.7h-26.86l.33-19.7.02-1.29L147.26.9z\"\n          opacity=\"0.5\"\n        ></path>\n        <path\n          d=\"M252.68 4.67l-1.28 6.73H10.04L8.76 4.67h243.92z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.55\"\n        ></path>\n        <path fill=\"url(#g)\" d=\"M0 0h257.1v6.73H0z\"></path>\n        <path\n          d=\"M188.24 0l-.5 6.74h-22.52l.24-6.74h22.78zM98.41 0l-.06 6.74h-39.4L58 0h40.41z\"\n          style={{ mixBlendMode: 'lighten' }}\n          fill=\"#fff\"\n          opacity=\"0.35\"\n        ></path>\n        <path\n          fill=\"url(#h)\"\n          d=\"M213.58 78.41l-.43 24.81-.17 9.44-3.49 200.47H51.95l-3.5-200.47-.16-9.44-.44-24.81h165.73z\"\n        ></path>\n        <path\n          d=\"M232.5 226.81l-.2 10.11h-21.48l.17-10.11h21.51z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.65\"\n        ></path>\n        <path\n          fill=\"url(#b)\"\n          d=\"M237.27 173.42l-.26 5.44-.11 2.26-.11 2.66-.45 9.59-.22 4.67-.11 2.15-1.39 29.47h-25.04l.14-29.47.02-2.15.02-2.33v-2.34l.06-9.59.02-2.66v-2.26l.03-5.44h27.4z\"\n        ></path>\n        <path\n          d=\"M237.01 178.86l-.22 4.92h-26.97l.02-4.92h27.17z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.65\"\n        ></path>\n        <path fill=\"#fddbc5\" d=\"M240.6 181.13h-31.03v-8.04h32.27l-1.24 8.04z\"></path>\n        <path\n          d=\"M50.62 236.92h-21.5l-.2-10.11h21.53l.17 10.11z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.65\"\n        ></path>\n        <path\n          fill=\"url(#i)\"\n          d=\"M51.84 229.66H26.8l-1.39-29.47-.11-2.15-.22-4.67-.45-9.59-.11-2.66-.11-2.26-.26-5.44h27.4l.03 5.44v2.27l.02 2.65.06 9.59v2.34l.01 2.33.02 2.15.15 29.47z\"\n        ></path>\n        <path\n          d=\"M24.4 178.86l.23 4.92h26.96l-.01-4.92H24.4z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.65\"\n        ></path>\n        <path fill=\"#fddbc5\" d=\"M20.81 181.13h31.03v-8.04H19.57l1.24 8.04z\"></path>\n        <path fill=\"#bb7d2a\" d=\"M36.91 42.51h190.08v9.85H36.91z\"></path>\n        <path fill=\"url(#c)\" d=\"M37.84 43.28h188.22v8.29H37.84z\"></path>\n        <path\n          d=\"M99.34 52.35H64.85l-6.77-9.84h34.47l6.79 9.84zm27.03 0H113.4l-6.79-9.84h12.99l6.77 9.84z\"\n          style={{ mixBlendMode: 'overlay' }}\n          fill=\"#fff\"\n          opacity=\"0.35\"\n        ></path>\n        <path\n          d=\"M51.69 200.19H25.41l-.11-2.15-.11-2.33h26.47l.01 2.33.02 2.15z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.65\"\n        ></path>\n        <path fill=\"url(#j)\" d=\"M51.67 198.04H25.3l-.22-4.67h26.58v2.34l.01 2.33z\"></path>\n        <path\n          d=\"M37.24 198.04h-3.48l-5.57-4.67h10.49l-1.44 4.67z\"\n          style={{ mixBlendMode: 'overlay' }}\n          fill=\"#fff\"\n          opacity=\"0.35\"\n        ></path>\n        <path\n          d=\"M236.23 195.71l-.11 2.33-.11 2.15h-26.29l.02-2.15.02-2.33h26.47z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.65\"\n        ></path>\n        <path fill=\"url(#k)\" d=\"M236.34 193.37l-.22 4.67h-26.38l.02-2.33v-2.34h26.58z\"></path>\n        <path\n          d=\"M222.26 198.04h-3.48l-5.57-4.67h10.48l-1.43 4.67z\"\n          style={{ mixBlendMode: 'overlay' }}\n          fill=\"#fff\"\n          opacity=\"0.35\"\n        ></path>\n        <path fill=\"url(#l)\" d=\"M43.98 308.69h173.47v10.11H43.98z\"></path>\n        <path\n          d=\"M75.98 308.69L74.9 318.8H56.5l-.65-10.11h20.13z\"\n          style={{ mixBlendMode: 'lighten' }}\n          fill=\"#fff\"\n          opacity=\"0.35\"\n        ></path>\n        <path\n          d=\"M138.19 308.68c-.21 3.47-.39 6.93-.56 10.11h-18.92l-1.08-10.11z\"\n          style={{ mixBlendMode: 'lighten' }}\n          fill=\"#fff\"\n          opacity=\"0.15\"\n        ></path>\n        <path\n          d=\"M199.58 308.68l-.6 10.11h-9l-1-10.11zM87.41 308.69l-.56 10.11h-5.97l-1.69-10.11h8.22z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#98616c\"\n          opacity=\"0.45\"\n        ></path>\n        <path\n          fill=\"#231f20\"\n          stroke=\"#231f20\"\n          strokeMiterlimit=\"10\"\n          d=\"M54.95 84.1h150v225h-150z\"\n          opacity=\"0.59\"\n        ></path>\n\n        <foreignObject x=\"53\" y=\"82\" width=\"150\" height=\"225\">\n          {children}\n        </foreignObject>\n      </g>\n\n      {index === 0 && (\n        <path\n          fill=\"#3d1931\"\n          d=\"M143.46 61.65l-3.94-8.88h-18.29l-4 8.88h-3.89l15.32-33.84h3.55l15.31 33.84zm-20.74-12.29H138l-7.6-17.14z\"\n        ></path>\n      )}\n      {index === 1 && (\n        <path\n          fill=\"#3d1931\"\n          d=\"M143.12 36.45a8.12 8.12 0 01-5.32 7.82c4 1.2 7.2 3.51 7.2 8.16 0 5.81-4.85 9.22-12.2 9.22h-14.93v-33.6h14.31c6.62 0 10.94 3.26 10.94 8.4zm-3.84.52c0-3.36-2.64-5.52-7.44-5.52h-10.22V43h9.93c4.57 0 7.73-2 7.73-6zm1.88 15.22c0-3.7-3.08-5.81-8.93-5.81h-10.61v11.86h11.28c5.1 0 8.26-2.24 8.26-6.05z\"\n        ></path>\n      )}\n      {index === 2 && (\n        <path\n          fill=\"#3d1931\"\n          d=\"M132.85 62.22c-9.7 0-16.85-7.63-16.85-17.33s7.11-17.42 17-17.42a17.48 17.48 0 0113.1 5.33l-2.59 2.78c-2.83-2.69-6-4.61-10.56-4.61-7.44 0-13 6-13 13.83s5.61 13.92 13 13.92c4.61 0 7.63-1.78 10.85-4.85l2.49 2.45c-3.5 3.55-7.29 5.9-13.44 5.9z\"\n        ></path>\n      )}\n      {index === 3 && (\n        <path\n          fill=\"#3d1931\"\n          d=\"M128.1 61.65h-11.67v-33.6h11.67c10.56 0 17.86 7.24 17.86 16.75s-7.3 16.85-17.86 16.85zm0-30.1h-7.87v26.59h7.87c8.49 0 13.92-5.76 13.92-13.25s-5.43-13.34-13.92-13.34z\"\n        ></path>\n      )}\n      {index === 4 && (\n        <path\n          fill=\"#3d1931\"\n          d=\"M122.91 31.5V43h18.34v3.46h-18.34v11.73h20.74v3.46h-24.53v-33.6h24.29v3.45z\"\n        ></path>\n      )}\n      {index === 5 && (\n        <path fill=\"#3d1931\" d=\"M123.25 31.55v12h18.19V47h-18.19v14.65h-3.79v-33.6h24.14v3.5z\"></path>\n      )}\n      {index === 6 && (\n        <path\n          fill=\"#3d1931\"\n          d=\"M132 62.22c-10.56 0-17.09-7.68-17.09-17.33 0-9.26 6.77-17.42 16.85-17.42a17.72 17.72 0 0112.53 4.46l-2.45 2.88A14.32 14.32 0 00131.6 31c-7.44 0-12.77 6.29-12.77 13.83 0 8.06 5.14 14 13.3 14a15.86 15.86 0 009.7-3.36V47.1H131.6v-3.41h13.88v13.4A20.39 20.39 0 01132 62.22z\"\n        ></path>\n      )}\n    </svg>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { CheckCircleFilled } from '@ant-design/icons';\nimport { Button, Popover } from 'antd';\n// Types\nimport type { CrimeSceneTile } from 'types/tdr';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Sass\nimport './SceneTile.scss';\n\ntype SceneTileProps = {\n  /**\n   * Scene tile\n   */\n  tile: CrimeSceneTile;\n  /**\n   * The optional answer index\n   */\n  index?: number;\n  /**\n   * Optional callback when a value is selected\n   */\n  onSelectValue?: GenericFunction;\n};\n\n/**\n * Scene tile component\n */\nexport function SceneTile({ tile, index, onSelectValue }: SceneTileProps) {\n  const { language } = useLanguage();\n  return (\n    <div className={clsx('scene-tile', `scene-tile--${tile.type}`)}>\n      <Popover content={tile.description[language]}>\n        <h4 className=\"scene-tile__title\">{tile.title[language]}</h4>\n      </Popover>\n      <ul className=\"scene-tile__options\">\n        {tile.values.map((entry, i) => {\n          const isActive = i === index;\n          const isInative = index !== undefined && !isActive;\n          return (\n            <li key={`${tile.id}-value-${i}`}>\n              <Button\n                className={clsx(\n                  'scene-tile__button',\n                  `scene-tile__button--${tile.type}`,\n                  isInative && 'scene-tile__button--inactive',\n                )}\n                icon={isActive ? <CheckCircleFilled className=\"scene-tile__icon\" /> : undefined}\n                onClick={onSelectValue ? () => onSelectValue({ tileId: tile.id, value: i }) : () => {}}\n              >\n                {entry[language]}\n              </Button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Input } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Sass\nimport './SuggestionEasel.scss';\n\ntype SuggestionEaselProps = {\n  /**\n   * Unique identifier for the input\n   */\n  id: string;\n  /**\n   * Function to be called when the input changes\n   */\n  onChangeInput?: GenericFunction;\n  /**\n   * Function to be called when the user presses enter\n   */\n  onPressEnter?: GenericFunction;\n  /**\n   * Value of the input\n   */\n  value?: string;\n};\n\n/**\n * Component that renders a suggestion easel\n */\nexport function SuggestionEasel({ id, onChangeInput, onPressEnter, value }: SuggestionEaselProps) {\n  const { translate } = useLanguage();\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 230 60\"\n      overflow=\"visible\"\n      width=\"230\"\n      className=\"suggestion-easel\"\n    >\n      <path fill=\"#fff\" d=\"M26.7 59.5L14.1.5h202.7l12.6 59z\" />\n      <path fill=\"#4d4d4d\" d=\"M216.4 1l12.4 58H27.1L14.7 1h201.7m.8-1H13.5l12.8 60H230L217.2 0z\" />\n      <path fill=\"#4d4d4d\" d=\"M24.2 48.3L13.5 0 0 48.3z\" />\n      <foreignObject x=\"32.6\" y=\"13.9\" width=\"185\" height=\"300\">\n        <div>\n          <Input\n            placeholder={translate('Escreva dica aqui', 'Write here')}\n            key={id}\n            id={id}\n            value={value}\n            onChange={onChangeInput}\n            className=\"suggestion-easel__input\"\n            bordered={false}\n            onPressEnter={onPressEnter}\n            autoComplete=\"off\"\n            readOnly={!onChangeInput}\n          />\n        </div>\n      </foreignObject>\n      <path opacity=\".2\" d=\"M0 48.3L26.3 60l-2.1-11.7z\" />\n    </svg>\n  );\n}\n","// Icons\nimport { ImageCardsIcon } from 'icons/ImageCardsIcon';\n// Components\nimport { type HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function CardHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<ImageCardsIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","// Icons\nimport { PlayersIcon } from 'icons/PlayersIcon';\n// Components\nimport { type HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function PlayersHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<PlayersIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","// Icons\nimport { StarIcon } from 'icons/StarIcon';\n// Components\nimport { type HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function PointsHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<StarIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import clsx from 'clsx';\nimport { orderBy } from 'lodash';\nimport { type LegacyRef, type ReactNode, useEffect, useMemo, useState } from 'react';\nimport { useEffectOnce, useMeasure } from 'react-use';\n// Ant Design Resources\nimport { CrownFilled } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\n// Types\nimport type { GameRanking } from 'types/game';\nimport type { GamePlayers } from 'types/player';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\n\ntype GainedPointProps = {\n  gainedPoint: number;\n  order: number;\n  description?: any;\n};\n\nfunction GainedPoint({ gainedPoint, order, description }: GainedPointProps) {\n  const isPositive = gainedPoint > 0;\n  const isNegative = gainedPoint < 0;\n  return (\n    <li\n      className={clsx(\n        'ranking-board__gained-point',\n        isPositive && 'ranking-board__gained-point--plus',\n        isNegative && 'ranking-board__gained-point--minus',\n        `ranking-board__gained-point--${order}`,\n      )}\n    >\n      <Tooltip\n        title={description ?? <Translate pt=\"Pontos ganhos\" en=\"Gained Points\" />}\n        color={isPositive ? 'gold' : isNegative ? 'red' : 'gray'}\n      >\n        {isPositive ? '+' : ''}\n        {gainedPoint}\n      </Tooltip>\n    </li>\n  );\n}\n\ntype GainedPointsProps = {\n  gainedPoints: number[] | number;\n  playerId: PlayerId;\n  gainedPointsDescriptions?: any[];\n};\n\nfunction GainedPoints({ gainedPoints, playerId, gainedPointsDescriptions = [] }: GainedPointsProps) {\n  const points = Array.isArray(gainedPoints) ? gainedPoints : [gainedPoints];\n  return (\n    <ul className=\"ranking-board__cell-gained-points\">\n      {points.map((gainedPoint, index) => (\n        <GainedPoint\n          key={`gained-point-${playerId}-${index}`}\n          gainedPoint={gainedPoint}\n          order={index}\n          description={gainedPointsDescriptions[index]}\n        />\n      ))}\n    </ul>\n  );\n}\n\ntype RankingBoardProps = {\n  players: GamePlayers;\n  ranking: GameRanking;\n  gainedPointsDescriptions?: ReactNode[];\n  hideGainedPoints?: boolean;\n  delay?: number;\n};\n\nexport function RankingBoard({\n  players,\n  ranking,\n  gainedPointsDescriptions,\n  hideGainedPoints = false,\n  delay = 0,\n}: RankingBoardProps) {\n  const [displayStep, setDisplayStep] = useState(0);\n  const [sortedRanking, setSortedRanking] = useState<GameRanking>([]);\n  const [reRank, setReRank] = useState(0);\n  const [ref, { height }] = useMeasure();\n\n  const maxPoints = useMemo(() => Math.max(...ranking.map((scores) => scores.newScore)), [ranking]);\n\n  const { seconds } = useCountdown({\n    duration: 5 + delay,\n    autoStart: true,\n    onExpire: () => {\n      setReRank(1);\n      setDisplayStep(3);\n    },\n  });\n\n  // Rank by previousScore\n  useEffectOnce(() => {\n    const positions: PlainObject = {};\n    let lastPosition = 0;\n    let lastPoints = 0;\n\n    const rankByFinalScoreDict = orderBy(ranking, ['newScore', 'name'], ['desc', 'asc']).reduce(\n      (acc: PlainObject, entry, index) => {\n        acc[entry.playerId] = index;\n        // Calculate position\n        if (lastPoints === 0 || entry.newScore < lastPoints) {\n          lastPoints = entry.newScore;\n          lastPosition += 1;\n        }\n        positions[entry.playerId] = [0, lastPosition];\n        return acc;\n      },\n      {},\n    );\n\n    const rankByPreviousScore = orderBy(ranking, ['previousScore', 'name'], ['desc', 'asc']);\n\n    // Reset position trackers\n    lastPosition = 0;\n    lastPoints = 0;\n\n    const tempSortedRanking: GameRanking = rankByPreviousScore.map((entry, index) => {\n      const newEntry = { ...entry };\n\n      newEntry.order = [index, rankByFinalScoreDict[newEntry.playerId]];\n      newEntry.position = positions[newEntry.playerId];\n      // Calculate position\n      if (lastPoints === 0 || entry.previousScore < lastPoints) {\n        lastPoints = entry.previousScore;\n        lastPosition += 1;\n      }\n      newEntry.position[0] = lastPosition;\n      return newEntry;\n    });\n\n    setSortedRanking(tempSortedRanking);\n  });\n\n  // Show gained points\n  useEffect(() => {\n    if (seconds === 4 + delay) {\n      setDisplayStep(1);\n    } else if (seconds === 2 + delay) {\n      setDisplayStep(2);\n    }\n  }, [seconds, delay]);\n\n  return (\n    <div\n      className={clsx(\n        'ranking-board',\n        seconds > 4 && 'ranking-board--hidden',\n        seconds === 4 && getAnimationClass('fadeIn'),\n      )}\n      style={{\n        height: `${(Math.max(60, height) + 8) * sortedRanking.length}px`,\n      }}\n    >\n      <div\n        className=\"ranking-board__row\"\n        id=\"ranking-row-placeholder\"\n        style={{ opacity: 0 }}\n        ref={ref as LegacyRef<HTMLDivElement>}\n      >\n        <div className=\"ranking-board__cell-crown\">\n          <CrownFilled className=\"ranking-board__crown-icon\" />\n        </div>\n        <div className=\"ranking-board__cell-position\">#0</div>\n        <div className=\"ranking-board__cell-player\">\n          <div className=\"ranking-board__avatar\">\n            <Avatar id=\"A\" />\n          </div>\n          <div className=\"ranking-board__name\">Placeholder</div>\n        </div>\n        <Tooltip title={<Translate pt=\"Pontos Anteriores\" en=\"Previous Points\" />} color=\"gray\">\n          <div className=\"ranking-board__cell-points\">0</div>\n        </Tooltip>\n\n        <GainedPoints gainedPoints={0} playerId=\"A\" />\n\n        <Tooltip title=\"Total\" color=\"gold\">\n          <span className=\"ranking-board__cell-points-total\">0</span>\n        </Tooltip>\n      </div>\n\n      {sortedRanking.map((entry, index) => {\n        const { playerId, newScore, previousScore, gainedPoints, order, position } = entry;\n        const hPosition = (Math.max(60, height) + 8) * (order[reRank] ?? 0);\n\n        return (\n          <div\n            className={`ranking-board__row ranking-board__row--${index}`}\n            key={`ranking-${playerId}`}\n            // id={`ranking-row-${index}`}\n            style={{ top: `${hPosition}px` }}\n          >\n            <div className=\"ranking-board__cell-crown\">\n              {newScore > 0 && maxPoints === newScore && displayStep >= 3 && (\n                <CrownFilled className=\"ranking-board__crown-icon\" />\n              )}\n            </div>\n            <div className=\"ranking-board__cell-position\">#{position[reRank] ?? ''}</div>\n            <div className=\"ranking-board__cell-player\">\n              <div className=\"ranking-board__avatar\">\n                <Avatar id={players[playerId].avatarId} />\n              </div>\n              <div className=\"ranking-board__name\">{players[playerId].name}</div>\n            </div>\n            <Tooltip title={<Translate pt=\"Pontos Anteriores\" en=\"Previous Points\" />} color=\"gray\">\n              <div className=\"ranking-board__cell-points\">{previousScore}</div>\n            </Tooltip>\n            {!hideGainedPoints && displayStep >= 1 && gainedPoints !== undefined && (\n              <GainedPoints\n                gainedPoints={gainedPoints}\n                playerId={playerId}\n                gainedPointsDescriptions={gainedPointsDescriptions}\n              />\n            )}\n\n            <Tooltip title=\"Total\" color=\"gold\">\n              {displayStep >= 2 ? (\n                <span className=\"ranking-board__cell-points-total\">{newScore}</span>\n              ) : (\n                <span className=\"ranking-board__cell-points-total-preliminary\">{newScore}</span>\n              )}\n            </Tooltip>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import type { ReactNode } from 'react';\n// Ant Design Resources\nimport { CaretUpOutlined } from '@ant-design/icons';\n// Types\nimport type { GameRanking } from 'types/game';\nimport type { GamePlayers } from 'types/player';\n// Hooks\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Components\nimport { Translate } from 'components/language';\nimport { useGameAppearance } from 'components/session/GameInfoContext';\nimport { Step } from 'components/steps';\nimport { Instruction, StepTitle } from 'components/text';\n// Internal\nimport { RankingBoard } from './RankingBoard';\n\ntype StepRankingWrapperProps = {\n  /**\n   * The players\n   */\n  players: GamePlayers;\n  /**\n   * The ranking array\n   */\n  ranking: GameRanking;\n  /**\n   * Gained points descriptions for the popover\n   */\n  gainedPointsDescriptions: ReactNode[];\n  /**\n   * Additional content\n   */\n  children?: ReactNode;\n  /**\n   * Replacement title for Ranking\n   */\n  title?: ReactNode;\n  /**\n   * Optional node that goes under the title\n   */\n  subtitle?: ReactNode;\n  /**\n   * Whether the title should be white or not\n   */\n  colorScheme?: ColorScheme;\n};\n\nexport function StepRankingWrapper({\n  players,\n  ranking,\n  gainedPointsDescriptions,\n  children,\n  title,\n  subtitle,\n  colorScheme,\n}: StepRankingWrapperProps) {\n  useTemporarilyHidePlayersBar();\n  const appearance = useGameAppearance();\n\n  const scheme = colorScheme ?? appearance.colorScheme ?? 'light';\n\n  return (\n    <Step>\n      <StepTitle colorScheme={scheme}>{title ?? 'Ranking'}</StepTitle>\n\n      {subtitle}\n\n      <RankingBoard players={players} ranking={ranking} gainedPointsDescriptions={gainedPointsDescriptions} />\n      <Instruction className=\"step-ranking-wrapper-gained-points-instruction\" colorScheme={scheme}>\n        <CaretUpOutlined />\n        <Translate\n          pt=\"Passe o mouse em cada um dos pontos para saber como eles foram distribuídos\"\n          en=\"Hover over the scores to learn how they were granted\"\n        />\n        <CaretUpOutlined />\n      </Instruction>\n\n      {children}\n    </Step>\n  );\n}\n","import { useQuery } from '@tanstack/react-query';\n// Ant Design Resources\nimport { WarningOutlined } from '@ant-design/icons';\nimport { Spin, Tooltip } from 'antd';\n// Hooks\nimport { useTDBaseUrl } from 'hooks/useTDBaseUrl';\n\ntype SpriteProps = {\n  /**\n   * The sprite source name\n   */\n  source: string;\n  /**\n   * The id of the item\n   */\n  id: string;\n  /**\n   * The width of the item\n   */\n  width?: number;\n  /**\n   * Replacement title, usually the name of the item\n   */\n  title?: string;\n  /**\n   * Optional class name\n   */\n  className?: string;\n  /**\n   *\n   */\n  padding?: number;\n} & ElementProps;\n\n/**\n * Loads a sprite from the Tarde Divertida sprites\n * @param {SpriteProps} props\n * @returns a single sprite item\n */\nexport function Sprite({\n  id,\n  source,\n  width = 72,\n  padding = 6,\n  title,\n  className,\n  style,\n  ...props\n}: SpriteProps) {\n  const baseUrl = useTDBaseUrl('sprites');\n\n  const { isLoading, data, isError } = useQuery({\n    queryKey: ['sprite', source],\n    queryFn: async () => {\n      const response = await fetch(`${baseUrl}/sprites/${source}.svg`);\n      return await response.text();\n    },\n    enabled: !!id && !!source,\n  });\n\n  const paddedWidth = width - padding * 2;\n\n  if (isLoading) {\n    return (\n      <span\n        style={{\n          width: `${paddedWidth}px`,\n          height: `${paddedWidth}px`,\n          padding,\n          display: 'grid',\n          placeItems: 'center',\n          ...style,\n        }}\n        className={className}\n        {...props}\n      >\n        <Spin />\n      </span>\n    );\n  }\n\n  const svgContent = data;\n\n  if (isError || !svgContent) {\n    return (\n      <span\n        style={{\n          width: `${paddedWidth}px`,\n          height: `${paddedWidth}px`,\n          padding,\n          display: 'grid',\n          placeItems: 'center',\n          ...style,\n        }}\n        className={className}\n        {...props}\n      >\n        <WarningOutlined />\n      </span>\n    );\n  }\n\n  return (\n    <span\n      style={{\n        width: `${paddedWidth}px`,\n        height: `${paddedWidth}px`,\n        padding,\n        display: 'grid',\n        placeItems: 'center',\n        ...style,\n      }}\n      className={className}\n      {...props}\n    >\n      <svg viewBox=\"0 0 512 512\" style={{ width: `${paddedWidth}px`, height: `${paddedWidth}px` }}>\n        <use xlinkHref={`#${id}`} dangerouslySetInnerHTML={{ __html: svgContent }} />\n        <foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">\n          {title && (\n            <Tooltip title={title}>\n              <div style={{ background: 'transparent', width: '100%', height: '100vh' }}></div>\n            </Tooltip>\n          )}\n        </foreignObject>\n      </svg>\n    </span>\n  );\n}\n","import clsx from 'clsx';\nimport type { ComponentProps, ReactNode } from 'react';\n// Sass\nimport './SpeechBubble.scss';\n\ntype SpeechBubbleProps = {\n  children: ReactNode;\n  direction?: 'left' | 'right' | 'top' | 'bottom';\n  shadow?: boolean;\n  size?: 'small' | 'medium' | 'large';\n} & ComponentProps<'div'>;\n\nexport function SpeechBubble({ children, direction = 'left', shadow, size, ...rest }: SpeechBubbleProps) {\n  const baseClass = 'speech-bubble';\n  return (\n    <div\n      {...rest}\n      className={clsx(\n        baseClass,\n        `${baseClass}--${direction}`,\n        shadow && `${baseClass}--shadow`,\n        size && `${baseClass}--${size}`,\n      )}\n    >\n      {children}\n    </div>\n  );\n}\n","export const MEGAMIX_ACTIONS = {\n  SUBMIT_SEEDS: 'SUBMIT_SEEDS',\n  SUBMIT_TRACK_ANSWER: 'SUBMIT_TRACK_ANSWER',\n} as const;\n\nexport const TITLES: Record<string, DualLanguageValue> = {\n  'arte-ruim': {\n    pt: 'Arte Ruim Pra Dedéu',\n    en: 'Questionable Art',\n  },\n  'comunicacao-alienigena': {\n    pt: 'Comunicação Alienígena',\n    en: 'Alien Communication',\n  },\n  'contadores-historias': {\n    pt: 'Contadores de Histórias',\n    en: 'Storytellers',\n  },\n  'crimes-hediondos': {\n    pt: 'Crimes Hediondos',\n    en: 'Horrific Crimes',\n  },\n  'cruza-palavras': {\n    pt: 'Cruza Palavras',\n    en: 'Mixed Clues',\n  },\n  'detetives-imaginativos': {\n    pt: 'Detetives Imaginativos',\n    en: 'Detective Agency',\n  },\n  esquiadores: {\n    pt: 'Esquiadores',\n    en: 'Ski Resort',\n  },\n  'espiao-entre-nos': {\n    pt: 'Espião Entre Nós',\n    en: 'Spy the Spies',\n  },\n  'fileira-de-fatos': {\n    pt: 'Fileira de Fatos',\n    en: 'Facts Lineup',\n  },\n  'galeria-de-sonhos': {\n    pt: 'Galeria de Sonhos',\n    en: 'Dream Gallery',\n  },\n  'labirinto-secreto': {\n    pt: 'Labirinto Secreto',\n    en: 'Secret Labyrinth',\n  },\n  'megamix-best-of-three': {\n    pt: 'Melhor de 3',\n    en: 'Best of 3',\n  },\n  'megamix-this-that': {\n    pt: 'Isso ou Aquilo?',\n    en: 'This or That?',\n  },\n  'megamix-who-said-this': {\n    pt: 'Quem Disse Isso?',\n    en: 'Who Said This?',\n  },\n  'mente-coletiva': {\n    pt: 'Mente Coletiva',\n    en: 'Herd Mind',\n  },\n  'na-rua-do-medo': {\n    pt: 'Na Rua do Medo',\n    en: 'Fear Street',\n  },\n  'namoro-ou-amizade': {\n    pt: 'Namoro ou Amizade',\n    en: 'Awkward Dates',\n  },\n  'onda-telepatica': {\n    pt: 'Ondas Telepáticas',\n    en: 'Telepathic Waves',\n  },\n  'palheta-de-cores': {\n    pt: 'Palheta de Cores',\n    en: 'Color Palette',\n  },\n  'polemica-da-vez': {\n    pt: 'Polêmica da Vez',\n    en: \"That's Polemic!\",\n  },\n  'porta-dos-desesperados': {\n    pt: 'Porta dos Desesperados',\n    en: 'Obscure Doors',\n  },\n  'retrato-falado': {\n    pt: 'Retrato Falado Monstruoso',\n    en: 'Monster Sketch',\n  },\n  'quem-nao-mata': {\n    pt: 'Quem Não Mata, Morre',\n    en: 'Mortal Standoff',\n  },\n  'quem-sou-eu': {\n    pt: 'Quem Sou Eu?',\n    en: 'Who Am I?',\n  },\n  'super-campeonato': {\n    pt: 'Super Campeonato',\n    en: 'Ultimate Championship',\n  },\n  'ta-na-cara': {\n    pt: 'Tá Na Cara',\n    en: 'Guess Who What?',\n  },\n  'testemunha-ocular': {\n    pt: 'Testemunha Ocular',\n    en: 'Eye Witness',\n  },\n  'ue-so-isso': {\n    pt: 'Ué, só isso?',\n    en: \"That's it?\",\n  },\n  'vamos-ao-cinema': {\n    pt: 'Vamos no cinema?',\n    en: 'Movie night!',\n  },\n};\n\nexport const INSTRUCTIONS: Record<string, DualLanguageValue> = {\n  'arte-ruim': {\n    pt: 'Uma imagem vale mais que mil palavras',\n    en: \"That's art!\",\n  },\n  'comunicacao-alienigena': {\n    pt: 'Vamos falar com os ETs',\n    en: 'Let us talk to the aliens',\n  },\n  'contadores-historias': {\n    pt: 'Conte uma história',\n    en: 'Tell us a story',\n  },\n  'crimes-hediondos': {\n    pt: 'Desvenda o crime!',\n    en: 'Solve the crime!',\n  },\n  'cruza-palavras': {\n    pt: 'Coloque a dica na grade de palavras!',\n    en: 'Place the clue in the word grid!',\n  },\n  'detetives-imaginativos': {\n    pt: 'Há um impostor entre a gente!',\n    en: 'There is an impostor among us!',\n  },\n  esquiadores: {\n    pt: 'Escolha uma montanha para esquiar!',\n    en: 'Choose a mountain to ski!',\n  },\n  'espiao-entre-nos': {\n    pt: 'Onde você está?',\n    en: 'Where are we?',\n  },\n  'fileira-de-fatos': {\n    pt: 'Coloque a fila de números na ordem!',\n    en: 'Place the line of numbers in order!',\n  },\n  'galeria-de-sonhos': {\n    pt: 'Um tema, um sonho, várias images',\n    en: 'A theme, a dream, many images',\n  },\n  'labirinto-secreto': {\n    pt: 'Vamos andar pela floresta',\n    en: \"Let's walk into the woods\",\n  },\n  'megamix-best-of-three': {\n    pt: 'Qual opção você escolhe?',\n    en: 'Which option do you choose?',\n  },\n  'megamix-this-that': {\n    pt: 'Qual opção você escolhe?',\n    en: 'Which option do you choose?',\n  },\n  'megamix-who-said-this': {\n    pt: 'Quem tem mais cara de ter disso isso?',\n    en: \"Who could've possibly said this?\",\n  },\n  'mente-coletiva': {\n    pt: 'Junte-se as ovelhas!',\n    en: 'Join the herd!',\n  },\n  'na-rua-do-medo': {\n    pt: 'Gostosuras ou travessuras?',\n    en: 'Trick or treat?',\n  },\n  'namoro-ou-amizade': {\n    pt: 'Selecione o melhor partido',\n    en: \"Who's the best catch?\",\n  },\n  'onda-telepatica': {\n    pt: 'Para onde o ponteiro está apontando?',\n    en: 'Where is the pointer pointing to?',\n  },\n  'palheta-de-cores': {\n    pt: 'Selecione a melhor cor',\n    en: 'Select the best color swatch',\n  },\n  'polemica-da-vez': {\n    pt: 'Quantas curtidas isso ganha?',\n    en: 'How many likes, huh?',\n  },\n  'porta-dos-desesperados': {\n    pt: 'Qual a porta é a saída?',\n    en: 'What door is the exit?',\n  },\n  'quem-nao-mata': {\n    pt: 'Mate alguém...',\n    en: 'Kill someone...',\n  },\n  'quem-sou-eu': {\n    pt: 'Decifre os símbolos!',\n    en: 'Decipher the glyphs',\n  },\n  'retrato-falado': {\n    pt: 'Qual o melhor monstro?',\n    en: 'What is the best monster?',\n  },\n  'super-campeonato': {\n    pt: 'Quem ganha essa batalha?',\n    en: 'Who will win this battle?',\n  },\n  'ta-na-cara': {\n    pt: 'E esse aí? O que acha?',\n    en: 'What about this one? What do you think?',\n  },\n  'testemunha-ocular': {\n    pt: 'Quem é o criminoso?',\n    en: 'Who is the perpetrator?',\n  },\n  'ue-so-isso': {\n    pt: 'Escreva uma dica para ser eliminada',\n    en: 'Write a clue to be eliminated',\n  },\n  'vamos-ao-cinema': {\n    pt: 'Vamos ver qual filme?',\n    en: 'But what movie?',\n  },\n};\n","import { useEffect } from 'react';\n// Types\nimport type { GamePlayer } from 'types/player';\n\nexport function useColorizeBackground(user: GamePlayer, currentRound = 0) {\n  const team = user?.team?.[currentRound - 1];\n\n  // Colorize background\n  useEffect(() => {\n    if (team) {\n      const appElement = document.getElementById('app');\n      if (appElement) {\n        if (team === 'L') {\n          appElement.classList.add('background-sad');\n        } else {\n          appElement.classList.remove('background-sad');\n        }\n      }\n    }\n    return () => {\n      const appElement = document.getElementById('app');\n      appElement?.classList.remove('background-sad');\n    };\n  }, [team]);\n}\n","// Ant Design Resources\nimport type { StepProps } from 'antd';\n// Types\nimport type { GameRound } from 'types/game';\nimport type { MovieCard } from 'types/tdr';\n// Internal\nimport type { SeedEntry } from './types';\n\nexport const buildSeedingSteps = (\n  seeds: SeedEntry[],\n  translate: (pt: string, en: string, custom?: string | undefined) => string,\n): StepProps[] => {\n  return seeds.map((seed) => {\n    switch (seed.type) {\n      case 'arte-ruim':\n        return {\n          title: translate('Hobby Artístico', 'Artistic Hobby'),\n          description: translate('Se expresse!', 'Express yourself!'),\n        };\n\n      case 'contadores-historias':\n        return {\n          title: translate('Torpedo da sua mãe', 'Text from your mom'),\n          description: translate('O que ela quer agora?', 'What does she want now?'),\n        };\n\n      case 'labirinto-secreto':\n        return {\n          title: translate('Postando no Insta', 'Instagram post'),\n          description: translate('Não existe sexy demais!', 'Do it for the likes!'),\n        };\n\n      case 'mente-coletiva':\n        return {\n          title: translate('Tik Tok', 'Tik Tok'),\n          description: translate('Sempre temos um tempinho!', \"There's always time!\"),\n        };\n      case 'party':\n      case 'onda-telepatica':\n        return {\n          title: translate('Tarefa de Casa', 'Homework'),\n          description: translate('Não pode deixar pra depois!', \"You can't leave it for tomorrow!\"),\n        };\n      case 'polemica-da-vez':\n        return {\n          title: translate('Redes sociais', 'Social Media'),\n          description: translate('Dê uma olhada no twitter', 'Check it out twitter'),\n        };\n      case 'retrato-falado':\n        return {\n          title: translate('Flashback', 'Flashback'),\n          description: translate('Um evento traumatizante', 'A traumatizing event'),\n        };\n      case 'ue-so-isso':\n        return {\n          title: translate('Torpedo do Amigo', \"A friend's text\"),\n          description: translate('Responda!', 'Reply!'),\n        };\n      case 'clubber':\n        return {\n          title: translate('Look', 'Outfit'),\n          description: translate('Como ir pra balada', 'How to be cool'),\n        };\n      default:\n        return {};\n    }\n  });\n};\n\nexport const showDJPruPruPruStep = (round: GameRound) => {\n  if (round.current <= 1 || !round) return 0; // true\n\n  if (round.current === Math.round(round.total / 2)) return 0;\n\n  if (round.current === round.total) return 0;\n\n  return 1; // false\n};\n\nexport const getMovieTitles = (movies: MovieCard[]) => {\n  return {\n    A: `${movies[0].prefix} ${movies[1].suffix}`,\n    B: `${movies[1].prefix} ${movies[2].suffix}`,\n    C: `${movies[3].prefix} ${movies[4].suffix}`,\n    D: `${movies[4].prefix} ${movies[5].suffix}`,\n  };\n};\n","// Icons\nimport { AlienCommunicationIcon } from 'icons/AlienCommunicationIcon';\nimport { AnonymousIcon } from 'icons/AnonymousIcon';\nimport { BoxingGlovesIcon } from 'icons/BoxingGlovesIcon';\nimport { ChoiceIcon } from 'icons/ChoiceIcon';\nimport { ColorWheelIcon } from 'icons/ColorWheelIcon';\nimport { CrimeSceneIcon } from 'icons/CrimeSceneIcon';\nimport { CriminalIcon } from 'icons/CriminalIcon';\nimport { CrossWordsIcon } from 'icons/CrossWordsIcon';\nimport { DetectiveIcon } from 'icons/DetectiveIcon';\nimport { DirectionsIcon } from 'icons/DirectionsIcon';\nimport { DreamIcon } from 'icons/DreamIcon';\nimport { FairyTaleIcon } from 'icons/FairyTaleIcon';\nimport { GuessIcon } from 'icons/GuessIcon';\nimport { LoveIcon } from 'icons/LoveIcon';\nimport { MagicDoorIcon } from 'icons/MagicDoorIcon';\nimport { MirrorIcon } from 'icons/MirrorIcon';\nimport { MonsterIcon } from 'icons/MonsterIcon';\nimport { MovieTheaterIcon } from 'icons/MovieTheaterIcon';\nimport { PassportIcon } from 'icons/PassportIcon';\nimport { PathIcon } from 'icons/PathIcon';\nimport { PictureIcon } from 'icons/PictureIcon';\nimport { QueueIcon } from 'icons/QueueIcon';\nimport { ReviewIcon } from 'icons/ReviewIcon';\nimport { RevolverIcon } from 'icons/RevolverIcon';\nimport { SheepIcon } from 'icons/SheepIcon';\nimport { SkiingIcon } from 'icons/SkiingIcon';\nimport { TDIcon } from 'icons/TDIcon';\nimport { TrendingIcon } from 'icons/TrendingIcon';\nimport { TrickOrTreatIcon } from 'icons/TrickOrTreatIcon';\nimport { WavelengthDeviceIcon } from 'icons/WavelengthDeviceIcon';\n// Internal\nimport type { Track } from '../utils/types';\n// Type\n\ntype TrackIconProps = {\n  track: Track;\n};\n\nexport const TrackIcon = ({ track }: TrackIconProps) => {\n  const IconComponent =\n    {\n      'arte-ruim': PictureIcon,\n      'comunicacao-alienigena': AlienCommunicationIcon,\n      'contadores-historias': FairyTaleIcon,\n      'crimes-hediondos': CrimeSceneIcon,\n      'cruza-palavras': CrossWordsIcon,\n      'detetives-imaginativos': DetectiveIcon,\n      esquiadores: SkiingIcon,\n      'espiao-entre-nos': PassportIcon,\n      'fileira-de-fatos': QueueIcon,\n      'galeria-de-sonhos': DreamIcon,\n      'labirinto-secreto': PathIcon,\n      'megamix-best-of-three': ChoiceIcon,\n      'megamix-this-that': DirectionsIcon,\n      'megamix-who-said-this': AnonymousIcon,\n      'mente-coletiva': SheepIcon,\n      'namoro-ou-amizade': LoveIcon,\n      'na-rua-do-medo': TrickOrTreatIcon,\n      'onda-telepatica': WavelengthDeviceIcon,\n      'palheta-de-cores': ColorWheelIcon,\n      'polemica-da-vez': TrendingIcon,\n      'porta-dos-desesperados': MagicDoorIcon,\n      'quem-nao-mata': RevolverIcon,\n      'quem-sou-eu': MirrorIcon,\n      'retrato-falado': MonsterIcon,\n      'super-campeonato': BoxingGlovesIcon,\n      'testemunha-ocular': CriminalIcon,\n      'ta-na-cara': ReviewIcon,\n      'ue-so-isso': GuessIcon,\n      'vamos-ao-cinema': MovieTheaterIcon,\n    }?.[track.game] ?? TDIcon;\n\n  return <IconComponent />;\n};\n","// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Internal\nimport type { Track } from '../utils/types';\nimport { INSTRUCTIONS } from '../utils/constants';\n// Type\n\ntype TrackInstructionsProps = {\n  track: Track;\n};\n\nexport const TrackInstructions = ({ track }: TrackInstructionsProps) => {\n  const { dualTranslate } = useLanguage();\n\n  const instruction: DualLanguageValue = INSTRUCTIONS?.[track.game] ?? {\n    pt: 'Se vire nos 30!',\n    en: 'Do something!',\n  };\n\n  return <>{dualTranslate(instruction)}</>;\n};\n","// Components\nimport { DualTranslate } from 'components/language';\n// Internal\nimport type { Track } from '../utils/types';\nimport { TITLES } from '../utils/constants';\n// Type\n\ntype TrackTitleProps = {\n  track: Track;\n};\n\nexport const TrackTitle = ({ track }: TrackTitleProps) => {\n  const instruction: DualLanguageValue = TITLES?.[track.game] ?? {\n    pt: 'Nome do Jogo',\n    en: 'Game Title',\n  };\n\n  return <DualTranslate>{instruction}</DualTranslate>;\n};\n","// Types\nimport type { GameRound } from 'types/game';\n// Components\nimport { Translate } from 'components/language';\nimport { PointsHighlight } from 'components/metrics/PointsHighlight';\nimport { Instruction } from 'components/text';\n\nexport function DJInstructions({ round }: { round: GameRound }) {\n  if (round.current <= 1) {\n    return (\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Fala galera! Eu sou o DJ PruPruPru!\n              <br />O objetivo desse jogo é <strong>entrar</strong> e <strong>permanecer</strong> na área VIP!\n              <br />\n              Você consegue isso se você sempre responder com a maioria! Não importa se está certo ou errado.\n              <br />\n              Ao responder com a maioria, você ganha <PointsHighlight type=\"positive\">1</PointsHighlight>{' '}\n              ponto por entrar na área VIP ou <PointsHighlight type=\"positive\">2</PointsHighlight> points se\n              você estiver lá.\n              <br /> Vamos aos hits!\n            </>\n          }\n          en={\n            <>\n              Yo my party people! I'm DJ PruPruPru!\n              <br />\n              The goal of the game is to <strong>join</strong> and <strong>stay</strong> in the VIP area!\n              <br />\n              You achieve this by always answering the tracks with the majority. It doesn't matter if it's\n              wrong or right.\n              <br />\n              When answering with the majority, you gain <PointsHighlight type=\"positive\">1</PointsHighlight>{' '}\n              point for joining the VIP area or <PointsHighlight type=\"positive\">2</PointsHighlight> points if\n              you're already there.\n              <br />\n              Let's play those hits!\n            </>\n          }\n        />\n      </Instruction>\n    );\n  }\n\n  if (round.current === Math.round(round.total / 2)) {\n    return (\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              DJ PruPruPru está de volta!\n              <br />\n              Estamos no meio da noite! Você está conseguindo ficar na área VIP?\n            </>\n          }\n          en={\n            <>\n              DJ PruPruPru back here!\n              <br />\n              We're halfway. Are you able to stay in the VIP area?\n            </>\n          }\n        />\n      </Instruction>\n    );\n  }\n\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Última rodada! Ganha quem estiver na área VIP com mais pontos!\n            <br />\n            Será que será você?\n          </>\n        }\n        en={\n          <>\n            It's the last round! The player with the most points in the VIP area will win!\n            <br />\n            Will that be you?\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n","import { useMemo } from 'react';\n// Ant Design Resources\nimport { Tooltip } from 'antd';\n// Types\nimport type { GamePlayers } from 'types/player';\n// Utils\nimport { sortPlayers } from 'utils/helpers';\n// Icons\nimport { VIPLineIcon } from 'icons/VIPLineIcon';\n// Internal\nimport { ClubberAvatar } from '../../../components/avatars/ClubberAvatar';\n\ntype MinigameTitleProps = {\n  players: GamePlayers;\n  currentRound: number;\n};\n\nexport function ClubLine({ players, currentRound }: MinigameTitleProps) {\n  const { winners, losers } = useMemo(() => {\n    const playersList = sortPlayers(players);\n\n    return {\n      winners: playersList.filter((player) => player.team[currentRound - 1] === 'W'),\n      losers: playersList.filter((player) => player.team[currentRound - 1] === 'L'),\n    };\n  }, [players, currentRound]);\n\n  return (\n    <div className=\"club-line\">\n      <div className=\"club-line__background\"></div>\n      <div className=\"club-line__clubbers\">\n        <div className=\"club-line__area\">\n          {winners.map((player) => (\n            <div className=\"club-line__player\" key={`${player.id}-${player.clubberId}`}>\n              <Tooltip title={player.name}>\n                <ClubberAvatar\n                  avatarId={player.avatarId}\n                  id={player.clubberId}\n                  className=\"club-line__clubber\"\n                  animate\n                />\n              </Tooltip>\n            </div>\n          ))}\n        </div>\n        <VIPLineIcon className=\"club-line__vip-icon\" />\n        <div className=\"club-line__area\">\n          {losers.map((player) => (\n            <div\n              className=\"club-line__player club-line__player--trash\"\n              key={`${player.id}-${player.clubberId}`}\n            >\n              <Tooltip title={player.name}>\n                <ClubberAvatar\n                  key={`${player.id}-${player.clubberId}`}\n                  avatarId={player.avatarId}\n                  id={player.clubberId}\n                  className=\"club-line__clubber\"\n                />\n              </Tooltip>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","// Icons\nimport { UnderConstructionIcon } from 'icons/UnderConstructionIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { Title } from 'components/text';\n\nexport function FallbackComponent(_: unknown) {\n  return (\n    <SpaceContainer vertical>\n      <IconAvatar size=\"large\" icon={<UnderConstructionIcon />} />\n      <Title size=\"xx-small\">\n        <Translate pt=\"Algo errado não está certo\" en=\"Something wrong is not right\" />\n      </Title>\n    </SpaceContainer>\n  );\n}\n","import { mockClue } from 'mock/clues';\nimport { mockDrawing } from 'mock/drawing';\n// Utils\nimport { getRandomItem } from 'utils/helpers';\n// Internal\nimport type { SeedEntry } from './types';\n\nexport function mockSeeding(seeds: SeedEntry[]) {\n  const data: PlainObject = {};\n  seeds.forEach((seed) => {\n    switch (seed.type) {\n      case 'arte-ruim':\n        data[seed.card.id] = JSON.stringify(mockDrawing());\n        break;\n      case 'contadores-historias':\n        data.prompt = getRandomItem(seed.prompts);\n        break;\n      case 'labirinto-secreto':\n        data[seed.tree.id] = getRandomItem(getIds(seed.cards));\n        break;\n      case 'mente-coletiva':\n        data.answers = [mockClue(), mockClue('low')];\n        break;\n      case 'onda-telepatica':\n        data.wave = mockClue();\n        break;\n      case 'polemica-da-vez':\n        data.likeTweet = getRandomItem([true, false]);\n        break;\n      case 'retrato-falado':\n        data[seed.card.id] = JSON.stringify(mockDrawing());\n        break;\n      case 'ue-so-isso':\n        data.singleClue = mockClue('high');\n        break;\n      case 'party':\n        data.partyAnswers = seed.cards.reduce((acc: StringDictionary, card) => {\n          acc[card.id] = mockClue('high');\n          return acc;\n        }, {});\n        break;\n      case 'clubber':\n        data.clubberId = seed.outfits[0];\n        break;\n      default:\n        return {};\n    }\n  });\n\n  return data;\n}\n\nexport function mockSelection(options: unknown[], propertyName?: string) {\n  const random = getRandomItem(options) as PlainObject;\n  return propertyName ? random[propertyName] : random;\n}\n\nexport function mockText() {\n  return getRandomItem(['bola', 'bolas', 'prata', 'prato', 'pirulito', 'domingo']);\n}\n\nexport function getIds(list: PlainObject[]) {\n  return list.map((entry) => entry.id);\n}\n","// Components\nimport { DualTranslate } from 'components/language';\nimport { Title } from 'components/text';\n\ntype MinigameTitleProps = {\n  title: DualLanguageValue;\n};\n\nexport function MinigameTitle({ title }: MinigameTitleProps) {\n  return (\n    <Title size=\"small\" level={2} className=\"minigame-title__number\">\n      <DualTranslate>{title}</DualTranslate>\n    </Title>\n  );\n}\n","// Ant Design Resources\nimport { Button } from 'antd';\n// Types\nimport type { TextCard } from 'types/tdr';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { LETTERS } from 'utils/constants';\nimport { getColorFromIndex } from 'utils/helpers';\n// Components\nimport { TransparentButton } from 'components/buttons';\nimport { CanvasSVG } from 'components/canvas';\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { RuleInstruction } from 'components/text';\n// Internal\nimport type { TrackProps } from '../../utils/types';\nimport { mockSelection } from '../../utils/mock';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackArteRuim = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const cardWidth = useCardWidth(5, {\n    minWidth: 250,\n    maxWidth: 270,\n  });\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    if (track.variant === 'cards') {\n      onSelect(mockSelection(track.data.cards, 'id'));\n    }\n\n    if (track.variant === 'drawings') {\n      onSelect(mockSelection(track.data.options, 'playerId'));\n    }\n  });\n\n  if (track.variant === 'cards') {\n    return (\n      <>\n        <MinigameTitle title={{ pt: 'Arte Ruim Pra Dedéu', en: 'Questionable Art' }} />\n        <RuleInstruction type=\"action\">\n          <Translate\n            pt={\n              <>\n                Dentre as cartas abaixo, qual melhor descreve essa linda ilustração?\n                <br />\n                Foi você quem desenhou? Lembre-se que a resposta correta não é importante, e sim o que a\n                maioria escolher.\n              </>\n            }\n            en={\n              <>\n                Among the cards below, which one best describes the beautiful illustration?\n                <br />\n                <em>\n                  Is that your drawing? Remember that the correct answer is not important, but what the\n                  majority will choose.\n                </em>\n              </>\n            }\n          />\n        </RuleInstruction>\n\n        <SpaceContainer>\n          <CanvasSVG drawing={track.data.option.drawing} width={cardWidth} className=\"a-drawing\" />\n        </SpaceContainer>\n\n        <SpaceContainer>\n          {track.data.cards.map((card: TextCard, index: number) => (\n            <TransparentButton\n              key={card.id}\n              disabled={isLoading || user.ready}\n              onClick={() =>\n                onSubmitAnswer({\n                  data: { value: card.id },\n                })\n              }\n            >\n              <Card header={LETTERS[index]} color={getColorFromIndex(index)}>\n                {card.text}\n              </Card>\n            </TransparentButton>\n          ))}\n        </SpaceContainer>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Arte Ruim Pra Dedéu', en: 'Questionable Art' }} />\n      <RuleInstruction type=\"action\">\n        <Translate\n          pt={\n            <>\n              Dentre as ilustrações abaixo, qual melhor descreve a carta?\n              <br />\n              Foi você quem desenhou? Lembre-se que a resposta correta não é importante, e sim o que a maioria\n              escolher.\n            </>\n          }\n          en={\n            <>\n              Among the illustrations below, which one best fits the card?\n              <br />\n              <em>\n                Is that your drawing? Remember that the correct answer is not important, but what the majority\n                will choose.\n              </em>\n            </>\n          }\n        />\n      </RuleInstruction>\n\n      <SpaceContainer>\n        <Card header=\"A\" color={getColorFromIndex(0)}>\n          {track.data.cards[1].text}\n        </Card>\n      </SpaceContainer>\n\n      <div className=\"a-drawings\">\n        {track.data.options.map((entry: PlainObject) => (\n          <div key={String(entry)} className=\"a-drawings__entry\">\n            <CanvasSVG drawing={entry.drawing} width={cardWidth} className=\"a-drawing\" />\n\n            <SpaceContainer>\n              <Button\n                shape=\"round\"\n                type=\"primary\"\n                disabled={user.ready}\n                loading={isLoading}\n                onClick={() => onSelect(entry.playerId)}\n              >\n                <Translate pt=\"Selecionar\" en=\"Select\" />\n              </Button>\n            </SpaceContainer>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n","import { Fragment } from 'react';\n// Ant Design Resources\nimport { RightSquareOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Icons\nimport { MapIcon } from 'icons/MapIcon';\nimport { TreeOneIcon } from 'icons/TreeOneIcon';\nimport { TreeThreeIcon } from 'icons/TreeThreeIcon';\nimport { TreeTwoIcon } from 'icons/TreeTwoIcon';\n// Components\nimport { IconAvatar } from 'components/avatars/IconAvatar';\nimport { TransparentButton } from 'components/buttons';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { RuleInstruction, TextHighlight } from 'components/text';\n// Internal\nimport type { TrackProps } from '../../utils/types';\nimport { mockSelection } from '../../utils/mock';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackLabirintoSecreto = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: number) => {\n    onSubmitAnswer({\n      data: { value: String(value) },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection([0, 1, 2]));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Labirinto Secreto', en: 'Secret Labyrinth' }} />\n      <RuleInstruction type=\"action\">\n        <Translate\n          pt={\n            <>\n              Para atravessar a floresta, você precisa passar por essas 3 árvores.\n              <br />\n              Com mapa feito de adjetivos (que útil), qual rota você selecionaria ir da{' '}\n              <TextHighlight>{track.data.trees[0].text}</TextHighlight> ao{' '}\n              <TextHighlight>{track.data.trees[2].text}</TextHighlight>?\n            </>\n          }\n          en={\n            <>\n              To cross the woods, you need to pass by 3 trees.\n              <br />\n              With a map made of adjectives (wow, so useful), what route would to select to go from{' '}\n              <TextHighlight>{track.data.trees[0].text}</TextHighlight> to{' '}\n              <TextHighlight>{track.data.trees[2].text}</TextHighlight>?\n            </>\n          }\n        />\n      </RuleInstruction>\n\n      <div className=\"cm-trees\">\n        <div className=\"cm-trees__tree\">\n          <IconAvatar icon={<TreeOneIcon />} size={84} />\n          <div className=\"cm-trees__text\">{track.data.trees[0].text}</div>\n        </div>\n\n        <div className=\"cm-trees__tree\">\n          <IconAvatar icon={<TreeTwoIcon />} size={84} />\n          <div className=\"cm-trees__text\">{track.data.trees[1].text}</div>\n        </div>\n\n        <div className=\"cm-trees__tree\">\n          <IconAvatar icon={<TreeThreeIcon />} size={84} />\n          <div className=\"cm-trees__text\">{track.data.trees[2].text}</div>\n        </div>\n      </div>\n\n      <SpaceContainer vertical>\n        <TransparentButton\n          className=\"cm-clues__clue\"\n          disabled={user.ready || isLoading}\n          onClick={() => onSelect(0)}\n        >\n          {'A'}\n          <IconAvatar icon={<MapIcon />} size={48} />\n          {Object.values<PlainObject>(track.data.options[0]).map((option, index, arr) => {\n            return (\n              <Fragment key={`${option.playerId}-${index}`}>\n                <span className=\"cm-clues__clue-text\">{option.text}</span>\n                {arr.length - 1 > index && <RightSquareOutlined />}\n              </Fragment>\n            );\n          })}\n        </TransparentButton>\n        <TransparentButton\n          className=\"cm-clues__clue\"\n          disabled={user.ready || isLoading}\n          onClick={() => onSelect(1)}\n        >\n          {'B'}\n          <IconAvatar icon={<MapIcon />} size={48} />\n          {Object.values<PlainObject>(track.data.options[1]).map((option, index, arr) => {\n            return (\n              <Fragment key={`${option.playerId}-${index}`}>\n                <span className=\"cm-clues__clue-text\">{option.text}</span>\n                {arr.length - 1 > index && <RightSquareOutlined />}\n              </Fragment>\n            );\n          })}\n        </TransparentButton>\n        <TransparentButton\n          className=\"cm-clues__clue\"\n          disabled={user.ready || isLoading}\n          onClick={() => onSelect(2)}\n        >\n          {'C'}\n          <IconAvatar icon={<MapIcon />} size={48} />\n          {Object.values<PlainObject>(track.data.options[2]).map((option, index, arr) => {\n            return (\n              <Fragment key={`${option.playerId}-${index}`}>\n                <span className=\"cm-clues__clue-text\">{option.text}</span>\n                {arr.length - 1 > index && <RightSquareOutlined />}\n              </Fragment>\n            );\n          })}\n        </TransparentButton>\n      </SpaceContainer>\n    </>\n  );\n};\n","// Ant Design Resources\nimport { Button, Image } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Components\nimport { BookPages } from 'components/game/BookPages';\nimport { ImageBlurButtonContainer, ImageCard } from 'components/image-cards';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { RuleInstruction } from 'components/text';\n// Internal\nimport type { TrackProps } from '../../utils/types';\nimport { mockSelection } from '../../utils/mock';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackContadoresHistorias = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const { isLoading } = useLoading();\n  const cardWidth = useCardWidth(8, { gap: 8, minWidth: 150, maxWidth: 350, margin: 8 });\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(track.data.cards));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Contadores de Histórias', en: 'Storytellers' }} />\n      <SpaceContainer className=\"margin\" vertical contained>\n        <RuleInstruction type=\"action\">\n          <Translate\n            pt=\"A dica abaixo se relaciona à uma das images, qual das cartas é correta?\"\n            en=\"The hint below relates to one of the images, which card is correct?\"\n          />\n        </RuleInstruction>\n\n        <BookPages\n          className=\"c-book-pages\"\n          leftPage={\n            <SpaceContainer vertical>\n              <ImageCard id=\"back-question\" cardWidth={100} />\n            </SpaceContainer>\n          }\n          rightPage={<div className=\"c-book-content\">{track.data?.prompt ?? track.data?.options ?? '?'}</div>}\n        />\n\n        <Image.PreviewGroup>\n          <SpaceContainer>\n            {track.data.cards.map((cardId: ImageCardId) => {\n              return (\n                <SpaceContainer key={cardId} vertical>\n                  <ImageBlurButtonContainer cardId={cardId}>\n                    <ImageCard id={cardId} cardWidth={cardWidth} />\n                  </ImageBlurButtonContainer>\n                  <Button\n                    shape=\"round\"\n                    type=\"primary\"\n                    disabled={user.ready}\n                    loading={isLoading}\n                    onClick={() => onSelect(cardId)}\n                  >\n                    <Translate pt=\"Selecionar\" en=\"Select\" />\n                  </Button>\n                </SpaceContainer>\n              );\n            })}\n          </SpaceContainer>\n        </Image.PreviewGroup>\n      </SpaceContainer>\n    </>\n  );\n};\n","// Ant Design Resources\nimport { Button } from 'antd';\n// Types\nimport type { CrimesHediondosCard } from 'types/tdr';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Icons\nimport { KnifeIcon } from 'icons/KnifeIcon';\nimport { LoupeIcon } from 'icons/LoupeIcon';\n// Components\nimport { CrimeItemCard } from 'components/cards/CrimeItemCard';\nimport { SceneTile } from 'components/game/SceneTile';\nimport { Translate } from 'components/language';\nimport { MetricHighlight } from 'components/metrics/MetricHighlight';\nimport { RuleInstruction } from 'components/text';\n// Internal\nimport type { TrackProps } from '../../utils/types';\nimport { mockSelection } from '../../utils/mock';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackCrimesHediondos = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const cardWidth = useCardWidth(12, { minWidth: 100, maxWidth: 130 });\n\n  const { isLoading } = useLoading();\n\n  // DEV Mock\n  useMock(() => {\n    onSubmitAnswer({\n      data: { value: mockSelection(track.data.cards, 'id') },\n    });\n  });\n\n  const icon = track.variant === 'weapon' ? <KnifeIcon /> : <LoupeIcon />;\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Crimes Hediondos', en: 'Horrific Crimes' }} />\n      <RuleInstruction type=\"action\">\n        <Translate\n          pt={\n            <>\n              O médico legista examinou o crime e chegou às conclusões abaixo.\n              <br />\n              Selecione qual{' '}\n              <MetricHighlight icon={icon} iconPlacement=\"before\">\n                {track.variant === 'weapon' ? 'arma' : 'evidencia'}\n              </MetricHighlight>{' '}\n              você acha que foi usada no crime.\n            </>\n          }\n          en={\n            <>\n              The forensic scientist examined the body and came to those conclusions below.\n              <br />\n              Select the one{' '}\n              <MetricHighlight icon={icon} iconPlacement=\"before\">\n                {track.variant}\n              </MetricHighlight>{' '}\n              you think took part in the crime.\n            </>\n          }\n        />\n      </RuleInstruction>\n\n      <ul className=\"h-table\">\n        {Boolean(track.data.scenes.causeOfDeath) && (\n          <SceneTile tile={track.data.scenes.causeOfDeath} index={track.data.crimeIndexes.causeOfDeath} />\n        )}\n        {Boolean(track.data.scenes.reasonForEvidence) && (\n          <SceneTile\n            tile={track.data.scenes.reasonForEvidence}\n            index={track.data.crimeIndexes.reasonForEvidence}\n          />\n        )}\n\n        <SceneTile tile={track.data.scenes.location} index={track.data.crimeIndexes.location} />\n        <SceneTile tile={track.data.scenes.sceneA} index={track.data.crimeIndexes.sceneA} />\n        <SceneTile tile={track.data.scenes.sceneB} index={track.data.crimeIndexes.sceneB} />\n        <SceneTile tile={track.data.scenes.sceneC} index={track.data.crimeIndexes.sceneC} />\n      </ul>\n\n      <ul className=\"h-cards\">\n        {track.data.cards.map((card: CrimesHediondosCard) => {\n          return (\n            <li key={card.id} className=\"margin\">\n              <CrimeItemCard item={card} cardWidth={cardWidth} isSelected={user?.data?.value === card.id} />\n\n              <Button\n                shape=\"round\"\n                type=\"primary\"\n                disabled={user.ready}\n                loading={isLoading}\n                onClick={() =>\n                  onSubmitAnswer({\n                    data: { value: card.id },\n                  })\n                }\n              >\n                <Translate pt=\"Selecionar\" en=\"Select\" />\n              </Button>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n","import clsx from 'clsx';\nimport type { ReactNode } from 'react';\n// Sass\nimport './SpreadsheetGrid.scss';\n\ntype SpreadsheetGridProps = {\n  /**\n   * Number of columns\n   */\n  columns: number;\n  /**\n   * Number of rows\n   */\n  rows: number;\n  /**\n   * Add the blank top left corner cell\n   */\n  topLeftCorner?: boolean;\n  /**\n   * Content of the grid, usually SpreadsheetCell components\n   */\n  children?: ReactNode;\n  /**\n   * Custom class name\n   */\n  className?: string;\n};\n\nexport function SpreadsheetGrid({ columns, rows, topLeftCorner, children, className }: SpreadsheetGridProps) {\n  return (\n    <div\n      className={clsx('spreadsheet-grid', className)}\n      style={{ gridTemplateColumns: `repeat(${columns}, 1fr)`, gridTemplateRows: `repeat(${rows}, auto)` }}\n      role=\"table\"\n    >\n      {topLeftCorner && <SpreadsheetCell header></SpreadsheetCell>}\n      {children}\n    </div>\n  );\n}\n\ntype SpreadsheetCellProps = {\n  /**\n   * The content of the Cell\n   */\n  children?: ReactNode;\n  /**\n   * Style cell as header\n   */\n  header?: boolean;\n  /**\n   * Custom class name\n   */\n  className?: string;\n};\n\nexport function SpreadsheetCell({ children, header, className }: SpreadsheetCellProps) {\n  return (\n    <span className={clsx('spreadsheet-cell', header && 'spreadsheet-cell--header', className)} role=\"cell\">\n      {children}\n    </span>\n  );\n}\n","// Ant Design Resources\nimport { PlusCircleFilled } from '@ant-design/icons';\nimport { Button, type ButtonProps } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { SpreadsheetCell, SpreadsheetGrid } from 'components/general/SpreadsheetGrid';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { RuleInstruction } from 'components/text';\nimport { SpeechBubble } from 'components/text/SpeechBubble';\n// Internal\nimport type { TrackProps } from '../../utils/types';\nimport { mockSelection } from '../../utils/mock';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackCruzaPalavras = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const onSelect = (position: number) => {\n    onSubmitAnswer({\n      data: { value: String(position) },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection([0, 1, 2, 3]));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Cruza Palavras', en: 'Mixed Clues' }} />\n      <RuleInstruction type=\"action\">\n        <Translate\n          pt={\n            <>\n              Bob, o robot, escreveu a dica péssima abaixo usando sua \"inteligência artificial\", e agora?\n              <br />\n              Aonde ela se encaixa na grade para que combine com a linha e a coluna?\n              <br />\n              Selecione na célula apropriada!\n            </>\n          }\n          en={\n            <>\n              Bob the bot wrote this terrible clue below using its AI.\n              <br />\n              Where does it fit in the grid where it would match the column and row?\n              <br />\n              Select the appropriate grid cell!\n            </>\n          }\n        />\n      </RuleInstruction>\n\n      <SpaceContainer>\n        <Avatar id=\"A\" size=\"large\" /> <SpeechBubble shadow>{track.data.clue.text}</SpeechBubble>\n      </SpaceContainer>\n\n      <SpaceContainer>\n        <SpreadsheetGrid columns={3} rows={3} topLeftCorner>\n          <SpreadsheetCell header>{track.data.cards[0].text}</SpreadsheetCell>\n          <SpreadsheetCell header>{track.data.cards[1].text}</SpreadsheetCell>\n          <SpreadsheetCell header>{track.data.cards[2].text}</SpreadsheetCell>\n          <SpreadsheetCell>\n            <CellPlusButton onClick={() => onSelect(0)} disabled={user.ready} loading={isLoading} />\n          </SpreadsheetCell>\n          <SpreadsheetCell>\n            <CellPlusButton onClick={() => onSelect(1)} disabled={user.ready} loading={isLoading} />\n          </SpreadsheetCell>\n          <SpreadsheetCell header>{track.data.cards[3].text}</SpreadsheetCell>\n          <SpreadsheetCell>\n            <CellPlusButton onClick={() => onSelect(2)} disabled={user.ready} loading={isLoading} />\n          </SpreadsheetCell>\n          <SpreadsheetCell>\n            <CellPlusButton onClick={() => onSelect(3)} disabled={user.ready} loading={isLoading} />\n          </SpreadsheetCell>\n        </SpreadsheetGrid>\n      </SpaceContainer>\n    </>\n  );\n};\n\nfunction CellPlusButton({ onClick, loading, ...rest }: ButtonProps) {\n  return (\n    <Button onClick={onClick} shape=\"circle\" loading={loading} {...rest}>\n      {!loading && <PlusCircleFilled />}\n    </Button>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Image } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { AVATARS, BOTS_LIST } from 'utils/avatars';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { ImageBlurButtonContainer, ImageCard } from 'components/image-cards';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { RuleInstruction } from 'components/text';\n// Internal\nimport type { TrackProps } from '../../utils/types';\nimport { mockSelection } from '../../utils/mock';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackDetetivesImaginativos = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const cardWidth = useCardWidth(7, { minWidth: 200, maxWidth: 270 });\n  const { language } = useLanguage();\n  const { isLoading } = useLoading();\n\n  // DEV Mock\n  useMock(() => {\n    onSubmitAnswer({\n      data: { value: mockSelection(track.data.cards) },\n    });\n  });\n\n  if (track.variant === 'impostor') {\n    return (\n      <>\n        <MinigameTitle title={{ pt: 'Detetives Imaginativos', en: 'Detective Agency' }} />\n        <RuleInstruction type=\"action\">\n          <Translate\n            pt={\n              <>\n                Você é o impostor e não sabe a palavra-secreta. Os outros jogadores escolheram as cartas\n                abaixo que supostamente combinam com a palavra-secreta.\n              </>\n            }\n            en={\n              <>\n                You are the impostor and don't know the secret clue. The other players played the cards below\n                and they all supposed to match the secret clue.\n              </>\n            }\n          />\n        </RuleInstruction>\n\n        <Image.PreviewGroup>\n          <ul className=\"d-table\">\n            {track.data.table.map((cardId: ImageCardId, index: number) => {\n              const bot = BOTS_LIST[index];\n              return (\n                <div className=\"d-table__player-entry\" key={`table-focus-${cardId}`}>\n                  <ImageBlurButtonContainer\n                    cardId={cardId}\n                    className={clsx(\n                      'd-table__card',\n                      user?.data?.value === cardId && 'd-table__card--selected',\n                    )}\n                  >\n                    <ImageCard\n                      key={`table-focus-${cardId}`}\n                      id={cardId}\n                      cardWidth={cardWidth * 0.6}\n                      className=\"d-table__image-card\"\n                    />\n                  </ImageBlurButtonContainer>\n\n                  <div className=\"d-table__player-info\">\n                    <Avatar id={bot.avatarId} className=\"d-table__player-avatar\" size=\"default\" />\n                    <span\n                      className=\"d-table__player-bar\"\n                      style={{ backgroundColor: AVATARS[bot.avatarId].color }}\n                    />\n                    <span className=\"d-table__player-name\">\n                      {bot.name}, {AVATARS[bot.avatarId].description[language]}\n                    </span>\n                  </div>\n                </div>\n              );\n            })}\n          </ul>\n        </Image.PreviewGroup>\n\n        <RuleInstruction type=\"action\">\n          <Translate\n            pt={<>Qual das suas cartas você usaria para passar despercebido?</>}\n            en={<>Which card in your hand would play so you can blend in with the others?</>}\n          />\n        </RuleInstruction>\n\n        <Image.PreviewGroup>\n          <SpaceContainer>\n            {track.data.cards.map((cardId: ImageCardId) => {\n              return (\n                <div className=\"d-table__player-entry\" key={`table-focus-${cardId}`}>\n                  <ImageBlurButtonContainer\n                    cardId={cardId}\n                    className={clsx(\n                      'd-table__card',\n                      user?.data?.value === cardId && 'd-table__card--selected',\n                    )}\n                  >\n                    <ImageCard\n                      key={`table-focus-${cardId}`}\n                      id={cardId}\n                      cardWidth={cardWidth * 0.75}\n                      className=\"d-table__image-card\"\n                    />\n                  </ImageBlurButtonContainer>\n\n                  <SpaceContainer>\n                    <Button\n                      shape=\"round\"\n                      type=\"primary\"\n                      disabled={user.ready}\n                      loading={isLoading}\n                      onClick={() =>\n                        onSubmitAnswer({\n                          data: { value: cardId },\n                        })\n                      }\n                    >\n                      <Translate pt=\"Selecionar\" en=\"Select\" />\n                    </Button>\n                  </SpaceContainer>\n                </div>\n              );\n            })}\n          </SpaceContainer>\n        </Image.PreviewGroup>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Detetives Imaginativos', en: 'Detective Agency' }} />\n      <RuleInstruction type=\"action\">\n        <Translate\n          pt={\n            <>\n              Dentre as cartas abaixo, uma delas é do impostor! Você sabe qual é?\n              <br />\n              Selecione a carta que você acha <strong>NÃO</strong> combina com as outras duas.\n            </>\n          }\n          en={\n            <>\n              Among the cards below, one belongs to the impostor! Do you know which one?\n              <br />\n              Select the card that does <strong>NOT</strong> match the others.\n            </>\n          }\n        />\n      </RuleInstruction>\n\n      <Image.PreviewGroup>\n        <ul className=\"d-table\">\n          {track.data.cards.map((cardId: ImageCardId, index: number) => {\n            const bot = BOTS_LIST[index];\n            return (\n              <div className=\"d-table__player-entry\" key={`table-focus-${cardId}`}>\n                <ImageBlurButtonContainer\n                  cardId={cardId}\n                  className={clsx('d-table__card', user?.data?.value === cardId && 'd-table__card--selected')}\n                >\n                  <ImageCard\n                    key={`table-focus-${cardId}`}\n                    id={cardId}\n                    cardWidth={cardWidth}\n                    className=\"d-table__image-card\"\n                  />\n                </ImageBlurButtonContainer>\n\n                <div className=\"d-table__player-info\">\n                  <Avatar id={bot.avatarId} className=\"d-table__player-avatar\" size=\"default\" />\n                  <span\n                    className=\"d-table__player-bar\"\n                    style={{ backgroundColor: AVATARS[bot.avatarId].color }}\n                  />\n                  <span className=\"d-table__player-name\">\n                    {bot.name}, {AVATARS[bot.avatarId].description[language]}\n                  </span>\n                </div>\n                <SpaceContainer>\n                  <Button\n                    shape=\"round\"\n                    type=\"primary\"\n                    disabled={user.ready}\n                    loading={isLoading}\n                    onClick={() =>\n                      onSubmitAnswer({\n                        data: { value: cardId },\n                      })\n                    }\n                  >\n                    <Translate pt=\"Esse é o impostor\" en=\"This is the impostor\" />\n                  </Button>\n                </SpaceContainer>\n              </div>\n            );\n          })}\n        </ul>\n      </Image.PreviewGroup>\n    </>\n  );\n};\n","import clsx from 'clsx';\nimport { useEffect, useState } from 'react';\n// Ant Design Resources\nimport { Space } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Icons\nimport { SkiingIcon } from 'icons/SkiingIcon';\nimport { SnowHillIcon } from 'icons/SnowHillIcon';\n// Components\nimport { IconAvatar } from 'components/avatars/IconAvatar';\nimport { TransparentButton } from 'components/buttons';\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { RuleInstruction } from 'components/text';\n// Internal\nimport type { TrackProps } from '../../utils/types';\nimport { mockSelection } from '../../utils/mock';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackEsquiadores = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection([track.data.dilemma.left, track.data.dilemma.right]));\n  });\n\n  const [mouseX, setMouseX] = useState<number | null>(null);\n  const [direction, setDirection] = useState<'left' | 'right'>('left');\n  // TODO: Use useMouseDirection hook\n  useEffect(() => {\n    const handleMouseMove = (e: MouseEvent) => {\n      setMouseX(e.clientX);\n    };\n\n    window.addEventListener('mousemove', handleMouseMove);\n\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, []);\n\n  useEffect(() => {\n    // Check if the mouse is on the left or right side of the screen\n    if (mouseX !== null) {\n      const screenWidth = window.innerWidth;\n      const threshold = screenWidth / 2;\n\n      if (mouseX <= threshold) {\n        setDirection('left');\n      } else {\n        setDirection('right');\n      }\n    }\n  }, [mouseX]);\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'O Esquiador', en: 'Ski Resorte' }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <RuleInstruction type=\"action\">\n          <Translate\n            pt={\n              <>\n                Você tem os pensamentos mais filosóficos quando você está esquiando ladeira abaixo.\n                <br />\n                Selecione a opção apropriada para a questão séria:\n              </>\n            }\n            en={\n              <>\n                You have the most philosophical shower thoughts while skiing downhill.\n                <br />\n                Select the best option below:\n              </>\n            }\n          />\n        </RuleInstruction>\n\n        <SpaceContainer vertical>\n          <div className=\"dd-animated-skiier\">\n            <IconAvatar\n              icon={<SkiingIcon />}\n              size={84}\n              className={clsx('dd-animated-skiier__skiier', `dd-animated-skiier__skiier--${direction}`)}\n            />\n          </div>\n          <Card header={translate('Dica', 'Clue')} color=\"red\">\n            {track.data.dilemma.prompt}\n          </Card>\n\n          <SpaceContainer>\n            <div className=\"dd-buttons\">\n              <TransparentButton\n                onClick={() => onSelect(track.data.dilemma.left)}\n                disabled={user.ready || isLoading}\n                className=\"dd-button\"\n              >\n                <span className=\"dd-button__hill dd-button__hill--left\">\n                  <IconAvatar icon={<SnowHillIcon />} size={64} />\n                </span>\n                <span className=\"dd-button__text\">{track.data.dilemma.left}</span>\n              </TransparentButton>\n              <TransparentButton\n                onClick={() => onSelect(track.data.dilemma.right)}\n                disabled={user.ready || isLoading}\n                className=\"dd-button\"\n              >\n                <span className=\"dd-button__hill\">\n                  <IconAvatar icon={<SnowHillIcon />} size={64} />\n                </span>\n                <span className=\"dd-button__text\">{track.data.dilemma.right}</span>\n              </TransparentButton>\n            </div>\n          </SpaceContainer>\n        </SpaceContainer>\n      </Space>\n    </>\n  );\n};\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, Input } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Components\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { RuleInstruction, TextHighlight } from 'components/text';\n// Internal\nimport type { TrackProps } from '../../utils/types';\nimport { mockText } from '../../utils/mock';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackEspiaoEntreNos = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n  const [answer, setAnswer] = useState('');\n\n  const onSubmit = () => {\n    if (answer.length > 1) {\n      onSubmitAnswer({\n        data: { value: answer },\n      });\n    }\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSubmitAnswer({\n      data: { value: mockText() },\n    });\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: '', en: '' }} />\n      <RuleInstruction type=\"action\">\n        <Translate\n          pt={\n            <>\n              Você está em um(a) <TextHighlight>{track.data.location.name}</TextHighlight>. Você é um(a){' '}\n              <TextHighlight>{track.data.location.roles[track.data.roleIndex]}</TextHighlight>.<br />\n              Agora, responda à pergunta abaixo com uma resposta simples.\n            </>\n          }\n          en={\n            <>\n              You are at/in/on a <TextHighlight>{track.data.location.name}</TextHighlight>. You are a{' '}\n              <TextHighlight>{track.data.location.roles[track.data.roleIndex]}</TextHighlight>.<br />\n              Now, simply answer the following question.\n            </>\n          }\n        />\n      </RuleInstruction>\n\n      <SpaceContainer>\n        <Card>{track.data.question}</Card>\n      </SpaceContainer>\n\n      <RuleInstruction type=\"action\">\n        <Translate\n          pt={<>Responda à pergunta abaixo com uma resposta simples.</>}\n          en={<>Answer the prompt below with a simple answer.</>}\n        />\n      </RuleInstruction>\n\n      <SpaceContainer vertical>\n        <Input\n          onChange={(e) => setAnswer(e.target.value)}\n          placeholder={translate('Escreva aqui', 'Answer here')}\n          onPressEnter={onSubmit}\n          disabled={isLoading || user.ready}\n        />\n        <Button\n          shape=\"round\"\n          type=\"primary\"\n          disabled={user.ready || answer.length < 2}\n          loading={isLoading}\n          onClick={onSubmit}\n        >\n          <Translate pt=\"Selecionar\" en=\"Select\" />\n        </Button>\n      </SpaceContainer>\n    </>\n  );\n};\n","// Ant Design Resources\nimport { Avatar, Space } from 'antd';\n// Types\nimport type { TextCard } from 'types/tdr';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { LETTERS } from 'utils/constants';\n// Components\nimport { TransparentButton } from 'components/buttons';\nimport { EmojiCard } from 'components/cards/EmojiCard';\nimport { DualTranslate, Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { RuleInstruction } from 'components/text';\n// Internal\nimport type { TrackProps } from '../../utils/types';\nimport { mockSelection } from '../../utils/mock';\nimport { MinigameTitle } from '../MinigameTitle';\n\nconst reference = [\n  {\n    id: '3',\n    text: {\n      pt: 'Vish',\n      en: 'Oh...',\n    },\n  },\n  {\n    id: '15',\n    text: {\n      pt: 'Quê?',\n      en: 'What?',\n    },\n  },\n  {\n    id: '7',\n    text: {\n      pt: 'Nó!',\n      en: 'Wow...',\n    },\n  },\n];\n\nexport const TrackFileiraDeFatos = ({ track, onSubmitAnswer }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const width = useCardWidth(8, {\n    gap: 16,\n    minWidth: 100,\n    maxWidth: 200,\n    margin: 32,\n  });\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(track.data.scenarios, 'text'));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Fileira de Fatos', en: 'Facts Lineup' }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <RuleInstruction type=\"action\">\n          <Translate pt=\"Qual das situações é a pior?\" en=\"Which of the following situations is the worst?\" />\n        </RuleInstruction>\n\n        <SpaceContainer>\n          {track.data.scenarios.map((entry: TextCard, index: number) => (\n            <TransparentButton\n              key={`position-${entry.text}`}\n              style={{ width: `${width}px` }}\n              disabled={isLoading}\n              onClick={() => onSelect(entry.text)}\n            >\n              <div className=\"scenario\">\n                <Avatar>{LETTERS[index]}</Avatar>\n                <div className=\"scenario__tagline\">\n                  <DualTranslate>{reference[index].text}</DualTranslate>\n                </div>\n                <EmojiCard id={reference[index].id} className=\"scenario__emoji\" />\n                {entry && <div className=\"scenario__card\">{entry.text}</div>}\n              </div>\n            </TransparentButton>\n          ))}\n        </SpaceContainer>\n      </Space>\n    </>\n  );\n};\n\n// type ChevronProps = {\n//   player: GamePlayer;\n//   value: number;\n//   reveal?: boolean;\n// };\n\n// export function Chevron({ player, value, reveal }: ChevronProps) {\n//   const color = getAvatarColorById(player.avatarId);\n//   return (\n//     <div className=\"ff-chevron\">\n//       <ChevronImage color={color}>\n//         <span className=\"ff-chevron__value\">{reveal ? value : '?'}</span>\n//       </ChevronImage>\n//       <div className=\"ff-chevron__name\">{player.name}</div>\n//     </div>\n//   );\n// }\n\n// type ChevronImageProps = {\n//   children: ReactNode;\n//   color: string;\n// };\n\n// function ChevronImage({ children, color }: ChevronImageProps) {\n//   return (\n//     <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n//       <path\n//         fill={color}\n//         d=\"M115.8 461.5L244 501.56a8.52 8.52 0 009.8-3.65L400.91 260.5a8.58 8.58 0 000-9L253.82 14.09a8.54 8.54 0 00-9.8-3.66L115.8 50.5a8.54 8.54 0 00-4.89 12.35l106.7 189a8.55 8.55 0 010 8.4l-106.7 189a8.54 8.54 0 004.89 12.35\"\n//       ></path>\n//       <path\n//         fill=\"#000000\"\n//         opacity=\"0.5\"\n//         d=\"M142.94 101.4l133.68-41.56a8.53 8.53 0 015.69.22l-28.49-46a8.51 8.51 0 00-9.8-3.65L115.8 50.5a8.54 8.54 0 00-4.89 12.35L137 109a8.52 8.52 0 016-7.6\"\n//       ></path>\n//       <path\n//         fill=\"#000000\"\n//         d=\"M246.57 512a18.66 18.66 0 01-5.55-.85L112.8 471.08a18.58 18.58 0 01-10.64-26.87l37.25-66a10 10 0 1117.49 9.88l-36.33 64.33 125.33 39.21L391.88 256 245.9 20.37 120.57 59.54l105.79 187.32a18.71 18.71 0 010 18.28l-40.26 71.29a10 10 0 01-17.49-9.88L208.45 256 102.16 67.79a18.58 18.58 0 0110.64-26.87L241 .85a18.58 18.58 0 0121.34 8l147.1 237.36a18.49 18.49 0 010 19.58L262.36 503.2a18.58 18.58 0 01-15.79 8.8z\"\n//       ></path>\n//       <foreignObject x=\"241.18\" y=\"219.18\" width=\"121.5\" height=\"65.89\">\n//         {children}\n//       </foreignObject>\n//     </svg>\n//   );\n// }\n","// Ant Design Resources\nimport { Button, Image } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Components\nimport { Card } from 'components/cards';\nimport { ImageBlurButtonContainer, ImageCard } from 'components/image-cards';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { CardHighlight } from 'components/metrics/CardHighlight';\nimport { RuleInstruction } from 'components/text';\n// Internal\nimport type { TrackProps } from '../../utils/types';\nimport { mockSelection } from '../../utils/mock';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackGaleriaDeSonhos = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const cardWidth = useCardWidth(8, { gap: 8, minWidth: 150, maxWidth: 350, margin: 8 });\n  const { isLoading } = useLoading();\n  const { translate } = useLanguage();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(track.data.cards));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Galeria dos Sonhos', en: 'Dream Gallery' }} />\n      <RuleInstruction type=\"action\">\n        <Translate\n          pt={\n            <>\n              Com o tema abaixo, qual <CardHighlight>carta-sonho</CardHighlight> é a mais provável dos outros\n              jogadores também visitarem?\n            </>\n          }\n          en={\n            <>\n              With the theme below, which <CardHighlight>Dream Card</CardHighlight> best relates to it?\n            </>\n          }\n        />\n      </RuleInstruction>\n\n      <Card header={translate('Tema', 'Theme')} color=\"orange\">\n        {track.data.theme.text}\n      </Card>\n\n      <Image.PreviewGroup>\n        <SpaceContainer>\n          {track.data.cards.map((cardId: ImageCardId) => {\n            return (\n              <SpaceContainer key={cardId} vertical>\n                <ImageBlurButtonContainer cardId={cardId}>\n                  <ImageCard id={cardId} cardWidth={cardWidth} />\n                </ImageBlurButtonContainer>\n                <Button\n                  shape=\"round\"\n                  type=\"primary\"\n                  disabled={user.ready}\n                  loading={isLoading}\n                  onClick={() => onSelect(cardId)}\n                >\n                  <Translate pt=\"Selecionar\" en=\"Select\" />\n                </Button>\n              </SpaceContainer>\n            );\n          })}\n        </SpaceContainer>\n      </Image.PreviewGroup>\n    </>\n  );\n};\n","// Ant Design Resources\nimport { Button } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Components\nimport { Card } from 'components/cards';\nimport { GroupQuestionCard } from 'components/cards/GroupQuestionCard';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { RuleInstruction } from 'components/text';\n// Internal\nimport type { TrackProps } from '../../utils/types';\nimport { mockSelection } from '../../utils/mock';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackMenteColetiva = ({ track, onSubmitAnswer }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const onSubmit = (answer: string) => {\n    onSubmitAnswer({\n      data: { value: answer },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSubmit(mockSelection(track.data.options));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Mente Coletiva', en: 'Herd Mind' }} />\n      <SpaceContainer vertical contained className=\"margin\">\n        <RuleInstruction type=\"action\">\n          <Translate\n            pt=\"Qual das respostas provavelmente viria na sua cabeça primeiro ao ver a pergunta?\"\n            en=\"Which of the answers would probably come to your mind first when you see the question?\"\n          />\n        </RuleInstruction>\n\n        <SpaceContainer>\n          <Card className=\"m-question-wrapper\" color=\"yellow\">\n            <GroupQuestionCard question={track.data.question} overrideNumber={2} />\n          </Card>\n        </SpaceContainer>\n\n        <SpaceContainer wrap>\n          {track.data.options.map((option: string) => (\n            <Button key={option} onClick={() => onSubmit(option)} size=\"large\" disabled={isLoading}>\n              {option}\n            </Button>\n          ))}\n        </SpaceContainer>\n      </SpaceContainer>\n    </>\n  );\n};\n","// Types\nimport type { DatingCandidateCard, DatingCandidateImageCard } from 'types/tdr';\n// Components\nimport { ImageCard } from 'components/image-cards';\nimport { DualTranslate, Translate } from 'components/language';\n\ntype CandidateProps = {\n  head: DatingCandidateImageCard;\n  body: DatingCandidateImageCard;\n  interest: DatingCandidateCard;\n  need: DatingCandidateCard;\n  funFact: DatingCandidateCard;\n};\n\nexport const Candidate = ({ head, body, interest, need, funFact }: CandidateProps) => {\n  return (\n    <div className=\"noa-candidate\">\n      <div className=\"noa-candidate__image\">\n        <div className=\"noa-candidate__text\">\n          <DualTranslate>{head.name}</DualTranslate>\n        </div>\n        <ImageCard classic cardWidth={100} id={head.id} preview={false} />\n        <ImageCard classic cardWidth={100} id={body.id} preview={false} />\n        <div className=\"noa-candidate__text\">\n          <DualTranslate>{body.name}</DualTranslate>\n        </div>\n      </div>\n      <div className=\"noa-candidate__info\">\n        <div className=\"noa-candidate__info-entry\">\n          <div className=\"noa-candidate__info-label\">\n            <Translate pt=\"Curto/Quero\" en=\"I enjoy/wish to\" />\n          </div>\n          {interest.text}\n        </div>\n        <div className=\"noa-candidate__info-entry\">\n          <div className=\"noa-candidate__info-label\">\n            <Translate pt=\"Quero alguém que\" en=\"I want someone who\" />\n          </div>\n          {need.text}\n        </div>\n        <div className=\"noa-candidate__info-entry\">\n          <div className=\"noa-candidate__info-label\">\n            <Translate pt=\"Uma coisa sobre mim\" en=\"Something about me\" />\n          </div>\n          {funFact.text}\n        </div>\n      </div>\n    </div>\n  );\n};\n","// Ant Design Resources\nimport { Button } from 'antd';\n// Types\nimport type { DatingCandidateImageCard } from 'types/tdr';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Components\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { RuleInstruction } from 'components/text';\n// Internal\nimport type { TrackProps } from '../../utils/types';\nimport { mockSelection } from '../../utils/mock';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { Candidate } from '../Candidate';\n\nexport const TrackNamoroOuAmizade = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(track.data.heads, 'id'));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Namoro ou Amizade?', en: 'Love or Friendship?' }} />\n      <RuleInstruction type=\"action\">\n        <Translate\n          pt={\n            <>\n              Dos <strong>3 partidos</strong> abaixo, qual é o melhor?\n            </>\n          }\n          en={\n            <>\n              From <strong>3 candidates</strong> below, which one is the best one?\n            </>\n          }\n        />\n      </RuleInstruction>\n\n      <div className=\"noa-candidates\">\n        {track.data.heads.map((head: DatingCandidateImageCard, index: number) => {\n          return (\n            <SpaceContainer vertical key={head.id}>\n              <Candidate\n                head={head}\n                body={track.data.bodies[index]}\n                interest={track.data.interests[index]}\n                need={track.data.needs[index]}\n                funFact={track.data.funFacts[index]}\n              />\n              <Button\n                onClick={() => onSelect(head.id)}\n                disabled={user.ready || isLoading}\n                className=\"noa-button\"\n                key={head.id}\n                type=\"primary\"\n                shape=\"round\"\n              >\n                <Translate pt=\"Esse\" en=\"This one\" />\n              </Button>\n            </SpaceContainer>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n","import { HouseCard } from 'games/na-rua-do-medo/components/HouseCard';\n// Ant Design Resources\nimport { Avatar, Button, Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Icons\nimport { StreetIcon } from 'icons/StreetIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { TransparentButton } from 'components/buttons';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { RuleInstruction } from 'components/text';\n// Internal\nimport type { StreetCard, TrackProps } from '../../utils/types';\nimport { mockSelection } from '../../utils/mock';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackNaRuaDoMedo = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(\n      track.variant === 'kids'\n        ? mockSelection(['0', '1'])\n        : mockSelection(track.data.options.map((h: StreetCard) => h.id)),\n    );\n  });\n\n  if (track.variant === 'kids') {\n    return (\n      <>\n        <MinigameTitle title={{ pt: 'Na Rua do Medo', en: 'Fear Street' }} />\n        <RuleInstruction type=\"action\">\n          <Translate\n            pt={\n              <>\n                Estamos indo de porta em porta buscar doces...\n                <br />\n                Mas qual rua devemos ir? A rua com mais doces? A rua com menos medo?\n              </>\n            }\n            en={\n              <>\n                We're trick-or-treating...\n                <br />\n                Which street should we hit first? The one with more candy? The one with less horror?\n              </>\n            }\n          />\n        </RuleInstruction>\n\n        <SpaceContainer vertical>\n          <TransparentButton\n            className=\"n-street\"\n            disabled={user.ready || isLoading}\n            onClick={() => onSelect('0')}\n          >\n            <Space direction=\"vertical\" align=\"center\" className=\"margin\">\n              <Avatar style={{ backgroundColor: 'brown' }}>A</Avatar>\n              <IconAvatar icon={<StreetIcon />} size=\"large\" />\n            </Space>\n            <div className=\"n-street__houses\">\n              {track.data.options['0'].map((house: StreetCard) => (\n                <HouseCard key={`A-${house.id}`} card={house} candyLeftover={0} preview={false} />\n              ))}\n            </div>\n          </TransparentButton>\n          <TransparentButton\n            className=\"n-street\"\n            disabled={user.ready || isLoading}\n            onClick={() => onSelect('1')}\n          >\n            <Space direction=\"vertical\" align=\"center\" className=\"margin\">\n              <Avatar style={{ backgroundColor: 'dodgerblue' }}>B</Avatar>\n              <IconAvatar icon={<StreetIcon />} size=\"large\" />\n            </Space>\n            <div className=\"n-street__houses\">\n              {track.data.options['1'].map((house: StreetCard) => (\n                <HouseCard key={`B-${house.id}`} card={house} candyLeftover={0} preview={false} />\n              ))}\n            </div>\n          </TransparentButton>\n        </SpaceContainer>\n      </>\n    );\n  }\n\n  // TODO: This variant does not exist yet\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Na Rua do Medo', en: 'Fear Street' }} />\n      <RuleInstruction type=\"action\">\n        <Translate\n          pt={\n            <>\n              Você estava tranquilo em casa e <strong>6 crianças</strong> apareceram na sua porta. Qual das\n              opções você escolheria para dar pra eles? Assustar ou guloseimas?\n            </>\n          }\n          en={\n            <>\n              You are hanging out at home and <strong>6 kids</strong> showed up at our door. Which of the\n              options do you choose to give to them? Scare 'em or give treats?\n            </>\n          }\n        />\n      </RuleInstruction>\n\n      <SpaceContainer>\n        {track.data.options.map((house: StreetCard) => (\n          <SpaceContainer vertical key={house.id} className=\"n-street-house\">\n            <HouseCard card={house} candyLeftover={0} preview={false} />\n            <Button\n              shape=\"round\"\n              type=\"primary\"\n              disabled={user.ready || isLoading}\n              onClick={() => onSelect(house.id)}\n              loading={isLoading}\n            >\n              <Translate pt=\"Selecionar\" en=\"Select\" />\n            </Button>\n          </SpaceContainer>\n        ))}\n      </SpaceContainer>\n    </>\n  );\n};\n","import clsx from 'clsx';\nimport { getColorModifier } from 'games/onda-telepatica/utils/helpers';\nimport { useState } from 'react';\n// Ant Design Resources\nimport { ArrowLeftOutlined, ArrowRightOutlined, MinusOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Components\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { RuleInstruction, TextHighlight } from 'components/text';\n// Internal\nimport type { TrackProps } from '../../utils/types';\nimport { mockSelection } from '../../utils/mock';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackOndaTelepatica = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const { isLoading } = useLoading();\n  const [position, setPosition] = useState(0);\n\n  const onSelect = (value: string) => {\n    if (!isLoading && !user.ready) {\n      onSubmitAnswer({\n        data: { value },\n      });\n    }\n  };\n\n  // // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(['left', 'center', 'right']));\n  });\n\n  const cardSideClass = 'o-card__side';\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Onda Telepática', en: 'Telepathic Waves' }} />\n      <RuleInstruction type=\"action\">\n        <Translate\n          pt={\n            <>\n              Com a carta de as duas ideias opostas e a dica abaixo, você acha que o Medidor de Ondas\n              Telepáticas apontaria para a <TextHighlight>Esquerda</TextHighlight>,{' '}\n              <TextHighlight>Centro</TextHighlight> ou <TextHighlight>Direita</TextHighlight>?\n            </>\n          }\n          en={\n            <>\n              With the card of the two opposing ideas and the clue below, do you think the Wavelength\n              Measuring device would point to the <TextHighlight>Left</TextHighlight>,{' '}\n              <TextHighlight>Center</TextHighlight>, or <TextHighlight>Right</TextHighlight>?\n            </>\n          }\n        />\n      </RuleInstruction>\n\n      <Card>{track.data.option.value}</Card>\n\n      <div className=\"o-simple-dial\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 669.93 340\" width=\"40vw\">\n          <path\n            fill=\"#181d44\"\n            d=\"M669.88 329.88a440.53 440.53 0 00-27.31-127.68C591.16 83.26 472.81 0 335 0h-.22C198.2.07 80.75 81.88 28.66 199.16A439.25 439.25 0 000 332a7.67 7.67 0 007.68 8h654.63a7.7 7.7 0 007.21-5 7.78 7.78 0 00.41-1.68l-.05-3.44z\"\n          ></path>\n          <path\n            fill=\"#b8b2a6\"\n            d=\"M119.67 121.48a303.5 303.5 0 00-61.93 91.22 401 401 0 00-25.59 120 7 7 0 00.43 2.75A6.86 6.86 0 0039 340h295.86L181.06 73.61a300.5 300.5 0 00-61.39 47.87z\"\n            className=\"o-simple-dial__clickable\"\n            onClick={() => onSelect('left')}\n            onMouseEnter={() => setPosition(-1)}\n          ></path>\n\n          <path\n            fill=\"#c2acc7\"\n            d=\"M630.39 330.85A402.06 402.06 0 00606 215.46 302.44 302.44 0 00487.05 77L335.19 340h288.44a6.88 6.88 0 006.44-4.52 7.56 7.56 0 00.36-1.51c0-1.04-.02-2.08-.04-3.12z\"\n            className=\"o-simple-dial__clickable\"\n            onClick={() => onSelect('right')}\n            onMouseEnter={() => setPosition(1)}\n          ></path>\n          <path\n            fill=\"#96a6a8\"\n            d=\"M331.32 32.7h-.2a295 295 0 00-150.06 40.91L334.86 340h.33L487.05 77a295 295 0 00-155.73-44.3z\"\n            className=\"o-simple-dial__clickable\"\n            onClick={() => onSelect('center')}\n            onMouseEnter={() => setPosition(0)}\n          ></path>\n\n          <path\n            fill=\"#ff0004\"\n            d=\"M336.46 24.24a1.5 1.5 0 0 0-3 0L326.65 340a1.48 1.48 0 0 0 .45 1.1l6.81 6.73a1.51 1.51 0 0 0 2.11 0l6.81-6.73a1.48 1.48 0 0 0 .45-1.1Z\"\n            className={clsx('o-simple-dial__pointer', `o-simple-dial__pointer--p${position}`)}\n          ></path>\n        </svg>\n      </div>\n\n      <div className={clsx('o-card')}>\n        <div\n          className={clsx(\n            cardSideClass,\n            `${cardSideClass}--left`,\n            `${cardSideClass}--L${getColorModifier(track.data.card.left)}`,\n          )}\n        >\n          <span className=\"o-card__arrow\">\n            <ArrowLeftOutlined /> <MinusOutlined /> <MinusOutlined />\n          </span>\n          <span className=\"o-card__text\">{track.data.card.left}</span>\n        </div>\n        <div\n          className={clsx(\n            cardSideClass,\n            `${cardSideClass}--right`,\n            `${cardSideClass}--R${getColorModifier(track.data.card.right)}`,\n          )}\n        >\n          <span className=\"o-card__arrow\">\n            <MinusOutlined /> <MinusOutlined /> <ArrowRightOutlined />\n          </span>\n          <span className=\"o-card__text\">{track.data.card.right}</span>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport function SimpleDial() {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 669.93 340\">\n      <path\n        fill=\"#181d44\"\n        d=\"M669.88 329.88a440.53 440.53 0 00-27.31-127.68C591.16 83.26 472.81 0 335 0h-.22C198.2.07 80.75 81.88 28.66 199.16A439.25 439.25 0 000 332a7.67 7.67 0 007.68 8h654.63a7.7 7.7 0 007.21-5 7.78 7.78 0 00.41-1.68l-.05-3.44z\"\n      ></path>\n      <path\n        fill=\"#b8b2a6\"\n        d=\"M119.67 121.48a303.5 303.5 0 00-61.93 91.22 401 401 0 00-25.59 120 7 7 0 00.43 2.75A6.86 6.86 0 0039 340h295.86L181.06 73.61a300.5 300.5 0 00-61.39 47.87z\"\n      ></path>\n      <path\n        fill=\"#96a6a8\"\n        d=\"M331.32 32.7h-.2a295 295 0 00-150.06 40.91L334.86 340h.33L487.05 77a295 295 0 00-155.73-44.3z\"\n      ></path>\n      <path\n        fill=\"#c2acc7\"\n        d=\"M630.39 330.85A402.06 402.06 0 00606 215.46 302.44 302.44 0 00487.05 77L335.19 340h288.44a6.88 6.88 0 006.44-4.52 7.56 7.56 0 00.36-1.51c0-1.04-.02-2.08-.04-3.12z\"\n      ></path>\n    </svg>\n  );\n}\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Components\nimport { TransparentButton } from 'components/buttons';\nimport { Card } from 'components/cards';\nimport { CharacterCard } from 'components/cards/CharacterCard';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { RuleInstruction } from 'components/text';\n// Internal\nimport type { TrackProps } from '../../utils/types';\nimport { mockSelection } from '../../utils/mock';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackPalhetaDeCores = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n\n  const onSelect = (color: string) => {\n    onSubmitAnswer({\n      data: { value: color },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(track.data.palette));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Palheta de Cores', en: 'Color Palette' }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <RuleInstruction type=\"action\">\n          <Translate\n            pt={<>Selecione a cor que melhor representa o personagem abaixo!</>}\n            en={<>Select the color that best represents the character below!</>}\n          />\n        </RuleInstruction>\n\n        <Card header={translate('Dica', 'Clue')} color=\"red\">\n          <CharacterCard character={track.data.card} className=\"grayscale\" size={200} />\n        </Card>\n\n        <SpaceContainer className=\"k-palette\" wrap>\n          {track.data.palette.map((color: string) => {\n            return (\n              <TransparentButton\n                onClick={() => onSelect(color)}\n                className=\"k-swatch-button\"\n                disabled={user.read || isLoading}\n                key={color}\n              >\n                <SplatterSVG color={color} />\n              </TransparentButton>\n            );\n          })}\n        </SpaceContainer>\n      </Space>\n    </>\n  );\n};\n\ntype SplatterSVGProps = {\n  color: string;\n} & React.SVGProps<SVGSVGElement>;\n\nexport function SplatterSVG({ color, ...rest }: SplatterSVGProps) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 494.11 511.04\" {...rest}>\n      <path\n        fill={color}\n        d=\"M228.54 0h35.93a4.71 4.71 0 001.3.7c27.26 5 48.92 19.17 65.61 41 13.89 18.12 23 38.05 20.86 61.68-.63 6.91-2.09 13.82-2 20.71.12 7.66 6.12 12.85 13.67 11.74a42 42 0 0014.62-5.55c17.16-10 35.31-15.24 55.25-12.26 27.14 4 51.12 26.19 58 53.26 7.35 29-3 59.73-25.55 76.79-14.57 11-31.25 14.29-49 15.54-14.61 1-24.33 10.1-29.58 23.39-5.11 12.92-2.78 24.76 7.31 34.73 4.49 4.44 9 8.85 13.5 13.3 17.49 17.35 28.24 38.14 30.44 62.73 2.4 26.77-5.22 50.77-21.48 72.23-44 58-133.58 54-171.09-8.39-9.08-15.11-15-32.1-22.78-48-3.63-7.38-7.36-15.08-12.73-21.14-12.88-14.54-34-16.34-53.09-6-12.18 6.57-20.6 17.13-29.76 27A73.21 73.21 0 014.9 387.52C2.41 380.4 1.59 372.7 0 365.28v-4c.34-2.26.82-4.52 1-6.8 2.2-27.35 22.3-52.14 48.79-59.39 10.7-2.92 21.71-4.67 32.5-7.28 16.67-4 28.74-17 30.45-32.32 1.95-17.45-6.31-33.26-21.72-41.45-4.4-2.33-8.91-4.44-13.31-6.77-19.58-10.38-28-26.24-24.72-46.46 3.2-19.73 19-33.44 38.86-34.2 10.44-.39 19.85 3.32 29.55 6.12 14.11 4.07 25-.16 22.21-19.54a84 84 0 011-31.1c10.26-42.42 36.89-69.48 79.33-80.57 1.56-.44 3.12-1 4.6-1.52z\"\n      ></path>\n    </svg>\n  );\n}\n","import clsx from 'clsx';\nimport type { ReactNode } from 'react';\n// Ant Design Resources\nimport { CheckCircleFilled, DislikeFilled, LikeFilled } from '@ant-design/icons';\nimport { Button } from 'antd';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\n// Sass\nimport './SocialProfile.scss';\n\ntype SocialProfileProps = {\n  /**\n   * The avatar id to be used.\n   */\n  avatarId: string;\n  /**\n   * The name of the user.\n   */\n  name: ReactNode;\n  /**\n   * The handle of the user.\n   */\n  handle: ReactNode;\n  /**\n   * Whether the user is verified or not.\n   */\n  verified?: boolean;\n  /**\n   * The class name to be appended to the container.\n   */\n  className?: string;\n};\n\n/**\n * The social profile component that can be used a twitter or an instagram profile.\n */\nexport function SocialProfile({ avatarId, name, handle, verified, className }: SocialProfileProps) {\n  return (\n    <div className={clsx('profile', className)}>\n      <Avatar id={avatarId} size=\"large\" className=\"profile__avatar\" />\n      <span className=\"profile__name\">\n        {name} {verified && <CheckCircleFilled style={{ color: 'dodgerBlue' }} />}\n      </span>\n      <span className=\"profile__handle\">{handle}</span>\n    </div>\n  );\n}\n\ntype TweetProps = SocialProfileProps & {\n  /**\n   * The content of the tweet.\n   */\n  children: ReactNode;\n  /**\n   * The function to be called when the like button is clicked.\n   */\n  onLike?: () => void;\n  /**\n   * The function to be called when the dislike button is clicked.\n   */\n  onDislike?: () => void;\n  /**\n   * Whether the buttons should be disabled or not.\n   */\n  disabled?: boolean;\n};\n\nexport function Tweet({\n  avatarId,\n  name,\n  handle,\n  verified,\n  className,\n  children,\n  onLike,\n  onDislike,\n  disabled,\n}: TweetProps) {\n  return (\n    <div className={clsx('tweet', className)}>\n      <SocialProfile avatarId={avatarId} name={name} handle={handle} verified={verified} />\n      <span className=\"tweet__text\">{children}</span>\n      <div className=\"tweet__buttons\">\n        <Button block icon={<LikeFilled />} onClick={onLike} disabled={disabled}>\n          <Translate pt=\"Curtir\" en=\"Like\" />\n        </Button>\n        <Button block icon={<DislikeFilled />} onClick={onDislike} disabled={disabled}>\n          <Translate pt=\"Não curto\" en=\"Dislike\" />\n        </Button>\n      </div>\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Components\nimport { Tweet } from 'components/game/SocialProfile';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { RuleInstruction } from 'components/text';\n// Internal\nimport type { TrackProps } from '../../utils/types';\nimport { mockSelection } from '../../utils/mock';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackPolemicaDaVez = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: number) => {\n    onSubmitAnswer({\n      data: { value: String(value) },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(track.data.options));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Polêmica da Vez', en: \"That's Polemic\" }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <RuleInstruction type=\"action\">\n          <Translate\n            pt={\n              <>\n                Observe a twitada abaixo, qual a porcentagem de <strong>curtidas</strong> entre os jogadores\n                você acha que ele ganhou?\n              </>\n            }\n            en={\n              <>\n                Based on the tweet below, what percentage of <strong>likes</strong> among the players do you\n                think it got?\n              </>\n            }\n          />\n        </RuleInstruction>\n\n        <Tweet\n          avatarId=\"A\"\n          name=\"Bob\"\n          handle=\"@imnotarobot\"\n          verified\n          onLike={() => {}}\n          onDislike={() => {}}\n          disabled\n        >\n          {track.data.card.text}\n        </Tweet>\n\n        <SpaceContainer>\n          {track.data.options.map((option: number) => {\n            return (\n              <Button\n                key={`option-${option}`}\n                onClick={() => onSelect(option)}\n                size=\"large\"\n                disabled={isLoading || user.ready}\n                type=\"primary\"\n                shape=\"round\"\n              >\n                {option}%\n              </Button>\n            );\n          })}\n        </SpaceContainer>\n      </Space>\n    </>\n  );\n};\n","import { Book } from 'games/porta-dos-desesperados/components/Book';\n// Ant Design Resources\nimport { Button, Image, Space } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Components\nimport { DoorFrame } from 'components/game/DoorFrame';\nimport { ImageBlurButtonContainer, ImageCard } from 'components/image-cards';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { RuleInstruction } from 'components/text';\n// Internal\nimport type { TrackProps } from '../../utils/types';\nimport { mockSelection } from '../../utils/mock';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackPortaDosDesesperados = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const doorWidth = useCardWidth(8, { gap: 8, minWidth: 150, maxWidth: 350, margin: 8 });\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(track.data.doors));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Porta dos Desesperados', en: 'Obscure Doors' }} />\n      <RuleInstruction type=\"action\">\n        <Translate\n          pt={\n            <>\n              A pista está nas páginas do livro.\n              <br />\n              Selecione a porta correta que mais se relaciona com o livro.\n            </>\n          }\n          en={\n            <>\n              The clue is in the pages of the book.\n              <br />\n              Select the door that best fits the clue.\n            </>\n          }\n        />\n      </RuleInstruction>\n\n      <Space className=\"i-book-container\">\n        <Image.PreviewGroup>\n          <Book>\n            <ImageBlurButtonContainer cardId={track.data.book}>\n              <ImageCard id={track.data.book[0]} cardWidth={140} />\n            </ImageBlurButtonContainer>\n            <ImageBlurButtonContainer cardId={track.data.book}>\n              <ImageCard id={track.data.book?.[1] || track.data.book[0]} cardWidth={140} />\n            </ImageBlurButtonContainer>\n          </Book>\n        </Image.PreviewGroup>\n      </Space>\n      <Image.PreviewGroup>\n        <SpaceContainer>\n          {track.data.doors.map((cardId: ImageCardId) => {\n            return (\n              <SpaceContainer vertical key={cardId}>\n                <ImageBlurButtonContainer cardId={cardId}>\n                  <DoorFrame width={doorWidth}>\n                    <ImageCard id={cardId} cardWidth={150} />\n                  </DoorFrame>\n                </ImageBlurButtonContainer>\n                <Button\n                  shape=\"round\"\n                  type=\"primary\"\n                  disabled={user.ready}\n                  loading={isLoading}\n                  onClick={() => onSelect(cardId)}\n                >\n                  <Translate pt=\"Esse é a saída\" en=\"This is the exit\" />\n                </Button>\n              </SpaceContainer>\n            );\n          })}\n        </SpaceContainer>\n      </Image.PreviewGroup>\n    </>\n  );\n};\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { sortPlayers } from 'utils/helpers';\n// Icons\nimport { ShooterIcon } from 'icons/ShooterIcon';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { IconAvatar } from 'components/avatars/IconAvatar';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { RuleInstruction } from 'components/text';\n// Internal\nimport type { TrackProps } from '../../utils/types';\nimport { mockSelection } from '../../utils/mock';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackQuemNaoMata = ({ onSubmitAnswer, user, players }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(Object.keys(players)));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Quem Não Mata, Morre!', en: 'Mortal Standoff' }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <RuleInstruction type=\"action\">\n          <Translate\n            pt={\n              <>\n                Estamos num impasse! O primeiro a se mexer leva bala! Em quem você atira primeiro? (Pode ser\n                você mesmo)\n              </>\n            }\n            en={<>A standoff! Who are you going to shoot first? (It could be yourself)</>}\n          />\n        </RuleInstruction>\n\n        <SpaceContainer wrap>\n          {sortPlayers(players).map((player, index, arr) => {\n            return (\n              <div key={player.id} className=\"qnm-shooter\">\n                <IconAvatar\n                  icon={<ShooterIcon />}\n                  size={48}\n                  className={clsx(index >= arr.length / 2 && 'qnm-shooter__reverse')}\n                />\n                <Button\n                  icon={<Avatar id={player.avatarId} size=\"small\" />}\n                  onClick={() => onSelect(player.id)}\n                  type=\"primary\"\n                  loading={isLoading}\n                  disabled={user.ready}\n                >\n                  {player.name}\n                </Button>\n              </div>\n            );\n          })}\n        </SpaceContainer>\n      </Space>\n    </>\n  );\n};\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Components\nimport { CanvasSVG } from 'components/canvas';\nimport { MonsterCard } from 'components/cards/MonsterCard';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { RuleInstruction } from 'components/text';\n// Internal\nimport type { TrackProps } from '../../utils/types';\nimport { mockSelection } from '../../utils/mock';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackRetratoFalado = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const cardWidth = useCardWidth(5, { minWidth: 250, maxWidth: 270 });\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(track.data.options, 'playerId'));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Retrato Falado Monstruoso', en: 'Monster Sketch' }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <RuleInstruction type=\"action\">\n          <Translate\n            pt={\n              <>\n                Dentre as ilustrações abaixo, qual melhor ilustra o mostro?\n                <br />\n                Foi você quem desenhou? Você pode votar em si mesmo se quiser.\n              </>\n            }\n            en={\n              <>\n                Among the illustrations below, which one best illustrates the monster?\n                <br />\n                Is that your drawing? You may vote for yourself if you want.\n              </>\n            }\n          />\n        </RuleInstruction>\n\n        <SpaceContainer>\n          <MonsterCard currentMonster={track.data.card} showControls cardWidth={200} />\n        </SpaceContainer>\n\n        <div className=\"a-drawings\">\n          {track.data.options.map((entry: PlainObject) => (\n            <div className=\"a-drawings__entry\" key={entry.playerId}>\n              <CanvasSVG drawing={entry.drawing} width={cardWidth} className=\"a-drawing\" />\n\n              <SpaceContainer>\n                <Button\n                  shape=\"round\"\n                  type=\"primary\"\n                  disabled={user.ready}\n                  loading={isLoading}\n                  onClick={() => onSelect(entry.playerId)}\n                >\n                  <Translate pt=\"Selecionar\" en=\"Select\" />\n                </Button>\n              </SpaceContainer>\n            </div>\n          ))}\n        </div>\n      </Space>\n    </>\n  );\n};\n","import type { FightingContender } from 'games/super-campeonato/utils/type';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Components\nimport { Card } from 'components/cards';\nimport { CharacterCard } from 'components/cards/CharacterCard';\nimport { ImageBlurButtonContainer } from 'components/image-cards';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { RuleInstruction } from 'components/text';\n// Internal\nimport type { TrackProps } from '../../utils/types';\nimport { mockSelection } from '../../utils/mock';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackSuperCampeonato = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n  const cardWidth = useCardWidth(6, { minWidth: 200, maxWidth: 270 });\n\n  // DEV Mock\n  useMock(() => {\n    onSubmitAnswer({\n      data: { value: mockSelection(track.data.contenders, 'id') },\n    });\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Super Campeonato', en: 'Ultimate Championship' }} />\n      <RuleInstruction type=\"action\">\n        <Translate\n          pt={<>É a batalha final, qual desses dois venceria esse desafio?</>}\n          en={<>It's the final showdown, which one of these two would win this challenge?</>}\n        />\n      </RuleInstruction>\n\n      <SpaceContainer>\n        <Card header={translate('Desafio', 'Challenge')} color=\"purple\">\n          {track.data.challenge.text}\n        </Card>\n      </SpaceContainer>\n\n      <SpaceContainer>\n        {track.data.contenders.map((contender: FightingContender, index: number) => {\n          return (\n            <Space direction=\"vertical\" key={contender.id}>\n              <ImageBlurButtonContainer cardId={contender.id}>\n                <CharacterCard\n                  size={cardWidth}\n                  overlayColor={index === 0 ? 'red' : 'blue'}\n                  character={contender}\n                />\n              </ImageBlurButtonContainer>\n              <Button\n                shape=\"round\"\n                type=\"primary\"\n                disabled={user.ready}\n                loading={isLoading}\n                onClick={() =>\n                  onSubmitAnswer({\n                    data: { value: contender.id },\n                  })\n                }\n              >\n                <Translate pt=\"Selecionar\" en=\"Select\" />\n              </Button>\n            </Space>\n          );\n        })}\n      </SpaceContainer>\n    </>\n  );\n};\n","// Ant Design Resources\nimport { Button, Image, Space } from 'antd';\n// Types\nimport type { SuspectCard as SuspectCardType } from 'types/tdr';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Icons\nimport { SpeechBubbleAcceptedIcon } from 'icons/SpeechBubbleAcceptedIcon';\nimport { SpeechBubbleDeclinedIcon } from 'icons/SpeechBubbleDeclinedIcon';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { IconAvatar } from 'components/avatars/IconAvatar';\nimport { Card } from 'components/cards';\nimport { SuspectCard } from 'components/cards/SuspectCard';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { RuleInstruction } from 'components/text';\nimport { SpeechBubble } from 'components/text/SpeechBubble';\n// Internal\nimport type { TrackProps } from '../../utils/types';\nimport { mockSelection } from '../../utils/mock';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackTestemunhaOcular = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const cardWidth = useCardWidth(8, { gap: 8, minWidth: 150, maxWidth: 350, margin: 8 });\n  const { isLoading } = useLoading();\n  const { translate } = useLanguage();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(track.data.suspects, 'id'));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Testemunha Ocular', en: 'Eye Witness' }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <RuleInstruction type=\"action\">\n          <Translate\n            pt=\"Uma testemunha deu essa resposta ao tentar falar quem era o criminoso à polícia.\"\n            en=\"A witness gave this answer when trying to explain who the perpetrator was to the police.\"\n          />\n        </RuleInstruction>\n\n        <Card header={translate('Pergunta', 'Question')} color=\"orange\">\n          {track.data.question.question}\n        </Card>\n\n        <SpaceContainer>\n          <Avatar id=\"A\" size=\"large\" />{' '}\n          <SpeechBubble shadow size=\"small\">\n            {track.data.answer ? (\n              <Translate en=\"YES\" pt=\"SIM\" />\n            ) : (\n              <>\n                <Translate en=\"NO\" pt=\"NÃO\" />\n              </>\n            )}{' '}\n            <IconAvatar\n              size=\"large\"\n              icon={track.data.answer ? <SpeechBubbleAcceptedIcon /> : <SpeechBubbleDeclinedIcon />}\n            />\n          </SpeechBubble>\n        </SpaceContainer>\n\n        <RuleInstruction type=\"action\">\n          <Translate\n            pt=\"Qual dos suspeito você acha que é o criminoso?\"\n            en=\"Which one of them is the perpetrator?\"\n          />\n        </RuleInstruction>\n\n        <Image.PreviewGroup>\n          <SpaceContainer>\n            {track.data.suspects.map((suspect: SuspectCardType) => {\n              return (\n                <SpaceContainer vertical key={suspect.id}>\n                  <SuspectCard suspect={suspect} width={cardWidth} />\n\n                  <Button\n                    shape=\"round\"\n                    type=\"primary\"\n                    disabled={user.ready}\n                    loading={isLoading}\n                    onClick={() => onSelect(suspect.id)}\n                  >\n                    <Translate pt=\"Selecionar\" en=\"Select\" />\n                  </Button>\n                </SpaceContainer>\n              );\n            })}\n          </SpaceContainer>\n        </Image.PreviewGroup>\n      </Space>\n    </>\n  );\n};\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Types\nimport type { TextCard } from 'types/tdr';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { LETTERS } from 'utils/constants';\n// Components\nimport { TransparentButton } from 'components/buttons';\nimport { Card } from 'components/cards';\nimport { SuggestionEasel } from 'components/game/SuggestionEasel';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { RuleInstruction } from 'components/text';\n// Internal\nimport type { TrackProps } from '../../utils/types';\nimport { mockSelection } from '../../utils/mock';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackUeSoIsso = ({ track, onSubmitAnswer }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const onSubmitClue = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSubmitClue(mockSelection(track.data.cards, 'text'));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Ué, só isso?', en: \"That's it?\" }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <RuleInstruction type=\"action\">\n          <Translate\n            pt={\n              <>\n                Jogando <strong>Ué, Só Isso</strong>, você recebeu as seguintes pistas que estão de alguma\n                forma relacionadas à palavra secreta:\n              </>\n            }\n            en={\n              <>\n                Playing the game <strong>That's it</strong>, you received the following clues that are somehow\n                related to the secret word:\n              </>\n            }\n          />\n        </RuleInstruction>\n\n        <SpaceContainer wrap>\n          {track.data.options.map((option: string) => (\n            <SuggestionEasel id={option} key={option} value={option} />\n          ))}\n        </SpaceContainer>\n\n        <RuleInstruction type=\"action\">\n          <Translate pt=\"Qual você acha que é a palavra secreta?\" en=\"Which one is the secret word?\" />\n        </RuleInstruction>\n\n        <SpaceContainer>\n          {track.data.cards.map((card: TextCard, index: number) => (\n            <TransparentButton key={card.id} disabled={isLoading} onClick={() => onSubmitClue(card.text)}>\n              <Card header={LETTERS[index]} randomColor>\n                {card.text}\n              </Card>\n            </TransparentButton>\n          ))}\n        </SpaceContainer>\n      </Space>\n    </>\n  );\n};\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Components\nimport { MovieCard } from 'components/cards/MovieCard';\nimport { MovieReviewCard } from 'components/cards/MovieReviewCard';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { RuleInstruction } from 'components/text';\n// Internal\nimport type { TrackProps } from '../../utils/types';\nimport { mockSelection } from '../../utils/mock';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackVamosAoCinema = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(['A', 'B', 'C', 'D']));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Vamos ao Cinema!', en: 'Movie Night!' }} />\n      <RuleInstruction type=\"action\">\n        <Translate\n          pt={\n            <>\n              Decidimos que o filme que mais se encaixa nas críticas abaixo é o que vamos assistir! Qual filme\n              você quer ver?\n            </>\n          }\n          en={\n            <>\n              We decided that we will watch a movie that best match both reviews bellow! Which movie do you\n              prefer?\n            </>\n          }\n        />\n      </RuleInstruction>\n\n      <SpaceContainer>\n        <MovieReviewCard\n          type=\"positive\"\n          text={track.data.reviews.good.text}\n          highlights={track.data.reviews.good.highlights}\n        />\n\n        <MovieReviewCard\n          type=\"negative\"\n          text={track.data.reviews.bad.text}\n          highlights={track.data.reviews.bad.highlights}\n        />\n      </SpaceContainer>\n\n      <Space className=\"v-movies\">\n        <SpaceContainer vertical>\n          <MovieCard movie={track.data.movies[0]} disableSuffix prefixColor=\"Khaki\" />\n          <MovieCard movie={track.data.movies[1]} prefixColor=\"aquamarine\" suffixColor=\"Khaki\" />\n          <MovieCard movie={track.data.movies[2]} disablePrefix suffixColor=\"aquamarine\" />\n        </SpaceContainer>\n        <div className=\"v-movie-buttons\">\n          <Button\n            shape=\"circle\"\n            size=\"large\"\n            type=\"primary\"\n            style={{ background: 'Khaki', color: 'black' }}\n            onClick={() => onSelect('A')}\n            disabled={isLoading || user.ready}\n          >\n            A\n          </Button>\n          <Button\n            shape=\"circle\"\n            size=\"large\"\n            type=\"primary\"\n            style={{ background: 'aquamarine', color: 'black' }}\n            onClick={() => onSelect('B')}\n            disabled={isLoading || user.ready}\n          >\n            B\n          </Button>\n        </div>\n        <div className=\"v-movie-buttons\">\n          <Button\n            shape=\"circle\"\n            size=\"large\"\n            type=\"primary\"\n            style={{ background: 'LightGreen', color: 'black' }}\n            onClick={() => onSelect('C')}\n            disabled={isLoading || user.ready}\n          >\n            C\n          </Button>\n          <Button\n            shape=\"circle\"\n            size=\"large\"\n            type=\"primary\"\n            style={{ background: 'Plum', color: 'black' }}\n            onClick={() => onSelect('D')}\n            disabled={isLoading || user.ready}\n          >\n            D\n          </Button>\n        </div>\n        <SpaceContainer vertical>\n          <MovieCard movie={track.data.movies[3]} disableSuffix prefixColor=\"LightGreen\" />\n          <MovieCard movie={track.data.movies[4]} prefixColor=\"Plum\" suffixColor=\"LightGreen\" />\n          <MovieCard movie={track.data.movies[5]} disablePrefix suffixColor=\"Plum\" />\n        </SpaceContainer>\n      </Space>\n    </>\n  );\n};\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Components\nimport { TransparentButton } from 'components/buttons';\nimport { Card } from 'components/cards';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\n// Internal\nimport type { TrackProps } from '../../utils/types';\nimport { mockSelection } from '../../utils/mock';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackMegamixBestOfThree = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n\n  const onSelect = (index: number) => {\n    onSubmitAnswer({\n      data: { value: String(index) },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection([0, 1, 2]));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Melhor de 3', en: 'Best of 3' }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <Card header={translate('Pergunta', 'Question')} color=\"orange\">\n          {track.data.card.question}\n        </Card>\n\n        <SpaceContainer>\n          <TransparentButton onClick={() => onSelect(0)} disabled={isLoading || user.ready}>\n            <Card header=\"A\" color=\"red\">\n              {track.data.card.options[0]}\n            </Card>\n          </TransparentButton>\n\n          <TransparentButton onClick={() => onSelect(1)} disabled={isLoading || user.ready}>\n            <Card header=\"B\" color=\"purple\">\n              {track.data.card.options[1]}\n            </Card>\n          </TransparentButton>\n\n          <TransparentButton onClick={() => onSelect(2)} disabled={isLoading || user.ready}>\n            <Card header=\"C\" color=\"blue\">\n              {track.data.card.options[2]}\n            </Card>\n          </TransparentButton>\n        </SpaceContainer>\n      </Space>\n    </>\n  );\n};\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Components\nimport { TransparentButton } from 'components/buttons';\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { RuleInstruction } from 'components/text';\n// Internal\nimport type { TrackProps } from '../../utils/types';\nimport { mockSelection } from '../../utils/mock';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackMegamixThisThat = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n\n  const onSelect = (index: number) => {\n    onSubmitAnswer({\n      data: { value: String(index) },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection([0, 1]));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Isso ou Aquilo?', en: 'This or That?' }} />\n      <RuleInstruction type=\"action\">\n        <Translate pt=\"Selecione qual você prefere:\" en=\"Select which one you prefer:\" />\n      </RuleInstruction>\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <SpaceContainer>\n          <TransparentButton onClick={() => onSelect(0)} disabled={isLoading || user.ready}>\n            <Card header={translate('Isso', 'This')} color=\"red\">\n              {track.data.card.options[0]}\n            </Card>\n          </TransparentButton>\n\n          <TransparentButton onClick={() => onSelect(1)} disabled={isLoading || user.ready}>\n            <Card header={translate('Aquilo', 'That')} color=\"blue\">\n              {track.data.card.options[1]}\n            </Card>\n          </TransparentButton>\n        </SpaceContainer>\n      </Space>\n    </>\n  );\n};\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Types\nimport type { Item } from 'types/tdr';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Icons\nimport { AlienIcon } from 'icons/AlienIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { TransparentButton } from 'components/buttons';\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { SignCard } from 'components/cards/SignCard';\nimport { DualTranslate, Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { RuleInstruction } from 'components/text';\nimport { SpeechBubble } from 'components/text/SpeechBubble';\n// Internal\nimport type { AlienSign, TrackProps } from '../../utils/types';\nimport { mockSelection } from '../../utils/mock';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackComunicacaoAlienigena = ({ track, onSubmitAnswer }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(String(mockSelection(track.data.items)));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Comunicação Alienígena', en: 'Alien Communication' }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <RuleInstruction type=\"lore\">\n          <Translate\n            pt={\n              <>\n                Um alienígena que não fala nossa língua está pedindo um objeto.\n                <br />\n                Qual o objeto que ele quer?\n              </>\n            }\n            en={\n              <>\n                An alien who doesn't speak our language is asking for an object.\n                <br />\n                What object do they want?\n              </>\n            }\n          />\n        </RuleInstruction>\n\n        <SpaceContainer>\n          <IconAvatar icon={<AlienIcon />} size=\"large\" />{' '}\n          <SpeechBubble shadow>\n            <SpaceContainer>\n              {track.data.attributes.map((attribute: AlienSign, index: number) => {\n                return (\n                  <span key={attribute.id}>\n                    <SignCard id={String(track.data.signs[index])} />\n                    <DualTranslate>{attribute.name}</DualTranslate>\n                  </span>\n                );\n              })}\n            </SpaceContainer>\n          </SpeechBubble>\n        </SpaceContainer>\n\n        <RuleInstruction type=\"action\">\n          <Translate\n            pt={<>Selecione o objeto que tem a ver com a palavra que o alienígena está pedindo.</>}\n            en={<>Select the object that has to do with the word the alien is asking for.</>}\n          />\n        </RuleInstruction>\n\n        <SpaceContainer>\n          {track.data.items.map((item: Item) => {\n            return (\n              <TransparentButton\n                key={`item-${item.id}`}\n                onClick={() => onSelect(item.id)}\n                disabled={isLoading}\n              >\n                <ItemCard id={item.id} width={80} />\n              </TransparentButton>\n            );\n          })}\n        </SpaceContainer>\n      </Space>\n    </>\n  );\n};\n","import { PlayerGlyphs } from 'games/quem-sou-eu/components/PlayerGlyphs';\nimport type { FightingContender } from 'games/super-campeonato/utils/type';\nimport { useMemo } from 'react';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Types\nimport type { GamePlayer } from 'types/player';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Components\nimport { CharacterCard } from 'components/cards/CharacterCard';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { RuleInstruction } from 'components/text';\n// Internal\nimport type { TrackProps } from '../../utils/types';\nimport { mockSelection } from '../../utils/mock';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackQuemSouEu = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const { isLoading } = useLoading();\n  const cardWidth = useCardWidth(7, { minWidth: 150, maxWidth: 270 });\n\n  // DEV Mock\n  useMock(() => {\n    onSubmitAnswer({\n      data: { value: mockSelection(track.data.contenders, 'id') },\n    });\n  });\n\n  const botPlayer: GamePlayer = useMemo(() => {\n    const selectedGlyphs: BooleanDictionary = {};\n    track.data.positive.forEach((glyph: number) => {\n      selectedGlyphs[glyph] = true;\n    });\n    track.data.negative.forEach((glyph: number) => {\n      selectedGlyphs[glyph] = false;\n    });\n    return { id: 'A', avatarId: 'A', name: 'Bob', selectedGlyphs, ready: false, updatedAt: 0 };\n  }, [track.data]);\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Quem Sou Eu?', en: 'Who Am I?' }} />\n      <RuleInstruction type=\"action\">\n        <Translate\n          pt=\"Decifre os símbolos e selecione o personagem que mais tem aver com eles.\"\n          en=\"Decipher the glyphs and select the character that has the most to do with them.\"\n        />\n      </RuleInstruction>\n\n      <SpaceContainer>\n        <PlayerGlyphs player={botPlayer} glyphWidth={50} />\n      </SpaceContainer>\n\n      <SpaceContainer>\n        {track.data.contenders.map((contender: FightingContender) => {\n          return (\n            <Space direction=\"vertical\" key={contender.id}>\n              <CharacterCard size={cardWidth} character={contender} />\n\n              <Button\n                shape=\"round\"\n                type=\"primary\"\n                disabled={user.ready}\n                loading={isLoading}\n                onClick={() =>\n                  onSubmitAnswer({\n                    data: { value: contender.id },\n                  })\n                }\n              >\n                <Translate pt=\"Selecionar\" en=\"Select\" />\n              </Button>\n            </Space>\n          );\n        })}\n      </SpaceContainer>\n    </>\n  );\n};\n","// Ant Design Resources\nimport { Button } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Icons\nimport { SpeechBubbleAcceptedIcon } from 'icons/SpeechBubbleAcceptedIcon';\nimport { SpeechBubbleDeclinedIcon } from 'icons/SpeechBubbleDeclinedIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { Card } from 'components/cards';\nimport { SuspectCard } from 'components/cards/SuspectCard';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { RuleInstruction } from 'components/text';\n// Internal\nimport type { TrackProps } from '../../utils/types';\nimport { mockSelection } from '../../utils/mock';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackTaNaCara = ({ track, onSubmitAnswer }: TrackProps) => {\n  const cardWidth = useCardWidth(8, { gap: 8, minWidth: 150, maxWidth: 350, margin: 8 });\n  const { isLoading } = useLoading();\n  const { translate } = useLanguage();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection([true, false]));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Tá Na Cara', en: 'Guess Who What?' }} />\n      <RuleInstruction type=\"action\">\n        <Translate\n          pt=\"É bem óbvio só de olhar pra essa pessoa. Mas só pra confirmar, responda essa pergunta de acordo\n              com o que você acha.\"\n          en=\"It's pretty obvious just by looking at this person. But just to confirm, answer this question:\"\n        />\n      </RuleInstruction>\n\n      <Card header={translate('Pergunta', 'Question')} color=\"orange\">\n        {track.data.question.question}\n      </Card>\n\n      <SpaceContainer direction=\"vertical\">\n        <SuspectCard suspect={track.data.suspect} width={cardWidth} />\n      </SpaceContainer>\n\n      <SpaceContainer>\n        <Button\n          size=\"large\"\n          icon={<IconAvatar icon={<SpeechBubbleDeclinedIcon />} />}\n          onClick={() => onSelect('no')}\n          disabled={isLoading}\n          shape=\"round\"\n        >\n          <Translate en=\"NO\" pt=\"NÃO\" />\n        </Button>\n\n        <Button\n          size=\"large\"\n          icon={<IconAvatar icon={<SpeechBubbleAcceptedIcon />} />}\n          onClick={() => onSelect('yes')}\n          disabled={isLoading}\n          shape=\"round\"\n        >\n          <Translate en=\"YES\" pt=\"SIM\" />\n        </Button>\n      </SpaceContainer>\n    </>\n  );\n};\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Components\nimport { AvatarCard } from 'components/avatars';\nimport { TransparentButton } from 'components/buttons';\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { RuleInstruction } from 'components/text';\n// Internal\nimport type { TrackProps } from '../../utils/types';\nimport { mockSelection } from '../../utils/mock';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackMegamixWhoSaidThis = ({ track, onSubmitAnswer, user, players }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const onSelect = (playerId: PlayerId) => {\n    onSubmitAnswer({\n      data: { value: playerId },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(track.data.card.options));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Quem disse isso?', en: 'Who Said This?' }} />\n      <RuleInstruction type=\"action\">\n        <Translate\n          pt=\"Selecione qual jogador você acha que disse esse fato:\"\n          en=\"Select the player who said this fact:\"\n        />\n      </RuleInstruction>\n      <Card hideHeader>\"{track.data.card.text}\"</Card>\n\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <SpaceContainer>\n          {track.data.card.options.map((playerId: PlayerId) => {\n            const player = players[playerId];\n            return (\n              <TransparentButton\n                key={playerId}\n                onClick={() => onSelect(playerId)}\n                disabled={isLoading || user.ready}\n              >\n                <AvatarCard player={player} withName />\n              </TransparentButton>\n            );\n          })}\n        </SpaceContainer>\n      </Space>\n    </>\n  );\n};\n","// Types\nimport type { GameRound } from 'types/game';\nimport type { GamePlayer, GamePlayers } from 'types/player';\n// Components\nimport { Step, type StepProps } from 'components/steps';\n// Internal\nimport type { SubmitAnswerPayload, Track } from './utils/types';\nimport { ClubLine } from './components/ClubLine';\nimport { FallbackComponent } from './components/FallbackComponent';\nimport { TrackArteRuim } from './components/Tracks/TrackArteRuim';\nimport { TrackLabirintoSecreto } from './components/Tracks/TrackLabirintoSecreto';\nimport { TrackContadoresHistorias } from './components/Tracks/TrackContadoresHistorias';\nimport { TrackCrimesHediondos } from './components/Tracks/TrackCrimesHediondos';\nimport { TrackCruzaPalavras } from './components/Tracks/TrackCruzaPalavras';\nimport { TrackDetetivesImaginativos } from './components/Tracks/TrackDetetivesImaginativos';\nimport { TrackEsquiadores } from './components/Tracks/TrackEsquiadores';\nimport { TrackEspiaoEntreNos } from './components/Tracks/TrackEspiaoEntreNos';\nimport { TrackFileiraDeFatos } from './components/Tracks/TrackFileiraDeFatos';\nimport { TrackGaleriaDeSonhos } from './components/Tracks/TrackGaleriaDeSonhos';\nimport { TrackMenteColetiva } from './components/Tracks/TrackMenteColetiva';\nimport { TrackNamoroOuAmizade } from './components/Tracks/TrackNamoroOuAmizade';\nimport { TrackNaRuaDoMedo } from './components/Tracks/TrackNaRuaDoMedo';\nimport { TrackOndaTelepatica } from './components/Tracks/TrackOndaTelepatica';\nimport { TrackPalhetaDeCores } from './components/Tracks/TrackPalhetaDeFores';\nimport { TrackPolemicaDaVez } from './components/Tracks/TrackPolemicaDaVez';\nimport { TrackPortaDosDesesperados } from './components/Tracks/TrackPortaDosDesesperados';\nimport { TrackQuemNaoMata } from './components/Tracks/TrackQuemNaoMata';\nimport { TrackRetratoFalado } from './components/Tracks/TrackRetratoFalado';\nimport { TrackSuperCampeonato } from './components/Tracks/TrackSuperCampeonato';\nimport { TrackTestemunhaOcular } from './components/Tracks/TrackTestemunhaOcular';\nimport { TrackUeSoIsso } from './components/Tracks/TrackUeSoIsso';\nimport { TrackVamosAoCinema } from './components/Tracks/TrackVamosAoCinema';\nimport { TrackMegamixBestOfThree } from './components/Tracks/TrackMegamixBestOfThree';\nimport { TrackMegamixThisThat } from './components/Tracks/TrackMegamixThisThat';\nimport { TrackComunicacaoAlienigena } from './components/Tracks/TrackComunicacaoAlienigena';\nimport { TrackQuemSouEu } from './components/Tracks/TrackQuemSouEu';\nimport { TrackTaNaCara } from './components/Tracks/TrackTaNaCara';\nimport { TrackMegamixWhoSaidThis } from './components/Tracks/TrackMegamixWhoSaidThis';\n\ntype StepTrackProps = {\n  round: GameRound;\n  track: Track;\n  players: GamePlayers;\n  user: GamePlayer;\n  onSubmitAnswer: (payload: SubmitAnswerPayload) => void;\n} & Pick<StepProps, 'announcement'>;\n\nexport const StepTrack = ({ announcement, ...rest }: StepTrackProps) => {\n  const TrackComponent =\n    {\n      'arte-ruim': TrackArteRuim,\n      'comunicacao-alienigena': TrackComunicacaoAlienigena,\n      'contadores-historias': TrackContadoresHistorias,\n      'crimes-hediondos': TrackCrimesHediondos,\n      'cruza-palavras': TrackCruzaPalavras,\n      'detetives-imaginativos': TrackDetetivesImaginativos,\n      esquiadores: TrackEsquiadores,\n      'espiao-entre-nos': TrackEspiaoEntreNos,\n      'fileira-de-fatos': TrackFileiraDeFatos,\n      'galeria-de-sonhos': TrackGaleriaDeSonhos,\n      'labirinto-secreto': TrackLabirintoSecreto,\n      'megamix-best-of-three': TrackMegamixBestOfThree,\n      'megamix-this-that': TrackMegamixThisThat,\n      'megamix-who-said-this': TrackMegamixWhoSaidThis,\n      'mente-coletiva': TrackMenteColetiva,\n      'namoro-ou-amizade': TrackNamoroOuAmizade,\n      'na-rua-do-medo': TrackNaRuaDoMedo,\n      'onda-telepatica': TrackOndaTelepatica,\n      'palheta-de-cores': TrackPalhetaDeCores,\n      'polemica-da-vez': TrackPolemicaDaVez,\n      'porta-dos-desesperados': TrackPortaDosDesesperados,\n      'quem-nao-mata': TrackQuemNaoMata,\n      'quem-sou-eu': TrackQuemSouEu,\n      'retrato-falado': TrackRetratoFalado,\n      'super-campeonato': TrackSuperCampeonato,\n      'testemunha-ocular': TrackTestemunhaOcular,\n      'ta-na-cara': TrackTaNaCara,\n      'ue-so-isso': TrackUeSoIsso,\n      'vamos-ao-cinema': TrackVamosAoCinema,\n    }?.[rest.track.game] ?? FallbackComponent;\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <TrackComponent {...rest} />\n      <ClubLine players={rest.players} currentRound={rest.round.current} />\n    </Step>\n  );\n};\n","// Ant Design Resources\nimport { Avatar } from 'antd';\n// Types\nimport type { PhaseProps, GameRound } from 'types/game';\n// Hooks\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { DJIcon } from 'icons/DJIcon';\n// Components\nimport { DJPruPruPruSound } from 'components/audio/DJPruPruPruSound';\nimport { Translate } from 'components/language';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\n// Internal\nimport { useOnSubmitTrackAnswerAPIRequest } from './utils/api-requests';\nimport { useColorizeBackground } from './utils/useColorizeBackground';\nimport { showDJPruPruPruStep } from './utils/helpers';\nimport { TrackIcon } from './components/TrackIcon';\nimport { TrackInstructions } from './components/TrackInstructions';\nimport { TrackTitle } from './components/TrackTitle';\nimport { DJInstructions } from './components/RulesBlobs';\nimport { StepTrack } from './StepTrack';\n\nexport function PhaseTrack({ players, state }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, setStep, goToNextStep } = useStep(showDJPruPruPruStep(state.round));\n\n  // Dynamic background\n  useColorizeBackground(user, state?.round?.current);\n\n  const onSubmitAnswer = useOnSubmitTrackAnswerAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<TrackIcon track={state.track} />}\n      title={\n        <>\n          <Avatar size=\"large\" style={{ backgroundColor: 'DimGray', verticalAlign: 'middle' }}>\n            {state.round.current}\n          </Avatar>{' '}\n          <TrackTitle track={state.track} />\n        </>\n      }\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <Instruction>\n        <TrackInstructions track={state.track} />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer phase={state?.phase} allowedPhase={PHASES.MEGAMIX.TRACK}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<DJIcon />}\n          title={<DJAnnouncementTitle round={state.round} />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          duration={state?.round?.current < 2 ? 20 : 7}\n          unskippable\n          type=\"block\"\n        >\n          <DJPruPruPruSound />\n          <DJInstructions round={state.round} />\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepTrack\n          track={state.track}\n          round={state.round}\n          players={players}\n          announcement={announcement}\n          onSubmitAnswer={onSubmitAnswer}\n          user={user}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nfunction DJAnnouncementTitle({ round }: { round: GameRound }) {\n  if (round.current < 2) return <Translate pt=\"A Balada\" en=\"The Club\" />;\n  if (round.current === Math.round(round.total / 2))\n    return <Translate pt=\"E tamo só esquentando\" en=\"We're halfway!\" />;\n  return <Translate pt=\"Última música\" en=\"The last song\" />;\n}\n","// Hooks\nimport { useGameActionRequest } from 'hooks/useGameActionRequest';\nimport { useLanguage } from 'hooks/useLanguage';\nimport type { UseStep } from 'hooks/useStep';\n// Internal\nimport type { SubmitAnswerPayload } from './types';\nimport { MEGAMIX_ACTIONS } from './constants';\n\nexport function useOnSubmitSeedAPIRequest(setStep: UseStep['setStep']) {\n  const { translate } = useLanguage();\n\n  const request = useGameActionRequest({\n    actionName: 'submit-seed',\n    onSuccess: () => setStep(3),\n    successMessage: translate('Dados enviados com sucesso', 'Data submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar seus dados',\n      'Oops, the application found an error while trying to submit your data',\n    ),\n  });\n\n  return (payload: SubmitAnswerPayload) => {\n    request({\n      action: MEGAMIX_ACTIONS.SUBMIT_SEEDS,\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitTrackAnswerAPIRequest(setStep: UseStep['setStep']) {\n  const { translate } = useLanguage();\n\n  const request = useGameActionRequest({\n    actionName: 'submit-task',\n    onSuccess: () => setStep(3),\n    successMessage: translate('Tarefa enviada com sucesso', 'Track submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua tarefa',\n      'Oops, the application found an error while trying to submit your task',\n    ),\n  });\n\n  return (payload: SubmitAnswerPayload) => {\n    request({\n      action: MEGAMIX_ACTIONS.SUBMIT_TRACK_ANSWER,\n      ...payload,\n    });\n  };\n}\n","import { useEffect, useState } from 'react';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { NOOP } from 'utils/constants';\n// Icons\nimport { PanicIcon } from 'icons/PanicIcon';\n// Components\nimport { ArteRuimTimerSound } from 'components/audio/ArteRuimTimerSound';\nimport { DrawingCanvas } from 'components/canvas';\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { TimeHighlight } from 'components/metrics/TimeHighlight';\nimport { Instruction, Title } from 'components/text';\n// Internal\nimport type { SeedEntryArteRuim } from '../../utils/types';\n\ntype SeedArteRuimProps = {\n  seed: SeedEntryArteRuim;\n  updateData: GenericComponent;\n};\n\nexport function SeedArteRuim({ seed, updateData }: SeedArteRuimProps) {\n  const { translate } = useLanguage();\n  const [lines, setLines] = useState<CanvasLine[]>([]);\n  const [isTimesUp, setTimesUp] = useState(false);\n\n  const { seconds, start, isRunning } = useCountdown({\n    duration: 13,\n    autoStart: false,\n    onExpire: () => {\n      updateData(\n        {\n          [seed.card.id]: JSON.stringify(lines),\n        },\n        true,\n      );\n    },\n  });\n\n  useEffect(() => {\n    if (seconds === 2) {\n      setTimesUp(true);\n    }\n  }, [seconds]);\n\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\" colorScheme=\"light\">\n        <Translate\n          pt=\"Para ajudar aliviar o estresse de ser sensual na balada, você resolveu se expressar artisticamente\"\n          en=\"To help relieve the stress of being incredibly hot in the club, you decided to express yourself through art\"\n        />\n      </Title>\n\n      <Space direction=\"vertical\">\n        <Instruction className=\"seed-instruction\">\n          <Translate\n            pt={\n              <>\n                Você tem <TimeHighlight>10 segundos</TimeHighlight> para desenhar a carta abaixo. Quando\n                estiver pronto, aperte o botão, o texto irá aparecer, então desenhe rápido!\n              </>\n            }\n            en={\n              <>\n                You have <TimeHighlight>10 seconds</TimeHighlight> to draw the card below. When you're ready,\n                press the button so the text will show up and then draw fast!\n              </>\n            }\n          />\n        </Instruction>\n        <Button onClick={start} type=\"primary\" disabled={isRunning}>\n          <Translate pt=\"Começar\" en=\"Start\" />\n        </Button>\n\n        <Card size=\"large\" header={translate('Desenhe', 'Draw')} className=\"a-draw__card\" color=\"yellow\">\n          {isRunning ? (\n            <>\n              {seed.card.text}\n              <span className=\"a-draw__timer\">{seconds > 1 ? seconds - 2 : 0}</span>\n            </>\n          ) : (\n            '?'\n          )}\n        </Card>\n        {isRunning && <ArteRuimTimerSound />}\n        {isTimesUp ? (\n          <PanicIcon style={{ background: 'white', width: '500px', padding: '2em' }} />\n        ) : isRunning ? (\n          <DrawingCanvas lines={lines} setLines={setLines} />\n        ) : (\n          <DrawingCanvas lines={[]} setLines={NOOP} />\n        )}\n      </Space>\n    </div>\n  );\n}\n","import { capitalize } from 'lodash';\n// Ant Design Resources\nimport { HeartOutlined, MessageOutlined, SendOutlined } from '@ant-design/icons';\nimport { Button, Space } from 'antd';\n// Types\nimport type { GamePlayer } from 'types/player';\n// Icons\nimport { BikiniModelIcon } from 'icons/BikiniModelIcon';\n// Components\nimport { SocialProfile } from 'components/game/SocialProfile';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { Instruction, TextHighlight, Title } from 'components/text';\n// Internal\nimport type { SeedEntryLabirintoSecreto } from '../../utils/types';\n\ntype SeedLabirintoSecretoProps = {\n  seed: SeedEntryLabirintoSecreto;\n  updateData: GenericComponent;\n  user: GamePlayer;\n};\n\nexport function SeedLabirintoSecreto({ seed, updateData, user }: SeedLabirintoSecretoProps) {\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\" colorScheme=\"light\">\n        <Translate\n          pt=\"Você decidiu postar uma foto piranhuda no Instagram antes de se arrumar...\"\n          en=\"You decided to post a thirst trap on Instagram before getting ready...\"\n        />\n      </Title>\n\n      <Space direction=\"vertical\">\n        <Instruction className=\"seed-instruction\">\n          <Translate\n            pt={\n              <>\n                Para não pensarem mal de você, você escolheu <TextHighlight>{seed.tree.text}</TextHighlight>{' '}\n                como a legenda de impacto da sua postagem. Agora escolha o melhor adjetivo que vai bem com\n                ela.\n              </>\n            }\n            en={\n              <>\n                Thinking about the haters, you chose <TextHighlight>{seed.tree.text}</TextHighlight> as a\n                caption. Now select the best adjective to go with it.\n              </>\n            }\n          />\n        </Instruction>\n\n        <div className=\"cm-instagram\">\n          <SocialProfile\n            avatarId={user.avatarId}\n            name={user.name}\n            handle={<Translate pt=\"Logo ali, Brasil\" en=\"Somewhere\" />}\n            className=\"cm-instagram__user\"\n          />\n          <div className=\"cm-instagram__picture\">\n            <BikiniModelIcon />\n          </div>\n          <div className=\"cm-instagram__buttons\">\n            <HeartOutlined /> <MessageOutlined /> <SendOutlined />\n          </div>\n          <div className=\"cm-instagram__post\">\n            <strong>{user.name.toLowerCase()}</strong> {capitalize(seed.tree.text)}...\n          </div>\n        </div>\n\n        <SpaceContainer wrap>\n          {seed.cards.map((card) => (\n            <Button\n              key={card.id}\n              onClick={() => updateData({ [seed.tree.id]: card.id }, true)}\n              type=\"primary\"\n            >\n              {card.text}\n            </Button>\n          ))}\n        </SpaceContainer>\n      </Space>\n    </div>\n  );\n}\n","import { useEffectOnce } from 'react-use';\n// Ant Design Resources\nimport { Segmented } from 'antd';\n// Types\nimport type { GamePlayer } from 'types/player';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\n// Utils\nimport { LETTERS } from 'utils/constants';\n// Components\nimport { ClubberAvatar } from 'components/avatars/ClubberAvatar';\nimport { SendButton } from 'components/buttons';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { Title } from 'components/text';\n// Internal\nimport type { SeedEntryClubberOutfit, SubmitAnswerPayload } from '../../utils/types';\n\ntype SeedClubberProps = {\n  seed: SeedEntryClubberOutfit;\n  updateData: GenericComponent;\n  user: GamePlayer;\n  onSubmitData: (payload: SubmitAnswerPayload) => void;\n  data: PlainObject;\n};\n\nexport function SeedClubber({ seed, updateData, user, data, onSubmitData }: SeedClubberProps) {\n  const { isLoading } = useLoading();\n\n  useEffectOnce(() => {\n    updateData({ clubberId: seed.outfits[0] });\n  });\n\n  const clubbers = (seed.outfits ?? []).map((cId: string, index: number) => ({\n    label: (\n      <div className=\"clubber-selection\">\n        <ClubberAvatar avatarId={user.avatarId} id={cId} />\n        <div>{LETTERS[index]}</div>\n      </div>\n    ),\n    value: cId,\n  }));\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\" colorScheme=\"light\">\n        <Translate\n          pt=\"Escolha o que você vai usar pra balada\"\n          en=\"Choose what you want to wear for this party\"\n        />\n      </Title>\n\n      <SpaceContainer vertical>\n        <Segmented\n          options={clubbers}\n          value={data.clubberId}\n          onChange={(clubberId) => updateData({ clubberId })}\n        />\n\n        <SendButton onClick={() => onSubmitData({ data })} disabled={isLoading || user.ready}>\n          <Translate pt=\"Confirmar roupa\" en=\"Confirm outfit\" />\n        </SendButton>\n      </SpaceContainer>\n    </div>\n  );\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, Input, Space } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { Instruction, Title } from 'components/text';\n// Internal\nimport type { SeedEntryOndaTelepatica } from '../../utils/types';\n\ntype SeedOndaTelepaticaProps = {\n  seed: SeedEntryOndaTelepatica;\n  updateData: GenericComponent;\n};\n\nexport function SeedOndaTelepatica({ seed, updateData }: SeedOndaTelepaticaProps) {\n  const [value, setValue] = useState('');\n  const { translate } = useLanguage();\n\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\" colorScheme=\"light\">\n        <Translate\n          pt=\"Você ainda estuda e precisa terminar sua tarefa de casa...\"\n          en=\"You're still in school and needs to finish your homework...\"\n        />\n      </Title>\n\n      <SpaceContainer vertical>\n        <Instruction className=\"seed-instruction\">\n          <Translate\n            pt={\n              <>\n                A tarefa é escrever algo simples relacionado ao tema abaixo, pode ser uma palavra, duas, uma\n                expressão.\n                <br />\n                Vamos tira 10!\n              </>\n            }\n            en={\n              <>\n                The task is easy: Write something simple that matches the theme below. It could be a word,\n                two, or a phrase.\n                <br />\n                Let's get that A+!\n              </>\n            }\n          />\n        </Instruction>\n\n        <Card header={translate('Tarefa', 'Homework')} color=\"purple\">\n          {/* TODO: Verify */}\n          {String(seed.card)}\n        </Card>\n\n        <Input\n          onChange={(e) => setValue(e.target.value)}\n          size=\"large\"\n          placeholder={translate('Escreva aqui', 'Write here')}\n          onPressEnter={() => updateData({ wave: value }, true)}\n        />\n\n        <Space>\n          <Button\n            disabled={value.length < 2}\n            onClick={() => updateData({ wave: value }, true)}\n            type=\"primary\"\n          >\n            <Translate pt=\"Enviar dever de casa\" en=\"Submit homework\" />\n          </Button>\n        </Space>\n      </SpaceContainer>\n    </div>\n  );\n}\n","// Components\nimport { Tweet } from 'components/game/SocialProfile';\nimport { Translate } from 'components/language';\nimport { Title } from 'components/text';\n// Internal\nimport type { SeedEntryPolemicaDaVez } from '../../utils/types';\n\ntype SeedPolemicaDaVezProps = {\n  seed: SeedEntryPolemicaDaVez;\n  updateData: GenericComponent;\n};\n\nexport function SeedPolemicaDaVez({ seed, updateData }: SeedPolemicaDaVezProps) {\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\" colorScheme=\"light\">\n        <Translate\n          pt={\n            <>\n              Vamos procrastinar:\n              <br />\n              Você abre o Twitter e vê esse tópico. Curte ou não curte?\n            </>\n          }\n          en={\n            <>\n              Let's procrastinate:\n              <br />\n              You open twitter and see this tweet. Like or Dislike?\n            </>\n          }\n        />\n      </Title>\n\n      <Tweet\n        avatarId=\"A\"\n        name=\"Bob\"\n        handle=\"@imnotarobot\"\n        verified\n        onLike={() => updateData({ likeTweet: true }, true)}\n        onDislike={() => updateData({ likeTweet: false }, true)}\n      >\n        {seed.card.text}\n      </Tweet>\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useAudio } from 'react-use';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useGlobalLocalStorage } from 'hooks/useGlobalLocalStorage';\n// Utils\nimport { NOOP } from 'utils/constants';\n// Icons\nimport { PanicIcon } from 'icons/PanicIcon';\n// Components\nimport { DrawingCanvas } from 'components/canvas';\nimport { MonsterCard } from 'components/cards/MonsterCard';\nimport { ImageCardPreloadHand } from 'components/image-cards';\nimport { Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\n// Internal\nimport type { SeedEntryRetratoFalado } from '../../utils/types';\n\n// Sound\nconst arteRuimTimer = require('assets/sounds/arte-ruim-timer.mp3');\n\ntype SeedRetratoFaladoProps = {\n  seed: SeedEntryRetratoFalado;\n  updateData: GenericComponent;\n};\n\nexport function SeedRetratoFalado({ seed, updateData }: SeedRetratoFaladoProps) {\n  const [lines, setLines] = useState<CanvasLine[]>([]);\n  const [isTimesUp, setTimesUp] = useState(false);\n  const [volume] = useGlobalLocalStorage('volume');\n  const [audio, , controls] = useAudio({\n    src: arteRuimTimer,\n  });\n\n  // Updated volume\n  // biome-ignore lint/correctness/useExhaustiveDependencies: <explanation>\n  useEffect(() => {\n    controls.volume(volume);\n  }, [volume]);\n\n  const { seconds, start, isRunning } = useCountdown({\n    duration: 33,\n    autoStart: false,\n    onExpire: () => {\n      updateData(\n        {\n          [seed.card.id]: JSON.stringify(lines),\n        },\n        true,\n      );\n    },\n  });\n\n  useEffect(() => {\n    if (seconds === 2) {\n      setTimesUp(true);\n    }\n  }, [seconds]);\n\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\" colorScheme=\"light\">\n        <Translate\n          pt=\"De repente, você se lembra de um evento muito traumático na sua vida, uma monstro te atacou uma vez...\"\n          en=\"Suddenly you have a glimpse of memory from the day a monster attacked you...\"\n        />\n      </Title>\n\n      <Space direction=\"vertical\">\n        <Instruction className=\"seed-instruction\">\n          <Translate\n            pt={\n              <>\n                Você tem <strong>30 segundos</strong> para desenhar a carta abaixo.\n                <br />\n                Desenhá-lo é a única coisa que te acalma. Quando estiver pronto, aperte o botão!\n              </>\n            }\n            en={\n              <>\n                You have <strong>30 seconds</strong> to draw the card below.\n                <br />\n                Drawing it is the only thing that calms you down. When you're ready, press the button!\n              </>\n            }\n          />\n        </Instruction>\n        <Button onClick={start} type=\"primary\" disabled={isRunning}>\n          <Translate pt=\"Começar\" en=\"Start\" />\n        </Button>\n\n        {isRunning && audio}\n        <div className=\"monster-container\">\n          {isRunning && <span className=\"a-draw__timer\">{seconds > 1 ? seconds - 2 : 0}</span>}\n\n          <MonsterCard\n            currentMonster={isRunning ? seed.card : { id: 'md-bs-000', orientation: seed.card.orientation }}\n            showControls\n            cardWidth={250}\n          />\n\n          {isTimesUp ? (\n            <PanicIcon style={{ background: 'white', width: '500px', padding: '2em' }} />\n          ) : isRunning ? (\n            <DrawingCanvas lines={lines} setLines={setLines} />\n          ) : (\n            <DrawingCanvas lines={[]} setLines={NOOP} />\n          )}\n        </div>\n      </Space>\n\n      <ImageCardPreloadHand hand={[seed.card.id]} />\n    </div>\n  );\n}\n","import type { ReactNode } from 'react';\n\ntype SVGPhoneProps = {\n  children: ReactNode;\n};\n\nexport function SVGPhone({ children }: SVGPhoneProps) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 453.03 800\" className=\"svg-phone\">\n      <path\n        d=\"M394.81 0H58.21A58.22 58.22 0 000 58.28v683.5A58.19 58.19 0 0058.21 800h336.6a58.23 58.23 0 0058.21-58.22V58.28A58.26 58.26 0 00394.81 0zM143.45 35.39h166.17c4.2 0 7.61 6.27 7.61 14s-3.41 14.05-7.61 14.05H143.45c-4.22 0-7.57-6.29-7.57-14.05s3.35-14 7.57-14zm83.06 707.09a37.17 37.17 0 1137.11-37.2 37.22 37.22 0 01-37.11 37.2zm182.9-127.36H43.64V98.33h365.77v516.79z\"\n        fill=\"#464749\"\n      ></path>\n      <foreignObject x=\"43\" y=\"98\" width=\"365\" height=\"516\">\n        {children}\n      </foreignObject>\n    </svg>\n  );\n}\n","import clsx from 'clsx';\nimport moment from 'moment';\nimport { useState } from 'react';\n// Ant Design Resources\nimport { Button, Input } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { Title } from 'components/text';\n// Internal\nimport type { SeedEntryUeSoIsso } from '../../utils/types';\nimport { SVGPhone } from '../SVGPhone';\n\ntype SeedUeSoIssoProps = {\n  seed: SeedEntryUeSoIsso;\n  updateData: GenericComponent;\n};\n\nconst now = moment().format('MMMM YYYY, h:mm');\n\nexport function SeedUeSoIsso({ seed, updateData }: SeedUeSoIssoProps) {\n  const [value, setValue] = useState('');\n  const { translate } = useLanguage();\n\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\" colorScheme=\"light\">\n        <Translate\n          pt=\"Você recebeu o torpedo de um amigo e precisa responder antes de se arrumar\"\n          en=\"You received the following text message from a friend and you must answer it before leaving\"\n        />\n      </Title>\n\n      <SpaceContainer vertical>\n        <SVGPhone>\n          <div className=\"ff-phone\">\n            <div className=\"ff-phone__contact\">\n              <Avatar id=\"B\" size=\"large\" />\n              <div className=\"ff-phone__name\">Bob {'>'}</div>\n            </div>\n            <div className=\"ff-phone__thread\">\n              <div className=\"ff-phone__message\">\n                <Translate pt=\"Ow\" en=\"Dude\" />\n              </div>\n              <div className=\"ff-phone__message\">\n                <Translate pt=\"fala aí\" en=\"Answer this\" />\n              </div>\n              <div className=\"ff-phone__message\">\n                <Translate pt=\"Diga uma palavra relacionada à...\" en=\"Say a single word related to...\" />\n              </div>\n              <div className=\"ff-phone__timestamp\">\n                <Translate pt=\"Recebido\" en=\"Received\" /> {now}\n              </div>\n              <div\n                className={clsx('ff-phone__message ff-phone__message--important', getAnimationClass('tada'))}\n              >\n                {seed.card.text}\n              </div>\n            </div>\n          </div>\n        </SVGPhone>\n\n        <Input\n          onChange={(e) => setValue(e.target.value)}\n          size=\"large\"\n          placeholder={translate('Escreva aqui', 'Write here')}\n          onPressEnter={() => updateData({ singleClue: value }, true)}\n        />\n\n        <Button block onClick={() => updateData({ singleClue: value }, true)} type=\"primary\">\n          <Translate pt=\"Enviar\" en=\"Submit\" />\n        </Button>\n      </SpaceContainer>\n    </div>\n  );\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { FlagFilled, HeartFilled, MessageFilled } from '@ant-design/icons';\nimport { Button, Input } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Icons\nimport { SixPackIcon } from 'icons/SixPackIcon';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { GroupQuestionCard } from 'components/cards/GroupQuestionCard';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { Title } from 'components/text';\n// Internal\nimport type { SeedEntryMenteColetiva } from '../../utils/types';\nimport { SVGPhone } from '../SVGPhone';\n\ntype SeedMenteColetivaProps = {\n  seed: SeedEntryMenteColetiva;\n  updateData: GenericComponent;\n};\n\nexport function SeedMenteColetiva({ seed, updateData }: SeedMenteColetivaProps) {\n  const { translate } = useLanguage();\n  const [value1, setValue1] = useState('');\n  const [value2, setValue2] = useState('');\n\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\" colorScheme=\"light\">\n        <Translate\n          pt=\"Depois de ver alguns vídeos, você decidiu fazer esse teste no TikTok\"\n          en=\"After watching some videos, you decided to do this test on TikTok\"\n        />\n      </Title>\n\n      <SpaceContainer vertical>\n        <SVGPhone>\n          <div className=\"tt-phone\">\n            <div className=\"tt-phone__header\">\n              <span>STEM</span>\n              <span>Following</span>\n              <span>For You</span>\n            </div>\n\n            <div className=\"tt-phone__icons\">\n              <Avatar id=\"D\" size=\"large\" />\n              <MessageFilled />\n              <HeartFilled />\n              <FlagFilled />\n            </div>\n\n            <div className=\"tt-phone__background\">\n              <SixPackIcon />\n            </div>\n\n            <div className=\"tt-phone__question\">\n              <GroupQuestionCard question={seed.card} overrideNumber={2} />\n            </div>\n          </div>\n        </SVGPhone>\n        <SpaceContainer>\n          <Input\n            onChange={(e) => setValue1(e.target.value)}\n            size=\"large\"\n            placeholder={translate('Resposta 1', 'Answer 1')}\n          />\n          <Input\n            onChange={(e) => setValue2(e.target.value)}\n            size=\"large\"\n            placeholder={translate('Resposta 2', 'Answer 2')}\n          />\n        </SpaceContainer>\n        <Button\n          block\n          onClick={() => updateData({ answers: [value1, value2] }, true)}\n          disabled={!value1 || !value2}\n        >\n          <Translate pt=\"Enviar\" en=\"Submit\" />\n        </Button>\n      </SpaceContainer>\n    </div>\n  );\n}\n","import moment from 'moment';\n// Ant Design Resources\nimport { Button } from 'antd';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { ImageCard } from 'components/image-cards';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { Instruction, Title } from 'components/text';\n// Internal\nimport type { SeedEntryContadoresHistorias } from '../../utils/types';\nimport { SVGPhone } from '../SVGPhone';\n\nconst now = moment().format('MMMM YYYY, h:mm');\n\ntype SeedContadoresHistoriasProps = {\n  seed: SeedEntryContadoresHistorias;\n  updateData: GenericComponent;\n};\n\nexport function SeedContadoresHistorias({ seed, updateData }: SeedContadoresHistoriasProps) {\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\" colorScheme=\"light\">\n        <Translate\n          pt=\"Sua mãe te mandou uma mensagem e você precisa responder antes de se arrumar\"\n          en=\"Your mom sent you a message and you must answer it before leaving\"\n        />\n      </Title>\n\n      <SpaceContainer direction=\"vertical\">\n        <SVGPhone>\n          <div className=\"ff-phone\">\n            <div className=\"ff-phone__contact\">\n              <Avatar id=\"B\" />\n              <div className=\"ff-phone__name\">\n                <Translate pt=\"Mamãe\" en=\"Mommy\" /> {'>'}\n              </div>\n            </div>\n            <div className=\"ff-phone__thread\">\n              <div className=\"ff-phone__message\">\n                <Translate pt=\"Filho(a)\" en=\"Dear\" />\n              </div>\n              <div className=\"ff-phone__message\">\n                <Translate pt=\"O que é isso?\" en=\"What is this?\" />\n              </div>\n              <div className=\"ff-phone__timestamp\">\n                <Translate pt=\"Recebido\" en=\"Received\" /> {now}\n              </div>\n              <div className=\"ff-phone__message\">\n                <ImageCard id={seed.card} cardWidth={100} />\n              </div>\n            </div>\n          </div>\n        </SVGPhone>\n\n        <Instruction>\n          <Translate\n            pt=\"Você pode clicar na imagem para ampliá-la.\"\n            en=\"You can click on the image to enlarge it.\"\n          />\n        </Instruction>\n\n        <SpaceContainer wrap>\n          {seed.prompts.map((prompt) => (\n            <Button\n              key={prompt.id}\n              onClick={() => updateData({ prompt: prompt.text }, true)}\n              type=\"primary\"\n              size=\"large\"\n            >\n              {prompt.text}\n            </Button>\n          ))}\n        </SpaceContainer>\n      </SpaceContainer>\n    </div>\n  );\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, Input, Space } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { DualTranslate, Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { Instruction, RuleInstruction, Title } from 'components/text';\n// Internal\nimport type { SeedEntryParty } from '../../utils/types';\n\ntype SeedPartyProps = {\n  seed: SeedEntryParty;\n  updateData: GenericComponent;\n};\n\nexport function SeedParty({ seed, updateData }: SeedPartyProps) {\n  const { translate } = useLanguage();\n  const [answers, setAnswers] = useState<StringDictionary>({});\n\n  const updateAnswers = (key: string, value: string) => {\n    setAnswers((v) => ({ ...v, [key]: value }));\n  };\n\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\" colorScheme=\"light\">\n        <Translate pt=\"Responda as perguntas a seguir\" en=\"Answer the following prompts\" />\n      </Title>\n\n      <SpaceContainer vertical>\n        <RuleInstruction type=\"rule\">\n          <Translate\n            pt={\n              <>\n                Seja criativo nas respostas, porém evite palavras que possam entregar sua identidade.\n                <br />\n                Nem todas as repostar serão utilizadas no jogo.\n              </>\n            }\n            en={\n              <>\n                Be creative, but avoid words that may give away your identity.\n                <br />\n                Not all answers will be used in the game.\n              </>\n            }\n          />\n        </RuleInstruction>\n\n        <Instruction contained>\n          <Space direction=\"vertical\">\n            {seed.cards.map((card) => {\n              return (\n                <div className=\"\" key={card.id}>\n                  <label htmlFor={`input-${card.id}`}>\n                    <DualTranslate>{card.text}</DualTranslate>\n                  </label>\n                  <Input\n                    id={`input-${card.id}`}\n                    size=\"large\"\n                    value={answers?.[card?.id] ?? ''}\n                    placeholder={translate('Escreva aqui', 'Write here')}\n                    onChange={(event) => updateAnswers(card.id, event.target.value)}\n                  />\n                </div>\n              );\n            })}\n          </Space>\n        </Instruction>\n\n        <Button\n          block\n          onClick={() => updateData({ partyAnswers: answers }, true)}\n          type=\"primary\"\n          disabled={Object.keys(answers).length < seed.cards.length}\n        >\n          <Translate pt=\"Enviar\" en=\"Submit\" />\n        </Button>\n      </SpaceContainer>\n    </div>\n  );\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Steps } from 'antd';\n// Types\nimport type { GamePlayer, GamePlayers } from 'types/player';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useMock } from 'hooks/useMock';\nimport { useStep } from 'hooks/useStep';\n// Components\nimport { Translate } from 'components/language';\nimport { Step, type StepProps } from 'components/steps';\nimport { StepTitle } from 'components/text';\n// Internal\nimport type { SeedEntry, SubmitAnswerPayload } from './utils/types';\nimport { buildSeedingSteps } from './utils/helpers';\nimport { mockSeeding } from './utils/mock';\nimport { SeedArteRuim } from './components/Seeds/SeedArteRuim';\nimport { SeedLabirintoSecreto } from './components/Seeds/SeedLabirintoSecreto';\nimport { SeedClubber } from './components/Seeds/SeedClubber';\nimport { SeedOndaTelepatica } from './components/Seeds/SeedOndaTelepatica';\nimport { SeedPolemicaDaVez } from './components/Seeds/SeedPolemicaDaVez';\nimport { SeedRetratoFalado } from './components/Seeds/SeedRetratoFalado';\nimport { SeedUeSoIsso } from './components/Seeds/SeedUeSoIsso';\nimport { SeedMenteColetiva } from './components/Seeds/SeedMenteColetiva';\nimport { SeedContadoresHistorias } from './components/Seeds/SeedContadoresHistorias';\nimport { SeedParty } from './components/Seeds/SeedParty';\n\ntype StepSeedingProps = {\n  players: GamePlayers;\n  user: GamePlayer;\n  onSubmitData: (payload: SubmitAnswerPayload) => void;\n} & Pick<StepProps, 'announcement'>;\n\nexport const StepSeeding = ({ announcement, user, onSubmitData }: StepSeedingProps) => {\n  const { step: currentStep, goToNextStep } = useStep(0);\n\n  const [data, setData] = useState<PlainObject>({});\n  const { translate } = useLanguage();\n\n  const updateData = (objValue: PlainObject, next = false) => {\n    setData((v) => ({ ...v, ...objValue }));\n    if (next) {\n      goToNextStep();\n    }\n  };\n\n  const seeds = user.seeds ?? [];\n  const items = buildSeedingSteps(seeds, translate);\n  const currentSeed: SeedEntry = seeds[currentStep];\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <StepTitle size=\"small\">\n        {seeds.length > 1 ? (\n          <Translate pt=\"Termine todas suas obrigações\" en=\"Finish all your chores\" />\n        ) : (\n          <Translate pt=\"Hora de se arrumar\" en=\"Time to get ready\" />\n        )}\n      </StepTitle>\n      <div className=\"full-width container center\">\n        <Steps current={currentStep} items={items} />\n        {/* DEV only */}\n        {Boolean(currentSeed?.type) && <DevMock seeds={seeds} onSubmitData={onSubmitData} />}\n\n        {currentSeed?.type === 'arte-ruim' && <SeedArteRuim seed={currentSeed} updateData={updateData} />}\n\n        {currentSeed?.type === 'contadores-historias' && (\n          <SeedContadoresHistorias seed={currentSeed} updateData={updateData} />\n        )}\n\n        {currentSeed?.type === 'labirinto-secreto' && (\n          <SeedLabirintoSecreto seed={currentSeed} updateData={updateData} user={user} />\n        )}\n\n        {currentSeed?.type === 'mente-coletiva' && (\n          <SeedMenteColetiva seed={currentSeed} updateData={updateData} />\n        )}\n\n        {currentSeed?.type === 'onda-telepatica' && (\n          <SeedOndaTelepatica seed={currentSeed} updateData={updateData} />\n        )}\n\n        {currentSeed?.type === 'polemica-da-vez' && (\n          <SeedPolemicaDaVez seed={currentSeed} updateData={updateData} />\n        )}\n\n        {currentSeed?.type === 'retrato-falado' && (\n          <SeedRetratoFalado seed={currentSeed} updateData={updateData} />\n        )}\n\n        {currentSeed?.type === 'ue-so-isso' && <SeedUeSoIsso seed={currentSeed} updateData={updateData} />}\n\n        {currentSeed?.type === 'party' && <SeedParty seed={currentSeed} updateData={updateData} />}\n\n        {currentSeed?.type === 'clubber' && (\n          <SeedClubber\n            seed={currentSeed}\n            updateData={updateData}\n            user={user}\n            onSubmitData={onSubmitData}\n            data={data}\n          />\n        )}\n      </div>\n    </Step>\n  );\n};\n\ntype DevMockProps = {\n  onSubmitData: GenericFunction;\n  seeds: SeedEntry[];\n};\n\nfunction DevMock({ onSubmitData, seeds }: DevMockProps) {\n  // DEV\n  useMock(() => {\n    onSubmitData({ data: mockSeeding(seeds) });\n  });\n\n  return <></>;\n}\n","// Types\nimport type { PhaseProps } from 'types/game';\n// Hooks\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { SmsIcon } from 'icons/SmsIcon';\n// Components\nimport { Translate } from 'components/language';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\n// Internal\nimport { useOnSubmitSeedAPIRequest } from './utils/api-requests';\nimport { StepSeeding } from './StepSeeding';\n\nexport function PhaseSeeding({ players, state }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, setStep } = useStep();\n\n  const onSubmitData = useOnSubmitSeedAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<SmsIcon />}\n      title={<Translate pt=\"Seu amigo te chamou pra balada!\" en=\"Your friend invited to the club!\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <Instruction>\n        {user?.seeds?.length > 1 ? (\n          <Translate\n            pt=\"Mas antes de ir, você tem que fazer suas obrigações...\"\n            en=\"But before that, you must finish some chores...\"\n          />\n        ) : (\n          <Translate pt=\"Mas antes de ir, escolha seu modelito\" en=\"Time to get ready!!!\" />\n        )}\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer phase={state?.phase} allowedPhase={PHASES.MEGAMIX.SEEDING}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepSeeding players={players} announcement={announcement} onSubmitData={onSubmitData} user={user} />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","// Components\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { PlayersHighlight } from 'components/metrics/PlayersHighlight';\n\ntype WinningCountProps = {\n  winners: number;\n  total: number;\n};\n\nexport function WinningCount({ winners, total }: WinningCountProps) {\n  return (\n    <SpaceContainer>\n      <PlayersHighlight>{winners}</PlayersHighlight> <span>vs</span>{' '}\n      <PlayersHighlight className=\"grayscale\">{total - winners}</PlayersHighlight>\n    </SpaceContainer>\n  );\n}\n","// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { CanvasSVG } from 'components/canvas';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n// Internal\nimport type { ResultComponentProps } from '../../utils/types';\n\nexport function ResultArteRuim({ track, winningValues, containerWidth }: ResultComponentProps) {\n  const width = useCardWidth(winningValues.length + 1, {\n    gap: 9,\n    minWidth: 80,\n    maxWidth: 200,\n    containerWidth,\n  });\n\n  if (track.variant === 'drawings') {\n    const winningArtworks: PlainObject[] = track.data.options.filter((option: PlainObject) => {\n      return winningValues.includes(option.playerId);\n    });\n\n    return (\n      <>\n        <Instruction>\n          <Translate pt=\"A arte mais votada foi\" en=\"The most popular art was\" />:\n        </Instruction>\n        <div className=\"track-result-values__cards\">\n          {winningArtworks.map((value) => (\n            <div key={value.playerId} className=\"track-result-values__text-value\">\n              <CanvasSVG drawing={value.drawing} width={width} className=\"a-drawing\" />\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  const winningCards: PlainObject[] = track.data.cards.filter((option: PlainObject) => {\n    return winningValues.includes(option.id);\n  });\n\n  return (\n    <>\n      <Instruction>\n        <Translate pt=\"O mais votado foi\" en=\"The most popular was\" />:\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningCards.map((value) => (\n          <div key={value.id} className=\"track-result-values__text-value\">\n            {value.text}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n// Internal\nimport type { ResultComponentProps } from '../../utils/types';\n\nexport function ResultCruzaPalavras({ track, winningValues }: ResultComponentProps) {\n  const cheatSheet: PlainObject = {\n    0: [track.data.cards[0].text, track.data.cards[2].text],\n    1: [track.data.cards[0].text, track.data.cards[3].text],\n    2: [track.data.cards[1].text, track.data.cards[2].text],\n    3: [track.data.cards[1].text, track.data.cards[3].text],\n  };\n\n  return (\n    <>\n      <Instruction>\n        <Translate pt=\"O mais votado foi\" en=\"The most popular was\" />:\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => (\n          <div key={value} className=\"track-result-values__text-value\">\n            {cheatSheet[value][0]} {'+'} {cheatSheet[value][1]}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n// Internal\nimport type { ResultComponentProps } from '../../utils/types';\nimport { Candidate } from '../Candidate';\n\nexport function ResultNamoroOuAmizade({\n  track,\n  winningValues,\n  winningTeam,\n  playersList,\n}: ResultComponentProps) {\n  return (\n    <>\n      <Instruction>\n        <Translate pt=\"O melhor partido foi\" en=\"The best match was\" />:{' '}\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => {\n          const index = track.data.heads.findIndex((head: PlainObject) => head.id === value);\n          return (\n            <Candidate\n              key={value}\n              head={track.data.heads[index]}\n              body={track.data.bodies[index]}\n              interest={track.data.interests[index]}\n              need={track.data.needs[index]}\n              funFact={track.data.funFacts[index]}\n            />\n          );\n        })}\n      </div>\n    </>\n  );\n}\n","import { HouseCard } from 'games/na-rua-do-medo/components/HouseCard';\n// Utils\nimport { LETTERS } from 'utils/constants';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n// Internal\nimport type { ResultComponentProps, StreetCard } from '../../utils/types';\n\nexport function ResultNaRuaDoMedo({ track, winningValues, winningTeam, playersList }: ResultComponentProps) {\n  if (track.variant === 'house') {\n    const winningCards: StreetCard[] = track.data.options.filter((option: PlainObject) => {\n      return winningValues.includes(option.id);\n    });\n\n    return (\n      <>\n        <Instruction>\n          <Translate pt=\"A escolha mais popular foi\" en=\"The most popular choice was\" />:\n        </Instruction>\n        <div className=\"track-result-values__cards\">\n          {winningCards.map((card) => (\n            <div key={card.id} className=\"track-result-values__text-value\">\n              <HouseCard card={card} candyLeftover={0} preview={false} />\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Instruction>\n        <Translate pt=\"A rua mais votada foi\" en=\"The most voted street was\" />:\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => (\n          <div key={value} className=\"track-result-values__text-value\">\n            {LETTERS[Number(value)]}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { CanvasSVG } from 'components/canvas';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n// Internal\nimport type { ResultComponentProps } from '../../utils/types';\n\nexport function ResultRetratoFalado({ track, winningValues, containerWidth }: ResultComponentProps) {\n  const width = useCardWidth(winningValues.length + 1, {\n    gap: 9,\n    minWidth: 80,\n    maxWidth: 200,\n    containerWidth,\n  });\n\n  const winningArtworks: PlainObject[] = track.data.options.filter((option: PlainObject) => {\n    return winningValues.includes(option.playerId);\n  });\n\n  return (\n    <>\n      <Instruction>\n        <Translate pt=\"O monstro escolhido foi\" en=\"The best monster was\" />:\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningArtworks.map((value) => (\n          <div className=\"track-result-values__text-value\" key={value.drawing}>\n            <CanvasSVG drawing={value.drawing} width={width} className=\"a-drawing\" />\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n// Internal\nimport type { ResultComponentProps } from '../../utils/types';\nimport { getMovieTitles } from '../../utils/helpers';\n\nexport function ResultVamosAoCinema({\n  track,\n  winningValues,\n  winningTeam,\n  playersList,\n}: ResultComponentProps) {\n  const movies: StringDictionary = getMovieTitles(track.data.movies);\n\n  return (\n    <>\n      <Instruction>\n        <Translate pt=\"A filme mais votado foi\" en=\"The most popular movie was\" />:\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => {\n          return (\n            <div key={`winning-${value}`} className=\"track-result-values__text-value\">\n              {movies[value]}\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n}\n","// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n// Internal\nimport type { ResultComponentProps } from '../../utils/types';\n\nexport function ResultMegamix({ track, winningValues, winningTeam, playersList }: ResultComponentProps) {\n  return (\n    <>\n      <Instruction>\n        <Translate pt=\"O mais votado foi\" en=\"The most popular was\" />:\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => (\n          <div key={value} className=\"track-result-values__text-value\">\n            {track.data.card.options[Number(value)]}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { ImageBlurButtonContainer, ImageCard } from 'components/image-cards';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n// Internal\nimport type { ResultComponentProps } from '../../utils/types';\n\nexport function ResultImage({ winningValues, containerWidth }: ResultComponentProps) {\n  const width = useCardWidth(winningValues.length + 1, {\n    gap: 9,\n    minWidth: 80,\n    maxWidth: 200,\n    containerWidth,\n  });\n\n  return (\n    <>\n      <Instruction>\n        {winningValues.length > 1 ? (\n          <Translate pt=\"As cartas mais votadas foram\" en=\"Most voted cards are\" />\n        ) : (\n          <Translate pt=\"A carta mais votada foi\" en=\"Most voted card is\" />\n        )}\n        :\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((cardId) => (\n          <ImageBlurButtonContainer cardId={cardId} key={`table-focus-${cardId}`} className=\"margin\">\n            <ImageCard id={cardId} cardWidth={width} className=\"d-table__image-card\" />\n          </ImageBlurButtonContainer>\n        ))}\n      </div>\n    </>\n  );\n}\n","// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n// Internal\nimport type { ResultComponentProps } from '../../utils/types';\n\nexport function ResultText({ winningTeam, winningValues, playersList }: ResultComponentProps) {\n  return (\n    <>\n      <Instruction>\n        {winningValues.length > 1 ? (\n          <Translate pt=\"As votadas foram\" en=\"Most voted ones are\" />\n        ) : (\n          <Translate pt=\"A mais votada foi\" en=\"Most voted one is\" />\n        )}\n        :\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => (\n          <div key={value} className=\"track-result-values__text-value\">\n            {value}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { CharacterCard } from 'components/cards/CharacterCard';\nimport { ImageBlurButtonContainer } from 'components/image-cards';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n// Internal\nimport type { ResultComponentProps } from '../../utils/types';\n\nexport function ResultCharacter({ winningValues, containerWidth }: ResultComponentProps) {\n  const width = useCardWidth(winningValues.length + 1, {\n    gap: 9,\n    minWidth: 80,\n    maxWidth: 200,\n    containerWidth,\n  });\n\n  return (\n    <>\n      <Instruction>\n        {winningValues.length > 1 ? (\n          <Translate pt=\"As personagens mais votadas foram\" en=\"Most voted characters are\" />\n        ) : (\n          <Translate pt=\"A personagem mais votada foi\" en=\"Most voted character is\" />\n        )}\n        :\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((cardId) => (\n          <ImageBlurButtonContainer cardId={cardId} key={cardId}>\n            <CharacterCard\n              size={width}\n              character={{\n                id: cardId,\n                name: { pt: '', en: '' },\n              }}\n              overlayColor=\"yellow\"\n            />\n          </ImageBlurButtonContainer>\n        ))}\n      </div>\n    </>\n  );\n}\n","// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n// Internal\nimport type { ResultComponentProps } from '../../utils/types';\n\nexport function ResultOndaTelepatica({ winningTeam, winningValues, playersList }: ResultComponentProps) {\n  return (\n    <>\n      <Instruction>\n        {winningValues.length > 1 ? (\n          <Translate pt=\"As votadas foram\" en=\"Most voted ones are\" />\n        ) : (\n          <Translate pt=\"A mais votada foi\" en=\"Most voted one is\" />\n        )}\n        :\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => (\n          <div key={value} className=\"track-result-values__text-value\">\n            {value === 'center' && <Translate pt=\"Centro\" en=\"Center\" />}\n            {value === 'left' && <Translate pt=\"Esquerda\" en=\"Left\" />}\n            {value === 'right' && <Translate pt=\"Direita\" en=\"Right\" />}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","// Components\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n// Internal\nimport type { ResultComponentProps } from '../../utils/types';\n\nexport function ResultComunicacaoAlienigena({ winningValues }: ResultComponentProps) {\n  return (\n    <>\n      <Instruction>\n        {winningValues.length > 1 ? (\n          <Translate pt=\"Os objetos mais votados foram\" en=\"Most voted objects are\" />\n        ) : (\n          <Translate pt=\"O objeto mais votado foi\" en=\"Most voted object is\" />\n        )}\n        :\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((cardId) => (\n          <ItemCard\n            id={String(cardId)}\n            key={`table-focus-${cardId}`}\n            width={80}\n            className=\"d-table__image-card\"\n          />\n        ))}\n      </div>\n    </>\n  );\n}\n","// Icons\nimport { SpeechBubbleAcceptedIcon } from 'icons/SpeechBubbleAcceptedIcon';\nimport { SpeechBubbleDeclinedIcon } from 'icons/SpeechBubbleDeclinedIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n// Internal\nimport type { ResultComponentProps } from '../../utils/types';\n\nexport function ResultTaNaCara({ winningValues }: ResultComponentProps) {\n  return (\n    <>\n      <Instruction>\n        {winningValues.length > 1 ? (\n          <Translate pt=\"As respostas votadas foram\" en=\"Most voted answers are\" />\n        ) : (\n          <Translate pt=\"A resposta mais votada foi\" en=\"Most voted answer is\" />\n        )}\n        :\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => (\n          <div key={`answer-${value}`} className=\"track-result-values__text-value\">\n            <IconAvatar\n              size=\"large\"\n              icon={value === 'yes' ? <SpeechBubbleAcceptedIcon /> : <SpeechBubbleDeclinedIcon />}\n            />\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","import { Fragment } from 'react';\n// Ant Design Resources\nimport { RightSquareOutlined } from '@ant-design/icons';\n// Utils\nimport { LETTERS } from 'utils/constants';\n// Icons\nimport { MapIcon } from 'icons/MapIcon';\n// Components\nimport { IconAvatar } from 'components/avatars/IconAvatar';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n// Internal\nimport type { ResultComponentProps } from '../../utils/types';\n\nexport function ResultLabirintoSecreto({ track, winningValues }: ResultComponentProps) {\n  return (\n    <>\n      <Instruction>\n        <Translate pt=\"O caminho mais votado foi\" en=\"The most popular path was\" />:\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => {\n          const index = Number(value);\n          const entry = track.data?.options?.[index] ?? {};\n          return (\n            <div key={index} className=\"cm-clues__clue cm-clues__clue--small\">\n              {LETTERS[Number(value)]}\n              <IconAvatar icon={<MapIcon />} size={48} />\n              {Object.values<PlainObject>(entry).map((option, index, arr) => {\n                return (\n                  <Fragment key={`${option.playerId}-${index}`}>\n                    <span className=\"cm-clues__clue-text\">{option.text}</span>\n                    {arr.length - 1 > index && <RightSquareOutlined />}\n                  </Fragment>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n}\n","// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n// Internal\nimport type { ResultComponentProps } from '../../utils/types';\nimport { SplatterSVG } from '../Tracks/TrackPalhetaDeFores';\n\nexport function ResultPalhetaDeCores({ winningValues }: ResultComponentProps) {\n  return (\n    <>\n      <Instruction>\n        {winningValues.length > 1 ? (\n          <Translate pt=\"As amostras mais selecionadas foram\" en=\"The most selected swatches were\" />\n        ) : (\n          <Translate pt=\"A amostra mais selecionada foi\" en=\"The most selected swatch was\" />\n        )}\n        :\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => (\n          <div key={value} className=\"track-result-values__text-value\">\n            <SplatterSVG color={value} style={{ color: value }} width={48} />\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","// Components\nimport { AvatarName } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n// Internal\nimport type { ResultComponentProps } from '../../utils/types';\n\nexport function ResultQuemNaoMata({ winningValues, players }: ResultComponentProps) {\n  return (\n    <>\n      <Instruction>\n        {winningValues.length > 1 ? (\n          <Translate pt=\"Os jogadores mais foram\" en=\"Most voted players are\" />\n        ) : (\n          <Translate pt=\"O jogador mais votado foi\" en=\"Most voted player is\" />\n        )}\n        :\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => (\n          <div key={value} className=\"track-result-values__text-value\">\n            <AvatarName player={players[value]} />\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","// Components\nimport { AvatarCard } from 'components/avatars';\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n// Internal\nimport type { ResultComponentProps } from '../../utils/types';\n\nexport function ResultWhoSaidThis({ track, winningValues, players }: ResultComponentProps) {\n  return (\n    <>\n      <Instruction>\n        {winningValues.length > 1 ? (\n          <Translate pt=\"Os votadas foram\" en=\"Most voted ones are\" />\n        ) : (\n          <Translate pt=\"O mais votada foi\" en=\"Most voted one is\" />\n        )}\n        :\n      </Instruction>\n\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => (\n          <div key={value}>\n            <AvatarCard player={players[value]} withName size=\"small\" />\n          </div>\n        ))}\n      </div>\n      <div className=\"track-result-values__cards\">\n        <Card size=\"small\" hideHeader>\n          \"{track.data.card.text}\"\n        </Card>\n      </div>\n    </>\n  );\n}\n","// Types\nimport type { CrimesHediondosCard } from 'types/tdr';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { CrimeItemCard } from 'components/cards/CrimeItemCard';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n// Internal\nimport type { ResultComponentProps } from '../../utils/types';\n\nexport function ResultCrimesHediondos({ track, winningValues, containerWidth }: ResultComponentProps) {\n  const width = useCardWidth(winningValues.length + 1, {\n    gap: 9,\n    minWidth: 80,\n    maxWidth: 200,\n    containerWidth,\n  });\n\n  return (\n    <>\n      <Instruction>\n        {winningValues.length > 1 ? (\n          <Translate pt=\"As cartas mais votadas foram\" en=\"Most voted cards are\" />\n        ) : (\n          <Translate pt=\"A carta mais votada foi\" en=\"Most voted card is\" />\n        )}\n        :\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((cardId) => {\n          const item = track.data.cards.find((card: CrimesHediondosCard) => card.id === cardId);\n\n          if (!item) {\n            return null;\n          }\n\n          return <CrimeItemCard key={item.id} item={item} cardWidth={width} className=\"margin\" />;\n        })}\n      </div>\n    </>\n  );\n}\n","// Internal\nimport type { ResultComponentProps } from '../utils/types';\nimport { WinningCount } from './WinningCount';\nimport { FallbackComponent } from './FallbackComponent';\nimport { ResultArteRuim } from './Results/ResultArteRuim';\nimport { ResultCruzaPalavras } from './Results/ResultCruzaPalavras';\nimport { ResultNamoroOuAmizade } from './Results/ResultNamoroOuAmizade';\nimport { ResultNaRuaDoMedo } from './Results/ResultNaRuaDoMedo';\nimport { ResultRetratoFalado } from './Results/ResultRetratoFalado';\nimport { ResultVamosAoCinema } from './Results/ResultVamosNoCinema';\nimport { ResultMegamix } from './Results/ResultMegamix';\nimport { ResultImage } from './Results/ResultImage';\nimport { ResultText } from './Results/ResultText';\nimport { ResultCharacter } from './Results/ResultCharacter';\nimport { ResultOndaTelepatica } from './Results/ResultOndaTelepatica';\nimport { ResultComunicacaoAlienigena } from './Results/ResultComunicacaoAlienigena';\nimport { ResultTaNaCara } from './Results/ResultTaNaCara';\nimport { ResultLabirintoSecreto } from './Results/ResultLabirintoSecreto';\nimport { ResultPalhetaDeCores } from './Results/ResultPalhetaDeCores';\nimport { ResultQuemNaoMata } from './Results/ResultQuemNaoMata';\nimport { ResultWhoSaidThis } from './Results/ResultWhoSaidThis';\nimport { ResultCrimesHediondos } from './Results/ResultCrimesHediondos';\n// Type\n\nexport const ResultValueDelegator = (props: ResultComponentProps) => {\n  const ResultComponent =\n    {\n      'arte-ruim': ResultArteRuim,\n      'comunicacao-alienigena': ResultComunicacaoAlienigena,\n      'contadores-historias': ResultImage,\n      'crimes-hediondos': ResultCrimesHediondos,\n      'cruza-palavras': ResultCruzaPalavras,\n      'detetives-imaginativos': ResultImage,\n      esquiadores: ResultText,\n      'espiao-entre-nos': ResultText,\n      'fileira-de-fatos': ResultText,\n      'galeria-de-sonhos': ResultImage,\n      'labirinto-secreto': ResultLabirintoSecreto,\n      'megamix-best-of-three': ResultMegamix,\n      'megamix-this-that': ResultMegamix,\n      'megamix-who-said-this': ResultWhoSaidThis,\n      'mente-coletiva': ResultText,\n      'namoro-ou-amizade': ResultNamoroOuAmizade,\n      'na-rua-do-medo': ResultNaRuaDoMedo,\n      'onda-telepatica': ResultOndaTelepatica,\n      'palheta-de-cores': ResultPalhetaDeCores,\n      'polemica-da-vez': ResultText,\n      'porta-dos-desesperados': ResultImage,\n      'quem-nao-mata': ResultQuemNaoMata,\n      'quem-sou-eu': ResultCharacter,\n      'retrato-falado': ResultRetratoFalado,\n      'super-campeonato': ResultCharacter,\n      'testemunha-ocular': ResultImage,\n      'ta-na-cara': ResultTaNaCara,\n      'ue-so-isso': ResultText,\n      'vamos-ao-cinema': ResultVamosAoCinema,\n    }?.[props.track.game] ?? FallbackComponent;\n\n  return (\n    <>\n      <WinningCount winners={props.winningTeam.length} total={props.playersList.length} />\n      <ResultComponent {...props} />\n    </>\n  );\n};\n","import { has } from 'lodash';\nimport type { ReactNode } from 'react';\n// Types\nimport type { GamePlayer } from 'types/player';\n// Components\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\n\ntype SpacePlayerCheckWrapperProps = {\n  playersList: GamePlayer[];\n  paths: string[];\n  children: ReactNode;\n};\nexport function SpacePlayerCheckWrapper({ playersList, paths, children }: SpacePlayerCheckWrapperProps) {\n  const okToProceed = playersList.every((player) => {\n    return paths.every((path) => {\n      return has(player, path);\n    });\n  });\n\n  if (okToProceed) {\n    return <SpaceContainer wrap>{children}</SpaceContainer>;\n  }\n\n  return <></>;\n}\n","// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { CanvasSVG } from 'components/canvas';\n// Internal\nimport type { VoteComponentProps } from '../../utils/types';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteArteRuim({ track, playersList }: VoteComponentProps) {\n  const width = useCardWidth(playersList.length + 1, {\n    gap: 9,\n    minWidth: 80,\n    maxWidth: 200,\n  });\n\n  if (track.variant === 'drawings') {\n    return (\n      <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n        {playersList.map((player) => {\n          const drawing = track.data.options.find(\n            (entry: PlainObject) => entry.playerId === player.data.value,\n          );\n          return (\n            <div key={`vote-${player.id}`} className=\"player-vote\">\n              <Avatar id={player.avatarId} />\n              <div>{player.name}</div>\n              {Boolean(drawing) && (\n                <CanvasSVG drawing={drawing.drawing} width={width} className=\"a-drawing\" />\n              )}\n            </div>\n          );\n        })}\n      </SpacePlayerCheckWrapper>\n    );\n  }\n\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => {\n        const card = track.data.cards.find((entry: PlainObject) => entry.id === player.data.value);\n        return (\n          <div key={`vote-${player.id}`} className=\"player-vote\">\n            <Avatar id={player.avatarId} />\n            <div className=\"player-vote__name\">{player.name}</div>\n            <div className=\"player-vote__value\">{Boolean(card) && card.text}</div>\n          </div>\n        );\n      })}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Components\nimport { Avatar } from 'components/avatars';\n// Internal\nimport type { VoteComponentProps } from '../../utils/types';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteCruzaPalavras({ track, playersList }: VoteComponentProps) {\n  const cheatSheet: PlainObject = {\n    0: [track.data.cards[0].text, track.data.cards[2].text],\n    1: [track.data.cards[0].text, track.data.cards[3].text],\n    2: [track.data.cards[1].text, track.data.cards[2].text],\n    3: [track.data.cards[1].text, track.data.cards[3].text],\n  };\n\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div>{player.name}</div>\n          <div key={player.data.value} className=\"track-result-values__text-value\">\n            {cheatSheet[player.data.value][0]} {'+'} {cheatSheet[player.data.value][1]}\n          </div>\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Components\nimport { Avatar } from 'components/avatars';\n// Internal\nimport type { VoteComponentProps } from '../../utils/types';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\nimport { Candidate } from '../Candidate';\n\nexport function VoteNamoroOuAmizade({ track, playersList }: VoteComponentProps) {\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => {\n        const index = track.data.heads.findIndex((head: PlainObject) => head.id === player.data.value);\n        return (\n          <div key={`vote-${player.id}`} className=\"player-vote\">\n            <Avatar id={player.avatarId} />\n            <div>{player.name}</div>\n            {index > -1 && (\n              <Candidate\n                key={`date-${player.id}`}\n                head={track.data.heads[index]}\n                body={track.data.bodies[index]}\n                interest={track.data.interests[index]}\n                need={track.data.needs[index]}\n                funFact={track.data.funFacts[index]}\n              />\n            )}\n          </div>\n        );\n      })}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","import { HouseCard } from 'games/na-rua-do-medo/components/HouseCard';\n// Utils\nimport { LETTERS } from 'utils/constants';\n// Components\nimport { Avatar } from 'components/avatars';\n// Internal\nimport type { VoteComponentProps } from '../../utils/types';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteNaRuaDoMedo({ track, playersList }: VoteComponentProps) {\n  if (track.variant === 'house') {\n    return (\n      <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n        {playersList.map((player) => {\n          const house = track.data.options.find((entry: PlainObject) => entry.id === player.data.value);\n          return (\n            <div key={`vote-${player.id}`} className=\"player-vote\">\n              <Avatar id={player.avatarId} />\n              <div>{player.name}</div>\n              <HouseCard card={house} candyLeftover={0} preview={false} />\n            </div>\n          );\n        })}\n      </SpacePlayerCheckWrapper>\n    );\n  }\n\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => {\n        return (\n          <div key={`vote-${player.id}`} className=\"player-vote\">\n            <Avatar id={player.avatarId} />\n            <div className=\"player-vote__name\">{player.name}</div>\n            <div className=\"player-vote__value\">{LETTERS[player.data.value]}</div>\n          </div>\n        );\n      })}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { CanvasSVG } from 'components/canvas';\n// Internal\nimport type { VoteComponentProps } from '../../utils/types';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteRetratoFalado({ track, playersList }: VoteComponentProps) {\n  const width = useCardWidth(playersList.length + 1, {\n    gap: 9,\n    minWidth: 80,\n    maxWidth: 200,\n  });\n\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => {\n        const drawing = track.data.options.find((entry: PlainObject) => entry.playerId === player.data.value);\n        return (\n          <div key={`vote-${player.id}`} className=\"player-vote\">\n            <Avatar id={player.avatarId} />\n            <div>{player.name}</div>\n            {Boolean(drawing) && <CanvasSVG drawing={drawing.drawing} width={width} className=\"a-drawing\" />}\n          </div>\n        );\n      })}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Components\nimport { Avatar } from 'components/avatars';\n// Internal\nimport type { VoteComponentProps } from '../../utils/types';\nimport { getMovieTitles } from '../../utils/helpers';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteVamosAoCinema({ track, playersList }: VoteComponentProps) {\n  const movies: StringDictionary = getMovieTitles(track.data.movies);\n\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => {\n        return (\n          <div key={`vote-${player.id}`} className=\"player-vote\">\n            <Avatar id={player.avatarId} />\n            <div>{player.name}</div>\n            <div className=\"player-vote__value\">{movies[player.data.value]}</div>\n          </div>\n        );\n      })}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Ant Design Resources\nimport { Tooltip } from 'antd';\n// Components\nimport { Avatar } from 'components/avatars';\n// Internal\nimport type { VoteComponentProps } from '../../utils/types';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteMegamix({ track, playersList }: VoteComponentProps) {\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div className=\"player-vote__name\">{player.name}</div>\n          <Tooltip title={track.data.card.options[Number(player.data.value)]}>\n            <div className=\"player-vote__value\">{track.data.card.options[Number(player.data.value)]}</div>\n          </Tooltip>\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { ImageBlurButtonContainer, ImageCard } from 'components/image-cards';\n// Internal\nimport type { VoteComponentProps } from '../../utils/types';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteImagesTrack({ playersList }: VoteComponentProps) {\n  const width = useCardWidth(playersList.length + 4, {\n    gap: 8,\n    minWidth: 50,\n    maxWidth: 120,\n    margin: 8,\n  });\n\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div className=\"player-vote__name\">{player.name}</div>\n          <ImageBlurButtonContainer cardId={player.data.value}>\n            <ImageCard id={player.data.value} cardWidth={width} className=\"d-table__image-card\" />\n          </ImageBlurButtonContainer>\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Ant Design Resources\nimport { Tooltip } from 'antd';\n// Components\nimport { Avatar } from 'components/avatars';\n// Internal\nimport type { VoteComponentProps } from '../../utils/types';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteValue({ playersList }: VoteComponentProps) {\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div className=\"player-vote__name\">{player.name}</div>\n          <Tooltip title={player.data.value}>\n            <div className=\"player-vote__value\">{player.data.value}</div>\n          </Tooltip>\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\n// Internal\nimport type { VoteComponentProps } from '../../utils/types';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteOndaTelepatica({ playersList }: VoteComponentProps) {\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div className=\"player-vote__name\">{player.name}</div>\n          <div className=\"player-vote__value\">\n            {player.data?.value === 'center' && <Translate pt=\"Centro\" en=\"Center\" />}\n            {player.data?.value === 'left' && <Translate pt=\"Esquerda\" en=\"Left\" />}\n            {player.data?.value === 'right' && <Translate pt=\"Direita\" en=\"Right\" />}\n          </div>\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { CharacterCard } from 'components/cards/CharacterCard';\nimport { ImageBlurButtonContainer } from 'components/image-cards';\n// Internal\nimport type { VoteComponentProps } from '../../utils/types';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteCharacterTrack({ playersList }: VoteComponentProps) {\n  const width = useCardWidth(playersList.length + 4, {\n    gap: 8,\n    minWidth: 50,\n    maxWidth: 120,\n    margin: 8,\n  });\n\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div className=\"player-vote__name\">{player.name}</div>\n          <ImageBlurButtonContainer cardId={player.data.value}>\n            <CharacterCard\n              size={width}\n              character={{\n                id: player.data.value,\n                name: { pt: '', en: '' },\n              }}\n            />\n          </ImageBlurButtonContainer>\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Components\nimport { Avatar } from 'components/avatars';\n// Internal\nimport type { VoteComponentProps } from '../../utils/types';\nimport { SplatterSVG } from '../Tracks/TrackPalhetaDeFores';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VotePalhetaDeCores({ playersList }: VoteComponentProps) {\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div className=\"player-vote__name\">{player.name}</div>\n          <SplatterSVG color={player.data.value} style={{ color: player.data.value }} width={48} />\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Components\nimport { Avatar } from 'components/avatars';\n// Internal\nimport type { VoteComponentProps } from '../../utils/types';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteQuemNaoMata({ players, playersList }: VoteComponentProps) {\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div className=\"player-vote__name\">{player.name}</div>\n          <div className=\"player-vote__value\">{players[player.data?.value]?.name}</div>\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Components\nimport { Avatar } from 'components/avatars';\nimport { ItemCard } from 'components/cards/ItemCard';\n// Internal\nimport type { VoteComponentProps } from '../../utils/types';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteComunicacaoAlienigena({ playersList }: VoteComponentProps) {\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div className=\"player-vote__name\">{player.name}</div>\n          <ItemCard id={String(player.data.value)} width={80} className=\"d-table__image-card\" />\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Icons\nimport { SpeechBubbleAcceptedIcon } from 'icons/SpeechBubbleAcceptedIcon';\nimport { SpeechBubbleDeclinedIcon } from 'icons/SpeechBubbleDeclinedIcon';\n// Components\nimport { Avatar } from 'components/avatars';\n// Internal\nimport type { VoteComponentProps } from '../../utils/types';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteTaNaCara({ playersList }: VoteComponentProps) {\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div className=\"player-vote__name\">{player.name}</div>\n\n          <div className=\"player-vote__value\">\n            {player.data.value === 'yes' ? <SpeechBubbleAcceptedIcon /> : <SpeechBubbleDeclinedIcon />}\n          </div>\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Ant Design Resources\nimport { Avatar as AntAvatar } from 'antd';\n// Utils\nimport { LETTERS } from 'utils/constants';\n// Components\nimport { Avatar } from 'components/avatars';\n// Internal\nimport type { VoteComponentProps } from '../../utils/types';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteLabirintoSecreto({ playersList }: VoteComponentProps) {\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div className=\"player-vote__name\">{player.name}</div>\n\n          <div className=\"player-vote__value\">\n            <AntAvatar>{LETTERS[Number(player.data.value)]}</AntAvatar>\n          </div>\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Components\nimport { Avatar, AvatarCard } from 'components/avatars';\n// Internal\nimport type { VoteComponentProps } from '../../utils/types';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteWhoSaidThis({ track, playersList, players }: VoteComponentProps) {\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div className=\"player-vote__name\">{player.name}</div>\n\n          <div className=\"player-vote__value\">\n            <AvatarCard player={players[player.data.value]} withName size=\"small\" />\n          </div>\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Types\nimport type { CrimesHediondosCard } from 'types/tdr';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { CrimeItemCard } from 'components/cards/CrimeItemCard';\n// Internal\nimport type { VoteComponentProps } from '../../utils/types';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteCrimesHediondos({ playersList, track }: VoteComponentProps) {\n  const width = useCardWidth(playersList.length + 4, {\n    gap: 8,\n    minWidth: 50,\n    maxWidth: 120,\n    margin: 8,\n  });\n\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => {\n        const item = track.data.cards.find((card: CrimesHediondosCard) => card.id === player.data.value);\n\n        if (!item) {\n          return null;\n        }\n\n        return (\n          <div key={`vote-${player.id}`} className=\"player-vote\">\n            <Avatar id={player.avatarId} />\n            <div className=\"player-vote__name\">{player.name}</div>\n\n            <CrimeItemCard item={item} cardWidth={width} className=\"d-table__image-card\" />\n          </div>\n        );\n      })}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","import { orderBy } from 'lodash';\nimport { useMemo } from 'react';\n// Internal\nimport type { VoteComponentProps } from '../utils/types';\nimport { FallbackComponent } from './FallbackComponent';\nimport { VoteArteRuim } from './Votes/VoteArteRuim';\nimport { VoteCruzaPalavras } from './Votes/VoteCruzaPalavras';\nimport { VoteNamoroOuAmizade } from './Votes/VoteNamoroOuAmizade';\nimport { VoteNaRuaDoMedo } from './Votes/VoteNaRuaDoMedo';\nimport { VoteRetratoFalado } from './Votes/VoteRetratoFalado';\nimport { VoteVamosAoCinema } from './Votes/VoteVamosAoCinema';\nimport { VoteMegamix } from './Votes/VoteMegamix';\nimport { VoteImagesTrack } from './Votes/VoteImagesTrack';\nimport { VoteValue } from './Votes/VoteValue';\nimport { VoteOndaTelepatica } from './Votes/VoteOndaTelepatica';\nimport { VoteCharacterTrack } from './Votes/VoteCharacterTrack';\nimport { VotePalhetaDeCores } from './Votes/VotePalhetaDeCores';\nimport { VoteQuemNaoMata } from './Votes/VoteQuemNaoMata';\nimport { VoteComunicacaoAlienigena } from './Votes/VoteComunicacaoAlienigena';\nimport { VoteTaNaCara } from './Votes/VoteTaNaCara';\nimport { VoteLabirintoSecreto } from './Votes/VoteLabirintoSecreto';\nimport { VoteWhoSaidThis } from './Votes/VoteWhoSaidThis';\nimport { VoteCrimesHediondos } from './Votes/VoteCrimesHediondos';\n// Type\n\nexport const VotesDelegator = (props: Omit<VoteComponentProps, 'playersList'>) => {\n  const playersList = useMemo(\n    () => orderBy(Object.values(props.players), ['data.value', 'name'], ['asc', 'asc']),\n    [props.players],\n  );\n\n  const VotesComponent =\n    {\n      'arte-ruim': VoteArteRuim,\n      'comunicacao-alienigena': VoteComunicacaoAlienigena,\n      'contadores-historias': VoteImagesTrack,\n      'crimes-hediondos': VoteCrimesHediondos,\n      'cruza-palavras': VoteCruzaPalavras,\n      'detetives-imaginativos': VoteImagesTrack,\n      esquiadores: VoteValue,\n      'espiao-entre-nos': VoteValue,\n      'fileira-de-fatos': VoteValue,\n      'galeria-de-sonhos': VoteImagesTrack,\n      'labirinto-secreto': VoteLabirintoSecreto,\n      'megamix-best-of-three': VoteMegamix,\n      'megamix-this-that': VoteMegamix,\n      'megamix-who-said-this': VoteWhoSaidThis,\n      'mente-coletiva': VoteValue,\n      'namoro-ou-amizade': VoteNamoroOuAmizade,\n      'na-rua-do-medo': VoteNaRuaDoMedo,\n      'onda-telepatica': VoteOndaTelepatica,\n      'palheta-de-cores': VotePalhetaDeCores,\n      'polemica-da-vez': VoteValue,\n      'porta-dos-desesperados': VoteImagesTrack,\n      'quem-nao-mata': VoteQuemNaoMata,\n      'quem-sou-eu': VoteCharacterTrack,\n      'retrato-falado': VoteRetratoFalado,\n      'super-campeonato': VoteCharacterTrack,\n      'ta-na-cara': VoteTaNaCara,\n      'testemunha-ocular': VoteImagesTrack,\n      'ue-so-isso': VoteValue,\n      'vamos-ao-cinema': VoteVamosAoCinema,\n    }?.[props.track.game] ?? FallbackComponent;\n\n  return <VotesComponent {...props} playersList={playersList} />;\n};\n","import { memoize } from 'lodash';\nimport { type Ref, useMemo } from 'react';\nimport { useMeasure } from 'react-use';\n// Ant Design Resources\nimport { TrophyOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\n// Types\nimport type { GameRound } from 'types/game';\nimport type { GamePlayer, GamePlayers } from 'types/player';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Utils\nimport { sortPlayers } from 'utils/helpers';\n// Icons\nimport { DJIcon } from 'icons/DJIcon';\nimport { GarbageIcon } from 'icons/GarbageIcon';\nimport { VIPLineIcon } from 'icons/VIPLineIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { TimedButton } from 'components/buttons';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { Step, type StepProps } from 'components/steps';\nimport { RuleInstruction, StepTitle } from 'components/text';\n// Internal\nimport type { Track } from './utils/types';\nimport { useColorizeBackground } from './utils/useColorizeBackground';\nimport { ResultValueDelegator } from './components/ResultValueDelegator';\nimport { TrackTitle } from './components/TrackTitle';\nimport { VotesDelegator } from './components/VotesDelegator';\nimport { ClubberAvatar } from '../../components/avatars/ClubberAvatar';\n\ntype StepResultProps = {\n  user: GamePlayer;\n  players: GamePlayers;\n  onSeeRanking: () => void;\n  round: GameRound;\n  isFirstRunThrough: boolean;\n  track: Track;\n  winningValues: string[];\n  winningTeam: PlayerId[];\n  scoringType: string;\n} & Pick<StepProps, 'announcement'>;\n\nexport function StepResult({\n  user,\n  players,\n  onSeeRanking,\n  round,\n  isFirstRunThrough,\n  announcement,\n  track,\n  winningValues,\n  winningTeam,\n  scoringType,\n}: StepResultProps) {\n  useTemporarilyHidePlayersBar();\n  const [resultRef, { width }] = useMeasure();\n  const [ref, { width: resultsValueWidth }] = useMeasure();\n\n  const time = useCountdown({ duration: 20 });\n\n  const playersList = useMemo(() => sortPlayers(players), [players]);\n\n  const currentIndex = time.timeLeft > 14 ? round.current - 1 : round.current;\n\n  // Dynamic background\n  useColorizeBackground(user, time.timeLeft > 13 ? round.current : round.current + 1);\n\n  // Counts to aid the animation positioning. It doesn't trigger re-renders because it's handled by css\n  let winningCount = 0;\n  let losingCount = 0;\n\n  return (\n    <Step announcement={announcement}>\n      <StepTitle size=\"small\">\n        <Translate pt=\"Resultado\" en=\"Results\" />: <TrackTitle track={track} />\n      </StepTitle>\n\n      <RuleInstruction type=\"event\">\n        <IconAvatar icon={<DJIcon />} size=\"large\" />\n        {scoringType === 'NORMAL' && (\n          <Translate\n            pt={<>Jogadores que votaram com a maioria entram ou continuam na Área VIP.</>}\n            en={<>Players who voted with the majority join or stay in the VIP area.</>}\n          />\n        )}\n        {scoringType === 'TIE' && (\n          <Translate\n            pt={<>Empate entre 2 ou mais respostas. Quem já estava na Área VIP fica e ganha ponto.</>}\n            en={\n              <>\n                It's a tie for 2 or more answers. Whoever was already in the VIP Area stays there and get\n                points.\n              </>\n            }\n          />\n        )}\n        {scoringType === 'DRAW' && (\n          <Translate\n            pt={<>Cada um escolheu uma coisa diferente? Todo mundo fora da Área VIP!</>}\n            en={<>Did everybody just choose something different? Everybody out!</>}\n          />\n        )}\n      </RuleInstruction>\n\n      <div className=\"results\" ref={resultRef as Ref<HTMLDivElement>}>\n        <div className=\"results__vip\" id=\"area-w\">\n          <span className=\"results__icon\">\n            <IconAvatar icon={<VIPLineIcon />} size=\"large\" />\n          </span>\n          <span className=\"results__label\">\n            <Translate pt=\"Área VIP\" en=\"VIP Lounge\" />\n          </span>\n        </div>\n        <div className=\"results__values\" ref={ref as Ref<HTMLDivElement>}>\n          <ResultValueDelegator\n            track={track}\n            winningValues={winningValues}\n            players={players}\n            winningTeam={winningTeam}\n            playersList={playersList}\n            containerWidth={resultsValueWidth}\n          />\n        </div>\n        <div className=\"results__gutter\" id=\"area-l\">\n          <span className=\"results__icon\">\n            <IconAvatar icon={<GarbageIcon />} size=\"large\" />\n          </span>\n          <span className=\"results__label\">\n            <Translate pt=\"Pista (Sarjeta)\" en=\"GA (Scum)\" />\n          </span>\n        </div>\n\n        {playersList.map((player) => {\n          const isWinningArea = player.team[currentIndex] === 'W';\n          winningCount = isWinningArea ? winningCount + 1 : winningCount;\n          losingCount = !isWinningArea ? losingCount + 1 : losingCount;\n\n          return (\n            <div\n              className=\"results__player\"\n              key={`${player.id}-${player.clubberId}`}\n              style={getPosition(isWinningArea ? winningCount : losingCount, isWinningArea ? 0 : 1, width)}\n            >\n              <ClubberAvatar\n                avatarId={player.avatarId}\n                id={player.clubberId}\n                width={45}\n                animate={isWinningArea}\n              />\n              <span className=\"results__player-name\">{player.name}</span>\n            </div>\n          );\n        })}\n      </div>\n\n      <SpaceContainer>\n        {isFirstRunThrough ? (\n          <TimedButton onClick={onSeeRanking} onExpire={onSeeRanking} duration={20} icon={<TrophyOutlined />}>\n            <Translate pt=\"Ver Ranking\" en=\"See Ranking\" />\n          </TimedButton>\n        ) : (\n          <Button onClick={onSeeRanking} icon={<TrophyOutlined />}>\n            <Translate pt=\"Ver Ranking\" en=\"See Ranking\" />\n          </Button>\n        )}\n      </SpaceContainer>\n\n      <VotesDelegator\n        track={track}\n        winningValues={winningValues}\n        players={players}\n        winningTeam={winningTeam}\n      />\n    </Step>\n  );\n}\n\nconst getPosition = memoize(\n  (index: number, side: number, width: number) => {\n    const areaSize = width / 3;\n    const buffer = side * areaSize * 2;\n\n    const getTopValue = (index: number, startAt: number, increment: number): number => {\n      const ratio = [0, 0, 0, 1, 1, 1, 1];\n      const multiplier = Math.floor(index / ratio.length);\n      const remainderPosition = index % ratio.length;\n\n      return startAt + multiplier * increment + (ratio[remainderPosition] + multiplier) * increment;\n    };\n    const top = getTopValue(index, 0, 45);\n\n    const left = [0.24, 0.48, 0.72, 0.15, 0.36, 0.6, 0.84][index % 7];\n\n    return {\n      top: `${50 + top}px`,\n      left: `${areaSize * left + buffer}px`,\n    };\n  },\n  (index, side, width) => `${index}-${side}-${width}`,\n);\n","// Ant Design Resources\nimport { Button } from 'antd';\n// Types\nimport type { GameRound, GameRanking } from 'types/game';\nimport type { GamePlayer, GamePlayers } from 'types/player';\n// Hooks\nimport type { UseStep } from 'hooks/useStep';\n// Icons\nimport { BouncerIcon } from 'icons/BouncerIcon';\n// Components\nimport { HostNextPhaseButton } from 'components/host';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { StepRankingWrapper } from 'components/ranking';\nimport { Step } from 'components/steps';\nimport { RuleInstruction, StepTitle } from 'components/text';\n// Internal\nimport { useColorizeBackground } from './utils/useColorizeBackground';\n\ntype StepRankingProps = {\n  user: GamePlayer;\n  players: GamePlayers;\n  ranking: GameRanking;\n  goToPreviousStep: UseStep['goToPreviousStep'];\n  round: GameRound;\n};\n\nexport function StepRanking({ ranking, players, goToPreviousStep, round, user }: StepRankingProps) {\n  // Dynamic background\n  useColorizeBackground(user, round.current + 1);\n\n  const innerContent = (\n    <>\n      <RuleInstruction type=\"alert\">\n        <Translate\n          pt=\"Somente jogadores na área VIP são ranqueados, porque você não pode ganhar se não estiver lá!\"\n          en=\"Only players in the VIP area can be ranked since you can't win if you're not there. We are elitist!\"\n        />\n      </RuleInstruction>\n    </>\n  );\n\n  const actions = (\n    <>\n      <SpaceContainer>\n        <Button onClick={goToPreviousStep}>\n          <Translate pt=\"Ver resultado novamente\" en=\"See results again\" />\n        </Button>\n      </SpaceContainer>\n      <HostNextPhaseButton round={round} />\n    </>\n  );\n\n  if (ranking.length === 0) {\n    return (\n      <Step>\n        <StepTitle size=\"small\">\n          <Translate pt=\"Ranking\" en=\"Ranking\" />?\n        </StepTitle>\n\n        <SpaceContainer>\n          <BouncerIcon width=\"120\" />\n        </SpaceContainer>\n        {innerContent}\n        {actions}\n      </Step>\n    );\n  }\n\n  return (\n    <StepRankingWrapper\n      players={players}\n      ranking={ranking}\n      gainedPointsDescriptions={[\n        <Translate\n          key=\"1\"\n          pt={<>Pontos por já estar no Time Vencedor.</>}\n          en={<>Points for already being on the Winning Team.</>}\n        />,\n        <Translate\n          key=\"2\"\n          pt={<>Pontos por entrar no Time Vencedor.</>}\n          en={<>Points for joining the Winning Team.</>}\n        />,\n      ]}\n      title={<Translate pt={<>Ranking da Área VIP</>} en={<>VIP Ranking</>} />}\n      // TODO: white\n      subtitle={innerContent}\n    >\n      {actions}\n    </StepRankingWrapper>\n  );\n}\n","import { useEffect, useState } from 'react';\n// Types\nimport type { PhaseProps } from 'types/game';\n// Hooks\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { BouncerIcon } from 'icons/BouncerIcon';\n// Components\nimport { Translate } from 'components/language';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\n// Internal\nimport { StepResult } from './StepResult';\nimport { StepRanking } from './StepRanking';\n\nexport function PhaseResult({ players, state }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, goToNextStep, goToPreviousStep } = useStep(0);\n  const [isFirstRunThrough, setIsFirstRunThrough] = useState(true);\n\n  // Changes isFirstGalleryRunThrough property which disables controls, after the first gallery run through\n  useEffect(() => {\n    if (isFirstRunThrough && step > 0) {\n      setIsFirstRunThrough(false);\n    }\n  }, [step, isFirstRunThrough]);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<BouncerIcon />}\n      title={<Translate pt=\"Resultado\" en=\"Results\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n      duration={4}\n    >\n      <Instruction>\n        <Translate pt=\"Quem vai pra área VIP?\" en=\"So who goes to the VIP area?\" />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer phase={state?.phase} allowedPhase={PHASES.MEGAMIX.RESULT}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepResult\n          players={players}\n          announcement={announcement}\n          onSeeRanking={goToNextStep}\n          user={user}\n          round={state.round}\n          isFirstRunThrough={isFirstRunThrough}\n          track={state.track}\n          winningValues={state.winningValues}\n          winningTeam={state.winningTeam}\n          scoringType={state.scoringType}\n        />\n\n        {/* Step 1 */}\n        <StepRanking\n          ranking={state.ranking}\n          players={players}\n          goToPreviousStep={goToPreviousStep}\n          round={state.round}\n          user={user}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","import { isEqual } from 'lodash';\n// Types\nimport type { PhaseProps } from 'types/game';\nimport type { GamePlayer } from 'types/player';\n// Utils\nimport { AVATARS } from 'utils/avatars';\n// Icons\nimport { CrownIcon } from 'icons/CrownIcon';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { GameOverWrapper } from 'components/game-over';\nimport { Achievements } from 'components/general/Achievements';\nimport { DualTranslate, Translate } from 'components/language';\nimport { Container } from 'components/layout/Container';\nimport { Instruction } from 'components/text';\n// Internal\nimport { achievementsReference } from './utils/achievements';\n\nexport function PhaseGameOver({ state, players }: PhaseProps) {\n  return (\n    <GameOverWrapper state={state} players={players} announcementIcon={<CrownIcon />}>\n      {!isEqual(state.winners, state.fairWinners) && (\n        <Container\n          title={\n            <Translate\n              pt=\"Se a vida fosse justa, quem teria ganhado, com mais pontos, seria:\"\n              en=\"If life was fair, the winner with the most points would've been:\"\n            />\n          }\n        >\n          <Instruction contained>\n            <ul className=\"game-over__winners\">\n              {state.fairWinners.map((winner: GamePlayer) => {\n                return (\n                  <li className=\"game-over__winner\" key={`winner-${winner.name}`}>\n                    <Avatar className=\"game-over__avatar\" id={winner.avatarId ?? 25} />\n                    <div className=\"game-over__winner-name\">\n                      <strong>{winner.name ?? '?'}</strong>,{' '}\n                      <DualTranslate>{AVATARS[winner.avatarId].description}</DualTranslate>\n                    </div>\n                  </li>\n                );\n              })}\n            </ul>\n          </Instruction>\n        </Container>\n      )}\n\n      <Achievements players={players} achievements={state.achievements} reference={achievementsReference} />\n    </GameOverWrapper>\n  );\n}\n","// Types\nimport type { GameState } from 'types/game';\n// Utils\nimport { GAME_COLLECTION } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { PageError } from 'components/errors';\nimport { LoadingPage } from 'components/loaders';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { Session } from 'components/session';\n// Internal\nimport { PhaseTrack } from './PhaseTrack';\nimport { PhaseSeeding } from './PhaseSeeding';\nimport { PhaseResult } from './PhaseResult';\nimport { PhaseGameOver } from './PhaseGameOver';\n// Sass\nimport './utils/styles.scss';\n\nfunction getActiveComponent(state: GameState) {\n  // If phase is not defined, it is likely that the game is still loading\n  if (state && !state.phase) return LoadingPage;\n\n  switch (state.phase) {\n    case PHASES.DEFAULT.LOBBY:\n      return PhaseLobby;\n    case PHASES.DEFAULT.RULES:\n      return PhaseRules;\n    case PHASES.DEFAULT.SETUP:\n      return PhaseSetup;\n    case PHASES.MEGAMIX.SEEDING:\n      return PhaseSeeding;\n    case PHASES.MEGAMIX.TRACK:\n      return PhaseTrack;\n    case PHASES.MEGAMIX.RESULT:\n      return PhaseResult;\n    case PHASES.DEFAULT.GAME_OVER:\n      return PhaseGameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionMegamix() {\n  return <Session gameCollection={GAME_COLLECTION.MEGAMIX} getActiveComponent={getActiveComponent} />;\n}\n\nexport default SessionMegamix;\n","// Types\nimport type { AchievementReference } from 'types/achievements';\n\nconst ACHIEVEMENTS = {\n  SOLITARY_VIP: 'SOLITARY_VIP',\n  SOLITARY_LOSER: 'SOLITARY_LOSER',\n  LONGEST_VIP: 'LONGEST_VIP',\n  LONGEST_LOSER: 'LONGEST_LOSER',\n  MOST_SWITCHED: 'MOST_SWITCHED',\n  LEAST_SWITCHED: 'LEAST_SWITCHED',\n  MOST_JOIN: 'MOST_JOIN',\n  MOST_LEFT: 'MOST_LEFT',\n};\n\nexport const achievementsReference: AchievementReference = {\n  [ACHIEVEMENTS.SOLITARY_VIP]: {\n    icon: 'one',\n    title: {\n      pt: 'VIP Solitário',\n      en: 'Solitary VIP',\n    },\n    description: {\n      pt: 'Esteve na área VIP sozinho mais vezes',\n      en: 'Was in the VIP area alone the most',\n    },\n  },\n  [ACHIEVEMENTS.SOLITARY_LOSER]: {\n    icon: 'trash',\n    title: {\n      pt: 'Fracassado Solitário',\n      en: 'Solitary Loser',\n    },\n    description: {\n      pt: 'Esteve na pista sozinho mais vezes',\n      en: 'Was in the General Admission area alone the most',\n    },\n  },\n  [ACHIEVEMENTS.LONGEST_VIP]: {\n    icon: 'arrow-wide',\n    title: {\n      pt: 'VIP de Longa Data',\n      en: 'Longest VIP',\n    },\n    description: {\n      pt: 'Ficou na área VIP por mais rodadas consecutivas',\n      en: 'Was in the VIP area the most consecutive rounds ',\n    },\n  },\n  [ACHIEVEMENTS.LONGEST_LOSER]: {\n    icon: 'face-embarrassed',\n    title: {\n      pt: 'Pobre de Longa Data',\n      en: 'Longest Loser',\n    },\n    description: {\n      pt: 'Ficou na pista por mais rodadas consecutivas',\n      en: 'Was in the General Admission area the most consecutive rounds',\n    },\n  },\n  [ACHIEVEMENTS.MOST_SWITCHED]: {\n    icon: 'arrows-reverse',\n    title: {\n      pt: 'Mais Troca-Troca',\n      en: 'Most Switched',\n    },\n    description: {\n      pt: 'Trocou de área mais vezes',\n      en: 'Switched areas the most',\n    },\n  },\n  [ACHIEVEMENTS.LEAST_SWITCHED]: {\n    icon: 'arrow-narrow',\n    title: {\n      pt: 'Menos Troca-Troca',\n      en: 'Least Switched',\n    },\n    description: {\n      pt: 'Trocou de área menos vezes',\n      en: 'Switched areas the least',\n    },\n  },\n  [ACHIEVEMENTS.MOST_JOIN]: {\n    icon: 'fire',\n    title: {\n      pt: 'Mais Chegador',\n      en: 'Most Joiner',\n    },\n    description: {\n      pt: 'Entrou na área VIP mais vezes',\n      en: 'Joined the VIP area the most',\n    },\n  },\n  [ACHIEVEMENTS.MOST_LEFT]: {\n    icon: 'door',\n    title: {\n      pt: 'Mais Sairão',\n      en: 'Most Leaver',\n    },\n    description: {\n      pt: 'Saiu da área VIP mais vezes',\n      en: 'Left the VIP area the most',\n    },\n  },\n};\n\nexport default achievementsReference;\n","// Ant Design Resources\nimport { Avatar } from 'antd';\n// Icons\nimport { CandyIcon } from 'icons/CandyIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\n\ntype CandyCountProps = {\n  candyCount: number;\n  size?: 'small' | 'default' | 'large';\n};\n\nexport function CandyCount({ candyCount, size = 'small' }: CandyCountProps) {\n  return (\n    <>\n      <IconAvatar icon={<CandyIcon />} size={size} />\n      <Avatar size={size} style={{ backgroundColor: 'hotPink' }}>\n        {candyCount}\n      </Avatar>\n    </>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Tooltip } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { ImageCard } from 'components/image-cards';\nimport { Translate } from 'components/language';\n// Internal\nimport type { StreetCard } from '../utils/types';\nimport { CandyCount } from './CandyCount';\n\ntype HouseCardProps = {\n  /**\n   * The candy, monster, jackpot card\n   */\n  card: StreetCard;\n  /**\n   * The quantity of candy left in the sidewalk\n   */\n  candyLeftover: number;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Unique id\n   */\n  id?: string;\n  /**\n   * If the house is the last one\n   */\n  active?: boolean;\n  /**\n   * Enables or disables preview\n   */\n  preview?: boolean;\n};\n\nexport function HouseCard({\n  card,\n  candyLeftover,\n  id,\n  className = '',\n  active = false,\n  preview,\n}: HouseCardProps) {\n  const { dualTranslate } = useLanguage();\n\n  const baseClass = 'n-house-card';\n  const cardBaseClass = 'n-house-card__card';\n\n  return (\n    <div\n      className={clsx(baseClass, `${baseClass}--${card.type}`, active && `${baseClass}--active`, className)}\n      id={id}\n    >\n      <div className=\"n-house-card__sidewalk\">\n        {card.type === 'candy' && candyLeftover > 0 && (\n          <Tooltip\n            color=\"hotPink\"\n            title={\n              <Translate\n                pt=\"Doces que não foram divididos entre os jogadores\"\n                en=\"Candy that wasn't shared between players\"\n              />\n            }\n          >\n            <CandyCount candyCount={candyLeftover} />\n          </Tooltip>\n        )}\n      </div>\n      <ImageCard id={card.key} cardWidth={80} className={clsx(cardBaseClass)} preview={preview} />\n\n      <h3 className={`${baseClass}__name`}>{dualTranslate(card.name)}</h3>\n\n      {active && (\n        <span\n          className={clsx(\n            `${baseClass}__active`,\n            getAnimationClass('heartBeat', { speed: 'slow', infinite: true }),\n          )}\n        />\n      )}\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Types\nimport type { GamePlayer } from 'types/player';\n// Utils\nimport { LETTERS } from 'utils/constants';\n\nexport const getColorModifier = (letter: string) => {\n  const index = LETTERS.indexOf(letter);\n  return Math.abs(index) % 4;\n};\n\nexport const getBracketClass = (\n  num: number,\n  showNeedle: boolean,\n  needle: number,\n  showTarget: boolean,\n  target: number,\n): string => {\n  const baseBracketClass = 'o-dial-numbers';\n  const modifier = num % 2 === 0 ? 'even' : 'odd';\n\n  return clsx(\n    baseBracketClass,\n    `${baseBracketClass}--${modifier}`,\n    showNeedle && needle === num && `${baseBracketClass}--active`,\n    showTarget && target === num && `${baseBracketClass}--target`,\n  );\n};\n\nexport const getGuessResultClass = (guess: number, target: number): string => {\n  const base = 'o-player-guess__guess';\n  if (target - guess === 0) return `${base}--blue`;\n  if (Math.abs(target - guess) === 1) return `${base}--orange`;\n  if (Math.abs(target - guess) === 2) return `${base}--yellow`;\n  return '';\n};\n\nexport const getPoints = (guess: number, target: number): number => {\n  if (target - guess === 0) return 4;\n  if (Math.abs(target - guess) === 1) return 3;\n  if (Math.abs(target - guess) === 2) return 2;\n  return 0;\n};\n\n/**\n * Counts how many difference guesses are there\n */\nexport const countDifferentGuesses = (regularPlayers: GamePlayer[]): number => {\n  const dict: Record<string, number> = {};\n\n  regularPlayers.forEach((player) => {\n    if (dict[String(player.guess)] === undefined) {\n      dict[String(player.guess)] = 0;\n    }\n    dict[String(player.guess)] += 1;\n  });\n\n  return Object.keys(dict).length;\n};\n","import type { ReactNode } from 'react';\n\ntype BookProps = {\n  children?: [ReactNode] | [ReactNode, ReactNode] | [ReactNode, ReactNode, ReactNode];\n};\n\nexport function Book({ children }: BookProps) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 725.95 328.66\"\n      style={{ width: '50vw', maxWidth: '600px' }}\n    >\n      <defs>\n        <linearGradient id=\"a\" x1=\"171.8\" x2=\"354.26\" y1=\"170.82\" y2=\"170.82\" gradientUnits=\"userSpaceOnUse\">\n          <stop offset=\"0\" stopColor=\"#d9d9d9\"></stop>\n          <stop offset=\"1\" stopColor=\"#fff\"></stop>\n        </linearGradient>\n        <linearGradient\n          id=\"b\"\n          x1=\"371.69\"\n          x2=\"554.14\"\n          y1=\"171.43\"\n          y2=\"171.43\"\n          xlinkHref=\"#a\"\n        ></linearGradient>\n        <linearGradient\n          id=\"c\"\n          x1=\"554.14\"\n          x2=\"725.95\"\n          y1=\"178.59\"\n          y2=\"178.59\"\n          xlinkHref=\"#a\"\n        ></linearGradient>\n      </defs>\n      <path\n        fill=\"#6770b3\"\n        d=\"M363 40.45S313.41-5.8 263.85 25.89 158.73 44.64 158.73 44.64v284L363 314.34z\"\n      ></path>\n      <path\n        fill=\"#6770b3\"\n        d=\"M363 40.45S313.41-5.8 263.85 25.89 158.73 44.64 158.73 44.64v284L363 314.34z\"\n      ></path>\n      <path\n        fill=\"#b3b3b3\"\n        d=\"M222.05 310.18c-4.7.87-9 1.56-13 2.11l-1.9.3 147.09-10.1s-51.52-4.77-132.19 7.69z\"\n      ></path>\n      <path\n        fill=\"#ccc\"\n        d=\"M245.56 305.05a407.52 407.52 0 01-23.48 5.12c80.67-12.46 132.21-7.69 132.21-7.69s-51.24-10.58-108.73 2.57z\"\n      ></path>\n      <path\n        fill=\"#e6e6e6\"\n        d=\"M327.62 295a134.29 134.29 0 00-59.08 3.85q-12.45 3.65-23 6.24c57.49-13.15 108.7-2.56 108.7-2.56s-10.07-4.92-26.62-7.53z\"\n      ></path>\n      <path\n        fill=\"#fff\"\n        d=\"M260.85 39.84C226.27 59.2 171.8 61.07 171.8 61.07v251.75s6.95 2.31 25.52.78c2.74-.22 5.74-.53 9-1l2.77-.36q6.6-1.14 13-2.11c6.95-1.29 14.75-3 23.48-5.12q10.58-2.61 23-6.24a134.29 134.29 0 0159.05-3.77c16.55 2.64 26.64 7.52 26.64 7.52V49.84c-38.67-25.84-58.82-29.37-93.41-10z\"\n      ></path>\n      <path\n        fill=\"#6770b3\"\n        d=\"M363 40.45s47.59-38.77 99.1-18.56c54.76 21.48 105.12 22.75 105.12 22.75v284L363 314.34z\"\n      ></path>\n      <path\n        fill=\"#6770b3\"\n        d=\"M363 40.45s47.59-38.77 99.1-18.56c54.76 21.48 105.12 22.75 105.12 22.75v284L363 314.34z\"\n      ></path>\n      <path\n        fill=\"#b3b3b3\"\n        d=\"M503.9 310.18c4.7.87 9 1.56 13 2.11l1.9.3-147.09-10.1s51.52-4.77 132.19 7.69z\"\n      ></path>\n      <path\n        fill=\"#ccc\"\n        d=\"M480.39 305.05a407.52 407.52 0 0023.48 5.12c-80.67-12.46-132.21-7.69-132.21-7.69s51.24-10.58 108.73 2.57z\"\n      ></path>\n      <path\n        fill=\"#e6e6e6\"\n        d=\"M398.33 295a134.3 134.3 0 0159.08 3.85q12.45 3.65 23 6.24c-57.49-13.15-108.7-2.56-108.7-2.56s10.06-4.92 26.62-7.53z\"\n      ></path>\n      <path\n        fill=\"#fff\"\n        d=\"M465.1 37.84c37.28 13.46 89 23.23 89 23.23v251.75s-6.94 2.31-25.51.78c-2.74-.22-5.74-.53-9-1l-2.77-.36q-6.6-1.14-13-2.11a444.4 444.4 0 01-23.48-5.12q-10.57-2.61-23-6.24a134.3 134.3 0 00-59.01-3.77c-16.56 2.64-26.64 7.52-26.64 7.52V49.84c38.67-25.84 55.86-25.56 93.41-12z\"\n      ></path>\n\n      <foreignObject x=\"185\" y=\"63\" width=\"150\" height=\"225\">\n        {children?.[0]}\n      </foreignObject>\n\n      <foreignObject x=\"387\" y=\"63\" width=\"150\" height=\"225\">\n        {children?.[1]}\n      </foreignObject>\n\n      {!!children?.[2] && (\n        <path fill=\"#fff\" d=\"M554.14 61.53s69.5-28 171.81-12v251.06s-117-6.94-171.81 12z\"></path>\n      )}\n\n      <foreignObject x=\"566\" y=\"63\" width=\"150\" height=\"225\">\n        {!!children?.[2] && children[2]}\n      </foreignObject>\n    </svg>\n  );\n}\n","import { useMemo } from 'react';\n// Types\nimport type { GamePlayer } from 'types/player';\n// Icons\nimport { BoxCheckMarkIcon } from 'icons/BoxCheckMarkIcon';\nimport { NoIcon } from 'icons/NoIcon';\nimport { YesIcon } from 'icons/YesIcon';\n// Components\nimport { AvatarStrip, IconAvatar } from 'components/avatars';\nimport { GlyphCard } from 'components/cards/GlyphCard';\n// Internal\nimport { parseSelectedGlyphs } from '../utils/helpers';\n\ntype PlayerGlyphsProps = {\n  player: GamePlayer;\n  glyphWidth: number;\n  done?: boolean;\n};\n\nexport function PlayerGlyphs({ player, glyphWidth, done }: PlayerGlyphsProps) {\n  const [positive, negative] = useMemo(\n    () => parseSelectedGlyphs(player.selectedGlyphs ?? {}),\n    [player.selectedGlyphs],\n  );\n\n  return (\n    <div className=\"q-player-glyphs\">\n      <AvatarStrip\n        player={player}\n        withName\n        className=\"q-player-glyphs__strip\"\n        icon={done ? <BoxCheckMarkIcon /> : undefined}\n      />\n      {positive.map((id, index) => {\n        return (\n          <div\n            className=\"q-player-glyphs__entry q-player-glyphs__entry--positive\"\n            key={`pos-${player.id}-${id}-${index}`}\n          >\n            <IconAvatar icon={<YesIcon />} size=\"small\" />\n            {id ? (\n              <GlyphCard width={glyphWidth} id={id} />\n            ) : (\n              <div\n                className=\"q-selections__no-glyph\"\n                style={{ width: `${glyphWidth}px`, height: `${glyphWidth}px` }}\n              />\n            )}\n          </div>\n        );\n      })}\n      {negative.map((id, index) => {\n        return (\n          <div\n            className=\"q-player-glyphs__entry q-player-glyphs__entry--negative\"\n            key={`neg-${player.id}-${id}-${index}`}\n          >\n            <IconAvatar icon={<NoIcon />} size=\"small\" />\n            {id ? (\n              <GlyphCard width={glyphWidth} id={id} />\n            ) : (\n              <div\n                className=\"q-selections__no-glyph\"\n                style={{ width: `${glyphWidth}px`, height: `${glyphWidth}px` }}\n              />\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","// Types\nimport type { GamePlayer, GamePlayers } from 'types/player';\n// Utils\nimport { SEPARATOR } from 'utils/constants';\n\n/**\n * Creates a glyph reference dictionary where true means positive and false means negative\n * @param positive\n * @param negative\n * @returns\n */\nexport const prepareGlyphs = (\n  positive: BooleanDictionary,\n  negative: BooleanDictionary,\n): BooleanDictionary => {\n  const dict: BooleanDictionary = {};\n  Object.keys(positive).forEach((key) => {\n    dict[key] = true;\n  });\n  Object.keys(negative).forEach((key) => {\n    dict[key] = false;\n  });\n\n  return dict;\n};\n\nexport const parseSelectedGlyphs = (glyphs: BooleanDictionary) => {\n  const positive: string[] = [];\n  const negative: string[] = [];\n\n  Object.keys(glyphs).forEach((id) => {\n    if (glyphs[id]) {\n      positive.push(id);\n    } else {\n      negative.push(id);\n    }\n  });\n\n  while (positive.length < 3) {\n    positive.push('');\n  }\n\n  while (negative.length < 3) {\n    negative.push('');\n  }\n\n  return [positive, negative];\n};\n\n/**\n * Get list of players on each voted character\n * @param players\n * @param votes\n * @returns\n */\nexport const getRibbons = (players: GamePlayers, votes: StringDictionary): Record<string, GamePlayer[]> => {\n  const votesDict: Record<string, GamePlayer[]> = {};\n\n  Object.keys(votes).forEach((playerEntry) => {\n    const playerId = playerEntry.split(SEPARATOR)[1];\n    const characterId = votes[playerEntry].split(SEPARATOR)[1];\n\n    if (votesDict[characterId] === undefined) {\n      votesDict[characterId] = [];\n    }\n\n    votesDict[characterId].push(players[playerId]);\n  });\n\n  return votesDict;\n};\n\n/**\n * Removes prefixes from votes\n * @param votes\n * @returns\n */\nexport const prepareGuesses = (votes: StringDictionary): StringDictionary => {\n  const result: StringDictionary = {};\n\n  Object.keys(votes).forEach((playerEntry) => {\n    const playerId = playerEntry.split(SEPARATOR)[1];\n    const characterId = votes[playerEntry].split(SEPARATOR)[1];\n\n    result[playerId] = characterId;\n  });\n\n  return result;\n};\n","export function CrownIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M445.512 460.432H66.488c-16.01 0-28.988-12.978-28.988-28.988 0-16.01 12.978-28.988 28.988-28.988h379.024c16.01 0 28.988 12.978 28.988 28.988 0 16.01-12.978 28.988-28.988 28.988z\"\n      ></path>\n      <path\n        fill=\"#fee97d\"\n        d=\"M445.512 402.456h-30c16.01 0 28.988 12.978 28.988 28.988 0 16.01-12.979 28.988-28.988 28.988h30c16.01 0 28.988-12.978 28.988-28.988 0-16.01-12.979-28.988-28.988-28.988zm28.988-240l-143.5 75-75-135-90 135-128.5-75 45 240h347z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M331 237.46l-75-135.004-16.364 24.546 54.327 97.789c7.274 13.091 23.269 18.563 37.037 12.669zm110.241-57.621L399.5 402.456h30l45-240zM166 237.46L37.5 162.456l3.687 19.661 98.271 57.357A23.432 23.432 0 00166 237.46z\"\n      ></path>\n      <path\n        fill=\"#f58a97\"\n        d=\"M251.05 150.169l-43.326-43.326a6.999 6.999 0 010-9.899l43.326-43.326a6.999 6.999 0 019.899 0l43.326 43.326a6.999 6.999 0 010 9.899l-43.326 43.326a6.999 6.999 0 01-9.899 0z\"\n      ></path>\n      <path\n        fill=\"#f07281\"\n        d=\"M304.276 96.944L260.95 53.618a6.999 6.999 0 00-9.899 0L241 63.668l33.276 33.276a7 7 0 010 9.9L241 140.119l10.05 10.05a6.999 6.999 0 009.899 0l43.326-43.326a7 7 0 00.001-9.899z\"\n      ></path>\n      <path\n        fill=\"#8795de\"\n        d=\"M371.05 331.348l-20.296-20.296a7 7 0 010-9.9l20.296-20.296a6.999 6.999 0 019.899 0l20.296 20.296a7 7 0 010 9.9l-20.296 20.296a6.999 6.999 0 01-9.899 0z\"\n      ></path>\n      <path\n        fill=\"#6c7fd8\"\n        d=\"M401.246 301.152l-20.296-20.296a6.999 6.999 0 00-9.899 0L361 290.906l10.246 10.246a6.999 6.999 0 010 9.899L361 321.298l10.05 10.05a6.999 6.999 0 009.899 0l20.296-20.296a7 7 0 00.001-9.9z\"\n      ></path>\n      <path\n        fill=\"#8795de\"\n        d=\"M131.05 331.348l-20.296-20.296a7 7 0 010-9.9l20.296-20.296a7 7 0 019.9 0l20.296 20.296a7 7 0 010 9.9l-20.296 20.296a7 7 0 01-9.9 0z\"\n      ></path>\n      <path\n        fill=\"#6c7fd8\"\n        d=\"M161.246 301.152l-20.296-20.296a6.999 6.999 0 00-9.899 0L121 290.906l10.246 10.246a6.999 6.999 0 010 9.899L121 321.298l10.05 10.05a6.999 6.999 0 009.899 0l20.296-20.296a7 7 0 00.001-9.9z\"\n      ></path>\n      <path\n        fill=\"#f58a97\"\n        d=\"M278.747 259.703h-45.494a6.999 6.999 0 00-6.062 3.5l-22.747 39.399a7.002 7.002 0 000 7l22.747 39.399a6.999 6.999 0 006.062 3.5h45.494a6.999 6.999 0 006.062-3.5l22.747-39.399a7.002 7.002 0 000-7l-22.747-39.399a7 7 0 00-6.062-3.5z\"\n      ></path>\n      <path\n        fill=\"#f07281\"\n        d=\"M307.556 302.602l-22.747-39.399a6.999 6.999 0 00-6.062-3.5h-30a6.999 6.999 0 016.062 3.5l22.747 39.399a7.002 7.002 0 010 7l-22.747 39.399a6.999 6.999 0 01-6.062 3.5h30a6.999 6.999 0 006.062-3.5l22.747-39.399a7.002 7.002 0 000-7z\"\n      ></path>\n      <circle cx=\"37.625\" cy=\"162.591\" r=\"30.125\" fill=\"#8795de\"></circle>\n      <circle cx=\"474.375\" cy=\"162.591\" r=\"30.125\" fill=\"#8795de\"></circle>\n      <path\n        fill=\"#6c7fd8\"\n        d=\"M474.375 132.466a29.981 29.981 0 00-15 4.004c9.037 5.201 15.125 14.947 15.125 26.121s-6.089 20.921-15.125 26.121a29.981 29.981 0 0015 4.004c16.638 0 30.125-13.488 30.125-30.125 0-16.638-13.488-30.125-30.125-30.125zm-436.75 0a29.981 29.981 0 00-15 4.004c9.037 5.201 15.125 14.947 15.125 26.121s-6.089 20.921-15.125 26.121a29.981 29.981 0 0015 4.004c16.638 0 30.125-13.488 30.125-30.125.001-16.638-13.487-30.125-30.125-30.125z\"\n      ></path>\n      <path d=\"M136 271.306a14.401 14.401 0 00-10.253 4.247L105.45 295.85c-5.653 5.654-5.653 14.853 0 20.505l20.296 20.296c2.827 2.827 6.54 4.24 10.253 4.24s7.426-1.414 10.253-4.24l20.296-20.296c5.653-5.653 5.653-14.852 0-20.506l-20.296-20.295A14.394 14.394 0 00136 271.306zm0 54.385l-19.589-19.589L136 286.513l19.589 19.589zm229.747 10.961A14.455 14.455 0 00376 340.89a14.46 14.46 0 0010.254-4.239l20.296-20.296c5.652-5.653 5.652-14.852 0-20.506l-20.297-20.296c-5.654-5.652-14.853-5.653-20.507 0L345.45 295.85c-5.652 5.654-5.652 14.853 0 20.505zM376 286.513l19.589 19.589L376 325.692l-19.589-19.59zm-178.051 26.839l22.747 39.399a14.54 14.54 0 0012.557 7.25h45.494c5.163 0 9.975-2.778 12.558-7.25l22.745-39.397a14.534 14.534 0 00.001-14.501l-22.747-39.4a14.544 14.544 0 00-12.557-7.249h-45.494a14.54 14.54 0 00-12.557 7.25l-22.747 39.399a14.538 14.538 0 000 14.499zm35.593-46.149h44.917l22.457 38.899-22.457 38.899h-44.917l-22.458-38.899zM512 162.591c0-20.747-16.879-37.625-37.625-37.625-20.747 0-37.626 16.879-37.626 37.625 0 3.596.518 7.072 1.464 10.368l-104.208 54.467-49.893-89.813 25.465-25.465a14.406 14.406 0 004.248-10.254c0-3.873-1.509-7.515-4.247-10.253l-43.326-43.326a14.404 14.404 0 00-10.253-4.247 14.401 14.401 0 00-10.253 4.247L202.42 91.641a14.404 14.404 0 00-4.247 10.253c0 3.874 1.508 7.515 4.247 10.253l22.868 22.868-20.788 31.179a7.5 7.5 0 002.08 10.401c3.412 2.275 8.083 1.397 10.401-2.08l19.125-28.684 9.641 9.641a14.452 14.452 0 0010.252 4.24c3.712 0 7.427-1.414 10.254-4.24l6.828-6.828 51.362 92.457c1.994 3.594 6.486 4.864 10.03 3.005l110.679-57.849a37.809 37.809 0 0015.151 11.219l-37.027 197.479h-63.799c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h86.034c11.849 0 21.488 9.639 21.488 21.488s-9.64 21.488-21.488 21.488H66.488c-11.849 0-21.488-9.64-21.488-21.488s9.64-21.488 21.488-21.488h257.989c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5H88.724L51.696 197.477a37.774 37.774 0 0014.007-9.875l96.516 56.336c3.375 1.973 7.799 1.017 10.021-2.317l25.34-38.006a7.5 7.5 0 00-12.481-8.321l-21.42 32.127-90.42-52.778a37.453 37.453 0 001.991-12.052c0-20.747-16.879-37.625-37.625-37.625S0 141.845 0 162.591c0 20.519 16.512 37.243 36.945 37.608l36.517 194.757h-6.974c-20.12 0-36.488 16.368-36.488 36.488s16.369 36.488 36.488 36.488h379.023c20.12 0 36.488-16.369 36.488-36.488s-16.368-36.488-36.488-36.488h-6.975L475.054 200.2c20.433-.365 36.946-17.09 36.946-37.609zm-256-18.078l-42.619-42.619L256 59.275l42.618 42.619zM15 162.591c0-12.476 10.15-22.625 22.625-22.625s22.625 10.15 22.625 22.625-10.15 22.625-22.625 22.625S15 175.067 15 162.591zm436.749 0c0-12.476 10.15-22.625 22.626-22.625S497 150.116 497 162.591s-10.149 22.625-22.625 22.625-22.626-10.149-22.626-22.625z\"></path>\n    </svg>\n  );\n}\n","// Utils\nimport { getRandomItem } from 'utils/helpers';\n\nconst lowClues = ['agua', 'bola', 'coco', 'dedo'];\nconst clues = ['agua', 'bola', 'coco', 'dedo', 'egua', 'flauta', 'gatilho', 'hélio', 'jaguar'];\nconst highClues = [\n  'agua',\n  'bola',\n  'coco',\n  'dedo',\n  'egua',\n  'flauta',\n  'gatilho',\n  'hélio',\n  'jaguar',\n  'ketchup',\n  'lagoa',\n  'manga',\n  'ninja',\n  'olho',\n  'pato',\n  'queijo',\n  'raio',\n  'sapo',\n  'tigre',\n  'urso',\n  'vaca',\n  'xarope',\n  'zangado',\n  'abacaxi',\n  'banana',\n  'cachorro',\n  'dado',\n  'elefante',\n  'faca',\n  'gato',\n  'helicoptero',\n  'igreja',\n  'janela',\n  'kiwi',\n];\n\nexport const mockClue = (variety: 'low' | 'default' | 'high' = 'default'): string => {\n  const bank = {\n    low: lowClues,\n    default: clues,\n    high: highClues,\n  }[variety];\n\n  return getRandomItem(bank);\n};\n"],"names":["arteRuimTimer","require","ArteRuimTimerSound","useGlobalLocalStorage","volume","useAudio","src","autoPlay","loop","audio","controls","useEffect","airHorn","DJPruPruPruSound","CrimeItemCard","item","cardWidth","activeColor","isSelected","className","dualTranslate","useLanguage","isDebugEnabled","useDevFeatures","baseUrl","useTDBaseUrl","backgroundImage","capitalize","type","cardId","id","clsx","style","width","borderColor","backgroundColor","content","name","toUpperCase","maxWidth","itemId","CrimeItemBackgroundCard","EmojiCard","emojiId","startsWith","height","source","getSource","numId","glyphId","sourceId","Math","ceil","GlyphCard","undefined","padding","GroupQuestionCard","question","overrideNumber","prefix","number","suffix","memoize","str","match","Number","parseInt","ItemCard","title","text","divPadding","ItemSprite","props","MonsterCard","currentMonster","showControls","useGlobalState","monsterOrientation","setMonsterOrientation","defaultCardWidth","useCardWidth","gap","useEffectOnce","orientation","baseClass","direction","align","classic","onClick","RotateRightOutlined","RotateLeftOutlined","pt","en","MovieCard","movie","disableSuffix","disablePrefix","prefixColor","suffixColor","fontSize","length","ParagraphHighlighter","highlights","highlightClassName","useMemo","escapedHighlights","map","highlight","replace","regex","RegExp","join","parts","split","part","index","test","MovieReviewCard","SignCard","SuspectCard","suspect","hideName","preview","BookPages","leftPage","rightPage","viewBox","d","fill","x","y","DoorFrame","children","xmlns","xmlnsXlink","x1","x2","y1","y2","gradientUnits","offset","stopColor","xlinkHref","isolation","mixBlendMode","opacity","stroke","strokeMiterlimit","SceneTile","tile","onSelectValue","language","description","values","entry","i","isActive","isInative","icon","CheckCircleFilled","tileId","value","SuggestionEasel","onChangeInput","onPressEnter","translate","overflow","placeholder","onChange","bordered","autoComplete","readOnly","CardHighlight","iconSize","PlayersHighlight","PointsHighlight","GainedPoint","gainedPoint","order","isPositive","isNegative","color","GainedPoints","gainedPoints","playerId","gainedPointsDescriptions","points","Array","isArray","RankingBoard","players","ranking","hideGainedPoints","delay","useState","displayStep","setDisplayStep","sortedRanking","setSortedRanking","reRank","setReRank","useMeasure","ref","maxPoints","max","scores","newScore","seconds","useCountdown","duration","autoStart","onExpire","positions","lastPosition","lastPoints","rankByFinalScoreDict","orderBy","reduce","acc","rankByPreviousScore","tempSortedRanking","newEntry","position","previousScore","getAnimationClass","CrownFilled","hPosition","top","avatarId","StepRankingWrapper","subtitle","colorScheme","useTemporarilyHidePlayersBar","appearance","useGameAppearance","scheme","CaretUpOutlined","Sprite","useQuery","queryKey","queryFn","fetch","response","enabled","isLoading","data","isError","paddedWidth","display","placeItems","svgContent","WarningOutlined","dangerouslySetInnerHTML","__html","background","SpeechBubble","shadow","size","rest","MEGAMIX_ACTIONS","TITLES","esquiadores","INSTRUCTIONS","useColorizeBackground","user","currentRound","team","appElement","document","getElementById","classList","add","remove","getMovieTitles","movies","A","B","C","D","TrackIcon","track","IconComponent","PictureIcon","AlienCommunicationIcon","FairyTaleIcon","CrimeSceneIcon","CrossWordsIcon","DetectiveIcon","SkiingIcon","PassportIcon","QueueIcon","DreamIcon","PathIcon","ChoiceIcon","DirectionsIcon","AnonymousIcon","SheepIcon","LoveIcon","TrickOrTreatIcon","WavelengthDeviceIcon","ColorWheelIcon","TrendingIcon","MagicDoorIcon","RevolverIcon","MirrorIcon","MonsterIcon","BoxingGlovesIcon","CriminalIcon","ReviewIcon","GuessIcon","MovieTheaterIcon","game","TDIcon","TrackInstructions","instruction","TrackTitle","DJInstructions","round","current","contained","total","ClubLine","playersList","sortPlayers","winners","filter","player","losers","ClubberAvatar","clubberId","animate","VIPLineIcon","FallbackComponent","_","SpaceContainer","vertical","UnderConstructionIcon","mockSeeding","seeds","forEach","seed","card","JSON","stringify","mockDrawing","prompt","getRandomItem","prompts","tree","cards","answers","mockClue","wave","likeTweet","singleClue","partyAnswers","outfits","mockSelection","options","propertyName","random","MinigameTitle","level","TrackArteRuim","onSubmitAnswer","minWidth","useLoading","onSelect","useMock","variant","drawing","option","disabled","ready","header","LETTERS","getColorFromIndex","shape","loading","String","TrackLabirintoSecreto","trees","IconAvatar","TreeOneIcon","TreeTwoIcon","TreeThreeIcon","MapIcon","Object","arr","Fragment","RightSquareOutlined","TrackContadoresHistorias","margin","PreviewGroup","TrackCrimesHediondos","KnifeIcon","LoupeIcon","L","MetricHighlight","iconPlacement","Boolean","scenes","causeOfDeath","crimeIndexes","reasonForEvidence","location","sceneA","sceneB","sceneC","SpreadsheetGrid","columns","rows","topLeftCorner","gridTemplateColumns","gridTemplateRows","role","SpreadsheetCell","TrackCruzaPalavras","clue","CellPlusButton","PlusCircleFilled","TrackDetetivesImaginativos","table","bot","BOTS_LIST","AVATARS","TrackEsquiadores","dilemma","left","right","mouseX","setMouseX","setDirection","handleMouseMove","e","clientX","window","addEventListener","removeEventListener","screenWidth","innerWidth","SnowHillIcon","TrackEspiaoEntreNos","answer","setAnswer","onSubmit","roles","roleIndex","target","reference","TrackFileiraDeFatos","scenarios","TrackGaleriaDeSonhos","theme","TrackMenteColetiva","wrap","Candidate","head","body","interest","need","funFact","TrackNamoroOuAmizade","heads","bodies","interests","needs","funFacts","TrackNaRuaDoMedo","h","StreetIcon","house","HouseCard","candyLeftover","TrackOndaTelepatica","setPosition","cardSideClass","onMouseEnter","getColorModifier","ArrowLeftOutlined","MinusOutlined","ArrowRightOutlined","TrackPalhetaDeCores","palette","CharacterCard","character","read","SplatterSVG","SocialProfile","handle","verified","Tweet","onLike","onDislike","block","LikeFilled","DislikeFilled","TrackPolemicaDaVez","TrackPortaDosDesesperados","doorWidth","doors","Book","book","TrackQuemNaoMata","keys","ShooterIcon","TrackRetratoFalado","TrackSuperCampeonato","contenders","challenge","contender","overlayColor","TrackTestemunhaOcular","suspects","SpeechBubbleAcceptedIcon","SpeechBubbleDeclinedIcon","TrackUeSoIsso","onSubmitClue","randomColor","TrackVamosAoCinema","reviews","good","bad","TrackMegamixBestOfThree","TrackMegamixThisThat","TrackComunicacaoAlienigena","items","AlienIcon","attributes","attribute","signs","TrackQuemSouEu","botPlayer","selectedGlyphs","positive","glyph","negative","updatedAt","PlayerGlyphs","glyphWidth","TrackTaNaCara","TrackMegamixWhoSaidThis","hideHeader","withName","StepTrack","announcement","TrackComponent","fullWidth","PhaseTrack","state","useUser","useStep","step","setStep","goToNextStep","request","useGameActionRequest","actionName","onSuccess","successMessage","errorMessage","payload","action","useOnSubmitTrackAnswerAPIRequest","verticalAlign","phase","allowedPhase","PHASES","MEGAMIX","TRACK","DJIcon","DJAnnouncementTitle","onClose","unskippable","SeedArteRuim","updateData","lines","setLines","isTimesUp","setTimesUp","start","isRunning","TimeHighlight","PanicIcon","NOOP","SeedLabirintoSecreto","BikiniModelIcon","HeartOutlined","MessageOutlined","SendOutlined","toLowerCase","SeedClubber","onSubmitData","clubbers","cId","label","SeedOndaTelepatica","setValue","SeedPolemicaDaVez","SeedRetratoFalado","hand","SVGPhone","now","moment","format","SeedUeSoIsso","SeedMenteColetiva","value1","setValue1","value2","setValue2","MessageFilled","HeartFilled","FlagFilled","SixPackIcon","SeedContadoresHistorias","SeedParty","setAnswers","htmlFor","event","key","v","StepSeeding","currentStep","setData","objValue","next","buildSeedingSteps","currentSeed","DevMock","PhaseSeeding","useOnSubmitSeedAPIRequest","SmsIcon","SEEDING","WinningCount","ResultArteRuim","winningValues","containerWidth","winningArtworks","includes","winningCards","ResultCruzaPalavras","cheatSheet","ResultNamoroOuAmizade","winningTeam","findIndex","ResultNaRuaDoMedo","ResultRetratoFalado","ResultVamosAoCinema","ResultMegamix","ResultImage","ResultText","ResultCharacter","ResultOndaTelepatica","ResultComunicacaoAlienigena","ResultTaNaCara","ResultLabirintoSecreto","ResultPalhetaDeCores","ResultQuemNaoMata","ResultWhoSaidThis","ResultCrimesHediondos","find","ResultValueDelegator","ResultComponent","SpacePlayerCheckWrapper","paths","every","path","has","VoteArteRuim","VoteCruzaPalavras","VoteNamoroOuAmizade","VoteNaRuaDoMedo","VoteRetratoFalado","VoteVamosAoCinema","VoteMegamix","VoteImagesTrack","VoteValue","VoteOndaTelepatica","VoteCharacterTrack","VotePalhetaDeCores","VoteQuemNaoMata","VoteComunicacaoAlienigena","VoteTaNaCara","VoteLabirintoSecreto","VoteWhoSaidThis","VoteCrimesHediondos","VotesDelegator","VotesComponent","StepResult","onSeeRanking","isFirstRunThrough","scoringType","resultRef","resultsValueWidth","time","currentIndex","timeLeft","winningCount","losingCount","GarbageIcon","isWinningArea","getPosition","TrophyOutlined","side","areaSize","buffer","startAt","increment","ratio","multiplier","floor","getTopValue","StepRanking","goToPreviousStep","innerContent","actions","BouncerIcon","PhaseResult","setIsFirstRunThrough","RESULT","PhaseGameOver","announcementIcon","CrownIcon","isEqual","fairWinners","Container","winner","Achievements","achievements","achievementsReference","getActiveComponent","LoadingPage","DEFAULT","LOBBY","PhaseLobby","RULES","PhaseRules","SETUP","PhaseSetup","GAME_OVER","PageError","gameCollection","GAME_COLLECTION","ACHIEVEMENTS","CandyCount","candyCount","active","speed","infinite","letter","indexOf","abs","getBracketClass","num","showNeedle","needle","showTarget","baseBracketClass","modifier","getGuessResultClass","guess","base","getPoints","countDifferentGuesses","regularPlayers","dict","done","parseSelectedGlyphs","prepareGlyphs","glyphs","push","getRibbons","votes","votesDict","playerEntry","SEPARATOR","characterId","prepareGuesses","result","cx","cy","r","lowClues","clues","highClues","variety","bank","low","default","high"],"sourceRoot":""}