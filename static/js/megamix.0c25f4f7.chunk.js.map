{"version":3,"file":"static/js/megamix.0c25f4f7.chunk.js","mappings":"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","sources":["components/audio/DJPruPruPruSound.tsx","components/cards/MonsterCard.tsx","components/cards/MovieCard.tsx","components/cards/MovieReviewCard.tsx","components/metrics/CardHighlight.tsx","components/metrics/MetricHighlight.tsx","components/metrics/PlayersHighlight.tsx","components/metrics/PointsHighlight.tsx","components/ranking/RankingBoard.tsx","components/ranking/StepRankingWrapper.tsx","games/contadores-historias/components/BookPages.tsx","games/megamix/utils/useColorizeBackground.ts","games/megamix/utils/helpers.ts","games/megamix/components/TaskIcon.tsx","games/megamix/utils/constants.ts","games/megamix/components/TaskInstructions.tsx","games/megamix/components/ClubLine.tsx","mock/clues.ts","games/megamix/utils/mock.ts","games/megamix/components/MinigameTitle.tsx","games/megamix/components/TaskArteRuim.tsx","games/megamix/components/TaskCaminhosMagicos.tsx","games/megamix/components/TaskContadoresHistorias.tsx","games/megamix/components/TaskCrimesHediondos.tsx","components/general/SpreadsheetGrid.tsx","games/megamix/components/TaskCruzaPalavras.tsx","games/megamix/components/TaskDetetivesImaginativos.tsx","games/megamix/components/TaskDilemaDosEsquiadores.tsx","games/megamix/components/TaskEspiaoEntreNos.tsx","games/megamix/components/TaskFileiraDeFatos.tsx","games/megamix/components/TaskGaleriaDeSonhos.tsx","games/megamix/components/TaskMenteColetiva.tsx","games/megamix/components/TaskNamoroOuAmizade.tsx","games/megamix/components/TaskNaRuaDoMedo.tsx","games/megamix/components/TaskOndaTelepatica.tsx","games/megamix/components/TaskPalhetaDeFores.tsx","games/megamix/components/SocialProfile.tsx","games/megamix/components/TaskPolemicaDaVez.tsx","games/megamix/components/TaskPortaDosDesesperados.tsx","games/megamix/components/TaskQuemNaoMata.tsx","games/megamix/components/TaskRetratoFalado.tsx","games/megamix/components/TaskSuperCampeonato.tsx","games/megamix/components/TaskTestemunhaOcular.tsx","games/megamix/components/TaskUeSoIsso.tsx","games/megamix/components/TaskVamosAoCinema.tsx","games/megamix/StepTask.tsx","games/megamix/components/TaskTitle.tsx","games/megamix/components/RulesBlobs.tsx","games/megamix/PhaseTask.tsx","games/megamix/utils/api-requests.ts","games/megamix/components/SeedArteRuim.tsx","games/megamix/components/SeedCaminhosMagicos.tsx","games/megamix/components/SeedClubber.tsx","games/megamix/components/SeedFileiraDeFatos.tsx","games/megamix/components/SeedOndaTelepatica.tsx","games/megamix/components/SeedPolemicaDaVez.tsx","games/megamix/components/SeedRetratoFalado.tsx","games/megamix/StepSeeding.tsx","games/megamix/PhaseSeeding.tsx","games/megamix/components/WinningCount.tsx","games/megamix/components/ResultArteRuim.tsx","games/megamix/components/ResultCaminhosMagicos.tsx","games/megamix/components/ResultCruzaPalavras.tsx","games/megamix/components/ResultNamoroOuAmizade.tsx","games/megamix/components/ResultNaRuaDoMedo.tsx","games/megamix/components/ResultRetratoFalado.tsx","games/megamix/components/ResultVamosNoCinema.tsx","games/megamix/components/ResultValueDelegator.tsx","games/megamix/components/SpacePlayerCheckWrapper.tsx","games/megamix/components/VoteArteRuim.tsx","games/megamix/components/VoteCruzaPalavras.tsx","games/megamix/components/VoteNamoroOuAmizade.tsx","games/megamix/components/VoteNaRuaDoMedo.tsx","games/megamix/components/VoteRetratoFalado.tsx","games/megamix/components/VoteVamosAoCinema.tsx","games/megamix/components/VotesDelegator.tsx","games/megamix/StepResult.tsx","games/megamix/StepRanking.tsx","games/megamix/PhaseResult.tsx","games/megamix/PhaseGameOver.tsx","games/megamix/SessionMegamix.tsx","games/na-rua-do-medo/components/CandyCount.tsx","games/na-rua-do-medo/components/HouseCard.tsx","games/onda-telepatica/utils/helpers.ts","games/porta-dos-desesperados/components/Book.tsx","games/porta-dos-desesperados/components/DoorFrame.tsx","icons/GuessIcon.tsx","icons/PlayersIcon.tsx","icons/SpeechBubbleAcceptedIcon.tsx","icons/StarIcon.tsx"],"sourcesContent":["import { useGlobalState } from 'hooks/useGlobalState';\nimport { useEffect } from 'react';\nimport { useAudio } from 'react-use';\n// Sound\nconst airHorn = require('assets/sounds/airhorn.mp3');\n\nexport function DJPruPruPruSound() {\n  const [volume] = useGlobalState('volume');\n  const [audio, , controls] = useAudio({\n    src: airHorn,\n    autoPlay: true,\n  });\n\n  // Updated volume\n  useEffect(() => {\n    controls.volume(volume);\n  }, [volume]); // eslint-disable-line\n\n  return <>{audio}</>;\n}\n","import clsx from 'clsx';\nimport { useEffectOnce } from 'react-use';\n// Ant Design Resources\nimport { Button, Space, SpaceProps } from 'antd';\nimport { RotateLeftOutlined, RotateRightOutlined } from '@ant-design/icons';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useGlobalState } from 'hooks/useGlobalState';\n// Components\nimport { ImageCard } from 'components/cards';\nimport { Translate } from 'components/language';\n// Sass\nimport './MonsterCard.scss';\n\ninterface MonsterCardProps extends SpaceProps {\n  currentMonster: Monster;\n  showControls?: boolean;\n  cardWidth?: number;\n}\n\nexport function MonsterCard({ currentMonster, showControls = true, cardWidth, ...props }: MonsterCardProps) {\n  const [monsterOrientation, setMonsterOrientation] = useGlobalState('monsterOrientation');\n  const defaultCardWidth = useCardWidth(5, 16, 120, 360);\n\n  useEffectOnce(() => {\n    if (currentMonster.orientation === 'horizontal') {\n      setMonsterOrientation(currentMonster.orientation);\n    }\n  });\n\n  const onChangeOrientation = () => {\n    const newOrientation = monsterOrientation === 'vertical' ? 'horizontal' : 'vertical';\n    setMonsterOrientation(newOrientation);\n  };\n\n  const baseClass = 'monster-card';\n  return (\n    <Space direction=\"vertical\" align=\"center\" {...props}>\n      <ImageCard\n        imageId={currentMonster.id}\n        cardWidth={cardWidth || defaultCardWidth}\n        className={clsx(\n          baseClass,\n          monsterOrientation === 'vertical' ? `${baseClass}--vertical` : `${baseClass}--horizontal`\n        )}\n      />\n      {showControls && (\n        <Button onClick={onChangeOrientation}>\n          {monsterOrientation === 'vertical' ? <RotateRightOutlined /> : <RotateLeftOutlined />}\n          <Translate pt=\"Girar\" en=\"Rotate\" />\n        </Button>\n      )}\n    </Space>\n  );\n}\n","import clsx from 'clsx';\n// Sass\nimport './MovieCard.scss';\n\ntype MovieCardProps = {\n  movie: MovieCard;\n  disableSuffix?: boolean;\n  suffixColor?: string;\n  disablePrefix?: boolean;\n  prefixColor?: string;\n};\n\nexport function MovieCard({ movie, disableSuffix, disablePrefix, prefixColor, suffixColor }: MovieCardProps) {\n  return (\n    <div className=\"movie-card\">\n      <div\n        className={clsx('movie-card__suffix', disableSuffix && 'movie-card__suffix--disabled')}\n        style={{ backgroundColor: !disableSuffix && suffixColor ? suffixColor : 'rgba(248, 248, 248, 0.6)' }}\n      >\n        {movie.suffix}\n      </div>\n\n      <div\n        className={clsx('movie-card__prefix', disablePrefix && 'movie-card__prefix--disabled')}\n        style={{ backgroundColor: !disablePrefix && prefixColor ? prefixColor : 'rgba(248, 248, 248, 0.6)' }}\n      >\n        {movie.prefix}\n      </div>\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Components\nimport Highlighter from 'react-highlight-words';\nimport { Translate } from 'components/language';\n// Sass\nimport './MovieReviewCard.scss';\n\ntype MovieReviewCardProps = {\n  /**\n   * The type of review\n   */\n  type: 'positive' | 'negative';\n  /**\n   * The review itself\n   */\n  text: string;\n  /**\n   * Optional list of words to be highlighted in the review\n   */\n  highlights?: string[];\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n};\n\nexport const MovieReviewCard = ({ type, text, highlights = [], className = '' }: MovieReviewCardProps) => {\n  const baseClass = 'movie-review-card';\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${type}`, className)}>\n      <span className={`${baseClass}__header`}>\n        {type === 'positive' ? (\n          <Translate pt=\"Crítica Positiva\" en=\"Positive Review\" />\n        ) : (\n          <Translate pt=\"Crítica Negativa\" en=\"Negative Review\" />\n        )}\n        {type === 'positive' ? ' 👏' : ' 🤮'}\n      </span>\n      <div className={`${baseClass}__content`}>\n        <Highlighter\n          className={`${baseClass}__text`}\n          highlightClassName={clsx(`${baseClass}__text-highlight`, `${baseClass}__text-highlight--${type}`)}\n          searchWords={highlights}\n          autoEscape={true}\n          textToHighlight={text}\n        />\n      </div>\n    </div>\n  );\n};\n","import { ImageCardsIcon } from 'icons/ImageCardsIcon';\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function CardHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<ImageCardsIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import { ReactNode } from 'react';\nimport clsx from 'clsx';\n// Components\nimport { IconAvatar } from 'components/avatars/IconAvatar';\n\nimport { AvatarSize } from 'antd/lib/avatar/SizeContext';\n\nexport type MetricHighlightProps = {\n  /**\n   * The text to be highlighted\n   */\n  children: ReactNode;\n  /**\n   * The icon representing the metric\n   */\n  icon: ReactNode;\n  /**\n   * Indicates if it's a negative metric\n   */\n  type?: 'positive' | 'negative' | 'default';\n  /**\n   * The size of the avatar (default: small)\n   */\n  iconSize?: AvatarSize;\n  /**\n   * Custom class\n   */\n  className?: string;\n  /**\n   * Icon placement (default: after)\n   */\n  iconPlacement?: 'before' | 'after';\n};\n\nexport function MetricHighlight({\n  children,\n  icon,\n  type,\n  className,\n  iconSize = 'small',\n  iconPlacement = 'after',\n}: MetricHighlightProps) {\n  return (\n    <span className={clsx('metric-highlight', type && `metric-highlight--${type}`, className)}>\n      {iconPlacement === 'before' && (\n        <>\n          <IconAvatar size={iconSize} icon={icon} />{' '}\n        </>\n      )}\n      {children}\n      {iconPlacement === 'after' && (\n        <>\n          {' '}\n          <IconAvatar size={iconSize} icon={icon} />\n        </>\n      )}\n    </span>\n  );\n}\n\nexport type HighlightProps = Pick<MetricHighlightProps, 'children' | 'type' | 'iconSize' | 'className'>;\n","import { PlayersIcon } from 'icons/PlayersIcon';\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function PlayersHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<PlayersIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import { StarIcon } from 'icons/StarIcon';\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function PointsHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<StarIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode, useEffect, useMemo, useState } from 'react';\nimport { orderBy } from 'lodash';\nimport { useEffectOnce } from 'react-use';\n// Ant Design Resources\nimport { Tooltip } from 'antd';\nimport { CrownFilled } from '@ant-design/icons';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useDimensions } from 'hooks/useDimensions';\n// Components\nimport { Translate } from 'components/language';\nimport { Avatar } from 'components/avatars';\n\ntype GainedPointProps = {\n  gainedPoint: number;\n  order: number;\n  description?: any;\n};\n\nfunction GainedPoint({ gainedPoint, order, description }: GainedPointProps): JSX.Element {\n  const isPositive = gainedPoint > 0;\n  const isNegative = gainedPoint < 0;\n  return (\n    <li\n      className={clsx(\n        'ranking-board__gained-point',\n        isPositive && 'ranking-board__gained-point--plus',\n        isNegative && 'ranking-board__gained-point--minus',\n        `ranking-board__gained-point--${order}`\n      )}\n    >\n      <Tooltip\n        title={description ?? <Translate pt=\"Pontos ganhos\" en=\"Gained Points\" />}\n        color={isPositive ? 'gold' : isNegative ? 'red' : 'gray'}\n      >\n        {isPositive ? '+' : ''}\n        {gainedPoint}\n      </Tooltip>\n    </li>\n  );\n}\n\ntype GainedPointsProps = {\n  gainedPoints: number[] | number;\n  playerId: PlayerId;\n  gainedPointsDescriptions?: any[];\n};\n\nfunction GainedPoints({\n  gainedPoints,\n  playerId,\n  gainedPointsDescriptions = [],\n}: GainedPointsProps): JSX.Element {\n  const points = Array.isArray(gainedPoints) ? gainedPoints : [gainedPoints];\n  return (\n    <ul className=\"ranking-board__cell-gained-points\">\n      {points.map((gainedPoint, index) => (\n        <GainedPoint\n          key={`gained-point-${playerId}-${index}`}\n          gainedPoint={gainedPoint}\n          order={index}\n          description={gainedPointsDescriptions[index]}\n        />\n      ))}\n    </ul>\n  );\n}\n\ntype RankingBoardProps = {\n  players: GamePlayers;\n  ranking: GameRanking;\n  gainedPointsDescriptions?: ReactNode[];\n  hideGainedPoints?: boolean;\n  delay?: number;\n};\n\nexport function RankingBoard({\n  players,\n  ranking,\n  gainedPointsDescriptions,\n  hideGainedPoints = false,\n  delay = 0,\n}: RankingBoardProps): JSX.Element {\n  const [displayStep, setDisplayStep] = useState(0);\n  const [sortedRanking, setSortedRanking] = useState<GameRanking>([]);\n  const [reRank, setReRank] = useState(0);\n  const [, height] = useDimensions('ranking-row-0');\n\n  const maxPoints = useMemo(() => Math.max(...ranking.map((scores) => scores.newScore)), [ranking]);\n\n  const { seconds } = useCountdown({\n    duration: 5 + delay,\n    autoStart: true,\n    onExpire: () => {\n      setReRank(1);\n      setDisplayStep(3);\n    },\n  });\n\n  // Rank by previousScore\n  useEffectOnce(() => {\n    const positions: PlainObject = {};\n    let lastPosition = 0;\n    let lastPoints = 0;\n\n    const rankByFinalScoreDict = orderBy(ranking, ['newScore', 'name'], ['desc', 'asc']).reduce(\n      (acc: PlainObject, entry, index) => {\n        acc[entry.playerId] = index;\n        // Calculate position\n        if (lastPoints === 0 || entry.newScore < lastPoints) {\n          lastPoints = entry.newScore;\n          lastPosition += 1;\n        }\n        positions[entry.playerId] = [0, lastPosition];\n        return acc;\n      },\n      {}\n    );\n\n    const rankByPreviousScore = orderBy(ranking, ['previousScore', 'name'], ['desc', 'asc']);\n\n    // Reset position trackers\n    lastPosition = 0;\n    lastPoints = 0;\n\n    const tempSortedRanking: GameRanking = rankByPreviousScore.map((entry, index) => {\n      const newEntry = { ...entry };\n\n      newEntry.order = [index, rankByFinalScoreDict[newEntry.playerId]];\n      newEntry.position = positions[newEntry.playerId];\n      // Calculate position\n      if (lastPoints === 0 || entry.previousScore < lastPoints) {\n        lastPoints = entry.previousScore;\n        lastPosition += 1;\n      }\n      newEntry.position[0] = lastPosition;\n      return newEntry;\n    });\n\n    setSortedRanking(tempSortedRanking);\n  });\n\n  // Show gained points\n  useEffect(() => {\n    if (seconds === 4 + delay) {\n      setDisplayStep(1);\n    } else if (seconds === 2 + delay) {\n      setDisplayStep(2);\n    }\n  }, [seconds, delay]);\n\n  return (\n    <div\n      className=\"ranking-board\"\n      style={{ height: `${(Math.max(60, height) + 8) * sortedRanking.length}px` }}\n    >\n      {sortedRanking.map((entry, index) => {\n        const { playerId, newScore, previousScore, gainedPoints, order, position } = entry;\n        const hPosition = (Math.max(60, height) + 8) * (order[reRank] ?? 0);\n\n        return (\n          <div\n            className={`ranking-board__row ranking-board__row--${index}`}\n            key={`ranking-${playerId}`}\n            id={`ranking-row-${index}`}\n            style={{ top: `${hPosition}px` }}\n          >\n            <div className=\"ranking-board__cell-crown\">\n              {newScore > 0 && maxPoints === newScore && displayStep >= 3 && (\n                <CrownFilled className=\"ranking-board__crown-icon\" />\n              )}\n            </div>\n            <div className=\"ranking-board__cell-position\">#{position[reRank] ?? ''}</div>\n            <div className=\"ranking-board__cell-player\">\n              <div className=\"ranking-board__avatar\">\n                <Avatar id={players[playerId].avatarId} />\n              </div>\n              <div className=\"ranking-board__name\">{players[playerId].name}</div>\n            </div>\n            <Tooltip title={<Translate pt=\"Pontos Anteriores\" en=\"Previous Points\" />} color=\"gray\">\n              <div className=\"ranking-board__cell-points\">{previousScore}</div>\n            </Tooltip>\n            {!hideGainedPoints && displayStep >= 1 && gainedPoints !== undefined && (\n              <GainedPoints\n                gainedPoints={gainedPoints}\n                playerId={playerId}\n                gainedPointsDescriptions={gainedPointsDescriptions}\n              />\n            )}\n            {displayStep >= 2 && (\n              <Tooltip title=\"Total\" color=\"gold\">\n                <span className=\"ranking-board__cell-points-total\">{newScore}</span>\n              </Tooltip>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { CaretUpOutlined } from '@ant-design/icons';\n// Hooks\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Components\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { RankingBoard } from './RankingBoard';\n\ntype StepRankingWrapperProps = {\n  /**\n   * The players\n   */\n  players: GamePlayers;\n  /**\n   * The ranking array\n   */\n  ranking: GameRanking;\n  /**\n   * Gained points descriptions for the popover\n   */\n  gainedPointsDescriptions: ReactNode[];\n  /**\n   * Additional content\n   */\n  children?: ReactNode;\n  /**\n   * Replacement title for Ranking\n   */\n  title?: ReactNode;\n  /**\n   * Optional node that goes under the title\n   */\n  subtitle?: ReactNode;\n};\n\nexport function StepRankingWrapper({\n  players,\n  ranking,\n  gainedPointsDescriptions,\n  children,\n  title,\n  subtitle,\n}: StepRankingWrapperProps) {\n  useTemporarilyHidePlayersBar();\n\n  return (\n    <Step>\n      <Title>{title ?? 'Ranking'}</Title>\n\n      {subtitle}\n\n      <RankingBoard players={players} ranking={ranking} gainedPointsDescriptions={gainedPointsDescriptions} />\n      <Instruction className=\"step-ranking-wrapper-gained-points-instruction\">\n        <CaretUpOutlined />\n        <Translate\n          pt=\"Passe o mouse em cada um dos pontos para saber como eles foram distribuídos\"\n          en=\"Hover over the scores to learn how they were granted\"\n        />\n        <CaretUpOutlined />\n      </Instruction>\n\n      {children}\n    </Step>\n  );\n}\n","import { ReactNode } from 'react';\n\ntype BookPagesProps = {\n  leftPage: ReactNode;\n  rightPage: ReactNode;\n};\n\nexport function BookPages({ leftPage, rightPage }: BookPagesProps) {\n  return (\n    <svg viewBox=\"0 0 590 320\" className=\"c-book-pages\">\n      <path\n        d=\"M4 12.46s71.16 8 145.65 0S295 16 295 16s90.78-12.42 156 0S586 5.14 586 5.14v296s-43.23 24.6-158.29 8S295 314 295 314s-94.44-17.89-143.33-3.59c-29.88 8.74-147.64-4-147.64-4z\"\n        fill=\"#ffffff\"\n      ></path>\n      <foreignObject x=\"13\" y=\"23\" width=\"280\" height=\"276\">\n        <div>{leftPage}</div>\n      </foreignObject>\n\n      <foreignObject x=\"295\" y=\"23\" width=\"280\" height=\"276\">\n        <div>{rightPage}</div>\n      </foreignObject>\n      <path d=\"M294.75 23.77h.5v280.66h-.5z\" fill=\"grey\"></path>\n    </svg>\n  );\n}\n","import { useEffect } from 'react';\n\nexport function useColorizeBackground(user: GamePlayer, currentRound: number = 0) {\n  const team = user?.team?.[currentRound - 1];\n\n  // Colorize background\n  useEffect(() => {\n    if (team) {\n      const appElement = document.getElementById('app');\n      if (appElement) {\n        if (team === 'L') {\n          appElement.classList.add('background-sad');\n        } else {\n          appElement.classList.remove('background-sad');\n        }\n      }\n    }\n    return () => {\n      const appElement = document.getElementById('app');\n      appElement?.classList.remove('background-sad');\n    };\n  }, [team]);\n}\n","import { StepProps } from 'antd';\n\nexport const buildSeedingSteps = (\n  seeds: SeedEntry[],\n  translate: (pt: string, en: string, custom?: string | undefined) => string\n): StepProps[] => {\n  return seeds.map((seed) => {\n    switch (seed.type) {\n      case 'arte-ruim':\n        return {\n          title: translate('Hobby Artístico', 'Artistic Hobby'),\n          description: translate('Se expresse!', 'Express yourself!'),\n        };\n      case 'caminhos-magicos':\n        return {\n          title: translate('Postando no Insta', 'Instagram post'),\n          description: translate('Não existe sexy demais!', 'Do it for the likes!'),\n        };\n      case 'fileira-de-fatos':\n        return {\n          title: translate('Torpedo do Amigo', \"A friend's text\"),\n          description: translate('Responda!', 'Reply!'),\n        };\n      case 'onda-telepatica':\n        return {\n          title: translate('Tarefa de Casa', 'Homework'),\n          description: translate('Não pode deixar pra depois!', \"You can't leave it for tomorrow!\"),\n        };\n      case 'polemica-da-vez':\n        return {\n          title: translate('Redes sociais', 'Social Media'),\n          description: translate('Dê uma olhada no twitter', 'Check it out twitter'),\n        };\n      case 'retrato-falado':\n        return {\n          title: translate('Flashback', 'Flashback'),\n          description: translate('Um evento traumatizante', 'A traumatizing event'),\n        };\n      case 'clubber':\n        return {\n          title: translate('Roupinha', 'Outfit'),\n          description: translate('Como ir pra balada', 'How to be cool'),\n        };\n      default:\n        return {};\n    }\n  });\n};\n\nexport const showDJPruPruPruStep = (round: GameRound) => {\n  if (round.current <= 1 || !round) return 0; // true\n\n  if (round.current === Math.round(round.total / 2)) return 0;\n\n  if (round.current === round.total) return 0;\n\n  return 1; // false\n};\n\nexport const getMovieTitles = (movies: MovieCard[]) => {\n  return {\n    A: `${movies[0].prefix} ${movies[1].suffix}`,\n    B: `${movies[1].prefix} ${movies[2].suffix}`,\n    C: `${movies[3].prefix} ${movies[4].suffix}`,\n    D: `${movies[4].prefix} ${movies[5].suffix}`,\n  };\n};\n","// Components\nimport { BoxingGlovesIcon } from 'icons/BoxingGlovesIcon';\nimport { ColorWheelIcon } from 'icons/ColorWheelIcon';\nimport { CrimeSceneIcon } from 'icons/CrimeSceneIcon';\nimport { CriminalIcon } from 'icons/CriminalIcon';\nimport { CrossWordsIcon } from 'icons/CrossWordsIcon';\nimport { DetectiveIcon } from 'icons/DetectiveIcon';\nimport { DreamIcon } from 'icons/DreamIcon';\nimport { FairyTaleIcon } from 'icons/FairyTaleIcon';\nimport { GuessIcon } from 'icons/GuessIcon';\nimport { LoveIcon } from 'icons/LoveIcon';\nimport { MagicDoorIcon } from 'icons/MagicDoorIcon';\nimport { MonsterIcon } from 'icons/MonsterIcon';\nimport { MovieTheaterIcon } from 'icons/MovieTheaterIcon';\nimport { PassportIcon } from 'icons/PassportIcon';\nimport { PathIcon } from 'icons/PathIcon';\nimport { PictureIcon } from 'icons/PictureIcon';\nimport { QueueIcon } from 'icons/QueueIcon';\nimport { RevolverIcon } from 'icons/RevolverIcon';\nimport { SheepIcon } from 'icons/SheepIcon';\nimport { SkiingIcon } from 'icons/SkiingIcon';\nimport { TDIcon } from 'icons/TDIcon';\nimport { TrendingIcon } from 'icons/TrendingIcon';\nimport { TrickOrTreatIcon } from 'icons/TrickOrTreatIcon';\nimport { WavelengthDeviceIcon } from 'icons/WavelengthDeviceIcon';\n\ntype TaskIconProps = {\n  task: Task;\n};\n\nexport const TaskIcon = ({ task }: TaskIconProps) => {\n  switch (task.game) {\n    case 'arte-ruim':\n      return <PictureIcon />;\n    case 'caminhos-magicos':\n      return <PathIcon />;\n    case 'contadores-historias':\n      return <FairyTaleIcon />;\n    case 'crimes-hediondos':\n      return <CrimeSceneIcon />;\n    case 'cruza-palavras':\n      return <CrossWordsIcon />;\n    case 'detetives-imaginativos':\n      return <DetectiveIcon />;\n    case 'dilema-dos-esquiadores':\n      return <SkiingIcon />;\n    case 'espiao-entre-nos':\n      return <PassportIcon />;\n    case 'fileira-de-fatos':\n      return <QueueIcon />;\n    case 'galeria-de-sonhos':\n      return <DreamIcon />;\n    case 'mente-coletiva':\n      return <SheepIcon />;\n    case 'namoro-ou-amizade':\n      return <LoveIcon />;\n    case 'na-rua-do-medo':\n      return <TrickOrTreatIcon />;\n    case 'namoro-amizade':\n      return <LoveIcon />;\n    case 'onda-telepatica':\n      return <WavelengthDeviceIcon />;\n    case 'palheta-de-cores':\n      return <ColorWheelIcon />;\n    case 'polemica-da-vez':\n      return <TrendingIcon />;\n    case 'porta-dos-desesperados':\n      return <MagicDoorIcon />;\n    case 'quem-nao-mata':\n      return <RevolverIcon />;\n    case 'retrato-falado':\n      return <MonsterIcon />;\n    case 'super-campeonato':\n      return <BoxingGlovesIcon />;\n    case 'testemunha-ocular':\n      return <CriminalIcon />;\n    case 'ue-so-isso':\n      return <GuessIcon />;\n    case 'vamos-ao-cinema':\n      return <MovieTheaterIcon />;\n    default:\n      return <TDIcon />;\n  }\n};\n","export const TITLES: Record<string, DualLanguageValue> = {\n  'arte-ruim': {\n    pt: 'Arte Ruim Pra Dedéu',\n    en: 'Questionable Art',\n  },\n  'caminhos-magicos': {\n    pt: 'Caminhos Mágicos',\n    en: 'Magic Pathways',\n  },\n  'contadores-historias': {\n    pt: 'Contadores de Histórias',\n    en: 'Storytellers',\n  },\n  'crimes-hediondos': {\n    pt: 'Crimes Hediondos',\n    en: 'Horrific Crimes',\n  },\n  'cruza-palavras': {\n    pt: 'Cruza Palavras',\n    en: 'Mixed Clues',\n  },\n  'detetives-imaginativos': {\n    pt: 'Detetives Imaginativos',\n    en: 'Imaginative Detectives',\n  },\n  'dilema-dos-esquiadores': {\n    pt: 'O Dilema do Esquiador',\n    en: \"The Skier's Dilemma\",\n  },\n  'espiao-entre-nos': {\n    pt: 'Espião Entre Nós',\n    en: 'Spy the Spies',\n  },\n  'fileira-de-fatos': {\n    pt: 'Fileira de Fatos',\n    en: 'Facts Lineup',\n  },\n  'galeria-de-sonhos': {\n    pt: 'Galeria de Sonhos',\n    en: 'Dream Gallery',\n  },\n  'mente-coletiva': {\n    pt: 'Mente Coletiva',\n    en: 'Herd Mind',\n  },\n  'na-rua-do-medo': {\n    pt: 'Na Rua do Medo',\n    en: 'Fear Street',\n  },\n  'namoro-ou-amizade': {\n    pt: 'Namoro ou Amizade',\n    en: 'Awkward Dates',\n  },\n  'onda-telepatica': {\n    pt: 'Ondas Telepáticas',\n    en: 'Telepathic Waves',\n  },\n  'palheta-de-cores': {\n    pt: 'Palheta de Cores',\n    en: 'Color Palette',\n  },\n  'polemica-da-vez': {\n    pt: 'Polêmica da Vez',\n    en: \"That's Polemic!\",\n  },\n  'porta-dos-desesperados': {\n    pt: 'Porta dos Desesperados',\n    en: 'Obscure Doors',\n  },\n  'retrato-falado': {\n    pt: 'Retrato Falado Monstruoso',\n    en: 'Monster Sketch',\n  },\n  'quem-nao-mata': {\n    pt: 'Quem Não Mata, Morre',\n    en: 'Mortal Standoff',\n  },\n  'super-campeonato': {\n    pt: 'Super Campeonato',\n    en: 'Ultimate Championship',\n  },\n  'testemunha-ocular': {\n    pt: 'Testemunha Ocular',\n    en: 'Eye Witness',\n  },\n  'ue-so-isso': {\n    pt: 'Ué, só isso?',\n    en: \"That's it?\",\n  },\n  'vamos-ao-cinema': {\n    pt: 'Vamos no cinema?',\n    en: 'Movie night!',\n  },\n};\n\nexport const INSTRUCTIONS: Record<string, DualLanguageValue> = {\n  'arte-ruim': {\n    pt: 'Uma imagem vale mais que mil palavras',\n    en: \"That's art!\",\n  },\n  'caminhos-magicos': {\n    pt: 'Vamos andar pela floresta',\n    en: \"Let's walk into the woods\",\n  },\n  'contadores-historias': {\n    pt: 'Conte uma história',\n    en: 'Tell us a story',\n  },\n  'crimes-hediondos': {\n    pt: 'Desvenda o crime!',\n    en: 'Solve the crime!',\n  },\n  'cruza-palavras': {\n    pt: 'Coloque a dica na grade de palavras!',\n    en: 'Place the clue in the word grid!',\n  },\n  'detetives-imaginativos': {\n    pt: 'Há um impostor entre a gente!',\n    en: 'There is an impostor among us!',\n  },\n  'dilema-dos-esquiadores': {\n    pt: 'Escolha uma montanha para esquiar!',\n    en: 'Choose a mountain to ski!',\n  },\n  'espiao-entre-nos': {\n    pt: 'Onde você está?',\n    en: 'Where are we?',\n  },\n  'fileira-de-fatos': {\n    pt: 'Coloque a fila de números na ordem!',\n    en: 'Place the line of numbers in order!',\n  },\n  'galeria-de-sonhos': {\n    pt: 'Um tema, um sonho, várias images',\n    en: 'A theme, a dream, many images',\n  },\n  'mente-coletiva': {\n    pt: 'Junte-se as ovelhas!',\n    en: 'Join the herd!',\n  },\n  'na-rua-do-medo': {\n    pt: 'Gostosuras ou travessuras?',\n    en: 'Trick or treat?',\n  },\n  'namoro-ou-amizade': {\n    pt: 'Selecione o melhor partido',\n    en: \"Who's the best catch?\",\n  },\n  'onda-telepatica': {\n    pt: 'Para onde o ponteiro está apontando?',\n    en: 'Where is the pointer pointing to?',\n  },\n  'palheta-de-cores': {\n    pt: 'Selecione a melhor cor',\n    en: 'Select the best color swatch',\n  },\n  'polemica-da-vez': {\n    pt: 'Quantas curtidas isso ganha?',\n    en: 'How many likes, huh?',\n  },\n  'porta-dos-desesperados': {\n    pt: 'Qual a porta é a saída?',\n    en: 'What door is the exit?',\n  },\n  'quem-nao-mata': {\n    pt: 'Mate alguém...',\n    en: 'Kill someone...',\n  },\n  'retrato-falado': {\n    pt: 'Qual o melhor monstro?',\n    en: 'What is the best monster?',\n  },\n  'super-campeonato': {\n    pt: 'Quem ganha essa batalha?',\n    en: 'Who will win this battle?',\n  },\n  'testemunha-ocular': {\n    pt: 'Quem é o criminoso?',\n    en: 'Who is the perpetrator?',\n  },\n  'ue-so-isso': {\n    pt: 'Escreva uma dica para ser eliminada',\n    en: 'Write a clue to be eliminated',\n  },\n  'vamos-ao-cinema': {\n    pt: 'Vamos ver qual filme?',\n    en: 'But what movie?',\n  },\n};\n","// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { INSTRUCTIONS } from '../utils/constants';\n\ntype TaskInstructionsProps = {\n  task: Task;\n};\n\nexport const TaskInstructions = ({ task }: TaskInstructionsProps) => {\n  const { dualTranslate } = useLanguage();\n\n  const instruction: DualLanguageValue = INSTRUCTIONS?.[task.game] ?? {\n    pt: 'Se vire nos 30!',\n    en: 'Do something!',\n  };\n\n  return <>{dualTranslate(instruction)}</>;\n};\n","import { useMemo } from 'react';\n// AntDesign Resources\nimport { Tooltip } from 'antd';\n// Hooks\n// Utils\nimport { sortPlayers } from 'utils/helpers';\n// Components\nimport { VIPLineIcon } from 'icons/VIPLineIcon';\nimport { ClubberAvatar } from './ClubberAvatar';\n\ntype MinigameTitleProps = {\n  players: GamePlayers;\n  currentRound: number;\n};\n\nexport function ClubLine({ players, currentRound }: MinigameTitleProps) {\n  const { winners, losers } = useMemo(() => {\n    const playersList = sortPlayers(players);\n\n    return {\n      winners: playersList.filter((player) => player.team[currentRound - 1] === 'W'),\n      losers: playersList.filter((player) => player.team[currentRound - 1] === 'L'),\n    };\n  }, [players, currentRound]);\n\n  return (\n    <div className=\"club-line\">\n      <div className=\"club-line__background\"></div>\n      <div className=\"club-line__clubbers\">\n        <div className=\"club-line__area\">\n          {winners.map((player) => (\n            <div className=\"club-line__player\" key={`${player.id}-${player.clubberId}`}>\n              <Tooltip title={player.name}>\n                <ClubberAvatar\n                  id={player.avatarId}\n                  clubberId={player.clubberId}\n                  className=\"club-line__clubber\"\n                  animate\n                />\n              </Tooltip>\n            </div>\n          ))}\n        </div>\n        <VIPLineIcon className=\"club-line__vip-icon\" />\n        <div className=\"club-line__area\">\n          {losers.map((player) => (\n            <div\n              className=\"club-line__player club-line__player--trash\"\n              key={`${player.id}-${player.clubberId}`}\n            >\n              <Tooltip title={player.name}>\n                <ClubberAvatar\n                  key={`${player.id}-${player.clubberId}`}\n                  id={player.avatarId}\n                  clubberId={player.clubberId}\n                  className=\"club-line__clubber\"\n                />\n              </Tooltip>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { getRandomItem } from 'utils/helpers';\n\nconst clues = ['agua', 'bola', 'coco', 'dedo', 'egua', 'flauta', 'gatilho', 'hélio', 'jaguar'];\n\nexport const mockClue = (): string => {\n  return getRandomItem(clues);\n};\n","import { mockClue } from 'mock/clues';\nimport { mockDrawing } from 'mock/drawing';\nimport { getRandomItem } from 'utils/helpers';\n\nexport function mockSeeding(seeds: SeedEntry[]) {\n  const data: PlainObject = {};\n  seeds.forEach((seed) => {\n    switch (seed.type) {\n      case 'arte-ruim':\n        data[seed.card.id] = JSON.stringify(mockDrawing());\n        break;\n      case 'caminhos-magicos':\n        const ids = getIds(seed.cards);\n        data[seed.portal.id] = getRandomItem(ids);\n        break;\n      case 'fileira-de-fatos':\n        data.fact = Math.round(Math.random() * 100);\n        break;\n      case 'onda-telepatica':\n        data.wave = mockClue();\n        break;\n      case 'polemica-da-vez':\n        data.likeTopic = getRandomItem([true, false]);\n        break;\n      case 'retrato-falado':\n        data[seed.card.id] = JSON.stringify(mockDrawing());\n        break;\n      case 'clubber':\n        data.clubberId = seed.outfits[0];\n        break;\n      default:\n        return {};\n    }\n  });\n\n  return data;\n}\n\nexport function mockSelection(options: unknown[], propertyName?: string) {\n  const random = getRandomItem(options) as PlainObject;\n  return propertyName ? random[propertyName] : random;\n}\n\nexport function mockText() {\n  return getRandomItem(['bola', 'bolas', 'prata', 'prato', 'pirulito', 'domingo']);\n}\n\nexport function getIds(list: PlainObject[]) {\n  return list.map((entry) => entry.id);\n}\n","// Utils\nimport { INSTRUCTIONS } from '../utils/constants';\n// Components\nimport { Title } from 'components/text';\nimport { useLanguage } from 'hooks/useLanguage';\n\ntype MinigameTitleProps = {\n  round: GameRound;\n  task: Task;\n};\n\nexport function MinigameTitle({ round, task }: MinigameTitleProps) {\n  const { dualTranslate } = useLanguage();\n  return (\n    <Title size=\"small\">\n      <span className=\"minigame-title__number\">Minigame {round.current}</span>\n      <br />\n      {dualTranslate(INSTRUCTIONS[task.game])}\n    </Title>\n  );\n}\n","// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { LETTERS } from 'utils/constants';\nimport { getColorFromIndex } from 'utils/helpers';\nimport { mockSelection } from '../utils/mock';\n// Components\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from './MinigameTitle';\nimport { CanvasSVG } from 'components/canvas';\nimport { TransparentButton } from 'components/buttons';\n\nexport const TaskArteRuim = ({ task, round, onSubmitTask, user, players }: TaskProps) => {\n  const cardWidth = useCardWidth(5, 32, 250, 270);\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitTask({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    if (task.variant === 'cards') {\n      onSelect(mockSelection(task.data.cards, 'id'));\n    }\n\n    if (task.variant === 'drawings') {\n      onSelect(mockSelection(task.data.options, 'playerId'));\n    }\n  });\n\n  if (task.variant === 'cards') {\n    return (\n      <>\n        <MinigameTitle round={round} task={task} />\n        <Instruction contained>\n          <Translate\n            pt={\n              <>\n                Dentre as cartas abaixo, qual melhor descreve essa linda ilustração?\n                <br />\n                Foi você quem desenhou? Lembre-se que a resposta correta não é importante, e sim o que a\n                maioria escolher.\n              </>\n            }\n            en={\n              <>\n                Among the cards below, which one best describes the beautiful illustration?\n                <br />\n                <em>\n                  Is that your drawing? Remember that the correct answer is not important, but what the\n                  majority will choose.\n                </em>\n              </>\n            }\n          />\n        </Instruction>\n\n        <Space className=\"space-container\">\n          <CanvasSVG drawing={task.data.option.drawing} width={cardWidth} className=\"a-drawing\" />\n        </Space>\n\n        <Space className=\"space-container\">\n          {task.data.cards.map((card: TextCard, index: number) => (\n            <TransparentButton\n              key={card.id}\n              disabled={isLoading || user.ready}\n              onClick={() =>\n                onSubmitTask({\n                  data: { value: card.id },\n                })\n              }\n            >\n              <Card header={LETTERS[index]} color={getColorFromIndex(index)}>\n                {card.text}\n              </Card>\n            </TransparentButton>\n          ))}\n        </Space>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <MinigameTitle round={round} task={task} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Dentre as ilustrações abaixo, qual melhor descreve a carta?\n              <br />\n              Foi você quem desenhou? Lembre-se que a resposta correta não é importante, e sim o que a maioria\n              escolher.\n            </>\n          }\n          en={\n            <>\n              Among the illustrations below, which one best fits the card?\n              <br />\n              <em>\n                Is that your drawing? Remember that the correct answer is not important, but what the majority\n                will choose.\n              </em>\n            </>\n          }\n        />\n      </Instruction>\n\n      <Space className=\"space-container\">\n        <Card header=\"A\" color={getColorFromIndex(0)}>\n          {task.data.cards[1].text}\n        </Card>\n      </Space>\n\n      <div className=\"a-drawings\">\n        {task.data.options.map((entry: PlainObject) => (\n          <div className=\"a-drawings__entry\">\n            <CanvasSVG drawing={entry.drawing} width={cardWidth} className=\"a-drawing\" />\n\n            <Space className=\"space-container\">\n              <Button\n                shape=\"round\"\n                type=\"primary\"\n                disabled={user.ready}\n                loading={isLoading}\n                onClick={() => onSelect(entry.playerId)}\n              >\n                <Translate pt=\"Selecionar\" en=\"Select\" />\n              </Button>\n            </Space>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n","import { Fragment } from 'react';\n// AntDesign Resources\nimport { Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction, TextHighlight } from 'components/text';\nimport { MinigameTitle } from './MinigameTitle';\nimport { IconAvatar } from 'components/avatars/IconAvatar';\nimport { TransparentButton } from 'components/buttons';\nimport { TreeOneIcon } from 'icons/TreeOneIcon';\nimport { TreeTwoIcon } from 'icons/TreeTwoIcon';\nimport { TreeThreeIcon } from 'icons/TreeThreeIcon';\nimport { MapIcon } from 'icons/MapIcon';\nimport { RightSquareOutlined } from '@ant-design/icons';\n\nexport const TaskCaminhosMagicos = ({ task, round, onSubmitTask, user }: TaskProps) => {\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: number) => {\n    onSubmitTask({\n      data: { value: String(value) },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection([0, 1, 2]));\n  });\n\n  return (\n    <>\n      <MinigameTitle round={round} task={task} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Para atravessar a floresta, você precisa passar por essas 3 árvores.\n              <br />\n              Com mapa feito de adjetivos (que útil), qual rota você selecionaria ir da{' '}\n              <TextHighlight>{task.data.portals[0].text}</TextHighlight> ao{' '}\n              <TextHighlight>{task.data.portals[2].text}</TextHighlight>?\n            </>\n          }\n          en={\n            <>\n              To cross the woods, you need to pass by 3 trees.\n              <br />\n              With a map made of adjectives (wow, so useful), what route would to select to go from{' '}\n              <TextHighlight>{task.data.portals[0].text}</TextHighlight> to{' '}\n              <TextHighlight>{task.data.portals[2].text}</TextHighlight>?\n            </>\n          }\n        />\n      </Instruction>\n\n      <div className=\"cm-trees\">\n        <div className=\"cm-trees__tree\">\n          <IconAvatar icon={<TreeOneIcon />} size={84} />\n          <div className=\"cm-trees__text\">{task.data.portals[0].text}</div>\n        </div>\n\n        <div className=\"cm-trees__tree\">\n          <IconAvatar icon={<TreeTwoIcon />} size={84} />\n          <div className=\"cm-trees__text\">{task.data.portals[1].text}</div>\n        </div>\n\n        <div className=\"cm-trees__tree\">\n          <IconAvatar icon={<TreeThreeIcon />} size={84} />\n          <div className=\"cm-trees__text\">{task.data.portals[2].text}</div>\n        </div>\n      </div>\n\n      <Space className=\"space-container\" direction=\"vertical\">\n        <TransparentButton\n          className=\"cm-clues__clue\"\n          disabled={user.ready || isLoading}\n          onClick={() => onSelect(0)}\n        >\n          {'A'}\n          <IconAvatar icon={<MapIcon />} size={48} />\n          {Object.values<PlainObject>(task.data.options[0]).map((option, index, arr) => {\n            return (\n              <Fragment key={`${option.playerId}-${index}`}>\n                <span className=\"cm-clues__clue-text\">{option.text}</span>\n                {arr.length - 1 > index && <RightSquareOutlined />}\n              </Fragment>\n            );\n          })}\n        </TransparentButton>\n        <TransparentButton\n          className=\"cm-clues__clue\"\n          disabled={user.ready || isLoading}\n          onClick={() => onSelect(1)}\n        >\n          {'B'}\n          <IconAvatar icon={<MapIcon />} size={48} />\n          {Object.values<PlainObject>(task.data.options[1]).map((option, index, arr) => {\n            return (\n              <Fragment key={`${option.playerId}-${index}`}>\n                <span className=\"cm-clues__clue-text\">{option.text}</span>\n                {arr.length - 1 > index && <RightSquareOutlined />}\n              </Fragment>\n            );\n          })}\n        </TransparentButton>\n        <TransparentButton\n          className=\"cm-clues__clue\"\n          disabled={user.ready || isLoading}\n          onClick={() => onSelect(2)}\n        >\n          {'C'}\n          <IconAvatar icon={<MapIcon />} size={48} />\n          {Object.values<PlainObject>(task.data.options[2]).map((option, index, arr) => {\n            return (\n              <Fragment key={`${option.playerId}-${index}`}>\n                <span className=\"cm-clues__clue-text\">{option.text}</span>\n                {arr.length - 1 > index && <RightSquareOutlined />}\n              </Fragment>\n            );\n          })}\n        </TransparentButton>\n      </Space>\n    </>\n  );\n};\n","import { useState } from 'react';\n// AntDesign Resources\nimport { Button, Input } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockText } from '../utils/mock';\n// Components\nimport { ImageBlurButtonContainer, ImageCard } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { BookPages } from 'games/contadores-historias/components/BookPages';\nimport { MinigameTitle } from './MinigameTitle';\n\nexport const TaskContadoresHistorias = ({ task, round, onSubmitTask, user, players }: TaskProps) => {\n  const { isLoading } = useLoading();\n  const [clue, setClue] = useState('');\n\n  const onSubmitClue = () => {\n    if (clue.length > 1) {\n      onSubmitTask({\n        data: { value: clue },\n      });\n    }\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSubmitTask({\n      data: { value: mockText() },\n    });\n  });\n  return (\n    <>\n      <MinigameTitle round={round} task={task} />\n\n      <BookPages\n        leftPage={\n          <ImageBlurButtonContainer cardId={task.data.cardId}>\n            <ImageCard imageId={task.data.cardId} cardWidth={150} />\n          </ImageBlurButtonContainer>\n        }\n        rightPage={\n          <div>\n            <Instruction contained>\n              <Translate\n                pt={\n                  <>\n                    Escreva uma história para essa página do livro.\n                    <br />\n                    Seja bem óbvio e palavras únicas têm mais chances de dar match.\n                  </>\n                }\n                en={\n                  <>\n                    Write a clue about this page of the book.\n                    <br />\n                    Be obvious and single-word clues have more chances of matching other players\n                  </>\n                }\n              />\n            </Instruction>\n            <Input\n              onChange={(e) => setClue(e.target.value)}\n              onPressEnter={onSubmitClue}\n              className=\"c-input\"\n            />\n          </div>\n        }\n      />\n\n      <Button\n        shape=\"round\"\n        type=\"primary\"\n        disabled={user.ready || clue.length < 2}\n        loading={isLoading}\n        onClick={onSubmitClue}\n      >\n        <Translate pt=\"Enviar\" en=\"Submit\" />\n      </Button>\n    </>\n  );\n};\n","import clsx from 'clsx';\n// AntDesign Resources\nimport { Button, Popover, Tag } from 'antd';\nimport { CheckCircleFilled } from '@ant-design/icons';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../utils/mock';\n// Components\nimport { ImageCard } from 'components/cards';\nimport { DualTranslate, Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from './MinigameTitle';\n\nexport const TaskCrimesHediondos = ({ task, round, onSubmitTask, user, players }: TaskProps) => {\n  const cardWidth = useCardWidth(12, 32, 100, 130);\n  const { dualTranslate } = useLanguage();\n  const { isLoading } = useLoading();\n\n  // DEV Mock\n  useMock(() => {\n    onSubmitTask({\n      data: { value: mockSelection(task.data.cards, 'id') },\n    });\n  });\n\n  return (\n    <>\n      <MinigameTitle round={round} task={task} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              O médico legista examinou o crime e chegou às conclusões abaixo.\n              <br />\n              Selecione qual {task.variant === 'weapon' ? 'armas' : 'evidencias'} você acha que foi usada no\n              crime.\n            </>\n          }\n          en={\n            <>\n              The forensic scientist examined the body and came to those conclusions below.\n              <br />\n              Select the one {task.variant} you think took part in the crime.\n            </>\n          }\n        />\n      </Instruction>\n\n      <ul className=\"h-table\">\n        {Boolean(task.data.scenes.causeOfDeath) && (\n          <SceneTile tile={task.data.scenes.causeOfDeath} index={task.data.crimeIndexes.causeOfDeath} />\n        )}\n        {Boolean(task.data.scenes.reasonForEvidence) && (\n          <SceneTile\n            tile={task.data.scenes.reasonForEvidence}\n            index={task.data.crimeIndexes.reasonForEvidence}\n          />\n        )}\n\n        <SceneTile tile={task.data.scenes.location} index={task.data.crimeIndexes.location} />\n        <SceneTile tile={task.data.scenes.sceneA} index={task.data.crimeIndexes.sceneA} />\n        <SceneTile tile={task.data.scenes.sceneB} index={task.data.crimeIndexes.sceneB} />\n        <SceneTile tile={task.data.scenes.sceneC} index={task.data.crimeIndexes.sceneC} />\n      </ul>\n\n      <ul className=\"h-cards\">\n        {task.data.cards.map((card: HCard) => {\n          return (\n            <li\n              className={clsx('h-item-card', user?.data?.value === card.id && 'h-item-card--selected')}\n              key={card.id}\n            >\n              <Popover content={dualTranslate(card.name).toUpperCase()}>\n                <Tag\n                  className=\"h-item-card__name\"\n                  color={card.type === 'weapon' ? 'geekblue' : 'volcano'}\n                  style={{ maxWidth: `${cardWidth + 16}px` }}\n                >\n                  <span>\n                    <DualTranslate>{card.name}</DualTranslate>\n                  </span>\n                </Tag>\n              </Popover>\n              <ImageCard imageId={card.id} cardWidth={cardWidth} className=\"h-item-card__image\" />\n              <Button\n                shape=\"round\"\n                type=\"primary\"\n                disabled={user.ready}\n                loading={isLoading}\n                onClick={() =>\n                  onSubmitTask({\n                    data: { value: card.id },\n                  })\n                }\n              >\n                <Translate pt=\"Selecionar\" en=\"Select\" />\n              </Button>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\ntype SceneTileProps = {\n  tile: SceneTile;\n  index: number;\n};\n\nfunction SceneTile({ tile, index }: SceneTileProps) {\n  const { dualTranslate } = useLanguage();\n  return (\n    <li className={clsx('h-scene-tile', `h-scene-tile--${tile.type}`)}>\n      <Popover content={dualTranslate(tile.description)}>\n        <h4 className=\"h-scene-tile__title\">{dualTranslate(tile.title)}</h4>\n      </Popover>\n      <ul className=\"h-scene-tile__options\">\n        {tile.values.map((entry, i) => {\n          const isActive = i === index;\n          return (\n            <li\n              key={`${tile.id}-value-${i}`}\n              className={clsx(\n                'h-scene-tile__item',\n                `h-scene-tile__item--${tile.type}`,\n                isActive && 'h-scene-tile__item--active'\n              )}\n            >\n              {isActive && <CheckCircleFilled className=\"h-scene-tile__icon\" />}\n              {dualTranslate(entry)}\n            </li>\n          );\n        })}\n      </ul>\n    </li>\n  );\n}\n","// Sass\nimport clsx from 'clsx';\nimport { ReactNode } from 'react';\nimport './SpreadsheetGrid.scss';\n\ntype SpreadsheetGridProps = {\n  /**\n   * Number of columns\n   */\n  columns: number;\n  /**\n   * Number of rows\n   */\n  rows: number;\n  /**\n   * Add the blank top left corner cell\n   */\n  topLeftCorner?: boolean;\n  /**\n   * Content of the grid, usually SpreadsheetCell components\n   */\n  children?: ReactNode;\n  /**\n   * Custom class name\n   */\n  className?: string;\n};\n\nexport function SpreadsheetGrid({ columns, rows, topLeftCorner, children, className }: SpreadsheetGridProps) {\n  return (\n    <div\n      className={clsx('spreadsheet-grid', className)}\n      style={{ gridTemplateColumns: `repeat(${columns}, 1fr)`, gridTemplateRows: `repeat(${rows}, auto)` }}\n      role=\"table\"\n    >\n      {topLeftCorner && <SpreadsheetCell header></SpreadsheetCell>}\n      {children}\n    </div>\n  );\n}\n\ntype SpreadsheetCellProps = {\n  /**\n   * The content of the Cell\n   */\n  children?: ReactNode;\n  /**\n   * Style cell as header\n   */\n  header?: boolean;\n  /**\n   * Custom class name\n   */\n  className?: string;\n};\n\nexport function SpreadsheetCell({ children, header, className }: SpreadsheetCellProps) {\n  return (\n    <span className={clsx('spreadsheet-cell', header && 'spreadsheet-cell--header', className)} role=\"cell\">\n      {children}\n    </span>\n  );\n}\n","// AntDesign Resources\nimport { Button, ButtonProps, Space } from 'antd';\nimport { PlusCircleFilled } from '@ant-design/icons';\n// Hooks\nimport { useMock } from 'hooks/useMock';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\n// Utils\nimport { mockSelection } from '../utils/mock';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from './MinigameTitle';\nimport { SpreadsheetCell, SpreadsheetGrid } from 'components/general/SpreadsheetGrid';\n\nexport const TaskCruzaPalavras = ({ task, round, onSubmitTask, user }: TaskProps) => {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n\n  const onSelect = (position: number) => {\n    onSubmitTask({\n      data: { value: String(position) },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection([0, 1, 2, 3]));\n  });\n\n  return (\n    <>\n      <MinigameTitle round={round} task={task} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Alguém escreveu a dica péssima abaixo, e agora? Aonde ela se encaixa na grade?\n              <br />\n              Clique na célula apropriada!\n            </>\n          }\n          en={\n            <>\n              Someone wrote this terrible clue below, where does it fit in the grid? Click the appropriate\n              grid cell!\n            </>\n          }\n        />\n      </Instruction>\n\n      <Card header={translate('Dica', 'Clue')} color=\"red\">\n        <Avatar id=\"A\" /> {task.data.clue.text}\n      </Card>\n\n      <Space className=\"space-container\">\n        <SpreadsheetGrid columns={3} rows={3} topLeftCorner>\n          <SpreadsheetCell header>{task.data.cards[0].text}</SpreadsheetCell>\n          <SpreadsheetCell header>{task.data.cards[1].text}</SpreadsheetCell>\n          <SpreadsheetCell header>{task.data.cards[2].text}</SpreadsheetCell>\n          <SpreadsheetCell>\n            <CellPlusButton onClick={() => onSelect(0)} disabled={user.ready} loading={isLoading} />\n          </SpreadsheetCell>\n          <SpreadsheetCell>\n            <CellPlusButton onClick={() => onSelect(1)} disabled={user.ready} loading={isLoading} />\n          </SpreadsheetCell>\n          <SpreadsheetCell header>{task.data.cards[3].text}</SpreadsheetCell>\n          <SpreadsheetCell>\n            <CellPlusButton onClick={() => onSelect(2)} disabled={user.ready} loading={isLoading} />\n          </SpreadsheetCell>\n          <SpreadsheetCell>\n            <CellPlusButton onClick={() => onSelect(3)} disabled={user.ready} loading={isLoading} />\n          </SpreadsheetCell>\n        </SpreadsheetGrid>\n      </Space>\n    </>\n  );\n};\n\nfunction CellPlusButton({ onClick, loading, ...rest }: ButtonProps) {\n  return (\n    <Button onClick={onClick} shape=\"circle\" loading={loading} {...rest}>\n      {!loading && <PlusCircleFilled />}\n    </Button>\n  );\n}\n","import clsx from 'clsx';\n// AntDesign Resources\nimport { Button, Image, Space } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { AVATARS, BOTS_LIST } from 'utils/avatars';\nimport { mockSelection } from '../utils/mock';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { ImageBlurButtonContainer, ImageCard } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from './MinigameTitle';\n\nexport const TaskDetetivesImaginativos = ({ task, round, onSubmitTask, user, players }: TaskProps) => {\n  const cardWidth = useCardWidth(7, 32, 200, 270);\n  const { language } = useLanguage();\n  const { isLoading } = useLoading();\n\n  // DEV Mock\n  useMock(() => {\n    onSubmitTask({\n      data: { value: mockSelection(task.data.cards) },\n    });\n  });\n\n  if (task.variant === 'impostor') {\n    return (\n      <>\n        <MinigameTitle round={round} task={task} />\n        <Instruction contained>\n          <Translate\n            pt={\n              <>\n                Você é o impostor e não sabe a palavra-secreta. Os outros jogadores escolheram as cartas\n                abaixo que supostamente combinam com a palavra-secreta.\n              </>\n            }\n            en={\n              <>\n                You are the impostor and don't know the secret clue. The other players played the cards below\n                and they all supposed to match the secret clue.\n              </>\n            }\n          />\n        </Instruction>\n\n        <Image.PreviewGroup>\n          <ul className=\"d-table\">\n            {task.data.table.map((cardId: ImageCardId, index: number) => {\n              const bot = BOTS_LIST[index];\n              return (\n                <div className=\"d-table__player-entry\" key={`table-focus-${cardId}`}>\n                  <ImageBlurButtonContainer\n                    cardId={cardId}\n                    className={clsx(\n                      'd-table__card',\n                      user?.data?.value === cardId && 'd-table__card--selected'\n                    )}\n                  >\n                    <ImageCard\n                      key={`table-focus-${cardId}`}\n                      imageId={cardId}\n                      cardWidth={cardWidth * 0.6}\n                      className=\"d-table__image-card\"\n                    />\n                  </ImageBlurButtonContainer>\n\n                  <div className=\"d-table__player-info\">\n                    <Avatar id={bot.avatarId} className=\"d-table__player-avatar\" size=\"default\" />\n                    <span\n                      className=\"d-table__player-bar\"\n                      style={{ backgroundColor: AVATARS[bot.avatarId].color }}\n                    />\n                    <span className=\"d-table__player-name\">\n                      {bot.name}, {AVATARS[bot.avatarId].description[language]}\n                    </span>\n                  </div>\n                </div>\n              );\n            })}\n          </ul>\n        </Image.PreviewGroup>\n\n        <Instruction contained>\n          <Translate\n            pt={<>Qual das suas cartas você usaria para passar despercebido?</>}\n            en={<>Which card in your hand would play so you can blend in with the others?</>}\n          />\n        </Instruction>\n\n        <Image.PreviewGroup>\n          <Space className=\"space-container\">\n            {task.data.cards.map((cardId: ImageCardId) => {\n              return (\n                <div className=\"d-table__player-entry\" key={`table-focus-${cardId}`}>\n                  <ImageBlurButtonContainer\n                    cardId={cardId}\n                    className={clsx(\n                      'd-table__card',\n                      user?.data?.value === cardId && 'd-table__card--selected'\n                    )}\n                  >\n                    <ImageCard\n                      key={`table-focus-${cardId}`}\n                      imageId={cardId}\n                      cardWidth={cardWidth * 0.75}\n                      className=\"d-table__image-card\"\n                    />\n                  </ImageBlurButtonContainer>\n\n                  <Space className=\"space-container\">\n                    <Button\n                      shape=\"round\"\n                      type=\"primary\"\n                      disabled={user.ready}\n                      loading={isLoading}\n                      onClick={() =>\n                        onSubmitTask({\n                          data: { value: cardId },\n                        })\n                      }\n                    >\n                      <Translate pt=\"Selecionar\" en=\"Select\" />\n                    </Button>\n                  </Space>\n                </div>\n              );\n            })}\n          </Space>\n        </Image.PreviewGroup>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <MinigameTitle round={round} task={task} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Dentre as cartas abaixo, uma delas é do impostor! Você sabe qual é?\n              <br />\n              Selecione a carta que você acha <strong>NÃO</strong> combina com as outras duas.\n            </>\n          }\n          en={\n            <>\n              Among the cards below, one belongs to the impostor! Do you know which one?\n              <br />\n              Select the card that does <strong>NOT</strong> match the others.\n            </>\n          }\n        />\n      </Instruction>\n\n      <Image.PreviewGroup>\n        <ul className=\"d-table\">\n          {task.data.cards.map((cardId: ImageCardId, index: number) => {\n            const bot = BOTS_LIST[index];\n            return (\n              <div className=\"d-table__player-entry\" key={`table-focus-${cardId}`}>\n                <ImageBlurButtonContainer\n                  cardId={cardId}\n                  className={clsx('d-table__card', user?.data?.value === cardId && 'd-table__card--selected')}\n                >\n                  <ImageCard\n                    key={`table-focus-${cardId}`}\n                    imageId={cardId}\n                    cardWidth={cardWidth}\n                    className=\"d-table__image-card\"\n                  />\n                </ImageBlurButtonContainer>\n\n                <div className=\"d-table__player-info\">\n                  <Avatar id={bot.avatarId} className=\"d-table__player-avatar\" size=\"default\" />\n                  <span\n                    className=\"d-table__player-bar\"\n                    style={{ backgroundColor: AVATARS[bot.avatarId].color }}\n                  />\n                  <span className=\"d-table__player-name\">\n                    {bot.name}, {AVATARS[bot.avatarId].description[language]}\n                  </span>\n                </div>\n                <Space className=\"space-container\">\n                  <Button\n                    shape=\"round\"\n                    type=\"primary\"\n                    disabled={user.ready}\n                    loading={isLoading}\n                    onClick={() =>\n                      onSubmitTask({\n                        data: { value: cardId },\n                      })\n                    }\n                  >\n                    <Translate pt=\"Esse é o impostor\" en=\"This is the impostor\" />\n                  </Button>\n                </Space>\n              </div>\n            );\n          })}\n        </ul>\n      </Image.PreviewGroup>\n    </>\n  );\n};\n","// AntDesign Resources\nimport { Space } from 'antd';\n// Hooks\nimport { useMock } from 'hooks/useMock';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\n// Utils\nimport { mockSelection } from '../utils/mock';\n// Components\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from './MinigameTitle';\nimport { SkiingIcon } from 'icons/SkiingIcon';\nimport { IconAvatar } from 'components/avatars/IconAvatar';\nimport { TransparentButton } from 'components/buttons';\nimport { SnowHillIcon } from 'icons/SnowHillIcon';\n\nexport const TaskDilemaDosEsquiadores = ({ task, round, onSubmitTask, user }: TaskProps) => {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitTask({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection([task.data.dilemma.left, task.data.dilemma.right]));\n  });\n\n  return (\n    <>\n      <MinigameTitle round={round} task={task} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Você tem os pensamentos mais filosóficos quando você está esquiando ladeira abaixo.\n              <br />\n              Selecione a opção apropriada para a questão séria:\n            </>\n          }\n          en={\n            <>\n              You have the most philosophical shower thoughts while skiing\n              <br />\n              Select the best option below:\n            </>\n          }\n        />\n      </Instruction>\n\n      <Space className=\"space-container\" direction=\"vertical\">\n        <div className=\"dd-animated-skiier\">\n          <IconAvatar icon={<SkiingIcon />} size={84} />\n        </div>\n        <Card header={translate('Dica', 'Clue')} color=\"red\">\n          {task.data.dilemma.prompt}\n        </Card>\n\n        <Space className=\"space-container\">\n          <div className=\"dd-buttons\">\n            <TransparentButton\n              onClick={() => onSelect(task.data.dilemma.left)}\n              disabled={user.ready || isLoading}\n              className=\"dd-button\"\n            >\n              <span className=\"dd-button__hill dd-button__hill--left\">\n                <IconAvatar icon={<SnowHillIcon />} size={64} />\n              </span>\n              <span className=\"dd-button__text\">{task.data.dilemma.left}</span>\n            </TransparentButton>\n            <TransparentButton\n              onClick={() => onSelect(task.data.dilemma.right)}\n              disabled={user.ready || isLoading}\n              className=\"dd-button\"\n            >\n              <span className=\"dd-button__hill\">\n                <IconAvatar icon={<SnowHillIcon />} size={64} />\n              </span>\n              <span className=\"dd-button__text\">{task.data.dilemma.right}</span>\n            </TransparentButton>\n          </div>\n        </Space>\n      </Space>\n    </>\n  );\n};\n","import { useState } from 'react';\n// AntDesign Resources\nimport { Button, Input, Space } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockText } from '../utils/mock';\n// Components\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Instruction, TextHighlight } from 'components/text';\nimport { MinigameTitle } from './MinigameTitle';\n\nexport const TaskEspiaoEntreNos = ({ task, round, onSubmitTask, user }: TaskProps) => {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n  const [answer, setAnswer] = useState('');\n\n  const onSubmitAnswer = () => {\n    if (answer.length > 1) {\n      onSubmitTask({\n        data: { value: answer },\n      });\n    }\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSubmitTask({\n      data: { value: mockText() },\n    });\n  });\n\n  return (\n    <>\n      <MinigameTitle round={round} task={task} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Você está em um(a) <TextHighlight>{task.data.location.name}</TextHighlight>. Você é um(a){' '}\n              <TextHighlight>{task.data.location.roles[task.data.roleIndex]}</TextHighlight>.<br />\n              Agora, responda à pergunta abaixo com uma resposta simples.\n            </>\n          }\n          en={\n            <>\n              You are at/in/on a <TextHighlight>{task.data.location.name}</TextHighlight>. You are a{' '}\n              <TextHighlight>{task.data.location.roles[task.data.roleIndex]}</TextHighlight>.<br />\n              Now, simply answer the following question.\n            </>\n          }\n        />\n      </Instruction>\n\n      <Space className=\"space-container\">\n        <Card>{task.data.question}</Card>\n      </Space>\n\n      <Instruction contained>\n        <Translate\n          pt={<>Responda à pergunta abaixo com uma resposta simples.</>}\n          en={<>Answer the prompt below with a simple answer.</>}\n        />\n      </Instruction>\n\n      <Space className=\"space-container\" direction=\"vertical\">\n        <Input\n          onChange={(e) => setAnswer(e.target.value)}\n          placeholder={translate('Escreva aqui', 'Answer here')}\n          onPressEnter={onSubmitAnswer}\n          disabled={isLoading || user.ready}\n        />\n        <Button\n          shape=\"round\"\n          type=\"primary\"\n          disabled={user.ready || answer.length < 2}\n          loading={isLoading}\n          onClick={onSubmitAnswer}\n        >\n          <Translate pt=\"Selecionar\" en=\"Select\" />\n        </Button>\n      </Space>\n    </>\n  );\n};\n","import { ReactNode } from 'react';\n// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { getAvatarColorById } from 'utils/helpers';\nimport { mockSelection } from '../utils/mock';\n// Components\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from './MinigameTitle';\n\nfunction getRevealedEntry(options: PlainObject[], playerId: PlayerId) {\n  const index = options.findIndex((option) => option.playerId === playerId);\n  return index > -1 ? index : 2;\n}\n\nexport const TaskFileiraDeFatos = ({ task, round, onSubmitTask, user, players }: TaskProps) => {\n  const { isLoading } = useLoading();\n  const { translate } = useLanguage();\n  const revealedIndex = getRevealedEntry(task.data.options, user.id);\n\n  // DEV Mock\n  useMock(() => {\n    onSubmitTask({\n      data: { value: mockSelection(['before', 'after']) },\n    });\n  });\n\n  return (\n    <>\n      <MinigameTitle round={round} task={task} />\n\n      <Space className=\"space-container\">\n        <Card header={translate('Pergunta', 'Question')}>{task.data.card.question}</Card>\n      </Space>\n\n      <Instruction contained>\n        <Translate\n          pt={<>Temos duas respostas numéricas em ordem crescente para a pergunta acima.</>}\n          en={<>We have two secretly sorted numbered answers for the question above.</>}\n        />\n      </Instruction>\n\n      <Space className=\"space-container\">\n        <Chevron\n          player={players[task.data.options[0].playerId]}\n          value={task.data.options[0].value}\n          reveal={revealedIndex === 0}\n        />\n        <Chevron\n          player={players[task.data.options[1].playerId]}\n          value={task.data.options[1].value}\n          reveal={revealedIndex === 1}\n        />\n      </Space>\n\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              A resposta abaixo vai <strong>antes</strong> ou <strong>depois</strong> das duas acima? <br />\n              <em>(Para te ajudar um pouco, revelamos o valor de um dos números)</em>\n            </>\n          }\n          en={\n            <>\n              Does the answer below goes <strong>before</strong> or <strong>after</strong> the two players?\n              <br />\n              <em>(To help out a bit, we revealed the value of one if the chevrons)</em>\n            </>\n          }\n        />\n      </Instruction>\n\n      <Space className=\"space-container\">\n        <Chevron\n          player={players[task.data.options[2].playerId]}\n          value={task.data.options[2].value}\n          reveal={revealedIndex === 2}\n        />\n      </Space>\n\n      <Space className=\"space-container\">\n        <Button\n          shape=\"round\"\n          type=\"primary\"\n          disabled={user.ready}\n          loading={isLoading}\n          onClick={() =>\n            onSubmitTask({\n              data: { value: 'before' },\n            })\n          }\n        >\n          <Translate pt=\"Antes\" en=\"Before\" />\n        </Button>\n        <Button\n          shape=\"round\"\n          type=\"primary\"\n          disabled={user.ready}\n          loading={isLoading}\n          onClick={() =>\n            onSubmitTask({\n              data: { value: 'after' },\n            })\n          }\n        >\n          <Translate pt=\"Depois\" en=\"After\" />\n        </Button>\n      </Space>\n    </>\n  );\n};\n\ntype ChevronProps = {\n  player: GamePlayer;\n  value: number;\n  reveal?: boolean;\n};\n\nexport function Chevron({ player, value, reveal }: ChevronProps) {\n  const color = getAvatarColorById(player.avatarId);\n  return (\n    <div className=\"ff-chevron\">\n      <ChevronImage color={color}>\n        <span className=\"ff-chevron__value\">{reveal ? value : '?'}</span>\n      </ChevronImage>\n      <div className=\"ff-chevron__name\">{player.name}</div>\n    </div>\n  );\n}\n\ntype ChevronImageProps = {\n  children: ReactNode;\n  color: string;\n};\n\nfunction ChevronImage({ children, color }: ChevronImageProps) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n      <path\n        fill={color}\n        d=\"M115.8 461.5L244 501.56a8.52 8.52 0 009.8-3.65L400.91 260.5a8.58 8.58 0 000-9L253.82 14.09a8.54 8.54 0 00-9.8-3.66L115.8 50.5a8.54 8.54 0 00-4.89 12.35l106.7 189a8.55 8.55 0 010 8.4l-106.7 189a8.54 8.54 0 004.89 12.35\"\n      ></path>\n      <path\n        fill=\"#000000\"\n        opacity=\"0.5\"\n        d=\"M142.94 101.4l133.68-41.56a8.53 8.53 0 015.69.22l-28.49-46a8.51 8.51 0 00-9.8-3.65L115.8 50.5a8.54 8.54 0 00-4.89 12.35L137 109a8.52 8.52 0 016-7.6\"\n      ></path>\n      <path\n        fill=\"#000000\"\n        d=\"M246.57 512a18.66 18.66 0 01-5.55-.85L112.8 471.08a18.58 18.58 0 01-10.64-26.87l37.25-66a10 10 0 1117.49 9.88l-36.33 64.33 125.33 39.21L391.88 256 245.9 20.37 120.57 59.54l105.79 187.32a18.71 18.71 0 010 18.28l-40.26 71.29a10 10 0 01-17.49-9.88L208.45 256 102.16 67.79a18.58 18.58 0 0110.64-26.87L241 .85a18.58 18.58 0 0121.34 8l147.1 237.36a18.49 18.49 0 010 19.58L262.36 503.2a18.58 18.58 0 01-15.79 8.8z\"\n      ></path>\n      <foreignObject x=\"241.18\" y=\"219.18\" width=\"121.5\" height=\"65.89\">\n        {children}\n      </foreignObject>\n    </svg>\n  );\n}\n","// AntDesign Resources\nimport { Button, Image, Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { mockSelection } from '../utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from './MinigameTitle';\nimport { Card, ImageBlurButtonContainer, ImageCard } from 'components/cards';\nimport { CardHighlight } from 'components/metrics/CardHighlight';\n\nexport const TaskGaleriaDeSonhos = ({ task, round, onSubmitTask, user }: TaskProps) => {\n  const cardWidth = useCardWidth(8, 8, 150, 350, 8);\n  const { isLoading } = useLoading();\n  const { translate } = useLanguage();\n\n  const onSelect = (value: string) => {\n    onSubmitTask({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(task.data.cards));\n  });\n\n  return (\n    <>\n      <MinigameTitle round={round} task={task} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Com o tema abaixo, qual <CardHighlight>carta-sonho</CardHighlight> é a mais provável dos outros\n              jogadores também visitarem?\n            </>\n          }\n          en={\n            <>\n              With the theme below, what is the <CardHighlight>Dream Card</CardHighlight> most likely to be\n              visited by other players?\n            </>\n          }\n        />\n      </Instruction>\n\n      <Card header={translate('Tema', 'Theme')} color=\"orange\">\n        {task.data.theme.text}\n      </Card>\n\n      <Image.PreviewGroup>\n        <Space className=\"space-container\">\n          {task.data.cards.map((cardId: ImageCardId) => {\n            return (\n              <Space className=\"space-container\" direction=\"vertical\">\n                <ImageBlurButtonContainer cardId={cardId}>\n                  <ImageCard imageId={cardId} cardWidth={cardWidth} />\n                </ImageBlurButtonContainer>\n                <Button\n                  shape=\"round\"\n                  type=\"primary\"\n                  disabled={user.ready}\n                  loading={isLoading}\n                  onClick={() => onSelect(cardId)}\n                >\n                  <Translate pt=\"Selecionar\" en=\"Select\" />\n                </Button>\n              </Space>\n            );\n          })}\n        </Space>\n      </Image.PreviewGroup>\n    </>\n  );\n};\n","import { useState } from 'react';\n// AntDesign Resources\nimport { Button, Input, Space } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockText } from '../utils/mock';\n// Components\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from './MinigameTitle';\n\nexport const TaskMenteColetiva = ({ task, round, onSubmitTask, user }: TaskProps) => {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n  const [answer, setAnswer] = useState('');\n\n  const onSubmitAnswer = () => {\n    if (answer.length > 1) {\n      onSubmitTask({\n        data: { value: answer },\n      });\n    }\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSubmitTask({\n      data: { value: mockText() },\n    });\n  });\n\n  return (\n    <>\n      <MinigameTitle round={round} task={task} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Responda à pergunta abaixo com uma resposta simples.\n              <br />O objetivo é responder com o grupo e se juntar ao rebanho!\n            </>\n          }\n          en={\n            <>\n              Answer the prompt below with a simple answer.\n              <br />\n              The goal is to give an answer that will match the group so you can join the herd!\n            </>\n          }\n        />\n      </Instruction>\n\n      <Card className=\"m-question-wrapper\">\n        <span className=\"m-question m-question--span\">\n          <span className=\"m-question__prefix\">{task.data.question.prefix}</span>\n          <span className=\"m-question__number\">1</span>\n          <span className=\"m-question__suffix\">{task.data.question.suffix}</span>\n        </span>\n      </Card>\n\n      <Space className=\"space-container\" direction=\"vertical\">\n        <Input\n          onChange={(e) => setAnswer(e.target.value)}\n          placeholder={translate('Escreva aqui', 'Answer here')}\n          onPressEnter={onSubmitAnswer}\n          disabled={isLoading || user.ready}\n        />\n        <Button\n          shape=\"round\"\n          type=\"primary\"\n          disabled={user.ready || answer.length < 2}\n          loading={isLoading}\n          onClick={onSubmitAnswer}\n        >\n          <Translate pt=\"Enviar\" en=\"Submit\" />\n        </Button>\n      </Space>\n    </>\n  );\n};\n","// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../utils/mock';\n// Components\nimport { ImageCard } from 'components/cards';\nimport { DualTranslate, Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from './MinigameTitle';\n\nexport const TaskNamoroOuAmizade = ({ task, round, onSubmitTask, user }: TaskProps) => {\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitTask({\n      data: { value },\n    });\n  };\n\n  // // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(task.data.heads, 'id'));\n  });\n\n  return (\n    <>\n      <MinigameTitle round={round} task={task} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Dos <strong>3 partidos</strong> abaixo, qual é o melhor?\n            </>\n          }\n          en={\n            <>\n              From <strong>3 candidates</strong> below, which one is the best one?\n            </>\n          }\n        />\n      </Instruction>\n\n      <div className=\"noa-candidates\">\n        {task.data.heads.map((head: DatingCandidateImageCard, index: number) => {\n          return (\n            <Space className=\"space-container\" direction=\"vertical\">\n              <Candidate\n                head={head}\n                body={task.data.bodies[index]}\n                interest={task.data.interests[index]}\n                need={task.data.needs[index]}\n                funFact={task.data.funFacts[index]}\n              />\n              <Button\n                onClick={() => onSelect(head.id)}\n                disabled={user.ready || isLoading}\n                className=\"noa-button\"\n                key={head.id}\n                type=\"primary\"\n                shape=\"round\"\n              >\n                <Translate pt=\"Esse\" en=\"This one\" />\n              </Button>\n            </Space>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\ntype CandidateProps = {\n  head: DatingCandidateImageCard;\n  body: DatingCandidateImageCard;\n  interest: DatingCandidateCard;\n  need: DatingCandidateCard;\n  funFact: DatingCandidateCard;\n};\n\nexport const Candidate = ({ head, body, interest, need, funFact }: CandidateProps) => {\n  return (\n    <div className=\"noa-candidate\">\n      <div className=\"noa-candidate__image\">\n        <div className=\"noa-candidate__text\">\n          <DualTranslate>{head.name}</DualTranslate>\n        </div>\n        <ImageCard cardWidth={100} imageId={head.id} />\n        <ImageCard cardWidth={100} imageId={body.id} />\n        <div className=\"noa-candidate__text\">\n          <DualTranslate>{body.name}</DualTranslate>\n        </div>\n      </div>\n      <div className=\"noa-candidate__info\">\n        <div className=\"noa-candidate__info-entry\">\n          <div className=\"noa-candidate__info-label\">\n            <Translate pt=\"Curto/Quero\" en=\"I enjoy/wish to\" />\n          </div>\n          {interest.text}\n        </div>\n        <div className=\"noa-candidate__info-entry\">\n          <div className=\"noa-candidate__info-label\">\n            <Translate pt=\"Quero alguém que\" en=\"I want someone who\" />\n          </div>\n          {need.text}\n        </div>\n        <div className=\"noa-candidate__info-entry\">\n          <div className=\"noa-candidate__info-label\">\n            <Translate pt=\"Uma coisa sobre mim\" en=\"Something about me\" />\n          </div>\n          {funFact.text}\n        </div>\n      </div>\n    </div>\n  );\n};\n","// AntDesign Resources\nimport { Avatar, Button, Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from './MinigameTitle';\nimport { TransparentButton } from 'components/buttons';\nimport { HouseCard } from 'games/na-rua-do-medo/components/HouseCard';\n\nexport const TaskNaRuaDoMedo = ({ task, round, onSubmitTask, user }: TaskProps) => {\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitTask({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(\n      task.variant === 'kids'\n        ? mockSelection(['0', '1'])\n        : mockSelection(task.data.options.map((h: NCard) => h.id))\n    );\n  });\n\n  if (task.variant === 'kids') {\n    return (\n      <>\n        <MinigameTitle round={round} task={task} />\n        <Instruction contained>\n          <Translate\n            pt={\n              <>\n                Estamos indo de porta em porta buscar doces...\n                <br />\n                Mas qual rua devemos ir? A rua com mais doces? A rua com menos medo?\n              </>\n            }\n            en={\n              <>\n                We're trick-or-treating...\n                <br />\n                Which street should we hit first? The one with more candy? The one with less horror?\n              </>\n            }\n          />\n        </Instruction>\n\n        <Space className=\"space-container\" direction=\"vertical\">\n          <TransparentButton\n            className=\"n-street\"\n            disabled={user.ready || isLoading}\n            onClick={() => onSelect('0')}\n          >\n            <Avatar>A</Avatar>\n            <div className=\"n-street__houses\">\n              {task.data.options['0'].map((house: NCard) => (\n                <HouseCard key={`A-${house.id}`} card={house} candyLeftover={0} preview={false} />\n              ))}\n            </div>\n          </TransparentButton>\n          <TransparentButton\n            className=\"n-street\"\n            disabled={user.ready || isLoading}\n            onClick={() => onSelect('1')}\n          >\n            <Avatar>B</Avatar>\n            <div className=\"n-street__houses\">\n              {task.data.options['1'].map((house: NCard) => (\n                <HouseCard key={`B-${house.id}`} card={house} candyLeftover={0} preview={false} />\n              ))}\n            </div>\n          </TransparentButton>\n        </Space>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <MinigameTitle round={round} task={task} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Você estava tranquilo em casa e <strong>6 crianças</strong> apareceram na sua porta. Qual das\n              opções você escolheria para dar pra eles? Assustar ou guloseimas?\n            </>\n          }\n          en={\n            <>\n              You are hanging out at home and <strong>6 kids</strong> showed up at our door. Which of the\n              options do you choose to give to them? Scare 'em or give treats?\n            </>\n          }\n        />\n      </Instruction>\n\n      <Space className=\"space-container\">\n        {task.data.options.map((house: NCard) => (\n          <Space direction=\"vertical\" key={house.id} className=\"space-container n-street-house\">\n            <HouseCard card={house} candyLeftover={0} preview={false} />\n            <Button\n              shape=\"round\"\n              type=\"primary\"\n              disabled={user.ready || isLoading}\n              onClick={() => onSelect(house.id)}\n              loading={isLoading}\n            >\n              <Translate pt=\"Selecionar\" en=\"Select\" />\n            </Button>\n          </Space>\n        ))}\n      </Space>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport clsx from 'clsx';\n// AntDesign Resources\nimport { ArrowLeftOutlined, ArrowRightOutlined, MinusOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../utils/mock';\nimport { getColorModifier } from 'games/onda-telepatica/utils/helpers';\n// Components\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Instruction, TextHighlight } from 'components/text';\nimport { MinigameTitle } from './MinigameTitle';\n\nexport const TaskOndaTelepatica = ({ task, round, onSubmitTask, user, players }: TaskProps) => {\n  const { isLoading } = useLoading();\n  const [position, setPosition] = useState(0);\n\n  const onSelect = (value: string) => {\n    if (!isLoading && !user.ready) {\n      onSubmitTask({\n        data: { value },\n      });\n    }\n  };\n\n  // // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(['left', 'center', 'right']));\n  });\n\n  const cardSideClass = 'o-card__side';\n\n  return (\n    <>\n      <MinigameTitle round={round} task={task} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Com a carta de as duas ideias opostas e a dica abaixo, você acha que o Medidor de Ondas\n              Telepáticas apontaria para a <TextHighlight>Esquerda</TextHighlight>,{' '}\n              <TextHighlight>Centro</TextHighlight> ou <TextHighlight>Direita</TextHighlight>?\n            </>\n          }\n          en={\n            <>\n              With the card of the two opposing ideas and the clue below, do you think the Wavelength\n              Measuring device would point to the <TextHighlight>Left</TextHighlight>,{' '}\n              <TextHighlight>Center</TextHighlight>, or <TextHighlight>Right</TextHighlight>?\n            </>\n          }\n        />\n      </Instruction>\n\n      <Card>{task.data.option.value}</Card>\n\n      <div className=\"o-simple-dial\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 669.93 340\" width=\"40vw\">\n          <path\n            fill=\"#181d44\"\n            d=\"M669.88 329.88a440.53 440.53 0 00-27.31-127.68C591.16 83.26 472.81 0 335 0h-.22C198.2.07 80.75 81.88 28.66 199.16A439.25 439.25 0 000 332a7.67 7.67 0 007.68 8h654.63a7.7 7.7 0 007.21-5 7.78 7.78 0 00.41-1.68l-.05-3.44z\"\n          ></path>\n          <path\n            fill=\"#b8b2a6\"\n            d=\"M119.67 121.48a303.5 303.5 0 00-61.93 91.22 401 401 0 00-25.59 120 7 7 0 00.43 2.75A6.86 6.86 0 0039 340h295.86L181.06 73.61a300.5 300.5 0 00-61.39 47.87z\"\n            className=\"o-simple-dial__clickable\"\n            onClick={() => onSelect('left')}\n            onMouseEnter={() => setPosition(-1)}\n          ></path>\n\n          <path\n            fill=\"#c2acc7\"\n            d=\"M630.39 330.85A402.06 402.06 0 00606 215.46 302.44 302.44 0 00487.05 77L335.19 340h288.44a6.88 6.88 0 006.44-4.52 7.56 7.56 0 00.36-1.51c0-1.04-.02-2.08-.04-3.12z\"\n            className=\"o-simple-dial__clickable\"\n            onClick={() => onSelect('right')}\n            onMouseEnter={() => setPosition(1)}\n          ></path>\n          <path\n            fill=\"#96a6a8\"\n            d=\"M331.32 32.7h-.2a295 295 0 00-150.06 40.91L334.86 340h.33L487.05 77a295 295 0 00-155.73-44.3z\"\n            className=\"o-simple-dial__clickable\"\n            onClick={() => onSelect('center')}\n            onMouseEnter={() => setPosition(0)}\n          ></path>\n\n          <path\n            fill=\"#ff0004\"\n            d=\"M336.46 24.24a1.5 1.5 0 0 0-3 0L326.65 340a1.48 1.48 0 0 0 .45 1.1l6.81 6.73a1.51 1.51 0 0 0 2.11 0l6.81-6.73a1.48 1.48 0 0 0 .45-1.1Z\"\n            className={clsx('o-simple-dial__pointer', `o-simple-dial__pointer--p${position}`)}\n          ></path>\n        </svg>\n      </div>\n\n      <div className={clsx('o-card')}>\n        <div\n          className={clsx(\n            cardSideClass,\n            `${cardSideClass}--left`,\n            `${cardSideClass}--L${getColorModifier(task.data.card.left)}`\n          )}\n        >\n          <span className=\"o-card__arrow\">\n            <ArrowLeftOutlined /> <MinusOutlined /> <MinusOutlined />\n          </span>\n          <span className=\"o-card__text\">{task.data.card.left}</span>\n        </div>\n        <div\n          className={clsx(\n            cardSideClass,\n            `${cardSideClass}--right`,\n            `${cardSideClass}--R${getColorModifier(task.data.card.right)}`\n          )}\n        >\n          <span className=\"o-card__arrow\">\n            <MinusOutlined /> <MinusOutlined /> <ArrowRightOutlined />\n          </span>\n          <span className=\"o-card__text\">{task.data.card.right}</span>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport function SimpleDial() {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 669.93 340\">\n      <path\n        fill=\"#181d44\"\n        d=\"M669.88 329.88a440.53 440.53 0 00-27.31-127.68C591.16 83.26 472.81 0 335 0h-.22C198.2.07 80.75 81.88 28.66 199.16A439.25 439.25 0 000 332a7.67 7.67 0 007.68 8h654.63a7.7 7.7 0 007.21-5 7.78 7.78 0 00.41-1.68l-.05-3.44z\"\n      ></path>\n      <path\n        fill=\"#b8b2a6\"\n        d=\"M119.67 121.48a303.5 303.5 0 00-61.93 91.22 401 401 0 00-25.59 120 7 7 0 00.43 2.75A6.86 6.86 0 0039 340h295.86L181.06 73.61a300.5 300.5 0 00-61.39 47.87z\"\n      ></path>\n      <path\n        fill=\"#96a6a8\"\n        d=\"M331.32 32.7h-.2a295 295 0 00-150.06 40.91L334.86 340h.33L487.05 77a295 295 0 00-155.73-44.3z\"\n      ></path>\n      <path\n        fill=\"#c2acc7\"\n        d=\"M630.39 330.85A402.06 402.06 0 00606 215.46 302.44 302.44 0 00487.05 77L335.19 340h288.44a6.88 6.88 0 006.44-4.52 7.56 7.56 0 00.36-1.51c0-1.04-.02-2.08-.04-3.12z\"\n      ></path>\n    </svg>\n  );\n}\n","// AntDesign Resources\nimport { Space } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../utils/mock';\n// Components\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from './MinigameTitle';\nimport { TransparentButton } from 'components/buttons';\n\nexport const TaskPalhetaDeCores = ({ task, round, onSubmitTask, user }: TaskProps) => {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n\n  const onSelect = (color: string) => {\n    onSubmitTask({\n      data: { value: color },\n    });\n  };\n\n  // // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(task.data.palette));\n  });\n\n  return (\n    <>\n      <MinigameTitle round={round} task={task} />\n      <Instruction contained>\n        <Translate\n          pt={<>Selecione a cor que melhor representa o personagem abaixo!</>}\n          en={<>Select the color that best represents the character below!</>}\n        />\n      </Instruction>\n\n      <Card header={translate('Dica', 'Clue')} color=\"red\">\n        {task.data.card.text}\n      </Card>\n\n      <Space className=\"space-container k-palette\" wrap>\n        {task.data.palette.map((color: string) => {\n          return (\n            <TransparentButton\n              onClick={() => onSelect(color)}\n              className=\"k-swatch-button\"\n              disabled={user.read || isLoading}\n            >\n              <SplatterSVG color={color} />\n            </TransparentButton>\n          );\n        })}\n      </Space>\n    </>\n  );\n};\n\ntype SplatterSVGProps = {\n  color: string;\n} & React.SVGProps<SVGSVGElement>;\n\nexport function SplatterSVG({ color, ...rest }: SplatterSVGProps) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 494.11 511.04\" {...rest}>\n      <path\n        fill={color}\n        d=\"M228.54 0h35.93a4.71 4.71 0 001.3.7c27.26 5 48.92 19.17 65.61 41 13.89 18.12 23 38.05 20.86 61.68-.63 6.91-2.09 13.82-2 20.71.12 7.66 6.12 12.85 13.67 11.74a42 42 0 0014.62-5.55c17.16-10 35.31-15.24 55.25-12.26 27.14 4 51.12 26.19 58 53.26 7.35 29-3 59.73-25.55 76.79-14.57 11-31.25 14.29-49 15.54-14.61 1-24.33 10.1-29.58 23.39-5.11 12.92-2.78 24.76 7.31 34.73 4.49 4.44 9 8.85 13.5 13.3 17.49 17.35 28.24 38.14 30.44 62.73 2.4 26.77-5.22 50.77-21.48 72.23-44 58-133.58 54-171.09-8.39-9.08-15.11-15-32.1-22.78-48-3.63-7.38-7.36-15.08-12.73-21.14-12.88-14.54-34-16.34-53.09-6-12.18 6.57-20.6 17.13-29.76 27A73.21 73.21 0 014.9 387.52C2.41 380.4 1.59 372.7 0 365.28v-4c.34-2.26.82-4.52 1-6.8 2.2-27.35 22.3-52.14 48.79-59.39 10.7-2.92 21.71-4.67 32.5-7.28 16.67-4 28.74-17 30.45-32.32 1.95-17.45-6.31-33.26-21.72-41.45-4.4-2.33-8.91-4.44-13.31-6.77-19.58-10.38-28-26.24-24.72-46.46 3.2-19.73 19-33.44 38.86-34.2 10.44-.39 19.85 3.32 29.55 6.12 14.11 4.07 25-.16 22.21-19.54a84 84 0 011-31.1c10.26-42.42 36.89-69.48 79.33-80.57 1.56-.44 3.12-1 4.6-1.52z\"\n      ></path>\n    </svg>\n  );\n}\n","import { ReactNode } from 'react';\nimport clsx from 'clsx';\n// AntDesign Resources\nimport { CheckCircleFilled } from '@ant-design/icons';\n// Components\nimport { Avatar } from 'components/avatars';\n\ntype SocialProfileProps = {\n  avatarId: string;\n  name: ReactNode;\n  handle: ReactNode;\n  verified?: boolean;\n  className?: string;\n};\n\nexport function SocialProfile({ avatarId, name, handle, verified, className }: SocialProfileProps) {\n  return (\n    <div className={clsx('profile', className)}>\n      <Avatar id={avatarId} size=\"large\" className=\"profile__avatar\" />\n      <span className=\"profile__name\">\n        {name} {verified && <CheckCircleFilled style={{ color: 'dodgerBlue' }} />}\n      </span>\n      <span className=\"profile__handle\">{handle}</span>\n    </div>\n  );\n}\n","// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from './MinigameTitle';\nimport { SocialProfile } from './SocialProfile';\n\nexport const TaskPolemicaDaVez = ({ task, round, onSubmitTask, user }: TaskProps) => {\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: number) => {\n    onSubmitTask({\n      data: { value: String(value) },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(task.data.options));\n  });\n\n  return (\n    <>\n      <MinigameTitle round={round} task={task} />\n      <Instruction contained>\n        <Translate\n          pt={<>Observe o tópico abaixo, quantas curtidas você acha que ele ganhou?</>}\n          en={<>How many likes did this trending topic get?</>}\n        />\n      </Instruction>\n\n      <div className=\"tweet\">\n        <SocialProfile avatarId=\"A\" name=\"Bob\" handle=\"@bob\" verified />\n        <span className=\"tweet__text\">{task.data.card.text}</span>\n      </div>\n\n      <Space className=\"space-container\">\n        {task.data.options.map((option: number) => {\n          return (\n            <Button\n              key={`option-${option}`}\n              onClick={() => onSelect(option)}\n              size=\"large\"\n              disabled={isLoading || user.ready}\n              type=\"primary\"\n              shape=\"circle\"\n            >\n              {option}\n            </Button>\n          );\n        })}\n      </Space>\n    </>\n  );\n};\n","// AntDesign Resources\nimport { Button, Image, Space } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../utils/mock';\n// Components\nimport { ImageBlurButtonContainer, ImageCard } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { Book } from 'games/porta-dos-desesperados/components/Book';\nimport { DoorFrame } from 'games/porta-dos-desesperados/components/DoorFrame';\nimport { MinigameTitle } from './MinigameTitle';\n\nexport const TaskPortaDosDesesperados = ({ task, round, onSubmitTask, user, players }: TaskProps) => {\n  const doorWidth = useCardWidth(8, 8, 150, 350, 8);\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitTask({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(task.data.doors));\n  });\n\n  return (\n    <>\n      <MinigameTitle round={round} task={task} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              A pista está nas páginas do livro.\n              <br />\n              Selecione a porta correta que mais se relaciona com o livro.\n            </>\n          }\n          en={\n            <>\n              The clue is in the pages of the book.\n              <br />\n              Select the door that best fits the clue.\n            </>\n          }\n        />\n      </Instruction>\n      <Image.PreviewGroup>\n        <Space className=\"space-container\">\n          {task.data.doors.map((cardId: ImageCardId) => {\n            return (\n              <Space className=\"space-container\" direction=\"vertical\" key={cardId}>\n                <ImageBlurButtonContainer cardId={cardId}>\n                  <DoorFrame width={doorWidth}>\n                    <ImageCard imageId={cardId} cardWidth={150} />\n                  </DoorFrame>\n                </ImageBlurButtonContainer>\n                <Button\n                  shape=\"round\"\n                  type=\"primary\"\n                  disabled={user.ready}\n                  loading={isLoading}\n                  onClick={() => onSelect(cardId)}\n                >\n                  <Translate pt=\"Esse é a saída\" en=\"This is the exit\" />\n                </Button>\n              </Space>\n            );\n          })}\n        </Space>\n      </Image.PreviewGroup>\n\n      <Space className=\"i-book-container\">\n        <Image.PreviewGroup>\n          <Book>\n            <ImageBlurButtonContainer cardId={task.data.book}>\n              <ImageCard imageId={task.data.book[0]} cardWidth={140} />\n            </ImageBlurButtonContainer>\n            <ImageBlurButtonContainer cardId={task.data.book}>\n              <ImageCard imageId={task.data.book?.[1] || task.data.book[0]} cardWidth={140} />\n            </ImageBlurButtonContainer>\n          </Book>\n        </Image.PreviewGroup>\n      </Space>\n    </>\n  );\n};\n","import clsx from 'clsx';\n// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from './MinigameTitle';\nimport { Avatar } from 'components/avatars';\nimport { IconAvatar } from 'components/avatars/IconAvatar';\nimport { ShooterIcon } from 'icons/ShooterIcon';\nimport { sortPlayers } from 'utils/helpers';\n\nexport const TaskQuemNaoMata = ({ task, round, onSubmitTask, user, players }: TaskProps) => {\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitTask({\n      data: { value },\n    });\n  };\n\n  // // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(Object.keys(players)));\n  });\n\n  return (\n    <>\n      <MinigameTitle round={round} task={task} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Estamos num impasse! O primeiro a se mexer leva bala! Em quem você atira primeiro? (Pode ser\n              você mesmo)\n            </>\n          }\n          en={<>A standoff! Who are you going to shoot first? (It could be yourself)</>}\n        />\n      </Instruction>\n\n      <Space className=\"space-container\" wrap>\n        {sortPlayers(players, 'name').map((player, index, arr) => {\n          return (\n            <div key={player.id} className=\"qnm-shooter\">\n              <IconAvatar\n                icon={<ShooterIcon />}\n                size={48}\n                className={clsx(index >= arr.length / 2 && 'qnm-shooter__reverse')}\n              />\n              <Button\n                icon={<Avatar id={player.avatarId} size=\"small\" />}\n                onClick={() => onSelect(player.id)}\n                type=\"primary\"\n                loading={isLoading}\n                disabled={user.ready}\n              >\n                {player.name}\n              </Button>\n            </div>\n          );\n        })}\n      </Space>\n    </>\n  );\n};\n","// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from './MinigameTitle';\nimport { CanvasSVG } from 'components/canvas';\nimport { MonsterCard } from 'components/cards/MonsterCard';\n\nexport const TaskRetratoFalado = ({ task, round, onSubmitTask, user, players }: TaskProps) => {\n  const cardWidth = useCardWidth(5, 32, 250, 270);\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitTask({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(task.data.options, 'playerId'));\n  });\n\n  return (\n    <>\n      <MinigameTitle round={round} task={task} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Dentre as ilustrações abaixo, qual melhor ilustra o mostro?\n              <br />\n              Foi você quem desenhou? Você pode votar em si mesmo se quiser.\n            </>\n          }\n          en={\n            <>\n              Among the illustrations below, which one best illustrates the monster?\n              <br />\n              Is that your drawing? You may vote for yourself if you want.\n            </>\n          }\n        />\n      </Instruction>\n\n      <Space className=\"space-container\">\n        <MonsterCard currentMonster={task.data.card} showControls cardWidth={250} />\n      </Space>\n\n      <div className=\"a-drawings\">\n        {task.data.options.map((entry: PlainObject) => (\n          <div className=\"a-drawings__entry\" key={entry.playerId}>\n            <CanvasSVG drawing={entry.drawing} width={cardWidth} className=\"a-drawing\" />\n\n            <Space className=\"space-container\">\n              <Button\n                shape=\"round\"\n                type=\"primary\"\n                disabled={user.ready}\n                loading={isLoading}\n                onClick={() => onSelect(entry.playerId)}\n              >\n                <Translate pt=\"Selecionar\" en=\"Select\" />\n              </Button>\n            </Space>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n","import clsx from 'clsx';\n// AntDesign Resources\nimport { Button, Image, Space } from 'antd';\n// Hooks\nimport { useBlurCards } from 'hooks/useBlurCards';\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { PUBLIC_URL } from 'utils/constants';\n// Components\nimport { Card, ImageBlurButtonContainer } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from './/MinigameTitle';\nimport { mockSelection } from '../utils/mock';\n\nexport const TaskSuperCampeonato = ({ task, round, onSubmitTask, user, players }: TaskProps) => {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n  const cardWidth = useCardWidth(6, 32, 200, 270);\n\n  // DEV Mock\n  useMock(() => {\n    onSubmitTask({\n      data: { value: mockSelection(task.data.contenders, 'id') },\n    });\n  });\n\n  return (\n    <>\n      <MinigameTitle round={round} task={task} />\n      <Instruction contained>\n        <Translate\n          pt={<>É a batalha final, qual desses dois venceria esse desafio?</>}\n          en={<>It's the final showdown, which one of these two would win this challenge?</>}\n        />\n      </Instruction>\n\n      <Space className=\"space-container\">\n        <Card header={translate('Desafio', 'Challenge')} color=\"purple\">\n          {task.data.challenge.text}\n        </Card>\n      </Space>\n\n      <Space className=\"space-container center\">\n        {task.data.contenders.map((contender: WContender, index: number) => {\n          return (\n            <Space direction=\"vertical\" key={contender.id}>\n              <ImageBlurButtonContainer cardId={contender.id}>\n                <ContenderCard\n                  size={cardWidth}\n                  overlayColor={index === 0 ? 'red' : 'blue'}\n                  contender={contender}\n                />\n              </ImageBlurButtonContainer>\n              <Button\n                shape=\"round\"\n                type=\"primary\"\n                disabled={user.ready}\n                loading={isLoading}\n                onClick={() =>\n                  onSubmitTask({\n                    data: { value: contender.id },\n                  })\n                }\n              >\n                <Translate pt=\"Selecionar\" en=\"Select\" />\n              </Button>\n            </Space>\n          );\n        })}\n      </Space>\n    </>\n  );\n};\n\ntype ContenderCardProps = {\n  size: number;\n  overlayColor: string;\n  contender: WContender | WBracket;\n  className?: string;\n  hideName?: boolean;\n};\n\nexport function ContenderCard({ size, overlayColor, contender, className, hideName }: ContenderCardProps) {\n  const { language } = useLanguage();\n  const { shouldBeBlurred } = useBlurCards();\n\n  const isBlurred = shouldBeBlurred(contender.id);\n\n  const imageURL = contender.id.replace(/-/g, '/');\n\n  return (\n    <div className={clsx('w-contender', className)} style={{ width: `${size}px` }}>\n      {!hideName && <span className=\"w-contender-name\">{contender.name[language]}</span>}\n      <img\n        src={`${PUBLIC_URL.IN_GAME}/w-overlay-${overlayColor}.png`}\n        className=\"w-contender-overlay\"\n        alt=\"contender\"\n        style={{ width: `${size}px` }}\n      />\n      <Image\n        src={`${process.env.REACT_APP_TDI_IMAGES_URL}${imageURL}.jpg`}\n        width={size}\n        className={clsx('w-contender-image', isBlurred && 'w-contender-image--blur')}\n        fallback={`${PUBLIC_URL.IN_GAME}/w-no-image.jpg`}\n        alt={contender.name[language]}\n      />\n    </div>\n  );\n}\n","// AntDesign Resources\nimport { Button, Image, Space } from 'antd';\n// Hooks\nimport { useMock } from 'hooks/useMock';\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\n// Utils\nimport { mockSelection } from '../utils/mock';\n// Components\nimport { DualTranslate, Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from './MinigameTitle';\nimport { Card, ImageCard } from 'components/cards';\nimport { IconAvatar } from 'components/avatars/IconAvatar';\nimport { SpeechBubbleAcceptedIcon } from 'icons/SpeechBubbleAcceptedIcon';\nimport { SpeechBubbleDeclinedIcon } from 'icons/SpeechBubbleDeclinedIcon';\n\nexport const TaskTestemunhaOcular = ({ task, round, onSubmitTask, user }: TaskProps) => {\n  const cardWidth = useCardWidth(8, 8, 150, 350, 8);\n  const { isLoading } = useLoading();\n  const { translate } = useLanguage();\n\n  const onSelect = (value: string) => {\n    onSubmitTask({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(task.data.suspects, 'id'));\n  });\n\n  if (task.variant === 'suspects') {\n    return (\n      <>\n        <MinigameTitle round={round} task={task} />\n        <Instruction contained>\n          <Translate\n            pt={\n              <>\n                Uma testemunha deu essa resposta ao tentar falar quem era o criminoso à polícia.\n                <br />\n                Qual dos suspeito você acha que é o criminoso?\n              </>\n            }\n            en={\n              <>\n                A witness gave this answer when trying to explain who the perpetrator was to the police.\n                <br />\n                Which one of them is the perpetrator?\n              </>\n            }\n          />\n        </Instruction>\n\n        <Card header={translate('Pergunta', 'Question')} color=\"orange\">\n          {task.data.question.question}\n        </Card>\n\n        <Space className=\"space-container\">\n          {task.data.answer ? (\n            <Translate en=\"YES\" pt=\"SIM\" />\n          ) : (\n            <>\n              <Translate en=\"NO\" pt=\"NÃO\" />\n            </>\n          )}{' '}\n          <IconAvatar\n            size=\"large\"\n            icon={task.data.answer ? <SpeechBubbleAcceptedIcon /> : <SpeechBubbleDeclinedIcon />}\n          />\n        </Space>\n\n        <Image.PreviewGroup>\n          <Space className=\"space-container\">\n            {task.data.suspects.map((suspect: PlainObject) => {\n              return (\n                <Space className=\"space-container\" direction=\"vertical\" key={suspect.id}>\n                  <div className=\"t-suspects-table__suspect\">\n                    <ImageCard\n                      imageId={suspect.id}\n                      className=\"t-suspects-table__suspect-image\"\n                      cardWidth={cardWidth}\n                      preview={false}\n                    />\n                    <div className=\"t-suspects-table__suspect-name\">\n                      <DualTranslate>{suspect.name}</DualTranslate>\n                    </div>\n                  </div>\n\n                  <Button\n                    shape=\"round\"\n                    type=\"primary\"\n                    disabled={user.ready}\n                    loading={isLoading}\n                    onClick={() => onSelect(suspect.id)}\n                  >\n                    <Translate pt=\"Selecionar\" en=\"Select\" />\n                  </Button>\n                </Space>\n              );\n            })}\n          </Space>\n        </Image.PreviewGroup>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <MinigameTitle round={round} task={task} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Você é a testemunha de um crime horrível. O detetive te fez essa pergunta sobre esse suspeito.\n              <br />O que você responde?\n            </>\n          }\n          en={\n            <>\n              You're the witness of a horrible crime. The detective asked you this question about the suspect.\n              <br />\n              what do you answer?\n            </>\n          }\n        />\n      </Instruction>\n\n      <Card header={translate('Pergunta', 'Question')} color=\"orange\">\n        {task.data.question.question}\n      </Card>\n\n      <Space className=\"space-container\" direction=\"vertical\">\n        <ImageCard\n          imageId={task.data.suspect.id}\n          className=\"t-suspects-table__suspect-image\"\n          cardWidth={cardWidth}\n          preview={false}\n        />\n        <div className=\"t-suspects-table__suspect-name\">\n          <DualTranslate>{task.data.suspect.name}</DualTranslate>\n        </div>\n      </Space>\n\n      <Space className=\"space-container\">\n        <Button size=\"large\" icon={<SpeechBubbleDeclinedIcon />} onClick={() => onSelect('NO')}>\n          <Translate en=\"NO\" pt=\"NÃO\" />\n        </Button>\n\n        <Button size=\"large\" icon={<SpeechBubbleAcceptedIcon />} onClick={() => onSelect('YES')}>\n          <Translate en=\"YES\" pt=\"SIM\" />\n        </Button>\n      </Space>\n    </>\n  );\n};\n","import { useState } from 'react';\n// AntDesign Resources\nimport { Button, Input, Space } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockText } from '../utils/mock';\n// Components\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from './MinigameTitle';\n\nexport const TaskUeSoIsso = ({ task, round, onSubmitTask, user, players }: TaskProps) => {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n  const [clue, setClue] = useState('');\n\n  const onSubmitClue = () => {\n    if (clue.length > 1 && clue.toLowerCase() !== task.data.card.text.toLowerCase()) {\n      onSubmitTask({\n        data: { value: clue },\n      });\n    }\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSubmitTask({\n      data: { value: mockText() },\n    });\n  });\n\n  return (\n    <>\n      <MinigameTitle round={round} task={task} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Num jogo normal de <strong>Ué, Só Isso</strong>, você está tentando dar uma dica que não seja\n              igual a dos outros jogadores para que sua dica não seja eliminada.\n              <br />\n              Dessa vez, você <strong>quer que sua dica (palavra-única) seja eliminada</strong>, seja bem\n              óbvio!\n            </>\n          }\n          en={\n            <>\n              In a normal game of <strong>That's it?</strong>, you are trying to write a clue that is not the\n              same as other players' so it doesn't get removed.\n              <br />\n              This time, you <strong>want your clue (single word) to be eliminated</strong>, so be very\n              obvious!\n            </>\n          }\n        />\n      </Instruction>\n      <Space className=\"space-container\">\n        <Card color=\"purple\" header={translate('A Palavra Secreta é', 'Secret Word')} size=\"large\">\n          {task.data.card.text}\n        </Card>\n      </Space>\n\n      <Space className=\"space-container\" direction=\"vertical\">\n        <SuggestionEasel\n          id={user.id}\n          onChangeInput={(e) => setClue(e.target.value)}\n          onPressEnter={onSubmitClue}\n        />\n        <Button\n          shape=\"round\"\n          type=\"primary\"\n          disabled={user.ready || clue.length < 2 || clue.toLowerCase() === task.data.card.text.toLowerCase()}\n          loading={isLoading}\n          onClick={onSubmitClue}\n        >\n          <Translate pt=\"Enviar\" en=\"Submit\" />\n        </Button>\n      </Space>\n    </>\n  );\n};\n\ntype SuggestionEaselProps = {\n  id: string;\n  onChangeInput?: GenericFunction;\n  onPressEnter?: GenericFunction;\n  value?: string;\n};\n\nexport function SuggestionEasel({ id, onChangeInput, onPressEnter, value }: SuggestionEaselProps) {\n  const { translate } = useLanguage();\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 230 60\"\n      overflow=\"visible\"\n      width=\"230\"\n      className=\"u-suggestion-easel\"\n    >\n      <path fill=\"#fff\" d=\"M26.7 59.5L14.1.5h202.7l12.6 59z\" />\n      <path fill=\"#4d4d4d\" d=\"M216.4 1l12.4 58H27.1L14.7 1h201.7m.8-1H13.5l12.8 60H230L217.2 0z\" />\n      <path fill=\"#4d4d4d\" d=\"M24.2 48.3L13.5 0 0 48.3z\" />\n      <foreignObject x=\"32.6\" y=\"13.9\" width=\"185\" height=\"300\">\n        <div>\n          <Input\n            placeholder={translate('Escreva dica aqui', 'Write here')}\n            key={id}\n            id={id}\n            value={value}\n            onChange={onChangeInput}\n            className=\"u-suggestion-easel__input\"\n            bordered={false}\n            onPressEnter={onPressEnter}\n            autoComplete=\"off\"\n          />\n        </div>\n      </foreignObject>\n      <path opacity=\".2\" d=\"M0 48.3L26.3 60l-2.1-11.7z\" />\n    </svg>\n  );\n}\n","// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useMock } from 'hooks/useMock';\nimport { useLoading } from 'hooks/useLoading';\n// Utils\nimport { mockSelection } from '../utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from './MinigameTitle';\nimport { MovieCard } from 'components/cards/MovieCard';\nimport { MovieReviewCard } from 'components/cards/MovieReviewCard';\n\nexport const TaskVamosAoCinema = ({ task, round, onSubmitTask, user }: TaskProps) => {\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitTask({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(['A', 'B', 'C', 'D']));\n  });\n\n  return (\n    <>\n      <MinigameTitle round={round} task={task} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Decidimos que o filme que mais se encaixa nas críticas abaixo é o que vamos assistir! Qual filme\n              você quer ver?\n            </>\n          }\n          en={\n            <>\n              We decided that we will watch a movie that best match both reviews bellow! Which movie do you\n              prefer?\n            </>\n          }\n        />\n      </Instruction>\n\n      <Space className=\"space-container\">\n        <MovieReviewCard\n          type=\"positive\"\n          text={task.data.reviews.good.text}\n          highlights={task.data.reviews.good.highlights}\n        />\n\n        <MovieReviewCard\n          type=\"negative\"\n          text={task.data.reviews.bad.text}\n          highlights={task.data.reviews.bad.highlights}\n        />\n      </Space>\n\n      <Space className=\"v-movies\">\n        <Space className=\"space-container\" direction=\"vertical\">\n          <MovieCard movie={task.data.movies[0]} disableSuffix prefixColor=\"Khaki\" />\n          <MovieCard movie={task.data.movies[1]} prefixColor=\"aquamarine\" suffixColor=\"Khaki\" />\n          <MovieCard movie={task.data.movies[2]} disablePrefix suffixColor=\"aquamarine\" />\n        </Space>\n        <div className=\"v-movie-buttons\">\n          <Button\n            shape=\"circle\"\n            size=\"large\"\n            type=\"primary\"\n            style={{ background: 'Khaki', color: 'black' }}\n            onClick={() => onSelect('A')}\n            disabled={isLoading || user.ready}\n          >\n            A\n          </Button>\n          <Button\n            shape=\"circle\"\n            size=\"large\"\n            type=\"primary\"\n            style={{ background: 'aquamarine', color: 'black' }}\n            onClick={() => onSelect('B')}\n            disabled={isLoading || user.ready}\n          >\n            B\n          </Button>\n        </div>\n        <div className=\"v-movie-buttons\">\n          <Button\n            shape=\"circle\"\n            size=\"large\"\n            type=\"primary\"\n            style={{ background: 'LightGreen', color: 'black' }}\n            onClick={() => onSelect('C')}\n            disabled={isLoading || user.ready}\n          >\n            C\n          </Button>\n          <Button\n            shape=\"circle\"\n            size=\"large\"\n            type=\"primary\"\n            style={{ background: 'Plum', color: 'black' }}\n            onClick={() => onSelect('D')}\n            disabled={isLoading || user.ready}\n          >\n            D\n          </Button>\n        </div>\n        <Space className=\"space-container\" direction=\"vertical\">\n          <MovieCard movie={task.data.movies[3]} disableSuffix prefixColor=\"LightGreen\" />\n          <MovieCard movie={task.data.movies[4]} prefixColor=\"Plum\" suffixColor=\"LightGreen\" />\n          <MovieCard movie={task.data.movies[5]} disablePrefix suffixColor=\"Plum\" />\n        </Space>\n      </Space>\n    </>\n  );\n};\n","// Components\nimport { Step } from 'components/steps';\nimport { ClubLine } from './components/ClubLine';\nimport { TaskArteRuim } from './components/TaskArteRuim';\nimport { TaskCaminhosMagicos } from './components/TaskCaminhosMagicos';\nimport { TaskContadoresHistorias } from './components/TaskContadoresHistorias';\nimport { TaskCrimesHediondos } from './components/TaskCrimesHediondos';\nimport { TaskCruzaPalavras } from './components/TaskCruzaPalavras';\nimport { TaskDetetivesImaginativos } from './components/TaskDetetivesImaginativos';\nimport { TaskDilemaDosEsquiadores } from './components/TaskDilemaDosEsquiadores';\nimport { TaskEspiaoEntreNos } from './components/TaskEspiaoEntreNos';\nimport { TaskFileiraDeFatos } from './components/TaskFileiraDeFatos';\nimport { TaskGaleriaDeSonhos } from './components/TaskGaleriaDeSonhos';\nimport { TaskMenteColetiva } from './components/TaskMenteColetiva';\nimport { TaskNamoroOuAmizade } from './components/TaskNamoroOuAmizade';\nimport { TaskNaRuaDoMedo } from './components/TaskNaRuaDoMedo';\nimport { TaskOndaTelepatica } from './components/TaskOndaTelepatica';\nimport { TaskPalhetaDeCores } from './components/TaskPalhetaDeFores';\nimport { TaskPolemicaDaVez } from './components/TaskPolemicaDaVez';\nimport { TaskPortaDosDesesperados } from './components/TaskPortaDosDesesperados';\nimport { TaskQuemNaoMata } from './components/TaskQuemNaoMata';\nimport { TaskRetratoFalado } from './components/TaskRetratoFalado';\nimport { TaskSuperCampeonato } from './components/TaskSuperCampeonato';\nimport { TaskTestemunhaOcular } from './components/TaskTestemunhaOcular';\nimport { TaskUeSoIsso } from './components/TaskUeSoIsso';\nimport { TaskVamosAoCinema } from './components/TaskVamosAoCinema';\n\ntype StepTaskProps = {\n  round: GameRound;\n  task: Task;\n  players: GamePlayers;\n  user: GamePlayer;\n  onSubmitTask: GenericFunction;\n} & AnnouncementProps;\n\nexport const StepTask = ({ announcement, ...rest }: StepTaskProps) => {\n  let Component = FallbackComponent;\n\n  switch (rest.task.game) {\n    case 'arte-ruim':\n      Component = TaskArteRuim;\n      break;\n    case 'caminhos-magicos':\n      Component = TaskCaminhosMagicos;\n      break;\n    case 'contadores-historias':\n      Component = TaskContadoresHistorias;\n      break;\n    case 'crimes-hediondos':\n      Component = TaskCrimesHediondos;\n      break;\n    case 'cruza-palavras':\n      Component = TaskCruzaPalavras;\n      break;\n    case 'dilema-dos-esquiadores':\n      Component = TaskDilemaDosEsquiadores;\n      break;\n    case 'detetives-imaginativos':\n      Component = TaskDetetivesImaginativos;\n      break;\n    case 'espiao-entre-nos':\n      Component = TaskEspiaoEntreNos;\n      break;\n    case 'fileira-de-fatos':\n      Component = TaskFileiraDeFatos;\n      break;\n    case 'galeria-de-sonhos':\n      Component = TaskGaleriaDeSonhos;\n      break;\n    case 'mente-coletiva':\n      Component = TaskMenteColetiva;\n      break;\n    case 'namoro-ou-amizade':\n      Component = TaskNamoroOuAmizade;\n      break;\n    case 'na-rua-do-medo':\n      Component = TaskNaRuaDoMedo;\n      break;\n    case 'onda-telepatica':\n      Component = TaskOndaTelepatica;\n      break;\n    case 'palheta-de-cores':\n      Component = TaskPalhetaDeCores;\n      break;\n    case 'polemica-da-vez':\n      Component = TaskPolemicaDaVez;\n      break;\n    case 'porta-dos-desesperados':\n      Component = TaskPortaDosDesesperados;\n      break;\n    case 'quem-nao-mata':\n      Component = TaskQuemNaoMata;\n      break;\n    case 'retrato-falado':\n      Component = TaskRetratoFalado;\n      break;\n    case 'super-campeonato':\n      Component = TaskSuperCampeonato;\n      break;\n    case 'testemunha-ocular':\n      Component = TaskTestemunhaOcular;\n      break;\n    case 'ue-so-isso':\n      Component = TaskUeSoIsso;\n      break;\n    case 'vamos-ao-cinema':\n      Component = TaskVamosAoCinema;\n      break;\n    default:\n      Component = FallbackComponent;\n  }\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Component {...rest} />\n      <ClubLine players={rest.players} currentRound={rest.round.current} />\n    </Step>\n  );\n};\n\nconst FallbackComponent = (_: TaskProps) => {\n  return <div>Something wrong is not right</div>;\n};\n","// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { TITLES } from '../utils/constants';\n\ntype TaskTitleProps = {\n  task: Task;\n};\n\nexport const TaskTitle = ({ task }: TaskTitleProps) => {\n  const { dualTranslate } = useLanguage();\n\n  const instruction: DualLanguageValue = TITLES?.[task.game] ?? {\n    pt: 'Nome do Jogo',\n    en: 'Game Title',\n  };\n\n  return <>{dualTranslate(instruction)}</>;\n};\n","// Components\nimport { Translate } from 'components/language';\nimport { PointsHighlight } from 'components/metrics/PointsHighlight';\nimport { Instruction } from 'components/text';\n\nexport function DJInstructions({ round }: { round: GameRound }): JSX.Element {\n  if (round.current <= 1) {\n    return (\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Fala galera! Eu sou o DJ PruPruPru!\n              <br />O objetivo desse jogo é <strong>entrar</strong> e <strong>permanecer</strong> na área VIP!\n              <br />\n              Você consegue isso se você sempre responder com a maioria! Não importa se está certo ou errado.\n              <br />\n              Ao responder com a maioria, você ganha <PointsHighlight type=\"positive\">1</PointsHighlight>{' '}\n              ponto por entrar na área VIP ou <PointsHighlight type=\"positive\">2</PointsHighlight> points se\n              você estiver lá.\n              <br /> Vamos aos hits!\n            </>\n          }\n          en={\n            <>\n              Yo my party people! I'm DJ PruPruPru!\n              <br />\n              The goal of the game is to <strong>join</strong> and <strong>stay</strong> in the VIP area!\n              <br />\n              You achieve this by always answering the tasks with the majority. It doesn't matter if it's\n              wrong or right.\n              <br />\n              When answering with the majority, you gain <PointsHighlight type=\"positive\">\n                1\n              </PointsHighlight>{' '}\n              point for joining the VIP area or <PointsHighlight type=\"positive\">2</PointsHighlight> points if\n              you're already there.\n              <br />\n              Let's play those hits!\n            </>\n          }\n        />\n      </Instruction>\n    );\n  }\n\n  if (round.current === Math.round(round.total / 2)) {\n    return (\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              DJ PruPruPru está de volta!\n              <br />\n              Estamos no meio da noite! Você está conseguindo ficar na área VIP?\n            </>\n          }\n          en={\n            <>\n              DJ PruPruPru back here!\n              <br />\n              We're halfway. Are you able to stay in the VIP area?\n            </>\n          }\n        />\n      </Instruction>\n    );\n  }\n\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Última rodada! Ganha quem estiver na área VIP com mais pontos!\n            <br />\n            Será que será você?\n          </>\n        }\n        en={\n          <>\n            It's the last round! The player with the most points in the VIP area will win!\n            <br />\n            Will that be you?\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n","// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitTaskAPIRequest } from './utils/api-requests';\nimport { useColorizeBackground } from './utils/useColorizeBackground';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\nimport { showDJPruPruPruStep } from './utils/helpers';\n// Icons\nimport { DJIcon } from 'icons/DJIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { TaskIcon } from './components/TaskIcon';\nimport { TaskInstructions } from './components/TaskInstructions';\nimport { StepTask } from './StepTask';\nimport { TaskTitle } from './components/TaskTitle';\nimport { DJInstructions } from './components/RulesBlobs';\nimport { Translate } from 'components/language';\nimport { DJPruPruPruSound } from 'components/audio/DJPruPruPruSound';\n\nfunction PhaseTask({ players, state, info }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, setStep, goToNextStep } = useStep(showDJPruPruPruStep(state.round));\n\n  // Dynamic background\n  useColorizeBackground(user, state?.round?.current);\n\n  const onSubmitTask = useOnSubmitTaskAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<TaskIcon task={state.task} />}\n      title={<TaskTitle task={state.task} />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <Instruction>\n        <TaskInstructions task={state.task} />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.MEGAMIX.TASK}>\n      <StepSwitcher step={step} conditions={[!user.isReady]} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<DJIcon />}\n          title={<DJAnnouncementTitle round={state.round} />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          duration={state?.round?.current < 2 ? 20 : 7}\n          unskippable\n          type=\"block\"\n        >\n          <DJPruPruPruSound />\n          <DJInstructions round={state.round} />\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepTask\n          task={state.task}\n          round={state.round}\n          players={players}\n          announcement={announcement}\n          onSubmitTask={onSubmitTask}\n          user={user}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseTask;\n\nfunction DJAnnouncementTitle({ round }: { round: GameRound }) {\n  if (round.current < 2) return <Translate pt=\"A Balada\" en=\"The Club\" />;\n  if (round.current === Math.round(round.total / 2))\n    return <Translate pt=\"E tamo só esquentando\" en=\"We're halfway!\" />;\n  return <Translate pt=\"Última música\" en=\"The last song\" />;\n}\n","import { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { MEGAMIX_API } from 'services/adapters';\n\nexport function useOnSubmitSeedAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: MEGAMIX_API.submitAction,\n    actionName: 'submit-seed',\n    onSuccess: () => setStep(3),\n    successMessage: translate('Dados enviados com sucesso', 'Data submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar seus dados',\n      'Oops, the application found an error while trying to submit your data'\n    ),\n  });\n\n  return (payload: SubmitTaskPayload) => {\n    request({\n      action: 'SUBMIT_SEEDS',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitTaskAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: MEGAMIX_API.submitAction,\n    actionName: 'submit-task',\n    onSuccess: () => setStep(3),\n    successMessage: translate('Tarefa enviada com sucesso', 'Task submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua tarefa',\n      'Oops, the application found an error while trying to submit your task'\n    ),\n  });\n\n  return (payload: SubmitTaskPayload) => {\n    request({\n      action: 'SUBMIT_TASK',\n      ...payload,\n    });\n  };\n}\n","import { useEffect, useState } from 'react';\n// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { NOOP } from 'utils/constants';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\nimport { Card } from 'components/cards';\nimport { DrawingCanvas } from 'components/canvas';\nimport { PanicIcon } from 'icons/PanicIcon';\nimport { ArteRuimTimerSound } from 'components/audio/ArteRuimTimerSound';\nimport { TimeHighlight } from 'components/metrics/TimeHighlight';\n\ntype SeedArteRuimProps = {\n  seed: SeedEntryArteRuim;\n  updateData: GenericComponent;\n};\n\nexport function SeedArteRuim({ seed, updateData }: SeedArteRuimProps) {\n  const { translate } = useLanguage();\n  const [lines, setLines] = useState<any>([]);\n  const [isTimesUp, setTimesUp] = useState(false);\n\n  const { seconds, start, isRunning } = useCountdown({\n    duration: 13,\n    autoStart: false,\n    onExpire: () => {\n      updateData(\n        {\n          [seed.card.id]: JSON.stringify(lines),\n        },\n        true\n      );\n    },\n  });\n\n  useEffect(() => {\n    if (seconds === 2) {\n      setTimesUp(true);\n    }\n  }, [seconds]);\n\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\">\n        <Translate\n          pt=\"Para ajudar aliviar o estresse de ser sensual na balada, você resolveu se expressar artisticamente\"\n          en=\"To help relieve the stress of being incredibly hot in the club, you decided to express yourself through art\"\n        />\n      </Title>\n\n      <Space direction=\"vertical\">\n        <Instruction className=\"seed-instruction\">\n          <Translate\n            pt={\n              <>\n                Você tem <TimeHighlight>10 segundos</TimeHighlight> para desenhar a carta abaixo. Quando\n                estiver pronto, aperte o botão, o texto irá aparecer, então desenhe rápido!\n              </>\n            }\n            en={\n              <>\n                You have <TimeHighlight>10 seconds</TimeHighlight> to draw the card below. When you're ready,\n                press the button so the text will show up and then draw fast!\n              </>\n            }\n          />\n        </Instruction>\n        <Button onClick={start} type=\"primary\" disabled={isRunning}>\n          <Translate pt=\"Começar\" en=\"Start\" />\n        </Button>\n\n        <Card size=\"large\" header={translate('Desenhe', 'Draw')} className=\"a-draw__card\" color=\"yellow\">\n          {isRunning ? (\n            <>\n              {seed.card.text}\n              <span className=\"a-draw__timer\">{seconds > 1 ? seconds - 2 : 0}</span>\n            </>\n          ) : (\n            '?'\n          )}\n        </Card>\n        {isRunning && <ArteRuimTimerSound />}\n        {isTimesUp ? (\n          <PanicIcon style={{ background: 'white', width: '500px', padding: '2em' }} />\n        ) : isRunning ? (\n          <DrawingCanvas lines={lines} setLines={setLines} />\n        ) : (\n          <DrawingCanvas lines={[]} setLines={NOOP} />\n        )}\n      </Space>\n    </div>\n  );\n}\n","import { capitalize } from 'lodash';\n// AntDesign Resources\nimport { Button, Space } from 'antd';\nimport { HeartOutlined, MessageOutlined, SendOutlined } from '@ant-design/icons';\n// Components\nimport { BikiniModelIcon } from 'icons/BikiniModelIcon';\nimport { Translate } from 'components/language';\nimport { Instruction, TextHighlight, Title } from 'components/text';\nimport { SocialProfile } from './SocialProfile';\n\ntype SeedCaminhosMagicosProps = {\n  seed: SeedEntryCaminhosMagicos;\n  updateData: GenericComponent;\n  user: GamePlayer;\n};\n\nexport function SeedCaminhosMagicos({ seed, updateData, user }: SeedCaminhosMagicosProps) {\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\">\n        <Translate\n          pt=\"Você decidiu postar uma foto piranhuda no Instagram antes de se arrumar...\"\n          en=\"You decided to post a thirst trap on Instagram before getting ready...\"\n        />\n      </Title>\n\n      <Space direction=\"vertical\">\n        <Instruction className=\"seed-instruction\">\n          <Translate\n            pt={\n              <>\n                Para não pensarem mal de você, você escolheu <TextHighlight>{seed.portal.text}</TextHighlight>{' '}\n                como a legenda de impacto da sua postagem. Agora escolha o melhor adjetivo que vai bem com\n                ela.\n              </>\n            }\n            en={\n              <>\n                Thinking about the haters, you chose <TextHighlight>{seed.portal.text}</TextHighlight> as a\n                caption. Now select the best adjective to go with it.\n              </>\n            }\n          />\n        </Instruction>\n\n        <div className=\"cm-instagram\">\n          <SocialProfile\n            avatarId={user.avatarId}\n            name={user.name}\n            handle={<Translate pt=\"Logo ali, Brasil\" en=\"Somewhere\" />}\n            className=\"cm-instagram__user\"\n          />\n          <div className=\"cm-instagram__picture\">\n            <BikiniModelIcon />\n          </div>\n          <div className=\"cm-instagram__buttons\">\n            <HeartOutlined /> <MessageOutlined /> <SendOutlined />\n          </div>\n          <div className=\"cm-instagram__post\">\n            <strong>{user.name.toLowerCase()}</strong> {capitalize(seed.portal.text)}...\n          </div>\n        </div>\n\n        <Space>\n          {seed.cards.map((card) => (\n            <Button\n              key={card.id}\n              onClick={() => updateData({ [seed.portal.id]: card.id }, true)}\n              type=\"primary\"\n            >\n              {card.text}\n            </Button>\n          ))}\n        </Space>\n      </Space>\n    </div>\n  );\n}\n","import { useEffectOnce } from 'react-use';\n// AntDesign Resources\nimport { Button, Segmented, Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\n// Utils\nimport { LETTERS } from 'utils/constants';\n// Components\nimport { Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { ClubberAvatar } from './ClubberAvatar';\n\ntype SeedClubberProps = {\n  seed: SeedEntryClubberOutfit;\n  updateData: GenericComponent;\n  user: GamePlayer;\n  onSubmitData: GenericFunction;\n  data: PlainObject;\n};\n\nexport function SeedClubber({ seed, updateData, user, data, onSubmitData }: SeedClubberProps) {\n  const { isLoading } = useLoading();\n\n  useEffectOnce(() => {\n    updateData({ clubberId: seed.outfits[0] });\n  });\n\n  const clubbers = (seed.outfits ?? []).map((cId: string, index: number) => ({\n    label: (\n      <div className=\"clubber-selection\">\n        <ClubberAvatar id={user.avatarId} clubberId={cId} />\n        <div>{LETTERS[index]}</div>\n      </div>\n    ),\n    value: cId,\n  }));\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\">\n        <Translate\n          pt=\"Escolha o que você vai usar pra balada\"\n          en=\"Choose what you want to wear for this party\"\n        />\n      </Title>\n\n      <Space className=\"space-container\" direction=\"vertical\">\n        <Segmented\n          options={clubbers}\n          value={data.clubberId}\n          onChange={(clubberId) => updateData({ clubberId })}\n        />\n\n        <Button onClick={() => onSubmitData({ data })} disabled={isLoading || user.ready}>\n          <Translate pt=\"Confirmar roupa\" en=\"Confirm outfit\" />\n        </Button>\n      </Space>\n    </div>\n  );\n}\n","import moment from 'moment';\nimport { useState } from 'react';\n// AntDesign Resources\nimport { Button, InputNumber, Slider, Space } from 'antd';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { Title } from 'components/text';\n\ntype SeedFileiraDeFatosProps = {\n  seed: SeedEntryFileiraDeFatos;\n  updateData: GenericComponent;\n};\n\nconst now = moment().format('MMMM YYYY, h:mm');\n\nexport function SeedFileiraDeFatos({ seed, updateData }: SeedFileiraDeFatosProps) {\n  const [value, setValue] = useState(0);\n\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\">\n        <Translate\n          pt=\"Você recebeu o torpedo de um amigo e precisa responder antes de se arrumar\"\n          en=\"You received the following text message from a friend and you must answer it before leaving\"\n        />\n      </Title>\n\n      <Space className=\"space-container\" direction=\"vertical\">\n        <div className=\"ff-phone\">\n          <div className=\"ff-phone__contact\">\n            <Avatar id=\"B\" />\n            <div className=\"ff-phone__name\">Bob {'>'}</div>\n          </div>\n          <div className=\"ff-phone__thread\">\n            <div className=\"ff-phone__message\">\n              <Translate pt=\"Ow\" en=\"Dude\" />\n            </div>\n            <div className=\"ff-phone__message\">\n              <Translate pt=\"fala aí\" en=\"Answer this\" />\n            </div>\n            <div className=\"ff-phone__message\">\n              <Translate pt=\"De 0 a 100...\" en=\"From 0 to 100\" />\n            </div>\n            <div className=\"ff-phone__timestamp\">\n              <Translate pt=\"Recebido\" en=\"Received\" /> {now}\n            </div>\n            <div className=\"ff-phone__message\">{seed.card.question}</div>\n          </div>\n        </div>\n\n        <Space className=\"space-container\">\n          <Slider min={0} max={100} onChange={(e) => setValue(e)} className=\"ff-slider\" value={value} />\n          <InputNumber\n            min={0}\n            max={100}\n            style={{ margin: '0 16px' }}\n            value={value}\n            onChange={(e) => setValue(e ?? 0)}\n          />\n        </Space>\n\n        <Button block onClick={() => updateData({ fact: value }, true)}>\n          <Translate pt=\"Enviar\" en=\"Submit\" /> ({value})\n        </Button>\n      </Space>\n    </div>\n  );\n}\n","import { useState } from 'react';\n// AntDesign Resources\nimport { Button, Input, Space } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\n\ntype SeedOndaTelepaticaProps = {\n  seed: SeedEntryOndaTelepatica;\n  updateData: GenericComponent;\n};\n\nconst leftSide = Math.random() > 0.5;\n\nexport function SeedOndaTelepatica({ seed, updateData }: SeedOndaTelepaticaProps) {\n  const [value, setValue] = useState('');\n  const { translate } = useLanguage();\n  const theme = leftSide ? seed.card.left : seed.card.right;\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\">\n        <Translate\n          pt=\"Você ainda estuda e precisa terminar sua tarefa de casa...\"\n          en=\"You're still in school and needs to finish your homework...\"\n        />\n      </Title>\n\n      <Space className=\"space-container\" direction=\"vertical\">\n        <Instruction className=\"seed-instruction\">\n          <Translate\n            pt={\n              <>\n                Escreva algo simples que combine com o tema abaixo, pode ser uma palavra, duas, uma expressão.\n              </>\n            }\n            en={\n              <>Write something simple that matches the theme below. It could be a word, two, or a phrase.</>\n            }\n          />\n        </Instruction>\n\n        <Card header={translate('Tarefa', 'Homework')} color=\"purple\">\n          {theme}\n        </Card>\n\n        <Input\n          onChange={(e) => setValue(e.target.value)}\n          size=\"large\"\n          placeholder={translate('Escreva aqui', 'Write here')}\n          onPressEnter={() => updateData({ wave: value }, true)}\n        />\n\n        <Space>\n          <Button\n            disabled={value.length < 2}\n            onClick={() => updateData({ wave: value }, true)}\n            type=\"primary\"\n          >\n            <Translate pt=\"Enviar dever de casa\" en=\"Submit homework\" />\n          </Button>\n        </Space>\n      </Space>\n    </div>\n  );\n}\n","// AntDesign Resources\nimport { Button } from 'antd';\nimport { DislikeFilled, LikeFilled } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { SocialProfile } from './SocialProfile';\n\ntype SeedPolemicaDaVezProps = {\n  seed: SeedEntryPolemicaDaVez;\n  updateData: GenericComponent;\n};\n\nexport function SeedPolemicaDaVez({ seed, updateData }: SeedPolemicaDaVezProps) {\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\">\n        <Translate\n          pt={\n            <>\n              Vamos procrastinar:\n              <br />\n              Você abre o Twitter e vê esse tópico. Curte ou não curte?\n            </>\n          }\n          en={\n            <>\n              Let's procrastinate:\n              <br />\n              You open twitter and see this topic. Like or Dislike?\n            </>\n          }\n        />\n      </Title>\n\n      <div className=\"tweet\">\n        <SocialProfile avatarId=\"A\" name=\"Bob\" handle=\"@bob\" verified />\n        <span className=\"tweet__text\">{seed.card.text}</span>\n        <div className=\"tweet__buttons\">\n          <Button block icon={<LikeFilled />} onClick={() => updateData({ likeTopic: true }, true)}>\n            <Translate pt=\"Curtir\" en=\"Like\" />\n          </Button>\n          <Button block icon={<DislikeFilled />} onClick={() => updateData({ likeTopic: false }, true)}>\n            <Translate pt=\"Não curto\" en=\"Dislike\" />\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useAudio } from 'react-use';\n// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useCountdown } from 'hooks/useCountdown';\n// Utils\nimport { NOOP } from 'utils/constants';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\nimport { DrawingCanvas } from 'components/canvas';\nimport { PanicIcon } from 'icons/PanicIcon';\nimport { MonsterCard } from 'components/cards/MonsterCard';\nimport { ImageCardPreloadHand } from 'components/cards';\n// Sound\nconst arteRuimTimer = require('assets/sounds/arte-ruim-timer.mp3');\n\ntype SeedRetratoFaladoProps = {\n  seed: SeedEntryRetratoFalado;\n  updateData: GenericComponent;\n};\n\nexport function SeedRetratoFalado({ seed, updateData }: SeedRetratoFaladoProps) {\n  const [lines, setLines] = useState<any>([]);\n  const [isTimesUp, setTimesUp] = useState(false);\n  const [volume] = useGlobalState('volume');\n  const [audio, , controls] = useAudio({\n    src: arteRuimTimer,\n  });\n\n  // Updated volume\n  useEffect(() => {\n    controls.volume(volume);\n  }, [volume]); // eslint-disable-line\n\n  const { seconds, start, isRunning } = useCountdown({\n    duration: 33,\n    autoStart: false,\n    onExpire: () => {\n      updateData(\n        {\n          [seed.card.id]: JSON.stringify(lines),\n        },\n        true\n      );\n    },\n  });\n\n  useEffect(() => {\n    if (seconds === 2) {\n      setTimesUp(true);\n    }\n  }, [seconds]);\n\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\">\n        <Translate\n          pt=\"De repente, você se lembra de um evento muito traumático na sua vida, uma monstro te atacou uma vez...\"\n          en=\"Suddenly you have a glimpse of memory from the day a monster attacked you...\"\n        />\n      </Title>\n\n      <Space direction=\"vertical\">\n        <Instruction className=\"seed-instruction\">\n          <Translate\n            pt={\n              <>\n                Você tem <strong>30 segundos</strong> para desenhar a carta abaixo.\n                <br />\n                Desenhá-lo é a única coisa que te acalma. Quando estiver pronto, aperte o botão!\n              </>\n            }\n            en={\n              <>\n                You have <strong>30 seconds</strong> to draw the card below.\n                <br />\n                Drawing it is the only thing that calms you down. When you're ready, press the button!\n              </>\n            }\n          />\n        </Instruction>\n        <Button onClick={start} type=\"primary\" disabled={isRunning}>\n          <Translate pt=\"Começar\" en=\"Start\" />\n        </Button>\n\n        {isRunning && audio}\n        <div className=\"monster-container\">\n          {isRunning && <span className=\"a-draw__timer\">{seconds > 1 ? seconds - 2 : 0}</span>}\n\n          <MonsterCard\n            currentMonster={isRunning ? seed.card : { id: 'md-bs-000', orientation: seed.card.orientation }}\n            showControls\n            cardWidth={250}\n          />\n\n          {isTimesUp ? (\n            <PanicIcon style={{ background: 'white', width: '500px', padding: '2em' }} />\n          ) : isRunning ? (\n            <DrawingCanvas lines={lines} setLines={setLines} />\n          ) : (\n            <DrawingCanvas lines={[]} setLines={NOOP} />\n          )}\n        </div>\n      </Space>\n\n      <ImageCardPreloadHand hand={[seed.card.id]} />\n    </div>\n  );\n}\n","import { useState } from 'react';\n// AntDesign Resources\nimport { Steps } from 'antd';\n// Hooks\nimport { useMock } from 'hooks/useMock';\nimport { useStep } from 'hooks/useStep';\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { buildSeedingSteps } from './utils/helpers';\nimport { mockSeeding } from './utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\nimport { SeedArteRuim } from './components/SeedArteRuim';\nimport { SeedCaminhosMagicos } from './components/SeedCaminhosMagicos';\nimport { SeedClubber } from './components/SeedClubber';\nimport { SeedFileiraDeFatos } from './components/SeedFileiraDeFatos';\nimport { SeedOndaTelepatica } from './components/SeedOndaTelepatica';\nimport { SeedPolemicaDaVez } from './components/SeedPolemicaDaVez';\nimport { SeedRetratoFalado } from './components/SeedRetratoFalado';\n\ntype StepSeedingProps = {\n  players: GamePlayers;\n  user: GamePlayer;\n  onSubmitData: GenericFunction;\n} & AnnouncementProps;\n\nexport const StepSeeding = ({ announcement, user, onSubmitData }: StepSeedingProps) => {\n  const { step: currentStep, goToNextStep } = useStep(0);\n\n  const [data, setData] = useState<PlainObject>({});\n  const { translate } = useLanguage();\n\n  const updateData = (objValue: PlainObject, next = false) => {\n    setData((v) => ({ ...v, ...objValue }));\n    if (next) {\n      goToNextStep();\n    }\n  };\n\n  const seeds = user.seeds ?? [];\n  const items = buildSeedingSteps(seeds, translate);\n  const currentSeed: SeedEntry = seeds[currentStep];\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title size=\"x-small\">\n        <Translate pt=\"Termine todas suas obrigações\" en=\"Finish all your chores\" />\n      </Title>\n      <div className=\"full-width container center\">\n        <Steps current={currentStep} items={items} />\n        {/* DEV only */}\n        {Boolean(currentSeed?.type) && <DevMock seeds={seeds} onSubmitData={onSubmitData} />}\n\n        {currentSeed?.type === 'arte-ruim' && <SeedArteRuim seed={currentSeed} updateData={updateData} />}\n\n        {currentSeed?.type === 'caminhos-magicos' && (\n          <SeedCaminhosMagicos seed={currentSeed} updateData={updateData} user={user} />\n        )}\n\n        {currentSeed?.type === 'onda-telepatica' && (\n          <SeedOndaTelepatica seed={currentSeed} updateData={updateData} />\n        )}\n\n        {currentSeed?.type === 'polemica-da-vez' && (\n          <SeedPolemicaDaVez seed={currentSeed} updateData={updateData} />\n        )}\n\n        {currentSeed?.type === 'retrato-falado' && (\n          <SeedRetratoFalado seed={currentSeed} updateData={updateData} />\n        )}\n\n        {currentSeed?.type === 'fileira-de-fatos' && (\n          <SeedFileiraDeFatos seed={currentSeed} updateData={updateData} />\n        )}\n\n        {currentSeed?.type === 'clubber' && (\n          <SeedClubber\n            seed={currentSeed}\n            updateData={updateData}\n            user={user}\n            onSubmitData={onSubmitData}\n            data={data}\n          />\n        )}\n      </div>\n    </Step>\n  );\n};\n\ntype DevMockProps = {\n  onSubmitData: GenericFunction;\n  seeds: SeedEntry[];\n};\n\nfunction DevMock({ onSubmitData, seeds }: DevMockProps) {\n  // DEV\n  useMock(() => {\n    onSubmitData({ data: mockSeeding(seeds) });\n  });\n\n  return <></>;\n}\n","// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitSeedAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { ExperimentIcon } from 'icons/ExperimentIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\nimport { StepSeeding } from './StepSeeding';\n\nexport function PhaseSeeding({ players, state, info }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, setStep } = useStep();\n\n  const onSubmitData = useOnSubmitSeedAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<ExperimentIcon />}\n      title={\n        <Translate pt=\"Seus amigos te chamaram para a balada!\" en=\"Your friend invited to to the club!\" />\n      }\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <Instruction>\n        <Translate\n          pt=\"Mas antes de ir, você tem que fazer suas obrigações...\"\n          en=\"But before that, you need to finish your chores...\"\n        />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.MEGAMIX.SEEDING}>\n      <StepSwitcher step={step} conditions={[!user.isReady]} players={players}>\n        {/* Step 0 */}\n        <StepSeeding players={players} announcement={announcement} onSubmitData={onSubmitData} user={user} />\n\n        {/* Step 1 */}\n        <></>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","import { ReactNode } from 'react';\n// AntDesign Resources\nimport { Space } from 'antd';\n// Components\nimport { PlayersHighlight } from 'components/metrics/PlayersHighlight';\n\nexport function WinningCount({ children }: { children: ReactNode }) {\n  return (\n    <Space className=\"space-container\">\n      <PlayersHighlight>{children}</PlayersHighlight>\n    </Space>\n  );\n}\n","// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { CanvasSVG } from 'components/canvas';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { WinningCount } from './WinningCount';\n\nexport function ResultArteRuim({ task, winningValues, winningTeam }: ResultComponentProps) {\n  const width = useCardWidth(winningValues.length + 1, 9, 80, 200, 0, 'results-values');\n\n  if (task.variant === 'drawings') {\n    const winningArtworks: PlainObject[] = task.data.options.filter((option: PlainObject) => {\n      return winningValues.includes(option.playerId);\n    });\n\n    return (\n      <>\n        <WinningCount>{winningTeam.length}</WinningCount>\n        <Instruction>\n          <Translate pt=\"A arte mais votada foi\" en=\"The most popular art was\" />:\n        </Instruction>\n        <div className=\"task-result-values__cards\">\n          {winningArtworks.map((value) => (\n            <div key={value.playerId} className=\"task-result-values__text-value\">\n              <CanvasSVG drawing={value.drawing} width={width} className=\"a-drawing\" />\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  const winningCards: PlainObject[] = task.data.cards.filter((option: PlainObject) => {\n    return winningValues.includes(option.id);\n  });\n\n  return (\n    <>\n      <WinningCount>{winningTeam.length}</WinningCount>\n      <Instruction>\n        <Translate pt=\"O mais votado foi\" en=\"The most popular was\" />:\n      </Instruction>\n      <div className=\"task-result-values__cards\">\n        {winningCards.map((value) => (\n          <div key={value.id} className=\"task-result-values__text-value\">\n            {value.text}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","import { Fragment } from 'react';\n// AntDesign Resources\nimport { RightSquareOutlined } from '@ant-design/icons';\n// Utils\nimport { LETTERS } from 'utils/constants';\n// Components\nimport { IconAvatar } from 'components/avatars/IconAvatar';\nimport { MapIcon } from 'icons/MapIcon';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { WinningCount } from './WinningCount';\n\nexport function ResultCaminhosMagicos({ task, winningValues, winningTeam }: ResultComponentProps) {\n  return (\n    <>\n      <WinningCount>{winningTeam.length}</WinningCount>\n      <Instruction>\n        <Translate pt=\"O caminho mais votado foi\" en=\"The most popular path was\" />:\n      </Instruction>\n      <div className=\"task-result-values__cards\">\n        {winningValues.map((value) => {\n          const index = Number(value);\n          const entry = task.data?.options?.[index] ?? {};\n          return (\n            <div key={index} className=\"cm-clues__clue\">\n              {LETTERS[Number(value)]}\n              <IconAvatar icon={<MapIcon />} size={48} />\n              {Object.values<PlainObject>(entry).map((option, index, arr) => {\n                return (\n                  <Fragment key={`${option.playerId}-${index}`}>\n                    <span className=\"cm-clues__clue-text\">{option.text}</span>\n                    {arr.length - 1 > index && <RightSquareOutlined />}\n                  </Fragment>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n}\n","// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { WinningCount } from './WinningCount';\n\nexport function ResultCruzaPalavras({ task, winningValues, winningTeam }: ResultComponentProps) {\n  const cheatSheet: PlainObject = {\n    0: [task.data.cards[0].text, task.data.cards[2].text],\n    1: [task.data.cards[0].text, task.data.cards[3].text],\n    2: [task.data.cards[1].text, task.data.cards[2].text],\n    3: [task.data.cards[1].text, task.data.cards[3].text],\n  };\n\n  return (\n    <>\n      <WinningCount>{winningTeam.length}</WinningCount>\n      <Instruction>\n        <Translate pt=\"O mais votado foi\" en=\"The most popular was\" />:\n      </Instruction>\n      <div className=\"task-result-values__cards\">\n        {winningValues.map((value) => (\n          <div key={value} className=\"task-result-values__text-value\">\n            {cheatSheet[value][0]} {'+'} {cheatSheet[value][1]}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { Candidate } from './TaskNamoroOuAmizade';\nimport { WinningCount } from './WinningCount';\n\nexport function ResultNamoroOuAmizade({ task, winningValues, winningTeam }: ResultComponentProps) {\n  return (\n    <>\n      <WinningCount>{winningTeam.length}</WinningCount>\n      <Instruction>\n        <Translate pt=\"O melhor partido foi\" en=\"The best match was\" />:{' '}\n      </Instruction>\n      <div className=\"task-result-values__cards\">\n        {winningValues.map((value) => {\n          const index = task.data.heads.findIndex((head: PlainObject) => head.id === value);\n          return (\n            <Candidate\n              key={value}\n              head={task.data.heads[index]}\n              body={task.data.bodies[index]}\n              interest={task.data.interests[index]}\n              need={task.data.needs[index]}\n              funFact={task.data.funFacts[index]}\n            />\n          );\n        })}\n      </div>\n    </>\n  );\n}\n","// Utils\nimport { LETTERS } from 'utils/constants';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { HouseCard } from 'games/na-rua-do-medo/components/HouseCard';\nimport { WinningCount } from './WinningCount';\n\nexport function ResultNaRuaDoMedo({ task, winningValues, winningTeam }: ResultComponentProps) {\n  if (task.variant === 'house') {\n    const winningCards: NCard[] = task.data.options.filter((option: PlainObject) => {\n      return winningValues.includes(option.id);\n    });\n\n    return (\n      <>\n        <WinningCount>{winningTeam.length}</WinningCount>\n        <Instruction>\n          <Translate pt=\"A escolha mais popular foi\" en=\"The most popular choice was\" />:\n        </Instruction>\n        <div className=\"task-result-values__cards\">\n          {winningCards.map((card) => (\n            <div key={card.id} className=\"task-result-values__text-value\">\n              <HouseCard card={card} candyLeftover={0} preview={false} />\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <WinningCount>{winningTeam.length}</WinningCount>\n      <Instruction>\n        <Translate pt=\"A rua mais votada foi\" en=\"The most voted street was\" />:\n      </Instruction>\n      <div className=\"task-result-values__cards\">\n        {winningValues.map((value) => (\n          <div key={value} className=\"task-result-values__text-value\">\n            {LETTERS[Number(value)]}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","// AntDesign Resources\nimport { Badge } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { CanvasSVG } from 'components/canvas';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { WinningCount } from './WinningCount';\n\nexport function ResultRetratoFalado({ task, winningValues, winningTeam }: ResultComponentProps) {\n  const width = useCardWidth(winningValues.length + 1, 9, 80, 200, 0, 'results-values');\n\n  const winningArtworks: PlainObject[] = task.data.options.filter((option: PlainObject) => {\n    return winningValues.includes(option.playerId);\n  });\n\n  return (\n    <>\n      <WinningCount>{winningTeam.length}</WinningCount>\n      <Instruction>\n        <Translate pt=\"O monstro escolhido foi\" en=\"The best monster was\" />:\n      </Instruction>\n      <div className=\"task-result-values__cards\">\n        {winningArtworks.map((value) => (\n          <Badge key={value.playerId} count={winningTeam.length} color=\"#faad14\">\n            <div className=\"task-result-values__text-value\">\n              <CanvasSVG drawing={value.drawing} width={width} className=\"a-drawing\" />\n            </div>\n          </Badge>\n        ))}\n      </div>\n    </>\n  );\n}\n","// Utils\nimport { getMovieTitles } from '../utils/helpers';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { WinningCount } from './WinningCount';\n\nexport function ResultVamosAoCinema({ task, winningValues, winningTeam }: ResultComponentProps) {\n  const movies: StringDictionary = getMovieTitles(task.data.movies);\n\n  return (\n    <>\n      <WinningCount>{winningTeam.length}</WinningCount>\n      <Instruction>\n        <Translate pt=\"A filme mais votado foi\" en=\"The most popular movie was\" />:\n      </Instruction>\n      <div className=\"task-result-values__cards\">\n        {winningValues.map((value) => {\n          return (\n            <div key={`winning-${value}`} className=\"task-result-values__text-value\">\n              {movies[value]}\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n}\n","// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { AvatarName } from 'components/avatars';\nimport { ImageBlurButtonContainer, ImageCard } from 'components/cards';\nimport { TDIcon } from 'icons/TDIcon';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { DoorFrame } from 'games/porta-dos-desesperados/components/DoorFrame';\nimport { ResultArteRuim } from './ResultArteRuim';\nimport { ResultCaminhosMagicos } from './ResultCaminhosMagicos';\nimport { ResultCruzaPalavras } from './ResultCruzaPalavras';\nimport { ResultNamoroOuAmizade } from './ResultNamoroOuAmizade';\nimport { ResultNaRuaDoMedo } from './ResultNaRuaDoMedo';\nimport { ResultRetratoFalado } from './ResultRetratoFalado';\nimport { ResultVamosAoCinema } from './ResultVamosNoCinema';\nimport { SplatterSVG } from './TaskPalhetaDeFores';\nimport { ContenderCard } from './TaskSuperCampeonato';\nimport { WinningCount } from './WinningCount';\n\nexport const ResultValueDelegator = (props: Omit<ResultComponentProps, 'playersList'>) => {\n  const width = useCardWidth(props.winningValues.length + 1, 9, 80, 200, 0, 'results-values');\n\n  switch (props.task.game) {\n    case 'arte-ruim':\n      return <ResultArteRuim {...props} />;\n    case 'caminhos-magicos':\n      return <ResultCaminhosMagicos {...props} />;\n    case 'contadores-historias':\n      return (\n        <>\n          <WinningCount>{props.winningTeam.length}</WinningCount>\n          <Instruction>\n            <Translate pt=\"A história mais popular foi\" en=\"The most popular story was\" />:\n          </Instruction>\n          <div className=\"task-result-values__cards\">\n            {props.winningValues.map((value) => (\n              <div key={value} className=\"task-result-values__text-value\">\n                {value}\n              </div>\n            ))}\n          </div>\n        </>\n      );\n    case 'crimes-hediondos':\n      return (\n        <>\n          <WinningCount>{props.winningTeam.length}</WinningCount>\n          <Instruction>\n            <Translate pt=\"O item mais votado foi\" en=\"The most voted item was\" />:\n          </Instruction>\n          <div className=\"task-result-values__cards\">\n            {props.winningValues.map((cardId) => (\n              <ImageBlurButtonContainer cardId={cardId} key={`table-focus-${cardId}`}>\n                <ImageCard imageId={cardId} cardWidth={width} className=\"d-table__image-card\" />\n              </ImageBlurButtonContainer>\n            ))}\n          </div>\n        </>\n      );\n    case 'cruza-palavras':\n      return <ResultCruzaPalavras {...props} />;\n    case 'detetives-imaginativos':\n      return (\n        <>\n          <WinningCount>{props.winningTeam.length}</WinningCount>\n          <Instruction>\n            <Translate pt=\"O impostor mais votado foi\" en=\"The most voted impostor was\" />:\n          </Instruction>\n          <div className=\"task-result-values__cards\">\n            {props.winningValues.map((cardId) => (\n              <ImageBlurButtonContainer cardId={cardId} key={`table-focus-${cardId}`}>\n                <ImageCard imageId={cardId} cardWidth={width} className=\"d-table__image-card\" />\n              </ImageBlurButtonContainer>\n            ))}\n          </div>\n        </>\n      );\n    case 'dilema-dos-esquiadores':\n      return (\n        <>\n          <WinningCount>{props.winningTeam.length}</WinningCount>\n          <Instruction>\n            <Translate pt=\"O lado mais popular foi\" en=\"The most popular side was\" />:\n          </Instruction>\n          <div className=\"task-result-values__cards\">\n            {props.winningValues.map((value) => (\n              <div key={value} className=\"task-result-values__text-value\">\n                {value}\n              </div>\n            ))}\n          </div>\n        </>\n      );\n    case 'espiao-entre-nos':\n      return (\n        <>\n          <WinningCount>{props.winningTeam.length}</WinningCount>\n          <Instruction>\n            <Translate pt=\"Respostas mais dadas\" en=\"Best answers\" />:\n          </Instruction>\n          <div className=\"task-result-values__cards\">\n            {props.winningValues.map((value) => (\n              <div key={value} className=\"task-result-values__text-value\">\n                {value}\n              </div>\n            ))}\n          </div>\n        </>\n      );\n    case 'fileira-de-fatos':\n      return (\n        <>\n          <WinningCount>{props.winningTeam.length}</WinningCount>\n          <Instruction>\n            <Translate pt=\"A melhor resposta foi\" en=\"The best answer was\" />:\n          </Instruction>\n          <div className=\"task-result-values__cards\">\n            {props.winningValues.map((value) => (\n              <div key={value} className=\"task-result-values__text-value\">\n                <Translate pt={value === 'before' ? 'Antes' : 'Depois'} en={value} />\n              </div>\n            ))}\n          </div>\n        </>\n      );\n    case 'galeria-de-sonhos':\n      return (\n        <>\n          <WinningCount>{props.winningTeam.length}</WinningCount>\n          <Instruction>\n            <Translate pt=\"A sonho mais visitado foi\" en=\"The most visited dream was\" />:\n          </Instruction>\n          <div className=\"task-result-values__cards\">\n            {props.winningValues.map((value) => (\n              <div key={value} className=\"task-result-values__text-value\">\n                <ImageBlurButtonContainer cardId={value}>\n                  <ImageCard\n                    key={`table-focus-${value}`}\n                    imageId={value}\n                    cardWidth={width}\n                    className=\"d-table__image-card\"\n                  />\n                </ImageBlurButtonContainer>\n              </div>\n            ))}\n          </div>\n        </>\n      );\n    case 'mente-coletiva':\n      return (\n        <>\n          <WinningCount>{props.winningTeam.length}</WinningCount>\n          <Instruction>\n            <Translate pt=\"A resposta mais comum foi\" en=\"The most common answer was\" />:\n          </Instruction>\n          <div className=\"task-result-values__cards\">\n            {props.winningValues.map((value) => (\n              <div key={value} className=\"task-result-values__text-value\">\n                {value}\n              </div>\n            ))}\n          </div>\n        </>\n      );\n\n    case 'namoro-ou-amizade':\n      return <ResultNamoroOuAmizade {...props} />;\n    case 'na-rua-do-medo':\n      return <ResultNaRuaDoMedo {...props} />;\n    case 'onda-telepatica':\n      return (\n        <>\n          <WinningCount>{props.winningTeam.length}</WinningCount>\n          <Instruction>\n            <Translate pt=\"A mais votado foi\" en=\"The most voted was\" />:\n          </Instruction>\n          <div className=\"task-result-values__cards\">\n            {props.winningValues.map((value) => (\n              <div key={value} className=\"task-result-values__text-value\">\n                {value === 'center' && <Translate pt=\"Centro\" en=\"Center\" />}\n                {value === 'left' && <Translate pt=\"Esquerda\" en=\"Left\" />}\n                {value === 'right' && <Translate pt=\"Direita\" en=\"Right\" />}\n              </div>\n            ))}\n          </div>\n        </>\n      );\n    case 'palheta-de-cores':\n      return (\n        <>\n          <WinningCount>{props.winningTeam.length}</WinningCount>\n          <Instruction>\n            <Translate pt=\"A amostra mais selecionada foi\" en=\"The most selected swatch was\" />:\n          </Instruction>\n          <div className=\"task-result-values__cards\">\n            {props.winningValues.map((value) => (\n              <div key={value} className=\"task-result-values__text-value\">\n                <SplatterSVG color={value} style={{ color: value }} width={48} />\n              </div>\n            ))}\n          </div>\n        </>\n      );\n    case 'polemica-da-vez':\n      return (\n        <>\n          <WinningCount>{props.winningTeam.length}</WinningCount>\n          <Instruction>\n            <Translate pt=\"A quantidade de curtidas foi\" en=\"The number of likes was\" />:\n          </Instruction>\n          <div className=\"task-result-values__cards\">\n            {props.winningValues.map((value) => (\n              <div key={value} className=\"task-result-values__text-value\">\n                {value}\n              </div>\n            ))}\n          </div>\n        </>\n      );\n\n    case 'porta-dos-desesperados':\n      return (\n        <>\n          <WinningCount>{props.winningTeam.length}</WinningCount>\n          <Instruction>\n            <Translate pt=\"A saída era na porta\" en=\"The Exit was on this door\" />:\n          </Instruction>\n          <div className=\"task-result-values__cards\">\n            {props.winningValues.map((cardId) => (\n              <ImageBlurButtonContainer cardId={cardId} key={cardId}>\n                <DoorFrame width={width}>\n                  <ImageCard imageId={cardId} cardWidth={150} />\n                </DoorFrame>\n              </ImageBlurButtonContainer>\n            ))}\n          </div>\n        </>\n      );\n    case 'quem-nao-mata':\n      return (\n        <>\n          <WinningCount>{props.winningTeam.length}</WinningCount>\n          <Instruction>\n            <Translate pt=\"O mais morto foi\" en=\"The most killed was\" />:\n          </Instruction>\n          <div className=\"task-result-values__cards\">\n            {props.winningValues.map((value) => (\n              <div key={value} className=\"task-result-values__text-value\">\n                <AvatarName player={props.players[value]} />\n              </div>\n            ))}\n          </div>\n        </>\n      );\n    case 'retrato-falado':\n      return <ResultRetratoFalado {...props} />;\n    case 'super-campeonato':\n      return (\n        <>\n          <WinningCount>{props.winningTeam.length}</WinningCount>\n          <Instruction>\n            <Translate pt=\"O campeão é\" en=\"And the champion is\" />:\n          </Instruction>\n          {props.winningValues.map((cardId) => (\n            <ImageBlurButtonContainer cardId={cardId} key={cardId}>\n              <ContenderCard\n                size={width}\n                overlayColor={'yellow'}\n                contender={{\n                  id: cardId,\n                  name: { pt: '', en: '' },\n                }}\n              />\n            </ImageBlurButtonContainer>\n          ))}\n        </>\n      );\n    case 'testemunha-ocular':\n      return (\n        <>\n          <WinningCount>{props.winningTeam.length}</WinningCount>\n          <Instruction>\n            <Translate pt=\"O criminoso mais votado foi\" en=\"The perpetrator with most votes was\" />:\n          </Instruction>\n          <div className=\"task-result-values__cards\">\n            {props.winningValues.map((value) => (\n              <div key={value} className=\"task-result-values__text-value\">\n                <ImageCard\n                  key={`table-focus-${value}`}\n                  imageId={value}\n                  cardWidth={width}\n                  className=\"d-table__image-card\"\n                />\n              </div>\n            ))}\n          </div>\n        </>\n      );\n    case 'ue-so-isso':\n      return (\n        <>\n          <WinningCount>{props.winningTeam.length}</WinningCount>\n          <Instruction>\n            <Translate pt=\"A dica eliminada foi\" en=\"The eliminated clue was\" />:\n          </Instruction>\n          <div className=\"task-result-values__cards\">\n            {props.winningValues.map((value) => (\n              <div key={value} className=\"task-result-values__text-value\">\n                {value}\n              </div>\n            ))}\n          </div>\n        </>\n      );\n    case 'vamos-ao-cinema':\n      return <ResultVamosAoCinema {...props} />;\n\n    default:\n      return <TDIcon />;\n  }\n};\n","import { has } from 'lodash';\nimport { ReactNode } from 'react';\n// AntDesign Resources\nimport { Space } from 'antd';\n\ntype SpacePlayerCheckWrapperProps = {\n  playersList: GamePlayer[];\n  paths: string[];\n  children: ReactNode;\n};\nexport function SpacePlayerCheckWrapper({ playersList, paths, children }: SpacePlayerCheckWrapperProps) {\n  const okToProceed = playersList.every((player) => {\n    return paths.every((path) => {\n      return has(player, path);\n    });\n  });\n\n  if (okToProceed) {\n    return (\n      <Space className=\"space-container\" align=\"center\" wrap>\n        {children}\n      </Space>\n    );\n  }\n\n  return <></>;\n}\n","// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { CanvasSVG } from 'components/canvas';\nimport { SpacePlayerCheckWrapper } from './SpacePlayerCheckWrapper';\n\nexport function VoteArteRuim({ task, players, playersList }: VoteComponentProps) {\n  const width = useCardWidth(playersList.length + 1, 9, 80, 200, 0, 'results-values');\n\n  if (task.variant === 'drawings') {\n    return (\n      <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n        {playersList.map((player) => {\n          const drawing = task.data.options.find(\n            (entry: PlainObject) => entry.playerId === player.data.value\n          );\n          return (\n            <div key={`vote-${player.id}`} className=\"player-vote\">\n              <Avatar id={player.avatarId} />\n              <div>{player.name}</div>\n              {Boolean(drawing) && (\n                <CanvasSVG drawing={drawing.drawing} width={width} className=\"a-drawing\" />\n              )}\n            </div>\n          );\n        })}\n      </SpacePlayerCheckWrapper>\n    );\n  }\n\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => {\n        const card = task.data.cards.find((entry: PlainObject) => entry.id === player.data.value);\n        return (\n          <div key={`vote-${player.id}`} className=\"player-vote\">\n            <Avatar id={player.avatarId} />\n            <div className=\"player-vote__name\">{player.name}</div>\n            <div className=\"player-vote__value\">{Boolean(card) && card.text}</div>\n          </div>\n        );\n      })}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Components\nimport { Avatar } from 'components/avatars';\nimport { SpacePlayerCheckWrapper } from './SpacePlayerCheckWrapper';\n\nexport function VoteCruzaPalavras({ task, players, playersList }: VoteComponentProps) {\n  const cheatSheet: PlainObject = {\n    0: [task.data.cards[0].text, task.data.cards[2].text],\n    1: [task.data.cards[0].text, task.data.cards[3].text],\n    2: [task.data.cards[1].text, task.data.cards[2].text],\n    3: [task.data.cards[1].text, task.data.cards[3].text],\n  };\n\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div>{player.name}</div>\n          <div key={player.data.value} className=\"task-result-values__text-value\">\n            {cheatSheet[player.data.value][0]} {'+'} {cheatSheet[player.data.value][1]}\n          </div>\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Components\nimport { Avatar } from 'components/avatars';\nimport { SpacePlayerCheckWrapper } from './SpacePlayerCheckWrapper';\nimport { Candidate } from './TaskNamoroOuAmizade';\n\nexport function VoteNamoroOuAmizade({ task, players, playersList }: VoteComponentProps) {\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => {\n        const index = task.data.heads.findIndex((head: PlainObject) => head.id === player.data.value);\n        return (\n          <div key={`vote-${player.id}`} className=\"player-vote\">\n            <Avatar id={player.avatarId} />\n            <div>{player.name}</div>\n            {index > -1 && (\n              <Candidate\n                key={`date-${player.id}`}\n                head={task.data.heads[index]}\n                body={task.data.bodies[index]}\n                interest={task.data.interests[index]}\n                need={task.data.needs[index]}\n                funFact={task.data.funFacts[index]}\n              />\n            )}\n          </div>\n        );\n      })}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Utils\nimport { LETTERS } from 'utils/constants';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { HouseCard } from 'games/na-rua-do-medo/components/HouseCard';\nimport { SpacePlayerCheckWrapper } from './SpacePlayerCheckWrapper';\n\nexport function VoteNaRuaDoMedo({ task, players, playersList }: VoteComponentProps) {\n  if (task.variant === 'house') {\n    return (\n      <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n        {playersList.map((player) => {\n          const house = task.data.options.find((entry: PlainObject) => entry.id === player.data.value);\n          return (\n            <div key={`vote-${player.id}`} className=\"player-vote\">\n              <Avatar id={player.avatarId} />\n              <div>{player.name}</div>\n              <HouseCard card={house} candyLeftover={0} preview={false} />\n            </div>\n          );\n        })}\n      </SpacePlayerCheckWrapper>\n    );\n  }\n\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => {\n        return (\n          <div key={`vote-${player.id}`} className=\"player-vote\">\n            <Avatar id={player.avatarId} />\n            <div className=\"player-vote__name\">{player.name}</div>\n            <div className=\"player-vote__value\">{LETTERS[player.data.value]}</div>\n          </div>\n        );\n      })}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { CanvasSVG } from 'components/canvas';\nimport { SpacePlayerCheckWrapper } from './SpacePlayerCheckWrapper';\n\nexport function VoteRetratoFalado({ task, players, playersList }: VoteComponentProps) {\n  const width = useCardWidth(playersList.length + 1, 9, 80, 200, 0, 'results-values');\n\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => {\n        const drawing = task.data.options.find((entry: PlainObject) => entry.playerId === player.data.value);\n        return (\n          <div key={`vote-${player.id}`} className=\"player-vote\">\n            <Avatar id={player.avatarId} />\n            <div>{player.name}</div>\n            {Boolean(drawing) && <CanvasSVG drawing={drawing.drawing} width={width} className=\"a-drawing\" />}\n          </div>\n        );\n      })}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Utils\nimport { getMovieTitles } from '../utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { SpacePlayerCheckWrapper } from './SpacePlayerCheckWrapper';\n\nexport function VoteVamosAoCinema({ task, playersList }: VoteComponentProps) {\n  const movies: StringDictionary = getMovieTitles(task.data.movies);\n\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => {\n        return (\n          <div key={`vote-${player.id}`} className=\"player-vote\">\n            <Avatar id={player.avatarId} />\n            <div>{player.name}</div>\n            <div className=\"player-vote__value\">{movies[player.data.value]}</div>\n          </div>\n        );\n      })}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","import { has, orderBy } from 'lodash';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { ImageBlurButtonContainer, ImageCard } from 'components/cards';\nimport { TDIcon } from 'icons/TDIcon';\nimport { Translate } from 'components/language';\nimport { SpacePlayerCheckWrapper } from './SpacePlayerCheckWrapper';\nimport { SplatterSVG } from './TaskPalhetaDeFores';\nimport { ContenderCard } from './TaskSuperCampeonato';\nimport { VoteArteRuim } from './VoteArteRuim';\nimport { VoteCruzaPalavras } from './VoteCruzaPalavras';\nimport { VoteNamoroOuAmizade } from './VoteNamoroOuAmizade';\nimport { VoteNaRuaDoMedo } from './VoteNaRuaDoMedo';\nimport { VoteRetratoFalado } from './VoteRetratoFalado';\nimport { VoteVamosAoCinema } from './VoteVamosAoCinema';\n\nexport const VotesDelegator = (props: Omit<VoteComponentProps, 'playersList'>) => {\n  const playersList = orderBy(Object.values(props.players), ['data.value', 'name'], ['asc', 'asc']);\n\n  const width = useCardWidth(playersList.length + 3, 9, 50, 120, 8);\n\n  if (!playersList.every((player) => has(player, 'data.value'))) {\n    return <></>;\n  }\n\n  switch (props.task.game) {\n    case 'cruza-palavras':\n      return <VoteCruzaPalavras {...props} playersList={playersList} />;\n    case 'onda-telepatica':\n      return (\n        <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n          {playersList.map((player) => (\n            <div key={`vote-${player.id}`} className=\"player-vote\">\n              <Avatar id={player.avatarId} />\n              <div className=\"player-vote__name\">{player.name}</div>\n              <div className=\"player-vote__value\">\n                {player.data?.value === 'center' && <Translate pt=\"Centro\" en=\"Center\" />}\n                {player.data?.value === 'left' && <Translate pt=\"Esquerda\" en=\"Left\" />}\n                {player.data?.value === 'right' && <Translate pt=\"Direita\" en=\"Right\" />}\n              </div>\n            </div>\n          ))}\n        </SpacePlayerCheckWrapper>\n      );\n    case 'super-campeonato':\n      return (\n        <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n          {playersList.map((player) => (\n            <div key={`vote-${player.id}`} className=\"player-vote\">\n              <Avatar id={player.avatarId} />\n              <div className=\"player-vote__name\">{player.name}</div>\n              <ImageBlurButtonContainer cardId={player.data.value}>\n                <ContenderCard\n                  size={width}\n                  overlayColor={'yellow'}\n                  contender={{\n                    id: player.data.value,\n                    name: { pt: '', en: '' },\n                  }}\n                />\n              </ImageBlurButtonContainer>\n            </div>\n          ))}\n        </SpacePlayerCheckWrapper>\n      );\n    case 'crimes-hediondos':\n    case 'detetives-imaginativos':\n    case 'galeria-de-sonhos':\n    case 'porta-dos-desesperados':\n    case 'testemunha-ocular':\n      return (\n        <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n          {playersList.map((player) => (\n            <div key={`vote-${player.id}`} className=\"player-vote\">\n              <Avatar id={player.avatarId} />\n              <div className=\"player-vote__name\">{player.name}</div>\n              <ImageBlurButtonContainer cardId={player.data.value}>\n                <ImageCard\n                  key={`table-focus-${player.data.value}`}\n                  imageId={player.data.value}\n                  cardWidth={width}\n                  className=\"d-table__image-card\"\n                />\n              </ImageBlurButtonContainer>\n            </div>\n          ))}\n        </SpacePlayerCheckWrapper>\n      );\n    case 'palheta-de-cores':\n      return (\n        <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n          {playersList.map((player) => (\n            <div key={`vote-${player.id}`} className=\"player-vote\">\n              <Avatar id={player.avatarId} />\n              <div className=\"player-vote__name\">{player.name}</div>\n              <SplatterSVG color={player.data.value} style={{ color: player.data.value }} width={48} />\n            </div>\n          ))}\n        </SpacePlayerCheckWrapper>\n      );\n    case 'fileira-de-fatos':\n      return (\n        <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n          {playersList.map((player) => (\n            <div key={`vote-${player.id}`} className=\"player-vote\">\n              <Avatar id={player.avatarId} />\n              <div className=\"player-vote__name\">{player.name}</div>\n              <div className=\"player-vote__value\">\n                <Translate pt={player.data.value === 'before' ? 'Antes' : 'Depois'} en={player.data.value} />\n              </div>\n            </div>\n          ))}\n        </SpacePlayerCheckWrapper>\n      );\n    case 'namoro-ou-amizade':\n      return <VoteNamoroOuAmizade {...props} playersList={playersList} />;\n    case 'arte-ruim':\n      return <VoteArteRuim {...props} playersList={playersList} />;\n    case 'caminhos-magicos':\n    case 'na-rua-do-medo':\n      return <VoteNaRuaDoMedo {...props} playersList={playersList} />;\n    case 'retrato-falado':\n      return <VoteRetratoFalado {...props} playersList={playersList} />;\n    case 'quem-nao-mata':\n      return (\n        <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n          {playersList.map((player) => (\n            <div key={`vote-${player.id}`} className=\"player-vote\">\n              <Avatar id={player.avatarId} />\n              <div className=\"player-vote__name\">{player.name}</div>\n              <div className=\"player-vote__value\">{props.players[player.data?.value]?.name}</div>\n            </div>\n          ))}\n        </SpacePlayerCheckWrapper>\n      );\n    case 'vamos-ao-cinema':\n      return <VoteVamosAoCinema {...props} playersList={playersList} />;\n    case 'contadores-historias':\n    case 'dilema-dos-esquiadores':\n    case 'espiao-entre-nos':\n    case 'mente-coletiva':\n    case 'polemica-da-vez':\n    case 'ue-so-isso':\n      return (\n        <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n          {playersList.map((player) => (\n            <div key={`vote-${player.id}`} className=\"player-vote\">\n              <Avatar id={player.avatarId} />\n              <div className=\"player-vote__name\">{player.name}</div>\n              <div className=\"player-vote__value\">{player.data?.value}</div>\n            </div>\n          ))}\n        </SpacePlayerCheckWrapper>\n      );\n\n    default:\n      return <TDIcon />;\n  }\n};\n","import { useMemo } from 'react';\nimport { memoize } from 'lodash';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\nimport { TrophyOutlined } from '@ant-design/icons';\n// Utils\nimport { sortPlayers } from 'utils/helpers';\n// Hooks\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useDimensions } from 'hooks/useDimensions';\n// Icons\nimport { DJIcon } from 'icons/DJIcon';\nimport { GarbageIcon } from 'icons/GarbageIcon';\nimport { VIPLineIcon } from 'icons/VIPLineIcon';\n// Components\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { TimedButton } from 'components/buttons';\nimport { ClubberAvatar } from './components/ClubberAvatar';\nimport { IconAvatar } from 'components/avatars';\nimport { ResultValueDelegator } from './components/ResultValueDelegator';\nimport { TaskTitle } from './components/TaskTitle';\nimport { VotesDelegator } from './components/VotesDelegator';\n\ntype StepResultProps = {\n  user: GamePlayer;\n  players: GamePlayers;\n  onSeeRanking: GenericFunction;\n  round: GameRound;\n  isFirstRunThrough: boolean;\n  task: Task;\n  winningValues: string[];\n  winningTeam: PlayerId[];\n  scoringType: string;\n} & AnnouncementProps;\n\nexport function StepResult({\n  user,\n  players,\n  onSeeRanking,\n  round,\n  isFirstRunThrough,\n  announcement,\n  task,\n  winningValues,\n  winningTeam,\n  scoringType,\n}: StepResultProps) {\n  useTemporarilyHidePlayersBar();\n  const [width] = useDimensions('results');\n\n  const time = useCountdown({ duration: 20 });\n\n  const playersList = useMemo(() => sortPlayers(players), [players]);\n\n  const currentIndex = time.timeLeft > 14 ? round.current - 1 : round.current;\n\n  return (\n    <Step announcement={announcement}>\n      <Title size=\"small\">\n        <Translate pt=\"Resultado\" en=\"Results\" />: <TaskTitle task={task} />\n      </Title>\n\n      <Instruction contained>\n        <IconAvatar icon={<DJIcon />} size=\"large\" />\n        {scoringType === 'NORMAL' && (\n          <Translate\n            pt={<>Jogadores que votaram com a maioria entram ou continuam na Área VIP.</>}\n            en={<>Players who voted with the majority join or stay in the VIP area.</>}\n          />\n        )}\n        {scoringType === 'TIE' && (\n          <Translate\n            pt={<>Empate entre 2 ou mais respostas. Quem já estava na Área VIP fica e ganha ponto.</>}\n            en={\n              <>\n                It's a tie for 2 or more answers. Whoever was already in the VIP Area stays there and get\n                points.\n              </>\n            }\n          />\n        )}\n        {scoringType === 'DRAW' && (\n          <Translate\n            pt={<>Cada um escolheu uma coisa diferente? Todo mundo fora da Área VIP!</>}\n            en={<>Did everybody just choose something different? Everybody out!</>}\n          />\n        )}\n      </Instruction>\n\n      <div className=\"results\" id=\"results\">\n        <div className=\"results__vip\">\n          <span className=\"results__icon\">\n            <IconAvatar icon={<VIPLineIcon />} size=\"large\" />\n          </span>\n          <span className=\"results__label\">\n            <Translate pt=\"Área VIP\" en=\"VIP Lounge\" />\n          </span>\n        </div>\n        <div className=\"results__values\" id=\"results-values\">\n          <ResultValueDelegator\n            task={task}\n            winningValues={winningValues}\n            players={players}\n            winningTeam={winningTeam}\n          />\n        </div>\n        <div className=\"results__gutter\">\n          <span className=\"results__icon\">\n            <IconAvatar icon={<GarbageIcon />} size=\"large\" />\n          </span>\n          <span className=\"results__label\">\n            <Translate pt=\"Pista (Sarjeta)\" en=\"GA (Scum)\" />\n          </span>\n        </div>\n\n        {playersList.map((player, index) => (\n          <div\n            className=\"results__player\"\n            key={`${player.id}-${player.clubberId}`}\n            style={getPosition(index, player.team[currentIndex] === 'W' ? 0 : 1, width)}\n          >\n            <ClubberAvatar\n              id={player.avatarId}\n              clubberId={player.clubberId}\n              width={45}\n              animate={player.team[currentIndex] === 'W'}\n            />\n            <span className=\"results__player-name\">{player.name}</span>\n          </div>\n        ))}\n      </div>\n\n      <Space className=\"space-container\" align=\"center\">\n        {isFirstRunThrough ? (\n          <TimedButton onClick={onSeeRanking} onExpire={onSeeRanking} duration={20} icon={<TrophyOutlined />}>\n            <Translate pt=\"Ver Ranking\" en=\"See Ranking\" />\n          </TimedButton>\n        ) : (\n          <Button onClick={onSeeRanking} icon={<TrophyOutlined />}>\n            <Translate pt=\"Ver Ranking\" en=\"See Ranking\" />\n          </Button>\n        )}\n      </Space>\n\n      <VotesDelegator task={task} winningValues={winningValues} players={players} winningTeam={winningTeam} />\n    </Step>\n  );\n}\n\nconst getPosition = memoize(\n  (index: number, side: number, width: number) => {\n    const areaSize = width / 3;\n    const buffer = side * areaSize * 2;\n\n    const getTopValue = (index: number, startAt: number, increment: number): number => {\n      const ratio = [0, 0, 0, 1, 1, 1, 1];\n      const multiplier = Math.floor(index / ratio.length);\n      const remainderPosition = index % ratio.length;\n\n      return startAt + multiplier * increment + (ratio[remainderPosition] + multiplier) * increment;\n    };\n    const top = getTopValue(index, 0, 45);\n\n    const left = [0.24, 0.48, 0.72, 0.15, 0.36, 0.6, 0.84][index % 7];\n\n    return {\n      top: `${50 + top}px`,\n      left: `${areaSize * left + buffer}px`,\n    };\n  },\n  (index, side, width) => `${index}-${side}-${width}`\n);\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Icons\nimport { BouncerIcon } from 'icons/BouncerIcon';\n// Components\nimport { VIPNextPhaseButton } from 'components/vip';\nimport { Translate } from 'components/language';\nimport { StepRankingWrapper } from 'components/ranking';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\n\ntype StepRankingProps = {\n  ranking: GameRanking;\n  players: GamePlayers;\n  goToPreviousStep: GenericFunction;\n  round: GameRound;\n};\n\nexport function StepRanking({ ranking, players, goToPreviousStep, round }: StepRankingProps) {\n  const innerContent = (\n    <>\n      <Instruction contained>\n        <Translate\n          pt=\"Somente jogadores na área VIP são ranqueados, porque você não pode ganhar se não estiver lá!\"\n          en=\"Only players in the VIP area can be ranked since you can't win if you're not there\"\n        />\n      </Instruction>\n      <Space className=\"space-container\" align=\"center\">\n        <Button onClick={goToPreviousStep}>\n          <Translate pt=\"Ver resultado novamente\" en=\"See results again\" />\n        </Button>\n      </Space>\n      <VIPNextPhaseButton round={round} />\n    </>\n  );\n\n  if (ranking.length === 0) {\n    return (\n      <Step>\n        <Title size=\"small\">\n          <Translate pt=\"Ranking\" en=\"Ranking\" />?\n        </Title>\n\n        <Space className=\"space-container\">\n          <BouncerIcon width=\"120\" />\n        </Space>\n        {innerContent}\n      </Step>\n    );\n  }\n\n  return (\n    <StepRankingWrapper\n      players={players}\n      ranking={ranking}\n      gainedPointsDescriptions={[\n        <Translate\n          pt={<>Pontos por já estar no Time Vencedor.</>}\n          en={<>Points for already being on the Winning Team.</>}\n        />,\n        <Translate\n          pt={<>Pontos por entrar no Time Vencedor.</>}\n          en={<>Points for joining the Winning Team.</>}\n        />,\n      ]}\n    >\n      {innerContent}\n    </StepRankingWrapper>\n  );\n}\n","import { useEffect, useState } from 'react';\n// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useColorizeBackground } from './utils/useColorizeBackground';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { BouncerIcon } from 'icons/BouncerIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\nimport { StepResult } from './StepResult';\nimport { StepRanking } from './StepRanking';\n\nexport function PhaseResult({ players, state, info }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, goToNextStep, goToPreviousStep } = useStep(0);\n  const [isFirstRunThrough, setIsFirstRunThrough] = useState(true);\n\n  // Changes isFirstGalleryRunThrough property which disables controls, after the first gallery run through\n  useEffect(() => {\n    if (isFirstRunThrough && step > 0) {\n      setIsFirstRunThrough(false);\n    }\n  }, [step, isFirstRunThrough]);\n\n  // Dynamic background\n  useColorizeBackground(user, state?.round?.current);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<BouncerIcon />}\n      title={<Translate pt=\"Resultado\" en=\"Results\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n      duration={4}\n    >\n      <Instruction>\n        <Translate pt=\"Quem vai pra área VIP?\" en=\"So who goes to the VIP area?\" />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.MEGAMIX.RESULT}>\n      <StepSwitcher step={step} conditions={[!user.isReady]} players={players}>\n        {/* Step 0 */}\n        <StepResult\n          players={players}\n          announcement={announcement}\n          onSeeRanking={goToNextStep}\n          user={user}\n          round={state.round}\n          isFirstRunThrough={isFirstRunThrough}\n          task={state.task}\n          winningValues={state.winningValues}\n          winningTeam={state.winningTeam}\n          scoringType={state.scoringType}\n        />\n\n        {/* Step 1 */}\n        <StepRanking\n          ranking={state.ranking}\n          players={players}\n          goToPreviousStep={goToPreviousStep}\n          round={state.round}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","import { isEqual } from 'lodash';\n// Utils\nimport { AVATARS } from 'utils/avatars';\n// Icons\nimport { CrownIcon } from 'icons/CrownIcon';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { GameOverWrapper } from 'components/game-over';\nimport { DualTranslate, Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\n\nexport function PhaseGameOver({ state, info, players }: PhaseProps) {\n  return (\n    <GameOverWrapper info={info} state={state} players={players} announcementIcon={<CrownIcon />}>\n      {!isEqual(state.winners, state.fairWinners) && (\n        <>\n          <Title size=\"xx-small\">\n            <Translate\n              pt=\"Se a vida fosse justa, quem teria ganhado, com mais pontos, seria:\"\n              en=\"If life was fair, the winner with the most points would've been:\"\n            />\n          </Title>\n          <Instruction contained>\n            <ul className=\"game-over__winners\">\n              {state.fairWinners.map((winner: GamePlayer) => {\n                return (\n                  <li className=\"game-over__winner\" key={`winner-${winner.name}`}>\n                    <Avatar className=\"game-over__avatar\" id={winner.avatarId ?? 25} />\n                    <div className=\"game-over__winner-name\">\n                      <strong>{winner.name ?? '?'}</strong>,{' '}\n                      <DualTranslate>{AVATARS[winner.avatarId].description}</DualTranslate>\n                    </div>\n                  </li>\n                );\n              })}\n            </ul>\n          </Instruction>\n        </>\n      )}\n    </GameOverWrapper>\n  );\n}\n","import { ConfigProvider } from 'antd';\n// Constants\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport { LoadingPage } from 'components/loaders';\nimport PhaseTask from './PhaseTask';\nimport { PhaseSeeding } from './PhaseSeeding';\nimport { PhaseResult } from './PhaseResult';\nimport { PhaseGameOver } from './PhaseGameOver';\n// Sass\nimport './megamix.scss';\n\nfunction getActiveComponent(phase: string) {\n  // If phase is not defined, it is likely that the game is still loading\n  if (!phase) return LoadingPage;\n\n  switch (phase) {\n    case PHASES.DEFAULT.LOBBY:\n      return PhaseLobby;\n    case PHASES.DEFAULT.RULES:\n      return PhaseRules;\n    case PHASES.DEFAULT.SETUP:\n      return PhaseSetup;\n    case PHASES.MEGAMIX.SEEDING:\n      return PhaseSeeding;\n    case PHASES.MEGAMIX.TASK:\n      return PhaseTask;\n    case PHASES.MEGAMIX.RESULT:\n      return PhaseResult;\n    case PHASES.DEFAULT.GAME_OVER:\n      return PhaseGameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionMegamix() {\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorPrimary: THEME_COLORS.PLUMP_PURPLE,\n          colorLink: THEME_COLORS.PLUMP_PURPLE,\n        },\n      }}\n    >\n      <Session gameCollection={GAME_COLLECTION.MEGAMIX} getActiveComponent={getActiveComponent} />\n    </ConfigProvider>\n  );\n}\n\nexport default SessionMegamix;\n","// Ant Design Resources\nimport { Avatar } from 'antd';\n// Icons\nimport { CandyIcon } from 'icons/CandyIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\n\ntype CandyCountProps = {\n  candyCount: number;\n  size?: 'small' | 'default' | 'large';\n};\n\nexport function CandyCount({ candyCount, size = 'small' }: CandyCountProps) {\n  return (\n    <>\n      <IconAvatar icon={<CandyIcon />} size={size} />\n      <Avatar size={size} style={{ backgroundColor: 'hotPink' }}>\n        {candyCount}\n      </Avatar>\n    </>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Tooltip } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { ImageCard } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { CandyCount } from './CandyCount';\n\ntype HouseCardProps = {\n  /**\n   * The candy, monster, jackpot card\n   */\n  card: NCard;\n  /**\n   * The quantity of candy left in the sidewalk\n   */\n  candyLeftover: number;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Unique id\n   */\n  id?: string;\n  /**\n   * If the house is the last one\n   */\n  active?: boolean;\n  /**\n   * Enables or disables preview\n   */\n  preview?: boolean;\n};\n\nexport function HouseCard({\n  card,\n  candyLeftover,\n  id,\n  className = '',\n  active = false,\n  preview,\n}: HouseCardProps) {\n  const { dualTranslate } = useLanguage();\n\n  const baseClass = 'n-house-card';\n  const cardBaseClass = 'n-house-card__card';\n\n  return (\n    <div\n      className={clsx(baseClass, `${baseClass}--${card.type}`, active && `${baseClass}--active`, className)}\n      id={id}\n    >\n      <div className=\"n-house-card__sidewalk\">\n        {card.type === 'candy' && candyLeftover > 0 && (\n          <Tooltip\n            color=\"hotPink\"\n            title={\n              <Translate\n                pt=\"Doces que não foram divididos entre os jogadores\"\n                en=\"Candy that wasn't shared between players\"\n              />\n            }\n          >\n            <CandyCount candyCount={candyLeftover} />\n          </Tooltip>\n        )}\n      </div>\n      <ImageCard imageId={card.key} cardWidth={80} className={clsx(cardBaseClass)} preview={preview} />\n\n      <h3 className={`${baseClass}__name`}>{dualTranslate(card.name)}</h3>\n\n      {active && (\n        <span\n          className={clsx(`${baseClass}__active`, getAnimationClass('heartBeat', undefined, 'slow', true))}\n        />\n      )}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { LETTERS } from 'utils/constants';\n\nexport const getColorModifier = (letter: string) => {\n  const index = LETTERS.indexOf(letter);\n  return Math.abs(index) % 4;\n};\n\nexport const getBracketClass = (\n  num: number,\n  showNeedle: boolean,\n  needle: number,\n  showTarget: boolean,\n  target: number\n): string => {\n  const baseBracketClass = 'o-dial-numbers';\n  const modifier = num % 2 === 0 ? 'even' : 'odd';\n\n  return clsx(\n    baseBracketClass,\n    `${baseBracketClass}--${modifier}`,\n    showNeedle && needle === num && `${baseBracketClass}--active`,\n    showTarget && target === num && `${baseBracketClass}--target`\n  );\n};\n\nexport const getGuessResultClass = (guess: number, target: number): string => {\n  const base = 'o-player-guess__guess';\n  if (target - guess === 0) return `${base}--blue`;\n  if (Math.abs(target - guess) === 1) return `${base}--orange`;\n  if (Math.abs(target - guess) === 2) return `${base}--yellow`;\n  return '';\n};\n\nexport const getPoints = (guess: number, target: number): number => {\n  if (target - guess === 0) return 4;\n  if (Math.abs(target - guess) === 1) return 3;\n  if (Math.abs(target - guess) === 2) return 2;\n  return 0;\n};\n\n/**\n * Counts how many difference guesses are there\n */\nexport const countDifferentGuesses = (regularPlayers: GamePlayer[]): number => {\n  const dict: Record<string, number> = {};\n\n  regularPlayers.forEach((player) => {\n    if (dict[String(player.guess)] === undefined) {\n      dict[String(player.guess)] = 0;\n    }\n    dict[String(player.guess)] += 1;\n  });\n\n  return Object.keys(dict).length;\n};\n","import { ReactNode } from 'react';\n\ntype BookProps = {\n  children?: [ReactNode] | [ReactNode, ReactNode] | [ReactNode, ReactNode, ReactNode];\n};\n\nexport function Book({ children }: BookProps) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 725.95 328.66\"\n      style={{ width: '50vw', maxWidth: '500px' }}\n    >\n      <defs>\n        <linearGradient id=\"a\" x1=\"171.8\" x2=\"354.26\" y1=\"170.82\" y2=\"170.82\" gradientUnits=\"userSpaceOnUse\">\n          <stop offset=\"0\" stopColor=\"#d9d9d9\"></stop>\n          <stop offset=\"1\" stopColor=\"#fff\"></stop>\n        </linearGradient>\n        <linearGradient\n          id=\"b\"\n          x1=\"371.69\"\n          x2=\"554.14\"\n          y1=\"171.43\"\n          y2=\"171.43\"\n          xlinkHref=\"#a\"\n        ></linearGradient>\n        <linearGradient\n          id=\"c\"\n          x1=\"554.14\"\n          x2=\"725.95\"\n          y1=\"178.59\"\n          y2=\"178.59\"\n          xlinkHref=\"#a\"\n        ></linearGradient>\n      </defs>\n      <path\n        fill=\"#6770b3\"\n        d=\"M363 40.45S313.41-5.8 263.85 25.89 158.73 44.64 158.73 44.64v284L363 314.34z\"\n      ></path>\n      <path\n        fill=\"#6770b3\"\n        d=\"M363 40.45S313.41-5.8 263.85 25.89 158.73 44.64 158.73 44.64v284L363 314.34z\"\n      ></path>\n      <path\n        fill=\"#b3b3b3\"\n        d=\"M222.05 310.18c-4.7.87-9 1.56-13 2.11l-1.9.3 147.09-10.1s-51.52-4.77-132.19 7.69z\"\n      ></path>\n      <path\n        fill=\"#ccc\"\n        d=\"M245.56 305.05a407.52 407.52 0 01-23.48 5.12c80.67-12.46 132.21-7.69 132.21-7.69s-51.24-10.58-108.73 2.57z\"\n      ></path>\n      <path\n        fill=\"#e6e6e6\"\n        d=\"M327.62 295a134.29 134.29 0 00-59.08 3.85q-12.45 3.65-23 6.24c57.49-13.15 108.7-2.56 108.7-2.56s-10.07-4.92-26.62-7.53z\"\n      ></path>\n      <path\n        fill=\"#fff\"\n        d=\"M260.85 39.84C226.27 59.2 171.8 61.07 171.8 61.07v251.75s6.95 2.31 25.52.78c2.74-.22 5.74-.53 9-1l2.77-.36q6.6-1.14 13-2.11c6.95-1.29 14.75-3 23.48-5.12q10.58-2.61 23-6.24a134.29 134.29 0 0159.05-3.77c16.55 2.64 26.64 7.52 26.64 7.52V49.84c-38.67-25.84-58.82-29.37-93.41-10z\"\n      ></path>\n      <path\n        fill=\"#6770b3\"\n        d=\"M363 40.45s47.59-38.77 99.1-18.56c54.76 21.48 105.12 22.75 105.12 22.75v284L363 314.34z\"\n      ></path>\n      <path\n        fill=\"#6770b3\"\n        d=\"M363 40.45s47.59-38.77 99.1-18.56c54.76 21.48 105.12 22.75 105.12 22.75v284L363 314.34z\"\n      ></path>\n      <path\n        fill=\"#b3b3b3\"\n        d=\"M503.9 310.18c4.7.87 9 1.56 13 2.11l1.9.3-147.09-10.1s51.52-4.77 132.19 7.69z\"\n      ></path>\n      <path\n        fill=\"#ccc\"\n        d=\"M480.39 305.05a407.52 407.52 0 0023.48 5.12c-80.67-12.46-132.21-7.69-132.21-7.69s51.24-10.58 108.73 2.57z\"\n      ></path>\n      <path\n        fill=\"#e6e6e6\"\n        d=\"M398.33 295a134.3 134.3 0 0159.08 3.85q12.45 3.65 23 6.24c-57.49-13.15-108.7-2.56-108.7-2.56s10.06-4.92 26.62-7.53z\"\n      ></path>\n      <path\n        fill=\"#fff\"\n        d=\"M465.1 37.84c37.28 13.46 89 23.23 89 23.23v251.75s-6.94 2.31-25.51.78c-2.74-.22-5.74-.53-9-1l-2.77-.36q-6.6-1.14-13-2.11a444.4 444.4 0 01-23.48-5.12q-10.57-2.61-23-6.24a134.3 134.3 0 00-59.01-3.77c-16.56 2.64-26.64 7.52-26.64 7.52V49.84c38.67-25.84 55.86-25.56 93.41-12z\"\n      ></path>\n\n      <foreignObject x=\"185\" y=\"63\" width=\"150\" height=\"225\">\n        {Boolean(children && children[0]) && children![0]}\n      </foreignObject>\n\n      <foreignObject x=\"387\" y=\"63\" width=\"150\" height=\"225\">\n        {Boolean(children && children[1]) && children![1]}\n      </foreignObject>\n\n      {Boolean(children && children[2]) && (\n        <path fill=\"#fff\" d=\"M554.14 61.53s69.5-28 171.81-12v251.06s-117-6.94-171.81 12z\"></path>\n      )}\n\n      <foreignObject x=\"566\" y=\"63\" width=\"150\" height=\"225\">\n        {Boolean(children && children[2]) && children![2]}\n      </foreignObject>\n    </svg>\n  );\n}\n","import { ReactNode } from 'react';\n\ntype DoorFrameProps = {\n  children?: ReactNode;\n  className?: string;\n  width?: number;\n  index?: number;\n};\n\nexport function DoorFrame({ children, width, index, className = '' }: DoorFrameProps) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 257.1 318.8\"\n      style={Boolean(width) ? { width: `${width}px` } : {}}\n      className={className}\n    >\n      <defs>\n        <linearGradient id=\"d\" x1=\"130.72\" x2=\"130.72\" y1=\"318.8\" y2=\"34.78\" gradientUnits=\"userSpaceOnUse\">\n          <stop offset=\"0.03\" stopColor=\"#fdd3b6\"></stop>\n          <stop offset=\"0.31\" stopColor=\"#fbcdaa\"></stop>\n          <stop offset=\"0.81\" stopColor=\"#f5bd89\"></stop>\n          <stop offset=\"1\" stopColor=\"#f3b67b\"></stop>\n        </linearGradient>\n        <linearGradient id=\"a\" x1=\"130.72\" x2=\"130.72\" y1=\"65.32\" y2=\"14.51\" gradientUnits=\"userSpaceOnUse\">\n          <stop offset=\"0\" stopColor=\"#fdd5b9\"></stop>\n          <stop offset=\"0.32\" stopColor=\"#fdd0b1\"></stop>\n          <stop offset=\"0.97\" stopColor=\"#fcc9a5\"></stop>\n        </linearGradient>\n        <linearGradient id=\"e\" x1=\"130.72\" x2=\"130.72\" y1=\"23.84\" y2=\"4.14\" xlinkHref=\"#a\"></linearGradient>\n        <linearGradient id=\"f\" x1=\"27.14\" x2=\"234.29\" y1=\"46.01\" y2=\"46.01\" gradientUnits=\"userSpaceOnUse\">\n          <stop offset=\"0\" stopColor=\"#a16261\"></stop>\n          <stop offset=\"0.56\" stopColor=\"#b37572\"></stop>\n          <stop offset=\"1\" stopColor=\"#c48783\"></stop>\n        </linearGradient>\n        <linearGradient id=\"g\" x1=\"128.55\" x2=\"128.55\" y1=\"6.73\" y2=\"0\" xlinkHref=\"#a\"></linearGradient>\n        <linearGradient id=\"h\" x1=\"130.72\" x2=\"130.72\" y1=\"313.13\" y2=\"78.41\" gradientUnits=\"userSpaceOnUse\">\n          <stop offset=\"0\" stopColor=\"#c48783\"></stop>\n          <stop offset=\"0.44\" stopColor=\"#b37572\"></stop>\n          <stop offset=\"1\" stopColor=\"#a16261\"></stop>\n        </linearGradient>\n        <linearGradient id=\"b\" x1=\"223.42\" x2=\"223.42\" y1=\"230.96\" y2=\"171.86\" gradientUnits=\"userSpaceOnUse\">\n          <stop offset=\"0\" stopColor=\"#f3b67b\"></stop>\n          <stop offset=\"0.07\" stopColor=\"#f5bb86\"></stop>\n          <stop offset=\"0.24\" stopColor=\"#f8c69b\"></stop>\n          <stop offset=\"0.42\" stopColor=\"#fbcdaa\"></stop>\n          <stop offset=\"0.64\" stopColor=\"#fdd2b3\"></stop>\n          <stop offset=\"0.97\" stopColor=\"#fdd3b6\"></stop>\n        </linearGradient>\n        <linearGradient id=\"i\" x1=\"38\" x2=\"38\" y1=\"230.96\" y2=\"171.86\" xlinkHref=\"#b\"></linearGradient>\n        <linearGradient id=\"c\" x1=\"37.84\" x2=\"226.06\" y1=\"47.43\" y2=\"47.43\" gradientUnits=\"userSpaceOnUse\">\n          <stop offset=\"0\" stopColor=\"#fcb645\"></stop>\n          <stop offset=\"1\" stopColor=\"#e3a129\"></stop>\n        </linearGradient>\n        <linearGradient id=\"j\" x1=\"38.38\" x2=\"38.38\" y1=\"198.04\" y2=\"193.37\" xlinkHref=\"#c\"></linearGradient>\n        <linearGradient\n          id=\"k\"\n          x1=\"223.04\"\n          x2=\"223.04\"\n          y1=\"198.04\"\n          y2=\"193.37\"\n          xlinkHref=\"#c\"\n        ></linearGradient>\n        <linearGradient id=\"l\" x1=\"43.98\" x2=\"217.44\" y1=\"313.74\" y2=\"313.74\" gradientUnits=\"userSpaceOnUse\">\n          <stop offset=\"0\" stopColor=\"#623c57\"></stop>\n          <stop offset=\"1\" stopColor=\"#3d1931\"></stop>\n        </linearGradient>\n      </defs>\n      <g style={{ isolation: 'isolate' }}>\n        <path\n          fill=\"url(#d)\"\n          d=\"M236.27 34.78l-.6 30.02-.22 11.41-2.95 150.6-.2 10.11-1.6 81.88H30.74L25.99 76.21l-.23-11.41-.59-30.02h211.1z\"\n        ></path>\n        <path\n          d=\"M235.67 64.8l-.22 11.41H25.99l-.23-11.41h209.91z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.7\"\n        ></path>\n        <path fill=\"url(#a)\" d=\"M16.7 14.51h228.02v50.81H16.7z\"></path>\n        <path\n          d=\"M16.7 14.51h228.02V31.1H16.7z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.55\"\n        ></path>\n        <path\n          fill=\"url(#e)\"\n          d=\"M252.77 4.14l-.09.53-1.28 6.73-2.34 12.44H12.38L10.04 11.4 8.76 4.67l-.1-.53h244.11z\"\n        ></path>\n        <path fill=\"url(#f)\" d=\"M27.14 35.51h207.15v21H27.14z\"></path>\n        <path\n          d=\"M31.78 39.01h202.51v-3.5H27.14v21h4.64v-17.5z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.85\"\n        ></path>\n        <path fill=\"#f3b67b\" d=\"M220.07 79.83l-1.84 228.64h5.06l4.16-228.64h-7.38z\"></path>\n        <path\n          d=\"M220.7 307.95l1.84-228.12h-2.47l-1.84 228.64h5.06l.02-.52h-2.61z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.5\"\n        ></path>\n        <path fill=\"#fee0cc\" d=\"M226.05 79.83l-4.15 228.25h-3.67v.39h5.06l4.16-228.64h-1.4z\"></path>\n        <path fill=\"#f3b67b\" d=\"M34.25 79.6l4.4 228.6 5.06-.23-2.08-228.65-7.38.28z\"></path>\n        <path\n          d=\"M41.11 307.64L36.72 79.55l-2.47.05 4.4 228.6 5.06-.23v-.52l-2.6.19z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.5\"\n        ></path>\n        <path fill=\"#fee0cc\" d=\"M40.23 79.35l2.08 228.26-3.67.21.01.38 5.06-.23-2.08-228.65-1.4.03z\"></path>\n        <path fill=\"#f3b67b\" d=\"M53.68 23.84h-12.3L40 7.77l-1.15-3.64h14.38l-.44 2.6z\"></path>\n        <path\n          fill=\"#f3b67b\"\n          d=\"M147.26.9l-.32 3.24-1.93 19.7h-26.86l.33-19.7.02-1.29L147.26.9z\"\n          opacity=\"0.5\"\n        ></path>\n        <path\n          d=\"M252.68 4.67l-1.28 6.73H10.04L8.76 4.67h243.92z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.55\"\n        ></path>\n        <path fill=\"url(#g)\" d=\"M0 0h257.1v6.73H0z\"></path>\n        <path\n          d=\"M188.24 0l-.5 6.74h-22.52l.24-6.74h22.78zM98.41 0l-.06 6.74h-39.4L58 0h40.41z\"\n          style={{ mixBlendMode: 'lighten' }}\n          fill=\"#fff\"\n          opacity=\"0.35\"\n        ></path>\n        <path\n          fill=\"url(#h)\"\n          d=\"M213.58 78.41l-.43 24.81-.17 9.44-3.49 200.47H51.95l-3.5-200.47-.16-9.44-.44-24.81h165.73z\"\n        ></path>\n        <path\n          d=\"M232.5 226.81l-.2 10.11h-21.48l.17-10.11h21.51z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.65\"\n        ></path>\n        <path\n          fill=\"url(#b)\"\n          d=\"M237.27 173.42l-.26 5.44-.11 2.26-.11 2.66-.45 9.59-.22 4.67-.11 2.15-1.39 29.47h-25.04l.14-29.47.02-2.15.02-2.33v-2.34l.06-9.59.02-2.66v-2.26l.03-5.44h27.4z\"\n        ></path>\n        <path\n          d=\"M237.01 178.86l-.22 4.92h-26.97l.02-4.92h27.17z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.65\"\n        ></path>\n        <path fill=\"#fddbc5\" d=\"M240.6 181.13h-31.03v-8.04h32.27l-1.24 8.04z\"></path>\n        <path\n          d=\"M50.62 236.92h-21.5l-.2-10.11h21.53l.17 10.11z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.65\"\n        ></path>\n        <path\n          fill=\"url(#i)\"\n          d=\"M51.84 229.66H26.8l-1.39-29.47-.11-2.15-.22-4.67-.45-9.59-.11-2.66-.11-2.26-.26-5.44h27.4l.03 5.44v2.27l.02 2.65.06 9.59v2.34l.01 2.33.02 2.15.15 29.47z\"\n        ></path>\n        <path\n          d=\"M24.4 178.86l.23 4.92h26.96l-.01-4.92H24.4z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.65\"\n        ></path>\n        <path fill=\"#fddbc5\" d=\"M20.81 181.13h31.03v-8.04H19.57l1.24 8.04z\"></path>\n        <path fill=\"#bb7d2a\" d=\"M36.91 42.51h190.08v9.85H36.91z\"></path>\n        <path fill=\"url(#c)\" d=\"M37.84 43.28h188.22v8.29H37.84z\"></path>\n        <path\n          d=\"M99.34 52.35H64.85l-6.77-9.84h34.47l6.79 9.84zm27.03 0H113.4l-6.79-9.84h12.99l6.77 9.84z\"\n          style={{ mixBlendMode: 'overlay' }}\n          fill=\"#fff\"\n          opacity=\"0.35\"\n        ></path>\n        <path\n          d=\"M51.69 200.19H25.41l-.11-2.15-.11-2.33h26.47l.01 2.33.02 2.15z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.65\"\n        ></path>\n        <path fill=\"url(#j)\" d=\"M51.67 198.04H25.3l-.22-4.67h26.58v2.34l.01 2.33z\"></path>\n        <path\n          d=\"M37.24 198.04h-3.48l-5.57-4.67h10.49l-1.44 4.67z\"\n          style={{ mixBlendMode: 'overlay' }}\n          fill=\"#fff\"\n          opacity=\"0.35\"\n        ></path>\n        <path\n          d=\"M236.23 195.71l-.11 2.33-.11 2.15h-26.29l.02-2.15.02-2.33h26.47z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.65\"\n        ></path>\n        <path fill=\"url(#k)\" d=\"M236.34 193.37l-.22 4.67h-26.38l.02-2.33v-2.34h26.58z\"></path>\n        <path\n          d=\"M222.26 198.04h-3.48l-5.57-4.67h10.48l-1.43 4.67z\"\n          style={{ mixBlendMode: 'overlay' }}\n          fill=\"#fff\"\n          opacity=\"0.35\"\n        ></path>\n        <path fill=\"url(#l)\" d=\"M43.98 308.69h173.47v10.11H43.98z\"></path>\n        <path\n          d=\"M75.98 308.69L74.9 318.8H56.5l-.65-10.11h20.13z\"\n          style={{ mixBlendMode: 'lighten' }}\n          fill=\"#fff\"\n          opacity=\"0.35\"\n        ></path>\n        <path\n          d=\"M138.19 308.68c-.21 3.47-.39 6.93-.56 10.11h-18.92l-1.08-10.11z\"\n          style={{ mixBlendMode: 'lighten' }}\n          fill=\"#fff\"\n          opacity=\"0.15\"\n        ></path>\n        <path\n          d=\"M199.58 308.68l-.6 10.11h-9l-1-10.11zM87.41 308.69l-.56 10.11h-5.97l-1.69-10.11h8.22z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#98616c\"\n          opacity=\"0.45\"\n        ></path>\n        <path\n          fill=\"#fff67e\"\n          stroke=\"#231f20\"\n          strokeMiterlimit=\"10\"\n          d=\"M54.95 84.1h150v225h-150z\"\n          opacity=\"0.59\"\n        ></path>\n\n        <foreignObject x=\"53\" y=\"82\" width=\"150\" height=\"225\">\n          {children}\n        </foreignObject>\n      </g>\n\n      {index === 0 && (\n        <path\n          fill=\"#3d1931\"\n          d=\"M143.46 61.65l-3.94-8.88h-18.29l-4 8.88h-3.89l15.32-33.84h3.55l15.31 33.84zm-20.74-12.29H138l-7.6-17.14z\"\n        ></path>\n      )}\n      {index === 1 && (\n        <path\n          fill=\"#3d1931\"\n          d=\"M143.12 36.45a8.12 8.12 0 01-5.32 7.82c4 1.2 7.2 3.51 7.2 8.16 0 5.81-4.85 9.22-12.2 9.22h-14.93v-33.6h14.31c6.62 0 10.94 3.26 10.94 8.4zm-3.84.52c0-3.36-2.64-5.52-7.44-5.52h-10.22V43h9.93c4.57 0 7.73-2 7.73-6zm1.88 15.22c0-3.7-3.08-5.81-8.93-5.81h-10.61v11.86h11.28c5.1 0 8.26-2.24 8.26-6.05z\"\n        ></path>\n      )}\n      {index === 2 && (\n        <path\n          fill=\"#3d1931\"\n          d=\"M132.85 62.22c-9.7 0-16.85-7.63-16.85-17.33s7.11-17.42 17-17.42a17.48 17.48 0 0113.1 5.33l-2.59 2.78c-2.83-2.69-6-4.61-10.56-4.61-7.44 0-13 6-13 13.83s5.61 13.92 13 13.92c4.61 0 7.63-1.78 10.85-4.85l2.49 2.45c-3.5 3.55-7.29 5.9-13.44 5.9z\"\n        ></path>\n      )}\n      {index === 3 && (\n        <path\n          fill=\"#3d1931\"\n          d=\"M128.1 61.65h-11.67v-33.6h11.67c10.56 0 17.86 7.24 17.86 16.75s-7.3 16.85-17.86 16.85zm0-30.1h-7.87v26.59h7.87c8.49 0 13.92-5.76 13.92-13.25s-5.43-13.34-13.92-13.34z\"\n        ></path>\n      )}\n      {index === 4 && (\n        <path\n          fill=\"#3d1931\"\n          d=\"M122.91 31.5V43h18.34v3.46h-18.34v11.73h20.74v3.46h-24.53v-33.6h24.29v3.45z\"\n        ></path>\n      )}\n      {index === 5 && (\n        <path fill=\"#3d1931\" d=\"M123.25 31.55v12h18.19V47h-18.19v14.65h-3.79v-33.6h24.14v3.5z\"></path>\n      )}\n      {index === 6 && (\n        <path\n          fill=\"#3d1931\"\n          d=\"M132 62.22c-10.56 0-17.09-7.68-17.09-17.33 0-9.26 6.77-17.42 16.85-17.42a17.72 17.72 0 0112.53 4.46l-2.45 2.88A14.32 14.32 0 00131.6 31c-7.44 0-12.77 6.29-12.77 13.83 0 8.06 5.14 14 13.3 14a15.86 15.86 0 009.7-3.36V47.1H131.6v-3.41h13.88v13.4A20.39 20.39 0 01132 62.22z\"\n        ></path>\n      )}\n    </svg>\n  );\n}\n","export function GuessIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ff7b79\"\n        d=\"M440.447 428.072c16.619-20.939 26.55-47.426 26.55-76.235 0-10.548-1.332-20.784-3.835-30.552C486.593 305.468 502 278.671 502 248.273c0-46.528-36.106-84.599-81.824-87.786 8.812-12.864 13.976-28.424 13.976-45.194 0-44.226-35.853-80.079-80.079-80.079-16.63 0-32.075 5.072-44.876 13.75C291.326 25.298 262.961 10 231.021 10c-52.976 0-96.118 42.078-97.843 94.635a90.44 90.44 0 00-20.196-2.297c-49.845 0-90.252 40.407-90.252 90.252 0 23.113 8.698 44.187 22.987 60.153C24.019 269.226 10 295.294 10 324.644c0 49.845 40.407 90.252 90.252 90.252a89.959 89.959 0 0034.438-6.82c7.846 41.85 44.552 73.528 88.68 73.528 23.152 0 44.26-8.727 60.236-23.059 17.893 10.194 38.596 16.021 60.662 16.021 13.373 0 26.243-2.147 38.293-6.101C397.207 488.77 421.051 502 448 502a80.272 80.272 0 0036.406-8.691c-24.354-12.346-41.598-36.675-43.959-65.237z\"\n      ></path>\n      <path\n        fill=\"#80b4ff\"\n        d=\"M256 321.511c-12.15 0-22-9.85-22-22v-29.93c0-20.685 13.741-39.232 33.416-45.103 17.141-5.115 28.817-21.21 28.395-39.14-.492-20.923-17.915-38.346-38.837-38.838-10.842-.264-21.061 3.765-28.795 11.319-7.739 7.559-12.001 17.677-12.001 28.491 0 12.15-9.85 22-22 22s-22-9.85-22-22c0-22.763 8.969-44.061 25.256-59.968 16.282-15.904 37.795-24.35 60.575-23.831 21.541.507 41.857 9.239 57.205 24.586 15.347 15.347 24.079 35.663 24.586 57.205.888 37.708-23.704 71.567-59.802 82.339-1.157.345-1.997 1.582-1.997 2.94v29.93c-.001 12.15-9.851 22-22.001 22z\"\n      ></path>\n      <circle cx=\"256\" cy=\"387.511\" r=\"22\" fill=\"#80b6ff\"></circle>\n      <path d=\"M448 512c-26.624 0-51.955-11.846-69.1-32.008a132.764 132.764 0 01-34.632 4.574c-20.67 0-41.073-4.833-59.431-14.027a100.05 100.05 0 01-61.467 21.065c-44.32 0-82.912-29.039-95.741-70.502a99.87 99.87 0 01-27.377 3.794c-14.572 0-28.629-3.061-41.78-9.097-5.02-2.304-7.221-8.241-4.917-13.26 2.304-5.02 8.239-7.223 13.26-4.917 10.515 4.826 21.765 7.273 33.437 7.273 10.584 0 20.886-2.04 30.619-6.061a9.997 9.997 0 0113.648 7.399c7.1 37.878 40.262 65.371 78.851 65.371a80.093 80.093 0 0053.559-20.503 10.002 10.002 0 0111.628-1.245c16.892 9.624 36.156 14.71 55.711 14.71 12.011 0 23.846-1.885 35.175-5.603a10 10 0 0111.228 3.651C403.942 481.015 425.374 492 448 492a70.69 70.69 0 0014.335-1.451c-18.115-15.394-29.869-37.631-31.854-61.653a9.998 9.998 0 012.133-7.04c15.951-20.097 24.382-44.309 24.382-70.019 0-9.505-1.185-18.949-3.522-28.07a10 10 0 014.092-10.77C479.128 298.442 492 274.247 492 248.273c0-40.797-31.854-74.976-72.519-77.811a10 10 0 01-7.555-15.627c7.998-11.676 12.226-25.349 12.226-39.542 0-38.642-31.437-70.079-70.079-70.079-14.081 0-27.659 4.159-39.265 12.027a10 10 0 01-13.592-2.251C284.425 32.753 258.84 20 231.021 20c-47.698 0-86.285 37.32-87.849 84.963a10 10 0 01-12.224 9.421 80.714 80.714 0 00-17.966-2.045c-44.251 0-80.252 36-80.252 80.251a80.105 80.105 0 0020.438 53.485 10 10 0 01-1.403 14.631C31.578 276.042 20 299.346 20 324.644c0 3.576.237 7.171.704 10.684.728 5.475-3.12 10.503-8.595 11.23-5.479.732-10.503-3.12-11.231-8.595A101.374 101.374 0 010 324.644c0-28.153 11.475-54.328 31.801-73.246a100.049 100.049 0 01-19.071-58.809c0-55.279 44.973-100.251 100.252-100.251 3.716 0 7.446.211 11.165.631 3.278-23.739 14.329-45.625 31.771-62.539C176.155 10.807 202.827 0 231.021 0c31.109 0 59.94 12.989 80.405 35.933 13.057-7.035 27.633-10.718 42.647-10.718 49.67 0 90.079 40.409 90.079 90.079 0 13.063-2.789 25.788-8.148 37.475C479.656 162.844 512 202.2 512 248.273a97.95 97.95 0 01-37.623 77.212 133.55 133.55 0 012.62 26.352c0 28.874-9.034 56.146-26.172 79.144 3.133 22.718 17.472 42.95 38.104 53.409a10 10 0 010 17.838C476.138 508.712 462.368 512 448 512z\"></path>\n      <path d=\"M256 331.511c-17.645 0-32-14.355-32-32v-29.93c0-25.072 16.677-47.56 40.557-54.686 12.832-3.829 21.573-15.887 21.257-29.322-.369-15.664-13.412-28.707-29.076-29.076-8.09-.192-15.773 2.812-21.572 8.476-5.796 5.661-8.988 13.239-8.988 21.337 0 17.645-14.355 32-32 32s-32-14.355-32-32c0-25.479 10.04-49.317 28.269-67.121 18.205-17.782 42.281-27.246 67.79-26.675 24.131.568 46.875 10.339 64.048 27.512s26.944 39.917 27.512 64.04c.951 40.387-24.216 76.83-61.796 90.458v24.985C288 317.156 273.645 331.511 256 331.511zm-.035-195.023c.417 0 .833.005 1.252.015 26.173.616 47.975 22.417 48.591 48.6.528 22.425-14.083 42.558-35.532 48.958-15.471 4.616-26.276 19.223-26.276 35.52v29.93c0 6.617 5.383 12 12 12s12-5.383 12-12v-29.93c0-5.768 3.758-10.917 9.139-12.522 31.789-9.486 53.445-39.308 52.663-72.521-.447-18.96-8.139-36.848-21.66-50.369s-31.409-21.213-50.369-21.66c-20.078-.452-39.028 6.997-53.352 20.988-14.344 14.01-22.243 32.766-22.243 52.814 0 6.617 5.383 12 12 12s12-5.383 12-12c0-13.53 5.332-26.189 15.013-35.645 9.389-9.171 21.695-14.178 34.774-14.178zM256 419.511c-17.645 0-32-14.355-32-32s14.355-32 32-32 32 14.355 32 32-14.355 32-32 32zm0-44c-6.617 0-12 5.383-12 12s5.383 12 12 12 12-5.383 12-12-5.383-12-12-12zM27.71 388.35c-2.63 0-5.21-1.07-7.07-2.93a10.093 10.093 0 01-2.93-7.07c0-2.64 1.07-5.211 2.93-7.08a10.068 10.068 0 017.07-2.92c2.63 0 5.21 1.06 7.07 2.92s2.93 4.44 2.93 7.08c0 2.63-1.07 5.21-2.93 7.07s-4.44 2.93-7.07 2.93z\"></path>\n    </svg>\n  );\n}\n","export function PlayersIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#f7d6bf\"\n        d=\"M339 173.72a83.22 83.22 0 01-9.79 39.28c-22.11 40.29-72.72 55.52-113 33.41A82.23 82.23 0 01173 173.72a28.11 28.11 0 01.49-6.39c3.93-45.7 44.22-80.09 89.92-76.16a83.13 83.13 0 0176.16 76.16 28.11 28.11 0 00-.57 6.39z\"\n      ></path>\n      <path\n        fill=\"#b24432\"\n        d=\"M382.77 374.69v46.18H129.23v-46.18a118 118 0 01117.93-117.93h17.68a117.64 117.64 0 01117.93 117.93z\"\n      ></path>\n      <path\n        fill=\"#846e00\"\n        d=\"M167.55 287.22a115.77 115.77 0 00-38.32 87.47v34.88H8.84v-30.95A105.5 105.5 0 01114.49 273c18.67-.52 36.85 4.89 53.06 14.22z\"\n      ></path>\n      <path\n        fill=\"#eabfa2\"\n        d=\"M182.79 213c-5.41 37.83-40.29 64.37-78.13 59s-64.37-40.29-59-78.12 40.29-64.37 78.12-59A70.4 70.4 0 01173 166.84c0 2-.49 4.42-.49 6.39A90.21 90.21 0 00182.79 213z\"\n      ></path>\n      <path\n        fill=\"#840062\"\n        d=\"M503.16 378.13v30.95H382.77V374.2A117 117 0 00344 286.73c50.12-29.48 115-12.77 144.46 37.35a106.45 106.45 0 0114.75 54.05z\"\n      ></path>\n      <path\n        fill=\"#eabfa2\"\n        d=\"M467.29 203.69A69.36 69.36 0 01329.21 213a84.71 84.71 0 009.79-39.28 28.11 28.11 0 00-.49-6.39 69.83 69.83 0 01128.74 36.36z\"\n      ></path>\n      <path d=\"M321.84 420.87c0 4.92-3.93 8.36-8.84 8.85h-7.87a8.85 8.85 0 010-17.69H313a8.8 8.8 0 018.84 8.84zM512 378.13v30.95a8.81 8.81 0 01-8.84 8.85H391.62v2.95c0 4.91-3.94 8.35-8.85 8.84h-32.92a8.85 8.85 0 110-17.69h24.08v-37.34a109.15 109.15 0 00-109.09-109.08h-17.69a109.15 109.15 0 00-109.08 109.08v37.83h127.76a8.85 8.85 0 010 17.69h-136.6c-4.92 0-8.35-3.93-8.85-8.84v-3.44H8.84A8.81 8.81 0 010 409.08v-30.95A113.51 113.51 0 0175.18 271a78.82 78.82 0 01-30-30.95c-2.46-4.43-.5-9.34 3.43-11.8 4.43-2.45 9.34-.49 11.8 3.44a60.54 60.54 0 00113-17.2 88.17 88.17 0 01-9.34-45.2 61.26 61.26 0 00-84.47-15.71 62.63 62.63 0 00-26.53 49.62 8.85 8.85 0 11-17.69 0c0-43.24 35.37-77.63 78.12-77.63 20.15 0 38.82 7.86 53.56 21.62a91.87 91.87 0 01175.91 0 77.84 77.84 0 01108.1 112A90.19 90.19 0 01435.84 271 113.07 113.07 0 01512 378.13zM347.88 169.79a98.26 98.26 0 01-9.33 45.2 60.43 60.43 0 1048.64-70.26 56.25 56.25 0 00-39.31 25.06zm-166.57 3.93a74.34 74.34 0 0075.18 74.19c45.7 0 71.74-36.36 74.2-69.77 2.95-44.22-34.89-82.55-81.08-78.62-39.31 3.93-68.3 36.86-68.3 74.2zm-60.93 227v-26c0-32.43 13.27-64.37 32.92-85-64.36-28.5-136.1 18.67-136.1 88.45v22.6zm90.41-147.41a97.77 97.77 0 01-24.56-20.15A78 78 0 01152.81 271c4.92 2 9.34 3.93 13.76 5.9a128.3 128.3 0 0144.22-23.58zm90.41 0a128.26 128.26 0 0144.23 23.59 81.9 81.9 0 0113.76-5.9 78.56 78.56 0 01-33.42-37.84 80.4 80.4 0 01-24.57 20.15zm193.6 124.82a96.67 96.67 0 00-96.8-96.8 99.11 99.11 0 00-39.3 8.35c18.67 20.15 32.92 51.59 32.92 85v26H494.8z\"></path>\n      <path fill=\"none\" d=\"M0 0h512v512H0z\"></path>\n    </svg>\n  );\n}\n","export function SpeechBubbleAcceptedIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#23f1a8\"\n        d=\"M252.932 7.518C115.087 9.181 5.716 121.473 7.522 259.316c.53 40.45 10.739 78.56 28.394 112.144L11.518 485.69c-1.887 8.834 5.957 16.678 14.791 14.791l114.23-24.398c33.584 17.655 71.694 27.864 112.144 28.394 137.843 1.806 250.135-107.565 251.798-245.409C506.167 119.394 392.605 5.832 252.932 7.518z\"\n      ></path>\n      <circle cx=\"256\" cy=\"290.169\" r=\"186.061\" fill=\"#26d192\"></circle>\n      <path\n        fill=\"#26d192\"\n        d=\"M504.495 255.995c0 136.564-108.744 246.767-245.295 248.482a247.716 247.716 0 01-33.52-1.823c124.788-13.532 220.756-118.467 220.756-246.659 0-127.854-96.711-233.126-220.958-246.659A252.799 252.799 0 01256 7.499c137.239 0 248.495 111.256 248.495 248.496z\"\n      ></path>\n      <circle cx=\"256\" cy=\"255.999\" r=\"186.066\" fill=\"#f5f7f8\"></circle>\n      <path\n        fill=\"#d9e7eb\"\n        d=\"M442.061 255.999c0 102.764-83.296 186.061-186.061 186.061-14.762 0-29.119-1.718-42.882-4.966 98.007-2.342 176.743-82.516 176.743-181.095S311.125 77.247 213.118 74.904c13.763-3.248 28.119-4.966 42.882-4.966 102.765 0 186.061 83.297 186.061 186.061z\"\n      ></path>\n      <path\n        fill=\"#26d192\"\n        d=\"M229.364 328.182a24.499 24.499 0 01-17.324-7.176l-30.104-30.104c-9.568-9.568-9.568-25.08 0-34.648s25.08-9.568 34.648 0l12.78 12.78 66.047-66.048c9.568-9.568 25.08-9.568 34.648 0 9.567 9.567 9.567 25.08 0 34.648l-83.371 83.372a24.499 24.499 0 01-17.324 7.176z\"\n      ></path>\n      <g>\n        <path d=\"M483.889 139.28a7.499 7.499 0 00-10.097-3.249 7.5 7.5 0 00-3.249 10.097c17.77 34.627 26.912 73.649 26.439 112.849-.78 64.621-26.529 124.899-72.504 169.731-46.016 44.871-107.019 69.09-171.697 68.27-38.366-.502-74.955-9.766-108.752-27.533a7.513 7.513 0 00-5.056-.696l-114.23 24.398c-2.382.513-3.972-.771-4.546-1.344-.574-.574-1.853-2.165-1.344-4.546l24.398-114.23a7.504 7.504 0 00-.696-5.057c-17.767-33.796-27.03-70.385-27.533-108.752-.848-64.705 23.397-125.682 68.27-171.697 44.832-45.976 105.11-71.724 169.73-72.504 78.884-.979 153.324 36.827 199.209 101.059a7.5 7.5 0 1012.205-8.719C415.701 39.134 336.616-.986 252.841.019c-68.63.827-132.658 28.184-180.289 77.029C24.881 125.935-.878 190.7.023 259.415c.522 39.838 9.94 77.878 27.997 113.111L4.183 484.124c-1.419 6.645.602 13.48 5.407 18.285s11.641 6.822 18.286 5.407l111.598-23.837c35.234 18.058 73.274 27.476 113.112 27.996 1.166.016 2.32.023 3.484.023 67.413-.003 130.825-25.689 178.882-72.552 48.846-47.631 76.202-111.659 77.029-180.289.502-41.632-9.212-83.086-28.092-119.877z\"></path>\n        <path d=\"M78.312 273.759a7.496 7.496 0 00-8.201-6.728 7.5 7.5 0 00-6.727 8.2c4.694 47.557 26.81 91.548 62.275 123.87 35.705 32.542 81.995 50.463 130.341 50.463 106.732 0 193.566-86.833 193.566-193.565S362.733 62.433 256 62.433c-48.474 0-94.853 18.005-130.594 50.697-35.509 32.48-57.559 76.647-62.087 124.366a7.5 7.5 0 1014.933 1.417c4.176-44.009 24.518-84.749 57.278-114.715C168.5 94.041 211.284 77.433 256 77.433c98.462 0 178.566 80.104 178.566 178.566 0 98.461-80.104 178.565-178.566 178.565-44.6 0-87.301-16.531-120.237-46.549-32.719-29.82-53.122-70.397-57.451-114.256z\"></path>\n        <path d=\"M306.03 251.056a7.5 7.5 0 0010.607 10.607l18.726-18.727c12.476-12.478 12.476-32.778 0-45.255-12.479-12.477-32.777-12.477-45.256 0l-60.743 60.745-7.477-7.478c-12.476-12.476-32.777-12.478-45.255.001-12.477 12.477-12.477 32.777 0 45.255l30.104 30.104c6.044 6.044 14.08 9.372 22.627 9.372s16.583-3.328 22.627-9.372l38.986-38.985a7.5 7.5 0 00-10.607-10.607l-38.985 38.985c-3.211 3.211-7.48 4.979-12.021 4.979s-8.81-1.769-12.021-4.979l-30.104-30.104c-6.628-6.629-6.628-17.414 0-24.042 6.629-6.629 17.413-6.629 24.042 0l12.78 12.78a7.5 7.5 0 0010.606 0l66.047-66.048c6.627-6.629 17.414-6.629 24.041 0 6.629 6.628 6.628 17.413 0 24.041zm-133.271-54.747a7.5 7.5 0 00-7.5 7.5v4.493h-4.493c-4.142 0-7.5 3.357-7.5 7.5s3.358 7.5 7.5 7.5h4.493v4.493c0 4.143 3.358 7.5 7.5 7.5s7.5-3.357 7.5-7.5v-4.493h4.493c4.142 0 7.5-3.357 7.5-7.5s-3.358-7.5-7.5-7.5h-4.493v-4.493a7.5 7.5 0 00-7.5-7.5z\"></path>\n      </g>\n    </svg>\n  );\n}\n","export function StarIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffb820\"\n        d=\"M491.64 188.725l-153.53-22.31-68.66-139.12c-2.75-5.57-8.1-8.36-13.45-8.36l.02 400.2 137.3 72.19c11.01 5.78 23.86-3.56 21.76-15.81l-26.22-152.92 111.09-108.29c8.91-8.68 3.99-23.79-8.31-25.58z\"\n      ></path>\n      <path\n        fill=\"#ffd06a\"\n        d=\"M356.62 312.125s23.68 138.03 23.76 138.49c-.08-.01-122.45-31-124.36-31.48-.02-.01-137.34 72.19-137.34 72.19-11.01 5.78-23.86-3.56-21.76-15.81l26.22-152.92-111.09-108.29c-8.91-8.68-3.99-23.79 8.31-25.58l153.53-22.31 68.66-139.12c2.75-5.57 8.1-8.36 13.45-8.36l62.19 174.9 139.06 20.21z\"\n      ></path>\n      <path d=\"M510.883 196.615c-2.666-8.204-9.625-14.07-18.16-15.311l-149.632-21.743-66.918-135.588c-3.817-7.735-11.547-12.54-20.173-12.54s-16.356 4.805-20.173 12.54L168.91 159.561 19.278 181.305c-8.537 1.24-15.495 7.106-18.161 15.311s-.484 17.04 5.693 23.062l108.274 105.541-9.911 57.786a7.501 7.501 0 006.124 8.66 7.499 7.499 0 008.66-6.125l10.578-61.672a7.502 7.502 0 00-2.157-6.639L17.28 208.934c-2.089-2.036-2.798-4.909-1.897-7.684.902-2.775 3.164-4.683 6.052-5.103l153.534-22.31a7.498 7.498 0 005.647-4.103l68.662-139.125c1.292-2.617 3.804-4.179 6.722-4.179s5.431 1.562 6.722 4.179l68.663 139.125a7.5 7.5 0 005.647 4.103l153.534 22.31c2.888.42 5.15 2.327 6.051 5.102.902 2.775.193 5.648-1.896 7.685L383.622 317.228a7.499 7.499 0 00-2.157 6.639l26.227 152.913c.494 2.876-.621 5.617-2.982 7.332-2.361 1.714-5.312 1.929-7.895.57L259.49 412.487a7.504 7.504 0 00-6.98 0l-137.325 72.195c-2.583 1.358-5.535 1.144-7.894-.57-2.361-1.715-3.476-4.456-2.982-7.332l10.578-61.673a7.501 7.501 0 00-6.124-8.66 7.501 7.501 0 00-8.66 6.125l-10.578 61.673c-1.458 8.502 1.971 16.933 8.95 22.003 3.943 2.865 8.557 4.32 13.201 4.32a22.51 22.51 0 0010.49-2.608L256 427.6l133.834 70.36c7.635 4.014 16.713 3.357 23.692-1.712 6.979-5.07 10.408-13.502 8.949-22.003l-25.56-149.027L505.19 219.677c6.177-6.022 8.359-14.859 5.693-23.062z\"></path>\n    </svg>\n  );\n}\n"],"names":["airHorn","require","DJPruPruPruSound","useGlobalState","volume","useAudio","src","autoPlay","audio","controls","useEffect","MonsterCard","currentMonster","showControls","cardWidth","props","monsterOrientation","setMonsterOrientation","defaultCardWidth","useCardWidth","useEffectOnce","orientation","baseClass","direction","align","imageId","id","className","clsx","onClick","RotateRightOutlined","RotateLeftOutlined","pt","en","MovieCard","movie","disableSuffix","disablePrefix","prefixColor","suffixColor","style","backgroundColor","suffix","prefix","MovieReviewCard","type","text","highlights","highlightClassName","searchWords","autoEscape","textToHighlight","CardHighlight","children","iconSize","icon","MetricHighlight","iconPlacement","size","PlayersHighlight","PointsHighlight","GainedPoint","gainedPoint","order","description","isPositive","isNegative","title","color","GainedPoints","gainedPoints","playerId","gainedPointsDescriptions","points","Array","isArray","map","index","RankingBoard","players","ranking","hideGainedPoints","delay","useState","displayStep","setDisplayStep","sortedRanking","setSortedRanking","reRank","setReRank","useDimensions","height","maxPoints","useMemo","Math","max","scores","newScore","seconds","useCountdown","duration","autoStart","onExpire","positions","lastPosition","lastPoints","rankByFinalScoreDict","orderBy","reduce","acc","entry","rankByPreviousScore","tempSortedRanking","newEntry","position","previousScore","length","hPosition","top","CrownFilled","avatarId","name","undefined","StepRankingWrapper","subtitle","useTemporarilyHidePlayersBar","CaretUpOutlined","BookPages","leftPage","rightPage","viewBox","d","fill","x","y","width","useColorizeBackground","user","currentRound","team","appElement","document","getElementById","classList","add","remove","getMovieTitles","movies","A","B","C","D","TaskIcon","task","game","PictureIcon","PathIcon","FairyTaleIcon","CrimeSceneIcon","CrossWordsIcon","DetectiveIcon","SkiingIcon","PassportIcon","QueueIcon","DreamIcon","SheepIcon","LoveIcon","TrickOrTreatIcon","WavelengthDeviceIcon","ColorWheelIcon","TrendingIcon","MagicDoorIcon","RevolverIcon","MonsterIcon","BoxingGlovesIcon","CriminalIcon","GuessIcon","MovieTheaterIcon","TDIcon","TITLES","INSTRUCTIONS","TaskInstructions","dualTranslate","useLanguage","instruction","ClubLine","playersList","sortPlayers","winners","filter","player","losers","ClubberAvatar","clubberId","animate","VIPLineIcon","clues","mockSeeding","seeds","data","forEach","seed","card","JSON","stringify","mockDrawing","ids","cards","portal","getRandomItem","fact","round","random","wave","likeTopic","outfits","mockSelection","options","propertyName","mockText","MinigameTitle","current","TaskArteRuim","onSubmitTask","isLoading","useLoading","onSelect","value","useMock","variant","contained","drawing","option","disabled","ready","header","LETTERS","getColorFromIndex","shape","loading","TaskCaminhosMagicos","String","portals","IconAvatar","TreeOneIcon","TreeTwoIcon","TreeThreeIcon","MapIcon","Object","values","arr","Fragment","RightSquareOutlined","TaskContadoresHistorias","clue","setClue","onSubmitClue","cardId","onChange","e","target","onPressEnter","TaskCrimesHediondos","Boolean","scenes","causeOfDeath","SceneTile","tile","crimeIndexes","reasonForEvidence","location","sceneA","sceneB","sceneC","content","toUpperCase","maxWidth","i","isActive","CheckCircleFilled","SpreadsheetGrid","columns","rows","topLeftCorner","gridTemplateColumns","gridTemplateRows","role","SpreadsheetCell","TaskCruzaPalavras","translate","CellPlusButton","rest","PlusCircleFilled","TaskDetetivesImaginativos","language","table","bot","BOTS_LIST","AVATARS","TaskDilemaDosEsquiadores","dilemma","left","right","prompt","SnowHillIcon","TaskEspiaoEntreNos","answer","setAnswer","onSubmitAnswer","roles","roleIndex","question","placeholder","TaskFileiraDeFatos","revealedIndex","findIndex","getRevealedEntry","Chevron","reveal","getAvatarColorById","ChevronImage","xmlns","opacity","TaskGaleriaDeSonhos","theme","TaskMenteColetiva","TaskNamoroOuAmizade","heads","head","Candidate","body","bodies","interest","interests","need","needs","funFact","funFacts","TaskNaRuaDoMedo","h","house","HouseCard","candyLeftover","preview","TaskOndaTelepatica","setPosition","cardSideClass","onMouseEnter","getColorModifier","ArrowLeftOutlined","MinusOutlined","ArrowRightOutlined","TaskPalhetaDeCores","palette","wrap","read","SplatterSVG","SocialProfile","handle","verified","TaskPolemicaDaVez","TaskPortaDosDesesperados","doorWidth","doors","DoorFrame","Book","book","TaskQuemNaoMata","keys","ShooterIcon","TaskRetratoFalado","TaskSuperCampeonato","contenders","challenge","contender","ContenderCard","overlayColor","hideName","isBlurred","shouldBeBlurred","useBlurCards","imageURL","replace","PUBLIC_URL","alt","process","fallback","TaskTestemunhaOcular","suspects","SpeechBubbleAcceptedIcon","SpeechBubbleDeclinedIcon","suspect","TaskUeSoIsso","toLowerCase","SuggestionEasel","onChangeInput","overflow","bordered","autoComplete","TaskVamosAoCinema","reviews","good","bad","background","StepTask","announcement","Component","FallbackComponent","fullWidth","_","TaskTitle","DJInstructions","total","state","info","useUser","useStep","step","setStep","goToNextStep","request","useAPICall","apiFunction","MEGAMIX_API","actionName","onSuccess","successMessage","errorMessage","payload","action","useOnSubmitTaskAPIRequest","phase","allowedPhase","PHASES","conditions","isReady","DJIcon","DJAnnouncementTitle","onClose","unskippable","SeedArteRuim","updateData","lines","setLines","isTimesUp","setTimesUp","start","isRunning","TimeHighlight","ArteRuimTimerSound","PanicIcon","padding","NOOP","SeedCaminhosMagicos","BikiniModelIcon","HeartOutlined","MessageOutlined","SendOutlined","capitalize","SeedClubber","onSubmitData","clubbers","cId","label","now","moment","format","SeedFileiraDeFatos","setValue","min","margin","block","leftSide","SeedOndaTelepatica","SeedPolemicaDaVez","LikeFilled","DislikeFilled","arteRuimTimer","SeedRetratoFalado","hand","StepSeeding","currentStep","setData","objValue","next","v","items","buildSeedingSteps","currentSeed","DevMock","PhaseSeeding","useOnSubmitSeedAPIRequest","ExperimentIcon","WinningCount","ResultArteRuim","winningValues","winningTeam","winningArtworks","includes","winningCards","ResultCaminhosMagicos","Number","ResultCruzaPalavras","cheatSheet","ResultNamoroOuAmizade","ResultNaRuaDoMedo","ResultRetratoFalado","count","ResultVamosAoCinema","ResultValueDelegator","SpacePlayerCheckWrapper","paths","every","path","has","VoteArteRuim","find","VoteCruzaPalavras","VoteNamoroOuAmizade","VoteNaRuaDoMedo","VoteRetratoFalado","VoteVamosAoCinema","VotesDelegator","StepResult","onSeeRanking","isFirstRunThrough","scoringType","time","currentIndex","timeLeft","GarbageIcon","getPosition","TrophyOutlined","memoize","side","areaSize","buffer","startAt","increment","ratio","multiplier","floor","getTopValue","StepRanking","goToPreviousStep","innerContent","BouncerIcon","PhaseResult","setIsFirstRunThrough","PhaseGameOver","announcementIcon","CrownIcon","isEqual","fairWinners","winner","getActiveComponent","LoadingPage","PhaseLobby","PhaseRules","PhaseSetup","PhaseTask","PageError","token","colorPrimary","THEME_COLORS","colorLink","gameCollection","GAME_COLLECTION","CandyCount","candyCount","active","key","getAnimationClass","letter","abs","getBracketClass","num","showNeedle","needle","showTarget","baseBracketClass","modifier","getGuessResultClass","guess","base","getPoints","countDifferentGuesses","regularPlayers","dict","xmlnsXlink","x1","x2","y1","y2","gradientUnits","offset","stopColor","xlinkHref","isolation","mixBlendMode","stroke","strokeMiterlimit","cx","cy","r","PlayersIcon","StarIcon"],"sourceRoot":""}