{"version":3,"file":"static/js/comunicacao-duo.8702565b.chunk.js","mappings":"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","sources":["components/cards/ItemCard.tsx","components/cards/SignCard.tsx","components/cards/SuspectCard.tsx","components/cards/Card.tsx","components/sprites/Sprite.tsx","components/views/View.tsx","components/views/ViewIf.tsx","components/views/ViewOr.tsx","components/views/ViewSwitch.tsx","games/comunicacao-duo/utils/constants.ts","components/alien/useAlienAttributes.ts","components/alien/AlienKeyboard.tsx","components/alien/AlienText.tsx","games/comunicacao-duo/components/BoardEntry.tsx","games/comunicacao-duo/components/Board.tsx","games/comunicacao-duo/components/SummaryBox.tsx","games/comunicacao-duo/components/HistoryDeliverableEntry.tsx","games/comunicacao-duo/components/History.tsx","games/comunicacao-duo/StepAsk.tsx","games/comunicacao-duo/PhaseAskingForSomething.tsx","games/comunicacao-duo/utils/api-requests.ts","games/comunicacao-duo/StepVerification.tsx","games/comunicacao-duo/PhaseVerification.tsx","games/comunicacao-duo/StepDeliver.tsx","games/comunicacao-duo/PhaseDeliveringSomething.tsx","games/comunicacao-duo/PhaseGameOver.tsx","games/comunicacao-duo/SessionComunicacaoDuo.tsx","games/comunicacao-duo/utils/achievements.ts","hooks/useWhichPlayerIsThe.ts","icons/AlienHeartEyesIcon.tsx","icons/AlienNeutralIcon.tsx","icons/AlienStarEyesIcon.tsx","icons/MysteryBoxIcon.tsx","icons/NuclearExplosionIcon.tsx","icons/QuestionIcon.tsx"],"sourcesContent":["import clsx from 'clsx';\nimport { memoize } from 'lodash';\n// Components\nimport { DualTranslate } from 'components/language';\nimport { Sprite } from 'components/sprites';\n// Sass\nimport './ItemCard.scss';\n\nexport type ItemCardProps = {\n  /**\n   * The id of the item\n   */\n  id: string;\n  /**\n   * The width of the item\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n  /**\n   * Replacement title, usually the name of the item\n   */\n  title?: string;\n  /**\n   * Optional text to display\n   */\n  text?: DualLanguageValue;\n  /**\n   * Optional padding\n   */\n  padding?: number;\n};\n\nconst BASE = 64;\n\n/**\n * Retrieves the source and item ID based on a given string.\n *\n * @param str - The input string.\n * @returns An array containing the source and item ID.\n */\nexport const getSource = memoize((str: string) => {\n  const match = str.match(/\\d+/);\n  const numId = match ? Number.parseInt(match[0], 10) : 0;\n  const itemId = `item-${numId}`;\n  const sourceId = Math.ceil(numId / BASE) * BASE;\n  const source = `items-${sourceId}`;\n  return [source, itemId];\n});\n\n/**\n * An item card component.\n */\nexport function ItemCard({ id, width = 72, className, title, text, padding = 6 }: ItemCardProps) {\n  const [source, itemId] = getSource(id);\n\n  const height = text ? 'auto' : `${width}px`;\n  const divPadding = padding === 0 ? { padding: 0 } : {};\n\n  return (\n    <div className={clsx('item-card', className)} style={{ width: `${width}px`, height, ...divPadding }}>\n      <Sprite\n        source={source}\n        id={itemId}\n        width={width - (padding ?? 0) * 2}\n        title={title}\n        padding={padding}\n      />\n      {!!text && (\n        <span className=\"item-card__text\">\n          <DualTranslate>{text}</DualTranslate>\n        </span>\n      )}\n    </div>\n  );\n}\n\n/**\n * An item sprite component.\n */\nexport function ItemSprite({ id, width = 75, ...props }: Pick<ItemCardProps, 'id' | 'width'> & ElementProps) {\n  const [source, itemId] = getSource(id);\n  return <Sprite source={source} id={itemId} width={width} padding={0} {...props} />;\n}\n","import clsx from 'clsx';\n// Components\nimport { Sprite } from 'components/sprites';\n// Sass\nimport './SignCard.scss';\n\ntype SignCardProps = {\n  /**\n   * The id of the sign (do not prefix with sign)\n   */\n  id: string | number;\n  /**\n   * The width of the sign\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\n/**\n * An alien sign card component.\n */\nexport function SignCard({ id, width = 50, className = '' }: SignCardProps) {\n  return (\n    <div className={clsx('sign-card', className)} style={{ width: `${width}px`, height: `${width}px` }}>\n      <Sprite source=\"alien-signs\" id={`sign-${id}`} width={width - 12} />\n    </div>\n  );\n}\n\n/**\n * An alien sign sprite component.\n */\nexport function SignSprite({ id, width = 64, ...props }: Pick<SignCardProps, 'id' | 'width'> & ElementProps) {\n  const signId = id.startsWith('sign') ? id : `sign-${id}`;\n  return <Sprite source=\"alien-signs\" id={signId} width={width} padding={0} {...props} />;\n}\n","// Types\nimport type { SuspectCard as SuspectCardType } from 'types/tdr';\n// Components\nimport { ImageCard } from 'components/image-cards';\nimport { DualTranslate } from 'components/language';\n// Sass\nimport './SuspectCard.scss';\n// Type\n\ntype SuspectCardProps = {\n  /**\n   * Suspect object\n   */\n  suspect: SuspectCardType;\n  /**\n   * Card width\n   */\n  width: number;\n  /**\n   * Hide the suspect name\n   */\n  hideName?: boolean;\n};\n\nexport function SuspectCard({ suspect, width, hideName }: SuspectCardProps) {\n  return (\n    <div className=\"suspect-card\" style={{ width: `${width}px` }}>\n      <ImageCard id={suspect.id} className=\"suspect-card__image\" cardWidth={width} preview={false} />\n      {!hideName && (\n        <div className=\"suspect-card__name\">\n          <DualTranslate>{suspect.name}</DualTranslate>\n        </div>\n      )}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport type { ReactNode } from 'react';\n// Utils\nimport { getColorFromLetter } from 'utils/helpers';\n// Sass\nimport './Card.scss';\n\ntype CardProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  header?: string;\n  footer?: string;\n  color?: string;\n  size?: 'small' | 'medium' | 'large';\n  randomColor?: boolean;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  headerClassName?: string;\n  footerClassName?: string;\n  hideHeader?: boolean;\n};\nexport const Card = ({\n  children,\n  header = 'Carta',\n  footer,\n  color = 'none',\n  size = 'medium',\n  randomColor = false,\n  className = '',\n  headerClassName = '',\n  footerClassName = '',\n  hideHeader = false,\n}: CardProps) => {\n  const baseClass = 'card';\n\n  const bgColor = randomColor\n    ? getColorFromLetter(\n        typeof children === 'string'\n          ? children[0].toUpperCase()\n          : header !== 'Carta'\n            ? header[0].toUpperCase()\n            : 'X',\n      )\n    : color;\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, className)}>\n      {!hideHeader && (\n        <span\n          className={clsx(`${baseClass}__header`, `color-background--${bgColor}`, headerClassName)}\n          style={color.startsWith('#') ? { backgroundColor: color } : {}}\n        >\n          {header}\n        </span>\n      )}\n      <span className={`${baseClass}__text`}>{children}</span>\n      {footer && <span className={clsx(`${baseClass}__footer`, footerClassName)}>{footer}</span>}\n    </div>\n  );\n};\n","import { useQuery } from '@tanstack/react-query';\n// Ant Design Resources\nimport { WarningOutlined } from '@ant-design/icons';\nimport { Spin, Tooltip } from 'antd';\n// Hooks\nimport { useTDBaseUrl } from 'hooks/useTDBaseUrl';\n\ntype SpriteProps = {\n  /**\n   * The sprite source name\n   */\n  source: string;\n  /**\n   * The id of the item\n   */\n  id: string;\n  /**\n   * The width of the item\n   */\n  width?: number;\n  /**\n   * Replacement title, usually the name of the item\n   */\n  title?: string;\n  /**\n   * Optional class name\n   */\n  className?: string;\n  /**\n   *\n   */\n  padding?: number;\n} & ElementProps;\n\n/**\n * Loads a sprite from the Tarde Divertida sprites\n * @param {SpriteProps} props\n * @returns a single sprite item\n */\nexport function Sprite({\n  id,\n  source,\n  width = 72,\n  padding = 6,\n  title,\n  className,\n  style,\n  ...props\n}: SpriteProps) {\n  const baseUrl = useTDBaseUrl('sprites');\n\n  const { isLoading, data, isError } = useQuery({\n    queryKey: ['sprite', source],\n    queryFn: async () => {\n      const response = await fetch(`${baseUrl}/sprites/${source}.svg`);\n      return await response.text();\n    },\n    enabled: !!id && !!source,\n  });\n\n  const paddedWidth = width - padding * 2;\n\n  if (isLoading) {\n    return (\n      <span\n        style={{\n          width: `${paddedWidth}px`,\n          height: `${paddedWidth}px`,\n          padding,\n          display: 'grid',\n          placeItems: 'center',\n          ...style,\n        }}\n        className={className}\n        {...props}\n      >\n        <Spin />\n      </span>\n    );\n  }\n\n  const svgContent = data;\n\n  if (isError || !svgContent) {\n    return (\n      <span\n        style={{\n          width: `${paddedWidth}px`,\n          height: `${paddedWidth}px`,\n          padding,\n          display: 'grid',\n          placeItems: 'center',\n          ...style,\n        }}\n        className={className}\n        {...props}\n      >\n        <WarningOutlined />\n      </span>\n    );\n  }\n\n  return (\n    <span\n      style={{\n        width: `${paddedWidth}px`,\n        height: `${paddedWidth}px`,\n        padding,\n        display: 'grid',\n        placeItems: 'center',\n        ...style,\n      }}\n      className={className}\n      {...props}\n    >\n      <svg viewBox=\"0 0 512 512\" style={{ width: `${paddedWidth}px`, height: `${paddedWidth}px` }}>\n        <use xlinkHref={`#${id}`} dangerouslySetInnerHTML={{ __html: svgContent }} />\n        <foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">\n          {title && (\n            <Tooltip title={title}>\n              <div style={{ background: 'transparent', width: '100%', height: '100vh' }}></div>\n            </Tooltip>\n          )}\n        </foreignObject>\n      </svg>\n    </span>\n  );\n}\n","import type { ReactNode } from 'react';\n\ntype ViewProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n};\n\nexport function View({ children }: ViewProps) {\n  return <>{children}</>;\n}\n","import type { ReactNode } from 'react';\n\ntype ViewIfProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Displays children only if condition is truthy\n   */\n  condition?: boolean;\n};\n\n/**\n * Wrapper component that only renders the children if the condition is truthy\n */\nexport function ViewIf({ condition = false, children }: ViewIfProps) {\n  return condition ? <>{children}</> : <></>;\n}\n","import type { ReactNode } from 'react';\n\ntype ViewOrProps = {\n  /**\n   * The content of the component to be toggled\n   */\n  children: [ReactNode, ReactNode];\n  /**\n   * The condition to be met to render the first children\n   */\n  condition?: boolean;\n};\n\n/**\n * View wrapper that renders one of two children depending on a condition\n */\nexport function ViewOr({ condition = false, children }: ViewOrProps) {\n  return condition ? <>{children[0]}</> : <>{children[1]}</>;\n}\n","type ViewSwitchProps = {\n  cases: boolean[];\n  /**\n   * The content of the component\n   */\n  children: any;\n};\n\nexport function ViewSwitch({ cases, children }: ViewSwitchProps) {\n  if (cases.length > 5) {\n    throw Error('ViewSwitch only supports up to 5 cases');\n  }\n\n  if (cases[0] && children[0]) {\n    return children[0];\n  }\n\n  if (cases[1] && children[1]) {\n    return children[1];\n  }\n\n  if (cases[2] && children[2]) {\n    return children[2];\n  }\n\n  if (cases[3] && children[3]) {\n    return children[3];\n  }\n\n  if (cases[4] && children[4]) {\n    return children[4];\n  }\n  console.warn('Rendering all children in the ViewSwitch');\n  return children;\n}\n","export const COMUNICACAO_DUO_ACTIONS = {\n  SUBMIT_REQUEST: 'SUBMIT_REQUEST',\n  SUBMIT_DELIVERY: 'SUBMIT_DELIVERY',\n  STOP_DELIVERY: 'STOP_DELIVERY',\n};\n\nexport const TOTAL_ITEMS = 16;\n\nexport const AFFILIATIONS = {\n  A: 'A',\n  B: 'B',\n  TABOO: 'TABOO',\n  NONE: 'NONE',\n};\n\nexport const SIDES = [AFFILIATIONS.A, AFFILIATIONS.B];\n\nexport const STATUS = {\n  IDLE: 'IDLE',\n  WIN: 'WIN',\n  LOSE: 'LOSE',\n  CONTINUE: 'CONTINUE',\n};\n\nexport const DECK_ENTRY_STATUS = {\n  IDLE: 'IDLE',\n  A: AFFILIATIONS.A,\n  B: AFFILIATIONS.B,\n  NONE: AFFILIATIONS.NONE,\n  TABOO: AFFILIATIONS.TABOO,\n};\n","import { useQuery } from '@tanstack/react-query';\n// Types\nimport type { ItemAttribute } from 'types/tdr';\n// Hooks\nimport { useTDBaseUrl } from 'hooks/useTDBaseUrl';\n\nexport function useAlienAttributes(enabled: boolean) {\n  const baseUrl = useTDBaseUrl('resources');\n  return useQuery<Dictionary<ItemAttribute>, ResponseError>({\n    queryKey: ['items-attributes'],\n    queryFn: async () => {\n      const response = await fetch(`${baseUrl}/items-attributes.json`);\n      return await response.json();\n    },\n    enabled,\n    staleTime: Number.POSITIVE_INFINITY,\n  });\n}\n","import { orderBy } from 'lodash';\nimport debounce from 'lodash/debounce';\nimport { useCallback, useMemo, useState } from 'react';\n// Ant Design Resources\nimport {\n  DashOutlined,\n  StepBackwardOutlined,\n  VerticalAlignBottomOutlined,\n  VerticalAlignTopOutlined,\n} from '@ant-design/icons';\nimport { Input, Spin, Tooltip } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { LETTERS } from 'utils/constants';\nimport { stringRemoveAccents } from 'utils/helpers';\n// Components\nimport { SignCard } from 'components/cards/SignCard';\nimport { DualTranslate } from 'components/language';\n// Internal\nimport { useAlienAttributes } from './useAlienAttributes';\n// Sass\nimport './AlienKeyboard.scss';\n\ntype AlienKeyboardProps = {\n  /**\n   * The current sentence\n   */\n  value: string;\n  /**\n   * Callback to update the sentence\n   */\n  onChange: (value: string) => void;\n  /**\n   * If provided, only these keys will be available on the keyboard\n   */\n  availableAttributeKeys?: string[];\n  /**\n   * Disable the keyboard\n   */\n  disabled?: boolean;\n};\n\nexport function AlienKeyboard({ value, onChange, availableAttributeKeys, disabled }: AlienKeyboardProps) {\n  const { language } = useLanguage();\n  const { isLoading, data: attributes = {} } = useAlienAttributes(true);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  // Create a debounced function to handle search\n  const debouncedSearch = useCallback(\n    debounce((query) => {\n      setSearchQuery(query);\n    }, 300),\n    [],\n  );\n\n  const allowedAttributes = useMemo(() => {\n    return orderBy(\n      availableAttributeKeys\n        ? Object.values(attributes).filter((attribute) => availableAttributeKeys.includes(attribute.id))\n        : Object.values(attributes),\n      [`name.${language}`],\n      ['asc'],\n    );\n  }, [attributes, availableAttributeKeys, language]);\n\n  const searchDict = useMemo(() => {\n    return allowedAttributes.reduce((acc: StringDictionary, attribute) => {\n      acc[attribute.id] = stringRemoveAccents(\n        `${attribute.name[language]} ${attribute.description[language]} ${attribute.keywords}`,\n      ).toLowerCase();\n      return acc;\n    }, {});\n  }, [allowedAttributes, language]);\n\n  const attributesList = useMemo(() => {\n    return allowedAttributes.filter((a) => {\n      return searchQuery === '' || searchDict[a.id].includes(stringRemoveAccents(searchQuery.toLowerCase()));\n    });\n  }, [allowedAttributes, searchDict, searchQuery]);\n\n  const onTap = (key: string, type: 'attribute' | 'helper') => {\n    onChange(updateSentence(value, key, type));\n  };\n\n  return (\n    <Spin spinning={isLoading}>\n      <div className=\"alien-keyboard\" style={{ width: '100%' }}>\n        <div className=\"alien-keyboard__keys\">\n          {HELPER_KEYS.map((key) => {\n            return (\n              <button\n                type=\"button\"\n                className=\"alien-keyboard__key alien-keyboard__key--helper\"\n                key={key.id}\n                onClick={() => onTap(key.id, 'helper')}\n                disabled={disabled}\n              >\n                {key.icon}\n                <small>\n                  <DualTranslate>{key.name}</DualTranslate>\n                </small>\n              </button>\n            );\n          })}\n          <div className=\"alien-keyboard__search\">\n            <Input.Search\n              placeholder=\"Search\"\n              onChange={(e) => debouncedSearch(e.target.value)}\n              onSearch={(value) => debouncedSearch(value)}\n              style={{ width: 156 }}\n              disabled={disabled}\n              allowClear\n            />\n          </div>\n        </div>\n        <div className=\"alien-keyboard__keys\">\n          {attributesList.map((attribute) => {\n            return (\n              <Tooltip\n                key={attribute.id}\n                title={\n                  <div className=\"center\">\n                    <DualTranslate>{attribute.description}</DualTranslate>\n                  </div>\n                }\n              >\n                <button\n                  type=\"button\"\n                  className=\"alien-keyboard__key\"\n                  onClick={() => onTap(attribute.id, 'attribute')}\n                  disabled={disabled}\n                >\n                  <SignCard width={32} id={`${attribute.spriteId.split('-')[1]}`} className=\"transparent\" />\n\n                  <small>\n                    <DualTranslate>{attribute.name}</DualTranslate>\n                  </small>\n                </button>\n              </Tooltip>\n            );\n          })}\n        </div>\n      </div>\n    </Spin>\n  );\n}\n\nconst HELPER_KEYS = [\n  {\n    id: '^',\n    name: { en: 'NOT', pt: 'NÃO' },\n    icon: <VerticalAlignTopOutlined />,\n    type: 'helper',\n  },\n  {\n    id: '~',\n    name: { en: 'SORTA', pt: 'MEIO' },\n    icon: <DashOutlined />,\n    type: 'helper',\n  },\n  {\n    id: '*',\n    name: { en: 'VERY', pt: 'MUITO' },\n    icon: <VerticalAlignBottomOutlined />,\n    type: 'helper',\n  },\n  {\n    id: '<',\n    name: { en: 'Backspace', pt: 'Apagar' },\n    icon: <StepBackwardOutlined />,\n  },\n];\n\nconst updateSentence = (prev: string, key: string, type: 'attribute' | 'helper') => {\n  const lastChar = prev[prev.length - 1] ?? '';\n  const isLastHelper = !LETTERS.includes(lastChar.toUpperCase());\n\n  if (type === 'attribute') {\n    if (isLastHelper) {\n      return `${prev}${key}`;\n    }\n    if (!prev.includes(key)) {\n      return `${prev}+${key}`;\n    }\n    return prev;\n  }\n\n  if (type === 'helper') {\n    if (key === '<') {\n      if (isLastHelper) {\n        return prev.slice(0, -1);\n      }\n      return prev.slice(0, -4);\n    }\n    if (isLastHelper) {\n      return `${prev.slice(0, -1)}${key}`;\n    }\n    return `${prev}${key}`;\n  }\n\n  return prev;\n};\n","import clsx from 'clsx';\nimport { useMemo } from 'react';\n// Ant Design Resources\nimport { Spin, Tooltip } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { SignCard } from 'components/cards/SignCard';\n// Internal\nimport { useAlienAttributes } from './useAlienAttributes';\n// Sass\nimport './AlienText.scss';\n\ntype AlienTextProps = {\n  /**\n   * The text value to be displayed (in alien language)\n   */\n  value: string;\n  /**\n   * If true, it will display the translation of the text\n   */\n  withTranslation?: boolean;\n} & ElementProps;\n\nexport function AlienText({ value, withTranslation = false, className, ...divProps }: AlienTextProps) {\n  const { isLoading, data: attributes = {} } = useAlienAttributes(true);\n  const { dualTranslate } = useLanguage();\n\n  const characters = useMemo(() => {\n    const splitLetters = splitStringEvery4(value);\n\n    return splitLetters.map((character) => {\n      const variantKey = character[0];\n      const attributeId = character.substring(1);\n      if (attributeId && attributes?.[attributeId]) {\n        const attribute = attributes[attributeId];\n        return {\n          spriteId: attribute?.spriteId,\n          variant: variantsName[variantKey],\n          name: {\n            pt: `${variants[variantKey].pt}${attribute?.name.pt}`.trim().toLowerCase(),\n            en: `${variants[variantKey].en}${attribute?.name.en}`.trim().toLowerCase(),\n          },\n          description: {\n            en: attribute?.description.en ?? '',\n            pt: attribute?.description.pt ?? '',\n          },\n        };\n      }\n\n      return {\n        spriteId: '',\n        variant: variantsName[variantKey],\n        name: { pt: `${variants[variantKey].pt} `, en: `${variants[variantKey].en} ` },\n        description: { pt: '', en: '' },\n      };\n    });\n  }, [value, attributes]);\n\n  return (\n    <Spin spinning={isLoading}>\n      <div className={clsx('alien-text', className)} {...divProps}>\n        {characters.map((character) => {\n          return (\n            <Tooltip title={dualTranslate(character.name)} key={`${character.spriteId}-${character.variant}`}>\n              <div className={clsx('alien-text__character', `alien-text__character--${character.variant}`)}>\n                <SignCard width={48} id={`${character.spriteId.split('-')[1]}`} className=\"transparent\" />\n              </div>\n            </Tooltip>\n          );\n        })}\n      </div>\n      {withTranslation && (\n        <div className=\"alien-text-translation\">\n          {characters.map((character) => {\n            return (\n              <Tooltip\n                title={dualTranslate(character.description)}\n                key={`${character.spriteId}-${character.variant}`}\n              >\n                <span className=\"alien-text-translation__text\">{dualTranslate(character.name)}</span>\n              </Tooltip>\n            );\n          })}\n        </div>\n      )}\n    </Spin>\n  );\n}\n\nfunction splitStringEvery4(str: string): string[] {\n  const result: string[] = [];\n  for (let i = 0; i < str.length; i += 4) {\n    result.push(str.substring(i, i + 4));\n  }\n  return result;\n}\n\nconst variants: Record<string, DualLanguageValue> = {\n  '+': {\n    en: '',\n    pt: '',\n  },\n  '^': {\n    en: 'not ',\n    pt: 'não ',\n  },\n  '~': {\n    en: 'sorta ',\n    pt: 'meio ',\n  },\n  '*': {\n    en: 'very ',\n    pt: 'muito ',\n  },\n};\n\nconst variantsName: Record<string, string> = {\n  '+': 'normal',\n  '^': 'not',\n  '~': 'sorta',\n  '*': 'very',\n};\n","import clsx from 'clsx';\n// Types\nimport type { ContenderCard, SuspectCard as SuspectCardType, TextCard } from 'types/tdr';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Card } from 'components/cards';\nimport { CharacterCard } from 'components/cards/CharacterCard';\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { SuspectCard } from 'components/cards/SuspectCard';\nimport { ImageCard } from 'components/image-cards';\n// Internal\nimport { SIDES } from '../utils/constants';\nimport type { DeckEntry } from '../utils/types';\n\ntype BoardEntryProps = {\n  entry: DeckEntry;\n  deckType: string;\n  userSide: string;\n};\nexport function BoardEntry({ entry, deckType, userSide }: BoardEntryProps) {\n  const { dualTranslate } = useLanguage();\n\n  const sideIndex = SIDES.indexOf(userSide);\n\n  if (deckType === 'items') {\n    return (\n      <div\n        key={`cd-board-entry-${entry.data.id}`}\n        className={clsx('cd-board-entry', `cd-board-entry--${entry.affiliation[sideIndex]}`)}\n      >\n        <ItemCard\n          id={`${entry.data.id}`}\n          title={entry.data.name ? dualTranslate(entry.data.name) : undefined}\n        />\n      </div>\n    );\n  }\n\n  if (deckType === 'images') {\n    return (\n      <div\n        key={`cd-board-entry-${entry.data.id}`}\n        className={clsx('cd-board-entry', `cd-board-entry--${entry.affiliation[sideIndex]}`)}\n      >\n        <ImageCard id={entry.data.id} cardWidth={72} className=\"board-entry-image-card\" />\n      </div>\n    );\n  }\n\n  if (deckType === 'contenders') {\n    return (\n      <div\n        key={`cd-board-entry-${entry.data.id}`}\n        className={clsx('cd-board-entry', `cd-board-entry--${entry.affiliation[sideIndex]}`)}\n      >\n        <CharacterCard character={entry.data as ContenderCard} size={96} className=\"board-entry-image-card\" />\n      </div>\n    );\n  }\n\n  if (deckType === 'suspects') {\n    return (\n      <div\n        key={`cd-board-entry-${entry.data.id}`}\n        className={clsx('cd-board-entry', `cd-board-entry--${entry.affiliation[sideIndex]}`)}\n      >\n        <SuspectCard suspect={entry.data as SuspectCardType} width={72} hideName />\n      </div>\n    );\n  }\n\n  if (deckType === 'words') {\n    return (\n      <div\n        key={`cd-board-entry-${entry.data.id}`}\n        className={clsx('cd-board-entry', `cd-board-entry--${entry.affiliation[sideIndex]}`)}\n      >\n        <Card hideHeader>{(entry.data as TextCard).text}</Card>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      key={`cd-board-entry-${entry.id}`}\n      className={clsx('cd-board-entry', `cd-board-entry--${entry.affiliation[sideIndex]}`)}\n    >\n      {entry.id}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { useMemo, type ReactNode } from 'react';\nimport { useToggle } from 'react-use';\n// Ant Design Resources\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { Button, Image, Popconfirm, Tooltip } from 'antd';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Icons\nimport { AlienHeartEyesIcon } from 'icons/AlienHeartEyesIcon';\nimport { AlienNeutralIcon } from 'icons/AlienNeutralIcon';\nimport { AlienStarEyesIcon } from 'icons/AlienStarEyesIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { TransparentButton } from 'components/buttons';\nimport { Translate } from 'components/language';\n// Internal\nimport type { DeckEntry } from '../utils/types';\nimport { AFFILIATIONS, DECK_ENTRY_STATUS, SIDES } from '../utils/constants';\nimport { BoardEntry } from './BoardEntry';\n\ntype BoardProps = {\n  deck: DeckEntry[];\n  deckType: string;\n  userSide: string;\n  userId: string;\n  onClick?: (entry: DeckEntry) => void;\n  animateEntries?: string[];\n  disabled?: boolean;\n};\n\nexport function Board({\n  deck,\n  deckType,\n  userId,\n  userSide,\n  onClick,\n  animateEntries = [],\n  disabled,\n}: BoardProps) {\n  const userIndex = SIDES.indexOf(userSide);\n\n  const hasTheOtherPlayersTabooBeenSelected = useMemo(() => {\n    // If any of your three taboo has been selected and it's the other player's affiliation.\n    const otherPlayerIndex = userIndex === 0 ? 1 : 0;\n    const otherPlayerSide = getOtherSide(userSide);\n    return deck.some(\n      (entry) =>\n        entry.affiliation[userIndex] === AFFILIATIONS.TABOO &&\n        entry.affiliation[otherPlayerIndex] === otherPlayerSide &&\n        entry.deliveredBy?.length,\n    );\n  }, [deck, userSide, userIndex]);\n\n  return (\n    <Image.PreviewGroup>\n      <div className=\"cd-board\">\n        {deck.map((entry) => {\n          const disabledTaboo =\n            entry.affiliation[userIndex] === AFFILIATIONS.TABOO && hasTheOtherPlayersTabooBeenSelected;\n\n          if (\n            onClick &&\n            entry.status === DECK_ENTRY_STATUS.IDLE &&\n            !entry.deliveredBy?.includes(userId) &&\n            !disabledTaboo\n          ) {\n            return (\n              <Popconfirm\n                key={entry.id}\n                title={\n                  <Translate\n                    en=\"Are you sure you want to deliver this item?\"\n                    pt=\"Você tem certeza que deseja entregar este item?\"\n                  />\n                }\n                trigger={deckType === 'images' ? 'hover' : 'click'}\n                onConfirm={() => onClick(entry)}\n              >\n                <TransparentButton\n                  key={entry.id}\n                  disabled={disabled}\n                  className=\"cd-board-entry-entry-wrapper\"\n                >\n                  <NeutralDeliveriesWrapper\n                    entry={entry}\n                    userId={userId}\n                    userSide={userSide}\n                    animateEntries={animateEntries}\n                  >\n                    <BoardEntry entry={entry} deckType={deckType} userSide={userSide} />\n                  </NeutralDeliveriesWrapper>\n                </TransparentButton>\n              </Popconfirm>\n            );\n          }\n\n          if (entry.status === DECK_ENTRY_STATUS.A || entry.status === DECK_ENTRY_STATUS.B) {\n            return (\n              <span\n                key={entry.id}\n                className={clsx(animateEntries.includes(entry.id) && getAnimationClass('slideInDown'))}\n              >\n                <CoverAlienCard side={entry.status}>\n                  <BoardEntry entry={entry} deckType={deckType} userSide={userSide} />\n                </CoverAlienCard>\n              </span>\n            );\n          }\n\n          if ((entry?.deliveredBy?.length ?? 0) > 0) {\n            return (\n              <div key={entry.id} className=\"cd-board-entry-entry-wrapper\">\n                <NeutralDeliveriesWrapper\n                  entry={entry}\n                  userId={userId}\n                  userSide={userSide}\n                  animateEntries={animateEntries}\n                >\n                  <BoardEntry entry={entry} deckType={deckType} userSide={userSide} />\n                </NeutralDeliveriesWrapper>\n              </div>\n            );\n          }\n\n          return (\n            <div\n              key={entry.id}\n              className={clsx(\n                'cd-board-entry-entry-wrapper',\n                disabledTaboo && onClick && 'cd-board-entry-entry-wrapper--not-allowed',\n              )}\n            >\n              {disabledTaboo && (\n                <div className=\"cd-board-entry-taboo\">\n                  <Tooltip\n                    title={\n                      <Translate\n                        en=\"You already found the other player's item that matches one of your taboos so none of these other ones can be an item for the other player anymore.\"\n                        pt=\"Você já encontrou o item do outro jogador que corresponde a um dos seus tabus, então nenhum desses outros tabus seus pode ser um item para o outro jogador.\"\n                      />\n                    }\n                  >\n                    <Button shape=\"circle\" size=\"small\" icon={<CloseCircleOutlined />} />\n                  </Tooltip>\n                </div>\n              )}\n              <BoardEntry entry={entry} deckType={deckType} userSide={userSide} />\n            </div>\n          );\n        })}\n      </div>\n    </Image.PreviewGroup>\n  );\n}\n\ntype CoverAlienCardProps = {\n  side: string;\n  children: ReactNode;\n};\nfunction CoverAlienCard({ side, children }: CoverAlienCardProps) {\n  const [open, setOpen] = useToggle(false);\n\n  return (\n    <div className=\"cd-board-entry-cover\" onClick={setOpen}>\n      <div\n        className={clsx(\n          'cd-board-entry-cover__alien',\n          `cd-board-entry-cover__alien--${getOtherSide(side)}`,\n          open && 'cd-board-entry-cover__alien--open',\n        )}\n      >\n        {side === 'A' ? (\n          <AlienHeartEyesIcon style={{ width: 36 }} />\n        ) : (\n          <AlienStarEyesIcon style={{ width: 36 }} />\n        )}\n      </div>\n      {children}\n    </div>\n  );\n}\n\ntype NeutralDeliveriesWrapperProps = {\n  children: ReactNode;\n  entry: DeckEntry;\n  userId: string;\n  userSide: string;\n  animateEntries: string[];\n};\n\nfunction NeutralDeliveriesWrapper({\n  children,\n  entry,\n  userId,\n  userSide,\n  animateEntries,\n}: NeutralDeliveriesWrapperProps) {\n  if ((entry?.deliveredBy?.length ?? 0) === 0) {\n    return <>{children}</>;\n  }\n\n  const haveIDelivered = entry.deliveredBy?.includes(userId);\n  const hasTheOtherPlayerDelivered = !!entry.deliveredBy?.filter((id) => id !== userId).length;\n\n  return (\n    <div\n      className={clsx(\n        'cd-board-entry-neutral',\n        entry.deliveredBy?.includes(userId) && 'cd-board-entry-neutral--not-allowed',\n      )}\n    >\n      {haveIDelivered && (\n        <span className={clsx(animateEntries.includes(entry.id) && getAnimationClass('tada'))}>\n          <IconAvatar\n            className={clsx('cd-board-entry-neutral-item', `cd-board-entry-neutral-item--${userSide}`)}\n            icon={<AlienNeutralIcon color={userSide === 'A' ? 'teal' : 'orange'} />}\n          />\n        </span>\n      )}\n      {hasTheOtherPlayerDelivered && (\n        <span className={clsx(animateEntries.includes(entry.id) && getAnimationClass('tada'))}>\n          <IconAvatar\n            className={clsx(\n              'cd-board-entry-neutral-item',\n              `cd-board-entry-neutral-item--${getOtherSide(userSide)}`,\n            )}\n            icon={<AlienNeutralIcon color={userSide === 'A' ? 'orange' : 'teal'} />}\n          />\n        </span>\n      )}\n      {children}\n    </div>\n  );\n}\n\nconst getOtherSide = (side: string) => (side === 'A' ? 'B' : 'A');\n","import type { GamePlayers } from 'types/player';\nimport type { Summary } from '../utils/types';\nimport { Translate } from 'components/language';\nimport { AvatarName } from 'components/avatars';\nimport type { GameRound } from 'types/game';\n\ntype SummaryBoxProps = {\n  summary: Summary;\n  players: GamePlayers;\n  round: GameRound;\n};\n\nexport function SummaryBox({ summary, players, round }: SummaryBoxProps) {\n  const playerA = Object.values(players).find((player) => player.side === 'A');\n  const playerB = Object.values(players).find((player) => player.side === 'B');\n\n  if (!playerA || !playerB) return null;\n\n  return (\n    <div className=\"cd-summary\">\n      <div className=\"cd-summary__entry\">\n        <div className=\"cd-summary__number\">{round.total - round.current + 1}</div>\n        <div className=\"cd-summary__entry-label\">\n          <Translate en=\"Rounds left\" pt=\"Rodadas restantes\" />\n        </div>\n      </div>\n\n      <div className=\"cd-summary__entry\">\n        <div className=\"cd-summary__number cd-summary__number--left\">{summary.deliverablesLeft}</div>\n        <div className=\"cd-summary__entry-label\">\n          <Translate en=\"Items left\" pt=\"Itens restantes\" />\n        </div>\n      </div>\n\n      <div className=\"cd-summary__entry\">\n        <div className=\"cd-summary__number cd-summary__number--A\">{summary.deliverablesLeftForA}</div>\n        <div className=\"cd-summary__entry-label\">\n          <AvatarName player={playerA} />\n        </div>\n      </div>\n\n      <div className=\"cd-summary__entry\">\n        <div className=\"cd-summary__number cd-summary__number--B\">{summary.deliverablesLeftForB}</div>\n        <div className=\"cd-summary__entry-label\">\n          <AvatarName player={playerB} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Types\nimport type { ContenderCard, TextCard, SuspectCard as SuspectCardType } from 'types/tdr';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Card } from 'components/cards';\nimport { CharacterCard } from 'components/cards/CharacterCard';\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { SuspectCard } from 'components/cards/SuspectCard';\nimport { ImageCard } from 'components/image-cards';\n// Internal\nimport type { DeckEntry } from '../utils/types';\nimport { SIDES } from '../utils/constants';\n\ntype HistoryDeliverableEntryProps = {\n  deliverable: DeckEntry;\n  deckType: string;\n  userSide: string;\n};\n\nexport function HistoryDeliverableEntry({ deliverable, deckType, userSide }: HistoryDeliverableEntryProps) {\n  const { dualTranslate } = useLanguage();\n\n  const sideIndex = SIDES.indexOf(userSide);\n\n  if (deckType === 'items') {\n    return (\n      <div\n        key={`cd-history-entry-${deliverable.data.id}`}\n        className={clsx('cd-history-entry', `cd-history-entry--${deliverable.affiliation[sideIndex]}`)}\n      >\n        <ItemCard\n          id={`${deliverable.data.id}`}\n          title={deliverable.data.name ? dualTranslate(deliverable.data.name) : undefined}\n          width={64}\n        />\n      </div>\n    );\n  }\n\n  if (deckType === 'images') {\n    return (\n      <div\n        key={`cd-history-entry-${deliverable.data.id}`}\n        className={clsx('cd-history-entry', `cd-history-entry--${deliverable.affiliation[sideIndex]}`)}\n      >\n        <ImageCard id={deliverable.data.id} cardWidth={48} className=\"history-entry-image-card\" />\n      </div>\n    );\n  }\n\n  if (deckType === 'contenders') {\n    return (\n      <div\n        key={`cd-history-entry-${deliverable.data.id}`}\n        className={clsx('cd-history-entry', `cd-history-entry--${deliverable.affiliation[sideIndex]}`)}\n      >\n        <CharacterCard\n          character={deliverable.data as ContenderCard}\n          size={96}\n          className=\"history-entry-image-card\"\n        />\n      </div>\n    );\n  }\n\n  if (deckType === 'suspects') {\n    return (\n      <div\n        key={`cd-history-entry-${deliverable.data.id}`}\n        className={clsx('cd-history-entry', `cd-history-entry--${deliverable.affiliation[sideIndex]}`)}\n      >\n        <SuspectCard suspect={deliverable.data as SuspectCardType} width={72} hideName />\n      </div>\n    );\n  }\n\n  if (deckType === 'words') {\n    return (\n      <div\n        key={`cd-history-entry-${deliverable.data.id}`}\n        className={clsx('cd-history-entry', `cd-history-entry--${deliverable.affiliation[sideIndex]}`)}\n      >\n        <Card hideHeader>{(deliverable.data as TextCard).text}</Card>\n      </div>\n    );\n  }\n\n  return <div className=\"cd-board-entry\">{deliverable.id}</div>;\n}\n","import { keyBy } from 'lodash';\nimport { useMemo } from 'react';\n// Ant Design Resources\nimport { Collapse, Table, type TableProps, type CollapseProps, Flex } from 'antd';\n// Types\nimport type { GamePlayers } from 'types/player';\n// Components\nimport { AlienText } from 'components/alien/AlienText';\nimport { AvatarName } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n// Internal\nimport type { DeckEntry, HistoryEntry } from '../utils/types';\nimport { HistoryDeliverableEntry } from './HistoryDeliverableEntry';\n\ntype HistoryProps = {\n  players: GamePlayers;\n  history: HistoryEntry[];\n  clueInputType: string;\n  deck: DeckEntry[];\n  deckType: string;\n  userSide: string;\n};\n\nexport function History({ history, players, deck, deckType, clueInputType, userSide }: HistoryProps) {\n  const deckDict = useMemo(() => keyBy(deck, 'id'), [deck]);\n\n  const columns: TableProps<HistoryEntry>['columns'] = [\n    {\n      key: 'player',\n      title: <Translate pt=\"Jogador\" en=\"Player\" />,\n      dataIndex: 'requesterId',\n      render: (requesterId) => <AvatarName player={players[requesterId]} />,\n    },\n    {\n      key: 'clue',\n      title: <Translate pt=\"Pedido\" en=\"Dica\" />,\n      dataIndex: 'clue',\n      render: (clue) => {\n        if (clueInputType === 'alien-keyboard') {\n          return <AlienText value={clue} withTranslation />;\n        }\n        return clue;\n      },\n    },\n    {\n      key: 'quantity',\n      title: <Translate pt=\"Quantidade\" en=\"Quantity\" />,\n      dataIndex: 'quantity',\n    },\n    {\n      key: 'deliverables',\n      title: <Translate pt=\"Itens\" en=\"Items\" />,\n      dataIndex: 'deliverables',\n      render: (deliverables: string[]) => {\n        return (\n          <Flex wrap=\"wrap\" gap={8}>\n            {deliverables.map((deliverableId) => (\n              <HistoryDeliverableEntry\n                key={deliverableId}\n                deliverable={deckDict[deliverableId]}\n                deckType={deckType}\n                userSide={userSide}\n              />\n            ))}\n          </Flex>\n        );\n      },\n    },\n  ];\n\n  const panels: CollapseProps['items'] = [\n    {\n      key: 'history',\n      label: <Translate pt=\"Histórico de Perguntas\" en=\"Inquiry History\" />,\n      children: <Table dataSource={history} columns={columns} pagination={false} />,\n    },\n  ];\n\n  return (\n    <Instruction contained>\n      <Collapse items={panels} />\n    </Instruction>\n  );\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Flex, Input, InputNumber } from 'antd';\n// Types\nimport type { GameRound } from 'types/game';\nimport type { GamePlayers, GamePlayer } from 'types/player';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\n// Components\nimport { AlienKeyboard } from 'components/alien/AlienKeyboard';\nimport { AlienText } from 'components/alien/AlienText';\nimport { AvatarName } from 'components/avatars';\nimport { SendButton } from 'components/buttons';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { Step, type StepProps } from 'components/steps';\nimport { RuleInstruction, StepTitle } from 'components/text';\nimport { ViewIf } from 'components/views';\n// Internal\nimport type { DeckEntry, HistoryEntry, SubmitRequestPayload, Summary } from './utils/types';\nimport { STATUS } from './utils/constants';\nimport { Board } from './components/Board';\nimport { SummaryBox } from './components/SummaryBox';\nimport { History } from './components/History';\n\ntype StepAskProps = {\n  players: GamePlayers;\n  user: GamePlayer;\n  deckType: string;\n  deck: DeckEntry[];\n  status: string;\n  history: HistoryEntry[];\n  requester: GamePlayer;\n  isTheRequester: boolean;\n  summary: Summary;\n  clueInputType: string;\n  round: GameRound;\n  onSubmitRequest: (payload: SubmitRequestPayload) => void;\n} & Pick<StepProps, 'announcement'>;\n\nexport function StepAsk({\n  players,\n  user,\n  announcement,\n  deckType,\n  deck,\n  status,\n  history,\n  requester,\n  isTheRequester,\n  summary,\n  clueInputType,\n  round,\n  onSubmitRequest,\n}: StepAskProps) {\n  const { isLoading } = useLoading();\n  const [sentence, setSentence] = useState<string>('');\n  const [clueQuantity, setQuantity] = useState<number>(1);\n  const { dualTranslate } = useLanguage();\n\n  const onSubmit = () => {\n    onSubmitRequest({ clue: sentence, clueQuantity });\n  };\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <StepTitle size=\"small\" wait={isTheRequester}>\n        {isTheRequester ? (\n          <Translate pt={<>Peça algo!</>} en={<>Ask for something!</>} />\n        ) : (\n          <Translate\n            pt={\n              <>\n                Aguarde <AvatarName player={requester} /> pedir algo\n              </>\n            }\n            en={\n              <>\n                Wait for <AvatarName player={requester} /> to ask for something\n              </>\n            }\n          />\n        )}\n      </StepTitle>\n\n      <RuleInstruction type=\"rule\">\n        {status === STATUS.IDLE ? (\n          <Translate\n            en=\"It's the first round, so any of you can give the first clue\"\n            pt=\"É a primeira rodada, então qualquer um de vocês pode dar a primeira dica\"\n          />\n        ) : (\n          <Translate\n            en=\"Players alternate asking for items, unless one player is done asking for all of their items\"\n            pt=\"Os jogadores alternam pedindo itens, a menos que um jogador tenha terminado de pedir todos os seus itens\"\n          />\n        )}\n      </RuleInstruction>\n\n      <Flex gap={8} align=\"center\">\n        <Board deck={deck} deckType={deckType} userId={user.id} userSide={user.side} />\n        <SummaryBox summary={summary} players={players} round={round} />\n      </Flex>\n\n      <ViewIf condition={clueInputType === 'alien-keyboard'}>\n        <ViewIf condition={isTheRequester}>\n          <RuleInstruction type=\"action\">\n            <Translate\n              en=\"Use the keyboard below to type your request and add the number of items you want\"\n              pt=\"Use o teclado abaixo para digitar seu pedido e adicione o número de itens que deseja\"\n            />\n          </RuleInstruction>\n        </ViewIf>\n\n        <SpaceContainer vertical>\n          <ViewIf condition={isTheRequester}>\n            <Flex gap={8} align=\"center\">\n              <AlienText value={sentence} withTranslation />\n              <strong>\n                <Translate en=\"Quantity\" pt=\"Quantidade\" />:\n              </strong>\n              <InputNumber\n                value={clueQuantity}\n                onChange={(v) => setQuantity(v ?? 1)}\n                min={0}\n                max={6}\n                size=\"large\"\n              />\n              <SendButton size=\"large\" loading={isLoading} disabled={!sentence} onClick={onSubmit}>\n                <Translate en=\"Submit\" pt=\"Enviar\" />\n              </SendButton>\n            </Flex>\n          </ViewIf>\n          <AlienKeyboard value={sentence} onChange={setSentence} disabled={!isTheRequester || user.ready} />\n        </SpaceContainer>\n      </ViewIf>\n\n      <ViewIf condition={clueInputType !== 'alien-keyboard' && isTheRequester}>\n        <RuleInstruction type=\"rule\">\n          <Translate\n            en=\"You can ask for items by typing your request in the input box\"\n            pt=\"Você pode pedir itens digitando seu pedido no campo de entrada\"\n          />\n        </RuleInstruction>\n\n        <SpaceContainer vertical>\n          <Flex gap={8} align=\"center\">\n            <Input\n              size=\"large\"\n              value={sentence}\n              onChange={(e) => setSentence(e.target.value)}\n              placeholder={dualTranslate({\n                pt: 'Digite seu pedido aqui',\n                en: 'Type your request here',\n              })}\n            />\n            <strong>\n              <Translate en=\"Quantity\" pt=\"Quantidade\" />:\n            </strong>\n            <InputNumber\n              value={clueQuantity}\n              onChange={(v) => setQuantity(v ?? 1)}\n              min={0}\n              max={6}\n              size=\"large\"\n            />\n          </Flex>\n          <SendButton size=\"large\" loading={isLoading} disabled={!sentence} onClick={onSubmit}>\n            <Translate en=\"Submit\" pt=\"Enviar\" />\n          </SendButton>\n        </SpaceContainer>\n      </ViewIf>\n\n      <History\n        history={history}\n        players={players}\n        deck={deck}\n        deckType={deckType}\n        clueInputType={clueInputType}\n        userSide={user.side}\n      />\n    </Step>\n  );\n}\n","// Types\nimport type { PhaseProps } from 'types/game';\n// Hooks\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { QuestionIcon } from 'icons/QuestionIcon';\n// Components\nimport { Translate } from 'components/language';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\n// Internal\nimport { STATUS } from './utils/constants';\nimport { useOnSubmitRequestAPIRequest } from './utils/api-requests';\nimport { StepAsk } from './StepAsk';\n\nexport function PhaseAskingForSomething({ players, state }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step } = useStep();\n  const [requester, isTheRequester] =\n    state.status === STATUS.IDLE ? [user, true] : useWhichPlayerIsThe('requesterId', state, players);\n\n  const onSubmitRequest = useOnSubmitRequestAPIRequest();\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<QuestionIcon />}\n      title={\n        isTheRequester ? (\n          <Translate pt=\"Peça algo\" en=\"Ask for something\" />\n        ) : (\n          <Translate pt=\"O outro jogador pede algo\" en=\"The other player asks for something\" />\n        )\n      }\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <Instruction>\n        <Translate\n          pt={<>Cada alienígena deve dar dicar para todos os itens marcados com sua cor</>}\n          en={<>Each alien must give clues for all items marked with their color</>}\n        />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer phase={state?.phase} allowedPhase={PHASES.COMUNICACAO_DUO.ASKING_FOR_SOMETHING}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepAsk\n          user={user}\n          players={players}\n          announcement={announcement}\n          deckType={state.deckType}\n          deck={state.deck}\n          status={state.status}\n          history={state.history}\n          requester={requester}\n          isTheRequester={isTheRequester}\n          summary={state.summary}\n          clueInputType={state.clueInputType}\n          onSubmitRequest={onSubmitRequest}\n          round={state.round}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","// Hooks\nimport { useGameActionRequest } from 'hooks/useGameActionRequest';\nimport { useLanguage } from 'hooks/useLanguage';\n// Internal\nimport type { SubmitDeliveryPayload, SubmitRequestPayload } from './types';\nimport { COMUNICACAO_DUO_ACTIONS } from './constants';\n\nexport function useOnSubmitRequestAPIRequest() {\n  const { translate } = useLanguage();\n\n  const request = useGameActionRequest({\n    actionName: 'submit-request',\n    successMessage: translate('Ação submetida com sucesso', 'Action submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua ação',\n      'Oops, the application found an error while trying to submit your action',\n    ),\n  });\n\n  return (payload: SubmitRequestPayload) => {\n    request({\n      action: COMUNICACAO_DUO_ACTIONS.SUBMIT_REQUEST,\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitDeliveryAPIRequest() {\n  const { translate } = useLanguage();\n\n  const request = useGameActionRequest({\n    actionName: 'submit-delivery',\n    successMessage: translate('Ação submetida com sucesso', 'Action submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua ação',\n      'Oops, the application found an error while trying to submit your action',\n    ),\n  });\n\n  return (payload: SubmitDeliveryPayload) => {\n    request({\n      action: COMUNICACAO_DUO_ACTIONS.SUBMIT_DELIVERY,\n      ...payload,\n    });\n  };\n}\n\nexport function useOnStopDeliveryAPIRequest() {\n  const { translate } = useLanguage();\n\n  const request = useGameActionRequest({\n    actionName: 'stop-delivery',\n\n    successMessage: translate('Ação submetida com sucesso', 'Action submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua ação',\n      'Oops, the application found an error while trying to submit your action',\n    ),\n  });\n\n  return () => {\n    request({\n      action: COMUNICACAO_DUO_ACTIONS.STOP_DELIVERY,\n    });\n  };\n}\n","import { useMemo } from 'react';\n// Ant Design Resources\nimport { Flex } from 'antd';\n// Types\nimport type { GameRound } from 'types/game';\nimport type { GamePlayers, GamePlayer } from 'types/player';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { AlienKeyboard } from 'components/alien/AlienKeyboard';\nimport { AlienText } from 'components/alien/AlienText';\nimport { HostNextPhaseButton } from 'components/host';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { Step, type StepProps } from 'components/steps';\nimport { RuleInstruction, StepTitle, TextHighlight } from 'components/text';\nimport { ViewIf, ViewOr } from 'components/views';\n// Internal\nimport type { DeckEntry, HistoryEntry, Summary } from './utils/types';\nimport { STATUS } from './utils/constants';\nimport { Board } from './components/Board';\nimport { SummaryBox } from './components/SummaryBox';\nimport { History } from './components/History';\n\ntype StepDeliverProps = {\n  players: GamePlayers;\n  user: GamePlayer;\n  deckType: string;\n  deck: DeckEntry[];\n  status: string;\n  history: HistoryEntry[];\n  summary: Summary;\n  clueInputType: string;\n  round: GameRound;\n  clue: string;\n  clueQuantity: number;\n  entryIdToAnimate: string | null;\n  nextPhase: string;\n} & Pick<StepProps, 'announcement'>;\n\nexport function StepVerification({\n  announcement,\n  players,\n  user,\n  deckType,\n  deck,\n  status,\n  history,\n  summary,\n  clueInputType,\n  round,\n  clue,\n  clueQuantity,\n  entryIdToAnimate,\n  nextPhase,\n}: StepDeliverProps) {\n  const results = useMemo(() => {\n    // Delivered nothing / skipped\n    if (status === STATUS.CONTINUE && !entryIdToAnimate) {\n      return {\n        en: (\n          <>\n            <strong>Skip!</strong> All done for this round, let's try another clue\n          </>\n        ),\n        pt: (\n          <>\n            <strong>Passa!</strong> Tudo certo para esta rodada, vamos tentar outra dica\n          </>\n        ),\n      };\n    }\n\n    // All delivered\n    if (status === STATUS.WIN) {\n      return {\n        en: <>All items have been found!</>,\n        pt: <>Todos os itens foram encontrados!</>,\n      };\n    }\n\n    // Delivered taboo\n    if (status === STATUS.LOSE) {\n      return {\n        en: (\n          <>\n            Nooooo, a <TextHighlight>taboo</TextHighlight> item has been selected!\n          </>\n        ),\n        pt: (\n          <>\n            Nãããão, um item <TextHighlight>taboo</TextHighlight> foi selecionado!\n          </>\n        ),\n      };\n    }\n\n    // Delivered incorrectly\n    if (status === STATUS.CONTINUE) {\n      if (nextPhase === PHASES.COMUNICACAO_DUO.ASKING_FOR_SOMETHING) {\n        return {\n          en: (\n            <>\n              <TextHighlight>Neutral!</TextHighlight> All done fir this round, let's try another clue.\n            </>\n          ),\n          pt: (\n            <>\n              <TextHighlight>Neutro!</TextHighlight> Vamos para a próxima rodada.\n            </>\n          ),\n        };\n      }\n    }\n\n    // Delivered correct\n    return {\n      en: (\n        <>\n          <TextHighlight>Correct!</TextHighlight> Want to try one more item?\n        </>\n      ),\n      pt: (\n        <>\n          <TextHighlight>Correto!</TextHighlight> Quer tentar outro item?\n        </>\n      ),\n    };\n  }, [status, entryIdToAnimate, nextPhase]);\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <StepTitle size=\"small\">\n        <Translate en=\"Results\" pt=\"Resultado\" />\n      </StepTitle>\n\n      <RuleInstruction type=\"event\">\n        <Translate en={results.en} pt={results.pt} />\n      </RuleInstruction>\n\n      <HostNextPhaseButton\n        round={round}\n        autoTriggerTime={status !== STATUS.CONTINUE ? 5 : 2}\n        withWaitingTimeBar\n      />\n\n      <Flex gap={8} align=\"center\" className=\"mb-4\">\n        <div className=\"cd-clue-quantity\">{clueQuantity}</div>\n        <ViewOr condition={clueInputType === 'alien-keyboard'}>\n          <AlienText value={clue} withTranslation />\n          <TextHighlight style={{ fontSize: '1.5rem', background: 'white' }}>{clue}</TextHighlight>\n        </ViewOr>\n      </Flex>\n\n      <Flex gap={8} align=\"center\">\n        <Board\n          deck={deck}\n          deckType={deckType}\n          userId={user.id}\n          userSide={user.side}\n          animateEntries={entryIdToAnimate ? [entryIdToAnimate] : []}\n        />\n        <SummaryBox summary={summary} players={players} round={round} />\n      </Flex>\n\n      <ViewIf condition={clueInputType === 'alien-keyboard'}>\n        <SpaceContainer>\n          <AlienKeyboard value={''} onChange={() => {}} disabled />\n        </SpaceContainer>\n      </ViewIf>\n\n      <History\n        history={history}\n        players={players}\n        deck={deck}\n        deckType={deckType}\n        clueInputType={clueInputType}\n        userSide={user.side}\n      />\n    </Step>\n  );\n}\n","// Types\nimport type { PhaseProps } from 'types/game';\n// Hooks\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { NuclearExplosionIcon } from 'icons/NuclearExplosionIcon';\n// Components\nimport { Translate } from 'components/language';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\n// Internal\nimport { STATUS } from './utils/constants';\nimport { StepVerification } from './StepVerification';\n\nexport function PhaseVerification({ players, state }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step } = useStep();\n\n  const announcement =\n    state.status === STATUS.LOSE ? (\n      <PhaseAnnouncement\n        icon={<NuclearExplosionIcon />}\n        title={<Translate pt=\"Nãaaaaaooooooo\" en=\"Nooooooooo\" />}\n        currentRound={state?.round?.current}\n        type=\"overlay\"\n        duration={4}\n      />\n    ) : undefined;\n\n  return (\n    <PhaseContainer phase={state?.phase} allowedPhase={PHASES.COMUNICACAO_DUO.VERIFICATION}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepVerification\n          user={user}\n          players={players}\n          deckType={state.deckType}\n          deck={state.deck}\n          status={state.status}\n          history={state.history}\n          summary={state.summary}\n          clueInputType={state.clueInputType}\n          clue={state.clue}\n          clueQuantity={state.clueQuantity}\n          round={state.round}\n          entryIdToAnimate={state.entryIdToAnimate}\n          nextPhase={state.nextPhase}\n          announcement={announcement}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","// Ant Design Resources\nimport { Flex, Tag } from 'antd';\n// Types\nimport type { GameRound } from 'types/game';\nimport type { GamePlayers, GamePlayer } from 'types/player';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\n// Components\nimport { AlienKeyboard } from 'components/alien/AlienKeyboard';\nimport { AlienText } from 'components/alien/AlienText';\nimport { SendButton } from 'components/buttons';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { Step, type StepProps } from 'components/steps';\nimport { RuleInstruction, StepTitle, TextHighlight } from 'components/text';\nimport { ViewIf, ViewOr } from 'components/views';\n// Internal\nimport type { DeckEntry, HistoryEntry, SubmitDeliveryPayload, Summary } from './utils/types';\nimport { Board } from './components/Board';\nimport { SummaryBox } from './components/SummaryBox';\nimport { History } from './components/History';\n\ntype StepDeliverProps = {\n  players: GamePlayers;\n  user: GamePlayer;\n  deckType: string;\n  deck: DeckEntry[];\n  status: string;\n  history: HistoryEntry[];\n  requester: GamePlayer;\n  isTheRequester: boolean;\n  summary: Summary;\n  clueInputType: string;\n  round: GameRound;\n  onSubmitDelivery: (payload: SubmitDeliveryPayload) => void;\n  onStopDelivery: () => void;\n  clue: string;\n  clueQuantity: number;\n} & Pick<StepProps, 'announcement'>;\n\nexport function StepDeliver({\n  players,\n  user,\n  announcement,\n  deckType,\n  deck,\n  history,\n  isTheRequester,\n  summary,\n  clueInputType,\n  round,\n  onSubmitDelivery,\n  onStopDelivery,\n  clue,\n  clueQuantity,\n}: StepDeliverProps) {\n  const { isLoading } = useLoading();\n\n  const onDeliver = (entry: DeckEntry) => {\n    onSubmitDelivery({ delivery: entry.id });\n  };\n\n  const latestHistoryEntry = history[history.length - 1];\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <StepTitle size=\"small\" wait={isTheRequester}>\n        {!isTheRequester ? (\n          <Translate pt={<>Dê um item</>} en={<>Give an item</>} />\n        ) : (\n          <Translate\n            pt={<>Aguarde o outro jogador responder com alguma coisa</>}\n            en={<>Wait for the other player to answer with something</>}\n          />\n        )}\n      </StepTitle>\n\n      <RuleInstruction type={isTheRequester ? 'wait' : 'action'}>\n        {isTheRequester ? (\n          <>\n            <Translate\n              en=\"You asked for an item and the other player now must deliver at least one item. If they are correct, they can try another\"\n              pt=\"Você pediu um item e o outro jogador agora deve entregar pelo menos um deles. Se eles acertarem, podem tentar outro\"\n            />\n            <br />\n            <Translate\n              en=\"After delivering at least one, the player may stop and skip to the next turn\"\n              pt=\"Depois de entregar pelo menos um, o jogador pode parar e pular para a próxima rodada\"\n            />\n          </>\n        ) : (\n          <>\n            <Translate\n              en=\"The other player asked for an item and you must deliver at least one item. If you are correct, you can try another\"\n              pt=\"O outro jogador pediu um item e você deve entregar pelo menos um deles. Se você acertar, você pode tentar outro\"\n            />\n            <br />\n            <Translate\n              en=\"Click on the item one by one to deliver them. After delivering at least one, you will able to stop and skip to the next turn\"\n              pt=\"Clique nos itens um por um para entregá-los. Depois de entregar pelo menos um, você poderá parar e pular para a próxima rodada\"\n            />\n          </>\n        )}\n      </RuleInstruction>\n      <ViewIf condition={latestHistoryEntry.deliverables?.length > 0 && !isTheRequester}>\n        <RuleInstruction type=\"rule\">\n          {latestHistoryEntry.deliverables?.length >= clueQuantity ? (\n            <Translate\n              en=\"You have delivered all the items you needed in this round. You can stop now or try to deliver more\"\n              pt=\"Você entregou todos os itens que precisava nesta rodada. Você pode parar agora ou tentar entregar mais\"\n            />\n          ) : (\n            <Translate\n              en={\n                <>\n                  You have delivered <Tag>{latestHistoryEntry.deliverables?.length}</Tag>things this round.\n                  You may stop now and skip to the next turn\n                </>\n              }\n              pt={\n                <>\n                  Você entregou <Tag>{latestHistoryEntry.deliverables?.length}</Tag>coisas essa rodada. Você\n                  pode parar agora e pular para a próxima rodada\n                </>\n              }\n            />\n          )}\n          <br />\n          <SendButton onClick={onStopDelivery} type=\"default\" loading={isLoading} block>\n            <Translate en=\"Stop\" pt=\"Parar\" />\n          </SendButton>\n        </RuleInstruction>\n      </ViewIf>\n\n      <Flex gap={8} align=\"center\" className=\"mb-4\">\n        <div className=\"cd-clue-quantity\">{clueQuantity}</div>\n        <ViewOr condition={clueInputType === 'alien-keyboard'}>\n          <AlienText value={clue} withTranslation />\n          <TextHighlight style={{ fontSize: '1.5rem', background: 'white' }}>{clue}</TextHighlight>\n        </ViewOr>\n      </Flex>\n\n      <Flex gap={8} align=\"center\">\n        <Board\n          deck={deck}\n          deckType={deckType}\n          userId={user.id}\n          userSide={user.side}\n          onClick={!isTheRequester ? onDeliver : undefined}\n          disabled={isLoading}\n        />\n        <SummaryBox summary={summary} players={players} round={round} />\n      </Flex>\n\n      <ViewIf condition={clueInputType === 'alien-keyboard'}>\n        <SpaceContainer>\n          <AlienKeyboard value={''} onChange={() => {}} disabled />\n        </SpaceContainer>\n      </ViewIf>\n\n      <History\n        history={history}\n        players={players}\n        deck={deck}\n        deckType={deckType}\n        clueInputType={clueInputType}\n        userSide={user.side}\n      />\n    </Step>\n  );\n}\n","// Types\nimport type { PhaseProps } from 'types/game';\n// Hooks\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { MysteryBoxIcon } from 'icons/MysteryBoxIcon';\n// Components\nimport { AlienText } from 'components/alien/AlienText';\nimport { Translate } from 'components/language';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction, TextHighlight } from 'components/text';\nimport { ViewOr } from 'components/views';\n// Internal\nimport { useOnStopDeliveryAPIRequest, useOnSubmitDeliveryAPIRequest } from './utils/api-requests';\nimport { StepDeliver } from './StepDeliver';\n\nexport function PhaseDeliveringSomething({ players, state }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step } = useStep();\n  const [requester, isTheRequester] = useWhichPlayerIsThe('requesterId', state, players);\n\n  const onSubmitDelivery = useOnSubmitDeliveryAPIRequest();\n  const onStopDelivery = useOnStopDeliveryAPIRequest();\n\n  const latestHistoryEntry = state.history[state.history.length - 1];\n  const hasADelivery = latestHistoryEntry.deliverables.length > 0;\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<MysteryBoxIcon />}\n      title={\n        isTheRequester ? (\n          <Translate pt=\"Você pediu!\" en=\"You asked for\" />\n        ) : (\n          <Translate pt=\"Por favor, me vê aí...\" en=\"Please give me...\" />\n        )\n      }\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n      duration={3}\n    >\n      <Instruction>\n        <ViewOr condition={state.clueInputType === 'alien-keyboard'}>\n          <AlienText value={state.clue ?? ''} />\n\n          <TextHighlight style={{ fontSize: '1.5rem' }}>{state.clue}</TextHighlight>\n        </ViewOr>\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer phase={state?.phase} allowedPhase={PHASES.COMUNICACAO_DUO.DELIVER_SOMETHING}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepDeliver\n          user={user}\n          players={players}\n          announcement={hasADelivery ? undefined : announcement}\n          deckType={state.deckType}\n          deck={state.deck}\n          status={state.status}\n          history={state.history}\n          requester={requester}\n          isTheRequester={isTheRequester}\n          summary={state.summary}\n          clueInputType={state.clueInputType}\n          clue={state.clue}\n          clueQuantity={state.clueQuantity}\n          onSubmitDelivery={onSubmitDelivery}\n          onStopDelivery={onStopDelivery}\n          round={state.round}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","// Ant Design Resources\nimport { Flex } from 'antd';\n// Types\nimport type { PhaseProps } from 'types/game';\n// Hooks\nimport { useUser } from 'hooks/useUser';\n// Icons\nimport { TheEndIcon } from 'icons/TheEndIcon';\n// Components\nimport { GameOverWrapper } from 'components/game-over';\nimport { Achievements } from 'components/general/Achievements';\nimport { Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\nimport { Instruction, Title } from 'components/text';\n// Internal\nimport { STATUS } from './utils/constants';\nimport achievementsReference from './utils/achievements';\nimport { Board } from './components/Board';\nimport { SummaryBox } from './components/SummaryBox';\nimport { History } from './components/History';\n// Internal;\n\nexport function PhaseGameOver({ state, players }: PhaseProps) {\n  const user = useUser(players, state);\n\n  return (\n    <GameOverWrapper state={state} players={players} announcementIcon={<TheEndIcon />}>\n      <SpaceContainer vertical>\n        {state.status === STATUS.WIN && (\n          <>\n            <Title level={3}>\n              <Translate pt=\"Vocês venceram!\" en=\"You won!\" />\n            </Title>\n            <Instruction contained>\n              <Translate pt=\"Vocês comunicaram todos os items\" en=\"You communicated all items\" />\n            </Instruction>\n          </>\n        )}\n        {state.status === STATUS.LOSE && (\n          <>\n            <Title level={3}>\n              <Translate pt=\"Vocês perderam!\" en=\"You lost!\" />\n            </Title>\n            <Instruction contained>\n              <Translate pt=\"Alguém clicou em  um tabu\" en=\"Someone selected a taboo\" />\n            </Instruction>\n          </>\n        )}\n        {state.status === STATUS.CONTINUE && (\n          <>\n            <Title level={3}>\n              <Translate pt=\"Vocês perderam!\" en=\"You lost!\" />\n            </Title>\n            <Instruction contained>\n              <Translate\n                pt=\"As rodadas acabaram antes que vocês comunicassem todos os itens\"\n                en=\"The rounds ended before you communicated all items\"\n              />\n            </Instruction>\n          </>\n        )}\n      </SpaceContainer>\n\n      <Achievements players={players} achievements={state.achievements} reference={achievementsReference} />\n\n      <Flex gap={8} align=\"center\">\n        <Board deck={state.deck} deckType={state.deckType} userId={user.id} userSide={user.side} />\n        <SummaryBox summary={state.summary} players={players} round={state.round} />\n      </Flex>\n\n      <History\n        history={state.history}\n        players={players}\n        deck={state.deck}\n        deckType={state.deckType}\n        clueInputType={state.clueInputType}\n        userSide={user.side}\n      />\n    </GameOverWrapper>\n  );\n}\n","// Types\nimport type { GameState } from 'types/game';\n// Utils\nimport { GAME_COLLECTION } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { PageError } from 'components/errors';\nimport { LoadingPage } from 'components/loaders';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { Session } from 'components/session';\n// Internal\nimport { PhaseAskingForSomething } from './PhaseAskingForSomething';\nimport { PhaseVerification } from './PhaseVerification';\nimport { PhaseDeliveringSomething } from './PhaseDeliveringSomething';\nimport { PhaseGameOver } from './PhaseGameOver';\n// Sass\nimport './utils/styles.scss';\n\nfunction getActiveComponent(state: GameState) {\n  // If phase is not defined, it is likely that the game is still loading\n  if (state && !state.phase) return LoadingPage;\n\n  switch (state.phase) {\n    case PHASES.DEFAULT.LOBBY:\n      return PhaseLobby;\n    case PHASES.DEFAULT.RULES:\n      return PhaseRules;\n    case PHASES.DEFAULT.SETUP:\n      return PhaseSetup;\n    case PHASES.COMUNICACAO_DUO.ASKING_FOR_SOMETHING:\n      return PhaseAskingForSomething;\n    case PHASES.COMUNICACAO_DUO.DELIVER_SOMETHING:\n      return PhaseDeliveringSomething;\n    case PHASES.COMUNICACAO_DUO.VERIFICATION:\n      return PhaseVerification;\n    case PHASES.DEFAULT.GAME_OVER:\n      return PhaseGameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionComunicacaoDuo() {\n  return <Session gameCollection={GAME_COLLECTION.COMUNICACAO_DUO} getActiveComponent={getActiveComponent} />;\n}\n\nexport default SessionComunicacaoDuo;\n","// Types\nimport type { AchievementReference } from 'types/achievements';\n\nconst ACHIEVEMENTS = {\n  DELIVERED_TABOO: 'DELIVERED_TABOO',\n  MOST_REQUESTED_AT_ONCE: 'MOST_REQUESTED_AT_ONCE',\n  FEWEST_REQUESTED_AT_ONCE: 'FEWEST_REQUESTED_AT_ONCE',\n  MOST_DELIVERED_ITEMS: 'MOST_DELIVERED_ITEMS',\n  FEWEST_DELIVERED_ITEMS: 'FEWEST_DELIVERED_ITEMS',\n  MOST_DELIVERED_AT_ONCE: 'MOST_DELIVERED_AT_ONCE',\n  FEWEST_DELIVERED_AT_ONCE: 'FEWEST_DELIVERED_AT_ONCE',\n  MOST_NEUTRAL_DELIVERIES: 'MOST_NEUTRAL_DELIVERIES',\n  FEWEST_NEUTRAL_DELIVERIES: 'FEWEST_NEUTRAL_DELIVERIES',\n};\n\nexport const achievementsReference: AchievementReference = {\n  [ACHIEVEMENTS.DELIVERED_TABOO]: {\n    icon: 'skull',\n    title: {\n      pt: 'Entregador de Tabu',\n      en: 'Taboo Deliverer',\n    },\n    description: {\n      pt: 'Entregou o maior número de itens tabu',\n      en: 'Delivered the most taboo items',\n    },\n  },\n  [ACHIEVEMENTS.MOST_REQUESTED_AT_ONCE]: {\n    icon: 'dialog',\n    title: {\n      pt: 'Melhores Dicas',\n      en: 'Best Clues',\n    },\n    description: {\n      pt: 'Fez o maior número de pedidos de uma vez',\n      en: 'Made the most requests at once',\n    },\n  },\n  [ACHIEVEMENTS.FEWEST_REQUESTED_AT_ONCE]: {\n    icon: 'thought',\n    title: {\n      en: 'Most Specific Clues',\n      pt: 'Dicas Mais Específicas',\n    },\n    description: {\n      pt: 'Fez o menor número de pedidos de uma vez',\n      en: 'Made the fewest requests at once',\n    },\n  },\n  [ACHIEVEMENTS.MOST_DELIVERED_ITEMS]: {\n    icon: 'double-arrow-up',\n    title: {\n      pt: 'Melhor Entregador',\n      en: 'Best Deliverer',\n    },\n    description: {\n      pt: 'Entregou o maior número de itens',\n      en: 'Delivered the most items',\n    },\n  },\n  [ACHIEVEMENTS.FEWEST_DELIVERED_ITEMS]: {\n    icon: 'double-arrow-down',\n    title: {\n      pt: 'Entregador Econômico',\n      en: 'Economical Deliverer',\n    },\n    description: {\n      pt: 'Entregou o menor número de itens',\n      en: 'Delivered the fewest items',\n    },\n  },\n  [ACHIEVEMENTS.MOST_DELIVERED_AT_ONCE]: {\n    icon: 'plus',\n    title: {\n      pt: 'Mais Eficiente',\n      en: 'Most Efficient',\n    },\n    description: {\n      pt: 'Entregou o maior número de itens de uma vez',\n      en: 'Delivered the most items at once',\n    },\n  },\n  [ACHIEVEMENTS.FEWEST_DELIVERED_AT_ONCE]: {\n    icon: 'minus',\n    title: {\n      pt: 'Mais Comedido',\n      en: 'Most Reserved',\n    },\n    description: {\n      pt: 'Entregou o menor número de itens de uma vez',\n      en: 'Delivered the fewest items at once',\n    },\n  },\n  [ACHIEVEMENTS.MOST_NEUTRAL_DELIVERIES]: {\n    icon: 'arrow-wide',\n    title: {\n      pt: 'Mais Neutro',\n      en: 'Most Neutral',\n    },\n    description: {\n      pt: 'Entregou o maior número de itens neutros',\n      en: 'Delivered the most neutral items',\n    },\n  },\n  [ACHIEVEMENTS.FEWEST_NEUTRAL_DELIVERIES]: {\n    icon: 'arrow-narrow',\n    title: {\n      pt: 'Menos Neutro',\n      en: 'Least Neutral',\n    },\n    description: {\n      pt: 'Entregou o menor número de itens neutros',\n      en: 'Delivered the fewest neutral items',\n    },\n  },\n};\n\nexport default achievementsReference;\n","import { useEffect, useState } from 'react';\n// Types\nimport type { GamePlayers, GamePlayer } from 'types/player';\n// Utils\nimport { PLACEHOLDER_PLAYER } from 'utils/constants';\n// Internal\nimport { useGlobalState } from './useGlobalState';\n\n/**\n * Gets player that is assigned to a property in the state\n * @param propertyName\n * @param state\n * @param players\n * @returns a player instance, a boolean if the player is assigned to given property\n */\nexport function useWhichPlayerIsThe(\n  propertyName = 'activePlayer',\n  state: PlainObject = {},\n  players: GamePlayers = {},\n): [GamePlayer, boolean] {\n  const [userId] = useGlobalState('userId');\n  const [activePlayer, setActivePlayer] = useState<GamePlayer>(PLACEHOLDER_PLAYER);\n  const [isUser, setIsUser] = useState(false);\n\n  // Determine if user is active as the guesser, the clue giver, the psychic, the storyteller, etc\n  useEffect(() => {\n    const activePlayer = state?.[propertyName];\n    setActivePlayer(players?.[activePlayer] ?? {});\n    setIsUser(state?.[propertyName] === userId);\n  }, [players, propertyName, state, userId]);\n\n  return [activePlayer, isUser];\n}\n","export function AlienHeartEyesIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#f7ae6a\"\n        d=\"m310 480.7 113.7-124C546 222.8 451.2 7.4 270 7.4h-28C60.8 7.5-34 222.9 88.3 356.6l113.6 124a73.3 73.3 0 0 0 108.2 0Z\"\n      />\n      <path\n        d=\"M407.8 118a58.2 58.2 0 0 1 48.6 4.7A205 205 0 0 0 295.8 9a213 213 0 0 1 112 109ZM456 223.2 425.2 241c-6.2 39-23.5 77.3-54.1 110.7L234 501.2c26.2 8.1 56 1.3 76-20.5l113.6-124A204.2 204.2 0 0 0 478 200.3a57.8 57.8 0 0 1-22.1 22.8Z\"\n        opacity=\".1\"\n      />\n\n      <path\n        fill=\"#3e5959\"\n        d=\"M254.4 406.1c44.1.7 81.2-27.6 90.4-65.6a15 15 0 0 0-14.5-18.5H182c-9.7 0-17 7.8-14.7 17.3 8.9 37.4 44.2 66.1 87.2 66.8Z\"\n      />\n      <path\n        fill=\"#384949\"\n        d=\"M330.3 322h-18.7c-12.9 39.3-49 69.2-93.5 76.4 11 4.7 23.4 7.5 36.3 7.7 44.1.7 81.2-27.6 90.4-65.6a15 15 0 0 0-14.5-18.5Z\"\n      />\n      <path\n        fill=\"#fe7d43\"\n        d=\"m123 120-3.2 5.7-5.6-3.2A58.1 58.1 0 1 0 56 223.2l93.4 53.9a15 15 0 0 0 20.5-5.5l53.9-93.4a58.1 58.1 0 1 0-100.7-58.1Z\"\n      />\n      <path\n        fill=\"#fd6930\"\n        d=\"M202.5 98.8a58 58 0 0 0-47.8-4.7 58.4 58.4 0 0 1 31.5 84.1l-52 90.1 15.2 8.8a15 15 0 0 0 20.5-5.5l53.9-93.4a58.1 58.1 0 0 0-21.3-79.4Z\"\n      />\n      <path\n        fill=\"#fe7d43\"\n        d=\"m397.8 122.5-5.6 3.2-3.3-5.6a58.1 58.1 0 1 0-100.7 58.1l53.9 93.4a15 15 0 0 0 20.5 5.5l93.4-53.9a58.1 58.1 0 0 0-58.2-100.7Z\"\n      />\n      <path\n        fill=\"#fd6930\"\n        d=\"M477.3 143.8a58.2 58.2 0 0 0-58.3-28.6 58 58 0 0 1-4.4 97.9l-79.7 46 7.2 12.5a15 15 0 0 0 20.5 5.5l93.4-54a58.2 58.2 0 0 0 21.3-79.3Z\"\n      />\n      <path\n        fill=\"#fead8a\"\n        d=\"M257.1 355.8a50 50 0 0 0-49.5 37.2 96.3 96.3 0 0 0 96.6.3c-5.6-21-24.4-37-47.1-37.5Z\"\n      />\n      <path\n        fill=\"#fd9468\"\n        d=\"M284.7 365a121.9 121.9 0 0 1-66.6 33.4 96.3 96.3 0 0 0 86.1-5 51.3 51.3 0 0 0-19.5-28.3Z\"\n      />\n      <path d=\"M193.4 392.4a100.7 100.7 0 0 0 61 21.2h1.6c45.8 0 86-29.8 96.1-71.3a22.4 22.4 0 0 0-21.8-27.8H182c-7.3 0-14 3-18.2 8.4a21 21 0 0 0-4 18 93 93 0 0 0 33.6 51.5Zm61.2 6.2a86.9 86.9 0 0 1-37.8-9.1 42.4 42.4 0 0 1 78.2.2c-12.1 5.9-26 9.1-40.4 9Zm-79-66.4a7.9 7.9 0 0 1 6.2-2.7h148.5a7.5 7.5 0 0 1 7.2 9.2A75.8 75.8 0 0 1 308 382a57.3 57.3 0 0 0-104.1-.4l-1.3-1a78 78 0 0 1-28.1-43 6 6 0 0 1 1-5.3Z\" />\n      <path d=\"M483.8 140a65.4 65.4 0 0 0-21.8-22.6A216.6 216.6 0 0 0 387.5 34 215 215 0 0 0 270 0h-28a215 215 0 0 0-117.4 34 216.5 216.5 0 0 0-74.7 83.4A65.6 65.6 0 0 0 26.2 202a212.3 212.3 0 0 0 56.6 159.7l42.6 46.6a7.5 7.5 0 0 0 10.6.4c3-2.7 3.3-7.5.5-10.5l-42.6-46.6a198 198 0 0 1-53.1-130.3c3.4 3.1 7.3 6 11.5 8.4l20.4 11.8a7.5 7.5 0 0 0 7.5-13l-20.4-11.8a50.7 50.7 0 0 1 50.6-87.7l5.7 3.2a7.5 7.5 0 0 0 10.2-2.7l3.3-5.6a50.7 50.7 0 0 1 87.7 50.6l-53.9 93.3a7.5 7.5 0 0 1-10.3 2.8L110.5 246a7.5 7.5 0 0 0-7.5 13l42.6 24.6a22.4 22.4 0 0 0 17.1 2.3 22.4 22.4 0 0 0 13.7-10.5l53.9-93.4a65.2 65.2 0 0 0 6.5-49.8A65.7 65.7 0 0 0 117 115.5a65.2 65.2 0 0 0-44.8-7c15.6-24.9 36.2-46 60.5-61.8A200 200 0 0 1 242 15h28a200 200 0 0 1 109.2 31.7c24.3 15.8 45 37 60.6 61.8a65 65 0 0 0-44.9 7A65.6 65.6 0 0 0 312.6 89a7.5 7.5 0 1 0 6 13.8 50.6 50.6 0 0 1 63.8 21.2l3.3 5.6a7.5 7.5 0 0 0 10.2 2.7l5.7-3.2a50.3 50.3 0 0 1 69.2 18.5 50.7 50.7 0 0 1-18.6 69.2l-93.3 54a7.6 7.6 0 0 1-10.3-2.8l-53.9-93.4c-9.3-16.1-9-36 .7-51.9a7.5 7.5 0 1 0-12.7-7.9 65.6 65.6 0 0 0-1 67.3l53.9 93.3a22.4 22.4 0 0 0 30.8 8.3l93.3-53.9c4.2-2.4 8-5.3 11.5-8.4a198 198 0 0 1-53 130.3l-113.6 124C291.9 489.4 274.7 497 256 497s-36-7.6-48.5-21.4L160.2 424a7.5 7.5 0 0 0-11.1 10.1l47.3 51.7a81 81 0 0 0 119.2 0l113.6-124a212.3 212.3 0 0 0 56.5-159.9c9.4-19 9.4-42.2-2-61.9Z\" />\n    </svg>\n  );\n}\n","export function AlienNeutralIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill={props.color ?? '#05e39c'}\n        d=\"M310.09 480.69l113.58-124.05C546.1 222.95 451.25 7.5 269.97 7.5h-27.93C60.77 7.5-34.08 222.95 88.34 356.64l113.58 124.05c29.07 31.75 79.1 31.75 108.17 0z\"\n      ></path>\n      <path\n        fill=\"000000\"\n        d=\"M295.82 9.01c129.22 53.22 180.74 227.47 75.27 342.65L234.17 501.2c26.15 8.12 55.97 1.29 75.92-20.5l113.58-124.05C540.13 229.46 459.96 28.3 295.81 9.01z\"\n        opacity=\".1\"\n      ></path>\n      <path\n        fill=\"#3e5959\"\n        d=\"M280.68 229v68.79c0 8.28 6.72 15 15 15h48.03c41.03 0 75.7-27.25 86.89-64.64 2.86-9.56-4.44-19.15-14.42-19.15H280.67z\"\n      ></path>\n      <path\n        fill=\"#384949\"\n        d=\"M398.37 229c-7.79 28.67-33.98 49.77-65.12 49.77h-52.57v19.02c0 8.28 6.72 15 15 15h48.03c41.03 0 75.7-27.25 86.89-64.64 2.86-9.56-4.44-19.15-14.42-19.15h-17.81z\"\n      ></path>\n      <path\n        fill=\"#3e5959\"\n        d=\"M95.84 229c-9.98 0-17.28 9.59-14.42 19.15 11.19 37.39 45.86 64.64 86.89 64.64h48.03c8.28 0 15-6.72 15-15V229H95.84z\"\n      ></path>\n      <path\n        fill=\"#384949\"\n        d=\"M168.31 312.79h48.03c8.28 0 15-6.72 15-15v-19.02H97.53c16.62 20.73 42.14 34.02 70.78 34.02z\"\n      ></path>\n      <path\n        fill=\"#7ca1b1\"\n        d=\"M129.57 229a26.06 26.06 0 00-.96 7c0 14.36 11.64 26 26 26s26-11.64 26-26c0-2.43-.34-4.77-.96-7h-50.08z\"\n      ></path>\n      <path\n        fill=\"#678d98\"\n        d=\"M179.65 229h-19.82c-1.48 12.91-12.42 22.94-25.71 23 4.76 6.09 12.16 10 20.49 10 14.36 0 26-11.64 26-26 0-2.43-.34-4.77-.96-7z\"\n      ></path>\n      <path\n        fill=\"#7ca1b1\"\n        d=\"M332.37 229a26.06 26.06 0 00-.96 7c0 14.36 11.64 26 26 26s26-11.64 26-26c0-2.43-.34-4.77-.96-7h-50.08z\"\n      ></path>\n      <path\n        fill=\"#678d98\"\n        d=\"M382.44 229h-19.61c-1.49 12.95-12.48 23-25.82 23h-.09c4.76 6.09 12.16 10 20.49 10 14.36 0 26-11.64 26-26 0-2.43-.34-4.77-.96-7z\"\n      ></path>\n      <path d=\"M204.16 383.5h103.69c4.14 0 7.5-3.36 7.5-7.5s-3.36-7.5-7.5-7.5H204.16c-4.14 0-7.5 3.36-7.5 7.5s3.36 7.5 7.5 7.5zM93.87 351.58c-27.96-30.54-45.68-67.52-51.23-106.94-5.19-36.89.17-74.82 15.52-109.68 15.35-34.87 39.7-64.44 70.41-85.52C161.39 26.91 200.63 15 242.03 15h27.93c55.84 0 107.26 21.73 144.8 61.19 2.86 3 7.6 3.12 10.6.26 3-2.86 3.12-7.6.26-10.6C385.24 23.38 329.96 0 269.97 0h-27.93c-44.45 0-86.62 12.82-121.95 37.07-33.02 22.66-59.17 54.42-75.65 91.84s-22.23 78.17-16.65 117.82c5.98 42.43 25 82.19 55.02 114.98l42.64 46.57a7.453 7.453 0 005.53 2.43c1.81 0 3.62-.65 5.06-1.97 3.05-2.8 3.26-7.54.47-10.6l-42.64-46.57z\"></path>\n      <path d=\"M448.36 94.11a7.508 7.508 0 00-10.41-2.02 7.508 7.508 0 00-2.02 10.41c24.57 36.37 37.06 80.19 35.16 123.39-2.05 46.62-20.36 90.08-52.95 125.68L304.56 475.62C291.94 489.4 274.7 497 256.01 497s-35.93-7.59-48.55-21.38l-47.29-51.65a7.516 7.516 0 00-10.6-.47 7.516 7.516 0 00-.47 10.6l47.29 51.65c15.27 16.68 37 26.24 59.62 26.24s44.34-9.57 59.62-26.24L429.21 361.7c35-38.23 54.67-84.96 56.87-135.15 2.04-46.39-11.36-93.43-37.72-132.44zM216.34 305.29h-48.03c-25.41 0-49.11-11.41-65.01-31.31-2.59-3.23-7.31-3.76-10.54-1.18a7.502 7.502 0 00-1.18 10.54c18.76 23.48 46.73 36.94 76.73 36.94h48.03c12.41 0 22.5-10.09 22.5-22.5v-89.79c0-4.14-3.36-7.5-7.5-7.5s-7.5 3.36-7.5 7.5v13.5h-128c-7.03 0-13.53 3.19-17.83 8.75-4.27 5.51-5.72 12.51-4 19.21a7.508 7.508 0 009.14 5.39 7.502 7.502 0 005.39-9.13c-.56-2.18-.08-4.46 1.33-6.28a7.484 7.484 0 015.98-2.93h25.29c.27 18.24 15.18 33 33.49 33s33.22-14.76 33.49-33h35.74v61.29c0 4.14-3.36 7.5-7.5 7.5zm-61.73-50.79c-10.03 0-18.23-8.03-18.49-18h36.99c-.27 9.97-8.46 18-18.49 18z\"></path>\n      <path d=\"M288.18 221.5V208c0-4.14-3.36-7.5-7.5-7.5s-7.5 3.36-7.5 7.5v89.79c0 12.41 10.09 22.5 22.5 22.5h48.03c21.55 0 42.01-6.85 59.16-19.82 16.58-12.54 28.99-30.36 34.92-50.17 2.04-6.8.76-13.98-3.5-19.7-4.3-5.78-10.9-9.1-18.11-9.1h-128zm87.72 15c-.27 9.97-8.46 18-18.49 18s-18.23-8.03-18.49-18h36.99zm46.35 3.06c1.4 1.88 1.82 4.23 1.16 6.44-5.02 16.78-15.53 31.88-29.59 42.51-14.52 10.98-31.85 16.78-50.11 16.78h-48.03c-4.14 0-7.5-3.36-7.5-7.5V236.5h35.74c.27 18.24 15.18 33 33.49 33s33.22-14.76 33.49-33h25.29c2.42 0 4.63 1.11 6.07 3.06zM127 148.5c.49 0 .99-.05 1.49-.15l70-14.14c4.06-.82 6.69-4.78 5.87-8.84s-4.77-6.68-8.84-5.87l-70 14.14a7.506 7.506 0 00-5.87 8.84 7.507 7.507 0 007.34 6.02zm256.52-.15c.5.1 1 .15 1.49.15 3.5 0 6.62-2.46 7.34-6.02a7.506 7.506 0 00-5.87-8.84l-70-14.14a7.501 7.501 0 00-8.84 5.87 7.506 7.506 0 005.87 8.84l70 14.14z\"></path>\n      <path fill=\"none\" d=\"M0 0h512v512H0z\"></path>\n    </svg>\n  );\n}\n","export function AlienStarEyesIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#78cbb4\"\n        d=\"M449.9 165a16.7 16.7 0 0 0-8 13.3l-2.9 49c-.5 8.8-8 14-14.8 14-3.5 0-6.8-1.2-9.6-3.6l-37.2-32a16.8 16.8 0 0 0-15.2-3.6l-47.5 12.5a14.7 14.7 0 0 1-17.4-20l19-45.3c2.2-5.1 1.6-11-1.3-15.6l-26.6-41.3c-3-4.7-3.2-10.3-.5-15a14.5 14.5 0 0 1 14.2-7.7l49 4 1.3.1c5 0 9.8-2.2 13-6.1l20.8-25.4A205.9 205.9 0 0 0 270 7.5h-28c-44.6 0-84 13-116.2 34.8l20.8 25.4a16.7 16.7 0 0 0 14.4 6l49-4a14.5 14.5 0 0 1 14.1 7.6 14.6 14.6 0 0 1-.5 15l-26.5 41.4c-3 4.7-3.5 10.5-1.4 15.6l19 45.3c2 4.6 1.5 9.7-1.3 13.8a14.7 14.7 0 0 1-16 6.2L149.8 202a17 17 0 0 0-15.2 3.5l-37.2 32.1A14.8 14.8 0 0 1 73 227.4l-2.8-49a16.8 16.8 0 0 0-8-13.5l-19-11.4c-21 66.2-10 143 45.2 203.1l113.5 124.1a73.3 73.3 0 0 0 108.2 0l113.6-124a204.9 204.9 0 0 0 45.2-203.2l-19 11.4Z\"\n      />\n      <path\n        fill=\"#3e5959\"\n        d=\"M341.7 263.4v4.7a34.2 34.2 0 0 1-34.2 34.2h-103a34.2 34.2 0 0 1-34.2-34.2v-4.7a17.9 17.9 0 0 0-14.3 17.5v18.9c0 54.6 44.7 101 99.3 101.3A100 100 0 0 0 356 301v-20.2c0-8.7-6.2-15.9-14.3-17.5Z\"\n      />\n      <path\n        fill=\"#231f20\"\n        d=\"m369.8 60.7 15.6-19A203.4 203.4 0 0 0 295.8 9a208.5 208.5 0 0 1 74 51.7ZM450.4 165.8a15.7 15.7 0 0 0-7.6 12.6l-2.8 49a15.7 15.7 0 0 1-15 14.9 211.7 211.7 0 0 1-54 109.4L234.3 501.2c26.1 8.1 56 1.3 75.9-20.5l113.6-124A204.8 204.8 0 0 0 469 154.4l-18.7 11.4Z\"\n        opacity=\".1\"\n      />\n      <path\n        fill=\"#384949\"\n        d=\"M341.7 263.4v4.7a34.2 34.2 0 0 1-26.2 33.2A100 100 0 0 1 213 391a96.8 96.8 0 0 0 42.3 10A100 100 0 0 0 356 301V281c0-8.7-6.1-15.9-14.3-17.5Z\"\n      />\n      <path\n        fill=\"#fead8a\"\n        d=\"M257.1 348.7a51.8 51.8 0 0 0-51.2 38.5 97.3 97.3 0 0 0 49.4 13.9c18.5.1 35.8-4.8 50.7-13.4a52 52 0 0 0-48.9-39Z\"\n      />\n      <path\n        fill=\"#fd9468\"\n        d=\"M288.3 360.2a99.7 99.7 0 0 1-73 30.9h-2.2a99.5 99.5 0 0 0 92.9-3.3c-3-11-9.2-20.7-17.7-27.6Z\"\n      />\n      <path\n        fill=\"#fff\"\n        d=\"M307.5 302.3a34.2 34.2 0 0 0 34.2-34.2v-4.7c-1.1-.3-2.3-.4-3.6-.4H174c-1.3 0-2.5.1-3.6.4v4.7a34.2 34.2 0 0 0 34.2 34.2h103Z\"\n      />\n      <path\n        fill=\"#eef5f6\"\n        d=\"M338.1 263H316v28c0 3.5-.2 7-.5 10.3a34.2 34.2 0 0 0 26.2-33.2v-4.7c-1.1-.3-2.3-.4-3.6-.4Z\"\n      />\n      <path\n        fill=\"#ffe177\"\n        d=\"m423.3 35.4 11.3 47.8c1.1 5 4.7 9.2 9.6 11.1l45.8 17.9a15.8 15.8 0 0 1 2.4 28.1l-42 25.5a15.7 15.7 0 0 0-7.6 12.6l-2.8 49a15.8 15.8 0 0 1-26 11l-37.2-32c-4-3.4-9.3-4.6-14.4-3.3L315 215.5a15.8 15.8 0 0 1-18.5-21.3l19-45.3c2-4.8 1.5-10.3-1.3-14.7L287.6 93c-7-11 1.5-25.3 14.5-24.2l49 4c5.2.5 10.2-1.7 13.5-5.7l31.2-38a15.8 15.8 0 0 1 27.5 6.4Z\"\n      />\n      <path\n        fill=\"#ffd15b\"\n        d=\"M490 112.2 453 97.8A115.7 115.7 0 0 1 306 171.6l-9.5 22.6c-5 12 5.9 24.7 18.5 21.4l47.5-12.5c5-1.3 10.4-.1 14.3 3.3l37.3 32c9.9 8.6 25.2 2 26-11l2.8-49c.3-5.2 3.1-9.9 7.6-12.6l42-25.5a15.8 15.8 0 0 0-2.5-28.1Z\"\n      />\n      <path\n        fill=\"#ffe177\"\n        d=\"M88.7 35.4 77.4 83.2c-1.1 5-4.7 9.2-9.6 11.1L22 112.2a15.8 15.8 0 0 0-2.4 28.1l42 25.5c4.4 2.7 7.3 7.4 7.6 12.6l2.8 49c.8 13 16.1 19.6 26 11l37.3-32c3.9-3.4 9.2-4.6 14.2-3.3l47.6 12.4a15.8 15.8 0 0 0 18.5-21.3l-19-45.3c-2-4.8-1.5-10.3 1.3-14.7L224.4 93c7.1-11-1.5-25.3-14.5-24.2l-49 4c-5.2.5-10.2-1.7-13.5-5.7l-31.1-38a15.8 15.8 0 0 0-27.6 6.4Z\"\n      />\n      <path\n        fill=\"#ffd15b\"\n        d=\"M224.4 93c7-11-1.5-25.4-14.5-24.3L180.3 71A115.6 115.6 0 0 1 69.4 184l2.6 43.5c.7 13 16.1 19.6 26 11l37.2-32c4-3.4 9.3-4.7 14.3-3.3l47.6 12.4a15.8 15.8 0 0 0 18.5-21.3l-19-45.3c-2-4.8-1.5-10.3 1.3-14.7L224.4 93Z\"\n      />\n      <path d=\"M219.5 263c0-4.1-3.4-7.5-7.5-7.5h-38.1c-14 0-25.4 11.4-25.4 25.4v18.9c0 28.4 11.1 55.5 31.3 76.2a105.9 105.9 0 0 0 75.5 32.6h.7c28.6 0 55.5-11.1 75.8-31.3a106.8 106.8 0 0 0 31.7-76.2v-20.2c0-14-11.4-25.4-25.4-25.4H247a7.5 7.5 0 0 0 0 15h87a26.7 26.7 0 0 1-26.5 24.3h-103a26.7 26.7 0 0 1-26.6-24.3h34c4.2 0 7.6-3.4 7.6-7.5Zm35.9 130.6c-14.2-.1-28-3.5-40.4-10a44.2 44.2 0 0 1 81.9.5 92.3 92.3 0 0 1-41.5 9.5Zm-51-83.8h103.1a41.8 41.8 0 0 0 40.6-32c.2 1 .4 2 .4 3v20.3a91.9 91.9 0 0 1-38.7 75.2 59 59 0 0 0-107.7-.7 96 96 0 0 1-38.6-75.8v-19c0-1 .2-2 .4-3a41.8 41.8 0 0 0 40.6 32Z\" />\n      <path d=\"M507.4 124.8a23.1 23.1 0 0 0-14.7-19.6l-45.8-17.9a8.2 8.2 0 0 1-5-5.8l-1.7-7a7.5 7.5 0 1 0-14.6 3.5l1.6 7c1.8 7.4 7.1 13.5 14.3 16.3l45.7 17.8c3 1.2 5 3.8 5.3 7s-1.2 6.1-4 7.8l-42 25.5c-6.5 4-10.7 11-11.2 18.5l-2.8 49.1c-.2 3.2-2 5.9-5 7.1-3 1.3-6.2.8-8.6-1.3l-37.3-32c-5.8-5-13.6-7-21-5L313 208.3c-3.1.8-6.2-.2-8.3-2.6a8.1 8.1 0 0 1-1.4-8.6l19-45.3c3-7 2.3-15.2-1.9-21.6L294 89a8.1 8.1 0 0 1-.2-8.8 8.1 8.1 0 0 1 7.8-4l49 4.1c7.6.7 15-2.5 20-8.4l31-38c2-2.5 5.2-3.6 8.3-2.9 3.2.8 5.5 3 6.2 6.2l1.6 6.7a7.5 7.5 0 1 0 14.6-3.4l-1.6-6.8c-2-8.6-8.7-15.3-17.4-17.3s-17.6 1-23.3 8l-6.1 7.5A215.3 215.3 0 0 0 270 0h-28c-41 0-80.2 11-113.8 31.8l-6.1-7.5a23.1 23.1 0 0 0-23.3-8c-8.7 2-15.4 8.7-17.4 17.4L70.1 81.5a8.3 8.3 0 0 1-5 5.8l-45.8 17.9a23.1 23.1 0 0 0-14.7 19.6 23.1 23.1 0 0 0 11.1 22l18.3 11a213 213 0 0 0 48.8 203.9l42.6 46.6a7.5 7.5 0 0 0 10.6.4c3-2.7 3.3-7.5.5-10.5l-42.6-46.6a198.1 198.1 0 0 1-49.3-95.3c-6-29.5-5-60.6 2.8-90.3l10.3 6.2a8.3 8.3 0 0 1 4 6.6l2.8 49a23.1 23.1 0 0 0 23.3 22c5.5 0 10.8-2 15.1-5.7l37.3-32c2-1.8 4.8-2.5 7.5-1.8l47.5 12.5c8.6 2.3 17.6-.5 23.5-7.3 5.8-6.7 7.3-16 3.8-24.2l-19-45.3c-1-2.5-.8-5.4.7-7.7l26.6-41.4c4.8-7.5 5-16.9.3-24.5-4.6-7.6-13-12-21.9-11.2l-49 4c-2.6.3-5.3-.8-7-3l-15.4-18.7A200.5 200.5 0 0 1 242.1 15H270c37.5 0 73.4 9.8 104.2 28.5l-15.4 18.8a8.2 8.2 0 0 1-7 3l-49-4.1a23.1 23.1 0 0 0-21.9 11.2c-4.6 7.6-4.4 17 .4 24.6l26.5 41.3a8.3 8.3 0 0 1 .7 7.7l-19 45.3a23.2 23.2 0 0 0 27.4 31.5l47.5-12.5c2.6-.7 5.4 0 7.5 1.8l37.2 32a23.1 23.1 0 0 0 24.3 3.8 23.1 23.1 0 0 0 14.1-20l2.8-49a8.3 8.3 0 0 1 4-6.7l10.3-6.2c7.8 29.7 8.8 60.8 2.8 90.3a198.2 198.2 0 0 1-49.2 95.3l-113.6 124C292 489.4 274.7 497 256 497s-35.9-7.6-48.5-21.4L160.2 424a7.5 7.5 0 0 0-11 10.1l47.2 51.7a81 81 0 0 0 119.2 0l113.6-124a213 213 0 0 0 48.8-204l18.3-11c7.7-4.7 12-13 11.1-22ZM161.5 80.2l49-4a8.1 8.1 0 0 1 7.8 4c1.6 2.7 1.6 6-.2 8.7l-26.5 41.3a23.3 23.3 0 0 0-2 21.6l19.1 45.3c1.2 3 .7 6.2-1.4 8.6a8.1 8.1 0 0 1-8.3 2.6l-47.5-12.5c-7.5-2-15.3 0-21.1 5l-37.3 32a8.1 8.1 0 0 1-8.6 1.4c-3-1.3-4.8-4-5-7.2l-2.8-49a23.2 23.2 0 0 0-11.2-18.6l-42-25.5c-2.8-1.6-4.3-4.6-4-7.8s2.3-5.8 5.3-7l45.7-17.8A23.3 23.3 0 0 0 84.7 85L96 37c.7-3.1 3-5.4 6.2-6.1.6-.2 1.3-.3 2-.3a8 8 0 0 1 6.2 3l31.2 38.1c4.8 6 12.3 9 19.9 8.4Z\" />\n    </svg>\n  );\n}\n","export function MysteryBoxIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#b3ceec\"\n        d=\"M498.5 132h-485c-3.31 0-6-2.69-6-6V76c0-3.31 2.69-6 6-6h485c3.31 0 6 2.69 6 6v50c0 3.31-2.69 6-6 6z\"\n      ></path>\n      <path\n        fill=\"#98bce5\"\n        d=\"M498.5 70h-30c3.31 0 6 2.69 6 6v50c0 3.31-2.69 6-6 6h30c3.31 0 6-2.69 6-6V76c0-3.31-2.69-6-6-6z\"\n      ></path>\n      <path fill=\"#e8ad8c\" d=\"M23.92 132h464.16v310H23.92V132z\"></path>\n      <path fill=\"#e19974\" d=\"M458.08 132h30v310h-30V132z\"></path>\n      <path\n        fill=\"#fff0ad\"\n        d=\"M322.1 215.45c-35.88-36.94-94.91-37.3-131.17-1.05-31.32 31.3-35.32 79.58-12.01 115.26.33.5.44 1.11.31 1.69l-6.29 28.53c-.35 1.59 1.07 3 2.66 2.65l28.55-6.28c.58-.13 1.19-.01 1.69.31 35.84 23.38 84.38 19.26 115.69-12.37 35.06-35.42 35.32-92.96.57-128.74z\"\n      ></path>\n      <path\n        fill=\"#ffe177\"\n        d=\"M322.1 215.45c-21.89-22.54-52.4-31.43-81.1-26.73 18.78 3.09 36.79 11.98 51.1 26.73 34.75 35.78 34.49 93.32-.57 128.74-14.19 14.34-31.93 23.01-50.42 26.04 28.42 4.67 58.6-4 80.42-26.04 35.06-35.42 35.32-92.96.57-128.74z\"\n      ></path>\n      <path fill=\"#b5adb6\" d=\"M71.69 70h32v372h-32V70zm336.62 0h32v372h-32V70z\"></path>\n      <path d=\"M498.5 62.5H157.41c-9.92.31-9.91 14.7 0 15h243.4v47H111.19v-47h11.15c9.92-.31 9.91-14.7 0-15H13.5C6.06 62.5 0 68.56 0 76v50c0 7.44 6.06 13.5 13.5 13.5h2.92V442c0 4.14 3.36 7.5 7.5 7.5h464.16c4.14 0 7.5-3.36 7.5-7.5v-49.02c-.31-9.92-14.7-9.91-15 0v41.52h-32.77v-295h32.77v218.4c.31 9.92 14.7 9.91 15 0V139.5h2.92c7.44 0 13.5-6.06 13.5-13.5V76c0-7.44-6.06-13.5-13.5-13.5zm-97.69 77v295H111.19v-295h289.62zM15 77.5h49.19v47H15v-47zm16.42 62h32.77v295H31.42v-295zm47.77 295v-357h17v357h-17zm336.62 0v-357h17v357h-17zm81.19-310h-49.19v-47H497v47z\"></path>\n      <path d=\"M256.02 319.31h-.01c-9.91.31-9.9 14.7.01 15 9.91-.31 9.91-14.7 0-15zm-23.7-55.87c4.14 0 7.5-3.36 7.5-7.5 0-.76.05-1.52.16-2.27 1.12-8.1 8.2-14.09 16.36-13.91 8.43.17 15.38 6.89 15.82 15.31.23 4.49-1.34 8.76-4.42 12.01-3.09 3.25-7.26 5.05-11.73 5.05-4.14 0-7.5 3.36-7.5 7.5v19.15c.31 9.92 14.7 9.91 15 0v-12.57c14.18-3.32 24.67-17.3 23.64-31.9-.84-16.23-14.24-29.2-30.5-29.52-15.73-.34-29.36 11.21-31.52 26.84-1.11 5.74.48 11.51 7.2 11.84z\"></path>\n      <path d=\"M171.44 331.87l-5.81 26.39c-.72 3.26.26 6.61 2.62 8.97a9.673 9.673 0 008.97 2.62l26.41-5.81c16.09 9.99 34.25 14.87 52.34 14.86 25.94 0 51.71-10.04 70.9-29.44 61.4-61.5 16.9-169.7-70.15-169.49-50.15-1.37-95.65 39.76-99.75 89.67-2.13 21.75 3 43.75 14.46 62.22zm24.8-112.17c16.12-16.11 37.58-24.88 60.38-24.72 73.95-.18 111.73 91.73 59.6 143.94-28.12 28.41-72.81 33.19-106.27 11.36a9.75 9.75 0 00-7.4-1.35l-20.49 4.51 4.51-20.47c.56-2.53.06-5.24-1.36-7.41-21.71-33.24-17.07-77.76 11.04-105.86z\"></path>\n      <path fill=\"none\" d=\"M0 0h512v512H0z\"></path>\n    </svg>\n  );\n}\n","export function NuclearExplosionIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ff9256\"\n        d=\"M460 462c-7.37 0-14.27 1.99-20.2 5.47C437.51 441.98 414.09 422 388 422c-20.81 0-40.66 12.72-48.18 30.81-19.59-10.66-34.1-29.77-38.28-52.97-3.259-18.064-6.229-45.575-5.54-63.84 1.01-26.498 8.068-64.582 14.52-87.77v-.01L256 234.72l-54.52 13.5v.01c6.512 23.404 13.509 61.25 14.52 87.77.689 18.256-2.278 45.761-5.54 63.84-4.18 23.2-18.69 42.31-38.28 52.97C164.66 434.72 144.81 422 124 422c-26.09 0-49.51 19.98-51.8 45.47A39.771 39.771 0 0052 462c-22.09 0-42 17.91-42 40h492c0-22.09-19.91-40-42-40z\"\n      ></path>\n      <path\n        fill=\"#fff2a0\"\n        d=\"M111.01 263.17l-.31.69C101.94 267.81 92.23 270 82 270c-38.66 0-72-31.34-72-70s33.34-70 72-70c4.77 0 9.42.48 13.92 1.38A59.937 59.937 0 0192 110c0-33.14 28.86-60 62-60 6.72 0 13.47 1.11 19.87 3.15l.13-.4C192.08 26.9 222.07 10 256 10s63.92 16.9 82 42.75l.13.4C344.53 51.11 351.28 50 358 50c33.14 0 62 26.86 62 60 0 7.53-1.39 14.74-3.92 21.38 4.5-.9 9.15-1.38 13.92-1.38 38.66 0 72 31.34 72 70s-33.34 70-72 70c-10.23 0-19.94-2.19-28.7-6.14l-1.16-.16c-6.55 3.99-14.2 6.3-22.14 6.3-20.57 0-39.52-15.53-41.75-35.5C325.071 244.623 310.726 250 296 250c-15.37 0-29.38-5.78-40-15.28-10.62 9.5-24.63 15.28-40 15.28-14.726 0-29.071-5.377-40.25-15.5-2.23 19.97-21.18 35.5-41.75 35.5-8.28 0-16.26-2.52-22.99-6.83z\"\n      ></path>\n      <circle cx=\"458\" cy=\"50\" r=\"20\" fill=\"#eefaff\"></circle>\n      <circle cx=\"52\" cy=\"90\" r=\"10\"></circle>\n      <path d=\"M330.712 250.792C339.027 267.992 357.436 280 378 280c7.947 0 15.824-1.863 23.042-5.407C410.252 278.182 419.973 280 430 280c44.241 0 82-35.776 82-80 0-44.671-38.406-80.372-82.709-79.997.472-3.295.709-6.635.709-10.003 0-38.96-33.637-70-72-70-5.252 0-10.525.587-15.753 1.722C321.445 15.482 289.677 0 256 0s-65.445 15.482-86.246 41.722C164.525 40.587 159.252 40 154 40c-38.297 0-72 30.977-72 70 0 3.368.237 6.708.709 10.003C38.655 119.622 0 155.095 0 200c0 44.229 37.763 80 82 80 10.026 0 19.746-1.818 28.955-5.406C118.173 278.141 126.034 280 134 280c20.563 0 38.972-12.009 47.288-29.207a69.796 69.796 0 0011.969 5.409c3.566 13.893 7.597 33.5 10.195 52.704C182.518 311.422 146 316.887 146 336c0 19.384 37.161 24.767 59.085 27.284-.972 11.756-2.559 24.211-4.467 34.783-2.948 16.368-11.844 30.726-24.892 40.591C164.45 422.55 144.623 412 124 412c-27.163 0-51.035 17.885-59.051 41.702A50.113 50.113 0 0052 452c-28.187 0-52 22.897-52 50 0 5.522 4.478 10 10 10h201c5.522 0 10-4.478 10-10s-4.478-10-10-10H21.979c4.606-11.404 16.672-20 30.021-20a29.937 29.937 0 0115.14 4.095 10.001 10.001 0 0015.021-7.73C83.962 448.313 102.73 432 124 432c16.63 0 33.009 10.366 38.945 24.648a10 10 0 0014.014 4.946c22.924-12.475 38.722-34.337 43.341-59.979 2.007-11.123 3.678-24.211 4.705-36.574a472.94 472.94 0 0020.994.86V382c0 5.523 4.478 10 10 10s10-4.477 10-10v-16.099a472.706 472.706 0 0020.993-.86c1.028 12.359 2.698 25.448 4.705 36.571 4.62 25.644 20.418 47.506 43.342 59.981a10.003 10.003 0 0014.014-4.946C354.991 442.366 371.37 432 388 432c21.27 0 40.038 16.313 41.84 36.365a10.002 10.002 0 0015.021 7.73 29.934 29.934 0 0115.14-4.095c13.349 0 25.414 8.596 30.021 20H301c-5.522 0-10 4.478-10 10s4.478 10 10 10h201c5.522 0 10-4.478 10-10 0-27.103-23.813-50-52-50-4.394 0-8.747.578-12.949 1.702C439.034 429.881 415.159 412 388 412c-20.623 0-40.45 10.55-51.727 26.658-13.048-9.866-21.943-24.224-24.893-40.594-1.907-10.571-3.494-23.028-4.466-34.78C328.184 360.842 366 355.407 366 336c0-19.093-35.871-24.501-57.452-27.094 2.598-19.207 6.629-38.813 10.195-52.706a69.968 69.968 0 0011.969-5.408zm-124.623 92.477c-17.835-2.116-28.82-4.987-34.935-7.266 6.051-2.252 16.883-5.091 34.421-7.21.195 2.656.341 5.194.432 7.585.08 2.108.105 4.417.082 6.891zm79.844 1.801a452.42 452.42 0 01-19.933.83V290c0-5.523-4.478-10-10-10s-10 4.477-10 10v55.899c-6.81-.137-13.47-.413-19.933-.83.427-25.405-5.603-60.51-11.307-85.089.413.007.826.019 1.24.019a69.888 69.888 0 0040-12.553A69.882 69.882 0 00296 260c.414 0 .827-.012 1.24-.019-5.691 24.522-11.735 59.659-11.307 85.089zm54.913-9.067c-6.114 2.278-17.1 5.149-34.935 7.266-.023-2.473.003-4.781.083-6.888.091-2.393.237-4.931.432-7.588 17.537 2.119 28.369 4.958 34.42 7.21zM296 240a49.934 49.934 0 01-33.333-12.733 10 10 0 00-13.334 0A49.934 49.934 0 01216 240a49.907 49.907 0 01-33.538-12.913 9.998 9.998 0 00-16.65 6.303C164.173 248.063 149.902 260 134 260c-6.147 0-12.232-1.816-17.598-5.252C107.384 248.974 102 239.723 102 230c0-5.523-4.478-10-10-10s-10 4.477-10 10c0 10.577 3.609 20.728 10.054 29.156A60.542 60.542 0 0182 260c-33.607 0-62-27.477-62-60s28.393-60 62-60c4.001 0 8.024.399 11.959 1.186a10 10 0 0011.306-13.367A49.853 49.853 0 01102 110c0-27.103 23.813-50 52-50 15.394 0 30.485 6.857 39.269 16.67 3.686 4.116 10.007 4.464 14.121.781 4.115-3.684 4.465-10.005.781-14.121-5-5.584-11.31-10.443-18.4-14.253C206.706 30.695 230.692 20 256 20s49.294 10.696 66.229 29.077c-7.09 3.81-13.401 8.668-18.4 14.253-3.684 4.115-3.334 10.437.781 14.121 4.116 3.683 10.436 3.333 14.121-.781C327.527 66.843 342.632 60 358 60c28.187 0 52 22.897 52 50 0 6.14-1.099 12.135-3.265 17.819a10 10 0 0011.306 13.367A61.112 61.112 0 01430 140c33.607 0 62 27.477 62 60s-28.393 60-62 60c-3.391 0-6.732-.287-10.012-.837C426.419 250.76 430 240.627 430 230c0-5.523-4.478-10-10-10s-10 4.477-10 10c0 10.018-5.629 19.422-15.063 25.16-5.198 3.166-11.054 4.84-16.937 4.84-15.902 0-30.173-11.937-31.812-26.61a10.003 10.003 0 00-6.398-8.243 9.997 9.997 0 00-10.252 1.94A49.928 49.928 0 01296 240z\"></path>\n      <path d=\"M256 452c5.522 0 10-4.477 10-10v-20c0-5.523-4.478-10-10-10s-10 4.477-10 10v20c0 5.523 4.478 10 10 10zM458 80c16.542 0 30-13.458 30-30s-13.458-30-30-30-30 13.458-30 30 13.458 30 30 30zm0-40c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10z\"></path>\n      <circle cx=\"256\" cy=\"502\" r=\"10\"></circle>\n    </svg>\n  );\n}\n","export function QuestionIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#0573ce\"\n        d=\"M441.421 22.803H70.579C35.741 22.803 7.5 51.045 7.5 85.882v262.21c0 34.838 28.241 63.079 63.079 63.079h91.616l66.896 66.896c14.861 14.861 38.956 14.861 53.817 0l66.896-66.896h91.616c34.838 0 63.079-28.241 63.079-63.079V85.882c.001-34.837-28.24-63.079-63.078-63.079z\"\n      ></path>\n      <path\n        fill=\"#0067c5\"\n        d=\"M35.51 85.882v262.21c0 34.84 28.24 63.08 63.08 63.08H70.58c-34.84 0-63.08-28.24-63.08-63.08V85.882c0-34.84 28.24-63.08 63.08-63.08h28.01c-34.84 0-63.08 28.24-63.08 63.08zm234.5 400.66c-13.68 5.41-29.86 2.58-40.92-8.48l-66.89-66.89h20.665c4.697 0 9.201 1.865 12.522 5.186l61.713 61.704c3.8 3.8 8.21 6.63 12.91 8.48z\"\n      ></path>\n      <path\n        fill=\"#f9f7f8\"\n        d=\"M256.002 297.061c-14.574 0-26.39-11.815-26.39-26.39v-11.194c0-26.048 16.402-49.348 40.816-57.979 18.364-6.493 30.197-24.654 28.774-44.162-1.557-21.362-18.853-38.527-40.231-39.927-22.612-1.494-42.759 14.837-45.872 37.149a44.164 44.164 0 00-.419 6.076c0 14.574-11.815 26.39-26.39 26.39-14.574 0-26.39-11.815-26.39-26.39 0-4.468.312-8.966.926-13.369 6.914-49.552 51.539-85.807 101.592-82.522 47.518 3.112 85.961 41.269 89.423 88.756 3.146 43.161-23.098 83.361-63.82 97.76-3.368 1.191-5.631 4.494-5.631 8.219v11.194c.002 14.574-11.813 26.389-26.388 26.389zm0 78.522c-14.574 0-26.39-11.815-26.39-26.39v-.219c0-14.574 11.815-26.39 26.39-26.39 14.574 0 26.39 11.815 26.39 26.39v.219c0 14.575-11.815 26.39-26.39 26.39z\"\n      ></path>\n      <path\n        fill=\"#dedbee\"\n        d=\"M184.155 147.268a96.29 96.29 0 00-.923 13.366c0 10.387 5.997 19.376 14.723 23.674a26.227 26.227 0 01-11.665 2.715c-14.565 0-26.389-11.81-26.389-26.389 0-4.468.316-8.963.936-13.366 6.907-49.562 51.539-85.81 101.588-82.528 1.793.119 3.572.29 5.339.514-42.378 5.219-77.532 38.489-83.609 82.014zm109.603 54.228c-24.412 8.634-40.822 31.938-40.822 57.985v11.191c0 10.387 6.011 19.377 14.737 23.674a26.227 26.227 0 01-11.665 2.715c-14.579 0-26.389-11.81-26.389-26.389V259.48c0-26.046 16.398-49.351 40.822-57.985 18.362-6.498 30.185-24.649 28.762-44.157-1.331-18.348-14.275-33.599-31.451-38.41a43.132 43.132 0 0114.552-1.516c21.38 1.397 38.674 18.559 40.229 39.926 1.423 19.509-10.414 37.659-28.775 44.158zm-26.086 171.37a26.227 26.227 0 01-11.665 2.715c-14.579 0-26.389-11.81-26.389-26.389v-.224c0-14.565 11.81-26.389 26.389-26.389 4.192 0 8.146.975 11.665 2.715-8.726 4.31-14.737 13.3-14.737 23.674v.224c0 10.387 6.011 19.376 14.737 23.674z\"\n      ></path>\n      <path d=\"M256 496.692c-11.667 0-23.332-4.44-32.213-13.321l-64.693-64.704H70.58c-38.918 0-70.58-31.662-70.58-70.58V85.878c0-38.913 31.662-70.57 70.58-70.57h370.84c38.918 0 70.58 31.657 70.58 70.57v262.21c0 31.374-21.052 59.288-51.193 67.883a7.499 7.499 0 01-9.269-5.156 7.5 7.5 0 015.156-9.269c23.731-6.767 40.306-28.75 40.306-53.458V85.878c0-30.641-24.933-55.57-55.58-55.57H70.58C39.933 30.308 15 55.236 15 85.878v262.21c0 30.647 24.933 55.58 55.58 55.58h91.62c1.989 0 3.897.79 5.304 2.197l66.89 66.9c11.914 11.914 31.299 11.914 43.213 0l66.889-66.9a7.5 7.5 0 015.304-2.197h74.12a7.5 7.5 0 010 15h-71.013l-64.693 64.703c-8.881 8.881-20.548 13.321-32.214 13.321z\"></path>\n      <path d=\"M256 304.558c-18.687 0-33.89-15.203-33.89-33.89v-11.19c0-29.219 18.414-55.362 45.82-65.051 15.19-5.37 24.973-20.396 23.79-36.541-1.281-17.655-15.571-31.837-33.24-32.994-18.715-1.231-35.38 12.253-37.952 30.702a36.335 36.335 0 00-.348 5.044c0 18.687-15.203 33.89-33.89 33.89s-33.89-15.203-33.89-33.89c0-4.841.338-9.692 1.003-14.417a102.082 102.082 0 018.645-29.195 7.5 7.5 0 0113.584 6.362 87.145 87.145 0 00-7.374 24.918 88.583 88.583 0 00-.858 12.331c0 10.416 8.474 18.89 18.89 18.89s18.89-8.474 18.89-18.89c0-2.405.166-4.802.493-7.126 3.65-26.185 27.296-45.335 53.79-43.588 25.097 1.644 45.397 21.794 47.217 46.871 1.675 22.865-12.203 44.157-33.751 51.774-21.425 7.575-35.82 28.033-35.82 50.909v11.19c0 10.416 8.474 18.89 18.89 18.89s18.89-8.474 18.89-18.89v-11.19c0-6.901 4.273-13.047 10.633-15.292 37.546-13.274 61.742-50.343 58.837-90.142-3.189-43.774-38.626-78.945-82.43-81.812-24.875-1.633-49.509 7.462-67.584 24.956a7.499 7.499 0 01-10.605-.174 7.5 7.5 0 01.173-10.605c21.112-20.432 49.903-31.056 78.998-29.145 51.231 3.353 92.678 44.49 96.408 95.689 3.396 46.521-24.896 89.854-68.8 105.376-.314.111-.63.541-.63 1.149v11.19c.001 18.687-15.202 33.891-33.889 33.891zm.002 78.525c-18.687 0-33.89-15.203-33.89-33.89v-.219c0-18.687 15.203-33.89 33.89-33.89s33.89 15.203 33.89 33.89v.219c0 18.687-15.203 33.89-33.89 33.89zm0-52.998c-10.416 0-18.89 8.474-18.89 18.89v.219c0 10.416 8.474 18.89 18.89 18.89s18.89-8.474 18.89-18.89v-.219c0-10.416-8.474-18.89-18.89-18.89z\"></path>\n    </svg>\n  );\n}\n"],"names":["getSource","memoize","str","match","numId","Number","parseInt","itemId","sourceId","Math","ceil","ItemCard","id","width","className","title","text","padding","source","height","divPadding","clsx","style","ItemSprite","props","SignCard","SuspectCard","suspect","hideName","cardWidth","preview","name","Card","children","header","footer","color","size","randomColor","headerClassName","footerClassName","hideHeader","baseClass","bgColor","getColorFromLetter","toUpperCase","startsWith","backgroundColor","Sprite","baseUrl","useTDBaseUrl","useQuery","queryKey","queryFn","fetch","response","enabled","isLoading","data","isError","paddedWidth","display","placeItems","svgContent","WarningOutlined","viewBox","xlinkHref","dangerouslySetInnerHTML","__html","x","y","background","View","ViewIf","condition","ViewOr","ViewSwitch","cases","length","Error","console","warn","COMUNICACAO_DUO_ACTIONS","AFFILIATIONS","SIDES","STATUS","DECK_ENTRY_STATUS","useAlienAttributes","json","staleTime","POSITIVE_INFINITY","AlienKeyboard","value","onChange","availableAttributeKeys","disabled","language","useLanguage","attributes","useState","searchQuery","setSearchQuery","debouncedSearch","useCallback","debounce","query","allowedAttributes","useMemo","orderBy","Object","values","filter","attribute","includes","searchDict","reduce","acc","stringRemoveAccents","description","keywords","toLowerCase","attributesList","a","onTap","key","type","updateSentence","spinning","HELPER_KEYS","map","onClick","icon","Search","placeholder","e","target","onSearch","allowClear","spriteId","split","en","pt","VerticalAlignTopOutlined","DashOutlined","VerticalAlignBottomOutlined","StepBackwardOutlined","prev","lastChar","isLastHelper","LETTERS","slice","AlienText","withTranslation","divProps","dualTranslate","characters","result","i","push","substring","splitStringEvery4","character","variantKey","attributeId","variant","variantsName","variants","trim","BoardEntry","entry","deckType","userSide","sideIndex","indexOf","affiliation","undefined","CharacterCard","Board","deck","userId","animateEntries","userIndex","hasTheOtherPlayersTabooBeenSelected","otherPlayerIndex","otherPlayerSide","getOtherSide","some","deliveredBy","PreviewGroup","disabledTaboo","status","getAnimationClass","CoverAlienCard","side","NeutralDeliveriesWrapper","shape","CloseCircleOutlined","trigger","onConfirm","useToggle","open","setOpen","AlienHeartEyesIcon","AlienStarEyesIcon","haveIDelivered","hasTheOtherPlayerDelivered","AlienNeutralIcon","SummaryBox","summary","players","round","playerA","find","player","playerB","total","current","deliverablesLeft","deliverablesLeftForA","deliverablesLeftForB","HistoryDeliverableEntry","deliverable","History","history","clueInputType","deckDict","keyBy","columns","dataIndex","render","requesterId","clue","deliverables","wrap","gap","deliverableId","panels","label","dataSource","pagination","contained","items","StepAsk","user","announcement","requester","isTheRequester","onSubmitRequest","useLoading","sentence","setSentence","clueQuantity","setQuantity","onSubmit","fullWidth","wait","align","SpaceContainer","vertical","v","min","max","loading","ready","PhaseAskingForSomething","state","useUser","step","useStep","useWhichPlayerIsThe","translate","request","useGameActionRequest","actionName","successMessage","errorMessage","payload","action","useOnSubmitRequestAPIRequest","QuestionIcon","currentRound","phase","allowedPhase","PHASES","COMUNICACAO_DUO","ASKING_FOR_SOMETHING","StepVerification","entryIdToAnimate","nextPhase","results","autoTriggerTime","withWaitingTimeBar","fontSize","PhaseVerification","NuclearExplosionIcon","duration","VERIFICATION","StepDeliver","onSubmitDelivery","onStopDelivery","latestHistoryEntry","block","delivery","PhaseDeliveringSomething","useOnSubmitDeliveryAPIRequest","useOnStopDeliveryAPIRequest","hasADelivery","MysteryBoxIcon","DELIVER_SOMETHING","PhaseGameOver","announcementIcon","TheEndIcon","level","Achievements","achievements","reference","achievementsReference","getActiveComponent","LoadingPage","DEFAULT","LOBBY","PhaseLobby","RULES","PhaseRules","SETUP","PhaseSetup","GAME_OVER","PageError","gameCollection","GAME_COLLECTION","ACHIEVEMENTS","propertyName","useGlobalState","PLACEHOLDER_PLAYER","activePlayer","setActivePlayer","isUser","setIsUser","useEffect","xmlns","fill","d","opacity","cx","cy","r"],"sourceRoot":""}