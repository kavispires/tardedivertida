{"version":3,"file":"static/js/cruza-palavras.6e15b43a.chunk.js","mappings":"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","sources":["components/cards/Card.tsx","components/general/Achievements.tsx","components/image-cards/ImageBlurButton.tsx","components/image-cards/ImageBlurButtonContainer.tsx","components/image-cards/ImageCard.tsx","components/image-cards/ImageCardBack.tsx","components/image-cards/ImageCardButton.tsx","components/image-cards/ImageCardHand.tsx","components/image-cards/ImageCardPreloadHand.tsx","components/image-cards/ImageCardSelectButton.tsx","components/metrics/MetricHighlight.tsx","components/metrics/PointsHighlight.tsx","components/ranking/RankingBoard.tsx","components/ranking/StepRankingWrapper.tsx","assets/images/round-title-en.svg","assets/images/round-title-pt.svg","components/round/RoundAnnouncement.tsx","games/cruza-palavras/utils/api-requests.ts","games/cruza-palavras/components/WordGridHeader.tsx","games/cruza-palavras/components/WordGrid.tsx","../node_modules/@ant-design/icons-svg/es/asn/FormOutlined.js","../node_modules/@ant-design/icons/es/icons/FormOutlined.js","games/cruza-palavras/components/PreviousClue.tsx","games/cruza-palavras/components/WordForm.tsx","games/cruza-palavras/components/WritingCell.tsx","games/cruza-palavras/components/RulesBlobs.tsx","games/cruza-palavras/StepClueWriting.tsx","games/cruza-palavras/components/PlayerRecentClue.tsx","games/cruza-palavras/PhaseClueWriting.tsx","games/cruza-palavras/utils/helpers.ts","games/cruza-palavras/components/ClueCard.tsx","games/cruza-palavras/components/SelectableCell.tsx","games/cruza-palavras/components/Clues.tsx","games/cruza-palavras/StepGuessing.tsx","games/cruza-palavras/PhaseGuessing.tsx","../node_modules/@ant-design/icons-svg/es/asn/CheckSquareFilled.js","../node_modules/@ant-design/icons/es/icons/CheckSquareFilled.js","../node_modules/@ant-design/icons-svg/es/asn/CloseSquareFilled.js","../node_modules/@ant-design/icons/es/icons/CloseSquareFilled.js","games/cruza-palavras/StepReveal.tsx","games/cruza-palavras/StepRanking.tsx","games/cruza-palavras/PhaseReveal.tsx","games/cruza-palavras/PhaseGameOver.tsx","games/cruza-palavras/StepSelectWords.tsx","games/cruza-palavras/PhaseWordsSelection.tsx","games/cruza-palavras/SessionCruzaPalavras.tsx","games/cruza-palavras/utils/achievements.ts","hooks/useBooleanDictionary.ts","icons/GridIcon.tsx","icons/GuessIcon.tsx","icons/RankIcon.tsx","icons/StarIcon.tsx","icons/TrophyIcon.tsx","icons/VerifyListIcon.tsx","../node_modules/@ant-design/icons-svg/es/asn/DownCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/DownCircleOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/PlusCircleFilled.js","../node_modules/@ant-design/icons/es/icons/PlusCircleFilled.js","../node_modules/@ant-design/icons-svg/es/asn/TrophyOutlined.js","../node_modules/@ant-design/icons/es/icons/TrophyOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/UpCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/UpCircleOutlined.js"],"sourcesContent":["import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Utils\nimport { getColorFromLetter } from 'utils/helpers';\n// Sass\nimport './Card.scss';\n\ntype CardProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  header?: string;\n  footer?: string;\n  color?: string;\n  size?: 'small' | 'medium' | 'large';\n  randomColor?: boolean;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  headerClassName?: string;\n  footerClassName?: string;\n  hideHeader?: boolean;\n};\nexport const Card = ({\n  children,\n  header = 'Carta',\n  footer,\n  color = 'none',\n  size = 'medium',\n  randomColor = false,\n  className = '',\n  headerClassName = '',\n  footerClassName = '',\n  hideHeader = false,\n}: CardProps) => {\n  const baseClass = 'card';\n\n  const bgColor = randomColor\n    ? getColorFromLetter(\n        typeof children === 'string'\n          ? children[0].toUpperCase()\n          : header !== 'Carta'\n          ? header[0].toUpperCase()\n          : 'X'\n      )\n    : color;\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, className)}>\n      {!hideHeader && (\n        <span\n          className={clsx(`${baseClass}__header`, `color-background--${bgColor}`, headerClassName)}\n          style={color.startsWith('#') ? { backgroundColor: color } : {}}\n        >\n          {header}\n        </span>\n      )}\n      <span className={`${baseClass}__text`}>{children}</span>\n      {footer && <span className={clsx(`${baseClass}__footer`, footerClassName)}>{footer}</span>}\n    </div>\n  );\n};\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Popover } from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { DualTranslate, Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { Medal } from './Medal';\n\ntype AchievementsProps = {\n  players: GamePlayers;\n  achievements: Achievement[];\n  reference: AchievementReference;\n};\n\nconst unknownText = { pt: 'Desconhecido', en: 'Unknown' };\n\nexport function Achievements({ players, achievements, reference }: AchievementsProps) {\n  if (achievements.length === 0) return <></>;\n\n  return (\n    <div className={clsx('achievements', getAnimationClass('fadeIn'))}>\n      <Title size=\"small\" level={3}>\n        <Translate pt=\"Medalhas\" en=\"Achievements\" />\n      </Title>\n      <ul className=\"achievements-list\">\n        {achievements.map((achievement, index) => {\n          const { icon = 'star', ...achievementObj } = reference[achievement.type] ?? {};\n          const player = players[achievement.playerId];\n          return (\n            <li\n              key={`achievement-${achievement.type}`}\n              className={clsx(\n                'achievements-entry',\n                getAnimationClass('flipInY', {\n                  delay: index < achievements.length / 2 ? index : achievements.length - 1 - index,\n                })\n              )}\n            >\n              <div className=\"achievement__medal\">\n                <Medal id={icon} />\n              </div>\n              <h4 className=\"achievement__title\">\n                <DualTranslate>{achievementObj.title ?? unknownText}</DualTranslate>\n              </h4>\n              <div className=\"achievement__avatar\">\n                <Avatar id={player.avatarId} />\n              </div>\n              <div className=\"achievement__name\">{player.name}</div>\n              {Boolean(achievementObj.description) && (\n                <div className=\"achievement__description\">\n                  <Popover\n                    content={\n                      <>\n                        <DualTranslate>{achievementObj.description ?? unknownText}</DualTranslate> (\n                        {achievement.value})\n                      </>\n                    }\n                  >\n                    <Button icon={<QuestionCircleOutlined />} shape=\"circle\" type=\"text\" size=\"small\" />\n                  </Popover>\n                </div>\n              )}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Button, Tooltip } from 'antd';\nimport { EyeInvisibleOutlined, EyeOutlined } from '@ant-design/icons';\n// Utils\nimport { useBlurCards } from 'hooks/useBlurCards';\n// Components\nimport { Translate } from 'components/language';\n// Sass\nimport './ImageBlurButton.scss';\n\ntype ImageBlurButtonProps = {\n  /**\n   * The card to be blurred\n   */\n  cardId: string;\n  /**\n   * Determines if the button is ghost or not (default: true)\n   */\n  ghost?: boolean;\n};\n\nexport function ImageBlurButton({ cardId, ghost = true }: ImageBlurButtonProps) {\n  const { blurCard, isBlurEnabled, shouldBeBlurred } = useBlurCards();\n\n  return isBlurEnabled ? (\n    <Tooltip\n      placement=\"top\"\n      title={\n        <Translate\n          pt=\"Aperte o botão para embaçar a foto caso você tenha alguma fobia\"\n          en=\"Use this button to blur the image in case of any phobia\"\n        />\n      }\n    >\n      <Button ghost={ghost} onClick={() => blurCard(cardId)} size=\"small\" className=\"image-blur-button\">\n        {shouldBeBlurred(cardId) ? (\n          <>\n            <EyeOutlined /> <Translate pt=\"Descredar\" en=\"Focus\" />\n          </>\n        ) : (\n          <>\n            <EyeInvisibleOutlined /> <Translate pt=\"Credo\" en=\"Blur\" />\n          </>\n        )}\n      </Button>\n    </Tooltip>\n  ) : (\n    <></>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Components\nimport { ImageBlurButton } from './ImageBlurButton';\n// Sass\nimport './ImageBlurButtonContainer.scss';\n\ninterface ImageBlurButtonContainerProps extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * The card to be blurred\n   */\n  cardId: string;\n  /**\n   * The content the component is wrapping\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * The position of the button (default: bottom)\n   */\n  position?: 'top' | 'bottom';\n  /**\n   * Determines if the button is ghost or not (default: true)\n   */\n  ghost?: boolean;\n}\n\nexport function ImageBlurButtonContainer({\n  cardId,\n  children,\n  className = '',\n  position = 'bottom',\n  ghost = true,\n  ...rest\n}: ImageBlurButtonContainerProps) {\n  return (\n    <div className={clsx('image-blur-button-container', className)} {...rest}>\n      {position === 'top' && <ImageBlurButton cardId={cardId} ghost={ghost} />}\n      {children}\n      {position === 'bottom' && <ImageBlurButton cardId={cardId} ghost={ghost} />}\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Image, ImageProps } from 'antd';\n// Constants\nimport { PUBLIC_URL } from 'utils/constants';\n// Assets\nimport placeholder from 'assets/images/placeholder.jpg';\n// Hooks\nimport { useBlurCards } from 'hooks/useBlurCards';\nimport { useTDBaseUrl } from 'hooks/useTDBaseUrl';\n// Sass\nimport './ImageCard.scss';\n\nexport type ImageCardProps = {\n  /**\n   * The id of the image\n   */\n  imageId: string;\n  /**\n   * The width of the card (Default: 200px)\n   */\n  cardWidth?: number;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Enables or disables the preview (default: true)\n   */\n  preview?: ImageProps['preview'];\n  /**\n   * Replacement image when the preview is open\n   */\n  previewImageId?: string;\n  /**\n   * The file extension for the image (default: jpg)\n   */\n  fileExtension?: 'jpg' | 'png' | 'gif';\n  /**\n   * Forces height to be the same as the width\n   */\n  square?: boolean;\n};\n\n/**\n * Renders an Image Card on tdi\n */\nexport const ImageCard = ({\n  imageId,\n  cardWidth = 200,\n  className = '',\n  preview = true,\n  previewImageId = '',\n  fileExtension = 'jpg',\n  square = false,\n}: ImageCardProps) => {\n  const { shouldBeBlurred } = useBlurCards();\n  const baseUrl = useTDBaseUrl('tdi');\n\n  const baseClass = 'image-card';\n\n  const fallbackName = `placeholder-${imageId[imageId.length - 1]}`;\n\n  const imageURL = imageId.replace(/-/g, '/');\n\n  const isBlurred = shouldBeBlurred(imageId);\n\n  const previewConfig = typeof preview === 'boolean' ? {} : preview;\n\n  return (\n    <div\n      className={clsx(\n        baseClass,\n        isBlurred && `${baseClass}--blur`,\n        square && `${baseClass}--square`,\n        className\n      )}\n      style={{ height: square ? `${cardWidth}px` : undefined }}\n    >\n      <Image\n        width={cardWidth}\n        src={`${baseUrl}/${imageURL}.${fileExtension}`}\n        placeholder={<Image preview={false} src={placeholder} width={cardWidth} />}\n        fallback={`${PUBLIC_URL.CARDS}${fallbackName}.jpg`}\n        preview={\n          isBlurred || !preview\n            ? false\n            : {\n                ...previewConfig,\n                maskClassName: clsx(`${baseClass}__preview-mask`, previewConfig?.maskClassName),\n                src: Boolean(previewImageId)\n                  ? `${baseUrl}/${previewImageId.replace(/-/g, '/')}.${fileExtension}`\n                  : previewConfig?.src,\n              }\n        }\n      />\n    </div>\n  );\n};\n","import { ImageCard, ImageCardProps } from './ImageCard';\n\ntype ImageCardBackProps = Omit<ImageCardProps, 'imageId'> & { imageId?: ImageCardId };\n\nexport const ImageCardBack = ({ imageId = 'back-default', ...rest }: ImageCardBackProps) => {\n  return <ImageCard imageId={imageId} {...rest} />;\n};\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Button, ButtonProps } from 'antd';\nimport { DownCircleOutlined, UpCircleOutlined } from '@ant-design/icons';\n//  Components\nimport { Translate } from 'components/language';\nimport { DebugOnly } from 'components/debug';\nimport { ImageBlurButtonContainer } from './ImageBlurButtonContainer';\n// Sass\nimport './ImageCardButton.scss';\n\ntype ImageCardButtonProps = {\n  /**\n   * The id of the image\n   */\n  imageId: string;\n  /**\n   * The content, usually a ImageCard component\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name for the container\n   */\n  className?: string;\n  /**\n   * The position of the button (default: top)\n   */\n  buttonPosition?: 'top' | 'bottom';\n  /**\n   * The button is over the image (default: false)\n   */\n  over?: boolean;\n  /**\n   * Button icon replacement\n   */\n  icon?: ReactNode;\n  /**\n   * The function to be called when the button is clicked\n   */\n  onClick?: (...args: any) => void;\n  /**\n   * Disables the button (default: false)\n   */\n  disabled?: boolean;\n  /**\n   * The text for the button\n   */\n  buttonText?: ReactNode;\n  /**\n   * The props for the button\n   */\n  buttonProps?: Omit<ButtonProps, 'onClick' | 'disabled'>;\n};\n\nexport function ImageCardButton({\n  imageId,\n  children,\n  className = '',\n  buttonPosition = 'top',\n  over = false,\n  icon,\n  onClick,\n  disabled = false,\n  buttonText,\n  buttonProps = {},\n}: ImageCardButtonProps) {\n  const isTop = buttonPosition === 'top';\n\n  const iconComponent = icon ?? (isTop ? <DownCircleOutlined /> : <UpCircleOutlined />);\n\n  const { className: buttonClassName, ...restButtonProps } = buttonProps;\n\n  const button = onClick ? (\n    <Button\n      shape=\"round\"\n      size=\"small\"\n      ghost={over}\n      className={clsx(\n        'image-card-button__button',\n        over && 'image-card-button__button--over',\n        over && `image-card-button__button--over-${buttonPosition}`,\n        buttonClassName\n      )}\n      onClick={() => onClick(imageId)}\n      disabled={disabled}\n      {...restButtonProps}\n    >\n      {iconComponent}\n      {buttonText ?? <Translate pt=\"Selecionar\" en=\"Select\" />}\n      {iconComponent}\n    </Button>\n  ) : (\n    <></>\n  );\n\n  return (\n    <div className={clsx('image-card-button', className)}>\n      <ImageBlurButtonContainer cardId={imageId} position={buttonPosition === 'bottom' ? 'top' : 'bottom'}>\n        <DebugOnly>{imageId}</DebugOnly>\n        <div className=\"image-card-button__container\">\n          {isTop && button}\n          {children}\n          {!isTop && button}\n        </div>\n      </ImageBlurButtonContainer>\n    </div>\n  );\n}\n","import { ReactNode } from 'react';\nimport clsx from 'clsx';\n// Ant Design Resources\nimport { Image, ImageProps } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { ImageCard, ImageCardButton } from '.';\n// Sass\nimport './ImageCardHand.scss';\n\ntype ImageCardHandProps = {\n  /**\n   * The list of card ids\n   */\n  hand: ImageCardId[];\n  /**\n   * Function to trigger when clicking on the select button\n   */\n  onSelectCard?: GenericFunction;\n  /**\n   * Select button custom label\n   */\n  selectButtonText?: ReactNode;\n  /**\n   * Select button custom icon\n   */\n  selectButtonIcon?: ReactNode;\n  /**\n   * Select button custom class\n   */\n  selectButtonClass?: string;\n  /**\n   * Disable select button\n   */\n  disabledSelectButton?: boolean;\n  /**\n   * Optional custom class name for the hand container\n   */\n  className?: string;\n  /**\n   * The size of the card\n   */\n  cardSize?: number;\n  /**\n   * If no card size is provided, the ratio is used instead to determine card size (default 8)\n   */\n  sizeRatio?: number;\n  /**\n   * Minimum width of a card (default 80)\n   */\n  minCardSize?: number;\n  /**\n   * Cache showing which cards have been selected and should be highlighted\n   */\n  selectedCards?: BooleanDictionary;\n  /**\n   * Custom card class\n   */\n  cardClassName?: string;\n  /**\n   * Enable preview (default: true)\n   */\n  preview?: boolean;\n  /**\n   *\n   */\n  imageGroupPreview?: ImageProps['preview'];\n};\n\nexport function ImageCardHand({\n  hand = [],\n  onSelectCard,\n  selectButtonText,\n  selectButtonIcon,\n  className = '',\n  selectButtonClass = '',\n  sizeRatio = 8,\n  cardSize,\n  minCardSize = 80,\n  disabledSelectButton = false,\n  selectedCards = {},\n  cardClassName = '',\n  preview = true,\n  imageGroupPreview,\n}: ImageCardHandProps) {\n  // Prefers cardSize otherwise calculates width based on screen and ratio\n  const cardWidth = useCardWidth(Math.max(sizeRatio, 6), { minWidth: minCardSize });\n\n  return (\n    <Image.PreviewGroup preview={imageGroupPreview}>\n      <div className={clsx('image-card-hand', className)}>\n        {hand.map((cardId, index) => {\n          return (\n            <div\n              key={`hand-${cardId}`}\n              className={clsx(\n                'image-card-hand__card-container',\n                getAnimationClass('slideInUp', {\n                  delay: index,\n                })\n              )}\n            >\n              <ImageCardButton\n                onClick={onSelectCard}\n                imageId={cardId}\n                buttonProps={{ className: selectButtonClass }}\n                icon={selectButtonIcon}\n                buttonText={selectButtonText}\n                disabled={disabledSelectButton}\n              >\n                <ImageCard\n                  imageId={cardId}\n                  cardWidth={cardSize || cardWidth}\n                  className={clsx(selectedCards[cardId] && 'image-card-hand__selected', cardClassName)}\n                  preview={preview}\n                />\n              </ImageCardButton>\n            </div>\n          );\n        })}\n      </div>\n    </Image.PreviewGroup>\n  );\n}\n","// Components\nimport { ImageCard } from './ImageCard';\n// Sass\nimport './ImageCardPreloadHand.scss';\n\ntype ImageCardPreloadHandProps = {\n  hand: string[];\n};\nexport function ImageCardPreloadHand({ hand }: ImageCardPreloadHandProps) {\n  if (!hand) return <span></span>;\n  return (\n    <div className=\"image-card-preload-hand\">\n      {hand.map((cardId) => (\n        <ImageCard imageId={cardId} cardWidth={1} key={`pre-load-${cardId}`} preview={false} />\n      ))}\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Button } from 'antd';\nimport { UpCircleOutlined } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\n\ntype ImageCardSelectButtonProps = {\n  isSelected?: boolean;\n  cardId: ImageCard;\n  onClick: GenericFunction;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  selectLabel?: string;\n  deselectLabel?: string;\n};\n\nexport function ImageCardSelectButton({\n  onClick,\n  cardId,\n  selectLabel,\n  deselectLabel,\n  isSelected = false,\n}: ImageCardSelectButtonProps) {\n  return (\n    <Button\n      shape=\"round\"\n      size=\"small\"\n      ghost={!isSelected}\n      className=\"image-card-select-button\"\n      onClick={() => onClick(cardId)}\n    >\n      <UpCircleOutlined />\n      {isSelected ? (\n        <Translate pt=\"Desmarcar\" en=\"Deselect\" custom={deselectLabel} />\n      ) : (\n        <Translate pt=\"Selecionar\" en=\"Select\" custom={selectLabel} />\n      )}\n      <UpCircleOutlined />\n    </Button>\n  );\n}\n","import { ReactNode } from 'react';\nimport clsx from 'clsx';\n// Types\nimport type { AvatarSize } from 'antd/lib/avatar/AvatarContext';\n// Components\nimport { IconAvatar } from 'components/avatars/IconAvatar';\n\nexport type MetricHighlightProps = {\n  /**\n   * The text to be highlighted\n   */\n  children: ReactNode;\n  /**\n   * The icon representing the metric\n   */\n  icon: ReactNode;\n  /**\n   * Indicates if it's a negative metric\n   */\n  type?: 'positive' | 'negative' | 'default';\n  /**\n   * The size of the avatar (default: small)\n   */\n  iconSize?: AvatarSize;\n  /**\n   * Custom class\n   */\n  className?: string;\n  /**\n   * Icon placement (default: after)\n   */\n  iconPlacement?: 'before' | 'after';\n};\n\nexport function MetricHighlight({\n  children,\n  icon,\n  type,\n  className,\n  iconSize = 'small',\n  iconPlacement = 'after',\n}: MetricHighlightProps) {\n  return (\n    <span className={clsx('metric-highlight', type && `metric-highlight--${type}`, className)}>\n      {iconPlacement === 'before' && (\n        <>\n          <IconAvatar size={iconSize} icon={icon} />{' '}\n        </>\n      )}\n      {children}\n      {iconPlacement === 'after' && (\n        <>\n          {' '}\n          <IconAvatar size={iconSize} icon={icon} />\n        </>\n      )}\n    </span>\n  );\n}\n\nexport type HighlightProps = Pick<MetricHighlightProps, 'children' | 'type' | 'iconSize' | 'className'>;\n","import { StarIcon } from 'icons/StarIcon';\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function PointsHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<StarIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode, useEffect, useMemo, useState } from 'react';\nimport { orderBy } from 'lodash';\nimport { useEffectOnce } from 'react-use';\n// Ant Design Resources\nimport { Tooltip } from 'antd';\nimport { CrownFilled } from '@ant-design/icons';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useDimensions } from 'hooks/useDimensions';\n// Components\nimport { Translate } from 'components/language';\nimport { Avatar } from 'components/avatars';\n\ntype GainedPointProps = {\n  gainedPoint: number;\n  order: number;\n  description?: any;\n};\n\nfunction GainedPoint({ gainedPoint, order, description }: GainedPointProps): JSX.Element {\n  const isPositive = gainedPoint > 0;\n  const isNegative = gainedPoint < 0;\n  return (\n    <li\n      className={clsx(\n        'ranking-board__gained-point',\n        isPositive && 'ranking-board__gained-point--plus',\n        isNegative && 'ranking-board__gained-point--minus',\n        `ranking-board__gained-point--${order}`\n      )}\n    >\n      <Tooltip\n        title={description ?? <Translate pt=\"Pontos ganhos\" en=\"Gained Points\" />}\n        color={isPositive ? 'gold' : isNegative ? 'red' : 'gray'}\n      >\n        {isPositive ? '+' : ''}\n        {gainedPoint}\n      </Tooltip>\n    </li>\n  );\n}\n\ntype GainedPointsProps = {\n  gainedPoints: number[] | number;\n  playerId: PlayerId;\n  gainedPointsDescriptions?: any[];\n};\n\nfunction GainedPoints({\n  gainedPoints,\n  playerId,\n  gainedPointsDescriptions = [],\n}: GainedPointsProps): JSX.Element {\n  const points = Array.isArray(gainedPoints) ? gainedPoints : [gainedPoints];\n  return (\n    <ul className=\"ranking-board__cell-gained-points\">\n      {points.map((gainedPoint, index) => (\n        <GainedPoint\n          key={`gained-point-${playerId}-${index}`}\n          gainedPoint={gainedPoint}\n          order={index}\n          description={gainedPointsDescriptions[index]}\n        />\n      ))}\n    </ul>\n  );\n}\n\ntype RankingBoardProps = {\n  players: GamePlayers;\n  ranking: GameRanking;\n  gainedPointsDescriptions?: ReactNode[];\n  hideGainedPoints?: boolean;\n  delay?: number;\n};\n\nexport function RankingBoard({\n  players,\n  ranking,\n  gainedPointsDescriptions,\n  hideGainedPoints = false,\n  delay = 0,\n}: RankingBoardProps): JSX.Element {\n  const [displayStep, setDisplayStep] = useState(0);\n  const [sortedRanking, setSortedRanking] = useState<GameRanking>([]);\n  const [reRank, setReRank] = useState(0);\n  const [, height] = useDimensions('ranking-row-0');\n\n  const maxPoints = useMemo(() => Math.max(...ranking.map((scores) => scores.newScore)), [ranking]);\n\n  const { seconds } = useCountdown({\n    duration: 5 + delay,\n    autoStart: true,\n    onExpire: () => {\n      setReRank(1);\n      setDisplayStep(3);\n    },\n  });\n\n  // Rank by previousScore\n  useEffectOnce(() => {\n    const positions: PlainObject = {};\n    let lastPosition = 0;\n    let lastPoints = 0;\n\n    const rankByFinalScoreDict = orderBy(ranking, ['newScore', 'name'], ['desc', 'asc']).reduce(\n      (acc: PlainObject, entry, index) => {\n        acc[entry.playerId] = index;\n        // Calculate position\n        if (lastPoints === 0 || entry.newScore < lastPoints) {\n          lastPoints = entry.newScore;\n          lastPosition += 1;\n        }\n        positions[entry.playerId] = [0, lastPosition];\n        return acc;\n      },\n      {}\n    );\n\n    const rankByPreviousScore = orderBy(ranking, ['previousScore', 'name'], ['desc', 'asc']);\n\n    // Reset position trackers\n    lastPosition = 0;\n    lastPoints = 0;\n\n    const tempSortedRanking: GameRanking = rankByPreviousScore.map((entry, index) => {\n      const newEntry = { ...entry };\n\n      newEntry.order = [index, rankByFinalScoreDict[newEntry.playerId]];\n      newEntry.position = positions[newEntry.playerId];\n      // Calculate position\n      if (lastPoints === 0 || entry.previousScore < lastPoints) {\n        lastPoints = entry.previousScore;\n        lastPosition += 1;\n      }\n      newEntry.position[0] = lastPosition;\n      return newEntry;\n    });\n\n    setSortedRanking(tempSortedRanking);\n  });\n\n  // Show gained points\n  useEffect(() => {\n    if (seconds === 4 + delay) {\n      setDisplayStep(1);\n    } else if (seconds === 2 + delay) {\n      setDisplayStep(2);\n    }\n  }, [seconds, delay]);\n\n  return (\n    <div\n      className={clsx('ranking-board', seconds > 4 && 'ranking-board--hidden')}\n      style={{ height: `${(Math.max(60, height) + 8) * sortedRanking.length}px` }}\n    >\n      {sortedRanking.map((entry, index) => {\n        const { playerId, newScore, previousScore, gainedPoints, order, position } = entry;\n        const hPosition = (Math.max(60, height) + 8) * (order[reRank] ?? 0);\n\n        return (\n          <div\n            className={`ranking-board__row ranking-board__row--${index}`}\n            key={`ranking-${playerId}`}\n            id={`ranking-row-${index}`}\n            style={{ top: `${hPosition}px` }}\n          >\n            <div className=\"ranking-board__cell-crown\">\n              {newScore > 0 && maxPoints === newScore && displayStep >= 3 && (\n                <CrownFilled className=\"ranking-board__crown-icon\" />\n              )}\n            </div>\n            <div className=\"ranking-board__cell-position\">#{position[reRank] ?? ''}</div>\n            <div className=\"ranking-board__cell-player\">\n              <div className=\"ranking-board__avatar\">\n                <Avatar id={players[playerId].avatarId} />\n              </div>\n              <div className=\"ranking-board__name\">{players[playerId].name}</div>\n            </div>\n            <Tooltip title={<Translate pt=\"Pontos Anteriores\" en=\"Previous Points\" />} color=\"gray\">\n              <div className=\"ranking-board__cell-points\">{previousScore}</div>\n            </Tooltip>\n            {!hideGainedPoints && displayStep >= 1 && gainedPoints !== undefined && (\n              <GainedPoints\n                gainedPoints={gainedPoints}\n                playerId={playerId}\n                gainedPointsDescriptions={gainedPointsDescriptions}\n              />\n            )}\n            {displayStep >= 2 && (\n              <Tooltip title=\"Total\" color=\"gold\">\n                <span className=\"ranking-board__cell-points-total\">{newScore}</span>\n              </Tooltip>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { CaretUpOutlined } from '@ant-design/icons';\n// Hooks\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Components\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { RankingBoard } from './RankingBoard';\n\ntype StepRankingWrapperProps = {\n  /**\n   * The players\n   */\n  players: GamePlayers;\n  /**\n   * The ranking array\n   */\n  ranking: GameRanking;\n  /**\n   * Gained points descriptions for the popover\n   */\n  gainedPointsDescriptions: ReactNode[];\n  /**\n   * Additional content\n   */\n  children?: ReactNode;\n  /**\n   * Replacement title for Ranking\n   */\n  title?: ReactNode;\n  /**\n   * Optional node that goes under the title\n   */\n  subtitle?: ReactNode;\n  /**\n   * Whether the title should be white or not\n   */\n  white?: boolean;\n};\n\nexport function StepRankingWrapper({\n  players,\n  ranking,\n  gainedPointsDescriptions,\n  children,\n  title,\n  subtitle,\n  white,\n}: StepRankingWrapperProps) {\n  useTemporarilyHidePlayersBar();\n\n  return (\n    <Step>\n      <Title white={white}>{title ?? 'Ranking'}</Title>\n\n      {subtitle}\n\n      <RankingBoard players={players} ranking={ranking} gainedPointsDescriptions={gainedPointsDescriptions} />\n      <Instruction className=\"step-ranking-wrapper-gained-points-instruction\">\n        <CaretUpOutlined />\n        <Translate\n          pt=\"Passe o mouse em cada um dos pontos para saber como eles foram distribuídos\"\n          en=\"Hover over the scores to learn how they were granted\"\n        />\n        <CaretUpOutlined />\n      </Instruction>\n\n      {children}\n    </Step>\n  );\n}\n","var _style, _g, _g2, _g3, _g4, _g5, _g6, _g7, _g8;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRoundTitleEn(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 130 50\",\n    style: {\n      enableBackground: \"new 0 0 130 50\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:#9EC5E7;}\\n\\t.st1{fill:#FFFFFF;}\\n\\t.st2{fill:#3A7CA5;}\\n\\t.st3{fill:#44BBA4;}\\n\\t.st4{fill:#F2E863;}\\n\\t.st5{fill:#F45B69;}\\n\\t.st6{fill:#E6E6F5;}\\n\\t.st7{display:none;}\\n\\t.st8{display:inline;}\\n\\t.st9{display:inline;fill:none;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st10{fill:#DA70D6;}\\n\\t.st11{fill:#008080;}\\n\\t.st12{fill:#D2691E;}\\n\\t.st13{fill:#4682B4;}\\n\\t.st14{fill:#B22222;}\\n\\t.st15{fill:#DFB231;}\\n\\t.st16{fill:#FF6347;}\\n\\t.st17{fill:#9370DB;}\\n\\t.st18{fill:#3C58AC;}\\n\\t.st19{fill:#7CC44F;}\\n\\t.st20{fill:#040303;}\\n\\t.st21{fill:#FCBF00;}\\n\\t.st22{fill:#D70027;}\\n\\t.st23{fill:#EA384D;}\\n\\t.st24{fill:#BFB8B8;}\\n\\t.st25{fill:#F8EFEF;}\\n\\t.st26{fill:#FE2A25;}\\n\\t.st27{fill:#FE9A00;}\\n\\t.st28{fill:#FEE901;}\\n\\t.st29{fill:#FEF6A5;}\\n\\t.st30{fill:#FEF05C;}\\n\\t.st31{fill:#FEFDFD;}\\n\\t.st32{fill:url(#SVGID_1_);}\\n\\t.st33{fill:#D40000;}\\n\\t.st34{clip-path:url(#SVGID_3_);}\\n\\t.st35{fill:url(#SVGID_4_);}\\n\\t.st36{clip-path:url(#SVGID_6_);}\\n\\t.st37{fill:url(#SVGID_7_);}\\n\\t.st38{fill:#008C72;}\\n\\t.st39{clip-path:url(#SVGID_9_);}\\n\\t.st40{clip-path:url(#SVGID_11_);}\\n\\t.st41{clip-path:url(#SVGID_13_);}\\n\\t.st42{clip-path:url(#SVGID_15_);}\\n\\t.st43{clip-path:url(#SVGID_17_);}\\n\\t.st44{clip-path:url(#SVGID_19_);}\\n\\t.st45{fill:#575757;}\\n\\t.st46{clip-path:url(#SVGID_21_);}\\n\\t.st47{fill:url(#SVGID_22_);}\\n\\t.st48{fill:none;stroke:#FFFFFF;stroke-miterlimit:10;}\\n\\t.st49{display:inline;fill:#5C3400;}\\n\\t.st50{fill:none;}\\n\\t.st51{fill:#5C3400;}\\n\\t.st52{display:inline;fill:none;}\\n\\t.st53{display:inline;fill:#FFFFFF;}\\n\\t.st54{display:none;fill:#FFFFFF;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st55{display:inline;fill:#FFFFFF;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st56{display:none;fill:#F2F25F;}\\n\\t.st57{display:inline;fill:#F2F2F2;}\\n\\t.st58{display:inline;fill:#E6E6E6;}\\n\\t.st59{display:inline;fill:#808080;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st60{fill:#808080;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st61{display:inline;fill:#808080;}\\n\\t.st62{fill:#29E257;}\\n\\t.st63{fill:#E2DC29;}\\n\\t.st64{fill:#29ABE2;}\\n\\t.st65{fill:#E22929;}\\n\\t.st66{fill:#E6E6E6;}\\n\\t.st67{fill:#F2F2F2;}\\n\\t.st68{fill:#F9C303;}\\n\\t.st69{fill:#3A3939;}\\n\\t.st70{fill:#FF0000;}\\n\\t.st71{fill:#FEFEFD;}\\n\\t.st72{fill:#181D44;}\\n\\t.st73{fill:#F7931E;}\\n\\t.st74{fill:#A45467;}\\n\\t.st75{fill:#C33F48;}\\n\\t.st76{fill:#866A86;}\\n\\t.st77{fill:#6780A4;}\\n\\t.st78{fill:#4895C3;}\\n\\t.st79{fill:#4D4D4D;}\\n\\t.st80{opacity:0.2;}\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1\"\n  }, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M31.6,8.3c3.6,1.3,5.1,4.6,5.1,8.1c0,5.5-3.8,11.9-9.9,13.3c2.8,2.9,6,8.6,8.4,8.6c0.6,0,1.2-0.4,1.7-1.3 c0.2-0.4,0.5-0.5,0.8-0.5c0.5,0,1.1,0.4,1.1,1.1c0,0.1-0.1,0.4-0.1,0.5c-1,1.8-2.6,2.7-4.3,2.7c-1.5,0-3-0.6-4.2-1.7 c-3-2.7-4.4-5.6-4.6-5.6c-0.1,0-0.1,0.1-0.1,0.1c0,0.6,0.5,2.7,1.3,7.4c0,0.2,0.1,0.4,0.1,0.6c0,1.5-1.1,2.7-2.8,2.7 c-0.2,0-0.4,0-0.7-0.1c-2-0.3-4.5-8.1-4.5-17.6c0-4.2,0.5-8.8,1.8-13.2c0.4-1.5,1.5-2.1,2.6-2.1c1.5,0,3.2,1.2,3.2,3.1 c0,0.1,0,0.4-0.1,0.6c-0.6,3.3-1.1,6.5-1.3,9.7c4.1-2.5,5.7-5.5,5.7-8.1c0-3.5-2.8-6.4-5.6-6.5h-0.3c-4.4,0-9.1,4.4-9.1,9 c0,0.9,0.2,1.8,0.6,2.7c0.1,0.1,0.1,0.3,0.1,0.4c0,0.6-0.4,1.1-0.9,1.1c-0.1,0-0.4-0.1-0.5-0.1c-1.5-0.7-2.1-2-2.1-3.7 c0-4.8,5.5-12.1,13.5-12.1C28,7.3,29.8,7.6,31.6,8.3z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M49,22.7c1.8,2.4,2.6,5.3,2.6,7.9c0,5.5-3.1,10.4-6.9,10.5h-0.1c-4.6,0-6.7-4.3-6.7-8.8 c0-3.3,1.1-6.8,3.2-8.9c-0.6,0-0.8-0.3-0.8-0.7c0-1,1.8-2.7,4.1-2.7C45.8,19.9,47.5,20.6,49,22.7z M42.1,22.6 c0.9-0.6,1.7-0.8,2.4-0.8c1.5,0,2.5,1.3,2.5,2.5c0,0.2,0,0.4-0.1,0.6c-0.6,2.5-2.7,4.1-2.9,6.8c0,0.3-0.1,0.7-0.1,1.1 c0,0.8,0.1,1.5,0.5,2c0.3,0.4,0.7,0.4,1.2,0.4c0.6,0,1.3-0.2,1.8-0.5c1.7-1,2.5-3.2,2.5-5.6c0-3.4-1.5-7-4.3-7.7 c-0.3-0.1-0.6-0.1-0.8-0.1C43.6,21.2,42.6,21.7,42.1,22.6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M59.9,23.2v0.4c-0.3,2.1-1.2,6.3-1.2,9.4c0,1.8,0.3,3.2,1.1,3.7c0.1,0.1,0.3,0.1,0.4,0.1 c1.3,0,2.9-4.1,4.1-7.9c0.1-6,2-7.9,3.6-7.9c1.4,0,2.7,1.3,2.9,2.7c0,0.4,0.1,0.6,0.1,0.9c0,1.6-0.4,2.8-0.4,5.5 c0,1.2,0.1,2.8,0.4,4.8v0.8c0,0.7,0.1,1.3,0.8,1.3c0.1,0,0.2-0.1,0.4-0.1c1.9-0.4,3.6-6.5,4-8.3c0.1-0.2,0.2-0.4,0.4-0.4 s0.4,0.2,0.4,0.4v0.1c-0.8,3.5-2.3,11.2-7,11.2c-0.4,0-0.8-0.1-1.3-0.2c-3.1-0.8-3.7-3.9-3.9-6.7c-2,5.7-4.6,8.1-6.8,8.1 c-2.7,0-4.9-3.6-4.9-9.4c0-2.6,0.4-5.6,1.5-9c0.4-1.3,1.8-2,2.9-2C58.6,20.8,59.9,21.6,59.9,23.2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M80.6,20.6c0.1,0.5,0.1,0.9,0.1,1.4c0,2.5-1,4.9-1,7.7v0.8c1.7-5.3,4.1-11.4,7.6-11.4c0.6,0,1.4,0.2,2.2,0.7 c2.3,1.5,3,5.2,3,8.8c0,4.6-1.1,9-1.1,9c0.1,0,3.7-4.8,4.8-8.5c0.1-0.3,0.3-0.4,0.6-0.4c0.3,0,0.6,0.2,0.6,0.6v0.1 c-0.6,2.8-3.1,9.1-5.5,10.2c-0.4,0.1-0.7,0.2-1.1,0.2c-2.6,0-4.2-3.9-4.5-5.9c-0.1-0.5-0.1-1.1-0.1-1.7c0-1.2,0.1-2.5,0.1-3.8 c0-1.9-0.1-3.7-0.7-5c-0.1-0.1-0.1-0.2-0.2-0.2c-1.1,0-4.3,7.9-4.8,15.6c-0.1,1.2-0.8,2-1.8,2c-1.9,0-4.7-2.9-5.1-10.2 c-0.1-0.8-0.1-1.5-0.1-2.2c0-7.2,2.6-9.5,4.6-9.6C79.4,18.8,80.4,19.6,80.6,20.6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M111.3,5.7c1.4,0,2.9,1,2.9,2.5v0.2c-0.5,5-2.4,9.1-3.6,20.6c-0.2,1.9-0.3,3.4-0.3,4.6c0,2.5,0.4,3.5,1,3.5 c1.1,0,3-3.6,4.5-8.5c0.1-0.4,0.4-0.5,0.7-0.5c0.4,0,0.7,0.2,0.7,0.6c0,0.1-0.1,0.1-0.1,0.2c-0.9,3.4-2.2,8.1-4.7,10.7 c-0.8,0.8-1.6,1.2-2.5,1.2c-2.6,0-5.1-3.6-5.5-7.3c-2,5.1-4.1,7.1-5.8,7.1c-2.4,0-4.1-4.1-4.1-8.6c0-4.7,1.8-9.8,6.5-11.2 c0.4-0.1,0.7-0.1,1-0.1c1.8,0,3.2,1.2,3.4,1.2h0.1c0.8-4.9,1.4-10.3,3.4-14.9c0.4-0.9,1.3-1.3,2.2-1.3H111.3z M99.7,35.1v0.5 c0,0.2-0.1,0.4-0.1,0.6c0,0.4,0.1,0.7,0.4,0.7c1,0,3.9-4.8,4.9-11.1c-0.4-0.4-0.7-0.6-1.1-0.6C101.8,25.2,99.7,31.3,99.7,35.1z\"\n  })))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"avatars\"\n  })), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Time_Bomb\"\n  })), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_4\"\n  })), _g5 || (_g5 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_8\"\n  })), _g6 || (_g6 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_6\"\n  })), _g7 || (_g7 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"dial_svg\"\n  })), _g8 || (_g8 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Sheeps\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRoundTitleEn);\nexport default __webpack_public_path__ + \"static/media/round-title-en.2ad07e1f265a85634ad7940a33f96552.svg\";\nexport { ForwardRef as ReactComponent };","var _style, _g, _g2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRoundTitlePt(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 130 50\",\n    style: {\n      enableBackground: \"new 0 0 130 50\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:#3E1E68;}\\n\\t.st1{fill:#9EC5E7;}\\n\\t.st2{display:none;}\\n\\t.st3{display:inline;fill:#9EC5E7;}\\n\\t.st4{fill:#3A7CA5;}\\n\\t.st5{fill:#44BBA4;}\\n\\t.st6{fill:#F2E863;}\\n\\t.st7{fill:#F45B69;}\\n\\t.st8{fill:#FFFFFF;}\\n\\t.st9{opacity:0.9;fill:#FFFFFF;}\\n\\t.st10{stroke:#000000;stroke-width:8;stroke-miterlimit:10;}\\n\\t.st11{fill:#E6E6F5;}\\n\\t.st12{fill:#DA70D6;}\\n\\t.st13{fill:#008080;}\\n\\t.st14{fill:#D2691E;}\\n\\t.st15{fill:#556B2F;}\\n\\t.st16{fill:#7CC44F;}\\n\\t.st17{fill:#2F4F4F;}\\n\\t.st18{fill:#FF6347;}\\n\\t.st19{fill:#4682B4;}\\n\\t.st20{fill:#D2A467;}\\n\\t.st21{fill:#7FB5C7;}\\n\\t.st22{fill:#B22222;}\\n\\t.st23{fill:#9370DB;}\\n\\t.st24{fill:#778899;}\\n\\t.st25{fill:#663399;}\\n\\t.st26{fill:#696969;}\\n\\t.st27{fill:#20212E;}\\n\\t.st28{fill:#9884B4;}\\n\\t.st29{fill:#DFB231;}\\n\\t.st30{fill:#875131;}\\n\\t.st31{fill:#DB8A34;}\\n\\t.st32{fill:#EB3465;}\\n\\t.st33{fill:#2B1752;}\\n\\t.st34{fill:#3C58AC;}\\n\\t.st35{fill:#BDB74C;}\\n\\t.st36{fill:#C7A4B3;}\\n\\t.st37{display:inline;}\\n\\t.st38{display:inline;fill:none;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st39{fill:#939598;}\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1\"\n  }, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st8\",\n    d: \"M27.8,37.4c-0.4,0-0.6,0.1-0.8,0.5c-0.5,0.9-1.1,1.3-1.7,1.3c-2.5,0-5.6-5.8-8.4-8.6 c6.1-1.4,9.9-7.7,9.9-13.3c0-3.6-1.5-6.8-5.1-8.1c-1.8-0.7-3.6-1.1-5.3-1.1c-8,0.1-13.5,7.3-13.5,12.1c0,1.7,0.6,3,2.1,3.7 c0.1,0.1,0.4,0.1,0.5,0.1c0.5,0,0.9-0.5,0.9-1.1c0-0.1,0-0.3-0.1-0.4c-0.4-0.8-0.6-1.8-0.6-2.7c0-4.6,4.7-9,9.1-9h0.3 c2.8,0.1,5.6,2.9,5.6,6.5c0,2.6-1.5,5.6-5.7,8.1c0.2-3.2,0.7-6.4,1.3-9.7c0.1-0.2,0.1-0.4,0.1-0.6c0-1.9-1.6-3.1-3.2-3.1 c-1.1,0-2.2,0.6-2.6,2.1c-1.3,4.4-1.8,9-1.8,13.2c0,9.5,2.5,17.3,4.5,17.6c0.3,0.1,0.5,0.1,0.7,0.1c1.8,0,2.8-1.2,2.8-2.7 c0-0.2-0.1-0.4-0.1-0.6c-0.8-4.8-1.3-6.9-1.3-7.4c0-0.1,0-0.1,0.1-0.1c0.2,0,1.6,2.9,4.6,5.6c1.2,1.1,2.7,1.7,4.2,1.7 c1.8,0,3.4-0.8,4.4-2.7c0.1-0.1,0.1-0.4,0.1-0.5C29,37.9,28.3,37.4,27.8,37.4z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st8\",\n    d: \"M34.4,20.8c-2.3,0-4.1,1.8-4.1,2.7c0,0.4,0.2,0.7,0.8,0.7c-2.1,2.1-3.2,5.6-3.2,8.9c0,4.6,2.1,8.8,6.7,8.8 h0.1c3.9-0.1,6.9-5.1,6.9-10.5c0-2.7-0.8-5.5-2.6-7.9C37.5,21.5,35.8,20.8,34.4,20.8z M37.3,35.6c-0.4,0.3-1.1,0.5-1.8,0.5 c-0.5,0-0.9-0.1-1.2-0.4c-0.4-0.4-0.5-1.2-0.5-2c0-0.4,0.1-0.8,0.1-1.1c0.3-2.7,2.3-4.3,2.9-6.8c0.1-0.2,0.1-0.4,0.1-0.6 c0-1.2-0.9-2.5-2.5-2.5c-0.7,0-1.5,0.2-2.4,0.8c0.5-0.9,1.5-1.3,2.5-1.3c0.3,0,0.6,0.1,0.8,0.1c2.7,0.7,4.3,4.4,4.3,7.7 C39.8,32.4,39,34.6,37.3,35.6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st8\",\n    d: \"M124.8,29.5c-0.3,0-0.5,0.1-0.6,0.4c-0.8,4.2-3.4,7.4-4.1,7.4h-0.1v-0.1c0-0.2-0.3-1.3-0.4-1.6 c-0.1-0.7-0.2-1.4-0.2-2.1c0-2.8,1.1-5.7,1.8-8.3c0.1-0.2,0.1-0.4,0.1-0.6c0-1.5-1.4-2.9-2.9-2.9c-1.1,0-2.2,0.6-3,2.5 c-0.7-1.8-3.4-3-5.3-3h-0.6c-4.9,0.6-7.4,8.4-7.4,12.6c0,0,0,0.1,0,0.1c-1.1,2.6-2.2,4.2-2.9,4.2c-0.6,0-1-1.1-1-3.5 c0-1.2,0.1-2.7,0.3-4.6c1.2-11.5,3.1-15.6,3.6-20.6V9.1c0-1.5-1.5-2.5-2.9-2.5h-0.1c-0.9,0-1.8,0.4-2.2,1.3c-2,4.6-2.6,10-3.4,15 h-0.1c-0.2,0-1.6-1.2-3.4-1.2c-0.3,0-0.6,0.1-1,0.1c-4.7,1.3-6.5,6.5-6.5,11.2c0,0.5,0,1,0.1,1.5c-1,1.8-2,2.9-2.5,2.9h-0.1v-0.1 c0-0.2-0.3-1.3-0.4-1.6c-0.1-0.7-0.2-1.4-0.2-2.1c0-2.8,1.1-5.7,1.8-8.3c0.1-0.2,0.1-0.4,0.1-0.6c0-1.5-1.4-2.9-2.9-2.9 c-1.1,0-2.2,0.6-3,2.5c-0.7-1.8-3.4-3-5.3-3h-0.6c-4.9,0.6-7.4,8.4-7.4,12.6c0,0,0,0.1,0,0.1c-1.1,2.6-2.2,4.2-2.9,4.2 c-0.6,0-1-1.1-1-3.5c0-1.2,0.1-2.7,0.3-4.6c1.2-11.5,3.1-15.6,3.6-20.6V9.1c0-1.5-1.5-2.5-2.9-2.5h-0.1c-0.9,0-1.8,0.4-2.2,1.3 c-2,4.6-2.6,10-3.4,15h-0.1c-0.2,0-1.6-1.2-3.4-1.2c-0.3,0-0.6,0.1-1,0.1c-4.7,1.3-6.5,6.5-6.5,11.2c0,4.5,1.7,8.6,4.1,8.6 c1.7,0,3.7-2,5.8-7.1c0.4,3.7,2.9,7.3,5.5,7.3c0.8,0,1.7-0.4,2.5-1.2c0.9-1,1.7-2.2,2.3-3.5c0.7,2.1,2.1,3.5,3.9,3.5 c2,0,4.4-1.8,6.6-6.1c0.1,2.8,1,5.1,3.4,6c0.6,0.2,1.2,0.3,1.7,0.3c2.1,0,3.5-1.6,4.6-3.6c0.7,2.6,2,4.4,3.6,4.4 c1.7,0,3.7-2,5.8-7.1c0.4,3.7,2.9,7.3,5.5,7.3c0.8,0,1.7-0.4,2.5-1.2c0.9-1,1.7-2.2,2.3-3.5c0.7,2.1,2.1,3.5,3.9,3.5 c2,0,4.4-1.8,6.6-6.1c0.1,2.8,1,5.1,3.4,6c0.6,0.2,1.2,0.3,1.7,0.3c4.5,0,5.9-7,6.9-10.4c0-0.1,0.1-0.1,0.1-0.2 C125.5,29.7,125,29.5,124.8,29.5z M48.2,37.8c-0.2,0-0.4-0.3-0.4-0.7c0-0.2,0.1-0.4,0.1-0.6V36c0-3.9,2.1-9.9,4.1-9.9 c0.4,0,0.7,0.1,1.1,0.6C52,32.9,49.2,37.8,48.2,37.8z M73.7,30.4c-1.1,2.4-3,5.5-4.3,5.5c-0.4,0-0.8-0.4-1-1.3 c-0.1-0.2-0.1-0.4-0.1-0.7c0-3.1,3-9.4,5.1-9.4c0.6,0,1.1,0.5,1.3,1.8C74.8,26.6,74.2,28,73.7,30.4z M88,37.8 c-0.2,0-0.4-0.3-0.4-0.7c0-0.2,0.1-0.4,0.1-0.6V36c0-3.9,2.1-9.9,4.1-9.9c0.4,0,0.7,0.1,1.1,0.6C91.9,32.9,89,37.8,88,37.8z  M113.6,30.4c-1.1,2.4-3,5.5-4.3,5.5c-0.4,0-0.8-0.4-1-1.3c-0.1-0.2-0.1-0.4-0.1-0.7c0-3.1,3-9.4,5.1-9.4c0.6,0,1.1,0.5,1.3,1.8 C114.6,26.6,114.1,28,113.6,30.4z\"\n  })))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"avatars\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRoundTitlePt);\nexport default __webpack_public_path__ + \"static/media/round-title-pt.2e3f9c1deb85d58d118aa6e3dfa7af23.svg\";\nexport { ForwardRef as ReactComponent };","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button } from 'antd';\n// Assets\nimport roundTitleEn from 'assets/images/round-title-en.svg';\nimport roundTitlePt from 'assets/images/round-title-pt.svg';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Components\nimport { Translate } from 'components/language';\nimport { TimedButton } from 'components/buttons';\n\ntype RoundAnnouncementProps = {\n  round: GameRound;\n  onPressButton?: GenericFunction;\n  buttonText?: string;\n  time: number;\n  players?: GamePlayers;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  children?: any;\n  unskippable?: boolean;\n  circleColor?: string;\n};\n\nexport function RoundAnnouncement({\n  round,\n  onPressButton,\n  buttonText,\n  time = 0,\n  className,\n  children,\n  unskippable = false,\n  circleColor,\n}: RoundAnnouncementProps) {\n  useTemporarilyHidePlayersBar();\n  const { translate } = useLanguage();\n\n  const circleStyle = circleColor ? { borderColor: circleColor } : {};\n\n  return (\n    <div className={clsx('round-announcement', className)}>\n      <div className=\"round-announcement__main\">\n        <div className=\"round-announcement__title\">\n          <img src={translate(roundTitlePt, roundTitleEn)} alt={translate('Rodada', 'Round')} />\n        </div>\n        <div className={clsx('round-announcement__round-wrapper', getAnimationClass('zoomIn'))}>\n          <div className=\"round-announcement__circle\" style={circleStyle} />\n          <div className=\"round-announcement__circle-2\" style={circleStyle} />\n          <div className=\"round-announcement__number\">{round?.current ?? round ?? 0}</div>\n        </div>\n\n        {children}\n\n        {Boolean(onPressButton) && !Boolean(time) && (\n          <Button type=\"primary\" onClick={onPressButton} className=\"round-announcement__go-button\">\n            {buttonText}\n          </Button>\n        )}\n\n        {Boolean(onPressButton) && Boolean(time) && (\n          <TimedButton\n            type=\"primary\"\n            onClick={onPressButton}\n            onExpire={onPressButton}\n            duration={time}\n            disabled={unskippable}\n          >\n            <Translate pt=\"Prosseguir\" en=\"Continue\" custom={buttonText} />\n          </TimedButton>\n        )}\n      </div>\n    </div>\n  );\n}\n","import { functions } from 'services/firebase';\nimport { httpsCallable } from 'firebase/functions';\nimport { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\n\nconst submitAction = httpsCallable(functions, 'cruzaPalavrasSubmitAction');\n\nexport function useOnSubmitWordsAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: submitAction,\n    actionName: 'submit-words',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: translate('Palavras enviadas com sucesso', 'Words submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar suas palavras',\n      'Oops, the application failed to send your words'\n    ),\n  });\n\n  return (payload: SubmitWordsPayload) => {\n    request({\n      action: 'SUBMIT_WORDS',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitClueAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: submitAction,\n    actionName: 'submit-clue',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(1),\n    successMessage: translate('Dica enviada com sucesso', 'Clue submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua dica',\n      'Oops, the application failed to send your clue'\n    ),\n  });\n\n  return (payload: SubmitCluePayload) => {\n    request({\n      action: 'SUBMIT_CLUE',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitGuessesAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: submitAction,\n    actionName: 'submit-guesses',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate('Respostas enviadas com sucesso', 'Guesses submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar suas respostas',\n      'Oops, the application failed to send your guesses'\n    ),\n  });\n\n  return (payload: SubmitGuessesPayload) => {\n    request({\n      action: 'SUBMIT_GUESSES',\n      ...payload,\n    });\n  };\n}\n","import clsx from 'clsx';\n// Design Resources\nimport { Image, Tooltip } from 'antd';\n// Hooks\nimport { useBlurCards } from 'hooks/useBlurCards';\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useTDBaseUrl } from 'hooks/useTDBaseUrl';\n// Utils\nimport { PUBLIC_URL } from 'utils/constants';\nimport { ImageBlurButtonContainer, ImageCard } from 'components/image-cards';\n\ntype WordGridHeaderProps = {\n  cell: CruzaPalavrasGridCell;\n  gridType: CruzaPalavrasGridType;\n};\n\nexport function WordGridHeader({ cell, gridType }: WordGridHeaderProps) {\n  if (gridType === 'contenders') {\n    return <WordGridHeaderContender cell={cell} gridType={gridType} />;\n  }\n\n  if (gridType === 'images') {\n    return <WordGridHeaderImage cell={cell} gridType={gridType} />;\n  }\n\n  return <>{cell.text}</>;\n}\n\nfunction WordGridHeaderContender({ cell }: WordGridHeaderProps) {\n  const { shouldBeBlurred } = useBlurCards();\n  const baseUrl = useTDBaseUrl('tdi');\n  const cardWidth = useCardWidth(8, { gap: 16, minWidth: 30, maxWidth: 100 });\n\n  const imageURL = cell.id!.replace(/-/g, '/');\n\n  const isBlurred = shouldBeBlurred(cell.id);\n  return (\n    <div className=\"w-contender\" style={{ width: `${cardWidth}px` }}>\n      <Tooltip title={cell.text}>\n        <span className=\"w-contender-name\">{cell.text}</span>\n      </Tooltip>\n\n      <Image\n        src={`${baseUrl}/${imageURL}.jpg`}\n        width={cardWidth}\n        className={clsx('w-contender-image', isBlurred && 'w-contender-image--blur')}\n        fallback={`${PUBLIC_URL.IN_GAME}/w-no-image.jpg`}\n        alt={cell.text}\n      />\n    </div>\n  );\n}\n\nfunction WordGridHeaderImage({ cell, gridType }: WordGridHeaderProps) {\n  const cardWidth = useCardWidth(8, { gap: 16, minWidth: 30, maxWidth: 100 });\n\n  return (\n    <div className=\"w-contender\" style={{ width: `${cardWidth}px` }}>\n      <ImageBlurButtonContainer cardId={cell.id!}>\n        <ImageCard imageId={cell.id!} cardWidth={cardWidth} />\n      </ImageBlurButtonContainer>\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Components\nimport { WordGridHeader } from './WordGridHeader';\n\ntype WordGridProps = {\n  grid: CruzaPalavrasGrid;\n  gridType: CruzaPalavrasGridType;\n  user: GamePlayer;\n  CellComponent: any;\n  cellComponentProps: any;\n};\n\nexport function WordGrid({ grid, user, CellComponent, gridType, cellComponentProps = {} }: WordGridProps) {\n  const length = Math.sqrt(grid.length);\n\n  const gridStyle = {\n    gridTemplateColumns: `repeat(${length}, 1fr)`,\n    gridTemplateRows: `repeat(${length}, auto)`,\n  };\n\n  return (\n    <div className=\"x-grid\" style={gridStyle}>\n      {grid.map((cell) => (\n        <div className={clsx('x-grid-cell', `x-grid-cell--${cell.kind}`)} key={`${cell.index}-${cell.kind}`}>\n          {cell.kind === 'header' && <WordGridHeader cell={cell} gridType={gridType} />}\n\n          {cell.kind === 'cell' && <CellComponent {...cellComponentProps} cell={cell} user={user} />}\n        </div>\n      ))}\n    </div>\n  );\n}\n","// This icon file is generated automatically.\nvar FormOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M904 512h-56c-4.4 0-8 3.6-8 8v320H184V184h320c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V520c0-4.4-3.6-8-8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M355.9 534.9L354 653.8c-.1 8.9 7.1 16.2 16 16.2h.4l118-2.9c2-.1 4-.9 5.4-2.3l415.9-415c3.1-3.1 3.1-8.2 0-11.3L785.4 114.3c-1.6-1.6-3.6-2.3-5.7-2.3s-4.1.8-5.7 2.3l-415.8 415a8.3 8.3 0 00-2.3 5.6zm63.5 23.6L779.7 199l45.2 45.1-360.5 359.7-45.7 1.1.7-46.4z\" } }] }, \"name\": \"form\", \"theme\": \"outlined\" };\nexport default FormOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport FormOutlinedSvg from \"@ant-design/icons-svg/es/asn/FormOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar FormOutlined = function FormOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: FormOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  FormOutlined.displayName = 'FormOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(FormOutlined);","type PreviousClueProps = {\n  clue: string;\n};\n\nexport function PreviousClue({ clue }: PreviousClueProps) {\n  return <div className=\"x-previous-clue\">{clue}</div>;\n}\n","import { useEffect, useRef, useState } from 'react';\n//Design Resources\nimport { Button, Input, InputRef, Space } from 'antd';\n// Hooks\nimport { useMock } from 'hooks/useMock';\n// Components\nimport { Translate } from 'components/language';\n\ntype WordFormProps = {\n  x: string;\n  y: string;\n  index: number;\n  onSubmit: GenericFunction;\n  disabled?: boolean;\n};\n\nexport function WordForm({ x, y, onSubmit, disabled, index }: WordFormProps) {\n  const [clue, setClue] = useState('');\n  const textInput = useRef<InputRef | null>(null);\n\n  const onChange = (e: any) => {\n    setClue(e.target.value);\n  };\n\n  useEffect(() => textInput && textInput.current!.focus(), []);\n\n  // DEV: Submit made-up words\n  useMock(() => {\n    onSubmit({ clue: `${x.substring(0, x.length / 2)}${y.substring(y.length / 2)}`, coordinate: index });\n  }, []);\n\n  return (\n    <Space direction=\"vertical\">\n      <Input\n        ref={textInput}\n        placeholder={`${x} + ${y}`}\n        onChange={onChange}\n        onPressEnter={() => onSubmit({ clue, coordinate: index })}\n      />\n      <Button\n        type=\"primary\"\n        onClick={() => onSubmit({ clue, coordinate: index })}\n        disabled={disabled || !clue.length}\n      >\n        <Translate pt=\"Enviar\" en=\"Submit\" />\n      </Button>\n    </Space>\n  );\n}\n","//Design Resources\nimport { Button, Popover } from 'antd';\nimport { FormOutlined } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\nimport { PreviousClue } from './PreviousClue';\nimport { WordForm } from './WordForm';\n\ntype WritingCellProps = {\n  onSubmitClue: GenericFunction;\n  cell: CruzaPalavrasGridCell;\n  disabled?: boolean;\n  user: GamePlayer;\n};\n\nexport function WritingCell({ onSubmitClue, cell, user, disabled }: WritingCellProps) {\n  if (cell.writable && user.id === cell.playerId) {\n    return (\n      <Popover\n        content={\n          <WordForm x={cell.xText ?? ''} y={cell.yText ?? ''} index={cell.index} onSubmit={onSubmitClue} />\n        }\n        title={<Translate pt=\"Escreva\" en=\"Write\" />}\n        trigger=\"click\"\n      >\n        <Button shape=\"circle\" type=\"primary\" disabled={disabled}>\n          <FormOutlined />\n        </Button>\n      </Popover>\n    );\n  }\n\n  if (cell.text) {\n    return <PreviousClue clue={cell.text} />;\n  }\n\n  return <></>;\n}\n","import { Translate } from 'components/language';\nimport { PointsHighlight } from 'components/metrics/PointsHighlight';\nimport { Instruction } from 'components/text';\n\nexport function WritingCluesRule({ playerCount }: { playerCount: number }) {\n  return (\n    <Instruction>\n      <Translate\n        pt={\n          <>\n            Você tem uma coordenada específica e única na grade de palavras.\n            <br />\n            Escreva uma dica (palavra única) que conecte as palavras da linha e da coluna assinalada a você.\n            <br />\n            Escreva algo bem simples e óbvio porque se ninguém entender você perderá{' '}\n            <PointsHighlight type=\"negative\">- {playerCount}</PointsHighlight> pontos.\n          </>\n        }\n        en={\n          <>\n            You will get an unique coordinate in the word grid.\n            <br />\n            You must write a single word clue that connects the word in the column and in the row of your\n            coordinate.\n            <br />\n            Write something simple and obvious because if nobody gets your clue you will lose{' '}\n            <PointsHighlight type=\"negative\">- {playerCount}</PointsHighlight>\n            points.\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function ScoringRule({ playerCount }: { playerCount: number }) {\n  return (\n    <Instruction>\n      <Translate\n        pt={\n          <>\n            Você ganha <PointsHighlight>+2</PointsHighlight> pontos para cada célula com uma resposta correta\n            sua.\n            <br />\n            <PointsHighlight>+1</PointsHighlight> ponto para cada célula com uma dica mas uma resposta errada\n            sua.\n            <br />\n            <PointsHighlight>+1</PointsHighlight> ponto para cada voto correto que sua dica recebeu.\n            <br />\n            Mas se ninguém acertar sua dica, você perde{' '}\n            <PointsHighlight type=\"negative\">- {playerCount}</PointsHighlight> pontos.\n          </>\n        }\n        en={\n          <>\n            You get <PointsHighlight>+2</PointsHighlight> points for each cell with your correct answer.\n            <br />\n            <PointsHighlight>+1</PointsHighlight> point for each cell with a clue but with a wrong answer of\n            yours.\n            <br />\n            <PointsHighlight>+1</PointsHighlight> point for each correct vote your clue received.\n            <br />\n            But if nobody gets your clue correctly, you lose{' '}\n            <PointsHighlight type=\"negative\">- {playerCount}</PointsHighlight> points.\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n","// Hooks\nimport { useLoading } from 'hooks/useLoading';\n// Components\nimport { Step } from 'components/steps';\nimport { RuleInstruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { PopoverRule } from 'components/rules';\nimport { WordGrid } from './components/WordGrid';\nimport { WritingCell } from './components/WritingCell';\nimport { WritingCluesRule } from './components/RulesBlobs';\n\ntype StepClueWritingProps = {\n  grid: CruzaPalavrasGrid;\n  gridType: CruzaPalavrasGridType;\n  user: GamePlayer;\n  onSubmitClue: GenericFunction;\n  players: GamePlayers;\n} & AnnouncementProps;\n\nexport function StepClueWriting({\n  grid,\n  gridType,\n  user,\n  onSubmitClue,\n  players,\n  announcement,\n}: StepClueWritingProps) {\n  const { isLoading } = useLoading();\n\n  const onSubmitClueClick = (payload: { clue: string; coordinate: number }) => {\n    onSubmitClue({\n      clue: payload.clue.trim().toLowerCase(),\n      currentClueCoordinate: payload.coordinate,\n    });\n  };\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title>\n        <Translate pt=\"Escreva sua dica\" en=\"Write your clue\" />\n      </Title>\n\n      <PopoverRule content={<WritingCluesRule playerCount={Object.keys(players).length} />} />\n\n      <RuleInstruction type=\"action\">\n        <Translate\n          pt={\n            <>\n              Clique em um dos ícones na grade e escreva sua dica.\n              <br />\n              Sua dica deve conter apenas <strong>uma palavra única</strong>.\n              <br />\n              Você <strong>NÃO</strong> pode usar nenhuma palavra que esteja na grade.\n            </>\n          }\n          en={\n            <>\n              Click on the icon on either of the table cell and write your clue.\n              <br />\n              Your clue must be a <strong>single-word</strong> clue.\n              <br />\n              You can <strong>NOT</strong> use any words already in the table.\n            </>\n          }\n        />\n      </RuleInstruction>\n\n      <WordGrid\n        grid={grid}\n        user={user}\n        CellComponent={WritingCell}\n        cellComponentProps={{ onSubmitClue: onSubmitClueClick, disabled: isLoading }}\n        gridType={gridType}\n      />\n    </Step>\n  );\n}\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Components\nimport { Translate } from 'components/language';\nimport { TextHighlight, Title } from 'components/text';\n\ntype PlayerRecentClueProps = {\n  user: GamePlayer;\n  grid: CruzaPalavrasGridCell[];\n};\n\nexport function PlayerRecentClue({ user, grid }: PlayerRecentClueProps) {\n  const cell = grid[user.coordinate];\n\n  if (!user.clue || !cell) {\n    return <></>;\n  }\n\n  return (\n    <Space className=\"space-container\" direction=\"vertical\">\n      <Title size=\"xx-small\">\n        <Translate pt=\"Sua dica\" en=\"Your clue\" />\n      </Title>\n      <span>\n        <TextHighlight>{cell.xText}</TextHighlight> + <TextHighlight>{cell.yText}</TextHighlight> ={' '}\n        <TextHighlight>{user.clue}</TextHighlight>\n      </span>\n    </Space>\n  );\n}\n","// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitClueAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { GridIcon } from 'icons/GridIcon';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { RoundAnnouncement } from 'components/round';\nimport { StepSwitcher } from 'components/steps';\nimport { StepClueWriting } from './StepClueWriting';\nimport { WritingCluesRule } from './components/RulesBlobs';\nimport { Translate } from 'components/language';\nimport { PlayerRecentClue } from './components/PlayerRecentClue';\n\nexport function PhaseClueWriting({ players, state, info }: PhaseProps) {\n  const { step, goToNextStep, setStep } = useStep(0);\n\n  const user = useUser(players, state);\n\n  const onSubmitClue = useOnSubmitClueAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<GridIcon />}\n      title={<Translate pt=\"Escreva!\" en=\"Write!\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <WritingCluesRule playerCount={Object.keys(players).length} />\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.CRUZA_PALAVRAS.CLUE_WRITING}>\n      <StepSwitcher\n        step={step}\n        players={players}\n        waitingRoom={{ content: <PlayerRecentClue grid={state.grid} user={user} /> }}\n      >\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state?.round}\n          onPressButton={goToNextStep}\n          buttonText=\" \"\n          time={5}\n          circleColor={info?.appearance?.color}\n        />\n\n        {/* Step 1 */}\n        <StepClueWriting\n          user={user}\n          grid={state.grid}\n          gridType={state.gameType}\n          onSubmitClue={onSubmitClue}\n          players={players}\n          announcement={announcement}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","import { SEPARATOR } from 'utils/constants';\n\n/**\n * Checks if an instance is a clue\n * @param instance\n * @returns\n */\nexport const isClue = (instance?: any) => Boolean(instance?.clue);\n\n/**\n *\n * @param clueObj\n * @returns\n */\nexport const getClueKey = (clueObj?: CruzaPalavrasClue): string =>\n  `${clueObj?.clue}${SEPARATOR}${clueObj?.playerId}`;\n\n/**\n *\n * @param key\n * @returns\n */\nexport const getClueFromKey = (key: string): string[] => key.split(SEPARATOR) ?? ['', ''];\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { CheckCircleFilled, PlusCircleFilled } from '@ant-design/icons';\n// Utils\nimport { getColorFromIndex } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\n\ntype ClueCardProps = {\n  isMatched?: boolean;\n  isSelected?: boolean;\n  clue?: string;\n  indexColor?: number;\n  color?: string;\n  player?: GamePlayer;\n  strikeMatches?: boolean;\n};\n\nexport function ClueCard({\n  isMatched,\n  isSelected,\n  clue,\n  indexColor = 0,\n  color,\n  player,\n  strikeMatches = false,\n}: ClueCardProps) {\n  const colorClass = getColorFromIndex(indexColor);\n  return (\n    <div\n      className={clsx(\n        'x-clue-card',\n        isSelected && 'x-clue-card--selected',\n        !Boolean(color) && `color-border--${colorClass}`\n      )}\n      style={{ borderColor: color }}\n    >\n      <span\n        className={clsx('x-clue-card__icon', !Boolean(color) && `color-background--${colorClass}`)}\n        style={{ backgroundColor: color }}\n      >\n        {isMatched ? (\n          Boolean(player) ? (\n            <Avatar id={player?.avatarId} />\n          ) : (\n            <CheckCircleFilled />\n          )\n        ) : (\n          <PlusCircleFilled style={isSelected ? { color: 'gold' } : { color: 'white' }} />\n        )}\n      </span>\n      <span className={clsx('x-clue-card__clue', isMatched && strikeMatches && 'x-clue-card__clue--matched')}>\n        {clue}\n      </span>\n    </div>\n  );\n}\n","//Design Resources\nimport { Button } from 'antd';\nimport { PlusCircleFilled } from '@ant-design/icons';\n// Utils\nimport { getClueFromKey } from '../utils/helpers';\n// Components\nimport { ClueCard } from './ClueCard';\nimport { PreviousClue } from './PreviousClue';\n\ntype SelectableCellProps = {\n  onSelectCell: GenericFunction;\n  onClearCell: GenericFunction;\n  cell: CruzaPalavrasGridCell;\n  active: any;\n  guesses: any;\n  clues: CruzaPalavrasClue[];\n  user: GamePlayer;\n};\n\nexport function SelectableCell({\n  onSelectCell,\n  onClearCell,\n  cell,\n  active,\n  guesses,\n  clues,\n  user,\n}: SelectableCellProps) {\n  const isSelected = cell.index === active;\n  const matchEntry = Object.entries(guesses).find((arr) => arr[1] === cell.index);\n  const [clueKey, coordinate] = matchEntry ?? [];\n  const [clue, playerId] = getClueFromKey(clueKey ?? '');\n\n  const isMatched = coordinate === cell.index;\n\n  if (isMatched) {\n    const clueIndexColor = clues.findIndex((c) => c.clue === clue && c.playerId === playerId);\n    return (\n      <Button\n        onClick={user.id !== playerId ? () => onClearCell(clueKey) : () => {}}\n        type=\"text\"\n        style={{ height: 'auto' }}\n      >\n        <ClueCard isMatched={isMatched} isSelected={isSelected} clue={clue} indexColor={clueIndexColor} />\n      </Button>\n    );\n  }\n\n  if (cell.text) {\n    return <PreviousClue clue={cell.text} />;\n  }\n\n  return (\n    <Button onClick={() => onSelectCell(cell.index)} shape=\"circle\">\n      <PlusCircleFilled style={isSelected ? { color: 'gold' } : {}} />\n    </Button>\n  );\n}\n","// Helpers\nimport { getClueKey } from '../utils/helpers';\n// Components\nimport { ClueCard } from './ClueCard';\n\ntype CluesProps = {\n  clues: CruzaPalavrasClue[];\n  onSelectClue: GenericFunction;\n  active: any;\n  guesses: PlainObject;\n};\n\nexport function Clues({ clues, onSelectClue, active, guesses }: CluesProps) {\n  return (\n    <ul className=\"x-clue-cards\">\n      {clues.map((clueObj, index: number) => {\n        const isSelected = clueObj.coordinate === active?.coordinate;\n        const isMatched = Boolean(guesses[getClueKey(clueObj)]);\n        return (\n          <li key={`${clueObj.coordinate}-${clueObj.clue}`} className=\"x-clue-card-li\">\n            <button className=\"x-clue-card-button\" onClick={() => onSelectClue(clueObj)}>\n              <ClueCard\n                isMatched={isMatched}\n                isSelected={isSelected}\n                clue={clueObj.clue}\n                indexColor={index}\n                strikeMatches\n              />\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import { useState, useCallback } from 'react';\nimport { useEffectOnce } from 'react-use';\n//Design Resources\nimport { Button, Space } from 'antd';\n// Utils\nimport { shuffle } from 'utils/helpers';\nimport { getClueFromKey, getClueKey, isClue } from './utils/helpers';\n// Components\nimport { Step } from 'components/steps';\nimport { RuleInstruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { WordGrid } from './components/WordGrid';\nimport { SelectableCell } from './components/SelectableCell';\nimport { Clues } from './components/Clues';\n\ntype StepGuessingProps = {\n  grid: CruzaPalavrasGrid;\n  gridType: CruzaPalavrasGridType;\n  user: GamePlayer;\n  clues: CruzaPalavrasClue[];\n  onSubmitGuesses: GenericFunction;\n} & AnnouncementProps;\n\nexport function StepGuessing({\n  grid,\n  gridType,\n  user,\n  clues,\n  onSubmitGuesses,\n  announcement,\n}: StepGuessingProps) {\n  const [active, setActive] = useState(null);\n  const [guesses, setGuesses] = useState<any>({});\n  const [choseRandomly, setChoseRandomly] = useState(false);\n\n  const onSelectClue = useCallback(\n    (clueIndex: any) => {\n      if (!active || isClue(active)) {\n        setActive(clueIndex);\n      } else {\n        setGuesses((state: any) => ({\n          ...state,\n          [getClueKey(clueIndex)]: active,\n        }));\n        setActive(null);\n      }\n    },\n    [active]\n  );\n\n  const onSelectCell = useCallback(\n    (cellCoordinate: any) => {\n      if (!isClue(active)) {\n        setActive(cellCoordinate);\n      } else {\n        setGuesses((state: any) => {\n          const newState = Object.entries(state).reduce((acc: PlainObject, [key, value]) => {\n            if (key && value && value !== cellCoordinate) {\n              acc[key] = value;\n            }\n            return acc;\n          }, {});\n\n          newState[getClueKey(active!)] = cellCoordinate;\n\n          setActive(null);\n          return newState;\n        });\n      }\n    },\n    [active]\n  );\n\n  const onClearCell = (clueKey: string) => {\n    setGuesses((state: PlainObject) => {\n      const newState = { ...state };\n      delete newState[clueKey];\n      return newState;\n    });\n  };\n\n  const prepareSubmitGuesses = useCallback(() => {\n    const result = Object.entries(guesses).reduce((acc: PlainObject, [clueKey, value]) => {\n      const [, playerId] = getClueFromKey(clueKey);\n      acc[playerId] = value;\n      return acc;\n    }, {});\n\n    onSubmitGuesses({ guesses: result, choseRandomly });\n  }, [guesses, onSubmitGuesses, choseRandomly]);\n\n  // Select player's own clue\n  useEffectOnce(() => {\n    const playersOwnClue = clues.find((clue) => clue.playerId === user.id);\n\n    setGuesses({\n      [getClueKey(playersOwnClue)]: playersOwnClue?.coordinate,\n    });\n  });\n\n  const randomGuessThem = () => {\n    const usedCells = Object.values(guesses);\n    const usedClues = Object.keys(guesses);\n    setChoseRandomly(true);\n\n    const availableCells = shuffle(\n      grid.filter((cell) => cell.available && cell.playerId !== user.id && !usedCells.includes(cell.index))\n    );\n    const availableClues = clues.filter((clue) => !usedClues.includes(getClueKey(clue)));\n    const newGuesses = availableClues.reduce((acc: PlainObject, clueObj, index) => {\n      if (clueObj.playerId === user.id) {\n        acc[getClueKey(clueObj)] = clueObj.coordinate;\n      } else {\n        acc[getClueKey(clueObj)] = availableCells[index].index;\n      }\n      return acc;\n    }, {});\n    setGuesses({\n      ...newGuesses,\n      ...guesses,\n    });\n  };\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title>\n        <Translate pt=\"Decifre as dicas!\" en=\"Guess the cells!\" />\n      </Title>\n\n      <Clues clues={clues} onSelectClue={onSelectClue} active={active} guesses={guesses} />\n\n      <RuleInstruction type=\"action\">\n        <Translate\n          pt=\"Clique em uma dica acima e em uma célula abaixo, ou vice-versa para posicionar as dicas nas células corretas.\"\n          en=\"Click on a clue above then on a cell below, or vice-versa, to position the clues in their correct cells.\"\n        />\n      </RuleInstruction>\n\n      <Space className=\"space-container\" align=\"center\">\n        <Button\n          size=\"large\"\n          type=\"primary\"\n          onClick={prepareSubmitGuesses}\n          disabled={Object.keys(guesses).length !== clues.length}\n        >\n          <Translate pt=\"Enviar respostas\" en=\"Send guesses\" />\n        </Button>\n        <Button size=\"large\" type=\"dashed\" onClick={randomGuessThem}>\n          <Translate pt=\"Desistir\" en=\"Give up\" />\n        </Button>\n      </Space>\n\n      <WordGrid\n        grid={grid}\n        gridType={gridType}\n        user={user}\n        CellComponent={SelectableCell}\n        cellComponentProps={{ onSelectCell, onClearCell, active, guesses, clues, user }}\n      />\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitGuessesAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { GuessIcon } from 'icons/GuessIcon';\n// Components\nimport { Translate } from 'components/language';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { StepGuessing } from './StepGuessing';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\n\nexport function PhaseGuessing({ players, state, info }: PhaseProps) {\n  const { step, setStep } = useStep(0);\n  const user = useUser(players, state);\n\n  const onSubmitGuesses = useOnSubmitGuessesAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<GuessIcon />}\n      title={<Translate pt=\"Match!\" en=\"Combine!\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <Instruction>\n        <Translate\n          pt={\n            <>\n              Agora combine as dicas de cada jogador com as coordenadas corretas!\n              <br />\n              Basta clicar em uma das dicas no topo e então em uma das células da grade.\n            </>\n          }\n          en={\n            <>\n              Now match the clues from each player with the correct coordinates\n              <br />\n              Just click on one of the clues on top then in one of the cells in the grid.\n            </>\n          }\n        />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.CRUZA_PALAVRAS.GUESSING}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepGuessing\n          user={user}\n          grid={state.grid}\n          gridType={state.gameType}\n          clues={state.clues}\n          onSubmitGuesses={onSubmitGuesses}\n          announcement={announcement}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseGuessing;\n","// This icon file is generated automatically.\nvar CheckSquareFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM695.5 365.7l-210.6 292a31.8 31.8 0 01-51.7 0L308.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.2 0 19.9 4.9 25.9 13.3l71.2 98.8 157.2-218c6-8.3 15.6-13.3 25.9-13.3H689c6.5 0 10.3 7.4 6.5 12.7z\" } }] }, \"name\": \"check-square\", \"theme\": \"filled\" };\nexport default CheckSquareFilled;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport CheckSquareFilledSvg from \"@ant-design/icons-svg/es/asn/CheckSquareFilled\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar CheckSquareFilled = function CheckSquareFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: CheckSquareFilledSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  CheckSquareFilled.displayName = 'CheckSquareFilled';\n}\nexport default /*#__PURE__*/React.forwardRef(CheckSquareFilled);","// This icon file is generated automatically.\nvar CloseSquareFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"fill-rule\": \"evenodd\", \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M880 112c17.7 0 32 14.3 32 32v736c0 17.7-14.3 32-32 32H144c-17.7 0-32-14.3-32-32V144c0-17.7 14.3-32 32-32zM639.98 338.82h-.04l-.08.06L512 466.75 384.14 338.88c-.04-.05-.06-.06-.08-.06a.12.12 0 00-.07 0c-.03 0-.05.01-.09.05l-45.02 45.02a.2.2 0 00-.05.09.12.12 0 000 .07v.02a.27.27 0 00.06.06L466.75 512 338.88 639.86c-.05.04-.06.06-.06.08a.12.12 0 000 .07c0 .03.01.05.05.09l45.02 45.02a.2.2 0 00.09.05.12.12 0 00.07 0c.02 0 .04-.01.08-.05L512 557.25l127.86 127.87c.04.04.06.05.08.05a.12.12 0 00.07 0c.03 0 .05-.01.09-.05l45.02-45.02a.2.2 0 00.05-.09.12.12 0 000-.07v-.02a.27.27 0 00-.05-.06L557.25 512l127.87-127.86c.04-.04.05-.06.05-.08a.12.12 0 000-.07c0-.03-.01-.05-.05-.09l-45.02-45.02a.2.2 0 00-.09-.05.12.12 0 00-.07 0z\" } }] }, \"name\": \"close-square\", \"theme\": \"filled\" };\nexport default CloseSquareFilled;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport CloseSquareFilledSvg from \"@ant-design/icons-svg/es/asn/CloseSquareFilled\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar CloseSquareFilled = function CloseSquareFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: CloseSquareFilledSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  CloseSquareFilled.displayName = 'CloseSquareFilled';\n}\nexport default /*#__PURE__*/React.forwardRef(CloseSquareFilled);","import clsx from 'clsx';\nimport { orderBy } from 'lodash';\n//Design Resources\nimport { Space, Table } from 'antd';\nimport { CheckSquareFilled, CloseSquareFilled, TrophyOutlined } from '@ant-design/icons';\n// Hooks\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Utils\nimport { AVATARS as avatars } from 'utils/avatars';\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Step } from 'components/steps';\nimport { RuleInstruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { PopoverRule } from 'components/rules';\nimport { WordGrid } from './components/WordGrid';\nimport { ClueCard } from './components/ClueCard';\nimport { PreviousClue } from './components/PreviousClue';\nimport { ScoringRule } from './components/RulesBlobs';\nimport { AvatarName } from 'components/avatars';\nimport { TimedButton } from 'components/buttons';\nimport { getMeanDuration } from 'utils/helpers';\nimport { PointsHighlight } from 'components/metrics/PointsHighlight';\n\nconst AVATARS: PlainObject = avatars;\n\ntype PlayersInCellProps = {\n  cellPlayers: {\n    playerId: PlayerId;\n    isCorrect?: boolean;\n    color?: string;\n  }[];\n  players: GamePlayers;\n};\n\nfunction PlayersInCell({ cellPlayers, players }: PlayersInCellProps) {\n  return (\n    <ul>\n      {cellPlayers.map(({ playerId, isCorrect }: any) =>\n        isCorrect ? (\n          <li\n            key={`players-in-cell-${playerId}`}\n            className={clsx(isCorrect && 'x-players-in-cell-player--correct')}\n          >\n            <AvatarName player={players[playerId]} size=\"small\" />\n          </li>\n        ) : undefined\n      )}\n    </ul>\n  );\n}\n\ntype ResultCellProps = {\n  cell: any;\n  clues: CruzaPalavrasClue[];\n  players: GamePlayers;\n  playerPerVotedCell: any;\n  colorCodedCluesPerPlayer: any;\n};\n\nfunction ResultCell({ cell, clues, players, playerPerVotedCell, colorCodedCluesPerPlayer }: ResultCellProps) {\n  const clue = clues.find((c) => c.coordinate === cell.index);\n  const cellPlayers = playerPerVotedCell[cell.index] ?? [];\n\n  if (clue) {\n    return (\n      <div>\n        <ClueCard\n          isMatched\n          clue={clue.clue}\n          color={colorCodedCluesPerPlayer[clue.playerId!]}\n          player={players[clue.playerId!]}\n        />\n        {Boolean(cellPlayers.length) && <PlayersInCell cellPlayers={cellPlayers} players={players} />}\n      </div>\n    );\n  }\n\n  if (cell.text) {\n    return <PreviousClue clue={cell.text} />;\n  }\n\n  return (\n    <span>\n      {Boolean(cellPlayers.length) && <PlayersInCell cellPlayers={cellPlayers} players={players} />}\n    </span>\n  );\n}\n\ntype AnswersListProps = {\n  players: GamePlayers;\n  grid: CruzaPalavrasGrid;\n  correctCoordinatesPerPlayer: any;\n};\n\nfunction AnswersList({ players, grid, correctCoordinatesPerPlayer }: AnswersListProps) {\n  const { translate } = useLanguage();\n\n  const columns = [\n    {\n      title: translate('Jogador', 'Player'),\n      dataIndex: 'player',\n      key: 'player',\n      render: (data: any) => <AvatarName player={data} />,\n      sorter: (a: any, b: any) => (a.name > b.name ? -1 : 1),\n    },\n    {\n      title: translate('Achou que', 'Thought that'),\n      dataIndex: 'guess',\n      key: 'guess',\n      render: (guess: string) => guess.toUpperCase(),\n      sorter: (a: any, b: any) => (a > b ? -1 : 1),\n    },\n    {\n      title: translate('Era', 'Was'),\n      dataIndex: 'clue',\n      key: 'clue',\n      render: (clue: string) => clue.toUpperCase(),\n      sorter: (a: any, b: any) => (a > b ? -1 : 1),\n    },\n    {\n      title: translate('Resultado', 'Result'),\n      dataIndex: 'result',\n      key: 'result',\n      render: (value: any) =>\n        value ? (\n          <CheckSquareFilled style={{ color: 'green' }} />\n        ) : (\n          <CloseSquareFilled style={{ color: 'red' }} />\n        ),\n      sorter: (a: any, b: any) => (a > b ? -1 : 1),\n    },\n  ];\n\n  const parsedData = Object.values(players).map((player) => {\n    return Object.entries(player?.guesses ?? {}).reduce(\n      (acc: PlainObject, [guessedPlayerId, guessedCoordinate]: any) => {\n        if (guessedPlayerId === player.id) return acc;\n\n        const cell = grid[guessedCoordinate];\n\n        acc.push({\n          playerName: player.name,\n          player,\n          clue: `${cell.yText} + ${cell.xText}`,\n          guess: players[guessedPlayerId].clue,\n          result: correctCoordinatesPerPlayer?.[guessedCoordinate] === guessedPlayerId,\n        });\n\n        return acc;\n      },\n      []\n    );\n  });\n\n  const dataSource: any = orderBy(parsedData.flat(), ['playerName', 'guess'], ['asc', 'asc']);\n\n  return <Table size=\"small\" columns={columns} dataSource={dataSource} pagination={false} />;\n}\n\ntype BadCluesPlayersListProps = {\n  badCluesPlayersList: GamePlayer[];\n};\n\nfunction BadCluesPlayersList({ badCluesPlayersList }: BadCluesPlayersListProps) {\n  return (\n    <span>\n      {badCluesPlayersList.map((player, index) => (\n        <span key={`bad-clue-${player.id}-${index}`}>\n          <AvatarName player={player} key={`bad-clue-${player.id}`} size=\"small\" />\n          {badCluesPlayersList.length > 0 && index < badCluesPlayersList.length - 1 ? ', ' : ''}\n        </span>\n      ))}\n    </span>\n  );\n}\n\ntype StepRevealProps = {\n  players: GamePlayers;\n  grid: CruzaPalavrasGrid;\n  gridType: CruzaPalavrasGridType;\n  user: GamePlayer;\n  clues: CruzaPalavrasClue[];\n  goToNextStep: GenericFunction;\n  whoGotNoPoints: PlayerId[];\n} & AnnouncementProps;\n\nexport function StepReveal({\n  grid,\n  gridType,\n  user,\n  players,\n  clues,\n  goToNextStep,\n  whoGotNoPoints,\n  announcement,\n}: StepRevealProps) {\n  useTemporarilyHidePlayersBar();\n  const correctCoordinatesPerPlayer = clues.reduce((acc: PlainObject, clue) => {\n    acc[clue.coordinate] = clue.playerId;\n    return acc;\n  }, {});\n\n  const colorCodedCluesPerPlayer = clues.reduce((acc: PlainObject, clue) => {\n    acc[clue.playerId!] = AVATARS[players[clue.playerId!].avatarId].color;\n    return acc;\n  }, {});\n\n  const playerPerVotedCell = Object.values(players).reduce((acc: PlainObject, player) => {\n    Object.entries(player.guesses ?? {}).forEach(([playerId, coordinate]: any) => {\n      if (playerId !== player.id) {\n        if (acc[coordinate] === undefined) {\n          acc[coordinate] = [];\n        }\n        acc[coordinate].push({\n          playerId: player.id,\n          color: colorCodedCluesPerPlayer[playerId],\n          isCorrect: correctCoordinatesPerPlayer[coordinate] === playerId,\n        });\n      }\n    });\n\n    return acc;\n  }, {});\n\n  const whoGotNoPointsNames = whoGotNoPoints.map((playerId) => players[playerId]);\n  const playerCount = Object.keys(players).length;\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title>\n        <Translate pt=\"Resultado\" en=\"Results\" />\n      </Title>\n\n      <PopoverRule content={<ScoringRule playerCount={playerCount} />} />\n\n      {Boolean(whoGotNoPoints.length) && (\n        <RuleInstruction type=\"alert\">\n          <Translate\n            pt={\n              <>\n                Ninguém acertou a(s) dica(s) dadas por\n                <BadCluesPlayersList badCluesPlayersList={whoGotNoPointsNames} />, então ele(s) perde(m){' '}\n                <PointsHighlight type=\"negative\">- {playerCount}</PointsHighlight> pontos.\n              </>\n            }\n            en={\n              <>\n                Nobody got the clues given by\n                <BadCluesPlayersList badCluesPlayersList={whoGotNoPointsNames} />, so they lose{' '}\n                <PointsHighlight type=\"negative\">- {playerCount}</PointsHighlight> points.\n              </>\n            }\n          />\n        </RuleInstruction>\n      )}\n\n      <WordGrid\n        grid={grid}\n        gridType={gridType}\n        user={user}\n        CellComponent={ResultCell}\n        cellComponentProps={{ clues, players, playerPerVotedCell, colorCodedCluesPerPlayer }}\n      />\n\n      <Space className=\"space-container\" align=\"center\">\n        <TimedButton\n          duration={getMeanDuration(playerCount, 6, 40, 15) + 5}\n          icon={<TrophyOutlined />}\n          onExpire={goToNextStep}\n          onClick={goToNextStep}\n        >\n          <Translate pt=\"Ver Ranking\" en=\"See Ranking\" />\n        </TimedButton>\n      </Space>\n\n      <Title level={3} size=\"x-small\">\n        <Translate pt=\"Todas as respostas\" en=\"All Answers\" />\n      </Title>\n      <AnswersList correctCoordinatesPerPlayer={correctCoordinatesPerPlayer} players={players} grid={grid} />\n    </Step>\n  );\n}\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Components\nimport { Translate } from 'components/language';\nimport { PopoverRule } from 'components/rules';\nimport { ScoringRule } from './components/RulesBlobs';\nimport { StepRankingWrapper } from 'components/ranking';\nimport { VIPNextPhaseButton } from 'components/vip';\n\ntype StepRankingProps = {\n  players: GamePlayers;\n  playerCount: number;\n  round: GameRound;\n  ranking: GameRanking;\n  goToPreviousStep: GenericFunction;\n};\n\nexport function StepRanking({ players, playerCount, ranking, goToPreviousStep, round }: StepRankingProps) {\n  return (\n    <StepRankingWrapper\n      players={players}\n      ranking={ranking}\n      gainedPointsDescriptions={[\n        <Translate pt=\"Palpites corretos\" en=\"Correct guesses\" />,\n        <Translate\n          pt=\"Palpites que acertaram a célula de outra dica\"\n          en=\"Guesses that were placed in a cell for a different clue\"\n        />,\n        <Translate pt=\"Palpites recebidos corretamente\" en=\"Received correct guesses\" />,\n        <Translate\n          pt=\"Penalidade se ninguém acertou a sua dica\"\n          en=\"Penalty for nobody getting your clue correctly\"\n        />,\n      ]}\n    >\n      <PopoverRule content={<ScoringRule playerCount={playerCount} />} />\n\n      <Space className=\"space-container\" align=\"center\">\n        <Button onClick={goToPreviousStep}>\n          <Translate pt=\"Ver resultado novamente\" en=\"See results again\" />\n        </Button>\n      </Space>\n      <VIPNextPhaseButton round={round} />\n    </StepRankingWrapper>\n  );\n}\n","// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { RankIcon } from 'icons/RankIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { StepReveal } from './StepReveal';\nimport { StepRanking } from './StepRanking';\nimport { ScoringRule } from './components/RulesBlobs';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\n\nexport function PhaseReveal({ players, state, info }: PhaseProps) {\n  const { step, goToNextStep, goToPreviousStep } = useStep(0);\n  const user = useUser(players, state);\n\n  const playerCount = Object.keys(players).length;\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<RankIcon />}\n      title={<Translate pt=\"Resultado\" en=\"Results\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <ScoringRule playerCount={playerCount} />\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.CRUZA_PALAVRAS.REVEAL}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepReveal\n          user={user}\n          grid={state.grid}\n          gridType={state.gameType}\n          clues={state.clues}\n          goToNextStep={goToNextStep}\n          players={players}\n          whoGotNoPoints={state.whoGotNoPoints ?? []}\n          announcement={announcement}\n        />\n\n        {/* Step 1 */}\n        <StepRanking\n          players={players}\n          playerCount={playerCount}\n          round={state.round}\n          ranking={state.ranking}\n          goToPreviousStep={goToPreviousStep}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseReveal;\n","// Icons\nimport { TrophyIcon } from 'icons/TrophyIcon';\n// Components\nimport { GameOverWrapper } from 'components/game-over';\nimport { Achievements } from 'components/general/Achievements';\nimport achievementsReference from './utils/achievements';\n\nexport function PhaseGameOver({ state, info, players }: PhaseProps) {\n  return (\n    <GameOverWrapper info={info} state={state} players={players} announcementIcon={<TrophyIcon />}>\n      <Achievements players={players} achievements={state.achievements} reference={achievementsReference} />\n    </GameOverWrapper>\n  );\n}\n","import { sampleSize } from 'lodash';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Components\nimport { Step } from 'components/steps';\nimport { RuleInstruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { Card } from 'components/cards';\nimport { useBooleanDictionary } from 'hooks/useBooleanDictionary';\nimport { TransparentButton } from 'components/buttons';\n\ntype StepSelectWordsProps = {\n  user: GamePlayer;\n  deck: TextCard[];\n  onSubmitWords: GenericFunction;\n} & AnnouncementProps;\n\nexport function StepSelectWords({ deck, onSubmitWords, user, announcement }: StepSelectWordsProps) {\n  const { isLoading } = useLoading();\n  const { updateDict, length, keys } = useBooleanDictionary({});\n\n  useMock(() => {\n    onSubmitWords({ words: sampleSize(deck, 12).map((c) => c.id) });\n  });\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title>\n        <Translate pt=\"Quais cards deveriam estar no jogo?\" en=\"What cards should be in the game?\" />\n      </Title>\n\n      <RuleInstruction type=\"action\">\n        <Translate\n          pt={\n            <>\n              <strong>Selecione</strong> pelo 10 cartas para estar no jogo.\n              <br />\n              Quanto mais melhor!\n            </>\n          }\n          en={\n            <>\n              <strong>Select</strong> at least 10 cards to be in the game.\n              <br />\n              The more the merrier!\n            </>\n          }\n        />\n      </RuleInstruction>\n\n      <Space className=\"space-container\">\n        <Button\n          type=\"primary\"\n          onClick={() => onSubmitWords({ words: deck })}\n          disabled={length < 10 || isLoading || user.ready}\n        >\n          <Translate pt={`Enviar cartas (${length})`} en={`Submit cards (${length})`} />\n        </Button>\n      </Space>\n\n      <Space className=\"space-container max-width\" wrap>\n        {deck.map((card) => {\n          return (\n            <TransparentButton\n              key={card.id}\n              onClick={() => updateDict(card.id)}\n              active={keys.includes(card.id)}\n            >\n              <Card hideHeader>{card.text}</Card>\n            </TransparentButton>\n          );\n        })}\n      </Space>\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitWordsAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { VerifyListIcon } from 'icons/VerifyListIcon';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { WritingCluesRule } from './components/RulesBlobs';\nimport { Translate } from 'components/language';\nimport { StepSelectWords } from './StepSelectWords';\n\nexport function PhaseWordsSelection({ players, state, info }: PhaseProps) {\n  const { step, setStep } = useStep(0);\n\n  const user = useUser(players, state);\n\n  const onSubmitWords = useOnSubmitWordsAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<VerifyListIcon />}\n      title={<Translate pt=\"Preparação da Grade\" en=\"Grid Setup\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <WritingCluesRule playerCount={Object.keys(players).length} />\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.CRUZA_PALAVRAS.WORDS_SELECTION}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 1 */}\n        <StepSelectWords\n          deck={state.deck}\n          onSubmitWords={onSubmitWords}\n          user={user}\n          announcement={announcement}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","import { ConfigProvider } from 'antd';\n// Constants\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport { LoadingPage } from 'components/loaders';\nimport { PhaseClueWriting } from './PhaseClueWriting';\nimport { PhaseGuessing } from './PhaseGuessing';\nimport { PhaseReveal } from './PhaseReveal';\nimport { PhaseGameOver } from './PhaseGameOver';\n// Sass\nimport './cruza-palavras.scss';\nimport { PhaseWordsSelection } from './PhaseWordsSelection';\n\nfunction getActiveComponent(state: GameState) {\n  // If phase is not defined, it is likely that the game is still loading\n  if (state && !state.phase) return LoadingPage;\n\n  switch (state.phase) {\n    case PHASES.DEFAULT.LOBBY:\n      return PhaseLobby;\n    case PHASES.DEFAULT.RULES:\n      return PhaseRules;\n    case PHASES.DEFAULT.SETUP:\n      return PhaseSetup;\n    case PHASES.CRUZA_PALAVRAS.WORDS_SELECTION:\n      return PhaseWordsSelection;\n    case PHASES.CRUZA_PALAVRAS.CLUE_WRITING:\n      return PhaseClueWriting;\n    case PHASES.CRUZA_PALAVRAS.GUESSING:\n      return PhaseGuessing;\n    case PHASES.CRUZA_PALAVRAS.REVEAL:\n      return PhaseReveal;\n    case PHASES.DEFAULT.GAME_OVER:\n      return PhaseGameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionCruzaPalavras() {\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorPrimary: THEME_COLORS.FOREST,\n          colorLink: THEME_COLORS.FOREST,\n        },\n      }}\n    >\n      <Session gameCollection={GAME_COLLECTION.CRUZA_PALAVRAS} getActiveComponent={getActiveComponent} />\n    </ConfigProvider>\n  );\n}\n\nexport default SessionCruzaPalavras;\n","const ACHIEVEMENTS = {\n  BEST_CLUES: 'BEST_CLUES',\n  WORST_CLUES: 'WORST_CLUES',\n  BEST_GUESSER: 'BEST_GUESSER',\n  WORST_GUESSER: 'WORST_GUESSER',\n  CHOOSE_FOR_ME: 'CHOOSE_FOR_ME',\n  SHORTEST_WORDS: 'SHORTEST_WORDS',\n  LONGEST_WORDS: 'LONGEST_WORDS',\n  SAVIOR: 'SAVIOR',\n};\n\nexport const achievementsReference: AchievementReference = {\n  [ACHIEVEMENTS.BEST_CLUES]: {\n    icon: 'intersection',\n    title: {\n      pt: 'Melhor Cruzador',\n      en: 'Best Mixer',\n    },\n    description: {\n      pt: 'Jogadores acertaram suas dicas mais vezes',\n      en: 'Players got their clues correctly the most',\n    },\n  },\n  [ACHIEVEMENTS.WORST_CLUES]: {\n    icon: 'moon',\n    title: {\n      pt: 'Mais obscuro',\n      en: 'Most obscure',\n    },\n    description: {\n      pt: 'Jogadores erraram suas dicas mais vezes',\n      en: 'Players got their clues wrong the most',\n    },\n  },\n  [ACHIEVEMENTS.BEST_GUESSER]: {\n    icon: 'check-mark',\n    title: {\n      pt: 'Melhor Adivinhador',\n      en: 'Best Guesser',\n    },\n    description: {\n      pt: 'Acertou as dicas mais vezes',\n      en: 'Got clues right the most',\n    },\n  },\n  [ACHIEVEMENTS.WORST_GUESSER]: {\n    icon: 'x',\n    title: {\n      pt: 'Pior Adivinhador',\n      en: 'Worst Guesser',\n    },\n    description: {\n      pt: 'Errou as dicas mais vezes',\n      en: 'Got clues wrong the most',\n    },\n  },\n  [ACHIEVEMENTS.LONGEST_WORDS]: {\n    icon: 'dialog',\n    title: {\n      pt: 'Mais Falador',\n      en: 'Best Speaker',\n    },\n    description: {\n      pt: 'Usou as dicas mais longas',\n      en: 'Used the longest words',\n    },\n  },\n  [ACHIEVEMENTS.SHORTEST_WORDS]: {\n    icon: 'minus',\n    title: {\n      pt: 'Mais Quieto',\n      en: 'Quieter',\n    },\n    description: {\n      pt: 'Usou as dias mais curtas',\n      en: 'Used the shortest words',\n    },\n  },\n  [ACHIEVEMENTS.SAVIOR]: {\n    icon: 'heart',\n    title: {\n      pt: 'O Salvador',\n      en: 'The Savior',\n    },\n    description: {\n      pt: 'Foi o único a acertar a dica de alguém mais vezes, impedindo eles de perderem pontos',\n      en: 'Guessed a clue by themselves the most preventing a player to lose points',\n    },\n  },\n\n  [ACHIEVEMENTS.CHOOSE_FOR_ME]: {\n    icon: 'dice',\n    title: {\n      pt: 'Menos Brasileiro',\n      en: 'The Shirker',\n    },\n    description: {\n      pt: 'Apertou o botão Chutar Restantes mais vezes',\n      en: \"Pressed 'Guess for me' the most\",\n    },\n  },\n};\n\nexport default achievementsReference;\n","import { Dispatch, useState } from 'react';\n\ntype UseBooleanDictionaryReturnValue = {\n  /**\n   * The dictionary\n   */\n  dict: BooleanDictionary;\n  /**\n   * Set the dictionary\n   */\n  setDict: Dispatch<React.SetStateAction<BooleanDictionary>>;\n  /**\n   * Add or remove an entry from the dictionary\n   * @param key - The key to add or remove\n   */\n  updateDict: (key: string) => void;\n  /**\n   * Reset the dictionary to the initial state\n   */\n  reset: () => void;\n  /**\n   * The number of entries in the dictionary\n   */\n  length: number;\n  /**\n   * The list of keys in the dictionary\n   */\n  keys: string[];\n};\n\n/**\n * A dictionary of booleans\n * @param initialState - The initial state, usually an empty object\n * @param validation - A function to validate if an entry can be added to the dictionary\n * @returns - A dictionary of booleans and its functions\n */\nexport function useBooleanDictionary(\n  initialState: BooleanDictionary,\n  validation?: BooleanFunction\n): UseBooleanDictionaryReturnValue {\n  const [dict, setDict] = useState(initialState);\n\n  const updateDict = (key: string) => {\n    const isValid = !validation || validation(dict);\n    if (!dict[key] && isValid) {\n      setDict((s) => ({\n        ...s,\n        [key]: true,\n      }));\n    } else {\n      const dictCopy = { ...dict };\n      delete dictCopy[key];\n      setDict(dictCopy);\n    }\n  };\n\n  const reset = () => setDict(initialState);\n\n  const keys = Object.keys(dict);\n\n  return {\n    dict,\n    setDict,\n    updateDict,\n    reset,\n    keys,\n    length: keys.length,\n  };\n}\n","export function GridIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#f9ad32\"\n        d=\"M50.624 50.623h410.752v410.754H50.624V50.623zm40.624 40.625v329.504h329.505V91.248H91.248z\"\n      ></path>\n      <path\n        fill=\"#f0f0fb\"\n        d=\"M91.25 91.25h329.5v329.5H91.25zM420.75 10H502v81.25h-81.25zM10 10h81.25v81.25H10zm0 410.75h81.25V502H10zm410.75 0H502V502h-81.25z\"\n      ></path>\n      <path d=\"M451.376 139.434v.475c0 5.522 4.477 10 10 10s10-4.478 10-10v-.475c0-5.522-4.477-10-10-10s-10 4.477-10 10zm-78.809 311.943h-.475c-5.523 0-10 4.478-10 10s4.477 10 10 10h.475c5.523 0 10-4.478 10-10s-4.477-10-10-10zM60.624 372.566v-.475c0-5.522-4.477-10-10-10s-10 4.478-10 10v.475c0 5.522 4.477 10 10 10 5.522 0 10-4.477 10-10zm78.809-311.943h.475c5.523 0 10-4.477 10-10s-4.477-10-10-10h-.475c-5.523 0-10 4.478-10 10s4.477 10 10 10z\"></path>\n      <path d=\"M512 91.248V10c0-5.522-4.477-10-10-10h-81.247c-5.523 0-10 4.478-10 10v30.623H168.992c-5.523 0-10 4.478-10 10s4.477 10 10 10h241.761v20.625H101.248V10c0-5.522-4.477-10-10-10H10C4.477 0 0 4.478 0 10v81.248c0 5.523 4.477 10 10 10h30.623v241.76c0 5.522 4.477 10 10 10s10-4.478 10-10v-241.76h20.624v309.504H10c-5.523 0-10 4.478-10 10V502c0 5.522 4.477 10 10 10h81.248c5.523 0 10-4.478 10-10v-30.623h241.76c5.523 0 10-4.478 10-10s-4.477-10-10-10c0 0 .001 0 0 0h-241.76v-20.625h309.505V502c0 5.522 4.477 10 10 10H502c5.523 0 10-4.478 10-10v-81.248c0-5.522-4.477-10-10-10h-30.623v-241.76c0-5.522-4.477-10-10-10s-10 4.478-10 10v241.76h-20.624V101.248H502c5.523 0 10-4.477 10-10zM410.752 410.752h-62.376v-62.377h62.376v62.377zM101.248 101.248h62.377v62.375h-62.377v-62.375zM348.376 266h62.376v62.375h-62.376V266zm-20 62.375H266V266h62.376v62.375zm20-82.375v-62.377h62.376V246h-62.376zm-20 0H266v-62.377h62.376V246zm-144.751-62.377h62.376V246h-62.376v-62.377zm-20 62.377h-62.377v-62.377h62.377V246zm102.376-82.377v-62.375h62.376v62.375h-62.376zm-20 0h-62.376v-62.375h62.376v62.375zM101.248 266h62.377v62.375h-62.377V266zm82.377 0h62.376v62.375h-62.376V266zm62.376 82.375v62.377h-62.376v-62.377h62.376zm20 0h62.376v62.377h-62.376v-62.377zm144.751-184.752h-62.376v-62.375h62.376v62.375zm-360.128-123c-5.523 0-10 4.478-10 10v30.625H20V20h61.248v61.248H60.624V50.623c0-5.522-4.478-10-10-10zm0 430.754h30.624V492H20v-61.248h61.248v20.625H50.624c-5.523 0-10 4.478-10 10s4.477 10 10 10zm50.624-123.002h62.377v62.377h-62.377v-62.377zm360.128 123.002c5.523 0 10-4.478 10-10v-30.625H492V492h-61.247v-61.248h20.624v30.625c-.001 5.522 4.476 10 9.999 10zM492 81.248h-61.247V60.623h30.624c5.523 0 10-4.477 10-10s-4.477-10-10-10h-30.624V20H492v61.248z\"></path>\n    </svg>\n  );\n}\n","export function GuessIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ff7b79\"\n        d=\"M440.447 428.072c16.619-20.939 26.55-47.426 26.55-76.235 0-10.548-1.332-20.784-3.835-30.552C486.593 305.468 502 278.671 502 248.273c0-46.528-36.106-84.599-81.824-87.786 8.812-12.864 13.976-28.424 13.976-45.194 0-44.226-35.853-80.079-80.079-80.079-16.63 0-32.075 5.072-44.876 13.75C291.326 25.298 262.961 10 231.021 10c-52.976 0-96.118 42.078-97.843 94.635a90.44 90.44 0 00-20.196-2.297c-49.845 0-90.252 40.407-90.252 90.252 0 23.113 8.698 44.187 22.987 60.153C24.019 269.226 10 295.294 10 324.644c0 49.845 40.407 90.252 90.252 90.252a89.959 89.959 0 0034.438-6.82c7.846 41.85 44.552 73.528 88.68 73.528 23.152 0 44.26-8.727 60.236-23.059 17.893 10.194 38.596 16.021 60.662 16.021 13.373 0 26.243-2.147 38.293-6.101C397.207 488.77 421.051 502 448 502a80.272 80.272 0 0036.406-8.691c-24.354-12.346-41.598-36.675-43.959-65.237z\"\n      ></path>\n      <path\n        fill=\"#80b4ff\"\n        d=\"M256 321.511c-12.15 0-22-9.85-22-22v-29.93c0-20.685 13.741-39.232 33.416-45.103 17.141-5.115 28.817-21.21 28.395-39.14-.492-20.923-17.915-38.346-38.837-38.838-10.842-.264-21.061 3.765-28.795 11.319-7.739 7.559-12.001 17.677-12.001 28.491 0 12.15-9.85 22-22 22s-22-9.85-22-22c0-22.763 8.969-44.061 25.256-59.968 16.282-15.904 37.795-24.35 60.575-23.831 21.541.507 41.857 9.239 57.205 24.586 15.347 15.347 24.079 35.663 24.586 57.205.888 37.708-23.704 71.567-59.802 82.339-1.157.345-1.997 1.582-1.997 2.94v29.93c-.001 12.15-9.851 22-22.001 22z\"\n      ></path>\n      <circle cx=\"256\" cy=\"387.511\" r=\"22\" fill=\"#80b6ff\"></circle>\n      <path d=\"M448 512c-26.624 0-51.955-11.846-69.1-32.008a132.764 132.764 0 01-34.632 4.574c-20.67 0-41.073-4.833-59.431-14.027a100.05 100.05 0 01-61.467 21.065c-44.32 0-82.912-29.039-95.741-70.502a99.87 99.87 0 01-27.377 3.794c-14.572 0-28.629-3.061-41.78-9.097-5.02-2.304-7.221-8.241-4.917-13.26 2.304-5.02 8.239-7.223 13.26-4.917 10.515 4.826 21.765 7.273 33.437 7.273 10.584 0 20.886-2.04 30.619-6.061a9.997 9.997 0 0113.648 7.399c7.1 37.878 40.262 65.371 78.851 65.371a80.093 80.093 0 0053.559-20.503 10.002 10.002 0 0111.628-1.245c16.892 9.624 36.156 14.71 55.711 14.71 12.011 0 23.846-1.885 35.175-5.603a10 10 0 0111.228 3.651C403.942 481.015 425.374 492 448 492a70.69 70.69 0 0014.335-1.451c-18.115-15.394-29.869-37.631-31.854-61.653a9.998 9.998 0 012.133-7.04c15.951-20.097 24.382-44.309 24.382-70.019 0-9.505-1.185-18.949-3.522-28.07a10 10 0 014.092-10.77C479.128 298.442 492 274.247 492 248.273c0-40.797-31.854-74.976-72.519-77.811a10 10 0 01-7.555-15.627c7.998-11.676 12.226-25.349 12.226-39.542 0-38.642-31.437-70.079-70.079-70.079-14.081 0-27.659 4.159-39.265 12.027a10 10 0 01-13.592-2.251C284.425 32.753 258.84 20 231.021 20c-47.698 0-86.285 37.32-87.849 84.963a10 10 0 01-12.224 9.421 80.714 80.714 0 00-17.966-2.045c-44.251 0-80.252 36-80.252 80.251a80.105 80.105 0 0020.438 53.485 10 10 0 01-1.403 14.631C31.578 276.042 20 299.346 20 324.644c0 3.576.237 7.171.704 10.684.728 5.475-3.12 10.503-8.595 11.23-5.479.732-10.503-3.12-11.231-8.595A101.374 101.374 0 010 324.644c0-28.153 11.475-54.328 31.801-73.246a100.049 100.049 0 01-19.071-58.809c0-55.279 44.973-100.251 100.252-100.251 3.716 0 7.446.211 11.165.631 3.278-23.739 14.329-45.625 31.771-62.539C176.155 10.807 202.827 0 231.021 0c31.109 0 59.94 12.989 80.405 35.933 13.057-7.035 27.633-10.718 42.647-10.718 49.67 0 90.079 40.409 90.079 90.079 0 13.063-2.789 25.788-8.148 37.475C479.656 162.844 512 202.2 512 248.273a97.95 97.95 0 01-37.623 77.212 133.55 133.55 0 012.62 26.352c0 28.874-9.034 56.146-26.172 79.144 3.133 22.718 17.472 42.95 38.104 53.409a10 10 0 010 17.838C476.138 508.712 462.368 512 448 512z\"></path>\n      <path d=\"M256 331.511c-17.645 0-32-14.355-32-32v-29.93c0-25.072 16.677-47.56 40.557-54.686 12.832-3.829 21.573-15.887 21.257-29.322-.369-15.664-13.412-28.707-29.076-29.076-8.09-.192-15.773 2.812-21.572 8.476-5.796 5.661-8.988 13.239-8.988 21.337 0 17.645-14.355 32-32 32s-32-14.355-32-32c0-25.479 10.04-49.317 28.269-67.121 18.205-17.782 42.281-27.246 67.79-26.675 24.131.568 46.875 10.339 64.048 27.512s26.944 39.917 27.512 64.04c.951 40.387-24.216 76.83-61.796 90.458v24.985C288 317.156 273.645 331.511 256 331.511zm-.035-195.023c.417 0 .833.005 1.252.015 26.173.616 47.975 22.417 48.591 48.6.528 22.425-14.083 42.558-35.532 48.958-15.471 4.616-26.276 19.223-26.276 35.52v29.93c0 6.617 5.383 12 12 12s12-5.383 12-12v-29.93c0-5.768 3.758-10.917 9.139-12.522 31.789-9.486 53.445-39.308 52.663-72.521-.447-18.96-8.139-36.848-21.66-50.369s-31.409-21.213-50.369-21.66c-20.078-.452-39.028 6.997-53.352 20.988-14.344 14.01-22.243 32.766-22.243 52.814 0 6.617 5.383 12 12 12s12-5.383 12-12c0-13.53 5.332-26.189 15.013-35.645 9.389-9.171 21.695-14.178 34.774-14.178zM256 419.511c-17.645 0-32-14.355-32-32s14.355-32 32-32 32 14.355 32 32-14.355 32-32 32zm0-44c-6.617 0-12 5.383-12 12s5.383 12 12 12 12-5.383 12-12-5.383-12-12-12zM27.71 388.35c-2.63 0-5.21-1.07-7.07-2.93a10.093 10.093 0 01-2.93-7.07c0-2.64 1.07-5.211 2.93-7.08a10.068 10.068 0 017.07-2.92c2.63 0 5.21 1.06 7.07 2.92s2.93 4.44 2.93 7.08c0 2.63-1.07 5.21-2.93 7.07s-4.44 2.93-7.07 2.93z\"></path>\n    </svg>\n  );\n}\n","export function RankIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fb5f7a\"\n        d=\"M305.709 123.258L256 87.857l-49.709 35.401a24.745 24.745 0 00-10.391 20.157v54.673c0 10.884 8.823 19.707 19.707 19.707h80.787c10.884 0 19.707-8.823 19.707-19.707v-54.673a24.746 24.746 0 00-10.392-20.157z\"\n      ></path>\n      <path\n        fill=\"#f74455\"\n        d=\"M316.1 143.42v54.67c0 10.88-8.82 19.71-19.71 19.71h-30.13c10.89 0 19.71-8.83 19.71-19.71v-54.67c0-8.01-3.87-15.52-10.39-20.16l-34.64-24.67L256 87.86l49.71 35.4a24.738 24.738 0 0110.39 20.16z\"\n      ></path>\n      <circle cx=\"256\" cy=\"53.83\" r=\"46.33\" fill=\"#fb5f7a\"></circle>\n      <path\n        fill=\"#f74455\"\n        d=\"M302.33 53.83c0 25.59-20.74 46.33-46.33 46.33-5.27 0-10.34-.88-15.06-2.5 18.19-6.26 31.26-23.52 31.26-43.83S259.13 16.26 240.94 10c4.72-1.62 9.79-2.5 15.06-2.5 25.59 0 46.33 20.74 46.33 46.33z\"\n      ></path>\n      <path\n        fill=\"#99e6fc\"\n        d=\"M395.942 258.439l-49.709-35.401-49.709 35.401a24.746 24.746 0 00-10.391 20.158v54.673c0 10.884 8.823 19.707 19.707 19.707h80.787c10.884 0 19.707-8.823 19.707-19.707v-54.673a24.747 24.747 0 00-10.392-20.158z\"\n      ></path>\n      <path\n        fill=\"#62dbfb\"\n        d=\"M406.333 278.601v54.67c0 10.88-8.82 19.71-19.71 19.71h-30.13c10.89 0 19.71-8.83 19.71-19.71v-54.67c0-8.01-3.87-15.52-10.39-20.16l-34.64-24.67 15.06-10.73 49.71 35.4a24.738 24.738 0 0110.39 20.16z\"\n      ></path>\n      <circle cx=\"346.233\" cy=\"189.011\" r=\"46.33\" fill=\"#99e6fc\"></circle>\n      <path\n        fill=\"#62dbfb\"\n        d=\"M392.563 189.011c0 25.59-20.74 46.33-46.33 46.33-5.27 0-10.34-.88-15.06-2.5 18.19-6.26 31.26-23.52 31.26-43.83s-13.07-37.57-31.26-43.83c4.72-1.62 9.79-2.5 15.06-2.5 25.59 0 46.33 20.74 46.33 46.33z\"\n      ></path>\n      <path\n        fill=\"#99e6fc\"\n        d=\"M215.477 258.439l-49.709-35.401-49.709 35.401a24.746 24.746 0 00-10.391 20.158v54.673c0 10.884 8.823 19.707 19.707 19.707h80.787c10.884 0 19.707-8.823 19.707-19.707v-54.673a24.752 24.752 0 00-10.392-20.158z\"\n      ></path>\n      <path\n        fill=\"#62dbfb\"\n        d=\"M225.867 278.601v54.67c0 10.88-8.82 19.71-19.71 19.71h-30.13c10.89 0 19.71-8.83 19.71-19.71v-54.67c0-8.01-3.87-15.52-10.39-20.16l-34.64-24.67 15.06-10.73 49.71 35.4a24.738 24.738 0 0110.39 20.16z\"\n      ></path>\n      <circle cx=\"165.767\" cy=\"189.011\" r=\"46.33\" fill=\"#99e6fc\"></circle>\n      <path\n        fill=\"#62dbfb\"\n        d=\"M212.097 189.011c0 25.59-20.74 46.33-46.33 46.33-5.27 0-10.34-.88-15.06-2.5 18.19-6.26 31.26-23.52 31.26-43.83s-13.07-37.57-31.26-43.83c4.72-1.62 9.79-2.5 15.06-2.5 25.59 0 46.33 20.74 46.33 46.33z\"\n      ></path>\n      <path\n        fill=\"#ffe177\"\n        d=\"M486.175 409.962l-49.709-35.401-49.709 35.401a24.746 24.746 0 00-10.391 20.158v54.673c0 10.884 8.823 19.707 19.707 19.707h80.787c10.884 0 19.707-8.823 19.707-19.707V430.12a24.747 24.747 0 00-10.392-20.158z\"\n      ></path>\n      <path\n        fill=\"#ffd15b\"\n        d=\"M496.566 430.124v54.67c0 10.88-8.82 19.71-19.71 19.71h-30.13c10.89 0 19.71-8.83 19.71-19.71v-54.67c0-8.01-3.87-15.52-10.39-20.16l-34.64-24.67 15.06-10.73 49.71 35.4a24.738 24.738 0 0110.39 20.16z\"\n      ></path>\n      <circle cx=\"436.466\" cy=\"340.535\" r=\"46.33\" fill=\"#ffe177\"></circle>\n      <path\n        fill=\"#ffd15b\"\n        d=\"M482.796 340.534c0 25.59-20.74 46.33-46.33 46.33-5.27 0-10.34-.88-15.06-2.5 18.19-6.26 31.26-23.52 31.26-43.83s-13.07-37.57-31.26-43.83c4.72-1.62 9.79-2.5 15.06-2.5 25.59 0 46.33 20.74 46.33 46.33z\"\n      ></path>\n      <path\n        fill=\"#ffe177\"\n        d=\"M305.709 409.962L256 374.561l-49.709 35.401A24.746 24.746 0 00195.9 430.12v54.673c0 10.884 8.823 19.707 19.707 19.707h80.787c10.884 0 19.707-8.823 19.707-19.707V430.12a24.747 24.747 0 00-10.392-20.158z\"\n      ></path>\n      <path\n        fill=\"#ffd15b\"\n        d=\"M316.1 430.124v54.67c0 10.88-8.82 19.71-19.71 19.71h-30.13c10.89 0 19.71-8.83 19.71-19.71v-54.67c0-8.01-3.87-15.52-10.39-20.16l-34.64-24.67 15.06-10.73 49.71 35.4a24.738 24.738 0 0110.39 20.16z\"\n      ></path>\n      <circle cx=\"256\" cy=\"340.535\" r=\"46.33\" fill=\"#ffe177\"></circle>\n      <path\n        fill=\"#ffd15b\"\n        d=\"M302.33 340.534c0 25.59-20.74 46.33-46.33 46.33-5.27 0-10.34-.88-15.06-2.5 18.19-6.26 31.26-23.52 31.26-43.83s-13.07-37.57-31.26-43.83c4.72-1.62 9.79-2.5 15.06-2.5 25.59 0 46.33 20.74 46.33 46.33z\"\n      ></path>\n      <path\n        fill=\"#ffe177\"\n        d=\"M125.244 409.962l-49.709-35.401-49.709 35.401a24.746 24.746 0 00-10.391 20.158v54.673c0 10.884 8.823 19.707 19.707 19.707h80.787c10.884 0 19.707-8.823 19.707-19.707V430.12a24.75 24.75 0 00-10.392-20.158z\"\n      ></path>\n      <path\n        fill=\"#ffd15b\"\n        d=\"M135.634 430.124v54.67c0 10.88-8.82 19.71-19.71 19.71h-30.13c10.89 0 19.71-8.83 19.71-19.71v-54.67c0-8.01-3.87-15.52-10.39-20.16l-34.64-24.67 15.06-10.73 49.71 35.4a24.738 24.738 0 0110.39 20.16z\"\n      ></path>\n      <circle cx=\"75.534\" cy=\"340.535\" r=\"46.33\" fill=\"#ffe177\"></circle>\n      <path\n        fill=\"#ffd15b\"\n        d=\"M121.864 340.534c0 25.59-20.74 46.33-46.33 46.33-5.27 0-10.34-.88-15.06-2.5 18.19-6.26 31.26-23.52 31.26-43.83s-13.07-37.57-31.26-43.83c4.72-1.62 9.79-2.5 15.06-2.5 25.59 0 46.33 20.74 46.33 46.33z\"\n      ></path>\n      <path d=\"M490.525 403.853l-25.175-17.929c14.982-9.568 24.946-26.332 24.946-45.389 0-29.682-24.148-53.83-53.83-53.83a53.5 53.5 0 00-22.632 5.006v-13.115a32.308 32.308 0 00-13.541-26.267l-25.177-17.928c14.983-9.568 24.948-26.332 24.948-45.39 0-29.682-24.148-53.83-53.831-53.83a53.497 53.497 0 00-22.801 5.083c-.909-9.214-5.756-17.692-13.372-23.115L284.884 99.22c14.983-9.568 24.946-26.332 24.946-45.389C309.83 24.148 285.682 0 256 0s-53.83 24.148-53.83 53.831c0 19.059 9.965 35.824 24.95 45.392l-25.18 17.926c-7.616 5.424-12.463 13.902-13.372 23.115a53.49 53.49 0 00-22.801-5.083c-5.992 0-11.881.979-17.501 2.911a7.499 7.499 0 104.875 14.185 38.767 38.767 0 0112.626-2.097c21.411 0 38.83 17.419 38.83 38.83s-17.419 38.831-38.83 38.831-38.831-17.419-38.831-38.831c0-6.247 1.436-12.208 4.268-17.717a7.5 7.5 0 10-13.342-6.856c-3.877 7.544-5.926 16.041-5.926 24.574 0 19.059 9.965 35.824 24.95 45.392l-25.18 17.926a32.306 32.306 0 00-13.541 26.267v13.115a53.485 53.485 0 00-22.632-5.006c-29.682 0-53.83 24.148-53.83 53.83 0 19.057 9.963 35.821 24.946 45.389l-25.175 17.929a32.304 32.304 0 00-13.54 26.267v54.673C7.934 499.795 20.139 512 35.141 512h80.787c15.002 0 27.207-12.205 27.207-27.208v-11.664c0-4.142-3.357-7.5-7.5-7.5s-7.5 3.358-7.5 7.5v11.664c0 6.731-5.476 12.208-12.207 12.208H35.141c-6.731 0-12.207-5.476-12.207-12.208V430.12a17.276 17.276 0 017.242-14.048l32.632-23.239c6.901 1.642 16.289 2.274 25.454 0l32.631 23.24a17.276 17.276 0 017.242 14.048v7.251c0 4.142 3.357 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-7.251a32.303 32.303 0 00-13.541-26.267l-25.175-17.929c9.444-6.032 16.886-14.922 21.1-25.447h80.468c4.215 10.526 11.656 19.416 21.101 25.447l-25.176 17.929a32.303 32.303 0 00-13.54 26.267v54.673c0 15.002 12.205 27.208 27.207 27.208h80.787c15.002 0 27.207-12.205 27.207-27.208V430.12a32.303 32.303 0 00-13.541-26.267l-25.175-17.929c14.982-9.568 24.946-26.332 24.946-45.389 0-15.033-6.201-28.639-16.171-38.414v-23.524a17.28 17.28 0 017.241-14.048l32.641-23.238c6.899 1.641 16.281 2.271 25.442-.001l32.635 23.238a17.282 17.282 0 017.242 14.049v23.498c-9.986 9.778-16.198 23.394-16.198 38.44 0 1.667.087 3.313.236 4.942h-44.226c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h47.836c4.215 10.526 11.656 19.416 21.1 25.447l-25.175 17.929a32.303 32.303 0 00-13.541 26.267v54.673c0 15.002 12.205 27.208 27.207 27.208h80.787c15.002 0 27.207-12.205 27.207-27.208V430.12c0-10.41-5.062-20.23-13.541-26.267zM217.17 53.831C217.17 32.419 234.589 15 256 15s38.83 17.419 38.83 38.831-17.419 38.83-38.83 38.83-38.83-17.419-38.83-38.83zm-13.771 96.74v-7.156a17.274 17.274 0 017.241-14.047l32.641-23.238c6.9 1.641 16.282 2.271 25.445-.002l32.632 23.24a17.275 17.275 0 017.242 14.048v7.156c-9.986 9.778-16.198 23.394-16.198 38.44a53.53 53.53 0 004.389 21.27c-1.4.029-80.329.028-81.583 0a53.525 53.525 0 004.389-21.269c.001-15.048-6.212-28.665-16.198-38.442zM36.704 340.535c0-21.411 17.419-38.83 38.83-38.83s38.83 17.419 38.83 38.83-17.419 38.831-38.83 38.831-38.83-17.42-38.83-38.831zm92.424 4.942c1.766-14.97-5.012-33.199-15.962-43.382v-23.498a17.28 17.28 0 017.241-14.048l32.641-23.238c6.899 1.641 16.282 2.272 25.445-.002l32.632 23.239a17.282 17.282 0 017.242 14.049v23.471c-10.717 10.473-17.63 26.704-15.99 43.409zm172.203 70.594a17.276 17.276 0 017.242 14.048v54.673c0 6.731-5.476 12.208-12.207 12.208h-80.787c-6.731 0-12.207-5.476-12.207-12.208V430.12a17.278 17.278 0 017.241-14.048l32.633-23.239c6.9 1.642 16.288 2.274 25.453 0zm-6.528-75.536c0 21.411-17.419 38.831-38.83 38.831-21.31-.228-38.682-17.17-38.831-38.831 0-21.411 17.42-38.83 38.831-38.83s38.83 17.419 38.83 38.83zm-2.63-88.205a32.306 32.306 0 00-13.541 26.267v13.127a53.485 53.485 0 00-22.659-5.019 53.484 53.484 0 00-22.604 4.994v-13.102a32.308 32.308 0 00-13.541-26.267l-25.175-17.929a54.259 54.259 0 0012.134-10.586 27.154 27.154 0 008.82 1.481h80.787c3.033 0 6.002-.516 8.82-1.482a54.225 54.225 0 0012.139 10.589zm15.229-63.319c0-21.411 17.419-38.83 38.83-38.83s38.831 17.419 38.831 38.83-17.42 38.831-38.831 38.831-38.83-17.42-38.83-38.831zm129.064 112.694c21.411 0 38.83 17.419 38.83 38.83s-17.419 38.831-38.83 38.831-38.83-17.419-38.83-38.831 17.419-38.83 38.83-38.83zm52.6 183.087c0 6.731-5.476 12.208-12.207 12.208h-80.787c-6.731 0-12.207-5.476-12.207-12.208V430.12a17.276 17.276 0 017.242-14.048l32.632-23.239c6.901 1.642 16.288 2.274 25.453 0l32.631 23.24a17.276 17.276 0 017.242 14.048v54.671z\"></path>\n    </svg>\n  );\n}\n","export function StarIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffb820\"\n        d=\"M491.64 188.725l-153.53-22.31-68.66-139.12c-2.75-5.57-8.1-8.36-13.45-8.36l.02 400.2 137.3 72.19c11.01 5.78 23.86-3.56 21.76-15.81l-26.22-152.92 111.09-108.29c8.91-8.68 3.99-23.79-8.31-25.58z\"\n      ></path>\n      <path\n        fill=\"#ffd06a\"\n        d=\"M356.62 312.125s23.68 138.03 23.76 138.49c-.08-.01-122.45-31-124.36-31.48-.02-.01-137.34 72.19-137.34 72.19-11.01 5.78-23.86-3.56-21.76-15.81l26.22-152.92-111.09-108.29c-8.91-8.68-3.99-23.79 8.31-25.58l153.53-22.31 68.66-139.12c2.75-5.57 8.1-8.36 13.45-8.36l62.19 174.9 139.06 20.21z\"\n      ></path>\n      <path d=\"M510.883 196.615c-2.666-8.204-9.625-14.07-18.16-15.311l-149.632-21.743-66.918-135.588c-3.817-7.735-11.547-12.54-20.173-12.54s-16.356 4.805-20.173 12.54L168.91 159.561 19.278 181.305c-8.537 1.24-15.495 7.106-18.161 15.311s-.484 17.04 5.693 23.062l108.274 105.541-9.911 57.786a7.501 7.501 0 006.124 8.66 7.499 7.499 0 008.66-6.125l10.578-61.672a7.502 7.502 0 00-2.157-6.639L17.28 208.934c-2.089-2.036-2.798-4.909-1.897-7.684.902-2.775 3.164-4.683 6.052-5.103l153.534-22.31a7.498 7.498 0 005.647-4.103l68.662-139.125c1.292-2.617 3.804-4.179 6.722-4.179s5.431 1.562 6.722 4.179l68.663 139.125a7.5 7.5 0 005.647 4.103l153.534 22.31c2.888.42 5.15 2.327 6.051 5.102.902 2.775.193 5.648-1.896 7.685L383.622 317.228a7.499 7.499 0 00-2.157 6.639l26.227 152.913c.494 2.876-.621 5.617-2.982 7.332-2.361 1.714-5.312 1.929-7.895.57L259.49 412.487a7.504 7.504 0 00-6.98 0l-137.325 72.195c-2.583 1.358-5.535 1.144-7.894-.57-2.361-1.715-3.476-4.456-2.982-7.332l10.578-61.673a7.501 7.501 0 00-6.124-8.66 7.501 7.501 0 00-8.66 6.125l-10.578 61.673c-1.458 8.502 1.971 16.933 8.95 22.003 3.943 2.865 8.557 4.32 13.201 4.32a22.51 22.51 0 0010.49-2.608L256 427.6l133.834 70.36c7.635 4.014 16.713 3.357 23.692-1.712 6.979-5.07 10.408-13.502 8.949-22.003l-25.56-149.027L505.19 219.677c6.177-6.022 8.359-14.859 5.693-23.062z\"></path>\n    </svg>\n  );\n}\n","export function TrophyIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M397.763 87.5h-98.509v213.476h98.509c58.855 0 106.737-47.882 106.737-106.738S456.618 87.5 397.763 87.5zm0 183.476h-68.509V117.5h68.509c42.381 0 76.738 34.357 76.738 76.738-.001 42.381-34.357 76.738-76.738 76.738zM114.237 87.5C55.382 87.5 7.5 135.382 7.5 194.238s47.882 106.738 106.737 106.738h98.509V87.5zm68.509 183.476h-68.509c-42.381 0-76.738-34.357-76.738-76.738S71.856 117.5 114.237 117.5h68.509zM314 419.5H198l15-91h86z\"\n      ></path>\n      <path fill=\"#fee97d\" d=\"M299 328.5h-30l15 91h30z\"></path>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M382.221 504.5H129.779a7 7 0 01-7-7v-11.629c0-22.091 17.909-40 40-40h186.442c22.091 0 40 17.909 40 40V497.5a7 7 0 01-7 7z\"\n      ></path>\n      <path\n        fill=\"#fee97d\"\n        d=\"M349.221 445.871h-30c22.092 0 40 17.909 40 40V497.5a7 7 0 01-7 7h30a7 7 0 007-7v-11.629c0-22.092-17.909-40-40-40zm-5 0H167.779v-3.629c0-22.091 17.909-40 40-40h96.442c22.091 0 40 17.909 40 40z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M304.221 402.241h-30c22.092 0 40 17.909 40 40v3.629h30v-3.629c0-22.091-17.909-40-40-40z\"\n      ></path>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M411.5 57.5h-311c-13.807 0-25-11.193-25-25s11.193-25 25-25h311c13.807 0 25 11.193 25 25s-11.193 25-25 25z\"\n      ></path>\n      <path\n        fill=\"#fee97d\"\n        d=\"M411.5 7.5h-30c13.807 0 25 11.193 25 25s-11.193 25-25 25h30c13.807 0 25-11.193 25-25s-11.193-25-25-25zM256 362.5c-83.119 0-150.5-67.381-150.5-150.5V57.5h301V212c0 83.119-67.381 150.5-150.5 150.5z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M376.5 57.5V212c0 78.056-59.424 142.229-135.5 149.757 4.934.488 9.937.743 15 .743 83.119 0 150.5-67.381 150.5-150.5V57.5z\"\n      ></path>\n      <circle cx=\"256\" cy=\"207.96\" r=\"94.169\" fill=\"#fff\"></circle>\n      <path\n        fill=\"#fee97d\"\n        d=\"M262.277 154.391l13.139 26.623a7 7 0 005.271 3.829l29.38 4.269c5.742.834 8.034 7.89 3.879 11.94l-21.26 20.723a6.998 6.998 0 00-2.013 6.196l5.019 29.261c.981 5.718-5.021 10.079-10.157 7.379l-26.278-13.815a7.001 7.001 0 00-6.515 0l-26.278 13.815c-5.135 2.7-11.137-1.661-10.157-7.379l5.019-29.261a7 7 0 00-2.013-6.196l-21.26-20.723c-4.155-4.05-1.862-11.106 3.879-11.94l29.38-4.269a7 7 0 005.271-3.829l13.139-26.623c2.569-5.203 9.987-5.203 12.555 0z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M313.946 201.052c4.155-4.05 1.862-11.106-3.88-11.94l-29.38-4.269a6.997 6.997 0 01-5.27-3.829l-13.139-26.623c-2.568-5.203-9.987-5.203-12.554 0l-10.888 22.061 3.874 7.85a18.632 18.632 0 0014.03 10.193c15.284 2.221 21.386 21.003 10.327 31.783a18.632 18.632 0 00-5.359 16.493l1.755 10.236 22.073 11.604c5.135 2.7 11.137-1.661 10.157-7.379l-5.019-29.261a7 7 0 012.013-6.196z\"\n      ></path>\n      <path d=\"M282.025 177.458l-13.022-26.387c-2.462-4.985-7.443-8.082-13.003-8.082s-10.541 3.097-13.003 8.083l-13.022 26.387-29.119 4.231c-5.502.799-9.987 4.581-11.706 9.868-1.718 5.288-.312 10.983 3.669 14.865l21.071 20.539-4.975 29.003c-.939 5.479 1.271 10.914 5.77 14.182s10.349 3.691 15.271 1.104L256 257.557l26.045 13.693c4.903 2.578 10.759 2.174 15.271-1.104 4.498-3.268 6.709-8.702 5.769-14.182l-4.974-29.003 21.071-20.539c3.981-3.881 5.387-9.577 3.669-14.865-1.719-5.287-6.204-9.068-11.706-9.867zm5.426 38.946a14.494 14.494 0 00-4.169 12.834l4.847 28.264-25.382-13.345a14.498 14.498 0 00-13.495 0l-25.381 13.344 4.847-28.262a14.495 14.495 0 00-4.169-12.835l-20.534-20.016 28.377-4.124a14.494 14.494 0 0010.918-7.932L256 158.618l12.69 25.714a14.494 14.494 0 0010.918 7.932l28.377 4.124zm194.096-99.749c-17.941-19.36-41.716-31.799-67.547-35.49v-16.27c16.756-1.282 30-15.316 30-32.394C444 14.58 429.421 0 411.5 0h-311C82.579 0 68 14.58 68 32.5c0 17.078 13.244 31.112 30 32.394v16.27c-25.714 3.676-49.409 16.029-67.321 35.248a7.5 7.5 0 0010.972 10.228C56.721 110.471 76.495 99.908 98 96.352v15.236c-39.204 7.62-68 42.024-68 82.652 0 22.509 8.765 43.663 24.675 59.561 15.532 15.543 36.076 24.242 57.996 24.641a157.847 157.847 0 008.007 15.038h-6.438c-54.722 0-99.24-44.519-99.24-99.24 0-14.091 2.904-27.711 8.633-40.48a7.5 7.5 0 00-13.685-6.14C3.347 162.333 0 178.019 0 194.24c0 62.992 51.248 114.24 114.24 114.24h16.729c17.756 22.957 41.679 40.906 69.267 51.348l-6.089 36.917c-18.396 5.522-32.123 21.915-33.701 41.685-25.112 1.221-45.167 22.032-45.167 47.441V497.5c0 7.995 6.505 14.5 14.5 14.5H382.22c7.995 0 14.5-6.505 14.5-14.5v-11.629c0-25.409-20.055-46.22-45.167-47.441-1.579-19.771-15.306-36.163-33.701-41.685l-6.089-36.917c27.588-10.441 51.511-28.391 69.267-51.348h16.729c62.992 0 114.24-51.248 114.24-114.24.001-28.841-10.814-56.394-30.452-77.585zM65.281 243.195C52.203 230.126 45 212.74 45 194.24c0-32.392 22.265-59.968 53-67.308V212c0 17.851 2.98 35.018 8.461 51.034-15.554-1.728-29.958-8.609-41.18-19.839zM100.5 50C90.851 50 83 42.149 83 32.5S90.851 15 100.5 15h311c9.649 0 17.5 7.851 17.5 17.5S421.149 50 411.5 50zM414 126.932c30.735 7.34 53 34.916 53 67.308 0 18.5-7.203 35.886-20.286 48.958-11.218 11.227-25.621 18.108-41.175 19.836C411.02 247.018 414 229.851 414 212zm-77.518 311.439h-22.895c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h35.634c17.921 0 32.5 14.58 32.5 32.5V497H130.279v-11.129c0-17.92 14.579-32.5 32.5-32.5h115.808c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5H175.518c1.921-16.101 15.651-28.629 32.261-28.629h96.441c16.611-.001 30.342 12.527 32.262 28.629zm-126.801-43.63l4.987-30.237C227.849 368.08 241.703 370 256 370s28.151-1.92 41.332-5.496l4.987 30.237zM256 355c-78.851 0-143-64.149-143-143V65h286v147c0 78.851-64.149 143-143 143zm141.76-61.52h-6.438a157.741 157.741 0 008.007-15.038c21.919-.399 42.463-9.097 57.991-24.637C473.235 237.903 482 216.749 482 194.24c0-40.627-28.796-75.032-68-82.652V96.352c21.605 3.57 41.449 14.208 56.545 30.498C487.604 145.259 497 169.192 497 194.24c0 54.721-44.519 99.24-99.24 99.24zM256 106.291c-56.061 0-101.67 45.609-101.67 101.669S199.939 309.629 256 309.629 357.67 264.02 357.67 207.96 312.061 106.291 256 106.291zm0 188.338c-47.79 0-86.67-38.88-86.67-86.669s38.88-86.669 86.67-86.669 86.67 38.88 86.67 86.669-38.88 86.669-86.67 86.669z\"></path>\n    </svg>\n  );\n}\n","export function VerifyListIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#bbec6c\"\n        d=\"M81.238 173.151a27.596 27.596 0 01-21.806-10.688L13.29 102.944c-9.338-12.045-7.143-29.379 4.902-38.717 12.046-9.338 29.38-7.143 38.718 4.901l20.714 26.719 40.422-71.574c7.495-13.271 24.327-17.953 37.599-10.458 13.271 7.495 17.952 24.328 10.458 37.599L105.27 159.126a27.596 27.596 0 01-24.032 14.025z\"\n      ></path>\n      <path\n        fill=\"#a2e62e\"\n        d=\"M101.016 164.795a27.521 27.521 0 01-19.777 8.362 27.6 27.6 0 01-21.81-10.689l-46.14-59.524c-9.336-12.041-7.147-29.371 4.903-38.717a27.323 27.323 0 0111.747-5.298c-9.456 9.695-10.56 25.13-2.024 36.141l46.14 59.524a27.612 27.612 0 0021.81 10.689c.662 0 1.334-.028 2.005-.074a25.312 25.312 0 003.146-.414z\"\n      ></path>\n      <path\n        fill=\"#bbec6c\"\n        d=\"M81.238 339.787a27.596 27.596 0 01-21.806-10.688L13.29 269.58c-9.338-12.045-7.143-29.379 4.902-38.717 12.046-9.338 29.38-7.143 38.718 4.901l20.714 26.719 40.422-71.574c7.495-13.271 24.327-17.953 37.599-10.458 13.271 7.495 17.952 24.328 10.458 37.599L105.27 325.762a27.596 27.596 0 01-24.032 14.025z\"\n      ></path>\n      <path\n        fill=\"#a2e62e\"\n        d=\"M101.016 331.431a27.521 27.521 0 01-19.777 8.362 27.6 27.6 0 01-21.81-10.689L13.29 269.58c-9.336-12.041-7.147-29.371 4.903-38.717a27.323 27.323 0 0111.747-5.298c-9.456 9.695-10.56 25.13-2.024 36.141l46.14 59.524a27.612 27.612 0 0021.81 10.689c.662 0 1.334-.028 2.005-.074a25.133 25.133 0 003.145-.414z\"\n      ></path>\n      <path\n        fill=\"#fe646f\"\n        d=\"M118.17 437.674l18.449-18.449c10.437-10.437 10.437-27.358 0-37.795-10.437-10.437-27.359-10.437-37.795 0l-18.449 18.449-18.45-18.449c-10.437-10.437-27.359-10.437-37.795 0-10.437 10.437-10.437 27.359 0 37.795l18.449 18.449-18.449 18.449c-10.437 10.437-10.437 27.358 0 37.795 10.437 10.437 27.358 10.437 37.795 0l18.449-18.449 18.449 18.449c10.437 10.437 27.359 10.437 37.795 0 10.437-10.437 10.437-27.359 0-37.795z\"\n      ></path>\n      <path\n        fill=\"#fd4755\"\n        d=\"M46.963 493.919c-10.437-10.437-10.437-27.359 0-37.795l18.449-18.449-18.449-18.449c-10.437-10.437-10.437-27.358 0-37.795a26.667 26.667 0 017.481-5.27c-9.915-4.683-22.115-2.929-30.314 5.27-10.437 10.437-10.437 27.359 0 37.795l18.449 18.449-18.449 18.448c-10.437 10.437-10.437 27.358 0 37.795 8.199 8.199 20.399 9.953 30.314 5.27a26.663 26.663 0 01-7.481-5.269z\"\n      ></path>\n      <path\n        fill=\"#f9f7f8\"\n        d=\"M268.014 156.832h202.073c19.005 0 34.411-15.406 34.411-34.411V62.852c0-19.005-15.406-34.411-34.411-34.411H268.014c-19.005 0-34.411 15.406-34.411 34.411v59.568c0 19.005 15.406 34.412 34.411 34.412zm0 171.459h202.073c19.005 0 34.411-15.406 34.411-34.411v-59.568c0-19.005-15.406-34.411-34.411-34.411H268.014c-19.005 0-34.411 15.406-34.411 34.411v59.568c0 19.005 15.406 34.411 34.411 34.411zm0 171.459h202.073c19.005 0 34.411-15.406 34.411-34.411v-59.568c0-19.005-15.406-34.411-34.411-34.411H268.014c-19.005 0-34.411 15.406-34.411 34.411v59.568c0 19.005 15.406 34.411 34.411 34.411z\"\n      ></path>\n      <path\n        fill=\"#dedbee\"\n        d=\"M300.134 156.828h-32.127c-18.999 0-34.404-15.405-34.404-34.414V62.851c0-19.009 15.405-34.414 34.404-34.414h32.127c-19.009 0-34.414 15.405-34.414 34.414v59.563c0 19.009 15.405 34.414 34.414 34.414zm0 171.46h-32.127c-18.999 0-34.404-15.405-34.404-34.414v-59.563c0-19.009 15.405-34.414 34.404-34.414h32.127c-19.009 0-34.414 15.405-34.414 34.414v59.563c0 19.009 15.405 34.414 34.414 34.414zm0 171.46h-32.127c-18.999 0-34.404-15.405-34.404-34.414v-59.563c0-19.009 15.405-34.414 34.404-34.414h32.127c-19.009 0-34.414 15.405-34.414 34.414v59.563c0 19.009 15.405 34.414 34.414 34.414z\"\n      ></path>\n      <path d=\"M53.509 167.06c6.599 8.511 16.967 13.592 27.733 13.592.842 0 1.698-.031 2.553-.093a35.02 35.02 0 0028.01-17.744l60.831-107.712c9.517-16.85 3.55-38.301-13.301-47.817-16.85-9.517-38.3-3.547-47.817 13.301L76.642 82.339 62.84 64.535C50.984 49.242 28.897 46.443 13.6 58.301c-15.293 11.857-18.09 33.945-6.235 49.24zM22.79 70.156a19.998 19.998 0 0112.291-4.206c6.005 0 11.949 2.673 15.903 7.775l20.714 26.719a7.49 7.49 0 006.473 2.885 7.495 7.495 0 005.985-3.792l40.422-71.573c5.449-9.648 17.731-13.066 27.381-7.616 9.648 5.449 13.064 17.731 7.616 27.38L98.744 155.439a20.051 20.051 0 01-17.502 10.213c-6.164 0-12.1-2.91-15.879-7.783L19.221 98.351c-6.789-8.758-5.188-21.406 3.569-28.195zm136.542 103.768c-16.845-9.519-38.297-3.556-47.819 13.295l-34.867 61.75-13.806-17.805c-11.865-15.285-33.952-18.082-49.237-6.23-7.411 5.747-12.142 14.033-13.319 23.332-1.178 9.301 1.339 18.503 7.085 25.907l46.142 59.519c6.59 8.51 16.958 13.591 27.734 13.591a35.02 35.02 0 0030.56-17.827l3.944-6.978a7.5 7.5 0 00-2.839-10.22 7.5 7.5 0 00-10.22 2.839l-3.944 6.979a20.056 20.056 0 01-17.501 10.207c-6.171 0-12.105-2.906-15.877-7.778L19.221 264.98a19.945 19.945 0 01-4.057-14.828 19.982 19.982 0 017.63-13.363c8.751-6.784 21.401-5.183 28.194 3.57l20.716 26.716a7.484 7.484 0 006.472 2.884 7.5 7.5 0 005.986-3.792l40.412-71.57c5.452-9.649 17.734-13.062 27.386-7.61a19.94 19.94 0 019.48 12.109 19.96 19.96 0 01-1.864 15.269l-42.181 74.687a7.5 7.5 0 002.842 10.219 7.498 7.498 0 0010.219-2.842l42.18-74.685c4.613-8.163 5.769-17.633 3.256-26.667-2.515-9.038-8.398-16.55-16.56-21.153zm-17.407 202.201c-6.464-6.464-15.059-10.024-24.201-10.024s-17.736 3.56-24.201 10.024L80.378 389.27l-13.145-13.145c-6.464-6.464-15.059-10.024-24.201-10.024s-17.736 3.56-24.201 10.024c-13.344 13.345-13.344 35.057 0 48.401l13.146 13.146-13.147 13.146c-13.344 13.344-13.344 35.057 0 48.401 6.465 6.464 15.059 10.024 24.201 10.024s17.737-3.56 24.202-10.024l13.144-13.145 13.145 13.145c6.465 6.464 15.059 10.024 24.201 10.024s17.737-3.56 24.202-10.024c13.344-13.344 13.344-35.057-.001-48.401l-13.145-13.145 13.146-13.146c13.345-13.344 13.345-35.057 0-48.402zm-10.606 37.795l-18.449 18.449a7.5 7.5 0 000 10.606l18.449 18.449c7.496 7.496 7.496 19.693.001 27.189a19.104 19.104 0 01-13.596 5.631c-5.135 0-9.963-2-13.595-5.631l-18.448-18.449a7.5 7.5 0 00-10.608 0l-18.447 18.449a19.104 19.104 0 01-13.596 5.631 19.1 19.1 0 01-13.594-5.631c-7.496-7.496-7.496-19.693 0-27.189l18.448-18.449a7.497 7.497 0 00.001-10.606L29.438 413.92c-7.496-7.496-7.496-19.693 0-27.189a19.1 19.1 0 0113.594-5.631c5.136 0 9.964 2 13.595 5.631l18.448 18.449a7.5 7.5 0 0010.608 0l18.449-18.449a19.1 19.1 0 0113.594-5.631c5.136 0 9.964 2 13.595 5.631 7.494 7.497 7.494 19.693-.002 27.189zM470.086 20.943H268.018c-23.111 0-41.913 18.802-41.913 41.913v59.562c0 23.111 18.802 41.913 41.913 41.913h131.125c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5H268.018c-14.84 0-26.913-12.073-26.913-26.913V62.856c0-14.84 12.073-26.913 26.913-26.913h202.069c14.841 0 26.914 12.073 26.914 26.913v59.562c0 14.84-12.073 26.913-26.914 26.913h-40.993c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h40.993c23.111 0 41.914-18.802 41.914-41.913V62.856c-.001-23.111-18.804-41.913-41.915-41.913zm.001 171.458h-202.07c-23.11 0-41.912 18.801-41.912 41.911v59.567c0 23.11 18.802 41.911 41.912 41.911h202.071c23.11 0 41.911-18.801 41.911-41.911v-59.567c-.001-23.11-18.802-41.911-41.912-41.911zm26.911 101.478c0 14.839-12.072 26.911-26.911 26.911h-202.07c-14.84 0-26.912-12.072-26.912-26.911v-59.567c0-14.839 12.072-26.911 26.912-26.911h202.071c14.839 0 26.911 12.072 26.911 26.911v59.567zm-26.911 69.98h-202.07c-23.11 0-41.912 18.801-41.912 41.911v59.567c0 23.11 18.802 41.911 41.912 41.911h202.071c23.11 0 41.911-18.801 41.911-41.911V405.77c-.001-23.11-18.802-41.911-41.912-41.911zm26.911 101.478c0 14.839-12.072 26.911-26.911 26.911h-202.07c-14.84 0-26.912-12.072-26.912-26.911V405.77c0-14.839 12.072-26.911 26.912-26.911h202.071c14.839 0 26.911 12.072 26.911 26.911v59.567z\"></path>\n      <path d=\"M473.995 74.074a7.5 7.5 0 00-7.5-7.5H271.608c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h194.887a7.5 7.5 0 007.5-7.5zm-202.387 29.628c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5H399.14c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5zm194.887 134.33H271.608c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h194.887c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5zM399.14 275.16H271.608c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5H399.14a7.5 7.5 0 000-15zm67.355 134.33H271.608c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h194.887c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5zm-67.355 37.128H271.608c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5H399.14a7.5 7.5 0 000-15z\"></path>\n    </svg>\n  );\n}\n","// This icon file is generated automatically.\nvar DownCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M690 405h-46.9c-10.2 0-19.9 4.9-25.9 13.2L512 563.6 406.8 418.2c-6-8.3-15.6-13.2-25.9-13.2H334c-6.5 0-10.3 7.4-6.5 12.7l178 246c3.2 4.4 9.7 4.4 12.9 0l178-246c3.9-5.3.1-12.7-6.4-12.7z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"down-circle\", \"theme\": \"outlined\" };\nexport default DownCircleOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport DownCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/DownCircleOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar DownCircleOutlined = function DownCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: DownCircleOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  DownCircleOutlined.displayName = 'DownCircleOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(DownCircleOutlined);","// This icon file is generated automatically.\nvar PlusCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm192 472c0 4.4-3.6 8-8 8H544v152c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V544H328c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h152V328c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v152h152c4.4 0 8 3.6 8 8v48z\" } }] }, \"name\": \"plus-circle\", \"theme\": \"filled\" };\nexport default PlusCircleFilled;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport PlusCircleFilledSvg from \"@ant-design/icons-svg/es/asn/PlusCircleFilled\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar PlusCircleFilled = function PlusCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: PlusCircleFilledSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  PlusCircleFilled.displayName = 'PlusCircleFilled';\n}\nexport default /*#__PURE__*/React.forwardRef(PlusCircleFilled);","// This icon file is generated automatically.\nvar TrophyOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M868 160h-92v-40c0-4.4-3.6-8-8-8H256c-4.4 0-8 3.6-8 8v40h-92a44 44 0 00-44 44v148c0 81.7 60 149.6 138.2 162C265.7 630.2 359 721.7 476 734.5v105.2H280c-17.7 0-32 14.3-32 32V904c0 4.4 3.6 8 8 8h512c4.4 0 8-3.6 8-8v-32.3c0-17.7-14.3-32-32-32H548V734.5C665 721.7 758.3 630.2 773.8 514 852 501.6 912 433.7 912 352V204a44 44 0 00-44-44zM184 352V232h64v207.6a91.99 91.99 0 01-64-87.6zm520 128c0 49.1-19.1 95.4-53.9 130.1-34.8 34.8-81 53.9-130.1 53.9h-16c-49.1 0-95.4-19.1-130.1-53.9-34.8-34.8-53.9-81-53.9-130.1V184h384v296zm136-128c0 41-26.9 75.8-64 87.6V232h64v120z\" } }] }, \"name\": \"trophy\", \"theme\": \"outlined\" };\nexport default TrophyOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport TrophyOutlinedSvg from \"@ant-design/icons-svg/es/asn/TrophyOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar TrophyOutlined = function TrophyOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: TrophyOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  TrophyOutlined.displayName = 'TrophyOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(TrophyOutlined);","// This icon file is generated automatically.\nvar UpCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M518.5 360.3a7.95 7.95 0 00-12.9 0l-178 246c-3.8 5.3 0 12.7 6.5 12.7H381c10.2 0 19.9-4.9 25.9-13.2L512 460.4l105.2 145.4c6 8.3 15.6 13.2 25.9 13.2H690c6.5 0 10.3-7.4 6.5-12.7l-178-246z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"up-circle\", \"theme\": \"outlined\" };\nexport default UpCircleOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport UpCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/UpCircleOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar UpCircleOutlined = function UpCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: UpCircleOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  UpCircleOutlined.displayName = 'UpCircleOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(UpCircleOutlined);"],"names":["Card","children","header","footer","color","size","randomColor","className","headerClassName","footerClassName","hideHeader","baseClass","bgColor","getColorFromLetter","toUpperCase","clsx","style","startsWith","backgroundColor","unknownText","pt","en","Achievements","players","achievements","reference","length","getAnimationClass","level","map","achievement","index","type","icon","achievementObj","player","playerId","delay","id","title","avatarId","name","Boolean","description","content","value","shape","ImageBlurButton","cardId","ghost","useBlurCards","blurCard","isBlurEnabled","shouldBeBlurred","placement","onClick","EyeOutlined","EyeInvisibleOutlined","ImageBlurButtonContainer","position","rest","ImageCard","imageId","cardWidth","preview","previewImageId","fileExtension","square","baseUrl","useTDBaseUrl","fallbackName","imageURL","replace","isBlurred","previewConfig","height","undefined","width","src","placeholder","fallback","PUBLIC_URL","maskClassName","ImageCardBack","ImageCardButton","buttonPosition","over","disabled","buttonText","buttonProps","isTop","iconComponent","DownCircleOutlined","UpCircleOutlined","buttonClassName","restButtonProps","button","ImageCardHand","hand","onSelectCard","selectButtonText","selectButtonIcon","selectButtonClass","sizeRatio","cardSize","minCardSize","disabledSelectButton","selectedCards","cardClassName","imageGroupPreview","useCardWidth","Math","max","minWidth","ImageCardPreloadHand","ImageCardSelectButton","selectLabel","deselectLabel","isSelected","custom","MetricHighlight","iconSize","iconPlacement","PointsHighlight","GainedPoint","gainedPoint","order","isPositive","isNegative","GainedPoints","gainedPoints","gainedPointsDescriptions","points","Array","isArray","RankingBoard","ranking","hideGainedPoints","useState","displayStep","setDisplayStep","sortedRanking","setSortedRanking","reRank","setReRank","useDimensions","maxPoints","useMemo","scores","newScore","seconds","useCountdown","duration","autoStart","onExpire","useEffectOnce","positions","lastPosition","lastPoints","rankByFinalScoreDict","orderBy","reduce","acc","entry","rankByPreviousScore","tempSortedRanking","newEntry","previousScore","useEffect","hPosition","top","CrownFilled","StepRankingWrapper","subtitle","white","useTemporarilyHidePlayersBar","CaretUpOutlined","RoundAnnouncement","round","onPressButton","time","unskippable","circleColor","translate","useLanguage","circleStyle","borderColor","roundTitlePt","roundTitleEn","alt","current","submitAction","httpsCallable","functions","WordGridHeader","cell","gridType","WordGridHeaderContender","WordGridHeaderImage","text","gap","maxWidth","WordGrid","grid","user","CellComponent","cellComponentProps","sqrt","gridStyle","gridTemplateColumns","gridTemplateRows","kind","FormOutlined","props","ref","React","AntdIcon","_extends","FormOutlinedSvg","PreviousClue","clue","WordForm","x","y","onSubmit","setClue","textInput","useRef","focus","useMock","substring","coordinate","direction","onChange","e","target","onPressEnter","WritingCell","onSubmitClue","writable","xText","yText","trigger","WritingCluesRule","playerCount","ScoringRule","StepClueWriting","announcement","isLoading","useLoading","fullWidth","Object","keys","payload","trim","toLowerCase","currentClueCoordinate","PlayerRecentClue","PhaseClueWriting","state","info","useStep","step","goToNextStep","setStep","useUser","request","useAPICall","apiFunction","actionName","onBeforeCall","onError","successMessage","errorMessage","action","useOnSubmitClueAPIRequest","GridIcon","currentRound","phase","allowedPhase","PHASES","waitingRoom","appearance","gameType","isClue","instance","getClueKey","clueObj","SEPARATOR","getClueFromKey","key","split","ClueCard","isMatched","indexColor","strikeMatches","colorClass","getColorFromIndex","CheckCircleFilled","PlusCircleFilled","SelectableCell","onSelectCell","onClearCell","active","guesses","clues","matchEntry","entries","find","arr","clueKey","clueIndexColor","findIndex","c","Clues","onSelectClue","StepGuessing","onSubmitGuesses","setActive","setGuesses","choseRandomly","setChoseRandomly","useCallback","clueIndex","cellCoordinate","newState","prepareSubmitGuesses","result","playersOwnClue","align","usedCells","values","usedClues","availableCells","shuffle","filter","available","includes","newGuesses","PhaseGuessing","useOnSubmitGuessesAPIRequest","GuessIcon","CheckSquareFilled","CheckSquareFilledSvg","CloseSquareFilled","CloseSquareFilledSvg","AVATARS","avatars","PlayersInCell","cellPlayers","isCorrect","ResultCell","playerPerVotedCell","colorCodedCluesPerPlayer","AnswersList","correctCoordinatesPerPlayer","columns","dataIndex","render","data","sorter","a","b","guess","parsedData","guessedPlayerId","guessedCoordinate","push","playerName","dataSource","flat","pagination","BadCluesPlayersList","badCluesPlayersList","StepReveal","whoGotNoPoints","forEach","whoGotNoPointsNames","getMeanDuration","TrophyOutlined","StepRanking","goToPreviousStep","PhaseReveal","RankIcon","PhaseGameOver","announcementIcon","TrophyIcon","achievementsReference","StepSelectWords","deck","onSubmitWords","useBooleanDictionary","updateDict","words","sampleSize","ready","wrap","card","PhaseWordsSelection","useOnSubmitWordsAPIRequest","VerifyListIcon","getActiveComponent","LoadingPage","PhaseLobby","PhaseRules","PhaseSetup","PageError","theme","token","colorPrimary","THEME_COLORS","colorLink","gameCollection","GAME_COLLECTION","ACHIEVEMENTS","initialState","validation","dict","setDict","isValid","s","dictCopy","reset","xmlns","viewBox","fill","d","cx","cy","r","StarIcon","DownCircleOutlinedSvg","PlusCircleFilledSvg","TrophyOutlinedSvg","UpCircleOutlinedSvg"],"sourceRoot":""}