{"version":3,"file":"static/js/arte-ruim.39a51f87.chunk.js","mappings":"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","sources":["components/canvas/CanvasResizer.tsx","components/canvas/CanvasSVG.tsx","components/canvas/DrawingCanvas.tsx","../node_modules/react-use/esm/useSetState.js","../node_modules/react-use/esm/misc/parseTimeRanges.js","../node_modules/react-use/esm/useAudio.js","../node_modules/react-use/esm/factory/createHTMLMediaHook.js","games/arte-ruim/StepDraw.tsx","games/arte-ruim/PhaseDraw.tsx","games/arte-ruim/utils/api-requests.ts","../node_modules/@ant-design/icons-svg/es/asn/ThunderboltOutlined.js","../node_modules/@ant-design/icons/es/icons/ThunderboltOutlined.js","games/arte-ruim/utils/helpers.ts","games/arte-ruim/components/EvaluationAllDrawings.tsx","games/arte-ruim/components/Card.tsx","games/arte-ruim/components/EvaluationAllCards.tsx","games/arte-ruim/components/TextBlobs.tsx","games/arte-ruim/StepEvaluation.tsx","games/arte-ruim/components/EvaluatedDrawings.tsx","games/arte-ruim/PhaseEvaluation.tsx","games/arte-ruim/components/GalleryWindowCredits.tsx","../node_modules/@ant-design/icons-svg/es/asn/MessageFilled.js","../node_modules/@ant-design/icons/es/icons/MessageFilled.js","games/arte-ruim/components/GalleryWindowGuesses.tsx","games/arte-ruim/components/GalleryWindowResult.tsx","games/arte-ruim/StepGallery.tsx","games/arte-ruim/utils/constants.ts","games/arte-ruim/StepRanking.tsx","games/arte-ruim/PhaseGallery.tsx","games/arte-ruim/components/DrawingGrade.tsx","games/arte-ruim/PhaseGameOver.tsx","games/arte-ruim/SessionArteRuim.tsx","../node_modules/@ant-design/icons-svg/es/asn/CloudUploadOutlined.js","../node_modules/@ant-design/icons/es/icons/CloudUploadOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/WarningOutlined.js","../node_modules/@ant-design/icons/es/icons/WarningOutlined.js"],"sourcesContent":["// Ant Design Resources\nimport { Slider } from 'antd';\n// State & Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\n// Components\nimport { Translate } from 'components/language';\n\n/**\n * Floating canvas resizer bar positioned on the top-left of the page\n * @returns\n */\nexport const CanvasResizer = () => {\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n\n  return (\n    <div className=\"canvas-resizer\">\n      <div className=\"canvas-resizer__label\">\n        <Translate pt=\"Tamanho das Images\" en=\"Image Size\" />\n      </div>\n      <Slider\n        className=\"canvas-resizer__slider\"\n        value={canvasSize ?? 100}\n        min={150}\n        max={500}\n        step={50}\n        onChange={setCanvasSize}\n      />\n    </div>\n  );\n};\n","/**\n * Builds paths from canvas lines\n * @param lines\n * @returns\n */\nconst getPathFromKonvaLines = (lines: CanvasLine[]) => {\n  const result = lines.map((lineArr) => {\n    let path = '';\n    for (let x = 0, y = 1; y < lineArr.length; x += 2, y += 2) {\n      if (lineArr[x + 2] && lineArr[y + 2]) {\n        path += `M${lineArr[x]},${lineArr[y]} L${lineArr[x + 2]},${lineArr[y + 2]}`;\n      }\n    }\n\n    return path;\n  });\n\n  return result;\n};\n\ntype CanvasSVGProps = {\n  drawing: string;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  size?: number;\n};\n\nexport const CanvasSVG = ({ drawing = '', className = '', size = 250 }: CanvasSVGProps) => {\n  const konvaLines = JSON.parse(drawing);\n  const paths = getPathFromKonvaLines(konvaLines);\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 500 500\"\n      overflow=\"hidden\"\n      className={className}\n      style={{ width: `${size}px` }}\n    >\n      <defs />\n      {paths.map((path, index) => (\n        <path\n          key={`${drawing}-${index}`}\n          d={path}\n          fill=\"none\"\n          stroke=\"#000\"\n          strokeWidth=\"4\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit=\"10\"\n        />\n      ))}\n    </svg>\n  );\n};\n","import { useRef, useState } from 'react';\nimport { Stage, Layer, Line } from 'react-konva';\nimport clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\nimport { DeleteOutlined, UndoOutlined } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\n\ntype DrawingCanvasProps = {\n  /**\n   * Lines drawn in the canvas\n   */\n  lines: CanvasLine[];\n  /**\n   * Function where any new version of the drawing is sent to\n   */\n  setLines: CanvasSetLine;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Show controls to undo, redo, or erase drawing. Default: false\n   */\n  showControls?: boolean;\n  /**\n   * Size of the stroke. Default: medium\n   */\n  strokeWidth?: 'small' | 'medium' | 'large';\n};\n\n/**\n * Canvas drawing board using react-konva\n * It requires an array of lines and an setState function to save the lines\n */\nexport const DrawingCanvas = ({\n  lines,\n  setLines,\n  className = '',\n  showControls = false,\n  strokeWidth = 'medium',\n}: DrawingCanvasProps) => {\n  const [drawingHistory, setDrawingHistory] = useState<CanvasLine[]>([]);\n  const isDrawing = useRef(false);\n\n  /**\n   * Toggles off the isDrawing flag\n   */\n  const startDrawing = () => {\n    isDrawing.current = true;\n  };\n\n  /**\n   * Toggles off the isDrawing flag and resets history\n   */\n  const stopDrawing = () => {\n    isDrawing.current = false;\n    setDrawingHistory([]);\n  };\n\n  const startLine = (e: any) => {\n    startDrawing();\n    const pos = e.target.getStage().getPointerPosition();\n    setLines([...lines, [Math.round(pos.x), Math.round(pos.y)]]);\n  };\n\n  const finishLine = (e: any) => {\n    // Add point if it was a point\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    const x = Math.round(point.x);\n    const y = Math.round(point.y);\n\n    let lastLineEntry = lines[lines.length - 1];\n    lastLineEntry = lastLineEntry.concat([x + 0.1, y + 0.1]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLineEntry);\n    setLines(lines.concat());\n  };\n\n  /**\n   * Start recording drawing\n   * @param e - konva mouse event\n   */\n  const handleMouseDown = (e: any) => {\n    startLine(e);\n  };\n\n  /**\n   * Tracks mouse moving during the drawing\n   * @param e - konva mouse event\n   */\n  const handleMouseMove = (e: any) => {\n    // no drawing - skipping\n    if (!isDrawing.current) {\n      return;\n    }\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    let lastLine = lines[lines.length - 1];\n    // add end point\n    lastLine = lastLine.concat([Math.round(point.x), Math.round(point.y)]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLine);\n    setLines(lines.concat());\n  };\n\n  const handleMouseUp = (e: any) => {\n    if (isDrawing.current) {\n      stopDrawing();\n\n      finishLine(e);\n    }\n  };\n\n  /**\n   * Handles case when a current drawing is stopped off stage\n   * @param e - mouse event\n   */\n  const handleOffsetMouseUp = () => {\n    stopDrawing();\n  };\n\n  /**\n   * Handles case when a current drawing is started off stage\n   * @param e - mouse event\n   */\n  const handleOffsetMouseDown = () => {\n    startDrawing();\n  };\n\n  /**\n   * Handles when mouse leaves the stage\n   * @param e - konva mouse event\n   */\n  const handleMouseLeave = (e: any) => {\n    if (isDrawing.current) {\n      finishLine(e);\n\n      window.document.addEventListener('mouseup', handleOffsetMouseUp);\n      window.document.addEventListener('touchEnd', handleOffsetMouseUp);\n      window.document.addEventListener('mousedown', handleOffsetMouseDown);\n      window.document.addEventListener('touchStart', handleOffsetMouseDown);\n    }\n  };\n\n  /**\n   * Handles when mouse reenters the state\n   * @param e\n   */\n  const handleMouseEnter = (e: any) => {\n    if (isDrawing.current) {\n      startLine(e);\n    }\n    window.document.removeEventListener('mouseup', handleOffsetMouseUp);\n    window.document.removeEventListener('touchEnd', handleOffsetMouseUp);\n    window.document.removeEventListener('mousedown', handleOffsetMouseDown);\n    window.document.removeEventListener('touchStart', handleOffsetMouseDown);\n  };\n\n  const onClear = () => setLines([]);\n\n  const onUndo = () => {\n    const linesCopy = [...lines];\n    const drawingHistoryCopy = [...drawingHistory];\n    const lastLine: CanvasLine | undefined = linesCopy.pop();\n    if (lastLine) {\n      drawingHistoryCopy.push(lastLine);\n      setLines(linesCopy);\n      setDrawingHistory(drawingHistoryCopy);\n    }\n  };\n\n  const onRedo = () => {\n    const linesCopy = [...lines];\n    const drawingHistoryCopy = [...drawingHistory];\n    const lastUndoLine = drawingHistoryCopy.pop();\n    if (lastUndoLine) {\n      linesCopy.push(lastUndoLine);\n      setLines(linesCopy);\n      setDrawingHistory(drawingHistoryCopy);\n    }\n  };\n\n  const strokeWidthBySize =\n    {\n      small: 3,\n      medium: 5,\n      large: 7,\n    }?.[strokeWidth] ?? 5;\n\n  return (\n    <Space direction=\"vertical\" align=\"center\">\n      <Stage\n        width={500}\n        height={500}\n        onMouseDown={handleMouseDown}\n        onMousemove={handleMouseMove}\n        onMouseup={handleMouseUp}\n        onTouchStart={handleMouseDown}\n        onTouchMove={handleMouseMove}\n        onTouchEnd={handleMouseUp}\n        onMouseLeave={handleMouseLeave}\n        onMouseEnter={handleMouseEnter}\n        className={clsx('drawing-canvas', className)}\n        id=\"drawing-canvas\"\n      >\n        <Layer>\n          {lines.map((line, i) => (\n            <Line\n              key={i}\n              points={line}\n              stroke=\"#222222\"\n              strokeWidth={strokeWidthBySize}\n              tension={0.5}\n              lineCap=\"round\"\n              globalCompositeOperation=\"source-over\"\n            />\n          ))}\n        </Layer>\n      </Stage>\n      {showControls && (\n        <Space>\n          <Button onClick={onUndo} disabled={lines.length === 0}>\n            <UndoOutlined />\n            <Translate pt=\"Desfazer\" en=\"Undo\" />\n          </Button>\n          <Button onClick={onRedo} disabled={drawingHistory.length === 0}>\n            <UndoOutlined />\n            <Translate pt=\"Refazer\" en=\"Redo\" />\n          </Button>\n          <Button onClick={onClear} disabled={lines.length === 0}>\n            <DeleteOutlined />\n            <Translate pt=\"Apagar\" en=\"Clear\" />\n          </Button>\n        </Space>\n      )}\n    </Space>\n  );\n};\n","import { useCallback, useState } from 'react';\nvar useSetState = function (initialState) {\n    if (initialState === void 0) { initialState = {}; }\n    var _a = useState(initialState), state = _a[0], set = _a[1];\n    var setState = useCallback(function (patch) {\n        set(function (prevState) {\n            return Object.assign({}, prevState, patch instanceof Function ? patch(prevState) : patch);\n        });\n    }, []);\n    return [state, setState];\n};\nexport default useSetState;\n","export default function parseTimeRanges(ranges) {\n    var result = [];\n    for (var i = 0; i < ranges.length; i++) {\n        result.push({\n            start: ranges.start(i),\n            end: ranges.end(i),\n        });\n    }\n    return result;\n}\n","import createHTMLMediaHook from './factory/createHTMLMediaHook';\nvar useAudio = createHTMLMediaHook('audio');\nexport default useAudio;\n","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { useEffect, useRef } from 'react';\nimport useSetState from '../useSetState';\nimport parseTimeRanges from '../misc/parseTimeRanges';\nexport default function createHTMLMediaHook(tag) {\n    return function (elOrProps) {\n        var element;\n        var props;\n        if (React.isValidElement(elOrProps)) {\n            element = elOrProps;\n            props = element.props;\n        }\n        else {\n            props = elOrProps;\n        }\n        var _a = useSetState({\n            buffered: [],\n            time: 0,\n            duration: 0,\n            paused: true,\n            muted: false,\n            volume: 1,\n            playing: false,\n        }), state = _a[0], setState = _a[1];\n        var ref = useRef(null);\n        var wrapEvent = function (userEvent, proxyEvent) {\n            return function (event) {\n                try {\n                    proxyEvent && proxyEvent(event);\n                }\n                finally {\n                    userEvent && userEvent(event);\n                }\n            };\n        };\n        var onPlay = function () { return setState({ paused: false }); };\n        var onPlaying = function () { return setState({ playing: true }); };\n        var onWaiting = function () { return setState({ playing: false }); };\n        var onPause = function () { return setState({ paused: true, playing: false }); };\n        var onVolumeChange = function () {\n            var el = ref.current;\n            if (!el) {\n                return;\n            }\n            setState({\n                muted: el.muted,\n                volume: el.volume,\n            });\n        };\n        var onDurationChange = function () {\n            var el = ref.current;\n            if (!el) {\n                return;\n            }\n            var duration = el.duration, buffered = el.buffered;\n            setState({\n                duration: duration,\n                buffered: parseTimeRanges(buffered),\n            });\n        };\n        var onTimeUpdate = function () {\n            var el = ref.current;\n            if (!el) {\n                return;\n            }\n            setState({ time: el.currentTime });\n        };\n        var onProgress = function () {\n            var el = ref.current;\n            if (!el) {\n                return;\n            }\n            setState({ buffered: parseTimeRanges(el.buffered) });\n        };\n        if (element) {\n            element = React.cloneElement(element, __assign(__assign({ controls: false }, props), { ref: ref, onPlay: wrapEvent(props.onPlay, onPlay), onPlaying: wrapEvent(props.onPlaying, onPlaying), onWaiting: wrapEvent(props.onWaiting, onWaiting), onPause: wrapEvent(props.onPause, onPause), onVolumeChange: wrapEvent(props.onVolumeChange, onVolumeChange), onDurationChange: wrapEvent(props.onDurationChange, onDurationChange), onTimeUpdate: wrapEvent(props.onTimeUpdate, onTimeUpdate), onProgress: wrapEvent(props.onProgress, onProgress) }));\n        }\n        else {\n            element = React.createElement(tag, __assign(__assign({ controls: false }, props), { ref: ref, onPlay: wrapEvent(props.onPlay, onPlay), onPlaying: wrapEvent(props.onPlaying, onPlaying), onWaiting: wrapEvent(props.onWaiting, onWaiting), onPause: wrapEvent(props.onPause, onPause), onVolumeChange: wrapEvent(props.onVolumeChange, onVolumeChange), onDurationChange: wrapEvent(props.onDurationChange, onDurationChange), onTimeUpdate: wrapEvent(props.onTimeUpdate, onTimeUpdate), onProgress: wrapEvent(props.onProgress, onProgress) })); // TODO: fix this typing.\n        }\n        // Some browsers return `Promise` on `.play()` and may throw errors\n        // if one tries to execute another `.play()` or `.pause()` while that\n        // promise is resolving. So we prevent that with this lock.\n        // See: https://bugs.chromium.org/p/chromium/issues/detail?id=593273\n        var lockPlay = false;\n        var controls = {\n            play: function () {\n                var el = ref.current;\n                if (!el) {\n                    return undefined;\n                }\n                if (!lockPlay) {\n                    var promise = el.play();\n                    var isPromise = typeof promise === 'object';\n                    if (isPromise) {\n                        lockPlay = true;\n                        var resetLock = function () {\n                            lockPlay = false;\n                        };\n                        promise.then(resetLock, resetLock);\n                    }\n                    return promise;\n                }\n                return undefined;\n            },\n            pause: function () {\n                var el = ref.current;\n                if (el && !lockPlay) {\n                    return el.pause();\n                }\n            },\n            seek: function (time) {\n                var el = ref.current;\n                if (!el || state.duration === undefined) {\n                    return;\n                }\n                time = Math.min(state.duration, Math.max(0, time));\n                el.currentTime = time;\n            },\n            volume: function (volume) {\n                var el = ref.current;\n                if (!el) {\n                    return;\n                }\n                volume = Math.min(1, Math.max(0, volume));\n                el.volume = volume;\n                setState({ volume: volume });\n            },\n            mute: function () {\n                var el = ref.current;\n                if (!el) {\n                    return;\n                }\n                el.muted = true;\n            },\n            unmute: function () {\n                var el = ref.current;\n                if (!el) {\n                    return;\n                }\n                el.muted = false;\n            },\n        };\n        useEffect(function () {\n            var el = ref.current;\n            if (!el) {\n                if (process.env.NODE_ENV !== 'production') {\n                    if (tag === 'audio') {\n                        console.error('useAudio() ref to <audio> element is empty at mount. ' +\n                            'It seem you have not rendered the audio element, which it ' +\n                            'returns as the first argument const [audio] = useAudio(...).');\n                    }\n                    else if (tag === 'video') {\n                        console.error('useVideo() ref to <video> element is empty at mount. ' +\n                            'It seem you have not rendered the video element, which it ' +\n                            'returns as the first argument const [video] = useVideo(...).');\n                    }\n                }\n                return;\n            }\n            setState({\n                volume: el.volume,\n                muted: el.muted,\n                paused: el.paused,\n            });\n            // Start media, if autoPlay requested.\n            if (props.autoPlay && el.paused) {\n                controls.play();\n            }\n        }, [props.src]);\n        return [element, state, controls, ref];\n    };\n}\n","import { useEffect, useState } from 'react';\nimport { useAudio } from 'react-use';\n// Utils\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useDevFeatures } from 'hooks/useDevFeatures';\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Step } from 'components/steps';\nimport { Card } from 'components/cards';\nimport { DrawingCanvas } from 'components/canvas';\nimport { PanicIcon } from 'components/icons/PanicIcon';\n\n// Sound\nconst arteRuimTimer = require('assets/sounds/arte-ruim-timer.mp3');\n\ntype StepDrawProps = {\n  secretCard: ArteRuimCard | PlainObject;\n  onSubmitDrawing: GenericFunction;\n};\n\nexport function StepDraw({ secretCard, onSubmitDrawing }: StepDrawProps) {\n  const { translate } = useLanguage();\n  const { isDebugEnabled } = useDevFeatures();\n  const [lines, setLines] = useState<any>([]);\n  const [isTimesUp, setTimesUp] = useState(false);\n  const [volume] = useGlobalState('volume');\n  const [audio, , controls] = useAudio({\n    src: arteRuimTimer,\n    autoPlay: true,\n  });\n\n  // Updated volume\n  useEffect(() => {\n    controls.volume(volume);\n  }, [volume]); // eslint-disable-line\n\n  const { seconds } = useCountdown({\n    duration: 11,\n    autoStart: true,\n    onExpire: () => {\n      setTimesUp(true);\n      onSubmitDrawing({\n        drawing: JSON.stringify(lines),\n        cardId: secretCard.id,\n      });\n    },\n  });\n\n  return (\n    <Step>\n      <Card\n        size=\"large\"\n        header={translate('Desenhe', 'Draw', isDebugEnabled ? secretCard?.id : undefined)}\n        footer={Array(secretCard?.level).fill('•').join('')}\n        className=\"a-draw-step__card\"\n        color=\"yellow\"\n      >\n        {secretCard?.text}\n        <span className=\"a-draw-step__timer\">{seconds > 0 ? seconds - 1 : 0}</span>\n      </Card>\n      {audio}\n      {isTimesUp ? (\n        <PanicIcon style={{ background: 'white', width: '500px', padding: '2em' }} />\n      ) : (\n        <DrawingCanvas lines={lines} setLines={setLines} />\n      )}\n    </Step>\n  );\n}\n","import { useEffect, useState } from 'react';\n// State & Hooks\nimport { useIsUserReady } from 'hooks/useIsUserReady';\nimport { useUser } from 'hooks/useUser';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitDrawingAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { RoundAnnouncement } from 'components/round';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { StepDraw } from './StepDraw';\nimport { PaintingIcon } from 'components/icons/PaintingIcon';\n\nfunction PhaseDraw({ players, state, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, goToNextStep, setStep } = useStep(0);\n  const user = useUser(players);\n  const isUserReady = useIsUserReady(players, state);\n  const [secretCard, setSecretCard] = useState({});\n\n  useEffect(() => {\n    setSecretCard(players[user?.id]?.currentCard ?? {});\n  }, [players, user?.id]);\n\n  const onSubmitDrawing = useOnSubmitDrawingAPIRequest(setStep);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.ARTE_RUIM.DRAW}>\n      <StepSwitcher\n        step={step}\n        conditions={[!isUserReady, !isUserReady, !isUserReady]}\n        players={players}\n        waitingRoomInstruction={translate(\n          'Vamos aguardar enquanto os outros jogadores terminam seus desenhos!',\n          'Please wait while other players finish their artwork!'\n        )}\n      >\n        {/* Step 0 */}\n        <RoundAnnouncement round={state?.round} onPressButton={goToNextStep} buttonText=\" \" time={5}>\n          <Instruction contained>\n            <Translate\n              pt={`Essa rodada usará cartas de nível ${state?.level || '?'}`}\n              en={`This round uses cards of level ${state?.level || '?'}`}\n            />\n            {state.level === 4 && (\n              <Instruction contained>\n                <Translate\n                  pt=\"No nível 4, as cartas tem um ou dois temas comuns, então preste atenção nos detalhes\"\n                  en=\"On level 4, the cards have one or two common themes, so pay attention to details\"\n                />\n              </Instruction>\n            )}\n            {state.level === 5 && (\n              <Instruction contained>\n                <Translate\n                  pt=\"No nível 5, só existem duas cartas para todos\"\n                  en=\"On level 5, players draw one of two things only\"\n                />\n              </Instruction>\n            )}\n          </Instruction>\n        </RoundAnnouncement>\n        {/* Step 1 */}\n        <PhaseAnnouncement\n          icon={<PaintingIcon />}\n          title={translate('Desenhe!', 'Draw!')}\n          buttonText={translate('Um dó, lá, si... vamos ir... já!', 'Ready! Set! Go!')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          withoutTimer\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  Você terá 10 segundos para ler a sua carta e desenhá-la.\n                  <br />\n                  Aperte o botão quando estiver pronto!\n                  <br />\n                  Não vale usar números e letras.\n                  <br />\n                  Fique esperto porque o tempo começa assim que você apertar.\n                </>\n              }\n              en={\n                <>\n                  You'll have 10 seconds to read and draw your card.\n                  <br />\n                  Press the button when you're ready!\n                  <br />\n                  You can NOT use numbers or letters.\n                  <br />\n                  Be aware of the timer! It starts as soon as you press the button.\n                </>\n              }\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 2 */}\n        <StepDraw secretCard={secretCard} onSubmitDrawing={onSubmitDrawing} />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseDraw;\n","import { ARTE_RUIM_API } from 'services/adapters';\nimport { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\n\nexport function useOnSubmitDrawingAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: ARTE_RUIM_API.submitAction,\n    actionName: 'submit-drawing',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(1),\n    successMessage: translate(\n      'Acabou o tempo! Aguarde enquanto os outros participantes desenham',\n      \"Time's up! Wait for the other players to finish their art\"\n    ),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar o desenho',\n      'Oops, the application failed to send your art'\n    ),\n  });\n\n  return (payload: SubmitDrawingPayload) => {\n    request({\n      action: 'SUBMIT_DRAWING',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitVotingAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: ARTE_RUIM_API.submitAction,\n    actionName: 'submit-voting',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: translate(\n      'Avaliação enviada! Agora aguarde os outros jogadores',\n      'Evaluation sent successfully! Wait for the other players'\n    ),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua avaliação',\n      'Oops, the application failed to send your evaluation'\n    ),\n  });\n\n  return (payload: SubmitVotingPayload) => {\n    request({\n      action: 'SUBMIT_VOTING',\n      ...payload,\n    });\n  };\n}\n","// This icon file is generated automatically.\nvar ThunderboltOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M848 359.3H627.7L825.8 109c4.1-5.3.4-13-6.3-13H436c-2.8 0-5.5 1.5-6.9 4L170 547.5c-3.1 5.3.7 12 6.9 12h174.4l-89.4 357.6c-1.9 7.8 7.5 13.3 13.3 7.7L853.5 373c5.2-4.9 1.7-13.7-5.5-13.7zM378.2 732.5l60.3-241H281.1l189.6-327.4h224.6L487 427.4h211L378.2 732.5z\" } }] }, \"name\": \"thunderbolt\", \"theme\": \"outlined\" };\nexport default ThunderboltOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ThunderboltOutlinedSvg from \"@ant-design/icons-svg/es/asn/ThunderboltOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ThunderboltOutlined = function ThunderboltOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ThunderboltOutlinedSvg\n  }));\n};\n\nThunderboltOutlined.displayName = 'ThunderboltOutlined';\nexport default /*#__PURE__*/React.forwardRef(ThunderboltOutlined);","import { SEPARATOR } from 'utils/constants';\n\nexport function prepareVotes(votes: StringDictionary) {\n  return Object.entries(votes).reduce((acc: StringDictionary, [drawingEntryId, cardEntryId]) => {\n    const [, drawingId] = drawingEntryId.split(SEPARATOR);\n    const [, cardId] = cardEntryId.split(SEPARATOR);\n    acc[drawingId] = cardId;\n    return acc;\n  }, {});\n}\n","import clsx from 'clsx';\n// Utils\nimport { getEntryId } from 'utils/helpers';\n// Components\nimport { CanvasSVG } from 'components/canvas';\nimport { Ribbon } from 'components/ribbons';\n\ntype EvaluationAllDrawingsProps = {\n  drawings: ArteRuimDrawing[];\n  activeItem: string;\n  onActivateItem: GenericFunction;\n  votes: PlainObject;\n  canvasSize: number;\n  players: GamePlayers;\n};\n\nexport function EvaluationAllDrawings({\n  drawings,\n  activeItem,\n  onActivateItem,\n  votes,\n  canvasSize,\n  players,\n}: EvaluationAllDrawingsProps) {\n  const liButtonBaseClass = 'a-evaluation-all-drawings__li-drawing-button';\n\n  return (\n    <ul className=\"a-evaluation-all-drawings\">\n      {drawings?.map((drawingEntry) => {\n        const canvasEntryId = getEntryId(['drawing', drawingEntry.id]);\n        const isActive = activeItem === canvasEntryId;\n        const vote = votes[canvasEntryId];\n\n        return (\n          <li\n            key={`${canvasEntryId}-${drawingEntry.playerId}`}\n            className={clsx(liButtonBaseClass, isActive && `${liButtonBaseClass}--active`)}\n            onClick={() => onActivateItem(canvasEntryId)}\n          >\n            {votes?.[canvasEntryId] && <Ribbon label={vote.charAt(vote.length - 1)} />}\n            <CanvasSVG\n              drawing={drawingEntry.drawing}\n              className=\"a-evaluation-all-drawings__drawing\"\n              size={canvasSize}\n            />\n            <span className=\"a-evaluation-all-drawings__artist\">{players[drawingEntry.playerId].name}</span>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","// Ant Design Resources\nimport { WarningOutlined } from '@ant-design/icons';\n// Helpers\nimport { getColorFromLetter } from 'utils/helpers';\n// Components\nimport { Card } from 'components/cards';\nimport { ReactNode } from 'react';\n\ntype ArteRuimCardProps = {\n  /**\n   * The text of the card\n   */\n  text?: ReactNode;\n  /**\n   * The level of the card displayed as dots in the footer\n   */\n  level: number;\n  /**\n   * The header of the card. Default: X\n   */\n  header?: string;\n};\n\n/**\n * This is the Card component\n * @param props {object}\n * @returns\n */\nexport const ArteRuimCard = ({ text, level, header = 'X' }: ArteRuimCardProps) => {\n  return (\n    <Card\n      color={getColorFromLetter(header)}\n      header={header}\n      size=\"medium\"\n      footer={Array(level).fill('•').join('')}\n    >\n      {text ?? <WarningOutlined />}\n    </Card>\n  );\n};\n","import clsx from 'clsx';\nimport { useDevFeatures } from 'hooks/useDevFeatures';\n// Utils\nimport { LETTERS } from 'utils/constants';\nimport { getEntryId } from 'utils/helpers';\n// Components\nimport { ArteRuimCard as Card } from './Card';\n\ntype EvaluationAllCardsProps = {\n  cards: ArteRuimCard[];\n  activeItem: string;\n  onActivateItem: GenericFunction;\n  votes: PlainObject;\n};\n\nexport function EvaluationAllCards({ cards, activeItem, onActivateItem, votes }: EvaluationAllCardsProps) {\n  const { isDebugEnabled } = useDevFeatures();\n  const liButtonBaseClass = 'a-evaluation-all-cards__li-card-button';\n\n  return (\n    <ul className=\"a-evaluation-all-cards\">\n      {cards.map((cardEntry, index) => {\n        const letter = LETTERS[index];\n        const cardEntryId = getEntryId(['card', cardEntry.id, letter]);\n        const isActive = activeItem === cardEntryId;\n        const isUsed = Object.values(votes).includes(cardEntryId);\n\n        return (\n          <li\n            role=\"button\"\n            key={cardEntryId}\n            className={clsx(\n              liButtonBaseClass,\n              isActive && `${liButtonBaseClass}--active`,\n              isUsed && `${liButtonBaseClass}--used`\n            )}\n            onClick={() => onActivateItem(cardEntryId)}\n          >\n            <Card\n              text={cardEntry.text}\n              level={cardEntry.level}\n              header={isDebugEnabled ? cardEntry.id : letter}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n\nexport const EvaluationRules = () => (\n  <Instruction>\n    <Translate\n      pt={\n        <>\n          Encontre os pares de desenho e carta clicando em uma carta ou desenho e em seguida clicando em seu\n          par.\n          <br />\n          Uma bandeirinha aparecerá no topo de cada desenho com a cor e letra da carta que você selecionou.\n          <br />\n          Quando encontrar todos os pares, envie sua avaliação!\n        </>\n      }\n      en={\n        <>\n          Find the pairs of artwork and card by clicking on a card or artwork then on its match.\n          <br />\n          A ribbon will show up on the artwork with the color and letter of the matching card.\n          <br />\n          When you're done, click the button to send your evaluation!\n        </>\n      }\n    />\n  </Instruction>\n);\n\nexport const GalleryRules = () => (\n  <Instruction>\n    <Translate\n      pt={\n        <>\n          Agora, mostraremos cada arte, o que os jogadores votaram e a resposta final.\n          <br />\n          Se você votou na expressão correta, você ganha 2 pontos.\n          <br />\n          Quando for a sua arte, você ganha 1 ponto para cada pessoa que votou corretamente.\n        </>\n      }\n      en={\n        <>\n          Now we show each art, what players voted, and the final answer.\n          <br />\n          You get 2 points if you selected the right card.\n          <br />\n          When players selected the correct card for your artwork, you get 1 point for each match!\n        </>\n      }\n    />\n  </Instruction>\n);\n\nexport const ScoringRules = () => (\n  <Instruction>\n    <Translate\n      pt={\n        <>\n          Você ganha 2 pontos para cada ligação correta entre arte e expressão.\n          <br />\n          Para cada ligação correta que sua arte ganha, você recebe 1 ponto.\n        </>\n      }\n      en={\n        <>\n          You get 2 points if you matched the right card with artwork.\n          <br />\n          For you own artwork, you get 1 point for each correct match the other players done.\n        </>\n      }\n    />\n  </Instruction>\n);\n","import { useCallback, useEffect } from 'react';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\nimport { CloudUploadOutlined, ThunderboltOutlined } from '@ant-design/icons';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\nimport { useUser } from 'hooks/useUser';\nimport { useVotingMatch } from 'hooks/useVotingMatch';\n// Utils\nimport { LETTERS } from 'utils/constants';\nimport { getEntryId, shuffle } from 'utils/helpers';\nimport { prepareVotes } from './utils/helpers';\n// Components\nimport { Step } from 'components/steps';\nimport { PopoverRule } from 'components/rules';\nimport { CanvasResizer } from 'components/canvas';\nimport { Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { EvaluationAllDrawings } from './components/EvaluationAllDrawings';\nimport { EvaluationAllCards } from './components/EvaluationAllCards';\nimport { EvaluationRules } from './components/TextBlobs';\n\ntype StepEvaluationProps = {\n  drawings: ArteRuimDrawing[];\n  cards: ArteRuimCard[];\n  players: GamePlayers;\n  onSubmitVoting: GenericFunction;\n};\n\nexport function StepEvaluation({ drawings, cards, players, onSubmitVoting }: StepEvaluationProps) {\n  const { isLoading } = useLoading();\n  const user = useUser(players);\n  const canvasWidth = useCardWidth(Math.min(Object.keys(players).length, 6), 16, 150, 500);\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n  const { votes, setVotes, activeItem, activateItem, resetVoting, isVotingComplete } = useVotingMatch(\n    'drawing',\n    true,\n    drawings.length || 2\n  );\n\n  const onGuessForMe = useCallback(() => {\n    const usedDrawings = Object.keys(votes);\n    const usedCards = Object.values(votes);\n    const drawingsKeys = drawings\n      .map((e: ArteRuimDrawing) => getEntryId(['drawing', e.id]))\n      .filter((key: string) => !usedDrawings.includes(key));\n    let cardsKeys = shuffle(\n      cards\n        .map((e: ArteRuimCard, index: number) => getEntryId(['card', e.id, LETTERS[index]]))\n        .filter((key: string) => !usedCards.includes(key))\n    );\n    // For level 5 specifically, if there are less cards than drawings\n    cardsKeys =\n      cardsKeys.length < drawingsKeys.length\n        ? Array(Math.ceil(drawingsKeys.length / cardsKeys.length))\n            .fill(cardsKeys)\n            .flat()\n        : cardsKeys;\n\n    const newVotes = { ...votes };\n    drawingsKeys.forEach((drawingKey: string, index: number) => {\n      if (!newVotes[drawingKey]) {\n        newVotes[drawingKey] = cardsKeys[index];\n      }\n    });\n    setVotes(newVotes);\n  }, [cards, drawings, votes, setVotes]);\n\n  useEffect(() => {\n    if (!canvasSize) {\n      // Round to increments of 50\n      setCanvasSize(Math.floor(canvasWidth / 50) * 50);\n    }\n  }, [canvasSize, canvasWidth]); // eslint-disable-line\n\n  const selectOwnDrawing = useCallback(() => {\n    const playersDrawing = (drawings ?? []).find((drawing: ArteRuimDrawing) => drawing.playerId === user.id);\n    if (playersDrawing && playersDrawing.level !== 5) {\n      const drawingKey = getEntryId(['drawing', playersDrawing.id]);\n      const cardIndex = (cards ?? []).findIndex((card: ArteRuimCard) => card.playerId === user.id);\n      const cardKey = getEntryId(['card', playersDrawing.id, LETTERS[cardIndex]]);\n      const vote = { [drawingKey]: cardKey };\n      return vote;\n    }\n    return {};\n  }, [user, drawings, cards]);\n\n  // Auto-select the players own drawing and word\n  useEffect(() => {\n    const selection = selectOwnDrawing();\n    if (selection) {\n      setVotes((s: any) => ({ ...s, ...selection }));\n    }\n  }, [selectOwnDrawing, setVotes]);\n\n  useMock(() => {\n    onGuessForMe();\n  }, []);\n\n  return (\n    <Step className=\"a-evaluation-step\">\n      <PopoverRule content={<EvaluationRules />} />\n      <CanvasResizer />\n      <Title>\n        <Translate pt=\"Adivinhação\" en=\"Match the Pairs\" />\n      </Title>\n\n      <Space className=\"space-container\" align=\"center\" wrap>\n        <Button\n          type=\"default\"\n          icon={<ThunderboltOutlined />}\n          onClick={() => resetVoting(selectOwnDrawing())}\n          disabled={isLoading}\n        >\n          <Translate pt=\"Limpar seleções\" en=\"Clear selections\" />\n        </Button>\n        <Button\n          type=\"default\"\n          icon={<ThunderboltOutlined />}\n          onClick={onGuessForMe}\n          disabled={isLoading || Object.values(votes).length === drawings.length}\n        >\n          <Translate pt=\"Chutar restantes\" en=\"Guess for me\" />\n        </Button>\n        <Button\n          type=\"primary\"\n          onClick={() => onSubmitVoting({ votes: prepareVotes(votes) })}\n          disabled={isLoading || !isVotingComplete}\n          icon={<CloudUploadOutlined />}\n        >\n          <Translate pt=\"Enviar sua avaliação\" en=\"Send evaluation\" />\n        </Button>\n      </Space>\n\n      <EvaluationAllDrawings\n        drawings={drawings ?? []}\n        activeItem={activeItem}\n        onActivateItem={activateItem}\n        votes={votes}\n        canvasSize={canvasSize}\n        players={players}\n      />\n\n      <EvaluationAllCards\n        cards={cards ?? []}\n        activeItem={activeItem}\n        onActivateItem={activateItem}\n        votes={votes}\n      />\n    </Step>\n  );\n}\n","import { useMemo } from 'react';\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\n// Components\nimport { CanvasSVG } from 'components/canvas';\nimport { IconAvatar } from 'components/icons/IconAvatar';\nimport { AnimatedLoaderIcon } from 'components/icons/AnimatedLoaderIcon';\n\ntype EvaluatedDrawingsProps = {\n  votes?: StringDictionary;\n  cards: ArteRuimCard[];\n  drawings: ArteRuimDrawing[];\n};\n\n/**\n * Displays drawings in the waiting room after evaluation\n * @param props\n * @returns\n */\nexport function EvaluatedDrawings({ votes, cards, drawings }: EvaluatedDrawingsProps) {\n  const [canvasSize] = useGlobalState('canvasSize');\n\n  const cardsDict = useMemo(\n    () =>\n      cards.reduce((acc: Record<string, ArteRuimCard>, card) => {\n        acc[card.id] = card;\n        return acc;\n      }, {}),\n    [cards]\n  );\n\n  const drawingsDict = useMemo(\n    () =>\n      drawings.reduce((acc: Record<string, ArteRuimDrawing>, drawing) => {\n        acc[drawing.id] = drawing;\n        return acc;\n      }, {}),\n    [drawings]\n  );\n\n  if (!votes) {\n    return (\n      <div className=\"a-evaluated-drawings\">\n        <IconAvatar icon={<AnimatedLoaderIcon />} />\n      </div>\n    );\n  }\n  const cSize = Math.min(canvasSize * 0.6, 2000);\n\n  return (\n    <ul className=\"a-evaluated-drawings\">\n      {Object.keys(votes)\n        .sort()\n        .map((drawingKey: string) => {\n          const drawing = drawingsDict[drawingKey] as ArteRuimDrawing;\n          const card = cardsDict[votes[drawingKey]] as ArteRuimCard;\n\n          return (\n            <li className=\"a-evaluated-drawings__item\" key={`${drawing.id}-${card.id}-${card.playerId}`}>\n              <CanvasSVG\n                drawing={drawing.drawing}\n                size={cSize}\n                className=\"a-evaluation-all-drawings__drawing\"\n              />\n              <div className=\"a-evaluated-drawings__card\" style={{ maxWidth: `${cSize}px` }}>\n                {card.text}\n              </div>\n            </li>\n          );\n        })}\n    </ul>\n  );\n}\n","// Hooks\nimport { useIsUserReady } from 'hooks/useIsUserReady';\nimport { useUser } from 'hooks/useUser';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitVotingAPIRequest } from './utils/api-requests';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { StepEvaluation } from './StepEvaluation';\nimport { EvaluationRules } from './components/TextBlobs';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { EvaluatedDrawings } from './components/EvaluatedDrawings';\nimport { EvaluateIcon } from 'components/icons/EvaluateIcon';\n\nfunction EvaluationPhase({ players, state, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, goToNextStep, setStep } = useStep(0);\n  const user = useUser(players);\n  const isUserReady = useIsUserReady(players, state);\n  const onSubmitVoting = useOnSubmitVotingAPIRequest(setStep);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.ARTE_RUIM.EVALUATION}>\n      <StepSwitcher\n        step={step}\n        conditions={[!isUserReady, !isUserReady]}\n        players={players}\n        waitingRoomInstruction={translate(\n          'Vamos aguardar enquanto os outros jogadores terminam de avaliar!',\n          'Please wait while other players finish their evaluations!'\n        )}\n        waitingRoomContent={\n          <EvaluatedDrawings cards={state.cards} drawings={state.drawings} votes={user?.votes} />\n        }\n      >\n        {/*Step 0 */}\n        <PhaseAnnouncement\n          icon={<EvaluateIcon />}\n          title={translate('Adivinhação', 'Match the Pairs')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <EvaluationRules />\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepEvaluation\n          drawings={state.drawings}\n          cards={state.cards}\n          players={players}\n          onSubmitVoting={onSubmitVoting}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default EvaluationPhase;\n","// Components\nimport { AvatarEntry } from 'components/avatars';\nimport { Translate } from 'components/language';\n\ntype GalleryWindowCreditsProps = {\n  artistName: string;\n  artistAvatarId: string;\n};\n\nexport function GalleryWindowCredits({ artistName, artistAvatarId }: GalleryWindowCreditsProps) {\n  return (\n    <div className=\"a-gallery__credits\">\n      <div className=\"a-gallery__label\">\n        <Translate pt=\"Artista\" en=\"Artist\" />\n      </div>\n      <span className=\"a-gallery__artist-name\">\n        <AvatarEntry id={artistAvatarId} name={artistName} />\n      </span>\n    </div>\n  );\n}\n","// This icon file is generated automatically.\nvar MessageFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M924.3 338.4a447.57 447.57 0 00-96.1-143.3 443.09 443.09 0 00-143-96.3A443.91 443.91 0 00512 64h-2c-60.5.3-119 12.3-174.1 35.9a444.08 444.08 0 00-141.7 96.5 445 445 0 00-95 142.8A449.89 449.89 0 0065 514.1c.3 69.4 16.9 138.3 47.9 199.9v152c0 25.4 20.6 46 45.9 46h151.8a447.72 447.72 0 00199.5 48h2.1c59.8 0 117.7-11.6 172.3-34.3A443.2 443.2 0 00827 830.5c41.2-40.9 73.6-88.7 96.3-142 23.5-55.2 35.5-113.9 35.8-174.5.2-60.9-11.6-120-34.8-175.6zM312.4 560c-26.4 0-47.9-21.5-47.9-48s21.5-48 47.9-48 47.9 21.5 47.9 48-21.4 48-47.9 48zm199.6 0c-26.4 0-47.9-21.5-47.9-48s21.5-48 47.9-48 47.9 21.5 47.9 48-21.5 48-47.9 48zm199.6 0c-26.4 0-47.9-21.5-47.9-48s21.5-48 47.9-48 47.9 21.5 47.9 48-21.5 48-47.9 48z\" } }] }, \"name\": \"message\", \"theme\": \"filled\" };\nexport default MessageFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport MessageFilledSvg from \"@ant-design/icons-svg/es/asn/MessageFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar MessageFilled = function MessageFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: MessageFilledSvg\n  }));\n};\n\nMessageFilled.displayName = 'MessageFilled';\nexport default /*#__PURE__*/React.forwardRef(MessageFilled);","import { orderBy } from 'lodash';\n// Ant Design Resources\nimport { Avatar as AntAvatar } from 'antd';\nimport { CrownFilled, MessageFilled } from '@ant-design/icons';\n// Utils\nimport { getPlayersFromIds } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\n\ntype GalleryWindowGuessesProps = {\n  playersSay: PlayersSay;\n  players: GamePlayers;\n  cards: ArteRuimCard[];\n  windowCardId: string;\n  artistColor: string;\n};\n\nexport function GalleryWindowGuesses({\n  playersSay,\n  players,\n  cards,\n  windowCardId,\n  artistColor,\n}: GalleryWindowGuessesProps) {\n  const entries = orderBy(\n    Object.entries(playersSay).map(([cardId, playersIds]) => {\n      return {\n        cardId,\n        card: cards.find((i) => i.id === cardId),\n        playersIds,\n        count: playersIds.length,\n        isCorrect: windowCardId === cardId,\n      };\n    }),\n    ['isCorrect', 'count', 'card.text'],\n    ['desc', 'desc', 'asc']\n  );\n\n  return (\n    <div className=\"a-gallery__guesses\">\n      <div className=\"a-gallery__label\">\n        <Translate pt=\"Participantes votaram\" en=\"Players voted\" />\n      </div>\n      {entries.map((entry, index) => {\n        return (\n          <div key={`guess-${entry.cardId}-${index}`} className=\"a-gallery__guess\">\n            <div\n              className=\"a-gallery__speech-bubble\"\n              style={entry.isCorrect ? { backgroundColor: artistColor, color: 'white' } : {}}\n            >\n              {entry.isCorrect ? (\n                <CrownFilled className=\"a-gallery__speech-bubble-icon\" style={{ color: 'white' }} />\n              ) : (\n                <MessageFilled className=\"a-gallery__speech-bubble-icon\" />\n              )}\n              {entry.card?.text}\n            </div>\n            <div className=\"a-gallery__players\">\n              <AntAvatar.Group>\n                {entry.playersIds.map((playerId) => (\n                  <Avatar\n                    id={players[playerId].avatarId}\n                    key={`guess-avatar-${players[playerId].avatarId}`}\n                  />\n                ))}\n              </AntAvatar.Group>\n              <span className=\"a-gallery__players-names\">\n                {getPlayersFromIds(entry.playersIds, players, true).join(', ')}\n              </span>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Avatar as AntAvatar, Typography } from 'antd';\nimport { CrownFilled } from '@ant-design/icons';\n// Utils\nimport { getPlayersFromIds } from 'utils/helpers';\n// Components\nimport { Translate } from 'components/language';\nimport { Avatar } from 'components/avatars';\nimport { StarPoints } from 'components/points';\nimport { GarbageIcon } from 'components/icons/GarbageIcon';\nimport { IconAvatar } from 'components/icons/IconAvatar';\n\ntype GalleryWindowResultProps = {\n  playerArtist: GamePlayer;\n  correctAnswerId: string;\n  correctAnswerText: string;\n  playersPoints?: NumberDictionary;\n  playersSay: PlayersSay;\n  players: GamePlayers;\n};\n\nexport function GalleryWindowResult({\n  playerArtist,\n  correctAnswerId,\n  correctAnswerText,\n  playersPoints,\n  playersSay,\n  players,\n}: GalleryWindowResultProps) {\n  const correctGuesses = Object.values(playersSay?.[correctAnswerId] ?? {});\n\n  return (\n    <div className=\"a-gallery__result\">\n      <div className=\"a-gallery__label\">\n        <Translate pt=\"E o título correto da obra é\" en=\"And the masterpiece title is\" />\n      </div>\n      <div className=\"a-gallery__speech-bubble\">\n        <CrownFilled className=\"a-gallery__speech-bubble-icon\" />\n        {correctAnswerText}\n      </div>\n      {correctGuesses.length ? (\n        <>\n          <div className=\"a-gallery__players\">\n            <AntAvatar.Group>\n              {correctGuesses.map((playerId) => {\n                return <Avatar key={`correct-guess-avatar-${playerId}`} id={players[playerId].avatarId} />;\n              })}\n            </AntAvatar.Group>\n            <StarPoints quantity={2} keyPrefix={`guessers-points-${playerArtist.id}`} />\n            <span className=\"a-gallery__players-names\">\n              {getPlayersFromIds(correctGuesses, players, true).join(', ')}\n            </span>\n          </div>\n          <div className=\"a-gallery__artist-points\">\n            <Avatar id={playerArtist.avatarId} />{' '}\n            <StarPoints\n              quantity={playersPoints?.[playerArtist.id]}\n              keyPrefix={`artist-points-${playerArtist.id}`}\n            />{' '}\n            <span className=\"a-gallery__players-names\">{playerArtist.name}</span>\n          </div>\n        </>\n      ) : (\n        <Typography.Text className=\"a-gallery__no-wins\">\n          <IconAvatar icon={<GarbageIcon />} size=\"large\" shape=\"square\" />\n          <Translate\n            pt=\"Nossa, ninguém acertou. Esse desenho deve ter sido muito ruim.\"\n            en=\"Wow, nobody got it. It must have been a very crappy drawing. Shame...\"\n          />\n        </Typography.Text>\n      )}\n    </div>\n  );\n}\n","// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Utils\nimport { AVATARS } from 'utils/avatars';\nimport { WINDOW_DURATION } from './utils/constants';\n// Components\nimport { CanvasSVG } from 'components/canvas';\nimport { Translate } from 'components/language';\nimport { PopoverRule } from 'components/rules';\nimport { SlideShow } from 'components/slide-show';\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\nimport { GalleryWindowCredits } from './components/GalleryWindowCredits';\nimport { GalleryWindowGuesses } from './components/GalleryWindowGuesses';\nimport { GalleryWindowResult } from './components/GalleryWindowResult';\nimport { ScoringRules } from './components/TextBlobs';\n\ntype StepGalleryProps = {\n  gallery: ArteRuimWindow[];\n  players: GamePlayers;\n  cards: ArteRuimCard[];\n  activeIndex: number;\n  setActiveIndex: GenericFunction;\n  setStep: GenericFunction;\n  isFirstGalleryRunThrough: boolean;\n};\n\nexport function StepGallery({\n  gallery,\n  players,\n  cards,\n  activeIndex,\n  setActiveIndex,\n  setStep,\n  isFirstGalleryRunThrough,\n}: StepGalleryProps) {\n  useTemporarilyHidePlayersBar();\n\n  const canvasWidth = useCardWidth(2, 16, 200, 500);\n\n  const { drawing, artistId, id, text, playersPoints, playersSay } = gallery[activeIndex];\n\n  const playerArtist = players[artistId];\n  const currentColor = AVATARS[playerArtist.avatarId].color;\n\n  return (\n    <Step className=\"a-gallery-phase__windows\">\n      <Title size=\"small\">\n        <Translate pt=\"Galeria de Arte\" en=\"Art Gallery\" />\n      </Title>\n\n      <PopoverRule content={<ScoringRules />} />\n\n      <SlideShow\n        players={players}\n        length={gallery.length}\n        activeIndex={activeIndex}\n        setActiveIndex={setActiveIndex}\n        setStep={setStep}\n        disableControls={isFirstGalleryRunThrough}\n        barColor={currentColor}\n        windowDuration={WINDOW_DURATION}\n        leftClassName=\"a-gallery__canvas\"\n        rightClassName=\"a-gallery__info\"\n      >\n        <CanvasSVG drawing={drawing} size={canvasWidth} className=\"a-gallery__drawing\" />\n\n        <>\n          <GalleryWindowCredits artistName={playerArtist.name} artistAvatarId={playerArtist.avatarId} />\n\n          <GalleryWindowGuesses\n            players={players}\n            playersSay={playersSay}\n            cards={cards}\n            windowCardId={id}\n            artistColor={currentColor}\n          />\n\n          <GalleryWindowResult\n            playerArtist={playerArtist}\n            correctAnswerId={id}\n            correctAnswerText={text}\n            playersPoints={playersPoints}\n            playersSay={playersSay}\n            players={players}\n          />\n        </>\n      </SlideShow>\n    </Step>\n  );\n}\n","export const WINDOW_DURATION = 10;\n","// Ant Design Resources\nimport { Button } from 'antd';\nimport { PictureOutlined } from '@ant-design/icons';\n// Components\nimport { RoundsLeftInstruction } from 'components/text';\nimport { StepRankingWrapper } from 'components/ranking';\nimport { PopoverRule } from 'components/rules';\nimport { Translate } from 'components/language';\nimport { AdminNextPhaseButton } from 'components/admin';\nimport { ScoringRules } from './components/TextBlobs';\n\ntype StepRankingProps = {\n  players: GamePlayers;\n  ranking: GameRanking;\n  isGameOver: boolean;\n  round: GameRound;\n  goToPreviousStep: GenericFunction;\n  setActiveIndex: GenericFunction;\n  isLastRound?: boolean;\n};\n\nexport function StepRanking({\n  players,\n  ranking,\n  isGameOver,\n  round,\n  goToPreviousStep,\n  setActiveIndex,\n  isLastRound = false,\n}: StepRankingProps) {\n  return (\n    <StepRankingWrapper\n      players={players}\n      ranking={ranking}\n      gainedPointsDescriptions={[\n        <Translate pt=\"Votos corretos\" en=\"Correct guesses\" />,\n        <Translate\n          pt=\"Votos corretos em seu desenho por outros jogadores\"\n          en=\"Correct guesses on your drawing by other players\"\n        />,\n      ]}\n    >\n      <PopoverRule content={<ScoringRules />} />\n\n      {!isGameOver && <RoundsLeftInstruction round={round} lastRound={isLastRound} />}\n\n      <Button\n        size=\"large\"\n        onClick={() => {\n          goToPreviousStep();\n          setActiveIndex(0);\n        }}\n        icon={<PictureOutlined />}\n      >\n        <Translate pt=\"Ver Galeria De Novo\" en=\"See Gallery Again\" />\n      </Button>\n\n      <AdminNextPhaseButton round={round} lastRound={isLastRound} />\n    </StepRankingWrapper>\n  );\n}\n","// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useSlideShow } from 'hooks/useSlideShow';\nimport { useStep } from 'hooks/useStep';\n// Resources and Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { GalleryRules } from './components/TextBlobs';\nimport { StepGallery } from './StepGallery';\nimport { StepRanking } from './StepRanking';\nimport { PictureIcon } from 'components/icons/PictureIcon';\n\nfunction PhaseGallery({ players, state, info, meta }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, goToNextStep, goToPreviousStep, setStep } = useStep(0);\n  const { activeIndex, setActiveIndex, isFirstGalleryRunThrough } = useSlideShow(state.gallery.length);\n\n  const isGameOver = meta.options?.shortGame\n    ? state.round.current === 5\n    : Object.values(players).some((player) => player.score > 50);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ARTE_RUIM.GALLERY}\n      className=\"a-gallery-phase\"\n    >\n      <StepSwitcher step={step} players={players}>\n        {/*Step 0 */}\n        <PhaseAnnouncement\n          icon={<PictureIcon />}\n          title={translate('Galeria de Arte', 'Art Gallery')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          unskippable\n        >\n          <GalleryRules />\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepGallery\n          gallery={state.gallery}\n          players={players}\n          cards={state.cards}\n          activeIndex={activeIndex}\n          setActiveIndex={setActiveIndex}\n          setStep={setStep}\n          isFirstGalleryRunThrough={isFirstGalleryRunThrough}\n        />\n\n        {/* Step 2 */}\n        <StepRanking\n          players={players}\n          ranking={state.ranking}\n          isGameOver={isGameOver}\n          round={state.round}\n          goToPreviousStep={goToPreviousStep}\n          setActiveIndex={setActiveIndex}\n          isLastRound={state?.lastRound}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseGallery;\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Avatar, Tooltip } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n\nconst GRADES = ['F', 'D', 'D+', 'C-', 'C', 'C+', 'B-', 'B', 'B+', 'A-', 'A', 'A+'];\n\ntype DrawingGradeProps = {\n  value: number;\n};\n\nexport const DrawingGrade = ({ value }: DrawingGradeProps) => {\n  const { translate } = useLanguage();\n  const grade = GRADES[Math.floor(value / 0.084)];\n\n  const baseClass = 'a-drawing-grade';\n\n  return (\n    <Tooltip\n      title={translate(\n        `Nota baseada em quantos acertos o desenho teve: ${value * 100}%`,\n        `Grade based on the number of correct guesses the artwork got: ${value * 100}%`\n      )}\n    >\n      <Avatar className={clsx(baseClass, `${baseClass}--${grade[0]}`)}>{grade}</Avatar>\n    </Tooltip>\n  );\n};\n","// Components\nimport { CanvasSVG } from 'components/canvas';\nimport { GameOverWrapper } from 'components/game-over';\nimport { TrophyIcon } from 'components/icons/TrophyIcon';\nimport { Translate } from 'components/language';\nimport { DrawingGrade } from './components/DrawingGrade';\n\nfunction PhaseGameOver({ state, players, info }: PhaseProps) {\n  return (\n    <GameOverWrapper\n      info={info}\n      state={state}\n      announcementIcon={<TrophyIcon />}\n      rateWidgetCustomText={<Translate pt=\"Alguma sugestão de carta?\" en=\"Any card suggestions?\" />}\n    >\n      <ul className=\"a-game-over__gallery\">\n        {state.drawings.map((entry: ArteRuimDrawing) => {\n          return (\n            <li className=\"a-game-over__gallery-item\" key={entry.drawing} style={{ width: '200px' }}>\n              <CanvasSVG drawing={entry.drawing} size={200} className=\"a-game-over__gallery-canvas\" />\n              <span className=\"a-game-over__credits\">\n                \"{entry.text}\" <Translate pt=\"por\" en=\"by\" /> {players[entry.playerId].name}\n              </span>\n              <DrawingGrade value={entry.successRate ?? 0} />\n            </li>\n          );\n        })}\n      </ul>\n    </GameOverWrapper>\n  );\n}\n\nexport default PhaseGameOver;\n","import { ConfigProvider } from 'antd';\n// Constants\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport PhaseDraw from './PhaseDraw';\nimport PhaseEvaluation from './PhaseEvaluation';\nimport PhaseGallery from './PhaseGallery';\nimport PhaseGameOver from './PhaseGameOver';\n\nConfigProvider.config({\n  theme: {\n    primaryColor: THEME_COLORS.WOOD,\n  },\n});\n\nfunction SessionArteRuim({ gameId }: SessionProps) {\n  function getActiveComponent(phase: string) {\n    switch (phase) {\n      case PHASES.DEFAULT.LOBBY:\n        return PhaseLobby;\n      case PHASES.DEFAULT.RULES:\n        return PhaseRules;\n      case PHASES.DEFAULT.SETUP:\n        return PhaseSetup;\n      case PHASES.ARTE_RUIM.DRAW:\n        return PhaseDraw;\n      case PHASES.ARTE_RUIM.EVALUATION:\n        return PhaseEvaluation;\n      case PHASES.ARTE_RUIM.GALLERY:\n        return PhaseGallery;\n      case PHASES.DEFAULT.GAME_OVER:\n        return PhaseGameOver;\n      default:\n        return PageError;\n    }\n  }\n\n  return (\n    <Session\n      gameId={gameId}\n      gameCollection={GAME_COLLECTION.ARTE_RUIM}\n      getActiveComponent={getActiveComponent}\n    />\n  );\n}\n\nexport default SessionArteRuim;\n","// This icon file is generated automatically.\nvar CloudUploadOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M518.3 459a8 8 0 00-12.6 0l-112 141.7a7.98 7.98 0 006.3 12.9h73.9V856c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V613.7H624c6.7 0 10.4-7.7 6.3-12.9L518.3 459z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M811.4 366.7C765.6 245.9 648.9 160 512.2 160S258.8 245.8 213 366.6C127.3 389.1 64 467.2 64 560c0 110.5 89.5 200 199.9 200H304c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8h-40.1c-33.7 0-65.4-13.4-89-37.7-23.5-24.2-36-56.8-34.9-90.6.9-26.4 9.9-51.2 26.2-72.1 16.7-21.3 40.1-36.8 66.1-43.7l37.9-9.9 13.9-36.6c8.6-22.8 20.6-44.1 35.7-63.4a245.6 245.6 0 0152.4-49.9c41.1-28.9 89.5-44.2 140-44.2s98.9 15.3 140 44.2c19.9 14 37.5 30.8 52.4 49.9 15.1 19.3 27.1 40.7 35.7 63.4l13.8 36.5 37.8 10C846.1 454.5 884 503.8 884 560c0 33.1-12.9 64.3-36.3 87.7a123.07 123.07 0 01-87.6 36.3H720c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h40.1C870.5 760 960 670.5 960 560c0-92.7-63.1-170.7-148.6-193.3z\" } }] }, \"name\": \"cloud-upload\", \"theme\": \"outlined\" };\nexport default CloudUploadOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloudUploadOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloudUploadOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CloudUploadOutlined = function CloudUploadOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CloudUploadOutlinedSvg\n  }));\n};\n\nCloudUploadOutlined.displayName = 'CloudUploadOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloudUploadOutlined);","// This icon file is generated automatically.\nvar WarningOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M464 720a48 48 0 1096 0 48 48 0 10-96 0zm16-304v184c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V416c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8zm475.7 440l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48zm-783.5-27.9L512 239.9l339.8 588.2H172.2z\" } }] }, \"name\": \"warning\", \"theme\": \"outlined\" };\nexport default WarningOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport WarningOutlinedSvg from \"@ant-design/icons-svg/es/asn/WarningOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar WarningOutlined = function WarningOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: WarningOutlinedSvg\n  }));\n};\n\nWarningOutlined.displayName = 'WarningOutlined';\nexport default /*#__PURE__*/React.forwardRef(WarningOutlined);"],"names":["CanvasResizer","useGlobalState","canvasSize","setCanvasSize","className","pt","en","value","min","max","step","onChange","CanvasSVG","drawing","size","konvaLines","JSON","parse","paths","map","lineArr","path","x","y","length","xmlns","viewBox","overflow","style","width","index","d","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","strokeMiterlimit","DrawingCanvas","lines","setLines","showControls","useState","drawingHistory","setDrawingHistory","isDrawing","useRef","startDrawing","current","stopDrawing","startLine","e","pos","target","getStage","getPointerPosition","Math","round","finishLine","point","lastLineEntry","concat","splice","handleMouseDown","handleMouseMove","lastLine","handleMouseUp","handleOffsetMouseUp","handleOffsetMouseDown","strokeWidthBySize","small","medium","large","direction","align","height","onMouseDown","onMousemove","onMouseup","onTouchStart","onTouchMove","onTouchEnd","onMouseLeave","window","document","addEventListener","onMouseEnter","removeEventListener","clsx","id","line","i","points","tension","lineCap","globalCompositeOperation","onClick","linesCopy","drawingHistoryCopy","pop","push","disabled","UndoOutlined","lastUndoLine","DeleteOutlined","initialState","_a","state","set","useCallback","patch","prevState","Object","assign","Function","parseTimeRanges","ranges","result","start","end","tag","elOrProps","element","props","React","useSetState","buffered","time","duration","paused","muted","volume","playing","setState","ref","wrapEvent","userEvent","proxyEvent","event","onPlay","onPlaying","onWaiting","onPause","onVolumeChange","el","onDurationChange","onTimeUpdate","currentTime","onProgress","__assign","controls","lockPlay","play","promise","resetLock","then","pause","seek","undefined","mute","unmute","useEffect","autoPlay","src","arteRuimTimer","require","StepDraw","secretCard","onSubmitDrawing","translate","useLanguage","isDebugEnabled","useDevFeatures","isTimesUp","setTimesUp","useAudio","audio","seconds","useCountdown","autoStart","onExpire","stringify","cardId","header","footer","Array","level","join","color","text","PanicIcon","background","padding","players","info","useStep","goToNextStep","setStep","user","useUser","isUserReady","useIsUserReady","setSecretCard","currentCard","request","useAPICall","apiFunction","ARTE_RUIM_API","actionName","onBeforeCall","onError","successMessage","errorMessage","payload","action","useOnSubmitDrawingAPIRequest","phase","allowedPhase","PHASES","conditions","waitingRoomInstruction","onPressButton","buttonText","contained","icon","PaintingIcon","title","onClose","currentRound","withoutTimer","ThunderboltOutlined","AntdIcon","_objectSpread","ThunderboltOutlinedSvg","displayName","prepareVotes","votes","entries","reduce","acc","drawingEntryId","cardEntryId","split","SEPARATOR","drawingId","EvaluationAllDrawings","drawings","activeItem","onActivateItem","liButtonBaseClass","drawingEntry","canvasEntryId","getEntryId","isActive","vote","label","charAt","playerId","name","ArteRuimCard","getColorFromLetter","WarningOutlined","EvaluationAllCards","cards","cardEntry","letter","LETTERS","isUsed","values","includes","role","EvaluationRules","GalleryRules","ScoringRules","StepEvaluation","onSubmitVoting","isLoading","useLoading","canvasWidth","useCardWidth","keys","useVotingMatch","setVotes","activateItem","resetVoting","isVotingComplete","onGuessForMe","usedDrawings","usedCards","drawingsKeys","filter","key","cardsKeys","shuffle","ceil","flat","newVotes","forEach","drawingKey","floor","selectOwnDrawing","playersDrawing","find","cardIndex","findIndex","card","cardKey","selection","s","useMock","content","wrap","type","CloudUploadOutlined","EvaluatedDrawings","cardsDict","useMemo","drawingsDict","IconAvatar","AnimatedLoaderIcon","cSize","sort","maxWidth","useOnSubmitVotingAPIRequest","waitingRoomContent","EvaluateIcon","GalleryWindowCredits","artistName","artistAvatarId","MessageFilled","MessageFilledSvg","GalleryWindowGuesses","playersSay","windowCardId","artistColor","orderBy","playersIds","count","isCorrect","entry","backgroundColor","CrownFilled","avatarId","getPlayersFromIds","GalleryWindowResult","playerArtist","correctAnswerId","correctAnswerText","playersPoints","correctGuesses","quantity","keyPrefix","GarbageIcon","shape","StepGallery","gallery","activeIndex","setActiveIndex","isFirstGalleryRunThrough","useTemporarilyHidePlayersBar","artistId","currentColor","AVATARS","disableControls","barColor","windowDuration","leftClassName","rightClassName","StepRanking","ranking","isGameOver","goToPreviousStep","isLastRound","gainedPointsDescriptions","lastRound","PictureOutlined","meta","useSlideShow","options","shortGame","some","player","score","PictureIcon","unskippable","GRADES","DrawingGrade","grade","baseClass","announcementIcon","TrophyIcon","rateWidgetCustomText","successRate","ConfigProvider","theme","primaryColor","THEME_COLORS","gameId","gameCollection","GAME_COLLECTION","getActiveComponent","PhaseLobby","PhaseRules","PhaseSetup","PhaseDraw","PhaseEvaluation","PhaseGallery","PhaseGameOver","PageError","CloudUploadOutlinedSvg","WarningOutlinedSvg"],"sourceRoot":""}