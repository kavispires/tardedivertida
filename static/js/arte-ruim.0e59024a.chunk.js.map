{"version":3,"file":"static/js/arte-ruim.0e59024a.chunk.js","mappings":"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","sources":["games/arte-ruim/StepDraw.tsx","games/arte-ruim/components/TextBlobs.tsx","games/arte-ruim/PhaseDraw.tsx","games/arte-ruim/utils/api-requests.ts","games/arte-ruim/utils/helpers.ts","games/arte-ruim/components/EvaluationAllDrawings.tsx","games/arte-ruim/components/Card.tsx","games/arte-ruim/components/EvaluationAllCards.tsx","games/arte-ruim/StepEvaluation.tsx","games/arte-ruim/components/EvaluatedDrawings.tsx","games/arte-ruim/PhaseEvaluation.tsx","games/arte-ruim/components/GalleryWindowCredits.tsx","games/arte-ruim/components/GalleryWindowGuesses.tsx","games/arte-ruim/components/GalleryWindowResult.tsx","games/arte-ruim/StepGallery.tsx","games/arte-ruim/utils/constants.ts","games/arte-ruim/StepRanking.tsx","games/arte-ruim/PhaseGallery.tsx","games/arte-ruim/components/DrawingGrade.tsx","games/arte-ruim/components/FinalGallery.tsx","games/arte-ruim/PhaseGameOver.tsx","games/arte-ruim/SessionArteRuim.tsx","games/arte-ruim/utils/achievements.ts","icons/MedalBrushIcon.tsx","icons/MedalLightBulbIcon.tsx","icons/MedalPersonIcon.tsx","icons/MedalQuestionMarkIcon.tsx","icons/MedalRobotIcon.tsx","icons/PaintingIcon.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useDevFeatures } from 'hooks/useDevFeatures';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockDrawing } from 'mock/drawing';\n// Icons\nimport { PanicIcon } from 'icons/PanicIcon';\n// Components\nimport { Step } from 'components/steps';\nimport { Card } from 'components/cards';\nimport { DrawingCanvas } from 'components/canvas';\nimport { ArteRuimTimerSound } from 'components/audio/ArteRuimTimerSound';\nimport { DevButton } from 'components/debug';\n\ntype StepDrawProps = {\n  secretCard: ArteRuimCard | PlainObject;\n  onSubmitDrawing: GenericFunction;\n  startDrawingTimer: boolean;\n} & AnnouncementProps;\n\nexport function StepDraw({ secretCard, onSubmitDrawing, startDrawingTimer, announcement }: StepDrawProps) {\n  const { translate } = useLanguage();\n  const { isDebugEnabled } = useDevFeatures();\n  const [lines, setLines] = useState<any>([]);\n  const [isTimesUp, setTimesUp] = useState(false);\n\n  const { seconds, start, isRunning } = useCountdown({\n    duration: 12,\n    autoStart: false,\n    onExpire: () => {\n      setTimesUp(true);\n      onSubmitDrawing({\n        drawing: JSON.stringify(lines),\n        cardId: secretCard.id,\n      });\n    },\n  });\n\n  useEffect(() => {\n    if (!isRunning && startDrawingTimer) {\n      start();\n    }\n  }, [startDrawingTimer, isRunning, start]);\n\n  const onMockDrawing = () =>\n    onSubmitDrawing({\n      drawing: JSON.stringify(mockDrawing()),\n      cardId: secretCard.id,\n    });\n\n  useMock(() => {\n    onSubmitDrawing({\n      drawing: JSON.stringify(mockDrawing()),\n      cardId: secretCard.id,\n    });\n  });\n\n  return (\n    <Step announcement={announcement}>\n      <Card\n        size=\"large\"\n        header={translate('Desenhe', 'Draw', isDebugEnabled ? secretCard?.id : undefined)}\n        footer={Array(secretCard?.level).fill('•').join('')}\n        className=\"a-draw-step__card\"\n        color=\"yellow\"\n      >\n        {isRunning && (\n          <>\n            {secretCard?.text}\n            <span className=\"a-draw-step__timer\">{seconds > 1 ? seconds - 2 : 0}</span>\n          </>\n        )}\n      </Card>\n      {isRunning && <ArteRuimTimerSound />}\n\n      <DevButton onClick={onMockDrawing}>Mock Drawing</DevButton>\n\n      {isTimesUp ? (\n        <PanicIcon style={{ background: 'white', width: '500px', padding: '2em' }} />\n      ) : (\n        <DrawingCanvas lines={lines} setLines={setLines} />\n      )}\n    </Step>\n  );\n}\n","import { Translate } from 'components/language';\nimport { PointsHighlight } from 'components/metrics/PointsHighlight';\nimport { TimeHighlight } from 'components/metrics/TimeHighlight';\nimport { Instruction } from 'components/text';\n\nexport const DrawInstruction = () => (\n  <Instruction>\n    <Translate\n      pt={\n        <>\n          Você terá <TimeHighlight>10</TimeHighlight> segundos para ler a sua carta e desenhá-la.\n          <br />\n          Aperte o botão quando estiver pronto!\n          <br />\n          <strong>Não vale usar números e letras.</strong>\n          <br />\n          Fique esperto porque o tempo começa assim que você apertar.\n        </>\n      }\n      en={\n        <>\n          You'll have <TimeHighlight>10</TimeHighlight> seconds to read and draw your card.\n          <br />\n          Press the button when you're ready!\n          <br />\n          <strong>You can NOT use numbers or letters.</strong>\n          <br />\n          Be aware of the timer! It starts as soon as you press the button.\n        </>\n      }\n    />\n  </Instruction>\n);\n\nexport const EvaluationRules = () => (\n  <Instruction>\n    <Translate\n      pt={\n        <>\n          Encontre os pares de desenho e carta clicando em uma carta ou desenho e em seguida clicando em seu\n          par.\n          <br />\n          Uma bandeirinha aparecerá no topo de cada desenho com a cor e letra da carta que você selecionou.\n          <br />\n          Quando encontrar todos os pares, envie sua avaliação!\n        </>\n      }\n      en={\n        <>\n          Find the pairs of artwork and card by clicking on a card or artwork then on its match.\n          <br />\n          A ribbon will show up on the artwork with the color and letter of the matching card.\n          <br />\n          When you're done, click the button to send your evaluation!\n        </>\n      }\n    />\n  </Instruction>\n);\n\nexport const GalleryRules = () => (\n  <Instruction>\n    <Translate\n      pt={\n        <>\n          Agora, mostraremos cada arte, o que os jogadores votaram e a resposta final.\n          <br />\n          Se você votou na expressão correta, você ganha <PointsHighlight type=\"positive\">\n            2\n          </PointsHighlight>{' '}\n          pontos.\n          <br />\n          Quando for a sua arte, você ganha <PointsHighlight type=\"positive\">1</PointsHighlight> ponto para\n          cada pessoa que votou corretamente.\n        </>\n      }\n      en={\n        <>\n          Now we show each art, what players voted, and the final answer.\n          <br />\n          You get <PointsHighlight type=\"positive\">2</PointsHighlight> points if you selected the right card.\n          <br />\n          When players selected the correct card for your artwork, you get{' '}\n          <PointsHighlight type=\"positive\">1</PointsHighlight> point for each match!\n        </>\n      }\n    />\n  </Instruction>\n);\n\nexport const ScoringRules = () => (\n  <Instruction>\n    <Translate\n      pt={\n        <>\n          Você ganha <PointsHighlight type=\"positive\">2</PointsHighlight> pontos para cada ligação correta\n          entre arte e expressão.\n          <br />\n          Para cada ligação correta que sua arte ganha, você recebe{' '}\n          <PointsHighlight type=\"positive\">1</PointsHighlight> ponto.\n        </>\n      }\n      en={\n        <>\n          You get <PointsHighlight type=\"positive\">2</PointsHighlight> points if you matched the right card\n          with artwork.\n          <br />\n          For you own artwork, you get <PointsHighlight type=\"positive\">1</PointsHighlight> point for each\n          correct match the other players done.\n        </>\n      }\n    />\n  </Instruction>\n);\n","import { useState } from 'react';\n// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitDrawingAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { PaintingIcon } from 'icons/PaintingIcon';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { RoundAnnouncement } from 'components/round';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { StepDraw } from './StepDraw';\nimport { DrawInstruction } from './components/TextBlobs';\n\nfunction PhaseDraw({ players, state, info }: PhaseProps) {\n  const { step, goToNextStep, setStep } = useStep(0);\n  const user = useUser(players, state);\n  const [startDrawingTimer, setStartDrawingTimer] = useState(false);\n\n  const onSubmitDrawing = useOnSubmitDrawingAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<PaintingIcon />}\n      title={<Translate pt=\"Desenhe!\" en=\"Draw!\" />}\n      buttonText={<Translate pt=\"Um dó, lá, si... vamos ir... já!\" en=\"Ready! Set! Go!\" />}\n      onClose={() => setStartDrawingTimer(true)}\n      currentRound={state?.round?.current}\n      withoutTimer\n      type=\"overlay\"\n    >\n      <DrawInstruction />\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.ARTE_RUIM.DRAW}>\n      <StepSwitcher\n        step={step}\n        conditions={[!user.isReady, !user.isReady]}\n        players={players}\n        waitingRoomInstruction={\n          <Translate\n            pt=\"Vamos aguardar enquanto os outros jogadores terminam seus desenhos!\"\n            en=\"Please wait while other players finish their artwork!\"\n          />\n        }\n      >\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state?.round}\n          onPressButton={goToNextStep}\n          buttonText=\" \"\n          time={5}\n          circleColor={info?.appearance?.color}\n        >\n          <Instruction contained>\n            <Translate\n              pt={`Essa rodada usará cartas de nível ${state?.level || '?'}`}\n              en={`This round uses cards of level ${state?.level || '?'}`}\n            />\n            {state.level === 4 && (\n              <Instruction contained>\n                <Translate\n                  pt=\"No nível 4, as cartas tem um ou dois temas comuns, então preste atenção nos detalhes\"\n                  en=\"On level 4, the cards have one or two common themes, so pay attention to details\"\n                />\n              </Instruction>\n            )}\n            {state.level === 5 && (\n              <Instruction contained>\n                <Translate\n                  pt=\"No nível 5, só existem duas cartas para todos\"\n                  en=\"On level 5, players draw one of two things only\"\n                />\n              </Instruction>\n            )}\n          </Instruction>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <StepDraw\n          secretCard={user.currentCard ?? {}}\n          onSubmitDrawing={onSubmitDrawing}\n          announcement={announcement}\n          startDrawingTimer={startDrawingTimer}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseDraw;\n","import { ARTE_RUIM_API } from 'services/adapters';\nimport { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\n\nexport function useOnSubmitDrawingAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: ARTE_RUIM_API.submitAction,\n    actionName: 'submit-drawing',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate(\n      'Acabou o tempo! Aguarde enquanto os outros participantes desenham',\n      \"Time's up! Wait for the other players to finish their art\"\n    ),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar o desenho',\n      'Oops, the application failed to send your art'\n    ),\n  });\n\n  return (payload: SubmitDrawingPayload) => {\n    request({\n      action: 'SUBMIT_DRAWING',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitVotingAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: ARTE_RUIM_API.submitAction,\n    actionName: 'submit-voting',\n    onSuccess: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: translate(\n      'Avaliação enviada! Agora aguarde os outros jogadores',\n      'Evaluation sent successfully! Wait for the other players'\n    ),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua avaliação',\n      'Oops, the application failed to send your evaluation'\n    ),\n  });\n\n  return (payload: SubmitVotingPayload) => {\n    request({\n      action: 'SUBMIT_VOTING',\n      ...payload,\n    });\n  };\n}\n","import { SEPARATOR } from 'utils/constants';\n\nexport function prepareVotes(votes: StringDictionary) {\n  return Object.entries(votes).reduce((acc: StringDictionary, [drawingEntryId, cardEntryId]) => {\n    const [, drawingId] = drawingEntryId.split(SEPARATOR);\n    const [, cardId] = cardEntryId.split(SEPARATOR);\n    acc[drawingId] = cardId;\n    return acc;\n  }, {});\n}\n","import clsx from 'clsx';\n// Utils\nimport { getEntryId } from 'utils/helpers';\n// Components\nimport { CanvasSVG } from 'components/canvas';\nimport { Ribbon } from 'components/ribbons';\n\ntype EvaluationAllDrawingsProps = {\n  drawings: ArteRuimDrawing[];\n  activeItem: string;\n  onActivateItem: GenericFunction;\n  votes: PlainObject;\n  canvasSize: number;\n  players: GamePlayers;\n};\n\nexport function EvaluationAllDrawings({\n  drawings,\n  activeItem,\n  onActivateItem,\n  votes,\n  canvasSize,\n  players,\n}: EvaluationAllDrawingsProps) {\n  const liButtonBaseClass = 'a-evaluation-all-drawings__li-drawing-button';\n\n  return (\n    <ul className=\"a-evaluation-all-drawings\">\n      {drawings?.map((drawingEntry) => {\n        const canvasEntryId = getEntryId(['drawing', drawingEntry.id]);\n        const isActive = activeItem === canvasEntryId;\n        const vote = votes[canvasEntryId];\n\n        return (\n          <li\n            key={`${canvasEntryId}-${drawingEntry.playerId}`}\n            className={clsx(liButtonBaseClass, isActive && `${liButtonBaseClass}--active`)}\n            onClick={() => onActivateItem(canvasEntryId)}\n          >\n            {votes?.[canvasEntryId] && <Ribbon label={vote.charAt(vote.length - 1)} />}\n            <CanvasSVG\n              drawing={drawingEntry.drawing}\n              className=\"a-evaluation-all-drawings__drawing\"\n              width={canvasSize}\n            />\n            <span className=\"a-evaluation-all-drawings__artist\">{players[drawingEntry.playerId].name}</span>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","// Ant Design Resources\nimport { WarningOutlined } from '@ant-design/icons';\n// Helpers\nimport { getColorFromLetter } from 'utils/helpers';\n// Components\nimport { Card } from 'components/cards';\nimport { ReactNode } from 'react';\n\ntype ArteRuimCardProps = {\n  /**\n   * The text of the card\n   */\n  text?: ReactNode;\n  /**\n   * The level of the card displayed as dots in the footer\n   */\n  level: number;\n  /**\n   * The header of the card. Default: X\n   */\n  header?: string;\n};\n\n/**\n * This is the Card component\n * @param props {object}\n * @returns\n */\nexport const ArteRuimCard = ({ text, level, header = 'X' }: ArteRuimCardProps) => {\n  return (\n    <Card\n      color={getColorFromLetter(header)}\n      header={header}\n      size=\"medium\"\n      footer={Array(level).fill('•').join('')}\n    >\n      {text ?? <WarningOutlined />}\n    </Card>\n  );\n};\n","import clsx from 'clsx';\nimport { useDevFeatures } from 'hooks/useDevFeatures';\n// Utils\nimport { LETTERS } from 'utils/constants';\nimport { getEntryId } from 'utils/helpers';\n// Components\nimport { ArteRuimCard as Card } from './Card';\n\ntype EvaluationAllCardsProps = {\n  cards: ArteRuimCard[];\n  activeItem: string;\n  onActivateItem: GenericFunction;\n  votes: PlainObject;\n};\n\nexport function EvaluationAllCards({ cards, activeItem, onActivateItem, votes }: EvaluationAllCardsProps) {\n  const { isDebugEnabled } = useDevFeatures();\n  const liButtonBaseClass = 'a-evaluation-all-cards__li-card-button';\n\n  return (\n    <ul className=\"a-evaluation-all-cards\">\n      {cards.map((cardEntry, index) => {\n        const letter = LETTERS[index];\n        const cardEntryId = getEntryId(['card', cardEntry.id, letter]);\n        const isActive = activeItem === cardEntryId;\n        const isUsed = Object.values(votes).includes(cardEntryId);\n\n        return (\n          <li\n            role=\"button\"\n            key={cardEntryId}\n            className={clsx(\n              liButtonBaseClass,\n              isActive && `${liButtonBaseClass}--active`,\n              isUsed && `${liButtonBaseClass}--used`\n            )}\n            onClick={() => onActivateItem(cardEntryId)}\n          >\n            <Card\n              text={cardEntry.text}\n              level={cardEntry.level}\n              header={isDebugEnabled ? cardEntry.id : letter}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import { useCallback, useEffect } from 'react';\nimport { useEffectOnce } from 'react-use';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\nimport { CloudUploadOutlined, ThunderboltOutlined } from '@ant-design/icons';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\nimport { useUser } from 'hooks/useUser';\nimport { useVotingMatch } from 'hooks/useVotingMatch';\n// Utils\nimport { LETTERS } from 'utils/constants';\nimport { getEntryId, shuffle } from 'utils/helpers';\nimport { prepareVotes } from './utils/helpers';\n// Components\nimport { Step } from 'components/steps';\nimport { PopoverRule } from 'components/rules';\nimport { CanvasResizer } from 'components/canvas';\nimport { Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { EvaluationAllDrawings } from './components/EvaluationAllDrawings';\nimport { EvaluationAllCards } from './components/EvaluationAllCards';\nimport { EvaluationRules } from './components/TextBlobs';\n\ntype StepEvaluationProps = {\n  drawings: ArteRuimDrawing[];\n  cards: ArteRuimCard[];\n  players: GamePlayers;\n  onSubmitVoting: GenericFunction;\n} & AnnouncementProps;\n\nexport function StepEvaluation({\n  drawings,\n  cards,\n  players,\n  onSubmitVoting,\n  announcement,\n}: StepEvaluationProps) {\n  const { isLoading } = useLoading();\n  const user = useUser(players);\n  const canvasWidth = useCardWidth(5, 16, 150, 500);\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n  const { votes, setVotes, activeItem, activateItem, resetVoting, isVotingComplete } = useVotingMatch(\n    'drawing',\n    true,\n    drawings.length || 2\n  );\n\n  const onGuessForMe = useCallback(() => {\n    const usedDrawings = Object.keys(votes);\n    const usedCards = Object.values(votes);\n    const drawingsKeys = drawings\n      .map((e: ArteRuimDrawing) => getEntryId(['drawing', e.id]))\n      .filter((key: string) => !usedDrawings.includes(key));\n    let cardsKeys = shuffle(\n      cards\n        .map((e: ArteRuimCard, index: number) => getEntryId(['card', e.id, LETTERS[index]]))\n        .filter((key: string) => !usedCards.includes(key))\n    );\n    // For level 5 specifically, if there are less cards than drawings\n    cardsKeys =\n      cardsKeys.length < drawingsKeys.length\n        ? Array(Math.ceil(drawingsKeys.length / cardsKeys.length))\n            .fill(cardsKeys)\n            .flat()\n        : cardsKeys;\n\n    const newVotes = { ...votes };\n    drawingsKeys.forEach((drawingKey: string, index: number) => {\n      if (!newVotes[drawingKey]) {\n        newVotes[drawingKey] = cardsKeys[index];\n      }\n    });\n    setVotes(newVotes);\n  }, [cards, drawings, votes, setVotes]);\n\n  useEffect(() => {\n    if (!canvasSize) {\n      // Round to increments of 50\n      setCanvasSize(Math.floor(canvasWidth / 50) * 50);\n    }\n  }, [canvasSize, canvasWidth]); // eslint-disable-line\n\n  const selectOwnDrawing = useCallback(() => {\n    const playersDrawing = (drawings ?? []).find((drawing: ArteRuimDrawing) => drawing.playerId === user.id);\n    if (playersDrawing && playersDrawing.level !== 5) {\n      const drawingKey = getEntryId(['drawing', playersDrawing.id]);\n      const cardIndex = (cards ?? []).findIndex((card: ArteRuimCard) => card.playerId === user.id);\n      const cardKey = getEntryId(['card', playersDrawing.id, LETTERS[cardIndex]]);\n      const vote = { [drawingKey]: cardKey };\n      return vote;\n    }\n    return {};\n  }, [user, drawings, cards]);\n\n  // Auto-select the players own drawing and word\n  useEffectOnce(() => {\n    const selection = selectOwnDrawing();\n    if (selection) {\n      setVotes((s: any) => ({ ...s, ...selection }));\n    }\n  });\n\n  useMock(() => {\n    onGuessForMe();\n  }, []);\n\n  return (\n    <Step className=\"a-evaluation-step\" announcement={announcement} fullWidth>\n      <PopoverRule content={<EvaluationRules />} />\n      <CanvasResizer />\n      <Title>\n        <Translate pt=\"Adivinhação\" en=\"Match the Pairs\" />\n      </Title>\n\n      <Space className=\"space-container\" align=\"center\" wrap>\n        <Button\n          type=\"default\"\n          icon={<ThunderboltOutlined />}\n          onClick={() => resetVoting(selectOwnDrawing())}\n          disabled={isLoading}\n        >\n          <Translate pt=\"Limpar seleções\" en=\"Clear selections\" />\n        </Button>\n        <Button\n          type=\"default\"\n          icon={<ThunderboltOutlined />}\n          onClick={onGuessForMe}\n          disabled={isLoading || Object.values(votes).length === drawings.length}\n        >\n          <Translate pt=\"Chutar restantes\" en=\"Guess for me\" />\n        </Button>\n        <Button\n          type=\"primary\"\n          onClick={() => onSubmitVoting({ votes: prepareVotes(votes) })}\n          disabled={isLoading || !isVotingComplete}\n          icon={<CloudUploadOutlined />}\n          loading={isLoading}\n        >\n          <Translate pt=\"Enviar sua avaliação\" en=\"Send evaluation\" />\n        </Button>\n      </Space>\n\n      <EvaluationAllDrawings\n        drawings={drawings ?? []}\n        activeItem={activeItem}\n        onActivateItem={activateItem}\n        votes={votes}\n        canvasSize={canvasSize}\n        players={players}\n      />\n\n      <EvaluationAllCards\n        cards={cards ?? []}\n        activeItem={activeItem}\n        onActivateItem={activateItem}\n        votes={votes}\n      />\n    </Step>\n  );\n}\n","import { useMemo } from 'react';\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\n// Components\nimport { CanvasSVG } from 'components/canvas';\nimport { IconAvatar } from 'components/avatars/IconAvatar';\nimport { AnimatedLoaderIcon } from 'icons/AnimatedLoaderIcon';\nimport { AvatarName } from 'components/avatars';\n\ntype EvaluatedDrawingsProps = {\n  votes?: StringDictionary;\n  cards: ArteRuimCard[];\n  drawings: ArteRuimDrawing[];\n  players: GamePlayers;\n};\n\n/**\n * Displays drawings in the waiting room after evaluation\n * @param props\n * @returns\n */\nexport function EvaluatedDrawings({ votes, cards, drawings, players }: EvaluatedDrawingsProps) {\n  const [canvasSize] = useGlobalState('canvasSize');\n\n  const cardsDict = useMemo(\n    () =>\n      cards.reduce((acc: Record<string, ArteRuimCard>, card) => {\n        acc[card.id] = card;\n        return acc;\n      }, {}),\n    [cards]\n  );\n\n  const drawingsDict = useMemo(\n    () =>\n      drawings.reduce((acc: Record<string, ArteRuimDrawing>, drawing) => {\n        acc[drawing.id] = drawing;\n        return acc;\n      }, {}),\n    [drawings]\n  );\n\n  if (!votes) {\n    return (\n      <div className=\"a-evaluated-drawings\">\n        <IconAvatar icon={<AnimatedLoaderIcon />} />\n      </div>\n    );\n  }\n  const cSize = Math.min(canvasSize * 0.6, 2000);\n\n  return (\n    <ul className=\"a-evaluated-drawings\">\n      {Object.keys(votes)\n        .sort()\n        .map((drawingKey: string) => {\n          const drawing = drawingsDict[drawingKey] as ArteRuimDrawing;\n          const card = cardsDict[votes[drawingKey]] as ArteRuimCard;\n\n          return (\n            <li className=\"a-evaluated-drawings__item\" key={`${drawing.id}-${card.id}-${card.playerId}`}>\n              <div className=\"a-evaluated-drawings__card\" style={{ maxWidth: `${cSize}px` }}>\n                <AvatarName player={players[drawing.playerId]} size=\"small\" />\n              </div>\n              <CanvasSVG\n                drawing={drawing.drawing}\n                width={cSize}\n                className=\"a-evaluation-all-drawings__drawing\"\n              />\n              <div className=\"a-evaluated-drawings__card\" style={{ maxWidth: `${cSize}px` }}>\n                {card.text}\n              </div>\n            </li>\n          );\n        })}\n    </ul>\n  );\n}\n","// Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitVotingAPIRequest } from './utils/api-requests';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { EvaluateIcon } from 'icons/EvaluateIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { StepEvaluation } from './StepEvaluation';\nimport { EvaluationRules } from './components/TextBlobs';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { EvaluatedDrawings } from './components/EvaluatedDrawings';\nimport { Translate } from 'components/language';\n\nfunction EvaluationPhase({ players, state, info }: PhaseProps) {\n  const { step, setStep } = useStep(0);\n  const user = useUser(players, state);\n\n  const onSubmitVoting = useOnSubmitVotingAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<EvaluateIcon />}\n      title={<Translate pt=\"Adivinhação\" en=\"Match the Pairs\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <EvaluationRules />\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.ARTE_RUIM.EVALUATION}>\n      <StepSwitcher\n        step={step}\n        conditions={[!user.isReady, !user.isReady]}\n        players={players}\n        waitingRoomInstruction={\n          <Translate\n            pt=\"Vamos aguardar enquanto os outros jogadores terminam de avaliar!\"\n            en=\"Please wait while other players finish their evaluations!\"\n          />\n        }\n        waitingRoomContent={\n          <EvaluatedDrawings\n            cards={state.cards}\n            drawings={state.drawings}\n            votes={user?.votes}\n            players={players}\n          />\n        }\n      >\n        {/*Step 0 */}\n        <StepEvaluation\n          drawings={state.drawings}\n          cards={state.cards}\n          players={players}\n          onSubmitVoting={onSubmitVoting}\n          announcement={announcement}\n        />\n\n        <></>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default EvaluationPhase;\n","// Components\nimport { AvatarEntry } from 'components/avatars';\nimport { Translate } from 'components/language';\n\ntype GalleryWindowCreditsProps = {\n  artist: GamePlayer;\n};\n\nexport function GalleryWindowCredits({ artist }: GalleryWindowCreditsProps) {\n  return (\n    <div className=\"a-gallery__credits\">\n      <div className=\"a-gallery__label\">\n        <Translate pt=\"Artista\" en=\"Artist\" />\n      </div>\n      <span className=\"a-gallery__artist-name\">\n        <AvatarEntry player={artist} />\n      </span>\n    </div>\n  );\n}\n","import { orderBy } from 'lodash';\n// Ant Design Resources\nimport { Avatar as AntAvatar } from 'antd';\nimport { CrownFilled, MessageFilled } from '@ant-design/icons';\n// Utils\nimport { getPlayersFromIds } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\n\ntype GalleryWindowGuessesProps = {\n  playersSay: PlayersSay;\n  players: GamePlayers;\n  cards: ArteRuimCard[];\n  windowCardId: string;\n  artistColor: string;\n};\n\nexport function GalleryWindowGuesses({\n  playersSay,\n  players,\n  cards,\n  windowCardId,\n  artistColor,\n}: GalleryWindowGuessesProps) {\n  const entries = orderBy(\n    Object.entries(playersSay).map(([cardId, playersIds]) => {\n      return {\n        cardId,\n        card: cards.find((i) => i.id === cardId),\n        playersIds,\n        count: playersIds.length,\n        isCorrect: windowCardId === cardId,\n      };\n    }),\n    ['isCorrect', 'count', 'card.text'],\n    ['desc', 'desc', 'asc']\n  );\n\n  return (\n    <div className=\"a-gallery__guesses\">\n      <div className=\"a-gallery__label\">\n        <Translate pt=\"Participantes votaram\" en=\"Players voted\" />\n      </div>\n      {entries.map((entry, index) => {\n        return (\n          <div key={`guess-${entry.cardId}-${index}`} className=\"a-gallery__guess\">\n            <div\n              className=\"a-gallery__speech-bubble\"\n              style={entry.isCorrect ? { backgroundColor: artistColor, color: 'white' } : {}}\n            >\n              {entry.isCorrect ? (\n                <CrownFilled className=\"a-gallery__speech-bubble-icon\" style={{ color: 'white' }} />\n              ) : (\n                <MessageFilled className=\"a-gallery__speech-bubble-icon\" />\n              )}\n              {entry.card?.text}\n            </div>\n            <div className=\"a-gallery__players\">\n              <AntAvatar.Group>\n                {entry.playersIds.map((playerId) => (\n                  <Avatar\n                    id={players[playerId].avatarId}\n                    key={`guess-avatar-${players[playerId].avatarId}`}\n                  />\n                ))}\n              </AntAvatar.Group>\n              <span className=\"a-gallery__players-names\">\n                {getPlayersFromIds(entry.playersIds, players, true).join(', ')}\n              </span>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Avatar as AntAvatar, Typography } from 'antd';\nimport { CrownFilled } from '@ant-design/icons';\n// Utils\nimport { getPlayersFromIds } from 'utils/helpers';\n// Components\nimport { Translate } from 'components/language';\nimport { Avatar } from 'components/avatars';\nimport { StarPoints } from 'components/points';\nimport { GarbageIcon } from 'icons/GarbageIcon';\nimport { IconAvatar } from 'components/avatars/IconAvatar';\n\ntype GalleryWindowResultProps = {\n  playerArtist: GamePlayer;\n  correctAnswerId: string;\n  correctAnswerText: string;\n  playersPoints?: NumberDictionary;\n  playersSay: PlayersSay;\n  players: GamePlayers;\n};\n\nexport function GalleryWindowResult({\n  playerArtist,\n  correctAnswerId,\n  correctAnswerText,\n  playersPoints,\n  playersSay,\n  players,\n}: GalleryWindowResultProps) {\n  const correctGuesses = Object.values(playersSay?.[correctAnswerId] ?? {});\n\n  return (\n    <div className=\"a-gallery__result\">\n      <div className=\"a-gallery__label\">\n        <Translate pt=\"E o título correto da obra é\" en=\"And the masterpiece title is\" />\n      </div>\n      <div className=\"a-gallery__speech-bubble\">\n        <CrownFilled className=\"a-gallery__speech-bubble-icon\" />\n        {correctAnswerText}\n      </div>\n      {correctGuesses.length ? (\n        <>\n          <div className=\"a-gallery__players\">\n            <AntAvatar.Group>\n              {correctGuesses.map((playerId) => {\n                return <Avatar key={`correct-guess-avatar-${playerId}`} id={players[playerId].avatarId} />;\n              })}\n            </AntAvatar.Group>\n            <StarPoints quantity={2} keyPrefix={`guessers-points-${playerArtist.id}`} />\n            <span className=\"a-gallery__players-names\">\n              {getPlayersFromIds(correctGuesses, players, true).join(', ')}\n            </span>\n          </div>\n          <div className=\"a-gallery__artist-points\">\n            <Avatar id={playerArtist.avatarId} />{' '}\n            <StarPoints\n              quantity={playersPoints?.[playerArtist.id]}\n              keyPrefix={`artist-points-${playerArtist.id}`}\n            />{' '}\n            <span className=\"a-gallery__players-names\">{playerArtist.name}</span>\n          </div>\n        </>\n      ) : (\n        <Typography.Text className=\"a-gallery__no-wins\">\n          <IconAvatar icon={<GarbageIcon />} size=\"large\" shape=\"square\" />\n          <Translate\n            pt=\"Nossa, ninguém acertou. Esse desenho deve ter sido muito ruim.\"\n            en=\"Wow, nobody got it. It must have been a very crappy drawing. Shame...\"\n          />\n        </Typography.Text>\n      )}\n    </div>\n  );\n}\n","// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Utils\nimport { WINDOW_DURATION } from './utils/constants';\nimport { getAvatarColorById } from 'utils/helpers';\n// Components\nimport { CanvasSVG } from 'components/canvas';\nimport { Translate } from 'components/language';\nimport { PopoverRule } from 'components/rules';\nimport { SlideShow } from 'components/slide-show';\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\nimport { GalleryWindowCredits } from './components/GalleryWindowCredits';\nimport { GalleryWindowGuesses } from './components/GalleryWindowGuesses';\nimport { GalleryWindowResult } from './components/GalleryWindowResult';\nimport { ScoringRules } from './components/TextBlobs';\n\ntype StepGalleryProps = {\n  gallery: ArteRuimWindow[];\n  players: GamePlayers;\n  cards: ArteRuimCard[];\n  activeIndex: number;\n  setActiveIndex: GenericFunction;\n  setStep: GenericFunction;\n  isFirstGalleryRunThrough: boolean;\n};\n\nexport function StepGallery({\n  gallery,\n  players,\n  cards,\n  activeIndex,\n  setActiveIndex,\n  setStep,\n  isFirstGalleryRunThrough,\n}: StepGalleryProps) {\n  useTemporarilyHidePlayersBar();\n\n  const canvasWidth = useCardWidth(2, 16, 200, 500);\n\n  const { drawing, artistId, id, text, playersPoints, playersSay } = gallery[activeIndex];\n\n  const playerArtist = players[artistId];\n  const currentColor = getAvatarColorById(playerArtist.avatarId);\n\n  return (\n    <Step fullWidth>\n      <Title size=\"small\">\n        <Translate pt=\"Galeria de Arte\" en=\"Art Gallery\" />\n      </Title>\n\n      <PopoverRule content={<ScoringRules />} />\n\n      <SlideShow\n        players={players}\n        length={gallery.length}\n        activeIndex={activeIndex}\n        setActiveIndex={setActiveIndex}\n        setStep={setStep}\n        disableControls={isFirstGalleryRunThrough}\n        barColor={currentColor}\n        windowDuration={WINDOW_DURATION}\n        leftClassName=\"a-gallery__canvas\"\n        rightClassName=\"a-gallery__info\"\n      >\n        <CanvasSVG drawing={drawing} width={canvasWidth} className=\"a-gallery__drawing\" />\n\n        <>\n          <GalleryWindowCredits artist={playerArtist} />\n\n          <GalleryWindowGuesses\n            players={players}\n            playersSay={playersSay}\n            cards={cards}\n            windowCardId={id}\n            artistColor={currentColor}\n          />\n\n          <GalleryWindowResult\n            playerArtist={playerArtist}\n            correctAnswerId={id}\n            correctAnswerText={text}\n            playersPoints={playersPoints}\n            playersSay={playersSay}\n            players={players}\n          />\n        </>\n      </SlideShow>\n    </Step>\n  );\n}\n","export const WINDOW_DURATION = 10;\n","// Ant Design Resources\nimport { Button } from 'antd';\nimport { PictureOutlined } from '@ant-design/icons';\n// Components\nimport { RoundsLeftInstruction } from 'components/text';\nimport { StepRankingWrapper } from 'components/ranking';\nimport { PopoverRule } from 'components/rules';\nimport { Translate } from 'components/language';\nimport { VIPNextPhaseButton } from 'components/vip';\nimport { ScoringRules } from './components/TextBlobs';\n\ntype StepRankingProps = {\n  players: GamePlayers;\n  ranking: GameRanking;\n  isGameOver: boolean;\n  round: GameRound;\n  goToPreviousStep: GenericFunction;\n  setActiveIndex: GenericFunction;\n};\n\nexport function StepRanking({\n  players,\n  ranking,\n  isGameOver,\n  round,\n  goToPreviousStep,\n  setActiveIndex,\n}: StepRankingProps) {\n  return (\n    <StepRankingWrapper\n      players={players}\n      ranking={ranking}\n      gainedPointsDescriptions={[\n        <Translate pt=\"Votos corretos\" en=\"Correct guesses\" />,\n        <Translate\n          pt=\"Votos corretos em seu desenho por outros jogadores\"\n          en=\"Correct guesses on your drawing by other players\"\n        />,\n      ]}\n    >\n      <PopoverRule content={<ScoringRules />} />\n\n      {!isGameOver && <RoundsLeftInstruction round={round} />}\n\n      <Button\n        size=\"large\"\n        onClick={() => {\n          goToPreviousStep();\n          setActiveIndex(0);\n        }}\n        icon={<PictureOutlined />}\n      >\n        <Translate pt=\"Ver Galeria Novamente\" en=\"See Gallery Again\" />\n      </Button>\n\n      <VIPNextPhaseButton round={round} />\n    </StepRankingWrapper>\n  );\n}\n","// Hooks\nimport { useSlideShow } from 'hooks/useSlideShow';\nimport { useStep } from 'hooks/useStep';\n// Resources and Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { PictureIcon } from 'icons/PictureIcon';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { GalleryRules } from './components/TextBlobs';\nimport { StepGallery } from './StepGallery';\nimport { StepRanking } from './StepRanking';\nimport { Translate } from 'components/language';\n\nfunction PhaseGallery({ players, state, info, meta }: PhaseProps) {\n  const { step, goToNextStep, goToPreviousStep, setStep } = useStep(0);\n  const { activeIndex, setActiveIndex, isFirstGalleryRunThrough } = useSlideShow(state.gallery.length);\n\n  const isGameOver = meta.options?.shortGame\n    ? state.round.current === 5\n    : Object.values(players).some((player) => player.score > 50);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ARTE_RUIM.GALLERY}\n      className=\"a-gallery-phase\"\n    >\n      <StepSwitcher step={step} players={players}>\n        {/*Step 0 */}\n        <PhaseAnnouncement\n          icon={<PictureIcon />}\n          title={<Translate pt=\"Galeria de Arte\" en=\"Art Gallery\" />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          unskippable\n          type=\"block\"\n        >\n          <GalleryRules />\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepGallery\n          gallery={state.gallery}\n          players={players}\n          cards={state.cards}\n          activeIndex={activeIndex}\n          setActiveIndex={setActiveIndex}\n          setStep={setStep}\n          isFirstGalleryRunThrough={isFirstGalleryRunThrough}\n        />\n\n        {/* Step 2 */}\n        <StepRanking\n          players={players}\n          ranking={state.ranking}\n          isGameOver={isGameOver}\n          round={state.round}\n          goToPreviousStep={goToPreviousStep}\n          setActiveIndex={setActiveIndex}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseGallery;\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Avatar, Tooltip } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n\nconst GRADES = ['F', 'D', 'D+', 'C-', 'C', 'C+', 'B-', 'B', 'B+', 'A-', 'A', 'A+'];\n\ntype DrawingGradeProps = {\n  value: number;\n};\n\nexport const DrawingGrade = ({ value }: DrawingGradeProps) => {\n  const { translate } = useLanguage();\n  const grade = GRADES[Math.floor(value / 0.084)];\n\n  const baseClass = 'a-drawing-grade';\n\n  return (\n    <Tooltip\n      title={translate(\n        `Nota baseada em quantos acertos o desenho teve: ${value * 100}%`,\n        `Grade based on the number of correct guesses the artwork got: ${value * 100}%`\n      )}\n    >\n      <Avatar className={clsx(baseClass, `${baseClass}--${grade[0]}`)}>{grade}</Avatar>\n    </Tooltip>\n  );\n};\n","// Components\nimport { CanvasSVG } from 'components/canvas';\nimport { Translate } from 'components/language';\nimport { DrawingGrade } from './DrawingGrade';\n\ntype FinalGalleryProps = {\n  drawings: ArteRuimDrawing[];\n  players: GamePlayers;\n};\n\nexport function FinalGallery({ drawings, players }: FinalGalleryProps) {\n  return (\n    <ul className=\"a-game-over__gallery\">\n      {drawings.map((entry: ArteRuimDrawing) => {\n        const successRate = entry.successRate ?? 0;\n\n        return (\n          <li className=\"a-game-over__gallery-item\" key={entry.drawing} style={{ width: '200px' }}>\n            <CanvasSVG drawing={entry.drawing} width={200} className=\"a-game-over__gallery-canvas\" />\n            <span className=\"a-game-over__credits\">\n              \"{entry.text}\" <Translate pt=\"por\" en=\"by\" /> {players[entry.playerId].name}\n            </span>\n            <DrawingGrade value={successRate > 1 ? successRate / 100 : successRate} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","// Utils\nimport { achievementsReference } from './utils/achievements';\n// Icons\nimport { TrophyIcon } from 'icons/TrophyIcon';\n// Components\nimport { GameOverWrapper } from 'components/game-over';\nimport { Achievements } from 'components/general/Achievements';\nimport { Translate } from 'components/language';\nimport { FinalGallery } from './components/FinalGallery';\n\nfunction PhaseGameOver({ state, players, info }: PhaseProps) {\n  return (\n    <GameOverWrapper\n      info={info}\n      state={state}\n      players={players}\n      announcementIcon={<TrophyIcon />}\n      rateWidgetCustomText={<Translate pt=\"Alguma sugestão de carta?\" en=\"Any card suggestions?\" />}\n    >\n      <Achievements players={players} achievements={state.achievements} reference={achievementsReference} />\n\n      <FinalGallery players={players} drawings={state.drawings} />\n    </GameOverWrapper>\n  );\n}\n\nexport default PhaseGameOver;\n","import { ConfigProvider } from 'antd';\n// Constants\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport PhaseDraw from './PhaseDraw';\nimport PhaseEvaluation from './PhaseEvaluation';\nimport PhaseGallery from './PhaseGallery';\nimport PhaseGameOver from './PhaseGameOver';\n// Sass\nimport './arte-ruim.scss';\n\nfunction getActiveComponent(phase: string) {\n  switch (phase) {\n    case PHASES.DEFAULT.LOBBY:\n      return PhaseLobby;\n    case PHASES.DEFAULT.RULES:\n      return PhaseRules;\n    case PHASES.DEFAULT.SETUP:\n      return PhaseSetup;\n    case PHASES.ARTE_RUIM.DRAW:\n      return PhaseDraw;\n    case PHASES.ARTE_RUIM.EVALUATION:\n      return PhaseEvaluation;\n    case PHASES.ARTE_RUIM.GALLERY:\n      return PhaseGallery;\n    case PHASES.DEFAULT.GAME_OVER:\n      return PhaseGameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionArteRuim() {\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorPrimary: THEME_COLORS.WOOD,\n          colorLink: THEME_COLORS.WOOD,\n        },\n      }}\n    >\n      <Session gameCollection={GAME_COLLECTION.ARTE_RUIM} getActiveComponent={getActiveComponent} />\n    </ConfigProvider>\n  );\n}\n\nexport default SessionArteRuim;\n","import { MedalBrushIcon } from 'icons/MedalBrushIcon';\nimport { MedalLightBulbIcon } from 'icons/MedalLightBulbIcon';\nimport { MedalPersonIcon } from 'icons/MedalPersonIcon';\nimport { MedalQuestionMarkIcon } from 'icons/MedalQuestionMarkIcon';\nimport { MedalRobotIcon } from 'icons/MedalRobotIcon';\n\nexport const achievementsReference: AchievementReference = {\n  BEST_ARTIST: {\n    Icon: MedalBrushIcon,\n    title: {\n      pt: 'Melhor Artista',\n      en: 'Best Artist',\n    },\n    description: {\n      pt: 'Todos os jogadores acertaram unanimemente seu desenho mais vezes',\n      en: 'Got players to guess your drawing unanimously the most',\n    },\n  },\n  WORST_ARTIST: {\n    Icon: MedalQuestionMarkIcon,\n    title: {\n      pt: 'Artista Mais Não Convencional',\n      en: 'Most Unconventional Artist',\n    },\n    description: {\n      pt: 'Todos os jogadores NÃO acertaram unanimemente seu desenho mais vezes',\n      en: 'Got players to miss your drawing unanimously the most',\n    },\n  },\n  SOLITARY_WINNER: {\n    Icon: MedalPersonIcon,\n    title: {\n      pt: 'Adivinhador Solitário',\n      en: 'Best Solitary Guesser',\n    },\n    description: {\n      pt: 'Foi o único que acertou o desenho mais vezes',\n      en: 'Was the only one to get the drawing the most',\n    },\n  },\n  SOLITARY_LOSER: {\n    Icon: MedalLightBulbIcon,\n    title: {\n      pt: 'Mais Diferentão',\n      en: 'Most Unique Guesser',\n    },\n    description: {\n      pt: 'Foi o único que errou o desenho mais vezes',\n      en: 'Was the only one to get the drawing the most',\n    },\n  },\n  TABLE_VOTES: {\n    Icon: MedalRobotIcon,\n    title: {\n      pt: 'Melhor Votador Pra Mesa',\n      en: 'Best Table Voter',\n    },\n    description: {\n      pt: 'Votou nas cartas extras que não eram de nenhum jogador mais vezes',\n      en: \"Voted for extra cards that didn't belong to any player the most\",\n    },\n  },\n};\n\nexport default achievementsReference;\n","export function MedalBrushIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffe07d\"\n        d=\"M186.32 499l-22.17-41.81a10.4 10.4 0 00-12.22-5.08L106.68 466a10.38 10.38 0 01-12.64-13.9l79.78-192.62 111.05 46-79.79 192.61a10.39 10.39 0 01-18.77.89z\"\n      ></path>\n      <path\n        fill=\"#ffd064\"\n        d=\"M226.47 281.29L155.93 451.7a10.39 10.39 0 018.26 5.47L186.32 499a10.39 10.39 0 0018.77-.89l79.78-192.62z\"\n      ></path>\n      <path\n        fill=\"#ffe07d\"\n        d=\"M325.55 499l22.18-41.81a10.37 10.37 0 0112.2-5.08L405.18 466a10.39 10.39 0 0012.65-13.9l-79.79-192.63-111 46 79.79 192.62a10.39 10.39 0 0018.77.89z\"\n      ></path>\n      <path\n        fill=\"#ffd064\"\n        d=\"M417.83 452.09l-79.79-192.61-58.19 24.1 70.56 170.35a10.42 10.42 0 019.53-1.82L405.18 466a10.39 10.39 0 0012.65-13.9z\"\n      ></path>\n      <path\n        fill=\"#e8ae4d\"\n        d=\"M275.93 14.53a32.23 32.23 0 0029.59 5.53 32.23 32.23 0 0137.41 14.47 32.25 32.25 0 0025.61 15.85 32.24 32.24 0 0129.61 27 32.24 32.24 0 0018.14 24 32.24 32.24 0 0117.86 35.87 32.23 32.23 0 008.24 29 32.24 32.24 0 013.7 39.9 32.21 32.21 0 00-2.78 30 32.25 32.25 0 01-11 38.54 32.21 32.21 0 00-13.38 26.9 32.24 32.24 0 01-24.14 32 32.22 32.22 0 00-22.25 20.28A32.27 32.27 0 01338.45 375a32.24 32.24 0 00-28.08 10.87 32.24 32.24 0 01-39.39 7.37 32.19 32.19 0 00-30.1 0 32.25 32.25 0 01-39.39-7.37A32.22 32.22 0 00173.41 375a32.24 32.24 0 01-34.06-21.1 32.22 32.22 0 00-22.25-20.28 32.23 32.23 0 01-24.15-32 32.19 32.19 0 00-13.42-27 32.25 32.25 0 01-11-38.54 32.21 32.21 0 00-2.78-30 32.24 32.24 0 013.7-39.9 32.2 32.2 0 008.23-29 32.27 32.27 0 0117.9-35.8 32.23 32.23 0 0018.16-24 32.22 32.22 0 0129.61-27 32.24 32.24 0 0025.58-15.85 32.22 32.22 0 0137.36-14.47 32.2 32.2 0 0029.64-5.53 32.26 32.26 0 0140.09 0z\"\n      ></path>\n      <circle cx=\"255.93\" cy=\"202.23\" r=\"142.21\" fill=\"#ffe07d\"></circle>\n      <path\n        fill=\"#ffd064\"\n        d=\"M255.93 60a142.49 142.49 0 00-31.67 3.54 142.24 142.24 0 010 277.32A142.21 142.21 0 10255.93 60z\"\n      ></path>\n      <path d=\"M452.36 210.23a39.57 39.57 0 00-4.56-49.18 24.71 24.71 0 01-6.32-22.22 39.59 39.59 0 00-22-44.22 24.71 24.71 0 01-13.94-18.43 39.57 39.57 0 00-36.5-33.28 24.71 24.71 0 01-19.64-12.16 39.57 39.57 0 00-46.07-17.84 24.73 24.73 0 01-22.71-4.25 39.57 39.57 0 00-49.38 0 24.7 24.7 0 01-22.7 4.25 39.55 39.55 0 00-46.06 17.84 24.75 24.75 0 01-19.65 12.16 39.58 39.58 0 00-36.5 33.28A24.7 24.7 0 0192.4 94.61a39.59 39.59 0 00-22 44.22 24.71 24.71 0 01-6.32 22.22 39.57 39.57 0 00-4.56 49.18 24.67 24.67 0 012.13 23 39.57 39.57 0 0013.53 47.51 24.72 24.72 0 0110.29 20.68 39.56 39.56 0 0029.77 39.41 24.81 24.81 0 0113.21 8.63l-41.34 99.76a17.89 17.89 0 0021.82 23.95l45.25-13.89a2.89 2.89 0 013.39 1.41l22.17 41.81a17.88 17.88 0 0032.27-1.5l43.07-104h1.71l43.07 104a17.88 17.88 0 0032.32 1.54l22.17-41.81a2.9 2.9 0 013.4-1.41l45.24 13.89a17.88 17.88 0 0021.77-23.94l-41.34-99.77a24.84 24.84 0 0113.22-8.63 39.56 39.56 0 0029.76-39.41 24.78 24.78 0 0110.3-20.68 39.57 39.57 0 0013.52-47.51 24.73 24.73 0 012.13-23zm-254.2 285a2.89 2.89 0 01-3.76 1.57 2.83 2.83 0 01-1.45-1.32l-22.17-41.81a17.93 17.93 0 00-21-8.72l-45.24 13.89a2.89 2.89 0 01-3.61-3.84l36.67-88.51a39.57 39.57 0 0036.66 15.95 24.74 24.74 0 0121.54 8.34A39.37 39.37 0 00236.36 403zm209.23-36.4L362.15 445a17.91 17.91 0 00-21 8.72l-22.22 41.75a2.87 2.87 0 01-5.2-.25L275.51 403a39.53 39.53 0 0040.52-12.27 24.74 24.74 0 0121.54-8.35 39.49 39.49 0 0036.66-15.94l36.7 88.56a2.88 2.88 0 01-1.56 3.78 2.85 2.85 0 01-1.95.09zM439.79 202a39.75 39.75 0 00-3.42 37 24.6 24.6 0 01-8.44 29.55 39.75 39.75 0 00-16.54 33.22 24.61 24.61 0 01-18.46 24.54A39.73 39.73 0 00368.36 345v.08a40.3 40.3 0 00-2.85 6.19 24.65 24.65 0 01-26.15 16.19 39.71 39.71 0 00-34.6 13.4 24.63 24.63 0 01-30.22 5.65 40.06 40.06 0 00-10.93-3.84h-.09a39.59 39.59 0 00-15.11 0h-.06a40.08 40.08 0 00-10.93 3.85 24.63 24.63 0 01-30.23-5.65 39.69 39.69 0 00-34.59-13.4 24.63 24.63 0 01-26.14-16.19 40.4 40.4 0 00-2.87-6.19V345a39.73 39.73 0 00-24.51-18.72 24.62 24.62 0 01-18.53-24.54 39.72 39.72 0 00-16.62-33.19A24.64 24.64 0 0175.5 239a39.69 39.69 0 00-3.43-37 24.65 24.65 0 012.86-30.59 39.73 39.73 0 0010.17-35.69 24.63 24.63 0 0113.69-27.53 39.72 39.72 0 0022.38-29.61 24.62 24.62 0 0122.76-20.72 39.65 39.65 0 0031.5-19.53 24.65 24.65 0 0128.67-11.11 39.69 39.69 0 0036.48-6.82 24.64 24.64 0 0130.75 0 39.71 39.71 0 0036.49 6.82 24.63 24.63 0 0128.67 11.11 39.67 39.67 0 0031.55 19.53 24.62 24.62 0 0122.69 20.72 39.73 39.73 0 0022.37 29.61 24.62 24.62 0 0113.7 27.53 39.76 39.76 0 0010.13 35.69 24.63 24.63 0 012.86 30.59z\"></path>\n      <path d=\"M113.93 192.13a7.5 7.5 0 008.36-6.53c8.23-67.31 65.72-118.07 133.64-118.07a134.77 134.77 0 01133.71 118.14 7.48 7.48 0 007.43 6.58 5.8 5.8 0 00.92-.05 7.52 7.52 0 006.54-8.36C395.35 109 331.46 52.53 255.93 52.53S116.56 109 107.35 183.77a7.52 7.52 0 006.53 8.36zm284.05 20.13a7.53 7.53 0 00-8.35 6.53 134.72 134.72 0 01-267.39.06 7.5 7.5 0 10-14.89 1.83c9.2 74.83 73.08 131.25 148.58 131.25s139.41-56.45 148.58-131.32a7.48 7.48 0 00-6.49-8.35z\"></path>\n      <path\n        fill=\"#ffd064\"\n        d=\"M273.08 215.75l-21-20.95c-13.48 14.17-26.26 28.65-34.56 39.38l15.56 16.6c10.86-8.36 25.57-21.32 40-35z\"\n      ></path>\n      <path\n        fill=\"#ffda2d\"\n        d=\"M227.26 272.59a45.18 45.18 0 01-63.9 0c5.39-2.6 9-2.44 15.4-8.79 7.36-7.36 9.59-16.2 16.55-23.17 9.44-9.44 21.37-10.59 32 0a22.59 22.59 0 01-.05 31.96z\"\n      ></path>\n      <path\n        fill=\"#e8ae4d\"\n        d=\"M347.83 120.06c5.88 5.89-21.54 42.85-61.25 82.56-4.38 4.38-8.92 8.8-13.48 13.14l-21-21c4.35-4.58 8.77-9.11 13.14-13.49 39.74-39.67 76.69-67.09 82.59-61.21z\"\n      ></path>\n      <path d=\"M207.79 285a3.77 3.77 0 11-3.77-3.76 3.76 3.76 0 013.77 3.76z\"></path>\n      <path d=\"M159.65 271.85a3.78 3.78 0 001 3.4 48.75 48.75 0 0025.72 13.53 3.77 3.77 0 001.37-7.41 41 41 0 01-17.34-7.6c.89-.47 5.14-1.46 11-7.31 4.06-4.07 6.62-8.43 9.11-12.64 2.24-3.82 4.35-7.43 7.45-10.52 8.19-8.21 17.72-8.92 26.63 0a18.86 18.86 0 010 26.63 42.26 42.26 0 01-6.89 5.56 3.77 3.77 0 004.07 6.34 49.55 49.55 0 008.15-6.58 26.48 26.48 0 007.36-22.94c16.24-12.76 37-32 52-47 19.32-19.33 36.41-38.64 48.09-54.38 5.67-7.66 19.92-26.73 13.16-33.5s-25.83 7.47-33.5 13.17c-15.74 11.67-35.05 28.75-54.38 48.08-14.7 14.71-33.65 35-46.46 51.23-8.08-1.78-16.51 1.08-23.51 8.09-3.78 3.78-6.24 8-8.62 12s-4.55 7.75-7.93 11.14c-5.55 5.54-8.33 5.22-14.17 8a3.78 3.78 0 00-2.31 2.71zm63.78-39c7.36-9.17 17.55-20.72 28.78-32.63l15.49 15.49c-12 11.29-23.61 21.54-32.9 29a26.38 26.38 0 00-4.87-6.71 33.14 33.14 0 00-6.5-5.17zm44.5-48.85c17.87-17.87 35.94-34 50.87-45.35 16.86-12.84 23.75-15.14 26-15.52-.38 2.23-2.67 9.12-15.51 26-11.36 14.87-27.5 32.96-45.36 50.87-3.48 3.48-7.1 7-10.76 10.54l-15.77-15.76c3.53-3.7 7.05-7.31 10.53-10.78z\"></path>\n    </svg>\n  );\n}\n","export function MedalLightBulbIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffe07d\"\n        d=\"M186.3 499l-22.2-41.8a10.41 10.41 0 00-12.2-5.1L106.7 466a10.4 10.4 0 01-13-6.9 10.51 10.51 0 01.3-7l79.8-192.6 111.1 46-79.8 192.6a10.41 10.41 0 01-13.6 5.6 10 10 0 01-5.2-4.7z\"\n      ></path>\n      <path\n        fill=\"#ffd064\"\n        d=\"M226.4 281.3l-70.5 170.4a10.55 10.55 0 018.3 5.5l22.1 41.8a10.4 10.4 0 0018.8-.9l79.8-192.6z\"\n      ></path>\n      <path\n        fill=\"#ffe07d\"\n        d=\"M325.5 499l22.2-41.8a10.41 10.41 0 0112.2-5.1l45.2 13.9a10.4 10.4 0 0013-6.9 10.51 10.51 0 00-.3-7L338 259.5l-111 46 79.8 192.6a10.41 10.41 0 0013.6 5.6 10.15 10.15 0 005.1-4.7z\"\n      ></path>\n      <path\n        fill=\"#ffd064\"\n        d=\"M417.8 452.1L338 259.5l-58.2 24.1L350.4 454a10.46 10.46 0 019.5-1.8l45.2 13.9a10.4 10.4 0 0013-6.9 10.77 10.77 0 00-.3-7.1z\"\n      ></path>\n      <path\n        fill=\"#e8ae4d\"\n        d=\"M275.9 14.5a32.14 32.14 0 0029.6 5.5 32.14 32.14 0 0137.4 14.5 32.14 32.14 0 0025.6 15.8 32.23 32.23 0 0129.6 27 32.22 32.22 0 0018.1 24 32.26 32.26 0 0117.9 35.9 32.51 32.51 0 008.2 29 32.16 32.16 0 013.7 39.9 32.31 32.31 0 00-2.8 30 32.2 32.2 0 01-11 38.5 32.44 32.44 0 00-13.4 26.9 32.19 32.19 0 01-24.1 32 32.3 32.3 0 00-22.2 20.3 32.2 32.2 0 01-34.1 21.1 32.23 32.23 0 00-28.1 10.9 32.25 32.25 0 01-39.4 7.4 32.08 32.08 0 00-30.1 0 32.27 32.27 0 01-39.4-7.4 32.5 32.5 0 00-28.1-10.9 32.32 32.32 0 01-34.1-21.1 32.3 32.3 0 00-22.2-20.3 32.39 32.39 0 01-24.2-32 32.24 32.24 0 00-13.4-27 32.2 32.2 0 01-11-38.5 32.31 32.31 0 00-2.8-30 32.16 32.16 0 013.7-39.9 32 32 0 008.2-29 32.25 32.25 0 0117.9-35.8 32.58 32.58 0 0018.2-24 32.23 32.23 0 0129.6-27 32.25 32.25 0 0025.6-15.9 32.39 32.39 0 0137.4-14.5 32.14 32.14 0 0029.6-5.5 32.44 32.44 0 0140.1.1z\"\n      ></path>\n      <circle cx=\"255.9\" cy=\"202.2\" r=\"142.2\" fill=\"#ffe07d\"></circle>\n      <path\n        fill=\"#ffd064\"\n        d=\"M255.9 60a146.64 146.64 0 00-31.7 3.5 142.24 142.24 0 010 277.3c76.6 17.5 152.8-30.5 170.3-107a142.08 142.08 0 00-107-170.2 140.52 140.52 0 00-31.6-3.6z\"\n      ></path>\n      <path d=\"M452.3 210.2a39.44 39.44 0 00-4.6-49.2 24.79 24.79 0 01-6.3-22.2 39.48 39.48 0 00-22-44.2 24.81 24.81 0 01-13.9-18.4A39.58 39.58 0 00369 42.9a24.56 24.56 0 01-19.6-12.2 39.47 39.47 0 00-46.1-17.8 25 25 0 01-22.7-4.2 39.68 39.68 0 00-49.4 0 24.44 24.44 0 01-22.7 4.2 39.77 39.77 0 00-46.1 17.8 24.71 24.71 0 01-19.6 12.2 39.58 39.58 0 00-36.5 33.3 24.46 24.46 0 01-13.9 18.4 39.54 39.54 0 00-22 44.2 24.79 24.79 0 01-6.3 22.2 39.69 39.69 0 00-4.6 49.2 24.45 24.45 0 012.1 23 39.64 39.64 0 0013.5 47.5 24.86 24.86 0 0110.3 20.7 39.6 39.6 0 0029.8 39.4 25.09 25.09 0 0113.2 8.6l-41.3 99.8a17.87 17.87 0 009.7 23.4 18.28 18.28 0 0012.2.6l45.2-13.9a3 3 0 013.4 1.4l22.2 41.8a17.88 17.88 0 0032.3-1.5l43.1-104h1.7L300 501a17.92 17.92 0 0023.4 9.7 18.67 18.67 0 009-8.1l22.2-41.8a3 3 0 013.4-1.4l45.2 13.9a17.82 17.82 0 0021.7-23.9l-41.3-99.8a24.51 24.51 0 0113.2-8.6 39.6 39.6 0 0029.8-39.4 24.86 24.86 0 0110.3-20.7 39.55 39.55 0 0013.5-47.5 24.79 24.79 0 011.9-23.2zm-254.2 285a2.91 2.91 0 01-3.8 1.6 3.74 3.74 0 01-1.5-1.3l-22.2-41.8a17.84 17.84 0 00-21-8.7l-45.2 13.9a2.81 2.81 0 01-3.6-1.9 2.74 2.74 0 01.1-2l36.7-88.5a39.54 39.54 0 0036.7 16 24.9 24.9 0 0121.5 8.3 39.37 39.37 0 0040.6 12.2zm209.3-36.4l-45.2-13.9a17.91 17.91 0 00-21 8.7l-22.3 41.9a2.92 2.92 0 01-3.9 1.2 2.43 2.43 0 01-1.3-1.5L275.5 403a39.51 39.51 0 0040.5-12.3 24.81 24.81 0 0121.5-8.4 39.78 39.78 0 0036.7-15.9l36.7 88.6a2.91 2.91 0 01-1.6 3.8 2.5 2.5 0 01-1.9 0zM439.8 202a39.58 39.58 0 00-3.4 37 24.65 24.65 0 01-8.4 29.5 39.43 39.43 0 00-16.5 33.2 24.49 24.49 0 01-18.5 24.5 40 40 0 00-24.6 18.7v.1a43.87 43.87 0 00-2.9 6.2 24.65 24.65 0 01-26.1 16.2 39.85 39.85 0 00-34.6 13.4 24.49 24.49 0 01-30.2 5.6 38.17 38.17 0 00-10.9-3.8h-.1a38.38 38.38 0 00-15.1 0h-.1a35.56 35.56 0 00-10.9 3.9 24.6 24.6 0 01-30.2-5.6 39.85 39.85 0 00-34.6-13.4 24.58 24.58 0 01-26.1-16.2 38.66 38.66 0 00-2.9-6.2v-.1a39.79 39.79 0 00-24.5-18.7 24.49 24.49 0 01-18.5-24.5 39.78 39.78 0 00-16.6-33.2 24.43 24.43 0 01-8.4-29.5 39.58 39.58 0 00-3.4-37 24.62 24.62 0 012.9-30.6 39.72 39.72 0 0010.2-35.7 24.67 24.67 0 0113.7-27.5 39.71 39.71 0 0022.4-29.6A24.49 24.49 0 01144.2 58a39.93 39.93 0 0031.6-19.5 24.65 24.65 0 0128.7-11.1 40 40 0 0036.5-6.8 24.66 24.66 0 0130.8 0 39.62 39.62 0 0036.5 6.8A24.78 24.78 0 01337 38.5 39.75 39.75 0 00368.5 58a24.69 24.69 0 0122.7 20.7 39.71 39.71 0 0022.4 29.6 24.73 24.73 0 0113.7 27.5 40 40 0 0010.1 35.7 25.1 25.1 0 012.4 30.5z\"></path>\n      <path d=\"M113.9 192.1a7.59 7.59 0 008.4-6.5c8.2-67.3 65.7-118.1 133.6-118.1a134.77 134.77 0 01133.7 118.1 7.46 7.46 0 007.4 6.6 2.77 2.77 0 00.9-.1 7.48 7.48 0 006.5-8.4c-9.1-74.7-73-131.2-148.5-131.2S116.5 109 107.3 183.8a7.44 7.44 0 006.6 8.3zM398 212.3a7.59 7.59 0 00-8.4 6.5 134.73 134.73 0 01-267.4 0 7.51 7.51 0 10-14.9 1.9c9.2 74.8 73.1 131.2 148.6 131.2s139.4-56.5 148.6-131.3a7.44 7.44 0 00-6.5-8.3z\"></path>\n      <path\n        fill=\"#ffd064\"\n        d=\"M302.9 213.77c-13.75 13.76-12 41.51-12 41.51h-69.78s1.47-27.75-12-41.51a71 71 0 1193.82 0z\"\n      ></path>\n      <path\n        fill=\"#e8ae4d\"\n        d=\"M292.83 277.14a6.61 6.61 0 01-6.63 6.63h-60.66a6.6 6.6 0 01-6.63-6.63 6.6 6.6 0 016.63-6.64h60.41a6.82 6.82 0 016.88 6.64zm-9.09 27.5a6.59 6.59 0 01-6.63 6.63h-42.48a6.6 6.6 0 01-6.64-6.63 6.61 6.61 0 016.64-6.63h42.48a6.6 6.6 0 016.63 6.63z\"\n      ></path>\n      <path\n        fill=\"#210b20\"\n        d=\"M306.58 216.23a75.84 75.84 0 10-100.93.74c12 12 10.8 37.57 10.8 37.82a5.89 5.89 0 001.23 3.44 4.85 4.85 0 003.44 1.47h69.5a4.85 4.85 0 003.44-1.47 4.63 4.63 0 001.23-3.44c0-.25-1.23-25.79 10.8-37.82.25-.25.49-.5.49-.74zm-6.87-6.14a2.53 2.53 0 00-1 1.23c-10.8 11.54-12.52 30.45-12.77 39.29h-60.16c-.24-9.08-2.21-28.73-13.75-40.27a66.53 66.53 0 11110.27-50.11 66 66 0 01-22.59 49.86z\"\n      ></path>\n      <path\n        fill=\"#210b20\"\n        d=\"M255.75 103.75a4.67 4.67 0 100 9.33 49.89 49.89 0 0149.85 49.86 4.67 4.67 0 009.33 0 59.21 59.21 0 00-59.18-59.19zm41.75 173.39a11.27 11.27 0 00-11.3-11.3h-60.66a11.3 11.3 0 100 22.59h60.41a11.32 11.32 0 0011.55-11.29zm-11.55 2h-60.41a2 2 0 110-3.93h60.41a1.94 1.94 0 012 2c.21 1.15-.77 1.89-2 1.89zm-8.84 14.2h-42.48a11.3 11.3 0 100 22.6h42.48a11.27 11.27 0 0011.3-11.3 11.43 11.43 0 00-11.3-11.3zm0 13.27h-42.48a2 2 0 110-3.93h42.48a1.94 1.94 0 012 2 1.81 1.81 0 01-2 1.93z\"\n      ></path>\n    </svg>\n  );\n}\n","export function MedalPersonIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffe07d\"\n        d=\"M186.32 499l-22.17-41.81a10.4 10.4 0 00-12.22-5.08L106.68 466a10.38 10.38 0 01-12.64-13.9l79.78-192.62 111.05 46-79.79 192.61a10.39 10.39 0 01-18.77.89z\"\n      ></path>\n      <path\n        fill=\"#ffd064\"\n        d=\"M226.47 281.29L155.93 451.7a10.39 10.39 0 018.26 5.47L186.32 499a10.39 10.39 0 0018.77-.89l79.78-192.62z\"\n      ></path>\n      <path\n        fill=\"#ffe07d\"\n        d=\"M325.55 499l22.18-41.81a10.37 10.37 0 0112.2-5.08L405.18 466a10.39 10.39 0 0012.65-13.9l-79.79-192.63-111 46 79.79 192.62a10.39 10.39 0 0018.77.89z\"\n      ></path>\n      <path\n        fill=\"#ffd064\"\n        d=\"M417.83 452.09l-79.79-192.61-58.19 24.1 70.56 170.35a10.42 10.42 0 019.53-1.82L405.18 466a10.39 10.39 0 0012.65-13.9z\"\n      ></path>\n      <path\n        fill=\"#e8ae4d\"\n        d=\"M275.93 14.53a32.23 32.23 0 0029.59 5.53 32.23 32.23 0 0137.41 14.47 32.25 32.25 0 0025.61 15.85 32.24 32.24 0 0129.61 27 32.24 32.24 0 0018.14 24 32.24 32.24 0 0117.86 35.87 32.23 32.23 0 008.24 29 32.24 32.24 0 013.7 39.9 32.21 32.21 0 00-2.78 30 32.25 32.25 0 01-11 38.54 32.21 32.21 0 00-13.38 26.9 32.24 32.24 0 01-24.14 32 32.22 32.22 0 00-22.25 20.28A32.27 32.27 0 01338.45 375a32.24 32.24 0 00-28.08 10.87 32.24 32.24 0 01-39.39 7.37 32.19 32.19 0 00-30.1 0 32.25 32.25 0 01-39.39-7.37A32.22 32.22 0 00173.41 375a32.24 32.24 0 01-34.06-21.1 32.22 32.22 0 00-22.25-20.28 32.23 32.23 0 01-24.15-32 32.19 32.19 0 00-13.42-27 32.25 32.25 0 01-11-38.54 32.21 32.21 0 00-2.78-30 32.24 32.24 0 013.7-39.9 32.2 32.2 0 008.23-29 32.27 32.27 0 0117.9-35.8 32.23 32.23 0 0018.16-24 32.22 32.22 0 0129.61-27 32.24 32.24 0 0025.58-15.85 32.22 32.22 0 0137.36-14.47 32.2 32.2 0 0029.64-5.53 32.26 32.26 0 0140.09 0z\"\n      ></path>\n      <circle cx=\"255.93\" cy=\"202.23\" r=\"142.21\" fill=\"#ffe07d\"></circle>\n      <path\n        fill=\"#ffd064\"\n        d=\"M255.93 60a142.49 142.49 0 00-31.67 3.54 142.24 142.24 0 010 277.32A142.21 142.21 0 10255.93 60z\"\n      ></path>\n      <path d=\"M452.36 210.23a39.57 39.57 0 00-4.56-49.18 24.71 24.71 0 01-6.32-22.22 39.59 39.59 0 00-22-44.22 24.71 24.71 0 01-13.94-18.43 39.57 39.57 0 00-36.5-33.28 24.71 24.71 0 01-19.64-12.16 39.57 39.57 0 00-46.07-17.84 24.73 24.73 0 01-22.71-4.25 39.57 39.57 0 00-49.38 0 24.7 24.7 0 01-22.7 4.25 39.55 39.55 0 00-46.06 17.84 24.75 24.75 0 01-19.65 12.16 39.58 39.58 0 00-36.5 33.28A24.7 24.7 0 0192.4 94.61a39.59 39.59 0 00-22 44.22 24.71 24.71 0 01-6.32 22.22 39.57 39.57 0 00-4.56 49.18 24.67 24.67 0 012.13 23 39.57 39.57 0 0013.53 47.51 24.72 24.72 0 0110.29 20.68 39.56 39.56 0 0029.77 39.41 24.81 24.81 0 0113.21 8.63l-41.34 99.76a17.89 17.89 0 0021.82 23.95l45.25-13.89a2.89 2.89 0 013.39 1.41l22.17 41.81a17.88 17.88 0 0032.27-1.5l43.07-104h1.71l43.07 104a17.88 17.88 0 0032.32 1.54l22.17-41.81a2.9 2.9 0 013.4-1.41l45.24 13.89a17.88 17.88 0 0021.77-23.94l-41.34-99.77a24.84 24.84 0 0113.22-8.63 39.56 39.56 0 0029.76-39.41 24.78 24.78 0 0110.3-20.68 39.57 39.57 0 0013.52-47.51 24.73 24.73 0 012.13-23zm-254.2 285a2.89 2.89 0 01-3.76 1.57 2.83 2.83 0 01-1.45-1.32l-22.17-41.81a17.93 17.93 0 00-21-8.72l-45.24 13.89a2.89 2.89 0 01-3.61-3.84l36.67-88.51a39.57 39.57 0 0036.66 15.95 24.74 24.74 0 0121.54 8.34A39.37 39.37 0 00236.36 403zm209.23-36.4L362.15 445a17.91 17.91 0 00-21 8.72l-22.22 41.75a2.87 2.87 0 01-5.2-.25L275.51 403a39.53 39.53 0 0040.52-12.27 24.74 24.74 0 0121.54-8.35 39.49 39.49 0 0036.66-15.94l36.7 88.56a2.88 2.88 0 01-1.56 3.78 2.85 2.85 0 01-1.95.09zM439.79 202a39.75 39.75 0 00-3.42 37 24.6 24.6 0 01-8.44 29.55 39.75 39.75 0 00-16.54 33.22 24.61 24.61 0 01-18.46 24.54A39.73 39.73 0 00368.36 345v.08a40.3 40.3 0 00-2.85 6.19 24.65 24.65 0 01-26.15 16.19 39.71 39.71 0 00-34.6 13.4 24.63 24.63 0 01-30.22 5.65 40.06 40.06 0 00-10.93-3.84h-.09a39.59 39.59 0 00-15.11 0h-.06a40.08 40.08 0 00-10.93 3.85 24.63 24.63 0 01-30.23-5.65 39.69 39.69 0 00-34.59-13.4 24.63 24.63 0 01-26.14-16.19 40.4 40.4 0 00-2.87-6.19V345a39.73 39.73 0 00-24.51-18.72 24.62 24.62 0 01-18.53-24.54 39.72 39.72 0 00-16.62-33.19A24.64 24.64 0 0175.5 239a39.69 39.69 0 00-3.43-37 24.65 24.65 0 012.86-30.59 39.73 39.73 0 0010.17-35.69 24.63 24.63 0 0113.69-27.53 39.72 39.72 0 0022.38-29.61 24.62 24.62 0 0122.76-20.72 39.65 39.65 0 0031.5-19.53 24.65 24.65 0 0128.67-11.11 39.69 39.69 0 0036.48-6.82 24.64 24.64 0 0130.75 0 39.71 39.71 0 0036.49 6.82 24.63 24.63 0 0128.67 11.11 39.67 39.67 0 0031.55 19.53 24.62 24.62 0 0122.69 20.72 39.73 39.73 0 0022.37 29.61 24.62 24.62 0 0113.7 27.53 39.76 39.76 0 0010.13 35.69 24.63 24.63 0 012.86 30.59z\"></path>\n      <path d=\"M113.93 192.13a7.5 7.5 0 008.36-6.53c8.23-67.31 65.72-118.07 133.64-118.07a134.77 134.77 0 01133.71 118.14 7.48 7.48 0 007.43 6.58 5.8 5.8 0 00.92-.05 7.52 7.52 0 006.54-8.36C395.35 109 331.46 52.53 255.93 52.53S116.56 109 107.35 183.77a7.52 7.52 0 006.53 8.36zm284.05 20.13a7.53 7.53 0 00-8.35 6.53 134.72 134.72 0 01-267.39.06 7.5 7.5 0 10-14.89 1.83c9.2 74.83 73.08 131.25 148.58 131.25s139.41-56.45 148.58-131.32a7.48 7.48 0 00-6.49-8.35z\"></path>\n      <path\n        fill=\"#e8ae4d\"\n        d=\"M316.12 272.42c12.18 7.07 26.14 15.17 36.14 26.35a143.32 143.32 0 01-192.64 0c10-11.18 24-19.28 36.14-26.35 14.95-8.69 27.89-16.2 27.89-25.61a32.89 32.89 0 00-12.15-26.26c-7.14-1.18-10.87-14.58-10.87-21.93a10.22 10.22 0 013.05-8.63c-5.17-16.78-5.08-40.08 6.67-56.56 9.18-12.9 24.32-19.75 43.79-19.81a41.59 41.59 0 0140.09 8.44c8.75 7.88 22 27.1 13.92 67.75 1.69 1.18 3.31 3.64 3.31 8.81 0 7.35-3.74 20.78-10.91 21.93a32.62 32.62 0 00-12.3 26.26c-.01 9.41 12.92 16.92 27.87 25.61z\"\n      ></path>\n      <path d=\"M352.26 305a6.2 6.2 0 01-4.65-2.08c-9.34-10.44-22.76-18.23-34.6-25.11-16.65-9.67-31-18-31-31a39 39 0 0114.66-31.14 6.32 6.32 0 012.9-1.27c1.78-.29 5.66-8.37 5.66-15.78 0-2.94-.69-3.73-.69-3.74a6.12 6.12 0 01-2.49-6.29c7.53-37.69-4.28-55-12-61.9a35.53 35.53 0 00-34-7.14 6.64 6.64 0 01-1.87.3c-17.37.05-30.77 6-38.74 17.19-11.1 15.57-10.06 37.27-5.79 51.12a6.23 6.23 0 01-1.63 6.32 4 4 0 00-1.19 3.37v.77c0 7.36 3.88 15.47 5.66 15.78a6.54 6.54 0 012.9 1.31A39.33 39.33 0 01229.86 247c0 12.84-14.34 21.18-31 30.83-11.88 6.9-25.31 14.69-34.65 25.13a6.23 6.23 0 11-9.6-7.93l.32-.37c10.65-11.92 25-20.24 37.64-27.59 11.64-6.75 24.78-14.4 24.78-20.21a26.85 26.85 0 00-8.86-20.59c-10.37-3.45-14-19.56-14.15-27.23a16.53 16.53 0 012.42-10.35c-4.27-16.6-4.42-40.76 8.45-58.83 10.25-14.39 26.8-22.13 47.91-22.42a48.1 48.1 0 0145.17 10c9.49 8.55 23.94 28.89 16.5 70.51 1.59 2.34 2.83 5.75 2.83 10.73 0 7.54-3.63 24.18-14.22 27.61a26.63 26.63 0 00-9 20.44c0 6 13.16 13.6 24.77 20.34 12.67 7.36 27 15.69 37.66 27.6a6.24 6.24 0 01-4.57 10.33z\"></path>\n    </svg>\n  );\n}\n","export function MedalQuestionMarkIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffe07d\"\n        d=\"M186.32 499l-22.17-41.81a10.4 10.4 0 00-12.22-5.08L106.68 466a10.38 10.38 0 01-12.64-13.9l79.78-192.62 111.05 46-79.79 192.61a10.39 10.39 0 01-18.77.89z\"\n      ></path>\n      <path\n        fill=\"#ffd064\"\n        d=\"M226.47 281.29L155.93 451.7a10.39 10.39 0 018.26 5.47L186.32 499a10.39 10.39 0 0018.77-.89l79.78-192.62z\"\n      ></path>\n      <path\n        fill=\"#ffe07d\"\n        d=\"M325.55 499l22.18-41.81a10.37 10.37 0 0112.2-5.08L405.18 466a10.39 10.39 0 0012.65-13.9l-79.79-192.63-111 46 79.79 192.62a10.39 10.39 0 0018.77.89z\"\n      ></path>\n      <path\n        fill=\"#ffd064\"\n        d=\"M417.83 452.09l-79.79-192.61-58.19 24.1 70.56 170.35a10.42 10.42 0 019.53-1.82L405.18 466a10.39 10.39 0 0012.65-13.9z\"\n      ></path>\n      <path\n        fill=\"#e8ae4d\"\n        d=\"M275.93 14.53a32.23 32.23 0 0029.59 5.53 32.23 32.23 0 0137.41 14.47 32.25 32.25 0 0025.61 15.85 32.24 32.24 0 0129.61 27 32.24 32.24 0 0018.14 24 32.24 32.24 0 0117.86 35.87 32.23 32.23 0 008.24 29 32.24 32.24 0 013.7 39.9 32.21 32.21 0 00-2.78 30 32.25 32.25 0 01-11 38.54 32.21 32.21 0 00-13.38 26.9 32.24 32.24 0 01-24.14 32 32.22 32.22 0 00-22.25 20.28A32.27 32.27 0 01338.45 375a32.24 32.24 0 00-28.08 10.87 32.24 32.24 0 01-39.39 7.37 32.19 32.19 0 00-30.1 0 32.25 32.25 0 01-39.39-7.37A32.22 32.22 0 00173.41 375a32.24 32.24 0 01-34.06-21.1 32.22 32.22 0 00-22.25-20.28 32.23 32.23 0 01-24.15-32 32.19 32.19 0 00-13.42-27 32.25 32.25 0 01-11-38.54 32.21 32.21 0 00-2.78-30 32.24 32.24 0 013.7-39.9 32.2 32.2 0 008.23-29 32.27 32.27 0 0117.9-35.8 32.23 32.23 0 0018.16-24 32.22 32.22 0 0129.61-27 32.24 32.24 0 0025.58-15.85 32.22 32.22 0 0137.36-14.47 32.2 32.2 0 0029.64-5.53 32.26 32.26 0 0140.09 0z\"\n      ></path>\n      <circle cx=\"255.93\" cy=\"202.23\" r=\"142.21\" fill=\"#ffe07d\"></circle>\n      <path\n        fill=\"#ffd064\"\n        d=\"M255.93 60a142.49 142.49 0 00-31.67 3.54 142.24 142.24 0 010 277.32A142.21 142.21 0 10255.93 60z\"\n      ></path>\n      <path d=\"M452.36 210.23a39.57 39.57 0 00-4.56-49.18 24.71 24.71 0 01-6.32-22.22 39.59 39.59 0 00-22-44.22 24.71 24.71 0 01-13.94-18.43 39.57 39.57 0 00-36.5-33.28 24.71 24.71 0 01-19.64-12.16 39.57 39.57 0 00-46.07-17.84 24.73 24.73 0 01-22.71-4.25 39.57 39.57 0 00-49.38 0 24.7 24.7 0 01-22.7 4.25 39.55 39.55 0 00-46.06 17.84 24.75 24.75 0 01-19.65 12.16 39.58 39.58 0 00-36.5 33.28A24.7 24.7 0 0192.4 94.61a39.59 39.59 0 00-22 44.22 24.71 24.71 0 01-6.32 22.22 39.57 39.57 0 00-4.56 49.18 24.67 24.67 0 012.13 23 39.57 39.57 0 0013.53 47.51 24.72 24.72 0 0110.29 20.68 39.56 39.56 0 0029.77 39.41 24.81 24.81 0 0113.21 8.63l-41.34 99.76a17.89 17.89 0 0021.82 23.95l45.25-13.89a2.89 2.89 0 013.39 1.41l22.17 41.81a17.88 17.88 0 0032.27-1.5l43.07-104h1.71l43.07 104a17.88 17.88 0 0032.32 1.54l22.17-41.81a2.9 2.9 0 013.4-1.41l45.24 13.89a17.88 17.88 0 0021.77-23.94l-41.34-99.77a24.84 24.84 0 0113.22-8.63 39.56 39.56 0 0029.76-39.41 24.78 24.78 0 0110.3-20.68 39.57 39.57 0 0013.52-47.51 24.73 24.73 0 012.13-23zm-254.2 285a2.89 2.89 0 01-3.76 1.57 2.83 2.83 0 01-1.45-1.32l-22.17-41.81a17.93 17.93 0 00-21-8.72l-45.24 13.89a2.89 2.89 0 01-3.61-3.84l36.67-88.51a39.57 39.57 0 0036.66 15.95 24.74 24.74 0 0121.54 8.34A39.37 39.37 0 00236.36 403zm209.23-36.4L362.15 445a17.91 17.91 0 00-21 8.72l-22.22 41.75a2.87 2.87 0 01-5.2-.25L275.51 403a39.53 39.53 0 0040.52-12.27 24.74 24.74 0 0121.54-8.35 39.49 39.49 0 0036.66-15.94l36.7 88.56a2.88 2.88 0 01-1.56 3.78 2.85 2.85 0 01-1.95.09zM439.79 202a39.75 39.75 0 00-3.42 37 24.6 24.6 0 01-8.44 29.55 39.75 39.75 0 00-16.54 33.22 24.61 24.61 0 01-18.46 24.54A39.73 39.73 0 00368.36 345v.08a40.3 40.3 0 00-2.85 6.19 24.65 24.65 0 01-26.15 16.19 39.71 39.71 0 00-34.6 13.4 24.63 24.63 0 01-30.22 5.65 40.06 40.06 0 00-10.93-3.84h-.09a39.59 39.59 0 00-15.11 0h-.06a40.08 40.08 0 00-10.93 3.85 24.63 24.63 0 01-30.23-5.65 39.69 39.69 0 00-34.59-13.4 24.63 24.63 0 01-26.14-16.19 40.4 40.4 0 00-2.87-6.19V345a39.73 39.73 0 00-24.51-18.72 24.62 24.62 0 01-18.53-24.54 39.72 39.72 0 00-16.62-33.19A24.64 24.64 0 0175.5 239a39.69 39.69 0 00-3.43-37 24.65 24.65 0 012.86-30.59 39.73 39.73 0 0010.17-35.69 24.63 24.63 0 0113.69-27.53 39.72 39.72 0 0022.38-29.61 24.62 24.62 0 0122.76-20.72 39.65 39.65 0 0031.5-19.53 24.65 24.65 0 0128.67-11.11 39.69 39.69 0 0036.48-6.82 24.64 24.64 0 0130.75 0 39.71 39.71 0 0036.49 6.82 24.63 24.63 0 0128.67 11.11 39.67 39.67 0 0031.55 19.53 24.62 24.62 0 0122.69 20.72 39.73 39.73 0 0022.37 29.61 24.62 24.62 0 0113.7 27.53 39.76 39.76 0 0010.13 35.69 24.63 24.63 0 012.86 30.59z\"></path>\n      <path d=\"M113.93 192.13a7.5 7.5 0 008.36-6.53c8.23-67.31 65.72-118.07 133.64-118.07a134.77 134.77 0 01133.71 118.14 7.48 7.48 0 007.43 6.58 5.8 5.8 0 00.92-.05 7.52 7.52 0 006.54-8.36C395.35 109 331.46 52.53 255.93 52.53S116.56 109 107.35 183.77a7.52 7.52 0 006.53 8.36zm284.05 20.13a7.53 7.53 0 00-8.35 6.53 134.72 134.72 0 01-267.39.06 7.5 7.5 0 10-14.89 1.83c9.2 74.83 73.08 131.25 148.58 131.25s139.41-56.45 148.58-131.32a7.48 7.48 0 00-6.49-8.35z\"></path>\n      <path\n        fill=\"#e8ae4d\"\n        d=\"M210.51 159.51c-9.91.09-17.17-9.32-14.09-18.53a59.26 59.26 0 0116-24.64 61.37 61.37 0 0185.32 1.31c11.08 10.84 17.56 24.76 18.24 39.21a59.88 59.88 0 01-33.71 56.36 22.58 22.58 0 00-12.94 20.18 14.39 14.39 0 01-14.55 14.24h-.07a14.42 14.42 0 01-14.57-14.24c0-19.37 11.12-36.87 29-45.67a31.4 31.4 0 0017.68-29.56c-.72-15.2-15-29.15-30.55-29.85a32.31 32.31 0 00-23.7 8.65 31.23 31.23 0 00-8.25 12.59 14.73 14.73 0 01-13.77 9.95z\"\n      ></path>\n      <ellipse cx=\"254.68\" cy=\"290.44\" fill=\"#e8ae4d\" rx=\"14.59\" ry=\"14.27\"></ellipse>\n      <path d=\"M254.82 254.28c-11.83 0-21.42-9.36-21.42-20.88 0-21.89 12.54-41.67 32.74-51.6a24.77 24.77 0 0013.93-23.32c-.55-11.77-12-23-24.06-23.52a25.5 25.5 0 00-18.7 6.81 24.54 24.54 0 00-6.51 9.92 21.55 21.55 0 01-20.14 14.45h-.21a21.7 21.7 0 01-17.32-8.59 20.13 20.13 0 01-3.08-18.65 66.51 66.51 0 0117.71-27.37 68.3 68.3 0 0194.82 1.47c12.28 12 19.46 27.49 20.22 43.6a66.49 66.49 0 01-37.43 62.59 16 16 0 00-9.2 14.25 21.13 21.13 0 01-21.36 20.88zm0-132.63h1.85c19.18.86 36.13 17.43 37 36.18a38 38 0 01-21.39 35.79c-15.59 7.67-25.27 22.89-25.27 39.74a7.81 7.81 0 0015.61 0 29.18 29.18 0 0116.67-26.12 53.22 53.22 0 0030-50.11c-.6-12.8-6.38-25.16-16.26-34.82a54.48 54.48 0 00-75.82-1.21 52.52 52.52 0 00-14.28 21.9 7.23 7.23 0 001.12 6.66 7.88 7.88 0 006.37 3.17h.08a8 8 0 007.4-5.44 38.33 38.33 0 0110-15.26 39.08 39.08 0 0126.85-10.52zm-.03 189.69a20.91 20.91 0 1121.38-20.9 21.16 21.16 0 01-21.38 20.9zm0-28.53a7.63 7.63 0 107.81 7.63 7.74 7.74 0 00-7.81-7.63z\"></path>\n    </svg>\n  );\n}\n","export function MedalRobotIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffe07d\"\n        d=\"M186.3 499l-22.2-41.8a10.41 10.41 0 00-12.2-5.1L106.7 466a10.4 10.4 0 01-13-6.9 10.51 10.51 0 01.3-7l79.8-192.6 111.1 46-79.8 192.6a10.41 10.41 0 01-13.6 5.6 10 10 0 01-5.2-4.7z\"\n      ></path>\n      <path\n        fill=\"#ffd064\"\n        d=\"M226.4 281.3l-70.5 170.4a10.55 10.55 0 018.3 5.5l22.1 41.8a10.4 10.4 0 0018.8-.9l79.8-192.6z\"\n      ></path>\n      <path\n        fill=\"#ffe07d\"\n        d=\"M325.5 499l22.2-41.8a10.41 10.41 0 0112.2-5.1l45.2 13.9a10.4 10.4 0 0013-6.9 10.51 10.51 0 00-.3-7L338 259.5l-111 46 79.8 192.6a10.41 10.41 0 0013.6 5.6 10.15 10.15 0 005.1-4.7z\"\n      ></path>\n      <path\n        fill=\"#ffd064\"\n        d=\"M417.8 452.1L338 259.5l-58.2 24.1L350.4 454a10.46 10.46 0 019.5-1.8l45.2 13.9a10.4 10.4 0 0013-6.9 10.77 10.77 0 00-.3-7.1z\"\n      ></path>\n      <path\n        fill=\"#e8ae4d\"\n        d=\"M275.9 14.5a32.14 32.14 0 0029.6 5.5 32.14 32.14 0 0137.4 14.5 32.14 32.14 0 0025.6 15.8 32.23 32.23 0 0129.6 27 32.22 32.22 0 0018.1 24 32.26 32.26 0 0117.9 35.9 32.51 32.51 0 008.2 29 32.16 32.16 0 013.7 39.9 32.31 32.31 0 00-2.8 30 32.2 32.2 0 01-11 38.5 32.44 32.44 0 00-13.4 26.9 32.19 32.19 0 01-24.1 32 32.3 32.3 0 00-22.2 20.3 32.2 32.2 0 01-34.1 21.1 32.23 32.23 0 00-28.1 10.9 32.25 32.25 0 01-39.4 7.4 32.08 32.08 0 00-30.1 0 32.27 32.27 0 01-39.4-7.4 32.5 32.5 0 00-28.1-10.9 32.32 32.32 0 01-34.1-21.1 32.3 32.3 0 00-22.2-20.3 32.39 32.39 0 01-24.2-32 32.24 32.24 0 00-13.4-27 32.2 32.2 0 01-11-38.5 32.31 32.31 0 00-2.8-30 32.16 32.16 0 013.7-39.9 32 32 0 008.2-29 32.25 32.25 0 0117.9-35.8 32.58 32.58 0 0018.2-24 32.23 32.23 0 0129.6-27 32.25 32.25 0 0025.6-15.9 32.39 32.39 0 0137.4-14.5 32.14 32.14 0 0029.6-5.5 32.44 32.44 0 0140.1.1z\"\n      ></path>\n      <circle cx=\"255.9\" cy=\"202.2\" r=\"142.2\" fill=\"#ffe07d\"></circle>\n      <path\n        fill=\"#ffd064\"\n        d=\"M255.9 60a146.64 146.64 0 00-31.7 3.5 142.24 142.24 0 010 277.3c76.6 17.5 152.8-30.5 170.3-107a142.08 142.08 0 00-107-170.2 140.52 140.52 0 00-31.6-3.6z\"\n      ></path>\n      <path d=\"M452.3 210.2a39.44 39.44 0 00-4.6-49.2 24.79 24.79 0 01-6.3-22.2 39.48 39.48 0 00-22-44.2 24.81 24.81 0 01-13.9-18.4A39.58 39.58 0 00369 42.9a24.56 24.56 0 01-19.6-12.2 39.47 39.47 0 00-46.1-17.8 25 25 0 01-22.7-4.2 39.68 39.68 0 00-49.4 0 24.44 24.44 0 01-22.7 4.2 39.77 39.77 0 00-46.1 17.8 24.71 24.71 0 01-19.6 12.2 39.58 39.58 0 00-36.5 33.3 24.46 24.46 0 01-13.9 18.4 39.54 39.54 0 00-22 44.2 24.79 24.79 0 01-6.3 22.2 39.69 39.69 0 00-4.6 49.2 24.45 24.45 0 012.1 23 39.64 39.64 0 0013.5 47.5 24.86 24.86 0 0110.3 20.7 39.6 39.6 0 0029.8 39.4 25.09 25.09 0 0113.2 8.6l-41.3 99.8a17.87 17.87 0 009.7 23.4 18.28 18.28 0 0012.2.6l45.2-13.9a3 3 0 013.4 1.4l22.2 41.8a17.88 17.88 0 0032.3-1.5l43.1-104h1.7L300 501a17.92 17.92 0 0023.4 9.7 18.67 18.67 0 009-8.1l22.2-41.8a3 3 0 013.4-1.4l45.2 13.9a17.82 17.82 0 0021.7-23.9l-41.3-99.8a24.51 24.51 0 0113.2-8.6 39.6 39.6 0 0029.8-39.4 24.86 24.86 0 0110.3-20.7 39.55 39.55 0 0013.5-47.5 24.79 24.79 0 011.9-23.2zm-254.2 285a2.91 2.91 0 01-3.8 1.6 3.74 3.74 0 01-1.5-1.3l-22.2-41.8a17.84 17.84 0 00-21-8.7l-45.2 13.9a2.81 2.81 0 01-3.6-1.9 2.74 2.74 0 01.1-2l36.7-88.5a39.54 39.54 0 0036.7 16 24.9 24.9 0 0121.5 8.3 39.37 39.37 0 0040.6 12.2zm209.3-36.4l-45.2-13.9a17.91 17.91 0 00-21 8.7l-22.3 41.9a2.92 2.92 0 01-3.9 1.2 2.43 2.43 0 01-1.3-1.5L275.5 403a39.51 39.51 0 0040.5-12.3 24.81 24.81 0 0121.5-8.4 39.78 39.78 0 0036.7-15.9l36.7 88.6a2.91 2.91 0 01-1.6 3.8 2.5 2.5 0 01-1.9 0zM439.8 202a39.58 39.58 0 00-3.4 37 24.65 24.65 0 01-8.4 29.5 39.43 39.43 0 00-16.5 33.2 24.49 24.49 0 01-18.5 24.5 40 40 0 00-24.6 18.7v.1a43.87 43.87 0 00-2.9 6.2 24.65 24.65 0 01-26.1 16.2 39.85 39.85 0 00-34.6 13.4 24.49 24.49 0 01-30.2 5.6 38.17 38.17 0 00-10.9-3.8h-.1a38.38 38.38 0 00-15.1 0h-.1a35.56 35.56 0 00-10.9 3.9 24.6 24.6 0 01-30.2-5.6 39.85 39.85 0 00-34.6-13.4 24.58 24.58 0 01-26.1-16.2 38.66 38.66 0 00-2.9-6.2v-.1a39.79 39.79 0 00-24.5-18.7 24.49 24.49 0 01-18.5-24.5 39.78 39.78 0 00-16.6-33.2 24.43 24.43 0 01-8.4-29.5 39.58 39.58 0 00-3.4-37 24.62 24.62 0 012.9-30.6 39.72 39.72 0 0010.2-35.7 24.67 24.67 0 0113.7-27.5 39.71 39.71 0 0022.4-29.6A24.49 24.49 0 01144.2 58a39.93 39.93 0 0031.6-19.5 24.65 24.65 0 0128.7-11.1 40 40 0 0036.5-6.8 24.66 24.66 0 0130.8 0 39.62 39.62 0 0036.5 6.8A24.78 24.78 0 01337 38.5 39.75 39.75 0 00368.5 58a24.69 24.69 0 0122.7 20.7 39.71 39.71 0 0022.4 29.6 24.73 24.73 0 0113.7 27.5 40 40 0 0010.1 35.7 25.1 25.1 0 012.4 30.5z\"></path>\n      <path d=\"M113.9 192.1a7.59 7.59 0 008.4-6.5c8.2-67.3 65.7-118.1 133.6-118.1a134.77 134.77 0 01133.7 118.1 7.46 7.46 0 007.4 6.6 2.77 2.77 0 00.9-.1 7.48 7.48 0 006.5-8.4c-9.1-74.7-73-131.2-148.5-131.2S116.5 109 107.3 183.8a7.44 7.44 0 006.6 8.3zM398 212.3a7.59 7.59 0 00-8.4 6.5 134.73 134.73 0 01-267.4 0 7.51 7.51 0 10-14.9 1.9c9.2 74.8 73.1 131.2 148.6 131.2s139.4-56.5 148.6-131.3a7.44 7.44 0 00-6.5-8.3z\"></path>\n      <path\n        fill=\"#e8ae4d\"\n        d=\"M193.12 280.4h-.44a13.38 13.38 0 01-12.49-12.49v-30.09h-1.29a12.8 12.8 0 01-13-12.94v-39.22a12.8 12.8 0 0113-12.94h1.32v-19.77a13.38 13.38 0 0112.49-12.5h50.28V111a7 7 0 017-7h11.88a7 7 0 017 7v29.44h50.28A13.38 13.38 0 01331.61 153v19.77h1.29a12.8 12.8 0 0113 12.89v39.22a12.8 12.8 0 01-13 12.94h-1.32v30.08a13.38 13.38 0 01-12.49 12.49h-126zm79.09-86.69A10.54 10.54 0 00282.83 204a10.24 10.24 0 0010.24-10.23v-.31a10.64 10.64 0 00-10.28-10.32h-.21a10.54 10.54 0 00-10.37 10.57zm-43.24-10.16a10.23 10.23 0 1010.23 10.23 10.24 10.24 0 00-10.23-10.23z\"\n      ></path>\n      <path d=\"M261.84 111v36.44h56.84a6.39 6.39 0 015.94 5.94v26.34h8.28a5.84 5.84 0 015.94 5.94v39.22a5.84 5.84 0 01-5.94 5.94h-8.32v36.64a6.39 6.39 0 01-5.94 5.94H193.12a6.39 6.39 0 01-5.94-5.94v-36.64h-8.28a5.84 5.84 0 01-5.94-5.94v-39.22a5.84 5.84 0 015.94-5.94h8.32v-26.34a6.39 6.39 0 015.94-5.94H250V111h11.88m21 100a17.24 17.24 0 0017.23-17.23v-.39a17.59 17.59 0 00-17.27-17.24h-.35a17.43 17.43 0 10.39 34.85m-53.86 0a17.23 17.23 0 10-17.23-17.23A17.24 17.24 0 00228.97 211m.79 34.47h52.28v-11.88h-52.28v11.89M261.84 97h-11.88a14 14 0 00-14 14v22.44h-43.71a20.39 20.39 0 00-19 19v14a19.69 19.69 0 00-14.35 19.22v39.22A19.69 19.69 0 00173.18 244v24.3a20.39 20.39 0 0019 19h127.37a20.39 20.39 0 0019.05-19V244a19.69 19.69 0 0014.3-19.12v-39.22a19.69 19.69 0 00-14.26-19.15v-14a20.39 20.39 0 00-19.05-19h-43.75V111a14 14 0 00-14-14zm17.37 96.64a3.59 3.59 0 013.52-3.49h.06a3.59 3.59 0 013.27 3.44v.19a3.22 3.22 0 01-3.23 3.23 3.59 3.59 0 01-3.62-3.37zM228.97 197a3.23 3.23 0 113.23-3.23 3.22 3.22 0 01-3.23 3.23z\"></path>\n    </svg>\n  );\n}\n","export function PaintingIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#d19a6e\"\n        d=\"M255.517 48.881h-47.52V19.77c0-6.777 5.493-12.27 12.27-12.27h22.98c6.777 0 12.27 5.493 12.27 12.27z\"\n      ></path>\n      <path\n        fill=\"#bc845e\"\n        d=\"M234.907 7.5h-14.64c-6.777 0-12.27 5.493-12.27 12.27v29.111h14.64V19.77c0-6.777 5.494-12.27 12.27-12.27z\"\n      ></path>\n      <path\n        fill=\"#ffc269\"\n        d=\"M306.997 87.601h-150.48v-25.58c0-7.257 5.883-13.14 13.14-13.14h124.2c7.257 0 13.14 5.883 13.14 13.14z\"\n      ></path>\n      <path\n        fill=\"#ffa95f\"\n        d=\"M188.377 48.881h-18.72c-7.257 0-13.14 5.883-13.14 13.14v25.58h18.72v-25.58c0-7.257 5.883-13.14 13.14-13.14z\"\n      ></path>\n      <path\n        fill=\"#d19a6e\"\n        d=\"M175.536 492.233l25.619-71.973h-49.68l-24.066 67.611c-2.886 8.108 3.126 16.629 11.732 16.629h19.009a18.455 18.455 0 0017.386-12.267zM288.138 492.233l-25.619-71.973h49.68l24.066 67.611c2.886 8.108-3.126 16.629-11.732 16.629h-19.009a18.455 18.455 0 01-17.386-12.267z\"\n      ></path>\n      <path\n        fill=\"#bc845e\"\n        d=\"M166.538 446.66h25.22l9.397-26.4h-49.68l-24.066 67.611c-2.886 8.108 3.126 16.629 11.732 16.629h18.24c-8.606 0-14.618-8.521-11.732-16.629l12.583-35.352a8.817 8.817 0 018.306-5.859zM306.378 492.233l-13.836-38.871c-1.163-3.268 1.26-6.703 4.729-6.703h24.325l-9.397-26.4h-49.68l25.619 71.973a18.455 18.455 0 0017.387 12.267h18.24a18.453 18.453 0 01-17.387-12.266z\"\n      ></path>\n      <path\n        fill=\"#ffc269\"\n        d=\"M398.405 429.244H65.27c-6.742 0-12.208-5.466-12.208-12.208v-24.889c0-6.742 5.466-12.208 12.208-12.208h37.194l39.512-21.24 34.244 21.24h222.185c6.742 0 12.208 5.466 12.208 12.208v24.889c-.001 6.742-5.466 12.208-12.208 12.208z\"\n      ></path>\n      <path\n        fill=\"#ffa95f\"\n        d=\"M71.062 417.036v-24.889c0-6.742 5.466-12.208 12.208-12.208h-18c-6.742 0-12.208 5.466-12.208 12.208v24.889c0 6.742 5.466 12.208 12.208 12.208h18c-6.742 0-12.208-5.466-12.208-12.208z\"\n      ></path>\n      <path\n        fill=\"#f4f4f4\"\n        d=\"M376.742 379.94H86.932V112.753c0-13.891 11.261-25.152 25.152-25.152H351.59c13.891 0 25.152 11.261 25.152 25.152z\"\n      ></path>\n      <path\n        fill=\"#e5e5e5\"\n        d=\"M376.742 145.146a67.752 67.752 0 00-3.022-3.232c-12.437-12.437-28.972-19.421-46.558-19.667l-3.622-.047c-9.196 0-17.817 3.607-24.276 10.157-6.458 6.548-9.944 15.22-9.815 24.418l.044 3.142c.246 17.587 7.23 34.122 19.667 46.559a67.3 67.3 0 0029.421 17.196l34.692 34.691a236.08 236.08 0 003.469 3.383zM134.201 87.601h-22.116c-13.891 0-25.152 11.261-25.152 25.152V379.94h22.116V112.753c0-13.891 11.261-25.152 25.152-25.152z\"\n      ></path>\n      <path\n        fill=\"#69d6f4\"\n        d=\"M132.664 161.295v158.191c0 9.055 7.34 16.395 16.395 16.395s16.395-7.34 16.395-16.395V212.909c0-8.83 7.158-15.989 15.989-15.989 8.83 0 15.989 7.158 15.989 15.989v12.45c0 9.189 7.52 16.994 16.708 16.822 8.91-.167 16.082-7.442 16.082-16.392V212.91c0-8.83 7.158-15.989 15.989-15.989h36.024c8.83 0 15.989 7.158 15.989 15.989v74.467c0 9.189 7.52 16.994 16.708 16.822 8.91-.167 16.082-7.442 16.082-16.392V152.51c0-5.694-4.616-10.31-10.31-10.31H151.759c-10.546 0-19.095 8.549-19.095 19.095z\"\n      ></path>\n      <path\n        fill=\"#69d6f4\"\n        d=\"M230.22 286.12c0-8.881-7.199-16.08-16.08-16.08h-.63c-8.881 0-16.08 7.199-16.08 16.08 0 8.881 7.199 16.08 16.08 16.08h.63c8.881 0 16.08-7.199 16.08-16.08z\"\n      ></path>\n      <path\n        fill=\"#51c1ed\"\n        d=\"M320.701 142.2h-28.223a33.96 33.96 0 00-3.029 14.574l.044 3.142c.246 17.587 7.23 34.122 19.667 46.558a67.264 67.264 0 0021.852 14.578V152.51c-.002-5.694-4.617-10.31-10.311-10.31z\"\n      ></path>\n      <path\n        fill=\"#aab2bd\"\n        d=\"M371.204 228.009l16.211 16.211a210.226 210.226 0 0015.636 14.141l37.697 30.801a11.129 11.129 0 0014.911-.749 11.129 11.129 0 00.749-14.911l-30.801-37.697a210.226 210.226 0 00-14.141-15.636l-16.211-16.211z\"\n      ></path>\n      <path\n        fill=\"#969faa\"\n        d=\"M449.658 280.253l-37.697-30.801a210.226 210.226 0 01-15.636-14.141L380.114 219.1l-8.91 8.91 16.211 16.211a210.226 210.226 0 0015.636 14.141l37.697 30.801a11.129 11.129 0 0014.911-.749 11.078 11.078 0 003.063-5.847 11.103 11.103 0 01-9.064-2.314z\"\n      ></path>\n      <path\n        fill=\"#ffc269\"\n        d=\"M355.109 189.154h34.013v31.433h-34.013z\"\n        transform=\"rotate(-45 372.107 204.954)\"\n      ></path>\n      <path\n        fill=\"#fc8d94\"\n        d=\"M309.447 156.495l.044 3.142a47.168 47.168 0 0034.704 44.836l4.783 1.31 24.051-24.051-1.31-4.783a47.172 47.172 0 00-44.836-34.704l-3.142-.044c-7.94-.11-14.405 6.354-14.294 14.294z\"\n      ></path>\n      <path fill=\"#ffa95f\" d=\"M373.028 181.732l-24.051 24.051 22.227 22.226 8.91-8.91-22.227-22.226z\"></path>\n      <path\n        fill=\"#fa6f7c\"\n        d=\"M353.105 195.563a47.172 47.172 0 01-34.704-44.836l-.044-3.142a14.047 14.047 0 01.732-4.652c-5.658 1.886-9.73 7.252-9.642 13.562l.044 3.142a47.168 47.168 0 0034.704 44.836l4.783 1.31 24.051-24.051-15.141 15.141z\"\n      ></path>\n      <g>\n        <path d=\"M398.405 372.44h-14.163V268.92a7.5 7.5 0 00-15 0v103.52H159.071a7.5 7.5 0 000 15h239.334a4.713 4.713 0 014.708 4.708v24.889a4.713 4.713 0 01-4.708 4.708H65.27a4.713 4.713 0 01-4.708-4.708v-24.889a4.713 4.713 0 014.708-4.708h61.408a7.5 7.5 0 000-15H94.432V112.753c0-9.733 7.919-17.652 17.652-17.652H351.59c9.733 0 17.652 7.919 17.652 17.652v25.126a7.5 7.5 0 0015 0v-25.126c0-18.004-14.648-32.652-32.652-32.652h-37.092v-18.08c0-11.381-9.259-20.64-20.64-20.64h-30.84V19.77c0-10.901-8.869-19.77-19.77-19.77h-22.98c-10.901 0-19.77 8.869-19.77 19.77v21.611h-30.84c-11.381 0-20.64 9.259-20.64 20.64v18.08h-36.933c-18.004 0-32.652 14.648-32.652 32.652V372.44H65.27c-10.867 0-19.708 8.841-19.708 19.708v24.889c0 10.867 8.841 19.708 19.708 19.708h72.376l-17.303 48.613c-2.171 6.101-1.239 12.902 2.494 18.193s9.828 8.45 16.304 8.45h19.009c10.953 0 20.78-6.933 24.453-17.251l20.646-58.005h57.177l20.647 58.005c3.673 10.319 13.5 17.251 24.452 17.251h19.009a19.98 19.98 0 0016.304-8.45 19.978 19.978 0 002.494-18.194l-17.303-48.612h72.376c10.867 0 19.708-8.841 19.708-19.708v-24.889c0-10.867-8.841-19.708-19.708-19.708zM215.497 19.77c0-2.63 2.14-4.77 4.77-4.77h22.98c2.63 0 4.77 2.14 4.77 4.77v21.611h-32.52zm-51.48 42.251c0-3.11 2.53-5.64 5.64-5.64h124.2c3.11 0 5.64 2.53 5.64 5.64v18.08h-135.48zm4.453 427.697A10.977 10.977 0 01158.149 497H139.14c-2.317 0-3.602-1.467-4.047-2.098s-1.396-2.333-.619-4.516l19.094-53.643h33.758zm160.729.668c.777 2.183-.174 3.886-.619 4.517s-1.73 2.098-4.047 2.098h-19.009a10.976 10.976 0 01-10.321-7.282l-18.856-52.975h33.758z\"></path>\n        <path d=\"M214.14 262.54h-.629c-13.002 0-23.58 10.578-23.58 23.58s10.578 23.58 23.58 23.58h.629c13.002 0 23.58-10.578 23.58-23.58s-10.578-23.58-23.58-23.58zm0 32.16h-.629c-4.731 0-8.58-3.849-8.58-8.58s3.849-8.58 8.58-8.58h.629c4.731 0 8.58 3.849 8.58 8.58s-3.849 8.58-8.58 8.58z\"></path>\n        <path d=\"M282.232 189.42h-36.023c-12.952 0-23.489 10.537-23.489 23.489v12.879c0 4.813-3.913 8.803-8.722 8.893-2.268.05-4.48-.861-6.195-2.544-1.826-1.792-2.873-4.263-2.873-6.779v-12.45c0-12.952-10.537-23.489-23.488-23.489s-23.489 10.537-23.489 23.489v106.577c0 4.904-3.99 8.895-8.895 8.895-4.904 0-8.895-3.99-8.895-8.895v-158.19c0-6.394 5.201-11.595 11.595-11.595H282.19a7.5 7.5 0 000-15H151.759c-14.665 0-26.595 11.93-26.595 26.595v158.19c0 13.175 10.719 23.895 23.895 23.895 13.175 0 23.895-10.719 23.895-23.895V212.909c0-4.681 3.808-8.489 8.489-8.489s8.488 3.808 8.488 8.489v12.45c0 6.517 2.685 12.89 7.366 17.484 4.613 4.526 10.632 6.954 16.983 6.835 12.925-.242 23.441-10.959 23.441-23.89v-12.879c0-4.681 3.808-8.489 8.489-8.489h36.023c4.681 0 8.489 3.808 8.489 8.489v74.467c0 6.518 2.685 12.89 7.366 17.485 4.612 4.526 10.634 6.959 16.982 6.835 12.925-.242 23.441-10.959 23.441-23.891v-59.796a7.5 7.5 0 00-15 0v59.796c0 4.814-3.913 8.803-8.722 8.894-2.287.039-4.48-.861-6.195-2.544-1.826-1.792-2.873-4.263-2.873-6.779v-74.467c0-12.952-10.537-23.489-23.489-23.489z\"></path>\n        <path d=\"M462.216 268.757l-30.801-37.697a218.436 218.436 0 00-14.646-16.194l-37.032-37.032-.785-2.866a54.76 54.76 0 00-14.07-24.215c-10.123-10.123-23.58-15.807-37.894-16.007l-3.144-.044c-5.86-.066-11.414 2.164-15.573 6.325-4.16 4.16-6.406 9.69-6.323 15.573l.043 3.142c.2 14.314 5.885 27.772 16.007 37.894a54.764 54.764 0 0024.215 14.07l2.866.785 37.032 37.032a218.5 218.5 0 0016.194 14.646l37.697 30.802a18.589 18.589 0 0011.791 4.222 18.58 18.58 0 0013.17-5.476 18.574 18.574 0 001.253-24.96zM316.99 159.532l-.044-3.142a6.548 6.548 0 011.931-4.757c1.271-1.271 2.992-1.98 4.758-1.932l3.143.044c10.386.145 20.151 4.27 27.497 11.615a39.746 39.746 0 0110.21 17.571l.159.58-17.888 17.888-.58-.159a39.74 39.74 0 01-17.571-10.21c-7.346-7.345-11.471-17.111-11.615-27.498zm56.038 32.806l11.62 11.62-13.444 13.444-11.62-11.62zm77.328 90.773a3.619 3.619 0 01-4.862.244l-37.697-30.801a203.468 203.468 0 01-15.079-13.637l-10.908-10.908 13.444-13.444 10.908 10.908a203.67 203.67 0 0113.637 15.079l30.801 37.697a3.618 3.618 0 01-.244 4.862z\"></path>\n      </g>\n    </svg>\n  );\n}\n"],"names":["StepDraw","secretCard","onSubmitDrawing","startDrawingTimer","announcement","translate","useLanguage","isDebugEnabled","useDevFeatures","useState","lines","setLines","isTimesUp","setTimesUp","useCountdown","duration","autoStart","onExpire","drawing","JSON","stringify","cardId","id","seconds","start","isRunning","useEffect","useMock","mockDrawing","size","header","undefined","footer","Array","level","fill","join","className","color","text","ArteRuimTimerSound","onClick","PanicIcon","style","background","width","padding","DrawInstruction","pt","TimeHighlight","en","EvaluationRules","GalleryRules","PointsHighlight","type","ScoringRules","players","state","info","useStep","step","goToNextStep","setStep","user","useUser","setStartDrawingTimer","request","useAPICall","apiFunction","ARTE_RUIM_API","actionName","onBeforeCall","onError","successMessage","errorMessage","payload","action","useOnSubmitDrawingAPIRequest","icon","PaintingIcon","title","buttonText","onClose","currentRound","round","current","withoutTimer","phase","allowedPhase","PHASES","conditions","isReady","waitingRoomInstruction","onPressButton","time","circleColor","appearance","contained","currentCard","prepareVotes","votes","Object","entries","reduce","acc","drawingEntryId","cardEntryId","split","SEPARATOR","drawingId","EvaluationAllDrawings","drawings","activeItem","onActivateItem","canvasSize","liButtonBaseClass","map","drawingEntry","canvasEntryId","getEntryId","isActive","vote","clsx","label","charAt","length","playerId","name","ArteRuimCard","getColorFromLetter","WarningOutlined","EvaluationAllCards","cards","cardEntry","index","letter","LETTERS","isUsed","values","includes","role","StepEvaluation","onSubmitVoting","isLoading","useLoading","canvasWidth","useCardWidth","useGlobalState","setCanvasSize","useVotingMatch","setVotes","activateItem","resetVoting","isVotingComplete","onGuessForMe","useCallback","usedDrawings","keys","usedCards","drawingsKeys","e","filter","key","cardsKeys","shuffle","Math","ceil","flat","newVotes","forEach","drawingKey","floor","selectOwnDrawing","playersDrawing","find","cardIndex","findIndex","card","cardKey","useEffectOnce","selection","s","fullWidth","content","align","wrap","ThunderboltOutlined","disabled","CloudUploadOutlined","loading","EvaluatedDrawings","cardsDict","useMemo","drawingsDict","IconAvatar","AnimatedLoaderIcon","cSize","min","sort","maxWidth","player","onSuccess","useOnSubmitVotingAPIRequest","EvaluateIcon","waitingRoomContent","GalleryWindowCredits","artist","GalleryWindowGuesses","playersSay","windowCardId","artistColor","orderBy","playersIds","i","count","isCorrect","entry","backgroundColor","CrownFilled","MessageFilled","avatarId","getPlayersFromIds","GalleryWindowResult","playerArtist","correctAnswerId","correctAnswerText","playersPoints","correctGuesses","quantity","keyPrefix","GarbageIcon","shape","StepGallery","gallery","activeIndex","setActiveIndex","isFirstGalleryRunThrough","useTemporarilyHidePlayersBar","artistId","currentColor","getAvatarColorById","disableControls","barColor","windowDuration","leftClassName","rightClassName","StepRanking","ranking","isGameOver","goToPreviousStep","gainedPointsDescriptions","PictureOutlined","meta","useSlideShow","options","shortGame","some","score","PictureIcon","unskippable","GRADES","DrawingGrade","value","grade","baseClass","FinalGallery","successRate","announcementIcon","TrophyIcon","rateWidgetCustomText","Achievements","achievements","reference","achievementsReference","getActiveComponent","PhaseLobby","PhaseRules","PhaseSetup","PhaseDraw","PhaseEvaluation","PhaseGallery","PhaseGameOver","PageError","theme","token","colorPrimary","THEME_COLORS","colorLink","gameCollection","GAME_COLLECTION","BEST_ARTIST","Icon","MedalBrushIcon","description","WORST_ARTIST","MedalQuestionMarkIcon","SOLITARY_WINNER","MedalPersonIcon","SOLITARY_LOSER","MedalLightBulbIcon","TABLE_VOTES","MedalRobotIcon","props","xmlns","viewBox","d","cx","cy","r","rx","ry","transform"],"sourceRoot":""}