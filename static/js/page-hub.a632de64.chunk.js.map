{"version":3,"file":"static/js/page-hub.a632de64.chunk.js","mappings":"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","sources":["components/general/GameTags.tsx","components/rules/CollapsibleRule.tsx","components/rules/PopoverRule.tsx","components/rules/RulesCarousel.tsx","components/rules/RulesList.tsx","components/rules/RulesModal.tsx","hooks/useDevFeatures.ts","pages/Hub/components/CreateGameModal.tsx","pages/Hub/components/GameCard.tsx","pages/Hub/components/DevEmulatorAlert.tsx","pages/Hub/components/Filters.tsx","pages/Hub/Hub.tsx","services/adapters.ts"],"sourcesContent":["// Ant Design Resources\nimport { Space, SpaceProps, Tag } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { TAG_DICT } from 'utils/constants';\n\nconst sortTags = (tags: string[]) => {\n  const sortedTags: string[] = [];\n\n  tags.forEach((tag) => {\n    if (TAG_DICT?.[tag]?.index !== undefined) {\n      sortedTags[TAG_DICT[tag].index] = tag;\n    } else if (sortedTags.length < 18) {\n      sortedTags[18] = tag;\n    } else {\n      sortedTags.push(tag);\n    }\n  });\n\n  return sortedTags.filter((v) => Boolean(v));\n};\n\ntype GameTagsProps = {\n  tags: string[];\n  gameCode: GameCode;\n} & SpaceProps;\n\nexport function GameTags({ tags, gameCode, ...rest }: GameTagsProps) {\n  const { language } = useLanguage();\n  const sortedTags = sortTags(tags);\n\n  return (\n    <Space wrap {...rest}>\n      {sortedTags.map((tag) => (\n        <Tag key={`${gameCode}-${tag}`} color={TAG_DICT[tag]?.color}>\n          {TAG_DICT[tag]?.label[language]}\n        </Tag>\n      ))}\n    </Space>\n  );\n}\n","// Ant Design Resources\nimport { Collapse } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Instruction } from 'components/text';\nimport { ReactNode } from 'react';\n\ntype CollapsibleRuleProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * The title of the panel (default: Rules/Regras)\n   */\n  title?: string;\n};\nexport function CollapsibleRule({ children, title }: CollapsibleRuleProps): JSX.Element {\n  const { translate } = useLanguage();\n\n  return (\n    <Instruction contained>\n      <Collapse ghost>\n        <Collapse.Panel header={translate('Regras', 'Rules', title)} key=\"1\">\n          {children}\n        </Collapse.Panel>\n      </Collapse>\n    </Instruction>\n  );\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { ReadOutlined } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\nimport { FixedMenuButton } from 'components/buttons';\n\ntype PopoverRuleProps = {\n  /**\n   * The rules themselves\n   */\n  content: ReactNode;\n  /**\n   * A custom label other than rules/regras\n   */\n  label?: ReactNode;\n  /**\n   * If label should be displayed\n   */\n  showLabel?: boolean;\n};\n\nexport function PopoverRule({ content, label, showLabel = false }: PopoverRuleProps): JSX.Element {\n  return (\n    <FixedMenuButton\n      type=\"popover\"\n      position={0}\n      icon={<ReadOutlined />}\n      content={content}\n      label={label || <Translate pt=\" Regras\" en=\" Rules\" />}\n      showLabel={showLabel}\n      buttonProps={{\n        type: 'primary',\n      }}\n    />\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Typography, Image, Carousel, Button } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Constants\nimport { PUBLIC_URL } from 'utils/constants';\nimport { DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\n\ntype RulesCarouselProps = {\n  info: GameInfo;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  ruleClass?: string;\n};\n\nexport function RulesCarousel({ info, className = '', ruleClass = '' }: RulesCarouselProps): JSX.Element {\n  const { language } = useLanguage();\n  const settings = {\n    prevArrow: (\n      <Button>\n        <DoubleLeftOutlined className=\"rules-carousel__nav rules-carousel__nav--left\" />\n      </Button>\n    ),\n    nextArrow: (\n      <Button>\n        <DoubleRightOutlined className=\"rules-carousel__nav rules-carousel__nav--right\" />\n      </Button>\n    ),\n  };\n\n  return (\n    <Carousel\n      className={clsx('rules-carousel', className)}\n      autoplay\n      autoplaySpeed={15000}\n      arrows\n      {...settings}\n    >\n      {info.rules[language].map((rule, index) => (\n        <div className={clsx('rules-carousel__rule', ruleClass)} key={rule}>\n          <span className=\"rules-carousel__rule-number\">{index + 1}</span>\n\n          <Image\n            className=\"rules-carousel__image\"\n            src={\n              index === 0\n                ? `${PUBLIC_URL.BANNERS}${info.gameName}-${language}.jpg`\n                : `${PUBLIC_URL.RULES}game-rule-${info.gameName}-${index}.jpg`\n            }\n            fallback={`${PUBLIC_URL.RULES}game-rule-not-found.jpg`}\n            alt={rule}\n          />\n          <Typography.Paragraph className=\"rules-carousel__rule-text\">{rule}</Typography.Paragraph>\n        </div>\n      ))}\n    </Carousel>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n\ntype RulesListProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n};\n\nexport function RulesList({ children, className = '' }: RulesListProps): JSX.Element {\n  return <ul className={clsx('rules-list', className)}>{children}</ul>;\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, ButtonProps, Modal } from 'antd';\nimport { ReadOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Translate } from 'components/language';\nimport { RulesCarousel } from 'components/rules';\n\ntype RulesModalProps = {\n  gameInfo: GameInfo;\n  buttonProps?: ButtonProps;\n};\n\nexport function RulesModal({ gameInfo, buttonProps }: RulesModalProps): JSX.Element {\n  const { language, translate } = useLanguage();\n  const [isVisible, setVisibility] = useState(false);\n\n  const onCloseModal = () => {\n    setVisibility(false);\n  };\n\n  return (\n    <>\n      <Button type=\"default\" onClick={() => setVisibility(true)} icon={<ReadOutlined />} {...buttonProps}>\n        <Translate pt=\"Regras\" en=\"Rules\" />\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`${translate('Regras', 'Rules')}: ${gameInfo.title[language]}`}\n          open={isVisible}\n          onCancel={onCloseModal}\n          className=\"rules-modal\"\n          footer={[\n            <Button key=\"close\" onClick={onCloseModal}>\n              <Translate pt=\"Fechar\" en=\"Close\" />\n            </Button>,\n          ]}\n        >\n          <RulesCarousel info={gameInfo} />\n        </Modal>\n      )}\n    </>\n  );\n}\n","import { isDevEnv } from '../utils/helpers';\nimport { useGlobalState } from './useGlobalState';\n\n/**\n * Controls debug and dev environment\n * @returns\n */\nexport function useDevFeatures() {\n  const [isDebugEnabled, setIsDebugEnabled] = useGlobalState('isDebugEnabled');\n\n  const toggleDevFeatures = () => {\n    setIsDebugEnabled((s) => !s);\n  };\n\n  return {\n    isDevEnv,\n    isDebugEnabled,\n    toggleDevFeatures,\n  };\n}\n","import clsx from 'clsx';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useCopyToClipboard } from 'react-use';\n// Ant Design Resources\nimport { Image, Modal, message, Button, notification, Divider, Typography, Switch, Space, Alert } from 'antd';\n// Adapters\nimport { ADMIN_API } from 'services/adapters';\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useLocalStorage } from 'hooks/useLocalStorage';\n// Constants\nimport { LATEST_GAME_IDS, PUBLIC_URL } from 'utils/constants';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\nimport { Loading } from 'components/loaders';\n\nconst updateLocal24hGameIds = (latestGameIds: PlainObject, newId: GameId) => {\n  const now = Date.now();\n  const past24Hours = now - 1000 * 60 * 60 * 24;\n  const cleanedUpIds = Object.entries(latestGameIds ?? {}).reduce((acc: PlainObject, [key, timestamp]) => {\n    if (timestamp > past24Hours) {\n      acc[key] = timestamp;\n    }\n    return acc;\n  }, {});\n  return {\n    [LATEST_GAME_IDS]: {\n      ...cleanedUpIds,\n      [newId]: now,\n    },\n  };\n};\n\ntype CreateGameModalProps = {\n  gameInfo: GameInfo;\n};\n\nexport function CreateGameModal({ gameInfo }: CreateGameModalProps): JSX.Element {\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n  const [state, copyToClipboard] = useCopyToClipboard();\n\n  const { language, translate } = useLanguage();\n  const { setLoader } = useLoading();\n  const [getLocalStorage, setLocalStorage] = useLocalStorage();\n  const [isVisible, setVisibility] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [gameId, setGameId] = useState(null);\n  const [, setUserId] = useGlobalState('userId');\n  const [, setUserName] = useGlobalState('username');\n  const [, setUserAvatarId] = useGlobalState('userAvatarId');\n  const [options, setOptions] = useState({});\n\n  useEffect(() => {\n    if (state.value && gameId) {\n      message.info(`Copied to clipboard: ${state.value}`);\n    }\n  }, [state, gameId]);\n\n  const onCloseModal = useCallback(() => {\n    setVisibility(false);\n  }, []);\n\n  const onChangeOptions = (key: string, value: boolean) => {\n    setOptions((s) => ({\n      ...s,\n      [key]: value,\n    }));\n  };\n\n  const createGame = async () => {\n    try {\n      setLoader('create', true);\n      setLoading(true);\n      const response: PlainObject = await ADMIN_API.createGame({\n        gameName: gameInfo.gameName,\n        language,\n        options,\n      });\n      if (response.data.gameId) {\n        setGameId(response.data.gameId);\n        setUserId(null);\n        setUserName('');\n        setUserAvatarId('');\n        setLocalStorage(updateLocal24hGameIds(getLocalStorage(LATEST_GAME_IDS), response.data.gameId));\n        const baseUrl = window.location.href.split(pathname)[0];\n        copyToClipboard(`${baseUrl}/${response.data.gameId}`);\n      }\n    } catch (e: any) {\n      notification.error({\n        message: translate(\n          'Aplicativo encontrou um erro ao tentar criar o jogo',\n          'The application found an error while trying to create a game',\n          language\n        ),\n        description: JSON.stringify(e.message),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n      setVisibility(false);\n    } finally {\n      setLoading(false);\n      setLoader('create', false);\n    }\n  };\n\n  const onConfirmGame = () => {\n    if (gameId) {\n      navigate(`/${gameId}`);\n    } else {\n      message.info(\n        translate('Péra! O jogo ainda não foi inicializado.', 'Wait! The game has not been created')\n      );\n    }\n  };\n\n  return (\n    <>\n      <Button type=\"primary\" onClick={() => setVisibility(true)} block>\n        <Translate pt=\"Criar\" en=\"Create\" />\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`${translate('Criando novo jogo', 'Creating new game')}: ${gameInfo.title[language]}`}\n          open={isVisible}\n          onCancel={onCloseModal}\n          onOk={onConfirmGame}\n          okButtonProps={{ disabled: Boolean(!gameId) }}\n          maskClosable={false}\n        >\n          <>\n            <Image\n              alt={gameInfo.title[language]}\n              src={`${PUBLIC_URL.BANNERS}${gameInfo.gameName}-${language}.jpg`}\n              fallback={`${PUBLIC_URL.BANNERS}/em-breve-${language}.jpg`}\n            />\n\n            <Options\n              options={gameInfo.options}\n              disabled={isLoading || Boolean(gameId)}\n              onChangeOptions={onChangeOptions}\n              selectedOptions={options}\n            />\n\n            <Divider />\n\n            {isLoading && (\n              <>\n                <Instruction>\n                  <Translate pt=\"O jogo está sendo criado...\" en=\"The game session is being created\" />\n                </Instruction>\n                <Loading message={translate('Gerando...', 'Generating...')} margin />\n              </>\n            )}\n\n            {gameInfo.version.startsWith('alpha') && (\n              <Alert\n                type=\"warning\"\n                showIcon\n                message={\n                  <Translate\n                    pt=\"Este jogo está em alpha, não o jogue\"\n                    en=\"This game is still in alpha and shouldn't be played\"\n                  />\n                }\n              />\n            )}\n\n            {gameInfo.version.startsWith('beta') && (\n              <Alert\n                type=\"warning\"\n                showIcon\n                message={\n                  <Translate\n                    pt=\"Este jogo está em beta, prossiga com cuidado\"\n                    en=\"This game is in beta and bugs might be everywhere\"\n                  />\n                }\n              />\n            )}\n\n            {Boolean(gameId) ? (\n              <div>\n                <Title className=\"center\">\n                  <Translate pt=\"Jogo inicializado\" en=\"Game Initialized\" />: {gameId}\n                </Title>\n                <Instruction>\n                  <Translate\n                    pt=\"Pressione OK para ser redirecionadx à página do jogo.\"\n                    en=\"Press OK to be redirected to the game page\"\n                  />\n                </Instruction>\n              </div>\n            ) : (\n              <Space className=\"space-container\" align=\"center\">\n                <Button type=\"primary\" size=\"large\" disabled={isLoading} onClick={createGame}>\n                  <Translate pt=\"Criar Jogo\" en=\"Create Game\" />\n                </Button>\n              </Space>\n            )}\n          </>\n        </Modal>\n      )}\n    </>\n  );\n}\n\ntype OptionsProps = {\n  options?: {\n    label: string;\n    key: string;\n    on?: string;\n    off?: string;\n  }[];\n  disabled: boolean;\n  onChangeOptions: GenericFunction;\n  selectedOptions: PlainObject;\n};\nfunction Options({ options, disabled, onChangeOptions, selectedOptions }: OptionsProps) {\n  return Boolean(options) ? (\n    <div className=\"create-game-modal-options\">\n      <Typography.Title level={5} className=\"create-game-modal-options__title\">\n        <Translate pt=\"Opções:\" en=\"Options:\" />\n      </Typography.Title>\n\n      {options!.map((option, index) => (\n        <Typography.Paragraph key={`option-${option.label}`} className=\"create-game-modal-options__option\">\n          <span className=\"create-game-modal-options__label\">{option.label}</span>\n          <span\n            className={clsx(\n              'create-game-modal-options__off',\n              !selectedOptions[option.key] && 'create-game-modal-options__selected'\n            )}\n          >\n            {option?.off ?? ''}\n          </span>\n          <Switch disabled={disabled} onChange={(e) => onChangeOptions(option.key, e)} />\n          <span\n            className={clsx(\n              'create-game-modal-options__on',\n              selectedOptions[option.key] && 'create-game-modal-options__selected'\n            )}\n          >\n            {option?.on ?? ''}\n          </span>\n        </Typography.Paragraph>\n      ))}\n    </div>\n  ) : (\n    <div className=\"create-game-modal-options create-game-modal-options__no-options\">\n      <Typography.Text>\n        <Translate pt=\"Este jogo não possui customizações\" en=\"This game does not support customizations\" />\n      </Typography.Text>\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Card, Image, Divider, Badge } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { PUBLIC_URL } from 'utils/constants';\nimport { calculateGameAverageDuration, truncateRecommended } from 'utils/helpers';\n// Components\nimport { RulesModal } from 'components/rules';\nimport { CreateGameModal } from './CreateGameModal';\nimport { GameTags } from 'components/general/GameTags';\nimport { ClockCircleOutlined } from '@ant-design/icons';\n\nconst getVersionColor = (version: string) => {\n  if (version.includes('dev')) {\n    return '#6cb3f6';\n  }\n\n  if (version.includes('alpha')) {\n    return '#F97659';\n  }\n\n  if (version.includes('beta')) {\n    return '#F9D859';\n  }\n\n  const major = Number(version.split('.')[0]);\n\n  if (isNaN(major)) {\n    return '#96A0A3';\n  }\n\n  if (major === 0) {\n    return '#F9D859';\n  }\n\n  if (major === 1) {\n    return '#72D984';\n  }\n\n  if (major === 2) {\n    return '#7CBD51';\n  }\n\n  if (major >= 3) {\n    return '#7CBD51';\n  }\n\n  return '#96A0A3';\n};\n\ntype GameCardProps = {\n  game: GameInfo;\n};\n\nexport function GameCard({ game }: GameCardProps) {\n  const { language, translate } = useLanguage();\n\n  const duration = calculateGameAverageDuration(game);\n\n  return (\n    <Card\n      key={game.gameName}\n      className=\"game-card\"\n      cover={\n        <Badge.Ribbon text={game.version} color={getVersionColor(game.version)}>\n          <Image\n            alt={game.title[language]}\n            src={`${PUBLIC_URL.BANNERS}${game.gameName}-${language}.jpg`}\n            fallback={`${PUBLIC_URL.BANNERS}/em-breve-${language}.jpg`}\n          />\n        </Badge.Ribbon>\n      }\n    >\n      <div className=\"game-card__contents\">\n        <Card.Meta\n          title={\n            <span className=\"game-card__title\" title={game.title[language]}>\n              [{game.gameCode}] {game.title[language]}\n            </span>\n          }\n          description={`${translate('Baseado em', 'Based on')} ${game.basedOn.split('').reverse().join('')}`}\n        />\n        <Card.Meta className=\"game-card__description\" description={game.summary[language]} />\n        {Boolean(game.rules?.[language]?.length > 1) && (\n          <RulesModal\n            gameInfo={game}\n            buttonProps={{ size: 'small', className: 'game-card__margin-bottom' }}\n          />\n        )}\n\n        <GameTags wrap size={[1, 6]} style={{ display: 'flex' }} gameCode={game.gameCode} tags={game.tags} />\n      </div>\n\n      <div className=\"game-card__actions\">\n        {game.duration && (\n          <Card.Meta\n            description={\n              <>\n                <ClockCircleOutlined /> {duration.min} min - {duration.max} min (Avg: {duration.ideal} min)\n              </>\n            }\n          />\n        )}\n\n        <Divider className=\"game-card__divider\" />\n\n        <Card.Meta\n          description={translate(\n            `Para ${game.playerCount.min}-${game.playerCount.max} jogadores`,\n            `For ${game.playerCount.min}-${game.playerCount.max} players`\n          )}\n        />\n\n        <Card.Meta\n          className=\"game-card__player-count\"\n          description={translate(\n            `Melhor com ${game.playerCount.best || '?'} jogadores`,\n            `Best wih ${game.playerCount.best || '?'} players`\n          )}\n        />\n\n        <Card.Meta\n          className=\"game-card__player-count game-card__margin-bottom\"\n          description={translate(\n            `Recomendado jogar com ${truncateRecommended(game.playerCount.recommended)}`,\n            `Recommended with ${truncateRecommended(game.playerCount.recommended)}`\n          )}\n        />\n\n        <div>{Boolean(game.available[language]) && <CreateGameModal gameInfo={game} />}</div>\n      </div>\n    </Card>\n  );\n}\n","import { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { Alert, Button, Modal } from 'antd';\nimport { useDevFeatures } from 'hooks/useDevFeatures';\nimport { useState } from 'react';\nimport { useEffectOnce } from 'react-use';\n\n/**\n * The emulator only properly works if using the local ip, to allow multi device testing\n * including mobile, this component will display an alert in case the current port is localhost\n */\nexport function DevEmulatorAlert() {\n  const { isDevEnv } = useDevFeatures();\n  const [stay, setStay] = useState(false);\n\n  const ip = process.env.REACT_APP_LOCAL_IP;\n  const displayDevWarningMessage = isDevEnv && window.location.hostname !== ip;\n  const { port, pathname, hash, protocol } = window.location;\n  const newPath = `${ip}:${port}${pathname}/${hash}`.replace('//', '/');\n  const emulatorUrl = `${protocol}//${newPath}`;\n\n  useEffectOnce(() => {\n    if (!stay && isDevEnv && displayDevWarningMessage) {\n      Modal.confirm({\n        title: 'Wrong Dev Environment',\n        icon: <ExclamationCircleOutlined />,\n        content: 'You are in a development environment and not using the emulator.',\n        okText: 'Switch Routes',\n        cancelText: 'Stay in Localhost',\n        onOk: () => {\n          setStay(true);\n          window.location.href = emulatorUrl;\n        },\n      });\n    }\n  });\n\n  if (!isDevEnv) return <></>;\n\n  return (\n    <>\n      {displayDevWarningMessage && (\n        <Alert\n          message={\n            <>\n              You are in a development environment and not using the emulator.{' '}\n              <Button href={emulatorUrl} type=\"link\">\n                Switch Routes\n              </Button>\n            </>\n          }\n          type=\"warning\"\n          showIcon\n          banner\n        />\n      )}\n    </>\n  );\n}\n","import { FilterOutlined } from '@ant-design/icons';\nimport { Checkbox, InputNumber, TreeSelect } from 'antd';\nimport { DefaultOptionType } from 'antd/lib/select';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { capitalize } from 'lodash';\nimport { useMemo } from 'react';\nimport { SEPARATOR, TAG_DICT } from 'utils/constants';\n\nconst { SHOW_PARENT } = TreeSelect;\n\ntype FiltersProps = {\n  setTagFilters: GenericFunction;\n  setNumberFilters: GenericFunction;\n  availabilityCount: number;\n};\nexport function Filters({ availabilityCount, setTagFilters, setNumberFilters }: FiltersProps) {\n  const onNumberFiltersUpdate = (key: string, value: number) => {\n    setNumberFilters((prevState: NumberDictionary) => ({\n      ...prevState,\n      [key]: value,\n    }));\n  };\n\n  return (\n    <div className=\"hub-filters\">\n      <FilterOutlined />({availabilityCount}){' '}\n      <div className=\"hub-filters__entry\">\n        <label>Players</label>\n        <InputNumber\n          min={2}\n          max={12}\n          size=\"small\"\n          className=\"hub-filters__input-number\"\n          onChange={(value) => onNumberFiltersUpdate('players', value ?? 0)}\n        />\n      </div>\n      <div className=\"hub-filters__entry\">\n        <label>Recommended with</label>\n        <Checkbox onChange={(e) => onNumberFiltersUpdate('recommendedWith', Number(e.target?.checked))} />\n      </div>\n      <div className=\"hub-filters__entry\">\n        <label>Best with</label>\n        <Checkbox onChange={(e) => onNumberFiltersUpdate('bestWith', Number(e.target?.checked))} />\n      </div>\n      <div className=\"hub-filters__entry\">\n        <label>Duration</label>\n        <InputNumber\n          min={15}\n          step={15}\n          size=\"small\"\n          className=\"hub-filters__input-number\"\n          onChange={(value) => onNumberFiltersUpdate('duration', value ?? 0)}\n        />\n      </div>\n      <div className=\"hub-filters__entry\">\n        <label>Tags</label>\n        <TagTreeSelect value={undefined} onTreeSelectChange={setTagFilters} />\n      </div>\n    </div>\n  );\n}\n\nfunction TagTreeSelect({ value, onTreeSelectChange }: any) {\n  const { dualTranslate } = useLanguage();\n\n  const onChange = (tags: string[]) => {\n    onTreeSelectChange(\n      tags\n      // .map((tag) => {\n      //   if (tag.includes(SEPARATOR)) {\n      //     return tag.split(SEPARATOR);\n      //   }\n      //   return tag;\n      // })\n      // .flat()\n    );\n  };\n\n  const treeData: DefaultOptionType[] = useMemo(\n    () =>\n      Object.values(\n        Object.keys(TAG_DICT).reduce((acc: any, tagKey: string) => {\n          const tagObj = TAG_DICT[tagKey];\n          if (acc[tagObj.group] === undefined) {\n            acc[tagObj.group] = {\n              title: capitalize(tagObj.group),\n              value: tagObj.group,\n              children: [],\n            };\n          }\n\n          acc[tagObj.group].children.push({\n            title: capitalize(dualTranslate(tagObj.label)),\n            value: `${tagObj.group}${SEPARATOR}${tagKey}`,\n          });\n\n          return acc;\n        }, {})\n      ),\n    [dualTranslate]\n  );\n\n  return (\n    <TreeSelect\n      treeData={treeData}\n      value={value}\n      onChange={onChange}\n      treeCheckable={true}\n      showCheckedStrategy={SHOW_PARENT}\n      placeholder=\"Select Game Tags\"\n      size=\"small\"\n      style={{\n        width: '100%',\n        minWidth: '400px',\n      }}\n    />\n  );\n}\n","import { useMemo, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useEffectOnce, useTitle } from 'react-use';\n// Ant Design Resources\nimport { Typography, Layout, Space, Divider, Button, message, Popconfirm } from 'antd';\nimport { DatabaseFilled } from '@ant-design/icons';\n// API\nimport { signOut } from 'services/firebase';\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLocalStorage } from 'hooks/useLocalStorage';\n// Utils\nimport GAME_LIST from 'utils/info';\n// Components\nimport { GameCard } from './components/GameCard';\nimport { LanguageSwitch, Translate } from 'components/language';\nimport { DevHeader } from 'pages/Dev/DevHeader';\nimport { DevEmulatorAlert } from './components/DevEmulatorAlert';\nimport { Filters } from './components/Filters';\nimport { SEPARATOR, TAG_RULES } from 'utils/constants';\nimport { calculateGameAverageDuration } from 'utils/helpers';\n\n// const TAGS_BY_TAG_GROUP = Object.keys(TAG_DICT).reduce((acc: Record<string, string[]>, key) => {\n//   if (acc[TAG_DICT[key].group] === undefined) {\n//     acc[TAG_DICT[key].group] = [];\n//   }\n//   acc[TAG_DICT[key].group].push(key);\n//   return acc;\n// }, {});\n\nfunction Hub() {\n  useTitle('Hub - Tarde Divertida');\n\n  const navigate = useNavigate();\n  const { language } = useLanguage();\n  const [getLocalStorage] = useLocalStorage();\n  const [, setLanguage] = useGlobalState('language');\n  const [, setIsAuthenticated] = useGlobalState('isAuthenticated');\n  const [tagFilters, setTagFilters] = useState<string[]>([]);\n  const [numberFilters, setNumberFilters] = useState<NumberDictionary>({});\n\n  useEffectOnce(() => {\n    const prevLanguage = getLocalStorage('language');\n    if (prevLanguage) {\n      setLanguage(prevLanguage);\n    }\n  });\n\n  const onSignOut = async () => {\n    try {\n      await signOut();\n      setIsAuthenticated(false);\n\n      navigate('/');\n    } catch (error: any) {\n      message.error('Something went wrong', error);\n    }\n  };\n\n  const gameList = useMemo(\n    () =>\n      Object.values(GAME_LIST).filter((game) => {\n        let result = [];\n\n        // Check player count\n        if (numberFilters.players) {\n          result.push(\n            game.playerCount.min <= numberFilters.players && game.playerCount.max >= numberFilters.players\n          );\n\n          if (numberFilters.bestWith) {\n            result.push(numberFilters.players === game.playerCount.best);\n          }\n\n          if (numberFilters.recommendedWith) {\n            result.push(game.playerCount.recommended.includes(numberFilters.players));\n          }\n        }\n\n        // Check tags\n        // TODO: this does not account for tagGroups and concurrent tags\n        tagFilters.forEach((tagKey) => {\n          const [tagGroup, tag] = tagKey.split(SEPARATOR);\n\n          if (tagGroup && tag && TAG_RULES?.[tagGroup] === 'exclusive') {\n            result.push(game.tags.includes(tag));\n          } else if (tag) {\n            result.push(game.tags.includes(tag));\n          }\n        });\n\n        // Check time\n        if (numberFilters.duration) {\n          const duration = calculateGameAverageDuration(game, numberFilters.players ?? 0);\n\n          if (numberFilters.players) {\n            result.push(\n              numberFilters.duration >= duration.customTime - 10 &&\n                numberFilters.duration <= duration.customTime + 10\n            );\n          } else {\n            result.push(numberFilters.duration >= duration.min && numberFilters.duration <= duration.max);\n          }\n        }\n\n        return result.every(Boolean);\n      }),\n    [tagFilters, numberFilters]\n  );\n\n  const { availableGames, comingSoonGames, devGames } = useMemo(() => {\n    const sortedGameList = gameList.sort((a, b) => (a.title[language] > b.title[language] ? 1 : -1));\n\n    return sortedGameList.reduce(\n      (acc: any, game) => {\n        if (game.available[language]) {\n          if (['alpha', 'dev'].includes(game.version) || game.version.startsWith('beta')) {\n            acc.devGames.push(game);\n          } else {\n            acc.availableGames.push(game);\n          }\n        } else {\n          acc.comingSoonGames.push(game);\n        }\n        return acc;\n      },\n      {\n        availableGames: [],\n        devGames: [],\n        comingSoonGames: [],\n      }\n    );\n  }, [gameList, language]);\n\n  return (\n    <Layout className=\"dev-layout\">\n      <DevHeader\n        title={\n          <>\n            <DatabaseFilled /> Hub\n          </>\n        }\n        subTitle={<Translate pt=\"Selecione um jogo para começar\" en=\"Select a game to start\" />}\n        extra={[\n          <LanguageSwitch key=\"language-switch\" />,\n          <Popconfirm\n            title={<Translate pt=\"Tem certeza?\" en=\"Are you sure?\" />}\n            onConfirm={onSignOut}\n            key=\"logout-button\"\n          >\n            <Button danger ghost key=\"logout-button\" size=\"small\">\n              Logout\n            </Button>\n          </Popconfirm>,\n        ]}\n      />\n\n      <DevEmulatorAlert />\n\n      <Filters\n        setTagFilters={setTagFilters}\n        setNumberFilters={setNumberFilters}\n        availabilityCount={availableGames.length}\n      />\n\n      <Layout.Content className=\"container\" id=\"main-container\">\n        <Space size={[8, 16]} wrap align=\"start\" className=\"game-card-collection\">\n          {availableGames.map((game: GameInfo, index: number) => (\n            <GameCard key={`${game.gameCode}-${index}`} game={game} />\n          ))}\n        </Space>\n        <Divider />\n        <Typography.Title level={2}>\n          <Translate pt=\"Em Desenvolvimento\" en=\"Under Development\" />\n        </Typography.Title>\n        <Space size={[8, 16]} wrap align=\"start\" className=\"game-card-collection\">\n          {devGames.map((game: GameInfo, index: number) => (\n            <GameCard key={`${game.gameCode}-${index}`} game={game} />\n          ))}\n        </Space>\n        <Divider />\n        <Typography.Title level={2}>\n          <Translate pt=\"Em Breve\" en=\"Coming Soon\" />\n        </Typography.Title>\n        <Space size={[8, 16]} wrap align=\"start\" className=\"game-card-collection\">\n          {comingSoonGames.map((game: GameInfo, index: number) => (\n            <GameCard key={`${game.gameCode}-${index}`} game={game} />\n          ))}\n        </Space>\n      </Layout.Content>\n    </Layout>\n  );\n}\n\nexport default Hub;\n","import { functions } from 'services/firebase';\nimport { httpsCallable } from 'firebase/functions';\n\nexport const GAME_API = {\n  loadGame: httpsCallable(functions, 'loadGame'),\n  addPlayer: httpsCallable(functions, 'addPlayer'),\n  makePlayerReady: httpsCallable(functions, 'makePlayerReady'),\n  rateGame: httpsCallable(functions, 'rateGame'),\n};\n\nexport const ADMIN_API = {\n  createGame: httpsCallable(functions, 'createGame'),\n  lockGame: httpsCallable(functions, 'lockGame'),\n  performAdminAction: httpsCallable(functions, 'performAdminAction'),\n};\n\nexport const ARTE_RUIM_API = {\n  submitAction: httpsCallable(functions, 'arteRuimSubmitAction'),\n};\n\nexport const CONTADORES_HISTORIAS_API = {\n  submitAction: httpsCallable(functions, 'contadoresHistoriasSubmitAction'),\n};\n\nexport const DETETIVES_IMAGINATIVOS_API = {\n  submitAction: httpsCallable(functions, 'detetivesImaginativosSubmitAction'),\n};\n\nexport const ESPIAO_ENTRE_NOS_API = {\n  submitAction: httpsCallable(functions, 'espiaoEntreNosSubmitAction'),\n};\n\nexport const GALERIA_DE_SONHOS_API = {\n  submitAction: httpsCallable(functions, 'galeriaDeSonhosSubmitAction'),\n};\n\nexport const CRIMES_HEDIONDOS_API = {\n  submitAction: httpsCallable(functions, 'crimesHediondosSubmitAction'),\n};\n\nexport const PORTA_DOS_DESESPERADOS = {\n  submitAction: httpsCallable(functions, 'portaDosDesesperadosSubmitAction'),\n};\n\nexport const LINHAS_CRUZADAS_API = {\n  submitAction: httpsCallable(functions, 'linhasCruzadasSubmitAction'),\n};\n\nexport const MENTE_COLETIVA_API = {\n  submitAction: httpsCallable(functions, 'menteColetivaSubmitAction'),\n};\n\nexport const NA_RUA_DO_MEDO_API = {\n  submitAction: httpsCallable(functions, 'naRuaDoMedoSubmitAction'),\n};\n\nexport const ONDA_TELEPATICA_API = {\n  submitAction: httpsCallable(functions, 'ondaTelepaticaSubmitAction'),\n};\n\nexport const POLEMICA_DA_VEZ_API = {\n  submitAction: httpsCallable(functions, 'polemicaDaVezSubmitAction'),\n};\n\nexport const QUEM_NAO_MATA_API = {\n  submitAction: httpsCallable(functions, 'quemNaoMataSubmitAction'),\n};\n\nexport const RETRATO_FALADO_API = {\n  submitAction: httpsCallable(functions, 'retratoFaladoSubmitAction'),\n};\n\nexport const SONHOS_PESADELOS_API = {\n  submitAction: httpsCallable(functions, 'sonhosPesadelosSubmitAction'),\n};\n\nexport const TESTEMUNHA_OCULAR_API = {\n  submitAction: httpsCallable(functions, 'testemunhaOcularSubmitAction'),\n};\n\nexport const UE_SO_ISSO_API = {\n  submitAction: httpsCallable(functions, 'ueSoIssoSubmitAction'),\n};\n\nexport const VENDAVAL_DE_PALPITE_API = {\n  submitAction: httpsCallable(functions, 'vendavalDePalpiteSubmitAction'),\n};\n\nexport const SUPER_CAMPEONATO_API = {\n  submitAction: httpsCallable(functions, 'superCampeonatoSubmitAction'),\n};\n\nexport const CRUZA_PALAVRAS_API = {\n  submitAction: httpsCallable(functions, 'cruzaPalavrasSubmitAction'),\n};\n\nexport const TREVO_DA_SORTE_API = {\n  submitAction: httpsCallable(functions, 'trevoDaSorteSubmitAction'),\n};\n"],"names":["GameTags","tags","gameCode","rest","language","useLanguage","sortedTags","forEach","tag","undefined","TAG_DICT","index","length","push","filter","v","Boolean","sortTags","wrap","map","color","label","CollapsibleRule","children","title","translate","contained","ghost","header","PopoverRule","content","showLabel","type","position","icon","ReadOutlined","pt","en","buttonProps","RulesCarousel","info","className","ruleClass","settings","prevArrow","DoubleLeftOutlined","nextArrow","DoubleRightOutlined","clsx","autoplay","autoplaySpeed","arrows","rules","rule","src","PUBLIC_URL","gameName","fallback","alt","RulesList","RulesModal","gameInfo","useState","isVisible","setVisibility","onCloseModal","onClick","open","onCancel","footer","useDevFeatures","useGlobalState","isDebugEnabled","setIsDebugEnabled","isDevEnv","toggleDevFeatures","s","updateLocal24hGameIds","latestGameIds","newId","now","Date","past24Hours","cleanedUpIds","Object","entries","reduce","acc","key","timestamp","LATEST_GAME_IDS","CreateGameModal","navigate","useNavigate","pathname","useLocation","useCopyToClipboard","state","copyToClipboard","setLoader","useLoading","useLocalStorage","getLocalStorage","setLocalStorage","isLoading","setLoading","gameId","setGameId","setUserId","setUserName","setUserAvatarId","options","setOptions","useEffect","value","message","useCallback","createGame","ADMIN_API","response","data","baseUrl","window","location","href","split","notification","description","JSON","stringify","placement","console","error","block","onOk","okButtonProps","disabled","maskClosable","Options","onChangeOptions","selectedOptions","margin","version","startsWith","showIcon","align","size","level","option","off","onChange","e","on","getVersionColor","includes","major","Number","isNaN","GameCard","game","duration","calculateGameAverageDuration","cover","text","basedOn","reverse","join","summary","style","display","ClockCircleOutlined","min","max","ideal","playerCount","best","truncateRecommended","recommended","available","DevEmulatorAlert","stay","setStay","ip","process","displayDevWarningMessage","hostname","port","hash","protocol","newPath","replace","emulatorUrl","useEffectOnce","Modal","ExclamationCircleOutlined","okText","cancelText","banner","SHOW_PARENT","TreeSelect","Filters","availabilityCount","setTagFilters","setNumberFilters","onNumberFiltersUpdate","prevState","FilterOutlined","target","checked","step","TagTreeSelect","onTreeSelectChange","dualTranslate","treeData","useMemo","values","keys","tagKey","tagObj","group","capitalize","SEPARATOR","treeCheckable","showCheckedStrategy","placeholder","width","minWidth","useTitle","setLanguage","setIsAuthenticated","tagFilters","numberFilters","prevLanguage","onSignOut","signOut","gameList","GAME_LIST","result","players","bestWith","recommendedWith","tagGroup","TAG_RULES","customTime","every","sort","a","b","devGames","availableGames","comingSoonGames","DevHeader","DatabaseFilled","subTitle","extra","onConfirm","danger","id","GAME_API","loadGame","httpsCallable","functions","addPlayer","makePlayerReady","rateGame","lockGame","performAdminAction","ARTE_RUIM_API","submitAction","CONTADORES_HISTORIAS_API","DETETIVES_IMAGINATIVOS_API","ESPIAO_ENTRE_NOS_API","GALERIA_DE_SONHOS_API","CRIMES_HEDIONDOS_API","PORTA_DOS_DESESPERADOS","LINHAS_CRUZADAS_API","MENTE_COLETIVA_API","NA_RUA_DO_MEDO_API","ONDA_TELEPATICA_API","POLEMICA_DA_VEZ_API","QUEM_NAO_MATA_API","RETRATO_FALADO_API","SONHOS_PESADELOS_API","TESTEMUNHA_OCULAR_API","UE_SO_ISSO_API","VENDAVAL_DE_PALPITE_API","SUPER_CAMPEONATO_API","CRUZA_PALAVRAS_API","TREVO_DA_SORTE_API"],"sourceRoot":""}