{"version":3,"file":"static/js/page-dev-sprites.70d4c25a.chunk.js","mappings":"2LAGO,SAASA,IAAqE,IAAtDC,EAAqD,uDAAJ,CAAC,EAC/E,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAOMC,EAAM,SAACC,EAAaC,QACVC,IAAVD,EACFJ,EAAaM,OAAOH,GAEpBH,EAAaO,IAAIJ,EAAKK,OAAOJ,IAG/BH,EAAgBD,EACjB,EAMKS,EAAS,SAACN,GACdH,EAAaM,OAAOH,GACpBF,EAAgBD,EACjB,GAEDU,EAAAA,EAAAA,YAAU,WACRC,OAAOC,QAAQd,GAAee,SAAQ,YAAmB,IAAD,eAAhBV,EAAgB,KAAXC,EAAW,KACjDJ,EAAac,IAAIX,IACpBD,EAAIC,EAAKC,EAEZ,GACF,GAAE,IAEH,IAAMW,EAAcf,EACjBgB,WACAC,MAAM,KACNC,QAAO,SAACC,EAA4BC,GACnC,MAAqBA,EAAMH,MAAM,KAAjC,eAAOd,EAAP,KAAYC,EAAZ,KAIA,OAHID,QAAiBE,IAAVD,IACTe,EAAGhB,GAAOC,GAELe,CACR,GAAE,CAAC,GAEN,MAAO,CACLjB,IAAAA,EACAO,OAAAA,EACAM,YAAAA,EAEH,C,wGCnDM,SAASM,IACd,IAAQC,GAAaC,EAAAA,EAAAA,MAAbD,SACFE,GAAWC,EAAAA,EAAAA,MAEXC,EAAU,CACd,CAAEC,MAAO,OAAQvB,MAAO,IAAKwB,SAAuB,MAAbN,GACvC,CAAEK,MAAO,MAAOvB,MAAO,OAAQwB,SAAuB,SAAbN,GACzC,CAAEK,MAAO,QAASvB,MAAO,aAAcwB,SAAuB,eAAbN,GACjD,CAAEK,MAAO,SAAUvB,MAAO,cAAewB,SAAuB,gBAAbN,GACnD,CAAEK,MAAO,UAAWvB,MAAO,eAAgBwB,SAAuB,iBAAbN,GACrD,CAAEK,MAAO,YAAavB,MAAO,iBAAkBwB,SAAuB,mBAAbN,GACzD,CAAEK,MAAO,aAAcvB,MAAO,kBAAmBwB,SAAuB,oBAAbN,GAC3D,CAAEK,MAAO,WAAYvB,MAAO,YAAawB,SAAuB,cAAbN,IAOrD,OAAO,SAAC,IAAD,CAAWI,QAASA,EAASG,aAAcP,EAAUQ,SAJzC,SAACC,GAClBP,EAASO,EACV,GAGF,CCXM,SAASC,EAAT,GAAgE,IAA3CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,MAC3C,OACE,mBAAQC,UAAU,aAAlB,UACE,iBAAKA,UAAU,sBAAf,WACE,iBAAKA,UAAU,mBAAf,WACE,kBAAMA,UAAU,oBAAhB,UAAqCH,EAArC,QACA,iBAAMG,UAAU,uBAAhB,SAAwCF,QAE1C,iBAAKE,UAAU,oBAAf,WACE,SAAC,IAAD,CAAOA,UAAU,0BAA0BC,MAAI,EAA/C,SACGF,KAEH,SAACd,EAAD,WAKT,C,yRC3BYiB,GAAaC,E,OAAAA,SAAQ,CAChC,mBACA,iBACA,aACA,aACA,eACA,cACA,eACA,kBACA,mBACA,WACA,aACA,SACA,iBACA,QACA,QACA,QACA,QACA,MACA,QACA,OACA,OACA,UACA,WACA,OACA,QACA,MACA,QACA,eACA,cACA,eACA,eACA,gBACA,gBACA,SACA,QACA,OACA,aACA,OACA,QACA,SACA,aACA,SACA,OACA,aACA,WACA,SACA,SACA,OACA,oBACA,oBACA,qBACA,kBACA,WACA,YACA,QACA,mBACA,MACA,aACA,cACA,YACA,mBACA,cACA,wBACA,YACA,aACA,iBACA,cACA,eACA,cACA,gBACA,aACA,aACA,OACA,SACA,cACA,OACA,UACA,iBACA,QACA,OACA,QACA,QACA,eACA,MACA,aACA,OACA,OACA,QACA,YACA,OACA,MACA,YACA,QACA,cACA,SACA,SACA,SACA,OACA,SACA,gBACA,UACA,QACA,aACA,SACA,QACA,QACA,QACA,cACA,SACA,OACA,YACA,MACA,QACA,QACA,SACA,SACA,UACA,cACA,YACA,OACA,IACA,S,uDC3FIb,EAAwC,CAC5Cc,QAAS,CACPrC,IAAK,UACLwB,MAAO,UACPc,OAAQ,SACRC,SAAU,GACVP,MAAO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KACjCQ,QAAS,GAEXC,MAAO,CACLzC,IAAK,QACLwB,MAAO,QACPc,OAAQ,aACRC,SAAU,GACVC,QAAS,GAEXE,SAAU,CACR1C,IAAK,WACLwB,MAAO,WACPc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","sources":["hooks/useQueryParams.ts","pages/Dev/DevMenu.tsx","pages/Dev/DevHeader.tsx","pages/Dev/utils/constants.ts","pages/Dev/Sprites.tsx","../node_modules/antd/es/col/index.js","../node_modules/antd/es/row/index.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport function useQueryParams(defaultParams: Record<string, string | number> = {}) {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  /**\n   * Adds a query param\n   * @param key - the key of the query param to add\n   * @param value - the value of the query param to add\n   */\n  const add = (key: string, value: unknown) => {\n    if (value === undefined) {\n      searchParams.delete(key);\n    } else {\n      searchParams.set(key, String(value));\n    }\n\n    setSearchParams(searchParams);\n  };\n\n  /**\n   * Removes a query param\n   * @param key - the key of the query param to remove\n   */\n  const remove = (key: string) => {\n    searchParams.delete(key);\n    setSearchParams(searchParams);\n  };\n\n  useEffect(() => {\n    Object.entries(defaultParams).forEach(([key, value]) => {\n      if (!searchParams.has(key)) {\n        add(key, value);\n      }\n    });\n  }, []); // eslint-disable-line\n\n  const queryParams = searchParams\n    .toString()\n    .split('&')\n    .reduce((qp: Record<string, string>, entry) => {\n      const [key, value] = entry.split('=');\n      if (key && value !== undefined) {\n        qp[key] = value;\n      }\n      return qp;\n    }, {});\n\n  return {\n    add,\n    remove,\n    queryParams,\n  };\n}\n","import { Segmented } from 'antd';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nexport function DevMenu() {\n  const { pathname } = useLocation();\n  const navigate = useNavigate();\n\n  const options = [\n    { label: 'Home', value: '/', disabled: pathname === '/' },\n    { label: 'Hub', value: '/hub', disabled: pathname === '/hub' },\n    { label: 'Icons', value: '/dev/icons', disabled: pathname === '/dev/icons' },\n    { label: 'Colors', value: '/dev/colors', disabled: pathname === '/dev/colors' },\n    { label: 'Sprites', value: '/dev/sprites', disabled: pathname === '/dev/sprites' },\n    { label: 'Resources', value: '/dev/resources', disabled: pathname === '/dev/resources' },\n    { label: 'Playground', value: '/dev/playground', disabled: pathname === '/dev/playground' },\n    { label: 'Showcase', value: '/showcase', disabled: pathname === '/showcase' },\n  ];\n\n  const onNavigate = (path: any) => {\n    navigate(path);\n  };\n\n  return <Segmented options={options} defaultValue={pathname} onChange={onNavigate} />;\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { Space } from 'antd';\n// Components\nimport { DevMenu } from './DevMenu';\n\ntype DevHeaderProps = {\n  title: ReactNode;\n  subTitle?: ReactNode;\n  extra?: ReactNode;\n};\n\nexport function DevHeader({ title, subTitle, extra }: DevHeaderProps) {\n  return (\n    <header className=\"dev-header\">\n      <div className=\"dev-header__heading\">\n        <div className=\"dev-header__left\">\n          <span className=\"dev-header__title\">{title} </span>\n          <span className=\"dev-header__subtitle\">{subTitle}</span>\n        </div>\n        <div className=\"dev-header__extra\">\n          <Space className=\"dev-header__extra-space\" wrap>\n            {extra}\n          </Space>\n          <DevMenu />\n        </div>\n      </div>\n    </header>\n  );\n}\n","import { orderBy } from 'lodash';\n\nexport const MEDALS_IDS = orderBy([\n  'arrow-curve-down',\n  'arrow-curve-up',\n  'arrow-down',\n  'arrow-left',\n  'arrow-narrow',\n  'arrow-right',\n  'arrow-rotate',\n  'arrow-sign-left',\n  'arrow-sign-right',\n  'arrow-up',\n  'arrow-wide',\n  'arrows',\n  'arrows-reverse',\n  'scale',\n  'alien',\n  'loupe',\n  'trash',\n  'two',\n  'three',\n  'four',\n  'five',\n  'thought',\n  'yin-yang',\n  'bell',\n  'block',\n  'box',\n  'brain',\n  'broken-arrow',\n  'broken-bulb',\n  'broken-chain',\n  'broken-heart',\n  'broken-pencil',\n  'broken-shield',\n  'bullet',\n  'candy',\n  'card',\n  'check-mark',\n  'chip',\n  'clock',\n  'clover',\n  'controller',\n  'dialog',\n  'dice',\n  'difference',\n  'distance',\n  'dollar',\n  'donkey',\n  'door',\n  'double-arrow-down',\n  'double-arrow-left',\n  'double-arrow-right',\n  'double-arrow-up',\n  'ellipsis',\n  'empty-box',\n  'equal',\n  'exclamation-mark',\n  'eye',\n  'face-angry',\n  'face-crying',\n  'face-dead',\n  'face-embarrassed',\n  'face-fed-up',\n  'face-mental-breakdown',\n  'face-oops',\n  'face-panic',\n  'face-perplexed',\n  'face-scared',\n  'face-shocked',\n  'face-smiley',\n  'face-surprise',\n  'face-tense',\n  'face-tired',\n  'fire',\n  'flower',\n  'foot-prints',\n  'gear',\n  'glasses',\n  'graph-increase',\n  'guide',\n  'hare',\n  'heart',\n  'house',\n  'intersection',\n  'lie',\n  'light-bulb',\n  'list',\n  'mask',\n  'minus',\n  'money-bag',\n  'moon',\n  'one',\n  'open-book',\n  'paint',\n  'paint-brush',\n  'pencil',\n  'people',\n  'person',\n  'plus',\n  'puzzle',\n  'question-mark',\n  'recycle',\n  'robot',\n  'sand-timer',\n  'shield',\n  'siren',\n  'skull',\n  'snail',\n  'speedometer',\n  'spiral',\n  'star',\n  'stopwatch',\n  'sun',\n  'sword',\n  'table',\n  'target',\n  'tetris',\n  'theater',\n  'thumbs-down',\n  'thumbs-up',\n  'tree',\n  'x',\n  'zero',\n]);\n","import { useTitle } from 'react-use';\nimport { Link } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n// Ant Design Resources\nimport { Col, Divider, Layout, Row, Select } from 'antd';\n// Hooks\nimport { useQueryParams } from 'hooks/useQueryParams';\n// Utils\nimport { AVAILABLE_AVATAR_IDS, AVATARS } from 'utils/avatars';\nimport { makeArray } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { SheepAvatar } from 'games/mente-coletiva/components/SheepAvatar';\nimport { CostumeAvatar } from 'games/na-rua-do-medo/components/CostumeAvatar';\nimport { ClubberAvatar } from 'games/megamix/components/ClubberAvatar';\nimport { GlyphCard } from 'components/cards/GlyphCard';\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { DevHeader } from './DevHeader';\nimport { MEDALS_IDS } from './utils/constants';\nimport { Medal } from 'components/general/Medal';\nimport { TreeCard } from 'components/cards/TreeCard';\nimport { SuperHeroAvatar } from 'components/avatars/SuperHeroAvatar';\nimport { EmojiCard } from 'components/cards/EmojiCard';\n\ntype SpriteOption = {\n  key: string;\n  label: string;\n  prefix: string;\n  quantity: number;\n  extra?: string[];\n  startAt: number;\n};\n\nconst options: Record<string, SpriteOption> = {\n  avatars: {\n    key: 'avatars',\n    label: 'Avatars',\n    prefix: 'avatar',\n    quantity: 50,\n    extra: ['A', 'B', 'C', 'D', 'E', 'N'],\n    startAt: 0,\n  },\n  sheep: {\n    key: 'sheep',\n    label: 'Sheep',\n    prefix: 'sheep-face',\n    quantity: 25,\n    startAt: 0,\n  },\n  costumes: {\n    key: 'costumes',\n    label: 'Costumes',\n    prefix: 'costume',\n    quantity: 25,\n    startAt: 0,\n  },\n  clubbers: {\n    key: 'clubbers',\n    label: 'Clubbers',\n    prefix: 'clubber',\n    quantity: 60,\n    startAt: 0,\n  },\n  'super-heroes': {\n    key: 'super-heroes',\n    label: 'Super Heroes',\n    prefix: 'super-hero',\n    quantity: 50,\n    startAt: 1,\n  },\n  glyphs: {\n    key: 'glyphs',\n    label: 'Glyphs',\n    prefix: 'glyph',\n    quantity: 365,\n    startAt: 1,\n  },\n  items: {\n    key: 'items',\n    label: 'Items',\n    prefix: 'item',\n    quantity: 450,\n    startAt: 1,\n  },\n  trees: {\n    key: 'trees',\n    label: 'Trees',\n    prefix: 'tree',\n    quantity: 15,\n    startAt: 1,\n  },\n  emojis: {\n    key: 'emojis',\n    label: 'Emojis',\n    prefix: 'emoji',\n    quantity: 30,\n    startAt: 1,\n  },\n  medals: {\n    key: 'medals',\n    label: 'Medals',\n    prefix: 'medal',\n    quantity: 100,\n    startAt: 1,\n  },\n};\n\nfunction SpritesPage() {\n  const [active, setActive] = useState(options.avatars);\n  useTitle(`${active.label} Sprites | Dev | Tarde Divertida`);\n  const qp = useQueryParams({ active: 'avatars' });\n\n  useEffect(() => {\n    setActive(options[qp.queryParams.active] ?? options.avatars);\n  }, [qp.queryParams.active]);\n\n  const activeContent = {\n    avatars: <AvatarsContent />,\n    glyphs: <GlyphsContent />,\n    items: <ItemsContent />,\n    medals: <MedalsContent />,\n    trees: <TreeContent />,\n    emojis: <EmojisContent />,\n  }?.[active.key] ?? <Content type={active.key} />;\n\n  return (\n    <Layout className=\"dev-layout\">\n      <DevHeader\n        title={\n          <Select\n            onChange={(e) => qp.add('active', e)}\n            value={qp.queryParams.active}\n            size=\"small\"\n            style={{ minWidth: '15ch' }}\n          >\n            {Object.values(options).map((option) => (\n              <Select.Option value={option.key} key={option.key}>\n                {option.label}\n              </Select.Option>\n            ))}\n          </Select>\n        }\n        subTitle={\n          <>\n            ({active.quantity}){active.key === 'items' && <Link to=\"/dev/classifier\"> Classifier</Link>}\n          </>\n        }\n      />\n      <Layout.Content className=\"dev-content\">{activeContent}</Layout.Content>\n    </Layout>\n  );\n}\n\nfunction AvatarsContent() {\n  const AI_AVATARS = Object.keys(AVATARS).filter((id) => !AVAILABLE_AVATAR_IDS.includes(id));\n\n  return (\n    <>\n      <ul className=\"sprites__grid-5\">\n        {AVAILABLE_AVATAR_IDS.map((avatarId) => {\n          const avatar = AVATARS[avatarId];\n          return (\n            <li\n              key={avatar.id}\n              className=\"sprites__avatar-grid-item\"\n              style={{ backgroundColor: avatar.color }}\n            >\n              <div style={{ overflow: 'hidden', textAlign: 'center' }}>[{avatar.id}]</div>\n              <Avatar id={avatar.id} size={64} />\n              <div style={{ overflow: 'hidden', textAlign: 'center' }}>\n                <p>\n                  {avatar.description.en}\n                  <br />\n                  {avatar.description.pt}\n                </p>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n      <Divider />\n      <ul className=\"sprites__grid-5\">\n        {AI_AVATARS.map((avatarId) => {\n          const avatar = AVATARS[avatarId];\n          return (\n            <li\n              key={avatar.id}\n              className=\"sprites__avatar-grid-item\"\n              style={{ backgroundColor: avatar.color }}\n            >\n              <Avatar id={avatar.id} size={64} />\n              <div style={{ overflow: 'hidden', textAlign: 'center' }}>\n                <p>\n                  {avatar.description.en}\n                  <br />\n                  {avatar.description.pt}\n                </p>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n\nfunction Content({ type }: { type: string }) {\n  const { quantity, startAt } = options[type];\n\n  const ids = makeArray(quantity, startAt);\n\n  return (\n    <ul className=\"sprites__flex\">\n      {ids.map((id) => {\n        return (\n          <li key={`content-${id}`} className=\"sprites__flex-item\">\n            {type === 'sheep' && <SheepAvatar sheepId={String(id)} id=\"A\" />}\n            {type === 'costumes' && <CostumeAvatar costumeId={String(id)} id=\"A\" />}\n            {type === 'clubbers' && <ClubberAvatar clubberId={String(id)} id=\"A\" />}\n            {type === 'super-heroes' && <SuperHeroAvatar superHeroId={String(id)} id=\"A\" />}\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction ItemsContent() {\n  const { quantity, startAt } = options.items;\n\n  const ids = makeArray(quantity, startAt);\n\n  return (\n    <ul className=\"sprites__flex\">\n      {ids.map((id) => {\n        return (\n          <li key={`items-${id}`} className=\"sprites__flex-item\">\n            <ItemCard id={String(id)} />\n            {id}\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction EmojisContent() {\n  const { quantity, startAt } = options.emojis;\n\n  const ids = makeArray(quantity, startAt);\n\n  return (\n    <ul className=\"sprites__flex\">\n      {ids.map((id) => {\n        return (\n          <li key={`items-${id}`} className=\"sprites__flex-item\">\n            <EmojiCard id={String(id)} />\n            {id}\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction GlyphsContent() {\n  const { quantity, startAt } = options.glyphs;\n\n  const ids = makeArray(quantity, startAt);\n\n  return (\n    <ul className=\"sprites__flex\">\n      {ids.map((id) => {\n        return (\n          <li key={`costume-${id}`} className=\"sprites__flex-item\">\n            <GlyphCard id={String(id)} />\n            {id}\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction MedalsContent() {\n  return (\n    <Row gutter={8}>\n      {MEDALS_IDS.map((id) => {\n        return (\n          <Col xs={6} sm={6} md={4} lg={4} xl={2} key={`medal-${id}`} className=\"sprites__col\">\n            <Medal id={String(id)} width={100} />\n            {id}\n          </Col>\n        );\n      })}\n    </Row>\n  );\n}\n\nfunction TreeContent() {\n  const { quantity, startAt } = options.trees;\n\n  const ids = makeArray(quantity, startAt);\n\n  return (\n    <ul className=\"sprites__flex\">\n      {ids.map((id) => {\n        return (\n          <li key={`tree-${id}`} className=\"sprites__flex-item\">\n            <TreeCard id={String(id)} />\n            {id}\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default SpritesPage;\n","\"use client\";\n\nimport { Col } from '../grid';\nexport default Col;","\"use client\";\n\nimport { Row } from '../grid';\nexport default Row;"],"names":["useQueryParams","defaultParams","useSearchParams","searchParams","setSearchParams","add","key","value","undefined","delete","set","String","remove","useEffect","Object","entries","forEach","has","queryParams","toString","split","reduce","qp","entry","DevMenu","pathname","useLocation","navigate","useNavigate","options","label","disabled","defaultValue","onChange","path","DevHeader","title","subTitle","extra","className","wrap","MEDALS_IDS","orderBy","avatars","prefix","quantity","startAt","sheep","costumes","clubbers","glyphs","items","trees","emojis","medals","AvatarsContent","AI_AVATARS","keys","AVATARS","filter","id","AVAILABLE_AVATAR_IDS","avatarId","avatar","style","backgroundColor","color","overflow","textAlign","size","description","en","pt","map","Content","type","ids","makeArray","SheepAvatar","sheepId","CostumeAvatar","costumeId","ClubberAvatar","clubberId","SuperHeroAvatar","superHeroId","ItemsContent","ItemCard","EmojisContent","EmojiCard","GlyphsContent","GlyphCard","MedalsContent","gutter","xs","sm","md","lg","xl","Medal","width","TreeContent","TreeCard","useState","active","setActive","useTitle","activeContent","e","minWidth","values","option","to","Col","Row"],"sourceRoot":""}