{"version":3,"file":"static/js/na-rua-do-medo.2c6a5330.chunk.js","mappings":"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","sources":["components/avatars/CustomAvatarWrapper.tsx","components/general/Achievements.tsx","assets/images/round-title-en.svg","assets/images/round-title-pt.svg","components/round/RoundAnnouncement.tsx","games/na-rua-do-medo/utils/api-requests.ts","games/na-rua-do-medo/utils/mock.ts","games/na-rua-do-medo/components/PlayerStats.tsx","games/na-rua-do-medo/components/Highlights.tsx","games/na-rua-do-medo/components/RulesBlobs.tsx","games/na-rua-do-medo/components/Street.tsx","games/na-rua-do-medo/components/PlayersDecisionState.tsx","games/na-rua-do-medo/components/NewHouseCard.tsx","games/na-rua-do-medo/StepMakeDecision.tsx","games/na-rua-do-medo/PhaseTrickOrTreat.tsx","games/na-rua-do-medo/StepResult.tsx","games/na-rua-do-medo/PhaseResult.tsx","games/na-rua-do-medo/StepStreetEnd.tsx","games/na-rua-do-medo/PhaseStreetEnd.tsx","games/na-rua-do-medo/utils/constants.ts","games/na-rua-do-medo/PhaseGameOver.tsx","games/na-rua-do-medo/SessionNaRuaDoMedo.tsx","games/na-rua-do-medo/components/CandyCount.tsx","games/na-rua-do-medo/components/HouseCard.tsx","games/na-rua-do-medo/utils/achievements.ts","icons/QuestionIcon.tsx"],"sourcesContent":["import clsx from 'clsx';\n// Images\nimport avatars from 'assets/images/avatars.svg';\n// Utils\nimport { AVATARS } from 'utils/avatars';\n// Sass\nimport './ClubberAvatar.scss';\n\nexport type CustomAvatarProps = {\n  /**\n   * The avatarId id\n   */\n  id: string;\n  /**\n   * The avatar id\n   */\n  avatarId?: string;\n  /**\n   * Should animate? (@default: false)\n   */\n  animate?: boolean;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Optional custom width (@default: 60)\n   */\n  width?: number;\n} & React.SVGProps<SVGSVGElement>;\n\ntype CustomAvatarWrapperProps = {\n  /**\n   * The svg sprite collection\n   */\n  sprite: string;\n  /**\n   * The prefix the accompanies the sprite number id (clubber-, super-hero-)\n   */\n  prefix: string;\n  /**\n   * ViewBox overRider when sprites are in a different size then 512x512\n   */\n  viewBox?: string;\n} & CustomAvatarProps;\n\nexport const CustomAvatarWrapper = ({\n  sprite,\n  prefix,\n  id,\n  avatarId,\n  animate = false,\n  className = '',\n  width = 60,\n  viewBox,\n  ...props\n}: CustomAvatarWrapperProps) => {\n  const avatarData = AVATARS?.[avatarId ?? 0];\n  const hasAvatar = Boolean(avatarId);\n\n  return (\n    <svg\n      viewBox={`0 0 100 ${hasAvatar ? 200 : 100}`}\n      className={clsx(`${prefix}-avatar`, animate && `${prefix}-avatar--animated`, className)}\n      style={{\n        animationDuration: `${500 + (Math.random() + Number(id)) * 53}ms`,\n        width: `${width}px`,\n      }}\n      {...props}\n    >\n      {/* pin */}\n      {hasAvatar && (\n        <path\n          fill={avatarData.color}\n          d=\"M75 25a25 25 0 00-50 0 24.89 24.89 0 005.67 15.85 26.4 26.4 0 002.53 2.65L50 61.12l16.78-17.59a26.4 26.4 0 002.53-2.65A24.89 24.89 0 0075 25z\"\n        ></path>\n      )}\n\n      {/* content */}\n      <svg viewBox={viewBox ?? '0 0 512 512'}>\n        <use href={sprite + `#${prefix}-${id}`}></use>\n      </svg>\n\n      {/* game avatar */}\n      {hasAvatar && (\n        <foreignObject x=\"25\" y=\"0\" width=\"50\" height=\"50\" style={{ borderRadius: '50%' }}>\n          <svg viewBox=\"0 0 100 100\">\n            <use href={avatars + `#avatar-${avatarId}`}></use>\n          </svg>\n        </foreignObject>\n      )}\n    </svg>\n  );\n};\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Popover } from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\n// Types\nimport type { GamePlayers } from 'types/player';\nimport type { Achievement, AchievementReference } from 'types/achievements';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { DualTranslate, Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { Medal } from './Medal';\n\ntype AchievementsProps = {\n  players: GamePlayers;\n  achievements: Achievement[];\n  reference: AchievementReference;\n};\n\nconst unknownText = { pt: 'Desconhecido', en: 'Unknown' };\n\nexport function Achievements({ players, achievements, reference }: AchievementsProps) {\n  if (achievements.length === 0) return <></>;\n\n  return (\n    <div className={clsx('achievements', getAnimationClass('fadeIn'))}>\n      <Title size=\"small\" level={3}>\n        <Translate pt=\"Medalhas\" en=\"Achievements\" />\n      </Title>\n      <ul className=\"achievements-list\">\n        {achievements.map((achievement, index) => {\n          const { icon = 'star', ...achievementObj } = reference[achievement.type] ?? {};\n          const player = players[achievement.playerId];\n          return (\n            <li\n              key={`achievement-${achievement.type}`}\n              className={clsx(\n                'achievements-entry',\n                getAnimationClass('flipInY', {\n                  delay: index < achievements.length / 2 ? index : achievements.length - 1 - index,\n                })\n              )}\n            >\n              <div className=\"achievement__medal\">\n                <Medal id={icon} />\n              </div>\n              <h4 className=\"achievement__title\">\n                <DualTranslate>{achievementObj.title ?? unknownText}</DualTranslate>\n              </h4>\n              <div className=\"achievement__avatar\">\n                <Avatar id={player.avatarId} />\n              </div>\n              <div className=\"achievement__name\">{player.name}</div>\n              {Boolean(achievementObj.description) && (\n                <div className=\"achievement__description\">\n                  <Popover\n                    content={\n                      <>\n                        <DualTranslate>{achievementObj.description ?? unknownText}</DualTranslate> (\n                        {achievement.value})\n                      </>\n                    }\n                  >\n                    <Button icon={<QuestionCircleOutlined />} shape=\"circle\" type=\"text\" size=\"small\" />\n                  </Popover>\n                </div>\n              )}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","var _style, _g, _g2, _g3, _g4, _g5, _g6, _g7, _g8;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRoundTitleEn(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 130 50\",\n    style: {\n      enableBackground: \"new 0 0 130 50\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:#9EC5E7;}\\n\\t.st1{fill:#FFFFFF;}\\n\\t.st2{fill:#3A7CA5;}\\n\\t.st3{fill:#44BBA4;}\\n\\t.st4{fill:#F2E863;}\\n\\t.st5{fill:#F45B69;}\\n\\t.st6{fill:#E6E6F5;}\\n\\t.st7{display:none;}\\n\\t.st8{display:inline;}\\n\\t.st9{display:inline;fill:none;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st10{fill:#DA70D6;}\\n\\t.st11{fill:#008080;}\\n\\t.st12{fill:#D2691E;}\\n\\t.st13{fill:#4682B4;}\\n\\t.st14{fill:#B22222;}\\n\\t.st15{fill:#DFB231;}\\n\\t.st16{fill:#FF6347;}\\n\\t.st17{fill:#9370DB;}\\n\\t.st18{fill:#3C58AC;}\\n\\t.st19{fill:#7CC44F;}\\n\\t.st20{fill:#040303;}\\n\\t.st21{fill:#FCBF00;}\\n\\t.st22{fill:#D70027;}\\n\\t.st23{fill:#EA384D;}\\n\\t.st24{fill:#BFB8B8;}\\n\\t.st25{fill:#F8EFEF;}\\n\\t.st26{fill:#FE2A25;}\\n\\t.st27{fill:#FE9A00;}\\n\\t.st28{fill:#FEE901;}\\n\\t.st29{fill:#FEF6A5;}\\n\\t.st30{fill:#FEF05C;}\\n\\t.st31{fill:#FEFDFD;}\\n\\t.st32{fill:url(#SVGID_1_);}\\n\\t.st33{fill:#D40000;}\\n\\t.st34{clip-path:url(#SVGID_3_);}\\n\\t.st35{fill:url(#SVGID_4_);}\\n\\t.st36{clip-path:url(#SVGID_6_);}\\n\\t.st37{fill:url(#SVGID_7_);}\\n\\t.st38{fill:#008C72;}\\n\\t.st39{clip-path:url(#SVGID_9_);}\\n\\t.st40{clip-path:url(#SVGID_11_);}\\n\\t.st41{clip-path:url(#SVGID_13_);}\\n\\t.st42{clip-path:url(#SVGID_15_);}\\n\\t.st43{clip-path:url(#SVGID_17_);}\\n\\t.st44{clip-path:url(#SVGID_19_);}\\n\\t.st45{fill:#575757;}\\n\\t.st46{clip-path:url(#SVGID_21_);}\\n\\t.st47{fill:url(#SVGID_22_);}\\n\\t.st48{fill:none;stroke:#FFFFFF;stroke-miterlimit:10;}\\n\\t.st49{display:inline;fill:#5C3400;}\\n\\t.st50{fill:none;}\\n\\t.st51{fill:#5C3400;}\\n\\t.st52{display:inline;fill:none;}\\n\\t.st53{display:inline;fill:#FFFFFF;}\\n\\t.st54{display:none;fill:#FFFFFF;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st55{display:inline;fill:#FFFFFF;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st56{display:none;fill:#F2F25F;}\\n\\t.st57{display:inline;fill:#F2F2F2;}\\n\\t.st58{display:inline;fill:#E6E6E6;}\\n\\t.st59{display:inline;fill:#808080;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st60{fill:#808080;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st61{display:inline;fill:#808080;}\\n\\t.st62{fill:#29E257;}\\n\\t.st63{fill:#E2DC29;}\\n\\t.st64{fill:#29ABE2;}\\n\\t.st65{fill:#E22929;}\\n\\t.st66{fill:#E6E6E6;}\\n\\t.st67{fill:#F2F2F2;}\\n\\t.st68{fill:#F9C303;}\\n\\t.st69{fill:#3A3939;}\\n\\t.st70{fill:#FF0000;}\\n\\t.st71{fill:#FEFEFD;}\\n\\t.st72{fill:#181D44;}\\n\\t.st73{fill:#F7931E;}\\n\\t.st74{fill:#A45467;}\\n\\t.st75{fill:#C33F48;}\\n\\t.st76{fill:#866A86;}\\n\\t.st77{fill:#6780A4;}\\n\\t.st78{fill:#4895C3;}\\n\\t.st79{fill:#4D4D4D;}\\n\\t.st80{opacity:0.2;}\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1\"\n  }, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M31.6,8.3c3.6,1.3,5.1,4.6,5.1,8.1c0,5.5-3.8,11.9-9.9,13.3c2.8,2.9,6,8.6,8.4,8.6c0.6,0,1.2-0.4,1.7-1.3 c0.2-0.4,0.5-0.5,0.8-0.5c0.5,0,1.1,0.4,1.1,1.1c0,0.1-0.1,0.4-0.1,0.5c-1,1.8-2.6,2.7-4.3,2.7c-1.5,0-3-0.6-4.2-1.7 c-3-2.7-4.4-5.6-4.6-5.6c-0.1,0-0.1,0.1-0.1,0.1c0,0.6,0.5,2.7,1.3,7.4c0,0.2,0.1,0.4,0.1,0.6c0,1.5-1.1,2.7-2.8,2.7 c-0.2,0-0.4,0-0.7-0.1c-2-0.3-4.5-8.1-4.5-17.6c0-4.2,0.5-8.8,1.8-13.2c0.4-1.5,1.5-2.1,2.6-2.1c1.5,0,3.2,1.2,3.2,3.1 c0,0.1,0,0.4-0.1,0.6c-0.6,3.3-1.1,6.5-1.3,9.7c4.1-2.5,5.7-5.5,5.7-8.1c0-3.5-2.8-6.4-5.6-6.5h-0.3c-4.4,0-9.1,4.4-9.1,9 c0,0.9,0.2,1.8,0.6,2.7c0.1,0.1,0.1,0.3,0.1,0.4c0,0.6-0.4,1.1-0.9,1.1c-0.1,0-0.4-0.1-0.5-0.1c-1.5-0.7-2.1-2-2.1-3.7 c0-4.8,5.5-12.1,13.5-12.1C28,7.3,29.8,7.6,31.6,8.3z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M49,22.7c1.8,2.4,2.6,5.3,2.6,7.9c0,5.5-3.1,10.4-6.9,10.5h-0.1c-4.6,0-6.7-4.3-6.7-8.8 c0-3.3,1.1-6.8,3.2-8.9c-0.6,0-0.8-0.3-0.8-0.7c0-1,1.8-2.7,4.1-2.7C45.8,19.9,47.5,20.6,49,22.7z M42.1,22.6 c0.9-0.6,1.7-0.8,2.4-0.8c1.5,0,2.5,1.3,2.5,2.5c0,0.2,0,0.4-0.1,0.6c-0.6,2.5-2.7,4.1-2.9,6.8c0,0.3-0.1,0.7-0.1,1.1 c0,0.8,0.1,1.5,0.5,2c0.3,0.4,0.7,0.4,1.2,0.4c0.6,0,1.3-0.2,1.8-0.5c1.7-1,2.5-3.2,2.5-5.6c0-3.4-1.5-7-4.3-7.7 c-0.3-0.1-0.6-0.1-0.8-0.1C43.6,21.2,42.6,21.7,42.1,22.6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M59.9,23.2v0.4c-0.3,2.1-1.2,6.3-1.2,9.4c0,1.8,0.3,3.2,1.1,3.7c0.1,0.1,0.3,0.1,0.4,0.1 c1.3,0,2.9-4.1,4.1-7.9c0.1-6,2-7.9,3.6-7.9c1.4,0,2.7,1.3,2.9,2.7c0,0.4,0.1,0.6,0.1,0.9c0,1.6-0.4,2.8-0.4,5.5 c0,1.2,0.1,2.8,0.4,4.8v0.8c0,0.7,0.1,1.3,0.8,1.3c0.1,0,0.2-0.1,0.4-0.1c1.9-0.4,3.6-6.5,4-8.3c0.1-0.2,0.2-0.4,0.4-0.4 s0.4,0.2,0.4,0.4v0.1c-0.8,3.5-2.3,11.2-7,11.2c-0.4,0-0.8-0.1-1.3-0.2c-3.1-0.8-3.7-3.9-3.9-6.7c-2,5.7-4.6,8.1-6.8,8.1 c-2.7,0-4.9-3.6-4.9-9.4c0-2.6,0.4-5.6,1.5-9c0.4-1.3,1.8-2,2.9-2C58.6,20.8,59.9,21.6,59.9,23.2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M80.6,20.6c0.1,0.5,0.1,0.9,0.1,1.4c0,2.5-1,4.9-1,7.7v0.8c1.7-5.3,4.1-11.4,7.6-11.4c0.6,0,1.4,0.2,2.2,0.7 c2.3,1.5,3,5.2,3,8.8c0,4.6-1.1,9-1.1,9c0.1,0,3.7-4.8,4.8-8.5c0.1-0.3,0.3-0.4,0.6-0.4c0.3,0,0.6,0.2,0.6,0.6v0.1 c-0.6,2.8-3.1,9.1-5.5,10.2c-0.4,0.1-0.7,0.2-1.1,0.2c-2.6,0-4.2-3.9-4.5-5.9c-0.1-0.5-0.1-1.1-0.1-1.7c0-1.2,0.1-2.5,0.1-3.8 c0-1.9-0.1-3.7-0.7-5c-0.1-0.1-0.1-0.2-0.2-0.2c-1.1,0-4.3,7.9-4.8,15.6c-0.1,1.2-0.8,2-1.8,2c-1.9,0-4.7-2.9-5.1-10.2 c-0.1-0.8-0.1-1.5-0.1-2.2c0-7.2,2.6-9.5,4.6-9.6C79.4,18.8,80.4,19.6,80.6,20.6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M111.3,5.7c1.4,0,2.9,1,2.9,2.5v0.2c-0.5,5-2.4,9.1-3.6,20.6c-0.2,1.9-0.3,3.4-0.3,4.6c0,2.5,0.4,3.5,1,3.5 c1.1,0,3-3.6,4.5-8.5c0.1-0.4,0.4-0.5,0.7-0.5c0.4,0,0.7,0.2,0.7,0.6c0,0.1-0.1,0.1-0.1,0.2c-0.9,3.4-2.2,8.1-4.7,10.7 c-0.8,0.8-1.6,1.2-2.5,1.2c-2.6,0-5.1-3.6-5.5-7.3c-2,5.1-4.1,7.1-5.8,7.1c-2.4,0-4.1-4.1-4.1-8.6c0-4.7,1.8-9.8,6.5-11.2 c0.4-0.1,0.7-0.1,1-0.1c1.8,0,3.2,1.2,3.4,1.2h0.1c0.8-4.9,1.4-10.3,3.4-14.9c0.4-0.9,1.3-1.3,2.2-1.3H111.3z M99.7,35.1v0.5 c0,0.2-0.1,0.4-0.1,0.6c0,0.4,0.1,0.7,0.4,0.7c1,0,3.9-4.8,4.9-11.1c-0.4-0.4-0.7-0.6-1.1-0.6C101.8,25.2,99.7,31.3,99.7,35.1z\"\n  })))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"avatars\"\n  })), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Time_Bomb\"\n  })), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_4\"\n  })), _g5 || (_g5 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_8\"\n  })), _g6 || (_g6 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_6\"\n  })), _g7 || (_g7 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"dial_svg\"\n  })), _g8 || (_g8 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Sheeps\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRoundTitleEn);\nexport default __webpack_public_path__ + \"static/media/round-title-en.2ad07e1f265a85634ad7940a33f96552.svg\";\nexport { ForwardRef as ReactComponent };","var _style, _g, _g2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRoundTitlePt(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 130 50\",\n    style: {\n      enableBackground: \"new 0 0 130 50\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:#3E1E68;}\\n\\t.st1{fill:#9EC5E7;}\\n\\t.st2{display:none;}\\n\\t.st3{display:inline;fill:#9EC5E7;}\\n\\t.st4{fill:#3A7CA5;}\\n\\t.st5{fill:#44BBA4;}\\n\\t.st6{fill:#F2E863;}\\n\\t.st7{fill:#F45B69;}\\n\\t.st8{fill:#FFFFFF;}\\n\\t.st9{opacity:0.9;fill:#FFFFFF;}\\n\\t.st10{stroke:#000000;stroke-width:8;stroke-miterlimit:10;}\\n\\t.st11{fill:#E6E6F5;}\\n\\t.st12{fill:#DA70D6;}\\n\\t.st13{fill:#008080;}\\n\\t.st14{fill:#D2691E;}\\n\\t.st15{fill:#556B2F;}\\n\\t.st16{fill:#7CC44F;}\\n\\t.st17{fill:#2F4F4F;}\\n\\t.st18{fill:#FF6347;}\\n\\t.st19{fill:#4682B4;}\\n\\t.st20{fill:#D2A467;}\\n\\t.st21{fill:#7FB5C7;}\\n\\t.st22{fill:#B22222;}\\n\\t.st23{fill:#9370DB;}\\n\\t.st24{fill:#778899;}\\n\\t.st25{fill:#663399;}\\n\\t.st26{fill:#696969;}\\n\\t.st27{fill:#20212E;}\\n\\t.st28{fill:#9884B4;}\\n\\t.st29{fill:#DFB231;}\\n\\t.st30{fill:#875131;}\\n\\t.st31{fill:#DB8A34;}\\n\\t.st32{fill:#EB3465;}\\n\\t.st33{fill:#2B1752;}\\n\\t.st34{fill:#3C58AC;}\\n\\t.st35{fill:#BDB74C;}\\n\\t.st36{fill:#C7A4B3;}\\n\\t.st37{display:inline;}\\n\\t.st38{display:inline;fill:none;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st39{fill:#939598;}\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1\"\n  }, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st8\",\n    d: \"M27.8,37.4c-0.4,0-0.6,0.1-0.8,0.5c-0.5,0.9-1.1,1.3-1.7,1.3c-2.5,0-5.6-5.8-8.4-8.6 c6.1-1.4,9.9-7.7,9.9-13.3c0-3.6-1.5-6.8-5.1-8.1c-1.8-0.7-3.6-1.1-5.3-1.1c-8,0.1-13.5,7.3-13.5,12.1c0,1.7,0.6,3,2.1,3.7 c0.1,0.1,0.4,0.1,0.5,0.1c0.5,0,0.9-0.5,0.9-1.1c0-0.1,0-0.3-0.1-0.4c-0.4-0.8-0.6-1.8-0.6-2.7c0-4.6,4.7-9,9.1-9h0.3 c2.8,0.1,5.6,2.9,5.6,6.5c0,2.6-1.5,5.6-5.7,8.1c0.2-3.2,0.7-6.4,1.3-9.7c0.1-0.2,0.1-0.4,0.1-0.6c0-1.9-1.6-3.1-3.2-3.1 c-1.1,0-2.2,0.6-2.6,2.1c-1.3,4.4-1.8,9-1.8,13.2c0,9.5,2.5,17.3,4.5,17.6c0.3,0.1,0.5,0.1,0.7,0.1c1.8,0,2.8-1.2,2.8-2.7 c0-0.2-0.1-0.4-0.1-0.6c-0.8-4.8-1.3-6.9-1.3-7.4c0-0.1,0-0.1,0.1-0.1c0.2,0,1.6,2.9,4.6,5.6c1.2,1.1,2.7,1.7,4.2,1.7 c1.8,0,3.4-0.8,4.4-2.7c0.1-0.1,0.1-0.4,0.1-0.5C29,37.9,28.3,37.4,27.8,37.4z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st8\",\n    d: \"M34.4,20.8c-2.3,0-4.1,1.8-4.1,2.7c0,0.4,0.2,0.7,0.8,0.7c-2.1,2.1-3.2,5.6-3.2,8.9c0,4.6,2.1,8.8,6.7,8.8 h0.1c3.9-0.1,6.9-5.1,6.9-10.5c0-2.7-0.8-5.5-2.6-7.9C37.5,21.5,35.8,20.8,34.4,20.8z M37.3,35.6c-0.4,0.3-1.1,0.5-1.8,0.5 c-0.5,0-0.9-0.1-1.2-0.4c-0.4-0.4-0.5-1.2-0.5-2c0-0.4,0.1-0.8,0.1-1.1c0.3-2.7,2.3-4.3,2.9-6.8c0.1-0.2,0.1-0.4,0.1-0.6 c0-1.2-0.9-2.5-2.5-2.5c-0.7,0-1.5,0.2-2.4,0.8c0.5-0.9,1.5-1.3,2.5-1.3c0.3,0,0.6,0.1,0.8,0.1c2.7,0.7,4.3,4.4,4.3,7.7 C39.8,32.4,39,34.6,37.3,35.6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st8\",\n    d: \"M124.8,29.5c-0.3,0-0.5,0.1-0.6,0.4c-0.8,4.2-3.4,7.4-4.1,7.4h-0.1v-0.1c0-0.2-0.3-1.3-0.4-1.6 c-0.1-0.7-0.2-1.4-0.2-2.1c0-2.8,1.1-5.7,1.8-8.3c0.1-0.2,0.1-0.4,0.1-0.6c0-1.5-1.4-2.9-2.9-2.9c-1.1,0-2.2,0.6-3,2.5 c-0.7-1.8-3.4-3-5.3-3h-0.6c-4.9,0.6-7.4,8.4-7.4,12.6c0,0,0,0.1,0,0.1c-1.1,2.6-2.2,4.2-2.9,4.2c-0.6,0-1-1.1-1-3.5 c0-1.2,0.1-2.7,0.3-4.6c1.2-11.5,3.1-15.6,3.6-20.6V9.1c0-1.5-1.5-2.5-2.9-2.5h-0.1c-0.9,0-1.8,0.4-2.2,1.3c-2,4.6-2.6,10-3.4,15 h-0.1c-0.2,0-1.6-1.2-3.4-1.2c-0.3,0-0.6,0.1-1,0.1c-4.7,1.3-6.5,6.5-6.5,11.2c0,0.5,0,1,0.1,1.5c-1,1.8-2,2.9-2.5,2.9h-0.1v-0.1 c0-0.2-0.3-1.3-0.4-1.6c-0.1-0.7-0.2-1.4-0.2-2.1c0-2.8,1.1-5.7,1.8-8.3c0.1-0.2,0.1-0.4,0.1-0.6c0-1.5-1.4-2.9-2.9-2.9 c-1.1,0-2.2,0.6-3,2.5c-0.7-1.8-3.4-3-5.3-3h-0.6c-4.9,0.6-7.4,8.4-7.4,12.6c0,0,0,0.1,0,0.1c-1.1,2.6-2.2,4.2-2.9,4.2 c-0.6,0-1-1.1-1-3.5c0-1.2,0.1-2.7,0.3-4.6c1.2-11.5,3.1-15.6,3.6-20.6V9.1c0-1.5-1.5-2.5-2.9-2.5h-0.1c-0.9,0-1.8,0.4-2.2,1.3 c-2,4.6-2.6,10-3.4,15h-0.1c-0.2,0-1.6-1.2-3.4-1.2c-0.3,0-0.6,0.1-1,0.1c-4.7,1.3-6.5,6.5-6.5,11.2c0,4.5,1.7,8.6,4.1,8.6 c1.7,0,3.7-2,5.8-7.1c0.4,3.7,2.9,7.3,5.5,7.3c0.8,0,1.7-0.4,2.5-1.2c0.9-1,1.7-2.2,2.3-3.5c0.7,2.1,2.1,3.5,3.9,3.5 c2,0,4.4-1.8,6.6-6.1c0.1,2.8,1,5.1,3.4,6c0.6,0.2,1.2,0.3,1.7,0.3c2.1,0,3.5-1.6,4.6-3.6c0.7,2.6,2,4.4,3.6,4.4 c1.7,0,3.7-2,5.8-7.1c0.4,3.7,2.9,7.3,5.5,7.3c0.8,0,1.7-0.4,2.5-1.2c0.9-1,1.7-2.2,2.3-3.5c0.7,2.1,2.1,3.5,3.9,3.5 c2,0,4.4-1.8,6.6-6.1c0.1,2.8,1,5.1,3.4,6c0.6,0.2,1.2,0.3,1.7,0.3c4.5,0,5.9-7,6.9-10.4c0-0.1,0.1-0.1,0.1-0.2 C125.5,29.7,125,29.5,124.8,29.5z M48.2,37.8c-0.2,0-0.4-0.3-0.4-0.7c0-0.2,0.1-0.4,0.1-0.6V36c0-3.9,2.1-9.9,4.1-9.9 c0.4,0,0.7,0.1,1.1,0.6C52,32.9,49.2,37.8,48.2,37.8z M73.7,30.4c-1.1,2.4-3,5.5-4.3,5.5c-0.4,0-0.8-0.4-1-1.3 c-0.1-0.2-0.1-0.4-0.1-0.7c0-3.1,3-9.4,5.1-9.4c0.6,0,1.1,0.5,1.3,1.8C74.8,26.6,74.2,28,73.7,30.4z M88,37.8 c-0.2,0-0.4-0.3-0.4-0.7c0-0.2,0.1-0.4,0.1-0.6V36c0-3.9,2.1-9.9,4.1-9.9c0.4,0,0.7,0.1,1.1,0.6C91.9,32.9,89,37.8,88,37.8z  M113.6,30.4c-1.1,2.4-3,5.5-4.3,5.5c-0.4,0-0.8-0.4-1-1.3c-0.1-0.2-0.1-0.4-0.1-0.7c0-3.1,3-9.4,5.1-9.4c0.6,0,1.1,0.5,1.3,1.8 C114.6,26.6,114.1,28,113.6,30.4z\"\n  })))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"avatars\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRoundTitlePt);\nexport default __webpack_public_path__ + \"static/media/round-title-pt.2e3f9c1deb85d58d118aa6e3dfa7af23.svg\";\nexport { ForwardRef as ReactComponent };","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button } from 'antd';\n// Types\nimport type { GamePlayers } from 'types/player';\nimport type { GameRound } from 'types/game';\n// Assets\nimport roundTitleEn from 'assets/images/round-title-en.svg';\nimport roundTitlePt from 'assets/images/round-title-pt.svg';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Components\nimport { Translate } from 'components/language';\nimport { TimedButton } from 'components/buttons';\n\ntype RoundAnnouncementProps = {\n  round: GameRound;\n  onPressButton?: GenericFunction;\n  buttonText?: string;\n  time: number;\n  players?: GamePlayers;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  children?: any;\n  unskippable?: boolean;\n  circleColor?: string;\n};\n\nexport function RoundAnnouncement({\n  round,\n  onPressButton,\n  buttonText,\n  time = 0,\n  className,\n  children,\n  unskippable = false,\n  circleColor,\n}: RoundAnnouncementProps) {\n  useTemporarilyHidePlayersBar();\n  const { translate } = useLanguage();\n\n  const circleStyle = circleColor ? { borderColor: circleColor } : {};\n\n  return (\n    <div className={clsx('round-announcement', className)}>\n      <div className=\"round-announcement__main\">\n        <div className=\"round-announcement__title\">\n          <img src={translate(roundTitlePt, roundTitleEn)} alt={translate('Rodada', 'Round')} />\n        </div>\n        <div className={clsx('round-announcement__round-wrapper', getAnimationClass('zoomIn'))}>\n          <div className=\"round-announcement__circle\" style={circleStyle} />\n          <div className=\"round-announcement__circle-2\" style={circleStyle} />\n          <div className=\"round-announcement__number\">{round?.current ?? round ?? 0}</div>\n        </div>\n\n        {children}\n\n        {Boolean(onPressButton) && !Boolean(time) && (\n          <Button type=\"primary\" onClick={onPressButton} className=\"round-announcement__go-button\">\n            {buttonText}\n          </Button>\n        )}\n\n        {Boolean(onPressButton) && Boolean(time) && (\n          <TimedButton\n            type=\"primary\"\n            onClick={onPressButton}\n            onExpire={onPressButton}\n            duration={time}\n            disabled={unskippable}\n          >\n            <Translate pt=\"Prosseguir\" en=\"Continue\" custom={buttonText} />\n          </TimedButton>\n        )}\n      </div>\n    </div>\n  );\n}\n","import { functions } from 'services/firebase';\nimport { httpsCallable } from 'firebase/functions';\nimport { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { SubmitDecisionPayload } from './types';\n\nconst submitAction = httpsCallable(functions, 'naRuaDoMedoSubmitAction');\n\nexport function useOnSubmitDecisionAPIRequest() {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: submitAction,\n    actionName: 'submit-decision',\n    onSuccess: () => {\n      window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n    },\n    successMessage: translate('Decisão submetida com sucesso', 'Decision submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua decisão',\n      'Oops, the application found an error while trying to submit your decision'\n    ),\n  });\n\n  return (payload: SubmitDecisionPayload) => {\n    request({\n      action: 'SUBMIT_DECISION',\n      ...payload,\n    });\n  };\n}\n","import { getRandomItem } from 'utils/helpers';\n\nconst MORE_CONTINUE = ['CONTINUE', 'CONTINUE', 'CONTINUE', 'CONTINUE', 'GO_HOME'];\nconst MORE_HOME = ['GO_HOME', 'GO_HOME', 'CONTINUE', 'CONTINUE', 'CONTINUE'];\n\nexport const mockPlayerDecision = (horrorLength: number, hand: number) => {\n  let decision = getRandomItem(MORE_CONTINUE);\n\n  if (hand < 2 || horrorLength < 2) {\n    decision = 'CONTINUE';\n  } else if (horrorLength >= 3 && hand > 4) {\n    decision = getRandomItem(MORE_HOME);\n  }\n\n  return decision;\n};\n","// Types\nimport type { GamePlayer } from 'types/player';\nimport type { Decision, StreetCard } from '../utils/types';\n// Icons\nimport { HouseIcon } from 'icons/HouseIcon';\nimport { QuestionIcon } from 'icons/QuestionIcon';\nimport { TrickOrTreatIcon } from 'icons/TrickOrTreatIcon';\nimport { WalkIcon } from 'icons/WalkIcon';\n// Components\nimport { AvatarStrip, IconAvatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { FloatingHand } from 'components/general/FloatingHand';\nimport { ImageCard } from 'components/image-cards';\n\ntype PlayerStatsProps = {\n  user: GamePlayer;\n  omitDecision?: boolean;\n};\n\nexport function PlayerStats({ user, omitDecision = false }: PlayerStatsProps) {\n  return (\n    <FloatingHand title={<Translate pt=\"Informações\" en=\"Stats\" />} icon={<TrickOrTreatIcon />}>\n      <div className=\"n-player-stats\">\n        <AvatarStrip player={user} withName size=\"small\" />\n        <div className=\"n-player-stats__decision\">\n          <DecisionIcon decision={user.decision} omitDecision={omitDecision} />\n        </div>\n        <div className=\"n-player-stats__container n-player-stats__container--candy\">\n          <span className=\"n-player-stats__title\">\n            <Translate pt=\"Doces\" en=\"Candy\" />\n          </span>\n          <div className=\"n-player-stats__count\">\n            <span className=\"n-player-stats__count-label\">\n              <Translate pt=\"Em mão\" en=\"In hand\" />\n            </span>\n            <span className=\"n-player-stats__count-value\">{user.hand}</span>\n          </div>\n\n          <div className=\"n-player-stats__count\">\n            <span className=\"n-player-stats__count-label\">\n              <Translate pt=\"Em casa (pontos)\" en=\"At home (points)\" />\n            </span>\n            <span className=\"n-player-stats__count-value\">{user.totalCandy}</span>\n          </div>\n        </div>\n\n        <div className=\"n-player-stats__container\">\n          <span className=\"n-player-stats__title\">\n            <Translate pt=\"Boladas\" en=\"Jackpots\" />\n          </span>\n          {user.jackpots?.length > 0 ? (\n            <ul className=\"n-player-stats__jackpots\">\n              {user.jackpots.map((jackpot: StreetCard) => (\n                <ImageCard\n                  key={jackpot.id}\n                  id={jackpot.key}\n                  cardWidth={60}\n                  className=\"n-player-stats__jackpot\"\n                />\n              ))}\n            </ul>\n          ) : (\n            <div className=\"n-player-stats__no-jackpot\">\n              <Translate\n                pt=\"Você não coletou nenhuma bolada até o momento.\"\n                en=\"You haven't gotten any jackpot yet.\"\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    </FloatingHand>\n  );\n}\n\ntype DecisionIconProps = {\n  decision: Decision;\n  omitDecision: boolean;\n};\n\nfunction DecisionIcon({ decision, omitDecision }: DecisionIconProps) {\n  if (omitDecision) {\n    return (\n      <>\n        <IconAvatar icon={<QuestionIcon />} shape=\"square\" />\n        <Translate pt=\"Decida\" en=\"Decide\" />\n      </>\n    );\n  }\n\n  return decision === 'CONTINUE' ? (\n    <>\n      <IconAvatar icon={<WalkIcon />} />\n      <Translate pt=\"Continuando\" en=\"Continuing\" />\n    </>\n  ) : (\n    <>\n      <IconAvatar icon={<HouseIcon />} />\n      <Translate pt=\"Em casa\" en=\"At home\" />\n    </>\n  );\n}\n","import clsx from 'clsx';\n// Icons\nimport { CandyIcon } from 'icons/CandyIcon';\nimport { TabletIcon } from 'icons/TabletIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function CandyHighlight({ children, type }: HighlightProps) {\n  return (\n    <MetricHighlight\n      icon={<CandyIcon />}\n      type={type}\n      className={clsx(type === 'positive' && 'n-candy-highlight')}\n    >\n      {children}\n    </MetricHighlight>\n  );\n}\n\nexport function TitleCandyHighlight({ children, type }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<IconAvatar size=\"large\" icon={<CandyIcon />} />} type={type}>\n      {children}\n    </MetricHighlight>\n  );\n}\n\nexport function TitleIPadHighlight({ children, type }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<IconAvatar size=\"small\" icon={<TabletIcon />} />} type={type}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","// Types\nimport type { GamePlayer } from 'types/player';\n// Components\nimport { Translate } from 'components/language';\nimport { RulesList } from 'components/rules';\nimport { Instruction, RuleInstruction } from 'components/text';\nimport { CandyHighlight } from './Highlights';\n\nconst CANDY_VALUES = [1, 2, 3, 4, 5, 5, 5, 7, 7, 7, 8, 9, 10, 11, 11, 12, 13, 14, 15, 17, 19];\n\ntype DecisionExplanationProps = {\n  user: GamePlayer;\n  totalCandyInSidewalk: number;\n};\n\nexport function DecisionExplanation({ user, totalCandyInSidewalk }: DecisionExplanationProps) {\n  const isThereAnyCandy = Boolean(user.hand + totalCandyInSidewalk);\n\n  return (\n    <RuleInstruction type=\"action\">\n      {isThereAnyCandy ? (\n        <Translate\n          pt={\n            <>\n              Se você voltar pra sua casa você come todos os doces em mãos{' '}\n              <CandyHighlight>{user.hand}</CandyHighlight> e divide os doces ainda na rua{' '}\n              <CandyHighlight>{totalCandyInSidewalk}</CandyHighlight> com os jogadores que também decidirem\n              voltar.\n            </>\n          }\n          en={\n            <>\n              If you go back home you cash in all your candy in hand{' '}\n              <CandyHighlight>{user.hand}</CandyHighlight> and divide all candy still in the street{' '}\n              <CandyHighlight>{totalCandyInSidewalk}</CandyHighlight> with other players who also decide to go\n              back.\n            </>\n          }\n        />\n      ) : (\n        <Translate\n          pt=\"Não tem doce nenhum ainda, então, melhor simplesmente continuar!\"\n          en=\"There's no candy yet, so why not just continue?\"\n        />\n      )}\n      <br />\n\n      <Translate\n        pt=\"Lembre-se que se dois monstros iguais aparecerem, todos entram em pânico, derrubam todos os doces em mãos e correm pra casa.\"\n        en=\"Remember that if two of the same monster show up, you lose all candy in hand because you freaked out, dropped everything, and ran home.\"\n      />\n    </RuleInstruction>\n  );\n}\n\nexport function CardCountExplanation() {\n  return (\n    <Instruction>\n      <Translate\n        pt={\n          <RulesList>\n            <li>\n              O baralho de cartas contém {CANDY_VALUES.length} cartas Gostosuras que variam de 1 a 19 doces.{' '}\n              <br />({CANDY_VALUES.join(', ')})\n            </li>\n            <li>Também contém 5 tipos de monstros com 3 cartas para cada (Total: 15).</li>\n            <li>\n              Cada vez que um monstro aparece duas vezes e causa pânico, uma de suas cartas é removida do\n              baralho.\n            </li>\n            <li>\n              Cada rua adiciona um iPad indivisível ao baralho, somente uma pessoa pode tê-lo, se ninguém\n              conseguir pegar o iPad a rua, ele fica no baralho para a próxima rodada.\n            </li>\n          </RulesList>\n        }\n        en={\n          <RulesList>\n            <li>\n              The deck has {CANDY_VALUES.length} Candy cards varying from 1 to 19 candies.\n              <br />({CANDY_VALUES.join(', ')})\n            </li>\n            <li>It also has 5 types of monsters with 3 cards each (15 total).</li>\n            <li>\n              When a second monster of the same type shows up, one of its cards is remove for the next round.\n            </li>\n            <li>\n              Each street adds an unshareable iPad to the deck, only one person get get it, if nobody has\n              gotten the iPad on the current street, it will remain in the deck for the next round.\n            </li>\n          </RulesList>\n        }\n      />\n    </Instruction>\n  );\n}\n","import clsx from 'clsx';\nimport { useEffect } from 'react';\n// Types\nimport type { CandySidewalk, StreetCard } from '../utils/types';\n// Helpers\nimport { PUBLIC_URL } from 'utils/constants';\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { HouseCard } from './HouseCard';\n\ntype StreetProps = {\n  street: StreetCard[];\n  currentCard?: StreetCard;\n  candySidewalk: CandySidewalk;\n};\n\nexport function Street({ street, currentCard, candySidewalk }: StreetProps) {\n  useEffect(() => {\n    const streetEl = document.getElementById('street');\n    const currentCardEl = document.getElementById('current-card');\n\n    if (streetEl !== null && currentCardEl !== null) {\n      streetEl.scrollLeft = currentCardEl.offsetLeft;\n    }\n  }, [street, currentCard]);\n\n  return (\n    <div\n      className=\"n-street\"\n      id=\"street\"\n      style={{\n        backgroundImage: `url('${PUBLIC_URL.IN_GAME}n-street.png')`,\n      }}\n    >\n      {street.map((card, index) => {\n        return (\n          <HouseCard\n            key={card.id}\n            card={card}\n            candyLeftover={candySidewalk[index].leftover}\n            id={index === street.length - 1 ? 'current-card' : undefined}\n          />\n        );\n      })}\n      {currentCard && (\n        <HouseCard\n          card={currentCard}\n          candyLeftover={candySidewalk[candySidewalk.length - 1].leftover}\n          className={clsx('n-current-card', getAnimationClass('flipInY'))}\n          id=\"current-card\"\n          active\n        />\n      )}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Types\nimport type { GamePlayers } from 'types/player';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Icons\nimport { CandyIcon } from 'icons/CandyIcon';\nimport { HouseIcon } from 'icons/HouseIcon';\nimport { WalkIcon } from 'icons/WalkIcon';\nimport { TrickOrTreatIcon } from 'icons/TrickOrTreatIcon';\nimport { ScaredIcon } from 'icons/ScaredIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { CostumeAvatar } from 'components/avatars/CostumeAvatar';\n\ntype PlayersDecisionStateProps = {\n  players: GamePlayers;\n  goingHomePlayerIds: PlayerId[];\n  continuingPlayerIds: PlayerId[];\n  alreadyAtHomePlayerIds: PlayerId[];\n  cashedInCandy: number;\n  candyInHand: number;\n  phase: 'TRICK_OR_TREAT' | 'RESULT' | 'STREET_END';\n};\n\nexport function PlayersDecisionState({\n  players,\n  goingHomePlayerIds,\n  continuingPlayerIds,\n  alreadyAtHomePlayerIds,\n  cashedInCandy,\n  candyInHand,\n  phase,\n}: PlayersDecisionStateProps) {\n  return (\n    <div className=\"n-players-decision\">\n      <DecisionSection\n        players={players}\n        playersInSection={alreadyAtHomePlayerIds}\n        icon={<HouseIcon />}\n        title={<Translate pt=\"Em Casa\" en=\"At Home\" />}\n        description={\n          <Translate\n            pt=\"Você se lembra quantos doces eles levaram?\"\n            en=\"Do you remember how much candy they took?\"\n          />\n        }\n      />\n      <div className=\"n-players-decision__divider\" />\n      <DecisionSection\n        players={players}\n        playersInSection={goingHomePlayerIds}\n        icon={<WalkIcon className=\"svg-mirror\" />}\n        title={<Translate pt=\"Voltando pra Casa\" en=\"Going Home\" />}\n        description={\n          <Translate\n            pt={\n              <>\n                Cada um levou {candyInHand + cashedInCandy} <IconAvatar icon={<CandyIcon />} size=\"small\" />{' '}\n                pra casa.\n              </>\n            }\n            en={\n              <>\n                Each one took {candyInHand + cashedInCandy} <IconAvatar icon={<CandyIcon />} size=\"small\" />{' '}\n                home.\n              </>\n            }\n          />\n        }\n      />\n      <div className=\"n-players-decision__divider\" />\n      <DecisionSection\n        players={players}\n        playersInSection={continuingPlayerIds}\n        icon={phase === 'STREET_END' ? <ScaredIcon /> : <TrickOrTreatIcon />}\n        title={\n          <>\n            {phase === 'TRICK_OR_TREAT' && (\n              <Translate pt=\"Continua ou Volta?\" en=\"Continuing or Going Home?\" />\n            )}\n            {phase === 'RESULT' && <Translate pt=\"Continuando\" en=\"Continuing\" />}\n            {phase === 'STREET_END' && <Translate pt=\"Continuariam\" en=\"Would continue\" />}\n          </>\n        }\n        description={\n          phase === 'STREET_END' ? (\n            <Translate\n              pt={\n                <>\n                  Perderam {candyInHand} <IconAvatar icon={<CandyIcon />} size=\"small\" />.\n                </>\n              }\n              en={\n                <>\n                  Lost {candyInHand} <IconAvatar icon={<CandyIcon />} size=\"small\" /> .\n                </>\n              }\n            />\n          ) : (\n            <Translate\n              pt={\n                <>\n                  Cada um tem {candyInHand} <IconAvatar icon={<CandyIcon />} size=\"small\" /> na sacolinha.\n                </>\n              }\n              en={\n                <>\n                  Each one has {candyInHand} <IconAvatar icon={<CandyIcon />} size=\"small\" /> in their bag.\n                </>\n              }\n            />\n          )\n        }\n      />\n    </div>\n  );\n}\n\ntype DecisionSectionProps = {\n  players: GamePlayers;\n  playersInSection: PlayerId[];\n  icon: ReactNode;\n  title: ReactNode;\n  description: ReactNode;\n};\n\nfunction DecisionSection({ players, playersInSection, icon, title, description }: DecisionSectionProps) {\n  const hasPlayers = playersInSection.length > 0;\n\n  return (\n    <div className={clsx('n-players-decision__section', !hasPlayers && 'n-players-decision__section--empty')}>\n      <h3\n        className={clsx(\n          'n-players-decision__title',\n          !hasPlayers && getAnimationClass('fadeOut') && 'n-players-decision__title--empty'\n        )}\n      >\n        <IconAvatar icon={icon} />\n        {title}\n      </h3>\n\n      <ul className=\"n-players-decision__players\">\n        {hasPlayers &&\n          playersInSection.map((playerId) => {\n            const player = players[playerId];\n            return (\n              <span key={`going-home-player-${player.id}`} className=\"n-players-decision__player\">\n                <CostumeAvatar avatarId={player.avatarId} id={player.costumeId} />\n                {player.name}\n              </span>\n            );\n          })}\n      </ul>\n      <p className={clsx('n-players-decision__info', !hasPlayers && 'n-players-decision__info--empty')}>\n        {hasPlayers && description}\n      </p>\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Types\nimport type { StreetCard } from '../utils/types';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useCountdown } from 'hooks/useCountdown';\n// Utils\nimport { NOOP } from 'utils/constants';\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { ImageCard } from 'components/image-cards';\n\ntype NewHouseCardProps = {\n  /**\n   * The candy, monster, jackpot card\n   */\n  card: StreetCard;\n};\n\nexport function NewHouseCard({ card }: NewHouseCardProps) {\n  const { dualTranslate } = useLanguage();\n\n  const baseClass = 'n-new-house-card';\n  const cardBaseClass = 'n-new-house-card__card';\n\n  const { timeLeft } = useCountdown({\n    duration: 3,\n    onExpire: () => NOOP,\n  });\n\n  return (\n    <div\n      className={clsx(\n        `${baseClass}`,\n        timeLeft > 0 ? getAnimationClass('bounceIn') : getAnimationClass('bounceOut')\n      )}\n    >\n      <div className={clsx(`${baseClass}--container`, `${baseClass}--${card.type}`)}>\n        <ImageCard id={card.key} cardWidth={200} className={clsx(cardBaseClass)} />\n\n        <h3 className={`${baseClass}__name`}>{dualTranslate(card.name)}</h3>\n      </div>\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Types\nimport type { GamePlayer, GamePlayers } from 'types/player';\nimport type { CandySidewalk, StreetCard } from './utils/types';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useMock } from 'hooks/useMock';\nimport { useLoading } from 'hooks/useLoading';\n// Utils\nimport { mockPlayerDecision } from './utils/mock';\nimport { getAnimationClass } from 'utils/helpers';\n// Icons\nimport { WalkIcon } from 'icons/WalkIcon';\nimport { HouseIcon } from 'icons/HouseIcon';\nimport { IconAvatar } from 'components/avatars/IconAvatar';\n// Components\nimport { CandyCount } from './components/CandyCount';\nimport { PlayerStats } from './components/PlayerStats';\nimport { CardCountExplanation, DecisionExplanation } from './components/RulesBlobs';\nimport { Street } from './components/Street';\nimport { Step } from 'components/steps';\nimport { RuleInstruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { PopoverRule } from 'components/rules';\nimport { TransparentButton } from 'components/buttons';\nimport { CandyHighlight, TitleIPadHighlight } from './components/Highlights';\nimport { PlayersDecisionState } from './components/PlayersDecisionState';\nimport { NewHouseCard } from './components/NewHouseCard';\n\ntype StepMakeDecisionProps = {\n  players: GamePlayers;\n  user: GamePlayer;\n  street: StreetCard[];\n  currentCard: StreetCard;\n  onSubmitDecision: GenericFunction;\n  continuingPlayerIds: PlayerId[];\n  alreadyAtHomePlayerIds: PlayerId[];\n  candySidewalk: CandySidewalk;\n  totalCandyInSidewalk: number;\n  candyInHand: number;\n  candyPerPlayer: number;\n  cashedInCandy: number;\n};\n\nexport function StepMakeDecision({\n  players,\n  street,\n  currentCard,\n  candySidewalk,\n  totalCandyInSidewalk,\n  continuingPlayerIds,\n  alreadyAtHomePlayerIds,\n  onSubmitDecision,\n  user,\n  candyPerPlayer,\n  candyInHand,\n}: StepMakeDecisionProps) {\n  const { dualTranslate } = useLanguage();\n  const { isLoading } = useLoading();\n\n  // DEV: make decision\n  useMock(() => {\n    if (user.isTrickOrTreating && !user.ready) {\n      onSubmitDecision({\n        decision: mockPlayerDecision(street.filter((card) => card.type === 'horror').length, user.hand),\n      });\n    }\n  }, [user.isTrickOrTreating, user.ready]);\n\n  return (\n    <Step fullWidth className=\"n-step-trick-or-treat\">\n      <Title size=\"medium\" white className={clsx('n-title', getAnimationClass('tada'))} level={2}>\n        <Translate pt=\"Continua ou Volta pra Casa?\" en=\"Next House or Go Home?\" />\n      </Title>\n\n      <Title size=\"small\" white level={3} className=\"n-subtitle\">\n        {currentCard.type === 'candy' && (\n          <Translate\n            pt={\n              <>\n                Que delícia! <CandyHighlight>{currentCard.value}</CandyHighlight>! Cada criança ganha{' '}\n                <CandyHighlight type=\"positive\">{candyPerPlayer}</CandyHighlight> !\n              </>\n            }\n            en={\n              <>\n                Yummy! <CandyCount candyCount={currentCard.value} size=\"large\" />! {candyPerPlayer} for each\n                one of us!\n              </>\n            }\n          />\n        )}\n        {currentCard.type === 'horror' && (\n          <Translate\n            pt={`Ahh! Cruz credo! Um(a) ${dualTranslate(currentCard.name)} super assustador(a)!`}\n            en={`Ahh! Yikes! A very scary ${dualTranslate(currentCard.name)}!`}\n          />\n        )}\n        {currentCard.type === 'jackpot' && (\n          <Translate\n            pt={\n              <>\n                Um <TitleIPadHighlight>iPad</TitleIPadHighlight>! Mas somente uma criança pode ficar com\n                ele...\n              </>\n            }\n            en={\n              <>\n                An <TitleIPadHighlight>iPad</TitleIPadHighlight>! But only one kid can keep it...\n              </>\n            }\n          />\n        )}\n      </Title>\n\n      <PopoverRule content={<CardCountExplanation />} />\n\n      <PlayersDecisionState\n        players={players}\n        goingHomePlayerIds={[]}\n        continuingPlayerIds={continuingPlayerIds}\n        alreadyAtHomePlayerIds={alreadyAtHomePlayerIds ?? []}\n        cashedInCandy={0}\n        candyInHand={candyInHand}\n        phase=\"TRICK_OR_TREAT\"\n      />\n\n      <Street street={street} currentCard={currentCard} candySidewalk={candySidewalk} />\n\n      <NewHouseCard card={currentCard} />\n\n      {user.isTrickOrTreating ? (\n        <DecisionExplanation user={user} totalCandyInSidewalk={totalCandyInSidewalk} />\n      ) : (\n        <RuleInstruction type=\"wait\">\n          <Translate\n            pt={\n              <>\n                Essa é a nova casa! Mas você já voltou para sua casa, então, apenas observe.\n                <br />\n                Você não tem que fazer nada.\n              </>\n            }\n            en={\n              <>\n                A new house! But you are already home, so, just chill.\n                <br />\n                You don't have to do anything.\n              </>\n            }\n          />\n        </RuleInstruction>\n      )}\n\n      {user.isTrickOrTreating && !user.ready && (\n        <div className=\"n-decision-buttons-container\">\n          <TransparentButton\n            className=\"n-decision-button n-decision-button--home\"\n            onClick={() => onSubmitDecision({ decision: 'GO_HOME' })}\n            disabled={isLoading || user.ready}\n          >\n            <IconAvatar icon={<HouseIcon />} size=\"large\" />\n            <Translate pt=\"Voltar pra casa\" en=\"Go back home\" />\n          </TransparentButton>\n          <TransparentButton\n            className=\"n-decision-button n-decision-button--continue\"\n            onClick={() => onSubmitDecision({ decision: 'CONTINUE' })}\n            disabled={isLoading || user.ready}\n          >\n            <IconAvatar icon={<WalkIcon />} size=\"large\" />\n            <Translate pt=\"Continuar para a próxima casa\" en=\"Continue trick or treating\" />\n          </TransparentButton>\n        </div>\n      )}\n\n      <PlayerStats user={user} omitDecision={!user.ready} />\n    </Step>\n  );\n}\n","// Types\nimport type { PhaseProps } from 'types/game';\n// Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitDecisionAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { StreetIcon } from 'icons/StreetIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { RoundAnnouncement } from 'components/round';\nimport { ImageCardPreloadHand } from 'components/image-cards';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { StepMakeDecision } from './StepMakeDecision';\nimport { PlayerStats } from './components/PlayerStats';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\n\nexport function PhaseTrickOrTreat({ state, players, info }: PhaseProps) {\n  const user = useUser(players, state);\n\n  const isNewStreet = state.street.length === 0;\n  const { step, goToNextStep } = useStep(isNewStreet ? 0 : 2);\n\n  const onSubmitDecision = useOnSubmitDecisionAPIRequest();\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.NA_RUA_DO_MEDO.TRICK_OR_TREAT}>\n      <StepSwitcher step={step} players={players} waitingRoom={{ content: <PlayerStats user={user} /> }}>\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state.round}\n          buttonText=\" \"\n          onPressButton={goToNextStep}\n          time={5}\n          circleColor={info?.appearance?.color}\n        >\n          <Instruction contained>\n            <Translate\n              pt={`Vamos pegar doces na Rua do Medo ${state.round.current} de ${state.round.total}`}\n              en={`Let's get candy on Fear Street ${state.round.current} of ${state.round.total}`}\n            />\n          </Instruction>\n          <ImageCardPreloadHand hand={[state.currentCard.key]} />\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <PhaseAnnouncement\n          icon={<StreetIcon />}\n          title={<Translate pt=\"Gostosuras ou Travessuras?\" en=\"Trick or Treat?\" />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          duration={5}\n          type=\"block\"\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  Nova rua! Vamos de porta em porta pegar doces!\n                  <br />\n                  Espero que essa rua não dê medo...\n                </>\n              }\n              en={\n                <>\n                  New street! Let's go door to door to get candy!\n                  <br />I hope this street is not scary...\n                </>\n              }\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 2 */}\n        <StepMakeDecision\n          players={players}\n          street={state.street}\n          currentCard={state.currentCard}\n          candySidewalk={state.candySidewalk}\n          cashedInCandy={state.cashedInCandy}\n          candyPerPlayer={state.candyPerPlayer}\n          candyInHand={state.candyInHand}\n          totalCandyInSidewalk={state.totalCandyInSidewalk}\n          continuingPlayerIds={state.continuingPlayerIds}\n          alreadyAtHomePlayerIds={state.alreadyAtHomePlayerIds}\n          onSubmitDecision={onSubmitDecision}\n          user={user}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","import clsx from 'clsx';\n// Types\nimport type { GamePlayer, GamePlayers } from 'types/player';\nimport type { CandySidewalk, StreetCard } from './utils/types';\n// Hooks\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { PlayerStats } from './components/PlayerStats';\nimport { Street } from './components/Street';\nimport { CardCountExplanation } from './components/RulesBlobs';\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { PopoverRule } from 'components/rules';\nimport { HostNextPhaseButton } from 'components/host';\nimport { PlayersDecisionState } from './components/PlayersDecisionState';\n\ntype StepResultProps = {\n  players: GamePlayers;\n  street: StreetCard[];\n  currentCard: StreetCard;\n  candySidewalk: CandySidewalk;\n  cashedInCandy: number;\n  user: GamePlayer;\n  alreadyAtHomePlayerIds: PlayerId[];\n  continuingPlayerIds: PlayerId[];\n  goingHomePlayerIds: PlayerId[];\n  candyInHand: number;\n};\n\nexport function StepResult({\n  players,\n  street,\n  currentCard,\n  candySidewalk,\n  user,\n  cashedInCandy,\n  alreadyAtHomePlayerIds,\n  continuingPlayerIds,\n  goingHomePlayerIds,\n  candyInHand,\n}: StepResultProps) {\n  useTemporarilyHidePlayersBar();\n\n  return (\n    <Step fullWidth>\n      <Title size=\"medium\" white className={clsx('n-title', getAnimationClass('fadeIn'))} level={2}>\n        <Translate pt=\"Decisões\" en=\"Decisions\" />:\n      </Title>\n\n      <Title\n        size=\"small\"\n        white\n        level={3}\n        className={clsx('n-subtitle', getAnimationClass('fadeIn', { delay: 1 }))}\n      >\n        {goingHomePlayerIds.length === 0 && (\n          <Translate pt=\"Todos continuaram...\" en=\"Everybody will continue...\" />\n        )}\n\n        {goingHomePlayerIds.length === 1 && (\n          <Translate pt=\"Olha o cagão voltando pra casa...\" en=\"Look at this scared cat going back home...\" />\n        )}\n        {goingHomePlayerIds.length > 1 && (\n          <Translate\n            pt=\"Olha os cagões voltando pra casa...\"\n            en=\"Look at these scared cats going back home...\"\n          />\n        )}\n      </Title>\n\n      <PopoverRule content={<CardCountExplanation />} />\n\n      <PlayersDecisionState\n        players={players}\n        goingHomePlayerIds={goingHomePlayerIds ?? []}\n        continuingPlayerIds={continuingPlayerIds}\n        alreadyAtHomePlayerIds={alreadyAtHomePlayerIds ?? []}\n        cashedInCandy={cashedInCandy}\n        candyInHand={candyInHand}\n        phase=\"RESULT\"\n      />\n\n      <Street street={street} currentCard={currentCard} candySidewalk={candySidewalk} />\n\n      <HostNextPhaseButton autoTriggerTime={10}>\n        <Translate pt=\"Próxima Casa\" en=\"Next House\" />\n      </HostNextPhaseButton>\n\n      <PlayerStats user={user} />\n    </Step>\n  );\n}\n","// Types\nimport type { PhaseProps } from 'types/game';\n// Hooks\nimport { useUser } from 'hooks/useUser';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { StepResult } from './StepResult';\nimport { PhaseContainer } from 'components/phases';\n\nexport function PhaseResult({ state, players, info }: PhaseProps) {\n  const user = useUser(players, state);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.NA_RUA_DO_MEDO.RESULT}>\n      {/* Step 1 */}\n      <StepResult\n        players={players}\n        street={state.street}\n        currentCard={state.currentCard}\n        candySidewalk={state.candySidewalk}\n        cashedInCandy={state.cashedInCandy}\n        candyInHand={state.candyInHand}\n        user={user}\n        alreadyAtHomePlayerIds={state.alreadyAtHomePlayerIds}\n        continuingPlayerIds={state.continuingPlayerIds}\n        goingHomePlayerIds={state.goingHomePlayerIds}\n      />\n    </PhaseContainer>\n  );\n}\n","// Types\nimport type { GamePlayer, GamePlayers } from 'types/player';\nimport type { GameRound } from 'types/game';\nimport type { CandySidewalk, StreetCard } from './utils/types';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { PlayerStats } from './components/PlayerStats';\nimport { Street } from './components/Street';\nimport { CardCountExplanation } from './components/RulesBlobs';\nimport { Step, type StepProps } from 'components/steps';\nimport { RuleInstruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { PopoverRule } from 'components/rules';\nimport { HostNextPhaseButton } from 'components/host';\nimport { PlayersDecisionState } from './components/PlayersDecisionState';\n\ntype StepStreetEndProps = {\n  street: StreetCard[];\n  currentCard: StreetCard;\n  candySidewalk: CandySidewalk;\n  user: GamePlayer;\n  isDoubleHorror: boolean;\n  round: GameRound;\n  players: GamePlayers;\n  alreadyAtHomePlayerIds: PlayerId[];\n  goingHomePlayerIds: PlayerId[];\n  continuingPlayerIds: PlayerId[];\n  candyInHand: number;\n} & Pick<StepProps, 'announcement'>;\n\nexport function StepStreetEnd({\n  street,\n  currentCard,\n  candySidewalk,\n  user,\n  isDoubleHorror,\n  round,\n  players,\n  alreadyAtHomePlayerIds,\n  goingHomePlayerIds,\n  continuingPlayerIds,\n  candyInHand,\n  announcement,\n}: StepStreetEndProps) {\n  const { language } = useLanguage();\n\n  const monsterName = currentCard?.name?.[language] ?? '';\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title size=\"medium\" white>\n        {isDoubleHorror ? (\n          <Translate\n            pt={<>Um segundo {monsterName} surgiu do nada!</>}\n            en={<>A second {monsterName} came out of nowhere!</>}\n          />\n        ) : (\n          <Translate pt=\"Todo mundo voltou pra casa...\" en=\"Everybody went back home for now...\" />\n        )}\n      </Title>\n\n      <PopoverRule content={<CardCountExplanation />} />\n\n      <RuleInstruction type={isDoubleHorror ? 'alert' : 'event'}>\n        {isDoubleHorror && (\n          <>\n            <Translate\n              pt={<>Jogamos todos os doces pra cima e corremos desesperados pra casa!</>}\n              en={<>We threw all candy in the air and ran desperately home!</>}\n            />\n            <br />\n          </>\n        )}\n        {round.current < round.total && monsterName && (\n          <>\n            <Translate\n              pt={<>Uma carta do {monsterName} será removida, menos chances dele aparece novamente!</>}\n              en={<>One of the {monsterName} will be removed, so less chances of it showing up again!</>}\n            />\n            <br />\n          </>\n        )}\n\n        {round.current === round.total ? (\n          <Translate\n            pt=\"E a noite chegou ao fim... Hora de comer gostosuras!\"\n            en=\"And the night is over... Time to eat candy!\"\n          />\n        ) : (\n          <Translate pt=\"Próxima rua?\" en=\"Let's hit the next street?\" />\n        )}\n      </RuleInstruction>\n\n      <PlayersDecisionState\n        players={players}\n        goingHomePlayerIds={[]}\n        continuingPlayerIds={continuingPlayerIds}\n        alreadyAtHomePlayerIds={[...goingHomePlayerIds, ...alreadyAtHomePlayerIds]}\n        cashedInCandy={0}\n        candyInHand={candyInHand}\n        phase=\"STREET_END\"\n      />\n\n      <Street street={street} currentCard={currentCard} candySidewalk={candySidewalk} />\n\n      <HostNextPhaseButton>\n        {round.current < round.total ? <Translate pt=\"Próxima Casa\" en=\"Next House\" /> : 'Game Over'}\n      </HostNextPhaseButton>\n\n      <PlayerStats user={user} />\n    </Step>\n  );\n}\n","// Types\nimport type { PhaseProps } from 'types/game';\n// Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { ScaredIcon } from 'icons/ScaredIcon';\nimport { HouseIcon } from 'icons/HouseIcon';\n// Components\nimport { Translate } from 'components/language';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { StepStreetEnd } from './StepStreetEnd';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\n\nexport function PhaseStreetEnd({ state, players, info }: PhaseProps) {\n  const { step } = useStep(0);\n  const user = useUser(players, state);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={state.isDoubleHorror ? <ScaredIcon /> : <HouseIcon />}\n      title={<Translate pt=\"Fim da Rua\" en=\"End of the Street\" />}\n      currentRound={state?.round?.current}\n      duration={3}\n      type=\"overlay\"\n    >\n      <Instruction>\n        {state.isDoubleHorror ? (\n          <Translate pt=\"Corre cambada!!!\" en=\"Run for your life!!!\" />\n        ) : (\n          <Translate pt=\"E todo mundo foi pra casa...\" en=\"And everybody went home...\" />\n        )}\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.NA_RUA_DO_MEDO.STREET_END}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepStreetEnd\n          street={state.street}\n          currentCard={state.currentCard}\n          candySidewalk={state.candySidewalk}\n          user={user}\n          isDoubleHorror={state.isDoubleHorror}\n          round={state.round}\n          players={players}\n          alreadyAtHomePlayerIds={state.alreadyAtHomePlayerIds}\n          goingHomePlayerIds={state.goingHomePlayerIds}\n          continuingPlayerIds={state.continuingPlayerIds}\n          candyInHand={state.candyInHand}\n          announcement={announcement}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","export const GRID_REPEAT: NumberDictionary = {\n  3: 3,\n  4: 4,\n  5: 5,\n  6: 3,\n  7: 4,\n  8: 4,\n  9: 5,\n  10: 5,\n};\n","import { orderBy } from 'lodash';\n// Types\nimport type { PhaseProps } from 'types/game';\nimport type { GamePlayer } from 'types/player';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useUser } from 'hooks/useUser';\n// Utils\nimport { AVATARS } from 'utils/avatars';\nimport { achievementsReference } from './utils/achievements';\nimport { GRID_REPEAT } from './utils/constants';\n// Icons\nimport { PoopIcon } from 'icons/PoopIcon';\n// Components\nimport { CandyCount } from './components/CandyCount';\nimport { PlayerStats } from './components/PlayerStats';\nimport { GameOverWrapper } from 'components/game-over';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { Achievements } from 'components/general/Achievements';\nimport { CostumeAvatar } from 'components/avatars/CostumeAvatar';\n\nexport function PhaseGameOver({ state, players, info }: PhaseProps) {\n  const { language } = useLanguage();\n  const user = useUser(players, state);\n\n  const winningPlayersIds = state.winners.map((player: GamePlayer) => player.id);\n  const nonWinningPlayers = orderBy(\n    Object.values(players).filter((player) => !winningPlayersIds.includes(player.id)),\n    'score',\n    'desc'\n  );\n\n  return (\n    <GameOverWrapper\n      info={info}\n      state={state}\n      players={players}\n      announcementIcon={<PoopIcon />}\n      announcementDuration={6}\n      announcementContent={\n        <Instruction>\n          <Translate\n            pt=\"O jogador que comeu mais doces, teve uma caganeira horrível, mas é o campeão é...\"\n            en=\"The player who ate candy the most, had a terrible diarrhea, but it's the winner is...\"\n          />\n        </Instruction>\n      }\n    >\n      <Instruction contained>\n        <p>\n          <Translate pt=\"com\" en=\"with\" />\n        </p>\n        <ul className=\"n-game-over-players\">\n          {state.winners.map((player: GamePlayer) => {\n            return (\n              <div className=\"n-game-over-player\">\n                <CostumeAvatar\n                  key={`winner-${player.id}`}\n                  avatarId={state.winners[0].avatarId}\n                  id={player.costumeId}\n                />\n                <div>\n                  <CandyCount candyCount={player.score} size=\"default\" />\n                </div>\n              </div>\n            );\n          })}\n        </ul>\n      </Instruction>\n\n      <ul\n        className=\"n-game-over-players\"\n        style={{ gridTemplateColumns: `repeat(${GRID_REPEAT?.[Object.keys(players).length] ?? 5}, 1fr)` }}\n      >\n        {nonWinningPlayers.map((player) => (\n          <li className=\"n-game-over-player\" key={`game-over-player-${player.id}`}>\n            <div className=\"n-game-over-player__name\">\n              <CostumeAvatar avatarId={player.avatarId} id={player.costumeId} />\n              <br />\n              <strong>{player.name}</strong>, {AVATARS[player.avatarId].description[language]}\n            </div>\n            <div className=\"n-game-over-player__candy\">\n              <CandyCount candyCount={player.score} size=\"small\" />\n            </div>\n          </li>\n        ))}\n      </ul>\n\n      <Achievements players={players} achievements={state.achievements} reference={achievementsReference} />\n\n      <PlayerStats user={user} />\n    </GameOverWrapper>\n  );\n}\n","import { ConfigProvider } from 'antd';\n// Types\nimport type { GameState } from 'types/game';\n// Constants\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport { LoadingPage } from 'components/loaders';\nimport { PhaseTrickOrTreat } from './PhaseTrickOrTreat';\nimport { PhaseResult } from './PhaseResult';\nimport { PhaseStreetEnd } from './PhaseStreetEnd';\nimport { PhaseGameOver } from './PhaseGameOver';\n// Sass\nimport './utils/styles.scss';\n\nfunction getActiveComponent(state: GameState) {\n  // If phase is not defined, it is likely that the game is still loading\n  if (state && !state.phase) return LoadingPage;\n\n  switch (state.phase) {\n    case PHASES.DEFAULT.LOBBY:\n      return PhaseLobby;\n    case PHASES.DEFAULT.RULES:\n      return PhaseRules;\n    case PHASES.DEFAULT.SETUP:\n      return PhaseSetup;\n    case PHASES.NA_RUA_DO_MEDO.TRICK_OR_TREAT:\n      return PhaseTrickOrTreat;\n    case PHASES.NA_RUA_DO_MEDO.RESULT:\n      return PhaseResult;\n    case PHASES.NA_RUA_DO_MEDO.STREET_END:\n      return PhaseStreetEnd;\n    case PHASES.DEFAULT.GAME_OVER:\n      return PhaseGameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionNaRuaDoMedo() {\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorPrimary: THEME_COLORS.ORANGE,\n          colorLink: THEME_COLORS.ORANGE,\n        },\n      }}\n    >\n      <Session gameCollection={GAME_COLLECTION.NA_RUA_DO_MEDO} getActiveComponent={getActiveComponent} />\n    </ConfigProvider>\n  );\n}\n\nexport default SessionNaRuaDoMedo;\n","// Ant Design Resources\nimport { Avatar } from 'antd';\n// Icons\nimport { CandyIcon } from 'icons/CandyIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\n\ntype CandyCountProps = {\n  candyCount: number;\n  size?: 'small' | 'default' | 'large';\n};\n\nexport function CandyCount({ candyCount, size = 'small' }: CandyCountProps) {\n  return (\n    <>\n      <IconAvatar icon={<CandyIcon />} size={size} />\n      <Avatar size={size} style={{ backgroundColor: 'hotPink' }}>\n        {candyCount}\n      </Avatar>\n    </>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Tooltip } from 'antd';\n// Types\nimport type { StreetCard } from '../utils/types';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { ImageCard } from 'components/image-cards';\nimport { Translate } from 'components/language';\nimport { CandyCount } from './CandyCount';\n\ntype HouseCardProps = {\n  /**\n   * The candy, monster, jackpot card\n   */\n  card: StreetCard;\n  /**\n   * The quantity of candy left in the sidewalk\n   */\n  candyLeftover: number;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Unique id\n   */\n  id?: string;\n  /**\n   * If the house is the last one\n   */\n  active?: boolean;\n  /**\n   * Enables or disables preview\n   */\n  preview?: boolean;\n};\n\nexport function HouseCard({\n  card,\n  candyLeftover,\n  id,\n  className = '',\n  active = false,\n  preview,\n}: HouseCardProps) {\n  const { dualTranslate } = useLanguage();\n\n  const baseClass = 'n-house-card';\n  const cardBaseClass = 'n-house-card__card';\n\n  return (\n    <div\n      className={clsx(baseClass, `${baseClass}--${card.type}`, active && `${baseClass}--active`, className)}\n      id={id}\n    >\n      <div className=\"n-house-card__sidewalk\">\n        {card.type === 'candy' && candyLeftover > 0 && (\n          <Tooltip\n            color=\"hotPink\"\n            title={\n              <Translate\n                pt=\"Doces que não foram divididos entre os jogadores\"\n                en=\"Candy that wasn't shared between players\"\n              />\n            }\n          >\n            <CandyCount candyCount={candyLeftover} />\n          </Tooltip>\n        )}\n      </div>\n      <ImageCard id={card.key} cardWidth={80} className={clsx(cardBaseClass)} preview={preview} />\n\n      <h3 className={`${baseClass}__name`}>{dualTranslate(card.name)}</h3>\n\n      {active && (\n        <span\n          className={clsx(\n            `${baseClass}__active`,\n            getAnimationClass('heartBeat', { speed: 'slow', infinite: true })\n          )}\n        />\n      )}\n    </div>\n  );\n}\n","import { AchievementReference } from 'types/achievements';\n\nexport const achievementsReference: AchievementReference = {\n  BRAVEST: {\n    icon: 'sword',\n    title: {\n      pt: 'Mais Corajoso',\n      en: 'Bravest',\n    },\n    description: {\n      pt: 'Encontrou o maior número de monstros',\n      en: 'Encounter the most number of monsters',\n    },\n  },\n  LUCKIEST: {\n    icon: 'clover',\n    title: {\n      pt: 'Mais Sortudo',\n      en: 'Luckiest',\n    },\n    description: {\n      pt: 'Encontrou o menor número de monstros',\n      en: 'Encounter the fewest monsters',\n    },\n  },\n  CANDY_LOSER: {\n    icon: 'foot-prints',\n    title: {\n      pt: 'Mais Desesperado',\n      en: 'Most Desperate',\n    },\n    description: {\n      pt: 'Perdeu mais doces para ataques dos monstros',\n      en: 'Lost the most number of candy for a double monster',\n    },\n  },\n  MOST_SCARED: {\n    icon: 'face-scared',\n    title: {\n      pt: 'Mais Assustado',\n      en: 'Most Scared',\n    },\n    description: {\n      pt: 'Visitou o menor número de casas',\n      en: 'Visited the fewest houses',\n    },\n  },\n  MOST_HOUSES: {\n    icon: 'house',\n    title: {\n      pt: 'Mais Andador',\n      en: 'Most Houses',\n    },\n    description: {\n      pt: 'Visitou o maior número de casas',\n      en: 'Visited the most houses',\n    },\n  },\n  MOST_JACKPOTS: {\n    icon: 'dollar',\n    title: {\n      pt: 'Mais Boladas',\n      en: 'Most Jackpots',\n    },\n    description: {\n      pt: 'Ganhou mais boladas',\n      en: 'Got the most jackpots',\n    },\n  },\n  MOST_SIDEWALK: {\n    icon: 'candy',\n    title: {\n      pt: 'Mais Mendigo',\n      en: 'Most Sidewalk Candy',\n    },\n    description: {\n      pt: 'Catou mais doces da calçada',\n      en: 'Got the most candy from the sidewalk',\n    },\n  },\n};\n\nexport default achievementsReference;\n","export function QuestionIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#0573ce\"\n        d=\"M441.421 22.803H70.579C35.741 22.803 7.5 51.045 7.5 85.882v262.21c0 34.838 28.241 63.079 63.079 63.079h91.616l66.896 66.896c14.861 14.861 38.956 14.861 53.817 0l66.896-66.896h91.616c34.838 0 63.079-28.241 63.079-63.079V85.882c.001-34.837-28.24-63.079-63.078-63.079z\"\n      ></path>\n      <path\n        fill=\"#0067c5\"\n        d=\"M35.51 85.882v262.21c0 34.84 28.24 63.08 63.08 63.08H70.58c-34.84 0-63.08-28.24-63.08-63.08V85.882c0-34.84 28.24-63.08 63.08-63.08h28.01c-34.84 0-63.08 28.24-63.08 63.08zm234.5 400.66c-13.68 5.41-29.86 2.58-40.92-8.48l-66.89-66.89h20.665c4.697 0 9.201 1.865 12.522 5.186l61.713 61.704c3.8 3.8 8.21 6.63 12.91 8.48z\"\n      ></path>\n      <path\n        fill=\"#f9f7f8\"\n        d=\"M256.002 297.061c-14.574 0-26.39-11.815-26.39-26.39v-11.194c0-26.048 16.402-49.348 40.816-57.979 18.364-6.493 30.197-24.654 28.774-44.162-1.557-21.362-18.853-38.527-40.231-39.927-22.612-1.494-42.759 14.837-45.872 37.149a44.164 44.164 0 00-.419 6.076c0 14.574-11.815 26.39-26.39 26.39-14.574 0-26.39-11.815-26.39-26.39 0-4.468.312-8.966.926-13.369 6.914-49.552 51.539-85.807 101.592-82.522 47.518 3.112 85.961 41.269 89.423 88.756 3.146 43.161-23.098 83.361-63.82 97.76-3.368 1.191-5.631 4.494-5.631 8.219v11.194c.002 14.574-11.813 26.389-26.388 26.389zm0 78.522c-14.574 0-26.39-11.815-26.39-26.39v-.219c0-14.574 11.815-26.39 26.39-26.39 14.574 0 26.39 11.815 26.39 26.39v.219c0 14.575-11.815 26.39-26.39 26.39z\"\n      ></path>\n      <path\n        fill=\"#dedbee\"\n        d=\"M184.155 147.268a96.29 96.29 0 00-.923 13.366c0 10.387 5.997 19.376 14.723 23.674a26.227 26.227 0 01-11.665 2.715c-14.565 0-26.389-11.81-26.389-26.389 0-4.468.316-8.963.936-13.366 6.907-49.562 51.539-85.81 101.588-82.528 1.793.119 3.572.29 5.339.514-42.378 5.219-77.532 38.489-83.609 82.014zm109.603 54.228c-24.412 8.634-40.822 31.938-40.822 57.985v11.191c0 10.387 6.011 19.377 14.737 23.674a26.227 26.227 0 01-11.665 2.715c-14.579 0-26.389-11.81-26.389-26.389V259.48c0-26.046 16.398-49.351 40.822-57.985 18.362-6.498 30.185-24.649 28.762-44.157-1.331-18.348-14.275-33.599-31.451-38.41a43.132 43.132 0 0114.552-1.516c21.38 1.397 38.674 18.559 40.229 39.926 1.423 19.509-10.414 37.659-28.775 44.158zm-26.086 171.37a26.227 26.227 0 01-11.665 2.715c-14.579 0-26.389-11.81-26.389-26.389v-.224c0-14.565 11.81-26.389 26.389-26.389 4.192 0 8.146.975 11.665 2.715-8.726 4.31-14.737 13.3-14.737 23.674v.224c0 10.387 6.011 19.376 14.737 23.674z\"\n      ></path>\n      <path d=\"M256 496.692c-11.667 0-23.332-4.44-32.213-13.321l-64.693-64.704H70.58c-38.918 0-70.58-31.662-70.58-70.58V85.878c0-38.913 31.662-70.57 70.58-70.57h370.84c38.918 0 70.58 31.657 70.58 70.57v262.21c0 31.374-21.052 59.288-51.193 67.883a7.499 7.499 0 01-9.269-5.156 7.5 7.5 0 015.156-9.269c23.731-6.767 40.306-28.75 40.306-53.458V85.878c0-30.641-24.933-55.57-55.58-55.57H70.58C39.933 30.308 15 55.236 15 85.878v262.21c0 30.647 24.933 55.58 55.58 55.58h91.62c1.989 0 3.897.79 5.304 2.197l66.89 66.9c11.914 11.914 31.299 11.914 43.213 0l66.889-66.9a7.5 7.5 0 015.304-2.197h74.12a7.5 7.5 0 010 15h-71.013l-64.693 64.703c-8.881 8.881-20.548 13.321-32.214 13.321z\"></path>\n      <path d=\"M256 304.558c-18.687 0-33.89-15.203-33.89-33.89v-11.19c0-29.219 18.414-55.362 45.82-65.051 15.19-5.37 24.973-20.396 23.79-36.541-1.281-17.655-15.571-31.837-33.24-32.994-18.715-1.231-35.38 12.253-37.952 30.702a36.335 36.335 0 00-.348 5.044c0 18.687-15.203 33.89-33.89 33.89s-33.89-15.203-33.89-33.89c0-4.841.338-9.692 1.003-14.417a102.082 102.082 0 018.645-29.195 7.5 7.5 0 0113.584 6.362 87.145 87.145 0 00-7.374 24.918 88.583 88.583 0 00-.858 12.331c0 10.416 8.474 18.89 18.89 18.89s18.89-8.474 18.89-18.89c0-2.405.166-4.802.493-7.126 3.65-26.185 27.296-45.335 53.79-43.588 25.097 1.644 45.397 21.794 47.217 46.871 1.675 22.865-12.203 44.157-33.751 51.774-21.425 7.575-35.82 28.033-35.82 50.909v11.19c0 10.416 8.474 18.89 18.89 18.89s18.89-8.474 18.89-18.89v-11.19c0-6.901 4.273-13.047 10.633-15.292 37.546-13.274 61.742-50.343 58.837-90.142-3.189-43.774-38.626-78.945-82.43-81.812-24.875-1.633-49.509 7.462-67.584 24.956a7.499 7.499 0 01-10.605-.174 7.5 7.5 0 01.173-10.605c21.112-20.432 49.903-31.056 78.998-29.145 51.231 3.353 92.678 44.49 96.408 95.689 3.396 46.521-24.896 89.854-68.8 105.376-.314.111-.63.541-.63 1.149v11.19c.001 18.687-15.202 33.891-33.889 33.891zm.002 78.525c-18.687 0-33.89-15.203-33.89-33.89v-.219c0-18.687 15.203-33.89 33.89-33.89s33.89 15.203 33.89 33.89v.219c0 18.687-15.203 33.89-33.89 33.89zm0-52.998c-10.416 0-18.89 8.474-18.89 18.89v.219c0 10.416 8.474 18.89 18.89 18.89s18.89-8.474 18.89-18.89v-.219c0-10.416-8.474-18.89-18.89-18.89z\"></path>\n    </svg>\n  );\n}\n"],"names":["CustomAvatarWrapper","sprite","prefix","id","avatarId","animate","className","width","viewBox","props","avatarData","AVATARS","hasAvatar","Boolean","clsx","style","animationDuration","Math","random","Number","fill","color","d","href","x","y","height","borderRadius","avatars","unknownText","pt","en","Achievements","players","achievements","reference","length","getAnimationClass","size","level","map","achievement","index","type","icon","achievementObj","player","playerId","delay","title","name","description","content","value","shape","RoundAnnouncement","round","onPressButton","buttonText","time","children","unskippable","circleColor","useTemporarilyHidePlayersBar","translate","useLanguage","circleStyle","borderColor","src","roundTitlePt","roundTitleEn","alt","current","onClick","onExpire","duration","disabled","custom","submitAction","httpsCallable","functions","MORE_CONTINUE","MORE_HOME","mockPlayerDecision","horrorLength","hand","decision","getRandomItem","PlayerStats","user","omitDecision","FloatingHand","TrickOrTreatIcon","withName","DecisionIcon","totalCandy","jackpots","jackpot","key","cardWidth","QuestionIcon","WalkIcon","HouseIcon","CandyHighlight","TitleIPadHighlight","TabletIcon","CANDY_VALUES","DecisionExplanation","totalCandyInSidewalk","isThereAnyCandy","CardCountExplanation","join","Street","street","currentCard","candySidewalk","useEffect","streetEl","document","getElementById","currentCardEl","scrollLeft","offsetLeft","backgroundImage","PUBLIC_URL","card","HouseCard","candyLeftover","leftover","undefined","active","PlayersDecisionState","goingHomePlayerIds","continuingPlayerIds","alreadyAtHomePlayerIds","cashedInCandy","candyInHand","phase","DecisionSection","playersInSection","ScaredIcon","hasPlayers","CostumeAvatar","costumeId","NewHouseCard","dualTranslate","baseClass","timeLeft","useCountdown","NOOP","StepMakeDecision","onSubmitDecision","candyPerPlayer","isLoading","useLoading","useMock","isTrickOrTreating","ready","filter","fullWidth","white","CandyCount","candyCount","PhaseTrickOrTreat","state","info","useUser","isNewStreet","useStep","step","goToNextStep","request","useAPICall","apiFunction","actionName","onSuccess","window","scrollTo","top","left","behavior","successMessage","errorMessage","payload","action","useOnSubmitDecisionAPIRequest","allowedPhase","PHASES","waitingRoom","appearance","contained","total","StreetIcon","onClose","currentRound","StepResult","autoTriggerTime","PhaseResult","StepStreetEnd","isDoubleHorror","announcement","language","monsterName","PhaseStreetEnd","GRID_REPEAT","PhaseGameOver","winningPlayersIds","winners","nonWinningPlayers","orderBy","Object","values","includes","announcementIcon","PoopIcon","announcementDuration","announcementContent","score","gridTemplateColumns","keys","achievementsReference","getActiveComponent","LoadingPage","PhaseLobby","PhaseRules","PhaseSetup","PageError","theme","token","colorPrimary","THEME_COLORS","colorLink","gameCollection","GAME_COLLECTION","backgroundColor","preview","speed","infinite","BRAVEST","LUCKIEST","CANDY_LOSER","MOST_SCARED","MOST_HOUSES","MOST_JACKPOTS","MOST_SIDEWALK","xmlns"],"sourceRoot":""}