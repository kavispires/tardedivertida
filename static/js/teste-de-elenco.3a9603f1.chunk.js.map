{"version":3,"file":"static/js/teste-de-elenco.3a9603f1.chunk.js","mappings":"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","sources":["components/general/Container.tsx","games/teste-de-elenco/utils/api-requests.ts","games/teste-de-elenco/utils/helpers.ts","games/teste-de-elenco/StepSelectGenre.tsx","games/teste-de-elenco/PhaseMovieGenreSelection.tsx","games/teste-de-elenco/components/ActorsBoard.tsx","games/teste-de-elenco/components/RoleBoard.tsx","icons/SpeakerIcon.tsx","../node_modules/@ant-design/icons-svg/es/asn/QuestionOutlined.js","../node_modules/@ant-design/icons/es/icons/QuestionOutlined.js","games/teste-de-elenco/components/CastSummary.tsx","games/teste-de-elenco/StepSelectActor.tsx","games/teste-de-elenco/PhaseActorSelection.tsx","games/teste-de-elenco/StepRanking.tsx","games/teste-de-elenco/components/ActorsSelections.tsx","games/teste-de-elenco/components/ReleasedActors.tsx","games/teste-de-elenco/StepResult.tsx","games/teste-de-elenco/PhaseResult.tsx","games/teste-de-elenco/components/MovieStats.tsx","games/teste-de-elenco/PhaseGameOver.tsx","games/teste-de-elenco/SessionTesteDeElenco.tsx","games/teste-de-elenco/utils/achievements.ts","icons/CrownIcon.tsx","icons/KnifeIcon.tsx","icons/LoveIcon.tsx","icons/NoIcon.tsx","../node_modules/@ant-design/icons-svg/es/asn/DownCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/DownCircleOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/UpCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/UpCircleOutlined.js"],"sourcesContent":["import { ReactNode } from 'react';\nimport clsx from 'clsx';\n// Ant Design Resources\nimport { Space, SpaceProps } from 'antd';\n// Components\nimport { Title, TitleProps } from 'components/text';\n// Sass\nimport './Container.scss';\n\ntype ContainerProps = {\n  title: ReactNode;\n  children: ReactNode;\n  contained?: boolean;\n  className?: string;\n  titleProps?: TitleProps;\n  childrenContainerProps?: SpaceProps;\n} & Omit<SpaceProps, 'title' | 'children'>;\n\n/**\n * Container component with title and center aligned children\n */\nexport function Container({\n  title,\n  children,\n  className,\n  contained,\n  titleProps,\n  childrenContainerProps,\n  ...spaceProps\n}: ContainerProps) {\n  const { level = 4, size = 'xx-small', ...restTitleProps } = titleProps ?? {};\n\n  const {\n    className: childrenClassName,\n    wrap = true,\n    direction: childrenDirection = 'horizontal',\n    ...restChildrenContainerProps\n  } = childrenContainerProps ?? {};\n\n  return (\n    <Space direction=\"vertical\" className={clsx('container-wrapper', className)} {...spaceProps}>\n      <Title level={level} size={size} {...restTitleProps}>\n        {title}\n      </Title>\n\n      <Space\n        direction={childrenDirection}\n        wrap={wrap}\n        className={clsx(\n          'container-wrapper__children',\n          contained && 'container-wrapper__children--contained',\n          childrenClassName\n        )}\n        {...restChildrenContainerProps}\n      >\n        {children}\n      </Space>\n    </Space>\n  );\n}\n","import { functions } from 'services/firebase';\nimport { httpsCallable } from 'firebase/functions';\nimport { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\n\nconst submitAction = httpsCallable(functions, 'testeDeElencoSubmitAction');\n\nexport function useOnSubmitMovieGenreAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: submitAction,\n    actionName: 'submit-genre',\n    onSuccess: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: translate('Gênero submetido com sucesso', 'Genre submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua ação',\n      'Oops, the application found an error while trying to submit your action'\n    ),\n  });\n\n  return (payload: SubmitMovieGenrePayload) => {\n    request({\n      action: 'SELECT_MOVIE_GENRE',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitMovieActorAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: submitAction,\n    actionName: 'submit-genre',\n    onSuccess: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: translate('Ator submetido com sucesso', 'Actor submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua ação',\n      'Oops, the application found an error while trying to submit your action'\n    ),\n  });\n\n  return (payload: SubmitMovieActorPayload) => {\n    request({\n      action: 'SELECT_ACTOR',\n      ...payload,\n    });\n  };\n}\n","import { MovieComedyIcon } from 'icons/MovieComedyIcon';\nimport { MovieActionIcon } from 'icons/MovieActionIcon';\nimport { MovieDramaIcon } from 'icons/MovieDramaIcon';\nimport { MovieHorrorIcon } from 'icons/MovieHorrorIcon';\nimport { MovieSciFiIcon } from 'icons/MovieSciFiIcon';\n\nexport const Icons: Record<string, any> = {\n  ACTION: MovieActionIcon,\n  COMEDY: MovieComedyIcon,\n  DRAMA: MovieDramaIcon,\n  HORROR: MovieHorrorIcon,\n  SCI_FI: MovieSciFiIcon,\n};\n\nexport const chatGPTMoviePrompt = (movie: FeatureFilm, language: Language): string => {\n  if (language === 'en') {\n    let prompt = `Write the script for the trailer of a ${movie.title.en} movie that contains the following characters and their traits. Give the characters names and if the story contains a narrator, make him/her also one of the characters related to the protagonist. End the text with an impactful question. Here are the characters:\\n`;\n\n    Object.values(movie.roles).forEach((role) => {\n      if (role.cast) {\n        if (role.id === 'THE_SPECIAL_GUEST') {\n          prompt += `\\nThe reveal `;\n        } else {\n          prompt += `\\n${role.title.en} `;\n        }\n        if (role.id === 'THE_NARRATOR') {\n          prompt += `(reveal the narrator as one of the characters related to the protagonist) `;\n        }\n\n        prompt += `- ${role.description.en}:`;\n\n        const actor = role.candidates[role.actor];\n        prompt += ` ${actor.name[language].split(' ')[0]}, ${actor.gender}, age ${actor.age}, ${\n          actor.ethnicity\n        },`;\n        prompt += ` with the traits: ${role.traits.join(', ')}.\\n`;\n      }\n    });\n\n    return prompt;\n  }\n\n  let prompt = `Escreva o resumo de um filme de ${movie.title.pt} que contenha os personagens e incorpore  as suas características no texto. Dê um nome a cada personagem. Para a idade, escolha um número aleatório dentre a faixa dada, por exemplo 20-30, diga 26 anos. Não use parenteses no texto. Adicione um plot twist inesperado. Aqui vão os personagens: \\n`;\n\n  Object.values(movie.roles).forEach((role) => {\n    if (role.cast) {\n      if (role.id === 'THE_SPECIAL_GUEST') {\n        prompt += `\\nA revelação `;\n      } else {\n        prompt += `\\n${role.title.pt} `;\n      }\n      if (role.id === 'THE_NARRATOR') {\n        prompt += `(revele que o narrador como um dos personagens relacionados ao protagonista) `;\n      }\n\n      prompt += `- ${role.description.pt}:`;\n      const actor = role.candidates[role.actor];\n      prompt += ` ${actor.name[language].split(' ')[0]},  ${\n        actor.gender === 'male' ? 'homem' : 'mulher'\n      }, idade entre ${actor.age}, ${actor.ethnicity},`;\n      prompt += ` com as características: ${role.traits.join(', ')}.\\n`;\n    }\n  });\n\n  return prompt;\n};\n\nexport const getMovieSummary = (movie: FeatureFilm) => {\n  const roles = Object.values(movie.roles).filter((role) => role.cast);\n  const totalActors = roles.length;\n\n  // Calculate Gender diversity\n  const maleCount = roles.filter((role) => role.candidates[role.actor].gender === 'male').length;\n  const femaleCount = totalActors - maleCount;\n  const difference = Math.abs(maleCount - femaleCount + 1);\n\n  const genderDiversity = ((totalActors - difference) / totalActors) * 100;\n\n  // Calculate Age diversity\n  const uniqueAges = new Set(roles.map((role) => role.candidates[role.actor].age));\n  const ageDiversity = ((uniqueAges.size - 1) / totalActors) * 100;\n\n  // Calculate Ethnicity diversity\n  const uniqueRaces = new Set(roles.map((role) => role.candidates[role.actor].ethnicity));\n  const ethnicityDiversity = ((uniqueRaces.size - 1) / totalActors) * 100;\n\n  let isLGBTQA = false;\n  if (\n    movie.rolesOrder.includes('THE_LOVE_INTEREST') &&\n    movie.roles.THE_LOVE_INTEREST.actor &&\n    movie.rolesOrder.includes('THE_PROTAGONIST') &&\n    movie.roles.THE_PROTAGONIST.actor\n  ) {\n    const loveInterestGender: string =\n      movie.roles.THE_LOVE_INTEREST.candidates[movie.roles.THE_LOVE_INTEREST.actor].gender;\n\n    const protagonistGender: string =\n      movie.roles.THE_PROTAGONIST.candidates[movie.roles.THE_PROTAGONIST.actor].gender;\n    isLGBTQA = loveInterestGender === protagonistGender;\n  }\n\n  return {\n    genderDiversity,\n    ageDiversity,\n    ethnicityDiversity,\n    isLGBTQA,\n  };\n};\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { getRandomItem } from 'utils/helpers';\nimport { Icons } from './utils/helpers';\n// Icons\nimport { MovieGenreIcon } from 'icons/MovieGenreIcon';\n// Components\nimport { Step } from 'components/steps';\nimport { RuleInstruction, Title } from 'components/text';\nimport { DualTranslate, Translate } from 'components/language';\nimport { TransparentButton } from 'components/buttons';\nimport { IconAvatar } from 'components/avatars';\n\ntype StepSelectGenreProps = {\n  user: GamePlayer;\n  genres: MovieGenreOption[];\n  onSubmitGenre: (payload: SubmitMovieGenrePayload) => void;\n} & AnnouncementProps;\n\nexport function StepSelectGenre({ user, announcement, genres, onSubmitGenre }: StepSelectGenreProps) {\n  const { isLoading } = useLoading();\n\n  useMock(() => {\n    onSubmitGenre({ genre: getRandomItem(genres).key });\n  });\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title>\n        <Translate pt={<>Selecione o gênero do filme</>} en={<>Select the movie genre</>} />\n      </Title>\n\n      <RuleInstruction type=\"rule\">\n        <Translate\n          pt={\n            <>\n              Somos diretores de elenco tentando determinar o elenco para um filme! Haverá 5 papéis para\n              escalar, mas primeiro precisamos decidir qual é o gênero do filme em que vamos trabalhar!\n              <br />\n              Isso vai determinar quais serão os papéis que precisaremos escalar!\n            </>\n          }\n          en={\n            <>\n              We are casting directors trying to determine the cast for a movie! There will be 5 roles to\n              cast, but we first need to decide what genre is the movie we'll be working on!\n              <br />\n              This will determine what roles we'll need to cast!\n            </>\n          }\n        />\n      </RuleInstruction>\n\n      <Space className=\"movie-genre-selection\">\n        {genres.map((genre) => {\n          const Icon = Icons?.[genre.key] ?? MovieGenreIcon;\n          return (\n            <TransparentButton\n              key={genre.key}\n              onClick={() => onSubmitGenre({ genre: genre.key })}\n              disabled={isLoading || user.ready}\n              className=\"movie-genre-selection__button\"\n            >\n              <IconAvatar icon={<Icon />} size={64} />\n              <DualTranslate>{genre.title}</DualTranslate>\n            </TransparentButton>\n          );\n        })}\n      </Space>\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitMovieGenreAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { MovieGenreIcon } from 'icons/MovieGenreIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\nimport { StepSelectGenre } from './StepSelectGenre';\n\nexport function PhaseMovieGenreSelection({ players, state, info }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, setStep } = useStep();\n\n  const onSubmitGenre = useOnSubmitMovieGenreAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<MovieGenreIcon />}\n      title={<Translate pt=\"Seleção do Gênero do Filme\" en=\"Movie Genre Selection\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <Instruction>\n        <Translate\n          pt={\n            <>\n              Somos diretores de elenco tentando determinar o elenco para um filme! Haverá 5 papéis para\n              escalar, mas primeiro precisamos decidir qual é o gênero do filme em que vamos trabalhar!\n            </>\n          }\n          en={\n            <>\n              We are casting directors trying to determine the cast for a movie! There will be 5 roles to\n              cast, but we first need to decide what genre is the movie we'll be working on!\n            </>\n          }\n        />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.TESTE_DE_ELENCO.MOVIE_GENRE_SELECTION}\n    >\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepSelectGenre\n          user={user}\n          onSubmitGenre={onSubmitGenre}\n          genres={state.genres}\n          announcement={announcement}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","// Ant Design Resources\nimport { Popconfirm, Space } from 'antd';\nimport { TransparentButton } from 'components/buttons';\nimport { SuspectCard } from 'components/cards/SuspectCard';\n\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\n\ntype ActorsBoardProps = {\n  actors: ActingRole['candidates'];\n  selection: CardId[];\n  user: GamePlayer;\n  onSubmitActor: (payload: SubmitMovieActorPayload) => void;\n};\n\nexport function ActorsBoard({ actors, user, onSubmitActor, selection }: ActorsBoardProps) {\n  const cardWidth = useCardWidth(4, { gap: 16, minWidth: 80, maxWidth: 150, margin: 16 });\n  const { isLoading } = useLoading();\n  const { language, translate } = useLanguage();\n\n  return (\n    <Space className=\"actors-board space-container\" wrap>\n      {selection.map((actorId) => {\n        const actor = actors[actorId];\n        const name = actor.name[language];\n\n        return (\n          <Popconfirm\n            key={actor.id}\n            title={translate(\n              `Tem certeza que quer escolher ${name}?`,\n              `Are you sure you want to choose ${name}?`\n            )}\n            onConfirm={() => onSubmitActor({ actorId: actor.id })}\n            okText={translate('Sim', 'Yes')}\n            cancelText={translate('Não', 'No')}\n            disabled={isLoading || user.ready}\n          >\n            <TransparentButton\n              className=\"characters-table__character characters-table__character-button\"\n              disabled={isLoading || user.ready}\n            >\n              <SuspectCard suspect={actor} width={cardWidth} />\n            </TransparentButton>\n          </Popconfirm>\n        );\n      })}\n    </Space>\n  );\n}\n","// Ant Design Resources\nimport { Space, Avatar as AntAvatar } from 'antd';\n// Utils\nimport { pluralize } from 'utils/helpers';\nimport { Icons } from '../utils/helpers';\n// Icons\nimport { MovieGenreIcon } from 'icons/MovieGenreIcon';\nimport { NoIcon } from 'icons/NoIcon';\n// Components\nimport { Instruction, TextHighlight, Title } from 'components/text';\nimport { DualTranslate, Translate } from 'components/language';\nimport { IconAvatar } from 'components/avatars';\nimport { Fragment } from 'react';\n\ntype RoleBoardProps = {\n  movie?: FeatureFilm;\n  activeRole: ActingRole;\n  instruction: 'SELECT' | 'RESULT' | 'CAST';\n  children?: React.ReactNode;\n  outcome?: string;\n};\n\nexport function RoleBoard({ activeRole, instruction, movie, children, outcome }: RoleBoardProps) {\n  const traitCount = activeRole.traits.length;\n\n  const movieId = movie?.id ?? '';\n  const Icon = Icons?.[movieId] ?? MovieGenreIcon;\n\n  return (\n    <Space wrap>\n      <Space className=\"role\" direction=\"vertical\" align=\"center\">\n        {movie && (\n          <>\n            <Icon width={75} />\n            <Title size=\"small\" className=\"role__title\">\n              <DualTranslate>{movie.title}</DualTranslate>\n            </Title>\n          </>\n        )}\n        {children}\n      </Space>\n\n      <Space className=\"role\" direction=\"vertical\">\n        {instruction !== 'CAST' && (\n          <div className=\"role__round\">\n            <AntAvatar size=\"large\" style={{ backgroundColor: 'orange' }}>\n              {instruction === 'SELECT' || outcome === 'CAST' ? activeRole.round : activeRole.round - 1}\n            </AntAvatar>\n          </div>\n        )}\n        <Title size=\"small\" className=\"role__title\">\n          <DualTranslate>{activeRole.title}</DualTranslate>\n        </Title>\n        <Instruction className=\"role__description\">\n          \"<DualTranslate>{activeRole.description}</DualTranslate>\"\n        </Instruction>\n\n        <Instruction className=\"role__instructions\">\n          {instruction === 'SELECT' && (\n            <Translate\n              pt={\n                <>\n                  Selecione o ator que mais combina com{' '}\n                  {pluralize(traitCount, 'a característica', 'as características')} abaixo:\n                </>\n              }\n              en={<>Select the actor that best fits the {pluralize(traitCount, 'trait')} below:</>}\n            />\n          )}\n\n          {instruction === 'RESULT' && (\n            <Translate\n              pt=\"Esses são as características para esse papel:\"\n              en=\"These are the traits for this role:\"\n            />\n          )}\n\n          {instruction === 'CAST' && !activeRole.cast && (\n            <div className=\"role__cancelled\">\n              <IconAvatar icon={<NoIcon />} />{' '}\n              <Translate\n                pt=\"Papel cancelado por falta de atores competentes\"\n                en=\"Role canceled due to lack of competent actors\"\n              />\n            </div>\n          )}\n        </Instruction>\n\n        <Instruction className=\"role__traits\">\n          <ul>\n            {activeRole.traits.map((trait, index) => {\n              if (index === traitCount - 1 && instruction === 'RESULT' && outcome === 'CONTINUE') {\n                return <Fragment key={trait} />;\n              }\n              return (\n                <li key={trait}>\n                  <TextHighlight>{trait}</TextHighlight>\n                </li>\n              );\n            })}\n          </ul>\n        </Instruction>\n      </Space>\n    </Space>\n  );\n}\n","export function SpeakerIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#b6c4cf\"\n        d=\"M279 60l-141 98-3 7h-28v178h28l3 9 141 98c8 5 18 0 18-10V69c0-9-10-15-18-9z\"\n      ></path>\n      <path\n        fill=\"#f79595\"\n        d=\"M339 213c-4 6-4 12 1 17 6 7 9 16 9 25 0 10-3 18-9 25-4 5-5 12 0 17 6 7 18 8 24 1a63 63 0 000-85c-7-7-19-7-25 0z\"\n      ></path>\n      <path\n        fill=\"#fd8087\"\n        d=\"M376 168c-4 6-3 13 2 18 20 18 33 42 33 69s-12 52-32 69c-6 5-7 13-2 19 6 6 17 7 23 1 26-22 42-54 42-89s-17-67-43-89c-6-6-17-5-23 2z\"\n      ></path>\n      <path\n        fill=\"#fe646f\"\n        d=\"M413 123c-5 6-4 14 2 18 35 28 57 69 58 114 0 45-22 86-57 114-6 5-7 13-2 19 6 6 16 7 23 2 41-33 67-82 66-135 0-54-26-102-68-135-6-5-17-4-22 3z\"\n      ></path>\n      <path fill=\"#9facba\" d=\"M279 412l-141-99v39l141 98c8 5 18 0 18-10v-38c0 9-10 15-18 10z\"></path>\n      <path fill=\"#596c76\" d=\"M138 352H36c-16 0-30-13-30-30V188c0-17 14-30 30-30h102z\"></path>\n      <path fill=\"#465a61\" d=\"M6 284v38c0 17 14 30 30 30h102v-39H36c-16 0-30-13-30-29z\"></path>\n      <path d=\"M285 51c-4 0-7 1-11 3l-138 97H37c-20 0-37 16-37 37v69a7 7 0 1015 0v-69c0-12 10-22 22-22h94v178H37c-12 0-22-10-22-22v-30a7 7 0 10-15 0v30c0 20 17 37 37 37h99l138 96c4 3 7 4 11 4 11 0 19-9 19-19V216a7 7 0 10-15 0v224c0 3-2 4-4 4l-2-1-137-95V162l137-95 2-1c2 0 4 1 4 4v111a7 7 0 1015 0V70c0-10-8-19-19-19zm84 251c12-13 18-30 18-47s-7-34-18-47c-10-10-27-10-36 1-7 8-6 19 1 27 5 5 7 12 7 19 0 8-2 14-7 20-7 8-7 19 0 27 8 11 26 11 35 0zm-24-10c-2-2-2-5 0-7a45 45 0 000-59c-2-3-2-5 0-8 3-3 9-4 12 0 10 11 15 23 15 37s-5 27-14 37c-3 4-10 4-13 0z\"></path>\n      <path d=\"M448 255c0-36-16-70-44-94-5-4-10-6-16-6-7 0-14 3-18 8v1c-7 8-6 21 3 28 19 17 30 39 30 63s-11 47-30 63c-8 8-10 20-2 29 8 10 24 11 33 3 29-25 44-59 44-95zm-53 83c-4 3-10 3-13-1-2-2-1-5 1-8 23-19 35-45 35-74 0-28-13-55-35-74-3-2-3-5-1-8 1-2 4-3 6-3l6 2c25 22 39 51 39 83s-13 61-38 83z\"></path>\n      <path d=\"M510 255c0-54-26-105-71-140-10-8-25-6-33 4-7 9-5 22 4 29 34 27 54 66 54 107v1c0 40-19 79-53 107a20 20 0 00-3 29c8 10 23 11 33 3 44-35 69-86 69-139zm-79 128c-3 3-9 3-12-1-2-2-1-6 1-8 38-30 59-73 59-118v-1c0-46-22-89-60-119-3-2-3-5-1-8 3-3 8-4 12-1 41 32 65 79 65 128v1c0 48-23 95-64 127z\"></path>\n    </svg>\n  );\n}\n","// This icon file is generated automatically.\nvar QuestionOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M764 280.9c-14-30.6-33.9-58.1-59.3-81.6C653.1 151.4 584.6 125 512 125s-141.1 26.4-192.7 74.2c-25.4 23.6-45.3 51-59.3 81.7-14.6 32-22 65.9-22 100.9v27c0 6.2 5 11.2 11.2 11.2h54c6.2 0 11.2-5 11.2-11.2v-27c0-99.5 88.6-180.4 197.6-180.4s197.6 80.9 197.6 180.4c0 40.8-14.5 79.2-42 111.2-27.2 31.7-65.6 54.4-108.1 64-24.3 5.5-46.2 19.2-61.7 38.8a110.85 110.85 0 00-23.9 68.6v31.4c0 6.2 5 11.2 11.2 11.2h54c6.2 0 11.2-5 11.2-11.2v-31.4c0-15.7 10.9-29.5 26-32.9 58.4-13.2 111.4-44.7 149.3-88.7 19.1-22.3 34-47.1 44.3-74 10.7-27.9 16.1-57.2 16.1-87 0-35-7.4-69-22-100.9zM512 787c-30.9 0-56 25.1-56 56s25.1 56 56 56 56-25.1 56-56-25.1-56-56-56z\" } }] }, \"name\": \"question\", \"theme\": \"outlined\" };\nexport default QuestionOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport QuestionOutlinedSvg from \"@ant-design/icons-svg/es/asn/QuestionOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar QuestionOutlined = function QuestionOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: QuestionOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  QuestionOutlined.displayName = 'QuestionOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(QuestionOutlined);","import { DualTranslate } from 'components/language';\nimport { Tooltip } from 'antd';\nimport { StarIcon } from 'icons/StarIcon';\nimport { FireIcon } from 'icons/FireIcon';\nimport { MovieStarIcon } from 'icons/MovieStarIcon';\nimport { SkullIcon } from 'icons/SkullIcon';\nimport { PlayerIcon } from 'icons/PlayerIcon';\nimport { LoveIcon } from 'icons/LoveIcon';\nimport { SupportIcon } from 'icons/SupportIcon';\nimport { ComedyIcon } from 'icons/ComedyIcon';\nimport { SpeakerIcon } from 'icons/SpeakerIcon';\nimport { BrainIcon } from 'icons/BrainIcon';\nimport { KnifeIcon } from 'icons/KnifeIcon';\nimport { IconAvatar } from 'components/avatars';\nimport { CheckOutlined, QuestionOutlined } from '@ant-design/icons';\n\ntype CastSummaryProps = {\n  movie: FeatureFilm;\n};\n\nexport function CastSummary({ movie }: CastSummaryProps) {\n  const icons: Record<string, any> = {\n    main: StarIcon,\n    anti: SkullIcon,\n    supporting: SupportIcon,\n    important: MovieStarIcon,\n    love: LoveIcon,\n    comic: ComedyIcon,\n    voice: SpeakerIcon,\n    minor: PlayerIcon,\n    visual: FireIcon,\n    dead: KnifeIcon,\n    mentor: BrainIcon,\n  };\n\n  return (\n    <div className=\"cast-summary\">\n      {movie.rolesOrder.map((roleId) => {\n        const role = movie.roles[roleId];\n        const Icon = icons?.[role.type] ?? MovieStarIcon;\n        return (\n          <div key={roleId} className=\"cast-summary__entry\">\n            <div className=\"cast-summary__type\">\n              <Tooltip title={<DualTranslate>{role.title}</DualTranslate>}>\n                <IconAvatar icon={<Icon />} size=\"small\" />\n              </Tooltip>\n            </div>\n            <div className=\"cast-summary__cast\">{role.cast ? <CheckOutlined /> : <QuestionOutlined />}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","// Hooks\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { getRandomItem } from 'utils/helpers';\n// Components\nimport { Step } from 'components/steps';\nimport { RuleInstruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { ActorsBoard } from './components/ActorsBoard';\nimport { RoleBoard } from './components/RoleBoard';\nimport { PointsHighlight } from 'components/metrics/PointsHighlight';\nimport { CastSummary } from './components/CastSummary';\n\ntype StepSelectActorProps = {\n  user: GamePlayer;\n  activeRole: ActingRole;\n  onSubmitActor: (payload: SubmitMovieActorPayload) => void;\n  movie: FeatureFilm;\n} & AnnouncementProps;\n\nexport function StepSelectActor({\n  user,\n  announcement,\n  activeRole,\n  onSubmitActor,\n  movie,\n}: StepSelectActorProps) {\n  useMock(() => {\n    onSubmitActor({ actorId: getRandomItem(activeRole.selection) });\n  });\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title size=\"x-small\">\n        <Translate pt={<>Selecione um ator!</>} en={<>Cast a role:</>} />\n      </Title>\n\n      <RoleBoard activeRole={activeRole} instruction=\"SELECT\" movie={movie} />\n\n      <ActorsBoard\n        actors={activeRole.candidates}\n        selection={activeRole.selection}\n        user={user}\n        onSubmitActor={onSubmitActor}\n      />\n\n      <RuleInstruction type=\"rule\">\n        <Translate\n          pt={\n            <>\n              Se um ator receber mais de 50% dos votos, ele será escolhido para o papel!\n              <br />\n              Caso contrário, o papel vai o final da fila e vamos reselecioná-lo na próxima rodada.\n              <br />\n              Você ganha <PointsHighlight>1</PointsHighlight> por cada jogador que escolher o mesmo ator que\n              você.\n            </>\n          }\n          en={\n            <>\n              If an actor receives more than 50% of the votes, he will be chosen for the role!\n              <br />\n              Otherwise, the role goes to the end of the queue and we will reselect it in the next round.\n              <br />\n              You earn <PointsHighlight>1</PointsHighlight> for each player who chooses the same actor as you.\n            </>\n          }\n        />\n      </RuleInstruction>\n\n      <CastSummary movie={movie} />\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitMovieActorAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { SofaIcon } from 'icons/SofaIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction, TextHighlight } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { DualTranslate, Translate } from 'components/language';\nimport { StepSelectActor } from './StepSelectActor';\n\nexport function PhaseActorSelection({ players, state, info }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, setStep } = useStep();\n\n  const onSubmitActor = useOnSubmitMovieActorAPIRequest(setStep);\n\n  const activeRole = state.movie.roles[state.activeRoleId];\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<SofaIcon />}\n      title={\n        <>\n          <Translate pt=\"Seleção\" en=\"Actor Selection\" />: <DualTranslate>{activeRole.title}</DualTranslate>\n        </>\n      }\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <Instruction>\n        <Translate pt={<>Quem vai ser o</>} en={<>Who is the best choice for</>} />\n        <TextHighlight>\n          <DualTranslate>{activeRole.description}</DualTranslate>\n        </TextHighlight>\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.TESTE_DE_ELENCO.ACTOR_SELECTION}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepSelectActor\n          user={user}\n          activeRole={activeRole}\n          onSubmitActor={onSubmitActor}\n          announcement={announcement}\n          movie={state.movie}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Components\nimport { Translate } from 'components/language';\nimport { StepRankingWrapper } from 'components/ranking';\nimport { HostNextPhaseButton } from 'components/host';\n\ntype StepRankingProps = {\n  players: GamePlayers;\n  round: GameRound;\n  ranking: GameRanking;\n  goToPreviousStep: GenericFunction;\n};\n\nexport function StepRanking({ players, ranking, goToPreviousStep, round }: StepRankingProps) {\n  return (\n    <StepRankingWrapper\n      players={players}\n      ranking={ranking}\n      gainedPointsDescriptions={[\n        <Translate pt=\"Adivinhou corretamente\" en=\"Correct guess\" />,\n        <Translate pt=\"Era o alvo e foi adivinhado corretamente\" en=\"Was guessed correctly\" />,\n      ]}\n    >\n      <Space className=\"space-container\" align=\"center\">\n        <Button onClick={goToPreviousStep}>\n          <Translate pt=\"Ver resultado novamente\" en=\"See results again\" />\n        </Button>\n      </Space>\n      <HostNextPhaseButton round={round} />\n    </StepRankingWrapper>\n  );\n}\n","// Ant Design Resources\nimport { Avatar as AntAvatar, Space } from 'antd';\nimport { Avatar } from 'components/avatars';\nimport { SuspectCard } from 'components/cards/SuspectCard';\n\nimport { useCardWidth } from 'hooks/useCardWidth';\n\ntype ActorsSelectionsProps = {\n  actors: ActingRole['candidates'];\n  selection: CardId[];\n  players: GamePlayers;\n  playersSelections: Record<CardId, PlayerId[]>;\n};\n\nexport function ActorsSelections({ actors, players, selection, playersSelections }: ActorsSelectionsProps) {\n  const cardWidth = useCardWidth(4, { gap: 16, minWidth: 80, maxWidth: 150, margin: 16 });\n\n  return (\n    <Space className=\"actors-board space-container\" wrap>\n      {selection.map((actorId) => {\n        const actor = actors[actorId];\n\n        return (\n          <Space key={actor.id} className=\"actors-board__actor\" direction=\"vertical\">\n            <Space className=\"space-container\">\n              <AntAvatar.Group maxCount={7}>\n                {playersSelections[actorId].map((playerId) => (\n                  <Avatar\n                    id={players[playerId].avatarId}\n                    key={`actor-avatar-${players[playerId].avatarId}`}\n                  />\n                ))}\n              </AntAvatar.Group>\n            </Space>\n\n            <SuspectCard suspect={actor} width={cardWidth} />\n          </Space>\n        );\n      })}\n    </Space>\n  );\n}\n","// Ant Design Resources\nimport { Avatar as AntAvatar, Space } from 'antd';\nimport { Avatar } from 'components/avatars';\nimport { SuspectCard } from 'components/cards/SuspectCard';\n\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useMemo } from 'react';\n\ntype ReleasedActorsProps = {\n  actors: ActingRole['candidates'];\n  selection: CardId[];\n  players: GamePlayers;\n  playersSelections: Record<CardId, PlayerId[]>;\n};\n\nexport function ReleasedActors({ actors, players, selection, playersSelections }: ReleasedActorsProps) {\n  const cardWidth = useCardWidth(6, { gap: 16, minWidth: 70, maxWidth: 120, margin: 16 });\n\n  const nonSelectedActors = useMemo(() => {\n    return Object.values(actors).filter((actor) => !selection.includes(actor.id));\n  }, [actors, selection]);\n\n  if (nonSelectedActors.length === 0) {\n    return <></>;\n  }\n\n  return (\n    <Space className=\"actors-board space-container\" wrap>\n      {nonSelectedActors.map((actor) => {\n        return (\n          <Space key={actor.id} className=\"actors-board__actor\" direction=\"vertical\">\n            <Space className=\"space-container\">\n              <AntAvatar.Group maxCount={7}>\n                {(playersSelections[actor.id] ?? []).map((playerId) => (\n                  <Avatar\n                    id={players[playerId].avatarId}\n                    key={`actor-avatar-${players[playerId].avatarId}`}\n                  />\n                ))}\n              </AntAvatar.Group>\n            </Space>\n\n            <SuspectCard suspect={actor} width={cardWidth} />\n          </Space>\n        );\n      })}\n    </Space>\n  );\n}\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Components\nimport { Step } from 'components/steps';\nimport { RuleInstruction, TextHighlight, Title } from 'components/text';\nimport { DualTranslate, Translate } from 'components/language';\nimport { RoleBoard } from './components/RoleBoard';\nimport { TimedButton } from 'components/buttons';\nimport { SuspectCard } from 'components/cards/SuspectCard';\nimport { ImageCard } from 'components/image-cards';\nimport { ActorsSelections } from './components/ActorsSelections';\nimport { ReleasedActors } from './components/ReleasedActors';\nimport { Container } from 'components/general/Container';\nimport { useMemo } from 'react';\n\ntype StepResultProps = {\n  user: GamePlayer;\n  activeRole: ActingRole;\n  outcome: string;\n  players: GamePlayers;\n  goToNextStep: GenericFunction;\n} & AnnouncementProps;\n\nexport function StepResult({\n  user,\n  announcement,\n  activeRole,\n  goToNextStep,\n  outcome,\n  players,\n}: StepResultProps) {\n  const playersSelections = useMemo(() => {\n    return Object.values(players).reduce((acc: Record<CardId, PlayerId[]>, player) => {\n      if (acc[player.actorId] === undefined) {\n        acc[player.actorId] = [];\n      }\n      acc[player.actorId].push(player.id);\n      return acc;\n    }, {});\n  }, [players]);\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title size=\"x-small\">\n        <Translate pt=\"Resultado\" en=\"Results\" />\n      </Title>\n\n      <RoleBoard activeRole={activeRole} instruction=\"RESULT\" outcome={outcome}>\n        {outcome === 'CAST' ? (\n          <SuspectCard suspect={activeRole.candidates[activeRole.actor]} width={120} />\n        ) : (\n          <ImageCard imageId=\"us-unknown\" cardWidth={120} preview={false} />\n        )}\n      </RoleBoard>\n\n      <RuleInstruction type=\"event\">\n        {outcome === 'CONTINUE' && (\n          <Translate\n            pt=\"Os diretores não chegaram num consenso. Aqui estão os atores selecionados para a próxima fase:\"\n            en=\"The directors did not reach a consensus. Here are the selected actors for the next phase:\"\n          />\n        )}\n        {outcome === 'CAST' && (\n          <Translate\n            pt={\n              <>\n                <TextHighlight>\n                  <DualTranslate>{activeRole.candidates[activeRole.actor].name}</DualTranslate>\n                </TextHighlight>{' '}\n                foi escolhido(a) para o papel!\n              </>\n            }\n            en={\n              <>\n                <TextHighlight>\n                  <DualTranslate>{activeRole.candidates[activeRole.actor].name}</DualTranslate>\n                </TextHighlight>{' '}\n                was chosen for the role!\n              </>\n            }\n          />\n        )}\n        {outcome === 'FAIL' && (\n          <Translate\n            pt=\"Deu ruim! Ninguém foi escolhido para o papel! E vão remover o personagem do roteiro\"\n            en=\"Oh no! Nobody was chosen for the role! And they will remove the character from the script\"\n          />\n        )}\n      </RuleInstruction>\n\n      <ActorsSelections\n        actors={activeRole.candidates}\n        selection={activeRole.selection}\n        players={players}\n        playersSelections={playersSelections}\n      />\n\n      <Space className=\"space-container\" align=\"center\">\n        <TimedButton duration={25} onExpire={goToNextStep} onClick={goToNextStep}>\n          <Translate pt=\"Ver Ranking\" en=\"See Ranking\" />\n        </TimedButton>\n      </Space>\n\n      <Container\n        title={\n          <Translate\n            pt=\"Atores não foram selecionados para a próxima fase\"\n            en=\"Actors who didn't move to the next phase\"\n          />\n        }\n      >\n        <ReleasedActors\n          actors={activeRole.candidates ?? {}}\n          selection={activeRole.selection ?? []}\n          players={players}\n          playersSelections={playersSelections}\n        />\n      </Container>\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\nimport { Icons } from './utils/helpers';\n// Icons\nimport { MovieGenreIcon } from 'icons/MovieGenreIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { DualTranslate, Translate } from 'components/language';\nimport { StepRanking } from './StepRanking';\nimport { StepResult } from './StepResult';\n\nexport function PhaseResult({ players, state, info }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, goToNextStep, goToPreviousStep } = useStep(0);\n\n  const activeRole = state.movie.roles[state.activeRoleId];\n\n  const Icon = Icons?.[state?.movie?.id] ?? MovieGenreIcon;\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<Icon />}\n      title={\n        <>\n          <Translate pt=\"Resultado\" en=\"Results\" />: <DualTranslate>{activeRole.title}</DualTranslate>\n        </>\n      }\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n      duration={4}\n    >\n      <Instruction>\n        <Translate pt={<>E o papel foi escolhido?</>} en={<>So was the role cast?</>} />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  //\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.TESTE_DE_ELENCO.RESULT}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepResult\n          user={user}\n          activeRole={activeRole}\n          outcome={state.outcome}\n          players={players}\n          announcement={announcement}\n          goToNextStep={goToNextStep}\n        />\n\n        {/* Step 1 */}\n        <StepRanking\n          players={players}\n          round={state.round}\n          ranking={state.ranking}\n          goToPreviousStep={goToPreviousStep}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","import { useMemo } from 'react';\nimport { getMovieSummary } from '../utils/helpers';\nimport { Divider, Tooltip } from 'antd';\nimport { Translate } from 'components/language';\nimport { MetricHighlight } from 'components/metrics/MetricHighlight';\nimport { GenderIcon } from 'icons/GenderIcon';\nimport { AgeIcon } from 'icons/AgeIcon';\nimport { CulturesIcon } from 'icons/CulturesIcon';\nimport { RainbowIcon } from 'icons/RainbowIcon';\n\ntype MovieStatsProps = {\n  movie: FeatureFilm;\n};\n\nexport function MovieStats({ movie }: MovieStatsProps) {\n  const summary = useMemo(() => getMovieSummary(movie), [movie]);\n  return (\n    <div className=\"summary\">\n      <Tooltip title={<Translate pt=\"Diversidade de gênero\" en=\"Gender Diversity\" />}>\n        <div>\n          <MetricHighlight icon={<GenderIcon />}>{summary.genderDiversity}%</MetricHighlight>\n        </div>\n      </Tooltip>\n      <Divider type=\"vertical\" />\n      <Tooltip title={<Translate pt=\"Diversidade de idade\" en=\"Age Diversity\" />}>\n        <div>\n          <MetricHighlight icon={<AgeIcon />}>{summary.ageDiversity}%</MetricHighlight>\n        </div>\n      </Tooltip>\n      <Divider type=\"vertical\" />\n      <Tooltip title={<Translate pt=\"Diversidade cultural\" en=\"Cultural Diversity\" />}>\n        <div>\n          <MetricHighlight icon={<CulturesIcon />}>{summary.ethnicityDiversity}%</MetricHighlight>\n        </div>\n      </Tooltip>\n      {summary.isLGBTQA && (\n        <>\n          <Tooltip title={<Translate pt=\"LGBTQIA+\" en=\"LGBTQIA+\" />}>\n            <div>\n              <MetricHighlight icon={<RainbowIcon />}>100%</MetricHighlight>\n            </div>\n          </Tooltip>\n        </>\n      )}\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Input, Space } from 'antd';\n// Utils\nimport { achievementsReference } from './utils/achievements';\nimport { Icons, chatGPTMoviePrompt } from './utils/helpers';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Icons\nimport { CrownIcon } from 'icons/CrownIcon';\nimport { MovieGenreIcon } from 'icons/MovieGenreIcon';\n// Components\nimport { GameOverWrapper } from 'components/game-over';\nimport { Achievements } from 'components/general/Achievements';\nimport { Container } from 'components/general/Container';\nimport { DualTranslate, Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { RoleBoard } from './components/RoleBoard';\nimport { SuspectCard } from 'components/cards/SuspectCard';\nimport { ImageCard } from 'components/image-cards';\nimport { HostOnlyContainer } from 'components/host';\nimport { MovieStats } from './components/MovieStats';\n\nexport function PhaseGameOver({ state, info, players }: PhaseProps) {\n  const { language } = useLanguage();\n\n  const movie: FeatureFilm = state.movie;\n  const movieId = movie?.id ?? '';\n  const Icon = Icons?.[movieId] ?? MovieGenreIcon;\n\n  return (\n    <GameOverWrapper info={info} state={state} players={players} announcementIcon={<CrownIcon />}>\n      <Achievements players={players} achievements={state.achievements} reference={achievementsReference} />\n\n      <Container\n        title={<Translate pt=\"O Filme\" en=\"The Movie\" />}\n        childrenContainerProps={{ className: 'final-gallery' }}\n      >\n        <Space className=\"role\" direction=\"vertical\" align=\"center\">\n          {movie && (\n            <>\n              <Icon width={75} />\n              <Title size=\"small\" className=\"role__title\">\n                <DualTranslate>{movie.title}</DualTranslate>\n              </Title>\n\n              <MovieStats movie={movie} />\n\n              {movie.rolesOrder.reverse().map((roleId) => {\n                const role = movie.roles[roleId];\n\n                if (role.cast) {\n                  return (\n                    <RoleBoard activeRole={role} instruction=\"CAST\" key={roleId}>\n                      <SuspectCard suspect={role.candidates[role.actor]} width={100} />\n                    </RoleBoard>\n                  );\n                }\n                return (\n                  <RoleBoard activeRole={role} instruction=\"CAST\" key={roleId}>\n                    <ImageCard imageId=\"us-unknown\" cardWidth={120} preview={false} />\n                  </RoleBoard>\n                );\n              })}\n            </>\n          )}\n        </Space>\n      </Container>\n\n      <HostOnlyContainer>\n        <Container title=\"Chat GPT Prompt\">\n          <Input.TextArea\n            readOnly\n            value={chatGPTMoviePrompt(state.movie, language)}\n            rows={5}\n            cols={20}\n            className=\"chat-gpt\"\n          />\n        </Container>\n      </HostOnlyContainer>\n    </GameOverWrapper>\n  );\n}\n","import { ConfigProvider } from 'antd';\n// Constants\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport { LoadingPage } from 'components/loaders';\nimport { PhaseMovieGenreSelection } from './PhaseMovieGenreSelection';\nimport { PhaseActorSelection } from './PhaseActorSelection';\nimport { PhaseResult } from './PhaseResult';\nimport { PhaseGameOver } from './PhaseGameOver';\n// Sass\nimport './teste-de-elenco.scss';\n\nfunction getActiveComponent(state: GameState) {\n  // If phase is not defined, it is likely that the game is still loading\n  if (state && !state.phase) return LoadingPage;\n\n  switch (state.phase) {\n    case PHASES.DEFAULT.LOBBY:\n      return PhaseLobby;\n    case PHASES.DEFAULT.RULES:\n      return PhaseRules;\n    case PHASES.DEFAULT.SETUP:\n      return PhaseSetup;\n    case PHASES.TESTE_DE_ELENCO.MOVIE_GENRE_SELECTION:\n      return PhaseMovieGenreSelection;\n    case PHASES.TESTE_DE_ELENCO.ACTOR_SELECTION:\n      return PhaseActorSelection;\n    case PHASES.TESTE_DE_ELENCO.RESULT:\n      return PhaseResult;\n    case PHASES.DEFAULT.GAME_OVER:\n      return PhaseGameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionTesteDeElenco() {\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorPrimary: THEME_COLORS.DEFAULT,\n          colorLink: THEME_COLORS.DEFAULT,\n        },\n      }}\n    >\n      <Session gameCollection={GAME_COLLECTION.TESTE_DE_ELENCO} getActiveComponent={getActiveComponent} />\n    </ConfigProvider>\n  );\n}\n\nexport default SessionTesteDeElenco;\n","export const ACHIEVEMENTS = {\n  ALONE_VOTES: 'ALONE_VOTES',\n  TOGETHER_VOTES: 'TOGETHER_VOTES',\n  MOST_CAST: 'MOST_CAST',\n  FEWEST_CAST: 'FEWEST_CAST',\n  CONSISTENCY: 'CONSISTENCY',\n  CHANGELING: 'CHANGELING',\n};\n\nexport const achievementsReference: AchievementReference = {\n  [ACHIEVEMENTS.ALONE_VOTES]: {\n    icon: 'person',\n    title: {\n      pt: 'Iniciante',\n      en: 'Beginner',\n    },\n    description: {\n      pt: 'Votou sozinho em um ator mais vezes',\n      en: 'Voted alone on an actor the most',\n    },\n  },\n  [ACHIEVEMENTS.TOGETHER_VOTES]: {\n    icon: 'people',\n    title: {\n      pt: 'Profissional',\n      en: 'Professional',\n    },\n    description: {\n      pt: 'Votou com alguém em um ator mais vezes',\n      en: 'Voted with someone on an actor the most',\n    },\n  },\n  [ACHIEVEMENTS.MOST_CAST]: {\n    icon: 'eye',\n    title: {\n      pt: 'Melhor olheiro',\n      en: 'Best scout',\n    },\n    description: {\n      pt: 'Escalou mais atores',\n      en: 'Cast the most actors',\n    },\n  },\n  [ACHIEVEMENTS.FEWEST_CAST]: {\n    icon: 'broken-bulb',\n    title: {\n      pt: 'Pior olheiro',\n      en: 'Wrost scout',\n    },\n    description: {\n      pt: 'Escalou menos atores',\n      en: 'Cast the fewest actors',\n    },\n  },\n  [ACHIEVEMENTS.CONSISTENCY]: {\n    icon: 'scale',\n    title: {\n      pt: 'Mais Persistente',\n      en: 'Most Persistent',\n    },\n    description: {\n      pt: 'Votou nos mesmos atores mais vezes',\n      en: 'Voted on the same actors the most',\n    },\n  },\n  [ACHIEVEMENTS.CHANGELING]: {\n    icon: 'arrows',\n    title: {\n      pt: 'Troca-troca',\n      en: 'Mind changer',\n    },\n    description: {\n      pt: 'Votou em mais atores diferentes',\n      en: 'Voted on the most different actors',\n    },\n  },\n};\n\nexport default achievementsReference;\n","export function CrownIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M445.512 460.432H66.488c-16.01 0-28.988-12.978-28.988-28.988 0-16.01 12.978-28.988 28.988-28.988h379.024c16.01 0 28.988 12.978 28.988 28.988 0 16.01-12.978 28.988-28.988 28.988z\"\n      ></path>\n      <path\n        fill=\"#fee97d\"\n        d=\"M445.512 402.456h-30c16.01 0 28.988 12.978 28.988 28.988 0 16.01-12.979 28.988-28.988 28.988h30c16.01 0 28.988-12.978 28.988-28.988 0-16.01-12.979-28.988-28.988-28.988zm28.988-240l-143.5 75-75-135-90 135-128.5-75 45 240h347z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M331 237.46l-75-135.004-16.364 24.546 54.327 97.789c7.274 13.091 23.269 18.563 37.037 12.669zm110.241-57.621L399.5 402.456h30l45-240zM166 237.46L37.5 162.456l3.687 19.661 98.271 57.357A23.432 23.432 0 00166 237.46z\"\n      ></path>\n      <path\n        fill=\"#f58a97\"\n        d=\"M251.05 150.169l-43.326-43.326a6.999 6.999 0 010-9.899l43.326-43.326a6.999 6.999 0 019.899 0l43.326 43.326a6.999 6.999 0 010 9.899l-43.326 43.326a6.999 6.999 0 01-9.899 0z\"\n      ></path>\n      <path\n        fill=\"#f07281\"\n        d=\"M304.276 96.944L260.95 53.618a6.999 6.999 0 00-9.899 0L241 63.668l33.276 33.276a7 7 0 010 9.9L241 140.119l10.05 10.05a6.999 6.999 0 009.899 0l43.326-43.326a7 7 0 00.001-9.899z\"\n      ></path>\n      <path\n        fill=\"#8795de\"\n        d=\"M371.05 331.348l-20.296-20.296a7 7 0 010-9.9l20.296-20.296a6.999 6.999 0 019.899 0l20.296 20.296a7 7 0 010 9.9l-20.296 20.296a6.999 6.999 0 01-9.899 0z\"\n      ></path>\n      <path\n        fill=\"#6c7fd8\"\n        d=\"M401.246 301.152l-20.296-20.296a6.999 6.999 0 00-9.899 0L361 290.906l10.246 10.246a6.999 6.999 0 010 9.899L361 321.298l10.05 10.05a6.999 6.999 0 009.899 0l20.296-20.296a7 7 0 00.001-9.9z\"\n      ></path>\n      <path\n        fill=\"#8795de\"\n        d=\"M131.05 331.348l-20.296-20.296a7 7 0 010-9.9l20.296-20.296a7 7 0 019.9 0l20.296 20.296a7 7 0 010 9.9l-20.296 20.296a7 7 0 01-9.9 0z\"\n      ></path>\n      <path\n        fill=\"#6c7fd8\"\n        d=\"M161.246 301.152l-20.296-20.296a6.999 6.999 0 00-9.899 0L121 290.906l10.246 10.246a6.999 6.999 0 010 9.899L121 321.298l10.05 10.05a6.999 6.999 0 009.899 0l20.296-20.296a7 7 0 00.001-9.9z\"\n      ></path>\n      <path\n        fill=\"#f58a97\"\n        d=\"M278.747 259.703h-45.494a6.999 6.999 0 00-6.062 3.5l-22.747 39.399a7.002 7.002 0 000 7l22.747 39.399a6.999 6.999 0 006.062 3.5h45.494a6.999 6.999 0 006.062-3.5l22.747-39.399a7.002 7.002 0 000-7l-22.747-39.399a7 7 0 00-6.062-3.5z\"\n      ></path>\n      <path\n        fill=\"#f07281\"\n        d=\"M307.556 302.602l-22.747-39.399a6.999 6.999 0 00-6.062-3.5h-30a6.999 6.999 0 016.062 3.5l22.747 39.399a7.002 7.002 0 010 7l-22.747 39.399a6.999 6.999 0 01-6.062 3.5h30a6.999 6.999 0 006.062-3.5l22.747-39.399a7.002 7.002 0 000-7z\"\n      ></path>\n      <circle cx=\"37.625\" cy=\"162.591\" r=\"30.125\" fill=\"#8795de\"></circle>\n      <circle cx=\"474.375\" cy=\"162.591\" r=\"30.125\" fill=\"#8795de\"></circle>\n      <path\n        fill=\"#6c7fd8\"\n        d=\"M474.375 132.466a29.981 29.981 0 00-15 4.004c9.037 5.201 15.125 14.947 15.125 26.121s-6.089 20.921-15.125 26.121a29.981 29.981 0 0015 4.004c16.638 0 30.125-13.488 30.125-30.125 0-16.638-13.488-30.125-30.125-30.125zm-436.75 0a29.981 29.981 0 00-15 4.004c9.037 5.201 15.125 14.947 15.125 26.121s-6.089 20.921-15.125 26.121a29.981 29.981 0 0015 4.004c16.638 0 30.125-13.488 30.125-30.125.001-16.638-13.487-30.125-30.125-30.125z\"\n      ></path>\n      <path d=\"M136 271.306a14.401 14.401 0 00-10.253 4.247L105.45 295.85c-5.653 5.654-5.653 14.853 0 20.505l20.296 20.296c2.827 2.827 6.54 4.24 10.253 4.24s7.426-1.414 10.253-4.24l20.296-20.296c5.653-5.653 5.653-14.852 0-20.506l-20.296-20.295A14.394 14.394 0 00136 271.306zm0 54.385l-19.589-19.589L136 286.513l19.589 19.589zm229.747 10.961A14.455 14.455 0 00376 340.89a14.46 14.46 0 0010.254-4.239l20.296-20.296c5.652-5.653 5.652-14.852 0-20.506l-20.297-20.296c-5.654-5.652-14.853-5.653-20.507 0L345.45 295.85c-5.652 5.654-5.652 14.853 0 20.505zM376 286.513l19.589 19.589L376 325.692l-19.589-19.59zm-178.051 26.839l22.747 39.399a14.54 14.54 0 0012.557 7.25h45.494c5.163 0 9.975-2.778 12.558-7.25l22.745-39.397a14.534 14.534 0 00.001-14.501l-22.747-39.4a14.544 14.544 0 00-12.557-7.249h-45.494a14.54 14.54 0 00-12.557 7.25l-22.747 39.399a14.538 14.538 0 000 14.499zm35.593-46.149h44.917l22.457 38.899-22.457 38.899h-44.917l-22.458-38.899zM512 162.591c0-20.747-16.879-37.625-37.625-37.625-20.747 0-37.626 16.879-37.626 37.625 0 3.596.518 7.072 1.464 10.368l-104.208 54.467-49.893-89.813 25.465-25.465a14.406 14.406 0 004.248-10.254c0-3.873-1.509-7.515-4.247-10.253l-43.326-43.326a14.404 14.404 0 00-10.253-4.247 14.401 14.401 0 00-10.253 4.247L202.42 91.641a14.404 14.404 0 00-4.247 10.253c0 3.874 1.508 7.515 4.247 10.253l22.868 22.868-20.788 31.179a7.5 7.5 0 002.08 10.401c3.412 2.275 8.083 1.397 10.401-2.08l19.125-28.684 9.641 9.641a14.452 14.452 0 0010.252 4.24c3.712 0 7.427-1.414 10.254-4.24l6.828-6.828 51.362 92.457c1.994 3.594 6.486 4.864 10.03 3.005l110.679-57.849a37.809 37.809 0 0015.151 11.219l-37.027 197.479h-63.799c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h86.034c11.849 0 21.488 9.639 21.488 21.488s-9.64 21.488-21.488 21.488H66.488c-11.849 0-21.488-9.64-21.488-21.488s9.64-21.488 21.488-21.488h257.989c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5H88.724L51.696 197.477a37.774 37.774 0 0014.007-9.875l96.516 56.336c3.375 1.973 7.799 1.017 10.021-2.317l25.34-38.006a7.5 7.5 0 00-12.481-8.321l-21.42 32.127-90.42-52.778a37.453 37.453 0 001.991-12.052c0-20.747-16.879-37.625-37.625-37.625S0 141.845 0 162.591c0 20.519 16.512 37.243 36.945 37.608l36.517 194.757h-6.974c-20.12 0-36.488 16.368-36.488 36.488s16.369 36.488 36.488 36.488h379.023c20.12 0 36.488-16.369 36.488-36.488s-16.368-36.488-36.488-36.488h-6.975L475.054 200.2c20.433-.365 36.946-17.09 36.946-37.609zm-256-18.078l-42.619-42.619L256 59.275l42.618 42.619zM15 162.591c0-12.476 10.15-22.625 22.625-22.625s22.625 10.15 22.625 22.625-10.15 22.625-22.625 22.625S15 175.067 15 162.591zm436.749 0c0-12.476 10.15-22.625 22.626-22.625S497 150.116 497 162.591s-10.149 22.625-22.625 22.625-22.626-10.149-22.626-22.625z\"></path>\n    </svg>\n  );\n}\n","export function KnifeIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#b98080\"\n        d=\"M42.6 492.41a41.28 41.28 0 010-58.38l115.96-115.96L180 306.63l48.38 48.38-137.4 137.4c-16.12 16.12-32.26 16.12-48.38 0z\"\n      ></path>\n      <path\n        fill=\"#ae6c6c\"\n        d=\"M238.37 355l-137.4 137.41a41.28 41.28 0 01-65.91-10.33 41.29 41.29 0 0048.05-7.53l108.82-108.83a10.1 10.1 0 000-14.29l-33.37-33.36L180 296.63l38.76 28.77z\"\n      ></path>\n      <path\n        fill=\"#fe646f\"\n        d=\"M411.79 330.4l-7.5 2.99-14.15 24.5c-9.63 16.68 2.4 37.5 21.65 37.5 19.24 0 21.27-20.82 11.65-37.5z\"\n      ></path>\n      <path\n        fill=\"#efedef\"\n        d=\"M180 296.63l71.43 71.44 21.43 11.43a13.11 13.11 0 0018.55 0l66.31-56.31 21.66-31.65c73.42-73.43 113.73-168.2 94.81-269.88a5.06 5.06 0 00-8.55-2.68l-98.93 90.93z\"\n      ></path>\n      <path\n        fill=\"#d7d0d6\"\n        d=\"M475.2 14.66a5.06 5.06 0 00-8.56-2.68l-8 6a314.51 314.51 0 01-90.7 252.12l-97.96 97.97a13.11 13.11 0 01-18.55 0l21.43 21.43a13.11 13.11 0 0018.55 0l66.31-66.31 27.65-31.65c73.43-73.43 108.74-175.2 89.82-276.88z\"\n      ></path>\n      <path\n        fill=\"#fe646f\"\n        d=\"M475.2 13.66a5.06 5.06 0 00-8.56-2.68l-8 7-91.92 91.93a21.31 21.31 0 000 30.14l13.05 13.06a21.31 21.31 0 010 30.14l-31.45 31.45a21.31 21.31 0 000 30.14l13.73 13.74a21.31 21.31 0 010 30.14l-4.33 4.33a21.31 21.31 0 000 30.14l21.65-31.65c73.43-73.43 114.74-176.2 95.82-277.88z\"\n      ></path>\n      <path\n        fill=\"#fd4755\"\n        d=\"M476.2 11.66a5.06 5.06 0 00-8.56-2.68l-9 9a314.51 314.51 0 01-90.66 252.09 21.27 21.27 0 01-5.92 18.65l-4.34 4.33a21.31 21.31 0 000 30.14l31.66-31.65a314.5 314.5 0 0086.81-279.88zM433.44 357.9l-17.32-30a5 5 0 00-8.66 0l-3.17 5.49 14.15 24.5c8.3 14.38.49 31.83-14.15 36.38 2.34.72 4.84 1.13 7.5 1.13 19.24 0 31.27-20.84 21.65-37.5z\"\n      ></path>\n      <path d=\"M82.66 444.82a7.5 7.5 0 100 15 7.5 7.5 0 000-15zm339.93-120.67a12.37 12.37 0 00-10.83-6.25c-4.52 0-8.56 2.33-10.82 6.25l-17.33 30a32.17 32.17 0 000 32.5c5.88 10.17 16.4 16.25 28.15 16.25s22.27-6.08 28.15-16.25a32.17 32.17 0 000-32.5zm4.33 55c-3.17 5.48-8.83 8.75-15.16 8.75s-12-3.27-15.15-8.75-3.17-12.02 0-17.5l15.15-26.25 15.16 26.25a17.32 17.32 0 010 17.5z\"></path>\n      <path d=\"M241.27 224.73a7.5 7.5 0 0110.6 10.6l-61.3 61.3 87.57 87.57a5.62 5.62 0 007.94 0l61.71-61.71a28.64 28.64 0 01-3.83-14.37c0-7.7 3-14.93 8.44-20.38l4.33-4.33c2.6-2.6 4.04-6.07 4.04-9.76 0-3.7-1.43-7.16-4.04-9.77l-13.74-13.74c-5.44-5.44-8.44-12.67-8.44-20.37s3-14.93 8.44-20.37l31.45-31.46a13.83 13.83 0 000-19.53l-13.05-13.06a28.62 28.62 0 01-7.27-12.26L275 212.22a7.48 7.48 0 01-10.6 0 7.5 7.5 0 010-10.6L462.31 3.67a12.55 12.55 0 0121.22 6.6 320.27 320.27 0 01-1.48 125.2 7.5 7.5 0 11-14.68-3.09c8-38 8.75-76.59 2.23-114.79l-97.63 97.63a13.83 13.83 0 00.01 19.52l13.06 13.05a28.63 28.63 0 018.44 20.38c0 7.7-3 14.93-8.44 20.37L353.6 220a13.72 13.72 0 00-4.05 9.77c0 3.69 1.44 7.16 4.05 9.77l13.73 13.73c5.45 5.45 8.44 12.68 8.44 20.38s-3 14.93-8.44 20.37l-4.33 4.33a13.72 13.72 0 00-3.73 12.66l24.78-24.78a308.35 308.35 0 0075.14-123 7.5 7.5 0 0114.28 4.6 323.45 323.45 0 01-78.81 129.01l-97.97 97.97c-4.02 4.01-9.3 6.02-14.58 6.02s-10.55-2-14.57-6.02l-29.2-29.2-66.43 66.44a7.48 7.48 0 01-10.6 0 7.5 7.5 0 010-10.6L227.73 355l-47.77-47.77-132.1 132.1a33.82 33.82 0 000 47.77c6.38 6.38 14.86 9.9 23.89 9.9s17.5-3.52 23.88-9.9l42.55-42.55a7.5 7.5 0 0110.6 10.6l-42.54 42.56c-9.22 9.2-21.47 14.28-34.5 14.28s-25.27-5.07-34.49-14.29a48.83 48.83 0 010-68.98z\"></path>\n    </svg>\n  );\n}\n","export function LoveIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path fill=\"#fad78d\" d=\"M60 452l20 20-72 32 32-72 20 20z\"></path>\n      <path fill=\"#69c8c4\" d=\"M504 40l-48 48-24-8 48-48 24 8z\"></path>\n      <path fill=\"#8ad2d3\" d=\"M472 8l8 24-48 48-8-24 48-48z\"></path>\n      <path\n        fill=\"#d1738c\"\n        d=\"M265.6 156.16A111.37 111.37 0 00216 208a109.71 109.71 0 00-104-64 122.49 122.49 0 00-40.88 6.56A110.4 110.4 0 01168 96c45.6 0 75.28 21.2 97.6 60.16zm148.32-58.08c47.84 9 90.08 47.76 90.08 113.12C504 392 320 480 280 480a35.66 35.66 0 01-9.2-1.76C334.64 446.32 424 371 424 249.6 424 176 376 144 320 144a136.64 136.64 0 00-19 1.28A102.33 102.33 0 01392 96a118.46 118.46 0 0121.92 2.08z\"\n      ></path>\n      <path\n        fill=\"#f59bab\"\n        d=\"M216 496C176 496 8 416 8 249.6 8 176 56 144 112 144a109.71 109.71 0 01104 64 109.72 109.72 0 01104-64c56 0 104 32 104 105.6C424 416 256 496 216 496z\"\n      ></path>\n      <path\n        fill=\"#ba667c\"\n        d=\"M112 144a109.71 109.71 0 01104 64 125.17 125.17 0 0122.21-31.75A110.51 110.51 0 00138 120a118.19 118.19 0 00-52.8 11.62 103.82 103.82 0 00-14.08 18.94A122.49 122.49 0 01112 144zm344 86.4c0-76.94-48.92-110.4-106-110.4a131.68 131.68 0 00-30.76 3.52A131.57 131.57 0 00301 145.28a136.64 136.64 0 0119-1.28c56 0 104 32 104 105.6 0 121.4-89.36 196.72-153.2 228.64a45.54 45.54 0 006.4 1.45C341.22 454.71 456 372.86 456 230.4z\"\n      ></path>\n      <path\n        fill=\"#f27288\"\n        d=\"M216 416C76.8 416 12.33 268 8.23 256.62 12.9 418.21 176.57 496 216 496s203.11-77.79 207.78-239.38C419.67 268 355.24 416 216 416z\"\n      ></path>\n      <path\n        fill=\"#f7aabb\"\n        d=\"M320 144a109.72 109.72 0 00-104 64 108.6 108.6 0 00-94.59-63.65A86.74 86.74 0 0096 248.47C123.68 309 149.14 368 270.79 368a149.49 149.49 0 0024.72-2.15 167.83 167.83 0 00127.43-107l.62-1.67.35-1.78C426.51 177.7 377.47 144 320 144z\"\n      ></path>\n      <ellipse\n        cx=\"336\"\n        cy=\"192\"\n        fill=\"#f6fafe\"\n        rx=\"19.8\"\n        ry=\"27.56\"\n        transform=\"rotate(-45.02 336 191.99)\"\n      ></ellipse>\n      <ellipse\n        cx=\"374.36\"\n        cy=\"221.43\"\n        fill=\"#f6fafe\"\n        rx=\"6.6\"\n        ry=\"9.18\"\n        transform=\"rotate(-45.02 374.35 221.43)\"\n      ></ellipse>\n      <path fill=\"#ffeeb8\" d=\"M40 432L8 504l52-52-20-20z\"></path>\n      <path fill=\"#fad78d\" d=\"M8 504l72-32-20-20-52 52z\"></path>\n      <path\n        fill=\"#010101\"\n        d=\"M429.5 93.82l4.66-4.67 19.31 6.4A7.84 7.84 0 00456 96a8 8 0 005.66-2.34l48-48a8 8 0 00-3.13-13.25l-20.2-6.74-6.74-20.2a8 8 0 00-10.13-5 7.88 7.88 0 00-3.11 1.93l-48 48a8 8 0 00-1.93 8.18l6.4 19.31-11.69 11.71A126.39 126.39 0 00392 88a108 108 0 00-83.08 34.53l11.67 10.94A91.55 91.55 0 01392 104c1.5 0 3 .14 4.49.2l-18.14 18.15 11.31 11.31 26.77-26.78C459 116.65 496 152 496 211.2c0 143.65-119.25 219.2-155.8 239l7.62 14.08C386.33 443.45 512 363.71 512 211.2c0-63.69-37.47-103.35-82.5-117.38zm59.69-50.32l-35.36 35.35-7-2.34 35.35-35.36zm-56 14.66l35.33-35.35 2.35 7-35.37 35.38zM108.46 121.8l-8.91-13.3a114.83 114.83 0 00-17.2 14.13L93.66 134a97.44 97.44 0 0114.8-12.2z\"\n      ></path>\n      <path\n        fill=\"#010101\"\n        d=\"M216 504c42.75 0 216-81.82 216-254.4 0-83.76-57.85-113.6-112-113.6a131.62 131.62 0 00-51.2 9.87C244.05 106.49 211.78 88 168 88a125.25 125.25 0 00-51.29 11l6.59 14.57A109.46 109.46 0 01168 104c37.76 0 64.8 15.31 86.46 49.17a116.6 116.6 0 00-38.46 38.5A117.21 117.21 0 00112 136C57.86 136 0 165.84 0 249.6a245.73 245.73 0 0075 176.08l-15 15-14.34-14.33a8 8 0 00-13 2.4l-32 72a8 8 0 0010.56 10.56l72-32a8 8 0 004-10.57 8.09 8.09 0 00-1.65-2.4L71.31 452l15.3-15.29C136.6 482 193.83 504 216 504zM23.76 488.24l18.82-42.35 23.53 23.54zM16 249.6c0-61.11 35.89-97.6 96-97.6a101.14 101.14 0 0196.84 59.58 8.34 8.34 0 0014.32 0A101.15 101.15 0 01320 152c60.11 0 96 36.49 96 97.6C416 408.54 254.19 488 216 488c-19.59 0-71.73-21-117.85-62.83l19.51-19.51-11.31-11.31-19.77 19.76A231.2 231.2 0 0116 249.6z\"\n      ></path>\n    </svg>\n  );\n}\n","export function NoIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path fill=\"none\" d=\"M.09.09h512v512H.09z\"></path>\n      <path\n        fill=\"#e94444\"\n        d=\"M256.09 441.78a184.89 184.89 0 01-85.58-20.86c-4.22-2.2-8.36-4.55-12.38-7.05a3.33 3.33 0 01-.62-5.19l251.16-251.17a3.34 3.34 0 015.2.62c2.49 4 4.85 8.16 7.05 12.38a185.75 185.75 0 01-164.83 271.27M98.33 354.09q-3.75-6-7-12.37a184.43 184.43 0 01-20.8-79.76c-3.24-105 82.25-192.47 187.33-191.5a185 185 0 0183.88 20.85q6.33 3.3 12.36 7.06a3.33 3.33 0 01.61 5.19L103.52 354.65a3.33 3.33 0 01-5.19-.61M256.09 7.5C118.8 7.5 7.5 118.8 7.5 256.09s111.3 248.59 248.59 248.59 248.59-111.29 248.59-248.59S393.38 7.5 256.09 7.5\"\n      ></path>\n      <path\n        fill=\"#d83131\"\n        d=\"M398.28 52.16a248 248 0 0189.35 190.93c0 137.29-111.29 248.59-248.59 248.59a247.45 247.45 0 01-142.18-44.69 247.53 247.53 0 00159.23 57.69c137.29 0 248.59-111.29 248.59-248.59a248.28 248.28 0 00-106.4-203.93\"\n      ></path>\n      <path d=\"M256.09 512.18A256.09 256.09 0 0175.01 75.01a256.11 256.11 0 11291.08 412.4 7.5 7.5 0 01-6.45-13.54 239.89 239.89 0 10-31.63 12.4 7.5 7.5 0 114.47 14.32 256.11 256.11 0 01-76.39 11.59z\"></path>\n      <path d=\"M101.2 363.09a10.48 10.48 0 01-1.25-.07 10.8 10.8 0 01-8-5 191.8 191.8 0 01-7.34-12.88 191 191 0 01-21.64-83c-1.63-52.89 18-103 55.21-141s86.85-58.74 139.71-58.23a191.22 191.22 0 0187.27 21.7c4.37 2.28 8.69 4.75 12.86 7.34a10.83 10.83 0 011.95 16.86L108.83 359.95a10.76 10.76 0 01-7.63 3.14zM256.09 77.9c-48.12 0-93.22 19-127.16 53.72-34.35 35.1-52.44 81.29-50.94 130.06a176 176 0 0020 76.52c1.29 2.47 2.64 4.94 4.06 7.37l243.54-243.6a175.7 175.7 0 00-7.36-4.06 176.41 176.41 0 00-80.47-20zm0 371.38a193.54 193.54 0 01-89-21.71 192.5 192.5 0 01-12.88-7.34 10.82 10.82 0 01-2-16.86l137.55-137.55a7.5 7.5 0 1110.6 10.61L166.59 410.2c2.42 1.41 4.89 2.77 7.38 4.06a178.52 178.52 0 0082.12 20c98.26 0 178.19-79.93 178.19-178.19a176.22 176.22 0 00-20-82.12c-1.29-2.49-2.65-5-4.06-7.38l-84.87 84.87a7.5 7.5 0 01-10.61-10.6l88.65-88.65a10.83 10.83 0 0116.86 1.95c2.58 4.16 5.05 8.49 7.34 12.89a191.11 191.11 0 0121.71 89c-.02 106.59-86.68 193.25-193.21 193.25z\"></path>\n    </svg>\n  );\n}\n","// This icon file is generated automatically.\nvar DownCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M690 405h-46.9c-10.2 0-19.9 4.9-25.9 13.2L512 563.6 406.8 418.2c-6-8.3-15.6-13.2-25.9-13.2H334c-6.5 0-10.3 7.4-6.5 12.7l178 246c3.2 4.4 9.7 4.4 12.9 0l178-246c3.9-5.3.1-12.7-6.4-12.7z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"down-circle\", \"theme\": \"outlined\" };\nexport default DownCircleOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport DownCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/DownCircleOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar DownCircleOutlined = function DownCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: DownCircleOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  DownCircleOutlined.displayName = 'DownCircleOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(DownCircleOutlined);","// This icon file is generated automatically.\nvar UpCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M518.5 360.3a7.95 7.95 0 00-12.9 0l-178 246c-3.8 5.3 0 12.7 6.5 12.7H381c10.2 0 19.9-4.9 25.9-13.2L512 460.4l105.2 145.4c6 8.3 15.6 13.2 25.9 13.2H690c6.5 0 10.3-7.4 6.5-12.7l-178-246z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"up-circle\", \"theme\": \"outlined\" };\nexport default UpCircleOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport UpCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/UpCircleOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar UpCircleOutlined = function UpCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: UpCircleOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  UpCircleOutlined.displayName = 'UpCircleOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(UpCircleOutlined);"],"names":["Container","title","children","className","contained","titleProps","childrenContainerProps","spaceProps","level","size","restTitleProps","childrenClassName","wrap","direction","childrenDirection","restChildrenContainerProps","clsx","submitAction","httpsCallable","functions","Icons","ACTION","MovieActionIcon","COMEDY","MovieComedyIcon","DRAMA","MovieDramaIcon","HORROR","MovieHorrorIcon","SCI_FI","MovieSciFiIcon","chatGPTMoviePrompt","movie","language","prompt","en","Object","values","roles","forEach","role","cast","id","description","actor","candidates","name","split","gender","age","ethnicity","traits","join","pt","StepSelectGenre","user","announcement","genres","onSubmitGenre","isLoading","useLoading","useMock","genre","getRandomItem","key","fullWidth","type","map","Icon","MovieGenreIcon","onClick","disabled","ready","icon","PhaseMovieGenreSelection","players","state","info","useUser","useStep","step","setStep","translate","useLanguage","request","useAPICall","apiFunction","actionName","onSuccess","onError","successMessage","errorMessage","payload","action","useOnSubmitMovieGenreAPIRequest","currentRound","round","current","phase","allowedPhase","PHASES","ActorsBoard","actors","onSubmitActor","selection","cardWidth","useCardWidth","gap","minWidth","maxWidth","margin","actorId","onConfirm","okText","cancelText","SuspectCard","suspect","width","RoleBoard","activeRole","instruction","outcome","traitCount","length","movieId","align","style","backgroundColor","pluralize","NoIcon","trait","index","Fragment","SpeakerIcon","props","xmlns","viewBox","fill","d","QuestionOutlined","ref","React","AntdIcon","_extends","QuestionOutlinedSvg","CastSummary","icons","main","StarIcon","anti","SkullIcon","supporting","SupportIcon","important","MovieStarIcon","love","LoveIcon","comic","ComedyIcon","voice","minor","PlayerIcon","visual","FireIcon","dead","KnifeIcon","mentor","BrainIcon","rolesOrder","roleId","CheckOutlined","StepSelectActor","PointsHighlight","PhaseActorSelection","useOnSubmitMovieActorAPIRequest","activeRoleId","SofaIcon","StepRanking","ranking","goToPreviousStep","gainedPointsDescriptions","ActorsSelections","playersSelections","maxCount","playerId","avatarId","ReleasedActors","nonSelectedActors","useMemo","filter","includes","StepResult","goToNextStep","reduce","acc","player","undefined","push","imageId","preview","duration","onExpire","PhaseResult","MovieStats","summary","totalActors","maleCount","femaleCount","genderDiversity","Math","abs","ageDiversity","Set","ethnicityDiversity","isLGBTQA","THE_LOVE_INTEREST","THE_PROTAGONIST","getMovieSummary","MetricHighlight","GenderIcon","AgeIcon","CulturesIcon","C","RainbowIcon","PhaseGameOver","announcementIcon","CrownIcon","Achievements","achievements","reference","achievementsReference","reverse","readOnly","value","rows","cols","getActiveComponent","LoadingPage","PhaseLobby","PhaseRules","PhaseSetup","PageError","theme","token","colorPrimary","THEME_COLORS","colorLink","gameCollection","GAME_COLLECTION","ACHIEVEMENTS","cx","cy","r","rx","ry","transform","DownCircleOutlined","DownCircleOutlinedSvg","UpCircleOutlined","UpCircleOutlinedSvg"],"sourceRoot":""}