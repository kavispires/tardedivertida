{"version":3,"sources":["reportWebVitals.js","services/firebase.js","hooks/useWhichPlayerIsThe.js","hooks/useGlobalState.js","hooks/useIsUserThe.js","hooks/useIsUserReady.js","hooks/useAPICall.js","hooks/useIsUsersTeamActive.js","hooks/useLoading.js","hooks/useUser.js","images/tarde-divertida-logo.svg","components/Home.jsx","utils/constants.js","adapters/index.js","components/loaders/Loading.jsx","components/shared/AdminForceNextPhase.jsx","components/shared/AdminOnly.jsx","components/shared/ButtonContainer.jsx","images/game-over-title.svg","images/avatars.svg","components/avatars/Avatar.jsx","components/avatars/AvatarEntry.jsx","components/avatars/AvatarName.jsx","components/shared/GameOver.jsx","components/avatars/AvatarReady.jsx","components/shared/Instruction.jsx","components/loaders/LoadingPage.jsx","components/errors/PageError.jsx","components/shared/PhaseContainer.jsx","utils/index.js","components/shared/RankingBoard.jsx","components/shared/ReadyPlayersBar.jsx","images/rodada-title.svg","components/shared/RoundAnnouncement.jsx","services/localStorage.js","components/lobby/Join.jsx","components/lobby/Waiting.jsx","components/lobby/CloudBackground.jsx","components/lobby/Lobby.jsx","components/rules/RulesCarousel.jsx","components/modals/RulesModal.jsx","components/shared/GameInfoDrawer.jsx","components/shared/Session.jsx","hooks/useGamePlayers.js","hooks/useGameState.js","components/shared/StarPoints.jsx","components/shared/StepSwitcher.jsx","components/shared/TimedButton.jsx","components/shared/Title.jsx","components/shared/View.jsx","components/shared/WaitingRoom.jsx","components/modals/CreateGameModal.jsx","components/Admin.jsx","adapters/auth.js","components/Login.jsx","components/rules/Rules.jsx","sounds/arte-ruim-timer.mp3","components/cards/Card.jsx","components/games/arte-ruim/DrawingCanvas.jsx","components/games/arte-ruim/DrawPhaseDrawStep.jsx","components/games/arte-ruim/DrawPhase.jsx","components/games/arte-ruim/CanvasSVG.jsx","components/games/arte-ruim/Ribbon.jsx","components/games/arte-ruim/EvaluationAllDrawings.jsx","components/cards/ArteRuimCard.jsx","components/games/arte-ruim/EvaluationAllCards.jsx","components/games/arte-ruim/CanvasResizer.jsx","components/games/arte-ruim/EvaluationPhase.jsx","components/games/arte-ruim/GalleryWindowCredits.jsx","components/games/arte-ruim/GalleryWindowGuesses.jsx","components/games/arte-ruim/GalleryWindowControls.jsx","components/games/arte-ruim/GalleryWindowResult.jsx","components/games/arte-ruim/GalleryWindow.jsx","components/games/arte-ruim/GalleryPhase.jsx","components/games/arte-ruim/DrawingGrade.jsx","components/games/arte-ruim/GameOverPhase.jsx","components/games/arte-ruim/SessionArteRuim.jsx","components/cards/EspiaoEntreNosCard.jsx","components/games/espiao-entre-nos/List.jsx","components/games/espiao-entre-nos/Notes.jsx","components/games/espiao-entre-nos/AdminTimerControlButton.jsx","components/games/espiao-entre-nos/AssignmentPhase.jsx","components/games/espiao-entre-nos/PlayerSelect.jsx","components/games/espiao-entre-nos/LocationSelect.jsx","components/games/espiao-entre-nos/Timer.jsx","components/games/espiao-entre-nos/SuspectsList.jsx","components/games/espiao-entre-nos/InvestigationPhase.jsx","components/games/espiao-entre-nos/EmergencyAlert.jsx","components/games/espiao-entre-nos/AssessmentPhase.jsx","components/games/espiao-entre-nos/ResolutionPhase.jsx","components/games/espiao-entre-nos/FinalAssessmentPhase.jsx","components/games/espiao-entre-nos/SessionEspiaoEntreNos.jsx","components/games/onda-telepatica/Card.jsx","components/games/onda-telepatica/CardSelection.jsx","components/games/onda-telepatica/DialSidesPhase.jsx","components/games/onda-telepatica/Dial.jsx","components/games/onda-telepatica/DialClueWriting.jsx","components/games/onda-telepatica/DialCluePhase.jsx","components/games/onda-telepatica/DialGuessSelection.jsx","components/modals/messageContent.js","components/games/onda-telepatica/GuessPhase.jsx","components/games/onda-telepatica/DialRivalSelection.jsx","components/games/onda-telepatica/RivalPhase.jsx","components/games/onda-telepatica/RevealPhase.jsx","components/games/onda-telepatica/SessionOndaTelepatica.jsx","components/games/ue-so-isso/WordSelectionStep.jsx","components/games/ue-so-isso/WordSelectionPhase.jsx","components/cards/UeSoIssoCard.jsx","components/games/ue-so-isso/SuggestionEasel.jsx","components/games/ue-so-isso/SuggestionStep.jsx","components/games/ue-so-isso/SuggestPhase.jsx","components/games/ue-so-isso/SuggestionCard.jsx","components/games/ue-so-isso/CompareSuggestionsStep.jsx","components/games/ue-so-isso/ComparePhase.jsx","components/games/ue-so-isso/Guess.jsx","components/games/ue-so-isso/GuessingStep.jsx","components/games/ue-so-isso/GuessVerificationStep.jsx","components/games/ue-so-isso/GuessPhase.jsx","components/games/ue-so-isso/SessionUeSoIsso.jsx","components/games/index.js","components/Game.jsx","hooks/useIsGameStale.js","components/TestingZone.jsx","components/loaders/LoadingBar.jsx","components/App.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","firestore","functions","window","location","hostname","includes","useEmulator","useWhichPlayerIsThe","propertyName","state","players","useState","activePlayer","setActivePlayer","useEffect","initialState","isLoading","loaders","isAuthenticated","appStartedAt","Date","now","gameId","gameName","gameMeta","username","userAvatarId","isAdmin","canvasSize","cachedCanvasSize","espiaoEntreNosCache","createGlobalState","useGlobalState","setGlobalState","getGlobalState","useIsUserThe","isUser","setIsUser","useIsUserReady","isReady","setIsReady","ready","updatedAt","useAPICall","apiFunction","actionName","onBeforeCall","onAfterCall","onError","successMessage","errorMessage","useLoading","setLoader","useCallback","payload","a","playerName","data","message","success","notification","error","description","JSON","stringify","placement","console","useIsUsersTeamActive","isUsersTeamActive","setIsUsersTeamActive","activeTeam","team","setLoading","setLoaders","Object","values","some","v","key","value","useUser","user","setUser","Home","className","src","logo","preview","alt","PUBLIC_URL","BANNERS","RULES","TAG_DICT","competitive","label","color","cooperative","traitor","timed","drawing","guessing","writing","images","discussion","AVATAR_IDS","Array","fill","map","i","index","LETTERS","AVATAR_DESCRIPTIONS_BR","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","GAME_COLLECTION","PHASES","LOBBY","DRAW","EVALUATION","GALLERY","GAME_OVER","ASSIGNMENT","INVESTIGATION","ASSESSMENT","FINAL_ASSESSMENT","RESOLUTION","DIAL_SIDES","DIAL_CLUE","GUESS","RIVAL_GUESS","REVEAL","WORD_SELECTION","SUGGEST","COMPARE","GAME_API","helloWorld","httpsCallable","initializeGame","loadGame","addPlayer","lockGame","makeMeReady","playAgain","goToNextPhase","ARTE_RUIM_API","submitDrawing","submitVoting","ESPIAO_ENTRE_NOS_API","handleAdminAction","makeAccusation","guessLocation","ONDA_TELEPATICA","submitSides","submitClue","submitGuess","submitRivalGuess","UE_SO_ISSO_API","submitWordSelectionVotes","submitSuggestions","submitValidation","confirmGuess","sendGuess","Loading","margin","clsx","Boolean","Text","defaultProps","AdminForceNextPhase","onGoToNextPhase","icon","FireFilled","type","danger","onClick","disabled","AdminOnly","memo","children","AdminButton","action","RocketFilled","AdminOnlyButton","ButtonContainer","wrap","Avatar","id","size","shape","viewBox","href","avatars","AvatarEntry","name","animate","propTypes","PropTypes","number","string","bool","AvatarName","player","withDescription","uppercase","addressUser","baseClass","avatarId","GameOver","info","onPlayAgain","PhaseContainer","phase","allowedPhase","gameOverTitle","winners","length","winner","group","strokeColor","victory","percent","score","title","onConfirm","okText","cancelText","boolean","Instruction","white","contained","LoadingPage","Content","PageError","showIcon","fullScreen","isValidGameId","getRandomItem","list","Math","floor","random","inNSeconds","seconds","getColorFromLetter","letter","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","getColorFromIndex","getOppositeTeam","teams","teamsNames","isArray","keys","RankingBoard","ranking","displayStep","setDisplayStep","sortedRanking","setSortedRanking","positions","setPositions","maxPoints","newScore","useTimer","expiryTimestamp","autoStart","onExpire","sort","b","previousScore","property","lastPosition","lastPoints","entry","gainedPoints","CrownFilled","ReadyPlayersBar","readyText","readyTextPlural","showNames","readyPlayers","filter","Group","LikeFilled","join","Team","members","RoundAnnouncement","round","onPressButton","buttonText","time","rodadaTitle","TimedButton","duration","showTimer","this","store","notLoaded","appName","init","load","get","localStorage","parse","getItem","entries","forEach","item","undefined","save","setItem","Join","setUsername","setUserAvatarId","availableAvatars","setAvailableAvatars","tempAvatar","setTempAvatar","tempUsername","setTempUsername","sameGameId","setSameGameId","localStorageAvatar","setLocalStorageAvatar","usedAvatars","reduce","acc","p","newAvailableAvatars","lsAvatarId","lsUsername","lsGameId","onPreviousAvatar","indexOf","newIndex","onNextAvatar","onAddPlayer","playerAvatarId","response","set","fallback","CaretLeftOutlined","CaretRightOutlined","onChange","e","target","trim","placeholder","maxLength","suffix","InfoCircleOutlined","onKeyPress","Waiting","onLockGameAndStart","isLocked","numPlayers","min","CloudBackground","Lobby","RulesCarousel","ruleClass","settings","prevArrow","DoubleLeftOutlined","nextArrow","DoubleRightOutlined","autoplay","autoplaySpeed","arrows","rules","rule","Paragraph","RulesModal","gameInfo","isVisible","setVisibility","onCloseModal","ReadOutlined","visible","onCancel","footer","SectionMe","isTeamGame","count","SectionMeta","roundsToEndGame","groupScore","pointsToVictory","isNaN","style","backgroundColor","SectionTeams","SectionTeamPlayers","sortedPlayers","useMemo","memberName","SectionRankedPlayers","rankedPlayers","GameInfoDrawer","setVisible","completeMe","offsetTop","closable","onClose","Session","gameCollection","getActiveComponent","useDocument","doc","snapshotListenOptions","includeMetadataChanges","snapshot","loading","log","useGamePlayers","useGameState","setInfo","gameList","ActiveComponent","StarPoints","quantity","keyPrefix","starsArray","from","_","StarFilled","StepSwitcher","step","conditions","Step","fullWidth","props","timeClass","Title","level","View","visibleIf","WaitingRoom","instruction","CreateGameModal","history","useHistory","setGameId","gameCode","createGame","onOk","push","Admin","sortedGameList","properties","orders","sortBy","_key","_cb","sortByDesc","cb","reverse","o","order","Error","orderBy","align","game","hoverable","width","cover","Meta","summary","max","recommended","tags","tag","available","signIn","email","password","signInWithEmailAndPassword","layout","labelCol","span","wrapperCol","tailLayout","offset","Login","setIsAuthenticated","setError","setEmail","setPassword","onHandleSubmit","uid","onValuesChange","autoComplete","Item","Rules","isUserReady","onBeReady","onBeReadyQue","CheckCircleFilled","SmileFilled","MehFilled","RobotFilled","Card","header","randomColor","headerClassName","footerClassName","bgColor","DrawingCanvas","lines","setLines","isDrawing","useRef","handleMouseDown","current","pos","getStage","getPointerPosition","x","y","handleMouseMove","point","lastLine","concat","splice","handleMouseUp","height","onMouseDown","onMousemove","onMouseup","onTouchStart","onTouchMove","onTouchEnd","line","points","stroke","strokeWidth","tension","lineCap","globalCompositeOperation","DrawPhaseDrawStep","secretCard","onSubmitDrawing","cardId","text","DrawPhase","setStep","setSecretCard","useSound","arteRuimTimer","volume","play","currentCard","CanvasSVG","konvaLines","paths","lineArr","path","xmlns","overflow","d","strokeLinecap","strokeLinejoin","strokeMiterlimit","Ribbon","cardEntryId","split","EvaluationAllDrawings","drawings","activeItem","onActivateItem","votes","liButtonBaseClass","drawingEntry","canvasEntryId","isActive","ArteRuimCard","WarningOutlined","EvaluationAllCards","cards","cardEntry","isUsed","role","CanvasResizer","setCanvasSize","defaultValue","prepareVotes","drawingEntryId","drawingId","EvaluationPhase","setVotes","setActiveItem","onSubmitVoting","entryId","startsWith","prevVotes","CloudUploadOutlined","GalleryWindowCredits","artist","artistAvatarId","GalleryWindowGuesses","playersSay","playersNames","card","find","MessageFilled","GalleryWindowControls","galleryLength","activeIndex","setActiveIndex","isRunning","pause","resume","s","abs","StepBackwardOutlined","PauseOutlined","PlayCircleOutlined","StepForwardOutlined","TrophyOutlined","GalleryWindowResult","correctAnswerId","correctAnswerText","playersPoints","correctGuesses","DeleteFilled","GalleryWindow","correctAnswer","correctAnswerLevel","GalleryPhase","setCachedCanvasSize","innerWidth","onGoToNextRound","gallery","PictureOutlined","grades","minValues","DrawingGrade","grade","findIndex","GameOverPhase","successRate","SessionArteRuim","EspiaoEntreNosCard","QuestionCircleFilled","List","headerIcon","items","column","cache","setCache","ghost","ClearOutlined","newState","onCross","Notes","cols","rows","AdminTimerControlButton","onControlStopwatch","AssignmentPhase","isUserTheSpy","EnvironmentOutlined","possibleLocations","PlayerSelect","playersList","onSend","isFinalAssessment","selectedPlayer","setSelectedPlayer","playersWithoutMe","Option","vote","LoadingOutlined","LocationSelect","locations","selectedLocation","setSelectedLocation","guess","FinalAssessmentModal","isModalVisible","onAdminControl","playerId","UserOutlined","lastPlayer","Timer","timeRemaining","hideAccusationSelect","setModalVisible","warning","minutes","SuspectsList","AimOutlined","usedAccusation","IssuesCloseOutlined","InvestigationPhase","isAccusationSelectVisible","setAccusationSelectVisible","onMakeAccusation","onGuessLocation","outcome","votedYes","startingPlayer","EmergencyAlertSVG","EmergencyAlert","centered","AssessmentPhase","isUserTheTarget","isUserTheAccuser","submittedAction","setSubmitAction","accuser","finalAssessment","ResolutionPhase","missionOutcomeText","spyWin","wasABadVoting","resolutionType","currentSpy","currentLocation","FinalAssessmentInstruction","playerOrder","playerOrderIndex","FinalAssessmentPhase","setAccuser","setTarget","SessionEspiaoEntreNos","getColorModifier","left","right","setNeedle","leftColor","rightColor","cardSideClass","isButton","onSetNeedle","direction","n","ArrowLeftOutlined","MinusOutlined","ArrowRightOutlined","cardName","CardSelection","onSendChosenSide","DialSidesPhase","psychic","isUserThePsychic","getBracketClass","showNeedle","needle","showTarget","baseBracketClass","modifier","Dial","rivalGuess","rivalTeam","showPoints","basePointsClass","baseRivalClass","transform","textAnchor","getHint","DialClueWriting","onSendClue","clue","setClue","content","FileUnknownOutlined","toUpperCase","DialCluePhase","Prompt","TeamInstructions","teamController","PsychicView","ControllerView","onSendGuess","ActiveTeamView","OtherTeamView","DialGuessSelection","isUserTheController","viewDelegator","messageContent","top","destroy","GuessPhase","controller","rivalController","RivalControllerView","onSendRivalGuess","BackwardOutlined","ForwardOutlined","RivalTeamView","DialRivalSelection","isUserTheRivalController","isUsersTeamRival","RivalPhase","getResultInstructionLine","pointsBreakdown","catchup","got","getRivalResultInstructionLine","PointDistributionExplanation","RevealPhase","activeTeamMessageType","getMessageType","shouldCatchup","rival","SessionOndaTelepatica","WordSelectionStep","guesser","onSendSelectedWords","words","selectedWords","setSelectedWords","selectedWordsArray","noSelection","word","wordId","randomSelection","WordSelectionPhase","isUserTheGuesser","nextGuesser","status","UeSoIssoCard","SuggestionEasel","onChangeInput","bordered","opacity","SuggestionStep","onSendSuggestions","secretWord","suggestionsNumber","suggestions","setSuggestions","indexStr","Number","suggestionsValues","SuggestPhase","SuggestionCard","invalid","suggestion","CloseOutlined","CompareSuggestionsStep","obj","isUserTheNextGuesser","onValidateSuggestions","myRecommendation","setMyRecommendation","ExclamationCircleOutlined","suggestionEntry","notAllowed","arr","newArr","onSetValidation","validSuggestions","ComparePhase","Guess","onSubmitGuess","setGuess","GuessingStep","QuestionCircleOutlined","GuessVerificationStep","onConfirmGuess","CheckOutlined","SessionUeSoIsso","games","ArteRuim","EspiaoEntreNos","OndaTelepatica","UeSoIsso","Game","setGameName","setGameMeta","isPageLoading","setPageLoading","isGameStale","gameCreatedAt","setGameStale","useIsGameStale","createdAt","urlGameId","pathname","substring","getGameIdFromURL","listen","getGameIdFromLocation","meta","loadGameSession","warn","TestingZone","Flaviane","Kavis","Stephanie","table","LoadingBar","PrivateRoute","Component","component","authenticated","rest","render","to","PublicRoute","fromPath","App","setIsLoading","setIsAdmin","onAuthStateChanged","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.394d932d.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/functions';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_API_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n// firebase.analytics();\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const functions = firebase.functions();\n\nif (window.location.hostname.includes('localhost')) {\n  firestore.useEmulator('localhost', 8091);\n  functions.useEmulator('localhost', 5001);\n}\n\nexport default firebase;\n","import { useEffect, useState } from 'react';\n\n/**\n * Gets player that is assigned to a property in the state\n * @param {string} propertyName\n * @param {object} state\n * @param {object} players\n * @returns {object} a player instance\n */\nexport function useWhichPlayerIsThe(propertyName = 'activePlayer', state = {}, players = {}) {\n  const [activePlayer, setActivePlayer] = useState({});\n\n  // Determine if user is active as the guesser, the clue giver, the psychic, the storyteller, etc\n  useEffect(() => {\n    const activePlayer = state?.[propertyName];\n    setActivePlayer(players?.[activePlayer]);\n  }, [players, propertyName, state]);\n\n  return activePlayer;\n}\n","import { createGlobalState } from 'react-hooks-global-state';\n\nconst initialState = {\n  isLoading: false,\n  loaders: false,\n  isAuthenticated: false,\n  appStartedAt: Date.now(),\n  // Meta\n  gameId: null,\n  gameName: null,\n  gameMeta: {},\n  username: '',\n  userAvatarId: '',\n  isAdmin: false,\n  // Arte-Ruim\n  canvasSize: 250,\n  cachedCanvasSize: 250,\n  // Espiao-entre-nos\n  espiaoEntreNosCache: {},\n};\n\nconst { useGlobalState, setGlobalState, getGlobalState } = createGlobalState(initialState);\n\nexport { setGlobalState, getGlobalState, useGlobalState };\n\nexport default useGlobalState;\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\n/**\n * Check if the current user is associated with given property\n * @param {string} propertyName - the property to be check in the state\n * @param {*} state - the game state\n * @returns {boolean}\n */\nexport function useIsUserThe(propertyName = 'activePlayer', state = {}) {\n  const [username] = useGlobalState('username');\n  const [isUser, setIsUser] = useState(false);\n\n  // Determine if user is active as the guesser, the clue giver, the psychic, the storyteller, etc\n  useEffect(() => {\n    setIsUser(state?.[propertyName] === username);\n  }, [state, username, propertyName]);\n\n  return isUser;\n}\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\nexport function useIsUserReady(players, state = {}) {\n  const [username] = useGlobalState('username');\n  const [isReady, setIsReady] = useState(false);\n\n  useEffect(() => {\n    // Check if user is ready and check if user has been ready after the last state change\n    if (players[username].ready === false) {\n      setIsReady(false);\n      return;\n    }\n\n    if (!state?.updatedAt) {\n      setIsReady(true);\n      return;\n    }\n\n    // If state was updated after the player was updated, data might not be synced\n    if (players[username]?.updatedAt < state?.updatedAt) {\n      setIsReady(false);\n      return;\n    }\n\n    setIsReady(true);\n  }, [username, players, state?.updatedAt]);\n\n  return isReady;\n}\n","import { useCallback } from 'react';\nimport { message, notification } from 'antd';\nimport { useGlobalState, useLoading } from './index';\n\n/**\n * Wrapper around common firebase http call\n * @param {object} data\n * @param {Function} data.apiFunction\n * @param {Function} [data.onBeforeCall]\n * @param {Function} [data.onAfterCall]\n * @param {Function} [data.onError]\n * @param {string} [data.actionName] the name used in the loader hook\n * @param {string} [data.successMessage]\n * @param {string} [data.errorMessage]\n * @returns\n */\nexport function useAPICall({\n  apiFunction,\n  actionName = 'api-action',\n  onBeforeCall = () => {},\n  onAfterCall = () => {},\n  onError = () => {},\n  successMessage = 'API call was successful',\n  errorMessage = 'API call has failed',\n}) {\n  const [, setLoader] = useLoading();\n  const [gameId] = useGlobalState('gameId');\n  const [gameName] = useGlobalState('gameName');\n  const [username] = useGlobalState('username');\n\n  const onAPICall = useCallback(\n    async (payload) => {\n      try {\n        setLoader(actionName, true);\n        await onBeforeCall();\n        const response = await apiFunction({\n          gameId,\n          gameName,\n          playerName: username,\n          ...payload,\n        });\n\n        if (response.data) {\n          message.success(successMessage);\n        }\n      } catch (e) {\n        notification.error({\n          message: errorMessage,\n          description: JSON.stringify(e.message),\n          placement: 'bottomLeft',\n        });\n        console.error(e);\n        onError();\n      } finally {\n        await onAfterCall();\n        setLoader(actionName, false);\n      }\n    },\n    [\n      actionName,\n      apiFunction,\n      errorMessage,\n      gameId,\n      gameName,\n      username,\n      setLoader,\n      successMessage,\n      onBeforeCall,\n      onAfterCall,\n      onError,\n    ]\n  );\n\n  return onAPICall;\n}\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\nexport function useIsUsersTeamActive(state, players) {\n  const [username] = useGlobalState('username');\n  const [isUsersTeamActive, setIsUsersTeamActive] = useState(false);\n\n  // Determine if user's team is active\n  useEffect(() => {\n    setIsUsersTeamActive(state?.activeTeam === players?.[username]?.team);\n  }, [state, username, players]);\n\n  return isUsersTeamActive;\n}\n","import { useEffect } from 'react';\n\nimport { useGlobalState } from './index';\n\n/**\n * Aggregate loading states into a single object, and single isLoading state\n * @returns [boolean, function, object]\n */\nexport function useLoading() {\n  const [isLoading, setLoading] = useGlobalState('isLoading');\n  const [loaders, setLoaders] = useGlobalState('loaders');\n\n  useEffect(() => {\n    setLoading(Object.values(loaders).some((v) => v));\n  }, [loaders, setLoading]);\n\n  const setLoader = (key, value) => {\n    setLoaders((values) => ({\n      ...values,\n      [key]: value,\n    }));\n  };\n\n  return [isLoading, setLoader, loaders];\n}\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\nexport function useUser(players) {\n  const [username] = useGlobalState('username');\n  const [user, setUser] = useState({});\n\n  // Determine if user is active as the guesser, the clue giver, the psychic, the storyteller, etc\n  useEffect(() => {\n    setUser(players?.[username]);\n  }, [players, username]);\n\n  return user;\n}\n","export default __webpack_public_path__ + \"static/media/tarde-divertida-logo.7e15410c.svg\";","import React from 'react';\nimport { Image, Layout } from 'antd';\n\nimport logo from '../images/tarde-divertida-logo.svg';\n\nfunction Home() {\n  return (\n    <Layout className=\"home\">\n      <div className=\"home__logo-container\">\n        <Image src={logo} className=\"home__logo\" preview={false} alt=\"Tarde Divertida logo\" />\n      </div>\n      <div className=\"home__background\">\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Home;\n","/**\n * List of urls residing in the public folder\n */\nexport const PUBLIC_URL = {\n  BANNERS: `${process.env.PUBLIC_URL}/images/banners/`,\n  RULES: `${process.env.PUBLIC_URL}/images/rules/`,\n};\n\n/**\n * List of tags translation and color\n */\nexport const TAG_DICT = {\n  competitive: {\n    label: 'competitivo',\n    color: 'red',\n  },\n  cooperative: {\n    label: 'cooperativo',\n    color: 'green',\n  },\n  traitor: {\n    label: 'inimigo',\n    color: 'volcano',\n  },\n  'real-time': {\n    label: 'juntos',\n    color: 'volcano',\n  },\n  'turn-based': {\n    label: 'vez',\n    color: 'volcano',\n  },\n  timed: {\n    label: 'tempo',\n    color: 'orange',\n  },\n  drawing: {\n    label: 'desenho',\n    color: 'gold',\n  },\n  guessing: {\n    label: 'adivinhar',\n    color: 'cyan',\n  },\n  writing: {\n    label: 'escrever',\n    color: 'blue',\n  },\n  images: {\n    label: 'imagens',\n    color: 'purple',\n  },\n  discussion: {\n    label: 'discussão/fala',\n    color: 'geekblue',\n  },\n};\n\n/**\n * List of avatar ids\n */\nexport const AVATAR_IDS = new Array(25).fill(0).map((i, index) => i + index);\n\nexport const LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\nexport const AVATAR_DESCRIPTIONS_BR = {\n  0: 'o axolote',\n  1: 'a tartaruga',\n  2: 'a raposa',\n  3: 'o sapo',\n  4: 'a salamandra',\n  5: 'a toupeira',\n  6: 'o esquilo',\n  7: 'o corvo',\n  8: 'a lontra',\n  9: 'o camundongo',\n  10: 'o sabiá',\n  11: 'a cojura',\n  12: 'o porco-espinho',\n  13: 'o ornitorrinco',\n  14: 'o rato',\n  15: 'a rã',\n  16: 'o caramujo',\n  17: 'a abelha',\n  18: 'o morcego',\n  19: 'o gato',\n  20: 'o coelho',\n  21: 'a aranha',\n  22: 'a borboleta',\n  23: 'o arminho',\n  24: 'o porco',\n};\n\n/**\n * Enum of available games\n */\nexport const GAME_COLLECTION = {\n  ARTE_RUIM: 'arte-ruim',\n  ESPIAO_ENTRE_NOS: 'espiao-entre-nos',\n  ONDA_TELEPATICA: 'onda-telepatica',\n  UE_SO_ISSO: 'ue-so-isso',\n};\n\n/**\n * Enum of Game Phases\n */\nexport const PHASES = {\n  ARTE_RUIM: {\n    LOBBY: 'LOBBY',\n    RULES: 'RULES',\n    DRAW: 'DRAW',\n    EVALUATION: 'EVALUATION',\n    GALLERY: 'GALLERY',\n    GAME_OVER: 'GAME_OVER',\n  },\n  ESPIAO_ENTRE_NOS: {\n    LOBBY: 'LOBBY',\n    RULES: 'RULES',\n    ASSIGNMENT: 'ASSIGNMENT',\n    INVESTIGATION: 'INVESTIGATION',\n    ASSESSMENT: 'ASSESSMENT',\n    FINAL_ASSESSMENT: 'FINAL_ASSESSMENT',\n    RESOLUTION: 'RESOLUTION',\n    GAME_OVER: 'GAME_OVER',\n  },\n  ONDA_TELEPATICA: {\n    LOBBY: 'LOBBY',\n    RULES: 'RULES',\n    DIAL_SIDES: 'DIAL_SIDES',\n    DIAL_CLUE: 'DIAL_CLUE',\n    GUESS: 'GUESS',\n    RIVAL_GUESS: 'RIVAL_GUESS',\n    REVEAL: 'REVEAL',\n    GAME_OVER: 'GAME_OVER',\n  },\n  UE_SO_ISSO: {\n    LOBBY: 'LOBBY',\n    RULES: 'RULES',\n    WORD_SELECTION: 'WORD_SELECTION',\n    SUGGEST: 'SUGGEST',\n    COMPARE: 'COMPARE',\n    GUESS: 'GUESS',\n    GAME_OVER: 'GAME_OVER',\n  },\n};\n","import { functions } from '../services/firebase';\nimport { GAME_COLLECTION } from '../utils/constants';\n\nexport const GAME_API = {\n  helloWorld: functions.httpsCallable('helloWorld'),\n  initializeGame: functions.httpsCallable('initializeGame'),\n  loadGame: functions.httpsCallable('loadGame'),\n  addPlayer: functions.httpsCallable('addPlayer'),\n  lockGame: functions.httpsCallable('lockGame'),\n  makeMeReady: functions.httpsCallable('makeMeReady'),\n  playAgain: functions.httpsCallable('playAgain'),\n  goToNextPhase: functions.httpsCallable('goToNextPhase'),\n};\n\nexport const ARTE_RUIM_API = {\n  submitDrawing: functions.httpsCallable('arteRuimSubmitDrawing'),\n  submitVoting: functions.httpsCallable('arteRuimSubmitVoting'),\n};\n\nexport const ESPIAO_ENTRE_NOS_API = {\n  handleAdminAction: functions.httpsCallable('espiaoEntreNosHandleAdminAction'),\n  makeAccusation: functions.httpsCallable('espiaoEntreNosMakeAccusation'),\n  guessLocation: functions.httpsCallable('espiaoEntreNosGuessLocation'),\n  submitVoting: functions.httpsCallable('espiaoEntreNosSubmitVoting'),\n};\n\nexport const ONDA_TELEPATICA = {\n  submitSides: functions.httpsCallable('ondaTelepaticaSubmitSides'),\n  submitClue: functions.httpsCallable('ondaTelepaticaSubmitClue'),\n  submitGuess: functions.httpsCallable('ondaTelepaticaSubmitGuess'),\n  submitRivalGuess: functions.httpsCallable('ondaTelepaticaSubmitRivalGuess'),\n};\n\nexport const UE_SO_ISSO_API = {\n  submitWordSelectionVotes: functions.httpsCallable('ueSoIssoSubmitWordSelectionVotes'),\n  submitSuggestions: functions.httpsCallable('ueSoIssoSubmitSuggestions'),\n  submitValidation: functions.httpsCallable('ueSoIssoSubmitValidation'),\n  confirmGuess: functions.httpsCallable('ueSoIssoConfirmGuess'),\n  sendGuess: functions.httpsCallable('ueSoIssoSendGuess'),\n};\n\n/**\n * Gets the game specific API http functions\n * @param {string} gameName\n * @returns\n */\nexport const getAPI = (gameName) => {\n  switch (gameName) {\n    case GAME_COLLECTION.ARTE_RUIM:\n      return ARTE_RUIM_API;\n    case GAME_COLLECTION.ESPIAO_ENTRE_NOS:\n      return ESPIAO_ENTRE_NOS_API;\n    case GAME_COLLECTION.ONDA_TELEPATICA:\n      return ONDA_TELEPATICA;\n    case GAME_COLLECTION.UE_SO_ISSO:\n      return UE_SO_ISSO_API;\n    default:\n      throw Error(`Adapter for ${gameName} does not exist`);\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Space, Spin, Typography } from 'antd';\n\nfunction Loading({ message, margin }) {\n  return (\n    <Space className={clsx('loading', margin && 'loading--margin')}>\n      <Spin />\n      {Boolean(message) && <Typography.Text>{message}</Typography.Text>}\n    </Space>\n  );\n}\n\nLoading.propTypes = {\n  message: PropTypes.string,\n  margin: PropTypes.bool,\n};\n\nLoading.defaultProps = {\n  margin: false,\n};\n\nexport default Loading;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Space } from 'antd';\nimport { FireFilled } from '@ant-design/icons';\n// State & Hooks\nimport useGlobalState from '../../hooks/useGlobalState';\nimport { useAPICall, useLoading } from '../../hooks';\nimport { GAME_API } from '../../adapters';\n\nexport function AdminForceNextPhase({ className = '' }) {\n  const [isLoading] = useLoading();\n  const [isAdmin] = useGlobalState('isAdmin');\n\n  const onGoToNextPhase = useAPICall({\n    apiFunction: GAME_API.goToNextPhase,\n    actionName: 'force-next-phase',\n    successMessage: 'Funcionou, próxima fase!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar ir para a próxima fase',\n  });\n\n  if (!isAdmin) return <span></span>;\n\n  return (\n    <Space className={clsx('admin-only-container', className)}>\n      <Button\n        icon={<FireFilled />}\n        type=\"primary\"\n        danger\n        onClick={() => onGoToNextPhase({})}\n        disabled={isLoading}\n      >\n        ADMIN: Force Next Phase\n      </Button>\n    </Space>\n  );\n}\n\nAdminForceNextPhase.propTypes = {\n  className: PropTypes.string,\n};\n","import React, { memo } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Space } from 'antd';\nimport { RocketFilled } from '@ant-design/icons';\n// State\nimport { useLoading, useGlobalState } from '../../hooks';\n\nexport const AdminOnly = memo(function ({ children, className = '' }) {\n  const [isAdmin] = useGlobalState('isAdmin');\n\n  if (!isAdmin) return <span></span>;\n\n  return <Space className={clsx('admin-only-container', className)}>{children}</Space>;\n});\n\nAdminOnly.propTypes = {\n  children: PropTypes.element.isRequired,\n  className: PropTypes.string,\n};\n\nexport function AdminButton({ action, label }) {\n  const [isLoading] = useLoading();\n  return (\n    <Button icon={<RocketFilled />} danger type=\"primary\" onClick={action} disabled={isLoading}>\n      {label}\n    </Button>\n  );\n}\n\nAdminButton.propTypes = {\n  action: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n};\n\nexport function AdminOnlyButton({ action, label }) {\n  return (\n    <AdminOnly>\n      <AdminButton action={action} label={label} />\n    </AdminOnly>\n  );\n}\n\nAdminOnlyButton.propTypes = {\n  action: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Space } from 'antd';\n\nexport function ButtonContainer({ children, wrap = false, className = '' }) {\n  const baseClass = 'button-container';\n  return (\n    <Space className={clsx(baseClass, className)} wrap={wrap}>\n      {children}\n    </Space>\n  );\n}\n\nButtonContainer.propTypes = {\n  children: PropTypes.element.isRequired,\n  className: PropTypes.string,\n  wrap: PropTypes.bool,\n};\n","export default __webpack_public_path__ + \"static/media/game-over-title.7073f1c0.svg\";","export default __webpack_public_path__ + \"static/media/avatars.a2364409.svg\";","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Avatar as AntAvatar } from 'antd';\n// Images\nimport avatars from '../../images/avatars.svg';\n\nexport const Avatar = memo(function ({\n  id = 25,\n  size = 'large',\n  shape = 'circle',\n  alt = 'Fulano',\n  className = '',\n}) {\n  return (\n    <AntAvatar\n      className={clsx('avatar', className)}\n      size={size}\n      shape={shape}\n      alt={alt}\n      src={\n        <svg viewBox=\"0 0 100 100\">\n          <use href={avatars + `#avatar-${id}`}></use>\n        </svg>\n      }\n    />\n  );\n});\n\nAvatar.propTypes = {\n  id: PropTypes.number,\n  className: PropTypes.string,\n  size: PropTypes.string,\n  shape: PropTypes.string,\n  alt: PropTypes.string,\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Components\nimport { Avatar } from './Avatar';\n\nexport const AvatarEntry = memo(function ({ id = 25, name = 'Fulano', animate = false, className = '' }) {\n  return (\n    <div className={clsx('avatar-entry', animate && 'avatar-entry--floating', className)}>\n      <Avatar id={id} className=\"avatar-entry__avatar\" />\n      <div className=\"avatar-entry__name\">{name}</div>\n    </div>\n  );\n});\n\nAvatar.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  animate: PropTypes.bool,\n  className: PropTypes.string,\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Resources\nimport { AVATAR_DESCRIPTIONS_BR } from '../../utils/constants';\n// Components\nimport { Avatar } from './Avatar';\nimport { useGlobalState } from '../../hooks';\n\nexport const AvatarName = memo(function ({\n  player,\n  size = 'default',\n  className = '',\n  withDescription = false,\n  uppercase = false,\n  addressUser = false,\n}) {\n  const [username] = useGlobalState('username');\n\n  const baseClass = 'avatar-name';\n\n  const isUser = player.name === username;\n\n  return (\n    <span\n      className={clsx(baseClass, `${baseClass}--${size}`, uppercase && `${baseClass}--uppercase`, className)}\n    >\n      <Avatar id={player.avatarId} className=\"avatar-name__avatar\" size={size} />\n      <span className=\"avatar-name__name\">{addressUser && isUser ? 'VOCÊ' : player.name}</span>\n      {withDescription && (\n        <span className=\"avatar-name__name\">, {AVATAR_DESCRIPTIONS_BR[player.avatarId]}</span>\n      )}\n    </span>\n  );\n});\n\nAvatarName.propTypes = {\n  player: PropTypes.shape({\n    avatarId: PropTypes.number,\n    name: PropTypes.string,\n  }).isRequired,\n  size: PropTypes.oneOf(['small', 'default', 'large']),\n  withDescription: PropTypes.bool,\n  uppercase: PropTypes.bool,\n  addressUser: PropTypes.bool,\n  className: PropTypes.string,\n};\n","import React from 'react';\n// Design Resources\nimport { Button, Popconfirm, Progress } from 'antd';\nimport { RocketFilled } from '@ant-design/icons';\n// Images\nimport gameOverTitle from '../../images/game-over-title.svg';\n// Utils\nimport { useAPICall, useLoading } from '../../hooks';\nimport { GAME_API } from '../../adapters';\nimport { AVATAR_DESCRIPTIONS_BR } from '../../utils/constants';\n// Components\nimport { Avatar } from '../avatars';\nimport { AdminOnly, PhaseContainer } from './index';\n\nexport function GameOver({ info, state, children }) {\n  const [isLoading] = useLoading();\n\n  const onPlayAgain = useAPICall({\n    apiFunction: GAME_API.playAgain,\n    actionName: 'play-=again',\n    successMessage: 'Jogando novamente o mesmo jogo!',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar ir reiniciar o jogo',\n  });\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase=\"GAME_OVER\" className=\"game-over\">\n      <div className=\"game-over__title\">\n        <img src={gameOverTitle} alt=\"Game Over\" />\n      </div>\n\n      {Boolean(state.winners) && (\n        <div className=\"game-over__winner-container\">\n          <div className=\"game-over__text\">\n            Jogo concluido e {state.winners.length > 1 ? 'os vencedores são' : 'o vencedor é'}:\n          </div>\n          <ul className=\"game-over__winners\">\n            {state.winners.map((winner) => {\n              return (\n                <li className=\"game-over__winner\" key={`winner-${winner.name}`}>\n                  <Avatar className=\"game-over__avatar\" id={winner.avatarId ?? 25} />\n                  <div className=\"game-over__winner-name\">\n                    <strong>{winner.name ?? '?'}</strong>, {AVATAR_DESCRIPTIONS_BR[winner.avatarId]}\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      )}\n\n      {Boolean(state.group) && (\n        <div className=\"game-over__winner\">\n          <div className=\"game-over__text\">Jogo concluido.</div>\n          <Progress\n            type=\"circle\"\n            strokeColor={\n              state.group.victory\n                ? {\n                    '0%': '#4ba226',\n                    '100%': '#87d068',\n                  }\n                : {\n                    '0%': '#ff0000',\n                    '70%': '#ff0000',\n                    '100%': '#87d068',\n                  }\n            }\n            percent={state.group.score ?? 0}\n          />\n          <div className=\"game-over__text\">\n            {state.group.victory ? 'Parabéns, vocês ganharam!' : 'Não foi dessa vez, que vergonha heim!'}\n          </div>\n        </div>\n      )}\n\n      {Boolean(state.team) && (\n        <div className=\"game-over__winner\">\n          <div className=\"game-over__text\">Jogo concluido.</div>\n          <Progress\n            type=\"circle\"\n            strokeColor={{\n              '0%': '#ff0000',\n              '70%': '#ff0000',\n              '100%': '#87d068',\n            }}\n            percent={state.team.score ?? 0}\n          />\n          <div className=\"game-over__text\">\n            {state.team.victory ? 'Parabéns, vocês ganharam!' : 'Não foi dessa vez, que vergonha heim!'}\n          </div>\n        </div>\n      )}\n\n      {!Boolean(state.winners) && !Boolean(state.team) && !Boolean(state.group) && (\n        <div className=\"game-over__text\">Jogo concluido.</div>\n      )}\n\n      {children}\n\n      <AdminOnly>\n        <Popconfirm\n          title=\"Tem certeza que que jogar este jogo novamente??\"\n          onConfirm={() => onPlayAgain({})}\n          okText=\"Sim\"\n          cancelText=\"Não\"\n        >\n          <Button icon={<RocketFilled />} danger type=\"primary\" disabled={isLoading}>\n            Jogar novamente\n          </Button>\n        </Popconfirm>\n      </AdminOnly>\n    </PhaseContainer>\n  );\n}\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Components\nimport { Avatar } from './Avatar';\nimport { CrownFilled, LikeFilled } from '@ant-design/icons';\n\nexport const AvatarReady = memo(function ({\n  id = 25,\n  name = 'Fulano',\n  score = 0,\n  ready = false,\n  className = '',\n}) {\n  return (\n    <div className={clsx('avatar-entry', className)}>\n      <Avatar id={id} className=\"avatar-entry__avatar\" />\n      <div className=\"avatar-entry__name\">{name}</div>\n      <LikeFilled />\n      <CrownFilled />\n    </div>\n  );\n});\n\nAvatar.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  score: PropTypes.number,\n  ready: PropTypes.boolean,\n  animate: PropTypes.boolean,\n  className: PropTypes.string,\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Typography } from 'antd';\nimport clsx from 'clsx';\n\nexport const Instruction = memo(function ({ children, white, className, contained }) {\n  const baseClass = 'instruction';\n\n  return (\n    <Typography.Text\n      className={clsx(\n        baseClass,\n        contained && `${baseClass}--contained`,\n        white && `${baseClass}--white`,\n        className\n      )}\n    >\n      {children}\n    </Typography.Text>\n  );\n});\n\nInstruction.propTypes = {\n  children: PropTypes.any.isRequired,\n  white: PropTypes.bool,\n  className: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Layout, Spin, Typography } from 'antd';\n\nfunction LoadingPage({ message }) {\n  return (\n    <Layout.Content className=\"loading-page\">\n      <Spin size=\"large\" />\n      <Typography.Text>{message}</Typography.Text>\n    </Layout.Content>\n  );\n}\n\nLoadingPage.propTypes = {\n  message: PropTypes.string,\n};\n\nLoadingPage.defaultProps = {\n  message: 'Carregando...',\n};\n\nexport default LoadingPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Alert } from 'antd';\n\nfunction PageError({ message, description }) {\n  return (\n    <div className=\"container container--center\">\n      <Alert message={message} description={description} type=\"error\" showIcon />\n    </div>\n  );\n}\n\nPageError.propTypes = {\n  message: PropTypes.string,\n  description: PropTypes.string,\n};\n\nPageError.defaultProps = {\n  message: 'Algo errado não está certo',\n  description: 'Não era pra você estar vendo esta mensagem.',\n};\n\nexport default PageError;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Layout } from 'antd';\n// Components\nimport LoadingPage from '../loaders/LoadingPage';\nimport PageError from '../errors/PageError';\nimport { useGlobalState } from '../../hooks';\n\n/**\n * Wrapping container around a game screen\n * @param {*} props\n * @returns\n */\nexport function PhaseContainer({ info, phase, allowedPhase, children, className, fullScreen, white }) {\n  const [username] = useGlobalState('username');\n\n  if (!info?.gameName || allowedPhase !== phase) {\n    return <LoadingPage />;\n  }\n\n  if (!phase) {\n    return <PageError message=\"Algo errado não está certo\" description=\"Estado do jogo não está correto\" />;\n  }\n\n  const baseClass = 'phase-container';\n\n  return (\n    <Layout.Content\n      className={clsx(\n        baseClass,\n        fullScreen && `${baseClass}--full-screen`,\n        white && `${baseClass}--white`,\n        className\n      )}\n    >\n      {process.env.NODE_ENV === 'development' && (\n        <span className={`${baseClass}__dev-player-name`}>{username}</span>\n      )}\n      <span className={`${baseClass}__title`}>{info.title}</span>\n      {children}\n    </Layout.Content>\n  );\n}\n\nPhaseContainer.propTypes = {\n  children: PropTypes.any.isRequired,\n  allowedPhase: PropTypes.string,\n  className: PropTypes.string,\n  fullScreen: PropTypes.bool,\n  info: PropTypes.object,\n  phase: PropTypes.string,\n  white: PropTypes.bool,\n};\n\nPhaseContainer.defaultProps = {\n  allowedPhase: '',\n  className: '',\n  fullScreen: false,\n  phase: '',\n  white: false,\n};\n","/**\n * Extract the gameId from react history\n * @param {object} history\n * @returns {string}\n */\nexport const getGameIdFromURL = (history) => {\n  const { pathname = '/' } = history?.location ?? {};\n  return pathname.substring(1);\n};\n\n/**\n * Extract the gameId from react history.location\n * @param {object} history\n * @returns {string}\n */\nexport const getGameIdFromLocation = (location) => {\n  const { pathname = '/' } = location ?? {};\n  return pathname.substring(1);\n};\n\n/**\n * Verify if the game id exists and has the correct length\n * @param {string} gameId\n * @returns\n */\nexport const isValidGameId = (gameId) => {\n  return gameId && gameId.length === 4;\n};\n\n/**\n * Get random element/item from a list\n * @param {array} list\n * @returns one random item\n */\nexport const getRandomItem = (list) => {\n  return list[Math.floor(Math.random() * list.length)];\n};\n\n/**\n * Get date from now within the given seconds\n * @param {number} seconds\n * @returns\n */\nexport const inNSeconds = (seconds) => {\n  return Date.now() + seconds * 1000;\n};\n\n/**\n * Get color name from letter\n * @param {string} letter\n * @returns\n */\nexport const getColorFromLetter = (letter) => {\n  return (\n    {\n      A: 'red',\n      B: 'blue',\n      C: 'green',\n      D: 'yellow',\n      E: 'pink',\n      F: 'purple',\n      G: 'teal',\n      H: 'orange',\n      I: 'coffee',\n      J: 'navy',\n      K: 'light-green',\n      L: 'brown',\n      M: 'hot-pink',\n      N: 'violet',\n      O: 'forest',\n      P: 'cream',\n\n      // repeats\n      Q: 'red',\n      R: 'blue',\n      S: 'green',\n      T: 'yellow',\n      U: 'pink',\n      V: 'purple',\n      W: 'teal',\n      X: 'none',\n      Y: 'orange',\n      Z: 'coffee',\n    }[letter] ?? 'none'\n  );\n};\n\n/**\n * Gets color name from index\n * @param {number} letter\n * @returns\n */\nexport const getColorFromIndex = (letter) => {\n  return (\n    [\n      'red',\n      'blue',\n      'green',\n      'yellow',\n      'pink',\n      'purple',\n      'teal',\n      'orange',\n      'coffee',\n      'navy',\n      'light-green',\n      'brown',\n      'hot-pink',\n      'violet',\n      'forest',\n      'cream',\n    ][letter] ?? 'none'\n  );\n};\n\n/**\n * Creates a copy of given object\n * @param {object} obj\n * @returns {object}\n */\nexport const deepCopy = (obj) => JSON.parse(JSON.stringify(obj));\n\n/**\n * Orders array by a value its item object\n * @param {object[]} list\n * @param {string|string[]} properties\n * @param {string|string[]} orders\n * @returns {object[]}\n */\nexport const orderBy = (list, properties, orders) => {\n  function sortBy(_key, _cb) {\n    if (!_cb) _cb = () => 0;\n    return (a, b) => (a[_key] > b[_key] ? 1 : b[_key] > a[_key] ? -1 : _cb(a, b));\n  }\n\n  function sortByDesc(key, _cb) {\n    if (!_cb) _cb = () => 0;\n    return (b, a) => (a[key] > b[key] ? 1 : b[key] > a[key] ? -1 : _cb(b, a));\n  }\n\n  let cb = () => 0;\n  const p = Array.isArray(properties) ? properties.reverse() : [properties];\n  const o = Array.isArray(properties) ? orders.reverse() : [orders];\n\n  for (const [i, key] of p.entries()) {\n    const order = o[i] ?? o[0] ?? 'asc';\n    if (order === 'asc') {\n      cb = sortBy(key, cb);\n    } else if (order === 'desc') {\n      cb = sortByDesc(key, cb);\n    } else {\n      throw new Error(`Unsupported order \"${order}\"`);\n    }\n  }\n\n  return [...list].sort(cb);\n};\n\n/**\n * Get the team name that is not active\n * @param {object|array} teams\n * @param {string} activeTeam\n * @returns {string}\n */\nexport const getOppositeTeam = (teams, activeTeam) => {\n  if (!teams || !activeTeam || teams?.length < 2) return '?';\n\n  const teamsNames = Array.isArray(teams) ? teams : Object.keys(teams);\n  if (teamsNames[0] === activeTeam) return teamsNames[1];\n  else return teamsNames[0];\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTimer } from 'react-timer-hook';\n// Design Resources\nimport { CrownFilled } from '@ant-design/icons';\n// Utils\nimport { inNSeconds } from '../../utils';\n// Components\nimport { Avatar } from '../avatars';\n\nexport function RankingBoard({ players, ranking }) {\n  const [displayStep, setDisplayStep] = useState(0);\n  const [sortedRanking, setSortedRanking] = useState([]);\n  const [positions, setPositions] = useState([]);\n\n  const maxPoints = ranking[0].newScore;\n\n  const rankByFinalScore = () => {\n    setSortedRanking(ranking.sort((a, b) => (a.newScore < b.newScore ? 1 : -1)));\n    setDisplayStep(3);\n  };\n\n  const { seconds } = useTimer({\n    expiryTimestamp: inNSeconds(4),\n    autoStart: true,\n    onExpire: () => rankByFinalScore(),\n  });\n\n  // Rank by previousScore\n  useEffect(() => {\n    setSortedRanking(ranking.sort((a, b) => (a.previousScore < b.previousScore ? 1 : -1)));\n  }, []); // eslint-disable-line\n\n  // Show gained points\n  useEffect(() => {\n    if (seconds === 3) {\n      setDisplayStep(1);\n    } else if (seconds === 2) {\n      setDisplayStep(2);\n    }\n  }, [seconds]);\n\n  // Determine position number in rank\n  useEffect(() => {\n    const property = displayStep < 3 ? 'previousScore' : 'newScore';\n\n    let lastPosition = 1;\n    let lastPoints = sortedRanking?.[0]?.[property] ?? 0;\n    setPositions(\n      sortedRanking.map((entry) => {\n        if (entry[property] < lastPoints) {\n          lastPoints = entry[property];\n          lastPosition += 1;\n        }\n\n        return lastPosition;\n      })\n    );\n  }, [sortedRanking, displayStep]);\n\n  return (\n    <div className=\"ranking-board\">\n      {sortedRanking.map((entry, index) => {\n        const { playerName, newScore, previousScore, gainedPoints } = entry;\n        return (\n          <div className={`ranking-board__row ranking-board__row--${index}`} key={`ranking-${playerName}`}>\n            <div className=\"ranking-board__cell-crown\">\n              {newScore > 0 && maxPoints === newScore && displayStep >= 3 && (\n                <CrownFilled className=\"ranking-board__crown-icon\" />\n              )}\n            </div>\n            <div className=\"ranking-board__cell-position\">#{positions?.[index] ?? ''}</div>\n            <div className=\"ranking-board__cell-player\">\n              <div className=\"ranking-board__avatar\">\n                <Avatar id={players[playerName].avatarId} />\n              </div>\n              <div className=\"ranking-board__name\">{playerName}</div>\n            </div>\n            <div className=\"ranking-board__cell-points\">{previousScore}</div>\n            {displayStep >= 1 && <div className=\"ranking-board__cell-points-plus\">+{gainedPoints}</div>}\n            {displayStep >= 2 && <div className=\"ranking-board__cell-points-total\">{newScore}</div>}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nRankingBoard.propTypes = {\n  players: PropTypes.object,\n  ranking: PropTypes.arrayOf(\n    PropTypes.shape({\n      playerName: PropTypes.string,\n      previousScore: PropTypes.number,\n      gainedPoints: PropTypes.number,\n      newScore: PropTypes.number,\n    })\n  ),\n};\n\nexport default RankingBoard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Avatar as AntAvatar, Typography } from 'antd';\nimport { LikeFilled } from '@ant-design/icons';\n// Components\nimport { Avatar } from '../avatars';\n\nexport function ReadyPlayersBar({\n  players,\n  readyText = 'Estou pronto!',\n  readyTextPlural = 'Estamos prontos!',\n  showNames,\n}) {\n  const readyPlayers = Object.values(players).filter((player) => player.ready);\n\n  if (readyPlayers.length === 0) {\n    return <span></span>;\n  }\n\n  return (\n    <div className=\"ready-player-bar\">\n      <div className=\"ready-player-bar__bar\">\n        <AntAvatar.Group size=\"small\">\n          {readyPlayers.map((player) => (\n            <Avatar key={player.name} id={player.avatarId} />\n          ))}\n        </AntAvatar.Group>\n        <span className=\"ready-player-bar__speech-bubble\">\n          <Typography.Text>{readyPlayers.length > 1 ? readyTextPlural : readyText}</Typography.Text>\n          <LikeFilled className=\"ready-player-bar__speech-bubble-icon\" />\n        </span>\n      </div>\n      {showNames && (\n        <span className=\"ready-player-bar__names\">\n          ({readyPlayers.map((player) => player.name).join(', ')})\n        </span>\n      )}\n    </div>\n  );\n}\n\nReadyPlayersBar.propTypes = {\n  players: PropTypes.object.isRequired,\n  readyText: PropTypes.string,\n  readyTextPlural: PropTypes.string,\n  showNames: PropTypes.bool,\n};\n\nReadyPlayersBar.defaultProps = {\n  readyText: 'Estou pronto!',\n  readyTextPlural: 'Estamos prontos!',\n  showNames: false,\n};\n","export default __webpack_public_path__ + \"static/media/rodada-title.2e3f9c1d.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Button, Tag } from 'antd';\n// Images\nimport rodadaTitle from '../../images/rodada-title.svg';\n// Components\nimport { AvatarName } from '../avatars';\nimport { TimedButton } from './index';\n\nfunction Team({ team, players, className }) {\n  return (\n    <div className={className}>\n      <h1>Time {team.name}</h1>\n      <ul className=\"round-announcement__team-members\">\n        {team.members.map((playerName) => (\n          <li key={`team-member-${playerName}`} className=\"round-announcement__team-member\">\n            <AvatarName player={players[playerName]} />\n          </li>\n        ))}\n      </ul>\n      <Tag className=\"round-announcement__points\" color=\"blue\">\n        {team.score} {team.score > 1 ? 'pontos' : 'ponto'}\n      </Tag>\n    </div>\n  );\n}\n\nexport function RoundAnnouncement({\n  round,\n  onPressButton,\n  buttonText,\n  time,\n  teams,\n  players,\n  className,\n  children,\n}) {\n  return (\n    <div className={clsx('round-announcement', className)}>\n      {Boolean(teams?.A) && (\n        <Team className=\"round-announcement__team-left\" team={teams.A} players={players} />\n      )}\n\n      <div className=\"round-announcement__main\">\n        <div className=\"round-announcement__title\">\n          <img src={rodadaTitle} alt=\"Rodada\" />\n        </div>\n        <div className=\"round-announcement__round-wrapper\">\n          <div className=\"round-announcement__circle\"></div>\n          <div className=\"round-announcement__number\">{round ?? 0}</div>\n        </div>\n\n        {children}\n\n        {Boolean(onPressButton) && !Boolean(time) && (\n          <Button type=\"primary\" onClick={onPressButton} className=\"round-announcement__go-button\">\n            {buttonText}\n          </Button>\n        )}\n\n        {Boolean(onPressButton) && Boolean(time) && (\n          <TimedButton\n            label={buttonText}\n            type=\"primary\"\n            onClick={onPressButton}\n            onExpire={onPressButton}\n            duration={time}\n            showTimer\n          />\n        )}\n      </div>\n\n      {Boolean(teams?.B) && (\n        <Team className=\"round-announcement__team-right\" team={teams.B} players={players} />\n      )}\n    </div>\n  );\n}\n\nRoundAnnouncement.propTypes = {\n  round: PropTypes.number,\n  onPressButton: PropTypes.func,\n  buttonText: PropTypes.string,\n  time: PropTypes.number,\n  players: PropTypes.object,\n  teams: PropTypes.object,\n  className: PropTypes.string,\n};\n\nRoundAnnouncement.defaultProps = {\n  buttonText: 'Prosseguir',\n  time: 0,\n};\n","class LocalStorage {\n  constructor() {\n    this.store = {};\n    this.notLoaded = true;\n    this.appName = 'tarde-divertida';\n\n    this.init();\n  }\n\n  init() {\n    this.load();\n    return this.get();\n  }\n\n  get(key) {\n    if (this.notLoaded) {\n      this.load();\n    }\n\n    if (key) {\n      return this.store[key] || null;\n    }\n    return this.store;\n  }\n\n  load() {\n    const localStorage = JSON.parse(window.localStorage.getItem(this.appName));\n    if (localStorage) {\n      this.store = localStorage;\n      this.notLoaded = false;\n    }\n  }\n\n  // To Remove a property, you can use the set method, but passing an object with the key and value\n  // null, the property will be removed from local storage\n  set(value) {\n    if (this.notLoaded) {\n      this.load();\n    }\n\n    const type = typeof value;\n    if (type !== 'string' && type !== 'object') {\n      console.error('localStorage set value must be a string or a key-value object');\n      return;\n    }\n\n    // When value is a string, use as a property toggle\n    if (typeof value === 'string') {\n      this.store[value] = !this.store[value];\n    } else {\n      // Remove any null or undefined property\n      Object.entries(value).forEach(([key, item]) => {\n        if (item === null || item === undefined) {\n          delete value[key];\n        }\n      });\n\n      this.store = {\n        ...this.store,\n        ...value,\n      };\n    }\n\n    this.save();\n  }\n\n  save() {\n    if (this.notLoaded) {\n      this.load();\n    }\n\n    window.localStorage.setItem(this.appName, JSON.stringify(this.store));\n    this.load();\n  }\n}\n\nexport default new LocalStorage();\n","import React, { useCallback, useEffect, useState } from 'react';\n// Design Resources\nimport { Alert, Button, Image, Input, notification, Spin, Tooltip } from 'antd';\nimport { CaretLeftOutlined, CaretRightOutlined, InfoCircleOutlined } from '@ant-design/icons';\n// API & Hooks\nimport { GAME_API } from '../../adapters';\nimport { useLoading } from '../../hooks';\nimport useGlobalState from '../../hooks/useGlobalState';\n// Images\nimport avatars from '../../images/avatars.svg';\n// Services\nimport localStorage from '../../services/localStorage';\n// Utils\nimport { AVATAR_IDS, PUBLIC_URL } from '../../utils/constants';\nimport { getRandomItem } from '../../utils/index';\n\nfunction Join({ players, info }) {\n  const [isLoading, setLoader] = useLoading();\n  const [gameId] = useGlobalState('gameId');\n  const [gameName] = useGlobalState('gameName');\n  const [, setUsername] = useGlobalState('username');\n  const [, setUserAvatarId] = useGlobalState('userAvatarId');\n\n  const [availableAvatars, setAvailableAvatars] = useState(AVATAR_IDS);\n  const [tempAvatar, setTempAvatar] = useState(getRandomItem(AVATAR_IDS));\n  const [tempUsername, setTempUsername] = useState('');\n  const [sameGameId, setSameGameId] = useState(false);\n\n  const [localStorageAvatar, setLocalStorageAvatar] = useState(null);\n\n  // Calculate available avatars and monitor if user chose a non-available one\n  useEffect(() => {\n    const usedAvatars = Object.values(players).reduce((acc, p) => {\n      acc[p.avatarId] = true;\n      return acc;\n    }, {});\n\n    const newAvailableAvatars = AVATAR_IDS.filter((avatarId) => usedAvatars[avatarId] === undefined);\n\n    if (newAvailableAvatars.includes(tempAvatar) && !localStorageAvatar) {\n      setTempAvatar(getRandomItem(newAvailableAvatars));\n    }\n\n    setAvailableAvatars(newAvailableAvatars);\n  }, [players]); // eslint-disable-line\n\n  // Load name and avatarId from localStorage\n  useEffect(() => {\n    const lsAvatarId = localStorage.get('avatarId');\n    const lsUsername = localStorage.get('username');\n    const lsGameId = localStorage.get('gameId');\n\n    if (lsAvatarId && lsUsername) {\n      setTempAvatar(localStorage.get('avatarId'));\n      setTempUsername(localStorage.get('username') ?? '');\n      setLocalStorageAvatar(lsAvatarId);\n\n      if (lsGameId === gameId) {\n        setSameGameId(true);\n      }\n    }\n  }, []); // eslint-disable-line\n\n  const onPreviousAvatar = useCallback(() => {\n    const index = availableAvatars.indexOf(tempAvatar);\n    const newIndex = index === 0 ? availableAvatars.length - 1 : index - 1;\n    setTempAvatar(availableAvatars[newIndex]);\n  }, [availableAvatars, tempAvatar]);\n\n  const onNextAvatar = useCallback(() => {\n    const index = availableAvatars.indexOf(tempAvatar);\n    const newIndex = index === availableAvatars.length - 1 ? 0 : index + 1;\n    setTempAvatar(availableAvatars[newIndex]);\n  }, [availableAvatars, tempAvatar]);\n\n  const onAddPlayer = useCallback(async () => {\n    try {\n      setLoader('add-player', true);\n      const response = await GAME_API.addPlayer({\n        gameId,\n        gameName,\n        playerName: tempUsername,\n        playerAvatarId: tempAvatar,\n      });\n\n      setUsername(response.data.name);\n      setUserAvatarId(response.data.avatarId);\n      localStorage.set({\n        username: response.data.name,\n        avatarId: response.data.avatarId,\n        gameId,\n      });\n    } catch (e) {\n      notification.error({\n        message: 'Vixi, o aplicativo encontrou um erro ao tentar te adicionar como jogador',\n        description: JSON.stringify(e.message),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n    } finally {\n      setLoader('add-player', false);\n    }\n  }, [gameId, gameName, tempUsername, tempAvatar]); // eslint-disable-line\n\n  const onEnterInput = (e) => {\n    if (e.key === 'Enter') {\n      onAddPlayer();\n    }\n  };\n\n  return (\n    <div className=\"lobby-join\">\n      <Image\n        alt={info?.title}\n        src={`${PUBLIC_URL.BANNERS}game-image-${info?.gameName}.jpg`}\n        fallback={`${PUBLIC_URL.BANNERS}/game-image-em-breve.jpg`}\n        className=\"lobby-join__game-image\"\n      />\n      <h1 className=\"lobby-join__title\">\n        {Boolean(localStorageAvatar) ? 'Bem-vindo de volta!' : 'Selecione seu avatar'}\n      </h1>\n      <div className=\"lobby-join__avatar-selection\">\n        <Button type=\"dashed\" onClick={onPreviousAvatar} className=\"lobby-join__avatar-nav-button\">\n          <CaretLeftOutlined />\n        </Button>\n        <svg viewBox=\"0 0 100 100\" className=\"lobby-join__avatar-selection-image\">\n          <use href={avatars + `#avatar-${tempAvatar}`}></use>\n        </svg>\n        <Button type=\"dashed\" onClick={onNextAvatar} className=\"lobby-join__avatar-nav-button\">\n          <CaretRightOutlined />\n        </Button>\n      </div>\n\n      {Boolean(localStorageAvatar) ? (\n        <Alert\n          className=\"lobby-join__avatar-alert\"\n          type=\"success\"\n          message=\"Você está de volta! Lembramos seu nome e avatar!\"\n        />\n      ) : (\n        <Alert\n          className=\"lobby-join__avatar-alert\"\n          type=\"warning\"\n          message=\"Se alguém selecionar um mesmo avatar, um avatar aleatório será atribuido à você.\"\n        />\n      )}\n\n      {Boolean(sameGameId) && (\n        <Alert\n          className=\"lobby-join__avatar-alert\"\n          type=\"error\"\n          message=\"Se você está retornando a um jogo, NÃO mude seu apelido! Se o apelido for modificado, você será adicionado como um novo jogador e tudo pode bugar.\"\n        />\n      )}\n\n      <Input\n        className=\"lobby-join__name-input\"\n        onChange={(e) => setTempUsername(e.target.value.trim())}\n        placeholder=\"Digite seu nome\"\n        value={tempUsername}\n        maxLength={10}\n        suffix={\n          <Tooltip title=\"Máximo de 10 caracteres\">\n            <InfoCircleOutlined />\n          </Tooltip>\n        }\n        onKeyPress={onEnterInput}\n      />\n      <Button\n        className=\"lobby-join__join-button\"\n        type=\"primary\"\n        disabled={!Boolean(tempUsername) || isLoading}\n        onClick={onAddPlayer}\n      >\n        {isLoading ? <Spin size=\"small\" /> : 'Entrar no jogo'}\n      </Button>\n    </div>\n  );\n}\n\nexport default Join;\n","import React, { useCallback } from 'react';\n// Design Resources\nimport { Button, Image, message, notification, Typography } from 'antd';\n// API & Hooks\nimport { GAME_API } from '../../adapters';\nimport useGlobalState from '../../hooks/useGlobalState';\nimport { useLoading } from '../../hooks';\n// Images\nimport avatars from '../../images/avatars.svg';\n// Utils and Resources\nimport { PUBLIC_URL } from '../../utils/constants';\n// Components\nimport { AdminOnly } from '../shared';\n\nfunction Waiting({ info, players }) {\n  const [isLoading, setLoader] = useLoading();\n  const [gameId] = useGlobalState('gameId');\n  const [gameName] = useGlobalState('gameName');\n  const [gameMeta] = useGlobalState('gameMeta');\n\n  const [username] = useGlobalState('username');\n  const [userAvatarId] = useGlobalState('userAvatarId');\n\n  const onLockGameAndStart = useCallback(async () => {\n    try {\n      setLoader('lock-game', true);\n      const response = await GAME_API.lockGame({\n        gameId,\n        gameName,\n      });\n      if (response.data.isLocked) {\n        message.success('Jogo trancado e iniciado com sucesso!');\n      }\n    } catch (e) {\n      notification.error({\n        message: 'Vixi, o aplicativo encontrou um erro ao tentar trancar e iniciar o jogo',\n        description: JSON.stringify(e.message),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n    } finally {\n      setLoader('lock-game', false);\n    }\n  }, [gameId, gameName, setLoader]);\n\n  const numPlayers = Object.keys(players).length;\n\n  return (\n    <div className=\"lobby-waiting\">\n      <Image\n        alt={info?.title}\n        src={`${PUBLIC_URL.BANNERS}game-image-${info?.gameName}.jpg`}\n        fallback={`${PUBLIC_URL.BANNERS}/game-image-em-breve.jpg`}\n      />\n\n      <h1 className=\"center\">{username || 'Fulano'},</h1>\n      <svg viewBox=\"0 0 100 100\" className=\"lobby-waiting__avatar\">\n        <use href={avatars + `#avatar-${userAvatarId}`}></use>\n      </svg>\n      <h3 className=\"center\">Aguarde os outros jogadores entrarem.</h3>\n      <AdminOnly className=\"lobby-waiting__lock-button\">\n        <Typography.Text className=\"center padding\">\n          Jogadores necessários: {numPlayers}/{gameMeta.min}\n        </Typography.Text>\n        <Button\n          type=\"primary\"\n          danger\n          onClick={onLockGameAndStart}\n          disabled={isLoading || numPlayers < gameMeta.min}\n        >\n          Trancar e Iniciar Jogo\n        </Button>\n      </AdminOnly>\n    </div>\n  );\n}\n\nexport default Waiting;\n","import React from 'react';\n\nfunction CloudBackground() {\n  return (\n    <div className=\"cloud-background\">\n      <div className=\"cloud-background__animation-1\">\n        <div className=\"cloud-background__cloud\"></div>\n      </div>\n\n      <div className=\"cloud-background__animation-2\">\n        <div className=\"cloud-background__cloud\"></div>\n      </div>\n\n      <div className=\"cloud-background__animation-3\">\n        <div className=\"cloud-background__cloud\"></div>\n      </div>\n\n      <div className=\"cloud-background__animation-4\">\n        <div className=\"cloud-background__cloud\"></div>\n      </div>\n\n      <div className=\"cloud-background__animation-5\">\n        <div className=\"cloud-background__cloud\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default CloudBackground;\n","import React from 'react';\n// Hooks\nimport useGlobalState from '../../hooks/useGlobalState';\n// Components\nimport { PhaseContainer } from '../shared';\nimport Join from './Join';\nimport Waiting from './Waiting';\nimport CloudBackground from './CloudBackground';\nimport { AvatarEntry } from '../avatars';\n\nfunction Lobby({ players, info }) {\n  const [username] = useGlobalState('username');\n  const [userAvatarId] = useGlobalState('userAvatarId');\n\n  return (\n    <PhaseContainer phase=\"LOBBY\" allowedPhase=\"LOBBY\" info={info}>\n      <div className=\"lobby__room\">\n        {Object.values(players).map((player, index) => (\n          <AvatarEntry\n            key={player.name}\n            id={player.avatarId}\n            name={player.name}\n            className={`lobby__seat lobby__seat--${index}`}\n            animate\n          />\n        ))}\n\n        {username && userAvatarId !== undefined ? (\n          <Waiting players={players} info={info} />\n        ) : (\n          <Join players={players} info={info} />\n        )}\n      </div>\n\n      <CloudBackground />\n    </PhaseContainer>\n  );\n}\n\nexport default Lobby;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Typography, Image, Carousel, Button } from 'antd';\n// Constants\nimport { PUBLIC_URL } from '../../utils/constants';\nimport { DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\n\nfunction RulesCarousel({ info, className, ruleClass }) {\n  const settings = {\n    prevArrow: (\n      <Button>\n        <DoubleLeftOutlined className=\"rules-carousel__nav rules-carousel__nav--left\" />\n      </Button>\n    ),\n    nextArrow: (\n      <Button>\n        <DoubleRightOutlined className=\"rules-carousel__nav rules-carousel__nav--right\" />\n      </Button>\n    ),\n  };\n\n  return (\n    <Carousel\n      className={clsx('rules-carousel', className)}\n      autoplay\n      autoplaySpeed={15000}\n      arrows\n      {...settings}\n    >\n      {info.rules.map((rule, index) => (\n        <div className={clsx('rules-carousel__rule', ruleClass)} key={rule}>\n          <span className=\"rules-carousel__rule-number\">{index + 1}</span>\n\n          <Image\n            className=\"rules-carousel__image\"\n            src={\n              index === 0\n                ? `${PUBLIC_URL.BANNERS}game-image-${info.gameName}.jpg`\n                : `${PUBLIC_URL.RULES}game-rule-${info.gameName}-${index}.jpg`\n            }\n            fallback={`${PUBLIC_URL.RULES}game-rule-not-found.jpg`}\n            alt={rule}\n          />\n          <Typography.Paragraph className=\"rules-carousel__rule-text\">{rule}</Typography.Paragraph>\n        </div>\n      ))}\n    </Carousel>\n  );\n}\n\nRulesCarousel.propTypes = {\n  info: PropTypes.shape({\n    gameName: PropTypes.string,\n    rules: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string,\n  }),\n  className: PropTypes.string,\n  ruleClass: PropTypes.string,\n};\n\nRulesCarousel.defaultProps = {\n  className: '',\n  ruleClass: '',\n};\n\nexport default RulesCarousel;\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\n\n// Design Resources\nimport { Button, Modal } from 'antd';\nimport { ReadOutlined } from '@ant-design/icons';\n// Components\nimport RulesCarousel from '../rules/RulesCarousel';\n\nfunction RulesModal({ gameInfo }) {\n  const [isVisible, setVisibility] = useState(false);\n\n  const onCloseModal = () => {\n    setVisibility(false);\n  };\n\n  return (\n    <Fragment>\n      <Button type=\"default\" onClick={() => setVisibility(true)} icon={<ReadOutlined />}>\n        Regras\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`Rules: ${gameInfo.title}`}\n          visible={isVisible}\n          onCancel={onCloseModal}\n          className=\"rules-modal\"\n          footer={[\n            <Button key=\"close\" onClick={onCloseModal}>\n              Fechar\n            </Button>,\n          ]}\n        >\n          <RulesCarousel info={gameInfo} />\n        </Modal>\n      )}\n    </Fragment>\n  );\n}\n\nRulesModal.propTypes = {\n  gameInfo: PropTypes.shape({\n    gameName: PropTypes.string,\n    rules: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string,\n  }),\n};\n\nexport default RulesModal;\n","import React, { Fragment, useMemo, useState } from 'react';\n// Design Resources\nimport { Affix, Avatar as AntAvatar, Badge, Button, Divider, Drawer } from 'antd';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n// Utils\nimport { AVATAR_DESCRIPTIONS_BR } from '../../utils/constants';\n// Components\nimport { Avatar } from '../avatars';\nimport RulesModal from '../modals/RulesModal';\n\nfunction SectionMe({ player, isTeamGame }) {\n  return (\n    <div className=\"game-info-drawer__section-me\">\n      <div className=\"game-info-drawer__label\">Você é{isTeamGame && ` do time ${player?.team ?? '?'}`}</div>\n      <div className=\"game-info-drawer__me\">\n        <Badge count={player.score} className=\"game-info-drawer__avatar-with-badge\">\n          <Avatar id={player.avatarId} shape=\"square\" />\n        </Badge>\n        {player.name}, {AVATAR_DESCRIPTIONS_BR[player.avatarId]}\n      </div>\n    </div>\n  );\n}\n\nfunction SectionMeta({ round, roundsToEndGame, groupScore, pointsToVictory, isTeamGame, teams }) {\n  return (\n    <ul className=\"game-info-drawer__meta\">\n      <li className=\"game-info-drawer__meta-item\">\n        <div className=\"game-info-drawer__label-inline\">Rodada:</div>\n        <AntAvatar className=\"game-info-drawer__round\" size=\"small\">\n          {round}\n        </AntAvatar>\n        {Boolean(roundsToEndGame) && !isNaN(round) && (\n          <Fragment>\n            <span className=\"game-info-drawer__inline-separator\">de</span>\n            <AntAvatar className=\"game-info-drawer__round\" size=\"small\">\n              {round + roundsToEndGame}\n            </AntAvatar>\n          </Fragment>\n        )}\n      </li>\n\n      {Boolean(groupScore) && (\n        <li className=\"game-info-drawer__meta-item\">\n          <div className=\"game-info-drawer__label-inline\">Pontos:</div>\n          <AntAvatar className=\"game-info-drawer__round\" size=\"default\" style={{ backgroundColor: 'gold' }}>\n            {groupScore ?? 0}\n          </AntAvatar>\n        </li>\n      )}\n\n      {Boolean(teams) && (\n        <li className=\"game-info-drawer__meta-item\">\n          <div className=\"game-info-drawer__label-inline\">Pontos A vs B:</div>\n          <AntAvatar className=\"game-info-drawer__round\" size=\"default\">\n            {teams?.A?.score ?? '?'}\n          </AntAvatar>\n          <span className=\"game-info-drawer__inline-separator\">vs</span>\n          <AntAvatar className=\"game-info-drawer__round\" size=\"default\">\n            {teams?.B?.score ?? '?'}\n          </AntAvatar>\n        </li>\n      )}\n\n      {Boolean(pointsToVictory) && (\n        <div>\n          <div className=\"game-info-drawer__label-inline\">\n            Pontos restantes para {isTeamGame ? 'um time' : 'alguém'} ganhar:\n          </div>\n          <AntAvatar className=\"game-info-drawer__round\" size=\"small\">\n            {pointsToVictory}\n          </AntAvatar>\n        </div>\n      )}\n    </ul>\n  );\n}\n\nfunction SectionTeams({ players, teams }) {\n  return (\n    <div className=\"game-info-drawer__team-players\">\n      {Object.values(teams).map((team) => (\n        <SectionTeamPlayers key={team.name} team={team} players={players} />\n      ))}\n    </div>\n  );\n}\n\nfunction SectionTeamPlayers({ team, players }) {\n  const sortedPlayers = useMemo(\n    () =>\n      team.members\n        .map((memberName) => {\n          return players[memberName];\n        })\n        .sort((a, b) => (a.name > b.name ? 1 : -1)),\n    [players, team]\n  );\n\n  return (\n    <div className=\"game-info-drawer__team\" key={team.name}>\n      <h3>Team {team.name}</h3>\n      <ul>\n        {sortedPlayers.map((player, index) => {\n          return (\n            <div className=\"game-info-drawer__ranked-player\" key={`ranked-${player.name}`}>\n              <Avatar id={player.avatarId} shape=\"square\" className=\"game-info-drawer__avatar-with-badge\" />\n              {player.name}, {AVATAR_DESCRIPTIONS_BR[player.avatarId]}\n            </div>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nfunction SectionRankedPlayers({ players }) {\n  const rankedPlayers = useMemo(() => Object.values(players).sort((a, b) => (a.score < b.score ? 1 : -1)), [\n    players,\n  ]);\n  return (\n    <ul>\n      {rankedPlayers.map((player, index) => {\n        return (\n          <div className=\"game-info-drawer__ranked-player\" key={`ranked-${player.name}`}>\n            {index + 1}.{' '}\n            <Badge count={player.score} className=\"game-info-drawer__avatar-with-badge\">\n              <Avatar id={player.avatarId} shape=\"square\" />\n            </Badge>\n            {player.name}, {AVATAR_DESCRIPTIONS_BR[player.avatarId]}\n          </div>\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction GameInfoDrawer({ players, state, info, username }) {\n  const [visible, setVisible] = useState(false);\n\n  if (state.phase === 'LOBBY') {\n    return <></>;\n  }\n\n  const showDrawer = () => {\n    setVisible(true);\n  };\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  const completeMe = players?.[username] ?? {};\n  const isTeamGame = Boolean(completeMe?.team) && Boolean(state.teams);\n\n  return (\n    <Fragment>\n      <Affix offsetTop={10} className=\"game-info-drawer__affix-button\">\n        <Button\n          type=\"primary\"\n          shape=\"circle\"\n          size=\"large\"\n          className=\"game-info-drawer__button\"\n          onClick={showDrawer}\n          icon={<InfoCircleOutlined />}\n        />\n      </Affix>\n\n      <Drawer title={info.title} placement=\"right\" closable={false} onClose={onClose} visible={visible}>\n        {completeMe && <SectionMe player={completeMe} isTeamGame={isTeamGame} />}\n\n        <Divider />\n\n        <RulesModal gameInfo={info} />\n\n        <Divider />\n\n        <SectionMeta\n          round={state?.round || '?'}\n          roundsToEndGame={state?.roundsToEndGame}\n          groupScore={state?.groupScore}\n          pointsToVictory={state?.pointsToVictory}\n          isTeamGame={isTeamGame}\n          teams={state?.teams}\n        />\n\n        <Divider />\n\n        {isTeamGame ? (\n          <SectionTeams players={players} teams={state?.teams} />\n        ) : (\n          <SectionRankedPlayers players={players} />\n        )}\n      </Drawer>\n    </Fragment>\n  );\n}\n\nexport default GameInfoDrawer;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useGameState, useGlobalState, useGamePlayers } from '../../hooks';\n// Utils\nimport gameList from '../../resources/games.json';\n// Components\nimport Lobby from '../lobby/Lobby';\nimport GameInfoDrawer from '../shared/GameInfoDrawer';\n\nexport function Session({ gameId, gameCollection, getActiveComponent }) {\n  const players = useGamePlayers(gameId, gameCollection);\n  const state = useGameState(gameId, gameCollection);\n  const [username] = useGlobalState('username');\n  const [info, setInfo] = useState({});\n\n  // Update game description as the gameId comes in\n  useEffect(() => {\n    setInfo(gameId?.[0] ? gameList[gameId[0]] : {});\n  }, [gameId]);\n\n  if (process.env.NODE_ENV === 'development') {\n    console.table(players);\n    console.log({ state });\n  }\n\n  if (!username) {\n    return <Lobby players={players} state={state} info={info} />;\n  }\n\n  const ActiveComponent = getActiveComponent(state.phase);\n\n  return (\n    <Fragment>\n      <GameInfoDrawer players={players} state={state} info={info} username={username} />\n      <ActiveComponent players={players} state={state} info={info} />\n    </Fragment>\n  );\n}\n\nSession.propTypes = {\n  gameId: PropTypes.string.isRequired,\n  gameCollection: PropTypes.string.isRequired,\n  getActiveComponent: PropTypes.func.isRequired,\n};\n","import { notification } from 'antd';\nimport { useDocument } from 'react-firebase-hooks/firestore';\n// Services\nimport { firestore } from '../services/firebase';\n\nexport function useGamePlayers(gameId, gameName) {\n  const [snapshot, loading, error] = useDocument(firestore.doc(`${gameName}/${gameId}/session/players`), {\n    snapshotListenOptions: { includeMetadataChanges: true },\n  });\n\n  if (error) {\n    notification.error({\n      message: 'Applicativo encontrou um erro ao tentar atualizar os jogadores',\n      description: JSON.stringify(error),\n      placement: 'bottomLeft',\n    });\n    console.error(error);\n  }\n\n  if (loading) {\n    console.log('%cRefreshing players...', 'color:orange');\n  }\n\n  return snapshot?.data() ?? {};\n}\n","import { notification } from 'antd';\nimport { useDocument } from 'react-firebase-hooks/firestore';\n// Services\nimport { firestore } from '../services/firebase';\n\nexport function useGameState(gameId, gameName) {\n  const [snapshot, loading, error] = useDocument(firestore.doc(`${gameName}/${gameId}/session/state`), {\n    snapshotListenOptions: { includeMetadataChanges: true },\n  });\n\n  if (error) {\n    notification.error({\n      message: 'Aplicativo encontrou um erro ao tentar atualizar o estado do jogo',\n      description: JSON.stringify(error),\n      placement: 'bottomLeft',\n    });\n    console.error(error);\n  }\n\n  if (loading) {\n    console.log('%cRefreshing state...', 'color:tomato');\n  }\n\n  return snapshot?.data() ?? {};\n}\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { StarFilled } from '@ant-design/icons';\n\nexport const StarPoints = memo(function ({ quantity, keyPrefix, className = '' }) {\n  if (!quantity || quantity < 1) {\n    return <span></span>;\n  }\n  const starsArray = Array.from({ length: quantity }, (_, i) => <StarFilled key={`${keyPrefix}-${i}`} />);\n  return (\n    <span className={clsx('star-points', className)}>\n      + <span className=\"star-points__stars\">{starsArray}</span> ponto{quantity > 1 ? 's' : ''}\n    </span>\n  );\n});\n\nStarPoints.propTypes = {\n  quantity: PropTypes.number,\n  className: PropTypes.string,\n  keyPrefix: PropTypes.string.isRequired,\n};\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Components\nimport Loading from '../loaders/Loading';\n\nexport function StepSwitcher({ children, step, conditions }) {\n  if (!children[step]) {\n    return <Loading />;\n  }\n\n  return (conditions?.[step] ?? true) && <Fragment>{children[step]}</Fragment>;\n}\n\nStepSwitcher.propTypes = {\n  children: PropTypes.any.isRequired,\n  step: PropTypes.number.isRequired,\n  conditions: PropTypes.arrayOf(PropTypes.bool),\n};\n\nexport function Step({ children, fullWidth = false, className }) {\n  return <div className={clsx('step', fullWidth && 'step--full-width', className)}>{children}</div>;\n}\n\nStep.propTypes = {\n  children: PropTypes.any.isRequired,\n  fullWidth: PropTypes.bool,\n  className: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Button } from 'antd';\n// Hook and Utils\nimport { useTimer } from 'react-timer-hook';\nimport { inNSeconds } from '../../utils';\n\nexport function TimedButton({ duration, label, onExpire, showTimer, ...props }) {\n  const { seconds } = useTimer({\n    expiryTimestamp: inNSeconds(duration),\n    autoStart: true,\n    onExpire: showTimer ? onExpire : undefined,\n  });\n\n  const timeClass = 'timed-button__time';\n\n  return (\n    <Button {...props}>\n      {label} {showTimer && <span className={clsx(timeClass, `${timeClass}--${props.type}`)}>{seconds}</span>}\n    </Button>\n  );\n}\n\nTimedButton.propTypes = {\n  duration: PropTypes.number,\n  label: PropTypes.any.isRequired,\n  onExpire: PropTypes.func.isRequired,\n  showTimer: PropTypes.bool,\n};\n\nTimedButton.defaultProps = {\n  duration: 10,\n  showTimer: true,\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Typography } from 'antd';\nimport clsx from 'clsx';\n\nexport const Title = memo(function ({ children, white, icon, className, level }) {\n  return (\n    <Typography.Title level={level} className={clsx('title', white && 'title--white', className)}>\n      {Boolean(icon) && icon}\n      {children}\n    </Typography.Title>\n  );\n});\n\nTitle.propTypes = {\n  children: PropTypes.any.isRequired,\n  white: PropTypes.bool,\n  icon: PropTypes.element,\n  className: PropTypes.string,\n  level: PropTypes.number,\n};\n\nTitle.defaultProps = {\n  className: '',\n  level: 1,\n};\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nexport function View({ visibleIf = false, children }) {\n  return visibleIf && <Fragment>{children}</Fragment>;\n}\n\nView.propTypes = {\n  children: PropTypes.any.isRequired,\n  visibleIf: PropTypes.bool,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Spin } from 'antd';\n// Components\nimport { Instruction, ReadyPlayersBar, Title } from './index';\n\nexport function WaitingRoom({ players, title, instruction, children }) {\n  return (\n    <div className=\"waiting-room\">\n      <Title>{title}</Title>\n      <Spin />\n      <Instruction>{instruction}</Instruction>\n      {children}\n      <ReadyPlayersBar players={players} showNames />\n    </div>\n  );\n}\n\nWaitingRoom.propTypes = {\n  players: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n  instruction: PropTypes.string.isRequired,\n  children: PropTypes.any,\n};\n\nexport default WaitingRoom;\n","import React, { Fragment, useCallback, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Image, Modal, message, Button, notification } from 'antd';\n// Adapters\nimport { GAME_API } from '../../adapters';\n// Hooks\nimport { useLoading } from '../../hooks';\n// Constants\nimport { PUBLIC_URL } from '../../utils/constants';\n// Components\nimport Loading from '../loaders/Loading';\nimport { Instruction, Title } from '../shared';\n\nfunction CreateGameModal({ gameInfo }) {\n  const history = useHistory();\n  const [, setLoader] = useLoading();\n  const [isVisible, setVisibility] = useState(false);\n  const [isLoading, setLoading] = useState(true);\n  const [gameId, setGameId] = useState(null);\n\n  const onCloseModal = useCallback(() => {\n    setVisibility(false);\n  }, []);\n\n  useEffect(() => {\n    async function createGame() {\n      try {\n        setLoader('create', true);\n        const response = await GAME_API.initializeGame({ gameCode: gameInfo.gameCode });\n        if (response.data.gameId) {\n          setGameId(response.data.gameId);\n        }\n      } catch (e) {\n        notification.error({\n          message: 'Applicativo encontrou um erro ao tentar criar o jogo',\n          description: JSON.stringify(e.message),\n          placement: 'bottomLeft',\n        });\n        console.error(e);\n        setVisibility(false);\n      } finally {\n        setLoading(false);\n        setLoader('create', false);\n      }\n    }\n\n    if (isVisible) {\n      createGame();\n    }\n  }, [isVisible]); // eslint-disable-line\n\n  const onConfirmGame = () => {\n    if (gameId) {\n      history.push(`/${gameId}`);\n    } else {\n      message.info('Péra! O jogo ainda não foi inicializado.');\n    }\n  };\n\n  return (\n    <Fragment>\n      <Button type=\"primary\" onClick={() => setVisibility(true)}>\n        Criar Jogo\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`Criando jogo: ${gameInfo.title}`}\n          visible={isVisible}\n          onCancel={onCloseModal}\n          onOk={onConfirmGame}\n        >\n          <Fragment>\n            <Image\n              alt={gameInfo.title}\n              src={`${PUBLIC_URL.BANNERS}game-image-${gameInfo.gameName}.jpg`}\n              fallback={`${PUBLIC_URL.BANNERS}/game-image-em-breve.jpg`}\n            />\n\n            {isLoading ? (\n              <Fragment>\n                <Instruction>O jogo está sendo criado...</Instruction>\n                <Loading message=\"Gerando...\" margin />\n              </Fragment>\n            ) : (\n              <div>\n                <Title className=\"center\">Jogo inicializado: {gameId}</Title>\n                <Instruction>Pressione OK para ser redirecionadx à página do jogo.</Instruction>\n              </div>\n            )}\n          </Fragment>\n        </Modal>\n      )}\n    </Fragment>\n  );\n}\n\nCreateGameModal.propTypes = {\n  gameInfo: PropTypes.shape({\n    gameCode: PropTypes.string.isRequired,\n    gameName: PropTypes.string,\n    title: PropTypes.string,\n  }),\n};\n\nexport default CreateGameModal;\n","import React from 'react';\n\n// Design Resources\nimport { Typography, Layout, Space, Card, Image, Divider, Tag } from 'antd';\n// Utils\nimport gameList from '../resources/games.json';\nimport { PUBLIC_URL, TAG_DICT } from '../utils/constants';\n// Components\nimport CreateGameModal from './modals/CreateGameModal';\nimport RulesModal from './modals/RulesModal';\nimport { orderBy } from '../utils';\n\nfunction Admin() {\n  const sortedGameList = orderBy(Object.values(gameList), ['available', 'title'], ['desc', 'asc']);\n\n  return (\n    <Layout.Content className=\"container\">\n      <Typography.Title>Admin Hub</Typography.Title>\n      <Typography.Paragraph>Select the game you want to start</Typography.Paragraph>\n\n      <Space size={[8, 16]} wrap align=\"start\">\n        {sortedGameList.map((game) => (\n          <Card\n            key={game.gameName}\n            hoverable\n            style={{ width: 240 }}\n            cover={\n              <Image\n                alt={game.title}\n                src={`${PUBLIC_URL.BANNERS}game-image-${game.gameName}.jpg`}\n                fallback={`${PUBLIC_URL.BANNERS}/game-image-em-breve.jpg`}\n              />\n            }\n          >\n            <Card.Meta title={game.title} description={game.summary} />\n            <Divider />\n            <Card.Meta description={`Para ${game.min}-${game.max} jogadores`} />\n            <Card.Meta description={`Recomendado jogar com ${game.recommended}`} />\n            <Divider />\n            <Space wrap size={[1, 6]}>\n              {game.tags.map((tag) => (\n                <Tag key={`${game.gameCode}-${tag}`} color={TAG_DICT[tag]?.color}>\n                  {TAG_DICT[tag]?.label}\n                </Tag>\n              ))}\n            </Space>\n            <Divider />\n            <Space>\n              <RulesModal gameInfo={game} />\n              {Boolean(game.available) && <CreateGameModal gameInfo={game} />}\n            </Space>\n          </Card>\n        ))}\n      </Space>\n    </Layout.Content>\n  );\n}\n\nexport default Admin;\n","import { auth } from '../services/firebase';\n\n/**\n * Sign up user via email through firebase auth\n * @param {string} email\n * @param {string} password\n * @returns {Promise}\n */\nexport function signUp(email, password) {\n  return auth.createUserWithEmailAndPassword(email, password);\n}\n\n/**\n * Sign in user via email through firebase auth\n * @param {string} email\n * @param {string} password\n * @returns {Promise}\n */\nexport function signIn(email, password) {\n  return auth.signInWithEmailAndPassword(email, password);\n}\n\n/**\n * Sign out current user\n * @returns {Promise}\n */\nexport async function signOut() {\n  return auth.signOut().then(() => {\n    alert(`You've been signed out`);\n  });\n}\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\n// Design Resources\nimport { Layout, Button, Form, Input, Alert, Image } from 'antd';\n// API\nimport { signIn } from '../adapters/auth';\n// State\nimport { useGlobalState } from '../hooks';\n// Image\nimport logo from '../images/tarde-divertida-logo.svg';\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 0, span: 8 },\n};\n\nfunction Login() {\n  const history = useHistory();\n  const [, setIsAuthenticated] = useGlobalState('isAuthenticated');\n\n  const [error, setError] = useState(null);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const onValuesChange = (data) => {\n    if (data.email) {\n      setEmail(data.email.trim());\n    }\n    if (data.password) {\n      setPassword(data.password.trim());\n    }\n  };\n\n  const onHandleSubmit = async () => {\n    setError('');\n    try {\n      const response = await signIn(email, password);\n      if (response?.user?.uid) {\n        setIsAuthenticated(true);\n        history.push('/admin');\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <Layout.Content className=\"login\">\n      <div className=\"login__content\">\n        <div className=\"login__logo\">\n          <Image src={logo} preview={false} />\n        </div>\n\n        {Boolean(error) && (\n          <Alert message=\"Error\" description={error} type=\"error\" showIcon className=\"login__error-alert\" />\n        )}\n        <Form\n          {...layout}\n          layout=\"horizontal\"\n          name=\"sign-in\"\n          onValuesChange={onValuesChange}\n          className=\"login__form\"\n          autoComplete=\"off\"\n        >\n          <Form.Item {...tailLayout} label=\"E-mail\" name=\"email\" className=\"login__form-item\">\n            <Input type=\"email\" />\n          </Form.Item>\n          <Form.Item {...tailLayout} label=\"Password\" name=\"password\" className=\"login__form-item\">\n            <Input type=\"password\" />\n          </Form.Item>\n          <div className=\"login__form-action\">\n            <Button type=\"primary\" onClick={onHandleSubmit}>\n              Login\n            </Button>\n          </div>\n        </Form>\n      </div>\n    </Layout.Content>\n  );\n}\n\nexport default Login;\n","import React from 'react';\n// Design Resources\nimport { Button, Layout, Space, Typography } from 'antd';\nimport { CheckCircleFilled, MehFilled, RobotFilled, SmileFilled } from '@ant-design/icons';\n// State\nimport { GAME_API } from '../../adapters';\nimport { useLoading, useIsUserReady, useAPICall } from '../../hooks';\n// Components\nimport RulesCarousel from './RulesCarousel';\nimport LoadingPage from '../loaders/LoadingPage';\nimport { ReadyPlayersBar } from '../shared';\n\nfunction Rules({ players, info }) {\n  const [isLoading] = useLoading();\n  const isUserReady = useIsUserReady(players);\n\n  const onBeReady = useAPICall({\n    apiFunction: GAME_API.makeMeReady,\n    actionName: 'be-ready',\n    successMessage: 'Pronto! Aguarde os outros jogadores estarem prontos',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar continuar',\n  });\n\n  const onBeReadyQue = useAPICall({\n    apiFunction: GAME_API.makeMeReady,\n    actionName: 'be-ready',\n    successMessage: 'Vixi, se fudeu então, pq o jogo vai começar!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar continuar',\n  });\n\n  if (!info?.gameName) {\n    return <LoadingPage />;\n  }\n\n  return (\n    <Layout.Content className=\"rules\">\n      <Typography.Title className=\"center\">Regras do Jogo</Typography.Title>\n\n      <RulesCarousel info={info} className=\"rules__carousel\" ruleClass=\"rules__rule\" />\n\n      <Space className=\"rules__actions\">\n        <Button\n          type=\"primary\"\n          icon={isUserReady ? <CheckCircleFilled /> : <SmileFilled />}\n          disabled={isLoading || isUserReady}\n          onClick={() => onBeReady({})}\n        >\n          Entendi tudo e estou pronto para jogar!\n        </Button>\n        <Button\n          icon={isUserReady ? <CheckCircleFilled /> : <MehFilled />}\n          disabled={isLoading || isUserReady}\n          onClick={() => onBeReady({})}\n        >\n          Não entendi nada, mas vamos lá\n        </Button>\n        <Button\n          type=\"primary\"\n          danger\n          icon={isUserReady ? <CheckCircleFilled /> : <RobotFilled />}\n          disabled={isLoading || isUserReady}\n          onClick={() => onBeReadyQue({})}\n        >\n          Que?\n        </Button>\n      </Space>\n      <ReadyPlayersBar players={players} showNames />\n    </Layout.Content>\n  );\n}\n\nexport default Rules;\n","export default __webpack_public_path__ + \"static/media/arte-ruim-timer.1f16745a.mp3\";","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { getColorFromLetter } from '../../utils';\n\nfunction Card({\n  children,\n  header,\n  footer,\n  color,\n  size,\n  randomColor,\n  className,\n  headerClassName,\n  footerClassName,\n}) {\n  const baseClass = 'card';\n\n  const bgColor = randomColor ? getColorFromLetter(typeof children === 'string' ? children[0] : 'X') : color;\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, className)}>\n      <span className={clsx(`${baseClass}__header`, `color-background--${bgColor}`, headerClassName)}>\n        {header}\n      </span>\n      <span className={`${baseClass}__text`}>{children}</span>\n      {footer && <span className={clsx(`${baseClass}__footer`, footerClassName)}>{footer}</span>}\n    </div>\n  );\n}\n\nCard.propTypes = {\n  children: PropTypes.any.isRequired,\n  header: PropTypes.string,\n  footer: PropTypes.string,\n  color: PropTypes.string,\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  randomColor: PropTypes.bool,\n  className: PropTypes.string,\n  headerClassName: PropTypes.string,\n  footerClassName: PropTypes.string,\n};\n\nCard.defaultProps = {\n  header: 'Carta',\n  color: 'none',\n  size: 'medium',\n  randomColor: false,\n  className: '',\n  headerClassName: '',\n  footerClassName: '',\n};\n\nexport default memo(Card);\n","import React, { useRef } from 'react';\nimport { Stage, Layer, Line } from 'react-konva';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n\nconst DrawingCanvas = ({ lines, setLines, className = '' }) => {\n  const isDrawing = useRef(false);\n\n  const handleMouseDown = (e) => {\n    isDrawing.current = true;\n    const pos = e.target.getStage().getPointerPosition();\n    setLines([...lines, [pos.x, pos.y]]);\n    // return false;\n  };\n\n  const handleMouseMove = (e) => {\n    // no drawing - skipping\n    if (!isDrawing.current) {\n      return;\n    }\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    let lastLine = lines[lines.length - 1];\n    // add point\n    lastLine = lastLine.concat([point.x, point.y]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLine);\n    setLines(lines.concat());\n  };\n\n  const handleMouseUp = () => {\n    isDrawing.current = false;\n  };\n\n  return (\n    <Stage\n      width={500}\n      height={500}\n      onMouseDown={handleMouseDown}\n      onMousemove={handleMouseMove}\n      onMouseup={handleMouseUp}\n      onTouchStart={handleMouseDown}\n      onTouchMove={handleMouseMove}\n      onTouchEnd={handleMouseUp}\n      className={clsx('a-drawing-canvas', className)}\n    >\n      <Layer>\n        {lines.map((line, i) => (\n          <Line\n            key={i}\n            points={line}\n            stroke=\"#222222\"\n            strokeWidth={5}\n            tension={0.5}\n            lineCap=\"round\"\n            globalCompositeOperation=\"source-over\"\n          />\n        ))}\n      </Layer>\n    </Stage>\n  );\n};\n\nDrawingCanvas.propTypes = {\n  lines: PropTypes.array.isRequired,\n  setLines: PropTypes.func.isRequired,\n  className: PropTypes.string,\n};\n\nexport default DrawingCanvas;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTimer } from 'react-timer-hook';\n// Utils\nimport { inNSeconds } from '../../../utils';\n// Components\nimport { Step } from '../../shared';\nimport Card from '../../cards/Card';\nimport DrawingCanvas from './DrawingCanvas';\n\nfunction DrawPhaseDrawStep({ secretCard, onSubmitDrawing }) {\n  const [lines, setLines] = useState([]);\n\n  const { seconds } = useTimer({\n    expiryTimestamp: inNSeconds(11),\n    autoStart: true,\n    onExpire: () =>\n      onSubmitDrawing({\n        drawing: JSON.stringify(lines),\n        cardId: secretCard.id,\n      }),\n  });\n\n  return (\n    <Step>\n      <Card\n        size=\"large\"\n        header=\"Desenhe\"\n        footer={Array(secretCard?.level).fill('•').join('')}\n        className=\"a-draw-step__card\"\n        color=\"yellow\"\n      >\n        {secretCard?.text}\n        <span className=\"a-draw-step__timer\">{seconds - 1}</span>\n      </Card>\n      <DrawingCanvas lines={lines} setLines={setLines} />\n    </Step>\n  );\n}\n\nDrawPhaseDrawStep.propTypes = {\n  secretCard: PropTypes.shape({\n    text: PropTypes.string,\n    level: PropTypes.number,\n  }).isRequired,\n  onSubmitDrawing: PropTypes.func.isRequired,\n};\n\nexport default DrawPhaseDrawStep;\n","import React, { useEffect, useState } from 'react';\nimport useSound from 'use-sound';\n// State & Hooks\nimport { useGlobalState, useIsUserReady, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { ARTE_RUIM_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\nimport arteRuimTimer from '../../../sounds/arte-ruim-timer.mp3';\n// Components\nimport {\n  AdminForceNextPhase,\n  Instruction,\n  PhaseContainer,\n  RoundAnnouncement,\n  Step,\n  StepSwitcher,\n  WaitingRoom,\n} from '../../shared';\nimport DrawPhaseDrawStep from './DrawPhaseDrawStep';\n\nfunction DrawPhase({ players, state, info }) {\n  const isUserReady = useIsUserReady(players, state);\n  const [username] = useGlobalState('username');\n  const [step, setStep] = useState(0);\n  const [secretCard, setSecretCard] = useState({});\n  const [play] = useSound(arteRuimTimer, { volume: 0.4 });\n\n  useEffect(() => {\n    setSecretCard(players[username].currentCard ?? {});\n  }, [players, username]);\n\n  const onSubmitDrawing = useAPICall({\n    apiFunction: ARTE_RUIM_API.submitDrawing,\n    actionName: 'submit-drawing',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: 'Acabou o tempo! Aguarde enquanto os outros participantes desenham',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar o desenho',\n  });\n\n  const onStartDrawing = () => {\n    play();\n    setStep(1);\n  };\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.ARTE_RUIM.DRAW} className=\"a-phase\">\n      <StepSwitcher step={step} conditions={[!isUserReady, !isUserReady]}>\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state?.round}\n          onPressButton={onStartDrawing}\n          buttonText=\"Um dó, lá, si... vamos ir... já!\"\n        >\n          <Instruction white>\n            Você terá 10 segundos para ler a sua carta e desenhá-la.\n            <br />\n            Aperte o botão quando estiver pronto! Não vale usar números e letras.\n            <br />\n            Fique esperto porque o tempo começa assim que você apertar.\n          </Instruction>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <DrawPhaseDrawStep secretCard={secretCard} onSubmitDrawing={onSubmitDrawing} />\n\n        {/* Step 2 */}\n        <Step fullWidth>\n          <WaitingRoom\n            players={players}\n            title=\"Pronto!\"\n            instruction=\"Vamos aguardar enquanto os outros jogadores terminam seus desenhos!\"\n          />\n          <AdminForceNextPhase />\n        </Step>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default DrawPhase;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nconst getPathFromKonvaLines = (lines) => {\n  const result = lines.map((lineArr) => {\n    let path = '';\n    for (let x = 0, y = 1; y < lineArr.length; x += 2, y += 2) {\n      if (lineArr[x + 2] && lineArr[y + 2]) {\n        path += `M${lineArr[x]},${lineArr[y]} L${lineArr[x + 2]},${lineArr[y + 2]}`;\n      }\n    }\n\n    return path;\n  });\n\n  return result;\n};\n\nfunction CanvasSVG({ drawing = '', className = '', size = 250 }) {\n  const konvaLines = JSON.parse(drawing);\n  const paths = getPathFromKonvaLines(konvaLines);\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 500 500\"\n      overflow=\"hidden\"\n      className={className}\n      style={{ width: `${size}px` }}\n    >\n      <defs />\n      {paths.map((path, index) => (\n        <path\n          key={`${drawing}-${index}`}\n          d={path}\n          fill=\"none\"\n          stroke=\"#000\"\n          strokeWidth=\"4\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit=\"10\"\n        />\n      ))}\n    </svg>\n  );\n}\n\nCanvasSVG.propTypes = {\n  drawing: PropTypes.string.isRequired,\n  className: PropTypes.string,\n};\n\nexport default memo(CanvasSVG);\n","import React from 'react';\nimport { getColorFromLetter } from '../../../utils';\n\nfunction Ribbon({ cardEntryId }) {\n  const [, , letter] = cardEntryId.split('-');\n  return (\n    <div className=\"a-ribbon\">\n      <div\n        className={`a-ribbon__content a-ribbon__content--${letter} color-background--${getColorFromLetter(\n          letter\n        )}`}\n      >\n        {letter}\n      </div>\n    </div>\n  );\n}\n\nexport default Ribbon;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Components\nimport CanvasSVG from './CanvasSVG';\nimport Ribbon from './Ribbon';\n\nfunction EvaluationAllDrawings({ drawings, activeItem, onActivateItem, votes, canvasSize }) {\n  const liButtonBaseClass = 'a-evaluation-all-drawings__li-drawing-button';\n\n  return (\n    <ul className=\"a-evaluation-all-drawings\">\n      {drawings?.map((drawingEntry) => {\n        const canvasEntryId = `drawing-${drawingEntry.id}`;\n        const isActive = activeItem === canvasEntryId;\n        return (\n          <li\n            key={canvasEntryId}\n            className={clsx(liButtonBaseClass, isActive && `${liButtonBaseClass}--active`)}\n            onClick={() => onActivateItem(canvasEntryId)}\n          >\n            {votes?.[canvasEntryId] && <Ribbon cardEntryId={votes[canvasEntryId]} />}\n            <CanvasSVG\n              drawing={drawingEntry.drawing}\n              className=\"a-evaluation-all-drawings__drawing\"\n              size={canvasSize}\n            />\n            <span className=\"a-evaluation-all-drawings__artist\">{drawingEntry.playerName}</span>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nEvaluationAllDrawings.propTypes = {\n  activeItem: PropTypes.string,\n  drawings: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      drawing: PropTypes.string,\n    })\n  ),\n  onActiveItem: PropTypes.func,\n  votes: PropTypes.object,\n  canvasSize: PropTypes.number,\n};\n\nexport default EvaluationAllDrawings;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { WarningOutlined } from '@ant-design/icons';\nimport { getColorFromLetter } from '../../utils';\n// Components\nimport Card from './Card';\n\nfunction ArteRuimCard({ text, level, header = 'X' }) {\n  return (\n    <Card\n      color={getColorFromLetter(header)}\n      header={header}\n      size=\"medium\"\n      footer={Array(level).fill('•').join('')}\n    >\n      {text ?? <WarningOutlined />}\n    </Card>\n  );\n}\n\nArteRuimCard.propTypes = {\n  text: PropTypes.string.isRequired,\n  header: PropTypes.string,\n  level: PropTypes.number,\n};\n\nexport default memo(ArteRuimCard);\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Utils\nimport { LETTERS } from '../../../utils/constants';\n// Components\nimport Card from '../../cards/ArteRuimCard';\n\nfunction EvaluationAllCards({ cards, activeItem, onActivateItem, votes }) {\n  const liButtonBaseClass = 'a-evaluation-all-cards__li-card-button';\n\n  return (\n    <ul className=\"a-evaluation-all-cards\">\n      {cards.map((cardEntry, index) => {\n        const letter = LETTERS[index];\n        const cardEntryId = `card-${cardEntry.id}-${letter}`;\n        const isActive = activeItem === cardEntryId;\n        const isUsed = Object.values(votes).includes(cardEntryId);\n\n        return (\n          <li\n            role=\"button\"\n            key={cardEntryId}\n            className={clsx(\n              liButtonBaseClass,\n              isActive && `${liButtonBaseClass}--active`,\n              isUsed && `${liButtonBaseClass}--used`\n            )}\n            onClick={() => onActivateItem(cardEntryId)}\n          >\n            <Card text={cardEntry.text} level={cardEntry.level} header={letter} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nEvaluationAllCards.propTypes = {\n  activeItem: PropTypes.string,\n  cards: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n    })\n  ),\n  onActiveItem: PropTypes.func,\n  votes: PropTypes.object,\n};\n\nexport default EvaluationAllCards;\n","import React, { memo } from 'react';\n// Design Resources\nimport { Slider } from 'antd';\n// State & Hooks\nimport { useGlobalState } from '../../../hooks';\n\nconst CanvasResizer = () => {\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n\n  return (\n    <div className=\"a-canvas-resizer\">\n      <div className=\"a-canvas-resizer__label\">Tamanho das Images</div>\n      <Slider\n        className=\"a-canvas-resizer__slider\"\n        defaultValue={canvasSize}\n        min={100}\n        max={500}\n        step={50}\n        onChange={setCanvasSize}\n      />\n    </div>\n  );\n};\n\nexport default memo(CanvasResizer);\n","import React, { useCallback, useEffect, useState } from 'react';\n// Design Resources\nimport { Button } from 'antd';\nimport { CloudUploadOutlined } from '@ant-design/icons';\n// Hooks\nimport { useIsUserReady, useGlobalState, useAPICall } from '../../../hooks';\n// Utils\nimport { ARTE_RUIM_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport EvaluationAllDrawings from './EvaluationAllDrawings';\nimport EvaluationAllCards from './EvaluationAllCards';\nimport CanvasResizer from './CanvasResizer';\nimport {\n  AdminForceNextPhase,\n  ButtonContainer,\n  Instruction,\n  PhaseContainer,\n  StepSwitcher,\n  Step,\n  Title,\n  WaitingRoom,\n} from '../../shared';\n\nfunction prepareVotes(votes) {\n  return Object.entries(votes).reduce((acc, [drawingEntryId, cardEntryId]) => {\n    const [, drawingId] = drawingEntryId.split('-');\n    const [, cardId] = cardEntryId.split('-');\n    acc[drawingId] = cardId;\n    return acc;\n  }, {});\n}\n\nfunction EvaluationPhase({ players, state, info }) {\n  const isUserReady = useIsUserReady(players, state);\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n  const [cachedCanvasSize] = useGlobalState('cachedCanvasSize');\n  const [step, setStep] = useState(0);\n  const [votes, setVotes] = useState({});\n  const [activeItem, setActiveItem] = useState(null);\n\n  const onSubmitVoting = useAPICall({\n    apiFunction: ARTE_RUIM_API.submitVoting,\n    actionName: 'submit-drawing',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage: 'Avaliação enviada! Agora aguarde os outros jogadores',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar sua avaliação',\n  });\n\n  useEffect(() => {\n    setCanvasSize(cachedCanvasSize);\n  }, []); // eslint-disable-line\n\n  const onActivateItem = useCallback(\n    (entryId) => {\n      const [type] = entryId.split('-');\n      if (!activeItem || activeItem.startsWith(type)) {\n        setActiveItem(entryId);\n      } else {\n        if (type === 'card') {\n          setVotes((prevVotes) => {\n            return {\n              ...prevVotes,\n              [activeItem]: entryId,\n            };\n          });\n        } else {\n          setVotes((prevVotes) => {\n            return {\n              ...prevVotes,\n              [entryId]: activeItem,\n            };\n          });\n        }\n        setActiveItem(null);\n      }\n    },\n    [activeItem]\n  );\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ARTE_RUIM.EVALUATION}\n      className=\"a-evaluation-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady]}>\n        {/*Step 0 */}\n        <Step className=\"a-evaluation-step\">\n          <CanvasResizer />\n          <Title>Adivinhação</Title>\n          <Instruction>\n            Encontre os pares de desenho e carta clicando em uma carta ou desenho e em seguida clicando em seu\n            par.\n            <br />\n            Uma bandeirinha aparecerá no topo de cada desenho com a cor e letra da carta que você selecionou.\n            <br />\n            Quando encontrar todos os pares, envie sua avaliação!\n          </Instruction>\n\n          <EvaluationAllDrawings\n            drawings={state?.drawings ?? []}\n            activeItem={activeItem}\n            onActivateItem={onActivateItem}\n            votes={votes}\n            canvasSize={canvasSize}\n          />\n\n          <EvaluationAllCards\n            cards={state?.cards ?? []}\n            activeItem={activeItem}\n            onActivateItem={onActivateItem}\n            votes={votes}\n          />\n\n          <ButtonContainer>\n            <Button\n              type=\"primary\"\n              onClick={() => onSubmitVoting({ votes: prepareVotes(votes) })}\n              disabled={Object.values(votes).length < state.drawings.length}\n              icon={<CloudUploadOutlined />}\n            >\n              Enviar sua avaliação\n            </Button>\n          </ButtonContainer>\n        </Step>\n\n        {/*Step 1 */}\n        <Step fullWidth>\n          <WaitingRoom\n            players={players}\n            title=\"Pronto!\"\n            instruction=\"Vamos aguardar enquanto os outros jogadores terminam de avaliar!\"\n          />\n          <AdminForceNextPhase />\n        </Step>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default EvaluationPhase;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Components\nimport { AvatarEntry } from '../../avatars';\n\nfunction GalleryWindowCredits({ artist, artistAvatarId }) {\n  return (\n    <div className=\"a-gallery-window__credits\">\n      <div className=\"a-gallery-window__label\">Artista</div>\n      <span className=\"a-gallery-window__artist-name\">\n        <AvatarEntry id={artistAvatarId} name={artist} />\n      </span>\n    </div>\n  );\n}\n\nGalleryWindowCredits.propTypes = {\n  artist: PropTypes.string,\n  artistAvatarId: PropTypes.number,\n};\n\nexport default memo(GalleryWindowCredits);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Avatar as AntAvatar } from 'antd';\nimport { MessageFilled } from '@ant-design/icons';\n// Components\nimport { Avatar } from '../../avatars';\n\nfunction GalleryWindowGuesses({ playersSay, players, cards }) {\n  return (\n    <div className=\"a-gallery-window__guesses\">\n      <div className=\"a-gallery-window__label\">Participantes votaram</div>\n      {Object.entries(playersSay).map(([cardId, playersNames], index) => {\n        const card = cards.find((i) => i.id === cardId);\n        return (\n          <div key={`guess-${cardId}-${index}`} className=\"a-gallery-window__guess\">\n            <div className=\"a-gallery-window__speech-bubble\">\n              <MessageFilled className=\"a-gallery-window__speech-bubble-icon\" /> {card.text}\n            </div>\n            <div className=\"a-gallery-window__players\">\n              <AntAvatar.Group>\n                {playersNames.map((playerName) => (\n                  <Avatar\n                    id={players[playerName].avatarId}\n                    key={`guess-avatar-${players[playerName].avatarId}`}\n                  />\n                ))}\n              </AntAvatar.Group>\n              <span className=\"a-gallery-window__players-names\">{playersNames.join(', ')}</span>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nGalleryWindowGuesses.propTypes = {\n  playersSay: PropTypes.object,\n  players: PropTypes.object,\n};\n\nexport default memo(GalleryWindowGuesses);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTimer } from 'react-timer-hook';\n// Design Resources\nimport { Button, Space } from 'antd';\nimport {\n  PauseOutlined,\n  PlayCircleOutlined,\n  StepBackwardOutlined,\n  StepForwardOutlined,\n  TrophyOutlined,\n} from '@ant-design/icons';\n// Utils\nimport { inNSeconds } from '../../../utils';\n\nfunction GalleryWindowControls({ galleryLength, activeIndex, setActiveIndex, setStep }) {\n  const { seconds, isRunning, pause, resume } = useTimer({\n    expiryTimestamp: inNSeconds(10 * galleryLength),\n    autoStart: true,\n    onExpire: () => setStep(1),\n  });\n\n  // Automatically go to the next window every 10 seconds\n  useEffect(() => {\n    if (seconds < 10 * galleryLength && seconds > 0 && seconds % 10 === 0) {\n      setActiveIndex((s) => Math.min(s + 1, galleryLength - 1));\n    }\n  }, [seconds, setActiveIndex, galleryLength]);\n\n  const previousStep = () => {\n    setActiveIndex((s) => Math.max(s - 1, 0));\n  };\n\n  const nextStep = () => {\n    setActiveIndex((s) => Math.min(s + 1, galleryLength - 1));\n  };\n\n  return (\n    <div className=\"a-gallery-window__controls\">\n      <div className=\"a-gallery-window__timer-bar\">\n        <span style={{ width: `${Math.abs((10 * seconds) / galleryLength - 100)}%` }}></span>\n      </div>\n      <Space>\n        <Button\n          size=\"large\"\n          icon={<StepBackwardOutlined />}\n          onClick={previousStep}\n          disabled={activeIndex === 0}\n        >\n          Desenho Anterior\n        </Button>\n        <Button\n          size=\"large\"\n          icon={isRunning ? <PauseOutlined /> : <PlayCircleOutlined />}\n          onClick={isRunning ? pause : resume}\n        />\n        <Button size=\"large\" onClick={nextStep} disabled={activeIndex === galleryLength - 1}>\n          Próximo Desenho <StepForwardOutlined />\n        </Button>\n        <Button size=\"large\" onClick={() => setStep(1)} icon={<TrophyOutlined />}>\n          Ver Ranking\n        </Button>\n      </Space>\n    </div>\n  );\n}\n\nGalleryWindowControls.propTypes = {\n  galleryLength: PropTypes.number,\n  activeIndex: PropTypes.number,\n  setActiveIndex: PropTypes.func,\n  setStep: PropTypes.func,\n};\n\nexport default GalleryWindowControls;\n","import React, { Fragment, memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Avatar as AntAvatar, Typography } from 'antd';\nimport { CrownFilled, DeleteFilled } from '@ant-design/icons';\n// Components\nimport { Avatar } from '../../avatars';\nimport { StarPoints } from '../../shared';\n\nfunction GalleryWindowResult({\n  artist,\n  correctAnswerId,\n  correctAnswerText,\n  playersPoints,\n  playersSay,\n  players,\n}) {\n  const correctGuesses = Object.values(playersSay?.[correctAnswerId] ?? {});\n\n  return (\n    <div className=\"a-gallery-window__result\">\n      <div className=\"a-gallery-window__label\">E o nome correto da obra é</div>\n      <div className=\"a-gallery-window__speech-bubble\">\n        <CrownFilled className=\"a-gallery-window__speech-bubble-icon\" />\n        {correctAnswerText}\n      </div>\n      {correctGuesses.length ? (\n        <Fragment>\n          <div className=\"a-gallery-window__players\">\n            <AntAvatar.Group>\n              {correctGuesses.map((playerName) => {\n                return (\n                  <Avatar key={`correct-guess-avatar-${playerName}`} id={players[playerName].avatarId} />\n                );\n              })}\n            </AntAvatar.Group>\n            <StarPoints quantity={2} keyPrefix={`guessers-points-${artist}`} />\n            <span className=\"a-gallery-window__players-names\">{correctGuesses.join(', ')}</span>\n          </div>\n          <div className=\"a-gallery-window__artist-points\">\n            <Avatar id={players[artist].avatarId} />{' '}\n            <StarPoints quantity={playersPoints?.[artist]} keyPrefix={`artist-points-${artist}`} />{' '}\n            <span className=\"a-gallery-window__players-names\">{artist}</span>\n          </div>\n        </Fragment>\n      ) : (\n        <Typography.Text className=\"a-gallery-window__no-wins\">\n          <DeleteFilled /> Nossa, ninguém acertou. Esse desenho deve ter sido muito ruim.\n        </Typography.Text>\n      )}\n    </div>\n  );\n}\n\nGalleryWindowResult.propTypes = {\n  artist: PropTypes.string,\n  correctAnswer: PropTypes.string,\n  playersPoints: PropTypes.object,\n  playersSay: PropTypes.object,\n  players: PropTypes.object,\n};\n\nexport default memo(GalleryWindowResult);\n","import React, { memo } from 'react';\n\n// Hooks\nimport { useGlobalState } from '../../../hooks';\n// Components\nimport CanvasSVG from './CanvasSVG';\nimport GalleryWindowCredits from './GalleryWindowCredits';\nimport GalleryWindowGuesses from './GalleryWindowGuesses';\nimport GalleryWindowControls from './GalleryWindowControls';\nimport GalleryWindowResult from './GalleryWindowResult';\nimport CanvasResizer from './CanvasResizer';\n\nfunction GalleryWindow({ window, galleryLength, players, activeIndex, setActiveIndex, setStep, cards }) {\n  const [canvasSize] = useGlobalState('canvasSize');\n\n  const { drawing, artist, id, text, level, playersPoints, playersSay } = window;\n\n  return (\n    <div className=\"a-gallery-window\">\n      <CanvasResizer />\n      <div className=\"a-gallery-window__drawing-container\">\n        <CanvasSVG\n          key={window.correctAnswer}\n          drawing={drawing}\n          size={canvasSize}\n          className=\"a-gallery-window__drawing\"\n        />\n      </div>\n\n      <GalleryWindowCredits artist={artist} artistAvatarId={players[artist].avatarId} />\n\n      <GalleryWindowGuesses players={players} playersSay={playersSay} cards={cards} />\n\n      <GalleryWindowResult\n        artist={artist}\n        correctAnswerId={id}\n        correctAnswerText={text}\n        correctAnswerLevel={level}\n        playersPoints={playersPoints}\n        playersSay={playersSay}\n        players={players}\n      />\n\n      <GalleryWindowControls\n        galleryLength={galleryLength}\n        activeIndex={activeIndex}\n        setActiveIndex={setActiveIndex}\n        setStep={setStep}\n      />\n    </div>\n  );\n}\n\nexport default memo(GalleryWindow);\n","import React, { useEffect, useState } from 'react';\n// Design Resources\nimport { Button } from 'antd';\nimport { PictureOutlined } from '@ant-design/icons';\n// State & Hooks\nimport { useAPICall, useGlobalState } from '../../../hooks';\n// Resources and Utils\nimport { GAME_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport GalleryWindow from './GalleryWindow';\nimport {\n  AdminOnlyButton,\n  Instruction,\n  PhaseContainer,\n  RankingBoard,\n  StepSwitcher,\n  Step,\n  Title,\n} from '../../shared';\n\nfunction GalleryPhase({ players, state, info }) {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [step, setStep] = useState(0);\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n  const [cachedCanvasSize, setCachedCanvasSize] = useGlobalState('cachedCanvasSize');\n\n  // The gallery needs a bigger image, its annoying that we are changing the users settings but whatever\n  useEffect(() => {\n    if (step === 0) {\n      setCachedCanvasSize(canvasSize);\n      setCanvasSize(Math.min(window.innerWidth / 2 - 100, 500));\n    } else {\n      setCanvasSize(cachedCanvasSize);\n    }\n  }, [step]); // eslint-disable-line\n\n  const onGoToNextRound = useAPICall({\n    apiFunction: GAME_API.goToNextPhase,\n    actionName: 'go-to-next-phase',\n    successMessage: 'Ranking!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar ir para a próxima fase',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ARTE_RUIM.GALLERY}\n      className=\"a-gallery-phase\"\n    >\n      <StepSwitcher step={step}>\n        {/* Step 0 */}\n        <Step className=\"a-gallery-phase__windows\">\n          <Title>Galeria de Arte</Title>\n          {state?.gallery && (\n            <GalleryWindow\n              window={state.gallery[activeIndex]}\n              galleryLength={state.gallery.length}\n              cards={state.cards}\n              players={players}\n              activeIndex={activeIndex}\n              setActiveIndex={setActiveIndex}\n              setStep={setStep}\n            />\n          )}\n        </Step>\n\n        {/* Step 1 */}\n        <Step>\n          <Title>{state.pointsToVictory >= 0 ? 'Ranking' : 'Game Over'}</Title>\n          <RankingBoard players={players} ranking={state.ranking} />\n          {state.pointsToVictory >= 0 && (\n            <Instruction contained>\n              Faltam <strong>{state.pointsToVictory}</strong> pontos para o jogo acabar...\n            </Instruction>\n          )}\n\n          <Button size=\"large\" onClick={() => setStep(0)} icon={<PictureOutlined />}>\n            Ver Galeria\n          </Button>\n          <AdminOnlyButton action={() => onGoToNextRound({})} label=\"Ir para próxima rodada ou game over\" />\n        </Step>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default GalleryPhase;\n","import React, { memo } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Avatar, Tooltip } from 'antd';\n\nconst grades = ['A+', 'A', 'A-', 'B+', 'B', 'B-', 'C+', 'C', 'C-', 'D+', 'D', 'F'];\nconst minValues = [97, 93, 90, 87, 83, 80, 77, 73, 70, 67, 65, 0];\n\nconst DrawingGrade = ({ value }) => {\n  const grade = grades[minValues.findIndex((i) => value * 100 >= i) ?? 11];\n\n  const baseClass = 'a-drawing-grade';\n\n  return (\n    <Tooltip title={`Nota baseada em quantos acertos o desenho teve: ${value * 100}%`}>\n      <Avatar className={clsx(baseClass, `${baseClass}--${grade[0]}`)}>{grade}</Avatar>\n    </Tooltip>\n  );\n};\n\nDrawingGrade.propTypes = {\n  value: PropTypes.number.isRequired,\n};\n\nexport default memo(DrawingGrade);\n","import React from 'react';\n// Components\nimport { GameOver } from '../../shared';\nimport CanvasSVG from './CanvasSVG';\nimport DrawingGrade from './DrawingGrade';\n\nfunction GameOverPhase({ state, info }) {\n  return (\n    <GameOver info={info} state={state}>\n      <ul className=\"a-game-over__gallery\">\n        {state.drawings.map((entry) => {\n          return (\n            <li className=\"a-game-over__gallery-item\" key={entry.drawing}>\n              <CanvasSVG drawing={entry.drawing} size={200} className=\"a-game-over__gallery-canvas\" />\n              <span className=\"a-game-over__credits\">\n                \"{entry.text}\" por {entry.playerName}\n              </span>\n              <DrawingGrade value={entry.successRate} />\n            </li>\n          );\n        })}\n      </ul>\n    </GameOver>\n  );\n}\n\nexport default GameOverPhase;\n","import React from 'react';\n// Hooks\nimport { GAME_COLLECTION, PHASES } from '../../../utils/constants';\n// Components\nimport { Session } from '../../shared';\nimport Lobby from '../../lobby/Lobby';\nimport Rules from '../../rules/Rules';\nimport PageError from '../../errors/PageError';\nimport DrawPhase from './DrawPhase';\nimport EvaluationPhase from './EvaluationPhase';\nimport GalleryPhase from './GalleryPhase';\nimport GameOverPhase from './GameOverPhase';\n\nfunction SessionArteRuim({ gameId }) {\n  function getActiveComponent(phase) {\n    switch (phase) {\n      case PHASES.ARTE_RUIM.LOBBY:\n        return Lobby;\n      case PHASES.ARTE_RUIM.RULES:\n        return Rules;\n      case PHASES.ARTE_RUIM.DRAW:\n        return DrawPhase;\n      case PHASES.ARTE_RUIM.EVALUATION:\n        return EvaluationPhase;\n      case PHASES.ARTE_RUIM.GALLERY:\n        return GalleryPhase;\n      case PHASES.ARTE_RUIM.GAME_OVER:\n        return GameOverPhase;\n      default:\n        return PageError;\n    }\n  }\n\n  return (\n    <Session\n      gameId={gameId}\n      gameCollection={GAME_COLLECTION.ARTE_RUIM}\n      getActiveComponent={getActiveComponent}\n    />\n  );\n}\n\nexport default SessionArteRuim;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { QuestionCircleFilled } from '@ant-design/icons';\n// Components\nimport Card from './Card';\n\nfunction EspiaoEntreNosCard({ location, role, header = 'Local' }) {\n  return (\n    <Card\n      color={location === 'SPY' ? 'red' : 'lime'}\n      header={location === 'SPY' ? 'Local Desconhecido' : header}\n      size=\"large\"\n      footer={`Você é ${role === 'SPY' ? 'o espião' : `um(a) ${role}`} `}\n      className=\"e-card\"\n      footerClassName=\"e-card__footer\"\n    >\n      {location === 'SPY' ? <QuestionCircleFilled /> : location}\n    </Card>\n  );\n}\n\nEspiaoEntreNosCard.propTypes = {\n  location: PropTypes.string.isRequired,\n  header: PropTypes.string,\n  role: PropTypes.string.isRequired,\n};\n\nexport default memo(EspiaoEntreNosCard);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Button, Tooltip } from 'antd';\nimport { ClearOutlined } from '@ant-design/icons';\n// Hooks\nimport { useGlobalState } from '../../../hooks';\n\nfunction List({ header, headerIcon, items, column }) {\n  const [cache, setCache] = useGlobalState('espiaoEntreNosCache');\n\n  // const [crossed, setCrossed] = useState({});\n\n  const onCross = (item) => {\n    setCache((s) => {\n      const newState = { ...s };\n      if (newState[item]) {\n        delete newState[item];\n      } else {\n        newState[item] = true;\n      }\n      return newState;\n    });\n  };\n\n  const onClearCrossed = () => setCache({});\n\n  return (\n    <div className={clsx('e-list', column && 'e-list--column')}>\n      <h3 className=\"e-list__title\">\n        {headerIcon} {header}{' '}\n        <Tooltip title=\"Deselecionar todos\">\n          <Button\n            shape=\"circle\"\n            ghost\n            type=\"default\"\n            size=\"small\"\n            icon={<ClearOutlined />}\n            onClick={onClearCrossed}\n          />\n        </Tooltip>\n      </h3>\n      <ul className={clsx('e-list__list', column && 'e-list__list--column')}>\n        {items.map((item) => (\n          <li\n            className={clsx('e-list__item', cache[item] && 'e-list__item--crossed')}\n            key={item}\n            role=\"button\"\n            onClick={() => onCross(item)}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nList.propTypes = {\n  header: PropTypes.string.isRequired,\n  headerIcon: PropTypes.element.isRequired,\n  items: PropTypes.arrayOf(PropTypes.string),\n  column: PropTypes.bool,\n};\n\nList.defaultProps = {\n  column: false,\n};\n\nexport default memo(List);\n","import React, { memo } from 'react';\n\nfunction Notes() {\n  return (\n    <textarea\n      name=\"\"\n      id=\"\"\n      cols=\"30\"\n      rows=\"10\"\n      className=\"e-notes\"\n      placeholder=\"Escreva anotações aqui se quiser, mas cuidado com o teclado fazendo muito barulho\"\n    ></textarea>\n  );\n}\n\nNotes.propTypes = {};\n\nexport default memo(Notes);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { ESPIAO_ENTRE_NOS_API } from '../../../adapters';\n// Components\nimport { AdminOnlyButton } from '../../shared';\n\nfunction AdminTimerControlButton({ label = 'Continuar', action = 'resume' }) {\n  const onControlStopwatch = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.handleAdminAction,\n    actionName: 'timer-control',\n    successMessage: 'Admin action com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar ação',\n  });\n\n  return <AdminOnlyButton action={() => onControlStopwatch({ action })} label={label} />;\n}\n\nAdminTimerControlButton.propTypes = {\n  label: PropTypes.string,\n  action: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nexport default AdminTimerControlButton;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { EnvironmentOutlined } from '@ant-design/icons';\n// Hooks\nimport { useIsUserReady, useUser, useIsUserThe } from '../../../hooks';\n// Resources & Utils\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { Instruction, PhaseContainer, RoundAnnouncement, StepSwitcher, Title } from '../../shared';\nimport Card from '../../cards/EspiaoEntreNosCard';\nimport List from './List';\nimport Notes from './Notes';\nimport AdminTimerControlButton from './AdminTimerControlButton';\n\nfunction AssignmentPhase({ state, players, info }) {\n  const isUserReady = useIsUserReady(players, state);\n  const user = useUser(players);\n  const isUserTheSpy = useIsUserThe('currentSpy', state);\n  const [step, setStep] = useState(0);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ESPIAO_ENTRE_NOS.ASSIGNMENT}\n      className=\"e-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady]}>\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state.round}\n          onPressButton={() => setStep(1)}\n          time={5}\n          className=\"e-round-announcement\"\n        >\n          <Instruction className=\"e-phase-instruction\">Há um espião entre nós!</Instruction>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <div className=\"e-phase-step\">\n          <Title level={2} className=\"e-phase-title\">\n            Você está no(a)...\n          </Title>\n\n          <Card location={user.location} role={user.role} />\n\n          <AdminTimerControlButton label=\"Começar cronômetro\" action=\"start\" />\n\n          <Instruction className=\"e-phase-instruction\">\n            {isUserTheSpy\n              ? 'Você terá 10 minutos para descobrir onde os outros agentes estão! Pronto?'\n              : 'Você terá 10 minutos para descobrir quem é o espião entre nós! Pronto?'}\n          </Instruction>\n\n          <Instruction className=\"e-lists\">\n            <List\n              header=\"Possíveis Locais\"\n              headerIcon={<EnvironmentOutlined />}\n              items={state.possibleLocations}\n            />\n          </Instruction>\n          <Notes />\n        </div>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nAssignmentPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default AssignmentPhase;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Popconfirm, Select, Space } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n// Hooks\nimport { useGlobalState, useLoading } from '../../../hooks';\n\nfunction PlayerSelect({ playersList, onSend, isFinalAssessment = false }) {\n  const [isLoading] = useLoading();\n  const [username] = useGlobalState('username');\n\n  const [selectedPlayer, setSelectedPlayer] = useState(null);\n\n  const playersWithoutMe = playersList.filter((playerName) => playerName !== username);\n\n  return (\n    <Space>\n      <Select onChange={setSelectedPlayer} className=\"e-select\" placeholder=\"Acuse um jogador\">\n        {playersWithoutMe.map((playerName) => (\n          <Select.Option key={playerName} value={playerName}>\n            {playerName}\n          </Select.Option>\n        ))}\n      </Select>\n      <Popconfirm\n        title={`${\n          isFinalAssessment ? '' : 'Você só pode acusar uma vez durante o jogo! '\n        }Tem certeza que quer acusar ${selectedPlayer}?`}\n        onConfirm={() => onSend({ vote: selectedPlayer })}\n        okText=\"Sim\"\n        cancelText=\"Não\"\n      >\n        <Button\n          type=\"primary\"\n          disabled={!selectedPlayer || isLoading}\n          icon={isLoading ? <LoadingOutlined /> : null}\n        >\n          Acusar{selectedPlayer ? `: ${selectedPlayer}` : ''}\n        </Button>\n      </Popconfirm>\n    </Space>\n  );\n}\n\nPlayerSelect.propTypes = {\n  playersList: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onSend: PropTypes.func.isRequired,\n  isFinalAssessment: PropTypes.bool,\n};\n\nexport default PlayerSelect;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Popconfirm, Select, Space } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLoading } from '../../../hooks';\n\nfunction LocationSelect({ locations, onSend }) {\n  const [isLoading] = useLoading();\n  const [selectedLocation, setSelectedLocation] = useState(null);\n\n  return (\n    <Space className=\"e-select-container e-select-container--locations\">\n      <Select onChange={setSelectedLocation} placeholder=\"Chute um local\">\n        {locations.map((location) => (\n          <Select.Option key={`select-${location}`} value={location}>\n            {location}\n          </Select.Option>\n        ))}\n      </Select>\n      <Popconfirm\n        title={`Você só pode chutar uma vez durante o jogo! Tem certeza que quer chutar ${selectedLocation}?`}\n        onConfirm={() => onSend({ guess: selectedLocation })}\n        okText=\"Sim\"\n        cancelText=\"Não\"\n      >\n        <Button\n          type=\"primary\"\n          disabled={!selectedLocation || isLoading}\n          icon={isLoading ? <LoadingOutlined /> : null}\n        >\n          Chutar{selectedLocation ? `: ${selectedLocation}` : ''}\n        </Button>\n      </Popconfirm>\n    </Space>\n  );\n}\n\nLocationSelect.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default LocationSelect;\n","import React, { useState } from 'react';\nimport { useTimer } from 'react-timer-hook';\n// Design Resources\nimport { Button, message, Modal } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\n// Hooks and API\nimport { ESPIAO_ENTRE_NOS_API } from '../../../adapters';\nimport { useAPICall, useGlobalState } from '../../../hooks';\n// Components\nimport { ButtonContainer } from '../../shared';\n\nfunction FinalAssessmentModal({ isModalVisible, onAdminControl, players }) {\n  return (\n    <Modal\n      visible={isModalVisible}\n      title=\"O Tempo Acabou!\"\n      footer={null}\n      closable={false}\n      className=\"e-modal\"\n    >\n      Quem foi a última pessoa a responder uma pergunta?\n      <ButtonContainer wrap>\n        {Object.entries(players).map(([playerId, player]) => (\n          <Button\n            type=\"default\"\n            key={playerId}\n            icon={<UserOutlined />}\n            onClick={() => onAdminControl({ action: 'final', lastPlayer: playerId })}\n          >\n            {player.name}\n          </Button>\n        ))}\n      </ButtonContainer>\n    </Modal>\n  );\n}\n\nfunction Timer({ timeRemaining, players, hideAccusationSelect }) {\n  const [isAdmin] = useGlobalState('isAdmin');\n  const [isModalVisible, setModalVisible] = useState(false);\n\n  const onAdminControl = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.handleAdminAction,\n    actionName: 'admin-control',\n    successMessage: 'Admin action com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar ação',\n  });\n\n  const onTimesUp = () => {\n    if (isAdmin) {\n      setModalVisible(true);\n    }\n    hideAccusationSelect();\n    message.warning('O tempo acabou!!! Preparado para a avaliação final?', 10);\n  };\n\n  const { minutes, seconds } = useTimer({\n    expiryTimestamp: Date.now() + timeRemaining,\n    autoStart: true,\n    onExpire: onTimesUp,\n  });\n\n  return (\n    <div className=\"e-timer\">\n      {minutes}:{seconds < 10 ? `0${seconds}` : seconds}\n      <FinalAssessmentModal\n        isModalVisible={isModalVisible}\n        onAdminControl={onAdminControl}\n        players={players}\n      />\n    </div>\n  );\n}\n\nexport default Timer;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Button, Tooltip } from 'antd';\nimport { AimOutlined, ClearOutlined, IssuesCloseOutlined } from '@ant-design/icons';\n// Hooks\nimport { useGlobalState } from '../../../hooks';\n\nfunction SuspectsList({ players }) {\n  const [cache, setCache] = useGlobalState('espiaoEntreNosCache');\n\n  const onCross = (item) => {\n    setCache((s) => {\n      const newState = { ...s };\n      if (newState[item]) {\n        delete newState[item];\n      } else {\n        newState[item] = true;\n      }\n      return newState;\n    });\n  };\n\n  const onClearCrossed = () => setCache({});\n\n  return (\n    <div className={clsx('e-list')}>\n      <h3 className=\"e-list__title\">\n        <AimOutlined /> Suspeitos{' '}\n        <Tooltip title=\"Deselecionar todos\">\n          <Button\n            shape=\"circle\"\n            ghost\n            type=\"default\"\n            size=\"small\"\n            icon={<ClearOutlined />}\n            onClick={onClearCrossed}\n          />\n        </Tooltip>\n      </h3>\n      <ul className=\"e-list__list\">\n        {Object.entries(players).map(([playerId, player]) => (\n          <li\n            className={clsx('e-list__item', cache[playerId] && 'e-list__item--crossed')}\n            key={playerId}\n            role=\"button\"\n            onClick={() => onCross(playerId)}\n          >\n            {player.name}{' '}\n            {player.usedAccusation && (\n              <Tooltip title=\"Já usou acusação\">\n                <IssuesCloseOutlined size=\"small\" />\n              </Tooltip>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nSuspectsList.propTypes = {\n  header: PropTypes.string.isRequired,\n  headerIcon: PropTypes.element.isRequired,\n  items: PropTypes.arrayOf(PropTypes.string),\n  column: PropTypes.bool,\n};\n\nSuspectsList.defaultProps = {\n  column: false,\n};\n\nexport default memo(SuspectsList);\n","import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { EnvironmentOutlined } from '@ant-design/icons';\nimport { notification } from 'antd';\n// Hooks\nimport { useUser, useAPICall, useIsUserThe } from '../../../hooks';\n// Resources & Utils\nimport { ESPIAO_ENTRE_NOS_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { Instruction, PhaseContainer, Title } from '../../shared';\nimport Card from '../../cards/EspiaoEntreNosCard';\nimport List from './List';\nimport Notes from './Notes';\nimport PlayerSelect from './PlayerSelect';\nimport LocationSelect from './LocationSelect';\nimport Timer from './Timer';\nimport AdminTimerControlButton from './AdminTimerControlButton';\nimport SuspectsList from './SuspectsList';\n\nfunction InvestigationPhase({ state, players, info }) {\n  const user = useUser(players);\n  const isUserTheSpy = useIsUserThe('currentSpy', state);\n  const [isAccusationSelectVisible, setAccusationSelectVisible] = useState(true);\n\n  const onMakeAccusation = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.makeAccusation,\n    actionName: 'accuse',\n    successMessage: 'Jogador acusado com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar acusar',\n  });\n\n  const onGuessLocation = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.guessLocation,\n    actionName: 'guess',\n    successMessage: 'Chute enviado com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar chutar o local',\n  });\n\n  const hideAccusationSelect = () => {\n    setAccusationSelectVisible(false);\n  };\n\n  useEffect(() => {\n    if (state?.outcome === 'VOTE_FAIL') {\n      notification.info({\n        message: 'A votação não foi unânime',\n        description: state?.votedYes ? `Votaram sim: ${state?.votedYes}` : 'Ninguém votou sim',\n        duration: 10,\n      });\n    }\n\n    if (state.timeRemaining > 590000) {\n      notification.info({\n        message: '10 minutos!',\n        description: `${state?.startingPlayer ?? Object.keys(players)[0]} começa perguntando!`,\n        duration: 10,\n      });\n    }\n  }, []); // eslint-disable-line\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ESPIAO_ENTRE_NOS.INVESTIGATION}\n      className=\"e-phase\"\n    >\n      <div className=\"e-phase-step-header\">\n        <div className=\"e-phase-step-header__timer-container\">\n          <Timer\n            timeRemaining={state.timeRemaining}\n            players={players}\n            hideAccusationSelect={hideAccusationSelect}\n          />\n        </div>\n\n        <div className=\"e-phase-step-header__center\">\n          <Title level={2} className=\"e-phase-title\">\n            {isUserTheSpy ? 'Onde eles estão?' : 'Quem é o Espião?'}\n          </Title>\n          <Card location={user.location} role={user.role} />\n        </div>\n      </div>\n\n      {isAccusationSelectVisible && (\n        <Fragment>\n          {isUserTheSpy && <LocationSelect locations={state.possibleLocations} onSend={onGuessLocation} />}\n\n          {!user?.usedAccusation ? (\n            <PlayerSelect playersList={Object.keys(players)} onSend={onMakeAccusation} />\n          ) : (\n            <Instruction className=\"e-phase-instruction\">Você já usou sua chance de acusar</Instruction>\n          )}\n        </Fragment>\n      )}\n\n      <Instruction className=\"e-lists\">\n        <SuspectsList players={players} />\n        <List\n          header=\"Possíveis Locais\"\n          headerIcon={<EnvironmentOutlined />}\n          items={state.possibleLocations}\n        />\n      </Instruction>\n\n      <Notes />\n\n      <AdminTimerControlButton label=\"Forçar pausar cronômetro\" action=\"pause\" />\n    </PhaseContainer>\n  );\n}\n\nInvestigationPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default InvestigationPhase;\n","import { Modal } from 'antd';\nimport React, { useState } from 'react';\nimport { useTimer } from 'react-timer-hook';\nimport { inNSeconds } from '../../../utils';\n\nfunction EmergencyAlertSVG() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 245.8 204.8\"\n      overflow=\"visible\"\n      className=\"e-emergency-alert__svg\"\n    >\n      <defs />\n\n      <g id=\"g6f2cE_2_\">\n        <path\n          fill=\"#f9c303\"\n          d=\"M0 114.9c2.6-3.2 5.8-4.4 10-4.1 4 .3 8 0 11.9.1 4.6.1 7.8 2.7 8 6.4.2 3.7-3.1 6.5-7.7 6.6-4.5.1-9-.2-13.4.1-3.9.3-6.7-1.1-8.8-4.2v-4.9zM245.8 119.9c-2.1 3.1-4.9 4.5-8.8 4.2-4.6-.3-9.3 0-14-.1-4.3-.1-7.5-2.9-7.1-6.6.4-3.9 2.8-6.4 6.9-6.5 5.3-.1 10.6.1 16-.1 3.3-.1 4.8 2.4 7 4v5.1zM129.9 0c3.8 2.2 5.3 5.5 5 9.9-.2 4.1.1 8.3-.1 12.5-.2 4.6-3.2 7.7-6.9 7.6-4-.1-6.2-2.8-6.3-7.8-.1-4.3.2-8.7-.1-13-.3-4 1-7 4.4-9.2h4z\"\n        />\n        <path\n          d=\"M197.1 170c-3.5-.2-6.9-.2-10.4-.2h-1.6c-19.2.1-38.5.2-57.7.2-22.2 0-44.5-.1-66.7-.2h-1.6c-2.8.1-5.6.1-8.4.2-7.1.2-12.2 3.6-13.7 9.2-2.6 9.5-.1 20.2 5.6 23.6 1.3.8 2.6 1.3 4.2 1.2.1.3.1.6.2.9h152.9c.2-.2.3-.5.3-.8-2.7 0-5.4-.1-8.1-.1 2.7 0 5.4.1 8.1.1 6.3-1.7 9.6-5.6 9.7-11.9.1-3-.2-6 .1-8.9.5-6.7-5.3-12.9-12.9-13.3z\"\n          fill=\"#3a3939\"\n        />\n        <path\n          fill=\"#f9c303\"\n          d=\"M189.9 22.6c0 .1-.1 1.4-.6 2.3-2.7 4.8-5.4 9.5-8.2 14.2-2.2 3.6-5.6 4.3-9 2.4-3.5-2-4.3-5.4-2.2-9 2.7-4.8 5.4-9.5 8.3-14.2 1.6-2.6 4.1-4 7.2-3 2.8 1 4.8 2.9 4.5 7.3zM77.4 35.6c-.3 3-1.7 5.2-4.1 6.2-2.7 1.1-5.9 1.2-7.7-1.6-3.4-5.3-6.7-10.7-9.5-16.3-1.2-2.4-.6-5.3 1.8-7.2 2.3-1.7 5-2.8 7.3-.7 5.9 5.4 8.4 12.9 12.2 19.6zM22.4 55.9c.3.1 1.3.1 2.2.5 4.9 2.8 9.8 5.5 14.6 8.5 3.6 2.2 4 5.8 2.1 9.1-1.9 3.2-5.2 4.1-8.7 2.1-4.9-2.8-9.8-5.5-14.6-8.5-2.6-1.6-3.8-4.3-2.8-7.3s3.2-4.7 7.2-4.4zM230.8 62c.1 2.6-1.2 4.5-3.3 5.8-4.8 2.9-9.7 5.8-14.6 8.5-3.5 1.9-6.8.7-8.6-2.5-1.8-3.1-1.3-6.6 2.1-8.7 4.8-3 9.6-5.9 14.6-8.5 4.8-2.5 9.8.5 9.8 5.4z\"\n        />\n        <path\n          d=\"M186 105.9c-1.5-28.5-22-48.9-46.3-54.7-14.7-3.5-29.8-2.8-43.8 3.4-21.3 9.4-33.5 26-36.2 49.3-1 1.9-.6 3.9-.6 5.9v60.1h1.6c22.2.1 44.5.2 66.7.2 19.2 0 38.5-.1 57.7-.2h1.6v-57.1c-.1-2.4.3-4.7-.7-6.9zm-95.5 9.6c-1.5 10-2.2 20.1-2.2 30.3 0 3.4-.7 4.6-4.3 4.5-7.9-.2-8.1 0-7.9-7.7.2-11.6-1.1-23.3.9-34.8 2.5-14.8 10.9-25.7 23.6-33.4.5-.3 1.2-.3 2.9-.8-6.5 14-10.9 27.6-13 41.9z\"\n          fill=\"red\"\n        />\n        <path\n          d=\"M103.4 73.5c-6.4 14-10.7 27.6-12.9 41.9-1.5 10-2.2 20.1-2.2 30.3 0 3.4-.7 4.6-4.3 4.5-7.9-.2-8.1 0-7.9-7.7.2-11.6-1.1-23.3.9-34.8 2.5-14.8 10.9-25.7 23.6-33.4.4-.3 1.1-.3 2.8-.8z\"\n          fill=\"#fefefd\"\n        />\n      </g>\n    </svg>\n  );\n}\n\nfunction EmergencyAlert() {\n  const [isVisible, setVisible] = useState(true);\n\n  useTimer({\n    expiryTimestamp: inNSeconds(2),\n    autoStart: true,\n    onExpire: () => setVisible(false),\n  });\n\n  return (\n    <Modal centered footer={null} visible={isVisible} className=\"e-emergency-alert\" closable={false}>\n      <EmergencyAlertSVG />\n    </Modal>\n  );\n}\n\nexport default EmergencyAlert;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Space } from 'antd';\nimport { EnvironmentOutlined } from '@ant-design/icons';\n// Hooks\nimport { useUser, useAPICall, useIsUserThe } from '../../../hooks';\n// Resources & Utils\nimport { ESPIAO_ENTRE_NOS_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { Instruction, PhaseContainer, ReadyPlayersBar, Title } from '../../shared';\nimport Card from '../../cards/EspiaoEntreNosCard';\nimport List from './List';\nimport Notes from './Notes';\nimport AdminTimerControlButton from './AdminTimerControlButton';\nimport SuspectsList from './SuspectsList';\nimport EmergencyAlert from './EmergencyAlert';\n\nfunction AssessmentPhase({ state, players, info }) {\n  const user = useUser(players);\n  const isUserTheTarget = useIsUserThe('target', state);\n  const isUserTheAccuser = useIsUserThe('accuser', state);\n  const [submittedAction, setSubmitAction] = useState(false);\n\n  const onSubmitVoting = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.submitVoting,\n    actionName: 'guess',\n    onBeforeCall: () => setSubmitAction(true),\n    onError: () => setSubmitAction(false),\n    successMessage: 'Voto enviado com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar seu voto',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ESPIAO_ENTRE_NOS.ASSESSMENT}\n      className=\"e-phase\"\n    >\n      <Title level={2} className=\"e-phase-title\">\n        {state.accuser} está acusando {state.target} de ser o espião. Concorda?\n      </Title>\n\n      {!state?.finalAssessment && <EmergencyAlert />}\n\n      <div>\n        {isUserTheAccuser || isUserTheTarget ? (\n          <Instruction className=\"e-phase-instruction\">\n            Você não participa dessa votacão, afinal,{' '}\n            {isUserTheTarget ? 'é você quem está no paredão!' : 'você quem acusou!'}\n          </Instruction>\n        ) : (\n          <Space className=\"a\">\n            <Button ghost disabled={submittedAction} onClick={() => onSubmitVoting({ vote: true })}>\n              Também acho!\n            </Button>\n            <Button ghost disabled={submittedAction} onClick={() => onSubmitVoting({ vote: false })}>\n              Não é ele(a)\n            </Button>\n          </Space>\n        )}\n      </div>\n\n      <Card location={user.location} role={user.role} />\n\n      <ReadyPlayersBar players={players} readyText=\"Votei\" readyTextPlural=\"Votamos\" />\n\n      <Instruction className=\"e-lists\">\n        <SuspectsList players={players} />\n        <List\n          header=\"Possíveis Locais\"\n          headerIcon={<EnvironmentOutlined />}\n          items={state.possibleLocations}\n        />\n      </Instruction>\n\n      <Notes />\n\n      <AdminTimerControlButton label=\"Forçar continuar cronômetro\" action=\"resume\" />\n    </PhaseContainer>\n  );\n}\n\nAssessmentPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default AssessmentPhase;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { message } from 'antd';\n// Hooks\nimport { useUser, useAPICall, useIsUserThe } from '../../../hooks';\n// Resources & Utils\nimport { ESPIAO_ENTRE_NOS_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { AdminOnly, AdminButton, Instruction, PhaseContainer, Title } from '../../shared';\n\nfunction ResolutionPhase({ state, players, info }) {\n  const user = useUser(players);\n  const isUserTheSpy = useIsUserThe('currentSpy', state);\n\n  const onAdminControl = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.handleAdminAction,\n    actionName: 'admin-control',\n    successMessage: 'Admin action com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar ação',\n  });\n\n  const missionOutcomeText = isUserTheSpy === state.spyWin ? 'Missão Cumprida!' : 'Missão Fracassada!';\n  const wasABadVoting = state.spyWin && Boolean(state?.timeRemaining > 0);\n\n  useEffect(() => {\n    if (state?.resolutionType === 'SPY_GUESS') {\n      if (state.spyWin) {\n        message.warning(`${state.currentSpy} chutou ${state.guess} e acertou`, 6);\n      } else {\n        message.warning(`${state.currentSpy} chutou ${state.guess} e error feio`, 6);\n      }\n    }\n  }, []); // eslint-disable-line\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ESPIAO_ENTRE_NOS.RESOLUTION}\n      className=\"e-phase e-phase--center\"\n    >\n      {state.resolutionType === 'SPY_FOUND' && (\n        <div className=\"e-phase-step\">\n          {state.spyWin ? (\n            <div className=\"\">\n              <Title level={2} className=\"e-phase-title\">\n                {missionOutcomeText}\n              </Title>\n              <Instruction className=\"e-phase-instruction\">\n                {wasABadVoting ? (\n                  <span>\n                    Vocês incriminaram o espião errado. {state.currentSpy} se safou, todos os segredos da\n                    agência foram revelados e o mundo vai acabar. Parabéns.\n                  </span>\n                ) : (\n                  <span>\n                    O espião {state.currentSpy} não foi encontrado a tempo! Todos os segredos da agência foram\n                    revelados e agora o mundo vai acabar. Parabéns.\n                  </span>\n                )}\n              </Instruction>\n            </div>\n          ) : (\n            <div className=\"\">\n              <Title level={2} className=\"e-phase-title\">\n                {missionOutcomeText}\n              </Title>\n              <Instruction className=\"e-phase-instruction\">\n                O espião {state.currentSpy} foi encontrado a tempo!{' '}\n                {isUserTheSpy ? `Não foi dessa vez, ${user.name}.` : 'O mundo está salvo graças a você!'}\n              </Instruction>\n            </div>\n          )}\n        </div>\n      )}\n\n      {state.resolutionType === 'SPY_GUESS' && (\n        <div className=\"e-phase-step\">\n          {state.spyWin ? (\n            <div className=\"\">\n              <Title level={2} className=\"e-phase-title\">\n                {missionOutcomeText}\n              </Title>\n              <Instruction className=\"e-phase-instruction\">\n                O espião {state.currentSpy} conseguiu descobrir que estamos no(a) {state.currentLocation}.\n              </Instruction>\n            </div>\n          ) : (\n            <div className=\"\">\n              <Title level={2} className=\"e-phase-title\">\n                {missionOutcomeText}\n              </Title>\n              <Instruction className=\"e-phase-instruction\">\n                O espião {state.currentSpy} não descobriu a tempo que estamos no(a) {state.currentLocation}!{' '}\n                {isUserTheSpy ? `Não foi dessa vez, ${user.name}.` : 'O mundo está salvo graças a você!'}\n              </Instruction>\n            </div>\n          )}\n        </div>\n      )}\n\n      <Instruction className=\"e-phase-instruction\">\n        Disfarces dos infiltrados:\n        {Object.values(players).map((player) => (\n          <li>\n            {player.name} como {player.role}\n          </li>\n        ))}\n      </Instruction>\n\n      <AdminOnly>\n        <AdminButton action={() => onAdminControl({ action: 'round' })} label=\"Iniciar nova rodada\" />\n        <AdminButton action={() => onAdminControl({ action: 'end' })} label=\"Terminar o jogo\" />\n      </AdminOnly>\n    </PhaseContainer>\n  );\n}\n\nResolutionPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default ResolutionPhase;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, message, Modal, notification, Select } from 'antd';\nimport { AimOutlined, EnvironmentOutlined } from '@ant-design/icons';\n// Hooks\nimport { useUser, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { ESPIAO_ENTRE_NOS_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { AdminOnly, ButtonContainer, Instruction, PhaseContainer, Title } from '../../shared';\nimport Card from '../../cards/EspiaoEntreNosCard';\nimport List from './List';\nimport Notes from './Notes';\nimport PlayerSelect from './PlayerSelect';\n\nfunction FinalAssessmentInstruction({ playerOrder, playerOrderIndex }) {\n  return (\n    <Instruction className=\"e-phase-instruction\">\n      Já que vocês falharam em encontrar o espião, há uma última possibilidade!\n      <ul>\n        {playerOrderIndex === 0 ? (\n          <li>Cada jogador, começando por {playerOrder[0]}, cada jogador faz uma acusação.</li>\n        ) : (\n          <li>Agora é a vez de {playerOrder[playerOrderIndex]} faz uma acusação.</li>\n        )}\n        <li>Se a votação for unânime, o jogo acaba e revelam-se os papéis</li>\n        <li>Sem discussão dessa vez, simplesmente acuse alguém! Não temos mais tempo!</li>\n        <li>A ordem será essa: {playerOrder.join(', ')}</li>\n      </ul>\n    </Instruction>\n  );\n}\n\nfunction FinalAssessmentModal({ isModalVisible, onMakeAccusation, players, playerOrder, playerOrderIndex }) {\n  return (\n    <Modal\n      visible={isModalVisible}\n      title=\"Quem você vai acusar?\"\n      footer={null}\n      closable={false}\n      className=\"e-modal\"\n    >\n      <FinalAssessmentInstruction playerOrder={playerOrder} playerOrderIndex={playerOrderIndex} />\n      Não há tempo pra pensar, escolha alguém!\n      <ButtonContainer>\n        <PlayerSelect playersList={Object.keys(players)} onSend={onMakeAccusation} isFinalAssessment />\n      </ButtonContainer>\n    </Modal>\n  );\n}\n\nfunction FinalAssessmentPhase({ state, players, info }) {\n  const user = useUser(players);\n  const [accuser, setAccuser] = useState(null);\n  const [target, setTarget] = useState(null);\n\n  const onAdminControl = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.handleAdminAction,\n    actionName: 'admin-control',\n    successMessage: 'Admin action com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar ação',\n  });\n\n  const onMakeAccusation = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.makeAccusation,\n    actionName: 'accuse',\n    successMessage: 'Jogador acusado com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar acusar',\n  });\n\n  useEffect(() => {\n    if (state?.outcome === 'VOTE_FAIL') {\n      notification.info({\n        message: 'A votação não foi unânime',\n        description: state?.votedYes ? `Votaram sim: ${state?.votedYes}` : 'Ninguém votou sim',\n        duration: 10,\n      });\n    }\n  }, []); // eslint-disable-line\n\n  const isUserTheAccuser = state.playerOrder[state.playerOrderIndex] === user.name;\n  console.log({ playerOrderIndex: state.playerOrderIndex });\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ESPIAO_ENTRE_NOS.FINAL_ASSESSMENT}\n      className=\"e-phase\"\n    >\n      <Title level={2} className=\"e-phase-title\">\n        Última Chance!\n      </Title>\n\n      <FinalAssessmentModal\n        isModalVisible={isUserTheAccuser}\n        onMakeAccusation={onMakeAccusation}\n        players={players}\n        playerOrder={state.playerOrder}\n        playerOrderIndex={state.playerOrderIndex}\n      />\n\n      <FinalAssessmentInstruction playerOrder={state.playerOrder} playerOrderIndex={state.playerOrderIndex} />\n\n      <Card location={user.location} role={user.role} />\n\n      <Instruction className=\"e-lists\">\n        <List header=\"Suspeitos\" headerIcon={<AimOutlined />} items={Object.keys(players)} />\n        <List\n          header=\"Possíveis Locais\"\n          headerIcon={<EnvironmentOutlined />}\n          items={state.possibleLocations}\n        />\n      </Instruction>\n\n      <Notes />\n\n      <AdminOnly className=\"e-admin-final-assessment\">\n        <span>Acusador:</span>\n        <Select onChange={setAccuser} className=\"e-select\" placeholder=\"Acusador\">\n          {Object.keys(players).map((playerName) => (\n            <Select.Option key={playerName} value={playerName}>\n              {playerName}\n            </Select.Option>\n          ))}\n        </Select>\n        <span>Acusado:</span>\n        <Select onChange={setTarget} className=\"e-select\" placeholder=\"Acusado\">\n          {Object.keys(players).map((playerName) => (\n            <Select.Option key={playerName} value={playerName}>\n              {playerName}\n            </Select.Option>\n          ))}\n        </Select>\n        <Button\n          type=\"primary\"\n          disabled={!accuser || !target || accuser === target}\n          onClick={() =>\n            onAdminControl({\n              action: {\n                accuser,\n                target,\n              },\n            })\n          }\n        >\n          Enviar decisão final\n        </Button>\n      </AdminOnly>\n    </PhaseContainer>\n  );\n}\n\nFinalAssessmentPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default FinalAssessmentPhase;\n","import React from 'react';\n// Hooks\nimport { GAME_COLLECTION, PHASES } from '../../../utils/constants';\n// Components\nimport { GameOver, Session } from '../../shared';\nimport Lobby from '../../lobby/Lobby';\nimport Rules from '../../rules/Rules';\nimport PageError from '../../errors/PageError';\nimport AssignmentPhase from './AssignmentPhase';\nimport InvestigationPhase from './InvestigationPhase';\nimport AssessmentPhase from './AssessmentPhase';\nimport ResolutionPhase from './ResolutionPhase';\nimport FinalAssessmentPhase from './FinalAssessmentPhase';\n\nfunction SessionEspiaoEntreNos({ gameId }) {\n  function getActiveComponent(phase) {\n    switch (phase) {\n      case PHASES.ESPIAO_ENTRE_NOS.LOBBY:\n        return Lobby;\n      case PHASES.ESPIAO_ENTRE_NOS.RULES:\n        return Rules;\n      case PHASES.ESPIAO_ENTRE_NOS.ASSIGNMENT:\n        return AssignmentPhase;\n      case PHASES.ESPIAO_ENTRE_NOS.INVESTIGATION:\n        return InvestigationPhase;\n      case PHASES.ESPIAO_ENTRE_NOS.ASSESSMENT:\n        return AssessmentPhase;\n      case PHASES.ESPIAO_ENTRE_NOS.FINAL_ASSESSMENT:\n        return FinalAssessmentPhase;\n      case PHASES.ESPIAO_ENTRE_NOS.RESOLUTION:\n        return ResolutionPhase;\n      case PHASES.ESPIAO_ENTRE_NOS.GAME_OVER:\n        return GameOver;\n      default:\n        return PageError;\n    }\n  }\n\n  return (\n    <Session\n      gameId={gameId}\n      gameCollection={GAME_COLLECTION.ESPIAO_ENTRE_NOS}\n      getActiveComponent={getActiveComponent}\n    />\n  );\n}\n\nexport default SessionEspiaoEntreNos;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { ArrowLeftOutlined, ArrowRightOutlined, MinusOutlined } from '@ant-design/icons';\nimport { LETTERS } from '../../../utils/constants';\n\nconst getColorModifier = (letter) => {\n  const index = LETTERS.indexOf(letter);\n  return Math.abs(index) % 4;\n};\n\nfunction Card({ left, right, className, setNeedle }) {\n  const leftColor = getColorModifier(left[0]);\n  const rightColor = getColorModifier(right[0]);\n  const cardSideClass = 'o-card__side';\n  const isButton = Boolean(setNeedle);\n\n  const onSetNeedle = (direction) => {\n    if (setNeedle) {\n      if (direction === 1) {\n        setNeedle((n) => Math.min(n + direction, 10));\n      } else {\n        setNeedle((n) => Math.max(n + direction, -10));\n      }\n    }\n  };\n\n  return (\n    <div className={clsx('o-card', className)}>\n      <div\n        className={clsx(\n          cardSideClass,\n          `${cardSideClass}--left`,\n          `${cardSideClass}--L${leftColor}`,\n          isButton && `${cardSideClass}--button`\n        )}\n        onClick={() => onSetNeedle(-1)}\n      >\n        <span className=\"o-card__arrow\">\n          <ArrowLeftOutlined /> <MinusOutlined /> <MinusOutlined />\n        </span>\n        <span className=\"o-card__text\">{left}</span>\n      </div>\n      <div\n        className={clsx(\n          cardSideClass,\n          `${cardSideClass}--right`,\n          `${cardSideClass}--R${rightColor}`,\n          isButton && `${cardSideClass}--button`\n        )}\n        onClick={() => onSetNeedle(1)}\n      >\n        <span className=\"o-card__arrow\">\n          <MinusOutlined /> <MinusOutlined /> <ArrowRightOutlined />\n        </span>\n        <span className=\"o-card__text\">{right}</span>\n      </div>\n    </div>\n  );\n}\n\nCard.propTypes = {\n  left: PropTypes.string.isRequired,\n  right: PropTypes.string.isRequired,\n  className: PropTypes.string,\n};\n\nCard.defaultProps = {\n  cardName: '',\n};\n\nexport default memo(Card);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Components\nimport { Instruction, Title } from '../../shared';\nimport Card from './Card';\n\nfunction CardSelection({ onSendChosenSide, cards }) {\n  return (\n    <div className=\"o-card-selection\">\n      <Title>Selecione a carta que será usada nessa rodada!</Title>\n      <Instruction contained>Escolha uma carta que você acredita que conseguirá criar uma dica.</Instruction>\n      <div className=\"o-card-selection__container\">\n        {cards.map((card) => (\n          <button\n            key={`card-button-${card.id}`}\n            className=\"o-card-selection__button\"\n            onClick={() => onSendChosenSide({ cardId: card.id })}\n          >\n            <Card left={card.left} right={card.right} />\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nCardSelection.propTypes = {\n  onSendChosenSide: PropTypes.func.isRequired,\n  cards: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      left: PropTypes.string,\n      right: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default CardSelection;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport {\n  useIsUserReady,\n  useWhichPlayerIsThe,\n  useIsUserThe,\n  useAPICall,\n  useIsUsersTeamActive,\n} from '../../../hooks';\n// Resources & Utils\nimport { ONDA_TELEPATICA } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport {\n  Instruction,\n  PhaseContainer,\n  RoundAnnouncement,\n  Step,\n  StepSwitcher,\n  View,\n  WaitingRoom,\n} from '../../shared';\nimport CardSelection from './CardSelection';\nimport { AvatarName } from '../../avatars';\n\nfunction DialSidesPhase({ state, players, info }) {\n  const isUserReady = useIsUserReady(players, state);\n  const [step, setStep] = useState(0);\n  const psychic = useWhichPlayerIsThe('psychic', state, players);\n  const isUserThePsychic = useIsUserThe('psychic', state);\n  const isUsersTeamActive = useIsUsersTeamActive(state, players);\n\n  const onSendChosenSide = useAPICall({\n    apiFunction: ONDA_TELEPATICA.submitSides,\n    actionName: 'submit-side',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: 'Carta selecionada com sucesso',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar enviar a carta',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ONDA_TELEPATICA.DIAL_SIDES}\n      className=\"o-dial-sides-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady]}>\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state.round}\n          onPressButton={() => setStep(1)}\n          players={players}\n          teams={state.teams}\n          time={10}\n        >\n          <View visibleIf={isUsersTeamActive}>\n            <Instruction contained>\n              É a vez do seu time!\n              <br />\n              <AvatarName player={psychic} uppercase size=\"large\" addressUser />\n              será o(a) medium\n            </Instruction>\n          </View>\n\n          <View visibleIf={!isUsersTeamActive}>\n            <Instruction contained>\n              É a vez do\n              <span className=\"u-word-selection-phase__guesser-name-announcement\">\n                TIME {state.activeTeam}\n              </span>\n              <br />\n              <AvatarName player={psychic} uppercase size=\"large\" addressUser />\n              será o(a) medium\n            </Instruction>\n          </View>\n\n          <div className=\"u-word-selection-phase__team-points\"></div>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <Step fullWidth>\n          <View visibleIf={isUserThePsychic}>\n            <CardSelection onSendChosenSide={onSendChosenSide} cards={state.cards} />\n          </View>\n\n          <View visibleIf={!isUserThePsychic}>\n            <WaitingRoom\n              players={players}\n              title={`${psychic.name} está escolhendo uma carta...`}\n              instruction=\"Aguarde enquanto ele(a) decide a carta que será usada nessa rodada.\"\n            />\n          </View>\n        </Step>\n\n        {/* Step 2 */}\n        <WaitingRoom\n          players={players}\n          title=\"Pronto!\"\n          instruction=\"Vamos aguardar o jogo iniciar a próxima fase.\"\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nDialSidesPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default DialSidesPhase;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Components\nimport Card from './Card';\n\nconst getBracketClass = (number, showNeedle, needle, showTarget, target) => {\n  const baseBracketClass = 'o-dial-numbers';\n  const modifier = number % 2 === 0 ? 'even' : 'odd';\n  return clsx(\n    baseBracketClass,\n    `${baseBracketClass}--${modifier}`,\n    showNeedle && needle === number && `${baseBracketClass}--active`,\n    showTarget && target === number && `${baseBracketClass}--target`\n  );\n};\n\nfunction Dial({\n  card,\n  needle = 0,\n  showNeedle = false,\n  target = 0,\n  showTarget = false,\n  rivalGuess = 0,\n  rivalTeam = 'rival',\n  animate = false,\n  showPoints,\n  setNeedle,\n}) {\n  const baseClass = 'o-dial';\n  const basePointsClass = 'o-dial-points';\n  const baseRivalClass = 'o-dial-rival';\n  const points = Math.abs(needle - target);\n\n  return (\n    <div\n      className={clsx(\n        `${baseClass}`,\n        animate && `${baseClass}--animated`,\n        Boolean(setNeedle) && `${baseClass}--clickable`\n      )}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 670 340\"\n        overflow=\"visible\"\n        className={clsx(`${baseClass}__svg`)}\n      >\n        <defs />\n\n        <path\n          d=\"M669.9 329.9c-1.1-21-6.1-71.9-27.3-127.7C591.2 83.3 472.8 0 335 0h-.2C198.2.1 80.7 81.9 28.7 199.2 5.7 258 1 312.1 0 332c-.1 1.1.1 2.1.5 3 1.1 2.9 3.9 5 7.2 5h654.6c3.3 0 6.1-2.1 7.2-5 .2-.5.3-1.1.4-1.7v-3.4z\"\n          fill=\"#181d44\"\n        />\n\n        {showTarget && (\n          <path\n            id=\"target\"\n            className={clsx(`${baseClass}__target`, animate && `${basePointsClass}--animated-2`)}\n            style={{ transform: `rotate(${target * 8}deg)` }}\n            d=\"M335.2 0l7.1 11.4 13 3.2-8.6 10.3.9 13.4-12.4-5.1-12.5 5.1 1-13.4-8.6-10.3 13-3.2z\"\n          />\n        )}\n\n        <g className=\"o-dial-numbers\">\n          <path\n            id=\"bracket-number-10-r\"\n            className={getBracketClass(10, showNeedle, needle, showTarget, target)}\n            d=\"M341.2 51.9l-3 5.4v-5.1c0-.4.1-.8.4-1.1.3-.3.6-.4 1.1-.4.8 0 1.3.4 1.5 1.2zm-2.5 9c.2.2.6.3 1 .3s.8-.1 1.1-.5c.3-.3.4-.7.4-1.1v-5.1l-3 5.3c.1.6.2.9.5 1.1zm16.8-20.2L335 340 314.5 40.7h41zm-23.8 8.5h-1.5l-3 1.5v1.5h1.5v10.5h3V49.2zm12.5 10.5v-7.5c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v7.5c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.6.9-1.3.9-2.1z\"\n            onClick={() => setNeedle(10)}\n          />\n          <path\n            id=\"bracket-number-9-r\"\n            className={getBracketClass(9, showNeedle, needle, showTarget, target)}\n            d=\"M336 51.1c.3.3.4.7.4 1.1v3c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.8-.1-1.1-.5-.3-.3-.4-.7-.4-1.1v-3c0-.4.1-.8.4-1.1s.6-.5 1.1-.5c.5.1.8.2 1.1.5zm19.5-10.4L335 340 314.5 40.7h41zm-16.1 16.7v-5.2c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v3c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h1.5c.9 0 1.4-.5 1.5-1.5v1.5c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-1.5v1.5h2.2c1.4 0 2.7-.5 3.7-1.5s1.6-2.3 1.6-3.8z\"\n            onClick={() => setNeedle(9)}\n          />\n          <path\n            id=\"bracket-number-8-r\"\n            className={getBracketClass(8, showNeedle, needle, showTarget, target)}\n            d=\"M336.4 58.2v1.5c0 .4-.1.8-.4 1.1s-.7.4-1.1.4c-.4 0-.8-.1-1.1-.4s-.4-.7-.4-1.1v-1.5c0-1 .5-1.5 1.5-1.5s1.5.5 1.5 1.5zm-1.5-7.5c-.4 0-.8.1-1.1.4-.3.3-.4.7-.4 1.1v1.5c0 .4.1.8.4 1.1.3.3.6.4 1.1.4.4 0 .8-.1 1.1-.4.3-.3.4-.6.4-1.1v-1.5c0-.4-.1-.8-.4-1.1-.3-.3-.6-.4-1.1-.4zm20.6-10L335 340 314.5 40.7h41zm-19.1 15.2c1-.1 1.7-.4 2.2-.9.5-.5.7-1.2.7-2.1v-.7c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v.7c0 .9.3 1.6.8 2.1s1.3.8 2.2.9c-1 0-1.7.3-2.2 1-.5.6-.8 1.3-.8 2v.7c0 .7.3 1.3.9 2 .6.7 1.3 1 2.1 1h3c.8 0 1.5-.3 2.1-1 .6-.7.9-1.3.9-2V59c0-.7-.2-1.4-.7-2-.4-.7-1.2-1.1-2.2-1.1z\"\n            onClick={() => setNeedle(8)}\n          />\n          <path\n            id=\"bracket-number-7-r\"\n            className={getBracketClass(7, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm24.2 13l-.8 1.5c-1 2.1-1.5 3.6-1.5 4.5v3h-3v-3c0-1 .5-2.5 1.5-4.5l1.5-3v-1.5h-6v-1.5h9v3l-.7 1.5z\"\n            onClick={() => setNeedle(7)}\n          />\n\n          <path\n            id=\"bracket-number-6-r\"\n            className={getBracketClass(6, showNeedle, needle, showTarget, target)}\n            d=\"M336 55.6c.3.3.4.7.4 1.1v3c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.8-.1-1.1-.5-.3-.3-.4-.7-.4-1.1v-3c0-.4.1-.8.4-1.1.3-.3.6-.4 1.1-.4.5 0 .8.1 1.1.4zm19.5-14.9L335 340 314.5 40.7h41zm-16.1 19v-3c0-.8-.3-1.5-.9-2.1s-1.3-.9-2.1-.9h-1.5c-.4 0-.8.1-1 .4-.3.3-.4.6-.5 1.1v-1.5c0-.8.3-1.5.9-2.1s1.3-.9 2.1-.9h1.5v-1.5h-2.2c-1.4 0-2.7.5-3.7 1.5s-1.6 2.3-1.6 3.7v5.2c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.5.9-1.2.9-2z\"\n            onClick={() => setNeedle(6)}\n          />\n\n          <path\n            id=\"bracket-number-5-r\"\n            className={getBracketClass(5, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm21.9 13c.8 0 1.5.3 2.1.9s.9 1.3.9 2.1v3c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-3c-1.8 0-2.8-1-3-3h1.5c.1 1 .6 1.5 1.5 1.5h1.5c.4 0 .8-.1 1.1-.4s.4-.7.4-1.1v-3c0-.4-.1-.8-.4-1.1-.3-.3-.7-.4-1.1-.4h-4.5v-6h9v1.5h-6v3h3z\"\n            onClick={() => setNeedle(5)}\n          />\n\n          <path\n            id=\"bracket-number-4-r\"\n            className={getBracketClass(4, showNeedle, needle, showTarget, target)}\n            d=\"M330.4 56.7l4.5-5.6v5.6h-4.5zm25.1-16L335 340 314.5 40.7h41zm-16.1 17.5v-1.5h-1.5v-7.5h-3l-6 7.5v1.5h6v4.5h3v-4.5h1.5z\"\n            onClick={() => setNeedle(4)}\n          />\n\n          <path\n            id=\"bracket-number-3-r\"\n            className={getBracketClass(3, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm21.9 13c.9 0 1.6.3 2.1 1s.8 1.3.8 2v3c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-3c-1.8 0-2.8-1-3-3h1.5c.1 1 .6 1.5 1.5 1.5h1.5c.4 0 .8-.1 1.1-.4s.4-.7.4-1.1v-3c0-.2-.1-.6-.4-.9s-.6-.6-1.1-.6h-3v-1.5l4.5-3h-6v-1.5h9v1.5l-4.5 3h1.6z\"\n            onClick={() => setNeedle(3)}\n          />\n\n          <path\n            id=\"bracket-number-2-r\"\n            className={getBracketClass(2, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm24.9 20.5v1.5h-9v-1.5c0-1 1-2.4 2.9-4l.2-.2c1.9-1.7 2.9-3 2.9-4v-.7c0-.4-.1-.8-.4-1.1-.3-.3-.7-.4-1.1-.4h-1.5c-.9 0-1.4.5-1.5 1.5h-1.5c.2-2 1.2-3 3-3h3c.8 0 1.5.3 2.1.9.6.6.9 1.3.9 2.1v.7c0 1-1 2.4-2.9 4l-.2.2c-1.9 1.7-2.9 3-2.9 3.9v.1h6z\"\n            onClick={() => setNeedle(2)}\n          />\n          <path\n            id=\"bracket-number-1-r\"\n            className={getBracketClass(1, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm18.9 22V52.2h-1.5v-1.5l3-1.5h1.5v13.5h-3z\"\n            onClick={() => setNeedle(1)}\n          />\n\n          <path\n            id=\"bracket-number-10-l\"\n            className={getBracketClass(-10, showNeedle, needle, showTarget, target)}\n            d=\"M341.2 51.9l-3 5.4v-5.1c0-.4.1-.8.4-1.1.3-.3.6-.4 1.1-.4.8 0 1.3.4 1.5 1.2zm-2.5 9c.2.2.6.3 1 .3s.8-.1 1.1-.5c.3-.3.4-.7.4-1.1v-5.1l-3 5.3c.1.6.2.9.5 1.1zm16.8-20.2L335 340 314.5 40.7h41zm-23.8 8.5h-1.5l-3 1.5v1.5h1.5v10.5h3V49.2zm12.5 10.5v-7.5c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v7.5c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.6.9-1.3.9-2.1z\"\n            onClick={() => setNeedle(-10)}\n          />\n          <path\n            id=\"bracket-number-9-l\"\n            className={getBracketClass(-9, showNeedle, needle, showTarget, target)}\n            d=\"M336 51.1c.3.3.4.7.4 1.1v3c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.8-.1-1.1-.5-.3-.3-.4-.7-.4-1.1v-3c0-.4.1-.8.4-1.1s.6-.5 1.1-.5c.5.1.8.2 1.1.5zm19.5-10.4L335 340 314.5 40.7h41zm-16.1 16.7v-5.2c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v3c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h1.5c.9 0 1.4-.5 1.5-1.5v1.5c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-1.5v1.5h2.2c1.4 0 2.7-.5 3.7-1.5s1.6-2.3 1.6-3.8z\"\n            onClick={() => setNeedle(-9)}\n          />\n          <path\n            id=\"bracket-number-8-l\"\n            className={getBracketClass(-8, showNeedle, needle, showTarget, target)}\n            d=\"M336.4 58.2v1.5c0 .4-.1.8-.4 1.1s-.7.4-1.1.4c-.4 0-.8-.1-1.1-.4s-.4-.7-.4-1.1v-1.5c0-1 .5-1.5 1.5-1.5s1.5.5 1.5 1.5zm-1.5-7.5c-.4 0-.8.1-1.1.4-.3.3-.4.7-.4 1.1v1.5c0 .4.1.8.4 1.1.3.3.6.4 1.1.4.4 0 .8-.1 1.1-.4.3-.3.4-.6.4-1.1v-1.5c0-.4-.1-.8-.4-1.1-.3-.3-.6-.4-1.1-.4zm20.6-10L335 340 314.5 40.7h41zm-19.1 15.2c1-.1 1.7-.4 2.2-.9.5-.5.7-1.2.7-2.1v-.7c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v.7c0 .9.3 1.6.8 2.1s1.3.8 2.2.9c-1 0-1.7.3-2.2 1-.5.6-.8 1.3-.8 2v.7c0 .7.3 1.3.9 2 .6.7 1.3 1 2.1 1h3c.8 0 1.5-.3 2.1-1 .6-.7.9-1.3.9-2V59c0-.7-.2-1.4-.7-2-.4-.7-1.2-1.1-2.2-1.1z\"\n            onClick={() => setNeedle(-8)}\n          />\n          <path\n            id=\"bracket-number-7-l\"\n            className={getBracketClass(-7, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm24.2 13l-.8 1.5c-1 2.1-1.5 3.6-1.5 4.5v3h-3v-3c0-1 .5-2.5 1.5-4.5l1.5-3v-1.5h-6v-1.5h9v3l-.7 1.5z\"\n            onClick={() => setNeedle(-7)}\n          />\n          <path\n            id=\"bracket-number-6-l\"\n            className={getBracketClass(-6, showNeedle, needle, showTarget, target)}\n            d=\"M336 55.6c.3.3.4.7.4 1.1v3c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.8-.1-1.1-.5-.3-.3-.4-.7-.4-1.1v-3c0-.4.1-.8.4-1.1.3-.3.6-.4 1.1-.4.5 0 .8.1 1.1.4zm19.5-14.9L335 340 314.5 40.7h41zm-16.1 19v-3c0-.8-.3-1.5-.9-2.1s-1.3-.9-2.1-.9h-1.5c-.4 0-.8.1-1 .4-.3.3-.4.6-.5 1.1v-1.5c0-.8.3-1.5.9-2.1s1.3-.9 2.1-.9h1.5v-1.5h-2.2c-1.4 0-2.7.5-3.7 1.5s-1.6 2.3-1.6 3.7v5.2c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.5.9-1.2.9-2z\"\n            onClick={() => setNeedle(-6)}\n          />\n          <path\n            id=\"bracket-number-5-l\"\n            className={getBracketClass(-5, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm21.9 13c.8 0 1.5.3 2.1.9s.9 1.3.9 2.1v3c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-3c-1.8 0-2.8-1-3-3h1.5c.1 1 .6 1.5 1.5 1.5h1.5c.4 0 .8-.1 1.1-.4s.4-.7.4-1.1v-3c0-.4-.1-.8-.4-1.1-.3-.3-.7-.4-1.1-.4h-4.5v-6h9v1.5h-6v3h3z\"\n            onClick={() => setNeedle(-5)}\n          />\n          <path\n            id=\"bracket-number-4-l\"\n            className={getBracketClass(-4, showNeedle, needle, showTarget, target)}\n            d=\"M330.4 56.7l4.5-5.6v5.6h-4.5zm25.1-16L335 340 314.5 40.7h41zm-16.1 17.5v-1.5h-1.5v-7.5h-3l-6 7.5v1.5h6v4.5h3v-4.5h1.5z\"\n            onClick={() => setNeedle(-4)}\n          />\n          <path\n            id=\"bracket-number-3-l\"\n            className={getBracketClass(-3, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm21.9 13c.9 0 1.6.3 2.1 1s.8 1.3.8 2v3c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-3c-1.8 0-2.8-1-3-3h1.5c.1 1 .6 1.5 1.5 1.5h1.5c.4 0 .8-.1 1.1-.4s.4-.7.4-1.1v-3c0-.2-.1-.6-.4-.9s-.6-.6-1.1-.6h-3v-1.5l4.5-3h-6v-1.5h9v1.5l-4.5 3h1.6z\"\n            onClick={() => setNeedle(-3)}\n          />\n          <path\n            id=\"bracket-number-2-l\"\n            className={getBracketClass(-2, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm24.9 20.5v1.5h-9v-1.5c0-1 1-2.4 2.9-4l.2-.2c1.9-1.7 2.9-3 2.9-4v-.7c0-.4-.1-.8-.4-1.1-.3-.3-.7-.4-1.1-.4h-1.5c-.9 0-1.4.5-1.5 1.5h-1.5c.2-2 1.2-3 3-3h3c.8 0 1.5.3 2.1.9.6.6.9 1.3.9 2.1v.7c0 1-1 2.4-2.9 4l-.2.2c-1.9 1.7-2.9 3-2.9 3.9v.1h6z\"\n            onClick={() => setNeedle(-2)}\n          />\n          <path\n            id=\"bracket-number-1-l\"\n            className={getBracketClass(-1, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm18.9 22V52.2h-1.5v-1.5l3-1.5h1.5v13.5h-3z\"\n            onClick={() => setNeedle(-1)}\n          />\n\n          <path\n            id=\"bracket-number-0\"\n            className={getBracketClass(0, showNeedle, needle, showTarget, target)}\n            d=\"M333.5 59.9l3-5.3v5.1c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.7-.1-1-.3-.3-.3-.5-.6-.5-1.1zm1.4-9.2c-.4 0-.8.1-1.1.4-.3.3-.4.7-.4 1.1v5.1l3-5.4c-.2-.8-.7-1.2-1.5-1.2zm20.6-10L335 340 314.5 40.7h41zm-16.1 19v-7.5c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v7.5c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.6.9-1.3.9-2.1z\"\n            onClick={() => setNeedle(0)}\n          />\n        </g>\n\n        {showNeedle && (\n          <path\n            id=\"needle\"\n            className={clsx(`${baseClass}__needle`, animate && `${basePointsClass}--animated-1`)}\n            style={{ transform: `rotate(${needle * 8}deg)` }}\n            d=\"M335 340c-.9 0-3.7-.8-3.7-1.8l2-260.6c0-1 .8-1.8 1.7-1.8.9 0 1.7.8 1.7 1.8l2 260.6c0 1-2.8 1.8-3.7 1.8z\"\n          />\n        )}\n\n        {showPoints && (\n          <g className={clsx(`${baseClass}__points`)}>\n            {points === 0 && (\n              <g>\n                <path\n                  fill=\"#29abe2\"\n                  d=\"M335.2 102.7l14 22.5 25.8 6.4-17.1 20.3 1.9 26.5-24.6-10-24.6 10 1.9-26.5-17.1-20.3 25.7-6.4z\"\n                />\n                <path\n                  d=\"M334.9 158.7v-10.1h-13.5v-3.4l13.5-16.9h6.8v16.9h3.4v3.4h-3.4v10.1h-6.8zm0-13.4v-12.7l-10.1 12.7h10.1z\"\n                  fill=\"#fff\"\n                />\n              </g>\n            )}\n\n            {points === 1 && (\n              <g>\n                <path\n                  fill=\"#a45467\"\n                  d=\"M335.2 102.7l14 22.5 25.8 6.4-17.1 20.3 1.9 26.5-24.6-10-24.6 10 1.9-26.5-17.1-20.3 25.7-6.4z\"\n                />\n                <path\n                  d=\"M324.8 130.4H345v3.4l-10.1 6.8h3.4c1.9 0 3.6.7 4.8 2.2 1.3 1.5 1.9 3 1.9 4.5v6.7c0 1.9-.7 3.5-2 4.8-1.3 1.3-2.9 2-4.7 2h-6.8c-4 0-6.2-2.3-6.8-6.8h3.4c.2 2.3 1.3 3.4 3.4 3.4h3.4c.9 0 1.7-.3 2.4-1s1-1.5 1-2.4v-6.7c0-.5-.3-1.2-.9-2.1-.6-.9-1.4-1.3-2.6-1.3h-6.7v-3.4l10.1-6.8h-13.5v-3.3z\"\n                  fill=\"#fff\"\n                />\n              </g>\n            )}\n\n            {points === 2 && (\n              <g className={clsx(`${baseClass}__points`)}>\n                <path\n                  fill=\"#a45467\"\n                  d=\"M335.2 102.7l14 22.5 25.8 6.4-17.1 20.3 1.9 26.5-24.6-10-24.6 10 1.9-26.5-17.1-20.3 25.7-6.4z\"\n                />\n                <path\n                  d=\"M328.2 136.1h-3.4c.5-4.5 2.8-6.8 6.8-6.8h6.8c1.8 0 3.4.7 4.7 2 1.3 1.3 2 2.9 2 4.8v1.7c0 2.3-2.2 5.4-6.5 9.1l-.4.4c-4.3 3.7-6.5 6.7-6.5 8.8v.3H345v3.4h-20.3v-3.4c0-2.4 2.2-5.4 6.6-9.1l.4-.4c4.3-3.7 6.5-6.8 6.5-9.1v-1.7c0-.9-.3-1.7-1-2.4s-1.5-1-2.4-1h-3.4c-1.9 0-3.1 1.2-3.2 3.4z\"\n                  fill=\"#fff\"\n                />\n              </g>\n            )}\n          </g>\n        )}\n\n        {rivalGuess === -1 && (\n          <g className={clsx(`${baseRivalClass} ${baseRivalClass}---1`)}>\n            <path\n              fill=\"#FFFFFF\"\n              d=\"M64.6 14.1c-23.9 0-43.3 14.4-43.3 32.1 0 8.8 4.8 16.8 12.6 22.6-5.3 4.6-12.3 7-19.4 6.6 1.8 1.5 3.7 2.7 5.9 3.7 9 4 19.1 2.2 26.2-3.6 5.5 1.9 11.6 2.9 18 2.9 23.9 0 43.3-14.4 43.3-32.1S88.5 14.1 64.6 14.1z\"\n            />\n            <path\n              fill=\"#f7931e\"\n              d=\"M45.4 49.1c-2.3-1.3-2.3-4.6 0-5.9l13.1-7.6L71.6 28c2.3-1.3 5.1.3 5.1 2.9v30.2c0 2.6-2.8 4.2-5.1 2.9l-13.1-7.6-13.1-7.3z\"\n            />\n            <text x=\"10\" y=\"11\" fill=\"#FFFFFF\" style={{ textAnchor: 'start' }}>\n              O time {rivalTeam} disse que tá mais pra cá!\n            </text>\n          </g>\n        )}\n\n        {rivalGuess === 1 && (\n          <g className={clsx(`${baseRivalClass} ${baseRivalClass}---1`)}>\n            <text x=\"660\" y=\"11\" fill=\"#FFFFFF\" style={{ textAnchor: 'end' }}>\n              O time {rivalTeam} disse que tá mais pra cá!\n            </text>\n            <path\n              fill=\"#FFFFFF\"\n              d=\"M605.4 14.1c23.9 0 43.3 14.4 43.3 32.1 0 8.8-4.8 16.8-12.6 22.6 5.3 4.6 12.3 7 19.4 6.6-1.8 1.5-3.7 2.7-5.9 3.7-9 4-19.1 2.2-26.2-3.6-5.5 1.9-11.6 2.9-18 2.9-23.9 0-43.3-14.4-43.3-32.1s19.4-32.2 43.3-32.2z\"\n            />\n            <path\n              fill=\"#f7931e\"\n              d=\"M624.6 49.1c2.3-1.3 2.3-4.6 0-5.9l-13.1-7.6-13.1-7.6c-2.3-1.3-5.1.3-5.1 2.9v30.2c0 2.6 2.8 4.2 5.1 2.9l13.1-7.6 13.1-7.3z\"\n            />\n          </g>\n        )}\n      </svg>\n      <Card left={card.left} right={card.right} className=\"o-dial__card\" setNeedle={setNeedle} />\n    </div>\n  );\n}\n\nDial.propTypes = {\n  card: PropTypes.shape({\n    id: PropTypes.string,\n    left: PropTypes.string,\n    right: PropTypes.string,\n  }).isRequired,\n  needle: PropTypes.number,\n  showNeedle: PropTypes.bool,\n  target: PropTypes.number,\n  showTarget: PropTypes.bool,\n  showPoints: PropTypes.bool,\n  rivalGuess: PropTypes.number,\n  rivalTeam: PropTypes.string,\n  animate: PropTypes.bool,\n};\n\nDial.defaultProps = {\n  needle: 0,\n  showNeedle: false,\n  target: 0,\n  showTarget: false,\n  showPoints: false,\n  rivalGuess: 0,\n  rivalTeam: 'rival',\n  animate: false,\n};\n\nexport default memo(Dial);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Input, Popover, Space } from 'antd';\nimport { FileUnknownOutlined } from '@ant-design/icons';\n// Components\nimport { Instruction, Title } from '../../shared';\nimport Dial from './Dial';\n\nconst getHint = (card) => {\n  if (card.target === 0) {\n    return 'número 0, bem no centro,';\n  }\n\n  if (card.target < 0) {\n    return `\"${Math.abs(card.target)}\" do lado \"${card.left}\"`;\n  }\n\n  return `\"${card.target}\" do lado \"${card.right}\"`;\n};\n\nfunction Rules() {\n  return (\n    <ul>\n      <li>\n        Use uma única idea. Evite usar \"mas\", \"enquanto\", \"quando\", e também superlativos \"super\", \"muito\"\n      </li>\n      <li>Não invente coisas. Exemplo: 'Nicolas Cage cantando uma música dos Beatles' é inválido.</li>\n      <li>Mantenha-se no assunto da carta. Exemplo: 'Amor' não é uma dica válida para 'Sujo'.</li>\n      <li>Não use números para sugerir a posição do espectro.</li>\n      <li>Não use partes, derivados ou sinônimos das palavras da carta.</li>\n    </ul>\n  );\n}\n\nfunction DialClueWriting({ onSendClue, card }) {\n  const [clue, setClue] = useState('');\n\n  const onEnterInput = (e) => {\n    if (e.key === 'Enter') {\n      onSendClue({ clue });\n    }\n  };\n\n  return (\n    <div className=\"o-dial-clue-writing\">\n      <Title>Escreva uma dica!</Title>\n      <Instruction contained>\n        Escreva uma dica que ajudará seu time a apontar o número {getHint(card)} do medidor de ondas\n        telepáticas.\n        <br />\n        <Popover title=\"Regras\" content={Rules}>\n          <Button type=\"link\" icon={<FileUnknownOutlined />}>\n            Regras\n          </Button>\n        </Popover>\n      </Instruction>\n\n      <Dial card={card} showTarget target={card.target} />\n\n      <Space className=\"container container--center container--transparent\">\n        <Input\n          onChange={(e) => setClue(e.target.value.toUpperCase())}\n          placeholder=\"Digite sua dica aqui\"\n          className=\"uppercase-input\"\n          onKeyPress={onEnterInput}\n        />\n        <Button\n          type=\"primary\"\n          disabled={!Boolean(clue)}\n          onClick={() => {\n            onSendClue({ clue });\n          }}\n        >\n          Enviar dica\n        </Button>\n      </Space>\n    </div>\n  );\n}\n\nDialClueWriting.propTypes = {\n  onSendClue: PropTypes.func.isRequired,\n  card: PropTypes.shape({\n    id: PropTypes.string,\n    left: PropTypes.string,\n    right: PropTypes.string,\n  }).isRequired,\n};\n\nexport default DialClueWriting;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useIsUserReady, useWhichPlayerIsThe, useIsUserThe, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { ONDA_TELEPATICA } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { PhaseContainer, StepSwitcher, Step, View, WaitingRoom } from '../../shared';\nimport Card from './Card';\nimport DialClueWriting from './DialClueWriting';\n\nfunction DialCluePhase({ state, players, info }) {\n  const isUserReady = useIsUserReady(players, state);\n  const [step, setStep] = useState(0);\n  const psychic = useWhichPlayerIsThe('psychic', state, players);\n  const isUserThePsychic = useIsUserThe('psychic', state);\n\n  const onSendClue = useAPICall({\n    apiFunction: ONDA_TELEPATICA.submitClue,\n    actionName: 'submit-clue',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage: 'Dica submetida com sucesso',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar enviar a dica',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ONDA_TELEPATICA.DIAL_CLUE}\n      className=\"o-dial-clue-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady]}>\n        {/* Step 0 */}\n        <Step>\n          <View visibleIf={isUserThePsychic}>\n            <DialClueWriting card={state.card} onSendClue={onSendClue} />\n          </View>\n\n          <View visibleIf={!isUserThePsychic}>\n            <WaitingRoom\n              players={players}\n              title={`${psychic.name} está pensando em uma dica...`}\n              instruction=\"Aguarde enquanto ele(a) escreve uma dica para:\"\n            >\n              <div className=\"container container--center\">\n                <Card left={state.card.left} right={state.card.right} />\n              </div>\n            </WaitingRoom>\n          </View>\n        </Step>\n\n        {/* Step 1 */}\n        <WaitingRoom\n          players={players}\n          title=\"Pronto!\"\n          instruction=\"Vamos aguardar o jogo iniciar a próxima fase.\"\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nDialCluePhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default DialCluePhase;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Popconfirm, Slider } from 'antd';\n// Components\nimport { ButtonContainer, Instruction, Title } from '../../shared';\nimport Dial from './Dial';\nimport { AvatarName } from '../../avatars';\n\nfunction Prompt({ card }) {\n  return (\n    <Instruction contained>\n      Qual número melhor indica <span className=\"o-dial-guess-selection__clue\">{card.clue}</span> na escala de{' '}\n      <strong>\n        {card.left}-{card.right}\n      </strong>\n      ?\n    </Instruction>\n  );\n}\n\nfunction TeamInstructions({ teamController }) {\n  return (\n    <Instruction contained>\n      <ul>\n        <li>\n          Discuta com seu time em qual número do medidor de ondas telepáticas você acha que a dica se melhor\n          encaixa.\n        </li>\n        <li>\n          Todos podem controlar o ponteiro usando a barra abaixo, mas somente{' '}\n          <AvatarName player={teamController} addressUser /> pode apertar o botão para enviar a resposta\n          final.\n        </li>\n      </ul>\n    </Instruction>\n  );\n}\n\nfunction PsychicView({ card, needle, setNeedle }) {\n  return (\n    <div className=\"o-dial-guess-selection\">\n      <Title>Seu time está pensando...</Title>\n      <Prompt card={card} />\n      <Dial card={card} target={card.target} needle={needle} showNeedle showTarget setNeedle={setNeedle} />\n      <Instruction contained>Pokerface e bico fechado!</Instruction>\n    </div>\n  );\n}\n\nfunction ControllerView({ activeTeam, card, needle, onSendGuess, setNeedle, teamController }) {\n  return (\n    <div className=\"o-dial-guess-selection\">\n      <Title>Hora de brilhar, Time {activeTeam}!</Title>\n      <Prompt card={card} />\n      <Dial\n        card={card}\n        target={card.target}\n        needle={needle}\n        showNeedle\n        showTarget={false}\n        setNeedle={setNeedle}\n      />\n      <Slider defaultValue={0} min={-10} max={10} onChange={setNeedle} value={needle} />\n      <TeamInstructions teamController={teamController} />\n      <ButtonContainer>\n        <Popconfirm\n          title=\"Essa é a sua resposta final?\"\n          onConfirm={() => {\n            onSendGuess({ guess: needle });\n          }}\n          okText=\"Sim\"\n          cancelText=\"Não\"\n        >\n          <Button type=\"primary\">\n            Enviar resposta: {needle < 0 ? card.left : card.right} » {Math.abs(needle)}\n          </Button>\n        </Popconfirm>\n      </ButtonContainer>\n    </div>\n  );\n}\n\nfunction ActiveTeamView({ activeTeam, card, needle, setNeedle, teamController }) {\n  return (\n    <div className=\"o-dial-guess-selection\">\n      <Title>Hora de brilhar, Time {activeTeam}!</Title>\n      <Prompt card={card} />\n      <Dial\n        card={card}\n        target={card.target}\n        needle={needle}\n        showNeedle\n        showTarget={false}\n        setNeedle={setNeedle}\n      />\n      <Slider defaultValue={0} min={-10} max={10} onChange={setNeedle} value={needle} />\n      <TeamInstructions teamController={teamController} />\n    </div>\n  );\n}\n\nfunction OtherTeamView({ activeTeam, card, needle }) {\n  return (\n    <div className=\"o-dial-guess-selection\">\n      <Title>Hora do time {activeTeam} brilhar!</Title>\n      <Prompt card={card} />\n      <Dial card={card} target={card.target} needle={needle} showNeedle={false} showTarget={false} />\n      <Instruction contained>\n        O outro time agora está tentando adivinhar onde no medidor de ondas telepáticas a dica se encaixa\n        melhor. Daqui a pouco, você e seu time terão a change de contra-atacar dizendo se a solução está mais\n        para esquerda ou mais para a direita do que eles escolheram!\n      </Instruction>\n    </div>\n  );\n}\n\nfunction viewDelegator(isUserThePsychic, isUserTheController, isUsersTeamActive) {\n  if (isUserThePsychic) {\n    return PsychicView;\n  }\n  if (isUserTheController) {\n    return ControllerView;\n  }\n  if (isUsersTeamActive) {\n    return ActiveTeamView;\n  }\n  return OtherTeamView;\n}\n\nfunction DialGuessSelection({\n  activeTeam,\n  card,\n  isUsersTeamActive,\n  isUserTheController,\n  isUserThePsychic,\n  onSendGuess,\n  teamController,\n}) {\n  const [needle, setNeedle] = useState(0);\n\n  const ActiveComponent = viewDelegator(isUserThePsychic, isUserTheController, isUsersTeamActive);\n\n  return (\n    <ActiveComponent\n      activeTeam={activeTeam}\n      needle={needle}\n      onSendGuess={onSendGuess}\n      teamController={teamController}\n      card={card}\n      setNeedle={setNeedle}\n    />\n  );\n}\n\nDialGuessSelection.propTypes = {\n  onSendGuess: PropTypes.func.isRequired,\n  card: PropTypes.shape({\n    id: PropTypes.string,\n    left: PropTypes.string,\n    right: PropTypes.string,\n  }).isRequired,\n  activeTeam: PropTypes.oneOf(['A', 'B']),\n  teamController: PropTypes.object,\n  isUserTheController: PropTypes.bool,\n  isMyTeamActive: PropTypes.bool,\n  isUserThePsychic: PropTypes.bool,\n};\n\nexport default DialGuessSelection;\n","import React from 'react';\nimport { message } from 'antd';\n\nexport const messageContent = (title, description, id) => {\n  const key = `${id} - ${title}`;\n\n  return {\n    content: (\n      <div>\n        <h1>{title}</h1>\n        <p>{description}</p>\n        <p>\n          <small>Click para fechar</small>\n        </p>\n      </div>\n    ),\n    top: window.innerWidth / 2 - 100,\n    duration: 30,\n    key,\n    onClick: () => message.destroy(key),\n  };\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { message } from 'antd';\n// Hooks\nimport {\n  useIsUserReady,\n  useWhichPlayerIsThe,\n  useIsUserThe,\n  useAPICall,\n  useIsUsersTeamActive,\n} from '../../../hooks';\n// Resources & Utils\nimport { ONDA_TELEPATICA } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { PhaseContainer, StepSwitcher, WaitingRoom } from '../../shared';\nimport DialGuessSelection from './DialGuessSelection';\nimport { messageContent } from '../../modals/messageContent';\n\nfunction GuessPhase({ state, players, info }) {\n  const isUserReady = useIsUserReady(players, state);\n  const [step, setStep] = useState(0);\n  const psychic = useWhichPlayerIsThe('psychic', state, players);\n  const controller = useWhichPlayerIsThe('teamController', state, players);\n  const isUserTheController = useIsUserThe('teamController', state);\n  const isUserThePsychic = useIsUserThe('psychic', state);\n  const isUsersTeamActive = useIsUsersTeamActive(state, players);\n\n  const onSendGuess = useAPICall({\n    apiFunction: ONDA_TELEPATICA.submitGuess,\n    actionName: 'submit-guess',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage: 'Chute submetido com sucesso',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar enviar seu chute',\n  });\n\n  useEffect(() => {\n    if (isUserTheController) {\n      message.info(\n        messageContent(\n          'Você controla!',\n          'Move o ponteiro para a posição desejada pelo time e aperte Enviar Resposta',\n          controller.name\n        )\n      );\n    }\n  }, [isUserTheController, controller.name]);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ONDA_TELEPATICA.GUESS}\n      className=\"o-guess-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady]}>\n        {/* Step 0 */}\n        <DialGuessSelection\n          activeTeam={state.activeTeam}\n          psychic={psychic}\n          teamController={controller}\n          isUserTheController={isUserTheController}\n          onSendGuess={onSendGuess}\n          isUsersTeamActive={isUsersTeamActive}\n          card={state.card}\n          isUserThePsychic={isUserThePsychic}\n        />\n\n        {/* Step 1 */}\n        <WaitingRoom\n          players={players}\n          title=\"Pronto!\"\n          instruction=\"Vamos aguardar o jogo iniciar a próxima fase.\"\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nGuessPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default GuessPhase;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button } from 'antd';\nimport { BackwardOutlined, ForwardOutlined } from '@ant-design/icons';\n// Components\nimport { ButtonContainer, Instruction, Title } from '../../shared';\nimport Dial from './Dial';\nimport { AvatarName } from '../../avatars';\n\nfunction Prompt({ card }) {\n  return (\n    <Instruction contained>\n      A solução esta mais pra esquerda ou mais pr direita do número {card.needle} para a dica{' '}\n      <span className=\"o-dial-guess-selection__clue\">{card.clue}</span> na escala de{' '}\n      <strong>\n        {card.left}-{card.right}\n      </strong>\n      ?\n    </Instruction>\n  );\n}\n\nfunction TeamInstructions({ rivalController }) {\n  return (\n    <Instruction contained>\n      Você pode ganhar um ponto se escolher a direção correta.\n      <br />\n      <AvatarName player={rivalController} addressUser /> está no comando para apertar os botões! <br />E\n      então, a solução está mais para a esquerda ou mais para a direita do ponteiro vermelho?\n    </Instruction>\n  );\n}\n\nfunction RivalControllerView({ activeTeam, card, onSendRivalGuess, rivalController }) {\n  return (\n    <div className=\"o-dial-guess-selection\">\n      <Title>Hora de brilhar, Time {activeTeam}!</Title>\n      <Prompt card={card} />\n      <ButtonContainer>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            onSendRivalGuess({ rivalGuess: -1 });\n          }}\n        >\n          <BackwardOutlined /> Mais para a esquerda\n        </Button>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            onSendRivalGuess({ rivalGuess: 1 });\n          }}\n        >\n          Mais para a direita <ForwardOutlined />\n        </Button>\n      </ButtonContainer>\n      <Dial card={card} showTarget={false} target={card.target} showNeedle needle={card.needle} />\n      <TeamInstructions rivalController={rivalController} />\n    </div>\n  );\n}\n\nfunction RivalTeamView({ card, rivalController }) {\n  return (\n    <div className=\"o-dial-guess-selection\">\n      <Title>Hora de contra-atacar!</Title>\n      <Prompt card={card} />\n      <Dial card={card} showTarget={false} target={card.target} showNeedle needle={card.needle} />\n      <TeamInstructions rivalController={rivalController} />\n    </div>\n  );\n}\n\nfunction OtherTeamView({ card, rivalTeam }) {\n  return (\n    <div className=\"o-dial-guess-selection\">\n      <Title>Hora do time {rivalTeam} contra-atacar!</Title>\n      <Prompt card={card} />\n      <Dial card={card} showTarget={false} target={card.target} showNeedle needle={card.needle} />\n      <Instruction contained>\n        Agora, o time oposto tem a chance de ganhar 1 ponto ao tentar adivinhar se a solução está mais para a\n        esquerda ou mais para a direita do que o seu time escolheu.\n      </Instruction>\n    </div>\n  );\n}\n\nfunction viewDelegator(isUserTheRivalController, isUsersTeamRival) {\n  if (isUserTheRivalController) {\n    return RivalControllerView;\n  }\n  if (isUsersTeamRival) {\n    return RivalTeamView;\n  }\n  return OtherTeamView;\n}\n\nfunction DialRivalSelection({\n  rivalTeam,\n  rivalController,\n  isUserTheRivalController,\n  isUsersTeamRival,\n  onSendRivalGuess,\n  card,\n}) {\n  const ActiveComponent = viewDelegator(isUserTheRivalController, isUsersTeamRival);\n\n  return (\n    <ActiveComponent\n      card={card}\n      rivalTeam={rivalTeam}\n      rivalController={rivalController}\n      onSendRivalGuess={onSendRivalGuess}\n    />\n\n    // return (\n    //   <div className=\"o-dial-guess-selection\">\n    //     <Title>Hora do time {rivalTeam} contra-atacar!</Title>\n    //     <Instruction contained>\n    //       A solução esta mais pra esquerda ou mais pr direita do número {card.needle} para a dica{' '}\n    //       <span className=\"o-dial-guess-selection__clue\">{card.clue}</span> na escala de{' '}\n    //       <strong>\n    //         {card.left}-{card.right}\n    //       </strong>\n    //       ?\n    //     </Instruction>\n\n    //     <Dial card={card} showTarget={false} target={card.target} showNeedle needle={card.needle} />\n\n    //     {isUsersTeamRival ? (\n    //       <Instruction contained>\n    //         Você pode ganhar um ponto se escolher a direção correta.\n    //         <br />\n    //         {isUserTheRivalController ? 'VOCÊ ' : <AvatarName player={rivalController} />}está no comando para\n    //         apertar os botões! <br />E então, a solução está mais para a esquerda ou mais para a direita do\n    //         ponteiro vermelho?\n    //       </Instruction>\n    //     ) : (\n    //       <Instruction contained>\n    //         Agora, o time oposto tem a chance de ganhar 1 ponto ao tentar adivinhar se a solução está mais para\n    //         a esquerda ou mais para a direita do que o seu time escolheu.\n    //       </Instruction>\n    //     )}\n\n    //     {isUserTheRivalController && (\n    //       <div className=\"container container--center container--transparent\">\n    //         <Space>\n    //           <Button\n    //             type=\"primary\"\n    //             onClick={() => {\n    //               onSendRivalGuess({ rivalGuess: -1 });\n    //             }}\n    //           >\n    //             <BackwardOutlined /> Mais para a esquerda\n    //           </Button>\n    //           <Button\n    //             type=\"primary\"\n    //             onClick={() => {\n    //               onSendRivalGuess({ rivalGuess: 1 });\n    //             }}\n    //           >\n    //             Mais para a direita <ForwardOutlined />\n    //           </Button>\n    //         </Space>\n    //       </div>\n    //     )}\n    //   </div>\n  );\n}\n\nDialRivalSelection.propTypes = {\n  onSendRivalGuess: PropTypes.func.isRequired,\n  card: PropTypes.shape({\n    id: PropTypes.string,\n    left: PropTypes.string,\n    right: PropTypes.string,\n  }).isRequired,\n  rivalTeam: PropTypes.oneOf(['A', 'B']),\n  rivalController: PropTypes.object,\n  isUserTheRivalController: PropTypes.bool,\n  isUsersTeamRival: PropTypes.bool,\n};\n\nexport default DialRivalSelection;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { message } from 'antd';\n// Hooks\nimport {\n  useIsUserReady,\n  useWhichPlayerIsThe,\n  useIsUserThe,\n  useAPICall,\n  useIsUsersTeamActive,\n} from '../../../hooks';\n// Resources & Utils\nimport { ONDA_TELEPATICA } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\nimport { getOppositeTeam } from '../../../utils';\n// Components\nimport { PhaseContainer, StepSwitcher, WaitingRoom } from '../../shared';\nimport DialRivalSelection from './DialRivalSelection';\nimport { messageContent } from '../../modals/messageContent';\n\nfunction RivalPhase({ state, players, info }) {\n  const isUserReady = useIsUserReady(players, state);\n  const [step, setStep] = useState(0);\n  const rivalController = useWhichPlayerIsThe('rivalController', state, players);\n  const isUserTheRivalController = useIsUserThe('rivalController', state);\n  const isUsersTeamActive = useIsUsersTeamActive(state, players);\n\n  const onSendRivalGuess = useAPICall({\n    apiFunction: ONDA_TELEPATICA.submitRivalGuess,\n    actionName: 'submit-rival-guess',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage: 'Chute submetido com sucesso',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar enviar seu chute',\n  });\n\n  useEffect(() => {\n    if (isUserTheRivalController) {\n      message.info(\n        messageContent('Você controla!', 'Aperte um dos botões após seu time discutir', rivalController.name)\n      );\n    }\n  }, [isUserTheRivalController, rivalController.name]);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ONDA_TELEPATICA.RIVAL_GUESS}\n      className=\"o-guess-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady]}>\n        {/* Step 0 */}\n        <DialRivalSelection\n          rivalTeam={getOppositeTeam(state.teams, state.activeTeam)}\n          rivalController={rivalController}\n          isUserTheRivalController={isUserTheRivalController}\n          onSendRivalGuess={onSendRivalGuess}\n          isUsersTeamRival={!isUsersTeamActive}\n          card={state.card}\n        />\n\n        {/* Step 1 */}\n        <WaitingRoom\n          players={players}\n          title=\"Pronto!\"\n          instruction=\"Vamos aguardar o jogo iniciar a próxima fase.\"\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nRivalPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default RivalPhase;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTimer } from 'react-timer-hook';\n// Design Resources\nimport { Button, message, Popover } from 'antd';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n// Hooks\nimport { useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { GAME_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\nimport { getOppositeTeam, inNSeconds } from '../../../utils';\n// Components\nimport { AdminOnlyButton, Instruction, PhaseContainer, Title } from '../../shared';\n\nimport Dial from './Dial';\n\nfunction getResultInstructionLine(pointsBreakdown, team, catchup = false) {\n  const { got, now } = pointsBreakdown;\n\n  if (got === 0) {\n    return `O time ${team} não conseguiu nenhum ponto dessa vez e continua com ${now} pontos.\n      `;\n  }\n\n  if (got === 3) {\n    return `Quase na mosca! O time ${team} ganhou 3 pontos!`;\n  }\n\n  if (got === 4 && catchup) {\n    return `\n        Wow! O time ${team} ganhou ${got} pontos nessa rodada e agora tem ${now} pontos, mas como eles estão indo\n        muito mal vão ter rodada dupla!\n      `;\n  }\n\n  if (got === 4) {\n    return `Na mosca!!! 4 pontos para o time ${team}`;\n  }\n\n  return `\n      O time ${team} ganhou ${got} pontos nessa rodada e agora tá com ${now} pontos.\n    `;\n}\n\nfunction getRivalResultInstructionLine(pointsBreakdown, team) {\n  const { got } = pointsBreakdown;\n\n  if (got === 0) {\n    return `\n        O contra-ataque falhou para o time ${team}.\n      `;\n  }\n\n  return `\n      O time ${team} conseguiu contra atacar e ganhou ${got} ponto!\n    `;\n}\n\nconst getMessageType = (value) => {\n  switch (value) {\n    case 4:\n    case 3:\n      return 'success';\n    case 2:\n      return 'info';\n    default:\n      return 'error';\n  }\n};\n\nfunction RevealPhase({ state, players, info }) {\n  const onGoToNextRound = useAPICall({\n    apiFunction: GAME_API.goToNextPhase,\n    actionName: 'next-phase',\n    successMessage: 'Próxima fase ativada com sucesso',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar ir pra próxima fase',\n  });\n\n  const showMessage = () => {\n    const activeTeamMessageType = getMessageType(state.pointsBreakdown[state.activeTeam].got);\n\n    message[activeTeamMessageType](\n      getResultInstructionLine(\n        state.pointsBreakdown[state.activeTeam],\n        state.activeTeam,\n        state.shouldCatchup\n      ),\n      5\n    );\n    message.info(getRivalResultInstructionLine(state.pointsBreakdown[rivalTeam], rivalTeam), 6);\n  };\n\n  const { seconds } = useTimer({\n    expiryTimestamp: inNSeconds(7),\n    onExpire: showMessage,\n    autoStart: true,\n  });\n\n  const rivalTeam = getOppositeTeam(state.teams, state.activeTeam);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ONDA_TELEPATICA.REVEAL}\n      className=\"o-guess-phase\"\n    >\n      <Title>E o resultado é...</Title>\n      <Dial\n        card={state.card}\n        showNeedle={seconds < 6}\n        needle={state.card.needle}\n        showTarget={seconds < 4}\n        target={state.card.target}\n        showPoints={seconds < 1}\n        points={state?.pointsBreakdown?.[state?.activeTeam].got}\n        rivalGuess={state.card.rival}\n        rivalTeam={rivalTeam}\n        animate\n      />\n\n      {seconds < 1 && (\n        <Instruction contained>\n          <p>\n            {getResultInstructionLine(\n              state.pointsBreakdown[state.activeTeam],\n              state.activeTeam,\n              state.shouldCatchup\n            )}\n          </p>\n          <p>{getRivalResultInstructionLine(state.pointsBreakdown[rivalTeam], rivalTeam)}</p>\n          <Popover title=\"Como a distribuição de pontos functiona?\" content={PointDistributionExplanation}>\n            <Button type=\"link\" icon={<InfoCircleOutlined />}>\n              Como a distribuição de pontos funciona?\n            </Button>\n          </Popover>\n        </Instruction>\n      )}\n\n      <AdminOnlyButton action={() => onGoToNextRound({})} label=\"Ir para próxima rodada ou game over\" />\n    </PhaseContainer>\n  );\n}\n\nfunction PointDistributionExplanation() {\n  return (\n    <div>\n      Distribuição de pontos:\n      <ul>\n        <li>Na mosca: 4 pontos</li>\n        <li>Quase: 3 pontos</li>\n        <li>Dois de distância: 2 pontos</li>\n        <li>Mais de dois distância: 0 ponto</li>\n        <li>Time adversário acertou a direção: 1 ponto</li>\n      </ul>\n    </div>\n  );\n}\n\nRevealPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default RevealPhase;\n","import React from 'react';\n// Hooks\nimport { GAME_COLLECTION, PHASES } from '../../../utils/constants';\n// Components\nimport { GameOver, Session } from '../../shared';\nimport Lobby from '../../lobby/Lobby';\nimport Rules from '../../rules/Rules';\nimport PageError from '../../errors/PageError';\nimport DialSidesPhase from './DialSidesPhase';\nimport DialCluePhase from './DialCluePhase';\nimport GuessPhase from './GuessPhase';\nimport RivalPhase from './RivalPhase';\nimport RevealPhase from './RevealPhase';\n\nfunction SessionOndaTelepatica({ gameId }) {\n  function getActiveComponent(phase) {\n    switch (phase) {\n      case PHASES.ONDA_TELEPATICA.LOBBY:\n        return Lobby;\n      case PHASES.ONDA_TELEPATICA.RULES:\n        return Rules;\n      case PHASES.ONDA_TELEPATICA.DIAL_SIDES:\n        return DialSidesPhase;\n      case PHASES.ONDA_TELEPATICA.DIAL_CLUE:\n        return DialCluePhase;\n      case PHASES.ONDA_TELEPATICA.GUESS:\n        return GuessPhase;\n      case PHASES.ONDA_TELEPATICA.RIVAL_GUESS:\n        return RivalPhase;\n      case PHASES.ONDA_TELEPATICA.REVEAL:\n        return RevealPhase;\n      case PHASES.ONDA_TELEPATICA.GAME_OVER:\n        return GameOver;\n      default:\n        return PageError;\n    }\n  }\n\n  return (\n    <Session\n      gameId={gameId}\n      gameCollection={GAME_COLLECTION.ONDA_TELEPATICA}\n      getActiveComponent={getActiveComponent}\n    />\n  );\n}\n\nexport default SessionOndaTelepatica;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { CheckCircleFilled, CloudUploadOutlined } from '@ant-design/icons';\n// Components\nimport { Instruction, Step, TimedButton, Title } from '../../shared';\nimport { AvatarName } from '../../avatars';\n\nfunction WordSelectionStep({ guesser, onSendSelectedWords, words = [] }) {\n  const [selectedWords, setSelectedWords] = useState({});\n\n  const selectedWordsArray = Object.keys(selectedWords);\n  const noSelection = selectedWordsArray.length === 0;\n\n  const autoSelectRandomWord = () => {\n    const randomSelection = words[0].id;\n    onSendSelectedWords({ votes: [randomSelection] });\n  };\n\n  const onSelectWord = (wordId) => {\n    setSelectedWords((s) => {\n      const newState = { ...s };\n      if (newState[wordId]) {\n        delete newState[wordId];\n      } else {\n        newState[wordId] = true;\n      }\n      return newState;\n    });\n  };\n\n  return (\n    <Step>\n      <Title white>\n        Selecione a Palavra-Secreta para <AvatarName player={guesser} />\n      </Title>\n\n      <Instruction white>\n        A palavra secreta com mais votos será escolhida para essa rodada. Você pode selecionar quantas quiser!\n      </Instruction>\n\n      <ul className=\"u-word-card\">\n        {words.map((word) => {\n          return (\n            <li className=\"u-word-card__word\" key={word.id}>\n              <button className=\"u-word-card__button\" onClick={() => onSelectWord(word.id)}>\n                <span className=\"u-word-card__text\">{word.text}</span>\n                <span className=\"u-word-card__icon\">{selectedWords[word.id] && <CheckCircleFilled />}</span>\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n\n      <TimedButton\n        label=\"Enviar votos\"\n        icon={<CloudUploadOutlined />}\n        type=\"primary\"\n        onClick={() => onSendSelectedWords({ votes: selectedWordsArray })}\n        disabled={noSelection}\n        onExpire={autoSelectRandomWord}\n        duration={15}\n        showTimer={noSelection}\n      />\n    </Step>\n  );\n}\n\nWordSelectionStep.propTypes = {\n  guesser: PropTypes.shape({\n    avatarId: PropTypes.number,\n    name: PropTypes.string,\n  }),\n  onSendSelectedWords: PropTypes.func.isRequired,\n  words: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      text: PropTypes.string,\n    })\n  ),\n};\n\nexport default WordSelectionStep;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Progress } from 'antd';\n// Hooks\nimport { useIsUserReady, useIsUserThe, useWhichPlayerIsThe, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { UE_SO_ISSO_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport {\n  Instruction,\n  PhaseContainer,\n  RoundAnnouncement,\n  Step,\n  StepSwitcher,\n  View,\n  WaitingRoom,\n} from '../../shared';\nimport WordSelectionStep from './WordSelectionStep';\nimport { AvatarName } from '../../avatars';\n\nfunction WordSelectionPhase({ state, players, info }) {\n  const isUserReady = useIsUserReady(players, state);\n  const guesser = useWhichPlayerIsThe('guesser', state, players);\n  const isUserTheGuesser = useIsUserThe('guesser', state);\n  const [step, setStep] = useState(0);\n\n  const onSendSelectedWords = useAPICall({\n    apiFunction: UE_SO_ISSO_API.submitWordSelectionVotes,\n    actionName: 'submit-votes',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: 'Aguarde enquanto os outros participantes votam',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar seus votos',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.UE_SO_ISSO.WORD_SELECTION}\n      className=\"u-word-selection-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady]}>\n        {/* Step 0 */}\n        <RoundAnnouncement round={state.round} onPressButton={() => setStep(1)} time={7}>\n          <Instruction contained>\n            Para essa rodada, <AvatarName player={guesser} addressUser /> será o(a) adivinhador(a) <br />\n            {state?.nextGuesser ? `Próximo adivinhador(a): ${state.nextGuesser}` : 'Essa é a última rodada'}\n          </Instruction>\n          <div className=\"u-word-selection-phase__team-points\">\n            Pontos do Grupo:\n            <br />\n            <Progress\n              percent={state.groupScore ?? 0}\n              status=\"active\"\n              strokeColor={{\n                '0%': '#ff0000',\n                '70%': '#ff0000',\n                '100%': '#87d068',\n              }}\n            />\n          </div>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <Step fullWidth>\n          <View visibleIf={isUserTheGuesser}>\n            <WaitingRoom\n              players={players}\n              title=\"Você é o(a) adivinhador(a)\"\n              instruction=\"Aguarde os outros jogadores decidirem a palavra secreta.\"\n            />\n          </View>\n\n          <View visibleIf={!isUserTheGuesser}>\n            <WordSelectionStep\n              words={state?.words}\n              onSendSelectedWords={onSendSelectedWords}\n              guesser={guesser}\n            />\n          </View>\n        </Step>\n\n        {/* Step 2 */}\n        <WaitingRoom players={players} title=\"Pronto!\" instruction=\"Vamos aguardar os outros joadores.\" />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nWordSelectionPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default WordSelectionPhase;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { WarningOutlined } from '@ant-design/icons';\n// Components\nimport Card from './Card';\n\nfunction UeSoIssoCard({ word, header = 'Palavra Secreta' }) {\n  return (\n    <Card color=\"purple\" header={header} size=\"large\">\n      {word ?? <WarningOutlined />}\n    </Card>\n  );\n}\n\nUeSoIssoCard.propTypes = {\n  word: PropTypes.any.isRequired,\n  title: PropTypes.string,\n};\n\nexport default memo(UeSoIssoCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Input } from 'antd';\n\nfunction SuggestionEasel({ id, onChangeInput, value }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 230 60\"\n      overflow=\"visible\"\n      width=\"230\"\n      className=\"u-suggestion-easel\"\n    >\n      <path fill=\"#fff\" d=\"M26.7 59.5L14.1.5h202.7l12.6 59z\" />\n      <path fill=\"#4d4d4d\" d=\"M216.4 1l12.4 58H27.1L14.7 1h201.7m.8-1H13.5l12.8 60H230L217.2 0z\" />\n      <path fill=\"#4d4d4d\" d=\"M24.2 48.3L13.5 0 0 48.3z\" />\n      <foreignObject x=\"32.6\" y=\"13.9\" width=\"185\" height=\"300\">\n        <div xmlns=\"http://www.w3.org/1999/xhtml\">\n          <Input\n            placeholder=\"Escreva dica aqui\"\n            key={id}\n            id={id}\n            value={value}\n            onChange={onChangeInput}\n            className=\"u-suggestion-easel__input\"\n            bordered={false}\n          />\n        </div>\n      </foreignObject>\n      <path opacity=\".2\" d=\"M0 48.3L26.3 60l-2.1-11.7z\" />\n    </svg>\n  );\n}\n\nSuggestionEasel.propTypes = {\n  id: PropTypes.string,\n  onChangeInput: PropTypes.func,\n  value: PropTypes.string,\n};\n\nexport default SuggestionEasel;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Space } from 'antd';\nimport { CloudUploadOutlined } from '@ant-design/icons';\n// Components\nimport { Instruction, Step, Title } from '../../shared';\nimport Card from '../../cards/UeSoIssoCard';\nimport { AvatarName } from '../../avatars';\nimport SuggestionEasel from './SuggestionEasel';\n\nfunction SuggestionStep({ guesser, onSendSuggestions, secretWord, suggestionsNumber = 1 }) {\n  const [suggestions, setSuggestions] = useState([]);\n\n  const onChangeInput = (e) => {\n    const { id, value } = e.target;\n    if (id && value?.length > 1) {\n      const indexStr = id.split('-')[1];\n      const index = Number(indexStr) - 1;\n      setSuggestions((s) => {\n        const newState = { ...s };\n        newState[index] = value.toUpperCase().trim();\n        return newState;\n      });\n    }\n  };\n\n  const suggestionsValues = Object.values(suggestions);\n\n  return (\n    <Step>\n      <Title>\n        Escreva uma dica para <AvatarName player={guesser} />\n      </Title>\n\n      <Instruction contained>\n        A dica tem que ser uma palavra única que ajude o adivinhador... adivinhar.\n        <br />\n        É proibido usar derivados, partes da palavra ou traduções em outras línguas.\n        <br />\n        E não seja tão óbvio, já que dicas similares são eliminadas.\n        <br />\n      </Instruction>\n\n      <Card word={secretWord.text} header=\"Palavra Secreta\" />\n\n      {suggestionsNumber > 1 && (\n        <Instruction contained>\n          Já que esse jogo tem menos jogadores, você tem que escrever {suggestionsNumber} sugestões\n        </Instruction>\n      )}\n\n      <Space className=\"u-word-suggestion-step__inputs\">\n        {Array(suggestionsNumber)\n          .fill(1)\n          .map((entry, index) => {\n            const id = `suggestion-${entry + index}`;\n            return <SuggestionEasel key={id} id={id} onChangeInput={onChangeInput} />;\n          })}\n      </Space>\n\n      <Space className=\"u-word-suggestion-step__submit\">\n        <Button\n          icon={<CloudUploadOutlined />}\n          type=\"primary\"\n          onClick={() => onSendSuggestions({ suggestions: suggestionsValues })}\n          disabled={suggestionsValues.length < suggestionsNumber}\n        >\n          {suggestionsNumber > 1 ? 'Enviar sugestões' : 'Enviar sugestão'}\n        </Button>\n      </Space>\n    </Step>\n  );\n}\n\nSuggestionStep.propTypes = {\n  guesser: PropTypes.shape({\n    avatarId: PropTypes.number,\n    name: PropTypes.string,\n  }),\n  onSendSuggestions: PropTypes.func,\n  secretWord: PropTypes.shape({ text: PropTypes.string }),\n  suggestionsNumber: PropTypes.number,\n};\n\nSuggestionStep.defaultProps = {\n  suggestionsNumber: 1,\n};\n\nexport default SuggestionStep;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useIsUserReady, useWhichPlayerIsThe, useIsUserThe, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { UE_SO_ISSO_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { PhaseContainer, Step, StepSwitcher, View, WaitingRoom } from '../../shared';\nimport SuggestionStep from './SuggestionStep';\n\nfunction SuggestPhase({ state, players, info }) {\n  const isUserReady = useIsUserReady(players, state);\n  const [step, setStep] = useState(0);\n  const guesser = useWhichPlayerIsThe('guesser', state, players);\n  const isUserTheGuesser = useIsUserThe('guesser', state);\n\n  const onSendSuggestions = useAPICall({\n    apiFunction: UE_SO_ISSO_API.submitSuggestions,\n    actionName: 'submit-suggestion',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage:\n      'Sugestão enviada com successo! Aguarde enquanto os outros participantes escrevem suas dicas',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar sua(s) dica(s)',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.UE_SO_ISSO.SUGGEST}\n      className=\"word-selection-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady]}>\n        {/* Step 0 */}\n        <Step fullWidth>\n          <View visibleIf={isUserTheGuesser}>\n            <WaitingRoom\n              players={players}\n              title=\"Você é o(a) adivinhador(a)\"\n              instruction=\"Aguarde enquanto os outros jogadores escrevem dicas para você adivinhar.\"\n            />\n          </View>\n\n          <View visibleIf={!isUserTheGuesser}>\n            <SuggestionStep\n              guesser={guesser}\n              onSendSuggestions={onSendSuggestions}\n              secretWord={state.secretWord}\n              suggestionsNumber={state.suggestionsNumber}\n            />\n          </View>\n        </Step>\n\n        {/* Step 1 */}\n        <WaitingRoom players={players} title=\"Pronto!\" instruction=\"Vamos aguardar os outros joadores.\" />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nSuggestPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default SuggestPhase;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Avatar as AntAvatar } from 'antd';\nimport { CloseOutlined } from '@ant-design/icons';\n// Utils\nimport { getColorFromIndex } from '../../../utils';\nimport { LETTERS } from '../../../utils/constants';\n// Components\nimport BasicCard from '../../cards/Card';\nimport { Avatar } from '../../avatars';\n\nfunction SuggestionCard({ avatarId, index, invalid, suggestion }) {\n  return (\n    <BasicCard\n      size=\"medium\"\n      color={getColorFromIndex(index)}\n      className={clsx(invalid && 'u-suggestion-card__invalid')}\n      header={LETTERS[index]}\n    >\n      {invalid ? (\n        <AntAvatar size=\"small\" className=\"u-suggestion-card__suggestion-avatar\">\n          <CloseOutlined />\n        </AntAvatar>\n      ) : (\n        <Avatar id={avatarId} size=\"small\" className=\"u-suggestion-card__suggestion-avatar\" />\n      )}\n      {suggestion}\n    </BasicCard>\n  );\n}\n\nSuggestionCard.propTypes = {\n  avatarId: PropTypes.number.isRequired,\n  index: PropTypes.number.isRequired,\n  invalid: PropTypes.bool,\n  suggestion: PropTypes.string.isRequired,\n};\n\nexport default memo(SuggestionCard);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, message, Space } from 'antd';\nimport { CloudUploadOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\n// Hooks\nimport { useGlobalState, useLoading } from '../../../hooks';\n// Utils\nimport { deepCopy } from '../../../utils';\n// Components\nimport { AdminOnlyButton, Instruction, Step, Title } from '../../shared';\nimport Card from '../../cards/UeSoIssoCard';\nimport SuggestionCard from './SuggestionCard';\nimport { AvatarName } from '../../avatars';\nimport { messageContent } from '../../modals/messageContent';\n\nfunction CompareSuggestionsStep({\n  isUserTheNextGuesser,\n  nextGuesser,\n  onValidateSuggestions,\n  players,\n  secretWord,\n  suggestions,\n}) {\n  const [isLoading] = useLoading();\n  const [myRecommendation, setMyRecommendation] = useState(deepCopy(suggestions));\n  const [isAdmin] = useGlobalState('isAdmin');\n\n  const onSetValidation = (index, suggestionEntry, notAllowed) => {\n    if (notAllowed) return;\n\n    setMyRecommendation((arr) => {\n      const newArr = [...arr];\n      if (newArr[index]) {\n        newArr[index].invalid = !newArr[index].invalid;\n      } else {\n        newArr[index] = {\n          ...suggestionEntry,\n          invalid: true,\n        };\n      }\n      return newArr;\n    });\n  };\n\n  useEffect(() => {\n    if (isUserTheNextGuesser) {\n      message.info(\n        messageContent(\n          'Você controla!',\n          'Clique nas cartas para desclassificá-las, então, pressione \"Confirmar Dicas Válidas\"',\n          nextGuesser.name\n        )\n      );\n    }\n  }, [isUserTheNextGuesser, nextGuesser.name]);\n\n  const suggestionsValues = Object.values(myRecommendation);\n\n  return (\n    <Step>\n      <Title white>Comparem as sugestões</Title>\n      <Card word={secretWord.text} header=\"Palavra Secreta\" />\n      <Instruction contained>\n        Já eliminamos todas as palavras iguais, agora, elimine palavras inválidas ou similares.\n        <br />\n        Lembre-se que são consideradas dicas iguais palavras derividadas, conjugações:{' '}\n        <code>piloto = pilotar = pilotando</code>. Variações como pluralidade, gênero e erros ortográficos\n        também devem ser eliminadas: <code>príncipe = princesa = principes = pryncip</code>.\n        <br />\n        <ExclamationCircleOutlined /> Para não virar bagunça, somente{' '}\n        <AvatarName player={nextGuesser} addressUser />\n        pode clicar nas palavras para eliminá-las ou ativá-las, mas todos podem discutir. Uma dica ser muito\n        ruim não significa que ela seja inválida.\n        <br /> Refiram às palavras por letra, o Adivinhador pode estar ouvindo!\n      </Instruction>\n\n      <Space className=\"u-word-compare-suggestions-step__suggestions\">\n        {suggestions.map((suggestionEntry, index) => {\n          if (!isUserTheNextGuesser && !isAdmin) {\n            return (\n              <div key={`${suggestionEntry.suggestion}-${index}`}>\n                <SuggestionCard\n                  suggestion={suggestionEntry.suggestion}\n                  invalid={suggestionEntry.invalid}\n                  avatarId={players[suggestionEntry.playerName].avatarId}\n                  index={index}\n                />\n              </div>\n            );\n          }\n\n          return (\n            <button\n              key={`${suggestionEntry.suggestion}-${index}`}\n              className=\"u-word-compare-suggestions-step__suggestion-button\"\n              onClick={() => onSetValidation(index, suggestionEntry, suggestionEntry.invalid)}\n            >\n              <SuggestionCard\n                suggestion={suggestionEntry.suggestion}\n                invalid={myRecommendation?.[index]?.invalid ?? suggestionEntry.invalid}\n                avatarId={players[suggestionEntry.playerName].avatarId}\n                index={index}\n              />\n            </button>\n          );\n        })}\n      </Space>\n\n      {isUserTheNextGuesser && (\n        <Space className=\"u-word-compare-suggestions-step__submit\">\n          <Button\n            icon={<CloudUploadOutlined />}\n            type=\"primary\"\n            onClick={() =>\n              onValidateSuggestions({\n                validSuggestions: suggestionsValues.filter((suggestion) => !suggestion.invalid),\n              })\n            }\n            disabled={isLoading}\n          >\n            Confirmar dicas válidas\n          </Button>\n        </Space>\n      )}\n\n      <AdminOnlyButton\n        action={() =>\n          onValidateSuggestions({\n            validSuggestions: suggestionsValues.filter((suggestion) => !suggestion.invalid),\n          })\n        }\n        label=\"Confirmar dicas válidas como Admin\"\n      />\n    </Step>\n  );\n}\n\nCompareSuggestionsStep.propTypes = {\n  isUserTheNextGuesser: PropTypes.bool,\n  nextGuesser: PropTypes.shape({\n    avatarId: PropTypes.number,\n    name: PropTypes.string,\n  }),\n  onValidateSuggestions: PropTypes.func,\n  players: PropTypes.object,\n  secretWord: PropTypes.shape({ text: PropTypes.string }),\n  suggestions: PropTypes.arrayOf(\n    PropTypes.shape({\n      suggestion: PropTypes.string,\n      invalid: PropTypes.bool,\n      playerName: PropTypes.string,\n    })\n  ),\n};\n\nexport default CompareSuggestionsStep;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useIsUserThe, useAPICall, useWhichPlayerIsThe } from '../../../hooks';\n// Resources & Utils\nimport { UE_SO_ISSO_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { PhaseContainer, Step, StepSwitcher, View, WaitingRoom } from '../../shared';\nimport CompareSuggestionsStep from './CompareSuggestionsStep';\n\nfunction ComparePhase({ state, players, info }) {\n  const [step, setStep] = useState(0);\n  const isUserTheGuesser = useIsUserThe('guesser', state);\n  const isUserTheNextGuesser = useIsUserThe('nextGuesser', state);\n  const nextGuesser = useWhichPlayerIsThe('nextGuesser', state, players);\n\n  const onValidateSuggestions = useAPICall({\n    apiFunction: UE_SO_ISSO_API.submitValidation,\n    actionName: 'validate-suggestions',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage: 'Validação enviada com sucesso!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar a confirmação das sugestões',\n  });\n\n  // TODO: Add modal\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.UE_SO_ISSO.COMPARE}\n      className=\"u-compare-phase\"\n    >\n      <StepSwitcher step={step}>\n        {/* Step 0 */}\n        <Step fullWidth>\n          <View visibleIf={isUserTheGuesser}>\n            <WaitingRoom\n              players={players}\n              title=\"Você é o(a) adivinhador(a)\"\n              instruction=\"Aguarde os outros jogadores selecionarem as dicas válidas.\"\n            />\n          </View>\n\n          <View visibleIf={!isUserTheGuesser}>\n            <CompareSuggestionsStep\n              nextGuesser={nextGuesser}\n              isUserTheNextGuesser={isUserTheNextGuesser}\n              secretWord={state.secretWord}\n              suggestions={state.suggestions}\n              players={players}\n              onValidateSuggestions={onValidateSuggestions}\n            />\n          </View>\n        </Step>\n\n        {/* Step 1 */}\n        <WaitingRoom players={players} title=\"Enviando a confirmação de sugestões\" instruction=\"Aguarde...\" />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nComparePhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default ComparePhase;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Input, Space } from 'antd';\nimport { CloudUploadOutlined, MinusOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLoading } from '../../../hooks';\n\nfunction Guess({ onSubmitGuess, onSendGuess }) {\n  const [isLoading] = useLoading();\n  const [guess, setGuess] = useState('');\n\n  const onEnterInput = (e) => {\n    if (e.key === 'Enter') {\n      onSendGuess({ guess });\n    }\n  };\n\n  return (\n    <Space className=\"u-word-guess-phase__suggestions\">\n      <Input\n        placeholder=\"Digite aqui seu chute\"\n        onChange={(e) => setGuess(e.target.value)}\n        onKeyPress={onEnterInput}\n      />\n      <Button\n        icon={<CloudUploadOutlined />}\n        type=\"primary\"\n        onClick={() => onSendGuess({ guess })}\n        disabled={guess.length < 3 || isLoading}\n      >\n        Enviar\n      </Button>\n      <Button\n        icon={<MinusOutlined />}\n        type=\"default\"\n        onClick={() => onSubmitGuess({ guess: 'PASS' })}\n        disabled={isLoading}\n      >\n        Passar a vez...\n      </Button>\n    </Space>\n  );\n}\n\nGuess.propTypes = {\n  onSendGuess: PropTypes.func.isRequired,\n  onSubmitGuess: PropTypes.func,\n};\n\nexport default Guess;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Space } from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\n// Components\nimport { Instruction, Step, Title, View } from '../../shared';\nimport UeSoIssoCard from '../../cards/UeSoIssoCard';\nimport Guess from './Guess';\nimport { AvatarName } from '../../avatars';\nimport SuggestionEasel from './SuggestionEasel';\n\nfunction GuessingStep({\n  guesser,\n  isUserTheGuesser,\n  secretWord,\n  onSendGuess,\n  onSubmitGuess,\n  validSuggestions,\n}) {\n  return (\n    <Step>\n      <View visibleIf={isUserTheGuesser}>\n        <Title>\n          Hora de brilhar, <AvatarName player={guesser} />!\n        </Title>\n        <Instruction contained>Você tem uma única change de adivinhar a palavra secreta!</Instruction>\n\n        <UeSoIssoCard word={<QuestionCircleOutlined />} header=\"A Palavra Secreta é\" />\n\n        <Instruction contained>Escreva seu chute no campo abaixo</Instruction>\n\n        <Space className=\"u-word-guess-phase__suggestions\">\n          {validSuggestions.map((suggestionEntry, index) => {\n            const id = `${suggestionEntry.suggestion}-${index}`;\n            return <SuggestionEasel key={id} id={id} value={suggestionEntry.suggestion} />;\n          })}\n        </Space>\n\n        <Guess onSubmitGuess={onSubmitGuess} onSendGuess={onSendGuess} />\n      </View>\n\n      <View visibleIf={!isUserTheGuesser}>\n        <Title>\n          Hora de <AvatarName player={guesser} /> brilhar!\n        </Title>\n        <Instruction contained>\n          {guesser.name} tem uma única change de adivinhar a palavra secreta!\n        </Instruction>\n        <UeSoIssoCard word={secretWord.text} header=\"A Palavra Secreta é\" />\n        <Instruction contained>{guesser.name} está pensando...</Instruction>\n\n        <Space className=\"u-word-guess-phase__suggestions\">\n          {validSuggestions.map((suggestionEntry, index) => {\n            const id = `${suggestionEntry.suggestion}-${index}`;\n            return <SuggestionEasel key={id} id={id} value={suggestionEntry.suggestion} />;\n          })}\n        </Space>\n      </View>\n    </Step>\n  );\n}\n\nGuessingStep.propTypes = {\n  guesser: PropTypes.shape({\n    avatarId: PropTypes.number,\n    name: PropTypes.string,\n  }),\n  isUserTheGuesser: PropTypes.bool,\n  onSendGuess: PropTypes.func,\n  onSubmitGuess: PropTypes.func,\n  secretWord: PropTypes.shape({ text: PropTypes.string }),\n  validSuggestions: PropTypes.arrayOf(\n    PropTypes.shape({\n      suggestion: PropTypes.string,\n    })\n  ),\n};\n\nexport default GuessingStep;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Button, message, Space } from 'antd';\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\n// Components\nimport { Instruction, Step, Title, View } from '../../shared';\nimport UeSoIssoCard from '../../cards/UeSoIssoCard';\nimport { AvatarName } from '../../avatars';\nimport SuggestionEasel from './SuggestionEasel';\nimport { messageContent } from '../../modals/messageContent';\n\nfunction GuessVerificationStep({\n  guess,\n  guesser,\n  isAdmin,\n  isLoading,\n  isUserTheGuesser,\n  isUserTheNextGuesser,\n  nextGuesser,\n  secretWord,\n  onConfirmGuess,\n  validSuggestions,\n}) {\n  useEffect(() => {\n    if (isUserTheNextGuesser) {\n      message.info(\n        messageContent('Você controla!', 'Selecione se o adivinhador acertou ou não', nextGuesser.name)\n      );\n    }\n  }, [isUserTheNextGuesser, nextGuesser.name]);\n\n  return (\n    <Step>\n      <View visibleIf={isUserTheGuesser}>\n        <Title>\n          <AvatarName player={guesser} addressUser /> disse \"{guess}\"\n        </Title>\n\n        <UeSoIssoCard word={secretWord.text} header=\"A Palavra Secreta é\" />\n\n        <Instruction contained>\n          <AvatarName player={nextGuesser} /> está encarregado(a) de apertar os botões se você acertou ou não.{' '}\n          <br />\n          São 3 pontos se você acertar, -1 se errar, mas você pode passar e não tentar, covarde!.. <br />\n          As dicas foram:\n        </Instruction>\n\n        <Space className=\"u-word-guess-phase__suggestions\">\n          {validSuggestions.map((suggestionEntry, index) => {\n            const id = `${suggestionEntry.suggestion}-${index}`;\n            return <SuggestionEasel key={id} id={id} value={suggestionEntry.suggestion} />;\n          })}\n        </Space>\n      </View>\n\n      <View visibleIf={!isUserTheGuesser}>\n        <Title>\n          <AvatarName player={guesser} addressUser /> disse \"{guess}\"\n        </Title>\n\n        <UeSoIssoCard word={secretWord.text} header=\"A Palavra Secreta é\" />\n\n        <Instruction contained>\n          <AvatarName player={nextGuesser} addressUser /> está encarregado(a) de apertar os botões se você\n          acertou ou não. <br />\n          São 3 pontos se você acertar, -1 se errar, mas você pode passar e não tentar, covarde!.. <br />\n          As dicas são:\n        </Instruction>\n\n        <Space className=\"u-word-guess-phase__suggestions\">\n          {validSuggestions.map((suggestionEntry, index) => {\n            const id = `${suggestionEntry.suggestion}-${index}`;\n            return <SuggestionEasel key={id} id={id} value={suggestionEntry.suggestion} />;\n          })}\n        </Space>\n\n        {(isUserTheNextGuesser || isAdmin) && (\n          <Space className={clsx('u-word-guess-phase__guess-submit', isAdmin && 'admin-container')}>\n            <Button\n              icon={<CheckOutlined />}\n              type=\"primary\"\n              style={{ backgroundColor: 'green' }}\n              onClick={() => onConfirmGuess({ guess: 'CORRECT' })}\n              disabled={isLoading}\n            >\n              Acertou\n            </Button>\n            <Button\n              icon={<CloseOutlined />}\n              type=\"primary\"\n              danger\n              onClick={() => onConfirmGuess({ guess: 'WRONG' })}\n              disabled={isLoading}\n            >\n              Errou\n            </Button>\n          </Space>\n        )}\n      </View>\n    </Step>\n  );\n}\n\nGuessVerificationStep.propTypes = {\n  guess: PropTypes.string,\n  guesser: PropTypes.shape({\n    avatarId: PropTypes.number,\n    name: PropTypes.string,\n  }),\n  isAdmin: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  isUserTheGuesser: PropTypes.bool,\n  isUserTheNextGuesser: PropTypes.bool,\n  nextGuesser: PropTypes.shape({\n    avatarId: PropTypes.number,\n    name: PropTypes.string,\n  }),\n  onConfirmGuess: PropTypes.func,\n  secretWord: PropTypes.shape({ text: PropTypes.string }),\n  validSuggestions: PropTypes.arrayOf(\n    PropTypes.shape({\n      suggestion: PropTypes.string,\n    })\n  ),\n};\n\nexport default GuessVerificationStep;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useGlobalState, useLoading, useWhichPlayerIsThe, useIsUserThe, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { UE_SO_ISSO_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { PhaseContainer, StepSwitcher, WaitingRoom } from '../../shared';\nimport GuessingStep from './GuessingStep';\nimport GuessVerificationStep from './GuessVerificationStep';\n\nfunction GuessPhase({ state, players, info }) {\n  const [isLoading] = useLoading();\n  const [isAdmin] = useGlobalState('isAdmin');\n  const [step, setStep] = useState(0);\n  const guesser = useWhichPlayerIsThe('guesser', state, players);\n  const nextGuesser = useWhichPlayerIsThe('nextGuesser', state, players);\n  const isUserTheNextGuesser = useIsUserThe('nextGuesser', state);\n  const isUserTheGuesser = useIsUserThe('guesser', state);\n\n  const onConfirmGuess = useAPICall({\n    apiFunction: UE_SO_ISSO_API.confirmGuess,\n    actionName: 'guess',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: 'Resultado enviado com sucesso!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar o resultado',\n  });\n\n  const onSendGuess = useAPICall({\n    apiFunction: UE_SO_ISSO_API.sendGuess,\n    actionName: 'guess',\n    successMessage: 'Resultado enviado com sucesso!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar o resultado',\n  });\n\n  // If guess is present in the state, move to the next step\n  useEffect(() => {\n    if (state?.guess) {\n      setStep(1);\n    }\n  }, [state]);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.UE_SO_ISSO.GUESS}\n      className=\"u-word-guess-phase\"\n    >\n      <StepSwitcher step={step}>\n        {/* Step 0 */}\n        <GuessingStep\n          guesser={guesser}\n          isUserTheGuesser={isUserTheGuesser}\n          onConfirmGuess={onConfirmGuess}\n          onSendGuess={onSendGuess}\n          validSuggestions={state.validSuggestions}\n          secretWord={state.secretWord}\n          players={players}\n        />\n\n        {/* Step 1 */}\n        <GuessVerificationStep\n          guesser={guesser}\n          guess={state.guess}\n          isUserTheGuesser={isUserTheGuesser}\n          onConfirmGuess={onConfirmGuess}\n          validSuggestions={state.validSuggestions}\n          secretWord={state.secretWord}\n          nextGuesser={nextGuesser}\n          isUserTheNextGuesser={isUserTheNextGuesser}\n          isAdmin={isAdmin}\n          isLoading={isLoading}\n        />\n\n        {/* Step 2 */}\n        <WaitingRoom players={players} title=\"Enviando a confirmação de sugestões\" instruction=\"Aguarde...\" />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nGuessPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default GuessPhase;\n","import React from 'react';\n// Hooks\nimport { GAME_COLLECTION, PHASES } from '../../../utils/constants';\n// Components\nimport { GameOver, Session } from '../../shared';\nimport Lobby from '../../lobby/Lobby';\nimport Rules from '../../rules/Rules';\nimport PageError from '../../errors/PageError';\nimport WordSelectionPhase from './WordSelectionPhase';\nimport SuggestPhase from './SuggestPhase';\nimport ComparePhase from './ComparePhase';\nimport GuessPhase from './GuessPhase';\n\nfunction SessionUeSoIsso({ gameId }) {\n  function getActiveComponent(phase) {\n    switch (phase) {\n      case PHASES.UE_SO_ISSO.LOBBY:\n        return Lobby;\n      case PHASES.UE_SO_ISSO.RULES:\n        return Rules;\n      case PHASES.UE_SO_ISSO.WORD_SELECTION:\n        return WordSelectionPhase;\n      case PHASES.UE_SO_ISSO.SUGGEST:\n        return SuggestPhase;\n      case PHASES.UE_SO_ISSO.COMPARE:\n        return ComparePhase;\n      case PHASES.UE_SO_ISSO.GUESS:\n        return GuessPhase;\n      case PHASES.UE_SO_ISSO.GAME_OVER:\n        return GameOver;\n      default:\n        return PageError;\n    }\n  }\n\n  return (\n    <Session\n      gameId={gameId}\n      gameCollection={GAME_COLLECTION.UE_SO_ISSO}\n      getActiveComponent={getActiveComponent}\n    />\n  );\n}\n\nexport default SessionUeSoIsso;\n","import ArteRuim from './arte-ruim/SessionArteRuim';\nimport EspiaoEntreNos from './espiao-entre-nos/SessionEspiaoEntreNos';\nimport OndaTelepatica from './onda-telepatica/SessionOndaTelepatica';\nimport UeSoIsso from './ue-so-isso/SessionUeSoIsso';\n\nconst games = {\n  ArteRuim,\n  EspiaoEntreNos,\n  OndaTelepatica,\n  UeSoIsso,\n};\n\nexport default games;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n// Design Resources\nimport { message, notification } from 'antd';\n// Adapters\nimport { GAME_API } from '../adapters';\n// Hooks\nimport { useIsGameStale, useLoading, useGlobalState } from '../hooks';\n// Utils\nimport { getGameIdFromURL, getGameIdFromLocation, isValidGameId } from '../utils';\nimport { GAME_COLLECTION } from '../utils/constants';\n// Components\nimport LoadingPage from './loaders/LoadingPage';\nimport PageError from './errors/PageError';\nimport GameSessions from './games';\n\nfunction Game() {\n  const history = useHistory();\n  const [, setLoader] = useLoading();\n  const [gameId, setGameId] = useGlobalState('gameId');\n  const [gameName, setGameName] = useGlobalState('gameName');\n  const [gameMeta, setGameMeta] = useGlobalState('gameMeta');\n  const [, setUsername] = useGlobalState('username');\n  const [, setUserAvatarId] = useGlobalState('userAvatarId');\n\n  const [isPageLoading, setPageLoading] = useState(true);\n  const isGameStale = useIsGameStale(gameMeta?.createdAt);\n\n  // Verify url game code\n  useEffect(() => {\n    const urlGameId = getGameIdFromURL(history);\n    if (isValidGameId(urlGameId)) {\n      setGameId(urlGameId);\n    } else {\n      message.error('Vixi, a id do jogo na barra de endereços tá errada');\n      history.push('/');\n    }\n  }, [history, setGameId, setUsername, setUserAvatarId]);\n\n  // Keeps track of url changes\n  useEffect(() => {\n    return history.listen((location) => {\n      const urlGameId = getGameIdFromLocation(location);\n      if (isValidGameId(urlGameId)) {\n        setGameId(urlGameId);\n        setUsername('');\n        setUserAvatarId('');\n        message.info('Uma nova id de jogo foi provida');\n      } else {\n        message.error('Vixi, a id do jogo na barra de endereços tá errada');\n        history.push('/');\n      }\n    });\n  }, [history, setGameId, setUsername, setUserAvatarId]);\n\n  // Load game\n  useEffect(() => {\n    setPageLoading(true);\n    async function loadGameSession() {\n      try {\n        setLoader('load', true);\n        const meta = await GAME_API.loadGame({ gameId });\n        setGameName(meta.data.gameName);\n        setGameMeta(meta.data);\n      } catch (e) {\n        console.error(e);\n        notification.error({\n          message: 'Erro ao carregar o jogo',\n          description: JSON.stringify(e.message),\n        });\n        console.error(e);\n      } finally {\n        setPageLoading(false);\n        setLoader('load', false);\n      }\n    }\n\n    if (gameId) {\n      loadGameSession();\n    }\n  }, [gameId]); // eslint-disable-line\n\n  // Deffer to load screen if any major API call is running\n  if (isPageLoading) {\n    return <LoadingPage />;\n  }\n\n  if (isGameStale) {\n    return (\n      <PageError message=\"Jogo expirado\" description=\"Esse jogo é muito antigo e não pode ser usado mais\" />\n    );\n  }\n\n  if (gameId && gameName) {\n    switch (gameName) {\n      case GAME_COLLECTION.ARTE_RUIM:\n        return <GameSessions.ArteRuim gameId={gameId} />;\n      case GAME_COLLECTION.ESPIAO_ENTRE_NOS:\n        return <GameSessions.EspiaoEntreNos gameId={gameId} />;\n      case GAME_COLLECTION.ONDA_TELEPATICA:\n        return <GameSessions.OndaTelepatica gameId={gameId} />;\n      case GAME_COLLECTION.UE_SO_ISSO:\n        return <GameSessions.UeSoIsso gameId={gameId} />;\n      default:\n        console.warn('Wrong game library provided');\n    }\n  }\n\n  // If switch fails, it's an error\n  return <PageError />;\n}\n\nexport default Game;\n","import { useEffect, useState } from 'react';\n\nexport function useIsGameStale(gameCreatedAt) {\n  const [isGameStale, setGameStale] = useState(false);\n\n  useEffect(() => {\n    setGameStale(Date.now() - 24 * 60 * 60 * 1000 > gameCreatedAt);\n  }, [gameCreatedAt, setGameStale]);\n\n  return isGameStale;\n}\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\n// import { Image, Layout } from 'antd';\nimport gameList from '../resources/games.json';\nimport { Avatar, AvatarEntry } from './avatars';\nimport { GameOver, Instruction, PhaseContainer, RoundAnnouncement, Title } from './shared';\n// Resources\nimport { CheckCircleFilled, CheckCircleOutlined } from '@ant-design/icons';\nimport { Button, Input } from 'antd';\nimport { LETTERS } from '../utils/constants';\nimport Card from './cards/Card';\nimport { getColorFromLetter } from '../utils';\n\nfunction TestingZone() {\n  const info = gameList['U'];\n\n  const players = {\n    Flaviane: {\n      avatarId: 10,\n      name: 'Flaviane',\n      ready: false,\n      score: 0,\n      updatedAt: Date.now(),\n    },\n    Kavis: {\n      avatarId: 11,\n      name: 'Kavis',\n      ready: false,\n      score: 0,\n      updatedAt: Date.now(),\n    },\n    Stephanie: {\n      avatarId: 12,\n      name: 'Stephanie',\n      ready: false,\n      score: 0,\n      updatedAt: Date.now(),\n    },\n  };\n\n  // Mock State\n  const state = {\n    phase: 'WORD_SELECTION',\n    guesser: 'Kavis',\n    playerOrder: ['Flaviane', 'Stephanie', 'Kavis', 'Flaviane', 'Stephanie', 'Kavis'],\n    round: 3,\n    words: [1, 2, 3, 4, 5],\n    // phase: 'GAME_OVER',\n    // winner: {\n    //   name: 'Flaviane',\n    //   avatarId: 15,\n    //   score: 35,\n    // },\n  };\n\n  console.log('==========');\n  console.log({ info });\n  console.table(players);\n  console.log({ state });\n  console.log('==========');\n\n  const guesser = players[state.guesser];\n  console.log(guesser);\n\n  // return <GameOver info={info} state={state} players={players} />;\n  return (\n    <PhaseContainer info={info} phase={state.phase} allowedPhase=\"WORD_SELECTION\" className=\"\" fullScreen>\n      <div className=\"u-word-selection\"></div>\n    </PhaseContainer>\n  );\n}\n\nexport default TestingZone;\n","import React from 'react';\n// Hooks\nimport { useLoading } from '../../hooks';\n\nfunction LoadingBar() {\n  const [isLoading] = useLoading();\n\n  return isLoading ? <div className=\"loading-bar\"></div> : <></>;\n}\n\nexport default LoadingBar;\n","import React, { useState, useEffect } from 'react';\nimport { HashRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\n\n// Design Resources\nimport { Layout, message } from 'antd';\n// Firebase\nimport { auth } from '../services/firebase';\n// State\nimport { useGlobalState } from '../hooks';\n// Pages\nimport Home from './Home';\nimport Admin from './Admin';\nimport Login from './Login';\nimport Game from './Game';\nimport TestingZone from './TestingZone';\nimport LoadingPage from './loaders/LoadingPage';\nimport LoadingBar from './loaders/LoadingBar';\n\nfunction PrivateRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authenticated === true ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        )\n      }\n    />\n  );\n}\n\nfunction PublicRoute({ component: Component, authenticated, ...rest }) {\n  const fromPath = rest?.location?.state?.from?.pathname ?? '/';\n  return (\n    <Route\n      {...rest}\n      render={(props) => (authenticated === false ? <Component {...props} /> : <Redirect to={fromPath} />)}\n    />\n  );\n}\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useGlobalState('isAuthenticated');\n  const [, setIsAdmin] = useGlobalState('isAdmin');\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoading(false);\n        setIsAuthenticated(true);\n        setIsAdmin(true);\n        message.info('Você foi logado de volta automaticamente.');\n      } else {\n        setIsLoading(false);\n        setIsAuthenticated(false);\n        setIsAdmin(false);\n      }\n    });\n  }, []); // eslint-disable-line\n\n  return (\n    <Layout className=\"app\">\n      <LoadingBar />\n      <Router>\n        {isLoading ? (\n          <LoadingPage />\n        ) : (\n          <Switch>\n            <Route exact path=\"/\" component={Home}></Route>\n            <PrivateRoute path=\"/admin\" authenticated={isAuthenticated} component={Admin} />\n            <PublicRoute path=\"/login\" authenticated={isAuthenticated} component={Login} />\n            <PrivateRoute path=\"/testing-zone\" authenticated={isAuthenticated} component={TestingZone} />\n            <Route path=\"*\" component={Game} />\n          </Switch>\n        )}\n      </Router>\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport './styles/index.css';\n\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}