{"version":3,"file":"static/js/megamix.465998ea.chunk.js","mappings":"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AAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GACvG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,KAC/F,OAEF,CACE,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACvG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpG,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACnG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,MAAO,OAEd,CACE,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACtG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,MAAO,MAE/B,CACE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,OAEvC,CACE,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACrG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACtG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IACrG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACvG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,OAE3D,CACE,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,OAErE,CACE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,OAEvC,CACE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,KAAM,GAAK,OAErF,CACE,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACpG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,KAAM,OAErD,CACE,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,OAEzF,CACE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,OAEhE,CACE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,OAE1E,CACE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,OAEhE,CACE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,QAIvBnZ,EAAc,WACzB,OAAOoZ,EAAAA,EAAAA,YAAWD,GAAgBjZ,EAAAA,EAAAA,GAAc,CAAC,EAAG,EAAG,EAAG,EAAG,IAC9D,C","sources":["components/audio/ArteRuimTimerSound.tsx","components/audio/DJPruPruPruSound.tsx","components/canvas/CanvasResizer.tsx","components/canvas/CanvasSVG.tsx","components/canvas/DrawingCanvas.tsx","components/cards/CharacterCard.tsx","components/cards/CrimeItemCard.tsx","components/cards/GroupQuestionCard.tsx","components/cards/MonsterCard.tsx","components/cards/MovieCard.tsx","components/cards/MovieReviewCard.tsx","assets/images/alien-signs.svg","components/cards/SignCard.tsx","components/cards/Card.tsx","components/game/BookPages.tsx","components/game/DoorFrame.tsx","components/game/SceneTile.tsx","components/game/SuggestionEasel.tsx","components/general/Achievements.tsx","components/general/Container.tsx","components/image-cards/ImageBlurButton.tsx","components/image-cards/ImageBlurButtonContainer.tsx","components/image-cards/ImageCard.tsx","components/image-cards/ImageCardBack.tsx","components/image-cards/ImageCardButton.tsx","components/image-cards/ImageCardHand.tsx","components/image-cards/ImageCardPreloadHand.tsx","components/image-cards/ImageCardSelectButton.tsx","components/metrics/CardHighlight.tsx","components/metrics/MetricHighlight.tsx","components/metrics/PlayersHighlight.tsx","components/metrics/PointsHighlight.tsx","components/metrics/TimeHighlight.tsx","components/ranking/RankingBoard.tsx","components/ranking/StepRankingWrapper.tsx","games/megamix/utils/useColorizeBackground.ts","games/megamix/utils/helpers.ts","games/megamix/components/TrackIcon.tsx","games/megamix/utils/constants.ts","games/megamix/components/TrackInstructions.tsx","games/megamix/components/ClubLine.tsx","games/megamix/components/FallbackComponent.tsx","games/megamix/utils/mock.ts","games/megamix/components/MinigameTitle.tsx","games/megamix/components/Tracks/TrackArteRuim.tsx","games/megamix/components/Tracks/TrackLabirintoSecreto.tsx","games/megamix/components/Tracks/TrackContadoresHistorias.tsx","games/megamix/components/Tracks/TrackCrimesHediondos.tsx","components/general/SpreadsheetGrid.tsx","components/text/SpeechBubble.tsx","games/megamix/components/Tracks/TrackCruzaPalavras.tsx","games/megamix/components/Tracks/TrackDetetivesImaginativos.tsx","games/megamix/components/Tracks/TrackDilemaDosEsquiadores.tsx","games/megamix/components/Tracks/TrackEspiaoEntreNos.tsx","games/megamix/components/Tracks/TrackFileiraDeFatos.tsx","games/megamix/components/Tracks/TrackGaleriaDeSonhos.tsx","games/megamix/components/Tracks/TrackMenteColetiva.tsx","games/megamix/components/Candidate.tsx","games/megamix/components/Tracks/TrackNamoroOuAmizade.tsx","games/megamix/components/Tracks/TrackNaRuaDoMedo.tsx","games/megamix/components/Tracks/TrackOndaTelepatica.tsx","games/megamix/components/Tracks/TrackPalhetaDeFores.tsx","components/game/SocialProfile.tsx","games/megamix/components/Tracks/TrackPolemicaDaVez.tsx","games/megamix/components/Tracks/TrackPortaDosDesesperados.tsx","games/megamix/components/Tracks/TrackQuemNaoMata.tsx","games/megamix/components/Tracks/TrackRetratoFalado.tsx","games/megamix/components/Tracks/TrackSuperCampeonato.tsx","components/cards/SuspectCard.tsx","games/megamix/components/Tracks/TrackTestemunhaOcular.tsx","games/megamix/components/Tracks/TrackUeSoIsso.tsx","games/megamix/components/Tracks/TrackVamosAoCinema.tsx","games/megamix/components/Tracks/TrackMegamixBestOfThree.tsx","games/megamix/components/Tracks/TrackMegamixThisThat.tsx","games/megamix/components/Tracks/TrackComunicacaoAlienigena.tsx","games/megamix/components/Tracks/TrackQuemSouEu.tsx","games/megamix/components/Tracks/TrackTaNaCara.tsx","games/megamix/StepTrack.tsx","games/megamix/components/TrackTitle.tsx","games/megamix/components/RulesBlobs.tsx","games/megamix/PhaseTrack.tsx","games/megamix/utils/api-requests.ts","games/megamix/components/Seeds/SeedArteRuim.tsx","games/megamix/components/Seeds/SeedLabirintoSecreto.tsx","games/megamix/components/Seeds/SeedClubber.tsx","games/megamix/components/Seeds/SeedOndaTelepatica.tsx","games/megamix/components/Seeds/SeedPolemicaDaVez.tsx","games/megamix/components/Seeds/SeedRetratoFalado.tsx","games/megamix/components/SVGPhone.tsx","games/megamix/components/Seeds/SeedUeSoIsso.tsx","games/megamix/components/Seeds/SeedMenteColetiva.tsx","games/megamix/components/Seeds/SeedContadoresHistorias.tsx","games/megamix/StepSeeding.tsx","games/megamix/PhaseSeeding.tsx","games/megamix/components/WinningCount.tsx","games/megamix/components/Results/ResultArteRuim.tsx","games/megamix/components/Results/ResultCruzaPalavras.tsx","games/megamix/components/Results/ResultNamoroOuAmizade.tsx","games/megamix/components/Results/ResultNaRuaDoMedo.tsx","games/megamix/components/Results/ResultRetratoFalado.tsx","games/megamix/components/Results/ResultVamosNoCinema.tsx","games/megamix/components/Results/ResultMegamix.tsx","games/megamix/components/Results/ResultImage.tsx","games/megamix/components/Results/ResultText.tsx","games/megamix/components/Results/ResultCharacter.tsx","games/megamix/components/Results/ResultOndaTelepatica.tsx","games/megamix/components/Results/ResultComunicacaoAlienigena.tsx","games/megamix/components/Results/ResultTaNaCara.tsx","games/megamix/components/Results/ResultLabirintoSecreto.tsx","games/megamix/components/Results/ResultPalhetaDeCores.tsx","games/megamix/components/Results/ResultQuemNaoMata.tsx","games/megamix/components/ResultValueDelegator.tsx","games/megamix/components/SpacePlayerCheckWrapper.tsx","games/megamix/components/Votes/VoteArteRuim.tsx","games/megamix/components/Votes/VoteCruzaPalavras.tsx","games/megamix/components/Votes/VoteNamoroOuAmizade.tsx","games/megamix/components/Votes/VoteNaRuaDoMedo.tsx","games/megamix/components/Votes/VoteRetratoFalado.tsx","games/megamix/components/Votes/VoteVamosAoCinema.tsx","games/megamix/components/Votes/VoteMegamix.tsx","games/megamix/components/Votes/VoteImagesTrack.tsx","games/megamix/components/Votes/VoteValue.tsx","games/megamix/components/Votes/VoteOndaTelepatica.tsx","games/megamix/components/Votes/VoteCharacterTrack.tsx","games/megamix/components/Votes/VotePalhetaDeCores.tsx","games/megamix/components/Votes/VoteQuemNaoMata.tsx","games/megamix/components/Votes/VoteComunicacaoAlienigena.tsx","games/megamix/components/Votes/VoteTaNaCara.tsx","games/megamix/components/Votes/VoteLabirintoSecreto.tsx","games/megamix/components/VotesDelegator.tsx","games/megamix/StepResult.tsx","games/megamix/StepRanking.tsx","games/megamix/PhaseResult.tsx","games/megamix/PhaseGameOver.tsx","games/megamix/SessionMegamix.tsx","games/megamix/utils/achievements.ts","games/na-rua-do-medo/components/CandyCount.tsx","games/na-rua-do-medo/components/HouseCard.tsx","games/onda-telepatica/utils/helpers.ts","games/porta-dos-desesperados/components/Book.tsx","games/quem-sou-eu/components/PlayerGlyphs.tsx","games/quem-sou-eu/utils/helpers.ts","icons/ClockIcon.tsx","icons/PlayersIcon.tsx","icons/SpeechBubbleAcceptedIcon.tsx","mock/clues.ts","mock/drawing.ts"],"sourcesContent":["import { useGlobalState } from 'hooks/useGlobalState';\nimport { useEffect } from 'react';\nimport { useAudio } from 'react-use';\n// Sound\nconst arteRuimTimer = require('assets/sounds/arte-ruim-timer-remix.mp3');\n\nexport function ArteRuimTimerSound() {\n  const [volume] = useGlobalState('volume');\n  const [audio, , controls] = useAudio({\n    src: arteRuimTimer,\n    autoPlay: true,\n    loop: false,\n  });\n\n  // Updated volume\n  useEffect(() => {\n    controls.volume(volume);\n  }, [volume]); // eslint-disable-line\n\n  return <>{audio}</>;\n}\n","import { useGlobalState } from 'hooks/useGlobalState';\nimport { useEffect } from 'react';\nimport { useAudio } from 'react-use';\n// Sound\nconst airHorn = require('assets/sounds/airhorn.mp3');\n\nexport function DJPruPruPruSound() {\n  const [volume] = useGlobalState('volume');\n  const [audio, , controls] = useAudio({\n    src: airHorn,\n    autoPlay: true,\n  });\n\n  // Updated volume\n  useEffect(() => {\n    controls.volume(volume);\n  }, [volume]); // eslint-disable-line\n\n  return <>{audio}</>;\n}\n","// Ant Design Resources\nimport { Slider } from 'antd';\nimport { DragOutlined } from '@ant-design/icons';\n// State & Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\n// Components\nimport { FixedMenuButton } from 'components/buttons';\nimport { Translate } from 'components/language';\n\n/**\n * Fixed Menu Button for resizing canvas\n */\nexport const CanvasResizer = () => {\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n\n  return (\n    <FixedMenuButton\n      type=\"popover\"\n      position={1}\n      icon={<DragOutlined />}\n      label={labelText}\n      content={\n        <div className=\"canvas-resizer\">\n          <div className=\"canvas-resizer__label\">{labelText}</div>\n          <Slider\n            className=\"canvas-resizer__slider\"\n            value={canvasSize ?? 100}\n            min={150}\n            max={500}\n            step={50}\n            onChange={setCanvasSize}\n          />\n        </div>\n      }\n    />\n  );\n};\n\nconst labelText = <Translate pt=\"Tamanho das Artes\" en=\"Art Size\" />;\n","/**\n * Builds paths from canvas lines\n * @param lines\n * @returns\n */\nconst getPathFromKonvaLines = (lines: CanvasLine[]) => {\n  const result = lines.map((lineArr) => {\n    let path = '';\n    for (let x = 0, y = 1; y < lineArr.length; x += 2, y += 2) {\n      if (lineArr[x + 2] && lineArr[y + 2]) {\n        path += `M${lineArr[x]},${lineArr[y]} L${lineArr[x + 2]},${lineArr[y + 2]}`;\n      }\n    }\n\n    return path;\n  });\n\n  return result;\n};\n\ntype CanvasSVGProps = {\n  /**\n   * The stringified svg path\n   */\n  drawing: string;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * The width of the canvas (default: 500)\n   */\n  width?: number;\n  /**\n   * The height of the canvas (default: 500)\n   */\n  height?: number;\n  /**\n   * Size of the stroke. Default: medium\n   */\n  strokeWidth?: 'small' | 'medium' | 'large';\n  /**\n   * Custom view box size (default: '0 0 500')\n   */\n  viewBox?: string;\n};\n\nexport const CanvasSVG = ({\n  drawing = '',\n  className = '',\n  width = 250,\n  height,\n  strokeWidth = 'medium',\n  viewBox = '0 0 500 500',\n}: CanvasSVGProps) => {\n  const konvaLines = JSON.parse(drawing);\n  const paths = getPathFromKonvaLines(konvaLines);\n\n  const strokeWidthBySize =\n    {\n      small: 3,\n      medium: 5,\n      large: 7,\n    }?.[strokeWidth] ?? 5;\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox={viewBox}\n      overflow=\"hidden\"\n      className={className}\n      style={{ width: `${width}px`, height: `${height || width}px` }}\n    >\n      <defs />\n      {paths.map((path, index) => (\n        <path\n          key={`${drawing}-${index}`}\n          d={path}\n          fill=\"none\"\n          stroke=\"#000\"\n          strokeWidth={strokeWidthBySize}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit=\"10\"\n        />\n      ))}\n    </svg>\n  );\n};\n","import { useRef, useState } from 'react';\nimport { Stage, Layer, Line } from 'react-konva';\nimport clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\nimport { DeleteOutlined, UndoOutlined } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\n\ntype DrawingCanvasProps = {\n  /**\n   * Lines drawn in the canvas\n   */\n  lines: CanvasLine[];\n  /**\n   * Function where any new version of the drawing is sent to\n   */\n  setLines: CanvasSetLine;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Show controls to undo, redo, or erase drawing. Default: false\n   */\n  showControls?: boolean;\n  /**\n   * Size of the stroke. Default: medium\n   */\n  strokeWidth?: 'small' | 'medium' | 'large';\n  /**\n   * The width of the canvas (default: 500)\n   */\n  width?: number;\n  /**\n   * The height of the canvas (default: 500)\n   */\n  height?: number;\n  /**\n   *\n   */\n  willReadFrequently?: boolean;\n};\n\n/**\n * Canvas drawing board using react-konva\n * It requires an array of lines and an setState function to save the lines\n */\nexport const DrawingCanvas = ({\n  lines,\n  setLines,\n  className = '',\n  showControls = false,\n  strokeWidth = 'medium',\n  width = 500,\n  height,\n  willReadFrequently = false,\n}: DrawingCanvasProps) => {\n  const [drawingHistory, setDrawingHistory] = useState<CanvasLine[]>([]);\n  const isDrawing = useRef(false);\n\n  /**\n   * Toggles off the isDrawing flag\n   */\n  const startDrawing = () => {\n    isDrawing.current = true;\n  };\n\n  /**\n   * Toggles off the isDrawing flag and resets history\n   */\n  const stopDrawing = () => {\n    isDrawing.current = false;\n    setDrawingHistory([]);\n  };\n\n  const startLine = (e: any) => {\n    startDrawing();\n    const pos = e.target.getStage().getPointerPosition();\n    setLines([...lines, [Math.round(pos.x), Math.round(pos.y)]]);\n  };\n\n  const finishLine = (e: any) => {\n    // Add point if it was a point\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    const x = Math.round(point.x);\n    const y = Math.round(point.y);\n\n    let lastLineEntry = lines[lines.length - 1];\n    lastLineEntry = lastLineEntry.concat([x + 0.1, y + 0.1]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLineEntry);\n    setLines(lines.concat());\n  };\n\n  /**\n   * Start recording drawing\n   * @param e - konva mouse event\n   */\n  const handleMouseDown = (e: any) => {\n    startLine(e);\n  };\n\n  /**\n   * Tracks mouse moving during the drawing\n   * @param e - konva mouse event\n   */\n  const handleMouseMove = (e: any) => {\n    // no drawing - skipping\n    if (!isDrawing.current) {\n      return;\n    }\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    let lastLine = lines[lines.length - 1];\n    // add end point\n    lastLine = lastLine.concat([Math.round(point.x), Math.round(point.y)]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLine);\n    setLines(lines.concat());\n  };\n\n  const handleMouseUp = (e: any) => {\n    if (isDrawing.current) {\n      stopDrawing();\n\n      finishLine(e);\n    }\n  };\n\n  /**\n   * Handles case when a current drawing is stopped off stage\n   * @param e - mouse event\n   */\n  const handleOffsetMouseUp = () => {\n    stopDrawing();\n  };\n\n  /**\n   * Handles case when a current drawing is started off stage\n   * @param e - mouse event\n   */\n  const handleOffsetMouseDown = () => {\n    startDrawing();\n  };\n\n  /**\n   * Handles when mouse leaves the stage\n   * @param e - konva mouse event\n   */\n  const handleMouseLeave = (e: any) => {\n    if (isDrawing.current) {\n      finishLine(e);\n\n      window.document.addEventListener('mouseup', handleOffsetMouseUp);\n      window.document.addEventListener('touchEnd', handleOffsetMouseUp);\n      window.document.addEventListener('mousedown', handleOffsetMouseDown);\n      window.document.addEventListener('touchStart', handleOffsetMouseDown);\n    }\n  };\n\n  /**\n   * Handles when mouse reenters the state\n   * @param e\n   */\n  const handleMouseEnter = (e: any) => {\n    if (isDrawing.current) {\n      startLine(e);\n    }\n    window.document.removeEventListener('mouseup', handleOffsetMouseUp);\n    window.document.removeEventListener('touchEnd', handleOffsetMouseUp);\n    window.document.removeEventListener('mousedown', handleOffsetMouseDown);\n    window.document.removeEventListener('touchStart', handleOffsetMouseDown);\n  };\n\n  const onClear = () => setLines([]);\n\n  const onUndo = () => {\n    const linesCopy = [...lines];\n    const drawingHistoryCopy = [...drawingHistory];\n    const lastLine: CanvasLine | undefined = linesCopy.pop();\n    if (lastLine) {\n      drawingHistoryCopy.push(lastLine);\n      setLines(linesCopy);\n      setDrawingHistory(drawingHistoryCopy);\n    }\n  };\n\n  const onRedo = () => {\n    const linesCopy = [...lines];\n    const drawingHistoryCopy = [...drawingHistory];\n    const lastUndoLine = drawingHistoryCopy.pop();\n    if (lastUndoLine) {\n      linesCopy.push(lastUndoLine);\n      setLines(linesCopy);\n      setDrawingHistory(drawingHistoryCopy);\n    }\n  };\n\n  const strokeWidthBySize =\n    {\n      small: 3,\n      medium: 5,\n      large: 7,\n    }?.[strokeWidth] ?? 5;\n\n  return (\n    <Space direction=\"vertical\" align=\"center\">\n      <Stage\n        width={width}\n        height={height || width}\n        onMouseDown={handleMouseDown}\n        onMousemove={handleMouseMove}\n        onMouseup={handleMouseUp}\n        onTouchStart={handleMouseDown}\n        onTouchMove={handleMouseMove}\n        onTouchEnd={handleMouseUp}\n        onMouseLeave={handleMouseLeave}\n        onMouseEnter={handleMouseEnter}\n        className={clsx('drawing-canvas', className)}\n        style={{ width: `${width}px`, height: `${height || width}px` }}\n        willReadFrequently={willReadFrequently}\n        id=\"drawing-canvas\"\n      >\n        <Layer>\n          {lines.map((line, i) => (\n            <Line\n              key={i}\n              points={line}\n              stroke=\"#222222\"\n              strokeWidth={strokeWidthBySize}\n              tension={0.5}\n              lineCap=\"round\"\n              globalCompositeOperation=\"source-over\"\n            />\n          ))}\n        </Layer>\n      </Stage>\n      {showControls && (\n        <Space>\n          <Button onClick={onUndo} disabled={lines.length === 0}>\n            <UndoOutlined />\n            <Translate pt=\"Desfazer\" en=\"Undo\" />\n          </Button>\n          <Button onClick={onRedo} disabled={drawingHistory.length === 0}>\n            <UndoOutlined />\n            <Translate pt=\"Refazer\" en=\"Redo\" />\n          </Button>\n          <Button onClick={onClear} disabled={lines.length === 0}>\n            <DeleteOutlined />\n            <Translate pt=\"Apagar\" en=\"Clear\" />\n          </Button>\n        </Space>\n      )}\n    </Space>\n  );\n};\n","import clsx from 'clsx';\n// Ant Design resources\nimport { Image } from 'antd';\n// Hooks\nimport { useBlurCards } from 'hooks/useBlurCards';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useTDBaseUrl } from 'hooks/useTDBaseUrl';\n// Utils\nimport { PUBLIC_URL } from 'utils/constants';\n// Components\nimport { DualTranslate } from 'components/language';\nimport { ImageBlurButtonContainer } from 'components/image-cards';\n// Sass\nimport './CharacterCard.scss';\n\nexport type OverlayColor = 'blue' | 'gray' | 'green' | 'orange' | 'pink' | 'purple' | 'red' | 'yellow';\n\ntype CharacterCardProps = {\n  /**\n   * The size of the card\n   */\n  size: number;\n  /**\n   * The color of the overlay\n   */\n  overlayColor?: OverlayColor;\n  /**\n   * The character object\n   */\n  character: ContenderCard;\n  /**\n   * The class name to be appended to the container\n   */\n  className?: string;\n  /**\n   * Whether the name should be hidden or not\n   */\n  hideName?: boolean;\n};\n\nexport function CharacterCard({ size, overlayColor, character, className, hideName }: CharacterCardProps) {\n  const { dualTranslate } = useLanguage();\n  const { shouldBeBlurred } = useBlurCards();\n  const baseUrl = useTDBaseUrl('tdi');\n\n  const isBlurred = shouldBeBlurred(character.id);\n\n  const imageURL = character.id.replace(/-/g, '/');\n\n  return (\n    <ImageBlurButtonContainer cardId={character.id}>\n      <div className={clsx('character-card', className)} style={{ width: `${size}px` }}>\n        {!hideName && (\n          <span className=\"character-card__name\">\n            <DualTranslate>{character.name}</DualTranslate>\n          </span>\n        )}\n        {overlayColor && (\n          <img\n            src={`${PUBLIC_URL.IN_GAME}/w-overlay-${overlayColor}.png`}\n            className=\"character-card__overlay\"\n            alt=\"character\"\n            style={{ width: `${size}px` }}\n          />\n        )}\n        <Image\n          src={`${baseUrl}${imageURL}.jpg`}\n          width={size}\n          className={clsx('character-card__image', isBlurred && 'character-card__image--blur')}\n          fallback={`${PUBLIC_URL.IN_GAME}/w-no-image.jpg`}\n          alt={dualTranslate(character.name)}\n          preview={false}\n          title={dualTranslate(character.name)}\n        />\n      </div>\n    </ImageBlurButtonContainer>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Popover, Tag } from 'antd';\n// Hooks\nimport { useDevFeatures } from 'hooks/useDevFeatures';\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { ImageBlurButtonContainer, ImageCard } from 'components/image-cards';\nimport { DualTranslate } from 'components/language';\n// Sass\nimport './CrimeItemCard.scss';\n\ntype CrimeItemCardProps = {\n  /**\n   * Crime item\n   */\n  item: CrimesHediondosCard;\n  /**\n   * Card width\n   */\n  cardWidth: number;\n  /**\n   * Whether to enable the preview or not\n   */\n  preview?: boolean;\n  /**\n   * Whether the card is selected or not\n   */\n  isSelected?: boolean;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Optional active color\n   */\n  activeColor?: string;\n};\n\nexport function CrimeItemCard({\n  item,\n  cardWidth,\n  activeColor,\n  preview = true,\n  isSelected = false,\n  className = '',\n}: CrimeItemCardProps) {\n  const { dualTranslate } = useLanguage();\n  const { isDebugEnabled } = useDevFeatures();\n  return (\n    <ImageBlurButtonContainer cardId={item.id}>\n      <div\n        className={clsx('crime-item-card', isSelected && 'crime-item-card--selected', className)}\n        style={activeColor && isSelected ? { borderColor: 'black', backgroundColor: activeColor } : {}}\n      >\n        <Popover content={dualTranslate(item.name).toUpperCase()}>\n          <Tag\n            className=\"crime-item-card__name\"\n            color={item.type === 'weapon' ? 'geekblue' : 'volcano'}\n            style={{ maxWidth: `${cardWidth + 16}px` }}\n          >\n            <span>{isDebugEnabled ? item.id : <DualTranslate>{item.name}</DualTranslate>}</span>\n          </Tag>\n        </Popover>\n        <ImageCard\n          imageId={item.id}\n          cardWidth={cardWidth}\n          className=\"crime-item-card__image\"\n          preview={preview}\n        />\n      </div>\n    </ImageBlurButtonContainer>\n  );\n}\n","// Sass\nimport './GroupQuestionCard.scss';\n\ntype GroupQuestionCardProps = {\n  /**\n   * The question to be displayed\n   */\n  question: GroupQuestionCard;\n  /**\n   * The number to be displayed. If not provided, the question's number will be used.\n   */\n  overrideNumber?: number;\n};\n\nexport function GroupQuestionCard({ question, overrideNumber }: GroupQuestionCardProps) {\n  return (\n    <span className=\"group-question-card group-question-card--span\">\n      <span className=\"group-question-card__prefix\">{question.prefix}</span>\n      <span className=\"group-question-card__number\">{overrideNumber ?? question.number}</span>\n      <span className=\"group-question-card__suffix\">{question.suffix}</span>\n    </span>\n  );\n}\n","import clsx from 'clsx';\nimport { useEffectOnce } from 'react-use';\n// Ant Design Resources\nimport { Button, Space, SpaceProps } from 'antd';\nimport { RotateLeftOutlined, RotateRightOutlined } from '@ant-design/icons';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useGlobalState } from 'hooks/useGlobalState';\n// Components\nimport { ImageCard } from 'components/image-cards';\nimport { Translate } from 'components/language';\n// Sass\nimport './MonsterCard.scss';\n\ninterface MonsterCardProps extends SpaceProps {\n  currentMonster: Monster;\n  showControls?: boolean;\n  cardWidth?: number;\n}\n\nexport function MonsterCard({ currentMonster, showControls = true, cardWidth, ...props }: MonsterCardProps) {\n  const [monsterOrientation, setMonsterOrientation] = useGlobalState('monsterOrientation');\n  const defaultCardWidth = useCardWidth(5, { gap: 16, maxWidth: 360 });\n\n  useEffectOnce(() => {\n    if (currentMonster.orientation === 'horizontal') {\n      setMonsterOrientation(currentMonster.orientation);\n    }\n  });\n\n  const onChangeOrientation = () => {\n    const newOrientation = monsterOrientation === 'vertical' ? 'horizontal' : 'vertical';\n    setMonsterOrientation(newOrientation);\n  };\n\n  const baseClass = 'monster-card';\n  return (\n    <Space direction=\"vertical\" align=\"center\" {...props}>\n      <ImageCard\n        imageId={currentMonster.id}\n        cardWidth={cardWidth || defaultCardWidth}\n        className={clsx(\n          baseClass,\n          monsterOrientation === 'vertical' ? `${baseClass}--vertical` : `${baseClass}--horizontal`\n        )}\n      />\n      {showControls && (\n        <Button onClick={onChangeOrientation}>\n          {monsterOrientation === 'vertical' ? <RotateRightOutlined /> : <RotateLeftOutlined />}\n          <Translate pt=\"Girar\" en=\"Rotate\" />\n        </Button>\n      )}\n    </Space>\n  );\n}\n","import clsx from 'clsx';\n// Sass\nimport './MovieCard.scss';\n\ntype MovieCardProps = {\n  movie: MovieCard;\n  disableSuffix?: boolean;\n  suffixColor?: string;\n  disablePrefix?: boolean;\n  prefixColor?: string;\n};\n\nexport function MovieCard({ movie, disableSuffix, disablePrefix, prefixColor, suffixColor }: MovieCardProps) {\n  return (\n    <div className=\"movie-card\">\n      <div\n        className={clsx('movie-card__suffix', disableSuffix && 'movie-card__suffix--disabled')}\n        style={{ backgroundColor: !disableSuffix && suffixColor ? suffixColor : 'rgba(248, 248, 248, 0.6)' }}\n      >\n        {movie.suffix}\n      </div>\n\n      <div\n        className={clsx('movie-card__prefix', disablePrefix && 'movie-card__prefix--disabled')}\n        style={{ backgroundColor: !disablePrefix && prefixColor ? prefixColor : 'rgba(248, 248, 248, 0.6)' }}\n      >\n        {movie.prefix}\n      </div>\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Components\nimport Highlighter from 'react-highlight-words';\nimport { Translate } from 'components/language';\n// Sass\nimport './MovieReviewCard.scss';\n\ntype MovieReviewCardProps = {\n  /**\n   * The type of review\n   */\n  type: 'positive' | 'negative';\n  /**\n   * The review itself\n   */\n  text: string;\n  /**\n   * Optional list of words to be highlighted in the review\n   */\n  highlights?: string[];\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n};\n\nexport const MovieReviewCard = ({ type, text, highlights = [], className = '' }: MovieReviewCardProps) => {\n  const baseClass = 'movie-review-card';\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${type}`, className)}>\n      <span className={`${baseClass}__header`}>\n        {type === 'positive' ? (\n          <Translate pt=\"Crítica Positiva\" en=\"Positive Review\" />\n        ) : (\n          <Translate pt=\"Crítica Negativa\" en=\"Negative Review\" />\n        )}\n        {type === 'positive' ? ' 👏' : ' 🤮'}\n      </span>\n      <div className={`${baseClass}__content`}>\n        <Highlighter\n          className={`${baseClass}__text`}\n          highlightClassName={clsx(`${baseClass}__text-highlight`, `${baseClass}__text-highlight--${type}`)}\n          searchWords={highlights}\n          autoEscape={true}\n          textToHighlight={text}\n        />\n      </div>\n    </div>\n  );\n};\n","var _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgAlienSigns(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 512 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"sign-0\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M99.67 218.8 98 208.2a142.18 142.18 0 0 0-.29-46.2l1.27-10.56c15.45-25.28 25.75-53.92 51.14-72.51 55.64-40.73 116.1-46.48 177.51-19.22 62.16 27.59 89.34 80 86.45 147.14-2 47.09-26.81 84.51-68 102C301.16 328 282.25 354.34 290 402c2.83 17.36 1.18 35.45 1.58 53.21l-6.79 10.56c-46.18 7.62-49.63 4.78-51-42-.16-5.59-.93-11.25-.33-16.75 4.52-41.22-1.3-71.85-50.58-85.86-38.71-11-61.63-46.15-74.11-85.5-1.86-5.93-6-11.23-9.1-16.86Zm163.1-117.51a110.34 110.34 0 0 0-46.41 9.36c-32.92 14.77-54.65 39.4-58 76.33-3 32.2 9.55 58.6 36.34 77.17 22.25 15.42 31.38 10.92 33.24-15.7.92-13 .93-26.14 1.62-39.21.83-15.88 7.59-26.73 24.87-28.33 17.79-1.63 29.16 6.91 33 23.52 2.68 11.69 1.93 24.13 3.26 36.17 1.17 10.64-4.43 25 8.12 30.36s23-5.13 32.16-12.7c25.15-20.77 31-54.64 16.92-92.69-16.09-43.27-43.89-64.31-85.12-64.28Z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"sign-1\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M295 248.7a115 115 0 0 1 18 6.8 101.6 101.6 0 0 1 16.6 10.2 90.5 90.5 0 0 1 14.3 13.6l3 3.9 1.5 2 1.3 2 2.6 4.3a205 205 0 0 1 2.2 4.3 79.2 79.2 0 0 1 6.3 18 86.5 86.5 0 0 1 2 17.6 100.7 100.7 0 0 1-5 31l-1.6 5a53 53 0 0 1-1.8 5 21.8 21.8 0 0 1-5.5 8.5 13.8 13.8 0 0 1-2 1.4 13.5 13.5 0 0 1-2.3 1.1 16 16 0 0 1-5.7.9c-4.2 0-9.5-1.5-16.4-4.7a69.7 69.7 0 0 1-15.4-9.6 24.6 24.6 0 0 1-6.8-8.4 15.8 15.8 0 0 1-1.3-3.9 36.4 36.4 0 0 1-.4-3.6 28.2 28.2 0 0 1 .1-3.4v-3.3a59.5 59.5 0 0 0-1.6-13.7 11.3 11.3 0 0 1-.3-1.3 9.7 9.7 0 0 1-.4-1l-.1-.6-.2-.4c-.2-.3-.2-.6-.3-1l-1.6-3a28.1 28.1 0 0 0-2-2.8 26.8 26.8 0 0 0-3.4-3.1 33.4 33.4 0 0 0-11.4-5.4 52.4 52.4 0 0 0-11.3-1.7h-6l-3.5.3c-1.2 0-2.4.3-3.6.4a79 79 0 0 0-12.9 2.7c-1 .2-1.9.5-2.7.9l-2.5 1a34.8 34.8 0 0 0-4 2 15.4 15.4 0 0 0-4.3 3.7 11.4 11.4 0 0 0-2 4.4 28.5 28.5 0 0 0-.3 8.5 60.4 60.4 0 0 0 2.2 11.7c1 3.7 1.9 7.6-.5 12s-8 9.3-19.8 15.6-20.8 7.4-27.6 4.8-11.2-8.6-13.5-16a129.6 129.6 0 0 1-5.4-25.5 99.7 99.7 0 0 1-.4-14.4 85 85 0 0 1 2.1-15.4 78.2 78.2 0 0 1 5.4-15.6 76.5 76.5 0 0 1 8.9-14.4 82.8 82.8 0 0 1 11.3-11.8 89.8 89.8 0 0 1 12.4-9 109 109 0 0 1 24.8-10.7 133.2 133.2 0 0 1 23.1-4.7l2.8-.3 1.3-.1 1.5-.1 6.2-.4h6c2 0 4.2.3 6.2.4a98 98 0 0 1 23.7 5.3Zm-16.1-136-6.4-.6-3.1-.2-1.6-.2h-1.6l-6.4-.3h-13.2c-1.1 0-2.2 0-3.3.2l-3.3.2-6.7.6-6.7.9-3.3.4-3.4.6-6.6 1.3-6.6 1.5c-2.2.5-4.4 1-6.6 1.7-4.3 1.4-8.7 2.6-13 4.2l-6.3 2.4-6.3 2.6-3 1.4-3.1 1.4-6.2 3c-4 2.2-8 4.2-11.8 6.6a226 226 0 0 0-22.5 15.1l-5.3 4.2-5.2 4.3-2.6 2.2-2.5 2.2-5 4.6a261.9 261.9 0 0 0-18.5 19.6A246.2 246.2 0 0 0 72.3 214 226.3 226.3 0 0 0 58 238a162.6 162.6 0 0 0-11.4 27.7l-1.1 4.1-.5 2-.4 2-1.4 7.4c-.4 2.5-.8 5-1 7.4s-.5 5-.6 7.5a178.8 178.8 0 0 0 6 57.4c4.5 17 12.6 31.3 22.4 39.4s21.2 10.1 32.3 2.9c11.3-7.1 14.6-15.4 14.3-24.9s-3.9-20-6.7-30.6a116.5 116.5 0 0 1-4.2-35 86.2 86.2 0 0 1 2.2-16.4l.2-1 .2-.7.5-1.5.5-1.7c.1-.6.4-1.1.7-1.8l1.5-3.7 1.9-3.9a144.8 144.8 0 0 1 9.3-15.9 172.4 172.4 0 0 1 11.5-15.4 186.2 186.2 0 0 1 13.3-14.3A182.2 182.2 0 0 1 162 216c2.5-2.1 5.1-4 7.7-5.9 2.7-1.7 5.2-3.6 8-5.3a161.2 161.2 0 0 1 16.6-9.1 144.3 144.3 0 0 1 35.1-11.6l4.5-.9 4.6-.6c3-.5 6.1-.5 9.2-.8 1.5-.2 3-.1 4.6-.2h4.6l4.8.1c1.6 0 3.2 0 4.8.2 3.1.3 6.3.5 9.4 1 1.6.1 3.2.2 4.7.5l4.7.8 2.3.4 2.3.5 4.6 1 4.5 1.2 2.3.6 2.2.7a148.4 148.4 0 0 1 77.3 56.8 151.5 151.5 0 0 1 21.1 42.7c.7 1.9 1.1 3.7 1.6 5.6l.8 2.8.6 3a132 132 0 0 1 2 11.6 128.5 128.5 0 0 1 1.1 23.2 139 139 0 0 1-2 17 129.6 129.6 0 0 0-2.1 15.7c-.4 10 2.2 19 14.2 28.8a20 20 0 0 0 18.1 4 25.4 25.4 0 0 0 8.5-4.4 41.2 41.2 0 0 0 7.4-7.7 75.6 75.6 0 0 0 10.8-21.6 161.8 161.8 0 0 0 5.7-24.2 168.8 168.8 0 0 0 2-33.3v-4.2l-.4-4.1c0-1.4-.2-2.8-.4-4.1l-.4-4.1a189 189 0 0 0-2.8-16.5 196.4 196.4 0 0 0-25.7-62.2 214.6 214.6 0 0 0-113-89.1 209.7 209.7 0 0 0-49-11.7Z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"sign-2\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m289.6 306.3 1.3 50.2.3 11.6.1 5.6v4.1a1.2 1.2 0 0 1 0 .2v.1l-.3 2.7-.1 1a.8.8 0 0 0 .4.8 2 2 0 0 0 .8.3l1 .1 1.8.3H298.3l6.4.2 49.2 1c10.7.1 23.1-1 33 1.6 5 1.3 9.3 3.4 12.4 7.2a20.7 20.7 0 0 1 3.8 6.8 21.9 21.9 0 0 1 .6 2l.5 2.4v.8a26.7 26.7 0 0 0 .9 3.8l.1.5v.3a3 3 0 0 0 0 .4 2.7 2.7 0 0 0 .4.7 1.8 1.8 0 0 0 .2.3l.2.4.4.5a4.7 4.7 0 0 1 1 2.6 3.4 3.4 0 0 1-.4 1.4v1.3c0 .8-.5 1.7-.6 2.5a28.2 28.2 0 0 1-3.2 8.1 26.5 26.5 0 0 1-11.8 10.2c-9.8 4.7-23 5.7-35.5 7-17.6 2-35.1 3.3-52.7 4l-6.5.3-12.5.3-13 .2h-6.6l-3.1-.3-3-.5a43.1 43.1 0 0 1-10.4-3.6 44 44 0 0 1-4.2-2.4 43.4 43.4 0 0 1-8.6-7.2l-1-1-.7-.9-1.5-1.8a40.2 40.2 0 0 1-5-9.1c-.8-3.5-2-7-2.4-11s-.5-8-.7-12l-.5-12-.4-9.6-.8-24.3-1.6-48.5q-2-54.2-4.6-108.3l-2.9-54-.8-13.2v-2.2a4 4 0 0 0 0-.5 1.1 1.1 0 0 0-.5 0H210l-5.3.2-10.9.3-43.6 1.4c-22.5.7-45-1-45.7-27.6s21-34.7 46-36l42.7-2.5L204 63l2.7-.1 1.3-.1 2.2-.1 10-.4c6.6-.2 13.3-.5 19.9-.4l4.8.2c.8 0 1.5.3 2.2.4a16.2 16.2 0 0 1 2.2.4l8 2.4a34.4 34.4 0 0 1 4.6 2.4 24.4 24.4 0 0 1 3 2.2l.1.1-.9 1.1h.1l.3.3.4.5c2.3 2.3 4.6 4.5 7 7.1a23.3 23.3 0 0 1 2.5 5.2l.6 1.4.4 1.5a31.7 31.7 0 0 1 .8 3c.8 4.3 1.3 8.8 1.8 13.3l1.3 13.7.6 6.8.1 1.6V126.6l.3 1.8 1.3 14.4q2.7 28.6 4.6 56.3c2.7 37 4 72.9 3.4 107.2Z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"sign-3\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M461.75 244.9c-1.21 11.1-6.12 22-13.49 32-45.88 61.71-99.74 116.1-156.35 167.75-24.23 22.1-48.18 20.91-72.59-1.26q-74.65-67.8-147.89-137.16c-26.93-25.41-27.31-35.92-6.05-67.31 27.42-40.48 62.39-74.34 96.12-109.26 20.12-20.83 41.23-40.71 61.14-61.74 18.71-19.76 39.66-22.15 59.7-5.43 59.54 49.67 115.47 103.4 170.4 158.1 5.98 5.96 9.11 14.1 9.01 24.31ZM259.38 380.45c3.9-1.64 12.11-2.91 17.21-7.58C312.36 340.05 346.94 306 374.88 266c7.69-11 8.95-23.6-1.46-33.31-32-29.9-64.39-59.48-97.47-88.21C262.73 133 248.39 135.19 236 148c-30.51 31.55-61.28 62.84-91.55 94.6-15.62 16.4-15.67 32.45 2.11 48.26 28.6 25.41 56.64 51.46 84.82 77.34 7.08 6.45 14.62 11.63 28 12.25Z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"sign-4\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m219 457.88-10.83.1c-18.18-16.71-30.22-37.62-41-59.45C145.22 354.17 123 310 101.2 265.57c-25-51-51.29-101.58-74-153.64C14 81.81 25.05 66.41 55.89 63.86 187.36 53 319.09 53 450.85 55.12c5.58.09 11.33.37 16.68 1.79 13.8 3.65 24 11.06 22.64 27.28-1.28 15.32-10.21 24-25.32 24.82-17.71 1-35.7 2.6-53.2.65-29.53-3.27-44.51 10.85-54.58 36.58-19.4 49.54-39.08 99-61 147.5-24.85 55.08-40.95 114.35-77.07 164.14Zm-39.1-347.69c-18.24-8.16-36.91-1-55.28-.92-26.13.16-29.76 8.07-21.86 33.72 19.43 63 55.31 118 84.63 176.22 4.47 8.86 10.09 19.63 22.08 19.09s16.49-11.23 20.43-20.69q37.17-89.08 73.8-178.37c7.36-17.94.85-30.38-18.16-32.17-25.82-2.42-52.06-6-77.57 3.15Z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"sign-5\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M182.1 229.86c0 43.91.15 87.82 0 131.73-.14 30.88 6.27 39 36.41 40.25 42.92 1.72 85.89 2.32 128.85 3.12 12.19.23 24.34-.16 35.71 5.26 12.87 6.14 16.36 17.57 15.55 30.31s-10.46 16.83-21.38 18.22c-74.6 9.5-149.18 7.16-223.64-1.4-19.23-2.21-29.71-14.34-31-33.92-7.43-113.78-11.74-227.65-7.68-341.68.72-20.16 10.22-34.2 32.38-34.63 22.77-.45 31.84 14.25 32.15 34.19.75 49.51.25 99 .25 148.55Z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"sign-6\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m246.35 42.82 10.91-.29c11.43 12.37 23.26 24.6 29.57 40.55q68.06 172.1 135.76 344.34c4 10.18 5.09 20.46-4.74 28.06-10.14 7.84-21.11 5.95-31.71.53-10.95-5.6-14.95-16.23-18.79-26.87-17.77-49.24-35.29-98.58-53.35-147.72a6460.88 6460.88 0 0 0-41.8-110.06c-3.09-8-8.22-15.4-18-15.63-9.94-.24-14.46 7.3-18.15 15.17-2.78 5.93-6 11.72-8.06 17.9-16.33 48.74-32 97.71-48.73 146.31-13.09 38-27.09 75.64-41.36 113.18-7.25 19.08-23 25.4-41 18.43-17.64-6.83-8-22.09-6-34.17.91-5.47 3.29-10.71 5.23-16 29.1-78.92 56.63-158.48 88-236.5 18.65-46.5 30.53-96.48 62.22-137.23Z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"sign-7\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M110.14 235.27c0-62.18-.26-107.1.07-152C110.5 43.89 135 30.71 170.07 52c40.14 24.4 73.15 58.11 109.77 87.13 33.71 26.72 67.74 53 101.21 80 25.65 20.71 27.65 31.61 7.3 56-59.19 70.86-131.64 127.35-205.11 182-35 26-59.19 11.76-64.59-31.7-8.56-68.92-9.36-138.12-8.51-190.16Zm133 103.5c32.42-16.57 53.55-45.71 78-71 9.14-9.44 7.53-21.88-2.12-30.16-37.59-32.24-75.63-64.25-119.26-88-16.81-9.16-32.76-3.51-33.67 18.58-2.7 65.52 1.61 130.84 8.59 196 1.58 14.76 8.93 21.06 22.52 12.22 15.47-10.06 33.1-17.86 42.47-35.37a12 12 0 0 0 3.49-2.27Z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"sign-8\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M228 91c13.77-9.36 27.1-22.35 45.51-13.09 19.42 9.77 17.55 28.77 17.66 46.65.4 68.19.73 136.39 1.61 204.58.51 40 4.81 43.8 46 45 5.61.16 11.22.16 16.82.4 18.59.8 37.68 3 38.72 26.82 1.08 24.6-16.33 30.85-37.33 31.41-40.15 1.09-80.28 2.63-120.43 3.58-27.08.64-54.19 1.29-81.26.64-25.33-.61-39.3-14.2-37.38-35.34 2.13-23.45 20.12-23.58 37.42-23.8 81.42-1.06 73.1 7.85 72.94-74.4-.12-67.21-1-134.43-1.51-201.64q.57-5.39 1.23-10.81Z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"sign-9\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M429.2 174.7c-30.3 20.5-57.1 46.6-87.8 57.7-17.4 9-32.3 17-47 24.2q4.4 8.2 8.5 16.4c29.3 51.8 54 94.4 77.5 137.5 8.2 15 23.8 32.6-1.6 49.2-26 17.2-37.6-1-50-16.9-33.6-42.6-58.9-90.2-86.1-136.7C201.6 236 159.3 166.6 117.4 97c-9.3-15.4-16.5-32.2 6.5-45.7s38.2-2.2 48.9 14.5c29.2 46 60.8 90.6 88.5 134.3 14-10.9 30.1-18.4 45.5-27 30.5-17.1 60.2-35.3 90.2-53.2 6.6-4 14.6-5.8 28.3 17s11 33 3.9 37.8ZM126 255.4a49 49 0 0 0-36.6 16.8A41.6 41.6 0 0 0 77.1 298a30.4 30.4 0 0 0 8.4 22.5l1 1c2 7.7 6.5 15 12 21.3 8 9.2 20.3 14.2 32.4 10.6 9.8-2.9 17.6-11 22-20 7.3-15.5 11.7-35.3 6.6-52.1a36.5 36.5 0 0 0-33.5-25.8Z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"sign-10\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M410.7 193.4a41.4 41.4 0 0 0-1.4-10.3l-1.3-4-.4-1-.4-.9-.7-1.6-.8-1.5-.8-1.4-1.5-2.5-1.5-2-.7-1-.7-1-2.6-3-1.2-1.3-1-1.1-2.1-2-3.2-2.9-.9-.8-3.2 3.3-1.8 1.9-1 .9 6-6.1-.1-.2-.4-.3-5-5-10-10-40.4-40.2-45-44.9a133.7 133.7 0 0 0-9.9-9.3 73.3 73.3 0 0 0-10.4-7.3 49.6 49.6 0 0 0-22.3-6.4 49 49 0 0 0-6 .2 49.8 49.8 0 0 0-6 1 45.2 45.2 0 0 0-10.5 4l-2.4 1.5-2.3 1.6a51.5 51.5 0 0 0-4.7 3.6 63.6 63.6 0 0 0-8.9 9.8l-23.2 32-16.4 22.5-48.3 65.9-.2.3-1.2 1.4-4 5a60.2 60.2 0 0 0-5.7 9 41.7 41.7 0 0 0-3.4 8.7l-.4 1.4-.1.7-.2.8-.6 3.5c-.2 1.1-.2 2-.2 3v2.8l.1 2.9.3 2.6a48.5 48.5 0 0 0 3.1 11.5l.8 1.8 1.7 3.4c.6 1.2 1.1 1.8 1.7 2.8a54.4 54.4 0 0 0 3.3 4.7l1.6 2 1.5 1.7 1.4 1.5 1.4 1.5 4.8 4.5 3.7 3.3 1.2 1.1.4.4 5.5 5.8 12.4 13.2q24.8 26.4 50 52.5l11.3 11.7-21.3 24.5-22.5 25.9-5 5.5-5.4 6c-3.6 4-7 8-10.2 12a142.5 142.5 0 0 0-15.5 23.4c-3.8 7.5-6 14.6-6.1 21.1a24 24 0 0 0 1.6 9.2 21.6 21.6 0 0 0 5.3 7.6 23.2 23.2 0 0 0 7.6 5 19.5 19.5 0 0 0 4 1 23 23 0 0 0 4.2.2 43 43 0 0 0 19-6.8 148.8 148.8 0 0 0 21.4-16q5.5-4.8 11-10.2a364 364 0 0 0 11.5-11.5l45.8-51q22.8 22.6 46 44.6l3.4 3.1 2 2 .9.8.9.8 1.8 1.6 1.7 1.5 3.5 3c4.5 3.9 9 7.5 13.4 11 8.7 7 17.3 13 25.2 17.5s15.3 7.1 21.8 7.2a24.2 24.2 0 0 0 4.8-.4 21.3 21.3 0 0 0 4.5-1.4 24.5 24.5 0 0 0 8.3-6.3 18.9 18.9 0 0 0 4.6-9.3 23.7 23.7 0 0 0-.4-10.2c-1.8-7-6.2-14.4-12-21.7a235.4 235.4 0 0 0-20.7-22L351.5 396c-3.8-3.6-6.1-6-9.8-10-15-16.5-30.2-32.9-45.5-49.5L392.6 229l1-.9 3.3-3.2a65.2 65.2 0 0 0 5-5.8l.7-1 .9-1.2.8-1.3 1-1.6.5-.8.2-.4.3-.5 1-2.1.5-1.1a45.4 45.4 0 0 0 1.4-4.3 40.7 40.7 0 0 0 1.5-11.4Zm-62.9-16.6Zm-202 32.7Zm-2.7-.2h.3-.3Zm110.3 76.4-2 2.4-2.4-2.5-49.6-53.4-13-14-6.5-7-1.7-1.7-.4-.5-.2-.2-.4-.4-.3-.3 40.5-54.8q9.4-12 18.9-24.5l9.4-12.5 1.2-1.5.6-.8.3-.4H248.1a.4.4 0 0 1 .4.2.5.5 0 0 1 0 .3l.2.2 1.3 1.2 2.5 2.5 10 10 20.2 19.8q20.3 20 41.2 40.2l7.5 7.2-33.7 39Zm93.5-76Zm24.9-15.6H371.4Z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"sign-11\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m351 318.55-3.44 16.14c-5.86 4.72-8 10.74-6.27 18.07L337 367.94c-4.29 2-5.15 5.83-5.31 10L287.71 430l-16.58 10.84c-12.59 3.55-25 7.73-37.78 10.54C138.52 472.3 61.4 425.48 41.7 330.9 25 250.61 35.76 168.65 34.61 87.43c-.25-18.05 11.48-27 29.46-26.27 18.59.71 26.58 12 26.71 29.39.44 58 .51 116.05.85 174.07.17 30.33 5 59.92 19.3 86.88 16 30.3 41.84 48.75 76.45 48.84 38.52.1 68.15-16.88 84.83-53.57 16.47-36.23 18.46-74.21 14.7-112.79-4.29-43.93-2.57-87.91-2.23-131.85.25-32.94 13.9-45.81 46.5-46.26 34.61-.48 69.24.09 103.86.16 38.95.07 42.49 3.47 44.72 43.21l-21.86 14c-29-5-57.58 2.12-86.37 3.12-11.68.41-21.81 6.79-18.18 22.11-1.62 18.63-5.63 37.29.5 55.85q-1 5.74-1.92 11.49c-3.39 26.4-5.64 52.78 1.3 79l-.82 22q-.69 5.89-1.41 11.74Z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"sign-12\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M222.05 181.78c0-29.93-.38-59.87.13-89.79.33-19.95 8.32-34.92 30.64-36.37 23.44-1.52 28.05 15.11 28.63 33.09 1.78 55.19 3.4 110.39 3.82 165.6.17 22.73 6.41 40.75 22.37 58 29.2 31.52 55.68 65.56 83.29 98.56 10.43 12.47 17.94 27.13 3 39.32-12.93 10.57-28.69 7.19-40.45-5.3q-35.58-37.8-70.36-76.36c-16.8-18.55-32.69-18.81-49.59.08-21.2 23.7-43 46.92-64.74 70.11-7 7.49-14.41 15-25.4 16.49-11.92 1.66-22.58-.69-29.69-11.3-7.56-11.31-3.73-21.28 4.56-30.42 27-29.81 53-60.64 81.38-89.12 22.2-22.3 32.35-46.32 28.1-78.09-2.82-21.14-.53-43-.53-64.47Z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"sign-13\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M240 61.55c29.53 0 53.84-.58 78.12.15 33.71 1 41.14 12.86 27.06 44.7-15.48 35-31.32 69.94-49.11 103.8-11.4 21.7-10.68 38.5 4.76 58.57 33 42.92 63.51 87.81 94.93 132 7.7 10.83 15.69 22.55 8.49 36.07-7 13.11-21.15 9.76-32.86 10.05q-91.05 2.29-182.13 3.75a269.3 269.3 0 0 1-33.61-1.29c-35.65-3.87-44.47-17.64-28.65-50.52 18.56-38.71 38.31-77.1 61-113.48 17.22-27.62 18.32-48.2-3.67-74.89-26.53-32.21-53.53-65-71.91-103.25-12.8-26.63-10.69-30.29 18.47-38.31 37.61-10.36 76.24-4.73 109.11-7.35Zm15 337.86c12.14 0 24.3.27 36.44-.1 8.32-.25 17.54.06 21.43-9.66 3.38-8.45-2.84-14.12-7.37-19.87-12.13-15.41-25.54-29.92-36.5-46.1-12.17-18-22.43-17.35-33.61-.08a298.38 298.38 0 0 0-11.49 19.23c-9.08 16.69-31.7 33.23-21.68 50.84 8.93 15.81 34.56 4.78 52.78 5.74ZM247.36 102c-14.51 9.35-43.15-7.35-50.82 21.71-3.5 13.22 35.78 59 46.57 58.65 11.31-.4 39.72-45.11 38.39-61.14-1.7-20.34-17.59-17.91-34.14-19.22Z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"sign-14\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m155.4 257.39.13 16.65c-1.64 32.57-3.87 65.12-4.7 97.7-.45 17.62 7.22 32.67 26.55 33.49 52.13 2.23 104.42 5.79 156.34-3.77 23.1-4.25 33.35-17.77 32.42-41.24-1.47-37.3-1.76-74.64-3.19-111.93-1.7-44.76-4.17-89.5-6.12-134.25-.91-20.92 8.71-34.6 29.91-36.66 20.34-2 31 9.31 33.38 29.32.65 5.42 3.14 10.62 4.78 15.93l.89 16.28c-.56 12.06-1.66 24.13-1.59 36.19.39 74.58 1.85 149.16 1.3 223.72-.34 46.31-10.69 55.37-56.67 55.82-75.46.75-150.91 1.19-226.37 1.75l-10.82-.8c-30.37-9.37-38.74-31.68-41.55-61.44C85.69 347.52 87 301 86.51 254.4c-.56-55-.38-110.06.89-165 .65-27.9 24.73-42 45.43-28.7 12.45 8 10.58 20.68 11.89 32.49 6.07 54.54 1.28 109.81 10.68 164.2Z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"sign-15\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M231.36 224.22c0-46.41-.32-84.69.17-123 .18-13.38-3.09-31.23 17.09-32.61 20.73-1.43 21.5 15.35 23.52 30.9 5.44 41.81 4.48 83.78 5 125.76.83 63.28 2.58 126.56 4.05 189.84.33 14-1 28.13-18.79 28.29s-22.9-13.34-23.59-28.8c-2.92-66.13-10.23-132.12-7.45-190.38Z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"sign-16\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m77.78 247.2 1.62-22.11c11.11-20.59 11.47-44.48 23.13-65.59C152 69.81 274.8 42.92 356.94 105.27c7.38 5.61 15.6 10.1 23.43 15.11a9.55 9.55 0 0 0 2.13 3.46c11.61 26.29 30.24 49.23 35.32 78.69 6 34.56 7.51 68.74-1.34 103-1.77 6.86-5.8 15.13 2.23 20.56 6.35 4.3 12.52-.48 18.39-3.13 7.67-3.47 15.07-7.65 23-10.45 11.9-4.23 24.86-6.92 32.12 6.91 6.66 12.68 5.91 27.46-6.56 35.47-47.22 30.3-95.88 58.26-149.14 76.83-14.47 5-28.65.88-37.11-12.5-10.07-15.93 3.78-25 13.73-32 65.58-45.75 63.63-191.11 12.58-233.83-50.85-42.57-139.33-28.31-168.41 31.66-27.31 56.22-22.26 146.21 33.74 193.89a169.89 169.89 0 0 1 14.11 13.65c9.22 9.92 11.75 21.65 5.46 33.61-6.48 12.34-19 17.32-31.18 12.77C127.82 419.73 77 398.47 31.28 367c-13.46-9.26-21.1-23.73-11-38.71 9.29-13.75 25-9.13 38.59-5.46 4.45 1.2 8.62 3.61 12.76 5.77 18.71 9.81 21.92.36 18.33-15.4-4.96-21.82-10.96-43.44-12.18-66Z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"sign-17\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m292.7 429.69-2 10.95c-37.58 16.08-56.82 7.7-57.62-29.9-2.2-103.49-7-207-1.82-310.55.84-16.7 6.71-29.51 25.65-30.49 18.64-1 27.51 10.64 29.19 27.25a809.1 809.1 0 0 1 3.79 67c1.57 88.55-2.18 177.19 2.81 265.74ZM157.1 103.53c-1.44-18-4.91-35.13-27.28-35.32-21.4-.17-27.46 16.46-30.35 34-1 6.35-.28 13 0 19.58 3.12 64.46 8.25 128.82 7.53 193.46-.41 36.48.55 73 1 109.47.29 22.72 13.73 29.88 33.56 25.42 18-4 21.06-19.24 21.07-35.18V280.2c.15-58.94-.86-117.85-5.53-176.67Zm255 196.25c0-28.95 1.82-58-.43-86.83-3.35-42.77-.56-86-9-128.38C399.82 70 392 60.2 376.48 60.59S353.6 72.11 351.09 86c-1.65 9.11-1.75 18.59-1.69 27.9.36 63.52.6 127 1.59 190.55.61 39.2 2.32 78.4 3.85 117.58.53 13.47 6.21 23.36 21.06 25.31 14.59 1.92 25.61-3 32.29-16.51 4.73-9.57 4.77-19.9 4.81-30.16.11-33.63 0-67.26 0-100.89Z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"sign-18\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m210 457.88-45.3-2.28-10.28-1.22c-11.79-14.45-29.21-10-44.22-12.2-19.23-2.83-24.79-13.93-24.45-31 .36-18.49 10-27.73 28.14-27.13 19.59.65 39.27 1.25 58.69 3.66 49.66 6.15 99 3.45 147.93-5.12 13.32-2.32 30-6.76 30.85-23.71.74-14.66-14.55-17.26-25.62-21.95-20.49-8.69-42.26-6.12-63.56-8.13-49.07-4.64-99.09-5.44-144-30.17C96 286.34 83.34 269.09 85.35 241.9c2-26.22 17.32-39.73 39.24-49.45 14.7-6.51 30.13-9 45.68-12.33 46.76-10.12 95.26-4.48 141.58-17 12.12-3.27 25-7.94 23.5-23.23s-14.17-21.68-27.79-23.32c-20.34-2.45-40.66-4.64-61.44-3.51-43.85 2.39-87.78 3.29-131.7 4.06-13.58.24-26.42-2.72-28.64-20.12-2.14-17.11 5.35-26.16 22-29.67 8-1.7 15.51-6 23.24-9.17l11.11-1.24c27.13 2.9 54.07-.72 81.11-1.92 46.7-2.07 93.46-1.79 137.62 16.93 32.29 13.68 47.66 38.07 45.35 69.88-2.22 30.63-23.12 53.76-54.06 64.33-33.56 11.45-68 11.41-102.48 11.32a223.22 223.22 0 0 0-71.63 11.5c-8.49 2.82-15.46 7.92-15.65 17.59-.16 8.84 7 12.53 14.17 15.37 6.08 2.4 12.11 6.44 18.32 6.76 46.63 2.38 92.17 15.89 139.23 13.54l10.7 1.78c4.77 2.8 9.23 6.49 14.36 8.26 64.27 22.18 75.75 41.7 63.17 108.23l-.13.2c-8.44 2.59-14.32 7.91-17.37 16.25L390.35 425l-86.88 25.31-9.12 2.51-11.35 1.43-10.87 1.11c-20.78-1.36-41.66-4.25-62.13 2.52Z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"sign-19\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M317.08 302c0-41.12 2.46-82.41-.58-123.3-4.47-60.06-50.76-86.37-98.66-59.06-17.64 10.06-25 27-31.69 44.65-4.72 12.45-12.49 23-27.12 16s-9.18-17.6-1.23-27.45c2-2.47 2.9-6.78 2.55-10-4.32-40.05 11.21-64.46 48.74-76 70.4-21.61 133.39 19 143.47 91.52 7.76 55.86 5.15 112 5.19 168 0 32.56 9.05 64.93 1.18 97.71-3.17 13.2-4.61 27.51-22.05 27.07-17.94-.45-19.31-15.12-19.44-28.51-.37-40.18-.13-80.37-.13-120.55Z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"sign-20\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M318.72 322.4a7.89 7.89 0 0 0-3.41 2.88l-10.56 1.53c-24.59 5.27-18.3 24.8-17.63 40.51.71 16.95 14 20.19 28 20.79 16.78.71 33.64.6 50.33 2.2 14.08 1.34 21.65 10 21.15 24.67-.52 14.93-8.61 21.94-23.24 22-73.82.13-147.64.41-221.45.24-13.34 0-24.37-5.56-25.24-20.71-.92-16 9.26-24.31 23.81-25.83a473.78 473.78 0 0 1 53.15-2.34c18.68.15 33.28-3.45 36.65-25.39 3.22-20.95-4.2-33.15-24.94-40-55.92-18.5-80-62.41-85.12-117.12-5-53.51 16.47-94.55 67.06-117.88 4-1.83 6.85-6 10.24-9.11l10.29-2.2c26.84.24 53.37-4.67 80.63.61 49.36 9.56 92.42 51.4 104 105 10.8 50.23-8.64 94.44-54.52 124.58-6.92 4.5-15.42 7.17-19.2 15.57ZM255.09 281c49.47.65 88.46-30.55 88.22-70.6-.28-48-36.44-86.89-80.91-87-50.67-.09-90.89 36.35-91.47 82.84-.52 42.53 35.07 74.12 84.16 74.76Z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"sign-21\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M214.2 266h-13.6l-15.9-.2c-10.4-.2-20.7-.4-30.4-1a83.4 83.4 0 0 1-13.4-2 41.3 41.3 0 0 1-10.2-3.8 35.6 35.6 0 0 1-12-10.3l-1.7-3.2-.5-1v-.1c.2-.1-1.2.6-.7.2v-.1l-.1-.3-.2-.4a30 30 0 0 1-.6-1.7 30.2 30.2 0 0 1-1.3-6.8 28.9 28.9 0 0 1 .1-3.9l.2-4.2.1-2.2.3-2.3c0-.8.4-1.6.6-2.4l.7-2.5A57 57 0 0 1 121 207c2.2-3.7 4.7-7.5 7.3-11.3 5.1-7.6 10.5-15 15.8-22.4l8-11 4-5.5 2.1-3 8.7-11.5 17.3-22.7c11.4-15 22.9-29.6 34.5-44.2 8.2-10.2 16.8-22.8 26.7-30.9 5-4 10.4-6.8 16.1-7.6a22.8 22.8 0 0 1 9 .6 17.7 17.7 0 0 1 8.9 5.2c1.2 1.5 2.2 3 3.2 4.5l1.5 2 1.4 1.8a23.5 23.5 0 0 1 3.9 7.3 27 27 0 0 1-.8 16c-3.6 11.5-12.4 24.2-20.4 36.8q-16.2 25.5-33.3 50.3l-17.1 24.8-4.4 6.1-2.1 3.1-.3.4-.1.1a.8.8 0 0 0-.3.1 3.3 3.3 0 0 0-.4.3.6.6 0 0 0-.1.2c-.1.2 0 .3.1.5a2.3 2.3 0 0 0 .4.2h7.3l45.8-.2 22.9-.3 28.7-.5 22.3-.4 11-.1h11a46 46 0 0 1 17.3 4.2 41.9 41.9 0 0 1 10.8 7.1 35.9 35.9 0 0 1 3.8 4 32.2 32.2 0 0 1 2.2 3 30.8 30.8 0 0 1 1.9 3.7 31.7 31.7 0 0 1 1.9 5.6 39.7 39.7 0 0 1 .8 5l.3 3.2v3.5a28.9 28.9 0 0 1-.3 3.8 36.4 36.4 0 0 1-.7 4 47 47 0 0 1-3 9q-1 2.4-2.3 4.9l-1.5 2.4a9 9 0 0 1-1.9 2.4L286 439.2c-13.6 23.4-29.4 45.7-52.2 31.9s-15.8-40.3-1.3-66.3c14.7-26.5 29.1-53 43.4-79.5l21.2-39.5 5.3-9.8 2.6-5 1.3-2.4.3-.6.1-.1v-.1a3 3 0 0 0 0-1 .6.6 0 0 0-.5-.5 1 1 0 0 0-.3 0 2.3 2.3 0 0 0-1 .4v.1l-10.3.2-11.7.2h-23.2c-15.4-.2-30.5-.5-45.5-1.2Z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"sign-22\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M445.85 249c5.24 99.55-82 211.12-187.87 207.83-104.93-3.26-191.44-92.24-192-204.87C65.34 143 154.19 55.13 265 55.13c99.55-.01 180.15 86.4 180.85 193.87Zm-316.65.87c-.19 73.8 57.93 138 126.28 138.6 78.58.7 126.61-65.55 128-139.39 1.32-73.45-58.08-132.38-125.23-132.22-74.87.14-128.86 55.5-129.05 132.98Z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"sign-23\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M237.77 57.25c20.09-8.42 36.46-1.09 51 12.48 39.84 37.07 72.9 80.15 107.41 121.92 8.85 10.72 10.55 21.83-.39 32.43-11.5 11.13-24.21 10.39-35.19.52-13.16-11.84-24.77-25.41-37.06-38.21-6.14-6.39-10.54-18.23-21.7-13.55-9.88 4.13-9 15.8-9.1 24.88-.38 33.66-1.79 67.45.49 101 2.79 41.24-1.48 82.25-.4 123.37.53 19.92-4.71 36.28-28.57 36.28-22.88 0-26.41-16.61-27.1-34.83-2.84-74.74-5.51-149.49-8.93-224.2-.43-9.41 3.11-23.35-9.69-26.56-9.84-2.47-15.42 8.95-21.78 15.48-8.47 8.7-15.8 18.56-24.55 27-24.22 23.24-40.71 22.61-63.66-1.56l.38-11q64.26-72.76 128.54-145.4Z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"sign-24\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M207 242a48 48 0 0 0-1 20 50 50 0 0 0 9 20 51 51 0 0 0 75 8 52 52 0 0 0 12-16 20 20 0 0 0 2-5 16 16 0 0 0 0-4 13 13 0 0 0-4-8c-2-2-5-4-10-5l-16-1h-14a2 2 0 0 1 0-1 1 1 0 0 1 0 1h20l17-2c4-1 6-4 7-7a13 13 0 0 0 0-8 26 26 0 0 0-2-4l-1-2-1-1a46 46 0 0 0-15-18 48 48 0 0 0-10-5 49 49 0 0 0-13-3 51 51 0 0 0-37 12 52 52 0 0 0-5 5 53 53 0 0 0-5 6 45 45 0 0 0-8 18Zm5-127a179 179 0 0 0-20 6l-4 2-3 1-2 1-5 3-4 2-2 1-2 1-5 3-4 2-2 2-2 1-4 3-4 3-2 1-1 2-4 3a198 198 0 0 0-26 27 207 207 0 0 0-20 31l-3 6-1 3-1 3-2 3-1 3a43 43 0 0 1-3 6 23 23 0 0 1-5 5 21 21 0 0 1-6 3c-4 2-10 2-17 1-8-1-13-4-17-8a21 21 0 0 1-4-6 26 26 0 0 1-2-7 40 40 0 0 1-1-5 42 42 0 0 1 1-4v-7l1-2 2-9 4-10 4-12 3-6 3-6 3-6 4-6 3-6 2-3 2-3 4-5 4-5 2-3 2-3 5-5 4-5 3-2 2-2 5-5 5-5 3-2 2-2 6-4 5-4 3-2 3-2 6-4 5-4 3-1 3-2 6-3 6-3 4-2 3-1 6-3 6-2 4-1 3-1 6-2 7-2 3-1 3-1a237 237 0 0 1 82-6 234 234 0 0 1 79 22 242 242 0 0 1 66 48 251 251 0 0 1 46 65l4 8 3 9a64 64 0 0 1 1 8 34 34 0 0 1 1 7 21 21 0 0 1-6 12c-3 4-7 7-14 8a40 40 0 0 1-17 1 30 30 0 0 1-7-2 32 32 0 0 1-5-3c-8-5-13-13-18-21a176 176 0 0 0-63-67 178 178 0 0 0-27-13 185 185 0 0 0-55-12 222 222 0 0 0-55 3Zm-6 349a230 230 0 0 1-55-20l-3-2-3-2-6-3-11-7-11-8-5-4-5-5-5-4-5-4-9-9a244 244 0 0 1-16-19 257 257 0 0 1-27-46l-2-4-3-8a59 59 0 0 1-5-17c0-5 1-10 3-14s8-8 15-10c7-3 13-3 18-2a23 23 0 0 1 7 2 27 27 0 0 1 6 4c6 6 11 16 17 24 15 22 32 42 53 58a186 186 0 0 0 32 21l9 4 5 2 4 1 5 2 4 1 5 2 5 1a158 158 0 0 0 29 3h14l4-1h7l4-1a160 160 0 0 0 55-20 178 178 0 0 0 45-38 194 194 0 0 0 32-51c4-8 7-16 13-22a23 23 0 0 1 10-6c5-1 10-1 16 1s12 4 16 7a25 25 0 0 1 7 13 35 35 0 0 1 1 8 58 58 0 0 1 0 8 78 78 0 0 1-2 9l-2 5-1 4a272 272 0 0 1-44 72 240 240 0 0 1-64 54 213 213 0 0 1-79 27h-7l-3 1h-30a192 192 0 0 1-38-7Z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"sign-25\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m308.35 233-8 .48q-6.35-3.92-11.59 1.52l-92.57-2c-5-6.74-11.67-9.2-19.84-8.06-9.54-3.4-17.08-11.61-28-11.64l-9-5.39c-4.56-12.76-17-18.7-24.79-28.71-.74-6.32-4.43-10.28-10.12-12.65a9.51 9.51 0 0 0-1.72-4c0-6.49-3.13-11-8.84-13.82l-3.2-8.6c1.82-9.68.58-18.53-6.93-25.69L83.09 101c4.38-16.22 7.4-33 20.39-45.4l22.74-.87a7 7 0 0 0 2.85 3c4.16 29.79 1.41 62 29 83.64l17.44 16.51c2.83 9.15 10.84 12.87 18.51 15.68 45.84 16.83 92 16.72 135-6.47 27-14.55 46.72-37.88 44.13-72-2.15-29.36 11.61-41.25 39.53-39.83l6.32 5.31c12.88 54.43-2.89 98.69-46.67 133.43-8.63 6.85-16 15.34-23.88 23.07a6 6 0 0 0-3.45 1.63c-13.91.3-26.85 3.3-36.65 14.3ZM116.3 338.3c-25 27.11-34.71 59.46-26 96 3.35 14.19 12.42 23.33 27.78 22.93 16.46-.42 21.58-11.76 23.6-26.17 1.81-12.9 3.13-26.27 7.65-38.31 20.56-54.7 106.35-79.78 166.94-50.2 36.16 17.71 53.73 47.28 59.73 85.84 2.51 16.19 11 29.08 29.75 26.73 16.81-2.1 22.16-15.09 23-30.57 1.22-22.9-2.81-44.1-14.23-64.67-33.41-60.2-86.25-82.24-155.76-80.55-53.56-1.46-103.26 16.49-142.46 58.97Z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"sign-26\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M439.6 255.06c0 50.51.08 101-.08 151.51 0 8.38.05 17-1.85 25.06-3.81 16.06-13.18 26.82-31.33 26.19-18.5-.64-26.57-12.13-28-28.92-2.29-26.16-5.15-51.93-15.88-76.47-19.73-45.13-64.62-72.82-111.94-67.85-56.48 5.93-100.25 43.6-108.66 93.93a275.57 275.57 0 0 0-4 36.21c-.75 22.17-7.9 40.66-32.84 40.14s-30.8-20.18-32.21-41.55C67.2 328 118.16 255.63 200.55 231.15c49.21-14.63 96-10 140.9 14.94 27 15 30.61 13 30.79-19 .24-44-.22-87.9-.17-131.85 0-21.2 3.93-41.35 30.67-41.08 25.83.25 31.49 19.6 31.59 41.05.24 53.28.08 106.57.08 159.85Z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"sign-27\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M385 254a70 70 0 0 0-13-34l-3-3-2-4-3-2-3-3a103 103 0 0 0-11-9 131 131 0 0 0-22-13 163 163 0 0 0-23-8 180 180 0 0 0-23-5 169 169 0 0 0-28-1 129 129 0 0 0-29 4 96 96 0 0 0-16 6l-5 2a134 134 0 0 1 4-16 127 127 0 0 1 8-20l2-5 1-1v-1h1l1-2v-1l1-1 1-1 1-2 2-2a99 99 0 0 1 15-13 171 171 0 0 1 20-12l24-13a158 158 0 0 0 21-13c12-9 19-20 16-33s-14-18-30-17a110 110 0 0 0-26 5 197 197 0 0 0-30 12 254 254 0 0 0-27 15 169 169 0 0 0-26 22l-4 3-3 3-3 4-3 3-1 2-1 2-3 4-1 1v1l-1 2-2 4a195 195 0 0 0-14 30 207 207 0 0 0-12 64 172 172 0 0 0 3 33 125 125 0 0 0 4 19l1 1a201 201 0 0 0-14 46 165 165 0 0 0 0 55v4l1 3 1 4 1 3 1 4 1 3 1 2v2l2 3a197 197 0 0 0 10 23 150 150 0 0 0 16 24 125 125 0 0 0 21 20 115 115 0 0 0 27 15 122 122 0 0 0 28 8 145 145 0 0 0 40 0 110 110 0 0 0 31-10l6-3a47 47 0 0 0 5-3 39 39 0 0 0 5-4 26 26 0 0 0 3-4c3-6 4-12 0-20a23 23 0 0 0-13-13 37 37 0 0 0-10-2 53 53 0 0 0-6-1h-5l-24 1c-8 0-16 0-22-2a60 60 0 0 1-13-4 55 55 0 0 1-11-7c-7-5-12-12-17-21a122 122 0 0 1-7-15l-2-4-1-4-1-3-1-4a93 93 0 0 1-1-30 121 121 0 0 1 2-13 258 258 0 0 0 39 16 206 206 0 0 0 44 9l12 1a123 123 0 0 0 13 0 104 104 0 0 0 28-7 84 84 0 0 0 27-17 82 82 0 0 0 11-12 89 89 0 0 0 8-14l1-4 2-4 1-5 1-2v-2a68 68 0 0 0 1-19Zm-70 7-1 1v1l-1 1a10 10 0 0 1-3 3 24 24 0 0 1-8 2 57 57 0 0 1-12 1c-9 0-19-2-30-5a194 194 0 0 1-32-12l3-4 3-2 1-2h1a14 14 0 0 1 3-2 44 44 0 0 1 12-2 88 88 0 0 1 17 0 113 113 0 0 1 27 7 74 74 0 0 1 11 5 38 38 0 0 1 8 6v1h1v1Z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"sign-28\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M407.19 279.8a10.69 10.69 0 0 0 3.63 2.19c11.17 41.39-2.65 76.52-31.37 104.79C324.86 440.51 258 449.33 187 430c-26.23-7.14-48.1-24.36-63.05-48.65-32.37-52.58-24.46-132.92 18.71-177.21 15-15.35 32.21-28.43 47.8-43.19 6.54-6.2 16.92-12.78 13.69-22.78-3.65-11.3-16-6.8-24.72-7.13-17.75-.66-35.57.28-53.32-.51-13.5-.59-28-3.33-28.75-20.33-.81-18.77 12.59-26.13 29.3-26.92q120.47-5.69 241-10.55c15.24-.6 32.11.66 34.48 20.47 2.07 17.32-11.87 22.18-25.5 28.27C323.92 145 267 159.51 220 195.35c-39.25 30-65.68 65.92-59.8 118.66 3.84 34.38 22.5 59.73 55.25 66.09 34.44 6.69 69 5.46 100.24-14.61 16.36-10.52 27.47-24.09 32.2-43.85 10.65-44.4 13.38-45.72 59.3-41.84Z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"sign-29\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M254 262.33c59.94.29 115 54.83 114.93 113.94 0 51.26-45.61 98.86-94.88 99.06-59.51.24-117.34-56.18-116.42-113.58.84-55.6 43.57-99.67 96.37-99.42Zm3.73 53.08c-25.77.18-47 23.86-46.79 52.22.18 27.32 25.77 51.15 55.35 51.56 29.21.41 49.33-17.73 49.69-44.8.37-31.39-27.04-59.19-58.3-58.98ZM113.34 69.93c37.7 50 74.13 101.44 123.25 141.42 13.48 11 30.39 13.61 43.25-.61 40.16-44.4 79.8-89.3 118.47-135 13.52-16 3.59-35.81-17.37-38.74-13.51-1.89-23.31 4.62-32 14-18.37 20-37.13 39.57-55.24 59.76-34.08 38-47.08 38.33-80.86 1-18.23-20.12-36.52-40.19-54.34-60.66-7.83-9-16.44-15.2-27.06-14.34-21.66.89-30.9 16.24-18.1 33.17Z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"sign-30\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M206.67 122.81c-14.52.92-34.09 2.33-53.67 3.36-15.62.82-28.63-3.46-30.14-21.54-1.59-19 10.19-27.57 27.34-28.14 71.78-2.38 143.56-4.64 215.36-5.83 24.24-.4 26.88 15.86 21.21 35-8.39 28.29-27.74 50.68-42 75.8-43.72 77.2-88.5 153.81-133 230.59a134 134 0 0 1-11 16.22c-9 11.38-20.66 17.43-34.25 9.45s-18.19-20.28-11.46-36c15.93-37.16 40.6-69.21 60.34-104.14 25.27-44.71 51.6-88.83 76.46-133.77 16.21-29.3 9-40.69-24.09-41-18.62-.13-37.31 0-61.1 0Z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"sign-31\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M442.32 110.46c-9.56 60.93-48.09 112.43-113.13 141.27-26.64 11.81-37.1 25.47-35.24 54.37 2.45 38.23.65 76.73.48 115.11-.1 22.53-5.52 42.74-32.79 43.11-26.39.35-27.35-21.17-28.56-40.07-2.7-42-5.77-84.08-6.47-126.16-.34-20.71-6.91-31.78-27.18-39.12-61.38-22.24-105-63.22-124.82-127-5.69-18.33-5.94-37.06-3.43-55.64C74.06 55 87.76 46.69 108.9 47.77c21.83 1.13 22.12 16 22 31.71-.31 50.57 18.48 91.13 62.83 117.64 21.94 13.11 30.63 8.34 31.4-16.85.88-29 .78-58 1.32-87.05.36-19.45 8.75-32.74 29.63-33.57 21.54-.85 29.52 12.39 30.46 32 1.39 29 3.32 57.93 4.43 86.92.88 23 10.56 25.32 27.93 13.31 35.14-24.31 54.35-58.81 62-99.76 3.78-19.83 7.1-38.12 32.84-36.37 18.82 1.25 29.11 17.88 28.58 54.71Z\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAlienSigns);\nexport default __webpack_public_path__ + \"static/media/alien-signs.27d673befede5d7ffe28495335f2f209.svg\";\nexport { ForwardRef as ReactComponent };","import clsx from 'clsx';\n// Images\nimport signs from 'assets/images/alien-signs.svg';\n// Sass\nimport './SignCard.scss';\n\ntype SignCardProps = {\n  /**\n   * The id of the sign\n   */\n  id: string | number;\n  /**\n   * The width of the sign\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\nexport function SignCard({ id, width = 50, className = '' }: SignCardProps) {\n  return (\n    <div className={clsx('sign-card', className)} style={{ width: `${width}px`, height: `${width}px` }}>\n      <svg viewBox=\"0 0 512 512\" style={{ width: `${width - 12}px`, height: `${width - 12}px` }}>\n        <use href={signs + `#sign-${id}`}></use>\n      </svg>\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Utils\nimport { getColorFromLetter } from 'utils/helpers';\n// Sass\nimport './Card.scss';\n\ntype CardProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  header?: string;\n  footer?: string;\n  color?: string;\n  size?: 'small' | 'medium' | 'large';\n  randomColor?: boolean;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  headerClassName?: string;\n  footerClassName?: string;\n};\nexport const Card = ({\n  children,\n  header = 'Carta',\n  footer,\n  color = 'none',\n  size = 'medium',\n  randomColor = false,\n  className = '',\n  headerClassName = '',\n  footerClassName = '',\n}: CardProps) => {\n  const baseClass = 'card';\n\n  const bgColor = randomColor\n    ? getColorFromLetter(\n        typeof children === 'string'\n          ? children[0].toUpperCase()\n          : header !== 'Carta'\n          ? header[0].toUpperCase()\n          : 'X'\n      )\n    : color;\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, className)}>\n      <span\n        className={clsx(`${baseClass}__header`, `color-background--${bgColor}`, headerClassName)}\n        style={color.startsWith('#') ? { backgroundColor: color } : {}}\n      >\n        {header}\n      </span>\n      <span className={`${baseClass}__text`}>{children}</span>\n      {footer && <span className={clsx(`${baseClass}__footer`, footerClassName)}>{footer}</span>}\n    </div>\n  );\n};\n","import { ReactNode } from 'react';\nimport clsx from 'clsx';\n// Sass\nimport './BookPages.scss';\n\ntype BookPagesProps = {\n  /**\n   * The left page content\n   */\n  leftPage: ReactNode;\n  /**\n   * The right page content\n   */\n  rightPage: ReactNode;\n  /**\n   * The class name to be applied to the component\n   */\n  className?: string;\n};\n\nexport function BookPages({ leftPage, rightPage, className }: BookPagesProps) {\n  return (\n    <svg viewBox=\"0 0 590 320\" className={clsx('book-pages', className)}>\n      <path\n        d=\"M4 12.46s71.16 8 145.65 0S295 16 295 16s90.78-12.42 156 0S586 5.14 586 5.14v296s-43.23 24.6-158.29 8S295 314 295 314s-94.44-17.89-143.33-3.59c-29.88 8.74-147.64-4-147.64-4z\"\n        fill=\"#ffffff\"\n      ></path>\n      <foreignObject x=\"13\" y=\"23\" width=\"280\" height=\"276\">\n        <div>{leftPage}</div>\n      </foreignObject>\n\n      <foreignObject x=\"295\" y=\"23\" width=\"280\" height=\"276\">\n        <div>{rightPage}</div>\n      </foreignObject>\n      <path d=\"M294.75 23.77h.5v280.66h-.5z\" fill=\"grey\"></path>\n    </svg>\n  );\n}\n","import { ReactNode } from 'react';\n\ntype DoorFrameProps = {\n  /**\n   * The optional children\n   */\n  children?: ReactNode;\n  /**\n   * The optional class name\n   */\n  className?: string;\n  /**\n   * The optional width\n   */\n  width?: number;\n  /**\n   * The optional index\n   */\n  index?: number;\n};\n\n/**\n * Door frame component\n */\nexport function DoorFrame({ children, width, index, className = '' }: DoorFrameProps) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 257.1 318.8\"\n      style={Boolean(width) ? { width: `${width}px` } : {}}\n      className={className}\n    >\n      <defs>\n        <linearGradient id=\"d\" x1=\"130.72\" x2=\"130.72\" y1=\"318.8\" y2=\"34.78\" gradientUnits=\"userSpaceOnUse\">\n          <stop offset=\"0.03\" stopColor=\"#fdd3b6\"></stop>\n          <stop offset=\"0.31\" stopColor=\"#fbcdaa\"></stop>\n          <stop offset=\"0.81\" stopColor=\"#f5bd89\"></stop>\n          <stop offset=\"1\" stopColor=\"#f3b67b\"></stop>\n        </linearGradient>\n        <linearGradient id=\"a\" x1=\"130.72\" x2=\"130.72\" y1=\"65.32\" y2=\"14.51\" gradientUnits=\"userSpaceOnUse\">\n          <stop offset=\"0\" stopColor=\"#fdd5b9\"></stop>\n          <stop offset=\"0.32\" stopColor=\"#fdd0b1\"></stop>\n          <stop offset=\"0.97\" stopColor=\"#fcc9a5\"></stop>\n        </linearGradient>\n        <linearGradient id=\"e\" x1=\"130.72\" x2=\"130.72\" y1=\"23.84\" y2=\"4.14\" xlinkHref=\"#a\"></linearGradient>\n        <linearGradient id=\"f\" x1=\"27.14\" x2=\"234.29\" y1=\"46.01\" y2=\"46.01\" gradientUnits=\"userSpaceOnUse\">\n          <stop offset=\"0\" stopColor=\"#a16261\"></stop>\n          <stop offset=\"0.56\" stopColor=\"#b37572\"></stop>\n          <stop offset=\"1\" stopColor=\"#c48783\"></stop>\n        </linearGradient>\n        <linearGradient id=\"g\" x1=\"128.55\" x2=\"128.55\" y1=\"6.73\" y2=\"0\" xlinkHref=\"#a\"></linearGradient>\n        <linearGradient id=\"h\" x1=\"130.72\" x2=\"130.72\" y1=\"313.13\" y2=\"78.41\" gradientUnits=\"userSpaceOnUse\">\n          <stop offset=\"0\" stopColor=\"#c48783\"></stop>\n          <stop offset=\"0.44\" stopColor=\"#b37572\"></stop>\n          <stop offset=\"1\" stopColor=\"#a16261\"></stop>\n        </linearGradient>\n        <linearGradient id=\"b\" x1=\"223.42\" x2=\"223.42\" y1=\"230.96\" y2=\"171.86\" gradientUnits=\"userSpaceOnUse\">\n          <stop offset=\"0\" stopColor=\"#f3b67b\"></stop>\n          <stop offset=\"0.07\" stopColor=\"#f5bb86\"></stop>\n          <stop offset=\"0.24\" stopColor=\"#f8c69b\"></stop>\n          <stop offset=\"0.42\" stopColor=\"#fbcdaa\"></stop>\n          <stop offset=\"0.64\" stopColor=\"#fdd2b3\"></stop>\n          <stop offset=\"0.97\" stopColor=\"#fdd3b6\"></stop>\n        </linearGradient>\n        <linearGradient id=\"i\" x1=\"38\" x2=\"38\" y1=\"230.96\" y2=\"171.86\" xlinkHref=\"#b\"></linearGradient>\n        <linearGradient id=\"c\" x1=\"37.84\" x2=\"226.06\" y1=\"47.43\" y2=\"47.43\" gradientUnits=\"userSpaceOnUse\">\n          <stop offset=\"0\" stopColor=\"#fcb645\"></stop>\n          <stop offset=\"1\" stopColor=\"#e3a129\"></stop>\n        </linearGradient>\n        <linearGradient id=\"j\" x1=\"38.38\" x2=\"38.38\" y1=\"198.04\" y2=\"193.37\" xlinkHref=\"#c\"></linearGradient>\n        <linearGradient\n          id=\"k\"\n          x1=\"223.04\"\n          x2=\"223.04\"\n          y1=\"198.04\"\n          y2=\"193.37\"\n          xlinkHref=\"#c\"\n        ></linearGradient>\n        <linearGradient id=\"l\" x1=\"43.98\" x2=\"217.44\" y1=\"313.74\" y2=\"313.74\" gradientUnits=\"userSpaceOnUse\">\n          <stop offset=\"0\" stopColor=\"#623c57\"></stop>\n          <stop offset=\"1\" stopColor=\"#3d1931\"></stop>\n        </linearGradient>\n      </defs>\n      <g style={{ isolation: 'isolate' }}>\n        <path\n          fill=\"url(#d)\"\n          d=\"M236.27 34.78l-.6 30.02-.22 11.41-2.95 150.6-.2 10.11-1.6 81.88H30.74L25.99 76.21l-.23-11.41-.59-30.02h211.1z\"\n        ></path>\n        <path\n          d=\"M235.67 64.8l-.22 11.41H25.99l-.23-11.41h209.91z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.7\"\n        ></path>\n        <path fill=\"url(#a)\" d=\"M16.7 14.51h228.02v50.81H16.7z\"></path>\n        <path\n          d=\"M16.7 14.51h228.02V31.1H16.7z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.55\"\n        ></path>\n        <path\n          fill=\"url(#e)\"\n          d=\"M252.77 4.14l-.09.53-1.28 6.73-2.34 12.44H12.38L10.04 11.4 8.76 4.67l-.1-.53h244.11z\"\n        ></path>\n        <path fill=\"url(#f)\" d=\"M27.14 35.51h207.15v21H27.14z\"></path>\n        <path\n          d=\"M31.78 39.01h202.51v-3.5H27.14v21h4.64v-17.5z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.85\"\n        ></path>\n        <path fill=\"#f3b67b\" d=\"M220.07 79.83l-1.84 228.64h5.06l4.16-228.64h-7.38z\"></path>\n        <path\n          d=\"M220.7 307.95l1.84-228.12h-2.47l-1.84 228.64h5.06l.02-.52h-2.61z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.5\"\n        ></path>\n        <path fill=\"#fee0cc\" d=\"M226.05 79.83l-4.15 228.25h-3.67v.39h5.06l4.16-228.64h-1.4z\"></path>\n        <path fill=\"#f3b67b\" d=\"M34.25 79.6l4.4 228.6 5.06-.23-2.08-228.65-7.38.28z\"></path>\n        <path\n          d=\"M41.11 307.64L36.72 79.55l-2.47.05 4.4 228.6 5.06-.23v-.52l-2.6.19z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.5\"\n        ></path>\n        <path fill=\"#fee0cc\" d=\"M40.23 79.35l2.08 228.26-3.67.21.01.38 5.06-.23-2.08-228.65-1.4.03z\"></path>\n        <path fill=\"#f3b67b\" d=\"M53.68 23.84h-12.3L40 7.77l-1.15-3.64h14.38l-.44 2.6z\"></path>\n        <path\n          fill=\"#f3b67b\"\n          d=\"M147.26.9l-.32 3.24-1.93 19.7h-26.86l.33-19.7.02-1.29L147.26.9z\"\n          opacity=\"0.5\"\n        ></path>\n        <path\n          d=\"M252.68 4.67l-1.28 6.73H10.04L8.76 4.67h243.92z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.55\"\n        ></path>\n        <path fill=\"url(#g)\" d=\"M0 0h257.1v6.73H0z\"></path>\n        <path\n          d=\"M188.24 0l-.5 6.74h-22.52l.24-6.74h22.78zM98.41 0l-.06 6.74h-39.4L58 0h40.41z\"\n          style={{ mixBlendMode: 'lighten' }}\n          fill=\"#fff\"\n          opacity=\"0.35\"\n        ></path>\n        <path\n          fill=\"url(#h)\"\n          d=\"M213.58 78.41l-.43 24.81-.17 9.44-3.49 200.47H51.95l-3.5-200.47-.16-9.44-.44-24.81h165.73z\"\n        ></path>\n        <path\n          d=\"M232.5 226.81l-.2 10.11h-21.48l.17-10.11h21.51z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.65\"\n        ></path>\n        <path\n          fill=\"url(#b)\"\n          d=\"M237.27 173.42l-.26 5.44-.11 2.26-.11 2.66-.45 9.59-.22 4.67-.11 2.15-1.39 29.47h-25.04l.14-29.47.02-2.15.02-2.33v-2.34l.06-9.59.02-2.66v-2.26l.03-5.44h27.4z\"\n        ></path>\n        <path\n          d=\"M237.01 178.86l-.22 4.92h-26.97l.02-4.92h27.17z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.65\"\n        ></path>\n        <path fill=\"#fddbc5\" d=\"M240.6 181.13h-31.03v-8.04h32.27l-1.24 8.04z\"></path>\n        <path\n          d=\"M50.62 236.92h-21.5l-.2-10.11h21.53l.17 10.11z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.65\"\n        ></path>\n        <path\n          fill=\"url(#i)\"\n          d=\"M51.84 229.66H26.8l-1.39-29.47-.11-2.15-.22-4.67-.45-9.59-.11-2.66-.11-2.26-.26-5.44h27.4l.03 5.44v2.27l.02 2.65.06 9.59v2.34l.01 2.33.02 2.15.15 29.47z\"\n        ></path>\n        <path\n          d=\"M24.4 178.86l.23 4.92h26.96l-.01-4.92H24.4z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.65\"\n        ></path>\n        <path fill=\"#fddbc5\" d=\"M20.81 181.13h31.03v-8.04H19.57l1.24 8.04z\"></path>\n        <path fill=\"#bb7d2a\" d=\"M36.91 42.51h190.08v9.85H36.91z\"></path>\n        <path fill=\"url(#c)\" d=\"M37.84 43.28h188.22v8.29H37.84z\"></path>\n        <path\n          d=\"M99.34 52.35H64.85l-6.77-9.84h34.47l6.79 9.84zm27.03 0H113.4l-6.79-9.84h12.99l6.77 9.84z\"\n          style={{ mixBlendMode: 'overlay' }}\n          fill=\"#fff\"\n          opacity=\"0.35\"\n        ></path>\n        <path\n          d=\"M51.69 200.19H25.41l-.11-2.15-.11-2.33h26.47l.01 2.33.02 2.15z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.65\"\n        ></path>\n        <path fill=\"url(#j)\" d=\"M51.67 198.04H25.3l-.22-4.67h26.58v2.34l.01 2.33z\"></path>\n        <path\n          d=\"M37.24 198.04h-3.48l-5.57-4.67h10.49l-1.44 4.67z\"\n          style={{ mixBlendMode: 'overlay' }}\n          fill=\"#fff\"\n          opacity=\"0.35\"\n        ></path>\n        <path\n          d=\"M236.23 195.71l-.11 2.33-.11 2.15h-26.29l.02-2.15.02-2.33h26.47z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#c48783\"\n          opacity=\"0.65\"\n        ></path>\n        <path fill=\"url(#k)\" d=\"M236.34 193.37l-.22 4.67h-26.38l.02-2.33v-2.34h26.58z\"></path>\n        <path\n          d=\"M222.26 198.04h-3.48l-5.57-4.67h10.48l-1.43 4.67z\"\n          style={{ mixBlendMode: 'overlay' }}\n          fill=\"#fff\"\n          opacity=\"0.35\"\n        ></path>\n        <path fill=\"url(#l)\" d=\"M43.98 308.69h173.47v10.11H43.98z\"></path>\n        <path\n          d=\"M75.98 308.69L74.9 318.8H56.5l-.65-10.11h20.13z\"\n          style={{ mixBlendMode: 'lighten' }}\n          fill=\"#fff\"\n          opacity=\"0.35\"\n        ></path>\n        <path\n          d=\"M138.19 308.68c-.21 3.47-.39 6.93-.56 10.11h-18.92l-1.08-10.11z\"\n          style={{ mixBlendMode: 'lighten' }}\n          fill=\"#fff\"\n          opacity=\"0.15\"\n        ></path>\n        <path\n          d=\"M199.58 308.68l-.6 10.11h-9l-1-10.11zM87.41 308.69l-.56 10.11h-5.97l-1.69-10.11h8.22z\"\n          style={{ mixBlendMode: 'multiply' }}\n          fill=\"#98616c\"\n          opacity=\"0.45\"\n        ></path>\n        <path\n          fill=\"#fff67e\"\n          stroke=\"#231f20\"\n          strokeMiterlimit=\"10\"\n          d=\"M54.95 84.1h150v225h-150z\"\n          opacity=\"0.59\"\n        ></path>\n\n        <foreignObject x=\"53\" y=\"82\" width=\"150\" height=\"225\">\n          {children}\n        </foreignObject>\n      </g>\n\n      {index === 0 && (\n        <path\n          fill=\"#3d1931\"\n          d=\"M143.46 61.65l-3.94-8.88h-18.29l-4 8.88h-3.89l15.32-33.84h3.55l15.31 33.84zm-20.74-12.29H138l-7.6-17.14z\"\n        ></path>\n      )}\n      {index === 1 && (\n        <path\n          fill=\"#3d1931\"\n          d=\"M143.12 36.45a8.12 8.12 0 01-5.32 7.82c4 1.2 7.2 3.51 7.2 8.16 0 5.81-4.85 9.22-12.2 9.22h-14.93v-33.6h14.31c6.62 0 10.94 3.26 10.94 8.4zm-3.84.52c0-3.36-2.64-5.52-7.44-5.52h-10.22V43h9.93c4.57 0 7.73-2 7.73-6zm1.88 15.22c0-3.7-3.08-5.81-8.93-5.81h-10.61v11.86h11.28c5.1 0 8.26-2.24 8.26-6.05z\"\n        ></path>\n      )}\n      {index === 2 && (\n        <path\n          fill=\"#3d1931\"\n          d=\"M132.85 62.22c-9.7 0-16.85-7.63-16.85-17.33s7.11-17.42 17-17.42a17.48 17.48 0 0113.1 5.33l-2.59 2.78c-2.83-2.69-6-4.61-10.56-4.61-7.44 0-13 6-13 13.83s5.61 13.92 13 13.92c4.61 0 7.63-1.78 10.85-4.85l2.49 2.45c-3.5 3.55-7.29 5.9-13.44 5.9z\"\n        ></path>\n      )}\n      {index === 3 && (\n        <path\n          fill=\"#3d1931\"\n          d=\"M128.1 61.65h-11.67v-33.6h11.67c10.56 0 17.86 7.24 17.86 16.75s-7.3 16.85-17.86 16.85zm0-30.1h-7.87v26.59h7.87c8.49 0 13.92-5.76 13.92-13.25s-5.43-13.34-13.92-13.34z\"\n        ></path>\n      )}\n      {index === 4 && (\n        <path\n          fill=\"#3d1931\"\n          d=\"M122.91 31.5V43h18.34v3.46h-18.34v11.73h20.74v3.46h-24.53v-33.6h24.29v3.45z\"\n        ></path>\n      )}\n      {index === 5 && (\n        <path fill=\"#3d1931\" d=\"M123.25 31.55v12h18.19V47h-18.19v14.65h-3.79v-33.6h24.14v3.5z\"></path>\n      )}\n      {index === 6 && (\n        <path\n          fill=\"#3d1931\"\n          d=\"M132 62.22c-10.56 0-17.09-7.68-17.09-17.33 0-9.26 6.77-17.42 16.85-17.42a17.72 17.72 0 0112.53 4.46l-2.45 2.88A14.32 14.32 0 00131.6 31c-7.44 0-12.77 6.29-12.77 13.83 0 8.06 5.14 14 13.3 14a15.86 15.86 0 009.7-3.36V47.1H131.6v-3.41h13.88v13.4A20.39 20.39 0 01132 62.22z\"\n        ></path>\n      )}\n    </svg>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Popover } from 'antd';\nimport { CheckCircleFilled } from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Sass\nimport './SceneTile.scss';\n\ntype SceneTileProps = {\n  /**\n   * Scene tile\n   */\n  tile: SceneTile;\n  /**\n   * The optional answer index\n   */\n  index?: number;\n  /**\n   * Optional callback when a value is selected\n   */\n  onSelectValue?: GenericFunction;\n};\n\n/**\n * Scene tile component\n */\nexport function SceneTile({ tile, index, onSelectValue }: SceneTileProps) {\n  const { language } = useLanguage();\n  return (\n    <div className={clsx('scene-tile', `scene-tile--${tile.type}`)}>\n      <Popover content={tile.description[language]}>\n        <h4 className=\"scene-tile__title\">{tile.title[language]}</h4>\n      </Popover>\n      <ul className=\"scene-tile__options\">\n        {tile.values.map((entry, i) => {\n          const isActive = i === index;\n          const isInative = index !== undefined && !isActive;\n          return (\n            <li key={`${tile.id}-value-${i}`}>\n              <Button\n                className={clsx(\n                  'scene-tile__button',\n                  `scene-tile__button--${tile.type}`,\n                  isInative && 'scene-tile__button--inactive'\n                )}\n                icon={isActive ? <CheckCircleFilled className=\"scene-tile__icon\" /> : undefined}\n                onClick={onSelectValue ? () => onSelectValue({ tileId: tile.id, value: i }) : () => {}}\n              >\n                {entry[language]}\n              </Button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Input } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Sass\nimport './SuggestionEasel.scss';\n\ntype SuggestionEaselProps = {\n  /**\n   * Unique identifier for the input\n   */\n  id: string;\n  /**\n   * Function to be called when the input changes\n   */\n  onChangeInput?: GenericFunction;\n  /**\n   * Function to be called when the user presses enter\n   */\n  onPressEnter?: GenericFunction;\n  /**\n   * Value of the input\n   */\n  value?: string;\n};\n\n/**\n * Component that renders a suggestion easel\n */\nexport function SuggestionEasel({ id, onChangeInput, onPressEnter, value }: SuggestionEaselProps) {\n  const { translate } = useLanguage();\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 230 60\"\n      overflow=\"visible\"\n      width=\"230\"\n      className=\"suggestion-easel\"\n    >\n      <path fill=\"#fff\" d=\"M26.7 59.5L14.1.5h202.7l12.6 59z\" />\n      <path fill=\"#4d4d4d\" d=\"M216.4 1l12.4 58H27.1L14.7 1h201.7m.8-1H13.5l12.8 60H230L217.2 0z\" />\n      <path fill=\"#4d4d4d\" d=\"M24.2 48.3L13.5 0 0 48.3z\" />\n      <foreignObject x=\"32.6\" y=\"13.9\" width=\"185\" height=\"300\">\n        <div>\n          <Input\n            placeholder={translate('Escreva dica aqui', 'Write here')}\n            key={id}\n            id={id}\n            value={value}\n            onChange={onChangeInput}\n            className=\"suggestion-easel__input\"\n            bordered={false}\n            onPressEnter={onPressEnter}\n            autoComplete=\"off\"\n            readOnly={!onChangeInput}\n          />\n        </div>\n      </foreignObject>\n      <path opacity=\".2\" d=\"M0 48.3L26.3 60l-2.1-11.7z\" />\n    </svg>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Popover } from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { DualTranslate, Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { Medal } from './Medal';\n\ntype AchievementsProps = {\n  players: GamePlayers;\n  achievements: Achievement[];\n  reference: AchievementReference;\n};\n\nconst unknownText = { pt: 'Desconhecido', en: 'Unknown' };\n\nexport function Achievements({ players, achievements, reference }: AchievementsProps) {\n  return (\n    <div className={clsx('achievements', getAnimationClass('fadeIn'))}>\n      <Title size=\"small\" level={3}>\n        <Translate pt=\"Medalhas\" en=\"Achievements\" />\n      </Title>\n      <ul className=\"achievements-list\">\n        {achievements.map((achievement, index) => {\n          const { icon = 'star', ...achievementObj } = reference[achievement.type] ?? {};\n          const player = players[achievement.playerId];\n          return (\n            <li\n              key={`achievement-${achievement.type}`}\n              className={clsx(\n                'achievements-entry',\n                getAnimationClass('flipInY', {\n                  delay: index < achievements.length / 2 ? index : achievements.length - 1 - index,\n                })\n              )}\n            >\n              <div className=\"achievement__medal\">\n                <Medal id={icon} />\n              </div>\n              <h4 className=\"achievement__title\">\n                <DualTranslate>{achievementObj.title ?? unknownText}</DualTranslate>\n              </h4>\n              <div className=\"achievement__avatar\">\n                <Avatar id={player.avatarId} />\n              </div>\n              <div className=\"achievement__name\">{player.name}</div>\n              {Boolean(achievementObj.description) && (\n                <div className=\"achievement__description\">\n                  <Popover\n                    content={\n                      <>\n                        <DualTranslate>{achievementObj.description ?? unknownText}</DualTranslate> (\n                        {achievement.value})\n                      </>\n                    }\n                  >\n                    <Button icon={<QuestionCircleOutlined />} shape=\"circle\" type=\"text\" size=\"small\" />\n                  </Popover>\n                </div>\n              )}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","import { ReactNode } from 'react';\nimport clsx from 'clsx';\n// Ant Design Resources\nimport { Space, SpaceProps } from 'antd';\n// Components\nimport { Title, TitleProps } from 'components/text';\n// Sass\nimport './Container.scss';\n\ntype ContainerProps = {\n  title: ReactNode;\n  children: ReactNode;\n  contained?: boolean;\n  className?: string;\n  titleProps?: TitleProps;\n  childrenContainerProps?: SpaceProps;\n} & Omit<SpaceProps, 'title' | 'children'>;\n\n/**\n * Container component with title and center aligned children\n */\nexport function Container({\n  title,\n  children,\n  className,\n  contained,\n  titleProps,\n  childrenContainerProps,\n  ...spaceProps\n}: ContainerProps) {\n  const { level = 4, size = 'xx-small', ...restTitleProps } = titleProps ?? {};\n\n  const {\n    className: childrenClassName,\n    wrap = true,\n    direction: childrenDirection = 'horizontal',\n    ...restChildrenContainerProps\n  } = childrenContainerProps ?? {};\n\n  return (\n    <Space direction=\"vertical\" className={clsx('container-wrapper', className)} {...spaceProps}>\n      <Title level={level} size={size} {...restTitleProps}>\n        {title}\n      </Title>\n\n      <Space\n        direction={childrenDirection}\n        wrap={wrap}\n        className={clsx(\n          'container-wrapper__children',\n          contained && 'container-wrapper__children--contained',\n          childrenClassName\n        )}\n        {...restChildrenContainerProps}\n      >\n        {children}\n      </Space>\n    </Space>\n  );\n}\n","// Ant Design Resources\nimport { Button, Tooltip } from 'antd';\nimport { EyeInvisibleOutlined, EyeOutlined } from '@ant-design/icons';\n// Utils\nimport { useBlurCards } from 'hooks/useBlurCards';\n// Components\nimport { Translate } from 'components/language';\n// Sass\nimport './ImageBlurButton.scss';\n\ntype ImageBlurButtonProps = {\n  /**\n   * The card to be blurred\n   */\n  cardId: string;\n  /**\n   * Determines if the button is ghost or not (default: true)\n   */\n  ghost?: boolean;\n};\n\nexport function ImageBlurButton({ cardId, ghost = true }: ImageBlurButtonProps) {\n  const { blurCard, isBlurEnabled, shouldBeBlurred } = useBlurCards();\n\n  return isBlurEnabled ? (\n    <Tooltip\n      placement=\"top\"\n      title={\n        <Translate\n          pt=\"Aperte o botão para embaçar a foto caso você tenha alguma fobia\"\n          en=\"Use this button to blur the image in case of any phobia\"\n        />\n      }\n    >\n      <Button ghost={ghost} onClick={() => blurCard(cardId)} size=\"small\" className=\"image-blur-button\">\n        {shouldBeBlurred(cardId) ? (\n          <>\n            <EyeOutlined /> <Translate pt=\"Descredar\" en=\"Focus\" />\n          </>\n        ) : (\n          <>\n            <EyeInvisibleOutlined /> <Translate pt=\"Credo\" en=\"Blur\" />\n          </>\n        )}\n      </Button>\n    </Tooltip>\n  ) : (\n    <></>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Components\nimport { ImageBlurButton } from './ImageBlurButton';\n// Sass\nimport './ImageBlurButtonContainer.scss';\n\ninterface ImageBlurButtonContainerProps extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * The card to be blurred\n   */\n  cardId: string;\n  /**\n   * The content the component is wrapping\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * The position of the button (default: bottom)\n   */\n  position?: 'top' | 'bottom';\n  /**\n   * Determines if the button is ghost or not (default: true)\n   */\n  ghost?: boolean;\n}\n\nexport function ImageBlurButtonContainer({\n  cardId,\n  children,\n  className = '',\n  position = 'bottom',\n  ghost = true,\n  ...rest\n}: ImageBlurButtonContainerProps) {\n  return (\n    <div className={clsx('image-blur-button-container', className)} {...rest}>\n      {position === 'top' && <ImageBlurButton cardId={cardId} ghost={ghost} />}\n      {children}\n      {position === 'bottom' && <ImageBlurButton cardId={cardId} ghost={ghost} />}\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Image } from 'antd';\n// Constants\nimport { PUBLIC_URL } from 'utils/constants';\n// Assets\nimport placeholder from 'assets/images/placeholder.jpg';\n// Hooks\nimport { useBlurCards } from 'hooks/useBlurCards';\nimport { useTDBaseUrl } from 'hooks/useTDBaseUrl';\n// Sass\nimport './ImageCard.scss';\n\nexport type ImageCardProps = {\n  /**\n   * The id of the image\n   */\n  imageId: string;\n  /**\n   * The width of the card (Default: 200px)\n   */\n  cardWidth?: number;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Enables or disables the preview (default: true)\n   */\n  preview?: Boolean;\n  /**\n   * Replacement image when the preview is open\n   */\n  previewImageId?: string;\n  /**\n   * The file extension for the image (default: jpg)\n   */\n  fileExtension?: 'jpg' | 'png' | 'gif';\n};\n\n/**\n * Renders an Image Card on tdi\n */\nexport const ImageCard = ({\n  imageId,\n  cardWidth = 200,\n  className = '',\n  preview = true,\n  previewImageId = '',\n  fileExtension = 'jpg',\n}: ImageCardProps) => {\n  const { shouldBeBlurred } = useBlurCards();\n  const baseUrl = useTDBaseUrl('tdi');\n\n  const baseClass = 'image-card';\n\n  const fallbackName = `placeholder-${imageId[imageId.length - 1]}`;\n\n  const imageURL = imageId.replace(/-/g, '/');\n\n  const isBlurred = shouldBeBlurred(imageId);\n\n  const booleanPreviewConfig =\n    preview && !isBlurred\n      ? {\n          maskClassName: `${baseClass}__preview-mask`,\n        }\n      : false;\n\n  return (\n    <div className={clsx(baseClass, isBlurred && `${baseClass}--blur`, className)}>\n      <Image\n        width={cardWidth}\n        src={`${baseUrl}/${imageURL}.${fileExtension}`}\n        placeholder={<Image preview={false} src={placeholder} width={cardWidth} />}\n        fallback={`${PUBLIC_URL.CARDS}${fallbackName}.jpg`}\n        preview={\n          Boolean(previewImageId)\n            ? {\n                src: `${baseUrl}/${previewImageId.replace(/-/g, '/')}.${fileExtension}`,\n              }\n            : booleanPreviewConfig\n        }\n      />\n    </div>\n  );\n};\n","import { ImageCard, ImageCardProps } from './ImageCard';\n\ntype ImageCardBackProps = Omit<ImageCardProps, 'imageId'> & { imageId?: ImageCardId };\n\nexport const ImageCardBack = ({ imageId = 'back-default', ...rest }: ImageCardBackProps) => {\n  return <ImageCard imageId={imageId} {...rest} />;\n};\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Button, ButtonProps } from 'antd';\nimport { DownCircleOutlined, UpCircleOutlined } from '@ant-design/icons';\n//  Components\nimport { Translate } from 'components/language';\nimport { DebugOnly } from 'components/debug';\nimport { ImageBlurButtonContainer } from './ImageBlurButtonContainer';\n// Sass\nimport './ImageCardButton.scss';\n\ntype ImageCardButtonProps = {\n  /**\n   * The id of the image\n   */\n  imageId: string;\n  /**\n   * The content, usually a ImageCard component\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name for the container\n   */\n  className?: string;\n  /**\n   * The position of the button (default: top)\n   */\n  buttonPosition?: 'top' | 'bottom';\n  /**\n   * The button is over the image (default: false)\n   */\n  over?: boolean;\n  /**\n   * Button icon replacement\n   */\n  icon?: ReactNode;\n  /**\n   * The function to be called when the button is clicked\n   */\n  onClick?: (...args: any) => void;\n  /**\n   * Disables the button (default: false)\n   */\n  disabled?: boolean;\n  /**\n   * The text for the button\n   */\n  buttonText?: ReactNode;\n  /**\n   * The props for the button\n   */\n  buttonProps?: Omit<ButtonProps, 'onClick' | 'disabled'>;\n};\n\nexport function ImageCardButton({\n  imageId,\n  children,\n  className = '',\n  buttonPosition = 'top',\n  over = false,\n  icon,\n  onClick,\n  disabled = false,\n  buttonText,\n  buttonProps = {},\n}: ImageCardButtonProps) {\n  const isTop = buttonPosition === 'top';\n\n  const iconComponent = icon ?? (isTop ? <DownCircleOutlined /> : <UpCircleOutlined />);\n\n  const { className: buttonClassName, ...restButtonProps } = buttonProps;\n\n  const button = onClick ? (\n    <Button\n      shape=\"round\"\n      size=\"small\"\n      ghost={over}\n      className={clsx(\n        'image-card-button__button',\n        over && 'image-card-button__button--over',\n        over && `image-card-button__button--over-${buttonPosition}`,\n        buttonClassName\n      )}\n      onClick={() => onClick(imageId)}\n      disabled={disabled}\n      {...restButtonProps}\n    >\n      {iconComponent}\n      {buttonText ?? <Translate pt=\"Selecionar\" en=\"Select\" />}\n      {iconComponent}\n    </Button>\n  ) : (\n    <></>\n  );\n\n  return (\n    <div className={clsx('image-card-button', className)}>\n      <ImageBlurButtonContainer cardId={imageId} position={buttonPosition === 'bottom' ? 'top' : 'bottom'}>\n        <DebugOnly>{imageId}</DebugOnly>\n        <div className=\"image-card-button__container\">\n          {isTop && button}\n          {children}\n          {!isTop && button}\n        </div>\n      </ImageBlurButtonContainer>\n    </div>\n  );\n}\n","import { ReactNode } from 'react';\nimport clsx from 'clsx';\n// Ant Design Resources\nimport { Image } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { ImageCard, ImageCardButton } from '.';\n// Sass\nimport './ImageCardHand.scss';\n\ntype ImageCardHandProps = {\n  /**\n   * The list of card ids\n   */\n  hand: ImageCardId[];\n  /**\n   * Function to trigger when clicking on the select button\n   */\n  onSelectCard?: GenericFunction;\n  /**\n   * Select button custom label\n   */\n  selectButtonText?: ReactNode;\n  /**\n   * Select button custom icon\n   */\n  selectButtonIcon?: ReactNode;\n  /**\n   * Select button custom class\n   */\n  selectButtonClass?: string;\n  /**\n   * Disable select button\n   */\n  disabledSelectButton?: boolean;\n  /**\n   * Optional custom class name for the hand container\n   */\n  className?: string;\n  /**\n   * The size of the card\n   */\n  cardSize?: number;\n  /**\n   * If no card size is provided, the ratio is used instead to determine card size (default 8)\n   */\n  sizeRatio?: number;\n  /**\n   * Minimum width of a card (default 80)\n   */\n  minCardSize?: number;\n  /**\n   * Cache showing which cards have been selected and should be highlighted\n   */\n  selectedCards?: BooleanDictionary;\n  /**\n   * Custom card class\n   */\n  cardClassName?: string;\n  /**\n   * Enable preview (default: true)\n   */\n  preview?: boolean;\n};\n\nexport function ImageCardHand({\n  hand = [],\n  onSelectCard,\n  selectButtonText,\n  selectButtonIcon,\n  className = '',\n  selectButtonClass = '',\n  sizeRatio = 8,\n  cardSize,\n  minCardSize = 80,\n  disabledSelectButton = false,\n  selectedCards = {},\n  cardClassName = '',\n  preview = true,\n}: ImageCardHandProps) {\n  // Prefers cardSize otherwise calculates width based on screen and ratio\n  const cardWidth = useCardWidth(Math.max(sizeRatio, 6), { minWidth: minCardSize });\n\n  return (\n    <Image.PreviewGroup>\n      <div className={clsx('image-card-hand', className)}>\n        {hand.map((cardId) => {\n          return (\n            <div\n              key={`hand-${cardId}`}\n              className={clsx('image-card-hand__card-container', getAnimationClass('slideInRight'))}\n            >\n              <ImageCardButton\n                onClick={onSelectCard}\n                imageId={cardId}\n                buttonProps={{ className: selectButtonClass }}\n                icon={selectButtonIcon}\n                buttonText={selectButtonText}\n                disabled={disabledSelectButton}\n              >\n                <ImageCard\n                  imageId={cardId}\n                  cardWidth={cardSize || cardWidth}\n                  className={clsx(selectedCards[cardId] && 'image-card-hand__selected', cardClassName)}\n                  preview={preview}\n                />\n              </ImageCardButton>\n            </div>\n          );\n        })}\n      </div>\n    </Image.PreviewGroup>\n  );\n}\n","// Components\nimport { ImageCard } from './ImageCard';\n// Sass\nimport './ImageCardPreloadHand.scss';\n\ntype ImageCardPreloadHandProps = {\n  hand: string[];\n};\nexport function ImageCardPreloadHand({ hand }: ImageCardPreloadHandProps) {\n  if (!hand) return <span></span>;\n  return (\n    <div className=\"image-card-preload-hand\">\n      {hand.map((cardId) => (\n        <ImageCard imageId={cardId} cardWidth={1} key={`pre-load-${cardId}`} preview={false} />\n      ))}\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Button } from 'antd';\nimport { UpCircleOutlined } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\n\ntype ImageCardSelectButtonProps = {\n  isSelected?: boolean;\n  cardId: ImageCard;\n  onClick: GenericFunction;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  selectLabel?: string;\n  deselectLabel?: string;\n};\n\nexport function ImageCardSelectButton({\n  onClick,\n  cardId,\n  selectLabel,\n  deselectLabel,\n  isSelected = false,\n}: ImageCardSelectButtonProps) {\n  return (\n    <Button\n      shape=\"round\"\n      size=\"small\"\n      ghost={!isSelected}\n      className=\"image-card-select-button\"\n      onClick={() => onClick(cardId)}\n    >\n      <UpCircleOutlined />\n      {isSelected ? (\n        <Translate pt=\"Desmarcar\" en=\"Deselect\" custom={deselectLabel} />\n      ) : (\n        <Translate pt=\"Selecionar\" en=\"Select\" custom={selectLabel} />\n      )}\n      <UpCircleOutlined />\n    </Button>\n  );\n}\n","import { ImageCardsIcon } from 'icons/ImageCardsIcon';\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function CardHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<ImageCardsIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import { ReactNode } from 'react';\nimport clsx from 'clsx';\n// Types\nimport type { AvatarSize } from 'antd/lib/avatar/AvatarContext';\n// Components\nimport { IconAvatar } from 'components/avatars/IconAvatar';\n\nexport type MetricHighlightProps = {\n  /**\n   * The text to be highlighted\n   */\n  children: ReactNode;\n  /**\n   * The icon representing the metric\n   */\n  icon: ReactNode;\n  /**\n   * Indicates if it's a negative metric\n   */\n  type?: 'positive' | 'negative' | 'default';\n  /**\n   * The size of the avatar (default: small)\n   */\n  iconSize?: AvatarSize;\n  /**\n   * Custom class\n   */\n  className?: string;\n  /**\n   * Icon placement (default: after)\n   */\n  iconPlacement?: 'before' | 'after';\n};\n\nexport function MetricHighlight({\n  children,\n  icon,\n  type,\n  className,\n  iconSize = 'small',\n  iconPlacement = 'after',\n}: MetricHighlightProps) {\n  return (\n    <span className={clsx('metric-highlight', type && `metric-highlight--${type}`, className)}>\n      {iconPlacement === 'before' && (\n        <>\n          <IconAvatar size={iconSize} icon={icon} />{' '}\n        </>\n      )}\n      {children}\n      {iconPlacement === 'after' && (\n        <>\n          {' '}\n          <IconAvatar size={iconSize} icon={icon} />\n        </>\n      )}\n    </span>\n  );\n}\n\nexport type HighlightProps = Pick<MetricHighlightProps, 'children' | 'type' | 'iconSize' | 'className'>;\n","import { PlayersIcon } from 'icons/PlayersIcon';\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function PlayersHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<PlayersIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import { StarIcon } from 'icons/StarIcon';\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function PointsHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<StarIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import { ClockIcon } from 'icons/ClockIcon';\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function TimeHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<ClockIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode, useEffect, useMemo, useState } from 'react';\nimport { orderBy } from 'lodash';\nimport { useEffectOnce } from 'react-use';\n// Ant Design Resources\nimport { Tooltip } from 'antd';\nimport { CrownFilled } from '@ant-design/icons';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useDimensions } from 'hooks/useDimensions';\n// Components\nimport { Translate } from 'components/language';\nimport { Avatar } from 'components/avatars';\n\ntype GainedPointProps = {\n  gainedPoint: number;\n  order: number;\n  description?: any;\n};\n\nfunction GainedPoint({ gainedPoint, order, description }: GainedPointProps): JSX.Element {\n  const isPositive = gainedPoint > 0;\n  const isNegative = gainedPoint < 0;\n  return (\n    <li\n      className={clsx(\n        'ranking-board__gained-point',\n        isPositive && 'ranking-board__gained-point--plus',\n        isNegative && 'ranking-board__gained-point--minus',\n        `ranking-board__gained-point--${order}`\n      )}\n    >\n      <Tooltip\n        title={description ?? <Translate pt=\"Pontos ganhos\" en=\"Gained Points\" />}\n        color={isPositive ? 'gold' : isNegative ? 'red' : 'gray'}\n      >\n        {isPositive ? '+' : ''}\n        {gainedPoint}\n      </Tooltip>\n    </li>\n  );\n}\n\ntype GainedPointsProps = {\n  gainedPoints: number[] | number;\n  playerId: PlayerId;\n  gainedPointsDescriptions?: any[];\n};\n\nfunction GainedPoints({\n  gainedPoints,\n  playerId,\n  gainedPointsDescriptions = [],\n}: GainedPointsProps): JSX.Element {\n  const points = Array.isArray(gainedPoints) ? gainedPoints : [gainedPoints];\n  return (\n    <ul className=\"ranking-board__cell-gained-points\">\n      {points.map((gainedPoint, index) => (\n        <GainedPoint\n          key={`gained-point-${playerId}-${index}`}\n          gainedPoint={gainedPoint}\n          order={index}\n          description={gainedPointsDescriptions[index]}\n        />\n      ))}\n    </ul>\n  );\n}\n\ntype RankingBoardProps = {\n  players: GamePlayers;\n  ranking: GameRanking;\n  gainedPointsDescriptions?: ReactNode[];\n  hideGainedPoints?: boolean;\n  delay?: number;\n};\n\nexport function RankingBoard({\n  players,\n  ranking,\n  gainedPointsDescriptions,\n  hideGainedPoints = false,\n  delay = 0,\n}: RankingBoardProps): JSX.Element {\n  const [displayStep, setDisplayStep] = useState(0);\n  const [sortedRanking, setSortedRanking] = useState<GameRanking>([]);\n  const [reRank, setReRank] = useState(0);\n  const [, height] = useDimensions('ranking-row-0');\n\n  const maxPoints = useMemo(() => Math.max(...ranking.map((scores) => scores.newScore)), [ranking]);\n\n  const { seconds } = useCountdown({\n    duration: 5 + delay,\n    autoStart: true,\n    onExpire: () => {\n      setReRank(1);\n      setDisplayStep(3);\n    },\n  });\n\n  // Rank by previousScore\n  useEffectOnce(() => {\n    const positions: PlainObject = {};\n    let lastPosition = 0;\n    let lastPoints = 0;\n\n    const rankByFinalScoreDict = orderBy(ranking, ['newScore', 'name'], ['desc', 'asc']).reduce(\n      (acc: PlainObject, entry, index) => {\n        acc[entry.playerId] = index;\n        // Calculate position\n        if (lastPoints === 0 || entry.newScore < lastPoints) {\n          lastPoints = entry.newScore;\n          lastPosition += 1;\n        }\n        positions[entry.playerId] = [0, lastPosition];\n        return acc;\n      },\n      {}\n    );\n\n    const rankByPreviousScore = orderBy(ranking, ['previousScore', 'name'], ['desc', 'asc']);\n\n    // Reset position trackers\n    lastPosition = 0;\n    lastPoints = 0;\n\n    const tempSortedRanking: GameRanking = rankByPreviousScore.map((entry, index) => {\n      const newEntry = { ...entry };\n\n      newEntry.order = [index, rankByFinalScoreDict[newEntry.playerId]];\n      newEntry.position = positions[newEntry.playerId];\n      // Calculate position\n      if (lastPoints === 0 || entry.previousScore < lastPoints) {\n        lastPoints = entry.previousScore;\n        lastPosition += 1;\n      }\n      newEntry.position[0] = lastPosition;\n      return newEntry;\n    });\n\n    setSortedRanking(tempSortedRanking);\n  });\n\n  // Show gained points\n  useEffect(() => {\n    if (seconds === 4 + delay) {\n      setDisplayStep(1);\n    } else if (seconds === 2 + delay) {\n      setDisplayStep(2);\n    }\n  }, [seconds, delay]);\n\n  return (\n    <div\n      className={clsx('ranking-board', seconds > 4 && 'ranking-board--hidden')}\n      style={{ height: `${(Math.max(60, height) + 8) * sortedRanking.length}px` }}\n    >\n      {sortedRanking.map((entry, index) => {\n        const { playerId, newScore, previousScore, gainedPoints, order, position } = entry;\n        const hPosition = (Math.max(60, height) + 8) * (order[reRank] ?? 0);\n\n        return (\n          <div\n            className={`ranking-board__row ranking-board__row--${index}`}\n            key={`ranking-${playerId}`}\n            id={`ranking-row-${index}`}\n            style={{ top: `${hPosition}px` }}\n          >\n            <div className=\"ranking-board__cell-crown\">\n              {newScore > 0 && maxPoints === newScore && displayStep >= 3 && (\n                <CrownFilled className=\"ranking-board__crown-icon\" />\n              )}\n            </div>\n            <div className=\"ranking-board__cell-position\">#{position[reRank] ?? ''}</div>\n            <div className=\"ranking-board__cell-player\">\n              <div className=\"ranking-board__avatar\">\n                <Avatar id={players[playerId].avatarId} />\n              </div>\n              <div className=\"ranking-board__name\">{players[playerId].name}</div>\n            </div>\n            <Tooltip title={<Translate pt=\"Pontos Anteriores\" en=\"Previous Points\" />} color=\"gray\">\n              <div className=\"ranking-board__cell-points\">{previousScore}</div>\n            </Tooltip>\n            {!hideGainedPoints && displayStep >= 1 && gainedPoints !== undefined && (\n              <GainedPoints\n                gainedPoints={gainedPoints}\n                playerId={playerId}\n                gainedPointsDescriptions={gainedPointsDescriptions}\n              />\n            )}\n            {displayStep >= 2 && (\n              <Tooltip title=\"Total\" color=\"gold\">\n                <span className=\"ranking-board__cell-points-total\">{newScore}</span>\n              </Tooltip>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { CaretUpOutlined } from '@ant-design/icons';\n// Hooks\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Components\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { RankingBoard } from './RankingBoard';\n\ntype StepRankingWrapperProps = {\n  /**\n   * The players\n   */\n  players: GamePlayers;\n  /**\n   * The ranking array\n   */\n  ranking: GameRanking;\n  /**\n   * Gained points descriptions for the popover\n   */\n  gainedPointsDescriptions: ReactNode[];\n  /**\n   * Additional content\n   */\n  children?: ReactNode;\n  /**\n   * Replacement title for Ranking\n   */\n  title?: ReactNode;\n  /**\n   * Optional node that goes under the title\n   */\n  subtitle?: ReactNode;\n  /**\n   * Whether the title should be white or not\n   */\n  white?: boolean;\n};\n\nexport function StepRankingWrapper({\n  players,\n  ranking,\n  gainedPointsDescriptions,\n  children,\n  title,\n  subtitle,\n  white,\n}: StepRankingWrapperProps) {\n  useTemporarilyHidePlayersBar();\n\n  return (\n    <Step>\n      <Title white={white}>{title ?? 'Ranking'}</Title>\n\n      {subtitle}\n\n      <RankingBoard players={players} ranking={ranking} gainedPointsDescriptions={gainedPointsDescriptions} />\n      <Instruction className=\"step-ranking-wrapper-gained-points-instruction\">\n        <CaretUpOutlined />\n        <Translate\n          pt=\"Passe o mouse em cada um dos pontos para saber como eles foram distribuídos\"\n          en=\"Hover over the scores to learn how they were granted\"\n        />\n        <CaretUpOutlined />\n      </Instruction>\n\n      {children}\n    </Step>\n  );\n}\n","import { useEffect } from 'react';\n\nexport function useColorizeBackground(user: GamePlayer, currentRound: number = 0) {\n  const team = user?.team?.[currentRound - 1];\n\n  // Colorize background\n  useEffect(() => {\n    if (team) {\n      const appElement = document.getElementById('app');\n      if (appElement) {\n        if (team === 'L') {\n          appElement.classList.add('background-sad');\n        } else {\n          appElement.classList.remove('background-sad');\n        }\n      }\n    }\n    return () => {\n      const appElement = document.getElementById('app');\n      appElement?.classList.remove('background-sad');\n    };\n  }, [team]);\n}\n","import { StepProps } from 'antd';\n\nexport const buildSeedingSteps = (\n  seeds: SeedEntry[],\n  translate: (pt: string, en: string, custom?: string | undefined) => string\n): StepProps[] => {\n  return seeds.map((seed) => {\n    switch (seed.type) {\n      case 'arte-ruim':\n        return {\n          title: translate('Hobby Artístico', 'Artistic Hobby'),\n          description: translate('Se expresse!', 'Express yourself!'),\n        };\n\n      case 'contadores-historias':\n        return {\n          title: translate('Torpedo da sua mãe', 'Text from your mom'),\n          description: translate('O que ela quer agora?', 'What does she want now?'),\n        };\n\n      case 'labirinto-secreto':\n        return {\n          title: translate('Postando no Insta', 'Instagram post'),\n          description: translate('Não existe sexy demais!', 'Do it for the likes!'),\n        };\n\n      case 'mente-coletiva':\n        return {\n          title: translate('Tik Tok', 'Tik Tok'),\n          description: translate('Sempre temos um tempinho!', \"There's always time!\"),\n        };\n\n      case 'onda-telepatica':\n        return {\n          title: translate('Tarefa de Casa', 'Homework'),\n          description: translate('Não pode deixar pra depois!', \"You can't leave it for tomorrow!\"),\n        };\n      case 'polemica-da-vez':\n        return {\n          title: translate('Redes sociais', 'Social Media'),\n          description: translate('Dê uma olhada no twitter', 'Check it out twitter'),\n        };\n      case 'retrato-falado':\n        return {\n          title: translate('Flashback', 'Flashback'),\n          description: translate('Um evento traumatizante', 'A traumatizing event'),\n        };\n      case 'ue-so-isso':\n        return {\n          title: translate('Torpedo do Amigo', \"A friend's text\"),\n          description: translate('Responda!', 'Reply!'),\n        };\n      case 'clubber':\n        return {\n          title: translate('Look', 'Outfit'),\n          description: translate('Como ir pra balada', 'How to be cool'),\n        };\n      default:\n        return {};\n    }\n  });\n};\n\nexport const showDJPruPruPruStep = (round: GameRound) => {\n  if (round.current <= 1 || !round) return 0; // true\n\n  if (round.current === Math.round(round.total / 2)) return 0;\n\n  if (round.current === round.total) return 0;\n\n  return 1; // false\n};\n\nexport const getMovieTitles = (movies: MovieCard[]) => {\n  return {\n    A: `${movies[0].prefix} ${movies[1].suffix}`,\n    B: `${movies[1].prefix} ${movies[2].suffix}`,\n    C: `${movies[3].prefix} ${movies[4].suffix}`,\n    D: `${movies[4].prefix} ${movies[5].suffix}`,\n  };\n};\n","// Components\nimport { AlienCommunicationIcon } from 'icons/AlienCommunicationIcon';\nimport { BoxingGlovesIcon } from 'icons/BoxingGlovesIcon';\nimport { ChoiceIcon } from 'icons/ChoiceIcon';\nimport { ColorWheelIcon } from 'icons/ColorWheelIcon';\nimport { CrimeSceneIcon } from 'icons/CrimeSceneIcon';\nimport { CriminalIcon } from 'icons/CriminalIcon';\nimport { CrossWordsIcon } from 'icons/CrossWordsIcon';\nimport { DetectiveIcon } from 'icons/DetectiveIcon';\nimport { DirectionsIcon } from 'icons/DirectionsIcon';\nimport { DreamIcon } from 'icons/DreamIcon';\nimport { FairyTaleIcon } from 'icons/FairyTaleIcon';\nimport { GuessIcon } from 'icons/GuessIcon';\nimport { LoveIcon } from 'icons/LoveIcon';\nimport { MagicDoorIcon } from 'icons/MagicDoorIcon';\nimport { MirrorIcon } from 'icons/MirrorIcon';\nimport { MonsterIcon } from 'icons/MonsterIcon';\nimport { MovieTheaterIcon } from 'icons/MovieTheaterIcon';\nimport { PassportIcon } from 'icons/PassportIcon';\nimport { PathIcon } from 'icons/PathIcon';\nimport { PictureIcon } from 'icons/PictureIcon';\nimport { QueueIcon } from 'icons/QueueIcon';\nimport { ReviewIcon } from 'icons/ReviewIcon';\nimport { RevolverIcon } from 'icons/RevolverIcon';\nimport { SheepIcon } from 'icons/SheepIcon';\nimport { SkiingIcon } from 'icons/SkiingIcon';\nimport { TDIcon } from 'icons/TDIcon';\nimport { TrendingIcon } from 'icons/TrendingIcon';\nimport { TrickOrTreatIcon } from 'icons/TrickOrTreatIcon';\nimport { WavelengthDeviceIcon } from 'icons/WavelengthDeviceIcon';\n\ntype TrackIconProps = {\n  track: Track;\n};\n\nexport const TrackIcon = ({ track }: TrackIconProps) => {\n  const IconComponent =\n    {\n      'arte-ruim': PictureIcon,\n      'comunicacao-alienigena': AlienCommunicationIcon,\n      'contadores-historias': FairyTaleIcon,\n      'crimes-hediondos': CrimeSceneIcon,\n      'cruza-palavras': CrossWordsIcon,\n      'detetives-imaginativos': DetectiveIcon,\n      'dilema-dos-esquiadores': SkiingIcon,\n      'espiao-entre-nos': PassportIcon,\n      'fileira-de-fatos': QueueIcon,\n      'galeria-de-sonhos': DreamIcon,\n      'labirinto-secreto': PathIcon,\n      'megamix-best-of-three': ChoiceIcon,\n      'megamix-this-that': DirectionsIcon,\n      'mente-coletiva': SheepIcon,\n      'namoro-ou-amizade': LoveIcon,\n      'na-rua-do-medo': TrickOrTreatIcon,\n      'onda-telepatica': WavelengthDeviceIcon,\n      'palheta-de-cores': ColorWheelIcon,\n      'polemica-da-vez': TrendingIcon,\n      'porta-dos-desesperados': MagicDoorIcon,\n      'quem-nao-mata': RevolverIcon,\n      'quem-sou-eu': MirrorIcon,\n      'retrato-falado': MonsterIcon,\n      'super-campeonato': BoxingGlovesIcon,\n      'testemunha-ocular': CriminalIcon,\n      'ta-na-cara': ReviewIcon,\n      'ue-so-isso': GuessIcon,\n      'vamos-ao-cinema': MovieTheaterIcon,\n    }?.[track.game] ?? TDIcon;\n\n  return <IconComponent />;\n};\n","export const TITLES: Record<string, DualLanguageValue> = {\n  'arte-ruim': {\n    pt: 'Arte Ruim Pra Dedéu',\n    en: 'Questionable Art',\n  },\n  'comunicacao-alienigena': {\n    pt: 'Comunicação Alienígena',\n    en: 'Alien Communication',\n  },\n  'contadores-historias': {\n    pt: 'Contadores de Histórias',\n    en: 'Storytellers',\n  },\n  'crimes-hediondos': {\n    pt: 'Crimes Hediondos',\n    en: 'Horrific Crimes',\n  },\n  'cruza-palavras': {\n    pt: 'Cruza Palavras',\n    en: 'Mixed Clues',\n  },\n  'detetives-imaginativos': {\n    pt: 'Detetives Imaginativos',\n    en: 'Imaginative Detectives',\n  },\n  'dilema-dos-esquiadores': {\n    pt: 'O Dilema do Esquiador',\n    en: \"The Skier's Dilemma\",\n  },\n  'espiao-entre-nos': {\n    pt: 'Espião Entre Nós',\n    en: 'Spy the Spies',\n  },\n  'fileira-de-fatos': {\n    pt: 'Fileira de Fatos',\n    en: 'Facts Lineup',\n  },\n  'galeria-de-sonhos': {\n    pt: 'Galeria de Sonhos',\n    en: 'Dream Gallery',\n  },\n  'labirinto-secreto': {\n    pt: 'Labirinto Secreto',\n    en: 'Secret Labyrinth',\n  },\n  'megamix-best-of-three': {\n    pt: 'Melhor de 3',\n    en: 'Best of 3',\n  },\n  'megamix-this-that': {\n    pt: 'Isso ou Aquilo?',\n    en: 'This or That?',\n  },\n  'mente-coletiva': {\n    pt: 'Mente Coletiva',\n    en: 'Herd Mind',\n  },\n  'na-rua-do-medo': {\n    pt: 'Na Rua do Medo',\n    en: 'Fear Street',\n  },\n  'namoro-ou-amizade': {\n    pt: 'Namoro ou Amizade',\n    en: 'Awkward Dates',\n  },\n  'onda-telepatica': {\n    pt: 'Ondas Telepáticas',\n    en: 'Telepathic Waves',\n  },\n  'palheta-de-cores': {\n    pt: 'Palheta de Cores',\n    en: 'Color Palette',\n  },\n  'polemica-da-vez': {\n    pt: 'Polêmica da Vez',\n    en: \"That's Polemic!\",\n  },\n  'porta-dos-desesperados': {\n    pt: 'Porta dos Desesperados',\n    en: 'Obscure Doors',\n  },\n  'retrato-falado': {\n    pt: 'Retrato Falado Monstruoso',\n    en: 'Monster Sketch',\n  },\n  'quem-nao-mata': {\n    pt: 'Quem Não Mata, Morre',\n    en: 'Mortal Standoff',\n  },\n  'quem-sou-eu': {\n    pt: 'Quem Sou Eu?',\n    en: 'Who Am I?',\n  },\n  'super-campeonato': {\n    pt: 'Super Campeonato',\n    en: 'Ultimate Championship',\n  },\n  'ta-na-cara': {\n    pt: 'Tá Na Cara',\n    en: 'Guess Who What?',\n  },\n  'testemunha-ocular': {\n    pt: 'Testemunha Ocular',\n    en: 'Eye Witness',\n  },\n  'ue-so-isso': {\n    pt: 'Ué, só isso?',\n    en: \"That's it?\",\n  },\n  'vamos-ao-cinema': {\n    pt: 'Vamos no cinema?',\n    en: 'Movie night!',\n  },\n};\n\nexport const INSTRUCTIONS: Record<string, DualLanguageValue> = {\n  'arte-ruim': {\n    pt: 'Uma imagem vale mais que mil palavras',\n    en: \"That's art!\",\n  },\n  'comunicacao-alienigena': {\n    pt: 'Vamos falar com os ETs',\n    en: 'Let us talk to the aliens',\n  },\n\n  'contadores-historias': {\n    pt: 'Conte uma história',\n    en: 'Tell us a story',\n  },\n  'crimes-hediondos': {\n    pt: 'Desvenda o crime!',\n    en: 'Solve the crime!',\n  },\n  'cruza-palavras': {\n    pt: 'Coloque a dica na grade de palavras!',\n    en: 'Place the clue in the word grid!',\n  },\n  'detetives-imaginativos': {\n    pt: 'Há um impostor entre a gente!',\n    en: 'There is an impostor among us!',\n  },\n  'dilema-dos-esquiadores': {\n    pt: 'Escolha uma montanha para esquiar!',\n    en: 'Choose a mountain to ski!',\n  },\n  'espiao-entre-nos': {\n    pt: 'Onde você está?',\n    en: 'Where are we?',\n  },\n  'fileira-de-fatos': {\n    pt: 'Coloque a fila de números na ordem!',\n    en: 'Place the line of numbers in order!',\n  },\n  'galeria-de-sonhos': {\n    pt: 'Um tema, um sonho, várias images',\n    en: 'A theme, a dream, many images',\n  },\n  'labirinto-secreto': {\n    pt: 'Vamos andar pela floresta',\n    en: \"Let's walk into the woods\",\n  },\n  megamix: {\n    pt: 'Qual opção você escolhe?',\n    en: 'Which option do you choose?',\n  },\n  'mente-coletiva': {\n    pt: 'Junte-se as ovelhas!',\n    en: 'Join the herd!',\n  },\n  'na-rua-do-medo': {\n    pt: 'Gostosuras ou travessuras?',\n    en: 'Trick or treat?',\n  },\n  'namoro-ou-amizade': {\n    pt: 'Selecione o melhor partido',\n    en: \"Who's the best catch?\",\n  },\n  'onda-telepatica': {\n    pt: 'Para onde o ponteiro está apontando?',\n    en: 'Where is the pointer pointing to?',\n  },\n  'palheta-de-cores': {\n    pt: 'Selecione a melhor cor',\n    en: 'Select the best color swatch',\n  },\n  'polemica-da-vez': {\n    pt: 'Quantas curtidas isso ganha?',\n    en: 'How many likes, huh?',\n  },\n  'porta-dos-desesperados': {\n    pt: 'Qual a porta é a saída?',\n    en: 'What door is the exit?',\n  },\n  'quem-nao-mata': {\n    pt: 'Mate alguém...',\n    en: 'Kill someone...',\n  },\n  'quem-sou-eu': {\n    pt: 'Decifre os símbolos!',\n    en: 'Decipher the glyphs',\n  },\n  'retrato-falado': {\n    pt: 'Qual o melhor monstro?',\n    en: 'What is the best monster?',\n  },\n  'super-campeonato': {\n    pt: 'Quem ganha essa batalha?',\n    en: 'Who will win this battle?',\n  },\n  'ta-na-cara': {\n    pt: 'E esse aí? O que acha?',\n    en: 'What about this one? What do you think?',\n  },\n  'testemunha-ocular': {\n    pt: 'Quem é o criminoso?',\n    en: 'Who is the perpetrator?',\n  },\n  'ue-so-isso': {\n    pt: 'Escreva uma dica para ser eliminada',\n    en: 'Write a clue to be eliminated',\n  },\n  'vamos-ao-cinema': {\n    pt: 'Vamos ver qual filme?',\n    en: 'But what movie?',\n  },\n};\n","// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { INSTRUCTIONS } from '../utils/constants';\n\ntype TrackInstructionsProps = {\n  track: Track;\n};\n\nexport const TrackInstructions = ({ track }: TrackInstructionsProps) => {\n  const { dualTranslate } = useLanguage();\n\n  const instruction: DualLanguageValue = INSTRUCTIONS?.[track.game] ?? {\n    pt: 'Se vire nos 30!',\n    en: 'Do something!',\n  };\n\n  return <>{dualTranslate(instruction)}</>;\n};\n","import { useMemo } from 'react';\n// AntDesign Resources\nimport { Tooltip } from 'antd';\n// Hooks\n// Utils\nimport { sortPlayers } from 'utils/helpers';\n// Components\nimport { VIPLineIcon } from 'icons/VIPLineIcon';\nimport { ClubberAvatar } from './ClubberAvatar';\n\ntype MinigameTitleProps = {\n  players: GamePlayers;\n  currentRound: number;\n};\n\nexport function ClubLine({ players, currentRound }: MinigameTitleProps) {\n  const { winners, losers } = useMemo(() => {\n    const playersList = sortPlayers(players);\n\n    return {\n      winners: playersList.filter((player) => player.team[currentRound - 1] === 'W'),\n      losers: playersList.filter((player) => player.team[currentRound - 1] === 'L'),\n    };\n  }, [players, currentRound]);\n\n  return (\n    <div className=\"club-line\">\n      <div className=\"club-line__background\"></div>\n      <div className=\"club-line__clubbers\">\n        <div className=\"club-line__area\">\n          {winners.map((player) => (\n            <div className=\"club-line__player\" key={`${player.id}-${player.clubberId}`}>\n              <Tooltip title={player.name}>\n                <ClubberAvatar\n                  id={player.avatarId}\n                  clubberId={player.clubberId}\n                  className=\"club-line__clubber\"\n                  animate\n                />\n              </Tooltip>\n            </div>\n          ))}\n        </div>\n        <VIPLineIcon className=\"club-line__vip-icon\" />\n        <div className=\"club-line__area\">\n          {losers.map((player) => (\n            <div\n              className=\"club-line__player club-line__player--trash\"\n              key={`${player.id}-${player.clubberId}`}\n            >\n              <Tooltip title={player.name}>\n                <ClubberAvatar\n                  key={`${player.id}-${player.clubberId}`}\n                  id={player.avatarId}\n                  clubberId={player.clubberId}\n                  className=\"club-line__clubber\"\n                />\n              </Tooltip>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","// Amt Design Resources\nimport { Space } from 'antd';\n// Icons\nimport { UnderConstructionIcon } from 'icons/UnderConstructionIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { Title } from 'components/text';\nimport { Translate } from 'components/language';\n\nexport function FallbackComponent(_: unknown) {\n  return (\n    <Space className=\"space-container\" direction=\"vertical\" align=\"center\">\n      <IconAvatar size=\"large\" icon={<UnderConstructionIcon />} />\n      <Title size=\"xx-small\">\n        <Translate pt=\"Algo errado não está certo\" en=\"Something wrong is not right\" />\n      </Title>\n    </Space>\n  );\n}\n","import { mockClue } from 'mock/clues';\nimport { mockDrawing } from 'mock/drawing';\nimport { getRandomItem } from 'utils/helpers';\n\nexport function mockSeeding(seeds: SeedEntry[]) {\n  const data: PlainObject = {};\n  seeds.forEach((seed) => {\n    switch (seed.type) {\n      case 'arte-ruim':\n        data[seed.card.id] = JSON.stringify(mockDrawing());\n        break;\n      case 'contadores-historias':\n        data.prompt = getRandomItem(seed.prompts);\n        break;\n      case 'labirinto-secreto':\n        const ids = getIds(seed.cards);\n        data[seed.tree.id] = getRandomItem(ids);\n        break;\n      case 'mente-coletiva':\n        data.answers = [mockClue(), mockClue()];\n        break;\n      case 'onda-telepatica':\n        data.wave = mockClue();\n        break;\n      case 'polemica-da-vez':\n        data.likeTweet = getRandomItem([true, false]);\n        break;\n      case 'retrato-falado':\n        data[seed.card.id] = JSON.stringify(mockDrawing());\n        break;\n      case 'ue-so-isso':\n        data.singleClue = mockClue();\n        break;\n      case 'clubber':\n        data.clubberId = seed.outfits[0];\n        break;\n      default:\n        return {};\n    }\n  });\n\n  return data;\n}\n\nexport function mockSelection(options: unknown[], propertyName?: string) {\n  const random = getRandomItem(options) as PlainObject;\n  return propertyName ? random[propertyName] : random;\n}\n\nexport function mockText() {\n  return getRandomItem(['bola', 'bolas', 'prata', 'prato', 'pirulito', 'domingo']);\n}\n\nexport function getIds(list: PlainObject[]) {\n  return list.map((entry) => entry.id);\n}\n","// Utils\nimport { DualTranslate } from 'components/language';\n\n// Components\nimport { Title } from 'components/text';\n\ntype MinigameTitleProps = {\n  title: DualLanguageValue;\n};\n\nexport function MinigameTitle({ title }: MinigameTitleProps) {\n  return (\n    <Title size=\"small\" white level={2} className=\"minigame-title__number\">\n      <DualTranslate>{title}</DualTranslate>\n    </Title>\n  );\n}\n","// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { LETTERS } from 'utils/constants';\nimport { getColorFromIndex } from 'utils/helpers';\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { CanvasSVG } from 'components/canvas';\nimport { TransparentButton } from 'components/buttons';\n\nexport const TrackArteRuim = ({ track, round, onSubmitAnswer, user, players }: TrackProps) => {\n  const cardWidth = useCardWidth(5, {\n    minWidth: 250,\n    maxWidth: 270,\n  });\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    if (track.variant === 'cards') {\n      onSelect(mockSelection(track.data.cards, 'id'));\n    }\n\n    if (track.variant === 'drawings') {\n      onSelect(mockSelection(track.data.options, 'playerId'));\n    }\n  });\n\n  if (track.variant === 'cards') {\n    return (\n      <>\n        <MinigameTitle title={{ pt: 'Arte Ruim Pra Dedéu', en: 'Questionable Art' }} />\n        <Instruction contained>\n          <Translate\n            pt={\n              <>\n                Dentre as cartas abaixo, qual melhor descreve essa linda ilustração?\n                <br />\n                Foi você quem desenhou? Lembre-se que a resposta correta não é importante, e sim o que a\n                maioria escolher.\n              </>\n            }\n            en={\n              <>\n                Among the cards below, which one best describes the beautiful illustration?\n                <br />\n                <em>\n                  Is that your drawing? Remember that the correct answer is not important, but what the\n                  majority will choose.\n                </em>\n              </>\n            }\n          />\n        </Instruction>\n\n        <Space className=\"space-container\">\n          <CanvasSVG drawing={track.data.option.drawing} width={cardWidth} className=\"a-drawing\" />\n        </Space>\n\n        <Space className=\"space-container\">\n          {track.data.cards.map((card: TextCard, index: number) => (\n            <TransparentButton\n              key={card.id}\n              disabled={isLoading || user.ready}\n              onClick={() =>\n                onSubmitAnswer({\n                  data: { value: card.id },\n                })\n              }\n            >\n              <Card header={LETTERS[index]} color={getColorFromIndex(index)}>\n                {card.text}\n              </Card>\n            </TransparentButton>\n          ))}\n        </Space>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Arte Ruim Pra Dedéu', en: 'Questionable Art' }} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Dentre as ilustrações abaixo, qual melhor descreve a carta?\n              <br />\n              Foi você quem desenhou? Lembre-se que a resposta correta não é importante, e sim o que a maioria\n              escolher.\n            </>\n          }\n          en={\n            <>\n              Among the illustrations below, which one best fits the card?\n              <br />\n              <em>\n                Is that your drawing? Remember that the correct answer is not important, but what the majority\n                will choose.\n              </em>\n            </>\n          }\n        />\n      </Instruction>\n\n      <Space className=\"space-container\">\n        <Card header=\"A\" color={getColorFromIndex(0)}>\n          {track.data.cards[1].text}\n        </Card>\n      </Space>\n\n      <div className=\"a-drawings\">\n        {track.data.options.map((entry: PlainObject) => (\n          <div className=\"a-drawings__entry\">\n            <CanvasSVG drawing={entry.drawing} width={cardWidth} className=\"a-drawing\" />\n\n            <Space className=\"space-container\">\n              <Button\n                shape=\"round\"\n                type=\"primary\"\n                disabled={user.ready}\n                loading={isLoading}\n                onClick={() => onSelect(entry.playerId)}\n              >\n                <Translate pt=\"Selecionar\" en=\"Select\" />\n              </Button>\n            </Space>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n","import { Fragment } from 'react';\n// AntDesign Resources\nimport { Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction, TextHighlight } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { IconAvatar } from 'components/avatars/IconAvatar';\nimport { TransparentButton } from 'components/buttons';\nimport { TreeOneIcon } from 'icons/TreeOneIcon';\nimport { TreeTwoIcon } from 'icons/TreeTwoIcon';\nimport { TreeThreeIcon } from 'icons/TreeThreeIcon';\nimport { MapIcon } from 'icons/MapIcon';\nimport { RightSquareOutlined } from '@ant-design/icons';\n\nexport const TrackLabirintoSecreto = ({ track, round, onSubmitAnswer, user }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: number) => {\n    onSubmitAnswer({\n      data: { value: String(value) },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection([0, 1, 2]));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Labirinto Secreto', en: 'Secret Labyrinth' }} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Para atravessar a floresta, você precisa passar por essas 3 árvores.\n              <br />\n              Com mapa feito de adjetivos (que útil), qual rota você selecionaria ir da{' '}\n              <TextHighlight>{track.data.trees[0].text}</TextHighlight> ao{' '}\n              <TextHighlight>{track.data.trees[2].text}</TextHighlight>?\n            </>\n          }\n          en={\n            <>\n              To cross the woods, you need to pass by 3 trees.\n              <br />\n              With a map made of adjectives (wow, so useful), what route would to select to go from{' '}\n              <TextHighlight>{track.data.trees[0].text}</TextHighlight> to{' '}\n              <TextHighlight>{track.data.trees[2].text}</TextHighlight>?\n            </>\n          }\n        />\n      </Instruction>\n\n      <div className=\"cm-trees\">\n        <div className=\"cm-trees__tree\">\n          <IconAvatar icon={<TreeOneIcon />} size={84} />\n          <div className=\"cm-trees__text\">{track.data.trees[0].text}</div>\n        </div>\n\n        <div className=\"cm-trees__tree\">\n          <IconAvatar icon={<TreeTwoIcon />} size={84} />\n          <div className=\"cm-trees__text\">{track.data.trees[1].text}</div>\n        </div>\n\n        <div className=\"cm-trees__tree\">\n          <IconAvatar icon={<TreeThreeIcon />} size={84} />\n          <div className=\"cm-trees__text\">{track.data.trees[2].text}</div>\n        </div>\n      </div>\n\n      <Space className=\"space-container\" direction=\"vertical\">\n        <TransparentButton\n          className=\"cm-clues__clue\"\n          disabled={user.ready || isLoading}\n          onClick={() => onSelect(0)}\n        >\n          {'A'}\n          <IconAvatar icon={<MapIcon />} size={48} />\n          {Object.values<PlainObject>(track.data.options[0]).map((option, index, arr) => {\n            return (\n              <Fragment key={`${option.playerId}-${index}`}>\n                <span className=\"cm-clues__clue-text\">{option.text}</span>\n                {arr.length - 1 > index && <RightSquareOutlined />}\n              </Fragment>\n            );\n          })}\n        </TransparentButton>\n        <TransparentButton\n          className=\"cm-clues__clue\"\n          disabled={user.ready || isLoading}\n          onClick={() => onSelect(1)}\n        >\n          {'B'}\n          <IconAvatar icon={<MapIcon />} size={48} />\n          {Object.values<PlainObject>(track.data.options[1]).map((option, index, arr) => {\n            return (\n              <Fragment key={`${option.playerId}-${index}`}>\n                <span className=\"cm-clues__clue-text\">{option.text}</span>\n                {arr.length - 1 > index && <RightSquareOutlined />}\n              </Fragment>\n            );\n          })}\n        </TransparentButton>\n        <TransparentButton\n          className=\"cm-clues__clue\"\n          disabled={user.ready || isLoading}\n          onClick={() => onSelect(2)}\n        >\n          {'C'}\n          <IconAvatar icon={<MapIcon />} size={48} />\n          {Object.values<PlainObject>(track.data.options[2]).map((option, index, arr) => {\n            return (\n              <Fragment key={`${option.playerId}-${index}`}>\n                <span className=\"cm-clues__clue-text\">{option.text}</span>\n                {arr.length - 1 > index && <RightSquareOutlined />}\n              </Fragment>\n            );\n          })}\n        </TransparentButton>\n      </Space>\n    </>\n  );\n};\n","// AntDesign Resources\nimport { Button, Image, Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { ImageBlurButtonContainer, ImageCard } from 'components/image-cards';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { BookPages } from 'components/game/BookPages';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackContadoresHistorias = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const { isLoading } = useLoading();\n  const cardWidth = useCardWidth(8, { gap: 8, minWidth: 150, maxWidth: 350, margin: 8 });\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(track.data.cards));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Contadores de Histórias', en: 'Storytellers' }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"space-container contained margin\">\n        <Instruction contained>\n          <Translate\n            pt=\"Dada a dica abaixo, qual das cartas é a resposta correta?\"\n            en=\"Given the clue below, which card is the correct answer?\"\n          />\n        </Instruction>\n\n        <BookPages\n          className=\"c-book-pages\"\n          leftPage={\n            <Space className=\"space-container\" direction=\"vertical\" align=\"center\">\n              <ImageCard imageId=\"back-question\" cardWidth={100} />\n            </Space>\n          }\n          rightPage={<div className=\"c-book-content\">{track.data?.prompt ?? track.data?.options ?? '?'}</div>}\n        />\n\n        <Image.PreviewGroup>\n          <Space className=\"space-container\">\n            {track.data.cards.map((cardId: ImageCardId) => {\n              return (\n                <Space className=\"space-container\" direction=\"vertical\">\n                  <ImageBlurButtonContainer cardId={cardId}>\n                    <ImageCard imageId={cardId} cardWidth={cardWidth} />\n                  </ImageBlurButtonContainer>\n                  <Button\n                    shape=\"round\"\n                    type=\"primary\"\n                    disabled={user.ready}\n                    loading={isLoading}\n                    onClick={() => onSelect(cardId)}\n                  >\n                    <Translate pt=\"Selecionar\" en=\"Select\" />\n                  </Button>\n                </Space>\n              );\n            })}\n          </Space>\n        </Image.PreviewGroup>\n      </Space>\n    </>\n  );\n};\n","// AntDesign Resources\nimport { Button } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Icons\nimport { KnifeIcon } from 'icons/KnifeIcon';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { LoupeIcon } from 'icons/LoupeIcon';\nimport { MetricHighlight } from 'components/metrics/MetricHighlight';\nimport { CrimeItemCard } from 'components/cards/CrimeItemCard';\nimport { SceneTile } from 'components/game/SceneTile';\n\nexport const TrackCrimesHediondos = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const cardWidth = useCardWidth(12, { minWidth: 100, maxWidth: 130 });\n\n  const { isLoading } = useLoading();\n\n  // DEV Mock\n  useMock(() => {\n    onSubmitAnswer({\n      data: { value: mockSelection(track.data.cards, 'id') },\n    });\n  });\n\n  const icon = track.variant === 'weapon' ? <KnifeIcon /> : <LoupeIcon />;\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Crimes Hediondos', en: 'Horrific Crimes' }} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              O médico legista examinou o crime e chegou às conclusões abaixo.\n              <br />\n              Selecione qual{' '}\n              <MetricHighlight icon={icon} iconPlacement=\"before\">\n                {track.variant === 'weapon' ? 'arma' : 'evidencia'}\n              </MetricHighlight>{' '}\n              você acha que foi usada no crime.\n            </>\n          }\n          en={\n            <>\n              The forensic scientist examined the body and came to those conclusions below.\n              <br />\n              Select the one{' '}\n              <MetricHighlight icon={icon} iconPlacement=\"before\">\n                {track.variant}\n              </MetricHighlight>{' '}\n              you think took part in the crime.\n            </>\n          }\n        />\n      </Instruction>\n\n      <ul className=\"h-table\">\n        {Boolean(track.data.scenes.causeOfDeath) && (\n          <SceneTile tile={track.data.scenes.causeOfDeath} index={track.data.crimeIndexes.causeOfDeath} />\n        )}\n        {Boolean(track.data.scenes.reasonForEvidence) && (\n          <SceneTile\n            tile={track.data.scenes.reasonForEvidence}\n            index={track.data.crimeIndexes.reasonForEvidence}\n          />\n        )}\n\n        <SceneTile tile={track.data.scenes.location} index={track.data.crimeIndexes.location} />\n        <SceneTile tile={track.data.scenes.sceneA} index={track.data.crimeIndexes.sceneA} />\n        <SceneTile tile={track.data.scenes.sceneB} index={track.data.crimeIndexes.sceneB} />\n        <SceneTile tile={track.data.scenes.sceneC} index={track.data.crimeIndexes.sceneC} />\n      </ul>\n\n      <ul className=\"h-cards\">\n        {track.data.cards.map((card: HCard) => {\n          return (\n            <li key={card.id} className=\"margin\">\n              <CrimeItemCard item={card} cardWidth={cardWidth} isSelected={user?.data?.value === card.id} />\n\n              <Button\n                shape=\"round\"\n                type=\"primary\"\n                disabled={user.ready}\n                loading={isLoading}\n                onClick={() =>\n                  onSubmitAnswer({\n                    data: { value: card.id },\n                  })\n                }\n              >\n                <Translate pt=\"Selecionar\" en=\"Select\" />\n              </Button>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n","// Sass\nimport clsx from 'clsx';\nimport { ReactNode } from 'react';\nimport './SpreadsheetGrid.scss';\n\ntype SpreadsheetGridProps = {\n  /**\n   * Number of columns\n   */\n  columns: number;\n  /**\n   * Number of rows\n   */\n  rows: number;\n  /**\n   * Add the blank top left corner cell\n   */\n  topLeftCorner?: boolean;\n  /**\n   * Content of the grid, usually SpreadsheetCell components\n   */\n  children?: ReactNode;\n  /**\n   * Custom class name\n   */\n  className?: string;\n};\n\nexport function SpreadsheetGrid({ columns, rows, topLeftCorner, children, className }: SpreadsheetGridProps) {\n  return (\n    <div\n      className={clsx('spreadsheet-grid', className)}\n      style={{ gridTemplateColumns: `repeat(${columns}, 1fr)`, gridTemplateRows: `repeat(${rows}, auto)` }}\n      role=\"table\"\n    >\n      {topLeftCorner && <SpreadsheetCell header></SpreadsheetCell>}\n      {children}\n    </div>\n  );\n}\n\ntype SpreadsheetCellProps = {\n  /**\n   * The content of the Cell\n   */\n  children?: ReactNode;\n  /**\n   * Style cell as header\n   */\n  header?: boolean;\n  /**\n   * Custom class name\n   */\n  className?: string;\n};\n\nexport function SpreadsheetCell({ children, header, className }: SpreadsheetCellProps) {\n  return (\n    <span className={clsx('spreadsheet-cell', header && 'spreadsheet-cell--header', className)} role=\"cell\">\n      {children}\n    </span>\n  );\n}\n","import { ReactNode } from 'react';\nimport clsx from 'clsx';\n// Sass\nimport './SpeechBubble.scss';\n\ntype SpeechBubbleProps = {\n  children: ReactNode;\n  direction?: 'left' | 'right' | 'top' | 'bottom';\n  shadow?: boolean;\n  size?: 'small' | 'medium' | 'large';\n};\n\nexport function SpeechBubble({ children, direction = 'left', shadow, size }: SpeechBubbleProps) {\n  const baseClass = 'speech-bubble';\n  return (\n    <div\n      className={clsx(\n        baseClass,\n        `${baseClass}--${direction}`,\n        shadow && `${baseClass}--shadow`,\n        size && `${baseClass}--${size}`\n      )}\n    >\n      {children}\n    </div>\n  );\n}\n","// AntDesign Resources\nimport { Button, ButtonProps, Space } from 'antd';\nimport { PlusCircleFilled } from '@ant-design/icons';\n// Hooks\nimport { useMock } from 'hooks/useMock';\nimport { useLoading } from 'hooks/useLoading';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { SpreadsheetCell, SpreadsheetGrid } from 'components/general/SpreadsheetGrid';\nimport { SpeechBubble } from 'components/text/SpeechBubble';\n\nexport const TrackCruzaPalavras = ({ track, round, onSubmitAnswer, user }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const onSelect = (position: number) => {\n    onSubmitAnswer({\n      data: { value: String(position) },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection([0, 1, 2, 3]));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Cruza Palavras', en: 'Mixed Clues' }} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Bob, o robot, escreveu a dica péssima abaixo usando sua \"inteligência artificial\", e agora?\n              <br />\n              Aonde ela se encaixa na grade para que combine com a linha e a coluna?\n              <br />\n              Clique na célula apropriada!\n            </>\n          }\n          en={\n            <>\n              Bob the bot wrote this terrible clue below using its AI.\n              <br />\n              Where does it fit in the grid where it would match the column and row?\n              <br />\n              Click the appropriate grid cell!\n            </>\n          }\n        />\n      </Instruction>\n\n      <Space className=\"space-container\">\n        <Avatar id=\"A\" size=\"large\" /> <SpeechBubble shadow>{track.data.clue.text}</SpeechBubble>\n      </Space>\n\n      <Space className=\"space-container\">\n        <SpreadsheetGrid columns={3} rows={3} topLeftCorner>\n          <SpreadsheetCell header>{track.data.cards[0].text}</SpreadsheetCell>\n          <SpreadsheetCell header>{track.data.cards[1].text}</SpreadsheetCell>\n          <SpreadsheetCell header>{track.data.cards[2].text}</SpreadsheetCell>\n          <SpreadsheetCell>\n            <CellPlusButton onClick={() => onSelect(0)} disabled={user.ready} loading={isLoading} />\n          </SpreadsheetCell>\n          <SpreadsheetCell>\n            <CellPlusButton onClick={() => onSelect(1)} disabled={user.ready} loading={isLoading} />\n          </SpreadsheetCell>\n          <SpreadsheetCell header>{track.data.cards[3].text}</SpreadsheetCell>\n          <SpreadsheetCell>\n            <CellPlusButton onClick={() => onSelect(2)} disabled={user.ready} loading={isLoading} />\n          </SpreadsheetCell>\n          <SpreadsheetCell>\n            <CellPlusButton onClick={() => onSelect(3)} disabled={user.ready} loading={isLoading} />\n          </SpreadsheetCell>\n        </SpreadsheetGrid>\n      </Space>\n    </>\n  );\n};\n\nfunction CellPlusButton({ onClick, loading, ...rest }: ButtonProps) {\n  return (\n    <Button onClick={onClick} shape=\"circle\" loading={loading} {...rest}>\n      {!loading && <PlusCircleFilled />}\n    </Button>\n  );\n}\n","import clsx from 'clsx';\n// AntDesign Resources\nimport { Button, Image, Space } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { AVATARS, BOTS_LIST } from 'utils/avatars';\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { ImageBlurButtonContainer, ImageCard } from 'components/image-cards';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackDetetivesImaginativos = ({ track, round, onSubmitAnswer, user, players }: TrackProps) => {\n  const cardWidth = useCardWidth(7, { minWidth: 200, maxWidth: 270 });\n  const { language } = useLanguage();\n  const { isLoading } = useLoading();\n\n  // DEV Mock\n  useMock(() => {\n    onSubmitAnswer({\n      data: { value: mockSelection(track.data.cards) },\n    });\n  });\n\n  if (track.variant === 'impostor') {\n    return (\n      <>\n        <MinigameTitle title={{ pt: 'Detetives Imaginativos', en: 'Detective Agency' }} />\n        <Instruction contained>\n          <Translate\n            pt={\n              <>\n                Você é o impostor e não sabe a palavra-secreta. Os outros jogadores escolheram as cartas\n                abaixo que supostamente combinam com a palavra-secreta.\n              </>\n            }\n            en={\n              <>\n                You are the impostor and don't know the secret clue. The other players played the cards below\n                and they all supposed to match the secret clue.\n              </>\n            }\n          />\n        </Instruction>\n\n        <Image.PreviewGroup>\n          <ul className=\"d-table\">\n            {track.data.table.map((cardId: ImageCardId, index: number) => {\n              const bot = BOTS_LIST[index];\n              return (\n                <div className=\"d-table__player-entry\" key={`table-focus-${cardId}`}>\n                  <ImageBlurButtonContainer\n                    cardId={cardId}\n                    className={clsx(\n                      'd-table__card',\n                      user?.data?.value === cardId && 'd-table__card--selected'\n                    )}\n                  >\n                    <ImageCard\n                      key={`table-focus-${cardId}`}\n                      imageId={cardId}\n                      cardWidth={cardWidth * 0.6}\n                      className=\"d-table__image-card\"\n                    />\n                  </ImageBlurButtonContainer>\n\n                  <div className=\"d-table__player-info\">\n                    <Avatar id={bot.avatarId} className=\"d-table__player-avatar\" size=\"default\" />\n                    <span\n                      className=\"d-table__player-bar\"\n                      style={{ backgroundColor: AVATARS[bot.avatarId].color }}\n                    />\n                    <span className=\"d-table__player-name\">\n                      {bot.name}, {AVATARS[bot.avatarId].description[language]}\n                    </span>\n                  </div>\n                </div>\n              );\n            })}\n          </ul>\n        </Image.PreviewGroup>\n\n        <Instruction contained>\n          <Translate\n            pt={<>Qual das suas cartas você usaria para passar despercebido?</>}\n            en={<>Which card in your hand would play so you can blend in with the others?</>}\n          />\n        </Instruction>\n\n        <Image.PreviewGroup>\n          <Space className=\"space-container\">\n            {track.data.cards.map((cardId: ImageCardId) => {\n              return (\n                <div className=\"d-table__player-entry\" key={`table-focus-${cardId}`}>\n                  <ImageBlurButtonContainer\n                    cardId={cardId}\n                    className={clsx(\n                      'd-table__card',\n                      user?.data?.value === cardId && 'd-table__card--selected'\n                    )}\n                  >\n                    <ImageCard\n                      key={`table-focus-${cardId}`}\n                      imageId={cardId}\n                      cardWidth={cardWidth * 0.75}\n                      className=\"d-table__image-card\"\n                    />\n                  </ImageBlurButtonContainer>\n\n                  <Space className=\"space-container\">\n                    <Button\n                      shape=\"round\"\n                      type=\"primary\"\n                      disabled={user.ready}\n                      loading={isLoading}\n                      onClick={() =>\n                        onSubmitAnswer({\n                          data: { value: cardId },\n                        })\n                      }\n                    >\n                      <Translate pt=\"Selecionar\" en=\"Select\" />\n                    </Button>\n                  </Space>\n                </div>\n              );\n            })}\n          </Space>\n        </Image.PreviewGroup>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Detetives Imaginativos', en: 'Detective Agency' }} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Dentre as cartas abaixo, uma delas é do impostor! Você sabe qual é?\n              <br />\n              Selecione a carta que você acha <strong>NÃO</strong> combina com as outras duas.\n            </>\n          }\n          en={\n            <>\n              Among the cards below, one belongs to the impostor! Do you know which one?\n              <br />\n              Select the card that does <strong>NOT</strong> match the others.\n            </>\n          }\n        />\n      </Instruction>\n\n      <Image.PreviewGroup>\n        <ul className=\"d-table\">\n          {track.data.cards.map((cardId: ImageCardId, index: number) => {\n            const bot = BOTS_LIST[index];\n            return (\n              <div className=\"d-table__player-entry\" key={`table-focus-${cardId}`}>\n                <ImageBlurButtonContainer\n                  cardId={cardId}\n                  className={clsx('d-table__card', user?.data?.value === cardId && 'd-table__card--selected')}\n                >\n                  <ImageCard\n                    key={`table-focus-${cardId}`}\n                    imageId={cardId}\n                    cardWidth={cardWidth}\n                    className=\"d-table__image-card\"\n                  />\n                </ImageBlurButtonContainer>\n\n                <div className=\"d-table__player-info\">\n                  <Avatar id={bot.avatarId} className=\"d-table__player-avatar\" size=\"default\" />\n                  <span\n                    className=\"d-table__player-bar\"\n                    style={{ backgroundColor: AVATARS[bot.avatarId].color }}\n                  />\n                  <span className=\"d-table__player-name\">\n                    {bot.name}, {AVATARS[bot.avatarId].description[language]}\n                  </span>\n                </div>\n                <Space className=\"space-container\">\n                  <Button\n                    shape=\"round\"\n                    type=\"primary\"\n                    disabled={user.ready}\n                    loading={isLoading}\n                    onClick={() =>\n                      onSubmitAnswer({\n                        data: { value: cardId },\n                      })\n                    }\n                  >\n                    <Translate pt=\"Esse é o impostor\" en=\"This is the impostor\" />\n                  </Button>\n                </Space>\n              </div>\n            );\n          })}\n        </ul>\n      </Image.PreviewGroup>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\n// AntDesign Resources\nimport { Space } from 'antd';\n// Hooks\nimport { useMock } from 'hooks/useMock';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { SkiingIcon } from 'icons/SkiingIcon';\nimport { IconAvatar } from 'components/avatars/IconAvatar';\nimport { TransparentButton } from 'components/buttons';\nimport { SnowHillIcon } from 'icons/SnowHillIcon';\nimport clsx from 'clsx';\n\nexport const TrackDilemaDosEsquiadores = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection([track.data.dilemma.left, track.data.dilemma.right]));\n  });\n\n  const [mouseX, setMouseX] = useState<number | null>(null);\n  const [direction, setDirection] = useState<'left' | 'right'>('left');\n\n  useEffect(() => {\n    const handleMouseMove = (e: MouseEvent) => {\n      setMouseX(e.clientX);\n    };\n\n    window.addEventListener('mousemove', handleMouseMove);\n\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, []);\n\n  useEffect(() => {\n    // Check if the mouse is on the left or right side of the screen\n    if (mouseX !== null) {\n      const screenWidth = window.innerWidth;\n      const threshold = screenWidth / 2;\n\n      if (mouseX <= threshold) {\n        setDirection('left');\n      } else {\n        setDirection('right');\n      }\n    }\n  }, [mouseX]);\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Dilema do Esquiador', en: \"Skiers' Dilemma\" }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <Instruction contained>\n          <Translate\n            pt={\n              <>\n                Você tem os pensamentos mais filosóficos quando você está esquiando ladeira abaixo.\n                <br />\n                Selecione a opção apropriada para a questão séria:\n              </>\n            }\n            en={\n              <>\n                You have the most philosophical shower thoughts while skiing downhill.\n                <br />\n                Select the best option below:\n              </>\n            }\n          />\n        </Instruction>\n\n        <Space className=\"space-container\" direction=\"vertical\">\n          <div className=\"dd-animated-skiier\">\n            <IconAvatar\n              icon={<SkiingIcon />}\n              size={84}\n              className={clsx('dd-animated-skiier__skiier', `dd-animated-skiier__skiier--${direction}`)}\n            />\n          </div>\n          <Card header={translate('Dica', 'Clue')} color=\"red\">\n            {track.data.dilemma.prompt}\n          </Card>\n\n          <Space className=\"space-container\">\n            <div className=\"dd-buttons\">\n              <TransparentButton\n                onClick={() => onSelect(track.data.dilemma.left)}\n                disabled={user.ready || isLoading}\n                className=\"dd-button\"\n              >\n                <span className=\"dd-button__hill dd-button__hill--left\">\n                  <IconAvatar icon={<SnowHillIcon />} size={64} />\n                </span>\n                <span className=\"dd-button__text\">{track.data.dilemma.left}</span>\n              </TransparentButton>\n              <TransparentButton\n                onClick={() => onSelect(track.data.dilemma.right)}\n                disabled={user.ready || isLoading}\n                className=\"dd-button\"\n              >\n                <span className=\"dd-button__hill\">\n                  <IconAvatar icon={<SnowHillIcon />} size={64} />\n                </span>\n                <span className=\"dd-button__text\">{track.data.dilemma.right}</span>\n              </TransparentButton>\n            </div>\n          </Space>\n        </Space>\n      </Space>\n    </>\n  );\n};\n","import { useState } from 'react';\n// AntDesign Resources\nimport { Button, Input, Space } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockText } from '../../utils/mock';\n// Components\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Instruction, TextHighlight } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackEspiaoEntreNos = ({ track, round, onSubmitAnswer, user }: TrackProps) => {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n  const [answer, setAnswer] = useState('');\n\n  const onSubmit = () => {\n    if (answer.length > 1) {\n      onSubmitAnswer({\n        data: { value: answer },\n      });\n    }\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSubmitAnswer({\n      data: { value: mockText() },\n    });\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: '', en: '' }} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Você está em um(a) <TextHighlight>{track.data.location.name}</TextHighlight>. Você é um(a){' '}\n              <TextHighlight>{track.data.location.roles[track.data.roleIndex]}</TextHighlight>.<br />\n              Agora, responda à pergunta abaixo com uma resposta simples.\n            </>\n          }\n          en={\n            <>\n              You are at/in/on a <TextHighlight>{track.data.location.name}</TextHighlight>. You are a{' '}\n              <TextHighlight>{track.data.location.roles[track.data.roleIndex]}</TextHighlight>.<br />\n              Now, simply answer the following question.\n            </>\n          }\n        />\n      </Instruction>\n\n      <Space className=\"space-container\">\n        <Card>{track.data.question}</Card>\n      </Space>\n\n      <Instruction contained>\n        <Translate\n          pt={<>Responda à pergunta abaixo com uma resposta simples.</>}\n          en={<>Answer the prompt below with a simple answer.</>}\n        />\n      </Instruction>\n\n      <Space className=\"space-container\" direction=\"vertical\">\n        <Input\n          onChange={(e) => setAnswer(e.target.value)}\n          placeholder={translate('Escreva aqui', 'Answer here')}\n          onPressEnter={onSubmit}\n          disabled={isLoading || user.ready}\n        />\n        <Button\n          shape=\"round\"\n          type=\"primary\"\n          disabled={user.ready || answer.length < 2}\n          loading={isLoading}\n          onClick={onSubmit}\n        >\n          <Translate pt=\"Selecionar\" en=\"Select\" />\n        </Button>\n      </Space>\n    </>\n  );\n};\n","// AntDesign Resources\nimport { Avatar, Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../../utils/mock';\nimport { LETTERS } from 'utils/constants';\n// Components\nimport { DualTranslate, Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { EmojiCard } from 'components/cards/EmojiCard';\nimport { TransparentButton } from 'components/buttons';\n\nconst reference = [\n  {\n    id: '3',\n    text: {\n      pt: 'Vish',\n      en: 'Oh...',\n    },\n  },\n  {\n    id: '15',\n    text: {\n      pt: 'Quê?',\n      en: 'What?',\n    },\n  },\n  {\n    id: '7',\n    text: {\n      pt: 'Nó!',\n      en: 'Wow...',\n    },\n  },\n];\n\nexport const TrackFileiraDeFatos = ({ track, round, onSubmitAnswer, user, players }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const width = useCardWidth(8, {\n    gap: 16,\n    minWidth: 100,\n    maxWidth: 200,\n    margin: 32,\n  });\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(track.data.scenarios, 'text'));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Fileira de Fatos', en: 'Facts Lineup' }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <Instruction contained>\n          <Translate pt=\"Qual das situações é a pior?\" en=\"Which of the following situations is the worst?\" />\n        </Instruction>\n\n        <Space className=\"space-container\">\n          {track.data.scenarios.map((entry: TextCard, index: number) => (\n            <TransparentButton\n              key={`position-${entry.text}`}\n              style={{ width: `${width}px` }}\n              disabled={isLoading}\n              onClick={() => onSelect(entry.text)}\n            >\n              <div className=\"scenario\">\n                <Avatar>{LETTERS[index]}</Avatar>\n                <div className=\"scenario__tagline\">\n                  <DualTranslate>{reference[index].text}</DualTranslate>\n                </div>\n                <EmojiCard id={reference[index].id} className=\"scenario__emoji\" />\n                {entry && <div className=\"scenario__card\">{entry.text}</div>}\n              </div>\n            </TransparentButton>\n          ))}\n        </Space>\n      </Space>\n    </>\n  );\n};\n\n// type ChevronProps = {\n//   player: GamePlayer;\n//   value: number;\n//   reveal?: boolean;\n// };\n\n// export function Chevron({ player, value, reveal }: ChevronProps) {\n//   const color = getAvatarColorById(player.avatarId);\n//   return (\n//     <div className=\"ff-chevron\">\n//       <ChevronImage color={color}>\n//         <span className=\"ff-chevron__value\">{reveal ? value : '?'}</span>\n//       </ChevronImage>\n//       <div className=\"ff-chevron__name\">{player.name}</div>\n//     </div>\n//   );\n// }\n\n// type ChevronImageProps = {\n//   children: ReactNode;\n//   color: string;\n// };\n\n// function ChevronImage({ children, color }: ChevronImageProps) {\n//   return (\n//     <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n//       <path\n//         fill={color}\n//         d=\"M115.8 461.5L244 501.56a8.52 8.52 0 009.8-3.65L400.91 260.5a8.58 8.58 0 000-9L253.82 14.09a8.54 8.54 0 00-9.8-3.66L115.8 50.5a8.54 8.54 0 00-4.89 12.35l106.7 189a8.55 8.55 0 010 8.4l-106.7 189a8.54 8.54 0 004.89 12.35\"\n//       ></path>\n//       <path\n//         fill=\"#000000\"\n//         opacity=\"0.5\"\n//         d=\"M142.94 101.4l133.68-41.56a8.53 8.53 0 015.69.22l-28.49-46a8.51 8.51 0 00-9.8-3.65L115.8 50.5a8.54 8.54 0 00-4.89 12.35L137 109a8.52 8.52 0 016-7.6\"\n//       ></path>\n//       <path\n//         fill=\"#000000\"\n//         d=\"M246.57 512a18.66 18.66 0 01-5.55-.85L112.8 471.08a18.58 18.58 0 01-10.64-26.87l37.25-66a10 10 0 1117.49 9.88l-36.33 64.33 125.33 39.21L391.88 256 245.9 20.37 120.57 59.54l105.79 187.32a18.71 18.71 0 010 18.28l-40.26 71.29a10 10 0 01-17.49-9.88L208.45 256 102.16 67.79a18.58 18.58 0 0110.64-26.87L241 .85a18.58 18.58 0 0121.34 8l147.1 237.36a18.49 18.49 0 010 19.58L262.36 503.2a18.58 18.58 0 01-15.79 8.8z\"\n//       ></path>\n//       <foreignObject x=\"241.18\" y=\"219.18\" width=\"121.5\" height=\"65.89\">\n//         {children}\n//       </foreignObject>\n//     </svg>\n//   );\n// }\n","// AntDesign Resources\nimport { Button, Image, Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { Card } from 'components/cards';\nimport { CardHighlight } from 'components/metrics/CardHighlight';\nimport { ImageBlurButtonContainer, ImageCard } from 'components/image-cards';\n\nexport const TrackGaleriaDeSonhos = ({ track, round, onSubmitAnswer, user }: TrackProps) => {\n  const cardWidth = useCardWidth(8, { gap: 8, minWidth: 150, maxWidth: 350, margin: 8 });\n  const { isLoading } = useLoading();\n  const { translate } = useLanguage();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(track.data.cards));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Galeria dos Sonhos', en: 'Dream Gallery' }} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Com o tema abaixo, qual <CardHighlight>carta-sonho</CardHighlight> é a mais provável dos outros\n              jogadores também visitarem?\n            </>\n          }\n          en={\n            <>\n              With the theme below, which <CardHighlight>Dream Card</CardHighlight> best relates to it?\n            </>\n          }\n        />\n      </Instruction>\n\n      <Card header={translate('Tema', 'Theme')} color=\"orange\">\n        {track.data.theme.text}\n      </Card>\n\n      <Image.PreviewGroup>\n        <Space className=\"space-container\">\n          {track.data.cards.map((cardId: ImageCardId) => {\n            return (\n              <Space className=\"space-container\" direction=\"vertical\">\n                <ImageBlurButtonContainer cardId={cardId}>\n                  <ImageCard imageId={cardId} cardWidth={cardWidth} />\n                </ImageBlurButtonContainer>\n                <Button\n                  shape=\"round\"\n                  type=\"primary\"\n                  disabled={user.ready}\n                  loading={isLoading}\n                  onClick={() => onSelect(cardId)}\n                >\n                  <Translate pt=\"Selecionar\" en=\"Select\" />\n                </Button>\n              </Space>\n            );\n          })}\n        </Space>\n      </Image.PreviewGroup>\n    </>\n  );\n};\n","// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { GroupQuestionCard } from 'components/cards/GroupQuestionCard';\n\nexport const TrackMenteColetiva = ({ track, round, onSubmitAnswer, user }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const onSubmit = (answer: string) => {\n    onSubmitAnswer({\n      data: { value: answer },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSubmit(mockSelection(track.data.options));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Mente Coletiva', en: 'Herd Mind' }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"space-container contained margin\">\n        <Instruction contained>\n          <Translate\n            pt=\"Qual das respostas provavelmente viria na sua cabeça primeiro ao ver a pergunta?\"\n            en=\"Which of the answers would probably come to your mind first when you see the question?\"\n          />\n        </Instruction>\n\n        <Space className=\"space-container\">\n          <Card className=\"m-question-wrapper\" color=\"yellow\">\n            <GroupQuestionCard question={track.data.question} overrideNumber={2} />\n          </Card>\n        </Space>\n\n        <Space className=\"space-container\" wrap>\n          {track.data.options.map((option: string) => (\n            <Button key={option} onClick={() => onSubmit(option)} size=\"large\" disabled={isLoading}>\n              {option}\n            </Button>\n          ))}\n        </Space>\n      </Space>\n    </>\n  );\n};\n","// Components\nimport { ImageCard } from 'components/image-cards';\nimport { DualTranslate, Translate } from 'components/language';\n\ntype CandidateProps = {\n  head: DatingCandidateImageCard;\n  body: DatingCandidateImageCard;\n  interest: DatingCandidateCard;\n  need: DatingCandidateCard;\n  funFact: DatingCandidateCard;\n};\n\nexport const Candidate = ({ head, body, interest, need, funFact }: CandidateProps) => {\n  return (\n    <div className=\"noa-candidate\">\n      <div className=\"noa-candidate__image\">\n        <div className=\"noa-candidate__text\">\n          <DualTranslate>{head.name}</DualTranslate>\n        </div>\n        <ImageCard cardWidth={100} imageId={head.id} preview={false} />\n        <ImageCard cardWidth={100} imageId={body.id} preview={false} />\n        <div className=\"noa-candidate__text\">\n          <DualTranslate>{body.name}</DualTranslate>\n        </div>\n      </div>\n      <div className=\"noa-candidate__info\">\n        <div className=\"noa-candidate__info-entry\">\n          <div className=\"noa-candidate__info-label\">\n            <Translate pt=\"Curto/Quero\" en=\"I enjoy/wish to\" />\n          </div>\n          {interest.text}\n        </div>\n        <div className=\"noa-candidate__info-entry\">\n          <div className=\"noa-candidate__info-label\">\n            <Translate pt=\"Quero alguém que\" en=\"I want someone who\" />\n          </div>\n          {need.text}\n        </div>\n        <div className=\"noa-candidate__info-entry\">\n          <div className=\"noa-candidate__info-label\">\n            <Translate pt=\"Uma coisa sobre mim\" en=\"Something about me\" />\n          </div>\n          {funFact.text}\n        </div>\n      </div>\n    </div>\n  );\n};\n","// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { Candidate } from '../Candidate';\n\nexport const TrackNamoroOuAmizade = ({ track, round, onSubmitAnswer, user }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(track.data.heads, 'id'));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Namoro ou Amizade?', en: 'Love or Friendship?' }} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Dos <strong>3 partidos</strong> abaixo, qual é o melhor?\n            </>\n          }\n          en={\n            <>\n              From <strong>3 candidates</strong> below, which one is the best one?\n            </>\n          }\n        />\n      </Instruction>\n\n      <div className=\"noa-candidates\">\n        {track.data.heads.map((head: DatingCandidateImageCard, index: number) => {\n          return (\n            <Space className=\"space-container\" direction=\"vertical\">\n              <Candidate\n                head={head}\n                body={track.data.bodies[index]}\n                interest={track.data.interests[index]}\n                need={track.data.needs[index]}\n                funFact={track.data.funFacts[index]}\n              />\n              <Button\n                onClick={() => onSelect(head.id)}\n                disabled={user.ready || isLoading}\n                className=\"noa-button\"\n                key={head.id}\n                type=\"primary\"\n                shape=\"round\"\n              >\n                <Translate pt=\"Esse\" en=\"This one\" />\n              </Button>\n            </Space>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n","// AntDesign Resources\nimport { Avatar, Button, Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { TransparentButton } from 'components/buttons';\nimport { HouseCard } from 'games/na-rua-do-medo/components/HouseCard';\nimport { StreetIcon } from 'icons/StreetIcon';\nimport { IconAvatar } from 'components/avatars';\n\nexport const TrackNaRuaDoMedo = ({ track, round, onSubmitAnswer, user }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(\n      track.variant === 'kids'\n        ? mockSelection(['0', '1'])\n        : mockSelection(track.data.options.map((h: NCard) => h.id))\n    );\n  });\n\n  if (track.variant === 'kids') {\n    return (\n      <>\n        <MinigameTitle title={{ pt: 'Na Rua do Medo', en: 'Fear Street' }} />\n        <Instruction contained>\n          <Translate\n            pt={\n              <>\n                Estamos indo de porta em porta buscar doces...\n                <br />\n                Mas qual rua devemos ir? A rua com mais doces? A rua com menos medo?\n              </>\n            }\n            en={\n              <>\n                We're trick-or-treating...\n                <br />\n                Which street should we hit first? The one with more candy? The one with less horror?\n              </>\n            }\n          />\n        </Instruction>\n\n        <Space className=\"space-container\" direction=\"vertical\">\n          <TransparentButton\n            className=\"n-street\"\n            disabled={user.ready || isLoading}\n            onClick={() => onSelect('0')}\n          >\n            <Space direction=\"vertical\" align=\"center\" className=\"margin\">\n              <Avatar style={{ backgroundColor: 'brown' }}>A</Avatar>\n              <IconAvatar icon={<StreetIcon />} size=\"large\" />\n            </Space>\n            <div className=\"n-street__houses\">\n              {track.data.options['0'].map((house: NCard) => (\n                <HouseCard key={`A-${house.id}`} card={house} candyLeftover={0} preview={false} />\n              ))}\n            </div>\n          </TransparentButton>\n          <TransparentButton\n            className=\"n-street\"\n            disabled={user.ready || isLoading}\n            onClick={() => onSelect('1')}\n          >\n            <Space direction=\"vertical\" align=\"center\" className=\"margin\">\n              <Avatar style={{ backgroundColor: 'dodgerblue' }}>B</Avatar>\n              <IconAvatar icon={<StreetIcon />} size=\"large\" />\n            </Space>\n            <div className=\"n-street__houses\">\n              {track.data.options['1'].map((house: NCard) => (\n                <HouseCard key={`B-${house.id}`} card={house} candyLeftover={0} preview={false} />\n              ))}\n            </div>\n          </TransparentButton>\n        </Space>\n      </>\n    );\n  }\n\n  // TODO: This variant does not exist yet\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Na Rua do Medo', en: 'Fear Street' }} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Você estava tranquilo em casa e <strong>6 crianças</strong> apareceram na sua porta. Qual das\n              opções você escolheria para dar pra eles? Assustar ou guloseimas?\n            </>\n          }\n          en={\n            <>\n              You are hanging out at home and <strong>6 kids</strong> showed up at our door. Which of the\n              options do you choose to give to them? Scare 'em or give treats?\n            </>\n          }\n        />\n      </Instruction>\n\n      <Space className=\"space-container\">\n        {track.data.options.map((house: NCard) => (\n          <Space direction=\"vertical\" key={house.id} className=\"space-container n-street-house\">\n            <HouseCard card={house} candyLeftover={0} preview={false} />\n            <Button\n              shape=\"round\"\n              type=\"primary\"\n              disabled={user.ready || isLoading}\n              onClick={() => onSelect(house.id)}\n              loading={isLoading}\n            >\n              <Translate pt=\"Selecionar\" en=\"Select\" />\n            </Button>\n          </Space>\n        ))}\n      </Space>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport clsx from 'clsx';\n// AntDesign Resources\nimport { ArrowLeftOutlined, ArrowRightOutlined, MinusOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../../utils/mock';\nimport { getColorModifier } from 'games/onda-telepatica/utils/helpers';\n// Components\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Instruction, TextHighlight } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackOndaTelepatica = ({ track, round, onSubmitAnswer, user, players }: TrackProps) => {\n  const { isLoading } = useLoading();\n  const [position, setPosition] = useState(0);\n\n  const onSelect = (value: string) => {\n    if (!isLoading && !user.ready) {\n      onSubmitAnswer({\n        data: { value },\n      });\n    }\n  };\n\n  // // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(['left', 'center', 'right']));\n  });\n\n  const cardSideClass = 'o-card__side';\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Onda Telepática', en: 'Telepathic Waves' }} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Com a carta de as duas ideias opostas e a dica abaixo, você acha que o Medidor de Ondas\n              Telepáticas apontaria para a <TextHighlight>Esquerda</TextHighlight>,{' '}\n              <TextHighlight>Centro</TextHighlight> ou <TextHighlight>Direita</TextHighlight>?\n            </>\n          }\n          en={\n            <>\n              With the card of the two opposing ideas and the clue below, do you think the Wavelength\n              Measuring device would point to the <TextHighlight>Left</TextHighlight>,{' '}\n              <TextHighlight>Center</TextHighlight>, or <TextHighlight>Right</TextHighlight>?\n            </>\n          }\n        />\n      </Instruction>\n\n      <Card>{track.data.option.value}</Card>\n\n      <div className=\"o-simple-dial\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 669.93 340\" width=\"40vw\">\n          <path\n            fill=\"#181d44\"\n            d=\"M669.88 329.88a440.53 440.53 0 00-27.31-127.68C591.16 83.26 472.81 0 335 0h-.22C198.2.07 80.75 81.88 28.66 199.16A439.25 439.25 0 000 332a7.67 7.67 0 007.68 8h654.63a7.7 7.7 0 007.21-5 7.78 7.78 0 00.41-1.68l-.05-3.44z\"\n          ></path>\n          <path\n            fill=\"#b8b2a6\"\n            d=\"M119.67 121.48a303.5 303.5 0 00-61.93 91.22 401 401 0 00-25.59 120 7 7 0 00.43 2.75A6.86 6.86 0 0039 340h295.86L181.06 73.61a300.5 300.5 0 00-61.39 47.87z\"\n            className=\"o-simple-dial__clickable\"\n            onClick={() => onSelect('left')}\n            onMouseEnter={() => setPosition(-1)}\n          ></path>\n\n          <path\n            fill=\"#c2acc7\"\n            d=\"M630.39 330.85A402.06 402.06 0 00606 215.46 302.44 302.44 0 00487.05 77L335.19 340h288.44a6.88 6.88 0 006.44-4.52 7.56 7.56 0 00.36-1.51c0-1.04-.02-2.08-.04-3.12z\"\n            className=\"o-simple-dial__clickable\"\n            onClick={() => onSelect('right')}\n            onMouseEnter={() => setPosition(1)}\n          ></path>\n          <path\n            fill=\"#96a6a8\"\n            d=\"M331.32 32.7h-.2a295 295 0 00-150.06 40.91L334.86 340h.33L487.05 77a295 295 0 00-155.73-44.3z\"\n            className=\"o-simple-dial__clickable\"\n            onClick={() => onSelect('center')}\n            onMouseEnter={() => setPosition(0)}\n          ></path>\n\n          <path\n            fill=\"#ff0004\"\n            d=\"M336.46 24.24a1.5 1.5 0 0 0-3 0L326.65 340a1.48 1.48 0 0 0 .45 1.1l6.81 6.73a1.51 1.51 0 0 0 2.11 0l6.81-6.73a1.48 1.48 0 0 0 .45-1.1Z\"\n            className={clsx('o-simple-dial__pointer', `o-simple-dial__pointer--p${position}`)}\n          ></path>\n        </svg>\n      </div>\n\n      <div className={clsx('o-card')}>\n        <div\n          className={clsx(\n            cardSideClass,\n            `${cardSideClass}--left`,\n            `${cardSideClass}--L${getColorModifier(track.data.card.left)}`\n          )}\n        >\n          <span className=\"o-card__arrow\">\n            <ArrowLeftOutlined /> <MinusOutlined /> <MinusOutlined />\n          </span>\n          <span className=\"o-card__text\">{track.data.card.left}</span>\n        </div>\n        <div\n          className={clsx(\n            cardSideClass,\n            `${cardSideClass}--right`,\n            `${cardSideClass}--R${getColorModifier(track.data.card.right)}`\n          )}\n        >\n          <span className=\"o-card__arrow\">\n            <MinusOutlined /> <MinusOutlined /> <ArrowRightOutlined />\n          </span>\n          <span className=\"o-card__text\">{track.data.card.right}</span>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport function SimpleDial() {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 669.93 340\">\n      <path\n        fill=\"#181d44\"\n        d=\"M669.88 329.88a440.53 440.53 0 00-27.31-127.68C591.16 83.26 472.81 0 335 0h-.22C198.2.07 80.75 81.88 28.66 199.16A439.25 439.25 0 000 332a7.67 7.67 0 007.68 8h654.63a7.7 7.7 0 007.21-5 7.78 7.78 0 00.41-1.68l-.05-3.44z\"\n      ></path>\n      <path\n        fill=\"#b8b2a6\"\n        d=\"M119.67 121.48a303.5 303.5 0 00-61.93 91.22 401 401 0 00-25.59 120 7 7 0 00.43 2.75A6.86 6.86 0 0039 340h295.86L181.06 73.61a300.5 300.5 0 00-61.39 47.87z\"\n      ></path>\n      <path\n        fill=\"#96a6a8\"\n        d=\"M331.32 32.7h-.2a295 295 0 00-150.06 40.91L334.86 340h.33L487.05 77a295 295 0 00-155.73-44.3z\"\n      ></path>\n      <path\n        fill=\"#c2acc7\"\n        d=\"M630.39 330.85A402.06 402.06 0 00606 215.46 302.44 302.44 0 00487.05 77L335.19 340h288.44a6.88 6.88 0 006.44-4.52 7.56 7.56 0 00.36-1.51c0-1.04-.02-2.08-.04-3.12z\"\n      ></path>\n    </svg>\n  );\n}\n","// AntDesign Resources\nimport { Space } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { TransparentButton } from 'components/buttons';\nimport { CharacterCard } from 'components/cards/CharacterCard';\n\nexport const TrackPalhetaDeCores = ({ track, round, onSubmitAnswer, user }: TrackProps) => {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n\n  const onSelect = (color: string) => {\n    onSubmitAnswer({\n      data: { value: color },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(track.data.palette));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Palheta de Cores', en: 'Color Palette' }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <Instruction contained>\n          <Translate\n            pt={<>Selecione a cor que melhor representa o personagem abaixo!</>}\n            en={<>Select the color that best represents the character below!</>}\n          />\n        </Instruction>\n\n        <Card header={translate('Dica', 'Clue')} color=\"red\">\n          <CharacterCard character={track.data.card} className=\"grayscale\" size={200} />\n        </Card>\n\n        <Space className=\"space-container k-palette\" wrap>\n          {track.data.palette.map((color: string) => {\n            return (\n              <TransparentButton\n                onClick={() => onSelect(color)}\n                className=\"k-swatch-button\"\n                disabled={user.read || isLoading}\n                key={color}\n              >\n                <SplatterSVG color={color} />\n              </TransparentButton>\n            );\n          })}\n        </Space>\n      </Space>\n    </>\n  );\n};\n\ntype SplatterSVGProps = {\n  color: string;\n} & React.SVGProps<SVGSVGElement>;\n\nexport function SplatterSVG({ color, ...rest }: SplatterSVGProps) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 494.11 511.04\" {...rest}>\n      <path\n        fill={color}\n        d=\"M228.54 0h35.93a4.71 4.71 0 001.3.7c27.26 5 48.92 19.17 65.61 41 13.89 18.12 23 38.05 20.86 61.68-.63 6.91-2.09 13.82-2 20.71.12 7.66 6.12 12.85 13.67 11.74a42 42 0 0014.62-5.55c17.16-10 35.31-15.24 55.25-12.26 27.14 4 51.12 26.19 58 53.26 7.35 29-3 59.73-25.55 76.79-14.57 11-31.25 14.29-49 15.54-14.61 1-24.33 10.1-29.58 23.39-5.11 12.92-2.78 24.76 7.31 34.73 4.49 4.44 9 8.85 13.5 13.3 17.49 17.35 28.24 38.14 30.44 62.73 2.4 26.77-5.22 50.77-21.48 72.23-44 58-133.58 54-171.09-8.39-9.08-15.11-15-32.1-22.78-48-3.63-7.38-7.36-15.08-12.73-21.14-12.88-14.54-34-16.34-53.09-6-12.18 6.57-20.6 17.13-29.76 27A73.21 73.21 0 014.9 387.52C2.41 380.4 1.59 372.7 0 365.28v-4c.34-2.26.82-4.52 1-6.8 2.2-27.35 22.3-52.14 48.79-59.39 10.7-2.92 21.71-4.67 32.5-7.28 16.67-4 28.74-17 30.45-32.32 1.95-17.45-6.31-33.26-21.72-41.45-4.4-2.33-8.91-4.44-13.31-6.77-19.58-10.38-28-26.24-24.72-46.46 3.2-19.73 19-33.44 38.86-34.2 10.44-.39 19.85 3.32 29.55 6.12 14.11 4.07 25-.16 22.21-19.54a84 84 0 011-31.1c10.26-42.42 36.89-69.48 79.33-80.57 1.56-.44 3.12-1 4.6-1.52z\"\n      ></path>\n    </svg>\n  );\n}\n","import { ReactNode } from 'react';\nimport clsx from 'clsx';\n// AntDesign Resources\nimport { Button } from 'antd';\nimport { CheckCircleFilled, DislikeFilled, LikeFilled } from '@ant-design/icons';\n// Components\nimport { Avatar } from 'components/avatars';\n// Sass\nimport './SocialProfile.scss';\nimport { Translate } from 'components/language';\n\ntype SocialProfileProps = {\n  /**\n   * The avatar id to be used.\n   */\n  avatarId: string;\n  /**\n   * The name of the user.\n   */\n  name: ReactNode;\n  /**\n   * The handle of the user.\n   */\n  handle: ReactNode;\n  /**\n   * Whether the user is verified or not.\n   */\n  verified?: boolean;\n  /**\n   * The class name to be appended to the container.\n   */\n  className?: string;\n};\n\n/**\n * The social profile component that can be used a twitter or an instagram profile.\n */\nexport function SocialProfile({ avatarId, name, handle, verified, className }: SocialProfileProps) {\n  return (\n    <div className={clsx('profile', className)}>\n      <Avatar id={avatarId} size=\"large\" className=\"profile__avatar\" />\n      <span className=\"profile__name\">\n        {name} {verified && <CheckCircleFilled style={{ color: 'dodgerBlue' }} />}\n      </span>\n      <span className=\"profile__handle\">{handle}</span>\n    </div>\n  );\n}\n\ntype TweetProps = SocialProfileProps & {\n  /**\n   * The content of the tweet.\n   */\n  children: ReactNode;\n  /**\n   * The function to be called when the like button is clicked.\n   */\n  onLike?: () => void;\n  /**\n   * The function to be called when the dislike button is clicked.\n   */\n  onDislike?: () => void;\n  /**\n   * Whether the buttons should be disabled or not.\n   */\n  disabled?: boolean;\n};\n\nexport function Tweet({\n  avatarId,\n  name,\n  handle,\n  verified,\n  className,\n  children,\n  onLike,\n  onDislike,\n  disabled,\n}: TweetProps) {\n  return (\n    <div className={clsx('tweet', className)}>\n      <SocialProfile avatarId={avatarId} name={name} handle={handle} verified={verified} />\n      <span className=\"tweet__text\">{children}</span>\n      <div className=\"tweet__buttons\">\n        <Button block icon={<LikeFilled />} onClick={onLike} disabled={disabled}>\n          <Translate pt=\"Curtir\" en=\"Like\" />\n        </Button>\n        <Button block icon={<DislikeFilled />} onClick={onDislike} disabled={disabled}>\n          <Translate pt=\"Não curto\" en=\"Dislike\" />\n        </Button>\n      </div>\n    </div>\n  );\n}\n","// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { Tweet } from 'components/game/SocialProfile';\n\nexport const TrackPolemicaDaVez = ({ track, round, onSubmitAnswer, user }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: number) => {\n    onSubmitAnswer({\n      data: { value: String(value) },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(track.data.options));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Polêmica da Vez', en: \"That's Polemic\" }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <Instruction contained>\n          <Translate\n            pt={\n              <>\n                Observe a twitada abaixo, qual a porcentagem de <strong>curtidas</strong> entre os jogadores\n                você acha que ele ganhou?\n              </>\n            }\n            en={\n              <>\n                Based on the tweet below, what percentage of <strong>likes</strong> among the players do you\n                think it got?\n              </>\n            }\n          />\n        </Instruction>\n\n        <Tweet\n          avatarId=\"A\"\n          name=\"Bob\"\n          handle=\"@imnotarobot\"\n          verified\n          onLike={() => {}}\n          onDislike={() => {}}\n          disabled\n        >\n          {track.data.card.text}\n        </Tweet>\n\n        <Space className=\"space-container\">\n          {track.data.options.map((option: number) => {\n            return (\n              <Button\n                key={`option-${option}`}\n                onClick={() => onSelect(option)}\n                size=\"large\"\n                disabled={isLoading || user.ready}\n                type=\"primary\"\n                shape=\"round\"\n              >\n                {option}%\n              </Button>\n            );\n          })}\n        </Space>\n      </Space>\n    </>\n  );\n};\n","// AntDesign Resources\nimport { Button, Image, Space } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { ImageBlurButtonContainer, ImageCard } from 'components/image-cards';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { Book } from 'games/porta-dos-desesperados/components/Book';\nimport { DoorFrame } from 'components/game/DoorFrame';\nimport { MinigameTitle } from '../MinigameTitle';\n\nexport const TrackPortaDosDesesperados = ({ track, round, onSubmitAnswer, user, players }: TrackProps) => {\n  const doorWidth = useCardWidth(8, { gap: 8, minWidth: 150, maxWidth: 350, margin: 8 });\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(track.data.doors));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Porta dos Desesperados', en: 'Obscure Doors' }} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              A pista está nas páginas do livro.\n              <br />\n              Selecione a porta correta que mais se relaciona com o livro.\n            </>\n          }\n          en={\n            <>\n              The clue is in the pages of the book.\n              <br />\n              Select the door that best fits the clue.\n            </>\n          }\n        />\n      </Instruction>\n      <Image.PreviewGroup>\n        <Space className=\"space-container\">\n          {track.data.doors.map((cardId: ImageCardId) => {\n            return (\n              <Space className=\"space-container\" direction=\"vertical\" key={cardId}>\n                <ImageBlurButtonContainer cardId={cardId}>\n                  <DoorFrame width={doorWidth}>\n                    <ImageCard imageId={cardId} cardWidth={150} />\n                  </DoorFrame>\n                </ImageBlurButtonContainer>\n                <Button\n                  shape=\"round\"\n                  type=\"primary\"\n                  disabled={user.ready}\n                  loading={isLoading}\n                  onClick={() => onSelect(cardId)}\n                >\n                  <Translate pt=\"Esse é a saída\" en=\"This is the exit\" />\n                </Button>\n              </Space>\n            );\n          })}\n        </Space>\n      </Image.PreviewGroup>\n\n      <Space className=\"i-book-container\">\n        <Image.PreviewGroup>\n          <Book>\n            <ImageBlurButtonContainer cardId={track.data.book}>\n              <ImageCard imageId={track.data.book[0]} cardWidth={140} />\n            </ImageBlurButtonContainer>\n            <ImageBlurButtonContainer cardId={track.data.book}>\n              <ImageCard imageId={track.data.book?.[1] || track.data.book[0]} cardWidth={140} />\n            </ImageBlurButtonContainer>\n          </Book>\n        </Image.PreviewGroup>\n      </Space>\n    </>\n  );\n};\n","import clsx from 'clsx';\n// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { Avatar } from 'components/avatars';\nimport { IconAvatar } from 'components/avatars/IconAvatar';\nimport { ShooterIcon } from 'icons/ShooterIcon';\nimport { sortPlayers } from 'utils/helpers';\n\nexport const TrackQuemNaoMata = ({ onSubmitAnswer, user, players }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(Object.keys(players)));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Quem Não Mata, Morre!', en: 'Mortal Standoff' }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <Instruction contained>\n          <Translate\n            pt={\n              <>\n                Estamos num impasse! O primeiro a se mexer leva bala! Em quem você atira primeiro? (Pode ser\n                você mesmo)\n              </>\n            }\n            en={<>A standoff! Who are you going to shoot first? (It could be yourself)</>}\n          />\n        </Instruction>\n\n        <Space className=\"space-container\" wrap>\n          {sortPlayers(players).map((player, index, arr) => {\n            return (\n              <div key={player.id} className=\"qnm-shooter\">\n                <IconAvatar\n                  icon={<ShooterIcon />}\n                  size={48}\n                  className={clsx(index >= arr.length / 2 && 'qnm-shooter__reverse')}\n                />\n                <Button\n                  icon={<Avatar id={player.avatarId} size=\"small\" />}\n                  onClick={() => onSelect(player.id)}\n                  type=\"primary\"\n                  loading={isLoading}\n                  disabled={user.ready}\n                >\n                  {player.name}\n                </Button>\n              </div>\n            );\n          })}\n        </Space>\n      </Space>\n    </>\n  );\n};\n","// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { CanvasSVG } from 'components/canvas';\nimport { MonsterCard } from 'components/cards/MonsterCard';\n\nexport const TrackRetratoFalado = ({ track, round, onSubmitAnswer, user, players }: TrackProps) => {\n  const cardWidth = useCardWidth(5, { minWidth: 250, maxWidth: 270 });\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(track.data.options, 'playerId'));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Retrato Falado Monstruoso', en: 'Monster Sketch' }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <Instruction contained>\n          <Translate\n            pt={\n              <>\n                Dentre as ilustrações abaixo, qual melhor ilustra o mostro?\n                <br />\n                Foi você quem desenhou? Você pode votar em si mesmo se quiser.\n              </>\n            }\n            en={\n              <>\n                Among the illustrations below, which one best illustrates the monster?\n                <br />\n                Is that your drawing? You may vote for yourself if you want.\n              </>\n            }\n          />\n        </Instruction>\n\n        <Space className=\"space-container\">\n          <MonsterCard currentMonster={track.data.card} showControls cardWidth={200} />\n        </Space>\n\n        <div className=\"a-drawings\">\n          {track.data.options.map((entry: PlainObject) => (\n            <div className=\"a-drawings__entry\" key={entry.playerId}>\n              <CanvasSVG drawing={entry.drawing} width={cardWidth} className=\"a-drawing\" />\n\n              <Space className=\"space-container\">\n                <Button\n                  shape=\"round\"\n                  type=\"primary\"\n                  disabled={user.ready}\n                  loading={isLoading}\n                  onClick={() => onSelect(entry.playerId)}\n                >\n                  <Translate pt=\"Selecionar\" en=\"Select\" />\n                </Button>\n              </Space>\n            </div>\n          ))}\n        </div>\n      </Space>\n    </>\n  );\n};\n","// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { CharacterCard } from 'components/cards/CharacterCard';\nimport { ImageBlurButtonContainer } from 'components/image-cards';\n\nexport const TrackSuperCampeonato = ({ track, round, onSubmitAnswer, user, players }: TrackProps) => {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n  const cardWidth = useCardWidth(6, { minWidth: 200, maxWidth: 270 });\n\n  // DEV Mock\n  useMock(() => {\n    onSubmitAnswer({\n      data: { value: mockSelection(track.data.contenders, 'id') },\n    });\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Super Campeonato', en: 'Ultimate Championship' }} />\n      <Instruction contained>\n        <Translate\n          pt={<>É a batalha final, qual desses dois venceria esse desafio?</>}\n          en={<>It's the final showdown, which one of these two would win this challenge?</>}\n        />\n      </Instruction>\n\n      <Space className=\"space-container\">\n        <Card header={translate('Desafio', 'Challenge')} color=\"purple\">\n          {track.data.challenge.text}\n        </Card>\n      </Space>\n\n      <Space className=\"space-container center\">\n        {track.data.contenders.map((contender: WContender, index: number) => {\n          return (\n            <Space direction=\"vertical\" key={contender.id}>\n              <ImageBlurButtonContainer cardId={contender.id}>\n                <CharacterCard\n                  size={cardWidth}\n                  overlayColor={index === 0 ? 'red' : 'blue'}\n                  character={contender}\n                />\n              </ImageBlurButtonContainer>\n              <Button\n                shape=\"round\"\n                type=\"primary\"\n                disabled={user.ready}\n                loading={isLoading}\n                onClick={() =>\n                  onSubmitAnswer({\n                    data: { value: contender.id },\n                  })\n                }\n              >\n                <Translate pt=\"Selecionar\" en=\"Select\" />\n              </Button>\n            </Space>\n          );\n        })}\n      </Space>\n    </>\n  );\n};\n","// Components\nimport { DualTranslate } from 'components/language';\nimport { ImageCard } from 'components/image-cards';\n// Sass\nimport './SuspectCard.scss';\n\ntype SuspectCardProps = {\n  /**\n   * Suspect object\n   */\n  suspect: Suspect;\n  /**\n   * Card width\n   */\n  width: number;\n};\n\nexport function SuspectCard({ suspect, width }: SuspectCardProps) {\n  return (\n    <div className=\"suspect-card\">\n      <ImageCard imageId={suspect.id} className=\"suspect-card__image\" cardWidth={width} preview={false} />\n      <div className=\"suspect-card__name\">\n        <DualTranslate>{suspect.name}</DualTranslate>\n      </div>\n    </div>\n  );\n}\n","// AntDesign Resources\nimport { Button, Image, Space } from 'antd';\n// Hooks\nimport { useMock } from 'hooks/useMock';\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { Card } from 'components/cards';\nimport { IconAvatar } from 'components/avatars/IconAvatar';\nimport { SpeechBubbleAcceptedIcon } from 'icons/SpeechBubbleAcceptedIcon';\nimport { SpeechBubbleDeclinedIcon } from 'icons/SpeechBubbleDeclinedIcon';\nimport { Avatar } from 'components/avatars';\nimport { SpeechBubble } from 'components/text/SpeechBubble';\nimport { SuspectCard } from 'components/cards/SuspectCard';\n\nexport const TrackTestemunhaOcular = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const cardWidth = useCardWidth(8, { gap: 8, minWidth: 150, maxWidth: 350, margin: 8 });\n  const { isLoading } = useLoading();\n  const { translate } = useLanguage();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(track.data.suspects, 'id'));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Testemunha Ocular', en: 'Eye Witness' }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <Instruction contained>\n          <Translate\n            pt=\"Uma testemunha deu essa resposta ao tentar falar quem era o criminoso à polícia.\"\n            en=\"A witness gave this answer when trying to explain who the perpetrator was to the police.\"\n          />\n        </Instruction>\n\n        <Card header={translate('Pergunta', 'Question')} color=\"orange\">\n          {track.data.question.question}\n        </Card>\n\n        <Space className=\"space-container\">\n          <Avatar id=\"A\" size=\"large\" />{' '}\n          <SpeechBubble shadow size=\"small\">\n            {track.data.answer ? (\n              <Translate en=\"YES\" pt=\"SIM\" />\n            ) : (\n              <>\n                <Translate en=\"NO\" pt=\"NÃO\" />\n              </>\n            )}{' '}\n            <IconAvatar\n              size=\"large\"\n              icon={track.data.answer ? <SpeechBubbleAcceptedIcon /> : <SpeechBubbleDeclinedIcon />}\n            />\n          </SpeechBubble>\n        </Space>\n\n        <Instruction contained>\n          <Translate\n            pt=\"Qual dos suspeito você acha que é o criminoso?\"\n            en=\"Which one of them is the perpetrator?\"\n          />\n        </Instruction>\n\n        <Image.PreviewGroup>\n          <Space className=\"space-container\">\n            {track.data.suspects.map((suspect: Suspect) => {\n              return (\n                <Space className=\"space-container\" direction=\"vertical\" key={suspect.id}>\n                  <SuspectCard suspect={suspect} width={cardWidth} />\n\n                  <Button\n                    shape=\"round\"\n                    type=\"primary\"\n                    disabled={user.ready}\n                    loading={isLoading}\n                    onClick={() => onSelect(suspect.id)}\n                  >\n                    <Translate pt=\"Selecionar\" en=\"Select\" />\n                  </Button>\n                </Space>\n              );\n            })}\n          </Space>\n        </Image.PreviewGroup>\n      </Space>\n    </>\n  );\n};\n","// AntDesign Resources\nimport { Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../../utils/mock';\nimport { LETTERS } from 'utils/constants';\n// Components\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { SuggestionEasel } from 'components/game/SuggestionEasel';\nimport { TransparentButton } from 'components/buttons';\n\nexport const TrackUeSoIsso = ({ track, round, onSubmitAnswer, user, players }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const onSubmitClue = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSubmitClue(mockSelection(track.data.cards, 'text'));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Ué, só isso?', en: \"That's it?\" }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <Instruction contained>\n          <Translate\n            pt={\n              <>\n                Jogando <strong>Ué, Só Isso</strong>, os outros jogadores deram as seguintes dicas:\n              </>\n            }\n            en={\n              <>\n                Playing <strong>Ué, Só Isso</strong>, the other players gave the following clues:\n              </>\n            }\n          />\n        </Instruction>\n\n        <Space className=\"space-container\" wrap>\n          {track.data.options.map((option: string) => (\n            <SuggestionEasel id={option} key={option} value={option} />\n          ))}\n        </Space>\n\n        <Instruction contained>\n          <Translate\n            pt=\"Qual você acha que é a resposta correta?\"\n            en=\"Which one do you think is the correct answer?\"\n          />\n        </Instruction>\n\n        <Space className=\"space-container\">\n          {track.data.cards.map((card: TextCard, index: number) => (\n            <TransparentButton key={card.id} disabled={isLoading} onClick={() => onSubmitClue(card.text)}>\n              <Card header={LETTERS[index]} randomColor>\n                {card.text}\n              </Card>\n            </TransparentButton>\n          ))}\n        </Space>\n      </Space>\n    </>\n  );\n};\n","// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useMock } from 'hooks/useMock';\nimport { useLoading } from 'hooks/useLoading';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { MovieCard } from 'components/cards/MovieCard';\nimport { MovieReviewCard } from 'components/cards/MovieReviewCard';\n\nexport const TrackVamosAoCinema = ({ track, round, onSubmitAnswer, user }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection(['A', 'B', 'C', 'D']));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Vamos ao Cinema!', en: 'Movie Night!' }} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Decidimos que o filme que mais se encaixa nas críticas abaixo é o que vamos assistir! Qual filme\n              você quer ver?\n            </>\n          }\n          en={\n            <>\n              We decided that we will watch a movie that best match both reviews bellow! Which movie do you\n              prefer?\n            </>\n          }\n        />\n      </Instruction>\n\n      <Space className=\"space-container\">\n        <MovieReviewCard\n          type=\"positive\"\n          text={track.data.reviews.good.text}\n          highlights={track.data.reviews.good.highlights}\n        />\n\n        <MovieReviewCard\n          type=\"negative\"\n          text={track.data.reviews.bad.text}\n          highlights={track.data.reviews.bad.highlights}\n        />\n      </Space>\n\n      <Space className=\"v-movies\">\n        <Space className=\"space-container\" direction=\"vertical\">\n          <MovieCard movie={track.data.movies[0]} disableSuffix prefixColor=\"Khaki\" />\n          <MovieCard movie={track.data.movies[1]} prefixColor=\"aquamarine\" suffixColor=\"Khaki\" />\n          <MovieCard movie={track.data.movies[2]} disablePrefix suffixColor=\"aquamarine\" />\n        </Space>\n        <div className=\"v-movie-buttons\">\n          <Button\n            shape=\"circle\"\n            size=\"large\"\n            type=\"primary\"\n            style={{ background: 'Khaki', color: 'black' }}\n            onClick={() => onSelect('A')}\n            disabled={isLoading || user.ready}\n          >\n            A\n          </Button>\n          <Button\n            shape=\"circle\"\n            size=\"large\"\n            type=\"primary\"\n            style={{ background: 'aquamarine', color: 'black' }}\n            onClick={() => onSelect('B')}\n            disabled={isLoading || user.ready}\n          >\n            B\n          </Button>\n        </div>\n        <div className=\"v-movie-buttons\">\n          <Button\n            shape=\"circle\"\n            size=\"large\"\n            type=\"primary\"\n            style={{ background: 'LightGreen', color: 'black' }}\n            onClick={() => onSelect('C')}\n            disabled={isLoading || user.ready}\n          >\n            C\n          </Button>\n          <Button\n            shape=\"circle\"\n            size=\"large\"\n            type=\"primary\"\n            style={{ background: 'Plum', color: 'black' }}\n            onClick={() => onSelect('D')}\n            disabled={isLoading || user.ready}\n          >\n            D\n          </Button>\n        </div>\n        <Space className=\"space-container\" direction=\"vertical\">\n          <MovieCard movie={track.data.movies[3]} disableSuffix prefixColor=\"LightGreen\" />\n          <MovieCard movie={track.data.movies[4]} prefixColor=\"Plum\" suffixColor=\"LightGreen\" />\n          <MovieCard movie={track.data.movies[5]} disablePrefix suffixColor=\"Plum\" />\n        </Space>\n      </Space>\n    </>\n  );\n};\n","// AntDesign Resources\nimport { Space } from 'antd';\n// Hooks\nimport { useMock } from 'hooks/useMock';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Card } from 'components/cards';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { TransparentButton } from 'components/buttons';\n\nexport const TrackMegamixBestOfThree = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n\n  const onSelect = (index: number) => {\n    onSubmitAnswer({\n      data: { value: String(index) },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection([0, 1, 2]));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Melhor de 3', en: 'Best of 3' }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <Card header={translate('Pergunta', 'Question')} color=\"orange\">\n          {track.data.card.question}\n        </Card>\n\n        <Space className=\"space-container\">\n          <TransparentButton onClick={() => onSelect(0)} disabled={isLoading || user.ready}>\n            <Card header=\"A\" color=\"red\">\n              {track.data.card.options[0]}\n            </Card>\n          </TransparentButton>\n\n          <TransparentButton onClick={() => onSelect(1)} disabled={isLoading || user.ready}>\n            <Card header=\"B\" color=\"purple\">\n              {track.data.card.options[1]}\n            </Card>\n          </TransparentButton>\n\n          <TransparentButton onClick={() => onSelect(2)} disabled={isLoading || user.ready}>\n            <Card header=\"C\" color=\"blue\">\n              {track.data.card.options[2]}\n            </Card>\n          </TransparentButton>\n        </Space>\n      </Space>\n    </>\n  );\n};\n","// AntDesign Resources\nimport { Space } from 'antd';\n// Hooks\nimport { useMock } from 'hooks/useMock';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\n\nimport { TransparentButton } from 'components/buttons';\n\nexport const TrackMegamixThisThat = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n\n  const onSelect = (index: number) => {\n    onSubmitAnswer({\n      data: { value: String(index) },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection([0, 1]));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Isso ou Aquilo?', en: 'This or That?' }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <Instruction>\n          <Translate pt=\"Selecione qual você prefere:\" en=\"Select which one you prefer:\" />\n        </Instruction>\n\n        <Space className=\"space-container\">\n          <TransparentButton onClick={() => onSelect(0)} disabled={isLoading || user.ready}>\n            <Card header={translate('Isso', 'This')} color=\"red\">\n              {track.data.card.options[0]}\n            </Card>\n          </TransparentButton>\n\n          <TransparentButton onClick={() => onSelect(1)} disabled={isLoading || user.ready}>\n            <Card header={translate('Aquilo', 'That')} color=\"blue\">\n              {track.data.card.options[1]}\n            </Card>\n          </TransparentButton>\n        </Space>\n      </Space>\n    </>\n  );\n};\n","// AntDesign Resources\nimport { Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { DualTranslate, Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { TransparentButton } from 'components/buttons';\nimport { IconAvatar } from 'components/avatars';\nimport { AlienIcon } from 'icons/AlienIcon';\nimport { SpeechBubble } from 'components/text/SpeechBubble';\nimport { SignCard } from 'components/cards/SignCard';\n\nexport const TrackComunicacaoAlienigena = ({ track, round, onSubmitAnswer, user, players }: TrackProps) => {\n  const { isLoading } = useLoading();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(String(mockSelection(track.data.items)));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Comunicação Alienígena', en: 'Alien Communication' }} />\n      <Space direction=\"vertical\" align=\"center\" className=\"contained margin\">\n        <Instruction contained>\n          <Translate\n            pt={\n              <>\n                Um alienígena que não fala nossa língua está pedindo um objeto.\n                <br />\n                Qual o objeto que ele quer?\n              </>\n            }\n            en={\n              <>\n                An alien who doesn't speak our language is asking for an object.\n                <br />\n                What object do they want?\n              </>\n            }\n          />\n        </Instruction>\n\n        <Space className=\"space-container\">\n          <IconAvatar icon={<AlienIcon />} size=\"large\" />{' '}\n          <SpeechBubble shadow>\n            <Space className=\"space-container\">\n              {track.data.attributes.map((attribute: AlienSign, index: number) => {\n                return (\n                  <span>\n                    <SignCard id={String(track.data.signs[index])} />\n                    <DualTranslate>{attribute.name}</DualTranslate>\n                  </span>\n                );\n              })}\n            </Space>\n          </SpeechBubble>\n        </Space>\n\n        <Instruction contained>\n          <Translate\n            pt={<>Selecione o objeto que tem a ver com a palavra que o alienígena está pedindo.</>}\n            en={<>Select the object that has to do with the word the alien is asking for.</>}\n          />\n        </Instruction>\n\n        <Space className=\"space-container\">\n          {track.data.items.map((itemId: number) => {\n            return (\n              <TransparentButton\n                key={`item-${itemId}`}\n                onClick={() => onSelect(String(itemId))}\n                disabled={isLoading}\n              >\n                <ItemCard id={String(itemId)} width={80} />\n              </TransparentButton>\n            );\n          })}\n        </Space>\n      </Space>\n    </>\n  );\n};\n","import { useMemo } from 'react';\n// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { CharacterCard } from 'components/cards/CharacterCard';\nimport { PlayerGlyphs } from 'games/quem-sou-eu/components/PlayerGlyphs';\n\nexport const TrackQuemSouEu = ({ track, onSubmitAnswer, user }: TrackProps) => {\n  const { isLoading } = useLoading();\n  const cardWidth = useCardWidth(7, { minWidth: 150, maxWidth: 270 });\n\n  // DEV Mock\n  useMock(() => {\n    onSubmitAnswer({\n      data: { value: mockSelection(track.data.contenders, 'id') },\n    });\n  });\n\n  const botPlayer = useMemo(() => {\n    const selectedGlyphs: BooleanDictionary = {};\n    track.data.positive.forEach((glyph: number) => {\n      selectedGlyphs[glyph] = true;\n    });\n    track.data.negative.forEach((glyph: number) => {\n      selectedGlyphs[glyph] = false;\n    });\n    return { id: 'A', avatarId: 'A', name: 'Bob', selectedGlyphs };\n  }, [track.data]);\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Quem Sou Eu?', en: 'Who Am I?' }} />\n      <Instruction contained>\n        <Translate\n          pt=\"Decifre os símbolos e selecione o personagem que mais tem aver com eles.\"\n          en=\"Decipher the glyphs and select the character that has the most to do with them.\"\n        />\n      </Instruction>\n\n      <Space className=\"space-container\">\n        <PlayerGlyphs player={botPlayer} glyphWidth={50} />\n      </Space>\n\n      <Space className=\"space-container center\">\n        {track.data.contenders.map((contender: WContender) => {\n          return (\n            <Space direction=\"vertical\" key={contender.id}>\n              <CharacterCard size={cardWidth} character={contender} />\n\n              <Button\n                shape=\"round\"\n                type=\"primary\"\n                disabled={user.ready}\n                loading={isLoading}\n                onClick={() =>\n                  onSubmitAnswer({\n                    data: { value: contender.id },\n                  })\n                }\n              >\n                <Translate pt=\"Selecionar\" en=\"Select\" />\n              </Button>\n            </Space>\n          );\n        })}\n      </Space>\n    </>\n  );\n};\n","// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useMock } from 'hooks/useMock';\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\n// Utils\nimport { mockSelection } from '../../utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { MinigameTitle } from '../MinigameTitle';\nimport { Card } from 'components/cards';\nimport { SpeechBubbleAcceptedIcon } from 'icons/SpeechBubbleAcceptedIcon';\nimport { SpeechBubbleDeclinedIcon } from 'icons/SpeechBubbleDeclinedIcon';\nimport { SuspectCard } from 'components/cards/SuspectCard';\nimport { IconAvatar } from 'components/avatars';\n\nexport const TrackTaNaCara = ({ track, onSubmitAnswer }: TrackProps) => {\n  const cardWidth = useCardWidth(8, { gap: 8, minWidth: 150, maxWidth: 350, margin: 8 });\n  const { isLoading } = useLoading();\n  const { translate } = useLanguage();\n\n  const onSelect = (value: string) => {\n    onSubmitAnswer({\n      data: { value },\n    });\n  };\n\n  // DEV Mock\n  useMock(() => {\n    onSelect(mockSelection([true, false]));\n  });\n\n  return (\n    <>\n      <MinigameTitle title={{ pt: 'Tá Na Cara', en: 'Guess Who What?' }} />\n      <Instruction contained>\n        <Translate\n          pt=\"É bem óbvio só de olhar pra essa pessoa. Mas só pra confirmar, responda essa pergunta de acordo\n              com o que você acha.\"\n          en=\"It's pretty obvious just by looking at this person. But just to confirm, answer this question:\"\n        />\n      </Instruction>\n\n      <Card header={translate('Pergunta', 'Question')} color=\"orange\">\n        {track.data.question.question}\n      </Card>\n\n      <Space className=\"space-container\" direction=\"vertical\">\n        <SuspectCard suspect={track.data.suspect} width={cardWidth} />\n      </Space>\n\n      <Space className=\"space-container\">\n        <Button\n          size=\"large\"\n          icon={<IconAvatar icon={<SpeechBubbleDeclinedIcon />} />}\n          onClick={() => onSelect('no')}\n          disabled={isLoading}\n          shape=\"round\"\n        >\n          <Translate en=\"NO\" pt=\"NÃO\" />\n        </Button>\n\n        <Button\n          size=\"large\"\n          icon={<IconAvatar icon={<SpeechBubbleAcceptedIcon />} />}\n          onClick={() => onSelect('yes')}\n          disabled={isLoading}\n          shape=\"round\"\n        >\n          <Translate en=\"YES\" pt=\"SIM\" />\n        </Button>\n      </Space>\n    </>\n  );\n};\n","// Components\nimport { Step } from 'components/steps';\nimport { ClubLine } from './components/ClubLine';\nimport { FallbackComponent } from './components/FallbackComponent';\nimport { TrackArteRuim } from './components/Tracks/TrackArteRuim';\nimport { TrackLabirintoSecreto } from './components/Tracks/TrackLabirintoSecreto';\nimport { TrackContadoresHistorias } from './components/Tracks/TrackContadoresHistorias';\nimport { TrackCrimesHediondos } from './components/Tracks/TrackCrimesHediondos';\nimport { TrackCruzaPalavras } from './components/Tracks/TrackCruzaPalavras';\nimport { TrackDetetivesImaginativos } from './components/Tracks/TrackDetetivesImaginativos';\nimport { TrackDilemaDosEsquiadores } from './components/Tracks/TrackDilemaDosEsquiadores';\nimport { TrackEspiaoEntreNos } from './components/Tracks/TrackEspiaoEntreNos';\nimport { TrackFileiraDeFatos } from './components/Tracks/TrackFileiraDeFatos';\nimport { TrackGaleriaDeSonhos } from './components/Tracks/TrackGaleriaDeSonhos';\nimport { TrackMenteColetiva } from './components/Tracks/TrackMenteColetiva';\nimport { TrackNamoroOuAmizade } from './components/Tracks/TrackNamoroOuAmizade';\nimport { TrackNaRuaDoMedo } from './components/Tracks/TrackNaRuaDoMedo';\nimport { TrackOndaTelepatica } from './components/Tracks/TrackOndaTelepatica';\nimport { TrackPalhetaDeCores } from './components/Tracks/TrackPalhetaDeFores';\nimport { TrackPolemicaDaVez } from './components/Tracks/TrackPolemicaDaVez';\nimport { TrackPortaDosDesesperados } from './components/Tracks/TrackPortaDosDesesperados';\nimport { TrackQuemNaoMata } from './components/Tracks/TrackQuemNaoMata';\nimport { TrackRetratoFalado } from './components/Tracks/TrackRetratoFalado';\nimport { TrackSuperCampeonato } from './components/Tracks/TrackSuperCampeonato';\nimport { TrackTestemunhaOcular } from './components/Tracks/TrackTestemunhaOcular';\nimport { TrackUeSoIsso } from './components/Tracks/TrackUeSoIsso';\nimport { TrackVamosAoCinema } from './components/Tracks/TrackVamosAoCinema';\nimport { TrackMegamixBestOfThree } from './components/Tracks/TrackMegamixBestOfThree';\nimport { TrackMegamixThisThat } from './components/Tracks/TrackMegamixThisThat';\nimport { TrackComunicacaoAlienigena } from './components/Tracks/TrackComunicacaoAlienigena';\nimport { TrackQuemSouEu } from './components/Tracks/TrackQuemSouEu';\nimport { TrackTaNaCara } from './components/Tracks/TrackTaNaCara';\n\ntype StepTrackProps = {\n  round: GameRound;\n  track: Track;\n  players: GamePlayers;\n  user: GamePlayer;\n  onSubmitAnswer: GenericFunction;\n} & AnnouncementProps;\n\nexport const StepTrack = ({ announcement, ...rest }: StepTrackProps) => {\n  const TrackComponent =\n    {\n      'arte-ruim': TrackArteRuim,\n      'comunicacao-alienigena': TrackComunicacaoAlienigena,\n      'contadores-historias': TrackContadoresHistorias,\n      'crimes-hediondos': TrackCrimesHediondos,\n      'cruza-palavras': TrackCruzaPalavras,\n      'detetives-imaginativos': TrackDetetivesImaginativos,\n      'dilema-dos-esquiadores': TrackDilemaDosEsquiadores,\n      'espiao-entre-nos': TrackEspiaoEntreNos,\n      'fileira-de-fatos': TrackFileiraDeFatos,\n      'galeria-de-sonhos': TrackGaleriaDeSonhos,\n      'labirinto-secreto': TrackLabirintoSecreto,\n      'megamix-best-of-three': TrackMegamixBestOfThree,\n      'megamix-this-that': TrackMegamixThisThat,\n      'mente-coletiva': TrackMenteColetiva,\n      'namoro-ou-amizade': TrackNamoroOuAmizade,\n      'na-rua-do-medo': TrackNaRuaDoMedo,\n      'onda-telepatica': TrackOndaTelepatica,\n      'palheta-de-cores': TrackPalhetaDeCores,\n      'polemica-da-vez': TrackPolemicaDaVez,\n      'porta-dos-desesperados': TrackPortaDosDesesperados,\n      'quem-nao-mata': TrackQuemNaoMata,\n      'quem-sou-eu': TrackQuemSouEu,\n      'retrato-falado': TrackRetratoFalado,\n      'super-campeonato': TrackSuperCampeonato,\n      'testemunha-ocular': TrackTestemunhaOcular,\n      'ta-na-cara': TrackTaNaCara,\n      'ue-so-isso': TrackUeSoIsso,\n      'vamos-ao-cinema': TrackVamosAoCinema,\n    }?.[rest.track.game] ?? FallbackComponent;\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <TrackComponent {...rest} />\n      <ClubLine players={rest.players} currentRound={rest.round.current} />\n    </Step>\n  );\n};\n","// Utils\nimport { TITLES } from '../utils/constants';\n// Components\nimport { DualTranslate } from 'components/language';\n\ntype TrackTitleProps = {\n  track: Track;\n};\n\nexport const TrackTitle = ({ track }: TrackTitleProps) => {\n  const instruction: DualLanguageValue = TITLES?.[track.game] ?? {\n    pt: 'Nome do Jogo',\n    en: 'Game Title',\n  };\n\n  return <DualTranslate>{instruction}</DualTranslate>;\n};\n","// Components\nimport { Translate } from 'components/language';\nimport { PointsHighlight } from 'components/metrics/PointsHighlight';\nimport { Instruction } from 'components/text';\n\nexport function DJInstructions({ round }: { round: GameRound }): JSX.Element {\n  if (round.current <= 1) {\n    return (\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Fala galera! Eu sou o DJ PruPruPru!\n              <br />O objetivo desse jogo é <strong>entrar</strong> e <strong>permanecer</strong> na área VIP!\n              <br />\n              Você consegue isso se você sempre responder com a maioria! Não importa se está certo ou errado.\n              <br />\n              Ao responder com a maioria, você ganha <PointsHighlight type=\"positive\">1</PointsHighlight>{' '}\n              ponto por entrar na área VIP ou <PointsHighlight type=\"positive\">2</PointsHighlight> points se\n              você estiver lá.\n              <br /> Vamos aos hits!\n            </>\n          }\n          en={\n            <>\n              Yo my party people! I'm DJ PruPruPru!\n              <br />\n              The goal of the game is to <strong>join</strong> and <strong>stay</strong> in the VIP area!\n              <br />\n              You achieve this by always answering the tracks with the majority. It doesn't matter if it's\n              wrong or right.\n              <br />\n              When answering with the majority, you gain <PointsHighlight type=\"positive\">\n                1\n              </PointsHighlight>{' '}\n              point for joining the VIP area or <PointsHighlight type=\"positive\">2</PointsHighlight> points if\n              you're already there.\n              <br />\n              Let's play those hits!\n            </>\n          }\n        />\n      </Instruction>\n    );\n  }\n\n  if (round.current === Math.round(round.total / 2)) {\n    return (\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              DJ PruPruPru está de volta!\n              <br />\n              Estamos no meio da noite! Você está conseguindo ficar na área VIP?\n            </>\n          }\n          en={\n            <>\n              DJ PruPruPru back here!\n              <br />\n              We're halfway. Are you able to stay in the VIP area?\n            </>\n          }\n        />\n      </Instruction>\n    );\n  }\n\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Última rodada! Ganha quem estiver na área VIP com mais pontos!\n            <br />\n            Será que será você?\n          </>\n        }\n        en={\n          <>\n            It's the last round! The player with the most points in the VIP area will win!\n            <br />\n            Will that be you?\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n","// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitTrackAnswerAPIRequest } from './utils/api-requests';\nimport { useColorizeBackground } from './utils/useColorizeBackground';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\nimport { showDJPruPruPruStep } from './utils/helpers';\n// Icons\nimport { DJIcon } from 'icons/DJIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { TrackIcon } from './components/TrackIcon';\nimport { TrackInstructions } from './components/TrackInstructions';\nimport { StepTrack } from './StepTrack';\nimport { TrackTitle } from './components/TrackTitle';\nimport { DJInstructions } from './components/RulesBlobs';\nimport { Translate } from 'components/language';\nimport { DJPruPruPruSound } from 'components/audio/DJPruPruPruSound';\nimport { Avatar } from 'antd';\n\nexport function PhaseTrack({ players, state, info }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, setStep, goToNextStep } = useStep(showDJPruPruPruStep(state.round));\n\n  // Dynamic background\n  useColorizeBackground(user, state?.round?.current);\n\n  const onSubmitAnswer = useOnSubmitTrackAnswerAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<TrackIcon track={state.track} />}\n      title={\n        <>\n          <Avatar size=\"large\" style={{ backgroundColor: 'DimGray', verticalAlign: 'middle' }}>\n            {state.round.current}\n          </Avatar>{' '}\n          <TrackTitle track={state.track} />\n        </>\n      }\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <Instruction>\n        <TrackInstructions track={state.track} />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.MEGAMIX.TRACK}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<DJIcon />}\n          title={<DJAnnouncementTitle round={state.round} />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          duration={state?.round?.current < 2 ? 20 : 7}\n          unskippable\n          type=\"block\"\n        >\n          <DJPruPruPruSound />\n          <DJInstructions round={state.round} />\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepTrack\n          track={state.track}\n          round={state.round}\n          players={players}\n          announcement={announcement}\n          onSubmitAnswer={onSubmitAnswer}\n          user={user}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nfunction DJAnnouncementTitle({ round }: { round: GameRound }) {\n  if (round.current < 2) return <Translate pt=\"A Balada\" en=\"The Club\" />;\n  if (round.current === Math.round(round.total / 2))\n    return <Translate pt=\"E tamo só esquentando\" en=\"We're halfway!\" />;\n  return <Translate pt=\"Última música\" en=\"The last song\" />;\n}\n","import { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { MEGAMIX_API } from 'services/adapters';\n\nexport function useOnSubmitSeedAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: MEGAMIX_API.submitAction,\n    actionName: 'submit-seed',\n    onSuccess: () => setStep(3),\n    successMessage: translate('Dados enviados com sucesso', 'Data submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar seus dados',\n      'Oops, the application found an error while trying to submit your data'\n    ),\n  });\n\n  return (payload: SubmitAnswerPayload) => {\n    request({\n      action: 'SUBMIT_SEEDS',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitTrackAnswerAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: MEGAMIX_API.submitAction,\n    actionName: 'submit-task',\n    onSuccess: () => setStep(3),\n    successMessage: translate('Tarefa enviada com sucesso', 'Track submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua tarefa',\n      'Oops, the application found an error while trying to submit your task'\n    ),\n  });\n\n  return (payload: SubmitAnswerPayload) => {\n    request({\n      action: 'SUBMIT_TRACK_ANSWER',\n      ...payload,\n    });\n  };\n}\n","import { useEffect, useState } from 'react';\n// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { NOOP } from 'utils/constants';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\nimport { Card } from 'components/cards';\nimport { DrawingCanvas } from 'components/canvas';\nimport { PanicIcon } from 'icons/PanicIcon';\nimport { ArteRuimTimerSound } from 'components/audio/ArteRuimTimerSound';\nimport { TimeHighlight } from 'components/metrics/TimeHighlight';\n\ntype SeedArteRuimProps = {\n  seed: SeedEntryArteRuim;\n  updateData: GenericComponent;\n};\n\nexport function SeedArteRuim({ seed, updateData }: SeedArteRuimProps) {\n  const { translate } = useLanguage();\n  const [lines, setLines] = useState<any>([]);\n  const [isTimesUp, setTimesUp] = useState(false);\n\n  const { seconds, start, isRunning } = useCountdown({\n    duration: 13,\n    autoStart: false,\n    onExpire: () => {\n      updateData(\n        {\n          [seed.card.id]: JSON.stringify(lines),\n        },\n        true\n      );\n    },\n  });\n\n  useEffect(() => {\n    if (seconds === 2) {\n      setTimesUp(true);\n    }\n  }, [seconds]);\n\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\">\n        <Translate\n          pt=\"Para ajudar aliviar o estresse de ser sensual na balada, você resolveu se expressar artisticamente\"\n          en=\"To help relieve the stress of being incredibly hot in the club, you decided to express yourself through art\"\n        />\n      </Title>\n\n      <Space direction=\"vertical\">\n        <Instruction className=\"seed-instruction\">\n          <Translate\n            pt={\n              <>\n                Você tem <TimeHighlight>10 segundos</TimeHighlight> para desenhar a carta abaixo. Quando\n                estiver pronto, aperte o botão, o texto irá aparecer, então desenhe rápido!\n              </>\n            }\n            en={\n              <>\n                You have <TimeHighlight>10 seconds</TimeHighlight> to draw the card below. When you're ready,\n                press the button so the text will show up and then draw fast!\n              </>\n            }\n          />\n        </Instruction>\n        <Button onClick={start} type=\"primary\" disabled={isRunning}>\n          <Translate pt=\"Começar\" en=\"Start\" />\n        </Button>\n\n        <Card size=\"large\" header={translate('Desenhe', 'Draw')} className=\"a-draw__card\" color=\"yellow\">\n          {isRunning ? (\n            <>\n              {seed.card.text}\n              <span className=\"a-draw__timer\">{seconds > 1 ? seconds - 2 : 0}</span>\n            </>\n          ) : (\n            '?'\n          )}\n        </Card>\n        {isRunning && <ArteRuimTimerSound />}\n        {isTimesUp ? (\n          <PanicIcon style={{ background: 'white', width: '500px', padding: '2em' }} />\n        ) : isRunning ? (\n          <DrawingCanvas lines={lines} setLines={setLines} />\n        ) : (\n          <DrawingCanvas lines={[]} setLines={NOOP} />\n        )}\n      </Space>\n    </div>\n  );\n}\n","import { capitalize } from 'lodash';\n// AntDesign Resources\nimport { Button, Space } from 'antd';\nimport { HeartOutlined, MessageOutlined, SendOutlined } from '@ant-design/icons';\n// Components\nimport { BikiniModelIcon } from 'icons/BikiniModelIcon';\nimport { Translate } from 'components/language';\nimport { Instruction, TextHighlight, Title } from 'components/text';\nimport { SocialProfile } from 'components/game/SocialProfile';\n\ntype SeedLabirintoSecretoProps = {\n  seed: SeedEntryLabirintoSecreto;\n  updateData: GenericComponent;\n  user: GamePlayer;\n};\n\nexport function SeedLabirintoSecreto({ seed, updateData, user }: SeedLabirintoSecretoProps) {\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\">\n        <Translate\n          pt=\"Você decidiu postar uma foto piranhuda no Instagram antes de se arrumar...\"\n          en=\"You decided to post a thirst trap on Instagram before getting ready...\"\n        />\n      </Title>\n\n      <Space direction=\"vertical\">\n        <Instruction className=\"seed-instruction\">\n          <Translate\n            pt={\n              <>\n                Para não pensarem mal de você, você escolheu <TextHighlight>{seed.tree.text}</TextHighlight>{' '}\n                como a legenda de impacto da sua postagem. Agora escolha o melhor adjetivo que vai bem com\n                ela.\n              </>\n            }\n            en={\n              <>\n                Thinking about the haters, you chose <TextHighlight>{seed.tree.text}</TextHighlight> as a\n                caption. Now select the best adjective to go with it.\n              </>\n            }\n          />\n        </Instruction>\n\n        <div className=\"cm-instagram\">\n          <SocialProfile\n            avatarId={user.avatarId}\n            name={user.name}\n            handle={<Translate pt=\"Logo ali, Brasil\" en=\"Somewhere\" />}\n            className=\"cm-instagram__user\"\n          />\n          <div className=\"cm-instagram__picture\">\n            <BikiniModelIcon />\n          </div>\n          <div className=\"cm-instagram__buttons\">\n            <HeartOutlined /> <MessageOutlined /> <SendOutlined />\n          </div>\n          <div className=\"cm-instagram__post\">\n            <strong>{user.name.toLowerCase()}</strong> {capitalize(seed.tree.text)}...\n          </div>\n        </div>\n\n        <Space className=\"space-container\" wrap>\n          {seed.cards.map((card) => (\n            <Button\n              key={card.id}\n              onClick={() => updateData({ [seed.tree.id]: card.id }, true)}\n              type=\"primary\"\n            >\n              {card.text}\n            </Button>\n          ))}\n        </Space>\n      </Space>\n    </div>\n  );\n}\n","import { useEffectOnce } from 'react-use';\n// AntDesign Resources\nimport { Button, Segmented, Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\n// Utils\nimport { LETTERS } from 'utils/constants';\n// Components\nimport { Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { ClubberAvatar } from '../ClubberAvatar';\n\ntype SeedClubberProps = {\n  seed: SeedEntryClubberOutfit;\n  updateData: GenericComponent;\n  user: GamePlayer;\n  onSubmitData: GenericFunction;\n  data: PlainObject;\n};\n\nexport function SeedClubber({ seed, updateData, user, data, onSubmitData }: SeedClubberProps) {\n  const { isLoading } = useLoading();\n\n  useEffectOnce(() => {\n    updateData({ clubberId: seed.outfits[0] });\n  });\n\n  const clubbers = (seed.outfits ?? []).map((cId: string, index: number) => ({\n    label: (\n      <div className=\"clubber-selection\">\n        <ClubberAvatar id={user.avatarId} clubberId={cId} />\n        <div>{LETTERS[index]}</div>\n      </div>\n    ),\n    value: cId,\n  }));\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\">\n        <Translate\n          pt=\"Escolha o que você vai usar pra balada\"\n          en=\"Choose what you want to wear for this party\"\n        />\n      </Title>\n\n      <Space className=\"space-container\" direction=\"vertical\">\n        <Segmented\n          options={clubbers}\n          value={data.clubberId}\n          onChange={(clubberId) => updateData({ clubberId })}\n        />\n\n        <Button onClick={() => onSubmitData({ data })} disabled={isLoading || user.ready}>\n          <Translate pt=\"Confirmar roupa\" en=\"Confirm outfit\" />\n        </Button>\n      </Space>\n    </div>\n  );\n}\n","import { useState } from 'react';\n// AntDesign Resources\nimport { Button, Input, Space } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\n\ntype SeedOndaTelepaticaProps = {\n  seed: SeedEntryOndaTelepatica;\n  updateData: GenericComponent;\n};\n\nexport function SeedOndaTelepatica({ seed, updateData }: SeedOndaTelepaticaProps) {\n  const [value, setValue] = useState('');\n  const { translate } = useLanguage();\n\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\">\n        <Translate\n          pt=\"Você ainda estuda e precisa terminar sua tarefa de casa...\"\n          en=\"You're still in school and needs to finish your homework...\"\n        />\n      </Title>\n\n      <Space className=\"space-container\" direction=\"vertical\">\n        <Instruction className=\"seed-instruction\">\n          <Translate\n            pt={\n              <>\n                A tarefa é escrever algo simples relacionado ao tema abaixo, pode ser uma palavra, duas, uma\n                expressão.\n                <br />\n                Vamos tira 10!\n              </>\n            }\n            en={\n              <>\n                The task is easy: Write something simple that matches the theme below. It could be a word,\n                two, or a phrase.\n                <br />\n                Let's get that A+!\n              </>\n            }\n          />\n        </Instruction>\n\n        <Card header={translate('Tarefa', 'Homework')} color=\"purple\">\n          {seed.card}\n        </Card>\n\n        <Input\n          onChange={(e) => setValue(e.target.value)}\n          size=\"large\"\n          placeholder={translate('Escreva aqui', 'Write here')}\n          onPressEnter={() => updateData({ wave: value }, true)}\n        />\n\n        <Space>\n          <Button\n            disabled={value.length < 2}\n            onClick={() => updateData({ wave: value }, true)}\n            type=\"primary\"\n          >\n            <Translate pt=\"Enviar dever de casa\" en=\"Submit homework\" />\n          </Button>\n        </Space>\n      </Space>\n    </div>\n  );\n}\n","// Components\nimport { Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { Tweet } from 'components/game/SocialProfile';\n\ntype SeedPolemicaDaVezProps = {\n  seed: SeedEntryPolemicaDaVez;\n  updateData: GenericComponent;\n};\n\nexport function SeedPolemicaDaVez({ seed, updateData }: SeedPolemicaDaVezProps) {\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\">\n        <Translate\n          pt={\n            <>\n              Vamos procrastinar:\n              <br />\n              Você abre o Twitter e vê esse tópico. Curte ou não curte?\n            </>\n          }\n          en={\n            <>\n              Let's procrastinate:\n              <br />\n              You open twitter and see this tweet. Like or Dislike?\n            </>\n          }\n        />\n      </Title>\n\n      <Tweet\n        avatarId=\"A\"\n        name=\"Bob\"\n        handle=\"@imnotarobot\"\n        verified\n        onLike={() => updateData({ likeTweet: true }, true)}\n        onDislike={() => updateData({ likeTweet: false }, true)}\n      >\n        {seed.card.text}\n      </Tweet>\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useAudio } from 'react-use';\n// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useCountdown } from 'hooks/useCountdown';\n// Utils\nimport { NOOP } from 'utils/constants';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\nimport { DrawingCanvas } from 'components/canvas';\nimport { PanicIcon } from 'icons/PanicIcon';\nimport { MonsterCard } from 'components/cards/MonsterCard';\nimport { ImageCardPreloadHand } from 'components/image-cards';\n// Sound\nconst arteRuimTimer = require('assets/sounds/arte-ruim-timer.mp3');\n\ntype SeedRetratoFaladoProps = {\n  seed: SeedEntryRetratoFalado;\n  updateData: GenericComponent;\n};\n\nexport function SeedRetratoFalado({ seed, updateData }: SeedRetratoFaladoProps) {\n  const [lines, setLines] = useState<any>([]);\n  const [isTimesUp, setTimesUp] = useState(false);\n  const [volume] = useGlobalState('volume');\n  const [audio, , controls] = useAudio({\n    src: arteRuimTimer,\n  });\n\n  // Updated volume\n  useEffect(() => {\n    controls.volume(volume);\n  }, [volume]); // eslint-disable-line\n\n  const { seconds, start, isRunning } = useCountdown({\n    duration: 33,\n    autoStart: false,\n    onExpire: () => {\n      updateData(\n        {\n          [seed.card.id]: JSON.stringify(lines),\n        },\n        true\n      );\n    },\n  });\n\n  useEffect(() => {\n    if (seconds === 2) {\n      setTimesUp(true);\n    }\n  }, [seconds]);\n\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\">\n        <Translate\n          pt=\"De repente, você se lembra de um evento muito traumático na sua vida, uma monstro te atacou uma vez...\"\n          en=\"Suddenly you have a glimpse of memory from the day a monster attacked you...\"\n        />\n      </Title>\n\n      <Space direction=\"vertical\">\n        <Instruction className=\"seed-instruction\">\n          <Translate\n            pt={\n              <>\n                Você tem <strong>30 segundos</strong> para desenhar a carta abaixo.\n                <br />\n                Desenhá-lo é a única coisa que te acalma. Quando estiver pronto, aperte o botão!\n              </>\n            }\n            en={\n              <>\n                You have <strong>30 seconds</strong> to draw the card below.\n                <br />\n                Drawing it is the only thing that calms you down. When you're ready, press the button!\n              </>\n            }\n          />\n        </Instruction>\n        <Button onClick={start} type=\"primary\" disabled={isRunning}>\n          <Translate pt=\"Começar\" en=\"Start\" />\n        </Button>\n\n        {isRunning && audio}\n        <div className=\"monster-container\">\n          {isRunning && <span className=\"a-draw__timer\">{seconds > 1 ? seconds - 2 : 0}</span>}\n\n          <MonsterCard\n            currentMonster={isRunning ? seed.card : { id: 'md-bs-000', orientation: seed.card.orientation }}\n            showControls\n            cardWidth={250}\n          />\n\n          {isTimesUp ? (\n            <PanicIcon style={{ background: 'white', width: '500px', padding: '2em' }} />\n          ) : isRunning ? (\n            <DrawingCanvas lines={lines} setLines={setLines} />\n          ) : (\n            <DrawingCanvas lines={[]} setLines={NOOP} />\n          )}\n        </div>\n      </Space>\n\n      <ImageCardPreloadHand hand={[seed.card.id]} />\n    </div>\n  );\n}\n","import { ReactNode } from 'react';\n\ntype SVGPhoneProps = {\n  children: ReactNode;\n};\n\nexport function SVGPhone({ children }: SVGPhoneProps) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 453.03 800\" className=\"svg-phone\">\n      <path\n        d=\"M394.81 0H58.21A58.22 58.22 0 000 58.28v683.5A58.19 58.19 0 0058.21 800h336.6a58.23 58.23 0 0058.21-58.22V58.28A58.26 58.26 0 00394.81 0zM143.45 35.39h166.17c4.2 0 7.61 6.27 7.61 14s-3.41 14.05-7.61 14.05H143.45c-4.22 0-7.57-6.29-7.57-14.05s3.35-14 7.57-14zm83.06 707.09a37.17 37.17 0 1137.11-37.2 37.22 37.22 0 01-37.11 37.2zm182.9-127.36H43.64V98.33h365.77v516.79z\"\n        fill=\"#464749\"\n      ></path>\n      <foreignObject x=\"43\" y=\"98\" width=\"365\" height=\"516\">\n        {children}\n      </foreignObject>\n    </svg>\n  );\n}\n","import moment from 'moment';\nimport { useState } from 'react';\nimport clsx from 'clsx';\n// AntDesign Resources\nimport { Button, Input, Space } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { SVGPhone } from '../SVGPhone';\n\ntype SeedUeSoIssoProps = {\n  seed: SeedEntryUeSoIsso;\n  updateData: GenericComponent;\n};\n\nconst now = moment().format('MMMM YYYY, h:mm');\n\nexport function SeedUeSoIsso({ seed, updateData }: SeedUeSoIssoProps) {\n  const [value, setValue] = useState('');\n  const { translate } = useLanguage();\n\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\">\n        <Translate\n          pt=\"Você recebeu o torpedo de um amigo e precisa responder antes de se arrumar\"\n          en=\"You received the following text message from a friend and you must answer it before leaving\"\n        />\n      </Title>\n\n      <Space className=\"space-container\" direction=\"vertical\">\n        <SVGPhone>\n          <div className=\"ff-phone\">\n            <div className=\"ff-phone__contact\">\n              <Avatar id=\"B\" size=\"large\" />\n              <div className=\"ff-phone__name\">Bob {'>'}</div>\n            </div>\n            <div className=\"ff-phone__thread\">\n              <div className=\"ff-phone__message\">\n                <Translate pt=\"Ow\" en=\"Dude\" />\n              </div>\n              <div className=\"ff-phone__message\">\n                <Translate pt=\"fala aí\" en=\"Answer this\" />\n              </div>\n              <div className=\"ff-phone__message\">\n                <Translate pt=\"Diga uma palavra relacionada à...\" en=\"Tem a single word related to...\" />\n              </div>\n              <div className=\"ff-phone__timestamp\">\n                <Translate pt=\"Recebido\" en=\"Received\" /> {now}\n              </div>\n              <div\n                className={clsx('ff-phone__message ff-phone__message--important', getAnimationClass('tada'))}\n              >\n                {seed.card.text}\n              </div>\n            </div>\n          </div>\n        </SVGPhone>\n\n        <Input\n          onChange={(e) => setValue(e.target.value)}\n          size=\"large\"\n          placeholder={translate('Escreva aqui', 'Write here')}\n          onPressEnter={() => updateData({ singleClue: value }, true)}\n        />\n\n        <Button block onClick={() => updateData({ singleClue: value }, true)} type=\"primary\">\n          <Translate pt=\"Enviar\" en=\"Submit\" />\n        </Button>\n      </Space>\n    </div>\n  );\n}\n","import { useState } from 'react';\n// AntDesign Resources\nimport { Button, Input, Space } from 'antd';\nimport { FlagFilled, HeartFilled, MessageFilled } from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Icons\nimport { SixPackIcon } from 'icons/SixPackIcon';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { SVGPhone } from '../SVGPhone';\nimport { GroupQuestionCard } from 'components/cards/GroupQuestionCard';\n\ntype SeedMenteColetivaProps = {\n  seed: SeedMenteColetiva;\n  updateData: GenericComponent;\n};\n\nexport function SeedMenteColetiva({ seed, updateData }: SeedMenteColetivaProps) {\n  const { translate } = useLanguage();\n  const [value1, setValue1] = useState('');\n  const [value2, setValue2] = useState('');\n\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\">\n        <Translate\n          pt=\"Depois de ver alguns vídeos, você decidiu fazer esse teste no TikTok\"\n          en=\"After watching some videos, you decided to do this test on TikTok\"\n        />\n      </Title>\n\n      <Space className=\"space-container\" direction=\"vertical\">\n        <SVGPhone>\n          <div className=\"tt-phone\">\n            <div className=\"tt-phone__header\">\n              <span>STEM</span>\n              <span>Following</span>\n              <span>For You</span>\n            </div>\n\n            <div className=\"tt-phone__icons\">\n              <Avatar id=\"D\" size=\"large\" />\n              <MessageFilled />\n              <HeartFilled />\n              <FlagFilled />\n            </div>\n\n            <div className=\"tt-phone__background\">\n              <SixPackIcon />\n            </div>\n\n            <div className=\"tt-phone__question\">\n              <GroupQuestionCard question={seed.card} overrideNumber={2} />\n            </div>\n          </div>\n        </SVGPhone>\n        <Space className=\"space-container\">\n          <Input\n            onChange={(e) => setValue1(e.target.value)}\n            size=\"large\"\n            placeholder={translate('Resposta 1', 'Answer 1')}\n          />\n          <Input\n            onChange={(e) => setValue2(e.target.value)}\n            size=\"large\"\n            placeholder={translate('Resposta 2', 'Answer 2')}\n          />\n        </Space>\n        <Button\n          block\n          onClick={() => updateData({ answers: [value1, value2] }, true)}\n          disabled={!value1 || !value2}\n        >\n          <Translate pt=\"Enviar\" en=\"Submit\" />\n        </Button>\n      </Space>\n    </div>\n  );\n}\n","import moment from 'moment';\n// AntDesign Resources\nimport { Button, Space } from 'antd';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\nimport { SVGPhone } from '../SVGPhone';\nimport { ImageCard } from 'components/image-cards';\n\nconst now = moment().format('MMMM YYYY, h:mm');\n\ntype SeedContadoresHistoriasProps = {\n  seed: SeedEntryContadoresHistorias;\n  updateData: GenericComponent;\n};\n\nexport function SeedContadoresHistorias({ seed, updateData }: SeedContadoresHistoriasProps) {\n  return (\n    <div className=\"seed-container\">\n      <Title size=\"xx-small\">\n        <Translate\n          pt=\"Sua mãe te mandou uma mensagem e você precisa responder antes de se arrumar\"\n          en=\"Your mom sent you a message and you must answer it before leaving\"\n        />\n      </Title>\n\n      <Space className=\"space-container\" direction=\"vertical\">\n        <SVGPhone>\n          <div className=\"ff-phone\">\n            <div className=\"ff-phone__contact\">\n              <Avatar id=\"B\" />\n              <div className=\"ff-phone__name\">\n                <Translate pt=\"Mamãe\" en=\"Mommy\" /> {'>'}\n              </div>\n            </div>\n            <div className=\"ff-phone__thread\">\n              <div className=\"ff-phone__message\">\n                <Translate pt=\"Filho(a)\" en=\"Dear\" />\n              </div>\n              <div className=\"ff-phone__message\">\n                <Translate pt=\"O que é isso?\" en=\"What is this?\" />\n              </div>\n              <div className=\"ff-phone__timestamp\">\n                <Translate pt=\"Recebido\" en=\"Received\" /> {now}\n              </div>\n              <div className=\"ff-phone__message\">\n                <ImageCard imageId={seed.card} cardWidth={100} />\n              </div>\n            </div>\n          </div>\n        </SVGPhone>\n\n        <Instruction>\n          <Translate\n            pt=\"Você pode clicar na imagem para ampliá-la.\"\n            en=\"You can click on the image to enlarge it.\"\n          />\n        </Instruction>\n\n        <Space className=\"space-container\" wrap>\n          {seed.prompts.map((prompt) => (\n            <Button\n              key={prompt.id}\n              onClick={() => updateData({ prompt: prompt.text }, true)}\n              type=\"primary\"\n              size=\"large\"\n            >\n              {prompt.text}\n            </Button>\n          ))}\n        </Space>\n      </Space>\n    </div>\n  );\n}\n","import { useState } from 'react';\n// AntDesign Resources\nimport { Steps } from 'antd';\n// Hooks\nimport { useMock } from 'hooks/useMock';\nimport { useStep } from 'hooks/useStep';\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { buildSeedingSteps } from './utils/helpers';\nimport { mockSeeding } from './utils/mock';\n\n// Components\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\nimport { SeedArteRuim } from './components/Seeds/SeedArteRuim';\nimport { SeedLabirintoSecreto } from './components/Seeds/SeedLabirintoSecreto';\nimport { SeedClubber } from './components/Seeds/SeedClubber';\nimport { SeedOndaTelepatica } from './components/Seeds/SeedOndaTelepatica';\nimport { SeedPolemicaDaVez } from './components/Seeds/SeedPolemicaDaVez';\nimport { SeedRetratoFalado } from './components/Seeds/SeedRetratoFalado';\nimport { SeedUeSoIsso } from './components/Seeds/SeedUeSoIsso';\nimport { SeedMenteColetiva } from './components/Seeds/SeedMenteColetiva';\nimport { SeedContadoresHistorias } from './components/Seeds/SeedContadoresHistorias';\n\ntype StepSeedingProps = {\n  players: GamePlayers;\n  user: GamePlayer;\n  onSubmitData: GenericFunction;\n} & AnnouncementProps;\n\nexport const StepSeeding = ({ announcement, user, onSubmitData }: StepSeedingProps) => {\n  const { step: currentStep, goToNextStep } = useStep(0);\n\n  const [data, setData] = useState<PlainObject>({});\n  const { translate } = useLanguage();\n\n  const updateData = (objValue: PlainObject, next = false) => {\n    setData((v) => ({ ...v, ...objValue }));\n    if (next) {\n      goToNextStep();\n    }\n  };\n\n  const seeds = user.seeds ?? [];\n  const items = buildSeedingSteps(seeds, translate);\n  const currentSeed: SeedEntry = seeds[currentStep];\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title size=\"x-small\">\n        {seeds.length > 1 ? (\n          <Translate pt=\"Termine todas suas obrigações\" en=\"Finish all your chores\" />\n        ) : (\n          <Translate pt=\"Hora de se arrumar\" en=\"Time to get ready\" />\n        )}\n      </Title>\n      <div className=\"full-width container center\">\n        <Steps current={currentStep} items={items} />\n        {/* DEV only */}\n        {Boolean(currentSeed?.type) && <DevMock seeds={seeds} onSubmitData={onSubmitData} />}\n\n        {currentSeed?.type === 'arte-ruim' && <SeedArteRuim seed={currentSeed} updateData={updateData} />}\n\n        {currentSeed?.type === 'contadores-historias' && (\n          <SeedContadoresHistorias seed={currentSeed} updateData={updateData} />\n        )}\n\n        {currentSeed?.type === 'labirinto-secreto' && (\n          <SeedLabirintoSecreto seed={currentSeed} updateData={updateData} user={user} />\n        )}\n\n        {currentSeed?.type === 'mente-coletiva' && (\n          <SeedMenteColetiva seed={currentSeed} updateData={updateData} />\n        )}\n\n        {currentSeed?.type === 'onda-telepatica' && (\n          <SeedOndaTelepatica seed={currentSeed} updateData={updateData} />\n        )}\n\n        {currentSeed?.type === 'polemica-da-vez' && (\n          <SeedPolemicaDaVez seed={currentSeed} updateData={updateData} />\n        )}\n\n        {currentSeed?.type === 'retrato-falado' && (\n          <SeedRetratoFalado seed={currentSeed} updateData={updateData} />\n        )}\n\n        {currentSeed?.type === 'ue-so-isso' && <SeedUeSoIsso seed={currentSeed} updateData={updateData} />}\n\n        {currentSeed?.type === 'clubber' && (\n          <SeedClubber\n            seed={currentSeed}\n            updateData={updateData}\n            user={user}\n            onSubmitData={onSubmitData}\n            data={data}\n          />\n        )}\n      </div>\n    </Step>\n  );\n};\n\ntype DevMockProps = {\n  onSubmitData: GenericFunction;\n  seeds: SeedEntry[];\n};\n\nfunction DevMock({ onSubmitData, seeds }: DevMockProps) {\n  // DEV\n  useMock(() => {\n    onSubmitData({ data: mockSeeding(seeds) });\n  });\n\n  return <></>;\n}\n","// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitSeedAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { SmsIcon } from 'icons/SmsIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\nimport { StepSeeding } from './StepSeeding';\n\nexport function PhaseSeeding({ players, state, info }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, setStep } = useStep();\n\n  const onSubmitData = useOnSubmitSeedAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<SmsIcon />}\n      title={<Translate pt=\"Seu amigo te chamou pra balada!\" en=\"Your friend invited to the club!\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <Instruction>\n        {user?.seeds?.length > 1 ? (\n          <Translate\n            pt=\"Mas antes de ir, você tem que fazer suas obrigações...\"\n            en=\"But before that, you must finish some chores...\"\n          />\n        ) : (\n          <Translate pt=\"Mas antes de ir, escolha seu modelito\" en=\"Time to get ready!!!\" />\n        )}\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.MEGAMIX.SEEDING}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepSeeding players={players} announcement={announcement} onSubmitData={onSubmitData} user={user} />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","// AntDesign Resources\nimport { Space } from 'antd';\n// Components\nimport { PlayersHighlight } from 'components/metrics/PlayersHighlight';\n\ntype WinningCountProps = {\n  winners: number;\n  total: number;\n};\n\nexport function WinningCount({ winners, total }: WinningCountProps) {\n  return (\n    <Space className=\"space-container\">\n      <PlayersHighlight>{winners}</PlayersHighlight> <span>vs</span>{' '}\n      <PlayersHighlight className=\"grayscale\">{total - winners}</PlayersHighlight>\n    </Space>\n  );\n}\n","// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { CanvasSVG } from 'components/canvas';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n\nexport function ResultArteRuim({ track, winningValues, winningTeam, playersList }: ResultComponentProps) {\n  const width = useCardWidth(winningValues.length + 1, {\n    gap: 9,\n    minWidth: 80,\n    maxWidth: 200,\n    containerId: 'results-values',\n  });\n\n  if (track.variant === 'drawings') {\n    const winningArtworks: PlainObject[] = track.data.options.filter((option: PlainObject) => {\n      return winningValues.includes(option.playerId);\n    });\n\n    return (\n      <>\n        <Instruction>\n          <Translate pt=\"A arte mais votada foi\" en=\"The most popular art was\" />:\n        </Instruction>\n        <div className=\"track-result-values__cards\">\n          {winningArtworks.map((value) => (\n            <div key={value.playerId} className=\"track-result-values__text-value\">\n              <CanvasSVG drawing={value.drawing} width={width} className=\"a-drawing\" />\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  const winningCards: PlainObject[] = track.data.cards.filter((option: PlainObject) => {\n    return winningValues.includes(option.id);\n  });\n\n  return (\n    <>\n      <Instruction>\n        <Translate pt=\"O mais votado foi\" en=\"The most popular was\" />:\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningCards.map((value) => (\n          <div key={value.id} className=\"track-result-values__text-value\">\n            {value.text}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n\nexport function ResultCruzaPalavras({\n  track,\n  winningValues,\n  winningTeam,\n  playersList,\n}: ResultComponentProps) {\n  const cheatSheet: PlainObject = {\n    0: [track.data.cards[0].text, track.data.cards[2].text],\n    1: [track.data.cards[0].text, track.data.cards[3].text],\n    2: [track.data.cards[1].text, track.data.cards[2].text],\n    3: [track.data.cards[1].text, track.data.cards[3].text],\n  };\n\n  return (\n    <>\n      <Instruction>\n        <Translate pt=\"O mais votado foi\" en=\"The most popular was\" />:\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => (\n          <div key={value} className=\"track-result-values__text-value\">\n            {cheatSheet[value][0]} {'+'} {cheatSheet[value][1]}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { Candidate } from '../Candidate';\n\nexport function ResultNamoroOuAmizade({\n  track,\n  winningValues,\n  winningTeam,\n  playersList,\n}: ResultComponentProps) {\n  return (\n    <>\n      <Instruction>\n        <Translate pt=\"O melhor partido foi\" en=\"The best match was\" />:{' '}\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => {\n          const index = track.data.heads.findIndex((head: PlainObject) => head.id === value);\n          return (\n            <Candidate\n              key={value}\n              head={track.data.heads[index]}\n              body={track.data.bodies[index]}\n              interest={track.data.interests[index]}\n              need={track.data.needs[index]}\n              funFact={track.data.funFacts[index]}\n            />\n          );\n        })}\n      </div>\n    </>\n  );\n}\n","// Utils\nimport { LETTERS } from 'utils/constants';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { HouseCard } from 'games/na-rua-do-medo/components/HouseCard';\n\nexport function ResultNaRuaDoMedo({ track, winningValues, winningTeam, playersList }: ResultComponentProps) {\n  if (track.variant === 'house') {\n    const winningCards: NCard[] = track.data.options.filter((option: PlainObject) => {\n      return winningValues.includes(option.id);\n    });\n\n    return (\n      <>\n        <Instruction>\n          <Translate pt=\"A escolha mais popular foi\" en=\"The most popular choice was\" />:\n        </Instruction>\n        <div className=\"track-result-values__cards\">\n          {winningCards.map((card) => (\n            <div key={card.id} className=\"track-result-values__text-value\">\n              <HouseCard card={card} candyLeftover={0} preview={false} />\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Instruction>\n        <Translate pt=\"A rua mais votada foi\" en=\"The most voted street was\" />:\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => (\n          <div key={value} className=\"track-result-values__text-value\">\n            {LETTERS[Number(value)]}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { CanvasSVG } from 'components/canvas';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n\nexport function ResultRetratoFalado({\n  track,\n  winningValues,\n  winningTeam,\n  playersList,\n}: ResultComponentProps) {\n  const width = useCardWidth(winningValues.length + 1, {\n    gap: 9,\n    minWidth: 80,\n    maxWidth: 200,\n    containerId: 'results-values',\n  });\n\n  const winningArtworks: PlainObject[] = track.data.options.filter((option: PlainObject) => {\n    return winningValues.includes(option.playerId);\n  });\n\n  return (\n    <>\n      <Instruction>\n        <Translate pt=\"O monstro escolhido foi\" en=\"The best monster was\" />:\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningArtworks.map((value) => (\n          <div className=\"track-result-values__text-value\" key={value.drawing}>\n            <CanvasSVG drawing={value.drawing} width={width} className=\"a-drawing\" />\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","// Utils\nimport { getMovieTitles } from '../../utils/helpers';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n\nexport function ResultVamosAoCinema({\n  track,\n  winningValues,\n  winningTeam,\n  playersList,\n}: ResultComponentProps) {\n  const movies: StringDictionary = getMovieTitles(track.data.movies);\n\n  return (\n    <>\n      <Instruction>\n        <Translate pt=\"A filme mais votado foi\" en=\"The most popular movie was\" />:\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => {\n          return (\n            <div key={`winning-${value}`} className=\"track-result-values__text-value\">\n              {movies[value]}\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n}\n","// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n\nexport function ResultMegamix({ track, winningValues, winningTeam, playersList }: ResultComponentProps) {\n  return (\n    <>\n      <Instruction>\n        <Translate pt=\"O mais votado foi\" en=\"The most popular was\" />:\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => (\n          <div key={value} className=\"track-result-values__text-value\">\n            {track.data.card.options[Number(value)]}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { ImageBlurButtonContainer, ImageCard } from 'components/image-cards';\n\nexport function ResultImage({ winningTeam, winningValues, playersList }: ResultComponentProps) {\n  const width = useCardWidth(winningValues.length + 1, {\n    gap: 9,\n    minWidth: 80,\n    maxWidth: 200,\n    containerId: 'results-values',\n  });\n\n  return (\n    <>\n      <Instruction>\n        {winningValues.length > 1 ? (\n          <Translate pt=\"As cartas mais votadas foram\" en=\"Most voted cards are\" />\n        ) : (\n          <Translate pt=\"A carta mais votada foi\" en=\"Most voted card is\" />\n        )}\n        :\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((cardId) => (\n          <ImageBlurButtonContainer cardId={cardId} key={`table-focus-${cardId}`} className=\"margin\">\n            <ImageCard imageId={cardId} cardWidth={width} className=\"d-table__image-card\" />\n          </ImageBlurButtonContainer>\n        ))}\n      </div>\n    </>\n  );\n}\n","import { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\n\nexport function ResultText({ winningTeam, winningValues, playersList }: ResultComponentProps) {\n  return (\n    <>\n      <Instruction>\n        {winningValues.length > 1 ? (\n          <Translate pt=\"As votadas foram\" en=\"Most voted ones are\" />\n        ) : (\n          <Translate pt=\"A mais votada foi\" en=\"Most voted one is\" />\n        )}\n        :\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => (\n          <div key={value} className=\"track-result-values__text-value\">\n            {value}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { ImageBlurButtonContainer } from 'components/image-cards';\nimport { CharacterCard } from 'components/cards/CharacterCard';\n\nexport function ResultCharacter({ winningTeam, winningValues, playersList }: ResultComponentProps) {\n  const width = useCardWidth(winningValues.length + 1, {\n    gap: 9,\n    minWidth: 80,\n    maxWidth: 200,\n    containerId: 'results-values',\n  });\n\n  return (\n    <>\n      <Instruction>\n        {winningValues.length > 1 ? (\n          <Translate pt=\"As personagens mais votadas foram\" en=\"Most voted characters are\" />\n        ) : (\n          <Translate pt=\"A personagem mais votada foi\" en=\"Most voted character is\" />\n        )}\n        :\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((cardId) => (\n          <ImageBlurButtonContainer cardId={cardId} key={cardId}>\n            <CharacterCard\n              size={width}\n              character={{\n                id: cardId,\n                name: { pt: '', en: '' },\n              }}\n              overlayColor=\"yellow\"\n            />\n          </ImageBlurButtonContainer>\n        ))}\n      </div>\n    </>\n  );\n}\n","import { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\n\nexport function ResultOndaTelepatica({ winningTeam, winningValues, playersList }: ResultComponentProps) {\n  return (\n    <>\n      <Instruction>\n        {winningValues.length > 1 ? (\n          <Translate pt=\"As votadas foram\" en=\"Most voted ones are\" />\n        ) : (\n          <Translate pt=\"A mais votada foi\" en=\"Most voted one is\" />\n        )}\n        :\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => (\n          <div key={value} className=\"track-result-values__text-value\">\n            {value === 'center' && <Translate pt=\"Centro\" en=\"Center\" />}\n            {value === 'left' && <Translate pt=\"Esquerda\" en=\"Left\" />}\n            {value === 'right' && <Translate pt=\"Direita\" en=\"Right\" />}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","// Components\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { ItemCard } from 'components/cards/ItemCard';\n\nexport function ResultComunicacaoAlienigena({\n  winningTeam,\n  winningValues,\n  playersList,\n}: ResultComponentProps) {\n  return (\n    <>\n      <Instruction>\n        {winningValues.length > 1 ? (\n          <Translate pt=\"Os objetos mais votados foram\" en=\"Most voted objects are\" />\n        ) : (\n          <Translate pt=\"O objeto mais votado foi\" en=\"Most voted object is\" />\n        )}\n        :\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((cardId) => (\n          <ItemCard\n            id={String(cardId)}\n            key={`table-focus-${cardId}`}\n            width={80}\n            className=\"d-table__image-card\"\n          />\n        ))}\n      </div>\n    </>\n  );\n}\n","import { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { SpeechBubbleAcceptedIcon } from 'icons/SpeechBubbleAcceptedIcon';\nimport { SpeechBubbleDeclinedIcon } from 'icons/SpeechBubbleDeclinedIcon';\nimport { IconAvatar } from 'components/avatars';\n\nexport function ResultTaNaCara({ winningValues }: ResultComponentProps) {\n  return (\n    <>\n      <Instruction>\n        {winningValues.length > 1 ? (\n          <Translate pt=\"As respostas votadas foram\" en=\"Most voted answers are\" />\n        ) : (\n          <Translate pt=\"A resposta mais votada foi\" en=\"Most voted answer is\" />\n        )}\n        :\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => (\n          <div key={`answer-${value}`} className=\"track-result-values__text-value\">\n            <IconAvatar\n              size=\"large\"\n              icon={value === 'yes' ? <SpeechBubbleAcceptedIcon /> : <SpeechBubbleDeclinedIcon />}\n            />\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","import { Fragment } from 'react';\n// AntDesign Resources\nimport { RightSquareOutlined } from '@ant-design/icons';\n// Utils\nimport { LETTERS } from 'utils/constants';\n// Components\nimport { IconAvatar } from 'components/avatars/IconAvatar';\nimport { MapIcon } from 'icons/MapIcon';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n\nexport function ResultLabirintoSecreto({ track, winningValues }: ResultComponentProps) {\n  return (\n    <>\n      <Instruction>\n        <Translate pt=\"O caminho mais votado foi\" en=\"The most popular path was\" />:\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => {\n          const index = Number(value);\n          const entry = track.data?.options?.[index] ?? {};\n          return (\n            <div key={index} className=\"cm-clues__clue cm-clues__clue--small\">\n              {LETTERS[Number(value)]}\n              <IconAvatar icon={<MapIcon />} size={48} />\n              {Object.values<PlainObject>(entry).map((option, index, arr) => {\n                return (\n                  <Fragment key={`${option.playerId}-${index}`}>\n                    <span className=\"cm-clues__clue-text\">{option.text}</span>\n                    {arr.length - 1 > index && <RightSquareOutlined />}\n                  </Fragment>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n}\n","import { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { SplatterSVG } from '../Tracks/TrackPalhetaDeFores';\n\nexport function ResultPalhetaDeCores({ winningValues }: ResultComponentProps) {\n  return (\n    <>\n      <Instruction>\n        {winningValues.length > 1 ? (\n          <Translate pt=\"As amostras mais selecionadas foram\" en=\"The most selected swatches were\" />\n        ) : (\n          <Translate pt=\"A amostra mais selecionada foi\" en=\"The most selected swatch was\" />\n        )}\n        :\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => (\n          <div key={value} className=\"track-result-values__text-value\">\n            <SplatterSVG color={value} style={{ color: value }} width={48} />\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","import { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { AvatarName } from 'components/avatars';\n\nexport function ResultQuemNaoMata({\n  winningValues,\n\n  players,\n}: ResultComponentProps) {\n  return (\n    <>\n      <Instruction>\n        {winningValues.length > 1 ? (\n          <Translate pt=\"Os jogadores mais foram\" en=\"Most voted players are\" />\n        ) : (\n          <Translate pt=\"O jogador mais votado foi\" en=\"Most voted player is\" />\n        )}\n        :\n      </Instruction>\n      <div className=\"track-result-values__cards\">\n        {winningValues.map((value) => (\n          <div key={value} className=\"track-result-values__text-value\">\n            <AvatarName player={players[value]} />\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","// Components\nimport { WinningCount } from './WinningCount';\nimport { FallbackComponent } from './FallbackComponent';\nimport { ResultArteRuim } from './Results/ResultArteRuim';\nimport { ResultCruzaPalavras } from './Results/ResultCruzaPalavras';\nimport { ResultNamoroOuAmizade } from './Results/ResultNamoroOuAmizade';\nimport { ResultNaRuaDoMedo } from './Results/ResultNaRuaDoMedo';\nimport { ResultRetratoFalado } from './Results/ResultRetratoFalado';\nimport { ResultVamosAoCinema } from './Results/ResultVamosNoCinema';\nimport { ResultMegamix } from './Results/ResultMegamix';\nimport { ResultImage } from './Results/ResultImage';\nimport { ResultText } from './Results/ResultText';\nimport { ResultCharacter } from './Results/ResultCharacter';\nimport { ResultOndaTelepatica } from './Results/ResultOndaTelepatica';\nimport { ResultComunicacaoAlienigena } from './Results/ResultComunicacaoAlienigena';\nimport { ResultTaNaCara } from './Results/ResultTaNaCara';\nimport { ResultLabirintoSecreto } from './Results/ResultLabirintoSecreto';\nimport { ResultPalhetaDeCores } from './Results/ResultPalhetaDeCores';\nimport { ResultQuemNaoMata } from './Results/ResultQuemNaoMata';\n\nexport const ResultValueDelegator = (props: ResultComponentProps) => {\n  const ResultComponent =\n    {\n      'arte-ruim': ResultArteRuim,\n      'comunicacao-alienigena': ResultComunicacaoAlienigena,\n      'contadores-historias': ResultImage,\n      'crimes-hediondos': ResultImage,\n      'cruza-palavras': ResultCruzaPalavras,\n      'detetives-imaginativos': ResultImage,\n      'dilema-dos-esquiadores': ResultText,\n      'espiao-entre-nos': ResultText,\n      'fileira-de-fatos': ResultText,\n      'galeria-de-sonhos': ResultImage,\n      'labirinto-secreto': ResultLabirintoSecreto,\n      'megamix-best-of-three': ResultMegamix,\n      'megamix-this-that': ResultMegamix,\n      'mente-coletiva': ResultText,\n      'namoro-ou-amizade': ResultNamoroOuAmizade,\n      'na-rua-do-medo': ResultNaRuaDoMedo,\n      'onda-telepatica': ResultOndaTelepatica,\n      'palheta-de-cores': ResultPalhetaDeCores,\n      'polemica-da-vez': ResultText,\n      'porta-dos-desesperados': ResultImage,\n      'quem-nao-mata': ResultQuemNaoMata,\n      'quem-sou-eu': ResultCharacter,\n      'retrato-falado': ResultRetratoFalado,\n      'super-campeonato': ResultCharacter,\n      'testemunha-ocular': ResultImage,\n      'ta-na-cara': ResultTaNaCara,\n      'ue-so-isso': ResultText,\n      'vamos-ao-cinema': ResultVamosAoCinema,\n    }?.[props.track.game] ?? FallbackComponent;\n\n  return (\n    <>\n      <WinningCount winners={props.winningTeam.length} total={props.playersList.length} />\n      <ResultComponent {...props} />\n    </>\n  );\n};\n","import { has } from 'lodash';\nimport { ReactNode } from 'react';\n// AntDesign Resources\nimport { Space } from 'antd';\n\ntype SpacePlayerCheckWrapperProps = {\n  playersList: GamePlayer[];\n  paths: string[];\n  children: ReactNode;\n};\nexport function SpacePlayerCheckWrapper({ playersList, paths, children }: SpacePlayerCheckWrapperProps) {\n  const okToProceed = playersList.every((player) => {\n    return paths.every((path) => {\n      return has(player, path);\n    });\n  });\n\n  if (okToProceed) {\n    return (\n      <Space className=\"space-container\" align=\"center\" wrap>\n        {children}\n      </Space>\n    );\n  }\n\n  return <></>;\n}\n","// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { CanvasSVG } from 'components/canvas';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteArteRuim({ track, playersList }: VoteComponentProps) {\n  const width = useCardWidth(playersList.length + 1, {\n    gap: 9,\n    minWidth: 80,\n    maxWidth: 200,\n    containerId: 'results-values',\n  });\n\n  if (track.variant === 'drawings') {\n    return (\n      <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n        {playersList.map((player) => {\n          const drawing = track.data.options.find(\n            (entry: PlainObject) => entry.playerId === player.data.value\n          );\n          return (\n            <div key={`vote-${player.id}`} className=\"player-vote\">\n              <Avatar id={player.avatarId} />\n              <div>{player.name}</div>\n              {Boolean(drawing) && (\n                <CanvasSVG drawing={drawing.drawing} width={width} className=\"a-drawing\" />\n              )}\n            </div>\n          );\n        })}\n      </SpacePlayerCheckWrapper>\n    );\n  }\n\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => {\n        const card = track.data.cards.find((entry: PlainObject) => entry.id === player.data.value);\n        return (\n          <div key={`vote-${player.id}`} className=\"player-vote\">\n            <Avatar id={player.avatarId} />\n            <div className=\"player-vote__name\">{player.name}</div>\n            <div className=\"player-vote__value\">{Boolean(card) && card.text}</div>\n          </div>\n        );\n      })}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Components\nimport { Avatar } from 'components/avatars';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteCruzaPalavras({ track, playersList }: VoteComponentProps) {\n  const cheatSheet: PlainObject = {\n    0: [track.data.cards[0].text, track.data.cards[2].text],\n    1: [track.data.cards[0].text, track.data.cards[3].text],\n    2: [track.data.cards[1].text, track.data.cards[2].text],\n    3: [track.data.cards[1].text, track.data.cards[3].text],\n  };\n\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div>{player.name}</div>\n          <div key={player.data.value} className=\"track-result-values__text-value\">\n            {cheatSheet[player.data.value][0]} {'+'} {cheatSheet[player.data.value][1]}\n          </div>\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Components\nimport { Avatar } from 'components/avatars';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\nimport { Candidate } from '../Candidate';\n\nexport function VoteNamoroOuAmizade({ track, playersList }: VoteComponentProps) {\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => {\n        const index = track.data.heads.findIndex((head: PlainObject) => head.id === player.data.value);\n        return (\n          <div key={`vote-${player.id}`} className=\"player-vote\">\n            <Avatar id={player.avatarId} />\n            <div>{player.name}</div>\n            {index > -1 && (\n              <Candidate\n                key={`date-${player.id}`}\n                head={track.data.heads[index]}\n                body={track.data.bodies[index]}\n                interest={track.data.interests[index]}\n                need={track.data.needs[index]}\n                funFact={track.data.funFacts[index]}\n              />\n            )}\n          </div>\n        );\n      })}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Utils\nimport { LETTERS } from 'utils/constants';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { HouseCard } from 'games/na-rua-do-medo/components/HouseCard';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteNaRuaDoMedo({ track, playersList }: VoteComponentProps) {\n  if (track.variant === 'house') {\n    return (\n      <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n        {playersList.map((player) => {\n          const house = track.data.options.find((entry: PlainObject) => entry.id === player.data.value);\n          return (\n            <div key={`vote-${player.id}`} className=\"player-vote\">\n              <Avatar id={player.avatarId} />\n              <div>{player.name}</div>\n              <HouseCard card={house} candyLeftover={0} preview={false} />\n            </div>\n          );\n        })}\n      </SpacePlayerCheckWrapper>\n    );\n  }\n\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => {\n        return (\n          <div key={`vote-${player.id}`} className=\"player-vote\">\n            <Avatar id={player.avatarId} />\n            <div className=\"player-vote__name\">{player.name}</div>\n            <div className=\"player-vote__value\">{LETTERS[player.data.value]}</div>\n          </div>\n        );\n      })}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { CanvasSVG } from 'components/canvas';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteRetratoFalado({ track, playersList }: VoteComponentProps) {\n  const width = useCardWidth(playersList.length + 1, {\n    gap: 9,\n    minWidth: 80,\n    maxWidth: 200,\n    containerId: 'results-values',\n  });\n\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => {\n        const drawing = track.data.options.find((entry: PlainObject) => entry.playerId === player.data.value);\n        return (\n          <div key={`vote-${player.id}`} className=\"player-vote\">\n            <Avatar id={player.avatarId} />\n            <div>{player.name}</div>\n            {Boolean(drawing) && <CanvasSVG drawing={drawing.drawing} width={width} className=\"a-drawing\" />}\n          </div>\n        );\n      })}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Utils\nimport { getMovieTitles } from '../../utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteVamosAoCinema({ track, playersList }: VoteComponentProps) {\n  const movies: StringDictionary = getMovieTitles(track.data.movies);\n\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => {\n        return (\n          <div key={`vote-${player.id}`} className=\"player-vote\">\n            <Avatar id={player.avatarId} />\n            <div>{player.name}</div>\n            <div className=\"player-vote__value\">{movies[player.data.value]}</div>\n          </div>\n        );\n      })}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Ant Design Resources\nimport { Tooltip } from 'antd';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteMegamix({ track, playersList }: VoteComponentProps) {\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div className=\"player-vote__name\">{player.name}</div>\n          <Tooltip title={track.data.card.options[Number(player.data.value)]}>\n            <div className=\"player-vote__value\">{track.data.card.options[Number(player.data.value)]}</div>\n          </Tooltip>\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\nimport { ImageBlurButtonContainer, ImageCard } from 'components/image-cards';\n\nexport function VoteImagesTrack({ playersList }: VoteComponentProps) {\n  const width = useCardWidth(playersList.length + 4, {\n    gap: 8,\n    minWidth: 50,\n    maxWidth: 120,\n    margin: 8,\n  });\n\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div className=\"player-vote__name\">{player.name}</div>\n          <ImageBlurButtonContainer cardId={player.data.value}>\n            <ImageCard imageId={player.data.value} cardWidth={width} className=\"d-table__image-card\" />\n          </ImageBlurButtonContainer>\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Ant Design Resources\nimport { Tooltip } from 'antd';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteValue({ playersList }: VoteComponentProps) {\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div className=\"player-vote__name\">{player.name}</div>\n          <Tooltip title={player.data.value}>\n            <div className=\"player-vote__value\">{player.data.value}</div>\n          </Tooltip>\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","import { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteOndaTelepatica({ playersList }: VoteComponentProps) {\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div className=\"player-vote__name\">{player.name}</div>\n          <div className=\"player-vote__value\">\n            {player.data?.value === 'center' && <Translate pt=\"Centro\" en=\"Center\" />}\n            {player.data?.value === 'left' && <Translate pt=\"Esquerda\" en=\"Left\" />}\n            {player.data?.value === 'right' && <Translate pt=\"Direita\" en=\"Right\" />}\n          </div>\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { ImageBlurButtonContainer } from 'components/image-cards';\nimport { CharacterCard } from 'components/cards/CharacterCard';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteCharacterTrack({ playersList }: VoteComponentProps) {\n  const width = useCardWidth(playersList.length + 4, {\n    gap: 8,\n    minWidth: 50,\n    maxWidth: 120,\n    margin: 8,\n  });\n\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div className=\"player-vote__name\">{player.name}</div>\n          <ImageBlurButtonContainer cardId={player.data.value}>\n            <CharacterCard\n              size={width}\n              character={{\n                id: player.data.value,\n                name: { pt: '', en: '' },\n              }}\n            />\n          </ImageBlurButtonContainer>\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Components\nimport { Avatar } from 'components/avatars';\nimport { SplatterSVG } from '../Tracks/TrackPalhetaDeFores';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VotePalhetaDeCores({ playersList }: VoteComponentProps) {\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div className=\"player-vote__name\">{player.name}</div>\n          <SplatterSVG color={player.data.value} style={{ color: player.data.value }} width={48} />\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Components\nimport { Avatar } from 'components/avatars';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\n\nexport function VoteQuemNaoMata({ players, playersList }: VoteComponentProps) {\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div className=\"player-vote__name\">{player.name}</div>\n          <div className=\"player-vote__value\">{players[player.data?.value]?.name}</div>\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Components\nimport { Avatar } from 'components/avatars';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\nimport { ItemCard } from 'components/cards/ItemCard';\n\nexport function VoteComunicacaoAlienigena({ playersList }: VoteComponentProps) {\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div className=\"player-vote__name\">{player.name}</div>\n          <ItemCard id={String(player.data.value)} width={80} className=\"d-table__image-card\" />\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Components\nimport { Avatar } from 'components/avatars';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\nimport { SpeechBubbleAcceptedIcon } from 'icons/SpeechBubbleAcceptedIcon';\nimport { SpeechBubbleDeclinedIcon } from 'icons/SpeechBubbleDeclinedIcon';\n\nexport function VoteTaNaCara({ playersList }: VoteComponentProps) {\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div className=\"player-vote__name\">{player.name}</div>\n\n          <div className=\"player-vote__value\">\n            {player.data.value === 'yes' ? <SpeechBubbleAcceptedIcon /> : <SpeechBubbleDeclinedIcon />}\n          </div>\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","// Ant Design Resources\nimport { Avatar as AntAvatar } from 'antd';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { SpacePlayerCheckWrapper } from '../SpacePlayerCheckWrapper';\nimport { LETTERS } from 'utils/constants';\n\nexport function VoteLabirintoSecreto({ playersList }: VoteComponentProps) {\n  return (\n    <SpacePlayerCheckWrapper playersList={playersList} paths={['data.value']}>\n      {playersList.map((player) => (\n        <div key={`vote-${player.id}`} className=\"player-vote\">\n          <Avatar id={player.avatarId} />\n          <div className=\"player-vote__name\">{player.name}</div>\n\n          <div className=\"player-vote__value\">\n            <AntAvatar>{LETTERS[Number(player.data.value)]}</AntAvatar>\n          </div>\n        </div>\n      ))}\n    </SpacePlayerCheckWrapper>\n  );\n}\n","import { useMemo } from 'react';\nimport { orderBy } from 'lodash';\n// Components\nimport { FallbackComponent } from './FallbackComponent';\nimport { VoteArteRuim } from './Votes/VoteArteRuim';\nimport { VoteCruzaPalavras } from './Votes/VoteCruzaPalavras';\nimport { VoteNamoroOuAmizade } from './Votes/VoteNamoroOuAmizade';\nimport { VoteNaRuaDoMedo } from './Votes/VoteNaRuaDoMedo';\nimport { VoteRetratoFalado } from './Votes/VoteRetratoFalado';\nimport { VoteVamosAoCinema } from './Votes/VoteVamosAoCinema';\nimport { VoteMegamix } from './Votes/VoteMegamix';\nimport { VoteImagesTrack } from './Votes/VoteImagesTrack';\nimport { VoteValue } from './Votes/VoteValue';\nimport { VoteOndaTelepatica } from './Votes/VoteOndaTelepatica';\nimport { VoteCharacterTrack } from './Votes/VoteCharacterTrack';\nimport { VotePalhetaDeCores } from './Votes/VotePalhetaDeCores';\nimport { VoteQuemNaoMata } from './Votes/VoteQuemNaoMata';\nimport { VoteComunicacaoAlienigena } from './Votes/VoteComunicacaoAlienigena';\nimport { VoteTaNaCara } from './Votes/VoteTaNaCara';\nimport { VoteLabirintoSecreto } from './Votes/VoteLabirintoSecreto';\n\nexport const VotesDelegator = (props: Omit<VoteComponentProps, 'playersList'>) => {\n  const playersList = useMemo(\n    () => orderBy(Object.values(props.players), ['data.value', 'name'], ['asc', 'asc']),\n    [props.players]\n  );\n\n  const VotesComponent =\n    {\n      'arte-ruim': VoteArteRuim,\n      'comunicacao-alienigena': VoteComunicacaoAlienigena,\n      'contadores-historias': VoteImagesTrack,\n      'crimes-hediondos': VoteImagesTrack,\n      'cruza-palavras': VoteCruzaPalavras,\n      'detetives-imaginativos': VoteImagesTrack,\n      'dilema-dos-esquiadores': VoteValue,\n      'espiao-entre-nos': VoteValue,\n      'fileira-de-fatos': VoteValue,\n      'galeria-de-sonhos': VoteImagesTrack,\n      'labirinto-secreto': VoteLabirintoSecreto,\n      'megamix-best-of-three': VoteMegamix,\n      'megamix-this-that': VoteMegamix,\n      'mente-coletiva': VoteValue,\n      'namoro-ou-amizade': VoteNamoroOuAmizade,\n      'na-rua-do-medo': VoteNaRuaDoMedo,\n      'onda-telepatica': VoteOndaTelepatica,\n      'palheta-de-cores': VotePalhetaDeCores,\n      'polemica-da-vez': VoteValue,\n      'porta-dos-desesperados': VoteImagesTrack,\n      'quem-nao-mata': VoteQuemNaoMata,\n      'quem-sou-eu': VoteCharacterTrack,\n      'retrato-falado': VoteRetratoFalado,\n      'super-campeonato': VoteCharacterTrack,\n      'ta-na-cara': VoteTaNaCara,\n      'testemunha-ocular': VoteImagesTrack,\n      'ue-so-isso': VoteValue,\n      'vamos-ao-cinema': VoteVamosAoCinema,\n    }?.[props.track.game] ?? FallbackComponent;\n\n  // if (!playersList.every((player) => has(player, 'data.value'))) {\n  //   return <></>;\n  // }\n\n  return <VotesComponent {...props} playersList={playersList} />;\n};\n","import { useMemo } from 'react';\nimport { memoize } from 'lodash';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\nimport { TrophyOutlined } from '@ant-design/icons';\n// Utils\nimport { sortPlayers } from 'utils/helpers';\n// Hooks\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useDimensions } from 'hooks/useDimensions';\n// Icons\nimport { DJIcon } from 'icons/DJIcon';\nimport { GarbageIcon } from 'icons/GarbageIcon';\nimport { VIPLineIcon } from 'icons/VIPLineIcon';\n// Components\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { TimedButton } from 'components/buttons';\nimport { ClubberAvatar } from './components/ClubberAvatar';\nimport { IconAvatar } from 'components/avatars';\nimport { ResultValueDelegator } from './components/ResultValueDelegator';\nimport { TrackTitle } from './components/TrackTitle';\nimport { VotesDelegator } from './components/VotesDelegator';\nimport { useColorizeBackground } from './utils/useColorizeBackground';\n\ntype StepResultProps = {\n  user: GamePlayer;\n  players: GamePlayers;\n  onSeeRanking: GenericFunction;\n  round: GameRound;\n  isFirstRunThrough: boolean;\n  track: Track;\n  winningValues: string[];\n  winningTeam: PlayerId[];\n  scoringType: string;\n} & AnnouncementProps;\n\nexport function StepResult({\n  user,\n  players,\n  onSeeRanking,\n  round,\n  isFirstRunThrough,\n  announcement,\n  track,\n  winningValues,\n  winningTeam,\n  scoringType,\n}: StepResultProps) {\n  useTemporarilyHidePlayersBar();\n  const [width] = useDimensions('results');\n\n  const time = useCountdown({ duration: 20 });\n\n  const playersList = useMemo(() => sortPlayers(players), [players]);\n\n  const currentIndex = time.timeLeft > 14 ? round.current - 1 : round.current;\n\n  // Dynamic background\n  useColorizeBackground(user, time.timeLeft > 13 ? round.current : round.current + 1);\n\n  return (\n    <Step announcement={announcement}>\n      <Title size=\"small\" white>\n        <Translate pt=\"Resultado\" en=\"Results\" />: <TrackTitle track={track} />\n      </Title>\n\n      <Instruction contained>\n        <IconAvatar icon={<DJIcon />} size=\"large\" />\n        {scoringType === 'NORMAL' && (\n          <Translate\n            pt={<>Jogadores que votaram com a maioria entram ou continuam na Área VIP.</>}\n            en={<>Players who voted with the majority join or stay in the VIP area.</>}\n          />\n        )}\n        {scoringType === 'TIE' && (\n          <Translate\n            pt={<>Empate entre 2 ou mais respostas. Quem já estava na Área VIP fica e ganha ponto.</>}\n            en={\n              <>\n                It's a tie for 2 or more answers. Whoever was already in the VIP Area stays there and get\n                points.\n              </>\n            }\n          />\n        )}\n        {scoringType === 'DRAW' && (\n          <Translate\n            pt={<>Cada um escolheu uma coisa diferente? Todo mundo fora da Área VIP!</>}\n            en={<>Did everybody just choose something different? Everybody out!</>}\n          />\n        )}\n      </Instruction>\n\n      <div className=\"results\" id=\"results\">\n        <div className=\"results__vip\">\n          <span className=\"results__icon\">\n            <IconAvatar icon={<VIPLineIcon />} size=\"large\" />\n          </span>\n          <span className=\"results__label\">\n            <Translate pt=\"Área VIP\" en=\"VIP Lounge\" />\n          </span>\n        </div>\n        <div className=\"results__values\" id=\"results-values\">\n          <ResultValueDelegator\n            track={track}\n            winningValues={winningValues}\n            players={players}\n            winningTeam={winningTeam}\n            playersList={playersList}\n          />\n        </div>\n        <div className=\"results__gutter\">\n          <span className=\"results__icon\">\n            <IconAvatar icon={<GarbageIcon />} size=\"large\" />\n          </span>\n          <span className=\"results__label\">\n            <Translate pt=\"Pista (Sarjeta)\" en=\"GA (Scum)\" />\n          </span>\n        </div>\n\n        {playersList.map((player, index) => (\n          <div\n            className=\"results__player\"\n            key={`${player.id}-${player.clubberId}`}\n            style={getPosition(index, player.team[currentIndex] === 'W' ? 0 : 1, width)}\n          >\n            <ClubberAvatar\n              id={player.avatarId}\n              clubberId={player.clubberId}\n              width={45}\n              animate={player.team[currentIndex] === 'W'}\n            />\n            <span className=\"results__player-name\">{player.name}</span>\n          </div>\n        ))}\n      </div>\n\n      <Space className=\"space-container\" align=\"center\">\n        {isFirstRunThrough ? (\n          <TimedButton onClick={onSeeRanking} onExpire={onSeeRanking} duration={15} icon={<TrophyOutlined />}>\n            <Translate pt=\"Ver Ranking\" en=\"See Ranking\" />\n          </TimedButton>\n        ) : (\n          <Button onClick={onSeeRanking} icon={<TrophyOutlined />}>\n            <Translate pt=\"Ver Ranking\" en=\"See Ranking\" />\n          </Button>\n        )}\n      </Space>\n\n      <VotesDelegator\n        track={track}\n        winningValues={winningValues}\n        players={players}\n        winningTeam={winningTeam}\n      />\n    </Step>\n  );\n}\n\nconst getPosition = memoize(\n  (index: number, side: number, width: number) => {\n    const areaSize = width / 3;\n    const buffer = side * areaSize * 2;\n\n    const getTopValue = (index: number, startAt: number, increment: number): number => {\n      const ratio = [0, 0, 0, 1, 1, 1, 1];\n      const multiplier = Math.floor(index / ratio.length);\n      const remainderPosition = index % ratio.length;\n\n      return startAt + multiplier * increment + (ratio[remainderPosition] + multiplier) * increment;\n    };\n    const top = getTopValue(index, 0, 45);\n\n    const left = [0.24, 0.48, 0.72, 0.15, 0.36, 0.6, 0.84][index % 7];\n\n    return {\n      top: `${50 + top}px`,\n      left: `${areaSize * left + buffer}px`,\n    };\n  },\n  (index, side, width) => `${index}-${side}-${width}`\n);\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Icons\nimport { BouncerIcon } from 'icons/BouncerIcon';\n// Components\nimport { VIPNextPhaseButton } from 'components/vip';\nimport { Translate } from 'components/language';\nimport { StepRankingWrapper } from 'components/ranking';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { useColorizeBackground } from './utils/useColorizeBackground';\n\ntype StepRankingProps = {\n  user: GamePlayer;\n  players: GamePlayers;\n  ranking: GameRanking;\n  goToPreviousStep: GenericFunction;\n  round: GameRound;\n};\n\nexport function StepRanking({ ranking, players, goToPreviousStep, round, user }: StepRankingProps) {\n  // Dynamic background\n  useColorizeBackground(user, round.current + 1);\n\n  const innerContent = (\n    <>\n      <Instruction contained>\n        <Translate\n          pt=\"Somente jogadores na área VIP são ranqueados, porque você não pode ganhar se não estiver lá!\"\n          en=\"Only players in the VIP area can be ranked since you can't win if you're not there\"\n        />\n      </Instruction>\n    </>\n  );\n\n  const actions = (\n    <>\n      <Space className=\"space-container\" align=\"center\">\n        <Button onClick={goToPreviousStep}>\n          <Translate pt=\"Ver resultado novamente\" en=\"See results again\" />\n        </Button>\n      </Space>\n      <VIPNextPhaseButton round={round} />\n    </>\n  );\n\n  if (ranking.length === 0) {\n    return (\n      <Step>\n        <Title size=\"small\">\n          <Translate pt=\"Ranking\" en=\"Ranking\" />?\n        </Title>\n\n        <Space className=\"space-container\">\n          <BouncerIcon width=\"120\" />\n        </Space>\n        {innerContent}\n        {actions}\n      </Step>\n    );\n  }\n\n  return (\n    <StepRankingWrapper\n      players={players}\n      ranking={ranking}\n      gainedPointsDescriptions={[\n        <Translate\n          pt={<>Pontos por já estar no Time Vencedor.</>}\n          en={<>Points for already being on the Winning Team.</>}\n        />,\n        <Translate\n          pt={<>Pontos por entrar no Time Vencedor.</>}\n          en={<>Points for joining the Winning Team.</>}\n        />,\n      ]}\n      title={<Translate pt={<>Ranking da Área VIP</>} en={<>VIP Ranking</>} />}\n      white\n      subtitle={innerContent}\n    >\n      {actions}\n    </StepRankingWrapper>\n  );\n}\n","import { useEffect, useState } from 'react';\n// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { BouncerIcon } from 'icons/BouncerIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\nimport { StepResult } from './StepResult';\nimport { StepRanking } from './StepRanking';\n\nexport function PhaseResult({ players, state, info }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, goToNextStep, goToPreviousStep } = useStep(0);\n  const [isFirstRunThrough, setIsFirstRunThrough] = useState(true);\n\n  // Changes isFirstGalleryRunThrough property which disables controls, after the first gallery run through\n  useEffect(() => {\n    if (isFirstRunThrough && step > 0) {\n      setIsFirstRunThrough(false);\n    }\n  }, [step, isFirstRunThrough]);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<BouncerIcon />}\n      title={<Translate pt=\"Resultado\" en=\"Results\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n      duration={4}\n    >\n      <Instruction>\n        <Translate pt=\"Quem vai pra área VIP?\" en=\"So who goes to the VIP area?\" />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.MEGAMIX.RESULT}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepResult\n          players={players}\n          announcement={announcement}\n          onSeeRanking={goToNextStep}\n          user={user}\n          round={state.round}\n          isFirstRunThrough={isFirstRunThrough}\n          track={state.track}\n          winningValues={state.winningValues}\n          winningTeam={state.winningTeam}\n          scoringType={state.scoringType}\n        />\n\n        {/* Step 1 */}\n        <StepRanking\n          ranking={state.ranking}\n          players={players}\n          goToPreviousStep={goToPreviousStep}\n          round={state.round}\n          user={user}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","import { isEqual } from 'lodash';\n// Utils\nimport { AVATARS } from 'utils/avatars';\n// Icons\nimport { CrownIcon } from 'icons/CrownIcon';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { GameOverWrapper } from 'components/game-over';\nimport { DualTranslate, Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { Container } from 'components/general/Container';\nimport { Achievements } from 'components/general/Achievements';\nimport { achievementsReference } from './utils/achievements';\n\nexport function PhaseGameOver({ state, info, players }: PhaseProps) {\n  return (\n    <GameOverWrapper info={info} state={state} players={players} announcementIcon={<CrownIcon />}>\n      {!isEqual(state.winners, state.fairWinners) && (\n        <Container\n          title={\n            <Translate\n              pt=\"Se a vida fosse justa, quem teria ganhado, com mais pontos, seria:\"\n              en=\"If life was fair, the winner with the most points would've been:\"\n            />\n          }\n        >\n          <Instruction contained>\n            <ul className=\"game-over__winners\">\n              {state.fairWinners.map((winner: GamePlayer) => {\n                return (\n                  <li className=\"game-over__winner\" key={`winner-${winner.name}`}>\n                    <Avatar className=\"game-over__avatar\" id={winner.avatarId ?? 25} />\n                    <div className=\"game-over__winner-name\">\n                      <strong>{winner.name ?? '?'}</strong>,{' '}\n                      <DualTranslate>{AVATARS[winner.avatarId].description}</DualTranslate>\n                    </div>\n                  </li>\n                );\n              })}\n            </ul>\n          </Instruction>\n        </Container>\n      )}\n\n      <Achievements players={players} achievements={state.achievements} reference={achievementsReference} />\n    </GameOverWrapper>\n  );\n}\n","import { ConfigProvider } from 'antd';\n// Constants\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport { LoadingPage } from 'components/loaders';\nimport { PhaseTrack } from './PhaseTrack';\nimport { PhaseSeeding } from './PhaseSeeding';\nimport { PhaseResult } from './PhaseResult';\nimport { PhaseGameOver } from './PhaseGameOver';\n// Sass\nimport './megamix.scss';\n\nfunction getActiveComponent(state: GameState) {\n  // If phase is not defined, it is likely that the game is still loading\n  if (state && !state.phase) return LoadingPage;\n\n  switch (state.phase) {\n    case PHASES.DEFAULT.LOBBY:\n      return PhaseLobby;\n    case PHASES.DEFAULT.RULES:\n      return PhaseRules;\n    case PHASES.DEFAULT.SETUP:\n      return PhaseSetup;\n    case PHASES.MEGAMIX.SEEDING:\n      return PhaseSeeding;\n    case PHASES.MEGAMIX.TRACK:\n      return PhaseTrack;\n    case PHASES.MEGAMIX.RESULT:\n      return PhaseResult;\n    case PHASES.DEFAULT.GAME_OVER:\n      return PhaseGameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionMegamix() {\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorPrimary: THEME_COLORS.PLUMP_PURPLE,\n          colorLink: THEME_COLORS.PLUMP_PURPLE,\n        },\n      }}\n    >\n      <Session gameCollection={GAME_COLLECTION.MEGAMIX} getActiveComponent={getActiveComponent} />\n    </ConfigProvider>\n  );\n}\n\nexport default SessionMegamix;\n","const ACHIEVEMENTS = {\n  SOLITARY_VIP: 'SOLITARY_VIP',\n  SOLITARY_LOSER: 'SOLITARY_LOSER',\n  LONGEST_VIP: 'LONGEST_VIP',\n  LONGEST_LOSER: 'LONGEST_LOSER',\n  MOST_SWITCHED: 'MOST_SWITCHED',\n  LEAST_SWITCHED: 'LEAST_SWITCHED',\n  MOST_JOIN: 'MOST_JOIN',\n  MOST_LEFT: 'MOST_LEFT',\n};\n\nexport const achievementsReference: AchievementReference = {\n  [ACHIEVEMENTS.SOLITARY_VIP]: {\n    icon: 'one',\n    title: {\n      pt: 'VIP Solitário',\n      en: 'Solitary VIP',\n    },\n    description: {\n      pt: 'Esteve na área VIP sozinho mais vezes',\n      en: 'Was in the VIP area alone the most',\n    },\n  },\n  [ACHIEVEMENTS.SOLITARY_LOSER]: {\n    icon: 'trash',\n    title: {\n      pt: 'Fracassado Solitário',\n      en: 'Solitary Loser',\n    },\n    description: {\n      pt: 'Esteve na pista sozinho mais vezes',\n      en: 'Was in the General Admission area alone the most',\n    },\n  },\n  [ACHIEVEMENTS.LONGEST_VIP]: {\n    icon: 'arrow-wide',\n    title: {\n      pt: 'VIP de Longa Data',\n      en: 'Longest VIP',\n    },\n    description: {\n      pt: 'Ficou na área VIP por mais rodadas consecutivas',\n      en: 'Was in the VIP area the most consecutive rounds ',\n    },\n  },\n  [ACHIEVEMENTS.LONGEST_LOSER]: {\n    icon: 'face-embarrassed',\n    title: {\n      pt: 'Pobre de Longa Data',\n      en: 'Longest Loser',\n    },\n    description: {\n      pt: 'Ficou na pista por mais rodadas consecutivas',\n      en: 'Was in the General Admission area the most consecutive rounds',\n    },\n  },\n  [ACHIEVEMENTS.MOST_SWITCHED]: {\n    icon: 'arrows-reverse',\n    title: {\n      pt: 'Mais Troca-Troca',\n      en: 'Most Switched',\n    },\n    description: {\n      pt: 'Trocou de área mais vezes',\n      en: 'Switched areas the most',\n    },\n  },\n  [ACHIEVEMENTS.LEAST_SWITCHED]: {\n    icon: 'arrow-narrow',\n    title: {\n      pt: 'Menos Troca-Troca',\n      en: 'Least Switched',\n    },\n    description: {\n      pt: 'Trocou de área menos vezes',\n      en: 'Switched areas the least',\n    },\n  },\n  [ACHIEVEMENTS.MOST_JOIN]: {\n    icon: 'fire',\n    title: {\n      pt: 'Mais Chegador',\n      en: 'Most Joiner',\n    },\n    description: {\n      pt: 'Entrou na área VIP mais vezes',\n      en: 'Joined the VIP area the most',\n    },\n  },\n  [ACHIEVEMENTS.MOST_LEFT]: {\n    icon: 'door',\n    title: {\n      pt: 'Mais Sairão',\n      en: 'Most Leaver',\n    },\n    description: {\n      pt: 'Saiu da área VIP mais vezes',\n      en: 'Left the VIP area the most',\n    },\n  },\n};\n\nexport default achievementsReference;\n","// Ant Design Resources\nimport { Avatar } from 'antd';\n// Icons\nimport { CandyIcon } from 'icons/CandyIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\n\ntype CandyCountProps = {\n  candyCount: number;\n  size?: 'small' | 'default' | 'large';\n};\n\nexport function CandyCount({ candyCount, size = 'small' }: CandyCountProps) {\n  return (\n    <>\n      <IconAvatar icon={<CandyIcon />} size={size} />\n      <Avatar size={size} style={{ backgroundColor: 'hotPink' }}>\n        {candyCount}\n      </Avatar>\n    </>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Tooltip } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { ImageCard } from 'components/image-cards';\nimport { Translate } from 'components/language';\nimport { CandyCount } from './CandyCount';\n\ntype HouseCardProps = {\n  /**\n   * The candy, monster, jackpot card\n   */\n  card: NCard;\n  /**\n   * The quantity of candy left in the sidewalk\n   */\n  candyLeftover: number;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Unique id\n   */\n  id?: string;\n  /**\n   * If the house is the last one\n   */\n  active?: boolean;\n  /**\n   * Enables or disables preview\n   */\n  preview?: boolean;\n};\n\nexport function HouseCard({\n  card,\n  candyLeftover,\n  id,\n  className = '',\n  active = false,\n  preview,\n}: HouseCardProps) {\n  const { dualTranslate } = useLanguage();\n\n  const baseClass = 'n-house-card';\n  const cardBaseClass = 'n-house-card__card';\n\n  return (\n    <div\n      className={clsx(baseClass, `${baseClass}--${card.type}`, active && `${baseClass}--active`, className)}\n      id={id}\n    >\n      <div className=\"n-house-card__sidewalk\">\n        {card.type === 'candy' && candyLeftover > 0 && (\n          <Tooltip\n            color=\"hotPink\"\n            title={\n              <Translate\n                pt=\"Doces que não foram divididos entre os jogadores\"\n                en=\"Candy that wasn't shared between players\"\n              />\n            }\n          >\n            <CandyCount candyCount={candyLeftover} />\n          </Tooltip>\n        )}\n      </div>\n      <ImageCard imageId={card.key} cardWidth={80} className={clsx(cardBaseClass)} preview={preview} />\n\n      <h3 className={`${baseClass}__name`}>{dualTranslate(card.name)}</h3>\n\n      {active && (\n        <span\n          className={clsx(\n            `${baseClass}__active`,\n            getAnimationClass('heartBeat', { speed: 'slow', infinite: true })\n          )}\n        />\n      )}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { LETTERS } from 'utils/constants';\n\nexport const getColorModifier = (letter: string) => {\n  const index = LETTERS.indexOf(letter);\n  return Math.abs(index) % 4;\n};\n\nexport const getBracketClass = (\n  num: number,\n  showNeedle: boolean,\n  needle: number,\n  showTarget: boolean,\n  target: number\n): string => {\n  const baseBracketClass = 'o-dial-numbers';\n  const modifier = num % 2 === 0 ? 'even' : 'odd';\n\n  return clsx(\n    baseBracketClass,\n    `${baseBracketClass}--${modifier}`,\n    showNeedle && needle === num && `${baseBracketClass}--active`,\n    showTarget && target === num && `${baseBracketClass}--target`\n  );\n};\n\nexport const getGuessResultClass = (guess: number, target: number): string => {\n  const base = 'o-player-guess__guess';\n  if (target - guess === 0) return `${base}--blue`;\n  if (Math.abs(target - guess) === 1) return `${base}--orange`;\n  if (Math.abs(target - guess) === 2) return `${base}--yellow`;\n  return '';\n};\n\nexport const getPoints = (guess: number, target: number): number => {\n  if (target - guess === 0) return 4;\n  if (Math.abs(target - guess) === 1) return 3;\n  if (Math.abs(target - guess) === 2) return 2;\n  return 0;\n};\n\n/**\n * Counts how many difference guesses are there\n */\nexport const countDifferentGuesses = (regularPlayers: GamePlayer[]): number => {\n  const dict: Record<string, number> = {};\n\n  regularPlayers.forEach((player) => {\n    if (dict[String(player.guess)] === undefined) {\n      dict[String(player.guess)] = 0;\n    }\n    dict[String(player.guess)] += 1;\n  });\n\n  return Object.keys(dict).length;\n};\n","import { ReactNode } from 'react';\n\ntype BookProps = {\n  children?: [ReactNode] | [ReactNode, ReactNode] | [ReactNode, ReactNode, ReactNode];\n};\n\nexport function Book({ children }: BookProps) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      viewBox=\"0 0 725.95 328.66\"\n      style={{ width: '50vw', maxWidth: '600px' }}\n    >\n      <defs>\n        <linearGradient id=\"a\" x1=\"171.8\" x2=\"354.26\" y1=\"170.82\" y2=\"170.82\" gradientUnits=\"userSpaceOnUse\">\n          <stop offset=\"0\" stopColor=\"#d9d9d9\"></stop>\n          <stop offset=\"1\" stopColor=\"#fff\"></stop>\n        </linearGradient>\n        <linearGradient\n          id=\"b\"\n          x1=\"371.69\"\n          x2=\"554.14\"\n          y1=\"171.43\"\n          y2=\"171.43\"\n          xlinkHref=\"#a\"\n        ></linearGradient>\n        <linearGradient\n          id=\"c\"\n          x1=\"554.14\"\n          x2=\"725.95\"\n          y1=\"178.59\"\n          y2=\"178.59\"\n          xlinkHref=\"#a\"\n        ></linearGradient>\n      </defs>\n      <path\n        fill=\"#6770b3\"\n        d=\"M363 40.45S313.41-5.8 263.85 25.89 158.73 44.64 158.73 44.64v284L363 314.34z\"\n      ></path>\n      <path\n        fill=\"#6770b3\"\n        d=\"M363 40.45S313.41-5.8 263.85 25.89 158.73 44.64 158.73 44.64v284L363 314.34z\"\n      ></path>\n      <path\n        fill=\"#b3b3b3\"\n        d=\"M222.05 310.18c-4.7.87-9 1.56-13 2.11l-1.9.3 147.09-10.1s-51.52-4.77-132.19 7.69z\"\n      ></path>\n      <path\n        fill=\"#ccc\"\n        d=\"M245.56 305.05a407.52 407.52 0 01-23.48 5.12c80.67-12.46 132.21-7.69 132.21-7.69s-51.24-10.58-108.73 2.57z\"\n      ></path>\n      <path\n        fill=\"#e6e6e6\"\n        d=\"M327.62 295a134.29 134.29 0 00-59.08 3.85q-12.45 3.65-23 6.24c57.49-13.15 108.7-2.56 108.7-2.56s-10.07-4.92-26.62-7.53z\"\n      ></path>\n      <path\n        fill=\"#fff\"\n        d=\"M260.85 39.84C226.27 59.2 171.8 61.07 171.8 61.07v251.75s6.95 2.31 25.52.78c2.74-.22 5.74-.53 9-1l2.77-.36q6.6-1.14 13-2.11c6.95-1.29 14.75-3 23.48-5.12q10.58-2.61 23-6.24a134.29 134.29 0 0159.05-3.77c16.55 2.64 26.64 7.52 26.64 7.52V49.84c-38.67-25.84-58.82-29.37-93.41-10z\"\n      ></path>\n      <path\n        fill=\"#6770b3\"\n        d=\"M363 40.45s47.59-38.77 99.1-18.56c54.76 21.48 105.12 22.75 105.12 22.75v284L363 314.34z\"\n      ></path>\n      <path\n        fill=\"#6770b3\"\n        d=\"M363 40.45s47.59-38.77 99.1-18.56c54.76 21.48 105.12 22.75 105.12 22.75v284L363 314.34z\"\n      ></path>\n      <path\n        fill=\"#b3b3b3\"\n        d=\"M503.9 310.18c4.7.87 9 1.56 13 2.11l1.9.3-147.09-10.1s51.52-4.77 132.19 7.69z\"\n      ></path>\n      <path\n        fill=\"#ccc\"\n        d=\"M480.39 305.05a407.52 407.52 0 0023.48 5.12c-80.67-12.46-132.21-7.69-132.21-7.69s51.24-10.58 108.73 2.57z\"\n      ></path>\n      <path\n        fill=\"#e6e6e6\"\n        d=\"M398.33 295a134.3 134.3 0 0159.08 3.85q12.45 3.65 23 6.24c-57.49-13.15-108.7-2.56-108.7-2.56s10.06-4.92 26.62-7.53z\"\n      ></path>\n      <path\n        fill=\"#fff\"\n        d=\"M465.1 37.84c37.28 13.46 89 23.23 89 23.23v251.75s-6.94 2.31-25.51.78c-2.74-.22-5.74-.53-9-1l-2.77-.36q-6.6-1.14-13-2.11a444.4 444.4 0 01-23.48-5.12q-10.57-2.61-23-6.24a134.3 134.3 0 00-59.01-3.77c-16.56 2.64-26.64 7.52-26.64 7.52V49.84c38.67-25.84 55.86-25.56 93.41-12z\"\n      ></path>\n\n      <foreignObject x=\"185\" y=\"63\" width=\"150\" height=\"225\">\n        {Boolean(children && children[0]) && children![0]}\n      </foreignObject>\n\n      <foreignObject x=\"387\" y=\"63\" width=\"150\" height=\"225\">\n        {Boolean(children && children[1]) && children![1]}\n      </foreignObject>\n\n      {Boolean(children && children[2]) && (\n        <path fill=\"#fff\" d=\"M554.14 61.53s69.5-28 171.81-12v251.06s-117-6.94-171.81 12z\"></path>\n      )}\n\n      <foreignObject x=\"566\" y=\"63\" width=\"150\" height=\"225\">\n        {Boolean(children && children[2]) && children![2]}\n      </foreignObject>\n    </svg>\n  );\n}\n","import { useMemo } from 'react';\n// Utils\nimport { parseSelectedGlyphs } from '../utils/helpers';\n// Icons\nimport { NoIcon } from 'icons/NoIcon';\nimport { YesIcon } from 'icons/YesIcon';\nimport { BoxCheckMarkIcon } from 'icons/BoxCheckMarkIcon';\n// Components\nimport { AvatarStrip, IconAvatar } from 'components/avatars';\nimport { GlyphCard } from 'components/cards/GlyphCard';\n\ntype PlayerGlyphsProps = {\n  player: GamePlayer;\n  glyphWidth: number;\n  done?: boolean;\n};\n\nexport function PlayerGlyphs({ player, glyphWidth, done }: PlayerGlyphsProps) {\n  const [positive, negative] = useMemo(\n    () => parseSelectedGlyphs(player.selectedGlyphs ?? {}),\n    [player.selectedGlyphs]\n  );\n\n  return (\n    <div className=\"q-player-glyphs\">\n      <AvatarStrip\n        player={player}\n        withName\n        className=\"q-player-glyphs__strip\"\n        icon={done ? <BoxCheckMarkIcon /> : undefined}\n      />\n      {positive.map((id, index) => {\n        return (\n          <div\n            className=\"q-player-glyphs__entry q-player-glyphs__entry--positive\"\n            key={`pos-${player.id}-${id}-${index}`}\n          >\n            <IconAvatar icon={<YesIcon />} size=\"small\" />\n            {Boolean(id) ? (\n              <GlyphCard width={glyphWidth} id={id} />\n            ) : (\n              <div\n                className=\"q-selections__no-glyph\"\n                style={{ width: `${glyphWidth}px`, height: `${glyphWidth}px` }}\n              />\n            )}\n          </div>\n        );\n      })}\n      {negative.map((id, index) => {\n        return (\n          <div\n            className=\"q-player-glyphs__entry q-player-glyphs__entry--negative\"\n            key={`neg-${player.id}-${id}-${index}`}\n          >\n            <IconAvatar icon={<NoIcon />} size=\"small\" />\n            {Boolean(id) ? (\n              <GlyphCard width={glyphWidth} id={id} />\n            ) : (\n              <div\n                className=\"q-selections__no-glyph\"\n                style={{ width: `${glyphWidth}px`, height: `${glyphWidth}px` }}\n              />\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import { SEPARATOR } from 'utils/constants';\n\n/**\n * Creates a glyph reference dictionary where true means positive and false means negative\n * @param positive\n * @param negative\n * @returns\n */\nexport const prepareGlyphs = (\n  positive: BooleanDictionary,\n  negative: BooleanDictionary\n): BooleanDictionary => {\n  const dict: BooleanDictionary = {};\n  Object.keys(positive).forEach((key) => (dict[key] = true));\n  Object.keys(negative).forEach((key) => (dict[key] = false));\n\n  return dict;\n};\n\nexport const parseSelectedGlyphs = (glyphs: BooleanDictionary) => {\n  const positive: string[] = [];\n  const negative: string[] = [];\n\n  Object.keys(glyphs).forEach((id) => {\n    if (glyphs[id]) {\n      positive.push(id);\n    } else {\n      negative.push(id);\n    }\n  });\n\n  while (positive.length < 3) {\n    positive.push('');\n  }\n\n  while (negative.length < 3) {\n    negative.push('');\n  }\n\n  return [positive, negative];\n};\n\n/**\n * Get list of players on each voted character\n * @param players\n * @param votes\n * @returns\n */\nexport const getRibbons = (players: GamePlayers, votes: StringDictionary): Record<string, GamePlayer[]> => {\n  const votesDict: Record<string, GamePlayer[]> = {};\n\n  Object.keys(votes).forEach((playerEntry) => {\n    const playerId = playerEntry.split(SEPARATOR)[1];\n    const characterId = votes[playerEntry].split(SEPARATOR)[1];\n\n    if (votesDict[characterId] === undefined) {\n      votesDict[characterId] = [];\n    }\n\n    votesDict[characterId].push(players[playerId]);\n  });\n\n  return votesDict;\n};\n\n/**\n * Removes prefixes from votes\n * @param votes\n * @returns\n */\nexport const prepareGuesses = (votes: StringDictionary): StringDictionary => {\n  const result: StringDictionary = {};\n\n  Object.keys(votes).forEach((playerEntry) => {\n    const playerId = playerEntry.split(SEPARATOR)[1];\n    const characterId = votes[playerEntry].split(SEPARATOR)[1];\n\n    result[playerId] = characterId;\n  });\n\n  return result;\n};\n","export function ClockIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <circle cx=\"256\" cy=\"256\" r=\"248\" fill=\"#ff5876\"></circle>\n      <path\n        fill=\"#e6485d\"\n        d=\"M256 486C122.048 486 12.919 379.795 8.18 247c-.107 2.988-.18 5.986-.18 9 0 136.967 111.033 248 248 248s248-111.033 248-248c0-3.014-.073-6.012-.18-9C499.081 379.795 389.952 486 256 486z\"\n      ></path>\n      <circle cx=\"256\" cy=\"256\" r=\"206.942\" fill=\"#e4eef9\"></circle>\n      <path\n        fill=\"#d5e0f2\"\n        d=\"M256 444.942c-111.274 0-202.022-87.828-206.736-197.942a209.92 209.92 0 00-.207 9c0 114.291 92.651 206.942 206.942 206.942S462.942 370.291 462.942 256c0-3.017-.079-6.015-.207-9C458.022 357.114 367.274 444.942 256 444.942z\"\n      ></path>\n      <path\n        fill=\"#405b6c\"\n        d=\"M331.17 183.393c-5.899-5.818-15.396-5.752-21.213.146L262.848 231.3c10.522 2.911 18.324 12.359 18.76 23.701l49.707-50.395c5.818-5.898 5.753-15.396-.145-21.213zM230.367 256c0-11.14 7.109-20.617 17.036-24.151l-92.462-82.397c-6.186-5.512-15.667-4.966-21.178 1.219s-4.966 15.667 1.219 21.178l95.407 85.021c-.01-.289-.022-.578-.022-.87z\"\n      ></path>\n      <circle cx=\"256\" cy=\"256\" r=\"25.633\" fill=\"#ff5876\"></circle>\n      <path\n        fill=\"#2d4456\"\n        d=\"M216.381 244.387l14.008 12.483c-.01-.29-.022-.578-.022-.87 0-11.14 7.109-20.617 17.036-24.151l-12.635-11.26c-8.792 5.283-15.446 13.747-18.387 23.798zm58.377-25.163l-11.91 12.075c10.522 2.911 18.324 12.359 18.76 23.701l13.128-13.31c-3.606-9.76-10.801-17.775-19.978-22.466z\"\n      ></path>\n      <path\n        fill=\"#e6485d\"\n        d=\"M256 263.634c-10.989 0-20.36-6.917-24.005-16.634a25.56 25.56 0 00-1.629 9c0 14.157 11.477 25.634 25.633 25.634 14.157 0 25.634-11.477 25.634-25.634a25.56 25.56 0 00-1.629-9c-3.644 9.716-13.015 16.634-24.004 16.634z\"\n      ></path>\n      <path d=\"M437.02 74.98C388.667 26.629 324.381 0 256 0S123.333 26.629 74.98 74.98C26.628 123.333 0 187.62 0 256c0 65.664 24.828 128.099 69.909 175.802a7.515 7.515 0 1010.923-10.323C38.398 376.577 15.029 317.809 15.029 256c0-64.366 25.065-124.879 70.578-170.392C131.121 40.094 191.634 15.029 256 15.029s124.879 25.065 170.392 70.579C471.905 131.121 496.97 191.634 496.97 256s-25.066 124.879-70.578 170.392C380.879 471.906 320.366 496.971 256 496.971c-56.111 0-110.745-19.706-153.838-55.487a7.515 7.515 0 00-9.601 11.563C138.346 491.063 196.389 512 256 512c68.381 0 132.667-26.629 181.02-74.98C485.372 388.667 512 324.38 512 256s-26.628-132.667-74.98-181.02z\"></path>\n      <path d=\"M402.975 109.552a7.514 7.514 0 00-.363-10.621C362.703 61.662 310.635 41.138 256 41.138c-57.391 0-111.348 22.349-151.93 62.932S41.138 198.608 41.138 256s22.349 111.348 62.932 151.931 94.539 62.931 151.93 62.931 111.348-22.349 151.931-62.931S470.862 313.392 470.862 256c0-49.329-16.259-95.72-47.02-134.156a7.514 7.514 0 10-11.734 9.39c28.605 35.743 43.724 78.886 43.724 124.766 0 110.188-89.645 199.833-199.833 199.833S56.167 366.188 56.167 256 145.812 56.167 256 56.167c50.813 0 99.238 19.088 136.354 53.748a7.512 7.512 0 0010.621-.363z\"></path>\n      <path d=\"M263.515 98.649V75.372a7.515 7.515 0 10-15.03 0v23.276a7.515 7.515 0 0015.03.001zm-15.03 314.702v23.276a7.515 7.515 0 1015.03 0v-23.276a7.515 7.515 0 10-15.03 0zm188.142-149.836a7.515 7.515 0 100-15.03h-23.276c-4.151 0-7.515 3.364-7.515 7.515s3.364 7.515 7.515 7.515zm-361.254-15.03c-4.151 0-7.515 3.364-7.515 7.515s3.364 7.515 7.515 7.515h23.276a7.515 7.515 0 100-15.03zm282.215 102.661a7.515 7.515 0 009.667-11.508l-81.672-68.603c2-3.919 3.245-8.283 3.539-12.904l47.69-48.35c8.687-8.451 8.585-23.551-.219-31.882-8.432-8.714-23.553-8.576-31.882.219l-44.363 44.977a33.14 33.14 0 00-11.013.378l-89.594-79.841c-8.887-8.252-23.953-7.381-31.831 1.833-8.269 9.28-7.447 23.559 1.833 31.829L173.1 215.93a7.516 7.516 0 0010-11.22l-43.355-38.635c-3.094-2.757-3.368-7.517-.611-10.61 2.624-3.072 7.653-3.36 10.61-.611l84.956 75.708a33.368 33.368 0 00-9.068 12.05l-20.094-17.906a7.516 7.516 0 00-9.999 11.221l27.576 24.573c2.204 16.183 16.106 28.698 32.885 28.698a33.025 33.025 0 0019.916-6.655zm-42.175-162.473c2.777-2.934 7.809-2.968 10.627-.072 2.936 2.777 2.969 7.81.072 10.627l-40.747 41.311a33.435 33.435 0 00-9.876-11.39zM256 274.169c-10.019 0-18.169-8.151-18.169-18.169s8.151-18.169 18.169-18.169c10.019 0 18.169 8.151 18.169 18.169s-8.15 18.169-18.169 18.169z\"></path>\n    </svg>\n  );\n}\n","export function PlayersIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#f7d6bf\"\n        d=\"M339 173.72a83.22 83.22 0 01-9.79 39.28c-22.11 40.29-72.72 55.52-113 33.41A82.23 82.23 0 01173 173.72a28.11 28.11 0 01.49-6.39c3.93-45.7 44.22-80.09 89.92-76.16a83.13 83.13 0 0176.16 76.16 28.11 28.11 0 00-.57 6.39z\"\n      ></path>\n      <path\n        fill=\"#b24432\"\n        d=\"M382.77 374.69v46.18H129.23v-46.18a118 118 0 01117.93-117.93h17.68a117.64 117.64 0 01117.93 117.93z\"\n      ></path>\n      <path\n        fill=\"#846e00\"\n        d=\"M167.55 287.22a115.77 115.77 0 00-38.32 87.47v34.88H8.84v-30.95A105.5 105.5 0 01114.49 273c18.67-.52 36.85 4.89 53.06 14.22z\"\n      ></path>\n      <path\n        fill=\"#eabfa2\"\n        d=\"M182.79 213c-5.41 37.83-40.29 64.37-78.13 59s-64.37-40.29-59-78.12 40.29-64.37 78.12-59A70.4 70.4 0 01173 166.84c0 2-.49 4.42-.49 6.39A90.21 90.21 0 00182.79 213z\"\n      ></path>\n      <path\n        fill=\"#840062\"\n        d=\"M503.16 378.13v30.95H382.77V374.2A117 117 0 00344 286.73c50.12-29.48 115-12.77 144.46 37.35a106.45 106.45 0 0114.75 54.05z\"\n      ></path>\n      <path\n        fill=\"#eabfa2\"\n        d=\"M467.29 203.69A69.36 69.36 0 01329.21 213a84.71 84.71 0 009.79-39.28 28.11 28.11 0 00-.49-6.39 69.83 69.83 0 01128.74 36.36z\"\n      ></path>\n      <path d=\"M321.84 420.87c0 4.92-3.93 8.36-8.84 8.85h-7.87a8.85 8.85 0 010-17.69H313a8.8 8.8 0 018.84 8.84zM512 378.13v30.95a8.81 8.81 0 01-8.84 8.85H391.62v2.95c0 4.91-3.94 8.35-8.85 8.84h-32.92a8.85 8.85 0 110-17.69h24.08v-37.34a109.15 109.15 0 00-109.09-109.08h-17.69a109.15 109.15 0 00-109.08 109.08v37.83h127.76a8.85 8.85 0 010 17.69h-136.6c-4.92 0-8.35-3.93-8.85-8.84v-3.44H8.84A8.81 8.81 0 010 409.08v-30.95A113.51 113.51 0 0175.18 271a78.82 78.82 0 01-30-30.95c-2.46-4.43-.5-9.34 3.43-11.8 4.43-2.45 9.34-.49 11.8 3.44a60.54 60.54 0 00113-17.2 88.17 88.17 0 01-9.34-45.2 61.26 61.26 0 00-84.47-15.71 62.63 62.63 0 00-26.53 49.62 8.85 8.85 0 11-17.69 0c0-43.24 35.37-77.63 78.12-77.63 20.15 0 38.82 7.86 53.56 21.62a91.87 91.87 0 01175.91 0 77.84 77.84 0 01108.1 112A90.19 90.19 0 01435.84 271 113.07 113.07 0 01512 378.13zM347.88 169.79a98.26 98.26 0 01-9.33 45.2 60.43 60.43 0 1048.64-70.26 56.25 56.25 0 00-39.31 25.06zm-166.57 3.93a74.34 74.34 0 0075.18 74.19c45.7 0 71.74-36.36 74.2-69.77 2.95-44.22-34.89-82.55-81.08-78.62-39.31 3.93-68.3 36.86-68.3 74.2zm-60.93 227v-26c0-32.43 13.27-64.37 32.92-85-64.36-28.5-136.1 18.67-136.1 88.45v22.6zm90.41-147.41a97.77 97.77 0 01-24.56-20.15A78 78 0 01152.81 271c4.92 2 9.34 3.93 13.76 5.9a128.3 128.3 0 0144.22-23.58zm90.41 0a128.26 128.26 0 0144.23 23.59 81.9 81.9 0 0113.76-5.9 78.56 78.56 0 01-33.42-37.84 80.4 80.4 0 01-24.57 20.15zm193.6 124.82a96.67 96.67 0 00-96.8-96.8 99.11 99.11 0 00-39.3 8.35c18.67 20.15 32.92 51.59 32.92 85v26H494.8z\"></path>\n      <path fill=\"none\" d=\"M0 0h512v512H0z\"></path>\n    </svg>\n  );\n}\n","export function SpeechBubbleAcceptedIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#23f1a8\"\n        d=\"M252.932 7.518C115.087 9.181 5.716 121.473 7.522 259.316c.53 40.45 10.739 78.56 28.394 112.144L11.518 485.69c-1.887 8.834 5.957 16.678 14.791 14.791l114.23-24.398c33.584 17.655 71.694 27.864 112.144 28.394 137.843 1.806 250.135-107.565 251.798-245.409C506.167 119.394 392.605 5.832 252.932 7.518z\"\n      ></path>\n      <circle cx=\"256\" cy=\"290.169\" r=\"186.061\" fill=\"#26d192\"></circle>\n      <path\n        fill=\"#26d192\"\n        d=\"M504.495 255.995c0 136.564-108.744 246.767-245.295 248.482a247.716 247.716 0 01-33.52-1.823c124.788-13.532 220.756-118.467 220.756-246.659 0-127.854-96.711-233.126-220.958-246.659A252.799 252.799 0 01256 7.499c137.239 0 248.495 111.256 248.495 248.496z\"\n      ></path>\n      <circle cx=\"256\" cy=\"255.999\" r=\"186.066\" fill=\"#f5f7f8\"></circle>\n      <path\n        fill=\"#d9e7eb\"\n        d=\"M442.061 255.999c0 102.764-83.296 186.061-186.061 186.061-14.762 0-29.119-1.718-42.882-4.966 98.007-2.342 176.743-82.516 176.743-181.095S311.125 77.247 213.118 74.904c13.763-3.248 28.119-4.966 42.882-4.966 102.765 0 186.061 83.297 186.061 186.061z\"\n      ></path>\n      <path\n        fill=\"#26d192\"\n        d=\"M229.364 328.182a24.499 24.499 0 01-17.324-7.176l-30.104-30.104c-9.568-9.568-9.568-25.08 0-34.648s25.08-9.568 34.648 0l12.78 12.78 66.047-66.048c9.568-9.568 25.08-9.568 34.648 0 9.567 9.567 9.567 25.08 0 34.648l-83.371 83.372a24.499 24.499 0 01-17.324 7.176z\"\n      ></path>\n      <g>\n        <path d=\"M483.889 139.28a7.499 7.499 0 00-10.097-3.249 7.5 7.5 0 00-3.249 10.097c17.77 34.627 26.912 73.649 26.439 112.849-.78 64.621-26.529 124.899-72.504 169.731-46.016 44.871-107.019 69.09-171.697 68.27-38.366-.502-74.955-9.766-108.752-27.533a7.513 7.513 0 00-5.056-.696l-114.23 24.398c-2.382.513-3.972-.771-4.546-1.344-.574-.574-1.853-2.165-1.344-4.546l24.398-114.23a7.504 7.504 0 00-.696-5.057c-17.767-33.796-27.03-70.385-27.533-108.752-.848-64.705 23.397-125.682 68.27-171.697 44.832-45.976 105.11-71.724 169.73-72.504 78.884-.979 153.324 36.827 199.209 101.059a7.5 7.5 0 1012.205-8.719C415.701 39.134 336.616-.986 252.841.019c-68.63.827-132.658 28.184-180.289 77.029C24.881 125.935-.878 190.7.023 259.415c.522 39.838 9.94 77.878 27.997 113.111L4.183 484.124c-1.419 6.645.602 13.48 5.407 18.285s11.641 6.822 18.286 5.407l111.598-23.837c35.234 18.058 73.274 27.476 113.112 27.996 1.166.016 2.32.023 3.484.023 67.413-.003 130.825-25.689 178.882-72.552 48.846-47.631 76.202-111.659 77.029-180.289.502-41.632-9.212-83.086-28.092-119.877z\"></path>\n        <path d=\"M78.312 273.759a7.496 7.496 0 00-8.201-6.728 7.5 7.5 0 00-6.727 8.2c4.694 47.557 26.81 91.548 62.275 123.87 35.705 32.542 81.995 50.463 130.341 50.463 106.732 0 193.566-86.833 193.566-193.565S362.733 62.433 256 62.433c-48.474 0-94.853 18.005-130.594 50.697-35.509 32.48-57.559 76.647-62.087 124.366a7.5 7.5 0 1014.933 1.417c4.176-44.009 24.518-84.749 57.278-114.715C168.5 94.041 211.284 77.433 256 77.433c98.462 0 178.566 80.104 178.566 178.566 0 98.461-80.104 178.565-178.566 178.565-44.6 0-87.301-16.531-120.237-46.549-32.719-29.82-53.122-70.397-57.451-114.256z\"></path>\n        <path d=\"M306.03 251.056a7.5 7.5 0 0010.607 10.607l18.726-18.727c12.476-12.478 12.476-32.778 0-45.255-12.479-12.477-32.777-12.477-45.256 0l-60.743 60.745-7.477-7.478c-12.476-12.476-32.777-12.478-45.255.001-12.477 12.477-12.477 32.777 0 45.255l30.104 30.104c6.044 6.044 14.08 9.372 22.627 9.372s16.583-3.328 22.627-9.372l38.986-38.985a7.5 7.5 0 00-10.607-10.607l-38.985 38.985c-3.211 3.211-7.48 4.979-12.021 4.979s-8.81-1.769-12.021-4.979l-30.104-30.104c-6.628-6.629-6.628-17.414 0-24.042 6.629-6.629 17.413-6.629 24.042 0l12.78 12.78a7.5 7.5 0 0010.606 0l66.047-66.048c6.627-6.629 17.414-6.629 24.041 0 6.629 6.628 6.628 17.413 0 24.041zm-133.271-54.747a7.5 7.5 0 00-7.5 7.5v4.493h-4.493c-4.142 0-7.5 3.357-7.5 7.5s3.358 7.5 7.5 7.5h4.493v4.493c0 4.143 3.358 7.5 7.5 7.5s7.5-3.357 7.5-7.5v-4.493h4.493c4.142 0 7.5-3.357 7.5-7.5s-3.358-7.5-7.5-7.5h-4.493v-4.493a7.5 7.5 0 00-7.5-7.5z\"></path>\n      </g>\n    </svg>\n  );\n}\n","import { getRandomItem } from 'utils/helpers';\n\nconst clues = ['agua', 'bola', 'coco', 'dedo', 'egua', 'flauta', 'gatilho', 'hélio', 'jaguar'];\n\nexport const mockClue = (): string => {\n  return getRandomItem(clues);\n};\n","import { sampleSize } from 'lodash';\nimport { getRandomItem } from 'utils/helpers';\n\nconst mockedDrawings = [\n  [\n    88, 263, 88, 262, 89, 262, 89, 262, 90, 261, 92, 258, 95, 253, 97, 251, 100, 249, 108, 238, 111, 235, 121,\n    224, 124, 221, 136, 209, 140, 204, 143, 201, 158, 186, 162, 182, 178, 164, 183, 159, 188, 154, 205, 133,\n    209, 128, 212, 124, 224, 110, 226, 107, 228, 105, 235, 98, 236, 97, 238, 95, 239, 94, 240, 93, 241, 92,\n    242, 91, 244, 90, 244, 89, 246, 88, 249, 87, 249, 86, 249, 86, 250, 86, 250, 86, 251, 86, 252, 86, 254,\n    87, 256, 87, 258, 88, 260, 88, 263, 90, 264, 90, 270, 93, 276, 98, 280, 100, 287, 105, 302, 117, 310, 123,\n    318, 129, 337, 143, 344, 150, 353, 155, 359, 161, 361, 162, 365, 166, 372, 170, 376, 172, 377, 173, 385,\n    176, 390, 179, 391, 180, 395, 182, 396, 183, 398, 184, 399, 184, 400, 185, 400, 186, 401, 186, 401, 186,\n    401, 186, 401, 186, 401, 187, 401, 187, 401, 188, 402, 188, 402, 189, 403, 190, 403, 191, 403, 192, 404,\n    192, 404, 193, 404, 193, 404, 194, 405, 194, 405, 195, 405, 196, 405, 196, 405, 196, 406, 198, 406, 199,\n    407, 200, 407, 200, 407, 201, 408, 201, 409, 202, 409, 204, 410, 205, 411, 207, 412, 209, 412, 209, 415,\n    212, 416, 214, 417, 215, 418, 216, 419, 217, 419, 217, 420, 218, 421, 218, 421, 219, 421, 219, 421, 219,\n    422, 220, 422, 221, 422, 221, 423, 222, 423, 222, 423, 223, 423, 223, 424, 224, 424, 225, 424, 227, 424,\n    227, 424, 229, 424, 230, 424, 231, 425, 233, 425, 234, 425, 235, 425, 235, 425, 238, 425, 238, 425, 239,\n    424, 242, 423, 243, 423, 244, 423, 245, 421, 247, 417, 253, 410, 264, 408, 266, 403, 271, 396, 278, 389,\n    283, 380, 291, 369, 301, 358, 311, 355, 314, 344, 324, 329, 337, 314, 350, 299, 363, 287, 375, 285, 377,\n    276, 385, 274, 387, 268, 392, 266, 393, 257, 401, 256, 402, 253, 404, 252, 405, 251, 406, 249, 408, 245,\n    410, 245, 411, 245, 411, 243, 412, 243, 413, 242, 413, 242, 413, 242, 414, 241, 414, 241, 414, 241, 414,\n    240, 415, 239, 415, 239, 415, 239, 415, 238, 416, 238, 416, 237, 416, 237, 416, 235, 415, 234, 414, 230,\n    412, 222, 407, 215, 404, 204, 398, 195, 393, 190, 389, 183, 384, 179, 378, 173, 373, 169, 366, 167, 362,\n    162, 353, 161, 352, 157, 344, 154, 340, 150, 334, 148, 330, 145, 328, 142, 325, 141, 323, 139, 321, 137,\n    319, 136, 317, 134, 315, 134, 315, 132, 312, 132, 312, 132, 311, 131, 310, 130, 308, 129, 308, 127, 306,\n    127, 305, 126, 305, 124, 304, 123, 303, 123, 302, 121, 301, 121, 301, 119, 299, 118, 298, 118, 298, 115,\n    295, 115, 294, 110, 289, 107, 284, 106, 283, 104, 281, 101, 278, 100, 277, 100, 277, 98, 276, 98, 275, 97,\n    274, 96, 274, 96, 274, 96, 274, 95, 273, 94, 272, 94, 272, 94, 272, 93, 272, 93, 272, 93, 272, 93.1,\n    272.1,\n  ],\n  [\n    100, 47, 100, 48, 100, 48, 99, 50, 99, 50, 98, 51, 97, 52, 97, 54, 96, 55, 95, 56, 94, 58, 93, 59, 93, 60,\n    92, 61, 92, 62, 91, 63, 91, 64, 91, 65, 91, 66, 91, 67, 91, 69, 91, 70, 91, 72, 91, 73, 92, 76, 93, 81,\n    95, 85, 97, 89, 100, 93, 101, 95, 105, 100, 105, 100, 108, 103, 109, 104, 111, 106, 114, 108, 115, 109,\n    118, 110, 118, 111, 120, 112, 122, 113, 123, 114, 126, 115, 129, 116, 130, 117, 133, 117, 134, 118, 139,\n    120, 140, 121, 141, 121, 143, 122, 150, 125, 156, 128, 160, 131, 164, 133, 165, 134, 169, 136, 172, 140,\n    176, 142, 178, 143, 181, 146, 182, 147, 185, 149, 186, 149, 189, 152, 190, 153, 193, 155, 198, 159, 201,\n    163, 202, 164, 204, 166, 206, 167, 206, 168, 206, 170, 207, 170, 208, 173, 208, 174, 209, 181, 211, 185,\n    212, 191, 215, 210, 216, 220, 218, 229, 218, 231, 220, 240, 220, 245, 220, 253, 220, 258, 220, 262, 220,\n    267, 220, 268, 219, 269, 218, 273, 218, 276, 217, 279, 215, 282, 215, 283, 214, 285, 213, 286, 213, 287,\n    211, 289, 209, 291, 209, 292, 208, 294, 206, 295, 205, 297, 205, 297, 204, 299, 203, 299, 202, 300, 202,\n    301, 202.1, 301.1,\n  ],\n  [\n    399, 58, 398, 58, 398, 58, 397, 59, 397, 59, 397, 59, 396, 59, 396, 59, 394, 61, 394, 61, 391, 64, 389,\n    66, 386, 71, 385, 72, 384, 75, 380, 83, 380, 86, 379, 94, 378, 95, 378, 103, 378, 104, 378, 105, 378, 106,\n    378, 107, 379, 108, 379, 108, 380, 108, 381, 109, 381, 110, 382, 111, 387, 114, 388, 115, 389, 116, 390,\n    118, 396, 123, 398, 125, 400, 126, 402, 128, 403, 128, 407, 129, 409, 130, 411, 130, 412, 130, 413, 130,\n    414, 130, 415, 130, 415, 129, 415, 129, 416, 129, 416, 129, 416, 128, 417, 127, 421, 123, 424, 118, 424,\n    118, 427, 115, 427, 113, 428, 112, 430, 109, 430, 108, 431, 106, 434, 101, 434, 99, 434, 97, 435, 96, 435,\n    95, 435, 93, 435, 92, 435, 92, 435, 91, 435, 90, 435, 87, 435, 85, 435, 82, 435, 82, 434, 80, 433, 78,\n    432, 77, 430, 73, 430, 72, 429, 72, 428, 71, 427, 70, 426, 69, 425, 68, 424, 67, 423, 67, 422, 66, 418,\n    63, 416, 63, 414, 61, 412, 61, 411, 61, 409, 61, 409, 61, 407, 61, 406, 61, 406, 61, 405, 61, 405, 61,\n    404, 61, 404, 61, 403, 61, 403, 61, 403, 61, 403, 61, 401, 61, 400, 62, 398, 63, 398, 63, 396, 63, 395,\n    63, 395, 63, 395, 63, 395.1, 63.1,\n  ],\n  [\n    381, 433, 381, 432, 381, 431, 380, 429, 380, 427, 379, 425, 379, 422, 379, 421, 378, 418, 377, 408, 376,\n    404, 376, 399, 375, 394, 375, 385, 374, 378, 374, 369, 373, 363, 372, 351, 372, 340, 372, 331, 371, 319,\n    371, 312, 370, 308, 369, 302, 368, 297, 368, 296, 368, 294, 368, 292, 367, 291, 367, 290, 367, 289, 366,\n    288, 366, 287, 366, 286, 366, 285, 364, 282, 364, 280, 363, 277, 362, 276, 362, 275, 362, 274, 362, 274,\n    361, 272, 361, 271, 361, 270, 360, 269, 360, 268, 360, 268, 359, 267, 359, 265, 359, 265, 359, 265, 359,\n    264, 359, 264, 359, 264, 359, 263, 359, 263, 359, 262, 359, 262, 358, 262, 358, 261, 358, 261, 358, 261,\n    358, 260, 358, 260, 358, 260, 357, 260, 357, 259, 357, 259, 357, 259, 357, 259, 357, 259, 357, 259, 357,\n    261, 356, 262, 356, 263, 356, 264, 356, 269, 356, 271, 354, 283, 352, 295, 352, 300, 351, 304, 348, 318,\n    342, 352, 340, 366, 337, 383, 333, 402, 332, 407, 329, 421, 326, 435, 324, 442, 323, 445, 322, 452, 322,\n    454, 322, 455, 322, 455, 321, 455, 321, 455, 321, 456, 321, 456, 321, 456, 321, 456, 321, 457, 321, 458,\n    321, 459, 319, 461, 317, 466, 317, 467, 316, 468, 316, 470, 315, 472, 314, 473, 314, 473, 313, 473, 313,\n    473, 313, 472, 312, 470, 310, 464, 304, 453, 302, 449, 297, 438, 295, 435, 294, 431, 292, 428, 288, 418,\n    287, 416, 283, 406, 283, 404, 282, 399, 281, 397, 280, 394, 277, 380, 276, 377, 276, 373, 273, 362, 273,\n    357, 272, 351, 271, 347, 271, 342, 271, 331, 271, 327, 271, 324, 271, 315, 271, 312, 271, 309, 271, 307,\n    271, 305, 271, 303, 272, 301, 272, 299, 272, 298, 272, 298, 272, 297, 272, 296, 272, 295, 272, 292, 272,\n    290, 272, 289, 272, 288, 272, 287, 273, 286, 273, 285, 273, 284, 273, 283, 273, 281, 273, 281, 273, 281,\n    273, 280, 273, 280, 273, 280, 273.1, 280.1,\n  ],\n  [\n    62, 368, 61, 369, 61, 369, 60, 370, 60, 371, 60, 372, 58, 374, 58, 376, 56, 379, 55, 381, 55, 383, 54,\n    384, 53, 390, 53, 392, 53, 393, 53, 395, 53, 397, 53, 400, 54, 401, 54, 402, 55, 402, 55, 402, 55, 402,\n    57, 403, 57, 403, 59, 404, 63, 405, 64, 405, 65, 405, 66, 406, 71, 407, 73, 407, 75, 407, 80, 407, 82,\n    407, 85, 407, 87, 407, 92, 407, 94, 407, 100, 407, 101, 407, 102, 407, 103, 406, 104, 406, 105, 405, 108,\n    403, 109, 402, 110, 401, 111, 400, 114, 398, 115, 396, 116, 395, 121, 388, 122, 386, 123, 384, 124, 381,\n    125, 379, 126, 378, 126, 376, 126, 374, 126, 373, 126, 369, 126, 368, 126, 368, 126, 367, 126, 366, 126,\n    366, 126, 365, 125, 364, 125, 363, 124, 363, 123, 363, 123, 363, 122, 363, 121, 363, 120, 363, 118, 363,\n    116, 363, 112, 363, 108, 364, 105, 364, 102, 365, 101, 365, 100, 365, 100, 365, 99, 365, 99, 365, 99, 365,\n    98, 365, 98, 365, 98, 364, 98, 364, 97, 364, 97, 364, 97, 363, 97, 363, 96, 361, 96, 361, 96, 360, 96,\n    355, 95, 353, 95, 350, 95, 349, 95, 348, 95, 343, 95, 339, 95, 334, 95, 334, 95, 330, 95, 327, 95, 325,\n    96, 323, 97, 321, 97, 321, 97, 320, 97, 319, 98, 318, 98, 317, 99, 317, 99, 316, 100, 315, 101, 315, 101,\n    314, 101, 314, 102, 313, 102, 311, 102, 311, 103, 310, 103, 310, 103, 309, 103, 308, 102, 308, 102, 308,\n    101, 307, 101, 307, 101, 307, 100, 306, 99, 305, 95, 302, 94, 301, 93, 301, 92, 300, 90, 299, 88, 297, 88,\n    297, 88, 297, 87, 296, 87, 295, 86, 294, 86, 294, 86, 293, 85, 291, 85, 290, 85, 288, 84, 286, 84, 285,\n    83, 279, 83, 277, 82, 276, 82, 273, 82, 272, 82, 270, 82, 268, 82, 266, 82, 263, 82, 259, 82, 256, 82,\n    252, 81, 243, 81, 240, 81, 232, 81, 231, 81, 230, 81, 228, 81, 223, 81, 222, 81, 220, 82, 220, 82, 216,\n    82, 214, 83, 212, 84, 211, 84, 210, 85, 208, 86, 206, 86, 205, 87, 203, 89, 201, 90, 200, 92, 197, 93,\n    196, 94, 195, 97, 192, 98, 191, 99, 190, 99, 190, 103, 188, 104, 186, 108, 184, 110, 183, 111, 182, 112,\n    181, 115, 180, 117, 179, 119, 177, 121, 177, 122, 176, 122, 176, 122, 176, 124, 176, 127, 175, 128, 175,\n    134, 174, 135, 174, 141, 174, 144, 174, 151, 174, 154, 174, 168, 174, 185, 175, 201, 178, 222, 180, 242,\n    185, 261, 189, 287, 192, 314, 194, 336, 194, 342, 194, 362, 194, 381, 194, 401, 194, 406, 194, 432, 194,\n    435, 194, 440, 193, 442, 193, 443, 193, 443, 193, 443.1, 193.1,\n  ],\n  [\n    348, 50, 348, 50, 348, 51, 347, 52, 347, 55, 345, 57, 344, 60, 341, 64, 340, 70, 336, 77, 321, 113, 317,\n    125, 307, 145, 302, 157, 286, 197, 282, 206, 267, 238, 261, 255, 258, 262, 249, 285, 246, 290, 237, 311,\n    236, 315, 233, 321, 225, 336, 222, 342, 215, 357, 212, 362, 207, 374, 204, 378, 203, 382, 201, 385, 195,\n    395, 194, 398, 191, 405, 189, 407, 188, 409, 187, 413, 185, 416, 184, 417, 184, 418, 181, 422, 181, 423,\n    180, 424, 180, 425, 180, 426, 179, 428, 178, 428, 178, 429, 178, 429, 178, 429, 178, 429, 178, 430, 177,\n    430, 177, 430, 177, 431, 176, 431, 176, 432, 176, 432, 176, 433, 175, 433, 175, 433, 175, 433, 175, 434,\n    174, 434, 174, 435, 174, 435, 173, 436, 172, 436, 172, 437, 171, 438, 170, 438, 170, 439, 170, 439, 169,\n    440, 168, 440, 168, 441, 167, 441, 167, 442, 166, 443, 165, 443, 165, 444, 165, 444, 165, 444, 165, 445,\n    164, 445, 164, 445, 164, 445, 164, 446, 164, 446, 163, 446, 163.1, 446.1,\n  ],\n  [\n    438, 422, 439, 422, 439, 422, 439, 422, 439, 422, 440, 422, 440, 422, 441, 422, 443, 422, 444, 422, 445,\n    422, 446, 422, 446, 422, 447, 421, 448, 420, 451, 416, 452, 415, 453, 412, 454, 410, 456, 408, 457, 405,\n    458, 402, 459, 396, 460, 395, 460, 393, 460, 393, 459, 391, 459, 391, 457, 388, 456, 387, 456, 387, 456,\n    386, 455, 386, 454, 385, 453, 385, 452, 385, 448, 384, 448, 384, 445, 384, 443, 384, 440, 384, 439, 384,\n    436, 385, 436, 385, 435, 385, 434, 385, 432, 387, 430, 388, 429, 389, 428, 389, 426, 391, 425, 392, 425,\n    392, 424, 392, 424, 393, 424, 393, 424, 393, 424, 394, 424, 394, 424, 395, 424, 396, 424, 398, 424, 399,\n    424, 400, 424, 401, 424, 404, 424, 408, 424, 410, 426, 414, 427, 417, 428, 419, 429, 421, 429, 422, 430,\n    423, 430, 423, 430, 423, 431, 424, 431, 424, 431, 424, 432, 425, 432, 425, 432, 425, 432, 426, 433, 427,\n    434, 427, 434, 427, 434, 428, 434.1, 428.1,\n  ],\n  [\n    108, 157, 107, 157, 107, 157, 106, 157, 106, 157, 106, 157, 105, 157, 104, 157, 103, 157, 99, 156, 97,\n    155, 95, 155, 86, 152, 77, 150, 63, 148, 43, 147, 36, 146, 24, 146, 10, 146, -0.9, 146.1,\n  ],\n  [\n    2, 145, 2, 145, 6, 145, 10, 145, 17, 145, 18, 145, 20, 144, 21, 144, 21, 143, 21, 143, 22, 143, 22, 142,\n    23, 142, 23, 142, 25, 141, 26, 140, 27, 139, 28, 139, 29, 139, 30, 138, 31, 137, 35, 134, 38, 132, 39,\n    131, 48, 127, 51, 126, 53, 125, 60, 121, 63, 120, 65, 120, 65, 119, 65, 120, 65, 120, 65, 121, 65, 123,\n    64, 127, 63, 130, 62, 134, 60, 142, 60, 145, 58, 148, 57, 153, 56, 156, 55, 158, 55, 161, 54, 162, 54,\n    163, 54, 164, 54, 165, 53, 166, 53, 168, 53, 170, 53, 171, 53, 172, 52, 172, 52, 172, 52, 173, 52, 173,\n    52, 174, 52, 174, 52, 174, 52, 174, 52, 175, 51, 175, 51, 174, 51, 174, 50, 173, 49, 171, 48, 170, 46,\n    166, 44, 162, 38, 151, 32, 140, 31, 137, 29, 132, 26, 126, 25, 123, 24, 122, 24, 122, 24, 121, 23, 120,\n    23, 120, 24, 120, 24, 120, 26, 121, 27, 121, 30, 123, 33, 125, 35, 126, 42, 131, 45, 134, 49, 136, 50,\n    136, 52, 138, 56, 141, 59, 143, 62, 146, 65, 149, 68, 152, 71, 155, 74, 158, 76, 159, 77, 160, 80, 162,\n    81, 162, 82, 163, 83, 163, 83, 163, 84, 163, 84.1, 163.1,\n  ],\n  [\n    136, 34, 139, 34, 140, 35, 142, 35, 143, 35, 146, 36, 148, 36, 151, 37, 152, 37, 153, 37, 155, 38, 157,\n    38, 159, 39, 162, 39, 163, 40, 166, 40, 168, 40, 170, 40, 179, 42, 183, 43, 184, 43, 185, 43, 187, 44,\n    188, 44, 190, 46, 193, 47, 197, 49, 198, 50, 205, 55, 206, 56, 213, 62, 218, 67, 219, 68, 224, 73, 226,\n    75, 227, 77, 236, 86, 239, 89, 246, 98, 250, 101, 259, 113, 263, 116, 265, 118, 268, 121, 276, 132, 286,\n    143, 289, 147, 291, 149, 293, 152, 294, 154, 304, 165, 306, 167, 307, 169, 316, 177, 318, 179, 319, 180,\n    321, 183, 322, 183, 327, 190, 328, 191, 330, 194, 331, 195, 335, 199, 336, 200, 337, 201, 338, 203, 339,\n    204, 340, 204, 341, 205, 346, 212, 350, 216, 351, 218, 353, 220, 358, 226, 359, 228, 364, 232, 365, 233,\n    368, 236, 368, 237, 370, 239, 374, 242, 375, 243, 377, 245, 379, 247, 386, 254, 388, 256, 392, 259, 395,\n    263, 396, 263, 397, 264, 399, 267, 400, 269, 403, 271, 412, 280, 415, 284, 418, 287, 422, 292, 425, 294,\n    426, 295, 426, 296, 426, 296, 426, 296, 427, 297, 427, 297, 427, 297, 427, 298, 427.1, 298.1,\n  ],\n  [\n    191, 254, 191, 254, 191, 254, 191, 254, 191, 255, 191, 258, 191, 260, 191, 261, 191, 263, 191, 267, 191,\n    268, 191, 276, 191, 277, 191, 278, 192, 282, 194, 287, 194, 288, 195, 291, 195, 292, 195, 292, 196, 293,\n    196, 295, 196, 296, 197, 297, 197, 298, 198, 299, 198, 300, 201, 303, 202, 305, 207, 309, 208, 309, 209,\n    311, 210, 312, 211, 312, 216, 315, 217, 315, 218, 316, 219, 316, 220, 316, 220, 316, 224, 316, 224, 316,\n    226, 317, 227, 317, 229, 317, 231, 317, 234, 317, 236, 316, 242, 315, 244, 315, 246, 315, 249, 315, 252,\n    314, 256, 313, 259, 313, 261, 313, 262, 312, 265, 312, 270, 310, 272, 309, 273, 308, 275, 307, 279, 305,\n    280, 305, 280, 304, 282, 303, 283, 302, 283, 302, 284, 301, 284, 301, 285, 300, 287, 298, 288, 297, 289,\n    295, 291, 293, 293, 291, 294, 290, 295, 289, 296, 288, 296, 287, 297, 287, 297, 287, 297, 286, 298, 285,\n    299, 283, 300, 282, 300, 281, 301, 281, 303, 278, 306, 273, 306, 272, 307, 270, 308, 267, 308, 266, 309,\n    265, 309, 264, 310, 262, 310, 261, 310, 259, 310, 257, 310, 256, 310, 254, 310, 253, 310, 247, 310, 246,\n    309, 245, 309, 244, 309, 244, 308, 243, 308, 241, 308, 240, 308, 239, 307, 239, 307, 237, 306, 237, 305,\n    235, 305, 234, 305, 234, 305, 233, 305, 233, 305, 233, 305.1, 233.1,\n  ],\n  [\n    259, 152, 258, 153, 258, 154, 257, 155, 256, 158, 254, 160, 252, 165, 251, 167, 250, 168, 250, 170, 249,\n    171, 249, 172, 248, 173, 248, 174, 248, 174, 248, 174, 248, 175, 248, 176, 248, 178, 248, 179, 248, 180,\n    248, 181, 250, 186, 251, 188, 251, 189, 253, 190, 254, 191, 254, 191, 255, 191, 256, 191, 256, 191, 256,\n    191, 257, 191, 257, 191, 257, 191, 258, 190, 259, 190, 260, 189, 260, 189, 261, 188, 261, 188, 261, 187,\n    262, 187, 262, 186, 262, 185, 263, 184, 263, 183, 264, 181, 264, 179, 265, 177, 265, 177, 265, 177, 266,\n    176, 266, 175, 266, 175, 266, 172, 266, 171, 266, 169, 266, 168, 266, 167, 265, 166, 264, 164, 264, 163,\n    263, 161, 263, 160, 262, 160, 262, 159, 262, 159, 261, 158, 260, 157, 259, 156, 258, 155, 257, 154, 256,\n    154, 255, 153, 254, 153, 254, 153, 254, 153, 253, 153, 253, 153, 253.1, 153.1,\n  ],\n  [\n    182, 208, 182, 208, 182, 209, 182, 210, 182, 211, 182, 212, 182, 215, 181, 217, 181, 219, 181, 221, 181,\n    222, 181, 222, 181, 223, 181, 224, 181, 224, 181, 224, 182, 225, 182, 226, 182, 226, 183, 227, 184, 228,\n    184, 229, 185, 229, 185, 229, 188, 230, 190, 231, 192, 232, 193, 232, 193, 232, 193, 232, 194, 231, 194,\n    231, 194, 230, 194, 229, 194, 227, 195, 224, 195, 223, 195, 220, 195, 218, 195, 217, 195, 215, 195, 214,\n    195, 211, 195, 211, 195, 210, 195, 210, 195, 210, 194, 209, 193, 208, 192, 207, 191, 206, 190, 205, 190,\n    205, 190, 205, 188, 204, 188, 204, 188, 203, 187, 203, 187.1, 203.1,\n  ],\n  [\n    251, 236, 250, 236, 249, 236, 248, 235, 247, 235, 247, 235, 246, 235, 246, 235, 245, 234, 245, 234, 245,\n    234, 244, 233, 244, 233, 244, 233, 243, 232, 242, 231, 241, 229, 240, 229, 239, 228, 239, 227, 238, 227,\n    238, 226, 238, 226, 238, 226, 238, 226, 238, 226, 237, 228, 237, 229, 237, 230, 237, 230, 237, 231, 237,\n    233, 237, 234, 236, 236, 236, 238, 236, 240, 236, 242, 235, 242, 235, 242, 235, 243, 236, 243, 236, 243,\n    236, 243, 237, 243, 238, 243, 238, 243, 239, 242, 239, 242, 240, 242, 241, 242, 241, 241, 242, 241, 242,\n    241, 243, 241, 243, 240, 243, 240, 243, 240, 244, 240, 244, 240, 244, 239, 244, 239, 245, 239, 245, 239,\n    245, 239, 245, 238, 245, 238, 246, 237, 247, 237, 247, 237, 247, 237, 247, 237, 247, 236, 248, 236, 248,\n    236, 248, 236, 249, 236, 249.1, 236.1,\n  ],\n];\n\nexport const mockDrawing = () => {\n  return sampleSize(mockedDrawings, getRandomItem([2, 3, 3, 4, 5]));\n};\n"],"names":["arteRuimTimer","require","ArteRuimTimerSound","useGlobalState","volume","useAudio","src","autoPlay","loop","audio","controls","useEffect","airHorn","DJPruPruPruSound","CanvasResizer","canvasSize","setCanvasSize","type","position","icon","DragOutlined","label","labelText","content","className","value","min","max","step","onChange","pt","en","CanvasSVG","drawing","width","height","strokeWidth","viewBox","konvaLines","JSON","parse","paths","map","lineArr","path","x","y","length","strokeWidthBySize","small","medium","large","xmlns","overflow","style","index","d","fill","stroke","strokeLinecap","strokeLinejoin","strokeMiterlimit","DrawingCanvas","lines","setLines","showControls","willReadFrequently","useState","drawingHistory","setDrawingHistory","isDrawing","useRef","startDrawing","current","stopDrawing","startLine","e","pos","target","getStage","getPointerPosition","Math","round","finishLine","point","lastLineEntry","concat","splice","handleMouseDown","handleMouseMove","lastLine","handleMouseUp","handleOffsetMouseUp","handleOffsetMouseDown","direction","align","onMouseDown","onMousemove","onMouseup","onTouchStart","onTouchMove","onTouchEnd","onMouseLeave","window","document","addEventListener","onMouseEnter","removeEventListener","clsx","id","line","i","points","tension","lineCap","globalCompositeOperation","onClick","linesCopy","drawingHistoryCopy","pop","push","disabled","UndoOutlined","lastUndoLine","DeleteOutlined","CharacterCard","size","overlayColor","character","hideName","dualTranslate","useLanguage","shouldBeBlurred","useBlurCards","baseUrl","useTDBaseUrl","isBlurred","imageURL","replace","cardId","name","PUBLIC_URL","alt","fallback","preview","title","CrimeItemCard","item","cardWidth","activeColor","isSelected","isDebugEnabled","useDevFeatures","borderColor","backgroundColor","toUpperCase","color","maxWidth","imageId","GroupQuestionCard","question","overrideNumber","prefix","number","suffix","MonsterCard","currentMonster","props","monsterOrientation","setMonsterOrientation","defaultCardWidth","useCardWidth","gap","useEffectOnce","orientation","baseClass","RotateRightOutlined","RotateLeftOutlined","MovieCard","movie","disableSuffix","disablePrefix","prefixColor","suffixColor","MovieReviewCard","text","highlights","highlightClassName","searchWords","autoEscape","textToHighlight","SignCard","href","signs","Card","children","header","footer","randomColor","headerClassName","footerClassName","bgColor","getColorFromLetter","startsWith","BookPages","leftPage","rightPage","DoorFrame","xmlnsXlink","Boolean","x1","x2","y1","y2","gradientUnits","offset","stopColor","xlinkHref","isolation","mixBlendMode","opacity","SceneTile","tile","onSelectValue","language","description","values","entry","isActive","isInative","undefined","CheckCircleFilled","tileId","SuggestionEasel","onChangeInput","onPressEnter","translate","placeholder","bordered","autoComplete","readOnly","unknownText","Achievements","players","achievements","reference","getAnimationClass","level","achievement","achievementObj","player","playerId","delay","avatarId","shape","Container","contained","titleProps","childrenContainerProps","spaceProps","restTitleProps","childrenClassName","wrap","childrenDirection","restChildrenContainerProps","ImageBlurButton","ghost","blurCard","isBlurEnabled","placement","EyeOutlined","EyeInvisibleOutlined","ImageBlurButtonContainer","rest","ImageCard","previewImageId","fileExtension","fallbackName","booleanPreviewConfig","maskClassName","ImageCardBack","ImageCardButton","buttonPosition","over","buttonText","buttonProps","isTop","iconComponent","DownCircleOutlined","UpCircleOutlined","buttonClassName","restButtonProps","button","ImageCardHand","hand","onSelectCard","selectButtonText","selectButtonIcon","selectButtonClass","sizeRatio","cardSize","minCardSize","disabledSelectButton","selectedCards","cardClassName","minWidth","ImageCardPreloadHand","ImageCardSelectButton","selectLabel","deselectLabel","custom","CardHighlight","iconSize","MetricHighlight","iconPlacement","PlayersHighlight","PointsHighlight","TimeHighlight","GainedPoint","gainedPoint","order","isPositive","isNegative","GainedPoints","gainedPoints","gainedPointsDescriptions","Array","isArray","RankingBoard","ranking","hideGainedPoints","displayStep","setDisplayStep","sortedRanking","setSortedRanking","reRank","setReRank","useDimensions","maxPoints","useMemo","scores","newScore","seconds","useCountdown","duration","autoStart","onExpire","positions","lastPosition","lastPoints","rankByFinalScoreDict","orderBy","reduce","acc","rankByPreviousScore","tempSortedRanking","newEntry","previousScore","hPosition","top","CrownFilled","StepRankingWrapper","subtitle","white","useTemporarilyHidePlayersBar","CaretUpOutlined","useColorizeBackground","user","currentRound","team","appElement","getElementById","classList","add","remove","getMovieTitles","movies","A","B","C","D","TrackIcon","track","IconComponent","PictureIcon","AlienCommunicationIcon","FairyTaleIcon","CrimeSceneIcon","CrossWordsIcon","DetectiveIcon","SkiingIcon","PassportIcon","QueueIcon","DreamIcon","PathIcon","ChoiceIcon","DirectionsIcon","SheepIcon","LoveIcon","TrickOrTreatIcon","WavelengthDeviceIcon","ColorWheelIcon","TrendingIcon","MagicDoorIcon","RevolverIcon","MirrorIcon","MonsterIcon","BoxingGlovesIcon","CriminalIcon","ReviewIcon","GuessIcon","MovieTheaterIcon","game","TDIcon","TITLES","INSTRUCTIONS","megamix","TrackInstructions","instruction","ClubLine","playersList","sortPlayers","winners","filter","losers","ClubberAvatar","clubberId","animate","VIPLineIcon","FallbackComponent","_","UnderConstructionIcon","mockSeeding","seeds","data","forEach","seed","card","stringify","mockDrawing","prompt","getRandomItem","prompts","ids","cards","tree","answers","mockClue","wave","likeTweet","singleClue","outfits","mockSelection","options","propertyName","random","MinigameTitle","TrackArteRuim","onSubmitAnswer","isLoading","useLoading","onSelect","useMock","variant","option","ready","LETTERS","getColorFromIndex","loading","TrackLabirintoSecreto","String","trees","IconAvatar","TreeOneIcon","TreeTwoIcon","TreeThreeIcon","MapIcon","Object","arr","Fragment","RightSquareOutlined","TrackContadoresHistorias","margin","TrackCrimesHediondos","KnifeIcon","LoupeIcon","scenes","causeOfDeath","crimeIndexes","reasonForEvidence","location","sceneA","sceneB","sceneC","SpreadsheetGrid","columns","rows","topLeftCorner","gridTemplateColumns","gridTemplateRows","role","SpreadsheetCell","SpeechBubble","shadow","TrackCruzaPalavras","clue","CellPlusButton","PlusCircleFilled","TrackDetetivesImaginativos","table","bot","BOTS_LIST","AVATARS","TrackDilemaDosEsquiadores","dilemma","left","right","mouseX","setMouseX","setDirection","clientX","screenWidth","innerWidth","SnowHillIcon","TrackEspiaoEntreNos","answer","setAnswer","onSubmit","roles","roleIndex","TrackFileiraDeFatos","scenarios","EmojiCard","TrackGaleriaDeSonhos","theme","TrackMenteColetiva","Candidate","head","body","interest","need","funFact","TrackNamoroOuAmizade","heads","bodies","interests","needs","funFacts","TrackNaRuaDoMedo","h","StreetIcon","house","HouseCard","candyLeftover","TrackOndaTelepatica","setPosition","cardSideClass","getColorModifier","ArrowLeftOutlined","MinusOutlined","ArrowRightOutlined","TrackPalhetaDeCores","palette","read","SplatterSVG","SocialProfile","handle","verified","Tweet","onLike","onDislike","block","LikeFilled","DislikeFilled","TrackPolemicaDaVez","TrackPortaDosDesesperados","doorWidth","doors","Book","book","TrackQuemNaoMata","keys","ShooterIcon","TrackRetratoFalado","TrackSuperCampeonato","contenders","challenge","contender","SuspectCard","suspect","TrackTestemunhaOcular","suspects","SpeechBubbleAcceptedIcon","SpeechBubbleDeclinedIcon","TrackUeSoIsso","onSubmitClue","TrackVamosAoCinema","reviews","good","bad","background","TrackMegamixBestOfThree","TrackMegamixThisThat","TrackComunicacaoAlienigena","items","AlienIcon","attributes","attribute","itemId","ItemCard","TrackQuemSouEu","botPlayer","selectedGlyphs","positive","glyph","negative","PlayerGlyphs","glyphWidth","TrackTaNaCara","StepTrack","announcement","TrackComponent","fullWidth","TrackTitle","DJInstructions","total","PhaseTrack","state","info","useUser","useStep","setStep","goToNextStep","request","useAPICall","apiFunction","MEGAMIX_API","actionName","onSuccess","successMessage","errorMessage","payload","action","useOnSubmitTrackAnswerAPIRequest","verticalAlign","phase","allowedPhase","PHASES","DJIcon","DJAnnouncementTitle","onClose","unskippable","SeedArteRuim","updateData","isTimesUp","setTimesUp","start","isRunning","PanicIcon","padding","NOOP","SeedLabirintoSecreto","BikiniModelIcon","HeartOutlined","MessageOutlined","SendOutlined","toLowerCase","capitalize","SeedClubber","onSubmitData","clubbers","cId","SeedOndaTelepatica","setValue","SeedPolemicaDaVez","SeedRetratoFalado","SVGPhone","now","moment","format","SeedUeSoIsso","SeedMenteColetiva","value1","setValue1","value2","setValue2","MessageFilled","HeartFilled","FlagFilled","SixPackIcon","SeedContadoresHistorias","StepSeeding","currentStep","setData","objValue","next","v","buildSeedingSteps","currentSeed","DevMock","PhaseSeeding","useOnSubmitSeedAPIRequest","SmsIcon","WinningCount","ResultArteRuim","winningValues","winningTeam","containerId","winningArtworks","includes","winningCards","ResultCruzaPalavras","cheatSheet","ResultNamoroOuAmizade","findIndex","ResultNaRuaDoMedo","Number","ResultRetratoFalado","ResultVamosAoCinema","ResultMegamix","ResultImage","ResultText","ResultCharacter","ResultOndaTelepatica","ResultComunicacaoAlienigena","ResultTaNaCara","ResultLabirintoSecreto","ResultPalhetaDeCores","ResultQuemNaoMata","ResultValueDelegator","ResultComponent","SpacePlayerCheckWrapper","every","has","VoteArteRuim","find","VoteCruzaPalavras","VoteNamoroOuAmizade","VoteNaRuaDoMedo","VoteRetratoFalado","VoteVamosAoCinema","VoteMegamix","VoteImagesTrack","VoteValue","VoteOndaTelepatica","VoteCharacterTrack","VotePalhetaDeCores","VoteQuemNaoMata","VoteComunicacaoAlienigena","VoteTaNaCara","VoteLabirintoSecreto","VotesDelegator","VotesComponent","StepResult","onSeeRanking","isFirstRunThrough","scoringType","time","currentIndex","timeLeft","GarbageIcon","getPosition","TrophyOutlined","memoize","side","areaSize","buffer","startAt","increment","ratio","multiplier","floor","getTopValue","StepRanking","goToPreviousStep","innerContent","actions","BouncerIcon","PhaseResult","setIsFirstRunThrough","PhaseGameOver","announcementIcon","CrownIcon","isEqual","fairWinners","winner","achievementsReference","getActiveComponent","LoadingPage","PhaseLobby","PhaseRules","PhaseSetup","PageError","token","colorPrimary","THEME_COLORS","colorLink","gameCollection","GAME_COLLECTION","ACHIEVEMENTS","CandyCount","candyCount","active","key","speed","infinite","letter","abs","getBracketClass","num","showNeedle","needle","showTarget","baseBracketClass","modifier","getGuessResultClass","guess","base","getPoints","countDifferentGuesses","regularPlayers","dict","done","parseSelectedGlyphs","withName","prepareGlyphs","glyphs","getRibbons","votes","votesDict","playerEntry","split","SEPARATOR","characterId","prepareGuesses","result","ClockIcon","cx","cy","r","PlayersIcon","clues","mockedDrawings","sampleSize"],"sourceRoot":""}