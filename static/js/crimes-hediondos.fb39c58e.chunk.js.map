{"version":3,"file":"static/js/crimes-hediondos.fb39c58e.chunk.js","mappings":"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","sources":["components/cards/Card.tsx","components/cards/FloatingHand.tsx","components/cards/ImageBlurButton.tsx","components/cards/ImageBlurButtonContainer.tsx","components/cards/ImageCard.tsx","components/cards/ImageCardHand.tsx","components/cards/ImageCardBack.tsx","components/cards/ImageCardPreloadHand.tsx","components/cards/ImageCardSelectButton.tsx","games/crimes-hediondos/utils/mock.ts","games/crimes-hediondos/components/RulesBlobs.tsx","games/crimes-hediondos/components/ItemCard.tsx","games/crimes-hediondos/components/ContinueButton.tsx","games/crimes-hediondos/StepItemsSelection.tsx","games/crimes-hediondos/components/SceneTile.tsx","../node_modules/@ant-design/icons-svg/es/asn/PlusSquareFilled.js","../node_modules/@ant-design/icons/es/icons/PlusSquareFilled.js","games/crimes-hediondos/components/SelectedItems.tsx","games/crimes-hediondos/StepCauseOfDeathSelection.tsx","games/crimes-hediondos/StepLocationSelection.tsx","games/crimes-hediondos/StepReviewCrime.tsx","games/crimes-hediondos/StepReasonForEvidence.tsx","games/crimes-hediondos/PhaseCrimeSelection.tsx","games/crimes-hediondos/utils/api-requests.ts","../node_modules/@ant-design/icons-svg/es/asn/ClockCircleFilled.js","../node_modules/@ant-design/icons/es/icons/ClockCircleFilled.js","../node_modules/@ant-design/icons-svg/es/asn/SafetyOutlined.js","../node_modules/@ant-design/icons/es/icons/SafetyOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/GiftOutlined.js","../node_modules/@ant-design/icons/es/icons/GiftOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/ExceptionOutlined.js","../node_modules/@ant-design/icons/es/icons/ExceptionOutlined.js","games/crimes-hediondos/components/ItemCardEmpty.tsx","../node_modules/@ant-design/icons-svg/es/asn/WarningFilled.js","../node_modules/@ant-design/icons/es/icons/WarningFilled.js","games/crimes-hediondos/components/CrimeGuessStatus.tsx","games/crimes-hediondos/components/Crime.tsx","games/crimes-hediondos/components/GroupedItemsBoard.tsx","games/crimes-hediondos/StepNewScene.tsx","games/crimes-hediondos/PhaseSceneMarking.tsx","games/crimes-hediondos/utils/helpers.tsx","games/crimes-hediondos/components/PlayersCards.tsx","games/crimes-hediondos/components/SelectableGroupedItemsBoard.tsx","games/crimes-hediondos/StepGuessing.tsx","games/crimes-hediondos/PhaseGuessing.tsx","games/crimes-hediondos/components/ResultsTable.tsx","games/crimes-hediondos/StepReveal.tsx","games/crimes-hediondos/StepRanking.tsx","games/crimes-hediondos/PhaseReveal.tsx","games/crimes-hediondos/PhaseGameOver.tsx","games/crimes-hediondos/SessionCrimesHediondos.tsx","../node_modules/@ant-design/icons-svg/es/asn/CloudUploadOutlined.js","../node_modules/@ant-design/icons/es/icons/CloudUploadOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/DownSquareOutlined.js","../node_modules/@ant-design/icons/es/icons/DownSquareOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/EnvironmentOutlined.js","../node_modules/@ant-design/icons/es/icons/EnvironmentOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/LockFilled.js","../node_modules/@ant-design/icons/es/icons/LockFilled.js","../node_modules/@ant-design/icons-svg/es/asn/QuestionCircleFilled.js","../node_modules/@ant-design/icons/es/icons/QuestionCircleFilled.js","../node_modules/@ant-design/icons-svg/es/asn/UpCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/UpCircleOutlined.js"],"sourcesContent":["import clsx from 'clsx';\n// Utils\nimport { getColorFromLetter } from 'utils/helpers';\n\ntype CardProps = {\n  children: any;\n  header?: string;\n  footer?: string;\n  color?: string;\n  size?: 'small' | 'medium' | 'large';\n  randomColor?: boolean;\n  className?: string;\n  headerClassName?: string;\n  footerClassName?: string;\n};\nexport const Card = ({\n  children,\n  header = 'Carta',\n  footer,\n  color = 'none',\n  size = 'medium',\n  randomColor = false,\n  className = '',\n  headerClassName = '',\n  footerClassName = '',\n}: CardProps) => {\n  const baseClass = 'card';\n\n  const bgColor = randomColor\n    ? getColorFromLetter(\n        typeof children === 'string'\n          ? children[0].toUpperCase()\n          : header !== 'Carta'\n          ? header[0].toUpperCase()\n          : 'X'\n      )\n    : color;\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, className)}>\n      <span\n        className={clsx(`${baseClass}__header`, `color-background--${bgColor}`, headerClassName)}\n        style={color.startsWith('#') ? { backgroundColor: color } : {}}\n      >\n        {header}\n      </span>\n      <span className={`${baseClass}__text`}>{children}</span>\n      {footer && <span className={clsx(`${baseClass}__footer`, footerClassName)}>{footer}</span>}\n    </div>\n  );\n};\n","import clsx from 'clsx';\nimport { useState } from 'react';\n// Hooks\nimport { useLanguage } from 'hooks';\n// Components\nimport { AvatarIcon } from 'components/avatars';\nimport { Translate } from 'components/language';\n\ntype FloatingHandProps = {\n  children: any;\n  type?: 'hand' | 'stats';\n  subtitle?: any;\n};\n\nexport function FloatingHand({ children, subtitle = '', type = 'hand' }: FloatingHandProps) {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const { translate } = useLanguage();\n\n  return (\n    <>\n      <div className=\"floating-hand-added-white-space\"></div>\n      <div\n        className={clsx('floating-hand', isExpanded && 'floating-hand--expanded')}\n        onMouseOver={() => setIsExpanded(true)}\n        onMouseLeave={() => setIsExpanded(false)}\n      >\n        <span className=\"floating-hand__label\">\n          <AvatarIcon\n            type={type === 'hand' ? 'hand-of-cards' : 'user-stats'}\n            size={isExpanded ? 40 : 60}\n            className=\"floating-hand__icon\"\n            alt={translate('Mão de Cartas', 'Hand of Cards')}\n          />\n          <Translate pt=\"Passe o mouse para expandir \" en=\"Hover to expand \" />\n          {subtitle}\n        </span>\n        {children}\n      </div>\n    </>\n  );\n}\n","// Ant Design Resources\nimport { Button, Tooltip } from 'antd';\nimport { EyeInvisibleOutlined } from '@ant-design/icons';\n// Utils\nimport { useBlurCards } from 'hooks';\n// Components\nimport { Translate } from 'components/language';\n\ntype ImageBlurButtonProps = {\n  cardId: string;\n};\n\nexport function ImageBlurButton({ cardId }: ImageBlurButtonProps) {\n  const { blurCard, isBlurEnabled } = useBlurCards();\n\n  return isBlurEnabled ? (\n    <Tooltip\n      placement=\"top\"\n      title={\n        <Translate\n          pt=\"Aperte o botão para embaçar a foto caso você tenha alguma fobia\"\n          en=\"Use this button to blur the image in case of any phobia\"\n        />\n      }\n    >\n      <Button ghost onClick={() => blurCard(cardId)} size=\"small\" className=\"image-blur-button\">\n        <EyeInvisibleOutlined /> <Translate pt=\"Credo\" en=\"Blur\" />\n      </Button>\n    </Tooltip>\n  ) : (\n    <></>\n  );\n}\n","import clsx from 'clsx';\n// Components\nimport { ImageBlurButton } from './ImageBlurButton';\n\ntype ImageBlurButtonContainerProps = {\n  cardId: string;\n  className?: string;\n  children: any;\n  [key: string]: any;\n};\n\nexport function ImageBlurButtonContainer({\n  cardId,\n  className,\n  children,\n  ...props\n}: ImageBlurButtonContainerProps) {\n  return (\n    <div className={clsx('image-blur-button-container', className)} {...props}>\n      {children}\n      <ImageBlurButton cardId={cardId} />\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Image } from 'antd';\n// Constants\nimport { PUBLIC_URL } from 'utils/constants';\n// Assets\nimport placeholder from 'assets/images/placeholder.jpg';\n// Hooks\nimport { useBlurCards } from 'hooks';\n\ntype ImageCardProps = {\n  imageId: string;\n  size?: 'small' | 'medium' | 'large';\n  cardWidth?: number;\n  className?: string;\n  preview?: Boolean;\n};\nexport const ImageCard = ({\n  imageId,\n  size = 'medium',\n  cardWidth = 200,\n  className = '',\n  preview = true,\n}: ImageCardProps) => {\n  const { shouldBeBlurred } = useBlurCards();\n\n  const baseClass = 'image-card';\n\n  const fallbackName = `placeholder-${imageId[imageId.length - 1]}`;\n\n  const imageURL = imageId.replace(/-/g, '/');\n\n  const isBlurred = shouldBeBlurred(imageId);\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, isBlurred && `${baseClass}--blur`, className)}>\n      <Image\n        width={cardWidth}\n        src={`${process.env.REACT_APP_TD_IMAGES_URL}${imageURL}.jpg`}\n        placeholder={<Image preview={false} src={placeholder} width={cardWidth} />}\n        fallback={`${PUBLIC_URL.CARDS}${fallbackName}.jpg`}\n        preview={\n          preview && !isBlurred\n            ? {\n                maskClassName: `${baseClass}__preview-mask`,\n              }\n            : false\n        }\n      />\n    </div>\n  );\n};\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Image } from 'antd';\nimport { DownSquareOutlined } from '@ant-design/icons';\n// Hooks\nimport { useCardWidth, useLanguage } from 'hooks';\n// Components\nimport { ImageBlurButton, ImageCard } from '.';\n\ntype ImageCardHandProps = {\n  hand: string[];\n  onSelectCard?: GenericFunction;\n  selectButtonLabel?: string;\n  className?: string;\n  selectButtonClass?: string;\n  sizeRatio?: number;\n  cardSize?: number;\n  minCardSize?: number;\n  disabledSelectButton?: boolean;\n};\n\nexport function ImageCardHand({\n  hand = [],\n  onSelectCard,\n  selectButtonLabel,\n  className = '',\n  selectButtonClass = '',\n  sizeRatio = 8,\n  cardSize,\n  minCardSize = 80,\n  disabledSelectButton = false,\n}: ImageCardHandProps) {\n  const { translate } = useLanguage();\n  // Prefers cardSize otherwise calculates width based on screen and ratio\n  const cardWidth = useCardWidth(sizeRatio, 32, minCardSize);\n\n  return (\n    <Image.PreviewGroup>\n      <div className={clsx('image-card-hand', className)}>\n        {hand.map((cardId) => {\n          return (\n            <div key={`hand-${cardId}`} className=\"image-card-hand__card-container\">\n              {Boolean(onSelectCard) && (\n                <Button\n                  icon={<DownSquareOutlined />}\n                  className={selectButtonClass}\n                  onClick={() => onSelectCard!(cardId)}\n                  size=\"small\"\n                  disabled={disabledSelectButton}\n                >\n                  {translate('Selecionar', 'Select', selectButtonLabel)}\n                </Button>\n              )}\n              <ImageCard imageId={cardId} cardWidth={cardSize || cardWidth} />\n              <ImageBlurButton cardId={cardId} />\n            </div>\n          );\n        })}\n      </div>\n    </Image.PreviewGroup>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Image } from 'antd';\n// Resources\nimport placeholder from 'assets/images/placeholder.jpg';\nimport { useBlurCards } from 'hooks';\n\ntype ImageCardBackProps = {\n  size?: 'small' | 'medium' | 'large';\n  cardWidth?: number | string;\n  className?: string;\n  previewImageId?: string;\n};\n\nexport const ImageCardBack = ({\n  size = 'medium',\n  cardWidth = 200,\n  className = '',\n  previewImageId,\n}: ImageCardBackProps) => {\n  const baseClass = 'image-card-back';\n  const { shouldBeBlurred } = useBlurCards();\n  const isBlurred = shouldBeBlurred(previewImageId);\n  const imageURL = (previewImageId ?? '').replace(/-/g, '/');\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, className)}>\n      <Image\n        width={cardWidth}\n        src={placeholder}\n        preview={\n          Boolean(previewImageId)\n            ? !isBlurred\n              ? {\n                  maskClassName: 'image-card__preview-mask',\n                  src: `${process.env.REACT_APP_TD_IMAGES_URL}${imageURL}.jpg`,\n                }\n              : false\n            : false\n        }\n      />\n    </div>\n  );\n};\n","// Components\nimport { ImageCard } from './ImageCard';\n\ntype ImageCardPreloadHandProps = {\n  hand: string[];\n};\nexport function ImageCardPreloadHand({ hand }: ImageCardPreloadHandProps) {\n  if (!hand) return <span></span>;\n  return (\n    <div className=\"image-card-preload-hand\">\n      {hand.map((cardId) => (\n        <ImageCard imageId={cardId} cardWidth={1} key={`pre-load-${cardId}`} preview={false} />\n      ))}\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Button } from 'antd';\nimport { UpCircleOutlined } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\n\ntype ImageCardSelectButtonProps = {\n  isSelected?: boolean;\n  cardId: ImageCard;\n  onClick: GenericFunction;\n  className?: string;\n  selectLabel?: string;\n  deselectLabel?: string;\n};\n\nexport function ImageCardSelectButton({\n  onClick,\n  cardId,\n  selectLabel,\n  deselectLabel,\n  isSelected = false,\n}: ImageCardSelectButtonProps) {\n  return (\n    <Button\n      shape=\"round\"\n      size=\"small\"\n      ghost={!isSelected}\n      className=\"image-card-select-button\"\n      onClick={() => onClick(cardId)}\n    >\n      <UpCircleOutlined />\n      {isSelected ? (\n        <Translate pt=\"Desmarcar\" en=\"Deselect\" custom={deselectLabel} />\n      ) : (\n        <Translate pt=\"Selecionar\" en=\"Select\" custom={selectLabel} />\n      )}\n      <UpCircleOutlined />\n    </Button>\n  );\n}\n","import { SEPARATOR } from 'utils/constants';\nimport { getLastItem, getRandomItem, shuffle } from 'utils/helpers';\n\nexport const mockCrime = (itemsGroup: string[]): SubmitCrimePayload => {\n  const shuffledItems = shuffle(itemsGroup);\n  const weapon = shuffledItems.find((e) => e?.includes('wp'));\n  const evidence = shuffledItems.find((e) => e?.includes('ev'));\n  const locationTileId = `location-tile-${getRandomItem([1, 2, 3, 4])}`;\n  const options = [0, 1, 2, 3, 4, 5];\n\n  return {\n    weaponId: weapon,\n    evidenceId: evidence,\n    causeOfDeath: getRandomItem(options),\n    reasonForEvidence: getRandomItem(options),\n    locationTile: locationTileId,\n    locationIndex: getRandomItem(options),\n  };\n};\n\nexport const mockGuesses = (groupedItems: GroupedItems, players: GamePlayers, user: GamePlayer) => {\n  // TODO: intelligent guessing based on history\n\n  return Object.values(players).reduce((acc: any, player) => {\n    if (player.id !== user.id) {\n      const historyForThisTarget = user.history?.[player.id] ?? [];\n\n      const lastGuess: GuessHistoryEntry = getLastItem(historyForThisTarget);\n\n      if (lastGuess) {\n        // If correct or locked\n        if (lastGuess.status === 'CORRECT' || lastGuess.status === 'LOCKED') {\n          acc[player.id] = {\n            weaponId: lastGuess.weaponId,\n            evidenceId: lastGuess.evidenceId,\n          };\n          return acc;\n        }\n\n        // If half or wrong\n        if (lastGuess.status === 'HALF' || lastGuess.status === 'WRONG') {\n          const group = groupedItems[lastGuess.groupIndex];\n          const weapons: string[] = group.filter((e) => e?.includes('wp'));\n          const evidences: string[] = group.filter((e) => e?.includes('ev'));\n\n          const previousPicksDict = historyForThisTarget.reduce(\n            (acc: BooleanDictionary, entry: GuessHistoryEntry) => {\n              acc[`${entry.weaponId}${SEPARATOR}${entry.evidenceId}`] = true;\n              return acc;\n            },\n            {}\n          );\n          let pair = `${getRandomItem(weapons)}${SEPARATOR}${getRandomItem(evidences)}`;\n\n          while (previousPicksDict[pair]) {\n            pair = `${getRandomItem(weapons)}${SEPARATOR}${getRandomItem(evidences)}`;\n          }\n\n          const [weaponId, evidenceId] = pair.split(SEPARATOR);\n\n          acc[player.id] = {\n            weaponId,\n            evidenceId,\n          };\n          return acc;\n        }\n\n        // If wrong group\n        const previouslyWrongGroups = historyForThisTarget.reduce((t: number[], guess: GuessHistoryEntry) => {\n          if (guess.status === 'WRONG_GROUP') {\n            t.push(guess.groupIndex);\n          }\n          return t;\n        }, []);\n        const availableGroups = [0, 1, 2, 3]\n          .filter((i) => !previouslyWrongGroups.includes(i))\n          .map((i) => groupedItems[i]);\n        const randomGroup = getRandomItem(availableGroups);\n\n        const weapons: string[] = randomGroup.filter((e) => e?.includes('wp'));\n        const evidences: string[] = randomGroup.filter((e) => e?.includes('ev'));\n        acc[player.id] = {\n          weaponId: getRandomItem(weapons),\n          evidenceId: getRandomItem(evidences),\n        };\n        return acc;\n      }\n\n      // If no history exists\n      const randomGroup = getRandomItem(Object.values(groupedItems));\n      const weapons: string[] = randomGroup.filter((e) => e?.includes('wp'));\n      const evidences: string[] = randomGroup.filter((e) => e?.includes('ev'));\n      acc[player.id] = {\n        weaponId: getRandomItem(weapons),\n        evidenceId: getRandomItem(evidences),\n      };\n    }\n    return acc;\n  }, {});\n};\n\nexport const mockSceneMark = () => {\n  return getRandomItem([0, 1, 2, 3, 4, 5]);\n};\n","// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n\nexport function WelcomeMessage(): JSX.Element {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Bem-vindo à Convenção Anual de Serial Killers!\n            <br />\n            Você e os outros serial killers decidiram fazer um jogo de adivinhação.\n            <br />\n            O objetivo é todos darem dicas sobre as circunstâncias que seus últimos crimes aconteceram para\n            ajudar os outros jogadores a descobrirem qual arma e qual objeto foram usados durante o crime.\n            <br />\n            Prontos para aterrorizar?\n          </>\n        }\n        en={\n          <>\n            Welcome to the Annual Serial Killers Con!\n            <br />\n            You and the other serial killers decided to make it a game out of it.\n            <br />\n            The goal is to give clues about the circunstancies your latest crime occurred so the other players\n            can guess what weapon and evidence were used during the crime.\n            <br />\n            Ready to terrorize?\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function GuessMessage(): JSX.Element {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Baseado nas informações dadas pelos jogadores, tente adivinhar qual arma e objeto cada jogador\n            usou em seu crime.\n            <br />\n            Você ganha pontos se adivinhar uma das cartas ou ambas as cartas, e você também ganha 1 ponto para\n            cada uma de suas cartas que os outros adivinharem, mas essa pontuação é secreta.\n          </>\n        }\n        en={\n          <>\n            Based on the information given by other players, try to guess the weapon and object used on their\n            crimes.\n            <br />\n            You get points for getting one or both cards correctly, and you get 1 point when other players get\n            each of your cards correctly, but these points are kept secret.\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function ScoringMessage({ round }: { round: GameRound }): JSX.Element {\n  const points = round.total - round.current + 1;\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Você ganha 1 ponto para cada arma ou objeto que você acertar.\n            <br />\n            Se você acertar o par de um jogador, você ganha {points} pontos.\n            <br />\n            Para todos os seus acertos, seus respectivos autores ganham 1 ponto.\n            <br />\n            Ganha o jogo o primeiro jogador que acertar tudo.\n          </>\n        }\n        en={\n          <>\n            You get 1 point for each weapon or evidence you get correctly.\n            <br />\n            If you get the pair for a player, you get {points} points instead.\n            <br />\n            All of your correct guesses grant 1 extra point to the authors.\n            <br />\n            Wins the game the player who get all correctly first.\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function GenericMessage(): JSX.Element {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Escrever msg aqui.\n            <br />\n            Prontos para aterrorizar?\n          </>\n        }\n        en={\n          <>\n            Message comes here.\n            <br />\n            Ready to terrorize?\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Popover, Tag } from 'antd';\n// Hooks\nimport { useDevFeatures, useLanguage } from 'hooks';\n// Components\nimport { ImageCard } from 'components/cards';\n\ntype ItemCardProps = {\n  item: HCard;\n  cardWidth: number;\n  preview?: boolean;\n  isSelected?: boolean;\n  className?: string;\n  activeColor?: string;\n};\n\nexport function ItemCard({\n  item,\n  cardWidth,\n  activeColor,\n  preview = true,\n  isSelected = false,\n  className = '',\n}: ItemCardProps) {\n  const { language } = useLanguage();\n  const { isDebugEnabled } = useDevFeatures();\n  return (\n    <div\n      className={clsx('h-item-card', isSelected && 'h-item-card--selected', className)}\n      style={activeColor && isSelected ? { borderColor: 'black', backgroundColor: activeColor } : {}}\n    >\n      <Popover content={item.name[language].toUpperCase()}>\n        <Tag\n          className=\"h-item-card__name\"\n          color={item.type === 'weapon' ? 'geekblue' : 'volcano'}\n          style={{ maxWidth: `${cardWidth + 16}px` }}\n        >\n          <span>{isDebugEnabled ? item.id : item.name[language]}</span>\n        </Tag>\n      </Popover>\n      <ImageCard imageId={item.id} cardWidth={cardWidth} className=\"h-item-card__image\" preview={preview} />\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Button, ButtonProps } from 'antd';\n// State\nimport { Translate } from 'components/language';\n\ninterface ContinueButtonProps extends ButtonProps {\n  onClick: GenericFunction;\n  disabled?: boolean;\n  children?: string;\n}\n\nexport function ContinueButton({ onClick, children, disabled = false, ...props }: ContinueButtonProps) {\n  return (\n    <Button type=\"primary\" size=\"large\" disabled={disabled} onClick={onClick} {...props}>\n      {children ?? (\n        <>\n          »» <Translate pt=\"Próximo\" en=\"Next\" /> »»\n        </>\n      )}\n    </Button>\n  );\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks';\n// Utils\nimport { shuffle } from 'utils/helpers';\n// Components\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { TransparentButton } from 'components/buttons';\nimport { ItemCard } from './components/ItemCard';\nimport { ContinueButton } from './components/ContinueButton';\n\ntype StepItemsSelectionProps = {\n  user: GamePlayer;\n  groupedItems: GroupedItems;\n  items: ItemsDict;\n  selections: PlainObject;\n  updateSelections: GenericFunction;\n};\n\nexport function StepItemsSelection({\n  user,\n  items,\n  groupedItems,\n  selections,\n  updateSelections,\n}: StepItemsSelectionProps) {\n  const [weaponId, setWeaponId] = useState<string>(selections.weaponId);\n  const [evidenceId, setEvidenceId] = useState<string>(selections.evidenceId);\n  const cardWidth = useCardWidth(12, 8, 50, 200);\n\n  const userItems = groupedItems[user.itemGroupIndex];\n\n  const onSelectItem = (item: HCard) => {\n    if (item.type === 'weapon') {\n      setWeaponId(item.id);\n    } else {\n      setEvidenceId(item.id);\n    }\n  };\n\n  const onRandomSelect = () => {\n    let randomWeaponId = '';\n    let randomEvidenceId = '';\n    shuffle(userItems).forEach((itemId) => {\n      if (items[itemId].type === 'weapon') {\n        randomWeaponId = itemId;\n      } else {\n        randomEvidenceId = itemId;\n      }\n    });\n    setWeaponId(randomWeaponId);\n    setEvidenceId(randomEvidenceId);\n  };\n\n  return (\n    <Step>\n      <Title>\n        <Translate pt=\"Qual foi seu último crime?\" en=\"How was your last crime?\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Selecione uma carta azul e uma carta vermelha.\n              <br />\n              Elas representam a arma usada em seu último crime e um objeto da cena do crime.\n              <br />O jogo contém 16 armas e 16 objetos, mas para essa parte, você vê apenas 4 opções de cada.\n            </>\n          }\n          en={\n            <>\n              Select a blue card and a red card.\n              <br />\n              They represent the weapon used in your latest crime and an object that was in the crime scene.\n              <br />\n              The game has 16 weapons and 16 objects, but for this phase, you only see 4 options of each.\n            </>\n          }\n        />\n      </Instruction>\n\n      <Space className=\"space-container\" align=\"center\">\n        <Button onClick={onRandomSelect} size=\"large\">\n          <Translate pt=\"Selecionar aleatoriamente\" en=\"Random picks\" />\n        </Button>\n\n        <ContinueButton\n          disabled={!weaponId || !evidenceId}\n          onClick={() => updateSelections({ weaponId, evidenceId })}\n        />\n      </Space>\n\n      <ul className=\"h-items-selection\">\n        {userItems.map((itemId) => (\n          <li key={itemId} className=\"h-items-selection__item\">\n            <TransparentButton onClick={() => onSelectItem(items[itemId])}>\n              <ItemCard\n                item={items[itemId]}\n                cardWidth={cardWidth}\n                preview={false}\n                isSelected={[weaponId, evidenceId].includes(itemId)}\n              />\n            </TransparentButton>\n          </li>\n        ))}\n      </ul>\n    </Step>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Popover } from 'antd';\nimport { CheckCircleFilled } from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from 'hooks';\n\ntype SceneTileProps = {\n  tile: SceneTile;\n  index?: number;\n  onSelectValue?: GenericFunction;\n};\n\nexport function SceneTile({ tile, index, onSelectValue }: SceneTileProps) {\n  const { language } = useLanguage();\n  return (\n    <div className={clsx('h-scene-tile', `h-scene-tile--${tile.type}`)}>\n      <Popover content={tile.description[language]}>\n        <h4 className=\"h-scene-tile__title\">{tile.title[language]}</h4>\n      </Popover>\n      <ul className=\"h-scene-tile__options\">\n        {tile.values.map((entry, i) => {\n          const isActive = i === index;\n          return (\n            <li key={`${tile.id}-value-${i}`}>\n              <Button\n                className={clsx('h-scene-tile__button', `h-scene-tile__button--${tile.type}`)}\n                icon={isActive ? <CheckCircleFilled className=\"h-scene-tile__icon\" /> : undefined}\n                onClick={onSelectValue ? () => onSelectValue({ tileId: tile.id, value: i }) : () => {}}\n              >\n                {entry[language]}\n              </Button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","// This icon file is generated automatically.\nvar PlusSquareFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM704 536c0 4.4-3.6 8-8 8H544v152c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V544H328c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h152V328c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v152h152c4.4 0 8 3.6 8 8v48z\" } }] }, \"name\": \"plus-square\", \"theme\": \"filled\" };\nexport default PlusSquareFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusSquareFilledSvg from \"@ant-design/icons-svg/es/asn/PlusSquareFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PlusSquareFilled = function PlusSquareFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusSquareFilledSvg\n  }));\n};\n\nPlusSquareFilled.displayName = 'PlusSquareFilled';\nexport default /*#__PURE__*/React.forwardRef(PlusSquareFilled);","import clsx from 'clsx';\n// Ant Design Resources\nimport { PlusSquareFilled } from '@ant-design/icons';\n// Hooks\nimport { useCardWidth } from 'hooks';\n// Components\nimport { ItemCard } from './ItemCard';\n\ntype SelectedItemsProps = {\n  items: ItemsDict;\n  weaponId: string;\n  evidenceId: string;\n  fadeWeapon?: boolean;\n  fadeEvidence?: boolean;\n};\n\nexport function SelectedItems({\n  items,\n  weaponId,\n  evidenceId,\n  fadeWeapon = false,\n  fadeEvidence = false,\n}: SelectedItemsProps) {\n  const cardWidth = useCardWidth(12, 8, 50, 200);\n\n  return (\n    <ul className=\"h-items-crime-selection\">\n      <li>\n        <ItemCard\n          item={items[weaponId]}\n          cardWidth={cardWidth}\n          preview\n          className={clsx(fadeWeapon && 'h-items-crime-selection__faded')}\n        />\n      </li>\n      <li>\n        <PlusSquareFilled style={{ color: 'white' }} />\n      </li>\n      <li>\n        <ItemCard\n          item={items[evidenceId]}\n          cardWidth={cardWidth}\n          preview\n          className={clsx(fadeEvidence && 'h-items-crime-selection__faded')}\n        />\n      </li>\n    </ul>\n  );\n}\n","import { useState } from 'react';\nimport { Space } from 'antd';\n// Components\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { SceneTile } from './components/SceneTile';\nimport { SelectedItems } from './components/SelectedItems';\nimport { ContinueButton } from './components/ContinueButton';\n\ntype StepCauseOfDeathSelectionProps = {\n  items: ItemsDict;\n  selections: PlainObject;\n  updateSelections: GenericFunction;\n  causeOfDeathTile: SceneTile;\n};\n\nexport function StepCauseOfDeathSelection({\n  items,\n  selections,\n  updateSelections,\n  causeOfDeathTile,\n}: StepCauseOfDeathSelectionProps) {\n  const [causeOfDeathIndex, setCauseOfDeathIndex] = useState<number>();\n\n  const onSelectItem = (payload: SceneTilePayload) => {\n    setCauseOfDeathIndex(payload.value);\n  };\n\n  return (\n    <Step>\n      <Title>\n        <Translate pt=\"Qual foi seu último crime?\" en=\"How was your last crime?\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>Baseado somente em sua arma do crime (carta azul), selecione a causa da morte de sua vítima.</>\n          }\n          en={<>Based solely on the weapon (blue card) you've chosen, select your victim's cause of death.</>}\n        />\n      </Instruction>\n\n      <Space className=\"space-container\" align=\"center\">\n        <SelectedItems\n          items={items}\n          weaponId={selections.weaponId}\n          evidenceId={selections.evidenceId}\n          fadeEvidence\n        />\n\n        <SceneTile tile={causeOfDeathTile} onSelectValue={onSelectItem} index={causeOfDeathIndex} />\n      </Space>\n\n      <Space className=\"space-container\" align=\"center\">\n        <ContinueButton\n          disabled={causeOfDeathIndex === undefined}\n          onClick={() => updateSelections({ causeOfDeath: causeOfDeathIndex })}\n        />\n      </Space>\n    </Step>\n  );\n}\n","import { useState } from 'react';\nimport { Space } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks';\n// Components\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { ItemCard } from './components/ItemCard';\nimport { SceneTile } from './components/SceneTile';\nimport { ContinueButton } from './components/ContinueButton';\n\ntype StepLocationSelectionProps = {\n  user: GamePlayer;\n  items: ItemsDict;\n  selections: PlainObject;\n  updateSelections: GenericFunction;\n  locationTiles: SceneTile[];\n  groupedItems: GroupedItems;\n};\n\nexport function StepLocationSelection({\n  user,\n  items,\n  selections,\n  updateSelections,\n  locationTiles,\n  groupedItems,\n}: StepLocationSelectionProps) {\n  const cardWidth = useCardWidth(12, 8, 50, 200);\n  const [location, setLocation] = useState<PlainObject>();\n\n  const userItems = groupedItems[user.itemGroupIndex];\n\n  const onSelectItem = (payload: SceneTilePayload) => {\n    setLocation(payload);\n  };\n\n  return (\n    <Step>\n      <Title>\n        <Translate pt=\"Onde foi o crime?\" en=\"Where was the crime?\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Baseado em qualquer uma das suas cartas (ou ambas), selecione o local onde o crime aconteceu.\n              <br />\n              Temos 4 colunas de locais agrupador por tema, selecione qualquer um.\n              <br />\n              Lembre-se que você está tentando ajudar os outros jogadores adivinhar o seu crime, seja\n              inteligente!\n            </>\n          }\n          en={\n            <>\n              Based on any card (or both), select where the crime occurred.\n              <br />\n              There are 4 columns of locations grouped by theme, you may select any.\n              <br />\n              Remember you are trying to help the players guess your crime, so be smart!\n            </>\n          }\n        />\n      </Instruction>\n\n      <ul className=\"h-items-selection\">\n        {userItems.map((itemId) => (\n          <li key={itemId} className=\"h-items-selection__item\">\n            <ItemCard\n              item={items[itemId]}\n              cardWidth={cardWidth}\n              preview={false}\n              isSelected={[selections.weaponId, selections.evidenceId].includes(itemId)}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"h-scene-tiles-list\">\n        {locationTiles.map((tile) => (\n          <SceneTile\n            key={tile.id}\n            tile={tile}\n            onSelectValue={onSelectItem}\n            index={location?.tileId === tile.id ? location?.value : undefined}\n          />\n        ))}\n      </div>\n\n      <Space className=\"space-container\" align=\"center\">\n        <ContinueButton\n          disabled={location?.tileId === undefined}\n          onClick={() => updateSelections({ locationTile: location?.tileId, locationIndex: location?.value })}\n        />\n      </Space>\n    </Step>\n  );\n}\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\nimport { CloudUploadOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from 'hooks';\n// Components\nimport { Translate } from 'components/language';\nimport { ReadyPlayersBar } from 'components/players';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { SceneTile } from './components/SceneTile';\nimport { SelectedItems } from './components/SelectedItems';\n\ntype StepReviewCrimeProps = {\n  items: ItemsDict;\n  selections: PlainObject;\n  onSubmitCrime: GenericFunction;\n  locationTiles: SceneTile[];\n  causeOfDeathTile: SceneTile;\n  reasonForEvidenceTile: SceneTile;\n  updateSelection: GenericFunction;\n  players: GamePlayers;\n};\n\nexport function StepReviewCrime({\n  items,\n  causeOfDeathTile,\n  reasonForEvidenceTile,\n  locationTiles,\n  selections,\n  onSubmitCrime,\n  updateSelection,\n  players,\n}: StepReviewCrimeProps) {\n  const { translate } = useLanguage();\n\n  const locationTile = locationTiles.find((location) => location.id === selections.locationTile);\n\n  return (\n    <Step>\n      <Title>\n        <Translate pt=\"Seu crime tá bom?\" en=\"Is your crime alright?\" />\n      </Title>\n      <Instruction contained>\n        <Translate pt={<>Revise seu crime.</>} en={<>Recap your crime.</>} />\n      </Instruction>\n\n      <SelectedItems items={items} weaponId={selections.weaponId} evidenceId={selections.evidenceId} />\n\n      <div className=\"h-scene-tiles-list\">\n        <SceneTile\n          tile={causeOfDeathTile}\n          index={selections.causeOfDeath}\n          onSelectValue={(payload) => updateSelection({ causeOfDeath: payload.value })}\n        />\n        <SceneTile\n          tile={reasonForEvidenceTile}\n          index={selections.reasonForEvidence}\n          onSelectValue={(payload) => updateSelection({ reasonForEvidence: payload.value })}\n        />\n        <SceneTile\n          tile={locationTile!}\n          index={selections.locationIndex}\n          onSelectValue={(payload) =>\n            updateSelection({ locationTile: payload.tileId, locationIndex: payload.value })\n          }\n        />\n      </div>\n\n      <Space className=\"space-container\" align=\"center\">\n        <Button type=\"primary\" size=\"large\" onClick={onSubmitCrime} icon={<CloudUploadOutlined />}>\n          <Translate pt=\"Enviar\" en=\"Submit\" />\n        </Button>\n      </Space>\n\n      <ReadyPlayersBar\n        players={players}\n        readyText={translate('Já cometi meu crime', \"I'm done committing my crime\")}\n        readyTextPlural={translate('Já cometemos nossos crimes', \"We're done committing our crimes\")}\n      />\n    </Step>\n  );\n}\n","import { useState } from 'react';\n// Components\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { SceneTile } from './components/SceneTile';\nimport { SelectedItems } from './components/SelectedItems';\nimport { ContinueButton } from './components/ContinueButton';\nimport { Space } from 'antd';\n\ntype StepReasonForEvidenceProps = {\n  items: ItemsDict;\n  selections: PlainObject;\n  updateSelections: GenericFunction;\n  reasonForEvidenceTile: SceneTile;\n};\n\nexport function StepReasonForEvidence({\n  items,\n  selections,\n  updateSelections,\n  reasonForEvidenceTile,\n}: StepReasonForEvidenceProps) {\n  const [reasonForEvidenceIndex, setReasonForEvidenceIndex] = useState<number>();\n\n  const onSelectItem = (payload: SceneTilePayload) => {\n    setReasonForEvidenceIndex(payload.value);\n  };\n\n  return (\n    <Step>\n      <Title>\n        <Translate pt=\"Qual foi seu último crime?\" en=\"How was your last crime?\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Baseado somente em seu objeto (carta vermelha), selecione o que o objeto significa para o crime.\n            </>\n          }\n          en={\n            <>Based solely on the object (red card) you've chosen, select the meaning of it to the crime.</>\n          }\n        />\n      </Instruction>\n\n      <Space className=\"space-container\" align=\"center\">\n        <SelectedItems\n          items={items}\n          weaponId={selections.weaponId}\n          evidenceId={selections.evidenceId}\n          fadeWeapon\n        />\n\n        <SceneTile tile={reasonForEvidenceTile} onSelectValue={onSelectItem} index={reasonForEvidenceIndex} />\n      </Space>\n\n      <Space className=\"space-container\" align=\"center\">\n        <ContinueButton\n          disabled={reasonForEvidenceIndex === undefined}\n          onClick={() => updateSelections({ reasonForEvidence: reasonForEvidenceIndex })}\n        />\n      </Space>\n    </Step>\n  );\n}\n","import { useState } from 'react';\n// State & Hooks\nimport { useIsUserReady, useUser, useLanguage, useMock, useStep } from 'hooks';\nimport { useOnSubmitCrimeAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\nimport { mockCrime } from './utils/mock';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { RoundAnnouncement } from 'components/round';\nimport { ImageCardPreloadHand } from 'components/cards';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { WelcomeMessage } from './components/RulesBlobs';\nimport { StepItemsSelection } from './StepItemsSelection';\nimport { StepCauseOfDeathSelection } from './StepCauseOfDeathSelection';\nimport { StepLocationSelection } from './StepLocationSelection';\nimport { StepReviewCrime } from './StepReviewCrime';\nimport { StepReasonForEvidence } from './StepReasonForEvidence';\n\nfunction PhaseCrimeSelection({ players, state, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, setStep, goToNextStep } = useStep(0);\n  const user = useUser(players);\n  const isUserReady = useIsUserReady(players, state);\n  const [selections, setSelections] = useState<SubmitCrimePayload>({});\n\n  const onSubmitCrimeRequest = useOnSubmitCrimeAPIRequest(setStep);\n\n  const onSubmitCrime = () => {\n    onSubmitCrimeRequest(selections);\n  };\n\n  const updateSelections = (payload: SubmitCrimePayload) => {\n    setSelections((s: SubmitCrimePayload) => ({ ...s, ...payload }));\n    goToNextStep();\n  };\n\n  const updateSelection = (payload: SubmitCrimePayload) => {\n    setSelections((s: SubmitCrimePayload) => ({ ...s, ...payload }));\n  };\n\n  useMock(() => {\n    if (step === 1) {\n      onSubmitCrimeRequest(mockCrime(state.groupedItems[user.itemGroupIndex]));\n    }\n  }, [step]);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.CRIMES_HEDIONDOS.CRIME_SELECTION}>\n      <StepSwitcher step={step} conditions={[!isUserReady, !isUserReady, !isUserReady]} players={players}>\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state?.round}\n          onPressButton={goToNextStep}\n          buttonText=\" \"\n          time={5}\n          circleColor=\"black\"\n        >\n          <ImageCardPreloadHand hand={Object.keys(state.items)} />\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <PhaseAnnouncement\n          type=\"event\"\n          title={translate('A Convenção', 'The Convention')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          duration={30}\n        >\n          <WelcomeMessage />\n        </PhaseAnnouncement>\n\n        {/* Step 2 */}\n        <StepItemsSelection\n          user={user}\n          groupedItems={state.groupedItems}\n          items={state.items}\n          selections={selections}\n          updateSelections={updateSelections}\n        />\n\n        {/* Step 3 */}\n        <PhaseAnnouncement\n          type=\"skull\"\n          title={translate('Causa da Morte', 'Cause of Death')}\n          onClose={goToNextStep}\n          duration={5}\n        >\n          <Instruction>\n            <Translate pt=\"Como a vítima morreu?\" en=\"How did the victim die?\" />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 4 */}\n        <StepCauseOfDeathSelection\n          items={state.items}\n          causeOfDeathTile={state.causeOfDeathTile}\n          selections={selections}\n          updateSelections={updateSelections}\n        />\n\n        {/* Step 5 */}\n        <PhaseAnnouncement\n          type=\"crime-scene\"\n          title={translate('Evidências?', 'Evidence?')}\n          onClose={goToNextStep}\n          duration={5}\n        >\n          <Instruction>\n            <Translate\n              pt=\"Conte-nos sobre o objeto que você escolheu.\"\n              en=\"Tell us about the object you selected.\"\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 6 */}\n        <StepReasonForEvidence\n          items={state.items}\n          reasonForEvidenceTile={state.reasonForEvidenceTile}\n          selections={selections}\n          updateSelections={updateSelections}\n        />\n\n        {/* Step 7 */}\n        <PhaseAnnouncement\n          type=\"location\"\n          title={translate('Local do Crime', 'Crime Location')}\n          onClose={goToNextStep}\n          duration={5}\n        >\n          <Instruction>\n            <Translate pt=\"Onde que foi?\" en=\"Where was it?\" />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 8 */}\n        <StepLocationSelection\n          user={user}\n          items={state.items}\n          groupedItems={state.groupedItems}\n          locationTiles={state.locationTiles}\n          selections={selections}\n          updateSelections={updateSelections}\n        />\n\n        {/* Step 9 */}\n        <PhaseAnnouncement\n          type=\"crime-tape\"\n          title={translate('Revisão', 'Review')}\n          onClose={goToNextStep}\n          duration={5}\n        />\n\n        {/* Step 10 */}\n        <StepReviewCrime\n          items={state.items}\n          causeOfDeathTile={state.causeOfDeathTile}\n          reasonForEvidenceTile={state.reasonForEvidenceTile}\n          locationTiles={state.locationTiles}\n          selections={selections}\n          onSubmitCrime={onSubmitCrime}\n          updateSelection={updateSelection}\n          players={players}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseCrimeSelection;\n","import { CRIMES_HEDIONDOS_API } from 'services/adapters';\nimport { useAPICall, useLanguage } from 'hooks';\n\nexport function useOnSubmitCrimeAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: CRIMES_HEDIONDOS_API.submitAction,\n    actionName: 'submit-crime',\n    onBeforeCall: () => setStep(11),\n    onError: () => setStep(9),\n    successMessage: translate('Crime enviado com sucesso', 'Crime submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar seu crime',\n      'Oops, the application failed to send your crime'\n    ),\n  });\n\n  return (payload: SubmitCrimePayload) => {\n    request({\n      action: 'SUBMIT_CRIME',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitMarkAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: CRIMES_HEDIONDOS_API.submitAction,\n    actionName: 'submit-mark',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(2),\n    successMessage: translate(\n      'Nova informação enviadas com sucesso',\n      'New information submitted successfully'\n    ),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar a nova informação',\n      'Oops, the application failed to send the new information'\n    ),\n  });\n\n  return (payload: SubmitMarkPayload) => {\n    request({\n      action: 'SUBMIT_MARK',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitGuessesAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: CRIMES_HEDIONDOS_API.submitAction,\n    actionName: 'submit-guesses',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate('Respostas enviadas com sucesso', 'Guesses submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar suas respostas',\n      'Oops, the application failed to send your guesses'\n    ),\n  });\n\n  return (payload: SubmitGuessesPayload) => {\n    request({\n      action: 'SUBMIT_GUESSES',\n      ...payload,\n    });\n  };\n}\n","// This icon file is generated automatically.\nvar ClockCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm176.5 585.7l-28.6 39a7.99 7.99 0 01-11.2 1.7L483.3 569.8a7.92 7.92 0 01-3.3-6.5V288c0-4.4 3.6-8 8-8h48.1c4.4 0 8 3.6 8 8v247.5l142.6 103.1c3.6 2.5 4.4 7.5 1.8 11.1z\" } }] }, \"name\": \"clock-circle\", \"theme\": \"filled\" };\nexport default ClockCircleFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ClockCircleFilledSvg from \"@ant-design/icons-svg/es/asn/ClockCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ClockCircleFilled = function ClockCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ClockCircleFilledSvg\n  }));\n};\n\nClockCircleFilled.displayName = 'ClockCircleFilled';\nexport default /*#__PURE__*/React.forwardRef(ClockCircleFilled);","// This icon file is generated automatically.\nvar SafetyOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"0 0 1024 1024\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64L128 192v384c0 212.1 171.9 384 384 384s384-171.9 384-384V192L512 64zm312 512c0 172.3-139.7 312-312 312S200 748.3 200 576V246l312-110 312 110v330z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M378.4 475.1a35.91 35.91 0 00-50.9 0 35.91 35.91 0 000 50.9l129.4 129.4 2.1 2.1a33.98 33.98 0 0048.1 0L730.6 434a33.98 33.98 0 000-48.1l-2.8-2.8a33.98 33.98 0 00-48.1 0L483 579.7 378.4 475.1z\" } }] }, \"name\": \"safety\", \"theme\": \"outlined\" };\nexport default SafetyOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SafetyOutlinedSvg from \"@ant-design/icons-svg/es/asn/SafetyOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar SafetyOutlined = function SafetyOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: SafetyOutlinedSvg\n  }));\n};\n\nSafetyOutlined.displayName = 'SafetyOutlined';\nexport default /*#__PURE__*/React.forwardRef(SafetyOutlined);","// This icon file is generated automatically.\nvar GiftOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M880 310H732.4c13.6-21.4 21.6-46.8 21.6-74 0-76.1-61.9-138-138-138-41.4 0-78.7 18.4-104 47.4-25.3-29-62.6-47.4-104-47.4-76.1 0-138 61.9-138 138 0 27.2 7.9 52.6 21.6 74H144c-17.7 0-32 14.3-32 32v200c0 4.4 3.6 8 8 8h40v344c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V550h40c4.4 0 8-3.6 8-8V342c0-17.7-14.3-32-32-32zm-334-74c0-38.6 31.4-70 70-70s70 31.4 70 70-31.4 70-70 70h-70v-70zm-138-70c38.6 0 70 31.4 70 70v70h-70c-38.6 0-70-31.4-70-70s31.4-70 70-70zM180 482V378h298v104H180zm48 68h250v308H228V550zm568 308H546V550h250v308zm48-376H546V378h298v104z\" } }] }, \"name\": \"gift\", \"theme\": \"outlined\" };\nexport default GiftOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport GiftOutlinedSvg from \"@ant-design/icons-svg/es/asn/GiftOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar GiftOutlined = function GiftOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: GiftOutlinedSvg\n  }));\n};\n\nGiftOutlined.displayName = 'GiftOutlined';\nexport default /*#__PURE__*/React.forwardRef(GiftOutlined);","// This icon file is generated automatically.\nvar ExceptionOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm376 116c-119.3 0-216 96.7-216 216s96.7 216 216 216 216-96.7 216-216-96.7-216-216-216zm107.5 323.5C750.8 868.2 712.6 884 672 884s-78.8-15.8-107.5-44.5C535.8 810.8 520 772.6 520 732s15.8-78.8 44.5-107.5C593.2 595.8 631.4 580 672 580s78.8 15.8 107.5 44.5C808.2 653.2 824 691.4 824 732s-15.8 78.8-44.5 107.5zM640 812a32 32 0 1064 0 32 32 0 10-64 0zm12-64h40c4.4 0 8-3.6 8-8V628c0-4.4-3.6-8-8-8h-40c-4.4 0-8 3.6-8 8v112c0 4.4 3.6 8 8 8zM440 852H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"exception\", \"theme\": \"outlined\" };\nexport default ExceptionOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ExceptionOutlinedSvg from \"@ant-design/icons-svg/es/asn/ExceptionOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ExceptionOutlined = function ExceptionOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ExceptionOutlinedSvg\n  }));\n};\n\nExceptionOutlined.displayName = 'ExceptionOutlined';\nexport default /*#__PURE__*/React.forwardRef(ExceptionOutlined);","// Components\nimport { ItemCard } from './ItemCard';\n\ntype ItemCardEmptyProps = {\n  cardWidth: number;\n  cardType: 'evidence' | 'weapon';\n};\n\nexport function ItemCardEmpty({ cardWidth, cardType }: ItemCardEmptyProps) {\n  return (\n    <ItemCard\n      item={{\n        id: `dmhk-${cardType === 'evidence' ? 'ev' : 'wp'}-000`,\n        type: cardType,\n        name: {\n          pt: '?',\n          en: '?',\n        },\n      }}\n      cardWidth={cardWidth}\n      isSelected={false}\n      preview={false}\n    />\n  );\n}\n","// This icon file is generated automatically.\nvar WarningFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M955.7 856l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48zM480 416c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v184c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V416zm32 352a48.01 48.01 0 010-96 48.01 48.01 0 010 96z\" } }] }, \"name\": \"warning\", \"theme\": \"filled\" };\nexport default WarningFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport WarningFilledSvg from \"@ant-design/icons-svg/es/asn/WarningFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar WarningFilled = function WarningFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: WarningFilledSvg\n  }));\n};\n\nWarningFilled.displayName = 'WarningFilled';\nexport default /*#__PURE__*/React.forwardRef(WarningFilled);","import clsx from 'clsx';\n// Ant Design Resources\nimport {\n  CheckCircleFilled,\n  CloseCircleFilled,\n  LockFilled,\n  MinusCircleFilled,\n  QuestionCircleFilled,\n  WarningFilled,\n} from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\n\ntype CrimeGuessStatusProps = {\n  status: string;\n  withDescription?: boolean;\n  className?: string;\n};\n\nexport function CrimeGuessStatus({ status, withDescription = false, className = '' }: CrimeGuessStatusProps) {\n  const baseClass = 'crime-guess-status';\n\n  switch (status) {\n    case 'LOCKED':\n      return (\n        <span className={clsx(baseClass, `${baseClass}--${status}`, className)}>\n          <LockFilled color=\"gray\" />\n          <Translate pt=\"TRAVADO\" en=\"LOCKED\" />\n          {withDescription && (\n            <Translate\n              pt=\": Você já tinha adivinhado esse corretamente\"\n              en=\": You already guessed this one correctly\"\n            />\n          )}\n        </span>\n      );\n    case 'CORRECT':\n      return (\n        <span className={clsx(baseClass, `${baseClass}--${status}`, className)}>\n          <CheckCircleFilled color=\"green\" />\n          <Translate pt=\"CORRETO\" en=\"CORRECT\" />\n          {withDescription && (\n            <Translate pt=\": Você acertou arma e objeto\" en=\": You got the weapon and object correctly\" />\n          )}\n        </span>\n      );\n    case 'HALF':\n      return (\n        <span className={clsx(baseClass, `${baseClass}--${status}`, className)}>\n          <MinusCircleFilled />\n          <Translate pt=\"SOMENTE UM\" en=\"ONE ONLY\" />\n          {withDescription && (\n            <Translate pt=\": Um dos items está correto\" en=\": One of the items is correct\" />\n          )}\n        </span>\n      );\n    case 'WRONG':\n      return (\n        <span className={clsx(baseClass, `${baseClass}--${status}`, className)}>\n          <CloseCircleFilled color=\"red\" />\n          <Translate pt=\"ERRADO\" en=\"WRONG\" />\n          {withDescription && (\n            <Translate pt=\": Você errou ambos arma e objeto\" en=\": You got both weapon and object wrong\" />\n          )}\n        </span>\n      );\n    case 'WRONG_GROUP':\n      return (\n        <span className={clsx(baseClass, `${baseClass}--${status}`, className)}>\n          <WarningFilled color=\"red\" />\n          <Translate pt=\"GRUPO ERRADO\" en=\"WRONG GROUP\" />\n          {withDescription && (\n            <Translate\n              pt=\": Você é tão burro que você escolheu items no grupo errado\"\n              en=\": You're so dumb you chose items in the wrong group\"\n            />\n          )}\n        </span>\n      );\n    default:\n      return (\n        <span className={clsx(baseClass, `${baseClass}--${status}`, className)}>\n          <QuestionCircleFilled />\n          <Translate pt=\"?\" en=\"?\" />\n          );\n          {withDescription && (\n            <Translate pt=\": Recebido status desconhecido\" en=\": Received unknown guess status\" />\n          )}\n        </span>\n      );\n  }\n}\n","import { useState } from 'react';\nimport clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Tooltip } from 'antd';\nimport {\n  CheckCircleFilled,\n  ClockCircleFilled,\n  EnvironmentOutlined,\n  ExceptionOutlined,\n  GiftOutlined,\n  LockFilled,\n  SafetyOutlined,\n} from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from 'hooks';\n// Utils\nimport { getAvatarColorById } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { ItemCard } from './ItemCard';\nimport { ItemCardEmpty } from './ItemCardEmpty';\nimport { CrimeGuessStatus } from './CrimeGuessStatus';\n\nconst CARD_WIDTH = 100;\n\ntype CrimeProps = {\n  history?: GuessHistoryEntry[];\n  crime: Crime;\n  items: ItemsDict;\n  player: GamePlayer;\n  scenes: ScenesDict;\n  scenesOrder: string[];\n  selectedWeaponId?: CardId;\n  selectedEvidenceId?: CardId;\n  isLocked?: boolean;\n};\n\nexport function Crime({\n  crime,\n  player,\n  scenesOrder,\n  scenes,\n  selectedWeaponId,\n  selectedEvidenceId,\n  history,\n  items,\n  isLocked,\n}: CrimeProps) {\n  const [historyEntryIndex, setHistoryEntryIndex] = useState(-1);\n  const isComplete = Boolean(selectedWeaponId && selectedWeaponId);\n\n  const activeWeaponId =\n    historyEntryIndex >= 0 && history ? history[historyEntryIndex].weaponId : selectedWeaponId;\n\n  const evidenceWeaponId =\n    historyEntryIndex >= 0 && history ? history[historyEntryIndex].evidenceId : selectedEvidenceId;\n\n  const color = getAvatarColorById(player.avatarId);\n  const hasHistory = history && history.length;\n\n  return (\n    <div className=\"h-crime\">\n      <div className=\"h-crime__player\" style={{ backgroundColor: color }}>\n        <span className=\"h-crime__player-avatar\">\n          <Avatar id={player.avatarId} />\n        </span>\n        <span className=\"h-crime__player-name\">{player.name}</span>\n      </div>\n\n      <div className=\"h-crime__scenes\">\n        {scenesOrder\n          .filter((sceneId) => crime.scenes[sceneId] !== undefined)\n          .map((sceneId) => {\n            const scene = scenes[sceneId];\n\n            return (\n              <CrimeScene\n                key={`crime-scene-${sceneId}-by-${crime.playerId}`}\n                scene={scene}\n                playerIndex={crime.scenes[sceneId]}\n              />\n            );\n          })}\n      </div>\n\n      <div className=\"h-crime__history\" style={{ borderColor: hasHistory ? color : 'transparent' }}>\n        {hasHistory && (\n          <>\n            <div className=\"h-crime__history-header\">\n              <Tooltip\n                title={\n                  <Translate\n                    pt=\"Histórico: passe o mouse nas rodadas\"\n                    en=\"History: hover the round numbers\"\n                  />\n                }\n              >\n                <ClockCircleFilled />\n              </Tooltip>\n            </div>\n            {history?.map((_, index) => {\n              return (\n                <Button\n                  key={`history-entry-${index}`}\n                  ghost\n                  shape=\"circle\"\n                  size=\"small\"\n                  onMouseOver={() => setHistoryEntryIndex(index)}\n                  onMouseLeave={() => setHistoryEntryIndex(-1)}\n                >\n                  {index + 1}\n                </Button>\n              );\n            })}\n          </>\n        )}\n      </div>\n\n      <div className=\"h-crime-selections\">\n        {activeWeaponId ? (\n          <ItemCard item={items[activeWeaponId]} cardWidth={CARD_WIDTH} preview />\n        ) : (\n          <ItemCardEmpty cardWidth={CARD_WIDTH} cardType=\"weapon\" />\n        )}\n\n        {evidenceWeaponId ? (\n          <ItemCard item={items[evidenceWeaponId]} cardWidth={CARD_WIDTH} preview />\n        ) : (\n          <ItemCardEmpty cardWidth={CARD_WIDTH} cardType=\"evidence\" />\n        )}\n\n        <div className=\"h-crime-selections__status\">\n          {historyEntryIndex >= 0 && history && history[historyEntryIndex] && (\n            <CrimeGuessStatus status={history[historyEntryIndex].status} />\n          )}\n          {historyEntryIndex === -1 && isLocked && <CrimeGuessStatus status=\"LOCKED\" />}\n        </div>\n      </div>\n\n      <div className=\"h-crime__player\" style={{ backgroundColor: isComplete ? color : undefined }}>\n        {isLocked && <LockFilled />}\n        {!isLocked && isComplete && <CheckCircleFilled />}\n      </div>\n    </div>\n  );\n}\n\ntype CrimeSceneProps = {\n  scene: SceneTile;\n  playerIndex: number;\n};\n\nfunction CrimeScene({ scene, playerIndex }: CrimeSceneProps) {\n  const { language } = useLanguage();\n  return (\n    <li className={clsx('h-crime-scene', `h-crime-scene--${scene.type}`)}>\n      <div className={clsx('h-crime-scene__label', `h-crime-scene__label--${scene.type}`)}>\n        <CrimeSceneIcon type={scene.type} /> {scene.title[language]}\n      </div>\n      <div className=\"h-crime-scene__value\">{scene.values[playerIndex][language]}</div>\n    </li>\n  );\n}\n\ntype CrimeSceneIconProps = {\n  type: string;\n};\n\nfunction CrimeSceneIcon({ type }: CrimeSceneIconProps) {\n  switch (type) {\n    case 'cause':\n      return <SafetyOutlined />;\n    case 'evidence':\n      return <GiftOutlined />;\n    case 'location':\n      return <EnvironmentOutlined />;\n    default:\n      return <ExceptionOutlined />;\n  }\n}\n","// Hooks\nimport { useCardWidth } from 'hooks';\n// Components\nimport { ItemCard } from './ItemCard';\n\ntype GroupedItemsBoardProps = {\n  groupedItems: GroupedItems;\n  items: ItemsDict;\n  weaponId?: string;\n  evidenceId?: string;\n};\n\nexport function GroupedItemsBoard({ items, weaponId, evidenceId, groupedItems }: GroupedItemsBoardProps) {\n  const cardWidth = useCardWidth(12, 8, 30, 200);\n  return (\n    <ul className=\"h-grouped-items-board\">\n      {Object.values(groupedItems).map((group, index) => (\n        <li key={`group-${index}`}>\n          <ul className=\"h-grouped-items-board__group\">\n            {group.map((itemId) => (\n              <li key={itemId}>\n                <ItemCard\n                  item={items[itemId]}\n                  cardWidth={cardWidth}\n                  isSelected={[weaponId, evidenceId].includes(itemId)}\n                />\n              </li>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, Collapse, Space } from 'antd';\n// Components\nimport { Translate } from 'components/language';\nimport { ReadyPlayersBar } from 'components/players';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Crime } from './components/Crime';\nimport { GroupedItemsBoard } from './components/GroupedItemsBoard';\nimport { SceneTile } from './components/SceneTile';\n\ntype StepNewSceneProps = {\n  user: GamePlayer;\n  items: ItemsDict;\n  groupedItems: GroupedItems;\n  onSubmitMark: GenericFunction;\n  sceneTile: SceneTile;\n  crimes: Crime[];\n  scenes: ScenesDict;\n  scenesOrder: string[];\n  players: GamePlayers;\n};\n\nexport function StepNewScene({\n  user,\n  items,\n  groupedItems,\n  onSubmitMark,\n  sceneTile,\n  crimes,\n  players,\n  scenes,\n  scenesOrder,\n}: StepNewSceneProps) {\n  const [sceneMarkIndex, setSceneMarkIndex] = useState<number>();\n\n  const onSelectItem = (payload: SceneTilePayload) => {\n    setSceneMarkIndex(payload.value);\n  };\n\n  const crime = crimes.find((crime) => crime.playerId === user.id);\n\n  return (\n    <Step>\n      <Title>\n        <Translate pt=\"Dê mais detalhes do crime\" en=\"Give us more details\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Baseado em suas cartas, selecione uma opção na nova carta de detalhes da Cena do Crime abaixo.\n            </>\n          }\n          en={<>Based on your cards, select an option in the new Scene card below.</>}\n        />\n      </Instruction>\n\n      <Collapse>\n        <Collapse.Panel\n          key=\"weapons-evidences\"\n          header={\n            <Translate\n              pt=\"Clique para ver todas Armas e Evidências\"\n              en=\"Click to see all Weapons and Evidence\"\n            />\n          }\n        >\n          <GroupedItemsBoard\n            groupedItems={groupedItems}\n            items={items}\n            weaponId={user.weaponId}\n            evidenceId={user.evidenceId}\n          />\n        </Collapse.Panel>\n      </Collapse>\n\n      <div className=\"\">\n        <Crime\n          key={`crime-by-${crime!.playerId}`}\n          crime={crime!}\n          scenes={scenes}\n          scenesOrder={scenesOrder}\n          items={items}\n          player={user}\n          selectedWeaponId={user.weaponId}\n          selectedEvidenceId={user.evidenceId}\n        />\n      </div>\n\n      <SceneTile tile={sceneTile} onSelectValue={onSelectItem} index={sceneMarkIndex} />\n\n      <Space className=\"space-container\" align=\"center\">\n        <Button\n          type=\"primary\"\n          size=\"large\"\n          disabled={sceneMarkIndex === undefined}\n          onClick={() => onSubmitMark({ sceneIndex: sceneMarkIndex })}\n        >\n          <Translate pt=\"Enviar\" en=\"Send\" />\n        </Button>\n      </Space>\n\n      <ReadyPlayersBar players={players} />\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useUser, useLanguage, useMock, useStep } from 'hooks';\nimport { useOnSubmitMarkAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\nimport { mockSceneMark } from './utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { RoundAnnouncement } from 'components/round';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { StepNewScene } from './StepNewScene';\n\nfunction PhaseSceneMarking({ players, state, info }: PhaseProps) {\n  const { language, translate } = useLanguage();\n  const user = useUser(players);\n  const { step, setStep, goToNextStep } = useStep(0);\n\n  const onSubmitMark = useOnSubmitMarkAPIRequest(setStep);\n\n  useMock(() => {\n    onSubmitMark({ sceneIndex: mockSceneMark() });\n  }, []);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.CRIMES_HEDIONDOS.SCENE_MARKING}>\n      <StepSwitcher step={step} conditions={[!user.ready, !user.ready, !user.ready]} players={players}>\n        {/* Step 0 */}\n        <RoundAnnouncement round={state?.round} onPressButton={goToNextStep} buttonText=\" \" time={5} />\n\n        {/* Step 1 */}\n        <PhaseAnnouncement\n          type=\"loupe\"\n          title={translate('Nova pista', 'New clue')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <Translate\n              pt=\"Compartilhe mais uma pista sobre seu crime:\"\n              en=\"Share one more piece of information about your crime:\"\n            />\n            <br />\n            {state.currentScene.description[language]}\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 2 */}\n        <StepNewScene\n          user={user}\n          groupedItems={state.groupedItems}\n          items={state.items}\n          onSubmitMark={onSubmitMark}\n          sceneTile={state.currentScene}\n          scenes={state.scenes}\n          scenesOrder={state.scenesOrder}\n          crimes={state.crimes}\n          players={players}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseSceneMarking;\n","import { orderBy } from 'lodash';\nimport { getLastItem } from 'utils/helpers';\n\ntype SplitWeaponsAndEvidence = {\n  weapons: HCard[];\n  evidences: HCard[];\n};\nexport const splitWeaponsAndEvidence = (items: ItemsDict, language: Language): SplitWeaponsAndEvidence => {\n  const { weapons, evidences } = Object.values(items).reduce(\n    (acc: PlainObject, item) => {\n      if (item.type === 'weapon') {\n        acc.weapons.push(item);\n      } else {\n        acc.evidences.push(item);\n      }\n      return acc;\n    },\n    {\n      weapons: [],\n      evidences: [],\n    }\n  );\n\n  const sortedWeapons = orderBy(weapons, [`name.${language}`], ['asc']);\n  const sortedEvidences = orderBy(evidences, [`name.${language}`], ['asc']);\n\n  return {\n    weapons: sortedWeapons,\n    evidences: sortedEvidences,\n  };\n};\n\nexport const getHistory = (playerHistory: HHistory, activePlayerId: PlayerId) => {\n  return playerHistory?.[activePlayerId] ?? [];\n};\n\nexport const isHistoryLocked = (history: HHistory, activePlayerId: PlayerId): boolean => {\n  const lastGuessHistory = getLastItem(getHistory(history, activePlayerId));\n  return Boolean(['CORRECT', 'LOCKED'].includes(lastGuessHistory?.status));\n};\n\nexport const isEntryLocked = (historyEntry: GuessHistoryEntry): boolean => {\n  return Boolean(['CORRECT', 'LOCKED'].includes(historyEntry?.status));\n};\n\nexport const autoSelectCorrectGuesses = (history: HHistory) => {\n  const guesses: PlainObject = {};\n  Object.entries(history).forEach(([key, historyEntryArray]: any) => {\n    const historyEntry: GuessHistoryEntry = getLastItem(historyEntryArray);\n    if (['CORRECT', 'LOCKED'].includes(historyEntry.status)) {\n      guesses[key] = {\n        weaponId: historyEntry.weaponId,\n        evidenceId: historyEntry.evidenceId,\n        isComplete: true,\n      };\n    }\n  });\n  return guesses;\n};\n","import { orderBy } from 'lodash';\n// Helpers\nimport { isHistoryLocked } from '../utils/helpers';\n// Components\nimport { AvatarCard, AvatarIcon } from 'components/avatars';\nimport { TransparentButton } from 'components/buttons';\n\ntype PlayersCardsProps = {\n  activePlayerId: PlayerId;\n  setActivePlayerId: GenericFunction;\n  guesses: PlainObject;\n  players: GamePlayers;\n  user: GamePlayer;\n  history: HHistory;\n};\n\nexport function PlayersCards({\n  activePlayerId,\n  setActivePlayerId,\n  players,\n  guesses,\n  user,\n  history,\n}: PlayersCardsProps) {\n  return (\n    <ul className=\"h-players-cards\">\n      {orderBy(Object.values(players), ['name']).map((player) => {\n        const isActive = activePlayerId === player.id;\n        const isComplete =\n          user.id === player.id || Boolean(guesses[player.id]?.weaponId && guesses[player.id]?.evidenceId);\n        const isLocked = isHistoryLocked(history, player.id);\n        return (\n          <li key={`player-card-${player.id}`}>\n            <TransparentButton onClick={() => setActivePlayerId(player.id)} active={isActive}>\n              <AvatarCard\n                size=\"small\"\n                player={player}\n                withName\n                replacementAvatar={\n                  (isLocked && <AvatarIcon type=\"lock\" className=\"h-players-cards__seal\" />) ||\n                  (isComplete && <AvatarIcon type=\"knife\" className=\"h-players-cards__seal\" />)\n                }\n              />\n            </TransparentButton>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","// Hooks\nimport { useCardWidth } from 'hooks';\n// Components\nimport { TransparentButton } from 'components/buttons';\nimport { ItemCard } from './ItemCard';\n\nconst getEliminatedCard = (cardType: string) => ({\n  id: `dmhk-${cardType === 'ev' ? 'ev' : 'wp'}-xxx`,\n  type: cardType,\n  name: {\n    pt: 'x',\n    en: 'x',\n  },\n});\n\ntype SelectableGroupedItemsBoardProps = {\n  groupedItems: GroupedItems;\n  items: ItemsDict;\n  weaponId?: string;\n  evidenceId?: string;\n  onSelectItem: GenericFunction;\n  activeColor?: string;\n  isLocked?: boolean;\n  wrongGroups?: number[];\n};\n\nexport function SelectableGroupedItemsBoard({\n  items,\n  weaponId,\n  evidenceId,\n  groupedItems,\n  onSelectItem,\n  activeColor,\n  isLocked,\n  wrongGroups = [],\n}: SelectableGroupedItemsBoardProps) {\n  const cardWidth = useCardWidth(12, 8, 30, 200);\n\n  return (\n    <ul className=\"h-grouped-items-board\">\n      {Object.values(groupedItems).map((group, index) => {\n        const isGroupWrong = wrongGroups.includes(index);\n\n        return (\n          <li key={`group-${index}`}>\n            <ul\n              className=\"h-grouped-items-board__group\"\n              style={Boolean(activeColor) ? { borderColor: activeColor } : {}}\n            >\n              {group.map((itemId) => (\n                <li key={itemId}>\n                  <TransparentButton\n                    onClick={isLocked || isGroupWrong ? undefined : () => onSelectItem(itemId)}\n                  >\n                    <ItemCard\n                      item={isGroupWrong ? getEliminatedCard(itemId.split('-')[1]) : items[itemId]}\n                      cardWidth={cardWidth}\n                      isSelected={[weaponId, evidenceId].includes(itemId)}\n                      preview={false}\n                      activeColor={activeColor}\n                    />\n                  </TransparentButton>\n                </li>\n              ))}\n            </ul>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import { useEffect, useState } from 'react';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useMock } from 'hooks';\n// Utils\nimport { getAvatarColorById, getLastItem } from 'utils/helpers';\nimport { mockGuesses } from './utils/mock';\nimport { autoSelectCorrectGuesses, getHistory } from './utils/helpers';\n// Components\nimport { Crime } from './components/Crime';\nimport { PlayersCards } from './components/PlayersCards';\nimport { SelectableGroupedItemsBoard } from './components/SelectableGroupedItemsBoard';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { DebugOnly } from 'components/debug';\nimport { FloatingHand } from 'components/cards';\nimport { ReadyPlayersBar } from 'components/players';\n\ntype StepGuessingProps = {\n  user: GamePlayer;\n  players: GamePlayers;\n  items: ItemsDict;\n  groupedItems: GroupedItems;\n  scenes: ScenesDict;\n  scenesOrder: string[];\n  crimes: Crime[];\n  onSubmitGuesses: GenericFunction;\n};\n\nexport function StepGuessing({\n  user,\n  groupedItems,\n  items,\n  players,\n  scenes,\n  scenesOrder,\n  crimes,\n  onSubmitGuesses,\n}: StepGuessingProps) {\n  const [guesses, setGuesses] = useState<PlainObject>({});\n  const [activePlayerId, setActivePlayerId] = useState<PlayerId>('');\n\n  // DEV: Auto guesses\n  useMock(() => {\n    onSubmitGuesses({ guesses: mockGuesses(groupedItems, players, user) });\n  }, []);\n\n  // If last guess was CORRECT or LOCK, auto-guess\n  useEffect(() => {\n    setGuesses((g) => ({ ...g, ...autoSelectCorrectGuesses(user.history) }));\n  }, [user]);\n\n  const onUpdateGuesses = (itemId: string) => {\n    if (activePlayerId && itemId) {\n      const guessObj = {\n        ...(guesses[activePlayerId] ?? {\n          weaponId: undefined,\n          evidenceId: undefined,\n          isComplete: false,\n        }),\n      };\n\n      const isWeapon = itemId.includes('wp');\n\n      if (isWeapon) {\n        guessObj.weaponId = itemId;\n      } else {\n        guessObj.evidenceId = itemId;\n      }\n\n      setGuesses((s: PlainObject) => ({\n        ...s,\n        [activePlayerId]: {\n          ...guessObj,\n          isComplete: Boolean(guessObj?.weaponId && guessObj?.evidenceId),\n        },\n      }));\n    }\n  };\n\n  const playerCount = Object.keys(players).length;\n  const isAllComplete =\n    Object.values(guesses).length === playerCount - 1 &&\n    Object.values(guesses).every((guess) => guess.weaponId && guess.evidenceId);\n  const activeCrime = crimes.find((crime) => crime.playerId === activePlayerId);\n  const isOwnCrime = activePlayerId === user.id;\n  const activePlayerGuesses = guesses?.[activePlayerId] ?? {};\n\n  const lastGuessHistory = getLastItem(getHistory(user.history, activePlayerId));\n  const isLocked = ['CORRECT', 'LOCKED'].includes(lastGuessHistory?.status);\n\n  // Active stuff\n  const { activeWeaponId, activeEvidenceId } = getActiveStuff(\n    isOwnCrime,\n    isLocked,\n    user,\n    activePlayerGuesses,\n    lastGuessHistory\n  );\n\n  return (\n    <Step>\n      <Title>\n        <Translate pt=\"Quais foram os crimes?\" en=\"What were the crimes?\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Selecione cada jogador abaixo, analise suas respostas sobre o crime, e selecione uma arma e um\n              objeto.\n              <br />O par sempre estará no mesmo quadrante, mas os objetos não são exclusivos e diferentes\n              crimes podem usar as mesmas cartas.\n              <br />\n              Crimes que já tem ambos selecionados são indicados por uma faca.\n            </>\n          }\n          en={\n            <>\n              Select each player below, analyze their answers about their crimes, then select a weapon and an\n              object.\n              <br />\n              The pair will always be in the same quadrant, but object are non-exclusive so different crimes\n              might use the same cards.\n              <br />\n              Crimes with both cards selected are indicated by a knife.\n            </>\n          }\n        />\n      </Instruction>\n\n      <DebugOnly dev>\n        <Space className=\"space-container\" align=\"center\">\n          <Button type=\"dashed\" ghost onClick={() => setGuesses(mockGuesses(groupedItems, players, user))}>\n            <Translate pt=\"Seleção Aleatória Semi-inteligente\" en=\"Semi-intelligent Random Selection\" />\n          </Button>\n        </Space>\n      </DebugOnly>\n\n      <PlayersCards\n        user={user}\n        activePlayerId={activePlayerId}\n        setActivePlayerId={setActivePlayerId}\n        players={players}\n        guesses={guesses}\n        history={user.history}\n      />\n\n      {isAllComplete && (\n        <Space className=\"space-container\" align=\"center\">\n          <Button\n            size=\"large\"\n            type=\"primary\"\n            disabled={!isAllComplete}\n            onClick={() => onSubmitGuesses({ guesses })}\n          >\n            <Translate pt=\"Enviar Respostas\" en=\"Send Guesses\" />\n          </Button>\n        </Space>\n      )}\n\n      <SelectableGroupedItemsBoard\n        items={items}\n        weaponId={activeWeaponId}\n        evidenceId={activeEvidenceId}\n        groupedItems={groupedItems}\n        onSelectItem={onUpdateGuesses}\n        activeColor={getAvatarColorById(players[activePlayerId]?.avatarId)}\n        isLocked={isOwnCrime || isLocked}\n        wrongGroups={user?.wrongGroups?.[activePlayerId] ?? []}\n      />\n\n      <ReadyPlayersBar players={players} />\n\n      {activeCrime && (\n        <FloatingHand type=\"stats\">\n          <Crime\n            key={`crime-by-${activeCrime.playerId}`}\n            crime={activeCrime}\n            scenes={scenes}\n            scenesOrder={scenesOrder}\n            items={items}\n            history={user?.history[activeCrime.playerId] ?? []}\n            player={players[activeCrime.playerId]}\n            selectedWeaponId={activeWeaponId}\n            selectedEvidenceId={activeEvidenceId}\n            isLocked={isOwnCrime || isLocked}\n          />\n        </FloatingHand>\n      )}\n    </Step>\n  );\n}\n\nconst getActiveStuff = (\n  isOwnCrime: boolean,\n  isLocked: boolean,\n  user: GamePlayer,\n  activePlayerGuesses: any,\n  lastGuessHistory: GuessHistoryEntry\n): { activeWeaponId: string; activeEvidenceId: string } => {\n  if (isOwnCrime) {\n    return {\n      activeWeaponId: user.weaponId,\n      activeEvidenceId: user.evidenceId,\n    };\n  }\n\n  if (isLocked) {\n    return {\n      activeWeaponId: lastGuessHistory.weaponId,\n      activeEvidenceId: lastGuessHistory.evidenceId,\n    };\n  }\n\n  return {\n    activeWeaponId: activePlayerGuesses.weaponId,\n    activeEvidenceId: activePlayerGuesses.evidenceId,\n  };\n};\n","// State & Hooks\nimport { useIsUserReady, useUser, useLanguage, useStep } from 'hooks';\nimport { useOnSubmitGuessesAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { GuessMessage } from './components/RulesBlobs';\nimport { StepGuessing } from './StepGuessing';\n\nfunction PhaseGuessing({ players, state, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, setStep, goToNextStep } = useStep(0);\n  const user = useUser(players);\n  const isUserReady = useIsUserReady(players, state);\n\n  const onSubmitGuesses = useOnSubmitGuessesAPIRequest(setStep);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.CRIMES_HEDIONDOS.GUESSING}>\n      <StepSwitcher step={step} conditions={[!isUserReady, !isUserReady]} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          type=\"guess\"\n          title={translate('Tente Adivinhar', 'Try to guess')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <GuessMessage />\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepGuessing\n          user={user}\n          groupedItems={state.groupedItems}\n          items={state.items}\n          players={players}\n          scenes={state.scenes}\n          scenesOrder={state.scenesOrder}\n          crimes={state.crimes}\n          onSubmitGuesses={onSubmitGuesses}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseGuessing;\n","import { orderBy } from 'lodash';\n// Ant Design Resources\nimport { Table, Tooltip } from 'antd';\n// Components\nimport { AvatarName, Avatar, AvatarIcon } from 'components/avatars';\nimport { CrimeGuessStatus } from './CrimeGuessStatus';\n\ntype ResultsTableProps = {\n  players: GamePlayers;\n  results: HResults;\n};\n\nexport function ResultsTable({ players, results }: ResultsTableProps) {\n  const columns = [\n    {\n      title: '',\n      dataIndex: 'playerId',\n      render: (playerId: string) => <AvatarName player={players[playerId]} size=\"small\" addressUser />,\n    },\n    ...orderBy(Object.keys(results)).map((playerId) => ({\n      title: <Avatar id={players[playerId].avatarId} size=\"small\" />,\n      dataIndex: playerId,\n      render: (status: string) => <ResultsTableCell status={status} />,\n    })),\n  ];\n\n  const data = orderBy(Object.entries(results)).map(([key, result]) => {\n    return {\n      playerId: key,\n      ...result,\n    };\n  });\n\n  return <Table columns={columns} dataSource={data} pagination={false} size=\"small\" bordered />;\n}\n\ntype ResultsTableCellProps = {\n  status: string;\n};\n\nfunction ResultsTableCell({ status }: ResultsTableCellProps) {\n  switch (status) {\n    case 'LOCKED':\n    case 'CORRECT':\n      return (\n        <Tooltip title={<CrimeGuessStatus status={status} withDescription />} color=\"white\">\n          <AvatarIcon type=\"box-check-mark\" shape=\"square\" alt={status} />\n        </Tooltip>\n      );\n    case 'HALF':\n      return (\n        <Tooltip title={<CrimeGuessStatus status={status} withDescription />} color=\"white\">\n          <AvatarIcon type=\"box-one\" shape=\"square\" alt={status} />\n        </Tooltip>\n      );\n    case 'WRONG':\n      return (\n        <Tooltip title={<CrimeGuessStatus status={status} withDescription />} color=\"white\">\n          <AvatarIcon type=\"box-minus\" shape=\"square\" alt={status} />\n        </Tooltip>\n      );\n    case 'WRONG_GROUP':\n      return (\n        <Tooltip title={<CrimeGuessStatus status={status} withDescription />} color=\"white\">\n          <AvatarIcon type=\"box-x\" shape=\"square\" alt={status} />\n        </Tooltip>\n      );\n    default:\n      return <span>•</span>;\n  }\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, Collapse, Space } from 'antd';\nimport { TrophyOutlined } from '@ant-design/icons';\n// Utils\nimport { getAnimationClass, getLastItem } from 'utils/helpers';\nimport { isEntryLocked } from './utils/helpers';\n// Components\n\nimport { Crime } from './components/Crime';\nimport { GroupedItemsBoard } from './components/GroupedItemsBoard';\nimport { ScoringMessage } from './components/RulesBlobs';\nimport { PlayersCards } from './components/PlayersCards';\nimport { CrimeGuessStatus } from './components/CrimeGuessStatus';\nimport { ResultsTable } from './components/ResultsTable';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { PopoverRule } from 'components/rules';\nimport { TimedButton } from 'components/buttons';\n\ntype StepRevealProps = {\n  user: GamePlayer;\n  players: GamePlayers;\n  items: ItemsDict;\n  groupedItems: GroupedItems;\n  scenes: ScenesDict;\n  scenesOrder: string[];\n  crimes: Crime[];\n  onSeeRanking: GenericFunction;\n  round: GameRound;\n  results: HResults;\n  isFirstRunThrough: boolean;\n};\n\nexport function StepReveal({\n  user,\n  groupedItems,\n  items,\n  players,\n  scenes,\n  scenesOrder,\n  crimes,\n  onSeeRanking,\n  round,\n  results,\n  isFirstRunThrough,\n}: StepRevealProps) {\n  const [activePlayerId, setActivePlayerId] = useState<PlayerId>('');\n\n  const playerCount = Object.keys(players).length;\n\n  const activeCrime = crimes.find((crime) => crime.playerId === activePlayerId);\n  const isOwnCrime = activePlayerId === user.id;\n  const history: GuessHistoryEntry[] = user.history?.[(activeCrime! ?? {})?.playerId] ?? [];\n  const latestHistoryEntry = getLastItem(history);\n  const isLocked = isEntryLocked(latestHistoryEntry);\n\n  return (\n    <Step>\n      <Title>\n        <Translate pt=\"Resultado\" en=\"Results\" />\n      </Title>\n\n      <PopoverRule content={<ScoringMessage round={round} />} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Veja aqui como todos os jogadores foram. Passe o mouse nos ícones para saber mais detalhes.\n              <br />\n              As colunas são os crimes e as linhas são os chutes dessa rodada de cada jogador.\n            </>\n          }\n          en={\n            <>\n              See how all players did. Hover the icons to see details.\n              <br />\n              The columns are the crimes and the rows are the guesses for each player.\n            </>\n          }\n        />\n        <ResultsTable players={players} results={results} />\n        <Translate\n          pt={\n            <>\n              Você acertou {user.correctCrimes} pares e está com um total (secreto) de{' '}\n              {user.score + user.secretScore} pontos.\n            </>\n          }\n          en={\n            <>\n              You guesses {user.correctCrimes} crimes and have a (secret) total of{' '}\n              {user.score + user.secretScore} points.\n            </>\n          }\n        />\n      </Instruction>\n\n      <Space className=\"space-container\" align=\"center\">\n        <Collapse>\n          <Collapse.Panel\n            key=\"weapons-evidences\"\n            header={<Translate pt=\" Ver todas Armas e Evidências\" en=\"See all Weapons and Evidence\" />}\n          >\n            <GroupedItemsBoard\n              items={items}\n              weaponId={user.weaponId}\n              evidenceId={user.evidenceId}\n              groupedItems={groupedItems}\n            />\n          </Collapse.Panel>\n        </Collapse>\n      </Space>\n\n      <PlayersCards\n        user={user}\n        activePlayerId={activePlayerId}\n        setActivePlayerId={setActivePlayerId}\n        players={players}\n        guesses={{}}\n        history={user.history}\n      />\n\n      {Boolean(activePlayerId) && (\n        <Instruction\n          contained\n          className={!isLocked && !isOwnCrime ? getAnimationClass('tada') : ''}\n          key={`instruction-status-${activePlayerId}`}\n        >\n          {Boolean(latestHistoryEntry) ? (\n            <CrimeGuessStatus status={latestHistoryEntry.status} withDescription />\n          ) : isOwnCrime ? (\n            <Translate pt=\"Este é o seu próprio crime\" en=\"This is your own crime\" />\n          ) : (\n            ''\n          )}\n        </Instruction>\n      )}\n\n      {activeCrime && (\n        <div\n          className={getAnimationClass('slideInUp', undefined, 'fast')}\n          key={`crime-by-${activeCrime.playerId}`}\n        >\n          <Crime\n            crime={activeCrime}\n            scenes={scenes}\n            scenesOrder={scenesOrder}\n            items={items}\n            history={user.history[activeCrime.playerId]}\n            player={players[activeCrime.playerId]}\n            selectedWeaponId={isOwnCrime ? user.weaponId : latestHistoryEntry.weaponId}\n            selectedEvidenceId={isOwnCrime ? user.evidenceId : latestHistoryEntry.evidenceId}\n            isLocked={isLocked}\n          />\n        </div>\n      )}\n\n      <Space className=\"space-container\" align=\"center\">\n        {isFirstRunThrough ? (\n          <TimedButton\n            onClick={onSeeRanking}\n            onExpire={onSeeRanking}\n            duration={Math.min(playerCount * 10, 60)}\n            icon={<TrophyOutlined />}\n          >\n            <Translate pt=\"Ver Ranking\" en=\"See Ranking\" />\n          </TimedButton>\n        ) : (\n          <Button onClick={onSeeRanking} icon={<TrophyOutlined />}>\n            <Translate pt=\"Ver Ranking\" en=\"See Ranking\" />\n          </Button>\n        )}\n      </Space>\n    </Step>\n  );\n}\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Components\nimport { AdminNextRoundButton } from 'components/admin';\nimport { Translate } from 'components/language';\nimport { RankingBoard } from 'components/ranking';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\n\ntype StepRankingProps = {\n  ranking: GameRanking;\n  players: GamePlayers;\n  goToPreviousStep: GenericFunction;\n  round: GameRound;\n  lastRound?: boolean;\n};\n\nexport function StepRanking({ ranking, players, goToPreviousStep, round, lastRound }: StepRankingProps) {\n  const roundPoints = round.total - round.current + 1;\n\n  return (\n    <Step fullWidth>\n      <Title>Ranking</Title>\n      <Instruction contained>\n        <Translate\n          pt={<>Pares corretos ganham {roundPoints} pontos nessa rodada. 1 ponto a menos na próxima.</>}\n          en={<>Correct pairs get {roundPoints} points this round. 1 point less next round.</>}\n        />\n      </Instruction>\n\n      <RankingBoard ranking={ranking} players={players} />\n\n      <Space className=\"space-container\" align=\"center\">\n        <Button onClick={goToPreviousStep}>\n          <Translate pt=\"Ver resultado novamente\" en=\"See results again\" />\n        </Button>\n      </Space>\n      <AdminNextRoundButton round={round} lastRound={lastRound} />\n    </Step>\n  );\n}\n","import { useEffect, useState } from 'react';\n// State & Hooks\nimport { useIsUserReady, useUser, useLanguage, useStep } from 'hooks';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { StepReveal } from './StepReveal';\nimport { ScoringMessage } from './components/RulesBlobs';\nimport { StepRanking } from './StepRanking';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\n\nfunction PhaseReveal({ players, state, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, goToNextStep, goToPreviousStep } = useStep(0);\n  const user = useUser(players);\n  const isUserReady = useIsUserReady(players, state);\n  const [isFirstRunThrough, setIsFirstRunThrough] = useState(true);\n\n  // Changes isFirstGalleryRunThrough property which disables controls, after the first gallery run through\n  useEffect(() => {\n    if (isFirstRunThrough && step > 1) {\n      setIsFirstRunThrough(false);\n    }\n  }, [step, isFirstRunThrough]);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.CRIMES_HEDIONDOS.REVEAL}>\n      <StepSwitcher step={step} conditions={[!isUserReady, !isUserReady, !isUserReady]} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          type=\"rank\"\n          title={translate('Resultado', 'Results')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <ScoringMessage round={state.round} />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepReveal\n          user={user}\n          groupedItems={state.groupedItems}\n          items={state.items}\n          players={players}\n          scenes={state.scenes}\n          scenesOrder={state.scenesOrder}\n          crimes={state.crimes}\n          onSeeRanking={goToNextStep}\n          round={state.round}\n          results={state.results}\n          isFirstRunThrough={isFirstRunThrough}\n        />\n\n        {/* Step 2 */}\n        <StepRanking\n          ranking={state.ranking}\n          players={players}\n          goToPreviousStep={goToPreviousStep}\n          round={state.round}\n          lastRound={state?.lastRound}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseReveal;\n","import { orderBy } from 'lodash';\n// Hooks\nimport { useUser } from 'hooks';\n// Components\nimport { GameOverWrapper } from 'components/game-over';\nimport { Crime } from './components/Crime';\n\nfunction PhaseGameOver({ state, players, info }: PhaseProps) {\n  const crimes: Crime[] = state.crimes;\n  const user = useUser(players);\n\n  return (\n    <GameOverWrapper info={info} state={state} announcementIcon=\"trophy\">\n      <ul>\n        {orderBy(crimes, ['playerId']).map((crime) => (\n          <Crime\n            key={`crime-by-${crime.playerId}`}\n            crime={crime}\n            items={state.items}\n            player={players[crime.playerId]}\n            scenes={state.scenes}\n            scenesOrder={state.scenesOrder}\n            selectedEvidenceId={crime.evidenceId}\n            selectedWeaponId={crime.weaponId}\n            history={user.history?.[crime.playerId]}\n          />\n        ))}\n      </ul>\n    </GameOverWrapper>\n  );\n}\n\nexport default PhaseGameOver;\n","// Constants\nimport { GAME_COLLECTION } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport PhaseCrimeSelection from './PhaseCrimeSelection';\nimport PhaseSceneMarking from './PhaseSceneMarking';\nimport PhaseGuessing from './PhaseGuessing';\nimport PhaseReveal from './PhaseReveal';\nimport PhaseGameOver from './PhaseGameOver';\n\nfunction SessionCrimesHediondos({ gameId }: SessionProps) {\n  function getActiveComponent(phase: string) {\n    switch (phase) {\n      case PHASES.DEFAULT.LOBBY:\n        return PhaseLobby;\n      case PHASES.DEFAULT.RULES:\n        return PhaseRules;\n      case PHASES.DEFAULT.SETUP:\n        return PhaseSetup;\n      case PHASES.CRIMES_HEDIONDOS.CRIME_SELECTION:\n        return PhaseCrimeSelection;\n      case PHASES.CRIMES_HEDIONDOS.SCENE_MARKING:\n        return PhaseSceneMarking;\n      case PHASES.CRIMES_HEDIONDOS.GUESSING:\n        return PhaseGuessing;\n      case PHASES.CRIMES_HEDIONDOS.REVEAL:\n        return PhaseReveal;\n      case PHASES.DEFAULT.GAME_OVER:\n        return PhaseGameOver;\n      default:\n        return PageError;\n    }\n  }\n\n  return (\n    <Session\n      gameId={gameId}\n      gameCollection={GAME_COLLECTION.CRIMES_HEDIONDOS}\n      getActiveComponent={getActiveComponent}\n    />\n  );\n}\n\nexport default SessionCrimesHediondos;\n","// This icon file is generated automatically.\nvar CloudUploadOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M518.3 459a8 8 0 00-12.6 0l-112 141.7a7.98 7.98 0 006.3 12.9h73.9V856c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V613.7H624c6.7 0 10.4-7.7 6.3-12.9L518.3 459z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M811.4 366.7C765.6 245.9 648.9 160 512.2 160S258.8 245.8 213 366.6C127.3 389.1 64 467.2 64 560c0 110.5 89.5 200 199.9 200H304c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8h-40.1c-33.7 0-65.4-13.4-89-37.7-23.5-24.2-36-56.8-34.9-90.6.9-26.4 9.9-51.2 26.2-72.1 16.7-21.3 40.1-36.8 66.1-43.7l37.9-9.9 13.9-36.6c8.6-22.8 20.6-44.1 35.7-63.4a245.6 245.6 0 0152.4-49.9c41.1-28.9 89.5-44.2 140-44.2s98.9 15.3 140 44.2c19.9 14 37.5 30.8 52.4 49.9 15.1 19.3 27.1 40.7 35.7 63.4l13.8 36.5 37.8 10C846.1 454.5 884 503.8 884 560c0 33.1-12.9 64.3-36.3 87.7a123.07 123.07 0 01-87.6 36.3H720c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h40.1C870.5 760 960 670.5 960 560c0-92.7-63.1-170.7-148.6-193.3z\" } }] }, \"name\": \"cloud-upload\", \"theme\": \"outlined\" };\nexport default CloudUploadOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloudUploadOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloudUploadOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CloudUploadOutlined = function CloudUploadOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CloudUploadOutlinedSvg\n  }));\n};\n\nCloudUploadOutlined.displayName = 'CloudUploadOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloudUploadOutlined);","// This icon file is generated automatically.\nvar DownSquareOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M505.5 658.7c3.2 4.4 9.7 4.4 12.9 0l178-246c3.8-5.3 0-12.7-6.5-12.7H643c-10.2 0-19.9 4.9-25.9 13.2L512 558.6 406.8 413.2c-6-8.3-15.6-13.2-25.9-13.2H334c-6.5 0-10.3 7.4-6.5 12.7l178 246z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z\" } }] }, \"name\": \"down-square\", \"theme\": \"outlined\" };\nexport default DownSquareOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DownSquareOutlinedSvg from \"@ant-design/icons-svg/es/asn/DownSquareOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar DownSquareOutlined = function DownSquareOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: DownSquareOutlinedSvg\n  }));\n};\n\nDownSquareOutlined.displayName = 'DownSquareOutlined';\nexport default /*#__PURE__*/React.forwardRef(DownSquareOutlined);","// This icon file is generated automatically.\nvar EnvironmentOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M854.6 289.1a362.49 362.49 0 00-79.9-115.7 370.83 370.83 0 00-118.2-77.8C610.7 76.6 562.1 67 512 67c-50.1 0-98.7 9.6-144.5 28.5-44.3 18.3-84 44.5-118.2 77.8A363.6 363.6 0 00169.4 289c-19.5 45-29.4 92.8-29.4 142 0 70.6 16.9 140.9 50.1 208.7 26.7 54.5 64 107.6 111 158.1 80.3 86.2 164.5 138.9 188.4 153a43.9 43.9 0 0022.4 6.1c7.8 0 15.5-2 22.4-6.1 23.9-14.1 108.1-66.8 188.4-153 47-50.4 84.3-103.6 111-158.1C867.1 572 884 501.8 884 431.1c0-49.2-9.9-97-29.4-142zM512 880.2c-65.9-41.9-300-207.8-300-449.1 0-77.9 31.1-151.1 87.6-206.3C356.3 169.5 431.7 139 512 139s155.7 30.5 212.4 85.9C780.9 280 812 353.2 812 431.1c0 241.3-234.1 407.2-300 449.1zm0-617.2c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm79.2 255.2A111.6 111.6 0 01512 551c-29.9 0-58-11.7-79.2-32.8A111.6 111.6 0 01400 439c0-29.9 11.7-58 32.8-79.2C454 338.6 482.1 327 512 327c29.9 0 58 11.6 79.2 32.8C612.4 381 624 409.1 624 439c0 29.9-11.6 58-32.8 79.2z\" } }] }, \"name\": \"environment\", \"theme\": \"outlined\" };\nexport default EnvironmentOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EnvironmentOutlinedSvg from \"@ant-design/icons-svg/es/asn/EnvironmentOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar EnvironmentOutlined = function EnvironmentOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: EnvironmentOutlinedSvg\n  }));\n};\n\nEnvironmentOutlined.displayName = 'EnvironmentOutlined';\nexport default /*#__PURE__*/React.forwardRef(EnvironmentOutlined);","// This icon file is generated automatically.\nvar LockFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM540 701v53c0 4.4-3.6 8-8 8h-40c-4.4 0-8-3.6-8-8v-53a48.01 48.01 0 1156 0zm152-237H332V240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224z\" } }] }, \"name\": \"lock\", \"theme\": \"filled\" };\nexport default LockFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LockFilledSvg from \"@ant-design/icons-svg/es/asn/LockFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar LockFilled = function LockFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: LockFilledSvg\n  }));\n};\n\nLockFilled.displayName = 'LockFilled';\nexport default /*#__PURE__*/React.forwardRef(LockFilled);","// This icon file is generated automatically.\nvar QuestionCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 708c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zm62.9-219.5a48.3 48.3 0 00-30.9 44.8V620c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-21.5c0-23.1 6.7-45.9 19.9-64.9 12.9-18.6 30.9-32.8 52.1-40.9 34-13.1 56-41.6 56-72.7 0-44.1-43.1-80-96-80s-96 35.9-96 80v7.6c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V420c0-39.3 17.2-76 48.4-103.3C430.4 290.4 470 276 512 276s81.6 14.5 111.6 40.7C654.8 344 672 380.7 672 420c0 57.8-38.1 109.8-97.1 132.5z\" } }] }, \"name\": \"question-circle\", \"theme\": \"filled\" };\nexport default QuestionCircleFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport QuestionCircleFilledSvg from \"@ant-design/icons-svg/es/asn/QuestionCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar QuestionCircleFilled = function QuestionCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: QuestionCircleFilledSvg\n  }));\n};\n\nQuestionCircleFilled.displayName = 'QuestionCircleFilled';\nexport default /*#__PURE__*/React.forwardRef(QuestionCircleFilled);","// This icon file is generated automatically.\nvar UpCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M518.5 360.3a7.95 7.95 0 00-12.9 0l-178 246c-3.8 5.3 0 12.7 6.5 12.7H381c10.2 0 19.9-4.9 25.9-13.2L512 460.4l105.2 145.4c6 8.3 15.6 13.2 25.9 13.2H690c6.5 0 10.3-7.4 6.5-12.7l-178-246z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"up-circle\", \"theme\": \"outlined\" };\nexport default UpCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport UpCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/UpCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar UpCircleOutlined = function UpCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: UpCircleOutlinedSvg\n  }));\n};\n\nUpCircleOutlined.displayName = 'UpCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(UpCircleOutlined);"],"names":["Card","children","header","footer","color","size","randomColor","className","headerClassName","footerClassName","baseClass","bgColor","getColorFromLetter","toUpperCase","clsx","style","startsWith","backgroundColor","FloatingHand","subtitle","type","useState","isExpanded","setIsExpanded","translate","useLanguage","onMouseOver","onMouseLeave","alt","pt","en","ImageBlurButton","cardId","useBlurCards","blurCard","isBlurEnabled","placement","title","ghost","onClick","EyeInvisibleOutlined","ImageBlurButtonContainer","props","ImageCard","imageId","cardWidth","preview","shouldBeBlurred","fallbackName","length","imageURL","replace","isBlurred","width","src","process","placeholder","fallback","PUBLIC_URL","maskClassName","ImageCardHand","hand","onSelectCard","selectButtonLabel","selectButtonClass","sizeRatio","cardSize","minCardSize","disabledSelectButton","useCardWidth","map","Boolean","icon","DownSquareOutlined","disabled","ImageCardBack","previewImageId","ImageCardPreloadHand","ImageCardSelectButton","selectLabel","deselectLabel","isSelected","shape","UpCircleOutlined","custom","mockGuesses","groupedItems","players","user","Object","values","reduce","acc","player","id","historyForThisTarget","history","lastGuess","getLastItem","status","weaponId","evidenceId","group","groupIndex","weapons","filter","e","includes","evidences","previousPicksDict","entry","SEPARATOR","pair","getRandomItem","split","previouslyWrongGroups","t","guess","push","availableGroups","i","randomGroup","WelcomeMessage","contained","GuessMessage","ScoringMessage","round","points","total","current","ItemCard","item","activeColor","language","isDebugEnabled","useDevFeatures","borderColor","content","name","maxWidth","ContinueButton","StepItemsSelection","items","selections","updateSelections","setWeaponId","setEvidenceId","userItems","itemGroupIndex","align","randomWeaponId","randomEvidenceId","shuffle","forEach","itemId","SceneTile","tile","index","onSelectValue","description","isActive","CheckCircleFilled","undefined","tileId","value","PlusSquareFilled","ref","React","AntdIcon","_objectSpread","PlusSquareFilledSvg","displayName","SelectedItems","fadeWeapon","fadeEvidence","StepCauseOfDeathSelection","causeOfDeathTile","causeOfDeathIndex","setCauseOfDeathIndex","payload","causeOfDeath","StepLocationSelection","locationTiles","location","setLocation","onSelectItem","locationTile","locationIndex","StepReviewCrime","reasonForEvidenceTile","onSubmitCrime","updateSelection","find","reasonForEvidence","CloudUploadOutlined","readyText","readyTextPlural","StepReasonForEvidence","reasonForEvidenceIndex","setReasonForEvidenceIndex","state","info","useStep","step","setStep","goToNextStep","useUser","isUserReady","useIsUserReady","setSelections","onSubmitCrimeRequest","request","useAPICall","apiFunction","CRIMES_HEDIONDOS_API","actionName","onBeforeCall","onError","successMessage","errorMessage","action","useOnSubmitCrimeAPIRequest","s","useMock","itemsGroup","shuffledItems","weapon","evidence","locationTileId","options","mockCrime","phase","allowedPhase","PHASES","conditions","onPressButton","buttonText","time","circleColor","keys","onClose","currentRound","duration","ClockCircleFilled","ClockCircleFilledSvg","SafetyOutlined","SafetyOutlinedSvg","GiftOutlined","GiftOutlinedSvg","ExceptionOutlined","ExceptionOutlinedSvg","ItemCardEmpty","cardType","WarningFilled","WarningFilledSvg","CrimeGuessStatus","withDescription","LockFilled","MinusCircleFilled","CloseCircleFilled","QuestionCircleFilled","CARD_WIDTH","Crime","crime","scenesOrder","scenes","selectedWeaponId","selectedEvidenceId","isLocked","historyEntryIndex","setHistoryEntryIndex","isComplete","activeWeaponId","evidenceWeaponId","getAvatarColorById","avatarId","hasHistory","sceneId","scene","CrimeScene","playerIndex","playerId","_","CrimeSceneIcon","EnvironmentOutlined","GroupedItemsBoard","StepNewScene","onSubmitMark","sceneTile","crimes","sceneMarkIndex","setSceneMarkIndex","sceneIndex","useOnSubmitMarkAPIRequest","ready","currentScene","getHistory","playerHistory","activePlayerId","PlayersCards","setActivePlayerId","guesses","orderBy","lastGuessHistory","isHistoryLocked","active","withName","replacementAvatar","SelectableGroupedItemsBoard","wrongGroups","isGroupWrong","StepGuessing","onSubmitGuesses","setGuesses","useEffect","g","entries","key","historyEntryArray","historyEntry","autoSelectCorrectGuesses","playerCount","isAllComplete","every","activeCrime","isOwnCrime","activePlayerGuesses","getActiveStuff","activeEvidenceId","dev","guessObj","useOnSubmitGuessesAPIRequest","ResultsTable","results","columns","dataIndex","render","addressUser","ResultsTableCell","data","result","dataSource","pagination","bordered","StepReveal","onSeeRanking","isFirstRunThrough","latestHistoryEntry","correctCrimes","score","secretScore","getAnimationClass","onExpire","Math","min","TrophyOutlined","StepRanking","ranking","goToPreviousStep","lastRound","roundPoints","fullWidth","setIsFirstRunThrough","announcementIcon","gameId","gameCollection","GAME_COLLECTION","getActiveComponent","PhaseLobby","PhaseRules","PhaseSetup","PhaseCrimeSelection","PhaseSceneMarking","PhaseGuessing","PhaseReveal","PhaseGameOver","PageError","CloudUploadOutlinedSvg","DownSquareOutlinedSvg","EnvironmentOutlinedSvg","LockFilledSvg","QuestionCircleFilledSvg","UpCircleOutlinedSvg"],"sourceRoot":""}