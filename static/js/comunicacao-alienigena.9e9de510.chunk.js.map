{"version":3,"file":"static/js/comunicacao-alienigena.9e9de510.chunk.js","mappings":"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","sources":["components/canvas/CanvasResizer.tsx","components/canvas/CanvasSVG.tsx","components/canvas/DrawingCanvas.tsx","components/cards/Card.tsx","components/metrics/MetricHighlight.tsx","components/metrics/TimeHighlight.tsx","games/comunicacao-alienigena/utils/api-requests.ts","games/comunicacao-alienigena/components/Highlights.tsx","games/comunicacao-alienigena/StepSelectAlien.tsx","games/comunicacao-alienigena/PhaseAlienSelection.tsx","games/comunicacao-alienigena/components/ObjectsKey.tsx","games/comunicacao-alienigena/components/ObjectsGrid.tsx","hooks/useCache.ts","games/comunicacao-alienigena/components/SignsKeyCard.tsx","games/comunicacao-alienigena/components/HumanSignBoard.tsx","games/comunicacao-alienigena/components/SelectableObjectsGrid.tsx","games/comunicacao-alienigena/components/HumanInquiry.tsx","games/comunicacao-alienigena/components/Content.tsx","games/comunicacao-alienigena/utils/constants.ts","games/comunicacao-alienigena/components/AlienViewBoard.tsx","games/comunicacao-alienigena/components/InquiryHistory.tsx","games/comunicacao-alienigena/components/ItemResolution.tsx","games/comunicacao-alienigena/components/RequestHistory.tsx","games/comunicacao-alienigena/components/History.tsx","games/comunicacao-alienigena/components/Status.tsx","games/comunicacao-alienigena/components/BotPopupRules.tsx","games/comunicacao-alienigena/StepHumanAsks.tsx","games/comunicacao-alienigena/PhaseHumanAsk.tsx","games/comunicacao-alienigena/components/AlienWritingBoard.tsx","games/comunicacao-alienigena/StepAlienAnswers.tsx","games/comunicacao-alienigena/PhaseAlienAnswer.tsx","games/comunicacao-alienigena/StepAlienRequests.tsx","games/comunicacao-alienigena/PhaseAlienRequest.tsx","games/comunicacao-alienigena/components/HumanOffering.tsx","games/comunicacao-alienigena/StepHumansOffer.tsx","games/comunicacao-alienigena/PhaseOfferings.tsx","games/comunicacao-alienigena/StepReveal.tsx","games/comunicacao-alienigena/PhaseReveal.tsx","games/comunicacao-alienigena/PhaseGameOver.tsx","games/comunicacao-alienigena/components/HumanSeedingSteps.tsx","games/comunicacao-alienigena/StepSeedAlien.tsx","games/comunicacao-alienigena/PhaseAlienSeeding.tsx","games/comunicacao-alienigena/SessionComunicacaoAlienigena.tsx","games/comunicacao-alienigena/utils/achievements.ts","icons/AlienCommunicationIcon.tsx","icons/BoxCheckMarkIcon.tsx","icons/ClockIcon.tsx","icons/MagicSkullIcon.tsx","icons/TrophyIcon.tsx"],"sourcesContent":["// Ant Design Resources\nimport { Slider } from 'antd';\nimport { DragOutlined } from '@ant-design/icons';\n// State & Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\n// Components\nimport { FixedMenuButton } from 'components/buttons';\nimport { Translate } from 'components/language';\n\n/**\n * Fixed Menu Button for resizing canvas\n */\nexport const CanvasResizer = () => {\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n\n  return (\n    <FixedMenuButton\n      type=\"popover\"\n      position={1}\n      icon={<DragOutlined />}\n      label={labelText}\n      content={\n        <div className=\"canvas-resizer\">\n          <div className=\"canvas-resizer__label\">{labelText}</div>\n          <Slider\n            className=\"canvas-resizer__slider\"\n            value={canvasSize ?? 100}\n            min={150}\n            max={500}\n            step={50}\n            onChange={setCanvasSize}\n          />\n        </div>\n      }\n    />\n  );\n};\n\nconst labelText = <Translate pt=\"Tamanho das Artes\" en=\"Art Size\" />;\n","/**\n * Builds paths from canvas lines\n * @param lines\n * @returns\n */\nconst getPathFromKonvaLines = (lines: CanvasLine[]) => {\n  const result = lines.map((lineArr) => {\n    let path = '';\n    for (let x = 0, y = 1; y < lineArr.length; x += 2, y += 2) {\n      if (lineArr[x + 2] && lineArr[y + 2]) {\n        path += `M${lineArr[x]},${lineArr[y]} L${lineArr[x + 2]},${lineArr[y + 2]}`;\n      }\n    }\n\n    return path;\n  });\n\n  return result;\n};\n\ntype CanvasSVGProps = {\n  /**\n   * The stringified svg path\n   */\n  drawing: string;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * The width of the canvas (default: 500)\n   */\n  width?: number;\n  /**\n   * The height of the canvas (default: 500)\n   */\n  height?: number;\n  /**\n   * Size of the stroke. Default: medium\n   */\n  strokeWidth?: 'small' | 'medium' | 'large';\n  /**\n   * Custom view box size (default: '0 0 500')\n   */\n  viewBox?: string;\n};\n\nexport const CanvasSVG = ({\n  drawing = '',\n  className = '',\n  width = 250,\n  height,\n  strokeWidth = 'medium',\n  viewBox = '0 0 500 500',\n}: CanvasSVGProps) => {\n  const konvaLines = JSON.parse(drawing);\n  const paths = getPathFromKonvaLines(konvaLines);\n\n  const strokeWidthBySize =\n    {\n      small: 3,\n      medium: 5,\n      large: 7,\n    }?.[strokeWidth] ?? 5;\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox={viewBox}\n      overflow=\"hidden\"\n      className={className}\n      style={{ width: `${width}px`, height: `${height || width}px` }}\n    >\n      <defs />\n      {paths.map((path, index) => (\n        <path\n          key={`${drawing}-${index}`}\n          d={path}\n          fill=\"none\"\n          stroke=\"#000\"\n          strokeWidth={strokeWidthBySize}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit=\"10\"\n        />\n      ))}\n    </svg>\n  );\n};\n","import { useRef, useState } from 'react';\nimport { Stage, Layer, Line } from 'react-konva';\nimport clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\nimport { DeleteOutlined, UndoOutlined } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\n\ntype DrawingCanvasProps = {\n  /**\n   * Lines drawn in the canvas\n   */\n  lines: CanvasLine[];\n  /**\n   * Function where any new version of the drawing is sent to\n   */\n  setLines: CanvasSetLine;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Show controls to undo, redo, or erase drawing. Default: false\n   */\n  showControls?: boolean;\n  /**\n   * Size of the stroke. Default: medium\n   */\n  strokeWidth?: 'small' | 'medium' | 'large';\n  /**\n   * The width of the canvas (default: 500)\n   */\n  width?: number;\n  /**\n   * The height of the canvas (default: 500)\n   */\n  height?: number;\n  /**\n   *\n   */\n  willReadFrequently?: boolean;\n};\n\n/**\n * Canvas drawing board using react-konva\n * It requires an array of lines and an setState function to save the lines\n */\nexport const DrawingCanvas = ({\n  lines,\n  setLines,\n  className = '',\n  showControls = false,\n  strokeWidth = 'medium',\n  width = 500,\n  height,\n  willReadFrequently = false,\n}: DrawingCanvasProps) => {\n  const [drawingHistory, setDrawingHistory] = useState<CanvasLine[]>([]);\n  const isDrawing = useRef(false);\n\n  /**\n   * Toggles off the isDrawing flag\n   */\n  const startDrawing = () => {\n    isDrawing.current = true;\n  };\n\n  /**\n   * Toggles off the isDrawing flag and resets history\n   */\n  const stopDrawing = () => {\n    isDrawing.current = false;\n    setDrawingHistory([]);\n  };\n\n  const startLine = (e: any) => {\n    startDrawing();\n    const pos = e.target.getStage().getPointerPosition();\n    setLines([...lines, [Math.round(pos.x), Math.round(pos.y)]]);\n  };\n\n  const finishLine = (e: any) => {\n    // Add point if it was a point\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    const x = Math.round(point.x);\n    const y = Math.round(point.y);\n\n    let lastLineEntry = lines[lines.length - 1];\n    lastLineEntry = lastLineEntry.concat([x + 0.1, y + 0.1]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLineEntry);\n    setLines(lines.concat());\n  };\n\n  /**\n   * Start recording drawing\n   * @param e - konva mouse event\n   */\n  const handleMouseDown = (e: any) => {\n    startLine(e);\n  };\n\n  /**\n   * Tracks mouse moving during the drawing\n   * @param e - konva mouse event\n   */\n  const handleMouseMove = (e: any) => {\n    // no drawing - skipping\n    if (!isDrawing.current) {\n      return;\n    }\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    let lastLine = lines[lines.length - 1];\n    // add end point\n    lastLine = lastLine.concat([Math.round(point.x), Math.round(point.y)]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLine);\n    setLines(lines.concat());\n  };\n\n  const handleMouseUp = (e: any) => {\n    if (isDrawing.current) {\n      stopDrawing();\n\n      finishLine(e);\n    }\n  };\n\n  /**\n   * Handles case when a current drawing is stopped off stage\n   * @param e - mouse event\n   */\n  const handleOffsetMouseUp = () => {\n    stopDrawing();\n  };\n\n  /**\n   * Handles case when a current drawing is started off stage\n   * @param e - mouse event\n   */\n  const handleOffsetMouseDown = () => {\n    startDrawing();\n  };\n\n  /**\n   * Handles when mouse leaves the stage\n   * @param e - konva mouse event\n   */\n  const handleMouseLeave = (e: any) => {\n    if (isDrawing.current) {\n      finishLine(e);\n\n      window.document.addEventListener('mouseup', handleOffsetMouseUp);\n      window.document.addEventListener('touchEnd', handleOffsetMouseUp);\n      window.document.addEventListener('mousedown', handleOffsetMouseDown);\n      window.document.addEventListener('touchStart', handleOffsetMouseDown);\n    }\n  };\n\n  /**\n   * Handles when mouse reenters the state\n   * @param e\n   */\n  const handleMouseEnter = (e: any) => {\n    if (isDrawing.current) {\n      startLine(e);\n    }\n    window.document.removeEventListener('mouseup', handleOffsetMouseUp);\n    window.document.removeEventListener('touchEnd', handleOffsetMouseUp);\n    window.document.removeEventListener('mousedown', handleOffsetMouseDown);\n    window.document.removeEventListener('touchStart', handleOffsetMouseDown);\n  };\n\n  const onClear = () => setLines([]);\n\n  const onUndo = () => {\n    const linesCopy = [...lines];\n    const drawingHistoryCopy = [...drawingHistory];\n    const lastLine: CanvasLine | undefined = linesCopy.pop();\n    if (lastLine) {\n      drawingHistoryCopy.push(lastLine);\n      setLines(linesCopy);\n      setDrawingHistory(drawingHistoryCopy);\n    }\n  };\n\n  const onRedo = () => {\n    const linesCopy = [...lines];\n    const drawingHistoryCopy = [...drawingHistory];\n    const lastUndoLine = drawingHistoryCopy.pop();\n    if (lastUndoLine) {\n      linesCopy.push(lastUndoLine);\n      setLines(linesCopy);\n      setDrawingHistory(drawingHistoryCopy);\n    }\n  };\n\n  const strokeWidthBySize =\n    {\n      small: 3,\n      medium: 5,\n      large: 7,\n    }?.[strokeWidth] ?? 5;\n\n  return (\n    <Space direction=\"vertical\" align=\"center\">\n      <Stage\n        width={width}\n        height={height || width}\n        onMouseDown={handleMouseDown}\n        onMousemove={handleMouseMove}\n        onMouseup={handleMouseUp}\n        onTouchStart={handleMouseDown}\n        onTouchMove={handleMouseMove}\n        onTouchEnd={handleMouseUp}\n        onMouseLeave={handleMouseLeave}\n        onMouseEnter={handleMouseEnter}\n        className={clsx('drawing-canvas', className)}\n        style={{ width: `${width}px`, height: `${height || width}px` }}\n        willReadFrequently={willReadFrequently}\n        id=\"drawing-canvas\"\n      >\n        <Layer>\n          {lines.map((line, i) => (\n            <Line\n              key={i}\n              points={line}\n              stroke=\"#222222\"\n              strokeWidth={strokeWidthBySize}\n              tension={0.5}\n              lineCap=\"round\"\n              globalCompositeOperation=\"source-over\"\n            />\n          ))}\n        </Layer>\n      </Stage>\n      {showControls && (\n        <Space>\n          <Button onClick={onUndo} disabled={lines.length === 0}>\n            <UndoOutlined />\n            <Translate pt=\"Desfazer\" en=\"Undo\" />\n          </Button>\n          <Button onClick={onRedo} disabled={drawingHistory.length === 0}>\n            <UndoOutlined />\n            <Translate pt=\"Refazer\" en=\"Redo\" />\n          </Button>\n          <Button onClick={onClear} disabled={lines.length === 0}>\n            <DeleteOutlined />\n            <Translate pt=\"Apagar\" en=\"Clear\" />\n          </Button>\n        </Space>\n      )}\n    </Space>\n  );\n};\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Utils\nimport { getColorFromLetter } from 'utils/helpers';\n// Sass\nimport './Card.scss';\n\ntype CardProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  header?: string;\n  footer?: string;\n  color?: string;\n  size?: 'small' | 'medium' | 'large';\n  randomColor?: boolean;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  headerClassName?: string;\n  footerClassName?: string;\n  hideHeader?: boolean;\n};\nexport const Card = ({\n  children,\n  header = 'Carta',\n  footer,\n  color = 'none',\n  size = 'medium',\n  randomColor = false,\n  className = '',\n  headerClassName = '',\n  footerClassName = '',\n  hideHeader = false,\n}: CardProps) => {\n  const baseClass = 'card';\n\n  const bgColor = randomColor\n    ? getColorFromLetter(\n        typeof children === 'string'\n          ? children[0].toUpperCase()\n          : header !== 'Carta'\n          ? header[0].toUpperCase()\n          : 'X'\n      )\n    : color;\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, className)}>\n      {!hideHeader && (\n        <span\n          className={clsx(`${baseClass}__header`, `color-background--${bgColor}`, headerClassName)}\n          style={color.startsWith('#') ? { backgroundColor: color } : {}}\n        >\n          {header}\n        </span>\n      )}\n      <span className={`${baseClass}__text`}>{children}</span>\n      {footer && <span className={clsx(`${baseClass}__footer`, footerClassName)}>{footer}</span>}\n    </div>\n  );\n};\n","import { ReactNode } from 'react';\nimport clsx from 'clsx';\n// Types\nimport type { AvatarSize } from 'antd/lib/avatar/AvatarContext';\n// Components\nimport { IconAvatar } from 'components/avatars/IconAvatar';\n\nexport type MetricHighlightProps = {\n  /**\n   * The text to be highlighted\n   */\n  children: ReactNode;\n  /**\n   * The icon representing the metric\n   */\n  icon: ReactNode;\n  /**\n   * Indicates if it's a negative metric\n   */\n  type?: 'positive' | 'negative' | 'default';\n  /**\n   * The size of the avatar (default: small)\n   */\n  iconSize?: AvatarSize;\n  /**\n   * Custom class\n   */\n  className?: string;\n  /**\n   * Icon placement (default: after)\n   */\n  iconPlacement?: 'before' | 'after';\n};\n\nexport function MetricHighlight({\n  children,\n  icon,\n  type,\n  className,\n  iconSize = 'small',\n  iconPlacement = 'after',\n}: MetricHighlightProps) {\n  return (\n    <span className={clsx('metric-highlight', type && `metric-highlight--${type}`, className)}>\n      {iconPlacement === 'before' && (\n        <>\n          <IconAvatar size={iconSize} icon={icon} />{' '}\n        </>\n      )}\n      {children}\n      {iconPlacement === 'after' && (\n        <>\n          {' '}\n          <IconAvatar size={iconSize} icon={icon} />\n        </>\n      )}\n    </span>\n  );\n}\n\nexport type HighlightProps = Pick<MetricHighlightProps, 'children' | 'type' | 'iconSize' | 'className'>;\n","import { ClockIcon } from 'icons/ClockIcon';\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function TimeHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<ClockIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import { functions } from 'services/firebase';\nimport { httpsCallable } from 'firebase/functions';\nimport { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useOnMakeMeReady } from 'hooks/useMakeMeReady';\n\nconst submitAction = httpsCallable(functions, 'comunicacaoAlienigenaSubmitAction');\n\nexport function useOnSubmitAlienAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: submitAction,\n    actionName: 'submit-action',\n    onSuccess: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: translate('Ação submetida com sucesso', 'Action submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua ação',\n      'Oops, the application found an error while trying to submit your action'\n    ),\n  });\n\n  return (payload: SubmitAlienPayload) => {\n    request({\n      action: 'SUBMIT_ALIEN',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitSeedingAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: submitAction,\n    actionName: 'submit-seeds',\n    onSuccess: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: translate('Análise submetida com sucesso', 'Analyses submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua análise',\n      'Oops, the application found an error while trying to submit your analyses'\n    ),\n  });\n\n  return (payload: SubmitSeedingPayload) => {\n    request({\n      action: 'SUBMIT_SEEDS',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitHumanInquiryAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: submitAction,\n    actionName: 'submit-action',\n    onSuccess: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: translate('Ação submetida com sucesso', 'Action submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua ação',\n      'Oops, the application found an error while trying to submit your action'\n    ),\n  });\n\n  return (payload: SubmitHumanInquiryPayload) => {\n    request({\n      action: 'SUBMIT_HUMAN_INQUIRY',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitAlienResponseAPIRequest() {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: submitAction,\n    actionName: 'submit-action',\n    successMessage: translate('Ação submetida com sucesso', 'Action submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua ação',\n      'Oops, the application found an error while trying to submit your action'\n    ),\n  });\n\n  return (payload: SubmitAlienResponsePayload) => {\n    request({\n      action: 'SUBMIT_ALIEN_RESPONSE',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnMakeReady() {\n  return useOnMakeMeReady({});\n}\n\nexport function useOnSubmitAlienRequestAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: submitAction,\n    actionName: 'submit-action',\n    onSuccess: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: translate('Ação submetida com sucesso', 'Action submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua ação',\n      'Oops, the application found an error while trying to submit your action'\n    ),\n  });\n\n  return (payload: SubmitAlienRequestPayload) => {\n    request({\n      action: 'SUBMIT_ALIEN_REQUEST',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitOfferingAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: submitAction,\n    actionName: 'submit-action',\n    onSuccess: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: translate('Ação submetida com sucesso', 'Action submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua ação',\n      'Oops, the application found an error while trying to submit your action'\n    ),\n  });\n\n  return (payload: SubmitOfferingPayload) => {\n    request({\n      action: 'SUBMIT_OFFERING',\n      ...payload,\n    });\n  };\n}\n","// Icons\nimport { PlayerIconsIcon } from 'icons/PlayerIconsIcon';\nimport { MagicSkullIcon } from 'icons/MagicSkullIcon';\n// Components\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\nimport { HieroglyphIcon } from 'icons/HieroglyphIcon';\n\nexport function ItemsHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<PlayerIconsIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n\nexport function HieroglyphHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<HieroglyphIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n\nexport function CurseItemHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<MagicSkullIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useVIP } from 'hooks/useVIP';\n// Components\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { TransparentButton } from 'components/buttons';\nimport { AvatarCard } from 'components/avatars';\nimport { CurseItemHighlight, HieroglyphHighlight, ItemsHighlight } from './components/Highlights';\nimport { TimeHighlight } from 'components/metrics/TimeHighlight';\n\ntype StepSelectAlienProps = {\n  players: GamePlayers;\n  onSubmitAlien: GenericFunction;\n  status: OfferingsStatus;\n} & AnnouncementProps;\n\nexport function StepSelectAlien({ players, announcement, onSubmitAlien, status }: StepSelectAlienProps) {\n  const { isLoading } = useLoading();\n  const isVIP = useVIP();\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title>\n        <Translate pt=\"Quem quer ser o alienígena?\" en=\"Who will be the Alien?\" />\n      </Title>\n\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Um alienígena chegou à Terra e não fala nossa língua. Porém, descobrimos que ele quer abduzir{' '}\n              <ItemsHighlight type=\"positive\">{status.needed} objetos</ItemsHighlight>, mas não sabemos quais.\n              <br />A cada rodada, devemos mostrar alguns objetos ao alienígena com o objetivo de desvendar um\n              dos\n              <HieroglyphHighlight>25 caracteres alienígenas</HieroglyphHighlight> relacionados àqueles\n              objetos. Por exemplo, mostrar uma \"bola\" e um \"pneu\" talvez descobriremos o símbolo para\n              \"redondo\".\n              <br />\n              Então o alienígena vai pedir um objeto específico usando símbolos de sua língua alienígena.\n              <br />\n              Teremos <TimeHighlight>{status.timeLeft}</TimeHighlight> chances de entregar todos os objetos ao\n              alienígena, mas dentre os 25 objetos, há{' '}\n              <CurseItemHighlight type=\"negative\">{status.totalCurses}</CurseItemHighlight> que o alienígena\n              considera amaldiçoado e não quer. Se você oferece um deles, uma chance adicional é usada naquela\n              rodada.\n              <br />\n              <strong>Um jogador deve ser o alienígena. O VIP selecionará o alienígena.</strong>\n            </>\n          }\n          en={\n            <>\n              An alien has arrived on Earth and does not speak our language. However, we figured out that they\n              want to abduct\n              <ItemsHighlight>{status.needed}</ItemsHighlight> objects but we don't know which ones.\n              <br />\n              Each round, we will show a few objects to the alien in the intent to figure out one of the 25\n              alien characters related to those objects. For example, if we should a \"ball\" and \"tire\" we\n              might figure out what symbol means \"round\".\n              <br />\n              Then, the alien will request an specific object using their language.\n              <br />\n              We have <TimeHighlight>{status.timeLeft}</TimeHighlight> chances to offer all request objects,\n              but among the 25 objects there are{' '}\n              <CurseItemHighlight type=\"negative\">{status.totalCurses}</CurseItemHighlight> ones that the\n              alien considered cursed. If we offer one of them, we waste one additional chance.\n              <br />\n              <strong>One player must be the alien, the game master will select it.</strong>\n            </>\n          }\n        />\n      </Instruction>\n\n      <Instruction contained>\n        <Space className=\"space-container\">\n          {Object.values(players).map((player) => {\n            if (isVIP) {\n              return (\n                <TransparentButton\n                  key={`p-bt-${player.id}`}\n                  disabled={isLoading}\n                  onClick={() => onSubmitAlien({ alienId: player.id })}\n                >\n                  <AvatarCard key={`p-a-${player.id}`} player={player} withName addressUser />\n                </TransparentButton>\n              );\n            }\n\n            return <AvatarCard key={`p-a-${player.id}`} player={player} withName addressUser />;\n          })}\n        </Space>\n      </Instruction>\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useStep } from 'hooks/useStep';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\nimport { useOnSubmitAlienAPIRequest } from './utils/api-requests';\n// Icons\nimport { UfoIcon } from 'icons/UfoIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\nimport { StepSelectAlien } from './StepSelectAlien';\n\nexport function PhaseAlienSelection({ players, state, info }: PhaseProps) {\n  const { step, setStep } = useStep();\n\n  const onSubmitAlien = useOnSubmitAlienAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<UfoIcon />}\n      title={<Translate pt=\"Quem quer ser o alienígena?\" en=\"Who will be the Alien?\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    ></PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.COMUNICACAO_ALIENIGENA.ALIEN_SELECTION}\n    >\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepSelectAlien\n          players={players}\n          onSubmitAlien={onSubmitAlien}\n          announcement={announcement}\n          status={state.status}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","// Components\nimport { Translate } from 'components/language';\n\nexport function ObjectsKey() {\n  return (\n    <div className=\"objects-key\">\n      <div className=\"objects-key__entry\">\n        <span className=\"objects-key__example objects-key__example--UNKNOWN\"></span>\n        <span className=\"objects-key__text\">\n          <Translate pt=\"Irrelevante\" en=\"Irrelevant\" />\n        </span>\n      </div>\n      <div className=\"objects-key__entry\">\n        <span className=\"objects-key__example objects-key__example--ITEM\"></span>\n        <span className=\"objects-key__text\">\n          <Translate pt=\"Quer\" en=\"Want\" />\n        </span>\n      </div>\n      <div className=\"objects-key__entry\">\n        <span className=\"objects-key__example objects-key__example--CURSE\"></span>\n        <span className=\"objects-key__text\">\n          <Translate pt=\"Amaldiçoado\" en=\"Cursed\" />\n        </span>\n      </div>\n      <div className=\"objects-key__entry\">\n        <span className=\"objects-key__example objects-key__example--BLANK\"></span>\n        <span className=\"objects-key__text\">\n          <Translate pt=\"Alienígena não quis\" en=\"Alien did not want it\" />\n        </span>\n      </div>\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Badge, Space } from 'antd';\nimport { CheckCircleFilled, CloseCircleFilled } from '@ant-design/icons';\n// Components\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { ObjectsKey } from './ObjectsKey';\n\ntype ObjectsGridProps = {\n  items: Item[];\n  showTypes?: boolean;\n  activeObjects?: CardId[];\n  showAll?: boolean;\n};\n\nexport function ObjectsGrid({ items, showTypes = false, activeObjects, showAll }: ObjectsGridProps) {\n  return (\n    <Space direction=\"vertical\">\n      <Title level={3} size=\"xx-small\">\n        <Translate pt=\"Itens\" en=\"Items\" />\n      </Title>\n      <div className=\"objects-grid\">\n        {items.map((item) => (\n          <div\n            key={`objects-grid-${item.id}`}\n            className={clsx(\n              'objects-grid__item',\n              (showTypes || item.offered) && `objects-grid__item--${item.type}`,\n              activeObjects?.includes(item.id) && `objects-grid__item--ask`\n            )}\n          >\n            {!showAll && Boolean(item.offered) ? (\n              <div className={`objects-grid__item-back objects-grid__item-back--${item.type}`}></div>\n            ) : (\n              <Badge size=\"small\" count={item.inquired} color=\"orange\">\n                <ItemCard id={`${item.id}`} className={clsx(item.offered && 'objects-grid__item-offered')} />\n              </Badge>\n            )}\n            {showAll && Boolean(item.offered) && item.type === 'ITEM' && (\n              <span className=\"objects-grid__offered-icon objects-grid__offered-icon--correct\">\n                <CheckCircleFilled />\n              </span>\n            )}\n            {showAll && Boolean(item.offered) && item.type !== 'ITEM' && (\n              <span className=\"objects-grid__offered-icon objects-grid__offered-icon--incorrect\">\n                <CloseCircleFilled />\n              </span>\n            )}\n          </div>\n        ))}\n      </div>\n\n      <ObjectsKey />\n    </Space>\n  );\n}\n","import { isEmpty } from 'lodash';\nimport { useEffect } from 'react';\nimport { useEffectOnce } from 'react-use';\nimport { useGlobalState } from './useGlobalState';\nimport { useLocalStorage } from './useLocalStorage';\n\nconst LS_KEY = 'cache';\n\n/**\n * Saves and loads cache whenever the player uses it AA\n */\nexport function useCache() {\n  const [cache, setCache] = useGlobalState('cache');\n  const [getLocalStorage, setLocalStorage] = useLocalStorage();\n\n  useEffect(() => {\n    if (!isEmpty(cache)) {\n      setLocalStorage({ [LS_KEY]: JSON.stringify(cache) });\n    }\n  }, [cache, setLocalStorage]);\n\n  const resetCache = () => {\n    setCache({});\n    setLocalStorage({ [LS_KEY]: '{}' });\n  };\n\n  useEffectOnce(() => {\n    if (isEmpty(cache)) {\n      setCache(JSON.parse(getLocalStorage(LS_KEY) ?? '{}'));\n    }\n  });\n\n  return { cache, setCache, resetCache };\n}\n","import clsx from 'clsx';\nimport { orderBy } from 'lodash';\n// Ant Design Resources\nimport { Button, Popconfirm, Popover, Space } from 'antd';\nimport { CheckCircleFilled, InfoCircleOutlined } from '@ant-design/icons';\n// Hooks\nimport { useCache } from 'hooks/useCache';\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { TransparentButton } from 'components/buttons';\nimport { SignCard } from 'components/cards/SignCard';\nimport { DualTranslate, Translate } from 'components/language';\nimport { Title } from 'components/text';\n\ntype SignsKeyCardProps = {\n  signs: Sign[];\n};\n\nexport function SignsKeyCard({ signs }: SignsKeyCardProps) {\n  const { cache, setCache } = useCache();\n  const { language } = useLanguage();\n\n  const updateCache = (signId: number | string, value: boolean) => {\n    setCache((prev) => {\n      const copy = { ...prev };\n      copy[signId] = value;\n      return copy;\n    });\n  };\n\n  return (\n    <Space direction=\"vertical\">\n      <Title level={3} size=\"xx-small\">\n        <Translate pt=\"Atributos e Símbolos\" en=\"Attributes and Symbols\" />\n        <Popover\n          content={\n            <Translate\n              pt=\"Você pode clicar no título do atributo para marcá-lo como usado\"\n              en=\"You may click on the title of an attribute to mark it as used\"\n            />\n          }\n          title={<Translate pt=\"Dica\" en=\"Hint\" />}\n          arrow\n        >\n          <Button type=\"text\" icon={<InfoCircleOutlined />} shape=\"circle\" />{' '}\n        </Popover>\n      </Title>\n      <div className=\"signs-grid\">\n        {orderBy(signs, `attribute.${language}`).map((sign) => (\n          <div\n            className={clsx('signs-grid__item', Boolean(cache[sign.signId]) && 'signs-grid__item--used')}\n            key={sign.attribute[language]}\n          >\n            <Popconfirm\n              title={<Translate pt=\"Usado\" en=\"Used\" />}\n              onConfirm={() => updateCache(sign.signId, true)}\n              onCancel={() => updateCache(sign.signId, false)}\n              okText={<Translate pt=\"Sim\" en=\"Yes\" />}\n              cancelText={<Translate pt=\"Não\" en=\"No\" />}\n            >\n              <TransparentButton>\n                <DualTranslate>{sign.attribute}</DualTranslate>\n                {Boolean(cache[sign.signId]) && <CheckCircleFilled />}\n              </TransparentButton>\n            </Popconfirm>\n            <SignCard id={`${sign.signId}`} className=\"transparent\" />\n          </div>\n        ))}\n      </div>\n    </Space>\n  );\n}\n","import { orderBy } from 'lodash';\n// Ant Design Resources\nimport { Button, Popconfirm, Popover, Space } from 'antd';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n// Hooks\nimport { useCache } from 'hooks/useCache';\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { TransparentButton } from 'components/buttons';\nimport { DrawingCanvas } from 'components/canvas';\nimport { DualTranslate, Translate } from 'components/language';\nimport { Title } from 'components/text';\n\ntype HumanSignBoardProps = {\n  signs: Sign[];\n};\n\nexport function HumanSignBoard({ signs }: HumanSignBoardProps) {\n  const { cache, setCache } = useCache();\n  const { language } = useLanguage();\n\n  const updateCache = (signId: number | string, content: CanvasLine[]) => {\n    setCache((prev) => {\n      const copy = { ...prev };\n      copy[signId] = content ?? [];\n      return copy;\n    });\n  };\n\n  return (\n    <Space direction=\"vertical\">\n      <Title level={3} size=\"xx-small\">\n        <Translate pt=\"Atributos e Símbolos\" en=\"Attributes and Symbols\" />\n        <Popover\n          content={\n            <Translate\n              pt=\"Você pode clicar no título do atributo para apagar o que você desenhou\"\n              en=\"You may click on the title of an attribute to erase what you drew\"\n            />\n          }\n          title={<Translate pt=\"Dica\" en=\"Hint\" />}\n          arrow\n        >\n          <Button type=\"text\" icon={<InfoCircleOutlined />} shape=\"circle\" />{' '}\n        </Popover>\n      </Title>\n      <Space direction=\"vertical\" className=\"board-container\">\n        <div className=\"signs-grid\">\n          {orderBy(signs, `attribute.${language}`).map((sign) => (\n            <div className=\"signs-grid__item\" key={sign.signId}>\n              <Popconfirm\n                title={<Translate pt=\"Apagar símbolo\" en=\"Erase symbol\" />}\n                onConfirm={() => updateCache(sign.signId, [])}\n                okText={<Translate pt=\"Sim\" en=\"Yes\" />}\n                cancelText={<Translate pt=\"Não\" en=\"No\" />}\n              >\n                <TransparentButton>\n                  <DualTranslate>{sign.attribute}</DualTranslate>\n                </TransparentButton>\n              </Popconfirm>\n              <DrawingCanvas\n                lines={cache?.[sign.signId] ?? []}\n                setLines={(content: any) => updateCache(sign.signId, content)}\n                width={60}\n                height={60}\n                showControls={false}\n                strokeWidth=\"small\"\n                className=\"signs-grid__canvas\"\n                willReadFrequently\n              />\n            </div>\n          ))}\n        </div>\n        <div className=\"signs-grid__item\">\n          <Popconfirm\n            title={<Translate pt=\"Apagar símbolo\" en=\"Erase symbol\" />}\n            onConfirm={() => updateCache('unknown', [])}\n            okText={<Translate pt=\"Sim\" en=\"Yes\" />}\n            cancelText={<Translate pt=\"Não\" en=\"No\" />}\n          >\n            <TransparentButton>\n              <Translate pt=\"Símbolos Desconhecidos\" en=\"Unknown Symbols\" />\n            </TransparentButton>\n          </Popconfirm>\n          <DrawingCanvas\n            lines={cache?.['unknown'] ?? []}\n            setLines={(content: any) => updateCache('unknown', content)}\n            width={390}\n            height={60}\n            showControls={false}\n            strokeWidth=\"small\"\n            className=\"signs-grid__canvas\"\n            willReadFrequently\n          />\n        </div>\n\n        <Popconfirm\n          title={<Translate pt=\"Apagar todos\" en=\"Erase Clear all\" />}\n          onConfirm={() => setCache({})}\n          okText={<Translate pt=\"Sim\" en=\"Yes\" />}\n          cancelText={<Translate pt=\"Não\" en=\"No\" />}\n        >\n          <Button size=\"small\" type=\"dashed\">\n            <Translate pt=\"Apagar todos\" en=\"Clear all\" />\n          </Button>\n        </Popconfirm>\n      </Space>\n    </Space>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Badge, Space } from 'antd';\n// Hook\nimport { useLoading } from 'hooks/useLoading';\n// Components\nimport { TransparentButton } from 'components/buttons';\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { ObjectsKey } from './ObjectsKey';\n\ntype SelectableObjectsGridProps = {\n  user: GamePlayer;\n  items: Item[];\n  selectedObjects: BooleanDictionary;\n  selectObject: GenericFunction;\n  maxObjects?: number;\n  hideKey?: boolean;\n  showTypes?: boolean;\n};\n\nexport function SelectableObjectsGrid({\n  items,\n  selectedObjects,\n  selectObject,\n  user,\n  maxObjects = 5,\n  hideKey = false,\n  showTypes = false,\n}: SelectableObjectsGridProps) {\n  const { isLoading } = useLoading();\n\n  return (\n    <Space direction=\"vertical\">\n      <Title level={3} size=\"xx-small\">\n        <Translate pt=\"Itens\" en=\"Items\" />\n      </Title>\n      <div className=\"objects-grid\">\n        {items.map((item) =>\n          Boolean(item.offered) ? (\n            <div\n              className={clsx('objects-grid__button', `objects-grid__item--${item.type}`)}\n              key={`selectable-${item.id}`}\n            >\n              <div className={`objects-grid__item-back objects-grid__item-back--${item.type}`}></div>\n            </div>\n          ) : (\n            <TransparentButton\n              key={`selectable-${item.id}`}\n              className={clsx('objects-grid__button', showTypes && `objects-grid__button--${item.type}`)}\n              disabled={\n                item.offered ||\n                (!selectedObjects[item.id] && Object.keys(selectedObjects).length === maxObjects) ||\n                isLoading ||\n                user.ready\n              }\n              active={selectedObjects[item.id]}\n              activeClass={'objects-grid__button--active'}\n              onClick={() => selectObject(item.id)}\n            >\n              <Badge size=\"small\" count={item.inquired} color=\"orange\">\n                <ItemCard id={`${item.id}`} className={clsx(item.offered && 'objects-grid__item-offered')} />\n              </Badge>\n            </TransparentButton>\n          )\n        )}\n      </div>\n\n      {!hideKey && <ObjectsKey />}\n    </Space>\n  );\n}\n","import { useState } from 'react';\nimport { orderBy } from 'lodash';\n// Ant Design Resources\nimport { Button, Select, Space } from 'antd';\n// Hooks\nimport { useBooleanDictionary } from 'hooks/useBooleanDictionary';\nimport { useLoading } from 'hooks/useLoading';\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { DualTranslate, Translate } from 'components/language';\nimport { HumanSignBoard } from './HumanSignBoard';\nimport { SelectableObjectsGrid } from './SelectableObjectsGrid';\n\ntype HumanInquiryProps = {\n  signs: Sign[];\n  items: Item[];\n  submitInquiry: GenericFunction;\n  user: GamePlayer;\n};\n\nexport function HumanInquiry({ signs, items, submitInquiry, user }: HumanInquiryProps) {\n  const { isLoading } = useLoading();\n  const { language } = useLanguage();\n  const [attribute, setAttribute] = useState<string>('');\n  const {\n    dict: selected,\n    updateDict: updateSelected,\n    keys: objectsIds,\n  } = useBooleanDictionary({}, (d) => Object.keys(d).length < 5);\n\n  return (\n    <Space className=\"space-container\" direction=\"vertical\">\n      <Space>\n        <Select\n          className=\"intention-select\"\n          defaultValue=\"\"\n          size=\"large\"\n          onChange={(value) => setAttribute(value)}\n        >\n          <Select.Option value=\"\">\n            <Translate pt=\"Selecione um atributo\" en=\"Select an attribute\" />\n          </Select.Option>\n          {orderBy(signs, `attribute.${language}`).map((sign) => (\n            <Select.Option key={`sign-${sign.key}`} value={sign.key}>\n              <DualTranslate>{sign.attribute}</DualTranslate>\n            </Select.Option>\n          ))}\n        </Select>\n        <Button\n          size=\"large\"\n          type=\"primary\"\n          disabled={!attribute || objectsIds.length < 1 || isLoading}\n          onClick={() => submitInquiry({ objectsIds, intention: attribute })}\n        >\n          <Translate pt=\"Enviar Objetos\" en=\"Submit Objects\" /> ({objectsIds.length})\n        </Button>\n      </Space>\n      <Space className=\"boards-container\" wrap>\n        <SelectableObjectsGrid\n          items={items}\n          selectedObjects={selected}\n          selectObject={updateSelected}\n          user={user}\n        />\n        <HumanSignBoard signs={signs} />\n      </Space>\n    </Space>\n  );\n}\n","import { ReactNode } from 'react';\n\ntype ContainerProps = {\n  user: GamePlayer;\n  children: ReactNode;\n};\n\n/**\n * Conditionally render content if user is an alien\n * @param param0\n */\nexport function AlienContent({ user, children }: ContainerProps) {\n  const isAlien = user.role === 'alien';\n\n  if (isAlien) {\n    return <>{children}</>;\n  }\n\n  return <></>;\n}\n\n/**\n * Conditionally render content if user is a human\n * @param param0\n */\nexport function HumanContent({ user, children }: ContainerProps) {\n  const isHuman = user.role === 'human';\n\n  if (isHuman) {\n    return <>{children}</>;\n  }\n\n  return <></>;\n}\n","export const ALIEN_CANVAS = {\n  WIDTH: 500,\n  HEIGHT: 120,\n};\n\nexport const ITEM_TYPES = {\n  ITEM: 'ITEM',\n  CURSE: 'CURSE',\n  BLANK: 'BLANK',\n};\n","import clsx from 'clsx';\n// Utils\nimport { ALIEN_CANVAS } from '../utils/constants';\n// Components\nimport { CanvasSVG } from 'components/canvas';\nimport { SignCard } from 'components/cards/SignCard';\n\ntype AlienViewBoardProps = {\n  request: string | string[];\n  isAlienBot?: boolean;\n  size?: 'normal' | 'small';\n};\n\nexport function AlienViewBoard({ request, isAlienBot, size }: AlienViewBoardProps) {\n  const width = size === 'small' ? ALIEN_CANVAS.WIDTH / 2 : ALIEN_CANVAS.WIDTH;\n  const height = size === 'small' ? ALIEN_CANVAS.HEIGHT / 2 : ALIEN_CANVAS.HEIGHT;\n\n  if (isAlienBot) {\n    if (typeof request === 'string') {\n      return (\n        <div\n          className=\"alien-canvas alien-canvas--small alien-canvas--bot\"\n          style={{ width: `${width}px`, height: `${height}px` }}\n        >\n          <SignCard id={`${request}`} width={75} className=\"transparent\" />\n        </div>\n      );\n    }\n\n    return (\n      <div\n        className=\"alien-canvas alien-canvas--small alien-canvas--bot\"\n        style={{ width: `${width}px`, height: `${height}px` }}\n      >\n        {request.map((entry) => {\n          const isNegative = entry.startsWith('!');\n          const id = entry.substring(isNegative ? 1 : 0);\n\n          return (\n            <SignCard\n              key={`request-${id}`}\n              id={id}\n              width={75}\n              className={clsx('bot-sign', isNegative && 'bot-sign--negative')}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  return (\n    <CanvasSVG\n      drawing={request as string}\n      width={width}\n      height={height}\n      viewBox={`0 0 ${ALIEN_CANVAS.WIDTH} ${ALIEN_CANVAS.HEIGHT}`}\n      strokeWidth=\"large\"\n      className=\"alien-canvas alien-canvas--small\"\n    />\n  );\n}\n","// Ant Design Resources\nimport { Space, Table } from 'antd';\nimport type { ColumnsType } from 'antd/es/table';\n// Components\nimport { AvatarName } from 'components/avatars';\nimport { DualTranslate, Translate } from 'components/language';\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { AlienViewBoard } from './AlienViewBoard';\n\ntype InquiryHistoryProps = {\n  inquiryHistory: InquiryHistoryEntry[];\n  players: GamePlayers;\n  isAlienBot?: boolean;\n  signs: Sign[];\n  showIntention?: boolean;\n};\n\nexport function InquiryHistory({\n  inquiryHistory,\n  players,\n  isAlienBot,\n  signs,\n  showIntention,\n}: InquiryHistoryProps) {\n  if (inquiryHistory.length < 1) return <></>;\n\n  const columns: ColumnsType<InquiryHistoryEntry> = [\n    {\n      key: 'player',\n      title: <Translate pt=\"Jogador\" en=\"Player\" />,\n      dataIndex: 'playerId',\n      render: (playerId) => <AvatarName size=\"small\" player={players[playerId]} />,\n    },\n    {\n      key: 'items',\n      title: <Translate pt=\"Objetos\" en=\"Objects\" />,\n      dataIndex: 'objectIds',\n      render: (objectIds) => <Objects objectIds={objectIds} />,\n    },\n    {\n      key: 'answer',\n      title: <Translate pt=\"Resposta\" en=\"Answer\" />,\n      dataIndex: 'answer',\n      render: (answer) => <AlienViewBoard request={answer} isAlienBot={isAlienBot} size=\"small\" />,\n    },\n  ];\n\n  if (showIntention) {\n    columns.push({\n      key: 'intention',\n      title: <Translate pt=\"Intenção\" en=\"Intention\" />,\n      dataIndex: 'intention',\n      render: (intention) => <Intention signs={signs} intention={intention} />,\n    });\n  }\n\n  return (\n    <Space direction=\"vertical\">\n      <Table columns={columns} bordered dataSource={inquiryHistory} />\n    </Space>\n  );\n}\n\nfunction Objects({ objectIds }: Pick<InquiryHistoryEntry, 'objectIds'>) {\n  return (\n    <Space>\n      {objectIds.map((objectId) => (\n        <ItemCard\n          key={`${objectIds.join('-')}-${objectId}`}\n          id={`${objectId}`}\n          className={'objects-grid__item-offered'}\n          width={50}\n        />\n      ))}\n    </Space>\n  );\n}\n\ntype IntentionProps = {\n  signs: Sign[];\n  intention: Pick<InquiryHistoryEntry, 'intention'>;\n};\nfunction Intention({ signs, intention }: IntentionProps) {\n  const attribute = signs.find((sign) => sign.key === intention);\n\n  return (\n    <Space>\n      {Boolean(attribute) ? (\n        <DualTranslate>{attribute!.attribute}</DualTranslate>\n      ) : (\n        <Translate pt=\"Desconhecido\" en=\"Unknown\" />\n      )}\n    </Space>\n  );\n}\n","// Utils\nimport { ITEM_TYPES } from '../utils/constants';\n// Icons\nimport { BoxOneIcon } from 'icons/BoxOneIcon';\nimport { BoxXIcon } from 'icons/BoxXIcon';\nimport { BoxCheckMarkIcon } from 'icons/BoxCheckMarkIcon';\n// Components\nimport { Translate } from 'components/language';\nimport { IconAvatar } from 'components/avatars/IconAvatar';\n\ntype ItemResolutionProps = {\n  itemId: CardId;\n  items: Item[];\n};\n\nexport function ItemResolution({ itemId, items }: ItemResolutionProps) {\n  const item = items.find((i) => i.id === itemId);\n\n  if (item?.type === ITEM_TYPES.CURSE) {\n    return (\n      <div>\n        <IconAvatar icon={<BoxXIcon />} size=\"small\" /> <Translate pt=\"Amaldiçoado\" en=\"Cursed\" />\n      </div>\n    );\n  }\n\n  if (item?.type === ITEM_TYPES.ITEM) {\n    return (\n      <div>\n        <IconAvatar icon={<BoxCheckMarkIcon />} size=\"small\" /> <Translate pt=\"Correto\" en=\"Correct\" />\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <IconAvatar icon={<BoxOneIcon />} size=\"small\" /> <Translate pt=\"Irrelevante\" en=\"Irrelevant\" />\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Space, Table } from 'antd';\nimport type { ColumnsType } from 'antd/es/table';\n// Components\nimport { AvatarName } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { ItemResolution } from './ItemResolution';\nimport { AlienViewBoard } from './AlienViewBoard';\n\ntype RequestHistoryProps = {\n  requestHistory: RequestHistoryEntry[];\n  players: GamePlayers;\n  items: Item[];\n  isAlienBot: boolean;\n  showIntention?: boolean;\n};\n\nexport function RequestHistory({\n  requestHistory,\n  players,\n  items,\n  isAlienBot,\n  showIntention,\n}: RequestHistoryProps) {\n  if (requestHistory.length < 1) return <></>;\n\n  const columns: ColumnsType<RequestHistoryEntry> = [\n    {\n      key: 'request',\n      title: <Translate pt=\"Pedido\" en=\"Request\" />,\n      dataIndex: 'request',\n      render: (answer) => <AlienViewBoard request={answer} isAlienBot={isAlienBot} size=\"small\" />,\n    },\n    {\n      key: 'offers',\n      title: <Translate pt=\"Oferendas\" en=\"Offerings\" />,\n      dataIndex: 'offers',\n      render: (offers) => <Offerings players={players} offers={offers} items={items} />,\n    },\n  ];\n\n  if (showIntention) {\n    columns.push({\n      key: 'intention',\n      title: <Translate pt=\"Intenção\" en=\"Intention\" />,\n      dataIndex: 'intention',\n      render: (intention) => (Boolean(intention) ? <ItemCard id={`${intention}`} width={50} /> : <></>),\n    });\n  }\n\n  return (\n    <Space direction=\"vertical\">\n      <Table columns={columns} bordered dataSource={requestHistory} />\n    </Space>\n  );\n}\n\ntype OfferingsProps = {\n  offers: Offer[];\n  players: GamePlayers;\n  items: Item[];\n};\nfunction Offerings({ offers, players, items }: OfferingsProps) {\n  return (\n    <Space>\n      {offers.map((offer) => (\n        <Space direction=\"vertical\" align=\"center\" key={`offer-${offer.objectId}-${offer.playerId}`}>\n          <ItemCard id={`${offer.objectId}`} className={'objects-grid__item-offered'} width={50} />\n          <AvatarName size=\"small\" player={players[offer.playerId]} />\n          <ItemResolution itemId={offer.objectId} items={items} />\n        </Space>\n      ))}\n    </Space>\n  );\n}\n","// Ant Design Resources\nimport { Collapse, CollapseProps } from 'antd';\n// Components\nimport { Translate } from 'components/language';\nimport { InquiryHistory } from './InquiryHistory';\nimport { RequestHistory } from './RequestHistory';\n\ntype HistoryProps = {\n  inquiryHistory: InquiryHistoryEntry[];\n  requestHistory: RequestHistoryEntry[];\n  players: GamePlayers;\n  items: Item[];\n  isAlienBot: boolean;\n  showIntention?: boolean;\n  signs: Sign[];\n};\n\nexport function History({\n  inquiryHistory,\n  requestHistory,\n  players,\n  items,\n  isAlienBot,\n  showIntention = false,\n  signs,\n}: HistoryProps) {\n  const panels: CollapseProps['items'] = [\n    {\n      key: '1',\n      label: <Translate pt=\"Histórico de Perguntas dos Humanos\" en=\"Human Inquiry History\" />,\n      children: (\n        <>\n          <InquiryHistory\n            inquiryHistory={inquiryHistory}\n            players={players}\n            isAlienBot={isAlienBot}\n            signs={signs}\n            showIntention={showIntention}\n          />\n          {inquiryHistory.length === 0 && <Translate pt=\"Nenhuma pergunta ainda.\" en=\"No questions yet.\" />}\n        </>\n      ),\n    },\n    {\n      key: '2',\n      label: <Translate pt=\"Histórico de Pedidos dos Alienígenas\" en=\"Alien Request History\" />,\n      children: (\n        <>\n          <RequestHistory\n            requestHistory={requestHistory}\n            players={players}\n            items={items}\n            isAlienBot={isAlienBot}\n            showIntention={showIntention}\n          />\n          {requestHistory.length === 0 && <Translate pt=\"Nenhum pedido ainda.\" en=\"No requests yet.\" />}\n        </>\n      ),\n    },\n  ];\n\n  return <Collapse items={panels} />;\n}\n","// Ant Design Resources\nimport { Badge } from 'antd';\n// Icons\nimport { BoxQuestionMarkIcon } from 'icons/BoxQuestionMarkIcon';\n// Components\nimport { Translate } from 'components/language';\nimport { MetricHighlight } from 'components/metrics/MetricHighlight';\nimport { TimeHighlight } from 'components/metrics/TimeHighlight';\nimport { Instruction } from 'components/text';\nimport { CurseItemHighlight, ItemsHighlight } from './Highlights';\n\ntype StatusProps = {\n  status: OfferingsStatus;\n};\nexport function Status({ status }: StatusProps) {\n  return (\n    <Instruction>\n      <ul>\n        <li>\n          <Translate pt=\"Objetos entregues/queridos\" en=\"Delivered/Needed objects\" />:{' '}\n          <ItemsHighlight>\n            {status.found}/{status.needed}\n          </ItemsHighlight>\n        </li>\n        <li>\n          <Translate pt=\"Tempo Sobrando\" en=\"Remaining Time\" />:{' '}\n          <TimeHighlight>{status.timeLeft}</TimeHighlight>\n        </li>\n        <li>\n          <Translate pt=\"Objetos disponíveis\" en=\"Remaining Objects\" />:{' '}\n          <MetricHighlight icon={<BoxQuestionMarkIcon />}>{status.total}</MetricHighlight>\n        </li>\n        <li>\n          <Translate pt=\"Objetos amaldiçoados\" en=\"Cursed Objects\" />:{' '}\n          <CurseItemHighlight>{status.totalCurses}</CurseItemHighlight>\n        </li>\n      </ul>\n      <p>\n        <Badge size=\"small\" count={2} color=\"orange\"></Badge> -{' '}\n        <Translate\n          en=\"The little orange numbers on the items board indicate the number of times the object was asked about.\"\n          pt=\"Os números nos círculos laranjas na grade de itens indicam quantas vezes o objeto foi usado em uma pergunta.\"\n        />\n      </p>\n    </Instruction>\n  );\n}\n","// Ant Design Resources\nimport { RobotOutlined } from '@ant-design/icons';\n// Components\nimport { FixedMenuButton } from 'components/buttons';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n\nexport function BotsRules() {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Entenda como o alienígena pensa:\n            <ul>\n              <li>\n                Ele vai sempre tentar de falar um símbolo que você não sabe, então, se você perguntar algo\n                similar a algo perguntando anteriormente, ele não repete e sim te dá o mais próximo\n              </li>\n              <li>Nos pedidos, os símbolos são ordenados do mais a ver para o menos a ver</li>\n              <li>Defesa: proteção</li>\n              <li>Bonito: colorido, festivo</li>\n              <li>Sólido: duro, contrário de frágil ou macio</li>\n              <li>Força: energia, poder</li>\n              <li>Longo: comprido, alto</li>\n              <li>Brilho: claro, luz</li>\n              <li>Conhecimento: sabedoria, inteligência, tecnologia, ideologia, ideia</li>\n              <li>Metal: se a ilustração tiver coisas metálicas, pode ser metal</li>\n              <li>Máquina: tem engrenagens, energia, \"funciona\"</li>\n            </ul>\n          </>\n        }\n        en={\n          <>\n            Learn how the alien thinks:\n            <ul>\n              <li>\n                They will always give you a symbol you don't know yet, so if you ask for something similar to\n                a previous ask, they will give you the second best symbol.\n              </li>\n              <li>During requests, the symbols are order from more to less matching</li>\n              <li>Defense: protection</li>\n              <li>Beautiful: colorful, festive</li>\n              <li>Solid: hard, very hard</li>\n              <li>Power: force, energy</li>\n              <li>Long: tall, lengthy</li>\n              <li>Bright: light, shiny, (not smart)</li>\n              <li>Knowledge: wisdom, smarts, technology, idea</li>\n              <li>Metal: if the illustrator has anything metal, it may be metal</li>\n              <li>Machine: it has gears, uses powers, \"works\"</li>\n            </ul>\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function BotPopupRule() {\n  return (\n    <FixedMenuButton\n      type=\"popover\"\n      position={1}\n      icon={<RobotOutlined />}\n      content={<BotsRules />}\n      label={<Translate pt=\" Bots\" en=\" Bots\" />}\n    />\n  );\n}\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\n// Components\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { AvatarName } from 'components/avatars';\nimport { ObjectsGrid } from './components/ObjectsGrid';\nimport { SignsKeyCard } from './components/SignsKeyCard';\nimport { HumanSignBoard } from './components/HumanSignBoard';\nimport { ViewIf } from 'components/views';\nimport { HumanInquiry } from './components/HumanInquiry';\nimport { AlienContent, HumanContent } from './components/Content';\nimport { History } from './components/History';\nimport { PopoverRule } from 'components/rules';\nimport { Status } from './components/Status';\nimport { BotPopupRule } from './components/BotPopupRules';\nimport { ItemsHighlight } from './components/Highlights';\nimport { DebugOnly } from 'components/debug';\n\ntype StepHumanAsksProps = {\n  players: GamePlayers;\n  onSubmitHumanInquiry: GenericFunction;\n  user: GamePlayer;\n  alien: GamePlayer;\n  isUserAlien: boolean;\n  currentHuman: GamePlayer;\n  isUserTheCurrentHuman: boolean;\n  items: Item[];\n  signs: Sign[];\n  status: OfferingsStatus;\n  requestHistory: RequestHistoryEntry[];\n  inquiryHistory: InquiryHistoryEntry[];\n  isAlienBot: boolean;\n} & AnnouncementProps;\n\nexport function StepHumanAsks({\n  user,\n  announcement,\n  players,\n  onSubmitHumanInquiry,\n  items,\n  signs,\n  alien,\n  isUserAlien,\n  currentHuman,\n  isUserTheCurrentHuman,\n  requestHistory,\n  inquiryHistory,\n  status,\n  isAlienBot,\n}: StepHumanAsksProps) {\n  const [isDebugEnabled] = useGlobalState('isDebugEnabled');\n  return (\n    <Step fullWidth announcement={isUserTheCurrentHuman ? announcement : undefined}>\n      <Title>\n        {isUserTheCurrentHuman ? (\n          <Translate pt={<>Pergunte ao Alienígena!</>} en={<>Ask the Alien!</>} />\n        ) : (\n          <Translate pt={<>Perguntas ao Alienígena</>} en={<>Asking the Alien</>} />\n        )}\n      </Title>\n\n      {isAlienBot && <BotPopupRule />}\n\n      <PopoverRule content={<Status status={status} />} />\n\n      <Instruction contained>\n        {isUserTheCurrentHuman ? (\n          <>\n            <Translate\n              pt={\n                <>\n                  Escolha um dos atributos que você deseja desvendar, então, selecione{' '}\n                  <ItemsHighlight>1-5 itens</ItemsHighlight>\n                  relacionados a esse atributo para perguntar o alienígena qual é o símbolo dele.\n                </>\n              }\n              en={\n                <>\n                  Choose one of the atributes you want to unveil, then select{' '}\n                  <ItemsHighlight>1-5 items</ItemsHighlight> below to ask the alien what its symbol.\n                </>\n              }\n            />\n          </>\n        ) : (\n          <>\n            <Translate\n              pt={\n                <>\n                  Aguarde enquanto <AvatarName player={currentHuman} /> seleciona{' '}\n                  <ItemsHighlight>1-5 itens</ItemsHighlight> para perguntar ao alienígena{' '}\n                  <AvatarName player={alien} /> qual o símbolo relacionado a eles.\n                </>\n              }\n              en={\n                <>\n                  Please wait wile <AvatarName player={currentHuman} /> selects{' '}\n                  <ItemsHighlight>1-5 items</ItemsHighlight> to ask the alien <AvatarName player={alien} />{' '}\n                  what symbol is related to them.\n                </>\n              }\n            />\n          </>\n        )}\n      </Instruction>\n\n      <AlienContent user={user}>\n        <Space className=\"boards-container\" wrap>\n          <ObjectsGrid items={items} showTypes={isUserAlien} />\n          <SignsKeyCard signs={signs} />\n        </Space>\n      </AlienContent>\n\n      <HumanContent user={user}>\n        <ViewIf condition={isUserTheCurrentHuman}>\n          <HumanInquiry items={items} signs={signs} submitInquiry={onSubmitHumanInquiry} user={user} />\n        </ViewIf>\n\n        <ViewIf condition={!isUserTheCurrentHuman}>\n          <Space className=\"boards-container\" wrap>\n            <ObjectsGrid items={items} showTypes={false} />\n            <HumanSignBoard signs={signs} />\n          </Space>\n        </ViewIf>\n      </HumanContent>\n\n      <History\n        inquiryHistory={inquiryHistory}\n        requestHistory={requestHistory}\n        players={players}\n        items={items}\n        isAlienBot={isAlienBot}\n        signs={signs}\n        showIntention={isDebugEnabled}\n      />\n\n      <DebugOnly>\n        <SignsKeyCard signs={signs} />\n      </DebugOnly>\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitHumanInquiryAPIRequest } from './utils/api-requests';\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { QuestionIcon } from 'icons/QuestionIcon';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\nimport { RoundAnnouncement } from 'components/round';\nimport { StepHumanAsks } from './StepHumanAsks';\nimport { StepSwitcher } from 'components/steps';\n\nexport function PhaseHumanAsk({ players, state, info }: PhaseProps) {\n  const user = useUser(players, state);\n  const [alien, isUserAlien] = useWhichPlayerIsThe('alienId', state, players);\n  const [currentHuman, isUserTheCurrentHuman] = useWhichPlayerIsThe('humanId', state, players);\n\n  const isFirstHuman = state.turnOrder[0] === state.humanId;\n  const { step, setStep, goToNextStep } = useStep(isFirstHuman ? 0 : 1);\n\n  const onSubmitHumanInquiry = useOnSubmitHumanInquiryAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<QuestionIcon />}\n      title={<Translate pt=\"Pergunte ao alienígena\" en=\"Ask the Alien\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n      duration={3}\n    ></PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.COMUNICACAO_ALIENIGENA.HUMAN_ASK}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state.round}\n          onPressButton={goToNextStep}\n          time={5}\n          circleColor={info?.appearance?.color}\n        />\n\n        {/* Step 1 */}\n        <StepHumanAsks\n          players={players}\n          onSubmitHumanInquiry={onSubmitHumanInquiry}\n          user={user}\n          alien={alien}\n          isUserAlien={isUserAlien}\n          currentHuman={currentHuman}\n          isUserTheCurrentHuman={isUserTheCurrentHuman}\n          items={state.items}\n          signs={state.signs}\n          announcement={announcement}\n          status={state.status}\n          requestHistory={state.requestHistory}\n          inquiryHistory={state.inquiryHistory}\n          isAlienBot={Boolean(state.alienBot)}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Utils\nimport { ALIEN_CANVAS } from '../utils/constants';\n// Components\nimport { DrawingCanvas } from 'components/canvas';\nimport { Translate } from 'components/language';\n\ntype HumanSignBoardProps = {\n  onSubmit: GenericFunction;\n  disabled?: boolean;\n};\n\nexport function AlienWritingBoard({ onSubmit, disabled }: HumanSignBoardProps) {\n  const [lines, setLines] = useState<CanvasLine[]>([]);\n\n  return (\n    <Space className=\"space-container\" direction=\"vertical\">\n      <DrawingCanvas\n        lines={lines}\n        setLines={setLines}\n        width={ALIEN_CANVAS.WIDTH}\n        height={ALIEN_CANVAS.HEIGHT}\n        showControls\n        strokeWidth=\"large\"\n        className=\"alien-canvas\"\n      />\n      <Button\n        type=\"primary\"\n        size=\"large\"\n        disabled={disabled || lines.length < 1}\n        onClick={() => onSubmit(JSON.stringify(lines))}\n      >\n        <Translate pt=\"Enviar\" en=\"Submit\" />\n      </Button>\n    </Space>\n  );\n}\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useGlobalState } from 'hooks/useGlobalState';\n// Utils\nimport { pluralize } from 'utils/helpers';\n// Components\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { AvatarName } from 'components/avatars';\nimport { ObjectsGrid } from './components/ObjectsGrid';\nimport { SignsKeyCard } from './components/SignsKeyCard';\nimport { HumanSignBoard } from './components/HumanSignBoard';\nimport { ViewIf } from 'components/views';\nimport { AlienWritingBoard } from './components/AlienWritingBoard';\nimport { AlienContent, HumanContent } from './components/Content';\nimport { History } from './components/History';\nimport { PopoverRule } from 'components/rules';\nimport { Status } from './components/Status';\nimport { AlienViewBoard } from './components/AlienViewBoard';\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { BotPopupRule } from './components/BotPopupRules';\nimport { DebugOnly } from 'components/debug';\n\ntype StepAlienAnswersProps = {\n  players: GamePlayers;\n  onSubmitAlienResponse: GenericFunction;\n  onConfirmNote: GenericFunction;\n  user: GamePlayer;\n  alien: GamePlayer;\n  isUserAlien: boolean;\n  currentHuman: GamePlayer;\n  items: Item[];\n  signs: Sign[];\n  status: OfferingsStatus;\n  currentInquiry: CardId[];\n  alienResponse?: string;\n  requestHistory: RequestHistoryEntry[];\n  inquiryHistory: InquiryHistoryEntry[];\n  isAlienBot: boolean;\n} & AnnouncementProps;\n\nexport function StepAlienAnswers({\n  players,\n  announcement,\n  user,\n  onSubmitAlienResponse,\n  onConfirmNote,\n  items,\n  signs,\n  alien,\n  isUserAlien,\n  currentHuman,\n  currentInquiry,\n  alienResponse,\n  requestHistory,\n  inquiryHistory,\n  status,\n  isAlienBot,\n}: StepAlienAnswersProps) {\n  const { isLoading } = useLoading();\n  const [isDebugEnabled] = useGlobalState('isDebugEnabled');\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title>\n        <Translate\n          pt={\n            <>\n              Alienígena <AvatarName player={alien} /> responde\n            </>\n          }\n          en={\n            <>\n              Alien <AvatarName player={alien} /> answers\n            </>\n          }\n        />\n      </Title>\n\n      <PopoverRule content={<Status status={status} />} />\n\n      {isAlienBot && <BotPopupRule />}\n\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              <AvatarName player={currentHuman} /> quer saber qual símbolo representa{' '}\n              {pluralize(currentInquiry.length, 'o objeto', 'os objetos')} abaixo:\n            </>\n          }\n          en={\n            <>\n              <AvatarName player={currentHuman} /> wants to know what symbol best represents the{' '}\n              {pluralize(currentInquiry.length, 'object')} below:\n            </>\n          }\n        />\n      </Instruction>\n\n      <Space className=\"space-container\" wrap>\n        {currentInquiry.map((itemId) => (\n          <ItemCard key={`inquiry-${itemId}`} id={itemId} />\n        ))}\n      </Space>\n\n      <ViewIf condition={!Boolean(alienResponse)}>\n        <AlienContent user={user}>\n          <Instruction contained>\n            <Translate\n              pt={\n                <>\n                  Escreva um único símbolo que você acha que representa{' '}\n                  {pluralize(currentInquiry.length, 'o objeto', 'os objetos')} melhor.\n                </>\n              }\n              en={\n                <>\n                  Write a single symbol that you think represents the{' '}\n                  {pluralize(currentInquiry.length, 'object')} the best\n                </>\n              }\n            />\n          </Instruction>\n          <AlienWritingBoard\n            onSubmit={(alienResponse) => onSubmitAlienResponse({ alienResponse })}\n            disabled={isLoading}\n          />\n        </AlienContent>\n      </ViewIf>\n\n      <ViewIf condition={Boolean(alienResponse)}>\n        <Instruction contained>\n          <Translate pt={<>O Alienígena respondeu:</>} en={<>The Alien answered:</>} />\n        </Instruction>\n\n        <AlienViewBoard request={alienResponse!} isAlienBot={isAlienBot} />\n\n        <HumanContent user={user}>\n          <Space className=\"space-container\">\n            <Button\n              type=\"primary\"\n              size=\"large\"\n              onClick={() => onConfirmNote()}\n              disabled={isLoading || user.ready}\n            >\n              <Translate pt=\"Anotei o símbolo e estou pronto\" en=\"I have noted the symbol and I'm ready\" />\n            </Button>\n          </Space>\n        </HumanContent>\n      </ViewIf>\n\n      <AlienContent user={user}>\n        <Space className=\"boards-container\" wrap>\n          <ObjectsGrid items={items} showTypes={isUserAlien} activeObjects={currentInquiry} />\n          <SignsKeyCard signs={signs} />\n        </Space>\n      </AlienContent>\n\n      <HumanContent user={user}>\n        <Space className=\"boards-container\" wrap>\n          <ObjectsGrid items={items} showTypes={isUserAlien} activeObjects={currentInquiry} />\n          <HumanSignBoard signs={signs} />\n        </Space>\n      </HumanContent>\n\n      <History\n        inquiryHistory={inquiryHistory}\n        requestHistory={requestHistory}\n        players={players}\n        items={items}\n        isAlienBot={isAlienBot}\n        signs={signs}\n        showIntention={isDebugEnabled}\n      />\n\n      <DebugOnly>\n        <SignsKeyCard signs={signs} />\n      </DebugOnly>\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnMakeReady, useOnSubmitAlienResponseAPIRequest } from './utils/api-requests';\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { HieroglyphIcon } from 'icons/HieroglyphIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\nimport { StepAlienAnswers } from './StepAlienAnswers';\n\nexport function PhaseAlienAnswer({ players, state, info }: PhaseProps) {\n  const user = useUser(players, state);\n  const [alien, isUserAlien] = useWhichPlayerIsThe('alienId', state, players);\n  const [currentHuman] = useWhichPlayerIsThe('humanId', state, players);\n\n  const { step } = useStep();\n\n  const onSubmitAlienResponse = useOnSubmitAlienResponseAPIRequest();\n  const onConfirmNote = useOnMakeReady();\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<HieroglyphIcon />}\n      title={<Translate pt=\"Resposta do Alienígena\" en=\"Alien Answer\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n      duration={3}\n    ></PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.COMUNICACAO_ALIENIGENA.ALIEN_ANSWER}\n    >\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepAlienAnswers\n          players={players}\n          onSubmitAlienResponse={onSubmitAlienResponse}\n          onConfirmNote={onConfirmNote}\n          user={user}\n          alien={alien}\n          isUserAlien={isUserAlien}\n          currentHuman={currentHuman}\n          items={state.items}\n          signs={state.signs}\n          announcement={announcement}\n          status={state.status}\n          currentInquiry={state.currentInquiry}\n          alienResponse={state.alienResponse}\n          requestHistory={state.requestHistory}\n          inquiryHistory={state.inquiryHistory}\n          isAlienBot={Boolean(state.alienBot)}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\n// Components\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { AvatarName } from 'components/avatars';\nimport { ObjectsGrid } from './components/ObjectsGrid';\nimport { SignsKeyCard } from './components/SignsKeyCard';\nimport { HumanSignBoard } from './components/HumanSignBoard';\nimport { AlienWritingBoard } from './components/AlienWritingBoard';\nimport { AlienContent, HumanContent } from './components/Content';\nimport { History } from './components/History';\nimport { PopoverRule } from 'components/rules';\nimport { Status } from './components/Status';\nimport { SelectableObjectsGrid } from './components/SelectableObjectsGrid';\nimport { DebugOnly } from 'components/debug';\nimport { useGlobalState } from 'hooks/useGlobalState';\n\ntype StepAlienRequestsProps = {\n  players: GamePlayers;\n  onSubmitAlienRequest: GenericFunction;\n  user: GamePlayer;\n  alien: GamePlayer;\n  isUserAlien: boolean;\n  items: Item[];\n  signs: Sign[];\n  status: OfferingsStatus;\n  requestHistory: RequestHistoryEntry[];\n  inquiryHistory: InquiryHistoryEntry[];\n} & AnnouncementProps;\n\nexport function StepAlienRequests({\n  players,\n  announcement,\n  user,\n  onSubmitAlienRequest,\n  items,\n  signs,\n  alien,\n  isUserAlien,\n  requestHistory,\n  inquiryHistory,\n  status,\n}: StepAlienRequestsProps) {\n  const { isLoading } = useLoading();\n  const [intention, setIntention] = useState<string>('');\n  const [isDebugEnabled] = useGlobalState('isDebugEnabled');\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title>\n        <Translate\n          pt={\n            <>\n              Alienígena <AvatarName player={alien} /> pede um item\n            </>\n          }\n          en={\n            <>\n              Alien <AvatarName player={alien} /> requests an item\n            </>\n          }\n        />\n      </Title>\n\n      <PopoverRule content={<Status status={status} />} />\n\n      <HumanContent user={user}>\n        <Instruction contained>\n          <Translate\n            pt={\n              <>\n                Aguarde enquanto <AvatarName player={alien} /> escreve o objeto que ele(a) quer.\n              </>\n            }\n            en={\n              <>\n                Wait while <AvatarName player={alien} /> describes a desired object.\n              </>\n            }\n          />\n        </Instruction>\n      </HumanContent>\n\n      <AlienContent user={user}>\n        <Instruction contained>\n          <Translate\n            pt={\n              <>\n                <strong>Selecione</strong> um dos objetos desejados (verde).\n                <br />\n                Então, descreva o objeto usando quantos símbolos você quiser.\n                <br />\n                Se você precisar inferir negação, coloque um traço horizontal em cima do símbolo.\n                <br />\n                Se você precisa inferir ênfase, coloque um traço horizontal embaixo do símbolo.\n              </>\n            }\n            en={\n              <>\n                <strong>Select</strong> one of the desired objects (green).\n                <br />\n                Then, describe the object using as many symbols you wish.\n                <br />\n                If you need to infer negation or the contrary, draw an horizontal line on top of the symbol.\n                <br />\n                If you need to infer emphasis, draw an horizontal line below the symbol.\n              </>\n            }\n          />\n        </Instruction>\n\n        <AlienWritingBoard\n          onSubmit={(alienRequest) => onSubmitAlienRequest({ alienRequest, intention })}\n          disabled={user.ready || isLoading || !intention}\n        />\n      </AlienContent>\n\n      <AlienContent user={user}>\n        <Space className=\"boards-container\" wrap>\n          <SelectableObjectsGrid\n            items={items}\n            showTypes={isUserAlien}\n            user={user}\n            selectedObjects={{ [intention]: true }}\n            selectObject={(itemId) => setIntention(itemId)}\n          />\n          <SignsKeyCard signs={signs} />\n        </Space>\n      </AlienContent>\n\n      <HumanContent user={user}>\n        <Space className=\"boards-container\" wrap>\n          <ObjectsGrid items={items} />\n          <HumanSignBoard signs={signs} />\n        </Space>\n      </HumanContent>\n\n      <History\n        inquiryHistory={inquiryHistory}\n        requestHistory={requestHistory}\n        players={players}\n        items={items}\n        isAlienBot={false}\n        signs={signs}\n        showIntention={isDebugEnabled}\n      />\n\n      <DebugOnly>\n        <SignsKeyCard signs={signs} />\n      </DebugOnly>\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitAlienRequestAPIRequest } from './utils/api-requests';\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { AlienCommunicationIcon } from 'icons/AlienCommunicationIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\nimport { StepAlienRequests } from './StepAlienRequests';\n\nexport function PhaseAlienRequest({ players, state, info }: PhaseProps) {\n  const user = useUser(players, state);\n  const [alien, isUserAlien] = useWhichPlayerIsThe('alienId', state, players);\n\n  const { step, setStep } = useStep();\n\n  const onSubmitAlienRequest = useOnSubmitAlienRequestAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<AlienCommunicationIcon />}\n      title={<Translate pt=\"O Alienígena faz um pedido\" en=\"The Alien makes a request\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n      duration={3}\n    ></PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.COMUNICACAO_ALIENIGENA.ALIEN_REQUEST}\n    >\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepAlienRequests\n          players={players}\n          onSubmitAlienRequest={onSubmitAlienRequest}\n          user={user}\n          alien={alien}\n          isUserAlien={isUserAlien}\n          items={state.items}\n          signs={state.signs}\n          announcement={announcement}\n          status={state.status}\n          requestHistory={state.requestHistory}\n          inquiryHistory={state.inquiryHistory}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Components\nimport { Translate } from 'components/language';\nimport { TimeHighlight } from 'components/metrics/TimeHighlight';\nimport { Instruction } from 'components/text';\nimport { CurseItemHighlight, ItemsHighlight } from './Highlights';\nimport { HumanSignBoard } from './HumanSignBoard';\nimport { SelectableObjectsGrid } from './SelectableObjectsGrid';\n\ntype HumanOfferingProps = {\n  signs: Sign[];\n  items: Item[];\n  submitOffer: GenericFunction;\n  user: GamePlayer;\n  status: OfferingsStatus;\n};\n\nexport function HumanOffering({ signs, items, submitOffer, user, status }: HumanOfferingProps) {\n  const [offeringId, setSelected] = useState('');\n\n  return (\n    <Space className=\"space-container\" direction=\"vertical\">\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Selecione um objeto e aperte enviar. Lembre-se que que você tem que entregar{' '}\n              <ItemsHighlight type=\"negative\">{status.needed}</ItemsHighlight>\n              objetos.\n              <br />\n              Você já entregou <ItemsHighlight type=\"positive\">{status.found}</ItemsHighlight> objetos e tem{' '}\n              <TimeHighlight>{status.timeLeft}</TimeHighlight> chances sobrando. Dentre os objetos há{' '}\n              <CurseItemHighlight>{status.totalCurses}</CurseItemHighlight> objetos amaldiçoados que causará\n              você perder uma chance adicional.\n            </>\n          }\n          en={\n            <>\n              Select an object then press Submit. Remember that you must deliver{' '}\n              <ItemsHighlight type=\"negative\">{status.needed}</ItemsHighlight> objects.\n              <br />\n              You already delivered <ItemsHighlight type=\"positive\">{status.found}</ItemsHighlight> objects\n              and have <TimeHighlight>{status.timeLeft}</TimeHighlight> chances left. Among the objects there\n              are <CurseItemHighlight>{status.totalCurses}</CurseItemHighlight> cursed objects that will cause\n              the lost of one additional chance.\n            </>\n          }\n        />\n      </Instruction>\n      <Button\n        size=\"large\"\n        type=\"primary\"\n        disabled={!Boolean(offeringId)}\n        onClick={() => submitOffer({ offeringId })}\n      >\n        <Translate pt=\"Enviar Objeto\" en=\"Submit Object\" />\n      </Button>\n      <Space className=\"space-container\" wrap>\n        <SelectableObjectsGrid\n          items={items}\n          selectedObjects={{ [offeringId]: true }}\n          selectObject={setSelected}\n          user={user}\n          maxObjects={2}\n        />\n        <HumanSignBoard signs={signs} />\n      </Space>\n    </Space>\n  );\n}\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\n// Components\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { AvatarName } from 'components/avatars';\nimport { ObjectsGrid } from './components/ObjectsGrid';\nimport { SignsKeyCard } from './components/SignsKeyCard';\nimport { AlienContent, HumanContent } from './components/Content';\nimport { HumanOffering } from './components/HumanOffering';\nimport { History } from './components/History';\nimport { PopoverRule } from 'components/rules';\nimport { Status } from './components/Status';\nimport { AlienViewBoard } from './components/AlienViewBoard';\nimport { BotPopupRule } from './components/BotPopupRules';\nimport { DebugOnly } from 'components/debug';\n\ntype StepHumansOfferProps = {\n  players: GamePlayers;\n  onSubmitOffering: GenericFunction;\n  user: GamePlayer;\n  alien: GamePlayer;\n  isUserAlien: boolean;\n  items: Item[];\n  signs: Sign[];\n  status: OfferingsStatus;\n  requestHistory: RequestHistoryEntry[];\n  inquiryHistory: InquiryHistoryEntry[];\n  isAlienBot: boolean;\n} & AnnouncementProps;\n\nexport function StepHumansOffer({\n  players,\n  announcement,\n  user,\n  onSubmitOffering,\n  status,\n  items,\n  signs,\n  alien,\n  isUserAlien,\n  requestHistory,\n  inquiryHistory,\n  isAlienBot,\n}: StepHumansOfferProps) {\n  const [isDebugEnabled] = useGlobalState('isDebugEnabled');\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title>\n        <Translate pt={<>Ofereça um objeto</>} en={<>Offer an object</>} />\n      </Title>\n\n      <PopoverRule content={<Status status={status} />} />\n\n      {isAlienBot && <BotPopupRule />}\n\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              O(A) alienígena <AvatarName player={alien} /> fez esse pedido. Você consegue decifrar qual\n              objeto ele(a) quer?\n            </>\n          }\n          en={\n            <>\n              The alien <AvatarName player={alien} /> made this request. Can you decipher what object they\n              want?\n            </>\n          }\n        />\n      </Instruction>\n\n      <AlienContent user={user}>\n        <Instruction contained>\n          <Translate\n            pt={<>Aguarde enquanto os humanos escolhem um objeto para te oferecer.</>}\n            en={<>Wait while the humans choose an object to offer.</>}\n          />\n        </Instruction>\n      </AlienContent>\n\n      <AlienViewBoard request={requestHistory[0].request} isAlienBot={isAlienBot} />\n\n      <AlienContent user={user}>\n        <Space className=\"space-container\" wrap>\n          <ObjectsGrid items={items} showTypes={isUserAlien} />\n          <SignsKeyCard signs={signs} />\n        </Space>\n      </AlienContent>\n\n      <HumanContent user={user}>\n        <Space className=\"space-container\" wrap>\n          <HumanOffering\n            signs={signs}\n            items={items}\n            submitOffer={onSubmitOffering}\n            user={user}\n            status={status}\n          />\n        </Space>\n      </HumanContent>\n\n      <History\n        inquiryHistory={inquiryHistory}\n        requestHistory={requestHistory}\n        players={players}\n        items={items}\n        isAlienBot={isAlienBot}\n        signs={signs}\n        showIntention={isDebugEnabled}\n      />\n\n      <DebugOnly>\n        <SignsKeyCard signs={signs} />\n      </DebugOnly>\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitOfferingAPIRequest } from './utils/api-requests';\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { OfferingIcon } from 'icons/OfferingIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\nimport { StepHumansOffer } from './StepHumansOffer';\n\nexport function PhaseOfferings({ players, state, info }: PhaseProps) {\n  const user = useUser(players, state);\n  const [alien, isUserAlien] = useWhichPlayerIsThe('alienId', state, players);\n\n  const { step, setStep } = useStep();\n\n  const onSubmitOffering = useOnSubmitOfferingAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<OfferingIcon />}\n      title={<Translate pt=\"Oferendas\" en=\"Offerings\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n      duration={3}\n    ></PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.COMUNICACAO_ALIENIGENA.OFFERINGS}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepHumansOffer\n          players={players}\n          user={user}\n          alien={alien}\n          isUserAlien={isUserAlien}\n          items={state.items}\n          signs={state.signs}\n          announcement={announcement}\n          status={state.status}\n          onSubmitOffering={onSubmitOffering}\n          requestHistory={state.requestHistory}\n          inquiryHistory={state.inquiryHistory}\n          isAlienBot={Boolean(state.alienBot)}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\n// Icons\nimport { PlayerIconsIcon } from 'icons/PlayerIconsIcon';\nimport { ClockIcon } from 'icons/ClockIcon';\n// Components\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { AvatarName } from 'components/avatars';\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { VIPNextPhaseButton } from 'components/vip';\nimport { MetricHighlight } from 'components/metrics/MetricHighlight';\nimport { ObjectsGrid } from './components/ObjectsGrid';\nimport { SignsKeyCard } from './components/SignsKeyCard';\nimport { HumanSignBoard } from './components/HumanSignBoard';\nimport { AlienContent, HumanContent } from './components/Content';\nimport { ItemResolution } from './components/ItemResolution';\nimport { History } from './components/History';\nimport { PopoverRule } from 'components/rules';\nimport { Status } from './components/Status';\nimport { AlienViewBoard } from './components/AlienViewBoard';\nimport { BotPopupRule } from './components/BotPopupRules';\nimport { ViewIf } from 'components/views';\nimport { DebugOnly } from 'components/debug';\n\ntype StepRevealProps = {\n  players: GamePlayers;\n  user: GamePlayer;\n  alien: GamePlayer;\n  isUserAlien: boolean;\n  items: Item[];\n  signs: Sign[];\n  status: OfferingsStatus;\n  requestHistory: RequestHistoryEntry[];\n  inquiryHistory: InquiryHistoryEntry[];\n  wasCurseSelected: boolean;\n  curses: Record<CardId, PlayerId[]>;\n  round: GameRound;\n  isAlienBot: boolean;\n} & AnnouncementProps;\n\nexport function StepReveal({\n  players,\n  announcement,\n  user,\n  status,\n  items,\n  signs,\n  isUserAlien,\n  round,\n  requestHistory,\n  inquiryHistory,\n  isAlienBot,\n}: StepRevealProps) {\n  const [isDebugEnabled] = useGlobalState('isDebugEnabled');\n  const latestRequest = requestHistory?.[0] ?? {};\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title>\n        <Translate pt={<>Resultado</>} en={<>Results</>} />\n      </Title>\n\n      <PopoverRule content={<Status status={status} />} />\n\n      {isAlienBot && <BotPopupRule />}\n\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Faltam{' '}\n              <MetricHighlight icon={<PlayerIconsIcon />}>{status.needed - status.found}</MetricHighlight>{' '}\n              objetos a serem oferecidos.\n              <br />\n              Temos <MetricHighlight icon={<ClockIcon />}>{status.timeLeft} </MetricHighlight> chances.\n            </>\n          }\n          en={\n            <>\n              <MetricHighlight icon={<PlayerIconsIcon />}>{status.needed - status.found}</MetricHighlight>{' '}\n              objects left to be offered.\n              <br />\n              We have <MetricHighlight icon={<ClockIcon />}>{status.timeLeft} </MetricHighlight> attempts\n              left.\n            </>\n          }\n        />\n      </Instruction>\n\n      <ViewIf condition={Boolean(latestRequest)}>\n        <AlienViewBoard request={latestRequest.request} isAlienBot={isAlienBot} />\n      </ViewIf>\n\n      <Instruction contained>\n        <Space className=\"space-container\" wrap>\n          {Boolean(latestRequest) &&\n            latestRequest.offers.map((entry, index) => {\n              return (\n                <Space key={`offer-${index}`} direction=\"vertical\" className=\"space-container\">\n                  <ItemCard id={`${entry.objectId}`} className={''} width={50} />\n                  <AvatarName player={players[entry.playerId]} />\n                  <ItemResolution itemId={entry.objectId} items={items} />\n                </Space>\n              );\n            })}\n        </Space>\n      </Instruction>\n\n      <AlienContent user={user}>\n        <Space className=\"space-container\" wrap>\n          <ObjectsGrid items={items} showTypes={isUserAlien} />\n          <SignsKeyCard signs={signs} />\n        </Space>\n      </AlienContent>\n\n      <HumanContent user={user}>\n        <Space className=\"space-container\" wrap>\n          <ObjectsGrid items={items} />\n          <HumanSignBoard signs={signs} />\n        </Space>\n      </HumanContent>\n\n      <History\n        inquiryHistory={inquiryHistory}\n        requestHistory={requestHistory}\n        players={players}\n        items={items}\n        isAlienBot={isAlienBot}\n        signs={signs}\n        showIntention={isDebugEnabled}\n      />\n\n      <DebugOnly>\n        <SignsKeyCard signs={signs} />\n      </DebugOnly>\n\n      <VIPNextPhaseButton round={round} />\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { MultitaskIcon } from 'icons/MultitaskIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\nimport { StepReveal } from './StepReveal';\n\nexport function PhaseReveal({ players, state, info }: PhaseProps) {\n  const user = useUser(players, state);\n  const [alien, isUserAlien] = useWhichPlayerIsThe('alienId', state, players);\n\n  const { step } = useStep();\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<MultitaskIcon />}\n      title={<Translate pt=\"E as oferendas foram...\" en=\"And the offerings were...\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n      duration={3}\n    ></PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.COMUNICACAO_ALIENIGENA.REVEAL}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepReveal\n          players={players}\n          user={user}\n          alien={alien}\n          isUserAlien={isUserAlien}\n          items={state.items}\n          signs={state.signs}\n          announcement={announcement}\n          status={state.status}\n          wasCurseSelected={state.wasCurseSelected}\n          curses={state.curses}\n          round={state.round}\n          requestHistory={state.requestHistory}\n          inquiryHistory={state.inquiryHistory}\n          isAlienBot={Boolean(state.alienBot)}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Hooks\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\n// Icons\nimport { TrophyIcon } from 'icons/TrophyIcon';\n// Components\nimport { GameOverWrapper } from 'components/game-over';\nimport { ViewIf } from 'components/views';\nimport { History } from './components/History';\nimport { HumanSignBoard } from './components/HumanSignBoard';\nimport { ObjectsGrid } from './components/ObjectsGrid';\nimport { SignsKeyCard } from './components/SignsKeyCard';\nimport { Achievements } from 'components/general/Achievements';\nimport achievementsReference from './utils/achievements';\n\nexport function PhaseGameOver({ state, info, players }: PhaseProps) {\n  const [, isUserAlien] = useWhichPlayerIsThe('alienId', state, players);\n  return (\n    <GameOverWrapper info={info} state={state} players={players} announcementIcon={<TrophyIcon />}>\n      <Achievements players={players} achievements={state.achievements} reference={achievementsReference} />\n\n      <Space className=\"space-container\" wrap>\n        <ObjectsGrid items={state.items} showTypes showAll />\n        <Space className=\"space-container\" wrap direction=\"vertical\">\n          <SignsKeyCard signs={state.signs} />\n          <ViewIf condition={!isUserAlien}>\n            <HumanSignBoard signs={state.signs} />\n          </ViewIf>\n        </Space>\n      </Space>\n\n      <History\n        inquiryHistory={state.inquiryHistory}\n        requestHistory={state.requestHistory}\n        players={players}\n        items={state.items}\n        isAlienBot={state.isAlienBot}\n        showIntention\n        signs={state.signs}\n      />\n    </GameOverWrapper>\n  );\n}\n","import clsx from 'clsx';\nimport { useState } from 'react';\n// Ant Design Resources\nimport { Button, Space, Steps } from 'antd';\n// Hooks\nimport { useBooleanDictionary } from 'hooks/useBooleanDictionary';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { DualTranslate, Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\nimport { Card } from 'components/cards';\nimport { SelectableObjectsGrid } from './SelectableObjectsGrid';\n\ntype HumanSeedingStepsProps = {\n  user: GamePlayer;\n  items: Item[];\n  onSubmitSeeds: GenericFunction;\n};\n\nexport function HumanSeedingSteps({ user, items, onSubmitSeeds }: HumanSeedingStepsProps) {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n  const [seeds, setSeeds] = useState<Record<string, string[]>>({});\n  const [currentStep, setCurrentStep] = useState(0);\n  const {\n    dict: selected,\n    updateDict: updateSelected,\n    setDict,\n    reset,\n    keys: selectedObjectsIds,\n  } = useBooleanDictionary({});\n\n  const attributes = (user.seeds ?? []) as Sign[];\n  const steps = attributes.map((attribute) => ({\n    title: <DualTranslate>{attribute.attribute}</DualTranslate>,\n    description: seeds[attribute.key]?.length ?? 0,\n  }));\n\n  const onAddSeeds = () => {\n    setSeeds((previousSeeds) => ({\n      ...previousSeeds,\n      [attributes[currentStep].key]: selectedObjectsIds,\n    }));\n    reset();\n    setCurrentStep((previousStep) => previousStep + 1);\n  };\n\n  const previousAttribute = () => {\n    setCurrentStep((previousStep) => previousStep - 1);\n    const newCurrentDict = (seeds[attributes[currentStep - 1].key] ?? []).reduce(\n      (acc: BooleanDictionary, entry) => {\n        acc[entry] = true;\n        return acc;\n      },\n      {}\n    );\n    setDict(newCurrentDict);\n  };\n\n  const onDoneSeeding = () => {\n    setSeeds((previousSeeds) => ({\n      ...previousSeeds,\n      [attributes[currentStep].key]: selectedObjectsIds,\n    }));\n    onSubmitSeeds({ seeds });\n  };\n\n  return (\n    <Space className=\"space-container contained seeding-container\" direction=\"vertical\" wrap>\n      <div className=\"seeding-container__stepper\">\n        <Steps progressDot current={currentStep} items={steps} />\n      </div>\n\n      <Space className=\"boards-container\" wrap>\n        <SelectableObjectsGrid\n          items={items}\n          selectedObjects={selected}\n          selectObject={updateSelected}\n          user={user}\n          maxObjects={25}\n          hideKey\n        />\n        <Space direction=\"vertical\" key={currentStep} className=\"seeding-attribute-container\">\n          <Title level={3} size=\"xx-small\">\n            <Translate pt=\"Análise\" en=\"Analysis\" />\n          </Title>\n          {Boolean(attributes?.[currentStep]) && (\n            <div className=\"attribute-card-container\">\n              <Instruction>\n                <Translate\n                  pt=\"Selecione todos os itens que possuem a característica:\"\n                  en=\"Select all the items that have the attribute\"\n                />\n              </Instruction>\n              <Card\n                className={clsx('attribute-card', getAnimationClass('tada'))}\n                header={translate('Atributo', 'Attribute')}\n                randomColor\n                key={attributes[currentStep].key}\n              >\n                <DualTranslate>{attributes[currentStep].attribute}</DualTranslate>\n              </Card>\n\n              <Instruction>\n                <Translate\n                  pt=\"Se nenhum item combina com a característica, apenas vá para o próximo.\"\n                  en=\"If no item matches the attribute, just go to the next one.\"\n                />\n              </Instruction>\n\n              <Space className=\"seeds-button-container\">\n                {currentStep > 0 && (\n                  <Button size=\"large\" onClick={previousAttribute} disabled={isLoading}>\n                    <Translate pt=\"Atributo anterior\" en=\"Previous attribute\" />\n                  </Button>\n                )}\n                {currentStep < attributes.length - 1 ? (\n                  <Button size=\"large\" type=\"primary\" onClick={onAddSeeds} disabled={user.ready}>\n                    <Translate pt=\"Próximo atributo\" en=\"Next attribute\" />\n                  </Button>\n                ) : (\n                  <Button size=\"large\" type=\"primary\" onClick={onDoneSeeding} disabled={isLoading}>\n                    <Translate pt=\"Enviar análises\" en=\"Submit Analyses\" />\n                  </Button>\n                )}\n              </Space>\n            </div>\n          )}\n        </Space>\n      </Space>\n    </Space>\n  );\n}\n","// Ant Design Resources\n// Components\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { BotPopupRule } from './components/BotPopupRules';\nimport { HumanSeedingSteps } from './components/HumanSeedingSteps';\n\ntype StepSeedAlienProps = {\n  onSubmitSeeds: GenericFunction;\n  user: GamePlayer;\n  items: Item[];\n} & AnnouncementProps;\n\nexport function StepSeedAlien({ user, announcement, onSubmitSeeds, items }: StepSeedAlienProps) {\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title>\n        <Translate pt=\"Análise de Objetos\" en=\"Objects analyses\" />\n      </Title>\n\n      <BotPopupRule />\n\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Você passou sua vida analisando as propriedades de diversos objetos.\n              <br />\n              Agora, para cada uma dos atributos dados, escolha todos os objetos que você acha que combinam.\n            </>\n          }\n          en={\n            <>\n              You have spent your life analyzing the properties of various items.\n              <br />\n              Now, for each of the attributes given to you, choose all the objects that you think match.\n            </>\n          }\n        />\n      </Instruction>\n\n      <HumanSeedingSteps onSubmitSeeds={onSubmitSeeds} user={user} items={items} />\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\nimport { useOnSubmitSeedingAPIRequest } from './utils/api-requests';\n// Icons\nimport { BooksIcon } from 'icons/BooksIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\nimport { StepSeedAlien } from './StepSeedAlien';\n\nexport function PhaseAlienSeeding({ players, state, info }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, setStep } = useStep();\n\n  const onSubmitSeeds = useOnSubmitSeedingAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<BooksIcon />}\n      title={<Translate pt=\"Análise de Objetos\" en=\"Objects analyses\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    ></PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.COMUNICACAO_ALIENIGENA.ALIEN_SEEDING}\n    >\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepSeedAlien\n          onSubmitSeeds={onSubmitSeeds}\n          announcement={announcement}\n          user={user}\n          items={state.items}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","// Ant Design Resources\nimport { ConfigProvider } from 'antd';\n// Constants\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Utils\nimport localStorage from 'services/localStorage';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport { LoadingPage } from 'components/loaders';\nimport { PhaseAlienSelection } from './PhaseAlienSelection';\nimport { PhaseHumanAsk } from './PhaseHumanAsk';\nimport { PhaseAlienAnswer } from './PhaseAlienAnswer';\nimport { PhaseAlienRequest } from './PhaseAlienRequest';\nimport { PhaseOfferings } from './PhaseOfferings';\nimport { PhaseReveal } from './PhaseReveal';\nimport { PhaseGameOver } from './PhaseGameOver';\n// Sass\nimport './comunicacao-alienigena.scss';\nimport { PhaseAlienSeeding } from './PhaseAlienSeeding';\n\nfunction getActiveComponent(state: GameState) {\n  // If phase is not defined, it is likely that the game is still loading\n  if (state && !state.phase) return LoadingPage;\n\n  switch (state.phase) {\n    case PHASES.DEFAULT.LOBBY:\n      return PhaseLobby;\n    case PHASES.DEFAULT.RULES:\n      return PhaseRules;\n    case PHASES.DEFAULT.SETUP:\n      // Clear cache\n      localStorage.set({ cache: '{}' });\n      return PhaseSetup;\n    case PHASES.COMUNICACAO_ALIENIGENA.ALIEN_SELECTION:\n      return PhaseAlienSelection;\n    case PHASES.COMUNICACAO_ALIENIGENA.ALIEN_SEEDING:\n      return PhaseAlienSeeding;\n    case PHASES.COMUNICACAO_ALIENIGENA.HUMAN_ASK:\n      return PhaseHumanAsk;\n    case PHASES.COMUNICACAO_ALIENIGENA.ALIEN_ANSWER:\n      return PhaseAlienAnswer;\n    case PHASES.COMUNICACAO_ALIENIGENA.ALIEN_REQUEST:\n      return PhaseAlienRequest;\n    case PHASES.COMUNICACAO_ALIENIGENA.OFFERINGS:\n      return PhaseOfferings;\n    case PHASES.COMUNICACAO_ALIENIGENA.REVEAL:\n      return PhaseReveal;\n    case PHASES.DEFAULT.GAME_OVER:\n      return PhaseGameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionComunicacaoAlienigena() {\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorPrimary: THEME_COLORS.MIDNIGHT,\n          colorLink: THEME_COLORS.MIDNIGHT,\n        },\n      }}\n    >\n      <Session\n        gameCollection={GAME_COLLECTION.COMUNICACAO_ALIENIGENA}\n        getActiveComponent={getActiveComponent}\n      />\n    </ConfigProvider>\n  );\n}\n\nexport default SessionComunicacaoAlienigena;\n","const ACHIEVEMENTS = {\n  MOST_QUESTIONED_OBJECTS: 'MOST_QUESTIONED_OBJECTS',\n  FEWEST_QUESTIONED_OBJECTS: 'FEWEST_QUESTIONED_OBJECTS',\n  SINGLE_OBJECT_INQUIRY: 'SINGLE_OBJECT_INQUIRY',\n  MOST_CORRECT_OBJECTS: 'MOST_CORRECT_OBJECTS',\n  MOST_BLANK_OBJECTS: 'MOST_BLANK_OBJECTS',\n  MOST_CURSED_OBJECTS: 'MOST_CURSED_OBJECTS',\n  PLAYED_AS_ALIEN: 'PLAYED_AS_ALIEN',\n};\nexport const achievementsReference: AchievementReference = {\n  [ACHIEVEMENTS.MOST_QUESTIONED_OBJECTS]: {\n    icon: 'loupe',\n    title: {\n      pt: 'Mais Curioso',\n      en: 'Most Curious',\n    },\n    description: {\n      pt: 'Perguntou sobre mais itens que os outros',\n      en: 'Inquired more items than anybody else',\n    },\n  },\n  [ACHIEVEMENTS.FEWEST_QUESTIONED_OBJECTS]: {\n    icon: 'arrow-narrow',\n    title: {\n      pt: 'Mais sucinto',\n      en: 'Most Succinct',\n    },\n    description: {\n      pt: 'Usou o menor número de itens durante as perguntas',\n      en: 'Use the fewest number of items during the inquiries',\n    },\n  },\n  [ACHIEVEMENTS.SINGLE_OBJECT_INQUIRY]: {\n    icon: 'one',\n    title: {\n      pt: 'Mais Objetivo',\n      en: 'Most Objective',\n    },\n    description: {\n      pt: 'Fez uma pergunta com apenas um item mais vezes',\n      en: 'Made an inquiry with a single item the most',\n    },\n  },\n  [ACHIEVEMENTS.MOST_CORRECT_OBJECTS]: {\n    icon: 'check-mark',\n    title: {\n      pt: 'Mais Preciso',\n      en: 'Most Precise',\n    },\n    description: {\n      pt: 'Ofereceu items corretos mais vezes',\n      en: 'Offered correct items the most',\n    },\n  },\n  [ACHIEVEMENTS.MOST_CURSED_OBJECTS]: {\n    icon: 'skull',\n    title: {\n      pt: 'Mais Sombrio',\n      en: 'Darkest',\n    },\n    description: {\n      pt: 'Ofereceu items amaldiçoados mais vezes',\n      en: 'Offered cursed items the most',\n    },\n  },\n  [ACHIEVEMENTS.MOST_BLANK_OBJECTS]: {\n    icon: 'box',\n    title: {\n      pt: 'Mais Neutro',\n      en: 'Most Neutral',\n    },\n    description: {\n      pt: 'Ofereceu items neutros mais vezes',\n      en: 'Offered neutral items the most',\n    },\n  },\n  [ACHIEVEMENTS.PLAYED_AS_ALIEN]: {\n    icon: 'alien',\n    title: {\n      pt: 'O alienígena',\n      en: 'The Alien',\n    },\n    description: {\n      pt: 'Jogou como alienígena',\n      en: 'Played as the alien',\n    },\n  },\n};\n\nexport default achievementsReference;\n","export function AlienCommunicationIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path fill=\"none\" d=\"M0 0h512v512H0z\"></path>\n      <path\n        fill=\"#6cf5c2\"\n        d=\"M428.3 504.5H83.7a78.84 78.84 0 0157.94-59.85l22.84-4.65L256 421.26l28.52 5.83 85.84 17.56a78.84 78.84 0 0157.94 59.85z\"\n      ></path>\n      <path\n        fill=\"#00f2a6\"\n        d=\"M284.52 427.09A101.47 101.47 0 01268 440.5l-27.73 18.07a43.35 43.35 0 01-47.3 0l-27.71-18.07-.78-.52L256 421.26z\"\n      ></path>\n      <path\n        fill=\"#00f2a6\"\n        d=\"M370.36 444.65L256 421.26l-29.72 6.07 84.64 17.32a78.85 78.85 0 0157.95 59.85h59.43a78.86 78.86 0 00-57.94-59.85z\"\n      ></path>\n      <path\n        fill=\"#6cf5c2\"\n        d=\"M367.47 290.89v-26.56a92.65 92.65 0 00-92.65-92.65h-37.64a92.65 92.65 0 00-92.65 92.65v26.56a20.78 20.78 0 00-10.76 18.2V333a63.62 63.62 0 0029.76 53.88 101.48 101.48 0 0041.09 53.61l27.73 18.06a43.31 43.31 0 0047.3 0l27.73-18.06a101.48 101.48 0 0041.09-53.61A63.62 63.62 0 00378.23 333v-23.91a20.78 20.78 0 00-10.76-18.2z\"\n      ></path>\n      <path\n        fill=\"#00f2a6\"\n        d=\"M367.47 290.89v-26.56a92.65 92.65 0 00-92.65-92.65h-38.5a92.64 92.64 0 0191.79 92.64v18.86a15.58 15.58 0 004.56 11.11 20.68 20.68 0 016.2 14.79V333a63.62 63.62 0 01-29.76 53.88A101.48 101.48 0 01268 440.5l-27.73 18.06a43.6 43.6 0 01-4 2.27 43.29 43.29 0 0043.33-2.27l27.73-18.06a101.48 101.48 0 0041.09-53.61A63.62 63.62 0 00378.23 333v-23.91a20.78 20.78 0 00-10.76-18.2z\"\n      ></path>\n      <path\n        fill=\"#bbec6c\"\n        d=\"M348.41 316a67.84 67.84 0 00-51.32 23.42c-8.75 10.11-16.36 22.36-16.36 34.38a101.35 101.35 0 0048.27-8.49 33.49 33.49 0 0019.45-30.52V316zm-184.83 0a67.84 67.84 0 0151.33 23.42c8.75 10.11 16.36 22.36 16.36 34.38a101.35 101.35 0 01-48.27-8.49 33.49 33.49 0 01-19.45-30.52V316z\"\n      ></path>\n      <path\n        fill=\"#8de02b\"\n        d=\"M348.41 316a68.11 68.11 0 00-24.73 4.66v17.14a33.48 33.48 0 01-19.45 30.51 94.93 94.93 0 01-16.77 5.77 102.38 102.38 0 0041.54-8.77 33.5 33.5 0 0019.45-30.51V316zm-133.5 23.42A67.84 67.84 0 00163.58 316v4.66a67.61 67.61 0 0126.6 18.76c8.43 9.74 15.78 21.46 16.31 33.06a96.3 96.3 0 0024.78 1.32c0-12.02-7.61-24.27-16.36-34.38z\"\n      ></path>\n      <path\n        fill=\"#ffe5c2\"\n        d=\"M44.47 24.62v79.79a17.13 17.13 0 0017.13 17.13h163.74l25.48 41.66a6.07 6.07 0 0010.36 0l25.48-41.66H450.4a17.12 17.12 0 0017.12-17.13V24.62A17.12 17.12 0 00450.4 7.5H61.6a17.13 17.13 0 00-17.13 17.12z\"\n      ></path>\n      <path\n        fill=\"#fed2a4\"\n        d=\"M260.88 127.69l-15.89 26 5.83 9.53a6.07 6.07 0 0010.36 0l25.48-41.66h-14.81a12.83 12.83 0 00-10.97 6.13zM450.4 7.5h-39.33a17.13 17.13 0 0117.12 17.12v79.79a17.13 17.13 0 01-17.12 17.13h39.33a17.13 17.13 0 0017.13-17.13V24.62A17.14 17.14 0 00450.4 7.5z\"\n      ></path>\n      <path d=\"M256 473.08a50.74 50.74 0 01-27.74-8.23l-27.74-18.07a109.35 109.35 0 01-43.26-55 71.56 71.56 0 01-31-58.74v-23.95a28.3 28.3 0 0114.63-24.76 7.5 7.5 0 117.25 13.13 13.3 13.3 0 00-6.88 11.63V333a56.38 56.38 0 0026.24 47.52 7.52 7.52 0 013.16 4 94.22 94.22 0 0038 49.64l27.73 18.07a35.86 35.86 0 0039.12 0l27.73-18.07a94.26 94.26 0 0038-49.64 7.52 7.52 0 013.16-4A56.41 56.41 0 00370.73 333v-23.91a13.3 13.3 0 00-6.88-11.63 7.51 7.51 0 01-3.88-6.57v-26.56a85.25 85.25 0 00-85.15-85.16h-37.64a85.18 85.18 0 00-84.78 77.11 7.5 7.5 0 11-14.93-1.4 100.17 100.17 0 0199.71-90.71h37.64A100.27 100.27 0 01375 264.33v22.57a28.3 28.3 0 0110.76 22.19V333a71.56 71.56 0 01-31 58.74 109.35 109.35 0 01-43.26 55l-27.73 18.07a50.8 50.8 0 01-27.77 8.27z\"></path>\n      <path d=\"M287.44 381.58a72.42 72.42 0 01-7.55-.33 7.49 7.49 0 01-6.66-7.45c0-12.12 6.12-25.34 18.19-39.29a75.3 75.3 0 0157-26 7.51 7.51 0 017.5 7.5v18.79a41 41 0 01-23.83 37.34 109.81 109.81 0 01-44.65 9.44zM340.91 324a60.32 60.32 0 00-38.15 20.36c-6.89 8-11.42 15.51-13.4 22.22a94.89 94.89 0 0036.49-8.06 26 26 0 0015.06-23.69zm-116.35 57.58a109.81 109.81 0 01-44.64-9.45 41 41 0 01-23.83-37.34V316a7.49 7.49 0 017.49-7.5 75.3 75.3 0 0157 26c12.07 13.95 18.19 27.17 18.19 39.29a7.49 7.49 0 01-6.66 7.45 72.42 72.42 0 01-7.55.34zm6.71-7.78zM171.09 324v10.83a26 26 0 0015.06 23.69 94.37 94.37 0 0036.5 8.09c-2-6.72-6.52-14.27-13.41-22.25A60.32 60.32 0 00171.09 324zm70.12 96.1a8 8 0 01-1.66-.18 7.51 7.51 0 01-5.66-9l2-8.83a7.5 7.5 0 1114.63 3.31l-2 8.82a7.5 7.5 0 01-7.31 5.88zm29.58 0a7.5 7.5 0 01-7.31-5.85l-2-8.82a7.5 7.5 0 0114.63-3.31l2 8.83a7.51 7.51 0 01-5.66 9 8 8 0 01-1.66.15zm-56.31-198.95a7.51 7.51 0 01-2.1-14.71c1.64-.47 40.63-11.56 86.94-.08a7.5 7.5 0 11-3.6 14.56c-42.44-10.51-78.78-.18-79.14-.08a7.32 7.32 0 01-2.1.31zm70.86 30.52a7.53 7.53 0 01-1.81-.22 117.85 117.85 0 00-54.78-.08 7.5 7.5 0 01-4.18-14.4c1.18-.35 29.28-8.34 62.57-.08a7.5 7.5 0 01-1.8 14.78zm-12.18 30.52a7.47 7.47 0 01-1.81-.22 65.83 65.83 0 00-30.42-.07 7.5 7.5 0 01-4.18-14.41 79.91 79.91 0 0138.21-.08 7.5 7.5 0 01-1.8 14.78zm-70.48 149.98a7.51 7.51 0 00-8.85-5.85l-53.69 11h-.32a85.81 85.81 0 00-63.46 65.54 7.5 7.5 0 005.75 8.91 7.29 7.29 0 001.59.17 7.5 7.5 0 007.3-5.86A70.89 70.89 0 01143.32 452l53.52-11a7.49 7.49 0 005.84-8.83zm232.95 70.75a85.79 85.79 0 00-63.45-65.54h-.32l-53.69-11a7.5 7.5 0 00-3 14.7l53.52 11a70.89 70.89 0 0152.31 54 7.5 7.5 0 007.3 5.92 7.29 7.29 0 001.59-.17 7.48 7.48 0 005.74-8.91zM256 173.61a13.49 13.49 0 01-11.58-6.49L221.13 129H61.6A24.65 24.65 0 0137 104.41V24.62A24.65 24.65 0 0161.6 0h388.8A24.66 24.66 0 01475 24.62v79.79A24.66 24.66 0 01450.4 129h-24.83a7.5 7.5 0 010-15h24.83a9.64 9.64 0 009.63-9.63V24.62A9.64 9.64 0 00450.4 15H61.6a9.63 9.63 0 00-9.6 9.62v79.79a9.63 9.63 0 009.6 9.59h163.74a7.51 7.51 0 016.4 3.58L256 157.3l24.26-39.68a7.51 7.51 0 016.4-3.58h103.87a7.5 7.5 0 110 15h-99.67l-23.28 38.08a13.5 13.5 0 01-11.58 6.49z\"></path>\n      <path d=\"M124 74.64a7.45 7.45 0 01-5.35-2.25l-27.5-28a7.5 7.5 0 0110.71-10.5l27.49 28A7.5 7.5 0 01124 74.64z\"></path>\n      <path d=\"M124 97.09a7.5 7.5 0 01-7.5-7.5V39.13a7.5 7.5 0 1115 0v50.46a7.5 7.5 0 01-7.5 7.5z\"></path>\n      <path d=\"M124 74.64a7.49 7.49 0 01-5.35-12.75l27.49-28a7.5 7.5 0 0110.7 10.5l-27.49 28a7.47 7.47 0 01-5.35 2.25zm80.72 22.45a7.5 7.5 0 01-7.5-7.5V39.13a7.5 7.5 0 1115 0v50.46a7.5 7.5 0 01-7.5 7.5z\"></path>\n      <path d=\"M232.21 97.09a7.5 7.5 0 01-7.5-7.5V71.86h-40v17.73a7.5 7.5 0 01-15 0V64.36a7.5 7.5 0 017.5-7.5h55a7.5 7.5 0 017.5 7.5v25.23a7.5 7.5 0 01-7.5 7.5zm35.31 0a7.5 7.5 0 01-7.5-7.5V39.13a7.5 7.5 0 1115 0v50.46a7.5 7.5 0 01-7.5 7.5zm33.93 0a7.5 7.5 0 01-7.5-7.5V39.13a7.5 7.5 0 1115 0v50.46a7.5 7.5 0 01-7.5 7.5z\"></path>\n      <path d=\"M339.41 66a7.43 7.43 0 01-3.4-.82l-38-19.34a7.5 7.5 0 116.8-13.36l38 19.34a7.5 7.5 0 01-3.4 14.18zm76.14 34.45H398a34.41 34.41 0 010-68.82h17.51a7.5 7.5 0 010 15H398a19.41 19.41 0 000 38.82h17.51a7.5 7.5 0 010 15z\"></path>\n    </svg>\n  );\n}\n","export function BoxCheckMarkIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#69bb69\"\n        d=\"M473.2 481.1H38.8a31.28 31.28 0 01-31.3-31.3V45.2A37.73 37.73 0 0145.2 7.5h421.6a37.73 37.73 0 0137.7 37.7v404.6a31.28 31.28 0 01-31.3 31.3z\"\n      ></path>\n      <path\n        fill=\"#53b652\"\n        d=\"M504.5 45.2v404.6a31.28 31.28 0 01-31.3 31.3H452a31.28 31.28 0 0031.3-31.3V45.2a37.73 37.73 0 00-37.7-37.7h21.1a37.75 37.75 0 0137.8 37.7z\"\n      ></path>\n      <path\n        fill=\"#69bb69\"\n        d=\"M434.7 436.5H77.3a25.65 25.65 0 01-25.6-25.6V82.8A30.81 30.81 0 0182.5 52h347.1a30.81 30.81 0 0130.8 30.8v328.1a25.73 25.73 0 01-25.7 25.6z\"\n      ></path>\n      <path\n        fill=\"#53b652\"\n        d=\"M429.5 52.1h-27.4a30.81 30.81 0 0130.8 30.8V411a25.65 25.65 0 01-25.6 25.6h27.4a25.65 25.65 0 0025.6-25.6V82.8a30.73 30.73 0 00-30.8-30.7z\"\n      ></path>\n      <path d=\"M512 45.2C512 21.1 492.1 0 466.8 0H45.2C20.7-.1.1 20.1 0 45.2v404.6c0 20.5 17 38.8 38.8 38.8h357.4a7.5 7.5 0 000-15H38.8a24.41 24.41 0 01-11.4-2.9l33.1-31.3a33.05 33.05 0 0016.8 4.6h357.4a33.05 33.05 0 0016.8-4.6l33.1 31.3a23.28 23.28 0 01-11.4 2.9h-42a7.5 7.5 0 000 15h42c20.9.1 38.7-17.2 38.8-38.8zM466.8 15a29.94 29.94 0 0116 4.6l-32.8 31a37.88 37.88 0 00-20.5-6h-347a37.63 37.63 0 00-20.5 6l-32.8-31a29.94 29.94 0 0116-4.6zM15 449.8V45.2a30.62 30.62 0 013.8-14.7L51.1 61a38.48 38.48 0 00-6.9 21.9V411a32.94 32.94 0 005.4 18.1l-32.4 30.7a24.32 24.32 0 01-2.2-10zM77.3 429a18.1 18.1 0 01-18.1-18.1V82.8a23.32 23.32 0 0123.3-23.3h347.1a23.32 23.32 0 0123.3 23.3v22.5a7.5 7.5 0 0015 0V82.8a38.48 38.48 0 00-6.9-21.9l32.3-30.5a30.62 30.62 0 013.8 14.7v404.6a23.51 23.51 0 01-2.2 9.9l-32.4-30.7a32.94 32.94 0 005.4-18.1V141.6a7.5 7.5 0 00-15 0V411a18.1 18.1 0 01-18.1 18.1z\"></path>\n      <path\n        fill=\"#ffeee6\"\n        d=\"M216.9 341.4a36 36 0 01-25.4-10.5l-44.2-44.2a35.921 35.921 0 0150.8-50.8l18.7 18.7 96.9-96.9a35.921 35.921 0 1150.8 50.8L242.3 330.8a35.54 35.54 0 01-25.4 10.6z\"\n      ></path>\n      <path d=\"M329.4 228.2a11.03 11.03 0 0015.6 15.6l27.5-27.5a47 47 0 00-66.4-66.4L217 239l-11-11a47 47 0 10-66.4 66.4l44.2 44.2a47.08 47.08 0 0066.4 0l57.2-57.2a11.03 11.03 0 10-15.6-15.6L234.6 323a24.87 24.87 0 01-35.2 0l-44.2-44.2a25 25 0 0135.3-35.3l18.7 18.7a11 11 0 007.8 3.2 11.4 11.4 0 007.8-3.2l96.9-96.9a25 25 0 1135.3 35.3z\"></path>\n    </svg>\n  );\n}\n","export function ClockIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <circle cx=\"256\" cy=\"256\" r=\"248\" fill=\"#ff5876\"></circle>\n      <path\n        fill=\"#e6485d\"\n        d=\"M256 486C122.048 486 12.919 379.795 8.18 247c-.107 2.988-.18 5.986-.18 9 0 136.967 111.033 248 248 248s248-111.033 248-248c0-3.014-.073-6.012-.18-9C499.081 379.795 389.952 486 256 486z\"\n      ></path>\n      <circle cx=\"256\" cy=\"256\" r=\"206.942\" fill=\"#e4eef9\"></circle>\n      <path\n        fill=\"#d5e0f2\"\n        d=\"M256 444.942c-111.274 0-202.022-87.828-206.736-197.942a209.92 209.92 0 00-.207 9c0 114.291 92.651 206.942 206.942 206.942S462.942 370.291 462.942 256c0-3.017-.079-6.015-.207-9C458.022 357.114 367.274 444.942 256 444.942z\"\n      ></path>\n      <path\n        fill=\"#405b6c\"\n        d=\"M331.17 183.393c-5.899-5.818-15.396-5.752-21.213.146L262.848 231.3c10.522 2.911 18.324 12.359 18.76 23.701l49.707-50.395c5.818-5.898 5.753-15.396-.145-21.213zM230.367 256c0-11.14 7.109-20.617 17.036-24.151l-92.462-82.397c-6.186-5.512-15.667-4.966-21.178 1.219s-4.966 15.667 1.219 21.178l95.407 85.021c-.01-.289-.022-.578-.022-.87z\"\n      ></path>\n      <circle cx=\"256\" cy=\"256\" r=\"25.633\" fill=\"#ff5876\"></circle>\n      <path\n        fill=\"#2d4456\"\n        d=\"M216.381 244.387l14.008 12.483c-.01-.29-.022-.578-.022-.87 0-11.14 7.109-20.617 17.036-24.151l-12.635-11.26c-8.792 5.283-15.446 13.747-18.387 23.798zm58.377-25.163l-11.91 12.075c10.522 2.911 18.324 12.359 18.76 23.701l13.128-13.31c-3.606-9.76-10.801-17.775-19.978-22.466z\"\n      ></path>\n      <path\n        fill=\"#e6485d\"\n        d=\"M256 263.634c-10.989 0-20.36-6.917-24.005-16.634a25.56 25.56 0 00-1.629 9c0 14.157 11.477 25.634 25.633 25.634 14.157 0 25.634-11.477 25.634-25.634a25.56 25.56 0 00-1.629-9c-3.644 9.716-13.015 16.634-24.004 16.634z\"\n      ></path>\n      <path d=\"M437.02 74.98C388.667 26.629 324.381 0 256 0S123.333 26.629 74.98 74.98C26.628 123.333 0 187.62 0 256c0 65.664 24.828 128.099 69.909 175.802a7.515 7.515 0 1010.923-10.323C38.398 376.577 15.029 317.809 15.029 256c0-64.366 25.065-124.879 70.578-170.392C131.121 40.094 191.634 15.029 256 15.029s124.879 25.065 170.392 70.579C471.905 131.121 496.97 191.634 496.97 256s-25.066 124.879-70.578 170.392C380.879 471.906 320.366 496.971 256 496.971c-56.111 0-110.745-19.706-153.838-55.487a7.515 7.515 0 00-9.601 11.563C138.346 491.063 196.389 512 256 512c68.381 0 132.667-26.629 181.02-74.98C485.372 388.667 512 324.38 512 256s-26.628-132.667-74.98-181.02z\"></path>\n      <path d=\"M402.975 109.552a7.514 7.514 0 00-.363-10.621C362.703 61.662 310.635 41.138 256 41.138c-57.391 0-111.348 22.349-151.93 62.932S41.138 198.608 41.138 256s22.349 111.348 62.932 151.931 94.539 62.931 151.93 62.931 111.348-22.349 151.931-62.931S470.862 313.392 470.862 256c0-49.329-16.259-95.72-47.02-134.156a7.514 7.514 0 10-11.734 9.39c28.605 35.743 43.724 78.886 43.724 124.766 0 110.188-89.645 199.833-199.833 199.833S56.167 366.188 56.167 256 145.812 56.167 256 56.167c50.813 0 99.238 19.088 136.354 53.748a7.512 7.512 0 0010.621-.363z\"></path>\n      <path d=\"M263.515 98.649V75.372a7.515 7.515 0 10-15.03 0v23.276a7.515 7.515 0 0015.03.001zm-15.03 314.702v23.276a7.515 7.515 0 1015.03 0v-23.276a7.515 7.515 0 10-15.03 0zm188.142-149.836a7.515 7.515 0 100-15.03h-23.276c-4.151 0-7.515 3.364-7.515 7.515s3.364 7.515 7.515 7.515zm-361.254-15.03c-4.151 0-7.515 3.364-7.515 7.515s3.364 7.515 7.515 7.515h23.276a7.515 7.515 0 100-15.03zm282.215 102.661a7.515 7.515 0 009.667-11.508l-81.672-68.603c2-3.919 3.245-8.283 3.539-12.904l47.69-48.35c8.687-8.451 8.585-23.551-.219-31.882-8.432-8.714-23.553-8.576-31.882.219l-44.363 44.977a33.14 33.14 0 00-11.013.378l-89.594-79.841c-8.887-8.252-23.953-7.381-31.831 1.833-8.269 9.28-7.447 23.559 1.833 31.829L173.1 215.93a7.516 7.516 0 0010-11.22l-43.355-38.635c-3.094-2.757-3.368-7.517-.611-10.61 2.624-3.072 7.653-3.36 10.61-.611l84.956 75.708a33.368 33.368 0 00-9.068 12.05l-20.094-17.906a7.516 7.516 0 00-9.999 11.221l27.576 24.573c2.204 16.183 16.106 28.698 32.885 28.698a33.025 33.025 0 0019.916-6.655zm-42.175-162.473c2.777-2.934 7.809-2.968 10.627-.072 2.936 2.777 2.969 7.81.072 10.627l-40.747 41.311a33.435 33.435 0 00-9.876-11.39zM256 274.169c-10.019 0-18.169-8.151-18.169-18.169s8.151-18.169 18.169-18.169c10.019 0 18.169 8.151 18.169 18.169s-8.15 18.169-18.169 18.169z\"></path>\n    </svg>\n  );\n}\n","export function MagicSkullIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#717ed4\"\n        d=\"M408.33 39.51l81.19-7-15-15H255.63c-21.2 0-32.77 24.72-19.2 41l11.08 13.3c8.14 9.77 1.2 24.6-11.52 24.6H100.07c-86.88 0-125.7 109.05-58.38 163.96l46.97 38.3a28.45 28.45 0 012.14 42.17l-24.13 24.13c-11.3 11.3-12.69 26.68-7.2 39.02 5.74 8.98 16.92 12.73 24.36 12.73h322.5c37.17 0 46.8-30.72 30.38-59.38l-13.09-22.87c-16.05-28.04-13.95-51.86 8.4-72.59l53.28-49.4c17.6-16.32 20-45.45 7.69-66.94a55.06 55.06 0 00-14.89-13.27L399 84.02c-24.4-14.88-16.44-44.5 9.33-44.5z\"\n      ></path>\n      <path\n        fill=\"#5766cc\"\n        d=\"M406.34 409.72H78.84A34.56 34.56 0 0159.47 404c5.23 11.75 16.72 20.73 31.94 20.73h323.5c26.89 0 43.73-29.05 30.38-52.38l-8.59-15c13.36 23.33-3.49 52.38-30.37 52.38zm2.91-362.21h95.27l-15-15h-84.2c-25.76 0-35.27 33.86-13.27 47.27l6.94 4.24c-16.98-10.36-9.64-36.5 10.26-36.5zm70.05 158.97l-53.27 49.4a53.13 53.13 0 00-9.99 65.35l7.58 13.24a53.13 53.13 0 019.99-65.34l53.27-49.4c21.69-20.12 22.95-52.49 6.1-74.19 8.07 20.22 3.92 44.62-13.68 60.94z\"\n      ></path>\n      <path\n        fill=\"#ddc9f1\"\n        d=\"M82.65 131.02c-4.85 0-8.24 36.83-11.95 40.53s-29.54 7.17-29.54 12.03c0 4.86 25.84 8.32 29.55 12.03s7.09 40.53 11.94 40.53S90.9 199.3 94.6 195.6s29.55-7.17 29.55-12.03c0-4.86-25.84-8.32-29.55-12.03-3.7-3.7-7.09-40.53-11.95-40.53z\"\n      ></path>\n      <path\n        fill=\"#f3f1f4\"\n        d=\"M371.4 263.93c0-43.4-19.4-78.17-49.67-103.26a121.82 121.82 0 00-65.71-19.12c-67.59 0-122.38 54.79-122.38 122.38 0 0 .24 50.76.24 85.88 0 6.32 1.4 11.85 3.93 16.5 8.9 2.22 32.58 16.63 32.58 16.63l-6.12 14.63c1.38 19.95 6.8 37.11 15 51.21 22.65 20.02 52.32 35.73 76.98 35.73 15.33 0 36.46-11.2 50-22.28 0 0 12.33-89.42 37.38-89.42 11.95 0 28-12.98 28-23 0-22.25-.24-85.88-.24-85.88z\"\n      ></path>\n      <path\n        fill=\"#d5d9f2\"\n        d=\"M163.9 382.54c-11.6-1.26-21.06-6.97-26.1-16.24 8.9 2.23 20.68 1.5 31.08 1.5 14.38 0 27.37 11.51 27.37 38.67v9.03c-4.55-9.03-12.99-17.7-27.37-17.7-1.57 0-3.1-.08-4.61-.23-.24-3.34-.36-6.76-.36-10.25v-4.78z\"\n      ></path>\n      <path\n        fill=\"#a4ace3\"\n        d=\"M256.25 346c17.83 15.82 23.44 21.48 23.44 28.52a12.73 12.73 0 01-23.44 6.9 12.72 12.72 0 01-23.43-6.9c0-7.04 5.6-12.7 23.43-28.53z\"\n      ></path>\n      <path\n        fill=\"#717ed4\"\n        d=\"M184.68 311.63c13.29-9.61 34.49-9.18 48.03.15-1.36-5.75-4.46-11.02-9.34-14.55-13.5-9.77-35.19-10.37-48.69-.6s-13.5 32.8 0 42.57l.66.46c-2.39-10.15.72-21.8 9.34-28.03zm114.46.6c13.29-9.6 34.49-10.34 48.03-1.05-1.35-5.75-4.46-11.02-9.34-14.55-13.5-9.77-35.19-9.17-48.69.6s-13.5 32.8 0 42.57l.66.46c-2.38-10.15.72-21.8 9.34-28.03z\"\n      ></path>\n      <path\n        fill=\"#a4ace3\"\n        d=\"M223.37 339.8c8.62-6.23 11.72-17.88 9.34-28.02-13.54-9.32-34.74-9.76-48.03-.15-8.62 6.24-11.73 17.88-9.34 28.03 13.54 9.32 34.74 9.76 48.03.15zm114.46-.6c8.62-6.23 11.72-17.88 9.34-28.02-13.54-9.29-34.74-8.56-48.03 1.05-8.62 6.24-11.72 17.88-9.34 28.03 13.54 9.28 34.74 8.55 48.03-1.06z\"\n      ></path>\n      <path\n        fill=\"#d5d9f2\"\n        d=\"M378.4 263.93c0-43.4-22.6-81.53-56.68-103.26 25.55 27.82 41.67 66.6 41.67 103.26 0 18.74.24 71.9.24 85.88 0 10.02-8.05 18-20 18-25.05 0-42.38 16.83-42.38 38.66v55.76c-13.54 11.08-29.67 17.28-45 17.28-24.66 0-54.33-10.71-76.99-30.73 17.23 29.63 46.75 45.73 77 45.73 47.04 0 92.32-38.95 92.32-107.2v-4.77c17.44-1.88 30.05-13.8 30.05-32.73 0-17.15-.23-63.67-.23-85.88z\"\n      ></path>\n      <circle cx=\"140.29\" cy=\"140.2\" r=\"15\" fill=\"#bd96e4\"></circle>\n      <circle cx=\"399.72\" cy=\"141.2\" r=\"15\" fill=\"#bd96e4\"></circle>\n      <path d=\"M256.02 502.01c-26.23 0-50.83-10.78-69.27-30.36-10.47-11.12-18.35-24.41-23.49-39.43H91.42A41.84 41.84 0 0152.15 406a41.84 41.84 0 019.21-46.32l24.13-24.13a20.7 20.7 0 006.11-15.87c-.3-6-3.03-11.39-7.68-15.18l-14.45-11.8a7.5 7.5 0 019.48-11.62l14.45 11.8a36.02 36.02 0 0113.19 26.04 36.01 36.01 0 01-10.49 27.24l-24.13 24.13c-9.58 9.58-9.36 21.76-5.96 29.97 3.4 8.2 11.86 16.97 25.4 16.97h67.76c-1.88-9-2.88-18.5-2.97-28.4-18.19-4.59-30.06-19.36-30.06-39.01v-85.88c0-36.8 15.7-72 43.08-96.62a7.5 7.5 0 0110.03 11.16 115.08 115.08 0 00-38.1 85.46v85.88c0 15.49 10.79 25.5 27.5 25.5 19.22 0 34.87 13.98 34.87 31.16v4.79a89.77 89.77 0 0015 7.9v-4.18a7.5 7.5 0 1115 0v8.95a99.79 99.79 0 0015 2.27v-6.22a7.5 7.5 0 1115 0v6.22a99.79 99.79 0 0015-2.27v-8.95a7.5 7.5 0 1115 0v4.18a89.77 89.77 0 0015-7.9v-4.8c0-17.17 15.65-31.15 34.88-31.15 16.7 0 27.5-10.01 27.5-25.5v-55.88a7.5 7.5 0 1115 0v55.88c0 19.65-11.87 34.41-30.04 39-.3 33.3-10.86 61.92-30.57 82.84-18.44 19.58-43.04 30.36-69.27 30.36zm-84.8-111.55c.62 28.68 9.74 53.15 26.45 70.9 15.58 16.54 36.3 25.65 58.35 25.65 22.05 0 42.78-9.1 58.35-25.65 16.73-17.75 25.84-42.22 26.46-70.9-8.75.98-17.31 6.92-17.31 16v21.52a7.5 7.5 0 01-14.97.66 107.06 107.06 0 01-15.03 6.52v7.82a7.5 7.5 0 11-15 0v-3.78c-4.95.98-9.96 1.63-15 1.95v6.83a7.5 7.5 0 11-15 0v-6.83c-5.04-.32-10.06-.97-15-1.95v3.78a7.5 7.5 0 11-15 0v-7.82a106.94 106.94 0 01-15.03-6.52 7.5 7.5 0 01-14.97-.66v-21.51c0-9.09-8.55-15.02-17.3-16.01zm243.7 41.76h-39.36a7.5 7.5 0 110-15h39.36c9.92 0 18.82-5.12 23.8-13.7 4.97-8.58 5-18.85.07-27.46l-21.67-37.86a60.36 60.36 0 0111.39-74.57l53.27-49.4a47.23 47.23 0 0015-39.66 47.22 47.22 0 00-22.58-35.9l-79.11-48.25c-10.69-6.52-15.4-18.52-12.02-30.57 3.38-12.05 13.66-19.84 26.18-19.84h95.27a7.5 7.5 0 110 15h-95.27c-6.81 0-10.53 4.6-11.74 8.9s-.43 10.16 5.39 13.7l79.11 48.26a62.1 62.1 0 0129.7 47.2 62.1 62.1 0 01-19.73 52.15l-53.27 49.4a45.43 45.43 0 00-8.58 56.12l21.68 37.87c7.61 13.3 7.57 29.17-.12 42.43s-21.44 21.18-36.77 21.18zm-148.2-37.47c-3.86 0-7.54-1.08-10.7-3.05a20.26 20.26 0 01-30.93-17.18c0-10.66 7.49-17.74 25.95-34.14a7.5 7.5 0 019.96 0c18.46 16.4 25.95 23.48 25.95 34.14a20.26 20.26 0 01-20.24 20.23zm-10.7-20.83a7.5 7.5 0 016.3 3.43 5.23 5.23 0 009.63-2.83c0-3.26-4.28-7.96-15.93-18.47-11.65 10.51-15.94 15.2-15.94 18.47a5.24 5.24 0 009.64 2.83 7.5 7.5 0 016.3-3.43zM42.6 355.52a7.5 7.5 0 01-7.5-7.5v-15H24.84a7.5 7.5 0 110-15h10.27v-15a7.5 7.5 0 1115 0v15h10.26a7.5 7.5 0 110 15H50.11v15a7.5 7.5 0 01-7.5 7.5zm269.26-1.2c-10.14 0-20.2-2.8-27.98-8.44-8.29-6-13.23-16.22-13.23-27.36s4.94-21.37 13.22-27.36c16.35-11.83 41.6-12.1 57.48-.6 8.29 5.99 13.23 16.22 13.23 27.36s-4.94 21.36-13.23 27.36c-8.32 6.02-18.96 9.05-29.49 9.05zm1.53-57.18c-7.46 0-15.05 2.06-20.72 6.17-4.4 3.18-7.02 8.87-7.02 15.2s2.62 12.04 7.02 15.22c10.58 7.66 28.85 7.38 39.89-.6 4.4-3.19 7.02-8.87 7.02-15.21s-2.62-12.03-7.02-15.21c-5.14-3.73-12.1-5.57-19.17-5.57zM198.9 354.33c-10.53 0-21.16-3.03-29.49-9.05-8.28-6-13.23-16.22-13.23-27.36s4.95-21.37 13.23-27.37c15.89-11.49 41.13-11.22 57.48.6 8.29 6 13.23 16.23 13.23 27.37s-4.95 21.37-13.23 27.36c-7.8 5.64-17.84 8.45-27.99 8.45zm-20.7-51.62c-4.4 3.18-7.02 8.86-7.02 15.2s2.63 12.03 7.03 15.22c11.03 7.98 29.3 8.26 39.89.6 4.4-3.18 7.02-8.87 7.02-15.21s-2.63-12.03-7.02-15.21c-11.04-7.99-29.3-8.26-39.9-.6zm77.8-9.22a7.5 7.5 0 01-7.5-7.5v-15h-10.25a7.5 7.5 0 110-15h10.26v-15a7.5 7.5 0 1115 0v15h10.26a7.5 7.5 0 110 15h-10.26v15a7.5 7.5 0 01-7.5 7.5zm-241.53-3.4a8 8 0 010-16 8 8 0 010 16zm35.92-15.12a7.47 7.47 0 01-4.74-1.69l-8.7-7.1C19.8 252.19 8.02 233.94 2.91 213.4a100.4 100.4 0 013.07-58.12 100.4 100.4 0 0134.35-46.97c16.95-12.69 37.6-19.4 59.73-19.4h135.92a7.4 7.4 0 006.79-4.31 7.4 7.4 0 00-1.03-7.98l-11.08-13.3a32.2 32.2 0 01-4.47-34.6 32.2 32.2 0 0129.43-18.7h80.42a7.5 7.5 0 110 15h-80.42c-6.96 0-12.89 3.76-15.84 10.07a17.13 17.13 0 002.4 18.63l11.08 13.3c5.65 6.77 6.83 15.95 3.1 23.94s-11.56 12.96-20.39 12.96h-135.9c-44.15 0-70.25 29.13-79.96 56.4-9.7 27.26-7.9 66.33 26.31 94.23l8.71 7.1a7.5 7.5 0 01-4.74 13.32zm328-3.54a7.5 7.5 0 01-7.5-7.5c0-63.35-51.54-114.88-114.88-114.88a113.6 113.6 0 00-52.77 12.8 7.5 7.5 0 01-6.9-13.3 130.25 130.25 0 0159.67-14.5c71.61 0 129.88 58.26 129.88 129.88a7.5 7.5 0 01-7.5 7.5zM421 244.12a8 8 0 010-16 8 8 0 010 16zm-338.36-.48c-7.52 0-9.87-8.55-11-12.65-1.25-4.52-2.37-10.26-3.46-15.81-.9-4.64-2.21-11.35-3.15-14.23-2.1-.84-6.41-2.02-9.42-2.85-12.27-3.36-21.96-6.01-21.96-14.52s9.69-11.16 21.96-14.52c3.01-.83 7.31-2 9.42-2.85.94-2.88 2.25-9.58 3.16-14.22 1.08-5.56 2.2-11.3 3.45-15.82 1.13-4.1 3.48-12.65 11-12.65s9.88 8.55 11.01 12.65c1.25 4.52 2.37 10.26 3.45 15.82.9 4.64 2.22 11.34 3.16 14.22 2.1.84 6.4 2.02 9.42 2.85 12.27 3.36 21.96 6.02 21.96 14.52s-9.7 11.16-21.96 14.52c-3.01.83-7.32 2-9.42 2.85-.94 2.88-2.25 9.59-3.16 14.23-1.08 5.55-2.2 11.29-3.45 15.8-1.13 4.11-3.48 12.66-11 12.66zm-23.27-60.06l.2.06c8.83 2.42 13.57 3.81 16.43 6.66 2.88 2.89 4.11 7.78 6.64 20.66 2.53-12.88 3.77-17.77 6.65-20.65 2.85-2.86 7.6-4.25 16.43-6.67l.2-.06-.2-.06c-8.84-2.42-13.58-3.81-16.43-6.67-2.88-2.88-4.11-7.77-6.65-20.65-2.53 12.88-3.76 17.77-6.64 20.65-2.86 2.86-7.6 4.25-16.43 6.67l-.2.06zm6.6 17.8zm33.35-35.61zm342.18 48.14a7.5 7.5 0 01-7.5-7.5v-15h-10.26a7.5 7.5 0 110-15H434v-15a7.5 7.5 0 1115 0v15h10.26a7.5 7.5 0 110 15H449v15a7.5 7.5 0 01-7.5 7.5zm-41.8-50.2c-12.4 0-22.5-10.1-22.5-22.5s10.1-22.5 22.5-22.5 22.5 10.09 22.5 22.5-10.09 22.5-22.5 22.5zm0-30a7.5 7.5 0 10.02 15 7.5 7.5 0 00-.01-15zm-259.42 29c-12.4 0-22.5-10.1-22.5-22.5s10.1-22.5 22.5-22.5 22.5 10.09 22.5 22.5-10.1 22.5-22.5 22.5zm0-30a7.5 7.5 0 10.02 15 7.5 7.5 0 00-.02-15zm52.11 0a8 8 0 010-16 8 8 0 010 16zm155.46-40.84a8 8 0 010-16 8 8 0 010 16zm126.66-66.86H366.04a7.5 7.5 0 110-15h108.48a7.5 7.5 0 110 15z\"></path>\n    </svg>\n  );\n}\n","export function TrophyIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M397.763 87.5h-98.509v213.476h98.509c58.855 0 106.737-47.882 106.737-106.738S456.618 87.5 397.763 87.5zm0 183.476h-68.509V117.5h68.509c42.381 0 76.738 34.357 76.738 76.738-.001 42.381-34.357 76.738-76.738 76.738zM114.237 87.5C55.382 87.5 7.5 135.382 7.5 194.238s47.882 106.738 106.737 106.738h98.509V87.5zm68.509 183.476h-68.509c-42.381 0-76.738-34.357-76.738-76.738S71.856 117.5 114.237 117.5h68.509zM314 419.5H198l15-91h86z\"\n      ></path>\n      <path fill=\"#fee97d\" d=\"M299 328.5h-30l15 91h30z\"></path>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M382.221 504.5H129.779a7 7 0 01-7-7v-11.629c0-22.091 17.909-40 40-40h186.442c22.091 0 40 17.909 40 40V497.5a7 7 0 01-7 7z\"\n      ></path>\n      <path\n        fill=\"#fee97d\"\n        d=\"M349.221 445.871h-30c22.092 0 40 17.909 40 40V497.5a7 7 0 01-7 7h30a7 7 0 007-7v-11.629c0-22.092-17.909-40-40-40zm-5 0H167.779v-3.629c0-22.091 17.909-40 40-40h96.442c22.091 0 40 17.909 40 40z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M304.221 402.241h-30c22.092 0 40 17.909 40 40v3.629h30v-3.629c0-22.091-17.909-40-40-40z\"\n      ></path>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M411.5 57.5h-311c-13.807 0-25-11.193-25-25s11.193-25 25-25h311c13.807 0 25 11.193 25 25s-11.193 25-25 25z\"\n      ></path>\n      <path\n        fill=\"#fee97d\"\n        d=\"M411.5 7.5h-30c13.807 0 25 11.193 25 25s-11.193 25-25 25h30c13.807 0 25-11.193 25-25s-11.193-25-25-25zM256 362.5c-83.119 0-150.5-67.381-150.5-150.5V57.5h301V212c0 83.119-67.381 150.5-150.5 150.5z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M376.5 57.5V212c0 78.056-59.424 142.229-135.5 149.757 4.934.488 9.937.743 15 .743 83.119 0 150.5-67.381 150.5-150.5V57.5z\"\n      ></path>\n      <circle cx=\"256\" cy=\"207.96\" r=\"94.169\" fill=\"#fff\"></circle>\n      <path\n        fill=\"#fee97d\"\n        d=\"M262.277 154.391l13.139 26.623a7 7 0 005.271 3.829l29.38 4.269c5.742.834 8.034 7.89 3.879 11.94l-21.26 20.723a6.998 6.998 0 00-2.013 6.196l5.019 29.261c.981 5.718-5.021 10.079-10.157 7.379l-26.278-13.815a7.001 7.001 0 00-6.515 0l-26.278 13.815c-5.135 2.7-11.137-1.661-10.157-7.379l5.019-29.261a7 7 0 00-2.013-6.196l-21.26-20.723c-4.155-4.05-1.862-11.106 3.879-11.94l29.38-4.269a7 7 0 005.271-3.829l13.139-26.623c2.569-5.203 9.987-5.203 12.555 0z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M313.946 201.052c4.155-4.05 1.862-11.106-3.88-11.94l-29.38-4.269a6.997 6.997 0 01-5.27-3.829l-13.139-26.623c-2.568-5.203-9.987-5.203-12.554 0l-10.888 22.061 3.874 7.85a18.632 18.632 0 0014.03 10.193c15.284 2.221 21.386 21.003 10.327 31.783a18.632 18.632 0 00-5.359 16.493l1.755 10.236 22.073 11.604c5.135 2.7 11.137-1.661 10.157-7.379l-5.019-29.261a7 7 0 012.013-6.196z\"\n      ></path>\n      <path d=\"M282.025 177.458l-13.022-26.387c-2.462-4.985-7.443-8.082-13.003-8.082s-10.541 3.097-13.003 8.083l-13.022 26.387-29.119 4.231c-5.502.799-9.987 4.581-11.706 9.868-1.718 5.288-.312 10.983 3.669 14.865l21.071 20.539-4.975 29.003c-.939 5.479 1.271 10.914 5.77 14.182s10.349 3.691 15.271 1.104L256 257.557l26.045 13.693c4.903 2.578 10.759 2.174 15.271-1.104 4.498-3.268 6.709-8.702 5.769-14.182l-4.974-29.003 21.071-20.539c3.981-3.881 5.387-9.577 3.669-14.865-1.719-5.287-6.204-9.068-11.706-9.867zm5.426 38.946a14.494 14.494 0 00-4.169 12.834l4.847 28.264-25.382-13.345a14.498 14.498 0 00-13.495 0l-25.381 13.344 4.847-28.262a14.495 14.495 0 00-4.169-12.835l-20.534-20.016 28.377-4.124a14.494 14.494 0 0010.918-7.932L256 158.618l12.69 25.714a14.494 14.494 0 0010.918 7.932l28.377 4.124zm194.096-99.749c-17.941-19.36-41.716-31.799-67.547-35.49v-16.27c16.756-1.282 30-15.316 30-32.394C444 14.58 429.421 0 411.5 0h-311C82.579 0 68 14.58 68 32.5c0 17.078 13.244 31.112 30 32.394v16.27c-25.714 3.676-49.409 16.029-67.321 35.248a7.5 7.5 0 0010.972 10.228C56.721 110.471 76.495 99.908 98 96.352v15.236c-39.204 7.62-68 42.024-68 82.652 0 22.509 8.765 43.663 24.675 59.561 15.532 15.543 36.076 24.242 57.996 24.641a157.847 157.847 0 008.007 15.038h-6.438c-54.722 0-99.24-44.519-99.24-99.24 0-14.091 2.904-27.711 8.633-40.48a7.5 7.5 0 00-13.685-6.14C3.347 162.333 0 178.019 0 194.24c0 62.992 51.248 114.24 114.24 114.24h16.729c17.756 22.957 41.679 40.906 69.267 51.348l-6.089 36.917c-18.396 5.522-32.123 21.915-33.701 41.685-25.112 1.221-45.167 22.032-45.167 47.441V497.5c0 7.995 6.505 14.5 14.5 14.5H382.22c7.995 0 14.5-6.505 14.5-14.5v-11.629c0-25.409-20.055-46.22-45.167-47.441-1.579-19.771-15.306-36.163-33.701-41.685l-6.089-36.917c27.588-10.441 51.511-28.391 69.267-51.348h16.729c62.992 0 114.24-51.248 114.24-114.24.001-28.841-10.814-56.394-30.452-77.585zM65.281 243.195C52.203 230.126 45 212.74 45 194.24c0-32.392 22.265-59.968 53-67.308V212c0 17.851 2.98 35.018 8.461 51.034-15.554-1.728-29.958-8.609-41.18-19.839zM100.5 50C90.851 50 83 42.149 83 32.5S90.851 15 100.5 15h311c9.649 0 17.5 7.851 17.5 17.5S421.149 50 411.5 50zM414 126.932c30.735 7.34 53 34.916 53 67.308 0 18.5-7.203 35.886-20.286 48.958-11.218 11.227-25.621 18.108-41.175 19.836C411.02 247.018 414 229.851 414 212zm-77.518 311.439h-22.895c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h35.634c17.921 0 32.5 14.58 32.5 32.5V497H130.279v-11.129c0-17.92 14.579-32.5 32.5-32.5h115.808c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5H175.518c1.921-16.101 15.651-28.629 32.261-28.629h96.441c16.611-.001 30.342 12.527 32.262 28.629zm-126.801-43.63l4.987-30.237C227.849 368.08 241.703 370 256 370s28.151-1.92 41.332-5.496l4.987 30.237zM256 355c-78.851 0-143-64.149-143-143V65h286v147c0 78.851-64.149 143-143 143zm141.76-61.52h-6.438a157.741 157.741 0 008.007-15.038c21.919-.399 42.463-9.097 57.991-24.637C473.235 237.903 482 216.749 482 194.24c0-40.627-28.796-75.032-68-82.652V96.352c21.605 3.57 41.449 14.208 56.545 30.498C487.604 145.259 497 169.192 497 194.24c0 54.721-44.519 99.24-99.24 99.24zM256 106.291c-56.061 0-101.67 45.609-101.67 101.669S199.939 309.629 256 309.629 357.67 264.02 357.67 207.96 312.061 106.291 256 106.291zm0 188.338c-47.79 0-86.67-38.88-86.67-86.669s38.88-86.669 86.67-86.669 86.67 38.88 86.67 86.669-38.88 86.669-86.67 86.669z\"></path>\n    </svg>\n  );\n}\n"],"names":["CanvasResizer","useGlobalState","canvasSize","setCanvasSize","type","position","icon","DragOutlined","label","labelText","content","className","value","min","max","step","onChange","pt","en","CanvasSVG","drawing","width","height","strokeWidth","viewBox","konvaLines","JSON","parse","paths","map","lineArr","path","x","y","length","strokeWidthBySize","small","medium","large","xmlns","overflow","style","index","d","fill","stroke","strokeLinecap","strokeLinejoin","strokeMiterlimit","DrawingCanvas","lines","setLines","showControls","willReadFrequently","useState","drawingHistory","setDrawingHistory","isDrawing","useRef","startDrawing","current","stopDrawing","startLine","e","pos","target","getStage","getPointerPosition","Math","round","finishLine","point","lastLineEntry","concat","splice","handleMouseDown","handleMouseMove","lastLine","handleMouseUp","handleOffsetMouseUp","handleOffsetMouseDown","direction","align","onMouseDown","onMousemove","onMouseup","onTouchStart","onTouchMove","onTouchEnd","onMouseLeave","window","document","addEventListener","onMouseEnter","removeEventListener","clsx","id","line","i","points","tension","lineCap","globalCompositeOperation","onClick","linesCopy","drawingHistoryCopy","pop","push","disabled","UndoOutlined","lastUndoLine","DeleteOutlined","Card","children","header","footer","color","size","randomColor","headerClassName","footerClassName","hideHeader","baseClass","bgColor","getColorFromLetter","toUpperCase","startsWith","backgroundColor","MetricHighlight","iconSize","iconPlacement","TimeHighlight","submitAction","httpsCallable","functions","ItemsHighlight","PlayerIconsIcon","HieroglyphHighlight","HieroglyphIcon","CurseItemHighlight","MagicSkullIcon","StepSelectAlien","players","announcement","onSubmitAlien","status","isLoading","useLoading","isVIP","useVIP","fullWidth","contained","needed","timeLeft","totalCurses","Object","values","player","alienId","withName","addressUser","PhaseAlienSelection","state","info","useStep","setStep","translate","useLanguage","request","useAPICall","apiFunction","actionName","onSuccess","onError","successMessage","errorMessage","payload","action","useOnSubmitAlienAPIRequest","UfoIcon","title","currentRound","phase","allowedPhase","PHASES","ObjectsKey","ObjectsGrid","items","showTypes","activeObjects","showAll","level","item","offered","includes","Boolean","count","inquired","ItemCard","CheckCircleFilled","CloseCircleFilled","LS_KEY","useCache","cache","setCache","useLocalStorage","getLocalStorage","setLocalStorage","useEffect","isEmpty","stringify","useEffectOnce","resetCache","SignsKeyCard","signs","language","updateCache","signId","prev","copy","arrow","InfoCircleOutlined","shape","orderBy","sign","onConfirm","onCancel","okText","cancelText","attribute","SignCard","HumanSignBoard","SelectableObjectsGrid","selectedObjects","selectObject","user","maxObjects","hideKey","keys","ready","active","activeClass","HumanInquiry","submitInquiry","setAttribute","useBooleanDictionary","selected","dict","updateSelected","updateDict","objectsIds","defaultValue","key","intention","wrap","AlienContent","role","HumanContent","ALIEN_CANVAS","ITEM_TYPES","AlienViewBoard","isAlienBot","entry","isNegative","substring","InquiryHistory","inquiryHistory","showIntention","columns","dataIndex","render","playerId","objectIds","Objects","answer","Intention","bordered","dataSource","objectId","join","find","ItemResolution","itemId","IconAvatar","BoxXIcon","BoxCheckMarkIcon","BoxOneIcon","RequestHistory","requestHistory","offers","Offerings","offer","History","panels","Status","found","BoxQuestionMarkIcon","total","BotsRules","BotPopupRule","RobotOutlined","StepHumanAsks","onSubmitHumanInquiry","alien","isUserAlien","currentHuman","isUserTheCurrentHuman","isDebugEnabled","undefined","condition","PhaseHumanAsk","useUser","useWhichPlayerIsThe","isFirstHuman","turnOrder","humanId","goToNextStep","useOnSubmitHumanInquiryAPIRequest","QuestionIcon","duration","onPressButton","time","circleColor","appearance","alienBot","AlienWritingBoard","onSubmit","StepAlienAnswers","onSubmitAlienResponse","onConfirmNote","currentInquiry","alienResponse","pluralize","PhaseAlienAnswer","useOnSubmitAlienResponseAPIRequest","useOnMakeMeReady","StepAlienRequests","onSubmitAlienRequest","setIntention","alienRequest","PhaseAlienRequest","useOnSubmitAlienRequestAPIRequest","AlienCommunicationIcon","HumanOffering","submitOffer","offeringId","setSelected","StepHumansOffer","onSubmitOffering","PhaseOfferings","useOnSubmitOfferingAPIRequest","OfferingIcon","StepReveal","latestRequest","ClockIcon","PhaseReveal","MultitaskIcon","wasCurseSelected","curses","PhaseGameOver","announcementIcon","TrophyIcon","Achievements","achievements","reference","achievementsReference","HumanSeedingSteps","onSubmitSeeds","seeds","setSeeds","currentStep","setCurrentStep","setDict","reset","selectedObjectsIds","attributes","steps","description","progressDot","getAnimationClass","previousStep","newCurrentDict","reduce","acc","previousSeeds","StepSeedAlien","PhaseAlienSeeding","useOnSubmitSeedingAPIRequest","BooksIcon","getActiveComponent","LoadingPage","PhaseLobby","PhaseRules","localStorage","PhaseSetup","PageError","theme","token","colorPrimary","THEME_COLORS","colorLink","gameCollection","GAME_COLLECTION","ACHIEVEMENTS","props","cx","cy","r"],"sourceRoot":""}