{"version":3,"sources":["reportWebVitals.js","services/firebase.js","hooks/useActivePlayer.js","hooks/useGlobalState.js","hooks/useAmIActive.js","hooks/useAmIReady.js","hooks/useAPICall.js","hooks/useGamePlayers.js","hooks/useGameState.js","hooks/useIsMyTeamActive.js","hooks/useLoading.js","hooks/useMe.js","images/tarde-divertida-logo.svg","components/Home.jsx","utils/constants.js","adapters/index.js","components/loaders/Loading.jsx","components/shared/Instruction.jsx","components/shared/Title.jsx","components/modals/CreateGameModal.jsx","components/rules/RulesCarousel.jsx","components/modals/RulesModal.jsx","components/Admin.jsx","adapters/auth.js","components/Login.jsx","utils/index.js","components/loaders/LoadingPage.jsx","components/errors/PageError.jsx","components/shared/PhaseContainer.jsx","images/avatars.svg","components/avatars/Avatar.jsx","components/avatars/AvatarEntry.jsx","services/localStorage.js","components/lobby/Join.jsx","components/shared/AdminOnly.jsx","components/lobby/Waiting.jsx","components/lobby/CloudBackground.jsx","components/lobby/Lobby.jsx","components/shared/ReadyPlayersBar.jsx","components/rules/Rules.jsx","sounds/arte-ruim-timer.mp3","components/games/arte-ruim/DrawingCanvas.jsx","components/cards/Card.jsx","components/games/arte-ruim/DrawPhaseDrawStep.jsx","components/shared/WaitingRoom.jsx","images/rodada-title.svg","components/avatars/AvatarName.jsx","components/shared/TimedButton.jsx","components/shared/RoundAnnouncement.jsx","components/shared/StepSwitcher.jsx","components/shared/AdminForceNextPhase.jsx","components/games/arte-ruim/DrawPhase.jsx","components/games/arte-ruim/CanvasSVG.jsx","components/games/arte-ruim/Ribbon.jsx","components/games/arte-ruim/EvaluationAllDrawings.jsx","components/cards/ArteRuimCard.jsx","components/games/arte-ruim/EvaluationAllCards.jsx","components/games/arte-ruim/CanvasResizer.jsx","components/games/arte-ruim/EvaluationPhase.jsx","components/games/arte-ruim/GalleryWindowCredits.jsx","components/games/arte-ruim/GalleryWindowGuesses.jsx","components/games/arte-ruim/GalleryWindowControls.jsx","components/shared/StarPoints.jsx","components/games/arte-ruim/GalleryWindowResult.jsx","components/games/arte-ruim/GalleryWindow.jsx","components/shared/RankingBoard.jsx","components/games/arte-ruim/GalleryPhase.jsx","images/game-over-title.svg","components/shared/GameOver.jsx","components/games/arte-ruim/DrawingGrade.jsx","components/games/arte-ruim/GameOverPhase.jsx","components/shared/GameInfoDrawer.jsx","components/games/arte-ruim/SessionArteRuim.jsx","components/cards/EspiaoEntreNosCard.jsx","components/games/espiao-entre-nos/List.jsx","components/games/espiao-entre-nos/Notes.jsx","components/games/espiao-entre-nos/AdminTimerControlButton.jsx","components/games/espiao-entre-nos/AssignmentPhase.jsx","components/games/espiao-entre-nos/PlayerSelect.jsx","components/games/espiao-entre-nos/LocationSelect.jsx","components/games/espiao-entre-nos/Timer.jsx","components/games/espiao-entre-nos/InvestigationPhase.jsx","components/games/espiao-entre-nos/AssessmentPhase.jsx","components/games/espiao-entre-nos/ResolutionPhase.jsx","components/games/espiao-entre-nos/FinalAssessmentPhase.jsx","components/games/espiao-entre-nos/SessionEspiaoEntreNos.jsx","components/games/onda-telepatica/Card.jsx","components/games/onda-telepatica/CardSelection.jsx","components/games/onda-telepatica/DialSidesPhase.jsx","components/games/onda-telepatica/Dial.jsx","components/games/onda-telepatica/DialClueWriting.jsx","components/games/onda-telepatica/DialCluePhase.jsx","components/games/onda-telepatica/DialGuessSelection.jsx","components/games/onda-telepatica/GuessPhase.jsx","components/games/onda-telepatica/DialRivalSelection.jsx","components/games/onda-telepatica/RivalPhase.jsx","components/games/onda-telepatica/RevealPhase.jsx","components/games/onda-telepatica/SessionOndaTelepatica.jsx","components/games/ue-so-isso/WordSelectionStep.jsx","components/games/ue-so-isso/WordSelectionPhase.jsx","components/cards/UeSoIssoCard.jsx","components/games/ue-so-isso/SuggestionStep.jsx","components/games/ue-so-isso/SuggestPhase.jsx","components/games/ue-so-isso/SuggestionCard.jsx","components/games/ue-so-isso/CompareSuggestionsStep.jsx","components/games/ue-so-isso/ComparePhase.jsx","components/games/ue-so-isso/Guess.jsx","components/games/ue-so-isso/GuessPhase.jsx","components/games/ue-so-isso/SessionUeSoIsso.jsx","components/games/index.js","components/Game.jsx","hooks/useIsGameStale.js","components/TestingZone.jsx","components/loaders/LoadingBar.jsx","components/App.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","firestore","functions","window","location","hostname","includes","useEmulator","useActivePlayer","state","players","propertyName","useState","activePlayer","setActivePlayer","useEffect","initialState","isLoading","loaders","isAuthenticated","appStartedAt","Date","now","gameId","gameName","gameMeta","me","myAvatar","isAdmin","canvasSize","cachedCanvasSize","espiaoEntreNosCache","createGlobalState","useGlobalState","setGlobalState","getGlobalState","useAmIActive","amIActive","setAmIActive","useAmIReady","amIReady","setAmIReady","ready","updatedAt","useAPICall","apiFunction","actionName","onBeforeCall","onAfterCall","onError","successMessage","errorMessage","useLoading","setLoader","useCallback","payload","a","playerName","data","message","success","notification","error","description","JSON","stringify","placement","console","useGamePlayers","useDocument","doc","snapshotListenOptions","includeMetadataChanges","snapshot","loading","log","useGameState","useIsMyTeamActive","isMyTeamActive","setIsMyTeamActive","activeTeam","team","setLoading","setLoaders","Object","values","some","v","key","value","useMe","completeMe","setCompleteMe","Home","className","src","logo","preview","alt","PUBLIC_URL","BANNERS","RULES","TAG_DICT","competitive","label","color","cooperative","traitor","timed","drawing","guessing","writing","images","discussion","AVATAR_IDS","Array","fill","map","i","index","LETTERS","AVATAR_DESCRIPTIONS_BR","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","GAME_COLLECTION","PHASES","LOBBY","DRAW","EVALUATION","GALLERY","GAME_OVER","ASSIGNMENT","INVESTIGATION","ASSESSMENT","FINAL_ASSESSMENT","RESOLUTION","DIAL_SIDES","DIAL_CLUE","GUESS","RIVAL_GUESS","REVEAL","WORD_SELECTION","SUGGEST","COMPARE","GAME_API","helloWorld","httpsCallable","initializeGame","loadGame","addPlayer","lockGame","makeMeReady","playAgain","goToNextPhase","ARTE_RUIM_API","submitDrawing","submitVoting","ESPIAO_ENTRE_NOS_API","handleAdminAction","makeAccusation","guessLocation","ONDA_TELEPATICA","submitSides","submitClue","submitGuess","submitRivalGuess","UE_SO_ISSO_API","submitWordSelectionVotes","submitSuggestions","submitValidation","confirmGuess","sendGuess","Loading","margin","clsx","Boolean","Text","defaultProps","Instruction","children","white","contained","baseClass","memo","Title","icon","level","CreateGameModal","gameInfo","history","useHistory","isVisible","setVisibility","setGameId","onCloseModal","gameCode","response","createGame","type","onClick","title","visible","onCancel","onOk","push","info","fallback","RulesCarousel","ruleClass","settings","prevArrow","DoubleLeftOutlined","nextArrow","DoubleRightOutlined","autoplay","autoplaySpeed","arrows","rules","rule","Paragraph","RulesModal","ReadOutlined","footer","Admin","Content","size","wrap","align","gameList","game","hoverable","style","width","cover","Meta","summary","min","max","recommended","tags","tag","available","signIn","email","password","signInWithEmailAndPassword","layout","labelCol","span","wrapperCol","tailLayout","offset","Login","setIsAuthenticated","setError","setEmail","setPassword","onHandleSubmit","user","uid","showIcon","name","onValuesChange","trim","autoComplete","Item","isValidGameId","length","getRandomItem","list","Math","floor","random","inNSeconds","seconds","getColorFromLetter","letter","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","getColorFromIndex","LoadingPage","PageError","PhaseContainer","phase","allowedPhase","fullScreen","Avatar","id","shape","viewBox","href","avatars","AvatarEntry","animate","propTypes","PropTypes","number","string","bool","this","store","notLoaded","appName","init","load","get","localStorage","parse","getItem","entries","forEach","item","undefined","save","setItem","Join","setMe","setMyAvatar","availableAvatars","setAvailableAvatars","tempAvatar","setTempAvatar","tempMe","setTempMe","sameGameId","setSameGameId","localStorageAvatar","setLocalStorageAvatar","usedAvatars","reduce","acc","p","avatarId","newAvailableAvatars","filter","lsAvatarId","lsMe","lsGameId","onPreviousAvatar","indexOf","newIndex","onNextAvatar","onAddPlayer","playerAvatarId","set","CaretLeftOutlined","CaretRightOutlined","onChange","e","target","placeholder","maxLength","suffix","InfoCircleOutlined","disabled","AdminOnly","AdminButton","action","RocketFilled","danger","AdminOnlyButton","Waiting","onLockGameAndStart","isLocked","numPlayers","keys","CloudBackground","classNameName","Lobby","player","ReadyPlayersBar","readyText","readyTextPlural","showNames","readyPlayers","Group","LikeFilled","join","Rules","onBeReady","onBeReadyQue","CheckCircleFilled","SmileFilled","MehFilled","RobotFilled","DrawingCanvas","lines","setLines","isDrawing","useRef","handleMouseDown","current","pos","getStage","getPointerPosition","x","y","handleMouseMove","point","lastLine","concat","splice","handleMouseUp","height","onMouseDown","onMousemove","onMouseup","onTouchStart","onTouchMove","onTouchEnd","line","points","stroke","strokeWidth","tension","lineCap","globalCompositeOperation","Card","header","randomColor","headerClassName","footerClassName","bgColor","DrawPhaseDrawStep","secretCard","onSubmitDrawing","useTimer","expiryTimestamp","autoStart","onExpire","cardId","text","WaitingRoom","instruction","AvatarName","withDescription","uppercase","TimedButton","duration","showTimer","props","timeClass","Team","members","score","RoundAnnouncement","round","onPressButton","buttonText","time","teams","rodadaTitle","StepSwitcher","step","conditions","AdminForceNextPhase","onGoToNextPhase","FireFilled","DrawPhase","setStep","setSecretCard","useSound","arteRuimTimer","volume","play","currentCard","CanvasSVG","konvaLines","paths","lineArr","path","xmlns","overflow","d","strokeLinecap","strokeLinejoin","strokeMiterlimit","Ribbon","cardEntryId","split","EvaluationAllDrawings","drawings","activeItem","onActivateItem","votes","liButtonBaseClass","drawingEntry","canvasEntryId","isActive","ArteRuimCard","WarningOutlined","EvaluationAllCards","cards","cardEntry","isUsed","role","CanvasResizer","setCanvasSize","defaultValue","prepareVotes","drawingEntryId","drawingId","EvaluationPhase","setVotes","setActiveItem","onSubmitVoting","entryId","startsWith","prevVotes","CloudUploadOutlined","GalleryWindowCredits","artist","artistAvatarId","GalleryWindowGuesses","playersSay","playersNames","card","find","MessageFilled","GalleryWindowControls","galleryLength","activeIndex","setActiveIndex","isRunning","pause","resume","s","abs","StepBackwardOutlined","PauseOutlined","PlayCircleOutlined","StepForwardOutlined","TrophyOutlined","StarPoints","quantity","keyPrefix","starsArray","from","_","StarFilled","GalleryWindowResult","correctAnswerId","correctAnswerText","playersPoints","correctGuesses","CrownFilled","DeleteFilled","GalleryWindow","correctAnswer","correctAnswerLevel","RankingBoard","ranking","displayStep","setDisplayStep","sortedRanking","setSortedRanking","positions","setPositions","maxPoints","newScore","sort","b","previousScore","property","lastPosition","lastPoints","entry","gainedPoints","GalleryPhase","setCachedCanvasSize","innerWidth","onGoToNextRound","gallery","pointsToVictory","PictureOutlined","GameOver","onPlayAgain","gameOverTitle","winners","winner","strokeColor","percent","victory","onConfirm","okText","cancelText","grades","minValues","DrawingGrade","grade","findIndex","GameOverPhase","successRate","SectionMe","isTeamGame","count","SectionMeta","roundsToEndGame","groupScore","isNaN","backgroundColor","SectionTeams","SectionTeamPlayers","sortedPlayers","useMemo","memberName","SectionRankedPlayers","rankedPlayers","GameInfoDrawer","setVisible","offsetTop","closable","onClose","SessionArteRuim","setInfo","ActiveComponent","getActiveComponent","EspiaoEntreNosCard","QuestionCircleFilled","List","headerIcon","items","column","cache","setCache","ghost","ClearOutlined","newState","onCross","Notes","cols","rows","AdminTimerControlButton","onControlStopwatch","AssignmentPhase","isSpy","EnvironmentOutlined","possibleLocations","PlayerSelect","playersList","onSend","selectedPlayer","setSelectedPlayer","playersWithoutMe","Option","vote","LoadingOutlined","LocationSelect","locations","selectedLocation","setSelectedLocation","guess","Timer","timeRemaining","onAdminControl","minutes","InvestigationPhase","onMakeAccusation","onGuessLocation","outcome","warning","votedYes","usedAccusation","AimOutlined","AssessmentPhase","amITheTarget","amITheAccuser","submittedAction","setSubmitAction","accuser","ResolutionPhase","missionOutcomeText","spyWin","wasABadVoting","resolutionType","currentSpy","currentLocation","FinalAssessmentPhase","setAccuser","setTarget","playerOrder","SessionEspiaoEntreNos","getColorModifier","left","right","leftColor","rightColor","cardSideClass","ArrowLeftOutlined","MinusOutlined","ArrowRightOutlined","cardName","CardSelection","onSendChosenSide","DialSidesPhase","psychic","amIThePsychic","getBracketClass","showNeedle","needle","showTarget","baseBracketClass","modifier","Dial","rivalGuess","rivalTeam","showPoints","basePointsClass","baseRivalClass","transform","textAnchor","getHint","DialClueWriting","onSendClue","clue","setClue","toUpperCase","DialCluePhase","DialGuessSelection","teamController","amITheController","onSendGuess","setNeedle","GuessPhase","controller","DialRivalSelection","rivalController","amITheRivalController","onSendRivalGuess","BackwardOutlined","ForwardOutlined","RivalPhase","RevealPhase","activeTeamMessageType","getMessageType","pointsBreakdown","got","catchup","getResultInstructionLine","shouldCatchup","getRivalResultInstructionLine","rival","SessionOndaTelepatica","WordSelectionStep","words","onSendSelectedWords","guesser","selectedWords","setSelectedWords","selectedWordsArray","noSelection","word","wordId","randomSelection","WordSelectionPhase","amITheGuesser","previousSecretWord","nextGuesser","status","UeSoIssoCard","SuggestionStep","onSendSuggestions","secretWord","suggestionsNumber","suggestions","setSuggestions","onChangeInput","indexStr","Number","suggestionsValues","SuggestPhase","SuggestionCard","suggestion","invalid","CloseOutlined","CompareSuggestionsStep","onValidateSuggestions","myRecommendation","setMyRecommendation","amITheNextGuesser","ExclamationCircleOutlined","suggestionEntry","notAllowed","arr","newArr","onSetValidation","validSuggestions","ComparePhase","Guess","onSubmitGuess","setGuess","QuestionCircleOutlined","CheckOutlined","SessionUeSoIsso","games","ArteRuim","EspiaoEntreNos","OndaTelepatica","UeSoIsso","Game","setGameName","setGameMeta","isPageLoading","setPageLoading","isGameStale","gameCreatedAt","setGameStale","useIsGameStale","createdAt","urlGameId","pathname","substring","getGameIdFromURL","listen","getGameIdFromLocation","meta","loadGameSession","warn","TestingZone","Flaviane","Kavis","Stephanie","table","LoadingBar","PrivateRoute","Component","component","authenticated","rest","render","to","PublicRoute","fromPath","App","setIsLoading","setIsAdmin","onAuthStateChanged","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"oLAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,kGCQdQ,IAASC,cAVc,CACrBC,OAAQC,0CACRC,WAAYD,+BACZE,YAAaF,sCACbG,UAAWH,eACXI,cAAeJ,2BACfK,kBAAmBL,eACnBM,MAAON,8CAMF,IAAMO,EAAOV,IAASU,OAChBC,EAAYX,IAASW,YACrBC,EAAYZ,IAASY,YAE9BC,OAAOC,SAASC,SAASC,SAAS,eACpCL,EAAUM,YAAY,YAAa,MACnCL,EAAUK,YAAY,YAAa,OAGtBjB,EAAf,ECzBO,SAASkB,EAAgBC,EAAOC,GAAyC,IAAhCC,EAA+B,uDAAhB,eAAgB,EACrCC,mBAAS,IAD4B,mBACtEC,EADsE,KACxDC,EADwD,KAS7E,OALAC,qBAAU,WACR,IAAMF,EAAY,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAQE,GAC7BG,EAAe,OAACJ,QAAD,IAACA,OAAD,EAACA,EAAUG,MACzB,CAACH,EAASC,EAAcF,IAEpBI,E,aCTHG,EAAe,CACnBC,WAAW,EACXC,SAAS,EACTC,iBAAiB,EACjBC,aAAcC,KAAKC,MAEnBC,OAAQ,KACRC,SAAU,KACVC,SAAU,GACVC,GAAI,GACJC,SAAU,GACVC,SAAS,EAETC,WAAY,IACZC,iBAAkB,IAElBC,oBAAqB,I,EAGoCC,YAAkBhB,GAArEiB,E,EAAAA,eAIOA,G,EAJSC,e,EAAgBC,eAIzBF,GCtBR,SAASG,EAAa3B,GAAuC,IAAhCE,EAA+B,uDAAhB,eAAgB,EACpDsB,EAAe,MADqC,mBAC1DP,EAD0D,OAE/Bd,oBAAS,GAFsB,mBAE1DyB,EAF0D,KAE/CC,EAF+C,KASjE,OAJAvB,qBAAU,WACRuB,GAAkB,OAAL7B,QAAK,IAALA,OAAA,EAAAA,EAAQE,MAAkBe,KACtC,CAACjB,EAAOiB,EAAIf,IAER0B,ECTF,SAASE,EAAY7B,GAAsB,IAAbD,EAAY,uDAAJ,GAAI,EAClCwB,EAAe,MADmB,mBACxCP,EADwC,OAEfd,oBAAS,GAFM,mBAExC4B,EAFwC,KAE9BC,EAF8B,KAyB/C,OArBA1B,qBAAU,WAAO,IAAD,GAEY,IAAtBL,EAAQgB,GAAIgB,OAKZ,OAACjC,QAAD,IAACA,OAAD,EAACA,EAAOkC,aAMR,UAAAjC,EAAQgB,UAAR,eAAaiB,YAAb,OAAyBlC,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAOkC,WAClCF,GAAY,GANZA,GAAY,GALZA,GAAY,KAgBb,CAACf,EAAIhB,EAAL,OAAcD,QAAd,IAAcA,OAAd,EAAcA,EAAOkC,YAEjBH,E,sCCZF,SAASI,EAAT,GAQH,IAPFC,EAOC,EAPDA,YAOC,IANDC,kBAMC,MANY,aAMZ,MALDC,oBAKC,MALc,aAKd,MAJDC,mBAIC,MAJa,aAIb,MAHDC,eAGC,MAHS,aAGT,MAFDC,sBAEC,MAFgB,0BAEhB,MADDC,oBACC,MADc,sBACd,IACqBC,IAAbC,EADR,sBAEgBpB,EAAe,UAAzBV,EAFN,sBAGkBU,EAAe,YAA3BT,EAHN,sBAIYS,EAAe,MAArBP,EAJN,oBAiDD,OA3CkB4B,sBAAW,uCAC3B,WAAOC,GAAP,SAAAC,EAAA,sEAEIH,EAAUP,GAAY,GAF1B,SAGUC,IAHV,uBAI2BF,EAAY,aACjCtB,SACAC,WACAiC,WAAY/B,GACT6B,IART,cAWiBG,MACXC,IAAQC,QAAQV,GAZtB,kDAeIW,IAAaC,MAAM,CACjBH,QAASR,EACTY,YAAaC,KAAKC,UAAU,KAAEN,SAC9BO,UAAW,eAEbC,QAAQL,MAAR,MACAb,IArBJ,mCAuBUD,IAvBV,eAwBIK,EAAUP,GAAY,GAxB1B,6EAD2B,sDA4B3B,CACEA,EACAD,EACAM,EACA5B,EACAC,EACAE,EACA2B,EACAH,EACAH,EACAC,EACAC,I,aChEC,SAASmB,EAAe7C,EAAQC,GAAW,IAAD,IACZ6C,YAAYpE,EAAUqE,IAAV,UAAiB9C,EAAjB,YAA6BD,EAA7B,qBAAwD,CACrGgD,sBAAuB,CAAEC,wBAAwB,KAFJ,mBACxCC,EADwC,KAC9BC,EAD8B,KACrBZ,EADqB,KAkB/C,OAbIA,IACFD,IAAaC,MAAM,CACjBH,QAAS,iEACTI,YAAaC,KAAKC,UAAUH,GAC5BI,UAAW,eAEbC,QAAQL,MAAMA,IAGZY,GACFP,QAAQQ,IAAI,0BAA2B,gBAGzC,iBAAOF,QAAP,IAAOA,OAAP,EAAOA,EAAUf,cAAjB,QAA2B,GClBtB,SAASkB,EAAarD,EAAQC,GAAW,IAAD,IACV6C,YAAYpE,EAAUqE,IAAV,UAAiB9C,EAAjB,YAA6BD,EAA7B,mBAAsD,CACnGgD,sBAAuB,CAAEC,wBAAwB,KAFN,mBACtCC,EADsC,KAC5BC,EAD4B,KACnBZ,EADmB,KAkB7C,OAbIA,IACFD,IAAaC,MAAM,CACjBH,QAAS,oEACTI,YAAaC,KAAKC,UAAUH,GAC5BI,UAAW,eAEbC,QAAQL,MAAMA,IAGZY,GACFP,QAAQQ,IAAI,wBAAyB,gBAGvC,iBAAOF,QAAP,IAAOA,OAAP,EAAOA,EAAUf,cAAjB,QAA2B,GCpBtB,SAASmB,EAAkBpE,EAAOC,GAAU,IAAD,EACnCuB,EAAe,MAArBP,EADyC,sBAEJd,oBAAS,GAFL,mBAEzCkE,EAFyC,KAEzBC,EAFyB,KAShD,OAJAhE,qBAAU,WAAO,IAAD,EACdgE,GAAuB,OAALtE,QAAK,IAALA,OAAA,EAAAA,EAAOuE,eAAP,OAAsBtE,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAUgB,UAAhC,aAAsB,EAAeuD,SACtD,CAACxE,EAAOiB,EAAIhB,IAERoE,E,YCJF,SAAS1B,IAAc,IAAD,EACKnB,EAAe,aADpB,mBACpBhB,EADoB,KACTiE,EADS,OAEGjD,EAAe,WAFlB,mBAEpBf,EAFoB,KAEXiE,EAFW,KAI3BpE,qBAAU,WACRmE,EAAWE,OAAOC,OAAOnE,GAASoE,MAAK,SAACC,GAAD,OAAOA,QAC7C,CAACrE,EAASgE,IASb,MAAO,CAACjE,EAPU,SAACuE,EAAKC,GACtBN,GAAW,SAACE,GAAD,mBAAC,eACPA,GADM,kBAERG,EAAMC,QAImBvE,GCpBzB,SAASwE,EAAMhF,GAAU,IAAD,EAChBuB,EAAe,MAArBP,EADsB,sBAEOd,mBAAS,IAFhB,mBAEtB+E,EAFsB,KAEVC,EAFU,KAS7B,OAJA7E,qBAAU,WACR6E,EAAa,OAAClF,QAAD,IAACA,OAAD,EAACA,EAAUgB,MACvB,CAAChB,EAASgB,IAENiE,E,aCZM,MAA0B,iD,OCqC1BE,MAhCf,WACE,OACE,eAAC,IAAD,CAAQC,UAAU,OAAlB,UACE,qBAAKA,UAAU,uBAAf,SACE,cAAC,IAAD,CAAOC,IAAKC,EAAMF,UAAU,aAAaG,SAAS,EAAOC,IAAI,2BAE/D,sBAAKJ,UAAU,mBAAf,UACE,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,gC,qDC5BKK,EAAa,CACxBC,QAAQ,GAAD,OAAK3G,kBAAL,oBACP4G,MAAM,GAAD,OAAK5G,kBAAL,mBAMM6G,EAAW,CACtBC,YAAa,CACXC,MAAO,cACPC,MAAO,OAETC,YAAa,CACXF,MAAO,cACPC,MAAO,SAETE,QAAS,CACPH,MAAO,UACPC,MAAO,WAET,YAAa,CACXD,MAAO,SACPC,MAAO,WAET,aAAc,CACZD,MAAO,MACPC,MAAO,WAETG,MAAO,CACLJ,MAAO,QACPC,MAAO,UAETI,QAAS,CACPL,MAAO,UACPC,MAAO,QAETK,SAAU,CACRN,MAAO,YACPC,MAAO,QAETM,QAAS,CACPP,MAAO,WACPC,MAAO,QAETO,OAAQ,CACNR,MAAO,UACPC,MAAO,UAETQ,WAAY,CACVT,MAAO,oBACPC,MAAO,aAOES,EAAa,IAAIC,MAAM,IAAIC,KAAK,GAAGC,KAAI,SAACC,EAAGC,GAAJ,OAAcD,EAAIC,KAEzDC,EAAU,6BAEVC,EAAyB,CACpCC,EAAG,YACHC,EAAG,cACHC,EAAG,WACHC,EAAG,SACHC,EAAG,eACHC,EAAG,aACHC,EAAG,YACHC,EAAG,UACHC,EAAG,WACHC,EAAG,eACHC,GAAI,aACJC,GAAI,WACJC,GAAI,kBACJC,GAAI,iBACJC,GAAI,SACJC,GAAI,UACJC,GAAI,aACJC,GAAI,WACJC,GAAI,YACJC,GAAI,SACJC,GAAI,WACJC,GAAI,WACJC,GAAI,cACJC,GAAI,YACJC,GAAI,WAMOC,GACA,YADAA,GAEO,mBAFPA,GAGM,kBAHNA,GAIC,aAMDC,GACA,CACTC,MAAO,QACPhD,MAAO,QACPiD,KAAM,OACNC,WAAY,aACZC,QAAS,UACTC,UAAW,aAPFL,GASO,CAChBC,MAAO,QACPhD,MAAO,QACPqD,WAAY,aACZC,cAAe,gBACfC,WAAY,aACZC,iBAAkB,mBAClBC,WAAY,aACZL,UAAW,aAjBFL,GAmBM,CACfC,MAAO,QACPhD,MAAO,QACP0D,WAAY,aACZC,UAAW,YACXC,MAAO,QACPC,YAAa,cACbC,OAAQ,SACRV,UAAW,aA3BFL,GA6BC,CACVC,MAAO,QACPhD,MAAO,QACP+D,eAAgB,iBAChBC,QAAS,UACTC,QAAS,UACTL,MAAO,QACPR,UAAW,a,mBC3IFc,GAAW,CACtBC,WAAYtK,EAAUuK,cAAc,cACpCC,eAAgBxK,EAAUuK,cAAc,kBACxCE,SAAUzK,EAAUuK,cAAc,YAClCG,UAAW1K,EAAUuK,cAAc,aACnCI,SAAU3K,EAAUuK,cAAc,YAClCK,YAAa5K,EAAUuK,cAAc,eACrCM,UAAW7K,EAAUuK,cAAc,aACnCO,cAAe9K,EAAUuK,cAAc,kBAG5BQ,GAAgB,CAC3BC,cAAehL,EAAUuK,cAAc,yBACvCU,aAAcjL,EAAUuK,cAAc,yBAG3BW,GAAuB,CAClCC,kBAAmBnL,EAAUuK,cAAc,mCAC3Ca,eAAgBpL,EAAUuK,cAAc,gCACxCc,cAAerL,EAAUuK,cAAc,+BACvCU,aAAcjL,EAAUuK,cAAc,+BAG3Be,GAAkB,CAC7BC,YAAavL,EAAUuK,cAAc,6BACrCiB,WAAYxL,EAAUuK,cAAc,4BACpCkB,YAAazL,EAAUuK,cAAc,6BACrCmB,iBAAkB1L,EAAUuK,cAAc,mCAG/BoB,GAAiB,CAC5BC,yBAA0B5L,EAAUuK,cAAc,oCAClDsB,kBAAmB7L,EAAUuK,cAAc,6BAC3CuB,iBAAkB9L,EAAUuK,cAAc,4BAC1CwB,aAAc/L,EAAUuK,cAAc,wBACtCyB,UAAWhM,EAAUuK,cAAc,sB,mBChCrC,SAAS0B,GAAT,GAAuC,IAApBxI,EAAmB,EAAnBA,QAASyI,EAAU,EAAVA,OAC1B,OACE,eAAC,IAAD,CAAOtG,UAAWuG,aAAK,UAAWD,GAAU,mBAA5C,UACE,cAAC,KAAD,IACCE,QAAQ3I,IAAY,cAAC,IAAW4I,KAAZ,UAAkB5I,OAU7CwI,GAAQK,aAAe,CACrBJ,QAAQ,GAGKD,UClBf,SAASM,GAAT,GAAiE,IAA1CC,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,MAAO7G,EAAwB,EAAxBA,UAAW8G,EAAa,EAAbA,UAC3CC,EAAY,cAElB,OACE,cAAC,IAAWN,KAAZ,CACEzG,UAAWuG,aACTQ,EACAD,GAAS,UAAOC,EAAP,eACTF,GAAK,UAAOE,EAAP,WACL/G,GALJ,SAQG4G,IAWQI,sBAAKL,ICvBpB,SAASM,GAAT,GAA6D,IAA5CL,EAA2C,EAA3CA,SAAUC,EAAiC,EAAjCA,MAAOK,EAA0B,EAA1BA,KAAMlH,EAAoB,EAApBA,UAAWmH,EAAS,EAATA,MACjD,OACE,eAAC,IAAWF,MAAZ,CAAkBE,MAAOA,EAAOnH,UAAWuG,aAAK,QAASM,GAAS,eAAgB7G,GAAlF,UACGwG,QAAQU,IAASA,EACjBN,KAaPK,GAAMP,aAAe,CACnB1G,UAAW,GACXmH,MAAO,GAGMH,sBAAKC,IC+ELG,OA3Ff,YAAwC,IAAbC,EAAY,EAAZA,SACnBC,EAAUC,cADqB,EAEfjK,IAAbC,EAF4B,sBAGFzC,oBAAS,GAHP,mBAG9B0M,EAH8B,KAGnBC,EAHmB,OAIL3M,oBAAS,GAJJ,mBAI9BK,EAJ8B,KAInBiE,EAJmB,OAKTtE,mBAAS,MALA,mBAK9BW,EAL8B,KAKtBiM,EALsB,KAO/BC,EAAenK,uBAAY,WAC/BiK,GAAc,KACb,IAqCH,OAnCAxM,qBAAU,WAAM,4CACd,4BAAAyC,EAAA,sEAEIH,EAAU,UAAU,GAFxB,SAG2BkH,GAASG,eAAe,CAAEgD,SAAUP,EAASO,WAHxE,QAGUC,EAHV,QAIiBjK,KAAKnC,QAChBiM,EAAUG,EAASjK,KAAKnC,QAL9B,gDAQIsC,IAAaC,MAAM,CACjBH,QAAS,uDACTI,YAAaC,KAAKC,UAAU,KAAEN,SAC9BO,UAAW,eAEbC,QAAQL,MAAR,MACAyJ,GAAc,GAdlB,yBAgBIrI,GAAW,GACX7B,EAAU,UAAU,GAjBxB,6EADc,sBAsBViK,GAtBW,WAAD,wBAuBZM,KAED,CAACN,IAWF,eAAC,WAAD,WACE,cAAC,KAAD,CAAQO,KAAK,UAAUC,QAAS,kBAAMP,GAAc,IAApD,wBAGCD,GACC,cAAC,KAAD,CACES,MAAK,wBAAmBZ,EAASY,OACjCC,QAASV,EACTW,SAAUR,EACVS,KAlBc,WAChB3M,EACF6L,EAAQe,KAAR,WAAiB5M,IAEjBoC,IAAQyK,KAAK,mDAUX,SAME,eAAC,WAAD,WACE,cAAC,IAAD,CACElI,IAAKiH,EAASY,MACdhI,IAAG,UAAKI,EAAWC,QAAhB,sBAAqC+G,EAAS3L,SAA9C,QACH6M,SAAQ,UAAKlI,EAAWC,QAAhB,8BAGTnF,EACC,eAAC,WAAD,WACE,cAAC,GAAD,6CACA,cAAC,GAAD,CAAS0C,QAAQ,aAAayI,QAAM,OAGtC,gCACE,eAAC,GAAD,CAAOtG,UAAU,SAAjB,gCAA8CvE,KAC9C,cAAC,GAAD,sF,wCChFhB,SAAS+M,GAAT,GAAwD,IAA/BF,EAA8B,EAA9BA,KAAMtI,EAAwB,EAAxBA,UAAWyI,EAAa,EAAbA,UAClCC,EAAW,CACfC,UACE,cAAC,KAAD,UACE,cAACC,GAAA,EAAD,CAAoB5I,UAAU,oDAGlC6I,UACE,cAAC,KAAD,UACE,cAACC,GAAA,EAAD,CAAqB9I,UAAU,sDAKrC,OACE,cAAC,KAAD,yBACEA,UAAWuG,aAAK,iBAAkBvG,GAClC+I,UAAQ,EACRC,cAAe,KACfC,QAAM,GACFP,GALN,aAOGJ,EAAKY,MAAM3H,KAAI,SAAC4H,EAAM1H,GAAP,OACd,sBAAKzB,UAAWuG,aAAK,uBAAwBkC,GAA7C,UACE,sBAAMzI,UAAU,8BAAhB,SAA+CyB,EAAQ,IAEvD,cAAC,IAAD,CACEzB,UAAU,wBACVC,IACY,IAAVwB,EAAA,UACOpB,EAAWC,QADlB,sBACuCgI,EAAK5M,SAD5C,kBAEO2E,EAAWE,MAFlB,qBAEoC+H,EAAK5M,SAFzC,YAEqD+F,EAFrD,QAIF8G,SAAQ,UAAKlI,EAAWE,MAAhB,2BACRH,IAAK+I,IAEP,cAAC,IAAWC,UAAZ,CAAsBpJ,UAAU,4BAAhC,SAA6DmJ,MAbDA,SA8BtEX,GAAc9B,aAAe,CAC3B1G,UAAW,GACXyI,UAAW,IAGED,UCnBAa,OAvCf,YAAmC,IAAbhC,EAAY,EAAZA,SAAY,EACGvM,oBAAS,GADZ,mBACzB0M,EADyB,KACdC,EADc,KAG1BE,EAAe,WACnBF,GAAc,IAGhB,OACE,eAAC,WAAD,WACE,cAAC,KAAD,CAAQM,KAAK,UAAUC,QAAS,kBAAMP,GAAc,IAAOP,KAAM,cAACoC,GAAA,EAAD,IAAjE,oBAGC9B,GACC,cAAC,KAAD,CACES,MAAK,iBAAYZ,EAASY,OAC1BC,QAASV,EACTW,SAAUR,EACV3H,UAAU,cACVuJ,OAAQ,CACN,cAAC,KAAD,CAAoBvB,QAASL,EAA7B,mBAAY,UANhB,SAWE,cAAC,GAAD,CAAeW,KAAMjB,UCsBhBmC,OA5Cf,WACE,OACE,eAAC,IAAOC,QAAR,CAAgBzJ,UAAU,YAA1B,UACE,cAAC,IAAWiH,MAAZ,wBACA,cAAC,IAAWmC,UAAZ,gDAEA,cAAC,IAAD,CAAOM,KAAM,CAAC,EAAG,IAAKC,MAAI,EAACC,MAAM,QAAjC,SACGtK,OAAOC,OAAOsK,GAAUtI,KAAI,SAACuI,GAAD,OAC3B,eAAC,IAAD,CAEEC,WAAS,EACTC,MAAO,CAAEC,MAAO,KAChBC,MACE,cAAC,IAAD,CACE9J,IAAK0J,EAAK7B,MACVhI,IAAG,UAAKI,EAAWC,QAAhB,sBAAqCwJ,EAAKpO,SAA1C,QACH6M,SAAQ,UAAKlI,EAAWC,QAAhB,8BARd,UAYE,cAAC,IAAK6J,KAAN,CAAWlC,MAAO6B,EAAK7B,MAAOhK,YAAa6L,EAAKM,UAChD,cAAC,IAAD,IACA,cAAC,IAAKD,KAAN,CAAWlM,YAAW,eAAU6L,EAAKO,IAAf,YAAsBP,EAAKQ,IAA3B,gBACtB,cAAC,IAAKH,KAAN,CAAWlM,YAAW,gCAA2B6L,EAAKS,eACtD,cAAC,IAAD,IACA,cAAC,IAAD,CAAOZ,MAAI,EAACD,KAAM,CAAC,EAAG,GAAtB,SACGI,EAAKU,KAAKjJ,KAAI,SAACkJ,GAAD,eACb,cAAC,IAAD,CAAqC9J,MAAK,UAAEH,EAASiK,UAAX,aAAE,EAAe9J,MAA3D,mBACGH,EAASiK,UADZ,aACG,EAAe/J,OADlB,UAAaoJ,EAAKlC,SAAlB,YAA8B6C,SAKlC,cAAC,IAAD,IACA,eAAC,IAAD,WACE,cAAC,GAAD,CAAYpD,SAAUyC,IACrBtD,QAAQsD,EAAKY,YAAc,cAAC,GAAD,CAAiBrD,SAAUyC,SA1BpDA,EAAKpO,mB,8BCFf,SAASiP,GAAOC,EAAOC,GAC5B,OAAO3Q,EAAK4Q,2BAA2BF,EAAOC,GCPhD,IAAME,GAAS,CACbC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAEhBE,GAAa,CACjBD,WAAY,CAAEE,OAAQ,EAAGH,KAAM,IAoElBI,OAjEf,WACE,IAAM/D,EAAUC,cADD,EAEgBpL,EAAe,mBAArCmP,EAFM,sBAIWxQ,mBAAS,MAJpB,mBAIRkD,EAJQ,KAIDuN,EAJC,OAKWzQ,mBAAS,IALpB,mBAKR8P,EALQ,KAKDY,EALC,OAMiB1Q,mBAAS,IAN1B,mBAMR+P,EANQ,KAMEY,EANF,KAiBTC,EAAc,uCAAG,8BAAAhO,EAAA,6DACrB6N,EAAS,IADY,kBAGIZ,GAAOC,EAAOC,GAHlB,QAInB,QADMhD,EAHa,cAInB,IAAIA,GAAJ,UAAIA,EAAU8D,YAAd,aAAI,EAAgBC,OAClBN,GAAmB,GACnBhE,EAAQe,KAAK,WANI,gDASnBkD,EAAS,KAAM1N,SATI,yDAAH,qDAapB,OACE,cAAC,IAAO4L,QAAR,CAAgBzJ,UAAU,QAA1B,SACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,cAAf,SACE,cAAC,IAAD,CAAOC,IAAKC,EAAMC,SAAS,MAG5BqG,QAAQxI,IACP,cAAC,KAAD,CAAOH,QAAQ,QAAQI,YAAaD,EAAO+J,KAAK,QAAQ8D,UAAQ,EAAC7L,UAAU,uBAE7E,eAAC,KAAD,2BACM+K,IADN,IAEEA,OAAO,aACPe,KAAK,UACLC,eApCe,SAACnO,GAClBA,EAAKgN,OACPY,EAAS5N,EAAKgN,MAAMoB,QAElBpO,EAAKiN,UACPY,EAAY7N,EAAKiN,SAASmB,SAgCtBhM,UAAU,cACViM,aAAa,MANf,UAQE,cAAC,KAAKC,KAAN,2BAAef,IAAf,IAA2BzK,MAAM,SAASoL,KAAK,QAAQ9L,UAAU,mBAAjE,SACE,cAAC,KAAD,CAAO+H,KAAK,aAEd,cAAC,KAAKmE,KAAN,2BAAef,IAAf,IAA2BzK,MAAM,WAAWoL,KAAK,WAAW9L,UAAU,mBAAtE,SACE,cAAC,KAAD,CAAO+H,KAAK,gBAEd,qBAAK/H,UAAU,qBAAf,SACE,cAAC,KAAD,CAAQ+H,KAAK,UAAUC,QAAS0D,EAAhC,+BClDCS,GAAgB,SAAC1Q,GAC5B,OAAOA,GAA4B,IAAlBA,EAAO2Q,QAQbC,GAAgB,SAACC,GAC5B,OAAOA,EAAKC,KAAKC,MAAMD,KAAKE,SAAWH,EAAKF,UAQjCM,GAAa,SAACC,GACzB,OAAOpR,KAAKC,MAAkB,IAAVmR,GAQTC,GAAqB,SAACC,GAAY,IAAD,EAC5C,iBACE,CACEC,EAAG,MACHC,EAAG,OACHC,EAAG,QACHC,EAAG,SACHC,EAAG,OACHC,EAAG,SACHC,EAAG,OACHC,EAAG,SACHC,EAAG,SACHC,EAAG,OACHC,EAAG,cACHC,EAAG,QACHC,EAAG,WACHC,EAAG,SACHC,EAAG,SACHC,EAAG,QAGHC,EAAG,MACHC,EAAG,OACHC,EAAG,QACHC,EAAG,SACHC,EAAG,OACHC,EAAG,SACHC,EAAG,OACHC,EAAG,OACHC,EAAG,SACHC,EAAG,UACH1B,UA9BJ,QA8Be,QASJ2B,GAAoB,SAAC3B,GAAY,IAAD,EAC3C,iBACE,CACE,MACA,OACA,QACA,SACA,OACA,SACA,OACA,SACA,SACA,OACA,cACA,QACA,WACA,SACA,SACA,SACAA,UAlBJ,QAkBe,QC1GjB,SAAS4B,GAAT,GAAmC,IAAZ5Q,EAAW,EAAXA,QACrB,OACE,eAAC,IAAO4L,QAAR,CAAgBzJ,UAAU,eAA1B,UACE,cAAC,KAAD,CAAM0J,KAAK,UACX,cAAC,IAAWjD,KAAZ,UAAkB5I,OASxB4Q,GAAY/H,aAAe,CACzB7I,QAAS,iBAGI4Q,UCjBf,SAASC,GAAT,GAA8C,IAAzB7Q,EAAwB,EAAxBA,QAASI,EAAe,EAAfA,YAC5B,OACE,qBAAK+B,UAAU,8BAAf,SACE,cAAC,KAAD,CAAOnC,QAASA,EAASI,YAAaA,EAAa8J,KAAK,QAAQ8D,UAAQ,MAU9E6C,GAAUhI,aAAe,CACvB7I,QAAS,mCACTI,YAAa,qDAGAyQ,UCTf,SAASC,GAAT,GAAgG,IAAtErG,EAAqE,EAArEA,KAAMsG,EAA+D,EAA/DA,MAAOC,EAAwD,EAAxDA,aAAcjI,EAA0C,EAA1CA,SAAU5G,EAAgC,EAAhCA,UAAW8O,EAAqB,EAArBA,WAAYjI,EAAS,EAATA,MACpF,KAAI,OAACyB,QAAD,IAACA,OAAD,EAACA,EAAM5M,WAAYmT,IAAiBD,EACtC,OAAO,cAAC,GAAD,IAGT,IAAKA,EACH,OAAO,cAAC,GAAD,CAAW/Q,QAAQ,mCAA6BI,YAAY,0CAGrE,IAAM8I,EAAY,kBAElB,OACE,eAAC,IAAO0C,QAAR,CACEzJ,UAAWuG,aACTQ,EACA+H,GAAU,UAAO/H,EAAP,iBACVF,GAAK,UAAOE,EAAP,WACL/G,GALJ,UAQE,sBAAMA,UAAS,UAAK+G,EAAL,WAAf,SAAyCuB,EAAKL,QAC7CrB,KAeP+H,GAAejI,aAAe,CAC5BmI,aAAc,GACd7O,UAAW,GACX8O,YAAY,EACZF,MAAO,GACP/H,OAAO,GAGMG,sBAAK2H,I,8BC1DL,OAA0B,oCCQzC,SAASI,GAAT,GAAgG,IAAD,IAA7EC,UAA6E,MAAxE,GAAwE,MAApEtF,YAAoE,MAA7D,QAA6D,MAApDuF,aAAoD,MAA5C,SAA4C,MAAlC7O,WAAkC,MAA5B,SAA4B,MAAlBJ,iBAAkB,MAAN,GAAM,EAC7F,OACE,cAAC,KAAD,CACEA,UAAWuG,aAAK,SAAUvG,GAC1B0J,KAAMA,EACNuF,MAAOA,EACP7O,IAAKA,EACLH,IACE,qBAAKiP,QAAQ,cAAb,SACE,qBAAKC,KAAMC,GAAO,kBAAcJ,SAe3BhI,sBAAK+H,IC1BpB,SAASM,GAAT,GAAqF,IAAD,IAA7DL,UAA6D,MAAxD,GAAwD,MAApDlD,YAAoD,MAA7C,SAA6C,MAAnCwD,eAAmC,aAAlBtP,iBAAkB,MAAN,GAAM,EAClF,OACE,sBAAKA,UAAWuG,aAAK,eAAgB+I,GAAW,yBAA0BtP,GAA1E,UACE,cAAC,GAAD,CAAQgP,GAAIA,EAAIhP,UAAU,yBAC1B,qBAAKA,UAAU,qBAAf,SAAqC8L,OAK3CiD,GAAOQ,UAAY,CACjBP,GAAIQ,KAAUC,OACd3D,KAAM0D,KAAUE,OAChBJ,QAASE,KAAUG,KACnB3P,UAAWwP,KAAUE,QAGR1I,sBAAKqI,I,2DCsDL,O,WA3Eb,aAAe,qBACbO,KAAKC,MAAQ,GACbD,KAAKE,WAAY,EACjBF,KAAKG,QAAU,kBAEfH,KAAKI,O,yCAGP,WAEE,OADAJ,KAAKK,OACEL,KAAKM,Q,iBAGd,SAAIxQ,GAKF,OAJIkQ,KAAKE,WACPF,KAAKK,OAGHvQ,EACKkQ,KAAKC,MAAMnQ,IAAQ,KAErBkQ,KAAKC,Q,kBAGd,WACE,IAAMM,EAAejS,KAAKkS,MAAM/V,OAAO8V,aAAaE,QAAQT,KAAKG,UAC7DI,IACFP,KAAKC,MAAQM,EACbP,KAAKE,WAAY,K,iBAMrB,SAAInQ,GACEiQ,KAAKE,WACPF,KAAKK,OAGP,IAAMlI,SAAcpI,EACP,WAAToI,GAA8B,WAATA,GAMJ,kBAAVpI,EACTiQ,KAAKC,MAAMlQ,IAAUiQ,KAAKC,MAAMlQ,IAGhCL,OAAOgR,QAAQ3Q,GAAO4Q,SAAQ,YAAkB,IAAD,mBAAf7Q,EAAe,KAAV8Q,EAAU,KAChC,OAATA,QAA0BC,IAATD,UACZ7Q,EAAMD,MAIjBkQ,KAAKC,MAAL,2BACKD,KAAKC,OACLlQ,IAIPiQ,KAAKc,QArBHrS,QAAQL,MAAM,mE,kBAwBlB,WACM4R,KAAKE,WACPF,KAAKK,OAGP5V,OAAO8V,aAAaQ,QAAQf,KAAKG,QAAS7R,KAAKC,UAAUyR,KAAKC,QAC9DD,KAAKK,W,MCqGMW,OA7Jf,YAAkC,IAAlBhW,EAAiB,EAAjBA,QAAS0N,EAAQ,EAARA,KAAQ,EACAhL,IADA,mBACxBnC,EADwB,KACboC,EADa,OAEdpB,EAAe,UAAzBV,EAFwB,sBAGZU,EAAe,YAA3BT,EAHwB,sBAIbS,EAAe,MAAxB0U,EAJsB,sBAKP1U,EAAe,YAA9B2U,EALsB,sBAOiBhW,mBAASsG,GAP1B,mBAOxB2P,EAPwB,KAONC,EAPM,OAQKlW,mBAASuR,GAAcjL,IAR5B,mBAQxB6P,EARwB,KAQZC,EARY,OASHpW,mBAAS,IATN,mBASxBqW,EATwB,KAShBC,EATgB,OAUKtW,oBAAS,GAVd,mBAUxBuW,EAVwB,KAUZC,EAVY,OAYqBxW,mBAAS,MAZ9B,mBAYxByW,EAZwB,KAYJC,EAZI,KAe/BvW,qBAAU,WACR,IAAMwW,EAAcnS,OAAOC,OAAO3E,GAAS8W,QAAO,SAACC,EAAKC,GAEtD,OADAD,EAAIC,EAAEC,WAAY,EACXF,IACN,IAEGG,EAAsB1Q,EAAW2Q,QAAO,SAACF,GAAD,YAAwCpB,IAA1BgB,EAAYI,MAEpEC,EAAoBtX,SAASyW,KAAgBM,GAC/CL,EAAc7E,GAAcyF,IAG9Bd,EAAoBc,KACnB,CAAClX,IAGJK,qBAAU,WACR,IAIwB,EAJlB+W,EAAa7B,GAAaD,IAAI,YAC9B+B,EAAO9B,GAAaD,IAAI,MACxBgC,EAAW/B,GAAaD,IAAI,UAE9B8B,GAAcC,IAChBf,EAAcf,GAAaD,IAAI,aAC/BkB,EAAS,UAACjB,GAAaD,IAAI,aAAlB,QAA2B,IACpCsB,EAAsBQ,GAElBE,IAAazW,GACf6V,GAAc,MAGjB,IAEH,IAAMa,EAAmB3U,uBAAY,WACnC,IAAMiE,EAAQsP,EAAiBqB,QAAQnB,GACjCoB,EAAqB,IAAV5Q,EAAcsP,EAAiB3E,OAAS,EAAI3K,EAAQ,EACrEyP,EAAcH,EAAiBsB,MAC9B,CAACtB,EAAkBE,IAEhBqB,EAAe9U,uBAAY,WAC/B,IAAMiE,EAAQsP,EAAiBqB,QAAQnB,GACjCoB,EAAW5Q,IAAUsP,EAAiB3E,OAAS,EAAI,EAAI3K,EAAQ,EACrEyP,EAAcH,EAAiBsB,MAC9B,CAACtB,EAAkBE,IAEhBsB,EAAc/U,sBAAW,sBAAC,4BAAAE,EAAA,sEAE5BH,EAAU,cAAc,GAFI,SAGLkH,GAASK,UAAU,CACxCrJ,SACAC,WACAiC,WAAYwT,EACZqB,eAAgBvB,IAPU,OAGtBpJ,EAHsB,OAU5BgJ,EAAMhJ,EAASjK,KAAKkO,MACpBgF,EAAYjJ,EAASjK,KAAKiU,UAC1B1B,GAAasC,IAAI,CACf7W,GAAIiM,EAASjK,KAAKkO,KAClB+F,SAAUhK,EAASjK,KAAKiU,SACxBpW,WAf0B,kDAkB5BsC,IAAaC,MAAM,CACjBH,QAAS,2EACTI,YAAaC,KAAKC,UAAU,KAAEN,SAC9BO,UAAW,eAEbC,QAAQL,MAAR,MAvB4B,yBAyB5BT,EAAU,cAAc,GAzBI,6EA2B7B,CAAC9B,EAAQC,EAAUyV,EAAQF,IAE9B,OACE,sBAAKjR,UAAU,aAAf,UACE,cAAC,IAAD,CACEI,IAAG,OAAEkI,QAAF,IAAEA,OAAF,EAAEA,EAAML,MACXhI,IAAG,UAAKI,EAAWC,QAAhB,6BAAqCgI,QAArC,IAAqCA,OAArC,EAAqCA,EAAM5M,SAA3C,QACH6M,SAAQ,UAAKlI,EAAWC,QAAhB,4BACRN,UAAU,2BAEZ,oBAAIA,UAAU,oBAAd,SACGwG,QAAQ+K,GAAsB,sBAAwB,yBAEzD,sBAAKvR,UAAU,+BAAf,UACE,cAAC,KAAD,CAAQ+H,KAAK,SAASC,QAASmK,EAAkBnS,UAAU,gCAA3D,SACE,cAAC0S,GAAA,EAAD,MAEF,qBAAKxD,QAAQ,cAAclP,UAAU,qCAArC,SACE,qBAAKmP,KAAMC,GAAO,kBAAc6B,OAElC,cAAC,KAAD,CAAQlJ,KAAK,SAASC,QAASsK,EAActS,UAAU,gCAAvD,SACE,cAAC2S,GAAA,EAAD,SAIHnM,QAAQ+K,GACP,cAAC,KAAD,CACEvR,UAAU,2BACV+H,KAAK,UACLlK,QAAQ,2DAGV,cAAC,KAAD,CACEmC,UAAU,2BACV+H,KAAK,UACLlK,QAAQ,oGAIX2I,QAAQ6K,IACP,cAAC,KAAD,CACErR,UAAU,2BACV+H,KAAK,QACLlK,QAAQ,sKAIZ,cAAC,KAAD,CACEmC,UAAU,yBACV4S,SAAU,SAACC,GAAD,OAAOzB,EAAUyB,EAAEC,OAAOnT,MAAMqM,SAC1C+G,YAAY,kBACZpT,MAAOwR,EACP6B,UAAW,GACXC,OACE,cAAC,KAAD,CAAShL,MAAM,8BAAf,SACE,cAACiL,GAAA,EAAD,QAIN,cAAC,KAAD,CACElT,UAAU,0BACV+H,KAAK,UACLoL,UAAW3M,QAAQ2K,IAAWhW,EAC9B6M,QAASuK,EAJX,SAMGpX,EAAY,cAAC,KAAD,CAAMuO,KAAK,UAAa,uB,UC9J7C,SAAS0J,GAAT,GAAkD,IAA7BxM,EAA4B,EAA5BA,SAA4B,IAAlB5G,iBAAkB,MAAN,GAAM,IAC7B7D,EAAe,WAEjC,OAH+C,oBAKxC,cAAC,IAAD,CAAO6D,UAAWuG,aAAK,uBAAwBvG,GAA/C,SAA4D4G,IAF9C,yBAURI,sBAAKoM,IAEb,SAASC,GAAT,GAAyC,IAAlBC,EAAiB,EAAjBA,OAAQ5S,EAAS,EAATA,MAAS,EACzBpD,IAAbnC,EADsC,oBAE7C,OACE,cAAC,KAAD,CAAQ+L,KAAM,cAACqM,GAAA,EAAD,IAAkBC,QAAM,EAACzL,KAAK,UAAUC,QAASsL,EAAQH,SAAUhY,EAAjF,SACGuF,IAKA,SAAS+S,GAAT,GAA6C,IAAlBH,EAAiB,EAAjBA,OAAQ5S,EAAS,EAATA,MACxC,OACE,cAAC0S,GAAD,UACE,cAACC,GAAD,CAAaC,OAAQA,EAAQ5S,MAAOA,MCyC3BgT,OA/Df,YAAqC,IAAlBpL,EAAiB,EAAjBA,KAAM1N,EAAW,EAAXA,QAAW,EACH0C,IADG,mBAC3BnC,EAD2B,KAChBoC,EADgB,OAEjBpB,EAAe,UAAzBV,EAF2B,sBAGfU,EAAe,YAA3BT,EAH2B,sBAIfS,EAAe,YAA3BR,EAJ2B,sBAMrBQ,EAAe,MAArBP,EAN2B,sBAOfO,EAAe,YAA3BN,EAP2B,oBAS5B8X,EAAqBnW,sBAAW,sBAAC,sBAAAE,EAAA,sEAEnCH,EAAU,aAAa,GAFY,SAGZkH,GAASM,SAAS,CACvCtJ,SACAC,aALiC,cAOtBkC,KAAKgW,UAChB/V,IAAQC,QAAQ,yCARiB,gDAWnCC,IAAaC,MAAM,CACjBH,QAAS,0EACTI,YAAaC,KAAKC,UAAU,KAAEN,SAC9BO,UAAW,eAEbC,QAAQL,MAAR,MAhBmC,yBAkBnCT,EAAU,aAAa,GAlBY,4EAoBpC,CAAC9B,EAAQC,EAAU6B,IAEhBsW,EAAavU,OAAOwU,KAAKlZ,GAASwR,OAExC,OACE,sBAAKpM,UAAU,gBAAf,UACE,cAAC,IAAD,CACEI,IAAG,OAAEkI,QAAF,IAAEA,OAAF,EAAEA,EAAML,MACXhI,IAAG,UAAKI,EAAWC,QAAhB,6BAAqCgI,QAArC,IAAqCA,OAArC,EAAqCA,EAAM5M,SAA3C,QACH6M,SAAQ,UAAKlI,EAAWC,QAAhB,8BAGV,qBAAIN,UAAU,SAAd,UAAwBpE,GAAM,SAA9B,OACA,qBAAKsT,QAAQ,cAAclP,UAAU,wBAArC,SACE,qBAAKmP,KAAMC,GAAO,kBAAcvT,OAElC,oBAAImE,UAAU,SAAd,mDACA,eAAC,GAAD,CAAWA,UAAU,6BAArB,UACE,eAAC,IAAWyG,KAAZ,CAAiBzG,UAAU,iBAA3B,uCAC0B6T,EAD1B,IACuClY,EAAS0O,OAEhD,cAAC,KAAD,CACEtC,KAAK,UACLyL,QAAM,EACNxL,QAAS2L,EACTR,SAAUhY,GAAa0Y,EAAalY,EAAS0O,IAJ/C,2CCpCO0J,OA1Bf,WACE,OACE,sBAAK/T,UAAU,mBAAf,UACE,qBAAKA,UAAU,gCAAf,SACE,qBAAKA,UAAU,8BAGjB,qBAAKA,UAAU,gCAAf,SACE,qBAAKA,UAAU,8BAGjB,qBAAKA,UAAU,gCAAf,SACE,qBAAKA,UAAU,8BAGjB,qBAAKA,UAAU,gCAAf,SACE,qBAAKA,UAAU,8BAGjB,qBAAKA,UAAU,gCAAf,SACE,qBAAKgU,cAAc,kCCaZC,OAzBf,YAAmC,IAAlBrZ,EAAiB,EAAjBA,QAAS0N,EAAQ,EAARA,KAAQ,EACnBnM,EAAe,MAArBP,EADyB,sBAEbO,EAAe,YAA3BN,EAFyB,oBAIhC,OACE,eAAC,GAAD,CAAgB+S,MAAM,QAAQC,aAAa,QAAQvG,KAAMA,EAAzD,UACE,sBAAKtI,UAAU,cAAf,UACGV,OAAOC,OAAO3E,GAAS2G,KAAI,SAAC2S,EAAQzS,GAAT,OAC1B,cAAC,GAAD,CAEEuN,GAAIkF,EAAOrC,SACX/F,KAAMoI,EAAOpI,KACb9L,UAAS,mCAA8ByB,GACvC6N,SAAO,GAJF4E,EAAOpI,SAQflQ,GAAMC,EAAW,cAAC,GAAD,CAASjB,QAASA,EAAS0N,KAAMA,IAAW,cAAC,GAAD,CAAM1N,QAASA,EAAS0N,KAAMA,OAG9F,cAAC,GAAD,Q,iDCtBN,SAAS6L,GAAT,GAKI,IAJFvZ,EAIC,EAJDA,QAIC,IAHDwZ,iBAGC,MAHW,gBAGX,MAFDC,uBAEC,MAFiB,mBAEjB,EADDC,EACC,EADDA,UAEMC,EAAejV,OAAOC,OAAO3E,GAASmX,QAAO,SAACmC,GAAD,OAAYA,EAAOtX,SAEtE,OAA4B,IAAxB2X,EAAanI,OACR,yBAIP,sBAAKpM,UAAU,mBAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,cAAC,KAAUwU,MAAX,CAAiB9K,KAAK,QAAtB,SACG6K,EAAahT,KAAI,SAAC2S,GAAD,OAChB,cAAC,GAAD,CAA0BlF,GAAIkF,EAAOrC,UAAxBqC,EAAOpI,WAGxB,uBAAM9L,UAAU,kCAAhB,UACE,cAAC,IAAWyG,KAAZ,UAAkB8N,EAAanI,OAAS,EAAIiI,EAAkBD,IAC9D,cAACK,GAAA,EAAD,CAAYzU,UAAU,+CAGzBsU,GACC,uBAAMtU,UAAU,0BAAhB,cACIuU,EAAahT,KAAI,SAAC2S,GAAD,OAAYA,EAAOpI,QAAM4I,KAAK,MADnD,UAeRP,GAAgBzN,aAAe,CAC7B0N,UAAW,gBACXC,gBAAiB,mBACjBC,WAAW,GAGEH,UCgBAQ,OA3Df,YAAmC,IAAlB/Z,EAAiB,EAAjBA,QAAS0N,EAAQ,EAARA,KAAQ,EACZhL,IAAbnC,EADyB,oBAE1BuB,EAAWD,EAAY7B,GAEvBga,EAAY9X,EAAW,CAC3BC,YAAa0H,GAASO,YACtBhI,WAAY,WACZI,eAAgB,sDAChBC,aAAc,6DAGVwX,EAAe/X,EAAW,CAC9BC,YAAa0H,GAASO,YACtBhI,WAAY,WACZI,eAAgB,qDAChBC,aAAc,6DAGhB,OAAI,OAACiL,QAAD,IAACA,OAAD,EAACA,EAAM5M,UAKT,eAAC,IAAO+N,QAAR,CAAgBzJ,UAAU,QAA1B,UACE,cAAC,IAAWiH,MAAZ,CAAkBjH,UAAU,SAA5B,4BAEA,cAAC,GAAD,CAAesI,KAAMA,EAAMtI,UAAU,kBAAkByI,UAAU,gBAEjE,eAAC,IAAD,CAAOzI,UAAU,iBAAjB,UACE,cAAC,KAAD,CACE+H,KAAK,UACLb,KAAMxK,EAAW,cAACoY,GAAA,EAAD,IAAwB,cAACC,GAAA,EAAD,IACzC5B,SAAUhY,GAAauB,EACvBsL,QAAS,kBAAM4M,EAAU,KAJ3B,qDAQA,cAAC,KAAD,CACE1N,KAAMxK,EAAW,cAACoY,GAAA,EAAD,IAAwB,cAACE,GAAA,EAAD,IACzC7B,SAAUhY,GAAauB,EACvBsL,QAAS,kBAAM4M,EAAU,KAH3B,kDAOA,cAAC,KAAD,CACE7M,KAAK,UACLyL,QAAM,EACNtM,KAAMxK,EAAW,cAACoY,GAAA,EAAD,IAAwB,cAACG,GAAA,EAAD,IACzC9B,SAAUhY,GAAauB,EACvBsL,QAAS,kBAAM6M,EAAa,KAL9B,qBAUF,cAAC,GAAD,CAAiBja,QAASA,EAAS0Z,WAAS,OAnCvC,cAAC,GAAD,K,UC/BI,OAA0B,4C,6BCsE1BY,GAjEO,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,SAA+B,IAArBpV,iBAAqB,MAAT,GAAS,EACvDqV,EAAYC,kBAAO,GAEnBC,EAAkB,SAAC1C,GACvBwC,EAAUG,SAAU,EACpB,IAAMC,EAAM5C,EAAEC,OAAO4C,WAAWC,qBAChCP,EAAS,GAAD,oBAAKD,GAAL,CAAY,CAACM,EAAIG,EAAGH,EAAII,OAI5BC,EAAkB,SAACjD,GAEvB,GAAKwC,EAAUG,QAAf,CAGA,IACMO,EADQlD,EAAEC,OAAO4C,WACHC,qBAChBK,EAAWb,EAAMA,EAAM/I,OAAS,GAEpC4J,EAAWA,EAASC,OAAO,CAACF,EAAMH,EAAGG,EAAMF,IAG3CV,EAAMe,OAAOf,EAAM/I,OAAS,EAAG,EAAG4J,GAClCZ,EAASD,EAAMc,YAGXE,EAAgB,WACpBd,EAAUG,SAAU,GAGtB,OACE,cAAC,KAAD,CACEvL,MAAO,IACPmM,OAAQ,IACRC,YAAad,EACbe,YAAaR,EACbS,UAAWJ,EACXK,aAAcjB,EACdkB,YAAaX,EACbY,WAAYP,EACZnW,UAAWuG,aAAK,mBAAoBvG,GATtC,SAWE,cAAC,KAAD,UACGmV,EAAM5T,KAAI,SAACoV,EAAMnV,GAAP,OACT,cAAC,KAAD,CAEEoV,OAAQD,EACRE,OAAO,UACPC,YAAa,EACbC,QAAS,GACTC,QAAQ,QACRC,yBAAyB,eANpBzV,WC7CjB,SAAS0V,GAAT,GAUI,IATFtQ,EASC,EATDA,SACAuQ,EAQC,EARDA,OACA5N,EAOC,EAPDA,OACA5I,EAMC,EANDA,MACA+I,EAKC,EALDA,KACA0N,EAIC,EAJDA,YACApX,EAGC,EAHDA,UACAqX,EAEC,EAFDA,gBACAC,EACC,EADDA,gBAEMvQ,EAAY,OAEZwQ,EAAUH,EAAcxK,GAAuC,kBAAbhG,EAAwBA,EAAS,GAAK,KAAOjG,EAErG,OACE,sBAAKX,UAAWuG,aAAKQ,EAAD,UAAeA,EAAf,aAA6B2C,GAAQ1J,GAAzD,UACE,sBAAMA,UAAWuG,aAAK,GAAD,OAAIQ,EAAJ,wCAA8CwQ,GAAWF,GAA9E,SACGF,IAEH,sBAAMnX,UAAS,UAAK+G,EAAL,UAAf,SAAwCH,IACvC2C,GAAU,sBAAMvJ,UAAWuG,aAAK,GAAD,OAAIQ,EAAJ,YAAyBuQ,GAA9C,SAAiE/N,OAiBlF2N,GAAKxQ,aAAe,CAClByQ,OAAQ,QACRxW,MAAO,OACP+I,KAAM,SACN0N,aAAa,EACbpX,UAAW,GACXqX,gBAAiB,GACjBC,gBAAiB,IAGJtQ,sBAAKkQ,ICNLM,OAtCf,YAA6D,IAAhCC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,gBAAmB,EAChC5c,mBAAS,IADuB,mBACnDqa,EADmD,KAC5CC,EAD4C,KAGlDzI,EAAYgL,oBAAS,CAC3BC,gBAAiBlL,GAAW,IAC5BmL,WAAW,EACXC,SAAU,kBACRJ,EAAgB,CACd3W,QAAS7C,KAAKC,UAAUgX,GACxB4C,OAAQN,EAAWzI,QANjBrC,QAUR,OACE,sBAAK3M,UAAU,yBAAf,UACE,eAAC,GAAD,CACE0J,KAAK,QACLyN,OAAO,UACP5N,OAAQlI,MAAK,OAACoW,QAAD,IAACA,OAAD,EAACA,EAAYtQ,OAAO7F,KAAK,UAAKoT,KAAK,IAChD1U,UAAU,+BACVW,MAAM,SALR,iBAOG8W,QAPH,IAOGA,OAPH,EAOGA,EAAYO,KACb,sBAAMhY,UAAU,gCAAhB,SAAiD2M,EAAU,OAE7D,cAAC,GAAD,CAAewI,MAAOA,EAAOC,SAAUA,QCN9B6C,GAnBK,SAAC,GAA+C,IAA7Crd,EAA4C,EAA5CA,QAASqN,EAAmC,EAAnCA,MAAOiQ,EAA4B,EAA5BA,YAAatR,EAAe,EAAfA,SAClD,OACE,sBAAK5G,UAAU,eAAf,UACE,cAAC,GAAD,UAAQiI,IACR,cAAC,KAAD,IACA,cAAC,GAAD,UAAciQ,IACbtR,EACD,cAAC,GAAD,CAAiBhM,QAASA,EAAS0Z,WAAS,QChBnC,OAA0B,yCCQzC,SAAS6D,GAAT,GAMI,IALFjE,EAKC,EALDA,OAKC,IAJDxK,YAIC,MAJM,UAIN,MAHD1J,iBAGC,MAHW,GAGX,MAFDoY,uBAEC,aADDC,iBACC,SACKtR,EAAY,cAElB,OACE,uBACE/G,UAAWuG,aAAKQ,EAAD,UAAeA,EAAf,aAA6B2C,GAAQ2O,GAAS,UAAOtR,EAAP,eAA+B/G,GAD9F,UAGE,cAAC,GAAD,CAAQgP,GAAIkF,EAAOrC,SAAU7R,UAAU,sBAAsB0J,KAAMA,IACnE,sBAAM1J,UAAU,oBAAhB,SAAqCkU,EAAOpI,OAC3CsM,GACC,uBAAMpY,UAAU,oBAAhB,eAAuC2B,EAAuBuS,EAAOrC,gBAiB9D7K,sBAAKmR,IChCpB,SAASG,GAAT,GAA0E,IAAnDC,EAAkD,EAAlDA,SAAU7X,EAAwC,EAAxCA,MAAOoX,EAAiC,EAAjCA,SAAUU,EAAuB,EAAvBA,UAAcC,EAAS,2DAC/D9L,EAAYgL,oBAAS,CAC3BC,gBAAiBlL,GAAW6L,GAC5BV,WAAW,EACXC,SAAUU,EAAYV,OAAWrH,IAH3B9D,QAMF+L,EAAY,qBAElB,OACE,eAAC,KAAD,2BAAYD,GAAZ,cACG/X,EADH,IACW8X,GAAa,sBAAMxY,UAAWuG,aAAKmS,EAAD,UAAeA,EAAf,aAA6BD,EAAM1Q,OAAxD,SAAkE4E,QAY9F2L,GAAY5R,aAAe,CACzB6R,SAAU,GACVC,WAAW,GAGEF,UC3Bf,SAASK,GAAT,GAA6C,IAA7BxZ,EAA4B,EAA5BA,KAAMvE,EAAsB,EAAtBA,QAASoF,EAAa,EAAbA,UAC7B,OACE,sBAAKA,UAAWA,EAAhB,UACE,uCAAUb,EAAK2M,QACf,oBAAI9L,UAAU,mCAAd,SACGb,EAAKyZ,QAAQrX,KAAI,SAAC5D,GAAD,OAChB,oBAAsCqC,UAAU,kCAAhD,SACE,cAAC,GAAD,CAAYkU,OAAQtZ,EAAQ+C,MAD9B,sBAAwBA,SAK5B,eAAC,IAAD,CAAKqC,UAAU,6BAA6BW,MAAM,OAAlD,UACGxB,EAAK0Z,MADR,IACgB1Z,EAAK0Z,MAAQ,EAAI,SAAW,cAMlD,SAASC,GAAT,GAAkG,IAArEC,EAAoE,EAApEA,MAAOC,EAA6D,EAA7DA,cAAeC,EAA8C,EAA9CA,WAAYC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,MAAOve,EAAqB,EAArBA,QAASgM,EAAY,EAAZA,SACnF,OACE,sBAAK5G,UAAU,qBAAf,UACGwG,QAAO,OAAC2S,QAAD,IAACA,OAAD,EAACA,EAAOrM,IACd,cAAC6L,GAAD,CAAM3Y,UAAU,gCAAgCb,KAAMga,EAAMrM,EAAGlS,QAASA,IAG1E,sBAAKoF,UAAU,2BAAf,UACE,qBAAKA,UAAU,4BAAf,SACE,qBAAKC,IAAKmZ,GAAahZ,IAAI,aAE7B,sBAAKJ,UAAU,oCAAf,UACE,qBAAKA,UAAU,+BACf,qBAAKA,UAAU,6BAAf,gBAA6C+Y,QAA7C,IAA6CA,IAAS,OAGvDnS,EAEAJ,QAAQwS,KAAmBxS,QAAQ0S,IAClC,cAAC,KAAD,CAAQnR,KAAK,UAAUC,QAASgR,EAAehZ,UAAU,gCAAzD,SACGiZ,IAIJzS,QAAQwS,IAAkBxS,QAAQ0S,IACjC,cAAC,GAAD,CACExY,MAAOuY,EACPlR,KAAK,UACLC,QAASgR,EACTlB,SAAUkB,EACVT,SAAUW,EACVV,WAAS,OAKdhS,QAAO,OAAC2S,QAAD,IAACA,OAAD,EAACA,EAAOpM,IACd,cAAC4L,GAAD,CAAM3Y,UAAU,iCAAiCb,KAAMga,EAAMpM,EAAGnS,QAASA,OAejFke,GAAkBpS,aAAe,CAC/BuS,WAAY,aACZC,KAAM,GAGOJ,UCnEAO,OAdf,YAAuD,IAAD,EAA9BzS,EAA8B,EAA9BA,SAAU0S,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WACtC,OAAK3S,EAAS0S,IAIP,iBAACC,QAAD,IAACA,OAAD,EAACA,EAAaD,UAAd,WAAgC,cAAC,WAAD,UAAW1S,EAAS0S,KAHlD,cAAC,GAAD,K,UCqCIE,OAhCf,YAAkD,IAAD,IAAlBxZ,iBAAkB,MAAN,GAAM,IAC3B1C,IAAbnC,EADwC,sBAE7BgB,EAAe,WAA1BL,EAFwC,oBAIzC2d,EAAkB3c,EAAW,CACjCC,YAAa0H,GAASS,cACtBlI,WAAY,mBACZI,eAAgB,8BAChBC,aAAc,6EAGhB,OAAKvB,EAGH,cAAC,IAAD,CAAOkE,UAAWuG,aAAK,uBAAwBvG,GAA/C,SACE,cAAC,KAAD,CACEkH,KAAM,cAACwS,GAAA,EAAD,IACN3R,KAAK,UACLyL,QAAM,EACNxL,QAAS,kBAAMyR,EAAgB,KAC/BtG,SAAUhY,EALZ,uCAJiB,0BCgERwe,OApEf,YAA8C,IAAzB/e,EAAwB,EAAxBA,QAASD,EAAe,EAAfA,MAAO2N,EAAQ,EAARA,KAC7B5L,EAAWD,EAAY7B,EAASD,GADK,EAE9BwB,EAAe,MAArBP,EAFoC,sBAGnBd,mBAAS,GAHU,mBAGpCwe,EAHoC,KAG9BM,EAH8B,OAIP9e,mBAAS,IAJF,mBAIpC2c,EAJoC,KAIxBoC,EAJwB,OAK5BC,aAASC,GAAe,CAAEC,OAAQ,KAA1CC,EALoC,oBAO3Chf,qBAAU,WAAO,IAAD,EACd4e,EAAa,UAACjf,EAAQgB,GAAIse,mBAAb,QAA4B,MACxC,CAACtf,EAASgB,IAEb,IAAM8b,EAAkB5a,EAAW,CACjCC,YAAaoI,GAAcC,cAC3BpI,WAAY,iBACZC,aAAc,kBAAM2c,EAAQ,IAC5Bzc,QAAS,kBAAMyc,EAAQ,IACvBxc,eAAgB,oEAChBC,aAAc,oEAQhB,OACE,cAAC,GAAD,CACEiL,KAAMA,EACNsG,MAAK,OAAEjU,QAAF,IAAEA,OAAF,EAAEA,EAAOiU,MACdC,aAAcvL,GAAiBE,KAC/BxD,UAAU,aAJZ,SAME,eAAC,GAAD,CAAcsZ,KAAMA,EAAMC,WAAY,EAAE7c,GAAWA,GAAnD,UAEE,cAAC,GAAD,CACEqc,MAAK,OAAEpe,QAAF,IAAEA,OAAF,EAAEA,EAAOoe,MACdC,cAhBe,WACrBiB,IACAL,EAAQ,IAeFX,WAAW,4CAHb,SAKE,eAAC,GAAD,CAAapS,OAAK,EAAlB,8EAEE,uBAFF,2CAIE,uBAJF,oEAME,uBANF,uBAQE,4BAKJ,cAAC,GAAD,CAAmB4Q,WAAYA,EAAYC,gBAAiBA,IAG5D,eAAC,WAAD,WACE,cAAC,GAAD,CACE9c,QAASA,EACTqN,MAAM,UACNiQ,YAAY,wEAEd,cAAC,GAAD,a,UC7DV,SAASiC,GAAT,GAAkE,IAAD,IAA5CpZ,eAA4C,MAAlC,GAAkC,MAA9Bf,iBAA8B,MAAlB,GAAkB,MAAd0J,YAAc,MAAP,IAAO,EACzD0Q,EAAalc,KAAKkS,MAAMrP,GACxBsZ,EAA8BD,EAhBf7Y,KAAI,SAAC+Y,GAExB,IADA,IAAIC,EAAO,GACF3E,EAAI,EAAGC,EAAI,EAAGA,EAAIyE,EAAQlO,OAAQwJ,GAAK,EAAGC,GAAK,EAClDyE,EAAQ1E,EAAI,IAAM0E,EAAQzE,EAAI,KAChC0E,GAAI,WAAQD,EAAQ1E,GAAhB,YAAsB0E,EAAQzE,GAA9B,aAAqCyE,EAAQ1E,EAAI,GAAjD,YAAuD0E,EAAQzE,EAAI,KAI3E,OAAO0E,KAUT,OACE,sBACEC,MAAM,6BACNtL,QAAQ,cACRuL,SAAS,SACTza,UAAWA,EACXgK,MAAO,CAAEC,MAAM,GAAD,OAAKP,EAAL,OALhB,UAOE,yBACC2Q,EAAM9Y,KAAI,SAACgZ,EAAM9Y,GAAP,OACT,sBAEEiZ,EAAGH,EACHjZ,KAAK,OACLuV,OAAO,OACPC,YAAY,IACZ6D,cAAc,QACdC,eAAe,QACfC,iBAAiB,MARnB,UACU9Z,EADV,YACqBU,UAmBduF,sBAAKmT,IClCLW,OAff,YAAkC,IAAD,IAAfC,YACiBC,MAAM,KAA5BnO,EADoB,oBAE/B,OACE,qBAAK7M,UAAU,WAAf,SACE,qBACEA,UAAS,+CAA0C6M,EAA1C,8BAAsED,GAC7EC,IAFJ,SAKGA,OCoCMoO,OAzCf,YAA6F,IAA5DC,EAA2D,EAA3DA,SAAUC,EAAiD,EAAjDA,WAAYC,EAAqC,EAArCA,eAAgBC,EAAqB,EAArBA,MAAOtf,EAAc,EAAdA,WACtEuf,EAAoB,+CAE1B,OACE,oBAAItb,UAAU,4BAAd,gBACGkb,QADH,IACGA,OADH,EACGA,EAAU3Z,KAAI,SAACga,GACd,IAAMC,EAAa,kBAAcD,EAAavM,IACxCyM,EAAWN,IAAeK,EAChC,OACE,qBAEExb,UAAWuG,aAAK+U,EAAmBG,GAAQ,UAAOH,EAAP,aAC3CtT,QAAS,kBAAMoT,EAAeI,IAHhC,WAKQ,OAALH,QAAK,IAALA,OAAA,EAAAA,EAAQG,KAAkB,cAAC,GAAD,CAAQT,YAAaM,EAAMG,KACtD,cAAC,GAAD,CACEza,QAASwa,EAAaxa,QACtBf,UAAU,qCACV0J,KAAM3N,IAER,sBAAMiE,UAAU,oCAAhB,SAAqDub,EAAa5d,eAV7D6d,S,UCTjB,SAASE,GAAT,GAAsD,IAA9B1D,EAA6B,EAA7BA,KAAM7Q,EAAuB,EAAvBA,MAAuB,IAAhBgQ,cAAgB,MAAP,IAAO,EACnD,OACE,cAAC,GAAD,CACExW,MAAOiM,GAAmBuK,GAC1BA,OAAQA,EACRzN,KAAK,SACLH,OAAQlI,MAAM8F,GAAO7F,KAAK,UAAKoT,KAAK,IAJtC,gBAMGsD,QANH,IAMGA,IAAQ,cAAC2D,GAAA,EAAD,MAWA3U,sBAAK0U,ICsBLE,OAzCf,YAA2E,IAA7CC,EAA4C,EAA5CA,MAAOV,EAAqC,EAArCA,WAAYC,EAAyB,EAAzBA,eAAgBC,EAAS,EAATA,MACzDC,EAAoB,yCAE1B,OACE,oBAAItb,UAAU,yBAAd,SACG6b,EAAMta,KAAI,SAACua,EAAWra,GACrB,IAAMoL,EAASnL,EAAQD,GACjBsZ,EAAW,eAAWe,EAAU9M,GAArB,YAA2BnC,GACtC4O,EAAWN,IAAeJ,EAC1BgB,EAASzc,OAAOC,OAAO8b,GAAO7gB,SAASugB,GAE7C,OACE,oBACEiB,KAAK,SAELhc,UAAWuG,aACT+U,EACAG,GAAQ,UAAOH,EAAP,YACRS,GAAM,UAAOT,EAAP,WAERtT,QAAS,kBAAMoT,EAAeL,IARhC,SAUE,cAAC,GAAD,CAAM/C,KAAM8D,EAAU9D,KAAM7Q,MAAO2U,EAAU3U,MAAOgQ,OAAQtK,KARvDkO,S,UChBXkB,GAAgB,WAAO,IAAD,EACU9f,EAAe,cADzB,mBACnBJ,EADmB,KACPmgB,EADO,KAG1B,OACE,sBAAKlc,UAAU,mBAAf,UACE,qBAAKA,UAAU,0BAAf,gCACA,cAAC,KAAD,CACEA,UAAU,2BACVmc,aAAcpgB,EACdsO,IAAK,IACLC,IAAK,IACLgP,KAAM,GACN1G,SAAUsJ,QAMHlV,kBAAKiV,ICJpB,SAASG,GAAaf,GACpB,OAAO/b,OAAOgR,QAAQ+K,GAAO3J,QAAO,SAACC,EAAD,GAAyC,IAAD,mBAAjC0K,EAAiC,KAAjBtB,EAAiB,OACpDsB,EAAerB,MAAM,KAAlCsB,EADiE,sBAEvDvB,EAAYC,MAAM,KAA5BjD,EAFiE,oBAI1E,OADApG,EAAI2K,GAAavE,EACVpG,IACN,IAiHU4K,OA9Gf,YAAoD,IAAD,IAAxB3hB,EAAwB,EAAxBA,QAASD,EAAe,EAAfA,MAAO2N,EAAQ,EAARA,KACnC5L,EAAWD,EAAY7B,EAASD,GADW,EAEbwB,EAAe,cAFF,mBAE1CJ,EAF0C,KAE9BmgB,EAF8B,OAGtB/f,EAAe,oBAAnCH,EAH0C,sBAIzBlB,mBAAS,GAJgB,mBAI1Cwe,EAJ0C,KAIpCM,EAJoC,OAKvB9e,mBAAS,IALc,mBAK1CugB,EAL0C,KAKnCmB,EALmC,OAMb1hB,mBAAS,MANI,mBAM1CqgB,EAN0C,KAM9BsB,EAN8B,KAQ3CC,EAAiB5f,EAAW,CAChCC,YAAaoI,GAAcE,aAC3BrI,WAAY,iBACZC,aAAc,kBAAM2c,EAAQ,IAC5Bzc,QAAS,kBAAMyc,EAAQ,IACvBxc,eAAgB,6DAChBC,aAAc,8EAGhBpC,qBAAU,WACRihB,EAAclgB,KACb,IAEH,IAAMof,EAAiB5d,uBACrB,SAACmf,GAAa,IAAD,EACIA,EAAQ3B,MAAM,KAAtBjT,EADI,qBAENoT,GAAcA,EAAWyB,WAAW7U,GACvC0U,EAAcE,IAGZH,EADW,SAATzU,EACO,SAAC8U,GACR,OAAO,2BACFA,GADL,kBAEG1B,EAAawB,KAIT,SAACE,GACR,OAAO,2BACFA,GADL,kBAEGF,EAAUxB,MAIjBsB,EAAc,SAGlB,CAACtB,IAGH,OACE,cAAC,GAAD,CACE7S,KAAMA,EACNsG,MAAK,OAAEjU,QAAF,IAAEA,OAAF,EAAEA,EAAOiU,MACdC,aAAcvL,GAAiBG,WAC/BzD,UAAU,qBAJZ,SAME,eAAC,GAAD,CAAcsZ,KAAMA,EAAMC,WAAY,EAAE7c,GAAxC,UAEE,sBAAKsD,UAAU,+BAAf,UACE,cAAC,GAAD,IACA,cAAC,GAAD,gCACA,eAAC,GAAD,qHAGE,uBAHF,0GAKE,uBALF,iEASA,cAAC,GAAD,CACEkb,SAAQ,iBAAEvgB,QAAF,IAAEA,OAAF,EAAEA,EAAOugB,gBAAT,QAAqB,GAC7BC,WAAYA,EACZC,eAAgBA,EAChBC,MAAOA,EACPtf,WAAYA,IAGd,cAAC,GAAD,CACE8f,MAAK,iBAAElhB,QAAF,IAAEA,OAAF,EAAEA,EAAOkhB,aAAT,QAAkB,GACvBV,WAAYA,EACZC,eAAgBA,EAChBC,MAAOA,IAGT,cAAC,IAAD,CAAOrb,UAAU,oCAAjB,SACE,cAAC,KAAD,CACE+H,KAAK,UACLC,QAAS,kBAAM0U,EAAe,CAAErB,MAAOe,GAAaf,MACpDlI,SAAU7T,OAAOC,OAAO8b,GAAOjP,OAASzR,EAAMugB,SAAS9O,OACvDlF,KAAM,cAAC4V,GAAA,EAAD,IAJR,6CAYJ,eAAC,WAAD,WACE,cAAC,GAAD,CACEliB,QAASA,EACTqN,MAAM,UACNiQ,YAAY,qEAEd,cAAC,GAAD,a,UC/HV,SAAS6E,GAAT,GAA2D,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,eACtC,OACE,sBAAKjd,UAAU,4BAAf,UACE,qBAAKA,UAAU,0BAAf,qBACA,sBAAMA,UAAU,gCAAhB,SACE,cAAC,GAAD,CAAagP,GAAIiO,EAAgBnR,KAAMkR,SAWhChW,sBAAK+V,I,UCbpB,SAASG,GAAT,GAA+D,IAA/BC,EAA8B,EAA9BA,WAAYviB,EAAkB,EAAlBA,QAASihB,EAAS,EAATA,MACnD,OACE,sBAAK7b,UAAU,4BAAf,UACE,qBAAKA,UAAU,0BAAf,mCACCV,OAAOgR,QAAQ6M,GAAY5b,KAAI,WAAyBE,GAAW,IAAD,mBAAjCsW,EAAiC,KAAzBqF,EAAyB,KAC3DC,EAAOxB,EAAMyB,MAAK,SAAC9b,GAAD,OAAOA,EAAEwN,KAAO+I,KACxC,OACE,sBAAsC/X,UAAU,0BAAhD,UACE,sBAAKA,UAAU,kCAAf,UACE,cAACud,GAAA,EAAD,CAAevd,UAAU,yCAD3B,IACsEqd,EAAKrF,QAE3E,sBAAKhY,UAAU,4BAAf,UACE,cAAC,KAAUwU,MAAX,UACG4I,EAAa7b,KAAI,SAAC5D,GAAD,OAChB,cAAC,GAAD,CACEqR,GAAIpU,EAAQ+C,GAAYkU,UAD1B,uBAEuBjX,EAAQ+C,GAAYkU,gBAI/C,sBAAM7R,UAAU,kCAAhB,SAAmDod,EAAa1I,KAAK,aAbzE,gBAAmBqD,EAAnB,YAA6BtW,UA2BxBuF,sBAAKkW,I,kDCgCLM,OA3Df,YAAyF,IAAxDC,EAAuD,EAAvDA,cAAeC,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,eAAgB/D,EAAW,EAAXA,QAAW,EACxCjC,oBAAS,CACrDC,gBAAiBlL,GAAW,GAAK+Q,GACjC5F,WAAW,EACXC,SAAU,kBAAM8B,EAAQ,MAHlBjN,EAD8E,EAC9EA,QAASiR,EADqE,EACrEA,UAAWC,EAD0D,EAC1DA,MAAOC,EADmD,EACnDA,OAqBnC,OAdA7iB,qBAAU,WACJ0R,EAAU,GAAK8Q,GAAiB9Q,EAAU,GAAKA,EAAU,KAAO,GAClEgR,GAAe,SAACI,GAAD,OAAOxR,KAAKlC,IAAI0T,EAAI,EAAGN,EAAgB,QAEvD,CAAC9Q,EAASgR,EAAgBF,IAW3B,sBAAKzd,UAAU,6BAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,sBAAMgK,MAAO,CAAEC,MAAM,GAAD,OAAKsC,KAAKyR,IAAK,GAAKrR,EAAW8Q,EAAgB,KAA/C,UAEtB,eAAC,IAAD,WACE,cAAC,KAAD,CACE/T,KAAK,QACLxC,KAAM,cAAC+W,GAAA,EAAD,IACNjW,QAjBa,WACnB2V,GAAe,SAACI,GAAD,OAAOxR,KAAKjC,IAAIyT,EAAI,EAAG,OAiBhC5K,SAA0B,IAAhBuK,EAJZ,8BAQA,cAAC,KAAD,CACEhU,KAAK,QACLxC,KAAM0W,EAAY,cAACM,GAAA,EAAD,IAAoB,cAACC,GAAA,EAAD,IACtCnW,QAAS4V,EAAYC,EAAQC,IAE/B,eAAC,KAAD,CAAQpU,KAAK,QAAQ1B,QAvBV,WACf2V,GAAe,SAACI,GAAD,OAAOxR,KAAKlC,IAAI0T,EAAI,EAAGN,EAAgB,OAsBVtK,SAAUuK,IAAgBD,EAAgB,EAAlF,gCACkB,cAACW,GAAA,EAAD,OAElB,cAAC,KAAD,CAAQ1U,KAAK,QAAQ1B,QAAS,kBAAM4R,EAAQ,IAAI1S,KAAM,cAACmX,GAAA,EAAD,IAAtD,gC,8BCrDR,SAASC,GAAT,GAA8D,IAAxCC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,UAA6B,IAAlBxe,iBAAkB,MAAN,GAAM,EAC3D,IAAKue,GAAYA,EAAW,EAC1B,OAAO,yBAET,IAAME,EAAapd,MAAMqd,KAAK,CAAEtS,OAAQmS,IAAY,SAACI,EAAGnd,GAAJ,OAAU,cAACod,GAAA,EAAD,aAAoBJ,EAApB,YAAiChd,OAC/F,OACE,uBAAMxB,UAAWuG,aAAK,cAAevG,GAArC,eACI,sBAAMA,UAAU,qBAAhB,SAAsCye,IAD1C,SACmEF,EAAW,EAAI,IAAM,MAW7EvX,sBAAKsX,ICfpB,SAASO,GAAT,GAOI,IAAD,EAND7B,EAMC,EANDA,OACA8B,EAKC,EALDA,gBACAC,EAIC,EAJDA,kBACAC,EAGC,EAHDA,cACA7B,EAEC,EAFDA,WACAviB,EACC,EADDA,QAEMqkB,EAAiB3f,OAAOC,OAAP,iBAAc4d,QAAd,IAAcA,OAAd,EAAcA,EAAa2B,UAA3B,QAA+C,IAEtE,OACE,sBAAK9e,UAAU,2BAAf,UACE,qBAAKA,UAAU,0BAAf,oCACA,sBAAKA,UAAU,kCAAf,UACE,cAACkf,GAAA,EAAD,CAAalf,UAAU,yCACtB+e,KAEFE,EAAe7S,OACd,eAAC,WAAD,WACE,sBAAKpM,UAAU,4BAAf,UACE,cAAC,KAAUwU,MAAX,UACGyK,EAAe1d,KAAI,SAAC5D,GACnB,OACE,cAAC,GAAD,CAAmDqR,GAAIpU,EAAQ+C,GAAYkU,UAA3E,+BAAqClU,SAI3C,cAAC,GAAD,CAAY4gB,SAAU,EAAGC,UAAS,0BAAqBxB,KACvD,sBAAMhd,UAAU,kCAAhB,SAAmDif,EAAevK,KAAK,WAEzE,sBAAK1U,UAAU,kCAAf,UACE,cAAC,GAAD,CAAQgP,GAAIpU,EAAQoiB,GAAQnL,WAAa,IACzC,cAAC,GAAD,CAAY0M,SAAQ,OAAES,QAAF,IAAEA,OAAF,EAAEA,EAAgBhC,GAASwB,UAAS,wBAAmBxB,KAAa,IACxF,sBAAMhd,UAAU,kCAAhB,SAAmDgd,UAIvD,eAAC,IAAWvW,KAAZ,CAAiBzG,UAAU,4BAA3B,UACE,cAACmf,GAAA,EAAD,IADF,2EAgBOnY,sBAAK6X,IClDpB,SAASO,GAAT,GAAyG,IAAhF/kB,EAA+E,EAA/EA,OAAQojB,EAAuE,EAAvEA,cAAe7iB,EAAwD,EAAxDA,QAAS8iB,EAA+C,EAA/CA,YAAaC,EAAkC,EAAlCA,eAAgB/D,EAAkB,EAAlBA,QAASiC,EAAS,EAATA,MAAS,EACjF1f,EAAe,cAA7BJ,EAD+F,oBAG9FgF,EAAgE1G,EAAhE0G,QAASic,EAAuD3iB,EAAvD2iB,OAAQhO,EAA+C3U,EAA/C2U,GAAIgJ,EAA2C3d,EAA3C2d,KAAM7Q,EAAqC9M,EAArC8M,MAAO6X,EAA8B3kB,EAA9B2kB,cAAe7B,EAAe9iB,EAAf8iB,WAEzD,OACE,sBAAKnd,UAAU,mBAAf,UACE,cAAC,GAAD,IACA,qBAAKA,UAAU,sCAAf,SACE,cAAC,GAAD,CAEEe,QAASA,EACT2I,KAAM3N,EACNiE,UAAU,6BAHL3F,EAAOglB,iBAOhB,cAAC,GAAD,CAAsBrC,OAAQA,EAAQC,eAAgBriB,EAAQoiB,GAAQnL,WAEtE,cAAC,GAAD,CAAsBjX,QAASA,EAASuiB,WAAYA,EAAYtB,MAAOA,IAEvE,cAAC,GAAD,CACEmB,OAAQA,EACR8B,gBAAiB9P,EACjB+P,kBAAmB/G,EACnBsH,mBAAoBnY,EACpB6X,cAAeA,EACf7B,WAAYA,EACZviB,QAASA,IAGX,cAAC,GAAD,CACE6iB,cAAeA,EACfC,YAAaA,EACbC,eAAgBA,EAChB/D,QAASA,OAMF5S,sBAAKoY,IC+CLG,OA1Ff,YAA6C,IAArB3kB,EAAoB,EAApBA,QAAS4kB,EAAW,EAAXA,QAAW,EACJ1kB,mBAAS,GADL,mBACnC2kB,EADmC,KACtBC,EADsB,OAEA5kB,mBAAS,IAFT,mBAEnC6kB,EAFmC,KAEpBC,EAFoB,OAGR9kB,mBAAS,IAHD,mBAGnC+kB,EAHmC,KAGxBC,EAHwB,KAKpCC,EAAYP,EAAQ,GAAGQ,SAOrBrT,EAAYgL,oBAAS,CAC3BC,gBAAiBlL,GAAW,GAC5BmL,WAAW,EACXC,SAAU,kBAPV8H,EAAiBJ,EAAQS,MAAK,SAACviB,EAAGwiB,GAAJ,OAAWxiB,EAAEsiB,SAAWE,EAAEF,SAAW,GAAK,WACxEN,EAAe,MAGT/S,QAsCR,OA/BA1R,qBAAU,WACR2kB,EAAiBJ,EAAQS,MAAK,SAACviB,EAAGwiB,GAAJ,OAAWxiB,EAAEyiB,cAAgBD,EAAEC,cAAgB,GAAK,QACjF,IAGHllB,qBAAU,WACQ,IAAZ0R,EACF+S,EAAe,GACM,IAAZ/S,GACT+S,EAAe,KAEhB,CAAC/S,IAGJ1R,qBAAU,WAAO,IAAD,IACRmlB,EAAWX,EAAc,EAAI,gBAAkB,WAEjDY,EAAe,EACfC,EAAU,iBAAGX,QAAH,IAAGA,GAAH,UAAGA,EAAgB,UAAnB,aAAG,EAAqBS,UAAxB,QAAqC,EACnDN,EACEH,EAAcpe,KAAI,SAACgf,GAMjB,OALIA,EAAMH,GAAYE,IACpBA,EAAaC,EAAMH,GACnBC,GAAgB,GAGXA,QAGV,CAACV,EAAeF,IAGjB,qBAAKzf,UAAU,gBAAf,SACG2f,EAAcpe,KAAI,SAACgf,EAAO9e,GAAW,IAAD,EAC3B9D,EAAsD4iB,EAAtD5iB,WAAYqiB,EAA0CO,EAA1CP,SAAUG,EAAgCI,EAAhCJ,cAAeK,EAAiBD,EAAjBC,aAC7C,OACE,sBAAKxgB,UAAS,iDAA4CyB,GAA1D,UACE,qBAAKzB,UAAU,4BAAf,SACGggB,EAAW,GAAKD,IAAcC,GAAYP,GAAe,GACxD,cAACP,GAAA,EAAD,CAAalf,UAAU,gCAG3B,sBAAKA,UAAU,+BAAf,+BAAgD6f,QAAhD,IAAgDA,OAAhD,EAAgDA,EAAYpe,UAA5D,QAAsE,MACtE,sBAAKzB,UAAU,6BAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,cAAC,GAAD,CAAQgP,GAAIpU,EAAQ+C,GAAYkU,aAElC,qBAAK7R,UAAU,sBAAf,SAAsCrC,OAExC,qBAAKqC,UAAU,6BAAf,SAA6CmgB,IAC5CV,GAAe,GAAK,sBAAKzf,UAAU,kCAAf,cAAmDwgB,KACvEf,GAAe,GAAK,qBAAKzf,UAAU,mCAAf,SAAmDggB,MAf1E,kBAAmFriB,UCoB9E8iB,OAnEf,YAAiD,IAAzB7lB,EAAwB,EAAxBA,QAASD,EAAe,EAAfA,MAAO2N,EAAQ,EAARA,KAAQ,EACRxN,mBAAS,GADD,mBACvC4iB,EADuC,KAC1BC,EAD0B,OAEtB7iB,mBAAS,GAFa,mBAEvCwe,EAFuC,KAEjCM,EAFiC,OAGVzd,EAAe,cAHL,mBAGvCJ,EAHuC,KAG3BmgB,EAH2B,OAIE/f,EAAe,oBAJjB,mBAIvCH,EAJuC,KAIrB0kB,EAJqB,KAO9CzlB,qBAAU,WACK,IAATqe,GACFoH,EAAoB3kB,GACpBmgB,EAAc3P,KAAKlC,IAAIhQ,OAAOsmB,WAAa,EAAI,IAAK,OAEpDzE,EAAclgB,KAEf,CAACsd,IAEJ,IAAMsH,EAAkB9jB,EAAW,CACjCC,YAAa0H,GAASS,cACtBlI,WAAY,mBACZI,eAAgB,WAChBC,aAAc,6EAGhB,OACE,cAAC,GAAD,CACEiL,KAAMA,EACNsG,MAAK,OAAEjU,QAAF,IAAEA,OAAF,EAAEA,EAAOiU,MACdC,aAAcvL,GAAiBI,QAC/B1D,UAAU,kBAJZ,SAME,eAAC,GAAD,CAAcsZ,KAAMA,EAApB,UAEE,sBAAKtZ,UAAU,2BAAf,UACE,cAAC,GAAD,+BACM,OAALrF,QAAK,IAALA,OAAA,EAAAA,EAAOkmB,UACN,cAAC,GAAD,CACExmB,OAAQM,EAAMkmB,QAAQnD,GACtBD,cAAe9iB,EAAMkmB,QAAQzU,OAC7ByP,MAAOlhB,EAAMkhB,MACbjhB,QAASA,EACT8iB,YAAaA,EACbC,eAAgBA,EAChB/D,QAASA,OAMf,eAAC,WAAD,WACE,cAAC,GAAD,UAAQjf,EAAMmmB,iBAAmB,EAAI,UAAY,cACjD,cAAC,GAAD,CAAclmB,QAASA,EAAS4kB,QAAS7kB,EAAM6kB,UAC9C7kB,EAAMmmB,iBAAmB,GACxB,eAAC,GAAD,CAAaha,WAAS,EAAtB,oBACS,iCAASnM,EAAMmmB,kBADxB,mCAKF,cAAC,KAAD,CAAQpX,KAAK,QAAQ1B,QAAS,kBAAM4R,EAAQ,IAAI1S,KAAM,cAAC6Z,GAAA,EAAD,IAAtD,yBAGA,cAACtN,GAAD,CAAiBH,OAAQ,kBAAMsN,EAAgB,KAAKlgB,MAAM,oD,oBC9ErD,OAA0B,4CC2F1BsgB,OA5Ef,YAA8C,IAAD,EAAzB1Y,EAAyB,EAAzBA,KAAM3N,EAAmB,EAAnBA,MAAOiM,EAAY,EAAZA,SAAY,EACvBtJ,IAAbnC,EADoC,oBAGrC8lB,EAAcnkB,EAAW,CAC7BC,YAAa0H,GAASQ,UACtBjI,WAAY,cACZI,eAAgB,kCAChBC,aAAc,wDAGhB,OACE,eAAC,GAAD,CAAgBiL,KAAMA,EAAMsG,MAAK,OAAEjU,QAAF,IAAEA,OAAF,EAAEA,EAAOiU,MAAOC,aAAa,YAAY7O,UAAU,YAApF,UACE,qBAAKA,UAAU,mBAAf,SACE,qBAAKC,IAAKihB,GAAe9gB,IAAI,gBAG9BoG,QAAQ7L,EAAMwmB,UACb,sBAAKnhB,UAAU,8BAAf,UACE,sBAAKA,UAAU,kBAAf,8BACoBrF,EAAMwmB,QAAQ/U,OAAS,EAAI,uBAAsB,kBADrE,OAGA,oBAAIpM,UAAU,qBAAd,SACGrF,EAAMwmB,QAAQ5f,KAAI,SAAC6f,GAAY,IAAD,IAC7B,OACE,qBAAIphB,UAAU,oBAAd,UACE,cAAC,GAAD,CAAQA,UAAU,oBAAoBgP,GAAE,UAAEoS,EAAOvP,gBAAT,QAAqB,KAC7D,sBAAK7R,UAAU,yBAAf,UACE,2CAASohB,EAAOtV,YAAhB,QAAwB,MAD1B,KAC0CnK,EAAuByf,EAAOvP,eAH1E,iBAAiDuP,EAAOtV,eAYjEtF,QAAQ7L,EAAMwE,OACb,sBAAKa,UAAU,oBAAf,UACE,qBAAKA,UAAU,kBAAf,6BACA,cAAC,KAAD,CACE+H,KAAK,SACLsZ,YAAa,CACX,KAAM,UACN,MAAO,UACP,OAAQ,WAEVC,QAAO,UAAE3mB,EAAMwE,KAAK0Z,aAAb,QAAsB,IAE/B,qBAAK7Y,UAAU,kBAAf,SACGrF,EAAMwE,KAAKoiB,QAAU,kCAA8B,iDAKxD/a,QAAQ7L,EAAMwmB,WAAa3a,QAAQ7L,EAAMwE,OACzC,qBAAKa,UAAU,kBAAf,6BAGD4G,EAED,cAAC,GAAD,UACE,cAAC,KAAD,CACEqB,MAAM,kDACNuZ,UAAW,kBAAMP,EAAY,KAC7BQ,OAAO,MACPC,WAAW,SAJb,SAME,cAAC,KAAD,CAAQxa,KAAM,cAACqM,GAAA,EAAD,IAAkBC,QAAM,EAACzL,KAAK,UAAUoL,SAAUhY,EAAhE,qCC7EJwmB,GAAS,CAAC,KAAM,IAAK,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,KACxEC,GAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAEzDC,GAAe,SAAC,GAAe,IAAD,EAAZliB,EAAY,EAAZA,MAChBmiB,EAAQH,GAAM,UAACC,GAAUG,WAAU,SAACvgB,GAAD,OAAe,IAAR7B,GAAe6B,YAA3C,QAAiD,IAE/DuF,EAAY,kBAElB,OACE,cAAC,KAAD,CAASkB,MAAK,0DAA6D,IAARtI,EAArD,KAAd,SACE,cAAC,KAAD,CAAQK,UAAWuG,aAAKQ,EAAD,UAAeA,EAAf,aAA6B+a,EAAM,KAA1D,SAAkEA,OASzD9a,kBAAK6a,ICELG,OApBf,YAAyC,IAAhBrnB,EAAe,EAAfA,MAAO2N,EAAQ,EAARA,KAC9B,OACE,cAAC,GAAD,CAAUA,KAAMA,EAAM3N,MAAOA,EAA7B,SACE,oBAAIqF,UAAU,uBAAd,SACGrF,EAAMugB,SAAS3Z,KAAI,SAACgf,GACnB,OACE,qBAAIvgB,UAAU,4BAAd,UACE,cAAC,GAAD,CAAWe,QAASwf,EAAMxf,QAAS2I,KAAM,IAAK1J,UAAU,gCACxD,uBAAMA,UAAU,uBAAhB,cACIugB,EAAMvI,KADV,SACsBuI,EAAM5iB,cAE5B,cAAC,GAAD,CAAcgC,MAAO4gB,EAAM0B,gBALkB1B,EAAMxf,iB,8BCFjE,SAASmhB,GAAT,GAA4C,IAAD,EAAtBhO,EAAsB,EAAtBA,OAAQiO,EAAc,EAAdA,WAC3B,OACE,sBAAKniB,UAAU,+BAAf,UACE,sBAAKA,UAAU,0BAAf,yBAAgDmiB,GAAU,oCAAgBjO,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAQ/U,YAAxB,QAAgC,QAC1F,sBAAKa,UAAU,uBAAf,UACE,cAAC,KAAD,CAAOoiB,MAAOlO,EAAO2E,MAAO7Y,UAAU,sCAAtC,SACE,cAAC,GAAD,CAAQgP,GAAIkF,EAAOrC,SAAU5C,MAAM,aAEpCiF,EAAOpI,KAJV,KAIkBnK,EAAuBuS,EAAOrC,gBAMtD,SAASwQ,GAAT,GAAkG,IAAD,QAA1EtJ,EAA0E,EAA1EA,MAAOuJ,EAAmE,EAAnEA,gBAAiBC,EAAkD,EAAlDA,WAAYzB,EAAsC,EAAtCA,gBAAiBqB,EAAqB,EAArBA,WAAYhJ,EAAS,EAATA,MACtF,OACE,qBAAInZ,UAAU,yBAAd,UACE,qBAAIA,UAAU,8BAAd,UACE,qBAAKA,UAAU,iCAAf,qBACA,cAAC,KAAD,CAAWA,UAAU,0BAA0B0J,KAAK,QAApD,SACGqP,IAEFvS,QAAQ8b,KAAqBE,MAAMzJ,IAClC,eAAC,WAAD,WACE,sBAAM/Y,UAAU,qCAAhB,gBACA,cAAC,KAAD,CAAWA,UAAU,0BAA0B0J,KAAK,QAApD,SACGqP,EAAQuJ,UAMhB9b,QAAQ+b,IACP,qBAAIviB,UAAU,8BAAd,UACE,qBAAKA,UAAU,iCAAf,qBACA,cAAC,KAAD,CAAWA,UAAU,0BAA0B0J,KAAK,UAAUM,MAAO,CAAEyY,gBAAiB,QAAxF,gBACGF,QADH,IACGA,IAAc,OAKpB/b,QAAQ2S,IACP,qBAAInZ,UAAU,8BAAd,UACE,qBAAKA,UAAU,iCAAf,4BACA,cAAC,KAAD,CAAWA,UAAU,0BAA0B0J,KAAK,UAApD,0BACGyP,QADH,IACGA,GADH,UACGA,EAAOrM,SADV,aACG,EAAU+L,aADb,QACsB,MAEtB,sBAAM7Y,UAAU,qCAAhB,gBACA,cAAC,KAAD,CAAWA,UAAU,0BAA0B0J,KAAK,UAApD,0BACGyP,QADH,IACGA,GADH,UACGA,EAAOpM,SADV,aACG,EAAU8L,aADb,QACsB,SAKzBrS,QAAQsa,IACP,gCACE,sBAAK9gB,UAAU,iCAAf,mCACyBmiB,EAAa,UAAY,YADlD,cAGA,cAAC,KAAD,CAAWniB,UAAU,0BAA0B0J,KAAK,QAApD,SACGoX,UAQb,SAAS4B,GAAT,GAA2C,IAAnB9nB,EAAkB,EAAlBA,QAASue,EAAS,EAATA,MAC/B,OACE,qBAAKnZ,UAAU,iCAAf,SACGV,OAAOC,OAAO4Z,GAAO5X,KAAI,SAACpC,GAAD,OACxB,cAACwjB,GAAD,CAAoCxjB,KAAMA,EAAMvE,QAASA,GAAhCuE,EAAK2M,WAMtC,SAAS6W,GAAT,GAAgD,IAAlBxjB,EAAiB,EAAjBA,KAAMvE,EAAW,EAAXA,QAC5BgoB,EAAgBC,mBACpB,kBACE1jB,EAAKyZ,QACFrX,KAAI,SAACuhB,GACJ,OAAOloB,EAAQkoB,MAEhB7C,MAAK,SAACviB,EAAGwiB,GAAJ,OAAWxiB,EAAEoO,KAAOoU,EAAEpU,KAAO,GAAK,OAC5C,CAAClR,EAASuE,IAGZ,OACE,sBAAKa,UAAU,yBAAf,UACE,uCAAUb,EAAK2M,QACf,6BACG8W,EAAcrhB,KAAI,SAAC2S,EAAQzS,GAC1B,OACE,sBAAKzB,UAAU,kCAAf,UACE,cAAC,GAAD,CAAQgP,GAAIkF,EAAOrC,SAAU5C,MAAM,SAASjP,UAAU,wCACrDkU,EAAOpI,KAFV,KAEkBnK,EAAuBuS,EAAOrC,YAFhD,iBAAgEqC,EAAOpI,cALlC3M,EAAK2M,MAgBtD,SAASiX,GAAT,GAA4C,IAAZnoB,EAAW,EAAXA,QACxBooB,EAAgBH,mBAAQ,kBAAMvjB,OAAOC,OAAO3E,GAASqlB,MAAK,SAACviB,EAAGwiB,GAAJ,OAAWxiB,EAAEmb,MAAQqH,EAAErH,MAAQ,GAAK,OAAK,CACvGje,IAEF,OACE,6BACGooB,EAAczhB,KAAI,SAAC2S,EAAQzS,GAC1B,OACE,sBAAKzB,UAAU,kCAAf,UACGyB,EAAQ,EADX,IACe,IACb,cAAC,KAAD,CAAO2gB,MAAOlO,EAAO2E,MAAO7Y,UAAU,sCAAtC,SACE,cAAC,GAAD,CAAQgP,GAAIkF,EAAOrC,SAAU5C,MAAM,aAEpCiF,EAAOpI,KALV,KAKkBnK,EAAuBuS,EAAOrC,YALhD,iBAAgEqC,EAAOpI,YAyElEmX,OA5Df,YAAuD,IAAD,EAA5BroB,EAA4B,EAA5BA,QAASD,EAAmB,EAAnBA,MAAO2N,EAAY,EAAZA,KAAM1M,EAAM,EAANA,GAAM,EACtBd,oBAAS,GADa,mBAC7CoN,EAD6C,KACpCgb,EADoC,KAGpD,GAAoB,UAAhBvoB,EAAMiU,MACR,OAAO,6BAGT,IAOM/O,EAAU,iBAAGjF,QAAH,IAAGA,OAAH,EAAGA,EAAUgB,UAAb,QAAoB,GAC9BumB,EAAa3b,QAAO,OAAC3G,QAAD,IAACA,OAAD,EAACA,EAAYV,OAASqH,QAAQ7L,EAAMwe,OAE9D,OACE,eAAC,WAAD,WACE,cAAC,KAAD,CAAOgK,UAAW,GAAInjB,UAAU,iCAAhC,SACE,cAAC,KAAD,CACE+H,KAAK,UACLkH,MAAM,SACNvF,KAAK,QACL1J,UAAU,2BACVgI,QAlBW,WACjBkb,GAAW,IAkBLhc,KAAM,cAACgM,GAAA,EAAD,QAIV,eAAC,KAAD,CAAQjL,MAAOK,EAAKL,MAAO7J,UAAU,QAAQglB,UAAU,EAAOC,QApBlD,WACdH,GAAW,IAmBuEhb,QAASA,EAAzF,UACGrI,GAAc,cAACqiB,GAAD,CAAWhO,OAAQrU,EAAYsiB,WAAYA,IAE1D,cAAC,IAAD,IAEA,cAAC,GAAD,CAAY9a,SAAUiB,IAEtB,cAAC,IAAD,IAEA,cAAC+Z,GAAD,CACEtJ,OAAY,OAALpe,QAAK,IAALA,OAAA,EAAAA,EAAOoe,QAAS,IACvBuJ,gBAAe,OAAE3nB,QAAF,IAAEA,OAAF,EAAEA,EAAO2nB,gBACxBC,WAAU,OAAE5nB,QAAF,IAAEA,OAAF,EAAEA,EAAO4nB,WACnBzB,gBAAe,OAAEnmB,QAAF,IAAEA,OAAF,EAAEA,EAAOmmB,gBACxBqB,WAAYA,EACZhJ,MAAK,OAAExe,QAAF,IAAEA,OAAF,EAAEA,EAAOwe,QAGhB,cAAC,IAAD,IAECgJ,EACC,cAACO,GAAD,CAAc9nB,QAASA,EAASue,MAAK,OAAExe,QAAF,IAAEA,OAAF,EAAEA,EAAOwe,QAE9C,cAAC4J,GAAD,CAAsBnoB,QAASA,WC3H1B0oB,OA9Bf,YAAsC,IAAX7nB,EAAU,EAAVA,OACnBb,EAAU0D,EAAe7C,EAAQ4H,IACjC1I,EAAQmE,EAAarD,EAAQ4H,IAFA,EAGtBlH,EAAe,MAArBP,EAH4B,sBAIXd,mBAAS,IAJE,mBAI5BwN,EAJ4B,KAItBib,EAJsB,KAgBnC,GATAtoB,qBAAU,WACRsoB,GAAc,OAAN9nB,QAAM,IAANA,OAAA,EAAAA,EAAS,IAAKoO,EAASpO,EAAO,IAAM,MAC3C,CAACA,KAOCG,EACH,OAAO,cAAC,GAAD,CAAOhB,QAASA,EAASD,MAAOA,EAAO2N,KAAMA,IAGtD,IAAMkb,EAvCR,SAA4B5U,GAC1B,OAAQA,GACN,KAAKtL,GAAiBC,MACpB,OAAO0Q,GACT,KAAK3Q,GAAiB/C,MACpB,OAAOoU,GACT,KAAKrR,GAAiBE,KACpB,OAAOmW,GACT,KAAKrW,GAAiBG,WACpB,OAAO8Y,GACT,KAAKjZ,GAAiBI,QACpB,OAAO+c,GACT,KAAKnd,GAAiBK,UACpB,OAAOqe,GACT,QACE,OAAOtT,IAwBa+U,CAAmB9oB,EAAMiU,OAEjD,OACE,eAAC,WAAD,WACE,cAAC,GAAD,CAAgBhU,QAASA,EAASD,MAAOA,EAAO2N,KAAMA,EAAM1M,GAAIA,IAChE,cAAC4nB,EAAD,CAAiB5oB,QAASA,EAASD,MAAOA,EAAO2N,KAAMA,Q,UCvD7D,SAASob,GAAT,GAAmE,IAArCppB,EAAoC,EAApCA,SAAU0hB,EAA0B,EAA1BA,KAA0B,IAApB7E,cAAoB,MAAX,QAAW,EAChE,OACE,cAAC,GAAD,CACExW,MAAoB,QAAbrG,EAAqB,MAAQ,OACpC6c,OAAqB,QAAb7c,EAAqB,qBAAuB6c,EACpDzN,KAAK,QACLH,OAAM,uBAAqB,QAATyS,EAAiB,cAAjB,gBAAuCA,GAAnD,KACNhc,UAAU,SACVsX,gBAAgB,iBANlB,SAQgB,QAAbhd,EAAqB,cAACqpB,GAAA,EAAD,IAA2BrpB,IAWxC0M,sBAAK0c,I,oBCnBpB,SAASE,GAAT,GAAsD,IAAtCzM,EAAqC,EAArCA,OAAQ0M,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,OAAU,EACzB5nB,EAAe,uBADU,mBAC5C6nB,EAD4C,KACrCC,EADqC,KAmBnD,OACE,sBAAKjkB,UAAWuG,aAAK,SAAUwd,GAAU,kBAAzC,UACE,qBAAI/jB,UAAU,gBAAd,UACG6jB,EADH,IACgB1M,EAAQ,IACtB,cAAC,KAAD,CAASlP,MAAM,eAAf,SACE,cAAC,KAAD,CACEgH,MAAM,SACNiV,OAAK,EACLnc,KAAK,UACL2B,KAAK,QACLxC,KAAM,cAACid,GAAA,EAAD,IACNnc,QAba,kBAAMic,EAAS,YAiBlC,oBAAIjkB,UAAWuG,aAAK,eAAgBwd,GAAU,wBAA9C,SACGD,EAAMviB,KAAI,SAACiP,GAAD,OACT,oBACExQ,UAAWuG,aAAK,eAAgByd,EAAMxT,IAAS,yBAE/CwL,KAAK,SACLhU,QAAS,kBAnCH,SAACwI,GACfyT,GAAS,SAAClG,GACR,IAAMqG,EAAQ,eAAQrG,GAMtB,OALIqG,EAAS5T,UACJ4T,EAAS5T,GAEhB4T,EAAS5T,IAAQ,EAEZ4T,KA2BcC,CAAQ7T,IAJzB,SAMGA,GAJIA,WAmBjBoT,GAAKld,aAAe,CAClBqd,QAAQ,GAGK/c,sBAAK4c,ICpEpB,SAASU,KACP,OACE,0BACExY,KAAK,GACLkD,GAAG,GACHuV,KAAK,KACLC,KAAK,KACLxkB,UAAU,UACV+S,YAAY,0FAOH/L,sBAAKsd,ICQLG,OAhBf,YAA8E,IAAD,IAA1C/jB,aAA0C,MAAlC,YAAkC,MAArB4S,cAAqB,MAAZ,SAAY,EACrEoR,EAAqB5nB,EAAW,CACpCC,YAAauI,GAAqBC,kBAClCvI,WAAY,gBACZI,eAAgB,2BAChBC,aAAc,qEAGhB,OAAO,cAACoW,GAAD,CAAiBH,OAAQ,kBAAMoR,EAAmB,CAAEpR,YAAW5S,MAAOA,KC0DhEikB,OAvDf,YAAoD,IAAzBhqB,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,QAAS0N,EAAQ,EAARA,KACnC5L,EAAWD,EAAY7B,EAASD,GAChCgR,EAAO/L,EAAMhF,GACbgqB,EAAQtoB,EAAa3B,EAAO,cAHe,EAIzBG,mBAAS,GAJgB,mBAI1Cwe,EAJ0C,KAIpCM,EAJoC,KAMjD,OACE,cAAC,GAAD,CACEtR,KAAMA,EACNsG,MAAK,OAAEjU,QAAF,IAAEA,OAAF,EAAEA,EAAOiU,MACdC,aAAcvL,GAAwBM,WACtC5D,UAAU,UAJZ,SAME,eAAC,GAAD,CAAcsZ,KAAMA,EAAMC,WAAY,EAAE7c,GAAxC,UAEE,cAAC,GAAD,CAAmBqc,MAAOpe,EAAMoe,MAAOC,cAAe,kBAAMY,EAAQ,IAAIV,KAAM,EAA9E,SACE,cAAC,GAAD,CAAalZ,UAAU,sBAAvB,gDAIF,sBAAKA,UAAU,eAAf,UACE,cAAC,GAAD,CAAOmH,MAAO,EAAGnH,UAAU,gBAA3B,sCAIA,cAAC,GAAD,CAAM1F,SAAUqR,EAAKrR,SAAU0hB,KAAMrQ,EAAKqQ,OAE1C,cAAC,GAAD,CAAyBtb,MAAM,2BAAqB4S,OAAO,UAE3D,cAAC,GAAD,CAAatT,UAAU,sBAAvB,SACG4kB,EACG,iFACA,sFAGN,cAAC,GAAD,CAAa5kB,UAAU,UAAvB,SACE,cAAC,GAAD,CACEmX,OAAO,sBACP0M,WAAY,cAACgB,GAAA,EAAD,IACZf,MAAOnpB,EAAMmqB,sBAGjB,cAAC,GAAD,a,6BCbKC,OAzCf,YAAgD,IAAxBC,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,OAAU,EACzB3nB,IAAbnC,EADsC,sBAEhCgB,EAAe,MAArBP,EAFsC,sBAIDd,mBAAS,MAJR,mBAItCoqB,EAJsC,KAItBC,EAJsB,KAMvCC,EAAmBJ,EAAYjT,QAAO,SAACpU,GAAD,OAAgBA,IAAe/B,KAE3E,OACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAQgX,SAAUuS,EAAmBnlB,UAAU,WAAW+S,YAAY,mBAAtE,SACGqS,EAAiB7jB,KAAI,SAAC5D,GAAD,OACpB,cAAC,KAAO0nB,OAAR,CAAgC1lB,MAAOhC,EAAvC,SACGA,GADiBA,QAKxB,cAAC,KAAD,CACEsK,MAAK,wFAA6Eid,EAA7E,KACL1D,UAAW,kBAAMyD,EAAO,CAAEK,KAAMJ,KAChCzD,OAAO,MACPC,WAAW,SAJb,SAME,eAAC,KAAD,CACE3Z,KAAK,UACLoL,UAAW+R,GAAkB/pB,EAC7B+L,KAAM/L,EAAY,cAACoqB,GAAA,EAAD,IAAsB,KAH1C,mBAKSL,EAAc,YAAQA,GAAmB,YCS3CM,OArCf,YAAgD,IAAtBC,EAAqB,EAArBA,UAAWR,EAAU,EAAVA,OAAU,EACzB3nB,IAAbnC,EADsC,sBAEGL,mBAAS,MAFZ,mBAEtC4qB,EAFsC,KAEpBC,EAFoB,KAI7C,OACE,eAAC,IAAD,CAAO3lB,UAAU,mDAAjB,UACE,cAAC,KAAD,CAAQ4S,SAAU+S,EAAqB5S,YAAY,iBAAnD,SACG0S,EAAUlkB,KAAI,SAACjH,GAAD,OACb,cAAC,KAAO+qB,OAAR,CAA0C1lB,MAAOrF,EAAjD,SACGA,GADH,iBAA8BA,SAKlC,cAAC,KAAD,CACE2N,MAAK,wFAA6Eyd,EAA7E,KACLlE,UAAW,kBAAMyD,EAAO,CAAEW,MAAOF,KACjCjE,OAAO,MACPC,WAAW,SAJb,SAME,eAAC,KAAD,CACE3Z,KAAK,UACLoL,UAAWuS,GAAoBvqB,EAC/B+L,KAAM/L,EAAY,cAACoqB,GAAA,EAAD,IAAsB,KAH1C,mBAKSG,EAAgB,YAAQA,GAAqB,YCJ/CG,OAvBf,YAAmC,IAAlBC,EAAiB,EAAjBA,cAAiB,EACd3pB,EAAe,WAA1BL,EADyB,oBAG1BiqB,EAAiBjpB,EAAW,CAChCC,YAAauI,GAAqBC,kBAClCvI,WAAY,gBACZI,eAAgB,2BAChBC,aAAc,qEAPgB,EAUHsa,oBAAS,CACpCC,gBAAiBrc,KAAKC,MAAQsqB,EAC9BjO,WAAW,EACXC,SAAUhc,EAAU,kBAAMiqB,EAAe,CAAEzS,OAAQ,WAAa,OAH1D0S,EAVwB,EAUxBA,QAASrZ,EAVe,EAUfA,QAMjB,OACE,sBAAK3M,UAAU,UAAf,UACGgmB,EADH,IACarZ,EAAU,GAAV,WAAmBA,GAAYA,MC8EjCsZ,OA/Ef,YAAuD,IAAzBtrB,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,QAAS0N,EAAQ,EAARA,KACtCqD,EAAO/L,EAAMhF,GACbgqB,EAAQtoB,EAAa3B,EAAO,cAE5BurB,EAAmBppB,EAAW,CAClCC,YAAauI,GAAqBE,eAClCxI,WAAY,SACZI,eAAgB,8BAChBC,aAAc,0DAGV8oB,EAAkBrpB,EAAW,CACjCC,YAAauI,GAAqBG,cAClCzI,WAAY,QACZI,eAAgB,4BAChBC,aAAc,kEAchB,OAXApC,qBAAU,WACe,eAAd,OAALN,QAAK,IAALA,OAAA,EAAAA,EAAOyrB,WACTvoB,IAAQwoB,QAAR,wCAA6C,GAC7CxoB,IAAQyK,MAAU,OAAL3N,QAAK,IAALA,OAAA,EAAAA,EAAO2rB,UAAP,8BAAkC3rB,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAO2rB,UAAa,uBAAqB,IAGtF3rB,EAAMmrB,cAAgB,MACxBjoB,IAAQyK,KAAR,UAAgBhJ,OAAOwU,KAAKlZ,GAAS,GAArC,2BAA+D,KAEhE,IAGD,eAAC,GAAD,CACE0N,KAAMA,EACNsG,MAAK,OAAEjU,QAAF,IAAEA,OAAF,EAAEA,EAAOiU,MACdC,aAAcvL,GAAwBO,cACtC7D,UAAU,UAJZ,UAME,sBAAKA,UAAU,sBAAf,UACE,qBAAKA,UAAU,uCAAf,SACE,cAAC,GAAD,CAAO8lB,cAAenrB,EAAMmrB,kBAG9B,sBAAK9lB,UAAU,8BAAf,UACE,cAAC,GAAD,CAAOmH,MAAO,EAAGnH,UAAU,gBAA3B,SACG4kB,EAAQ,sBAAqB,2BAEhC,cAAC,GAAD,CAAMtqB,SAAUqR,EAAKrR,SAAU0hB,KAAMrQ,EAAKqQ,aAI7C4I,GAAS,cAAC,GAAD,CAAgBa,UAAW9qB,EAAMmqB,kBAAmBG,OAAQkB,KAErE,OAACxa,QAAD,IAACA,OAAD,EAACA,EAAM4a,gBAGN,cAAC,GAAD,CAAavmB,UAAU,sBAAvB,qDAFA,cAAC,GAAD,CAAcglB,YAAa1lB,OAAOwU,KAAKlZ,GAAUqqB,OAAQiB,IAK3D,eAAC,GAAD,CAAalmB,UAAU,UAAvB,UACE,cAAC,GAAD,CAAMmX,OAAO,YAAY0M,WAAY,cAAC2C,GAAA,EAAD,IAAiB1C,MAAOxkB,OAAOwU,KAAKlZ,KACzE,cAAC,GAAD,CACEuc,OAAO,sBACP0M,WAAY,cAACgB,GAAA,EAAD,IACZf,MAAOnpB,EAAMmqB,uBAIjB,cAAC,GAAD,IAEA,cAAC,GAAD,CAAyBpkB,MAAM,iCAA2B4S,OAAO,cCAxDmT,OAtEf,YAAoD,IAAzB9rB,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,QAAS0N,EAAQ,EAARA,KACnCqD,EAAO/L,EAAMhF,GACb8rB,EAAepqB,EAAa3B,EAAO,UACnCgsB,EAAgBrqB,EAAa3B,EAAO,WAHO,EAING,oBAAS,GAJH,mBAI1C8rB,EAJ0C,KAIzBC,EAJyB,KAM3CnK,EAAiB5f,EAAW,CAChCC,YAAauI,GAAqBD,aAClCrI,WAAY,QACZC,aAAc,kBAAM4pB,GAAgB,IACpC1pB,QAAS,kBAAM0pB,GAAgB,IAC/BzpB,eAAgB,2BAChBC,aAAc,mEAGhB,OACE,eAAC,GAAD,CACEiL,KAAMA,EACNsG,MAAK,OAAEjU,QAAF,IAAEA,OAAF,EAAEA,EAAOiU,MACdC,aAAcvL,GAAwBQ,WACtC9D,UAAU,UAJZ,UAME,eAAC,GAAD,CAAOmH,MAAO,EAAGnH,UAAU,gBAA3B,UACGrF,EAAMmsB,QADT,qBACiCnsB,EAAMmY,OADvC,oCAIA,8BACG6T,GAAiBD,EAChB,eAAC,GAAD,CAAa1mB,UAAU,sBAAvB,+DAC4C,IACzC0mB,EAAe,2CAAiC,0BAGnD,eAAC,IAAD,CAAO1mB,UAAU,IAAjB,UACE,cAAC,KAAD,CAAQkkB,OAAK,EAAC/Q,SAAUyT,EAAiB5e,QAAS,kBAAM0U,EAAe,CAAE4I,MAAM,KAA/E,6BAGA,cAAC,KAAD,CAAQpB,OAAK,EAAC/Q,SAAUyT,EAAiB5e,QAAS,kBAAM0U,EAAe,CAAE4I,MAAM,KAA/E,qCAON,cAAC,GAAD,CAAMhrB,SAAUqR,EAAKrR,SAAU0hB,KAAMrQ,EAAKqQ,OAE1C,cAAC,GAAD,CAAiBphB,QAASA,EAASwZ,UAAU,QAAQC,gBAAgB,YAErE,eAAC,GAAD,CAAarU,UAAU,UAAvB,UACE,cAAC,GAAD,CAAMmX,OAAO,YAAY0M,WAAY,cAAC2C,GAAA,EAAD,IAAiB1C,MAAOxkB,OAAOwU,KAAKlZ,KACzE,cAAC,GAAD,CACEuc,OAAO,sBACP0M,WAAY,cAACgB,GAAA,EAAD,IACZf,MAAOnpB,EAAMmqB,uBAIjB,cAAC,GAAD,IAEA,cAAC,GAAD,CAAyBpkB,MAAM,oCAA8B4S,OAAO,eCkD3DyT,OAlHf,YAAoD,IAAzBpsB,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,QAAS0N,EAAQ,EAARA,KACnCqD,EAAO/L,EAAMhF,GACbgqB,EAAQtoB,EAAa3B,EAAO,cAE5BorB,EAAiBjpB,EAAW,CAChCC,YAAauI,GAAqBC,kBAClCvI,WAAY,gBACZI,eAAgB,2BAChBC,aAAc,qEAGV2pB,EAAqBpC,IAAUjqB,EAAMssB,OAAS,sBAAqB,wBACnEC,EAAgBvsB,EAAMssB,QAAUzgB,SAAa,OAAL7L,QAAK,IAALA,OAAA,EAAAA,EAAOmrB,eAAgB,GAYrE,OAVA7qB,qBAAU,WACsB,eAArB,OAALN,QAAK,IAALA,OAAA,EAAAA,EAAOwsB,kBACLxsB,EAAMssB,OACRppB,IAAQwoB,QAAR,UAAmB1rB,EAAMysB,WAAzB,mBAA8CzsB,EAAMirB,MAApD,cAAuE,GAEvE/nB,IAAQwoB,QAAR,UAAmB1rB,EAAMysB,WAAzB,mBAA8CzsB,EAAMirB,MAApD,iBAA0E,MAG7E,IAGD,eAAC,GAAD,CACEtd,KAAMA,EACNsG,MAAK,OAAEjU,QAAF,IAAEA,OAAF,EAAEA,EAAOiU,MACdC,aAAcvL,GAAwBU,WACtChE,UAAU,0BAJZ,UAM4B,cAAzBrF,EAAMwsB,gBACL,qBAAKnnB,UAAU,eAAf,SACGrF,EAAMssB,OACL,sBAAKjnB,UAAU,GAAf,UACE,cAAC,GAAD,CAAOmH,MAAO,EAAGnH,UAAU,gBAA3B,SACGgnB,IAEH,cAAC,GAAD,CAAahnB,UAAU,sBAAvB,SACGknB,EACC,qFAC8CvsB,EAAMysB,WADpD,mGAKA,gDACYzsB,EAAMysB,WADlB,mIAQN,sBAAKpnB,UAAU,GAAf,UACE,cAAC,GAAD,CAAOmH,MAAO,EAAGnH,UAAU,gBAA3B,SACGgnB,IAEH,eAAC,GAAD,CAAahnB,UAAU,sBAAvB,yBACYrF,EAAMysB,WADlB,2BACsD,IACnDxC,EAAK,gCAAyBjZ,EAAKG,KAA9B,KAAwC,qDAO9B,cAAzBnR,EAAMwsB,gBACL,qBAAKnnB,UAAU,eAAf,SACGrF,EAAMssB,OACL,sBAAKjnB,UAAU,GAAf,UACE,cAAC,GAAD,CAAOmH,MAAO,EAAGnH,UAAU,gBAA3B,SACGgnB,IAEH,eAAC,GAAD,CAAahnB,UAAU,sBAAvB,yBACYrF,EAAMysB,WADlB,0CACqEzsB,EAAM0sB,gBAD3E,UAKF,sBAAKrnB,UAAU,GAAf,UACE,cAAC,GAAD,CAAOmH,MAAO,EAAGnH,UAAU,gBAA3B,SACGgnB,IAEH,eAAC,GAAD,CAAahnB,UAAU,sBAAvB,yBACYrF,EAAMysB,WADlB,+CACuEzsB,EAAM0sB,gBAD7E,IAC+F,IAC5FzC,EAAK,gCAAyBjZ,EAAKG,KAA9B,KAAwC,qDAOxD,eAAC,GAAD,CAAa9L,UAAU,sBAAvB,uCAEGV,OAAOC,OAAO3E,GAAS2G,KAAI,SAAC2S,GAAD,OAC1B,+BACGA,EAAOpI,KADV,SACsBoI,EAAO8H,cAKjC,eAAC,GAAD,WACE,cAAC3I,GAAD,CAAaC,OAAQ,kBAAMyS,EAAe,CAAEzS,OAAQ,WAAY5S,MAAM,wBACtE,cAAC2S,GAAD,CAAaC,OAAQ,kBAAMyS,EAAe,CAAEzS,OAAQ,SAAU5S,MAAM,2BCN7D4mB,OA5Ff,YAAyD,IAAzB3sB,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,QAAS0N,EAAQ,EAARA,KACxCqD,EAAO/L,EAAMhF,GADmC,EAExBE,mBAAS,MAFe,mBAE/CgsB,EAF+C,KAEtCS,EAFsC,OAG1BzsB,mBAAS,MAHiB,mBAG/CgY,EAH+C,KAGvC0U,EAHuC,KAKhDzB,EAAiBjpB,EAAW,CAChCC,YAAauI,GAAqBC,kBAClCvI,WAAY,gBACZI,eAAgB,2BAChBC,aAAc,qEAGhB,OACE,eAAC,GAAD,CACEiL,KAAMA,EACNsG,MAAK,OAAEjU,QAAF,IAAEA,OAAF,EAAEA,EAAOiU,MACdC,aAAcvL,GAAwBS,iBACtC/D,UAAU,UAJZ,UAME,cAAC,GAAD,CAAOmH,MAAO,EAAGnH,UAAU,gBAA3B,+BAIA,eAAC,GAAD,CAAaA,UAAU,sBAAvB,qGAEE,+BACE,mFAC0CrF,QAD1C,IAC0CA,OAD1C,EAC0CA,EAAO8sB,YAAY,GAD7D,wDAIA,0GACA,qHACA,oHACA,0DAAsB9sB,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAO8sB,YAAY/S,KAAK,eAIlD,cAAC,GAAD,CAAMpa,SAAUqR,EAAKrR,SAAU0hB,KAAMrQ,EAAKqQ,OAE1C,eAAC,GAAD,CAAahc,UAAU,UAAvB,UACE,cAAC,GAAD,CAAMmX,OAAO,YAAY0M,WAAY,cAAC2C,GAAA,EAAD,IAAiB1C,MAAOxkB,OAAOwU,KAAKlZ,KACzE,cAAC,GAAD,CACEuc,OAAO,sBACP0M,WAAY,cAACgB,GAAA,EAAD,IACZf,MAAOnpB,EAAMmqB,uBAIjB,cAAC,GAAD,IAEA,eAAC,GAAD,CAAW9kB,UAAU,2BAArB,UACE,6CACA,cAAC,KAAD,CAAQ4S,SAAU2U,EAAYvnB,UAAU,WAAW+S,YAAY,WAA/D,SACGzT,OAAOwU,KAAKlZ,GAAS2G,KAAI,SAAC5D,GAAD,OACxB,cAAC,KAAO0nB,OAAR,CAAgC1lB,MAAOhC,EAAvC,SACGA,GADiBA,QAKxB,4CACA,cAAC,KAAD,CAAQiV,SAAU4U,EAAWxnB,UAAU,WAAW+S,YAAY,UAA9D,SACGzT,OAAOwU,KAAKlZ,GAAS2G,KAAI,SAAC5D,GAAD,OACxB,cAAC,KAAO0nB,OAAR,CAAgC1lB,MAAOhC,EAAvC,SACGA,GADiBA,QAKxB,cAAC,KAAD,CACEoK,KAAK,UACLoL,UAAW2T,IAAYhU,GAAUgU,IAAYhU,EAC7C9K,QAAS,kBACP+d,EAAe,CACbzS,OAAQ,CACNwT,UACAhU,aAPR,4CCbO4U,OA9Bf,YAA4C,IAAXjsB,EAAU,EAAVA,OACzBb,EAAU0D,EAAe7C,EAAQ4H,IACjC1I,EAAQmE,EAAarD,EAAQ4H,IAFM,EAG5BlH,EAAe,MAArBP,EAHkC,sBAIjBd,mBAAS,IAJQ,mBAIlCwN,EAJkC,KAI5Bib,EAJ4B,KAgBzC,GATAtoB,qBAAU,WACRsoB,GAAc,OAAN9nB,QAAM,IAANA,OAAA,EAAAA,EAAS,IAAKoO,EAASpO,EAAO,IAAM,MAC3C,CAACA,KAOCG,EACH,OAAO,cAAC,GAAD,CAAOhB,QAASA,EAASD,MAAOA,EAAO2N,KAAMA,IAGtD,IAAMkb,EA3CR,SAA4B5U,GAC1B,OAAQA,GACN,KAAKtL,GAAwBC,MAC3B,OAAO0Q,GACT,KAAK3Q,GAAwB/C,MAC3B,OAAOoU,GACT,KAAKrR,GAAwBM,WAC3B,OAAO+gB,GACT,KAAKrhB,GAAwBO,cAC3B,OAAOoiB,GACT,KAAK3iB,GAAwBQ,WAC3B,OAAO2iB,GACT,KAAKnjB,GAAwBS,iBAC3B,OAAOujB,GACT,KAAKhkB,GAAwBU,WAC3B,OAAO+iB,GACT,KAAKzjB,GAAwBK,UAC3B,OAAOqd,GACT,QACE,OAAOtS,IAwBa+U,CAAmB9oB,EAAMiU,OAEjD,OACE,eAAC,WAAD,WACE,cAAC,GAAD,CAAgBhU,QAASA,EAASD,MAAOA,EAAO2N,KAAMA,EAAM1M,GAAIA,IAChE,cAAC4nB,EAAD,CAAiB5oB,QAASA,EAASD,MAAOA,EAAO2N,KAAMA,Q,8BC7DvDqf,GAAmB,SAAC9a,GACxB,IAAMpL,EAAQC,EAAQ0Q,QAAQvF,GAC9B,OAAON,KAAKyR,IAAIvc,GAAS,GAG3B,SAASyV,GAAT,GAA2C,IAA3B0Q,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,MAAO7nB,EAAa,EAAbA,UACrB8nB,EAAYH,GAAiBC,EAAK,IAClCG,EAAaJ,GAAiBE,EAAM,IACpCG,EAAgB,eAEtB,OACE,sBAAKhoB,UAAWuG,aAAK,SAAUvG,GAA/B,UACE,sBAAKA,UAAWuG,aAAKyhB,EAAD,UAAmBA,EAAnB,oBAA6CA,EAA7C,cAAgEF,IAApF,UACE,uBAAM9nB,UAAU,gBAAhB,UACE,cAACioB,GAAA,EAAD,IADF,IACwB,cAACC,GAAA,EAAD,IADxB,IAC0C,cAACA,GAAA,EAAD,OAE1C,sBAAMloB,UAAU,eAAhB,SAAgC4nB,OAElC,sBAAK5nB,UAAWuG,aAAKyhB,EAAD,UAAmBA,EAAnB,qBAA8CA,EAA9C,cAAiED,IAArF,UACE,uBAAM/nB,UAAU,gBAAhB,UACE,cAACkoB,GAAA,EAAD,IADF,IACoB,cAACA,GAAA,EAAD,IADpB,IACsC,cAACC,GAAA,EAAD,OAEtC,sBAAMnoB,UAAU,eAAhB,SAAgC6nB,UAYxC3Q,GAAKxQ,aAAe,CAClB0hB,SAAU,IAGGphB,sBAAKkQ,ICNLmR,OA/Bf,YAAqD,IAA5BC,EAA2B,EAA3BA,iBAAkBzM,EAAS,EAATA,MACzC,OACE,sBAAK7b,UAAU,mBAAf,UACE,cAAC,GAAD,gEACA,cAAC,GAAD,CAAa8G,WAAS,EAAtB,sFACA,qBAAK9G,UAAU,8BAAf,SACG6b,EAAMta,KAAI,SAAC8b,GAAD,OACT,wBAEErd,UAAU,2BACVgI,QAAS,kBAAMsgB,EAAiB,CAAEvQ,OAAQsF,EAAKrO,MAHjD,SAKE,cAAC,GAAD,CAAM4Y,KAAMvK,EAAKuK,KAAMC,MAAOxK,EAAKwK,SALrC,sBACsBxK,EAAKrO,cC2EtBuZ,OA3Ef,YAAmD,IAAzB5tB,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,QAAS0N,EAAQ,EAARA,KAClC5L,EAAWD,EAAY7B,EAASD,GADU,EAExBG,mBAAS,GAFe,mBAEzCwe,EAFyC,KAEnCM,EAFmC,KAG1C4O,EAAU9tB,EAAgBC,EAAOC,EAAS,WAC1C6tB,EAAgBnsB,EAAa3B,EAAO,WAEpC2tB,EAAmBxrB,EAAW,CAClCC,YAAa2I,GAAgBC,YAC7B3I,WAAY,cACZC,aAAc,kBAAM2c,EAAQ,IAC5Bzc,QAAS,kBAAMyc,EAAQ,IACvBxc,eAAgB,gCAChBC,aAAc,mDAGhB,OACE,cAAC,GAAD,CACEiL,KAAMA,EACNsG,MAAK,OAAEjU,QAAF,IAAEA,OAAF,EAAEA,EAAOiU,MACdC,aAAcvL,GAAuBW,WACrCjE,UAAU,qBAJZ,SAME,eAAC,GAAD,CAAcsZ,KAAMA,EAAMC,WAAY,EAAE7c,GAAxC,UAEE,eAAC,GAAD,CACEqc,MAAOpe,EAAMoe,MACbC,cAAe,kBAAMY,EAAQ,IAC7Bhf,QAASA,EACTue,MAAOxe,EAAMwe,MACbD,KAAM,GALR,UAOE,eAAC,GAAD,CAAapS,WAAS,EAAtB,0BAEE,uBAAM9G,UAAU,oDAAhB,kBAA0ErF,EAAMuE,cAChF,uBACCupB,EACC,sBAAMzoB,UAAU,oDAAhB,qBAEA,cAAC,GAAD,CAAYkU,OAAQsU,EAASnQ,WAAS,EAAC3O,KAAK,UAPhD,yBAWA,qBAAK1J,UAAU,2CAIjB,cAAC,WAAD,UACIyoB,EAOA,cAAC,GAAD,CAAeH,iBAAkBA,EAAkBzM,MAAOlhB,EAAMkhB,QANhE,cAAC,GAAD,CACEjhB,QAASA,EACTqN,MAAK,UAAKugB,EAAQ1c,KAAb,oCACLoM,YAAY,6EAQlB,cAAC,GAAD,CACEtd,QAASA,EACTqN,MAAM,UACNiQ,YAAY,2DCzEhBwQ,GAAkB,SAACjZ,EAAQkZ,EAAYC,EAAQC,EAAY/V,GAC/D,IAAMgW,EAAmB,iBACnBC,EAAWtZ,EAAS,IAAM,EAAI,OAAS,MAC7C,OAAOlJ,aACLuiB,EADS,UAENA,EAFM,aAEeC,GACxBJ,GAAcC,IAAWnZ,GAAzB,UAAsCqZ,EAAtC,YACAD,GAAc/V,IAAWrD,GAAzB,UAAsCqZ,EAAtC,cAIJ,SAASE,GAAT,GAUI,IATF3L,EASC,EATDA,KASC,IARDuL,cAQC,MARQ,EAQR,MAPDD,kBAOC,aAND7V,cAMC,MANQ,EAMR,MALD+V,kBAKC,aAJDI,kBAIC,MAJY,EAIZ,MAHDC,iBAGC,MAHW,QAGX,MAFD5Z,eAEC,SADD6Z,EACC,EADDA,WAEMpiB,EAAY,SACZqiB,EAAkB,gBAClBC,EAAiB,eACjBzS,EAASrK,KAAKyR,IAAI4K,EAAS9V,GAEjC,OACE,sBAAK9S,UAAWuG,aAAK,GAAD,OAAIQ,GAAauI,GAAO,UAAOvI,EAAP,eAA5C,UACE,sBACEyT,MAAM,6BACNtL,QAAQ,cACRuL,SAAS,UACTza,UAAWuG,aAAK,GAAD,OAAIQ,EAAJ,UAJjB,UAME,yBAEA,sBACE2T,EAAE,mNACFpZ,KAAK,YAGNunB,GACC,sBACE7Z,GAAG,SACHhP,UAAWuG,aAAK,GAAD,OAAIQ,EAAJ,YAAyBuI,GAAO,UAAO8Z,EAAP,iBAC/Cpf,MAAO,CAAEsf,UAAU,UAAD,OAAqB,EAATxW,EAAZ,SAClB4H,EAAE,uFAIN,oBAAG1a,UAAU,iBAAb,UACE,sBACEgP,GAAG,sBACHhP,UAAW0oB,GAAgB,GAAIC,EAAYC,EAAQC,EAAY/V,GAC/D4H,EAAE,qZAEJ,sBACE1L,GAAG,qBACHhP,UAAW0oB,GAAgB,EAAGC,EAAYC,EAAQC,EAAY/V,GAC9D4H,EAAE,uaAEJ,sBACE1L,GAAG,qBACHhP,UAAW0oB,GAAgB,EAAGC,EAAYC,EAAQC,EAAY/V,GAC9D4H,EAAE,smBAEJ,sBACE1L,GAAG,qBACHhP,UAAW0oB,GAAgB,EAAGC,EAAYC,EAAQC,EAAY/V,GAC9D4H,EAAE,0IAGJ,sBACE1L,GAAG,qBACHhP,UAAW0oB,GAAgB,EAAGC,EAAYC,EAAQC,EAAY/V,GAC9D4H,EAAE,gbAGJ,sBACE1L,GAAG,qBACHhP,UAAW0oB,GAAgB,EAAGC,EAAYC,EAAQC,EAAY/V,GAC9D4H,EAAE,4PAGJ,sBACE1L,GAAG,qBACHhP,UAAW0oB,GAAgB,EAAGC,EAAYC,EAAQC,EAAY/V,GAC9D4H,EAAE,2HAGJ,sBACE1L,GAAG,qBACHhP,UAAW0oB,GAAgB,EAAGC,EAAYC,EAAQC,EAAY/V,GAC9D4H,EAAE,sQAGJ,sBACE1L,GAAG,qBACHhP,UAAW0oB,GAAgB,EAAGC,EAAYC,EAAQC,EAAY/V,GAC9D4H,EAAE,uRAEJ,sBACE1L,GAAG,qBACHhP,UAAW0oB,GAAgB,EAAGC,EAAYC,EAAQC,EAAY/V,GAC9D4H,EAAE,kFAGJ,sBACE1L,GAAG,sBACHhP,UAAW0oB,IAAiB,GAAIC,EAAYC,EAAQC,EAAY/V,GAChE4H,EAAE,qZAEJ,sBACE1L,GAAG,qBACHhP,UAAW0oB,IAAiB,EAAGC,EAAYC,EAAQC,EAAY/V,GAC/D4H,EAAE,uaAEJ,sBACE1L,GAAG,qBACHhP,UAAW0oB,IAAiB,EAAGC,EAAYC,EAAQC,EAAY/V,GAC/D4H,EAAE,smBAEJ,sBACE1L,GAAG,qBACHhP,UAAW0oB,IAAiB,EAAGC,EAAYC,EAAQC,EAAY/V,GAC/D4H,EAAE,0IAEJ,sBACE1L,GAAG,qBACHhP,UAAW0oB,IAAiB,EAAGC,EAAYC,EAAQC,EAAY/V,GAC/D4H,EAAE,gbAEJ,sBACE1L,GAAG,qBACHhP,UAAW0oB,IAAiB,EAAGC,EAAYC,EAAQC,EAAY/V,GAC/D4H,EAAE,4PAEJ,sBACE1L,GAAG,qBACHhP,UAAW0oB,IAAiB,EAAGC,EAAYC,EAAQC,EAAY/V,GAC/D4H,EAAE,2HAEJ,sBACE1L,GAAG,qBACHhP,UAAW0oB,IAAiB,EAAGC,EAAYC,EAAQC,EAAY/V,GAC/D4H,EAAE,sQAEJ,sBACE1L,GAAG,qBACHhP,UAAW0oB,IAAiB,EAAGC,EAAYC,EAAQC,EAAY/V,GAC/D4H,EAAE,uRAEJ,sBACE1L,GAAG,qBACHhP,UAAW0oB,IAAiB,EAAGC,EAAYC,EAAQC,EAAY/V,GAC/D4H,EAAE,kFAGJ,sBACE1L,GAAG,mBACHhP,UAAW0oB,GAAgB,EAAGC,EAAYC,EAAQC,EAAY/V,GAC9D4H,EAAE,qXAILiO,GACC,sBACE3Z,GAAG,SACHhP,UAAWuG,aAAK,GAAD,OAAIQ,EAAJ,YAAyBuI,GAAO,UAAO8Z,EAAP,iBAC/Cpf,MAAO,CAAEsf,UAAU,UAAD,OAAqB,EAATV,EAAZ,SAClBlO,EAAE,4GAILyO,GACC,oBAAGnpB,UAAWuG,aAAK,GAAD,OAAIQ,EAAJ,aAAlB,UACc,IAAX6P,GACC,8BACE,sBACEtV,KAAK,UACLoZ,EAAE,kGAEJ,sBACEA,EAAE,yGACFpZ,KAAK,YAKC,IAAXsV,GACC,8BACE,sBACEtV,KAAK,UACLoZ,EAAE,kGAEJ,sBACEA,EAAE,8RACFpZ,KAAK,YAKC,IAAXsV,GACC,oBAAG5W,UAAWuG,aAAK,GAAD,OAAIQ,EAAJ,aAAlB,UACE,sBACEzF,KAAK,UACLoZ,EAAE,kGAEJ,sBACEA,EAAE,yRACFpZ,KAAK,gBAOE,IAAhB2nB,GACC,oBAAGjpB,UAAWuG,aAAK,GAAD,OAAI8iB,EAAJ,YAAsBA,EAAtB,SAAlB,UACE,sBACE/nB,KAAK,UACLoZ,EAAE,kNAEJ,sBACEpZ,KAAK,UACLoZ,EAAE,4HAEJ,uBAAM9E,EAAE,KAAKC,EAAE,KAAKvU,KAAK,UAAU0I,MAAO,CAAEuf,WAAY,SAAxD,oBACUL,EADV,yCAMY,IAAfD,GACC,oBAAGjpB,UAAWuG,aAAK,GAAD,OAAI8iB,EAAJ,YAAsBA,EAAtB,SAAlB,UACE,uBAAMzT,EAAE,MAAMC,EAAE,KAAKvU,KAAK,UAAU0I,MAAO,CAAEuf,WAAY,OAAzD,oBACUL,EADV,sCAGA,sBACE5nB,KAAK,UACLoZ,EAAE,kNAEJ,sBACEpZ,KAAK,UACLoZ,EAAE,oIAKV,cAAC,GAAD,CAAMkN,KAAMvK,EAAKuK,KAAMC,MAAOxK,EAAKwK,MAAO7nB,UAAU,oBAqB1DgpB,GAAKtiB,aAAe,CAClBkiB,OAAQ,EACRD,YAAY,EACZ7V,OAAQ,EACR+V,YAAY,EACZM,YAAY,EACZF,WAAY,EACZC,UAAW,QACX5Z,SAAS,GAGItI,sBAAKgiB,ICtRdQ,GAAU,SAACnM,GACf,OAAoB,IAAhBA,EAAKvK,OACA,8BAGLuK,EAAKvK,OAAS,EACV,IAAN,OAAWvG,KAAKyR,IAAIX,EAAKvK,QAAzB,sBAA8CuK,EAAKuK,KAAnD,KAGI,IAAN,OAAWvK,EAAKvK,OAAhB,sBAAoCuK,EAAKwK,MAAzC,MAwDa4B,OArDf,YAAgD,IAArBC,EAAoB,EAApBA,WAAYrM,EAAQ,EAARA,KAAQ,EACrBviB,mBAAS,IADY,mBACtC6uB,EADsC,KAChCC,EADgC,KAG7C,OACE,sBAAK5pB,UAAU,sBAAf,UACE,cAAC,GAAD,gCACA,eAAC,GAAD,CAAa8G,WAAS,EAAtB,4EAC4D0iB,GAAQnM,GADpE,uCAGE,uBAHF,UAKE,+BACE,0IAGA,qIACA,8HACA,iGACA,2GAIJ,cAAC,GAAD,CAAMA,KAAMA,EAAMwL,YAAU,EAAC/V,OAAQuK,EAAKvK,SAE1C,eAAC,IAAD,CAAO9S,UAAU,qDAAjB,UACE,cAAC,KAAD,CACE4S,SAAU,SAACC,GAAD,OAAO+W,EAAQ/W,EAAEC,OAAOnT,MAAMkqB,gBACxC9W,YAAY,uBACZ/S,UAAU,oBAEZ,cAAC,KAAD,CACE+H,KAAK,UACLoL,UAAW3M,QAAQmjB,GACnB3hB,QAAS,WACP0hB,EAAW,CAAEC,UAJjB,gCCoBOG,OAzDf,YAAkD,IAAzBnvB,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,QAAS0N,EAAQ,EAARA,KACjC5L,EAAWD,EAAY7B,EAASD,GADS,EAEvBG,mBAAS,GAFc,mBAExCwe,EAFwC,KAElCM,EAFkC,KAGzC4O,EAAU9tB,EAAgBC,EAAOC,EAAS,WAC1C6tB,EAAgBnsB,EAAa3B,EAAO,WAEpC+uB,EAAa5sB,EAAW,CAC5BC,YAAa2I,GAAgBE,WAC7B5I,WAAY,cACZC,aAAc,kBAAM2c,EAAQ,IAC5Bzc,QAAS,kBAAMyc,EAAQ,IACvBxc,eAAgB,6BAChBC,aAAc,kDAGhB,OACE,cAAC,GAAD,CACEiL,KAAMA,EACNsG,MAAK,OAAEjU,QAAF,IAAEA,OAAF,EAAEA,EAAOiU,MACdC,aAAcvL,GAAuBY,UACrClE,UAAU,oBAJZ,SAME,eAAC,GAAD,CAAcsZ,KAAMA,EAAMC,WAAY,EAAE7c,GAAxC,UAEE,cAAC,WAAD,UACI+rB,EAWA,cAAC,GAAD,CAAiBpL,KAAM1iB,EAAM0iB,KAAMqM,WAAYA,IAV/C,cAAC,GAAD,CACE9uB,QAASA,EACTqN,MAAK,UAAKugB,EAAQ1c,KAAb,oCACLoM,YAAY,iDAHd,SAKE,qBAAKlY,UAAU,8BAAf,SACE,cAAC,GAAD,CAAM4nB,KAAMjtB,EAAM0iB,KAAKuK,KAAMC,MAAOltB,EAAM0iB,KAAKwK,cASvD,cAAC,GAAD,CACEjtB,QAASA,EACTqN,MAAM,UACNiQ,YAAY,2DC6CP6R,OA7Ff,YAQI,IAPF7qB,EAOC,EAPDA,WACA8qB,EAMC,EANDA,eACAC,EAKC,EALDA,iBACAjrB,EAIC,EAJDA,eACAkrB,EAGC,EAHDA,YACA7M,EAEC,EAFDA,KACAoL,EACC,EADDA,cACC,EAC2B3tB,mBAAS,GADpC,mBACM8tB,EADN,KACcuB,EADd,KAGD,OACE,sBAAKnqB,UAAU,yBAAf,UACE,cAAC,GAAD,UACGyoB,EACC,gEAEA,iDAAoBvpB,EAApB,iBAGJ,eAAC,GAAD,CAAa4H,WAAS,EAAtB,0CAC4B,sBAAM9G,UAAU,+BAAhB,SAAgDqd,EAAKsM,OADjF,gBAEK,IACH,mCACGtM,EAAKuK,KADR,IACevK,EAAKwK,SAJtB,OASA,cAAC,GAAD,CAAMxK,KAAMA,EAAMwL,YAAY,EAAO/V,OAAQuK,EAAKvK,OAAQ6V,WAAY3pB,EAAgB4pB,OAAQA,IAE7F5pB,EACC,cAAC,GAAD,CAAa8H,WAAS,EAAtB,SACG2hB,EACC,kGAEA,+BACE,sJAIA,qGACsE,IACnEwB,EAAmB,WAAU,cAAC,GAAD,CAAY/V,OAAQ8V,IAFpD,gEASN,cAAC,GAAD,CAAaljB,WAAS,EAAtB,4SAOD9H,GACC,gCACE,cAAC,KAAD,CAAQmd,aAAc,EAAG9R,KAAM,GAAIC,IAAK,GAAIsI,SAAUuX,IACrDF,GACC,qBAAKjqB,UAAU,qDAAf,SACE,eAAC,KAAD,CACE+H,KAAK,UACLC,QAAS,WACPkiB,EAAY,CAAEtE,MAAOgD,KAEvBzV,UAAW8W,EALb,8BAOoBrB,cCXnBwB,OAvDf,YAA+C,IAAzBzvB,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,QAAS0N,EAAQ,EAARA,KAC9B5L,EAAWD,EAAY7B,EAASD,GADM,EAEpBG,mBAAS,GAFW,mBAErCwe,EAFqC,KAE/BM,EAF+B,KAGtC4O,EAAU9tB,EAAgBC,EAAOC,EAAS,WAC1CyvB,EAAa3vB,EAAgBC,EAAOC,EAAS,kBAC7CqvB,EAAmB3tB,EAAa3B,EAAO,kBACvC8tB,EAAgBnsB,EAAa3B,EAAO,WACpCqE,EAAiBD,EAAkBpE,EAAOC,GAE1CsvB,EAAcptB,EAAW,CAC7BC,YAAa2I,GAAgBG,YAC7B7I,WAAY,eACZC,aAAc,kBAAM2c,EAAQ,IAC5Bzc,QAAS,kBAAMyc,EAAQ,IACvBxc,eAAgB,8BAChBC,aAAc,qDAGhB,OACE,cAAC,GAAD,CACEiL,KAAMA,EACNsG,MAAK,OAAEjU,QAAF,IAAEA,OAAF,EAAEA,EAAOiU,MACdC,aAAcvL,GAAuBa,MACrCnE,UAAU,gBAJZ,SAME,eAAC,GAAD,CAAcsZ,KAAMA,EAAMC,WAAY,EAAE7c,GAAxC,UAEE,cAAC,GAAD,CACEwC,WAAYvE,EAAMuE,WAClBspB,QAASA,EACTwB,eAAgBK,EAChBJ,iBAAkBA,EAClBC,YAAaA,EACblrB,eAAgBA,EAChBqe,KAAM1iB,EAAM0iB,KACZoL,cAAeA,IAIjB,cAAC,GAAD,CACE7tB,QAASA,EACTqN,MAAM,UACNiQ,YAAY,2D,oBCgCPoS,OA5Ef,YAOI,IANFprB,EAMC,EANDA,WACAqrB,EAKC,EALDA,gBACAC,EAIC,EAJDA,sBACAxrB,EAGC,EAHDA,eACAyrB,EAEC,EAFDA,iBACApN,EACC,EADDA,KAEA,OACE,sBAAKrd,UAAU,yBAAf,UACE,eAAC,GAAD,2BAAqBd,EAArB,qBACA,eAAC,GAAD,CAAa4H,WAAS,EAAtB,oFACiEuW,EAAKuL,OADtE,eAC0F,IACxF,sBAAM5oB,UAAU,+BAAhB,SAAgDqd,EAAKsM,OAFvD,gBAEiF,IAC/E,mCACGtM,EAAKuK,KADR,IACevK,EAAKwK,SAJtB,OASA,cAAC,GAAD,CAAMxK,KAAMA,EAAMwL,YAAY,EAAO/V,OAAQuK,EAAKvK,OAAQ6V,YAAU,EAACC,OAAQvL,EAAKuL,SAEjF5pB,EACC,eAAC,GAAD,CAAa8H,WAAS,EAAtB,8EAEE,uBACC0jB,EAAwB,WAAU,cAAC,GAAD,CAAYtW,OAAQqW,IAHzD,iDAIqB,uBAJrB,2GAQA,cAAC,GAAD,CAAazjB,WAAS,EAAtB,wLAMD0jB,GACC,qBAAKxqB,UAAU,qDAAf,SACE,eAAC,IAAD,WACE,eAAC,KAAD,CACE+H,KAAK,UACLC,QAAS,WACPyiB,EAAiB,CAAExB,YAAa,KAHpC,UAME,cAACyB,GAAA,EAAD,IANF,2BAQA,eAAC,KAAD,CACE3iB,KAAK,UACLC,QAAS,WACPyiB,EAAiB,CAAExB,WAAY,KAHnC,iCAMsB,cAAC0B,GAAA,EAAD,gBCCnBC,OArDf,YAA+C,IAAzBjwB,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,QAAS0N,EAAQ,EAARA,KAC9B5L,EAAWD,EAAY7B,EAASD,GADM,EAEpBG,mBAAS,GAFW,mBAErCwe,EAFqC,KAE/BM,EAF+B,KAGtC4O,EAAU9tB,EAAgBC,EAAOC,EAAS,WAC1C2vB,EAAkB7vB,EAAgBC,EAAOC,EAAS,mBAClD4vB,EAAwBluB,EAAa3B,EAAO,mBAC5CqE,EAAiBD,EAAkBpE,EAAOC,GAE1C6vB,EAAmB3tB,EAAW,CAClCC,YAAa2I,GAAgBI,iBAC7B9I,WAAY,qBACZC,aAAc,kBAAM2c,EAAQ,IAC5Bzc,QAAS,kBAAMyc,EAAQ,IACvBxc,eAAgB,8BAChBC,aAAc,qDAGhB,OACE,cAAC,GAAD,CACEiL,KAAMA,EACNsG,MAAK,OAAEjU,QAAF,IAAEA,OAAF,EAAEA,EAAOiU,MACdC,aAAcvL,GAAuBc,YACrCpE,UAAU,gBAJZ,SAME,eAAC,GAAD,CAAcsZ,KAAMA,EAAMC,WAAY,EAAE7c,GAAxC,UAEE,cAAC,GAAD,CACEwC,WAAiC,MAArBvE,EAAMuE,WAAqB,IAAM,IAC7CspB,QAASA,EACT+B,gBAAiBA,EACjBC,sBAAuBA,EACvBC,iBAAkBA,EAClBzrB,gBAAiBA,EACjBqe,KAAM1iB,EAAM0iB,OAId,cAAC,GAAD,CACEziB,QAASA,EACTqN,MAAM,UACNiQ,YAAY,2DC0FP2S,OAxEf,YAAgD,IAAD,EAAxBlwB,EAAwB,EAAxBA,MAAgB2N,GAAQ,EAAjB1N,QAAiB,EAAR0N,MAC/BsY,EAAkB9jB,EAAW,CACjCC,YAAa0H,GAASS,cACtBlI,WAAY,aACZI,eAAgB,sCAChBC,aAAc,2DAiBRsP,EAAYgL,oBAAS,CAC3BC,gBAAiBlL,GAAW,GAC5BoL,SAhBkB,WAClB,IAAMgT,EArBa,SAACnrB,GACtB,OAAQA,GACN,KAAK,EACL,KAAK,EACH,MAAO,UACT,KAAK,EACH,MAAO,OACT,QACE,MAAO,SAaqBorB,CAAepwB,EAAMqwB,gBAAgBrwB,EAAMuE,YAAY+rB,KAErFptB,IAAQitB,GAjEZ,SAAkCE,EAAiB7rB,GAAwB,IAAlB+rB,EAAiB,wDAChED,EAAaD,EAAbC,IAAKzvB,EAAQwvB,EAARxvB,IAEb,OAAY,IAARyvB,EACI,UAAN,OAAiB9rB,EAAjB,mEAA6E3D,EAA7E,oBAIU,IAARyvB,EACI,0BAAN,OAAiC9rB,EAAjC,qBAGU,IAAR8rB,GAAaC,EACT,yBAAN,OACkB/rB,EADlB,mBACiC8rB,EADjC,4CACwEzvB,EADxE,4FAMU,IAARyvB,EACI,oCAAN,OAA2C9rB,GAGvC,kBAAN,OACaA,EADb,mBAC4B8rB,EAD5B,kDACsEzvB,EADtE,kBA2CI2vB,CACExwB,EAAMqwB,gBAAgBrwB,EAAMuE,YAC5BvE,EAAMuE,WACNvE,EAAMywB,eAER,GAEFvtB,IAAQyK,KA7CZ,SAAuC0iB,EAAiB7rB,GAAO,IACrD8rB,EAAQD,EAARC,IAER,OAAY,IAARA,EACI,gDAAN,OACyC9rB,EADzC,aAKI,kBAAN,OACaA,EADb,6CACsD8rB,EADtD,iBAoCeI,CAA8B1wB,EAAMqwB,gBAAgB9B,GAAYA,GAAY,IAMzFrR,WAAW,IAHLlL,QAMFuc,EAAiC,MAArBvuB,EAAMuE,WAAqB,IAAM,IAEnD,OACE,eAAC,GAAD,CACEoJ,KAAMA,EACNsG,MAAK,OAAEjU,QAAF,IAAEA,OAAF,EAAEA,EAAOiU,MACdC,aAAcvL,GAAuBe,OACrCrE,UAAU,gBAJZ,UAME,cAAC,GAAD,oCACA,cAAC,GAAD,CACEqd,KAAM1iB,EAAM0iB,KACZsL,WAAYhc,EAAU,EACtBic,OAAQjuB,EAAM0iB,KAAKuL,OACnBC,WAAYlc,EAAU,EACtBmG,OAAQnY,EAAM0iB,KAAKvK,OACnBqW,WAAYxc,EAAU,EACtBiK,OAAM,OAAEjc,QAAF,IAAEA,GAAF,UAAEA,EAAOqwB,uBAAT,aAAE,SAAyBrwB,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAOuE,YAAY+rB,IACpDhC,WAAYtuB,EAAM0iB,KAAKiO,MACvBpC,UAAWA,EACX5Z,SAAO,IAET,eAAC,GAAD,CAAaxI,WAAS,EAAtB,0CAEE,+BACE,oDACA,iDACA,gEACA,oEACA,2FAIJ,cAAC2M,GAAD,CAAiBH,OAAQ,kBAAMsN,EAAgB,KAAKlgB,MAAM,+CC3DjD6qB,OA9Bf,YAA4C,IAAX9vB,EAAU,EAAVA,OACzBb,EAAU0D,EAAe7C,EAAQ4H,IACjC1I,EAAQmE,EAAarD,EAAQ4H,IAFM,EAG5BlH,EAAe,MAArBP,EAHkC,sBAIjBd,mBAAS,IAJQ,mBAIlCwN,EAJkC,KAI5Bib,EAJ4B,KAgBzC,GATAtoB,qBAAU,WACRsoB,GAAc,OAAN9nB,QAAM,IAANA,OAAA,EAAAA,EAAS,IAAKoO,EAASpO,EAAO,IAAM,MAC3C,CAACA,KAOCG,EACH,OAAO,cAAC,GAAD,CAAOhB,QAASA,EAASD,MAAOA,EAAO2N,KAAMA,IAGtD,IAAMkb,EA3CR,SAA4B5U,GAC1B,OAAQA,GACN,KAAKtL,GAAuBC,MAC1B,OAAO0Q,GACT,KAAK3Q,GAAuB/C,MAC1B,OAAOoU,GACT,KAAKrR,GAAuBW,WAC1B,OAAOskB,GACT,KAAKjlB,GAAuBY,UAC1B,OAAO4lB,GACT,KAAKxmB,GAAuBa,MAC1B,OAAOimB,GACT,KAAK9mB,GAAuBc,YAC1B,OAAOwmB,GACT,KAAKtnB,GAAuBe,OAC1B,OAAOwmB,GACT,KAAKvnB,GAAuBK,UAC1B,OAAOqd,GACT,QACE,OAAOtS,IAwBa+U,CAAmB9oB,EAAMiU,OAEjD,OACE,eAAC,WAAD,WACE,cAAC,GAAD,CAAgBhU,QAASA,EAASD,MAAOA,EAAO2N,KAAMA,EAAM1M,GAAIA,IAChE,cAAC4nB,EAAD,CAAiB5oB,QAASA,EAASD,MAAOA,EAAO2N,KAAMA,QCF9CkjB,OA1Df,YAA0E,IAAD,IAA5CC,aAA4C,MAApC,GAAoC,EAAhCC,EAAgC,EAAhCA,oBAAqBC,EAAW,EAAXA,QAAW,EAC7B7wB,mBAAS,IADoB,mBAChE8wB,EADgE,KACjDC,EADiD,KAGjEC,EAAqBxsB,OAAOwU,KAAK8X,GACjCG,EAA4C,IAA9BD,EAAmB1f,OAmBvC,OACE,sBAAKpM,UAAU,wBAAf,UACE,eAAC,GAAD,CAAO6G,OAAK,EAAZ,8CAA+C8kB,EAAQ7f,QAEvD,cAAC,GAAD,CAAajF,OAAK,EAAlB,0HAIA,oBAAI7G,UAAU,cAAd,SACGyrB,EAAMlqB,KAAI,SAACyqB,GACV,OACE,oBAAIhsB,UAAU,oBAAd,SACE,yBAAQA,UAAU,sBAAsBgI,QAAS,kBAxBvCikB,EAwB0DD,EAAKhd,QAvBnF6c,GAAiB,SAAC9N,GAChB,IAAMqG,EAAQ,eAAQrG,GAMtB,OALIqG,EAAS6H,UACJ7H,EAAS6H,GAEhB7H,EAAS6H,IAAU,EAEd7H,KARU,IAAC6H,GAwBV,UACE,sBAAMjsB,UAAU,oBAAhB,SAAqCgsB,EAAKhU,OAC1C,sBAAMhY,UAAU,oBAAhB,SAAqC4rB,EAAcI,EAAKhd,KAAO,cAAC8F,GAAA,EAAD,UAH5BkX,EAAKhd,SAUlD,cAAC,GAAD,CACEtO,MAAM,eACNwG,KAAM,cAAC4V,GAAA,EAAD,IACN/U,KAAK,UACLC,QAAS,kBAAM0jB,EAAoB,CAAErQ,MAAOyQ,KAC5C3Y,SAAU4Y,EACVjU,SA5CuB,WAC3B,IAAMoU,EAAkBT,EAAM,GAAGzc,GACjC0c,EAAoB,CAAErQ,MAAO,CAAC6Q,MA2C1B3T,SAAU,GACVC,UAAWuT,QCgDJI,OA1Ff,YAAuD,IAAD,EAAxBxxB,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,QAAS0N,EAAQ,EAARA,KACtC5L,EAAWD,EAAY7B,EAASD,GAChCgxB,EAAUjxB,EAAgBC,EAAOC,EAAS,WAC1CwxB,EAAgB9vB,EAAa3B,EAAO,WAHU,EAI5BG,mBAAS,GAJmB,mBAI7Cwe,EAJ6C,KAIvCM,EAJuC,KAMpD3e,qBAAU,WAAO,IAAD,EACD,IAATqe,IAAA,UAAc3e,EAAM0xB,0BAApB,aAAc,EAA0BrU,OAC1Cna,IAAQyK,KAAR,0CAAgD3N,EAAM0xB,mBAAmBrU,MAAQ,KAElF,CAACsB,EAAD,OAAO3e,QAAP,IAAOA,OAAP,EAAOA,EAAO0xB,mBAAmBrU,OAEpC,IAAM0T,EAAsB5uB,EAAW,CACrCC,YAAagJ,GAAeC,yBAC5BhJ,WAAY,eACZC,aAAc,kBAAM2c,EAAQ,IAC5Bzc,QAAS,kBAAMyc,EAAQ,IACvBxc,eAAgB,iEAChBC,aAAc,qEAGhB,OACE,cAAC,GAAD,CACEiL,KAAMA,EACNsG,MAAK,OAAEjU,QAAF,IAAEA,OAAF,EAAEA,EAAOiU,MACdC,aAAcvL,GAAkBgB,eAChCtE,UAAU,yBAJZ,SAME,eAAC,GAAD,CAAcsZ,KAAMA,EAAMC,WAAY,EAAE7c,GAAxC,UAEE,eAAC,GAAD,CAAmBqc,MAAOpe,EAAMoe,MAAOC,cAAe,kBAAMY,EAAQ,IAAIV,KAAM,EAA9E,UACE,eAAC,GAAD,CAAapS,WAAS,EAAtB,8BAEE,sBAAM9G,UAAU,oDAAhB,SACGosB,EACC,UAEA,qCACE,cAAC,GAAD,CAAQpd,GAAI2c,EAAQ9Z,WADtB,IACoC8Z,EAAQ7f,UAPlD,+BAW2B,wBACnB,OAALnR,QAAK,IAALA,OAAA,EAAAA,EAAO2xB,aAAP,qCAAgD3xB,EAAM2xB,aAAgB,kCAEzE,sBAAKtsB,UAAU,sCAAf,6BAEE,uBACA,cAAC,KAAD,CACEshB,QAAO,UAAE3mB,EAAM4nB,kBAAR,QAAsB,EAC7BgK,OAAO,SACPlL,YAAa,CACX,KAAM,UACN,MAAO,UACP,OAAQ,mBAOhB,cAAC,WAAD,UACG+K,EACC,cAAC,GAAD,CACExxB,QAASA,EACTqN,MAAM,mCACNiQ,YAAY,6DAGd,cAAC,GAAD,CACEuT,MAAK,OAAE9wB,QAAF,IAAEA,OAAF,EAAEA,EAAO8wB,MACdC,oBAAqBA,EACrBC,QAASA,MAMf,cAAC,GAAD,CAAa/wB,QAASA,EAASqN,MAAM,UAAUiQ,YAAY,6CCzFnE,SAASsU,GAAT,GAA6D,IAArCR,EAAoC,EAApCA,KAAoC,IAA9B7U,cAA8B,MAArB,kBAAqB,EAC1D,OACE,cAAC,GAAD,CAAMxW,MAAM,SAASwW,OAAQA,EAAQzN,KAAK,QAA1C,gBACGsiB,QADH,IACGA,IAAQ,cAACrQ,GAAA,EAAD,MAUA3U,sBAAKwlB,IC2DLC,OAtEf,YAA4F,IAAlEC,EAAiE,EAAjEA,kBAAmBC,EAA8C,EAA9CA,WAA8C,IAAlCC,yBAAkC,MAAd,EAAc,EAAXjB,EAAW,EAAXA,QAAW,EACnD7wB,mBAAS,IAD0C,mBAClF+xB,EADkF,KACrEC,EADqE,KAGnFC,EAAgB,SAACla,GAAO,IAAD,EACLA,EAAEC,OAAhB9D,EADmB,EACnBA,GAAIrP,EADe,EACfA,MACZ,GAAIqP,IAAW,OAALrP,QAAK,IAALA,OAAA,EAAAA,EAAOyM,QAAS,EAAG,CAC3B,IAAM4gB,EAAWhe,EAAGgM,MAAM,KAAK,GACzBvZ,EAAQwrB,OAAOD,GAAY,EACjCF,GAAe,SAAC/O,GACd,IAAMqG,EAAQ,eAAQrG,GAEtB,OADAqG,EAAS3iB,GAAS9B,EAAMkqB,cAAc7d,OAC/BoY,OAKP8I,EAAoB5tB,OAAOC,OAAOstB,GAExC,OACE,sBAAK7sB,UAAU,yBAAf,UACE,eAAC,GAAD,oCAA8B2rB,EAAQ7f,QAEtC,eAAC,GAAD,CAAahF,WAAS,EAAtB,0FAEE,uBAFF,wFAIE,uBAJF,8EAME,0BAGF,cAAC,GAAD,CAAMklB,KAAMW,EAAW3U,KAAMb,OAAO,oBAEnCyV,EAAoB,GACnB,eAAC,GAAD,CAAa9lB,WAAS,EAAtB,+EAC+D8lB,EAD/D,mBAKF,cAAC,IAAD,CAAO5sB,UAAU,iCAAjB,SACGqB,MAAMurB,GACJtrB,KAAK,GACLC,KAAI,SAACgf,EAAO9e,GACX,IAAMuN,EAAE,qBAAiBuR,EAAQ9e,GACjC,OACE,cAAC,KAAD,CACEsR,YAAY,eAEZ/D,GAAIA,EACJ4D,SAAUma,EACV/sB,UAAU,iCAHLgP,QASf,cAAC,IAAD,CAAOhP,UAAU,iCAAjB,SACE,cAAC,KAAD,CACEkH,KAAM,cAAC4V,GAAA,EAAD,IACN/U,KAAK,UACLC,QAAS,kBAAM0kB,EAAkBQ,IACjC/Z,SAAU+Z,EAAkB9gB,OAASwgB,EAJvC,SAMGA,EAAoB,EAAI,sBAAqB,6BCwBzCO,OAjFf,YAAiD,IAAzBxyB,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,QAAS0N,EAAQ,EAARA,KAAQ,EACxBhL,IAAbC,EADqC,oBAExCb,EAAWD,EAAY7B,EAASD,GAFQ,EAG7BwB,EAAe,UAAzBV,EAHuC,sBAI3BU,EAAe,YAA3BT,EAJuC,sBAKjCS,EAAe,MAArBP,EALuC,sBAMtBd,mBAAS,GANa,mBAMvCwe,EANuC,KAMjCM,EANiC,KAOxC+R,EAAUjxB,EAAgBC,EAAOC,EAAS,WAC1CwxB,EAAgB9vB,EAAa3B,EAAO,WAEpC+xB,EAAoBlvB,sBAAW,uCACnC,WAAOqvB,GAAP,SAAAnvB,EAAA,sEAEIH,EAAU,qBAAqB,GAC/Bqc,EAAQ,GAHZ,SAI2B7T,GAAeE,kBAAkB,CACtDxK,SACAC,WACAiC,WAAY/B,EACZixB,gBARN,cAWiBjvB,MACXC,IAAQC,QACN,kGAbR,gDAiBIC,IAAaC,MAAM,CACjBH,QAAS,uEACTI,YAAaC,KAAKC,UAAU,KAAEN,SAC9BO,UAAW,eAEbC,QAAQL,MAAR,MACA4b,EAAQ,GAvBZ,yBAyBIrc,EAAU,qBAAqB,GAzBnC,4EADmC,sDA6BnC,CAAC9B,EAAQC,EAAUE,EAAI2B,IAGzB,OACE,cAAC,GAAD,CACE+K,KAAMA,EACNsG,MAAK,OAAEjU,QAAF,IAAEA,OAAF,EAAEA,EAAOiU,MACdC,aAAcvL,GAAkBiB,QAChCvE,UAAU,uBAJZ,SAME,eAAC,GAAD,CAAcsZ,KAAMA,EAAMC,WAAY,EAAE7c,GAAxC,UAEE,cAAC,WAAD,UACG0vB,EACC,cAAC,GAAD,CACExxB,QAASA,EACTqN,MAAM,mCACNiQ,YAAY,6DAGd,cAAC,GAAD,CACEyT,QAASA,EACTe,kBAAmBA,EACnBC,WAAYhyB,EAAMgyB,WAClBC,kBAAmBjyB,EAAMiyB,sBAM/B,cAAC,GAAD,CAAahyB,QAASA,EAASqN,MAAM,UAAUiQ,YAAY,6C,kBCzEnE,SAASkV,GAAT,GAAmE,IAAzCC,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,QAASzb,EAAmB,EAAnBA,SAAUpQ,EAAS,EAATA,MACvD,OACE,eAAC,GAAD,CACEiI,KAAK,SACL/I,MAAO6N,GAAkB/M,GACzBzB,UAAWuG,aAAK+mB,GAAW,8BAC3BnW,OAAQzV,EAAQD,GAJlB,UAMG6rB,EACC,cAAC,KAAD,CAAW5jB,KAAK,QAAQ1J,UAAU,uCAAlC,SACE,cAACutB,GAAA,EAAD,MAGF,cAAC,GAAD,CAAQve,GAAI6C,EAAUnI,KAAK,QAAQ1J,UAAU,yCAE9CqtB,KAKQrmB,sBAAKomB,IC8FLI,OAhHf,YAOI,IANFlB,EAMC,EANDA,YACA1wB,EAKC,EALDA,GACA+wB,EAIC,EAJDA,WACAE,EAGC,EAHDA,YACAY,EAEC,EAFDA,sBACA7yB,EACC,EADDA,QACC,EACmB0C,IAAbnC,EADN,sBAE+CL,mBAAS+xB,GAFxD,mBAEMa,EAFN,KAEwBC,EAFxB,OAGiBxxB,EAAe,WAA1BL,EAHN,oBAsBKoxB,EAAoB5tB,OAAOC,OAAOmuB,GAClCE,EAAoBtB,IAAgB1wB,EAE1C,OACE,sBAAKoE,UAAU,kCAAf,UACE,cAAC,GAAD,CAAO6G,OAAK,EAAZ,sCACA,cAAC,GAAD,CAAMmlB,KAAMW,EAAW3U,KAAMb,OAAO,oBACpC,eAAC,GAAD,CAAarQ,WAAS,EAAtB,0GAEE,uBAFF,gRAME,uBACA,cAAC+mB,GAAA,EAAD,IAPF,yCAOgE,IAC9D,iCACE,4BAAIvB,MACI,IAVZ,2FAWoF,uBAXpF,8EAeA,cAAC,IAAD,CAAOtsB,UAAU,+CAAjB,SACG6sB,EAAYtrB,KAAI,SAACusB,EAAiBrsB,GAAW,IAAD,IAC3C,OAAKmsB,GAAsB9xB,EAczB,wBAEEkE,UAAU,qDACVgI,QAAS,kBA1DG,SAACvG,EAAOqsB,EAAiBC,GAC3CA,GAEJJ,GAAoB,SAACK,GACnB,IAAMC,EAAM,aAAOD,GASnB,OARIC,EAAOxsB,GACTwsB,EAAOxsB,GAAO6rB,SAAWW,EAAOxsB,GAAO6rB,QAEvCW,EAAOxsB,GAAP,2BACKqsB,GADL,IAEER,SAAS,IAGNW,KA6CgBC,CAAgBzsB,EAAOqsB,EAAiBA,EAAgBR,UAHzE,SAKE,cAAC,GAAD,CACED,WAAYS,EAAgBT,WAC5BC,QAAO,iBAAEI,QAAF,IAAEA,GAAF,UAAEA,EAAmBjsB,UAArB,aAAE,EAA2B6rB,eAA7B,QAAwCQ,EAAgBR,QAC/Dzb,SAAUjX,EAAQkzB,EAAgBnwB,YAAYkU,SAC9CpQ,MAAOA,KATX,UACUqsB,EAAgBT,WAD1B,YACwC5rB,IAbtC,8BACE,cAAC,GAAD,CACE4rB,WAAYS,EAAgBT,WAC5BC,QAASQ,EAAgBR,QACzBzb,SAAUjX,EAAQkzB,EAAgBnwB,YAAYkU,SAC9CpQ,MAAOA,KALX,UAAaqsB,EAAgBT,WAA7B,YAA2C5rB,SA4BlDmsB,GACC,cAAC,IAAD,CAAO5tB,UAAU,0CAAjB,SACE,cAAC,KAAD,CACEkH,KAAM,cAAC4V,GAAA,EAAD,IACN/U,KAAK,UACLC,QAAS,kBACPylB,EAAsB,CACpBU,iBAAkBjB,EAAkBnb,QAAO,SAACsb,GAAD,OAAiBA,EAAWC,cAG3Ena,SAAUhY,EARZ,0CAeJ,cAACsY,GAAD,CACEH,OAAQ,kBACNma,EAAsB,CACpBU,iBAAkBjB,EAAkBnb,QAAO,SAACsb,GAAD,OAAiBA,EAAWC,cAG3E5sB,MAAM,8CCnDC0tB,OAvDf,YAAiD,IAAzBzzB,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,QAAS0N,EAAQ,EAARA,KAAQ,EACjCnM,EAAe,MAArBP,EADuC,sBAEtBd,mBAAS,GAFa,mBAEvCwe,EAFuC,KAEjCM,EAFiC,KAGxCwS,EAAgB9vB,EAAa3B,EAAO,WAEpC8yB,EAAwB3wB,EAAW,CACvCC,YAAagJ,GAAeG,iBAC5BlJ,WAAY,uBACZC,aAAc,kBAAM2c,EAAQ,IAC5Bzc,QAAS,kBAAMyc,EAAQ,IACvBxc,eAAgB,uCAChBC,aAAc,+FAGhB,OACE,cAAC,GAAD,CACEiL,KAAMA,EACNsG,MAAK,OAAEjU,QAAF,IAAEA,OAAF,EAAEA,EAAOiU,MACdC,aAAcvL,GAAkBkB,QAChCxE,UAAU,kBAJZ,SAME,eAAC,GAAD,CAAcsZ,KAAMA,EAApB,UAEE,qBAAKtZ,UAAU,wBAAf,SACGosB,EACC,cAAC,GAAD,CACExxB,QAASA,EACTqN,MAAM,mCACNiQ,YAAY,kEAGd,cAAC,GAAD,CACEoU,YAAa3xB,EAAM2xB,YACnBK,WAAYhyB,EAAMgyB,WAClBE,YAAalyB,EAAMkyB,YACnBjxB,GAAIA,EACJhB,QAASA,EACT6yB,sBAAuBA,MAM7B,cAAC,GAAD,CAAa7yB,QAASA,EAASqN,MAAM,+CAAsCiQ,YAAY,qB,oBCLhFmW,OAzCf,YAAmC,IAAlBC,EAAiB,EAAjBA,cAAiB,EACZhxB,IAAbnC,EADyB,sBAENL,mBAAS,IAFH,mBAEzB8qB,EAFyB,KAElB2I,EAFkB,KAI1BrE,EAAcptB,EAAW,CAC7BC,YAAagJ,GAAeK,UAC5BpJ,WAAY,QACZI,eAAgB,iCAChBC,aAAc,sEAGhB,OACE,eAAC,WAAD,WACE,eAAC,IAAD,CAAO2C,UAAU,kCAAjB,UACE,cAAC,KAAD,CAAO+S,YAAY,wBAAwBH,SAAU,SAACC,GAAD,OAAO0b,EAAS1b,EAAEC,OAAOnT,UAC9E,cAAC,KAAD,CACEoI,KAAK,UACLC,QAAS,kBAAMkiB,EAAY,CAAEtE,WAC7BzS,SAAUyS,EAAMxZ,OAAS,GAAKjR,EAHhC,uBAQF,cAAC,IAAD,CAAO6E,UAAU,kCAAjB,SACE,cAAC,KAAD,CACEkH,KAAM,cAACghB,GAAA,EAAD,IACNngB,KAAK,UACLC,QAAS,kBAAMsmB,EAAc,CAAE1I,MAAO,UACtCzS,SAAUhY,EAJZ,mCCwGOivB,OApHf,YAA+C,IAAzBzvB,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,QAAS0N,EAAQ,EAARA,KAAQ,EACxBhL,IAAbnC,EADqC,sBAE1BgB,EAAe,WAA1BL,EAFqC,sBAGpBhB,mBAAS,GAHW,mBAGrCwe,EAHqC,KAG/BM,EAH+B,KAItC+R,EAAUjxB,EAAgBC,EAAOC,EAAS,WAC1CgzB,EAAoBtxB,EAAa3B,EAAO,eACxCyxB,EAAgB9vB,EAAa3B,EAAO,WAEpC2zB,EAAgBxxB,EAAW,CAC/BC,YAAagJ,GAAeI,aAC5BnJ,WAAY,QACZC,aAAc,kBAAM2c,EAAQ,IAC5Bzc,QAAS,kBAAMyc,EAAQ,IACvBxc,eAAgB,iCAChBC,aAAc,sEAGhB,OACE,cAAC,GAAD,CACEiL,KAAMA,EACNsG,MAAK,OAAEjU,QAAF,IAAEA,OAAF,EAAEA,EAAOiU,MACdC,aAAcvL,GAAkBa,MAChCnE,UAAU,qBAJZ,SAME,eAAC,GAAD,CAAcsZ,KAAMA,EAApB,UAEE,sBAAKtZ,UAAU,2BAAf,UACE,cAAC,GAAD,UACGrF,EAAMirB,MACL,iCACE,cAAC,GAAD,CAAQ5W,GAAI2c,EAAQ9Z,WADtB,IACoC8Z,EAAQ7f,KAD5C,WAC0DnR,EAAMirB,MADhE,OAIA,oDACkB,cAAC,GAAD,CAAQ5W,GAAI2c,EAAQ9Z,WADtC,IACoD8Z,EAAQ7f,KAD5D,SAKJ,eAAC,GAAD,CAAahF,WAAS,EAAtB,UACGslB,EAAgB,UAAST,EAAQ7f,KADpC,8DAGA,cAAC,GAAD,CACEkgB,KAAMI,EAAgB,cAACoC,GAAA,EAAD,IAA6B7zB,EAAMgyB,WAAW3U,KACpEb,OAAO,2BAGRxc,EAAMirB,MACL,eAAC,GAAD,CAAa9e,WAAS,EAAtB,UACGnM,EAAM2xB,YADT,iFACuF,uBADvF,wGAE2F,uBAF3F,sBAMA,cAAC,GAAD,CAAaxlB,WAAS,EAAtB,SACGslB,EACC,qEAEA,iCAAOT,EAAQ7f,KAAf,4BAKN,cAAC,IAAD,CAAO9L,UAAU,kCAAjB,SACGrF,EAAMwzB,iBAAiB5sB,KAAI,SAACusB,EAAiBrsB,GAC5C,OACE,8BACE,cAAC,GAAD,CACE4rB,WAAYS,EAAgBT,WAC5BC,SAAS,EACTzb,SAAUjX,EAAQkzB,EAAgBnwB,YAAYkU,SAC9CpQ,MAAOA,KALX,UAAaqsB,EAAgBT,WAA7B,YAA2C5rB,SAYhD2qB,IAAkBzxB,EAAMirB,OAAS,cAAC,GAAD,CAAO0I,cAAeA,IAEvD3zB,EAAMirB,QAAUgI,GAAqB9xB,IACpC,eAAC,IAAD,CAAOkE,UAAWuG,aAAK,mCAAoCzK,GAAW,mBAAtE,UACE,cAAC,KAAD,CACEoL,KAAM,cAACunB,GAAA,EAAD,IACN1mB,KAAK,UACLiC,MAAO,CAAEyY,gBAAiB,SAC1Bza,QAAS,kBAAMsmB,EAAc,CAAE1I,MAAO,aACtCzS,SAAUhY,EALZ,qBASA,cAAC,KAAD,CACE+L,KAAM,cAACqmB,GAAA,EAAD,IACNxlB,KAAK,UACLyL,QAAM,EACNxL,QAAS,kBAAMsmB,EAAc,CAAE1I,MAAO,WACtCzS,SAAUhY,EALZ,yBAcN,cAAC,GAAD,CAAaP,QAASA,EAASqN,MAAM,+CAAsCiQ,YAAY,qBCxDhFwW,IC1DAC,GAPD,CACZC,YACAC,kBACAC,kBACAC,SD+BF,YAAsC,IAAXtzB,EAAU,EAAVA,OACnBb,EAAU0D,EAAe7C,EAAQ4H,IACjC1I,EAAQmE,EAAarD,EAAQ4H,IAFA,EAGtBlH,EAAe,MAArBP,EAH4B,sBAIXd,mBAAS,IAJE,mBAI5BwN,EAJ4B,KAItBib,EAJsB,KAgBnC,GATAtoB,qBAAU,WACRsoB,GAAc,OAAN9nB,QAAM,IAANA,OAAA,EAAAA,EAAS,IAAKoO,EAASpO,EAAO,IAAM,MAC3C,CAACA,KAOCG,EACH,OAAO,cAAC,GAAD,CAAOhB,QAASA,EAASD,MAAOA,EAAO2N,KAAMA,IAGtD,IAAMkb,EAzCR,SAA4B5U,GAC1B,OAAQA,GACN,KAAKtL,GAAkBC,MACrB,OAAO0Q,GACT,KAAK3Q,GAAkB/C,MACrB,OAAOoU,GACT,KAAKrR,GAAkBgB,eACrB,OAAO6nB,GACT,KAAK7oB,GAAkBiB,QACrB,OAAO4oB,GACT,KAAK7pB,GAAkBkB,QACrB,OAAO4pB,GACT,KAAK9qB,GAAkBa,MACrB,OAAOimB,GACT,KAAK9mB,GAAkBK,UACrB,OAAOqd,GACT,QACE,OAAOtS,IAwBa+U,CAAmB9oB,EAAMiU,OAEjD,OACE,eAAC,WAAD,WACE,cAAC,GAAD,CAAgBhU,QAASA,EAASD,MAAOA,EAAO2N,KAAMA,EAAM1M,GAAIA,IAChE,cAAC4nB,EAAD,CAAiB5oB,QAASA,EAASD,MAAOA,EAAO2N,KAAMA,SE+C9C0mB,OAhGf,WACE,IAAM1nB,EAAUC,cADF,EAEQjK,IAAbC,EAFK,sBAGcpB,EAAe,UAH7B,mBAGPV,EAHO,KAGCiM,EAHD,OAIkBvL,EAAe,YAJjC,mBAIPT,EAJO,KAIGuzB,EAJH,OAKkB9yB,EAAe,YALjC,mBAKPR,EALO,KAKGuzB,EALH,OAMI/yB,EAAe,MAAxB0U,EANK,sBAOU1U,EAAe,YAA9B2U,EAPK,sBAS0BhW,oBAAS,GATnC,mBASPq0B,EATO,KASQC,EATR,KAURC,ECxBD,SAAwBC,GAAgB,IAAD,EACRx0B,oBAAS,GADD,mBACrCu0B,EADqC,KACxBE,EADwB,KAO5C,OAJAt0B,qBAAU,WACRs0B,EAAah0B,KAAKC,MAAQ,MAAsB8zB,KAC/C,CAACA,EAAeC,IAEZF,EDiBaG,CAAc,OAAC7zB,QAAD,IAACA,OAAD,EAACA,EAAU8zB,WAyD7C,GAtDAx0B,qBAAU,WACR,IAAMy0B,ErFzBsB,SAACpoB,GAAa,IAAD,sBAChBA,QADgB,IAChBA,OADgB,EAChBA,EAAShN,gBADO,QACK,IAAxCq1B,SACR,YAF2C,MACxB,IADwB,GAE3BC,UAAU,GqFuBNC,CAAiBvoB,GAC/B6E,GAAcujB,GAChBhoB,EAAUgoB,IAEV7xB,IAAQG,MAAM,4DACdsJ,EAAQe,KAAK,QAEd,CAACf,EAASI,EAAWmJ,EAAOC,IAG/B7V,qBAAU,WACR,OAAOqM,EAAQwoB,QAAO,SAACx1B,GACrB,IAAMo1B,ErF3ByB,SAACp1B,GAAc,IAAD,UACtBA,QADsB,IACtBA,IAAY,IAA/Bq1B,SACR,YAFiD,MAC9B,IAD8B,GAEjCC,UAAU,GqFyBJG,CAAsBz1B,GACpC6R,GAAcujB,IAChBhoB,EAAUgoB,GACV7e,EAAM,IACNC,EAAY,IACZjT,IAAQyK,KAAK,qCAEbzK,IAAQG,MAAM,4DACdsJ,EAAQe,KAAK,WAGhB,CAACf,EAASI,EAAWmJ,EAAOC,IAG/B7V,qBAAU,WAAM,4CAEd,4BAAAyC,EAAA,sEAEIH,EAAU,QAAQ,GAFtB,SAGuBkH,GAASI,SAAS,CAAEpJ,WAH3C,OAGUu0B,EAHV,OAIIf,EAAYe,EAAKpyB,KAAKlC,UACtBwzB,EAAYc,EAAKpyB,MALrB,gDAOIS,QAAQL,MAAR,MACAD,IAAaC,MAAM,CACjBH,QAAS,0BACTI,YAAaC,KAAKC,UAAU,KAAEN,WAEhCQ,QAAQL,MAAR,MAZJ,yBAcIoxB,GAAe,GACf7xB,EAAU,QAAQ,GAftB,6EAFc,sBACd6xB,GAAe,GAoBX3zB,GArBU,mCAsBZw0B,KAED,CAACx0B,IAGA0zB,EACF,OAAO,cAAC,GAAD,IAGT,GAAIE,EACF,OACE,cAAC,GAAD,CAAWxxB,QAAQ,gBAAgBI,YAAY,6DAInD,GAAIxC,GAAUC,EACZ,OAAQA,GACN,KAAK2H,GACH,OAAO,cAAC,GAAaurB,SAAd,CAAuBnzB,OAAQA,IACxC,KAAK4H,GACH,OAAO,cAAC,GAAawrB,eAAd,CAA6BpzB,OAAQA,IAC9C,KAAK4H,GACH,OAAO,cAAC,GAAayrB,eAAd,CAA6BrzB,OAAQA,IAC9C,KAAK4H,GACH,OAAO,cAAC,GAAa0rB,SAAd,CAAuBtzB,OAAQA,IACxC,QACE4C,QAAQ6xB,KAAK,+BAKnB,OAAO,cAAC,GAAD,KEhCMC,OA3Df,WACE,IAAM7nB,EAAOuB,EAAQ,EAEfjP,EAAU,CACdw1B,SAAU,CACRve,SAAU,GACV/F,KAAM,WACNlP,OAAO,EACPic,MAAO,EACPhc,UAAWtB,KAAKC,OAElB60B,MAAO,CACLxe,SAAU,GACV/F,KAAM,QACNlP,OAAO,EACPic,MAAO,EACPhc,UAAWtB,KAAKC,OAElB80B,UAAW,CACTze,SAAU,GACV/F,KAAM,YACNlP,OAAO,EACPic,MAAO,EACPhc,UAAWtB,KAAKC,QAKdb,EAAQ,CACZiU,MAAO,iBACP+c,QAAS,QACTlE,YAAa,CAAC,WAAY,YAAa,QAAS,WAAY,YAAa,SACzE1O,MAAO,EACP0S,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,IAStBptB,QAAQQ,IAAI,cACZR,QAAQQ,IAAI,CAAEyJ,SACdjK,QAAQkyB,MAAM31B,GACdyD,QAAQQ,IAAI,CAAElE,UACd0D,QAAQQ,IAAI,cAEZ,IAAM8sB,EAAU/wB,EAAQD,EAAMgxB,SAI9B,OAHAttB,QAAQQ,IAAI8sB,GAIV,cAAC,GAAD,CAAgBrjB,KAAMA,EAAMsG,MAAOjU,EAAMiU,MAAOC,aAAa,iBAAiB7O,UAAU,GAAG8O,YAAU,EAArG,SACE,qBAAK9O,UAAU,wBC9DNwwB,OANf,WAAuB,IAAD,EACAlzB,IAEpB,OAHoB,oBAGD,qBAAK0C,UAAU,gBAAuB,8BCW3D,SAASywB,GAAT,GAAyE,IAAtCC,EAAqC,EAAhDC,UAAsBC,EAA0B,EAA1BA,cAAkBC,EAAQ,6CACtE,OACE,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAACrY,GAAD,OACY,IAAlBmY,EACE,cAACF,EAAD,eAAejY,IAEf,cAAC,IAAD,CAAUsY,GAAI,CAAEpB,SAAU,SAAUh1B,MAAO,CAAE+jB,KAAMjG,EAAMne,iBAOnE,SAAS02B,GAAT,GAAwE,IAAD,QAArCN,EAAqC,EAAhDC,UAAsBC,EAA0B,EAA1BA,cAAkBC,EAAQ,6CAC/DI,EAAQ,iBAAGJ,QAAH,IAAGA,GAAH,UAAGA,EAAMv2B,gBAAT,iBAAG,EAAgBK,aAAnB,iBAAG,EAAuB+jB,YAA1B,aAAG,EAA6BiR,gBAAhC,QAA4C,IAC1D,OACE,cAAC,IAAD,2BACMkB,GADN,IAEEC,OAAQ,SAACrY,GAAD,OAA8B,IAAlBmY,EAA0B,cAACF,EAAD,eAAejY,IAAY,cAAC,IAAD,CAAUsY,GAAIE,QA6C9EC,OAxCf,WAAgB,IAAD,EACqBp2B,oBAAS,GAD9B,mBACNK,EADM,KACKg2B,EADL,OAEiCh1B,EAAe,mBAFhD,mBAENd,EAFM,KAEWiQ,EAFX,OAGUnP,EAAe,WAA7Bi1B,EAHI,oBAoBb,OAfAn2B,qBAAU,WACRf,EAAKm3B,oBAAmB,SAAC1lB,GACnBA,GACFwlB,GAAa,GACb7lB,GAAmB,GACnB8lB,GAAW,GACXvzB,IAAQyK,KAAK,kDAEb6oB,GAAa,GACb7lB,GAAmB,GACnB8lB,GAAW,SAGd,IAGD,eAAC,IAAD,CAAQpxB,UAAU,MAAlB,UACE,cAAC,GAAD,IACA,cAAC,IAAD,UACG7E,EACC,cAAC,GAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOm2B,OAAK,EAAC/W,KAAK,IAAIoW,UAAW5wB,IACjC,cAAC0wB,GAAD,CAAclW,KAAK,SAASqW,cAAev1B,EAAiBs1B,UAAWnnB,KACvE,cAACwnB,GAAD,CAAazW,KAAK,SAASqW,cAAev1B,EAAiBs1B,UAAWtlB,KACtE,cAAColB,GAAD,CAAclW,KAAK,gBAAgBqW,cAAev1B,EAAiBs1B,UAAWR,KAC9E,cAAC,IAAD,CAAO5V,KAAK,IAAIoW,UAAW3B,cCnEvCuC,IAAST,OACP,cAAC,IAAMU,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1B34B,K","file":"static/js/main.9afb1faa.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/functions';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_API_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n// firebase.analytics();\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const functions = firebase.functions();\n\nif (window.location.hostname.includes('localhost')) {\n  firestore.useEmulator('localhost', 8091);\n  functions.useEmulator('localhost', 5001);\n}\n\nexport default firebase;\n","import { useEffect, useState } from 'react';\n\nexport function useActivePlayer(state, players, propertyName = 'activePlayer') {\n  const [activePlayer, setActivePlayer] = useState({});\n\n  // Determine if user is active as the guesser, the clue giver, the psychic, the storyteller, etc\n  useEffect(() => {\n    const activePlayer = state?.[propertyName];\n    setActivePlayer(players?.[activePlayer]);\n  }, [players, propertyName, state]);\n\n  return activePlayer;\n}\n","import { createGlobalState } from 'react-hooks-global-state';\n\nconst initialState = {\n  isLoading: false,\n  loaders: false,\n  isAuthenticated: false,\n  appStartedAt: Date.now(),\n  // Meta\n  gameId: null,\n  gameName: null,\n  gameMeta: {},\n  me: '',\n  myAvatar: '',\n  isAdmin: false,\n  // Arte-Ruim\n  canvasSize: 250,\n  cachedCanvasSize: 250,\n  // Espiao-entre-nos\n  espiaoEntreNosCache: {},\n};\n\nconst { useGlobalState, setGlobalState, getGlobalState } = createGlobalState(initialState);\n\nexport { setGlobalState, getGlobalState, useGlobalState };\n\nexport default useGlobalState;\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\nexport function useAmIActive(state, propertyName = 'activePlayer') {\n  const [me] = useGlobalState('me');\n  const [amIActive, setAmIActive] = useState(false);\n\n  // Determine if user is active as the guesser, the clue giver, the psychic, the storyteller, etc\n  useEffect(() => {\n    setAmIActive(state?.[propertyName] === me);\n  }, [state, me, propertyName]);\n\n  return amIActive;\n}\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\nexport function useAmIReady(players, state = {}) {\n  const [me] = useGlobalState('me');\n  const [amIReady, setAmIReady] = useState(false);\n\n  useEffect(() => {\n    // Check if user is ready and check if user has been ready after the last state change\n    if (players[me].ready === false) {\n      setAmIReady(false);\n      return;\n    }\n\n    if (!state?.updatedAt) {\n      setAmIReady(true);\n      return;\n    }\n\n    // If state was updated after the player was updated, data might not be synced\n    if (players[me]?.updatedAt < state?.updatedAt) {\n      setAmIReady(false);\n      return;\n    }\n\n    setAmIReady(true);\n  }, [me, players, state?.updatedAt]);\n\n  return amIReady;\n}\n","import { useCallback } from 'react';\nimport { message, notification } from 'antd';\nimport { useGlobalState, useLoading } from './index';\n\n/**\n * Wrapper around common firebase http call\n * @param {object} data\n * @param {Function} data.apiFunction\n * @param {Function} [data.onBeforeCall]\n * @param {Function} [data.onAfterCall]\n * @param {Function} [data.onError]\n * @param {string} [data.actionName] the name used in the loader hook\n * @param {string} [data.successMessage]\n * @param {string} [data.errorMessage]\n * @returns\n */\nexport function useAPICall({\n  apiFunction,\n  actionName = 'api-action',\n  onBeforeCall = () => {},\n  onAfterCall = () => {},\n  onError = () => {},\n  successMessage = 'API call was successful',\n  errorMessage = 'API call has failed',\n}) {\n  const [, setLoader] = useLoading();\n  const [gameId] = useGlobalState('gameId');\n  const [gameName] = useGlobalState('gameName');\n  const [me] = useGlobalState('me');\n\n  const onAPICall = useCallback(\n    async (payload) => {\n      try {\n        setLoader(actionName, true);\n        await onBeforeCall();\n        const response = await apiFunction({\n          gameId,\n          gameName,\n          playerName: me,\n          ...payload,\n        });\n\n        if (response.data) {\n          message.success(successMessage);\n        }\n      } catch (e) {\n        notification.error({\n          message: errorMessage,\n          description: JSON.stringify(e.message),\n          placement: 'bottomLeft',\n        });\n        console.error(e);\n        onError();\n      } finally {\n        await onAfterCall();\n        setLoader(actionName, false);\n      }\n    },\n    [\n      actionName,\n      apiFunction,\n      errorMessage,\n      gameId,\n      gameName,\n      me,\n      setLoader,\n      successMessage,\n      onBeforeCall,\n      onAfterCall,\n      onError,\n    ]\n  );\n\n  return onAPICall;\n}\n","import { notification } from 'antd';\nimport { useDocument } from 'react-firebase-hooks/firestore';\n// Services\nimport { firestore } from '../services/firebase';\n\nexport function useGamePlayers(gameId, gameName) {\n  const [snapshot, loading, error] = useDocument(firestore.doc(`${gameName}/${gameId}/session/players`), {\n    snapshotListenOptions: { includeMetadataChanges: true },\n  });\n\n  if (error) {\n    notification.error({\n      message: 'Applicativo encontrou um erro ao tentar atualizar os jogadores',\n      description: JSON.stringify(error),\n      placement: 'bottomLeft',\n    });\n    console.error(error);\n  }\n\n  if (loading) {\n    console.log('%cRefreshing players...', 'color:orange');\n  }\n\n  return snapshot?.data() ?? {};\n}\n","import { notification } from 'antd';\nimport { useDocument } from 'react-firebase-hooks/firestore';\n// Services\nimport { firestore } from '../services/firebase';\n\nexport function useGameState(gameId, gameName) {\n  const [snapshot, loading, error] = useDocument(firestore.doc(`${gameName}/${gameId}/session/state`), {\n    snapshotListenOptions: { includeMetadataChanges: true },\n  });\n\n  if (error) {\n    notification.error({\n      message: 'Aplicativo encontrou um erro ao tentar atualizar o estado do jogo',\n      description: JSON.stringify(error),\n      placement: 'bottomLeft',\n    });\n    console.error(error);\n  }\n\n  if (loading) {\n    console.log('%cRefreshing state...', 'color:tomato');\n  }\n\n  return snapshot?.data() ?? {};\n}\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\nexport function useIsMyTeamActive(state, players) {\n  const [me] = useGlobalState('me');\n  const [isMyTeamActive, setIsMyTeamActive] = useState(false);\n\n  // Determine if user's team is active\n  useEffect(() => {\n    setIsMyTeamActive(state?.activeTeam === players?.[me]?.team);\n  }, [state, me, players]);\n\n  return isMyTeamActive;\n}\n","import { useEffect } from 'react';\n\nimport { useGlobalState } from './index';\n\n/**\n * Aggregate loading states into a single object, and single isLoading state\n * @returns [boolean, function, object]\n */\nexport function useLoading() {\n  const [isLoading, setLoading] = useGlobalState('isLoading');\n  const [loaders, setLoaders] = useGlobalState('loaders');\n\n  useEffect(() => {\n    setLoading(Object.values(loaders).some((v) => v));\n  }, [loaders, setLoading]);\n\n  const setLoader = (key, value) => {\n    setLoaders((values) => ({\n      ...values,\n      [key]: value,\n    }));\n  };\n\n  return [isLoading, setLoader, loaders];\n}\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\nexport function useMe(players) {\n  const [me] = useGlobalState('me');\n  const [completeMe, setCompleteMe] = useState({});\n\n  // Determine if user is active as the guesser, the clue giver, the psychic, the storyteller, etc\n  useEffect(() => {\n    setCompleteMe(players?.[me]);\n  }, [players, me]);\n\n  return completeMe;\n}\n","export default __webpack_public_path__ + \"static/media/tarde-divertida-logo.7e15410c.svg\";","import React from 'react';\nimport { Image, Layout } from 'antd';\n\nimport logo from '../images/tarde-divertida-logo.svg';\n\nfunction Home() {\n  return (\n    <Layout className=\"home\">\n      <div className=\"home__logo-container\">\n        <Image src={logo} className=\"home__logo\" preview={false} alt=\"Tarde Divertida logo\" />\n      </div>\n      <div className=\"home__background\">\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Home;\n","/**\n * List of urls residing in the public folder\n */\nexport const PUBLIC_URL = {\n  BANNERS: `${process.env.PUBLIC_URL}/images/banners/`,\n  RULES: `${process.env.PUBLIC_URL}/images/rules/`,\n};\n\n/**\n * List of tags translation and color\n */\nexport const TAG_DICT = {\n  competitive: {\n    label: 'competitivo',\n    color: 'red',\n  },\n  cooperative: {\n    label: 'cooperativo',\n    color: 'green',\n  },\n  traitor: {\n    label: 'inimigo',\n    color: 'volcano',\n  },\n  'real-time': {\n    label: 'juntos',\n    color: 'volcano',\n  },\n  'turn-based': {\n    label: 'vez',\n    color: 'volcano',\n  },\n  timed: {\n    label: 'tempo',\n    color: 'orange',\n  },\n  drawing: {\n    label: 'desenho',\n    color: 'gold',\n  },\n  guessing: {\n    label: 'adivinhar',\n    color: 'cyan',\n  },\n  writing: {\n    label: 'escrever',\n    color: 'blue',\n  },\n  images: {\n    label: 'imagens',\n    color: 'purple',\n  },\n  discussion: {\n    label: 'discussão/fala',\n    color: 'geekblue',\n  },\n};\n\n/**\n * List of avatar ids\n */\nexport const AVATAR_IDS = new Array(25).fill(0).map((i, index) => i + index);\n\nexport const LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\nexport const AVATAR_DESCRIPTIONS_BR = {\n  0: 'o axolote',\n  1: 'a tartaruga',\n  2: 'a raposa',\n  3: 'o sapo',\n  4: 'a salamandra',\n  5: 'a toupeira',\n  6: 'o esquilo',\n  7: 'o corvo',\n  8: 'a lontra',\n  9: 'o camundongo',\n  10: 'o sabiá',\n  11: 'a cojura',\n  12: 'o porco-espinho',\n  13: 'o ornitorrinco',\n  14: 'o rato',\n  15: 'a rã',\n  16: 'o caramujo',\n  17: 'a abelha',\n  18: 'o morcego',\n  19: 'o gato',\n  20: 'o coelho',\n  21: 'a aranha',\n  22: 'a borboleta',\n  23: 'o arminho',\n  24: 'o porco',\n};\n\n/**\n * Enum of available games\n */\nexport const GAME_COLLECTION = {\n  ARTE_RUIM: 'arte-ruim',\n  ESPIAO_ENTRE_NOS: 'espiao-entre-nos',\n  ONDA_TELEPATICA: 'onda-telepatica',\n  UE_SO_ISSO: 'ue-so-isso',\n};\n\n/**\n * Enum of Game Phases\n */\nexport const PHASES = {\n  ARTE_RUIM: {\n    LOBBY: 'LOBBY',\n    RULES: 'RULES',\n    DRAW: 'DRAW',\n    EVALUATION: 'EVALUATION',\n    GALLERY: 'GALLERY',\n    GAME_OVER: 'GAME_OVER',\n  },\n  ESPIAO_ENTRE_NOS: {\n    LOBBY: 'LOBBY',\n    RULES: 'RULES',\n    ASSIGNMENT: 'ASSIGNMENT',\n    INVESTIGATION: 'INVESTIGATION',\n    ASSESSMENT: 'ASSESSMENT',\n    FINAL_ASSESSMENT: 'FINAL_ASSESSMENT',\n    RESOLUTION: 'RESOLUTION',\n    GAME_OVER: 'GAME_OVER',\n  },\n  ONDA_TELEPATICA: {\n    LOBBY: 'LOBBY',\n    RULES: 'RULES',\n    DIAL_SIDES: 'DIAL_SIDES',\n    DIAL_CLUE: 'DIAL_CLUE',\n    GUESS: 'GUESS',\n    RIVAL_GUESS: 'RIVAL_GUESS',\n    REVEAL: 'REVEAL',\n    GAME_OVER: 'GAME_OVER',\n  },\n  UE_SO_ISSO: {\n    LOBBY: 'LOBBY',\n    RULES: 'RULES',\n    WORD_SELECTION: 'WORD_SELECTION',\n    SUGGEST: 'SUGGEST',\n    COMPARE: 'COMPARE',\n    GUESS: 'GUESS',\n    GAME_OVER: 'GAME_OVER',\n  },\n};\n","import { functions } from '../services/firebase';\nimport { GAME_COLLECTION } from '../utils/constants';\n\nexport const GAME_API = {\n  helloWorld: functions.httpsCallable('helloWorld'),\n  initializeGame: functions.httpsCallable('initializeGame'),\n  loadGame: functions.httpsCallable('loadGame'),\n  addPlayer: functions.httpsCallable('addPlayer'),\n  lockGame: functions.httpsCallable('lockGame'),\n  makeMeReady: functions.httpsCallable('makeMeReady'),\n  playAgain: functions.httpsCallable('playAgain'),\n  goToNextPhase: functions.httpsCallable('goToNextPhase'),\n};\n\nexport const ARTE_RUIM_API = {\n  submitDrawing: functions.httpsCallable('arteRuimSubmitDrawing'),\n  submitVoting: functions.httpsCallable('arteRuimSubmitVoting'),\n};\n\nexport const ESPIAO_ENTRE_NOS_API = {\n  handleAdminAction: functions.httpsCallable('espiaoEntreNosHandleAdminAction'),\n  makeAccusation: functions.httpsCallable('espiaoEntreNosMakeAccusation'),\n  guessLocation: functions.httpsCallable('espiaoEntreNosGuessLocation'),\n  submitVoting: functions.httpsCallable('espiaoEntreNosSubmitVoting'),\n};\n\nexport const ONDA_TELEPATICA = {\n  submitSides: functions.httpsCallable('ondaTelepaticaSubmitSides'),\n  submitClue: functions.httpsCallable('ondaTelepaticaSubmitClue'),\n  submitGuess: functions.httpsCallable('ondaTelepaticaSubmitGuess'),\n  submitRivalGuess: functions.httpsCallable('ondaTelepaticaSubmitRivalGuess'),\n};\n\nexport const UE_SO_ISSO_API = {\n  submitWordSelectionVotes: functions.httpsCallable('ueSoIssoSubmitWordSelectionVotes'),\n  submitSuggestions: functions.httpsCallable('ueSoIssoSubmitSuggestions'),\n  submitValidation: functions.httpsCallable('ueSoIssoSubmitValidation'),\n  confirmGuess: functions.httpsCallable('ueSoIssoConfirmGuess'),\n  sendGuess: functions.httpsCallable('ueSoIssoSendGuess'),\n};\n\n/**\n * Gets the game specific API http functions\n * @param {string} gameName\n * @returns\n */\nexport const getAPI = (gameName) => {\n  switch (gameName) {\n    case GAME_COLLECTION.ARTE_RUIM:\n      return ARTE_RUIM_API;\n    case GAME_COLLECTION.ESPIAO_ENTRE_NOS:\n      return ESPIAO_ENTRE_NOS_API;\n    case GAME_COLLECTION.ONDA_TELEPATICA:\n      return ONDA_TELEPATICA;\n    case GAME_COLLECTION.UE_SO_ISSO:\n      return UE_SO_ISSO_API;\n    default:\n      throw Error(`Adapter for ${gameName} does not exist`);\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Space, Spin, Typography } from 'antd';\n\nfunction Loading({ message, margin }) {\n  return (\n    <Space className={clsx('loading', margin && 'loading--margin')}>\n      <Spin />\n      {Boolean(message) && <Typography.Text>{message}</Typography.Text>}\n    </Space>\n  );\n}\n\nLoading.propTypes = {\n  message: PropTypes.string,\n  margin: PropTypes.bool,\n};\n\nLoading.defaultProps = {\n  margin: false,\n};\n\nexport default Loading;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Typography } from 'antd';\nimport clsx from 'clsx';\n\nfunction Instruction({ children, white, className, contained }) {\n  const baseClass = 'instruction';\n\n  return (\n    <Typography.Text\n      className={clsx(\n        baseClass,\n        contained && `${baseClass}--contained`,\n        white && `${baseClass}--white`,\n        className\n      )}\n    >\n      {children}\n    </Typography.Text>\n  );\n}\n\nInstruction.propTypes = {\n  children: PropTypes.any.isRequired,\n  white: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nexport default memo(Instruction);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Typography } from 'antd';\nimport clsx from 'clsx';\n\nfunction Title({ children, white, icon, className, level }) {\n  return (\n    <Typography.Title level={level} className={clsx('title', white && 'title--white', className)}>\n      {Boolean(icon) && icon}\n      {children}\n    </Typography.Title>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.any.isRequired,\n  white: PropTypes.bool,\n  icon: PropTypes.element,\n  className: PropTypes.string,\n  level: PropTypes.number,\n};\n\nTitle.defaultProps = {\n  className: '',\n  level: 1,\n};\n\nexport default memo(Title);\n","import React, { Fragment, useCallback, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Image, Modal, message, Button, notification } from 'antd';\n// Adapters\nimport { GAME_API } from '../../adapters';\n// Hooks\nimport { useLoading } from '../../hooks';\n// Constants\nimport { PUBLIC_URL } from '../../utils/constants';\n// Components\nimport Loading from '../loaders/Loading';\nimport Instruction from '../shared/Instruction';\nimport Title from '../shared/Title';\n\nfunction CreateGameModal({ gameInfo }) {\n  const history = useHistory();\n  const [, setLoader] = useLoading();\n  const [isVisible, setVisibility] = useState(false);\n  const [isLoading, setLoading] = useState(true);\n  const [gameId, setGameId] = useState(null);\n\n  const onCloseModal = useCallback(() => {\n    setVisibility(false);\n  }, []);\n\n  useEffect(() => {\n    async function createGame() {\n      try {\n        setLoader('create', true);\n        const response = await GAME_API.initializeGame({ gameCode: gameInfo.gameCode });\n        if (response.data.gameId) {\n          setGameId(response.data.gameId);\n        }\n      } catch (e) {\n        notification.error({\n          message: 'Applicativo encontrou um erro ao tentar criar o jogo',\n          description: JSON.stringify(e.message),\n          placement: 'bottomLeft',\n        });\n        console.error(e);\n        setVisibility(false);\n      } finally {\n        setLoading(false);\n        setLoader('create', false);\n      }\n    }\n\n    if (isVisible) {\n      createGame();\n    }\n  }, [isVisible]); // eslint-disable-line\n\n  const onConfirmGame = () => {\n    if (gameId) {\n      history.push(`/${gameId}`);\n    } else {\n      message.info('Péra! O jogo ainda não foi inicializado.');\n    }\n  };\n\n  return (\n    <Fragment>\n      <Button type=\"primary\" onClick={() => setVisibility(true)}>\n        Criar Jogo\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`Criando jogo: ${gameInfo.title}`}\n          visible={isVisible}\n          onCancel={onCloseModal}\n          onOk={onConfirmGame}\n        >\n          <Fragment>\n            <Image\n              alt={gameInfo.title}\n              src={`${PUBLIC_URL.BANNERS}game-image-${gameInfo.gameName}.jpg`}\n              fallback={`${PUBLIC_URL.BANNERS}/game-image-em-breve.jpg`}\n            />\n\n            {isLoading ? (\n              <Fragment>\n                <Instruction>O jogo está sendo criado...</Instruction>\n                <Loading message=\"Gerando...\" margin />\n              </Fragment>\n            ) : (\n              <div>\n                <Title className=\"center\">Jogo inicializado: {gameId}</Title>\n                <Instruction>Pressione OK para ser redirecionadx à página do jogo.</Instruction>\n              </div>\n            )}\n          </Fragment>\n        </Modal>\n      )}\n    </Fragment>\n  );\n}\n\nCreateGameModal.propTypes = {\n  gameInfo: PropTypes.shape({\n    gameCode: PropTypes.string.isRequired,\n    gameName: PropTypes.string,\n    title: PropTypes.string,\n  }),\n};\n\nexport default CreateGameModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Typography, Image, Carousel, Button } from 'antd';\n// Constants\nimport { PUBLIC_URL } from '../../utils/constants';\nimport { DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\n\nfunction RulesCarousel({ info, className, ruleClass }) {\n  const settings = {\n    prevArrow: (\n      <Button>\n        <DoubleLeftOutlined className=\"rules-carousel__nav rules-carousel__nav--left\" />\n      </Button>\n    ),\n    nextArrow: (\n      <Button>\n        <DoubleRightOutlined className=\"rules-carousel__nav rules-carousel__nav--right\" />\n      </Button>\n    ),\n  };\n\n  return (\n    <Carousel\n      className={clsx('rules-carousel', className)}\n      autoplay\n      autoplaySpeed={15000}\n      arrows\n      {...settings}\n    >\n      {info.rules.map((rule, index) => (\n        <div className={clsx('rules-carousel__rule', ruleClass)} key={rule}>\n          <span className=\"rules-carousel__rule-number\">{index + 1}</span>\n\n          <Image\n            className=\"rules-carousel__image\"\n            src={\n              index === 0\n                ? `${PUBLIC_URL.BANNERS}game-image-${info.gameName}.jpg`\n                : `${PUBLIC_URL.RULES}game-rule-${info.gameName}-${index}.jpg`\n            }\n            fallback={`${PUBLIC_URL.RULES}game-rule-not-found.jpg`}\n            alt={rule}\n          />\n          <Typography.Paragraph className=\"rules-carousel__rule-text\">{rule}</Typography.Paragraph>\n        </div>\n      ))}\n    </Carousel>\n  );\n}\n\nRulesCarousel.propTypes = {\n  info: PropTypes.shape({\n    gameName: PropTypes.string,\n    rules: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string,\n  }),\n  className: PropTypes.string,\n  ruleClass: PropTypes.string,\n};\n\nRulesCarousel.defaultProps = {\n  className: '',\n  ruleClass: '',\n};\n\nexport default RulesCarousel;\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\n\n// Design Resources\nimport { Button, Modal } from 'antd';\nimport { ReadOutlined } from '@ant-design/icons';\n// Components\nimport RulesCarousel from '../rules/RulesCarousel';\n\nfunction RulesModal({ gameInfo }) {\n  const [isVisible, setVisibility] = useState(false);\n\n  const onCloseModal = () => {\n    setVisibility(false);\n  };\n\n  return (\n    <Fragment>\n      <Button type=\"default\" onClick={() => setVisibility(true)} icon={<ReadOutlined />}>\n        Regras\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`Rules: ${gameInfo.title}`}\n          visible={isVisible}\n          onCancel={onCloseModal}\n          className=\"rules-modal\"\n          footer={[\n            <Button key=\"close\" onClick={onCloseModal}>\n              Fechar\n            </Button>,\n          ]}\n        >\n          <RulesCarousel info={gameInfo} />\n        </Modal>\n      )}\n    </Fragment>\n  );\n}\n\nRulesModal.propTypes = {\n  gameInfo: PropTypes.shape({\n    gameName: PropTypes.string,\n    rules: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string,\n  }),\n};\n\nexport default RulesModal;\n","import React from 'react';\n\n// Design Resources\nimport { Typography, Layout, Space, Card, Image, Divider, Tag } from 'antd';\n// Utils\nimport gameList from '../resources/games.json';\nimport { PUBLIC_URL, TAG_DICT } from '../utils/constants';\n// Components\nimport CreateGameModal from './modals/CreateGameModal';\nimport RulesModal from './modals/RulesModal';\n\nfunction Admin() {\n  return (\n    <Layout.Content className=\"container\">\n      <Typography.Title>Admin Hub</Typography.Title>\n      <Typography.Paragraph>Select the game you want to start</Typography.Paragraph>\n\n      <Space size={[8, 16]} wrap align=\"start\">\n        {Object.values(gameList).map((game) => (\n          <Card\n            key={game.gameName}\n            hoverable\n            style={{ width: 240 }}\n            cover={\n              <Image\n                alt={game.title}\n                src={`${PUBLIC_URL.BANNERS}game-image-${game.gameName}.jpg`}\n                fallback={`${PUBLIC_URL.BANNERS}/game-image-em-breve.jpg`}\n              />\n            }\n          >\n            <Card.Meta title={game.title} description={game.summary} />\n            <Divider />\n            <Card.Meta description={`Para ${game.min}-${game.max} jogadores`} />\n            <Card.Meta description={`Recomendado jogar com ${game.recommended}`} />\n            <Divider />\n            <Space wrap size={[1, 6]}>\n              {game.tags.map((tag) => (\n                <Tag key={`${game.gameCode}-${tag}`} color={TAG_DICT[tag]?.color}>\n                  {TAG_DICT[tag]?.label}\n                </Tag>\n              ))}\n            </Space>\n            <Divider />\n            <Space>\n              <RulesModal gameInfo={game} />\n              {Boolean(game.available) && <CreateGameModal gameInfo={game} />}\n            </Space>\n          </Card>\n        ))}\n      </Space>\n    </Layout.Content>\n  );\n}\n\nexport default Admin;\n","import { auth } from '../services/firebase';\n\n/**\n * Sign up user via email through firebase auth\n * @param {string} email\n * @param {string} password\n * @returns {Promise}\n */\nexport function signUp(email, password) {\n  return auth.createUserWithEmailAndPassword(email, password);\n}\n\n/**\n * Sign in user via email through firebase auth\n * @param {string} email\n * @param {string} password\n * @returns {Promise}\n */\nexport function signIn(email, password) {\n  return auth.signInWithEmailAndPassword(email, password);\n}\n\n/**\n * Sign out current user\n * @returns {Promise}\n */\nexport async function signOut() {\n  return auth.signOut().then(() => {\n    alert(`You've been signed out`);\n  });\n}\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\n// Design Resources\nimport { Layout, Button, Form, Input, Alert, Image } from 'antd';\n// API\nimport { signIn } from '../adapters/auth';\n// State\nimport { useGlobalState } from '../hooks';\n// Image\nimport logo from '../images/tarde-divertida-logo.svg';\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 0, span: 8 },\n};\n\nfunction Login() {\n  const history = useHistory();\n  const [, setIsAuthenticated] = useGlobalState('isAuthenticated');\n\n  const [error, setError] = useState(null);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const onValuesChange = (data) => {\n    if (data.email) {\n      setEmail(data.email.trim());\n    }\n    if (data.password) {\n      setPassword(data.password.trim());\n    }\n  };\n\n  const onHandleSubmit = async () => {\n    setError('');\n    try {\n      const response = await signIn(email, password);\n      if (response?.user?.uid) {\n        setIsAuthenticated(true);\n        history.push('/admin');\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <Layout.Content className=\"login\">\n      <div className=\"login__content\">\n        <div className=\"login__logo\">\n          <Image src={logo} preview={false} />\n        </div>\n\n        {Boolean(error) && (\n          <Alert message=\"Error\" description={error} type=\"error\" showIcon className=\"login__error-alert\" />\n        )}\n        <Form\n          {...layout}\n          layout=\"horizontal\"\n          name=\"sign-in\"\n          onValuesChange={onValuesChange}\n          className=\"login__form\"\n          autoComplete=\"off\"\n        >\n          <Form.Item {...tailLayout} label=\"E-mail\" name=\"email\" className=\"login__form-item\">\n            <Input type=\"email\" />\n          </Form.Item>\n          <Form.Item {...tailLayout} label=\"Password\" name=\"password\" className=\"login__form-item\">\n            <Input type=\"password\" />\n          </Form.Item>\n          <div className=\"login__form-action\">\n            <Button type=\"primary\" onClick={onHandleSubmit}>\n              Login\n            </Button>\n          </div>\n        </Form>\n      </div>\n    </Layout.Content>\n  );\n}\n\nexport default Login;\n","/**\n * Extract the gameId from react history\n * @param {object} history\n * @returns {string}\n */\nexport const getGameIdFromURL = (history) => {\n  const { pathname = '/' } = history?.location ?? {};\n  return pathname.substring(1);\n};\n\n/**\n * Extract the gameId from react history.location\n * @param {object} history\n * @returns {string}\n */\nexport const getGameIdFromLocation = (location) => {\n  const { pathname = '/' } = location ?? {};\n  return pathname.substring(1);\n};\n\n/**\n * Verify if the game id exists and has the correct length\n * @param {string} gameId\n * @returns\n */\nexport const isValidGameId = (gameId) => {\n  return gameId && gameId.length === 4;\n};\n\n/**\n * Get random element/item from a list\n * @param {array} list\n * @returns one random item\n */\nexport const getRandomItem = (list) => {\n  return list[Math.floor(Math.random() * list.length)];\n};\n\n/**\n * Get date from now within the given seconds\n * @param {number} seconds\n * @returns\n */\nexport const inNSeconds = (seconds) => {\n  return Date.now() + seconds * 1000;\n};\n\n/**\n * Get color name from letter\n * @param {string} letter\n * @returns\n */\nexport const getColorFromLetter = (letter) => {\n  return (\n    {\n      A: 'red',\n      B: 'blue',\n      C: 'green',\n      D: 'yellow',\n      E: 'pink',\n      F: 'purple',\n      G: 'teal',\n      H: 'orange',\n      I: 'coffee',\n      J: 'navy',\n      K: 'light-green',\n      L: 'brown',\n      M: 'hot-pink',\n      N: 'violet',\n      O: 'forest',\n      P: 'cream',\n\n      // repeats\n      Q: 'red',\n      R: 'blue',\n      S: 'green',\n      T: 'yellow',\n      U: 'pink',\n      V: 'purple',\n      W: 'teal',\n      X: 'none',\n      Y: 'orange',\n      Z: 'coffee',\n    }[letter] ?? 'none'\n  );\n};\n\n/**\n * Gets color name from index\n * @param {number} letter\n * @returns\n */\nexport const getColorFromIndex = (letter) => {\n  return (\n    [\n      'red',\n      'blue',\n      'green',\n      'yellow',\n      'pink',\n      'purple',\n      'teal',\n      'orange',\n      'coffee',\n      'navy',\n      'light-green',\n      'brown',\n      'hot-pink',\n      'violet',\n      'forest',\n      'cream',\n    ][letter] ?? 'none'\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Layout, Spin, Typography } from 'antd';\n\nfunction LoadingPage({ message }) {\n  return (\n    <Layout.Content className=\"loading-page\">\n      <Spin size=\"large\" />\n      <Typography.Text>{message}</Typography.Text>\n    </Layout.Content>\n  );\n}\n\nLoadingPage.propTypes = {\n  message: PropTypes.string,\n};\n\nLoadingPage.defaultProps = {\n  message: 'Carregando...',\n};\n\nexport default LoadingPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Alert } from 'antd';\n\nfunction PageError({ message, description }) {\n  return (\n    <div className=\"container container--center\">\n      <Alert message={message} description={description} type=\"error\" showIcon />\n    </div>\n  );\n}\n\nPageError.propTypes = {\n  message: PropTypes.string,\n  description: PropTypes.string,\n};\n\nPageError.defaultProps = {\n  message: 'Algo errado não está certo',\n  description: 'Não era pra você estar vendo esta mensagem.',\n};\n\nexport default PageError;\n","import React, { memo } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Layout } from 'antd';\n// Components\nimport LoadingPage from '../loaders/LoadingPage';\nimport PageError from '../errors/PageError';\n\n/**\n * Wrapping container around a game screen\n * @param {*} props\n * @returns\n */\nfunction PhaseContainer({ info, phase, allowedPhase, children, className, fullScreen, white }) {\n  if (!info?.gameName || allowedPhase !== phase) {\n    return <LoadingPage />;\n  }\n\n  if (!phase) {\n    return <PageError message=\"Algo errado não está certo\" description=\"Estado do jogo não está correto\" />;\n  }\n\n  const baseClass = 'phase-container';\n\n  return (\n    <Layout.Content\n      className={clsx(\n        baseClass,\n        fullScreen && `${baseClass}--full-screen`,\n        white && `${baseClass}--white`,\n        className\n      )}\n    >\n      <span className={`${baseClass}__title`}>{info.title}</span>\n      {children}\n    </Layout.Content>\n  );\n}\n\nPhaseContainer.propTypes = {\n  children: PropTypes.any.isRequired,\n  allowedPhase: PropTypes.string,\n  className: PropTypes.string,\n  fullScreen: PropTypes.bool,\n  info: PropTypes.object,\n  phase: PropTypes.string,\n  white: PropTypes.bool,\n};\n\nPhaseContainer.defaultProps = {\n  allowedPhase: '',\n  className: '',\n  fullScreen: false,\n  phase: '',\n  white: false,\n};\n\nexport default memo(PhaseContainer);\n","export default __webpack_public_path__ + \"static/media/avatars.a2364409.svg\";","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Avatar as AntAvatar } from 'antd';\n// Images\nimport avatars from '../../images/avatars.svg';\n\nfunction Avatar({ id = 25, size = 'large', shape = 'circle', alt = 'Fulano', className = '' }) {\n  return (\n    <AntAvatar\n      className={clsx('avatar', className)}\n      size={size}\n      shape={shape}\n      alt={alt}\n      src={\n        <svg viewBox=\"0 0 100 100\">\n          <use href={avatars + `#avatar-${id}`}></use>\n        </svg>\n      }\n    />\n  );\n}\n\nAvatar.propTypes = {\n  id: PropTypes.number,\n  className: PropTypes.string,\n  size: PropTypes.string,\n  shape: PropTypes.string,\n  alt: PropTypes.string,\n};\n\nexport default memo(Avatar);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Components\nimport Avatar from './Avatar';\n\nfunction AvatarEntry({ id = 25, name = 'Fulano', animate = false, className = '' }) {\n  return (\n    <div className={clsx('avatar-entry', animate && 'avatar-entry--floating', className)}>\n      <Avatar id={id} className=\"avatar-entry__avatar\" />\n      <div className=\"avatar-entry__name\">{name}</div>\n    </div>\n  );\n}\n\nAvatar.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  animate: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nexport default memo(AvatarEntry);\n","class LocalStorage {\n  constructor() {\n    this.store = {};\n    this.notLoaded = true;\n    this.appName = 'tarde-divertida';\n\n    this.init();\n  }\n\n  init() {\n    this.load();\n    return this.get();\n  }\n\n  get(key) {\n    if (this.notLoaded) {\n      this.load();\n    }\n\n    if (key) {\n      return this.store[key] || null;\n    }\n    return this.store;\n  }\n\n  load() {\n    const localStorage = JSON.parse(window.localStorage.getItem(this.appName));\n    if (localStorage) {\n      this.store = localStorage;\n      this.notLoaded = false;\n    }\n  }\n\n  // To Remove a property, you can use the set method, but passing an object with the key and value\n  // null, the property will be removed from local storage\n  set(value) {\n    if (this.notLoaded) {\n      this.load();\n    }\n\n    const type = typeof value;\n    if (type !== 'string' && type !== 'object') {\n      console.error('localStorage set value must be a string or a key-value object');\n      return;\n    }\n\n    // When value is a string, use as a property toggle\n    if (typeof value === 'string') {\n      this.store[value] = !this.store[value];\n    } else {\n      // Remove any null or undefined property\n      Object.entries(value).forEach(([key, item]) => {\n        if (item === null || item === undefined) {\n          delete value[key];\n        }\n      });\n\n      this.store = {\n        ...this.store,\n        ...value,\n      };\n    }\n\n    this.save();\n  }\n\n  save() {\n    if (this.notLoaded) {\n      this.load();\n    }\n\n    window.localStorage.setItem(this.appName, JSON.stringify(this.store));\n    this.load();\n  }\n}\n\nexport default new LocalStorage();\n","import React, { useCallback, useEffect, useState } from 'react';\n// Design Resources\nimport { Alert, Button, Image, Input, notification, Spin, Tooltip } from 'antd';\nimport { CaretLeftOutlined, CaretRightOutlined, InfoCircleOutlined } from '@ant-design/icons';\n// API & Hooks\nimport { GAME_API } from '../../adapters';\nimport { useLoading } from '../../hooks';\nimport useGlobalState from '../../hooks/useGlobalState';\n// Images\nimport avatars from '../../images/avatars.svg';\n// Services\nimport localStorage from '../../services/localStorage';\n// Utils\nimport { AVATAR_IDS, PUBLIC_URL } from '../../utils/constants';\nimport { getRandomItem } from '../../utils/index';\n\nfunction Join({ players, info }) {\n  const [isLoading, setLoader] = useLoading();\n  const [gameId] = useGlobalState('gameId');\n  const [gameName] = useGlobalState('gameName');\n  const [, setMe] = useGlobalState('me');\n  const [, setMyAvatar] = useGlobalState('myAvatar');\n\n  const [availableAvatars, setAvailableAvatars] = useState(AVATAR_IDS);\n  const [tempAvatar, setTempAvatar] = useState(getRandomItem(AVATAR_IDS));\n  const [tempMe, setTempMe] = useState('');\n  const [sameGameId, setSameGameId] = useState(false);\n\n  const [localStorageAvatar, setLocalStorageAvatar] = useState(null);\n\n  // Calculate available avatars and monitor if user chose a non-available one\n  useEffect(() => {\n    const usedAvatars = Object.values(players).reduce((acc, p) => {\n      acc[p.avatarId] = true;\n      return acc;\n    }, {});\n\n    const newAvailableAvatars = AVATAR_IDS.filter((avatarId) => usedAvatars[avatarId] === undefined);\n\n    if (newAvailableAvatars.includes(tempAvatar) && !localStorageAvatar) {\n      setTempAvatar(getRandomItem(newAvailableAvatars));\n    }\n\n    setAvailableAvatars(newAvailableAvatars);\n  }, [players]); // eslint-disable-line\n\n  // Load name and avatarId from localStorage\n  useEffect(() => {\n    const lsAvatarId = localStorage.get('avatarId');\n    const lsMe = localStorage.get('me');\n    const lsGameId = localStorage.get('gameId');\n\n    if (lsAvatarId && lsMe) {\n      setTempAvatar(localStorage.get('avatarId'));\n      setTempMe(localStorage.get('me') ?? '');\n      setLocalStorageAvatar(lsAvatarId);\n\n      if (lsGameId === gameId) {\n        setSameGameId(true);\n      }\n    }\n  }, []); // eslint-disable-line\n\n  const onPreviousAvatar = useCallback(() => {\n    const index = availableAvatars.indexOf(tempAvatar);\n    const newIndex = index === 0 ? availableAvatars.length - 1 : index - 1;\n    setTempAvatar(availableAvatars[newIndex]);\n  }, [availableAvatars, tempAvatar]);\n\n  const onNextAvatar = useCallback(() => {\n    const index = availableAvatars.indexOf(tempAvatar);\n    const newIndex = index === availableAvatars.length - 1 ? 0 : index + 1;\n    setTempAvatar(availableAvatars[newIndex]);\n  }, [availableAvatars, tempAvatar]);\n\n  const onAddPlayer = useCallback(async () => {\n    try {\n      setLoader('add-player', true);\n      const response = await GAME_API.addPlayer({\n        gameId,\n        gameName,\n        playerName: tempMe,\n        playerAvatarId: tempAvatar,\n      });\n\n      setMe(response.data.name);\n      setMyAvatar(response.data.avatarId);\n      localStorage.set({\n        me: response.data.name,\n        avatarId: response.data.avatarId,\n        gameId,\n      });\n    } catch (e) {\n      notification.error({\n        message: 'Vixi, o aplicativo encontrou um erro ao tentar te adicionar como jogador',\n        description: JSON.stringify(e.message),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n    } finally {\n      setLoader('add-player', false);\n    }\n  }, [gameId, gameName, tempMe, tempAvatar]); // eslint-disable-line\n\n  return (\n    <div className=\"lobby-join\">\n      <Image\n        alt={info?.title}\n        src={`${PUBLIC_URL.BANNERS}game-image-${info?.gameName}.jpg`}\n        fallback={`${PUBLIC_URL.BANNERS}/game-image-em-breve.jpg`}\n        className=\"lobby-join__game-image\"\n      />\n      <h1 className=\"lobby-join__title\">\n        {Boolean(localStorageAvatar) ? 'Bem-vindo de volta!' : 'Selecione seu avatar'}\n      </h1>\n      <div className=\"lobby-join__avatar-selection\">\n        <Button type=\"dashed\" onClick={onPreviousAvatar} className=\"lobby-join__avatar-nav-button\">\n          <CaretLeftOutlined />\n        </Button>\n        <svg viewBox=\"0 0 100 100\" className=\"lobby-join__avatar-selection-image\">\n          <use href={avatars + `#avatar-${tempAvatar}`}></use>\n        </svg>\n        <Button type=\"dashed\" onClick={onNextAvatar} className=\"lobby-join__avatar-nav-button\">\n          <CaretRightOutlined />\n        </Button>\n      </div>\n\n      {Boolean(localStorageAvatar) ? (\n        <Alert\n          className=\"lobby-join__avatar-alert\"\n          type=\"success\"\n          message=\"Você está de volta! Lembramos seu nome e avatar!\"\n        />\n      ) : (\n        <Alert\n          className=\"lobby-join__avatar-alert\"\n          type=\"warning\"\n          message=\"Se alguém selecionar um mesmo avatar, um avatar aleatório será atribuido à você.\"\n        />\n      )}\n\n      {Boolean(sameGameId) && (\n        <Alert\n          className=\"lobby-join__avatar-alert\"\n          type=\"error\"\n          message=\"Se você está retornando a um jogo, NÃO mude seu apelido! Se o apelido for modificado, você será adicionado como um novo jogador e tudo pode bugar.\"\n        />\n      )}\n\n      <Input\n        className=\"lobby-join__name-input\"\n        onChange={(e) => setTempMe(e.target.value.trim())}\n        placeholder=\"Insira seu nome\"\n        value={tempMe}\n        maxLength={10}\n        suffix={\n          <Tooltip title=\"Máximo de 10 characteres\">\n            <InfoCircleOutlined />\n          </Tooltip>\n        }\n      />\n      <Button\n        className=\"lobby-join__join-button\"\n        type=\"primary\"\n        disabled={!Boolean(tempMe) || isLoading}\n        onClick={onAddPlayer}\n      >\n        {isLoading ? <Spin size=\"small\" /> : 'Entrar no jogo'}\n      </Button>\n    </div>\n  );\n}\n\nexport default Join;\n","import React, { memo } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Space } from 'antd';\nimport { RocketFilled } from '@ant-design/icons';\n// State\nimport { useLoading, useGlobalState } from '../../hooks';\n\nfunction AdminOnly({ children, className = '' }) {\n  const [isAdmin] = useGlobalState('isAdmin');\n\n  if (!isAdmin) return <span></span>;\n\n  return <Space className={clsx('admin-only-container', className)}>{children}</Space>;\n}\n\nAdminOnly.propTypes = {\n  children: PropTypes.element.isRequired,\n  className: PropTypes.string,\n};\n\nexport default memo(AdminOnly);\n\nexport function AdminButton({ action, label }) {\n  const [isLoading] = useLoading();\n  return (\n    <Button icon={<RocketFilled />} danger type=\"primary\" onClick={action} disabled={isLoading}>\n      {label}\n    </Button>\n  );\n}\n\nexport function AdminOnlyButton({ action, label }) {\n  return (\n    <AdminOnly>\n      <AdminButton action={action} label={label} />\n    </AdminOnly>\n  );\n}\n","import React, { useCallback } from 'react';\n// Design Resources\nimport { Button, Image, message, notification, Typography } from 'antd';\n// API & Hooks\nimport { GAME_API } from '../../adapters';\nimport useGlobalState from '../../hooks/useGlobalState';\nimport { useLoading } from '../../hooks';\n// Images\nimport avatars from '../../images/avatars.svg';\n// Utils and Resources\nimport { PUBLIC_URL } from '../../utils/constants';\n// Components\nimport AdminOnly from '../shared/AdminOnly';\n\nfunction Waiting({ info, players }) {\n  const [isLoading, setLoader] = useLoading();\n  const [gameId] = useGlobalState('gameId');\n  const [gameName] = useGlobalState('gameName');\n  const [gameMeta] = useGlobalState('gameMeta');\n\n  const [me] = useGlobalState('me');\n  const [myAvatar] = useGlobalState('myAvatar');\n\n  const onLockGameAndStart = useCallback(async () => {\n    try {\n      setLoader('lock-game', true);\n      const response = await GAME_API.lockGame({\n        gameId,\n        gameName,\n      });\n      if (response.data.isLocked) {\n        message.success('Jogo trancado e iniciado com sucesso!');\n      }\n    } catch (e) {\n      notification.error({\n        message: 'Vixi, o aplicativo encontrou um erro ao tentar trancar e iniciar o jogo',\n        description: JSON.stringify(e.message),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n    } finally {\n      setLoader('lock-game', false);\n    }\n  }, [gameId, gameName, setLoader]);\n\n  const numPlayers = Object.keys(players).length;\n\n  return (\n    <div className=\"lobby-waiting\">\n      <Image\n        alt={info?.title}\n        src={`${PUBLIC_URL.BANNERS}game-image-${info?.gameName}.jpg`}\n        fallback={`${PUBLIC_URL.BANNERS}/game-image-em-breve.jpg`}\n      />\n\n      <h1 className=\"center\">{me || 'Fulano'},</h1>\n      <svg viewBox=\"0 0 100 100\" className=\"lobby-waiting__avatar\">\n        <use href={avatars + `#avatar-${myAvatar}`}></use>\n      </svg>\n      <h3 className=\"center\">Aguarde os outros jogadores entrarem.</h3>\n      <AdminOnly className=\"lobby-waiting__lock-button\">\n        <Typography.Text className=\"center padding\">\n          Jogadores necessários: {numPlayers}/{gameMeta.min}\n        </Typography.Text>\n        <Button\n          type=\"primary\"\n          danger\n          onClick={onLockGameAndStart}\n          disabled={isLoading || numPlayers < gameMeta.min}\n        >\n          Trancar e Iniciar Jogo\n        </Button>\n      </AdminOnly>\n    </div>\n  );\n}\n\nexport default Waiting;\n","import React from 'react';\n\nfunction CloudBackground() {\n  return (\n    <div className=\"cloud-background\">\n      <div className=\"cloud-background__animation-1\">\n        <div className=\"cloud-background__cloud\"></div>\n      </div>\n\n      <div className=\"cloud-background__animation-2\">\n        <div className=\"cloud-background__cloud\"></div>\n      </div>\n\n      <div className=\"cloud-background__animation-3\">\n        <div className=\"cloud-background__cloud\"></div>\n      </div>\n\n      <div className=\"cloud-background__animation-4\">\n        <div className=\"cloud-background__cloud\"></div>\n      </div>\n\n      <div className=\"cloud-background__animation-5\">\n        <div classNameName=\"cloud-background__cloud\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default CloudBackground;\n","import React from 'react';\n// Hooks\nimport useGlobalState from '../../hooks/useGlobalState';\n// Components\nimport PhaseContainer from '../shared/PhaseContainer';\nimport AvatarEntry from '../avatars/AvatarEntry';\nimport Join from './Join';\nimport Waiting from './Waiting';\nimport CloudBackground from './CloudBackground';\n\nfunction Lobby({ players, info }) {\n  const [me] = useGlobalState('me');\n  const [myAvatar] = useGlobalState('myAvatar');\n\n  return (\n    <PhaseContainer phase=\"LOBBY\" allowedPhase=\"LOBBY\" info={info}>\n      <div className=\"lobby__room\">\n        {Object.values(players).map((player, index) => (\n          <AvatarEntry\n            key={player.name}\n            id={player.avatarId}\n            name={player.name}\n            className={`lobby__seat lobby__seat--${index}`}\n            animate\n          />\n        ))}\n\n        {me && myAvatar ? <Waiting players={players} info={info} /> : <Join players={players} info={info} />}\n      </div>\n\n      <CloudBackground />\n    </PhaseContainer>\n  );\n}\n\nexport default Lobby;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Avatar as AntAvatar, Typography } from 'antd';\nimport { LikeFilled } from '@ant-design/icons';\n// Components\nimport Avatar from '../avatars/Avatar';\n\nfunction ReadyPlayersBar({\n  players,\n  readyText = 'Estou pronto!',\n  readyTextPlural = 'Estamos prontos!',\n  showNames,\n}) {\n  const readyPlayers = Object.values(players).filter((player) => player.ready);\n\n  if (readyPlayers.length === 0) {\n    return <span></span>;\n  }\n\n  return (\n    <div className=\"ready-player-bar\">\n      <div className=\"ready-player-bar__bar\">\n        <AntAvatar.Group size=\"small\">\n          {readyPlayers.map((player) => (\n            <Avatar key={player.name} id={player.avatarId} />\n          ))}\n        </AntAvatar.Group>\n        <span className=\"ready-player-bar__speech-bubble\">\n          <Typography.Text>{readyPlayers.length > 1 ? readyTextPlural : readyText}</Typography.Text>\n          <LikeFilled className=\"ready-player-bar__speech-bubble-icon\" />\n        </span>\n      </div>\n      {showNames && (\n        <span className=\"ready-player-bar__names\">\n          ({readyPlayers.map((player) => player.name).join(', ')})\n        </span>\n      )}\n    </div>\n  );\n}\n\nReadyPlayersBar.propTypes = {\n  players: PropTypes.object.isRequired,\n  readyText: PropTypes.string,\n  readyTextPlural: PropTypes.string,\n  showNames: PropTypes.bool,\n};\n\nReadyPlayersBar.defaultProps = {\n  readyText: 'Estou pronto!',\n  readyTextPlural: 'Estamos prontos!',\n  showNames: false,\n};\n\nexport default ReadyPlayersBar;\n","import React from 'react';\n// Design Resources\nimport { Button, Layout, Space, Typography } from 'antd';\nimport { CheckCircleFilled, MehFilled, RobotFilled, SmileFilled } from '@ant-design/icons';\n// State\nimport { GAME_API } from '../../adapters';\nimport { useLoading, useAmIReady, useAPICall } from '../../hooks';\n// Components\nimport RulesCarousel from './RulesCarousel';\nimport LoadingPage from '../loaders/LoadingPage';\nimport ReadyPlayersBar from '../shared/ReadyPlayersBar';\n\nfunction Rules({ players, info }) {\n  const [isLoading] = useLoading();\n  const amIReady = useAmIReady(players);\n\n  const onBeReady = useAPICall({\n    apiFunction: GAME_API.makeMeReady,\n    actionName: 'be-ready',\n    successMessage: 'Pronto! Aguarde os outros jogadores estarem prontos',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar continuar',\n  });\n\n  const onBeReadyQue = useAPICall({\n    apiFunction: GAME_API.makeMeReady,\n    actionName: 'be-ready',\n    successMessage: 'Vixi, se fudeu então, pq o jogo vai começar!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar continuar',\n  });\n\n  if (!info?.gameName) {\n    return <LoadingPage />;\n  }\n\n  return (\n    <Layout.Content className=\"rules\">\n      <Typography.Title className=\"center\">Regras do Jogo</Typography.Title>\n\n      <RulesCarousel info={info} className=\"rules__carousel\" ruleClass=\"rules__rule\" />\n\n      <Space className=\"rules__actions\">\n        <Button\n          type=\"primary\"\n          icon={amIReady ? <CheckCircleFilled /> : <SmileFilled />}\n          disabled={isLoading || amIReady}\n          onClick={() => onBeReady({})}\n        >\n          Entendi tudo e estou pronto para jogar!\n        </Button>\n        <Button\n          icon={amIReady ? <CheckCircleFilled /> : <MehFilled />}\n          disabled={isLoading || amIReady}\n          onClick={() => onBeReady({})}\n        >\n          Não entendi nada, mas vamos lá\n        </Button>\n        <Button\n          type=\"primary\"\n          danger\n          icon={amIReady ? <CheckCircleFilled /> : <RobotFilled />}\n          disabled={isLoading || amIReady}\n          onClick={() => onBeReadyQue({})}\n        >\n          Que?\n        </Button>\n      </Space>\n      <ReadyPlayersBar players={players} showNames />\n    </Layout.Content>\n  );\n}\n\nexport default Rules;\n","export default __webpack_public_path__ + \"static/media/arte-ruim-timer.1f16745a.mp3\";","import React, { useRef } from 'react';\nimport { Stage, Layer, Line } from 'react-konva';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n\nconst DrawingCanvas = ({ lines, setLines, className = '' }) => {\n  const isDrawing = useRef(false);\n\n  const handleMouseDown = (e) => {\n    isDrawing.current = true;\n    const pos = e.target.getStage().getPointerPosition();\n    setLines([...lines, [pos.x, pos.y]]);\n    // return false;\n  };\n\n  const handleMouseMove = (e) => {\n    // no drawing - skipping\n    if (!isDrawing.current) {\n      return;\n    }\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    let lastLine = lines[lines.length - 1];\n    // add point\n    lastLine = lastLine.concat([point.x, point.y]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLine);\n    setLines(lines.concat());\n  };\n\n  const handleMouseUp = () => {\n    isDrawing.current = false;\n  };\n\n  return (\n    <Stage\n      width={500}\n      height={500}\n      onMouseDown={handleMouseDown}\n      onMousemove={handleMouseMove}\n      onMouseup={handleMouseUp}\n      onTouchStart={handleMouseDown}\n      onTouchMove={handleMouseMove}\n      onTouchEnd={handleMouseUp}\n      className={clsx('a-drawing-canvas', className)}\n    >\n      <Layer>\n        {lines.map((line, i) => (\n          <Line\n            key={i}\n            points={line}\n            stroke=\"#222222\"\n            strokeWidth={5}\n            tension={0.5}\n            lineCap=\"round\"\n            globalCompositeOperation=\"source-over\"\n          />\n        ))}\n      </Layer>\n    </Stage>\n  );\n};\n\nDrawingCanvas.propTypes = {\n  lines: PropTypes.array.isRequired,\n  setLines: PropTypes.func.isRequired,\n  className: PropTypes.string,\n};\n\nexport default DrawingCanvas;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { getColorFromLetter } from '../../utils';\n\nfunction Card({\n  children,\n  header,\n  footer,\n  color,\n  size,\n  randomColor,\n  className,\n  headerClassName,\n  footerClassName,\n}) {\n  const baseClass = 'card';\n\n  const bgColor = randomColor ? getColorFromLetter(typeof children === 'string' ? children[0] : 'X') : color;\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, className)}>\n      <span className={clsx(`${baseClass}__header`, `color-background--${bgColor}`, headerClassName)}>\n        {header}\n      </span>\n      <span className={`${baseClass}__text`}>{children}</span>\n      {footer && <span className={clsx(`${baseClass}__footer`, footerClassName)}>{footer}</span>}\n    </div>\n  );\n}\n\nCard.propTypes = {\n  children: PropTypes.any.isRequired,\n  header: PropTypes.string,\n  footer: PropTypes.string,\n  color: PropTypes.string,\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  randomColor: PropTypes.bool,\n  className: PropTypes.string,\n  headerClassName: PropTypes.string,\n  footerClassName: PropTypes.string,\n};\n\nCard.defaultProps = {\n  header: 'Carta',\n  color: 'none',\n  size: 'medium',\n  randomColor: false,\n  className: '',\n  headerClassName: '',\n  footerClassName: '',\n};\n\nexport default memo(Card);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTimer } from 'react-timer-hook';\n// Utils\nimport { inNSeconds } from '../../../utils';\n// Components\nimport DrawingCanvas from './DrawingCanvas';\nimport Card from '../../cards/Card';\n\nfunction DrawPhaseDrawStep({ secretCard, onSubmitDrawing }) {\n  const [lines, setLines] = useState([]);\n\n  const { seconds } = useTimer({\n    expiryTimestamp: inNSeconds(11),\n    autoStart: true,\n    onExpire: () =>\n      onSubmitDrawing({\n        drawing: JSON.stringify(lines),\n        cardId: secretCard.id,\n      }),\n  });\n\n  return (\n    <div className=\"a-draw-phase-draw-step\">\n      <Card\n        size=\"large\"\n        header=\"Desenhe\"\n        footer={Array(secretCard?.level).fill('•').join('')}\n        className=\"a-draw-phase-draw-step__card\"\n        color=\"yellow\"\n      >\n        {secretCard?.text}\n        <span className=\"a-draw-phase-draw-step__timer\">{seconds - 1}</span>\n      </Card>\n      <DrawingCanvas lines={lines} setLines={setLines} />\n    </div>\n  );\n}\n\nDrawPhaseDrawStep.propTypes = {\n  secretCard: PropTypes.shape({\n    text: PropTypes.string,\n    level: PropTypes.number,\n  }).isRequired,\n  onSubmitDrawing: PropTypes.func.isRequired,\n};\n\nexport default DrawPhaseDrawStep;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Spin } from 'antd';\n// Components\nimport ReadyPlayersBar from './ReadyPlayersBar';\nimport Title from './Title';\nimport Instruction from './Instruction';\n\nconst WaitingRoom = ({ players, title, instruction, children }) => {\n  return (\n    <div className=\"waiting-room\">\n      <Title>{title}</Title>\n      <Spin />\n      <Instruction>{instruction}</Instruction>\n      {children}\n      <ReadyPlayersBar players={players} showNames />\n    </div>\n  );\n};\n\nWaitingRoom.propTypes = {\n  players: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n  instruction: PropTypes.string.isRequired,\n  children: PropTypes.any,\n};\n\nexport default WaitingRoom;\n","export default __webpack_public_path__ + \"static/media/rodada-title.2e3f9c1d.svg\";","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Resources\nimport { AVATAR_DESCRIPTIONS_BR } from '../../utils/constants';\n// Components\nimport Avatar from './Avatar';\n\nfunction AvatarName({\n  player,\n  size = 'default',\n  className = '',\n  withDescription = false,\n  uppercase = false,\n}) {\n  const baseClass = 'avatar-name';\n\n  return (\n    <span\n      className={clsx(baseClass, `${baseClass}--${size}`, uppercase && `${baseClass}--uppercase`, className)}\n    >\n      <Avatar id={player.avatarId} className=\"avatar-name__avatar\" size={size} />\n      <span className=\"avatar-name__name\">{player.name}</span>\n      {withDescription && (\n        <span className=\"avatar-name__name\">, {AVATAR_DESCRIPTIONS_BR[player.avatarId]}</span>\n      )}\n    </span>\n  );\n}\n\nAvatarName.propTypes = {\n  player: PropTypes.shape({\n    avatarId: PropTypes.number,\n    name: PropTypes.string,\n  }).isRequired,\n  size: PropTypes.oneOf(['small', 'default', 'large']),\n  withDescription: PropTypes.bool,\n  uppercase: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nexport default memo(AvatarName);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Button } from 'antd';\n// Hook and Utils\nimport { useTimer } from 'react-timer-hook';\nimport { inNSeconds } from '../../utils';\n\nfunction TimedButton({ duration, label, onExpire, showTimer, ...props }) {\n  const { seconds } = useTimer({\n    expiryTimestamp: inNSeconds(duration),\n    autoStart: true,\n    onExpire: showTimer ? onExpire : undefined,\n  });\n\n  const timeClass = 'timed-button__time';\n\n  return (\n    <Button {...props}>\n      {label} {showTimer && <span className={clsx(timeClass, `${timeClass}--${props.type}`)}>{seconds}</span>}\n    </Button>\n  );\n}\n\nTimedButton.propTypes = {\n  duration: PropTypes.number,\n  label: PropTypes.any.isRequired,\n  onExpire: PropTypes.func.isRequired,\n  showTimer: PropTypes.bool,\n};\n\nTimedButton.defaultProps = {\n  duration: 10,\n  showTimer: true,\n};\n\nexport default TimedButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Tag } from 'antd';\n// Images\nimport rodadaTitle from '../../images/rodada-title.svg';\n// Components\nimport AvatarName from '../avatars/AvatarName';\nimport TimedButton from './TimedButton';\n\nfunction Team({ team, players, className }) {\n  return (\n    <div className={className}>\n      <h1>Time {team.name}</h1>\n      <ul className=\"round-announcement__team-members\">\n        {team.members.map((playerName) => (\n          <li key={`team-member-${playerName}`} className=\"round-announcement__team-member\">\n            <AvatarName player={players[playerName]} />\n          </li>\n        ))}\n      </ul>\n      <Tag className=\"round-announcement__points\" color=\"blue\">\n        {team.score} {team.score > 1 ? 'pontos' : 'ponto'}\n      </Tag>\n    </div>\n  );\n}\n\nfunction RoundAnnouncement({ round, onPressButton, buttonText, time, teams, players, children }) {\n  return (\n    <div className=\"round-announcement\">\n      {Boolean(teams?.A) && (\n        <Team className=\"round-announcement__team-left\" team={teams.A} players={players} />\n      )}\n\n      <div className=\"round-announcement__main\">\n        <div className=\"round-announcement__title\">\n          <img src={rodadaTitle} alt=\"Rodada\" />\n        </div>\n        <div className=\"round-announcement__round-wrapper\">\n          <div className=\"round-announcement__circle\"></div>\n          <div className=\"round-announcement__number\">{round ?? 0}</div>\n        </div>\n\n        {children}\n\n        {Boolean(onPressButton) && !Boolean(time) && (\n          <Button type=\"primary\" onClick={onPressButton} className=\"round-announcement__go-button\">\n            {buttonText}\n          </Button>\n        )}\n\n        {Boolean(onPressButton) && Boolean(time) && (\n          <TimedButton\n            label={buttonText}\n            type=\"primary\"\n            onClick={onPressButton}\n            onExpire={onPressButton}\n            duration={time}\n            showTimer\n          />\n        )}\n      </div>\n\n      {Boolean(teams?.B) && (\n        <Team className=\"round-announcement__team-right\" team={teams.B} players={players} />\n      )}\n    </div>\n  );\n}\n\nRoundAnnouncement.propTypes = {\n  round: PropTypes.number,\n  onPressButton: PropTypes.func,\n  buttonText: PropTypes.string,\n  time: PropTypes.number,\n  players: PropTypes.object,\n  teams: PropTypes.object,\n};\n\nRoundAnnouncement.defaultProps = {\n  buttonText: 'Prosseguir',\n  time: 0,\n};\n\nexport default RoundAnnouncement;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Loading from '../loaders/Loading';\n\nfunction StepSwitcher({ children, step, conditions }) {\n  if (!children[step]) {\n    return <Loading />;\n  }\n\n  return (conditions?.[step] ?? true) && <Fragment>{children[step]}</Fragment>;\n}\n\nStepSwitcher.propTypes = {\n  children: PropTypes.any.isRequired,\n  step: PropTypes.number.isRequired,\n  conditions: PropTypes.arrayOf(PropTypes.bool),\n};\n\nexport default StepSwitcher;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Space } from 'antd';\nimport { FireFilled } from '@ant-design/icons';\n// State & Hooks\nimport useGlobalState from '../../hooks/useGlobalState';\nimport { useAPICall, useLoading } from '../../hooks';\nimport { GAME_API } from '../../adapters';\n\nfunction AdminForceNextPhase({ className = '' }) {\n  const [isLoading] = useLoading();\n  const [isAdmin] = useGlobalState('isAdmin');\n\n  const onGoToNextPhase = useAPICall({\n    apiFunction: GAME_API.goToNextPhase,\n    actionName: 'force-next-phase',\n    successMessage: 'Funcionou, próxima fase!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar ir para a próxima fase',\n  });\n\n  if (!isAdmin) return <span></span>;\n\n  return (\n    <Space className={clsx('admin-only-container', className)}>\n      <Button\n        icon={<FireFilled />}\n        type=\"primary\"\n        danger\n        onClick={() => onGoToNextPhase({})}\n        disabled={isLoading}\n      >\n        ADMIN: Force Next Phase\n      </Button>\n    </Space>\n  );\n}\n\nAdminForceNextPhase.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default AdminForceNextPhase;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport useSound from 'use-sound';\n\n// State & Hooks\nimport { useGlobalState, useAmIReady, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { ARTE_RUIM_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\nimport arteRuimTimer from '../../../sounds/arte-ruim-timer.mp3';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport DrawPhaseDrawStep from './DrawPhaseDrawStep';\nimport WaitingRoom from '../../shared/WaitingRoom';\nimport RoundAnnouncement from '../../shared/RoundAnnouncement';\nimport Instruction from '../../shared/Instruction';\nimport StepSwitcher from '../../shared/StepSwitcher';\nimport AdminForceNextPhase from '../../shared/AdminForceNextPhase';\n\nfunction DrawPhase({ players, state, info }) {\n  const amIReady = useAmIReady(players, state);\n  const [me] = useGlobalState('me');\n  const [step, setStep] = useState(0);\n  const [secretCard, setSecretCard] = useState({});\n  const [play] = useSound(arteRuimTimer, { volume: 0.4 });\n\n  useEffect(() => {\n    setSecretCard(players[me].currentCard ?? {});\n  }, [players, me]);\n\n  const onSubmitDrawing = useAPICall({\n    apiFunction: ARTE_RUIM_API.submitDrawing,\n    actionName: 'submit-drawing',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: 'Acabou o tempo! Aguarde enquanto os outros participantes desenham',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar o desenho',\n  });\n\n  const onStartDrawing = () => {\n    play();\n    setStep(1);\n  };\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ARTE_RUIM.DRAW}\n      className=\"draw-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!amIReady, !amIReady]}>\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state?.round}\n          onPressButton={onStartDrawing}\n          buttonText=\"Um dó, lá, si... vamos ir... já!\"\n        >\n          <Instruction white>\n            Você terá 10 segundos para ler a sua carta e desenhá-la.\n            <br />\n            Aperte o botão quando estiver pronto!\n            <br />\n            Fique esperto porque o tempo começa assim que você apertar.\n            <br />\n            Não 'seje' lerdo.\n            <br />\n          </Instruction>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <DrawPhaseDrawStep secretCard={secretCard} onSubmitDrawing={onSubmitDrawing} />\n\n        {/* Step 2 */}\n        <Fragment>\n          <WaitingRoom\n            players={players}\n            title=\"Pronto!\"\n            instruction=\"Vamos aguardar enquanto os outros jogadores terminam seus desenhos!\"\n          />\n          <AdminForceNextPhase />\n        </Fragment>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default DrawPhase;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nconst getPathFromKonvaLines = (lines) => {\n  const result = lines.map((lineArr) => {\n    let path = '';\n    for (let x = 0, y = 1; y < lineArr.length; x += 2, y += 2) {\n      if (lineArr[x + 2] && lineArr[y + 2]) {\n        path += `M${lineArr[x]},${lineArr[y]} L${lineArr[x + 2]},${lineArr[y + 2]}`;\n      }\n    }\n\n    return path;\n  });\n\n  return result;\n};\n\nfunction CanvasSVG({ drawing = '', className = '', size = 250 }) {\n  const konvaLines = JSON.parse(drawing);\n  const paths = getPathFromKonvaLines(konvaLines);\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 500 500\"\n      overflow=\"hidden\"\n      className={className}\n      style={{ width: `${size}px` }}\n    >\n      <defs />\n      {paths.map((path, index) => (\n        <path\n          key={`${drawing}-${index}`}\n          d={path}\n          fill=\"none\"\n          stroke=\"#000\"\n          strokeWidth=\"4\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit=\"10\"\n        />\n      ))}\n    </svg>\n  );\n}\n\nCanvasSVG.propTypes = {\n  drawing: PropTypes.string.isRequired,\n  className: PropTypes.string,\n};\n\nexport default memo(CanvasSVG);\n","import React from 'react';\nimport { getColorFromLetter } from '../../../utils';\n\nfunction Ribbon({ cardEntryId }) {\n  const [, , letter] = cardEntryId.split('-');\n  return (\n    <div className=\"a-ribbon\">\n      <div\n        className={`a-ribbon__content a-ribbon__content--${letter} color-background--${getColorFromLetter(\n          letter\n        )}`}\n      >\n        {letter}\n      </div>\n    </div>\n  );\n}\n\nexport default Ribbon;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Components\nimport CanvasSVG from './CanvasSVG';\nimport Ribbon from './Ribbon';\n\nfunction EvaluationAllDrawings({ drawings, activeItem, onActivateItem, votes, canvasSize }) {\n  const liButtonBaseClass = 'a-evaluation-all-drawings__li-drawing-button';\n\n  return (\n    <ul className=\"a-evaluation-all-drawings\">\n      {drawings?.map((drawingEntry) => {\n        const canvasEntryId = `drawing-${drawingEntry.id}`;\n        const isActive = activeItem === canvasEntryId;\n        return (\n          <li\n            key={canvasEntryId}\n            className={clsx(liButtonBaseClass, isActive && `${liButtonBaseClass}--active`)}\n            onClick={() => onActivateItem(canvasEntryId)}\n          >\n            {votes?.[canvasEntryId] && <Ribbon cardEntryId={votes[canvasEntryId]} />}\n            <CanvasSVG\n              drawing={drawingEntry.drawing}\n              className=\"a-evaluation-all-drawings__drawing\"\n              size={canvasSize}\n            />\n            <span className=\"a-evaluation-all-drawings__artist\">{drawingEntry.playerName}</span>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nEvaluationAllDrawings.propTypes = {\n  activeItem: PropTypes.string,\n  drawings: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      drawing: PropTypes.string,\n    })\n  ),\n  onActiveItem: PropTypes.func,\n  votes: PropTypes.object,\n  canvasSize: PropTypes.number,\n};\n\nexport default EvaluationAllDrawings;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { WarningOutlined } from '@ant-design/icons';\nimport { getColorFromLetter } from '../../utils';\n// Components\nimport Card from './Card';\n\nfunction ArteRuimCard({ text, level, header = 'X' }) {\n  return (\n    <Card\n      color={getColorFromLetter(header)}\n      header={header}\n      size=\"medium\"\n      footer={Array(level).fill('•').join('')}\n    >\n      {text ?? <WarningOutlined />}\n    </Card>\n  );\n}\n\nArteRuimCard.propTypes = {\n  text: PropTypes.string.isRequired,\n  header: PropTypes.string,\n  level: PropTypes.number,\n};\n\nexport default memo(ArteRuimCard);\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Utils\nimport { LETTERS } from '../../../utils/constants';\n// Components\nimport Card from '../../cards/ArteRuimCard';\n\nfunction EvaluationAllCards({ cards, activeItem, onActivateItem, votes }) {\n  const liButtonBaseClass = 'a-evaluation-all-cards__li-card-button';\n\n  return (\n    <ul className=\"a-evaluation-all-cards\">\n      {cards.map((cardEntry, index) => {\n        const letter = LETTERS[index];\n        const cardEntryId = `card-${cardEntry.id}-${letter}`;\n        const isActive = activeItem === cardEntryId;\n        const isUsed = Object.values(votes).includes(cardEntryId);\n\n        return (\n          <li\n            role=\"button\"\n            key={cardEntryId}\n            className={clsx(\n              liButtonBaseClass,\n              isActive && `${liButtonBaseClass}--active`,\n              isUsed && `${liButtonBaseClass}--used`\n            )}\n            onClick={() => onActivateItem(cardEntryId)}\n          >\n            <Card text={cardEntry.text} level={cardEntry.level} header={letter} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nEvaluationAllCards.propTypes = {\n  activeItem: PropTypes.string,\n  cards: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n    })\n  ),\n  onActiveItem: PropTypes.func,\n  votes: PropTypes.object,\n};\n\nexport default EvaluationAllCards;\n","import React, { memo } from 'react';\n// Design Resources\nimport { Slider } from 'antd';\n// State & Hooks\nimport { useGlobalState } from '../../../hooks';\n\nconst CanvasResizer = () => {\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n\n  return (\n    <div className=\"a-canvas-resizer\">\n      <div className=\"a-canvas-resizer__label\">Tamanho das Images</div>\n      <Slider\n        className=\"a-canvas-resizer__slider\"\n        defaultValue={canvasSize}\n        min={100}\n        max={500}\n        step={50}\n        onChange={setCanvasSize}\n      />\n    </div>\n  );\n};\n\nexport default memo(CanvasResizer);\n","import React, { Fragment, useCallback, useEffect, useState } from 'react';\n// Design Resources\nimport { Button, Space } from 'antd';\nimport { CloudUploadOutlined } from '@ant-design/icons';\n// Hooks\nimport { useAmIReady, useGlobalState, useAPICall } from '../../../hooks';\n// Utils\nimport { ARTE_RUIM_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport WaitingRoom from '../../shared/WaitingRoom';\nimport EvaluationAllDrawings from './EvaluationAllDrawings';\nimport EvaluationAllCards from './EvaluationAllCards';\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport CanvasResizer from './CanvasResizer';\nimport Title from '../../shared/Title';\nimport Instruction from '../../shared/Instruction';\nimport StepSwitcher from '../../shared/StepSwitcher';\nimport AdminForceNextPhase from '../../shared/AdminForceNextPhase';\n\nfunction prepareVotes(votes) {\n  return Object.entries(votes).reduce((acc, [drawingEntryId, cardEntryId]) => {\n    const [, drawingId] = drawingEntryId.split('-');\n    const [, cardId] = cardEntryId.split('-');\n    acc[drawingId] = cardId;\n    return acc;\n  }, {});\n}\n\nfunction EvaluationPhase({ players, state, info }) {\n  const amIReady = useAmIReady(players, state);\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n  const [cachedCanvasSize] = useGlobalState('cachedCanvasSize');\n  const [step, setStep] = useState(0);\n  const [votes, setVotes] = useState({});\n  const [activeItem, setActiveItem] = useState(null);\n\n  const onSubmitVoting = useAPICall({\n    apiFunction: ARTE_RUIM_API.submitVoting,\n    actionName: 'submit-drawing',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage: 'Avaliação enviada! Agora aguarde os outros jogadores',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar sua avaliação',\n  });\n\n  useEffect(() => {\n    setCanvasSize(cachedCanvasSize);\n  }, []); // eslint-disable-line\n\n  const onActivateItem = useCallback(\n    (entryId) => {\n      const [type] = entryId.split('-');\n      if (!activeItem || activeItem.startsWith(type)) {\n        setActiveItem(entryId);\n      } else {\n        if (type === 'card') {\n          setVotes((prevVotes) => {\n            return {\n              ...prevVotes,\n              [activeItem]: entryId,\n            };\n          });\n        } else {\n          setVotes((prevVotes) => {\n            return {\n              ...prevVotes,\n              [entryId]: activeItem,\n            };\n          });\n        }\n        setActiveItem(null);\n      }\n    },\n    [activeItem]\n  );\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ARTE_RUIM.EVALUATION}\n      className=\"a-evaluation-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!amIReady]}>\n        {/*Step 0 */}\n        <div className=\"a-evaluation-phase__step-one\">\n          <CanvasResizer />\n          <Title>Adivinhação</Title>\n          <Instruction>\n            Encontre os pares de desenho e carta clicando em uma carta ou desenho e em seguida clicando em seu\n            par.\n            <br />\n            Uma bandeirinha aparecerá no topo de cada desenho com a cor e letra da carta que você selecionou.\n            <br />\n            Quando encontrar todos os pares, envie sua avaliação!\n          </Instruction>\n\n          <EvaluationAllDrawings\n            drawings={state?.drawings ?? []}\n            activeItem={activeItem}\n            onActivateItem={onActivateItem}\n            votes={votes}\n            canvasSize={canvasSize}\n          />\n\n          <EvaluationAllCards\n            cards={state?.cards ?? []}\n            activeItem={activeItem}\n            onActivateItem={onActivateItem}\n            votes={votes}\n          />\n\n          <Space className=\"a-evaluation-phase__action-button\">\n            <Button\n              type=\"primary\"\n              onClick={() => onSubmitVoting({ votes: prepareVotes(votes) })}\n              disabled={Object.values(votes).length < state.drawings.length}\n              icon={<CloudUploadOutlined />}\n            >\n              Enviar sua avaliação\n            </Button>\n          </Space>\n        </div>\n\n        {/*Step 1 */}\n        <Fragment>\n          <WaitingRoom\n            players={players}\n            title=\"Pronto!\"\n            instruction=\"Vamos aguardar enquanto os outros jogadores terminam de avaliar!\"\n          />\n          <AdminForceNextPhase />\n        </Fragment>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default EvaluationPhase;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Components\nimport AvatarEntry from '../../avatars/AvatarEntry';\n\nfunction GalleryWindowCredits({ artist, artistAvatarId }) {\n  return (\n    <div className=\"a-gallery-window__credits\">\n      <div className=\"a-gallery-window__label\">Artista</div>\n      <span className=\"a-gallery-window__artist-name\">\n        <AvatarEntry id={artistAvatarId} name={artist} />\n      </span>\n    </div>\n  );\n}\n\nGalleryWindowCredits.propTypes = {\n  artist: PropTypes.string,\n  artistAvatarId: PropTypes.number,\n};\n\nexport default memo(GalleryWindowCredits);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Avatar as AntAvatar } from 'antd';\nimport { MessageFilled } from '@ant-design/icons';\n// Components\nimport Avatar from '../../avatars/Avatar';\n\nfunction GalleryWindowGuesses({ playersSay, players, cards }) {\n  return (\n    <div className=\"a-gallery-window__guesses\">\n      <div className=\"a-gallery-window__label\">Participantes votaram</div>\n      {Object.entries(playersSay).map(([cardId, playersNames], index) => {\n        const card = cards.find((i) => i.id === cardId);\n        return (\n          <div key={`guess-${cardId}-${index}`} className=\"a-gallery-window__guess\">\n            <div className=\"a-gallery-window__speech-bubble\">\n              <MessageFilled className=\"a-gallery-window__speech-bubble-icon\" /> {card.text}\n            </div>\n            <div className=\"a-gallery-window__players\">\n              <AntAvatar.Group>\n                {playersNames.map((playerName) => (\n                  <Avatar\n                    id={players[playerName].avatarId}\n                    key={`guess-avatar-${players[playerName].avatarId}`}\n                  />\n                ))}\n              </AntAvatar.Group>\n              <span className=\"a-gallery-window__players-names\">{playersNames.join(', ')}</span>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nGalleryWindowGuesses.propTypes = {\n  playersSay: PropTypes.object,\n  players: PropTypes.object,\n};\n\nexport default memo(GalleryWindowGuesses);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTimer } from 'react-timer-hook';\n// Design Resources\nimport { Button, Space } from 'antd';\nimport {\n  PauseOutlined,\n  PlayCircleOutlined,\n  StepBackwardOutlined,\n  StepForwardOutlined,\n  TrophyOutlined,\n} from '@ant-design/icons';\n// Utils\nimport { inNSeconds } from '../../../utils';\n\nfunction GalleryWindowControls({ galleryLength, activeIndex, setActiveIndex, setStep }) {\n  const { seconds, isRunning, pause, resume } = useTimer({\n    expiryTimestamp: inNSeconds(10 * galleryLength),\n    autoStart: true,\n    onExpire: () => setStep(1),\n  });\n\n  // Automatically go to the next window every 10 seconds\n  useEffect(() => {\n    if (seconds < 10 * galleryLength && seconds > 0 && seconds % 10 === 0) {\n      setActiveIndex((s) => Math.min(s + 1, galleryLength - 1));\n    }\n  }, [seconds, setActiveIndex, galleryLength]);\n\n  const previousStep = () => {\n    setActiveIndex((s) => Math.max(s - 1, 0));\n  };\n\n  const nextStep = () => {\n    setActiveIndex((s) => Math.min(s + 1, galleryLength - 1));\n  };\n\n  return (\n    <div className=\"a-gallery-window__controls\">\n      <div className=\"a-gallery-window__timer-bar\">\n        <span style={{ width: `${Math.abs((10 * seconds) / galleryLength - 100)}%` }}></span>\n      </div>\n      <Space>\n        <Button\n          size=\"large\"\n          icon={<StepBackwardOutlined />}\n          onClick={previousStep}\n          disabled={activeIndex === 0}\n        >\n          Desenho Anterior\n        </Button>\n        <Button\n          size=\"large\"\n          icon={isRunning ? <PauseOutlined /> : <PlayCircleOutlined />}\n          onClick={isRunning ? pause : resume}\n        />\n        <Button size=\"large\" onClick={nextStep} disabled={activeIndex === galleryLength - 1}>\n          Próximo Desenho <StepForwardOutlined />\n        </Button>\n        <Button size=\"large\" onClick={() => setStep(1)} icon={<TrophyOutlined />}>\n          Ver Ranking\n        </Button>\n      </Space>\n    </div>\n  );\n}\n\nGalleryWindowControls.propTypes = {\n  galleryLength: PropTypes.number,\n  activeIndex: PropTypes.number,\n  setActiveIndex: PropTypes.func,\n  setStep: PropTypes.func,\n};\n\nexport default GalleryWindowControls;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { StarFilled } from '@ant-design/icons';\n\nfunction StarPoints({ quantity, keyPrefix, className = '' }) {\n  if (!quantity || quantity < 1) {\n    return <span></span>;\n  }\n  const starsArray = Array.from({ length: quantity }, (_, i) => <StarFilled key={`${keyPrefix}-${i}`} />);\n  return (\n    <span className={clsx('star-points', className)}>\n      + <span className=\"star-points__stars\">{starsArray}</span> ponto{quantity > 1 ? 's' : ''}\n    </span>\n  );\n}\n\nStarPoints.propTypes = {\n  quantity: PropTypes.number,\n  className: PropTypes.string,\n  keyPrefix: PropTypes.string.isRequired,\n};\n\nexport default memo(StarPoints);\n","import React, { Fragment, memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Avatar as AntAvatar, Typography } from 'antd';\nimport { CrownFilled, DeleteFilled } from '@ant-design/icons';\n// Components\nimport Avatar from '../../avatars/Avatar';\nimport StarPoints from '../../shared/StarPoints';\n\nfunction GalleryWindowResult({\n  artist,\n  correctAnswerId,\n  correctAnswerText,\n  playersPoints,\n  playersSay,\n  players,\n}) {\n  const correctGuesses = Object.values(playersSay?.[correctAnswerId] ?? {});\n\n  return (\n    <div className=\"a-gallery-window__result\">\n      <div className=\"a-gallery-window__label\">E a carta correta é</div>\n      <div className=\"a-gallery-window__speech-bubble\">\n        <CrownFilled className=\"a-gallery-window__speech-bubble-icon\" />\n        {correctAnswerText}\n      </div>\n      {correctGuesses.length ? (\n        <Fragment>\n          <div className=\"a-gallery-window__players\">\n            <AntAvatar.Group>\n              {correctGuesses.map((playerName) => {\n                return (\n                  <Avatar key={`correct-guess-avatar-${playerName}`} id={players[playerName].avatarId} />\n                );\n              })}\n            </AntAvatar.Group>\n            <StarPoints quantity={2} keyPrefix={`guessers-points-${artist}`} />\n            <span className=\"a-gallery-window__players-names\">{correctGuesses.join(', ')}</span>\n          </div>\n          <div className=\"a-gallery-window__artist-points\">\n            <Avatar id={players[artist].avatarId} />{' '}\n            <StarPoints quantity={playersPoints?.[artist]} keyPrefix={`artist-points-${artist}`} />{' '}\n            <span className=\"a-gallery-window__players-names\">{artist}</span>\n          </div>\n        </Fragment>\n      ) : (\n        <Typography.Text className=\"a-gallery-window__no-wins\">\n          <DeleteFilled /> Nossa, ninguém acertou. Esse desenho deve ter sido muito ruim.\n        </Typography.Text>\n      )}\n    </div>\n  );\n}\n\nGalleryWindowResult.propTypes = {\n  artist: PropTypes.string,\n  correctAnswer: PropTypes.string,\n  playersPoints: PropTypes.object,\n  playersSay: PropTypes.object,\n  players: PropTypes.object,\n};\n\nexport default memo(GalleryWindowResult);\n","import React, { memo } from 'react';\n\n// Hooks\nimport { useGlobalState } from '../../../hooks';\n// Components\nimport CanvasSVG from './CanvasSVG';\nimport GalleryWindowCredits from './GalleryWindowCredits';\nimport GalleryWindowGuesses from './GalleryWindowGuesses';\nimport GalleryWindowControls from './GalleryWindowControls';\nimport GalleryWindowResult from './GalleryWindowResult';\nimport CanvasResizer from './CanvasResizer';\n\nfunction GalleryWindow({ window, galleryLength, players, activeIndex, setActiveIndex, setStep, cards }) {\n  const [canvasSize] = useGlobalState('canvasSize');\n\n  const { drawing, artist, id, text, level, playersPoints, playersSay } = window;\n\n  return (\n    <div className=\"a-gallery-window\">\n      <CanvasResizer />\n      <div className=\"a-gallery-window__drawing-container\">\n        <CanvasSVG\n          key={window.correctAnswer}\n          drawing={drawing}\n          size={canvasSize}\n          className=\"a-gallery-window__drawing\"\n        />\n      </div>\n\n      <GalleryWindowCredits artist={artist} artistAvatarId={players[artist].avatarId} />\n\n      <GalleryWindowGuesses players={players} playersSay={playersSay} cards={cards} />\n\n      <GalleryWindowResult\n        artist={artist}\n        correctAnswerId={id}\n        correctAnswerText={text}\n        correctAnswerLevel={level}\n        playersPoints={playersPoints}\n        playersSay={playersSay}\n        players={players}\n      />\n\n      <GalleryWindowControls\n        galleryLength={galleryLength}\n        activeIndex={activeIndex}\n        setActiveIndex={setActiveIndex}\n        setStep={setStep}\n      />\n    </div>\n  );\n}\n\nexport default memo(GalleryWindow);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTimer } from 'react-timer-hook';\n// Design Resources\nimport { CrownFilled } from '@ant-design/icons';\n// Utils\nimport { inNSeconds } from '../../utils';\n// Components\nimport Avatar from '../avatars/Avatar';\n\nfunction RankingBoard({ players, ranking }) {\n  const [displayStep, setDisplayStep] = useState(0);\n  const [sortedRanking, setSortedRanking] = useState([]);\n  const [positions, setPositions] = useState([]);\n\n  const maxPoints = ranking[0].newScore;\n\n  const rankByFinalScore = () => {\n    setSortedRanking(ranking.sort((a, b) => (a.newScore < b.newScore ? 1 : -1)));\n    setDisplayStep(3);\n  };\n\n  const { seconds } = useTimer({\n    expiryTimestamp: inNSeconds(4),\n    autoStart: true,\n    onExpire: () => rankByFinalScore(),\n  });\n\n  // Rank by previousScore\n  useEffect(() => {\n    setSortedRanking(ranking.sort((a, b) => (a.previousScore < b.previousScore ? 1 : -1)));\n  }, []); // eslint-disable-line\n\n  // Show gained points\n  useEffect(() => {\n    if (seconds === 3) {\n      setDisplayStep(1);\n    } else if (seconds === 2) {\n      setDisplayStep(2);\n    }\n  }, [seconds]);\n\n  // Determine position number in rank\n  useEffect(() => {\n    const property = displayStep < 3 ? 'previousScore' : 'newScore';\n\n    let lastPosition = 1;\n    let lastPoints = sortedRanking?.[0]?.[property] ?? 0;\n    setPositions(\n      sortedRanking.map((entry) => {\n        if (entry[property] < lastPoints) {\n          lastPoints = entry[property];\n          lastPosition += 1;\n        }\n\n        return lastPosition;\n      })\n    );\n  }, [sortedRanking, displayStep]);\n\n  return (\n    <div className=\"ranking-board\">\n      {sortedRanking.map((entry, index) => {\n        const { playerName, newScore, previousScore, gainedPoints } = entry;\n        return (\n          <div className={`ranking-board__row ranking-board__row--${index}`} key={`ranking-${playerName}`}>\n            <div className=\"ranking-board__cell-crown\">\n              {newScore > 0 && maxPoints === newScore && displayStep >= 3 && (\n                <CrownFilled className=\"ranking-board__crown-icon\" />\n              )}\n            </div>\n            <div className=\"ranking-board__cell-position\">#{positions?.[index] ?? ''}</div>\n            <div className=\"ranking-board__cell-player\">\n              <div className=\"ranking-board__avatar\">\n                <Avatar id={players[playerName].avatarId} />\n              </div>\n              <div className=\"ranking-board__name\">{playerName}</div>\n            </div>\n            <div className=\"ranking-board__cell-points\">{previousScore}</div>\n            {displayStep >= 1 && <div className=\"ranking-board__cell-points-plus\">+{gainedPoints}</div>}\n            {displayStep >= 2 && <div className=\"ranking-board__cell-points-total\">{newScore}</div>}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nRankingBoard.propTypes = {\n  players: PropTypes.object,\n  ranking: PropTypes.arrayOf(\n    PropTypes.shape({\n      playerName: PropTypes.string,\n      previousScore: PropTypes.number,\n      gainedPoints: PropTypes.number,\n      newScore: PropTypes.number,\n    })\n  ),\n};\n\nexport default RankingBoard;\n","import React, { Fragment, useEffect, useState } from 'react';\n// Design Resources\nimport { Button } from 'antd';\nimport { PictureOutlined } from '@ant-design/icons';\n// State & Hooks\nimport { useAPICall, useGlobalState } from '../../../hooks';\n// Resources and Utils\nimport { GAME_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport GalleryWindow from './GalleryWindow';\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport { AdminOnlyButton } from '../../shared/AdminOnly';\nimport RankingBoard from '../../shared/RankingBoard';\nimport Title from '../../shared/Title';\nimport Instruction from '../../shared/Instruction';\nimport StepSwitcher from '../../shared/StepSwitcher';\n\nfunction GalleryPhase({ players, state, info }) {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [step, setStep] = useState(0);\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n  const [cachedCanvasSize, setCachedCanvasSize] = useGlobalState('cachedCanvasSize');\n\n  // The gallery needs a bigger image, its annoying that we are changing the users settings but whatever\n  useEffect(() => {\n    if (step === 0) {\n      setCachedCanvasSize(canvasSize);\n      setCanvasSize(Math.min(window.innerWidth / 2 - 100, 500));\n    } else {\n      setCanvasSize(cachedCanvasSize);\n    }\n  }, [step]); // eslint-disable-line\n\n  const onGoToNextRound = useAPICall({\n    apiFunction: GAME_API.goToNextPhase,\n    actionName: 'go-to-next-phase',\n    successMessage: 'Ranking!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar ir para a próxima fase',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ARTE_RUIM.GALLERY}\n      className=\"a-gallery-phase\"\n    >\n      <StepSwitcher step={step}>\n        {/* Step 0 */}\n        <div className=\"a-gallery-phase__windows\">\n          <Title>Galeria de Arte</Title>\n          {state?.gallery && (\n            <GalleryWindow\n              window={state.gallery[activeIndex]}\n              galleryLength={state.gallery.length}\n              cards={state.cards}\n              players={players}\n              activeIndex={activeIndex}\n              setActiveIndex={setActiveIndex}\n              setStep={setStep}\n            />\n          )}\n        </div>\n\n        {/* Step 1 */}\n        <Fragment>\n          <Title>{state.pointsToVictory >= 0 ? 'Ranking' : 'Game Over'}</Title>\n          <RankingBoard players={players} ranking={state.ranking} />\n          {state.pointsToVictory >= 0 && (\n            <Instruction contained>\n              Faltam <strong>{state.pointsToVictory}</strong> pontos para o jogo acabar...\n            </Instruction>\n          )}\n\n          <Button size=\"large\" onClick={() => setStep(0)} icon={<PictureOutlined />}>\n            Ver Galeria\n          </Button>\n          <AdminOnlyButton action={() => onGoToNextRound({})} label=\"Ir para próxima rodada ou game over\" />\n        </Fragment>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default GalleryPhase;\n","export default __webpack_public_path__ + \"static/media/game-over-title.7073f1c0.svg\";","import React from 'react';\n// Design Resources\nimport { Button, Popconfirm, Progress } from 'antd';\nimport { RocketFilled } from '@ant-design/icons';\n// Images\nimport gameOverTitle from '../../images/game-over-title.svg';\n// Utils\nimport { useAPICall, useLoading } from '../../hooks';\nimport { GAME_API } from '../../adapters';\nimport { AVATAR_DESCRIPTIONS_BR } from '../../utils/constants';\n// Components\nimport PhaseContainer from './PhaseContainer';\nimport Avatar from '../avatars/Avatar';\nimport AdminOnly from './AdminOnly';\n\nfunction GameOver({ info, state, children }) {\n  const [isLoading] = useLoading();\n\n  const onPlayAgain = useAPICall({\n    apiFunction: GAME_API.playAgain,\n    actionName: 'play-=again',\n    successMessage: 'Jogando novamente o mesmo jogo!',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar ir reiniciar o jogo',\n  });\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase=\"GAME_OVER\" className=\"game-over\">\n      <div className=\"game-over__title\">\n        <img src={gameOverTitle} alt=\"Game Over\" />\n      </div>\n\n      {Boolean(state.winners) && (\n        <div className=\"game-over__winner-container\">\n          <div className=\"game-over__text\">\n            Jogo concluido e {state.winners.length > 1 ? 'os vencedores são' : 'o vencedor é'}:\n          </div>\n          <ul className=\"game-over__winners\">\n            {state.winners.map((winner) => {\n              return (\n                <li className=\"game-over__winner\" key={`winner-${winner.name}`}>\n                  <Avatar className=\"game-over__avatar\" id={winner.avatarId ?? 25} />\n                  <div className=\"game-over__winner-name\">\n                    <strong>{winner.name ?? '?'}</strong>, {AVATAR_DESCRIPTIONS_BR[winner.avatarId]}\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      )}\n\n      {Boolean(state.team) && (\n        <div className=\"game-over__winner\">\n          <div className=\"game-over__text\">Jogo concluido.</div>\n          <Progress\n            type=\"circle\"\n            strokeColor={{\n              '0%': '#ff0000',\n              '70%': '#ff0000',\n              '100%': '#87d068',\n            }}\n            percent={state.team.score ?? 0}\n          />\n          <div className=\"game-over__text\">\n            {state.team.victory ? 'Parabéns, vocês ganharam!' : 'Não foi dessa vez, que vergonha heim!'}\n          </div>\n        </div>\n      )}\n\n      {!Boolean(state.winners) && !Boolean(state.team) && (\n        <div className=\"game-over__text\">Jogo concluido.</div>\n      )}\n\n      {children}\n\n      <AdminOnly>\n        <Popconfirm\n          title=\"Tem certeza que que jogar este jogo novamente??\"\n          onConfirm={() => onPlayAgain({})}\n          okText=\"Sim\"\n          cancelText=\"Não\"\n        >\n          <Button icon={<RocketFilled />} danger type=\"primary\" disabled={isLoading}>\n            Jogar novamente\n          </Button>\n        </Popconfirm>\n      </AdminOnly>\n    </PhaseContainer>\n  );\n}\n\nexport default GameOver;\n","import React, { memo } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Avatar, Tooltip } from 'antd';\n\nconst grades = ['A+', 'A', 'A-', 'B+', 'B', 'B-', 'C+', 'C', 'C-', 'D+', 'D', 'F'];\nconst minValues = [97, 93, 90, 87, 83, 80, 77, 73, 70, 67, 65, 0];\n\nconst DrawingGrade = ({ value }) => {\n  const grade = grades[minValues.findIndex((i) => value * 100 >= i) ?? 11];\n\n  const baseClass = 'a-drawing-grade';\n\n  return (\n    <Tooltip title={`Nota baseada em quantos acertos o desenho teve: ${value * 100}%`}>\n      <Avatar className={clsx(baseClass, `${baseClass}--${grade[0]}`)}>{grade}</Avatar>\n    </Tooltip>\n  );\n};\n\nDrawingGrade.propTypes = {\n  value: PropTypes.number.isRequired,\n};\n\nexport default memo(DrawingGrade);\n","import React from 'react';\n// Components\nimport GameOver from '../../shared/GameOver';\nimport CanvasSVG from './CanvasSVG';\nimport DrawingGrade from './DrawingGrade';\n\nfunction GameOverPhase({ state, info }) {\n  return (\n    <GameOver info={info} state={state}>\n      <ul className=\"a-game-over__gallery\">\n        {state.drawings.map((entry) => {\n          return (\n            <li className=\"a-game-over__gallery-item\" key={entry.drawing}>\n              <CanvasSVG drawing={entry.drawing} size={200} className=\"a-game-over__gallery-canvas\" />\n              <span className=\"a-game-over__credits\">\n                \"{entry.text}\" por {entry.playerName}\n              </span>\n              <DrawingGrade value={entry.successRate} />\n            </li>\n          );\n        })}\n      </ul>\n    </GameOver>\n  );\n}\n\nexport default GameOverPhase;\n","import React, { Fragment, useMemo, useState } from 'react';\n// Design Resources\nimport { Affix, Avatar as AntAvatar, Badge, Button, Divider, Drawer } from 'antd';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n// Utils\nimport { AVATAR_DESCRIPTIONS_BR } from '../../utils/constants';\n// Components\nimport Avatar from '../avatars/Avatar';\nimport RulesModal from '../modals/RulesModal';\n\nfunction SectionMe({ player, isTeamGame }) {\n  return (\n    <div className=\"game-info-drawer__section-me\">\n      <div className=\"game-info-drawer__label\">Você é{isTeamGame && ` do time ${player?.team ?? '?'}`}</div>\n      <div className=\"game-info-drawer__me\">\n        <Badge count={player.score} className=\"game-info-drawer__avatar-with-badge\">\n          <Avatar id={player.avatarId} shape=\"square\" />\n        </Badge>\n        {player.name}, {AVATAR_DESCRIPTIONS_BR[player.avatarId]}\n      </div>\n    </div>\n  );\n}\n\nfunction SectionMeta({ round, roundsToEndGame, groupScore, pointsToVictory, isTeamGame, teams }) {\n  return (\n    <ul className=\"game-info-drawer__meta\">\n      <li className=\"game-info-drawer__meta-item\">\n        <div className=\"game-info-drawer__label-inline\">Rodada:</div>\n        <AntAvatar className=\"game-info-drawer__round\" size=\"small\">\n          {round}\n        </AntAvatar>\n        {Boolean(roundsToEndGame) && !isNaN(round) && (\n          <Fragment>\n            <span className=\"game-info-drawer__inline-separator\">de</span>\n            <AntAvatar className=\"game-info-drawer__round\" size=\"small\">\n              {round + roundsToEndGame}\n            </AntAvatar>\n          </Fragment>\n        )}\n      </li>\n\n      {Boolean(groupScore) && (\n        <li className=\"game-info-drawer__meta-item\">\n          <div className=\"game-info-drawer__label-inline\">Pontos:</div>\n          <AntAvatar className=\"game-info-drawer__round\" size=\"default\" style={{ backgroundColor: 'gold' }}>\n            {groupScore ?? 0}\n          </AntAvatar>\n        </li>\n      )}\n\n      {Boolean(teams) && (\n        <li className=\"game-info-drawer__meta-item\">\n          <div className=\"game-info-drawer__label-inline\">Pontos A vs B:</div>\n          <AntAvatar className=\"game-info-drawer__round\" size=\"default\">\n            {teams?.A?.score ?? '?'}\n          </AntAvatar>\n          <span className=\"game-info-drawer__inline-separator\">vs</span>\n          <AntAvatar className=\"game-info-drawer__round\" size=\"default\">\n            {teams?.B?.score ?? '?'}\n          </AntAvatar>\n        </li>\n      )}\n\n      {Boolean(pointsToVictory) && (\n        <div>\n          <div className=\"game-info-drawer__label-inline\">\n            Pontos restantes para {isTeamGame ? 'um time' : 'alguém'} ganhar:\n          </div>\n          <AntAvatar className=\"game-info-drawer__round\" size=\"small\">\n            {pointsToVictory}\n          </AntAvatar>\n        </div>\n      )}\n    </ul>\n  );\n}\n\nfunction SectionTeams({ players, teams }) {\n  return (\n    <div className=\"game-info-drawer__team-players\">\n      {Object.values(teams).map((team) => (\n        <SectionTeamPlayers key={team.name} team={team} players={players} />\n      ))}\n    </div>\n  );\n}\n\nfunction SectionTeamPlayers({ team, players }) {\n  const sortedPlayers = useMemo(\n    () =>\n      team.members\n        .map((memberName) => {\n          return players[memberName];\n        })\n        .sort((a, b) => (a.name > b.name ? 1 : -1)),\n    [players, team]\n  );\n\n  return (\n    <div className=\"game-info-drawer__team\" key={team.name}>\n      <h3>Team {team.name}</h3>\n      <ul>\n        {sortedPlayers.map((player, index) => {\n          return (\n            <div className=\"game-info-drawer__ranked-player\" key={`ranked-${player.name}`}>\n              <Avatar id={player.avatarId} shape=\"square\" className=\"game-info-drawer__avatar-with-badge\" />\n              {player.name}, {AVATAR_DESCRIPTIONS_BR[player.avatarId]}\n            </div>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nfunction SectionRankedPlayers({ players }) {\n  const rankedPlayers = useMemo(() => Object.values(players).sort((a, b) => (a.score < b.score ? 1 : -1)), [\n    players,\n  ]);\n  return (\n    <ul>\n      {rankedPlayers.map((player, index) => {\n        return (\n          <div className=\"game-info-drawer__ranked-player\" key={`ranked-${player.name}`}>\n            {index + 1}.{' '}\n            <Badge count={player.score} className=\"game-info-drawer__avatar-with-badge\">\n              <Avatar id={player.avatarId} shape=\"square\" />\n            </Badge>\n            {player.name}, {AVATAR_DESCRIPTIONS_BR[player.avatarId]}\n          </div>\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction GameInfoDrawer({ players, state, info, me }) {\n  const [visible, setVisible] = useState(false);\n\n  if (state.phase === 'LOBBY') {\n    return <></>;\n  }\n\n  const showDrawer = () => {\n    setVisible(true);\n  };\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  const completeMe = players?.[me] ?? {};\n  const isTeamGame = Boolean(completeMe?.team) && Boolean(state.teams);\n\n  return (\n    <Fragment>\n      <Affix offsetTop={10} className=\"game-info-drawer__affix-button\">\n        <Button\n          type=\"primary\"\n          shape=\"circle\"\n          size=\"large\"\n          className=\"game-info-drawer__button\"\n          onClick={showDrawer}\n          icon={<InfoCircleOutlined />}\n        />\n      </Affix>\n\n      <Drawer title={info.title} placement=\"right\" closable={false} onClose={onClose} visible={visible}>\n        {completeMe && <SectionMe player={completeMe} isTeamGame={isTeamGame} />}\n\n        <Divider />\n\n        <RulesModal gameInfo={info} />\n\n        <Divider />\n\n        <SectionMeta\n          round={state?.round || '?'}\n          roundsToEndGame={state?.roundsToEndGame}\n          groupScore={state?.groupScore}\n          pointsToVictory={state?.pointsToVictory}\n          isTeamGame={isTeamGame}\n          teams={state?.teams}\n        />\n\n        <Divider />\n\n        {isTeamGame ? (\n          <SectionTeams players={players} teams={state?.teams} />\n        ) : (\n          <SectionRankedPlayers players={players} />\n        )}\n      </Drawer>\n    </Fragment>\n  );\n}\n\nexport default GameInfoDrawer;\n","import React, { Fragment, useEffect, useState } from 'react';\n// Hooks\nimport { useGameState, useGlobalState } from '../../../hooks';\nimport { GAME_COLLECTION, PHASES } from '../../../utils/constants';\n// Hooks\nimport { useGamePlayers } from '../../../hooks/useGamePlayers';\n// Utils\nimport gameList from '../../../resources/games.json';\n// Components\nimport Lobby from '../../lobby/Lobby';\nimport Rules from '../../rules/Rules';\nimport PageError from '../../errors/PageError';\nimport DrawPhase from './DrawPhase';\nimport EvaluationPhase from './EvaluationPhase';\nimport GalleryPhase from './GalleryPhase';\nimport GameOverPhase from './GameOverPhase';\nimport GameInfoDrawer from '../../shared/GameInfoDrawer';\n\nfunction getActiveComponent(phase) {\n  switch (phase) {\n    case PHASES.ARTE_RUIM.LOBBY:\n      return Lobby;\n    case PHASES.ARTE_RUIM.RULES:\n      return Rules;\n    case PHASES.ARTE_RUIM.DRAW:\n      return DrawPhase;\n    case PHASES.ARTE_RUIM.EVALUATION:\n      return EvaluationPhase;\n    case PHASES.ARTE_RUIM.GALLERY:\n      return GalleryPhase;\n    case PHASES.ARTE_RUIM.GAME_OVER:\n      return GameOverPhase;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionArteRuim({ gameId }) {\n  const players = useGamePlayers(gameId, GAME_COLLECTION.ARTE_RUIM);\n  const state = useGameState(gameId, GAME_COLLECTION.ARTE_RUIM);\n  const [me] = useGlobalState('me');\n  const [info, setInfo] = useState({});\n\n  // Update game description as the gameId comes in\n  useEffect(() => {\n    setInfo(gameId?.[0] ? gameList[gameId[0]] : {});\n  }, [gameId]);\n\n  if (process.env.NODE_ENV === 'development') {\n    console.table(players);\n    console.log({ state });\n  }\n\n  if (!me) {\n    return <Lobby players={players} state={state} info={info} />;\n  }\n\n  const ActiveComponent = getActiveComponent(state.phase);\n\n  return (\n    <Fragment>\n      <GameInfoDrawer players={players} state={state} info={info} me={me} />\n      <ActiveComponent players={players} state={state} info={info} />\n    </Fragment>\n  );\n}\n\nexport default SessionArteRuim;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { QuestionCircleFilled } from '@ant-design/icons';\n// Components\nimport Card from './Card';\n\nfunction EspiaoEntreNosCard({ location, role, header = 'Local' }) {\n  return (\n    <Card\n      color={location === 'SPY' ? 'red' : 'lime'}\n      header={location === 'SPY' ? 'Local Desconhecido' : header}\n      size=\"large\"\n      footer={`Você é ${role === 'SPY' ? 'o espião' : `um(a) ${role}`} `}\n      className=\"e-card\"\n      footerClassName=\"e-card__footer\"\n    >\n      {location === 'SPY' ? <QuestionCircleFilled /> : location}\n    </Card>\n  );\n}\n\nEspiaoEntreNosCard.propTypes = {\n  location: PropTypes.string.isRequired,\n  header: PropTypes.string,\n  role: PropTypes.string.isRequired,\n};\n\nexport default memo(EspiaoEntreNosCard);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Tooltip } from 'antd';\nimport { ClearOutlined } from '@ant-design/icons';\n// Components\nimport clsx from 'clsx';\nimport { useGlobalState } from '../../../hooks';\n\nfunction List({ header, headerIcon, items, column }) {\n  const [cache, setCache] = useGlobalState('espiaoEntreNosCache');\n\n  // const [crossed, setCrossed] = useState({});\n\n  const onCross = (item) => {\n    setCache((s) => {\n      const newState = { ...s };\n      if (newState[item]) {\n        delete newState[item];\n      } else {\n        newState[item] = true;\n      }\n      return newState;\n    });\n  };\n\n  const onClearCrossed = () => setCache({});\n\n  return (\n    <div className={clsx('e-list', column && 'e-list--column')}>\n      <h3 className=\"e-list__title\">\n        {headerIcon} {header}{' '}\n        <Tooltip title=\"Limpar nomes\">\n          <Button\n            shape=\"circle\"\n            ghost\n            type=\"default\"\n            size=\"small\"\n            icon={<ClearOutlined />}\n            onClick={onClearCrossed}\n          />\n        </Tooltip>\n      </h3>\n      <ul className={clsx('e-list__list', column && 'e-list__list--column')}>\n        {items.map((item) => (\n          <li\n            className={clsx('e-list__item', cache[item] && 'e-list__item--crossed')}\n            key={item}\n            role=\"button\"\n            onClick={() => onCross(item)}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nList.propTypes = {\n  header: PropTypes.string.isRequired,\n  headerIcon: PropTypes.element.isRequired,\n  items: PropTypes.arrayOf(PropTypes.string),\n  column: PropTypes.bool,\n};\n\nList.defaultProps = {\n  column: false,\n};\n\nexport default memo(List);\n","import React, { memo } from 'react';\n\nfunction Notes() {\n  return (\n    <textarea\n      name=\"\"\n      id=\"\"\n      cols=\"30\"\n      rows=\"10\"\n      className=\"e-notes\"\n      placeholder=\"Escreva anotações aqui se quiser, mas cuidado com o teclado fazendo mto barulho\"\n    ></textarea>\n  );\n}\n\nNotes.propTypes = {};\n\nexport default memo(Notes);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { ESPIAO_ENTRE_NOS_API } from '../../../adapters';\n// Components\nimport { AdminOnlyButton } from '../../shared/AdminOnly';\n\nfunction AdminTimerControlButton({ label = 'Continuar', action = 'resume' }) {\n  const onControlStopwatch = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.handleAdminAction,\n    actionName: 'timer-control',\n    successMessage: 'Admin action com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar ação',\n  });\n\n  return <AdminOnlyButton action={() => onControlStopwatch({ action })} label={label} />;\n}\n\nAdminTimerControlButton.propTypes = {\n  label: PropTypes.string,\n  action: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nexport default AdminTimerControlButton;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\n// Hooks\nimport { useAmIReady, useMe, useAmIActive } from '../../../hooks';\n// Resources & Utils\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport RoundAnnouncement from '../../shared/RoundAnnouncement';\nimport Instruction from '../../shared/Instruction';\nimport StepSwitcher from '../../shared/StepSwitcher';\n\nimport Title from '../../shared/Title';\nimport Card from '../../cards/EspiaoEntreNosCard';\nimport { EnvironmentOutlined } from '@ant-design/icons';\nimport List from './List';\nimport Notes from './Notes';\nimport AdminTimerControlButton from './AdminTimerControlButton';\n\nfunction AssignmentPhase({ state, players, info }) {\n  const amIReady = useAmIReady(players, state);\n  const user = useMe(players);\n  const isSpy = useAmIActive(state, 'currentSpy');\n  const [step, setStep] = useState(0);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ESPIAO_ENTRE_NOS.ASSIGNMENT}\n      className=\"e-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!amIReady]}>\n        {/* Step 0 */}\n        <RoundAnnouncement round={state.round} onPressButton={() => setStep(1)} time={5}>\n          <Instruction className=\"e-phase-instruction\">Há um espião entre nós!</Instruction>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <div className=\"e-phase-step\">\n          <Title level={2} className=\"e-phase-title\">\n            Você está no(a)...\n          </Title>\n\n          <Card location={user.location} role={user.role} />\n\n          <AdminTimerControlButton label=\"Começar cronômetro\" action=\"start\" />\n\n          <Instruction className=\"e-phase-instruction\">\n            {isSpy\n              ? 'Você tem 10 minutos para descobrir onde os outros agentes estão! Pronto?'\n              : 'Você tem 10 minutos para descobrir quem é o espião entre nós! Pronto?'}\n          </Instruction>\n\n          <Instruction className=\"e-lists\">\n            <List\n              header=\"Possíveis Locais\"\n              headerIcon={<EnvironmentOutlined />}\n              items={state.possibleLocations}\n            />\n          </Instruction>\n          <Notes />\n        </div>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nAssignmentPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default AssignmentPhase;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Popconfirm, Select, Space } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n// Hooks\nimport { useGlobalState, useLoading } from '../../../hooks';\n\nfunction PlayerSelect({ playersList, onSend }) {\n  const [isLoading] = useLoading();\n  const [me] = useGlobalState('me');\n\n  const [selectedPlayer, setSelectedPlayer] = useState(null);\n\n  const playersWithoutMe = playersList.filter((playerName) => playerName !== me);\n\n  return (\n    <Space>\n      <Select onChange={setSelectedPlayer} className=\"e-select\" placeholder=\"Acuse um jogador\">\n        {playersWithoutMe.map((playerName) => (\n          <Select.Option key={playerName} value={playerName}>\n            {playerName}\n          </Select.Option>\n        ))}\n      </Select>\n      <Popconfirm\n        title={`Você só pode acusar uma vez durante o jogo! Tem certeza que quer acusar ${selectedPlayer}?`}\n        onConfirm={() => onSend({ vote: selectedPlayer })}\n        okText=\"Sim\"\n        cancelText=\"Não\"\n      >\n        <Button\n          type=\"primary\"\n          disabled={!selectedPlayer || isLoading}\n          icon={isLoading ? <LoadingOutlined /> : null}\n        >\n          Acusar{selectedPlayer ? `: ${selectedPlayer}` : ''}\n        </Button>\n      </Popconfirm>\n    </Space>\n  );\n}\n\nPlayerSelect.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default PlayerSelect;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Popconfirm, Select, Space } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLoading } from '../../../hooks';\n\nfunction LocationSelect({ locations, onSend }) {\n  const [isLoading] = useLoading();\n  const [selectedLocation, setSelectedLocation] = useState(null);\n\n  return (\n    <Space className=\"e-select-container e-select-container--locations\">\n      <Select onChange={setSelectedLocation} placeholder=\"Chute um local\">\n        {locations.map((location) => (\n          <Select.Option key={`select-${location}`} value={location}>\n            {location}\n          </Select.Option>\n        ))}\n      </Select>\n      <Popconfirm\n        title={`Você só pode chutar uma vez durante o jogo! Tem certeza que quer chutar ${selectedLocation}?`}\n        onConfirm={() => onSend({ guess: selectedLocation })}\n        okText=\"Sim\"\n        cancelText=\"Não\"\n      >\n        <Button\n          type=\"primary\"\n          disabled={!selectedLocation || isLoading}\n          icon={isLoading ? <LoadingOutlined /> : null}\n        >\n          Chutar{selectedLocation ? `: ${selectedLocation}` : ''}\n        </Button>\n      </Popconfirm>\n    </Space>\n  );\n}\n\nLocationSelect.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default LocationSelect;\n","import React from 'react';\nimport { useTimer } from 'react-timer-hook';\nimport { ESPIAO_ENTRE_NOS_API } from '../../../adapters';\nimport { useAPICall, useGlobalState } from '../../../hooks';\n\nfunction Timer({ timeRemaining }) {\n  const [isAdmin] = useGlobalState('isAdmin');\n\n  const onAdminControl = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.handleAdminAction,\n    actionName: 'admin-control',\n    successMessage: 'Admin action com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar ação',\n  });\n\n  const { minutes, seconds } = useTimer({\n    expiryTimestamp: Date.now() + timeRemaining,\n    autoStart: true,\n    onExpire: isAdmin ? () => onAdminControl({ action: 'final' }) : null,\n  });\n\n  return (\n    <div className=\"e-timer\">\n      {minutes}:{seconds < 10 ? `0${seconds}` : seconds}\n    </div>\n  );\n}\n\nexport default Timer;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { AimOutlined, EnvironmentOutlined } from '@ant-design/icons';\nimport { message } from 'antd';\n// Hooks\nimport { useMe, useAPICall, useAmIActive } from '../../../hooks';\n// Resources & Utils\nimport { ESPIAO_ENTRE_NOS_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport Instruction from '../../shared/Instruction';\nimport Title from '../../shared/Title';\nimport Card from '../../cards/EspiaoEntreNosCard';\nimport List from './List';\nimport Notes from './Notes';\nimport PlayerSelect from './PlayerSelect';\nimport LocationSelect from './LocationSelect';\nimport Timer from './Timer';\nimport AdminTimerControlButton from './AdminTimerControlButton';\n\nfunction InvestigationPhase({ state, players, info }) {\n  const user = useMe(players);\n  const isSpy = useAmIActive(state, 'currentSpy');\n\n  const onMakeAccusation = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.makeAccusation,\n    actionName: 'accuse',\n    successMessage: 'Jogador acusado com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar acusar',\n  });\n\n  const onGuessLocation = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.guessLocation,\n    actionName: 'guess',\n    successMessage: 'Chute enviado com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar chutar o local',\n  });\n\n  useEffect(() => {\n    if (state?.outcome === 'VOTE_FAIL') {\n      message.warning(`A votação não foi unânime`, 4);\n      message.info(state?.votedYes ? `Votaram sim: ${state?.votedYes}` : 'Ninguém votou sim', 6);\n    }\n\n    if (state.timeRemaining > 590000) {\n      message.info(`${Object.keys(players)[0]} começa perguntando!`, 3);\n    }\n  }, []); // eslint-disable-line\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ESPIAO_ENTRE_NOS.INVESTIGATION}\n      className=\"e-phase\"\n    >\n      <div className=\"e-phase-step-header\">\n        <div className=\"e-phase-step-header__timer-container\">\n          <Timer timeRemaining={state.timeRemaining} />\n        </div>\n\n        <div className=\"e-phase-step-header__center\">\n          <Title level={2} className=\"e-phase-title\">\n            {isSpy ? 'Onde eles estão?' : 'Quem é o Espião?'}\n          </Title>\n          <Card location={user.location} role={user.role} />\n        </div>\n      </div>\n\n      {isSpy && <LocationSelect locations={state.possibleLocations} onSend={onGuessLocation} />}\n\n      {!user?.usedAccusation ? (\n        <PlayerSelect playersList={Object.keys(players)} onSend={onMakeAccusation} />\n      ) : (\n        <Instruction className=\"e-phase-instruction\">Você já usou sua chance de acusar</Instruction>\n      )}\n\n      <Instruction className=\"e-lists\">\n        <List header=\"Suspeitos\" headerIcon={<AimOutlined />} items={Object.keys(players)} />\n        <List\n          header=\"Possíveis Locais\"\n          headerIcon={<EnvironmentOutlined />}\n          items={state.possibleLocations}\n        />\n      </Instruction>\n\n      <Notes />\n\n      <AdminTimerControlButton label=\"Forçar pausar cronômetro\" action=\"pause\" />\n    </PhaseContainer>\n  );\n}\n\nInvestigationPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default InvestigationPhase;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Space } from 'antd';\nimport { AimOutlined, EnvironmentOutlined } from '@ant-design/icons';\n// Hooks\nimport { useMe, useAPICall, useAmIActive } from '../../../hooks';\n// Resources & Utils\nimport { ESPIAO_ENTRE_NOS_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport Instruction from '../../shared/Instruction';\nimport Title from '../../shared/Title';\nimport Card from '../../cards/EspiaoEntreNosCard';\nimport List from './List';\nimport Notes from './Notes';\nimport AdminTimerControlButton from './AdminTimerControlButton';\nimport ReadyPlayersBar from '../../shared/ReadyPlayersBar';\n\nfunction AssessmentPhase({ state, players, info }) {\n  const user = useMe(players);\n  const amITheTarget = useAmIActive(state, 'target');\n  const amITheAccuser = useAmIActive(state, 'accuser');\n  const [submittedAction, setSubmitAction] = useState(false);\n\n  const onSubmitVoting = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.submitVoting,\n    actionName: 'guess',\n    onBeforeCall: () => setSubmitAction(true),\n    onError: () => setSubmitAction(false),\n    successMessage: 'Voto enviado com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar seu voto',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ESPIAO_ENTRE_NOS.ASSESSMENT}\n      className=\"e-phase\"\n    >\n      <Title level={2} className=\"e-phase-title\">\n        {state.accuser} está acusando {state.target} de ser o espião. Concorda?\n      </Title>\n\n      <div>\n        {amITheAccuser || amITheTarget ? (\n          <Instruction className=\"e-phase-instruction\">\n            Você não participa dessa votacão, afinal,{' '}\n            {amITheTarget ? 'é você quem está no paredão!' : 'você quem acusou!'}\n          </Instruction>\n        ) : (\n          <Space className=\"a\">\n            <Button ghost disabled={submittedAction} onClick={() => onSubmitVoting({ vote: true })}>\n              Também acho!\n            </Button>\n            <Button ghost disabled={submittedAction} onClick={() => onSubmitVoting({ vote: false })}>\n              Não é ele(a)\n            </Button>\n          </Space>\n        )}\n      </div>\n\n      <Card location={user.location} role={user.role} />\n\n      <ReadyPlayersBar players={players} readyText=\"Votei\" readyTextPlural=\"Votamos\" />\n\n      <Instruction className=\"e-lists\">\n        <List header=\"Suspeitos\" headerIcon={<AimOutlined />} items={Object.keys(players)} />\n        <List\n          header=\"Possíveis Locais\"\n          headerIcon={<EnvironmentOutlined />}\n          items={state.possibleLocations}\n        />\n      </Instruction>\n\n      <Notes />\n\n      <AdminTimerControlButton label=\"Forçar continuar cronômetro\" action=\"resume\" />\n    </PhaseContainer>\n  );\n}\n\nAssessmentPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default AssessmentPhase;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { message } from 'antd';\n// Hooks\nimport { useMe, useAPICall, useAmIActive } from '../../../hooks';\n// Resources & Utils\nimport { ESPIAO_ENTRE_NOS_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport Instruction from '../../shared/Instruction';\nimport Title from '../../shared/Title';\nimport AdminOnly, { AdminButton } from '../../shared/AdminOnly';\n\nfunction ResolutionPhase({ state, players, info }) {\n  const user = useMe(players);\n  const isSpy = useAmIActive(state, 'currentSpy');\n\n  const onAdminControl = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.handleAdminAction,\n    actionName: 'admin-control',\n    successMessage: 'Admin action com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar ação',\n  });\n\n  const missionOutcomeText = isSpy === state.spyWin ? 'Missão Cumprida!' : 'Missão Fracassada!';\n  const wasABadVoting = state.spyWin && Boolean(state?.timeRemaining > 0);\n\n  useEffect(() => {\n    if (state?.resolutionType === 'SPY_GUESS') {\n      if (state.spyWin) {\n        message.warning(`${state.currentSpy} chutou ${state.guess} e acertou`, 6);\n      } else {\n        message.warning(`${state.currentSpy} chutou ${state.guess} e error feio`, 6);\n      }\n    }\n  }, []); // eslint-disable-line\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ESPIAO_ENTRE_NOS.RESOLUTION}\n      className=\"e-phase e-phase--center\"\n    >\n      {state.resolutionType === 'SPY_FOUND' && (\n        <div className=\"e-phase-step\">\n          {state.spyWin ? (\n            <div className=\"\">\n              <Title level={2} className=\"e-phase-title\">\n                {missionOutcomeText}\n              </Title>\n              <Instruction className=\"e-phase-instruction\">\n                {wasABadVoting ? (\n                  <span>\n                    Vocês tentaram incriminar o espião errado. {state.currentSpy} se safou, todos os segredos\n                    da agência foram revelados e o mundo vai acabar. Parabéns.\n                  </span>\n                ) : (\n                  <span>\n                    O espião {state.currentSpy} não foi encontrado a tempo! Todos os segredos da agência foram\n                    revelados e agora o mundo vai acabar. Parabéns.\n                  </span>\n                )}\n              </Instruction>\n            </div>\n          ) : (\n            <div className=\"\">\n              <Title level={2} className=\"e-phase-title\">\n                {missionOutcomeText}\n              </Title>\n              <Instruction className=\"e-phase-instruction\">\n                O espião {state.currentSpy} foi encontrado a tempo!{' '}\n                {isSpy ? `Não foi dessa vez, ${user.name}.` : 'O mundo está salvo graças a você!'}\n              </Instruction>\n            </div>\n          )}\n        </div>\n      )}\n\n      {state.resolutionType === 'SPY_GUESS' && (\n        <div className=\"e-phase-step\">\n          {state.spyWin ? (\n            <div className=\"\">\n              <Title level={2} className=\"e-phase-title\">\n                {missionOutcomeText}\n              </Title>\n              <Instruction className=\"e-phase-instruction\">\n                O espião {state.currentSpy} conseguiu descobrir que estamos no(a) {state.currentLocation}.\n              </Instruction>\n            </div>\n          ) : (\n            <div className=\"\">\n              <Title level={2} className=\"e-phase-title\">\n                {missionOutcomeText}\n              </Title>\n              <Instruction className=\"e-phase-instruction\">\n                O espião {state.currentSpy} não descobriu a tempo que estamos no(a) {state.currentLocation}!{' '}\n                {isSpy ? `Não foi dessa vez, ${user.name}.` : 'O mundo está salvo graças a você!'}\n              </Instruction>\n            </div>\n          )}\n        </div>\n      )}\n\n      <Instruction className=\"e-phase-instruction\">\n        Desfarces dos infiltrados:\n        {Object.values(players).map((player) => (\n          <li>\n            {player.name} como {player.role}\n          </li>\n        ))}\n      </Instruction>\n\n      <AdminOnly>\n        <AdminButton action={() => onAdminControl({ action: 'round' })} label=\"Iniciar nova rodada\" />\n        <AdminButton action={() => onAdminControl({ action: 'end' })} label=\"Terminar o jogo\" />\n      </AdminOnly>\n    </PhaseContainer>\n  );\n}\n\nResolutionPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default ResolutionPhase;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Select } from 'antd';\nimport { AimOutlined, EnvironmentOutlined } from '@ant-design/icons';\n// Hooks\nimport { useMe, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { ESPIAO_ENTRE_NOS_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport Instruction from '../../shared/Instruction';\nimport Title from '../../shared/Title';\nimport Card from '../../cards/EspiaoEntreNosCard';\nimport List from './List';\nimport Notes from './Notes';\nimport AdminOnly from '../../shared/AdminOnly';\n\nfunction FinalAssessmentPhase({ state, players, info }) {\n  const user = useMe(players);\n  const [accuser, setAccuser] = useState(null);\n  const [target, setTarget] = useState(null);\n\n  const onAdminControl = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.handleAdminAction,\n    actionName: 'admin-control',\n    successMessage: 'Admin action com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar ação',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ESPIAO_ENTRE_NOS.FINAL_ASSESSMENT}\n      className=\"e-phase\"\n    >\n      <Title level={2} className=\"e-phase-title\">\n        Última Chance!\n      </Title>\n\n      <Instruction className=\"e-phase-instruction\">\n        Já que vocês falharam em encontrar o espião, há uma última possibilidade!\n        <ul>\n          <li>\n            Um jogador de cada vez e começando por {state?.playerOrder[0]}, cada jogador faz uma acusação em\n            voz alta.\n          </li>\n          <li>Os outros jogadores votam também em voz alta (menos o acusado, claro)</li>\n          <li>Se a votação for unânime, o admnistrador vai enviar o voto para o servidor</li>\n          <li>Sem discussão dessa vez, simplesmente acuse alguém! Não temos mais tempo!</li>\n          <li>Siga essa ordem: {state?.playerOrder.join(', ')}</li>\n        </ul>\n      </Instruction>\n\n      <Card location={user.location} role={user.role} />\n\n      <Instruction className=\"e-lists\">\n        <List header=\"Suspeitos\" headerIcon={<AimOutlined />} items={Object.keys(players)} />\n        <List\n          header=\"Possíveis Locais\"\n          headerIcon={<EnvironmentOutlined />}\n          items={state.possibleLocations}\n        />\n      </Instruction>\n\n      <Notes />\n\n      <AdminOnly className=\"e-admin-final-assessment\">\n        <span>Acusador:</span>\n        <Select onChange={setAccuser} className=\"e-select\" placeholder=\"Acusador\">\n          {Object.keys(players).map((playerName) => (\n            <Select.Option key={playerName} value={playerName}>\n              {playerName}\n            </Select.Option>\n          ))}\n        </Select>\n        <span>Acusado:</span>\n        <Select onChange={setTarget} className=\"e-select\" placeholder=\"Acusado\">\n          {Object.keys(players).map((playerName) => (\n            <Select.Option key={playerName} value={playerName}>\n              {playerName}\n            </Select.Option>\n          ))}\n        </Select>\n        <Button\n          type=\"primary\"\n          disabled={!accuser || !target || accuser === target}\n          onClick={() =>\n            onAdminControl({\n              action: {\n                accuser,\n                target,\n              },\n            })\n          }\n        >\n          Enviar decisão final\n        </Button>\n      </AdminOnly>\n    </PhaseContainer>\n  );\n}\n\nFinalAssessmentPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default FinalAssessmentPhase;\n","import React, { Fragment, useEffect, useState } from 'react';\n// Hooks\nimport { useGameState, useGlobalState } from '../../../hooks';\nimport { GAME_COLLECTION, PHASES } from '../../../utils/constants';\n// Hooks\nimport { useGamePlayers } from '../../../hooks/useGamePlayers';\n// Utils\nimport gameList from '../../../resources/games.json';\n// Components\nimport Lobby from '../../lobby/Lobby';\nimport Rules from '../../rules/Rules';\nimport PageError from '../../errors/PageError';\nimport GameOver from '../../shared/GameOver';\nimport GameInfoDrawer from '../../shared/GameInfoDrawer';\nimport AssignmentPhase from './AssignmentPhase';\nimport InvestigationPhase from './InvestigationPhase';\nimport AssessmentPhase from './AssessmentPhase';\nimport ResolutionPhase from './ResolutionPhase';\nimport FinalAssessmentPhase from './FinalAssessmentPhase';\n\nfunction getActiveComponent(phase) {\n  switch (phase) {\n    case PHASES.ESPIAO_ENTRE_NOS.LOBBY:\n      return Lobby;\n    case PHASES.ESPIAO_ENTRE_NOS.RULES:\n      return Rules;\n    case PHASES.ESPIAO_ENTRE_NOS.ASSIGNMENT:\n      return AssignmentPhase;\n    case PHASES.ESPIAO_ENTRE_NOS.INVESTIGATION:\n      return InvestigationPhase;\n    case PHASES.ESPIAO_ENTRE_NOS.ASSESSMENT:\n      return AssessmentPhase;\n    case PHASES.ESPIAO_ENTRE_NOS.FINAL_ASSESSMENT:\n      return FinalAssessmentPhase;\n    case PHASES.ESPIAO_ENTRE_NOS.RESOLUTION:\n      return ResolutionPhase;\n    case PHASES.ESPIAO_ENTRE_NOS.GAME_OVER:\n      return GameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionEspiaoEntreNos({ gameId }) {\n  const players = useGamePlayers(gameId, GAME_COLLECTION.ESPIAO_ENTRE_NOS);\n  const state = useGameState(gameId, GAME_COLLECTION.ESPIAO_ENTRE_NOS);\n  const [me] = useGlobalState('me');\n  const [info, setInfo] = useState({});\n\n  // Update game description as the gameId comes in\n  useEffect(() => {\n    setInfo(gameId?.[0] ? gameList[gameId[0]] : {});\n  }, [gameId]);\n\n  if (process.env.NODE_ENV === 'development') {\n    console.table(players);\n    console.log({ state });\n  }\n\n  if (!me) {\n    return <Lobby players={players} state={state} info={info} />;\n  }\n\n  const ActiveComponent = getActiveComponent(state.phase);\n\n  return (\n    <Fragment>\n      <GameInfoDrawer players={players} state={state} info={info} me={me} />\n      <ActiveComponent players={players} state={state} info={info} />\n    </Fragment>\n  );\n}\n\nexport default SessionEspiaoEntreNos;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { ArrowLeftOutlined, ArrowRightOutlined, MinusOutlined } from '@ant-design/icons';\nimport { LETTERS } from '../../../utils/constants';\nimport clsx from 'clsx';\n\nconst getColorModifier = (letter) => {\n  const index = LETTERS.indexOf(letter);\n  return Math.abs(index) % 4;\n};\n\nfunction Card({ left, right, className }) {\n  const leftColor = getColorModifier(left[0]);\n  const rightColor = getColorModifier(right[0]);\n  const cardSideClass = 'o-card__side';\n\n  return (\n    <div className={clsx('o-card', className)}>\n      <div className={clsx(cardSideClass, `${cardSideClass}--left`, `${cardSideClass}--L${leftColor}`)}>\n        <span className=\"o-card__arrow\">\n          <ArrowLeftOutlined /> <MinusOutlined /> <MinusOutlined />\n        </span>\n        <span className=\"o-card__text\">{left}</span>\n      </div>\n      <div className={clsx(cardSideClass, `${cardSideClass}--right`, `${cardSideClass}--R${rightColor}`)}>\n        <span className=\"o-card__arrow\">\n          <MinusOutlined /> <MinusOutlined /> <ArrowRightOutlined />\n        </span>\n        <span className=\"o-card__text\">{right}</span>\n      </div>\n    </div>\n  );\n}\n\nCard.propTypes = {\n  left: PropTypes.string.isRequired,\n  right: PropTypes.string.isRequired,\n  className: PropTypes.string,\n};\n\nCard.defaultProps = {\n  cardName: '',\n};\n\nexport default memo(Card);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Components\nimport Title from '../../shared/Title';\nimport Instruction from '../../shared/Instruction';\nimport Card from './Card';\n\nfunction CardSelection({ onSendChosenSide, cards }) {\n  return (\n    <div className=\"o-card-selection\">\n      <Title>Selecione a carta que será usada nessa rodada!</Title>\n      <Instruction contained>Escolha uma carta que você acredita que conseguirá criar uma dica.</Instruction>\n      <div className=\"o-card-selection__container\">\n        {cards.map((card) => (\n          <button\n            key={`card-button-${card.id}`}\n            className=\"o-card-selection__button\"\n            onClick={() => onSendChosenSide({ cardId: card.id })}\n          >\n            <Card left={card.left} right={card.right} />\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nCardSelection.propTypes = {\n  onSendChosenSide: PropTypes.func.isRequired,\n  cards: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      left: PropTypes.string,\n      right: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default CardSelection;\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useAmIReady, useActivePlayer, useAmIActive, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { ONDA_TELEPATICA } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport WaitingRoom from '../../shared/WaitingRoom';\nimport StepSwitcher from '../../shared/StepSwitcher';\nimport CardSelection from './CardSelection';\nimport RoundAnnouncement from '../../shared/RoundAnnouncement';\nimport Instruction from '../../shared/Instruction';\nimport AvatarName from '../../avatars/AvatarName';\n\nfunction DialSidesPhase({ state, players, info }) {\n  const amIReady = useAmIReady(players, state);\n  const [step, setStep] = useState(0);\n  const psychic = useActivePlayer(state, players, 'psychic');\n  const amIThePsychic = useAmIActive(state, 'psychic');\n\n  const onSendChosenSide = useAPICall({\n    apiFunction: ONDA_TELEPATICA.submitSides,\n    actionName: 'submit-side',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: 'Carta selecionada com sucesso',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar enviar a carta',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ONDA_TELEPATICA.DIAL_SIDES}\n      className=\"o-dial-sides-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!amIReady]}>\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state.round}\n          onPressButton={() => setStep(1)}\n          players={players}\n          teams={state.teams}\n          time={10}\n        >\n          <Instruction contained>\n            É a vez do\n            <span className=\"u-word-selection-phase__guesser-name-announcement\">TIME {state.activeTeam}</span>\n            <br />\n            {amIThePsychic ? (\n              <span className=\"u-word-selection-phase__guesser-name-announcement\">VOCÊ</span>\n            ) : (\n              <AvatarName player={psychic} uppercase size=\"large\" />\n            )}\n            será o(a) medium\n          </Instruction>\n          <div className=\"u-word-selection-phase__team-points\"></div>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <Fragment>\n          {!amIThePsychic ? (\n            <WaitingRoom\n              players={players}\n              title={`${psychic.name} está escolhendo uma carta...`}\n              instruction=\"Aguarde enquanto ele(a) decide a carta que será usada nessa rodada.\"\n            />\n          ) : (\n            <CardSelection onSendChosenSide={onSendChosenSide} cards={state.cards} />\n          )}\n        </Fragment>\n\n        {/* Step 2 */}\n        <WaitingRoom\n          players={players}\n          title=\"Pronto!\"\n          instruction=\"Vamos aguardar o jogo iniciar a próxima fase.\"\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nDialSidesPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default DialSidesPhase;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Card from './Card';\n\nconst getBracketClass = (number, showNeedle, needle, showTarget, target) => {\n  const baseBracketClass = 'o-dial-numbers';\n  const modifier = number % 2 === 0 ? 'even' : 'odd';\n  return clsx(\n    baseBracketClass,\n    `${baseBracketClass}--${modifier}`,\n    showNeedle && needle === number && `${baseBracketClass}--active`,\n    showTarget && target === number && `${baseBracketClass}--target`\n  );\n};\n\nfunction Dial({\n  card,\n  needle = 0,\n  showNeedle = false,\n  target = 0,\n  showTarget = false,\n  rivalGuess = 0,\n  rivalTeam = 'rival',\n  animate = false,\n  showPoints,\n}) {\n  const baseClass = 'o-dial';\n  const basePointsClass = 'o-dial-points';\n  const baseRivalClass = 'o-dial-rival';\n  const points = Math.abs(needle - target);\n\n  return (\n    <div className={clsx(`${baseClass}`, animate && `${baseClass}--animated`)}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 670 340\"\n        overflow=\"visible\"\n        className={clsx(`${baseClass}__svg`)}\n      >\n        <defs />\n\n        <path\n          d=\"M669.9 329.9c-1.1-21-6.1-71.9-27.3-127.7C591.2 83.3 472.8 0 335 0h-.2C198.2.1 80.7 81.9 28.7 199.2 5.7 258 1 312.1 0 332c-.1 1.1.1 2.1.5 3 1.1 2.9 3.9 5 7.2 5h654.6c3.3 0 6.1-2.1 7.2-5 .2-.5.3-1.1.4-1.7v-3.4z\"\n          fill=\"#181d44\"\n        />\n\n        {showTarget && (\n          <path\n            id=\"target\"\n            className={clsx(`${baseClass}__target`, animate && `${basePointsClass}--animated-2`)}\n            style={{ transform: `rotate(${target * 8}deg)` }}\n            d=\"M335.2 0l7.1 11.4 13 3.2-8.6 10.3.9 13.4-12.4-5.1-12.5 5.1 1-13.4-8.6-10.3 13-3.2z\"\n          />\n        )}\n\n        <g className=\"o-dial-numbers\">\n          <path\n            id=\"bracket-number-10-r\"\n            className={getBracketClass(10, showNeedle, needle, showTarget, target)}\n            d=\"M341.2 51.9l-3 5.4v-5.1c0-.4.1-.8.4-1.1.3-.3.6-.4 1.1-.4.8 0 1.3.4 1.5 1.2zm-2.5 9c.2.2.6.3 1 .3s.8-.1 1.1-.5c.3-.3.4-.7.4-1.1v-5.1l-3 5.3c.1.6.2.9.5 1.1zm16.8-20.2L335 340 314.5 40.7h41zm-23.8 8.5h-1.5l-3 1.5v1.5h1.5v10.5h3V49.2zm12.5 10.5v-7.5c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v7.5c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.6.9-1.3.9-2.1z\"\n          />\n          <path\n            id=\"bracket-number-9-r\"\n            className={getBracketClass(9, showNeedle, needle, showTarget, target)}\n            d=\"M336 51.1c.3.3.4.7.4 1.1v3c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.8-.1-1.1-.5-.3-.3-.4-.7-.4-1.1v-3c0-.4.1-.8.4-1.1s.6-.5 1.1-.5c.5.1.8.2 1.1.5zm19.5-10.4L335 340 314.5 40.7h41zm-16.1 16.7v-5.2c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v3c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h1.5c.9 0 1.4-.5 1.5-1.5v1.5c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-1.5v1.5h2.2c1.4 0 2.7-.5 3.7-1.5s1.6-2.3 1.6-3.8z\"\n          />\n          <path\n            id=\"bracket-number-8-r\"\n            className={getBracketClass(8, showNeedle, needle, showTarget, target)}\n            d=\"M336.4 58.2v1.5c0 .4-.1.8-.4 1.1s-.7.4-1.1.4c-.4 0-.8-.1-1.1-.4s-.4-.7-.4-1.1v-1.5c0-1 .5-1.5 1.5-1.5s1.5.5 1.5 1.5zm-1.5-7.5c-.4 0-.8.1-1.1.4-.3.3-.4.7-.4 1.1v1.5c0 .4.1.8.4 1.1.3.3.6.4 1.1.4.4 0 .8-.1 1.1-.4.3-.3.4-.6.4-1.1v-1.5c0-.4-.1-.8-.4-1.1-.3-.3-.6-.4-1.1-.4zm20.6-10L335 340 314.5 40.7h41zm-19.1 15.2c1-.1 1.7-.4 2.2-.9.5-.5.7-1.2.7-2.1v-.7c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v.7c0 .9.3 1.6.8 2.1s1.3.8 2.2.9c-1 0-1.7.3-2.2 1-.5.6-.8 1.3-.8 2v.7c0 .7.3 1.3.9 2 .6.7 1.3 1 2.1 1h3c.8 0 1.5-.3 2.1-1 .6-.7.9-1.3.9-2V59c0-.7-.2-1.4-.7-2-.4-.7-1.2-1.1-2.2-1.1z\"\n          />\n          <path\n            id=\"bracket-number-7-r\"\n            className={getBracketClass(7, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm24.2 13l-.8 1.5c-1 2.1-1.5 3.6-1.5 4.5v3h-3v-3c0-1 .5-2.5 1.5-4.5l1.5-3v-1.5h-6v-1.5h9v3l-.7 1.5z\"\n          />\n\n          <path\n            id=\"bracket-number-6-r\"\n            className={getBracketClass(6, showNeedle, needle, showTarget, target)}\n            d=\"M336 55.6c.3.3.4.7.4 1.1v3c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.8-.1-1.1-.5-.3-.3-.4-.7-.4-1.1v-3c0-.4.1-.8.4-1.1.3-.3.6-.4 1.1-.4.5 0 .8.1 1.1.4zm19.5-14.9L335 340 314.5 40.7h41zm-16.1 19v-3c0-.8-.3-1.5-.9-2.1s-1.3-.9-2.1-.9h-1.5c-.4 0-.8.1-1 .4-.3.3-.4.6-.5 1.1v-1.5c0-.8.3-1.5.9-2.1s1.3-.9 2.1-.9h1.5v-1.5h-2.2c-1.4 0-2.7.5-3.7 1.5s-1.6 2.3-1.6 3.7v5.2c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.5.9-1.2.9-2z\"\n          />\n\n          <path\n            id=\"bracket-number-5-r\"\n            className={getBracketClass(5, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm21.9 13c.8 0 1.5.3 2.1.9s.9 1.3.9 2.1v3c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-3c-1.8 0-2.8-1-3-3h1.5c.1 1 .6 1.5 1.5 1.5h1.5c.4 0 .8-.1 1.1-.4s.4-.7.4-1.1v-3c0-.4-.1-.8-.4-1.1-.3-.3-.7-.4-1.1-.4h-4.5v-6h9v1.5h-6v3h3z\"\n          />\n\n          <path\n            id=\"bracket-number-4-r\"\n            className={getBracketClass(4, showNeedle, needle, showTarget, target)}\n            d=\"M330.4 56.7l4.5-5.6v5.6h-4.5zm25.1-16L335 340 314.5 40.7h41zm-16.1 17.5v-1.5h-1.5v-7.5h-3l-6 7.5v1.5h6v4.5h3v-4.5h1.5z\"\n          />\n\n          <path\n            id=\"bracket-number-3-r\"\n            className={getBracketClass(3, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm21.9 13c.9 0 1.6.3 2.1 1s.8 1.3.8 2v3c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-3c-1.8 0-2.8-1-3-3h1.5c.1 1 .6 1.5 1.5 1.5h1.5c.4 0 .8-.1 1.1-.4s.4-.7.4-1.1v-3c0-.2-.1-.6-.4-.9s-.6-.6-1.1-.6h-3v-1.5l4.5-3h-6v-1.5h9v1.5l-4.5 3h1.6z\"\n          />\n\n          <path\n            id=\"bracket-number-2-r\"\n            className={getBracketClass(2, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm24.9 20.5v1.5h-9v-1.5c0-1 1-2.4 2.9-4l.2-.2c1.9-1.7 2.9-3 2.9-4v-.7c0-.4-.1-.8-.4-1.1-.3-.3-.7-.4-1.1-.4h-1.5c-.9 0-1.4.5-1.5 1.5h-1.5c.2-2 1.2-3 3-3h3c.8 0 1.5.3 2.1.9.6.6.9 1.3.9 2.1v.7c0 1-1 2.4-2.9 4l-.2.2c-1.9 1.7-2.9 3-2.9 3.9v.1h6z\"\n          />\n          <path\n            id=\"bracket-number-1-r\"\n            className={getBracketClass(1, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm18.9 22V52.2h-1.5v-1.5l3-1.5h1.5v13.5h-3z\"\n          />\n\n          <path\n            id=\"bracket-number-10-l\"\n            className={getBracketClass(-10, showNeedle, needle, showTarget, target)}\n            d=\"M341.2 51.9l-3 5.4v-5.1c0-.4.1-.8.4-1.1.3-.3.6-.4 1.1-.4.8 0 1.3.4 1.5 1.2zm-2.5 9c.2.2.6.3 1 .3s.8-.1 1.1-.5c.3-.3.4-.7.4-1.1v-5.1l-3 5.3c.1.6.2.9.5 1.1zm16.8-20.2L335 340 314.5 40.7h41zm-23.8 8.5h-1.5l-3 1.5v1.5h1.5v10.5h3V49.2zm12.5 10.5v-7.5c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v7.5c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.6.9-1.3.9-2.1z\"\n          />\n          <path\n            id=\"bracket-number-9-l\"\n            className={getBracketClass(-9, showNeedle, needle, showTarget, target)}\n            d=\"M336 51.1c.3.3.4.7.4 1.1v3c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.8-.1-1.1-.5-.3-.3-.4-.7-.4-1.1v-3c0-.4.1-.8.4-1.1s.6-.5 1.1-.5c.5.1.8.2 1.1.5zm19.5-10.4L335 340 314.5 40.7h41zm-16.1 16.7v-5.2c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v3c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h1.5c.9 0 1.4-.5 1.5-1.5v1.5c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-1.5v1.5h2.2c1.4 0 2.7-.5 3.7-1.5s1.6-2.3 1.6-3.8z\"\n          />\n          <path\n            id=\"bracket-number-8-l\"\n            className={getBracketClass(-8, showNeedle, needle, showTarget, target)}\n            d=\"M336.4 58.2v1.5c0 .4-.1.8-.4 1.1s-.7.4-1.1.4c-.4 0-.8-.1-1.1-.4s-.4-.7-.4-1.1v-1.5c0-1 .5-1.5 1.5-1.5s1.5.5 1.5 1.5zm-1.5-7.5c-.4 0-.8.1-1.1.4-.3.3-.4.7-.4 1.1v1.5c0 .4.1.8.4 1.1.3.3.6.4 1.1.4.4 0 .8-.1 1.1-.4.3-.3.4-.6.4-1.1v-1.5c0-.4-.1-.8-.4-1.1-.3-.3-.6-.4-1.1-.4zm20.6-10L335 340 314.5 40.7h41zm-19.1 15.2c1-.1 1.7-.4 2.2-.9.5-.5.7-1.2.7-2.1v-.7c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v.7c0 .9.3 1.6.8 2.1s1.3.8 2.2.9c-1 0-1.7.3-2.2 1-.5.6-.8 1.3-.8 2v.7c0 .7.3 1.3.9 2 .6.7 1.3 1 2.1 1h3c.8 0 1.5-.3 2.1-1 .6-.7.9-1.3.9-2V59c0-.7-.2-1.4-.7-2-.4-.7-1.2-1.1-2.2-1.1z\"\n          />\n          <path\n            id=\"bracket-number-7-l\"\n            className={getBracketClass(-7, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm24.2 13l-.8 1.5c-1 2.1-1.5 3.6-1.5 4.5v3h-3v-3c0-1 .5-2.5 1.5-4.5l1.5-3v-1.5h-6v-1.5h9v3l-.7 1.5z\"\n          />\n          <path\n            id=\"bracket-number-6-l\"\n            className={getBracketClass(-6, showNeedle, needle, showTarget, target)}\n            d=\"M336 55.6c.3.3.4.7.4 1.1v3c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.8-.1-1.1-.5-.3-.3-.4-.7-.4-1.1v-3c0-.4.1-.8.4-1.1.3-.3.6-.4 1.1-.4.5 0 .8.1 1.1.4zm19.5-14.9L335 340 314.5 40.7h41zm-16.1 19v-3c0-.8-.3-1.5-.9-2.1s-1.3-.9-2.1-.9h-1.5c-.4 0-.8.1-1 .4-.3.3-.4.6-.5 1.1v-1.5c0-.8.3-1.5.9-2.1s1.3-.9 2.1-.9h1.5v-1.5h-2.2c-1.4 0-2.7.5-3.7 1.5s-1.6 2.3-1.6 3.7v5.2c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.5.9-1.2.9-2z\"\n          />\n          <path\n            id=\"bracket-number-5-l\"\n            className={getBracketClass(-5, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm21.9 13c.8 0 1.5.3 2.1.9s.9 1.3.9 2.1v3c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-3c-1.8 0-2.8-1-3-3h1.5c.1 1 .6 1.5 1.5 1.5h1.5c.4 0 .8-.1 1.1-.4s.4-.7.4-1.1v-3c0-.4-.1-.8-.4-1.1-.3-.3-.7-.4-1.1-.4h-4.5v-6h9v1.5h-6v3h3z\"\n          />\n          <path\n            id=\"bracket-number-4-l\"\n            className={getBracketClass(-4, showNeedle, needle, showTarget, target)}\n            d=\"M330.4 56.7l4.5-5.6v5.6h-4.5zm25.1-16L335 340 314.5 40.7h41zm-16.1 17.5v-1.5h-1.5v-7.5h-3l-6 7.5v1.5h6v4.5h3v-4.5h1.5z\"\n          />\n          <path\n            id=\"bracket-number-3-l\"\n            className={getBracketClass(-3, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm21.9 13c.9 0 1.6.3 2.1 1s.8 1.3.8 2v3c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-3c-1.8 0-2.8-1-3-3h1.5c.1 1 .6 1.5 1.5 1.5h1.5c.4 0 .8-.1 1.1-.4s.4-.7.4-1.1v-3c0-.2-.1-.6-.4-.9s-.6-.6-1.1-.6h-3v-1.5l4.5-3h-6v-1.5h9v1.5l-4.5 3h1.6z\"\n          />\n          <path\n            id=\"bracket-number-2-l\"\n            className={getBracketClass(-2, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm24.9 20.5v1.5h-9v-1.5c0-1 1-2.4 2.9-4l.2-.2c1.9-1.7 2.9-3 2.9-4v-.7c0-.4-.1-.8-.4-1.1-.3-.3-.7-.4-1.1-.4h-1.5c-.9 0-1.4.5-1.5 1.5h-1.5c.2-2 1.2-3 3-3h3c.8 0 1.5.3 2.1.9.6.6.9 1.3.9 2.1v.7c0 1-1 2.4-2.9 4l-.2.2c-1.9 1.7-2.9 3-2.9 3.9v.1h6z\"\n          />\n          <path\n            id=\"bracket-number-1-l\"\n            className={getBracketClass(-1, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm18.9 22V52.2h-1.5v-1.5l3-1.5h1.5v13.5h-3z\"\n          />\n\n          <path\n            id=\"bracket-number-0\"\n            className={getBracketClass(0, showNeedle, needle, showTarget, target)}\n            d=\"M333.5 59.9l3-5.3v5.1c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.7-.1-1-.3-.3-.3-.5-.6-.5-1.1zm1.4-9.2c-.4 0-.8.1-1.1.4-.3.3-.4.7-.4 1.1v5.1l3-5.4c-.2-.8-.7-1.2-1.5-1.2zm20.6-10L335 340 314.5 40.7h41zm-16.1 19v-7.5c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v7.5c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.6.9-1.3.9-2.1z\"\n          />\n        </g>\n\n        {showNeedle && (\n          <path\n            id=\"needle\"\n            className={clsx(`${baseClass}__needle`, animate && `${basePointsClass}--animated-1`)}\n            style={{ transform: `rotate(${needle * 8}deg)` }}\n            d=\"M335 340c-.9 0-3.7-.8-3.7-1.8l2-260.6c0-1 .8-1.8 1.7-1.8.9 0 1.7.8 1.7 1.8l2 260.6c0 1-2.8 1.8-3.7 1.8z\"\n          />\n        )}\n\n        {showPoints && (\n          <g className={clsx(`${baseClass}__points`)}>\n            {points === 0 && (\n              <g>\n                <path\n                  fill=\"#29abe2\"\n                  d=\"M335.2 102.7l14 22.5 25.8 6.4-17.1 20.3 1.9 26.5-24.6-10-24.6 10 1.9-26.5-17.1-20.3 25.7-6.4z\"\n                />\n                <path\n                  d=\"M334.9 158.7v-10.1h-13.5v-3.4l13.5-16.9h6.8v16.9h3.4v3.4h-3.4v10.1h-6.8zm0-13.4v-12.7l-10.1 12.7h10.1z\"\n                  fill=\"#fff\"\n                />\n              </g>\n            )}\n\n            {points === 1 && (\n              <g>\n                <path\n                  fill=\"#a45467\"\n                  d=\"M335.2 102.7l14 22.5 25.8 6.4-17.1 20.3 1.9 26.5-24.6-10-24.6 10 1.9-26.5-17.1-20.3 25.7-6.4z\"\n                />\n                <path\n                  d=\"M324.8 130.4H345v3.4l-10.1 6.8h3.4c1.9 0 3.6.7 4.8 2.2 1.3 1.5 1.9 3 1.9 4.5v6.7c0 1.9-.7 3.5-2 4.8-1.3 1.3-2.9 2-4.7 2h-6.8c-4 0-6.2-2.3-6.8-6.8h3.4c.2 2.3 1.3 3.4 3.4 3.4h3.4c.9 0 1.7-.3 2.4-1s1-1.5 1-2.4v-6.7c0-.5-.3-1.2-.9-2.1-.6-.9-1.4-1.3-2.6-1.3h-6.7v-3.4l10.1-6.8h-13.5v-3.3z\"\n                  fill=\"#fff\"\n                />\n              </g>\n            )}\n\n            {points === 2 && (\n              <g className={clsx(`${baseClass}__points`)}>\n                <path\n                  fill=\"#a45467\"\n                  d=\"M335.2 102.7l14 22.5 25.8 6.4-17.1 20.3 1.9 26.5-24.6-10-24.6 10 1.9-26.5-17.1-20.3 25.7-6.4z\"\n                />\n                <path\n                  d=\"M328.2 136.1h-3.4c.5-4.5 2.8-6.8 6.8-6.8h6.8c1.8 0 3.4.7 4.7 2 1.3 1.3 2 2.9 2 4.8v1.7c0 2.3-2.2 5.4-6.5 9.1l-.4.4c-4.3 3.7-6.5 6.7-6.5 8.8v.3H345v3.4h-20.3v-3.4c0-2.4 2.2-5.4 6.6-9.1l.4-.4c4.3-3.7 6.5-6.8 6.5-9.1v-1.7c0-.9-.3-1.7-1-2.4s-1.5-1-2.4-1h-3.4c-1.9 0-3.1 1.2-3.2 3.4z\"\n                  fill=\"#fff\"\n                />\n              </g>\n            )}\n          </g>\n        )}\n\n        {rivalGuess === -1 && (\n          <g className={clsx(`${baseRivalClass} ${baseRivalClass}---1`)}>\n            <path\n              fill=\"#FFFFFF\"\n              d=\"M64.6 14.1c-23.9 0-43.3 14.4-43.3 32.1 0 8.8 4.8 16.8 12.6 22.6-5.3 4.6-12.3 7-19.4 6.6 1.8 1.5 3.7 2.7 5.9 3.7 9 4 19.1 2.2 26.2-3.6 5.5 1.9 11.6 2.9 18 2.9 23.9 0 43.3-14.4 43.3-32.1S88.5 14.1 64.6 14.1z\"\n            />\n            <path\n              fill=\"#f7931e\"\n              d=\"M45.4 49.1c-2.3-1.3-2.3-4.6 0-5.9l13.1-7.6L71.6 28c2.3-1.3 5.1.3 5.1 2.9v30.2c0 2.6-2.8 4.2-5.1 2.9l-13.1-7.6-13.1-7.3z\"\n            />\n            <text x=\"10\" y=\"11\" fill=\"#FFFFFF\" style={{ textAnchor: 'start' }}>\n              O time {rivalTeam} disse que tá mais pra cá!\n            </text>\n          </g>\n        )}\n\n        {rivalGuess === 1 && (\n          <g className={clsx(`${baseRivalClass} ${baseRivalClass}---1`)}>\n            <text x=\"660\" y=\"11\" fill=\"#FFFFFF\" style={{ textAnchor: 'end' }}>\n              O time {rivalTeam} disse que tá mais pra cá!\n            </text>\n            <path\n              fill=\"#FFFFFF\"\n              d=\"M605.4 14.1c23.9 0 43.3 14.4 43.3 32.1 0 8.8-4.8 16.8-12.6 22.6 5.3 4.6 12.3 7 19.4 6.6-1.8 1.5-3.7 2.7-5.9 3.7-9 4-19.1 2.2-26.2-3.6-5.5 1.9-11.6 2.9-18 2.9-23.9 0-43.3-14.4-43.3-32.1s19.4-32.2 43.3-32.2z\"\n            />\n            <path\n              fill=\"#f7931e\"\n              d=\"M624.6 49.1c2.3-1.3 2.3-4.6 0-5.9l-13.1-7.6-13.1-7.6c-2.3-1.3-5.1.3-5.1 2.9v30.2c0 2.6 2.8 4.2 5.1 2.9l13.1-7.6 13.1-7.3z\"\n            />\n          </g>\n        )}\n      </svg>\n      <Card left={card.left} right={card.right} className=\"o-dial__card\" />\n    </div>\n  );\n}\n\nDial.propTypes = {\n  card: PropTypes.shape({\n    id: PropTypes.string,\n    left: PropTypes.string,\n    right: PropTypes.string,\n  }).isRequired,\n  needle: PropTypes.number,\n  showNeedle: PropTypes.bool,\n  target: PropTypes.number,\n  showTarget: PropTypes.bool,\n  showPoints: PropTypes.bool,\n  rivalGuess: PropTypes.number,\n  rivalTeam: PropTypes.string,\n  animate: PropTypes.bool,\n};\n\nDial.defaultProps = {\n  needle: 0,\n  showNeedle: false,\n  target: 0,\n  showTarget: false,\n  showPoints: false,\n  rivalGuess: 0,\n  rivalTeam: 'rival',\n  animate: false,\n};\n\nexport default memo(Dial);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Input, Space } from 'antd';\n// Components\nimport Title from '../../shared/Title';\nimport Instruction from '../../shared/Instruction';\nimport Dial from './Dial';\n\nconst getHint = (card) => {\n  if (card.target === 0) {\n    return 'número 0, bem no centro,';\n  }\n\n  if (card.target < 0) {\n    return `\"${Math.abs(card.target)}\" do lado \"${card.left}\"`;\n  }\n\n  return `\"${card.target}\" do lado \"${card.right}\"`;\n};\n\nfunction DialClueWriting({ onSendClue, card }) {\n  const [clue, setClue] = useState('');\n\n  return (\n    <div className=\"o-dial-clue-writing\">\n      <Title>Escreva uma dica!</Title>\n      <Instruction contained>\n        Escreva uma dica que ajudará seu time a apontar o número {getHint(card)} do medidor de ondas\n        telepáticas.\n        <br />\n        Regras:\n        <ul>\n          <li>\n            Use uma única idea. Evite usar \"mas\", \"enquanto\", \"quando\", e também superlativos \"super\", \"muito\"\n          </li>\n          <li>Não invente coisas. Exemplo: 'Nicolas Cage cantando uma música dos Beatles' é inválido.</li>\n          <li>Mantenha-se no assunto da carta. Exemplo: 'Amor' não é uma dica válida para 'Sujo'.</li>\n          <li>Não use números para sugerir a posição do espectro.</li>\n          <li>Não use partes, derivados ou sinônimos das palavras da carta.</li>\n        </ul>\n      </Instruction>\n\n      <Dial card={card} showTarget target={card.target} />\n\n      <Space className=\"container container--center container--transparent\">\n        <Input\n          onChange={(e) => setClue(e.target.value.toUpperCase())}\n          placeholder=\"Digite sua dica aqui\"\n          className=\"uppercase-input\"\n        />\n        <Button\n          type=\"primary\"\n          disabled={!Boolean(clue)}\n          onClick={() => {\n            onSendClue({ clue });\n          }}\n        >\n          Enviar dica\n        </Button>\n      </Space>\n    </div>\n  );\n}\n\nDialClueWriting.propTypes = {\n  onSendClue: PropTypes.func.isRequired,\n  card: PropTypes.shape({\n    id: PropTypes.string,\n    left: PropTypes.string,\n    right: PropTypes.string,\n  }).isRequired,\n};\n\nexport default DialClueWriting;\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useAmIReady, useActivePlayer, useAmIActive, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { ONDA_TELEPATICA } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport WaitingRoom from '../../shared/WaitingRoom';\nimport StepSwitcher from '../../shared/StepSwitcher';\nimport Card from './Card';\nimport DialClueWriting from './DialClueWriting';\n\nfunction DialCluePhase({ state, players, info }) {\n  const amIReady = useAmIReady(players, state);\n  const [step, setStep] = useState(0);\n  const psychic = useActivePlayer(state, players, 'psychic');\n  const amIThePsychic = useAmIActive(state, 'psychic');\n\n  const onSendClue = useAPICall({\n    apiFunction: ONDA_TELEPATICA.submitClue,\n    actionName: 'submit-clue',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage: 'Dica submetida com sucesso',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar enviar a dica',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ONDA_TELEPATICA.DIAL_CLUE}\n      className=\"o-dial-clue-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!amIReady]}>\n        {/* Step 0 */}\n        <Fragment>\n          {!amIThePsychic ? (\n            <WaitingRoom\n              players={players}\n              title={`${psychic.name} está pensando em uma dica...`}\n              instruction=\"Aguarde enquanto ele(a) escreve uma dica para:\"\n            >\n              <div className=\"container container--center\">\n                <Card left={state.card.left} right={state.card.right} />\n              </div>\n            </WaitingRoom>\n          ) : (\n            <DialClueWriting card={state.card} onSendClue={onSendClue} />\n          )}\n        </Fragment>\n\n        {/* Step 1 */}\n        <WaitingRoom\n          players={players}\n          title=\"Pronto!\"\n          instruction=\"Vamos aguardar o jogo iniciar a próxima fase.\"\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nDialCluePhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default DialCluePhase;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Slider } from 'antd';\n// Components\nimport Title from '../../shared/Title';\nimport Instruction from '../../shared/Instruction';\nimport Dial from './Dial';\nimport AvatarName from '../../avatars/AvatarName';\n\nfunction DialGuessSelection({\n  activeTeam,\n  teamController,\n  amITheController,\n  isMyTeamActive,\n  onSendGuess,\n  card,\n  amIThePsychic,\n}) {\n  const [needle, setNeedle] = useState(0);\n\n  return (\n    <div className=\"o-dial-guess-selection\">\n      <Title>\n        {amIThePsychic ? (\n          <span>Seu time está pensando...</span>\n        ) : (\n          <span>Hora do time {activeTeam} brilhar!</span>\n        )}\n      </Title>\n      <Instruction contained>\n        Qual número melhor indica <span className=\"o-dial-guess-selection__clue\">{card.clue}</span> na escala\n        de{' '}\n        <strong>\n          {card.left}-{card.right}\n        </strong>\n        ?\n      </Instruction>\n\n      <Dial card={card} showTarget={false} target={card.target} showNeedle={isMyTeamActive} needle={needle} />\n\n      {isMyTeamActive ? (\n        <Instruction contained>\n          {amIThePsychic ? (\n            <span>Pokerface e bico fechada! Mas pode brincar com a barrra aí!</span>\n          ) : (\n            <ul>\n              <li>\n                Discuta com seu time em qual número do medidor de ondas telepáticas você acha que a dica se\n                melhor encaixa.\n              </li>\n              <li>\n                Todos podem controlar o ponteiro usando a barra abaixo, mas somente{' '}\n                {amITheController ? 'VOCÊ ' : <AvatarName player={teamController} />}pode apertar o botão para\n                enviar a resposta final.\n              </li>\n            </ul>\n          )}\n        </Instruction>\n      ) : (\n        <Instruction contained>\n          O outro time agora está tentando adivinhar onde no medidor de ondas telepáticas a dica se encaixa\n          melhor. Na próxima fase, você e seu time terão a change de contra-atacar dizendo se a solução está\n          mais para esquerda ou mais para a direita do que eles escolheram!\n        </Instruction>\n      )}\n\n      {isMyTeamActive && (\n        <div>\n          <Slider defaultValue={0} min={-10} max={10} onChange={setNeedle} />\n          {amITheController && (\n            <div className=\"container container--transparent container--center\">\n              <Button\n                type=\"primary\"\n                onClick={() => {\n                  onSendGuess({ guess: needle });\n                }}\n                disabled={!amITheController}\n              >\n                Enviar resposta: {needle}\n              </Button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nDialGuessSelection.propTypes = {\n  onSendGuess: PropTypes.func.isRequired,\n  card: PropTypes.shape({\n    id: PropTypes.string,\n    left: PropTypes.string,\n    right: PropTypes.string,\n  }).isRequired,\n  activeTeam: PropTypes.oneOf(['A', 'B']),\n  teamController: PropTypes.object,\n  amITheController: PropTypes.bool,\n  isMyTeamActive: PropTypes.bool,\n  amIThePsychic: PropTypes.bool,\n};\n\nexport default DialGuessSelection;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useAmIReady, useActivePlayer, useAmIActive, useAPICall, useIsMyTeamActive } from '../../../hooks';\n// Resources & Utils\nimport { ONDA_TELEPATICA } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport WaitingRoom from '../../shared/WaitingRoom';\nimport StepSwitcher from '../../shared/StepSwitcher';\nimport DialGuessSelection from './DialGuessSelection';\n\nfunction GuessPhase({ state, players, info }) {\n  const amIReady = useAmIReady(players, state);\n  const [step, setStep] = useState(0);\n  const psychic = useActivePlayer(state, players, 'psychic');\n  const controller = useActivePlayer(state, players, 'teamController');\n  const amITheController = useAmIActive(state, 'teamController');\n  const amIThePsychic = useAmIActive(state, 'psychic');\n  const isMyTeamActive = useIsMyTeamActive(state, players);\n\n  const onSendGuess = useAPICall({\n    apiFunction: ONDA_TELEPATICA.submitGuess,\n    actionName: 'submit-guess',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage: 'Chute submetido com sucesso',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar enviar seu chute',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ONDA_TELEPATICA.GUESS}\n      className=\"o-guess-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!amIReady]}>\n        {/* Step 0 */}\n        <DialGuessSelection\n          activeTeam={state.activeTeam}\n          psychic={psychic}\n          teamController={controller}\n          amITheController={amITheController}\n          onSendGuess={onSendGuess}\n          isMyTeamActive={isMyTeamActive}\n          card={state.card}\n          amIThePsychic={amIThePsychic}\n        />\n\n        {/* Step 1 */}\n        <WaitingRoom\n          players={players}\n          title=\"Pronto!\"\n          instruction=\"Vamos aguardar o jogo iniciar a próxima fase.\"\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nGuessPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default GuessPhase;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Space } from 'antd';\n// Components\nimport Title from '../../shared/Title';\nimport Instruction from '../../shared/Instruction';\nimport Dial from './Dial';\nimport AvatarName from '../../avatars/AvatarName';\nimport { BackwardOutlined, ForwardOutlined } from '@ant-design/icons';\n\nfunction DialRivalSelection({\n  activeTeam,\n  rivalController,\n  amITheRivalController,\n  isMyTeamActive,\n  onSendRivalGuess,\n  card,\n}) {\n  return (\n    <div className=\"o-dial-guess-selection\">\n      <Title>Hora do time {activeTeam} contra-atacar!</Title>\n      <Instruction contained>\n        A solução esta mais pra esquerda ou mais pr direita do número {card.needle} para a dica{' '}\n        <span className=\"o-dial-guess-selection__clue\">{card.clue}</span> na escala de{' '}\n        <strong>\n          {card.left}-{card.right}\n        </strong>\n        ?\n      </Instruction>\n\n      <Dial card={card} showTarget={false} target={card.target} showNeedle needle={card.needle} />\n\n      {isMyTeamActive ? (\n        <Instruction contained>\n          Você pode ganhar um ponto se escolher a direção correta.\n          <br />\n          {amITheRivalController ? 'VOCÊ ' : <AvatarName player={rivalController} />}está no comando para\n          apertar os botões! <br />E então, a solução está mais para a esquerda ou mais para a direita do\n          ponteiro vermelho?\n        </Instruction>\n      ) : (\n        <Instruction contained>\n          Agora, o time oposto tem a chance de ganhar 1 ponto ao tentar adivinhar se a solução está mais para\n          a esquerda ou mais para a direita do que o seu time escolheu.\n        </Instruction>\n      )}\n\n      {amITheRivalController && (\n        <div className=\"container container--center container--transparent\">\n          <Space>\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                onSendRivalGuess({ rivalGuess: -1 });\n              }}\n            >\n              <BackwardOutlined /> Mais para a esquerda\n            </Button>\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                onSendRivalGuess({ rivalGuess: 1 });\n              }}\n            >\n              Mais para a direita <ForwardOutlined />\n            </Button>\n          </Space>\n        </div>\n      )}\n    </div>\n  );\n}\n\nDialRivalSelection.propTypes = {\n  onSendRivalGuess: PropTypes.func.isRequired,\n  card: PropTypes.shape({\n    id: PropTypes.string,\n    left: PropTypes.string,\n    right: PropTypes.string,\n  }).isRequired,\n  activeTeam: PropTypes.oneOf(['A', 'B']),\n  rivalController: PropTypes.object,\n  amITheRivalController: PropTypes.bool,\n  isMyTeamActive: PropTypes.bool,\n};\n\nexport default DialRivalSelection;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useAmIReady, useActivePlayer, useAmIActive, useAPICall, useIsMyTeamActive } from '../../../hooks';\n// Resources & Utils\nimport { ONDA_TELEPATICA } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport WaitingRoom from '../../shared/WaitingRoom';\nimport StepSwitcher from '../../shared/StepSwitcher';\nimport DialRivalSelection from './DialRivalSelection';\n\nfunction RivalPhase({ state, players, info }) {\n  const amIReady = useAmIReady(players, state);\n  const [step, setStep] = useState(0);\n  const psychic = useActivePlayer(state, players, 'psychic');\n  const rivalController = useActivePlayer(state, players, 'rivalController');\n  const amITheRivalController = useAmIActive(state, 'rivalController');\n  const isMyTeamActive = useIsMyTeamActive(state, players);\n\n  const onSendRivalGuess = useAPICall({\n    apiFunction: ONDA_TELEPATICA.submitRivalGuess,\n    actionName: 'submit-rival-guess',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage: 'Chute submetido com sucesso',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar enviar seu chute',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ONDA_TELEPATICA.RIVAL_GUESS}\n      className=\"o-guess-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!amIReady]}>\n        {/* Step 0 */}\n        <DialRivalSelection\n          activeTeam={state.activeTeam === 'A' ? 'B' : 'A'}\n          psychic={psychic}\n          rivalController={rivalController}\n          amITheRivalController={amITheRivalController}\n          onSendRivalGuess={onSendRivalGuess}\n          isMyTeamActive={!isMyTeamActive}\n          card={state.card}\n        />\n\n        {/* Step 1 */}\n        <WaitingRoom\n          players={players}\n          title=\"Pronto!\"\n          instruction=\"Vamos aguardar o jogo iniciar a próxima fase.\"\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nRivalPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default RivalPhase;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { GAME_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport Title from '../../shared/Title';\nimport Dial from './Dial';\nimport Instruction from '../../shared/Instruction';\nimport { AdminOnlyButton } from '../../shared/AdminOnly';\nimport { useTimer } from 'react-timer-hook';\nimport { inNSeconds } from '../../../utils';\nimport { message } from 'antd';\n\nfunction getResultInstructionLine(pointsBreakdown, team, catchup = false) {\n  const { got, now } = pointsBreakdown;\n\n  if (got === 0) {\n    return `O time ${team} não conseguiu nenhum ponto dessa vez e continua com ${now} pontos.\n      `;\n  }\n\n  if (got === 3) {\n    return `Quase na mosca! O time ${team} ganhou 3 pontos!`;\n  }\n\n  if (got === 4 && catchup) {\n    return `\n        Wow! O time ${team} ganhou ${got} pontos nessa rodada e agora tem ${now} pontos, mas como eles estão indo\n        muito mal vão ter rodada dupla!\n      `;\n  }\n\n  if (got === 4) {\n    return `Na mosca!!! 4 pontos para o time ${team}`;\n  }\n\n  return `\n      O time ${team} ganhou ${got} pontos nessa rodada e agora tá com ${now} pontos.\n    `;\n}\n\nfunction getRivalResultInstructionLine(pointsBreakdown, team) {\n  const { got } = pointsBreakdown;\n\n  if (got === 0) {\n    return `\n        O contra-ataque falhou para o time ${team}.\n      `;\n  }\n\n  return `\n      O time ${team} conseguiu contra atacar e ganhou ${got} ponto!\n    `;\n}\n\nconst getMessageType = (value) => {\n  switch (value) {\n    case 4:\n    case 3:\n      return 'success';\n    case 2:\n      return 'info';\n    default:\n      return 'error';\n  }\n};\n\nfunction RevealPhase({ state, players, info }) {\n  const onGoToNextRound = useAPICall({\n    apiFunction: GAME_API.goToNextPhase,\n    actionName: 'next-phase',\n    successMessage: 'Próxima fase ativada com success',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar ir pra próxima fase',\n  });\n\n  const showMessage = () => {\n    const activeTeamMessageType = getMessageType(state.pointsBreakdown[state.activeTeam].got);\n\n    message[activeTeamMessageType](\n      getResultInstructionLine(\n        state.pointsBreakdown[state.activeTeam],\n        state.activeTeam,\n        state.shouldCatchup\n      ),\n      5\n    );\n    message.info(getRivalResultInstructionLine(state.pointsBreakdown[rivalTeam], rivalTeam), 6);\n  };\n\n  const { seconds } = useTimer({\n    expiryTimestamp: inNSeconds(7),\n    onExpire: showMessage,\n    autoStart: true,\n  });\n\n  const rivalTeam = state.activeTeam === 'A' ? 'B' : 'A';\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ONDA_TELEPATICA.REVEAL}\n      className=\"o-guess-phase\"\n    >\n      <Title>E o resultado é...</Title>\n      <Dial\n        card={state.card}\n        showNeedle={seconds < 6}\n        needle={state.card.needle}\n        showTarget={seconds < 4}\n        target={state.card.target}\n        showPoints={seconds < 1}\n        points={state?.pointsBreakdown?.[state?.activeTeam].got}\n        rivalGuess={state.card.rival}\n        rivalTeam={rivalTeam}\n        animate\n      />\n      <Instruction contained>\n        Distribuição de pontos:\n        <ul>\n          <li>Na mosca: 4 pontos</li>\n          <li>Quase: 3 pontos</li>\n          <li>Dois de distância: 2 pontos</li>\n          <li>Mais de dois distância: 0 ponto</li>\n          <li>Time adversário acertou a direção: 1 ponto</li>\n        </ul>\n      </Instruction>\n\n      <AdminOnlyButton action={() => onGoToNextRound({})} label=\"Ir para próxima rodada ou game over\" />\n    </PhaseContainer>\n  );\n}\n\nRevealPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default RevealPhase;\n","import React, { Fragment, useEffect, useState } from 'react';\n// Hooks\nimport { useGameState, useGlobalState } from '../../../hooks';\nimport { GAME_COLLECTION, PHASES } from '../../../utils/constants';\n// Hooks\nimport { useGamePlayers } from '../../../hooks/useGamePlayers';\n// Utils\nimport gameList from '../../../resources/games.json';\n// Components\nimport Lobby from '../../lobby/Lobby';\nimport Rules from '../../rules/Rules';\nimport PageError from '../../errors/PageError';\nimport GameOver from '../../shared/GameOver';\nimport GameInfoDrawer from '../../shared/GameInfoDrawer';\nimport DialSidesPhase from './DialSidesPhase';\nimport DialCluePhase from './DialCluePhase';\nimport GuessPhase from './GuessPhase';\nimport RivalPhase from './RivalPhase';\nimport RevealPhase from './RevealPhase';\n\nfunction getActiveComponent(phase) {\n  switch (phase) {\n    case PHASES.ONDA_TELEPATICA.LOBBY:\n      return Lobby;\n    case PHASES.ONDA_TELEPATICA.RULES:\n      return Rules;\n    case PHASES.ONDA_TELEPATICA.DIAL_SIDES:\n      return DialSidesPhase;\n    case PHASES.ONDA_TELEPATICA.DIAL_CLUE:\n      return DialCluePhase;\n    case PHASES.ONDA_TELEPATICA.GUESS:\n      return GuessPhase;\n    case PHASES.ONDA_TELEPATICA.RIVAL_GUESS:\n      return RivalPhase;\n    case PHASES.ONDA_TELEPATICA.REVEAL:\n      return RevealPhase;\n    case PHASES.ONDA_TELEPATICA.GAME_OVER:\n      return GameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionOndaTelepatica({ gameId }) {\n  const players = useGamePlayers(gameId, GAME_COLLECTION.ONDA_TELEPATICA);\n  const state = useGameState(gameId, GAME_COLLECTION.ONDA_TELEPATICA);\n  const [me] = useGlobalState('me');\n  const [info, setInfo] = useState({});\n\n  // Update game description as the gameId comes in\n  useEffect(() => {\n    setInfo(gameId?.[0] ? gameList[gameId[0]] : {});\n  }, [gameId]);\n\n  if (process.env.NODE_ENV === 'development') {\n    console.table(players);\n    console.log({ state });\n  }\n\n  if (!me) {\n    return <Lobby players={players} state={state} info={info} />;\n  }\n\n  const ActiveComponent = getActiveComponent(state.phase);\n\n  return (\n    <Fragment>\n      <GameInfoDrawer players={players} state={state} info={info} me={me} />\n      <ActiveComponent players={players} state={state} info={info} />\n    </Fragment>\n  );\n}\n\nexport default SessionOndaTelepatica;\n","import React, { useState } from 'react';\n// Design Resources\nimport { CheckCircleFilled, CloudUploadOutlined } from '@ant-design/icons';\n// Components\nimport Title from '../../shared/Title';\nimport Instruction from '../../shared/Instruction';\nimport TimedButton from '../../shared/TimedButton';\n\nfunction WordSelectionStep({ words = [], onSendSelectedWords, guesser }) {\n  const [selectedWords, setSelectedWords] = useState({});\n\n  const selectedWordsArray = Object.keys(selectedWords);\n  const noSelection = selectedWordsArray.length === 0;\n\n  const autoSelectRandomWord = () => {\n    const randomSelection = words[0].id;\n    onSendSelectedWords({ votes: [randomSelection] });\n  };\n\n  const onSelectWord = (wordId) => {\n    setSelectedWords((s) => {\n      const newState = { ...s };\n      if (newState[wordId]) {\n        delete newState[wordId];\n      } else {\n        newState[wordId] = true;\n      }\n      return newState;\n    });\n  };\n\n  return (\n    <div className=\"u-word-selection-step\">\n      <Title white>Selecione a Palavra-Secreta para {guesser.name}</Title>\n\n      <Instruction white>\n        A palavra secreta com mais votos será escolhida para essa rodada. Você pode selecionar quantas quiser!\n      </Instruction>\n\n      <ul className=\"u-word-card\">\n        {words.map((word) => {\n          return (\n            <li className=\"u-word-card__word\" key={word.id}>\n              <button className=\"u-word-card__button\" onClick={() => onSelectWord(word.id)}>\n                <span className=\"u-word-card__text\">{word.text}</span>\n                <span className=\"u-word-card__icon\">{selectedWords[word.id] && <CheckCircleFilled />}</span>\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n\n      <TimedButton\n        label=\"Enviar votos\"\n        icon={<CloudUploadOutlined />}\n        type=\"primary\"\n        onClick={() => onSendSelectedWords({ votes: selectedWordsArray })}\n        disabled={noSelection}\n        onExpire={autoSelectRandomWord}\n        duration={10}\n        showTimer={noSelection}\n      />\n    </div>\n  );\n}\n\nexport default WordSelectionStep;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { message, Progress } from 'antd';\n// Hooks\nimport { useAmIReady, useAmIActive, useActivePlayer, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { UE_SO_ISSO_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport Avatar from '../../avatars/Avatar';\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport RoundAnnouncement from '../../shared/RoundAnnouncement';\nimport Instruction from '../../shared/Instruction';\nimport WaitingRoom from '../../shared/WaitingRoom';\nimport StepSwitcher from '../../shared/StepSwitcher';\nimport WordSelectionStep from './WordSelectionStep';\n\nfunction WordSelectionPhase({ state, players, info }) {\n  const amIReady = useAmIReady(players, state);\n  const guesser = useActivePlayer(state, players, 'guesser');\n  const amITheGuesser = useAmIActive(state, 'guesser');\n  const [step, setStep] = useState(0);\n\n  useEffect(() => {\n    if (step === 0 && state.previousSecretWord?.text) {\n      message.info(`A palavra secreta anterior era: ${state.previousSecretWord.text}`, 5);\n    }\n  }, [step, state?.previousSecretWord.text]);\n\n  const onSendSelectedWords = useAPICall({\n    apiFunction: UE_SO_ISSO_API.submitWordSelectionVotes,\n    actionName: 'submit-votes',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: 'Acabou o tempo! Aguarde enquanto os outros participantes votam',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar seus votos',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.UE_SO_ISSO.WORD_SELECTION}\n      className=\"u-word-selection-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!amIReady]}>\n        {/* Step 0 */}\n        <RoundAnnouncement round={state.round} onPressButton={() => setStep(1)} time={7}>\n          <Instruction contained>\n            Para essa rodada,\n            <span className=\"u-word-selection-phase__guesser-name-announcement\">\n              {amITheGuesser ? (\n                'VOCÊ'\n              ) : (\n                <>\n                  <Avatar id={guesser.avatarId} /> {guesser.name}\n                </>\n              )}\n            </span>\n            será o(a) adivinhador(a) <br />\n            {state?.nextGuesser ? `Próximo adivinhador(a): ${state.nextGuesser}` : 'Essa é a última rodada'}\n          </Instruction>\n          <div className=\"u-word-selection-phase__team-points\">\n            Pontos do Grupo:\n            <br />\n            <Progress\n              percent={state.groupScore ?? 0}\n              status=\"active\"\n              strokeColor={{\n                '0%': '#ff0000',\n                '70%': '#ff0000',\n                '100%': '#87d068',\n              }}\n            />\n          </div>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <Fragment>\n          {amITheGuesser ? (\n            <WaitingRoom\n              players={players}\n              title=\"Você é o(a) adivinhador(a)\"\n              instruction=\"Aguarde os outros jogadores decidirem a palavra secreta.\"\n            />\n          ) : (\n            <WordSelectionStep\n              words={state?.words}\n              onSendSelectedWords={onSendSelectedWords}\n              guesser={guesser}\n            />\n          )}\n        </Fragment>\n\n        {/* Step 2 */}\n        <WaitingRoom players={players} title=\"Pronto!\" instruction=\"Vamos aguardar os outros joadores.\" />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nWordSelectionPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default WordSelectionPhase;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { WarningOutlined } from '@ant-design/icons';\n// Components\nimport Card from './Card';\n\nfunction UeSoIssoCard({ word, header = 'Palavra Secreta' }) {\n  return (\n    <Card color=\"purple\" header={header} size=\"large\">\n      {word ?? <WarningOutlined />}\n    </Card>\n  );\n}\n\nUeSoIssoCard.propTypes = {\n  word: PropTypes.any.isRequired,\n  title: PropTypes.string,\n};\n\nexport default memo(UeSoIssoCard);\n","import React, { useState } from 'react';\n// Design Resources\nimport { Button, Input, Space } from 'antd';\nimport { CloudUploadOutlined } from '@ant-design/icons';\n// Components\nimport Title from '../../shared/Title';\nimport Instruction from '../../shared/Instruction';\nimport Card from '../../cards/UeSoIssoCard';\n\nfunction SuggestionStep({ onSendSuggestions, secretWord, suggestionsNumber = 1, guesser }) {\n  const [suggestions, setSuggestions] = useState([]);\n\n  const onChangeInput = (e) => {\n    const { id, value } = e.target;\n    if (id && value?.length > 1) {\n      const indexStr = id.split('-')[1];\n      const index = Number(indexStr) - 1;\n      setSuggestions((s) => {\n        const newState = { ...s };\n        newState[index] = value.toUpperCase().trim();\n        return newState;\n      });\n    }\n  };\n\n  const suggestionsValues = Object.values(suggestions);\n\n  return (\n    <div className=\"u-word-suggestion-step\">\n      <Title>Escreva uma dica para {guesser.name}</Title>\n\n      <Instruction contained>\n        A dica tem que ser uma palavra única que ajude o adivinhador... adivinhar.\n        <br />\n        É proibido usar derivados, partes da palavra ou traduções em outras linguas.\n        <br />\n        E não seja tão óbvio, já que dicas similares são eliminadas.\n        <br />\n      </Instruction>\n\n      <Card word={secretWord.text} header=\"Palavra Secreta\" />\n\n      {suggestionsNumber > 1 && (\n        <Instruction contained>\n          Já que esse jogo tem menos jogadores, você tem que escrever {suggestionsNumber} sugestões\n        </Instruction>\n      )}\n\n      <Space className=\"u-word-suggestion-step__inputs\">\n        {Array(suggestionsNumber)\n          .fill(1)\n          .map((entry, index) => {\n            const id = `suggestion-${entry + index}`;\n            return (\n              <Input\n                placeholder=\"Escreva dica\"\n                key={id}\n                id={id}\n                onChange={onChangeInput}\n                className=\"u-word-suggestion-step__input\"\n              />\n            );\n          })}\n      </Space>\n\n      <Space className=\"u-word-suggestion-step__submit\">\n        <Button\n          icon={<CloudUploadOutlined />}\n          type=\"primary\"\n          onClick={() => onSendSuggestions(suggestionsValues)}\n          disabled={suggestionsValues.length < suggestionsNumber}\n        >\n          {suggestionsNumber > 1 ? 'Enviar sugestões' : 'Enviar sugestão'}\n        </Button>\n      </Space>\n    </div>\n  );\n}\n\nexport default SuggestionStep;\n","import React, { Fragment, useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { message, notification } from 'antd';\n// Hooks\nimport { useGlobalState, useLoading, useAmIReady, useActivePlayer, useAmIActive } from '../../../hooks';\n// Resources & Utils\nimport { UE_SO_ISSO_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport WaitingRoom from '../../shared/WaitingRoom';\nimport StepSwitcher from '../../shared/StepSwitcher';\nimport SuggestionStep from './SuggestionStep';\n\nfunction SuggestPhase({ state, players, info }) {\n  const [, setLoader] = useLoading();\n  const amIReady = useAmIReady(players, state);\n  const [gameId] = useGlobalState('gameId');\n  const [gameName] = useGlobalState('gameName');\n  const [me] = useGlobalState('me');\n  const [step, setStep] = useState(0);\n  const guesser = useActivePlayer(state, players, 'guesser');\n  const amITheGuesser = useAmIActive(state, 'guesser');\n\n  const onSendSuggestions = useCallback(\n    async (suggestions) => {\n      try {\n        setLoader('submit-suggestion', true);\n        setStep(1);\n        const response = await UE_SO_ISSO_API.submitSuggestions({\n          gameId,\n          gameName,\n          playerName: me,\n          suggestions,\n        });\n\n        if (response.data) {\n          message.success(\n            'Sugestão enviada com successo! Aguarde enquanto os outros participantes escrevem suas dicas'\n          );\n        }\n      } catch (e) {\n        notification.error({\n          message: 'Vixi, o aplicativo encontrou um erro ao tentar enviar sua(s) dica(s)',\n          description: JSON.stringify(e.message),\n          placement: 'bottomLeft',\n        });\n        console.error(e);\n        setStep(0);\n      } finally {\n        setLoader('submit-suggestion', false);\n      }\n    },\n    [gameId, gameName, me, setLoader]\n  );\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.UE_SO_ISSO.SUGGEST}\n      className=\"word-selection-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!amIReady]}>\n        {/* Step 0 */}\n        <Fragment>\n          {amITheGuesser ? (\n            <WaitingRoom\n              players={players}\n              title=\"Você é o(a) adivinhador(a)\"\n              instruction=\"Aguarde os outros jogadores decidirem a palavra secreta.\"\n            />\n          ) : (\n            <SuggestionStep\n              guesser={guesser}\n              onSendSuggestions={onSendSuggestions}\n              secretWord={state.secretWord}\n              suggestionsNumber={state.suggestionsNumber}\n            />\n          )}\n        </Fragment>\n\n        {/* Step 1 */}\n        <WaitingRoom players={players} title=\"Pronto!\" instruction=\"Vamos aguardar os outros joadores.\" />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nSuggestPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default SuggestPhase;\n","import React, { memo } from 'react';\n// Design Resources\nimport { Avatar as AntAvatar } from 'antd';\nimport { CloseOutlined } from '@ant-design/icons';\n// Components\nimport BasicCard from '../../cards/Card';\nimport clsx from 'clsx';\nimport Avatar from '../../avatars/Avatar';\nimport { getColorFromIndex } from '../../../utils';\nimport { LETTERS } from '../../../utils/constants';\n\nfunction SuggestionCard({ suggestion, invalid, avatarId, index }) {\n  return (\n    <BasicCard\n      size=\"medium\"\n      color={getColorFromIndex(index)}\n      className={clsx(invalid && 'u-suggestion-card__invalid')}\n      header={LETTERS[index]}\n    >\n      {invalid ? (\n        <AntAvatar size=\"small\" className=\"u-suggestion-card__suggestion-avatar\">\n          <CloseOutlined />\n        </AntAvatar>\n      ) : (\n        <Avatar id={avatarId} size=\"small\" className=\"u-suggestion-card__suggestion-avatar\" />\n      )}\n      {suggestion}\n    </BasicCard>\n  );\n}\n\nexport default memo(SuggestionCard);\n","import React, { useState } from 'react';\n// Design Resources\nimport { Button, Space } from 'antd';\nimport { CloudUploadOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\n// State\nimport { useGlobalState, useLoading } from '../../../hooks';\n// Components\nimport Title from '../../shared/Title';\nimport Instruction from '../../shared/Instruction';\nimport { AdminOnlyButton } from '../../shared/AdminOnly';\nimport Card from '../../cards/UeSoIssoCard';\nimport SuggestionCard from './SuggestionCard';\n\nfunction CompareSuggestionsStep({\n  nextGuesser,\n  me,\n  secretWord,\n  suggestions,\n  onValidateSuggestions,\n  players,\n}) {\n  const [isLoading] = useLoading();\n  const [myRecommendation, setMyRecommendation] = useState(suggestions);\n  const [isAdmin] = useGlobalState('isAdmin');\n\n  const onSetValidation = (index, suggestionEntry, notAllowed) => {\n    if (notAllowed) return;\n\n    setMyRecommendation((arr) => {\n      const newArr = [...arr];\n      if (newArr[index]) {\n        newArr[index].invalid = !newArr[index].invalid;\n      } else {\n        newArr[index] = {\n          ...suggestionEntry,\n          invalid: true,\n        };\n      }\n      return newArr;\n    });\n  };\n\n  const suggestionsValues = Object.values(myRecommendation);\n  const amITheNextGuesser = nextGuesser === me;\n\n  return (\n    <div className=\"u-word-compare-suggestions-step\">\n      <Title white>Comparem as sugestões</Title>\n      <Card word={secretWord.text} header=\"Palavra Secreta\" />\n      <Instruction contained>\n        Já eliminamos todas as palavras iguais, agora, elimine palavras inválidas ou similares.\n        <br />\n        Lembre-se que são consideradas dicas iguais palavras derividadas, conjugações: piloto = pilotar =\n        pilotando. Variações como pluralidade, gênero e erros ortográficos também devem ser\n        eliminadas: príncipe = princesa = principes = pryncip.\n        <br />\n        <ExclamationCircleOutlined /> Para não virar bagunça, somente{' '}\n        <strong>\n          <u>{nextGuesser}</u>\n        </strong>{' '}\n        pode clicar nas palavras para eliminá-las ou ativá-las, mas todos podem discutir. <br /> Refiram às\n        palavras por número, o Adivinhador pode estar ouvindo!\n      </Instruction>\n\n      <Space className=\"u-word-compare-suggestions-step__suggestions\">\n        {suggestions.map((suggestionEntry, index) => {\n          if (!amITheNextGuesser && !isAdmin) {\n            return (\n              <div key={`${suggestionEntry.suggestion}-${index}`}>\n                <SuggestionCard\n                  suggestion={suggestionEntry.suggestion}\n                  invalid={suggestionEntry.invalid}\n                  avatarId={players[suggestionEntry.playerName].avatarId}\n                  index={index}\n                />\n              </div>\n            );\n          }\n\n          return (\n            <button\n              key={`${suggestionEntry.suggestion}-${index}`}\n              className=\"u-word-compare-suggestions-step__suggestion-button\"\n              onClick={() => onSetValidation(index, suggestionEntry, suggestionEntry.invalid)}\n            >\n              <SuggestionCard\n                suggestion={suggestionEntry.suggestion}\n                invalid={myRecommendation?.[index]?.invalid ?? suggestionEntry.invalid}\n                avatarId={players[suggestionEntry.playerName].avatarId}\n                index={index}\n              />\n            </button>\n          );\n        })}\n      </Space>\n\n      {amITheNextGuesser && (\n        <Space className=\"u-word-compare-suggestions-step__submit\">\n          <Button\n            icon={<CloudUploadOutlined />}\n            type=\"primary\"\n            onClick={() =>\n              onValidateSuggestions({\n                validSuggestions: suggestionsValues.filter((suggestion) => !suggestion.invalid),\n              })\n            }\n            disabled={isLoading}\n          >\n            Confirmar dicas válidas\n          </Button>\n        </Space>\n      )}\n\n      <AdminOnlyButton\n        action={() =>\n          onValidateSuggestions({\n            validSuggestions: suggestionsValues.filter((suggestion) => !suggestion.invalid),\n          })\n        }\n        label=\"Confirmar dicas válidas como Admin\"\n      />\n    </div>\n  );\n}\n\nexport default CompareSuggestionsStep;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useGlobalState, useAmIActive, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { UE_SO_ISSO_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport WaitingRoom from '../../shared/WaitingRoom';\nimport StepSwitcher from '../../shared/StepSwitcher';\nimport CompareSuggestionsStep from './CompareSuggestionsStep';\n\nfunction ComparePhase({ state, players, info }) {\n  const [me] = useGlobalState('me');\n  const [step, setStep] = useState(0);\n  const amITheGuesser = useAmIActive(state, 'guesser');\n\n  const onValidateSuggestions = useAPICall({\n    apiFunction: UE_SO_ISSO_API.submitValidation,\n    actionName: 'validate-suggestions',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage: 'Validação enviada com sucesso!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar a confirmação das sugestões',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.UE_SO_ISSO.COMPARE}\n      className=\"u-compare-phase\"\n    >\n      <StepSwitcher step={step}>\n        {/* Step 0 */}\n        <div className=\"u-compare-phase__step\">\n          {amITheGuesser ? (\n            <WaitingRoom\n              players={players}\n              title=\"Você é o(a) adivinhador(a)\"\n              instruction=\"Aguarde os outros jogadores selecionarem as dicas válidas.\"\n            />\n          ) : (\n            <CompareSuggestionsStep\n              nextGuesser={state.nextGuesser}\n              secretWord={state.secretWord}\n              suggestions={state.suggestions}\n              me={me}\n              players={players}\n              onValidateSuggestions={onValidateSuggestions}\n            />\n          )}\n        </div>\n\n        {/* Step 1 */}\n        <WaitingRoom players={players} title=\"Enviando a confirmação de sugestões\" instruction=\"Aguarde...\" />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nComparePhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default ComparePhase;\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Input, Space } from 'antd';\n// Hooks\nimport { useLoading, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { UE_SO_ISSO_API } from '../../../adapters';\nimport { MinusOutlined } from '@ant-design/icons';\n\nfunction Guess({ onSubmitGuess }) {\n  const [isLoading] = useLoading();\n  const [guess, setGuess] = useState('');\n\n  const onSendGuess = useAPICall({\n    apiFunction: UE_SO_ISSO_API.sendGuess,\n    actionName: 'guess',\n    successMessage: 'Resultado enviado com sucesso!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar o resultado',\n  });\n\n  return (\n    <Fragment>\n      <Space className=\"u-word-guess-phase__suggestions\">\n        <Input placeholder=\"Digite aqui seu chute\" onChange={(e) => setGuess(e.target.value)} />\n        <Button\n          type=\"primary\"\n          onClick={() => onSendGuess({ guess })}\n          disabled={guess.length < 3 || isLoading}\n        >\n          Enviar\n        </Button>\n      </Space>\n      <Space className=\"u-word-guess-phase__suggestions\">\n        <Button\n          icon={<MinusOutlined />}\n          type=\"default\"\n          onClick={() => onSubmitGuess({ guess: 'PASS' })}\n          disabled={isLoading}\n        >\n          Passar a vez...\n        </Button>\n      </Space>\n    </Fragment>\n  );\n}\n\nGuess.propTypes = {\n  onSubmitGuess: PropTypes.func.isRequired,\n};\n\nexport default Guess;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Space } from 'antd';\nimport { CheckOutlined, CloseOutlined, QuestionCircleOutlined } from '@ant-design/icons';\n// Hooks\nimport { useGlobalState, useLoading, useActivePlayer, useAmIActive, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { UE_SO_ISSO_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport WaitingRoom from '../../shared/WaitingRoom';\nimport StepSwitcher from '../../shared/StepSwitcher';\nimport Title from '../../shared/Title';\nimport Avatar from '../../avatars/Avatar';\nimport Instruction from '../../shared/Instruction';\nimport UeSoIssoCard from '../../cards/UeSoIssoCard';\nimport SuggestionCard from './SuggestionCard';\nimport clsx from 'clsx';\nimport Guess from './Guess';\n\nfunction GuessPhase({ state, players, info }) {\n  const [isLoading] = useLoading();\n  const [isAdmin] = useGlobalState('isAdmin');\n  const [step, setStep] = useState(0);\n  const guesser = useActivePlayer(state, players, 'guesser');\n  const amITheNextGuesser = useAmIActive(state, 'nextGuesser');\n  const amITheGuesser = useAmIActive(state, 'guesser');\n\n  const onSubmitGuess = useAPICall({\n    apiFunction: UE_SO_ISSO_API.confirmGuess,\n    actionName: 'guess',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage: 'Resultado enviado com sucesso!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar o resultado',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.UE_SO_ISSO.GUESS}\n      className=\"u-word-guess-phase\"\n    >\n      <StepSwitcher step={step}>\n        {/* Step 0 */}\n        <div className=\"u-word-guess-phase__step\">\n          <Title>\n            {state.guess ? (\n              <span>\n                <Avatar id={guesser.avatarId} /> {guesser.name} disse \"{state.guess}\"\n              </span>\n            ) : (\n              <span>\n                Hora de brilhar <Avatar id={guesser.avatarId} /> {guesser.name}!\n              </span>\n            )}\n          </Title>\n          <Instruction contained>\n            {amITheGuesser ? 'Você' : guesser.name} tem uma única change de adivinhar a palavra secreta!\n          </Instruction>\n          <UeSoIssoCard\n            word={amITheGuesser ? <QuestionCircleOutlined /> : state.secretWord.text}\n            header=\"A Palavra Secreta é\"\n          />\n\n          {state.guess ? (\n            <Instruction contained>\n              {state.nextGuesser} está encarregado(a) de apertar os botões se você acertou ou não. <br />\n              São 3 pontos se você acertar, -1 se errar, mas você pode passar e não tentar, covarde!.. <br />\n              As dicas são:\n            </Instruction>\n          ) : (\n            <Instruction contained>\n              {amITheGuesser ? (\n                <span>Escreva seu chute no campo abaixo</span>\n              ) : (\n                <span>{guesser.name} está pensando...</span>\n              )}\n            </Instruction>\n          )}\n\n          <Space className=\"u-word-guess-phase__suggestions\">\n            {state.validSuggestions.map((suggestionEntry, index) => {\n              return (\n                <div key={`${suggestionEntry.suggestion}-${index}`}>\n                  <SuggestionCard\n                    suggestion={suggestionEntry.suggestion}\n                    invalid={false}\n                    avatarId={players[suggestionEntry.playerName].avatarId}\n                    index={index}\n                  />\n                </div>\n              );\n            })}\n          </Space>\n\n          {amITheGuesser && !state.guess && <Guess onSubmitGuess={onSubmitGuess} />}\n\n          {state.guess && (amITheNextGuesser || isAdmin) && (\n            <Space className={clsx('u-word-guess-phase__guess-submit', isAdmin && 'admin-container')}>\n              <Button\n                icon={<CheckOutlined />}\n                type=\"primary\"\n                style={{ backgroundColor: 'green' }}\n                onClick={() => onSubmitGuess({ guess: 'CORRECT' })}\n                disabled={isLoading}\n              >\n                Acertou\n              </Button>\n              <Button\n                icon={<CloseOutlined />}\n                type=\"primary\"\n                danger\n                onClick={() => onSubmitGuess({ guess: 'WRONG' })}\n                disabled={isLoading}\n              >\n                Errou\n              </Button>\n            </Space>\n          )}\n        </div>\n\n        {/* Step 1 */}\n        <WaitingRoom players={players} title=\"Enviando a confirmação de sugestões\" instruction=\"Aguarde...\" />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nGuessPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default GuessPhase;\n","import React, { Fragment, useEffect, useState } from 'react';\n// Hooks\nimport { useGameState, useGlobalState } from '../../../hooks';\nimport { GAME_COLLECTION, PHASES } from '../../../utils/constants';\n// Hooks\nimport { useGamePlayers } from '../../../hooks/useGamePlayers';\n// Utils\nimport gameList from '../../../resources/games.json';\n// Components\nimport Lobby from '../../lobby/Lobby';\nimport Rules from '../../rules/Rules';\nimport PageError from '../../errors/PageError';\nimport WordSelectionPhase from './WordSelectionPhase';\nimport SuggestPhase from './SuggestPhase';\nimport ComparePhase from './ComparePhase';\nimport GuessPhase from './GuessPhase';\nimport GameOver from '../../shared/GameOver';\nimport GameInfoDrawer from '../../shared/GameInfoDrawer';\n\nfunction getActiveComponent(phase) {\n  switch (phase) {\n    case PHASES.UE_SO_ISSO.LOBBY:\n      return Lobby;\n    case PHASES.UE_SO_ISSO.RULES:\n      return Rules;\n    case PHASES.UE_SO_ISSO.WORD_SELECTION:\n      return WordSelectionPhase;\n    case PHASES.UE_SO_ISSO.SUGGEST:\n      return SuggestPhase;\n    case PHASES.UE_SO_ISSO.COMPARE:\n      return ComparePhase;\n    case PHASES.UE_SO_ISSO.GUESS:\n      return GuessPhase;\n    case PHASES.UE_SO_ISSO.GAME_OVER:\n      return GameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionUeSoIsso({ gameId }) {\n  const players = useGamePlayers(gameId, GAME_COLLECTION.UE_SO_ISSO);\n  const state = useGameState(gameId, GAME_COLLECTION.UE_SO_ISSO);\n  const [me] = useGlobalState('me');\n  const [info, setInfo] = useState({});\n\n  // Update game description as the gameId comes in\n  useEffect(() => {\n    setInfo(gameId?.[0] ? gameList[gameId[0]] : {});\n  }, [gameId]);\n\n  if (process.env.NODE_ENV === 'development') {\n    console.table(players);\n    console.log({ state });\n  }\n\n  if (!me) {\n    return <Lobby players={players} state={state} info={info} />;\n  }\n\n  const ActiveComponent = getActiveComponent(state.phase);\n\n  return (\n    <Fragment>\n      <GameInfoDrawer players={players} state={state} info={info} me={me} />\n      <ActiveComponent players={players} state={state} info={info} />\n    </Fragment>\n  );\n}\n\nexport default SessionUeSoIsso;\n","import ArteRuim from './arte-ruim/SessionArteRuim';\nimport EspiaoEntreNos from './espiao-entre-nos/SessionEspiaoEntreNos';\nimport OndaTelepatica from './onda-telepatica/SessionOndaTelepatica';\nimport UeSoIsso from './ue-so-isso/SessionUeSoIsso';\n\nconst games = {\n  ArteRuim,\n  EspiaoEntreNos,\n  OndaTelepatica,\n  UeSoIsso,\n};\n\nexport default games;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n// Design Resources\nimport { message, notification } from 'antd';\n// Adapters\nimport { GAME_API } from '../adapters';\n// Hooks\nimport { useIsGameStale, useLoading, useGlobalState } from '../hooks';\n// Utils\nimport { getGameIdFromURL, getGameIdFromLocation, isValidGameId } from '../utils';\nimport { GAME_COLLECTION } from '../utils/constants';\n// Components\nimport LoadingPage from './loaders/LoadingPage';\nimport PageError from './errors/PageError';\nimport GameSessions from './games';\n\nfunction Game() {\n  const history = useHistory();\n  const [, setLoader] = useLoading();\n  const [gameId, setGameId] = useGlobalState('gameId');\n  const [gameName, setGameName] = useGlobalState('gameName');\n  const [gameMeta, setGameMeta] = useGlobalState('gameMeta');\n  const [, setMe] = useGlobalState('me');\n  const [, setMyAvatar] = useGlobalState('myAvatar');\n\n  const [isPageLoading, setPageLoading] = useState(true);\n  const isGameStale = useIsGameStale(gameMeta?.createdAt);\n\n  // Verify url game code\n  useEffect(() => {\n    const urlGameId = getGameIdFromURL(history);\n    if (isValidGameId(urlGameId)) {\n      setGameId(urlGameId);\n    } else {\n      message.error('Vixi, a id do jogo na barra de endereços tá errada');\n      history.push('/');\n    }\n  }, [history, setGameId, setMe, setMyAvatar]);\n\n  // Keeps track of url changes\n  useEffect(() => {\n    return history.listen((location) => {\n      const urlGameId = getGameIdFromLocation(location);\n      if (isValidGameId(urlGameId)) {\n        setGameId(urlGameId);\n        setMe('');\n        setMyAvatar('');\n        message.info('Uma nova id de jogo foi provida');\n      } else {\n        message.error('Vixi, a id do jogo na barra de endereços tá errada');\n        history.push('/');\n      }\n    });\n  }, [history, setGameId, setMe, setMyAvatar]);\n\n  // Load game\n  useEffect(() => {\n    setPageLoading(true);\n    async function loadGameSession() {\n      try {\n        setLoader('load', true);\n        const meta = await GAME_API.loadGame({ gameId });\n        setGameName(meta.data.gameName);\n        setGameMeta(meta.data);\n      } catch (e) {\n        console.error(e);\n        notification.error({\n          message: 'Erro ao carregar o jogo',\n          description: JSON.stringify(e.message),\n        });\n        console.error(e);\n      } finally {\n        setPageLoading(false);\n        setLoader('load', false);\n      }\n    }\n\n    if (gameId) {\n      loadGameSession();\n    }\n  }, [gameId]); // eslint-disable-line\n\n  // Deffer to load screen if any major API call is running\n  if (isPageLoading) {\n    return <LoadingPage />;\n  }\n\n  if (isGameStale) {\n    return (\n      <PageError message=\"Jogo expirado\" description=\"Esse jogo é muito antigo e não pode ser usado mais\" />\n    );\n  }\n\n  if (gameId && gameName) {\n    switch (gameName) {\n      case GAME_COLLECTION.ARTE_RUIM:\n        return <GameSessions.ArteRuim gameId={gameId} />;\n      case GAME_COLLECTION.ESPIAO_ENTRE_NOS:\n        return <GameSessions.EspiaoEntreNos gameId={gameId} />;\n      case GAME_COLLECTION.ONDA_TELEPATICA:\n        return <GameSessions.OndaTelepatica gameId={gameId} />;\n      case GAME_COLLECTION.UE_SO_ISSO:\n        return <GameSessions.UeSoIsso gameId={gameId} />;\n      default:\n        console.warn('Wrong game library provided');\n    }\n  }\n\n  // If switch fails, it's an error\n  return <PageError />;\n}\n\nexport default Game;\n","import { useEffect, useState } from 'react';\n\nexport function useIsGameStale(gameCreatedAt) {\n  const [isGameStale, setGameStale] = useState(false);\n\n  useEffect(() => {\n    setGameStale(Date.now() - 24 * 60 * 60 * 1000 > gameCreatedAt);\n  }, [gameCreatedAt, setGameStale]);\n\n  return isGameStale;\n}\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\n// import { Image, Layout } from 'antd';\nimport gameList from '../resources/games.json';\nimport Avatar from './avatars/Avatar';\nimport AvatarEntry from './avatars/AvatarEntry';\nimport GameOver from './shared/GameOver';\nimport Instruction from './shared/Instruction';\nimport PhaseContainer from './shared/PhaseContainer';\nimport RoundAnnouncement from './shared/RoundAnnouncement';\n// Resources\nimport { CheckCircleFilled, CheckCircleOutlined } from '@ant-design/icons';\nimport { Button, Input } from 'antd';\nimport Title from './shared/Title';\nimport { LETTERS } from '../utils/constants';\nimport Card from './cards/Card';\nimport { getColorFromLetter } from '../utils';\n\nfunction TestingZone() {\n  const info = gameList['U'];\n\n  const players = {\n    Flaviane: {\n      avatarId: 10,\n      name: 'Flaviane',\n      ready: false,\n      score: 0,\n      updatedAt: Date.now(),\n    },\n    Kavis: {\n      avatarId: 11,\n      name: 'Kavis',\n      ready: false,\n      score: 0,\n      updatedAt: Date.now(),\n    },\n    Stephanie: {\n      avatarId: 12,\n      name: 'Stephanie',\n      ready: false,\n      score: 0,\n      updatedAt: Date.now(),\n    },\n  };\n\n  // Mock State\n  const state = {\n    phase: 'WORD_SELECTION',\n    guesser: 'Kavis',\n    playerOrder: ['Flaviane', 'Stephanie', 'Kavis', 'Flaviane', 'Stephanie', 'Kavis'],\n    round: 3,\n    words: [1, 2, 3, 4, 5],\n    // phase: 'GAME_OVER',\n    // winner: {\n    //   name: 'Flaviane',\n    //   avatarId: 15,\n    //   score: 35,\n    // },\n  };\n\n  console.log('==========');\n  console.log({ info });\n  console.table(players);\n  console.log({ state });\n  console.log('==========');\n\n  const guesser = players[state.guesser];\n  console.log(guesser);\n\n  // return <GameOver info={info} state={state} players={players} />;\n  return (\n    <PhaseContainer info={info} phase={state.phase} allowedPhase=\"WORD_SELECTION\" className=\"\" fullScreen>\n      <div className=\"u-word-selection\"></div>\n    </PhaseContainer>\n  );\n}\n\nexport default TestingZone;\n","import React from 'react';\n// Hooks\nimport { useLoading } from '../../hooks';\n\nfunction LoadingBar() {\n  const [isLoading] = useLoading();\n\n  return isLoading ? <div className=\"loading-bar\"></div> : <></>;\n}\n\nexport default LoadingBar;\n","import React, { useState, useEffect } from 'react';\nimport { HashRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\n\n// Design Resources\nimport { Layout, message } from 'antd';\n// Firebase\nimport { auth } from '../services/firebase';\n// State\nimport { useGlobalState } from '../hooks';\n// Pages\nimport Home from './Home';\nimport Admin from './Admin';\nimport Login from './Login';\nimport Game from './Game';\nimport TestingZone from './TestingZone';\nimport LoadingPage from './loaders/LoadingPage';\nimport LoadingBar from './loaders/LoadingBar';\n\nfunction PrivateRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authenticated === true ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        )\n      }\n    />\n  );\n}\n\nfunction PublicRoute({ component: Component, authenticated, ...rest }) {\n  const fromPath = rest?.location?.state?.from?.pathname ?? '/';\n  return (\n    <Route\n      {...rest}\n      render={(props) => (authenticated === false ? <Component {...props} /> : <Redirect to={fromPath} />)}\n    />\n  );\n}\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useGlobalState('isAuthenticated');\n  const [, setIsAdmin] = useGlobalState('isAdmin');\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoading(false);\n        setIsAuthenticated(true);\n        setIsAdmin(true);\n        message.info('Você foi logado de volta automaticamente.');\n      } else {\n        setIsLoading(false);\n        setIsAuthenticated(false);\n        setIsAdmin(false);\n      }\n    });\n  }, []); // eslint-disable-line\n\n  return (\n    <Layout className=\"app\">\n      <LoadingBar />\n      <Router>\n        {isLoading ? (\n          <LoadingPage />\n        ) : (\n          <Switch>\n            <Route exact path=\"/\" component={Home}></Route>\n            <PrivateRoute path=\"/admin\" authenticated={isAuthenticated} component={Admin} />\n            <PublicRoute path=\"/login\" authenticated={isAuthenticated} component={Login} />\n            <PrivateRoute path=\"/testing-zone\" authenticated={isAuthenticated} component={TestingZone} />\n            <Route path=\"*\" component={Game} />\n          </Switch>\n        )}\n      </Router>\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport './styles/index.css';\n\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}