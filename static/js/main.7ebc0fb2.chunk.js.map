{"version":3,"sources":["reportWebVitals.js","services/firebase.js","hooks/useActivePlayer.js","hooks/useGlobalState.js","hooks/useAmIActive.js","hooks/useAmIReady.js","hooks/useAPICall.js","hooks/useGamePlayers.js","hooks/useGameState.js","hooks/useIsMyTeamActive.js","hooks/useLoading.js","images/tarde-divertida-logo.svg","components/Home.jsx","utils/constants.js","adapters/index.js","components/loaders/Loading.jsx","components/shared/Instruction.jsx","components/shared/Title.jsx","components/modals/CreateGameModal.jsx","components/rules/RulesCarousel.jsx","components/modals/RulesModal.jsx","components/Admin.jsx","adapters/auth.js","components/Login.jsx","utils/index.js","components/loaders/LoadingPage.jsx","components/errors/PageError.jsx","components/shared/PhaseContainer.jsx","images/avatars.svg","components/avatars/Avatar.jsx","components/avatars/AvatarEntry.jsx","services/localStorage.js","components/lobby/Join.jsx","components/shared/AdminOnly.jsx","components/lobby/Waiting.jsx","components/lobby/CloudBackground.jsx","components/lobby/Lobby.jsx","components/shared/ReadyPlayersBar.jsx","components/rules/Rules.jsx","sounds/arte-ruim-timer.mp3","components/games/arte-ruim/DrawingCanvas.jsx","components/cards/Card.jsx","components/games/arte-ruim/DrawPhaseDrawStep.jsx","components/shared/WaitingRoom.jsx","images/rodada-title.svg","components/avatars/AvatarName.jsx","components/shared/TimedButton.jsx","components/shared/RoundAnnouncement.jsx","components/shared/StepSwitcher.jsx","components/shared/AdminForceNextPhase.jsx","components/games/arte-ruim/DrawPhase.jsx","components/games/arte-ruim/CanvasSVG.jsx","components/games/arte-ruim/Ribbon.jsx","components/games/arte-ruim/EvaluationAllDrawings.jsx","components/cards/ArteRuimCard.jsx","components/games/arte-ruim/EvaluationAllCards.jsx","components/games/arte-ruim/CanvasResizer.jsx","components/games/arte-ruim/EvaluationPhase.jsx","components/games/arte-ruim/GalleryWindowCredits.jsx","components/games/arte-ruim/GalleryWindowGuesses.jsx","components/games/arte-ruim/GalleryWindowControls.jsx","components/shared/StarPoints.jsx","components/games/arte-ruim/GalleryWindowResult.jsx","components/games/arte-ruim/GalleryWindow.jsx","components/shared/RankingBoard.jsx","components/games/arte-ruim/GalleryPhase.jsx","images/game-over-title.svg","components/shared/GameOver.jsx","components/games/arte-ruim/DrawingGrade.jsx","components/games/arte-ruim/GameOverPhase.jsx","components/shared/GameInfoDrawer.jsx","components/games/arte-ruim/SessionArteRuim.jsx","components/games/onda-telepatica/Card.jsx","components/games/onda-telepatica/CardSelection.jsx","components/games/onda-telepatica/DialSidesPhase.jsx","components/games/onda-telepatica/Dial.jsx","components/games/onda-telepatica/DialClueWriting.jsx","components/games/onda-telepatica/DialCluePhase.jsx","components/games/onda-telepatica/DialGuessSelection.jsx","components/games/onda-telepatica/GuessPhase.jsx","components/games/onda-telepatica/DialRivalSelection.jsx","components/games/onda-telepatica/RivalPhase.jsx","components/games/onda-telepatica/RevealPhase.jsx","components/games/onda-telepatica/SessionOndaTelepatica.jsx","components/games/ue-so-isso/WordSelectionStep.jsx","components/games/ue-so-isso/WordSelectionPhase.jsx","components/cards/UeSoIssoCard.jsx","components/games/ue-so-isso/SuggestionStep.jsx","components/games/ue-so-isso/SuggestPhase.jsx","components/games/ue-so-isso/SuggestionCard.jsx","components/games/ue-so-isso/CompareSuggestionsStep.jsx","components/games/ue-so-isso/ComparePhase.jsx","components/games/ue-so-isso/GuessPhase.jsx","components/games/ue-so-isso/SessionUeSoIsso.jsx","components/games/index.js","components/Game.jsx","hooks/useIsGameStale.js","components/TestingZone.jsx","components/loaders/LoadingBar.jsx","components/App.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","firestore","functions","window","location","hostname","includes","useEmulator","useActivePlayer","state","players","propertyName","useState","activePlayer","setActivePlayer","useEffect","initialState","isLoading","loaders","isAuthenticated","appStartedAt","Date","now","gameId","gameName","gameMeta","me","myAvatar","isAdmin","canvasSize","createGlobalState","useGlobalState","setGlobalState","getGlobalState","useAmIActive","amIActive","setAmIActive","useAmIReady","amIReady","setAmIReady","ready","updatedAt","useAPICall","apiFunction","actionName","onBeforeCall","onAfterCall","onError","successMessage","errorMessage","useLoading","setLoader","useCallback","payload","a","playerName","data","message","success","notification","error","description","JSON","stringify","placement","console","useGamePlayers","useDocument","doc","snapshotListenOptions","includeMetadataChanges","snapshot","loading","log","useGameState","useIsMyTeamActive","isMyTeamActive","setIsMyTeamActive","activeTeam","team","setLoading","setLoaders","Object","values","some","v","key","value","Home","className","src","logo","preview","alt","PUBLIC_URL","BANNERS","RULES","TAG_DICT","competitive","label","color","cooperative","traitor","timed","drawing","guessing","writing","images","discussion","AVATAR_IDS","Array","fill","map","i","index","LETTERS","AVATAR_DESCRIPTIONS_BR","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","GAME_COLLECTION","PHASES","LOBBY","DRAW","EVALUATION","GALLERY","GAME_OVER","DIAL_SIDES","DIAL_CLUE","GUESS","RIVAL_GUESS","REVEAL","WORD_SELECTION","SUGGEST","COMPARE","GAME_API","helloWorld","httpsCallable","initializeGame","loadGame","addPlayer","lockGame","playAgain","ARTE_RUIM_API","makeMeReady","submitDrawing","submitVoting","submitRating","goToNextPhase","ONDA_TELEPATICA","submitSides","submitClue","submitGuess","submitRivalGuess","UE_SO_ISSO_API","submitWordSelectionVotes","submitSuggestions","submitValidation","confirmGuess","getAPI","Error","Loading","margin","clsx","Boolean","Text","defaultProps","Instruction","children","white","contained","baseClass","memo","Title","icon","CreateGameModal","gameInfo","history","useHistory","isVisible","setVisibility","setGameId","onCloseModal","gameCode","response","createGame","type","onClick","title","visible","onCancel","onOk","push","info","fallback","RulesCarousel","ruleClass","autoplay","autoplaySpeed","rules","rule","Paragraph","RulesModal","ReadOutlined","footer","Admin","Content","size","wrap","align","gameList","game","hoverable","style","width","cover","Meta","summary","min","max","recommended","tags","tag","available","signIn","email","password","signInWithEmailAndPassword","layout","labelCol","span","wrapperCol","tailLayout","offset","Login","setIsAuthenticated","setError","setEmail","setPassword","onHandleSubmit","user","uid","showIcon","name","onValuesChange","trim","autoComplete","Item","isValidGameId","length","getRandomItem","list","Math","floor","random","inNSeconds","seconds","getColorFromLetter","letter","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","X","getColorFromIndex","LoadingPage","PageError","PhaseContainer","phase","allowedPhase","fullScreen","Avatar","id","shape","viewBox","href","avatars","AvatarEntry","animate","propTypes","PropTypes","number","string","bool","this","store","notLoaded","appName","init","load","get","localStorage","parse","getItem","entries","forEach","item","undefined","save","setItem","Join","setMe","setMyAvatar","availableAvatars","setAvailableAvatars","tempAvatar","setTempAvatar","tempMe","setTempMe","sameGameId","setSameGameId","localStorageAvatar","setLocalStorageAvatar","usedAvatars","reduce","acc","p","avatarId","newAvailableAvatars","filter","lsAvatarId","lsMe","lsGameId","onPreviousAvatar","indexOf","newIndex","onNextAvatar","onAddPlayer","playerAvatarId","set","CaretLeftOutlined","CaretRightOutlined","onChange","e","target","placeholder","maxLength","suffix","InfoCircleOutlined","disabled","AdminOnly","Waiting","onLockGameAndStart","isLocked","numPlayers","keys","danger","CloudBackground","class","Lobby","player","ReadyPlayersBar","readyPlayers","Group","LikeFilled","Rules","onBeReady","onBeReadyQue","CheckCircleFilled","SmileFilled","MehFilled","RobotFilled","DrawingCanvas","lines","setLines","isDrawing","useRef","height","onMouseDown","current","pos","getStage","getPointerPosition","x","y","onMousemove","point","lastLine","concat","splice","onMouseup","line","points","stroke","strokeWidth","tension","lineCap","globalCompositeOperation","Card","header","DrawPhaseDrawStep","secretCard","onSubmitDrawing","useTimer","expiryTimestamp","autoStart","onExpire","cardId","level","join","text","WaitingRoom","instruction","AvatarName","withDescription","uppercase","TimedButton","duration","showTimer","props","timeClass","Team","members","score","RoundAnnouncement","round","onPressButton","buttonText","time","teams","rodadaTitle","StepSwitcher","step","conditions","AdminForceNextPhase","onGoToNextPhase","FireFilled","DrawPhase","setStep","setSecretCard","useSound","arteRuimTimer","volume","play","currentCard","CanvasSVG","konvaLines","paths","lineArr","path","xmlns","overflow","d","strokeLinecap","strokeLinejoin","strokeMiterlimit","Ribbon","cardEntryId","split","EvaluationAllDrawings","drawings","activeItem","onActivateItem","votes","liButtonBaseClass","drawingEntry","canvasEntryId","isActive","ArteRuimCard","WarningOutlined","EvaluationAllCards","cards","cardEntry","isUsed","role","CanvasResizer","setCanvasSize","defaultValue","prepareVotes","drawingEntryId","drawingId","EvaluationPhase","setVotes","setActiveItem","onSubmitVoting","entryId","startsWith","prevVotes","CloudUploadOutlined","GalleryWindowCredits","artist","artistAvatarId","GalleryWindowGuesses","playersSay","playersNames","card","find","MessageFilled","GalleryWindowControls","galleryLength","activeIndex","setActiveIndex","isRunning","pause","resume","s","abs","StepBackwardOutlined","PauseOutlined","PlayCircleOutlined","StepForwardOutlined","TrophyOutlined","StarPoints","quantity","keyPrefix","starsArray","from","_","StarFilled","GalleryWindowResult","correctAnswerId","correctAnswerText","playersPoints","correctGuesses","CrownFilled","DeleteFilled","GalleryWindow","correctAnswer","correctAnswerLevel","RankingBoard","ranking","displayStep","setDisplayStep","sortedRanking","setSortedRanking","positions","setPositions","maxPoints","newScore","sort","b","previousScore","property","lastPosition","lastPoints","entry","gainedPoints","GalleryPhase","cachedCanvasSize","setCachedCanvasSize","onGoToNextRound","gallery","pointsToVictory","PictureOutlined","RocketFilled","GameOver","onPlayAgain","gameOverTitle","winners","winner","strokeColor","percent","victory","onConfirm","okText","cancelText","grades","minValues","DrawingGrade","grade","findIndex","GameOverPhase","successRate","SectionMe","isTeamGame","count","SectionMeta","roundsToEndGame","groupScore","isNaN","backgroundColor","SectionTeams","SectionTeamPlayers","sortedPlayers","useMemo","memberName","SectionRankedPlayers","rankedPlayers","GameInfoDrawer","setVisible","completeMe","offsetTop","closable","onClose","SessionArteRuim","setInfo","ActiveComponent","getActiveComponent","getColorModifier","left","right","leftColor","rightColor","cardSideClass","ArrowLeftOutlined","MinusOutlined","ArrowRightOutlined","cardName","CardSelection","onSendChosenSide","DialSidesPhase","psychic","amIThePsychic","getBracketClass","showNeedle","needle","showTarget","baseBracketClass","modifier","Dial","rivalGuess","rivalTeam","showPoints","basePointsClass","baseRivalClass","transform","textAnchor","getHint","DialClueWriting","onSendClue","clue","setClue","toUpperCase","DialCluePhase","DialGuessSelection","teamController","amITheController","onSendGuess","setNeedle","guess","GuessPhase","controller","DialRivalSelection","rivalController","amITheRivalController","onSendRivalGuess","BackwardOutlined","ForwardOutlined","RivalPhase","getResultInstructionLine","pointsBreakdown","catchup","got","getRivalResultInstructionLine","RevealPhase","rival","shouldCatchup","SessionOndaTelepatica","WordSelectionStep","words","onSendSelectedWords","guesser","selectedWords","setSelectedWords","selectedWordsArray","noSelection","word","wordId","newState","randomSelection","WordSelectionPhase","amITheGuesser","previousSecretWord","nextGuesser","status","UeSoIssoCard","SuggestionStep","onSendSuggestions","secretWord","suggestionsNumber","suggestions","setSuggestions","onChangeInput","indexStr","Number","suggestionsValues","SuggestPhase","SuggestionCard","suggestion","invalid","CloseOutlined","CompareSuggestionsStep","onValidateSuggestions","myRecommendation","setMyRecommendation","amITheNextGuesser","ExclamationCircleOutlined","suggestionEntry","notAllowed","arr","newArr","onSetValidation","validSuggestions","ComparePhase","onSubmitGuess","QuestionCircleOutlined","CheckOutlined","SessionUeSoIsso","games","ArteRuim","OndaTelepatica","UeSoIsso","Game","setGameName","setGameMeta","isPageLoading","setPageLoading","isGameStale","gameCreatedAt","setGameStale","useIsGameStale","createdAt","urlGameId","pathname","substring","getGameIdFromURL","listen","getGameIdFromLocation","meta","loadGameSession","warn","TestingZone","Flaviane","Kavis","Stephanie","playerOrder","table","LoadingBar","PrivateRoute","Component","component","authenticated","rest","render","to","PublicRoute","fromPath","App","setIsLoading","setIsAdmin","onAuthStateChanged","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ebc0fb2.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/functions';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_API_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n// firebase.analytics();\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const functions = firebase.functions();\n\nif (window.location.hostname.includes('localhost')) {\n  firestore.useEmulator('localhost', 8091);\n  functions.useEmulator('localhost', 5001);\n}\n\nexport default firebase;\n","import { useEffect, useState } from 'react';\n\nexport function useActivePlayer(state, players, propertyName = 'activePlayer') {\n  const [activePlayer, setActivePlayer] = useState({});\n\n  // Determine if user is active as the guesser, the clue giver, the psychic, the storyteller, etc\n  useEffect(() => {\n    const activePlayer = state?.[propertyName];\n    setActivePlayer(players?.[activePlayer]);\n  }, [players, propertyName, state]);\n\n  return activePlayer;\n}\n","import { createGlobalState } from 'react-hooks-global-state';\n\nconst initialState = {\n  isLoading: false,\n  loaders: false,\n  isAuthenticated: false,\n  appStartedAt: Date.now(),\n  // Meta\n  gameId: null,\n  gameName: null,\n  gameMeta: {},\n  me: '',\n  myAvatar: '',\n  isAdmin: false,\n  // Arte-Ruim\n  canvasSize: 250,\n};\n\nconst { useGlobalState, setGlobalState, getGlobalState } = createGlobalState(initialState);\n\nexport { setGlobalState, getGlobalState, useGlobalState };\n\nexport default useGlobalState;\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\nexport function useAmIActive(state, propertyName = 'activePlayer') {\n  const [me] = useGlobalState('me');\n  const [amIActive, setAmIActive] = useState(false);\n\n  // Determine if user is active as the guesser, the clue giver, the psychic, the storyteller, etc\n  useEffect(() => {\n    setAmIActive(state?.[propertyName] === me);\n  }, [state, me, propertyName]);\n\n  return amIActive;\n}\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\nexport function useAmIReady(players, state = {}) {\n  const [me] = useGlobalState('me');\n  const [amIReady, setAmIReady] = useState(false);\n\n  useEffect(() => {\n    // Check if user is ready and check if user has been ready after the last state change\n    if (players[me].ready === false) {\n      setAmIReady(false);\n      return;\n    }\n\n    if (!state?.updatedAt) {\n      setAmIReady(true);\n      return;\n    }\n\n    // If state was updated after the player was updated, data might not be synced\n    if (players[me]?.updatedAt < state?.updatedAt) {\n      setAmIReady(false);\n      return;\n    }\n\n    setAmIReady(true);\n  }, [me, players, state?.updatedAt]);\n\n  return amIReady;\n}\n","import { useCallback } from 'react';\nimport { message, notification } from 'antd';\nimport { useGlobalState, useLoading } from './index';\n\n/**\n * Wrapper around common firebase http call\n * @param {object} data\n * @param {Function} data.apiFunction\n * @param {Function} [data.onBeforeCall]\n * @param {Function} [data.onAfterCall]\n * @param {Function} [data.onError]\n * @param {string} [data.actionName] the name used in the loader hook\n * @param {string} [data.successMessage]\n * @param {string} [data.errorMessage]\n * @returns\n */\nexport function useAPICall({\n  apiFunction,\n  actionName = 'api-action',\n  onBeforeCall = () => {},\n  onAfterCall = () => {},\n  onError = () => {},\n  successMessage = 'API call was successful',\n  errorMessage = 'API call has failed',\n}) {\n  const [, setLoader] = useLoading();\n  const [gameId] = useGlobalState('gameId');\n  const [gameName] = useGlobalState('gameName');\n  const [me] = useGlobalState('me');\n\n  const onAPICall = useCallback(\n    async (payload) => {\n      try {\n        setLoader(actionName, true);\n        await onBeforeCall();\n        const response = await apiFunction({\n          gameId,\n          gameName,\n          playerName: me,\n          ...payload,\n        });\n\n        if (response.data) {\n          message.success(successMessage);\n        }\n      } catch (e) {\n        notification.error({\n          message: errorMessage,\n          description: JSON.stringify(e.message),\n          placement: 'bottomLeft',\n        });\n        console.error(e);\n        onError();\n      } finally {\n        await onAfterCall();\n        setLoader(actionName, false);\n      }\n    },\n    [\n      actionName,\n      apiFunction,\n      errorMessage,\n      gameId,\n      gameName,\n      me,\n      setLoader,\n      successMessage,\n      onBeforeCall,\n      onAfterCall,\n      onError,\n    ]\n  );\n\n  return onAPICall;\n}\n","import { notification } from 'antd';\nimport { useDocument } from 'react-firebase-hooks/firestore';\n// Services\nimport { firestore } from '../services/firebase';\n\nexport function useGamePlayers(gameId, gameName) {\n  const [snapshot, loading, error] = useDocument(firestore.doc(`${gameName}/${gameId}/session/players`), {\n    snapshotListenOptions: { includeMetadataChanges: true },\n  });\n\n  if (error) {\n    notification.error({\n      message: 'Applicativo encontrou um erro ao tentar atualizar os jogadores',\n      description: JSON.stringify(error),\n      placement: 'bottomLeft',\n    });\n    console.error(error);\n  }\n\n  if (loading) {\n    console.log('%cRefreshing players...', 'color:orange');\n  }\n\n  return snapshot?.data() ?? {};\n}\n","import { notification } from 'antd';\nimport { useDocument } from 'react-firebase-hooks/firestore';\n// Services\nimport { firestore } from '../services/firebase';\n\nexport function useGameState(gameId, gameName) {\n  const [snapshot, loading, error] = useDocument(firestore.doc(`${gameName}/${gameId}/session/state`), {\n    snapshotListenOptions: { includeMetadataChanges: true },\n  });\n\n  if (error) {\n    notification.error({\n      message: 'Aplicativo encontrou um erro ao tentar atualizar o estado do jogo',\n      description: JSON.stringify(error),\n      placement: 'bottomLeft',\n    });\n    console.error(error);\n  }\n\n  if (loading) {\n    console.log('%cRefreshing state...', 'color:tomato');\n  }\n\n  return snapshot?.data() ?? {};\n}\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\nexport function useIsMyTeamActive(state, players) {\n  const [me] = useGlobalState('me');\n  const [isMyTeamActive, setIsMyTeamActive] = useState(false);\n\n  // Determine if user's team is active\n  useEffect(() => {\n    setIsMyTeamActive(state?.activeTeam === players?.[me]?.team);\n  }, [state, me, players]);\n\n  return isMyTeamActive;\n}\n","import { useEffect } from 'react';\n\nimport { useGlobalState } from './index';\n\n/**\n * Aggregate loading states into a single object, and single isLoading state\n * @returns [boolean, function, object]\n */\nexport function useLoading() {\n  const [isLoading, setLoading] = useGlobalState('isLoading');\n  const [loaders, setLoaders] = useGlobalState('loaders');\n\n  useEffect(() => {\n    setLoading(Object.values(loaders).some((v) => v));\n  }, [loaders, setLoading]);\n\n  const setLoader = (key, value) => {\n    setLoaders((values) => ({\n      ...values,\n      [key]: value,\n    }));\n  };\n\n  return [isLoading, setLoader, loaders];\n}\n","export default __webpack_public_path__ + \"static/media/tarde-divertida-logo.7e15410c.svg\";","import React from 'react';\nimport { Image, Layout } from 'antd';\n\nimport logo from '../images/tarde-divertida-logo.svg';\n\nfunction Home() {\n  return (\n    <Layout className=\"home\">\n      <div className=\"home__logo-container\">\n        <Image src={logo} className=\"home__logo\" preview={false} alt=\"Tarde Divertida logo\" />\n      </div>\n      <div className=\"home__background\">\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Home;\n","/**\n * List of urls residing in the public folder\n */\nexport const PUBLIC_URL = {\n  BANNERS: `${process.env.PUBLIC_URL}/images/banners/`,\n  RULES: `${process.env.PUBLIC_URL}/images/rules/`,\n};\n\n/**\n * List of tags translation and color\n */\nexport const TAG_DICT = {\n  competitive: {\n    label: 'competitivo',\n    color: 'red',\n  },\n  cooperative: {\n    label: 'cooperativo',\n    color: 'green',\n  },\n  traitor: {\n    label: 'inimigo',\n    color: 'volcano',\n  },\n  'real-time': {\n    label: 'juntos',\n    color: 'volcano',\n  },\n  'turn-based': {\n    label: 'vez',\n    color: 'volcano',\n  },\n  timed: {\n    label: 'tempo',\n    color: 'orange',\n  },\n  drawing: {\n    label: 'desenho',\n    color: 'gold',\n  },\n  guessing: {\n    label: 'adivinhar',\n    color: 'cyan',\n  },\n  writing: {\n    label: 'escrever',\n    color: 'blue',\n  },\n  images: {\n    label: 'imagens',\n    color: 'purple',\n  },\n  discussion: {\n    label: 'discussão/fala',\n    color: 'geekblue',\n  },\n};\n\n/**\n * List of avatar ids\n */\nexport const AVATAR_IDS = new Array(25).fill(0).map((i, index) => i + index);\n\nexport const LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\nexport const AVATAR_DESCRIPTIONS_BR = {\n  0: 'o axolote',\n  1: 'a tartaruga',\n  2: 'a raposa',\n  3: 'o sapo',\n  4: 'a salamandra',\n  5: 'a toupeira',\n  6: 'o esquilo',\n  7: 'o corvo',\n  8: 'a lontra',\n  9: 'o camundongo',\n  10: 'o sabiá',\n  11: 'a cojura',\n  12: 'o porco-espinho',\n  13: 'o ornitorrinco',\n  14: 'o rato',\n  15: 'a rã',\n  16: 'o caramujo',\n  17: 'a abelha',\n  18: 'o morcego',\n  19: 'o gato',\n  20: 'o coelho',\n  21: 'a aranha',\n  22: 'a borboleta',\n  23: 'o arminho',\n  24: 'o porco',\n};\n\n/**\n * Enum of available games\n */\nexport const GAME_COLLECTION = {\n  ARTE_RUIM: 'arte-ruim',\n  ONDA_TELEPATICA: 'onda-telepatica',\n  UE_SO_ISSO: 'ue-so-isso',\n};\n\n/**\n * Enum of Game Phases\n */\nexport const PHASES = {\n  ARTE_RUIM: {\n    LOBBY: 'LOBBY',\n    RULES: 'RULES',\n    DRAW: 'DRAW',\n    EVALUATION: 'EVALUATION',\n    GALLERY: 'GALLERY',\n    GAME_OVER: 'GAME_OVER',\n  },\n  ONDA_TELEPATICA: {\n    LOBBY: 'LOBBY',\n    RULES: 'RULES',\n    DIAL_SIDES: 'DIAL_SIDES',\n    DIAL_CLUE: 'DIAL_CLUE',\n    GUESS: 'GUESS',\n    RIVAL_GUESS: 'RIVAL_GUESS',\n    REVEAL: 'REVEAL',\n    GAME_OVER: 'GAME_OVER',\n  },\n  UE_SO_ISSO: {\n    LOBBY: 'LOBBY',\n    RULES: 'RULES',\n    WORD_SELECTION: 'WORD_SELECTION',\n    SUGGEST: 'SUGGEST',\n    COMPARE: 'COMPARE',\n    GUESS: 'GUESS',\n    GAME_OVER: 'GAME_OVER',\n  },\n};\n","import { functions } from '../services/firebase';\nimport { GAME_COLLECTION } from '../utils/constants';\n\nexport const GAME_API = {\n  helloWorld: functions.httpsCallable('helloWorld'),\n  initializeGame: functions.httpsCallable('initializeGame'),\n  loadGame: functions.httpsCallable('loadGame'),\n  addPlayer: functions.httpsCallable('addPlayer'),\n  lockGame: functions.httpsCallable('lockGame'),\n  playAgain: functions.httpsCallable('playAgain'),\n};\n\nexport const ARTE_RUIM_API = {\n  makeMeReady: functions.httpsCallable('arteRuimMakeMeReady'),\n  submitDrawing: functions.httpsCallable('arteRuimSubmitDrawing'),\n  submitVoting: functions.httpsCallable('arteRuimSubmitVoting'),\n  submitRating: functions.httpsCallable('arteRuimSubmitRating'),\n  goToNextPhase: functions.httpsCallable('arteRuimGoToNextPhase'),\n};\n\nexport const ONDA_TELEPATICA = {\n  makeMeReady: functions.httpsCallable('ondaTelepaticaMakeMeReady'),\n  submitSides: functions.httpsCallable('ondaTelepaticaSubmitSides'),\n  submitClue: functions.httpsCallable('ondaTelepaticaSubmitClue'),\n  submitGuess: functions.httpsCallable('ondaTelepaticaSubmitGuess'),\n  submitRivalGuess: functions.httpsCallable('ondaTelepaticaSubmitRivalGuess'),\n  goToNextPhase: functions.httpsCallable('ondaTelepaticaGoToNextPhase'),\n};\n\nexport const UE_SO_ISSO_API = {\n  makeMeReady: functions.httpsCallable('ueSoIssoMakeMeReady'),\n  submitWordSelectionVotes: functions.httpsCallable('ueSoIssoSubmitWordSelectionVotes'),\n  submitSuggestions: functions.httpsCallable('ueSoIssoSubmitSuggestions'),\n  submitValidation: functions.httpsCallable('ueSoIssoSubmitValidation'),\n  confirmGuess: functions.httpsCallable('ueSoIssoConfirmGuess'),\n};\n\n/**\n * Gets the game specific API http functions\n * @param {string} gameName\n * @returns\n */\nexport const getAPI = (gameName) => {\n  switch (gameName) {\n    case GAME_COLLECTION.ARTE_RUIM:\n      return ARTE_RUIM_API;\n    case GAME_COLLECTION.ONDA_TELEPATICA:\n      return ONDA_TELEPATICA;\n    case GAME_COLLECTION.UE_SO_ISSO:\n      return UE_SO_ISSO_API;\n    default:\n      throw Error(`Adapter for ${gameName} does not exist`);\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Space, Spin, Typography } from 'antd';\n\nfunction Loading({ message, margin }) {\n  return (\n    <Space className={clsx('loading', margin && 'loading--margin')}>\n      <Spin />\n      {Boolean(message) && <Typography.Text>{message}</Typography.Text>}\n    </Space>\n  );\n}\n\nLoading.propTypes = {\n  message: PropTypes.string,\n  margin: PropTypes.bool,\n};\n\nLoading.defaultProps = {\n  margin: false,\n};\n\nexport default Loading;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Typography } from 'antd';\nimport clsx from 'clsx';\n\nfunction Instruction({ children, white, className, contained }) {\n  const baseClass = 'instruction';\n\n  return (\n    <Typography.Text\n      className={clsx(\n        baseClass,\n        contained && `${baseClass}--contained`,\n        white && `${baseClass}--white`,\n        className\n      )}\n    >\n      {children}\n    </Typography.Text>\n  );\n}\n\nInstruction.propTypes = {\n  children: PropTypes.any.isRequired,\n  white: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nexport default memo(Instruction);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Typography } from 'antd';\nimport clsx from 'clsx';\n\nfunction Title({ children, white, icon, className }) {\n  return (\n    <Typography.Title className={clsx('title', white && 'title--white', className)}>\n      {Boolean(icon) && icon}\n      {children}\n    </Typography.Title>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.any.isRequired,\n  white: PropTypes.bool,\n  icon: PropTypes.element,\n  className: PropTypes.string,\n};\n\nexport default memo(Title);\n","import React, { Fragment, useCallback, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Image, Modal, message, Button, notification } from 'antd';\n// Adapters\nimport { GAME_API } from '../../adapters';\n// Hooks\nimport { useLoading } from '../../hooks';\n// Constants\nimport { PUBLIC_URL } from '../../utils/constants';\n// Components\nimport Loading from '../loaders/Loading';\nimport Instruction from '../shared/Instruction';\nimport Title from '../shared/Title';\n\nfunction CreateGameModal({ gameInfo }) {\n  const history = useHistory();\n  const [, setLoader] = useLoading();\n  const [isVisible, setVisibility] = useState(false);\n  const [isLoading, setLoading] = useState(true);\n  const [gameId, setGameId] = useState(null);\n\n  const onCloseModal = useCallback(() => {\n    setVisibility(false);\n  }, []);\n\n  useEffect(() => {\n    async function createGame() {\n      try {\n        setLoader('create', true);\n        const response = await GAME_API.initializeGame({ gameCode: gameInfo.gameCode });\n        if (response.data.gameId) {\n          setGameId(response.data.gameId);\n        }\n      } catch (e) {\n        notification.error({\n          message: 'Applicativo encontrou um erro ao tentar criar o jogo',\n          description: JSON.stringify(e.message),\n          placement: 'bottomLeft',\n        });\n        console.error(e);\n        setVisibility(false);\n      } finally {\n        setLoading(false);\n        setLoader('create', false);\n      }\n    }\n\n    if (isVisible) {\n      createGame();\n    }\n  }, [isVisible]); // eslint-disable-line\n\n  const onConfirmGame = () => {\n    if (gameId) {\n      history.push(`/${gameId}`);\n    } else {\n      message.info('Péra! O jogo ainda não foi inicializado.');\n    }\n  };\n\n  return (\n    <Fragment>\n      <Button type=\"primary\" onClick={() => setVisibility(true)}>\n        Criar Jogo\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`Criando jogo: ${gameInfo.title}`}\n          visible={isVisible}\n          onCancel={onCloseModal}\n          onOk={onConfirmGame}\n        >\n          <Fragment>\n            <Image\n              alt={gameInfo.title}\n              src={`${PUBLIC_URL.BANNERS}game-image-${gameInfo.gameName}.jpg`}\n              fallback={`${PUBLIC_URL.BANNERS}/game-image-em-breve.jpg`}\n            />\n\n            {isLoading ? (\n              <Fragment>\n                <Instruction>O jogo está sendo criado...</Instruction>\n                <Loading message=\"Gerando...\" margin />\n              </Fragment>\n            ) : (\n              <div>\n                <Title className=\"center\">Jogo inicializado: {gameId}</Title>\n                <Instruction>Pressione OK para ser redirecionadx à página do jogo.</Instruction>\n              </div>\n            )}\n          </Fragment>\n        </Modal>\n      )}\n    </Fragment>\n  );\n}\n\nCreateGameModal.propTypes = {\n  gameInfo: PropTypes.shape({\n    gameCode: PropTypes.string.isRequired,\n    gameName: PropTypes.string,\n    title: PropTypes.string,\n  }),\n};\n\nexport default CreateGameModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Typography, Image, Carousel } from 'antd';\n// Constants\nimport { PUBLIC_URL } from '../../utils/constants';\n\nfunction RulesCarousel({ info, className, ruleClass }) {\n  return (\n    <Carousel className={clsx('rules-carousel', className)} autoplay autoplaySpeed={15000}>\n      {info.rules.map((rule, index) => (\n        <div className={clsx('rules-carousel__rule', ruleClass)} key={rule}>\n          <Image\n            className=\"rules-carousel__image\"\n            src={\n              index === 0\n                ? `${PUBLIC_URL.BANNERS}game-image-${info.gameName}.jpg`\n                : `${PUBLIC_URL.RULES}game-rule-${info.gameName}-${index}.jpg`\n            }\n            fallback={`${PUBLIC_URL.RULES}game-rule-not-found.jpg`}\n            alt={rule}\n          />\n          <Typography.Paragraph className=\"rules-carousel__rule-text\">{rule}</Typography.Paragraph>\n        </div>\n      ))}\n    </Carousel>\n  );\n}\n\nRulesCarousel.propTypes = {\n  info: PropTypes.shape({\n    gameName: PropTypes.string,\n    rules: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string,\n  }),\n  className: PropTypes.string,\n  ruleClass: PropTypes.string,\n};\n\nRulesCarousel.defaultProps = {\n  className: '',\n  ruleClass: '',\n};\n\nexport default RulesCarousel;\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\n\n// Design Resources\nimport { Button, Modal } from 'antd';\nimport { ReadOutlined } from '@ant-design/icons';\n// Components\nimport RulesCarousel from '../rules/RulesCarousel';\n\nfunction RulesModal({ gameInfo }) {\n  const [isVisible, setVisibility] = useState(false);\n\n  const onCloseModal = () => {\n    setVisibility(false);\n  };\n\n  return (\n    <Fragment>\n      <Button type=\"default\" onClick={() => setVisibility(true)} icon={<ReadOutlined />}>\n        Regras\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`Rules: ${gameInfo.title}`}\n          visible={isVisible}\n          onCancel={onCloseModal}\n          className=\"rules-modal\"\n          footer={[\n            <Button key=\"close\" onClick={onCloseModal}>\n              Fechar\n            </Button>,\n          ]}\n        >\n          <RulesCarousel info={gameInfo} />\n        </Modal>\n      )}\n    </Fragment>\n  );\n}\n\nRulesModal.propTypes = {\n  gameInfo: PropTypes.shape({\n    gameName: PropTypes.string,\n    rules: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string,\n  }),\n};\n\nexport default RulesModal;\n","import React from 'react';\n\n// Design Resources\nimport { Typography, Layout, Space, Card, Image, Divider, Tag } from 'antd';\n// Utils\nimport gameList from '../resources/games.json';\nimport { PUBLIC_URL, TAG_DICT } from '../utils/constants';\n// Components\nimport CreateGameModal from './modals/CreateGameModal';\nimport RulesModal from './modals/RulesModal';\n\nfunction Admin() {\n  return (\n    <Layout.Content className=\"container\">\n      <Typography.Title>Admin Hub</Typography.Title>\n      <Typography.Paragraph>Select the game you want to start</Typography.Paragraph>\n\n      <Space size={[8, 16]} wrap align=\"start\">\n        {Object.values(gameList).map((game) => (\n          <Card\n            key={game.gameName}\n            hoverable\n            style={{ width: 240 }}\n            cover={\n              <Image\n                alt={game.title}\n                src={`${PUBLIC_URL.BANNERS}game-image-${game.gameName}.jpg`}\n                fallback={`${PUBLIC_URL.BANNERS}/game-image-em-breve.jpg`}\n              />\n            }\n          >\n            <Card.Meta title={game.title} description={game.summary} />\n            <Divider />\n            <Card.Meta description={`Para ${game.min}-${game.max} jogadores`} />\n            <Card.Meta description={`Recomendado jogar com ${game.recommended}`} />\n            <Divider />\n            <Space wrap size={[1, 6]}>\n              {game.tags.map((tag) => (\n                <Tag key={`${game.gameCode}-${tag}`} color={TAG_DICT[tag]?.color}>\n                  {TAG_DICT[tag]?.label}\n                </Tag>\n              ))}\n            </Space>\n            <Divider />\n            <Space>\n              <RulesModal gameInfo={game} />\n              {Boolean(game.available) && <CreateGameModal gameInfo={game} />}\n            </Space>\n          </Card>\n        ))}\n      </Space>\n    </Layout.Content>\n  );\n}\n\nexport default Admin;\n","import { auth } from '../services/firebase';\n\n/**\n * Sign up user via email through firebase auth\n * @param {string} email\n * @param {string} password\n * @returns {Promise}\n */\nexport function signUp(email, password) {\n  return auth.createUserWithEmailAndPassword(email, password);\n}\n\n/**\n * Sign in user via email through firebase auth\n * @param {string} email\n * @param {string} password\n * @returns {Promise}\n */\nexport function signIn(email, password) {\n  return auth.signInWithEmailAndPassword(email, password);\n}\n\n/**\n * Sign out current user\n * @returns {Promise}\n */\nexport async function signOut() {\n  return auth.signOut().then(() => {\n    alert(`You've been signed out`);\n  });\n}\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\n// Design Resources\nimport { Layout, Button, Form, Input, Alert, Image } from 'antd';\n// API\nimport { signIn } from '../adapters/auth';\n// State\nimport { useGlobalState } from '../hooks';\n// Image\nimport logo from '../images/tarde-divertida-logo.svg';\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 0, span: 8 },\n};\n\nfunction Login() {\n  const history = useHistory();\n  const [, setIsAuthenticated] = useGlobalState('isAuthenticated');\n\n  const [error, setError] = useState(null);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const onValuesChange = (data) => {\n    if (data.email) {\n      setEmail(data.email.trim());\n    }\n    if (data.password) {\n      setPassword(data.password.trim());\n    }\n  };\n\n  const onHandleSubmit = async () => {\n    setError('');\n    try {\n      const response = await signIn(email, password);\n      if (response?.user?.uid) {\n        setIsAuthenticated(true);\n        history.push('/admin');\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <Layout.Content className=\"login\">\n      <div className=\"login__content\">\n        <div className=\"login__logo\">\n          <Image src={logo} preview={false} />\n        </div>\n\n        {Boolean(error) && (\n          <Alert message=\"Error\" description={error} type=\"error\" showIcon className=\"login__error-alert\" />\n        )}\n        <Form\n          {...layout}\n          layout=\"horizontal\"\n          name=\"sign-in\"\n          onValuesChange={onValuesChange}\n          className=\"login__form\"\n          autoComplete=\"off\"\n        >\n          <Form.Item {...tailLayout} label=\"E-mail\" name=\"email\" className=\"login__form-item\">\n            <Input type=\"email\" />\n          </Form.Item>\n          <Form.Item {...tailLayout} label=\"Password\" name=\"password\" className=\"login__form-item\">\n            <Input type=\"password\" />\n          </Form.Item>\n          <div className=\"login__form-action\">\n            <Button type=\"primary\" onClick={onHandleSubmit}>\n              Login\n            </Button>\n          </div>\n        </Form>\n      </div>\n    </Layout.Content>\n  );\n}\n\nexport default Login;\n","/**\n * Extract the gameId from react history\n * @param {object} history\n * @returns {string}\n */\nexport const getGameIdFromURL = (history) => {\n  const { pathname = '/' } = history?.location ?? {};\n  return pathname.substring(1);\n};\n\n/**\n * Extract the gameId from react history.location\n * @param {object} history\n * @returns {string}\n */\nexport const getGameIdFromLocation = (location) => {\n  const { pathname = '/' } = location ?? {};\n  return pathname.substring(1);\n};\n\n/**\n * Verify if the game id exists and has the correct length\n * @param {string} gameId\n * @returns\n */\nexport const isValidGameId = (gameId) => {\n  return gameId && gameId.length === 4;\n};\n\n/**\n * Get random element/item from a list\n * @param {array} list\n * @returns one random item\n */\nexport const getRandomItem = (list) => {\n  return list[Math.floor(Math.random() * list.length)];\n};\n\n/**\n * Get date from now within the given seconds\n * @param {number} seconds\n * @returns\n */\nexport const inNSeconds = (seconds) => {\n  return Date.now() + seconds * 1000;\n};\n\n/**\n * Get color name from letter\n * @param {string} letter\n * @returns\n */\nexport const getColorFromLetter = (letter) => {\n  return (\n    {\n      A: 'red',\n      B: 'blue',\n      C: 'green',\n      D: 'yellow',\n      E: 'pink',\n      F: 'purple',\n      G: 'teal',\n      H: 'orange',\n      I: 'coffee',\n      J: 'navy',\n      K: 'light-green',\n      L: 'brown',\n      M: 'hot-pink',\n      N: 'violet',\n      O: 'forest',\n      P: 'cream',\n\n      X: 'none',\n    }[letter] ?? 'none'\n  );\n};\n\n/**\n * Gets color name from index\n * @param {number} letter\n * @returns\n */\nexport const getColorFromIndex = (letter) => {\n  return (\n    [\n      'red',\n      'blue',\n      'green',\n      'yellow',\n      'pink',\n      'purple',\n      'teal',\n      'orange',\n      'coffee',\n      'navy',\n      'light-green',\n      'brown',\n      'hot-pink',\n      'violet',\n      'forest',\n      'cream',\n    ][letter] ?? 'none'\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Layout, Spin, Typography } from 'antd';\n\nfunction LoadingPage({ message }) {\n  return (\n    <Layout.Content className=\"loading-page\">\n      <Spin size=\"large\" />\n      <Typography.Text>{message}</Typography.Text>\n    </Layout.Content>\n  );\n}\n\nLoadingPage.propTypes = {\n  message: PropTypes.string,\n};\n\nLoadingPage.defaultProps = {\n  message: 'Carregando...',\n};\n\nexport default LoadingPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Alert } from 'antd';\n\nfunction PageError({ message, description }) {\n  return (\n    <div className=\"container container--center\">\n      <Alert message={message} description={description} type=\"error\" showIcon />\n    </div>\n  );\n}\n\nPageError.propTypes = {\n  message: PropTypes.string,\n  description: PropTypes.string,\n};\n\nPageError.defaultProps = {\n  message: 'Algo errado não está certo',\n  description: 'Não era pra você estar vendo esta mensagem.',\n};\n\nexport default PageError;\n","import React, { memo } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Layout } from 'antd';\n// Components\nimport LoadingPage from '../loaders/LoadingPage';\n\n/**\n * Wrapping container around a game screen\n * @param {*} props\n * @returns\n */\nfunction PhaseContainer({ info, phase, allowedPhase, children, className, fullScreen, white }) {\n  if (!info?.gameName || allowedPhase !== phase) {\n    return <LoadingPage />;\n  }\n\n  const baseClass = 'phase-container';\n\n  return (\n    <Layout.Content\n      className={clsx(\n        baseClass,\n        fullScreen && `${baseClass}--full-screen`,\n        white && `${baseClass}--white`,\n        className\n      )}\n    >\n      <span className={`${baseClass}__title`}>{info.title}</span>\n      {children}\n    </Layout.Content>\n  );\n}\n\nPhaseContainer.propTypes = {\n  children: PropTypes.any.isRequired,\n  allowedPhase: PropTypes.string,\n  className: PropTypes.string,\n  fullScreen: PropTypes.bool,\n  info: PropTypes.object,\n  phase: PropTypes.string,\n  white: PropTypes.bool,\n};\n\nPhaseContainer.defaultProps = {\n  allowedPhase: '',\n  className: '',\n  fullScreen: false,\n  phase: '',\n  white: false,\n};\n\nexport default memo(PhaseContainer);\n","export default __webpack_public_path__ + \"static/media/avatars.a2364409.svg\";","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Avatar as AntAvatar } from 'antd';\n// Images\nimport avatars from '../../images/avatars.svg';\n\nfunction Avatar({ id = 25, size = 'large', shape = 'circle', alt = 'Fulano', className = '' }) {\n  return (\n    <AntAvatar\n      className={clsx('avatar', className)}\n      size={size}\n      shape={shape}\n      alt={alt}\n      src={\n        <svg viewBox=\"0 0 100 100\">\n          <use href={avatars + `#avatar-${id}`}></use>\n        </svg>\n      }\n    />\n  );\n}\n\nAvatar.propTypes = {\n  id: PropTypes.number,\n  className: PropTypes.string,\n  size: PropTypes.string,\n  shape: PropTypes.string,\n  alt: PropTypes.string,\n};\n\nexport default memo(Avatar);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Components\nimport Avatar from './Avatar';\n\nfunction AvatarEntry({ id = 25, name = 'Fulano', animate = false, className = '' }) {\n  return (\n    <div className={clsx('avatar-entry', animate && 'avatar-entry--floating', className)}>\n      <Avatar id={id} className=\"avatar-entry__avatar\" />\n      <div className=\"avatar-entry__name\">{name}</div>\n    </div>\n  );\n}\n\nAvatar.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  animate: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nexport default memo(AvatarEntry);\n","class LocalStorage {\n  constructor() {\n    this.store = {};\n    this.notLoaded = true;\n    this.appName = 'tarde-divertida';\n\n    this.init();\n  }\n\n  init() {\n    this.load();\n    return this.get();\n  }\n\n  get(key) {\n    if (this.notLoaded) {\n      this.load();\n    }\n\n    if (key) {\n      return this.store[key] || null;\n    }\n    return this.store;\n  }\n\n  load() {\n    const localStorage = JSON.parse(window.localStorage.getItem(this.appName));\n    if (localStorage) {\n      this.store = localStorage;\n      this.notLoaded = false;\n    }\n  }\n\n  // To Remove a property, you can use the set method, but passing an object with the key and value\n  // null, the property will be removed from local storage\n  set(value) {\n    if (this.notLoaded) {\n      this.load();\n    }\n\n    const type = typeof value;\n    if (type !== 'string' && type !== 'object') {\n      console.error('localStorage set value must be a string or a key-value object');\n      return;\n    }\n\n    // When value is a string, use as a property toggle\n    if (typeof value === 'string') {\n      this.store[value] = !this.store[value];\n    } else {\n      // Remove any null or undefined property\n      Object.entries(value).forEach(([key, item]) => {\n        if (item === null || item === undefined) {\n          delete value[key];\n        }\n      });\n\n      this.store = {\n        ...this.store,\n        ...value,\n      };\n    }\n\n    this.save();\n  }\n\n  save() {\n    if (this.notLoaded) {\n      this.load();\n    }\n\n    window.localStorage.setItem(this.appName, JSON.stringify(this.store));\n    this.load();\n  }\n}\n\nexport default new LocalStorage();\n","import React, { useCallback, useEffect, useState } from 'react';\n// Design Resources\nimport { Alert, Button, Image, Input, notification, Spin, Tooltip } from 'antd';\nimport { CaretLeftOutlined, CaretRightOutlined, InfoCircleOutlined } from '@ant-design/icons';\n// API & Hooks\nimport { GAME_API } from '../../adapters';\nimport { useLoading } from '../../hooks';\nimport useGlobalState from '../../hooks/useGlobalState';\n// Images\nimport avatars from '../../images/avatars.svg';\n// Services\nimport localStorage from '../../services/localStorage';\n// Utils\nimport { AVATAR_IDS, PUBLIC_URL } from '../../utils/constants';\nimport { getRandomItem } from '../../utils/index';\n\nfunction Join({ players, info }) {\n  const [isLoading, setLoader] = useLoading();\n  const [gameId] = useGlobalState('gameId');\n  const [gameName] = useGlobalState('gameName');\n  const [, setMe] = useGlobalState('me');\n  const [, setMyAvatar] = useGlobalState('myAvatar');\n\n  const [availableAvatars, setAvailableAvatars] = useState(AVATAR_IDS);\n  const [tempAvatar, setTempAvatar] = useState(getRandomItem(AVATAR_IDS));\n  const [tempMe, setTempMe] = useState('');\n  const [sameGameId, setSameGameId] = useState(false);\n\n  const [localStorageAvatar, setLocalStorageAvatar] = useState(null);\n\n  // Calculate available avatars and monitor if user chose a non-available one\n  useEffect(() => {\n    const usedAvatars = Object.values(players).reduce((acc, p) => {\n      acc[p.avatarId] = true;\n      return acc;\n    }, {});\n\n    const newAvailableAvatars = AVATAR_IDS.filter((avatarId) => usedAvatars[avatarId] === undefined);\n\n    if (newAvailableAvatars.includes(tempAvatar) && !localStorageAvatar) {\n      setTempAvatar(getRandomItem(newAvailableAvatars));\n    }\n\n    setAvailableAvatars(newAvailableAvatars);\n  }, [players]); // eslint-disable-line\n\n  // Load name and avatarId from localStorage\n  useEffect(() => {\n    const lsAvatarId = localStorage.get('avatarId');\n    const lsMe = localStorage.get('me');\n    const lsGameId = localStorage.get('gameId');\n\n    if (lsAvatarId && lsMe) {\n      setTempAvatar(localStorage.get('avatarId'));\n      setTempMe(localStorage.get('me') ?? '');\n      setLocalStorageAvatar(lsAvatarId);\n\n      if (lsGameId === gameId) {\n        setSameGameId(true);\n      }\n    }\n  }, []); // eslint-disable-line\n\n  const onPreviousAvatar = useCallback(() => {\n    const index = availableAvatars.indexOf(tempAvatar);\n    const newIndex = index === 0 ? availableAvatars.length - 1 : index - 1;\n    setTempAvatar(availableAvatars[newIndex]);\n  }, [availableAvatars, tempAvatar]);\n\n  const onNextAvatar = useCallback(() => {\n    const index = availableAvatars.indexOf(tempAvatar);\n    const newIndex = index === availableAvatars.length - 1 ? 0 : index + 1;\n    setTempAvatar(availableAvatars[newIndex]);\n  }, [availableAvatars, tempAvatar]);\n\n  const onAddPlayer = useCallback(async () => {\n    try {\n      setLoader('add-player', true);\n      const response = await GAME_API.addPlayer({\n        gameId,\n        gameName,\n        playerName: tempMe,\n        playerAvatarId: tempAvatar,\n      });\n\n      setMe(response.data.name);\n      setMyAvatar(response.data.avatarId);\n      localStorage.set({\n        me: response.data.name,\n        avatarId: response.data.avatarId,\n        gameId,\n      });\n    } catch (e) {\n      notification.error({\n        message: 'Vixi, o aplicativo encontrou um erro ao tentar te adicionar como jogador',\n        description: JSON.stringify(e.message),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n    } finally {\n      setLoader('add-player', false);\n    }\n  }, [gameId, gameName, tempMe, tempAvatar]); // eslint-disable-line\n\n  return (\n    <div className=\"lobby-join\">\n      <Image\n        alt={info?.title}\n        src={`${PUBLIC_URL.BANNERS}game-image-${info?.gameName}.jpg`}\n        fallback={`${PUBLIC_URL.BANNERS}/game-image-em-breve.jpg`}\n        className=\"lobby-join__game-image\"\n      />\n      <h1 className=\"lobby-join__title\">\n        {Boolean(localStorageAvatar) ? 'Bem-vindo de volta!' : 'Selecione seu avatar'}\n      </h1>\n      <div className=\"lobby-join__avatar-selection\">\n        <Button type=\"dashed\" onClick={onPreviousAvatar} className=\"lobby-join__avatar-nav-button\">\n          <CaretLeftOutlined />\n        </Button>\n        <svg viewBox=\"0 0 100 100\" className=\"lobby-join__avatar-selection-image\">\n          <use href={avatars + `#avatar-${tempAvatar}`}></use>\n        </svg>\n        <Button type=\"dashed\" onClick={onNextAvatar} className=\"lobby-join__avatar-nav-button\">\n          <CaretRightOutlined />\n        </Button>\n      </div>\n\n      {Boolean(localStorageAvatar) ? (\n        <Alert\n          className=\"lobby-join__avatar-alert\"\n          type=\"success\"\n          message=\"Você está de volta! Lembramos seu nome e avatar!\"\n        />\n      ) : (\n        <Alert\n          className=\"lobby-join__avatar-alert\"\n          type=\"warning\"\n          message=\"Se alguém selecionar um mesmo avatar, um avatar aleatório será atribuido à você.\"\n        />\n      )}\n\n      {Boolean(sameGameId) && (\n        <Alert\n          className=\"lobby-join__avatar-alert\"\n          type=\"error\"\n          message=\"Se você está retornando a um jogo, NÃO mude seu apelido! Se o apelido for modificado, você será adicionado como um novo jogador e tudo pode bugar.\"\n        />\n      )}\n\n      <Input\n        className=\"lobby-join__name-input\"\n        onChange={(e) => setTempMe(e.target.value)}\n        placeholder=\"Insira seu nome\"\n        value={tempMe}\n        maxLength={10}\n        suffix={\n          <Tooltip title=\"Máximo de 10 characteres\">\n            <InfoCircleOutlined />\n          </Tooltip>\n        }\n      />\n      <Button\n        className=\"lobby-join__join-button\"\n        type=\"primary\"\n        disabled={!Boolean(tempMe) || isLoading}\n        onClick={onAddPlayer}\n      >\n        {isLoading ? <Spin size=\"small\" /> : 'Entrar no jogo'}\n      </Button>\n    </div>\n  );\n}\n\nexport default Join;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Space } from 'antd';\n// State\nimport useGlobalState from '../../hooks/useGlobalState';\n\nfunction AdminOnly({ children, className = '' }) {\n  const [isAdmin] = useGlobalState('isAdmin');\n\n  if (!isAdmin) return <span></span>;\n\n  return <Space className={clsx('admin-only-container', className)}>{children}</Space>;\n}\n\nAdminOnly.propTypes = {\n  children: PropTypes.element.isRequired,\n  className: PropTypes.string,\n};\n\nexport default AdminOnly;\n","import React, { useCallback } from 'react';\n// Design Resources\nimport { Button, Image, message, notification, Typography } from 'antd';\n// API & Hooks\nimport { GAME_API } from '../../adapters';\nimport useGlobalState from '../../hooks/useGlobalState';\nimport { useLoading } from '../../hooks';\n// Images\nimport avatars from '../../images/avatars.svg';\n// Utils and Resources\nimport { PUBLIC_URL } from '../../utils/constants';\n// Components\nimport AdminOnly from '../shared/AdminOnly';\n\nfunction Waiting({ info, players }) {\n  const [isLoading, setLoader] = useLoading();\n  const [gameId] = useGlobalState('gameId');\n  const [gameName] = useGlobalState('gameName');\n  const [gameMeta] = useGlobalState('gameMeta');\n\n  const [me] = useGlobalState('me');\n  const [myAvatar] = useGlobalState('myAvatar');\n\n  const onLockGameAndStart = useCallback(async () => {\n    try {\n      setLoader('lock-game', true);\n      const response = await GAME_API.lockGame({\n        gameId,\n        gameName,\n      });\n      if (response.data.isLocked) {\n        message.success('Jogo trancado e iniciado com sucesso!');\n      }\n    } catch (e) {\n      notification.error({\n        message: 'Vixi, o aplicativo encontrou um erro ao tentar trancar e iniciar o jogo',\n        description: JSON.stringify(e.message),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n    } finally {\n      setLoader('lock-game', false);\n    }\n  }, [gameId, gameName, setLoader]);\n\n  const numPlayers = Object.keys(players).length;\n\n  return (\n    <div className=\"lobby-waiting\">\n      <Image\n        alt={info?.title}\n        src={`${PUBLIC_URL.BANNERS}game-image-${info?.gameName}.jpg`}\n        fallback={`${PUBLIC_URL.BANNERS}/game-image-em-breve.jpg`}\n      />\n\n      <h1 className=\"center\">{me || 'Fulano'},</h1>\n      <svg viewBox=\"0 0 100 100\" className=\"lobby-waiting__avatar\">\n        <use href={avatars + `#avatar-${myAvatar}`}></use>\n      </svg>\n      <h3 className=\"center\">Aguarde os outros jogadores entrarem.</h3>\n      <AdminOnly className=\"lobby-waiting__lock-button\">\n        <Typography.Text className=\"center padding\">\n          Jogadores necessários: {numPlayers}/{gameMeta.min}\n        </Typography.Text>\n        <Button\n          type=\"primary\"\n          danger\n          onClick={onLockGameAndStart}\n          disabled={isLoading || numPlayers < gameMeta.min}\n        >\n          Trancar e Iniciar Jogo\n        </Button>\n      </AdminOnly>\n    </div>\n  );\n}\n\nexport default Waiting;\n","import React from 'react';\n\nfunction CloudBackground() {\n  return (\n    <div class=\"cloud-background\">\n      <div class=\"cloud-background__animation-1\">\n        <div class=\"cloud-background__cloud\"></div>\n      </div>\n\n      <div class=\"cloud-background__animation-2\">\n        <div class=\"cloud-background__cloud\"></div>\n      </div>\n\n      <div class=\"cloud-background__animation-3\">\n        <div class=\"cloud-background__cloud\"></div>\n      </div>\n\n      <div class=\"cloud-background__animation-4\">\n        <div class=\"cloud-background__cloud\"></div>\n      </div>\n\n      <div class=\"cloud-background__animation-5\">\n        <div class=\"cloud-background__cloud\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default CloudBackground;\n","import React from 'react';\n// Hooks\nimport useGlobalState from '../../hooks/useGlobalState';\n// Components\nimport PhaseContainer from '../shared/PhaseContainer';\nimport AvatarEntry from '../avatars/AvatarEntry';\nimport Join from './Join';\nimport Waiting from './Waiting';\nimport CloudBackground from './CloudBackground';\n\nfunction Lobby({ players, info }) {\n  const [me] = useGlobalState('me');\n  const [myAvatar] = useGlobalState('myAvatar');\n\n  return (\n    <PhaseContainer phase=\"LOBBY\" allowedPhase=\"LOBBY\" info={info}>\n      <div className=\"lobby__room\">\n        {Object.values(players).map((player, index) => (\n          <AvatarEntry\n            key={player.name}\n            id={player.avatarId}\n            name={player.name}\n            className={`lobby__seat lobby__seat--${index}`}\n            animate\n          />\n        ))}\n\n        {me && myAvatar ? <Waiting players={players} info={info} /> : <Join players={players} info={info} />}\n      </div>\n\n      <CloudBackground />\n    </PhaseContainer>\n  );\n}\n\nexport default Lobby;\n","import React from 'react';\n// Design Resources\nimport { Avatar as AntAvatar, Typography } from 'antd';\nimport { LikeFilled } from '@ant-design/icons';\n// Components\nimport Avatar from '../avatars/Avatar';\n\nfunction ReadyPlayersBar({ players }) {\n  const readyPlayers = Object.values(players).filter((player) => player.ready);\n\n  if (readyPlayers.length === 0) {\n    return <span></span>;\n  }\n\n  return (\n    <div className=\"ready-player-bar\">\n      <AntAvatar.Group size=\"small\">\n        {readyPlayers.map((player) => (\n          <Avatar key={player.name} id={player.avatarId} />\n        ))}\n      </AntAvatar.Group>\n      <span className=\"ready-player-bar__speech-bubble\">\n        <Typography.Text>{readyPlayers.length > 1 ? 'Estamos prontos!' : 'Estou pronto!'}</Typography.Text>\n        <LikeFilled className=\"ready-player-bar__speech-bubble-icon\" />\n      </span>\n    </div>\n  );\n}\n\nexport default ReadyPlayersBar;\n","import React from 'react';\n// Design Resources\nimport { Button, Layout, Space, Typography } from 'antd';\n// State\nimport { useGlobalState, useAmIReady, useAPICall } from '../../hooks';\n// Components\nimport RulesCarousel from './RulesCarousel';\nimport LoadingPage from '../loaders/LoadingPage';\nimport { CheckCircleFilled, MehFilled, RobotFilled, SmileFilled } from '@ant-design/icons';\nimport { useLoading } from '../../hooks';\nimport { getAPI } from '../../adapters';\nimport ReadyPlayersBar from '../shared/ReadyPlayersBar';\n\nfunction Rules({ players, info }) {\n  const [isLoading] = useLoading();\n  const [gameName] = useGlobalState('gameName');\n  const amIReady = useAmIReady(players);\n\n  const onBeReady = useAPICall({\n    apiFunction: getAPI(gameName).makeMeReady,\n    actionName: 'be-ready',\n    successMessage: 'Pronto! Aguarde os outros jogadores estarem prontos',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar continuar',\n  });\n\n  const onBeReadyQue = useAPICall({\n    apiFunction: getAPI(gameName).makeMeReady,\n    actionName: 'be-ready',\n    successMessage: 'Vixi, se fudeu então, pq o jogo vai começar!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar continuar',\n  });\n\n  if (!info?.gameName) {\n    return <LoadingPage />;\n  }\n\n  return (\n    <Layout.Content className=\"rules\">\n      <Typography.Title className=\"center\">Regras do Jogo</Typography.Title>\n\n      <RulesCarousel info={info} className=\"rules__carousel\" ruleClass=\"rules__rule\" />\n\n      <Space className=\"rules__actions\">\n        <Button\n          type=\"primary\"\n          icon={amIReady ? <CheckCircleFilled /> : <SmileFilled />}\n          disabled={isLoading || amIReady}\n          onClick={() => onBeReady({})}\n        >\n          Entendi tudo e estou pronto para jogar!\n        </Button>\n        <Button\n          icon={amIReady ? <CheckCircleFilled /> : <MehFilled />}\n          disabled={isLoading || amIReady}\n          onClick={() => onBeReady({})}\n        >\n          Não entendi nada, mas vamos lá\n        </Button>\n        <Button\n          type=\"primary\"\n          danger\n          icon={amIReady ? <CheckCircleFilled /> : <RobotFilled />}\n          disabled={isLoading || amIReady}\n          onClick={() => onBeReadyQue({})}\n        >\n          Que?\n        </Button>\n      </Space>\n      <ReadyPlayersBar players={players} />\n    </Layout.Content>\n  );\n}\n\nexport default Rules;\n","export default __webpack_public_path__ + \"static/media/arte-ruim-timer.1f16745a.mp3\";","import React, { useRef } from 'react';\nimport { Stage, Layer, Line } from 'react-konva';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n\nconst DrawingCanvas = ({ lines, setLines, className = '' }) => {\n  const isDrawing = useRef(false);\n\n  const handleMouseDown = (e) => {\n    isDrawing.current = true;\n    const pos = e.target.getStage().getPointerPosition();\n    setLines([...lines, [pos.x, pos.y]]);\n  };\n\n  const handleMouseMove = (e) => {\n    // no drawing - skipping\n    if (!isDrawing.current) {\n      return;\n    }\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    let lastLine = lines[lines.length - 1];\n    // add point\n    lastLine = lastLine.concat([point.x, point.y]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLine);\n    setLines(lines.concat());\n  };\n\n  const handleMouseUp = () => {\n    isDrawing.current = false;\n  };\n\n  return (\n    <Stage\n      width={500}\n      height={500}\n      onMouseDown={handleMouseDown}\n      onMousemove={handleMouseMove}\n      onMouseup={handleMouseUp}\n      className={clsx('a-drawing-canvas', className)}\n    >\n      <Layer>\n        {lines.map((line, i) => (\n          <Line\n            key={i}\n            points={line}\n            stroke=\"#222222\"\n            strokeWidth={5}\n            tension={0.5}\n            lineCap=\"round\"\n            globalCompositeOperation=\"source-over\"\n          />\n        ))}\n      </Layer>\n    </Stage>\n  );\n};\n\nDrawingCanvas.propTypes = {\n  lines: PropTypes.array.isRequired,\n  setLines: PropTypes.func.isRequired,\n  className: PropTypes.string,\n};\n\nexport default DrawingCanvas;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nfunction Card({ children, header, footer, color, size, className }) {\n  const baseClass = 'card';\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, className)}>\n      <span className={`${baseClass}__header color-background--${color}`}>{header}</span>\n      <span className={`${baseClass}__text`}>{children}</span>\n      {footer && <span className={`${baseClass}__footer`}>{footer}</span>}\n    </div>\n  );\n}\n\nCard.propTypes = {\n  children: PropTypes.any.isRequired,\n  header: PropTypes.string,\n  footer: PropTypes.string,\n  color: PropTypes.string,\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  className: PropTypes.string,\n};\n\nCard.defaultProps = {\n  header: 'Carta',\n  color: 'none',\n  size: 'medium',\n  className: '',\n};\n\nexport default memo(Card);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTimer } from 'react-timer-hook';\n// Utils\nimport { inNSeconds } from '../../../utils';\n// Components\nimport DrawingCanvas from './DrawingCanvas';\nimport Card from '../../cards/Card';\n\nfunction DrawPhaseDrawStep({ secretCard, onSubmitDrawing }) {\n  const [lines, setLines] = useState([]);\n\n  const { seconds } = useTimer({\n    expiryTimestamp: inNSeconds(11),\n    autoStart: true,\n    onExpire: () =>\n      onSubmitDrawing({\n        drawing: JSON.stringify(lines),\n        cardId: secretCard.id,\n      }),\n  });\n\n  return (\n    <div className=\"a-draw-phase-draw-step\">\n      <Card\n        size=\"large\"\n        header=\"Desenhe\"\n        footer={Array(secretCard?.level).fill('•').join('')}\n        className=\"a-draw-phase-draw-step__card\"\n        color=\"yellow\"\n      >\n        {secretCard?.text}\n        <span className=\"a-draw-phase-draw-step__timer\">{seconds - 1}</span>\n      </Card>\n      <DrawingCanvas lines={lines} setLines={setLines} />\n    </div>\n  );\n}\n\nDrawPhaseDrawStep.propTypes = {\n  secretCard: PropTypes.shape({\n    text: PropTypes.string,\n    level: PropTypes.number,\n  }).isRequired,\n  onSubmitDrawing: PropTypes.func.isRequired,\n};\n\nexport default DrawPhaseDrawStep;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Spin } from 'antd';\n// Components\nimport ReadyPlayersBar from './ReadyPlayersBar';\nimport Title from './Title';\nimport Instruction from './Instruction';\n\nconst WaitingRoom = ({ players, title, instruction, children }) => {\n  return (\n    <div className=\"waiting-room\">\n      <Title>{title}</Title>\n      <Spin />\n      <Instruction>{instruction}</Instruction>\n      {children}\n      <ReadyPlayersBar players={players} />\n    </div>\n  );\n};\n\nWaitingRoom.propTypes = {\n  players: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n  instruction: PropTypes.string.isRequired,\n  children: PropTypes.any,\n};\n\nexport default WaitingRoom;\n","export default __webpack_public_path__ + \"static/media/rodada-title.2e3f9c1d.svg\";","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Resources\nimport { AVATAR_DESCRIPTIONS_BR } from '../../utils/constants';\n// Components\nimport Avatar from './Avatar';\n\nfunction AvatarName({\n  player,\n  size = 'default',\n  className = '',\n  withDescription = false,\n  uppercase = false,\n}) {\n  const baseClass = 'avatar-name';\n\n  return (\n    <span\n      className={clsx(baseClass, `${baseClass}--${size}`, uppercase && `${baseClass}--uppercase`, className)}\n    >\n      <Avatar id={player.avatarId} className=\"avatar-name__avatar\" size={size} />\n      <span className=\"avatar-name__name\">{player.name}</span>\n      {withDescription && (\n        <span className=\"avatar-name__name\">, {AVATAR_DESCRIPTIONS_BR[player.avatarId]}</span>\n      )}\n    </span>\n  );\n}\n\nAvatarName.propTypes = {\n  player: PropTypes.shape({\n    avatarId: PropTypes.number,\n    name: PropTypes.string,\n  }).isRequired,\n  size: PropTypes.oneOf(['small', 'default', 'large']),\n  withDescription: PropTypes.bool,\n  uppercase: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nexport default memo(AvatarName);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Button } from 'antd';\n// Hook and Utils\nimport { useTimer } from 'react-timer-hook';\nimport { inNSeconds } from '../../utils';\n\nfunction TimedButton({ duration, label, onExpire, showTimer, ...props }) {\n  const { seconds } = useTimer({\n    expiryTimestamp: inNSeconds(duration),\n    autoStart: true,\n    onExpire: showTimer ? onExpire : undefined,\n  });\n\n  const timeClass = 'timed-button__time';\n\n  return (\n    <Button {...props}>\n      {label} {showTimer && <span className={clsx(timeClass, `${timeClass}--${props.type}`)}>{seconds}</span>}\n    </Button>\n  );\n}\n\nTimedButton.propTypes = {\n  duration: PropTypes.number,\n  label: PropTypes.any.isRequired,\n  onExpire: PropTypes.func.isRequired,\n  showTimer: PropTypes.bool,\n};\n\nTimedButton.defaultProps = {\n  duration: 10,\n  showTimer: true,\n};\n\nexport default TimedButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Tag } from 'antd';\n// Images\nimport rodadaTitle from '../../images/rodada-title.svg';\n// Components\nimport AvatarName from '../avatars/AvatarName';\nimport TimedButton from './TimedButton';\n\nfunction Team({ team, players, className }) {\n  return (\n    <div className={className}>\n      <h1>Time {team.name}</h1>\n      <ul className=\"round-announcement__team-members\">\n        {team.members.map((playerName) => (\n          <li key={`team-member-${playerName}`} className=\"round-announcement__team-member\">\n            <AvatarName player={players[playerName]} />\n          </li>\n        ))}\n      </ul>\n      <Tag className=\"round-announcement__points\" color=\"blue\">\n        {team.score} {team.score > 1 ? 'pontos' : 'ponto'}\n      </Tag>\n    </div>\n  );\n}\n\nfunction RoundAnnouncement({ round, onPressButton, buttonText, time, teams, players, children }) {\n  return (\n    <div className=\"round-announcement\">\n      {Boolean(teams?.A) && (\n        <Team className=\"round-announcement__team-left\" team={teams.A} players={players} />\n      )}\n\n      <div className=\"round-announcement__main\">\n        <div className=\"round-announcement__title\">\n          <img src={rodadaTitle} alt=\"Rodada\" />\n        </div>\n        <div className=\"round-announcement__round-wrapper\">\n          <div className=\"round-announcement__circle\"></div>\n          <div className=\"round-announcement__number\">{round ?? 0}</div>\n        </div>\n\n        {children}\n\n        {Boolean(onPressButton) && !Boolean(time) && (\n          <Button type=\"primary\" onClick={onPressButton} className=\"round-announcement__go-button\">\n            {buttonText}\n          </Button>\n        )}\n\n        {Boolean(onPressButton) && Boolean(time) && (\n          <TimedButton\n            label={buttonText}\n            type=\"primary\"\n            onClick={onPressButton}\n            onExpire={onPressButton}\n            duration={time}\n            showTimer\n          />\n        )}\n      </div>\n\n      {Boolean(teams?.B) && (\n        <Team className=\"round-announcement__team-right\" team={teams.B} players={players} />\n      )}\n    </div>\n  );\n}\n\nRoundAnnouncement.propTypes = {\n  round: PropTypes.number,\n  onPressButton: PropTypes.func,\n  buttonText: PropTypes.string,\n  time: PropTypes.number,\n  players: PropTypes.object,\n  teams: PropTypes.object,\n};\n\nRoundAnnouncement.defaultProps = {\n  buttonText: 'Prosseguir',\n  time: 0,\n};\n\nexport default RoundAnnouncement;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Loading from '../loaders/Loading';\n\nfunction StepSwitcher({ children, step, conditions }) {\n  if (!children[step]) {\n    return <Loading />;\n  }\n\n  return (conditions?.[step] ?? true) && <Fragment>{children[step]}</Fragment>;\n}\n\nStepSwitcher.propTypes = {\n  children: PropTypes.any.isRequired,\n  step: PropTypes.number.isRequired,\n  conditions: PropTypes.arrayOf(PropTypes.bool),\n};\n\nexport default StepSwitcher;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Space } from 'antd';\nimport { FireFilled } from '@ant-design/icons';\n// State & Hooks\nimport useGlobalState from '../../hooks/useGlobalState';\nimport { useAPICall, useLoading } from '../../hooks';\n\nfunction AdminForceNextPhase({ goToNextPhase, className = '' }) {\n  const [isLoading] = useLoading();\n  const [isAdmin] = useGlobalState('isAdmin');\n\n  const onGoToNextPhase = useAPICall({\n    apiFunction: goToNextPhase,\n    actionName: 'force-next-phase',\n    successMessage: 'Funcionou, próxima fase!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar ir para a próxima fase',\n  });\n\n  if (!isAdmin) return <span></span>;\n\n  return (\n    <Space className={clsx('admin-only-container', className)}>\n      <Button\n        icon={<FireFilled />}\n        type=\"primary\"\n        danger\n        onClick={() => onGoToNextPhase({})}\n        disabled={isLoading}\n      >\n        ADMIN: Force Next Phase\n      </Button>\n    </Space>\n  );\n}\n\nAdminForceNextPhase.propTypes = {\n  goToNextPhase: PropTypes.func.isRequired,\n  className: PropTypes.string,\n};\n\nexport default AdminForceNextPhase;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport useSound from 'use-sound';\n\n// State & Hooks\nimport { useGlobalState, useAmIReady, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { ARTE_RUIM_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\nimport arteRuimTimer from '../../../sounds/arte-ruim-timer.mp3';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport DrawPhaseDrawStep from './DrawPhaseDrawStep';\nimport WaitingRoom from '../../shared/WaitingRoom';\nimport RoundAnnouncement from '../../shared/RoundAnnouncement';\nimport Instruction from '../../shared/Instruction';\nimport StepSwitcher from '../../shared/StepSwitcher';\nimport AdminForceNextPhase from '../../shared/AdminForceNextPhase';\n\nfunction DrawPhase({ players, state, info }) {\n  const amIReady = useAmIReady(players, state);\n  const [me] = useGlobalState('me');\n  const [step, setStep] = useState(0);\n  const [secretCard, setSecretCard] = useState({});\n  const [play] = useSound(arteRuimTimer, { volume: 0.4 });\n\n  useEffect(() => {\n    setSecretCard(players[me].currentCard ?? {});\n  }, [players, me]);\n\n  const onSubmitDrawing = useAPICall({\n    apiFunction: ARTE_RUIM_API.submitDrawing,\n    actionName: 'submit-drawing',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: 'Acabou o tempo! Aguarde enquanto os outros participantes desenham',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar o desenho',\n  });\n\n  const onStartDrawing = () => {\n    play();\n    setStep(1);\n  };\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ARTE_RUIM.DRAW}\n      className=\"draw-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!amIReady, !amIReady]}>\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state?.round}\n          onPressButton={onStartDrawing}\n          buttonText=\"Um dó, lá, si... vamos ir... já!\"\n        >\n          <Instruction white>\n            Você terá 10 segundos para ler a sua carta e desenhá-la. Aperte o botão quando estiver pronto!\n            <br />\n            Fique esperto porque começa assim que você apertar. Não 'seje' lerdo.\n          </Instruction>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <DrawPhaseDrawStep secretCard={secretCard} onSubmitDrawing={onSubmitDrawing} />\n\n        {/* Step 2 */}\n        <Fragment>\n          <WaitingRoom\n            players={players}\n            title=\"Pronto!\"\n            instruction=\"Vamos aguardar enquanto os outros jogadores terminam seus desenhos!\"\n          />\n          <AdminForceNextPhase goToNextPhase={ARTE_RUIM_API.goToNextPhase} />\n        </Fragment>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default DrawPhase;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nconst getPathFromKonvaLines = (lines) => {\n  const result = lines.map((lineArr) => {\n    let path = '';\n    for (let x = 0, y = 1; y < lineArr.length; x += 2, y += 2) {\n      if (lineArr[x + 2] && lineArr[y + 2]) {\n        path += `M${lineArr[x]},${lineArr[y]} L${lineArr[x + 2]},${lineArr[y + 2]}`;\n      }\n    }\n\n    return path;\n  });\n\n  return result;\n};\n\nfunction CanvasSVG({ drawing = '', className = '', size = 250 }) {\n  const konvaLines = JSON.parse(drawing);\n  const paths = getPathFromKonvaLines(konvaLines);\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 500 500\"\n      overflow=\"hidden\"\n      className={className}\n      style={{ width: `${size}px` }}\n    >\n      <defs />\n      {paths.map((path, index) => (\n        <path\n          key={`${drawing}-${index}`}\n          d={path}\n          fill=\"none\"\n          stroke=\"#000\"\n          strokeWidth=\"4\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit=\"10\"\n        />\n      ))}\n    </svg>\n  );\n}\n\nCanvasSVG.propTypes = {\n  drawing: PropTypes.string.isRequired,\n  className: PropTypes.string,\n};\n\nexport default memo(CanvasSVG);\n","import React from 'react';\nimport { getColorFromLetter } from '../../../utils';\n\nfunction Ribbon({ cardEntryId }) {\n  const [, , letter] = cardEntryId.split('-');\n  return (\n    <div className=\"a-ribbon\">\n      <div\n        className={`a-ribbon__content a-ribbon__content--${letter} color-background--${getColorFromLetter(\n          letter\n        )}`}\n      >\n        {letter}\n      </div>\n    </div>\n  );\n}\n\nexport default Ribbon;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Components\nimport CanvasSVG from './CanvasSVG';\nimport Ribbon from './Ribbon';\n\nfunction EvaluationAllDrawings({ drawings, activeItem, onActivateItem, votes, canvasSize }) {\n  const liButtonBaseClass = 'a-evaluation-all-drawings__li-drawing-button';\n\n  return (\n    <ul className=\"a-evaluation-all-drawings\">\n      {drawings?.map((drawingEntry) => {\n        const canvasEntryId = `drawing-${drawingEntry.id}`;\n        const isActive = activeItem === canvasEntryId;\n        return (\n          <li\n            key={canvasEntryId}\n            className={clsx(liButtonBaseClass, isActive && `${liButtonBaseClass}--active`)}\n            onClick={() => onActivateItem(canvasEntryId)}\n          >\n            {votes?.[canvasEntryId] && <Ribbon cardEntryId={votes[canvasEntryId]} />}\n            <CanvasSVG\n              drawing={drawingEntry.drawing}\n              className=\"a-evaluation-all-drawings__drawing\"\n              size={canvasSize}\n            />\n            <span className=\"a-evaluation-all-drawings__artist\">{drawingEntry.playerName}</span>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nEvaluationAllDrawings.propTypes = {\n  activeItem: PropTypes.string,\n  drawings: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      drawing: PropTypes.string,\n    })\n  ),\n  onActiveItem: PropTypes.func,\n  votes: PropTypes.object,\n  canvasSize: PropTypes.number,\n};\n\nexport default EvaluationAllDrawings;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { WarningOutlined } from '@ant-design/icons';\nimport { getColorFromLetter } from '../../utils';\n// Components\nimport Card from './Card';\n\nfunction ArteRuimCard({ text, level, header = 'X' }) {\n  return (\n    <Card\n      color={getColorFromLetter(header)}\n      header={header}\n      size=\"medium\"\n      footer={Array(level).fill('•').join('')}\n    >\n      {text ?? <WarningOutlined />}\n    </Card>\n  );\n}\n\nArteRuimCard.propTypes = {\n  text: PropTypes.string.isRequired,\n  header: PropTypes.string,\n  level: PropTypes.number,\n};\n\nexport default memo(ArteRuimCard);\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Utils\nimport { LETTERS } from '../../../utils/constants';\n// Components\nimport Card from '../../cards/ArteRuimCard';\n\nfunction EvaluationAllCards({ cards, activeItem, onActivateItem, votes }) {\n  const liButtonBaseClass = 'a-evaluation-all-cards__li-card-button';\n\n  return (\n    <ul className=\"a-evaluation-all-cards\">\n      {cards.map((cardEntry, index) => {\n        const letter = LETTERS[index];\n        const cardEntryId = `card-${cardEntry.id}-${letter}`;\n        const isActive = activeItem === cardEntryId;\n        const isUsed = Object.values(votes).includes(cardEntryId);\n\n        return (\n          <li\n            role=\"button\"\n            key={cardEntryId}\n            className={clsx(\n              liButtonBaseClass,\n              isActive && `${liButtonBaseClass}--active`,\n              isUsed && `${liButtonBaseClass}--used`\n            )}\n            onClick={() => onActivateItem(cardEntryId)}\n          >\n            <Card text={cardEntry.text} level={cardEntry.level} header={letter} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nEvaluationAllCards.propTypes = {\n  activeItem: PropTypes.string,\n  cards: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n    })\n  ),\n  onActiveItem: PropTypes.func,\n  votes: PropTypes.object,\n};\n\nexport default EvaluationAllCards;\n","import React, { memo } from 'react';\n// Design Resources\nimport { Slider } from 'antd';\n// State & Hooks\nimport { useGlobalState } from '../../../hooks';\n\nconst CanvasResizer = () => {\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n\n  return (\n    <div className=\"a-canvas-resizer\">\n      <div className=\"a-canvas-resizer__label\">Tamanho das Images</div>\n      <Slider\n        className=\"a-canvas-resizer__slider\"\n        defaultValue={canvasSize}\n        min={100}\n        max={500}\n        step={50}\n        onChange={setCanvasSize}\n      />\n    </div>\n  );\n};\n\nexport default memo(CanvasResizer);\n","import React, { Fragment, useCallback, useState } from 'react';\n// Design Resources\nimport { Button, Space } from 'antd';\nimport { CloudUploadOutlined } from '@ant-design/icons';\n// Hooks\nimport { useAmIReady, useGlobalState, useAPICall } from '../../../hooks';\n// Utils\nimport { ARTE_RUIM_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport WaitingRoom from '../../shared/WaitingRoom';\nimport EvaluationAllDrawings from './EvaluationAllDrawings';\nimport EvaluationAllCards from './EvaluationAllCards';\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport CanvasResizer from './CanvasResizer';\nimport Title from '../../shared/Title';\nimport Instruction from '../../shared/Instruction';\nimport StepSwitcher from '../../shared/StepSwitcher';\nimport AdminForceNextPhase from '../../shared/AdminForceNextPhase';\n\nfunction prepareVotes(votes) {\n  return Object.entries(votes).reduce((acc, [drawingEntryId, cardEntryId]) => {\n    const [, drawingId] = drawingEntryId.split('-');\n    const [, cardId] = cardEntryId.split('-');\n    acc[drawingId] = cardId;\n    return acc;\n  }, {});\n}\n\nfunction EvaluationPhase({ players, state, info }) {\n  const amIReady = useAmIReady(players, state);\n  const [canvasSize] = useGlobalState('canvasSize');\n  const [step, setStep] = useState(0);\n  const [votes, setVotes] = useState({});\n  const [activeItem, setActiveItem] = useState(null);\n\n  const onSubmitVoting = useAPICall({\n    apiFunction: ARTE_RUIM_API.submitVoting,\n    actionName: 'submit-drawing',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage: 'Avaliação enviada! Agora aguarde os outros jogadores',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar sua avaliação',\n  });\n\n  const onActivateItem = useCallback(\n    (entryId) => {\n      const [type] = entryId.split('-');\n      if (!activeItem || activeItem.startsWith(type)) {\n        setActiveItem(entryId);\n      } else {\n        if (type === 'card') {\n          setVotes((prevVotes) => {\n            return {\n              ...prevVotes,\n              [activeItem]: entryId,\n            };\n          });\n        } else {\n          setVotes((prevVotes) => {\n            return {\n              ...prevVotes,\n              [entryId]: activeItem,\n            };\n          });\n        }\n        setActiveItem(null);\n      }\n    },\n    [activeItem]\n  );\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ARTE_RUIM.EVALUATION}\n      className=\"a-evaluation-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!amIReady]}>\n        {/*Step 0 */}\n        <div className=\"a-evaluation-phase__step-one\">\n          <CanvasResizer />\n          <Title>Adivinhação</Title>\n          <Instruction>\n            Encontre os pares de desenho e carta clicando em uma carta ou desenho e em seguida clicando em seu\n            par.\n          </Instruction>\n          <Instruction>\n            Uma bandeirinha aparecerá no topo de cada desenho com a cor e letra da carta que você selecionou.\n            Quando encontrar todos os pares, envie sua avaliação!\n          </Instruction>\n\n          <EvaluationAllDrawings\n            drawings={state?.drawings ?? []}\n            activeItem={activeItem}\n            onActivateItem={onActivateItem}\n            votes={votes}\n            canvasSize={canvasSize}\n          />\n\n          <EvaluationAllCards\n            cards={state?.cards ?? []}\n            activeItem={activeItem}\n            onActivateItem={onActivateItem}\n            votes={votes}\n          />\n\n          <Space className=\"a-evaluation-phase__action-button\">\n            <Button\n              type=\"primary\"\n              onClick={() => onSubmitVoting({ votes: prepareVotes(votes) })}\n              disabled={Object.values(votes).length < state.drawings.length}\n              icon={<CloudUploadOutlined />}\n            >\n              Enviar sua avaliação\n            </Button>\n          </Space>\n        </div>\n\n        {/*Step 1 */}\n        <Fragment>\n          <WaitingRoom\n            players={players}\n            title=\"Pronto!\"\n            instruction=\"Vamos aguardar enquanto os outros jogadores terminam de avaliar!\"\n          />\n          <AdminForceNextPhase goToNextPhase={ARTE_RUIM_API.goToNextPhase} />\n        </Fragment>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default EvaluationPhase;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Components\nimport AvatarEntry from '../../avatars/AvatarEntry';\n\nfunction GalleryWindowCredits({ artist, artistAvatarId }) {\n  return (\n    <div className=\"a-gallery-window__credits\">\n      <div className=\"a-gallery-window__label\">Artista</div>\n      <span className=\"a-gallery-window__artist-name\">\n        <AvatarEntry id={artistAvatarId} name={artist} />\n      </span>\n    </div>\n  );\n}\n\nGalleryWindowCredits.propTypes = {\n  artist: PropTypes.string,\n  artistAvatarId: PropTypes.number,\n};\n\nexport default memo(GalleryWindowCredits);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Avatar as AntAvatar } from 'antd';\nimport { MessageFilled } from '@ant-design/icons';\n// Components\nimport Avatar from '../../avatars/Avatar';\n\nfunction GalleryWindowGuesses({ playersSay, players, cards }) {\n  return (\n    <div className=\"a-gallery-window__guesses\">\n      <div className=\"a-gallery-window__label\">Participantes votaram</div>\n      {Object.entries(playersSay).map(([cardId, playersNames], index) => {\n        const card = cards.find((i) => i.id === cardId);\n        return (\n          <div key={`guess-${cardId}-${index}`} className=\"a-gallery-window__guess\">\n            <div className=\"a-gallery-window__speech-bubble\">\n              <MessageFilled className=\"a-gallery-window__speech-bubble-icon\" /> {card.text}\n            </div>\n            <div className=\"a-gallery-window__players\">\n              <AntAvatar.Group>\n                {playersNames.map((playerName) => (\n                  <Avatar\n                    id={players[playerName].avatarId}\n                    key={`guess-avatar-${players[playerName].avatarId}`}\n                  />\n                ))}\n              </AntAvatar.Group>\n              <span className=\"a-gallery-window__players-names\">{playersNames.join(', ')}</span>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nGalleryWindowGuesses.propTypes = {\n  playersSay: PropTypes.object,\n  players: PropTypes.object,\n};\n\nexport default memo(GalleryWindowGuesses);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTimer } from 'react-timer-hook';\n// Design Resources\nimport { Button } from 'antd';\nimport {\n  PauseOutlined,\n  PlayCircleOutlined,\n  StepBackwardOutlined,\n  StepForwardOutlined,\n  TrophyOutlined,\n} from '@ant-design/icons';\n// Utils\nimport { inNSeconds } from '../../../utils';\n\nfunction GalleryWindowControls({ galleryLength, activeIndex, setActiveIndex, setStep }) {\n  const { seconds, isRunning, pause, resume } = useTimer({\n    expiryTimestamp: inNSeconds(10 * galleryLength),\n    autoStart: true,\n    onExpire: () => setStep(1),\n  });\n\n  // Automatically go to the next window every 10 seconds\n  useEffect(() => {\n    if (seconds < 10 * galleryLength && seconds > 0 && seconds % 10 === 0) {\n      setActiveIndex((s) => Math.min(s + 1, galleryLength - 1));\n    }\n  }, [seconds, setActiveIndex, galleryLength]);\n\n  const previousStep = () => {\n    setActiveIndex((s) => Math.max(s - 1, 0));\n  };\n\n  const nextStep = () => {\n    setActiveIndex((s) => Math.min(s + 1, galleryLength - 1));\n  };\n\n  return (\n    <div className=\"a-gallery-window__controls\">\n      <div className=\"a-gallery-window__timer-bar\">\n        <span style={{ width: `${Math.abs((10 * seconds) / galleryLength - 100)}%` }}></span>\n      </div>\n      <Button\n        size=\"large\"\n        icon={<StepBackwardOutlined />}\n        onClick={previousStep}\n        disabled={activeIndex === 0}\n      >\n        Desenho Anterior\n      </Button>\n      <Button\n        size=\"large\"\n        icon={isRunning ? <PauseOutlined /> : <PlayCircleOutlined />}\n        onClick={isRunning ? pause : resume}\n      />\n      <Button size=\"large\" onClick={nextStep} disabled={activeIndex === galleryLength - 1}>\n        Próximo Desenho <StepForwardOutlined />\n      </Button>\n      <Button size=\"large\" onClick={() => setStep(1)} icon={<TrophyOutlined />}>\n        Ver Ranking\n      </Button>\n    </div>\n  );\n}\n\nGalleryWindowControls.propTypes = {\n  galleryLength: PropTypes.number,\n  activeIndex: PropTypes.number,\n  setActiveIndex: PropTypes.func,\n  setStep: PropTypes.func,\n};\n\nexport default GalleryWindowControls;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { StarFilled } from '@ant-design/icons';\n\nfunction StarPoints({ quantity, keyPrefix, className = '' }) {\n  if (!quantity || quantity < 1) {\n    return <span></span>;\n  }\n  const starsArray = Array.from({ length: quantity }, (_, i) => <StarFilled key={`${keyPrefix}-${i}`} />);\n  return (\n    <span className={clsx('star-points', className)}>\n      + <span className=\"star-points__stars\">{starsArray}</span> point{quantity > 1 ? 's' : ''}\n    </span>\n  );\n}\n\nStarPoints.propTypes = {\n  quantity: PropTypes.number,\n  className: PropTypes.string,\n  keyPrefix: PropTypes.string.isRequired,\n};\n\nexport default memo(StarPoints);\n","import React, { Fragment, memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Avatar as AntAvatar, Typography } from 'antd';\nimport { CrownFilled, DeleteFilled } from '@ant-design/icons';\n// Components\nimport Avatar from '../../avatars/Avatar';\nimport StarPoints from '../../shared/StarPoints';\n\nfunction GalleryWindowResult({\n  artist,\n  correctAnswerId,\n  correctAnswerText,\n  playersPoints,\n  playersSay,\n  players,\n}) {\n  const correctGuesses = Object.values(playersSay?.[correctAnswerId] ?? {});\n\n  return (\n    <div className=\"a-gallery-window__result\">\n      <div className=\"a-gallery-window__label\">E a carta correta é</div>\n      <div className=\"a-gallery-window__speech-bubble\">\n        <CrownFilled className=\"a-gallery-window__speech-bubble-icon\" />\n        {correctAnswerText}\n      </div>\n      {correctGuesses.length ? (\n        <Fragment>\n          <div className=\"a-gallery-window__players\">\n            <AntAvatar.Group>\n              {correctGuesses.map((playerName) => {\n                return (\n                  <Avatar key={`correct-guess-avatar-${playerName}`} id={players[playerName].avatarId} />\n                );\n              })}\n            </AntAvatar.Group>\n            <StarPoints quantity={2} keyPrefix={`guessers-points-${artist}`} />\n            <span className=\"a-gallery-window__players-names\">{correctGuesses.join(', ')}</span>\n          </div>\n          <div className=\"a-gallery-window__artist-points\">\n            <Avatar id={players[artist].avatarId} />{' '}\n            <StarPoints quantity={playersPoints?.[artist]} keyPrefix={`artist-points-${artist}`} />{' '}\n            <span className=\"a-gallery-window__players-names\">{artist}</span>\n          </div>\n        </Fragment>\n      ) : (\n        <Typography.Text className=\"a-gallery-window__no-wins\">\n          <DeleteFilled /> Nossa, ninguém acertou. Esse desenho deve ter sido muito ruim.\n        </Typography.Text>\n      )}\n    </div>\n  );\n}\n\nGalleryWindowResult.propTypes = {\n  artist: PropTypes.string,\n  correctAnswer: PropTypes.string,\n  playersPoints: PropTypes.object,\n  playersSay: PropTypes.object,\n  players: PropTypes.object,\n};\n\nexport default memo(GalleryWindowResult);\n","import React, { memo } from 'react';\n\n// Hooks\nimport { useGlobalState } from '../../../hooks';\n// Components\nimport CanvasSVG from './CanvasSVG';\nimport GalleryWindowCredits from './GalleryWindowCredits';\nimport GalleryWindowGuesses from './GalleryWindowGuesses';\nimport GalleryWindowControls from './GalleryWindowControls';\nimport GalleryWindowResult from './GalleryWindowResult';\nimport CanvasResizer from './CanvasResizer';\n\nfunction GalleryWindow({ window, galleryLength, players, activeIndex, setActiveIndex, setStep, cards }) {\n  const [canvasSize] = useGlobalState('canvasSize');\n\n  const { drawing, artist, id, text, level, playersPoints, playersSay } = window;\n\n  return (\n    <div className=\"a-gallery-window\">\n      <CanvasResizer />\n      <div className=\"a-gallery-window__drawing-container\">\n        <CanvasSVG\n          key={window.correctAnswer}\n          drawing={drawing}\n          size={canvasSize}\n          className=\"a-gallery-window__drawing\"\n        />\n      </div>\n\n      <GalleryWindowCredits artist={artist} artistAvatarId={players[artist].avatarId} />\n\n      <GalleryWindowGuesses players={players} playersSay={playersSay} cards={cards} />\n\n      <GalleryWindowResult\n        artist={artist}\n        correctAnswerId={id}\n        correctAnswerText={text}\n        correctAnswerLevel={level}\n        playersPoints={playersPoints}\n        playersSay={playersSay}\n        players={players}\n      />\n\n      <GalleryWindowControls\n        galleryLength={galleryLength}\n        activeIndex={activeIndex}\n        setActiveIndex={setActiveIndex}\n        setStep={setStep}\n      />\n    </div>\n  );\n}\n\nexport default memo(GalleryWindow);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTimer } from 'react-timer-hook';\n// Design Resources\nimport { CrownFilled } from '@ant-design/icons';\n// Utils\nimport { inNSeconds } from '../../utils';\n// Components\nimport Avatar from '../avatars/Avatar';\n\nfunction RankingBoard({ players, ranking }) {\n  const [displayStep, setDisplayStep] = useState(0);\n  const [sortedRanking, setSortedRanking] = useState([]);\n  const [positions, setPositions] = useState([]);\n\n  const maxPoints = ranking[0].newScore;\n\n  const rankByFinalScore = () => {\n    setSortedRanking(ranking.sort((a, b) => (a.newScore < b.newScore ? 1 : -1)));\n    setDisplayStep(3);\n  };\n\n  const { seconds } = useTimer({\n    expiryTimestamp: inNSeconds(4),\n    autoStart: true,\n    onExpire: () => rankByFinalScore(),\n  });\n\n  // Rank by previousScore\n  useEffect(() => {\n    setSortedRanking(ranking.sort((a, b) => (a.previousScore < b.previousScore ? 1 : -1)));\n  }, []); // eslint-disable-line\n\n  // Show gained points\n  useEffect(() => {\n    if (seconds === 3) {\n      setDisplayStep(1);\n    } else if (seconds === 2) {\n      setDisplayStep(2);\n    }\n  }, [seconds]);\n\n  // Determine position number in rank\n  useEffect(() => {\n    const property = displayStep < 3 ? 'previousScore' : 'newScore';\n\n    let lastPosition = 1;\n    let lastPoints = sortedRanking?.[0]?.[property] ?? 0;\n    setPositions(\n      sortedRanking.map((entry) => {\n        if (entry[property] < lastPoints) {\n          lastPoints = entry[property];\n          lastPosition += 1;\n        }\n\n        return lastPosition;\n      })\n    );\n  }, [sortedRanking, displayStep]);\n\n  return (\n    <div className=\"ranking-board\">\n      {sortedRanking.map((entry, index) => {\n        const { playerName, newScore, previousScore, gainedPoints } = entry;\n        return (\n          <div className={`ranking-board__row ranking-board__row--${index}`} key={`ranking-${playerName}`}>\n            <div className=\"ranking-board__cell-crown\">\n              {newScore > 0 && maxPoints === newScore && displayStep >= 3 && (\n                <CrownFilled className=\"ranking-board__crown-icon\" />\n              )}\n            </div>\n            <div className=\"ranking-board__cell-position\">#{positions?.[index] ?? ''}</div>\n            <div className=\"ranking-board__cell-player\">\n              <div className=\"ranking-board__avatar\">\n                <Avatar id={players[playerName].avatarId} />\n              </div>\n              <div className=\"ranking-board__name\">{playerName}</div>\n            </div>\n            <div className=\"ranking-board__cell-points\">{previousScore}</div>\n            {displayStep >= 1 && <div className=\"ranking-board__cell-points-plus\">+{gainedPoints}</div>}\n            {displayStep >= 2 && <div className=\"ranking-board__cell-points-total\">{newScore}</div>}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nRankingBoard.propTypes = {\n  players: PropTypes.object,\n  ranking: PropTypes.arrayOf(\n    PropTypes.shape({\n      playerName: PropTypes.string,\n      previousScore: PropTypes.number,\n      gainedPoints: PropTypes.number,\n      newScore: PropTypes.number,\n    })\n  ),\n};\n\nexport default RankingBoard;\n","import React, { Fragment, useEffect, useState } from 'react';\n// Design Resources\nimport { Button } from 'antd';\nimport { PictureOutlined, RocketFilled } from '@ant-design/icons';\n// State & Hooks\nimport useGlobalState from '../../../hooks/useGlobalState';\nimport { useAPICall, useLoading } from '../../../hooks';\n// Resources and Utils\nimport { ARTE_RUIM_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport GalleryWindow from './GalleryWindow';\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport AdminOnly from '../../shared/AdminOnly';\nimport RankingBoard from '../../shared/RankingBoard';\nimport Title from '../../shared/Title';\nimport Instruction from '../../shared/Instruction';\nimport StepSwitcher from '../../shared/StepSwitcher';\n\nfunction GalleryPhase({ players, state, info }) {\n  const [isLoading] = useLoading();\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [step, setStep] = useState(0);\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n  const [cachedCanvasSize, setCachedCanvasSize] = useState(canvasSize);\n\n  // The gallery needs a bigger image, its annoying that we are changing the users settings but whatever\n  useEffect(() => {\n    if (step === 0) {\n      setCachedCanvasSize(canvasSize);\n      setCanvasSize(500);\n    } else {\n      setCanvasSize(cachedCanvasSize);\n    }\n  }, [step]); // eslint-disable-line\n\n  const onGoToNextRound = useAPICall({\n    apiFunction: ARTE_RUIM_API.goToNextPhase,\n    actionName: 'go-to-next-phase',\n    successMessage: 'Ranking!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar ir para a próxima fase',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ARTE_RUIM.GALLERY}\n      className=\"a-gallery-phase\"\n    >\n      <StepSwitcher step={step}>\n        {/* Step 0 */}\n        <div className=\"a-gallery-phase__windows\">\n          <Title>Galeria de Arte</Title>\n          {state?.gallery && (\n            <GalleryWindow\n              window={state.gallery[activeIndex]}\n              galleryLength={state.gallery.length}\n              cards={state.cards}\n              players={players}\n              activeIndex={activeIndex}\n              setActiveIndex={setActiveIndex}\n              setStep={setStep}\n            />\n          )}\n        </div>\n\n        {/* Step 1 */}\n        <Fragment>\n          <Title>{state.pointsToVictory >= 0 ? 'Ranking' : 'Game Over'}</Title>\n          <RankingBoard players={players} ranking={state.ranking} />\n          {state.pointsToVictory >= 0 && (\n            <Instruction contained>\n              Faltam <strong>{state.pointsToVictory}</strong> pontos para o jogo acabar...\n            </Instruction>\n          )}\n\n          <Button size=\"large\" onClick={() => setStep(0)} icon={<PictureOutlined />}>\n            Ver Galeria\n          </Button>\n          <AdminOnly>\n            <Button\n              icon={<RocketFilled />}\n              danger\n              type=\"primary\"\n              onClick={() => onGoToNextRound({})}\n              disabled={isLoading}\n            >\n              Ir para próxima rodada ou game over\n            </Button>\n          </AdminOnly>\n        </Fragment>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default GalleryPhase;\n","export default __webpack_public_path__ + \"static/media/game-over-title.7073f1c0.svg\";","import React from 'react';\n// Design Resources\nimport { Button, Popconfirm, Progress } from 'antd';\nimport { RocketFilled } from '@ant-design/icons';\n// Images\nimport gameOverTitle from '../../images/game-over-title.svg';\n// Utils\nimport { useAPICall, useLoading } from '../../hooks';\nimport { GAME_API } from '../../adapters';\nimport { AVATAR_DESCRIPTIONS_BR } from '../../utils/constants';\n// Components\nimport PhaseContainer from './PhaseContainer';\nimport Avatar from '../avatars/Avatar';\nimport AdminOnly from './AdminOnly';\n\nfunction GameOver({ info, state, children }) {\n  const [isLoading] = useLoading();\n\n  const onPlayAgain = useAPICall({\n    apiFunction: GAME_API.playAgain,\n    actionName: 'play-=again',\n    successMessage: 'Jogando novamente o mesmo jogo!',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar ir reiniciar o jogo',\n  });\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase=\"GAME_OVER\" className=\"game-over\">\n      <div className=\"game-over__title\">\n        <img src={gameOverTitle} alt=\"Game Over\" />\n      </div>\n\n      {Boolean(state.winners) && (\n        <div className=\"game-over__winner-container\">\n          <div className=\"game-over__text\">\n            Jogo concluido e {state.winners.length > 1 ? 'os vencedores são' : 'o vencedor é'}:\n          </div>\n          <ul className=\"game-over__winners\">\n            {state.winners.map((winner) => {\n              return (\n                <li className=\"game-over__winner\" key={`winner-${winner.name}`}>\n                  <Avatar className=\"game-over__avatar\" id={winner.avatarId ?? 25} />\n                  <div className=\"game-over__winner-name\">\n                    <strong>{winner.name ?? '?'}</strong>, {AVATAR_DESCRIPTIONS_BR[winner.avatarId]}\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      )}\n\n      {Boolean(state.team) && (\n        <div className=\"game-over__winner\">\n          <div className=\"game-over__text\">Jogo concluido.</div>\n          <Progress\n            type=\"circle\"\n            strokeColor={{\n              '0%': '#ff0000',\n              '70%': '#ff0000',\n              '100%': '#87d068',\n            }}\n            percent={state.team.score ?? 0}\n          />\n          <div className=\"game-over__text\">\n            {state.team.victory ? 'Parabéns, vocês ganharam!' : 'Não foi dessa vez, que vergonha heim!'}\n          </div>\n        </div>\n      )}\n\n      {!Boolean(state.winners) && !Boolean(state.team) && (\n        <div className=\"game-over__text\">Jogo concluido.</div>\n      )}\n\n      {children}\n\n      <AdminOnly>\n        <Popconfirm\n          title=\"Tem certeza que que jogar este jogo novamente??\"\n          onConfirm={() => onPlayAgain({})}\n          okText=\"Sim\"\n          cancelText=\"Não\"\n        >\n          <Button\n            icon={<RocketFilled />}\n            danger\n            type=\"primary\"\n            // onClick={() => onPlayAgain({})}\n            disabled={isLoading}\n          >\n            Jogar novamente\n          </Button>\n        </Popconfirm>\n      </AdminOnly>\n    </PhaseContainer>\n  );\n}\n\nexport default GameOver;\n","import React, { memo } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Avatar } from 'antd';\n\nconst grades = ['A+', 'A', 'A-', 'B+', 'B', 'B-', 'C+', 'C', 'C-', 'D+', 'D', 'F'];\nconst minValues = [97, 93, 90, 87, 83, 80, 77, 73, 70, 67, 65, 0];\n\nconst DrawingGrade = ({ value }) => {\n  const grade = grades[minValues.findIndex((i) => value * 100 >= i) ?? 11];\n\n  const baseClass = 'a-drawing-grade';\n\n  return <Avatar className={clsx(baseClass, `${baseClass}--${grade[0]}`)}>{grade}</Avatar>;\n};\n\nDrawingGrade.propTypes = {\n  value: PropTypes.number.isRequired,\n};\n\nexport default memo(DrawingGrade);\n","import React from 'react';\n// Components\nimport GameOver from '../../shared/GameOver';\nimport CanvasSVG from './CanvasSVG';\nimport DrawingGrade from './DrawingGrade';\n\nfunction GameOverPhase({ state, info }) {\n  return (\n    <GameOver info={info} state={state}>\n      <ul className=\"a-game-over__gallery\">\n        {state.drawings.map((entry) => {\n          return (\n            <li className=\"a-game-over__gallery-item\">\n              <CanvasSVG drawing={entry.drawing} size={200} className=\"a-game-over__gallery-canvas\" />\n              <span className=\"a-game-over__credits\">\n                \"{entry.text}\" por {entry.playerName}\n              </span>\n              <DrawingGrade value={entry.successRate} />\n            </li>\n          );\n        })}\n      </ul>\n    </GameOver>\n  );\n}\n\nexport default GameOverPhase;\n","import React, { Fragment, useMemo, useState } from 'react';\n// Design Resources\nimport { Affix, Avatar as AntAvatar, Badge, Button, Divider, Drawer } from 'antd';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n// Utils\nimport { AVATAR_DESCRIPTIONS_BR } from '../../utils/constants';\n// Components\nimport Avatar from '../avatars/Avatar';\nimport RulesModal from '../modals/RulesModal';\n\nfunction SectionMe({ player, isTeamGame }) {\n  return (\n    <div className=\"game-info-drawer__section-me\">\n      <div className=\"game-info-drawer__label\">Você é{isTeamGame && ` do time ${player?.team ?? '?'}`}</div>\n      <div className=\"game-info-drawer__me\">\n        <Badge count={player.score} className=\"game-info-drawer__avatar-with-badge\">\n          <Avatar id={player.avatarId} shape=\"square\" />\n        </Badge>\n        {player.name}, {AVATAR_DESCRIPTIONS_BR[player.avatarId]}\n      </div>\n    </div>\n  );\n}\n\nfunction SectionMeta({ round, roundsToEndGame, groupScore, pointsToVictory, isTeamGame, teams }) {\n  return (\n    <ul className=\"game-info-drawer__meta\">\n      <li className=\"game-info-drawer__meta-item\">\n        <div className=\"game-info-drawer__label-inline\">Rodada:</div>\n        <AntAvatar className=\"game-info-drawer__round\" size=\"small\">\n          {round}\n        </AntAvatar>\n        {Boolean(roundsToEndGame) && !isNaN(round) && (\n          <Fragment>\n            <span className=\"game-info-drawer__inline-separator\">de</span>\n            <AntAvatar className=\"game-info-drawer__round\" size=\"small\">\n              {round + roundsToEndGame}\n            </AntAvatar>\n          </Fragment>\n        )}\n      </li>\n\n      {Boolean(groupScore) && (\n        <li className=\"game-info-drawer__meta-item\">\n          <div className=\"game-info-drawer__label-inline\">Pontos:</div>\n          <AntAvatar className=\"game-info-drawer__round\" size=\"default\" style={{ backgroundColor: 'gold' }}>\n            {groupScore ?? 0}\n          </AntAvatar>\n        </li>\n      )}\n\n      {Boolean(teams) && (\n        <li className=\"game-info-drawer__meta-item\">\n          <div className=\"game-info-drawer__label-inline\">Pontos A vs B:</div>\n          <AntAvatar className=\"game-info-drawer__round\" size=\"default\">\n            {teams?.A?.score ?? '?'}\n          </AntAvatar>\n          <span className=\"game-info-drawer__inline-separator\">vs</span>\n          <AntAvatar className=\"game-info-drawer__round\" size=\"default\">\n            {teams?.B?.score ?? '?'}\n          </AntAvatar>\n        </li>\n      )}\n\n      {Boolean(pointsToVictory) && (\n        <div>\n          <div className=\"game-info-drawer__label-inline\">\n            Pontos restantes para {isTeamGame ? 'um time' : 'alguém'} ganhar:\n          </div>\n          <AntAvatar className=\"game-info-drawer__round\" size=\"small\">\n            {pointsToVictory}\n          </AntAvatar>\n        </div>\n      )}\n    </ul>\n  );\n}\n\nfunction SectionTeams({ players, teams }) {\n  return (\n    <div className=\"game-info-drawer__team-players\">\n      {Object.values(teams).map((team) => (\n        <SectionTeamPlayers key={team.name} team={team} players={players} />\n      ))}\n    </div>\n  );\n}\n\nfunction SectionTeamPlayers({ team, players }) {\n  const sortedPlayers = useMemo(\n    () =>\n      team.members\n        .map((memberName) => {\n          return players[memberName];\n        })\n        .sort((a, b) => (a.name > b.name ? 1 : -1)),\n    [players, team]\n  );\n\n  return (\n    <div className=\"game-info-drawer__team\" key={team.name}>\n      <h3>Team {team.name}</h3>\n      <ul>\n        {sortedPlayers.map((player, index) => {\n          return (\n            <div className=\"game-info-drawer__ranked-player\" key={`ranked-${player.name}`}>\n              <Avatar id={player.avatarId} shape=\"square\" className=\"game-info-drawer__avatar-with-badge\" />\n              {player.name}, {AVATAR_DESCRIPTIONS_BR[player.avatarId]}\n            </div>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nfunction SectionRankedPlayers({ players }) {\n  const rankedPlayers = useMemo(() => Object.values(players).sort((a, b) => (a.score < b.score ? 1 : -1)), [\n    players,\n  ]);\n  return (\n    <ul>\n      {rankedPlayers.map((player, index) => {\n        return (\n          <div className=\"game-info-drawer__ranked-player\" key={`ranked-${player.name}`}>\n            {index + 1}.{' '}\n            <Badge count={player.score} className=\"game-info-drawer__avatar-with-badge\">\n              <Avatar id={player.avatarId} shape=\"square\" />\n            </Badge>\n            {player.name}, {AVATAR_DESCRIPTIONS_BR[player.avatarId]}\n          </div>\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction GameInfoDrawer({ players, state, info, me }) {\n  const [visible, setVisible] = useState(false);\n\n  if (state.phase === 'LOBBY') {\n    return <></>;\n  }\n\n  const showDrawer = () => {\n    setVisible(true);\n  };\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  const completeMe = players?.[me] ?? {};\n  const isTeamGame = Boolean(completeMe?.team) && Boolean(state.teams);\n\n  return (\n    <Fragment>\n      <Affix offsetTop={10} className=\"game-info-drawer__affix-button\">\n        <Button\n          type=\"primary\"\n          shape=\"circle\"\n          size=\"large\"\n          className=\"game-info-drawer__button\"\n          onClick={showDrawer}\n          icon={<InfoCircleOutlined />}\n        />\n      </Affix>\n\n      <Drawer title={info.title} placement=\"right\" closable={false} onClose={onClose} visible={visible}>\n        {completeMe && <SectionMe player={completeMe} isTeamGame={isTeamGame} />}\n\n        <Divider />\n\n        <RulesModal gameInfo={info} />\n\n        <Divider />\n\n        <SectionMeta\n          round={state?.round || '?'}\n          roundsToEndGame={state?.roundsToEndGame}\n          groupScore={state?.groupScore}\n          pointsToVictory={state?.pointsToVictory}\n          isTeamGame={isTeamGame}\n          teams={state?.teams}\n        />\n\n        <Divider />\n\n        {isTeamGame ? (\n          <SectionTeams players={players} teams={state?.teams} />\n        ) : (\n          <SectionRankedPlayers players={players} />\n        )}\n      </Drawer>\n    </Fragment>\n  );\n}\n\nexport default GameInfoDrawer;\n","import React, { Fragment, useEffect, useState } from 'react';\n// Hooks\nimport { useGameState, useGlobalState } from '../../../hooks';\nimport { GAME_COLLECTION, PHASES } from '../../../utils/constants';\n// Hooks\nimport { useGamePlayers } from '../../../hooks/useGamePlayers';\n// Utils\nimport gameList from '../../../resources/games.json';\n// Components\nimport Lobby from '../../lobby/Lobby';\nimport Rules from '../../rules/Rules';\nimport PageError from '../../errors/PageError';\nimport DrawPhase from './DrawPhase';\nimport EvaluationPhase from './EvaluationPhase';\nimport GalleryPhase from './GalleryPhase';\nimport GameOverPhase from './GameOverPhase';\nimport GameInfoDrawer from '../../shared/GameInfoDrawer';\n\nfunction getActiveComponent(phase) {\n  switch (phase) {\n    case PHASES.ARTE_RUIM.LOBBY:\n      return Lobby;\n    case PHASES.ARTE_RUIM.RULES:\n      return Rules;\n    case PHASES.ARTE_RUIM.DRAW:\n      return DrawPhase;\n    case PHASES.ARTE_RUIM.EVALUATION:\n      return EvaluationPhase;\n    case PHASES.ARTE_RUIM.GALLERY:\n      return GalleryPhase;\n    case PHASES.ARTE_RUIM.GAME_OVER:\n      return GameOverPhase;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionArteRuim({ gameId }) {\n  const players = useGamePlayers(gameId, GAME_COLLECTION.ARTE_RUIM);\n  const state = useGameState(gameId, GAME_COLLECTION.ARTE_RUIM);\n  const [me] = useGlobalState('me');\n  const [info, setInfo] = useState({});\n\n  // Update game description as the gameId comes in\n  useEffect(() => {\n    setInfo(gameId?.[0] ? gameList[gameId[0]] : {});\n  }, [gameId]);\n\n  if (process.env.NODE_ENV === 'development') {\n    console.table(players);\n    console.log({ state });\n  }\n\n  if (!me) {\n    return <Lobby players={players} state={state} info={info} />;\n  }\n\n  const ActiveComponent = getActiveComponent(state.phase);\n\n  return (\n    <Fragment>\n      <GameInfoDrawer players={players} state={state} info={info} me={me} />\n      <ActiveComponent players={players} state={state} info={info} />\n    </Fragment>\n  );\n}\n\nexport default SessionArteRuim;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { ArrowLeftOutlined, ArrowRightOutlined, MinusOutlined } from '@ant-design/icons';\nimport { LETTERS } from '../../../utils/constants';\nimport clsx from 'clsx';\n\nconst getColorModifier = (letter) => {\n  const index = LETTERS.indexOf(letter);\n  return Math.abs(index) % 4;\n};\n\nfunction Card({ left, right, className }) {\n  const leftColor = getColorModifier(left[0]);\n  const rightColor = getColorModifier(right[0]);\n  const cardSideClass = 'o-card__side';\n\n  return (\n    <div className={clsx('o-card', className)}>\n      <div className={clsx(cardSideClass, `${cardSideClass}--left`, `${cardSideClass}--L${leftColor}`)}>\n        <span className=\"o-card__arrow\">\n          <ArrowLeftOutlined /> <MinusOutlined /> <MinusOutlined />\n        </span>\n        <span className=\"o-card__text\">{left}</span>\n      </div>\n      <div className={clsx(cardSideClass, `${cardSideClass}--right`, `${cardSideClass}--R${rightColor}`)}>\n        <span className=\"o-card__arrow\">\n          <MinusOutlined /> <MinusOutlined /> <ArrowRightOutlined />\n        </span>\n        <span className=\"o-card__text\">{right}</span>\n      </div>\n    </div>\n  );\n}\n\nCard.propTypes = {\n  left: PropTypes.string.isRequired,\n  right: PropTypes.string.isRequired,\n  className: PropTypes.string,\n};\n\nCard.defaultProps = {\n  cardName: '',\n};\n\nexport default memo(Card);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Components\nimport Title from '../../shared/Title';\nimport Instruction from '../../shared/Instruction';\nimport Card from './Card';\n\nfunction CardSelection({ onSendChosenSide, cards }) {\n  return (\n    <div className=\"o-card-selection\">\n      <Title>Selecione a carta que será usada nessa rodada!</Title>\n      <Instruction contained>Escolha uma carta que você acredita que conseguirá criar uma dica.</Instruction>\n      <div className=\"o-card-selection__container\">\n        {cards.map((card) => (\n          <button\n            key={`card-button-${card.id}`}\n            className=\"o-card-selection__button\"\n            onClick={() => onSendChosenSide({ cardId: card.id })}\n          >\n            <Card left={card.left} right={card.right} />\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nCardSelection.propTypes = {\n  onSendChosenSide: PropTypes.func.isRequired,\n  cards: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      left: PropTypes.string,\n      right: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default CardSelection;\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useAmIReady, useActivePlayer, useAmIActive, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { ONDA_TELEPATICA } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport WaitingRoom from '../../shared/WaitingRoom';\nimport StepSwitcher from '../../shared/StepSwitcher';\nimport CardSelection from './CardSelection';\nimport RoundAnnouncement from '../../shared/RoundAnnouncement';\nimport Instruction from '../../shared/Instruction';\nimport AvatarName from '../../avatars/AvatarName';\n\nfunction DialSidesPhase({ state, players, info }) {\n  const amIReady = useAmIReady(players, state);\n  const [step, setStep] = useState(0);\n  const psychic = useActivePlayer(state, players, 'psychic');\n  const amIThePsychic = useAmIActive(state, 'psychic');\n\n  const onSendChosenSide = useAPICall({\n    apiFunction: ONDA_TELEPATICA.submitSides,\n    actionName: 'submit-side',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: 'Carta selecionada com sucesso',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar enviar a carta',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ONDA_TELEPATICA.DIAL_SIDES}\n      className=\"o-dial-sides-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!amIReady]}>\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state.round}\n          onPressButton={() => setStep(1)}\n          players={players}\n          teams={state.teams}\n          time={10}\n        >\n          <Instruction contained>\n            É a vez do\n            <span className=\"u-word-selection-phase__guesser-name-announcement\">TIME {state.activeTeam}</span>\n            <br />\n            {amIThePsychic ? (\n              <span className=\"u-word-selection-phase__guesser-name-announcement\">VOCÊ</span>\n            ) : (\n              <AvatarName player={psychic} uppercase size=\"large\" />\n            )}\n            será o(a) psíquico(a)\n          </Instruction>\n          <div className=\"u-word-selection-phase__team-points\"></div>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <Fragment>\n          {!amIThePsychic ? (\n            <WaitingRoom\n              players={players}\n              title={`${psychic.name} está escolhando uma carta...`}\n              instruction=\"Aguarde enquanto ele(a) decide a carta que será usada nessa rodada.\"\n            />\n          ) : (\n            <CardSelection onSendChosenSide={onSendChosenSide} cards={state.cards} />\n          )}\n        </Fragment>\n\n        {/* Step 2 */}\n        <WaitingRoom\n          players={players}\n          title=\"Pronto!\"\n          instruction=\"Vamos aguardar o jogo iniciar a próxima fase.\"\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nDialSidesPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default DialSidesPhase;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Card from './Card';\n\nconst getBracketClass = (number, showNeedle, needle, showTarget, target) => {\n  const baseBracketClass = 'o-dial-numbers';\n  const modifier = number % 2 === 0 ? 'even' : 'odd';\n  return clsx(\n    baseBracketClass,\n    `${baseBracketClass}--${modifier}`,\n    showNeedle && needle === number && `${baseBracketClass}--active`,\n    showTarget && target === number && `${baseBracketClass}--target`\n  );\n};\n\nfunction Dial({\n  card,\n  needle = 0,\n  showNeedle = false,\n  target = 0,\n  showTarget = false,\n  rivalGuess = 0,\n  rivalTeam = 'rival',\n  animate = false,\n  showPoints,\n}) {\n  const baseClass = 'o-dial';\n  const basePointsClass = 'o-dial-points';\n  const baseRivalClass = 'o-dial-rival';\n  const points = Math.abs(needle - target);\n\n  return (\n    <div className={clsx(`${baseClass}`, animate && `${baseClass}--animated`)}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 670 340\"\n        overflow=\"visible\"\n        className={clsx(`${baseClass}__svg`)}\n      >\n        <defs />\n\n        <path\n          d=\"M669.9 329.9c-1.1-21-6.1-71.9-27.3-127.7C591.2 83.3 472.8 0 335 0h-.2C198.2.1 80.7 81.9 28.7 199.2 5.7 258 1 312.1 0 332c-.1 1.1.1 2.1.5 3 1.1 2.9 3.9 5 7.2 5h654.6c3.3 0 6.1-2.1 7.2-5 .2-.5.3-1.1.4-1.7v-3.4z\"\n          fill=\"#181d44\"\n        />\n\n        {showTarget && (\n          <path\n            id=\"target\"\n            className={clsx(`${baseClass}__target`, animate && `${basePointsClass}--animated-2`)}\n            style={{ transform: `rotate(${target * 8}deg)` }}\n            d=\"M335.2 0l7.1 11.4 13 3.2-8.6 10.3.9 13.4-12.4-5.1-12.5 5.1 1-13.4-8.6-10.3 13-3.2z\"\n          />\n        )}\n\n        <g class=\"o-dial-numbers\">\n          <path\n            id=\"bracket-number-10-r\"\n            className={getBracketClass(10, showNeedle, needle, showTarget, target)}\n            d=\"M341.2 51.9l-3 5.4v-5.1c0-.4.1-.8.4-1.1.3-.3.6-.4 1.1-.4.8 0 1.3.4 1.5 1.2zm-2.5 9c.2.2.6.3 1 .3s.8-.1 1.1-.5c.3-.3.4-.7.4-1.1v-5.1l-3 5.3c.1.6.2.9.5 1.1zm16.8-20.2L335 340 314.5 40.7h41zm-23.8 8.5h-1.5l-3 1.5v1.5h1.5v10.5h3V49.2zm12.5 10.5v-7.5c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v7.5c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.6.9-1.3.9-2.1z\"\n          />\n          <path\n            id=\"bracket-number-9-r\"\n            className={getBracketClass(9, showNeedle, needle, showTarget, target)}\n            d=\"M336 51.1c.3.3.4.7.4 1.1v3c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.8-.1-1.1-.5-.3-.3-.4-.7-.4-1.1v-3c0-.4.1-.8.4-1.1s.6-.5 1.1-.5c.5.1.8.2 1.1.5zm19.5-10.4L335 340 314.5 40.7h41zm-16.1 16.7v-5.2c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v3c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h1.5c.9 0 1.4-.5 1.5-1.5v1.5c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-1.5v1.5h2.2c1.4 0 2.7-.5 3.7-1.5s1.6-2.3 1.6-3.8z\"\n          />\n          <path\n            id=\"bracket-number-8-r\"\n            className={getBracketClass(8, showNeedle, needle, showTarget, target)}\n            d=\"M336.4 58.2v1.5c0 .4-.1.8-.4 1.1s-.7.4-1.1.4c-.4 0-.8-.1-1.1-.4s-.4-.7-.4-1.1v-1.5c0-1 .5-1.5 1.5-1.5s1.5.5 1.5 1.5zm-1.5-7.5c-.4 0-.8.1-1.1.4-.3.3-.4.7-.4 1.1v1.5c0 .4.1.8.4 1.1.3.3.6.4 1.1.4.4 0 .8-.1 1.1-.4.3-.3.4-.6.4-1.1v-1.5c0-.4-.1-.8-.4-1.1-.3-.3-.6-.4-1.1-.4zm20.6-10L335 340 314.5 40.7h41zm-19.1 15.2c1-.1 1.7-.4 2.2-.9.5-.5.7-1.2.7-2.1v-.7c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v.7c0 .9.3 1.6.8 2.1s1.3.8 2.2.9c-1 0-1.7.3-2.2 1-.5.6-.8 1.3-.8 2v.7c0 .7.3 1.3.9 2 .6.7 1.3 1 2.1 1h3c.8 0 1.5-.3 2.1-1 .6-.7.9-1.3.9-2V59c0-.7-.2-1.4-.7-2-.4-.7-1.2-1.1-2.2-1.1z\"\n          />\n          <path\n            id=\"bracket-number-7-r\"\n            className={getBracketClass(7, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm24.2 13l-.8 1.5c-1 2.1-1.5 3.6-1.5 4.5v3h-3v-3c0-1 .5-2.5 1.5-4.5l1.5-3v-1.5h-6v-1.5h9v3l-.7 1.5z\"\n          />\n\n          <path\n            id=\"bracket-number-6-r\"\n            className={getBracketClass(6, showNeedle, needle, showTarget, target)}\n            d=\"M336 55.6c.3.3.4.7.4 1.1v3c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.8-.1-1.1-.5-.3-.3-.4-.7-.4-1.1v-3c0-.4.1-.8.4-1.1.3-.3.6-.4 1.1-.4.5 0 .8.1 1.1.4zm19.5-14.9L335 340 314.5 40.7h41zm-16.1 19v-3c0-.8-.3-1.5-.9-2.1s-1.3-.9-2.1-.9h-1.5c-.4 0-.8.1-1 .4-.3.3-.4.6-.5 1.1v-1.5c0-.8.3-1.5.9-2.1s1.3-.9 2.1-.9h1.5v-1.5h-2.2c-1.4 0-2.7.5-3.7 1.5s-1.6 2.3-1.6 3.7v5.2c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.5.9-1.2.9-2z\"\n          />\n\n          <path\n            id=\"bracket-number-5-r\"\n            className={getBracketClass(5, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm21.9 13c.8 0 1.5.3 2.1.9s.9 1.3.9 2.1v3c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-3c-1.8 0-2.8-1-3-3h1.5c.1 1 .6 1.5 1.5 1.5h1.5c.4 0 .8-.1 1.1-.4s.4-.7.4-1.1v-3c0-.4-.1-.8-.4-1.1-.3-.3-.7-.4-1.1-.4h-4.5v-6h9v1.5h-6v3h3z\"\n          />\n\n          <path\n            id=\"bracket-number-4-r\"\n            className={getBracketClass(4, showNeedle, needle, showTarget, target)}\n            d=\"M330.4 56.7l4.5-5.6v5.6h-4.5zm25.1-16L335 340 314.5 40.7h41zm-16.1 17.5v-1.5h-1.5v-7.5h-3l-6 7.5v1.5h6v4.5h3v-4.5h1.5z\"\n          />\n\n          <path\n            id=\"bracket-number-3-r\"\n            className={getBracketClass(3, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm21.9 13c.9 0 1.6.3 2.1 1s.8 1.3.8 2v3c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-3c-1.8 0-2.8-1-3-3h1.5c.1 1 .6 1.5 1.5 1.5h1.5c.4 0 .8-.1 1.1-.4s.4-.7.4-1.1v-3c0-.2-.1-.6-.4-.9s-.6-.6-1.1-.6h-3v-1.5l4.5-3h-6v-1.5h9v1.5l-4.5 3h1.6z\"\n          />\n\n          <path\n            id=\"bracket-number-2-r\"\n            className={getBracketClass(2, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm24.9 20.5v1.5h-9v-1.5c0-1 1-2.4 2.9-4l.2-.2c1.9-1.7 2.9-3 2.9-4v-.7c0-.4-.1-.8-.4-1.1-.3-.3-.7-.4-1.1-.4h-1.5c-.9 0-1.4.5-1.5 1.5h-1.5c.2-2 1.2-3 3-3h3c.8 0 1.5.3 2.1.9.6.6.9 1.3.9 2.1v.7c0 1-1 2.4-2.9 4l-.2.2c-1.9 1.7-2.9 3-2.9 3.9v.1h6z\"\n          />\n          <path\n            id=\"bracket-number-1-r\"\n            className={getBracketClass(1, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm18.9 22V52.2h-1.5v-1.5l3-1.5h1.5v13.5h-3z\"\n          />\n\n          <path\n            id=\"bracket-number-10-l\"\n            className={getBracketClass(-10, showNeedle, needle, showTarget, target)}\n            d=\"M341.2 51.9l-3 5.4v-5.1c0-.4.1-.8.4-1.1.3-.3.6-.4 1.1-.4.8 0 1.3.4 1.5 1.2zm-2.5 9c.2.2.6.3 1 .3s.8-.1 1.1-.5c.3-.3.4-.7.4-1.1v-5.1l-3 5.3c.1.6.2.9.5 1.1zm16.8-20.2L335 340 314.5 40.7h41zm-23.8 8.5h-1.5l-3 1.5v1.5h1.5v10.5h3V49.2zm12.5 10.5v-7.5c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v7.5c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.6.9-1.3.9-2.1z\"\n          />\n          <path\n            id=\"bracket-number-9-l\"\n            className={getBracketClass(-9, showNeedle, needle, showTarget, target)}\n            d=\"M336 51.1c.3.3.4.7.4 1.1v3c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.8-.1-1.1-.5-.3-.3-.4-.7-.4-1.1v-3c0-.4.1-.8.4-1.1s.6-.5 1.1-.5c.5.1.8.2 1.1.5zm19.5-10.4L335 340 314.5 40.7h41zm-16.1 16.7v-5.2c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v3c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h1.5c.9 0 1.4-.5 1.5-1.5v1.5c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-1.5v1.5h2.2c1.4 0 2.7-.5 3.7-1.5s1.6-2.3 1.6-3.8z\"\n          />\n          <path\n            id=\"bracket-number-8-l\"\n            className={getBracketClass(-8, showNeedle, needle, showTarget, target)}\n            d=\"M336.4 58.2v1.5c0 .4-.1.8-.4 1.1s-.7.4-1.1.4c-.4 0-.8-.1-1.1-.4s-.4-.7-.4-1.1v-1.5c0-1 .5-1.5 1.5-1.5s1.5.5 1.5 1.5zm-1.5-7.5c-.4 0-.8.1-1.1.4-.3.3-.4.7-.4 1.1v1.5c0 .4.1.8.4 1.1.3.3.6.4 1.1.4.4 0 .8-.1 1.1-.4.3-.3.4-.6.4-1.1v-1.5c0-.4-.1-.8-.4-1.1-.3-.3-.6-.4-1.1-.4zm20.6-10L335 340 314.5 40.7h41zm-19.1 15.2c1-.1 1.7-.4 2.2-.9.5-.5.7-1.2.7-2.1v-.7c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v.7c0 .9.3 1.6.8 2.1s1.3.8 2.2.9c-1 0-1.7.3-2.2 1-.5.6-.8 1.3-.8 2v.7c0 .7.3 1.3.9 2 .6.7 1.3 1 2.1 1h3c.8 0 1.5-.3 2.1-1 .6-.7.9-1.3.9-2V59c0-.7-.2-1.4-.7-2-.4-.7-1.2-1.1-2.2-1.1z\"\n          />\n          <path\n            id=\"bracket-number-7-l\"\n            className={getBracketClass(-7, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm24.2 13l-.8 1.5c-1 2.1-1.5 3.6-1.5 4.5v3h-3v-3c0-1 .5-2.5 1.5-4.5l1.5-3v-1.5h-6v-1.5h9v3l-.7 1.5z\"\n          />\n          <path\n            id=\"bracket-number-6-l\"\n            className={getBracketClass(-6, showNeedle, needle, showTarget, target)}\n            d=\"M336 55.6c.3.3.4.7.4 1.1v3c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.8-.1-1.1-.5-.3-.3-.4-.7-.4-1.1v-3c0-.4.1-.8.4-1.1.3-.3.6-.4 1.1-.4.5 0 .8.1 1.1.4zm19.5-14.9L335 340 314.5 40.7h41zm-16.1 19v-3c0-.8-.3-1.5-.9-2.1s-1.3-.9-2.1-.9h-1.5c-.4 0-.8.1-1 .4-.3.3-.4.6-.5 1.1v-1.5c0-.8.3-1.5.9-2.1s1.3-.9 2.1-.9h1.5v-1.5h-2.2c-1.4 0-2.7.5-3.7 1.5s-1.6 2.3-1.6 3.7v5.2c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.5.9-1.2.9-2z\"\n          />\n          <path\n            id=\"bracket-number-5-l\"\n            className={getBracketClass(-5, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm21.9 13c.8 0 1.5.3 2.1.9s.9 1.3.9 2.1v3c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-3c-1.8 0-2.8-1-3-3h1.5c.1 1 .6 1.5 1.5 1.5h1.5c.4 0 .8-.1 1.1-.4s.4-.7.4-1.1v-3c0-.4-.1-.8-.4-1.1-.3-.3-.7-.4-1.1-.4h-4.5v-6h9v1.5h-6v3h3z\"\n          />\n          <path\n            id=\"bracket-number-4-l\"\n            className={getBracketClass(-4, showNeedle, needle, showTarget, target)}\n            d=\"M330.4 56.7l4.5-5.6v5.6h-4.5zm25.1-16L335 340 314.5 40.7h41zm-16.1 17.5v-1.5h-1.5v-7.5h-3l-6 7.5v1.5h6v4.5h3v-4.5h1.5z\"\n          />\n          <path\n            id=\"bracket-number-3-l\"\n            className={getBracketClass(-3, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm21.9 13c.9 0 1.6.3 2.1 1s.8 1.3.8 2v3c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-3c-1.8 0-2.8-1-3-3h1.5c.1 1 .6 1.5 1.5 1.5h1.5c.4 0 .8-.1 1.1-.4s.4-.7.4-1.1v-3c0-.2-.1-.6-.4-.9s-.6-.6-1.1-.6h-3v-1.5l4.5-3h-6v-1.5h9v1.5l-4.5 3h1.6z\"\n          />\n          <path\n            id=\"bracket-number-2-l\"\n            className={getBracketClass(-2, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm24.9 20.5v1.5h-9v-1.5c0-1 1-2.4 2.9-4l.2-.2c1.9-1.7 2.9-3 2.9-4v-.7c0-.4-.1-.8-.4-1.1-.3-.3-.7-.4-1.1-.4h-1.5c-.9 0-1.4.5-1.5 1.5h-1.5c.2-2 1.2-3 3-3h3c.8 0 1.5.3 2.1.9.6.6.9 1.3.9 2.1v.7c0 1-1 2.4-2.9 4l-.2.2c-1.9 1.7-2.9 3-2.9 3.9v.1h6z\"\n          />\n          <path\n            id=\"bracket-number-1-l\"\n            className={getBracketClass(-1, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm18.9 22V52.2h-1.5v-1.5l3-1.5h1.5v13.5h-3z\"\n          />\n\n          <path\n            id=\"bracket-number-0\"\n            className={getBracketClass(0, showNeedle, needle, showTarget, target)}\n            d=\"M333.5 59.9l3-5.3v5.1c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.7-.1-1-.3-.3-.3-.5-.6-.5-1.1zm1.4-9.2c-.4 0-.8.1-1.1.4-.3.3-.4.7-.4 1.1v5.1l3-5.4c-.2-.8-.7-1.2-1.5-1.2zm20.6-10L335 340 314.5 40.7h41zm-16.1 19v-7.5c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v7.5c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.6.9-1.3.9-2.1z\"\n          />\n        </g>\n\n        {showNeedle && (\n          <path\n            id=\"needle\"\n            className={clsx(`${baseClass}__needle`, animate && `${basePointsClass}--animated-1`)}\n            style={{ transform: `rotate(${needle * 8}deg)` }}\n            d=\"M335 340c-.9 0-3.7-.8-3.7-1.8l2-260.6c0-1 .8-1.8 1.7-1.8.9 0 1.7.8 1.7 1.8l2 260.6c0 1-2.8 1.8-3.7 1.8z\"\n          />\n        )}\n\n        {showPoints && (\n          <g className={clsx(`${baseClass}__points`)}>\n            {points === 0 && (\n              <g>\n                <path\n                  fill=\"#29abe2\"\n                  d=\"M335.2 102.7l14 22.5 25.8 6.4-17.1 20.3 1.9 26.5-24.6-10-24.6 10 1.9-26.5-17.1-20.3 25.7-6.4z\"\n                />\n                <path\n                  d=\"M334.9 158.7v-10.1h-13.5v-3.4l13.5-16.9h6.8v16.9h3.4v3.4h-3.4v10.1h-6.8zm0-13.4v-12.7l-10.1 12.7h10.1z\"\n                  fill=\"#fff\"\n                />\n              </g>\n            )}\n\n            {points === 1 && (\n              <g>\n                <path\n                  fill=\"#a45467\"\n                  d=\"M335.2 102.7l14 22.5 25.8 6.4-17.1 20.3 1.9 26.5-24.6-10-24.6 10 1.9-26.5-17.1-20.3 25.7-6.4z\"\n                />\n                <path\n                  d=\"M324.8 130.4H345v3.4l-10.1 6.8h3.4c1.9 0 3.6.7 4.8 2.2 1.3 1.5 1.9 3 1.9 4.5v6.7c0 1.9-.7 3.5-2 4.8-1.3 1.3-2.9 2-4.7 2h-6.8c-4 0-6.2-2.3-6.8-6.8h3.4c.2 2.3 1.3 3.4 3.4 3.4h3.4c.9 0 1.7-.3 2.4-1s1-1.5 1-2.4v-6.7c0-.5-.3-1.2-.9-2.1-.6-.9-1.4-1.3-2.6-1.3h-6.7v-3.4l10.1-6.8h-13.5v-3.3z\"\n                  fill=\"#fff\"\n                />\n              </g>\n            )}\n\n            {points === 2 && (\n              <g className={clsx(`${baseClass}__points`)}>\n                <path\n                  fill=\"#a45467\"\n                  d=\"M335.2 102.7l14 22.5 25.8 6.4-17.1 20.3 1.9 26.5-24.6-10-24.6 10 1.9-26.5-17.1-20.3 25.7-6.4z\"\n                />\n                <path\n                  d=\"M328.2 136.1h-3.4c.5-4.5 2.8-6.8 6.8-6.8h6.8c1.8 0 3.4.7 4.7 2 1.3 1.3 2 2.9 2 4.8v1.7c0 2.3-2.2 5.4-6.5 9.1l-.4.4c-4.3 3.7-6.5 6.7-6.5 8.8v.3H345v3.4h-20.3v-3.4c0-2.4 2.2-5.4 6.6-9.1l.4-.4c4.3-3.7 6.5-6.8 6.5-9.1v-1.7c0-.9-.3-1.7-1-2.4s-1.5-1-2.4-1h-3.4c-1.9 0-3.1 1.2-3.2 3.4z\"\n                  fill=\"#fff\"\n                />\n              </g>\n            )}\n          </g>\n        )}\n\n        {rivalGuess === -1 && (\n          <g className={clsx(`${baseRivalClass} ${baseRivalClass}---1`)}>\n            <path\n              fill=\"#FFFFFF\"\n              d=\"M64.6 14.1c-23.9 0-43.3 14.4-43.3 32.1 0 8.8 4.8 16.8 12.6 22.6-5.3 4.6-12.3 7-19.4 6.6 1.8 1.5 3.7 2.7 5.9 3.7 9 4 19.1 2.2 26.2-3.6 5.5 1.9 11.6 2.9 18 2.9 23.9 0 43.3-14.4 43.3-32.1S88.5 14.1 64.6 14.1z\"\n            />\n            <path\n              fill=\"#f7931e\"\n              d=\"M45.4 49.1c-2.3-1.3-2.3-4.6 0-5.9l13.1-7.6L71.6 28c2.3-1.3 5.1.3 5.1 2.9v30.2c0 2.6-2.8 4.2-5.1 2.9l-13.1-7.6-13.1-7.3z\"\n            />\n            <text x=\"10\" y=\"11\" fill=\"#FFFFFF\" style={{ textAnchor: 'start' }}>\n              O time {rivalTeam} disse que tá mais pra cá!\n            </text>\n          </g>\n        )}\n\n        {rivalGuess === 1 && (\n          <g className={clsx(`${baseRivalClass} ${baseRivalClass}---1`)}>\n            <text x=\"660\" y=\"11\" fill=\"#FFFFFF\" style={{ textAnchor: 'end' }}>\n              O time {rivalTeam} disse que tá mais pra cá!\n            </text>\n            <path\n              fill=\"#FFFFFF\"\n              d=\"M605.4 14.1c23.9 0 43.3 14.4 43.3 32.1 0 8.8-4.8 16.8-12.6 22.6 5.3 4.6 12.3 7 19.4 6.6-1.8 1.5-3.7 2.7-5.9 3.7-9 4-19.1 2.2-26.2-3.6-5.5 1.9-11.6 2.9-18 2.9-23.9 0-43.3-14.4-43.3-32.1s19.4-32.2 43.3-32.2z\"\n            />\n            <path\n              fill=\"#f7931e\"\n              d=\"M624.6 49.1c2.3-1.3 2.3-4.6 0-5.9l-13.1-7.6-13.1-7.6c-2.3-1.3-5.1.3-5.1 2.9v30.2c0 2.6 2.8 4.2 5.1 2.9l13.1-7.6 13.1-7.3z\"\n            />\n          </g>\n        )}\n      </svg>\n      <Card left={card.left} right={card.right} className=\"o-dial__card\" />\n    </div>\n  );\n}\n\nDial.propTypes = {\n  card: PropTypes.shape({\n    id: PropTypes.string,\n    left: PropTypes.string,\n    right: PropTypes.string,\n  }).isRequired,\n  needle: PropTypes.number,\n  showNeedle: PropTypes.bool,\n  target: PropTypes.number,\n  showTarget: PropTypes.bool,\n  showPoints: PropTypes.bool,\n  rivalGuess: PropTypes.number,\n  rivalTeam: PropTypes.string,\n  animate: PropTypes.bool,\n};\n\nDial.defaultProps = {\n  needle: 0,\n  showNeedle: false,\n  target: 0,\n  showTarget: false,\n  showPoints: false,\n  rivalGuess: 0,\n  rivalTeam: 'rival',\n  animate: false,\n};\n\nexport default memo(Dial);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Input } from 'antd';\n// Components\nimport Title from '../../shared/Title';\nimport Instruction from '../../shared/Instruction';\nimport Dial from './Dial';\n\nconst getHint = (card) => {\n  if (card.target === 0) {\n    return 'número 0, bem no centro,';\n  }\n\n  if (card.target < 0) {\n    return `\"${Math.abs(card.target)}\" do lado \"${card.left}\"`;\n  }\n\n  return `\"${card.target}\" do lado \"${card.right}\"`;\n};\n\nfunction DialClueWriting({ onSendClue, card }) {\n  const [clue, setClue] = useState('');\n\n  return (\n    <div className=\"o-dial-clue-writing\">\n      <Title>Escreva uma dica!</Title>\n      <Instruction contained>\n        Escreva uma dica que ajudará seu time a apontar o número {getHint(card)} do medidor de ondas\n        telepáticas.\n        <br />\n        Regras:\n        <br />\n        • Use uma única idea. Evite usar \"mas\", \"enquanto\", \"quando\", e também superlativos \"super\", \"muito\"\n        <br />\n        • Não invente coisas. Exemplo: 'Nicolas Cage cantando uma música dos Beatles' é inválido.\n        <br />\n        • Mantenha-se no assunto da carta. Exemplo: 'Amor' não é uma dica válida para 'Sujo'.\n        <br />\n        • Não use números para sugerir a posição do espectro.\n        <br />• Não use partes, derivados ou sinônimos das palavras da carta.\n      </Instruction>\n\n      <Dial card={card} showTarget target={card.target} />\n\n      <div className=\"container container--center container--transparent\">\n        <Input\n          onChange={(e) => setClue(e.target.value.toUpperCase())}\n          placeholder=\"Digite sua dica aqui\"\n          className=\"uppercase-input\"\n        />\n        <Button\n          type=\"primary\"\n          disabled={!Boolean(clue)}\n          onClick={() => {\n            onSendClue({ clue });\n          }}\n        >\n          Enviar dica\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nDialClueWriting.propTypes = {\n  onSendClue: PropTypes.func.isRequired,\n  card: PropTypes.shape({\n    id: PropTypes.string,\n    left: PropTypes.string,\n    right: PropTypes.string,\n  }).isRequired,\n};\n\nexport default DialClueWriting;\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useAmIReady, useActivePlayer, useAmIActive, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { ONDA_TELEPATICA } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport WaitingRoom from '../../shared/WaitingRoom';\nimport StepSwitcher from '../../shared/StepSwitcher';\nimport Card from './Card';\nimport DialClueWriting from './DialClueWriting';\n\nfunction DialCluePhase({ state, players, info }) {\n  const amIReady = useAmIReady(players, state);\n  const [step, setStep] = useState(0);\n  const psychic = useActivePlayer(state, players, 'psychic');\n  const amIThePsychic = useAmIActive(state, 'psychic');\n\n  const onSendClue = useAPICall({\n    apiFunction: ONDA_TELEPATICA.submitClue,\n    actionName: 'submit-clue',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage: 'Dica submetida com sucesso',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar enviar a dica',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ONDA_TELEPATICA.DIAL_CLUE}\n      className=\"o-dial-clue-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!amIReady]}>\n        {/* Step 0 */}\n        <Fragment>\n          {!amIThePsychic ? (\n            <WaitingRoom\n              players={players}\n              title={`${psychic.name} está pensando em uma dica...`}\n              instruction=\"Aguarde enquanto ele(a) escreve uma dica para:\"\n            >\n              <div className=\"container container--center\">\n                <Card left={state.card.left} right={state.card.right} />\n              </div>\n            </WaitingRoom>\n          ) : (\n            <DialClueWriting card={state.card} onSendClue={onSendClue} />\n          )}\n        </Fragment>\n\n        {/* Step 1 */}\n        <WaitingRoom\n          players={players}\n          title=\"Pronto!\"\n          instruction=\"Vamos aguardar o jogo iniciar a próxima fase.\"\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nDialCluePhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default DialCluePhase;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Slider } from 'antd';\n// Components\nimport Title from '../../shared/Title';\nimport Instruction from '../../shared/Instruction';\nimport Dial from './Dial';\nimport AvatarName from '../../avatars/AvatarName';\n\nfunction DialGuessSelection({\n  activeTeam,\n  teamController,\n  amITheController,\n  isMyTeamActive,\n  onSendGuess,\n  card,\n}) {\n  const [needle, setNeedle] = useState(0);\n\n  return (\n    <div className=\"o-dial-guess-selection\">\n      <Title>Time {activeTeam}, hora de brilhar!</Title>\n      <Instruction contained>\n        Qual número melhor indica <span className=\"o-dial-guess-selection__clue\">{card.clue}</span> na escala\n        de{' '}\n        <strong>\n          {card.left}-{card.right}\n        </strong>\n        ?\n      </Instruction>\n\n      <Dial card={card} showTarget={false} target={card.target} showNeedle={isMyTeamActive} needle={needle} />\n\n      {isMyTeamActive ? (\n        <Instruction contained>\n          Discuta com seu time em qual número do medidor de ondas telepáticas você acha que a dica se encaixa\n          melhor. Se você é o psíquico dessa rodada, boca fechada!\n          <br />\n          Todos podem controlar o ponteiro, mas somente{' '}\n          {amITheController ? 'VOCÊ ' : <AvatarName player={teamController} />}pode apertar o botão para\n          enviar a resposta final.\n        </Instruction>\n      ) : (\n        <Instruction contained>\n          O outro time agora está tentando adivinhar onde no medidor de ondas telepáticas a dica se encaixa\n          melhor. Na próxima fase, você e seu time terão a change de contra-atacar dizendo se a solução está\n          mais para esquerda ou mais para a direita do que eles escolheram!\n        </Instruction>\n      )}\n\n      {isMyTeamActive && (\n        <div>\n          <Slider defaultValue={0} min={-10} max={10} onChange={setNeedle} />\n          <div className=\"container container--transparent container--center\">\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                onSendGuess({ guess: needle });\n              }}\n              disabled={!amITheController}\n            >\n              Enviar resposta: {needle}\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nDialGuessSelection.propTypes = {\n  onSendGuess: PropTypes.func.isRequired,\n  card: PropTypes.shape({\n    id: PropTypes.string,\n    left: PropTypes.string,\n    right: PropTypes.string,\n  }).isRequired,\n  activeTeam: PropTypes.oneOf(['A', 'B']),\n  teamController: PropTypes.object,\n  amITheController: PropTypes.bool,\n  isMyTeamActive: PropTypes.bool,\n};\n\nexport default DialGuessSelection;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useAmIReady, useActivePlayer, useAmIActive, useAPICall, useIsMyTeamActive } from '../../../hooks';\n// Resources & Utils\nimport { ONDA_TELEPATICA } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport WaitingRoom from '../../shared/WaitingRoom';\nimport StepSwitcher from '../../shared/StepSwitcher';\nimport DialGuessSelection from './DialGuessSelection';\n\nfunction GuessPhase({ state, players, info }) {\n  const amIReady = useAmIReady(players, state);\n  const [step, setStep] = useState(0);\n  const psychic = useActivePlayer(state, players, 'psychic');\n  const controller = useActivePlayer(state, players, 'teamController');\n  const amITheController = useAmIActive(state, 'teamController');\n  const isMyTeamActive = useIsMyTeamActive(state, players);\n\n  const onSendGuess = useAPICall({\n    apiFunction: ONDA_TELEPATICA.submitGuess,\n    actionName: 'submit-guess',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage: 'Chute submetido com sucesso',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar enviar seu chute',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ONDA_TELEPATICA.GUESS}\n      className=\"o-guess-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!amIReady]}>\n        {/* Step 0 */}\n        <DialGuessSelection\n          activeTeam={state.activeTeam}\n          psychic={psychic}\n          teamController={controller}\n          amITheController={amITheController}\n          onSendGuess={onSendGuess}\n          isMyTeamActive={isMyTeamActive}\n          card={state.card}\n        />\n\n        {/* Step 1 */}\n        <WaitingRoom\n          players={players}\n          title=\"Pronto!\"\n          instruction=\"Vamos aguardar o jogo iniciar a próxima fase.\"\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nGuessPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default GuessPhase;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Space } from 'antd';\n// Components\nimport Title from '../../shared/Title';\nimport Instruction from '../../shared/Instruction';\nimport Dial from './Dial';\nimport AvatarName from '../../avatars/AvatarName';\nimport { BackwardOutlined, ForwardOutlined } from '@ant-design/icons';\n\nfunction DialRivalSelection({\n  activeTeam,\n  rivalController,\n  amITheRivalController,\n  isMyTeamActive,\n  onSendRivalGuess,\n  card,\n}) {\n  return (\n    <div className=\"o-dial-guess-selection\">\n      <Title>Time {activeTeam}, hora de contra-atacar!</Title>\n      <Instruction contained>\n        Qual número melhor indica <span className=\"o-dial-guess-selection__clue\">{card.clue}</span> na escala\n        de{' '}\n        <strong>\n          {card.left}-{card.right}\n        </strong>\n        ?\n      </Instruction>\n\n      <Dial card={card} showTarget={false} target={card.target} showNeedle needle={card.needle} />\n\n      {isMyTeamActive ? (\n        <Instruction contained>\n          Agora, o seu time tem a change de ganhar 1 ponto ao tentar adivinhar se a solução está mais para a\n          esquerda ou mais para a direita do que o outro time escolheu.\n          <br />\n          {amITheRivalController ? 'VOCÊ ' : <AvatarName player={rivalController} />}está no comando para\n          apertar os botões! E então, a solução está mais para a esquerda ou mais para a direita do ponteiro\n          vermelho?\n        </Instruction>\n      ) : (\n        <Instruction contained>\n          Agora, o time oposto tem a chance de ganhar 1 ponto ao tentar adivinhar se a solução está mais para\n          a esquerda ou mais para a direita do que o seu time escolheu.\n        </Instruction>\n      )}\n\n      {amITheRivalController && (\n        <div className=\"container container--center container--transparent\">\n          <Space>\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                onSendRivalGuess({ rivalGuess: -1 });\n              }}\n            >\n              <BackwardOutlined /> Mais para a esquerda\n            </Button>\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                onSendRivalGuess({ rivalGuess: 1 });\n              }}\n            >\n              Mais para a direita <ForwardOutlined />\n            </Button>\n          </Space>\n        </div>\n      )}\n    </div>\n  );\n}\n\nDialRivalSelection.propTypes = {\n  onSendRivalGuess: PropTypes.func.isRequired,\n  card: PropTypes.shape({\n    id: PropTypes.string,\n    left: PropTypes.string,\n    right: PropTypes.string,\n  }).isRequired,\n  activeTeam: PropTypes.oneOf(['A', 'B']),\n  rivalController: PropTypes.object,\n  amITheRivalController: PropTypes.bool,\n  isMyTeamActive: PropTypes.bool,\n};\n\nexport default DialRivalSelection;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useAmIReady, useActivePlayer, useAmIActive, useAPICall, useIsMyTeamActive } from '../../../hooks';\n// Resources & Utils\nimport { ONDA_TELEPATICA } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport WaitingRoom from '../../shared/WaitingRoom';\nimport StepSwitcher from '../../shared/StepSwitcher';\nimport DialRivalSelection from './DialRivalSelection';\n\nfunction RivalPhase({ state, players, info }) {\n  const amIReady = useAmIReady(players, state);\n  const [step, setStep] = useState(0);\n  const psychic = useActivePlayer(state, players, 'psychic');\n  const rivalController = useActivePlayer(state, players, 'rivalController');\n  const amITheRivalController = useAmIActive(state, 'rivalController');\n  const isMyTeamActive = useIsMyTeamActive(state, players);\n\n  const onSendRivalGuess = useAPICall({\n    apiFunction: ONDA_TELEPATICA.submitRivalGuess,\n    actionName: 'submit-rival-guess',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage: 'Chute submetido com sucesso',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar enviar seu chute',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ONDA_TELEPATICA.RIVAL_GUESS}\n      className=\"o-guess-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!amIReady]}>\n        {/* Step 0 */}\n        <DialRivalSelection\n          activeTeam={state.activeTeam === 'A' ? 'B' : 'A'}\n          psychic={psychic}\n          rivalController={rivalController}\n          amITheRivalController={amITheRivalController}\n          onSendRivalGuess={onSendRivalGuess}\n          isMyTeamActive={!isMyTeamActive}\n          card={state.card}\n        />\n\n        {/* Step 1 */}\n        <WaitingRoom\n          players={players}\n          title=\"Pronto!\"\n          instruction=\"Vamos aguardar o jogo iniciar a próxima fase.\"\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nRivalPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default RivalPhase;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { ONDA_TELEPATICA } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport Title from '../../shared/Title';\nimport Dial from './Dial';\nimport Instruction from '../../shared/Instruction';\nimport AdminOnly from '../../shared/AdminOnly';\nimport { Button } from 'antd';\nimport { RocketFilled } from '@ant-design/icons';\nimport { useTimer } from 'react-timer-hook';\nimport { inNSeconds } from '../../../utils';\n\nfunction getResultInstructionLine(pointsBreakdown, team, catchup = false) {\n  const { got, now } = pointsBreakdown;\n\n  if (got === 0) {\n    return `O time ${team} não conseguiu nenhum ponto dessa vez e continua com ${now} pontos.\n      `;\n  }\n\n  if (got === 3) {\n    return `Quase na mosca! O time ${team} ganhou 3 pontos!`;\n  }\n\n  if (got === 4 && catchup) {\n    return `\n        Wow! O time ${team} ganhou ${got} pontos nessa rodada e agora tem ${now} pontos, mas como eles estão indo\n        muito mal vão ter rodada dupla!\n      `;\n  }\n\n  if (got === 4) {\n    return `Na mosca!!! 4 pontos para o time ${team}`;\n  }\n\n  return `\n      O time ${team} ganhou ${got} pontos nessa rodada e agora tá com ${now} pontos.\n    `;\n}\n\nfunction getRivalResultInstructionLine(pointsBreakdown, team) {\n  const { got } = pointsBreakdown;\n\n  if (got === 0) {\n    return `\n        O contra-ataque falhou para o time ${team}.\n      `;\n  }\n\n  return `\n      O time ${team} conseguiu contra atacar e ganhou ${got} ponto!\n    `;\n}\n\nfunction RevealPhase({ state, players, info }) {\n  const [step, setStep] = useState(0);\n\n  const onGoToNextRound = useAPICall({\n    apiFunction: ONDA_TELEPATICA.goToNextPhase,\n    actionName: 'next-phase',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage: 'Próxima fase ativada com success',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar ir pra próxima fase',\n  });\n\n  const { seconds } = useTimer({\n    expiryTimestamp: inNSeconds(7),\n    autoStart: true,\n  });\n  console.log({ seconds });\n\n  const rivalTeam = state.activeTeam === 'A' ? 'B' : 'A';\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ONDA_TELEPATICA.REVEAL}\n      className=\"o-guess-phase\"\n    >\n      <Title>E o resultado é...</Title>\n      <Dial\n        card={state.card}\n        showNeedle={seconds < 6}\n        needle={state.card.needle}\n        showTarget={seconds < 4}\n        target={state.card.target}\n        showPoints={seconds < 2}\n        points={state?.pointsBreakdown?.[state?.activeTeam].got}\n        rivalGuess={state.card.rival}\n        rivalTeam={rivalTeam}\n        animate\n      />\n      <Instruction contained>\n        {getResultInstructionLine(\n          state.pointsBreakdown[state.activeTeam],\n          state.activeTeam,\n          state.shouldCatchup\n        )}\n        <br />\n        {getRivalResultInstructionLine(state.pointsBreakdown[rivalTeam], rivalTeam)}\n      </Instruction>\n\n      <AdminOnly>\n        <Button\n          icon={<RocketFilled />}\n          danger\n          type=\"primary\"\n          onClick={() => onGoToNextRound({})}\n          disabled={step === 1}\n        >\n          Ir para próxima rodada ou game over\n        </Button>\n      </AdminOnly>\n    </PhaseContainer>\n  );\n}\n\nRevealPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default RevealPhase;\n","import React, { Fragment, useEffect, useState } from 'react';\n// Hooks\nimport { useGameState, useGlobalState } from '../../../hooks';\nimport { GAME_COLLECTION, PHASES } from '../../../utils/constants';\n// Hooks\nimport { useGamePlayers } from '../../../hooks/useGamePlayers';\n// Utils\nimport gameList from '../../../resources/games.json';\n// Components\nimport Lobby from '../../lobby/Lobby';\nimport Rules from '../../rules/Rules';\nimport PageError from '../../errors/PageError';\nimport GameOver from '../../shared/GameOver';\nimport GameInfoDrawer from '../../shared/GameInfoDrawer';\nimport DialSidesPhase from './DialSidesPhase';\nimport DialCluePhase from './DialCluePhase';\nimport GuessPhase from './GuessPhase';\nimport RivalPhase from './RivalPhase';\nimport RevealPhase from './RevealPhase';\n\nfunction getActiveComponent(phase) {\n  switch (phase) {\n    case PHASES.ONDA_TELEPATICA.LOBBY:\n      return Lobby;\n    case PHASES.ONDA_TELEPATICA.RULES:\n      return Rules;\n    case PHASES.ONDA_TELEPATICA.DIAL_SIDES:\n      return DialSidesPhase;\n    case PHASES.ONDA_TELEPATICA.DIAL_CLUE:\n      return DialCluePhase;\n    case PHASES.ONDA_TELEPATICA.GUESS:\n      return GuessPhase;\n    case PHASES.ONDA_TELEPATICA.RIVAL_GUESS:\n      return RivalPhase;\n    case PHASES.ONDA_TELEPATICA.REVEAL:\n      return RevealPhase;\n    case PHASES.ONDA_TELEPATICA.GAME_OVER:\n      return GameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionOndaTelepatica({ gameId }) {\n  const players = useGamePlayers(gameId, GAME_COLLECTION.ONDA_TELEPATICA);\n  const state = useGameState(gameId, GAME_COLLECTION.ONDA_TELEPATICA);\n  const [me] = useGlobalState('me');\n  const [info, setInfo] = useState({});\n\n  // Update game description as the gameId comes in\n  useEffect(() => {\n    setInfo(gameId?.[0] ? gameList[gameId[0]] : {});\n  }, [gameId]);\n\n  if (process.env.NODE_ENV === 'development') {\n    console.table(players);\n    console.log({ state });\n  }\n\n  if (!me) {\n    return <Lobby players={players} state={state} info={info} />;\n  }\n\n  const ActiveComponent = getActiveComponent(state.phase);\n\n  return (\n    <Fragment>\n      <GameInfoDrawer players={players} state={state} info={info} me={me} />\n      <ActiveComponent players={players} state={state} info={info} />\n    </Fragment>\n  );\n}\n\nexport default SessionOndaTelepatica;\n","import React, { useState } from 'react';\n// Design Resources\nimport { CheckCircleFilled, CloudUploadOutlined } from '@ant-design/icons';\n// Components\nimport Title from '../../shared/Title';\nimport Instruction from '../../shared/Instruction';\nimport TimedButton from '../../shared/TimedButton';\n\nfunction WordSelectionStep({ words = [], onSendSelectedWords, guesser }) {\n  const [selectedWords, setSelectedWords] = useState({});\n\n  const selectedWordsArray = Object.keys(selectedWords);\n  const noSelection = selectedWordsArray.length === 0;\n\n  const autoSelectRandomWord = () => {\n    const randomSelection = words[0].id;\n    onSendSelectedWords({ votes: [randomSelection] });\n  };\n\n  const onSelectWord = (wordId) => {\n    setSelectedWords((s) => {\n      const newState = { ...s };\n      if (newState[wordId]) {\n        delete newState[wordId];\n      } else {\n        newState[wordId] = true;\n      }\n      return newState;\n    });\n  };\n\n  return (\n    <div className=\"u-word-selection-step\">\n      <Title white>Selecione a Palavra-Secreta para {guesser.name}</Title>\n\n      <Instruction white>\n        A palavra secreta com mais votos será escolhida para essa rodada. Você pode selecionar quantas quiser!\n      </Instruction>\n\n      <ul className=\"u-word-card\">\n        {words.map((word) => {\n          return (\n            <li className=\"u-word-card__word\" key={word.id}>\n              <button className=\"u-word-card__button\" onClick={() => onSelectWord(word.id)}>\n                <span className=\"u-word-card__text\">{word.text}</span>\n                <span className=\"u-word-card__icon\">{selectedWords[word.id] && <CheckCircleFilled />}</span>\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n\n      <TimedButton\n        label=\"Enviar fotos\"\n        icon={<CloudUploadOutlined />}\n        type=\"primary\"\n        onClick={() => onSendSelectedWords({ votes: selectedWordsArray })}\n        disabled={noSelection}\n        onExpire={autoSelectRandomWord}\n        duration={10}\n        showTimer={noSelection}\n      />\n    </div>\n  );\n}\n\nexport default WordSelectionStep;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { message, Progress } from 'antd';\n// Hooks\nimport { useAmIReady, useAmIActive, useActivePlayer, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { UE_SO_ISSO_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport Avatar from '../../avatars/Avatar';\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport RoundAnnouncement from '../../shared/RoundAnnouncement';\nimport Instruction from '../../shared/Instruction';\nimport WaitingRoom from '../../shared/WaitingRoom';\nimport StepSwitcher from '../../shared/StepSwitcher';\nimport WordSelectionStep from './WordSelectionStep';\n\nfunction WordSelectionPhase({ state, players, info }) {\n  const amIReady = useAmIReady(players, state);\n  const guesser = useActivePlayer(state, players, 'guesser');\n  const amITheGuesser = useAmIActive(state, 'guesser');\n  const [step, setStep] = useState(0);\n\n  useEffect(() => {\n    if (step === 0 && state.previousSecretWord?.text) {\n      message.info(`A palavra secreta anterior era: ${state.previousSecretWord.text}`, 5);\n    }\n  }, [step, state?.previousSecretWord.text]);\n\n  const onSendSelectedWords = useAPICall({\n    apiFunction: UE_SO_ISSO_API.submitWordSelectionVotes,\n    actionName: 'submit-votes',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: 'Acabou o tempo! Aguarde enquanto os outros participantes votam',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar seus votos',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.UE_SO_ISSO.WORD_SELECTION}\n      className=\"u-word-selection-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!amIReady]}>\n        {/* Step 0 */}\n        <RoundAnnouncement round={state.round} onPressButton={() => setStep(1)} time={7}>\n          <Instruction contained>\n            Para essa rodada,\n            <span className=\"u-word-selection-phase__guesser-name-announcement\">\n              {amITheGuesser ? (\n                'VOCÊ'\n              ) : (\n                <>\n                  <Avatar id={guesser.avatarId} /> {guesser.name}\n                </>\n              )}\n            </span>\n            será o(a) adivinhador(a) <br />\n            {state?.nextGuesser ? `Próximo adivinhador(a): ${state.nextGuesser}` : 'Essa é a última rodada'}\n          </Instruction>\n          <div className=\"u-word-selection-phase__team-points\">\n            Pontos do Grupo:\n            <br />\n            <Progress\n              percent={state.groupScore ?? 0}\n              status=\"active\"\n              strokeColor={{\n                '0%': '#ff0000',\n                '70%': '#ff0000',\n                '100%': '#87d068',\n              }}\n            />\n          </div>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <Fragment>\n          {amITheGuesser ? (\n            <WaitingRoom\n              players={players}\n              title=\"Você é o(a) adivinhador(a)\"\n              instruction=\"Aguarde os outros jogadores decidirem a palavra secreta.\"\n            />\n          ) : (\n            <WordSelectionStep\n              words={state?.words}\n              onSendSelectedWords={onSendSelectedWords}\n              guesser={guesser}\n            />\n          )}\n        </Fragment>\n\n        {/* Step 2 */}\n        <WaitingRoom players={players} title=\"Pronto!\" instruction=\"Vamos aguardar os outros joadores.\" />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nWordSelectionPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default WordSelectionPhase;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { WarningOutlined } from '@ant-design/icons';\n// Components\nimport Card from './Card';\n\nfunction UeSoIssoCard({ word, header = 'Palavra Secreta' }) {\n  return (\n    <Card color=\"purple\" header={header} size=\"large\">\n      {word ?? <WarningOutlined />}\n    </Card>\n  );\n}\n\nUeSoIssoCard.propTypes = {\n  word: PropTypes.any.isRequired,\n  title: PropTypes.string,\n};\n\nexport default memo(UeSoIssoCard);\n","import React, { useState } from 'react';\n// Design Resources\nimport { Button, Input, Space } from 'antd';\nimport { CloudUploadOutlined } from '@ant-design/icons';\n// Components\nimport Title from '../../shared/Title';\nimport Instruction from '../../shared/Instruction';\nimport Card from '../../cards/UeSoIssoCard';\n\nfunction SuggestionStep({ onSendSuggestions, secretWord, suggestionsNumber = 1, guesser }) {\n  const [suggestions, setSuggestions] = useState([]);\n\n  const onChangeInput = (e) => {\n    const { id, value } = e.target;\n    if (id && value?.length > 1) {\n      const indexStr = id.split('-')[1];\n      const index = Number(indexStr) - 1;\n      setSuggestions((s) => {\n        const newState = { ...s };\n        newState[index] = value.toUpperCase().trim();\n        return newState;\n      });\n    }\n  };\n\n  const suggestionsValues = Object.values(suggestions);\n\n  return (\n    <div className=\"u-word-suggestion-step\">\n      <Title>Escreva uma dica para {guesser.name}</Title>\n\n      <Instruction contained>\n        A dica tem que ser uma palavra única que ajude o adivinhador... adivinhar.\n        <br />\n        É proibido usar derivados, partes da palavra ou traduções em outras linguas.\n        <br />\n        E não seja tão óbvio, já que dicas similares são eliminadas.\n        <br />\n      </Instruction>\n\n      <Card word={secretWord.text} header=\"Palavra Secreta\" />\n\n      {suggestionsNumber > 1 && (\n        <Instruction contained>\n          Já que esse jogo tem menos jogadores, você tem que escrever {suggestionsNumber} sugestões\n        </Instruction>\n      )}\n\n      <Space className=\"u-word-suggestion-step__inputs\">\n        {Array(suggestionsNumber)\n          .fill(1)\n          .map((entry, index) => {\n            const id = `suggestion-${entry + index}`;\n            return (\n              <Input\n                placeholder=\"Escreva dica\"\n                key={id}\n                id={id}\n                onChange={onChangeInput}\n                className=\"u-word-suggestion-step__input\"\n              />\n            );\n          })}\n      </Space>\n\n      <Space className=\"u-word-suggestion-step__submit\">\n        <Button\n          icon={<CloudUploadOutlined />}\n          type=\"primary\"\n          onClick={() => onSendSuggestions(suggestionsValues)}\n          disabled={suggestionsValues.length < suggestionsNumber}\n        >\n          {suggestionsNumber > 1 ? 'Enviar sugestões' : 'Enviar sugestão'}\n        </Button>\n      </Space>\n    </div>\n  );\n}\n\nexport default SuggestionStep;\n","import React, { Fragment, useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { message, notification } from 'antd';\n// Hooks\nimport { useGlobalState, useLoading, useAmIReady, useActivePlayer, useAmIActive } from '../../../hooks';\n// Resources & Utils\nimport { UE_SO_ISSO_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport WaitingRoom from '../../shared/WaitingRoom';\nimport StepSwitcher from '../../shared/StepSwitcher';\nimport SuggestionStep from './SuggestionStep';\n\nfunction SuggestPhase({ state, players, info }) {\n  const [, setLoader] = useLoading();\n  const amIReady = useAmIReady(players, state);\n  const [gameId] = useGlobalState('gameId');\n  const [gameName] = useGlobalState('gameName');\n  const [me] = useGlobalState('me');\n  const [step, setStep] = useState(0);\n  const guesser = useActivePlayer(state, players, 'guesser');\n  const amITheGuesser = useAmIActive(state, 'guesser');\n\n  const onSendSuggestions = useCallback(\n    async (suggestions) => {\n      try {\n        setLoader('submit-suggestion', true);\n        setStep(1);\n        const response = await UE_SO_ISSO_API.submitSuggestions({\n          gameId,\n          gameName,\n          playerName: me,\n          suggestions,\n        });\n\n        if (response.data) {\n          message.success(\n            'Sugestão enviada com successo! Aguarde enquanto os outros participantes escrevem suas dicas'\n          );\n        }\n      } catch (e) {\n        notification.error({\n          message: 'Vixi, o aplicativo encontrou um erro ao tentar enviar sua(s) dica(s)',\n          description: JSON.stringify(e.message),\n          placement: 'bottomLeft',\n        });\n        console.error(e);\n        setStep(0);\n      } finally {\n        setLoader('submit-suggestion', false);\n      }\n    },\n    [gameId, gameName, me, setLoader]\n  );\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.UE_SO_ISSO.SUGGEST}\n      className=\"word-selection-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!amIReady]}>\n        {/* Step 0 */}\n        <Fragment>\n          {amITheGuesser ? (\n            <WaitingRoom\n              players={players}\n              title=\"Você é o(a) adivinhador(a)\"\n              instruction=\"Aguarde os outros jogadores decidirem a palavra secreta.\"\n            />\n          ) : (\n            <SuggestionStep\n              guesser={guesser}\n              onSendSuggestions={onSendSuggestions}\n              secretWord={state.secretWord}\n              suggestionsNumber={state.suggestionsNumber}\n            />\n          )}\n        </Fragment>\n\n        {/* Step 1 */}\n        <WaitingRoom players={players} title=\"Pronto!\" instruction=\"Vamos aguardar os outros joadores.\" />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nSuggestPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default SuggestPhase;\n","import React, { memo } from 'react';\n// Design Resources\nimport { Avatar as AntAvatar } from 'antd';\nimport { CloseOutlined } from '@ant-design/icons';\n// Components\nimport BasicCard from '../../cards/Card';\nimport clsx from 'clsx';\nimport Avatar from '../../avatars/Avatar';\nimport { getColorFromIndex } from '../../../utils';\nimport { LETTERS } from '../../../utils/constants';\n\nfunction SuggestionCard({ suggestion, invalid, avatarId, index }) {\n  return (\n    <BasicCard\n      size=\"medium\"\n      color={getColorFromIndex(index)}\n      className={clsx(invalid && 'u-suggestion-card__invalid')}\n      header={LETTERS[index]}\n    >\n      {invalid ? (\n        <AntAvatar size=\"small\" className=\"u-suggestion-card__suggestion-avatar\">\n          <CloseOutlined />\n        </AntAvatar>\n      ) : (\n        <Avatar id={avatarId} size=\"small\" className=\"u-suggestion-card__suggestion-avatar\" />\n      )}\n      {suggestion}\n    </BasicCard>\n  );\n}\n\nexport default memo(SuggestionCard);\n","import React, { useState } from 'react';\n// Design Resources\nimport { Button, Space } from 'antd';\nimport { CloudUploadOutlined, ExclamationCircleOutlined, FireFilled } from '@ant-design/icons';\n// State\nimport { useGlobalState, useLoading } from '../../../hooks';\n// Components\nimport Title from '../../shared/Title';\nimport Instruction from '../../shared/Instruction';\nimport AdminOnly from '../../shared/AdminOnly';\nimport Card from '../../cards/UeSoIssoCard';\nimport SuggestionCard from './SuggestionCard';\n\nfunction CompareSuggestionsStep({\n  nextGuesser,\n  me,\n  secretWord,\n  suggestions,\n  onValidateSuggestions,\n  players,\n}) {\n  const [isLoading] = useLoading();\n  const [myRecommendation, setMyRecommendation] = useState(suggestions);\n  const [isAdmin] = useGlobalState('isAdmin');\n\n  const onSetValidation = (index, suggestionEntry, notAllowed) => {\n    if (notAllowed) return;\n\n    setMyRecommendation((arr) => {\n      const newArr = [...arr];\n      if (newArr[index]) {\n        newArr[index].invalid = !newArr[index].invalid;\n      } else {\n        newArr[index] = {\n          ...suggestionEntry,\n          invalid: true,\n        };\n      }\n      return newArr;\n    });\n  };\n\n  const suggestionsValues = Object.values(myRecommendation);\n  const amITheNextGuesser = nextGuesser === me;\n\n  return (\n    <div className=\"u-word-compare-suggestions-step\">\n      <Title white>Comparem as sugestões</Title>\n      <Card word={secretWord.text} header=\"Palavra Secreta\" />\n      <Instruction contained>\n        Já eliminamos todas as palavras iguais, agora, elimine palavras inválidas ou similares.\n        <br />\n        Lembre-se que são consideradas dicas iguais palavras derividadas, conjugações: piloto = pilotar =\n        pilotando. Variações como pluralidade, gênero e erros ortograficos também devem ser\n        eliminadas: príncipe = princesa = principes = pryncip.\n        <br />\n        <ExclamationCircleOutlined /> Para não virar bagunça, somente{' '}\n        <strong>\n          <u>{nextGuesser}</u>\n        </strong>{' '}\n        pode clicar nas palavras para eliminá-las ou ativá-las, mas todos podem discutir. <br /> Refiram às\n        palavras por número, o Adivinhador pode estar ouvindo!\n      </Instruction>\n\n      <Space className=\"u-word-compare-suggestions-step__suggestions\">\n        {suggestions.map((suggestionEntry, index) => {\n          if (!amITheNextGuesser && !isAdmin) {\n            return (\n              <div key={`${suggestionEntry.suggestion}-${index}`}>\n                <SuggestionCard\n                  suggestion={suggestionEntry.suggestion}\n                  invalid={suggestionEntry.invalid}\n                  avatarId={players[suggestionEntry.playerName].avatarId}\n                  index={index}\n                />\n              </div>\n            );\n          }\n\n          return (\n            <button\n              key={`${suggestionEntry.suggestion}-${index}`}\n              className=\"u-word-compare-suggestions-step__suggestion-button\"\n              onClick={() => onSetValidation(index, suggestionEntry, suggestionEntry.invalid)}\n            >\n              <SuggestionCard\n                suggestion={suggestionEntry.suggestion}\n                invalid={myRecommendation?.[index]?.invalid ?? suggestionEntry.invalid}\n                avatarId={players[suggestionEntry.playerName].avatarId}\n                index={index}\n              />\n            </button>\n          );\n        })}\n      </Space>\n\n      {amITheNextGuesser && (\n        <Space className=\"u-word-compare-suggestions-step__submit\">\n          <Button\n            icon={<CloudUploadOutlined />}\n            type=\"primary\"\n            onClick={() =>\n              onValidateSuggestions({\n                validSuggestions: suggestionsValues.filter((suggestion) => !suggestion.invalid),\n              })\n            }\n            disabled={isLoading}\n          >\n            Confirmar dicas válidas\n          </Button>\n        </Space>\n      )}\n\n      <AdminOnly>\n        <Button\n          icon={<FireFilled />}\n          type=\"primary\"\n          danger\n          onClick={() =>\n            onValidateSuggestions({\n              validSuggestions: suggestionsValues.filter((suggestion) => !suggestion.invalid),\n            })\n          }\n          disabled={isLoading}\n        >\n          Confirmar dicas válidas como Admin\n        </Button>\n      </AdminOnly>\n    </div>\n  );\n}\n\nexport default CompareSuggestionsStep;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useGlobalState, useAmIActive, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { UE_SO_ISSO_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport WaitingRoom from '../../shared/WaitingRoom';\nimport StepSwitcher from '../../shared/StepSwitcher';\nimport CompareSuggestionsStep from './CompareSuggestionsStep';\n\nfunction ComparePhase({ state, players, info }) {\n  const [me] = useGlobalState('me');\n  const [step, setStep] = useState(0);\n  const amITheGuesser = useAmIActive(state, 'guesser');\n\n  const onValidateSuggestions = useAPICall({\n    apiFunction: UE_SO_ISSO_API.submitValidation,\n    actionName: 'validate-suggestions',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage: 'Validação enviada com sucesso!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar a confirmação das sugestões',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.UE_SO_ISSO.COMPARE}\n      className=\"u-compare-phase\"\n    >\n      <StepSwitcher step={step}>\n        {/* Step 0 */}\n        <div className=\"u-compare-phase__step\">\n          {amITheGuesser ? (\n            <WaitingRoom\n              players={players}\n              title=\"Você é o(a) adivinhador(a)\"\n              instruction=\"Aguarde os outros jogadores selecionarem as dicas válidas.\"\n            />\n          ) : (\n            <CompareSuggestionsStep\n              nextGuesser={state.nextGuesser}\n              secretWord={state.secretWord}\n              suggestions={state.suggestions}\n              me={me}\n              players={players}\n              onValidateSuggestions={onValidateSuggestions}\n            />\n          )}\n        </div>\n\n        {/* Step 1 */}\n        <WaitingRoom players={players} title=\"Enviando a confirmação de sugestões\" instruction=\"Aguarde...\" />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nComparePhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default ComparePhase;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Space } from 'antd';\nimport { CheckOutlined, CloseOutlined, MinusOutlined, QuestionCircleOutlined } from '@ant-design/icons';\n// Hooks\nimport { useGlobalState, useLoading, useActivePlayer, useAmIActive, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { UE_SO_ISSO_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport WaitingRoom from '../../shared/WaitingRoom';\nimport StepSwitcher from '../../shared/StepSwitcher';\nimport Title from '../../shared/Title';\nimport Avatar from '../../avatars/Avatar';\nimport Instruction from '../../shared/Instruction';\nimport UeSoIssoCard from '../../cards/UeSoIssoCard';\nimport SuggestionCard from './SuggestionCard';\n\nfunction GuessPhase({ state, players, info }) {\n  const [isLoading] = useLoading();\n  const [isAdmin] = useGlobalState('isAdmin');\n  const [step, setStep] = useState(0);\n  const guesser = useActivePlayer(state, players, 'guesser');\n  const amITheNextGuesser = useAmIActive(state, 'nextGuesser');\n\n  const onSubmitGuess = useAPICall({\n    apiFunction: UE_SO_ISSO_API.confirmGuess,\n    actionName: 'guess',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage: 'Resultado enviado com sucesso!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar o resultado',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.UE_SO_ISSO.GUESS}\n      className=\"u-word-guess-phase\"\n    >\n      <StepSwitcher step={step}>\n        {/* Step 0 */}\n        <div className=\"u-word-guess-phase__step\">\n          <Title>\n            Hora de brilhar <Avatar id={guesser.avatarId} /> {guesser.name}!\n          </Title>\n          <Instruction contained>Você tem uma única change de adivinhar a palavra secreta!</Instruction>\n          <UeSoIssoCard word={<QuestionCircleOutlined />} header=\"A Palavra Secreta é\" />\n          <Instruction contained>\n            {state.nextGuesser} está encarregado(a) de apertar os botões se você acertou ou não. <br />\n            São 3 pontos se você acertar, -1 se errar, mas você pode passar e não tentar, covarde!.. <br />\n            As dicas são:\n          </Instruction>\n\n          <Space className=\"u-word-guess-phase__suggestions\">\n            {state.validSuggestions.map((suggestionEntry, index) => {\n              return (\n                <div key={`${suggestionEntry.suggestion}-${index}`}>\n                  <SuggestionCard\n                    suggestion={suggestionEntry.suggestion}\n                    invalid={false}\n                    avatarId={players[suggestionEntry.playerName].avatarId}\n                    index={index}\n                  />\n                </div>\n              );\n            })}\n          </Space>\n\n          {(amITheNextGuesser || isAdmin) && (\n            <Space className=\"u-word-guess-phase__guess-submit\">\n              <Button\n                icon={<CheckOutlined />}\n                type=\"primary\"\n                style={{ backgroundColor: 'green' }}\n                onClick={() => onSubmitGuess({ guess: 'CORRECT' })}\n                disabled={isLoading}\n              >\n                Acertou\n              </Button>\n              <Button\n                icon={<CloseOutlined />}\n                type=\"primary\"\n                danger\n                onClick={() => onSubmitGuess({ guess: 'WRONG' })}\n                disabled={isLoading}\n              >\n                Errou\n              </Button>\n              <Button\n                icon={<MinusOutlined />}\n                type=\"default\"\n                onClick={() => onSubmitGuess({ guess: 'PASS' })}\n                disabled={isLoading}\n              >\n                Passou a vez\n              </Button>\n            </Space>\n          )}\n        </div>\n\n        {/* Step 1 */}\n        <WaitingRoom players={players} title=\"Enviando a confirmação de sugestões\" instruction=\"Aguarde...\" />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nGuessPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default GuessPhase;\n","import React, { Fragment, useEffect, useState } from 'react';\n// Hooks\nimport { useGameState, useGlobalState } from '../../../hooks';\nimport { GAME_COLLECTION, PHASES } from '../../../utils/constants';\n// Hooks\nimport { useGamePlayers } from '../../../hooks/useGamePlayers';\n// Utils\nimport gameList from '../../../resources/games.json';\n// Components\nimport Lobby from '../../lobby/Lobby';\nimport Rules from '../../rules/Rules';\nimport PageError from '../../errors/PageError';\nimport WordSelectionPhase from './WordSelectionPhase';\nimport SuggestPhase from './SuggestPhase';\nimport ComparePhase from './ComparePhase';\nimport GuessPhase from './GuessPhase';\nimport GameOver from '../../shared/GameOver';\nimport GameInfoDrawer from '../../shared/GameInfoDrawer';\n\nfunction getActiveComponent(phase) {\n  switch (phase) {\n    case PHASES.UE_SO_ISSO.LOBBY:\n      return Lobby;\n    case PHASES.UE_SO_ISSO.RULES:\n      return Rules;\n    case PHASES.UE_SO_ISSO.WORD_SELECTION:\n      return WordSelectionPhase;\n    case PHASES.UE_SO_ISSO.SUGGEST:\n      return SuggestPhase;\n    case PHASES.UE_SO_ISSO.COMPARE:\n      return ComparePhase;\n    case PHASES.UE_SO_ISSO.GUESS:\n      return GuessPhase;\n    case PHASES.UE_SO_ISSO.GAME_OVER:\n      return GameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionUeSoIsso({ gameId }) {\n  const players = useGamePlayers(gameId, GAME_COLLECTION.UE_SO_ISSO);\n  const state = useGameState(gameId, GAME_COLLECTION.UE_SO_ISSO);\n  const [me] = useGlobalState('me');\n  const [info, setInfo] = useState({});\n\n  // Update game description as the gameId comes in\n  useEffect(() => {\n    setInfo(gameId?.[0] ? gameList[gameId[0]] : {});\n  }, [gameId]);\n\n  if (process.env.NODE_ENV === 'development') {\n    console.table(players);\n    console.log({ state });\n  }\n\n  if (!me) {\n    return <Lobby players={players} state={state} info={info} />;\n  }\n\n  const ActiveComponent = getActiveComponent(state.phase);\n\n  return (\n    <Fragment>\n      <GameInfoDrawer players={players} state={state} info={info} me={me} />\n      <ActiveComponent players={players} state={state} info={info} />\n    </Fragment>\n  );\n}\n\nexport default SessionUeSoIsso;\n","import ArteRuim from './arte-ruim/SessionArteRuim';\nimport OndaTelepatica from './onda-telepatica/SessionOndaTelepatica';\nimport UeSoIsso from './ue-so-isso/SessionUeSoIsso';\n\nconst games = {\n  ArteRuim,\n  OndaTelepatica,\n  UeSoIsso,\n};\n\nexport default games;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n// Design Resources\nimport { message, notification } from 'antd';\n// Adapters\nimport { GAME_API } from '../adapters';\n// Hooks\nimport { useIsGameStale, useLoading, useGlobalState } from '../hooks';\n// Utils\nimport { getGameIdFromURL, getGameIdFromLocation, isValidGameId } from '../utils';\nimport { GAME_COLLECTION } from '../utils/constants';\n// Components\nimport LoadingPage from './loaders/LoadingPage';\nimport PageError from './errors/PageError';\nimport GameSessions from './games';\n\nfunction Game() {\n  const history = useHistory();\n  const [, setLoader] = useLoading();\n  const [gameId, setGameId] = useGlobalState('gameId');\n  const [gameName, setGameName] = useGlobalState('gameName');\n  const [gameMeta, setGameMeta] = useGlobalState('gameMeta');\n\n  const [isPageLoading, setPageLoading] = useState(true);\n  const isGameStale = useIsGameStale(gameMeta?.createdAt);\n\n  // Verify url game code\n  useEffect(() => {\n    const urlGameId = getGameIdFromURL(history);\n    if (isValidGameId(urlGameId)) {\n      setGameId(urlGameId);\n    } else {\n      message.error('Vixi, a id do jogo na barra de endereços tá errada');\n      history.push('/');\n    }\n  }, [history, setGameId]);\n\n  // Keeps track of url changes\n  useEffect(() => {\n    return history.listen((location) => {\n      const urlGameId = getGameIdFromLocation(location);\n      if (isValidGameId(urlGameId)) {\n        setGameId(urlGameId);\n        message.info('Uma nova id de jogo foi provida');\n      } else {\n        message.error('Vixi, a id do jogo na barra de endereços tá errada');\n        history.push('/');\n      }\n    });\n  }, [history, setGameId]);\n\n  // Load game\n  useEffect(() => {\n    setPageLoading(true);\n    async function loadGameSession() {\n      try {\n        setLoader('load', true);\n        const meta = await GAME_API.loadGame({ gameId });\n        setGameName(meta.data.gameName);\n        setGameMeta(meta.data);\n      } catch (e) {\n        console.error(e);\n        notification.error({\n          message: 'Erro ao carregar o jogo',\n          description: JSON.stringify(e.message),\n        });\n        console.error(e);\n      } finally {\n        setPageLoading(false);\n        setLoader('load', false);\n      }\n    }\n\n    if (gameId) {\n      loadGameSession();\n    }\n  }, [gameId]); // eslint-disable-line\n\n  // Deffer to load screen if any major API call is running\n  if (isPageLoading) {\n    return <LoadingPage />;\n  }\n\n  if (isGameStale) {\n    return (\n      <PageError message=\"Jogo expirado\" description=\"Esse jogo é muito antigo e não pode ser usado mais\" />\n    );\n  }\n\n  if (gameId && gameName) {\n    switch (gameName) {\n      case GAME_COLLECTION.ARTE_RUIM:\n        return <GameSessions.ArteRuim gameId={gameId} />;\n      case GAME_COLLECTION.ONDA_TELEPATICA:\n        return <GameSessions.OndaTelepatica gameId={gameId} />;\n      case GAME_COLLECTION.UE_SO_ISSO:\n        return <GameSessions.UeSoIsso gameId={gameId} />;\n      default:\n        console.warn('Wrong game library provided');\n    }\n  }\n\n  // If switch fails, it's an error\n  return <PageError />;\n}\n\nexport default Game;\n","import { useEffect, useState } from 'react';\n\nexport function useIsGameStale(gameCreatedAt) {\n  const [isGameStale, setGameStale] = useState(false);\n\n  useEffect(() => {\n    setGameStale(Date.now() - 24 * 60 * 60 * 1000 > gameCreatedAt);\n  }, [gameCreatedAt, setGameStale]);\n\n  return isGameStale;\n}\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\n// import { Image, Layout } from 'antd';\nimport gameList from '../resources/games.json';\nimport Avatar from './avatars/Avatar';\nimport AvatarEntry from './avatars/AvatarEntry';\nimport GameOver from './shared/GameOver';\nimport Instruction from './shared/Instruction';\nimport PhaseContainer from './shared/PhaseContainer';\nimport RoundAnnouncement from './shared/RoundAnnouncement';\n// Resources\nimport { CheckCircleFilled, CheckCircleOutlined } from '@ant-design/icons';\nimport { Button, Input } from 'antd';\nimport Title from './shared/Title';\nimport { LETTERS } from '../utils/constants';\nimport Card from './cards/Card';\nimport { getColorFromLetter } from '../utils';\n\nfunction TestingZone() {\n  const info = gameList['U'];\n\n  const players = {\n    Flaviane: {\n      avatarId: 10,\n      name: 'Flaviane',\n      ready: false,\n      score: 0,\n      updatedAt: Date.now(),\n    },\n    Kavis: {\n      avatarId: 11,\n      name: 'Kavis',\n      ready: false,\n      score: 0,\n      updatedAt: Date.now(),\n    },\n    Stephanie: {\n      avatarId: 12,\n      name: 'Stephanie',\n      ready: false,\n      score: 0,\n      updatedAt: Date.now(),\n    },\n  };\n\n  // Mock State\n  const state = {\n    phase: 'WORD_SELECTION',\n    guesser: 'Kavis',\n    playerOrder: ['Flaviane', 'Stephanie', 'Kavis', 'Flaviane', 'Stephanie', 'Kavis'],\n    round: 3,\n    words: [1, 2, 3, 4, 5],\n    // phase: 'GAME_OVER',\n    // winner: {\n    //   name: 'Flaviane',\n    //   avatarId: 15,\n    //   score: 35,\n    // },\n  };\n\n  console.log('==========');\n  console.log({ info });\n  console.table(players);\n  console.log({ state });\n  console.log('==========');\n\n  const guesser = players[state.guesser];\n  console.log(guesser);\n\n  // return <GameOver info={info} state={state} players={players} />;\n  return (\n    <PhaseContainer info={info} phase={state.phase} allowedPhase=\"WORD_SELECTION\" className=\"\" fullScreen>\n      <div className=\"u-word-selection\"></div>\n    </PhaseContainer>\n  );\n}\n\nexport default TestingZone;\n","import React from 'react';\n// Hooks\nimport { useLoading } from '../../hooks';\n\nfunction LoadingBar() {\n  const [isLoading] = useLoading();\n\n  return isLoading ? <div className=\"loading-bar\"></div> : <></>;\n}\n\nexport default LoadingBar;\n","import React, { useState, useEffect } from 'react';\nimport { HashRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\n\n// Design Resources\nimport { Layout, message } from 'antd';\n// Firebase\nimport { auth } from '../services/firebase';\n// State\nimport { useGlobalState } from '../hooks';\n// Pages\nimport Home from './Home';\nimport Admin from './Admin';\nimport Login from './Login';\nimport Game from './Game';\nimport TestingZone from './TestingZone';\nimport LoadingPage from './loaders/LoadingPage';\nimport LoadingBar from './loaders/LoadingBar';\n\nfunction PrivateRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authenticated === true ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        )\n      }\n    />\n  );\n}\n\nfunction PublicRoute({ component: Component, authenticated, ...rest }) {\n  const fromPath = rest?.location?.state?.from?.pathname ?? '/';\n  return (\n    <Route\n      {...rest}\n      render={(props) => (authenticated === false ? <Component {...props} /> : <Redirect to={fromPath} />)}\n    />\n  );\n}\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useGlobalState('isAuthenticated');\n  const [, setIsAdmin] = useGlobalState('isAdmin');\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoading(false);\n        setIsAuthenticated(true);\n        setIsAdmin(true);\n        message.info('Você foi logado de volta automaticamente.');\n      } else {\n        setIsLoading(false);\n        setIsAuthenticated(false);\n        setIsAdmin(false);\n      }\n    });\n  }, []); // eslint-disable-line\n\n  return (\n    <Layout className=\"app\">\n      <LoadingBar />\n      <Router>\n        {isLoading ? (\n          <LoadingPage />\n        ) : (\n          <Switch>\n            <Route exact path=\"/\" component={Home}></Route>\n            <PrivateRoute path=\"/admin\" authenticated={isAuthenticated} component={Admin} />\n            <PublicRoute path=\"/login\" authenticated={isAuthenticated} component={Login} />\n            <PrivateRoute path=\"/testing-zone\" authenticated={isAuthenticated} component={TestingZone} />\n            <Route path=\"*\" component={Game} />\n          </Switch>\n        )}\n      </Router>\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport './styles/index.css';\n\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}