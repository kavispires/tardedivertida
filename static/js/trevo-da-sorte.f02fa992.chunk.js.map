{"version":3,"file":"static/js/trevo-da-sorte.f02fa992.chunk.js","mappings":"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","sources":["components/icons/CloverIcon.tsx","components/icons/VerifyListIcon.tsx","components/icons/WritingIcon.tsx","components/views/View.tsx","components/views/ViewIf.tsx","components/views/ViewOr.tsx","components/views/ViewSwitch.tsx","games/trevo-da-sorte/utils/constants.ts","games/trevo-da-sorte/utils/mock.ts","games/trevo-da-sorte/StepSelectWords.tsx","games/trevo-da-sorte/PhaseWordSelection.tsx","games/trevo-da-sorte/utils/api-requests.ts","../node_modules/@ant-design/icons-svg/es/asn/RedoOutlined.js","../node_modules/@ant-design/icons/es/icons/RedoOutlined.js","games/trevo-da-sorte/components/Leaf.tsx","games/trevo-da-sorte/components/LeafSlot.tsx","games/trevo-da-sorte/components/Clover.tsx","games/trevo-da-sorte/utils/helpers.ts","games/trevo-da-sorte/utils/useCloverState.ts","games/trevo-da-sorte/StepWriteClues.tsx","games/trevo-da-sorte/PhaseCloverWriting.tsx","games/trevo-da-sorte/components/DetachedLeaves.tsx","games/trevo-da-sorte/StepGuessClover.tsx","games/trevo-da-sorte/StepWaitClover.tsx","games/trevo-da-sorte/PhaseCloverGuessing.tsx","games/trevo-da-sorte/components/PlayersGuesses.tsx","games/trevo-da-sorte/StepRanking.tsx","games/trevo-da-sorte/PhaseResults.tsx","games/trevo-da-sorte/PhaseGameOver.tsx","games/trevo-da-sorte/SessionTrevoDaSorte.tsx","hooks/useBooleanDictionary.ts","hooks/useWhichPlayerIsThe.ts","../node_modules/@ant-design/icons-svg/es/asn/CaretUpOutlined.js","../node_modules/@ant-design/icons/es/icons/CaretUpOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/CrownFilled.js","../node_modules/@ant-design/icons/es/icons/CrownFilled.js","../node_modules/@ant-design/icons-svg/es/asn/DeleteOutlined.js","../node_modules/@ant-design/icons/es/icons/DeleteOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/LikeFilled.js","../node_modules/@ant-design/icons/es/icons/LikeFilled.js","../node_modules/@ant-design/icons-svg/es/asn/StarFilled.js","../node_modules/@ant-design/icons/es/icons/StarFilled.js","../node_modules/rc-rate/es/Star.js","../node_modules/rc-rate/es/Rate.js","../node_modules/rc-rate/es/util.js","../node_modules/rc-rate/es/index.js","../node_modules/antd/es/rate/index.js"],"sourcesContent":["export function CloverIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#5eac24\"\n        d=\"M438.93 253.91s-40.8-40.06-108.65-46.44c67.55-6.53 108.16-46.4 108.16-46.4a55.48 55.48 0 000-78.46c-10.02-10.02-24.5-13.82-37.62-14.56a5.96 5.96 0 01-3.57-1.46 5.95 5.95 0 01-2.1-4.2c-.75-13.13-4.55-27.62-14.57-37.64a55.47 55.47 0 00-78.44 0s-41.3 42.06-46.72 111.8C250 66.8 208.69 24.75 208.69 24.75a55.47 55.47 0 00-78.44 0c-10.02 10.02-13.82 24.51-14.57 37.63a5.95 5.95 0 01-2.1 4.21 5.96 5.96 0 01-3.56 1.46c-13.12.74-27.6 4.54-37.63 14.56a55.39 55.39 0 00-9.83 13.3 55.52 55.52 0 009.83 65.15s40.7 39.96 108.37 46.43C113.1 213.95 72.4 253.9 72.4 253.9a55.48 55.48 0 000 78.45c10.02 10.02 24.5 13.82 37.63 14.56 1.36.08 2.6.61 3.56 1.46 1.2 1.02 2 2.52 2.1 4.2.75 13.13 4.55 27.62 14.57 37.64a55.47 55.47 0 0078.44 0s22.37-22.79 36.35-62.61c3.47 24.06 10.96 56.68 26.5 98.23 9.45 25.23 24.6 47.7 43.8 65a111.61 111.61 0 0014.99 11.6 12.9 12.9 0 1013.72-21.86 86.02 86.02 0 01-11.44-8.9c-16.14-14.55-28.9-33.52-36.89-54.89-9.72-25.97-16.08-48.4-20.22-67.2 12.86 26.11 27.12 40.63 27.12 40.63a55.48 55.48 0 0078.45 0c10.02-10.02 13.82-24.5 14.56-37.63.08-1.36.61-2.6 1.45-3.56 1.03-1.2 2.53-2.01 4.21-2.1 13.12-.75 27.62-4.55 37.64-14.57a55.47 55.47 0 000-78.45zm-153.02-45.58a33.5 33.5 0 00-28.88 28.88c-.65 4.97-1.1 9.84-1.37 14.62-.28-4.78-.73-9.65-1.38-14.63a33.5 33.5 0 00-28.88-28.88c-2.53-.33-5.04-.6-7.53-.84 2.49-.23 5-.5 7.54-.83a33.48 33.48 0 0022.98-13.85l.08-.1a33.41 33.41 0 005.81-14.93c.5-3.75.86-7.45 1.14-11.09.28 3.64.64 7.34 1.14 11.09a33.5 33.5 0 0028.88 28.88c2.62.34 5.22.62 7.79.86-2.42.23-4.86.5-7.32.82z\"\n      ></path>\n      <path\n        fill=\"#6dc82a\"\n        d=\"M337.17 504.42c-2.34 0-4.71-.64-6.85-1.98-20.7-13-45.33-40.68-58.77-76.6-17.24-46.27-32.07-99.93-28.64-149.17l.02-.27a12.89 12.89 0 019.47-11.73l.12-.04c1.1-.3 2.25-.45 3.44-.42l.55.01a12.9 12.9 0 0112.2 13.58c-2.66 45.91 11.03 96.09 27.01 138.99 11.18 29.9 31.96 53.5 48.32 63.8 10.95 6.84 6.06 23.83-6.87 23.83z\"\n      ></path>\n      <path\n        fill=\"#5eac24\"\n        d=\"M294.04 412.22c-6.72-9.58-19.13-2.05-28.94-4.4-13.94-41.05-25.21-87.74-22.19-131.15l.02-.27a12.89 12.89 0 019.47-11.73l.12-.03c1.25-.27 2.41-.42 3.44-.42h.55a12.9 12.9 0 0112.2 13.59c-.09 1.38-6.47 47.31 25.33 134.4z\"\n      ></path>\n      <path\n        fill=\"#6dc82a\"\n        d=\"M256.55 177.77a33.5 33.5 0 0028.88 28.88c94.04 12.32 153.01-45.59 153.01-45.59a55.48 55.48 0 000-78.45c-10.02-10.02-24.5-13.82-37.62-14.56a5.96 5.96 0 01-3.57-1.46 5.95 5.95 0 01-2.1-4.2c-.75-13.13-4.55-27.62-14.57-37.64a55.47 55.47 0 00-78.44 0s-57.91 58.97-45.59 153.02z\"\n      ></path>\n      <path\n        fill=\"#4e901e\"\n        d=\"M397.24 66.6L262.37 192.67v.01a33.41 33.41 0 01-5.82-14.92c-12.33-94.05 45.59-153.02 45.59-153.02a55.47 55.47 0 0178.44 0c10.02 10.02 13.82 24.51 14.57 37.63.09 1.69.9 3.2 2.1 4.21z\"\n      ></path>\n      <path\n        fill=\"#4e901e\"\n        d=\"M254.28 177.77a33.42 33.42 0 01-5.81 14.92l-.08.11a33.48 33.48 0 01-22.99 13.85c-94.03 12.32-153-45.59-153-45.59a55.52 55.52 0 01-9.83-65.15 55.38 55.38 0 019.83-13.3c10.02-10.02 24.5-13.82 37.63-14.56a5.96 5.96 0 003.56-1.46 5.947 5.947 0 002.1-4.2c.75-13.13 4.55-27.62 14.57-37.64a55.47 55.47 0 0178.44 0s57.92 58.97 45.59 153.02z\"\n      ></path>\n      <path\n        fill=\"#5eac24\"\n        d=\"M254.28 177.77a33.42 33.42 0 01-5.81 14.92l-.08.11c-103.07 8.36-167.1-56.24-167.1-56.24a67.32 67.32 0 01-18.73-40.65 55.38 55.38 0 019.83-13.3c10.02-10.02 24.5-13.82 37.63-14.56a5.96 5.96 0 003.57-1.46c1.2-1.02 2-2.52 2.1-4.2.74-13.13 4.54-27.62 14.57-37.64a55.47 55.47 0 0178.44 0s57.9 58.97 45.58 153.02z\"\n      ></path>\n      <path\n        fill=\"#6dc82a\"\n        d=\"M254.28 177.77a33.42 33.42 0 01-5.81 14.92L113.59 66.6c1.2-1.02 2-2.52 2.09-4.2.75-13.13 4.55-27.62 14.57-37.64a55.47 55.47 0 0178.45 0s57.9 58.97 45.58 153.02z\"\n      ></path>\n      <path\n        fill=\"#5eac24\"\n        d=\"M397.24 66.6L262.37 192.67c4-94.08 60.11-151.23 60.11-151.23a70.6 70.6 0 0153.76-20.61 56.7 56.7 0 014.34 3.9c10.02 10.03 13.82 24.52 14.57 37.64.09 1.69.9 3.2 2.1 4.21z\"\n      ></path>\n      <path\n        fill=\"#6dc82a\"\n        d=\"M285.9 208.33a33.5 33.5 0 00-28.88 28.88c-12.32 94.03 45.6 153 45.6 153a55.48 55.48 0 0078.45 0c10.02-10.02 13.82-24.5 14.56-37.62.08-1.36.61-2.6 1.45-3.57 1.03-1.2 2.53-2 4.21-2.1 13.12-.75 27.62-4.55 37.64-14.57a55.47 55.47 0 000-78.44S379.95 196 285.91 208.33z\"\n      ></path>\n      <path\n        fill=\"#4e901e\"\n        d=\"M397.08 349.02L271 214.15v-.01a33.41 33.41 0 0114.92-5.82c94.04-12.32 153.02 45.59 153.02 45.59a55.47 55.47 0 010 78.44c-10.02 10.02-24.52 13.82-37.64 14.57-1.68.1-3.19.9-4.2 2.1z\"\n      ></path>\n      <path\n        fill=\"#5eac24\"\n        d=\"M397.08 349.02L271 214.15c94.09 4 151.23 60.1 151.23 60.1a70.6 70.6 0 0120.62 53.76 56.7 56.7 0 01-3.91 4.34c-10.02 10.02-24.52 13.82-37.64 14.57-1.68.1-3.19.9-4.2 2.1z\"\n      ></path>\n      <path\n        fill=\"#6dc82a\"\n        d=\"M254.28 237.2a33.5 33.5 0 00-28.88-28.88c-94.03-12.32-153 45.59-153 45.59a55.48 55.48 0 000 78.45c10.02 10.02 24.5 13.82 37.63 14.56 1.36.08 2.6.61 3.57 1.46 1.2 1.02 2 2.52 2.09 4.2.75 13.12 4.55 27.62 14.57 37.64a55.47 55.47 0 0078.45 0s57.9-58.98 45.58-153.02zm19.66-2.78c.98-3.26 1.77-4.78 1.36-1.62-.12.91-.62 1.4-1.36 1.62z\"\n      ></path>\n      <path\n        fill=\"#4e901e\"\n        d=\"M113.59 348.38l134.87-126.1a33.41 33.41 0 015.82 14.92c12.33 94.05-45.58 153.02-45.58 153.02a55.47 55.47 0 01-78.44 0c-10.03-10.02-13.83-24.52-14.58-37.64a5.94 5.94 0 00-2.1-4.2z\"\n      ></path>\n      <path\n        fill=\"#5eac24\"\n        d=\"M113.59 348.38l134.87-126.1c-4 94.1-60.11 151.23-60.11 151.23a70.6 70.6 0 01-53.75 20.62 56.7 56.7 0 01-4.34-3.9c-10.03-10.03-13.83-24.52-14.58-37.64a5.94 5.94 0 00-2.1-4.21z\"\n      ></path>\n      <path d=\"M444.89 249.34c-15.45-14.96-44.8-32.68-77.61-41.89 48.01-13.44 76.08-40.5 77.66-42.04a62.71 62.71 0 0018.02-51.84 7.52 7.52 0 00-14.93 1.73 47.72 47.72 0 01-13.68 39.43c-.46.45-46.84 45.15-121.6 45.15-8.3 0-16.78-.56-25.17-1.66a26.04 26.04 0 01-22.4-22.4 194.3 194.3 0 01-1.66-25.17c0-74.47 44.71-121.15 45.1-121.56a47.93 47.93 0 0167.82 0c9.22 9.22 11.82 22.9 12.38 32.75a13.53 13.53 0 0012.74 12.74c19.35 1.1 29.77 8.01 36.62 16.75 2.51 3.2 7.15 4.09 10.46 1.73a7.52 7.52 0 001.59-10.73c-9.3-11.99-23.25-21.02-46.48-22.68-.88-12.35-4.55-29.06-16.68-41.19a62.95 62.95 0 00-89.12.05c-1.52 1.54-28.56 29.6-42 77.6-9.34-33.27-27.66-63.1-41.94-77.65a63.06 63.06 0 00-89.07 0c-12.13 12.13-15.8 28.84-16.68 41.2-12.35.87-29.06 4.54-41.19 16.67a62.95 62.95 0 00.05 89.12c14.82 14.57 44.66 32.64 77.6 41.89-48 13.45-76.07 40.5-77.65 42.05-12.93 12.93-19 30.12-18.42 46.17a7.53 7.53 0 008.82 7.2c3.74-.65 6.25-4.12 6.2-7.91a47.65 47.65 0 0113.98-34.79c.46-.45 46.85-45.15 121.6-45.15 8.31 0 16.78.56 25.18 1.66a26.04 26.04 0 0122.4 22.4c3.54 27.15 1.4 53.58-6.43 79.25-12.9 42.3-36.74 67.18-37.02 67.47a47.91 47.91 0 01-67.81 0c-9.21-9.2-11.82-22.89-12.38-32.73a13.53 13.53 0 00-12.74-12.75c-20.9-1.2-32.01-9.13-39.28-20.5a7.52 7.52 0 00-12.67 8.1c11.5 17.95 28.5 25.82 49.76 27.32.89 12.36 4.55 29.07 16.68 41.2a62.93 62.93 0 0089.12-.05c1.15-1.17 17.1-17.72 30.59-46.75 9.14 56.7 23.6 109.03 65.66 146.9a118.34 118.34 0 0016.03 12.38c15.89 9.97 35.48-5.02 30.52-22.8a7.52 7.52 0 00-14.49 4.04 5.39 5.39 0 01-8.04 6.02c-19.44-12.18-42.96-38.71-55.74-72.87-13.66-36.52-20.53-82.22-22.48-99.44-.1-.88 1.16-1.14 1.42-.3a218.8 218.8 0 0015.21 36.64c8.23 43.66 19.85 82.74 50.2 112.77a7.52 7.52 0 0010.57-10.69c-19.93-19.72-29.55-41.3-37.25-67.71 32.75 36.36 102.95 24.19 107.49-39.34 12.35-.87 29.06-4.54 41.2-16.66a62.98 62.98 0 00-.06-89.13zm-220.46-51.12c-46.47 6.1-83.82-6-106.97-17.21-25.27-12.24-39.67-26.15-39.76-26.23a47.92 47.92 0 010-67.82c9.22-9.22 22.9-11.82 32.74-12.38a13.53 13.53 0 0012.75-12.74c.56-9.85 3.16-23.53 12.38-32.74 18.65-18.65 49.07-18.75 67.76-.05.56.56 55.21 57.4 43.5 146.77a26.03 26.03 0 01-22.4 22.4zM256 220.88a40.96 40.96 0 00-13.5-13.48c5.5-3.37 10.13-8 13.5-13.49a41.277 41.277 0 0013.5 13.5 41.03 41.03 0 00-13.5 13.47zm178.3 106.95c-9.22 9.22-22.89 11.82-32.74 12.38a13.53 13.53 0 00-12.74 12.75c-.56 9.84-3.17 23.52-12.38 32.74a47.98 47.98 0 01-67.76.05c-.25-.26-10.81-11.23-21.66-30.98-13.99-25.44-28.44-65.46-21.84-115.8a26.04 26.04 0 0122.4-22.4c56.58-7.42 110.9 11.56 146.73 43.45a47.94 47.94 0 010 67.81z\"></path>\n    </svg>\n  );\n}\n","export function VerifyListIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#bbec6c\"\n        d=\"M81.238 173.151a27.596 27.596 0 01-21.806-10.688L13.29 102.944c-9.338-12.045-7.143-29.379 4.902-38.717 12.046-9.338 29.38-7.143 38.718 4.901l20.714 26.719 40.422-71.574c7.495-13.271 24.327-17.953 37.599-10.458 13.271 7.495 17.952 24.328 10.458 37.599L105.27 159.126a27.596 27.596 0 01-24.032 14.025z\"\n      ></path>\n      <path\n        fill=\"#a2e62e\"\n        d=\"M101.016 164.795a27.521 27.521 0 01-19.777 8.362 27.6 27.6 0 01-21.81-10.689l-46.14-59.524c-9.336-12.041-7.147-29.371 4.903-38.717a27.323 27.323 0 0111.747-5.298c-9.456 9.695-10.56 25.13-2.024 36.141l46.14 59.524a27.612 27.612 0 0021.81 10.689c.662 0 1.334-.028 2.005-.074a25.312 25.312 0 003.146-.414z\"\n      ></path>\n      <path\n        fill=\"#bbec6c\"\n        d=\"M81.238 339.787a27.596 27.596 0 01-21.806-10.688L13.29 269.58c-9.338-12.045-7.143-29.379 4.902-38.717 12.046-9.338 29.38-7.143 38.718 4.901l20.714 26.719 40.422-71.574c7.495-13.271 24.327-17.953 37.599-10.458 13.271 7.495 17.952 24.328 10.458 37.599L105.27 325.762a27.596 27.596 0 01-24.032 14.025z\"\n      ></path>\n      <path\n        fill=\"#a2e62e\"\n        d=\"M101.016 331.431a27.521 27.521 0 01-19.777 8.362 27.6 27.6 0 01-21.81-10.689L13.29 269.58c-9.336-12.041-7.147-29.371 4.903-38.717a27.323 27.323 0 0111.747-5.298c-9.456 9.695-10.56 25.13-2.024 36.141l46.14 59.524a27.612 27.612 0 0021.81 10.689c.662 0 1.334-.028 2.005-.074a25.133 25.133 0 003.145-.414z\"\n      ></path>\n      <path\n        fill=\"#fe646f\"\n        d=\"M118.17 437.674l18.449-18.449c10.437-10.437 10.437-27.358 0-37.795-10.437-10.437-27.359-10.437-37.795 0l-18.449 18.449-18.45-18.449c-10.437-10.437-27.359-10.437-37.795 0-10.437 10.437-10.437 27.359 0 37.795l18.449 18.449-18.449 18.449c-10.437 10.437-10.437 27.358 0 37.795 10.437 10.437 27.358 10.437 37.795 0l18.449-18.449 18.449 18.449c10.437 10.437 27.359 10.437 37.795 0 10.437-10.437 10.437-27.359 0-37.795z\"\n      ></path>\n      <path\n        fill=\"#fd4755\"\n        d=\"M46.963 493.919c-10.437-10.437-10.437-27.359 0-37.795l18.449-18.449-18.449-18.449c-10.437-10.437-10.437-27.358 0-37.795a26.667 26.667 0 017.481-5.27c-9.915-4.683-22.115-2.929-30.314 5.27-10.437 10.437-10.437 27.359 0 37.795l18.449 18.449-18.449 18.448c-10.437 10.437-10.437 27.358 0 37.795 8.199 8.199 20.399 9.953 30.314 5.27a26.663 26.663 0 01-7.481-5.269z\"\n      ></path>\n      <path\n        fill=\"#f9f7f8\"\n        d=\"M268.014 156.832h202.073c19.005 0 34.411-15.406 34.411-34.411V62.852c0-19.005-15.406-34.411-34.411-34.411H268.014c-19.005 0-34.411 15.406-34.411 34.411v59.568c0 19.005 15.406 34.412 34.411 34.412zm0 171.459h202.073c19.005 0 34.411-15.406 34.411-34.411v-59.568c0-19.005-15.406-34.411-34.411-34.411H268.014c-19.005 0-34.411 15.406-34.411 34.411v59.568c0 19.005 15.406 34.411 34.411 34.411zm0 171.459h202.073c19.005 0 34.411-15.406 34.411-34.411v-59.568c0-19.005-15.406-34.411-34.411-34.411H268.014c-19.005 0-34.411 15.406-34.411 34.411v59.568c0 19.005 15.406 34.411 34.411 34.411z\"\n      ></path>\n      <path\n        fill=\"#dedbee\"\n        d=\"M300.134 156.828h-32.127c-18.999 0-34.404-15.405-34.404-34.414V62.851c0-19.009 15.405-34.414 34.404-34.414h32.127c-19.009 0-34.414 15.405-34.414 34.414v59.563c0 19.009 15.405 34.414 34.414 34.414zm0 171.46h-32.127c-18.999 0-34.404-15.405-34.404-34.414v-59.563c0-19.009 15.405-34.414 34.404-34.414h32.127c-19.009 0-34.414 15.405-34.414 34.414v59.563c0 19.009 15.405 34.414 34.414 34.414zm0 171.46h-32.127c-18.999 0-34.404-15.405-34.404-34.414v-59.563c0-19.009 15.405-34.414 34.404-34.414h32.127c-19.009 0-34.414 15.405-34.414 34.414v59.563c0 19.009 15.405 34.414 34.414 34.414z\"\n      ></path>\n      <path d=\"M53.509 167.06c6.599 8.511 16.967 13.592 27.733 13.592.842 0 1.698-.031 2.553-.093a35.02 35.02 0 0028.01-17.744l60.831-107.712c9.517-16.85 3.55-38.301-13.301-47.817-16.85-9.517-38.3-3.547-47.817 13.301L76.642 82.339 62.84 64.535C50.984 49.242 28.897 46.443 13.6 58.301c-15.293 11.857-18.09 33.945-6.235 49.24zM22.79 70.156a19.998 19.998 0 0112.291-4.206c6.005 0 11.949 2.673 15.903 7.775l20.714 26.719a7.49 7.49 0 006.473 2.885 7.495 7.495 0 005.985-3.792l40.422-71.573c5.449-9.648 17.731-13.066 27.381-7.616 9.648 5.449 13.064 17.731 7.616 27.38L98.744 155.439a20.051 20.051 0 01-17.502 10.213c-6.164 0-12.1-2.91-15.879-7.783L19.221 98.351c-6.789-8.758-5.188-21.406 3.569-28.195zm136.542 103.768c-16.845-9.519-38.297-3.556-47.819 13.295l-34.867 61.75-13.806-17.805c-11.865-15.285-33.952-18.082-49.237-6.23-7.411 5.747-12.142 14.033-13.319 23.332-1.178 9.301 1.339 18.503 7.085 25.907l46.142 59.519c6.59 8.51 16.958 13.591 27.734 13.591a35.02 35.02 0 0030.56-17.827l3.944-6.978a7.5 7.5 0 00-2.839-10.22 7.5 7.5 0 00-10.22 2.839l-3.944 6.979a20.056 20.056 0 01-17.501 10.207c-6.171 0-12.105-2.906-15.877-7.778L19.221 264.98a19.945 19.945 0 01-4.057-14.828 19.982 19.982 0 017.63-13.363c8.751-6.784 21.401-5.183 28.194 3.57l20.716 26.716a7.484 7.484 0 006.472 2.884 7.5 7.5 0 005.986-3.792l40.412-71.57c5.452-9.649 17.734-13.062 27.386-7.61a19.94 19.94 0 019.48 12.109 19.96 19.96 0 01-1.864 15.269l-42.181 74.687a7.5 7.5 0 002.842 10.219 7.498 7.498 0 0010.219-2.842l42.18-74.685c4.613-8.163 5.769-17.633 3.256-26.667-2.515-9.038-8.398-16.55-16.56-21.153zm-17.407 202.201c-6.464-6.464-15.059-10.024-24.201-10.024s-17.736 3.56-24.201 10.024L80.378 389.27l-13.145-13.145c-6.464-6.464-15.059-10.024-24.201-10.024s-17.736 3.56-24.201 10.024c-13.344 13.345-13.344 35.057 0 48.401l13.146 13.146-13.147 13.146c-13.344 13.344-13.344 35.057 0 48.401 6.465 6.464 15.059 10.024 24.201 10.024s17.737-3.56 24.202-10.024l13.144-13.145 13.145 13.145c6.465 6.464 15.059 10.024 24.201 10.024s17.737-3.56 24.202-10.024c13.344-13.344 13.344-35.057-.001-48.401l-13.145-13.145 13.146-13.146c13.345-13.344 13.345-35.057 0-48.402zm-10.606 37.795l-18.449 18.449a7.5 7.5 0 000 10.606l18.449 18.449c7.496 7.496 7.496 19.693.001 27.189a19.104 19.104 0 01-13.596 5.631c-5.135 0-9.963-2-13.595-5.631l-18.448-18.449a7.5 7.5 0 00-10.608 0l-18.447 18.449a19.104 19.104 0 01-13.596 5.631 19.1 19.1 0 01-13.594-5.631c-7.496-7.496-7.496-19.693 0-27.189l18.448-18.449a7.497 7.497 0 00.001-10.606L29.438 413.92c-7.496-7.496-7.496-19.693 0-27.189a19.1 19.1 0 0113.594-5.631c5.136 0 9.964 2 13.595 5.631l18.448 18.449a7.5 7.5 0 0010.608 0l18.449-18.449a19.1 19.1 0 0113.594-5.631c5.136 0 9.964 2 13.595 5.631 7.494 7.497 7.494 19.693-.002 27.189zM470.086 20.943H268.018c-23.111 0-41.913 18.802-41.913 41.913v59.562c0 23.111 18.802 41.913 41.913 41.913h131.125c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5H268.018c-14.84 0-26.913-12.073-26.913-26.913V62.856c0-14.84 12.073-26.913 26.913-26.913h202.069c14.841 0 26.914 12.073 26.914 26.913v59.562c0 14.84-12.073 26.913-26.914 26.913h-40.993c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h40.993c23.111 0 41.914-18.802 41.914-41.913V62.856c-.001-23.111-18.804-41.913-41.915-41.913zm.001 171.458h-202.07c-23.11 0-41.912 18.801-41.912 41.911v59.567c0 23.11 18.802 41.911 41.912 41.911h202.071c23.11 0 41.911-18.801 41.911-41.911v-59.567c-.001-23.11-18.802-41.911-41.912-41.911zm26.911 101.478c0 14.839-12.072 26.911-26.911 26.911h-202.07c-14.84 0-26.912-12.072-26.912-26.911v-59.567c0-14.839 12.072-26.911 26.912-26.911h202.071c14.839 0 26.911 12.072 26.911 26.911v59.567zm-26.911 69.98h-202.07c-23.11 0-41.912 18.801-41.912 41.911v59.567c0 23.11 18.802 41.911 41.912 41.911h202.071c23.11 0 41.911-18.801 41.911-41.911V405.77c-.001-23.11-18.802-41.911-41.912-41.911zm26.911 101.478c0 14.839-12.072 26.911-26.911 26.911h-202.07c-14.84 0-26.912-12.072-26.912-26.911V405.77c0-14.839 12.072-26.911 26.912-26.911h202.071c14.839 0 26.911 12.072 26.911 26.911v59.567z\"></path>\n      <path d=\"M473.995 74.074a7.5 7.5 0 00-7.5-7.5H271.608c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h194.887a7.5 7.5 0 007.5-7.5zm-202.387 29.628c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5H399.14c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5zm194.887 134.33H271.608c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h194.887c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5zM399.14 275.16H271.608c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5H399.14a7.5 7.5 0 000-15zm67.355 134.33H271.608c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h194.887c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5zm-67.355 37.128H271.608c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5H399.14a7.5 7.5 0 000-15z\"></path>\n    </svg>\n  );\n}\n","export function WritingIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffddcf\"\n        d=\"M219.421 310.029l-38.936 38.936c-10.935 10.935-28.663 10.935-39.598 0-10.935-10.935-10.935-28.663 0-39.598l27.435-27.435z\"\n      ></path>\n      <path\n        fill=\"#ffddcf\"\n        d=\"M117.575 208.182l-38.936 38.936c-10.935 10.935-28.663 10.935-39.598 0-10.935-10.935-10.935-28.663 0-39.598l27.435-27.435a181.448 181.448 0 01128.303-53.145c66.713 0 128.046 36.609 159.709 95.33L384 277.001l-39.899 150.983z\"\n      ></path>\n      <path\n        fill=\"#91def5\"\n        d=\"M433.343 481.298l-77.274-20.706c-10.669-2.859-17.001-13.826-14.142-24.495l43.482-162.276c2.859-10.669 13.826-17.001 24.495-14.142l77.274 20.706c10.669 2.859 17.001 13.826 14.142 24.495l-43.482 162.276c-2.859 10.669-13.825 17.001-24.495 14.142z\"\n      ></path>\n      <path fill=\"#ffcb7c\" d=\"M295.721 30.003l62.216 62.216L121.075 329.08l-62.216-62.216z\"></path>\n      <path fill=\"#98a1b3\" d=\"M10 377.984L58.839 266.92l62.225 62.226z\"></path>\n      <path\n        fill=\"#ffddcf\"\n        d=\"M256.466 298.519l-60.583-60.583c-12.497-12.497-32.758-12.497-45.255 0s-12.497 32.758 0 45.255l60.583 60.583c21.915 51.09 72.162 84.211 127.754 84.211h5.136z\"\n      ></path>\n      <path d=\"M489.765 270.726l-77.274-20.705c-10.239-2.743-20.679.186-27.989 6.843l-21.212-39.339c-13.197-24.475-31.711-45.893-53.945-62.517l55.689-55.689c3.905-3.905 3.905-10.237 0-14.143L302.809 22.95c-3.905-3.904-10.237-3.904-14.143 0l-93.991 93.991c-25.233.014-49.846 4.915-73.16 14.572-23.345 9.67-44.242 23.633-62.11 41.5L31.97 200.449c-7.178 7.178-11.13 16.72-11.13 26.87s3.953 19.692 11.13 26.87a37.753 37.753 0 0017.207 9.863L.847 373.959a10 10 0 0013.18 13.18l109.921-48.336a37.763 37.763 0 009.869 17.234c7.408 7.408 17.139 11.112 26.87 11.112s19.462-3.704 26.87-11.112l10.888-10.888 4.36 4.36a148.813 148.813 0 00128.643 88.265c-.764 6.39.542 12.827 3.818 18.5 4.006 6.94 10.476 11.904 18.216 13.978l77.274 20.706a29.939 29.939 0 007.757 1.025c13.244 0 25.398-8.853 28.985-22.239l9.829-36.684c1.43-5.334-1.736-10.817-7.071-12.247-5.332-1.43-10.818 1.736-12.247 7.071l-9.829 36.684c-1.427 5.327-6.921 8.5-12.248 7.071l-77.274-20.706a9.935 9.935 0 01-6.072-4.659 9.938 9.938 0 01-.999-7.588l43.481-162.275c1.428-5.326 6.925-8.496 12.248-7.071l77.274 20.705c5.326 1.428 8.499 6.922 7.071 12.248l-10.354 38.643c-1.43 5.334 1.736 10.817 7.071 12.247 5.331 1.43 10.818-1.736 12.247-7.071l10.354-38.643c4.282-15.979-5.235-32.461-21.214-36.743zM343.821 92.247L204.079 231.989l-1.125-1.125c-5.698-5.698-12.749-9.545-20.424-11.267L326.85 75.276zm-48.083-48.083l16.97 16.97L89.951 283.89l-16.97-16.97zM46.112 240.047c-3.4-3.399-5.272-7.92-5.272-12.728s1.872-9.328 5.272-12.728l27.435-27.436c27.277-27.277 62.128-44.229 99.81-48.897L71.567 240.047c-7.017 7.02-18.437 7.018-25.455 0zm15.995 44.284l41.546 41.546-74.155 32.609zm58.958 30.672l-16.97-16.97 28.217-28.217a41.744 41.744 0 0011.246 20.446l1.125 1.125zm52.348 26.891c-7.019 7.018-18.438 7.017-25.456.001-7.018-7.02-7.018-18.439 0-25.457l10.888-10.888 25.456 25.455zm163.028 76.044a128.854 128.854 0 01-116.04-78.106 10.01 10.01 0 00-2.119-3.129l-60.583-60.583c-8.578-8.577-8.578-22.535 0-31.112 4.155-4.155 9.68-6.444 15.556-6.444s11.401 2.289 15.556 6.444l60.583 60.583c3.905 3.904 10.237 3.904 14.143 0 3.905-3.905 3.905-10.237 0-14.143l-45.316-45.316 76.804-76.804c20.953 15.116 38.383 34.917 50.662 57.689l27.998 51.923z\"></path>\n      <path d=\"M479.32 397.003c-2.64 0-5.21-1.07-7.08-2.931a10.08 10.08 0 01-2.92-7.069c0-2.641 1.06-5.21 2.92-7.08 1.86-1.86 4.44-2.92 7.08-2.92 2.63 0 5.21 1.06 7.07 2.92a10.097 10.097 0 012.93 7.08c0 2.63-1.07 5.21-2.93 7.069a10.09 10.09 0 01-7.07 2.931z\"></path>\n    </svg>\n  );\n}\n","import { ReactNode } from 'react';\n\ntype ViewProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n};\n\nexport function View({ children }: ViewProps) {\n  return <>{children}</>;\n}\n","import { ReactNode } from 'react';\n\ntype ViewIfProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  isVisible?: boolean;\n};\n\nexport function ViewIf({ isVisible = false, children }: ViewIfProps) {\n  return isVisible ? <>{children}</> : <></>;\n}\n","type ViewOrProps = {\n  children: [any, any];\n  orCondition?: boolean;\n};\n\nexport function ViewOr({ orCondition = false, children }: ViewOrProps) {\n  return orCondition ? <>{children[0]}</> : <>{children[1]}</>;\n}\n","type ViewSwitchProps = {\n  cases: boolean[];\n  /**\n   * The content of the component\n   */\n  children: any;\n};\n\nexport function ViewSwitch({ cases, children }: ViewSwitchProps) {\n  if (cases.length > 5) {\n    throw Error('ViewSwitch only supports up to 5 cases');\n  }\n\n  if (cases[0] && children[0]) {\n    return children[0];\n  }\n\n  if (cases[1] && children[1]) {\n    return children[1];\n  }\n\n  if (cases[2] && children[2]) {\n    return children[2];\n  }\n\n  if (cases[3] && children[3]) {\n    return children[3];\n  }\n\n  if (cases[4] && children[4]) {\n    return children[4];\n  }\n  console.warn('Rendering all children in the ViewSwitch');\n  return children;\n}\n","export const ACTIONS = {\n  SUBMIT_BAD_WORDS: 'SUBMIT_BAD_WORDS',\n  SUBMIT_CLUES: 'SUBMIT_CLUES',\n  SUBMIT_GUESS: 'SUBMIT_GUESS',\n  UPDATE_CLOVER_STATE: 'UPDATE_CLOVER_STATE',\n};\n\nexport const ROTATIONS = [0, 90, 180, 270];\n\nexport const WORST_TO_REMOVE = 6;\n","import { getRandomItem, shuffle } from 'utils/helpers';\nimport { ROTATIONS, WORST_TO_REMOVE } from './constants';\nimport { sampleSize } from 'lodash';\n\nexport const mockSelectCards = (cards: TextCard[]): CardId[] =>\n  shuffle(cards)\n    .slice(0, WORST_TO_REMOVE)\n    .map((card) => card.id);\n\nconst clues = ['agua', 'bola', 'coco', 'dedo', 'egua', 'flauta', 'gatilho', 'hélio', 'jaguar'];\n\nexport const mockClues = (): { clues: string[] } => {\n  return { clues: sampleSize(clues, 4) };\n};\n\nconst mockedScore = [3, 1, 1, 1, 0, 0];\n\nexport const mockGuesses = (leaves: Leaves): YGuesses => {\n  const selected = sampleSize(Object.keys(leaves), 4);\n\n  return {\n    A: {\n      leafId: selected[0],\n      rotation: getRandomItem(ROTATIONS),\n      score: getRandomItem(mockedScore),\n      tries: 2,\n    },\n    B: {\n      leafId: selected[1],\n      rotation: getRandomItem(ROTATIONS),\n      score: getRandomItem(mockedScore),\n      tries: 2,\n    },\n    C: {\n      leafId: selected[2],\n      rotation: getRandomItem(ROTATIONS),\n      score: getRandomItem(mockedScore),\n      tries: 2,\n    },\n    D: {\n      leafId: selected[3],\n      rotation: getRandomItem(ROTATIONS),\n      score: getRandomItem(mockedScore),\n      tries: 2,\n    },\n  };\n};\n","import clsx from 'clsx';\nimport { orderBy } from 'lodash';\nimport { useMemo } from 'react';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useBooleanDictionary } from 'hooks/useBooleanDictionary';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { WORST_TO_REMOVE } from './utils/constants';\nimport { mockSelectCards } from './utils/mock';\n// Components\nimport { TransparentButton } from 'components/buttons';\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\n\ntype StepSelectWordsProps = {\n  hand: TextCard[];\n  onSubmitBadWords: GenericFunction;\n};\n\nexport function StepSelectWords({ hand, onSubmitBadWords }: StepSelectWordsProps) {\n  const { isLoading } = useLoading();\n  const alphabeticalHand = useMemo(() => orderBy(hand, 'text'), [hand]);\n\n  const [selectedCards, updateSelectedCard] = useBooleanDictionary({});\n\n  const onSubmit = () => {\n    onSubmitBadWords({ cardsIds: Object.keys(selectedCards) });\n  };\n  const onSubmitMock = () => {\n    onSubmitBadWords({ cardsIds: mockSelectCards(hand) });\n  };\n\n  useMock(() => {\n    onSubmitBadWords({ cardsIds: mockSelectCards(hand) });\n  });\n\n  const selectedCount = Object.keys(selectedCards).length;\n  const isComplete = selectedCount === WORST_TO_REMOVE;\n\n  return (\n    <Step fullWidth>\n      <Title size=\"medium\">\n        <Translate pt=\"Seleção das Palavras\" en=\"Words Selection\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={`Selecione ${WORST_TO_REMOVE} palavras que você NÃO quer no jogo`}\n          en={`Select ${WORST_TO_REMOVE} words you DO NOT want in the game`}\n        />\n      </Instruction>\n\n      <ul className=\"y-words-list\">\n        {alphabeticalHand.map((card) => (\n          <li className={clsx('y-words-list__word')} key={card.id}>\n            <TransparentButton\n              onClick={() => updateSelectedCard(card.id)}\n              active={selectedCards[card.id]}\n              activeClass=\"y-words-list__word-selected\"\n            >\n              {card.text}\n            </TransparentButton>\n          </li>\n        ))}\n      </ul>\n\n      <Space className=\"space-container\" align=\"center\">\n        <Button type=\"primary\" size=\"large\" onClick={onSubmit} disabled={!isComplete || isLoading}>\n          <Translate\n            pt={<>Enviar Palavras ({selectedCount} de 6)</>}\n            en={<>Submit Words ({selectedCount} of 6)</>}\n          />\n        </Button>\n\n        <Button size=\"large\" onClick={onSubmitMock}>\n          <Translate pt=\"Secione pra mim\" en=\"Select for me\" />\n        </Button>\n      </Space>\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useIsUserReady } from 'hooks/useIsUserReady';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useUser } from 'hooks/useUser';\nimport { useOnSubmitBadWordsAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\nimport { WORST_TO_REMOVE } from './utils/constants';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { RoundAnnouncement } from 'components/round';\nimport { useStep } from 'hooks/useStep';\nimport { Translate } from 'components/language';\nimport { VerifyListIcon } from 'components/icons/VerifyListIcon';\nimport { StepSelectWords } from './StepSelectWords';\n\nfunction PhaseWordSelection({ players, state, info }: PhaseProps) {\n  const isUserReady = useIsUserReady(players, state);\n  const { translate } = useLanguage();\n  const user = useUser(players);\n  const { step, goToNextStep, setStep } = useStep(0);\n\n  const onSubmitBadWords = useOnSubmitBadWordsAPIRequest(setStep);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.TREVO_DA_SORTE.WORD_SELECTION}>\n      <StepSwitcher step={step} conditions={[!isUserReady, !isUserReady, !isUserReady]} players={players}>\n        {/* Step 0 */}\n        <RoundAnnouncement round={state.round} onPressButton={goToNextStep} time={4} circleColor=\"green\" />\n\n        {/* Step 1 */}\n        <PhaseAnnouncement\n          icon={<VerifyListIcon />}\n          title={translate('Seleção das Palavras', 'Words Selection')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <Translate\n              pt={`Selecione ${WORST_TO_REMOVE} palavras que você NÃO quer no jogo`}\n              en={`Select ${WORST_TO_REMOVE} words you DO NOT want in the game`}\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 2 */}\n        <StepSelectWords hand={user.hand} onSubmitBadWords={onSubmitBadWords} />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseWordSelection;\n","import { TREVO_DA_SORTE_API } from 'services/adapters';\nimport { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { ACTIONS } from './constants';\n\nexport function useOnSubmitBadWordsAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: TREVO_DA_SORTE_API.submitAction,\n    actionName: 'submit-bad-words',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(1),\n    successMessage: translate('Palavras ruins enviadas com sucesso!', 'Bad words submitted successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar palavras',\n      'Oops, the application failed to submit words'\n    ),\n  });\n\n  return (payload: SubmitBadWordsPayload) => {\n    request({\n      action: ACTIONS.SUBMIT_BAD_WORDS,\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitCluesAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: TREVO_DA_SORTE_API.submitAction,\n    actionName: 'submit-clues',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(1),\n    successMessage: translate('Dicas enviadas com sucesso!', 'Clues submitted successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar dicas',\n      'Oops, the application failed to submit clues'\n    ),\n  });\n\n  return (payload: SubmitCluesPayload) => {\n    request({\n      action: ACTIONS.SUBMIT_CLUES,\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitGuessAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: TREVO_DA_SORTE_API.submitAction,\n    actionName: 'submit-guess',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate('Palpites enviadas com sucesso!', 'Guesses submitted successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar palpites',\n      'Oops, the application failed to submit guesses'\n    ),\n  });\n\n  return (payload: SubmitCloverGuessesPayload) => {\n    request({\n      action: ACTIONS.SUBMIT_GUESS,\n      ...payload,\n    });\n  };\n}\n\nexport function useOnUpdateCloverStateAPIRequest() {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: TREVO_DA_SORTE_API.submitAction,\n    actionName: 'update-clover-state',\n    // successMessage: translate('Dicas enviadas com sucesso!', 'Clues submitted successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar atualizar o trevo',\n      'Oops, the application failed to update the clover'\n    ),\n  });\n\n  return (payload: UpdateCoverStatePayload) => {\n    request({\n      action: ACTIONS.UPDATE_CLOVER_STATE,\n      ...payload,\n    });\n  };\n}\n","// This icon file is generated automatically.\nvar RedoOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M758.2 839.1C851.8 765.9 912 651.9 912 523.9 912 303 733.5 124.3 512.6 124 291.4 123.7 112 302.8 112 523.9c0 125.2 57.5 236.9 147.6 310.2 3.5 2.8 8.6 2.2 11.4-1.3l39.4-50.5c2.7-3.4 2.1-8.3-1.2-11.1-8.1-6.6-15.9-13.7-23.4-21.2a318.64 318.64 0 01-68.6-101.7C200.4 609 192 567.1 192 523.9s8.4-85.1 25.1-124.5c16.1-38.1 39.2-72.3 68.6-101.7 29.4-29.4 63.6-52.5 101.7-68.6C426.9 212.4 468.8 204 512 204s85.1 8.4 124.5 25.1c38.1 16.1 72.3 39.2 101.7 68.6 29.4 29.4 52.5 63.6 68.6 101.7 16.7 39.4 25.1 81.3 25.1 124.5s-8.4 85.1-25.1 124.5a318.64 318.64 0 01-68.6 101.7c-9.3 9.3-19.1 18-29.3 26L668.2 724a8 8 0 00-14.1 3l-39.6 162.2c-1.2 5 2.6 9.9 7.7 9.9l167 .8c6.7 0 10.5-7.7 6.3-12.9l-37.3-47.9z\" } }] }, \"name\": \"redo\", \"theme\": \"outlined\" };\nexport default RedoOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport RedoOutlinedSvg from \"@ant-design/icons-svg/es/asn/RedoOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar RedoOutlined = function RedoOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: RedoOutlinedSvg\n  }));\n};\n\nRedoOutlined.displayName = 'RedoOutlined';\nexport default /*#__PURE__*/React.forwardRef(RedoOutlined);","import { DeleteOutlined, RedoOutlined } from '@ant-design/icons';\nimport { Button } from 'antd';\nimport clsx from 'clsx';\nimport { CloverIcon } from 'components/icons/CloverIcon';\nimport { IconAvatar } from 'components/icons/IconAvatar';\nimport { LockIcon } from 'components/icons/LockIcon';\nimport { ReactNode } from 'react';\nimport { getAnimationClass } from 'utils/helpers';\n\ntype LeafProps = {\n  leaf: Leaf;\n  rotation?: number;\n  onLeafGrab?: GenericFunction;\n  onLeafRemove?: GenericFunction;\n  onLeafRotate?: GenericFunction;\n  className?: string;\n  position?: LeafPosition;\n  isLocked?: boolean;\n  icon?: ReactNode;\n};\n\nexport function Leaf({\n  leaf,\n  rotation,\n  onLeafRotate,\n  onLeafRemove,\n  onLeafGrab,\n  className,\n  position,\n  isLocked,\n  icon,\n}: LeafProps) {\n  const grabbable = Boolean(onLeafGrab);\n  const removable = Boolean(onLeafRemove);\n  const rotatable = Boolean(onLeafRotate);\n  const isStatic = !removable && !rotatable;\n\n  return (\n    <div\n      key={`leaf-key-${leaf.id}`}\n      className={clsx('y-leaf', grabbable && `y-leaf--grabbable`, getAnimationClass('fadeIn'), className)}\n      style={{ transform: `rotate(${rotation}deg)` }}\n    >\n      {leaf.cards.map((card: TextCard, cIndex: number) =>\n        !isLocked && grabbable ? (\n          <div\n            role=\"button\"\n            key={card.id}\n            className={clsx('y-leaf__card', 'y-leaf__card-button', `y-leaf__card--${cIndex}`)}\n            onClick={() => onLeafGrab!(leaf.id)}\n          >\n            <div className=\"y-leaf__card-text\">{card.text}</div>\n          </div>\n        ) : (\n          <div key={card.id} className={clsx('y-leaf__card', `y-leaf__card--${cIndex}`)}>\n            <div className=\"y-leaf__card-text\">{card.text}</div>\n          </div>\n        )\n      )}\n      <div className=\"y-leaf__controls\" style={{ transform: `rotate(-${rotation}deg)` }}>\n        {!isLocked && rotatable && (\n          <Button\n            onClick={(e) => onLeafRotate!(e, leaf.id)}\n            className=\"y-leaf__center y-leaf__center--rotatable\"\n            shape=\"circle\"\n          >\n            <RedoOutlined />\n          </Button>\n        )}\n        {!isLocked && removable && (\n          <Button\n            onClick={() => onLeafRemove!(position)}\n            className=\"y-leaf__center y-leaf__center--rotatable\"\n            shape=\"circle\"\n          >\n            <DeleteOutlined />\n          </Button>\n        )}\n\n        {isLocked && (\n          <div className=\"y-leaf__center\">\n            <IconAvatar icon={<LockIcon />} />\n          </div>\n        )}\n\n        {isStatic && (\n          <div className=\"y-leaf__center\">\n            <IconAvatar icon={icon ?? <CloverIcon />} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Components\nimport { Leaf } from './Leaf';\nimport { GuessIcon } from 'components/icons/GuessIcon';\nimport { IconAvatar } from 'components/icons/IconAvatar';\n\ntype LeafSlotProps = {\n  leaf?: Leaf;\n  rotation?: number;\n  position?: LeafPosition;\n  onLeafGrab?: GenericFunction;\n  onLeafRotate?: GenericFunction;\n  onLeafRemove?: GenericFunction;\n  onActivateSlot?: GenericFunction;\n  activeLeafId?: LeafId | null;\n  activeSlotId?: LeafPosition | null;\n  className?: string;\n  isLocked?: boolean;\n  icon?: ReactNode;\n};\n\nexport function LeafSlot({\n  leaf,\n  rotation,\n  position,\n  onLeafGrab,\n  onLeafRotate,\n  onLeafRemove,\n  activeSlotId,\n  onActivateSlot,\n  isLocked,\n  icon,\n}: LeafSlotProps) {\n  if (!leaf && onActivateSlot) {\n    return (\n      <div className={clsx(`y-clover__leaf-${position}`, activeSlotId === position && 'active-class')}>\n        <button\n          key={`clue-key-${position}`}\n          className={clsx(\n            'y-leaf',\n            'y-leaf--empty',\n            'y-leaf--empty-clickable',\n            activeSlotId === position && 'y-leaf--empty-active'\n          )}\n          onClick={(_) => onActivateSlot(position)}\n        >\n          <IconAvatar icon={<GuessIcon />} size=\"large\" />\n        </button>\n      </div>\n    );\n  }\n\n  if (Boolean(onLeafGrab)) {\n    return (\n      <div className={clsx(`y-clover__leaf-${position}`, activeSlotId === position && 'active-class')}>\n        <LeafSlotContent\n          leaf={leaf}\n          position={position}\n          rotation={rotation}\n          onLeafGrab={() => onLeafGrab!(position)}\n          onLeafRotate={onLeafRotate}\n          onLeafRemove={onLeafRemove}\n          isLocked={isLocked}\n          icon={icon}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className={clsx(`y-clover__leaf-${position}`)}>\n      <LeafSlotContent\n        leaf={leaf}\n        position={position}\n        rotation={rotation}\n        onLeafRotate={onLeafRotate}\n        onLeafRemove={onLeafRemove}\n        isLocked={isLocked}\n        icon={icon}\n      />\n    </div>\n  );\n}\n\nfunction LeafSlotContent({\n  leaf,\n  rotation,\n  position,\n  onLeafGrab,\n  onLeafRotate,\n  onLeafRemove,\n  isLocked,\n  className = '',\n  icon,\n}: LeafSlotProps) {\n  return Boolean(leaf) ? (\n    <Leaf\n      key={leaf!.id}\n      leaf={leaf!}\n      onLeafGrab={onLeafGrab}\n      onLeafRotate={onLeafRotate}\n      onLeafRemove={onLeafRemove}\n      rotation={rotation}\n      className={className}\n      position={position}\n      isLocked={isLocked}\n      icon={icon}\n    />\n  ) : (\n    <div key={`clue-key-${position}`} className={clsx('y-leaf', 'y-leaf--empty')}>\n      <IconAvatar icon={<GuessIcon />} size=\"large\" />\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Input } from 'antd';\nimport { RotateLeftOutlined, RotateRightOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { ROTATIONS } from '../utils/constants';\n// Components\nimport { LeafSlot } from './LeafSlot';\nimport { BoxXIcon } from 'components/icons/BoxXIcon';\nimport { BoxOneIcon } from 'components/icons/BoxOneIcon';\nimport { BoxCheckMarkIcon } from 'components/icons/BoxCheckMarkIcon';\n\ntype CloverProps = {\n  mode: CloverMode;\n  clover: Clover;\n  leaves: Leaves;\n  guesses?: any;\n  rotation: number;\n  onRotate: (direction: number) => void;\n  onClueChange?: (targetIndex: LeafIndex, value: string) => void;\n  rotations?: NumberDictionary;\n  onLeafRotate?: GenericFunction;\n  onLeafRemove?: GenericFunction;\n  activeLeafId?: LeafId | null;\n  activeSlotId?: LeafPosition | null;\n  onLeafGrab?: GenericFunction;\n  onActivateSlot?: GenericFunction;\n  locks?: LeafLocks;\n};\n\nexport function Clover({\n  mode,\n  clover,\n  leaves,\n  guesses,\n  rotation,\n  onRotate,\n  onClueChange,\n  rotations = {},\n  onLeafRotate,\n  onLeafRemove,\n  activeSlotId,\n  onLeafGrab,\n  onActivateSlot,\n  locks,\n}: CloverProps) {\n  const { translate } = useLanguage();\n  const cloverLeaves = Object.entries(clover.leaves);\n\n  return (\n    <div className=\"container center\">\n      <div className=\"y-clover\" style={{ transform: `rotate(${rotation}deg)` }}>\n        {/* ANSWERS */}\n        {cloverLeaves.map(([_, cloverLeaf], index) => {\n          const leafIndex = Number(index) as LeafIndex;\n\n          if (mode === 'write' && onClueChange) {\n            return (\n              <div\n                key={`clue-key-${leafIndex}`}\n                className={clsx(`y-clover__clue-${leafIndex}`, 'y-clover-clue')}\n              >\n                <Input\n                  onChange={onClueChange ? (e) => onClueChange(leafIndex, e.target.value) : undefined}\n                  className={`y-clover-rotation--${ROTATIONS[index]} y-clover-input`}\n                  placeholder={translate('Escreva aqui', 'Write here')}\n                  disabled={!Boolean(onClueChange)}\n                  value={mode === 'write' ? undefined : cloverLeaf.clue}\n                />\n              </div>\n            );\n          }\n\n          return (\n            <div\n              key={`clue-key-${leafIndex}`}\n              className={clsx(`y-clover__clue-${leafIndex}`, 'y-clover-clue')}\n            >\n              <span className={clsx(`y-clover-rotation--${ROTATIONS[index]}`, 'y-clover-clue-readonly')}>\n                {cloverLeaf.clue}\n              </span>\n            </div>\n          );\n        })}\n\n        {/* LEAVES */}\n        {cloverLeaves.map(([cloverLeafPosition, cloverLeaf]) => {\n          const {\n            leaf,\n            rotation: leafRotation,\n            icon,\n          } = getLeaf(mode, leaves, cloverLeafPosition as LeafPosition, cloverLeaf, guesses, rotations);\n\n          return (\n            <LeafSlot\n              key={`slot-${cloverLeafPosition}`}\n              leaf={leaf}\n              rotation={leafRotation}\n              position={cloverLeafPosition as LeafPosition}\n              onLeafGrab={onLeafGrab}\n              onLeafRotate={onLeafRotate}\n              onLeafRemove={onLeafRemove}\n              activeSlotId={activeSlotId}\n              onActivateSlot={onActivateSlot}\n              isLocked={locks?.[cloverLeafPosition as LeafPosition] ?? false}\n              icon={icon}\n            />\n          );\n        })}\n      </div>\n      <div className=\"controls space-container center\">\n        <Button icon={<RotateLeftOutlined />} onClick={() => onRotate(-1)} />\n        <Button icon={<RotateRightOutlined />} onClick={() => onRotate(1)} />\n      </div>\n    </div>\n  );\n}\n\nconst getLeaf = (\n  mode: CloverMode,\n  leaves: Leaves,\n  position: LeafPosition,\n  cloverLeaf: CloverLeaf,\n  guesses: YGuesses,\n  rotations: NumberDictionary\n) => {\n  let leafId = '';\n  switch (mode) {\n    case 'guess':\n      leafId = guesses?.[position]?.leafId ?? '';\n      return {\n        leaf: leaves?.[leafId],\n        rotation: rotations[leafId] ?? 0,\n        icon: undefined,\n      };\n    case 'result':\n      leafId = guesses?.[position]?.leafId ?? '';\n      const guess = guesses?.[position];\n      return {\n        leaf: leaves?.[leafId],\n        rotation: guess?.rotation ?? 0,\n        icon: getIcon(guess?.score ?? 0),\n      };\n    case 'view':\n    case 'write':\n    default:\n      leafId = cloverLeaf.leafId;\n      return {\n        leaf: leaves?.[leafId],\n        rotation: cloverLeaf.rotation,\n        icon: undefined,\n      };\n  }\n};\n\nconst getIcon = (score: number) => {\n  switch (score) {\n    case 1:\n      return <BoxOneIcon />;\n    case 3:\n      return <BoxCheckMarkIcon />;\n    case 0:\n    default:\n      return <BoxXIcon />;\n  }\n};\n","export const onRotate = (value: number, direction: number = 1) => {\n  return direction === 1 ? value + 90 : value - 90;\n};\n\nexport const parseRotation = (value: number) => {\n  return value % 360;\n};\n\nexport const cleanupGuesses = (guesses: YGuesses) => {\n  Object.values(guesses).forEach((guess) => {\n    if (guess?.rotation) {\n      guess.rotation = parseRotation(guess.rotation);\n    }\n  });\n\n  return guesses;\n};\n","import { notification } from 'antd';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useEffect, useState } from 'react';\nimport { onRotate, parseRotation } from './helpers';\n\nexport function useCloverState(mode: CloverMode, clover: Clover, leaves: Leaves, onSubmit?: GenericFunction) {\n  const { translate } = useLanguage();\n  const [attempts, setAttempts] = useState(0);\n  const [clues, setClues] = useState<string[]>(['', '', '', '']);\n  const [rotation, setRotation] = useState<number>(0);\n  const [activeLeafId, setActiveLeafId] = useState<string | null>(null);\n  const [activeSlotId, setActiveSlotId] = useState<LeafPosition | null>(null);\n  const [guesses, setGuesses] = useState<YGuesses>({ A: null, B: null, C: null, D: null });\n  const [locks, setLocks] = useState<LeafLocks>({ A: false, B: false, C: false, D: false });\n  const [rotations, setRotations] = useState<NumberDictionary>(\n    Object.keys(leaves).reduce((acc: NumberDictionary, leafId) => {\n      acc[leafId] = 0;\n      return acc;\n    }, {})\n  );\n  const [usedLeavesIds, setUsedLeavesIds] = useState<string[]>([]);\n\n  // Keep used leaves ids up to date\n  useEffect(() => {\n    setUsedLeavesIds(Object.values(guesses).map((guess) => guess?.leafId ?? ''));\n  }, [guesses]);\n\n  // Keep guess rotation up to date\n  useEffect(() => {\n    setGuesses((prevState) => {\n      const newState = { ...prevState };\n      Object.keys(newState).forEach((k) => {\n        const key = k as LeafPosition;\n        const entry = newState[key];\n        if (entry) {\n          entry.rotation = rotations[entry.leafId];\n        }\n      });\n      return newState;\n    });\n  }, [rotations]);\n\n  /**\n   * Handles clover local rotation\n   * @param direction\n   */\n  const onRotateClover = (direction: number) => {\n    setRotation(onRotate(rotation, direction));\n  };\n\n  /**\n   * Updates the clue according to its index\n   * @param targetIndex\n   * @param value\n   */\n  const onClueChange = (targetIndex: LeafIndex, value: string) => {\n    setClues((prevState) => {\n      const copy = [...prevState];\n      copy[targetIndex] = value;\n      return copy;\n    });\n  };\n\n  /**\n   * Rotates a leaf\n   * @param e\n   * @param leadId\n   */\n  const onLeafRotate = (e: ButtonEvent, leadId: LeafId) => {\n    e.stopPropagation();\n    const newRotation = onRotate(rotations[leadId]);\n    setRotations((prevState) => ({ ...prevState, [leadId]: newRotation }));\n\n    setActiveLeafId(null);\n    setActiveSlotId(null);\n  };\n\n  /**\n   * Removes the leaf of the clover\n   * @param targetSlotId\n   */\n  const onLeafRemove = (targetSlotId: LeafPosition) => {\n    setGuesses((prevState) => ({ ...prevState, [targetSlotId]: null }));\n  };\n\n  /**\n   * Activate a leaf to be connected to the clover\n   * @param targetLeafId\n   * @returns\n   */\n  const onActivateLeaf = (targetLeafId: LeafId) => {\n    if (activeLeafId === targetLeafId) {\n      return setActiveLeafId(null);\n    }\n\n    // Attach leaf to slot\n    // TODO: if duplicated leaf, remove\n    if (activeSlotId) {\n      setGuesses((g) => {\n        const repeat = Object.keys(g).filter((k) => {\n          const key = k as LeafPosition;\n          const l = g[key];\n          return l?.leafId === targetLeafId;\n        });\n\n        const newGuesses = {\n          ...g,\n          [activeSlotId]: {\n            leafId: targetLeafId,\n            rotation: rotations[targetLeafId],\n          },\n        };\n\n        if (repeat.length > 0) {\n          const key = repeat[0] as LeafPosition;\n          newGuesses[key] = null;\n        }\n\n        return newGuesses;\n      });\n\n      setActiveSlotId(null);\n    } else {\n      setActiveLeafId(targetLeafId);\n    }\n  };\n\n  /**\n   * Activate a slot to receive a leaf on the clover\n   * @param targetSlotId\n   * @returns\n   */\n  const onActivateSlot = (targetSlotId: LeafPosition) => {\n    // If it's the same slot, deactivate it\n    if (activeSlotId === targetSlotId) {\n      return setActiveSlotId(null);\n    }\n\n    // If slot and slot, swap their leaves\n    if (activeSlotId && activeSlotId !== targetSlotId) {\n      setGuesses((g) => {\n        const activeContent = g[activeSlotId];\n        const targetContent = g[targetSlotId];\n\n        return {\n          ...g,\n          [activeSlotId]: targetContent,\n          [targetSlotId]: activeContent,\n        };\n      });\n\n      setActiveSlotId(null);\n      return;\n    }\n\n    // Attach slot to leaf\n    // TODO: if duplicated leaf, remove\n    if (activeLeafId) {\n      setGuesses((g) => {\n        const repeat = Object.keys(g).filter((k) => {\n          const key = k as LeafPosition;\n          const l = g[key];\n          return l?.leafId === activeLeafId;\n        });\n\n        const newGuesses = {\n          ...g,\n          [targetSlotId]: {\n            leafId: activeLeafId,\n            rotation: rotations[activeLeafId],\n          },\n        };\n\n        if (repeat.length > 0) {\n          const key = repeat[0] as LeafPosition;\n          newGuesses[key] = null;\n        }\n\n        return newGuesses;\n      });\n\n      setActiveLeafId(null);\n    } else {\n      setActiveSlotId(targetSlotId);\n    }\n  };\n\n  /**\n   * First attempt: Validates clover, if correct submits, else undo wrong leaves\n   * Second attempt: Validates clover, but submits anyway\n   */\n  const submitClover = () => {\n    let correctCount = 0;\n\n    // Verify corrects guesses\n    const locksCopy = { ...locks };\n    const guessesCopy = { ...guesses };\n    Object.keys(guessesCopy).forEach((k) => {\n      const key = k as LeafPosition;\n      const entry = guessesCopy[key];\n\n      if (entry && (entry.score === undefined || entry.score === 0)) {\n        const correctLeaf = clover.leaves[key];\n        const isCorrect =\n          entry.leafId === correctLeaf.leafId && parseRotation(entry.rotation) === correctLeaf.rotation;\n\n        if (isCorrect) {\n          entry.score = attempts === 0 ? 3 : 1;\n          correctCount += 1;\n          locksCopy[key] = true;\n        } else if (attempts === 0) {\n          guessesCopy[key] = null;\n        }\n\n        entry.tries = attempts + 1;\n        entry.score = entry.score ?? 0;\n      }\n    });\n\n    // If correct or second attempt, submit\n    if ((correctCount === 4 || attempts === 1) && onSubmit) {\n      onSubmit({\n        activeCloverId: clover.cloverId,\n        guesses: guessesCopy,\n      });\n      return;\n    }\n\n    notification.warn({\n      message: translate(`${4 - correctCount} folhas estão erradas`, `${4 - correctCount} leaves are wrong`),\n      description: translate(\n        'Tente novamente. Pode ter sido folha errada ou rotação errada',\n        'Try again. It may have been wrong leaf or just wrong rotation'\n      ),\n    });\n\n    setGuesses(guessesCopy);\n    setLocks(locksCopy);\n    setAttempts(1);\n  };\n\n  // BOOLEANS\n  const isCluesComplete = clues.every((clue) => clue.trim());\n  const isCloverComplete = Object.values(guesses).every((guess) => Boolean(guess));\n\n  return {\n    mode,\n    rotation,\n    onRotateClover,\n    clues,\n    onClueChange,\n    rotations,\n    onLeafRotate,\n    guesses,\n    onActivateLeaf,\n    activeLeafId,\n    onActivateSlot,\n    activeSlotId,\n    usedLeavesIds,\n    onLeafRemove,\n    isCluesComplete,\n    isCloverComplete,\n    submitClover,\n    locks,\n  };\n}\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockClues } from './utils/mock';\n// Components\nimport { DebugOnly } from 'components/debug';\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Clover } from './components/Clover';\nimport { useCloverState } from './utils/useCloverState';\n\ntype StepWriteCluesProps = {\n  clover: Clover;\n  leaves: Leaves;\n  onSubmitClues: GenericFunction;\n};\n\nexport function StepWriteClues({ clover, leaves, onSubmitClues }: StepWriteCluesProps) {\n  const { isLoading } = useLoading();\n  const { mode, rotation, onRotateClover, clues, onClueChange } = useCloverState('write', clover, leaves);\n\n  const onSubmit = () => {\n    onSubmitClues({ clues });\n  };\n\n  const onSubmitMock = () => {\n    onSubmitClues(mockClues());\n  };\n\n  useMock(() => {\n    onSubmitClues(mockClues());\n  });\n\n  return (\n    <Step fullWidth>\n      <Title size=\"medium\">\n        <Translate pt=\"Escreva as dicas\" en=\"Write clues\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Escreva uma dica para cada um dos pares de palavras na parte de fora do trevo\n              <br />\n              Você pode girar o trevo para ficar mais fácil de escrever\n            </>\n          }\n          en={\n            <>\n              Write a clue for each pair of clues in the outer side of the clover\n              <br />\n              You may rotate the clover before writing\n            </>\n          }\n        />\n      </Instruction>\n\n      <Clover\n        mode={mode}\n        clover={clover}\n        leaves={leaves}\n        rotation={rotation}\n        onRotate={onRotateClover}\n        onClueChange={onClueChange}\n      />\n\n      <Space className=\"space-container\" align=\"center\">\n        <Button type=\"primary\" size=\"large\" onClick={onSubmit} disabled={isLoading}>\n          <Translate pt=\"Enviar dicas\" en=\"Submit clues\" />\n        </Button>\n\n        <DebugOnly devOnly>\n          <Button size=\"large\" onClick={onSubmitMock}>\n            Mock clues\n          </Button>\n        </DebugOnly>\n      </Space>\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useIsUserReady } from 'hooks/useIsUserReady';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useOnSubmitCluesAPIRequest } from './utils/api-requests';\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\nimport { WritingIcon } from 'components/icons/WritingIcon';\nimport { StepWriteClues } from './StepWriteClues';\n\nfunction PhaseCloverWriting({ players, state, info }: PhaseProps) {\n  const isUserReady = useIsUserReady(players, state);\n  const { translate } = useLanguage();\n  const user = useUser(players);\n  const { step, goToNextStep, setStep } = useStep(0);\n\n  const onSubmitClues = useOnSubmitCluesAPIRequest(setStep);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.TREVO_DA_SORTE.CLOVER_WRITING}>\n      <StepSwitcher step={step} conditions={[!isUserReady, !isUserReady, !isUserReady]} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<WritingIcon />}\n          title={translate('Escreva as dicas', 'Write the clues')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <Translate pt=\"Para cada par, escreva uma dica\" en=\"For each pair, write a clue\" />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepWriteClues clover={user.clover} leaves={user.leaves} onSubmitClues={onSubmitClues} />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseCloverWriting;\n","import { Space } from 'antd';\nimport clsx from 'clsx';\nimport { Instruction } from 'components/text';\nimport { orderBy } from 'lodash';\nimport { useMemo } from 'react';\nimport { Leaf } from './Leaf';\n\ntype DetachedLeavesProps = {\n  leaves: Leaves;\n  usedLeavesIds: LeafId[];\n  rotations: NumberDictionary;\n  onLeafRotate: LeafEvent;\n  activeLeafId?: LeafId | null;\n  onLeafGrab?: GenericFunction;\n};\n\nexport function DetachedLeaves({\n  leaves,\n  onLeafRotate,\n  rotations,\n  activeLeafId,\n  onLeafGrab,\n  usedLeavesIds,\n}: DetachedLeavesProps) {\n  const availableLeaves = useMemo(\n    () => orderBy(Object.values(leaves), 'id').filter((leaf) => !usedLeavesIds.includes(leaf.id)),\n    [leaves, usedLeavesIds]\n  );\n\n  return (\n    <Instruction contained>\n      <Space className=\"space-container\" align=\"center\" wrap>\n        {availableLeaves.map((leaf) => {\n          return (\n            <div className=\"y-leaf-loose\" key={leaf.id}>\n              <Leaf\n                key={leaf!.id}\n                leaf={leaf!}\n                onLeafGrab={onLeafGrab}\n                onLeafRotate={onLeafRotate}\n                rotation={rotations?.[leaf.id]}\n                className={clsx(activeLeafId === leaf.id && 'y-leaf--active')}\n              />\n            </div>\n          );\n        })}\n      </Space>\n    </Instruction>\n  );\n}\n","import { Button, Space } from 'antd';\n\nimport { AvatarName } from 'components/avatars';\n\nimport { DebugOnly } from 'components/debug';\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\n\nimport { useLoading } from 'hooks/useLoading';\nimport { Clover } from './components/Clover';\nimport { DetachedLeaves } from './components/DetachedLeaves';\n\nimport { mockGuesses } from './utils/mock';\nimport { useCloverState } from './utils/useCloverState';\n\ntype StepGuessCloverProps = {\n  clover: Clover;\n  leaves: Leaves;\n  onSubmitGuess: GenericFunction;\n  activeCloverPlayer: GamePlayer;\n  isUserTheCloverPlayer: boolean;\n};\n\nexport function StepGuessClover({ clover, leaves, onSubmitGuess, activeCloverPlayer }: StepGuessCloverProps) {\n  const { isLoading } = useLoading();\n  const {\n    rotation,\n    rotations,\n    onLeafRotate,\n    onRotateClover,\n    guesses,\n    onActivateLeaf,\n    activeLeafId,\n    onActivateSlot,\n    activeSlotId,\n    usedLeavesIds,\n    onLeafRemove,\n    isCloverComplete,\n    submitClover,\n    locks,\n  } = useCloverState('guess', clover, leaves, onSubmitGuess);\n\n  const onSubmitMock = () => {\n    onSubmitGuess({\n      guesses: mockGuesses(leaves),\n      activeCloverId: clover.cloverId,\n    });\n  };\n\n  return (\n    <Step fullWidth>\n      <Title size=\"medium\">\n        <Translate\n          pt={\n            <>\n              Adivinhação do trevo do(a) <AvatarName player={activeCloverPlayer} />\n            </>\n          }\n          en={\n            <>\n              Guessing <AvatarName player={activeCloverPlayer} />\n              's clover\n            </>\n          }\n        />\n      </Title>\n      <Instruction contained>\n        <Translate pt={<>??</>} en={<>??</>} />\n      </Instruction>\n\n      <Clover\n        mode=\"guess\"\n        clover={clover}\n        leaves={leaves}\n        onRotate={onRotateClover}\n        rotation={rotation}\n        onLeafRotate={onLeafRotate}\n        rotations={rotations}\n        guesses={guesses}\n        onLeafGrab={onActivateLeaf}\n        activeLeafId={activeLeafId}\n        onActivateSlot={onActivateSlot}\n        activeSlotId={activeSlotId}\n        onLeafRemove={onLeafRemove}\n        locks={locks}\n      />\n\n      <DetachedLeaves\n        leaves={leaves}\n        rotations={rotations}\n        onLeafRotate={onLeafRotate}\n        onLeafGrab={onActivateLeaf}\n        activeLeafId={activeLeafId}\n        usedLeavesIds={usedLeavesIds}\n      />\n\n      <Space className=\"space-container\" align=\"center\">\n        <Button type=\"primary\" size=\"large\" onClick={submitClover} disabled={!isCloverComplete || isLoading}>\n          <Translate pt=\"Enviar adivinhação\" en=\"Submit guess\" />\n        </Button>\n\n        <DebugOnly devOnly>\n          <Button size=\"large\" onClick={onSubmitMock}>\n            Mock guesses\n          </Button>\n        </DebugOnly>\n      </Space>\n    </Step>\n  );\n}\n","import { AvatarName } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Clover } from './components/Clover';\nimport { DetachedLeaves } from './components/DetachedLeaves';\nimport { useCloverState } from './utils/useCloverState';\n\ntype StepWaitCloverProps = {\n  activeCloverPlayer: GamePlayer;\n  clover: Clover;\n  leaves: Leaves;\n};\n\nexport function StepWaitClover({ activeCloverPlayer, clover, leaves }: StepWaitCloverProps) {\n  const { mode, rotation, rotations, onLeafRotate, onRotateClover, usedLeavesIds } = useCloverState(\n    'view',\n    clover,\n    leaves\n  );\n\n  return (\n    <Step fullWidth>\n      <Title size=\"medium\">\n        <Translate\n          pt={\n            <>\n              Adivinhação do trevo do(a) <AvatarName player={activeCloverPlayer} />\n            </>\n          }\n          en={\n            <>\n              Guessing <AvatarName player={activeCloverPlayer} />\n              's clover\n            </>\n          }\n        />\n      </Title>\n\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Aguarde enquanto os outros jogadores tentam adivinhar.\n              <br />\n              Enquanto isso, veja as cartas que eles tem disponíveis.\n            </>\n          }\n          en={\n            <>\n              Wait while other players are trying to guess your clover.\n              <br /> In the meantime, check it out the cards they have available.\n            </>\n          }\n        />\n      </Instruction>\n\n      <Clover mode={mode} clover={clover} leaves={leaves} onRotate={onRotateClover} rotation={rotation} />\n\n      <DetachedLeaves\n        leaves={leaves}\n        rotations={rotations}\n        onLeafRotate={onLeafRotate}\n        usedLeavesIds={usedLeavesIds}\n      />\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useIsUserReady } from 'hooks/useIsUserReady';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useOnSubmitGuessAPIRequest } from './utils/api-requests';\nimport { useStep } from 'hooks/useStep';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\nimport { StepGuessClover } from './StepGuessClover';\nimport { CloverIcon } from 'components/icons/CloverIcon';\nimport { ViewOr } from 'components/views';\nimport { TurnOrder } from 'components/players';\nimport { StepWaitClover } from './StepWaitClover';\n\nfunction PhaseCloverGuessing({ players, state, info }: PhaseProps) {\n  const isUserReady = useIsUserReady(players, state);\n  const { translate } = useLanguage();\n  const { step, goToNextStep, setStep } = useStep(0);\n  const [activeCloverPlayer, isUserTheCloverPlayer] = useWhichPlayerIsThe('activeCloverId', state, players);\n\n  const onSubmitGuess = useOnSubmitGuessAPIRequest(setStep);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.TREVO_DA_SORTE.CLOVER_GUESSING}>\n      <StepSwitcher step={step} conditions={[!isUserReady, !isUserReady, !isUserReady]} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<CloverIcon />}\n          title={translate('Hora de Adivinhar', 'Time to guess')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <Translate\n              pt=\"De um em um, vamos tentar adivinhar a posição das folhas em cada trevo\"\n              en=\"One at a time, let's try to guess the position of each leaf on each clover\"\n            />\n          </Instruction>\n\n          <TurnOrder players={players} activePlayerId={state.activeCloverId} order={state.gameOrder} />\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <ViewOr orCondition={isUserTheCloverPlayer}>\n          <StepWaitClover\n            activeCloverPlayer={activeCloverPlayer}\n            clover={state.clover}\n            leaves={state.leaves}\n          />\n\n          <StepGuessClover\n            clover={state.clover}\n            leaves={state.leaves}\n            onSubmitGuess={onSubmitGuess}\n            activeCloverPlayer={activeCloverPlayer}\n            isUserTheCloverPlayer={isUserTheCloverPlayer}\n          />\n        </ViewOr>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseCloverGuessing;\n","import { Tabs } from 'antd';\nimport { AvatarName } from 'components/avatars';\nimport { Instruction } from 'components/text';\nimport { useState } from 'react';\nimport { sortPlayers } from 'utils/helpers';\nimport { Clover } from './Clover';\n\ntype PlayersGuessesProps = {\n  players: GamePlayers;\n  clover: Clover;\n  leaves: Leaves;\n  rotation: number;\n  onRotate: GenericFunction;\n  activeCloverId: PlayerId;\n};\n\nexport function PlayersGuesses({\n  players,\n  clover,\n  leaves,\n  rotation,\n  onRotate,\n  activeCloverId,\n}: PlayersGuessesProps) {\n  const sortedPlayers = sortPlayers(players).filter((player) => player.id !== activeCloverId);\n  const [activePlayerTab, setActivePlayerTab] = useState(`${sortedPlayers[0].id}::tab`);\n\n  return (\n    <Instruction contained>\n      <Tabs activeKey={activePlayerTab} onChange={(key) => setActivePlayerTab(key)}>\n        {sortedPlayers.map((player) => {\n          return (\n            <Tabs.TabPane tab={<AvatarName player={player} />} key={`${player.id}::tab`}>\n              <Clover\n                mode=\"result\"\n                clover={clover}\n                leaves={leaves}\n                rotation={rotation}\n                onRotate={onRotate}\n                guesses={player.guesses[activeCloverId]?.leaves ?? {}}\n              />\n            </Tabs.TabPane>\n          );\n        })}\n      </Tabs>\n    </Instruction>\n  );\n}\n","import { AdminNextPhaseButton } from 'components/admin';\nimport { Translate } from 'components/language';\nimport { StepRankingWrapper } from 'components/ranking';\nimport { Clover } from './components/Clover';\nimport { PlayersGuesses } from './components/PlayersGuesses';\nimport { useCloverState } from './utils/useCloverState';\n\ntype StepRankingProps = {\n  players: GamePlayers;\n  ranking: GameRanking;\n  round: GameRound;\n  lastRound?: boolean;\n  clover: Clover;\n  leaves: Leaves;\n  activeCloverId: PlayerId;\n};\n\nexport function StepRanking({\n  players,\n  ranking,\n  round,\n  lastRound,\n  clover,\n  leaves,\n  activeCloverId,\n}: StepRankingProps) {\n  const { mode, rotation, onRotateClover } = useCloverState('view', clover, leaves);\n\n  return (\n    <StepRankingWrapper\n      players={players}\n      ranking={ranking}\n      gainedPointsDescriptions={[\n        <Translate pt=\"Pontos por encontrar só um jogador\" en=\"Points for matching only 1 player\" />,\n        <Translate pt=\"Pontos por encontrar mais de um jogador\" en=\"Points for matching with more players\" />,\n        <Translate\n          pt=\"Pontos perdidos por não ter dado match e estar em um pesadelo\"\n          en=\"Points lost for not matching any player while in a nightmare\"\n        />,\n      ]}\n    >\n      <Clover mode={mode} clover={clover} leaves={leaves} onRotate={onRotateClover} rotation={rotation} />\n\n      <PlayersGuesses\n        players={players}\n        clover={clover}\n        leaves={leaves}\n        onRotate={onRotateClover}\n        rotation={rotation}\n        activeCloverId={activeCloverId}\n      />\n\n      <AdminNextPhaseButton round={round} lastRound={lastRound} />\n    </StepRankingWrapper>\n  );\n}\n","// State & Hooks\nimport { useIsUserReady } from 'hooks/useIsUserReady';\nimport { useLanguage } from 'hooks/useLanguage';\n\nimport { useStep } from 'hooks/useStep';\n\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\nimport { StepRanking } from './StepRanking';\nimport { RankIcon } from 'components/icons/RankIcon';\n\nfunction PhaseResults({ players, state, info }: PhaseProps) {\n  const isUserReady = useIsUserReady(players, state);\n  const { translate } = useLanguage();\n  const { step, goToNextStep } = useStep(0);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.TREVO_DA_SORTE.RESULTS}>\n      <StepSwitcher step={step} conditions={[!isUserReady, !isUserReady]} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<RankIcon />}\n          title={translate('Resultado', 'Results')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <Translate pt=\"Quantos pontos você ganhou?\" en=\"How many points did you get?\" />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepRanking\n          players={players}\n          round={state.round}\n          clover={state.clover}\n          leaves={state.leaves}\n          ranking={state.ranking}\n          lastRound={state.lastRound}\n          activeCloverId={state.activeCloverId}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseResults;\n","// Components\nimport { GameOverWrapper } from 'components/game-over';\nimport { TrophyIcon } from 'components/icons/TrophyIcon';\n\nfunction PhaseGameOver({ state, info }: PhaseProps) {\n  return <GameOverWrapper info={info} state={state} announcementIcon={<TrophyIcon />} />;\n}\n\nexport default PhaseGameOver;\n","import { ConfigProvider } from 'antd';\n// Constants\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport PhaseWordSelection from './PhaseWordSelection';\nimport PhaseCloverWriting from './PhaseCloverWriting';\n// Fonts\nimport 'assets/fonts/architects-daughter.scss';\nimport PhaseCloverGuessing from './PhaseCloverGuessing';\nimport PhaseResults from './PhaseResults';\nimport PhaseGameOver from './PhaseGameOver';\n\nConfigProvider.config({\n  theme: {\n    primaryColor: THEME_COLORS.GRASS,\n  },\n});\n\nfunction SessionTrevoDaSorte({ gameId }: SessionProps) {\n  function getActiveComponent(phase: string) {\n    switch (phase) {\n      case PHASES.DEFAULT.LOBBY:\n        return PhaseLobby;\n      case PHASES.DEFAULT.RULES:\n        return PhaseRules;\n      case PHASES.DEFAULT.SETUP:\n        return PhaseSetup;\n      case PHASES.TREVO_DA_SORTE.WORD_SELECTION:\n        return PhaseWordSelection;\n      case PHASES.TREVO_DA_SORTE.CLOVER_WRITING:\n        return PhaseCloverWriting;\n      case PHASES.TREVO_DA_SORTE.CLOVER_GUESSING:\n        return PhaseCloverGuessing;\n      case PHASES.TREVO_DA_SORTE.RESULTS:\n        return PhaseResults;\n      case PHASES.DEFAULT.GAME_OVER:\n        return PhaseGameOver;\n      default:\n        return PageError;\n    }\n  }\n\n  return (\n    <Session\n      gameId={gameId}\n      gameCollection={GAME_COLLECTION.TREVO_DA_SORTE}\n      getActiveComponent={getActiveComponent}\n    />\n  );\n}\n\nexport default SessionTrevoDaSorte;\n","import { useState } from 'react';\n\nexport function useBooleanDictionary(\n  /**\n   * The initial state, usually an empty object\n   */\n  initialState: BooleanDictionary,\n  // Confirm if entry can be added to the dictionary\n  validation?: BooleanFunction\n): [BooleanDictionary, GenericFunction] {\n  const [dict, setDict] = useState(initialState);\n\n  const updateDict = (key: string) => {\n    const isValid = !validation || validation(dict);\n    if (!dict[key] && isValid) {\n      setDict((s) => ({\n        ...s,\n        [key]: true,\n      }));\n    } else {\n      const dictCopy = { ...dict };\n      delete dictCopy[key];\n      setDict(dictCopy);\n    }\n  };\n\n  return [dict, updateDict];\n}\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\n/**\n * Gets player that is assigned to a property in the state\n * @param propertyName\n * @param state\n * @param players\n * @returns a player instance, a boolean if the player is assigned to given property\n */\nexport function useWhichPlayerIsThe(\n  propertyName = 'activePlayer',\n  state: PlainObject = {},\n  players: Players = {}\n): [GamePlayer, boolean] {\n  const [userId] = useGlobalState('userId');\n  const [activePlayer, setActivePlayer] = useState<GamePlayer>({});\n  const [isUser, setIsUser] = useState(false);\n\n  // Determine if user is active as the guesser, the clue giver, the psychic, the storyteller, etc\n  useEffect(() => {\n    const activePlayer = state?.[propertyName];\n    setActivePlayer(players?.[activePlayer] ?? {});\n    setIsUser(state?.[propertyName] === userId);\n  }, [players, propertyName, state, userId]);\n\n  return [activePlayer, isUser];\n}\n","// This icon file is generated automatically.\nvar CaretUpOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"0 0 1024 1024\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M858.9 689L530.5 308.2c-9.4-10.9-27.5-10.9-37 0L165.1 689c-12.2 14.2-1.2 35 18.5 35h656.8c19.7 0 30.7-20.8 18.5-35z\" } }] }, \"name\": \"caret-up\", \"theme\": \"outlined\" };\nexport default CaretUpOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CaretUpOutlinedSvg from \"@ant-design/icons-svg/es/asn/CaretUpOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CaretUpOutlined = function CaretUpOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CaretUpOutlinedSvg\n  }));\n};\n\nCaretUpOutlined.displayName = 'CaretUpOutlined';\nexport default /*#__PURE__*/React.forwardRef(CaretUpOutlined);","// This icon file is generated automatically.\nvar CrownFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M899.6 276.5L705 396.4 518.4 147.5a8.06 8.06 0 00-12.9 0L319 396.4 124.3 276.5c-5.7-3.5-13.1 1.2-12.2 7.9L188.5 865c1.1 7.9 7.9 14 16 14h615.1c8 0 14.9-6 15.9-14l76.4-580.6c.8-6.7-6.5-11.4-12.3-7.9zM512 734.2c-62.1 0-112.6-50.5-112.6-112.6S449.9 509 512 509s112.6 50.5 112.6 112.6S574.1 734.2 512 734.2zm0-160.9c-26.6 0-48.2 21.6-48.2 48.3 0 26.6 21.6 48.3 48.2 48.3s48.2-21.6 48.2-48.3c0-26.6-21.6-48.3-48.2-48.3z\" } }] }, \"name\": \"crown\", \"theme\": \"filled\" };\nexport default CrownFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CrownFilledSvg from \"@ant-design/icons-svg/es/asn/CrownFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CrownFilled = function CrownFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CrownFilledSvg\n  }));\n};\n\nCrownFilled.displayName = 'CrownFilled';\nexport default /*#__PURE__*/React.forwardRef(CrownFilled);","// This icon file is generated automatically.\nvar DeleteOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z\" } }] }, \"name\": \"delete\", \"theme\": \"outlined\" };\nexport default DeleteOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DeleteOutlinedSvg from \"@ant-design/icons-svg/es/asn/DeleteOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar DeleteOutlined = function DeleteOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: DeleteOutlinedSvg\n  }));\n};\n\nDeleteOutlined.displayName = 'DeleteOutlined';\nexport default /*#__PURE__*/React.forwardRef(DeleteOutlined);","// This icon file is generated automatically.\nvar LikeFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M885.9 533.7c16.8-22.2 26.1-49.4 26.1-77.7 0-44.9-25.1-87.4-65.5-111.1a67.67 67.67 0 00-34.3-9.3H572.4l6-122.9c1.4-29.7-9.1-57.9-29.5-79.4A106.62 106.62 0 00471 99.9c-52 0-98 35-111.8 85.1l-85.9 311h-.3v428h472.3c9.2 0 18.2-1.8 26.5-5.4 47.6-20.3 78.3-66.8 78.3-118.4 0-12.6-1.8-25-5.4-37 16.8-22.2 26.1-49.4 26.1-77.7 0-12.6-1.8-25-5.4-37 16.8-22.2 26.1-49.4 26.1-77.7-.2-12.6-2-25.1-5.6-37.1zM112 528v364c0 17.7 14.3 32 32 32h65V496h-65c-17.7 0-32 14.3-32 32z\" } }] }, \"name\": \"like\", \"theme\": \"filled\" };\nexport default LikeFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LikeFilledSvg from \"@ant-design/icons-svg/es/asn/LikeFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar LikeFilled = function LikeFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: LikeFilledSvg\n  }));\n};\n\nLikeFilled.displayName = 'LikeFilled';\nexport default /*#__PURE__*/React.forwardRef(LikeFilled);","// This icon file is generated automatically.\nvar StarFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M908.1 353.1l-253.9-36.9L540.7 86.1c-3.1-6.3-8.2-11.4-14.5-14.5-15.8-7.8-35-1.3-42.9 14.5L369.8 316.2l-253.9 36.9c-7 1-13.4 4.3-18.3 9.3a32.05 32.05 0 00.6 45.3l183.7 179.1-43.4 252.9a31.95 31.95 0 0046.4 33.7L512 754l227.1 119.4c6.2 3.3 13.4 4.4 20.3 3.2 17.4-3 29.1-19.5 26.1-36.9l-43.4-252.9 183.7-179.1c5-4.9 8.3-11.3 9.3-18.3 2.7-17.5-9.5-33.7-27-36.3z\" } }] }, \"name\": \"star\", \"theme\": \"filled\" };\nexport default StarFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport StarFilledSvg from \"@ant-design/icons-svg/es/asn/StarFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar StarFilled = function StarFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: StarFilledSvg\n  }));\n};\n\nStarFilled.displayName = 'StarFilled';\nexport default /*#__PURE__*/React.forwardRef(StarFilled);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport React from 'react';\n\nvar Star = /*#__PURE__*/function (_React$Component) {\n  _inherits(Star, _React$Component);\n\n  var _super = _createSuper(Star);\n\n  function Star() {\n    var _this;\n\n    _classCallCheck(this, Star);\n\n    _this = _super.apply(this, arguments);\n\n    _this.onHover = function (e) {\n      var _this$props = _this.props,\n          onHover = _this$props.onHover,\n          index = _this$props.index;\n      onHover(e, index);\n    };\n\n    _this.onClick = function (e) {\n      var _this$props2 = _this.props,\n          onClick = _this$props2.onClick,\n          index = _this$props2.index;\n      onClick(e, index);\n    };\n\n    _this.onKeyDown = function (e) {\n      var _this$props3 = _this.props,\n          onClick = _this$props3.onClick,\n          index = _this$props3.index;\n\n      if (e.keyCode === 13) {\n        onClick(e, index);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Star, [{\n    key: \"getClassName\",\n    value: function getClassName() {\n      var _this$props4 = this.props,\n          prefixCls = _this$props4.prefixCls,\n          index = _this$props4.index,\n          value = _this$props4.value,\n          allowHalf = _this$props4.allowHalf,\n          focused = _this$props4.focused;\n      var starValue = index + 1;\n      var className = prefixCls;\n\n      if (value === 0 && index === 0 && focused) {\n        className += \" \".concat(prefixCls, \"-focused\");\n      } else if (allowHalf && value + 0.5 >= starValue && value < starValue) {\n        className += \" \".concat(prefixCls, \"-half \").concat(prefixCls, \"-active\");\n\n        if (focused) {\n          className += \" \".concat(prefixCls, \"-focused\");\n        }\n      } else {\n        className += starValue <= value ? \" \".concat(prefixCls, \"-full\") : \" \".concat(prefixCls, \"-zero\");\n\n        if (starValue === value && focused) {\n          className += \" \".concat(prefixCls, \"-focused\");\n        }\n      }\n\n      return className;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var onHover = this.onHover,\n          onClick = this.onClick,\n          onKeyDown = this.onKeyDown;\n      var _this$props5 = this.props,\n          disabled = _this$props5.disabled,\n          prefixCls = _this$props5.prefixCls,\n          character = _this$props5.character,\n          characterRender = _this$props5.characterRender,\n          index = _this$props5.index,\n          count = _this$props5.count,\n          value = _this$props5.value;\n      var characterNode = typeof character === 'function' ? character(this.props) : character;\n      var start = /*#__PURE__*/React.createElement(\"li\", {\n        className: this.getClassName()\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onClick: disabled ? null : onClick,\n        onKeyDown: disabled ? null : onKeyDown,\n        onMouseMove: disabled ? null : onHover,\n        role: \"radio\",\n        \"aria-checked\": value > index ? 'true' : 'false',\n        \"aria-posinset\": index + 1,\n        \"aria-setsize\": count,\n        tabIndex: disabled ? -1 : 0\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-first\")\n      }, characterNode), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-second\")\n      }, characterNode)));\n\n      if (characterRender) {\n        start = characterRender(start, this.props);\n      }\n\n      return start;\n    }\n  }]);\n\n  return Star;\n}(React.Component);\n\nexport { Star as default };","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport React from 'react';\nimport findDOMNode from \"rc-util/es/Dom/findDOMNode\";\nimport classNames from 'classnames';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport { getOffsetLeft } from './util';\nimport Star from './Star';\n\nfunction noop() {}\n\nvar Rate = /*#__PURE__*/function (_React$Component) {\n  _inherits(Rate, _React$Component);\n\n  var _super = _createSuper(Rate);\n\n  function Rate(props) {\n    var _this;\n\n    _classCallCheck(this, Rate);\n\n    _this = _super.call(this, props);\n\n    _this.onHover = function (event, index) {\n      var onHoverChange = _this.props.onHoverChange;\n\n      var hoverValue = _this.getStarValue(index, event.pageX);\n\n      var cleanedValue = _this.state.cleanedValue;\n\n      if (hoverValue !== cleanedValue) {\n        _this.setState({\n          hoverValue: hoverValue,\n          cleanedValue: null\n        });\n      }\n\n      onHoverChange(hoverValue);\n    };\n\n    _this.onMouseLeave = function () {\n      var onHoverChange = _this.props.onHoverChange;\n\n      _this.setState({\n        hoverValue: undefined,\n        cleanedValue: null\n      });\n\n      onHoverChange(undefined);\n    };\n\n    _this.onClick = function (event, index) {\n      var allowClear = _this.props.allowClear;\n      var value = _this.state.value;\n\n      var newValue = _this.getStarValue(index, event.pageX);\n\n      var isReset = false;\n\n      if (allowClear) {\n        isReset = newValue === value;\n      }\n\n      _this.onMouseLeave();\n\n      _this.changeValue(isReset ? 0 : newValue);\n\n      _this.setState({\n        cleanedValue: isReset ? newValue : null\n      });\n    };\n\n    _this.onFocus = function () {\n      var onFocus = _this.props.onFocus;\n\n      _this.setState({\n        focused: true\n      });\n\n      if (onFocus) {\n        onFocus();\n      }\n    };\n\n    _this.onBlur = function () {\n      var onBlur = _this.props.onBlur;\n\n      _this.setState({\n        focused: false\n      });\n\n      if (onBlur) {\n        onBlur();\n      }\n    };\n\n    _this.onKeyDown = function (event) {\n      var keyCode = event.keyCode;\n      var _this$props = _this.props,\n          count = _this$props.count,\n          allowHalf = _this$props.allowHalf,\n          onKeyDown = _this$props.onKeyDown,\n          direction = _this$props.direction;\n      var reverse = direction === 'rtl';\n      var value = _this.state.value;\n\n      if (keyCode === KeyCode.RIGHT && value < count && !reverse) {\n        if (allowHalf) {\n          value += 0.5;\n        } else {\n          value += 1;\n        }\n\n        _this.changeValue(value);\n\n        event.preventDefault();\n      } else if (keyCode === KeyCode.LEFT && value > 0 && !reverse) {\n        if (allowHalf) {\n          value -= 0.5;\n        } else {\n          value -= 1;\n        }\n\n        _this.changeValue(value);\n\n        event.preventDefault();\n      } else if (keyCode === KeyCode.RIGHT && value > 0 && reverse) {\n        if (allowHalf) {\n          value -= 0.5;\n        } else {\n          value -= 1;\n        }\n\n        _this.changeValue(value);\n\n        event.preventDefault();\n      } else if (keyCode === KeyCode.LEFT && value < count && reverse) {\n        if (allowHalf) {\n          value += 0.5;\n        } else {\n          value += 1;\n        }\n\n        _this.changeValue(value);\n\n        event.preventDefault();\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event);\n      }\n    };\n\n    _this.saveRef = function (index) {\n      return function (node) {\n        _this.stars[index] = node;\n      };\n    };\n\n    _this.saveRate = function (node) {\n      _this.rate = node;\n    };\n\n    var value = props.value;\n\n    if (value === undefined) {\n      value = props.defaultValue;\n    }\n\n    _this.stars = {};\n    _this.state = {\n      value: value,\n      focused: false,\n      cleanedValue: null\n    };\n    return _this;\n  }\n\n  _createClass(Rate, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props2 = this.props,\n          autoFocus = _this$props2.autoFocus,\n          disabled = _this$props2.disabled;\n\n      if (autoFocus && !disabled) {\n        this.focus();\n      }\n    }\n  }, {\n    key: \"getStarDOM\",\n    value: function getStarDOM(index) {\n      return findDOMNode(this.stars[index]);\n    }\n  }, {\n    key: \"getStarValue\",\n    value: function getStarValue(index, x) {\n      var _this$props3 = this.props,\n          allowHalf = _this$props3.allowHalf,\n          direction = _this$props3.direction;\n      var reverse = direction === 'rtl';\n      var value = index + 1;\n\n      if (allowHalf) {\n        var starEle = this.getStarDOM(index);\n        var leftDis = getOffsetLeft(starEle);\n        var width = starEle.clientWidth;\n\n        if (reverse && x - leftDis > width / 2) {\n          value -= 0.5;\n        } else if (!reverse && x - leftDis < width / 2) {\n          value -= 0.5;\n        }\n      }\n\n      return value;\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      var disabled = this.props.disabled;\n\n      if (!disabled) {\n        this.rate.focus();\n      }\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      var disabled = this.props.disabled;\n\n      if (!disabled) {\n        this.rate.blur();\n      }\n    }\n  }, {\n    key: \"changeValue\",\n    value: function changeValue(value) {\n      var onChange = this.props.onChange;\n\n      if (!('value' in this.props)) {\n        this.setState({\n          value: value\n        });\n      }\n\n      onChange(value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          count = _this$props4.count,\n          allowHalf = _this$props4.allowHalf,\n          style = _this$props4.style,\n          prefixCls = _this$props4.prefixCls,\n          disabled = _this$props4.disabled,\n          className = _this$props4.className,\n          character = _this$props4.character,\n          characterRender = _this$props4.characterRender,\n          tabIndex = _this$props4.tabIndex,\n          direction = _this$props4.direction;\n      var _this$state = this.state,\n          value = _this$state.value,\n          hoverValue = _this$state.hoverValue,\n          focused = _this$state.focused;\n      var stars = [];\n      var disabledClass = disabled ? \"\".concat(prefixCls, \"-disabled\") : '';\n\n      for (var index = 0; index < count; index += 1) {\n        stars.push( /*#__PURE__*/React.createElement(Star, {\n          ref: this.saveRef(index),\n          index: index,\n          count: count,\n          disabled: disabled,\n          prefixCls: \"\".concat(prefixCls, \"-star\"),\n          allowHalf: allowHalf,\n          value: hoverValue === undefined ? value : hoverValue,\n          onClick: this.onClick,\n          onHover: this.onHover,\n          key: index,\n          character: character,\n          characterRender: characterRender,\n          focused: focused\n        }));\n      }\n\n      var rateClassName = classNames(prefixCls, disabledClass, className, _defineProperty({}, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'));\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        className: rateClassName,\n        style: style,\n        onMouseLeave: disabled ? null : this.onMouseLeave,\n        tabIndex: disabled ? -1 : tabIndex,\n        onFocus: disabled ? null : this.onFocus,\n        onBlur: disabled ? null : this.onBlur,\n        onKeyDown: disabled ? null : this.onKeyDown,\n        ref: this.saveRate,\n        role: \"radiogroup\"\n      }, stars);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, state) {\n      if ('value' in nextProps && nextProps.value !== undefined) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          value: nextProps.value\n        });\n      }\n\n      return state;\n    }\n  }]);\n\n  return Rate;\n}(React.Component);\n\nRate.defaultProps = {\n  defaultValue: 0,\n  count: 5,\n  allowHalf: false,\n  allowClear: true,\n  style: {},\n  prefixCls: 'rc-rate',\n  onChange: noop,\n  character: '★',\n  onHoverChange: noop,\n  tabIndex: 0,\n  direction: 'ltr'\n};\nexport default Rate;","/* eslint-disable import/prefer-default-export */\nfunction getScroll(w) {\n  var ret = w.pageXOffset;\n  var method = 'scrollLeft';\n\n  if (typeof ret !== 'number') {\n    var d = w.document; // ie6,7,8 standard mode\n\n    ret = d.documentElement[method];\n\n    if (typeof ret !== 'number') {\n      // quirks mode\n      ret = d.body[method];\n    }\n  }\n\n  return ret;\n}\n\nfunction getClientPosition(elem) {\n  var x;\n  var y;\n  var doc = elem.ownerDocument;\n  var body = doc.body;\n  var docElem = doc && doc.documentElement;\n  var box = elem.getBoundingClientRect();\n  x = box.left;\n  y = box.top;\n  x -= docElem.clientLeft || body.clientLeft || 0;\n  y -= docElem.clientTop || body.clientTop || 0;\n  return {\n    left: x,\n    top: y\n  };\n}\n\nexport function getOffsetLeft(el) {\n  var pos = getClientPosition(el);\n  var doc = el.ownerDocument; // Only IE use `parentWindow`\n\n  var w = doc.defaultView || doc.parentWindow;\n  pos.left += getScroll(w);\n  return pos.left;\n}","import Rate from './Rate';\nexport default Rate;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport StarFilled from \"@ant-design/icons/es/icons/StarFilled\";\nimport RcRate from 'rc-rate';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Tooltip from '../tooltip';\nvar Rate = /*#__PURE__*/React.forwardRef(function (_a, ref) {\n  var prefixCls = _a.prefixCls,\n      tooltips = _a.tooltips,\n      props = __rest(_a, [\"prefixCls\", \"tooltips\"]);\n\n  var characterRender = function characterRender(node, _ref) {\n    var index = _ref.index;\n    if (!tooltips) return node;\n    return /*#__PURE__*/React.createElement(Tooltip, {\n      title: tooltips[index]\n    }, node);\n  };\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var ratePrefixCls = getPrefixCls('rate', prefixCls);\n  return /*#__PURE__*/React.createElement(RcRate, _extends({\n    ref: ref,\n    characterRender: characterRender\n  }, props, {\n    prefixCls: ratePrefixCls,\n    direction: direction\n  }));\n});\nRate.displayName = 'Rate';\nRate.defaultProps = {\n  character: /*#__PURE__*/React.createElement(StarFilled, null)\n};\nexport default Rate;"],"names":["CloverIcon","props","xmlns","viewBox","fill","d","VerifyListIcon","WritingIcon","View","children","ViewIf","isVisible","ViewOr","orCondition","ViewSwitch","cases","length","Error","console","warn","ACTIONS","ROTATIONS","mockSelectCards","cards","shuffle","slice","map","card","id","clues","mockClues","sampleSize","mockedScore","mockGuesses","leaves","selected","Object","keys","A","leafId","rotation","getRandomItem","score","tries","B","C","D","StepSelectWords","hand","onSubmitBadWords","isLoading","useLoading","alphabeticalHand","useMemo","orderBy","useBooleanDictionary","selectedCards","updateSelectedCard","useMock","cardsIds","selectedCount","isComplete","fullWidth","size","pt","en","contained","className","clsx","onClick","active","activeClass","text","align","type","disabled","players","state","info","isUserReady","useIsUserReady","translate","useLanguage","user","useUser","useStep","step","goToNextStep","setStep","request","useAPICall","apiFunction","TREVO_DA_SORTE_API","actionName","onBeforeCall","onError","successMessage","errorMessage","payload","action","useOnSubmitBadWordsAPIRequest","phase","allowedPhase","PHASES","conditions","round","onPressButton","time","circleColor","icon","title","onClose","currentRound","current","RedoOutlined","ref","React","AntdIcon","_objectSpread","RedoOutlinedSvg","displayName","Leaf","leaf","onLeafRotate","onLeafRemove","onLeafGrab","position","isLocked","grabbable","Boolean","removable","rotatable","isStatic","getAnimationClass","style","transform","cIndex","role","e","shape","DeleteOutlined","IconAvatar","LockIcon","LeafSlot","activeSlotId","onActivateSlot","_","GuessIcon","LeafSlotContent","Clover","mode","clover","guesses","onRotate","onClueChange","rotations","locks","cloverLeaves","entries","index","cloverLeaf","leafIndex","Number","onChange","target","value","undefined","placeholder","clue","cloverLeafPosition","getLeaf","leafRotation","RotateLeftOutlined","RotateRightOutlined","guess","getIcon","BoxOneIcon","BoxCheckMarkIcon","BoxXIcon","direction","parseRotation","useCloverState","onSubmit","useState","attempts","setAttempts","setClues","setRotation","activeLeafId","setActiveLeafId","setActiveSlotId","setGuesses","setLocks","reduce","acc","setRotations","usedLeavesIds","setUsedLeavesIds","useEffect","values","prevState","newState","forEach","k","entry","isCluesComplete","every","trim","isCloverComplete","onRotateClover","targetIndex","copy","leadId","stopPropagation","newRotation","onActivateLeaf","targetLeafId","g","repeat","filter","l","newGuesses","targetSlotId","activeContent","targetContent","submitClover","correctCount","locksCopy","guessesCopy","key","correctLeaf","notification","message","description","activeCloverId","cloverId","StepWriteClues","onSubmitClues","devOnly","useOnSubmitCluesAPIRequest","DetachedLeaves","availableLeaves","includes","wrap","StepGuessClover","onSubmitGuess","activeCloverPlayer","player","StepWaitClover","useWhichPlayerIsThe","isUserTheCloverPlayer","useOnSubmitGuessAPIRequest","activePlayerId","order","gameOrder","PlayersGuesses","sortedPlayers","sortPlayers","activePlayerTab","setActivePlayerTab","activeKey","tab","StepRanking","ranking","lastRound","gainedPointsDescriptions","RankIcon","announcementIcon","TrophyIcon","ConfigProvider","theme","primaryColor","THEME_COLORS","gameId","gameCollection","GAME_COLLECTION","getActiveComponent","PhaseLobby","PhaseRules","PhaseSetup","PhaseWordSelection","PhaseCloverWriting","PhaseCloverGuessing","PhaseResults","PhaseGameOver","PageError","initialState","validation","dict","setDict","isValid","s","dictCopy","propertyName","useGlobalState","userId","activePlayer","setActivePlayer","isUser","setIsUser","CaretUpOutlined","CaretUpOutlinedSvg","CrownFilled","CrownFilledSvg","DeleteOutlinedSvg","LikeFilled","LikeFilledSvg","StarFilled","StarFilledSvg","Star","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","this","apply","arguments","onHover","_this$props","_this$props2","onKeyDown","_this$props3","keyCode","_createClass","_this$props4","prefixCls","allowHalf","focused","starValue","concat","_this$props5","character","characterRender","count","characterNode","start","getClassName","onMouseMove","tabIndex","noop","Rate","call","event","onHoverChange","hoverValue","getStarValue","pageX","cleanedValue","setState","onMouseLeave","allowClear","newValue","isReset","changeValue","onFocus","onBlur","reverse","KeyCode","preventDefault","saveRef","node","stars","saveRate","rate","defaultValue","autoFocus","focus","findDOMNode","x","starEle","getStarDOM","leftDis","el","pos","elem","y","doc","ownerDocument","body","docElem","documentElement","box","getBoundingClientRect","left","top","clientLeft","clientTop","getClientPosition","w","defaultView","parentWindow","ret","pageXOffset","method","document","getScroll","getOffsetLeft","width","clientWidth","blur","_this$state","disabledClass","push","rateClassName","classNames","_defineProperty","nextProps","defaultProps","__rest","t","p","prototype","hasOwnProperty","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","_a","tooltips","_React$useContext","ConfigContext","getPrefixCls","ratePrefixCls","RcRate","_extends","_ref","Tooltip"],"sourceRoot":""}