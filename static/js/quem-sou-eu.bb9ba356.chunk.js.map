{"version":3,"file":"static/js/quem-sou-eu.bb9ba356.chunk.js","mappings":"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","sources":["components/metrics/CardHighlight.tsx","games/quem-sou-eu/utils/mock.ts","games/quem-sou-eu/components/CharacterCard.tsx","games/quem-sou-eu/StepSelectCharacters.tsx","games/quem-sou-eu/PhaseCharacterFiltering.tsx","games/quem-sou-eu/utils/api-requests.ts","games/quem-sou-eu/utils/helpers.ts","games/quem-sou-eu/components/Table.tsx","games/quem-sou-eu/components/Highlights.tsx","games/quem-sou-eu/StepSelectGlyphs.tsx","games/quem-sou-eu/PhaseCharacterDescription.tsx","games/quem-sou-eu/components/RulesBlobs.tsx","games/quem-sou-eu/components/PlayerGlyphs.tsx","games/quem-sou-eu/StepGuessing.tsx","games/quem-sou-eu/PhaseGuessing.tsx","games/quem-sou-eu/components/GalleryGuesses.tsx","games/quem-sou-eu/StepGallery.tsx","games/quem-sou-eu/utils/constants.ts","games/quem-sou-eu/StepRanking.tsx","games/quem-sou-eu/PhaseResults.tsx","games/quem-sou-eu/components/FinalCharacter.tsx","games/quem-sou-eu/PhaseGameOver.tsx","games/quem-sou-eu/SessionQuemSouEu.tsx","games/quem-sou-eu/utils/achievements.ts","hooks/useBooleanDictionary.ts","icons/BoxCheckMarkIcon.tsx","icons/FilterIcon.tsx","icons/GarbageIcon.tsx","icons/ImageCardsIcon.tsx","icons/MirrorIcon.tsx","icons/NoIcon.tsx","icons/PlayerIconsIcon.tsx","icons/YesIcon.tsx","../node_modules/@ant-design/icons-svg/es/asn/CaretUpOutlined.js","../node_modules/@ant-design/icons/es/icons/CaretUpOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/CrownFilled.js","../node_modules/@ant-design/icons/es/icons/CrownFilled.js","../node_modules/@ant-design/icons-svg/es/asn/DownSquareOutlined.js","../node_modules/@ant-design/icons/es/icons/DownSquareOutlined.js","../node_modules/@ant-design/icons/es/icons/EyeInvisibleOutlined.js","../node_modules/@ant-design/icons/es/icons/EyeOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/MessageFilled.js","../node_modules/@ant-design/icons/es/icons/MessageFilled.js","../node_modules/@ant-design/icons-svg/es/asn/PictureOutlined.js","../node_modules/@ant-design/icons/es/icons/PictureOutlined.js","../node_modules/@ant-design/icons/es/icons/QuestionCircleOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/StepBackwardOutlined.js","../node_modules/@ant-design/icons/es/icons/StepBackwardOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/StepForwardOutlined.js","../node_modules/@ant-design/icons/es/icons/StepForwardOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/TrophyOutlined.js","../node_modules/@ant-design/icons/es/icons/TrophyOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/UpCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/UpCircleOutlined.js"],"sourcesContent":["import { ImageCardsIcon } from 'icons/ImageCardsIcon';\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function CardHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<ImageCardsIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import { sample, sampleSize } from 'lodash';\n\nexport const mockSelectCharacters = (characters: Character[]) => {\n  return sampleSize(characters, 6).map((c) => c.id);\n};\n\nexport const mockGlyphs = (glyphs: string[]) => {\n  const positiveQuantity = sample([1, 1, 2, 2, 2, 3]) ?? 2;\n  const negativeQuantity = sample([0, 0, 0, 1, 1, 1, 2, 2, 3]) ?? 0;\n  const selected = glyphs.slice(0, positiveQuantity + negativeQuantity);\n  const dict: BooleanDictionary = {};\n  selected.slice(0, positiveQuantity).forEach((key) => (dict[key] = true));\n  selected.slice(positiveQuantity).forEach((key) => (dict[key] = false));\n\n  return dict;\n};\n","import clsx from 'clsx';\n// Ant Design resources\nimport { Image } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useBlurCards } from 'hooks/useBlurCards';\n// Utils\nimport { PUBLIC_URL } from 'utils/constants';\n// Components\nimport { DualTranslate } from 'components/language';\nimport { ImageBlurButton } from 'components/cards';\n\ntype CharacterCardProps = {\n  size: number;\n  character: any;\n  className?: string;\n};\n\nexport function CharacterCard({ size, character, className }: CharacterCardProps) {\n  const { dualTranslate } = useLanguage();\n  const { shouldBeBlurred } = useBlurCards();\n\n  const isBlurred = shouldBeBlurred(character.id);\n\n  const imageURL = character.id.replace(/-/g, '/');\n\n  return (\n    <>\n      <div className={clsx('q-character', className)} style={{ width: `${size}px` }}>\n        <span className=\"q-character-name\">\n          <DualTranslate>{character.name}</DualTranslate>\n        </span>\n        <Image\n          src={`${process.env.REACT_APP_TDI_IMAGES_URL}${imageURL}.jpg`}\n          width={size}\n          className={clsx('q-character-image', isBlurred && 'q-character-image--blur')}\n          fallback={`${PUBLIC_URL.IN_GAME}/w-no-image.jpg`}\n          alt={dualTranslate(character.name)}\n          preview={false}\n          title={dualTranslate(character.name)}\n        />\n      </div>\n      <ImageBlurButton cardId={character.id} />\n    </>\n  );\n}\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useDelayedMock } from 'hooks/useMock';\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useBooleanDictionary } from 'hooks/useBooleanDictionary';\n// Utils\nimport { mockSelectCharacters } from './utils/mock';\n// Components\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { TransparentButton } from 'components/buttons';\nimport { CharacterCard } from './components/CharacterCard';\nimport { CardHighlight } from 'components/metrics/CardHighlight';\n\ntype StepSelectCharactersProps = {\n  user: GamePlayer;\n  onSelectCharacters: GenericFunction;\n} & AnnouncementProps;\n\nexport function StepSelectCharacters({ user, announcement, onSelectCharacters }: StepSelectCharactersProps) {\n  const { isLoading } = useLoading();\n  const cardWidth = useCardWidth(12, 16, 100, 200);\n  const {\n    dict: selection,\n    updateDict: update,\n    length: count,\n    keys: selectedCharacters,\n  } = useBooleanDictionary({});\n\n  const availableCharacters = user.availableCharacters ?? [];\n\n  useDelayedMock(() => {\n    onSelectCharacters({ characters: mockSelectCharacters(availableCharacters) });\n  });\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title>\n        <Translate\n          pt={\n            <>\n              Selecione <CardHighlight>6</CardHighlight> cartas\n            </>\n          }\n          en={\n            <>\n              Select <CardHighlight>6</CardHighlight> cards\n            </>\n          }\n        />\n      </Title>\n\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Não queremos que você receba uma carta que não conheça, então das cartas abaixo, selecione 6\n              para entrar no jogo.\n            </>\n          }\n          en={\n            <>\n              We don't want a card you don't know to be assigned to you, so from the cards below, select 6 to\n              be in the game.\n            </>\n          }\n        />\n      </Instruction>\n\n      <Space className=\"space-container\" wrap>\n        {availableCharacters.map((character: ContenderCard) => (\n          <TransparentButton\n            key={character.id}\n            disabled={user.ready || isLoading}\n            onClick={() => update(character.id)}\n            active={selection[character.id]}\n          >\n            <CharacterCard size={cardWidth} character={character} />\n          </TransparentButton>\n        ))}\n      </Space>\n\n      <Space className=\"space-container\">\n        <Button\n          size=\"large\"\n          type=\"primary\"\n          onClick={() => onSelectCharacters({ characters: selectedCharacters })}\n          disabled={isLoading || user.ready || count !== 6}\n        >\n          <Translate pt={<>Enviar {count} cartas</>} en={<>Submit {count} cards</>} />\n        </Button>\n        <Button\n          size=\"large\"\n          onClick={() => onSelectCharacters({ characters: mockSelectCharacters(availableCharacters) })}\n          disabled={isLoading || user.ready}\n        >\n          <Translate pt={<>Escolha pra mim</>} en={<>Choose for me</>} />\n        </Button>\n      </Space>\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitCharactersAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { FilterIcon } from 'icons/FilterIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\nimport { StepSelectCharacters } from './StepSelectCharacters';\nimport { CardHighlight } from 'components/metrics/CardHighlight';\n\nexport function PhaseCharacterFiltering({ players, state, info }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, setStep } = useStep();\n\n  const onSelectCharacters = useOnSubmitCharactersAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<FilterIcon />}\n      title={<Translate pt=\"Quem você conhece?\" en=\"Who do you know?\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <Instruction>\n        <Translate\n          pt={\n            <>\n              Selecione <CardHighlight>6 cartas</CardHighlight> com personagens/pessoas que você conhece\n            </>\n          }\n          en={\n            <>\n              Select <CardHighlight>6 cards</CardHighlight> with characters/people you know\n            </>\n          }\n        />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.QUEM_SOU_EU.CHARACTER_FILTERING}>\n      <StepSwitcher step={step} conditions={[!user.isReady, !user.isReady, !user.isReady]} players={players}>\n        {/* Step 0 */}\n        <StepSelectCharacters\n          user={user}\n          onSelectCharacters={onSelectCharacters}\n          announcement={announcement}\n        />\n\n        <></>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","import { QUEM_SOU_EU_API } from 'services/adapters';\nimport { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\n\nexport function useOnSubmitCharactersAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: QUEM_SOU_EU_API.submitAction,\n    actionName: 'submit-characters',\n    onSuccess: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: translate('Ação submetida com sucesso', 'Action submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua ação',\n      'Oops, the application found an error while trying to submit your action'\n    ),\n  });\n\n  return (payload: SubmitCharactersPayload) => {\n    request({\n      action: 'SUBMIT_CHARACTERS',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitGlyphsAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: QUEM_SOU_EU_API.submitAction,\n    actionName: 'submit-glyphs',\n    onSuccess: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: translate('Ação submetida com sucesso', 'Action submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua ação',\n      'Oops, the application found an error while trying to submit your action'\n    ),\n  });\n\n  return (payload: SubmitGlyphsPayload) => {\n    request({\n      action: 'SUBMIT_GLYPHS',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitGuessesAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: QUEM_SOU_EU_API.submitAction,\n    actionName: 'submit-guesses',\n    onSuccess: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: translate('Ação submetida com sucesso', 'Action submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua ação',\n      'Oops, the application found an error while trying to submit your action'\n    ),\n  });\n\n  return (payload: SubmitGuessesPayload) => {\n    request({\n      action: 'SUBMIT_GUESSES',\n      ...payload,\n    });\n  };\n}\n","import { SEPARATOR } from 'utils/constants';\n\n/**\n * Creates a glyph reference dictionary where true means positive and false means negative\n * @param positive\n * @param negative\n * @returns\n */\nexport const prepareGlyphs = (\n  positive: BooleanDictionary,\n  negative: BooleanDictionary\n): BooleanDictionary => {\n  const dict: BooleanDictionary = {};\n  Object.keys(positive).forEach((key) => (dict[key] = true));\n  Object.keys(negative).forEach((key) => (dict[key] = false));\n\n  return dict;\n};\n\nexport const parseSelectedGlyphs = (glyphs: BooleanDictionary) => {\n  const positive: string[] = [];\n  const negative: string[] = [];\n\n  Object.keys(glyphs).forEach((id) => {\n    if (glyphs[id]) {\n      positive.push(id);\n    } else {\n      negative.push(id);\n    }\n  });\n\n  while (positive.length < 3) {\n    positive.push('');\n  }\n\n  while (negative.length < 3) {\n    negative.push('');\n  }\n\n  return [positive, negative];\n};\n\n/**\n * Get list of players on each voted character\n * @param players\n * @param votes\n * @returns\n */\nexport const getRibbons = (players: GamePlayers, votes: StringDictionary): Record<string, GamePlayer[]> => {\n  const votesDict: Record<string, GamePlayer[]> = {};\n\n  Object.keys(votes).forEach((playerEntry) => {\n    const playerId = playerEntry.split(SEPARATOR)[1];\n    const characterId = votes[playerEntry].split(SEPARATOR)[1];\n\n    if (votesDict[characterId] === undefined) {\n      votesDict[characterId] = [];\n    }\n\n    votesDict[characterId].push(players[playerId]);\n  });\n\n  return votesDict;\n};\n\n/**\n * Removes prefixes from votes\n * @param votes\n * @returns\n */\nexport const prepareGuesses = (votes: StringDictionary): StringDictionary => {\n  const result: StringDictionary = {};\n\n  Object.keys(votes).forEach((playerEntry) => {\n    const playerId = playerEntry.split(SEPARATOR)[1];\n    const characterId = votes[playerEntry].split(SEPARATOR)[1];\n\n    result[playerId] = characterId;\n  });\n\n  return result;\n};\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Space } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { CharacterCard } from './CharacterCard';\n\ntype TableProps = {\n  characters: Characters;\n  tableOrder: CardId[];\n  playerCharacterId: CardId;\n  showAll?: boolean;\n};\n\nexport function Table({ characters, playerCharacterId, tableOrder, showAll = true }: TableProps) {\n  const width = useCardWidth(8, 16, 150, 200);\n\n  const topKeys = tableOrder.slice(0, Math.floor(tableOrder.length / 2));\n  const bottomKeys = tableOrder.slice(Math.floor(tableOrder.length / 2));\n\n  if (!showAll) {\n    return (\n      <Space className=\"space-container q-table\">\n        <CharacterCard\n          character={characters[playerCharacterId]}\n          size={width}\n          className=\"q-character-player\"\n        />\n      </Space>\n    );\n  }\n\n  return (\n    <Space className=\"space-container q-table\" wrap>\n      <Space className=\"space-container\" wrap>\n        {topKeys.map((key) => (\n          <CharacterCard\n            character={characters[key]}\n            key={key}\n            size={width}\n            className={clsx(key === playerCharacterId && 'q-character-player')}\n          />\n        ))}\n      </Space>\n      <Space className=\"space-container\" wrap>\n        {bottomKeys.map((key) => (\n          <CharacterCard\n            character={characters[key]}\n            key={key}\n            size={width}\n            className={clsx(key === playerCharacterId && 'q-character-player')}\n          />\n        ))}\n      </Space>\n    </Space>\n  );\n}\n","// Icons\nimport { NoIcon } from 'icons/NoIcon';\nimport { YesIcon } from 'icons/YesIcon';\n// Components\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function PositiveHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<YesIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n\nexport function NegativeHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<NoIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","// Ant Design Resources\nimport { Button, Popover, Space, Tooltip } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useBooleanDictionary } from 'hooks/useBooleanDictionary';\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useDelayedMock } from 'hooks/useMock';\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { prepareGlyphs } from './utils/helpers';\nimport { mockGlyphs } from './utils/mock';\n// Icons\nimport { YesIcon } from 'icons/YesIcon';\nimport { NoIcon } from 'icons/NoIcon';\n// Components\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { TransparentButton } from 'components/buttons';\nimport { Table } from './components/Table';\nimport { GlyphCard } from 'components/cards/GlyphCard';\nimport { IconAvatar } from 'components/avatars';\nimport { NegativeHighlight, PositiveHighlight } from './components/Highlights';\n\ntype StepSelectGlyphsProps = {\n  user: GamePlayer;\n  onSelectGlyphs: GenericFunction;\n  characters: Characters;\n  tableOrder: CardId[];\n  roundType: 'SHOW' | 'HIDE';\n} & AnnouncementProps;\n\nconst SELECTIONS_PLACEHOLDER = [0, 1, 2];\n\nexport function StepSelectGlyphs({\n  user,\n  announcement,\n  onSelectGlyphs,\n  characters,\n  tableOrder,\n  roundType,\n}: StepSelectGlyphsProps) {\n  const { isLoading } = useLoading();\n  const { translate } = useLanguage();\n  const glyphWidth = useCardWidth(20, 16, 50, 75);\n  const selectedWidth = glyphWidth + 15;\n\n  const {\n    dict: positiveSelection,\n    updateDict: updatePositive,\n    keys: positiveSelections,\n  } = useBooleanDictionary({});\n\n  const {\n    dict: negativeSelection,\n    updateDict: updateNegative,\n    keys: negativeSelections,\n  } = useBooleanDictionary({});\n\n  const glyphs = user.glyphs ?? [];\n\n  useDelayedMock(() => {\n    onSelectGlyphs({ glyphs: mockGlyphs(glyphs) });\n  });\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title>\n        <Translate\n          pt={<>Descreva seu personagem com ícones</>}\n          en={<>Describe your character with glyphs</>}\n        />\n      </Title>\n\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Dos ícones abaixo, você pode selecionar até <PositiveHighlight>3</PositiveHighlight> positivos e\n              até <NegativeHighlight>3</NegativeHighlight> negativos.\n              <br /> Quando você clica em ícone, você determina se ele é relacionado ao seu personagem ou não.\n              <br />\n              <strong>A sua carta é a que tem a borda de bolinhas amarelas!</strong>\n            </>\n          }\n          en={\n            <>\n              From the glyphs below, you may select up to <PositiveHighlight>3</PositiveHighlight> positive\n              and <NegativeHighlight>3</NegativeHighlight> negative glyphs.\n              <br />\n              When you click on a glyph, you will determine if it's related or not to your character.\n              <br />\n              <strong>Your card is highlighted with the dotted yellow border!</strong>\n            </>\n          }\n        />\n        {roundType === 'SHOW' ? (\n          <Translate\n            pt={\n              <>\n                <br />\n                Você também pode ver todos os personagens abaixo caso queira evitar conflito com outros\n                jogadores.\n              </>\n            }\n            en={\n              <>\n                <br />\n                You can also take a look at all the characters for this round so you don't give clues that\n                match others.\n              </>\n            }\n          />\n        ) : (\n          <Translate\n            pt={\n              <>\n                <br />\n                De agora em diante, você vê apenas o seu personagem.\n              </>\n            }\n            en={\n              <>\n                <br />\n                From now on, you only see your own character.\n              </>\n            }\n          />\n        )}\n      </Instruction>\n\n      <Table\n        characters={characters}\n        playerCharacterId={user.character?.id}\n        tableOrder={tableOrder}\n        showAll={roundType === 'SHOW'}\n      />\n\n      <Space className=\"space-container q-selections\">\n        <div className=\"q-selections__section q-selections__section--positive\">\n          {SELECTIONS_PLACEHOLDER.map((entry) => {\n            const id = positiveSelections[entry];\n\n            return (\n              <div className=\"q-selections__positive\" key={`pos-${entry}-${id}`}>\n                <div className=\"q-selections__entry\">\n                  <IconAvatar icon={<YesIcon />} />\n                  {id !== undefined ? (\n                    <TransparentButton\n                      onClick={() => updatePositive(id)}\n                      title={translate('Remover', 'Remove')}\n                    >\n                      <Tooltip title={<Translate pt=\"Remover\" en=\"Remove\" />}>\n                        <GlyphCard width={selectedWidth} id={id} />\n                      </Tooltip>\n                    </TransparentButton>\n                  ) : (\n                    <div\n                      className=\"q-selections__no-glyph\"\n                      style={{ width: `${selectedWidth}px`, height: `${selectedWidth}px` }}\n                    />\n                  )}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"q-selections__section q-selections__section--negative\">\n          {SELECTIONS_PLACEHOLDER.map((entry) => {\n            const id = negativeSelections[entry];\n            return (\n              <div className=\"q-selections__positive\" key={`neg-${entry}-${id}`}>\n                <div className=\"q-selections__entry\">\n                  <IconAvatar icon={<NoIcon />} />\n                  {id !== undefined ? (\n                    <TransparentButton onClick={() => updateNegative(id)}>\n                      <Tooltip title={<Translate pt=\"Remover\" en=\"Remove\" />} trigger=\"hover\">\n                        <GlyphCard width={selectedWidth} id={id} />\n                      </Tooltip>\n                    </TransparentButton>\n                  ) : (\n                    <div\n                      className=\"q-selections__no-glyph\"\n                      style={{ width: `${selectedWidth}px`, height: `${selectedWidth}px` }}\n                    />\n                  )}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </Space>\n\n      <Space className=\"glyphs\" wrap>\n        {glyphs.map((glyphId: string) => (\n          <Popover\n            content={\n              <PopoverGlyph\n                id={glyphId}\n                updatePositive={updatePositive}\n                updateNegative={updateNegative}\n                disablePositive={positiveSelections.length === 3}\n                disableNegative={negativeSelections.length === 3}\n              />\n            }\n            title={<Translate pt=\"Positivo ou Negativo?\" en=\"Positive or Negative\" />}\n            trigger=\"click\"\n          >\n            <TransparentButton>\n              <GlyphCard width={glyphWidth} id={glyphId} />\n            </TransparentButton>\n          </Popover>\n        ))}\n      </Space>\n\n      <Space className=\"space-container\">\n        <Button\n          size=\"large\"\n          type=\"primary\"\n          onClick={() => onSelectGlyphs({ glyphs: prepareGlyphs(positiveSelection, negativeSelection) })}\n          disabled={\n            isLoading || user.ready || (positiveSelections.length < 1 && negativeSelections.length < 1)\n          }\n        >\n          <Translate pt={<>Enviar ícones</>} en={<>Submit glyphs</>} />\n        </Button>\n      </Space>\n    </Step>\n  );\n}\n\ntype PopoverGlyphProps = {\n  id: CardId;\n  updatePositive: GenericFunction;\n  updateNegative: GenericFunction;\n  disablePositive: boolean;\n  disableNegative: boolean;\n};\n\nfunction PopoverGlyph({\n  id,\n  updatePositive,\n  updateNegative,\n  disablePositive,\n  disableNegative,\n}: PopoverGlyphProps) {\n  return (\n    <Space>\n      <TransparentButton onClick={() => updatePositive(id)} disabled={disablePositive}>\n        <IconAvatar icon={<YesIcon />} size=\"large\" />\n      </TransparentButton>\n      <TransparentButton onClick={() => updateNegative(id)} disabled={disableNegative}>\n        <IconAvatar icon={<NoIcon />} size=\"large\" />\n      </TransparentButton>\n    </Space>\n  );\n}\n","// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\nimport { useOnSubmitGlyphsAPIRequest } from './utils/api-requests';\n// Icons\nimport { PlayerIconsIcon } from 'icons/PlayerIconsIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\nimport { StepSelectGlyphs } from './StepSelectGlyphs';\nimport { RoundAnnouncement } from 'components/round';\n\nexport function PhaseCharacterDescription({ players, state, info }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, goToNextStep, setStep } = useStep();\n\n  const onSelectGlyphs = useOnSubmitGlyphsAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<PlayerIconsIcon />}\n      title={<Translate pt=\"Descreva seu personagem com ícones\" en=\"Describe your character with glyphs\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <Instruction>\n        <Translate\n          pt={<>Selecione até 6 ícones que ajudem os outros jogadores a adivinhar o seu personagem</>}\n          en={<>Select up to 6 glyphs that would help other players to guess who your character is</>}\n        />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.QUEM_SOU_EU.CHARACTER_DESCRIPTION}>\n      <StepSwitcher step={step} conditions={[!user.isReady, !user.isReady, !user.isReady]} players={players}>\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state?.round}\n          onPressButton={goToNextStep}\n          buttonText=\" \"\n          time={5}\n          circleColor={info?.appearance?.color}\n        ></RoundAnnouncement>\n\n        {/* Step 0 */}\n        <StepSelectGlyphs\n          user={user}\n          onSelectGlyphs={onSelectGlyphs}\n          characters={state.characters}\n          tableOrder={state.tableOrder}\n          announcement={announcement}\n          roundType={state.roundType}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","import { Translate } from 'components/language';\nimport { PointsHighlight } from 'components/metrics/PointsHighlight';\n\nexport function ScoringRules({ currentRound }: { currentRound: number }) {\n  return (\n    <Translate\n      pt={\n        <>\n          Você ganha <PointsHighlight>{currentRound}</PointsHighlight>ponto para cada par que acertar e também{' '}\n          <PointsHighlight>{currentRound}</PointsHighlight>ponto para cada jogador que acertar o seu.\n        </>\n      }\n      en={\n        <>\n          You get <PointsHighlight>{currentRound}</PointsHighlight>point for each pair you get correctly and\n          also <PointsHighlight>{currentRound}</PointsHighlight>point for each player who gets your character\n          correctly\n        </>\n      }\n    />\n  );\n}\n","import { useMemo } from 'react';\n// Utils\nimport { parseSelectedGlyphs } from '../utils/helpers';\n// Icons\nimport { NoIcon } from 'icons/NoIcon';\nimport { YesIcon } from 'icons/YesIcon';\nimport { BoxCheckMarkIcon } from 'icons/BoxCheckMarkIcon';\n// Components\nimport { AvatarStrip, IconAvatar } from 'components/avatars';\nimport { GlyphCard } from 'components/cards/GlyphCard';\n\ntype PlayerGlyphsProps = {\n  player: GamePlayer;\n  glyphWidth: number;\n  done?: boolean;\n};\n\nexport function PlayerGlyphs({ player, glyphWidth, done }: PlayerGlyphsProps) {\n  const [positive, negative] = useMemo(\n    () => parseSelectedGlyphs(player.selectedGlyphs ?? {}),\n    [player.selectedGlyphs]\n  );\n\n  return (\n    <div className=\"q-player-glyphs\">\n      <AvatarStrip\n        player={player}\n        withName\n        className=\"q-player-glyphs__strip\"\n        icon={done ? <BoxCheckMarkIcon /> : undefined}\n      />\n      {positive.map((id, index) => {\n        return (\n          <div\n            className=\"q-player-glyphs__entry q-player-glyphs__entry--positive\"\n            key={`pos-${player.id}-${id}-${index}`}\n          >\n            <IconAvatar icon={<YesIcon />} size=\"small\" />\n            {Boolean(id) ? (\n              <GlyphCard width={glyphWidth} id={id} />\n            ) : (\n              <div\n                className=\"q-selections__no-glyph\"\n                style={{ width: `${glyphWidth}px`, height: `${glyphWidth}px` }}\n              />\n            )}\n          </div>\n        );\n      })}\n      {negative.map((id, index) => {\n        return (\n          <div\n            className=\"q-player-glyphs__entry q-player-glyphs__entry--negative\"\n            key={`neg-${player.id}-${id}-${index}`}\n          >\n            <IconAvatar icon={<NoIcon />} size=\"small\" />\n            {Boolean(id) ? (\n              <GlyphCard width={glyphWidth} id={id} />\n            ) : (\n              <div\n                className=\"q-selections__no-glyph\"\n                style={{ width: `${glyphWidth}px`, height: `${glyphWidth}px` }}\n              />\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { shuffle } from 'lodash';\nimport { useEffectOnce } from 'react-use';\nimport { useCallback, useState } from 'react';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useDelayedMock } from 'hooks/useMock';\nimport { useVotingMatch } from 'hooks/useVotingMatch';\n// Utils\nimport { getEntryId, sortPlayers } from 'utils/helpers';\nimport { getRibbons, prepareGuesses } from './utils/helpers';\n// Components\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { TransparentButton } from 'components/buttons';\nimport { CharacterCard } from './components/CharacterCard';\nimport { ScoringRules } from './components/RulesBlobs';\nimport { RibbonGroup } from 'components/ribbons';\nimport { PlayerGlyphs } from './components/PlayerGlyphs';\n\ntype StepGuessingProps = {\n  user: GamePlayer;\n  players: GamePlayers;\n  onSubmitGuesses: GenericFunction;\n  characters: Characters;\n  tableOrder: CardId[];\n  round: GameRound;\n} & AnnouncementProps;\n\nexport function StepGuessing({\n  user,\n  announcement,\n  onSubmitGuesses,\n  players,\n  characters,\n  tableOrder,\n  round,\n}: StepGuessingProps) {\n  const { isLoading } = useLoading();\n  const glyphWidth = useCardWidth(20, 16, 45, 60);\n  const characterWidth = useCardWidth(8, 16, 120, 200);\n  const { votes, setVotes, activateItem, isVotingComplete, isItemActive } = useVotingMatch(\n    'player',\n    true,\n    Object.keys(players).length,\n    {}\n  );\n  const [choseRandomly, setChoseRandomly] = useState(false);\n\n  const onGuessForMe = () => {\n    setChoseRandomly(true);\n    const usedPlayers = Object.keys(votes);\n    const usedCharacters = Object.values(votes);\n    const playerKeys = Object.keys(players)\n      .map((playerId: string) => getEntryId(['player', playerId]))\n      .filter((key: string) => !usedPlayers.includes(key));\n    const characterKeys = shuffle(\n      Object.keys(characters)\n        .map((cardId: CardId) => getEntryId(['char', cardId]))\n        .filter((key: string) => !usedCharacters.includes(key))\n    );\n    const newVotes = { ...votes };\n    playerKeys.forEach((playerKey: string, index: number) => {\n      if (!newVotes[playerKey]) {\n        newVotes[playerKey] = characterKeys[index];\n      }\n    });\n    setVotes(newVotes);\n    return newVotes;\n  };\n\n  const selectOwnCard = useCallback(() => {\n    if (user.character) {\n      return { [getEntryId(['player', user.id])]: getEntryId(['char', user.character.id]) };\n    }\n  }, [user]);\n\n  // Dev Mocks\n  useDelayedMock(() => {\n    onSubmitGuesses({ guesses: prepareGuesses(onGuessForMe()), choseRandomly });\n  });\n\n  // Auto-select the players own drawing and word\n  useEffectOnce(() => {\n    const selection = selectOwnCard();\n    if (selection) {\n      setVotes((s: any) => ({ ...s, ...selection }));\n    }\n  });\n\n  const ribbons = getRibbons(players, votes);\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title>\n        <Translate pt={<>Pareie os cada personagem com um jogador</>} en={<>Pair player and characters</>} />\n      </Title>\n\n      <Instruction contained>\n        <Translate\n          pt={<>De acordo com a seleção de ícones de cada jogador, tente adivinhar todos os pares.</>}\n          en={<>Based on each player's glyphs selection, try to guess the pairs.</>}\n        />\n        <br />\n        <ScoringRules currentRound={round.current} />\n      </Instruction>\n\n      <div className=\"q-voting-container\">\n        <div className=\"q-voting-characters\">\n          {tableOrder.map((cardId) => {\n            const entryId = getEntryId(['char', cardId]);\n            const labels = ribbons[cardId] ?? [];\n\n            return (\n              <TransparentButton\n                key={cardId}\n                onClick={() => activateItem(entryId)}\n                active={isItemActive(entryId)}\n                className=\"q-voting-characters__button\"\n              >\n                <RibbonGroup labels={labels} />\n                <CharacterCard\n                  character={characters[cardId]}\n                  size={characterWidth}\n                  className={clsx(cardId === 'a' && 'q-character-player')}\n                />\n              </TransparentButton>\n            );\n          })}\n        </div>\n\n        <div className=\"q-players-glyphs\">\n          {sortPlayers(players).map((player) => {\n            const entryId = getEntryId(['player', player.id]);\n\n            return (\n              <TransparentButton\n                key={`glyphs-for-${player.id}`}\n                onClick={() => activateItem(entryId)}\n                active={isItemActive(entryId)}\n              >\n                <PlayerGlyphs player={player} glyphWidth={glyphWidth} done={Boolean(votes[entryId])} />\n              </TransparentButton>\n            );\n          })}\n        </div>\n      </div>\n\n      <Space className=\"space-container\">\n        <Button\n          size=\"large\"\n          type=\"primary\"\n          onClick={() => onSubmitGuesses({ guesses: prepareGuesses(votes), choseRandomly })}\n          disabled={isLoading || user.ready || !isVotingComplete}\n        >\n          <Translate pt={<>Enviar pares</>} en={<>Submit guesses</>} />\n        </Button>\n        <Button size=\"large\" onClick={() => onGuessForMe()} disabled={isLoading || user.ready}>\n          <Translate pt={<>Desistir</>} en={<>Guess for me</>} />\n        </Button>\n      </Space>\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitGuessesAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { EvaluateIcon } from 'icons/EvaluateIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\nimport { StepGuessing } from './StepGuessing';\nimport { ScoringRules } from './components/RulesBlobs';\n\nexport function PhaseGuessing({ players, state, info }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, setStep } = useStep();\n\n  const onSubmitGuesses = useOnSubmitGuessesAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<EvaluateIcon />}\n      title={\n        <Translate pt=\"Pareie os personagens e símbolos\" en=\"Pair characters with the players' glyphs\" />\n      }\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <Instruction>\n        <ScoringRules currentRound={state.round.current} />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.QUEM_SOU_EU.GUESSING}>\n      <StepSwitcher step={step} conditions={[!user.isReady, !user.isReady, !user.isReady]} players={players}>\n        {/* Step 0 */}\n        <StepGuessing\n          user={user}\n          onSubmitGuesses={onSubmitGuesses}\n          characters={state.characters}\n          tableOrder={state.tableOrder}\n          players={players}\n          announcement={announcement}\n          round={state.round}\n        />\n\n        {/* Step 1 */}\n        <></>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","import { orderBy } from 'lodash';\n// Ant Design Resources\nimport { Avatar as AntAvatar, Space, Typography } from 'antd';\nimport { CrownFilled, MessageFilled } from '@ant-design/icons';\n// Utils\nimport { getPlayersFromIds } from 'utils/helpers';\n// Icons\nimport { GarbageIcon } from 'icons/GarbageIcon';\n// Components\nimport { Avatar, IconAvatar } from 'components/avatars';\nimport { DualTranslate, Translate } from 'components/language';\nimport { StarPoints } from 'components/points';\n\ntype GalleryGuessesProps = {\n  players: GamePlayers;\n  playersSay: Record<CardId, PlayerId[]>;\n  playersPoints: NumberDictionary;\n  characters: Characters;\n  currentColor: string;\n  currentPlayer: GamePlayer;\n  round: GameRound;\n};\n\nexport function GalleryGuesses({\n  players,\n  playersSay,\n  playersPoints,\n  characters,\n  currentColor,\n  currentPlayer,\n  round,\n}: GalleryGuessesProps) {\n  const entries = orderBy(\n    Object.entries(playersSay).map(([cardId, playersIds]) => {\n      return {\n        cardId,\n        character: characters[cardId],\n        playersIds,\n        count: playersIds.length,\n        isCorrect: currentPlayer.character.id === cardId,\n      };\n    }),\n    ['isCorrect', 'count', 'card.text'],\n    ['desc', 'desc', 'asc']\n  );\n  const correctGuesses = playersSay[currentPlayer.character.id];\n\n  return (\n    <Space className=\"q-gallery__info-container\" direction=\"vertical\">\n      <Space className=\"q-gallery__votes\" direction=\"vertical\">\n        <div className=\"q-gallery__label\">\n          <Translate pt=\"Jogadores votaram\" en=\"Players voted\" />\n        </div>\n        {entries.map((entry, index) => {\n          return (\n            <div key={`guess-${entry.cardId}-${index}`} className=\"q-gallery__guess\">\n              <div\n                className=\"q-gallery__speech-bubble\"\n                style={entry.isCorrect ? { backgroundColor: currentColor, color: 'white' } : {}}\n              >\n                {entry.isCorrect ? (\n                  <CrownFilled className=\"q-gallery__speech-bubble-icon\" style={{ color: 'white' }} />\n                ) : (\n                  <MessageFilled className=\"q-gallery__speech-bubble-icon\" />\n                )}\n                <DualTranslate>{entry.character.name}</DualTranslate>\n              </div>\n              <div className=\"q-gallery__players\">\n                <AntAvatar.Group>\n                  {entry.playersIds.map((playerId) => (\n                    <Avatar\n                      id={players[playerId].avatarId}\n                      key={`guess-avatar-${players[playerId].avatarId}`}\n                    />\n                  ))}\n                </AntAvatar.Group>\n                <span className=\"q-gallery__players-names\">\n                  {getPlayersFromIds(entry.playersIds, players, true).join(', ')}\n                </span>\n              </div>\n            </div>\n          );\n        })}\n      </Space>\n\n      <Space className=\"q-gallery__votes\" direction=\"vertical\">\n        <div className=\"q-gallery__label\">\n          <Translate pt=\"Pontos\" en=\"Points\" />\n        </div>\n\n        {correctGuesses.length ? (\n          <>\n            <div className=\"q-gallery__players\">\n              <AntAvatar.Group>\n                {correctGuesses.map((playerId) => {\n                  return <Avatar key={`correct-guess-avatar-${playerId}`} id={players[playerId].avatarId} />;\n                })}\n              </AntAvatar.Group>\n              <StarPoints quantity={round.current} keyPrefix={`guessers-points-${currentPlayer.id}`} />\n              <span className=\"q-gallery__players-names\">\n                {getPlayersFromIds(correctGuesses, players, true).join(', ')}\n              </span>\n            </div>\n            <div className=\"q-gallery__player-points\">\n              <Avatar id={currentPlayer.avatarId} />{' '}\n              <StarPoints\n                quantity={playersPoints?.[currentPlayer.id]}\n                keyPrefix={`artist-points-${currentPlayer.id}`}\n              />{' '}\n              <span className=\"q-gallery__players-names\">{currentPlayer.name}</span>\n            </div>\n          </>\n        ) : (\n          <Typography.Text className=\"q-gallery__no-wins\">\n            <IconAvatar icon={<GarbageIcon />} size=\"large\" shape=\"square\" />\n            <Translate\n              pt=\"Nossa, ninguém acertou. Esses ícones devem ter sido uma bosta heim.\"\n              en=\"Wow, nobody got it. You must have chosen terrible glyphs. Shame...\"\n            />\n          </Typography.Text>\n        )}\n      </Space>\n    </Space>\n  );\n}\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Utils\nimport { PAGE_DURATION } from './utils/constants';\nimport { getAvatarColorById } from 'utils/helpers';\n// Components\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\nimport { PopoverRule } from 'components/rules';\nimport { SlideShow } from 'components/slide-show';\nimport { ScoringRules } from './components/RulesBlobs';\nimport { AvatarName } from 'components/avatars';\nimport { PlayerGlyphs } from './components/PlayerGlyphs';\nimport { CharacterCard } from './components/CharacterCard';\nimport { GalleryGuesses } from './components/GalleryGuesses';\n\ntype StepGalleryProps = {\n  players: GamePlayers;\n  characters: Characters;\n  gallery: GalleryEntry[];\n  activeIndex: number;\n  setActiveIndex: GenericFunction;\n  setStep: GenericFunction;\n  isFirstGalleryRunThrough: boolean;\n  round: GameRound;\n};\n\nexport function StepGallery({\n  players,\n  gallery,\n  characters,\n  activeIndex,\n  setActiveIndex,\n  setStep,\n  isFirstGalleryRunThrough,\n  round,\n}: StepGalleryProps) {\n  useTemporarilyHidePlayersBar();\n  const glyphWidth = useCardWidth(20, 16, 45, 60);\n  const characterWidth = useCardWidth(8, 16, 120, 200);\n  const { playerId, characterId, playersPoints, playersSay } = gallery[activeIndex];\n\n  const currentPlayer = players[playerId];\n  const currentColor = getAvatarColorById(currentPlayer.avatarId);\n\n  return (\n    <Step className=\"l-step-album\">\n      <Title>\n        <Translate pt=\"Galeria\" en=\"Gallery\" />\n      </Title>\n\n      <PopoverRule content={<ScoringRules currentRound={round.current} />} />\n\n      <SlideShow\n        players={players}\n        length={gallery.length}\n        activeIndex={activeIndex}\n        setActiveIndex={setActiveIndex}\n        setStep={setStep}\n        disableControls={isFirstGalleryRunThrough}\n        barColor={currentColor}\n        windowDuration={PAGE_DURATION}\n        leftClassName=\"q-gallery__result\"\n        rightClassName=\"q-gallery__info\"\n      >\n        <div className=\"q-gallery__result-container\">\n          <div className=\"q-gallery__player\" style={{ backgroundColor: currentColor }}>\n            <AvatarName player={currentPlayer} size=\"large\" />\n          </div>\n          <Space className=\"space-container\" direction=\"vertical\">\n            <CharacterCard character={characters[characterId]} size={characterWidth} />\n            <PlayerGlyphs player={currentPlayer} glyphWidth={glyphWidth} />\n          </Space>\n        </div>\n\n        <GalleryGuesses\n          players={players}\n          playersSay={playersSay}\n          playersPoints={playersPoints}\n          characters={characters}\n          currentColor={currentColor}\n          currentPlayer={currentPlayer}\n          round={round}\n        />\n      </SlideShow>\n    </Step>\n  );\n}\n","export const PAGE_DURATION = 10;\n","// Ant Design Resources\nimport { Button } from 'antd';\nimport { PictureOutlined } from '@ant-design/icons';\n// Components\nimport { RoundsLeftInstruction } from 'components/text';\nimport { StepRankingWrapper } from 'components/ranking';\nimport { PopoverRule } from 'components/rules';\nimport { Translate } from 'components/language';\nimport { VIPNextPhaseButton } from 'components/vip';\nimport { ScoringRules } from './components/RulesBlobs';\n\ntype StepRankingProps = {\n  players: GamePlayers;\n  ranking: GameRanking;\n  round: GameRound;\n  goToPreviousStep: GenericFunction;\n  setActiveIndex: GenericFunction;\n};\n\nexport function StepRanking({ players, ranking, round, goToPreviousStep, setActiveIndex }: StepRankingProps) {\n  return (\n    <StepRankingWrapper\n      players={players}\n      ranking={ranking}\n      gainedPointsDescriptions={[\n        <Translate pt=\"Votos corretos\" en=\"Correct guesses\" />,\n        <Translate\n          pt=\"Votos corretos em seu personagem por outros jogadores\"\n          en=\"Correct guesses on your character by other players\"\n        />,\n      ]}\n    >\n      <PopoverRule content={<ScoringRules currentRound={round.current} />} />\n\n      <RoundsLeftInstruction round={round} />\n\n      <Button\n        size=\"large\"\n        onClick={() => {\n          goToPreviousStep();\n          setActiveIndex(0);\n        }}\n        icon={<PictureOutlined />}\n      >\n        <Translate pt=\"Ver Galeria Novamente\" en=\"See Gallery Again\" />\n      </Button>\n\n      <VIPNextPhaseButton round={round} />\n    </StepRankingWrapper>\n  );\n}\n","// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useSlideShow } from 'hooks/useSlideShow';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { MirrorIcon } from 'icons/MirrorIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\nimport { ScoringRules } from './components/RulesBlobs';\nimport { StepGallery } from './StepGallery';\nimport { StepRanking } from './StepRanking';\n\nexport function PhaseResults({ players, state, info }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, setStep, goToPreviousStep, goToNextStep } = useStep();\n  const { activeIndex, setActiveIndex, isFirstGalleryRunThrough } = useSlideShow(state.gallery?.length ?? 1);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.QUEM_SOU_EU.RESULTS}>\n      <StepSwitcher step={step} conditions={[!user.isReady, !user.isReady, !user.isReady]} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<MirrorIcon />}\n          title={<Translate pt=\"Resultado\" en=\"Results\" />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          unskippable\n          type=\"block\"\n        >\n          <Instruction>\n            <ScoringRules currentRound={state.round.current} />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepGallery\n          players={players}\n          gallery={state.gallery}\n          characters={state.characters}\n          activeIndex={activeIndex}\n          setActiveIndex={setActiveIndex}\n          setStep={setStep}\n          isFirstGalleryRunThrough={isFirstGalleryRunThrough}\n          round={state.round}\n        />\n\n        {/* Step 2 */}\n        <StepRanking\n          players={players}\n          ranking={state.ranking}\n          round={state.round}\n          goToPreviousStep={goToPreviousStep}\n          setActiveIndex={setActiveIndex}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","import { useMemo } from 'react';\n// Utils\nimport { parseSelectedGlyphs } from '../utils/helpers';\n// Icons\nimport { NoIcon } from 'icons/NoIcon';\nimport { YesIcon } from 'icons/YesIcon';\n// Components\nimport { AvatarStrip, IconAvatar } from 'components/avatars';\nimport { GlyphCard } from 'components/cards/GlyphCard';\nimport { CharacterCard } from './CharacterCard';\n\ntype FinalCharacterProps = {\n  players: GamePlayers;\n  character: FinalCharacter;\n  glyphWidth: number;\n};\n\nexport function FinalCharacter({ players, character, glyphWidth }: FinalCharacterProps) {\n  const [positive, negative] = useMemo(() => parseSelectedGlyphs(character.glyphs ?? {}), [character.glyphs]);\n\n  return (\n    <div className=\"q-player-glyphs q-final-character\">\n      <AvatarStrip player={players[character.playerId]} withName className=\"q-player-glyphs__strip\" />\n      <CharacterCard size={100} character={character} />\n\n      {positive.map((id, index) => {\n        return (\n          <div\n            className=\"q-player-glyphs__entry q-player-glyphs__entry--positive\"\n            key={`pos-${character.id}-${id}-${index}`}\n          >\n            <IconAvatar icon={<YesIcon />} size=\"small\" />\n            {Boolean(id) ? (\n              <GlyphCard width={glyphWidth} id={id} />\n            ) : (\n              <div\n                className=\"q-selections__no-glyph\"\n                style={{ width: `${glyphWidth}px`, height: `${glyphWidth}px` }}\n              />\n            )}\n          </div>\n        );\n      })}\n      {negative.map((id, index) => {\n        return (\n          <div\n            className=\"q-player-glyphs__entry q-player-glyphs__entry--negative\"\n            key={`neg-${character.id}-${id}-${index}`}\n          >\n            <IconAvatar icon={<NoIcon />} size=\"small\" />\n            {Boolean(id) ? (\n              <GlyphCard width={glyphWidth} id={id} />\n            ) : (\n              <div\n                className=\"q-selections__no-glyph\"\n                style={{ width: `${glyphWidth}px`, height: `${glyphWidth}px` }}\n              />\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import { orderBy } from 'lodash';\n// Ant Design Resources\nimport { Space } from 'antd';\n// Utils\nimport { achievementsReference } from './utils/achievements';\n// Icons\nimport { TrophyIcon } from 'icons/TrophyIcon';\n// Components\nimport { GameOverWrapper } from 'components/game-over';\nimport { Achievements } from 'components/general/Achievements';\nimport { FinalCharacter } from './components/FinalCharacter';\n\nfunction PhaseGameOver({ state, players, info, meta }: PhaseProps) {\n  return (\n    <GameOverWrapper info={info} state={state} players={players} announcementIcon={<TrophyIcon />}>\n      <Achievements players={players} achievements={state.achievements} reference={achievementsReference} />\n\n      <Space className=\"space-container\" wrap>\n        {orderBy(state.gallery, `name.${meta.language}`).map((entry: FinalCharacter) => (\n          <FinalCharacter players={players} character={entry} glyphWidth={30} key={entry.id} />\n        ))}\n      </Space>\n    </GameOverWrapper>\n  );\n}\n\nexport default PhaseGameOver;\n","import { ConfigProvider } from 'antd';\n// Constants\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport { LoadingPage } from 'components/loaders';\nimport { PhaseCharacterFiltering } from './PhaseCharacterFiltering';\nimport { PhaseCharacterDescription } from './PhaseCharacterDescription';\nimport { PhaseGuessing } from './PhaseGuessing';\nimport { PhaseResults } from './PhaseResults';\nimport PhaseGameOver from './PhaseGameOver';\n// Sass\nimport './quem-sou-eu.scss';\n\nfunction getActiveComponent(state: GameState) {\n  // If phase is not defined, it is likely that the game is still loading\n  if (state && !state.phase) return LoadingPage;\n\n  switch (state.phase) {\n    case PHASES.DEFAULT.LOBBY:\n      return PhaseLobby;\n    case PHASES.DEFAULT.RULES:\n      return PhaseRules;\n    case PHASES.DEFAULT.SETUP:\n      return PhaseSetup;\n    case PHASES.QUEM_SOU_EU.CHARACTER_FILTERING:\n      return PhaseCharacterFiltering;\n    case PHASES.QUEM_SOU_EU.CHARACTER_DESCRIPTION:\n      return PhaseCharacterDescription;\n    case PHASES.QUEM_SOU_EU.GUESSING:\n      return PhaseGuessing;\n    case PHASES.QUEM_SOU_EU.RESULTS:\n      return PhaseResults;\n    case PHASES.DEFAULT.GAME_OVER:\n      return PhaseGameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionQuemSouEu() {\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorPrimary: THEME_COLORS.DARK_BLUE,\n          colorLink: THEME_COLORS.DARK_BLUE,\n        },\n      }}\n    >\n      <Session gameCollection={GAME_COLLECTION.QUEM_SOU_EU} getActiveComponent={getActiveComponent} />\n    </ConfigProvider>\n  );\n}\n\nexport default SessionQuemSouEu;\n","const ACHIEVEMENTS = {\n  MOST_GLYPHS: 'MOST_GLYPHS',\n  LEAST_GLYPHS: 'LEAST_GLYPHS',\n  MOST_POSITIVE: 'MOST_POSITIVE',\n  LEAST_POSITIVE: 'LEAST_POSITIVE',\n  MOST_NEGATIVE: 'MOST_NEGATIVE',\n  LEAST_NEGATIVE: 'LEAST_NEGATIVE',\n  SINGLE_ICON: 'SINGLE_ICON',\n  TABLE_VOTES: 'TABLE_VOTES',\n  CHOOSE_FOR_ME: 'CHOOSE_FOR_ME',\n};\n\nexport const achievementsReference: AchievementReference = {\n  [ACHIEVEMENTS.MOST_GLYPHS]: {\n    icon: 'arrow-up',\n    title: {\n      pt: 'Melhor Uso dos Ícones',\n      en: 'Best Glyph User',\n    },\n    description: {\n      pt: 'Usou o maior número de ícones durante o jogo',\n      en: 'Used the most glyphs during the game',\n    },\n  },\n  [ACHIEVEMENTS.LEAST_GLYPHS]: {\n    icon: 'arrow-down',\n    title: {\n      pt: 'Mais Sucinto',\n      en: 'Most Succinct',\n    },\n    description: {\n      pt: 'Usou o menor número de ícones durante o jogo',\n      en: 'Used the fewest glyphs during the game',\n    },\n  },\n  [ACHIEVEMENTS.MOST_POSITIVE]: {\n    icon: 'thumbs-up',\n    title: {\n      pt: 'Mais Positivo',\n      en: 'Most Positive',\n    },\n    description: {\n      pt: 'Usou mais ícones no lado positivo',\n      en: 'Used the most glyphs on the positive side',\n    },\n  },\n  [ACHIEVEMENTS.LEAST_POSITIVE]: {\n    icon: 'arrow-left',\n    title: {\n      pt: 'Menos Positivo',\n      en: 'Least Positive',\n    },\n    description: {\n      pt: 'Usou menos ícones no lado positivo',\n      en: 'Used the least glyphs on the positive side',\n    },\n  },\n  [ACHIEVEMENTS.MOST_NEGATIVE]: {\n    icon: 'thumbs-down',\n    title: {\n      pt: 'Mais Negativo',\n      en: 'Most Negative',\n    },\n    description: {\n      pt: 'Usou mais ícones no lado negativo',\n      en: 'Used the most glyphs on the negative side',\n    },\n  },\n  [ACHIEVEMENTS.LEAST_NEGATIVE]: {\n    icon: 'arrow-right',\n    title: {\n      pt: 'Menos Negativo',\n      en: 'Least Negative',\n    },\n    description: {\n      pt: 'Usou menos ícones no lado negativo',\n      en: 'Used the least glyphs on the negative side',\n    },\n  },\n  [ACHIEVEMENTS.SINGLE_ICON]: {\n    icon: 'one',\n    title: {\n      pt: 'Mais Único',\n      en: 'Most Unique',\n    },\n    description: {\n      pt: 'Usou apenas um ícone mais vezes',\n      en: 'Used a single icon most times',\n    },\n  },\n  [ACHIEVEMENTS.TABLE_VOTES]: {\n    icon: 'table',\n    title: {\n      pt: 'Melhor Votador Pra Mesa',\n      en: 'Best Table Voter',\n    },\n    description: {\n      pt: 'Votou nas cartas extras que não eram de nenhum jogador mais vezes',\n      en: \"Voted for extra cards that didn't belong to any player the most\",\n    },\n  },\n  [ACHIEVEMENTS.CHOOSE_FOR_ME]: {\n    icon: 'dice',\n    title: {\n      pt: 'Menos Brasileiro',\n      en: 'The Shirker',\n    },\n    description: {\n      pt: 'Apertou o botão Chutar Restantes mais vezes',\n      en: \"Pressed 'Guess for me' the most\",\n    },\n  },\n};\n\nexport default achievementsReference;\n","import { Dispatch, useState } from 'react';\n\ntype UseBooleanDictionaryReturnValue = {\n  /**\n   * The dictionary\n   */\n  dict: BooleanDictionary;\n  /**\n   * Set the dictionary\n   */\n  setDict: Dispatch<React.SetStateAction<BooleanDictionary>>;\n  /**\n   * Add or remove an entry from the dictionary\n   * @param key - The key to add or remove\n   */\n  updateDict: (key: string) => void;\n  /**\n   * Reset the dictionary to the initial state\n   */\n  reset: () => void;\n  /**\n   * The number of entries in the dictionary\n   */\n  length: number;\n  /**\n   * The list of keys in the dictionary\n   */\n  keys: string[];\n};\n\n/**\n * A dictionary of booleans\n * @param initialState - The initial state, usually an empty object\n * @param validation - A function to validate if an entry can be added to the dictionary\n * @returns - A dictionary of booleans and its functions\n */\nexport function useBooleanDictionary(\n  initialState: BooleanDictionary,\n  validation?: BooleanFunction\n): UseBooleanDictionaryReturnValue {\n  const [dict, setDict] = useState(initialState);\n\n  const updateDict = (key: string) => {\n    const isValid = !validation || validation(dict);\n    if (!dict[key] && isValid) {\n      setDict((s) => ({\n        ...s,\n        [key]: true,\n      }));\n    } else {\n      const dictCopy = { ...dict };\n      delete dictCopy[key];\n      setDict(dictCopy);\n    }\n  };\n\n  const reset = () => setDict(initialState);\n\n  const keys = Object.keys(dict);\n\n  return {\n    dict,\n    setDict,\n    updateDict,\n    reset,\n    keys,\n    length: keys.length,\n  };\n}\n","export function BoxCheckMarkIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#69bb69\"\n        d=\"M473.2 481.1H38.8a31.28 31.28 0 01-31.3-31.3V45.2A37.73 37.73 0 0145.2 7.5h421.6a37.73 37.73 0 0137.7 37.7v404.6a31.28 31.28 0 01-31.3 31.3z\"\n      ></path>\n      <path\n        fill=\"#53b652\"\n        d=\"M504.5 45.2v404.6a31.28 31.28 0 01-31.3 31.3H452a31.28 31.28 0 0031.3-31.3V45.2a37.73 37.73 0 00-37.7-37.7h21.1a37.75 37.75 0 0137.8 37.7z\"\n      ></path>\n      <path\n        fill=\"#69bb69\"\n        d=\"M434.7 436.5H77.3a25.65 25.65 0 01-25.6-25.6V82.8A30.81 30.81 0 0182.5 52h347.1a30.81 30.81 0 0130.8 30.8v328.1a25.73 25.73 0 01-25.7 25.6z\"\n      ></path>\n      <path\n        fill=\"#53b652\"\n        d=\"M429.5 52.1h-27.4a30.81 30.81 0 0130.8 30.8V411a25.65 25.65 0 01-25.6 25.6h27.4a25.65 25.65 0 0025.6-25.6V82.8a30.73 30.73 0 00-30.8-30.7z\"\n      ></path>\n      <path d=\"M512 45.2C512 21.1 492.1 0 466.8 0H45.2C20.7-.1.1 20.1 0 45.2v404.6c0 20.5 17 38.8 38.8 38.8h357.4a7.5 7.5 0 000-15H38.8a24.41 24.41 0 01-11.4-2.9l33.1-31.3a33.05 33.05 0 0016.8 4.6h357.4a33.05 33.05 0 0016.8-4.6l33.1 31.3a23.28 23.28 0 01-11.4 2.9h-42a7.5 7.5 0 000 15h42c20.9.1 38.7-17.2 38.8-38.8zM466.8 15a29.94 29.94 0 0116 4.6l-32.8 31a37.88 37.88 0 00-20.5-6h-347a37.63 37.63 0 00-20.5 6l-32.8-31a29.94 29.94 0 0116-4.6zM15 449.8V45.2a30.62 30.62 0 013.8-14.7L51.1 61a38.48 38.48 0 00-6.9 21.9V411a32.94 32.94 0 005.4 18.1l-32.4 30.7a24.32 24.32 0 01-2.2-10zM77.3 429a18.1 18.1 0 01-18.1-18.1V82.8a23.32 23.32 0 0123.3-23.3h347.1a23.32 23.32 0 0123.3 23.3v22.5a7.5 7.5 0 0015 0V82.8a38.48 38.48 0 00-6.9-21.9l32.3-30.5a30.62 30.62 0 013.8 14.7v404.6a23.51 23.51 0 01-2.2 9.9l-32.4-30.7a32.94 32.94 0 005.4-18.1V141.6a7.5 7.5 0 00-15 0V411a18.1 18.1 0 01-18.1 18.1z\"></path>\n      <path\n        fill=\"#ffeee6\"\n        d=\"M216.9 341.4a36 36 0 01-25.4-10.5l-44.2-44.2a35.921 35.921 0 0150.8-50.8l18.7 18.7 96.9-96.9a35.921 35.921 0 1150.8 50.8L242.3 330.8a35.54 35.54 0 01-25.4 10.6z\"\n      ></path>\n      <path d=\"M329.4 228.2a11.03 11.03 0 0015.6 15.6l27.5-27.5a47 47 0 00-66.4-66.4L217 239l-11-11a47 47 0 10-66.4 66.4l44.2 44.2a47.08 47.08 0 0066.4 0l57.2-57.2a11.03 11.03 0 10-15.6-15.6L234.6 323a24.87 24.87 0 01-35.2 0l-44.2-44.2a25 25 0 0135.3-35.3l18.7 18.7a11 11 0 007.8 3.2 11.4 11.4 0 007.8-3.2l96.9-96.9a25 25 0 1135.3 35.3z\"></path>\n    </svg>\n  );\n}\n","export function FilterIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffe17d\"\n        d=\"M215.92 304.64v191.83a8 8 0 0011.6 7.17l59.7-29.85a16 16 0 008.86-14.34V304.64a24.06 24.06 0 015.41-15.2L467 86.28a24.08 24.08 0 005.4-15.19V23.53a16 16 0 00-16-16H55.6a16 16 0 00-16 16v47.56A24.08 24.08 0 0045 86.28l165.51 203.17a24 24 0 015.41 15.19z\"\n      ></path>\n      <path\n        fill=\"#ffd164\"\n        d=\"M400 71.63H191.87V7.5H55.6a16 16 0 00-16 16v47.59A24.08 24.08 0 0045 86.28l165.51 203.16a24 24 0 015.41 15.2v191.83a8 8 0 0011.6 7.17l16.6-8.3V296.08H272L410.68 91.76A12.9 12.9 0 00400 71.63z\"\n      ></path>\n      <path\n        fill=\"#ffc350\"\n        d=\"M143.77 71.63H39.61A24.09 24.09 0 0045 86.28l165.52 203.16a24 24 0 013.78 6.64H232z\"\n      ></path>\n      <path d=\"M456.4 0H55.6a23.56 23.56 0 00-23.53 23.53v47.56A31.67 31.67 0 0039.16 91L204.7 294.18a16.61 16.61 0 013.72 10.46v191.83a15.49 15.49 0 0022.45 13.88l59.7-29.85a23.41 23.41 0 0013-21.05V304.64a16.61 16.61 0 013.72-10.46L472.84 91a31.67 31.67 0 007.09-19.93V23.53A23.56 23.56 0 00456.4 0zM288.58 459.45a8.48 8.48 0 01-4.72 7.63l-59.69 29.85a.46.46 0 01-.51 0 .45.45 0 01-.24-.44V303.58h65.2v155.87zm7.09-174.74a32.21 32.21 0 00-2.69 3.87H219a31.1 31.1 0 00-2.69-3.87L50.79 81.54a16.72 16.72 0 01-1.63-2.41h22.48a7.5 7.5 0 000-15H47.07v-40.6A8.54 8.54 0 0155.6 15h400.8a8.54 8.54 0 018.53 8.53v40.6h-24.56a7.5 7.5 0 000 15h22.48a17 17 0 01-1.63 2.41z\"></path>\n      <path d=\"M408.3 64.13H103.69a7.5 7.5 0 000 15H408.3a7.5 7.5 0 000-15z\"></path>\n    </svg>\n  );\n}\n","export function GarbageIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#f7f3f1\"\n        d=\"M199.02 408.89h-19.67a5 5 0 01-5-5V290.5a5 5 0 015-5h19.67a5 5 0 015 5v113.4a5 5 0 01-5 5z\"\n      ></path>\n      <path\n        fill=\"#e38523\"\n        d=\"M411.84 215.02c-1.39-9.14-9.04-16.98-18.13-18.6-9.15-1.62-18.34 3.41-23.99 10.73a5.25 5.25 0 01-8.34 0c-5.64-7.32-14.84-12.35-23.98-10.72-9.1 1.61-16.75 9.45-18.13 18.59-.94 6.17.79 12.55 3.94 17.94 5.86 10.03 16.25 15.4 23.54 24.12h37.6c7.3-8.72 17.68-14.1 23.55-24.12 3.14-5.39 4.87-11.77 3.94-17.94z\"\n      ></path>\n      <path\n        fill=\"#e9a52d\"\n        d=\"M365.55 245.72c-39.32 0-71.2 55.63-71.2 91.73s31.88 65.38 71.2 65.38 71.2-29.27 71.2-65.37-31.88-91.74-71.2-91.74z\"\n      ></path>\n      <path\n        fill=\"#e38523\"\n        d=\"M388.03 251.79c18.94 19.47 31.4 49.66 31.4 72.23 0 36.11-31.88 65.38-71.2 65.38-13.4 0-25.92-3.4-36.62-9.3 13.05 13.9 32.37 22.73 53.94 22.73 39.32 0 71.2-29.27 71.2-65.38 0-28.89-20.42-70.28-48.72-85.66z\"\n      ></path>\n      <path\n        fill=\"#5ea570\"\n        d=\"M104.99 268.48a18.95 18.95 0 00-19.37-9.33c-7.57 1.33-13.3 7.84-15.62 15.13a4.34 4.34 0 01-6.49 2.36c-6.46-4.09-15.04-5.4-21.7-1.55a18.95 18.95 0 00-8.83 19.6c1.02 5.07 4.17 9.54 8.15 12.84 7.4 6.14 17 7.38 25.13 12.1l29.26-10.65c3.2-8.85 9.76-15.97 11.48-25.43.93-5.08.46-10.53-2.01-15.07z\"\n      ></path>\n      <path\n        fill=\"#6dc17d\"\n        d=\"M78.8 308.56c-36.94 13.45-47.87 76.62-35.52 110.55s52.31 50.54 89.26 37.1 56.89-51.86 44.54-85.8-61.33-75.3-98.28-61.85z\"\n      ></path>\n      <path\n        fill=\"#a87c72\"\n        d=\"M476.3 403.63a4.19 4.19 0 01-3.12-4.88 51.27 51.27 0 00-64.43-59.42 6.9 6.9 0 01-7.18-2.2 98.46 98.46 0 00-75.29-34.88 98.29 98.29 0 00-65.88 25.21 6.26 6.26 0 01-6.31 1.21 78.15 78.15 0 00-26.5-4.6 78.24 78.24 0 00-61.63 29.96 3.86 3.86 0 01-5.7.43 42.62 42.62 0 00-65.02 7.93 5.7 5.7 0 01-5.62 2.56 48.62 48.62 0 00-54.36 35.59 6.8 6.8 0 01-4.1 4.56A37.38 37.38 0 007.5 439.87v23.96a5 5 0 005 5h487a5 5 0 005-5v-23.96a37.36 37.36 0 00-28.2-36.24z\"\n      ></path>\n      <path\n        fill=\"#9a695e\"\n        d=\"M476.3 403.63a4.19 4.19 0 01-3.12-4.88 51.27 51.27 0 00-62.74-59.88 51.28 51.28 0 0137.74 59.88 4.19 4.19 0 003.12 4.88 37.36 37.36 0 0128.2 36.24v23.95a5 5 0 01-5 5h25a5 5 0 005-5v-23.95a37.36 37.36 0 00-28.2-36.24z\"\n      ></path>\n      <path\n        fill=\"#de5791\"\n        d=\"M249.31 269.6l8.26 22.67 33.77-12.3-8.26-22.67a7.59 7.59 0 00-9.72-4.53l-19.51 7.1a7.59 7.59 0 00-4.54 9.72z\"\n      ></path>\n      <path\n        fill=\"#91dafa\"\n        d=\"M318.11 322.21c-1.78-4.88-.66-10.16 2.5-14.23a7.77 7.77 0 001.04-7.4l-4.74-13.04a15.85 15.85 0 00-20.32-9.48l-44.28 16.12a15.85 15.85 0 00-9.47 20.32l4.74 13.03a7.77 7.77 0 005.57 5c5.03 1.1 9.27 4.42 11.05 9.3s.66 10.16-2.49 14.23a7.77 7.77 0 00-1.05 7.4l23.96 65.84 74.07-26.96-23.96-65.83a7.77 7.77 0 00-5.57-5c-5.02-1.09-9.27-4.41-11.05-9.3z\"\n      ></path>\n      <path\n        fill=\"#6cbff8\"\n        d=\"M334.73 336.5a7.77 7.77 0 00-5.57-5c-5.02-1.08-9.27-4.4-11.05-9.29s-.66-10.16 2.5-14.23a7.77 7.77 0 001.04-7.4l-4.74-13.04a15.85 15.85 0 00-20.32-9.48l-18.14 6.6c7.97-2.9 16.86 1.42 19.86 9.65l4.74 13.03c.9 2.5.61 5.3-.95 7.38-3.03 4.02-4.06 9.27-2.28 14.15s5.94 8.24 10.84 9.37a7.84 7.84 0 015.47 5.04l23.96 65.83 18.6-6.77z\"\n      ></path>\n      <path\n        fill=\"#a87c72\"\n        d=\"M410.44 432.03a26.44 26.44 0 00-31.2-26 4.75 4.75 0 01-5.44-3.55 45.62 45.62 0 00-82.3-13.59 5.38 5.38 0 01-7.04 1.77 26.45 26.45 0 00-39.09 23.23v35h165.07z\"\n      ></path>\n      <path d=\"M481.06 397.2a58.85 58.85 0 00-36.92-63.4 95.22 95.22 0 00-3.21-19.66 7.5 7.5 0 00-14.5 3.86 86.2 86.2 0 012.36 12.12 58.59 58.59 0 00-21.72 1.9 106.05 106.05 0 00-79.55-37.26l-3.56-9.8a23.39 23.39 0 00-1.78-3.78c10.27-14.3 25.77-27.96 43.37-27.96 20.13 0 37.28 17.5 47.81 34.63a7.5 7.5 0 0012.78-7.85c-7.31-11.9-15.79-21.52-24.9-28.52 4.77-4.14 9.53-8.59 13.13-14.74 4.27-7.3 6-15.42 4.89-22.85-1.86-12.24-12.06-22.69-24.24-24.85-10.3-1.84-21.6 2.6-29.47 11.4-7.86-8.8-19.16-13.24-29.45-11.4-12.2 2.16-22.4 12.61-24.24 24.85-1.13 7.42.6 15.53 4.87 22.85 3.6 6.17 8.39 10.62 13.18 14.76a98.34 98.34 0 00-19.11 19.84 23.28 23.28 0 00-14.95-.9l-5.72-15.7a15.1 15.1 0 00-19.34-9.03l-19.5 7.1c-3.8 1.38-6.82 4.15-8.52 7.8s-1.88 7.76-.5 11.54l5.71 15.72a23.15 23.15 0 00-11.41 11.33 23.19 23.19 0 00-.81 17.75 86.77 86.77 0 00-24.24 1.11v-27.55c0-6.9-5.6-12.5-12.5-12.5h-19.67c-6.9 0-12.5 5.6-12.5 12.5v48.47c-10.1-12.15-22.8-22.8-36.02-30.04a88.17 88.17 0 00-22.46-8.8c2.46-4.44 4.95-9.42 6-15.24 1.32-7.17.33-14.28-2.8-20.02a26.28 26.28 0 00-27.25-13.12c-8.7 1.53-16.15 7.8-20.12 16.7-8.7-4.2-18.62-4.22-26.14.14-9.33 5.41-14.56 17-12.43 27.56 1.28 6.39 5.09 12.47 10.7 17.14 4.57 3.79 9.7 6 14.43 7.82a85.38 85.38 0 00-10.06 17.51c-6.65 15.35-10.08 33.6-9.74 51.62a55.84 55.84 0 00-2.85 8A44.63 44.63 0 000 439.86v23.96c0 6.9 5.6 12.5 12.5 12.5h86.87a7.5 7.5 0 100-15H15v-21.46a29.71 29.71 0 0118.93-27.8 14.34 14.34 0 008.58-9.61 37.14 37.14 0 012.81-7.53 41.14 41.14 0 0143.2-22.56 13.26 13.26 0 0013.02-5.9 35.04 35.04 0 0129.52-16.08 35 35 0 0124.05 9.52 11.39 11.39 0 0016.74-1.24 71 71 0 0170.12-25.62 15.01 15.01 0 009.6 6.81c2.71.59 4.75 2.24 5.58 4.54.84 2.29.34 4.86-1.37 7.06a15.35 15.35 0 00-2.17 14.58l5.9 16.22a34 34 0 00-21.64 31.63v15.45a7.5 7.5 0 1015 0V413.9a18.97 18.97 0 0128-16.65 12.92 12.92 0 0016.9-4.23 38.02 38.02 0 0131.87-17.23 38.08 38.08 0 0136.9 28.57 12.3 12.3 0 0014.04 9.05 18.96 18.96 0 0122.36 18.63v3a7.5 7.5 0 1015 0v-3a33.97 33.97 0 00-37.54-33.75 53.03 53.03 0 00-26.77-31.78l-11.86-32.57a15.17 15.17 0 00-11.02-9.75c-2.72-.6-4.76-2.25-5.6-4.54-.83-2.29-.33-4.86 1.36-7.05.68-.87 1.25-1.82 1.71-2.82a91.08 91.08 0 0167.62 32.2 14.41 14.41 0 0014.99 4.57 43.82 43.82 0 0155 50.7 11.68 11.68 0 008.63 13.66A29.82 29.82 0 01497 439.87v21.46H134.37a7.5 7.5 0 100 15H499.5c6.9 0 12.5-5.6 12.5-12.5v-23.96a44.8 44.8 0 00-30.94-42.67zM196.52 293v29.35a84.97 84.97 0 00-14.67 7.38V293zm-156.19.2a11.54 11.54 0 015.25-11.62c4.23-2.45 10.03-1.06 13.93 1.42a11.8 11.8 0 0010.41 1.1 11.78 11.78 0 007.23-7.55c1.4-4.37 4.95-9.17 9.76-10.01a11.54 11.54 0 0111.5 5.52c1.48 2.73 1.91 6.33 1.21 10.15-.78 4.32-3.09 8.4-5.53 12.73-.65 1.15-1.3 2.33-1.95 3.53-5.53.2-10.85 1.2-15.9 3.04a51.38 51.38 0 00-14.1 7.9c-5.99-2.38-11.98-4.13-16.22-7.65-3-2.48-4.98-5.52-5.59-8.55zm49.24 64.17a56.06 56.06 0 00-42.29 11.77c4.45-28.7 19.1-48.08 34.08-53.53 19.2-6.99 44.04 4.24 63.06 21.59a50.24 50.24 0 00-13.36-1.81 49.97 49.97 0 00-41.49 21.98zm240.12-128.2c-2.55-4.36-3.62-8.98-3-13.03.9-5.97 6.07-11.27 12.03-12.33 5.67-1 12.23 2.1 16.72 7.92 2.44 3.17 6.13 4.98 10.11 4.98s7.67-1.81 10.1-4.98c4.5-5.82 11.07-8.92 16.74-7.91 5.95 1.05 11.13 6.35 12.03 12.32.61 4.04-.46 8.67-3 13.04-3.18 5.42-8.47 9.61-13.66 14.1a53.19 53.19 0 00-22.21-5.06 53.04 53.04 0 00-22.18 5.08c-5.13-4.43-10.52-8.7-13.68-14.13zm-73.28 37.74l19.51-7.1c.05-.02.1 0 .12.06l5.68 15.62-19.67 7.16-5.69-15.62c-.01-.04.01-.1.05-.12zm71.1 71.9c.02.02.12.1.17.26l8.03 22.06a52.98 52.98 0 00-49.4 22.06 34 34 0 00-11.62-3.11l-6.99-19.19c-.05-.15-.03-.27-.06-.24 4.85-6.27 6.2-14.26 3.61-21.38-2.59-7.13-8.76-12.4-16.44-14.05a.58.58 0 01-.18-.26l-4.74-13.03a8.3 8.3 0 01.27-6.4 8.28 8.28 0 014.72-4.3l44.27-16.12a8.37 8.37 0 0110.71 5l4.75 13.03.02.11c0 .06 0 .11.02.16-4.84 6.27-6.18 14.26-3.59 21.37a22.3 22.3 0 0016.45 14.04zM167.72 146.83a7.47 7.47 0 0010.52-1.3 7.5 7.5 0 00-1.3-10.53c-6.48-5.05-6.74-15.99-4.12-24.59 1.5-4.94 3.75-9.74 6.13-14.81 2.69-5.75 5.47-11.7 7.3-18.2 5.35-19.12-1.74-34.09-11.13-40.44a7.5 7.5 0 00-8.4 12.42c6.81 4.61 7.4 15.66 5.08 23.97-1.49 5.31-3.9 10.45-6.44 15.89-2.5 5.33-5.07 10.84-6.89 16.8-6.1 20.03 1.17 34.5 9.25 40.79zm83.85 0a7.47 7.47 0 0010.52-1.3 7.5 7.5 0 00-1.3-10.53c-6.48-5.05-6.74-15.99-4.12-24.59 1.5-4.94 3.75-9.74 6.13-14.81 2.69-5.75 5.47-11.7 7.3-18.2 5.35-19.12-1.74-34.09-11.13-40.44a7.5 7.5 0 00-8.4 12.43c6.8 4.6 7.4 15.65 5.08 23.96-1.49 5.31-3.9 10.45-6.44 15.89-2.5 5.33-5.07 10.84-6.9 16.8-6.09 20.03 1.18 34.5 9.26 40.79zm83.85 0a7.47 7.47 0 0010.52-1.3 7.5 7.5 0 00-1.3-10.53c-6.48-5.05-6.74-15.99-4.12-24.59 1.5-4.94 3.75-9.74 6.13-14.81 2.69-5.75 5.47-11.7 7.3-18.2 5.35-19.12-1.73-34.09-11.13-40.44a7.5 7.5 0 00-8.4 12.42c6.81 4.61 7.4 15.66 5.08 23.97-1.49 5.31-3.9 10.45-6.44 15.89-2.5 5.33-5.07 10.84-6.89 16.8-6.1 20.03 1.17 34.5 9.25 40.79z\"></path>\n    </svg>\n  );\n}\n","export function ImageCardsIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#f1f4f6\"\n        d=\"M319.463 421.666H82.093c-10.698 0-19.37-8.672-19.37-19.37V26.87c0-10.698 8.672-19.37 19.37-19.37h237.371c10.698 0 19.37 8.672 19.37 19.37v375.426c-.001 10.698-8.673 19.37-19.371 19.37z\"\n      ></path>\n      <path\n        fill=\"#dfeaef\"\n        d=\"M319.463 7.5h-20.63v310.431c0 46.246-37.49 83.735-83.735 83.735H62.722v.63c0 10.698 8.672 19.37 19.37 19.37h237.371c10.698 0 19.37-8.672 19.37-19.37V26.87c0-10.698-8.672-19.37-19.37-19.37z\"\n      ></path>\n      <path\n        fill=\"#da387d\"\n        d=\"M301.142 247.455l-9.036 54.215c-4.902 29.412-30.349 50.969-60.166 50.969a41.902 41.902 0 01-29.629-12.273 2.167 2.167 0 00-3.066 0 41.902 41.902 0 01-29.629 12.273c-29.817 0-55.264-21.557-60.166-50.969l-9.036-54.215c-5.277-31.661 19.139-60.483 51.237-60.483a51.947 51.947 0 0136.73 15.214c6.847 6.847 17.948 6.847 24.794 0a51.944 51.944 0 0136.73-15.214c32.098 0 56.514 28.822 51.237 60.483z\"\n      ></path>\n      <path fill=\"#d80a61\" d=\"M298.833 261.305l2.308-13.85c1.521-9.123.576-18.011-2.308-26.041z\"></path>\n      <path\n        fill=\"#8078bc\"\n        d=\"M151.651 186.972a51.947 51.947 0 0136.73 15.214c6.847 6.847 17.948 6.847 24.794 0a51.944 51.944 0 0136.73-15.214c21.47 0 39.503 12.896 47.512 30.911V122.53a4.586 4.586 0 00-4.586-4.586H108.725a4.586 4.586 0 00-4.586 4.586v95.353c8.009-18.015 26.042-30.911 47.512-30.911zM292.106 301.67c-4.902 29.412-30.349 50.969-60.166 50.969a41.902 41.902 0 01-29.629-12.273 2.167 2.167 0 00-3.066 0 41.902 41.902 0 01-29.629 12.273c-29.817 0-55.264-21.557-60.166-50.969l-5.311-31.865v105.859a4.586 4.586 0 004.586 4.586h184.107a4.586 4.586 0 004.586-4.586V269.805z\"\n      ></path>\n      <path\n        fill=\"#6b61b1\"\n        d=\"M297.417 375.664v-42.315c-3.44 18.484-12.953 34.834-26.389 46.901h21.804a4.586 4.586 0 004.585-4.586z\"\n      ></path>\n      <path\n        fill=\"#f1f4f6\"\n        d=\"M429.908 90.333h-91.074v311.963c0 10.698-8.672 19.37-19.37 19.37H173.167v63.463c0 10.698 8.672 19.37 19.37 19.37h237.371c10.698 0 19.37-8.672 19.37-19.37V109.703c0-10.698-8.672-19.37-19.37-19.37z\"\n      ></path>\n      <path\n        fill=\"#dfeaef\"\n        d=\"M429.908 90.333h-20.63v310.431c0 46.246-37.49 83.735-83.735 83.735H173.167v.63c0 10.698 8.672 19.37 19.37 19.37h237.371c10.698 0 19.37-8.672 19.37-19.37V109.703c0-10.698-8.672-19.37-19.37-19.37z\"\n      ></path>\n      <path\n        fill=\"#f4dd45\"\n        d=\"M338.834 232.111v170.185c0 10.698-8.672 19.37-19.37 19.37h-59.93c15.211 8.781 32.864 13.806 51.69 13.806 57.185 0 103.542-46.357 103.542-103.542-.002-47.622-32.153-87.736-75.932-99.819z\"\n      ></path>\n      <path\n        fill=\"#f1d333\"\n        d=\"M409.278 365.273c3.557-10.463 5.486-21.677 5.486-33.343s-1.929-22.88-5.486-33.343z\"\n      ></path>\n      <path\n        fill=\"#86f1a7\"\n        d=\"M338.834 278.693v106.474c43.78-6.444 75.931-27.838 75.931-53.237-.001-25.398-32.152-46.792-75.931-53.237z\"\n      ></path>\n      <path\n        fill=\"#80e29d\"\n        d=\"M409.278 349.713c3.557-5.58 5.486-11.561 5.486-17.783s-1.929-12.203-5.486-17.783z\"\n      ></path>\n      <path\n        fill=\"#7ad0df\"\n        d=\"M407.861 294.681v-89.318a4.586 4.586 0 00-4.586-4.586h-64.442v31.334c31.709 8.752 57.317 32.207 69.028 62.57zm-96.639 140.791c-18.826 0-36.478-5.025-51.69-13.806h-44.949v36.831a4.586 4.586 0 004.586 4.586h184.107a4.586 4.586 0 004.586-4.586V369.18c-14.958 38.78-52.586 66.292-96.64 66.292z\"\n      ></path>\n      <path\n        fill=\"#70c6da\"\n        d=\"M407.861 458.497v-42.315c-3.44 18.484-12.953 34.834-26.389 46.901h21.804a4.586 4.586 0 004.585-4.586z\"\n      ></path>\n      <path d=\"M145.556 97.833a7.5 7.5 0 007.5-7.5V55.819c0-15.554-12.654-28.208-28.208-28.208S96.64 40.265 96.64 55.819v34.514a7.5 7.5 0 0015 0V70.222h26.417v20.111a7.499 7.499 0 007.499 7.5zm-20.709-55.222c7.083 0 12.882 5.604 13.195 12.611h-26.389c.313-7.007 6.112-12.611 13.194-12.611z\"></path>\n      <path d=\"M449.278 180.356a7.5 7.5 0 007.5-7.5v-63.153c0-14.816-12.054-26.871-26.87-26.871h-83.574V26.87c0-14.816-12.054-26.87-26.87-26.87H199.592a7.5 7.5 0 000 15h119.872c6.545 0 11.87 5.325 11.87 11.87v375.426c0 6.545-5.325 11.87-11.87 11.87H82.093c-6.545 0-11.871-5.325-11.871-11.87V26.87c0-6.545 5.325-11.87 11.871-11.87h82.499a7.5 7.5 0 000-15H82.093C67.276 0 55.222 12.054 55.222 26.87v375.426c0 14.816 12.054 26.87 26.871 26.87h83.574v55.963c0 14.816 12.054 26.871 26.87 26.871h237.371c14.816 0 26.87-12.054 26.87-26.871V207.856a7.5 7.5 0 00-15 0v277.273c0 6.545-5.325 11.871-11.87 11.871H192.537c-6.545 0-11.87-5.325-11.87-11.871v-55.963h26.417v29.331c0 6.664 5.421 12.085 12.085 12.085h29.282a7.5 7.5 0 000-15h-26.367v-26.417h35.479c41.673 23.035 95.759 17.569 132.129-18.833a112.935 112.935 0 0010.67-12.339v57.588H283.451a7.5 7.5 0 000 15h119.825c6.664 0 12.085-5.421 12.085-12.085v-88.043c9.28-24.951 9.133-52.488 0-77.169v-87.923c0-6.664-5.421-12.086-12.085-12.086h-56.942V97.833h83.574c6.545 0 11.87 5.325 11.87 11.871v63.153a7.5 7.5 0 007.5 7.499zM346.333 287.611c35.72 7.224 60.841 25.134 60.93 44.217v.265c-.143 19.06-25.249 36.939-60.93 44.155zm0-15.282v-29.832c23.977 9.374 42.714 27.79 52.77 50.6-13.123-9.529-31.229-16.832-52.77-20.768zm-13.342 153.177c7.974-4.666 13.342-13.322 13.342-23.21v-10.765c21.554-3.938 39.669-11.248 52.794-20.786-12.046 27.308-36.432 47.905-66.136 54.761zm67.37-217.229v57.339a110.629 110.629 0 00-54.028-39.062v-18.277z\"></path>\n      <path d=\"M292.831 110.444H108.725c-6.664 0-12.085 5.421-12.085 12.085v93.839a59.35 59.35 0 00-3.623 32.319l3.623 21.739v105.237c0 6.664 5.421 12.086 12.085 12.086h184.106c6.664 0 12.086-5.422 12.086-12.086V270.426l3.623-21.738a59.35 59.35 0 00-3.623-32.319v-93.84c0-6.663-5.422-12.085-12.086-12.085zM111.556 268.689a6.306 6.306 0 00-.041-.246l-3.703-22.22a44.362 44.362 0 019.928-36.034c16.727-19.746 46.877-21.159 65.338-2.699 9.759 9.759 25.641 9.76 35.401 0 8.395-8.394 19.555-13.017 31.426-13.017 13.09 0 25.451 5.729 33.912 15.717s12.08 23.122 9.928 36.033c-5.109 30.643-3.41 20.247-3.743 22.459l-5.293 31.756c-4.317 25.901-26.509 44.701-52.769 44.701-9.189 0-17.828-3.578-24.325-10.076-1.826-1.826-4.254-2.832-6.836-2.832s-5.01 1.005-6.836 2.832c-6.498 6.498-15.137 10.076-24.326 10.076-26.259 0-48.452-18.8-52.769-44.701zm178.361-143.245v69.506c-22.997-20.957-58.86-20.827-81.639 1.53v-19.626c0-7.932 4.407-15.062 11.501-18.61a7.499 7.499 0 003.354-10.062 7.499 7.499 0 00-10.062-3.354c-12.209 6.104-19.793 18.376-19.793 32.026v19.626c-11.18-10.973-25.939-17.009-41.627-17.009a59.324 59.324 0 00-40.012 15.478v-69.506h178.278zM111.639 372.75v-44.537c12.201 19.413 33.736 31.926 57.977 31.926 11.489 0 22.379-3.895 31.162-11.061 8.783 7.166 19.672 11.061 31.162 11.061 24.242 0 45.776-12.513 57.977-31.926v44.538H111.639z\"></path>\n    </svg>\n  );\n}\n","export function MirrorIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffe07d\"\n        d=\"M436.567 191.783H75.431c-9.917 0-17.957 8.04-17.957 17.957 0 9.917 8.04 17.957 17.957 17.957h361.136c9.917 0 17.957-8.04 17.957-17.957 0-9.917-8.039-17.957-17.957-17.957z\"\n      ></path>\n      <path\n        fill=\"#ffd064\"\n        d=\"M454.527 209.738c0 9.92-8.04 17.96-17.96 17.96H75.431c-4.96 0-9.45-2.01-12.7-5.26s-5.26-7.74-5.26-12.7c0-2.87.68-5.59 1.88-8 .87 1.74 2.02 3.33 3.38 4.69 3.25 3.25 7.74 5.26 12.7 5.26h361.136c7.04 0 13.14-4.05 16.08-9.95 1.2 2.41 1.88 5.13 1.88 8z\"\n      ></path>\n      <path\n        fill=\"#ffe07d\"\n        d=\"M255.999 411.981c-70.7 0-128.014-57.314-128.014-128.014V135.514c0-70.7 57.314-128.014 128.014-128.014 70.7 0 128.014 57.314 128.014 128.014v148.453c0 70.7-57.314 128.014-128.014 128.014z\"\n      ></path>\n      <path\n        fill=\"#ffd064\"\n        d=\"M263.974 411.726c-2.64.17-5.3.25-7.98.25-70.699 0-128.009-57.309-128.009-128.009V135.519c0-70.71 57.31-128.019 128.009-128.019 2.68 0 5.34.08 7.98.25-66.979 4.11-120.029 59.739-120.029 127.769v148.448c0 68.02 53.05 123.649 120.029 127.759z\"\n      ></path>\n      <path\n        fill=\"#80b4fb\"\n        d=\"M354.009 135.519v148.448c0 54.049-43.97 98.009-98.009 98.009-13.79 0-26.92-2.86-38.83-8.02a98.133 98.133 0 01-30.24-20.51c-17.87-17.76-28.95-42.35-28.95-69.479V135.519c0-54.05 43.97-98.019 98.019-98.019 23.6 0 45.27 8.38 62.199 22.33a98.544 98.544 0 0123.16 27.57c8.051 14.219 12.651 30.649 12.651 48.119z\"\n      ></path>\n      <path\n        fill=\"#9dc6fb\"\n        d=\"M354.009 135.519v50.849L186.931 353.447c-17.87-17.76-28.95-42.35-28.95-69.479v-13.19L341.359 87.399c8.05 14.22 12.65 30.65 12.65 48.12zm0 101.599v46.85c0 54.049-43.97 98.009-98.009 98.009-13.79 0-26.92-2.86-38.83-8.02zM318.199 59.83L157.981 220.048v-84.529c0-54.05 43.97-98.019 98.019-98.019 23.6 0 45.27 8.38 62.199 22.33z\"\n      ></path>\n      <path\n        fill=\"#c19d8e\"\n        d=\"M91.41 484.856h36.575V176.243c0-10.1-8.188-18.288-18.288-18.288s-18.288 8.188-18.288 18.288v308.613z\"\n      ></path>\n      <path\n        fill=\"#b78b7a\"\n        d=\"M118.52 160.223c-1.52.83-2.9 1.87-4.12 3.09a18.23 18.23 0 00-5.36 12.93V484.86H91.41V176.243c0-5.05 2.05-9.62 5.36-12.93s7.88-5.35 12.93-5.35c3.2 0 6.2.82 8.82 2.26z\"\n      ></path>\n      <path\n        fill=\"#c19d8e\"\n        d=\"M384.013 484.856h36.575V176.243c0-10.1-8.188-18.288-18.288-18.288s-18.288 8.188-18.288 18.288v308.613z\"\n      ></path>\n      <path\n        fill=\"#b78b7a\"\n        d=\"M411.123 160.223c-1.52.83-2.9 1.87-4.12 3.09a18.23 18.23 0 00-5.36 12.93V484.86h-17.63V176.243c0-5.05 2.05-9.62 5.36-12.93s7.88-5.35 12.93-5.35c3.2 0 6.2.82 8.82 2.26z\"\n      ></path>\n      <path\n        fill=\"#c19d8e\"\n        d=\"M424.891 504.495H87.107c-11.882 0-21.515-9.633-21.515-21.515 0-11.882 9.633-21.515 21.515-21.515h337.784c11.882 0 21.515 9.633 21.515 21.515 0 11.883-9.632 21.515-21.515 21.515z\"\n      ></path>\n      <path\n        fill=\"#b78b7a\"\n        d=\"M138.731 504.5H87.112c-11.89 0-21.52-9.63-21.52-21.52 0-5.94 2.41-11.32 6.3-15.21 3.9-3.89 9.28-6.3 15.22-6.3h51.619c-5.94 0-11.32 2.41-15.22 6.3-3.89 3.89-6.3 9.27-6.3 15.21 0 11.89 9.63 21.52 21.52 21.52z\"\n      ></path>\n      <path d=\"M436.568 235.198c14.039 0 25.46-11.421 25.46-25.459 0-6.801-2.648-13.195-7.465-18.012-4.812-4.797-11.203-7.438-17.995-7.438h-8.479v-8.045c0-14.219-11.568-25.788-25.788-25.788a25.63 25.63 0 00-10.791 2.375V135.51c0-27.577-8.237-54.118-23.822-76.753a7.5 7.5 0 00-12.356 8.507c13.854 20.122 21.178 43.721 21.178 68.247v148.46c0 66.449-54.061 120.51-120.51 120.51s-120.51-54.061-120.51-120.51V135.51C135.49 69.061 189.55 15 256 15c29.899 0 58.574 11.026 80.743 31.046a7.5 7.5 0 1010.053-11.132C321.866 12.399 289.621 0 256 0c-74.72 0-135.51 60.79-135.51 135.51v17.321a25.623 25.623 0 00-10.792-2.376c-14.219 0-25.788 11.568-25.788 25.788v8.045h-8.478c-14.039 0-25.46 11.417-25.46 25.45 0 6.801 2.648 13.195 7.457 18.003 4.808 4.809 11.202 7.457 18.003 7.457h8.478V454.15c-6.539.713-12.596 3.599-17.308 8.311-5.49 5.477-8.513 12.764-8.513 20.52 0 16.001 13.019 29.02 29.02 29.02h337.78c7.749 0 15.034-3.018 20.514-8.497 5.485-5.486 8.507-12.774 8.507-20.523 0-14.915-11.32-27.232-25.821-28.83V235.198zm0-35.91a10.41 10.41 0 017.396 3.053 10.388 10.388 0 013.063 7.397c0 5.768-4.692 10.459-10.46 10.459h-8.479v-20.91h8.48zm-45.055-23.045c0-5.948 4.839-10.788 10.787-10.788s10.788 4.839 10.788 10.788v277.722h-21.575zm-292.603 0c0-5.948 4.839-10.788 10.788-10.788s10.788 4.839 10.788 10.788v277.722H98.91zm-23.478 43.955c-2.795 0-5.422-1.088-7.397-3.063s-3.063-4.602-3.063-7.396c0-5.762 4.692-10.45 10.46-10.45h8.478v20.91h-8.478zM438.91 482.98c0 3.742-1.461 7.264-4.114 9.917A13.917 13.917 0 01424.89 497H87.109c-7.73 0-14.02-6.29-14.02-14.02 0-3.743 1.458-7.258 4.113-9.907a13.918 13.918 0 019.907-4.103h62.61a7.5 7.5 0 000-15h-14.234V345.89c22.526 43.664 68.09 73.59 120.514 73.59s97.988-29.925 120.514-73.589V453.97H179.68a7.5 7.5 0 000 15h245.209c7.731 0 14.021 6.285 14.021 14.01z\"></path>\n      <path d=\"M255.999 30c-58.181 0-105.514 47.333-105.514 105.514v148.453c0 58.181 47.333 105.514 105.514 105.514s105.514-47.333 105.514-105.514V135.514C361.513 77.333 314.18 30 255.999 30zm90.514 253.967c0 49.91-40.604 90.514-90.514 90.514a90.28 90.28 0 01-25.18-3.567l28.544-28.544a7.5 7.5 0 00-10.607-10.606L215.58 364.94a90.85 90.85 0 01-17.807-11.73l85.009-85.009a7.5 7.5 0 00-10.607-10.606l-85.042 85.043c-13.491-15.812-21.649-36.304-21.649-58.67V135.514c0-49.91 40.604-90.514 90.514-90.514 18.812 0 36.3 5.771 50.792 15.632l-29.754 29.754a7.5 7.5 0 005.304 12.803 7.478 7.478 0 005.304-2.197l30.873-30.873a91.208 91.208 0 0113.381 16.134l-78.291 78.292a7.5 7.5 0 005.303 12.803 7.478 7.478 0 005.304-2.197l75.072-75.072c4.65 10.889 7.228 22.866 7.228 35.434v148.454z\"></path>\n    </svg>\n  );\n}\n","export function NoIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path fill=\"none\" d=\"M.09.09h512v512H.09z\"></path>\n      <path\n        fill=\"#e94444\"\n        d=\"M256.09 441.78a184.89 184.89 0 01-85.58-20.86c-4.22-2.2-8.36-4.55-12.38-7.05a3.33 3.33 0 01-.62-5.19l251.16-251.17a3.34 3.34 0 015.2.62c2.49 4 4.85 8.16 7.05 12.38a185.75 185.75 0 01-164.83 271.27M98.33 354.09q-3.75-6-7-12.37a184.43 184.43 0 01-20.8-79.76c-3.24-105 82.25-192.47 187.33-191.5a185 185 0 0183.88 20.85q6.33 3.3 12.36 7.06a3.33 3.33 0 01.61 5.19L103.52 354.65a3.33 3.33 0 01-5.19-.61M256.09 7.5C118.8 7.5 7.5 118.8 7.5 256.09s111.3 248.59 248.59 248.59 248.59-111.29 248.59-248.59S393.38 7.5 256.09 7.5\"\n      ></path>\n      <path\n        fill=\"#d83131\"\n        d=\"M398.28 52.16a248 248 0 0189.35 190.93c0 137.29-111.29 248.59-248.59 248.59a247.45 247.45 0 01-142.18-44.69 247.53 247.53 0 00159.23 57.69c137.29 0 248.59-111.29 248.59-248.59a248.28 248.28 0 00-106.4-203.93\"\n      ></path>\n      <path d=\"M256.09 512.18A256.09 256.09 0 0175.01 75.01a256.11 256.11 0 11291.08 412.4 7.5 7.5 0 01-6.45-13.54 239.89 239.89 0 10-31.63 12.4 7.5 7.5 0 114.47 14.32 256.11 256.11 0 01-76.39 11.59z\"></path>\n      <path d=\"M101.2 363.09a10.48 10.48 0 01-1.25-.07 10.8 10.8 0 01-8-5 191.8 191.8 0 01-7.34-12.88 191 191 0 01-21.64-83c-1.63-52.89 18-103 55.21-141s86.85-58.74 139.71-58.23a191.22 191.22 0 0187.27 21.7c4.37 2.28 8.69 4.75 12.86 7.34a10.83 10.83 0 011.95 16.86L108.83 359.95a10.76 10.76 0 01-7.63 3.14zM256.09 77.9c-48.12 0-93.22 19-127.16 53.72-34.35 35.1-52.44 81.29-50.94 130.06a176 176 0 0020 76.52c1.29 2.47 2.64 4.94 4.06 7.37l243.54-243.6a175.7 175.7 0 00-7.36-4.06 176.41 176.41 0 00-80.47-20zm0 371.38a193.54 193.54 0 01-89-21.71 192.5 192.5 0 01-12.88-7.34 10.82 10.82 0 01-2-16.86l137.55-137.55a7.5 7.5 0 1110.6 10.61L166.59 410.2c2.42 1.41 4.89 2.77 7.38 4.06a178.52 178.52 0 0082.12 20c98.26 0 178.19-79.93 178.19-178.19a176.22 176.22 0 00-20-82.12c-1.29-2.49-2.65-5-4.06-7.38l-84.87 84.87a7.5 7.5 0 01-10.61-10.6l88.65-88.65a10.83 10.83 0 0116.86 1.95c2.58 4.16 5.05 8.49 7.34 12.89a191.11 191.11 0 0121.71 89c-.02 106.59-86.68 193.25-193.21 193.25z\"></path>\n    </svg>\n  );\n}\n","export function PlayerIconsIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path fill=\"none\" d=\"M0 0h512v512H0z\"></path>\n      <path fill=\"#fbf4db\" d=\"M199.89 103.69a96.2 96.2 0 11-96.2-96.19 96.2 96.2 0 0196.2 96.19\"></path>\n      <path\n        fill=\"#8ceea1\"\n        d=\"M114.3 57a23.81 23.81 0 00-10.41 16.91 5.77 5.77 0 004.28 6.25 23.79 23.79 0 0029.89-20 5.8 5.8 0 00-4.28-6.26A23.84 23.84 0 00114.3 57\"\n      ></path>\n      <path fill=\"#ffe077\" d=\"M504.5 103.69A96.2 96.2 0 11408.31 7.5a96.2 96.2 0 0196.19 96.19\"></path>\n      <path fill=\"#7ad7ee\" d=\"M504.5 408.31a96.2 96.2 0 11-96.19-96.2 96.2 96.2 0 0196.19 96.2\"></path>\n      <path fill=\"#eceaec\" d=\"M448.39 416.32h-80.16v-24.05h80.16z\"></path>\n      <path fill=\"#8ceea1\" d=\"M199.89 408.31a96.2 96.2 0 11-96.2-96.2 96.2 96.2 0 0196.2 96.2\"></path>\n      <path\n        fill=\"#736572\"\n        d=\"M456.4 440.37h-16a8 8 0 01-8-8v-48.11a8 8 0 018-8h16a8 8 0 018 8v48.09a8 8 0 01-8 8\"\n      ></path>\n      <path\n        fill=\"#ff7e92\"\n        d=\"M89 79.73a25.07 25.07 0 00-25.39 25.53c.46 21.78 10.43 46.53 32.05 46.53a30.43 30.43 0 004.91-.42 19 19 0 016.21 0 30.43 30.43 0 004.91.42c22.14 0 32.06-26 32.06-48.1 0-26.87-26.45-23.94-54.75-24\"\n      ></path>\n      <path\n        fill=\"#ff744d\"\n        d=\"M392.27 133.51a16 16 0 11-16-16 16 16 0 0116 16m64.13-8.01a16 16 0 11-16-16 16 16 0 0116 16\"\n      ></path>\n      <path\n        fill=\"#736572\"\n        d=\"M376.24 440.37h-16a8 8 0 01-8-8v-48.11a8 8 0 018-8h16a8 8 0 018 8v48.09a8 8 0 01-8 8\"\n      ></path>\n      <path\n        fill=\"#615260\"\n        d=\"M352.19 416.32v16a8 8 0 008 8h16a8 8 0 008-8v-16zm80.16 0v16a8 8 0 008 8h16a8 8 0 008-8v-16z\"\n      ></path>\n      <path fill=\"#fbbd80\" d=\"M280.05 183.85a24.05 24.05 0 11-24.05-24 24 24 0 0124.05 24\"></path>\n      <path\n        fill=\"#dbd8db\"\n        d=\"M288.06 232h-64.12a32.07 32.07 0 00-32.07 32v32.06c0 13.28 32.07 24.05 32.07 24.05h72.14a24.05 24.05 0 0024.05-24.05V264a32.07 32.07 0 00-32.07-32\"\n      ></path>\n      <path\n        fill=\"#c9c5c9\"\n        d=\"M256 232h-32.06a32.07 32.07 0 00-32.07 32v32.06a24.05 24.05 0 0024 24.05h8V264A32.06 32.06 0 01256 232\"\n      ></path>\n      <path\n        fill=\"#f8ebcc\"\n        d=\"M119.73 183.85A96.09 96.09 0 0144.22 28.19a96.13 96.13 0 10135 135 95.71 95.71 0 01-59.47 20.68\"\n      ></path>\n      <path\n        fill=\"#ffd05b\"\n        d=\"M424.34 183.85a96.1 96.1 0 01-75.51-155.66 96.13 96.13 0 10135 135 95.71 95.71 0 01-59.47 20.68\"\n      ></path>\n      <path\n        fill=\"#4ce1a1\"\n        d=\"M119.73 488.47A96.1 96.1 0 0144.22 332.8a96.13 96.13 0 10135 135 95.66 95.66 0 01-59.47 20.69\"\n      ></path>\n      <path\n        fill=\"#4bc3ef\"\n        d=\"M424.34 488.47a96.11 96.11 0 01-75.51-155.67 96.13 96.13 0 10135 135 95.66 95.66 0 01-59.47 20.69\"\n      ></path>\n      <path fill=\"#fff\" d=\"M119.73 440.37h32.06v-64.13h-32.06a16 16 0 00-16 16v64.16a16 16 0 0116-16\"></path>\n      <path fill=\"#f8ebcc\" d=\"M87.66 440.37H55.6v-64.13h32.06a16 16 0 0116 16v64.16a16 16 0 00-16-16\"></path>\n      <path\n        fill=\"#ff5f7a\"\n        d=\"M87.68 105.26a25 25 0 0124.58-25.45c-7.22-.29-15.14-.07-23.24-.08a25.07 25.07 0 00-25.39 25.53c.46 21.78 10.43 46.53 32.05 46.53a30.43 30.43 0 004.91-.42 19 19 0 016.21 0 30.43 30.43 0 004.91.42 26.21 26.21 0 004-.3c-18.85-2.85-27.62-25.84-28-46.23\"\n      ></path>\n      <path d=\"M103.69 207.39A103.7 103.7 0 00187.92 43.2a7.5 7.5 0 10-12.17 8.8 88.7 88.7 0 11-23-22.18A7.5 7.5 0 00161 17.29a103.7 103.7 0 10-57.35 190.1m.04 289.61a88.7 88.7 0 1188.7-88.69 88.8 88.8 0 01-88.7 88.69m0-192.39a103.7 103.7 0 10103.7 103.7 103.82 103.82 0 00-103.7-103.7M408.31 497A88.7 88.7 0 11497 408.31 88.8 88.8 0 01408.31 497m0-192.39A103.7 103.7 0 10512 408.31a103.82 103.82 0 00-103.69-103.7M256 167.31a16.55 16.55 0 11-16.55 16.54A16.57 16.57 0 01256 167.31m0 48.09a31.55 31.55 0 10-31.55-31.55A31.58 31.58 0 00256 215.4M184.37 264v40.1a7.5 7.5 0 0015 0V264a24.6 24.6 0 0124.57-24.57h64.12A24.6 24.6 0 01312.63 264v40.1a7.5 7.5 0 0015 0V264a39.61 39.61 0 00-39.57-39.57h-64.12A39.61 39.61 0 00184.37 264\"></path>\n      <path d=\"M223.94 264.53a7.5 7.5 0 00-7.5 7.5v48.1a7.5 7.5 0 0015 0V272a7.5 7.5 0 00-7.5-7.5m64.12.03a7.5 7.5 0 00-7.5 7.5v48.1a7.5 7.5 0 0015 0V272a7.5 7.5 0 00-7.5-7.5M408.31 15a88.7 88.7 0 11-88.7 88.69A88.8 88.8 0 01408.31 15m0 192.39a103.7 103.7 0 10-103.7-103.7 103.82 103.82 0 00103.7 103.7\"></path>\n      <path d=\"M376.24 125a8.53 8.53 0 11-8.53 8.53 8.54 8.54 0 018.53-8.53m64.13 9a8.54 8.54 0 118.53-8.53 8.54 8.54 0 01-8.53 8.53m-64.13 23a23.55 23.55 0 0023.53-23.53V81.9a8.52 8.52 0 016.47-8.28l42-10.5a.5.5 0 01.64.5v39.95a23.53 23.53 0 1015 21.93V63.62a15.52 15.52 0 00-19.28-15.06l-42 10.51a23.49 23.49 0 00-17.83 22.83v29.69a23.23 23.23 0 00-8.53-1.61 23.53 23.53 0 000 47.06m80.68 275.31a.52.52 0 01-.52.52h-16a.52.52 0 01-.52-.52v-48.09a.52.52 0 01.52-.52h16a.52.52 0 01.52.52zm-65.16-32.58h33.09v17.07h-33.09zm-15 32.58a.52.52 0 01-.52.52h-16a.52.52 0 01-.52-.52v-48.09a.52.52 0 01.52-.52h16a.52.52 0 01.52.52zm79.64-63.61h-16a15.53 15.53 0 00-15.52 15.52v.51h-33.12v-.51a15.53 15.53 0 00-15.52-15.52h-16a15.53 15.53 0 00-15.52 15.52v48.09a15.53 15.53 0 0015.52 15.52h16a15.53 15.53 0 0015.52-15.52v-.51h33.09v.51a15.53 15.53 0 0015.52 15.52h16a15.53 15.53 0 0015.52-15.52v-48.09a15.53 15.53 0 00-15.52-15.52M118.46 61.89a16.21 16.21 0 0111.89-2.49 16.29 16.29 0 01-18.75 12.5 16.15 16.15 0 016.86-10m-6.75 82.4a23.11 23.11 0 01-3.71-.3 26.22 26.22 0 00-8.66 0 22.9 22.9 0 01-3.68.32c-17.41 0-24.22-23.43-24.55-39.18a17.22 17.22 0 014.93-12.52A18 18 0 0189 87.23h7.77c15.51-.13 30.16-.27 36 5.56 2.33 2.3 3.45 5.88 3.45 10.94 0 29.79-14.69 40.6-24.56 40.6M89 72.23a32.82 32.82 0 00-23.65 9.86 32.13 32.13 0 00-9.22 23.33c.28 13.11 3.52 25.57 9.13 35.08 7.14 12.12 17.94 18.79 30.42 18.79a38.34 38.34 0 006.13-.52 11.3 11.3 0 013.76 0 38.46 38.46 0 006.14.52c26 0 39.56-28 39.56-55.6 0-9.14-2.65-16.41-7.89-21.6a26.92 26.92 0 00-6.38-4.62 31.7 31.7 0 008.65-23.76 7.49 7.49 0 00-4.18-6.28 31.62 31.62 0 00-31.37 2 30.78 30.78 0 00-6.62 6l-.73-2.17A7.5 7.5 0 1088.56 58l4.75 14.24H89m55.29 360.63h-24.56a23.53 23.53 0 00-8.54 1.6v-42.2a8.55 8.55 0 018.54-8.53h24.56zm-56.63 0H63.1v-49.13h24.56a8.54 8.54 0 018.53 8.53v42.2a23.43 23.43 0 00-8.53-1.6m64.13-64.13h-32.06a23.46 23.46 0 00-16 6.33 23.43 23.43 0 00-16-6.33H55.6a7.5 7.5 0 00-7.5 7.5v64.13a7.5 7.5 0 007.5 7.5h32.06a8.54 8.54 0 018.53 8.53 7.5 7.5 0 0015 0 8.55 8.55 0 018.54-8.53h32.06a7.5 7.5 0 007.5-7.5v-64.13a7.5 7.5 0 00-7.5-7.5\"></path>\n    </svg>\n  );\n}\n","export function YesIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path fill=\"none\" d=\"M.09.09h512v512H.09z\"></path>\n      <circle cx=\"256.09\" cy=\"256.09\" r=\"248.59\" fill=\"#46e846\"></circle>\n      <path\n        fill=\"#32d632\"\n        d=\"M398.28 52.16a248 248 0 0189.35 190.93c0 137.29-111.29 248.59-248.59 248.59a247.45 247.45 0 01-142.18-44.69 247.53 247.53 0 00159.23 57.69c137.29 0 248.59-111.29 248.59-248.59a248.28 248.28 0 00-106.4-203.93\"\n      ></path>\n      <path\n        fill=\"none\"\n        stroke=\"#000\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeWidth=\"15\"\n        d=\"M330.25 493.43a248.51 248.51 0 01-74.16 11.25C118.8 504.68 7.5 393.38 7.5 256.09S118.8 7.5 256.09 7.5s248.59 111.3 248.59 248.59a248.61 248.61 0 01-141.81 224.55\"\n      ></path>\n      <path\n        fill=\"#80ff80\"\n        d=\"M305.09 71.64s130.18 30.21 130.18 184.45c0 0-37.91-139.06-130.18-184.45z\"\n      ></path>\n    </svg>\n  );\n}\n","// This icon file is generated automatically.\nvar CaretUpOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"0 0 1024 1024\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M858.9 689L530.5 308.2c-9.4-10.9-27.5-10.9-37 0L165.1 689c-12.2 14.2-1.2 35 18.5 35h656.8c19.7 0 30.7-20.8 18.5-35z\" } }] }, \"name\": \"caret-up\", \"theme\": \"outlined\" };\nexport default CaretUpOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CaretUpOutlinedSvg from \"@ant-design/icons-svg/es/asn/CaretUpOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar CaretUpOutlined = function CaretUpOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CaretUpOutlinedSvg\n  }));\n};\nCaretUpOutlined.displayName = 'CaretUpOutlined';\nexport default /*#__PURE__*/React.forwardRef(CaretUpOutlined);","// This icon file is generated automatically.\nvar CrownFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M899.6 276.5L705 396.4 518.4 147.5a8.06 8.06 0 00-12.9 0L319 396.4 124.3 276.5c-5.7-3.5-13.1 1.2-12.2 7.9L188.5 865c1.1 7.9 7.9 14 16 14h615.1c8 0 14.9-6 15.9-14l76.4-580.6c.8-6.7-6.5-11.4-12.3-7.9zM512 734.2c-62.1 0-112.6-50.5-112.6-112.6S449.9 509 512 509s112.6 50.5 112.6 112.6S574.1 734.2 512 734.2zm0-160.9c-26.6 0-48.2 21.6-48.2 48.3 0 26.6 21.6 48.3 48.2 48.3s48.2-21.6 48.2-48.3c0-26.6-21.6-48.3-48.2-48.3z\" } }] }, \"name\": \"crown\", \"theme\": \"filled\" };\nexport default CrownFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CrownFilledSvg from \"@ant-design/icons-svg/es/asn/CrownFilled\";\nimport AntdIcon from '../components/AntdIcon';\nvar CrownFilled = function CrownFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CrownFilledSvg\n  }));\n};\nCrownFilled.displayName = 'CrownFilled';\nexport default /*#__PURE__*/React.forwardRef(CrownFilled);","// This icon file is generated automatically.\nvar DownSquareOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M505.5 658.7c3.2 4.4 9.7 4.4 12.9 0l178-246c3.8-5.3 0-12.7-6.5-12.7H643c-10.2 0-19.9 4.9-25.9 13.2L512 558.6 406.8 413.2c-6-8.3-15.6-13.2-25.9-13.2H334c-6.5 0-10.3 7.4-6.5 12.7l178 246z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z\" } }] }, \"name\": \"down-square\", \"theme\": \"outlined\" };\nexport default DownSquareOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DownSquareOutlinedSvg from \"@ant-design/icons-svg/es/asn/DownSquareOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar DownSquareOutlined = function DownSquareOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: DownSquareOutlinedSvg\n  }));\n};\nDownSquareOutlined.displayName = 'DownSquareOutlined';\nexport default /*#__PURE__*/React.forwardRef(DownSquareOutlined);","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EyeInvisibleOutlinedSvg from \"@ant-design/icons-svg/es/asn/EyeInvisibleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar EyeInvisibleOutlined = function EyeInvisibleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: EyeInvisibleOutlinedSvg\n  }));\n};\nEyeInvisibleOutlined.displayName = 'EyeInvisibleOutlined';\nexport default /*#__PURE__*/React.forwardRef(EyeInvisibleOutlined);","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EyeOutlinedSvg from \"@ant-design/icons-svg/es/asn/EyeOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar EyeOutlined = function EyeOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: EyeOutlinedSvg\n  }));\n};\nEyeOutlined.displayName = 'EyeOutlined';\nexport default /*#__PURE__*/React.forwardRef(EyeOutlined);","// This icon file is generated automatically.\nvar MessageFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M924.3 338.4a447.57 447.57 0 00-96.1-143.3 443.09 443.09 0 00-143-96.3A443.91 443.91 0 00512 64h-2c-60.5.3-119 12.3-174.1 35.9a444.08 444.08 0 00-141.7 96.5 445 445 0 00-95 142.8A449.89 449.89 0 0065 514.1c.3 69.4 16.9 138.3 47.9 199.9v152c0 25.4 20.6 46 45.9 46h151.8a447.72 447.72 0 00199.5 48h2.1c59.8 0 117.7-11.6 172.3-34.3A443.2 443.2 0 00827 830.5c41.2-40.9 73.6-88.7 96.3-142 23.5-55.2 35.5-113.9 35.8-174.5.2-60.9-11.6-120-34.8-175.6zM312.4 560c-26.4 0-47.9-21.5-47.9-48s21.5-48 47.9-48 47.9 21.5 47.9 48-21.4 48-47.9 48zm199.6 0c-26.4 0-47.9-21.5-47.9-48s21.5-48 47.9-48 47.9 21.5 47.9 48-21.5 48-47.9 48zm199.6 0c-26.4 0-47.9-21.5-47.9-48s21.5-48 47.9-48 47.9 21.5 47.9 48-21.5 48-47.9 48z\" } }] }, \"name\": \"message\", \"theme\": \"filled\" };\nexport default MessageFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport MessageFilledSvg from \"@ant-design/icons-svg/es/asn/MessageFilled\";\nimport AntdIcon from '../components/AntdIcon';\nvar MessageFilled = function MessageFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: MessageFilledSvg\n  }));\n};\nMessageFilled.displayName = 'MessageFilled';\nexport default /*#__PURE__*/React.forwardRef(MessageFilled);","// This icon file is generated automatically.\nvar PictureOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 632H136v-39.9l138.5-164.3 150.1 178L658.1 489 888 761.6V792zm0-129.8L664.2 396.8c-3.2-3.8-9-3.8-12.2 0L424.6 666.4l-144-170.7c-3.2-3.8-9-3.8-12.2 0L136 652.7V232h752v430.2zM304 456a88 88 0 100-176 88 88 0 000 176zm0-116c15.5 0 28 12.5 28 28s-12.5 28-28 28-28-12.5-28-28 12.5-28 28-28z\" } }] }, \"name\": \"picture\", \"theme\": \"outlined\" };\nexport default PictureOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PictureOutlinedSvg from \"@ant-design/icons-svg/es/asn/PictureOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar PictureOutlined = function PictureOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PictureOutlinedSvg\n  }));\n};\nPictureOutlined.displayName = 'PictureOutlined';\nexport default /*#__PURE__*/React.forwardRef(PictureOutlined);","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport QuestionCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/QuestionCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar QuestionCircleOutlined = function QuestionCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: QuestionCircleOutlinedSvg\n  }));\n};\nQuestionCircleOutlined.displayName = 'QuestionCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(QuestionCircleOutlined);","// This icon file is generated automatically.\nvar StepBackwardOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"0 0 1024 1024\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M347.6 528.95l383.2 301.02c14.25 11.2 35.2 1.1 35.2-16.95V210.97c0-18.05-20.95-28.14-35.2-16.94L347.6 495.05a21.53 21.53 0 000 33.9M330 864h-64a8 8 0 01-8-8V168a8 8 0 018-8h64a8 8 0 018 8v688a8 8 0 01-8 8\" } }] }, \"name\": \"step-backward\", \"theme\": \"outlined\" };\nexport default StepBackwardOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport StepBackwardOutlinedSvg from \"@ant-design/icons-svg/es/asn/StepBackwardOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar StepBackwardOutlined = function StepBackwardOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: StepBackwardOutlinedSvg\n  }));\n};\nStepBackwardOutlined.displayName = 'StepBackwardOutlined';\nexport default /*#__PURE__*/React.forwardRef(StepBackwardOutlined);","// This icon file is generated automatically.\nvar StepForwardOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"0 0 1024 1024\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M676.4 528.95L293.2 829.97c-14.25 11.2-35.2 1.1-35.2-16.95V210.97c0-18.05 20.95-28.14 35.2-16.94l383.2 301.02a21.53 21.53 0 010 33.9M694 864h64a8 8 0 008-8V168a8 8 0 00-8-8h-64a8 8 0 00-8 8v688a8 8 0 008 8\" } }] }, \"name\": \"step-forward\", \"theme\": \"outlined\" };\nexport default StepForwardOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport StepForwardOutlinedSvg from \"@ant-design/icons-svg/es/asn/StepForwardOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar StepForwardOutlined = function StepForwardOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: StepForwardOutlinedSvg\n  }));\n};\nStepForwardOutlined.displayName = 'StepForwardOutlined';\nexport default /*#__PURE__*/React.forwardRef(StepForwardOutlined);","// This icon file is generated automatically.\nvar TrophyOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M868 160h-92v-40c0-4.4-3.6-8-8-8H256c-4.4 0-8 3.6-8 8v40h-92a44 44 0 00-44 44v148c0 81.7 60 149.6 138.2 162C265.7 630.2 359 721.7 476 734.5v105.2H280c-17.7 0-32 14.3-32 32V904c0 4.4 3.6 8 8 8h512c4.4 0 8-3.6 8-8v-32.3c0-17.7-14.3-32-32-32H548V734.5C665 721.7 758.3 630.2 773.8 514 852 501.6 912 433.7 912 352V204a44 44 0 00-44-44zM184 352V232h64v207.6a91.99 91.99 0 01-64-87.6zm520 128c0 49.1-19.1 95.4-53.9 130.1-34.8 34.8-81 53.9-130.1 53.9h-16c-49.1 0-95.4-19.1-130.1-53.9-34.8-34.8-53.9-81-53.9-130.1V184h384v296zm136-128c0 41-26.9 75.8-64 87.6V232h64v120z\" } }] }, \"name\": \"trophy\", \"theme\": \"outlined\" };\nexport default TrophyOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport TrophyOutlinedSvg from \"@ant-design/icons-svg/es/asn/TrophyOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar TrophyOutlined = function TrophyOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: TrophyOutlinedSvg\n  }));\n};\nTrophyOutlined.displayName = 'TrophyOutlined';\nexport default /*#__PURE__*/React.forwardRef(TrophyOutlined);","// This icon file is generated automatically.\nvar UpCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M518.5 360.3a7.95 7.95 0 00-12.9 0l-178 246c-3.8 5.3 0 12.7 6.5 12.7H381c10.2 0 19.9-4.9 25.9-13.2L512 460.4l105.2 145.4c6 8.3 15.6 13.2 25.9 13.2H690c6.5 0 10.3-7.4 6.5-12.7l-178-246z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"up-circle\", \"theme\": \"outlined\" };\nexport default UpCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport UpCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/UpCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar UpCircleOutlined = function UpCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: UpCircleOutlinedSvg\n  }));\n};\nUpCircleOutlined.displayName = 'UpCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(UpCircleOutlined);"],"names":["CardHighlight","children","type","iconSize","className","icon","mockSelectCharacters","characters","sampleSize","map","c","id","mockGlyphs","glyphs","positiveQuantity","sample","negativeQuantity","selected","slice","dict","forEach","key","CharacterCard","size","character","dualTranslate","useLanguage","isBlurred","shouldBeBlurred","useBlurCards","imageURL","replace","clsx","style","width","name","src","process","fallback","PUBLIC_URL","alt","preview","title","cardId","StepSelectCharacters","user","announcement","onSelectCharacters","isLoading","useLoading","cardWidth","useCardWidth","useBooleanDictionary","selection","update","updateDict","count","length","selectedCharacters","keys","availableCharacters","useDelayedMock","fullWidth","pt","en","contained","wrap","disabled","ready","onClick","active","PhaseCharacterFiltering","players","state","info","useUser","useStep","step","setStep","translate","request","useAPICall","apiFunction","QUEM_SOU_EU_API","actionName","onSuccess","onError","successMessage","errorMessage","payload","action","useOnSubmitCharactersAPIRequest","FilterIcon","currentRound","round","current","phase","allowedPhase","PHASES","conditions","isReady","prepareGlyphs","positive","negative","Object","parseSelectedGlyphs","push","prepareGuesses","votes","result","playerEntry","playerId","split","SEPARATOR","characterId","Table","playerCharacterId","tableOrder","showAll","topKeys","Math","floor","bottomKeys","PositiveHighlight","MetricHighlight","YesIcon","NegativeHighlight","NoIcon","SELECTIONS_PLACEHOLDER","StepSelectGlyphs","onSelectGlyphs","roundType","glyphWidth","selectedWidth","positiveSelection","updatePositive","positiveSelections","negativeSelection","updateNegative","negativeSelections","entry","undefined","GlyphCard","height","trigger","glyphId","content","PopoverGlyph","disablePositive","disableNegative","PhaseCharacterDescription","goToNextStep","useOnSubmitGlyphsAPIRequest","PlayerIconsIcon","onPressButton","buttonText","time","circleColor","appearance","color","ScoringRules","PointsHighlight","PlayerGlyphs","player","done","useMemo","selectedGlyphs","withName","BoxCheckMarkIcon","index","Boolean","StepGuessing","onSubmitGuesses","characterWidth","useVotingMatch","setVotes","activateItem","isVotingComplete","isItemActive","useState","choseRandomly","setChoseRandomly","onGuessForMe","usedPlayers","usedCharacters","values","playerKeys","getEntryId","filter","includes","characterKeys","shuffle","newVotes","playerKey","selectOwnCard","useCallback","guesses","useEffectOnce","s","ribbons","votesDict","getRibbons","entryId","labels","sortPlayers","PhaseGuessing","useOnSubmitGuessesAPIRequest","EvaluateIcon","GalleryGuesses","playersSay","playersPoints","currentColor","currentPlayer","entries","orderBy","playersIds","isCorrect","correctGuesses","direction","backgroundColor","CrownFilled","MessageFilled","avatarId","getPlayersFromIds","join","quantity","keyPrefix","GarbageIcon","shape","StepGallery","gallery","activeIndex","setActiveIndex","isFirstGalleryRunThrough","useTemporarilyHidePlayersBar","getAvatarColorById","disableControls","barColor","windowDuration","leftClassName","rightClassName","StepRanking","ranking","goToPreviousStep","gainedPointsDescriptions","PictureOutlined","PhaseResults","useSlideShow","MirrorIcon","onClose","unskippable","FinalCharacter","meta","announcementIcon","TrophyIcon","Achievements","achievements","reference","achievementsReference","language","getActiveComponent","LoadingPage","PhaseLobby","PhaseRules","PhaseSetup","PhaseGameOver","PageError","theme","token","colorPrimary","THEME_COLORS","colorLink","gameCollection","GAME_COLLECTION","ACHIEVEMENTS","description","initialState","validation","setDict","isValid","dictCopy","reset","props","xmlns","viewBox","fill","d","ImageCardsIcon","cx","cy","r","stroke","strokeLinecap","strokeLinejoin","strokeWidth","CaretUpOutlined","ref","React","AntdIcon","_objectSpread","CaretUpOutlinedSvg","displayName","CrownFilledSvg","DownSquareOutlined","DownSquareOutlinedSvg","EyeInvisibleOutlined","EyeInvisibleOutlinedSvg","EyeOutlined","EyeOutlinedSvg","MessageFilledSvg","PictureOutlinedSvg","QuestionCircleOutlined","QuestionCircleOutlinedSvg","StepBackwardOutlined","StepBackwardOutlinedSvg","StepForwardOutlined","StepForwardOutlinedSvg","TrophyOutlined","TrophyOutlinedSvg","UpCircleOutlined","UpCircleOutlinedSvg"],"sourceRoot":""}