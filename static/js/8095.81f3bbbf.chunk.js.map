{"version":3,"file":"static/js/8095.81f3bbbf.chunk.js","mappings":"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","sources":["components/debug/DebugOnly.tsx","components/icons/GearsIcon.tsx","components/phases/PhaseAnnouncement.tsx","components/phases/PhaseContainer.tsx","utils/speech.ts","mock/players.ts","components/phases/lobby/Join.tsx","components/phases/lobby/Waiting.tsx","components/phases/lobby/CloudBackground.tsx","components/phases/PhaseLobby.tsx","components/phases/PhasePlaceholder.tsx","components/phases/PhaseRules.tsx","components/phases/PhaseSetup.tsx","components/phases/PhaseTimerReset.tsx","components/rules/CollapsibleRule.tsx","components/rules/PopoverRule.tsx","components/rules/RulesCarousel.tsx","components/rules/RulesList.tsx","components/rules/RulesModal.tsx","components/drawers/_internal/SectionMeta.tsx","components/drawers/_internal/SectionRankedPlayers.tsx","components/drawers/_internal/SectionSettings.tsx","components/players/PlayersStatusBar.tsx","components/drawers/GameInfoDrawer.tsx","components/session/Session.tsx","hooks/useGamePlayers.ts","hooks/useGameState.ts","hooks/useIdleRedirect.ts","components/text/Instruction.tsx","components/text/RoundsLeftInstruction.tsx","components/text/TextHighlight.tsx","components/text/Title.tsx","hooks/useDevFeatures.ts","hooks/useIsUserReady.ts","hooks/useMock.ts","hooks/useTemporarilyHidePlayersBar.ts","hooks/useUser.ts","utils/phases.ts"],"sourcesContent":["import { useDevFeatures } from 'hooks/useDevFeatures';\nimport { ReactNode } from 'react';\n\ntype DebugOnlyProps = {\n  dev?: boolean;\n  devOnly?: boolean;\n  div?: boolean;\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n};\n\n/**\n * Wrapper component for information only displayed if the debug mode is on\n * @param props\n * @returns\n */\nexport function DebugOnly({ children, div = false, dev = false, devOnly = false }: DebugOnlyProps) {\n  const { isDebugEnabled, isDevEnv } = useDevFeatures();\n\n  if (devOnly) {\n    if (div && isDevEnv) {\n      return <div>{children}</div>;\n    }\n\n    return isDevEnv ? <> {children}</> : <></>;\n  }\n\n  if ((dev && isDevEnv) || isDebugEnabled) {\n    if (div) {\n      return <div>{children}</div>;\n    }\n    return <>{children}</>;\n  }\n  return <></>;\n}\n","export function GearsIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#c5d3dd\"\n        d=\"M490.275 118.872h-17.48a94.19 94.19 0 00-5.332-19.865l15.146-8.744c6.939-4.006 9.316-12.878 5.31-19.816-4.006-6.939-12.877-9.315-19.816-5.31l-15.185 8.767a95.736 95.736 0 00-14.526-14.526l8.767-15.185c4.006-6.939 1.628-15.811-5.31-19.816-6.939-4.006-15.811-1.629-19.816 5.31l-8.744 15.146a94.206 94.206 0 00-19.865-5.332v-17.48c0-8.012-6.495-14.506-14.506-14.506-8.012 0-14.506 6.495-14.506 14.506v17.48a94.173 94.173 0 00-19.865 5.332l-8.745-15.146c-4.005-6.939-12.881-9.315-19.816-5.31-6.939 4.006-9.316 12.878-5.31 19.816l8.768 15.185a95.781 95.781 0 00-14.526 14.526l-15.185-8.767c-6.939-4.007-15.811-1.629-19.816 5.31-4.006 6.938-1.629 15.81 5.31 19.816l15.146 8.744a94.498 94.498 0 00-6.438 34.372c0 52.374 42.609 94.984 94.984 94.984a94.492 94.492 0 0034.371-6.438l8.744 15.146c2.687 4.654 7.563 7.256 12.576 7.256 2.461 0 4.955-.627 7.24-1.946 6.938-4.006 9.316-12.878 5.31-19.816l-8.767-15.185a95.736 95.736 0 0014.526-14.526l15.185 8.767a14.442 14.442 0 007.24 1.946c5.013 0 9.889-2.602 12.576-7.255 4.006-6.938 1.629-15.81-5.31-19.816l-15.146-8.744a94.206 94.206 0 005.332-19.865h17.48c8.012 0 14.506-6.495 14.506-14.506-.001-8.015-6.496-14.509-14.507-14.509z\"\n      ></path>\n      <circle\n        cx=\"378.917\"\n        cy=\"133.378\"\n        r=\"65.971\"\n        fill=\"#fdf6ec\"\n        transform=\"rotate(-80.8 378.882 133.43)\"\n      ></circle>\n      <path\n        fill=\"#fae2c0\"\n        d=\"M444.89 133.379c0 36.372-29.598 65.97-65.97 65.97-12.044 0-23.346-3.236-33.065-8.897a66.194 66.194 0 0013.757 1.443c36.382 0 65.97-29.598 65.97-65.97 0-24.328-13.236-45.63-32.885-57.062 29.789 6.351 52.193 32.863 52.193 64.516z\"\n      ></path>\n      <path\n        fill=\"#b6c4cf\"\n        d=\"M490.271 118.876h-17.474a94.173 94.173 0 00-5.33-19.869l15.14-8.747c6.944-4.008 9.318-12.875 5.311-19.809-4.008-6.944-12.875-9.318-19.809-5.31l-1.733 1.002c1.503 1.122 2.617 2.698 3.807 4.308 5.148 6.964 1.296 11.29-5.648 15.298l-11.612 6.931c-2.268 1.354-3.383 4.048-2.694 6.598 1.55 5.744 3.045 13.956 4.053 20.036a5.905 5.905 0 005.767 4.938l12.489.135c8.016 0 14.347 1.532 14.509 8.987.207 9.587-5.63 10.521-13.646 10.521l-12.4.056a5.914 5.914 0 00-5.758 4.699 149.76 149.76 0 01-3.912 14.588 5.917 5.917 0 002.659 6.97l10.883 6.281c6.944 4.008 9.318 12.885 5.31 19.819a14.149 14.149 0 01-3.807 4.308l1.733 1.002a14.367 14.367 0 007.234 1.944c5.01 0 9.889-2.595 12.575-7.254 4.008-6.934 1.633-15.811-5.311-19.819l-15.14-8.737a94.145 94.145 0 005.33-19.869h17.063c7.809 0 14.531-5.998 14.903-13.798.398-8.328-6.24-15.209-14.492-15.209zM441.846 24.38a14.485 14.485 0 00-16.112 1.082c5.671 4.359 7.365 12.364 3.687 18.727l-6.303 10.92c-1.412 2.446-.875 5.524 1.232 7.404a95.745 95.745 0 017.698 7.698c1.88 2.107 4.957 2.644 7.403 1.233l7.454-4.3a92.004 92.004 0 00-8.517-7.765l8.767-15.19c4.009-6.934 1.635-15.811-5.309-19.809zm5.31 198.18l-8.767-15.18a92.145 92.145 0 008.517-7.765l-7.454-4.3c-2.446-1.411-5.523-.874-7.403 1.233a95.557 95.557 0 01-7.697 7.697c-2.108 1.881-2.644 4.96-1.231 7.406l6.301 10.909c3.677 6.373 1.984 14.368-3.687 18.737a14.496 14.496 0 008.877 3.026c2.455 0 4.95-.621 7.234-1.944 6.944-4.007 9.318-12.875 5.31-19.819zM393.421 39.5V22.025c0-8.016-6.493-14.509-14.499-14.509a14.42 14.42 0 00-8.868 3.036 14.46 14.46 0 015.631 11.473v18.927a5.903 5.903 0 004.857 5.817c2.994.533 5.805 1.137 9.635 2.111 3.334.847 6.69-1.313 7.287-4.701l.675-3.827a89.922 89.922 0 00-4.718-.852z\"\n      ></path>\n      <path\n        fill=\"#9facba\"\n        d=\"M435.186 307.906v-30.014c0-5.622-4.558-10.18-10.18-10.18h-24.972c-4.876 0-9.043-3.463-9.989-8.246-4.449-22.492-13.3-43.401-25.619-61.792a10.163 10.163 0 011.263-12.844l17.669-17.669c3.975-3.975 3.975-10.421 0-14.396l-21.223-21.223c-3.975-3.975-10.421-3.975-14.396 0l-17.669 17.669a10.165 10.165 0 01-12.844 1.263 170.334 170.334 0 00-61.792-25.619c-4.783-.946-8.246-5.113-8.246-9.989V89.895c0-5.622-4.558-10.18-10.18-10.18h-30.014c-5.622 0-10.18 4.558-10.18 10.18v24.972c0 4.876-3.463 9.042-8.246 9.989-22.492 4.449-43.401 13.3-61.792 25.619a10.164 10.164 0 01-12.844-1.262l-17.669-17.669c-3.975-3.975-10.421-3.975-14.396 0l-21.223 21.223c-3.975 3.975-3.975 10.421 0 14.396l17.669 17.669a10.165 10.165 0 011.263 12.844 170.327 170.327 0 00-25.619 61.792c-.946 4.783-5.113 8.246-9.989 8.246H18.997c-5.622 0-10.18 4.558-10.18 10.18v30.014c0 5.622 4.558 10.18 10.18 10.18h24.972c4.876 0 9.042 3.463 9.989 8.246 4.449 22.492 13.3 43.401 25.619 61.792a10.163 10.163 0 01-1.263 12.844l-17.669 17.669c-3.975 3.975-3.975 10.421 0 14.396l21.223 21.223c3.975 3.975 10.421 3.975 14.396 0l17.669-17.669a10.165 10.165 0 0112.844-1.263 170.327 170.327 0 0061.792 25.619c4.783.946 8.246 5.113 8.246 9.989v24.972c0 5.622 4.558 10.18 10.18 10.18h30.014c5.622 0 10.18-4.558 10.18-10.18v-24.972c0-4.876 3.463-9.042 8.246-9.989 22.492-4.449 43.401-13.3 61.792-25.619a10.163 10.163 0 0112.844 1.263l17.669 17.669c3.975 3.975 10.421 3.975 14.396 0l21.223-21.223c3.975-3.975 3.975-10.421 0-14.396L365.69 400.97a10.165 10.165 0 01-1.263-12.844 170.334 170.334 0 0025.619-61.792c.946-4.783 5.113-8.246 9.989-8.246h24.972c5.622-.002 10.179-4.56 10.179-10.182z\"\n      ></path>\n      <path\n        fill=\"#8d9ca8\"\n        d=\"M308.19 429.282l3.89 9.354a170.236 170.236 0 01-56.642 22.304c-4.789.952-8.246 5.12-8.246 9.99v24.979c0 5.621-4.559 10.18-10.18 10.18h-20.039c5.621 0 10.18-4.559 10.18-10.18V458.67c0-4.87 3.457-9.038 8.246-9.99 22.484-4.449 41.56-8.337 59.956-20.661a10.166 10.166 0 0112.835 1.263zm-52.751-304.424a170.245 170.245 0 0156.642 22.304l5.146 3.313-4.28 8.627c-3.427 3.427-8.481 1.997-12.509-.698-18.396-12.324-42.554-18.046-65.038-22.494-4.789-.952-8.246-5.12-8.246-9.99V89.899c0-5.631-4.559-10.18-10.18-10.18h20.039c5.621 0 10.18 4.549 10.18 10.18v24.969c-.001 4.87 3.456 9.038 8.246 9.99zm124.555 193.231h20.039c-4.88 0-9.038 3.457-9.99 8.246-4.449 22.494-13.296 43.395-25.62 61.792-2.695 4.028-2.164 9.409 1.262 12.845l17.675 17.665c3.968 3.978 3.968 10.421 0 14.398l-21.222 21.222a10.177 10.177 0 01-14.398 0l-2.815-2.816 18.396-18.406c3.968-3.978 3.968-10.421 0-14.398l-17.675-17.665c-3.427-3.437-3.958-8.817-1.262-12.845 12.324-18.396 21.172-39.297 25.62-61.792.952-4.79 5.11-8.246 9.99-8.246zm20.04-50.38h-20.039c-4.88 0-9.038-3.457-9.99-8.246a170.368 170.368 0 00-25.62-61.792 10.168 10.168 0 011.262-12.835l17.675-17.675c3.968-3.978 3.968-10.42 0-14.398l-18.396-18.396 2.815-2.826c3.978-3.968 10.421-3.968 14.398 0l21.222 21.222c3.968 3.978 3.968 10.42 0 14.398l-17.675 17.675a10.165 10.165 0 00-1.262 12.835 170.35 170.35 0 0125.62 61.792c.952 4.789 5.11 8.246 9.99 8.246zm35.149 10.18v30.019c0 5.621-4.549 10.18-10.18 10.18h-20.039c5.631 0 10.18-4.559 10.18-10.18v-30.019c0-5.621-4.549-10.18-10.18-10.18h20.039c5.631 0 10.18 4.559 10.18 10.18z\"\n      ></path>\n      <circle cx=\"222.002\" cy=\"292.9\" r=\"129.082\" fill=\"#fdf6ec\"></circle>\n      <path\n        fill=\"#fae2c0\"\n        d=\"M351.087 292.899c0 71.29-57.794 129.084-129.084 129.084-17.685 0-34.538-3.557-49.888-10a128.853 128.853 0 0030.019 3.517c71.29 0 129.084-57.794 129.084-129.084 0-53.596-32.664-99.566-79.166-119.085 56.802 13.547 99.035 64.628 99.035 125.568z\"\n      ></path>\n      <path d=\"M222.002 156.302c-23.64 0-46.94 6.137-67.38 17.75a7.514 7.514 0 107.424 13.068c18.181-10.329 38.914-15.788 59.957-15.788 67.032 0 121.568 54.535 121.568 121.567s-54.535 121.568-121.568 121.568-121.567-54.535-121.567-121.568c0-32.126 12.415-62.422 34.957-85.307a7.516 7.516 0 00-10.707-10.547c-25.329 25.715-39.279 59.756-39.279 95.854 0 75.32 61.277 136.597 136.597 136.597s136.597-61.278 136.597-136.597c-.002-75.319-61.279-136.597-136.599-136.597z\"></path>\n      <path d=\"M490.275 155.399c12.143 0 22.021-9.878 22.021-22.021s-9.878-22.021-22.021-22.021h-11.243a101.828 101.828 0 00-2.406-8.963l9.74-5.624a21.88 21.88 0 0010.261-13.372 21.875 21.875 0 00-2.201-16.71c-6.071-10.516-19.566-14.132-30.081-8.06l-9.79 5.652a103.482 103.482 0 00-6.541-6.541l5.652-9.789c6.072-10.515 2.456-24.01-8.06-30.082a21.877 21.877 0 00-16.711-2.2 21.876 21.876 0 00-13.371 10.261l-5.624 9.74a102.272 102.272 0 00-8.963-2.406V22.021C400.938 9.878 391.06 0 378.917 0s-22.021 9.878-22.021 22.021v11.243a101.828 101.828 0 00-8.963 2.406l-5.624-9.739a21.87 21.87 0 00-13.373-10.261c-5.682-1.521-11.616-.741-16.708 2.2a21.873 21.873 0 00-10.26 13.372 21.871 21.871 0 002.2 16.709l5.652 9.79a103.748 103.748 0 00-6.541 6.541l-9.789-5.652a21.873 21.873 0 00-16.711-2.201c-5.682 1.522-10.43 5.166-13.371 10.26s-3.723 11.029-2.201 16.71a21.877 21.877 0 0010.26 13.371l9.739 5.623a101.13 101.13 0 00-4.218 20.315 177.912 177.912 0 00-20.097-5.224c-1.269-.251-2.189-1.352-2.189-2.617V89.895c0-9.757-7.938-17.695-17.695-17.695h-30.014c-9.757 0-17.695 7.938-17.695 17.695v24.972c0 1.265-.921 2.366-2.19 2.617-23.151 4.579-44.857 13.579-64.515 26.748a2.655 2.655 0 01-3.347-.333l-17.669-17.669c-6.898-6.899-18.124-6.9-25.023 0l-21.223 21.223c-6.898 6.899-6.898 18.125 0 25.024L73 190.146a2.657 2.657 0 01.333 3.347c-13.169 19.658-22.169 41.364-26.748 64.515-.251 1.269-1.352 2.19-2.617 2.19H18.997c-9.757 0-17.695 7.938-17.695 17.694v30.014c0 9.757 7.938 17.695 17.695 17.695h24.972c1.265 0 2.366.921 2.617 2.19 4.579 23.151 13.579 44.857 26.748 64.515a2.654 2.654 0 01-.333 3.347l-17.669 17.668c-6.898 6.899-6.898 18.125 0 25.024l21.223 21.223c6.899 6.898 18.125 6.898 25.023 0l17.67-17.669a2.657 2.657 0 013.347-.333c19.658 13.169 41.364 22.169 64.515 26.748 1.269.251 2.19 1.352 2.19 2.617v24.972c0 9.757 7.938 17.694 17.695 17.694h30.014c9.757 0 17.695-7.938 17.695-17.694v-24.972c0-1.265.921-2.366 2.189-2.617 23.151-4.579 44.857-13.579 64.516-26.748a2.656 2.656 0 013.347.333l17.669 17.669c6.899 6.898 18.124 6.898 25.024 0l21.223-21.223c6.898-6.899 6.898-18.125 0-25.024l-17.669-17.669a2.657 2.657 0 01-.333-3.347c13.169-19.658 22.169-41.364 26.748-64.515.251-1.269 1.352-2.19 2.617-2.19h24.972c9.757 0 17.695-7.938 17.695-17.695v-30.014c0-9.757-7.938-17.694-17.695-17.694h-24.972c-1.265 0-2.366-.921-2.617-2.19a177.743 177.743 0 00-6.133-22.888c6.323-.763 12.546-2.1 18.618-4.032l5.623 9.739c3.922 6.793 11.234 11.013 19.083 11.013 3.848 0 7.65-1.021 10.998-2.953 5.094-2.941 8.737-7.689 10.26-13.371s.741-11.617-2.2-16.711l-5.652-9.789a103.482 103.482 0 006.541-6.541l9.788 5.651a22.013 22.013 0 0010.999 2.954c7.85 0 15.162-4.22 19.083-11.012a21.88 21.88 0 002.201-16.71 21.877 21.877 0 00-10.26-13.371l-9.741-5.624a101.922 101.922 0 002.406-8.963zm-90.24 119.829h24.972a2.668 2.668 0 012.665 2.665v30.014a2.668 2.668 0 01-2.665 2.665h-24.972c-8.42 0-15.721 6.015-17.361 14.303-4.192 21.193-12.432 41.067-24.491 59.067-4.684 6.992-3.762 16.387 2.192 22.34l17.668 17.668a2.67 2.67 0 010 3.77l-21.222 21.222a2.67 2.67 0 01-3.77 0l-17.669-17.669c-5.953-5.953-15.348-6.875-22.34-2.192-18 12.059-37.873 20.298-59.068 24.491-8.287 1.639-14.302 8.941-14.302 17.361v24.972a2.669 2.669 0 01-2.665 2.665h-30.014a2.669 2.669 0 01-2.665-2.665v-24.972c0-8.42-6.015-15.721-14.303-17.361-21.194-4.192-41.067-12.432-59.067-24.491a17.612 17.612 0 00-9.818-2.978 17.684 17.684 0 00-12.522 5.17l-17.669 17.669a2.67 2.67 0 01-3.769 0l-21.22-21.223a2.668 2.668 0 010-3.769l17.668-17.668c5.955-5.953 6.876-15.349 2.193-22.34-12.058-18-20.298-37.874-24.491-59.067-1.639-8.288-8.94-14.303-17.361-14.303H18.997a2.669 2.669 0 01-2.665-2.665v-30.014a2.669 2.669 0 012.665-2.665h24.972c8.42 0 15.721-6.015 17.361-14.303 4.192-21.194 12.432-41.067 24.491-59.067 4.684-6.992 3.762-16.387-2.192-22.34L65.96 161.85a2.668 2.668 0 010-3.769l21.223-21.222a2.668 2.668 0 013.769 0l17.669 17.668c5.955 5.955 15.349 6.877 22.34 2.193 18-12.058 37.873-20.298 59.067-24.49 8.287-1.639 14.303-8.941 14.303-17.361V89.895a2.668 2.668 0 012.665-2.665h30.014a2.668 2.668 0 012.665 2.665v24.972c0 8.42 6.015 15.722 14.302 17.361 21.194 4.192 41.067 12.432 59.068 24.49 6.992 4.684 16.387 3.761 22.34-2.192l17.669-17.668a2.668 2.668 0 013.769 0l21.222 21.222a2.67 2.67 0 010 3.77l-17.668 17.668c-5.955 5.953-6.876 15.349-2.193 22.34 12.058 18 20.298 37.874 24.491 59.067 1.638 8.287 8.939 14.303 17.36 14.303zm63.671-100.971l15.146 8.745a6.945 6.945 0 013.257 4.245 6.942 6.942 0 01-.7 5.305 7.023 7.023 0 01-6.067 3.498 6.88 6.88 0 01-3.482-.939l-15.185-8.767a7.515 7.515 0 00-9.61 1.794 88.439 88.439 0 01-13.387 13.387 7.515 7.515 0 00-1.795 9.61l8.767 15.185c.934 1.617 1.182 3.502.699 5.306s-1.64 3.312-3.256 4.244a6.886 6.886 0 01-3.484.94 7.025 7.025 0 01-6.068-3.498l-8.744-15.146a7.514 7.514 0 00-9.235-3.245c-8.024 3.126-16.401 5.005-24.975 5.653a177.432 177.432 0 00-6.792-13.713l.123.002c40.52 0 73.486-32.966 73.486-73.486 0-12.007-2.975-23.931-8.602-34.482a7.514 7.514 0 00-10.167-3.094 7.515 7.515 0 00-3.094 10.167c4.471 8.382 6.834 17.86 6.834 27.409 0 32.233-26.224 58.457-58.456 58.457-2.906 0-5.76-.222-8.552-.635.126-.387 18.307-18.722 18.307-18.722 6.898-6.899 6.898-18.125 0-25.024l-21.223-21.224c-6.899-6.898-18.124-6.898-25.024 0l-17.669 17.669a2.651 2.651 0 01-3.253.385 58.076 58.076 0 01-1.042-10.906c0-32.233 26.224-58.457 58.456-58.457a58.242 58.242 0 0130.267 8.464 7.515 7.515 0 007.809-12.842 73.261 73.261 0 00-38.075-10.651c-40.52 0-73.486 32.966-73.486 73.486 0 .447.025.888.033 1.333a177.117 177.117 0 00-13.84-6.549c.532-9.081 2.448-17.951 5.75-26.428a7.513 7.513 0 00-3.245-9.235l-15.147-8.745c-1.617-.934-2.774-2.441-3.257-4.245s-.235-3.688.699-5.306a6.943 6.943 0 014.244-3.257 6.945 6.945 0 015.305.699l15.185 8.767a7.513 7.513 0 009.61-1.794 88.426 88.426 0 0113.386-13.386 7.515 7.515 0 001.795-9.611l-8.768-15.185c-.934-1.617-1.182-3.501-.699-5.305s1.64-3.311 3.259-4.246a6.945 6.945 0 015.303-.698 6.944 6.944 0 014.246 3.258l8.745 15.146a7.514 7.514 0 009.235 3.244 86.894 86.894 0 0118.281-4.907 7.514 7.514 0 006.372-7.427V22.02c0-3.855 3.136-6.991 6.991-6.991s6.991 3.136 6.991 6.991V39.5a7.514 7.514 0 006.372 7.427 86.866 86.866 0 0118.281 4.907 7.517 7.517 0 009.235-3.245l8.745-15.146a6.948 6.948 0 014.244-3.258 6.94 6.94 0 015.305.699c3.339 1.927 4.487 6.212 2.559 9.551l-8.767 15.185a7.513 7.513 0 001.795 9.61 88.439 88.439 0 0113.387 13.387 7.514 7.514 0 009.61 1.794l15.185-8.767c3.338-1.93 7.623-.78 9.551 2.559.934 1.617 1.182 3.501.699 5.305s-1.64 3.311-3.258 4.245l-15.146 8.744a7.514 7.514 0 00-3.245 9.235 86.92 86.92 0 014.907 18.282 7.514 7.514 0 007.427 6.372h17.48c3.855 0 6.991 3.136 6.991 6.991s-3.136 6.991-6.991 6.991h-17.48a7.514 7.514 0 00-7.427 6.372 86.894 86.894 0 01-4.907 18.281 7.517 7.517 0 003.246 9.236z\"></path>\n      <path d=\"M222.002 201.326a6.484 6.484 0 100-12.968 6.484 6.484 0 000 12.968zm-6.484 189.63a6.484 6.484 0 1012.968-.002 6.484 6.484 0 00-12.968.002zm-39.303-177.361a6.484 6.484 0 10-6.486-11.23 6.484 6.484 0 006.486 11.23zm89.201 167.466a6.484 6.484 0 1011.23-6.485 6.484 6.484 0 00-11.23 6.485z\"></path>\n      <circle cx=\"137.082\" cy=\"243.871\" r=\"6.483\" transform=\"rotate(-56.63 137.149 243.962)\"></circle>\n      <path d=\"M303.68 347.543a6.484 6.484 0 106.484-11.232 6.484 6.484 0 00-6.484 11.232zm-186.218-54.644a6.484 6.484 0 1012.968 0 6.484 6.484 0 00-12.968 0zm209.08 0a6.484 6.484 0 10-12.968.002 6.484 6.484 0 0012.968-.002zm-192.701 43.414a6.484 6.484 0 106.486 11.23 6.484 6.484 0 00-6.486-11.23z\"></path>\n      <circle cx=\"306.922\" cy=\"243.871\" r=\"6.483\" transform=\"rotate(-31.68 306.84 243.905)\"></circle>\n      <path d=\"M169.732 383.434a6.484 6.484 0 106.484-11.232 6.484 6.484 0 00-6.484 11.232zm98.057-169.839a6.484 6.484 0 106.484-11.232 6.484 6.484 0 00-6.484 11.232zm-53.302 72.821c0 2.099.878 4.103 2.422 5.526l26.146 24.094a7.488 7.488 0 005.091 1.989 7.514 7.514 0 005.095-13.04l-23.724-21.863v-56.831a7.516 7.516 0 00-15.03 0z\"></path>\n    </svg>\n  );\n}\n","import { ReactNode } from 'react';\nimport clsx from 'clsx';\n// Design Resource\nimport { Button } from 'antd';\n// Hooks\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { TimedButton } from 'components/buttons';\n\ntype PhaseAnnouncementProps = {\n  /**\n   * The title of the game phase\n   */\n  title: ReactNode;\n  /**\n   * The function called when the close button is clicked\n   */\n  onClose: GenericFunction;\n  /**\n   * The icon displayed to illustrate the phase (default: MultitaskIcon)\n   */\n  icon: ReactNode;\n  /**\n   * The Text\n   */\n  buttonText?: ReactNode;\n  /**\n   * Additional content of the announcement, usually a simple instruction\n   */\n  children?: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Current round number (default 0)\n   */\n  currentRound?: number;\n  /**\n   * Duration to override default duration.\n   * The default duration follows the current round going for 15, 10, then 5 seconds\n   */\n  duration?: number;\n  /**\n   * Prevents user from skipping the the announcement card\n   */\n  unskippable?: boolean;\n  /**\n   * Removes timer from the continue button\n   */\n  withoutTimer?: boolean;\n  /**\n   * In animation for the announcement\n   */\n  animationType?: AnimationType;\n};\n\n/**\n * Screen displayed before any game phase with title and illustration and some simple instruction\n */\nexport function PhaseAnnouncement({\n  buttonText,\n  icon,\n  title,\n  children,\n  currentRound = 0,\n  onClose,\n  className,\n  duration,\n  withoutTimer = false,\n  unskippable,\n  animationType = 'backInDown',\n}: PhaseAnnouncementProps) {\n  useTemporarilyHidePlayersBar();\n  const durationPerRound = [15, 10, 5]?.[currentRound] ?? 5;\n\n  return (\n    <div className={clsx('phase-announcement', getAnimationClass(animationType), className)}>\n      <Title>{title}</Title>\n\n      <span className=\"phase-announcement__icon\">{icon}</span>\n\n      {children}\n\n      {withoutTimer ? (\n        <Button type=\"primary\" onClick={onClose}>\n          <Translate pt=\"Prosseguir\" en=\"Continue\" custom={buttonText} />\n        </Button>\n      ) : (\n        <TimedButton\n          duration={duration || durationPerRound}\n          type=\"text\"\n          onClick={onClose}\n          onExpire={onClose}\n          disabled={unskippable}\n        >\n          <Translate pt=\"Prosseguir\" en=\"Continue\" custom={buttonText} />\n        </TimedButton>\n      )}\n    </div>\n  );\n}\n","import { ReactNode, useEffect, useRef } from 'react';\nimport clsx from 'clsx';\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { LoadingPage } from 'components/loaders';\nimport { PageError } from 'components/errors';\n\ntype PhaseContainerProps = {\n  info?: GameInfo;\n  phase?: string;\n  allowedPhase?: string;\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  fullScreen?: boolean;\n  white?: boolean;\n};\n\n/**\n * Wrapping container around a game screen\n * @param props\n * @returns\n */\nexport function PhaseContainer({\n  info,\n  phase,\n  allowedPhase = '',\n  children,\n  className = '',\n  fullScreen = false,\n  white = false,\n}: PhaseContainerProps) {\n  const { translate } = useLanguage();\n  const screenRef = useRef<HTMLScriptElement>(null);\n  const [, setScreenSize] = useGlobalState('screenSize');\n\n  useEffect(() => {\n    if (screenRef.current) {\n      let height = screenRef.current.offsetHeight;\n      let width = screenRef.current.offsetWidth;\n      setScreenSize([width, height]);\n    }\n  }, [screenRef.current?.offsetHeight, screenRef.current?.offsetWidth, setScreenSize]);\n\n  if (!info?.gameName || allowedPhase !== phase) {\n    return <LoadingPage />;\n  }\n\n  if (!phase) {\n    return (\n      <PageError description={translate('Estado do jogo não está correto', 'Game state is not correct')} />\n    );\n  }\n\n  const baseClass = 'phase-container';\n\n  return (\n    <main\n      className={clsx(\n        baseClass,\n        fullScreen && `${baseClass}--full-screen`,\n        white && `${baseClass}--white`,\n        className\n      )}\n      id=\"screen\"\n      ref={screenRef}\n    >\n      {children}\n    </main>\n  );\n}\n","import { getRandomItem } from './helpers';\n\n/**\n * Tells browser to speak out loud given sentence in given language in given volume\n * @param text\n * @param language\n * @param volume\n */\nexport function speak(text: DualLanguageValue, language: Language, volume: number): void {\n  const utterance = new SpeechSynthesisUtterance(text[language]);\n  utterance.lang = language === 'pt' ? 'pt-BR' : 'en-US';\n  utterance.volume = volume;\n  window.speechSynthesis.speak(utterance);\n}\n\n/**\n * Give variety to the lobby greeting message\n * @param name\n * @returns\n */\nexport function getRandomWelcomeMessage(name: string): DualLanguageValue {\n  const options = [\n    {\n      pt: `Bem-vindo, ${name}!`,\n      en: `Welcome, ${name}!`,\n    },\n    {\n      pt: `Olha ele, ou ela, ou elix, aqui!`,\n      en: `Look at you! Ready to play!`,\n    },\n    {\n      pt: `Eba! Você entrou`,\n      en: `Yay, you're in!`,\n    },\n    {\n      pt: `Saudações, ${name}!`,\n      en: `Greetings, ${name}!`,\n    },\n    {\n      pt: `${name} chegou para abalar essa geringonça!`,\n      en: `${name} is here!`,\n    },\n    {\n      pt: `Presente, presidente. ${name} está aqui, fessô!`,\n      en: `You are here, ${name}!`,\n    },\n    {\n      pt: `O jogo vai ser muito mais sensual agora que você entrou`,\n      en: `The game will be so much better now that you're here!`,\n    },\n  ];\n\n  return getRandomItem(options);\n}\n\nexport function getRandomPositiveReadyMessage(name: string): DualLanguageValue {\n  const options = [\n    {\n      pt: `Pronto! Aguarde os outros jogadores estarem prontos. Boa sorte, ${name}`,\n      en: `Done! Now wait for the other players. Good luck, ${name}`,\n    },\n    {\n      pt: `Pronto! Agora é so esperar esses manés`,\n      en: `Done and Ready to play! Were you born ready?`,\n    },\n    {\n      pt: `Pronto! Cá entre nós, estou torcendo por você!`,\n      en: `Done! And can I tell you a secret? I'm rooting for you!`,\n    },\n  ];\n\n  return getRandomItem(options);\n}\n\nexport function getRandomNeutralReadyMessage(name: string): DualLanguageValue {\n  const options = [\n    {\n      pt: `Agora só resta rezar, ${name}, porque o jogo vai começar mesmo assim!`,\n      en: `Now all you have left is to pray ${name} because the game is starting anyway!`,\n    },\n    {\n      pt: `Tudo bem. Não se preocupe em vencer, já que as chances são bem baixas.`,\n      en: `It's alright. Don't worry too much about winning, there's very little chance anyway.`,\n    },\n    {\n      pt: `Ok, ok, ok. Respire fundo, e vamos lá!`,\n      en: `Okay, okay okay. Take deep breaths and let's go!`,\n    },\n  ];\n\n  return getRandomItem(options);\n}\n\nexport function getRandomNegativeReadyMessage(name: string): DualLanguageValue {\n  const options = [\n    {\n      pt: `Vixi ${name}, se fudeu então, porque o jogo vai começar mesmo assim!`,\n      en: `Oh ${name}, you are screwed because the game is starting anyway!`,\n    },\n    {\n      pt: `Que carai, eim. As regras foram explicadas super bem. Agora vai assim mesmo!`,\n      en: `W.T.F, the rules were so clear! Well, the game is starting anyway`,\n    },\n    {\n      pt: `Segura o tchan, amarra o tchan, segura o tchan-tchan-tchan-tchan-tchan. Estou cantando pra esquecer que você vai me decepcionar`,\n      en: `Oh my... let's hope for the best!`,\n    },\n  ];\n\n  return getRandomItem(options);\n}\n","import { AVAILABLE_AVATAR_IDS } from 'utils/avatars';\nimport { getRandomItem } from 'utils/helpers';\n\n/**\n * Random names used during Dev\n */\nconst DEV_NAMES: string[] =\n  'Abe,Bob,Cam,Dan,Eva,Fin,Gus,Hal,Ian,Jan,Kim,Leo,Max,Nic,Ole,Pat,Quinn,Roy,Tim'.split(',');\n\nconst cacheNames: BooleanDictionary = {};\nconst cacheAvatars: BooleanDictionary = {};\n\nlet cacheMockedPlayers: GamePlayers = {};\n\n/**\n * Gets a random unique item from list based on the cached dictionary or used dictionary\n * @param source\n * @param used\n * @param cache\n * @returns\n */\nconst getRandomUniqueItemFromList = (\n  source: string[],\n  used: string[] = [],\n  cache: BooleanDictionary = {}\n) => {\n  let randomItem = '';\n  while (!randomItem || cache[randomItem] || used?.includes(randomItem)) {\n    randomItem = getRandomItem(source);\n  }\n  cache[randomItem] = true;\n  return randomItem;\n};\n\n/**\n * Get random user name\n * @param used\n * @returns\n */\nexport function mockPlayerName(used?: string[]): string {\n  return getRandomUniqueItemFromList(DEV_NAMES, used, cacheNames);\n}\n\n/**\n * Mock players to be used during dev\n * @param players\n * @param quantity\n * @param properties\n * @returns\n */\nexport function mockPlayers(\n  players: GamePlayers,\n  quantity: number = 10,\n  properties?: PlainObject\n): GamePlayers {\n  if (Object.keys(cacheMockedPlayers).length > 1) {\n    return {\n      ...cacheMockedPlayers,\n      ...players,\n    };\n  }\n\n  const usedNames: BooleanDictionary = {};\n  const usedAvatars: BooleanDictionary = {};\n  Object.values(players).forEach((player) => {\n    usedNames[player.name] = true;\n    usedAvatars[player.avatarId] = true;\n  });\n\n  const neededQuantity = quantity - Object.keys(players).length;\n\n  const mockedPlayers: Player[] = Array(neededQuantity)\n    .fill(0)\n    .map((e, i) => {\n      const name = mockPlayerName(Object.keys(usedNames));\n\n      return {\n        id: `_${name.toLowerCase()}`,\n        name,\n        avatarId: getRandomUniqueItemFromList(AVAILABLE_AVATAR_IDS, Object.keys(usedAvatars), cacheAvatars),\n        updatedAt: Date.now(),\n        ready: true,\n        ...properties,\n      };\n    });\n\n  const newMockedPlayers: GamePlayers = {\n    ...mockedPlayers.reduce((acc: GamePlayers, player) => {\n      acc[player.id] = player;\n      return acc;\n    }, {}),\n    ...players,\n  };\n\n  cacheMockedPlayers = newMockedPlayers;\n  return cacheMockedPlayers;\n}\n","import { useCallback, useEffect, useState } from 'react';\nimport { useEffectOnce } from 'react-use';\n// Ant Design Resources\nimport { Alert, Button, Image, Input, notification, Tooltip } from 'antd';\nimport { CaretLeftOutlined, CaretRightOutlined, InfoCircleOutlined } from '@ant-design/icons';\n// API & Hooks\nimport { GAME_API } from 'services/adapters';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useGlobalState } from 'hooks/useGlobalState';\n// Images\nimport avatars from 'assets/images/avatars.svg';\n// Services\nimport localStorage from 'services/localStorage';\n// Utils\nimport { AVAILABLE_AVATAR_IDS, AVATARS } from 'utils/avatars';\nimport { PUBLIC_URL } from 'utils/constants';\nimport { getRandomItem, isDevEnv } from 'utils/helpers';\nimport { getRandomWelcomeMessage, speak } from 'utils/speech';\n// Components\nimport { Translate } from 'components/language';\nimport { mockPlayerName } from 'mock/players';\n\nconst randomName = isDevEnv ? mockPlayerName() : undefined;\n\ntype JoinProps = {\n  info: GameInfo;\n  players: GamePlayers;\n  meta: GameMeta;\n};\n\nexport function Join({ players, info, meta }: JoinProps) {\n  const { language, translate } = useLanguage();\n  const { isLoading, setLoader } = useLoading();\n  const [gameId] = useGlobalState('gameId');\n  const [gameName] = useGlobalState('gameName');\n  const [, setUserId] = useGlobalState('userId');\n  const [, setUsername] = useGlobalState('username');\n  const [, setUserAvatarId] = useGlobalState('userAvatarId');\n  const [volume, setVolume] = useGlobalState('volume');\n\n  const [availableAvatars, setAvailableAvatars] = useState(AVAILABLE_AVATAR_IDS);\n  const [tempAvatar, setTempAvatar] = useState(getRandomItem(AVAILABLE_AVATAR_IDS));\n  const [tempUsername, setTempUsername] = useState('');\n  const [sameGameId, setSameGameId] = useState(false);\n\n  const [localStorageAvatar, setLocalStorageAvatar] = useState(null);\n\n  // Calculate available avatars and monitor if user chose a non-available one\n  useEffect(() => {\n    const usedAvatars = Object.values(players).reduce((acc: PlainObject, { avatarId, name }) => {\n      if (name !== tempUsername) {\n        acc[avatarId] = true;\n      }\n      return acc;\n    }, {});\n\n    const newAvailableAvatars = AVAILABLE_AVATAR_IDS.filter(\n      (avatarId) => usedAvatars[avatarId] === undefined\n    );\n\n    if (newAvailableAvatars.includes(tempAvatar) && !localStorageAvatar) {\n      setTempAvatar(getRandomItem(newAvailableAvatars));\n    }\n\n    setAvailableAvatars(newAvailableAvatars);\n  }, [players]); // eslint-disable-line\n\n  // Load name and avatarId from localStorage\n  useEffectOnce(() => {\n    const lsAvatarId = localStorage.get('avatarId');\n    const lsUsername = localStorage.get('username');\n    const lsGameId = localStorage.get('gameId');\n\n    if (lsAvatarId && lsUsername) {\n      setTempAvatar(localStorage.get('avatarId'));\n      setTempUsername(localStorage.get('username') ?? '');\n      setLocalStorageAvatar(lsAvatarId);\n\n      if (lsGameId === gameId) {\n        setSameGameId(true);\n      }\n    }\n  });\n\n  const onPreviousAvatar = useCallback(() => {\n    const index = availableAvatars.indexOf(tempAvatar);\n    const newIndex = index === 0 ? availableAvatars.length - 1 : index - 1;\n    setTempAvatar(availableAvatars[newIndex]);\n  }, [availableAvatars, tempAvatar]);\n\n  const onNextAvatar = useCallback(() => {\n    const index = availableAvatars.indexOf(tempAvatar);\n    const newIndex = index === availableAvatars.length - 1 ? 0 : index + 1;\n    setTempAvatar(availableAvatars[newIndex]);\n  }, [availableAvatars, tempAvatar]);\n\n  const onAddPlayer = useCallback(\n    async (_?: any, vol?: number) => {\n      try {\n        setLoader('add-player', true);\n        const response: PlainObject = await GAME_API.addPlayer({\n          gameId,\n          gameName,\n          playerName: tempUsername,\n          playerAvatarId: tempAvatar,\n        });\n\n        setUserId(response.data.id);\n        setUsername(response.data.name);\n        setUserAvatarId(response.data.avatarId);\n\n        localStorage.set({\n          username: response.data.name,\n          avatarId: response.data.avatarId,\n          gameId,\n        });\n\n        speak(\n          getRandomWelcomeMessage(response.data.name ?? translate('vei', 'babe')),\n          language,\n          vol ?? volume\n        );\n      } catch (e: any) {\n        notification.error({\n          message: translate(\n            'Vixi, o aplicativo encontrou um erro ao tentar te adicionar como jogador',\n            'Oops, the application failed when trying to add you as a player'\n          ),\n          description: JSON.stringify(e.message),\n          placement: 'bottomLeft',\n        });\n        console.error(e);\n      } finally {\n        setLoader('add-player', false);\n      }\n    },\n    [gameId, gameName, tempUsername, tempAvatar] // eslint-disable-line\n  );\n\n  const onEnterWithoutSound = () => {\n    setVolume(0);\n    onAddPlayer(null, 0);\n  };\n\n  const onEnterInput = (e: any) => {\n    if (e.key === 'Enter') {\n      onAddPlayer();\n    }\n  };\n\n  return (\n    <div className=\"lobby-join\">\n      <div className=\"lobby-join__card\">\n        <Image\n          alt={info?.title[language]}\n          src={`${PUBLIC_URL.BANNERS}${info?.gameName}-${language}.jpg`}\n          fallback={`${PUBLIC_URL.BANNERS}/em-breve.jpg`}\n          className=\"lobby-join__game-image\"\n        />\n        <h1 className=\"lobby-join__title\">\n          {Boolean(localStorageAvatar) ? (\n            <Translate pt=\"Bem-vindo de volta!\" en=\"Welcome Back!\" />\n          ) : (\n            <Translate pt=\"Selecione seu avatar\" en=\"Select your avatar\" />\n          )}\n        </h1>\n        <div className=\"lobby-join__avatar-selection\">\n          <Button type=\"dashed\" onClick={onPreviousAvatar} className=\"lobby-join__avatar-nav-button\">\n            <CaretLeftOutlined />\n          </Button>\n          <svg viewBox=\"0 0 100 100\" className=\"lobby-join__avatar-selection-image\">\n            <use href={avatars + `#avatar-${tempAvatar}`}></use>\n            <title>{AVATARS[tempAvatar].description[language]}</title>\n          </svg>\n          <Button type=\"dashed\" onClick={onNextAvatar} className=\"lobby-join__avatar-nav-button\">\n            <CaretRightOutlined />\n          </Button>\n        </div>\n        <div className=\"lobby-join__description\">\n          <small>{AVATARS[tempAvatar].description[language]}</small>\n        </div>\n\n        {Boolean(localStorageAvatar) ? (\n          <Alert\n            className=\"lobby-join__avatar-alert\"\n            type=\"success\"\n            message={translate(\n              'Você está de volta! Lembramos seu nome e avatar!',\n              \"You're back! We saved your name and avatar!\"\n            )}\n          />\n        ) : (\n          <Alert\n            className=\"lobby-join__avatar-alert\"\n            type=\"warning\"\n            message={translate(\n              'Se alguém selecionar um mesmo avatar, um avatar aleatório será atribuído à você.',\n              'If you selected the same avatar of someone else, a new random avatar will be given to you.'\n            )}\n          />\n        )}\n\n        {Boolean(sameGameId) && meta.isComplete && (\n          <Alert\n            className=\"lobby-join__avatar-alert\"\n            type=\"error\"\n            message={translate(\n              'Se você está retornando a um jogo, NÃO mude seu apelido! Se o apelido for modificado, você será adicionado como um novo jogador e tudo pode bugar.',\n              'If you are returning to a game, DO NOT change your nickname else the game might crash.'\n            )}\n          />\n        )}\n\n        <Input\n          className=\"lobby-join__name-input\"\n          onChange={(e) => setTempUsername(e.target.value.trim())}\n          placeholder={translate('Digite seu nome', 'Insert your name')}\n          value={tempUsername || randomName}\n          maxLength={10}\n          suffix={\n            <Tooltip title={translate('Máximo de 10 caracteres', '10 characters max')}>\n              <InfoCircleOutlined />\n            </Tooltip>\n          }\n          onKeyPress={onEnterInput}\n        />\n        <Button\n          className=\"lobby-join__join-button\"\n          type=\"primary\"\n          disabled={!Boolean(tempUsername) || isLoading}\n          onClick={onAddPlayer}\n          loading={isLoading}\n        >\n          <Translate pt=\"Entrar\" en=\"Enter\" />\n        </Button>\n        <Button\n          className=\"lobby-join__join-button-link\"\n          type=\"primary\"\n          ghost\n          disabled={!Boolean(tempUsername) || isLoading}\n          onClick={onEnterWithoutSound}\n          loading={isLoading}\n          size=\"small\"\n        >\n          <Translate pt=\"Entrar sem som\" en=\"Enter without sound\" />\n        </Button>\n      </div>\n    </div>\n  );\n}\n","import { useCallback } from 'react';\n// Ant Design Resources\nimport { Button, Image, message, notification, Typography } from 'antd';\n// API & Hooks\nimport { ADMIN_API } from 'services/adapters';\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\n// Images\nimport avatars from 'assets/images/avatars.svg';\n// Utils and Resources\nimport { PUBLIC_URL } from 'utils/constants';\n// Components\nimport { AdminOnlyContainer } from 'components/admin';\nimport { Translate } from 'components/language';\n\ntype WaitingProps = {\n  info: GameInfo;\n  players: GamePlayers;\n  meta: GameMeta;\n};\n\nexport function Waiting({ info, players }: WaitingProps) {\n  const { language, translate } = useLanguage();\n  const { isLoading, setLoader } = useLoading();\n  const [gameId] = useGlobalState('gameId');\n  const [gameName] = useGlobalState('gameName');\n  const [gameMeta] = useGlobalState('gameMeta');\n\n  const [username] = useGlobalState('username');\n  const [userAvatarId] = useGlobalState('userAvatarId');\n\n  const onLockGameAndStart = useCallback(async () => {\n    try {\n      setLoader('lock-game', true);\n      const response: PlainObject = await ADMIN_API.lockGame({\n        gameId,\n        gameName,\n      });\n      if (response.data.isLocked) {\n        message.success(\n          translate('Jogo trancado e iniciado com sucesso!', 'Game locked and initialized successfully')\n        );\n      }\n    } catch (e: any) {\n      notification.error({\n        message: translate(\n          'Vixi, o aplicativo encontrou um erro ao tentar trancar e iniciar o jogo',\n          'Oops, the application found an error while trying to lock and start the game'\n        ),\n        description: JSON.stringify(e.message),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n    } finally {\n      setLoader('lock-game', false);\n    }\n  }, [gameId, gameName, setLoader, translate]);\n\n  const numPlayers = Object.keys(players).length;\n  return (\n    <div className=\"lobby-waiting\">\n      <div className=\"lobby-waiting__card\">\n        <Image\n          alt={info?.title[language]}\n          src={`${PUBLIC_URL.BANNERS}${info?.gameName}-${language}.jpg`}\n          fallback={`${PUBLIC_URL.BANNERS}/em-breve.jpg`}\n        />\n\n        <h1 className=\"center\">{username || 'Fulano'},</h1>\n        <svg viewBox=\"0 0 100 100\" className=\"lobby-waiting__avatar\">\n          <use href={avatars + `#avatar-${userAvatarId}`}></use>\n        </svg>\n        <h3 className=\"center\">\n          <Translate\n            pt=\"Aguarde os outros jogadores entrarem.\"\n            en=\"Please, wait while other players join...\"\n          />\n        </h3>\n        <AdminOnlyContainer className=\"lobby-waiting__lock-button\" direction=\"vertical\">\n          <Typography.Text className=\"center padding\">\n            <Translate pt=\"Jogadores necessários\" en=\"Players needed\" />: {numPlayers}/{gameMeta.min}\n          </Typography.Text>\n          <Button\n            type=\"primary\"\n            danger\n            onClick={onLockGameAndStart}\n            disabled={isLoading || numPlayers < gameMeta.min}\n            loading={isLoading}\n            block\n          >\n            <Translate pt=\"Trancar e Iniciar Jogo\" en=\"Lock and Start Game\" />\n          </Button>\n        </AdminOnlyContainer>\n      </div>\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Utils\nimport { PUBLIC_URL } from 'utils/constants';\n\nfunction SingleCloud({ type, index }: { type: string; index?: number }) {\n  return (\n    <div className={`\"cloud-background__cloud cloud-background__cloud--${index}`}>\n      <img src={`${PUBLIC_URL.CLOUDS}${type}.png`} alt=\"cloud\" />\n    </div>\n  );\n}\n\nconst cloudData = [\n  {\n    backgroundPositionX: '0',\n  },\n  {\n    backgroundPositionX: '-300px',\n  },\n  {\n    backgroundPositionX: '-600px',\n  },\n  {\n    backgroundPositionX: '-900px',\n  },\n  {\n    backgroundPositionX: '-1200px',\n  },\n];\n\nfunction MultiCloud({ type, index }: { type: string; index: number }) {\n  return (\n    <div\n      className=\"cloud-background__cloud\"\n      style={{\n        backgroundImage: `url('${PUBLIC_URL.CLOUDS}${type}.png')`,\n        ...cloudData[index],\n      }}\n    ></div>\n  );\n}\n\nfunction getCloudComponent(type: string) {\n  switch (type) {\n    case 'eye-cloud':\n    case 'monster-eye-cloud':\n    case 'phone-cloud':\n    case 'retro-cloud':\n    case 'sheep-cloud':\n    case 'speech-cloud':\n      return SingleCloud;\n    case 'artsy-clouds':\n    case 'book-clouds':\n    case 'crime-clouds':\n    case 'halloween-clouds':\n    case 'letter-clouds':\n    case 'one-clouds':\n    case 'sky-clouds':\n      return MultiCloud;\n    default:\n      return SingleCloud;\n  }\n}\n\nfunction getCloudFileName(gameCode: string) {\n  return (\n    {\n      A: 'artsy-clouds',\n      C: 'book-clouds',\n      D: 'crime-clouds',\n      E: 'cyber-cloud',\n      G: 'sky-clouds',\n      H: 'crime-clouds',\n      L: 'phone-cloud',\n      M: 'sheep-cloud',\n      N: 'halloween-clouds',\n      O: 'retro-cloud',\n      P: 'speech-cloud',\n      R: 'monster-eye-cloud',\n      S: 'sky-clouds',\n      T: 'eye-cloud',\n      U: 'one-clouds',\n      X: 'letter-clouds',\n    }[gameCode] ?? 'cloud'\n  );\n}\n\ntype CloudBackgroundProps = {\n  gameCode?: string;\n};\n\nexport function CloudBackground({ gameCode = 'Z' }: CloudBackgroundProps) {\n  const cloudType = getCloudFileName(gameCode);\n  const CloudTypeComponent = getCloudComponent(cloudType);\n\n  const baseClass = 'cloud-background';\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${cloudType}`)}>\n      <div className=\"cloud-background__animation-0\">\n        <CloudTypeComponent index={0} type={cloudType} />\n      </div>\n\n      <div className=\"cloud-background__animation-1\">\n        <CloudTypeComponent index={1} type={cloudType} />\n      </div>\n\n      <div className=\"cloud-background__animation-2\">\n        <CloudTypeComponent index={2} type={cloudType} />\n      </div>\n\n      <div className=\"cloud-background__animation-3\">\n        <CloudTypeComponent index={3} type={cloudType} />\n      </div>\n\n      <div className=\"cloud-background__animation-4\">\n        <CloudTypeComponent index={4} type={cloudType} />\n      </div>\n    </div>\n  );\n}\n","// Constants\nimport { PHASES } from 'utils/phases';\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\n// Components\nimport { PhaseContainer } from 'components/phases';\nimport { AvatarEntry } from 'components/avatars';\nimport { Join } from './lobby/Join';\nimport { Waiting } from './lobby/Waiting';\nimport { CloudBackground } from './lobby/CloudBackground';\nimport { orderBy } from 'lodash';\nimport { AdminMenuDrawer } from 'components/admin';\n\ntype PhaseLobbyProps = {\n  players: GamePlayers;\n  info: GameInfo;\n  meta: GameMeta;\n};\n\nexport function PhaseLobby({ players, info, meta }: PhaseLobbyProps) {\n  const [userId] = useGlobalState('userId');\n  const [username] = useGlobalState('username');\n  const [userAvatarId] = useGlobalState('userAvatarId');\n\n  return (\n    <PhaseContainer phase=\"LOBBY\" allowedPhase={PHASES.DEFAULT.LOBBY} info={info}>\n      <div className=\"lobby__room\">\n        {orderBy(Object.values(players), 'updatedAt').map((player, index) => (\n          <AvatarEntry\n            key={player.name}\n            id={player.avatarId}\n            name={player.name}\n            className={`lobby__seat lobby__seat--${index}`}\n            animate\n          />\n        ))}\n\n        {userId && username && userAvatarId !== undefined ? (\n          <Waiting players={players} info={info} meta={meta} />\n        ) : (\n          <Join players={players} info={info} meta={meta} />\n        )}\n      </div>\n\n      <AdminMenuDrawer state={{ phase: 'LOBBY', round: { current: 0, total: 0 } }} players={players} />\n      <CloudBackground gameCode={info.gameCode} />\n    </PhaseContainer>\n  );\n}\n","// Components\nimport { PhaseContainer } from './index';\n\ntype PhasePlaceholderProps = {\n  info: GameInfo;\n  state: GameState;\n};\n\nexport function PhasePlaceholder({ info, state }: PhasePlaceholderProps) {\n  return (\n    <PhaseContainer info={info} phase=\"ANY\" allowedPhase=\"ANY\" className=\"phase-placeholder\">\n      {state?.phase ?? 'Unknown Phase'}\n    </PhaseContainer>\n  );\n}\n","// Ant Design Resources\nimport { Button, Layout, Space, Typography } from 'antd';\nimport { CheckCircleFilled, MehFilled, RobotFilled, SmileFilled } from '@ant-design/icons';\n// Utils\nimport { GAME_API } from 'services/adapters';\nimport {\n  getRandomNegativeReadyMessage,\n  getRandomNeutralReadyMessage,\n  getRandomPositiveReadyMessage,\n  speak,\n} from 'utils/speech';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useIsUserReady } from 'hooks/useIsUserReady';\nimport { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useMock } from 'hooks/useMock';\nimport { useUser } from 'hooks/useUser';\nimport { useGlobalState } from 'hooks/useGlobalState';\n// Components\nimport { LoadingPage } from 'components/loaders';\nimport { Translate } from 'components/language';\nimport { RulesCarousel } from '../rules';\n\ntype PhaseRulesProps = {\n  players: GamePlayers;\n  info: GameInfo;\n};\n\nexport function PhaseRules({ players, info }: PhaseRulesProps) {\n  const { isLoading } = useLoading();\n  const { language, translate } = useLanguage();\n  const isUserReady = useIsUserReady(players);\n  const user = useUser(players);\n  const [volume] = useGlobalState('volume');\n\n  const errorMessage = translate(\n    'Vixi, o aplicativo encontrou um erro ao tentar continuar',\n    'Oh no! The application found an error when trying to continue'\n  );\n\n  const onBeReady = useAPICall({\n    apiFunction: GAME_API.makePlayerReady,\n    actionName: 'be-ready',\n    successMessage: translate(\n      'Pronto! Aguarde os outros jogadores estarem prontos',\n      'Done! Now wait for the other players'\n    ),\n    errorMessage,\n    onSuccess: () => {\n      speak(getRandomPositiveReadyMessage(user.name), language, volume);\n    },\n  });\n\n  const onBeReadyIDK = useAPICall({\n    apiFunction: GAME_API.makePlayerReady,\n    actionName: 'be-ready',\n    successMessage: translate(\n      'Pronto! Aguarde os outros jogadores estarem prontos',\n      'Done! Now wait for the other players'\n    ),\n    errorMessage,\n    onSuccess: () => {\n      speak(getRandomNeutralReadyMessage(user.name), language, volume);\n    },\n  });\n\n  const onBeReadyQue = useAPICall({\n    apiFunction: GAME_API.makePlayerReady,\n    actionName: 'be-ready',\n    successMessage: translate(\n      'Vixi, se fudeu então, porque o jogo vai começar!',\n      'Sorry, you are screwed because the game is starting anyway!'\n    ),\n    errorMessage,\n    onSuccess: () => {\n      speak(getRandomNegativeReadyMessage(user.name), language, volume);\n    },\n  });\n\n  // DEV: Auto-ready\n  useMock(() => onBeReady({}), []);\n\n  if (!info?.gameName) {\n    return <LoadingPage />;\n  }\n\n  return (\n    <Layout.Content className=\"phase-rules\">\n      <Typography.Title className=\"center\">\n        <Translate pt=\"Regras do Jogo\" en=\"Game Rules\" />\n      </Typography.Title>\n\n      <RulesCarousel info={info} className=\"phase-rules__carousel\" ruleClass=\"phase-rules__rule\" />\n\n      <Space className=\"phase-rules__actions\" wrap>\n        <Button\n          type=\"primary\"\n          icon={isUserReady ? <CheckCircleFilled /> : <SmileFilled />}\n          disabled={isLoading || isUserReady}\n          onClick={() => onBeReady({})}\n          loading={isLoading}\n        >\n          <Translate\n            pt=\"Entendi tudo e estou pronto para jogar!\"\n            en=\"I understood everything and I'm ready to play!\"\n          />\n        </Button>\n        <Button\n          icon={isUserReady ? <CheckCircleFilled /> : <MehFilled />}\n          disabled={isLoading || isUserReady}\n          onClick={() => onBeReadyIDK({})}\n          loading={isLoading}\n        >\n          <Translate pt=\"Não entendi nada, mas vamos lá!\" en=\"I don't get it but let's go!\" />\n        </Button>\n        <Button\n          type=\"primary\"\n          danger\n          icon={isUserReady ? <CheckCircleFilled /> : <RobotFilled />}\n          disabled={isLoading || isUserReady}\n          onClick={() => onBeReadyQue({})}\n          loading={isLoading}\n        >\n          <Translate pt=\"Quê?\" en=\"What?\" />\n        </Button>\n      </Space>\n    </Layout.Content>\n  );\n}\n","// Constants\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\nimport { PhaseContainer } from './PhaseContainer';\nimport { GearsIcon } from 'components/icons/GearsIcon';\n\ntype PhaseSetupProps = {\n  info: GameInfo;\n  state: GameState;\n};\n\nexport function PhaseSetup({ info, state }: PhaseSetupProps) {\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.DEFAULT.SETUP} className=\"setup\">\n      <div className=\"phase-announcement\">\n        <Title>\n          <Translate pt=\"Preparando o jogo...\" en=\"Setting up....\" />\n        </Title>\n\n        <GearsIcon className=\"phase-announcement__icon\" />\n\n        <Instruction>\n          <Translate pt=\"Aguarde um momento\" en=\"Just a moment\" />\n        </Instruction>\n      </div>\n    </PhaseContainer>\n  );\n}\n","import { useEffectOnce } from 'react-use';\n\ntype PhaseTimerResetProps = {\n  goToNextStep: GenericFunction;\n};\n\n/**\n * Component to be place in between sequential PhaseAnnouncement to reset the automatic timer\n * @param props\n * @returns\n */\nexport function PhaseTimerReset({ goToNextStep }: PhaseTimerResetProps) {\n  useEffectOnce(() => {\n    const delay = () => new Promise((res) => setTimeout(res, 100));\n    const next = async () => {\n      await delay();\n      goToNextStep();\n    };\n\n    next();\n  });\n\n  return <div></div>;\n}\n","// Ant Design Resources\nimport { Collapse } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Instruction } from 'components/text';\nimport { ReactNode } from 'react';\n\ntype CollapsibleRuleProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * The title of the panel (default: Rules/Regras)\n   */\n  title?: string;\n};\nexport function CollapsibleRule({ children, title }: CollapsibleRuleProps): JSX.Element {\n  const { translate } = useLanguage();\n\n  return (\n    <Instruction contained>\n      <Collapse ghost>\n        <Collapse.Panel header={translate('Regras', 'Rules', title)} key=\"1\">\n          {children}\n        </Collapse.Panel>\n      </Collapse>\n    </Instruction>\n  );\n}\n","import { useState } from 'react';\nimport { useEffectOnce } from 'react-use';\n// Ant Design Resources\nimport { Button, Popover } from 'antd';\nimport { ReadOutlined } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\n\ntype PopoverRuleProps = {\n  content: any;\n  showLabel?: boolean;\n  label?: any;\n};\n\nexport function PopoverRule({ content, label, showLabel = true }: PopoverRuleProps): JSX.Element {\n  const [isActive, setActive] = useState(false);\n\n  useEffectOnce(() => {\n    setActive(showLabel);\n  });\n\n  return (\n    <div className=\"popover-rule\">\n      <Popover placement=\"bottomLeft\" content={content} trigger=\"click\">\n        <Button\n          shape={'round'}\n          size=\"large\"\n          onMouseOver={() => setActive(true)}\n          onMouseLeave={() => setActive(showLabel ?? false)}\n        >\n          <ReadOutlined />\n          {isActive && Boolean(label) ? label : <Translate pt=\" Regras\" en=\" Rules\" />}\n        </Button>\n      </Popover>\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Typography, Image, Carousel, Button } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Constants\nimport { PUBLIC_URL } from 'utils/constants';\nimport { DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\n\ntype RulesCarouselProps = {\n  info: GameInfo;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  ruleClass?: string;\n};\n\nexport function RulesCarousel({ info, className = '', ruleClass = '' }: RulesCarouselProps): JSX.Element {\n  const { language } = useLanguage();\n  const settings = {\n    prevArrow: (\n      <Button>\n        <DoubleLeftOutlined className=\"rules-carousel__nav rules-carousel__nav--left\" />\n      </Button>\n    ),\n    nextArrow: (\n      <Button>\n        <DoubleRightOutlined className=\"rules-carousel__nav rules-carousel__nav--right\" />\n      </Button>\n    ),\n  };\n\n  return (\n    <Carousel\n      className={clsx('rules-carousel', className)}\n      autoplay\n      autoplaySpeed={15000}\n      arrows\n      {...settings}\n    >\n      {info.rules[language].map((rule, index) => (\n        <div className={clsx('rules-carousel__rule', ruleClass)} key={rule}>\n          <span className=\"rules-carousel__rule-number\">{index + 1}</span>\n\n          <Image\n            className=\"rules-carousel__image\"\n            src={\n              index === 0\n                ? `${PUBLIC_URL.BANNERS}${info.gameName}-${language}.jpg`\n                : `${PUBLIC_URL.RULES}game-rule-${info.gameName}-${index}.jpg`\n            }\n            fallback={`${PUBLIC_URL.RULES}game-rule-not-found.jpg`}\n            alt={rule}\n          />\n          <Typography.Paragraph className=\"rules-carousel__rule-text\">{rule}</Typography.Paragraph>\n        </div>\n      ))}\n    </Carousel>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n\ntype RulesListProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n};\n\nexport function RulesList({ children, className = '' }: RulesListProps): JSX.Element {\n  return <ul className={clsx('rules-list', className)}>{children}</ul>;\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, ButtonProps, Modal } from 'antd';\nimport { ReadOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Translate } from 'components/language';\nimport { RulesCarousel } from 'components/rules';\n\ntype RulesModalProps = {\n  gameInfo: GameInfo;\n  buttonProps?: ButtonProps;\n};\n\nexport function RulesModal({ gameInfo, buttonProps }: RulesModalProps): JSX.Element {\n  const { language, translate } = useLanguage();\n  const [isVisible, setVisibility] = useState(false);\n\n  const onCloseModal = () => {\n    setVisibility(false);\n  };\n\n  return (\n    <>\n      <Button type=\"default\" onClick={() => setVisibility(true)} icon={<ReadOutlined />} {...buttonProps}>\n        <Translate pt=\"Regras\" en=\"Rules\" />\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`${translate('Regras', 'Rules')}: ${gameInfo.title[language]}`}\n          visible={isVisible}\n          onCancel={onCloseModal}\n          className=\"rules-modal\"\n          footer={[\n            <Button key=\"close\" onClick={onCloseModal}>\n              <Translate pt=\"Fechar\" en=\"Close\" />\n            </Button>,\n          ]}\n        >\n          <RulesCarousel info={gameInfo} />\n        </Modal>\n      )}\n    </>\n  );\n}\n","// Ant Design Resources\nimport { Avatar as AntAvatar } from 'antd';\n// Components\nimport { Translate } from 'components/language';\n\ntype SectionMetaProps = {\n  round: GameRound;\n  groupScore?: number;\n};\n\nexport function SectionMeta({ round, groupScore }: SectionMetaProps) {\n  return (\n    <ul className=\"game-info-drawer__meta\">\n      <li>\n        <div className=\"game-info-drawer__label-inline\">\n          <Translate pt=\"Rodada:\" en=\"Round:\" />\n        </div>\n        <AntAvatar className=\"game-info-drawer__round\" size=\"small\">\n          {round.current}\n        </AntAvatar>\n        <span className=\"game-info-drawer__inline-separator\">\n          <Translate pt=\"de\" en=\"out of\" />\n        </span>\n        <AntAvatar className=\"game-info-drawer__round\" size=\"small\">\n          {round.total}\n        </AntAvatar>\n      </li>\n\n      {Boolean(groupScore) && (\n        <li>\n          <div className=\"game-info-drawer__label-inline\">\n            <Translate pt=\"Pontos:\" en=\"Points:\" />\n          </div>\n          <AntAvatar\n            className=\"game-info-drawer__round\"\n            size=\"default\"\n            style={{ backgroundColor: 'gold', color: 'black' }}\n          >\n            {groupScore}\n          </AntAvatar>\n        </li>\n      )}\n    </ul>\n  );\n}\n","import { useMemo } from 'react';\nimport { orderBy } from 'lodash';\n// Ant Design Resources\nimport { Badge, Tag } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useUser } from 'hooks/useUser';\n// Utils\nimport { AVATARS } from 'utils/avatars';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\n\ntype SectionRankedPlayersProps = {\n  players: GamePlayers;\n};\n\nexport function SectionRankedPlayers({ players }: SectionRankedPlayersProps) {\n  const { language } = useLanguage();\n  const user = useUser(players);\n\n  const rankedPlayers = useMemo(\n    () => orderBy(Object.values(players), ['score', 'name'], ['desc', 'asc']),\n    [players]\n  );\n  return (\n    <ul>\n      {rankedPlayers.map((player, index) => {\n        return (\n          <div className=\"game-info-drawer__ranked-player\" key={`ranked-${player.name}`}>\n            {index + 1}.{' '}\n            <Badge count={player.score} className=\"game-info-drawer__avatar-with-badge\">\n              <Avatar id={player.avatarId} shape=\"square\" />\n            </Badge>\n            {player.name}, {AVATARS[player.avatarId].description[language]}\n            {player.id === user.id && (\n              <Tag color={AVATARS[player.avatarId].color} className=\"game-info-drawer__avatar-tag\">\n                <Translate pt=\"VOCÊ\" en=\"YOU\" />\n              </Tag>\n            )}\n          </div>\n        );\n      })}\n    </ul>\n  );\n}\n","// Ant Design Resources\nimport { Button, Switch, Tooltip } from 'antd';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n// Hooks\nimport { useDevFeatures } from 'hooks/useDevFeatures';\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useLocalStorage } from 'hooks/useLocalStorage';\n// Components\nimport { LanguageSwitch, Translate } from 'components/language';\n\nexport function SectionSettings() {\n  const [blurEnabled, setBlurEnabled] = useGlobalState('blurEnabled');\n  const [isAdmin] = useGlobalState('isAdmin');\n  const [isAdminEnabled, setIsAdminEnabled] = useGlobalState('isAdminEnabled');\n  const [volume, setVolume] = useGlobalState('volume');\n  const { isDebugEnabled, toggleDevFeatures } = useDevFeatures();\n  const [, setLocalStorage] = useLocalStorage();\n\n  const onBlurSwitchClick = (value: boolean) => {\n    setBlurEnabled(value);\n    setLocalStorage({ blurEnabled: value });\n  };\n\n  const onSoundSwitchClick = (value: boolean) => {\n    setVolume(value ? 0.5 : 0);\n    setLocalStorage({ volume: value ? 0.5 : 0 });\n  };\n\n  return (\n    <div className=\"game-info-drawer__section-settings\">\n      <div className=\"game-info-drawer__settings-entry\">\n        <div className=\"game-info-drawer__switch-label\">\n          <Translate pt=\"Idioma\" en=\"Language\" />{' '}\n          <Tooltip\n            title={\n              <Translate\n                pt=\"Mudar língua do aplicativo, as cartas do jogo continuarão em sua língua original\"\n                en=\"Change app language, the game cards will remain in its original language\"\n              />\n            }\n          >\n            <Button type=\"text\" shape=\"circle\" icon={<InfoCircleOutlined />} size=\"small\" />\n          </Tooltip>\n        </div>\n\n        <LanguageSwitch />\n      </div>\n\n      <div className=\"game-info-drawer__settings-entry\">\n        <div className=\"game-info-drawer__switch-label\">\n          <Translate pt=\"Som\" en=\"Sound\" />\n          <Tooltip\n            title={<Translate pt=\"Muda ou desmuda sons no aplicativo\" en=\"Mute/Unmute sounds in the app\" />}\n          >\n            <Button type=\"text\" shape=\"circle\" icon={<InfoCircleOutlined />} size=\"small\" />\n          </Tooltip>\n        </div>\n\n        <Switch\n          checkedChildren=\"on\"\n          unCheckedChildren=\"off\"\n          checked={volume > 0}\n          onClick={onSoundSwitchClick}\n        />\n      </div>\n\n      <div className=\"game-info-drawer__settings-entry\">\n        <div className=\"game-info-drawer__switch-label\">\n          <Translate pt=\"Botão Credo\" en=\"Blur Button\" />\n          <Tooltip\n            title={\n              <Translate\n                pt=\"Adiciona um botão em todas Cartas-imagem para embaça-las caso você tenha alguma fobia\"\n                en=\"Adds a button to every Image Card to blur them in case you have any phobia\"\n              />\n            }\n          >\n            <Button type=\"text\" shape=\"circle\" icon={<InfoCircleOutlined />} size=\"small\" />\n          </Tooltip>\n        </div>\n\n        <Switch\n          checkedChildren=\"on\"\n          unCheckedChildren=\"off\"\n          checked={blurEnabled}\n          onClick={onBlurSwitchClick}\n        />\n      </div>\n\n      <div className=\"game-info-drawer__settings-entry\">\n        <div className=\"game-info-drawer__switch-label\">\n          Debug\n          <Tooltip\n            title={\n              <Translate\n                pt=\"Ativa coisas para ajudar o desenvolvedor a encontrar error. Use apenas quando instruído\"\n                en=\"Activate debug mode. Only turn on when instructed\"\n              />\n            }\n          >\n            <Button type=\"text\" shape=\"circle\" icon={<InfoCircleOutlined />} size=\"small\" />\n          </Tooltip>\n        </div>\n\n        <Switch\n          checkedChildren=\"on\"\n          unCheckedChildren=\"off\"\n          checked={isDebugEnabled}\n          onClick={toggleDevFeatures}\n        />\n      </div>\n\n      {isAdmin && (\n        <div className=\"game-info-drawer__settings-entry\">\n          <div className=\"game-info-drawer__switch-label\">\n            Admin\n            <Tooltip title={<Translate pt=\"Ativa recursos para o administrador\" en=\"Activate admin mode\" />}>\n              <Button type=\"text\" shape=\"circle\" icon={<InfoCircleOutlined />} size=\"small\" />\n            </Tooltip>\n          </div>\n\n          <Switch\n            checkedChildren=\"on\"\n            unCheckedChildren=\"off\"\n            checked={isAdminEnabled}\n            onClick={() => setIsAdminEnabled((s) => !s)}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { orderBy } from 'lodash';\n// Ant Design Resources\nimport { Badge } from 'antd';\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\n\ntype PlayersStatusBarProps = {\n  players: GamePlayers;\n  onClick: GenericFunction;\n};\n\nexport function PlayersStatusBar({ players, onClick }: PlayersStatusBarProps) {\n  const [showPlayersBar] = useGlobalState('showPlayersBar');\n\n  if (!showPlayersBar) {\n    return <></>;\n  }\n\n  const sortedPlayers = orderBy(Object.values(players), ['name']);\n\n  return (\n    <button onClick={onClick} className={clsx('players-status-bar', getAnimationClass('slideInRight'))}>\n      <ul className=\"players-status-bar__list\">\n        {Object.values(sortedPlayers).map((player) => {\n          return (\n            <li className=\"players-status-bar__player\" key={`players-status-bar-${player.id}`}>\n              <Badge dot color={player.ready ? 'green' : 'gray'}>\n                <Avatar\n                  id={player.avatarId}\n                  alt={player.name}\n                  size=\"small\"\n                  className={clsx(!player.ready && 'players-status-bar__avatar-not-ready')}\n                />\n              </Badge>\n              {player.ready && (\n                <div className=\"players-status-bar__ready\">\n                  <div className=\"players-status-bar__ready-speech\">\n                    <Translate pt=\"Pronto!\" en=\"I'm ready!\" />\n                  </div>\n                </div>\n              )}\n            </li>\n          );\n        })}\n      </ul>\n    </button>\n  );\n}\n","import { useToggle } from 'react-use';\n// Ant Design Resources\nimport { Button, Divider, Drawer, Image, Space } from 'antd';\nimport { SettingOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { PUBLIC_URL } from 'utils/constants';\n// Components\nimport { SectionMeta } from './_internal/SectionMeta';\nimport { SectionRankedPlayers } from './_internal/SectionRankedPlayers';\nimport { SectionSettings } from './_internal/SectionSettings';\nimport { DebugOnly } from 'components/debug';\nimport { RulesModal } from 'components/rules';\nimport { Translate } from 'components/language';\nimport { PlayersStatusBar } from '../players/PlayersStatusBar';\n\ntype GameInfoDrawerProps = {\n  players: GamePlayers;\n  info: GameInfo;\n  state: GameState;\n  userId: string;\n};\n\nexport function GameInfoDrawer({ players, state, info, userId }: GameInfoDrawerProps) {\n  const { language } = useLanguage();\n  const [isDrawerOpen, toggleDrawer] = useToggle(false);\n  const [isSettingsOpen, toggleSettingsDrawer] = useToggle(false);\n\n  if (state.phase === 'LOBBY') {\n    return <></>;\n  }\n\n  return (\n    <>\n      <PlayersStatusBar players={players} onClick={toggleDrawer} />\n      <div className=\"game-info-drawer\">\n        <Button size=\"small\" className=\"game-info-drawer__button\" onClick={toggleDrawer}>\n          {info.title?.[language] ?? '?'} <SettingOutlined />\n          <DebugOnly devOnly>{userId}</DebugOnly>\n        </Button>\n\n        <Drawer\n          title={info?.title?.[language]}\n          placement=\"right\"\n          closable={true}\n          onClose={toggleDrawer}\n          visible={isDrawerOpen}\n        >\n          <Image\n            alt={info?.title?.[language]}\n            src={`${PUBLIC_URL.BANNERS}${info.gameName}-${language}.jpg`}\n            fallback={`${PUBLIC_URL.BANNERS}/em-breve-${language}.jpg`}\n            preview={false}\n          />\n\n          <Divider />\n\n          <Space>\n            <Button type=\"default\" onClick={() => toggleSettingsDrawer(true)} icon={<SettingOutlined />}>\n              <Translate pt=\"Configurações\" en=\"Settings\" />\n            </Button>{' '}\n            <RulesModal gameInfo={info} />\n            <Drawer\n              title={<Translate pt=\"Configurações\" en=\"Settings\" />}\n              width={200}\n              closable={false}\n              onClose={toggleSettingsDrawer}\n              visible={isSettingsOpen}\n            >\n              <SectionSettings />\n            </Drawer>\n          </Space>\n\n          <Divider />\n\n          <SectionMeta round={state?.round || 0} groupScore={state?.groupScore} />\n\n          <Divider />\n\n          <SectionRankedPlayers players={players} />\n        </Drawer>\n      </div>\n    </>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useTitle } from 'react-use';\n// Hooks\nimport { useGameState } from 'hooks/useGameState';\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useGamePlayers } from 'hooks/useGamePlayers';\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport GAME_LIST from 'utils/info';\nimport { isDevEnv } from 'utils/helpers';\n// Components\nimport { PhaseLobby } from 'components/phases';\nimport { GameInfoDrawer } from 'components/drawers';\nimport { AdminMenuDrawer } from 'components/admin';\nimport { useIdleRedirect } from 'hooks/useIdleRedirect';\n\ntype SessionProps = {\n  gameId: GameId;\n  gameCollection: GameName;\n  getActiveComponent: (args: any) => any;\n};\n\nexport function Session({ gameId, gameCollection, getActiveComponent }: SessionProps) {\n  const { language } = useLanguage();\n  const players = useGamePlayers(gameId, gameCollection);\n  const state = useGameState(gameId, gameCollection);\n  const [userId] = useGlobalState('userId');\n  const [gameMeta] = useGlobalState('gameMeta');\n  const [info, setInfo] = useState<any>({});\n  const gameName = info?.title ?? '';\n\n  useIdleRedirect();\n\n  useTitle(`${gameName ? `${gameName[language]} | ` : ''}Tarde Divertida`);\n\n  useEffect(() => {\n    if (isDevEnv) {\n      console.table(players);\n    }\n  }, [players, state]);\n\n  useEffect(() => {\n    if (isDevEnv) {\n      console.info({ state });\n    }\n  }, [state]);\n\n  // Update game description as the gameId comes in\n  useEffect(() => {\n    setInfo(gameId?.[0] ? GAME_LIST[gameId[0]] : {});\n  }, [gameId]);\n\n  if (!userId) {\n    return <PhaseLobby players={players} info={info} meta={gameMeta} />;\n  }\n\n  const ActiveComponent: any = getActiveComponent(state.phase);\n\n  return (\n    <>\n      <GameInfoDrawer players={players} state={state} info={info} userId={userId} />\n      <ActiveComponent players={players} state={state} info={info} meta={gameMeta} />\n      <AdminMenuDrawer state={state} players={players} />\n    </>\n  );\n}\n","import { notification } from 'antd';\nimport { useDocument } from 'react-firebase-hooks/firestore';\nimport { doc } from 'firebase/firestore';\n// Services\nimport { firestore } from 'services/firebase';\n\nexport function useGamePlayers(gameId: GameId, gameName: GameName): Players | {} {\n  const docPath = `${gameName}/${gameId}/session/players`;\n  const [snapshot, loading, error] = useDocument(doc(firestore, docPath), {\n    snapshotListenOptions: { includeMetadataChanges: true },\n  });\n\n  if (error) {\n    notification.error({\n      message: 'The application found an error while trying to update the players document',\n      description: JSON.stringify(error),\n      placement: 'bottomLeft',\n    });\n    console.error(error);\n  }\n\n  if (loading) {\n    console.count('Refreshing players...');\n  }\n\n  return snapshot?.data() ?? {};\n}\n","import { notification } from 'antd';\nimport { useDocument } from 'react-firebase-hooks/firestore';\nimport { doc } from 'firebase/firestore';\n// Services\nimport { firestore } from 'services/firebase';\n\nexport function useGameState(gameId: GameId, gameName: GameName): GameState {\n  const docPath = `${gameName}/${gameId}/session/state`;\n  const [snapshot, loading, error] = useDocument(doc(firestore, docPath), {\n    snapshotListenOptions: { includeMetadataChanges: true },\n  });\n\n  if (error) {\n    notification.error({\n      message: 'The application found an error while trying to update the game state',\n      description: JSON.stringify(error),\n      placement: 'bottomLeft',\n    });\n    console.error(error);\n  }\n\n  if (loading) {\n    console.count('Refreshing state...');\n  }\n\n  return snapshot?.data() as GameState;\n}\n","import { notification } from 'antd';\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useIdle } from 'react-use';\nimport { useLanguage } from './useLanguage';\n\nexport function useIdleRedirect() {\n  const navigate = useNavigate();\n  const { translate } = useLanguage();\n\n  // Considers a player idle after 15 minutes of inactivity\n  const isIdle = useIdle(9e5);\n\n  useEffect(() => {\n    if (isIdle) {\n      notification.warning({\n        message: translate(\n          'Página parada por um longo tempo, redirecionando...',\n          'The page has been idle for too long, redirecting...'\n        ),\n        duration: 5,\n        onClose: () => navigate('/'),\n        placement: 'top',\n      });\n    }\n  }, [isIdle, navigate, translate]);\n}\n","import clsx from 'clsx';\nimport { Typography } from 'antd';\nimport { ReactNode } from 'react';\n\ntype InstructionsProps = {\n  /**\n   * The content of the instruction\n   */\n  children: ReactNode;\n  /**\n   * Adds a semi transparent background (white or black opposite to the white property)\n   */\n  contained?: boolean;\n  /**\n   * Make text color white\n   */\n  white?: boolean;\n  /**\n   * Makes instruction width 100%\n   */\n  fullWidth?: boolean;\n  /**\n   * Custom class name\n   */\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n};\n\n/**\n * Typography container for instructions\n */\nexport const Instruction = ({ children, white, className, contained, fullWidth }: InstructionsProps) => {\n  const baseClass = 'instruction';\n\n  return (\n    <Typography.Text\n      className={clsx(\n        baseClass,\n        contained && `${baseClass}--contained`,\n        white && `${baseClass}--white`,\n        fullWidth && `${baseClass}--full-width`,\n        className\n      )}\n      data-testid=\"instruction\"\n    >\n      {children}\n    </Typography.Text>\n  );\n};\n","// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { pluralize } from 'utils/helpers';\n\ntype RoundsLeftInstructionProps = {\n  /**\n   * The state round object with current and total values\n   */\n  round: GameRound;\n  /**\n   * Flag indicating if it is the last round\n   */\n  lastRound?: boolean;\n};\n\n/**\n * Displays instructional sentence based on the number of rounds left for the game to end\n */\nexport function RoundsLeftInstruction({ round, lastRound }: RoundsLeftInstructionProps) {\n  const left = (round?.total ?? 0) - (round?.current ?? 0);\n\n  if (left === 0 || lastRound) {\n    return (\n      <Instruction contained>\n        <Translate pt=\"Essa foi a última rodada\" en=\"No more rounds left\" />\n      </Instruction>\n    );\n  }\n\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            {pluralize(left, 'Falta', 'Faltam')} <strong>{left}</strong>{' '}\n            {pluralize(left, 'rodada', 'rodadas')} para o jogo terminar...\n          </>\n        }\n        en={\n          <>\n            <strong>{left}</strong> {pluralize(left, 'round', 'rounds')} left for the game to end...\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n","import { ReactNode } from 'react';\n\ntype TextHighlightProps = {\n  /**\n   * The text to be highlighted\n   */\n  children: ReactNode;\n};\n\nexport function TextHighlight({ children }: TextHighlightProps) {\n  return <span className=\"text-highlight\">{children}</span>;\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Typography } from 'antd';\nimport { ReactNode } from 'react';\n\ntype TitleProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  white?: boolean;\n  icon?: any;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  level?: 1 | 2 | 3 | 4 | 5 | undefined;\n  size?: 'xx-small' | 'x-small' | 'small' | 'medium' | 'large';\n};\n\nexport const Title = ({ children, white, icon, className, level = 1, size = 'large' }: TitleProps) => {\n  return (\n    <Typography.Title\n      level={level}\n      className={clsx('title', `title--${size}`, white && 'title--white', className)}\n    >\n      {Boolean(icon) && icon}\n      {children}\n    </Typography.Title>\n  );\n};\n","import { isDevEnv } from '../utils/helpers';\nimport { useGlobalState } from './useGlobalState';\n\n/**\n * Controls debug and dev environment\n * @returns\n */\nexport function useDevFeatures() {\n  const [isDebugEnabled, setIsDebugEnabled] = useGlobalState('isDebugEnabled');\n\n  const toggleDevFeatures = () => {\n    setIsDebugEnabled((s) => !s);\n  };\n\n  return {\n    isDevEnv,\n    isDebugEnabled,\n    toggleDevFeatures,\n  };\n}\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\n// Check if user is ready\nexport function useIsUserReady(players: Players, state?: GameState) {\n  const [userId] = useGlobalState('userId');\n  const [isReady, setIsReady] = useState(false);\n\n  useEffect(() => {\n    // Check if user is ready and check if user has been ready after the last state change\n    if (userId && players?.[userId].ready === false) {\n      setIsReady(false);\n      return;\n    }\n\n    if (!state?.updatedAt) {\n      setIsReady(true);\n      return;\n    }\n\n    // If state was updated after the player was updated, data might not be synced\n    if (userId && players?.[userId]?.updatedAt < state?.updatedAt) {\n      setIsReady(false);\n      return;\n    }\n\n    setIsReady(true);\n  }, [userId, players, state?.updatedAt]);\n\n  return isReady;\n}\n","import { useEffect } from 'react';\nimport { isDevEnv } from 'utils/helpers';\nimport { useGlobalState } from './useGlobalState';\n\n/**\n * Runs mock function tht performs whatever\n * @param whatToDo\n * @param [conditions]\n */\nexport function useMock(whatToDo: GenericFunction, conditions: any[] = []) {\n  const [isAdmin] = useGlobalState('isAdmin');\n\n  useEffect(() => {\n    if (isDevEnv && !isAdmin) {\n      whatToDo();\n    }\n  }, conditions); // eslint-disable-line\n}\n","import { useEffect } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\nexport function useTemporarilyHidePlayersBar() {\n  const [, setShowPlayersBar] = useGlobalState('showPlayersBar');\n\n  useEffect(() => {\n    setShowPlayersBar(false);\n    return () => {\n      setShowPlayersBar(true);\n    };\n  }, []); // eslint-disable-line\n}\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\n/**\n * Get player data for the user\n * @param players\n * @returns\n */\nexport function useUser(players: Players): GamePlayer {\n  const [userId] = useGlobalState('userId');\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    if (userId) {\n      setUser(players?.[userId]);\n    }\n  }, [players, userId]);\n\n  return user;\n}\n","/**\n * Enum of Game Phases\n */\nexport const PHASES: ObjectDictionary = {\n  DEFAULT: {\n    LOBBY: 'LOBBY',\n    RULES: 'RULES',\n    SETUP: 'SETUP',\n    GAME_OVER: 'GAME_OVER',\n  },\n  ARTE_RUIM: {\n    DRAW: 'DRAW',\n    EVALUATION: 'EVALUATION',\n    GALLERY: 'GALLERY',\n  },\n  BOMBA_RELOGIO: {\n    ROLE_ASSIGNMENT: 'ROLE_ASSIGNMENT',\n    DECLARATION: 'DECLARATION',\n    EXAMINATION: 'EXAMINATION',\n    RESULT: 'RESULT',\n  },\n  CONTADORES_HISTORIAS: {\n    STORY: 'STORY',\n    CARD_PLAY: 'CARD_PLAY',\n    VOTING: 'VOTING',\n    RESOLUTION: 'RESOLUTION',\n  },\n  DETETIVES_IMAGINATIVOS: {\n    SECRET_CLUE: 'SECRET_CLUE',\n    CARD_PLAY: 'CARD_PLAY',\n    DEFENSE: 'DEFENSE',\n    VOTING: 'VOTING',\n    REVEAL: 'REVEAL',\n  },\n  ESPIAO_ENTRE_NOS: {\n    ASSIGNMENT: 'ASSIGNMENT',\n    INVESTIGATION: 'INVESTIGATION',\n    ASSESSMENT: 'ASSESSMENT',\n    FINAL_ASSESSMENT: 'FINAL_ASSESSMENT',\n    RESOLUTION: 'RESOLUTION',\n  },\n  DESENHO_RAPIDAO: {\n    PROMPT_SELECTION: 'PROMPT_SELECTION',\n    DRAWING: 'DRAWING',\n    GUESSING: 'GUESSING',\n    REVEAL: 'REVEAL',\n  },\n  GALERIA_DE_SONHOS: {\n    WORD_SELECTION: 'WORD_SELECTION',\n    DREAMS_SELECTION: 'DREAMS_SELECTION',\n    CARD_PLAY: 'CARD_PLAY',\n    RESOLUTION: 'RESOLUTION',\n  },\n  CRIMES_HEDIONDOS: {\n    CRIME_SELECTION: 'CRIME_SELECTION',\n    SCENE_MARKING: 'SCENE_MARKING',\n    GUESSING: 'GUESSING',\n    REVEAL: 'REVEAL',\n  },\n  INSTRUMENTOS_CODIFICADOS: {\n    HINT_GIVING: 'HINT_GIVING',\n    HINT_RECEIVING: 'HINT_RECEIVING',\n    GUESS_THE_CODE: 'GUESS_THE_CODE',\n    DISCUSSION: 'DISCUSSION',\n    SOLUTION: 'SOLUTION',\n  },\n  PALHETA_DE_CORES: {\n    '': '',\n  },\n  LINHAS_CRUZADAS: {\n    PROMPT_SELECTION: 'PROMPT_SELECTION',\n    DRAWING: 'DRAWING',\n    NAMING: 'NAMING',\n    PRESENTATION: 'PRESENTATION',\n  },\n  MENTE_COLETIVA: {\n    QUESTION_SELECTION: 'QUESTION_SELECTION',\n    EVERYBODY_WRITES: 'EVERYBODY_WRITES',\n    COMPARE: 'COMPARE',\n    RESOLUTION: 'RESOLUTION',\n  },\n  NA_RUA_DO_MEDO: {\n    TRICK_OR_TREAT: 'TRICK_OR_TREAT',\n    RESULT: 'RESULT',\n    STREET_END: 'STREET_END',\n  },\n  ONDA_TELEPATICA: {\n    DIAL_CLUE: 'DIAL_CLUE',\n    GUESS: 'GUESS',\n    REVEAL: 'REVEAL',\n  },\n  POLEMICA_DA_VEZ: {\n    TOPIC_SELECTION: 'TOPIC_SELECTION',\n    REACT: 'REACT',\n    RESOLUTION: 'RESOLUTION',\n  },\n  QUEM_NAO_MATA: {\n    TARGETING: 'TARGETING',\n    STANDOFF: 'STANDOFF',\n    DUEL: 'DUEL',\n    RESOLUTION: 'RESOLUTION',\n  },\n  QUEM_SOU_EU: {\n    ASSIGNMENT: 'ASSIGNMENT',\n    QUESTIONING: 'QUESTIONING',\n    WHO_ARE_YOU: 'WHO_ARE_YOU',\n    REVEAL: 'REVEAL',\n  },\n  RETRATO_FALADO: {\n    COMPOSITE_SKETCH: 'COMPOSITE_SKETCH',\n    EVALUATION: 'EVALUATION',\n    REVEAL: 'REVEAL',\n  },\n  SONHOS_PESADELOS: {\n    DREAM_TELLING: 'DREAM_TELLING',\n    MATCHING: 'MATCHING',\n    RESOLUTION: 'RESOLUTION',\n  },\n  TESTEMUNHA_OCULAR: {\n    WITNESS_SELECTION: 'WITNESS_SELECTION',\n    QUESTION_SELECTION: 'QUESTION_SELECTION',\n    QUESTIONING: 'QUESTIONING',\n    TRIAL: 'TRIAL',\n  },\n  UE_SO_ISSO: {\n    WORD_SELECTION: 'WORD_SELECTION',\n    SUGGEST: 'SUGGEST',\n    COMPARE: 'COMPARE',\n    GUESS: 'GUESS',\n  },\n  VENDAVAL_DE_PALPITE: {\n    BOSS_SELECTION: 'BOSS_SELECTION',\n    SECRET_WORD_SELECTION: 'SECRET_WORD_SELECTION',\n    PLAYERS_CLUES: 'PLAYERS_CLUES',\n    CLUE_EVALUATIONS: 'CLUE_EVALUATIONS',\n  },\n  SUPER_CAMPEONATO: {\n    CHALLENGE_SELECTION: 'CHALLENGE_SELECTION',\n    CONTENDER_SELECTION: 'CONTENDER_SELECTION',\n    BETS: 'BETS',\n    BATTLE: 'BATTLE',\n    RESULTS: 'RESULTS',\n  },\n  CRUZA_PALAVRAS: {\n    CLUE_WRITING: 'CLUE_WRITING',\n    GUESSING: 'GUESSING',\n    REVEAL: 'REVEAL',\n  },\n  TE_CONHECO: {\n    WRITE: 'WRITE',\n    TRUTHS_AND_LIES: 'TRUTHS_AND_LIES',\n    RESULT: 'RESULT',\n    MATCH_PLAYERS: 'MATCH_PLAYERS',\n    REVEAL: 'REVEAL',\n  },\n};\n"],"names":["DebugOnly","children","div","dev","devOnly","useDevFeatures","isDebugEnabled","isDevEnv","GearsIcon","props","xmlns","viewBox","fill","d","cx","cy","r","transform","PhaseAnnouncement","buttonText","icon","title","currentRound","onClose","className","duration","withoutTimer","unskippable","animationType","useTemporarilyHidePlayersBar","durationPerRound","clsx","getAnimationClass","type","onClick","pt","en","custom","onExpire","disabled","PhaseContainer","info","phase","allowedPhase","fullScreen","white","translate","useLanguage","screenRef","useRef","useGlobalState","setScreenSize","useEffect","current","height","offsetHeight","width","offsetWidth","gameName","description","baseClass","id","ref","speak","text","language","volume","utterance","SpeechSynthesisUtterance","lang","window","speechSynthesis","getRandomWelcomeMessage","name","options","getRandomItem","DEV_NAMES","split","cacheNames","getRandomUniqueItemFromList","source","used","cache","randomItem","includes","mockPlayerName","randomName","undefined","Join","players","meta","useLoading","isLoading","setLoader","gameId","setUserId","setUsername","setUserAvatarId","setVolume","useState","AVAILABLE_AVATAR_IDS","availableAvatars","setAvailableAvatars","tempAvatar","setTempAvatar","tempUsername","setTempUsername","sameGameId","setSameGameId","localStorageAvatar","setLocalStorageAvatar","usedAvatars","Object","values","reduce","acc","avatarId","newAvailableAvatars","useEffectOnce","lsAvatarId","localStorage","lsUsername","lsGameId","onPreviousAvatar","useCallback","index","indexOf","newIndex","length","onNextAvatar","onAddPlayer","_","vol","GAME_API","playerName","playerAvatarId","response","data","username","notification","message","JSON","stringify","placement","console","error","alt","src","PUBLIC_URL","fallback","Boolean","CaretLeftOutlined","href","avatars","AVATARS","CaretRightOutlined","isComplete","onChange","e","target","value","trim","placeholder","maxLength","suffix","InfoCircleOutlined","onKeyPress","key","loading","ghost","size","Waiting","gameMeta","userAvatarId","onLockGameAndStart","ADMIN_API","isLocked","numPlayers","keys","direction","min","danger","block","SingleCloud","cloudData","backgroundPositionX","MultiCloud","style","backgroundImage","CloudBackground","gameCode","cloudType","A","C","D","E","G","H","L","M","N","O","P","R","S","T","U","X","getCloudFileName","CloudTypeComponent","getCloudComponent","PhaseLobby","userId","PHASES","orderBy","map","player","animate","state","round","total","PhasePlaceholder","PhaseRules","isUserReady","useIsUserReady","user","useUser","errorMessage","onBeReady","useAPICall","apiFunction","actionName","successMessage","onSuccess","getRandomPositiveReadyMessage","onBeReadyIDK","getRandomNeutralReadyMessage","onBeReadyQue","getRandomNegativeReadyMessage","useMock","ruleClass","wrap","CheckCircleFilled","SmileFilled","MehFilled","RobotFilled","PhaseSetup","PhaseTimerReset","goToNextStep","next","Promise","res","setTimeout","CollapsibleRule","contained","header","PopoverRule","content","label","showLabel","isActive","setActive","trigger","shape","onMouseOver","onMouseLeave","ReadOutlined","RulesCarousel","settings","prevArrow","DoubleLeftOutlined","nextArrow","DoubleRightOutlined","autoplay","autoplaySpeed","arrows","rules","rule","RulesList","RulesModal","gameInfo","buttonProps","isVisible","setVisibility","onCloseModal","visible","onCancel","footer","SectionMeta","groupScore","backgroundColor","color","SectionRankedPlayers","rankedPlayers","useMemo","count","score","SectionSettings","blurEnabled","setBlurEnabled","isAdmin","isAdminEnabled","setIsAdminEnabled","toggleDevFeatures","useLocalStorage","setLocalStorage","checkedChildren","unCheckedChildren","checked","s","PlayersStatusBar","sortedPlayers","dot","ready","GameInfoDrawer","useToggle","isDrawerOpen","toggleDrawer","isSettingsOpen","toggleSettingsDrawer","SettingOutlined","closable","preview","Session","gameCollection","getActiveComponent","docPath","useDocument","doc","firestore","snapshotListenOptions","includeMetadataChanges","snapshot","useGamePlayers","useGameState","setInfo","navigate","useNavigate","isIdle","useIdle","useIdleRedirect","useTitle","table","GAME_LIST","ActiveComponent","Instruction","fullWidth","RoundsLeftInstruction","lastRound","left","pluralize","TextHighlight","Title","level","setIsDebugEnabled","isReady","setIsReady","updatedAt","whatToDo","conditions","setShowPlayersBar","setUser","DEFAULT","LOBBY","RULES","SETUP","GAME_OVER","ARTE_RUIM","DRAW","EVALUATION","GALLERY","BOMBA_RELOGIO","ROLE_ASSIGNMENT","DECLARATION","EXAMINATION","RESULT","CONTADORES_HISTORIAS","STORY","CARD_PLAY","VOTING","RESOLUTION","DETETIVES_IMAGINATIVOS","SECRET_CLUE","DEFENSE","REVEAL","ESPIAO_ENTRE_NOS","ASSIGNMENT","INVESTIGATION","ASSESSMENT","FINAL_ASSESSMENT","DESENHO_RAPIDAO","PROMPT_SELECTION","DRAWING","GUESSING","GALERIA_DE_SONHOS","WORD_SELECTION","DREAMS_SELECTION","CRIMES_HEDIONDOS","CRIME_SELECTION","SCENE_MARKING","INSTRUMENTOS_CODIFICADOS","HINT_GIVING","HINT_RECEIVING","GUESS_THE_CODE","DISCUSSION","SOLUTION","PALHETA_DE_CORES","LINHAS_CRUZADAS","NAMING","PRESENTATION","MENTE_COLETIVA","QUESTION_SELECTION","EVERYBODY_WRITES","COMPARE","NA_RUA_DO_MEDO","TRICK_OR_TREAT","STREET_END","ONDA_TELEPATICA","DIAL_CLUE","GUESS","POLEMICA_DA_VEZ","TOPIC_SELECTION","REACT","QUEM_NAO_MATA","TARGETING","STANDOFF","DUEL","QUEM_SOU_EU","QUESTIONING","WHO_ARE_YOU","RETRATO_FALADO","COMPOSITE_SKETCH","SONHOS_PESADELOS","DREAM_TELLING","MATCHING","TESTEMUNHA_OCULAR","WITNESS_SELECTION","TRIAL","UE_SO_ISSO","SUGGEST","VENDAVAL_DE_PALPITE","BOSS_SELECTION","SECRET_WORD_SELECTION","PLAYERS_CLUES","CLUE_EVALUATIONS","SUPER_CAMPEONATO","CHALLENGE_SELECTION","CONTENDER_SELECTION","BETS","BATTLE","RESULTS","CRUZA_PALAVRAS","CLUE_WRITING","TE_CONHECO","WRITE","TRUTHS_AND_LIES","MATCH_PLAYERS"],"sourceRoot":""}