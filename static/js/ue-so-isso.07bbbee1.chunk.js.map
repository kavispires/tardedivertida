{"version":3,"file":"static/js/ue-so-isso.07bbbee1.chunk.js","mappings":"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","sources":["components/cards/Card.tsx","components/cards/FloatingHand.tsx","components/cards/ImageBlurButton.tsx","components/cards/ImageCard.tsx","components/cards/ImageCardHand.tsx","components/cards/ImageCardBack.tsx","components/cards/ImageCardPreloadHand.tsx","components/cards/ImageCardSelectButton.tsx","components/pop-up/messageContent.tsx","assets/images/round-title-en.svg","assets/images/round-title-pt.svg","components/round/RoundAnnouncement.tsx","components/views/View.tsx","components/views/ViewIf.tsx","components/views/ViewOr.tsx","components/views/ViewSwitch.tsx","games/ue-so-isso/StepWordSelection.tsx","games/ue-so-isso/components/GameProgressBar.tsx","games/ue-so-isso/components/GuesserWaitingRoom.tsx","games/ue-so-isso/PhaseWordSelection.tsx","games/ue-so-isso/utils/api-requests.ts","games/ue-so-isso/utils/mock.ts","games/ue-so-isso/components/SuggestionEasel.tsx","games/ue-so-isso/components/RulesBlobs.tsx","games/ue-so-isso/components/UeSoIssoCard.tsx","games/ue-so-isso/StepSuggestion.tsx","games/ue-so-isso/PhaseSuggest.tsx","games/ue-so-isso/components/SuggestionCard.tsx","games/ue-so-isso/components/Cards.tsx","games/ue-so-isso/StepCompareSuggestions.tsx","games/ue-so-isso/PhaseCompare.tsx","games/ue-so-isso/components/Guess.tsx","games/ue-so-isso/StepGuessing.tsx","games/ue-so-isso/StepGuessVerification.tsx","games/ue-so-isso/PhaseGuess.tsx","games/ue-so-isso/PhaseGameOver.tsx","games/ue-so-isso/SessionUeSoIsso.tsx","../node_modules/@ant-design/icons-svg/es/asn/CloudUploadOutlined.js","../node_modules/@ant-design/icons/es/icons/CloudUploadOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/DownSquareOutlined.js","../node_modules/@ant-design/icons/es/icons/DownSquareOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/MinusOutlined.js","../node_modules/@ant-design/icons/es/icons/MinusOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/UpCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/UpCircleOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/WarningOutlined.js","../node_modules/@ant-design/icons/es/icons/WarningOutlined.js"],"sourcesContent":["import clsx from 'clsx';\n// Utils\nimport { getColorFromLetter } from 'utils/helpers';\n\ntype CardProps = {\n  children: any;\n  header?: string;\n  footer?: string;\n  color?: string;\n  size?: 'small' | 'medium' | 'large';\n  randomColor?: boolean;\n  className?: string;\n  headerClassName?: string;\n  footerClassName?: string;\n};\nexport const Card = ({\n  children,\n  header = 'Carta',\n  footer,\n  color = 'none',\n  size = 'medium',\n  randomColor = false,\n  className = '',\n  headerClassName = '',\n  footerClassName = '',\n}: CardProps) => {\n  const baseClass = 'card';\n\n  const bgColor = randomColor\n    ? getColorFromLetter(\n        typeof children === 'string'\n          ? children[0].toUpperCase()\n          : header !== 'Carta'\n          ? header[0].toUpperCase()\n          : 'X'\n      )\n    : color;\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, className)}>\n      <span\n        className={clsx(`${baseClass}__header`, `color-background--${bgColor}`, headerClassName)}\n        style={color.startsWith('#') ? { backgroundColor: color } : {}}\n      >\n        {header}\n      </span>\n      <span className={`${baseClass}__text`}>{children}</span>\n      {footer && <span className={clsx(`${baseClass}__footer`, footerClassName)}>{footer}</span>}\n    </div>\n  );\n};\n","import clsx from 'clsx';\nimport { useState } from 'react';\n// Hooks\nimport { useLanguage } from 'hooks';\n// Components\nimport { AvatarIcon } from 'components/avatars';\nimport { Translate } from 'components/language';\n\ntype FloatingHandProps = {\n  children: any;\n  type?: 'hand' | 'stats';\n  subtitle?: any;\n};\n\nexport function FloatingHand({ children, subtitle = '', type = 'hand' }: FloatingHandProps) {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const { translate } = useLanguage();\n\n  return (\n    <>\n      <div className=\"floating-hand-added-white-space\"></div>\n      <div\n        className={clsx('floating-hand', isExpanded && 'floating-hand--expanded')}\n        onMouseOver={() => setIsExpanded(true)}\n        onMouseLeave={() => setIsExpanded(false)}\n      >\n        <span className=\"floating-hand__label\">\n          <AvatarIcon\n            type={type === 'hand' ? 'hand-of-cards' : 'user-stats'}\n            size={isExpanded ? 40 : 60}\n            className=\"floating-hand__icon\"\n            alt={translate('Mão de Cartas', 'Hand of Cards')}\n          />\n          <Translate pt=\"Passe o mouse para expandir \" en=\"Hover to expand \" />\n          {subtitle}\n        </span>\n        {children}\n      </div>\n    </>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Tooltip } from 'antd';\nimport { EyeInvisibleOutlined } from '@ant-design/icons';\n// Utils\nimport { useBlurCards } from 'hooks';\n// Components\nimport { Translate } from 'components/language';\n\ntype ImageBlurButtonProps = {\n  cardId: string;\n};\n\nexport function ImageBlurButton({ cardId }: ImageBlurButtonProps) {\n  const [, addBlurCard, blurEnabled] = useBlurCards();\n\n  return blurEnabled ? (\n    <Tooltip\n      placement=\"top\"\n      title={\n        <Translate\n          pt=\"Aperte o botão para embaçar a foto caso você tenha alguma fobia\"\n          en=\"Use this button to blur the image in case of any phobia\"\n        />\n      }\n    >\n      <Button ghost onClick={() => addBlurCard(cardId)} size=\"small\" className=\"image-blur-button\">\n        <EyeInvisibleOutlined /> <Translate pt=\"Credo\" en=\"Blur\" />\n      </Button>\n    </Tooltip>\n  ) : (\n    <></>\n  );\n}\n\ntype ImageBlurButtonContainerProps = {\n  cardId: string;\n  className?: string;\n  children: any;\n  [key: string]: any;\n};\n\nexport function ImageBlurButtonContainer({\n  cardId,\n  className,\n  children,\n  ...props\n}: ImageBlurButtonContainerProps) {\n  return (\n    <div className={clsx('image-blur-button-container', className)} {...props}>\n      {children}\n      <ImageBlurButton cardId={cardId} />\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Image } from 'antd';\n// Constants\nimport { PUBLIC_URL } from 'utils/constants';\n// Assets\nimport placeholder from 'assets/images/placeholder.jpg';\n// Hooks\nimport { useBlurCards } from 'hooks';\n\ntype ImageCardProps = {\n  imageId: string;\n  size?: 'small' | 'medium' | 'large';\n  cardWidth?: number;\n  className?: string;\n  preview?: Boolean;\n};\nexport const ImageCard = ({\n  imageId,\n  size = 'medium',\n  cardWidth = 200,\n  className = '',\n  preview = true,\n}: ImageCardProps) => {\n  const [blurredCards, , blurEnabled] = useBlurCards();\n\n  const baseClass = 'image-card';\n\n  const fallbackName = `placeholder-${imageId[imageId.length - 1]}`;\n\n  const imageURL = imageId.replace(/-/g, '/');\n\n  const isBlurred = blurEnabled && blurredCards?.[imageId];\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, isBlurred && `${baseClass}--blur`, className)}>\n      <Image\n        width={cardWidth}\n        src={`${process.env.REACT_APP_TDI_IMAGES_URL}${imageURL}.jpg`}\n        placeholder={<Image preview={false} src={placeholder} width={cardWidth} />}\n        fallback={`${PUBLIC_URL.CARDS}${fallbackName}.jpg`}\n        preview={\n          preview && !isBlurred\n            ? {\n                maskClassName: `${baseClass}__preview-mask`,\n              }\n            : false\n        }\n      />\n    </div>\n  );\n};\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Image } from 'antd';\nimport { DownSquareOutlined } from '@ant-design/icons';\n// Hooks\nimport { useCardWidth, useLanguage } from 'hooks';\n// Components\nimport { ImageBlurButton, ImageCard } from '.';\n\ntype ImageCardHandProps = {\n  hand: string[];\n  onSelectCard?: GenericFunction;\n  selectButtonLabel?: string;\n  className?: string;\n  selectButtonClass?: string;\n  sizeRatio?: number;\n  cardSize?: number;\n  minCardSize?: number;\n  disabledSelectButton?: boolean;\n};\n\nexport function ImageCardHand({\n  hand = [],\n  onSelectCard,\n  selectButtonLabel,\n  className = '',\n  selectButtonClass = '',\n  sizeRatio = 8,\n  cardSize,\n  minCardSize = 80,\n  disabledSelectButton = false,\n}: ImageCardHandProps) {\n  const { translate } = useLanguage();\n  // Prefers cardSize otherwise calculates width based on screen and ratio\n  const cardWidth = useCardWidth(sizeRatio, 32, minCardSize);\n\n  return (\n    <Image.PreviewGroup>\n      <div className={clsx('image-card-hand', className)}>\n        {hand.map((cardId) => {\n          return (\n            <div key={`hand-${cardId}`} className=\"image-card-hand__card-container\">\n              {Boolean(onSelectCard) && (\n                <Button\n                  icon={<DownSquareOutlined />}\n                  className={selectButtonClass}\n                  onClick={() => onSelectCard!(cardId)}\n                  size=\"small\"\n                  ghost\n                  disabled={disabledSelectButton}\n                >\n                  {translate('Selecionar', 'Select', selectButtonLabel)}\n                </Button>\n              )}\n              <ImageCard imageId={cardId} cardWidth={cardSize || cardWidth} />\n              <ImageBlurButton cardId={cardId} />\n            </div>\n          );\n        })}\n      </div>\n    </Image.PreviewGroup>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Image } from 'antd';\n// Resources\nimport placeholder from 'assets/images/placeholder.jpg';\n\ntype ImageCardBackProps = {\n  size?: 'small' | 'medium' | 'large';\n  cardWidth?: number | string;\n  className?: string;\n};\n\nexport const ImageCardBack = ({ size = 'medium', cardWidth = 200, className = '' }: ImageCardBackProps) => {\n  const baseClass = 'image-card-back';\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, className)}>\n      <Image width={cardWidth} src={placeholder} preview={false} />\n    </div>\n  );\n};\n","// Components\nimport { ImageCard } from './ImageCard';\n\ntype ImageCardPreloadHandProps = {\n  hand: string[];\n};\nexport function ImageCardPreloadHand({ hand }: ImageCardPreloadHandProps) {\n  if (!hand) return <span></span>;\n  return (\n    <div className=\"image-card-preload-hand\">\n      {hand.map((cardId) => (\n        <ImageCard imageId={cardId} cardWidth={1} key={`pre-load-${cardId}`} preview={false} />\n      ))}\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Button } from 'antd';\nimport { UpCircleOutlined } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\n\ntype ImageCardSelectButtonProps = {\n  isSelected?: boolean;\n  cardId: ImageCard;\n  onClick: GenericFunction;\n  className?: string;\n  selectLabel?: string;\n  deselectLabel?: string;\n};\n\nexport function ImageCardSelectButton({\n  onClick,\n  cardId,\n  selectLabel,\n  deselectLabel,\n  isSelected = false,\n}: ImageCardSelectButtonProps) {\n  return (\n    <Button\n      shape=\"round\"\n      size=\"small\"\n      ghost={!isSelected}\n      className=\"image-card-select-button\"\n      onClick={() => onClick(cardId)}\n    >\n      <UpCircleOutlined />\n      {isSelected ? (\n        <Translate pt=\"Desmarcar\" en=\"Deselect\" custom={deselectLabel} />\n      ) : (\n        <Translate pt=\"Selecionar\" en=\"Select\" custom={selectLabel} />\n      )}\n      <UpCircleOutlined />\n    </Button>\n  );\n}\n","// Ant Design Resources\nimport { message } from 'antd';\n// Components\nimport { Icons } from 'components/icons';\nimport { Translate } from 'components/language';\n\n/**\n * Pops up a modal with a confirmation button but also closing timeout\n * @param title\n * @param description\n * @param id\n * @param duration\n * @returns\n */\nexport const messageContent = (title: string, description: string, id: string, duration = 30) => {\n  const key = `${id} - ${title}`;\n\n  return {\n    content: (\n      <div>\n        <h1>{title}</h1>\n        <p>{description}</p>\n        <p>\n          <small>\n            <Translate\n              pt=\"Popup fecha automaticamente ou clique para fechar\"\n              en=\"Auto-close or click to close\"\n            />\n          </small>\n        </p>\n      </div>\n    ),\n    top: window.innerWidth / 2 - 100,\n    duration,\n    key,\n    icon: <Icons.VideoGameController style={{ width: '64px' }} />,\n    onClick: () => message.destroy(key),\n  };\n};\n","var _style, _g, _g2, _g3, _g4, _g5, _g6, _g7, _g8;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRoundTitleEn(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 130 50\",\n    style: {\n      enableBackground: \"new 0 0 130 50\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:#9EC5E7;}\\n\\t.st1{fill:#FFFFFF;}\\n\\t.st2{fill:#3A7CA5;}\\n\\t.st3{fill:#44BBA4;}\\n\\t.st4{fill:#F2E863;}\\n\\t.st5{fill:#F45B69;}\\n\\t.st6{fill:#E6E6F5;}\\n\\t.st7{display:none;}\\n\\t.st8{display:inline;}\\n\\t.st9{display:inline;fill:none;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st10{fill:#DA70D6;}\\n\\t.st11{fill:#008080;}\\n\\t.st12{fill:#D2691E;}\\n\\t.st13{fill:#4682B4;}\\n\\t.st14{fill:#B22222;}\\n\\t.st15{fill:#DFB231;}\\n\\t.st16{fill:#FF6347;}\\n\\t.st17{fill:#9370DB;}\\n\\t.st18{fill:#3C58AC;}\\n\\t.st19{fill:#7CC44F;}\\n\\t.st20{fill:#040303;}\\n\\t.st21{fill:#FCBF00;}\\n\\t.st22{fill:#D70027;}\\n\\t.st23{fill:#EA384D;}\\n\\t.st24{fill:#BFB8B8;}\\n\\t.st25{fill:#F8EFEF;}\\n\\t.st26{fill:#FE2A25;}\\n\\t.st27{fill:#FE9A00;}\\n\\t.st28{fill:#FEE901;}\\n\\t.st29{fill:#FEF6A5;}\\n\\t.st30{fill:#FEF05C;}\\n\\t.st31{fill:#FEFDFD;}\\n\\t.st32{fill:url(#SVGID_1_);}\\n\\t.st33{fill:#D40000;}\\n\\t.st34{clip-path:url(#SVGID_3_);}\\n\\t.st35{fill:url(#SVGID_4_);}\\n\\t.st36{clip-path:url(#SVGID_6_);}\\n\\t.st37{fill:url(#SVGID_7_);}\\n\\t.st38{fill:#008C72;}\\n\\t.st39{clip-path:url(#SVGID_9_);}\\n\\t.st40{clip-path:url(#SVGID_11_);}\\n\\t.st41{clip-path:url(#SVGID_13_);}\\n\\t.st42{clip-path:url(#SVGID_15_);}\\n\\t.st43{clip-path:url(#SVGID_17_);}\\n\\t.st44{clip-path:url(#SVGID_19_);}\\n\\t.st45{fill:#575757;}\\n\\t.st46{clip-path:url(#SVGID_21_);}\\n\\t.st47{fill:url(#SVGID_22_);}\\n\\t.st48{fill:none;stroke:#FFFFFF;stroke-miterlimit:10;}\\n\\t.st49{display:inline;fill:#5C3400;}\\n\\t.st50{fill:none;}\\n\\t.st51{fill:#5C3400;}\\n\\t.st52{display:inline;fill:none;}\\n\\t.st53{display:inline;fill:#FFFFFF;}\\n\\t.st54{display:none;fill:#FFFFFF;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st55{display:inline;fill:#FFFFFF;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st56{display:none;fill:#F2F25F;}\\n\\t.st57{display:inline;fill:#F2F2F2;}\\n\\t.st58{display:inline;fill:#E6E6E6;}\\n\\t.st59{display:inline;fill:#808080;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st60{fill:#808080;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st61{display:inline;fill:#808080;}\\n\\t.st62{fill:#29E257;}\\n\\t.st63{fill:#E2DC29;}\\n\\t.st64{fill:#29ABE2;}\\n\\t.st65{fill:#E22929;}\\n\\t.st66{fill:#E6E6E6;}\\n\\t.st67{fill:#F2F2F2;}\\n\\t.st68{fill:#F9C303;}\\n\\t.st69{fill:#3A3939;}\\n\\t.st70{fill:#FF0000;}\\n\\t.st71{fill:#FEFEFD;}\\n\\t.st72{fill:#181D44;}\\n\\t.st73{fill:#F7931E;}\\n\\t.st74{fill:#A45467;}\\n\\t.st75{fill:#C33F48;}\\n\\t.st76{fill:#866A86;}\\n\\t.st77{fill:#6780A4;}\\n\\t.st78{fill:#4895C3;}\\n\\t.st79{fill:#4D4D4D;}\\n\\t.st80{opacity:0.2;}\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1\"\n  }, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M31.6,8.3c3.6,1.3,5.1,4.6,5.1,8.1c0,5.5-3.8,11.9-9.9,13.3c2.8,2.9,6,8.6,8.4,8.6c0.6,0,1.2-0.4,1.7-1.3 c0.2-0.4,0.5-0.5,0.8-0.5c0.5,0,1.1,0.4,1.1,1.1c0,0.1-0.1,0.4-0.1,0.5c-1,1.8-2.6,2.7-4.3,2.7c-1.5,0-3-0.6-4.2-1.7 c-3-2.7-4.4-5.6-4.6-5.6c-0.1,0-0.1,0.1-0.1,0.1c0,0.6,0.5,2.7,1.3,7.4c0,0.2,0.1,0.4,0.1,0.6c0,1.5-1.1,2.7-2.8,2.7 c-0.2,0-0.4,0-0.7-0.1c-2-0.3-4.5-8.1-4.5-17.6c0-4.2,0.5-8.8,1.8-13.2c0.4-1.5,1.5-2.1,2.6-2.1c1.5,0,3.2,1.2,3.2,3.1 c0,0.1,0,0.4-0.1,0.6c-0.6,3.3-1.1,6.5-1.3,9.7c4.1-2.5,5.7-5.5,5.7-8.1c0-3.5-2.8-6.4-5.6-6.5h-0.3c-4.4,0-9.1,4.4-9.1,9 c0,0.9,0.2,1.8,0.6,2.7c0.1,0.1,0.1,0.3,0.1,0.4c0,0.6-0.4,1.1-0.9,1.1c-0.1,0-0.4-0.1-0.5-0.1c-1.5-0.7-2.1-2-2.1-3.7 c0-4.8,5.5-12.1,13.5-12.1C28,7.3,29.8,7.6,31.6,8.3z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M49,22.7c1.8,2.4,2.6,5.3,2.6,7.9c0,5.5-3.1,10.4-6.9,10.5h-0.1c-4.6,0-6.7-4.3-6.7-8.8 c0-3.3,1.1-6.8,3.2-8.9c-0.6,0-0.8-0.3-0.8-0.7c0-1,1.8-2.7,4.1-2.7C45.8,19.9,47.5,20.6,49,22.7z M42.1,22.6 c0.9-0.6,1.7-0.8,2.4-0.8c1.5,0,2.5,1.3,2.5,2.5c0,0.2,0,0.4-0.1,0.6c-0.6,2.5-2.7,4.1-2.9,6.8c0,0.3-0.1,0.7-0.1,1.1 c0,0.8,0.1,1.5,0.5,2c0.3,0.4,0.7,0.4,1.2,0.4c0.6,0,1.3-0.2,1.8-0.5c1.7-1,2.5-3.2,2.5-5.6c0-3.4-1.5-7-4.3-7.7 c-0.3-0.1-0.6-0.1-0.8-0.1C43.6,21.2,42.6,21.7,42.1,22.6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M59.9,23.2v0.4c-0.3,2.1-1.2,6.3-1.2,9.4c0,1.8,0.3,3.2,1.1,3.7c0.1,0.1,0.3,0.1,0.4,0.1 c1.3,0,2.9-4.1,4.1-7.9c0.1-6,2-7.9,3.6-7.9c1.4,0,2.7,1.3,2.9,2.7c0,0.4,0.1,0.6,0.1,0.9c0,1.6-0.4,2.8-0.4,5.5 c0,1.2,0.1,2.8,0.4,4.8v0.8c0,0.7,0.1,1.3,0.8,1.3c0.1,0,0.2-0.1,0.4-0.1c1.9-0.4,3.6-6.5,4-8.3c0.1-0.2,0.2-0.4,0.4-0.4 s0.4,0.2,0.4,0.4v0.1c-0.8,3.5-2.3,11.2-7,11.2c-0.4,0-0.8-0.1-1.3-0.2c-3.1-0.8-3.7-3.9-3.9-6.7c-2,5.7-4.6,8.1-6.8,8.1 c-2.7,0-4.9-3.6-4.9-9.4c0-2.6,0.4-5.6,1.5-9c0.4-1.3,1.8-2,2.9-2C58.6,20.8,59.9,21.6,59.9,23.2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M80.6,20.6c0.1,0.5,0.1,0.9,0.1,1.4c0,2.5-1,4.9-1,7.7v0.8c1.7-5.3,4.1-11.4,7.6-11.4c0.6,0,1.4,0.2,2.2,0.7 c2.3,1.5,3,5.2,3,8.8c0,4.6-1.1,9-1.1,9c0.1,0,3.7-4.8,4.8-8.5c0.1-0.3,0.3-0.4,0.6-0.4c0.3,0,0.6,0.2,0.6,0.6v0.1 c-0.6,2.8-3.1,9.1-5.5,10.2c-0.4,0.1-0.7,0.2-1.1,0.2c-2.6,0-4.2-3.9-4.5-5.9c-0.1-0.5-0.1-1.1-0.1-1.7c0-1.2,0.1-2.5,0.1-3.8 c0-1.9-0.1-3.7-0.7-5c-0.1-0.1-0.1-0.2-0.2-0.2c-1.1,0-4.3,7.9-4.8,15.6c-0.1,1.2-0.8,2-1.8,2c-1.9,0-4.7-2.9-5.1-10.2 c-0.1-0.8-0.1-1.5-0.1-2.2c0-7.2,2.6-9.5,4.6-9.6C79.4,18.8,80.4,19.6,80.6,20.6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M111.3,5.7c1.4,0,2.9,1,2.9,2.5v0.2c-0.5,5-2.4,9.1-3.6,20.6c-0.2,1.9-0.3,3.4-0.3,4.6c0,2.5,0.4,3.5,1,3.5 c1.1,0,3-3.6,4.5-8.5c0.1-0.4,0.4-0.5,0.7-0.5c0.4,0,0.7,0.2,0.7,0.6c0,0.1-0.1,0.1-0.1,0.2c-0.9,3.4-2.2,8.1-4.7,10.7 c-0.8,0.8-1.6,1.2-2.5,1.2c-2.6,0-5.1-3.6-5.5-7.3c-2,5.1-4.1,7.1-5.8,7.1c-2.4,0-4.1-4.1-4.1-8.6c0-4.7,1.8-9.8,6.5-11.2 c0.4-0.1,0.7-0.1,1-0.1c1.8,0,3.2,1.2,3.4,1.2h0.1c0.8-4.9,1.4-10.3,3.4-14.9c0.4-0.9,1.3-1.3,2.2-1.3H111.3z M99.7,35.1v0.5 c0,0.2-0.1,0.4-0.1,0.6c0,0.4,0.1,0.7,0.4,0.7c1,0,3.9-4.8,4.9-11.1c-0.4-0.4-0.7-0.6-1.1-0.6C101.8,25.2,99.7,31.3,99.7,35.1z\"\n  })))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"avatars\"\n  })), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Time_Bomb\"\n  })), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_4\"\n  })), _g5 || (_g5 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_8\"\n  })), _g6 || (_g6 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_6\"\n  })), _g7 || (_g7 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"dial_svg\"\n  })), _g8 || (_g8 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Sheeps\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRoundTitleEn);\nexport default __webpack_public_path__ + \"static/media/round-title-en.2ad07e1f265a85634ad7940a33f96552.svg\";\nexport { ForwardRef as ReactComponent };","var _style, _g, _g2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRoundTitlePt(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 130 50\",\n    style: {\n      enableBackground: \"new 0 0 130 50\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:#3E1E68;}\\n\\t.st1{fill:#9EC5E7;}\\n\\t.st2{display:none;}\\n\\t.st3{display:inline;fill:#9EC5E7;}\\n\\t.st4{fill:#3A7CA5;}\\n\\t.st5{fill:#44BBA4;}\\n\\t.st6{fill:#F2E863;}\\n\\t.st7{fill:#F45B69;}\\n\\t.st8{fill:#FFFFFF;}\\n\\t.st9{opacity:0.9;fill:#FFFFFF;}\\n\\t.st10{stroke:#000000;stroke-width:8;stroke-miterlimit:10;}\\n\\t.st11{fill:#E6E6F5;}\\n\\t.st12{fill:#DA70D6;}\\n\\t.st13{fill:#008080;}\\n\\t.st14{fill:#D2691E;}\\n\\t.st15{fill:#556B2F;}\\n\\t.st16{fill:#7CC44F;}\\n\\t.st17{fill:#2F4F4F;}\\n\\t.st18{fill:#FF6347;}\\n\\t.st19{fill:#4682B4;}\\n\\t.st20{fill:#D2A467;}\\n\\t.st21{fill:#7FB5C7;}\\n\\t.st22{fill:#B22222;}\\n\\t.st23{fill:#9370DB;}\\n\\t.st24{fill:#778899;}\\n\\t.st25{fill:#663399;}\\n\\t.st26{fill:#696969;}\\n\\t.st27{fill:#20212E;}\\n\\t.st28{fill:#9884B4;}\\n\\t.st29{fill:#DFB231;}\\n\\t.st30{fill:#875131;}\\n\\t.st31{fill:#DB8A34;}\\n\\t.st32{fill:#EB3465;}\\n\\t.st33{fill:#2B1752;}\\n\\t.st34{fill:#3C58AC;}\\n\\t.st35{fill:#BDB74C;}\\n\\t.st36{fill:#C7A4B3;}\\n\\t.st37{display:inline;}\\n\\t.st38{display:inline;fill:none;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st39{fill:#939598;}\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1\"\n  }, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st8\",\n    d: \"M27.8,37.4c-0.4,0-0.6,0.1-0.8,0.5c-0.5,0.9-1.1,1.3-1.7,1.3c-2.5,0-5.6-5.8-8.4-8.6 c6.1-1.4,9.9-7.7,9.9-13.3c0-3.6-1.5-6.8-5.1-8.1c-1.8-0.7-3.6-1.1-5.3-1.1c-8,0.1-13.5,7.3-13.5,12.1c0,1.7,0.6,3,2.1,3.7 c0.1,0.1,0.4,0.1,0.5,0.1c0.5,0,0.9-0.5,0.9-1.1c0-0.1,0-0.3-0.1-0.4c-0.4-0.8-0.6-1.8-0.6-2.7c0-4.6,4.7-9,9.1-9h0.3 c2.8,0.1,5.6,2.9,5.6,6.5c0,2.6-1.5,5.6-5.7,8.1c0.2-3.2,0.7-6.4,1.3-9.7c0.1-0.2,0.1-0.4,0.1-0.6c0-1.9-1.6-3.1-3.2-3.1 c-1.1,0-2.2,0.6-2.6,2.1c-1.3,4.4-1.8,9-1.8,13.2c0,9.5,2.5,17.3,4.5,17.6c0.3,0.1,0.5,0.1,0.7,0.1c1.8,0,2.8-1.2,2.8-2.7 c0-0.2-0.1-0.4-0.1-0.6c-0.8-4.8-1.3-6.9-1.3-7.4c0-0.1,0-0.1,0.1-0.1c0.2,0,1.6,2.9,4.6,5.6c1.2,1.1,2.7,1.7,4.2,1.7 c1.8,0,3.4-0.8,4.4-2.7c0.1-0.1,0.1-0.4,0.1-0.5C29,37.9,28.3,37.4,27.8,37.4z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st8\",\n    d: \"M34.4,20.8c-2.3,0-4.1,1.8-4.1,2.7c0,0.4,0.2,0.7,0.8,0.7c-2.1,2.1-3.2,5.6-3.2,8.9c0,4.6,2.1,8.8,6.7,8.8 h0.1c3.9-0.1,6.9-5.1,6.9-10.5c0-2.7-0.8-5.5-2.6-7.9C37.5,21.5,35.8,20.8,34.4,20.8z M37.3,35.6c-0.4,0.3-1.1,0.5-1.8,0.5 c-0.5,0-0.9-0.1-1.2-0.4c-0.4-0.4-0.5-1.2-0.5-2c0-0.4,0.1-0.8,0.1-1.1c0.3-2.7,2.3-4.3,2.9-6.8c0.1-0.2,0.1-0.4,0.1-0.6 c0-1.2-0.9-2.5-2.5-2.5c-0.7,0-1.5,0.2-2.4,0.8c0.5-0.9,1.5-1.3,2.5-1.3c0.3,0,0.6,0.1,0.8,0.1c2.7,0.7,4.3,4.4,4.3,7.7 C39.8,32.4,39,34.6,37.3,35.6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st8\",\n    d: \"M124.8,29.5c-0.3,0-0.5,0.1-0.6,0.4c-0.8,4.2-3.4,7.4-4.1,7.4h-0.1v-0.1c0-0.2-0.3-1.3-0.4-1.6 c-0.1-0.7-0.2-1.4-0.2-2.1c0-2.8,1.1-5.7,1.8-8.3c0.1-0.2,0.1-0.4,0.1-0.6c0-1.5-1.4-2.9-2.9-2.9c-1.1,0-2.2,0.6-3,2.5 c-0.7-1.8-3.4-3-5.3-3h-0.6c-4.9,0.6-7.4,8.4-7.4,12.6c0,0,0,0.1,0,0.1c-1.1,2.6-2.2,4.2-2.9,4.2c-0.6,0-1-1.1-1-3.5 c0-1.2,0.1-2.7,0.3-4.6c1.2-11.5,3.1-15.6,3.6-20.6V9.1c0-1.5-1.5-2.5-2.9-2.5h-0.1c-0.9,0-1.8,0.4-2.2,1.3c-2,4.6-2.6,10-3.4,15 h-0.1c-0.2,0-1.6-1.2-3.4-1.2c-0.3,0-0.6,0.1-1,0.1c-4.7,1.3-6.5,6.5-6.5,11.2c0,0.5,0,1,0.1,1.5c-1,1.8-2,2.9-2.5,2.9h-0.1v-0.1 c0-0.2-0.3-1.3-0.4-1.6c-0.1-0.7-0.2-1.4-0.2-2.1c0-2.8,1.1-5.7,1.8-8.3c0.1-0.2,0.1-0.4,0.1-0.6c0-1.5-1.4-2.9-2.9-2.9 c-1.1,0-2.2,0.6-3,2.5c-0.7-1.8-3.4-3-5.3-3h-0.6c-4.9,0.6-7.4,8.4-7.4,12.6c0,0,0,0.1,0,0.1c-1.1,2.6-2.2,4.2-2.9,4.2 c-0.6,0-1-1.1-1-3.5c0-1.2,0.1-2.7,0.3-4.6c1.2-11.5,3.1-15.6,3.6-20.6V9.1c0-1.5-1.5-2.5-2.9-2.5h-0.1c-0.9,0-1.8,0.4-2.2,1.3 c-2,4.6-2.6,10-3.4,15h-0.1c-0.2,0-1.6-1.2-3.4-1.2c-0.3,0-0.6,0.1-1,0.1c-4.7,1.3-6.5,6.5-6.5,11.2c0,4.5,1.7,8.6,4.1,8.6 c1.7,0,3.7-2,5.8-7.1c0.4,3.7,2.9,7.3,5.5,7.3c0.8,0,1.7-0.4,2.5-1.2c0.9-1,1.7-2.2,2.3-3.5c0.7,2.1,2.1,3.5,3.9,3.5 c2,0,4.4-1.8,6.6-6.1c0.1,2.8,1,5.1,3.4,6c0.6,0.2,1.2,0.3,1.7,0.3c2.1,0,3.5-1.6,4.6-3.6c0.7,2.6,2,4.4,3.6,4.4 c1.7,0,3.7-2,5.8-7.1c0.4,3.7,2.9,7.3,5.5,7.3c0.8,0,1.7-0.4,2.5-1.2c0.9-1,1.7-2.2,2.3-3.5c0.7,2.1,2.1,3.5,3.9,3.5 c2,0,4.4-1.8,6.6-6.1c0.1,2.8,1,5.1,3.4,6c0.6,0.2,1.2,0.3,1.7,0.3c4.5,0,5.9-7,6.9-10.4c0-0.1,0.1-0.1,0.1-0.2 C125.5,29.7,125,29.5,124.8,29.5z M48.2,37.8c-0.2,0-0.4-0.3-0.4-0.7c0-0.2,0.1-0.4,0.1-0.6V36c0-3.9,2.1-9.9,4.1-9.9 c0.4,0,0.7,0.1,1.1,0.6C52,32.9,49.2,37.8,48.2,37.8z M73.7,30.4c-1.1,2.4-3,5.5-4.3,5.5c-0.4,0-0.8-0.4-1-1.3 c-0.1-0.2-0.1-0.4-0.1-0.7c0-3.1,3-9.4,5.1-9.4c0.6,0,1.1,0.5,1.3,1.8C74.8,26.6,74.2,28,73.7,30.4z M88,37.8 c-0.2,0-0.4-0.3-0.4-0.7c0-0.2,0.1-0.4,0.1-0.6V36c0-3.9,2.1-9.9,4.1-9.9c0.4,0,0.7,0.1,1.1,0.6C91.9,32.9,89,37.8,88,37.8z  M113.6,30.4c-1.1,2.4-3,5.5-4.3,5.5c-0.4,0-0.8-0.4-1-1.3c-0.1-0.2-0.1-0.4-0.1-0.7c0-3.1,3-9.4,5.1-9.4c0.6,0,1.1,0.5,1.3,1.8 C114.6,26.6,114.1,28,113.6,30.4z\"\n  })))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"avatars\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRoundTitlePt);\nexport default __webpack_public_path__ + \"static/media/round-title-pt.2e3f9c1deb85d58d118aa6e3dfa7af23.svg\";\nexport { ForwardRef as ReactComponent };","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button } from 'antd';\n// Assets\nimport roundTitleEn from 'assets/images/round-title-en.svg';\nimport roundTitlePt from 'assets/images/round-title-pt.svg';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Hooks\nimport { useLanguage } from 'hooks';\n// Components\nimport { Translate } from 'components/language';\nimport { TimedButton } from 'components/buttons';\n\ntype RoundAnnouncementProps = {\n  round: GameRound;\n  onPressButton?: GenericFunction;\n  buttonText?: string;\n  time: number;\n  players?: Players;\n  className?: string;\n  children?: any;\n  unskippable?: boolean;\n  circleColor?: Color;\n};\n\nexport function RoundAnnouncement({\n  round,\n  onPressButton,\n  buttonText,\n  time = 0,\n  className,\n  children,\n  unskippable = false,\n  circleColor = 'yellow',\n}: RoundAnnouncementProps) {\n  const { translate } = useLanguage();\n\n  return (\n    <div className={clsx('round-announcement', className)}>\n      <div className=\"round-announcement__main\">\n        <div className=\"round-announcement__title\">\n          <img src={translate(roundTitlePt, roundTitleEn)} alt={translate('Rodada', 'Round')} />\n        </div>\n        <div className={clsx('round-announcement__round-wrapper', getAnimationClass('zoomIn'))}>\n          <div className={clsx('round-announcement__circle', `color-border--${circleColor}`)}></div>\n          <div className={clsx('round-announcement__circle-2', `color-border--${circleColor}`)}></div>\n          <div className=\"round-announcement__number\">{round?.current ?? round ?? 0}</div>\n        </div>\n\n        {children}\n\n        {Boolean(onPressButton) && !Boolean(time) && (\n          <Button type=\"primary\" onClick={onPressButton} className=\"round-announcement__go-button\">\n            {buttonText}\n          </Button>\n        )}\n\n        {Boolean(onPressButton) && Boolean(time) && (\n          <TimedButton\n            type=\"primary\"\n            onClick={onPressButton}\n            onExpire={onPressButton}\n            duration={time}\n            showTimer\n            disabled={unskippable}\n          >\n            <Translate pt=\"Prosseguir\" en=\"Continue\" custom={buttonText} />\n          </TimedButton>\n        )}\n      </div>\n    </div>\n  );\n}\n","type ViewProps = {\n  children: any;\n};\n\nexport function View({ children }: ViewProps) {\n  return <>{children}</>;\n}\n","type ViewIfProps = {\n  children: any;\n  isVisible?: boolean;\n};\n\nexport function ViewIf({ isVisible = false, children }: ViewIfProps) {\n  return isVisible ? <>{children}</> : <></>;\n}\n","type ViewOrProps = {\n  children: [any, any];\n  orCondition?: boolean;\n};\n\nexport function ViewOr({ orCondition = false, children }: ViewOrProps) {\n  return orCondition ? <>{children[0]}</> : <>{children[1]}</>;\n}\n","type ViewSwitchProps = {\n  cases: boolean[];\n  children: any;\n};\n\nexport function ViewSwitch({ cases, children }: ViewSwitchProps) {\n  if (cases.length > 5) {\n    throw Error('ViewSwitch only supports up to 5 cases');\n  }\n\n  if (cases[0] && children[0]) {\n    return children[0];\n  }\n\n  if (cases[1] && children[1]) {\n    return children[1];\n  }\n\n  if (cases[2] && children[2]) {\n    return children[2];\n  }\n\n  if (cases[3] && children[3]) {\n    return children[3];\n  }\n\n  if (cases[4] && children[4]) {\n    return children[4];\n  }\n  console.warn('Rendering all children in the ViewSwitch');\n  return children;\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { CheckCircleFilled, CloudUploadOutlined } from '@ant-design/icons';\n// Components\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { AvatarName } from 'components/avatars';\nimport { TimedButton } from 'components/buttons';\n\ntype StepWordSelectionProps = {\n  guesser: GamePlayer;\n  onSendSelectedWords: GenericFunction;\n  words: UeSoIssoCard[];\n};\n\nexport function StepWordSelection({ guesser, onSendSelectedWords, words = [] }: StepWordSelectionProps) {\n  const [selectedWords, setSelectedWords] = useState<PlainObject>({});\n\n  const selectedWordsArray = Object.keys(selectedWords);\n  const noSelection = selectedWordsArray.length === 0;\n\n  const autoSelectRandomWord = () => {\n    const randomSelection = words[0].id;\n    onSendSelectedWords({ votes: [randomSelection] });\n  };\n\n  const onSelectWord = (wordId: string) => {\n    setSelectedWords((s: PlainObject) => {\n      const newState = { ...s };\n      if (newState[wordId]) {\n        delete newState[wordId];\n      } else {\n        newState[wordId] = true;\n      }\n      return newState;\n    });\n  };\n\n  return (\n    <Step fullWidth>\n      <Title white>\n        <Translate\n          pt={\n            <>\n              Selecione a Palavra Secreta para <AvatarName player={guesser} />\n            </>\n          }\n          en={\n            <>\n              Select a Secret Word for <AvatarName player={guesser} />\n            </>\n          }\n        />\n      </Title>\n\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              A palavra com mais votos será escolhida para essa rodada. Você pode selecionar quantas quiser!\n            </>\n          }\n          en={\n            <>\n              The word with the most votes will be selected for the round. You can choose as many as you wish!\n            </>\n          }\n        />\n      </Instruction>\n\n      <ul className=\"u-word-card\">\n        {words.map((word) => {\n          return (\n            <li className=\"u-word-card__word\" key={word.id}>\n              <button className=\"u-word-card__button\" onClick={() => onSelectWord(word.id)}>\n                <span className=\"u-word-card__text\">{word.text}</span>\n                <span className=\"u-word-card__icon\">\n                  {Boolean(selectedWords[word.id]) && <CheckCircleFilled />}\n                </span>\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n\n      <TimedButton\n        icon={<CloudUploadOutlined />}\n        type=\"primary\"\n        onClick={() => onSendSelectedWords({ votes: selectedWordsArray })}\n        disabled={noSelection}\n        onExpire={autoSelectRandomWord}\n        duration={15}\n        showTimer={noSelection}\n      >\n        <Translate pt=\"Enviar votos\" en=\"Send votes\" />\n      </TimedButton>\n    </Step>\n  );\n}\n","// Ant Design Resources\nimport { Progress } from 'antd';\n// Components\nimport { Translate } from 'components/language';\n\ntype GameProgressBarProps = {\n  groupScore: number;\n  round: GameRound;\n};\n\nexport function GameProgressBar({ groupScore, round }: GameProgressBarProps) {\n  const totalProgress = Math.round((100 * (round.current - 1)) / round.total);\n\n  return (\n    <div className=\"u-word-selection-phase__game-progress-bar\">\n      <Translate pt=\"Progresso:\" en=\"Group Progress\" />\n      <br />\n      <Progress\n        percent={totalProgress}\n        success={{ percent: groupScore ?? 0, strokeColor: '#bbec6c' }}\n        status=\"active\"\n        strokeColor=\"#fe646f\"\n      />\n    </div>\n  );\n}\n","// Hooks\nimport { WaitingRoom } from 'components/players';\nimport { Step } from 'components/steps';\nimport { useLanguage } from 'hooks';\n// Components\n\ntype GuesserWaitingRoomProps = {\n  players: GamePlayers;\n  instructionSuffix: {\n    pt: string;\n    en: string;\n  };\n};\n\nexport function GuesserWaitingRoom({ players, instructionSuffix }: GuesserWaitingRoomProps) {\n  const { language, translate } = useLanguage();\n\n  const instructionPrefix = translate('Aguarde os outros jogadores', 'Please wait while the other players');\n\n  return (\n    <Step fullWidth>\n      <WaitingRoom\n        players={players}\n        title={translate('Você é o(a) adivinhador(a)', \"You're the guesser\")}\n        instruction={`${instructionPrefix} ${instructionSuffix[language]}.`}\n      />\n    </Step>\n  );\n}\n","// Hooks\nimport { useIsUserReady, useWhichPlayerIsThe, useLanguage, useStep } from 'hooks';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\n\nimport { StepWordSelection } from './StepWordSelection';\nimport { GameProgressBar } from './components/GameProgressBar';\nimport { GuesserWaitingRoom } from './components/GuesserWaitingRoom';\nimport { useOnSubmitVotesAPIRequest } from './utils/api-requests';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { AvatarName } from 'components/avatars';\nimport { StepSwitcher } from 'components/steps';\nimport { RoundAnnouncement } from 'components/round';\nimport { ViewOr } from 'components/views';\n\ntype RoundAnnouncementTextProps = {\n  guesser: GamePlayer;\n  groupScore: number;\n  round: GameRound;\n};\n\nfunction RoundAnnouncementText({ guesser, groupScore, round }: RoundAnnouncementTextProps) {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Para essa rodada, <AvatarName player={guesser} addressUser /> será o(a) adivinhador(a).\n          </>\n        }\n        en={\n          <>\n            For this round, <AvatarName player={guesser} addressUser /> will be the guesser.\n          </>\n        }\n      />\n      <br />\n      <GameProgressBar groupScore={groupScore} round={round} />\n    </Instruction>\n  );\n}\n\nfunction PhaseWordSelection({ state, players, info }: PhaseProps) {\n  const isUserReady = useIsUserReady(players, state);\n  const { translate } = useLanguage();\n  const [guesser, isUserTheGuesser] = useWhichPlayerIsThe('guesserId', state, players);\n  const { step, goToNextStep, setStep } = useStep(0);\n\n  const onSendSelectedWords = useOnSubmitVotesAPIRequest(setStep);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.UE_SO_ISSO.WORD_SELECTION}\n      className=\"u-word-selection-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady]} players={players}>\n        {/* Step 0 */}\n        <RoundAnnouncement round={state.round} onPressButton={() => setStep(1)} time={7} circleColor=\"cream\">\n          <RoundAnnouncementText guesser={guesser} groupScore={state.groupScore} round={state.round} />\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <PhaseAnnouncement\n          type=\"opinions\"\n          title={translate('Seleção da Palavra Secreta', 'Secret Word Selection')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          {isUserTheGuesser ? (\n            <Instruction>\n              <Translate\n                pt={\n                  <>\n                    Os outros jogadores escolherão a palavra secreta.\n                    <br />\n                    Aguarde...\n                  </>\n                }\n                en={\n                  <>\n                    The other players will now choose the secret word.\n                    <br />\n                    Just wait...\n                  </>\n                }\n              />\n            </Instruction>\n          ) : (\n            <Instruction>\n              <Translate\n                pt={\n                  <>\n                    Selecione a palavra secreta para essa rodada.\n                    <br />\n                    Você pode selecionar quantas quiser.\n                    <br />A palavra mais votada será usada nessa rodada!\n                  </>\n                }\n                en={\n                  <>\n                    Choose the secret word for this round.\n                    <br />\n                    You may select as many as you wish.\n                    <br />\n                    The most voted word would be used this round!\n                  </>\n                }\n              />\n            </Instruction>\n          )}\n        </PhaseAnnouncement>\n\n        {/* Step 2 */}\n\n        <ViewOr orCondition={isUserTheGuesser}>\n          <GuesserWaitingRoom\n            players={players}\n            instructionSuffix={{\n              pt: 'decidirem a palavra secreta',\n              en: 'choose a secret word',\n            }}\n          />\n\n          <StepWordSelection\n            words={state?.words}\n            onSendSelectedWords={onSendSelectedWords}\n            guesser={guesser}\n          />\n        </ViewOr>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseWordSelection;\n","import { UE_SO_ISSO_API } from 'services/adapters';\nimport { useAPICall, useLanguage } from 'hooks';\n\nexport function useOnSubmitVotesAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: UE_SO_ISSO_API.submitAction,\n    actionName: 'submit-votes',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(1),\n    successMessage: translate('Votos enviados com sucesso!', 'Votes send successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar seus votos',\n      'Oops, the application failed to send your votes'\n    ),\n  });\n\n  return (payload: SubmitVotesPayload) => {\n    request({\n      action: 'SUBMIT_VOTES',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitSuggestionsAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: UE_SO_ISSO_API.submitAction,\n    actionName: 'submit-suggestion',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate('Dicas enviada com sucesso!', 'Suggestions sent successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar suas dicas',\n      'Oops, the application failed to send your suggestions'\n    ),\n  });\n\n  return (payload: SubmitSuggestionsPayload) => {\n    request({\n      action: 'SUBMIT_SUGGESTIONS',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitValidationsAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: UE_SO_ISSO_API.submitAction,\n    actionName: 'submit-validations',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate('Validação enviada com sucesso!', 'Validation sent successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar a validação das sugestões',\n      'Oops, the application failed to send the validation'\n    ),\n  });\n\n  return (payload: SubmitValidationsPayload) => {\n    request({\n      action: 'SUBMIT_VALIDATION',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnValidateSuggestionAPIRequest() {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: UE_SO_ISSO_API.submitAction,\n    actionName: 'validate-suggestion',\n    successMessage: translate('Atualizado!', 'Updated!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar atualizar',\n      'Oops, the application failed to update'\n    ),\n  });\n\n  return (payload: ValidateSuggestionPayload) => {\n    request({\n      action: 'VALIDATE_SUGGESTION',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitOutcomeAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: UE_SO_ISSO_API.submitAction,\n    actionName: 'submit-outcome',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(0),\n    successMessage: translate('Resultado enviado com sucesso!', 'Outcome sent successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar o resultado',\n      'Oops, the application failed to submit the outcome'\n    ),\n  });\n\n  return (payload: SubmitOutcomePayload) => {\n    request({\n      action: 'SUBMIT_OUTCOME',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSendGuessAPIRequest() {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: UE_SO_ISSO_API.submitAction,\n    actionName: 'send-guess',\n    successMessage: translate('Chute enviado!', 'Guess sent!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar atualizar',\n      'Oops, the application failed to update'\n    ),\n  });\n\n  return (payload: SendGuessPayload) => {\n    request({\n      action: 'SEND_GUESS',\n      ...payload,\n    });\n  };\n}\n","import { sampleSize } from 'lodash';\n\nconst suggestions = ['agua', 'bola', 'coco', 'dedo', 'egua', 'flauta', 'gatilho', 'hélio', 'jaguar'];\n\nexport const mockSuggestions = (suggestionsNumber: number): { suggestions: string[] } => {\n  return { suggestions: sampleSize(suggestions, suggestionsNumber) };\n};\n","// Ant Design Resources\nimport { Input } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks';\n\ntype SuggestionEaselProps = {\n  id: string;\n  onChangeInput?: GenericFunction;\n  onPressEnter?: GenericFunction;\n  value?: string;\n};\n\nexport function SuggestionEasel({ id, onChangeInput, onPressEnter, value }: SuggestionEaselProps) {\n  const { translate } = useLanguage();\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 230 60\"\n      overflow=\"visible\"\n      width=\"230\"\n      className=\"u-suggestion-easel\"\n    >\n      <path fill=\"#fff\" d=\"M26.7 59.5L14.1.5h202.7l12.6 59z\" />\n      <path fill=\"#4d4d4d\" d=\"M216.4 1l12.4 58H27.1L14.7 1h201.7m.8-1H13.5l12.8 60H230L217.2 0z\" />\n      <path fill=\"#4d4d4d\" d=\"M24.2 48.3L13.5 0 0 48.3z\" />\n      <foreignObject x=\"32.6\" y=\"13.9\" width=\"185\" height=\"300\">\n        <div>\n          <Input\n            placeholder={translate('Escreva dica aqui', 'Write here')}\n            key={id}\n            id={id}\n            value={value}\n            onChange={onChangeInput}\n            className=\"u-suggestion-easel__input\"\n            bordered={false}\n            onPressEnter={onPressEnter}\n            autoComplete=\"off\"\n          />\n        </div>\n      </foreignObject>\n      <path opacity=\".2\" d=\"M0 48.3L26.3 60l-2.1-11.7z\" />\n    </svg>\n  );\n}\n","// Ant Design Resources\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\n// Components\nimport { AvatarName } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n\nexport function WritingRules(): JSX.Element {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Hora de escrever uma dica para a palavra secreta!\n            <br />\n            A dica tem que ser uma palavra única que ajude o adivinhador... adivinhar.\n            <br />\n            É proibido usar derivados, partes da palavra ou traduções em outras línguas.\n            <br />E não seja tão óbvio, já que dicas similares são eliminadas!\n          </>\n        }\n        en={\n          <>\n            Time to write a clue for the secret word!\n            <br />\n            The clue MUST be a single word or compound word that helps the guesser... guess.\n            <br />\n            You can't use parts of the Secret word, translations, words in the same family (prince/princess),\n            made-up words, or phonetically identical (weather/whether).\n            <br />\n            Don't be too obvious, identical words (and variants) will be eliminated!\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function ComparisonRules(): JSX.Element {\n  return (\n    <Instruction>\n      <Translate\n        pt={\n          <>\n            Hora de comparar as dicas e eliminar as similares!\n            <br />O aplicativo elimina automaticamente todas as palavras idênticas, mas os jogadores precisam\n            eliminar as inválidas e similares.\n          </>\n        }\n        en={\n          <>\n            Time to compare the clues and eliminate variants\n            <br />\n            The app has already eliminated any identical clues.\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function ComparisonDetailedRules(): JSX.Element {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Já eliminamos todas as palavras idênticas, agora, elimine palavras inválidas ou similares.\n            <br />\n            Lembre-se que são consideradas dicas iguais palavras derivadas e conjugações:{' '}\n            <code>piloto = pilotar = pilotando</code>. Variações como pluralidade, gênero e erros ortográficos\n            também devem ser eliminadas: <code>príncipe = princesa = príncipes = pryncipi</code>.\n          </>\n        }\n        en={\n          <>\n            The app has already eliminated all identical clues, not it's time to eliminate all invalid clues.\n            <br />\n            Remember that the following clue types are considered invalid:\n            <br />\n            Variants: <code>pilot = pilots = piloting</code>.\n            <br />\n            Words on the same family: <code>prince = princess</code>\n            <br />\n            Misspelled or made-up words.\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\nexport function ComparisonPhaseRules({ controller }: { controller: GamePlayer }): JSX.Element {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            <ExclamationCircleOutlined /> Para não virar bagunça, somente{' '}\n            <AvatarName player={controller} addressUser />\n            pode clicar nas palavras para eliminá-las ou ativá-las, mas todos podem discutir.\n            <br />\n            Uma dica ser muito ruim não significa que ela seja inválida.\n            <br />\n            Refiram às palavras por letra, o Adivinhador pode estar ouvindo!\n          </>\n        }\n        en={\n          <>\n            <ExclamationCircleOutlined /> <AvatarName player={controller} />\n            is in charge of clicking on the clues to disable or enable them as valid but everybody (but the\n            guesser) should discuss.\n            <br />\n            A terrible clue is still valid if it follow the rules.\n            <br />\n            Refer to the clues by letter, the Guesser is listening!\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function GuessingRules({ guesserName }: { guesserName: string }): JSX.Element {\n  return (\n    <Instruction>\n      <Translate\n        pt={\n          <>\n            Hora de {guesserName} brilhar!\n            <br />\n            Você tem uma única change de adivinhar a palavra secreta!\n            <br />\n            Pense em voz alta! (É mais divertido para os outros jogadores)\n          </>\n        }\n        en={\n          <>\n            It's time to shine, {guesserName}!\n            <br />\n            You have a single chance to guess the secret word!\n            <br />\n            Think out loud! (It's more entertaining to the other players)\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n","// Ant Design Resources\nimport { WarningOutlined } from '@ant-design/icons';\n// Hooks\nimport { Card } from 'components/cards';\n// Components\nimport { useLanguage } from 'hooks';\n\ntype UeSoIssoCardProps = {\n  word?: any;\n  header?: any;\n};\n\nexport function UeSoIssoCard({ word, header }: UeSoIssoCardProps) {\n  const { translate } = useLanguage();\n\n  return (\n    <Card color=\"purple\" header={translate('A Palavra Secreta é', 'Secret Word', header)} size=\"large\">\n      {word ?? <WarningOutlined />}\n    </Card>\n  );\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\nimport { CloudUploadOutlined } from '@ant-design/icons';\n// Hooks\nimport { useMock } from 'hooks';\n// Utils\nimport { mockSuggestions } from './utils/mock';\n// Components\nimport { SuggestionEasel } from './components/SuggestionEasel';\nimport { WritingRules } from './components/RulesBlobs';\nimport { UeSoIssoCard as Card } from './components/UeSoIssoCard';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { AvatarName } from 'components/avatars';\nimport { ReadyPlayersBar } from 'components/players';\n\ntype StepSuggestionProps = {\n  guesser: GamePlayer;\n  onSendSuggestions: GenericFunction;\n  secretWord: UeSoIssoCard;\n  suggestionsNumber?: number;\n  players: GamePlayers;\n};\n\nexport function StepSuggestion({\n  guesser,\n  onSendSuggestions,\n  secretWord,\n  players,\n  suggestionsNumber = 1,\n}: StepSuggestionProps) {\n  const [suggestions, setSuggestions] = useState([]);\n\n  const onChangeInput = (e: any) => {\n    const { id, value } = e.target;\n    if (id && value?.length > 1) {\n      const indexStr = id.split('-')[1];\n      const index = Number(indexStr) - 1;\n      setSuggestions((s: any) => {\n        const newState = { ...s };\n        newState[index] = value.toUpperCase().trim();\n        return newState;\n      });\n    }\n  };\n\n  const suggestionsValues = Object.values(suggestions);\n\n  // On enter in the easel if only one suggestion is necessary\n  const onPressEnter = () => {\n    if (suggestionsNumber === suggestionsValues.length) {\n      onSendSuggestions({ suggestions: suggestionsValues });\n    }\n  };\n\n  useMock(() => {\n    onSendSuggestions(mockSuggestions(suggestionsNumber));\n  }, []);\n\n  return (\n    <Step fullWidth>\n      <Title>\n        <Translate\n          pt={\n            <>\n              Escreva uma dica para <AvatarName player={guesser} />\n            </>\n          }\n          en={\n            <>\n              Write a clue for <AvatarName player={guesser} />\n            </>\n          }\n        />\n      </Title>\n\n      <WritingRules />\n\n      <Card word={secretWord.text} />\n\n      {suggestionsNumber > 1 && (\n        <Instruction contained>\n          <Translate\n            pt={\n              <>Já que esse jogo tem menos jogadores, você tem que escrever {suggestionsNumber} sugestões</>\n            }\n            en={<>Since we have fewer players you must write {suggestionsNumber} clues</>}\n          />\n        </Instruction>\n      )}\n\n      <Space className=\"u-word-suggestion-step__inputs\">\n        {Array(suggestionsNumber)\n          .fill(1)\n          .map((entry, index) => {\n            const id = `suggestion-${entry + index}`;\n            return (\n              <SuggestionEasel key={id} id={id} onChangeInput={onChangeInput} onPressEnter={onPressEnter} />\n            );\n          })}\n      </Space>\n\n      <Space className=\"u-word-suggestion-step__submit\">\n        <Button\n          icon={<CloudUploadOutlined />}\n          type=\"primary\"\n          onClick={() => onSendSuggestions({ suggestions: suggestionsValues })}\n          disabled={suggestionsValues.length < suggestionsNumber}\n          size=\"large\"\n        >\n          <Translate pt=\"Enviar dica\" en=\"Send clue\" />\n          {suggestionsNumber > 1 && 's'}\n        </Button>\n      </Space>\n\n      <ReadyPlayersBar players={players} />\n    </Step>\n  );\n}\n","// Hooks\nimport { useIsUserReady, useWhichPlayerIsThe, useLanguage, useStep } from 'hooks';\nimport { useOnSubmitSuggestionsAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { ViewOr } from 'components/views';\nimport { StepSuggestion } from './StepSuggestion';\nimport { WritingRules } from './components/RulesBlobs';\nimport { GuesserWaitingRoom } from './components/GuesserWaitingRoom';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\n\nfunction PhaseSuggest({ state, players, info }: PhaseProps) {\n  const isUserReady = useIsUserReady(players, state);\n  const { translate } = useLanguage();\n  const { step, goToNextStep, setStep } = useStep(0);\n  const [guesser, isUserTheGuesser] = useWhichPlayerIsThe('guesserId', state, players);\n\n  const onSendSuggestions = useOnSubmitSuggestionsAPIRequest(setStep);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.UE_SO_ISSO.SUGGEST}\n      className=\"word-selection-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady]} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          type=\"writing\"\n          title={translate('Escreva uma dica!', 'Write a Clue!')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <WritingRules />\n          {isUserTheGuesser && (\n            <Instruction contained>\n              <Translate\n                pt=\"Já que você é o adivinhador, relaxe e aguarde...\"\n                en=\"Since you're the guesser, just relax and wait...\"\n              />\n            </Instruction>\n          )}\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n\n        <ViewOr orCondition={isUserTheGuesser}>\n          <GuesserWaitingRoom\n            players={players}\n            instructionSuffix={{\n              pt: 'escrevem dicas',\n              en: 'write clues',\n            }}\n          />\n\n          <StepSuggestion\n            guesser={guesser}\n            onSendSuggestions={onSendSuggestions}\n            secretWord={state.secretWord}\n            suggestionsNumber={state.suggestionsNumber}\n            players={players}\n          />\n        </ViewOr>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseSuggest;\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Avatar as AntAvatar } from 'antd';\nimport { CloseOutlined } from '@ant-design/icons';\n// Utils\nimport { getColorFromIndex } from 'utils/helpers';\nimport { LETTERS } from 'utils/constants';\nimport { Card } from 'components/cards';\nimport { Avatar } from 'components/avatars';\n// Components\n\ntype SuggestionCardProps = {\n  avatarId: string;\n  index: number;\n  playerName?: PlayerName;\n  invalid?: boolean;\n  suggestion: string;\n};\n\nexport function SuggestionCard({ avatarId, playerName, index, invalid, suggestion }: SuggestionCardProps) {\n  return (\n    <Card\n      size=\"medium\"\n      color={getColorFromIndex(index)}\n      className={clsx(invalid && 'u-suggestion-card__invalid')}\n      header={playerName ? `${LETTERS[index]} (${playerName})` : LETTERS[index]}\n    >\n      {invalid ? (\n        <AntAvatar size=\"small\" className=\"u-suggestion-card__suggestion-avatar\">\n          <CloseOutlined />\n        </AntAvatar>\n      ) : (\n        <Avatar id={avatarId} size=\"small\" className=\"u-suggestion-card__suggestion-avatar\" />\n      )}\n      {suggestion}\n    </Card>\n  );\n}\n","import { Space } from 'antd';\nimport { SuggestionCard } from './SuggestionCard';\n\ntype CardsProps = {\n  suggestions: UseSoIssoSuggestion[];\n  readOnly: boolean;\n  players: GamePlayers;\n  onSetValidation: Function;\n  isLoading: boolean;\n  myRecommendation: UseSoIssoSuggestion[];\n};\n\nexport function Cards({\n  suggestions,\n  players,\n  onSetValidation,\n  isLoading,\n  myRecommendation,\n  readOnly = true,\n}: CardsProps) {\n  return (\n    <Space className=\"u-word-compare-suggestions-step__suggestions\">\n      {suggestions.map((suggestionEntry, index) => {\n        if (readOnly) {\n          return (\n            <div key={`${suggestionEntry.suggestion}-${index}`}>\n              <SuggestionCard\n                suggestion={suggestionEntry.suggestion}\n                invalid={suggestionEntry.invalid}\n                playerName={players[suggestionEntry.playerId].name}\n                avatarId={players[suggestionEntry.playerId].avatarId}\n                index={index}\n              />\n            </div>\n          );\n        }\n\n        return (\n          <button\n            key={`${suggestionEntry.suggestion}-${index}`}\n            className=\"u-word-compare-suggestions-step__suggestion-button\"\n            onClick={() => onSetValidation(index, suggestionEntry)}\n            disabled={isLoading}\n          >\n            <SuggestionCard\n              suggestion={suggestionEntry.suggestion}\n              invalid={myRecommendation?.[index]?.invalid}\n              avatarId={players[suggestionEntry.playerId].avatarId}\n              playerName={players[suggestionEntry.playerId].name}\n              index={index}\n            />\n          </button>\n        );\n      })}\n    </Space>\n  );\n}\n","import { useEffect, useState } from 'react';\n// Ant Design Resources\nimport { Button, message, Space } from 'antd';\nimport { CloudUploadOutlined } from '@ant-design/icons';\n// Hooks\nimport { useGlobalState, useLanguage, useLoading } from 'hooks';\n// Utils\nimport { deepCopy } from 'utils/helpers';\n// Components\nimport { UeSoIssoCard as Card } from './components/UeSoIssoCard';\nimport { ComparisonDetailedRules, ComparisonPhaseRules } from './components/RulesBlobs';\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { PopoverRule } from 'components/rules';\nimport { AdminButton, AdminOnlyContainer } from 'components/admin';\nimport { messageContent } from 'components/pop-up';\nimport { Cards } from './components/Cards';\n\ntype StepCompareSuggestionsProps = {\n  isUserTheController: boolean;\n  controller: GamePlayer;\n  onValidateSuggestions: GenericFunction;\n  onUpdateSuggestions: GenericFunction;\n  players: GamePlayers;\n  secretWord: UeSoIssoCard;\n  suggestions: UseSoIssoSuggestion[];\n};\n\nexport function StepCompareSuggestions({\n  isUserTheController,\n  controller,\n  onValidateSuggestions,\n  onUpdateSuggestions,\n  players,\n  secretWord,\n  suggestions,\n}: StepCompareSuggestionsProps) {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n  const [myRecommendation, setMyRecommendation] = useState<UseSoIssoSuggestion[]>(deepCopy(suggestions));\n  const [isAdmin] = useGlobalState('isAdmin');\n  const [wasMessageShown, setWasMessageShown] = useState(false);\n\n  const onSetValidation = (index: number, suggestionEntry: UseSoIssoSuggestion, notAllowed?: boolean) => {\n    if (notAllowed) return;\n\n    const newRecommendation = [...myRecommendation];\n    if (newRecommendation[index]) {\n      newRecommendation[index].invalid = !newRecommendation[index].invalid;\n    } else {\n      newRecommendation[index] = {\n        ...suggestionEntry,\n        invalid: true,\n      };\n    }\n\n    onUpdateSuggestions({ suggestions: newRecommendation });\n    setMyRecommendation(newRecommendation);\n  };\n\n  useEffect(() => {\n    if (isUserTheController && !wasMessageShown && !isLoading) {\n      message.info(\n        messageContent(\n          translate('Você controla!', 'You control!'),\n          translate('Siga as instruções na página', 'Follow the instructions on the page'),\n          controller.id,\n          3\n        )\n      );\n      setWasMessageShown(true);\n    }\n  }, [isUserTheController, controller.id, translate, wasMessageShown, isLoading]);\n\n  const suggestionsValues = Object.values(myRecommendation);\n\n  return (\n    <Step fullWidth>\n      <Title white>\n        <Translate pt=\"Comparem as Dicas\" en=\"Compare Clues\" />\n      </Title>\n\n      <Card word={secretWord.text} />\n\n      <PopoverRule content={<ComparisonDetailedRules />} showLabel />\n\n      <ComparisonPhaseRules controller={controller} />\n\n      <Cards\n        suggestions={suggestions}\n        readOnly={!isUserTheController}\n        players={players}\n        onSetValidation={onSetValidation}\n        isLoading={isLoading}\n        myRecommendation={myRecommendation}\n      />\n\n      {isUserTheController && (\n        <Space className=\"u-word-compare-suggestions-step__submit\">\n          <Button\n            icon={<CloudUploadOutlined />}\n            type=\"primary\"\n            onClick={() =>\n              onValidateSuggestions({\n                validSuggestions: suggestionsValues.filter((suggestion) => !suggestion.invalid),\n              })\n            }\n            disabled={isLoading}\n          >\n            <Translate pt=\"Confirmar dicas válidas\" en=\"Confirm valid clues\" />\n          </Button>\n        </Space>\n      )}\n\n      <AdminOnlyContainer direction=\"vertical\" align=\"center\">\n        <Cards\n          suggestions={suggestions}\n          readOnly={!isAdmin}\n          players={players}\n          onSetValidation={onSetValidation}\n          isLoading={isLoading}\n          myRecommendation={myRecommendation}\n        />\n        <AdminButton\n          onClick={() =>\n            onValidateSuggestions({\n              validSuggestions: suggestionsValues.filter((suggestion) => !suggestion.invalid),\n            })\n          }\n        >\n          <Translate pt=\"Confirmar dicas válidas como Admin\" en=\"Confirm valid clues as Admin\" />\n        </AdminButton>\n      </AdminOnlyContainer>\n    </Step>\n  );\n}\n","// Hooks\nimport { useWhichPlayerIsThe, useLanguage, useStep } from 'hooks';\nimport { useOnSubmitValidationsAPIRequest, useOnValidateSuggestionAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { StepCompareSuggestions } from './StepCompareSuggestions';\nimport { ComparisonRules } from './components/RulesBlobs';\nimport { GuesserWaitingRoom } from './components/GuesserWaitingRoom';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { ViewOr } from 'components/views';\nimport { WaitingRoom } from 'components/players';\n\nfunction PhaseCompare({ state, players, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, goToNextStep, setStep } = useStep(0);\n  const [, isUserTheGuesser] = useWhichPlayerIsThe('guesserId', state, players);\n  const [controller, isUserTheController] = useWhichPlayerIsThe('controllerId', state, players);\n\n  const onValidateSuggestions = useOnSubmitValidationsAPIRequest(setStep);\n\n  const onUpdateSuggestions = useOnValidateSuggestionAPIRequest();\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.UE_SO_ISSO.COMPARE}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          type=\"verify-list\"\n          title={translate('Comparação de dicas!', 'Clue Check!')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <ComparisonRules />\n          {isUserTheGuesser && (\n            <Instruction contained>\n              <Translate\n                pt=\"Já que você é o adivinhador, relaxe e aguarde... novamente\"\n                en=\"Since you're the guesser, just relax and wait... again\"\n              />\n            </Instruction>\n          )}\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <ViewOr orCondition={isUserTheGuesser}>\n          <GuesserWaitingRoom\n            players={players}\n            instructionSuffix={{\n              pt: 'validam dicas',\n              en: 'validate the clues',\n            }}\n          />\n\n          <StepCompareSuggestions\n            controller={controller}\n            isUserTheController={isUserTheController}\n            secretWord={state.secretWord}\n            suggestions={state.suggestions}\n            players={players}\n            onValidateSuggestions={onValidateSuggestions}\n            onUpdateSuggestions={onUpdateSuggestions}\n          />\n        </ViewOr>\n\n        {/* Step 2 */}\n        <WaitingRoom\n          players={players}\n          title={translate('Enviando a confirmação de dicas', 'Sending confirmation')}\n          instruction=\"...\"\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseCompare;\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, Input, Space } from 'antd';\nimport { CloudUploadOutlined, MinusOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLanguage, useLoading } from 'hooks';\n// Components\nimport { Translate } from 'components/language';\n\ntype GuessProps = {\n  onSubmitOutcome: GenericFunction;\n  onSendGuess: GenericFunction;\n};\n\nexport function Guess({ onSubmitOutcome, onSendGuess }: GuessProps) {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n  const [guess, setGuess] = useState('');\n\n  const onPressEnter = () => {\n    if (guess && guess.length > 0) {\n      onSendGuess({ guess });\n    }\n  };\n\n  return (\n    <Space className=\"u-word-guess-phase__suggestions\">\n      <Input\n        placeholder={translate('Digite aqui seu chute', 'Type your guess here')}\n        onChange={(e) => setGuess(e.target.value)}\n        onPressEnter={onPressEnter}\n        size=\"large\"\n      />\n      <Button\n        icon={<CloudUploadOutlined />}\n        type=\"primary\"\n        onClick={() => onSendGuess({ guess })}\n        disabled={guess.length < 3 || isLoading}\n        size=\"large\"\n      >\n        <Translate pt=\"Enviar\" en=\"Submit\" />\n      </Button>\n      <span>\n        <Translate pt=\"OU\" en=\"OR\" />\n      </span>\n      <Button\n        icon={<MinusOutlined />}\n        type=\"default\"\n        onClick={() => onSubmitOutcome({ outcome: 'PASS' })}\n        disabled={isLoading}\n      >\n        <Translate pt=\"Passar a vez...\" en=\"Skip turn\" />\n      </Button>\n    </Space>\n  );\n}\n","// Ant Design Resources\nimport { Space } from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\n// Components\n\nimport { UeSoIssoCard as Card } from './components/UeSoIssoCard';\nimport { Guess } from './components/Guess';\nimport { SuggestionEasel } from './components/SuggestionEasel';\nimport { Step } from 'components/steps';\nimport { ViewOr } from 'components/views';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { AvatarName } from 'components/avatars';\n\ntype StepGuessingProps = {\n  guesser: GamePlayer;\n  isUserTheGuesser: boolean;\n  secretWord: UeSoIssoCard;\n  onSendGuess: GenericFunction;\n  onSubmitOutcome: GenericFunction;\n  validSuggestions: UseSoIssoSuggestion[];\n};\n\nexport function StepGuessing({\n  guesser,\n  isUserTheGuesser,\n  secretWord,\n  onSendGuess,\n  onSubmitOutcome,\n  validSuggestions,\n}: StepGuessingProps) {\n  return (\n    <Step fullWidth>\n      <ViewOr orCondition={isUserTheGuesser}>\n        <Space direction=\"vertical\" align=\"center\">\n          <Title>\n            <Translate pt=\"Hora de brilhar\" en=\"Time to shine\" />, <AvatarName player={guesser} />!\n          </Title>\n          <Instruction contained>\n            <Translate\n              pt=\"Você tem uma única chance de adivinhar a palavra secreta!\"\n              en=\"You have a single chance to guess the secret word!\"\n            />\n          </Instruction>\n\n          <Card word={<QuestionCircleOutlined />} />\n\n          <Instruction contained>\n            <Translate pt=\"Escreva seu chute no campo abaixo\" en=\"Write your guess below\" />\n          </Instruction>\n          <Guess onSubmitOutcome={onSubmitOutcome} onSendGuess={onSendGuess} />\n\n          <Space className=\"u-word-guess-phase__suggestions\">\n            {validSuggestions.map((suggestionEntry, index) => {\n              const id = `${suggestionEntry.suggestion}-${index}`;\n              return <SuggestionEasel key={id} id={id} value={suggestionEntry.suggestion} />;\n            })}\n          </Space>\n        </Space>\n\n        <Space direction=\"vertical\" align=\"center\">\n          <Title>\n            <Translate\n              pt={\n                <>\n                  Hora de <AvatarName player={guesser} /> brilhar!\n                </>\n              }\n              en={\n                <>\n                  Time for <AvatarName player={guesser} /> to shine!\n                </>\n              }\n            />\n          </Title>\n\n          <Instruction contained>\n            {guesser.name}{' '}\n            <Translate\n              pt=\"tem uma única chance de adivinhar a palavra secreta!\"\n              en=\"has a single chance to guess the secret word!\"\n            />\n          </Instruction>\n\n          <Card word={secretWord.text} />\n\n          <Instruction contained>\n            {guesser.name} <Translate pt=\"está pensando...\" en=\"is thinking...\" />\n          </Instruction>\n\n          <Space className=\"u-word-guess-phase__suggestions\">\n            {validSuggestions.map((suggestionEntry, index) => {\n              const id = `${suggestionEntry.suggestion}-${index}`;\n              return <SuggestionEasel key={id} id={id} value={suggestionEntry.suggestion} />;\n            })}\n          </Space>\n        </Space>\n      </ViewOr>\n    </Step>\n  );\n}\n","import { useEffect } from 'react';\nimport clsx from 'clsx';\n// Ant Design Resources\nimport { Button, message, Space } from 'antd';\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from 'hooks';\n// Components\nimport { UeSoIssoCard as Card } from './components/UeSoIssoCard';\nimport { SuggestionEasel } from './components/SuggestionEasel';\nimport { messageContent } from 'components/pop-up';\nimport { Step } from 'components/steps';\nimport { Instruction, TextHighlight, Title } from 'components/text';\nimport { AvatarName } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { ViewOr } from 'components/views';\nimport { getAnimationClass } from 'utils/helpers';\n\ntype StepGuessVerificationProps = {\n  guess: string;\n  guesser: GamePlayer;\n  isAdmin: boolean;\n  isLoading: boolean;\n  isUserTheGuesser: boolean;\n  isUserTheController: boolean;\n  controller: GamePlayer;\n  secretWord: UeSoIssoCard;\n  onSubmitOutcome: GenericFunction;\n  validSuggestions: UseSoIssoSuggestion[];\n};\n\nexport function StepGuessVerification({\n  guess,\n  guesser,\n  isAdmin,\n  isLoading,\n  isUserTheGuesser,\n  isUserTheController,\n  controller,\n  secretWord,\n  onSubmitOutcome,\n  validSuggestions,\n}: StepGuessVerificationProps) {\n  const { translate } = useLanguage();\n\n  useEffect(() => {\n    if (isUserTheController && !isLoading) {\n      message.info(\n        messageContent(\n          translate('Você controla!', 'You control!'),\n          translate('Selecione se o adivinhador acertou ou não', 'Select if the guesser got it right or not'),\n          controller.id,\n          3\n        )\n      );\n    }\n  }, [isUserTheController, controller.id, translate, isLoading]);\n\n  return (\n    <Step fullWidth>\n      <Title className={getAnimationClass('heartBeat')}>\n        <AvatarName player={guesser} addressUser /> <Translate pt=\"disse\" en=\"said\" />{' '}\n        <TextHighlight>{guess}</TextHighlight>\n      </Title>\n\n      <Card word={secretWord.text} />\n\n      <Instruction contained>\n        <ViewOr orCondition={isUserTheGuesser}>\n          <Translate\n            pt={\n              <>\n                <AvatarName player={controller} /> está encarregado(a) de apertar os botões se você acertou ou\n                não. <br />\n                São 3 pontos se você acertar, -1 se errar, mas você pode passar e não tentar, covarde!..{' '}\n                <br />\n                As dicas foram:\n              </>\n            }\n            en={\n              <>\n                <AvatarName player={controller} /> is in charge of confirming if you got it right or not.\n                <br />\n                It's 3 points if you get it right but -1 if you get it wrong. <br />\n                The clues were:\n              </>\n            }\n          />\n\n          <Translate\n            pt={\n              <>\n                <AvatarName player={controller} addressUser /> está encarregado(a) de apertar os botões se{' '}\n                <AvatarName player={guesser} />\n                acertou ou não. <br />\n                São 3 pontos se você acertar, -1 se errar, mas você pode passar e não tentar, covarde!..{' '}\n                <br />\n                As dicas são:\n              </>\n            }\n            en={\n              <>\n                <AvatarName player={controller} addressUser /> is in charge to confirm if{' '}\n                <AvatarName player={guesser} /> got it correct or not. <br />\n                It's 3 points if they got it right but -1 if they got it wrong. <br />\n                The clues were:\n              </>\n            }\n          />\n        </ViewOr>\n      </Instruction>\n\n      <Space className=\"u-word-guess-phase__suggestions\">\n        {validSuggestions.map((suggestionEntry, index) => {\n          const id = `${suggestionEntry.suggestion}-${index}`;\n          return <SuggestionEasel key={id} id={id} value={suggestionEntry.suggestion} />;\n        })}\n      </Space>\n\n      {(isUserTheController || isAdmin) && (\n        <Space className={clsx('u-word-guess-phase__guess-submit', isAdmin && 'admin-container')}>\n          <Button\n            icon={<CheckOutlined />}\n            type=\"primary\"\n            style={{ backgroundColor: 'green' }}\n            onClick={() => onSubmitOutcome({ outcome: 'CORRECT' })}\n            disabled={isLoading}\n          >\n            <Translate pt=\"Acertou\" en=\"Correct\" />\n          </Button>\n          <Button\n            icon={<CloseOutlined />}\n            type=\"primary\"\n            danger\n            onClick={() => onSubmitOutcome({ outcome: 'WRONG' })}\n            disabled={isLoading}\n          >\n            <Translate pt=\"Errou\" en=\"Wrong\" />\n          </Button>\n        </Space>\n      )}\n    </Step>\n  );\n}\n","import { useEffect } from 'react';\n// Hooks\nimport { useGlobalState, useLoading, useWhichPlayerIsThe, useLanguage, useStep } from 'hooks';\nimport { useOnSendGuessAPIRequest, useOnSubmitOutcomeAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { StepGuessing } from './StepGuessing';\nimport { StepGuessVerification } from './StepGuessVerification';\nimport { GuessingRules } from './components/RulesBlobs';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\n\nfunction PhaseGuess({ state, players, info }: PhaseProps) {\n  const { isLoading } = useLoading();\n  const { translate } = useLanguage();\n  const { step, goToNextStep, setStep } = useStep(0);\n  const [isAdmin] = useGlobalState('isAdmin');\n  const [guesser, isUserTheGuesser] = useWhichPlayerIsThe('guesserId', state, players);\n  const [controller, isUserTheController] = useWhichPlayerIsThe('controllerId', state, players);\n\n  const onSubmitOutcome = useOnSubmitOutcomeAPIRequest(setStep);\n\n  const onSendGuess = useOnSendGuessAPIRequest();\n\n  // If guess is present in the state, move to the next step\n  useEffect(() => {\n    if (state?.guess) {\n      setStep(2);\n    }\n  }, [state, setStep]);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.UE_SO_ISSO.GUESS}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          type=\"guess\"\n          title={translate('Adivinhação', 'Guessing')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <GuessingRules guesserName={guesser.name} />\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepGuessing\n          guesser={guesser}\n          isUserTheGuesser={isUserTheGuesser}\n          onSubmitOutcome={onSubmitOutcome}\n          onSendGuess={onSendGuess}\n          validSuggestions={state.validSuggestions}\n          secretWord={state.secretWord}\n        />\n\n        {/* Step 2 */}\n        <StepGuessVerification\n          guesser={guesser}\n          guess={state.guess}\n          isUserTheGuesser={isUserTheGuesser}\n          onSubmitOutcome={onSubmitOutcome}\n          validSuggestions={state.validSuggestions}\n          secretWord={state.secretWord}\n          controller={controller}\n          isUserTheController={isUserTheController}\n          isAdmin={isAdmin}\n          isLoading={isLoading}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseGuess;\n","// Components\nimport { GameOverWrapper } from 'components/game-over';\n\nfunction PhaseGameOver({ state, info }: PhaseProps) {\n  return <GameOverWrapper info={info} state={state} announcementIcon=\"flag\" />;\n}\n\nexport default PhaseGameOver;\n","// Constants\nimport { GAME_COLLECTION } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport PhaseWordSelection from './PhaseWordSelection';\nimport PhaseSuggest from './PhaseSuggest';\nimport PhaseCompare from './PhaseCompare';\nimport PhaseGuess from './PhaseGuess';\nimport PhaseGameOver from './PhaseGameOver';\n\nfunction SessionUeSoIsso({ gameId }: SessionProps) {\n  function getActiveComponent(phase: string) {\n    switch (phase) {\n      case PHASES.DEFAULT.LOBBY:\n        return PhaseLobby;\n      case PHASES.DEFAULT.RULES:\n        return PhaseRules;\n      case PHASES.DEFAULT.SETUP:\n        return PhaseSetup;\n      case PHASES.UE_SO_ISSO.WORD_SELECTION:\n        return PhaseWordSelection;\n      case PHASES.UE_SO_ISSO.SUGGEST:\n        return PhaseSuggest;\n      case PHASES.UE_SO_ISSO.COMPARE:\n        return PhaseCompare;\n      case PHASES.UE_SO_ISSO.GUESS:\n        return PhaseGuess;\n      case PHASES.DEFAULT.GAME_OVER:\n        return PhaseGameOver;\n      default:\n        return PageError;\n    }\n  }\n\n  return (\n    <Session\n      gameId={gameId}\n      gameCollection={GAME_COLLECTION.UE_SO_ISSO}\n      getActiveComponent={getActiveComponent}\n    />\n  );\n}\n\nexport default SessionUeSoIsso;\n","// This icon file is generated automatically.\nvar CloudUploadOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M518.3 459a8 8 0 00-12.6 0l-112 141.7a7.98 7.98 0 006.3 12.9h73.9V856c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V613.7H624c6.7 0 10.4-7.7 6.3-12.9L518.3 459z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M811.4 366.7C765.6 245.9 648.9 160 512.2 160S258.8 245.8 213 366.6C127.3 389.1 64 467.2 64 560c0 110.5 89.5 200 199.9 200H304c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8h-40.1c-33.7 0-65.4-13.4-89-37.7-23.5-24.2-36-56.8-34.9-90.6.9-26.4 9.9-51.2 26.2-72.1 16.7-21.3 40.1-36.8 66.1-43.7l37.9-9.9 13.9-36.6c8.6-22.8 20.6-44.1 35.7-63.4a245.6 245.6 0 0152.4-49.9c41.1-28.9 89.5-44.2 140-44.2s98.9 15.3 140 44.2c19.9 14 37.5 30.8 52.4 49.9 15.1 19.3 27.1 40.7 35.7 63.4l13.8 36.5 37.8 10C846.1 454.5 884 503.8 884 560c0 33.1-12.9 64.3-36.3 87.7a123.07 123.07 0 01-87.6 36.3H720c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h40.1C870.5 760 960 670.5 960 560c0-92.7-63.1-170.7-148.6-193.3z\" } }] }, \"name\": \"cloud-upload\", \"theme\": \"outlined\" };\nexport default CloudUploadOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloudUploadOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloudUploadOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CloudUploadOutlined = function CloudUploadOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CloudUploadOutlinedSvg\n  }));\n};\n\nCloudUploadOutlined.displayName = 'CloudUploadOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloudUploadOutlined);","// This icon file is generated automatically.\nvar DownSquareOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M505.5 658.7c3.2 4.4 9.7 4.4 12.9 0l178-246c3.8-5.3 0-12.7-6.5-12.7H643c-10.2 0-19.9 4.9-25.9 13.2L512 558.6 406.8 413.2c-6-8.3-15.6-13.2-25.9-13.2H334c-6.5 0-10.3 7.4-6.5 12.7l178 246z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z\" } }] }, \"name\": \"down-square\", \"theme\": \"outlined\" };\nexport default DownSquareOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DownSquareOutlinedSvg from \"@ant-design/icons-svg/es/asn/DownSquareOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar DownSquareOutlined = function DownSquareOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: DownSquareOutlinedSvg\n  }));\n};\n\nDownSquareOutlined.displayName = 'DownSquareOutlined';\nexport default /*#__PURE__*/React.forwardRef(DownSquareOutlined);","// This icon file is generated automatically.\nvar MinusOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M872 474H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h720c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"minus\", \"theme\": \"outlined\" };\nexport default MinusOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport MinusOutlinedSvg from \"@ant-design/icons-svg/es/asn/MinusOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar MinusOutlined = function MinusOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: MinusOutlinedSvg\n  }));\n};\n\nMinusOutlined.displayName = 'MinusOutlined';\nexport default /*#__PURE__*/React.forwardRef(MinusOutlined);","// This icon file is generated automatically.\nvar UpCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M518.5 360.3a7.95 7.95 0 00-12.9 0l-178 246c-3.8 5.3 0 12.7 6.5 12.7H381c10.2 0 19.9-4.9 25.9-13.2L512 460.4l105.2 145.4c6 8.3 15.6 13.2 25.9 13.2H690c6.5 0 10.3-7.4 6.5-12.7l-178-246z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"up-circle\", \"theme\": \"outlined\" };\nexport default UpCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport UpCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/UpCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar UpCircleOutlined = function UpCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: UpCircleOutlinedSvg\n  }));\n};\n\nUpCircleOutlined.displayName = 'UpCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(UpCircleOutlined);","// This icon file is generated automatically.\nvar WarningOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M464 720a48 48 0 1096 0 48 48 0 10-96 0zm16-304v184c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V416c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8zm475.7 440l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48zm-783.5-27.9L512 239.9l339.8 588.2H172.2z\" } }] }, \"name\": \"warning\", \"theme\": \"outlined\" };\nexport default WarningOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport WarningOutlinedSvg from \"@ant-design/icons-svg/es/asn/WarningOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar WarningOutlined = function WarningOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: WarningOutlinedSvg\n  }));\n};\n\nWarningOutlined.displayName = 'WarningOutlined';\nexport default /*#__PURE__*/React.forwardRef(WarningOutlined);"],"names":["Card","children","header","footer","color","size","randomColor","className","headerClassName","footerClassName","baseClass","bgColor","getColorFromLetter","toUpperCase","clsx","style","startsWith","backgroundColor","FloatingHand","subtitle","type","useState","isExpanded","setIsExpanded","translate","useLanguage","onMouseOver","onMouseLeave","alt","pt","en","ImageBlurButton","cardId","useBlurCards","addBlurCard","placement","title","ghost","onClick","EyeInvisibleOutlined","ImageBlurButtonContainer","props","ImageCard","imageId","cardWidth","preview","blurredCards","blurEnabled","fallbackName","length","imageURL","replace","isBlurred","width","src","process","placeholder","fallback","PUBLIC_URL","maskClassName","ImageCardHand","hand","onSelectCard","selectButtonLabel","selectButtonClass","sizeRatio","cardSize","minCardSize","disabledSelectButton","useCardWidth","map","Boolean","icon","DownSquareOutlined","disabled","ImageCardBack","ImageCardPreloadHand","ImageCardSelectButton","selectLabel","deselectLabel","isSelected","shape","UpCircleOutlined","custom","messageContent","description","id","duration","key","content","top","window","innerWidth","message","RoundAnnouncement","round","onPressButton","buttonText","time","unskippable","circleColor","roundTitlePt","roundTitleEn","getAnimationClass","current","onExpire","showTimer","View","ViewIf","isVisible","ViewOr","orCondition","ViewSwitch","cases","Error","console","warn","StepWordSelection","guesser","onSendSelectedWords","words","selectedWords","setSelectedWords","selectedWordsArray","Object","keys","noSelection","fullWidth","white","player","contained","word","wordId","s","newState","text","CheckCircleFilled","CloudUploadOutlined","votes","randomSelection","GameProgressBar","groupScore","totalProgress","Math","total","percent","success","strokeColor","status","GuesserWaitingRoom","players","instructionSuffix","language","instructionPrefix","instruction","RoundAnnouncementText","addressUser","state","info","isUserReady","useIsUserReady","useWhichPlayerIsThe","isUserTheGuesser","useStep","step","goToNextStep","setStep","request","useAPICall","apiFunction","UE_SO_ISSO_API","actionName","onBeforeCall","onError","successMessage","errorMessage","payload","action","useOnSubmitVotesAPIRequest","phase","allowedPhase","PHASES","conditions","onClose","currentRound","suggestions","mockSuggestions","suggestionsNumber","sampleSize","SuggestionEasel","onChangeInput","onPressEnter","value","xmlns","viewBox","overflow","fill","d","x","y","height","onChange","bordered","autoComplete","opacity","WritingRules","ComparisonRules","ComparisonDetailedRules","ComparisonPhaseRules","controller","ExclamationCircleOutlined","GuessingRules","guesserName","UeSoIssoCard","WarningOutlined","StepSuggestion","onSendSuggestions","secretWord","setSuggestions","e","target","indexStr","split","index","Number","trim","suggestionsValues","values","useMock","Array","entry","useOnSubmitSuggestionsAPIRequest","SuggestionCard","avatarId","playerName","invalid","suggestion","getColorFromIndex","LETTERS","CloseOutlined","Cards","onSetValidation","isLoading","myRecommendation","readOnly","suggestionEntry","playerId","name","StepCompareSuggestions","isUserTheController","onValidateSuggestions","onUpdateSuggestions","useLoading","deepCopy","setMyRecommendation","useGlobalState","isAdmin","wasMessageShown","setWasMessageShown","notAllowed","newRecommendation","useEffect","showLabel","validSuggestions","filter","direction","align","useOnSubmitValidationsAPIRequest","useOnValidateSuggestionAPIRequest","Guess","onSubmitOutcome","onSendGuess","guess","setGuess","MinusOutlined","outcome","StepGuessing","QuestionCircleOutlined","StepGuessVerification","CheckOutlined","danger","useOnSubmitOutcomeAPIRequest","useOnSendGuessAPIRequest","announcementIcon","gameId","gameCollection","GAME_COLLECTION","getActiveComponent","PhaseLobby","PhaseRules","PhaseSetup","PhaseWordSelection","PhaseSuggest","PhaseCompare","PhaseGuess","PhaseGameOver","PageError","ref","React","AntdIcon","_objectSpread","CloudUploadOutlinedSvg","displayName","DownSquareOutlinedSvg","MinusOutlinedSvg","UpCircleOutlinedSvg","WarningOutlinedSvg"],"sourceRoot":""}