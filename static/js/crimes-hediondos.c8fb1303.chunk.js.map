{"version":3,"file":"static/js/crimes-hediondos.c8fb1303.chunk.js","mappings":"yUAoBA,SAASA,EAAT,GAA0F,IAAnEC,EAAkE,EAAlEA,YAAaC,EAAqD,EAArDA,MAAOC,EAA8C,EAA9CA,YACnCC,EAAaH,EAAc,EAC3BI,EAAaJ,EAAc,EACjC,OACE,eACEK,WAAWC,EAAAA,EAAAA,GACT,8BACAH,GAAc,oCACdC,GAAc,qCAHD,uCAImBH,IALpC,UAQE,UAAC,IAAD,CACEM,MAAK,OAAEL,QAAF,IAAEA,EAAAA,GAAe,SAAC,KAAD,CAAWM,GAAG,gBAAgBC,GAAG,kBACvDC,MAAOP,EAAa,OAASC,EAAa,MAAQ,OAFpD,UAIGD,EAAa,IAAM,GACnBH,MAIR,CAQD,SAASW,EAAT,GAIoC,IAHlCC,EAGiC,EAHjCA,aACAC,EAEiC,EAFjCA,SAEiC,IADjCC,yBAAAA,OACiC,MADN,GACM,EAC3BC,EAASC,MAAMC,QAAQL,GAAgBA,EAAe,CAACA,GAC7D,OACE,eAAIP,UAAU,oCAAd,SACGU,EAAOG,KAAI,SAAClB,EAAamB,GAAd,OACV,SAACpB,EAAD,CAEEC,YAAaA,EACbC,MAAOkB,EACPjB,YAAaY,EAAyBK,IAJxC,uBACuBN,EADvB,YACmCM,GAFzB,KAUjB,CAUM,SAASC,EAAT,GAM6B,IALlCC,EAKiC,EALjCA,QACAC,EAIiC,EAJjCA,QACAR,EAGiC,EAHjCA,yBAGiC,IAFjCS,iBAAAA,OAEiC,aADjCC,MAAAA,OACiC,MADzB,EACyB,EACjC,GAAsCC,EAAAA,EAAAA,UAAS,GAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0CF,EAAAA,EAAAA,UAAsB,IAAhE,eAAOG,EAAP,KAAsBC,EAAtB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,GAArC,eAAOK,EAAP,KAAeC,EAAf,KACA,GAAmBC,EAAAA,EAAAA,GAAc,iBAAxBC,GAAT,eAEMC,GAAYC,EAAAA,EAAAA,UAAQ,kBAAMC,KAAKC,IAAL,MAAAD,MAAI,OAAQd,EAAQJ,KAAI,SAACoB,GAAD,OAAYA,EAAOC,QAAnB,KAA9B,GAA6D,CAACjB,IAEhFkB,GAAYC,EAAAA,EAAAA,GAAa,CAC/BC,SAAU,EAAIlB,EACdmB,WAAW,EACXC,SAAU,WACRb,EAAU,GACVJ,EAAe,EAChB,IANKa,QA6DR,OAnDAK,EAAAA,EAAAA,IAAc,WACZ,IAAMC,EAAyB,CAAC,EAC5BC,EAAe,EACfC,EAAa,EAEXC,GAAuBC,EAAAA,EAAAA,SAAQ5B,EAAS,CAAC,WAAY,QAAS,CAAC,OAAQ,QAAQ6B,QACnF,SAACC,EAAkBC,EAAOlC,GAQxB,OAPAiC,EAAIC,EAAMxC,UAAYM,GAEH,IAAf6B,GAAoBK,EAAMd,SAAWS,KACvCA,EAAaK,EAAMd,SACnBQ,GAAgB,GAElBD,EAAUO,EAAMxC,UAAY,CAAC,EAAGkC,GACzBK,CACR,GACD,CAAC,GAGGE,GAAsBJ,EAAAA,EAAAA,SAAQ5B,EAAS,CAAC,gBAAiB,QAAS,CAAC,OAAQ,QAGjFyB,EAAe,EACfC,EAAa,EAEb,IAAMO,EAAiCD,EAAoBpC,KAAI,SAACmC,EAAOlC,GACrE,IAAMqC,GAAQ,UAAQH,GAUtB,OARAG,EAASvD,MAAQ,CAACkB,EAAO8B,EAAqBO,EAAS3C,WACvD2C,EAASC,SAAWX,EAAUU,EAAS3C,WAEpB,IAAfmC,GAAoBK,EAAMK,cAAgBV,KAC5CA,EAAaK,EAAMK,cACnBX,GAAgB,GAElBS,EAASC,SAAS,GAAKV,EAChBS,CACR,IAED3B,EAAiB0B,EAClB,KAGDI,EAAAA,EAAAA,YAAU,WACJnB,IAAY,EAAIhB,EAClBG,EAAe,GACNa,IAAY,EAAIhB,GACzBG,EAAe,EAElB,GAAE,CAACa,EAAShB,KAGX,gBACEnB,UAAU,gBACVuD,MAAO,CAAE3B,OAAO,GAAD,QAAMG,KAAKC,IAAI,GAAIJ,GAAU,GAAKL,EAAciC,OAAhD,OAFjB,SAIGjC,EAAcV,KAAI,SAACmC,EAAOlC,GAAW,IAAD,IAC3BN,EAAqEwC,EAArExC,SAAU0B,EAA2Dc,EAA3Dd,SAAUmB,EAAiDL,EAAjDK,cAAe9C,EAAkCyC,EAAlCzC,aAAcX,EAAoBoD,EAApBpD,MAAOwD,EAAaJ,EAAbI,SAC1DK,GAAa1B,KAAKC,IAAI,GAAIJ,GAAU,IAAxB,UAA8BhC,EAAM6B,UAApC,QAA+C,GAEjE,OACE,iBACEzB,UAAS,iDAA4Cc,GAErD4C,GAAE,sBAAiB5C,GACnByC,MAAO,CAAEI,IAAI,GAAD,OAAKF,EAAL,OAJd,WAME,gBAAKzD,UAAU,4BAAf,SACGkC,EAAW,GAAKL,IAAcK,GAAYb,GAAe,IACxD,SAACuC,EAAA,EAAD,CAAa5D,UAAU,iCAG3B,iBAAKA,UAAU,+BAAf,wBAAgDoD,EAAS3B,UAAzD,QAAoE,OACpE,iBAAKzB,UAAU,6BAAf,WACE,gBAAKA,UAAU,wBAAf,UACE,SAAC,KAAD,CAAQ0D,GAAI1C,EAAQR,GAAUqD,cAEhC,gBAAK7D,UAAU,sBAAf,SAAsCgB,EAAQR,GAAUsD,WAE1D,SAAC,IAAD,CAAS5D,OAAO,SAAC,KAAD,CAAWC,GAAG,oBAAoBC,GAAG,oBAAsBC,MAAM,OAAjF,UACE,gBAAKL,UAAU,6BAAf,SAA6CqD,OAE7CnC,GAAoBG,GAAe,QAAsB0C,IAAjBxD,IACxC,SAACD,EAAD,CACEC,aAAcA,EACdC,SAAUA,EACVC,yBAA0BA,IAG7BY,GAAe,IACd,SAAC,IAAD,CAASnB,MAAM,QAAQG,MAAM,OAA7B,UACE,iBAAML,UAAU,mCAAhB,SAAoDkC,QA9B1D,kBAEkB1B,GAiCrB,KAGN,C,gDClKM,SAASwD,EAAT,GAOsB,IAN3BhD,EAM0B,EAN1BA,QACAC,EAK0B,EAL1BA,QACAR,EAI0B,EAJ1BA,yBACAwD,EAG0B,EAH1BA,SACA/D,EAE0B,EAF1BA,MACAgE,EAC0B,EAD1BA,SAIA,OAFAC,EAAAA,EAAAA,MAGE,UAAC,IAAD,YACE,SAAC,KAAD,iBAAQjE,QAAR,IAAQA,EAAAA,EAAS,YAEhBgE,GAED,SAACnD,EAAD,CAAcC,QAASA,EAASC,QAASA,EAASR,yBAA0BA,KAC5E,UAAC,KAAD,CAAaT,UAAU,iDAAvB,WACE,SAACoE,EAAA,EAAD,KACA,SAAC,KAAD,CACEjE,GAAG,iFACHC,GAAG,0DAEL,SAACgE,EAAA,EAAD,OAGDH,IAGN,C,2FCAD,IACA,EAAe,IAA0B,mECnBzC,IACA,EAAe,IAA0B,mE,kECpBlC,SAASI,EAAT,GASqB,IAAD,IARzBC,EAQyB,EARzBA,MACAC,EAOyB,EAPzBA,cACAC,EAMyB,EANzBA,WAMyB,IALzBC,KAAAA,OAKyB,MALlB,EAKkB,EAJzBzE,EAIyB,EAJzBA,UACAiE,EAGyB,EAHzBA,SAGyB,IAFzBS,YAAAA,OAEyB,SADzBC,EACyB,EADzBA,aAEAR,EAAAA,EAAAA,KACA,IAAQS,GAAcC,EAAAA,EAAAA,KAAdD,UAEFE,EAAcH,EAAc,CAAEI,YAAaJ,GAAgB,CAAC,EAElE,OACE,gBAAK3E,WAAWC,EAAAA,EAAAA,GAAK,qBAAsBD,GAA3C,UACE,iBAAKA,UAAU,2BAAf,WACE,gBAAKA,UAAU,4BAAf,UACE,gBAAKgF,IAAKJ,EAAUK,EAAcC,GAAeC,IAAKP,EAAU,SAAU,cAE5E,iBAAK5E,WAAWC,EAAAA,EAAAA,GAAK,qCAAqCmF,EAAAA,EAAAA,IAAkB,WAA5E,WACE,gBAAKpF,UAAU,6BAA6BuD,MAAOuB,KACnD,gBAAK9E,UAAU,+BAA+BuD,MAAOuB,KACrD,gBAAK9E,UAAU,6BAAf,oCAA6CsE,QAA7C,IAA6CA,OAA7C,EAA6CA,EAAOe,eAApD,QAA+Df,SAA/D,QAAwE,OAGzEL,EAEAqB,QAAQf,KAAmBe,QAAQb,KAClC,SAAC,KAAD,CAAQc,KAAK,UAAUC,QAASjB,EAAevE,UAAU,gCAAzD,SACGwE,IAIJc,QAAQf,IAAkBe,QAAQb,KACjC,SAAC,KAAD,CACEc,KAAK,UACLC,QAASjB,EACThC,SAAUgC,EACVlC,SAAUoC,EACVgB,SAAUf,EALZ,UAOE,SAAC,KAAD,CAAWvE,GAAG,aAAaC,GAAG,WAAWsF,OAAQlB,UAM5D,C,2PC5DYmB,EAAc,SAACC,EAA4B5E,EAAsB6E,GAG5E,OAAOC,OAAOC,OAAO/E,GAAS8B,QAAO,SAACC,EAAUiD,GAC9C,GAAIA,EAAOtC,KAAOmC,EAAKnC,GAAI,CAAC,IAAD,IACnBuC,EAAoB,oBAAGJ,EAAKK,eAAR,aAAG,EAAeF,EAAOtC,WAAzB,QAAgC,GAEpDyC,GAA+BC,EAAAA,EAAAA,GAAYH,GAEjD,GAAIE,EAAW,CAEb,GAAyB,YAArBA,EAAUE,QAA6C,WAArBF,EAAUE,OAK9C,OAJAtD,EAAIiD,EAAOtC,IAAM,CACf4C,SAAUH,EAAUG,SACpBC,WAAYJ,EAAUI,YAEjBxD,EAIT,GAAyB,SAArBoD,EAAUE,QAA0C,UAArBF,EAAUE,OAAoB,CAc/D,IAbA,IAAMG,EAAQZ,EAAaO,EAAUM,YAC/BC,EAAoBF,EAAMG,QAAO,SAACC,GAAD,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAGC,SAAS,KAAnB,IACjCC,EAAsBN,EAAMG,QAAO,SAACC,GAAD,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAGC,SAAS,KAAnB,IAEnCE,EAAoBd,EAAqBnD,QAC7C,SAACC,EAAwBC,GAEvB,OADAD,EAAI,GAAD,OAAIC,EAAMsD,UAAV,OAAqBU,EAAAA,IAArB,OAAiChE,EAAMuD,cAAgB,EACnDxD,CACR,GACD,CAAC,GAECkE,EAAI,WAAMC,EAAAA,EAAAA,GAAcR,IAApB,OAA+BM,EAAAA,IAA/B,QAA2CE,EAAAA,EAAAA,GAAcJ,IAE1DC,EAAkBE,IACvBA,EAAI,WAAMC,EAAAA,EAAAA,GAAcR,IAApB,OAA+BM,EAAAA,IAA/B,QAA2CE,EAAAA,EAAAA,GAAcJ,IAG/D,MAA+BG,EAAKE,MAAMH,EAAAA,IAA1C,eAAOV,EAAP,KAAiBC,EAAjB,KAMA,OAJAxD,EAAIiD,EAAOtC,IAAM,CACf4C,SAAAA,EACAC,WAAAA,GAEKxD,CACR,CAGD,IAAMqE,EAAwBnB,EAAqBnD,QAAO,SAACuE,EAAaC,GAItE,MAHqB,gBAAjBA,EAAMjB,QACRgB,EAAEE,KAAKD,EAAMb,YAERY,CACR,GAAE,IACGG,EAAkB,CAAC,EAAG,EAAG,EAAG,GAC/Bb,QAAO,SAACc,GAAD,OAAQL,EAAsBP,SAASY,EAAvC,IACP5G,KAAI,SAAC4G,GAAD,OAAO7B,EAAa6B,EAApB,IACDC,GAAcR,EAAAA,EAAAA,GAAcM,GAE5Bd,EAAoBgB,EAAYf,QAAO,SAACC,GAAD,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAGC,SAAS,KAAnB,IACvCC,EAAsBY,EAAYf,QAAO,SAACC,GAAD,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAGC,SAAS,KAAnB,IAK/C,OAJA9D,EAAIiD,EAAOtC,IAAM,CACf4C,UAAUY,EAAAA,EAAAA,GAAcR,GACxBH,YAAYW,EAAAA,EAAAA,GAAcJ,IAErB/D,CACR,CAGD,IAAM2E,GAAcR,EAAAA,EAAAA,GAAcpB,OAAOC,OAAOH,IAC1Cc,EAAoBgB,EAAYf,QAAO,SAACC,GAAD,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAGC,SAAS,KAAnB,IACvCC,EAAsBY,EAAYf,QAAO,SAACC,GAAD,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAGC,SAAS,KAAnB,IAC/C9D,EAAIiD,EAAOtC,IAAM,CACf4C,UAAUY,EAAAA,EAAAA,GAAcR,GACxBH,YAAYW,EAAAA,EAAAA,GAAcJ,GAE7B,CACD,OAAO/D,CACR,GAAE,CAAC,EACL,E,yHC9FM,SAAS4E,IACd,OACE,SAAC,KAAD,CAAaC,WAAS,EAAtB,UACE,SAAC,KAAD,CACEzH,IACE,2FAEE,kBAFF,oFAIE,kBAJF,2MAOE,kBAPF,+BAWFC,IACE,6EAEE,kBAFF,yEAIE,kBAJF,qKAOE,kBAPF,4BAcT,CAEM,SAASyH,IACd,OACE,SAAC,KAAD,CAAaD,WAAS,EAAtB,UACE,SAAC,KAAD,CACEzH,IACE,2JAGE,kBAHF,2MAQFC,IACE,6IAGE,kBAHF,2KAWT,CAEM,SAAS0H,EAAT,GAAuE,IAA7CxD,EAA4C,EAA5CA,MACzB5D,EAAS4D,EAAMyD,MAAQzD,EAAMe,QAAU,EAC7C,OACE,SAAC,KAAD,CAAauC,WAAS,EAAtB,UACE,SAAC,KAAD,CACEzH,IACE,uGAEE,kBAFF,yDAGmDO,EAHnD,YAIE,kBAJF,wEAME,kBANF,uDAUFN,IACE,kGAEE,kBAFF,6CAG6CM,EAH7C,oBAIE,kBAJF,mEAME,kBANF,8DAaT,C,iFCzEM,SAASsH,EAAT,GAOY,IANjBC,EAMgB,EANhBA,KACAC,EAKgB,EALhBA,UACAC,EAIgB,EAJhBA,YAIgB,IAHhBC,QAAAA,OAGgB,aAFhBC,WAAAA,OAEgB,aADhBrI,UAAAA,OACgB,MADJ,GACI,EACRsI,GAAazD,EAAAA,EAAAA,KAAbyD,SACAC,GAAmBC,EAAAA,EAAAA,KAAnBD,eACR,OACE,iBACEvI,WAAWC,EAAAA,EAAAA,GAAK,cAAeoI,GAAc,wBAAyBrI,GACtEuD,MAAO4E,GAAeE,EAAa,CAAEtD,YAAa,QAAS0D,gBAAiBN,GAAgB,CAAC,EAF/F,WAIE,SAAC,IAAD,CAASO,QAAST,EAAKnE,KAAKwE,GAAUK,cAAtC,UACE,SAAC,IAAD,CACE3I,UAAU,oBACVK,MAAqB,WAAd4H,EAAK1C,KAAoB,WAAa,UAC7ChC,MAAO,CAAEqF,SAAS,GAAD,OAAKV,EAAY,GAAjB,OAHnB,UAKE,0BAAOK,EAAiBN,EAAKvE,GAAKuE,EAAKnE,KAAKwE,UAGhD,SAAC,KAAD,CAAWO,QAASZ,EAAKvE,GAAIwE,UAAWA,EAAWlI,UAAU,qBAAqBoI,QAASA,MAGhG,C,mDCrCM,SAASU,EAAT,GAAiG,IAAvEtD,EAAsE,EAAtEA,QAASvB,EAA6D,EAA7DA,SAA6D,IAAnDwB,SAAAA,OAAmD,SAA9BsD,GAA8B,YACrG,OACE,SAAC,MAAD,gBAAQxD,KAAK,UAAUyD,KAAK,QAAQvD,SAAUA,EAAUD,QAASA,GAAauD,GAA9E,oBACG9E,QADH,IACGA,EAAAA,GACC,6CACK,SAAC,KAAD,CAAW9D,GAAG,aAAUC,GAAG,SADhC,iBAMP,CCEM,SAAS6I,EAAT,GAOsB,IAN3BC,EAM0B,EAN1BA,aACArD,EAK0B,EAL1BA,KACAsD,EAI0B,EAJ1BA,MACAvD,EAG0B,EAH1BA,aACAwD,EAE0B,EAF1BA,WACAC,EAC0B,EAD1BA,iBAEA,GAAgCjI,EAAAA,EAAAA,UAAiBgI,EAAW9C,UAA5D,eAAOA,EAAP,KAAiBgD,EAAjB,KACA,GAAoClI,EAAAA,EAAAA,UAAiBgI,EAAW7C,YAAhE,eAAOA,EAAP,KAAmBgD,EAAnB,KACMrB,GAAYsB,EAAAA,EAAAA,GAAa,GAAI,EAAG,GAAI,KAEpCC,EAAY7D,EAAaC,EAAK6D,gBAwBpC,OACE,UAAC,IAAD,CAAMR,aAAcA,EAApB,WACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAW/I,GAAG,gCAA6BC,GAAG,gCAEhD,SAAC,KAAD,CAAawH,WAAS,EAAtB,UACE,SAAC,KAAD,CACEzH,IACE,kFAEE,kBAFF,sFAIE,kBAJF,+GAOFC,IACE,sEAEE,kBAFF,kGAIE,kBAJF,sGAWN,eAAIJ,UAAU,oBAAd,SACGyJ,EAAU5I,KAAI,SAAC8I,GAAD,OACb,eAAiB3J,UAAU,0BAA3B,UACE,SAAC,KAAD,CAAmBwF,QAAS,WApDjB,IAACyC,EACF,YADEA,EAoDmCkB,EAAMQ,IAnDpDpE,KACP+D,EAAYrB,EAAKvE,IAEjB6F,EAActB,EAAKvE,GAgDe,EAA5B,UACE,SAACsE,EAAD,CACEC,KAAMkB,EAAMQ,GACZzB,UAAWA,EACXE,SAAS,EACTC,WAAY,CAAC/B,EAAUC,GAAYM,SAAS8C,QANzCA,EADI,OAcjB,UAAC,IAAD,CAAO3J,UAAU,kBAAkB4J,MAAM,SAAzC,WACE,SAAC,KAAD,CAAQpE,QAzDS,WACrB,IAAIqE,EAAiB,GACjBC,EAAmB,IACvBC,EAAAA,EAAAA,IAAQN,GAAWO,SAAQ,SAACL,GACC,WAAvBR,EAAMQ,GAAQpE,KAChBsE,EAAiBF,EAEjBG,EAAmBH,CAEtB,IACDL,EAAYO,GACZN,EAAcO,EACf,EA6CsCd,KAAK,QAAtC,UACE,SAAC,KAAD,CAAW7I,GAAG,4BAA4BC,GAAG,oBAG/C,SAAC0I,EAAD,CACErD,UAAWa,IAAaC,EACxBf,QAAS,kBAAM6D,EAAiB,CAAE/C,SAAAA,EAAUC,WAAAA,GAAnC,SAKlB,C,eCpGM,SAAS0D,EAAT,GAAoE,IAA/CC,EAA8C,EAA9CA,KAAMpJ,EAAwC,EAAxCA,MAAOqJ,EAAiC,EAAjCA,cAC/B7B,GAAazD,EAAAA,EAAAA,KAAbyD,SACR,OACE,iBAAKtI,WAAWC,EAAAA,EAAAA,GAAK,eAAD,wBAAkCiK,EAAK3E,OAA3D,WACE,SAAC,IAAD,CAASmD,QAASwB,EAAKrK,YAAYyI,GAAnC,UACE,eAAItI,UAAU,sBAAd,SAAqCkK,EAAKhK,MAAMoI,QAElD,eAAItI,UAAU,wBAAd,SACGkK,EAAKnE,OAAOlF,KAAI,SAACmC,EAAOyE,GACvB,IAAM2C,EAAW3C,IAAM3G,EACvB,OACE,yBACE,SAAC,KAAD,CACEd,WAAWC,EAAAA,EAAAA,GAAK,uBAAD,gCAAkDiK,EAAK3E,OACtE8E,KAAMD,GAAW,SAACE,EAAA,EAAD,CAAmBtK,UAAU,4BAA0B+D,EACxEyB,QAAS2E,EAAgB,kBAAMA,EAAc,CAAEI,OAAQL,EAAKxG,GAAI8G,MAAO/C,GAA9C,EAAqD,WAAQ,EAHxF,SAKGzE,EAAMsF,MANX,UAAY4B,EAAKxG,GAAjB,kBAA6B+D,GAUhC,QAIR,C,eCtBM,SAASgD,EAAT,GAMiB,IALtBtB,EAKqB,EALrBA,MACA7C,EAIqB,EAJrBA,SACAC,EAGqB,EAHrBA,WAGqB,IAFrBmE,WAAAA,OAEqB,aADrBC,aAAAA,OACqB,SACfzC,GAAYsB,EAAAA,EAAAA,GAAa,GAAI,EAAG,GAAI,KAE1C,OACE,gBAAIxJ,UAAU,0BAAd,WACE,yBACE,SAACgI,EAAD,CACEC,KAAMkB,EAAM7C,GACZ4B,UAAWA,EACXE,SAAO,EACPpI,WAAWC,EAAAA,EAAAA,GAAKyK,GAAc,uCAGlC,yBACE,SAACE,EAAA,EAAD,CAAkBrH,MAAO,CAAElD,MAAO,cAEpC,yBACE,SAAC2H,EAAD,CACEC,KAAMkB,EAAM5C,GACZ2B,UAAWA,EACXE,SAAO,EACPpI,WAAWC,EAAAA,EAAAA,GAAK0K,GAAgB,wCAKzC,CCvCM,SAASE,EAAT,GAAsD,IAA/BC,EAA8B,EAA9BA,SAC5B,OACE,SAAC,KAAD,CAAQtF,QAAS,kBAAMsF,EAAS,EAAf,EAAmB9B,KAAK,QAAzC,UACE,SAAC,KAAD,CAAW7I,GAAG,YAAYC,GAAG,aAGlC,CCIM,SAAS2K,EAAT,GAO6B,IANlC7B,EAMiC,EANjCA,aACAC,EAKiC,EALjCA,MACAC,EAIiC,EAJjCA,WACAC,EAGiC,EAHjCA,iBACA2B,EAEiC,EAFjCA,iBACAF,EACiC,EADjCA,SAEA,GAAkD1J,EAAAA,EAAAA,YAAlD,eAAO6J,EAAP,KAA0BC,EAA1B,KAMA,OACE,UAAC,IAAD,CAAMhC,aAAcA,EAApB,WACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAW/I,GAAG,gCAA6BC,GAAG,gCAEhD,SAAC,KAAD,CAAawH,WAAS,EAAtB,UACE,SAAC,KAAD,CACEzH,IACE,kIAEFC,IAAI,kIAIR,UAAC,IAAD,CAAOJ,UAAU,kBAAkB4J,MAAM,SAAzC,WACE,SAACa,EAAD,CACEtB,MAAOA,EACP7C,SAAU8C,EAAW9C,SACrBC,WAAY6C,EAAW7C,WACvBoE,cAAY,KAGd,SAACV,EAAD,CAAWC,KAAMc,EAAkBb,cA1BpB,SAACgB,GACpBD,EAAqBC,EAAQX,MAC9B,EAwBqE1J,MAAOmK,QAGzE,UAAC,IAAD,CAAOjL,UAAU,kBAAkB4J,MAAM,SAAzC,WACE,SAACiB,EAAD,CAAaC,SAAUA,KAEvB,SAAChC,EAAD,CACErD,cAAgC1B,IAAtBkH,EACVzF,QAAS,kBAAM6D,EAAiB,CAAE+B,aAAcH,GAAvC,SAKlB,CC7CM,SAASI,EAAT,GASyB,IAR9BnC,EAQ6B,EAR7BA,aACArD,EAO6B,EAP7BA,KACAsD,EAM6B,EAN7BA,MACAC,EAK6B,EAL7BA,WACAC,EAI6B,EAJ7BA,iBACAiC,EAG6B,EAH7BA,cACA1F,EAE6B,EAF7BA,aACAkF,EAC6B,EAD7BA,SAEM5C,GAAYsB,EAAAA,EAAAA,GAAa,GAAI,EAAG,GAAI,KAC1C,GAAgCpI,EAAAA,EAAAA,YAAhC,eAAOmK,EAAP,KAAiBC,EAAjB,KAEM/B,EAAY7D,EAAaC,EAAK6D,gBAE9B+B,EAAe,SAACN,GACpBK,EAAYL,EACb,EAED,OACE,UAAC,IAAD,CAAMjC,aAAcA,EAApB,WACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAW/I,GAAG,oBAAoBC,GAAG,4BAEvC,SAAC,KAAD,CAAawH,WAAS,EAAtB,UACE,SAAC,KAAD,CACEzH,IACE,iIAEE,kBAFF,wEAIE,kBAJF,gHASFC,IACE,iGAEE,kBAFF,0EAIE,kBAJF,qFAWN,eAAIJ,UAAU,oBAAd,SACGyJ,EAAU5I,KAAI,SAAC8I,GAAD,OACb,eAAiB3J,UAAU,0BAA3B,UACE,SAACgI,EAAD,CACEC,KAAMkB,EAAMQ,GACZzB,UAAWA,EACXE,SAAS,EACTC,WAAY,CAACe,EAAW9C,SAAU8C,EAAW7C,YAAYM,SAAS8C,MAL7DA,EADI,OAYjB,gBAAK3J,UAAU,qBAAf,SACGsL,EAAczK,KAAI,SAACqJ,GAAD,OACjB,SAACD,EAAD,CAEEC,KAAMA,EACNC,cAAesB,EACf3K,OAAe,OAARyK,QAAQ,IAARA,OAAA,EAAAA,EAAUhB,UAAWL,EAAKxG,GAA1B,OAA+B6H,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAUf,WAAQzG,GAHnDmG,EAAKxG,GAFK,OAUrB,UAAC,IAAD,CAAO1D,UAAU,kBAAkB4J,MAAM,SAAzC,WACE,SAACiB,EAAD,CAAaC,SAAUA,KAEvB,SAAChC,EAAD,CACErD,cAA+B1B,KAAb,OAARwH,QAAQ,IAARA,OAAA,EAAAA,EAAUhB,QACpB/E,QAAS,kBAAM6D,EAAiB,CAAEqC,aAAY,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAUhB,OAAQoB,cAAa,OAAEJ,QAAF,IAAEA,OAAF,EAAEA,EAAUf,OAAlF,SAKlB,C,0BCjFM,SAASoB,GAAT,GAUmB,IATxB1C,EASuB,EATvBA,aACAC,EAQuB,EARvBA,MACA6B,EAOuB,EAPvBA,iBACAa,EAMuB,EANvBA,sBACAP,EAKuB,EALvBA,cACAlC,EAIuB,EAJvBA,WACA0C,EAGuB,EAHvBA,cACAC,EAEuB,EAFvBA,gBACA/K,EACuB,EADvBA,QAEQ4D,GAAcC,EAAAA,EAAAA,KAAdD,UAEF8G,EAAeJ,EAAcU,MAAK,SAACT,GAAD,OAAcA,EAAS7H,KAAO0F,EAAWsC,YAAzC,IAExC,OACE,UAAC,IAAD,CAAMxC,aAAcA,EAApB,WACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAW/I,GAAG,uBAAoBC,GAAG,8BAEvC,SAAC,KAAD,CAAawH,WAAS,EAAtB,UACE,SAAC,KAAD,CAAWzH,IAAI,oDAAwBC,IAAI,yDAG7C,SAACqK,EAAD,CAAetB,MAAOA,EAAO7C,SAAU8C,EAAW9C,SAAUC,WAAY6C,EAAW7C,cAEnF,iBAAKvG,UAAU,qBAAf,WACE,SAACiK,EAAD,CACEC,KAAMc,EACNlK,MAAOsI,EAAWgC,aAClBjB,cAAe,SAACgB,GAAD,OAAaY,EAAgB,CAAEX,aAAcD,EAAQX,OAArD,KAEjB,SAACP,EAAD,CACEC,KAAM2B,EACN/K,MAAOsI,EAAW6C,kBAClB9B,cAAe,SAACgB,GAAD,OAAaY,EAAgB,CAAEE,kBAAmBd,EAAQX,OAA1D,KAEjB,SAACP,EAAD,CACEC,KAAMwB,EACN5K,MAAOsI,EAAWuC,cAClBxB,cAAe,SAACgB,GAAD,OACbY,EAAgB,CAAEL,aAAcP,EAAQZ,OAAQoB,cAAeR,EAAQX,OAD1D,QAMnB,SAAC,IAAD,CAAOxK,UAAU,kBAAkB4J,MAAM,SAAzC,UACE,SAAC,KAAD,CAAQrE,KAAK,UAAUyD,KAAK,QAAQxD,QAASsG,EAAezB,MAAM,SAAC6B,EAAA,EAAD,IAAlE,UACE,SAAC,KAAD,CAAW/L,GAAG,SAASC,GAAG,gBAI9B,SAAC,MAAD,CACEY,QAASA,EACTmL,UAAWvH,EAAU,yBAAuB,gCAC5CwH,gBAAiBxH,EAAU,gCAA8B,wCAIhE,CChEM,SAASyH,GAAT,GAOyB,IAN9BnD,EAM6B,EAN7BA,aACAC,EAK6B,EAL7BA,MACAC,EAI6B,EAJ7BA,WACAC,EAG6B,EAH7BA,iBACAwC,EAE6B,EAF7BA,sBACAf,EAC6B,EAD7BA,SAEA,GAA4D1J,EAAAA,EAAAA,YAA5D,eAAOkL,EAAP,KAA+BC,EAA/B,KAMA,OACE,UAAC,IAAD,CAAMrD,aAAcA,EAApB,WACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAW/I,GAAG,gCAA6BC,GAAG,gCAEhD,SAAC,KAAD,CAAawH,WAAS,EAAtB,UACE,SAAC,KAAD,CACEzH,IACE,mIAIFC,IACE,mIAKN,UAAC,IAAD,CAAOJ,UAAU,kBAAkB4J,MAAM,SAAzC,WACE,SAACa,EAAD,CACEtB,MAAOA,EACP7C,SAAU8C,EAAW9C,SACrBC,WAAY6C,EAAW7C,WACvBmE,YAAU,KAGZ,SAACT,EAAD,CAAWC,KAAM2B,EAAuB1B,cA9BzB,SAACgB,GACpBoB,EAA0BpB,EAAQX,MACnC,EA4B0E1J,MAAOwL,QAG9E,UAAC,IAAD,CAAOtM,UAAU,kBAAkB4J,MAAM,SAAzC,WACE,SAACiB,EAAD,CAAaC,SAAUA,KAEvB,SAAChC,EAAD,CACErD,cAAqC1B,IAA3BuI,EACV9G,QAAS,kBAAM6D,EAAiB,CAAE4C,kBAAmBK,GAA5C,SAKlB,C,gBC8HD,OAvKA,YAAoE,IAAD,IAApCtL,EAAoC,EAApCA,QAASwL,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAC7C,GAAwCC,EAAAA,EAAAA,GAAQ,GAAxCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,aACjBhH,GAAOiH,EAAAA,EAAAA,GAAQ9L,EAASwL,GAE9B,GAAoCpL,EAAAA,EAAAA,UAA6B,CAAC,GAAlE,eAAOgI,EAAP,KAAmB2D,EAAnB,KAEMC,ECjCD,SAAoCJ,GACzC,IAAQhI,GAAcC,EAAAA,EAAAA,KAAdD,UAEFqI,GAAUC,EAAAA,EAAAA,GAAW,CACzBC,YAAaC,EAAAA,GAAAA,aACbC,WAAY,eACZC,aAAc,kBAAMV,EAAQ,GAAd,EACdW,QAAS,kBAAMX,EAAQ,EAAd,EACTY,eAAgB5I,EAAU,4BAA6B,gCACvD6I,aAAc7I,EACZ,kEACA,qDAIJ,OAAO,SAACuG,GACN8B,GAAQ,QACNS,OAAQ,gBACLvC,GAEN,CACF,CDY8BwC,CAA2Bf,GAMlDvD,EAAmB,SAAC8B,GACxB4B,GAAc,SAACa,GAAD,eAAC,UAAwCA,GAAczC,EAAvD,IACd0B,GACD,EASKgB,GACJ,SAAC,KAAD,CACExD,MAAM,SAACyD,EAAA,EAAD,IACN5N,OAAO,SAAC,KAAD,CAAWC,GAAG,oBAAcC,GAAG,mBACtC2N,aAAY,OAAEvB,QAAF,IAAEA,GAAF,UAAEA,EAAOlI,aAAT,aAAE,EAAce,QAC5BhD,SAAU,GACVkD,KAAK,UALP,UAOE,SAACoC,EAAD,MAIEqG,GACJ,SAAC,KAAD,CACE3D,MAAM,SAAC4D,EAAA,EAAD,IACN/N,OAAO,SAAC,KAAD,CAAWC,GAAG,iBAAiBC,GAAG,mBACzCiC,SAAU,EACVkD,KAAK,UAJP,UAME,SAAC,KAAD,WACE,SAAC,KAAD,CAAWpF,GAAG,2BAAwBC,GAAG,gCAKzC8N,GACJ,SAAC,KAAD,CACE7D,MAAM,SAAC8D,EAAA,EAAD,IACNjO,OAAO,SAAC,KAAD,CAAWC,GAAG,iBAAcC,GAAG,cACtCiC,SAAU,EACVkD,KAAK,UAJP,UAME,SAAC,KAAD,WACE,SAAC,KAAD,CACEpF,GAAG,iDACHC,GAAG,+CAMLgO,GACJ,SAAC,KAAD,CACE/D,MAAM,SAACgE,EAAA,EAAD,IACNnO,OAAO,SAAC,KAAD,CAAWC,GAAG,iBAAiBC,GAAG,mBACzCiC,SAAU,EACVkD,KAAK,UAJP,UAME,SAAC,KAAD,WACE,SAAC,KAAD,CAAWpF,GAAG,gBAAgBC,GAAG,sBAKjCkO,GACJ,SAAC,KAAD,CACEjE,MAAM,SAACkE,EAAAC,EAAD,IACNtO,OAAO,SAAC,KAAD,CAAWC,GAAG,aAAUC,GAAG,WAClCiC,SAAU,EACVkD,KAAK,YAIT,OACE,SAAC,KAAD,CAAgBkH,KAAMA,EAAMgC,MAAK,OAAEjC,QAAF,IAAEA,OAAF,EAAEA,EAAOiC,MAAOC,aAAcC,EAAAA,EAAAA,iBAAAA,gBAA/D,UACE,UAAC,IAAD,CAAchC,KAAMA,EAAMiC,WAAY,EAAE/I,EAAKgJ,SAAUhJ,EAAKgJ,SAAUhJ,EAAKgJ,SAAU7N,QAASA,EAA9F,WAEE,SAAC,IAAD,CACEsD,MAAK,OAAEkI,QAAF,IAAEA,OAAF,EAAEA,EAAOlI,MACdC,cAAesI,EACfrI,WAAW,IACXC,KAAM,EACNE,YAAW,OAAE8H,QAAF,IAAEA,GAAF,UAAEA,EAAMqC,kBAAR,aAAE,EAAkBzO,MALjC,UAOE,SAAC,KAAD,CAAsB0O,KAAMjJ,OAAOkJ,KAAKxC,EAAMrD,YAIhD,iCACE,SAACF,EAAD,CACEpD,KAAMA,EACND,aAAc4G,EAAM5G,aACpBuD,MAAOqD,EAAMrD,MACbC,WAAYA,EACZC,iBAAkBA,EAClBH,aAAc2E,KAEhB,SAAC,KAAD,CAAWoB,KAAG,EAAd,UACE,SAAC,KAAD,CAAQzJ,QA3FE,kBAClBwH,EZlDqB,SAACkC,EAAsB5D,GAC9C,IAAM6D,GAAgBpF,EAAAA,EAAAA,IAAQmF,GAGxBE,EAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAEhC,MAAO,CACL9I,SALa6I,EAAcnD,MAAK,SAACpF,GAAD,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAGC,SAAS,KAAnB,IAMhCN,WALe4I,EAAcnD,MAAK,SAACpF,GAAD,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAGC,SAAS,KAAnB,IAMlCuE,cAAclE,EAAAA,EAAAA,GAAckI,GAC5BnD,mBAAmB/E,EAAAA,EAAAA,GAAckI,GACjC1D,cAAcxE,EAAAA,EAAAA,GAAcoE,GAAe5H,GAC3CiI,eAAezE,EAAAA,EAAAA,GAAckI,GAEhC,CYoCwBC,CAAU7C,EAAM5G,aAAaC,EAAK6D,gBAAiB8C,EAAMlB,eAD5D,EA2FoBtC,KAAK,QAAnC,gCAOJ,SAAC+B,EAAD,CACE5B,MAAOqD,EAAMrD,MACb6B,iBAAkBwB,EAAMxB,iBACxB5B,WAAYA,EACZC,iBAAkBA,EAClByB,SAAU8B,EACV1D,aAAc8E,KAIhB,SAAC3B,GAAD,CACElD,MAAOqD,EAAMrD,MACb0C,sBAAuBW,EAAMX,sBAC7BzC,WAAYA,EACZC,iBAAkBA,EAClByB,SAAU8B,EACV1D,aAAcgF,KAIhB,SAAC7C,EAAD,CACExF,KAAMA,EACNsD,MAAOqD,EAAMrD,MACbvD,aAAc4G,EAAM5G,aACpB0F,cAAekB,EAAMlB,cACrBlC,WAAYA,EACZC,iBAAkBA,EAClByB,SAAU8B,EACV1D,aAAckF,KAIhB,SAACxC,GAAD,CACEzC,MAAOqD,EAAMrD,MACb6B,iBAAkBwB,EAAMxB,iBACxBa,sBAAuBW,EAAMX,sBAC7BP,cAAekB,EAAMlB,cACrBlC,WAAYA,EACZ0C,cArJc,WACpBkB,EAAqB5D,EACtB,EAoJO2C,gBA7IgB,SAACZ,GACvB4B,GAAc,SAACa,GAAD,eAAC,UAAwCA,GAAczC,EAAvD,GACf,EA4IOnK,QAASA,EACTkI,aAAcoF,QAKvB,E,iIE5LM,SAASgB,GAAT,GAAqE,IAA5CpH,EAA2C,EAA3CA,UAAWqH,EAAgC,EAAhCA,SACzC,OACE,SAACvH,EAAD,CACEC,KAAM,CACJvE,GAAG,QAAD,OAAuB,aAAb6L,EAA0B,KAAO,KAA3C,QACFhK,KAAMgK,EACNzL,KAAM,CACJ3D,GAAI,IACJC,GAAI,MAGR8H,UAAWA,EACXG,YAAY,EACZD,SAAS,GAGd,C,gDCFM,SAASoH,GAAT,GAAuG,IAA3EnJ,EAA0E,EAA1EA,OAA0E,IAAlEoJ,gBAAAA,OAAkE,aAAzCzP,UAAAA,OAAyC,MAA7B,GAA6B,EACrG0P,EAAY,qBAElB,OAAQrJ,GACN,IAAK,SACH,OACE,kBAAMrG,WAAWC,EAAAA,EAAAA,GAAKyP,EAAD,UAAeA,EAAf,aAA6BrJ,GAAUrG,GAA5D,WACE,SAAC2P,GAAA,EAAD,CAAYtP,MAAM,UAClB,SAAC,KAAD,CAAWF,GAAG,UAAUC,GAAG,WAC1BqP,IACC,SAAC,KAAD,CACEtP,GAAG,qDACHC,GAAG,gDAKb,IAAK,UACH,OACE,kBAAMJ,WAAWC,EAAAA,EAAAA,GAAKyP,EAAD,UAAeA,EAAf,aAA6BrJ,GAAUrG,GAA5D,WACE,SAACsK,EAAA,EAAD,CAAmBjK,MAAM,WACzB,SAAC,KAAD,CAAWF,GAAG,UAAUC,GAAG,YAC1BqP,IACC,SAAC,KAAD,CAAWtP,GAAG,kCAA+BC,GAAG,iDAIxD,IAAK,OACH,OACE,kBAAMJ,WAAWC,EAAAA,EAAAA,GAAKyP,EAAD,UAAeA,EAAf,aAA6BrJ,GAAUrG,GAA5D,WACE,SAAC4P,GAAA,EAAD,KACA,SAAC,KAAD,CAAWzP,GAAG,aAAaC,GAAG,aAC7BqP,IACC,SAAC,KAAD,CAAWtP,GAAG,iCAA8BC,GAAG,qCAIvD,IAAK,QACH,OACE,kBAAMJ,WAAWC,EAAAA,EAAAA,GAAKyP,EAAD,UAAeA,EAAf,aAA6BrJ,GAAUrG,GAA5D,WACE,SAAC6P,GAAA,EAAD,CAAmBxP,MAAM,SACzB,SAAC,KAAD,CAAWF,GAAG,SAASC,GAAG,UACzBqP,IACC,SAAC,KAAD,CACEtP,GAAG,sEACHC,GAAG,6EAKb,IAAK,cACH,OACE,kBAAMJ,WAAWC,EAAAA,EAAAA,GAAKyP,EAAD,UAAeA,EAAf,aAA6BrJ,GAAUrG,GAA5D,WACE,SAAC8P,GAAA,EAAD,CAAezP,MAAM,SACrB,SAAC,KAAD,CAAWF,GAAG,eAAeC,GAAG,gBAC/BqP,IACC,SAAC,KAAD,CACEtP,GAAG,yEACHC,GAAG,2DAKb,QACE,OACE,kBAAMJ,WAAWC,EAAAA,EAAAA,GAAKyP,EAAD,UAAeA,EAAf,aAA6BrJ,GAAUrG,GAA5D,WACE,SAAC+P,GAAA,EAAD,KACA,SAAC,KAAD,CAAW5P,GAAG,IAAIC,GAAG,MAFvB,KAIGqP,IACC,SAAC,KAAD,CAAWtP,GAAG,iCAAiCC,GAAG,uCAK7D,CCzED,IAAM4P,GAAa,IAcZ,SAASC,GAAT,GAUS,IATdC,EASa,EATbA,MACAlK,EAQa,EARbA,OACAmK,EAOa,EAPbA,YACAC,EAMa,EANbA,OACAC,EAKa,EALbA,iBACAC,EAIa,EAJbA,mBACApK,EAGa,EAHbA,QACAiD,EAEa,EAFbA,MACAoH,EACa,EADbA,SAEA,GAAkDnP,EAAAA,EAAAA,WAAU,GAA5D,eAAOoP,EAAP,KAA0BC,EAA1B,KACMC,EAAapL,QAAQ+K,GAAoBA,GAEzCM,EACJH,GAAqB,GAAKtK,EAAUA,EAAQsK,GAAmBlK,SAAW+J,EAEtEO,EACJJ,GAAqB,GAAKtK,EAAUA,EAAQsK,GAAmBjK,WAAa+J,EAExEjQ,GAAQwQ,EAAAA,EAAAA,IAAmB7K,EAAOnC,UAClCiN,EAAa5K,GAAWA,EAAQ1C,OAEtC,OACE,iBAAKxD,UAAU,UAAf,WACE,iBAAKA,UAAU,kBAAkBuD,MAAO,CAAEkF,gBAAiBpI,GAA3D,WACE,iBAAML,UAAU,yBAAhB,UACE,SAAC,MAAD,CAAQ0D,GAAIsC,EAAOnC,cAErB,iBAAM7D,UAAU,uBAAhB,SAAwCgG,EAAOlC,WAGjD,gBAAK9D,UAAU,kBAAf,SACGmQ,EACExJ,QAAO,SAACoK,GAAD,YAAuChN,IAA1BmM,EAAME,OAAOW,EAA1B,IACPlQ,KAAI,SAACkQ,GACJ,IAAMC,EAAQZ,EAAOW,GAErB,OACE,SAACE,GAAD,CAEED,MAAOA,EACPE,YAAahB,EAAME,OAAOW,IAH5B,sBACsBA,EADtB,eACoCb,EAAM1P,UAK7C,OAGL,gBAAKR,UAAU,mBAAmBuD,MAAO,CAAEwB,YAAa+L,EAAazQ,EAAQ,eAA7E,SACGyQ,IACC,iCACE,gBAAK9Q,UAAU,0BAAf,UACE,SAAC,KAAD,CACEE,OACE,SAAC,KAAD,CACEC,GAAG,0CACHC,GAAG,qCAJT,UAQE,SAAC+Q,GAAA,EAAD,QAVN,OAaGjL,QAbH,IAaGA,OAbH,EAaGA,EAASrF,KAAI,SAACuQ,EAAGtQ,GAChB,OACE,SAAC,KAAD,CAEEuQ,OAAK,EACLC,MAAM,SACNtI,KAAK,QACLuI,YAAa,kBAAMd,EAAqB3P,EAA3B,EACb0Q,aAAc,kBAAMf,GAAsB,EAA5B,EANhB,SAQG3P,EAAQ,GARX,wBACwBA,GAU3B,UAKP,iBAAKd,UAAU,qBAAf,UACG2Q,GACC,SAAC3I,EAAD,CAAUC,KAAMkB,EAAMwH,GAAiBzI,UAAW8H,GAAY5H,SAAO,KAErE,SAACkH,GAAD,CAAepH,UAAW8H,GAAYT,SAAS,WAGhDqB,GACC,SAAC5I,EAAD,CAAUC,KAAMkB,EAAMyH,GAAmB1I,UAAW8H,GAAY5H,SAAO,KAEvE,SAACkH,GAAD,CAAepH,UAAW8H,GAAYT,SAAS,cAGjD,iBAAKvP,UAAU,6BAAf,UACGwQ,GAAqB,GAAKtK,GAAWA,EAAQsK,KAC5C,SAAChB,GAAD,CAAkBnJ,OAAQH,EAAQsK,GAAmBnK,UAE/B,IAAvBmK,GAA4BD,IAAY,SAACf,GAAD,CAAkBnJ,OAAO,kBAItE,iBAAKrG,UAAU,kBAAkBuD,MAAO,CAAEkF,gBAAiBiI,EAAarQ,OAAQ0D,GAAhF,UACGwM,IAAY,SAACZ,GAAA,EAAD,KACXY,GAAYG,IAAc,SAACpG,EAAA,EAAD,SAInC,CAOD,SAAS2G,GAAT,GAA8D,IAAxCD,EAAuC,EAAvCA,MAAOE,EAAgC,EAAhCA,YACnB5I,GAAazD,EAAAA,EAAAA,KAAbyD,SACR,OACE,gBAAItI,WAAWC,EAAAA,EAAAA,GAAK,gBAAD,yBAAoC+Q,EAAMzL,OAA7D,WACE,iBAAKvF,WAAWC,EAAAA,EAAAA,GAAK,uBAAD,gCAAkD+Q,EAAMzL,OAA5E,WACE,SAAC,GAAD,CAAgBA,KAAMyL,EAAMzL,OAD9B,IACwCyL,EAAM9Q,MAAMoI,OAEpD,gBAAKtI,UAAU,uBAAf,SAAuCgR,EAAMjL,OAAOmL,GAAa5I,OAGtE,CAMD,SAAS6F,GAAT,GACE,OADqD,EAA7B5I,MAEtB,IAAK,QACH,OAAO,SAACkM,GAAA,EAAD,IACT,IAAK,WACH,OAAO,SAACC,GAAA,EAAD,IACT,IAAK,WACH,OAAO,SAACC,GAAA,EAAD,IACT,QACE,OAAO,SAACC,GAAA,EAAD,IAEZ,CCxKM,SAASC,GAAT,GAAmG,IAAtE1I,EAAqE,EAArEA,MAAO7C,EAA8D,EAA9DA,SAAUC,EAAoD,EAApDA,WAAYX,EAAwC,EAAxCA,aACzDsC,GAAYsB,EAAAA,EAAAA,GAAa,GAAI,EAAG,GAAI,KAC1C,OACE,eAAIxJ,UAAU,wBAAd,SACG8F,OAAOC,OAAOH,GAAc/E,KAAI,SAAC2F,EAAO1F,GAAR,OAC/B,yBACE,eAAId,UAAU,+BAAd,SACGwG,EAAM3F,KAAI,SAAC8I,GAAD,OACT,yBACE,SAAC3B,EAAD,CACEC,KAAMkB,EAAMQ,GACZzB,UAAWA,EACXG,WAAY,CAAC/B,EAAUC,GAAYM,SAAS8C,MAJvCA,EADA,OAFf,gBAAkB7I,GADa,KAiBtC,CCTM,SAASgR,GAAT,GAUgB,IATrBjM,EASoB,EATpBA,KACAsD,EAQoB,EARpBA,MACAvD,EAOoB,EAPpBA,aACAmM,EAMoB,EANpBA,aACAC,EAKoB,EALpBA,UACAC,EAIoB,EAJpBA,OAEA7B,GAEoB,EAHpBpP,QAGoB,EAFpBoP,QACAD,EACoB,EADpBA,YAEQ7H,GAAazD,EAAAA,EAAAA,KAAbyD,SACR,GAA4ClH,EAAAA,EAAAA,YAA5C,eAAO8Q,EAAP,KAAuBC,EAAvB,KAMMjC,EAAQ+B,EAAOjG,MAAK,SAACkE,GAAD,OAAWA,EAAM1P,WAAaqF,EAAKnC,EAAnC,IAE1B,OACE,UAAC,IAAD,YACE,SAAC,KAAD,CAAOsF,KAAK,SAAZ,SAEGgJ,EAAUnS,YAAYyI,MAEzB,SAAC,KAAD,CAAaV,WAAS,EAAtB,UACE,SAAC,KAAD,CACEzH,IACE,uIAIFC,IAAI,0GAIR,SAAC,KAAD,WACE,SAAC,WAAD,CAEEgS,QACE,SAAC,KAAD,CACEjS,GAAG,8CACHC,GAAG,0CALT,UASE,SAACyR,GAAD,CACEjM,aAAcA,EACduD,MAAOA,EACP7C,SAAUT,EAAKS,SACfC,WAAYV,EAAKU,cAZf,wBAiBR,gBAAKvG,UAAU,GAAf,UACE,SAACiQ,GAAD,CAEEC,MAAOA,EACPE,OAAQA,EACRD,YAAaA,EACbhH,MAAOA,EACPnD,OAAQH,EACRwK,iBAAkBxK,EAAKS,SACvBgK,mBAAoBzK,EAAKU,YAR3B,mBACmB2J,EAAO1P,cAW5B,SAACyJ,EAAD,CAAWC,KAAM8H,EAAW7H,cAvDX,SAACgB,GACpBgH,EAAkBhH,EAAQX,MAC3B,EAqD4D1J,MAAOoR,KAEhE,SAAC,IAAD,CAAOlS,UAAU,kBAAkB4J,MAAM,SAAzC,UACE,SAAC,KAAD,CACErE,KAAK,UACLyD,KAAK,QACLvD,cAA6B1B,IAAnBmO,EACV1M,QAAS,kBAAMuM,EAAa,CAAEM,WAAYH,GAAjC,EAJX,UAME,SAAC,KAAD,CAAW/R,GAAG,SAASC,GAAG,eAKnC,CC/BD,OAzDA,YAAkE,IAAD,IAApCY,EAAoC,EAApCA,QAASwL,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KACnCnE,GAAazD,EAAAA,EAAAA,KAAbyD,SACFzC,GAAOiH,EAAAA,EAAAA,GAAQ9L,EAASwL,GAC9B,GAAwCE,EAAAA,EAAAA,GAAQ,GAAxCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,aAEjBkF,ENGD,SAAmCnF,GACxC,IAAQhI,GAAcC,EAAAA,EAAAA,KAAdD,UAEFqI,GAAUC,EAAAA,EAAAA,GAAW,CACzBC,YAAaC,EAAAA,GAAAA,aACbC,WAAY,cACZC,aAAc,kBAAMV,EAAQ,EAAd,EACdW,QAAS,kBAAMX,EAAQ,EAAd,EACTY,eAAgB5I,EACd,6CACA,0CAEF6I,aAAc7I,EACZ,gFACA,8DAIJ,OAAO,SAACuG,GACN8B,GAAQ,QACNS,OAAQ,eACLvC,GAEN,CACF,CM3BsBmH,CAA0B1F,GAM/C,OAJA2F,EAAAA,GAAAA,IAAQ,WACNR,EAAa,CAAEM,YnB0EVnL,EAAAA,EAAAA,GAAc,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,KmBzEpC,GAAE,KAGD,SAAC,KAAD,CAAgBuF,KAAMA,EAAMgC,MAAK,OAAEjC,QAAF,IAAEA,OAAF,EAAEA,EAAOiC,MAAOC,aAAcC,EAAAA,EAAAA,iBAAAA,cAA/D,UACE,UAAC,IAAD,CAAchC,KAAMA,EAAMiC,WAAY,EAAE/I,EAAK2M,OAAQ3M,EAAK2M,OAAQ3M,EAAK2M,OAAQxR,QAASA,EAAxF,WAEE,SAAC,IAAD,CACEsD,MAAK,OAAEkI,QAAF,IAAEA,OAAF,EAAEA,EAAOlI,MACdC,cAAesI,EACfrI,WAAW,IACXC,KAAM,EACNE,YAAW,OAAE8H,QAAF,IAAEA,GAAF,UAAEA,EAAMqC,kBAAR,aAAE,EAAkBzO,SAIjC,SAAC,KAAD,CACEgK,MAAM,SAACoI,GAAA,EAAD,IACNvS,OAAO,SAAC,KAAD,CAAWC,GAAG,aAAaC,GAAG,aACrCsS,QAAS7F,EACTkB,aAAY,OAAEvB,QAAF,IAAEA,GAAF,UAAEA,EAAOlI,aAAT,aAAE,EAAce,QAJ9B,UAME,UAAC,KAAD,YACE,SAAC,KAAD,CACElF,GAAG,8CACHC,GAAG,2DAEL,kBACCoM,EAAMmG,aAAa9S,YAAYyI,SAKpC,SAACwJ,GAAD,CACEjM,KAAMA,EACND,aAAc4G,EAAM5G,aACpBuD,MAAOqD,EAAMrD,MACb4I,aAAcA,EACdC,UAAWxF,EAAMmG,aACjBvC,OAAQ5D,EAAM4D,OACdD,YAAa3D,EAAM2D,YACnB8B,OAAQzF,EAAMyF,OACdjR,QAASA,QAKlB,E,kCC1CY4R,GAAa,SAACC,EAAyBC,GAA8B,IAAD,EAC/E,wBAAOD,QAAP,IAAOA,OAAP,EAAOA,EAAgBC,UAAvB,QAA0C,EAC3C,E,oCCfM,SAASC,GAAT,GAOgB,IANrBD,EAMoB,EANpBA,eACAE,EAKoB,EALpBA,kBACAhS,EAIoB,EAJpBA,QACAiS,EAGoB,EAHpBA,QACApN,EAEoB,EAFpBA,KACAK,EACoB,EADpBA,QAEA,OACE,eAAIlG,UAAU,kBAAd,UACGkT,EAAAA,EAAAA,IAAYlS,GAASH,KAAI,SAACmF,GAAY,IAAD,IAC9BoE,EAAW0I,IAAmB9M,EAAOtC,GACrCgN,EACJ7K,EAAKnC,KAAOsC,EAAOtC,IAAM4B,SAAQ,UAAA2N,EAAQjN,EAAOtC,WAAf,eAAoB4C,YAApB,UAAgC2M,EAAQjN,EAAOtC,WAA/C,aAAgC,EAAoB6C,aACjFgK,EDGiB,SAACrK,EAAmB4M,GACjD,IAAMK,GAAmB/M,EAAAA,EAAAA,GAAYwM,GAAW1M,EAAS4M,IACzD,OAAOxN,QAAQ,CAAC,UAAW,UAAUuB,SAAtB,OAA+BsM,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAkB9M,QACjE,CCNwB+M,CAAgBlN,EAASF,EAAOtC,IACjD,OACE,yBACE,SAAC,KAAD,CAAmB8B,QAAS,kBAAMwN,EAAkBhN,EAAOtC,GAA/B,EAAoC2P,OAAQjJ,EAAxE,UACE,SAAC,MAAD,CACEpB,KAAK,QACLhD,OAAQA,EACRsN,UAAQ,EACRC,kBACGhD,IAAY,SAAC,MAAD,CAAYlG,MAAM,SAACmJ,GAAA,EAAD,IAAcxT,UAAU,2BACtD0Q,IAAc,SAAC,MAAD,CAAYrG,MAAM,SAACoJ,GAAA,EAAD,IAAezT,UAAU,+BARlE,sBAAwBgG,EAAOtC,IAclC,KAGN,CC1BM,SAASgQ,GAAT,GAS+B,IARpCvK,EAQmC,EARnCA,MACA7C,EAOmC,EAPnCA,SACAC,EAMmC,EANnCA,WACAX,EAKmC,EALnCA,aACA6F,EAImC,EAJnCA,aACAtD,EAGmC,EAHnCA,YACAoI,EAEmC,EAFnCA,SAEmC,IADnCoD,YAAAA,OACmC,MADrB,GACqB,EAC7BzL,GAAYsB,EAAAA,EAAAA,GAAa,GAAI,EAAG,GAAI,KAE1C,OACE,eAAIxJ,UAAU,wBAAd,SACG8F,OAAOC,OAAOH,GAAc/E,KAAI,SAAC2F,EAAO1F,GACvC,IAAM8S,EAAeD,EAAY9M,SAAS/F,GAE1C,OACE,yBACE,eACEd,UAAU,+BACVuD,MAAO+B,QAAQ6C,GAAe,CAAEpD,YAAaoD,GAAgB,CAAC,EAFhE,SAIG3B,EAAM3F,KAAI,SAAC8I,GAAD,OACT,yBACE,SAAC,KAAD,CACEnE,QAAS+K,GAAYqD,OAAe7P,EAAY,kBAAM0H,EAAa9B,EAAnB,EADlD,UAGE,SAAC3B,EAAD,CACEC,KAAM2L,GAjDDrE,EAiDkC5F,EAAOxC,MAAM,KAAK,GAjD9B,CAC/CzD,GAAG,QAAD,OAAuB,OAAb6L,EAAoB,KAAO,KAArC,QACFhK,KAAMgK,EACNzL,KAAM,CACJ3D,GAAI,IACJC,GAAI,OA4C6E+I,EAAMQ,GACrEzB,UAAWA,EACXG,WAAY,CAAC/B,EAAUC,GAAYM,SAAS8C,GAC5CvB,SAAS,EACTD,YAAaA,OATVwB,GA5CC,IAAC4F,CA2CF,OALf,gBAAkBzO,GAuBrB,KAGN,CCtCM,SAAS+S,GAAT,GASgB,IAAD,UARpBhO,EAQoB,EARpBA,KACAD,EAOoB,EAPpBA,aACAuD,EAMoB,EANpBA,MACAnI,EAKoB,EALpBA,QACAoP,EAIoB,EAJpBA,OACAD,EAGoB,EAHpBA,YACA8B,EAEoB,EAFpBA,OACA6B,EACoB,EADpBA,gBAEA,GAA8B1S,EAAAA,EAAAA,UAAsB,CAAC,GAArD,eAAO6R,EAAP,KAAgBc,EAAhB,KACA,GAA4C3S,EAAAA,EAAAA,UAAmB,IAA/D,eAAO0R,EAAP,KAAuBE,EAAvB,MAGAT,EAAAA,GAAAA,IAAQ,WACNuB,EAAgB,CAAEb,QAAStN,EAAYC,EAAc5E,EAAS6E,IAC/D,GAAE,KAGHvC,EAAAA,EAAAA,YAAU,WACRyQ,GAAW,SAACC,GAAD,eAAC,UAAYA,GHPY,SAAC9N,GACvC,IAAM+M,EAAuB,CAAC,EAW9B,OAVAnN,OAAOmO,QAAQ/N,GAAS8D,SAAQ,YAAoC,IAAD,eAAjCkK,EAAiC,KAA5BC,EAA4B,KAC3DC,GAAkChO,EAAAA,EAAAA,GAAY+N,GAChD,CAAC,UAAW,UAAUtN,SAASuN,EAAa/N,UAC9C4M,EAAQiB,GAAO,CACb5N,SAAU8N,EAAa9N,SACvBC,WAAY6N,EAAa7N,WACzBmK,YAAY,GAGjB,IACMuC,CACR,CGNiCoB,CAAyBxO,EAAKK,SAAjD,GACZ,GAAE,CAACL,IAEJ,IA4BMyO,EAAcxO,OAAOkJ,KAAKhO,GAASwC,OACnC+Q,EACJzO,OAAOC,OAAOkN,GAASzP,SAAW8Q,EAAc,GAChDxO,OAAOC,OAAOkN,GAASuB,OAAM,SAAClN,GAAD,OAAWA,EAAMhB,UAAYgB,EAAMf,UAAnC,IACzBkO,EAAcxC,EAAOjG,MAAK,SAACkE,GAAD,OAAWA,EAAM1P,WAAasS,CAA9B,IAC1B4B,EAAa5B,IAAmBjN,EAAKnC,GACrCiR,EAAmB,iBAAG1B,QAAH,IAAGA,OAAH,EAAGA,EAAUH,UAAb,QAAgC,CAAC,EAEpDK,GAAmB/M,EAAAA,EAAAA,GAAYwM,GAAW/M,EAAKK,QAAS4M,IACxDvC,EAAW,CAAC,UAAW,UAAU1J,SAAtB,OAA+BsM,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAkB9M,QAGlE,EAA6CuO,GAC3CF,EACAnE,EACA1K,EACA8O,EACAxB,GALMxC,EAAR,EAAQA,eAAgBkE,EAAxB,EAAwBA,iBAQxB,OACE,UAAC,IAAD,YACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAW1U,GAAG,yBAAyBC,GAAG,6BAE5C,SAAC,KAAD,CAAawH,WAAS,EAAtB,UACE,SAAC,KAAD,CACEzH,IACE,0IAGE,kBAHF,uIAKE,kBALF,4EASFC,IACE,2IAGE,kBAHF,4HAME,kBANF,oEAaN,SAAC,KAAD,CAAW6O,KAAG,EAAd,UACE,SAAC,IAAD,CAAOjP,UAAU,kBAAkB4J,MAAM,SAAzC,UACE,SAAC,KAAD,CAAQrE,KAAK,SAAS8L,OAAK,EAAC7L,QAAS,kBAAMuO,EAAWpO,EAAYC,EAAc5E,EAAS6E,GAApD,EAArC,UACE,SAAC,KAAD,CAAW1F,GAAG,8CAAqCC,GAAG,6CAK5D,SAAC2S,GAAD,CACElN,KAAMA,EACNiN,eAAgBA,EAChBE,kBAAmBA,EACnBhS,QAASA,EACTiS,QAASA,EACT/M,QAASL,EAAKK,UAGfqO,IACC,SAAC,IAAD,CAAOvU,UAAU,kBAAkB4J,MAAM,SAAzC,UACE,SAAC,KAAD,CACEZ,KAAK,QACLzD,KAAK,UACLE,UAAW8O,EACX/O,QAAS,kBAAMsO,EAAgB,CAAEb,QAAAA,GAAxB,EAJX,UAME,SAAC,KAAD,CAAW9S,GAAG,mBAAmBC,GAAG,sBAK1C,SAACsT,GAAD,CACEvK,MAAOA,EACP7C,SAAUqK,EACVpK,WAAYsO,EACZjP,aAAcA,EACd6F,aAlHkB,SAAC9B,GACvB,GAAImJ,GAAkBnJ,EAAQ,CAAC,IAAD,EACtBmL,GAAQ,oBACR7B,EAAQH,UADA,QACmB,CAC7BxM,cAAUvC,EACVwC,gBAAYxC,EACZ2M,YAAY,IAIC/G,EAAO9C,SAAS,MAG/BiO,EAASxO,SAAWqD,EAEpBmL,EAASvO,WAAaoD,EAGxBoK,GAAW,SAACgB,GAAD,eAAC,UACPA,GADM,eAERjC,GAFQ,QAAC,UAGLgC,GAHI,IAIPpE,WAAYpL,SAAgB,OAARwP,QAAQ,IAARA,OAAA,EAAAA,EAAUxO,YAAV,OAAsBwO,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAUvO,gBAJ7C,GAOZ,CACF,EAyFK4B,aAAa0I,EAAAA,EAAAA,IAAkB,UAAC7P,EAAQ8R,UAAT,aAAC,EAAyBjP,UACzD0M,SAAUmE,GAAcnE,EACxBoD,YAAW,iBAAE9N,QAAF,IAAEA,GAAF,UAAEA,EAAM8N,mBAAR,aAAE,EAAoBb,UAAtB,QAAyC,KAGrD2B,IACC,SAAC,KAAD,CAAcvU,MAAM,QAAQmK,MAAM,SAAC2K,GAAA,EAAD,IAAlC,UACE,SAAC/E,GAAD,CAEEC,MAAOuE,EACPrE,OAAQA,EACRD,YAAaA,EACbhH,MAAOA,EACPjD,QAAO,iBAAEL,QAAF,IAAEA,OAAF,EAAEA,EAAMK,QAAQuO,EAAYjU,iBAA5B,QAAyC,GAChDwF,OAAQhF,EAAQyT,EAAYjU,UAC5B6P,iBAAkBM,EAClBL,mBAAoBuE,EACpBtE,SAAUmE,GAAcnE,GAV1B,mBACmBkE,EAAYjU,cAenC,gBAAKR,UAAU,oBAGpB,CAED,IAAM4U,GAAiB,SACrBF,EACAnE,EACA1K,EACA8O,EACAxB,GAEA,OAAIuB,EACK,CACL/D,eAAgB9K,EAAKS,SACrBuO,iBAAkBhP,EAAKU,YAIvBgK,EACK,CACLI,eAAgBwC,EAAiB7M,SACjCuO,iBAAkB1B,EAAiB5M,YAIhC,CACLoK,eAAgBgE,EAAoBrO,SACpCuO,iBAAkBF,EAAoBpO,WAEzC,EC7KD,OAnCA,YAA8D,IAAD,EAApCvF,EAAoC,EAApCA,QAASwL,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KACvC,GAAwCC,EAAAA,EAAAA,GAAQ,GAAxCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,aACjBhH,GAAOiH,EAAAA,EAAAA,GAAQ9L,EAASwL,GAExBsH,EXkCD,SAAsClH,GAC3C,IAAQhI,GAAcC,EAAAA,EAAAA,KAAdD,UAEFqI,GAAUC,EAAAA,EAAAA,GAAW,CACzBC,YAAaC,EAAAA,GAAAA,aACbC,WAAY,iBACZC,aAAc,kBAAMV,EAAQ,EAAd,EACdW,QAAS,kBAAMX,EAAQ,EAAd,EACTY,eAAgB5I,EAAU,iCAAkC,kCAC5D6I,aAAc7I,EACZ,uEACA,uDAIJ,OAAO,SAACuG,GACN8B,GAAQ,QACNS,OAAQ,kBACLvC,GAEN,CACF,CWvDyB8J,CAA6BrI,GAErD,OACE,SAAC,KAAD,CAAgBH,KAAMA,EAAMgC,MAAK,OAAEjC,QAAF,IAAEA,OAAF,EAAEA,EAAOiC,MAAOC,aAAcC,EAAAA,EAAAA,iBAAAA,SAA/D,UACE,UAAC,IAAD,CAAchC,KAAMA,EAAMiC,WAAY,EAAE/I,EAAKgJ,SAAUhJ,EAAKgJ,SAAU7N,QAASA,EAA/E,WAEE,SAAC,KAAD,CACEqJ,MAAM,SAAC6K,GAAA,EAAD,IACNhV,OAAO,SAAC,KAAD,CAAWC,GAAG,kBAAkBC,GAAG,iBAC1CsS,QAAS7F,EACTkB,aAAY,OAAEvB,QAAF,IAAEA,GAAF,UAAEA,EAAOlI,aAAT,aAAE,EAAce,QAJ9B,UAME,SAACwC,EAAD,OAIF,SAACgM,GAAD,CACEhO,KAAMA,EACND,aAAc4G,EAAM5G,aACpBuD,MAAOqD,EAAMrD,MACbnI,QAASA,EACToP,OAAQ5D,EAAM4D,OACdD,YAAa3D,EAAM2D,YACnB8B,OAAQzF,EAAMyF,OACd6B,gBAAiBA,QAK1B,E,yGC/BM,SAASqB,GAAT,GAAgE,IAAxCnU,EAAuC,EAAvCA,QAASoU,EAA8B,EAA9BA,QAChCC,EAAO,CACX,CACEnV,MAAO,GACPoV,UAAW,WACXC,OAAQ,SAAC/U,GAAD,OAAsB,SAAC,MAAD,CAAYwF,OAAQhF,EAAQR,GAAWwI,KAAK,QAAQwM,aAAW,GAArF,IAJC,iBAMR3S,EAAAA,GAAAA,SAAQiD,OAAOkJ,KAAKoG,IAAUvU,KAAI,SAACL,GAAD,MAAe,CAClDN,OAAO,SAAC,MAAD,CAAQwD,GAAI1C,EAAQR,GAAUqD,SAAUmF,KAAK,UACpDsM,UAAW9U,EACX+U,OAAQ,SAAClP,GAAD,OAAoB,SAACoP,GAAD,CAAkBpP,OAAQA,GAA9C,EAH2B,MAOjCqP,GAAO7S,EAAAA,GAAAA,SAAQiD,OAAOmO,QAAQmB,IACjCzO,QAAO,+BAAEuN,EAAF,gBAAoC,WAAtBlT,EAAQkT,GAAK3O,IAA3B,IACP1E,KAAI,YAAoB,IAAD,eAAjBqT,EAAiB,KAAZyB,EAAY,KACtB,OAAO,QACLnV,SAAU0T,GACPyB,EAEN,IAEH,OAAO,SAAC,KAAD,CAAON,QAASA,EAASO,WAAYF,EAAMG,YAAY,EAAO7M,KAAK,QAAQ8M,UAAQ,GAC3F,CAMD,SAASL,GAAT,GAA8D,IAAlCpP,EAAiC,EAAjCA,OAC1B,OAAQA,GACN,IAAK,SACL,IAAK,UACH,OACE,SAAC,KAAD,CAASnG,OAAO,SAACsP,GAAD,CAAkBnJ,OAAQA,EAAQoJ,iBAAe,IAAKpP,MAAM,QAA5E,UACE,SAAC,MAAD,CAAYgK,MAAM,SAAC0L,GAAA,EAAD,IAAsBzE,MAAM,SAASnM,IAAKkB,MAGlE,IAAK,OACH,OACE,SAAC,KAAD,CAASnG,OAAO,SAACsP,GAAD,CAAkBnJ,OAAQA,EAAQoJ,iBAAe,IAAKpP,MAAM,QAA5E,UACE,SAAC,MAAD,CAAYgK,MAAM,SAAC2L,GAAA,EAAD,IAAgB1E,MAAM,SAASnM,IAAKkB,MAG5D,IAAK,QACH,OACE,SAAC,KAAD,CAASnG,OAAO,SAACsP,GAAD,CAAkBnJ,OAAQA,EAAQoJ,iBAAe,IAAKpP,MAAM,QAA5E,UACE,SAAC,MAAD,CAAYgK,MAAM,SAAC4L,GAAA,EAAD,IAAkB3E,MAAM,SAASnM,IAAKkB,MAG9D,IAAK,cACH,OACE,SAAC,KAAD,CAASnG,OAAO,SAACsP,GAAD,CAAkBnJ,OAAQA,EAAQoJ,iBAAe,IAAKpP,MAAM,QAA5E,UACE,SAAC,MAAD,CAAYgK,MAAM,SAAC6L,GAAA,EAAD,IAAc5E,MAAM,SAASnM,IAAKkB,MAG1D,QACE,OAAO,qCAEZ,C,gBCzCM,SAAS8P,GAAT,GAYc,IAAD,QAXlBtQ,EAWkB,EAXlBA,KACAD,EAUkB,EAVlBA,aACAuD,EASkB,EATlBA,MACAnI,EAQkB,EARlBA,QACAoP,EAOkB,EAPlBA,OACAD,EAMkB,EANlBA,YACA8B,EAKkB,EALlBA,OACAmE,EAIkB,EAJlBA,aACA9R,EAGkB,EAHlBA,MACA8Q,EAEkB,EAFlBA,QACAiB,EACkB,EADlBA,mBAEAlS,EAAAA,GAAAA,KAEA,INV4BiQ,EMU5B,GAA4ChT,EAAAA,EAAAA,UAAmB,IAA/D,eAAO0R,EAAP,KAAuBE,EAAvB,KAEMsB,EAAcxO,OAAOkJ,KAAKhO,GAASwC,OAEnCiR,EAAcxC,EAAOjG,MAAK,SAACkE,GAAD,OAAWA,EAAM1P,WAAasS,CAA9B,IAC1B4B,EAAa5B,IAAmBjN,EAAKnC,GACrCwC,EAA4B,oBAAGL,EAAKK,eAAR,aAAG,sBAAgBuO,SAAhB,QAAgC,CAAC,SAAjC,aAAe,EAAsBjU,iBAAxC,QAAqD,GACjF8V,GAAqBlQ,EAAAA,EAAAA,GAAYF,GACjCqK,GNlBsB6D,EMkBGkC,ENjBxBhR,QAAQ,CAAC,UAAW,UAAUuB,SAAtB,OAA+BuN,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAc/N,UMmB5D,OACE,UAAC,IAAD,YACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAWlG,GAAG,YAAYC,GAAG,eAG/B,SAAC,MAAD,CAAasI,SAAS,SAACZ,EAAD,CAAgBxD,MAAOA,OAC7C,UAAC,KAAD,CAAasD,WAAS,EAAtB,WACE,SAAC,KAAD,CACEzH,IACE,kIAEE,kBAFF,4FAMFC,IACE,4FAEE,kBAFF,iFAQJ,SAAC+U,GAAD,CAAcnU,QAASA,EAASoU,QAASA,KAEzC,SAAC,KAAD,CACEjV,IACE,mDACgB0F,EAAK0Q,cADrB,6CAC2E,IACxE1Q,EAAK2Q,MAAQ3Q,EAAK4Q,YAFrB,cAKFrW,IACE,+CACeyF,EAAK0Q,cADpB,uCACuE,IACpE1Q,EAAK2Q,MAAQ3Q,EAAK4Q,YAFrB,oBAQN,SAAC,IAAD,CAAOzW,UAAU,kBAAkB4J,MAAM,SAAzC,UACE,SAAC,KAAD,WACE,SAAC,WAAD,CAEEwI,QAAQ,SAAC,KAAD,CAAWjS,GAAG,mCAAgCC,GAAG,iCAF3D,UAIE,SAACyR,GAAD,CACE1I,MAAOA,EACP7C,SAAUT,EAAKS,SACfC,WAAYV,EAAKU,WACjBX,aAAcA,KAPZ,0BAaV,SAACmN,GAAD,CACElN,KAAMA,EACNiN,eAAgBA,EAChBE,kBAAmBA,EACnBhS,QAASA,EACTiS,QAAS,CAAC,EACV/M,QAASL,EAAKK,UAGfZ,QAAQwN,KACP,SAAC,KAAD,CACElL,WAAS,EACT5H,UAAYuQ,GAAamE,EAAyC,IAA5BtP,EAAAA,EAAAA,IAAkB,QAF1D,SAKGE,QAAQgR,IACP,SAAC9G,GAAD,CAAkBnJ,OAAQiQ,EAAmBjQ,OAAQoJ,iBAAe,IAClEiF,GACF,SAAC,KAAD,CAAWvU,GAAG,mCAA6BC,GAAG,2BAE9C,IAVJ,6BAG6B0S,IAY9B2B,IACC,gBACEzU,WAAWoF,EAAAA,EAAAA,IAAkB,iBAAarB,EAAW,QADvD,UAIE,SAACkM,GAAD,CACEC,MAAOuE,EACPrE,OAAQA,EACRD,YAAaA,EACbhH,MAAOA,EACPjD,QAASL,EAAKK,QAAQuO,EAAYjU,UAClCwF,OAAQhF,EAAQyT,EAAYjU,UAC5B6P,iBAAkBqE,EAAa7O,EAAKS,SAAWgQ,EAAmBhQ,SAClEgK,mBAAoBoE,EAAa7O,EAAKU,WAAa+P,EAAmB/P,WACtEgK,SAAUA,KAbd,mBAEmBkE,EAAYjU,YAgBjC,SAAC,IAAD,CAAOR,UAAU,kBAAkB4J,MAAM,SAAzC,SACGyM,GACC,SAAC,KAAD,CACE7Q,QAAS4Q,EACT7T,SAAU6T,EACV/T,SAAUN,KAAK2U,IAAkB,GAAdpC,EAAkB,IACrCjK,MAAM,SAACsM,GAAA,EAAD,IAJR,UAME,SAAC,KAAD,CAAWxW,GAAG,cAAcC,GAAG,mBAGjC,SAAC,KAAD,CAAQoF,QAAS4Q,EAAc/L,MAAM,SAACsM,GAAA,EAAD,IAArC,UACE,SAAC,KAAD,CAAWxW,GAAG,cAAcC,GAAG,sBAM1C,C,4BCxKM,SAASwW,GAAT,GAAuF,IAAhE3V,EAA+D,EAA/DA,QAASD,EAAsD,EAAtDA,QAAS6V,EAA6C,EAA7CA,iBAAkBvS,EAA2B,EAA3BA,MAC1DwS,EAAcxS,EAAMyD,MAAQzD,EAAMe,QAAU,EAElD,OACE,UAAC,KAAD,CACErE,QAASA,EACTC,QAASA,EACTR,yBAA0B,EACxB,SAAC,KAAD,CACEN,IAAI,yDAAyB2W,EAAzB,0DACJ1W,IAAI,qDAAqB0W,EAArB,qDANV,WAUE,SAAC,IAAD,CAAO9W,UAAU,kBAAkB4J,MAAM,SAAzC,UACE,SAAC,KAAD,CAAQpE,QAASqR,EAAjB,UACE,SAAC,KAAD,CAAW1W,GAAG,0BAA0BC,GAAG,2BAG/C,SAAC,MAAD,CAAsBkE,MAAOA,MAGlC,CCoCD,OAvDA,YAA4D,IAAD,EAApCtD,EAAoC,EAApCA,QAASwL,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KACrC,GAAiDC,EAAAA,EAAAA,GAAQ,GAAjDC,EAAR,EAAQA,KAAME,EAAd,EAAcA,aAAcgK,EAA5B,EAA4BA,iBACtBhR,GAAOiH,EAAAA,EAAAA,GAAQ9L,EAASwL,GAE9B,GAAkDpL,EAAAA,EAAAA,WAAS,GAA3D,eAAOiV,EAAP,KAA0BU,EAA1B,KASA,OANAzT,EAAAA,EAAAA,YAAU,WACJ+S,GAAqB1J,EAAO,GAC9BoK,GAAqB,EAExB,GAAE,CAACpK,EAAM0J,KAGR,SAAC,KAAD,CAAgB5J,KAAMA,EAAMgC,MAAK,OAAEjC,QAAF,IAAEA,OAAF,EAAEA,EAAOiC,MAAOC,aAAcC,EAAAA,EAAAA,iBAAAA,OAA/D,UACE,UAAC,IAAD,CAAchC,KAAMA,EAAMiC,WAAY,EAAE/I,EAAKgJ,SAAUhJ,EAAKgJ,SAAUhJ,EAAKgJ,SAAU7N,QAASA,EAA9F,WAEE,SAAC,KAAD,CACEqJ,MAAM,SAAC2M,GAAA,EAAD,IACN9W,OAAO,SAAC,KAAD,CAAWC,GAAG,YAAYC,GAAG,YACpCsS,QAAS7F,EACTkB,aAAY,OAAEvB,QAAF,IAAEA,GAAF,UAAEA,EAAOlI,aAAT,aAAE,EAAce,QAJ9B,UAME,SAAC,KAAD,WACE,SAACyC,EAAD,CAAgBxD,MAAOkI,EAAMlI,aAKjC,SAAC6R,GAAD,CACEtQ,KAAMA,EACND,aAAc4G,EAAM5G,aACpBuD,MAAOqD,EAAMrD,MACbnI,QAASA,EACToP,OAAQ5D,EAAM4D,OACdD,YAAa3D,EAAM2D,YACnB8B,OAAQzF,EAAMyF,OACdmE,aAAcvJ,EACdvI,MAAOkI,EAAMlI,MACb8Q,QAAS5I,EAAM4I,QACfiB,kBAAmBA,KAIrB,SAACO,GAAD,CACE3V,QAASuL,EAAMvL,QACfD,QAASA,EACT6V,iBAAkBA,EAClBvS,MAAOkI,EAAMlI,YAKtB,E,wBCpCD,OAzBA,YAA8D,IAArCkI,EAAoC,EAApCA,MAAOxL,EAA6B,EAA7BA,QAASyL,EAAoB,EAApBA,KACjCwF,EAAkBzF,EAAMyF,OACxBpM,GAAOiH,EAAAA,EAAAA,GAAQ9L,EAASwL,GAE9B,OACE,SAAC,KAAD,CAAiBC,KAAMA,EAAMD,MAAOA,EAAOyK,kBAAkB,SAACC,GAAA,EAAD,IAA7D,UACE,yBACGrU,EAAAA,GAAAA,SAAQoP,EAAQ,CAAC,aAAapR,KAAI,SAACqP,GAAD,aACjC,SAACD,GAAD,CAEEC,MAAOA,EACP/G,MAAOqD,EAAMrD,MACbnD,OAAQhF,EAAQkP,EAAM1P,UACtB4P,OAAQ5D,EAAM4D,OACdD,YAAa3D,EAAM2D,YACnBG,mBAAoBJ,EAAM3J,WAC1B8J,iBAAkBH,EAAM5J,SACxBJ,QAAO,UAAEL,EAAKK,eAAP,aAAE,EAAegK,EAAM1P,WAThC,mBACmB0P,EAAM1P,UAFQ,OAgB1C,EChBD,SAAS2W,GAAmB1I,GAC1B,OAAQA,GACN,KAAKE,EAAAA,EAAAA,QAAAA,MACH,OAAOyI,EAAAA,GACT,KAAKzI,EAAAA,EAAAA,QAAAA,MACH,OAAO0I,EAAAA,GACT,KAAK1I,EAAAA,EAAAA,QAAAA,MACH,OAAO2I,EAAAA,GACT,KAAK3I,EAAAA,EAAAA,iBAAAA,gBACH,OAAO4I,GACT,KAAK5I,EAAAA,EAAAA,iBAAAA,cACH,OAAO6I,GACT,KAAK7I,EAAAA,EAAAA,iBAAAA,SACH,OAAO8I,GACT,KAAK9I,EAAAA,EAAAA,iBAAAA,OACH,OAAO+I,GACT,KAAK/I,EAAAA,EAAAA,QAAAA,UACH,OAAOgJ,GACT,QACE,OAAOC,EAAAA,EAEZ,CAqBD,OAnBA,YAA2D,IAAzBC,EAAwB,EAAxBA,OAChC,OACE,SAAC,KAAD,CACEC,MAAO,CACLC,MAAO,CACLC,aAAcC,EAAAA,GAAAA,QAHpB,UAOE,SAAC,IAAD,CACEJ,OAAQA,EACRK,eAAgBC,EAAAA,GAAAA,iBAChBhB,mBAAoBA,GACpBiB,oBAAoB,kBAI3B,C,kFCxDM,SAASjK,EAAepF,GAC7B,OACE,iCAAKsP,MAAM,6BAA6BC,QAAQ,eAAkBvP,GAAlE,eACE,iBACEwP,KAAK,UACLC,EAAE,mtBAEJ,iBAAMD,KAAK,UAAUC,EAAE,6EACvB,iBACED,KAAK,UACLC,EAAE,+OAEJ,iBACED,KAAK,UACLC,EAAE,wOAEJ,iBACED,KAAK,UACLC,EAAE,oPAEJ,iBACED,KAAK,UACLC,EAAE,mNAEJ,iBACED,KAAK,UACLC,EAAE,wTAEJ,iBAAMD,KAAK,UAAUC,EAAE,2CACvB,iBACED,KAAK,UACLC,EAAE,qNAEJ,iBACED,KAAK,UACLC,EAAE,kMAEJ,iBACED,KAAK,UACLC,EAAE,0uBAEJ,cAAGD,KAAK,UAAR,UACE,iBAAMC,EAAE,sbAEV,0BACE,iBAAMA,EAAE,+xFACR,iBAAMA,EAAE,4jDAIf,C,kFClDM,SAAS/F,EAAU1J,GACxB,OACE,iCAAKsP,MAAM,6BAA6BC,QAAQ,eAAkBvP,GAAlE,eACE,iBACEwP,KAAK,UACLC,EAAE,2GAEJ,iBACED,KAAK,OACLC,EAAE,oGAEJ,mBAAQC,GAAG,SAASC,GAAG,SAASC,EAAE,SAASJ,KAAK,aAChD,mBAAQE,GAAG,SAASC,GAAG,SAASC,EAAE,MAAMJ,KAAK,aAC7C,iBAAMC,EAAE,oMACR,iBAAMA,EAAE,mMACR,iBAAMA,EAAE,i0BACR,iBAAMA,EAAE,mMAGb,C","sources":["components/ranking/RankingBoard.tsx","components/ranking/StepRankingWrapper.tsx","assets/images/round-title-en.svg","assets/images/round-title-pt.svg","components/round/RoundAnnouncement.tsx","games/crimes-hediondos/utils/mock.ts","games/crimes-hediondos/components/RulesBlobs.tsx","games/crimes-hediondos/components/ItemCard.tsx","games/crimes-hediondos/components/ContinueButton.tsx","games/crimes-hediondos/StepItemsSelection.tsx","games/crimes-hediondos/components/SceneTile.tsx","games/crimes-hediondos/components/SelectedItems.tsx","games/crimes-hediondos/components/ResetButton.tsx","games/crimes-hediondos/StepCauseOfDeathSelection.tsx","games/crimes-hediondos/StepLocationSelection.tsx","games/crimes-hediondos/StepReviewCrime.tsx","games/crimes-hediondos/StepReasonForEvidence.tsx","games/crimes-hediondos/PhaseCrimeSelection.tsx","games/crimes-hediondos/utils/api-requests.ts","games/crimes-hediondos/components/ItemCardEmpty.tsx","games/crimes-hediondos/components/CrimeGuessStatus.tsx","games/crimes-hediondos/components/Crime.tsx","games/crimes-hediondos/components/GroupedItemsBoard.tsx","games/crimes-hediondos/StepNewScene.tsx","games/crimes-hediondos/PhaseSceneMarking.tsx","games/crimes-hediondos/utils/helpers.tsx","games/crimes-hediondos/components/PlayersCards.tsx","games/crimes-hediondos/components/SelectableGroupedItemsBoard.tsx","games/crimes-hediondos/StepGuessing.tsx","games/crimes-hediondos/PhaseGuessing.tsx","games/crimes-hediondos/components/ResultsTable.tsx","games/crimes-hediondos/StepReveal.tsx","games/crimes-hediondos/StepRanking.tsx","games/crimes-hediondos/PhaseReveal.tsx","games/crimes-hediondos/PhaseGameOver.tsx","games/crimes-hediondos/SessionCrimesHediondos.tsx","icons/CrimeSceneIcon.tsx","icons/LoupeIcon.tsx"],"sourcesContent":["import clsx from 'clsx';\nimport { ReactNode, useEffect, useMemo, useState } from 'react';\nimport { orderBy } from 'lodash';\nimport { useEffectOnce } from 'react-use';\n// Ant Design Resources\nimport { Tooltip } from 'antd';\nimport { CrownFilled } from '@ant-design/icons';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useDimensions } from 'hooks/useDimensions';\n// Components\nimport { Translate } from 'components/language';\nimport { Avatar } from 'components/avatars';\n\ntype GainedPointProps = {\n  gainedPoint: number;\n  order: number;\n  description?: any;\n};\n\nfunction GainedPoint({ gainedPoint, order, description }: GainedPointProps): JSX.Element {\n  const isPositive = gainedPoint > 0;\n  const isNegative = gainedPoint < 0;\n  return (\n    <li\n      className={clsx(\n        'ranking-board__gained-point',\n        isPositive && 'ranking-board__gained-point--plus',\n        isNegative && 'ranking-board__gained-point--minus',\n        `ranking-board__gained-point--${order}`\n      )}\n    >\n      <Tooltip\n        title={description ?? <Translate pt=\"Pontos ganhos\" en=\"Gained Points\" />}\n        color={isPositive ? 'gold' : isNegative ? 'red' : 'gray'}\n      >\n        {isPositive ? '+' : ''}\n        {gainedPoint}\n      </Tooltip>\n    </li>\n  );\n}\n\ntype GainedPointsProps = {\n  gainedPoints: number[] | number;\n  playerId: PlayerId;\n  gainedPointsDescriptions?: any[];\n};\n\nfunction GainedPoints({\n  gainedPoints,\n  playerId,\n  gainedPointsDescriptions = [],\n}: GainedPointsProps): JSX.Element {\n  const points = Array.isArray(gainedPoints) ? gainedPoints : [gainedPoints];\n  return (\n    <ul className=\"ranking-board__cell-gained-points\">\n      {points.map((gainedPoint, index) => (\n        <GainedPoint\n          key={`gained-point-${playerId}-${index}`}\n          gainedPoint={gainedPoint}\n          order={index}\n          description={gainedPointsDescriptions[index]}\n        />\n      ))}\n    </ul>\n  );\n}\n\ntype RankingBoardProps = {\n  players: GamePlayers;\n  ranking: GameRanking;\n  gainedPointsDescriptions?: ReactNode[];\n  hideGainedPoints?: boolean;\n  delay?: number;\n};\n\nexport function RankingBoard({\n  players,\n  ranking,\n  gainedPointsDescriptions,\n  hideGainedPoints = false,\n  delay = 0,\n}: RankingBoardProps): JSX.Element {\n  const [displayStep, setDisplayStep] = useState(0);\n  const [sortedRanking, setSortedRanking] = useState<GameRanking>([]);\n  const [reRank, setReRank] = useState(0);\n  const [, height] = useDimensions('ranking-row-0');\n\n  const maxPoints = useMemo(() => Math.max(...ranking.map((scores) => scores.newScore)), [ranking]);\n\n  const { seconds } = useCountdown({\n    duration: 5 + delay,\n    autoStart: true,\n    onExpire: () => {\n      setReRank(1);\n      setDisplayStep(3);\n    },\n  });\n\n  // Rank by previousScore\n  useEffectOnce(() => {\n    const positions: PlainObject = {};\n    let lastPosition = 0;\n    let lastPoints = 0;\n\n    const rankByFinalScoreDict = orderBy(ranking, ['newScore', 'name'], ['desc', 'asc']).reduce(\n      (acc: PlainObject, entry, index) => {\n        acc[entry.playerId] = index;\n        // Calculate position\n        if (lastPoints === 0 || entry.newScore < lastPoints) {\n          lastPoints = entry.newScore;\n          lastPosition += 1;\n        }\n        positions[entry.playerId] = [0, lastPosition];\n        return acc;\n      },\n      {}\n    );\n\n    const rankByPreviousScore = orderBy(ranking, ['previousScore', 'name'], ['desc', 'asc']);\n\n    // Reset position trackers\n    lastPosition = 0;\n    lastPoints = 0;\n\n    const tempSortedRanking: GameRanking = rankByPreviousScore.map((entry, index) => {\n      const newEntry = { ...entry };\n\n      newEntry.order = [index, rankByFinalScoreDict[newEntry.playerId]];\n      newEntry.position = positions[newEntry.playerId];\n      // Calculate position\n      if (lastPoints === 0 || entry.previousScore < lastPoints) {\n        lastPoints = entry.previousScore;\n        lastPosition += 1;\n      }\n      newEntry.position[0] = lastPosition;\n      return newEntry;\n    });\n\n    setSortedRanking(tempSortedRanking);\n  });\n\n  // Show gained points\n  useEffect(() => {\n    if (seconds === 4 + delay) {\n      setDisplayStep(1);\n    } else if (seconds === 2 + delay) {\n      setDisplayStep(2);\n    }\n  }, [seconds, delay]);\n\n  return (\n    <div\n      className=\"ranking-board\"\n      style={{ height: `${(Math.max(60, height) + 8) * sortedRanking.length}px` }}\n    >\n      {sortedRanking.map((entry, index) => {\n        const { playerId, newScore, previousScore, gainedPoints, order, position } = entry;\n        const hPosition = (Math.max(60, height) + 8) * (order[reRank] ?? 0);\n\n        return (\n          <div\n            className={`ranking-board__row ranking-board__row--${index}`}\n            key={`ranking-${playerId}`}\n            id={`ranking-row-${index}`}\n            style={{ top: `${hPosition}px` }}\n          >\n            <div className=\"ranking-board__cell-crown\">\n              {newScore > 0 && maxPoints === newScore && displayStep >= 3 && (\n                <CrownFilled className=\"ranking-board__crown-icon\" />\n              )}\n            </div>\n            <div className=\"ranking-board__cell-position\">#{position[reRank] ?? ''}</div>\n            <div className=\"ranking-board__cell-player\">\n              <div className=\"ranking-board__avatar\">\n                <Avatar id={players[playerId].avatarId} />\n              </div>\n              <div className=\"ranking-board__name\">{players[playerId].name}</div>\n            </div>\n            <Tooltip title={<Translate pt=\"Pontos Anteriores\" en=\"Previous Points\" />} color=\"gray\">\n              <div className=\"ranking-board__cell-points\">{previousScore}</div>\n            </Tooltip>\n            {!hideGainedPoints && displayStep >= 1 && gainedPoints !== undefined && (\n              <GainedPoints\n                gainedPoints={gainedPoints}\n                playerId={playerId}\n                gainedPointsDescriptions={gainedPointsDescriptions}\n              />\n            )}\n            {displayStep >= 2 && (\n              <Tooltip title=\"Total\" color=\"gold\">\n                <span className=\"ranking-board__cell-points-total\">{newScore}</span>\n              </Tooltip>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { CaretUpOutlined } from '@ant-design/icons';\n// Hooks\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Components\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { RankingBoard } from './RankingBoard';\n\ntype StepRankingWrapperProps = {\n  /**\n   * The players\n   */\n  players: GamePlayers;\n  /**\n   * The ranking array\n   */\n  ranking: GameRanking;\n  /**\n   * Gained points descriptions for the popover\n   */\n  gainedPointsDescriptions: ReactNode[];\n  /**\n   * Additional content\n   */\n  children?: ReactNode;\n  /**\n   * Replacement title for Ranking\n   */\n  title?: ReactNode;\n  /**\n   * Optional node that goes under the title\n   */\n  subtitle?: ReactNode;\n};\n\nexport function StepRankingWrapper({\n  players,\n  ranking,\n  gainedPointsDescriptions,\n  children,\n  title,\n  subtitle,\n}: StepRankingWrapperProps) {\n  useTemporarilyHidePlayersBar();\n\n  return (\n    <Step>\n      <Title>{title ?? 'Ranking'}</Title>\n\n      {subtitle}\n\n      <RankingBoard players={players} ranking={ranking} gainedPointsDescriptions={gainedPointsDescriptions} />\n      <Instruction className=\"step-ranking-wrapper-gained-points-instruction\">\n        <CaretUpOutlined />\n        <Translate\n          pt=\"Passe o mouse em cada um dos pontos para saber como eles foram distribuídos\"\n          en=\"Hover over the scores to learn how they were granted\"\n        />\n        <CaretUpOutlined />\n      </Instruction>\n\n      {children}\n    </Step>\n  );\n}\n","var _style, _g, _g2, _g3, _g4, _g5, _g6, _g7, _g8;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRoundTitleEn(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 130 50\",\n    style: {\n      enableBackground: \"new 0 0 130 50\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:#9EC5E7;}\\n\\t.st1{fill:#FFFFFF;}\\n\\t.st2{fill:#3A7CA5;}\\n\\t.st3{fill:#44BBA4;}\\n\\t.st4{fill:#F2E863;}\\n\\t.st5{fill:#F45B69;}\\n\\t.st6{fill:#E6E6F5;}\\n\\t.st7{display:none;}\\n\\t.st8{display:inline;}\\n\\t.st9{display:inline;fill:none;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st10{fill:#DA70D6;}\\n\\t.st11{fill:#008080;}\\n\\t.st12{fill:#D2691E;}\\n\\t.st13{fill:#4682B4;}\\n\\t.st14{fill:#B22222;}\\n\\t.st15{fill:#DFB231;}\\n\\t.st16{fill:#FF6347;}\\n\\t.st17{fill:#9370DB;}\\n\\t.st18{fill:#3C58AC;}\\n\\t.st19{fill:#7CC44F;}\\n\\t.st20{fill:#040303;}\\n\\t.st21{fill:#FCBF00;}\\n\\t.st22{fill:#D70027;}\\n\\t.st23{fill:#EA384D;}\\n\\t.st24{fill:#BFB8B8;}\\n\\t.st25{fill:#F8EFEF;}\\n\\t.st26{fill:#FE2A25;}\\n\\t.st27{fill:#FE9A00;}\\n\\t.st28{fill:#FEE901;}\\n\\t.st29{fill:#FEF6A5;}\\n\\t.st30{fill:#FEF05C;}\\n\\t.st31{fill:#FEFDFD;}\\n\\t.st32{fill:url(#SVGID_1_);}\\n\\t.st33{fill:#D40000;}\\n\\t.st34{clip-path:url(#SVGID_3_);}\\n\\t.st35{fill:url(#SVGID_4_);}\\n\\t.st36{clip-path:url(#SVGID_6_);}\\n\\t.st37{fill:url(#SVGID_7_);}\\n\\t.st38{fill:#008C72;}\\n\\t.st39{clip-path:url(#SVGID_9_);}\\n\\t.st40{clip-path:url(#SVGID_11_);}\\n\\t.st41{clip-path:url(#SVGID_13_);}\\n\\t.st42{clip-path:url(#SVGID_15_);}\\n\\t.st43{clip-path:url(#SVGID_17_);}\\n\\t.st44{clip-path:url(#SVGID_19_);}\\n\\t.st45{fill:#575757;}\\n\\t.st46{clip-path:url(#SVGID_21_);}\\n\\t.st47{fill:url(#SVGID_22_);}\\n\\t.st48{fill:none;stroke:#FFFFFF;stroke-miterlimit:10;}\\n\\t.st49{display:inline;fill:#5C3400;}\\n\\t.st50{fill:none;}\\n\\t.st51{fill:#5C3400;}\\n\\t.st52{display:inline;fill:none;}\\n\\t.st53{display:inline;fill:#FFFFFF;}\\n\\t.st54{display:none;fill:#FFFFFF;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st55{display:inline;fill:#FFFFFF;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st56{display:none;fill:#F2F25F;}\\n\\t.st57{display:inline;fill:#F2F2F2;}\\n\\t.st58{display:inline;fill:#E6E6E6;}\\n\\t.st59{display:inline;fill:#808080;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st60{fill:#808080;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st61{display:inline;fill:#808080;}\\n\\t.st62{fill:#29E257;}\\n\\t.st63{fill:#E2DC29;}\\n\\t.st64{fill:#29ABE2;}\\n\\t.st65{fill:#E22929;}\\n\\t.st66{fill:#E6E6E6;}\\n\\t.st67{fill:#F2F2F2;}\\n\\t.st68{fill:#F9C303;}\\n\\t.st69{fill:#3A3939;}\\n\\t.st70{fill:#FF0000;}\\n\\t.st71{fill:#FEFEFD;}\\n\\t.st72{fill:#181D44;}\\n\\t.st73{fill:#F7931E;}\\n\\t.st74{fill:#A45467;}\\n\\t.st75{fill:#C33F48;}\\n\\t.st76{fill:#866A86;}\\n\\t.st77{fill:#6780A4;}\\n\\t.st78{fill:#4895C3;}\\n\\t.st79{fill:#4D4D4D;}\\n\\t.st80{opacity:0.2;}\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1\"\n  }, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M31.6,8.3c3.6,1.3,5.1,4.6,5.1,8.1c0,5.5-3.8,11.9-9.9,13.3c2.8,2.9,6,8.6,8.4,8.6c0.6,0,1.2-0.4,1.7-1.3 c0.2-0.4,0.5-0.5,0.8-0.5c0.5,0,1.1,0.4,1.1,1.1c0,0.1-0.1,0.4-0.1,0.5c-1,1.8-2.6,2.7-4.3,2.7c-1.5,0-3-0.6-4.2-1.7 c-3-2.7-4.4-5.6-4.6-5.6c-0.1,0-0.1,0.1-0.1,0.1c0,0.6,0.5,2.7,1.3,7.4c0,0.2,0.1,0.4,0.1,0.6c0,1.5-1.1,2.7-2.8,2.7 c-0.2,0-0.4,0-0.7-0.1c-2-0.3-4.5-8.1-4.5-17.6c0-4.2,0.5-8.8,1.8-13.2c0.4-1.5,1.5-2.1,2.6-2.1c1.5,0,3.2,1.2,3.2,3.1 c0,0.1,0,0.4-0.1,0.6c-0.6,3.3-1.1,6.5-1.3,9.7c4.1-2.5,5.7-5.5,5.7-8.1c0-3.5-2.8-6.4-5.6-6.5h-0.3c-4.4,0-9.1,4.4-9.1,9 c0,0.9,0.2,1.8,0.6,2.7c0.1,0.1,0.1,0.3,0.1,0.4c0,0.6-0.4,1.1-0.9,1.1c-0.1,0-0.4-0.1-0.5-0.1c-1.5-0.7-2.1-2-2.1-3.7 c0-4.8,5.5-12.1,13.5-12.1C28,7.3,29.8,7.6,31.6,8.3z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M49,22.7c1.8,2.4,2.6,5.3,2.6,7.9c0,5.5-3.1,10.4-6.9,10.5h-0.1c-4.6,0-6.7-4.3-6.7-8.8 c0-3.3,1.1-6.8,3.2-8.9c-0.6,0-0.8-0.3-0.8-0.7c0-1,1.8-2.7,4.1-2.7C45.8,19.9,47.5,20.6,49,22.7z M42.1,22.6 c0.9-0.6,1.7-0.8,2.4-0.8c1.5,0,2.5,1.3,2.5,2.5c0,0.2,0,0.4-0.1,0.6c-0.6,2.5-2.7,4.1-2.9,6.8c0,0.3-0.1,0.7-0.1,1.1 c0,0.8,0.1,1.5,0.5,2c0.3,0.4,0.7,0.4,1.2,0.4c0.6,0,1.3-0.2,1.8-0.5c1.7-1,2.5-3.2,2.5-5.6c0-3.4-1.5-7-4.3-7.7 c-0.3-0.1-0.6-0.1-0.8-0.1C43.6,21.2,42.6,21.7,42.1,22.6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M59.9,23.2v0.4c-0.3,2.1-1.2,6.3-1.2,9.4c0,1.8,0.3,3.2,1.1,3.7c0.1,0.1,0.3,0.1,0.4,0.1 c1.3,0,2.9-4.1,4.1-7.9c0.1-6,2-7.9,3.6-7.9c1.4,0,2.7,1.3,2.9,2.7c0,0.4,0.1,0.6,0.1,0.9c0,1.6-0.4,2.8-0.4,5.5 c0,1.2,0.1,2.8,0.4,4.8v0.8c0,0.7,0.1,1.3,0.8,1.3c0.1,0,0.2-0.1,0.4-0.1c1.9-0.4,3.6-6.5,4-8.3c0.1-0.2,0.2-0.4,0.4-0.4 s0.4,0.2,0.4,0.4v0.1c-0.8,3.5-2.3,11.2-7,11.2c-0.4,0-0.8-0.1-1.3-0.2c-3.1-0.8-3.7-3.9-3.9-6.7c-2,5.7-4.6,8.1-6.8,8.1 c-2.7,0-4.9-3.6-4.9-9.4c0-2.6,0.4-5.6,1.5-9c0.4-1.3,1.8-2,2.9-2C58.6,20.8,59.9,21.6,59.9,23.2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M80.6,20.6c0.1,0.5,0.1,0.9,0.1,1.4c0,2.5-1,4.9-1,7.7v0.8c1.7-5.3,4.1-11.4,7.6-11.4c0.6,0,1.4,0.2,2.2,0.7 c2.3,1.5,3,5.2,3,8.8c0,4.6-1.1,9-1.1,9c0.1,0,3.7-4.8,4.8-8.5c0.1-0.3,0.3-0.4,0.6-0.4c0.3,0,0.6,0.2,0.6,0.6v0.1 c-0.6,2.8-3.1,9.1-5.5,10.2c-0.4,0.1-0.7,0.2-1.1,0.2c-2.6,0-4.2-3.9-4.5-5.9c-0.1-0.5-0.1-1.1-0.1-1.7c0-1.2,0.1-2.5,0.1-3.8 c0-1.9-0.1-3.7-0.7-5c-0.1-0.1-0.1-0.2-0.2-0.2c-1.1,0-4.3,7.9-4.8,15.6c-0.1,1.2-0.8,2-1.8,2c-1.9,0-4.7-2.9-5.1-10.2 c-0.1-0.8-0.1-1.5-0.1-2.2c0-7.2,2.6-9.5,4.6-9.6C79.4,18.8,80.4,19.6,80.6,20.6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M111.3,5.7c1.4,0,2.9,1,2.9,2.5v0.2c-0.5,5-2.4,9.1-3.6,20.6c-0.2,1.9-0.3,3.4-0.3,4.6c0,2.5,0.4,3.5,1,3.5 c1.1,0,3-3.6,4.5-8.5c0.1-0.4,0.4-0.5,0.7-0.5c0.4,0,0.7,0.2,0.7,0.6c0,0.1-0.1,0.1-0.1,0.2c-0.9,3.4-2.2,8.1-4.7,10.7 c-0.8,0.8-1.6,1.2-2.5,1.2c-2.6,0-5.1-3.6-5.5-7.3c-2,5.1-4.1,7.1-5.8,7.1c-2.4,0-4.1-4.1-4.1-8.6c0-4.7,1.8-9.8,6.5-11.2 c0.4-0.1,0.7-0.1,1-0.1c1.8,0,3.2,1.2,3.4,1.2h0.1c0.8-4.9,1.4-10.3,3.4-14.9c0.4-0.9,1.3-1.3,2.2-1.3H111.3z M99.7,35.1v0.5 c0,0.2-0.1,0.4-0.1,0.6c0,0.4,0.1,0.7,0.4,0.7c1,0,3.9-4.8,4.9-11.1c-0.4-0.4-0.7-0.6-1.1-0.6C101.8,25.2,99.7,31.3,99.7,35.1z\"\n  })))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"avatars\"\n  })), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Time_Bomb\"\n  })), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_4\"\n  })), _g5 || (_g5 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_8\"\n  })), _g6 || (_g6 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_6\"\n  })), _g7 || (_g7 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"dial_svg\"\n  })), _g8 || (_g8 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Sheeps\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRoundTitleEn);\nexport default __webpack_public_path__ + \"static/media/round-title-en.2ad07e1f265a85634ad7940a33f96552.svg\";\nexport { ForwardRef as ReactComponent };","var _style, _g, _g2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRoundTitlePt(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 130 50\",\n    style: {\n      enableBackground: \"new 0 0 130 50\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:#3E1E68;}\\n\\t.st1{fill:#9EC5E7;}\\n\\t.st2{display:none;}\\n\\t.st3{display:inline;fill:#9EC5E7;}\\n\\t.st4{fill:#3A7CA5;}\\n\\t.st5{fill:#44BBA4;}\\n\\t.st6{fill:#F2E863;}\\n\\t.st7{fill:#F45B69;}\\n\\t.st8{fill:#FFFFFF;}\\n\\t.st9{opacity:0.9;fill:#FFFFFF;}\\n\\t.st10{stroke:#000000;stroke-width:8;stroke-miterlimit:10;}\\n\\t.st11{fill:#E6E6F5;}\\n\\t.st12{fill:#DA70D6;}\\n\\t.st13{fill:#008080;}\\n\\t.st14{fill:#D2691E;}\\n\\t.st15{fill:#556B2F;}\\n\\t.st16{fill:#7CC44F;}\\n\\t.st17{fill:#2F4F4F;}\\n\\t.st18{fill:#FF6347;}\\n\\t.st19{fill:#4682B4;}\\n\\t.st20{fill:#D2A467;}\\n\\t.st21{fill:#7FB5C7;}\\n\\t.st22{fill:#B22222;}\\n\\t.st23{fill:#9370DB;}\\n\\t.st24{fill:#778899;}\\n\\t.st25{fill:#663399;}\\n\\t.st26{fill:#696969;}\\n\\t.st27{fill:#20212E;}\\n\\t.st28{fill:#9884B4;}\\n\\t.st29{fill:#DFB231;}\\n\\t.st30{fill:#875131;}\\n\\t.st31{fill:#DB8A34;}\\n\\t.st32{fill:#EB3465;}\\n\\t.st33{fill:#2B1752;}\\n\\t.st34{fill:#3C58AC;}\\n\\t.st35{fill:#BDB74C;}\\n\\t.st36{fill:#C7A4B3;}\\n\\t.st37{display:inline;}\\n\\t.st38{display:inline;fill:none;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st39{fill:#939598;}\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1\"\n  }, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st8\",\n    d: \"M27.8,37.4c-0.4,0-0.6,0.1-0.8,0.5c-0.5,0.9-1.1,1.3-1.7,1.3c-2.5,0-5.6-5.8-8.4-8.6 c6.1-1.4,9.9-7.7,9.9-13.3c0-3.6-1.5-6.8-5.1-8.1c-1.8-0.7-3.6-1.1-5.3-1.1c-8,0.1-13.5,7.3-13.5,12.1c0,1.7,0.6,3,2.1,3.7 c0.1,0.1,0.4,0.1,0.5,0.1c0.5,0,0.9-0.5,0.9-1.1c0-0.1,0-0.3-0.1-0.4c-0.4-0.8-0.6-1.8-0.6-2.7c0-4.6,4.7-9,9.1-9h0.3 c2.8,0.1,5.6,2.9,5.6,6.5c0,2.6-1.5,5.6-5.7,8.1c0.2-3.2,0.7-6.4,1.3-9.7c0.1-0.2,0.1-0.4,0.1-0.6c0-1.9-1.6-3.1-3.2-3.1 c-1.1,0-2.2,0.6-2.6,2.1c-1.3,4.4-1.8,9-1.8,13.2c0,9.5,2.5,17.3,4.5,17.6c0.3,0.1,0.5,0.1,0.7,0.1c1.8,0,2.8-1.2,2.8-2.7 c0-0.2-0.1-0.4-0.1-0.6c-0.8-4.8-1.3-6.9-1.3-7.4c0-0.1,0-0.1,0.1-0.1c0.2,0,1.6,2.9,4.6,5.6c1.2,1.1,2.7,1.7,4.2,1.7 c1.8,0,3.4-0.8,4.4-2.7c0.1-0.1,0.1-0.4,0.1-0.5C29,37.9,28.3,37.4,27.8,37.4z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st8\",\n    d: \"M34.4,20.8c-2.3,0-4.1,1.8-4.1,2.7c0,0.4,0.2,0.7,0.8,0.7c-2.1,2.1-3.2,5.6-3.2,8.9c0,4.6,2.1,8.8,6.7,8.8 h0.1c3.9-0.1,6.9-5.1,6.9-10.5c0-2.7-0.8-5.5-2.6-7.9C37.5,21.5,35.8,20.8,34.4,20.8z M37.3,35.6c-0.4,0.3-1.1,0.5-1.8,0.5 c-0.5,0-0.9-0.1-1.2-0.4c-0.4-0.4-0.5-1.2-0.5-2c0-0.4,0.1-0.8,0.1-1.1c0.3-2.7,2.3-4.3,2.9-6.8c0.1-0.2,0.1-0.4,0.1-0.6 c0-1.2-0.9-2.5-2.5-2.5c-0.7,0-1.5,0.2-2.4,0.8c0.5-0.9,1.5-1.3,2.5-1.3c0.3,0,0.6,0.1,0.8,0.1c2.7,0.7,4.3,4.4,4.3,7.7 C39.8,32.4,39,34.6,37.3,35.6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st8\",\n    d: \"M124.8,29.5c-0.3,0-0.5,0.1-0.6,0.4c-0.8,4.2-3.4,7.4-4.1,7.4h-0.1v-0.1c0-0.2-0.3-1.3-0.4-1.6 c-0.1-0.7-0.2-1.4-0.2-2.1c0-2.8,1.1-5.7,1.8-8.3c0.1-0.2,0.1-0.4,0.1-0.6c0-1.5-1.4-2.9-2.9-2.9c-1.1,0-2.2,0.6-3,2.5 c-0.7-1.8-3.4-3-5.3-3h-0.6c-4.9,0.6-7.4,8.4-7.4,12.6c0,0,0,0.1,0,0.1c-1.1,2.6-2.2,4.2-2.9,4.2c-0.6,0-1-1.1-1-3.5 c0-1.2,0.1-2.7,0.3-4.6c1.2-11.5,3.1-15.6,3.6-20.6V9.1c0-1.5-1.5-2.5-2.9-2.5h-0.1c-0.9,0-1.8,0.4-2.2,1.3c-2,4.6-2.6,10-3.4,15 h-0.1c-0.2,0-1.6-1.2-3.4-1.2c-0.3,0-0.6,0.1-1,0.1c-4.7,1.3-6.5,6.5-6.5,11.2c0,0.5,0,1,0.1,1.5c-1,1.8-2,2.9-2.5,2.9h-0.1v-0.1 c0-0.2-0.3-1.3-0.4-1.6c-0.1-0.7-0.2-1.4-0.2-2.1c0-2.8,1.1-5.7,1.8-8.3c0.1-0.2,0.1-0.4,0.1-0.6c0-1.5-1.4-2.9-2.9-2.9 c-1.1,0-2.2,0.6-3,2.5c-0.7-1.8-3.4-3-5.3-3h-0.6c-4.9,0.6-7.4,8.4-7.4,12.6c0,0,0,0.1,0,0.1c-1.1,2.6-2.2,4.2-2.9,4.2 c-0.6,0-1-1.1-1-3.5c0-1.2,0.1-2.7,0.3-4.6c1.2-11.5,3.1-15.6,3.6-20.6V9.1c0-1.5-1.5-2.5-2.9-2.5h-0.1c-0.9,0-1.8,0.4-2.2,1.3 c-2,4.6-2.6,10-3.4,15h-0.1c-0.2,0-1.6-1.2-3.4-1.2c-0.3,0-0.6,0.1-1,0.1c-4.7,1.3-6.5,6.5-6.5,11.2c0,4.5,1.7,8.6,4.1,8.6 c1.7,0,3.7-2,5.8-7.1c0.4,3.7,2.9,7.3,5.5,7.3c0.8,0,1.7-0.4,2.5-1.2c0.9-1,1.7-2.2,2.3-3.5c0.7,2.1,2.1,3.5,3.9,3.5 c2,0,4.4-1.8,6.6-6.1c0.1,2.8,1,5.1,3.4,6c0.6,0.2,1.2,0.3,1.7,0.3c2.1,0,3.5-1.6,4.6-3.6c0.7,2.6,2,4.4,3.6,4.4 c1.7,0,3.7-2,5.8-7.1c0.4,3.7,2.9,7.3,5.5,7.3c0.8,0,1.7-0.4,2.5-1.2c0.9-1,1.7-2.2,2.3-3.5c0.7,2.1,2.1,3.5,3.9,3.5 c2,0,4.4-1.8,6.6-6.1c0.1,2.8,1,5.1,3.4,6c0.6,0.2,1.2,0.3,1.7,0.3c4.5,0,5.9-7,6.9-10.4c0-0.1,0.1-0.1,0.1-0.2 C125.5,29.7,125,29.5,124.8,29.5z M48.2,37.8c-0.2,0-0.4-0.3-0.4-0.7c0-0.2,0.1-0.4,0.1-0.6V36c0-3.9,2.1-9.9,4.1-9.9 c0.4,0,0.7,0.1,1.1,0.6C52,32.9,49.2,37.8,48.2,37.8z M73.7,30.4c-1.1,2.4-3,5.5-4.3,5.5c-0.4,0-0.8-0.4-1-1.3 c-0.1-0.2-0.1-0.4-0.1-0.7c0-3.1,3-9.4,5.1-9.4c0.6,0,1.1,0.5,1.3,1.8C74.8,26.6,74.2,28,73.7,30.4z M88,37.8 c-0.2,0-0.4-0.3-0.4-0.7c0-0.2,0.1-0.4,0.1-0.6V36c0-3.9,2.1-9.9,4.1-9.9c0.4,0,0.7,0.1,1.1,0.6C91.9,32.9,89,37.8,88,37.8z  M113.6,30.4c-1.1,2.4-3,5.5-4.3,5.5c-0.4,0-0.8-0.4-1-1.3c-0.1-0.2-0.1-0.4-0.1-0.7c0-3.1,3-9.4,5.1-9.4c0.6,0,1.1,0.5,1.3,1.8 C114.6,26.6,114.1,28,113.6,30.4z\"\n  })))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"avatars\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRoundTitlePt);\nexport default __webpack_public_path__ + \"static/media/round-title-pt.2e3f9c1deb85d58d118aa6e3dfa7af23.svg\";\nexport { ForwardRef as ReactComponent };","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button } from 'antd';\n// Assets\nimport roundTitleEn from 'assets/images/round-title-en.svg';\nimport roundTitlePt from 'assets/images/round-title-pt.svg';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Components\nimport { Translate } from 'components/language';\nimport { TimedButton } from 'components/buttons';\n\ntype RoundAnnouncementProps = {\n  round: GameRound;\n  onPressButton?: GenericFunction;\n  buttonText?: string;\n  time: number;\n  players?: Players;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  children?: any;\n  unskippable?: boolean;\n  circleColor?: string;\n};\n\nexport function RoundAnnouncement({\n  round,\n  onPressButton,\n  buttonText,\n  time = 0,\n  className,\n  children,\n  unskippable = false,\n  circleColor,\n}: RoundAnnouncementProps) {\n  useTemporarilyHidePlayersBar();\n  const { translate } = useLanguage();\n\n  const circleStyle = circleColor ? { borderColor: circleColor } : {};\n\n  return (\n    <div className={clsx('round-announcement', className)}>\n      <div className=\"round-announcement__main\">\n        <div className=\"round-announcement__title\">\n          <img src={translate(roundTitlePt, roundTitleEn)} alt={translate('Rodada', 'Round')} />\n        </div>\n        <div className={clsx('round-announcement__round-wrapper', getAnimationClass('zoomIn'))}>\n          <div className=\"round-announcement__circle\" style={circleStyle} />\n          <div className=\"round-announcement__circle-2\" style={circleStyle} />\n          <div className=\"round-announcement__number\">{round?.current ?? round ?? 0}</div>\n        </div>\n\n        {children}\n\n        {Boolean(onPressButton) && !Boolean(time) && (\n          <Button type=\"primary\" onClick={onPressButton} className=\"round-announcement__go-button\">\n            {buttonText}\n          </Button>\n        )}\n\n        {Boolean(onPressButton) && Boolean(time) && (\n          <TimedButton\n            type=\"primary\"\n            onClick={onPressButton}\n            onExpire={onPressButton}\n            duration={time}\n            disabled={unskippable}\n          >\n            <Translate pt=\"Prosseguir\" en=\"Continue\" custom={buttonText} />\n          </TimedButton>\n        )}\n      </div>\n    </div>\n  );\n}\n","import { SEPARATOR } from 'utils/constants';\nimport { getLastItem, getRandomItem, shuffle } from 'utils/helpers';\n\nexport const mockCrime = (itemsGroup: string[], locationTiles: SceneTile[]): SubmitCrimePayload => {\n  const shuffledItems = shuffle(itemsGroup);\n  const weapon = shuffledItems.find((e) => e?.includes('wp'));\n  const evidence = shuffledItems.find((e) => e?.includes('ev'));\n  const options = [0, 1, 2, 3, 4, 5];\n\n  return {\n    weaponId: weapon,\n    evidenceId: evidence,\n    causeOfDeath: getRandomItem(options),\n    reasonForEvidence: getRandomItem(options),\n    locationTile: getRandomItem(locationTiles).id,\n    locationIndex: getRandomItem(options),\n  };\n};\n\nexport const mockGuesses = (groupedItems: GroupedItems, players: GamePlayers, user: GamePlayer) => {\n  // TODO: intelligent guessing based on history\n\n  return Object.values(players).reduce((acc: any, player) => {\n    if (player.id !== user.id) {\n      const historyForThisTarget = user.history?.[player.id] ?? [];\n\n      const lastGuess: GuessHistoryEntry = getLastItem(historyForThisTarget);\n\n      if (lastGuess) {\n        // If correct or locked\n        if (lastGuess.status === 'CORRECT' || lastGuess.status === 'LOCKED') {\n          acc[player.id] = {\n            weaponId: lastGuess.weaponId,\n            evidenceId: lastGuess.evidenceId,\n          };\n          return acc;\n        }\n\n        // If half or wrong\n        if (lastGuess.status === 'HALF' || lastGuess.status === 'WRONG') {\n          const group = groupedItems[lastGuess.groupIndex];\n          const weapons: string[] = group.filter((e) => e?.includes('wp'));\n          const evidences: string[] = group.filter((e) => e?.includes('ev'));\n\n          const previousPicksDict = historyForThisTarget.reduce(\n            (acc: BooleanDictionary, entry: GuessHistoryEntry) => {\n              acc[`${entry.weaponId}${SEPARATOR}${entry.evidenceId}`] = true;\n              return acc;\n            },\n            {}\n          );\n          let pair = `${getRandomItem(weapons)}${SEPARATOR}${getRandomItem(evidences)}`;\n\n          while (previousPicksDict[pair]) {\n            pair = `${getRandomItem(weapons)}${SEPARATOR}${getRandomItem(evidences)}`;\n          }\n\n          const [weaponId, evidenceId] = pair.split(SEPARATOR);\n\n          acc[player.id] = {\n            weaponId,\n            evidenceId,\n          };\n          return acc;\n        }\n\n        // If wrong group\n        const previouslyWrongGroups = historyForThisTarget.reduce((t: number[], guess: GuessHistoryEntry) => {\n          if (guess.status === 'WRONG_GROUP') {\n            t.push(guess.groupIndex);\n          }\n          return t;\n        }, []);\n        const availableGroups = [0, 1, 2, 3]\n          .filter((i) => !previouslyWrongGroups.includes(i))\n          .map((i) => groupedItems[i]);\n        const randomGroup = getRandomItem(availableGroups);\n\n        const weapons: string[] = randomGroup.filter((e) => e?.includes('wp'));\n        const evidences: string[] = randomGroup.filter((e) => e?.includes('ev'));\n        acc[player.id] = {\n          weaponId: getRandomItem(weapons),\n          evidenceId: getRandomItem(evidences),\n        };\n        return acc;\n      }\n\n      // If no history exists\n      const randomGroup = getRandomItem(Object.values(groupedItems));\n      const weapons: string[] = randomGroup.filter((e) => e?.includes('wp'));\n      const evidences: string[] = randomGroup.filter((e) => e?.includes('ev'));\n      acc[player.id] = {\n        weaponId: getRandomItem(weapons),\n        evidenceId: getRandomItem(evidences),\n      };\n    }\n    return acc;\n  }, {});\n};\n\nexport const mockSceneMark = () => {\n  return getRandomItem([0, 1, 2, 3, 4, 5]);\n};\n","// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n\nexport function WelcomeMessage(): JSX.Element {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Bem-vindo à Convenção Anual de Serial Killers!\n            <br />\n            Você e os outros serial killers decidiram fazer um jogo de adivinhação.\n            <br />\n            O objetivo é todos darem dicas sobre as circunstâncias que seus últimos crimes aconteceram para\n            ajudar os outros jogadores a descobrirem qual arma e qual objeto foram usados durante o crime.\n            <br />\n            Prontos para aterrorizar?\n          </>\n        }\n        en={\n          <>\n            Welcome to the Annual Serial Killers Con!\n            <br />\n            You and the other serial killers decided to make it a game out of it.\n            <br />\n            The goal is to give clues about the circunstancies your latest crime occurred so the other players\n            can guess what weapon and evidence were used during the crime.\n            <br />\n            Ready to terrorize?\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function GuessMessage(): JSX.Element {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Baseado nas informações dadas pelos jogadores, tente adivinhar qual arma e objeto cada jogador\n            usou em seu crime.\n            <br />\n            Você ganha pontos se adivinhar uma das cartas ou ambas as cartas, e você também ganha 1 ponto para\n            cada uma de suas cartas que os outros adivinharem, mas essa pontuação é secreta.\n          </>\n        }\n        en={\n          <>\n            Based on the information given by other players, try to guess the weapon and object used on their\n            crimes.\n            <br />\n            You get points for getting one or both cards correctly, and you get 1 point when other players get\n            each of your cards correctly, but these points are kept secret.\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function ScoringMessage({ round }: { round: GameRound }): JSX.Element {\n  const points = round.total - round.current + 1;\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Você ganha 1 ponto para cada arma ou objeto que você acertar.\n            <br />\n            Se você acertar o par de um jogador, você ganha {points} pontos.\n            <br />\n            Para todos os seus acertos, seus respectivos autores ganham 1 ponto.\n            <br />\n            Ganha o jogo o primeiro jogador que acertar tudo.\n          </>\n        }\n        en={\n          <>\n            You get 1 point for each weapon or evidence you get correctly.\n            <br />\n            If you get the pair for a player, you get {points} points instead.\n            <br />\n            All of your correct guesses grant 1 extra point to the authors.\n            <br />\n            Wins the game the player who get all correctly first.\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function GenericMessage(): JSX.Element {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Escrever msg aqui.\n            <br />\n            Prontos para aterrorizar?\n          </>\n        }\n        en={\n          <>\n            Message comes here.\n            <br />\n            Ready to terrorize?\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Popover, Tag } from 'antd';\n// Hooks\nimport { useDevFeatures } from 'hooks/useDevFeatures';\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { ImageCard } from 'components/cards';\n\ntype ItemCardProps = {\n  item: HCard;\n  cardWidth: number;\n  preview?: boolean;\n  isSelected?: boolean;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  activeColor?: string;\n};\n\nexport function ItemCard({\n  item,\n  cardWidth,\n  activeColor,\n  preview = true,\n  isSelected = false,\n  className = '',\n}: ItemCardProps) {\n  const { language } = useLanguage();\n  const { isDebugEnabled } = useDevFeatures();\n  return (\n    <div\n      className={clsx('h-item-card', isSelected && 'h-item-card--selected', className)}\n      style={activeColor && isSelected ? { borderColor: 'black', backgroundColor: activeColor } : {}}\n    >\n      <Popover content={item.name[language].toUpperCase()}>\n        <Tag\n          className=\"h-item-card__name\"\n          color={item.type === 'weapon' ? 'geekblue' : 'volcano'}\n          style={{ maxWidth: `${cardWidth + 16}px` }}\n        >\n          <span>{isDebugEnabled ? item.id : item.name[language]}</span>\n        </Tag>\n      </Popover>\n      <ImageCard imageId={item.id} cardWidth={cardWidth} className=\"h-item-card__image\" preview={preview} />\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Button, ButtonProps } from 'antd';\n// State\nimport { Translate } from 'components/language';\n\ninterface ContinueButtonProps extends ButtonProps {\n  onClick: GenericFunction;\n  disabled?: boolean;\n  children?: string;\n}\n\nexport function ContinueButton({ onClick, children, disabled = false, ...props }: ContinueButtonProps) {\n  return (\n    <Button type=\"primary\" size=\"large\" disabled={disabled} onClick={onClick} {...props}>\n      {children ?? (\n        <>\n          »» <Translate pt=\"Próximo\" en=\"Next\" /> »»\n        </>\n      )}\n    </Button>\n  );\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Utils\nimport { shuffle } from 'utils/helpers';\n// Components\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { TransparentButton } from 'components/buttons';\nimport { ItemCard } from './components/ItemCard';\nimport { ContinueButton } from './components/ContinueButton';\n\ntype StepItemsSelectionProps = {\n  user: GamePlayer;\n  groupedItems: GroupedItems;\n  items: ItemsDict;\n  selections: PlainObject;\n  updateSelections: GenericFunction;\n} & AnnouncementProps;\n\nexport function StepItemsSelection({\n  announcement,\n  user,\n  items,\n  groupedItems,\n  selections,\n  updateSelections,\n}: StepItemsSelectionProps) {\n  const [weaponId, setWeaponId] = useState<string>(selections.weaponId);\n  const [evidenceId, setEvidenceId] = useState<string>(selections.evidenceId);\n  const cardWidth = useCardWidth(12, 8, 50, 200);\n\n  const userItems = groupedItems[user.itemGroupIndex];\n\n  const onSelectItem = (item: HCard) => {\n    if (item.type === 'weapon') {\n      setWeaponId(item.id);\n    } else {\n      setEvidenceId(item.id);\n    }\n  };\n\n  const onRandomSelect = () => {\n    let randomWeaponId = '';\n    let randomEvidenceId = '';\n    shuffle(userItems).forEach((itemId) => {\n      if (items[itemId].type === 'weapon') {\n        randomWeaponId = itemId;\n      } else {\n        randomEvidenceId = itemId;\n      }\n    });\n    setWeaponId(randomWeaponId);\n    setEvidenceId(randomEvidenceId);\n  };\n\n  return (\n    <Step announcement={announcement}>\n      <Title>\n        <Translate pt=\"Qual foi seu último crime?\" en=\"How was your last crime?\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Selecione uma carta azul e uma carta vermelha.\n              <br />\n              Elas representam a arma usada em seu último crime e um objeto da cena do crime.\n              <br />O jogo contém 16 armas e 16 objetos, mas para essa parte, você vê apenas 4 opções de cada.\n            </>\n          }\n          en={\n            <>\n              Select a blue card and a red card.\n              <br />\n              They represent the weapon used in your latest crime and an object that was in the crime scene.\n              <br />\n              The game has 16 weapons and 16 objects, but for this phase, you only see 4 options of each.\n            </>\n          }\n        />\n      </Instruction>\n\n      <ul className=\"h-items-selection\">\n        {userItems.map((itemId) => (\n          <li key={itemId} className=\"h-items-selection__item\">\n            <TransparentButton onClick={() => onSelectItem(items[itemId])}>\n              <ItemCard\n                item={items[itemId]}\n                cardWidth={cardWidth}\n                preview={false}\n                isSelected={[weaponId, evidenceId].includes(itemId)}\n              />\n            </TransparentButton>\n          </li>\n        ))}\n      </ul>\n\n      <Space className=\"space-container\" align=\"center\">\n        <Button onClick={onRandomSelect} size=\"large\">\n          <Translate pt=\"Selecionar aleatoriamente\" en=\"Random picks\" />\n        </Button>\n\n        <ContinueButton\n          disabled={!weaponId || !evidenceId}\n          onClick={() => updateSelections({ weaponId, evidenceId })}\n        />\n      </Space>\n    </Step>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Popover } from 'antd';\nimport { CheckCircleFilled } from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n\ntype SceneTileProps = {\n  tile: SceneTile;\n  index?: number;\n  onSelectValue?: GenericFunction;\n};\n\nexport function SceneTile({ tile, index, onSelectValue }: SceneTileProps) {\n  const { language } = useLanguage();\n  return (\n    <div className={clsx('h-scene-tile', `h-scene-tile--${tile.type}`)}>\n      <Popover content={tile.description[language]}>\n        <h4 className=\"h-scene-tile__title\">{tile.title[language]}</h4>\n      </Popover>\n      <ul className=\"h-scene-tile__options\">\n        {tile.values.map((entry, i) => {\n          const isActive = i === index;\n          return (\n            <li key={`${tile.id}-value-${i}`}>\n              <Button\n                className={clsx('h-scene-tile__button', `h-scene-tile__button--${tile.type}`)}\n                icon={isActive ? <CheckCircleFilled className=\"h-scene-tile__icon\" /> : undefined}\n                onClick={onSelectValue ? () => onSelectValue({ tileId: tile.id, value: i }) : () => {}}\n              >\n                {entry[language]}\n              </Button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { PlusSquareFilled } from '@ant-design/icons';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { ItemCard } from './ItemCard';\n\ntype SelectedItemsProps = {\n  items: ItemsDict;\n  weaponId: string;\n  evidenceId: string;\n  fadeWeapon?: boolean;\n  fadeEvidence?: boolean;\n};\n\nexport function SelectedItems({\n  items,\n  weaponId,\n  evidenceId,\n  fadeWeapon = false,\n  fadeEvidence = false,\n}: SelectedItemsProps) {\n  const cardWidth = useCardWidth(12, 8, 50, 200);\n\n  return (\n    <ul className=\"h-items-crime-selection\">\n      <li>\n        <ItemCard\n          item={items[weaponId]}\n          cardWidth={cardWidth}\n          preview\n          className={clsx(fadeWeapon && 'h-items-crime-selection__faded')}\n        />\n      </li>\n      <li>\n        <PlusSquareFilled style={{ color: 'white' }} />\n      </li>\n      <li>\n        <ItemCard\n          item={items[evidenceId]}\n          cardWidth={cardWidth}\n          preview\n          className={clsx(fadeEvidence && 'h-items-crime-selection__faded')}\n        />\n      </li>\n    </ul>\n  );\n}\n","// Ant Design Resources\nimport { Button } from 'antd';\n// Components\nimport { Translate } from 'components/language';\n\ntype ResetButtonProps = {\n  goToStep: GenericFunction;\n};\n\nexport function ResetButton({ goToStep }: ResetButtonProps) {\n  return (\n    <Button onClick={() => goToStep(1)} size=\"large\">\n      <Translate pt=\"Reiniciar\" en=\"Restart\" />\n    </Button>\n  );\n}\n","import { useState } from 'react';\nimport { Space } from 'antd';\n// Components\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { SceneTile } from './components/SceneTile';\nimport { SelectedItems } from './components/SelectedItems';\nimport { ContinueButton } from './components/ContinueButton';\nimport { ResetButton } from './components/ResetButton';\n\ntype StepCauseOfDeathSelectionProps = {\n  items: ItemsDict;\n  selections: PlainObject;\n  updateSelections: GenericFunction;\n  causeOfDeathTile: SceneTile;\n  goToStep: GenericFunction;\n} & AnnouncementProps;\n\nexport function StepCauseOfDeathSelection({\n  announcement,\n  items,\n  selections,\n  updateSelections,\n  causeOfDeathTile,\n  goToStep,\n}: StepCauseOfDeathSelectionProps) {\n  const [causeOfDeathIndex, setCauseOfDeathIndex] = useState<number>();\n\n  const onSelectItem = (payload: SceneTilePayload) => {\n    setCauseOfDeathIndex(payload.value);\n  };\n\n  return (\n    <Step announcement={announcement}>\n      <Title>\n        <Translate pt=\"Qual foi seu último crime?\" en=\"How was your last crime?\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>Baseado somente em sua arma do crime (carta azul), selecione a causa da morte de sua vítima.</>\n          }\n          en={<>Based solely on the weapon (blue card) you've chosen, select your victim's cause of death.</>}\n        />\n      </Instruction>\n\n      <Space className=\"space-container\" align=\"center\">\n        <SelectedItems\n          items={items}\n          weaponId={selections.weaponId}\n          evidenceId={selections.evidenceId}\n          fadeEvidence\n        />\n\n        <SceneTile tile={causeOfDeathTile} onSelectValue={onSelectItem} index={causeOfDeathIndex} />\n      </Space>\n\n      <Space className=\"space-container\" align=\"center\">\n        <ResetButton goToStep={goToStep} />\n\n        <ContinueButton\n          disabled={causeOfDeathIndex === undefined}\n          onClick={() => updateSelections({ causeOfDeath: causeOfDeathIndex })}\n        />\n      </Space>\n    </Step>\n  );\n}\n","import { useState } from 'react';\nimport { Space } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { ItemCard } from './components/ItemCard';\nimport { SceneTile } from './components/SceneTile';\nimport { ContinueButton } from './components/ContinueButton';\nimport { ResetButton } from './components/ResetButton';\n\ntype StepLocationSelectionProps = {\n  user: GamePlayer;\n  items: ItemsDict;\n  selections: PlainObject;\n  updateSelections: GenericFunction;\n  locationTiles: SceneTile[];\n  groupedItems: GroupedItems;\n  goToStep: GenericFunction;\n} & AnnouncementProps;\n\nexport function StepLocationSelection({\n  announcement,\n  user,\n  items,\n  selections,\n  updateSelections,\n  locationTiles,\n  groupedItems,\n  goToStep,\n}: StepLocationSelectionProps) {\n  const cardWidth = useCardWidth(12, 8, 50, 200);\n  const [location, setLocation] = useState<PlainObject>();\n\n  const userItems = groupedItems[user.itemGroupIndex];\n\n  const onSelectItem = (payload: SceneTilePayload) => {\n    setLocation(payload);\n  };\n\n  return (\n    <Step announcement={announcement}>\n      <Title>\n        <Translate pt=\"Onde foi o crime?\" en=\"Where was the crime?\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Baseado em qualquer uma das suas cartas (ou ambas), selecione o local onde o crime aconteceu.\n              <br />\n              Temos 4 colunas de locais agrupador por tema, selecione qualquer um.\n              <br />\n              Lembre-se que você está tentando ajudar os outros jogadores adivinhar o seu crime, seja\n              inteligente!\n            </>\n          }\n          en={\n            <>\n              Based on any card (or both), select where the crime occurred.\n              <br />\n              There are 4 columns of locations grouped by theme, you may select any.\n              <br />\n              Remember you are trying to help the players guess your crime, so be smart!\n            </>\n          }\n        />\n      </Instruction>\n\n      <ul className=\"h-items-selection\">\n        {userItems.map((itemId) => (\n          <li key={itemId} className=\"h-items-selection__item\">\n            <ItemCard\n              item={items[itemId]}\n              cardWidth={cardWidth}\n              preview={false}\n              isSelected={[selections.weaponId, selections.evidenceId].includes(itemId)}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"h-scene-tiles-list\">\n        {locationTiles.map((tile) => (\n          <SceneTile\n            key={tile.id}\n            tile={tile}\n            onSelectValue={onSelectItem}\n            index={location?.tileId === tile.id ? location?.value : undefined}\n          />\n        ))}\n      </div>\n\n      <Space className=\"space-container\" align=\"center\">\n        <ResetButton goToStep={goToStep} />\n\n        <ContinueButton\n          disabled={location?.tileId === undefined}\n          onClick={() => updateSelections({ locationTile: location?.tileId, locationIndex: location?.value })}\n        />\n      </Space>\n    </Step>\n  );\n}\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\nimport { CloudUploadOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Translate } from 'components/language';\nimport { ReadyPlayersBar } from 'components/players';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { SceneTile } from './components/SceneTile';\nimport { SelectedItems } from './components/SelectedItems';\n\ntype StepReviewCrimeProps = {\n  items: ItemsDict;\n  selections: PlainObject;\n  onSubmitCrime: GenericFunction;\n  locationTiles: SceneTile[];\n  causeOfDeathTile: SceneTile;\n  reasonForEvidenceTile: SceneTile;\n  updateSelection: GenericFunction;\n  players: GamePlayers;\n} & AnnouncementProps;\n\nexport function StepReviewCrime({\n  announcement,\n  items,\n  causeOfDeathTile,\n  reasonForEvidenceTile,\n  locationTiles,\n  selections,\n  onSubmitCrime,\n  updateSelection,\n  players,\n}: StepReviewCrimeProps) {\n  const { translate } = useLanguage();\n\n  const locationTile = locationTiles.find((location) => location.id === selections.locationTile);\n\n  return (\n    <Step announcement={announcement}>\n      <Title>\n        <Translate pt=\"Seu crime tá bom?\" en=\"Is your crime alright?\" />\n      </Title>\n      <Instruction contained>\n        <Translate pt={<>Revise seu crime.</>} en={<>Recap your crime.</>} />\n      </Instruction>\n\n      <SelectedItems items={items} weaponId={selections.weaponId} evidenceId={selections.evidenceId} />\n\n      <div className=\"h-scene-tiles-list\">\n        <SceneTile\n          tile={causeOfDeathTile}\n          index={selections.causeOfDeath}\n          onSelectValue={(payload) => updateSelection({ causeOfDeath: payload.value })}\n        />\n        <SceneTile\n          tile={reasonForEvidenceTile}\n          index={selections.reasonForEvidence}\n          onSelectValue={(payload) => updateSelection({ reasonForEvidence: payload.value })}\n        />\n        <SceneTile\n          tile={locationTile!}\n          index={selections.locationIndex}\n          onSelectValue={(payload) =>\n            updateSelection({ locationTile: payload.tileId, locationIndex: payload.value })\n          }\n        />\n      </div>\n\n      <Space className=\"space-container\" align=\"center\">\n        <Button type=\"primary\" size=\"large\" onClick={onSubmitCrime} icon={<CloudUploadOutlined />}>\n          <Translate pt=\"Enviar\" en=\"Submit\" />\n        </Button>\n      </Space>\n\n      <ReadyPlayersBar\n        players={players}\n        readyText={translate('Já cometi meu crime', \"I'm done committing my crime\")}\n        readyTextPlural={translate('Já cometemos nossos crimes', \"We're done committing our crimes\")}\n      />\n    </Step>\n  );\n}\n","import { useState } from 'react';\n// Components\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { SceneTile } from './components/SceneTile';\nimport { SelectedItems } from './components/SelectedItems';\nimport { ContinueButton } from './components/ContinueButton';\nimport { Space } from 'antd';\nimport { ResetButton } from './components/ResetButton';\n\ntype StepReasonForEvidenceProps = {\n  items: ItemsDict;\n  selections: PlainObject;\n  updateSelections: GenericFunction;\n  reasonForEvidenceTile: SceneTile;\n  goToStep: GenericFunction;\n} & AnnouncementProps;\n\nexport function StepReasonForEvidence({\n  announcement,\n  items,\n  selections,\n  updateSelections,\n  reasonForEvidenceTile,\n  goToStep,\n}: StepReasonForEvidenceProps) {\n  const [reasonForEvidenceIndex, setReasonForEvidenceIndex] = useState<number>();\n\n  const onSelectItem = (payload: SceneTilePayload) => {\n    setReasonForEvidenceIndex(payload.value);\n  };\n\n  return (\n    <Step announcement={announcement}>\n      <Title>\n        <Translate pt=\"Qual foi seu último crime?\" en=\"How was your last crime?\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Baseado somente em seu objeto (carta vermelha), selecione o que o objeto significa para o crime.\n            </>\n          }\n          en={\n            <>Based solely on the object (red card) you've chosen, select the meaning of it to the crime.</>\n          }\n        />\n      </Instruction>\n\n      <Space className=\"space-container\" align=\"center\">\n        <SelectedItems\n          items={items}\n          weaponId={selections.weaponId}\n          evidenceId={selections.evidenceId}\n          fadeWeapon\n        />\n\n        <SceneTile tile={reasonForEvidenceTile} onSelectValue={onSelectItem} index={reasonForEvidenceIndex} />\n      </Space>\n\n      <Space className=\"space-container\" align=\"center\">\n        <ResetButton goToStep={goToStep} />\n\n        <ContinueButton\n          disabled={reasonForEvidenceIndex === undefined}\n          onClick={() => updateSelections({ reasonForEvidence: reasonForEvidenceIndex })}\n        />\n      </Space>\n    </Step>\n  );\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button } from 'antd';\n// State & Hooks\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\nimport { useOnSubmitCrimeAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\nimport { mockCrime } from './utils/mock';\n// Icons\nimport { EventIcon } from 'icons/EventIcon';\nimport { SkullIcon } from 'icons/SkullIcon';\nimport { CrimeSceneIcon } from 'icons/CrimeSceneIcon';\nimport { LocationIcon } from 'icons/LocationIcon';\nimport { CrimeTapeIcon } from 'icons/CrimeTapeIcon';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { RoundAnnouncement } from 'components/round';\nimport { ImageCardPreloadHand } from 'components/cards';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { WelcomeMessage } from './components/RulesBlobs';\nimport { StepItemsSelection } from './StepItemsSelection';\nimport { StepCauseOfDeathSelection } from './StepCauseOfDeathSelection';\nimport { StepLocationSelection } from './StepLocationSelection';\nimport { StepReviewCrime } from './StepReviewCrime';\nimport { StepReasonForEvidence } from './StepReasonForEvidence';\nimport { DebugOnly } from 'components/debug';\n\nfunction PhaseCrimeSelection({ players, state, info }: PhaseProps) {\n  const { step, setStep, goToNextStep } = useStep(0);\n  const user = useUser(players, state);\n\n  const [selections, setSelections] = useState<SubmitCrimePayload>({});\n\n  const onSubmitCrimeRequest = useOnSubmitCrimeAPIRequest(setStep);\n\n  const onSubmitCrime = () => {\n    onSubmitCrimeRequest(selections);\n  };\n\n  const updateSelections = (payload: SubmitCrimePayload) => {\n    setSelections((prevState: SubmitCrimePayload) => ({ ...prevState, ...payload }));\n    goToNextStep();\n  };\n\n  const updateSelection = (payload: SubmitCrimePayload) => {\n    setSelections((prevState: SubmitCrimePayload) => ({ ...prevState, ...payload }));\n  };\n\n  const onMockCrime = () =>\n    onSubmitCrimeRequest(mockCrime(state.groupedItems[user.itemGroupIndex], state.locationTiles));\n\n  const announcementItems = (\n    <PhaseAnnouncement\n      icon={<EventIcon />}\n      title={<Translate pt=\"A Convenção\" en=\"The Convention\" />}\n      currentRound={state?.round?.current}\n      duration={30}\n      type=\"overlay\"\n    >\n      <WelcomeMessage />\n    </PhaseAnnouncement>\n  );\n\n  const announcementCause = (\n    <PhaseAnnouncement\n      icon={<SkullIcon />}\n      title={<Translate pt=\"Causa da Morte\" en=\"Cause of Death\" />}\n      duration={3}\n      type=\"overlay\"\n    >\n      <Instruction>\n        <Translate pt=\"Como a vítima morreu?\" en=\"How did the victim die?\" />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  const announcementEvidence = (\n    <PhaseAnnouncement\n      icon={<CrimeSceneIcon />}\n      title={<Translate pt=\"Evidências?\" en=\"Evidence?\" />}\n      duration={3}\n      type=\"overlay\"\n    >\n      <Instruction>\n        <Translate\n          pt=\"Conte-nos sobre o objeto que você escolheu.\"\n          en=\"Tell us about the object you selected.\"\n        />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  const announcementLocation = (\n    <PhaseAnnouncement\n      icon={<LocationIcon />}\n      title={<Translate pt=\"Local do Crime\" en=\"Crime Location\" />}\n      duration={3}\n      type=\"overlay\"\n    >\n      <Instruction>\n        <Translate pt=\"Onde que foi?\" en=\"Where was it?\" />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  const announcementReview = (\n    <PhaseAnnouncement\n      icon={<CrimeTapeIcon />}\n      title={<Translate pt=\"Revisão\" en=\"Review\" />}\n      duration={3}\n      type=\"overlay\"\n    />\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.CRIMES_HEDIONDOS.CRIME_SELECTION}>\n      <StepSwitcher step={step} conditions={[!user.isReady, !user.isReady, !user.isReady]} players={players}>\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state?.round}\n          onPressButton={goToNextStep}\n          buttonText=\" \"\n          time={5}\n          circleColor={info?.appearance?.color}\n        >\n          <ImageCardPreloadHand hand={Object.keys(state.items)} />\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <>\n          <StepItemsSelection\n            user={user}\n            groupedItems={state.groupedItems}\n            items={state.items}\n            selections={selections}\n            updateSelections={updateSelections}\n            announcement={announcementItems}\n          />\n          <DebugOnly dev>\n            <Button onClick={onMockCrime} size=\"large\">\n              Random Crime\n            </Button>\n          </DebugOnly>\n        </>\n\n        {/* Step 2 */}\n        <StepCauseOfDeathSelection\n          items={state.items}\n          causeOfDeathTile={state.causeOfDeathTile}\n          selections={selections}\n          updateSelections={updateSelections}\n          goToStep={setStep}\n          announcement={announcementCause}\n        />\n\n        {/* Step 3 */}\n        <StepReasonForEvidence\n          items={state.items}\n          reasonForEvidenceTile={state.reasonForEvidenceTile}\n          selections={selections}\n          updateSelections={updateSelections}\n          goToStep={setStep}\n          announcement={announcementEvidence}\n        />\n\n        {/* Step 4 */}\n        <StepLocationSelection\n          user={user}\n          items={state.items}\n          groupedItems={state.groupedItems}\n          locationTiles={state.locationTiles}\n          selections={selections}\n          updateSelections={updateSelections}\n          goToStep={setStep}\n          announcement={announcementLocation}\n        />\n\n        {/* Step 5 */}\n        <StepReviewCrime\n          items={state.items}\n          causeOfDeathTile={state.causeOfDeathTile}\n          reasonForEvidenceTile={state.reasonForEvidenceTile}\n          locationTiles={state.locationTiles}\n          selections={selections}\n          onSubmitCrime={onSubmitCrime}\n          updateSelection={updateSelection}\n          players={players}\n          announcement={announcementReview}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseCrimeSelection;\n","import { CRIMES_HEDIONDOS_API } from 'services/adapters';\nimport { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\n\nexport function useOnSubmitCrimeAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: CRIMES_HEDIONDOS_API.submitAction,\n    actionName: 'submit-crime',\n    onBeforeCall: () => setStep(11),\n    onError: () => setStep(9),\n    successMessage: translate('Crime enviado com sucesso', 'Crime submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar seu crime',\n      'Oops, the application failed to send your crime'\n    ),\n  });\n\n  return (payload: SubmitCrimePayload) => {\n    request({\n      action: 'SUBMIT_CRIME',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitMarkAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: CRIMES_HEDIONDOS_API.submitAction,\n    actionName: 'submit-mark',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(2),\n    successMessage: translate(\n      'Nova informação enviadas com sucesso',\n      'New information submitted successfully'\n    ),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar a nova informação',\n      'Oops, the application failed to send the new information'\n    ),\n  });\n\n  return (payload: SubmitMarkPayload) => {\n    request({\n      action: 'SUBMIT_MARK',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitGuessesAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: CRIMES_HEDIONDOS_API.submitAction,\n    actionName: 'submit-guesses',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate('Respostas enviadas com sucesso', 'Guesses submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar suas respostas',\n      'Oops, the application failed to send your guesses'\n    ),\n  });\n\n  return (payload: SubmitGuessesPayload) => {\n    request({\n      action: 'SUBMIT_GUESSES',\n      ...payload,\n    });\n  };\n}\n","// Components\nimport { ItemCard } from './ItemCard';\n\ntype ItemCardEmptyProps = {\n  cardWidth: number;\n  cardType: 'evidence' | 'weapon';\n};\n\nexport function ItemCardEmpty({ cardWidth, cardType }: ItemCardEmptyProps) {\n  return (\n    <ItemCard\n      item={{\n        id: `dmhk-${cardType === 'evidence' ? 'ev' : 'wp'}-000`,\n        type: cardType,\n        name: {\n          pt: '?',\n          en: '?',\n        },\n      }}\n      cardWidth={cardWidth}\n      isSelected={false}\n      preview={false}\n    />\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport {\n  CheckCircleFilled,\n  CloseCircleFilled,\n  LockFilled,\n  MinusCircleFilled,\n  QuestionCircleFilled,\n  WarningFilled,\n} from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\n\ntype CrimeGuessStatusProps = {\n  status: string;\n  withDescription?: boolean;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n};\n\nexport function CrimeGuessStatus({ status, withDescription = false, className = '' }: CrimeGuessStatusProps) {\n  const baseClass = 'crime-guess-status';\n\n  switch (status) {\n    case 'LOCKED':\n      return (\n        <span className={clsx(baseClass, `${baseClass}--${status}`, className)}>\n          <LockFilled color=\"gray\" />\n          <Translate pt=\"TRAVADO\" en=\"LOCKED\" />\n          {withDescription && (\n            <Translate\n              pt=\": Você já tinha adivinhado esse corretamente\"\n              en=\": You already guessed this one correctly\"\n            />\n          )}\n        </span>\n      );\n    case 'CORRECT':\n      return (\n        <span className={clsx(baseClass, `${baseClass}--${status}`, className)}>\n          <CheckCircleFilled color=\"green\" />\n          <Translate pt=\"CORRETO\" en=\"CORRECT\" />\n          {withDescription && (\n            <Translate pt=\": Você acertou arma e objeto\" en=\": You got the weapon and object correctly\" />\n          )}\n        </span>\n      );\n    case 'HALF':\n      return (\n        <span className={clsx(baseClass, `${baseClass}--${status}`, className)}>\n          <MinusCircleFilled />\n          <Translate pt=\"SOMENTE UM\" en=\"ONE ONLY\" />\n          {withDescription && (\n            <Translate pt=\": Um dos items está correto\" en=\": One of the items is correct\" />\n          )}\n        </span>\n      );\n    case 'WRONG':\n      return (\n        <span className={clsx(baseClass, `${baseClass}--${status}`, className)}>\n          <CloseCircleFilled color=\"red\" />\n          <Translate pt=\"ERRADO\" en=\"WRONG\" />\n          {withDescription && (\n            <Translate\n              pt=\": Você errou ambos arma e objeto, mas está no quadrante certo\"\n              en=\": You got both weapon and object wrong but you are in the right group\"\n            />\n          )}\n        </span>\n      );\n    case 'WRONG_GROUP':\n      return (\n        <span className={clsx(baseClass, `${baseClass}--${status}`, className)}>\n          <WarningFilled color=\"red\" />\n          <Translate pt=\"GRUPO ERRADO\" en=\"WRONG GROUP\" />\n          {withDescription && (\n            <Translate\n              pt=\": Você é tão burro que você escolheu items no grupo errado\"\n              en=\": You're so dumb you chose items in the wrong group\"\n            />\n          )}\n        </span>\n      );\n    default:\n      return (\n        <span className={clsx(baseClass, `${baseClass}--${status}`, className)}>\n          <QuestionCircleFilled />\n          <Translate pt=\"?\" en=\"?\" />\n          );\n          {withDescription && (\n            <Translate pt=\": Recebido status desconhecido\" en=\": Received unknown guess status\" />\n          )}\n        </span>\n      );\n  }\n}\n","import { useState } from 'react';\nimport clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Tooltip } from 'antd';\nimport {\n  CheckCircleFilled,\n  ClockCircleFilled,\n  EnvironmentOutlined,\n  ExceptionOutlined,\n  GiftOutlined,\n  LockFilled,\n  SafetyOutlined,\n} from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { getAvatarColorById } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { ItemCard } from './ItemCard';\nimport { ItemCardEmpty } from './ItemCardEmpty';\nimport { CrimeGuessStatus } from './CrimeGuessStatus';\n\nconst CARD_WIDTH = 100;\n\ntype CrimeProps = {\n  history?: GuessHistoryEntry[];\n  crime: Crime;\n  items: ItemsDict;\n  player: GamePlayer;\n  scenes: ScenesDict;\n  scenesOrder: string[];\n  selectedWeaponId?: CardId;\n  selectedEvidenceId?: CardId;\n  isLocked?: boolean;\n};\n\nexport function Crime({\n  crime,\n  player,\n  scenesOrder,\n  scenes,\n  selectedWeaponId,\n  selectedEvidenceId,\n  history,\n  items,\n  isLocked,\n}: CrimeProps) {\n  const [historyEntryIndex, setHistoryEntryIndex] = useState(-1);\n  const isComplete = Boolean(selectedWeaponId && selectedWeaponId);\n\n  const activeWeaponId =\n    historyEntryIndex >= 0 && history ? history[historyEntryIndex].weaponId : selectedWeaponId;\n\n  const evidenceWeaponId =\n    historyEntryIndex >= 0 && history ? history[historyEntryIndex].evidenceId : selectedEvidenceId;\n\n  const color = getAvatarColorById(player.avatarId);\n  const hasHistory = history && history.length;\n\n  return (\n    <div className=\"h-crime\">\n      <div className=\"h-crime__player\" style={{ backgroundColor: color }}>\n        <span className=\"h-crime__player-avatar\">\n          <Avatar id={player.avatarId} />\n        </span>\n        <span className=\"h-crime__player-name\">{player.name}</span>\n      </div>\n\n      <div className=\"h-crime__scenes\">\n        {scenesOrder\n          .filter((sceneId) => crime.scenes[sceneId] !== undefined)\n          .map((sceneId) => {\n            const scene = scenes[sceneId];\n\n            return (\n              <CrimeScene\n                key={`crime-scene-${sceneId}-by-${crime.playerId}`}\n                scene={scene}\n                playerIndex={crime.scenes[sceneId]}\n              />\n            );\n          })}\n      </div>\n\n      <div className=\"h-crime__history\" style={{ borderColor: hasHistory ? color : 'transparent' }}>\n        {hasHistory && (\n          <>\n            <div className=\"h-crime__history-header\">\n              <Tooltip\n                title={\n                  <Translate\n                    pt=\"Histórico: passe o mouse nas rodadas\"\n                    en=\"History: hover the round numbers\"\n                  />\n                }\n              >\n                <ClockCircleFilled />\n              </Tooltip>\n            </div>\n            {history?.map((_, index) => {\n              return (\n                <Button\n                  key={`history-entry-${index}`}\n                  ghost\n                  shape=\"circle\"\n                  size=\"small\"\n                  onMouseOver={() => setHistoryEntryIndex(index)}\n                  onMouseLeave={() => setHistoryEntryIndex(-1)}\n                >\n                  {index + 1}\n                </Button>\n              );\n            })}\n          </>\n        )}\n      </div>\n\n      <div className=\"h-crime-selections\">\n        {activeWeaponId ? (\n          <ItemCard item={items[activeWeaponId]} cardWidth={CARD_WIDTH} preview />\n        ) : (\n          <ItemCardEmpty cardWidth={CARD_WIDTH} cardType=\"weapon\" />\n        )}\n\n        {evidenceWeaponId ? (\n          <ItemCard item={items[evidenceWeaponId]} cardWidth={CARD_WIDTH} preview />\n        ) : (\n          <ItemCardEmpty cardWidth={CARD_WIDTH} cardType=\"evidence\" />\n        )}\n\n        <div className=\"h-crime-selections__status\">\n          {historyEntryIndex >= 0 && history && history[historyEntryIndex] && (\n            <CrimeGuessStatus status={history[historyEntryIndex].status} />\n          )}\n          {historyEntryIndex === -1 && isLocked && <CrimeGuessStatus status=\"LOCKED\" />}\n        </div>\n      </div>\n\n      <div className=\"h-crime__player\" style={{ backgroundColor: isComplete ? color : undefined }}>\n        {isLocked && <LockFilled />}\n        {!isLocked && isComplete && <CheckCircleFilled />}\n      </div>\n    </div>\n  );\n}\n\ntype CrimeSceneProps = {\n  scene: SceneTile;\n  playerIndex: number;\n};\n\nfunction CrimeScene({ scene, playerIndex }: CrimeSceneProps) {\n  const { language } = useLanguage();\n  return (\n    <li className={clsx('h-crime-scene', `h-crime-scene--${scene.type}`)}>\n      <div className={clsx('h-crime-scene__label', `h-crime-scene__label--${scene.type}`)}>\n        <CrimeSceneIcon type={scene.type} /> {scene.title[language]}\n      </div>\n      <div className=\"h-crime-scene__value\">{scene.values[playerIndex][language]}</div>\n    </li>\n  );\n}\n\ntype CrimeSceneIconProps = {\n  type: string;\n};\n\nfunction CrimeSceneIcon({ type }: CrimeSceneIconProps) {\n  switch (type) {\n    case 'cause':\n      return <SafetyOutlined />;\n    case 'evidence':\n      return <GiftOutlined />;\n    case 'location':\n      return <EnvironmentOutlined />;\n    default:\n      return <ExceptionOutlined />;\n  }\n}\n","// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { ItemCard } from './ItemCard';\n\ntype GroupedItemsBoardProps = {\n  groupedItems: GroupedItems;\n  items: ItemsDict;\n  weaponId?: string;\n  evidenceId?: string;\n};\n\nexport function GroupedItemsBoard({ items, weaponId, evidenceId, groupedItems }: GroupedItemsBoardProps) {\n  const cardWidth = useCardWidth(12, 8, 30, 200);\n  return (\n    <ul className=\"h-grouped-items-board\">\n      {Object.values(groupedItems).map((group, index) => (\n        <li key={`group-${index}`}>\n          <ul className=\"h-grouped-items-board__group\">\n            {group.map((itemId) => (\n              <li key={itemId}>\n                <ItemCard\n                  item={items[itemId]}\n                  cardWidth={cardWidth}\n                  isSelected={[weaponId, evidenceId].includes(itemId)}\n                />\n              </li>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, Collapse, Space } from 'antd';\n// Components\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Crime } from './components/Crime';\nimport { GroupedItemsBoard } from './components/GroupedItemsBoard';\nimport { SceneTile } from './components/SceneTile';\nimport { useLanguage } from 'hooks/useLanguage';\n\ntype StepNewSceneProps = {\n  user: GamePlayer;\n  items: ItemsDict;\n  groupedItems: GroupedItems;\n  onSubmitMark: GenericFunction;\n  sceneTile: SceneTile;\n  crimes: Crime[];\n  scenes: ScenesDict;\n  scenesOrder: string[];\n  players: GamePlayers;\n};\n\nexport function StepNewScene({\n  user,\n  items,\n  groupedItems,\n  onSubmitMark,\n  sceneTile,\n  crimes,\n  players,\n  scenes,\n  scenesOrder,\n}: StepNewSceneProps) {\n  const { language } = useLanguage();\n  const [sceneMarkIndex, setSceneMarkIndex] = useState<number>();\n\n  const onSelectItem = (payload: SceneTilePayload) => {\n    setSceneMarkIndex(payload.value);\n  };\n\n  const crime = crimes.find((crime) => crime.playerId === user.id);\n\n  return (\n    <Step>\n      <Title size=\"medium\">\n        {/* <Translate pt=\"Dê mais detalhes do crime\" en=\"Give us more details\" /> */}\n        {sceneTile.description[language]}\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Baseado em suas cartas, selecione uma opção na nova carta de detalhes da Cena do Crime abaixo.\n            </>\n          }\n          en={<>Based on your cards, select an option in the new Scene card below.</>}\n        />\n      </Instruction>\n\n      <Collapse>\n        <Collapse.Panel\n          key=\"weapons-evidences\"\n          header={\n            <Translate\n              pt=\"Clique para ver todas Armas e Evidências\"\n              en=\"Click to see all Weapons and Evidence\"\n            />\n          }\n        >\n          <GroupedItemsBoard\n            groupedItems={groupedItems}\n            items={items}\n            weaponId={user.weaponId}\n            evidenceId={user.evidenceId}\n          />\n        </Collapse.Panel>\n      </Collapse>\n\n      <div className=\"\">\n        <Crime\n          key={`crime-by-${crime!.playerId}`}\n          crime={crime!}\n          scenes={scenes}\n          scenesOrder={scenesOrder}\n          items={items}\n          player={user}\n          selectedWeaponId={user.weaponId}\n          selectedEvidenceId={user.evidenceId}\n        />\n      </div>\n\n      <SceneTile tile={sceneTile} onSelectValue={onSelectItem} index={sceneMarkIndex} />\n\n      <Space className=\"space-container\" align=\"center\">\n        <Button\n          type=\"primary\"\n          size=\"large\"\n          disabled={sceneMarkIndex === undefined}\n          onClick={() => onSubmitMark({ sceneIndex: sceneMarkIndex })}\n        >\n          <Translate pt=\"Enviar\" en=\"Send\" />\n        </Button>\n      </Space>\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useMock } from 'hooks/useMock';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\nimport { useOnSubmitMarkAPIRequest } from './utils/api-requests';\nimport { mockSceneMark } from './utils/mock';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { LoupeIcon } from 'icons/LoupeIcon';\n// Components\nimport { Translate } from 'components/language';\nimport { RoundAnnouncement } from 'components/round';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { StepNewScene } from './StepNewScene';\n\nfunction PhaseSceneMarking({ players, state, info }: PhaseProps) {\n  const { language } = useLanguage();\n  const user = useUser(players, state);\n  const { step, setStep, goToNextStep } = useStep(0);\n\n  const onSubmitMark = useOnSubmitMarkAPIRequest(setStep);\n\n  useMock(() => {\n    onSubmitMark({ sceneIndex: mockSceneMark() });\n  }, []);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.CRIMES_HEDIONDOS.SCENE_MARKING}>\n      <StepSwitcher step={step} conditions={[!user.ready, !user.ready, !user.ready]} players={players}>\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state?.round}\n          onPressButton={goToNextStep}\n          buttonText=\" \"\n          time={5}\n          circleColor={info?.appearance?.color}\n        />\n\n        {/* Step 1 */}\n        <PhaseAnnouncement\n          icon={<LoupeIcon />}\n          title={<Translate pt=\"Nova pista\" en=\"New clue\" />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <Translate\n              pt=\"Compartilhe mais uma pista sobre seu crime:\"\n              en=\"Share one more piece of information about your crime:\"\n            />\n            <br />\n            {state.currentScene.description[language]}\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 2 */}\n        <StepNewScene\n          user={user}\n          groupedItems={state.groupedItems}\n          items={state.items}\n          onSubmitMark={onSubmitMark}\n          sceneTile={state.currentScene}\n          scenes={state.scenes}\n          scenesOrder={state.scenesOrder}\n          crimes={state.crimes}\n          players={players}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseSceneMarking;\n","import { orderBy } from 'lodash';\nimport { getLastItem } from 'utils/helpers';\n\ntype SplitWeaponsAndEvidence = {\n  weapons: HCard[];\n  evidences: HCard[];\n};\nexport const splitWeaponsAndEvidence = (items: ItemsDict, language: Language): SplitWeaponsAndEvidence => {\n  const { weapons, evidences } = Object.values(items).reduce(\n    (acc: PlainObject, item) => {\n      if (item.type === 'weapon') {\n        acc.weapons.push(item);\n      } else {\n        acc.evidences.push(item);\n      }\n      return acc;\n    },\n    {\n      weapons: [],\n      evidences: [],\n    }\n  );\n\n  const sortedWeapons = orderBy(weapons, [`name.${language}`], ['asc']);\n  const sortedEvidences = orderBy(evidences, [`name.${language}`], ['asc']);\n\n  return {\n    weapons: sortedWeapons,\n    evidences: sortedEvidences,\n  };\n};\n\nexport const getHistory = (playerHistory: HHistory, activePlayerId: PlayerId) => {\n  return playerHistory?.[activePlayerId] ?? [];\n};\n\nexport const isHistoryLocked = (history: HHistory, activePlayerId: PlayerId): boolean => {\n  const lastGuessHistory = getLastItem(getHistory(history, activePlayerId));\n  return Boolean(['CORRECT', 'LOCKED'].includes(lastGuessHistory?.status));\n};\n\nexport const isEntryLocked = (historyEntry: GuessHistoryEntry): boolean => {\n  return Boolean(['CORRECT', 'LOCKED'].includes(historyEntry?.status));\n};\n\nexport const autoSelectCorrectGuesses = (history: HHistory) => {\n  const guesses: PlainObject = {};\n  Object.entries(history).forEach(([key, historyEntryArray]: any) => {\n    const historyEntry: GuessHistoryEntry = getLastItem(historyEntryArray);\n    if (['CORRECT', 'LOCKED'].includes(historyEntry.status)) {\n      guesses[key] = {\n        weaponId: historyEntry.weaponId,\n        evidenceId: historyEntry.evidenceId,\n        isComplete: true,\n      };\n    }\n  });\n  return guesses;\n};\n","// Helpers\nimport { isHistoryLocked } from '../utils/helpers';\nimport { sortPlayers } from 'utils/helpers';\n// Icons\nimport { LockIcon } from 'icons/LockIcon';\nimport { KnifeIcon } from 'icons/KnifeIcon';\n// Components\nimport { AvatarCard, IconAvatar } from 'components/avatars';\nimport { TransparentButton } from 'components/buttons';\n\ntype PlayersCardsProps = {\n  activePlayerId: PlayerId;\n  setActivePlayerId: GenericFunction;\n  guesses: PlainObject;\n  players: GamePlayers;\n  user: GamePlayer;\n  history: HHistory;\n};\n\nexport function PlayersCards({\n  activePlayerId,\n  setActivePlayerId,\n  players,\n  guesses,\n  user,\n  history,\n}: PlayersCardsProps) {\n  return (\n    <ul className=\"h-players-cards\">\n      {sortPlayers(players).map((player) => {\n        const isActive = activePlayerId === player.id;\n        const isComplete =\n          user.id === player.id || Boolean(guesses[player.id]?.weaponId && guesses[player.id]?.evidenceId);\n        const isLocked = isHistoryLocked(history, player.id);\n        return (\n          <li key={`player-card-${player.id}`}>\n            <TransparentButton onClick={() => setActivePlayerId(player.id)} active={isActive}>\n              <AvatarCard\n                size=\"small\"\n                player={player}\n                withName\n                replacementAvatar={\n                  (isLocked && <IconAvatar icon={<LockIcon />} className=\"h-players-cards__seal\" />) ||\n                  (isComplete && <IconAvatar icon={<KnifeIcon />} className=\"h-players-cards__seal\" />)\n                }\n              />\n            </TransparentButton>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { TransparentButton } from 'components/buttons';\nimport { ItemCard } from './ItemCard';\n\nconst getEliminatedCard = (cardType: string) => ({\n  id: `dmhk-${cardType === 'ev' ? 'ev' : 'wp'}-xxx`,\n  type: cardType,\n  name: {\n    pt: 'x',\n    en: 'x',\n  },\n});\n\ntype SelectableGroupedItemsBoardProps = {\n  groupedItems: GroupedItems;\n  items: ItemsDict;\n  weaponId?: string;\n  evidenceId?: string;\n  onSelectItem: GenericFunction;\n  activeColor?: string;\n  isLocked?: boolean;\n  wrongGroups?: number[];\n};\n\nexport function SelectableGroupedItemsBoard({\n  items,\n  weaponId,\n  evidenceId,\n  groupedItems,\n  onSelectItem,\n  activeColor,\n  isLocked,\n  wrongGroups = [],\n}: SelectableGroupedItemsBoardProps) {\n  const cardWidth = useCardWidth(12, 8, 30, 200);\n\n  return (\n    <ul className=\"h-grouped-items-board\">\n      {Object.values(groupedItems).map((group, index) => {\n        const isGroupWrong = wrongGroups.includes(index);\n\n        return (\n          <li key={`group-${index}`}>\n            <ul\n              className=\"h-grouped-items-board__group\"\n              style={Boolean(activeColor) ? { borderColor: activeColor } : {}}\n            >\n              {group.map((itemId) => (\n                <li key={itemId}>\n                  <TransparentButton\n                    onClick={isLocked || isGroupWrong ? undefined : () => onSelectItem(itemId)}\n                  >\n                    <ItemCard\n                      item={isGroupWrong ? getEliminatedCard(itemId.split('-')[1]) : items[itemId]}\n                      cardWidth={cardWidth}\n                      isSelected={[weaponId, evidenceId].includes(itemId)}\n                      preview={false}\n                      activeColor={activeColor}\n                    />\n                  </TransparentButton>\n                </li>\n              ))}\n            </ul>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import { useEffect, useState } from 'react';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { getAvatarColorById, getLastItem } from 'utils/helpers';\nimport { mockGuesses } from './utils/mock';\nimport { autoSelectCorrectGuesses, getHistory } from './utils/helpers';\n// Icons\nimport { InvestigationIcon } from 'icons/InvestigationIcon';\n// Components\nimport { Crime } from './components/Crime';\nimport { PlayersCards } from './components/PlayersCards';\nimport { SelectableGroupedItemsBoard } from './components/SelectableGroupedItemsBoard';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { DebugOnly } from 'components/debug';\nimport { FloatingHand } from 'components/cards';\n\ntype StepGuessingProps = {\n  user: GamePlayer;\n  players: GamePlayers;\n  items: ItemsDict;\n  groupedItems: GroupedItems;\n  scenes: ScenesDict;\n  scenesOrder: string[];\n  crimes: Crime[];\n  onSubmitGuesses: GenericFunction;\n};\n\nexport function StepGuessing({\n  user,\n  groupedItems,\n  items,\n  players,\n  scenes,\n  scenesOrder,\n  crimes,\n  onSubmitGuesses,\n}: StepGuessingProps) {\n  const [guesses, setGuesses] = useState<PlainObject>({});\n  const [activePlayerId, setActivePlayerId] = useState<PlayerId>('');\n\n  // DEV: Auto guesses\n  useMock(() => {\n    onSubmitGuesses({ guesses: mockGuesses(groupedItems, players, user) });\n  }, []);\n\n  // If last guess was CORRECT or LOCK, auto-guess\n  useEffect(() => {\n    setGuesses((g) => ({ ...g, ...autoSelectCorrectGuesses(user.history) }));\n  }, [user]);\n\n  const onUpdateGuesses = (itemId: string) => {\n    if (activePlayerId && itemId) {\n      const guessObj = {\n        ...(guesses[activePlayerId] ?? {\n          weaponId: undefined,\n          evidenceId: undefined,\n          isComplete: false,\n        }),\n      };\n\n      const isWeapon = itemId.includes('wp');\n\n      if (isWeapon) {\n        guessObj.weaponId = itemId;\n      } else {\n        guessObj.evidenceId = itemId;\n      }\n\n      setGuesses((s: PlainObject) => ({\n        ...s,\n        [activePlayerId]: {\n          ...guessObj,\n          isComplete: Boolean(guessObj?.weaponId && guessObj?.evidenceId),\n        },\n      }));\n    }\n  };\n\n  const playerCount = Object.keys(players).length;\n  const isAllComplete =\n    Object.values(guesses).length === playerCount - 1 &&\n    Object.values(guesses).every((guess) => guess.weaponId && guess.evidenceId);\n  const activeCrime = crimes.find((crime) => crime.playerId === activePlayerId);\n  const isOwnCrime = activePlayerId === user.id;\n  const activePlayerGuesses = guesses?.[activePlayerId] ?? {};\n\n  const lastGuessHistory = getLastItem(getHistory(user.history, activePlayerId));\n  const isLocked = ['CORRECT', 'LOCKED'].includes(lastGuessHistory?.status);\n\n  // Active stuff\n  const { activeWeaponId, activeEvidenceId } = getActiveStuff(\n    isOwnCrime,\n    isLocked,\n    user,\n    activePlayerGuesses,\n    lastGuessHistory\n  );\n\n  return (\n    <Step>\n      <Title>\n        <Translate pt=\"Quais foram os crimes?\" en=\"What were the crimes?\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Selecione cada jogador abaixo, analise suas respostas sobre o crime, e selecione uma arma e um\n              objeto.\n              <br />O par sempre estará no mesmo quadrante, mas os objetos não são exclusivos e diferentes\n              crimes podem usar as mesmas cartas.\n              <br />\n              Crimes que já tem ambos selecionados são indicados por uma faca.\n            </>\n          }\n          en={\n            <>\n              Select each player below, analyze their answers about their crimes, then select a weapon and an\n              object.\n              <br />\n              The pair will always be in the same quadrant, but object are non-exclusive so different crimes\n              might use the same cards.\n              <br />\n              Crimes with both cards selected are indicated by a knife.\n            </>\n          }\n        />\n      </Instruction>\n\n      <DebugOnly dev>\n        <Space className=\"space-container\" align=\"center\">\n          <Button type=\"dashed\" ghost onClick={() => setGuesses(mockGuesses(groupedItems, players, user))}>\n            <Translate pt=\"Seleção Aleatória Semi-inteligente\" en=\"Semi-intelligent Random Selection\" />\n          </Button>\n        </Space>\n      </DebugOnly>\n\n      <PlayersCards\n        user={user}\n        activePlayerId={activePlayerId}\n        setActivePlayerId={setActivePlayerId}\n        players={players}\n        guesses={guesses}\n        history={user.history}\n      />\n\n      {isAllComplete && (\n        <Space className=\"space-container\" align=\"center\">\n          <Button\n            size=\"large\"\n            type=\"primary\"\n            disabled={!isAllComplete}\n            onClick={() => onSubmitGuesses({ guesses })}\n          >\n            <Translate pt=\"Enviar Respostas\" en=\"Send Guesses\" />\n          </Button>\n        </Space>\n      )}\n\n      <SelectableGroupedItemsBoard\n        items={items}\n        weaponId={activeWeaponId}\n        evidenceId={activeEvidenceId}\n        groupedItems={groupedItems}\n        onSelectItem={onUpdateGuesses}\n        activeColor={getAvatarColorById(players[activePlayerId]?.avatarId)}\n        isLocked={isOwnCrime || isLocked}\n        wrongGroups={user?.wrongGroups?.[activePlayerId] ?? []}\n      />\n\n      {activeCrime && (\n        <FloatingHand title=\"Crime\" icon={<InvestigationIcon />}>\n          <Crime\n            key={`crime-by-${activeCrime.playerId}`}\n            crime={activeCrime}\n            scenes={scenes}\n            scenesOrder={scenesOrder}\n            items={items}\n            history={user?.history[activeCrime.playerId] ?? []}\n            player={players[activeCrime.playerId]}\n            selectedWeaponId={activeWeaponId}\n            selectedEvidenceId={activeEvidenceId}\n            isLocked={isOwnCrime || isLocked}\n          />\n        </FloatingHand>\n      )}\n\n      {/* This makes sure people can open the floating hand and still see all ItemBoard */}\n      <div className=\"h-empty-space\"></div>\n    </Step>\n  );\n}\n\nconst getActiveStuff = (\n  isOwnCrime: boolean,\n  isLocked: boolean,\n  user: GamePlayer,\n  activePlayerGuesses: any,\n  lastGuessHistory: GuessHistoryEntry\n): { activeWeaponId: string; activeEvidenceId: string } => {\n  if (isOwnCrime) {\n    return {\n      activeWeaponId: user.weaponId,\n      activeEvidenceId: user.evidenceId,\n    };\n  }\n\n  if (isLocked) {\n    return {\n      activeWeaponId: lastGuessHistory.weaponId,\n      activeEvidenceId: lastGuessHistory.evidenceId,\n    };\n  }\n\n  return {\n    activeWeaponId: activePlayerGuesses.weaponId,\n    activeEvidenceId: activePlayerGuesses.evidenceId,\n  };\n};\n","// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitGuessesAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { GuessIcon } from 'icons/GuessIcon';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { GuessMessage } from './components/RulesBlobs';\nimport { StepGuessing } from './StepGuessing';\nimport { Translate } from 'components/language';\n\nfunction PhaseGuessing({ players, state, info }: PhaseProps) {\n  const { step, setStep, goToNextStep } = useStep(0);\n  const user = useUser(players, state);\n\n  const onSubmitGuesses = useOnSubmitGuessesAPIRequest(setStep);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.CRIMES_HEDIONDOS.GUESSING}>\n      <StepSwitcher step={step} conditions={[!user.isReady, !user.isReady]} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<GuessIcon />}\n          title={<Translate pt=\"Tente Adivinhar\" en=\"Try to guess\" />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <GuessMessage />\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepGuessing\n          user={user}\n          groupedItems={state.groupedItems}\n          items={state.items}\n          players={players}\n          scenes={state.scenes}\n          scenesOrder={state.scenesOrder}\n          crimes={state.crimes}\n          onSubmitGuesses={onSubmitGuesses}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseGuessing;\n","import { orderBy } from 'lodash';\n// Ant Design Resources\nimport { Table, Tooltip } from 'antd';\n// Icons\nimport { BoxCheckMarkIcon } from 'icons/BoxCheckMarkIcon';\nimport { BoxXIcon } from 'icons/BoxXIcon';\nimport { BoxMinusIcon } from 'icons/BoxMinusIcon';\nimport { BoxOneIcon } from 'icons/BoxOneIcon';\n// Components\nimport { AvatarName, Avatar, IconAvatar } from 'components/avatars';\nimport { CrimeGuessStatus } from './CrimeGuessStatus';\n\ntype ResultsTableProps = {\n  players: GamePlayers;\n  results: HResults;\n};\n\nexport function ResultsTable({ players, results }: ResultsTableProps) {\n  const columns = [\n    {\n      title: '',\n      dataIndex: 'playerId',\n      render: (playerId: string) => <AvatarName player={players[playerId]} size=\"small\" addressUser />,\n    },\n    ...orderBy(Object.keys(results)).map((playerId) => ({\n      title: <Avatar id={players[playerId].avatarId} size=\"small\" />,\n      dataIndex: playerId,\n      render: (status: string) => <ResultsTableCell status={status} />,\n    })),\n  ];\n\n  const data = orderBy(Object.entries(results))\n    .filter(([key, _]) => players[key].type === 'player')\n    .map(([key, result]) => {\n      return {\n        playerId: key,\n        ...result,\n      };\n    });\n\n  return <Table columns={columns} dataSource={data} pagination={false} size=\"small\" bordered />;\n}\n\ntype ResultsTableCellProps = {\n  status: string;\n};\n\nfunction ResultsTableCell({ status }: ResultsTableCellProps) {\n  switch (status) {\n    case 'LOCKED':\n    case 'CORRECT':\n      return (\n        <Tooltip title={<CrimeGuessStatus status={status} withDescription />} color=\"white\">\n          <IconAvatar icon={<BoxCheckMarkIcon />} shape=\"square\" alt={status} />\n        </Tooltip>\n      );\n    case 'HALF':\n      return (\n        <Tooltip title={<CrimeGuessStatus status={status} withDescription />} color=\"white\">\n          <IconAvatar icon={<BoxOneIcon />} shape=\"square\" alt={status} />\n        </Tooltip>\n      );\n    case 'WRONG':\n      return (\n        <Tooltip title={<CrimeGuessStatus status={status} withDescription />} color=\"white\">\n          <IconAvatar icon={<BoxMinusIcon />} shape=\"square\" alt={status} />\n        </Tooltip>\n      );\n    case 'WRONG_GROUP':\n      return (\n        <Tooltip title={<CrimeGuessStatus status={status} withDescription />} color=\"white\">\n          <IconAvatar icon={<BoxXIcon />} shape=\"square\" alt={status} />\n        </Tooltip>\n      );\n    default:\n      return <span>•</span>;\n  }\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, Collapse, Space } from 'antd';\nimport { TrophyOutlined } from '@ant-design/icons';\n// Utils\nimport { getAnimationClass, getLastItem } from 'utils/helpers';\nimport { isEntryLocked } from './utils/helpers';\n// Hooks\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Components\nimport { Crime } from './components/Crime';\nimport { GroupedItemsBoard } from './components/GroupedItemsBoard';\nimport { ScoringMessage } from './components/RulesBlobs';\nimport { PlayersCards } from './components/PlayersCards';\nimport { CrimeGuessStatus } from './components/CrimeGuessStatus';\nimport { ResultsTable } from './components/ResultsTable';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { PopoverRule } from 'components/rules';\nimport { TimedButton } from 'components/buttons';\n\ntype StepRevealProps = {\n  user: GamePlayer;\n  players: GamePlayers;\n  items: ItemsDict;\n  groupedItems: GroupedItems;\n  scenes: ScenesDict;\n  scenesOrder: string[];\n  crimes: Crime[];\n  onSeeRanking: GenericFunction;\n  round: GameRound;\n  results: HResults;\n  isFirstRunThrough: boolean;\n};\n\nexport function StepReveal({\n  user,\n  groupedItems,\n  items,\n  players,\n  scenes,\n  scenesOrder,\n  crimes,\n  onSeeRanking,\n  round,\n  results,\n  isFirstRunThrough,\n}: StepRevealProps) {\n  useTemporarilyHidePlayersBar();\n\n  const [activePlayerId, setActivePlayerId] = useState<PlayerId>('');\n\n  const playerCount = Object.keys(players).length;\n\n  const activeCrime = crimes.find((crime) => crime.playerId === activePlayerId);\n  const isOwnCrime = activePlayerId === user.id;\n  const history: GuessHistoryEntry[] = user.history?.[(activeCrime! ?? {})?.playerId] ?? [];\n  const latestHistoryEntry = getLastItem(history);\n  const isLocked = isEntryLocked(latestHistoryEntry);\n\n  return (\n    <Step>\n      <Title>\n        <Translate pt=\"Resultado\" en=\"Results\" />\n      </Title>\n\n      <PopoverRule content={<ScoringMessage round={round} />} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Veja aqui como todos os jogadores foram. Passe o mouse nos ícones para saber mais detalhes.\n              <br />\n              As colunas são os crimes e as linhas são os chutes dessa rodada de cada jogador.\n            </>\n          }\n          en={\n            <>\n              See how all players did. Hover the icons to see details.\n              <br />\n              The columns are the crimes and the rows are the guesses for each player.\n            </>\n          }\n        />\n        \n        <ResultsTable players={players} results={results} />\n        \n        <Translate\n          pt={\n            <>\n              Você acertou {user.correctCrimes} pares e está com um total (secreto) de{' '}\n              {user.score + user.secretScore} pontos.\n            </>\n          }\n          en={\n            <>\n              You guesses {user.correctCrimes} crimes and have a (secret) total of{' '}\n              {user.score + user.secretScore} points.\n            </>\n          }\n        />\n      </Instruction>\n\n      <Space className=\"space-container\" align=\"center\">\n        <Collapse>\n          <Collapse.Panel\n            key=\"weapons-evidences\"\n            header={<Translate pt=\" Ver todas Armas e Evidências\" en=\"See all Weapons and Evidence\" />}\n          >\n            <GroupedItemsBoard\n              items={items}\n              weaponId={user.weaponId}\n              evidenceId={user.evidenceId}\n              groupedItems={groupedItems}\n            />\n          </Collapse.Panel>\n        </Collapse>\n      </Space>\n\n      <PlayersCards\n        user={user}\n        activePlayerId={activePlayerId}\n        setActivePlayerId={setActivePlayerId}\n        players={players}\n        guesses={{}}\n        history={user.history}\n      />\n\n      {Boolean(activePlayerId) && (\n        <Instruction\n          contained\n          className={!isLocked && !isOwnCrime ? getAnimationClass('tada') : ''}\n          key={`instruction-status-${activePlayerId}`}\n        >\n          {Boolean(latestHistoryEntry) ? (\n            <CrimeGuessStatus status={latestHistoryEntry.status} withDescription />\n          ) : isOwnCrime ? (\n            <Translate pt=\"Este é o seu próprio crime\" en=\"This is your own crime\" />\n          ) : (\n            ''\n          )}\n        </Instruction>\n      )}\n\n      {activeCrime && (\n        <div\n          className={getAnimationClass('slideInUp', undefined, 'fast')}\n          key={`crime-by-${activeCrime.playerId}`}\n        >\n          <Crime\n            crime={activeCrime}\n            scenes={scenes}\n            scenesOrder={scenesOrder}\n            items={items}\n            history={user.history[activeCrime.playerId]}\n            player={players[activeCrime.playerId]}\n            selectedWeaponId={isOwnCrime ? user.weaponId : latestHistoryEntry.weaponId}\n            selectedEvidenceId={isOwnCrime ? user.evidenceId : latestHistoryEntry.evidenceId}\n            isLocked={isLocked}\n          />\n        </div>\n      )}\n\n      <Space className=\"space-container\" align=\"center\">\n        {isFirstRunThrough ? (\n          <TimedButton\n            onClick={onSeeRanking}\n            onExpire={onSeeRanking}\n            duration={Math.min(playerCount * 10, 60)}\n            icon={<TrophyOutlined />}\n          >\n            <Translate pt=\"Ver Ranking\" en=\"See Ranking\" />\n          </TimedButton>\n        ) : (\n          <Button onClick={onSeeRanking} icon={<TrophyOutlined />}>\n            <Translate pt=\"Ver Ranking\" en=\"See Ranking\" />\n          </Button>\n        )}\n      </Space>\n    </Step>\n  );\n}\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Components\nimport { AdminNextPhaseButton } from 'components/admin';\nimport { Translate } from 'components/language';\nimport { StepRankingWrapper } from 'components/ranking';\n\ntype StepRankingProps = {\n  ranking: GameRanking;\n  players: GamePlayers;\n  goToPreviousStep: GenericFunction;\n  round: GameRound;\n};\n\nexport function StepRanking({ ranking, players, goToPreviousStep, round }: StepRankingProps) {\n  const roundPoints = round.total - round.current + 1;\n\n  return (\n    <StepRankingWrapper\n      players={players}\n      ranking={ranking}\n      gainedPointsDescriptions={[\n        <Translate\n          pt={<>Pares corretos ganham {roundPoints} pontos nessa rodada. 1 ponto a menos na próxima.</>}\n          en={<>Correct pairs get {roundPoints} points this round. 1 point less next round.</>}\n        />,\n      ]}\n    >\n      <Space className=\"space-container\" align=\"center\">\n        <Button onClick={goToPreviousStep}>\n          <Translate pt=\"Ver resultado novamente\" en=\"See results again\" />\n        </Button>\n      </Space>\n      <AdminNextPhaseButton round={round} />\n    </StepRankingWrapper>\n  );\n}\n","import { useEffect, useState } from 'react';\n// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { RankIcon } from 'icons/RankIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { StepReveal } from './StepReveal';\nimport { ScoringMessage } from './components/RulesBlobs';\nimport { StepRanking } from './StepRanking';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\n\nfunction PhaseReveal({ players, state, info }: PhaseProps) {\n  const { step, goToNextStep, goToPreviousStep } = useStep(0);\n  const user = useUser(players, state);\n\n  const [isFirstRunThrough, setIsFirstRunThrough] = useState(true);\n\n  // Changes isFirstGalleryRunThrough property which disables controls, after the first gallery run through\n  useEffect(() => {\n    if (isFirstRunThrough && step > 1) {\n      setIsFirstRunThrough(false);\n    }\n  }, [step, isFirstRunThrough]);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.CRIMES_HEDIONDOS.REVEAL}>\n      <StepSwitcher step={step} conditions={[!user.isReady, !user.isReady, !user.isReady]} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<RankIcon />}\n          title={<Translate pt=\"Resultado\" en=\"Results\" />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <ScoringMessage round={state.round} />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepReveal\n          user={user}\n          groupedItems={state.groupedItems}\n          items={state.items}\n          players={players}\n          scenes={state.scenes}\n          scenesOrder={state.scenesOrder}\n          crimes={state.crimes}\n          onSeeRanking={goToNextStep}\n          round={state.round}\n          results={state.results}\n          isFirstRunThrough={isFirstRunThrough}\n        />\n\n        {/* Step 2 */}\n        <StepRanking\n          ranking={state.ranking}\n          players={players}\n          goToPreviousStep={goToPreviousStep}\n          round={state.round}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseReveal;\n","import { orderBy } from 'lodash';\n// Hooks\nimport { useUser } from 'hooks/useUser';\n// Icons\nimport { TrophyIcon } from 'icons/TrophyIcon';\n// Components\nimport { GameOverWrapper } from 'components/game-over';\nimport { Crime } from './components/Crime';\n\nfunction PhaseGameOver({ state, players, info }: PhaseProps) {\n  const crimes: Crime[] = state.crimes;\n  const user = useUser(players, state);\n\n  return (\n    <GameOverWrapper info={info} state={state} announcementIcon={<TrophyIcon />}>\n      <ul>\n        {orderBy(crimes, ['playerId']).map((crime) => (\n          <Crime\n            key={`crime-by-${crime.playerId}`}\n            crime={crime}\n            items={state.items}\n            player={players[crime.playerId]}\n            scenes={state.scenes}\n            scenesOrder={state.scenesOrder}\n            selectedEvidenceId={crime.evidenceId}\n            selectedWeaponId={crime.weaponId}\n            history={user.history?.[crime.playerId]}\n          />\n        ))}\n      </ul>\n    </GameOverWrapper>\n  );\n}\n\nexport default PhaseGameOver;\n","import { ConfigProvider } from 'antd';\n// Constants\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport PhaseCrimeSelection from './PhaseCrimeSelection';\nimport PhaseSceneMarking from './PhaseSceneMarking';\nimport PhaseGuessing from './PhaseGuessing';\nimport PhaseReveal from './PhaseReveal';\nimport PhaseGameOver from './PhaseGameOver';\n// Sass\nimport './crimes-hediondos.scss';\n\nfunction getActiveComponent(phase: string) {\n  switch (phase) {\n    case PHASES.DEFAULT.LOBBY:\n      return PhaseLobby;\n    case PHASES.DEFAULT.RULES:\n      return PhaseRules;\n    case PHASES.DEFAULT.SETUP:\n      return PhaseSetup;\n    case PHASES.CRIMES_HEDIONDOS.CRIME_SELECTION:\n      return PhaseCrimeSelection;\n    case PHASES.CRIMES_HEDIONDOS.SCENE_MARKING:\n      return PhaseSceneMarking;\n    case PHASES.CRIMES_HEDIONDOS.GUESSING:\n      return PhaseGuessing;\n    case PHASES.CRIMES_HEDIONDOS.REVEAL:\n      return PhaseReveal;\n    case PHASES.DEFAULT.GAME_OVER:\n      return PhaseGameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionCrimesHediondos({ gameId }: SessionProps) {\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorPrimary: THEME_COLORS.BLOOD,\n        },\n      }}\n    >\n      <Session\n        gameId={gameId}\n        gameCollection={GAME_COLLECTION.CRIMES_HEDIONDOS}\n        getActiveComponent={getActiveComponent}\n        backgroundClassName=\"h-background\"\n      />\n    </ConfigProvider>\n  );\n}\n\nexport default SessionCrimesHediondos;\n","export function CrimeSceneIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fd445f\"\n        d=\"M471.367 338.833c9.15 0 16.567 7.417 16.567 16.567s-7.417 16.567-16.567 16.567H380.25c-9.15 0-16.567 7.417-16.567 16.567s7.417 16.567 16.567 16.567h24.85c9.15 0 16.567 7.417 16.567 16.567s-7.417 16.567-16.567 16.567H272.567c-9.15 0-16.567 7.417-16.567 16.567s7.417 16.567 16.567 16.567h16.567c9.15 0 16.567 7.417 16.567 16.567s-7.417 16.567-16.567 16.567H123.467c-9.15 0-16.567-7.417-16.567-16.567 0-9.149 7.417-16.567 16.567-16.567h66.267c9.15 0 16.567-7.417 16.567-16.567 0-9.149-7.417-16.567-16.567-16.567h-66.267c-9.15 0-16.567-7.417-16.567-16.567s7.417-16.567 16.567-16.567h16.567c9.15 0 16.567-7.417 16.567-16.567s-7.417-16.567-16.567-16.567h-49.7c-9.149 0-16.567-7.417-16.567-16.567s7.417-16.567 16.567-16.567z\"\n      ></path>\n      <path fill=\"#ff8c59\" d=\"M313.667 222.867h63.095c5.045 0 8.918-4.471 8.199-9.465L356.422 15.363z\"></path>\n      <path\n        fill=\"#ffc649\"\n        d=\"M348.148 7.5H166.061a8.283 8.283 0 00-8.211 7.189l-29.674 222.555c-1.324 9.931 6.402 18.756 16.421 18.756H309.97c8.303 0 15.324-6.147 16.421-14.377l1.501-11.256-1.06-7.533 3.06-7.466 26.465-198.489c.664-4.967-3.199-9.379-8.209-9.379z\"\n      ></path>\n      <path\n        fill=\"#ffa742\"\n        d=\"M348.148 7.5h-23c5.01 0 8.873 4.412 8.211 9.378l-29.966 224.745c-1.097 8.23-8.118 14.377-16.421 14.377h23c8.303 0 15.324-6.147 16.421-14.377l1.501-11.256-1.06-7.533 3.06-7.466 26.465-198.489c.662-4.967-3.201-9.379-8.211-9.379z\"\n      ></path>\n      <path\n        fill=\"#f6f6f6\"\n        d=\"M225.076 40.633c-9.415 0-16.996 7.854-16.548 17.368.42 8.91 8.095 15.766 17.016 15.766h7.816a8.282 8.282 0 018.283 8.283v74.082c0 8.92 6.855 16.596 15.766 17.016 9.514.448 17.368-7.133 17.368-16.548V57.2c0-9.15-7.417-16.567-16.567-16.567z\"\n      ></path>\n      <path\n        fill=\"#e2dff4\"\n        d=\"M258.209 40.633h-23c9.15 0 16.567 7.417 16.567 16.567v99.4c0 4.638-1.912 8.826-4.984 11.833 2.773 2.737 6.466 4.519 10.616 4.715 9.514.448 17.368-7.133 17.368-16.548V57.2c0-9.15-7.418-16.567-16.567-16.567z\"\n      ></path>\n      <path\n        fill=\"#fd445f\"\n        d=\"M57.2 405.1H40.633c-9.149 0-16.567 7.417-16.567 16.567s7.417 16.567 16.567 16.567H57.2c9.15 0 16.567-7.417 16.567-16.567S66.35 405.1 57.2 405.1zm314.767 66.267H355.4c-9.15 0-16.567 7.417-16.567 16.567s7.417 16.567 16.567 16.567h16.567c9.15 0 16.567-7.417 16.567-16.567-.001-9.15-7.418-16.567-16.567-16.567z\"\n      ></path>\n      <path fill=\"#bebcdd\" d=\"M266.933 363.683v-66.267h44.4v66.267z\"></path>\n      <path\n        fill=\"#e2dff4\"\n        d=\"M338.833 297.133v66.833a8 8 0 01-8 8H313.7a8 8 0 01-8-8v-66.833a8 8 0 018-8h17.133a8 8 0 018 8zm-66.266 0v66.833a8 8 0 01-8 8h-51.4c-22.091 0-40-17.909-40-40v-2.833c0-22.091 17.909-40 40-40h51.4a8 8 0 018 8z\"\n      ></path>\n      <path\n        fill=\"#bebcdd\"\n        d=\"M330.833 289.133H313.7a7.962 7.962 0 00-2.933.563c2.965 1.171 5.067 4.056 5.067 7.437v66.833a7.996 7.996 0 01-5.067 7.437 7.966 7.966 0 002.933.563h17.133a8 8 0 008-8v-66.833a8 8 0 00-8-8z\"\n      ></path>\n      <path\n        fill=\"#e30f5a\"\n        d=\"M380.25 371.967h-23c-9.15 0-16.567 7.417-16.567 16.567s7.417 16.567 16.567 16.567h23c-9.15 0-16.567-7.417-16.567-16.567s7.417-16.567 16.567-16.567zm-91.117 99.4h-16.567c-9.15 0-16.567-7.417-16.567-16.567 0-9.149 7.417-16.567 16.567-16.567h-23c-9.149 0-16.567 7.417-16.567 16.567s7.417 16.567 16.567 16.567h16.567c9.15 0 16.567 7.417 16.567 16.567s-7.417 16.567-16.567 16.567h23c9.15 0 16.567-7.417 16.567-16.567s-7.417-16.567-16.567-16.567zm182.234-132.534h-23c9.149 0 16.567 7.417 16.567 16.567s-7.417 16.567-16.567 16.567h23c9.149 0 16.567-7.417 16.567-16.567-.001-9.15-7.418-16.567-16.567-16.567zM405.1 405.1h-23c9.15 0 16.567 7.417 16.567 16.567s-7.417 16.567-16.567 16.567h23c9.15 0 16.567-7.417 16.567-16.567S414.25 405.1 405.1 405.1z\"\n      ></path>\n      <g fill=\"#e30f5a\">\n        <path d=\"M371.967 471.367H355.4c-1.25 0-2.463.15-3.633.412 7.4 1.658 12.933 8.255 12.933 16.154 0 7.9-5.534 14.496-12.933 16.154a16.6 16.6 0 003.633.412h16.567c9.15 0 16.567-7.417 16.567-16.567-.001-9.148-7.418-16.565-16.567-16.565zM57.2 405.1H40.633a16.64 16.64 0 00-3.217.318c7.609 1.498 13.35 8.2 13.35 16.249 0 8.048-5.741 14.751-13.35 16.249 1.041.205 2.115.318 3.217.318H57.2c9.15 0 16.567-7.417 16.567-16.567S66.35 405.1 57.2 405.1z\"></path>\n      </g>\n      <g>\n        <path d=\"M471.367 331.333H346.333v-34.2c0-8.547-6.953-15.5-15.5-15.5H313.7c-5.941 0-11.105 3.364-13.706 8.283h-21.721c-2.601-4.919-7.765-8.283-13.706-8.283h-51.399c-26.191 0-47.5 21.309-47.5 47.5v2.2h-22.639c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h24.865c6.104 19.19 24.089 33.133 45.274 33.133h51.399c5.941 0 11.106-3.364 13.706-8.284h21.721c2.601 4.92 7.765 8.284 13.706 8.284h17.133c8.547 0 15.5-6.953 15.5-15.5v-17.633h125.034c4.999 0 9.066 4.067 9.066 9.066 0 5-4.067 9.067-9.066 9.067H380.25c-13.271 0-24.066 10.796-24.066 24.066S366.979 412.6 380.25 412.6h24.85c5 0 9.067 4.067 9.067 9.066s-4.067 9.067-9.067 9.067H272.566c-13.271 0-24.066 10.796-24.066 24.066 0 13.271 10.796 24.067 24.066 24.067h16.566c5 0 9.067 4.067 9.067 9.066s-4.067 9.067-9.067 9.067H123.467c-4.999 0-9.066-4.067-9.066-9.067 0-4.999 4.067-9.066 9.066-9.066h66.267c13.271 0 24.066-10.796 24.066-24.067 0-13.27-10.796-24.066-24.066-24.066h-66.267c-4.999 0-9.066-4.067-9.066-9.067 0-4.999 4.067-9.066 9.066-9.066h16.566c13.27 0 24.066-10.796 24.066-24.067s-10.796-24.066-24.066-24.066h-49.7c-4.999 0-9.066-4.067-9.066-9.067 0-4.999 4.067-9.066 9.066-9.066h22.694c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5H90.333c-13.271 0-24.066 10.796-24.066 24.066s10.796 24.067 24.066 24.067h49.7c4.999 0 9.066 4.067 9.066 9.066 0 5-4.067 9.067-9.066 9.067h-16.566c-13.271 0-24.066 10.796-24.066 24.066 0 13.271 10.796 24.067 24.066 24.067h66.267c4.999 0 9.066 4.067 9.066 9.066s-4.067 9.067-9.066 9.067h-66.267c-13.271 0-24.066 10.796-24.066 24.066 0 13.271 10.796 24.067 24.066 24.067h165.666c13.27 0 24.067-10.796 24.067-24.067 0-13.27-10.797-24.066-24.067-24.066h-16.566c-4.999 0-9.066-4.067-9.066-9.067 0-4.999 4.067-9.066 9.066-9.066H405.1c13.27 0 24.067-10.796 24.067-24.067 0-13.27-10.797-24.066-24.067-24.066h-24.85c-4.999 0-9.066-4.067-9.066-9.067 0-4.999 4.067-9.066 9.066-9.066h91.117c13.271 0 24.066-10.796 24.066-24.067s-10.795-24.067-24.066-24.067zm-290.7.634v-2.833c0-17.92 14.579-32.5 32.5-32.5h2.2v67.833h-2.2c-17.921 0-32.5-14.58-32.5-32.5zm84.399 32a.5.5 0 01-.5.5h-34.199v-67.833h34.199a.5.5 0 01.5.5v66.55zm15-59.05H298.2v51.267h-18.134zm51.267 59.05a.5.5 0 01-.5.5H313.7a.5.5 0 01-.5-.5v-66.834a.5.5 0 01.5-.5h17.133a.5.5 0 01.5.5zM257.056 180.64c.393.019.783.028 1.173.028 6.216 0 12.069-2.338 16.592-6.652a24.184 24.184 0 007.455-17.415V57.2c0-13.271-10.796-24.067-24.066-24.067h-33.134a24.176 24.176 0 00-17.414 7.455c-4.585 4.806-6.938 11.115-6.625 17.766.605 12.848 11.37 22.913 24.507 22.913h7.816c.432 0 .783.352.783.783v74.082c0 13.138 10.064 23.902 22.913 24.508zM233.359 66.267h-7.816c-5.027 0-9.3-3.866-9.523-8.618a9.011 9.011 0 012.494-6.706 8.99 8.99 0 016.561-2.81h33.134c4.999 0 9.066 4.067 9.066 9.067v99.4a8.99 8.99 0 01-2.81 6.562 9.02 9.02 0 01-6.704 2.494c-4.753-.224-8.619-4.497-8.619-9.524V82.05c.001-8.703-7.08-15.783-15.783-15.783z\"></path>\n        <path d=\"M144.598 263.5h165.373c12.013 0 22.269-8.979 23.856-20.886l1.633-12.247h41.302c4.581 0 8.93-1.986 11.929-5.449a15.77 15.77 0 003.693-12.586L363.879 14.528A15.78 15.78 0 00348.147 0H223.509c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h124.639c.236 0 .435.09.59.268a.75.75 0 01.186.619l-26.597 199.48h-31.768v-.783c0-4.142-3.357-7.5-7.5-7.5s-7.5 3.358-7.5 7.5v.783h-42.983v-.783c0-4.142-3.357-7.5-7.5-7.5s-7.5 3.358-7.5 7.5v.783h-42.983v-.783c0-4.142-3.357-7.5-7.5-7.5s-7.5 3.358-7.5 7.5v.783H138.66L165.285 15.68a.785.785 0 01.776-.68h27.447c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5h-27.447c-7.878 0-14.604 5.889-15.645 13.697l-29.674 222.555a24.071 24.071 0 005.748 19.035 24.07 24.07 0 0018.108 8.213zM356.783 70.444l20.754 144.026a.75.75 0 01-.184.626.75.75 0 01-.592.27H337.46zm-36.456 159.923l-1.369 10.265c-.598 4.486-4.462 7.869-8.987 7.869H144.598a8.947 8.947 0 01-6.821-3.094 8.946 8.946 0 01-2.165-7.171l1.049-7.868h183.666zM57.2 397.6H40.633c-13.271 0-24.066 10.796-24.066 24.066 0 13.271 10.796 24.067 24.066 24.067H57.2c13.271 0 24.066-10.796 24.066-24.067.001-13.269-10.795-24.066-24.066-24.066zm0 33.133H40.633c-4.999 0-9.066-4.067-9.066-9.067 0-4.999 4.067-9.066 9.066-9.066H57.2c4.999 0 9.066 4.067 9.066 9.066.001 5-4.067 9.067-9.066 9.067zm314.767 33.134H355.4c-13.27 0-24.067 10.796-24.067 24.066 0 13.271 10.797 24.067 24.067 24.067h16.566c13.271 0 24.066-10.796 24.066-24.067.001-13.27-10.795-24.066-24.065-24.066zm0 33.133H355.4c-5 0-9.067-4.067-9.067-9.067 0-4.999 4.067-9.066 9.067-9.066h16.566c4.999 0 9.066 4.067 9.066 9.066.001 5-4.066 9.067-9.065 9.067z\"></path>\n      </g>\n    </svg>\n  );\n}\n","export function LoupeIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffd88e\"\n        d=\"M19.45 492.55a32.26 32.26 0 0045.63 0l126.36-126.36-45.63-45.63L19.45 446.92a32.26 32.26 0 000 45.63z\"\n      ></path>\n      <path\n        fill=\"#fff\"\n        d=\"M169.13 259.72l-23.82 23.83a25.8 25.8 0 000 36.5l46.64 46.64a25.8 25.8 0 0036.5 0l23.83-23.82z\"\n      ></path>\n      <circle cx=\"327.65\" cy=\"184.35\" r=\"174.35\" fill=\"#a0c8ff\"></circle>\n      <circle cx=\"327.65\" cy=\"184.35\" r=\"122\" fill=\"#dfecff\"></circle>\n      <path d=\"M327.65 52.35c-72.78 0-132 59.21-132 132s59.22 132 132 132 132-59.22 132-132c0-72.79-59.21-132-132-132zm0 20c61.76 0 112 50.24 112 112s-50.24 112-112 112-112-50.24-112-112 50.25-112 112-112z\"></path>\n      <path d=\"M388.6 123.4a10 10 0 01-14.15 14.14c-12.5-12.5-29.12-19.38-46.8-19.38s-34.3 6.88-46.8 19.38a9.97 9.97 0 01-14.14 0 10 10 0 010-14.14 85.62 85.62 0 0160.94-25.24 85.63 85.63 0 0160.95 25.24z\"></path>\n      <path d=\"M0 469.74c0 11.29 4.4 21.9 12.38 29.88S30.98 512 42.26 512s21.9-4.4 29.89-12.38L192.3 379.46a35.83 35.83 0 0043.21-5.7l19.84-19.84a183.32 183.32 0 0072.3 14.78C429.3 368.7 512 286 512 184.35c0-83.63-56.4-156.94-137.18-178.26a10 10 0 00-5.1 19.34c72 19 122.28 84.36 122.28 158.92 0 90.62-73.73 164.35-164.35 164.35S163.3 274.97 163.3 184.35c0-74.56 50.28-139.91 122.28-158.92a10 10 0 00-5.1-19.33C199.7 27.42 143.3 100.72 143.3 184.35c0 25.64 5.27 50.08 14.78 72.29l-19.85 19.84a35.87 35.87 0 00-5.7 43.21L12.39 439.85A41.99 41.99 0 000 469.74zm199.02-110.12l-46.64-46.64a15.83 15.83 0 010-22.36l15.1-15.1c16.4 28.7 40.3 52.6 69 69l-15.1 15.1a15.83 15.83 0 01-22.36 0zM20 469.74c0-5.95 2.32-11.54 6.52-15.74l119.3-119.3 31.48 31.49L58 485.48c-4.2 4.2-9.8 6.52-15.74 6.52a22.11 22.11 0 01-15.74-6.52c-4.2-4.2-6.52-9.8-6.52-15.74z\"></path>\n      <path d=\"M327.65 20c-2.63 0-5.21-1.07-7.07-2.93-1.86-1.86-2.93-4.44-2.93-7.07s1.07-5.21 2.93-7.07S325.02 0 327.65 0s5.21 1.07 7.07 2.93 2.93 4.44 2.93 7.07-1.07 5.21-2.93 7.07-4.44 2.93-7.07 2.93z\"></path>\n    </svg>\n  );\n}\n"],"names":["GainedPoint","gainedPoint","order","description","isPositive","isNegative","className","clsx","title","pt","en","color","GainedPoints","gainedPoints","playerId","gainedPointsDescriptions","points","Array","isArray","map","index","RankingBoard","players","ranking","hideGainedPoints","delay","useState","displayStep","setDisplayStep","sortedRanking","setSortedRanking","reRank","setReRank","useDimensions","height","maxPoints","useMemo","Math","max","scores","newScore","seconds","useCountdown","duration","autoStart","onExpire","useEffectOnce","positions","lastPosition","lastPoints","rankByFinalScoreDict","orderBy","reduce","acc","entry","rankByPreviousScore","tempSortedRanking","newEntry","position","previousScore","useEffect","style","length","hPosition","id","top","CrownFilled","avatarId","name","undefined","StepRankingWrapper","children","subtitle","useTemporarilyHidePlayersBar","CaretUpOutlined","RoundAnnouncement","round","onPressButton","buttonText","time","unskippable","circleColor","translate","useLanguage","circleStyle","borderColor","src","roundTitlePt","roundTitleEn","alt","getAnimationClass","current","Boolean","type","onClick","disabled","custom","mockGuesses","groupedItems","user","Object","values","player","historyForThisTarget","history","lastGuess","getLastItem","status","weaponId","evidenceId","group","groupIndex","weapons","filter","e","includes","evidences","previousPicksDict","SEPARATOR","pair","getRandomItem","split","previouslyWrongGroups","t","guess","push","availableGroups","i","randomGroup","WelcomeMessage","contained","GuessMessage","ScoringMessage","total","ItemCard","item","cardWidth","activeColor","preview","isSelected","language","isDebugEnabled","useDevFeatures","backgroundColor","content","toUpperCase","maxWidth","imageId","ContinueButton","props","size","StepItemsSelection","announcement","items","selections","updateSelections","setWeaponId","setEvidenceId","useCardWidth","userItems","itemGroupIndex","itemId","align","randomWeaponId","randomEvidenceId","shuffle","forEach","SceneTile","tile","onSelectValue","isActive","icon","CheckCircleFilled","tileId","value","SelectedItems","fadeWeapon","fadeEvidence","PlusSquareFilled","ResetButton","goToStep","StepCauseOfDeathSelection","causeOfDeathTile","causeOfDeathIndex","setCauseOfDeathIndex","payload","causeOfDeath","StepLocationSelection","locationTiles","location","setLocation","onSelectItem","locationTile","locationIndex","StepReviewCrime","reasonForEvidenceTile","onSubmitCrime","updateSelection","find","reasonForEvidence","CloudUploadOutlined","readyText","readyTextPlural","StepReasonForEvidence","reasonForEvidenceIndex","setReasonForEvidenceIndex","state","info","useStep","step","setStep","goToNextStep","useUser","setSelections","onSubmitCrimeRequest","request","useAPICall","apiFunction","CRIMES_HEDIONDOS_API","actionName","onBeforeCall","onError","successMessage","errorMessage","action","useOnSubmitCrimeAPIRequest","prevState","announcementItems","EventIcon","currentRound","announcementCause","SkullIcon","announcementEvidence","CrimeSceneIcon","announcementLocation","LocationIcon","announcementReview","CrimeTapeIcon","C","phase","allowedPhase","PHASES","conditions","isReady","appearance","hand","keys","dev","itemsGroup","shuffledItems","options","mockCrime","ItemCardEmpty","cardType","CrimeGuessStatus","withDescription","baseClass","LockFilled","MinusCircleFilled","CloseCircleFilled","WarningFilled","QuestionCircleFilled","CARD_WIDTH","Crime","crime","scenesOrder","scenes","selectedWeaponId","selectedEvidenceId","isLocked","historyEntryIndex","setHistoryEntryIndex","isComplete","activeWeaponId","evidenceWeaponId","getAvatarColorById","hasHistory","sceneId","scene","CrimeScene","playerIndex","ClockCircleFilled","_","ghost","shape","onMouseOver","onMouseLeave","SafetyOutlined","GiftOutlined","EnvironmentOutlined","ExceptionOutlined","GroupedItemsBoard","StepNewScene","onSubmitMark","sceneTile","crimes","sceneMarkIndex","setSceneMarkIndex","header","sceneIndex","useOnSubmitMarkAPIRequest","useMock","ready","LoupeIcon","onClose","currentScene","getHistory","playerHistory","activePlayerId","PlayersCards","setActivePlayerId","guesses","sortPlayers","lastGuessHistory","isHistoryLocked","active","withName","replacementAvatar","LockIcon","KnifeIcon","SelectableGroupedItemsBoard","wrongGroups","isGroupWrong","StepGuessing","onSubmitGuesses","setGuesses","g","entries","key","historyEntryArray","historyEntry","autoSelectCorrectGuesses","playerCount","isAllComplete","every","activeCrime","isOwnCrime","activePlayerGuesses","getActiveStuff","activeEvidenceId","guessObj","s","InvestigationIcon","useOnSubmitGuessesAPIRequest","GuessIcon","ResultsTable","results","columns","dataIndex","render","addressUser","ResultsTableCell","data","result","dataSource","pagination","bordered","BoxCheckMarkIcon","BoxOneIcon","BoxMinusIcon","BoxXIcon","StepReveal","onSeeRanking","isFirstRunThrough","latestHistoryEntry","correctCrimes","score","secretScore","min","TrophyOutlined","StepRanking","goToPreviousStep","roundPoints","setIsFirstRunThrough","RankIcon","announcementIcon","TrophyIcon","getActiveComponent","PhaseLobby","PhaseRules","PhaseSetup","PhaseCrimeSelection","PhaseSceneMarking","PhaseGuessing","PhaseReveal","PhaseGameOver","PageError","gameId","theme","token","colorPrimary","THEME_COLORS","gameCollection","GAME_COLLECTION","backgroundClassName","xmlns","viewBox","fill","d","cx","cy","r"],"sourceRoot":""}