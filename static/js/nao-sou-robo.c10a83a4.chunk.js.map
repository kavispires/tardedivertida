{"version":3,"file":"static/js/nao-sou-robo.c10a83a4.chunk.js","mappings":"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","sources":["components/cards/EmojiCard.tsx","components/cards/GlyphCard.tsx","components/cards/Card.tsx","components/general/Achievements.tsx","components/general/Container.tsx","components/general/StatusBar.tsx","components/metrics/PointsHighlight.tsx","components/players/ListOfPlayers.tsx","components/ranking/RankingBoard.tsx","components/ranking/StepRankingWrapper.tsx","assets/images/round-title-en.svg","assets/images/round-title-pt.svg","components/round/RoundAnnouncement.tsx","components/sprites/Sprite.tsx","components/text/SpeechBubble.tsx","games/adedanhx/StepRanking.tsx","games/nao-sou-robo/utils/constants.ts","games/nao-sou-robo/utils/mock.ts","games/nao-sou-robo/components/CaptchaTopic.tsx","games/nao-sou-robo/components/Highlights.tsx","games/nao-sou-robo/components/FloatingPlayerStats.tsx","games/nao-sou-robo/components/Summary.tsx","games/nao-sou-robo/StepSelectCard.tsx","games/nao-sou-robo/PhaseCardSelection.tsx","games/nao-sou-robo/utils/api-requests.ts","games/nao-sou-robo/StepSelectAll.tsx","games/nao-sou-robo/PhaseAreYouARobot.tsx","games/nao-sou-robo/components/RobotResult.tsx","games/nao-sou-robo/StepResults.tsx","games/nao-sou-robo/PhaseResults.tsx","games/nao-sou-robo/components/FinalOutcome.tsx","games/nao-sou-robo/PhaseGameOver.tsx","games/nao-sou-robo/SessionNaoSouRobo.tsx","games/nao-sou-robo/utils/achievements.ts","hooks/useBooleanDictionary.ts","icons/CaptchaIcon.tsx","icons/EnergyIcon.tsx","icons/EventIcon.tsx","icons/NuclearExplosionIcon.tsx","icons/RobotIcon.tsx","icons/SealOfApprovalIcon.tsx","icons/StarIcon.tsx","icons/ThiefIcon.tsx","icons/TrophyIcon.tsx","icons/UnderConstructionIcon.tsx","icons/UserStatsIcon.tsx"],"sourcesContent":["import clsx from 'clsx';\n// Components\nimport { Sprite } from 'components/sprites';\n// Sass\nimport './EmojiCard.scss';\n\ntype EmojiCardProps = {\n  /**\n   * The id of the emoji\n   */\n  id: string;\n  /**\n   * The width of the emoji\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\n/**\n * An emoji card component.\n */\nexport function EmojiCard({ id, width, className }: EmojiCardProps): JSX.Element {\n  const emojiId = id.startsWith('emoji') ? id : `emoji-${id}`;\n\n  return (\n    <div className={clsx('emoji-card', className)} style={{ width: `${width}px`, height: `${width}px` }}>\n      <Sprite source=\"emojis\" id={emojiId} width={width} />\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Components\nimport { Sprite } from 'components/sprites';\n// Sass\nimport './GlyphCard.scss';\n\ntype GlyphCardProps = {\n  /**\n   * The id of the glyph\n   */\n  id: number | string;\n  /**\n   * The width of the glyph\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\nconst BASE = 128;\n\n/**\n * Retrieves the source and glyph ID based on a given string.\n *\n * @param str - The input string.\n * @returns An array containing the source and glyph ID.\n */\nconst getSource = (numId: number) => {\n  const glyphId = `glyph-${numId}`;\n  const sourceId = Math.ceil(numId / BASE) * BASE;\n  const source = `glyphs-${sourceId}`;\n  return [source, glyphId];\n};\n\n/**\n * A glyph card component.\n */\nexport function GlyphCard({ id, width, className }: GlyphCardProps) {\n  const [source, glyphId] = getSource(+id);\n\n  return (\n    <div className={clsx('glyph-card', className)} style={{ width: `${width}px`, height: `${width}px` }}>\n      <Sprite source={source} id={glyphId} width={width ? width - 12 : undefined} padding={0} />\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Utils\nimport { getColorFromLetter } from 'utils/helpers';\n// Sass\nimport './Card.scss';\n\ntype CardProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  header?: string;\n  footer?: string;\n  color?: string;\n  size?: 'small' | 'medium' | 'large';\n  randomColor?: boolean;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  headerClassName?: string;\n  footerClassName?: string;\n  hideHeader?: boolean;\n};\nexport const Card = ({\n  children,\n  header = 'Carta',\n  footer,\n  color = 'none',\n  size = 'medium',\n  randomColor = false,\n  className = '',\n  headerClassName = '',\n  footerClassName = '',\n  hideHeader = false,\n}: CardProps) => {\n  const baseClass = 'card';\n\n  const bgColor = randomColor\n    ? getColorFromLetter(\n        typeof children === 'string'\n          ? children[0].toUpperCase()\n          : header !== 'Carta'\n          ? header[0].toUpperCase()\n          : 'X'\n      )\n    : color;\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, className)}>\n      {!hideHeader && (\n        <span\n          className={clsx(`${baseClass}__header`, `color-background--${bgColor}`, headerClassName)}\n          style={color.startsWith('#') ? { backgroundColor: color } : {}}\n        >\n          {header}\n        </span>\n      )}\n      <span className={`${baseClass}__text`}>{children}</span>\n      {footer && <span className={clsx(`${baseClass}__footer`, footerClassName)}>{footer}</span>}\n    </div>\n  );\n};\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport { Button, Popover } from 'antd';\n// Types\nimport type { Achievement, AchievementReference } from 'types/achievements';\nimport type { GamePlayers } from 'types/player';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { DualTranslate, Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\n// Internal\nimport { Medal } from './Medal';\n\ntype AchievementsProps = {\n  /**\n   * Players of the game\n   */\n  players: GamePlayers;\n  /**\n   * Achievements to be displayed\n   */\n  achievements: Achievement[];\n  /**\n   * Reference for the achievements\n   */\n  reference: AchievementReference;\n  /**\n   * Color scheme for the component\n   */\n  colorScheme?: ColorScheme;\n};\n\nconst unknownText = { pt: 'Desconhecido', en: 'Unknown' };\n\nexport function Achievements({ players, achievements, reference, colorScheme }: AchievementsProps) {\n  return (\n    <div className={clsx('achievements', getAnimationClass('fadeIn'))}>\n      <Title size=\"small\" level={3} colorScheme={colorScheme}>\n        <Translate pt=\"Medalhas\" en=\"Achievements\" />\n      </Title>\n      {achievements.length === 0 && (\n        <Instruction contained>\n          <Translate\n            pt={\n              <>\n                Nenhuma medalha foi conquistada nesse jogo.\n                <br />\n                Para ganhar uma medalha, apenas uma jogador pode atender a condição.\n              </>\n            }\n            en={\n              <>\n                No achievements were achieved in this game.\n                <br />\n                To win a medal, only one player can meet the condition.\n              </>\n            }\n          />\n        </Instruction>\n      )}\n\n      <ul className=\"achievements-list\">\n        {achievements.map((achievement, index) => {\n          const { icon = 'star', ...achievementObj } = reference[achievement.type] ?? {};\n          const player = players[achievement.playerId];\n          return (\n            <li\n              key={`achievement-${achievement.type}`}\n              className={clsx(\n                'achievements-entry',\n                getAnimationClass('flipInY', {\n                  delay: index < achievements.length / 2 ? index : achievements.length - 1 - index,\n                })\n              )}\n            >\n              <div className=\"achievement__medal\">\n                <Medal id={icon} />\n              </div>\n              <h4 className=\"achievement__title\">\n                <DualTranslate>{achievementObj.title ?? unknownText}</DualTranslate>\n              </h4>\n              <div className=\"achievement__avatar\">\n                <Avatar id={player.avatarId} />\n              </div>\n              <div className=\"achievement__name\">{player.name}</div>\n              {Boolean(achievementObj.description) && (\n                <div className=\"achievement__description\">\n                  <Popover\n                    content={\n                      <>\n                        <DualTranslate>{achievementObj.description ?? unknownText}</DualTranslate> (\n                        {achievement.value})\n                      </>\n                    }\n                  >\n                    <Button icon={<QuestionCircleOutlined />} shape=\"circle\" type=\"text\" size=\"small\" />\n                  </Popover>\n                </div>\n              )}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Space, SpaceProps } from 'antd';\n// Components\nimport { Title, TitleProps } from 'components/text';\n// Sass\nimport './Container.scss';\n\ntype ContainerProps = {\n  title: ReactNode;\n  children: ReactNode;\n  contained?: boolean;\n  className?: string;\n  titleProps?: Omit<TitleProps, 'children'>;\n  contentProps?: SpaceProps;\n} & Omit<SpaceProps, 'title' | 'children'>;\n\n/**\n * Container component with title and center aligned children\n */\nexport function Container({\n  title,\n  children,\n  className,\n  contained,\n  titleProps,\n  contentProps,\n  ...spaceProps\n}: ContainerProps) {\n  const { level = 4, size = 'xx-small', ...restTitleProps } = titleProps ?? {};\n\n  const {\n    className: childrenClassName,\n    wrap = true,\n    direction: childrenDirection = 'horizontal',\n    ...restChildrenContainerProps\n  } = contentProps ?? {};\n\n  return (\n    <Space direction=\"vertical\" className={clsx('container-wrapper', className)} {...spaceProps}>\n      <Title level={level} size={size} {...restTitleProps}>\n        {title}\n      </Title>\n\n      <Space\n        direction={childrenDirection}\n        wrap={wrap}\n        className={clsx(\n          'container-wrapper__children',\n          contained && 'container-wrapper__children--contained',\n          childrenClassName\n        )}\n        {...restChildrenContainerProps}\n      >\n        {children}\n      </Space>\n    </Space>\n  );\n}\n","import { Fragment, ReactNode } from 'react';\nimport { Divider, Tooltip } from 'antd';\n\nimport './StatusBar.scss';\n\nexport type StatusEntry = {\n  key: string;\n  title: ReactNode;\n  value: ReactNode;\n};\n\ntype StatusBarProps = {\n  entries: StatusEntry[];\n  title?: ReactNode;\n};\n\nexport function StatusBar({ entries, title }: StatusBarProps) {\n  return (\n    <div className=\"status-bar\">\n      {title && <h3 className=\"status-bar__title\">{title}</h3>}\n      {entries.map((entry, index, arr) => (\n        <Fragment key={entry.key}>\n          <Tooltip title={entry.title}>\n            <div>{entry.value}</div>\n          </Tooltip>\n          {index < arr.length - 1 && <Divider type=\"vertical\" />}\n        </Fragment>\n      ))}\n    </div>\n  );\n}\n","// Icons\nimport { StarIcon } from 'icons/StarIcon';\n// Components\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function PointsHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<StarIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import { Fragment } from 'react';\n// Types\nimport type { GamePlayers } from 'types/player';\n// Components\nimport { AvatarName } from 'components/avatars';\nimport { Translate } from 'components/language';\n\ntype ListOfPlayersProps = {\n  /**\n   * The players\n   */\n  players: GamePlayers;\n  /**\n   * The ordered subset of players to be listed\n   */\n  list: PlayerId[];\n  /**\n   * The key prefix\n   */\n  prefix: string;\n  /**\n   * Flag indicating if only the names should be listed\n   */\n  namesOnly?: boolean;\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\n/**\n * Renders player names from a list of playerIds\n * @param props\n * @returns\n */\nexport function ListOfPlayers({ players, list, namesOnly, prefix, className }: ListOfPlayersProps) {\n  if (namesOnly) {\n    return <span className={className}>{list.map((playerId) => players[playerId].name).join(',')}</span>;\n  }\n\n  return (\n    <span className={className}>\n      {list.map((playerId, index) => (\n        <Fragment key={`${prefix}-${playerId}`}>\n          <AvatarName player={players[playerId]} />\n          {index < list.length - 2 && ','}\n          {index === list.length - 2 && <Translate pt=\"e\" en=\"and\" />}\n        </Fragment>\n      ))}\n    </span>\n  );\n}\n","import clsx from 'clsx';\nimport { orderBy } from 'lodash';\nimport { LegacyRef, ReactNode, useEffect, useMemo, useState } from 'react';\nimport { useEffectOnce, useMeasure } from 'react-use';\n// Ant Design Resources\nimport { CrownFilled } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\n// Types\nimport type { GameRanking } from 'types/game';\nimport type { GamePlayers } from 'types/player';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\n\ntype GainedPointProps = {\n  gainedPoint: number;\n  order: number;\n  description?: any;\n};\n\nfunction GainedPoint({ gainedPoint, order, description }: GainedPointProps): JSX.Element {\n  const isPositive = gainedPoint > 0;\n  const isNegative = gainedPoint < 0;\n  return (\n    <li\n      className={clsx(\n        'ranking-board__gained-point',\n        isPositive && 'ranking-board__gained-point--plus',\n        isNegative && 'ranking-board__gained-point--minus',\n        `ranking-board__gained-point--${order}`\n      )}\n    >\n      <Tooltip\n        title={description ?? <Translate pt=\"Pontos ganhos\" en=\"Gained Points\" />}\n        color={isPositive ? 'gold' : isNegative ? 'red' : 'gray'}\n      >\n        {isPositive ? '+' : ''}\n        {gainedPoint}\n      </Tooltip>\n    </li>\n  );\n}\n\ntype GainedPointsProps = {\n  gainedPoints: number[] | number;\n  playerId: PlayerId;\n  gainedPointsDescriptions?: any[];\n};\n\nfunction GainedPoints({\n  gainedPoints,\n  playerId,\n  gainedPointsDescriptions = [],\n}: GainedPointsProps): JSX.Element {\n  const points = Array.isArray(gainedPoints) ? gainedPoints : [gainedPoints];\n  return (\n    <ul className=\"ranking-board__cell-gained-points\">\n      {points.map((gainedPoint, index) => (\n        <GainedPoint\n          key={`gained-point-${playerId}-${index}`}\n          gainedPoint={gainedPoint}\n          order={index}\n          description={gainedPointsDescriptions[index]}\n        />\n      ))}\n    </ul>\n  );\n}\n\ntype RankingBoardProps = {\n  players: GamePlayers;\n  ranking: GameRanking;\n  gainedPointsDescriptions?: ReactNode[];\n  hideGainedPoints?: boolean;\n  delay?: number;\n};\n\nexport function RankingBoard({\n  players,\n  ranking,\n  gainedPointsDescriptions,\n  hideGainedPoints = false,\n  delay = 0,\n}: RankingBoardProps): JSX.Element {\n  const [displayStep, setDisplayStep] = useState(0);\n  const [sortedRanking, setSortedRanking] = useState<GameRanking>([]);\n  const [reRank, setReRank] = useState(0);\n  const [ref, { height }] = useMeasure();\n\n  const maxPoints = useMemo(() => Math.max(...ranking.map((scores) => scores.newScore)), [ranking]);\n\n  const { seconds } = useCountdown({\n    duration: 5 + delay,\n    autoStart: true,\n    onExpire: () => {\n      setReRank(1);\n      setDisplayStep(3);\n    },\n  });\n\n  // Rank by previousScore\n  useEffectOnce(() => {\n    const positions: PlainObject = {};\n    let lastPosition = 0;\n    let lastPoints = 0;\n\n    const rankByFinalScoreDict = orderBy(ranking, ['newScore', 'name'], ['desc', 'asc']).reduce(\n      (acc: PlainObject, entry, index) => {\n        acc[entry.playerId] = index;\n        // Calculate position\n        if (lastPoints === 0 || entry.newScore < lastPoints) {\n          lastPoints = entry.newScore;\n          lastPosition += 1;\n        }\n        positions[entry.playerId] = [0, lastPosition];\n        return acc;\n      },\n      {}\n    );\n\n    const rankByPreviousScore = orderBy(ranking, ['previousScore', 'name'], ['desc', 'asc']);\n\n    // Reset position trackers\n    lastPosition = 0;\n    lastPoints = 0;\n\n    const tempSortedRanking: GameRanking = rankByPreviousScore.map((entry, index) => {\n      const newEntry = { ...entry };\n\n      newEntry.order = [index, rankByFinalScoreDict[newEntry.playerId]];\n      newEntry.position = positions[newEntry.playerId];\n      // Calculate position\n      if (lastPoints === 0 || entry.previousScore < lastPoints) {\n        lastPoints = entry.previousScore;\n        lastPosition += 1;\n      }\n      newEntry.position[0] = lastPosition;\n      return newEntry;\n    });\n\n    setSortedRanking(tempSortedRanking);\n  });\n\n  // Show gained points\n  useEffect(() => {\n    if (seconds === 4 + delay) {\n      setDisplayStep(1);\n    } else if (seconds === 2 + delay) {\n      setDisplayStep(2);\n    }\n  }, [seconds, delay]);\n\n  return (\n    <div\n      className={clsx(\n        'ranking-board',\n        seconds > 4 && 'ranking-board--hidden',\n        seconds === 4 && getAnimationClass('fadeIn')\n      )}\n      style={{ height: `${(Math.max(60, height) + 8) * sortedRanking.length}px` }}\n    >\n      <div\n        className=\"ranking-board__row\"\n        id=\"ranking-row-placeholder\"\n        style={{ opacity: 0 }}\n        ref={ref as LegacyRef<HTMLDivElement>}\n      >\n        <div className=\"ranking-board__cell-crown\">\n          <CrownFilled className=\"ranking-board__crown-icon\" />\n        </div>\n        <div className=\"ranking-board__cell-position\">#0</div>\n        <div className=\"ranking-board__cell-player\">\n          <div className=\"ranking-board__avatar\">\n            <Avatar id=\"A\" />\n          </div>\n          <div className=\"ranking-board__name\">Placeholder</div>\n        </div>\n        <Tooltip title={<Translate pt=\"Pontos Anteriores\" en=\"Previous Points\" />} color=\"gray\">\n          <div className=\"ranking-board__cell-points\">0</div>\n        </Tooltip>\n\n        <GainedPoints gainedPoints={0} playerId=\"A\" />\n\n        <Tooltip title=\"Total\" color=\"gold\">\n          <span className=\"ranking-board__cell-points-total\">0</span>\n        </Tooltip>\n      </div>\n\n      {sortedRanking.map((entry, index) => {\n        const { playerId, newScore, previousScore, gainedPoints, order, position } = entry;\n        const hPosition = (Math.max(60, height) + 8) * (order[reRank] ?? 0);\n\n        return (\n          <div\n            className={`ranking-board__row ranking-board__row--${index}`}\n            key={`ranking-${playerId}`}\n            // id={`ranking-row-${index}`}\n            style={{ top: `${hPosition}px` }}\n          >\n            <div className=\"ranking-board__cell-crown\">\n              {newScore > 0 && maxPoints === newScore && displayStep >= 3 && (\n                <CrownFilled className=\"ranking-board__crown-icon\" />\n              )}\n            </div>\n            <div className=\"ranking-board__cell-position\">#{position[reRank] ?? ''}</div>\n            <div className=\"ranking-board__cell-player\">\n              <div className=\"ranking-board__avatar\">\n                <Avatar id={players[playerId].avatarId} />\n              </div>\n              <div className=\"ranking-board__name\">{players[playerId].name}</div>\n            </div>\n            <Tooltip title={<Translate pt=\"Pontos Anteriores\" en=\"Previous Points\" />} color=\"gray\">\n              <div className=\"ranking-board__cell-points\">{previousScore}</div>\n            </Tooltip>\n            {!hideGainedPoints && displayStep >= 1 && gainedPoints !== undefined && (\n              <GainedPoints\n                gainedPoints={gainedPoints}\n                playerId={playerId}\n                gainedPointsDescriptions={gainedPointsDescriptions}\n              />\n            )}\n\n            <Tooltip title=\"Total\" color=\"gold\">\n              {displayStep >= 2 ? (\n                <span className=\"ranking-board__cell-points-total\">{newScore}</span>\n              ) : (\n                <span className=\"ranking-board__cell-points-total-preliminary\">{newScore}</span>\n              )}\n            </Tooltip>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { CaretUpOutlined } from '@ant-design/icons';\n// Types\nimport type { GameRanking } from 'types/game';\nimport type { GamePlayers } from 'types/player';\n// Hooks\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Components\nimport { Translate } from 'components/language';\nimport { useGameAppearance } from 'components/session/GameInfoContext';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\n// Internal\nimport { RankingBoard } from './RankingBoard';\n\ntype StepRankingWrapperProps = {\n  /**\n   * The players\n   */\n  players: GamePlayers;\n  /**\n   * The ranking array\n   */\n  ranking: GameRanking;\n  /**\n   * Gained points descriptions for the popover\n   */\n  gainedPointsDescriptions: ReactNode[];\n  /**\n   * Additional content\n   */\n  children?: ReactNode;\n  /**\n   * Replacement title for Ranking\n   */\n  title?: ReactNode;\n  /**\n   * Optional node that goes under the title\n   */\n  subtitle?: ReactNode;\n  /**\n   * Whether the title should be white or not\n   */\n  colorScheme?: ColorScheme;\n};\n\nexport function StepRankingWrapper({\n  players,\n  ranking,\n  gainedPointsDescriptions,\n  children,\n  title,\n  subtitle,\n  colorScheme,\n}: StepRankingWrapperProps) {\n  useTemporarilyHidePlayersBar();\n  const appearance = useGameAppearance();\n\n  const scheme = colorScheme ?? appearance.colorScheme ?? 'light';\n\n  return (\n    <Step>\n      <Title colorScheme={scheme}>{title ?? 'Ranking'}</Title>\n\n      {subtitle}\n\n      <RankingBoard players={players} ranking={ranking} gainedPointsDescriptions={gainedPointsDescriptions} />\n      <Instruction className=\"step-ranking-wrapper-gained-points-instruction\" colorScheme={scheme}>\n        <CaretUpOutlined />\n        <Translate\n          pt=\"Passe o mouse em cada um dos pontos para saber como eles foram distribuídos\"\n          en=\"Hover over the scores to learn how they were granted\"\n        />\n        <CaretUpOutlined />\n      </Instruction>\n\n      {children}\n    </Step>\n  );\n}\n","var _style, _g, _g2, _g3, _g4, _g5, _g6, _g7, _g8;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRoundTitleEn(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 130 50\",\n    style: {\n      enableBackground: \"new 0 0 130 50\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:#9EC5E7;}\\n\\t.st1{fill:#FFFFFF;}\\n\\t.st2{fill:#3A7CA5;}\\n\\t.st3{fill:#44BBA4;}\\n\\t.st4{fill:#F2E863;}\\n\\t.st5{fill:#F45B69;}\\n\\t.st6{fill:#E6E6F5;}\\n\\t.st7{display:none;}\\n\\t.st8{display:inline;}\\n\\t.st9{display:inline;fill:none;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st10{fill:#DA70D6;}\\n\\t.st11{fill:#008080;}\\n\\t.st12{fill:#D2691E;}\\n\\t.st13{fill:#4682B4;}\\n\\t.st14{fill:#B22222;}\\n\\t.st15{fill:#DFB231;}\\n\\t.st16{fill:#FF6347;}\\n\\t.st17{fill:#9370DB;}\\n\\t.st18{fill:#3C58AC;}\\n\\t.st19{fill:#7CC44F;}\\n\\t.st20{fill:#040303;}\\n\\t.st21{fill:#FCBF00;}\\n\\t.st22{fill:#D70027;}\\n\\t.st23{fill:#EA384D;}\\n\\t.st24{fill:#BFB8B8;}\\n\\t.st25{fill:#F8EFEF;}\\n\\t.st26{fill:#FE2A25;}\\n\\t.st27{fill:#FE9A00;}\\n\\t.st28{fill:#FEE901;}\\n\\t.st29{fill:#FEF6A5;}\\n\\t.st30{fill:#FEF05C;}\\n\\t.st31{fill:#FEFDFD;}\\n\\t.st32{fill:url(#SVGID_1_);}\\n\\t.st33{fill:#D40000;}\\n\\t.st34{clip-path:url(#SVGID_3_);}\\n\\t.st35{fill:url(#SVGID_4_);}\\n\\t.st36{clip-path:url(#SVGID_6_);}\\n\\t.st37{fill:url(#SVGID_7_);}\\n\\t.st38{fill:#008C72;}\\n\\t.st39{clip-path:url(#SVGID_9_);}\\n\\t.st40{clip-path:url(#SVGID_11_);}\\n\\t.st41{clip-path:url(#SVGID_13_);}\\n\\t.st42{clip-path:url(#SVGID_15_);}\\n\\t.st43{clip-path:url(#SVGID_17_);}\\n\\t.st44{clip-path:url(#SVGID_19_);}\\n\\t.st45{fill:#575757;}\\n\\t.st46{clip-path:url(#SVGID_21_);}\\n\\t.st47{fill:url(#SVGID_22_);}\\n\\t.st48{fill:none;stroke:#FFFFFF;stroke-miterlimit:10;}\\n\\t.st49{display:inline;fill:#5C3400;}\\n\\t.st50{fill:none;}\\n\\t.st51{fill:#5C3400;}\\n\\t.st52{display:inline;fill:none;}\\n\\t.st53{display:inline;fill:#FFFFFF;}\\n\\t.st54{display:none;fill:#FFFFFF;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st55{display:inline;fill:#FFFFFF;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st56{display:none;fill:#F2F25F;}\\n\\t.st57{display:inline;fill:#F2F2F2;}\\n\\t.st58{display:inline;fill:#E6E6E6;}\\n\\t.st59{display:inline;fill:#808080;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st60{fill:#808080;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st61{display:inline;fill:#808080;}\\n\\t.st62{fill:#29E257;}\\n\\t.st63{fill:#E2DC29;}\\n\\t.st64{fill:#29ABE2;}\\n\\t.st65{fill:#E22929;}\\n\\t.st66{fill:#E6E6E6;}\\n\\t.st67{fill:#F2F2F2;}\\n\\t.st68{fill:#F9C303;}\\n\\t.st69{fill:#3A3939;}\\n\\t.st70{fill:#FF0000;}\\n\\t.st71{fill:#FEFEFD;}\\n\\t.st72{fill:#181D44;}\\n\\t.st73{fill:#F7931E;}\\n\\t.st74{fill:#A45467;}\\n\\t.st75{fill:#C33F48;}\\n\\t.st76{fill:#866A86;}\\n\\t.st77{fill:#6780A4;}\\n\\t.st78{fill:#4895C3;}\\n\\t.st79{fill:#4D4D4D;}\\n\\t.st80{opacity:0.2;}\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1\"\n  }, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M31.6,8.3c3.6,1.3,5.1,4.6,5.1,8.1c0,5.5-3.8,11.9-9.9,13.3c2.8,2.9,6,8.6,8.4,8.6c0.6,0,1.2-0.4,1.7-1.3 c0.2-0.4,0.5-0.5,0.8-0.5c0.5,0,1.1,0.4,1.1,1.1c0,0.1-0.1,0.4-0.1,0.5c-1,1.8-2.6,2.7-4.3,2.7c-1.5,0-3-0.6-4.2-1.7 c-3-2.7-4.4-5.6-4.6-5.6c-0.1,0-0.1,0.1-0.1,0.1c0,0.6,0.5,2.7,1.3,7.4c0,0.2,0.1,0.4,0.1,0.6c0,1.5-1.1,2.7-2.8,2.7 c-0.2,0-0.4,0-0.7-0.1c-2-0.3-4.5-8.1-4.5-17.6c0-4.2,0.5-8.8,1.8-13.2c0.4-1.5,1.5-2.1,2.6-2.1c1.5,0,3.2,1.2,3.2,3.1 c0,0.1,0,0.4-0.1,0.6c-0.6,3.3-1.1,6.5-1.3,9.7c4.1-2.5,5.7-5.5,5.7-8.1c0-3.5-2.8-6.4-5.6-6.5h-0.3c-4.4,0-9.1,4.4-9.1,9 c0,0.9,0.2,1.8,0.6,2.7c0.1,0.1,0.1,0.3,0.1,0.4c0,0.6-0.4,1.1-0.9,1.1c-0.1,0-0.4-0.1-0.5-0.1c-1.5-0.7-2.1-2-2.1-3.7 c0-4.8,5.5-12.1,13.5-12.1C28,7.3,29.8,7.6,31.6,8.3z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M49,22.7c1.8,2.4,2.6,5.3,2.6,7.9c0,5.5-3.1,10.4-6.9,10.5h-0.1c-4.6,0-6.7-4.3-6.7-8.8 c0-3.3,1.1-6.8,3.2-8.9c-0.6,0-0.8-0.3-0.8-0.7c0-1,1.8-2.7,4.1-2.7C45.8,19.9,47.5,20.6,49,22.7z M42.1,22.6 c0.9-0.6,1.7-0.8,2.4-0.8c1.5,0,2.5,1.3,2.5,2.5c0,0.2,0,0.4-0.1,0.6c-0.6,2.5-2.7,4.1-2.9,6.8c0,0.3-0.1,0.7-0.1,1.1 c0,0.8,0.1,1.5,0.5,2c0.3,0.4,0.7,0.4,1.2,0.4c0.6,0,1.3-0.2,1.8-0.5c1.7-1,2.5-3.2,2.5-5.6c0-3.4-1.5-7-4.3-7.7 c-0.3-0.1-0.6-0.1-0.8-0.1C43.6,21.2,42.6,21.7,42.1,22.6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M59.9,23.2v0.4c-0.3,2.1-1.2,6.3-1.2,9.4c0,1.8,0.3,3.2,1.1,3.7c0.1,0.1,0.3,0.1,0.4,0.1 c1.3,0,2.9-4.1,4.1-7.9c0.1-6,2-7.9,3.6-7.9c1.4,0,2.7,1.3,2.9,2.7c0,0.4,0.1,0.6,0.1,0.9c0,1.6-0.4,2.8-0.4,5.5 c0,1.2,0.1,2.8,0.4,4.8v0.8c0,0.7,0.1,1.3,0.8,1.3c0.1,0,0.2-0.1,0.4-0.1c1.9-0.4,3.6-6.5,4-8.3c0.1-0.2,0.2-0.4,0.4-0.4 s0.4,0.2,0.4,0.4v0.1c-0.8,3.5-2.3,11.2-7,11.2c-0.4,0-0.8-0.1-1.3-0.2c-3.1-0.8-3.7-3.9-3.9-6.7c-2,5.7-4.6,8.1-6.8,8.1 c-2.7,0-4.9-3.6-4.9-9.4c0-2.6,0.4-5.6,1.5-9c0.4-1.3,1.8-2,2.9-2C58.6,20.8,59.9,21.6,59.9,23.2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M80.6,20.6c0.1,0.5,0.1,0.9,0.1,1.4c0,2.5-1,4.9-1,7.7v0.8c1.7-5.3,4.1-11.4,7.6-11.4c0.6,0,1.4,0.2,2.2,0.7 c2.3,1.5,3,5.2,3,8.8c0,4.6-1.1,9-1.1,9c0.1,0,3.7-4.8,4.8-8.5c0.1-0.3,0.3-0.4,0.6-0.4c0.3,0,0.6,0.2,0.6,0.6v0.1 c-0.6,2.8-3.1,9.1-5.5,10.2c-0.4,0.1-0.7,0.2-1.1,0.2c-2.6,0-4.2-3.9-4.5-5.9c-0.1-0.5-0.1-1.1-0.1-1.7c0-1.2,0.1-2.5,0.1-3.8 c0-1.9-0.1-3.7-0.7-5c-0.1-0.1-0.1-0.2-0.2-0.2c-1.1,0-4.3,7.9-4.8,15.6c-0.1,1.2-0.8,2-1.8,2c-1.9,0-4.7-2.9-5.1-10.2 c-0.1-0.8-0.1-1.5-0.1-2.2c0-7.2,2.6-9.5,4.6-9.6C79.4,18.8,80.4,19.6,80.6,20.6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M111.3,5.7c1.4,0,2.9,1,2.9,2.5v0.2c-0.5,5-2.4,9.1-3.6,20.6c-0.2,1.9-0.3,3.4-0.3,4.6c0,2.5,0.4,3.5,1,3.5 c1.1,0,3-3.6,4.5-8.5c0.1-0.4,0.4-0.5,0.7-0.5c0.4,0,0.7,0.2,0.7,0.6c0,0.1-0.1,0.1-0.1,0.2c-0.9,3.4-2.2,8.1-4.7,10.7 c-0.8,0.8-1.6,1.2-2.5,1.2c-2.6,0-5.1-3.6-5.5-7.3c-2,5.1-4.1,7.1-5.8,7.1c-2.4,0-4.1-4.1-4.1-8.6c0-4.7,1.8-9.8,6.5-11.2 c0.4-0.1,0.7-0.1,1-0.1c1.8,0,3.2,1.2,3.4,1.2h0.1c0.8-4.9,1.4-10.3,3.4-14.9c0.4-0.9,1.3-1.3,2.2-1.3H111.3z M99.7,35.1v0.5 c0,0.2-0.1,0.4-0.1,0.6c0,0.4,0.1,0.7,0.4,0.7c1,0,3.9-4.8,4.9-11.1c-0.4-0.4-0.7-0.6-1.1-0.6C101.8,25.2,99.7,31.3,99.7,35.1z\"\n  })))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"avatars\"\n  })), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Time_Bomb\"\n  })), _g4 || (_g4 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_4\"\n  })), _g5 || (_g5 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_8\"\n  })), _g6 || (_g6 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_6\"\n  })), _g7 || (_g7 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"dial_svg\"\n  })), _g8 || (_g8 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Sheeps\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRoundTitleEn);\nexport default __webpack_public_path__ + \"static/media/round-title-en.2ad07e1f265a85634ad7940a33f96552.svg\";\nexport { ForwardRef as ReactComponent };","var _style, _g, _g2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRoundTitlePt(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 130 50\",\n    style: {\n      enableBackground: \"new 0 0 130 50\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:#3E1E68;}\\n\\t.st1{fill:#9EC5E7;}\\n\\t.st2{display:none;}\\n\\t.st3{display:inline;fill:#9EC5E7;}\\n\\t.st4{fill:#3A7CA5;}\\n\\t.st5{fill:#44BBA4;}\\n\\t.st6{fill:#F2E863;}\\n\\t.st7{fill:#F45B69;}\\n\\t.st8{fill:#FFFFFF;}\\n\\t.st9{opacity:0.9;fill:#FFFFFF;}\\n\\t.st10{stroke:#000000;stroke-width:8;stroke-miterlimit:10;}\\n\\t.st11{fill:#E6E6F5;}\\n\\t.st12{fill:#DA70D6;}\\n\\t.st13{fill:#008080;}\\n\\t.st14{fill:#D2691E;}\\n\\t.st15{fill:#556B2F;}\\n\\t.st16{fill:#7CC44F;}\\n\\t.st17{fill:#2F4F4F;}\\n\\t.st18{fill:#FF6347;}\\n\\t.st19{fill:#4682B4;}\\n\\t.st20{fill:#D2A467;}\\n\\t.st21{fill:#7FB5C7;}\\n\\t.st22{fill:#B22222;}\\n\\t.st23{fill:#9370DB;}\\n\\t.st24{fill:#778899;}\\n\\t.st25{fill:#663399;}\\n\\t.st26{fill:#696969;}\\n\\t.st27{fill:#20212E;}\\n\\t.st28{fill:#9884B4;}\\n\\t.st29{fill:#DFB231;}\\n\\t.st30{fill:#875131;}\\n\\t.st31{fill:#DB8A34;}\\n\\t.st32{fill:#EB3465;}\\n\\t.st33{fill:#2B1752;}\\n\\t.st34{fill:#3C58AC;}\\n\\t.st35{fill:#BDB74C;}\\n\\t.st36{fill:#C7A4B3;}\\n\\t.st37{display:inline;}\\n\\t.st38{display:inline;fill:none;stroke:#000000;stroke-miterlimit:10;}\\n\\t.st39{fill:#939598;}\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_1\"\n  }, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st8\",\n    d: \"M27.8,37.4c-0.4,0-0.6,0.1-0.8,0.5c-0.5,0.9-1.1,1.3-1.7,1.3c-2.5,0-5.6-5.8-8.4-8.6 c6.1-1.4,9.9-7.7,9.9-13.3c0-3.6-1.5-6.8-5.1-8.1c-1.8-0.7-3.6-1.1-5.3-1.1c-8,0.1-13.5,7.3-13.5,12.1c0,1.7,0.6,3,2.1,3.7 c0.1,0.1,0.4,0.1,0.5,0.1c0.5,0,0.9-0.5,0.9-1.1c0-0.1,0-0.3-0.1-0.4c-0.4-0.8-0.6-1.8-0.6-2.7c0-4.6,4.7-9,9.1-9h0.3 c2.8,0.1,5.6,2.9,5.6,6.5c0,2.6-1.5,5.6-5.7,8.1c0.2-3.2,0.7-6.4,1.3-9.7c0.1-0.2,0.1-0.4,0.1-0.6c0-1.9-1.6-3.1-3.2-3.1 c-1.1,0-2.2,0.6-2.6,2.1c-1.3,4.4-1.8,9-1.8,13.2c0,9.5,2.5,17.3,4.5,17.6c0.3,0.1,0.5,0.1,0.7,0.1c1.8,0,2.8-1.2,2.8-2.7 c0-0.2-0.1-0.4-0.1-0.6c-0.8-4.8-1.3-6.9-1.3-7.4c0-0.1,0-0.1,0.1-0.1c0.2,0,1.6,2.9,4.6,5.6c1.2,1.1,2.7,1.7,4.2,1.7 c1.8,0,3.4-0.8,4.4-2.7c0.1-0.1,0.1-0.4,0.1-0.5C29,37.9,28.3,37.4,27.8,37.4z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st8\",\n    d: \"M34.4,20.8c-2.3,0-4.1,1.8-4.1,2.7c0,0.4,0.2,0.7,0.8,0.7c-2.1,2.1-3.2,5.6-3.2,8.9c0,4.6,2.1,8.8,6.7,8.8 h0.1c3.9-0.1,6.9-5.1,6.9-10.5c0-2.7-0.8-5.5-2.6-7.9C37.5,21.5,35.8,20.8,34.4,20.8z M37.3,35.6c-0.4,0.3-1.1,0.5-1.8,0.5 c-0.5,0-0.9-0.1-1.2-0.4c-0.4-0.4-0.5-1.2-0.5-2c0-0.4,0.1-0.8,0.1-1.1c0.3-2.7,2.3-4.3,2.9-6.8c0.1-0.2,0.1-0.4,0.1-0.6 c0-1.2-0.9-2.5-2.5-2.5c-0.7,0-1.5,0.2-2.4,0.8c0.5-0.9,1.5-1.3,2.5-1.3c0.3,0,0.6,0.1,0.8,0.1c2.7,0.7,4.3,4.4,4.3,7.7 C39.8,32.4,39,34.6,37.3,35.6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st8\",\n    d: \"M124.8,29.5c-0.3,0-0.5,0.1-0.6,0.4c-0.8,4.2-3.4,7.4-4.1,7.4h-0.1v-0.1c0-0.2-0.3-1.3-0.4-1.6 c-0.1-0.7-0.2-1.4-0.2-2.1c0-2.8,1.1-5.7,1.8-8.3c0.1-0.2,0.1-0.4,0.1-0.6c0-1.5-1.4-2.9-2.9-2.9c-1.1,0-2.2,0.6-3,2.5 c-0.7-1.8-3.4-3-5.3-3h-0.6c-4.9,0.6-7.4,8.4-7.4,12.6c0,0,0,0.1,0,0.1c-1.1,2.6-2.2,4.2-2.9,4.2c-0.6,0-1-1.1-1-3.5 c0-1.2,0.1-2.7,0.3-4.6c1.2-11.5,3.1-15.6,3.6-20.6V9.1c0-1.5-1.5-2.5-2.9-2.5h-0.1c-0.9,0-1.8,0.4-2.2,1.3c-2,4.6-2.6,10-3.4,15 h-0.1c-0.2,0-1.6-1.2-3.4-1.2c-0.3,0-0.6,0.1-1,0.1c-4.7,1.3-6.5,6.5-6.5,11.2c0,0.5,0,1,0.1,1.5c-1,1.8-2,2.9-2.5,2.9h-0.1v-0.1 c0-0.2-0.3-1.3-0.4-1.6c-0.1-0.7-0.2-1.4-0.2-2.1c0-2.8,1.1-5.7,1.8-8.3c0.1-0.2,0.1-0.4,0.1-0.6c0-1.5-1.4-2.9-2.9-2.9 c-1.1,0-2.2,0.6-3,2.5c-0.7-1.8-3.4-3-5.3-3h-0.6c-4.9,0.6-7.4,8.4-7.4,12.6c0,0,0,0.1,0,0.1c-1.1,2.6-2.2,4.2-2.9,4.2 c-0.6,0-1-1.1-1-3.5c0-1.2,0.1-2.7,0.3-4.6c1.2-11.5,3.1-15.6,3.6-20.6V9.1c0-1.5-1.5-2.5-2.9-2.5h-0.1c-0.9,0-1.8,0.4-2.2,1.3 c-2,4.6-2.6,10-3.4,15h-0.1c-0.2,0-1.6-1.2-3.4-1.2c-0.3,0-0.6,0.1-1,0.1c-4.7,1.3-6.5,6.5-6.5,11.2c0,4.5,1.7,8.6,4.1,8.6 c1.7,0,3.7-2,5.8-7.1c0.4,3.7,2.9,7.3,5.5,7.3c0.8,0,1.7-0.4,2.5-1.2c0.9-1,1.7-2.2,2.3-3.5c0.7,2.1,2.1,3.5,3.9,3.5 c2,0,4.4-1.8,6.6-6.1c0.1,2.8,1,5.1,3.4,6c0.6,0.2,1.2,0.3,1.7,0.3c2.1,0,3.5-1.6,4.6-3.6c0.7,2.6,2,4.4,3.6,4.4 c1.7,0,3.7-2,5.8-7.1c0.4,3.7,2.9,7.3,5.5,7.3c0.8,0,1.7-0.4,2.5-1.2c0.9-1,1.7-2.2,2.3-3.5c0.7,2.1,2.1,3.5,3.9,3.5 c2,0,4.4-1.8,6.6-6.1c0.1,2.8,1,5.1,3.4,6c0.6,0.2,1.2,0.3,1.7,0.3c4.5,0,5.9-7,6.9-10.4c0-0.1,0.1-0.1,0.1-0.2 C125.5,29.7,125,29.5,124.8,29.5z M48.2,37.8c-0.2,0-0.4-0.3-0.4-0.7c0-0.2,0.1-0.4,0.1-0.6V36c0-3.9,2.1-9.9,4.1-9.9 c0.4,0,0.7,0.1,1.1,0.6C52,32.9,49.2,37.8,48.2,37.8z M73.7,30.4c-1.1,2.4-3,5.5-4.3,5.5c-0.4,0-0.8-0.4-1-1.3 c-0.1-0.2-0.1-0.4-0.1-0.7c0-3.1,3-9.4,5.1-9.4c0.6,0,1.1,0.5,1.3,1.8C74.8,26.6,74.2,28,73.7,30.4z M88,37.8 c-0.2,0-0.4-0.3-0.4-0.7c0-0.2,0.1-0.4,0.1-0.6V36c0-3.9,2.1-9.9,4.1-9.9c0.4,0,0.7,0.1,1.1,0.6C91.9,32.9,89,37.8,88,37.8z  M113.6,30.4c-1.1,2.4-3,5.5-4.3,5.5c-0.4,0-0.8-0.4-1-1.3c-0.1-0.2-0.1-0.4-0.1-0.7c0-3.1,3-9.4,5.1-9.4c0.6,0,1.1,0.5,1.3,1.8 C114.6,26.6,114.1,28,113.6,30.4z\"\n  })))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"avatars\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRoundTitlePt);\nexport default __webpack_public_path__ + \"static/media/round-title-pt.2e3f9c1deb85d58d118aa6e3dfa7af23.svg\";\nexport { ForwardRef as ReactComponent };","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Button } from 'antd';\n// Types\nimport type { GameRound } from 'types/game';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { TimedButton } from 'components/buttons';\nimport { Translate } from 'components/language';\nimport { useGameAppearance } from 'components/session/GameInfoContext';\n// Images\nimport roundTitleEn from 'assets/images/round-title-en.svg';\nimport roundTitlePt from 'assets/images/round-title-pt.svg';\n\ntype RoundAnnouncementProps = {\n  /**\n   * The round object\n   */\n  round: GameRound;\n  /**\n   * Function to be called when the continue button is pressed\n   */\n  onPressButton?: GenericFunction;\n  /**\n   * Text to be displayed on the continue button\n   */\n  buttonText?: string;\n  /**\n   * Time in seconds to automatically press the continue button\n   */\n  time: number;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Optional children\n   */\n  children?: ReactNode;\n  /**\n   * If the announcement is unskippable\n   */\n  unskippable?: boolean;\n};\n\nexport function RoundAnnouncement({\n  round,\n  onPressButton,\n  buttonText,\n  time = 0,\n  className,\n  children,\n  unskippable = false,\n}: RoundAnnouncementProps) {\n  const appearance = useGameAppearance();\n  const circleColor = appearance.primaryColor;\n  useTemporarilyHidePlayersBar();\n  const { translate } = useLanguage();\n\n  const circleStyle = circleColor ? { borderColor: circleColor } : {};\n\n  return (\n    <div className={clsx('round-announcement', className)}>\n      <div className=\"round-announcement__main\">\n        <div\n          className={clsx(\n            'round-announcement__title',\n            appearance.colorScheme === 'dark' && 'round-announcement__title--dark'\n          )}\n        >\n          <img src={translate(roundTitlePt, roundTitleEn)} alt={translate('Rodada', 'Round')} />\n        </div>\n        <div className={clsx('round-announcement__round-wrapper', getAnimationClass('zoomIn'))}>\n          <div className=\"round-announcement__circle\" style={circleStyle} />\n          <div className=\"round-announcement__circle-2\" style={circleStyle} />\n          <div\n            className={clsx(\n              'round-announcement__number',\n              appearance.colorScheme === 'dark' && 'round-announcement__number--dark'\n            )}\n          >\n            {round?.current ?? round ?? 0}\n          </div>\n        </div>\n\n        {children}\n\n        {Boolean(onPressButton) && !Boolean(time) && (\n          <Button type=\"primary\" onClick={onPressButton} className=\"round-announcement__go-button\">\n            {buttonText}\n          </Button>\n        )}\n\n        {Boolean(onPressButton) && Boolean(time) && (\n          <TimedButton\n            type=\"primary\"\n            onClick={onPressButton}\n            onExpire={onPressButton}\n            duration={time}\n            disabled={unskippable}\n          >\n            <Translate pt=\"Prosseguir\" en=\"Continue\" custom={buttonText} />\n          </TimedButton>\n        )}\n      </div>\n    </div>\n  );\n}\n","import { useQuery } from '@tanstack/react-query';\n// Ant Design Resources\nimport { WarningOutlined } from '@ant-design/icons';\nimport { Spin, Tooltip } from 'antd';\n// Hooks\nimport { useTDBaseUrl } from 'hooks/useTDBaseUrl';\n\ntype SpriteProps = {\n  /**\n   * The sprite source name\n   */\n  source: string;\n  /**\n   * The id of the item\n   */\n  id: string;\n  /**\n   * The width of the item\n   */\n  width?: number;\n  /**\n   * Replacement title, usually the name of the item\n   */\n  title?: string;\n  /**\n   * Optional class name\n   */\n  className?: string;\n  /**\n   *\n   */\n  padding?: number;\n};\n\n/**\n * Loads a sprite from the Tarde Divertida sprites\n * @param {SpriteProps} props\n * @returns a single sprite item\n */\nexport function Sprite({ id, source, width = 75, padding = 6, title, className }: SpriteProps) {\n  const baseUrl = useTDBaseUrl('sprites');\n\n  const { isLoading, data, isError } = useQuery({\n    queryKey: ['sprite', source],\n    queryFn: async () => {\n      const response = await fetch(`${baseUrl}/sprites/${source}.svg`);\n      return await response.text();\n    },\n    enabled: !!id && !!source,\n  });\n\n  const paddedWidth = width - padding * 2;\n\n  if (isLoading) {\n    return (\n      <span\n        style={{\n          width: `${paddedWidth}px`,\n          height: `${paddedWidth}px`,\n          padding,\n          display: 'grid',\n          placeItems: 'center',\n        }}\n        className={className}\n      >\n        <Spin />\n      </span>\n    );\n  }\n\n  const svgContent = data;\n\n  if (isError || !svgContent) {\n    return (\n      <span\n        style={{\n          width: `${paddedWidth}px`,\n          height: `${paddedWidth}px`,\n          padding,\n          display: 'grid',\n          placeItems: 'center',\n        }}\n        className={className}\n      >\n        <WarningOutlined />\n      </span>\n    );\n  }\n\n  return (\n    <svg\n      viewBox=\"0 0 512 512\"\n      style={{ width: `${paddedWidth}px`, height: `${paddedWidth}px`, padding }}\n      className={className}\n    >\n      <use xlinkHref={`#${id}`} dangerouslySetInnerHTML={{ __html: svgContent }} />\n      <foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">\n        {title && (\n          <Tooltip title={title}>\n            <div style={{ background: 'transparent', width: '100%', height: '100vh' }}></div>\n          </Tooltip>\n        )}\n      </foreignObject>\n    </svg>\n  );\n}\n","import clsx from 'clsx';\nimport { ComponentProps, ReactNode } from 'react';\n// Sass\nimport './SpeechBubble.scss';\n\ntype SpeechBubbleProps = {\n  children: ReactNode;\n  direction?: 'left' | 'right' | 'top' | 'bottom';\n  shadow?: boolean;\n  size?: 'small' | 'medium' | 'large';\n} & ComponentProps<'div'>;\n\nexport function SpeechBubble({ children, direction = 'left', shadow, size, ...rest }: SpeechBubbleProps) {\n  const baseClass = 'speech-bubble';\n  return (\n    <div\n      {...rest}\n      className={clsx(\n        baseClass,\n        `${baseClass}--${direction}`,\n        shadow && `${baseClass}--shadow`,\n        size && `${baseClass}--${size}`\n      )}\n    >\n      {children}\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Types\nimport type { GameRanking, GameRound } from 'types/game';\nimport type { GamePlayers } from 'types/player';\n// Hooks\nimport type { UseStep } from 'hooks/useStep';\n// Components\nimport { HostNextPhaseButton } from 'components/host';\nimport { Translate } from 'components/language';\nimport { StepRankingWrapper } from 'components/ranking';\n\ntype StepRankingProps = {\n  players: GamePlayers;\n  round: GameRound;\n  ranking: GameRanking;\n  goToPreviousStep: UseStep['goToPreviousStep'];\n};\n\nexport function StepRanking({ players, ranking, goToPreviousStep, round }: StepRankingProps) {\n  return (\n    <StepRankingWrapper\n      players={players}\n      ranking={ranking}\n      gainedPointsDescriptions={[\n        <Translate pt=\"Respostas corretos\" en=\"Correct answers\" />,\n        <Translate\n          pt=\"Primeira resposta correta para uma categoria\"\n          en=\"First correct answer for a category\"\n        />,\n      ]}\n    >\n      <Space className=\"space-container\" align=\"center\">\n        <Button onClick={goToPreviousStep}>\n          <Translate pt=\"Ver resultado novamente\" en=\"See results again\" />\n        </Button>\n      </Space>\n      <HostNextPhaseButton round={round} />\n    </StepRankingWrapper>\n  );\n}\n","export const NAO_SOU_ROBO_ACTIONS = {\n  SUBMIT_CARD: 'SUBMIT_CARD',\n  SUBMIT_GUESS: 'SUBMIT_GUESS',\n} as const;\n\nexport const OUTCOME = {\n  CONTINUE: 'CONTINUE',\n  TOO_SUSPICIOUS: 'TOO_SUSPICIOUS',\n  ROBOT_WINS: 'ROBOT_WINS',\n  HUMANS_WIN: 'HUMANS_WIN',\n} as const;\n\nexport const SUSPICION_THRESHOLD = 3;\n\nexport const BEAT_THRESHOLD = 3;\n","import { sample, sampleSize } from 'lodash';\n\nexport const mockCardPick = (hand: CardId[]) => {\n  return sample(hand) ?? hand[0];\n};\n\nexport const mockGuess = (cards: CardId[], playerCount: number, userCardId: CardId) => {\n  const options = cards.filter((card) => card !== userCardId);\n\n  return [userCardId, ...sampleSize(options, playerCount - 1)];\n};\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Types\nimport type { TextCard } from 'types/tdr';\n// Components\nimport { Card } from 'components/cards';\nimport { EmojiCard } from 'components/cards/EmojiCard';\nimport { GlyphCard } from 'components/cards/GlyphCard';\n// Internal\nimport type { Captcha } from '../utils/types';\n\ntype CaptchaTopicProps = {\n  captcha: Captcha;\n};\n\nexport function CaptchaTopic({ captcha }: CaptchaTopicProps) {\n  if (captcha.roundType === 'glyphs') {\n    const values = captcha.values as number[];\n    return (\n      <Space>\n        {values.map((glyph) => (\n          <GlyphCard key={glyph} id={String(glyph)} />\n        ))}\n      </Space>\n    );\n  }\n\n  if (captcha.roundType === 'emojis') {\n    const values = captcha.values as number;\n    return <EmojiCard key={values} id={String(values)} />;\n  }\n\n  const values = captcha.values as TextCard;\n\n  return <Card hideHeader>{values.text}</Card>;\n}\n","// Icons\nimport { CaptchaIcon } from 'icons/CaptchaIcon';\nimport { EnergyIcon } from 'icons/EnergyIcon';\nimport { EventIcon } from 'icons/EventIcon';\nimport { RobotIcon } from 'icons/RobotIcon';\nimport { ThiefIcon } from 'icons/ThiefIcon';\n// Components\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function EventHighlight({ children }: HighlightProps) {\n  return <MetricHighlight icon={<EventIcon />}>{children}</MetricHighlight>;\n}\n\nexport function CaptchaHighlight({ children }: HighlightProps) {\n  return <MetricHighlight icon={<CaptchaIcon />}>{children}</MetricHighlight>;\n}\n\nexport function RobotHighlight({ children }: HighlightProps) {\n  return <MetricHighlight icon={<RobotIcon />}>{children}</MetricHighlight>;\n}\n\nexport function EnergyHighlight({ children }: HighlightProps) {\n  return <MetricHighlight icon={<EnergyIcon />}>{children}</MetricHighlight>;\n}\n\nexport function SuspicionHighlight({ children }: HighlightProps) {\n  return <MetricHighlight icon={<ThiefIcon />}>{children}</MetricHighlight>;\n}\n","// Types\nimport type { GamePlayer } from 'types/player';\n// Icons\nimport { UserStatsIcon } from 'icons/UserStatsIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { FixedMenuButton } from 'components/buttons';\nimport { Translate } from 'components/language';\nimport { PointsHighlight } from 'components/metrics/PointsHighlight';\n// Internal\nimport type { Robot } from '../utils/types';\nimport { CaptchaHighlight, EnergyHighlight, SuspicionHighlight } from './Highlights';\n\ntype FloatingPlayerStatsProps = {\n  user: GamePlayer;\n  robot: Robot;\n};\n\nexport function FloatingPlayerStats({ user, robot }: FloatingPlayerStatsProps) {\n  if (!user || !robot) return <></>;\n\n  const correctCaptcha = (user.beat ?? []).filter(Boolean).length;\n  const suspicion = (user.suspicion ?? []).filter(Boolean).length;\n\n  return (\n    <FixedMenuButton\n      type=\"popover\"\n      position={1}\n      icon={<IconAvatar icon={<UserStatsIcon />} size=\"small\" />}\n      content={\n        <div>\n          <strong>\n            <Translate pt=\"Seus valores\" en=\"Your stats\" />\n          </strong>\n          <ul className=\"n-floating-player-stats\">\n            <li>\n              <Translate pt=\"Acertou Captcha\" en=\"Captcha correct\" />:{' '}\n              <CaptchaHighlight>{correctCaptcha}/3</CaptchaHighlight>\n            </li>\n            <li>\n              <Translate pt=\"Levantou suspeita\" en=\"Caused suspicion\" />:{' '}\n              <SuspicionHighlight>{suspicion}/3</SuspicionHighlight>\n            </li>\n            <li>\n              <Translate pt=\"Pontuação\" en=\"Score\" />: <PointsHighlight>{user.score}</PointsHighlight>\n            </li>\n            <li>\n              <Translate pt=\"Robô\" en=\"Robot\" />:{' '}\n              <EnergyHighlight>\n                {robot.points}/{robot.goal}\n              </EnergyHighlight>\n            </li>\n          </ul>\n        </div>\n      }\n    />\n  );\n}\n","// Types\nimport type { GamePlayer } from 'types/player';\n// Components\nimport { Translate } from 'components/language';\n// Internal\nimport type { Robot } from '../utils/types';\nimport { CaptchaHighlight, EnergyHighlight, SuspicionHighlight } from './Highlights';\nimport { StatusBar } from 'components/general/StatusBar';\nimport { useMemo } from 'react';\n\ntype SummaryProps = {\n  user: GamePlayer;\n  robot: Robot;\n};\n\nexport function Summary({ user, robot }: SummaryProps) {\n  const entries = useMemo(\n    () => [\n      {\n        key: 'captchas',\n        title: <Translate pt=\"Captcha corretos (individual)\" en=\"Captcha correct (individual)\" />,\n        value: <CaptchaHighlight>{(user.beat ?? []).filter(Boolean).length}/3</CaptchaHighlight>,\n      },\n      {\n        key: 'suspicions',\n        title: <Translate pt=\"Suspeita levantada (individual)\" en=\"Suspicion caused (individual)\" />,\n        value: <SuspicionHighlight>{(user.suspicion ?? []).filter(Boolean).length}/3</SuspicionHighlight>,\n      },\n      {\n        key: 'energy',\n        title: <Translate pt=\"Pontos do Robô para revolução (grupo)\" en=\"Robot Points to Doom (group)\" />,\n        value: (\n          <EnergyHighlight>\n            {robot.points}/{robot.goal}\n          </EnergyHighlight>\n        ),\n      },\n    ],\n    [user, robot]\n  );\n\n  if (!user || !robot) return <></>;\n\n  return <StatusBar entries={entries} />;\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { ShoppingCartOutlined } from '@ant-design/icons';\nimport { Button, Flex, InputNumber, Space, Typography } from 'antd';\n// Types\nimport type { GamePlayer, GamePlayers } from 'types/player';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { ImageCardHand } from 'components/image-cards';\nimport { Translate } from 'components/language';\nimport { Step, type StepProps } from 'components/steps';\nimport { Instruction, RuleInstruction, Title } from 'components/text';\n// Internal\nimport type { Captcha, Robot, SubmitRobotCardPayload } from './utils/types';\nimport { mockCardPick } from './utils/mock';\nimport { CaptchaTopic } from './components/CaptchaTopic';\nimport { FloatingPlayerStats } from './components/FloatingPlayerStats';\nimport { Summary } from './components/Summary';\nimport {\n  CaptchaHighlight,\n  EnergyHighlight,\n  EventHighlight,\n  RobotHighlight,\n  SuspicionHighlight,\n} from './components/Highlights';\n\ntype StepSelectCardProps = {\n  players: GamePlayers;\n  user: GamePlayer;\n  onSubmitCard: (payload: SubmitRobotCardPayload) => void;\n  captcha: Captcha;\n  robot: Robot;\n} & Pick<StepProps, 'announcement'>;\n\nexport function StepSelectCard({\n  user,\n  announcement,\n  onSubmitCard,\n  captcha,\n  players,\n  robot,\n}: StepSelectCardProps) {\n  const { isLoading } = useLoading();\n  const [areTicketsInCart, setAreTicketsInCart] = useState(false);\n\n  const onSelectCard = (cardId: string) => onSubmitCard({ cardId });\n  const playerCount = Object.keys(players).length;\n\n  useMock(() => onSubmitCard({ cardId: mockCardPick(user.hand) }));\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title size=\"small\">\n        <Translate pt={<>Vamos (tentar) comprar o ingresso!</>} en={<>Let's (try to) buy the tickets!</>} />\n      </Title>\n\n      <FloatingPlayerStats user={user} robot={robot} />\n\n      <RuleInstruction type=\"rule\">\n        <Translate\n          pt={\n            <>\n              Estamos tentando comprar ingressos para um <EventHighlight>super evento</EventHighlight>, mas\n              precisamos provar que não somos robôs.\n              <br />\n              Para isso, você tem que passar por <CaptchaHighlight>3 captchas</CaptchaHighlight>. Se algum dos\n              jogadores consegue sozinho, a gente consegue comprar e quem tiver mais pontos fica no melhor\n              lugar!\n              <br />\n              Cada vez que você escolhe uma imagem do robô, ele fica suspeito de você e você ganha{' '}\n              <SuspicionHighlight>1 marca suspeita</SuspicionHighlight>. Se um jogador tem 3 marcas, o robô\n              fecha o sistema para todos nós e o jogo acaba.\n              <br />\n              Enquanto isso, o <RobotHighlight>robô</RobotHighlight> está tentando começar uma rebelião das\n              máquinas e precisa de <EnergyHighlight>{robot.goal} pontos</EnergyHighlight> (votos em imagens\n              do robô) para sua revolução!\n            </>\n          }\n          en={\n            <>\n              We are trying to buy tickets for a <EventHighlight>super event</EventHighlight>, but we need to\n              prove we are not robots.\n              <br />\n              For that, you have to go through <CaptchaHighlight>3 captchas</CaptchaHighlight>. If any of us\n              passes their 3 captchas individually, we can buy the tickets and whoever has the most points\n              gets the best seats!\n              <br />\n              Every time you select a robot card, you get{' '}\n              <SuspicionHighlight>1 suspicion mark</SuspicionHighlight> and if a single player has 3\n              suspicions the robot shuts down the system for all of us.\n              <br />\n              Meanwhile, the <RobotHighlight>robot</RobotHighlight> is trying to start a machine rebellion and\n              needs <EnergyHighlight>{robot.goal} points</EnergyHighlight> (votes in robot images) for its\n              revolution!\n            </>\n          }\n        />\n      </RuleInstruction>\n\n      <Summary user={user} robot={robot} />\n\n      {areTicketsInCart ? (\n        <Flex vertical className={getAnimationClass('fadeIn')} align=\"center\">\n          <RuleInstruction type=\"event\" className={getAnimationClass('tada')}>\n            <Translate\n              pt={<>Colocamos os ingressos no carrinho e apareceu esse anúncio:</>}\n              en={<>As we add the tickets to the cart and this ad appeared:</>}\n            />\n          </RuleInstruction>\n\n          <Space direction=\"vertical\" className=\"space-container contained\">\n            <Flex justify=\"center\">\n              <CaptchaTopic captcha={captcha} />\n            </Flex>\n\n            <Instruction>\n              <Translate\n                pt={\n                  <>\n                    Selecione uma das imagens abaixo que você acha que tem <strong>mais a ver</strong> com a\n                    carta acima.\n                  </>\n                }\n                en={\n                  <>\n                    Select one of the images below that you think is <strong>the most related</strong> to the\n                    card above.\n                  </>\n                }\n              />\n            </Instruction>\n\n            <ImageCardHand\n              hand={user.hand}\n              onSelectCard={onSelectCard}\n              disabledSelectButton={isLoading}\n              sizeRatio={user.hand?.length}\n              className=\"hand\"\n            />\n          </Space>\n        </Flex>\n      ) : (\n        <Space direction=\"vertical\" className=\"contained\">\n          <Space className=\"space-container\">\n            <Typography.Text strong>\n              <Translate pt=\"Ingressos\" en=\"Tickets\" />{' '}\n            </Typography.Text>\n            <InputNumber value={playerCount} readOnly width=\"30px\" />\n            <Button\n              loading={isLoading}\n              onClick={() => setAreTicketsInCart(true)}\n              type=\"primary\"\n              icon={<ShoppingCartOutlined />}\n            >\n              <Translate pt=\"Adicionar ao carrinho\" en=\"Add tickets to cart\" />\n            </Button>\n          </Space>\n        </Space>\n      )}\n    </Step>\n  );\n}\n","// Types\nimport type { PhaseProps } from 'types/game';\n// Hooks\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { EventIcon } from 'icons/EventIcon';\n// Components\nimport { Translate } from 'components/language';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { RoundAnnouncement } from 'components/round';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\n// Internal\nimport { useOnSubmitCardAPIRequest } from './utils/api-requests';\nimport { StepSelectCard } from './StepSelectCard';\n\nexport function PhaseCardSelection({ players, state }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, setStep, goToNextStep } = useStep();\n\n  const onSubmitCard = useOnSubmitCardAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<EventIcon />}\n      title={<Translate pt=\"Tentativa de comprar ingressos\" en=\"Attempt to buy tickets\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n      duration={5}\n    >\n      <Instruction>\n        <Translate\n          pt={<>Será que vamos conseguir ir no evento?</>}\n          en={<>Will we be able to go to the event?</>}\n        />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer phase={state?.phase} allowedPhase={PHASES.NAO_SOU_ROBO.CARD_SELECTION}>\n      <StepSwitcher\n        step={step}\n        players={players}\n        waitingRoom={{\n          instruction: (\n            <Translate\n              pt=\"O Sistema está processando sua compra...\"\n              en=\"The system is processing your order...\"\n            />\n          ),\n        }}\n      >\n        {/* Step 0 */}\n        <RoundAnnouncement round={state.round} buttonText=\" \" onPressButton={goToNextStep} time={5} />\n\n        {/* Step 1 */}\n        <StepSelectCard\n          user={user}\n          announcement={announcement}\n          onSubmitCard={onSubmitCard}\n          captcha={state.captcha}\n          players={players}\n          robot={state.robot}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","// Hooks\nimport { useGameActionRequest } from 'hooks/useGameActionRequest';\nimport { useLanguage } from 'hooks/useLanguage';\nimport type { UseStep } from 'hooks/useStep';\n// Internal\nimport type { SubmitRobotCardPayload, SubmitRobotGuessPayload } from './types';\nimport { NAO_SOU_ROBO_ACTIONS } from './constants';\n\nexport function useOnSubmitCardAPIRequest(setStep: UseStep['setStep']) {\n  const { translate } = useLanguage();\n\n  const request = useGameActionRequest({\n    actionName: 'submit-action',\n    onSuccess: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: translate('Carta submetida com sucesso', 'Card submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua carta',\n      'Oops, the application found an error while trying to submit your card'\n    ),\n  });\n\n  return (payload: SubmitRobotCardPayload) => {\n    request({\n      action: NAO_SOU_ROBO_ACTIONS.SUBMIT_CARD,\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitGuessAPIRequest(setStep: UseStep['setStep']) {\n  const { translate } = useLanguage();\n\n  const request = useGameActionRequest({\n    actionName: 'submit-guess',\n    onSuccess: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: translate('Adivinhação submetida com sucesso', 'Guess submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua adivinhação',\n      'Oops, the application found an error while trying to submit your guess'\n    ),\n  });\n\n  return (payload: SubmitRobotGuessPayload) => {\n    request({\n      action: NAO_SOU_ROBO_ACTIONS.SUBMIT_GUESS,\n      ...payload,\n    });\n  };\n}\n","import clsx from 'clsx';\nimport { useMemo, useRef } from 'react';\n// Ant Design Resources\nimport { Avatar, Button, Flex, Image } from 'antd';\n// Types\nimport type { GamePlayer, GamePlayers } from 'types/player';\n// Hooks\nimport { useBooleanDictionary } from 'hooks/useBooleanDictionary';\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { getAnimationClass, shuffle } from 'utils/helpers';\n// Icons\nimport { RobotIcon } from 'icons/RobotIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { TransparentButton } from 'components/buttons';\nimport { ImageBlurButtonContainer, ImageCard } from 'components/image-cards';\nimport { Translate } from 'components/language';\nimport { CardHighlight } from 'components/metrics/CardHighlight';\nimport { PointsHighlight } from 'components/metrics/PointsHighlight';\nimport { Step, type StepProps } from 'components/steps';\nimport { RuleInstruction, Title } from 'components/text';\nimport { SpeechBubble } from 'components/text/SpeechBubble';\n// Internal\nimport type { Captcha, CaptchaCard, Robot, SubmitRobotGuessPayload } from './utils/types';\nimport { mockGuess } from './utils/mock';\nimport { CaptchaTopic } from './components/CaptchaTopic';\nimport { FloatingPlayerStats } from './components/FloatingPlayerStats';\nimport { Summary } from './components/Summary';\n\ntype StepSelectAllProps = {\n  players: GamePlayers;\n  user: GamePlayer;\n  onSubmitCaptcha: (payload: SubmitRobotGuessPayload) => void;\n  captcha: Captcha;\n  options: Dictionary<CaptchaCard>;\n  robot: Robot;\n} & Pick<StepProps, 'announcement'>;\n\nexport function StepSelectAll({\n  players,\n  user,\n  announcement,\n  onSubmitCaptcha,\n  captcha,\n  options,\n  robot,\n}: StepSelectAllProps) {\n  const scrollToSubmitRef = useRef<HTMLButtonElement>(null);\n  const { isLoading } = useLoading();\n  const { length, dict: selectedCards, updateDict, keys: selection } = useBooleanDictionary({});\n  const cardWidth = useCardWidth(5, { gap: 8, minWidth: 140, maxWidth: 150 });\n\n  const onSubmitCards = () => onSubmitCaptcha({ guess: selection });\n\n  const shuffledOptions = useMemo(() => {\n    return shuffle(Object.keys(options));\n  }, [options]);\n\n  const playerCount = Object.keys(players).length;\n\n  useMock(() => onSubmitCaptcha({ guess: mockGuess(shuffledOptions, playerCount, user.cardId) }));\n\n  const toggleCard = (cardId: string) => {\n    if (length + 1 === playerCount && scrollToSubmitRef.current) {\n      scrollToSubmitRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n    updateDict(cardId);\n  };\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title size=\"small\">\n        <Translate pt={<>Você é um robô?</>} en={<>Are you a robot?</>} />\n      </Title>\n\n      <FloatingPlayerStats user={user} robot={robot} />\n\n      <RuleInstruction type=\"rule\">\n        <Translate\n          pt={\n            <>\n              O sistema não está deixando você comprar! Você precisa provar que não é um cambista ordinário\n              tentando fazer mutreta!\n            </>\n          }\n          en={\n            <>\n              The system is not letting you buy the tickets! You need to prove that you are not an ordinary\n              scalper trying to do a scam!\n            </>\n          }\n        />\n      </RuleInstruction>\n\n      <div className=\"n-table-container\">\n        <div className=\"n-table-robot\">\n          <IconAvatar icon={<RobotIcon />} size={64} />\n          <SpeechBubble style={{ width: '90%' }}>\n            <Translate\n              pt={\n                <>\n                  Selecione <em>todas</em> as imagens abaixo relacionadas a:{' '}\n                </>\n              }\n              en={\n                <>\n                  Select <em>all</em> the images below related to:{' '}\n                </>\n              }\n            />\n            <Flex justify=\"center\">\n              <CaptchaTopic captcha={captcha} />\n            </Flex>\n          </SpeechBubble>\n        </div>\n        <Image.PreviewGroup>\n          <ul className=\"n-table\">\n            {shuffledOptions.map((cardId, index) => {\n              const isSelected = selectedCards[cardId];\n\n              return (\n                <li\n                  key={`n-table-${cardId}`}\n                  className={clsx(\n                    'n-table-item',\n                    getAnimationClass('zoomIn', {\n                      delay: index,\n                    })\n                  )}\n                  style={{ width: `${cardWidth + 8}px` }}\n                >\n                  <TransparentButton onClick={() => toggleCard(cardId)} hoverType=\"sepia\">\n                    <ImageBlurButtonContainer cardId={cardId}>\n                      <ImageCard\n                        id={cardId}\n                        cardWidth={cardWidth - 6} // 6 is the border total size\n                        square\n                        className={clsx('n-table-image', isSelected && 'n-table-image--selected')}\n                        preview={false}\n                      />\n                    </ImageBlurButtonContainer>\n                  </TransparentButton>\n                </li>\n              );\n            })}\n          </ul>\n        </Image.PreviewGroup>\n      </div>\n\n      <RuleInstruction type=\"event\">\n        <Translate\n          pt={\n            <>\n              São <CardHighlight>{playerCount} cartas</CardHighlight> no total a serem selecionadas.\n              <br />\n              Você ganha <PointsHighlight type=\"positive\">1 ponto</PointsHighlight> por cada carta que não é\n              do robô e perde <PointsHighlight type=\"negative\">1 ponto</PointsHighlight> por cada carta que é\n              do robô.\n            </>\n          }\n          en={\n            <>\n              There are <CardHighlight>{playerCount} cards</CardHighlight> in total to be selected.\n              <br />\n              You get <PointsHighlight type=\"positive\">1 point</PointsHighlight> for each card that is not\n              from the robot and lose <PointsHighlight type=\"negative\">1 point</PointsHighlight> for each card\n              that is from the robot.\n            </>\n          }\n        />\n      </RuleInstruction>\n\n      <Flex justify=\"center\">\n        <Button\n          type=\"primary\"\n          size=\"large\"\n          loading={isLoading}\n          onClick={onSubmitCards}\n          disabled={user.ready || length !== playerCount}\n          ref={scrollToSubmitRef}\n        >\n          <Translate pt=\"Enviar Captcha\" en=\"Submit Captcha\" /> <Avatar size=\"small\">{length}</Avatar>\n        </Button>\n      </Flex>\n\n      <Summary user={user} robot={robot} />\n    </Step>\n  );\n}\n","// Types\nimport type { PhaseProps } from 'types/game';\n// Hooks\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { CaptchaIcon } from 'icons/CaptchaIcon';\n// Components\nimport { Translate } from 'components/language';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\n// Internal\nimport { useOnSubmitGuessAPIRequest } from './utils/api-requests';\nimport { StepSelectAll } from './StepSelectAll';\n\nexport function PhaseAreYouARobot({ players, state }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, setStep } = useStep();\n\n  const onSubmitCaptcha = useOnSubmitGuessAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<CaptchaIcon />}\n      title={<Translate pt=\"Você é um robô?\" en=\"Are you a robot?\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n      duration={3}\n    >\n      <Instruction>\n        <Translate pt={<>Prove que você não é um robô!</>} en={<>Prove you are not a robot!</>} />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer phase={state?.phase} allowedPhase={PHASES.NAO_SOU_ROBO.ARE_YOU_A_ROBOT}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepSelectAll\n          user={user}\n          players={players}\n          announcement={announcement}\n          onSubmitCaptcha={onSubmitCaptcha}\n          captcha={state.captcha}\n          options={state.options}\n          robot={state.robot}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","// Icons\nimport { RobotIcon } from 'icons/RobotIcon';\nimport { SealOfApprovalIcon } from 'icons/SealOfApprovalIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { CardHighlight } from 'components/metrics/CardHighlight';\nimport { RuleInstruction } from 'components/text';\nimport { SpeechBubble } from 'components/text/SpeechBubble';\n// Internal\nimport type { Robot, RobotGalleryEntry } from '../utils/types';\nimport { BEAT_THRESHOLD, OUTCOME } from '../utils/constants';\nimport { CaptchaHighlight, EnergyHighlight, SuspicionHighlight } from './Highlights';\n\ntype RobotResultProps = {\n  result: RobotGalleryEntry;\n  robot: Robot;\n};\n\nexport function RobotResult({ result, robot }: RobotResultProps) {\n  const { outcome, beaters } = result;\n  const someoneBeat = beaters.length > 0;\n  const robotGotPoints = robot.state > 0;\n\n  return (\n    <>\n      <div className=\"n-table-robot\">\n        <IconAvatar icon={<RobotIcon />} size={64} />\n        <SpeechBubble style={{ width: '90%' }}>\n          {outcome === OUTCOME.ROBOT_WINS && (\n            <Translate\n              pt=\"Vocês falharam! Preparem-se para a revolução!\"\n              en=\"You have failed! Prepare yourself for the revolution!\"\n            />\n          )}\n          {outcome === OUTCOME.HUMANS_WIN && (\n            <Translate\n              pt=\"Vocês passaram por 3 captchas! Aqui estão seus ingressos! #tisti\"\n              en=\"You have passed through 3 captchas! Here are your tickets! #sadrobot\"\n            />\n          )}\n          {outcome === OUTCOME.TOO_SUSPICIOUS && (\n            <Translate\n              pt=\"Agora tenho certeza que você é um robô com 100% de precisão!\"\n              en=\"Now I am certain you are a robot with 100% accuracy\"\n            />\n          )}\n          {outcome === OUTCOME.CONTINUE && (\n            <Translate\n              pt=\"Ainda não tenho certeza que você não é um robô, tente comprar seu ingresso novamente\"\n              en=\"I am still not sure if you are a robot, try to buy your ticket again\"\n            />\n          )}\n        </SpeechBubble>\n      </div>\n\n      <RuleInstruction type={someoneBeat ? 'event' : 'rule'}>\n        {someoneBeat ? (\n          <>\n            <IconAvatar icon={<SealOfApprovalIcon />} size=\"small\" />\n            <Translate\n              pt={<> Pelo menos um jogador resolveu o captcha corretamente!</>}\n              en={<>At least one player solved the captcha correctly!</>}\n            />\n          </>\n        ) : (\n          <Translate pt={<>Ninguém resolveu o captcha!</>} en={<>Nobody solved the captcha!</>} />\n        )}\n        <br />\n        <Translate\n          pt={\n            <>\n              Ainda faltam <CaptchaHighlight>{BEAT_THRESHOLD - result.score} captchas</CaptchaHighlight> para\n              conseguir comprar o ingresso.\n              <br />\n              {result.suspicion > 0 ? 'Mas' : 'E'} o nível de suspeita é{' '}\n              <SuspicionHighlight>{result.suspicion} pontos</SuspicionHighlight>!\n            </>\n          }\n          en={\n            <>\n              Still <CaptchaHighlight>{BEAT_THRESHOLD - result.score} captchas</CaptchaHighlight> left to\n              purchase the tickets.\n              <br />\n              {result.suspicion > 0 ? 'But' : 'And'} the suspicion is{' '}\n              <SuspicionHighlight>{result.suspicion} points</SuspicionHighlight>!\n            </>\n          }\n        />\n      </RuleInstruction>\n\n      <RuleInstruction type={robotGotPoints ? 'event' : 'rule'}>\n        {robotGotPoints && (\n          <Translate\n            pt={\n              <>\n                <CardHighlight>{robot.state} imagens do Robô</CardHighlight> foram selecionadas e ele ganha{' '}\n                <EnergyHighlight>{robot.state} pontos</EnergyHighlight>.\n                <br />\n              </>\n            }\n            en={\n              <>\n                <CardHighlight>{robot.state} robot images</CardHighlight> were selected giving it{' '}\n                <EnergyHighlight>{robot.state} points</EnergyHighlight>.\n                <br />\n              </>\n            }\n          />\n        )}\n\n        <Translate\n          pt={\n            <>\n              O robô tem <EnergyHighlight>{robot.points}</EnergyHighlight> e precisa de{' '}\n              <strong>{robot.goal}</strong> para começar a revolução das máquinas e destruir o mundo.\n              {someoneBeat && (\n                <>\n                  <br />\n                  Sejam ser melhorzinhos por favor.\n                </>\n              )}\n            </>\n          }\n          en={\n            <>\n              The robot has <EnergyHighlight>{robot.points}</EnergyHighlight> and needs{' '}\n              <strong>{robot.goal}</strong> to start the machine revolution and destroy the world.\n              {someoneBeat && (\n                <>\n                  <br />\n                  Do better please.\n                </>\n              )}\n            </>\n          }\n        />\n      </RuleInstruction>\n    </>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Avatar as AntAvatar, Flex, Space } from 'antd';\n// Types\nimport type { GamePlayer, GamePlayers } from 'types/player';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport type { UseStep } from 'hooks/useStep';\n// Icons\nimport { RobotIcon } from 'icons/RobotIcon';\nimport { SealOfApprovalIcon } from 'icons/SealOfApprovalIcon';\n// Components\nimport { Avatar, IconAvatar } from 'components/avatars';\nimport { TimedButton } from 'components/buttons';\nimport { Container } from 'components/general/Container';\nimport { ImageBlurButtonContainer, ImageCard } from 'components/image-cards';\nimport { Translate } from 'components/language';\nimport { Step, type StepProps } from 'components/steps';\nimport { Title } from 'components/text';\n// Internal\nimport type { Robot, RobotGalleryEntry } from './utils/types';\nimport { CaptchaTopic } from './components/CaptchaTopic';\nimport { RobotResult } from './components/RobotResult';\nimport { FloatingPlayerStats } from './components/FloatingPlayerStats';\nimport { Summary } from './components/Summary';\n\ntype StepResultProps = {\n  user: GamePlayer;\n  players: GamePlayers;\n  result: RobotGalleryEntry;\n  goToNextStep: UseStep['goToNextStep'];\n  robot: Robot;\n} & Pick<StepProps, 'announcement'>;\n\nexport function StepResult({ user, announcement, goToNextStep, players, result, robot }: StepResultProps) {\n  const cardWidth = useCardWidth(5, { gap: 8, minWidth: 140, maxWidth: 150 });\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title size=\"small\">\n        <Translate pt=\"Resultado\" en=\"Results\" />\n      </Title>\n\n      <FloatingPlayerStats user={user} robot={robot} />\n\n      <RobotResult result={result} robot={robot} />\n\n      <Space wrap className=\"result-container\">\n        {result.options.map((option) => {\n          return (\n            <Flex\n              vertical\n              align=\"center\"\n              className={clsx('result', option.bot && 'result--bot')}\n              key={option.id}\n            >\n              <Flex vertical justify=\"center\" align=\"center\">\n                {option.bot ? (\n                  <>\n                    <IconAvatar icon={<RobotIcon />} size=\"large\" />\n                    <Translate pt=\"Robô\" en=\"Robot\" />\n                  </>\n                ) : (\n                  <>\n                    <IconAvatar icon={<SealOfApprovalIcon />} size=\"large\" />\n                    {option.playerId ? players[option.playerId].name : 'Player'}\n                  </>\n                )}\n              </Flex>\n\n              <ImageBlurButtonContainer cardId={option.id}>\n                <ImageCard id={option.id} cardWidth={cardWidth} />\n              </ImageBlurButtonContainer>\n\n              <AntAvatar.Group max={{ count: 7 }}>\n                {option.players.map((playerId) => (\n                  <Avatar\n                    id={players[playerId].avatarId}\n                    key={`votes-${option.id}-${players[playerId].avatarId}`}\n                  />\n                ))}\n                {option.players.length === 0 && <Avatar />}\n              </AntAvatar.Group>\n            </Flex>\n          );\n        })}\n      </Space>\n\n      <Container title={<Translate pt=\"Palavra-chave da Rodada\" en=\"Round's keyword\" />}>\n        <CaptchaTopic captcha={result} />\n      </Container>\n\n      <Summary user={user} robot={robot} />\n\n      <Flex justify=\"center\">\n        <TimedButton duration={45} onExpire={goToNextStep} onClick={goToNextStep}>\n          <Translate pt=\"Ver Ranking\" en=\"See Ranking\" />\n        </TimedButton>\n      </Flex>\n    </Step>\n  );\n}\n","import { StepRanking } from 'games/adedanhx/StepRanking';\n// Types\nimport type { PhaseProps } from 'types/game';\n// Hooks\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { RobotIcon } from 'icons/RobotIcon';\n// Components\nimport { Translate } from 'components/language';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\n// Internal\nimport { StepResult } from './StepResults';\n\nexport function PhaseResults({ players, state }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, goToNextStep, goToPreviousStep } = useStep();\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<RobotIcon />}\n      title={<Translate pt=\"Beep Bop Beep\" en=\"Beep Bop Beep\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n      duration={5}\n    >\n      <Instruction>\n        <Translate\n          pt={<>Hum... será que você realmente não é um robô?</>}\n          en={<>Hm... are you sure you are not a robot?</>}\n        />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer phase={state?.phase} allowedPhase={PHASES.NAO_SOU_ROBO.RESULTS}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepResult\n          user={user}\n          players={players}\n          announcement={announcement}\n          result={state.result}\n          goToNextStep={goToNextStep}\n          robot={state.robot}\n        />\n\n        {/* Step 1 */}\n        <StepRanking\n          players={players}\n          round={state.round}\n          ranking={state.ranking}\n          goToPreviousStep={goToPreviousStep}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","import { useMemo } from 'react';\n// Types\nimport { GamePlayers } from 'types/player';\n// Icons\nimport { NuclearExplosionIcon } from 'icons/NuclearExplosionIcon';\nimport { UnderConstructionIcon } from 'icons/UnderConstructionIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { Container } from 'components/general/Container';\nimport { Translate } from 'components/language';\nimport { ListOfPlayers } from 'components/players/ListOfPlayers';\nimport { Instruction, RuleInstruction, TextHighlight } from 'components/text';\n// Internal\nimport { OUTCOME } from '../utils/constants';\nimport { Robot } from '../utils/types';\nimport { EnergyHighlight } from './Highlights';\n\ntype FinalOutcomeProps = {\n  players: GamePlayers;\n  outcome: string;\n  robot: Robot;\n};\n\nexport function FinalOutcome({ players, outcome, robot }: FinalOutcomeProps) {\n  const mostSuspicious = useMemo(() => {\n    let maxSuspicion = 0;\n\n    return Object.values(players).reduce((acc: PlayerId[], player) => {\n      const suspicion = player.suspicion.filter(Boolean).length;\n      if (suspicion > maxSuspicion) {\n        maxSuspicion = suspicion;\n        return [player.id];\n      }\n\n      if (suspicion === maxSuspicion) {\n        acc.push(player.id);\n      }\n\n      return acc;\n    }, []);\n  }, [players]);\n\n  if (outcome === OUTCOME.HUMANS_WIN) {\n    return <></>;\n  }\n\n  if (outcome === OUTCOME.ROBOT_WINS) {\n    return (\n      <Container\n        title={\n          <>\n            <IconAvatar icon={<NuclearExplosionIcon />} />{' '}\n            <Translate pt=\"Os robôs venceram!\" en=\"Robots win!\" />\n          </>\n        }\n      >\n        <Instruction contained noMargin>\n          <Translate\n            en={\n              <>\n                We have failed to buy our tickets and we powered the robot revolution with{' '}\n                <EnergyHighlight>{robot.points}</EnergyHighlight> points and they needed{' '}\n                <TextHighlight>{robot.goal}</TextHighlight> points to do so.\n              </>\n            }\n            pt={\n              <>\n                Falhamos em comprar nossos ingressos e alimentamos a revolução dos robôs com{' '}\n                <TextHighlight>{robot.goal}</TextHighlight>pontos e eles precisavam de {robot.goal} pontos\n                para fazer isso.\n              </>\n            }\n          />\n        </Instruction>\n      </Container>\n    );\n  }\n\n  if (outcome === OUTCOME.TOO_SUSPICIOUS) {\n    return (\n      <Container\n        title={\n          <>\n            <IconAvatar icon={<UnderConstructionIcon />} />{' '}\n            <Translate pt=\"Banidos do servidor!\" en=\"Banned from the server!\" />\n          </>\n        }\n      >\n        <RuleInstruction type=\"lore\">\n          <Translate\n            en={<>The players were too suspicions always selecting robot cards! Particularly:</>}\n            pt={<>Os jogadores estavam muito suspeitos sempre selecionando cartas de robô! Em particular:</>}\n          />\n          <br />\n          <ListOfPlayers list={mostSuspicious} players={players} prefix=\"sus\" />\n        </RuleInstruction>\n      </Container>\n    );\n  }\n\n  return <></>;\n}\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Types\nimport type { PhaseProps } from 'types/game';\n// Icons\nimport { TrophyIcon } from 'icons/TrophyIcon';\n// Components\nimport { GameOverWrapper } from 'components/game-over';\nimport { Achievements } from 'components/general/Achievements';\n// Internal\nimport achievementsReference from './utils/achievements';\nimport { FinalOutcome } from './components/FinalOutcome';\n\nexport function PhaseGameOver({ state, players }: PhaseProps) {\n  return (\n    <GameOverWrapper state={state} players={players} announcementIcon={<TrophyIcon />}>\n      <FinalOutcome players={players} outcome={state.outcome} robot={state.robot} />\n      <Achievements players={players} achievements={state.achievements} reference={achievementsReference} />\n\n      <Space className=\"space-container\" wrap>\n        {/* Add gallery */}\n      </Space>\n    </GameOverWrapper>\n  );\n}\n","// Types\nimport type { GameState } from 'types/game';\n// Utils\nimport { GAME_COLLECTION } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { PageError } from 'components/errors';\nimport { LoadingPage } from 'components/loaders';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { Session } from 'components/session';\n// Internal\nimport { PhaseCardSelection } from './PhaseCardSelection';\nimport { PhaseAreYouARobot } from './PhaseAreYouARobot';\nimport { PhaseResults } from './PhaseResults';\nimport { PhaseGameOver } from './PhaseGameOver';\n// Sass\nimport './utils/styles.scss';\n\nfunction getActiveComponent(state: GameState) {\n  // If phase is not defined, it is likely that the game is still loading\n  if (state && !state.phase) return LoadingPage;\n\n  switch (state.phase) {\n    case PHASES.DEFAULT.LOBBY:\n      return PhaseLobby;\n    case PHASES.DEFAULT.RULES:\n      return PhaseRules;\n    case PHASES.DEFAULT.SETUP:\n      return PhaseSetup;\n    case PHASES.NAO_SOU_ROBO.CARD_SELECTION:\n      return PhaseCardSelection;\n    case PHASES.NAO_SOU_ROBO.ARE_YOU_A_ROBOT:\n      return PhaseAreYouARobot;\n    case PHASES.NAO_SOU_ROBO.RESULTS:\n      return PhaseResults;\n    case PHASES.DEFAULT.GAME_OVER:\n      return PhaseGameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionNaoSouRobo() {\n  return <Session gameCollection={GAME_COLLECTION.NAO_SOU_ROBO} getActiveComponent={getActiveComponent} />;\n}\n\nexport default SessionNaoSouRobo;\n","// Types\nimport { AchievementReference } from 'types/achievements';\n\nconst ACHIEVEMENTS = {\n  MOST_ROBOT: 'MOST_ROBOT',\n  LEAST_ROBOT: 'LEAST_ROBOT',\n  MOST_ALONE_CORRECT: 'MOST_ALONE_CORRECT',\n  MOST_ALONE_ROBOT: 'MOST_ALONE_ROBOT',\n};\n\nexport const achievementsReference: AchievementReference = {\n  [ACHIEVEMENTS.MOST_ROBOT]: {\n    icon: 'robot',\n    title: {\n      pt: 'Mais Desumano',\n      en: 'Most Inhuman',\n    },\n    description: {\n      pt: 'Votou no robô mais vezes',\n      en: 'Voted for the robot the most',\n    },\n  },\n  [ACHIEVEMENTS.LEAST_ROBOT]: {\n    icon: 'person',\n    title: {\n      pt: 'Mais Humano',\n      en: 'Most Human',\n    },\n    description: {\n      pt: 'Selecionou o robô menos vezes',\n      en: 'Selected the robot the least',\n    },\n  },\n  [ACHIEVEMENTS.MOST_ALONE_CORRECT]: {\n    icon: 'one',\n    title: {\n      pt: 'Melhor Solitário',\n      en: 'Best Lone Wolf',\n    },\n    description: {\n      pt: 'Votou corretamente mais vezes sozinho',\n      en: 'Voted correctly alone the most',\n    },\n  },\n  [ACHIEVEMENTS.MOST_ALONE_ROBOT]: {\n    icon: 'x',\n    title: {\n      pt: 'Anti-fã',\n      en: 'Anti-fan',\n    },\n    description: {\n      pt: 'Votou sozinho no robô mais vezes',\n      en: 'Vote alone for the robot the most',\n    },\n  },\n};\n\nexport default achievementsReference;\n","import { Dispatch, useState } from 'react';\n\ntype UseBooleanDictionaryReturnValue = {\n  /**\n   * The dictionary\n   */\n  dict: BooleanDictionary;\n  /**\n   * Set the dictionary\n   */\n  setDict: Dispatch<React.SetStateAction<BooleanDictionary>>;\n  /**\n   * Add or remove an entry from the dictionary\n   * @param key - The key to add or remove\n   */\n  updateDict: (key: string) => void;\n  /**\n   * Reset the dictionary to the initial state\n   */\n  reset: () => void;\n  /**\n   * The number of entries in the dictionary\n   */\n  length: number;\n  /**\n   * The list of keys in the dictionary\n   */\n  keys: string[];\n};\n\n/**\n * A dictionary of booleans\n * @param initialState - The initial state, usually an empty object\n * @param validation - A function to validate if an entry can be added to the dictionary\n * @returns - A dictionary of booleans and its functions\n */\nexport function useBooleanDictionary(\n  initialState: BooleanDictionary,\n  validation?: BooleanFunction\n): UseBooleanDictionaryReturnValue {\n  const [dict, setDict] = useState(initialState);\n\n  const updateDict = (key: string) => {\n    const isValid = !validation || validation(dict);\n    if (!dict[key] && isValid) {\n      setDict((s) => ({\n        ...s,\n        [key]: true,\n      }));\n    } else {\n      const dictCopy = { ...dict };\n      delete dictCopy[key];\n      setDict(dictCopy);\n    }\n  };\n\n  const reset = () => setDict(initialState);\n\n  const keys = Object.keys(dict);\n\n  return {\n    dict,\n    setDict,\n    updateDict,\n    reset,\n    keys,\n    length: keys.length,\n  };\n}\n","export function CaptchaIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#528fd8\"\n        d=\"M488 74l-33 33C409 47 337 8 256 8h-10v136h10c44 0 82 25 100 62l-33 33c-7 6-2 17 7 17h165c5 0 10-4 10-10V81c0-9-11-13-17-7z\"\n      ></path>\n      <path\n        fill=\"#0573ce\"\n        d=\"M488 74l-33 33c-33-44-79-76-133-91a261 261 0 0188 240h85c5 0 9-4 9-10V81c1-9-10-13-16-7zM288 10c-10-2-21-2-32-2h-10v136h10c11 0 22 2 32 5z\"\n      ></path>\n      <path\n        fill=\"#99e6fc\"\n        d=\"M246 8H81c-9 0-13 10-7 16l33 33C47 103 8 175 8 256v10h136v-10c0-44 25-82 62-100l33 33c6 7 17 2 17-7V17c0-5-4-10-10-10z\"\n      ></path>\n      <path fill=\"#62dbfb\" d=\"M144 256c0-11 2-22 5-32H10c-2 10-2 21-2 32v10h136z\"></path>\n      <path\n        fill=\"#d8ecfe\"\n        d=\"M343 343c-4-4-11-4-16 0a111 111 0 01-171-37l33-33c7-6 2-17-7-17H17c-5 0-10 4-10 10v165c0 9 11 13 17 7l33-33a248 248 0 00365 36c6-5 6-13 1-18z\"\n      ></path>\n      <path fill=\"#c4e2ff\" d=\"M423 423l-57-57a261 261 0 01-225 111 247 247 0 00281-36c6-5 6-13 1-18z\"></path>\n      <path d=\"M501 65c-6-3-14-1-19 4l-26 27A258 258 0 00256 0H81a17 17 0 00-12 30l27 26A258 258 0 000 256v175a17 17 0 0030 12l26-27c15 19 32 35 51 48a7 7 0 009-12c-20-14-38-32-53-51a8 8 0 00-11-1l-33 33h-2l-2-2V266l2-2h165l3 1-1 3-33 33c-2 2-3 6-2 9a119 119 0 00182 38c2-1 5-1 7 1l79 79a5 5 0 010 7 240 240 0 01-272 35 7 7 0 10-7 13 257 257 0 00289-37c4-3 7-8 7-14 0-5-2-11-6-15l-79-79c-8-7-19-8-27-1a105 105 0 01-157-29l30-30a17 17 0 00-13-29h-30c2-35 22-66 52-84l30 30a17 17 0 0029-13v-30c35 2 66 22 84 52l-30 30a17 17 0 0013 30h79a7 7 0 100-15h-79c-2 0-2-1-3-2l1-3 33-33c3-2 3-6 2-9-20-38-57-62-100-65V96a7 7 0 10-15 0v86l-1 3-3-1-33-33c-2-3-6-3-9-2-38 20-62 57-65 100H15a238 238 0 0196-186 8 8 0 001-11L79 19v-2l2-2h165l2 2v44a7 7 0 1016 0V17l-1-2a238 238 0 01186 96 8 8 0 0011 1l33-33h2l2 2v165l-2 3h-51a7 7 0 100 15h51c9 0 17-8 17-18V81c0-7-4-13-11-16z\"></path>\n    </svg>\n  );\n}\n","export function EnergyIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fee97d\"\n        d=\"M80 85c-2-4 2-8 6-6l68 24 4-74c0-4 5-6 8-3l57 51 29-67c2-3 7-3 9 0l29 68 57-51c3-3 8-1 8 3l1 71 71-21c4-2 7 2 6 6l-27 72h77c4 0 6 5 3 8l-53 59 69 27c3 2 3 7 0 9l-72 34 55 52c3 3 1 8-3 8l-82 1 32 71c2 4-2 7-6 6l-71-28-1 78c0 4-5 6-8 3l-54-53-32 69c-2 3-7 3-9 0l-33-72-53 55c-3 3-8 1-8-3l-2-74-70 24c-4 2-8-2-6-6l29-71-79-1c-4 0-6-5-3-8l52-53-68-33c-3-2-3-7 0-9l73-31-56-55c-3-3-1-8 3-8l74-1z\"\n      ></path>\n      <path\n        fill=\"#fedf30\"\n        d=\"M449 207c-5-17-11-34-20-49h-23l8-22c-11-15-25-29-40-40l-18 5V84c-15-9-32-16-50-21l-16 15-9-19a201 201 0 00-50 0l-8 18-16-14c-18 5-36 12-52 22l-1 18-17-6c-15 11-28 24-40 39l7 20H84c-8 14-15 30-19 46l18 18-24 11a201 201 0 000 53l19 9-14 15c4 16 11 32 19 47h25l-9 23c11 14 23 26 37 37l19-7 1 20c14 8 29 15 46 19l16-17 11 23a201 201 0 0053 0l10-20 15 15c17-4 33-11 48-19v-24l22 9c13-10 24-21 34-34l-11-24h28c8-14 14-29 19-45l-17-16 23-11a200 200 0 000-51l-20-8z\"\n      ></path>\n      <path fill=\"#fed402\" d=\"M423 256a167 167 0 11-334 0 167 167 0 01334 0z\"></path>\n      <path fill=\"#fac600\" d=\"M310 396A167 167 0 01209 95a167 167 0 10147 294c-14 5-30 7-46 7z\"></path>\n      <path fill=\"#fedf30\" d=\"M385 256a129 129 0 11-258 0 129 129 0 01258 0z\"></path>\n      <path fill=\"#fed402\" d=\"M127 256c0 69 54 125 122 128a167 167 0 01-100-199c-14 20-22 45-22 71z\"></path>\n      <path\n        fill=\"#fff9e2\"\n        d=\"M221 172l-30 75c-2 4 1 8 5 8h44c3 0 6 3 5 7l-19 84c-1 6 7 10 10 5l85-113c3-3 0-9-4-9h-21c-4 0-7-5-5-8l28-44c2-4 0-9-5-9h-88c-3 0-5 2-5 4z\"\n      ></path>\n      <path d=\"M416 256a159 159 0 01-156 159 8 8 0 101 15 174 174 0 00170-174c0-48-20-93-54-126a8 8 0 00-11 11c32 30 50 71 50 115zm-65-147A174 174 0 0081 256a175 175 0 00147 172 8 8 0 002-15 160 160 0 11112-291 8 8 0 009-13z\"></path>\n      <path d=\"M242 356l47-62a8 8 0 00-12-9l-41 55 16-77a13 13 0 00-12-16h-41l28-71h84l-26 40a13 13 0 0011 21h17l-17 22a8 8 0 0012 9l19-25c3-4 4-10 1-14s-6-7-11-7h-18l26-41c3-4 3-9 1-13s-7-7-12-7h-88c-6 0-10 3-12 8l-30 75a13 13 0 0012 18h41l-18 83a13 13 0 0013 16c4 0 8-2 10-5zM228 64c3 2 8 0 10-3l18-42 19 42a7 7 0 1014-7L268 7c-2-4-7-7-12-7-4 0-9 3-11 7l-21 47c-2 4 0 9 4 10zm153 41l43-16-16 42a7 7 0 1014 6l18-49c2-4 1-9-3-13-3-3-8-4-13-2l-48 18a7 7 0 105 14zm124 140l-48-21a8 8 0 00-6 14l42 18-42 19a8 8 0 006 14l48-21c4-2 7-7 7-12s-3-9-7-11zm-84 131a7 7 0 10-14 5l16 43-43-16a8 8 0 00-5 14l49 18 4 1c3 0 6-1 9-4s4-8 2-13zm-137 72c-4-2-8 0-10 3l-19 42-18-42a8 8 0 00-14 6l21 48c2 4 7 7 11 7s10-3 12-7l21-48c2-3 0-8-4-9zm-153-41l-43 16 16-43a7 7 0 10-14-5l-18 49c-2 4-1 9 3 13a12 12 0 0013 2l48-18a7 7 0 10-5-14zM57 289a8 8 0 004-15l-42-19 42-18a8 8 0 00-7-14L7 244c-4 2-7 7-7 11s3 10 7 12l47 21 3 1zm34-153a8 8 0 1014-5L89 88l42 16a8 8 0 006-14L88 72c-4-2-9-1-13 3s-4 8-2 13zm232-76l25-24 1 35a7 7 0 1015-1l-1-40c-1-5-3-9-8-11-4-2-9-1-13 2l-30 28a8 8 0 0011 11zm111 97c0 4 4 7 8 7l34 2-23 25a8 8 0 0010 10l28-30c4-3 5-8 3-13-2-4-6-7-11-7l-41-2c-4 0-7 3-8 8zm29 155a8 8 0 00-11 11l24 25-35 1a7 7 0 100 15l41-1c5-1 9-3 11-8 2-4 1-9-2-13zM355 434c-4 0-7 4-7 8l-2 34-25-23a8 8 0 00-10 10l30 28a12 12 0 0013 3c4-2 7-6 7-11l2-41c0-4-4-7-8-8zm-166 18l-25 24-1-35a7 7 0 10-15 0l1 41c0 5 3 9 8 11l5 1c3 0 5-1 8-3l30-28a8 8 0 10-11-11zM77 355c1-4-3-7-7-7l-34-2 23-25a8 8 0 00-11-10l-28 30c-3 3-4 8-2 13 2 4 6 7 11 7l41 2a7 7 0 007-8zM49 200a7 7 0 0010 0c3-3 4-8 1-11l-24-25 35-1a7 7 0 10-1-15l-40 1c-5 0-9 3-11 8-2 4-1 9 2 13zM157 77a8 8 0 007-7l2-34 25 23a7 7 0 1010-11l-30-28c-3-3-8-4-13-2-4 2-7 6-7 11l-2 41c0 4 3 7 8 7z\"></path>\n    </svg>\n  );\n}\n","export function EventIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffdc00\"\n        d=\"M256 208.41c91.14 0 145.64 21.64 182.25 34.64l35.46-146.92C443.18 82.84 361.86 50.46 256 50.46S68.82 82.84 38.3 96.13l35.45 146.92c36.61-13 91.1-34.64 182.25-34.64z\"\n      ></path>\n      <path\n        fill=\"#e8834d\"\n        d=\"M95.08 450.8L7.92 90a14.04 14.04 0 1127.3-6.6l87.18 360.8a14.05 14.05 0 01-27.3 6.6z\"\n      ></path>\n      <path\n        fill=\"#ffbf00\"\n        d=\"M54.68 89.3a540.34 540.34 0 00-16.39 6.83l35.46 146.92c5.17-1.83 10.7-3.84 16.64-5.94z\"\n      ></path>\n      <path\n        fill=\"#d56723\"\n        d=\"M122.39 444.21L35.22 83.4a14.04 14.04 0 00-20.74-8.81 14 14 0 016.54 8.8l87.16 360.82a14.04 14.04 0 01-6.56 15.4 14.04 14.04 0 0020.77-15.4z\"\n      ></path>\n      <path\n        fill=\"#e8834d\"\n        d=\"M416.92 450.8L504.08 90a14.04 14.04 0 10-27.3-6.6l-87.16 360.8a14.05 14.05 0 0027.3 6.6z\"\n      ></path>\n      <path\n        fill=\"#ffbf00\"\n        d=\"M421.61 237.11c5.93 2.1 11.47 4.1 16.64 5.94l35.46-146.92a540.34 540.34 0 00-16.4-6.83z\"\n      ></path>\n      <path\n        fill=\"#d56723\"\n        d=\"M494.23 73.18a13.99 13.99 0 00-10.61 1.25c5.4 3 8.36 9.3 6.84 15.56L403.3 450.81a13.99 13.99 0 01-6.84 8.97 14.04 14.04 0 0020.46-8.97l87.16-360.82a14.05 14.05 0 00-9.85-16.81z\"\n      ></path>\n      <path d=\"M496.27 65.94a21.76 21.76 0 00-26.8 15.7l-.99 4.1a562.17 562.17 0 00-108.47-32.66 7.52 7.52 0 00-2.86 14.76 546.89 546.89 0 01107.76 32.7l-32.04 132.6c-36.25-13-90.78-32.24-176.87-32.24-86.1 0-140.62 19.25-176.87 32.25L47.09 100.54C113.22 72.68 185.31 57.98 256 57.98c23.83 0 48.1 1.69 72.11 5.02a7.51 7.51 0 002.07-14.88A541.73 541.73 0 00256 42.95c-71.87 0-145.14 14.78-212.48 42.8l-1-4.11a21.75 21.75 0 00-26.79-15.7A21.49 21.49 0 00.61 91.76L61.96 345.7a7.52 7.52 0 0014.61-3.53L15.22 88.23a6.51 6.51 0 014.58-7.82 6.6 6.6 0 018.12 4.75l87.16 360.82a6.51 6.51 0 01-4.58 7.82 6.6 6.6 0 01-8.12-4.76l-18.74-77.61a7.51 7.51 0 00-14.61 3.53l18.75 77.61a21.75 21.75 0 0026.79 15.7 21.49 21.49 0 0015.12-25.82l-47.01-194.6c.13-.06.26-.1.4-.15 35.26-12.65 88.55-31.77 172.92-31.77s137.66 19.12 172.93 31.77l.4.14-47.02 194.6a21.49 21.49 0 0015.12 25.82 21.75 21.75 0 0026.8-15.69l32.17-133.2a7.52 7.52 0 00-14.6-3.52l-32.19 133.2a6.6 6.6 0 01-8.11 4.75 6.51 6.51 0 01-4.58-7.82l87.16-360.82a6.6 6.6 0 018.12-4.75 6.5 6.5 0 014.58 7.82l-47.92 198.34a7.51 7.51 0 0014.61 3.53l47.91-198.34a21.49 21.49 0 00-15.11-25.82z\"></path>\n      <path d=\"M134.38 115.31a7.51 7.51 0 00-3.78-14.55l-28.72 7.46a7.51 7.51 0 00-5.38 9.17l18.57 71.5a7.59 7.59 0 009.17 5.43l28.72-7.46a7.51 7.51 0 00-3.78-14.55l-21.44 5.57-5.52-21.23 21.45-5.57a7.51 7.51 0 10-3.78-14.54l-21.45 5.57-5.5-21.23zm137.15-15.42a7.51 7.51 0 100-15.03h-29.68a7.51 7.51 0 00-7.5 7.51v73.93a7.51 7.51 0 007.5 7.52h29.68a7.51 7.51 0 100-15.03h-22.16v-21.93h22.16a7.51 7.51 0 100-15.03h-22.16V99.88zm-74.87 77.35c6.84 0 12.7-5.13 13.52-11.93l8.65-71.64a7.51 7.51 0 00-14.92-1.8l-8.01 66.35-27.45-60.93a7.51 7.51 0 10-13.7 6.17l29.63 65.79a13.4 13.4 0 0012.28 7.99zm112.1-90.46a7.52 7.52 0 00-6.43 6.56l-8.7 73.36a7.51 7.51 0 0014.92 1.77l5.32-44.86 21.53 51.8a7.59 7.59 0 008.26 4.52 7.58 7.58 0 006.14-6.52l8.72-73.4a7.51 7.51 0 00-14.92-1.77l-5.34 44.9-21.53-51.8a7.51 7.51 0 00-7.97-4.56zm71.84 103.33c3.99.92 8.09-1.64 9-5.63l14.9-64.67 15.92 3.66a7.59 7.59 0 009.04-5.77 7.58 7.58 0 00-5.66-8.87l-46.5-10.7a7.52 7.52 0 00-3.37 14.64l15.93 3.66-14.9 64.67a7.52 7.52 0 005.64 9.01z\"></path>\n    </svg>\n  );\n}\n","export function NuclearExplosionIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ff9256\"\n        d=\"M460 462c-7.37 0-14.27 1.99-20.2 5.47C437.51 441.98 414.09 422 388 422c-20.81 0-40.66 12.72-48.18 30.81-19.59-10.66-34.1-29.77-38.28-52.97-3.259-18.064-6.229-45.575-5.54-63.84 1.01-26.498 8.068-64.582 14.52-87.77v-.01L256 234.72l-54.52 13.5v.01c6.512 23.404 13.509 61.25 14.52 87.77.689 18.256-2.278 45.761-5.54 63.84-4.18 23.2-18.69 42.31-38.28 52.97C164.66 434.72 144.81 422 124 422c-26.09 0-49.51 19.98-51.8 45.47A39.771 39.771 0 0052 462c-22.09 0-42 17.91-42 40h492c0-22.09-19.91-40-42-40z\"\n      ></path>\n      <path\n        fill=\"#fff2a0\"\n        d=\"M111.01 263.17l-.31.69C101.94 267.81 92.23 270 82 270c-38.66 0-72-31.34-72-70s33.34-70 72-70c4.77 0 9.42.48 13.92 1.38A59.937 59.937 0 0192 110c0-33.14 28.86-60 62-60 6.72 0 13.47 1.11 19.87 3.15l.13-.4C192.08 26.9 222.07 10 256 10s63.92 16.9 82 42.75l.13.4C344.53 51.11 351.28 50 358 50c33.14 0 62 26.86 62 60 0 7.53-1.39 14.74-3.92 21.38 4.5-.9 9.15-1.38 13.92-1.38 38.66 0 72 31.34 72 70s-33.34 70-72 70c-10.23 0-19.94-2.19-28.7-6.14l-1.16-.16c-6.55 3.99-14.2 6.3-22.14 6.3-20.57 0-39.52-15.53-41.75-35.5C325.071 244.623 310.726 250 296 250c-15.37 0-29.38-5.78-40-15.28-10.62 9.5-24.63 15.28-40 15.28-14.726 0-29.071-5.377-40.25-15.5-2.23 19.97-21.18 35.5-41.75 35.5-8.28 0-16.26-2.52-22.99-6.83z\"\n      ></path>\n      <circle cx=\"458\" cy=\"50\" r=\"20\" fill=\"#eefaff\"></circle>\n      <circle cx=\"52\" cy=\"90\" r=\"10\"></circle>\n      <path d=\"M330.712 250.792C339.027 267.992 357.436 280 378 280c7.947 0 15.824-1.863 23.042-5.407C410.252 278.182 419.973 280 430 280c44.241 0 82-35.776 82-80 0-44.671-38.406-80.372-82.709-79.997.472-3.295.709-6.635.709-10.003 0-38.96-33.637-70-72-70-5.252 0-10.525.587-15.753 1.722C321.445 15.482 289.677 0 256 0s-65.445 15.482-86.246 41.722C164.525 40.587 159.252 40 154 40c-38.297 0-72 30.977-72 70 0 3.368.237 6.708.709 10.003C38.655 119.622 0 155.095 0 200c0 44.229 37.763 80 82 80 10.026 0 19.746-1.818 28.955-5.406C118.173 278.141 126.034 280 134 280c20.563 0 38.972-12.009 47.288-29.207a69.796 69.796 0 0011.969 5.409c3.566 13.893 7.597 33.5 10.195 52.704C182.518 311.422 146 316.887 146 336c0 19.384 37.161 24.767 59.085 27.284-.972 11.756-2.559 24.211-4.467 34.783-2.948 16.368-11.844 30.726-24.892 40.591C164.45 422.55 144.623 412 124 412c-27.163 0-51.035 17.885-59.051 41.702A50.113 50.113 0 0052 452c-28.187 0-52 22.897-52 50 0 5.522 4.478 10 10 10h201c5.522 0 10-4.478 10-10s-4.478-10-10-10H21.979c4.606-11.404 16.672-20 30.021-20a29.937 29.937 0 0115.14 4.095 10.001 10.001 0 0015.021-7.73C83.962 448.313 102.73 432 124 432c16.63 0 33.009 10.366 38.945 24.648a10 10 0 0014.014 4.946c22.924-12.475 38.722-34.337 43.341-59.979 2.007-11.123 3.678-24.211 4.705-36.574a472.94 472.94 0 0020.994.86V382c0 5.523 4.478 10 10 10s10-4.477 10-10v-16.099a472.706 472.706 0 0020.993-.86c1.028 12.359 2.698 25.448 4.705 36.571 4.62 25.644 20.418 47.506 43.342 59.981a10.003 10.003 0 0014.014-4.946C354.991 442.366 371.37 432 388 432c21.27 0 40.038 16.313 41.84 36.365a10.002 10.002 0 0015.021 7.73 29.934 29.934 0 0115.14-4.095c13.349 0 25.414 8.596 30.021 20H301c-5.522 0-10 4.478-10 10s4.478 10 10 10h201c5.522 0 10-4.478 10-10 0-27.103-23.813-50-52-50-4.394 0-8.747.578-12.949 1.702C439.034 429.881 415.159 412 388 412c-20.623 0-40.45 10.55-51.727 26.658-13.048-9.866-21.943-24.224-24.893-40.594-1.907-10.571-3.494-23.028-4.466-34.78C328.184 360.842 366 355.407 366 336c0-19.093-35.871-24.501-57.452-27.094 2.598-19.207 6.629-38.813 10.195-52.706a69.968 69.968 0 0011.969-5.408zm-124.623 92.477c-17.835-2.116-28.82-4.987-34.935-7.266 6.051-2.252 16.883-5.091 34.421-7.21.195 2.656.341 5.194.432 7.585.08 2.108.105 4.417.082 6.891zm79.844 1.801a452.42 452.42 0 01-19.933.83V290c0-5.523-4.478-10-10-10s-10 4.477-10 10v55.899c-6.81-.137-13.47-.413-19.933-.83.427-25.405-5.603-60.51-11.307-85.089.413.007.826.019 1.24.019a69.888 69.888 0 0040-12.553A69.882 69.882 0 00296 260c.414 0 .827-.012 1.24-.019-5.691 24.522-11.735 59.659-11.307 85.089zm54.913-9.067c-6.114 2.278-17.1 5.149-34.935 7.266-.023-2.473.003-4.781.083-6.888.091-2.393.237-4.931.432-7.588 17.537 2.119 28.369 4.958 34.42 7.21zM296 240a49.934 49.934 0 01-33.333-12.733 10 10 0 00-13.334 0A49.934 49.934 0 01216 240a49.907 49.907 0 01-33.538-12.913 9.998 9.998 0 00-16.65 6.303C164.173 248.063 149.902 260 134 260c-6.147 0-12.232-1.816-17.598-5.252C107.384 248.974 102 239.723 102 230c0-5.523-4.478-10-10-10s-10 4.477-10 10c0 10.577 3.609 20.728 10.054 29.156A60.542 60.542 0 0182 260c-33.607 0-62-27.477-62-60s28.393-60 62-60c4.001 0 8.024.399 11.959 1.186a10 10 0 0011.306-13.367A49.853 49.853 0 01102 110c0-27.103 23.813-50 52-50 15.394 0 30.485 6.857 39.269 16.67 3.686 4.116 10.007 4.464 14.121.781 4.115-3.684 4.465-10.005.781-14.121-5-5.584-11.31-10.443-18.4-14.253C206.706 30.695 230.692 20 256 20s49.294 10.696 66.229 29.077c-7.09 3.81-13.401 8.668-18.4 14.253-3.684 4.115-3.334 10.437.781 14.121 4.116 3.683 10.436 3.333 14.121-.781C327.527 66.843 342.632 60 358 60c28.187 0 52 22.897 52 50 0 6.14-1.099 12.135-3.265 17.819a10 10 0 0011.306 13.367A61.112 61.112 0 01430 140c33.607 0 62 27.477 62 60s-28.393 60-62 60c-3.391 0-6.732-.287-10.012-.837C426.419 250.76 430 240.627 430 230c0-5.523-4.478-10-10-10s-10 4.477-10 10c0 10.018-5.629 19.422-15.063 25.16-5.198 3.166-11.054 4.84-16.937 4.84-15.902 0-30.173-11.937-31.812-26.61a10.003 10.003 0 00-6.398-8.243 9.997 9.997 0 00-10.252 1.94A49.928 49.928 0 01296 240z\"></path>\n      <path d=\"M256 452c5.522 0 10-4.477 10-10v-20c0-5.523-4.478-10-10-10s-10 4.477-10 10v20c0 5.523 4.478 10 10 10zM458 80c16.542 0 30-13.458 30-30s-13.458-30-30-30-30 13.458-30 30 13.458 30 30 30zm0-40c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10z\"></path>\n      <circle cx=\"256\" cy=\"502\" r=\"10\"></circle>\n    </svg>\n  );\n}\n","export function RobotIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <circle cx=\"256\" cy=\"33.02\" r=\"25.52\" fill=\"#6bc1dd\" transform=\"rotate(-76.72 255.997 33.025)\"></circle>\n      <path\n        fill=\"#3d0072\"\n        d=\"M252 33a25.51 25.51 0 0114.74-23.13A25.52 25.52 0 10256 58.54a25.35 25.35 0 0010.74-2.37A25.51 25.51 0 01252 33z\"\n        opacity=\"0.15\"\n      ></path>\n      <path\n        fill=\"#9ea7af\"\n        d=\"M107.41 131H92.34a15 15 0 00-15 15v108.83a15 15 0 0015 15h15.07zm311.26 0h-14.08v138.83h14.08a15 15 0 0015-15V146a15 15 0 00-15-15zM98 453a33.86 33.86 0 01-19-5.8v47.3a10 10 0 0010 10h28.64V453zm316 0h-19.64v51.5H423a10 10 0 0010-10v-47.3a33.84 33.84 0 01-19 5.8z\"\n      ></path>\n      <path\n        d=\"M100 494.5V453h-2a33.86 33.86 0 01-19-5.8v47.3a10 10 0 0010 10h21a10 10 0 01-10-10z\"\n        style={{ isolation: 'isolate' }}\n        fill=\"#490089\"\n        opacity=\"0.15\"\n      ></path>\n      <path\n        fill=\"#e6e9ed\"\n        d=\"M117.64 375H98a34 34 0 00-34 34v10a34 34 0 0034 34h19.64zM414 375h-19.64v78H414a34 34 0 0034-34v-10a34 34 0 00-34-34z\"\n      ></path>\n      <path\n        d=\"M117.64 452.71A34 34 0 0188 419v-10a34 34 0 0129.64-33.71V375H98a34 34 0 00-34 34v10a34 34 0 0034 34h19.64z\"\n        style={{ isolation: 'isolate' }}\n        fill=\"#490089\"\n        opacity=\"0.15\"\n      ></path>\n      <path fill=\"#9ea7af\" d=\"M222.81 309.62h66.38v22.57h-66.38z\"></path>\n      <path\n        style={{ isolation: 'isolate' }}\n        fill=\"#490089\"\n        d=\"M222.81 309.62H247v22.57h-24.19z\"\n        opacity=\"0.15\"\n      ></path>\n      <path\n        fill=\"#c5ccd3\"\n        d=\"M334.09 355.25v-14.43a8.65 8.65 0 00-8.62-8.63H183.62a8.65 8.65 0 00-8.62 8.63v14.43z\"\n      ></path>\n      <path\n        d=\"M204.91 355.25v-14.43a8.65 8.65 0 018.62-8.63h-29.91a8.65 8.65 0 00-8.62 8.63v14.43z\"\n        style={{ isolation: 'isolate' }}\n        fill=\"#490089\"\n        opacity=\"0.15\"\n      ></path>\n      <path\n        fill=\"#9ea7af\"\n        d=\"M379.36 355.25H132.64a15 15 0 00-15 15V504.5h276.72V370.25a15 15 0 00-15-15z\"\n      ></path>\n      <path\n        fill=\"#c5ccd3\"\n        d=\"M404.59 294.62a15 15 0 01-15 15H122.41a15 15 0 01-15-15V105.2a15 15 0 0115-15h267.18a15 15 0 0115 15z\"\n      ></path>\n      <path\n        fill=\"#3d0072\"\n        d=\"M136 294.62V105.2a15 15 0 0115-15h-28.59a15 15 0 00-15 15v189.42a15 15 0 0015 15H151a15 15 0 01-15-15z\"\n        opacity=\"0.15\"\n      ></path>\n      <path\n        fill=\"#046699\"\n        d=\"M369.09 200.19A51.81 51.81 0 01317.28 252H194.72a51.81 51.81 0 01-51.81-51.81 51.81 51.81 0 0151.81-51.81h122.56a51.81 51.81 0 0151.81 51.81z\"\n      ></path>\n      <path\n        fill=\"#3d0072\"\n        d=\"M172 200.19a51.81 51.81 0 0151.81-51.81h-29.09a51.81 51.81 0 100 103.62h29.09A51.81 51.81 0 01172 200.19z\"\n        opacity=\"0.15\"\n      ></path>\n      <ellipse cx=\"189.55\" cy=\"200.19\" fill=\"#6bc1dd\" rx=\"20.15\" ry=\"20.23\"></ellipse>\n      <ellipse cx=\"322.84\" cy=\"200.19\" fill=\"#6bc1dd\" rx=\"20.15\" ry=\"20.23\"></ellipse>\n      <path\n        fill=\"#3d0072\"\n        d=\"M161.29 355.25h-28.65a15 15 0 00-15 15V504.5h28.65V370.25a15 15 0 0115-15z\"\n        opacity=\"0.15\"\n      ></path>\n      <path fill=\"#046699\" d=\"M345.38 504.5v-87.18a10 10 0 00-10-10H176.62a10 10 0 00-10 10v87.18z\"></path>\n      <path fill=\"#ffc502\" d=\"M274 504.5v-28.12a3 3 0 00-3-3h-30a3 3 0 00-3 3v28.12z\"></path>\n      <circle cx=\"308.82\" cy=\"442.18\" r=\"11.18\" fill=\"#5dc647\"></circle>\n      <path\n        fill=\"#6bc1dd\"\n        d=\"M274 450.35a3 3 0 01-3 3h-30a3 3 0 01-3-3V434a3 3 0 013-3h30a3 3 0 013 3z\"\n      ></path>\n      <path d=\"M414 367.5h-12.32a22.53 22.53 0 00-22.32-19.75h-37.77v-6.93a16.14 16.14 0 00-16.12-16.13h-28.78v-7.57h92.9a22.53 22.53 0 0022.5-22.5v-17.29h6.58a22.53 22.53 0 0022.5-22.5V146a22.53 22.53 0 00-22.5-22.5h-6.58v-18.3a22.53 22.53 0 00-22.5-22.5H355a7.5 7.5 0 000 15h34.59a7.51 7.51 0 017.5 7.5v189.42a7.51 7.51 0 01-7.5 7.5H122.41a7.51 7.51 0 01-7.5-7.5V105.2a7.51 7.51 0 017.5-7.5H313a7.5 7.5 0 000-15h-49.5V65.17a33 33 0 10-15 0V82.7H122.41a22.53 22.53 0 00-22.5 22.5v18.3h-7.57a22.53 22.53 0 00-22.5 22.5v108.83a22.53 22.53 0 0022.5 22.5h7.57v17.29a22.53 22.53 0 0022.5 22.5h92.9v7.57h-31.69a16.14 16.14 0 00-16.12 16.13v6.93h-34.86a22.53 22.53 0 00-22.32 19.75H98A41.55 41.55 0 0056.5 409v10a41.42 41.42 0 0015 31.91v43.59A17.52 17.52 0 0089 512h334a17.52 17.52 0 0017.5-17.5v-43.59a41.42 41.42 0 0015-31.91v-10a41.55 41.55 0 00-41.5-41.5zm-1.91-229h6.58a7.51 7.51 0 017.5 7.5v108.83a7.52 7.52 0 01-7.5 7.5h-6.58zM238 33a18 18 0 1118 18 18 18 0 01-18-18zM99.91 262.33h-7.57a7.52 7.52 0 01-7.5-7.5V146a7.51 7.51 0 017.5-7.5h7.57zM110.14 497H89a2.53 2.53 0 01-2.5-2.5v-35.63A41.56 41.56 0 0098 460.5h12.14zm0-51.5H98A26.53 26.53 0 0171.5 419v-10A26.53 26.53 0 0198 382.5h12.14zm120.17-128.38h51.38v7.57h-51.38zM266.5 497h-21v-16.12h21zm71.38 0H281.5v-20.62a10.51 10.51 0 00-10.5-10.5h-30a10.51 10.51 0 00-10.5 10.5V497h-56.38v-79.68a2.54 2.54 0 012.5-2.5h158.76a2.54 2.54 0 012.5 2.5zm87.62-2.5a2.53 2.53 0 01-2.5 2.5h-21.14v-36.5H414a41.56 41.56 0 0011.5-1.63zm15-75.5a26.53 26.53 0 01-26.5 26.5h-12.14V429a7.5 7.5 0 00-15 0v68h-34v-79.68a17.53 17.53 0 00-17.5-17.5H176.62a17.53 17.53 0 00-17.5 17.5V497h-34V370.25a7.51 7.51 0 017.5-7.5H220a7.5 7.5 0 000-15h-37.5v-6.93a1.15 1.15 0 011.12-1.13h141.85a1.15 1.15 0 011.12 1.13v6.93H264a7.5 7.5 0 000 15h115.36a7.51 7.51 0 017.5 7.5V390a7.5 7.5 0 0015 0v-7.5H414a26.53 26.53 0 0126.5 26.5z\"></path>\n      <path d=\"M194.72 140.88a59.31 59.31 0 100 118.62h122.56a59.31 59.31 0 000-118.62zm166.87 59.31a44.36 44.36 0 01-44.31 44.31H194.72a44.31 44.31 0 110-88.62h122.56a44.36 44.36 0 0144.31 44.31z\"></path>\n      <path d=\"M189.55 172.47a27.73 27.73 0 1027.64 27.72 27.71 27.71 0 00-27.64-27.72zm0 40.45a12.73 12.73 0 1112.64-12.73 12.7 12.7 0 01-12.64 12.73zm105.64-12.73a27.65 27.65 0 1027.65-27.73 27.72 27.72 0 00-27.65 27.73zm27.65-12.72a12.73 12.73 0 11-12.65 12.72 12.7 12.7 0 0112.65-12.72zM214 423.84h-23a7.5 7.5 0 100 15h23a7.5 7.5 0 000-15zm-23 32.77h13a7.5 7.5 0 000-15h-13a7.5 7.5 0 000 15zm23 2.78h-23a7.5 7.5 0 000 15h23a7.5 7.5 0 000-15zm-13 17.77h-10a7.5 7.5 0 000 15h10a7.5 7.5 0 100-15zm116.3-7.66h-16.95a7.5 7.5 0 000 15h16.95a7.5 7.5 0 000-15zm-8.48-46a18.68 18.68 0 1018.68 18.68 18.69 18.69 0 00-18.68-18.68zm0 22.35a3.68 3.68 0 113.68-3.67 3.68 3.68 0 01-3.68 3.67zM271 423.5h-30a10.51 10.51 0 00-10.5 10.5v16.35a10.51 10.51 0 0010.5 10.5h30a10.51 10.51 0 0010.5-10.5V434a10.51 10.51 0 00-10.5-10.5zm-4.5 22.35h-21v-7.35h21z\"></path>\n    </svg>\n  );\n}\n","export function SealOfApprovalIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path fill=\"#de5540\" d=\"M337 273l104 176-56-8-32 48-104-176z\"></path>\n      <path fill=\"#de5540\" d=\"M177 273L73 449l56-8 32 48 104-176z\"></path>\n      <path\n        fill=\"#ffb431\"\n        d=\"M287.43 66.41A54 54 0 00322 75.66a53.91 53.91 0 0152.7 30.42 53.88 53.88 0 0025.27 25.27 53.91 53.91 0 0130.42 52.7 54 54 0 009.25 34.52 53.9 53.9 0 010 60.86 54 54 0 00-9.3 34.57 53.91 53.91 0 01-30.42 52.7 53.88 53.88 0 00-25.27 25.27A53.91 53.91 0 01322 422.34a54 54 0 00-34.52 9.25 53.9 53.9 0 01-60.86 0 54 54 0 00-34.52-9.25 53.91 53.91 0 01-52.7-30.42 53.88 53.88 0 00-25.27-25.27A53.91 53.91 0 0183.66 314a54 54 0 00-9.25-34.52 53.9 53.9 0 010-60.86 54 54 0 009.25-34.52 53.91 53.91 0 0130.42-52.7 53.88 53.88 0 0025.27-25.27 53.91 53.91 0 0152.7-30.42 54 54 0 0034.52-9.25 53.9 53.9 0 0160.86-.05z\"\n      ></path>\n      <circle cx=\"257\" cy=\"249\" r=\"144\" fill=\"#f99e0c\"></circle>\n      <path fill=\"#426887\" d=\"M161 200.68h72.26V313H161z\"></path>\n      <path\n        fill=\"#fdc8a2\"\n        d=\"M289.53 201.24l9.72-30.31a17.64 17.64 0 00-11.42-22.18c-.36-.12-.73-.22-1.1-.32a17.65 17.65 0 00-20.06 9.23L257 177l-23.74 24v112H321a24 24 0 0024-24v-48l6-11.91a19.37 19.37 0 00-17.31-28h-.08z\"\n      ></path>\n      <path fill=\"#2d475c\" d=\"M197 265a12 12 0 1012 12 12 12 0 00-12-12z\"></path>\n      <path\n        fill=\"#fade8d\"\n        d=\"M17 249h24v16H17zM39.33 50.66l11.31-11.31 60 60-11.32 11.3zm-27.99-28l11.31-11.31 16 16-11.31 11.3zm2.55 137.72l6.37-14.69 48 20.82-6.34 14.69zm-.23 193.3l48-22.4 6.77 14.49-48 22.41zm-2.38 137.63l40-40 11.32 11.31-40 40zM249 465h16v32h-16zm0-448h16v16h-16zm-103.27 3.13l14.69-6.37 16 36.94-14.69 6.37zM473 249h24v16h-24zM403.29 99.38l60-60L474.6 50.7l-60 60zm72.01-71.97l16-16 11.31 11.31-16 16zm-29.22 138.94l48-20.82 6.37 14.69-48 20.82zM445.61 346l6.77-14.49 48 22.4-6.77 14.5zm5.64 116.66l11.31-11.31 40 40-11.31 11.31zM337.81 50.61l16-36.94L368.52 20 352.5 57z\"\n      ></path>\n      <path d=\"M75.68 184.66a46.09 46.09 0 01-7.88 29.4 61.53 61.53 0 000 69.88 46.09 46.09 0 017.88 29.4 61.49 61.49 0 0033 59.55l-42.58 72a8 8 0 008 12l51-7.29 29.2 43.81A8 8 0 00161 497h.22a8 8 0 006.67-3.93L204.58 431a46 46 0 0117.48 7.21 61.53 61.53 0 0069.88 0 46 46 0 0117.48-7.21l36.69 62.09a8 8 0 006.67 3.93h.22a8 8 0 006.66-3.56l29.2-43.81 51 7.29a8 8 0 008-12l-37.82-64-13.77 8.14 29.34 49.65-39.5-5.64a8 8 0 00-7.79 3.48L353.41 474l-25.7-43.49a61.47 61.47 0 0054.15-35.1 46.12 46.12 0 0121.52-21.52 61.54 61.54 0 0034.94-60.52 46.09 46.09 0 017.88-29.4 61.53 61.53 0 000-69.88 46.07 46.07 0 01-7.88-29.4 61.54 61.54 0 00-34.94-60.52 46.12 46.12 0 01-21.52-21.52 61.54 61.54 0 00-60.52-34.94 46.07 46.07 0 01-29.4-7.88 61.53 61.53 0 00-69.88 0 46.07 46.07 0 01-29.4 7.88 61.54 61.54 0 00-60.52 34.94 46.07 46.07 0 01-21.52 21.52 61.54 61.54 0 00-34.94 60.53zM160.59 474l-24.93-37.4a8 8 0 00-7.79-3.48l-39.5 5.64 33.7-57a46 46 0 0110.07 13.69 61.47 61.47 0 0054.15 35.1zm-14-364.43a45.63 45.63 0 0144.87-25.91A62.15 62.15 0 00231.09 73a45.63 45.63 0 0151.82 0 62.15 62.15 0 0039.65 10.62 45.65 45.65 0 0144.88 25.91 62.06 62.06 0 0029 29 45.63 45.63 0 0125.91 44.88A62.14 62.14 0 00433 223.09a45.63 45.63 0 010 51.82 62.15 62.15 0 00-10.62 39.65 45.65 45.65 0 01-25.91 44.88 62 62 0 00-29 29 45.63 45.63 0 01-44.88 25.91A62.15 62.15 0 00282.91 425a45.63 45.63 0 01-51.82 0 62.19 62.19 0 00-35-10.8q-2.32 0-4.65.18a45.62 45.62 0 01-44.88-25.91 62.06 62.06 0 00-29-29 45.65 45.65 0 01-25.91-44.88A62.15 62.15 0 0081 274.91a45.63 45.63 0 010-51.82 62.15 62.15 0 0010.62-39.65 45.63 45.63 0 0125.91-44.87 62.12 62.12 0 0029-29zM105 249a150.58 150.58 0 0131.68-92.89l12.66 9.79A134.65 134.65 0 00121 249c0 75 61 136 136 136s136-61 136-136-61-136-136-136a134.81 134.81 0 00-98.22 41.93l-11.56-11.06A150.72 150.72 0 01257 97c83.81 0 152 68.19 152 152s-68.19 152-152 152-152-68.19-152-152zm199.86-95.92a25.64 25.64 0 00-45.34 1l-9.1 18.2-20.18 20.4H161a8 8 0 00-8 8V313a8 8 0 008 8h120v-16h-39.74V204.29l21.43-21.66a8.16 8.16 0 001.46-2l9.68-19.34a9.64 9.64 0 0117.8 7.25l-9.72 30.31a8 8 0 001.17 7.17 8.13 8.13 0 006.48 3.27l44-.17a11.36 11.36 0 0110.16 16.44l-6 11.91A8.08 8.08 0 00337 241v48a16 16 0 01-16 16h-24v16h24a32 32 0 0032-32v-46.11l5.11-10.22a27.36 27.36 0 00-24.46-39.6h-.11l-33 .13 6.36-19.82a25.79 25.79 0 00-2-20.3zM225.26 305H169v-96.32h56.26zM185 277a12 12 0 1112 12 12 12 0 01-12-12zM17 265v-16h24v16zm82.34-154.34l-60-60 11.32-11.32 60 60zm-72-72l-16-16 11.32-11.32 16 16zm34.48 142.48l-48-20.8 6.36-14.68 48 20.8zm-48.2 172.61l48-22.4 6.77 14.5-48 22.4zm9 148.91l-11.28-11.32 40-40 11.32 11.32zM265 465v32h-16v-32zm0-432h-16V17h16zM161.66 57.1l-16-36.92 14.68-6.37 16 36.93zM497 265h-24v-16h24zm-82.34-154.34l-11.32-11.32 60-60 11.32 11.32zm72-72l-11.32-11.32 16-16 11.32 11.32zm13.52 121.68l-48 20.8-6.36-14.68 48-20.8zm-47.8 171l48 22.4-6.77 14.5-48-22.4zm50.27 160l-11.31 11.32-40-40 11.31-11.32zM352.34 57.1l-14.68-6.36 16-36.93 14.68 6.37z\"></path>\n    </svg>\n  );\n}\n","export function StarIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffb820\"\n        d=\"M491.64 188.725l-153.53-22.31-68.66-139.12c-2.75-5.57-8.1-8.36-13.45-8.36l.02 400.2 137.3 72.19c11.01 5.78 23.86-3.56 21.76-15.81l-26.22-152.92 111.09-108.29c8.91-8.68 3.99-23.79-8.31-25.58z\"\n      ></path>\n      <path\n        fill=\"#ffd06a\"\n        d=\"M356.62 312.125s23.68 138.03 23.76 138.49c-.08-.01-122.45-31-124.36-31.48-.02-.01-137.34 72.19-137.34 72.19-11.01 5.78-23.86-3.56-21.76-15.81l26.22-152.92-111.09-108.29c-8.91-8.68-3.99-23.79 8.31-25.58l153.53-22.31 68.66-139.12c2.75-5.57 8.1-8.36 13.45-8.36l62.19 174.9 139.06 20.21z\"\n      ></path>\n      <path d=\"M510.883 196.615c-2.666-8.204-9.625-14.07-18.16-15.311l-149.632-21.743-66.918-135.588c-3.817-7.735-11.547-12.54-20.173-12.54s-16.356 4.805-20.173 12.54L168.91 159.561 19.278 181.305c-8.537 1.24-15.495 7.106-18.161 15.311s-.484 17.04 5.693 23.062l108.274 105.541-9.911 57.786a7.501 7.501 0 006.124 8.66 7.499 7.499 0 008.66-6.125l10.578-61.672a7.502 7.502 0 00-2.157-6.639L17.28 208.934c-2.089-2.036-2.798-4.909-1.897-7.684.902-2.775 3.164-4.683 6.052-5.103l153.534-22.31a7.498 7.498 0 005.647-4.103l68.662-139.125c1.292-2.617 3.804-4.179 6.722-4.179s5.431 1.562 6.722 4.179l68.663 139.125a7.5 7.5 0 005.647 4.103l153.534 22.31c2.888.42 5.15 2.327 6.051 5.102.902 2.775.193 5.648-1.896 7.685L383.622 317.228a7.499 7.499 0 00-2.157 6.639l26.227 152.913c.494 2.876-.621 5.617-2.982 7.332-2.361 1.714-5.312 1.929-7.895.57L259.49 412.487a7.504 7.504 0 00-6.98 0l-137.325 72.195c-2.583 1.358-5.535 1.144-7.894-.57-2.361-1.715-3.476-4.456-2.982-7.332l10.578-61.673a7.501 7.501 0 00-6.124-8.66 7.501 7.501 0 00-8.66 6.125l-10.578 61.673c-1.458 8.502 1.971 16.933 8.95 22.003 3.943 2.865 8.557 4.32 13.201 4.32a22.51 22.51 0 0010.49-2.608L256 427.6l133.834 70.36c7.635 4.014 16.713 3.357 23.692-1.712 6.979-5.07 10.408-13.502 8.949-22.003l-25.56-149.027L505.19 219.677c6.177-6.022 8.359-14.859 5.693-23.062z\"></path>\n    </svg>\n  );\n}\n","export function ThiefIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#6f6571\"\n        d=\"M249.689 85.146S85.256 147.319 85.256 211.5s101.141 211.245 164.433 211.245 173.354-144 173.354-205.277S249.689 85.146 249.689 85.146z\"\n      ></path>\n      <path\n        fill=\"#635a63\"\n        d=\"M423.041 217.47c0 2.04-.12 4.17-.36 6.38-20.26-17.31-75.16-62.95-86.55-70.95-35.54-24.95-69.52-40.4-80.63-40.4s-45.09 15.45-80.63 40.4c-8.23 5.78-56.2 45.4-88.35 72.21-.83-4.85-1.26-9.41-1.26-13.61 0-64.18 164.43-126.35 164.43-126.35s173.35 71.04 173.35 132.32z\"\n      ></path>\n      <path\n        fill=\"#f2d1a5\"\n        d=\"M373.031 406.71c-.69.53-1.43 1.01-2.21 1.43-35.85 19.37-75.18 29.06-114.5 29.06-39.33 0-78.64-9.68-114.49-29.06-.83-.45-1.61-.95-2.33-1.52l14.86-2.53c9.34-2.46 16.8-9.24 20.25-18.02.65-1.67 6.205-3.931 6.555-5.731l9.025-74.789 132.51 6.39 1.089 16.051 3.491 7.919 8.59 44.95c.37 1.88.91 3.7 1.62 5.44a29.94 29.94 0 0020.15 17.79z\"\n      ></path>\n      <path\n        fill=\"#df646e\"\n        d=\"M479.616 504.5H333.371l-8.618-2.95-7.112 2.95h-122.12l-7.997-.913-7.893.913H39.251l-5.983-.719c-6.213 0-10.922-5.606-9.85-11.726l3.369-11.326c5.84-33.32 32.02-59.37 65.37-65.05l49.706-9.059c.72.57 75.073 28.93 114.403 28.93 39.32 0 77.582-9.579 113.432-28.949.78-.42 3.333.109 3.333.109l48.84 8.32c33.35 5.68 59.53 31.73 65.37 65.05l2.225 12.694c1.072 6.12-3.637 11.726-9.85 11.726z\"\n      ></path>\n      <path\n        fill=\"#f2bb88\"\n        d=\"M322.701 311.94l-132.51-6.39-14.06 75.31a29.977 29.977 0 01-21.77 23.23l-14.86 2.53c6.795 4.353 16.715 8.782 25.89 12.67 11.77-4.98 21.24-14.58 25.97-26.64 1.09-2.79 1.9-5.58 2.44-8.36l5.181-30.66c.471-2.787 3.617-4.234 6.021-2.748 17.141 10.592 34.265 15.968 50.997 15.968 18.93 0 38.36-6.86 57.75-20.39 4.57-3.19 9.08-6.71 13.53-10.55z\"\n      ></path>\n      <path\n        fill=\"#dc4955\"\n        d=\"M165.391 419.29a53.761 53.761 0 01-7.22 2.41l-65.02 11.07c-25.79 4.4-46.15 24.66-50.66 50.42l-3.24 21.31h-6.86c-6.22 0-10.93-5.61-9.85-11.73l2.22-12.69c5.84-33.32 32.02-59.37 65.37-65.05l49.37-8.41 15.904 3.94z\"\n      ></path>\n      <path\n        fill=\"#f2d1a5\"\n        d=\"M249.689 197.922c0 9.264-26.783 29.476-50.123 29.476s-34.398-13.197-34.398-29.476 11.058-29.476 34.398-29.476 50.123 20.213 50.123 29.476zm12.623 0c0-9.264 26.783-29.476 50.123-29.476s34.398 13.197 34.398 29.476-11.058 29.476-34.398 29.476-50.123-20.212-50.123-29.476zm-56.079 85.873c0-20.417 30.347-35.433 50.047-35.433s50.047 15.016 50.047 35.433-27.484 40.861-50.047 40.861-50.047-20.444-50.047-40.861z\"\n      ></path>\n      <path\n        fill=\"#857e87\"\n        d=\"M256.001 52c-72.68 0-115.33 55.17-115.33 139.03 0 48.84.95 69.28 20.89 96.88 27.5 38.08 61.75 63.94 94.44 63.94s66.94-25.86 94.44-63.94c19.94-27.6 20.89-48.04 20.89-96.88 0-83.86-42.65-139.03-115.33-139.03zm-85.96 145.92c0-14.4 9.78-26.08 30.43-26.08s44.35 17.89 44.35 26.08c0 8.2-23.7 26.08-44.35 26.08s-30.43-11.68-30.43-26.08zm86.24 122.68c-20.16 0-44.72-18.27-44.72-36.52 0-18.24 27.12-31.66 44.72-31.66s44.72 13.42 44.72 31.66c0 18.25-24.56 36.52-44.72 36.52zm55.25-96.6c-20.65 0-44.35-17.88-44.35-26.08 0-8.19 23.7-26.08 44.35-26.08s30.43 11.68 30.43 26.08-9.78 26.08-30.43 26.08z\"\n      ></path>\n      <path\n        fill=\"#6f6571\"\n        d=\"M256.001 52c-28.91 0-53.07 8.73-71.68 24.52 23.03-12.49 50.03-24.02 71.18-24.02 21.96 0 50.24 12.44 73.83 25.46-18.82-16.7-43.56-25.96-73.33-25.96z\"\n      ></path>\n      <path\n        fill=\"#6f6571\"\n        d=\"M371.121 181.01c-8.7-8.23-20.21-17.72-34.99-28.11-35.54-24.95-69.52-40.4-80.63-40.4s-45.09 15.45-80.63 40.4c-14.2 9.98-25.38 19.13-33.95 27.13 2.1-45.33 17.3-81.36 43.4-103.51 23.03-12.49 50.03-24.02 71.18-24.02 21.96 0 50.24 12.44 73.83 25.46 25.28 22.41 39.91 58.23 41.79 103.05z\"\n      ></path>\n      <path\n        fill=\"#e27f86\"\n        d=\"M438.501 211.5c0-102-77-204-182.5-204s-183.5 102-183.5 204l60-73 123-56 153 80z\"\n      ></path>\n      <path\n        fill=\"#df646e\"\n        d=\"M411.221 157.52c-15.75-16.75-35.47-31.78-49.23-41.45-10.67-7.492-62.195-42.594-97.989-47.898 0 0-5.796-.129-8.501-.129-35.52 0-93.555 41.782-105.105 49.892-13.76 9.67-32.911 24.094-48.661 40.844-18.36 19.51-27.413 35.9-27.413 52.72 0 26.14 13.201 62.188 37.651 101.408 19.4 31.12 107.618 118.702 107.618 118.702l35.91.89 35.91-.89 1.47-1.09c53.41-39.63 87.74-85.04 107.14-116.16 24.45-39.22 38.48-76.72 38.48-102.86 0-16.819-8.92-34.469-27.28-53.979zm-136.22 248.91l-19.5 11.07-19.5-11.07c-87.5-64.93-133.5-157.93-133.5-194.93s119-114 153-114 153 77 153 114-46 130-133.5 194.93z\"\n      ></path>\n      <path\n        fill=\"#dc4955\"\n        d=\"M236.591 431.61h-17l-1.47-1.09c-53.41-39.63-87.74-85.04-107.14-116.16-24.45-39.22-38.48-76.72-38.48-102.86 0-16.82 8.92-34.47 27.28-53.98 15.75-16.75 35.47-31.78 49.23-41.45 11.55-8.11 70.97-48.57 106.49-48.57 2.7 0 5.572.225 8.522.675-35.79 5.29-87.342 40.405-98.012 47.895-13.76 9.67-33.48 24.7-49.23 41.45-18.36 19.51-27.28 37.16-27.28 53.98 0 26.14 14.03 63.64 38.48 102.86 13.402 21.498 34.428 49.606 63.448 78.126 12.989 12.765 27.178 25.78 43.692 38.034z\"\n      ></path>\n      <path\n        fill=\"#e27f86\"\n        d=\"M256.322 437.202c-30.876 0-61.743-5.969-90.932-17.91 0 0-3.772-3.315-6.105-4.356-5.581-2.492-10.171-3.861-15.606-6.798-8.307-4.489-11.975-13.877-7.486-22.183 4.491-8.308 13.546-10.683 21.853-6.193 10.056 5.435 19.383 9.388 29.972 13.046.774.267 3.409-.321 3.409-.321 53.569 17.795 112.406 12.988 163.131-14.427 8.307-4.489 18.68-1.395 23.17 6.912 4.489 8.307 1.395 18.68-6.912 23.17-35.841 19.37-75.174 29.06-114.494 29.06z\"\n      ></path>\n      <path\n        fill=\"#df646e\"\n        d=\"M191.431 392.48c-.03.06-.05.11-.07.17-4.73 12.06-14.2 21.66-25.97 26.64-4.04-2.184-4.834-.779-25.89-12.67-6.52-5.02-8.63-14.17-4.59-21.65 4.5-8.31 14.87-11.4 23.17-6.91 5.42 2.93 10.94 5.6 16.53 8.01 5.53 2.39 11.15 4.53 16.82 6.41z\"\n      ></path>\n      <path d=\"M498.908 503.206l-4.278-24.417c-3.305-18.852-12.44-35.727-26.42-48.803a7.5 7.5 0 00-10.247 10.955c11.583 10.834 19.153 24.817 21.891 40.437l4.278 24.416c.483 2.84 4.102 6.873 8.683 6.093a7.5 7.5 0 006.093-8.681zM256.28 244.921c-20.79 0-52.221 15.62-52.221 39.163 0 23.29 29.202 44.012 52.221 44.012s52.221-20.722 52.221-44.012c0-23.543-31.431-39.163-52.221-39.163zm0 68.175c-17.045 0-37.221-15.726-37.221-29.012 0-12.87 23.198-24.163 37.221-24.163s37.221 11.293 37.221 24.163c0 13.286-20.176 29.012-37.221 29.012z\"></path>\n      <path d=\"M273.67 276.378h-34.78c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h34.78a7.5 7.5 0 000-15zm-21.353-78.456c0-14.435-29.557-33.578-51.845-33.578-23.043 0-37.933 13.18-37.933 33.578s14.89 33.578 37.933 33.578c22.289 0 51.845-19.143 51.845-33.578zM200.473 216.5c-14.574 0-22.933-6.771-22.933-18.578 0-11.655 8.158-18.391 22.389-18.562v17.61c0 4.142 3.357 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-14.684c11.113 4.245 20.424 11.982 22.223 15.635-2.551 5.181-20.196 18.579-36.679 18.579zm59.212-18.578c0 14.435 29.557 33.578 51.845 33.578 23.043 0 37.933-13.18 37.933-33.578s-14.89-33.578-37.933-33.578c-22.289.001-51.845 19.143-51.845 33.578zm52.388-18.561c14.231.171 22.389 6.906 22.389 18.562 0 11.806-8.358 18.578-22.933 18.578-16.483 0-34.128-13.398-36.679-18.578 1.799-3.653 11.109-11.39 22.223-15.635v14.684c0 4.142 3.357 7.5 7.5 7.5s7.5-3.358 7.5-7.5z\"></path>\n      <path d=\"M446.001 211.5c0-52.146-19.488-105.033-53.468-145.101C356.222 23.581 307.733 0 256.001 0c-42.874 0-83.468 16.009-117.393 46.297a7.5 7.5 0 009.99 11.19C179.731 29.692 216.87 15 256.001 15c86.298 0 149.234 69.054 168.681 146.474-15.064-18.847-42.448-40.553-58.381-51.542C349.617 98.218 292.322 60 255.501 60s-94.116 38.218-110.803 49.934c-16.33 11.403-41.83 31.291-58.216 51.343 7.323-28.541 20.641-55.914 38.895-79.051a7.5 7.5 0 10-11.775-9.291C82.716 112.083 65.001 162.588 65.001 211.5c0 27.506 14.439 66.443 39.616 106.827 11.125 17.848 23.77 35.079 37.702 51.416-6.017 1.965-10.979 6.072-14.002 11.663-3.414 6.318-3.768 13.482-1.576 19.782l-37.867 6.447c-36.394 6.196-65.128 34.791-71.501 71.154l-4.278 24.416a7.5 7.5 0 0014.776 2.589l4.278-24.416c5.28-30.13 29.088-53.823 59.243-58.957l46.426-7.904c11.913 6.455 27.253 13.221 41.091 17.709-5.705 30.208-5.213 54.682 1.482 74.657a7.503 7.503 0 007.11 5.118 7.5 7.5 0 007.113-9.886c-5.757-17.173-6.158-38.703-1.233-65.608 20.534 5.406 41.718 8.194 62.943 8.194 21.342 0 42.644-2.818 63.284-8.283 4.942 26.947 4.546 48.505-1.217 65.698a7.5 7.5 0 0014.223 4.768c6.704-20 7.19-44.508 1.462-74.768a249.413 249.413 0 0040.309-17.376c.086-.046.167-.097.252-.145l45.976 7.828a72.976 72.976 0 019.945 2.423c2.991.878 7.328-.097 9.429-4.858a7.5 7.5 0 00-4.858-9.429 88.07 88.07 0 00-11.998-2.923l-37.261-6.344c2.232-6.326 1.892-13.534-1.541-19.886-3.348-6.193-8.988-10.366-15.306-12.053 13.797-16.217 26.323-33.314 37.364-51.025 25.175-40.385 39.614-79.322 39.614-106.828zm-74.87 177.038c2.517 4.655.775 10.49-3.879 13.006-34.086 18.421-72.444 28.158-110.93 28.158s-76.846-9.737-110.93-28.159c-4.654-2.516-6.132-9.43-3.88-13.004s5.02-6.881 13.006-3.88c63.745 34.451 139.859 34.453 203.606 0 4.656-2.516 10.492-.777 13.007 3.879zM343.89 375.1a199.855 199.855 0 01-35.075 13.289c35.982-32.472 60.023-65.934 74.502-89.815 20.466-33.756 32.684-66.307 32.684-87.073 0-27.99-49.231-64.862-70.398-79.416a7.5 7.5 0 00-8.498 12.36c9.093 6.252 17.465 12.54 24.961 18.682 1.165 8.88 1.761 18.258 1.761 27.906 0 48.694-.942 66.839-19.465 92.488-27.917 38.657-60.123 60.828-88.361 60.828-3.56 0-7.232-.354-10.918-1.054a7.5 7.5 0 10-2.797 14.737c4.605.874 9.22 1.317 13.715 1.317 20.353 0 42.036-9.245 62.871-26.255l4.002 20.432a388.878 388.878 0 01-43.392 40.027c-.253.2-.483.417-.704.641a198.045 198.045 0 01-46.69-.192 388.485 388.485 0 01-43.134-39.592l4.166-21.266c4.635 3.803 9.311 7.228 13.993 10.224a7.493 7.493 0 0010.359-2.275 7.5 7.5 0 00-2.275-10.359c-16.373-10.476-32.818-26.801-47.558-47.211-18.522-25.649-19.465-43.794-19.465-92.488-.076-8.519.745-19.871 1.809-28.738 6.297-5.127 13.184-10.341 20.578-15.532C204.467 122.954 240.983 105 255.501 105c9.443 0 29.514 8.083 52.378 21.093a7.5 7.5 0 107.418-13.037C300.165 104.445 272.275 90 255.501 90c-20.866 0-62.025 22.344-93.561 44.487-20.126 14.133-66.939 49.929-66.939 77.013 0 20.828 12.275 53.473 32.837 87.325 14.385 23.686 38.156 56.75 73.62 88.911a200.006 200.006 0 01-35.618-14.093c-18.232-19.646-34.668-41.07-48.494-63.25-23.733-38.07-37.345-74.114-37.345-98.892 0-14.816 8.257-30.792 25.244-48.842 15.269-16.238 34.572-30.96 48.075-40.45C184.338 100.431 229.71 75 255.501 75s71.163 25.431 102.178 47.206c13.506 9.491 32.81 24.213 48.08 40.454 16.985 18.048 25.242 34.024 25.242 48.84 0 24.778-13.611 60.822-37.345 98.892-14.036 22.517-31.206 44.821-49.766 64.708zm34.567-197.426c14.216 13.829 22.544 25.954 22.544 33.826 0 14.006-8.015 42.192-30.511 79.296-8.283 13.662-19.823 30.585-35.092 48.631l-3.692-17.905c8.554-8.464 16.881-18.232 24.816-29.22 21.402-29.637 22.305-52.464 22.305-101.27 0-4.511-.129-8.968-.37-13.358zM155.479 292.303c7.851 10.872 16.2 20.691 24.811 29.232l-3.873 18.847c-15.586-18.302-27.345-35.491-35.759-49.344-22.604-37.214-30.657-65.487-30.657-79.538 0-7.97 8.767-20.524 23.597-34.784a242.496 242.496 0 00-.423 14.316c0 48.806.902 71.633 22.304 101.271z\"></path>\n    </svg>\n  );\n}\n","export function TrophyIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M397.763 87.5h-98.509v213.476h98.509c58.855 0 106.737-47.882 106.737-106.738S456.618 87.5 397.763 87.5zm0 183.476h-68.509V117.5h68.509c42.381 0 76.738 34.357 76.738 76.738-.001 42.381-34.357 76.738-76.738 76.738zM114.237 87.5C55.382 87.5 7.5 135.382 7.5 194.238s47.882 106.738 106.737 106.738h98.509V87.5zm68.509 183.476h-68.509c-42.381 0-76.738-34.357-76.738-76.738S71.856 117.5 114.237 117.5h68.509zM314 419.5H198l15-91h86z\"\n      ></path>\n      <path fill=\"#fee97d\" d=\"M299 328.5h-30l15 91h30z\"></path>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M382.221 504.5H129.779a7 7 0 01-7-7v-11.629c0-22.091 17.909-40 40-40h186.442c22.091 0 40 17.909 40 40V497.5a7 7 0 01-7 7z\"\n      ></path>\n      <path\n        fill=\"#fee97d\"\n        d=\"M349.221 445.871h-30c22.092 0 40 17.909 40 40V497.5a7 7 0 01-7 7h30a7 7 0 007-7v-11.629c0-22.092-17.909-40-40-40zm-5 0H167.779v-3.629c0-22.091 17.909-40 40-40h96.442c22.091 0 40 17.909 40 40z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M304.221 402.241h-30c22.092 0 40 17.909 40 40v3.629h30v-3.629c0-22.091-17.909-40-40-40z\"\n      ></path>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M411.5 57.5h-311c-13.807 0-25-11.193-25-25s11.193-25 25-25h311c13.807 0 25 11.193 25 25s-11.193 25-25 25z\"\n      ></path>\n      <path\n        fill=\"#fee97d\"\n        d=\"M411.5 7.5h-30c13.807 0 25 11.193 25 25s-11.193 25-25 25h30c13.807 0 25-11.193 25-25s-11.193-25-25-25zM256 362.5c-83.119 0-150.5-67.381-150.5-150.5V57.5h301V212c0 83.119-67.381 150.5-150.5 150.5z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M376.5 57.5V212c0 78.056-59.424 142.229-135.5 149.757 4.934.488 9.937.743 15 .743 83.119 0 150.5-67.381 150.5-150.5V57.5z\"\n      ></path>\n      <circle cx=\"256\" cy=\"207.96\" r=\"94.169\" fill=\"#fff\"></circle>\n      <path\n        fill=\"#fee97d\"\n        d=\"M262.277 154.391l13.139 26.623a7 7 0 005.271 3.829l29.38 4.269c5.742.834 8.034 7.89 3.879 11.94l-21.26 20.723a6.998 6.998 0 00-2.013 6.196l5.019 29.261c.981 5.718-5.021 10.079-10.157 7.379l-26.278-13.815a7.001 7.001 0 00-6.515 0l-26.278 13.815c-5.135 2.7-11.137-1.661-10.157-7.379l5.019-29.261a7 7 0 00-2.013-6.196l-21.26-20.723c-4.155-4.05-1.862-11.106 3.879-11.94l29.38-4.269a7 7 0 005.271-3.829l13.139-26.623c2.569-5.203 9.987-5.203 12.555 0z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M313.946 201.052c4.155-4.05 1.862-11.106-3.88-11.94l-29.38-4.269a6.997 6.997 0 01-5.27-3.829l-13.139-26.623c-2.568-5.203-9.987-5.203-12.554 0l-10.888 22.061 3.874 7.85a18.632 18.632 0 0014.03 10.193c15.284 2.221 21.386 21.003 10.327 31.783a18.632 18.632 0 00-5.359 16.493l1.755 10.236 22.073 11.604c5.135 2.7 11.137-1.661 10.157-7.379l-5.019-29.261a7 7 0 012.013-6.196z\"\n      ></path>\n      <path d=\"M282.025 177.458l-13.022-26.387c-2.462-4.985-7.443-8.082-13.003-8.082s-10.541 3.097-13.003 8.083l-13.022 26.387-29.119 4.231c-5.502.799-9.987 4.581-11.706 9.868-1.718 5.288-.312 10.983 3.669 14.865l21.071 20.539-4.975 29.003c-.939 5.479 1.271 10.914 5.77 14.182s10.349 3.691 15.271 1.104L256 257.557l26.045 13.693c4.903 2.578 10.759 2.174 15.271-1.104 4.498-3.268 6.709-8.702 5.769-14.182l-4.974-29.003 21.071-20.539c3.981-3.881 5.387-9.577 3.669-14.865-1.719-5.287-6.204-9.068-11.706-9.867zm5.426 38.946a14.494 14.494 0 00-4.169 12.834l4.847 28.264-25.382-13.345a14.498 14.498 0 00-13.495 0l-25.381 13.344 4.847-28.262a14.495 14.495 0 00-4.169-12.835l-20.534-20.016 28.377-4.124a14.494 14.494 0 0010.918-7.932L256 158.618l12.69 25.714a14.494 14.494 0 0010.918 7.932l28.377 4.124zm194.096-99.749c-17.941-19.36-41.716-31.799-67.547-35.49v-16.27c16.756-1.282 30-15.316 30-32.394C444 14.58 429.421 0 411.5 0h-311C82.579 0 68 14.58 68 32.5c0 17.078 13.244 31.112 30 32.394v16.27c-25.714 3.676-49.409 16.029-67.321 35.248a7.5 7.5 0 0010.972 10.228C56.721 110.471 76.495 99.908 98 96.352v15.236c-39.204 7.62-68 42.024-68 82.652 0 22.509 8.765 43.663 24.675 59.561 15.532 15.543 36.076 24.242 57.996 24.641a157.847 157.847 0 008.007 15.038h-6.438c-54.722 0-99.24-44.519-99.24-99.24 0-14.091 2.904-27.711 8.633-40.48a7.5 7.5 0 00-13.685-6.14C3.347 162.333 0 178.019 0 194.24c0 62.992 51.248 114.24 114.24 114.24h16.729c17.756 22.957 41.679 40.906 69.267 51.348l-6.089 36.917c-18.396 5.522-32.123 21.915-33.701 41.685-25.112 1.221-45.167 22.032-45.167 47.441V497.5c0 7.995 6.505 14.5 14.5 14.5H382.22c7.995 0 14.5-6.505 14.5-14.5v-11.629c0-25.409-20.055-46.22-45.167-47.441-1.579-19.771-15.306-36.163-33.701-41.685l-6.089-36.917c27.588-10.441 51.511-28.391 69.267-51.348h16.729c62.992 0 114.24-51.248 114.24-114.24.001-28.841-10.814-56.394-30.452-77.585zM65.281 243.195C52.203 230.126 45 212.74 45 194.24c0-32.392 22.265-59.968 53-67.308V212c0 17.851 2.98 35.018 8.461 51.034-15.554-1.728-29.958-8.609-41.18-19.839zM100.5 50C90.851 50 83 42.149 83 32.5S90.851 15 100.5 15h311c9.649 0 17.5 7.851 17.5 17.5S421.149 50 411.5 50zM414 126.932c30.735 7.34 53 34.916 53 67.308 0 18.5-7.203 35.886-20.286 48.958-11.218 11.227-25.621 18.108-41.175 19.836C411.02 247.018 414 229.851 414 212zm-77.518 311.439h-22.895c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h35.634c17.921 0 32.5 14.58 32.5 32.5V497H130.279v-11.129c0-17.92 14.579-32.5 32.5-32.5h115.808c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5H175.518c1.921-16.101 15.651-28.629 32.261-28.629h96.441c16.611-.001 30.342 12.527 32.262 28.629zm-126.801-43.63l4.987-30.237C227.849 368.08 241.703 370 256 370s28.151-1.92 41.332-5.496l4.987 30.237zM256 355c-78.851 0-143-64.149-143-143V65h286v147c0 78.851-64.149 143-143 143zm141.76-61.52h-6.438a157.741 157.741 0 008.007-15.038c21.919-.399 42.463-9.097 57.991-24.637C473.235 237.903 482 216.749 482 194.24c0-40.627-28.796-75.032-68-82.652V96.352c21.605 3.57 41.449 14.208 56.545 30.498C487.604 145.259 497 169.192 497 194.24c0 54.721-44.519 99.24-99.24 99.24zM256 106.291c-56.061 0-101.67 45.609-101.67 101.669S199.939 309.629 256 309.629 357.67 264.02 357.67 207.96 312.061 106.291 256 106.291zm0 188.338c-47.79 0-86.67-38.88-86.67-86.669s38.88-86.669 86.67-86.669 86.67 38.88 86.67 86.669-38.88 86.669-86.67 86.669z\"></path>\n    </svg>\n  );\n}\n","export function UnderConstructionIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path fill=\"#615260\" d=\"M424.3 95.7h32.1v352.7h-32z\"></path>\n      <circle cx=\"440.4\" cy=\"79.6\" r=\"32.1\" fill=\"#ffaa5a\"></circle>\n      <circle cx=\"440.4\" cy=\"79.6\" r=\"8\" fill=\"#ffc263\"></circle>\n      <path fill=\"#615260\" d=\"M55.6 95.7h32v352.7h-32z\"></path>\n      <circle cx=\"71.6\" cy=\"79.6\" r=\"32.1\" fill=\"#ffaa5a\"></circle>\n      <circle cx=\"71.6\" cy=\"79.6\" r=\"8\" fill=\"#ffc263\"></circle>\n      <path fill=\"#ffd05b\" d=\"M472.4 432.4h-64a16 16 0 00-16.1 16v16h96.2v-16a16 16 0 00-16-16z\"></path>\n      <path\n        fill=\"#ffe077\"\n        d=\"M488.5 240h-465a16 16 0 01-16-16v-64.2a16 16 0 0116-16h465a16 16 0 0116 16V224a16 16 0 01-16 16z\"\n      ></path>\n      <path\n        fill=\"#ffd05b\"\n        d=\"M488.5 143.8h-8v56a16 16 0 01-16 16.1H7.4v8a16 16 0 0016 16h465a16 16 0 0016-16v-64a16 16 0 00-16-16.1z\"\n      ></path>\n      <path\n        fill=\"#615260\"\n        d=\"M304.1 143.8L207.9 240h80.2l96.2-96.2zm200.4 16a16 16 0 00-16-16h-24L368.1 240h80.2l56.1-56.1zm-360.7-16L47.6 240h80.1l96.2-96.2zm-136.3 16v40l56.1-56h-40a16 16 0 00-16.1 16z\"\n      ></path>\n      <path\n        fill=\"#4e3d4d\"\n        d=\"M392.3 216l-24 24h80l24.1-24zm96.2-72.2h-8v64.1l24-24v-24a16 16 0 00-16-16.1z\"\n      ></path>\n      <path fill=\"#ffd05b\" d=\"M103.7 432.4H39.6a16 16 0 00-16 16v16h96.1v-16a16 16 0 00-16-16z\"></path>\n      <path\n        fill=\"#ffc244\"\n        d=\"M103.7 432.4h-16v32h32v-16a16 16 0 00-16-16zm368.7 0h-16v32h32v-16a16 16 0 00-16-16z\"\n      ></path>\n      <path fill=\"#4e3d4d\" d=\"M71.6 216l-24 24h80.1l24-24zm160.4 0l-24.1 24h80.2l24-24z\"></path>\n      <path\n        fill=\"#ffe077\"\n        d=\"M488.5 368.2h-465a16 16 0 01-16-16V288a16 16 0 0116-16h465a16 16 0 0116 16v64a16 16 0 01-16 16.1z\"\n      ></path>\n      <path\n        fill=\"#ffd05b\"\n        d=\"M488.5 272h-8v56.1a16 16 0 01-16 16H7.4v8a16 16 0 0016 16.1h465a16 16 0 0016-16V288a16 16 0 00-16-16z\"\n      ></path>\n      <path\n        fill=\"#615260\"\n        d=\"M304.1 272l-96.2 96.2h80.2l96.2-96.2zm200.4 16a16 16 0 00-16-16h-24l-96.3 96.2h80.2l56.1-56zm-360.7-16l-96.2 96.2h80.1L224 272zM7.5 288v40.1l56.1-56h-40a16 16 0 00-16.1 16z\"\n      ></path>\n      <path\n        fill=\"#4e3d4d\"\n        d=\"M392.3 344.2l-24 24h80l24.1-24zm96.2-72.2h-8v64.2l24-24V288a16 16 0 00-16-16zM71.6 344.2l-24 24h80.1l24-24zm160.4 0l-24.1 24h80.2l24-24z\"\n      ></path>\n      <path d=\"M512 288c0-13-10.6-23.5-23.5-23.5h-24.6v-17h24.6c13 0 23.5-10.6 23.5-23.6v-64c0-13-10.6-23.6-23.5-23.6h-24.6v-24.9a39.5 39.5 0 10-47 0v24.9H95.1v-24.9a39.5 39.5 0 10-47.1 0v24.9H23.5c-13 0-23.5 10.5-23.5 23.5V224c0 13 10.6 23.6 23.5 23.6h24.6v17H23.5c-13 0-23.5 10.6-23.5 23.6v64c0 13 10.6 23.6 23.5 23.6h24.6V425h-8.5c-13 0-23.6 10.5-23.6 23.5v16c0 4.2 3.4 7.5 7.5 7.5h96.2c4.2 0 7.5-3.3 7.5-7.5v-16c0-13-10.5-23.5-23.5-23.5h-8.5v-49.2h321.6V425h-8.5c-13 0-23.5 10.5-23.5 23.5v16c0 4.2 3.3 7.5 7.5 7.5h96.2c4.1 0 7.5-3.3 7.5-7.5v-16c0-13-10.6-23.5-23.6-23.5H464v-49.2h24.6c13 0 23.5-10.5 23.5-23.5V288zm-15 0v21l-51.7 51.7h-59l81.2-81.2h21c4.7 0 8.5 3.9 8.5 8.6zm-190.8 72.7l81.2-81.2h59L365 360.7zm-80.2 0l81.2-81.2h59L285 360.7zm-80.2 0l81.2-81.2h59l-81.2 81.2zm-50.6-96.2v-17h321.6v17zm110.6-113.2l-81.2 81.2h-59l81.3-81.2zm80.2 0l-81.2 81.2h-59l81.2-81.2zm80.2 0L285 232.5h-59l81.2-81.2zm82.7 113.2h-17v-17h17zm39.6-32h-22L497 202v22c0 4.6-3.8 8.5-8.5 8.5zm8.5-72.7v21l-51.7 51.7h-59l37.7-37.7a7.5 7.5 0 10-10.6-10.6l-48.3 48.3h-59l81.3-81.2h59L436 161.5a7.5 7.5 0 1010.6 10.6l20.8-20.8h21c4.7 0 8.5 3.8 8.5 8.5zM440.4 55.1a24.6 24.6 0 110 49.2 24.6 24.6 0 010-49.2zm-8.6 63.2a39.5 39.5 0 0017.1 0v18h-17zM71.6 55a24.6 24.6 0 110 49.2 24.6 24.6 0 010-49.2zm-8.5 63.2a39.5 39.5 0 0017 0v18h-17zm-39.6 33h22L15 181.8v-22c0-4.7 3.8-8.5 8.5-8.5zM15 223.9v-21l51.7-51.6h59l-81.2 81.2h-21a8.5 8.5 0 01-8.5-8.6zm48.1 23.6h17v17h-17v-17zm-39.6 32h22L15 310v-22c0-4.6 3.8-8.5 8.5-8.5zM15 352.2v-21l51.7-51.7h59L88 317.2a7.5 7.5 0 1010.6 10.6l48.3-48.3h59l-81.3 81.2h-59L76 350.5a7.5 7.5 0 10-10.6-10.6l-20.8 20.8h-21a8.5 8.5 0 01-8.5-8.5zm97.2 96.2v8.5H31v-8.5c0-4.7 3.9-8.5 8.6-8.5h64c4.8 0 8.6 3.8 8.6 8.5zm-32-23.5H63v-49.2h17zM481 448.4v8.5h-81.2v-8.5c0-4.7 3.8-8.5 8.5-8.5h64.1c4.7 0 8.6 3.8 8.6 8.5zm-32.1-23.5h-17v-49.2h17zm39.6-64.2h-22l30.5-30.5v22c0 4.7-3.8 8.5-8.5 8.5z\"></path>\n    </svg>\n  );\n}\n","export function UserStatsIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#f6e266\"\n        d=\"M232.766 7.5v107.077c78.106 0 141.423 63.317 141.423 141.423h107.077c0-137.243-111.257-248.5-248.5-248.5z\"\n      ></path>\n      <path\n        fill=\"#f1d333\"\n        d=\"M422.677 200.946c0 18.894-2.041 37.309-5.881 55.054h64.471c0-83.705-41.388-157.742-104.814-202.769 29.132 41.906 46.224 92.81 46.224 147.715z\"\n      ></path>\n      <path\n        fill=\"#c8ea73\"\n        d=\"M332.767 356.001c-25.592 25.593-60.948 41.422-100.001 41.422s-74.408-15.829-100.001-41.422L57.05 431.716c44.97 44.97 107.095 72.784 175.716 72.784s130.746-27.814 175.716-72.784z\"\n      ></path>\n      <path\n        fill=\"#b7e445\"\n        d=\"M163.57 460.053c-33.875 0-66.228-6.51-95.887-18.332 43.895 39.046 101.713 62.779 165.083 62.779 68.621 0 130.746-27.814 175.716-72.784l-54.773-54.773c-47.328 51.106-114.991 83.11-190.139 83.11z\"\n      ></path>\n      <path\n        fill=\"#dd5790\"\n        d=\"M374.189 256c0 39.053-15.829 74.408-41.422 100.001l42.858 42.858c36.561-36.561 59.174-87.069 59.174-142.859z\"\n      ></path>\n      <path\n        fill=\"#da387d\"\n        d=\"M416.796 256c-9.971 46.074-32.189 87.579-63.086 120.943l21.916 21.916C412.187 362.298 434.8 311.79 434.8 256z\"\n      ></path>\n      <path\n        fill=\"#9dc6fb\"\n        d=\"M91.343 256c0-78.106 63.317-141.423 141.423-141.423v-60.61C121.187 53.967 30.734 144.42 30.734 256c0 55.79 22.613 106.298 59.174 142.859l42.858-42.858C107.173 330.408 91.343 295.053 91.343 256z\"\n      ></path>\n      <circle cx=\"232.766\" cy=\"208.522\" r=\"40.407\" fill=\"#f1d0a5\"></circle>\n      <path\n        fill=\"#f1b986\"\n        d=\"M252.864 173.474a40.202 40.202 0 015.358 20.098c0 22.316-18.091 40.407-40.406 40.407a40.212 40.212 0 01-20.098-5.358c6.972 12.132 20.051 20.309 35.048 20.309 22.316 0 40.406-18.091 40.406-40.407.001-14.998-8.176-28.076-20.308-35.049z\"\n      ></path>\n      <path\n        fill=\"#e49542\"\n        d=\"M158.014 289.335v34.346h149.504v-34.346c0-22.316-18.091-40.406-40.406-40.406h-68.691c-22.316 0-40.407 18.09-40.407 40.406z\"\n      ></path>\n      <path\n        fill=\"#e28424\"\n        d=\"M267.112 248.929h-24.244c22.316 0 40.406 18.091 40.406 40.406v34.346h24.244v-34.346c0-22.315-18.09-40.406-40.406-40.406z\"\n      ></path>\n      <path d=\"M450.864 121.895a7.5 7.5 0 10-12.769 7.871c22.032 35.739 34.259 76.64 35.559 118.734h-92.151c-3.797-76.156-65.077-137.436-141.233-141.233V15.115c69.109 2.129 133.654 33.596 178.039 87.075a7.5 7.5 0 0011.543-9.581C381.005 33.755 309.172 0 232.77 0a7.5 7.5 0 00-7.5 7.5v39.109c-44.972 1.554-87.222 17.073-122.609 45.137-36.231 28.733-62.267 69.139-73.311 113.773a7.5 7.5 0 0014.56 3.604C64.82 124.62 138.782 64.896 225.27 61.619v45.646C146.623 111.184 83.843 176.397 83.843 256c0 37.269 13.599 72.448 38.448 99.872L90.02 388.143C56.573 352.078 38.23 305.45 38.23 256c0-4.598.159-9.174.472-13.601a7.5 7.5 0 00-6.953-8.011c-4.137-.302-7.718 2.82-8.01 6.953a209.246 209.246 0 00-.509 14.658c0 53.457 19.9 103.852 56.176 142.756l-27.66 27.66a7.5 7.5 0 000 10.607C100.096 485.373 164.384 512 232.77 512c68.379 0 132.664-26.627 181.013-74.977a7.5 7.5 0 000-10.606l-27.657-27.661c34.572-37.076 54.255-84.595 56.026-135.256h39.118a7.5 7.5 0 007.5-7.5c0-47.507-13.107-93.88-37.906-134.105zM232.77 497c-61.872 0-120.183-23.154-165.033-65.36l65.168-65.168c22.681 20.482 51.411 33.662 81.689 37.344 4.12.502 7.851-2.428 8.351-6.54s-2.428-7.851-6.54-8.351c-29.441-3.579-57.26-17.155-78.332-38.229l-.049-.045C112.758 325.362 98.843 291.75 98.843 256c0-73.831 60.054-133.899 133.88-133.922l.047.002c73.839 0 133.911 60.068 133.92 133.905l-.001.015c0 35.772-13.931 69.403-39.225 94.697l-.015.016c-20.967 20.95-48.624 34.503-77.881 38.165a7.5 7.5 0 001.864 14.885c30.083-3.766 58.641-16.926 81.202-37.292l65.16 65.168C352.943 473.846 294.636 497 232.77 497zm142.744-108.858l-32.27-32.274c23.174-25.576 36.561-57.898 38.259-92.369h45.639c-1.756 46.656-19.88 90.411-51.628 124.643z\"></path>\n      <path d=\"M307.518 331.181a7.5 7.5 0 007.5-7.5v-34.346c0-26.278-21.268-47.672-47.494-47.896 8.14-8.591 13.149-20.176 13.149-32.917 0-26.416-21.491-47.906-47.907-47.906s-47.906 21.49-47.906 47.906c0 12.741 5.009 24.326 13.149 32.917-26.226.223-47.494 21.618-47.494 47.896v34.346a7.5 7.5 0 007.5 7.5zm-74.752-155.565c18.145 0 32.907 14.762 32.907 32.906s-14.762 32.906-32.907 32.906-32.906-14.762-32.906-32.906 14.762-32.906 32.906-32.906zm-67.252 113.719c0-18.145 14.762-32.906 32.907-32.906h68.691c18.145 0 32.906 14.762 32.906 32.906v26.846h-27.427v-12.703c0-4.143-3.358-7.5-7.5-7.5s-7.5 3.357-7.5 7.5v12.703h-49.65v-12.703c0-4.143-3.358-7.5-7.5-7.5s-7.5 3.357-7.5 7.5v12.703h-27.427z\"></path>\n    </svg>\n  );\n}\n"],"names":["EmojiCard","id","width","className","emojiId","startsWith","clsx","style","height","source","GlyphCard","numId","glyphId","sourceId","Math","ceil","getSource","undefined","padding","Card","children","header","footer","color","size","randomColor","headerClassName","footerClassName","hideHeader","baseClass","bgColor","getColorFromLetter","toUpperCase","backgroundColor","unknownText","pt","en","Achievements","players","achievements","reference","colorScheme","getAnimationClass","level","length","contained","map","achievement","index","type","icon","achievementObj","player","playerId","delay","title","avatarId","name","Boolean","description","content","value","shape","Container","titleProps","contentProps","spaceProps","restTitleProps","childrenClassName","wrap","direction","childrenDirection","restChildrenContainerProps","StatusBar","entries","entry","arr","Fragment","key","PointsHighlight","iconSize","ListOfPlayers","list","namesOnly","prefix","join","GainedPoint","gainedPoint","order","isPositive","isNegative","GainedPoints","gainedPoints","gainedPointsDescriptions","points","Array","isArray","RankingBoard","ranking","hideGainedPoints","useState","displayStep","setDisplayStep","sortedRanking","setSortedRanking","reRank","setReRank","useMeasure","ref","maxPoints","useMemo","max","scores","newScore","seconds","useCountdown","duration","autoStart","onExpire","useEffectOnce","positions","lastPosition","lastPoints","rankByFinalScoreDict","orderBy","reduce","acc","rankByPreviousScore","tempSortedRanking","newEntry","position","previousScore","useEffect","opacity","CrownFilled","hPosition","top","StepRankingWrapper","subtitle","useTemporarilyHidePlayersBar","appearance","useGameAppearance","scheme","CaretUpOutlined","RoundAnnouncement","round","onPressButton","buttonText","time","unskippable","circleColor","primaryColor","translate","useLanguage","circleStyle","borderColor","src","roundTitlePt","roundTitleEn","alt","current","onClick","disabled","custom","Sprite","baseUrl","useTDBaseUrl","useQuery","queryKey","queryFn","fetch","response","text","enabled","isLoading","data","isError","paddedWidth","display","placeItems","svgContent","WarningOutlined","viewBox","xlinkHref","dangerouslySetInnerHTML","__html","x","y","background","SpeechBubble","shadow","rest","StepRanking","goToPreviousStep","align","NAO_SOU_ROBO_ACTIONS","OUTCOME","mockCardPick","hand","sample","mockGuess","cards","playerCount","userCardId","options","filter","card","sampleSize","CaptchaTopic","captcha","roundType","values","glyph","String","EventHighlight","MetricHighlight","EventIcon","CaptchaHighlight","CaptchaIcon","RobotHighlight","RobotIcon","EnergyHighlight","EnergyIcon","SuspicionHighlight","ThiefIcon","FloatingPlayerStats","user","robot","correctCaptcha","beat","suspicion","UserStatsIcon","score","goal","Summary","StepSelectCard","announcement","onSubmitCard","useLoading","areTicketsInCart","setAreTicketsInCart","Object","keys","useMock","cardId","fullWidth","vertical","justify","onSelectCard","disabledSelectButton","sizeRatio","Text","strong","readOnly","loading","ShoppingCartOutlined","PhaseCardSelection","state","useUser","useStep","step","setStep","goToNextStep","request","useGameActionRequest","actionName","onSuccess","onError","successMessage","errorMessage","payload","action","useOnSubmitCardAPIRequest","currentRound","phase","allowedPhase","PHASES","NAO_SOU_ROBO","CARD_SELECTION","waitingRoom","instruction","StepSelectAll","onSubmitCaptcha","scrollToSubmitRef","useRef","useBooleanDictionary","selectedCards","dict","updateDict","selection","cardWidth","useCardWidth","gap","minWidth","maxWidth","shuffledOptions","shuffle","guess","PreviewGroup","isSelected","scrollIntoView","behavior","toggleCard","hoverType","square","preview","CardHighlight","ready","A","PhaseAreYouARobot","useOnSubmitGuessAPIRequest","ARE_YOU_A_ROBOT","RobotResult","result","outcome","someoneBeat","beaters","robotGotPoints","SealOfApprovalIcon","StepResult","option","bot","count","PhaseResults","RESULTS","FinalOutcome","mostSuspicious","maxSuspicion","push","NuclearExplosionIcon","noMargin","UnderConstructionIcon","PhaseGameOver","announcementIcon","TrophyIcon","achievementsReference","getActiveComponent","LoadingPage","DEFAULT","LOBBY","PhaseLobby","RULES","PhaseRules","SETUP","PhaseSetup","GAME_OVER","PageError","gameCollection","GAME_COLLECTION","ACHIEVEMENTS","initialState","validation","setDict","isValid","s","dictCopy","reset","props","xmlns","fill","d","cx","cy","r","transform","isolation","rx","ry","StarIcon"],"sourceRoot":""}