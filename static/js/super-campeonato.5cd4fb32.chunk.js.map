{"version":3,"file":"static/js/super-campeonato.5cd4fb32.chunk.js","mappings":"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","sources":["components/icons/TrophyIcon.tsx","games/super-campeonato/utils/constants.ts","games/super-campeonato/utils/helpers.ts","games/super-campeonato/utils/mock.ts","games/super-campeonato/components/ContenderCard.tsx","games/super-campeonato/components/ContendersHand.tsx","games/super-campeonato/StepSelectChallenge.tsx","games/super-campeonato/PhaseChallengeSelection.tsx","games/super-campeonato/utils/api-requests.ts","games/super-campeonato/components/Challenge.tsx","games/super-campeonato/StepSelectContenders.tsx","games/super-campeonato/PhaseContendersSelection.tsx","games/super-campeonato/components/BracketContenderVotes.tsx","games/super-campeonato/components/Brackets.tsx","games/super-campeonato/components/ContendersSelect.tsx","games/super-campeonato/components/ResetBetsButton.tsx","games/super-campeonato/components/BetsForm.tsx","games/super-campeonato/StepMakeYourBets.tsx","games/super-campeonato/components/BetsFloatingHand.tsx","games/super-campeonato/PhaseBets.tsx","games/super-campeonato/components/TierTitle.tsx","games/super-campeonato/components/TierContenders.tsx","games/super-campeonato/components/Voting.tsx","games/super-campeonato/utils/useBracketVoting.ts","games/super-campeonato/StepBattle.tsx","games/super-campeonato/PhaseBattle.tsx","games/super-campeonato/components/PlayersBets.tsx","games/super-campeonato/StepRanking.tsx","games/super-campeonato/StepWinner.tsx","games/super-campeonato/PhaseResults.tsx","games/super-campeonato/PhaseGameOver.tsx","games/super-campeonato/SessionSuperCampeonato.tsx","../node_modules/@ant-design/icons-svg/es/asn/DownSquareOutlined.js","../node_modules/@ant-design/icons/es/icons/DownSquareOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/UpCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/UpCircleOutlined.js"],"sourcesContent":["export function TrophyIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M397.763 87.5h-98.509v213.476h98.509c58.855 0 106.737-47.882 106.737-106.738S456.618 87.5 397.763 87.5zm0 183.476h-68.509V117.5h68.509c42.381 0 76.738 34.357 76.738 76.738-.001 42.381-34.357 76.738-76.738 76.738zM114.237 87.5C55.382 87.5 7.5 135.382 7.5 194.238s47.882 106.738 106.737 106.738h98.509V87.5zm68.509 183.476h-68.509c-42.381 0-76.738-34.357-76.738-76.738S71.856 117.5 114.237 117.5h68.509zM314 419.5H198l15-91h86z\"\n      ></path>\n      <path fill=\"#fee97d\" d=\"M299 328.5h-30l15 91h30z\"></path>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M382.221 504.5H129.779a7 7 0 01-7-7v-11.629c0-22.091 17.909-40 40-40h186.442c22.091 0 40 17.909 40 40V497.5a7 7 0 01-7 7z\"\n      ></path>\n      <path\n        fill=\"#fee97d\"\n        d=\"M349.221 445.871h-30c22.092 0 40 17.909 40 40V497.5a7 7 0 01-7 7h30a7 7 0 007-7v-11.629c0-22.092-17.909-40-40-40zm-5 0H167.779v-3.629c0-22.091 17.909-40 40-40h96.442c22.091 0 40 17.909 40 40z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M304.221 402.241h-30c22.092 0 40 17.909 40 40v3.629h30v-3.629c0-22.091-17.909-40-40-40z\"\n      ></path>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M411.5 57.5h-311c-13.807 0-25-11.193-25-25s11.193-25 25-25h311c13.807 0 25 11.193 25 25s-11.193 25-25 25z\"\n      ></path>\n      <path\n        fill=\"#fee97d\"\n        d=\"M411.5 7.5h-30c13.807 0 25 11.193 25 25s-11.193 25-25 25h30c13.807 0 25-11.193 25-25s-11.193-25-25-25zM256 362.5c-83.119 0-150.5-67.381-150.5-150.5V57.5h301V212c0 83.119-67.381 150.5-150.5 150.5z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M376.5 57.5V212c0 78.056-59.424 142.229-135.5 149.757 4.934.488 9.937.743 15 .743 83.119 0 150.5-67.381 150.5-150.5V57.5z\"\n      ></path>\n      <circle cx=\"256\" cy=\"207.96\" r=\"94.169\" fill=\"#fff\"></circle>\n      <path\n        fill=\"#fee97d\"\n        d=\"M262.277 154.391l13.139 26.623a7 7 0 005.271 3.829l29.38 4.269c5.742.834 8.034 7.89 3.879 11.94l-21.26 20.723a6.998 6.998 0 00-2.013 6.196l5.019 29.261c.981 5.718-5.021 10.079-10.157 7.379l-26.278-13.815a7.001 7.001 0 00-6.515 0l-26.278 13.815c-5.135 2.7-11.137-1.661-10.157-7.379l5.019-29.261a7 7 0 00-2.013-6.196l-21.26-20.723c-4.155-4.05-1.862-11.106 3.879-11.94l29.38-4.269a7 7 0 005.271-3.829l13.139-26.623c2.569-5.203 9.987-5.203 12.555 0z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M313.946 201.052c4.155-4.05 1.862-11.106-3.88-11.94l-29.38-4.269a6.997 6.997 0 01-5.27-3.829l-13.139-26.623c-2.568-5.203-9.987-5.203-12.554 0l-10.888 22.061 3.874 7.85a18.632 18.632 0 0014.03 10.193c15.284 2.221 21.386 21.003 10.327 31.783a18.632 18.632 0 00-5.359 16.493l1.755 10.236 22.073 11.604c5.135 2.7 11.137-1.661 10.157-7.379l-5.019-29.261a7 7 0 012.013-6.196z\"\n      ></path>\n      <path d=\"M282.025 177.458l-13.022-26.387c-2.462-4.985-7.443-8.082-13.003-8.082s-10.541 3.097-13.003 8.083l-13.022 26.387-29.119 4.231c-5.502.799-9.987 4.581-11.706 9.868-1.718 5.288-.312 10.983 3.669 14.865l21.071 20.539-4.975 29.003c-.939 5.479 1.271 10.914 5.77 14.182s10.349 3.691 15.271 1.104L256 257.557l26.045 13.693c4.903 2.578 10.759 2.174 15.271-1.104 4.498-3.268 6.709-8.702 5.769-14.182l-4.974-29.003 21.071-20.539c3.981-3.881 5.387-9.577 3.669-14.865-1.719-5.287-6.204-9.068-11.706-9.867zm5.426 38.946a14.494 14.494 0 00-4.169 12.834l4.847 28.264-25.382-13.345a14.498 14.498 0 00-13.495 0l-25.381 13.344 4.847-28.262a14.495 14.495 0 00-4.169-12.835l-20.534-20.016 28.377-4.124a14.494 14.494 0 0010.918-7.932L256 158.618l12.69 25.714a14.494 14.494 0 0010.918 7.932l28.377 4.124zm194.096-99.749c-17.941-19.36-41.716-31.799-67.547-35.49v-16.27c16.756-1.282 30-15.316 30-32.394C444 14.58 429.421 0 411.5 0h-311C82.579 0 68 14.58 68 32.5c0 17.078 13.244 31.112 30 32.394v16.27c-25.714 3.676-49.409 16.029-67.321 35.248a7.5 7.5 0 0010.972 10.228C56.721 110.471 76.495 99.908 98 96.352v15.236c-39.204 7.62-68 42.024-68 82.652 0 22.509 8.765 43.663 24.675 59.561 15.532 15.543 36.076 24.242 57.996 24.641a157.847 157.847 0 008.007 15.038h-6.438c-54.722 0-99.24-44.519-99.24-99.24 0-14.091 2.904-27.711 8.633-40.48a7.5 7.5 0 00-13.685-6.14C3.347 162.333 0 178.019 0 194.24c0 62.992 51.248 114.24 114.24 114.24h16.729c17.756 22.957 41.679 40.906 69.267 51.348l-6.089 36.917c-18.396 5.522-32.123 21.915-33.701 41.685-25.112 1.221-45.167 22.032-45.167 47.441V497.5c0 7.995 6.505 14.5 14.5 14.5H382.22c7.995 0 14.5-6.505 14.5-14.5v-11.629c0-25.409-20.055-46.22-45.167-47.441-1.579-19.771-15.306-36.163-33.701-41.685l-6.089-36.917c27.588-10.441 51.511-28.391 69.267-51.348h16.729c62.992 0 114.24-51.248 114.24-114.24.001-28.841-10.814-56.394-30.452-77.585zM65.281 243.195C52.203 230.126 45 212.74 45 194.24c0-32.392 22.265-59.968 53-67.308V212c0 17.851 2.98 35.018 8.461 51.034-15.554-1.728-29.958-8.609-41.18-19.839zM100.5 50C90.851 50 83 42.149 83 32.5S90.851 15 100.5 15h311c9.649 0 17.5 7.851 17.5 17.5S421.149 50 411.5 50zM414 126.932c30.735 7.34 53 34.916 53 67.308 0 18.5-7.203 35.886-20.286 48.958-11.218 11.227-25.621 18.108-41.175 19.836C411.02 247.018 414 229.851 414 212zm-77.518 311.439h-22.895c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h35.634c17.921 0 32.5 14.58 32.5 32.5V497H130.279v-11.129c0-17.92 14.579-32.5 32.5-32.5h115.808c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5H175.518c1.921-16.101 15.651-28.629 32.261-28.629h96.441c16.611-.001 30.342 12.527 32.262 28.629zm-126.801-43.63l4.987-30.237C227.849 368.08 241.703 370 256 370s28.151-1.92 41.332-5.496l4.987 30.237zM256 355c-78.851 0-143-64.149-143-143V65h286v147c0 78.851-64.149 143-143 143zm141.76-61.52h-6.438a157.741 157.741 0 008.007-15.038c21.919-.399 42.463-9.097 57.991-24.637C473.235 237.903 482 216.749 482 194.24c0-40.627-28.796-75.032-68-82.652V96.352c21.605 3.57 41.449 14.208 56.545 30.498C487.604 145.259 497 169.192 497 194.24c0 54.721-44.519 99.24-99.24 99.24zM256 106.291c-56.061 0-101.67 45.609-101.67 101.669S199.939 309.629 256 309.629 357.67 264.02 357.67 207.96 312.061 106.291 256 106.291zm0 188.338c-47.79 0-86.67-38.88-86.67-86.669s38.88-86.669 86.67-86.669 86.67 38.88 86.67 86.669-38.88 86.669-86.67 86.669z\"></path>\n    </svg>\n  );\n}\n","export const ACTIONS = {\n  SUBMIT_CHALLENGE: 'SUBMIT_CHALLENGE',\n  SUBMIT_CONTENDERS: 'SUBMIT_CONTENDERS',\n  SUBMIT_BETS: 'SUBMIT_BETS',\n  SUBMIT_VOTES: 'SUBMIT_VOTES',\n};\n\nexport const voteTarget: Record<number, number> = {\n  0: 8,\n  1: 8,\n  2: 9,\n  3: 9,\n  4: 10,\n  5: 10,\n  6: 11,\n  7: 11,\n  8: 12,\n  9: 12,\n  10: 13,\n  11: 13,\n  12: 14,\n  13: 14,\n};\n\nexport const targetByTier: Record<WBracketTier, number> = {\n  quarter: 4,\n  semi: 2,\n  final: 1,\n  winner: 0,\n};\n\nexport const DEFAULT_BETS = { quarter: '', semi: '', final: '' };\n\nexport const TIER_BY_STEP: Record<number, WBracketTier> = {\n  0: 'final',\n  1: 'semi',\n  2: 'quarter',\n};\n","import { orderBy } from 'lodash';\n\n/**\n * Finds the contender for each of the players bets and selected contender\n * @param brackets\n * @param bets\n * @param selectedContenderId\n * @returns\n */\nexport const findBetContenders = (brackets: WBracket[], bets: WBets, selectedContenderId: CardId) => {\n  return {\n    quarterCard: brackets.find((bracket) => bracket.id === bets.quarter),\n    semiCard: brackets.find((bracket) => bracket.id === bets.semi),\n    finalCard: brackets.find((bracket) => bracket.id === bets.final),\n    selectedCard: brackets.find((bracket) => bracket.id === selectedContenderId),\n  };\n};\n\n/**\n * Get contender ids dictionary for each tier\n * @param brackets\n * @returns\n */\nexport const getContenderIdsByTier = (brackets: WBracket[]) =>\n  brackets.reduce((acc: WContenderByTier, bracket) => {\n    if (acc[bracket.tier] === undefined) {\n      acc[bracket.tier] = {};\n    }\n    acc[bracket.tier][bracket.id] = true;\n    return acc;\n  }, {});\n\n/**\n * Selects the available contenders based on which contenders were already used\n * @param brackets\n * @param tier\n * @param bets\n * @param language\n * @returns list of contenders\n */\nexport const getSmartBetContenderOptions = (\n  brackets: WBracket[],\n  tier: WBracketTier,\n  bets: WBets,\n  language: Language\n): WContender[] => {\n  const allContenders = orderBy(\n    brackets.filter((entry) => entry.tier === 'quarter'),\n    `name.${language}`\n  );\n\n  // For semi: Eliminate any contender in the same side (top or bottom) of the selected winner\n  if (tier === 'semi' && bets.final) {\n    const finalContender = allContenders.find((entry) => entry.id === bets.final);\n\n    if (!finalContender) return allContenders;\n\n    return allContenders.filter((entry) => {\n      if (finalContender.position > 3) {\n        return entry.position <= 3;\n      }\n      return entry.position > 3;\n    });\n  }\n\n  // For quarter: eliminate any contender that would go against semi and final\n  if (tier === 'quarter' && bets.final && bets.semi) {\n    const finalContender = allContenders.find((entry) => entry.id === bets.final);\n    if (!finalContender) return allContenders;\n\n    const semiContender = allContenders.find((entry) => entry.id === bets.semi);\n    if (!semiContender) return allContenders;\n\n    const opposingFinalContenderPosition =\n      finalContender.position % 2 === 0 ? finalContender.position + 1 : finalContender.position - 1;\n\n    const opposingSemiContenderPosition =\n      semiContender.position % 2 === 0 ? semiContender.position + 1 : semiContender.position - 1;\n\n    const forbiddenPositions = [\n      finalContender.position,\n      opposingFinalContenderPosition,\n      semiContender.position,\n      opposingSemiContenderPosition,\n    ];\n\n    return allContenders.filter((entry) => {\n      return !forbiddenPositions.includes(entry.position);\n    });\n  }\n\n  return allContenders;\n};\n","import { deepCopy, getRandomItem } from 'utils/helpers';\nimport { DEFAULT_BETS, TIER_BY_STEP, voteTarget } from './constants';\nimport { getSmartBetContenderOptions } from './helpers';\n\nexport function mockSelectChallenge(challenges: TextCard[]): CardId {\n  return getRandomItem(challenges).id;\n}\n\nexport function mockSelectContender(contenders: WContender[]): CardId {\n  return getRandomItem(contenders).id;\n}\n\nexport function mockBets(brackets: WBracket[]) {\n  const bets: WBets = deepCopy(DEFAULT_BETS);\n\n  for (let i = 0; i <= 2; i++) {\n    const tier = TIER_BY_STEP[i];\n    const options = getSmartBetContenderOptions(brackets, tier, bets, 'en');\n    if (tier !== 'winner') {\n      bets[tier] = getRandomItem(options).id;\n    }\n  }\n\n  return bets;\n}\n\nexport function mockVotes(bracketedContenders: WBracket[][], bets: WBets) {\n  const betsList = Object.values(bets);\n  return bracketedContenders.reduce((acc: NumberDictionary, pair) => {\n    let vote = pair.find((entry) => betsList.includes(entry.id));\n    if (!vote) {\n      vote = getRandomItem(pair);\n    }\n\n    acc[voteTarget[vote.position]] = vote.position;\n    return acc;\n  }, {});\n}\n","import clsx from 'clsx';\n// Ant Design resources\nimport { Image } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { PUBLIC_URL } from 'utils/constants';\nimport { useBlurCards } from 'hooks/useBlurCards';\n\ntype ContenderCardProps = {\n  size: number;\n  overlayColor: string;\n  contender: WContender | WBracket;\n  className?: string;\n  hideName?: boolean;\n};\n\nexport function ContenderCard({ size, overlayColor, contender, className, hideName }: ContenderCardProps) {\n  const { language } = useLanguage();\n  const { shouldBeBlurred } = useBlurCards();\n\n  const isBlurred = shouldBeBlurred(contender.id);\n\n  const imageURL = contender.id.replace(/-/g, '/');\n\n  return (\n    <div className={clsx('w-contender', className)} style={{ width: `${size}px` }}>\n      {!hideName && <span className=\"w-contender-name\">{contender.name[language]}</span>}\n      <img\n        src={`${PUBLIC_URL.IN_GAME}/w-overlay-${overlayColor}.png`}\n        className=\"w-contender-overlay\"\n        alt=\"contender\"\n        style={{ width: `${size}px` }}\n      />\n      <Image\n        src={`${process.env.REACT_APP_TDI_IMAGES_URL}${imageURL}.jpg`}\n        width={size}\n        className={clsx('w-contender-image', isBlurred && 'w-contender-image--blur')}\n        fallback={`${PUBLIC_URL.IN_GAME}/w-no-image.jpg`}\n        alt={contender.name[language]}\n      />\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Button } from 'antd';\n// Components\nimport { FloatingHand } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { ContenderCard } from './ContenderCard';\n\ntype ContendersHandProps = {\n  contenders: WContender[];\n  onSelect?: GenericFunction;\n};\n\nexport function ContendersHand({ contenders, onSelect }: ContendersHandProps) {\n  const cardWidth = useCardWidth(5, 32, 100);\n\n  return (\n    <FloatingHand title={<Translate pt=\"Seus Competidores\" en=\"Your Contenders\" />}>\n      <ul className=\"w-contenders-hand\">\n        {contenders.map((contender) => (\n          <li key={contender.id} className=\"w-contenders-hand__entry\">\n            {Boolean(onSelect) && (\n              <Button\n                onClick={() => onSelect!(contender.id)}\n                shape=\"round\"\n                ghost\n                className=\"w-contenders-hand__button\"\n              >\n                <Translate pt=\"Selecionar\" en=\"Select\" />\n              </Button>\n            )}\n            <ContenderCard contender={contender} overlayColor=\"gray\" size={cardWidth} />\n          </li>\n        ))}\n      </ul>\n    </FloatingHand>\n  );\n}\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Hooks\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { LETTERS } from 'utils/constants';\nimport { mockSelectChallenge } from './utils/mock';\n// Components\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { TransparentButton } from 'components/buttons';\nimport { Card } from 'components/cards';\nimport { ContendersHand } from './components/ContendersHand';\n\ntype StepSelectChallengeProps = {\n  onSubmitChallenge: GenericFunction;\n  challenges: TextCard[];\n  userContenders: WContender[];\n  round: GameRound;\n};\n\nexport function StepSelectChallenge({\n  onSubmitChallenge,\n  challenges,\n  userContenders,\n  round,\n}: StepSelectChallengeProps) {\n  useMock(() => {\n    onSubmitChallenge({ challengeId: mockSelectChallenge(challenges) });\n  });\n\n  return (\n    <Step fullWidth>\n      <Title size=\"medium\">\n        <Translate pt=\"Selecione o desafio da rodada\" en=\"Select the theme for the round\" />\n      </Title>\n\n      <Instruction contained>\n        <Translate\n          pt={<>Cada rodada é feita ao redor de um desafio.</>}\n          en={<>Each round has a challenge for the contenders to battle on!</>}\n        />\n        {userContenders.length > 1 && (\n          <Translate\n            pt={<> Você tem competidores em mãos (na barra abaixo) e um deles irá participar desta rodada.</>}\n            en={<> You have a hand of contenders and one of them will participate in this round.</>}\n          />\n        )}\n        {userContenders.length === 0 && (\n          <Translate pt={<> Selecione um dos desafios.</>} en={<> Select one of the challenges.</>} />\n        )}\n        {userContenders.length > 1 && round.current < 5 ? (\n          <Translate\n            pt={\n              <>\n                <br />\n                Selecione o desafio que você acha que um dos seus competidores tem mais change de vencer.\n                <br />\n                Você ganha 2 pontos se ele(a) vencer.\n              </>\n            }\n            en={\n              <>\n                <br />\n                Select a challenge you think one of your contenders have the best chance of winning.\n                <br />\n                You get 2 points if they win.\n              </>\n            }\n          />\n        ) : (\n          <Translate\n            pt={\n              <>\n                <br />\n                Este é uma rodada de semifinalistas, então somente competidores que chegaram na semi-final\n                participam.\n                <br />\n                Você não selecionará um competidor dessa vez.\n              </>\n            }\n            en={\n              <>\n                <br />\n                This is a semifinalist round, so only contenders that got to the semifinals will participate.\n                <br />\n                You won't select a contender this time.\n              </>\n            }\n          />\n        )}\n      </Instruction>\n\n      <Space className=\"space-container\" align=\"center\">\n        {challenges.map((challenge, index) => {\n          return (\n            <TransparentButton\n              key={challenge.id}\n              onClick={() => onSubmitChallenge({ challengeId: challenge.id })}\n            >\n              <Card header={LETTERS[index]} randomColor>\n                {challenge.text}\n              </Card>\n            </TransparentButton>\n          );\n        })}\n      </Space>\n\n      {round.current < 5 && userContenders.length > 1 && <ContendersHand contenders={userContenders} />}\n    </Step>\n  );\n}\n","// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\nimport { useOnSubmitChallengeAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { RoundAnnouncement } from 'components/round';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { StepSelectChallenge } from './StepSelectChallenge';\nimport { SelectListIcon } from 'components/icons/SelectListIcon';\nimport { ContendersHand } from './components/ContendersHand';\n\nfunction PhaseChallengeSelection({ state, players, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, goToNextStep, setStep } = useStep(0);\n  const user = useUser(players);\n\n  const onSubmitChallenge = useOnSubmitChallengeAPIRequest(setStep);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.SUPER_CAMPEONATO.CHALLENGE_SELECTION}\n    >\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <RoundAnnouncement round={state.round} onPressButton={goToNextStep} time={4} circleColor=\"pink\">\n          <Instruction contained>\n            {state.round.current === state.round.total ? (\n              <Translate pt=\"Rodada final: Somente os finalistas!\" en=\"Final Round: Only finalists\" />\n            ) : (\n              <Translate pt=\"Quem vai ganhar a medalha de ouro?\" en=\"Who's gonna get the gold medal?\" />\n            )}\n          </Instruction>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <PhaseAnnouncement\n          icon={<SelectListIcon />}\n          title={translate('Desafio', 'Challenge')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          duration={5}\n        >\n          <Instruction>\n            <Translate pt=\"Qual o desafio da rodada?\" en=\"What's the round's challenge?\" />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 2 */}\n        <StepSelectChallenge\n          onSubmitChallenge={onSubmitChallenge}\n          challenges={state.challenges}\n          userContenders={user.contenders}\n          round={state.round}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseChallengeSelection;\n","import { SUPER_CAMPEONATO_API } from 'services/adapters';\nimport { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { ACTIONS } from './constants';\n\nexport function useOnSubmitChallengeAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: SUPER_CAMPEONATO_API.submitAction,\n    actionName: 'submit-challenge',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(1),\n    successMessage: translate('Desafio enviado com sucesso!', 'Challenge send successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar o desafio',\n      'Oops, the application failed to submit the challenge'\n    ),\n  });\n\n  return (payload: SubmitChallengePayload) => {\n    request({\n      action: ACTIONS.SUBMIT_CHALLENGE,\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitContenderAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: SUPER_CAMPEONATO_API.submitAction,\n    actionName: 'submit-contender',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate('Competidor enviado com sucesso!', 'Contender send successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar o competidor',\n      'Oops, the application failed to submit the contender'\n    ),\n  });\n\n  return (payload: SubmitContendersPayload) => {\n    request({\n      action: ACTIONS.SUBMIT_CONTENDERS,\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitBetsAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: SUPER_CAMPEONATO_API.submitAction,\n    actionName: 'submit-bets',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate('Apostas enviadas com sucesso!', 'Bets send successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar apostas',\n      'Oops, the application failed to submit bets'\n    ),\n  });\n\n  return (payload: SubmitBetsPayload) => {\n    request({\n      action: ACTIONS.SUBMIT_BETS,\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitVotesAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: SUPER_CAMPEONATO_API.submitAction,\n    actionName: 'submit-votes',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate('Votos enviados com sucesso!', 'Votes send successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar votos',\n      'Oops, the application failed to submit votes'\n    ),\n  });\n\n  return (payload: SubmitBattleVotesPayload) => {\n    request({\n      action: ACTIONS.SUBMIT_VOTES,\n      ...payload,\n    });\n  };\n}\n","// Ant Design resources\nimport { Space } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Card } from 'components/cards';\n\ntype ChallengeProps = {\n  challenge: TextCard;\n};\n\nexport function Challenge({ challenge }: ChallengeProps) {\n  const { translate } = useLanguage();\n  return (\n    <Space className=\"space-container\" align=\"center\">\n      <Card header={translate('Desafio', 'Challenge')} color=\"purple\">\n        {challenge.text}\n      </Card>\n    </Space>\n  );\n}\n","// Ant Design Resources\n// Hooks\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockSelectContender } from './utils/mock';\n// Components\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { ContendersHand } from './components/ContendersHand';\nimport { Challenge } from './components/Challenge';\n\ntype StepSelectContendersProps = {\n  onSubmitContender: GenericFunction;\n  challenge: TextCard;\n  userContenders: WContender[];\n  players: GamePlayers;\n};\n\nexport function StepSelectContenders({\n  onSubmitContender,\n  challenge,\n  userContenders,\n  players,\n}: StepSelectContendersProps) {\n  useMock(() => {\n    onSubmitContender({ contendersId: mockSelectContender(userContenders) });\n  });\n\n  return (\n    <Step fullWidth>\n      <Title size=\"medium\">\n        <Translate pt=\"Quem pode ganhar esse desafio?\" en=\"Who can win this challenge?\" />\n      </Title>\n\n      <Challenge challenge={challenge} />\n\n      <Instruction contained>\n        <Translate\n          pt=\"Selecione um de seus competidores para entrar no campeonato\"\n          en=\"Select one of your contenders to join the championship\"\n        />\n      </Instruction>\n\n      <ContendersHand\n        contenders={userContenders}\n        onSelect={(id) => onSubmitContender({ contendersId: id })}\n      />\n    </Step>\n  );\n}\n","// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\nimport { useOnSubmitContenderAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { StepSelectContenders } from './StepSelectContenders';\nimport { AnonymousIcon } from 'components/icons/AnonymousIcon';\nimport { ContendersHand } from './components/ContendersHand';\n\nfunction PhaseContenderSelection({ state, players, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, goToNextStep, setStep } = useStep(0);\n  const user = useUser(players);\n\n  const onSubmitContender = useOnSubmitContenderAPIRequest(setStep);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.SUPER_CAMPEONATO.CONTENDER_SELECTION}\n    >\n      <StepSwitcher\n        step={step}\n        players={players}\n        waitingRoomContent={<ContendersHand contenders={user.contenders} />}\n      >\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<AnonymousIcon />}\n          title={translate('Competidores', 'Contenders')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          duration={5}\n        >\n          <Instruction>\n            <Translate pt=\"Quem tem chance de ganhar?\" en=\"Who has what it takes?\" />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepSelectContenders\n          onSubmitContender={onSubmitContender}\n          challenge={state.challenge}\n          userContenders={user.contenders}\n          players={players}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseContenderSelection;\n","// Ant Design Resources\nimport { Avatar as AntAvatar } from 'antd';\n// Components\nimport { Avatar } from 'components/avatars';\n\ntype BracketContenderVotesProps = {\n  bracket: WBracket;\n  players: GamePlayers;\n};\n\nexport function BracketContenderVotes({ bracket, players }: BracketContenderVotesProps) {\n  return (bracket.votes ?? []).length > 0 ? (\n    <AntAvatar.Group className=\"w-contender-votes\" maxCount={3} size=\"small\">\n      {bracket.votes?.map((vote) => (\n        <Avatar\n          size=\"small\"\n          id={players[vote].avatarId}\n          alt={players[vote].name}\n          key={`${bracket.id}-${bracket.votes}`}\n        />\n      ))}\n    </AntAvatar.Group>\n  ) : (\n    <></>\n  );\n}\n","import clsx from 'clsx';\n// Components\nimport { Translate } from 'components/language';\nimport { BracketContenderVotes } from './BracketContenderVotes';\nimport { ContenderCard } from './ContenderCard';\n\ntype BracketsProps = {\n  brackets: WBracket[];\n  activeTier: WBracketTier;\n  players: GamePlayers;\n};\n\ntype BracketTiers = {\n  quarter: WBracket[];\n  semi: WBracket[];\n  final: WBracket[];\n  winner: WBracket[];\n};\n\nconst getContenderColor = (index: number, activeTier: WBracketTier) => {\n  if (activeTier === 'semi') {\n    return index % 2 === 0 ? 'orange' : 'green';\n  }\n  return index % 2 === 0 ? 'red' : 'blue';\n};\n\nexport function Brackets({ brackets, activeTier, players }: BracketsProps) {\n  const { quarter, semi, final, winner } = brackets.reduce(\n    (acc: BracketTiers, entry) => {\n      acc[entry.tier].push(entry);\n\n      return acc;\n    },\n    {\n      quarter: [],\n      semi: [],\n      final: [],\n      winner: [],\n    }\n  );\n  return (\n    <div className=\"w-brackets-container\">\n      <div className=\"tournament-headers\">\n        <h3>\n          <Translate pt=\"Quartas\" en=\"Quarter-finals\" />\n        </h3>\n        <h3>\n          <Translate pt=\"Semifinais\" en=\"Semifinals\" />\n        </h3>\n        <h3>\n          <Translate pt=\"Final\" en=\"Final\" />\n        </h3>\n        <h3>\n          <Translate pt=\"Campeão\" en=\"Winner\" />\n        </h3>\n      </div>\n      <div className=\"w-tournament-brackets\">\n        <ul className=\"w-bracket w-bracket--1\">\n          {quarter.map((entry, index) => (\n            <li\n              key={`${entry.id}-${entry.position}`}\n              className={clsx('w-team-item', entry.win && 'w-team-item--win')}\n            >\n              <ContenderCard\n                size={100}\n                overlayColor={activeTier === entry.tier ? getContenderColor(index, activeTier) : 'gray'}\n                contender={{\n                  id: entry.id,\n                  name: entry.name,\n                }}\n                className=\"w-bracket-contender\"\n              />\n              <BracketContenderVotes bracket={entry} players={players} />\n            </li>\n          ))}\n        </ul>\n        <ul className=\"w-bracket w-bracket--2\">\n          {semi.map((entry) => (\n            <li\n              key={`${entry.id}-${entry.position}`}\n              className={clsx('w-team-item', entry.win && 'w-team-item--win')}\n            >\n              <ContenderCard\n                size={100}\n                overlayColor=\"gray\"\n                contender={{\n                  id: entry.id,\n                  name: entry.name,\n                }}\n                className=\"w-bracket-contender\"\n              />\n              <BracketContenderVotes bracket={entry} players={players} />\n            </li>\n          ))}\n        </ul>\n        <ul className=\"w-bracket w-bracket--3\">\n          {final.map((entry) => (\n            <li\n              key={`${entry.id}-${entry.position}`}\n              className={clsx('w-team-item', entry.win && 'w-team-item--win')}\n            >\n              <ContenderCard\n                size={100}\n                overlayColor=\"gray\"\n                contender={{\n                  id: entry.id,\n                  name: entry.name,\n                }}\n                className=\"w-bracket-contender\"\n              />\n              <BracketContenderVotes bracket={entry} players={players} />\n            </li>\n          ))}\n        </ul>\n        <ul className=\"w-bracket w-bracket--4\">\n          {winner.map((entry) => (\n            <li\n              key={`${entry.id}-${entry.position}`}\n              className={clsx('w-team-item', entry.name.pt !== 'TBD' && 'w-team-item--win')}\n            >\n              <ContenderCard\n                size={100}\n                overlayColor={entry.name.pt !== 'TBD' ? 'yellow' : 'gray'}\n                contender={{\n                  id: entry.id,\n                  name: entry.name,\n                }}\n                className=\"w-bracket-contender\"\n              />\n              <BracketContenderVotes bracket={entry} players={players} />\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n","// Ant Design resources\nimport { Select } from 'antd';\n// Components\nimport { Translate } from 'components/language';\n\ntype ContendersSelectProps = {\n  contenders: WContender[];\n  updateBet: GenericFunction;\n  language: Language;\n  betTier: WBracketTier;\n};\n\nexport function ContendersSelect({ contenders, updateBet, language, betTier }: ContendersSelectProps) {\n  return (\n    <Select className=\"w-bet-form__select\" defaultValue=\"\" onChange={(id) => updateBet({ [betTier]: id })}>\n      <Select.Option value=\"\">\n        <Translate pt=\"Selecione\" en=\"Select\" />\n      </Select.Option>\n      {contenders.map((contender) => (\n        <Select.Option value={contender.id} key={`option-${betTier}-${contender.id}`}>\n          {contender.name[language]}\n        </Select.Option>\n      ))}\n    </Select>\n  );\n}\n","// Ant Design Resources\nimport { Button, Popconfirm } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Translate } from 'components/language';\n\ntype ResetBettingButtonProps = {\n  onConfirm: GenericFunction;\n};\n\nexport function ResetBetsButton({ onConfirm }: ResetBettingButtonProps) {\n  const { translate } = useLanguage();\n  return (\n    <Popconfirm\n      title={translate(\n        'Tem certeza que quer reiniciar apostas?',\n        'Are you sure you want to restart the bets?'\n      )}\n      onConfirm={onConfirm}\n      okText={translate('Sim', 'Yes')}\n      cancelText={translate('Não', 'No')}\n    >\n      <Button>\n        <Translate pt=\"Reiniciar\" en=\"Reset\" />\n      </Button>\n    </Popconfirm>\n  );\n}\n","import clsx from 'clsx';\nimport { useEffect, useState } from 'react';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { getSmartBetContenderOptions } from '../utils/helpers';\nimport { DEFAULT_BETS, TIER_BY_STEP } from '../utils/constants';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { ContendersSelect } from './ContendersSelect';\nimport { MedalIcon } from 'components/icons/MedalIcon';\nimport { getAnimationClass } from 'utils/helpers';\nimport { IconAvatar } from 'components/icons/IconAvatar';\nimport { TrophyIcon } from 'components/icons/TrophyIcon';\nimport { ThumbsUpIcon } from 'components/icons/ThumbsUpIcon';\nimport { ResetBetsButton } from './ResetBetsButton';\n\ntype BetsFormProps = {\n  brackets: WBracket[];\n  onSubmitBets: GenericFunction;\n};\n\nexport function BetsForm({ brackets, onSubmitBets }: BetsFormProps) {\n  const { language } = useLanguage();\n  const [step, setStep] = useState(0);\n  const [contenders, setContenders] = useState<WContender[]>([]);\n\n  const [bets, setBets] = useState(DEFAULT_BETS);\n\n  const resetBets = () => {\n    setStep(0);\n    setBets(DEFAULT_BETS);\n  };\n\n  const updateBet = (value: StringDictionary) => {\n    setBets((s) => ({ ...s, ...value }));\n  };\n\n  useEffect(() => {\n    setContenders(getSmartBetContenderOptions(brackets, TIER_BY_STEP[step], bets, language));\n  }, [brackets, step, bets, language]);\n\n  const availableContenders = contenders.filter((contender) => !Object.values(bets).includes(contender.id));\n\n  return (\n    <div className=\"w-bet-form\">\n      {step === 0 && (\n        <Instruction\n          contained\n          className={clsx(\n            'w-bet-form__container',\n            'w-bet-form__container--final',\n            getAnimationClass('zoomIn')\n          )}\n        >\n          <IconAvatar icon={<TrophyIcon />} size=\"large\" />\n          <p className=\"w-bet-form__instruction\">\n            <Translate\n              pt={\n                <>\n                  Selecione o competidor que você acha que <u>vai ganhar a final</u>.\n                  <br />\n                  Se ele ganhar, você recebe 5 pontos.\n                </>\n              }\n              en={\n                <>\n                  Select the contender you think will <u>win the final</u>.\n                  <br />\n                  If they win, you gain 5 points.\n                </>\n              }\n            />\n          </p>\n\n          <ContendersSelect\n            contenders={availableContenders}\n            updateBet={updateBet}\n            language={language}\n            betTier={TIER_BY_STEP[step]}\n          />\n\n          <Space className=\"space-container\">\n            <ResetBetsButton onConfirm={resetBets} />\n            <Button onClick={() => setStep(step + 1)} disabled={Boolean(!bets.final)} type=\"primary\">\n              <Translate pt=\"Próximo\" en=\"Next\" />\n            </Button>\n          </Space>\n        </Instruction>\n      )}\n      {step === 1 && (\n        <Instruction\n          contained\n          className={clsx(\n            'w-bet-form__container',\n            'w-bet-form__container--semi',\n            getAnimationClass('zoomIn')\n          )}\n        >\n          <IconAvatar icon={<MedalIcon />} size=\"large\" />\n          <p className=\"w-bet-form__instruction\">\n            <Translate\n              pt={\n                <>\n                  Selecione o competidor que você acha que ganha uma <u>semifinal</u>.\n                  <br />\n                  Se ele ganhar, você recebe 3 pontos.\n                </>\n              }\n              en={\n                <>\n                  Select the contender you think will win at least a <u>semifinal</u>.\n                  <br />\n                  If they win, you gain 3 points.\n                </>\n              }\n            />\n          </p>\n\n          <ContendersSelect\n            contenders={availableContenders}\n            updateBet={updateBet}\n            language={language}\n            betTier={TIER_BY_STEP[step]}\n          />\n\n          <Space className=\"space-container\">\n            <ResetBetsButton onConfirm={resetBets} />\n            <Button onClick={() => setStep(step + 1)} disabled={Boolean(!bets.semi)} type=\"primary\">\n              <Translate pt=\"Próximo\" en=\"Next\" />\n            </Button>\n          </Space>\n        </Instruction>\n      )}\n      {step === 2 && (\n        <Instruction\n          contained\n          className={clsx(\n            'w-bet-form__container',\n            'w-bet-form__container--quarter',\n            getAnimationClass('zoomIn')\n          )}\n        >\n          <IconAvatar icon={<ThumbsUpIcon />} size=\"large\" />\n          <p className=\"w-bet-form__instruction\">\n            <Translate\n              pt={\n                <>\n                  Selecione o competidor que você acha que ganha uma <u>quarta de final</u>.\n                  <br />\n                  Se ele ganhar, você recebe 1 pontos.\n                </>\n              }\n              en={\n                <>\n                  Select the contender you think will win at least a <u>quarterfinal</u>.\n                  <br />\n                  If they win, you gain 1 points.\n                </>\n              }\n            />\n          </p>\n\n          <ContendersSelect\n            contenders={availableContenders}\n            updateBet={updateBet}\n            language={language}\n            betTier={TIER_BY_STEP[step]}\n          />\n\n          <Space className=\"space-container\">\n            <ResetBetsButton onConfirm={resetBets} />\n            <Button onClick={() => onSubmitBets(bets)} type=\"primary\" disabled={Boolean(!bets.quarter)}>\n              <Translate pt=\"Enviar Apostas\" en=\"Submit Bets\" />\n            </Button>\n          </Space>\n        </Instruction>\n      )}\n    </div>\n  );\n}\n","// Hooks\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockBets } from './utils/mock';\n// Components\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { Brackets } from './components/Brackets';\nimport { BetsForm } from './components/BetsForm';\nimport { Challenge } from './components/Challenge';\n\ntype StepMakeYourBetsProps = {\n  onSubmitBets: GenericFunction;\n  challenge: TextCard;\n  brackets: WBracket[];\n  players: GamePlayers;\n};\n\nexport function StepMakeYourBets({ onSubmitBets, challenge, brackets, players }: StepMakeYourBetsProps) {\n  useMock(() => {\n    onSubmitBets(mockBets(brackets));\n  });\n\n  return (\n    <Step fullWidth>\n      <Title size=\"medium\">\n        <Translate pt=\"Faça suas apostas!\" en=\"Make your bets!\" />\n      </Title>\n\n      <Challenge challenge={challenge} />\n\n      <BetsForm brackets={brackets} onSubmitBets={onSubmitBets} />\n\n      <Brackets brackets={brackets} activeTier=\"quarter\" players={players} />\n    </Step>\n  );\n}\n","import { useMemo } from 'react';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Utils\nimport { findBetContenders } from '../utils/helpers';\n// Components\nimport { FloatingHand, ImageBlurButtonContainer } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { ContenderCard } from './ContenderCard';\nimport { GamblingChipIcon } from 'components/icons/GamblingChipIcon';\n\ntype BetsFloatingHandProps = {\n  bets: WBets;\n  brackets: WBracket[];\n  selectedContenderId?: CardId;\n};\n\nexport function BetsFloatingHand({ bets, brackets, selectedContenderId = '' }: BetsFloatingHandProps) {\n  const cardWidth = useCardWidth(5, 32, 100);\n\n  const { quarterCard, semiCard, finalCard, selectedCard } = useMemo(\n    () => findBetContenders(brackets, bets, selectedContenderId),\n    [bets.final, bets.quarter, bets.semi] // eslint-disable-line\n  );\n\n  if (!quarterCard || !semiCard || !finalCard) return <></>;\n\n  return (\n    <FloatingHand title={<Translate pt=\"Suas Apostas\" en=\"Your Bets\" />} icon={<GamblingChipIcon />}>\n      <div className=\"w-bets-floating-hand\">\n        <ul className=\"w-floating-bets\">\n          <li className=\"w-floating-bets__entry\">\n            <span className=\"w-floating-bets__label\">\n              <Translate pt=\"Quartas de finais\" en=\"Quarterfinals\" />\n            </span>\n            <ContenderCard contender={quarterCard!} overlayColor=\"gray\" size={cardWidth} />\n          </li>\n\n          <li className=\"w-floating-bets__entry\">\n            <span className=\"w-floating-bets__label\">\n              <Translate pt=\"Semifinais\" en=\"Semifinals\" />\n            </span>\n            <ContenderCard contender={semiCard!} overlayColor=\"gray\" size={cardWidth} />\n          </li>\n\n          <li className=\"w-floating-bets__entry\">\n            <span className=\"w-floating-bets__label\">\n              <Translate pt=\"Final\" en=\"Final\" />\n            </span>\n            <ContenderCard contender={finalCard!} overlayColor=\"gray\" size={cardWidth} />\n          </li>\n\n          {Boolean(selectedCard) && (\n            <li className=\"w-floating-bets__entry w-floating-bets__entry--your-contender\">\n              <span className=\"w-floating-bets__label\">\n                <Translate pt=\"Seu competidor\" en=\"Your contender\" />\n              </span>\n              <ImageBlurButtonContainer cardId={selectedCard!.id}>\n                <ContenderCard contender={selectedCard!} overlayColor=\"gray\" size={cardWidth} />\n              </ImageBlurButtonContainer>\n            </li>\n          )}\n        </ul>\n      </div>\n    </FloatingHand>\n  );\n}\n","// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitBetsAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { StepMakeYourBets } from './StepMakeYourBets';\nimport { GamblingChipIcon } from 'components/icons/GamblingChipIcon';\nimport { useUser } from 'hooks/useUser';\nimport { BetsFloatingHand } from './components/BetsFloatingHand';\n\nfunction PhaseBets({ state, players, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, goToNextStep, setStep } = useStep(0);\n  const user = useUser(players);\n\n  const onSubmitBets = useOnSubmitBetsAPIRequest(setStep);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.SUPER_CAMPEONATO.BETS}>\n      <StepSwitcher\n        step={step}\n        players={players}\n        waitingRoomContent={\n          Boolean(user.bets?.final) && (\n            <BetsFloatingHand\n              bets={user.bets}\n              brackets={state.brackets}\n              selectedContenderId={user.selectedContenderId}\n            />\n          )\n        }\n      >\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<GamblingChipIcon />}\n          title={translate('Apostas', 'Bets')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          duration={5}\n        >\n          <Instruction>\n            <Translate\n              pt=\"Selecione quem você acha que ganha as quartas de final, semi final e final\"\n              en=\"Place bet on who you think will win the quarter-finals, semifinals, and finals\"\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepMakeYourBets\n          onSubmitBets={onSubmitBets}\n          challenge={state.challenge}\n          brackets={state.brackets}\n          players={players}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseBets;\n","// Components\nimport { Translate } from 'components/language';\n\ntype TierTitleProps = {\n  tier: WBracketTier;\n};\n\nexport function TierTitle({ tier }: TierTitleProps) {\n  if (tier === 'quarter') return <Translate pt=\"Quartas de finais\" en=\"Quarterfinals\" />;\n  if (tier === 'semi') return <Translate pt=\"Semifinais\" en=\"Semifinals\" />;\n  return <Translate pt=\"Final\" en=\"Final\" />;\n}\n","// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { ContenderCard } from './ContenderCard';\n\ntype TierContendersProps = {\n  contenders: WBracket[][];\n};\n\nexport function TierContenders({ contenders }: TierContendersProps) {\n  const flatContenders = contenders.flat();\n  const cardWidth = useCardWidth(flatContenders.length + 2, 16, 30, 100);\n\n  return (\n    <ul className=\"w-tier-contenders\">\n      {flatContenders.map((contender) => (\n        <li className=\"w-tier-contender\" key={`w-tier-contender-${contender.id}`}>\n          <ContenderCard contender={contender} overlayColor=\"gray\" size={cardWidth} />\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { useMemo } from 'react';\nimport clsx from 'clsx';\n// Ant Design resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useMock } from 'hooks/useMock';\nimport { useStep } from 'hooks/useStep';\nimport { useBracketVoting } from '../utils/useBracketVoting';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\nimport { mockVotes } from '../utils/mock';\n// Components\nimport { TransparentButton } from 'components/buttons';\nimport { Translate } from 'components/language';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { ContenderCard } from './ContenderCard';\nimport { TierContenders } from './TierContenders';\n\ntype VotingProps = {\n  brackets: WBracket[];\n  tier: WBracketTier;\n  onSubmitVotes: GenericFunction;\n  players: GamePlayers;\n  bets: WBets;\n};\n\nexport function Voting({ brackets, tier, onSubmitVotes, players, bets }: VotingProps) {\n  const { step, goToNextStep } = useStep(0);\n\n  const { seconds } = useCountdown({\n    duration: 5,\n    autoStart: true,\n    onExpire: goToNextStep,\n  });\n\n  const bracketedContenders: WBracket[][] = useMemo(\n    () =>\n      brackets\n        .filter((entry) => entry.tier === tier)\n        .map((entry, index, arr) => {\n          if (index % 2 === 0) {\n            return [entry, arr[index + 1]];\n          }\n          return [];\n        })\n        .filter((entry) => entry.length > 0),\n    [brackets, tier]\n  );\n\n  const { votes, updateVote, isComplete, checkActiveVote } = useBracketVoting(tier);\n\n  const colors = getContenderColor(tier);\n\n  useMock(() => {\n    onSubmitVotes({ votes: mockVotes(bracketedContenders, bets) });\n  });\n\n  return (\n    <StepSwitcher step={step} players={players}>\n      {/* Step 0 */}\n\n      <Instruction contained>\n        <p>\n          {tier === 'quarter' ? (\n            <Translate pt=\"Competidores:\" en=\"Contenders:\" />\n          ) : (\n            <Translate pt=\"Foram para a próxima fase:\" en=\"Moved to the next bracket:\" />\n          )}\n        </p>\n        <TierContenders contenders={bracketedContenders} />\n        <p>\n          <Translate pt={<>Votação começando em {seconds}</>} en={<>Voting starting in {seconds}</>} />\n        </p>\n      </Instruction>\n\n      {/* Step 1 */}\n      <div>\n        <ul className=\"w-voting-group\">\n          {bracketedContenders.map((contenderPair) => (\n            <VotingOptions\n              left={contenderPair[0]}\n              right={contenderPair[1]}\n              onClick={updateVote}\n              colorLeft={colors.left}\n              colorRight={colors.right}\n              checkActiveVote={checkActiveVote}\n            />\n          ))}\n        </ul>\n\n        <Space className=\"space-container\">\n          <Button type=\"primary\" size=\"large\" onClick={() => onSubmitVotes({ votes })} disabled={!isComplete}>\n            <Translate pt=\"Enviar votos\" en=\"Submit votes\" />\n          </Button>\n        </Space>\n      </div>\n    </StepSwitcher>\n  );\n}\n\ntype VotingOptionsProps = {\n  left: WBracket;\n  right: WBracket;\n  onClick: GenericFunction;\n  colorLeft: string;\n  colorRight: string;\n  checkActiveVote: (pos: number) => boolean;\n};\n\nfunction VotingOptions({ left, right, colorLeft, colorRight, onClick, checkActiveVote }: VotingOptionsProps) {\n  return (\n    <li className={clsx('w-voting-options', getAnimationClass('flipInX'))}>\n      <TransparentButton\n        onClick={() => onClick(left)}\n        active={checkActiveVote(left.position)}\n        className=\"w-vote\"\n        activeClass=\"w-vote--active\"\n      >\n        <ContenderCard size={200} contender={left} overlayColor={colorLeft} />\n      </TransparentButton>\n      <span className=\"w-voting-options__vs\">VS</span>\n      <TransparentButton\n        onClick={() => onClick(right)}\n        active={checkActiveVote(right.position)}\n        className=\"w-vote\"\n        activeClass=\"w-vote--active\"\n      >\n        <ContenderCard size={200} contender={right} overlayColor={colorRight} />\n      </TransparentButton>\n    </li>\n  );\n}\n\nconst getContenderColor = (tier: WBracketTier) => {\n  switch (tier) {\n    case 'quarter':\n      return {\n        left: 'red',\n        right: 'blue',\n      };\n    case 'semi':\n      return {\n        left: 'green',\n        right: 'orange',\n      };\n    default:\n      return {\n        left: 'red',\n        right: 'blue',\n      };\n  }\n};\n","import { useState } from 'react';\nimport { targetByTier, voteTarget } from './constants';\n\nexport function useBracketVoting(tier: WBracketTier) {\n  const [votes, setVotes] = useState<NumberDictionary>({});\n\n  function updateVote(vote: WBracket) {\n    setVotes((v) => ({ ...v, [voteTarget[vote.position]]: vote.position }));\n  }\n\n  function checkActiveVote(position: number) {\n    return Object.values(votes).includes(position);\n  }\n\n  return {\n    votes,\n    updateVote,\n    isComplete: Object.keys(votes).length === targetByTier[tier],\n    checkActiveVote,\n  };\n}\n","// Components\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\nimport { Brackets } from './components/Brackets';\nimport { TierTitle } from './components/TierTitle';\nimport { Challenge } from './components/Challenge';\nimport { Voting } from './components/Voting';\nimport { BetsFloatingHand } from './components/BetsFloatingHand';\nimport { ReadyPlayersBar } from 'components/players';\n\ntype StepBattleProps = {\n  onSubmitVotes: GenericFunction;\n  challenge: TextCard;\n  brackets: WBracket[];\n  tier: WBracketTier;\n  bets: WBets;\n  selectedContenderId: CardId;\n  players: GamePlayers;\n};\n\nexport function StepBattle({\n  onSubmitVotes,\n  challenge,\n  brackets,\n  tier,\n  bets,\n  selectedContenderId,\n  players,\n}: StepBattleProps) {\n  return (\n    <Step fullWidth>\n      <Title size=\"medium\">\n        <TierTitle tier={tier} />\n      </Title>\n\n      <Challenge challenge={challenge} />\n\n      <Voting brackets={brackets} tier={tier} onSubmitVotes={onSubmitVotes} players={players} bets={bets} />\n\n      <Brackets brackets={brackets} activeTier={tier} players={players} />\n\n      <ReadyPlayersBar players={players} />\n\n      <BetsFloatingHand bets={bets} brackets={brackets} selectedContenderId={selectedContenderId} />\n    </Step>\n  );\n}\n","import { useEffect, useState } from 'react';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\nimport { useOnSubmitVotesAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { BoxingGlovesIcon } from 'components/icons/BoxingGlovesIcon';\nimport { StepBattle } from './StepBattle';\n\nfunction PhaseBattle({ state, players, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, goToNextStep, setStep } = useStep(0);\n  const [previousTier, setPreviousTier] = useState<string>('');\n  const user = useUser(players);\n\n  const onSubmitVotes = useOnSubmitVotesAPIRequest(setStep);\n\n  useEffect(() => {\n    if (state.tier !== previousTier) {\n      setPreviousTier(state.tier);\n      setStep(0);\n    }\n  }, [state.tier, previousTier, setStep]);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.SUPER_CAMPEONATO.BATTLE}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<BoxingGlovesIcon />}\n          title={translate('Batalha!', 'Battle!')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          duration={4}\n        >\n          <Instruction>\n            <Translate\n              pt=\"Vote em quem você acha que melhor se encaixa no desafio\"\n              en=\"Vote on who you think best fit the challenge\"\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepBattle\n          onSubmitVotes={onSubmitVotes}\n          challenge={state.challenge}\n          brackets={state.brackets}\n          tier={state.tier}\n          bets={user.bets}\n          selectedContenderId={user.selectedContenderId}\n          players={players}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseBattle;\n","import clsx from 'clsx';\nimport { useMemo } from 'react';\n// Utils\nimport { getAvatarColorById, sortPlayers } from 'utils/helpers';\nimport { findBetContenders, getContenderIdsByTier } from '../utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { ContenderCard } from './ContenderCard';\n\ntype PlayersBetsProps = {\n  players: GamePlayers;\n  brackets: WBracket[];\n};\n\nexport function PlayersBets({ players, brackets }: PlayersBetsProps) {\n  const playersList = sortPlayers(players);\n  const contendersByTiers = getContenderIdsByTier(brackets);\n  return (\n    <ul className=\"w-players-bets\" style={{ gridTemplateColumns: `repeat(${playersList.length + 1}, auto)` }}>\n      <li className=\"w-players-bets__player w-players-bets__player--header\">\n        <div className=\"w-players-bets__square\">\n          <Avatar shape=\"square\" size=\"large\" className=\"w-players-bets__avatar\" id=\"N\" />\n        </div>\n        <div className=\"w-players-bets__square\">\n          <Translate pt=\"Final\" en=\"Final\" />\n        </div>\n        <div className=\"w-players-bets__square\">\n          <Translate pt=\"Semi\" en=\"Semi\" />\n        </div>\n        <div className=\"w-players-bets__square\">\n          <Translate pt=\"Quartas\" en=\"Quarter\" />\n        </div>\n        <div className=\"w-players-bets__square\">\n          <Translate pt=\"Competidor\" en=\"Contender\" />\n        </div>\n      </li>\n\n      {playersList.map((player) => (\n        <PlayersBetEntry\n          key={`players-bets-${player.id}`}\n          brackets={brackets}\n          player={player}\n          contendersByTiers={contendersByTiers}\n        />\n      ))}\n    </ul>\n  );\n}\ntype PlayersBetEntryProps = {\n  player: GamePlayer;\n  brackets: WBracket[];\n  contendersByTiers: WContenderByTier;\n};\n\nfunction PlayersBetEntry({ player, brackets, contendersByTiers }: PlayersBetEntryProps) {\n  const { quarterCard, semiCard, finalCard, selectedCard } = useMemo(\n    () => findBetContenders(brackets, player.bets, player.selectedContenderId),\n    [brackets, player.bets, player.selectedContenderId]\n  );\n\n  return (\n    <li\n      key={`players-bets-${player.id}`}\n      className=\"w-players-bets__player\"\n      style={{ backgroundColor: getAvatarColorById(player.avatarId) }}\n    >\n      <div className=\"w-players-bets__square\">\n        <Avatar shape=\"square\" size=\"large\" className=\"w-players-bets__avatar\" id={player.avatarId} />\n      </div>\n\n      <div\n        className={clsx(\n          'w-players-bets__square',\n          contendersByTiers.winner[finalCard!.id] && 'w-players-bets__square--win'\n        )}\n      >\n        <ContenderCard\n          size={50}\n          overlayColor={contendersByTiers.winner[finalCard!.id] ? 'yellow' : 'gray'}\n          contender={finalCard!}\n          hideName\n        />\n      </div>\n      <div\n        className={clsx(\n          'w-players-bets__square',\n          contendersByTiers.final[semiCard!.id] && 'w-players-bets__square--win'\n        )}\n      >\n        <ContenderCard\n          size={50}\n          overlayColor={contendersByTiers.final[semiCard!.id] ? 'yellow' : 'gray'}\n          contender={semiCard!}\n          hideName\n        />\n      </div>\n      <div\n        className={clsx(\n          'w-players-bets__square',\n          contendersByTiers.semi[quarterCard!.id] && 'w-players-bets__square--win'\n        )}\n      >\n        <ContenderCard\n          size={50}\n          overlayColor={contendersByTiers.semi[quarterCard!.id] ? 'yellow' : 'gray'}\n          contender={quarterCard!}\n          hideName\n        />\n      </div>\n      {selectedCard ? (\n        <div\n          className={clsx(\n            'w-players-bets__square',\n            contendersByTiers.winner[selectedCard!.id] && 'w-players-bets__square--win'\n          )}\n        >\n          <ContenderCard\n            size={50}\n            overlayColor={contendersByTiers.winner[selectedCard!.id] ? 'yellow' : 'gray'}\n            contender={selectedCard!}\n            hideName\n          />\n        </div>\n      ) : (\n        <div className={clsx('w-players-bets__square', 'w-players-bets__square--none')}>-</div>\n      )}\n    </li>\n  );\n}\n","// Components\nimport { AdminNextPhaseButton } from 'components/admin';\nimport { Translate } from 'components/language';\nimport { StepRankingWrapper } from 'components/ranking';\nimport { RoundsLeftInstruction } from 'components/text';\nimport { BetsFloatingHand } from './components/BetsFloatingHand';\nimport { Brackets } from './components/Brackets';\nimport { PlayersBets } from './components/PlayersBets';\n\ntype StepRankingProps = {\n  players: GamePlayers;\n  ranking: GameRanking;\n  isGameOver: boolean;\n  round: GameRound;\n  isLastRound?: boolean;\n  brackets: WBracket[];\n  selectedContenderId: CardId;\n  bets: WBets;\n};\n\nexport function StepRanking({\n  players,\n  ranking,\n  isGameOver,\n  round,\n  isLastRound = false,\n  brackets,\n  bets,\n  selectedContenderId,\n}: StepRankingProps) {\n  return (\n    <StepRankingWrapper\n      players={players}\n      ranking={ranking}\n      gainedPointsDescriptions={[\n        <Translate pt=\"Apostou na final corretamente\" en=\"Correct final bet\" />,\n        <Translate pt=\"Apostou nas semifinais corretamente\" en=\"Correct semifinal bet\" />,\n        <Translate pt=\"Apostou nas quartas de finais corretamente\" en=\"Correct quarterfinal bet\" />,\n        <Translate pt=\"Seu competidor ganhou\" en=\"Your competitor won\" />,\n      ]}\n    >\n      {!isGameOver && <RoundsLeftInstruction round={round} lastRound={isLastRound} />}\n\n      <PlayersBets players={players} brackets={brackets} />\n\n      <AdminNextPhaseButton round={round} lastRound={isLastRound} />\n\n      <Brackets brackets={brackets} activeTier=\"winner\" players={players} />\n\n      <BetsFloatingHand bets={bets} brackets={brackets} selectedContenderId={selectedContenderId} />\n    </StepRankingWrapper>\n  );\n}\n","// Ant Design resources\nimport { Space } from 'antd';\nimport { TrophyOutlined } from '@ant-design/icons';\n// Hooks\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Components\nimport { TimedButton } from 'components/buttons';\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\nimport { BetsFloatingHand } from './components/BetsFloatingHand';\nimport { Challenge } from './components/Challenge';\nimport { ContenderCard } from './components/ContenderCard';\n\ntype StepWinnerProps = {\n  challenge: TextCard;\n  brackets: WBracket[];\n  bets: WBets;\n  goToNextStep: GenericFunction;\n  selectedContenderId: CardId;\n};\n\nexport function StepWinner({\n  challenge,\n  brackets,\n  bets,\n  goToNextStep,\n  selectedContenderId,\n}: StepWinnerProps) {\n  useTemporarilyHidePlayersBar();\n\n  return (\n    <Step fullWidth>\n      <Title size=\"medium\">\n        <Translate pt=\"Vencedor\" en=\"Winner\" />\n      </Title>\n\n      <Challenge challenge={challenge} />\n\n      <Space className=\"space-container margin\" align=\"center\">\n        <ContenderCard size={200} overlayColor=\"yellow\" contender={brackets[brackets.length - 1]} />\n      </Space>\n\n      <Space className=\"space-container \" align=\"center\">\n        <TimedButton duration={4} icon={<TrophyOutlined />} onExpire={goToNextStep} onClick={goToNextStep}>\n          <Translate pt=\"Ver Ranking\" en=\"See Ranking\" />\n        </TimedButton>\n      </Space>\n\n      <BetsFloatingHand bets={bets} brackets={brackets} selectedContenderId={selectedContenderId} />\n    </Step>\n  );\n}\n","import { useEffect, useState } from 'react';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { TournamentIcon } from 'components/icons/TournamentIcon';\nimport { StepRanking } from './StepRanking';\nimport { StepWinner } from './StepWinner';\n\nfunction PhaseResults({ state, players, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, goToNextStep, setStep } = useStep(0);\n  const [previousTier, setPreviousTier] = useState<string>('');\n  const user = useUser(players);\n\n  useEffect(() => {\n    if (state.tier !== previousTier) {\n      setPreviousTier(state.tier);\n      setStep(0);\n    }\n  }, [state.tier, previousTier, setStep]);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.SUPER_CAMPEONATO.RESULTS}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<TournamentIcon />}\n          title={translate('Resultado!', 'Results!')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          duration={7}\n        >\n          <Instruction>\n            <Translate pt=\"Só pode haver um...\" en=\"There's only one...\" />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepWinner\n          brackets={state.brackets}\n          challenge={state.challenge}\n          bets={user.bets}\n          goToNextStep={goToNextStep}\n          selectedContenderId={user.selectedContenderId}\n        />\n\n        {/* Step 2 */}\n        <StepRanking\n          players={players}\n          ranking={state.ranking}\n          isGameOver={false}\n          round={state.round}\n          brackets={state.brackets}\n          isLastRound={state?.lastRound}\n          bets={user.bets}\n          selectedContenderId={user.selectedContenderId}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseResults;\n","// Ant Design resources\nimport { Space } from 'antd';\n// Components\nimport { GameOverWrapper } from 'components/game-over';\nimport { TrophyIcon } from 'components/icons/TrophyIcon';\nimport { Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { ContenderCard } from './components/ContenderCard';\n\nfunction PhaseGameOver({ state, info }: PhaseProps) {\n  return (\n    <GameOverWrapper info={info} state={state} announcementIcon={<TrophyIcon />}>\n      <Title size=\"xx-small\" className=\"padding\">\n        <Translate pt=\"Campeão Ultimate\" en=\"Ultimate Champion\" />\n      </Title>\n\n      <Space className=\"space-container margin\" align=\"center\">\n        <ContenderCard size={200} overlayColor=\"yellow\" contender={state.finalWinner} />\n      </Space>\n    </GameOverWrapper>\n  );\n}\n\nexport default PhaseGameOver;\n","import { ConfigProvider } from 'antd';\n// Constants\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport PhaseChallengeSelection from './PhaseChallengeSelection';\nimport PhaseContenderSelection from './PhaseContendersSelection';\nimport PhaseBets from './PhaseBets';\nimport PhaseBattle from './PhaseBattle';\nimport PhaseResults from './PhaseResults';\nimport PhaseGameOver from './PhaseGameOver';\n// Fonts\nimport 'assets/fonts/bangers.scss';\n\nConfigProvider.config({\n  theme: {\n    primaryColor: THEME_COLORS.RUSSIAN_VIOLET,\n  },\n});\n\nfunction SessionSuperCampeonato({ gameId }: SessionProps) {\n  function getActiveComponent(phase: string) {\n    switch (phase) {\n      case PHASES.DEFAULT.LOBBY:\n        return PhaseLobby;\n      case PHASES.DEFAULT.RULES:\n        return PhaseRules;\n      case PHASES.DEFAULT.SETUP:\n        return PhaseSetup;\n      case PHASES.SUPER_CAMPEONATO.CHALLENGE_SELECTION:\n        return PhaseChallengeSelection;\n      case PHASES.SUPER_CAMPEONATO.CONTENDER_SELECTION:\n        return PhaseContenderSelection;\n      case PHASES.SUPER_CAMPEONATO.BETS:\n        return PhaseBets;\n      case PHASES.SUPER_CAMPEONATO.BATTLE:\n        return PhaseBattle;\n      case PHASES.SUPER_CAMPEONATO.RESULTS:\n        return PhaseResults;\n      case PHASES.DEFAULT.GAME_OVER:\n        return PhaseGameOver;\n      default:\n        return PageError;\n    }\n  }\n\n  return (\n    <Session\n      gameId={gameId}\n      gameCollection={GAME_COLLECTION.SUPER_CAMPEONATO}\n      getActiveComponent={getActiveComponent}\n    />\n  );\n}\n\nexport default SessionSuperCampeonato;\n","// This icon file is generated automatically.\nvar DownSquareOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M505.5 658.7c3.2 4.4 9.7 4.4 12.9 0l178-246c3.8-5.3 0-12.7-6.5-12.7H643c-10.2 0-19.9 4.9-25.9 13.2L512 558.6 406.8 413.2c-6-8.3-15.6-13.2-25.9-13.2H334c-6.5 0-10.3 7.4-6.5 12.7l178 246z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z\" } }] }, \"name\": \"down-square\", \"theme\": \"outlined\" };\nexport default DownSquareOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DownSquareOutlinedSvg from \"@ant-design/icons-svg/es/asn/DownSquareOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar DownSquareOutlined = function DownSquareOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: DownSquareOutlinedSvg\n  }));\n};\n\nDownSquareOutlined.displayName = 'DownSquareOutlined';\nexport default /*#__PURE__*/React.forwardRef(DownSquareOutlined);","// This icon file is generated automatically.\nvar UpCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M518.5 360.3a7.95 7.95 0 00-12.9 0l-178 246c-3.8 5.3 0 12.7 6.5 12.7H381c10.2 0 19.9-4.9 25.9-13.2L512 460.4l105.2 145.4c6 8.3 15.6 13.2 25.9 13.2H690c6.5 0 10.3-7.4 6.5-12.7l-178-246z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"up-circle\", \"theme\": \"outlined\" };\nexport default UpCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport UpCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/UpCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar UpCircleOutlined = function UpCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: UpCircleOutlinedSvg\n  }));\n};\n\nUpCircleOutlined.displayName = 'UpCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(UpCircleOutlined);"],"names":["TrophyIcon","props","xmlns","viewBox","fill","d","cx","cy","r","ACTIONS","voteTarget","targetByTier","quarter","semi","final","winner","DEFAULT_BETS","TIER_BY_STEP","findBetContenders","brackets","bets","selectedContenderId","quarterCard","find","bracket","id","semiCard","finalCard","selectedCard","getSmartBetContenderOptions","tier","language","allContenders","orderBy","filter","entry","finalContender","position","semiContender","opposingFinalContenderPosition","opposingSemiContenderPosition","forbiddenPositions","includes","mockSelectChallenge","challenges","getRandomItem","mockVotes","bracketedContenders","betsList","Object","values","reduce","acc","pair","vote","ContenderCard","size","overlayColor","contender","className","hideName","useLanguage","isBlurred","shouldBeBlurred","useBlurCards","imageURL","replace","clsx","style","width","name","src","PUBLIC_URL","alt","process","fallback","ContendersHand","contenders","onSelect","cardWidth","useCardWidth","title","pt","en","map","Boolean","onClick","shape","ghost","StepSelectChallenge","onSubmitChallenge","userContenders","round","useMock","challengeId","fullWidth","contained","length","current","align","challenge","index","header","LETTERS","randomColor","text","state","players","info","translate","useStep","step","goToNextStep","setStep","user","useUser","request","useAPICall","apiFunction","SUPER_CAMPEONATO_API","actionName","onBeforeCall","onError","successMessage","errorMessage","payload","action","useOnSubmitChallengeAPIRequest","phase","allowedPhase","PHASES","onPressButton","time","circleColor","total","icon","SelectListIcon","onClose","currentRound","duration","Challenge","color","StepSelectContenders","onSubmitContender","contendersId","useOnSubmitContenderAPIRequest","waitingRoomContent","AnonymousIcon","BracketContenderVotes","votes","maxCount","avatarId","getContenderColor","activeTier","Brackets","push","win","ContendersSelect","updateBet","betTier","defaultValue","onChange","value","ResetBetsButton","onConfirm","okText","cancelText","BetsForm","onSubmitBets","useState","setContenders","setBets","resetBets","s","useEffect","availableContenders","getAnimationClass","IconAvatar","disabled","type","MedalIcon","ThumbsUpIcon","StepMakeYourBets","deepCopy","i","options","mockBets","BetsFloatingHand","useMemo","GamblingChipIcon","cardId","useOnSubmitBetsAPIRequest","TierTitle","TierContenders","flatContenders","flat","Voting","onSubmitVotes","seconds","useCountdown","autoStart","onExpire","arr","setVotes","updateVote","v","isComplete","keys","checkActiveVote","useBracketVoting","colors","contenderPair","VotingOptions","left","right","colorLeft","colorRight","active","activeClass","StepBattle","previousTier","setPreviousTier","useOnSubmitVotesAPIRequest","BoxingGlovesIcon","PlayersBets","playersList","sortPlayers","contendersByTiers","undefined","getContenderIdsByTier","gridTemplateColumns","player","PlayersBetEntry","backgroundColor","getAvatarColorById","StepRanking","ranking","isGameOver","isLastRound","gainedPointsDescriptions","lastRound","StepWinner","useTemporarilyHidePlayersBar","TrophyOutlined","TournamentIcon","announcementIcon","finalWinner","ConfigProvider","theme","primaryColor","THEME_COLORS","gameId","gameCollection","GAME_COLLECTION","getActiveComponent","PhaseLobby","PhaseRules","PhaseSetup","PhaseChallengeSelection","PhaseContenderSelection","PhaseBets","PhaseBattle","PhaseResults","PhaseGameOver","PageError","DownSquareOutlined","ref","React","AntdIcon","_objectSpread","DownSquareOutlinedSvg","displayName","UpCircleOutlined","UpCircleOutlinedSvg"],"sourceRoot":""}