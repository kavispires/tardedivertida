{"version":3,"file":"static/js/page-td-daily.60c5e27a.chunk.js","mappings":"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","sources":["components/auth/SignIn.tsx","components/canvas/CanvasResizer.tsx","components/canvas/CanvasSVG.tsx","components/canvas/DrawingCanvas.tsx","components/cards/ItemCard.tsx","components/cards/Card.tsx","components/metrics/MetricHighlight.tsx","components/sprites/Sprite.tsx","components/text/Instruction.tsx","components/text/RoundsLeftInstruction.tsx","components/text/TextHighlight.tsx","components/text/Title.tsx","components/text/RuleInstruction.tsx","components/timers/TimerClock.tsx","components/timers/TimerBar.tsx","components/timers/TimedTimerBar.tsx","components/timers/TimedTimerClock.tsx","components/timers/WaitingTime.tsx","hooks/useTDBaseUrl.ts","icons/AnimatedClockIcon.tsx","icons/ApplauseIcon.tsx","icons/GoogleIcon.tsx","icons/SkullIcon.tsx","pages/Daily/components/Header.tsx","pages/Daily/components/DailyChrome.tsx","pages/Daily/components/DailyError.tsx","pages/Daily/components/DailyLoading.tsx","pages/Daily/hooks/useDailyChallenge.ts","pages/Daily/components/Keyboard.tsx","pages/Daily/components/Menu.tsx","pages/Daily/games/ArteRuim/utils/settings.ts","pages/Daily/hooks/useDailyGameState.ts","pages/Daily/hooks/useDailyLocalToday.ts","pages/Daily/hooks/useShowResultModal.ts","pages/Daily/games/ArteRuim/utils/helpers.ts","pages/Daily/games/ArteRuim/utils/useArteRuimEngine.ts","pages/Daily/games/ArteRuim/components/DrawingCarousel.tsx","pages/Daily/games/ArteRuim/components/Prompt.tsx","pages/Daily/components/CopyToClipboardResult.tsx","pages/Daily/games/ArteRuim/components/ResultsModalContent.tsx","pages/Daily/games/ArteRuim/components/Rules.tsx","pages/Daily/games/ArteRuim/components/DailyArteRuim.tsx","pages/Daily/games/ArteRuim/DailyArteRuimGame.tsx","pages/Daily/games/Hub.tsx","pages/Daily/games/AquiO/data/useRandomAquiOChallenge.ts","pages/Daily/games/AquiO/utils/settings.ts","pages/Daily/games/AquiO/utils/helpers.ts","pages/Daily/games/AquiO/utils/useAquiOEngine.ts","pages/Daily/games/AquiO/components/Disc.tsx","pages/Daily/games/AquiO/components/PreloadItems.tsx","pages/Daily/games/AquiO/components/ResultsModalContent.tsx","pages/Daily/components/BetaBanner.tsx","pages/Daily/games/AquiO/components/Rules.tsx","pages/Daily/games/AquiO/components/DailyAquiO.tsx","pages/Daily/games/AquiO/DailyAquiOGame.tsx","pages/Daily/games/Palavreado/utils/settings.js","pages/Daily/games/Palavreado/utils/helpers.ts","pages/Daily/games/Palavreado/components/ResultsModalContent.tsx","pages/Daily/games/Palavreado/components/Rules.tsx","pages/Daily/games/Palavreado/components/DailyPalavreado.tsx","pages/Daily/games/Palavreado/DailyPalavreadoGame.tsx","pages/Daily/games/Palavreado/data/useWordList.ts","pages/Daily/games/Artista/utils/settings.ts","pages/Daily/games/Artista/utils/useArtistaEngine.ts","pages/Daily/hooks/useDailySaveDrawings.ts","pages/Daily/games/Artista/components/Rules.tsx","pages/Daily/games/Artista/components/Canvas.tsx","pages/Daily/games/Artista/components/DailyArtista.tsx","pages/Daily/games/Artista/DailyArtistaGame.tsx","pages/Daily/Daily.tsx","pages/Me/components/LoginModal.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { useMutation } from '@tanstack/react-query';\n// Ant Design Resources\nimport { Button, Form, Input, Alert, Image, App, Switch, Space, ButtonProps } from 'antd';\n// API\nimport { resetPassword, signIn, signInWithGoogle } from 'services/firebase';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Image\nimport logo from 'assets/images/tarde-divertida-logo.svg';\nimport { Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { UserCredential } from 'firebase/auth';\nimport { IconAvatar } from 'components/avatars';\nimport { GoogleIcon } from 'icons/GoogleIcon';\n\ntype SignInProps = {\n  onSuccess: GenericFunction;\n};\n\nexport function SignIn({ onSuccess }: SignInProps) {\n  const [view, setView] = useState('google');\n\n  return (\n    <div className=\"sign-in\">\n      <div className=\"sign-in__logo\">\n        <Image src={logo} preview={false} />\n      </div>\n\n      <Space className=\"space-container\">\n        <Switch\n          checkedChildren={<Translate pt=\"E-mail e senha\" en=\"Email and Password\" />}\n          unCheckedChildren=\"Google\"\n          onChange={(checked) => setView(checked ? 'email' : 'google')}\n        />\n      </Space>\n\n      {view === 'google' ? (\n        <SignInWithGoogle onSuccess={onSuccess} />\n      ) : (\n        <SignInWithEmail onSuccess={onSuccess} />\n      )}\n    </div>\n  );\n}\n\nexport function SignInWithGoogle({ onSuccess, ...buttonProps }: SignInProps & ButtonProps) {\n  const { isLoading, mutate, isError } = useMutation<UserCredential, Error, void, unknown>({\n    mutationFn: async () => await signInWithGoogle(),\n    onSuccess,\n  });\n\n  const onFinish = () => {\n    mutate();\n  };\n\n  return (\n    <Space\n      className=\"space-container\"\n      direction=\"vertical\"\n      align=\"center\"\n      classNames={{ item: 'full-width' }}\n    >\n      <>\n        {isError && (\n          <Alert\n            description={\n              <Translate pt=\"Algo deu errado, tente novamente\" en=\"Something went wrong. Please try again\" />\n            }\n            type=\"error\"\n            showIcon\n            className=\"sign-in__error-alert\"\n          />\n        )}\n        <Button\n          type=\"primary\"\n          size=\"large\"\n          onClick={onFinish}\n          loading={isLoading}\n          block\n          icon={<IconAvatar icon={<GoogleIcon />} size=\"small\" />}\n          {...buttonProps}\n        >\n          <Translate pt=\"Entrar com Google\" en=\"Sign in with Google\" />\n        </Button>\n      </>\n    </Space>\n  );\n}\n\nfunction SignInWithEmail({ onSuccess }: SignInProps) {\n  const [form] = Form.useForm();\n  const { translate } = useLanguage();\n  const [showForgotPassword, setShowForgotPassword] = useState(false);\n\n  const { isLoading, mutate, isError } = useMutation<UserCredential, Error, void, unknown>({\n    mutationFn: async () => await signIn(form.getFieldValue('username'), form.getFieldValue('password')),\n    onSuccess,\n  });\n\n  const onFinish = () => {\n    mutate();\n  };\n\n  return (\n    <>\n      <Form\n        name=\"login\"\n        form={form}\n        labelCol={{ span: 8 }}\n        wrapperCol={{ span: 16 }}\n        style={{ maxWidth: 600 }}\n        initialValues={{ remember: true }}\n        onFinish={onFinish}\n        autoComplete=\"off\"\n      >\n        <Form.Item\n          label={<Translate pt=\"E-mail\" en=\"E-mail\" />}\n          name=\"username\"\n          rules={[\n            { required: true, message: translate('e-mail é um campo obrigatório', 'e-mail is required') },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label={<Translate pt=\"Senha\" en=\"Password\" />}\n          name=\"password\"\n          rules={[\n            { required: true, message: translate('e-mail é um campo obrigatório', 'e-mail is required') },\n          ]}\n          help={translate('Mínimo 6 caracteres', 'Minimum of 6 characters')}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        {isError && (\n          <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n            <Alert\n              description={\n                <Translate\n                  pt=\"Algo deu errado, tente novamente\"\n                  en=\"Something went wrong. Please try again\"\n                />\n              }\n              type=\"error\"\n              showIcon\n              className=\"sign-in__error-alert\"\n            />\n          </Form.Item>\n        )}\n\n        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n          <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\n            <Translate pt=\"Entrar\" en=\"Submit\" />\n          </Button>\n\n          <Button type=\"link\" onClick={() => setShowForgotPassword((v) => !v)}>\n            <Translate pt=\"Esqueci minha senha\" en=\"Forgot my password\" />\n          </Button>\n        </Form.Item>\n      </Form>\n      {showForgotPassword && (\n        <Alert\n          type=\"info\"\n          message={\n            <ResetPasswordForm\n              email={form.getFieldValue('username')}\n              onSuccess={() => setShowForgotPassword(false)}\n            />\n          }\n        />\n      )}\n    </>\n  );\n}\n\ntype ResetPasswordFormProps = {\n  email?: string;\n  onSuccess: GenericFunction;\n};\n\nfunction ResetPasswordForm({ email, onSuccess }: ResetPasswordFormProps) {\n  const { message } = App.useApp();\n  const [form] = Form.useForm();\n  const { translate } = useLanguage();\n\n  const { isLoading, mutate, isError } = useMutation({\n    mutationFn: async () => await resetPassword(form.getFieldValue('username')),\n    onSuccess: () => {\n      onSuccess();\n      message.success(\n        translate(\n          'Verifique seu e-mail enviado para redefinir a sua senha',\n          'Verify your email to reset your password'\n        )\n      );\n    },\n  });\n\n  const onFinish = () => {\n    mutate();\n  };\n\n  return (\n    <Form\n      name=\"forgot-password\"\n      form={form}\n      labelCol={{ span: 8 }}\n      wrapperCol={{ span: 16 }}\n      style={{ maxWidth: 600 }}\n      initialValues={{ username: email, remember: true }}\n      onFinish={onFinish}\n      autoComplete=\"off\"\n    >\n      <Form.Item>\n        <Title level={4} size=\"xx-small\">\n          <Translate pt=\"Redefinir a senha\" en=\"Password Reset\" />\n        </Title>\n      </Form.Item>\n      <Form.Item\n        label={<Translate pt=\"E-mail\" en=\"E-mail\" />}\n        name=\"username\"\n        rules={[\n          { required: true, message: translate('e-mail é um campo obrigatório', 'e-mail is required') },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      {isError && (\n        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n          <Alert\n            description={\n              <Translate\n                pt=\"Algo deu errado, provavelmente este e-mail não existe no banco de dados da Tarde Divertida\"\n                en=\"Something went wrong. Please try again\"\n              />\n            }\n            type=\"error\"\n            showIcon\n            className=\"sign-in__error-alert\"\n          />\n        </Form.Item>\n      )}\n\n      <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n        <Button type=\"primary\" htmlType=\"submit\" disabled={isLoading}>\n          <Translate pt=\"Enviar\" en=\"Submit\" />\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n","// Ant Design Resources\nimport { Slider } from 'antd';\nimport { DragOutlined } from '@ant-design/icons';\n// State & Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\n// Components\nimport { FixedMenuButton } from 'components/buttons';\nimport { Translate } from 'components/language';\n\n/**\n * Fixed Menu Button for resizing canvas\n */\nexport const CanvasResizer = () => {\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n\n  return (\n    <FixedMenuButton\n      type=\"popover\"\n      position={1}\n      icon={<DragOutlined />}\n      label={labelText}\n      content={\n        <div className=\"canvas-resizer\">\n          <div className=\"canvas-resizer__label\">{labelText}</div>\n          <Slider\n            className=\"canvas-resizer__slider\"\n            value={canvasSize ?? 100}\n            min={150}\n            max={500}\n            step={50}\n            onChange={setCanvasSize}\n          />\n        </div>\n      }\n    />\n  );\n};\n\nconst labelText = <Translate pt=\"Tamanho das Artes\" en=\"Art Size\" />;\n","/**\n * Builds paths from canvas lines\n * @param lines\n * @returns\n */\nconst getPathFromKonvaLines = (lines: CanvasLine[]) => {\n  const result = lines.map((lineArr) => {\n    let path = '';\n    for (let x = 0, y = 1; y < lineArr.length; x += 2, y += 2) {\n      if (lineArr[x + 2] && lineArr[y + 2]) {\n        path += `M${lineArr[x]},${lineArr[y]} L${lineArr[x + 2]},${lineArr[y + 2]}`;\n      }\n    }\n\n    return path;\n  });\n\n  return result;\n};\n\ntype CanvasSVGProps = {\n  /**\n   * The stringified svg path\n   */\n  drawing: string;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * The width of the canvas (default: 500)\n   */\n  width?: number;\n  /**\n   * The height of the canvas (default: 500)\n   */\n  height?: number;\n  /**\n   * Size of the stroke. Default: medium\n   */\n  strokeWidth?: 'small' | 'medium' | 'large';\n  /**\n   * Custom view box size (default: '0 0 500')\n   */\n  viewBox?: string;\n};\n\nexport const CanvasSVG = ({\n  drawing = '',\n  className = '',\n  width = 250,\n  height,\n  strokeWidth = 'medium',\n  viewBox = '0 0 500 500',\n}: CanvasSVGProps) => {\n  const konvaLines = JSON.parse(drawing);\n  const paths = getPathFromKonvaLines(konvaLines);\n\n  const strokeWidthBySize =\n    {\n      small: 3,\n      medium: 5,\n      large: 7,\n    }?.[strokeWidth] ?? 5;\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox={viewBox}\n      overflow=\"hidden\"\n      className={className}\n      style={{ width: `${width}px`, height: `${height || width}px` }}\n    >\n      <defs />\n      {paths.map((path, index) => (\n        <path\n          key={`${drawing}-${index}`}\n          d={path}\n          fill=\"none\"\n          stroke=\"#000\"\n          strokeWidth={strokeWidthBySize}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit=\"10\"\n        />\n      ))}\n    </svg>\n  );\n};\n","import { CSSProperties, useRef, useState } from 'react';\nimport { Stage, Layer, Line } from 'react-konva';\nimport clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Flex, Space } from 'antd';\nimport { DeleteOutlined, UndoOutlined } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\n\ntype DrawingCanvasProps = {\n  /**\n   * Lines drawn in the canvas\n   */\n  lines: CanvasLine[];\n  /**\n   * Function where any new version of the drawing is sent to\n   */\n  setLines: CanvasSetLine;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Show controls to undo, redo, or erase drawing. Default: false\n   */\n  showControls?: boolean;\n  /**\n   * Size of the stroke. Default: medium\n   */\n  strokeWidth?: 'small' | 'medium' | 'large';\n  /**\n   * The width of the canvas (default: 500)\n   */\n  width?: number;\n  /**\n   * The height of the canvas (default: 500)\n   */\n  height?: number;\n  /**\n   *\n   */\n  willReadFrequently?: boolean;\n  /**\n   *\n   */\n  style?: CSSProperties;\n};\n\n/**\n * Canvas drawing board using react-konva\n * It requires an array of lines and an setState function to save the lines\n */\nexport const DrawingCanvas = ({\n  lines,\n  setLines,\n  className = '',\n  showControls = false,\n  strokeWidth = 'medium',\n  width = 500,\n  height,\n  willReadFrequently = false,\n  style = {},\n}: DrawingCanvasProps) => {\n  const [drawingHistory, setDrawingHistory] = useState<CanvasLine[]>([]);\n  const isDrawing = useRef(false);\n\n  /**\n   * Toggles off the isDrawing flag\n   */\n  const startDrawing = () => {\n    isDrawing.current = true;\n  };\n\n  /**\n   * Toggles off the isDrawing flag and resets history\n   */\n  const stopDrawing = () => {\n    isDrawing.current = false;\n    setDrawingHistory([]);\n  };\n\n  const startLine = (e: any) => {\n    startDrawing();\n    const pos = e.target.getStage().getPointerPosition();\n    setLines([...lines, [Math.round(pos.x), Math.round(pos.y)]]);\n  };\n\n  const finishLine = (e: any) => {\n    // Add point if it was a point\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    const x = Math.round(point.x);\n    const y = Math.round(point.y);\n\n    let lastLineEntry = lines[lines.length - 1];\n    lastLineEntry = lastLineEntry.concat([x + 0.1, y + 0.1]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLineEntry);\n    setLines(lines.concat());\n  };\n\n  /**\n   * Start recording drawing\n   * @param e - konva mouse event\n   */\n  const handleMouseDown = (e: any) => {\n    startLine(e);\n  };\n\n  /**\n   * Tracks mouse moving during the drawing\n   * @param e - konva mouse event\n   */\n  const handleMouseMove = (e: any) => {\n    // no drawing - skipping\n    if (!isDrawing.current) {\n      return;\n    }\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    let lastLine = lines[lines.length - 1];\n    // add end point\n    lastLine = lastLine.concat([Math.round(point.x), Math.round(point.y)]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLine);\n    setLines(lines.concat());\n  };\n\n  const handleMouseUp = (e: any) => {\n    if (isDrawing.current) {\n      stopDrawing();\n\n      finishLine(e);\n    }\n  };\n\n  /**\n   * Handles case when a current drawing is stopped off stage\n   * @param e - mouse event\n   */\n  const handleOffsetMouseUp = () => {\n    stopDrawing();\n  };\n\n  /**\n   * Handles case when a current drawing is started off stage\n   * @param e - mouse event\n   */\n  const handleOffsetMouseDown = () => {\n    startDrawing();\n  };\n\n  /**\n   * Handles when mouse leaves the stage\n   * @param e - konva mouse event\n   */\n  const handleMouseLeave = (e: any) => {\n    if (isDrawing.current) {\n      finishLine(e);\n\n      window.document.addEventListener('mouseup', handleOffsetMouseUp);\n      window.document.addEventListener('touchEnd', handleOffsetMouseUp);\n      window.document.addEventListener('mousedown', handleOffsetMouseDown);\n      window.document.addEventListener('touchStart', handleOffsetMouseDown);\n    }\n  };\n\n  /**\n   * Handles when mouse reenters the state\n   * @param e\n   */\n  const handleMouseEnter = (e: any) => {\n    if (isDrawing.current) {\n      startLine(e);\n    }\n    window.document.removeEventListener('mouseup', handleOffsetMouseUp);\n    window.document.removeEventListener('touchEnd', handleOffsetMouseUp);\n    window.document.removeEventListener('mousedown', handleOffsetMouseDown);\n    window.document.removeEventListener('touchStart', handleOffsetMouseDown);\n  };\n\n  const onClear = () => setLines([]);\n\n  const onUndo = () => {\n    const linesCopy = [...lines];\n    const drawingHistoryCopy = [...drawingHistory];\n    const lastLine: CanvasLine | undefined = linesCopy.pop();\n    if (lastLine) {\n      drawingHistoryCopy.push(lastLine);\n      setLines(linesCopy);\n      setDrawingHistory(drawingHistoryCopy);\n    }\n  };\n\n  const onRedo = () => {\n    const linesCopy = [...lines];\n    const drawingHistoryCopy = [...drawingHistory];\n    const lastUndoLine = drawingHistoryCopy.pop();\n    if (lastUndoLine) {\n      linesCopy.push(lastUndoLine);\n      setLines(linesCopy);\n      setDrawingHistory(drawingHistoryCopy);\n    }\n  };\n\n  const strokeWidthBySize =\n    {\n      small: 3,\n      medium: 5,\n      large: 7,\n    }?.[strokeWidth] ?? 5;\n\n  return (\n    <Flex vertical align=\"center\">\n      <Stage\n        width={width}\n        height={height || width}\n        onMouseDown={handleMouseDown}\n        onMousemove={handleMouseMove}\n        onMouseup={handleMouseUp}\n        onTouchStart={handleMouseDown}\n        onTouchMove={handleMouseMove}\n        onTouchEnd={handleMouseUp}\n        onMouseLeave={handleMouseLeave}\n        onMouseEnter={handleMouseEnter}\n        className={clsx('drawing-canvas', className)}\n        style={{ width: `${width}px`, height: `${height || width}px`, ...style }}\n        willReadFrequently={willReadFrequently}\n        id=\"drawing-canvas\"\n      >\n        <Layer>\n          {lines.map((line, i) => (\n            <Line\n              key={i}\n              points={line}\n              stroke=\"#222222\"\n              strokeWidth={strokeWidthBySize}\n              tension={0.5}\n              lineCap=\"round\"\n              globalCompositeOperation=\"source-over\"\n            />\n          ))}\n        </Layer>\n      </Stage>\n      {showControls && (\n        <Space>\n          <Button onClick={onUndo} disabled={lines.length === 0}>\n            <UndoOutlined />\n            <Translate pt=\"Desfazer\" en=\"Undo\" />\n          </Button>\n          <Button onClick={onRedo} disabled={drawingHistory.length === 0}>\n            <UndoOutlined />\n            <Translate pt=\"Refazer\" en=\"Redo\" />\n          </Button>\n          <Button onClick={onClear} disabled={lines.length === 0}>\n            <DeleteOutlined />\n            <Translate pt=\"Apagar\" en=\"Clear\" />\n          </Button>\n        </Space>\n      )}\n    </Flex>\n  );\n};\n","import clsx from 'clsx';\n// Components\nimport { Sprite } from 'components/sprites';\n// Sass\nimport './ItemCard.scss';\nimport { DualTranslate } from 'components/language';\n\nexport type ItemCardProps = {\n  /**\n   * The id of the item\n   */\n  id: string;\n  /**\n   * The width of the item\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n  /**\n   * Replacement title, usually the name of the item\n   */\n  title?: string;\n  /**\n   * Optional text to display\n   */\n  text?: DualLanguageValue;\n  /**\n   * Optional padding\n   */\n  padding?: number;\n};\n\nconst BASE = 64;\n\n/**\n * Retrieves the source and item ID based on a given string.\n *\n * @param str - The input string.\n * @returns An array containing the source and item ID.\n */\nconst getSource = (str: string) => {\n  const match = str.match(/\\d+/);\n  const numId = match ? parseInt(match[0], 10) : 0;\n  const itemId = `item-${numId}`;\n  const sourceId = Math.ceil(numId / BASE) * BASE;\n  const source = `items-${sourceId}`;\n  return [source, itemId];\n};\n\n/**\n * An item card component.\n */\nexport function ItemCard({ id, width = 75, className, title, text, padding }: ItemCardProps) {\n  const [source, itemId] = getSource(id);\n\n  const height = text ? 'auto' : `${width}px`;\n\n  return (\n    <div className={clsx('item-card', className)} style={{ width: `${width}px`, height }}>\n      <Sprite source={source} id={itemId} width={width} title={title} padding={padding} />\n      {Boolean(text) && (\n        <span className=\"item-card__text\">\n          <DualTranslate>{text!}</DualTranslate>\n        </span>\n      )}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Utils\nimport { getColorFromLetter } from 'utils/helpers';\n// Sass\nimport './Card.scss';\n\ntype CardProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  header?: string;\n  footer?: string;\n  color?: string;\n  size?: 'small' | 'medium' | 'large';\n  randomColor?: boolean;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  headerClassName?: string;\n  footerClassName?: string;\n  hideHeader?: boolean;\n};\nexport const Card = ({\n  children,\n  header = 'Carta',\n  footer,\n  color = 'none',\n  size = 'medium',\n  randomColor = false,\n  className = '',\n  headerClassName = '',\n  footerClassName = '',\n  hideHeader = false,\n}: CardProps) => {\n  const baseClass = 'card';\n\n  const bgColor = randomColor\n    ? getColorFromLetter(\n        typeof children === 'string'\n          ? children[0].toUpperCase()\n          : header !== 'Carta'\n          ? header[0].toUpperCase()\n          : 'X'\n      )\n    : color;\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, className)}>\n      {!hideHeader && (\n        <span\n          className={clsx(`${baseClass}__header`, `color-background--${bgColor}`, headerClassName)}\n          style={color.startsWith('#') ? { backgroundColor: color } : {}}\n        >\n          {header}\n        </span>\n      )}\n      <span className={`${baseClass}__text`}>{children}</span>\n      {footer && <span className={clsx(`${baseClass}__footer`, footerClassName)}>{footer}</span>}\n    </div>\n  );\n};\n","import { ReactNode } from 'react';\nimport clsx from 'clsx';\n// Types\nimport type { AvatarSize } from 'antd/lib/avatar/AvatarContext';\n// Components\nimport { IconAvatar } from 'components/avatars/IconAvatar';\n\nexport type MetricHighlightProps = {\n  /**\n   * The text to be highlighted\n   */\n  children: ReactNode;\n  /**\n   * The icon representing the metric\n   */\n  icon: ReactNode;\n  /**\n   * Indicates if it's a negative metric\n   */\n  type?: 'positive' | 'negative' | 'default';\n  /**\n   * The size of the avatar (default: small)\n   */\n  iconSize?: AvatarSize;\n  /**\n   * Custom class\n   */\n  className?: string;\n  /**\n   * Icon placement (default: after)\n   */\n  iconPlacement?: 'before' | 'after';\n};\n\nexport function MetricHighlight({\n  children,\n  icon,\n  type,\n  className,\n  iconSize = 'small',\n  iconPlacement = 'after',\n}: MetricHighlightProps) {\n  return (\n    <span className={clsx('metric-highlight', type && `metric-highlight--${type}`, className)}>\n      {iconPlacement === 'before' && (\n        <>\n          <IconAvatar size={iconSize} icon={icon} />{' '}\n        </>\n      )}\n      {children}\n      {iconPlacement === 'after' && (\n        <>\n          {' '}\n          <IconAvatar size={iconSize} icon={icon} />\n        </>\n      )}\n    </span>\n  );\n}\n\nexport type HighlightProps = Pick<MetricHighlightProps, 'children' | 'type' | 'iconSize' | 'className'>;\n","import { WarningOutlined } from '@ant-design/icons';\nimport { useQuery } from '@tanstack/react-query';\nimport { Spin, Tooltip } from 'antd';\nimport { useTDBaseUrl } from 'hooks/useTDBaseUrl';\n\ntype SpriteProps = {\n  /**\n   * The sprite source name\n   */\n  source: string;\n  /**\n   * The id of the item\n   */\n  id: string;\n  /**\n   * The width of the item\n   */\n  width?: number;\n  /**\n   * Replacement title, usually the name of the item\n   */\n  title?: string;\n  /**\n   * Optional class name\n   */\n  className?: string;\n  /**\n   *\n   */\n  padding?: number;\n};\n\n/**\n * Loads a sprite from the Tarde Divertida sprites\n * @param {SpriteProps} props\n * @returns a single sprite item\n */\nexport function Sprite({ id, source, width = 75, padding = 6, title, className }: SpriteProps) {\n  const baseUrl = useTDBaseUrl('tdi');\n\n  const { isLoading, data, isError } = useQuery({\n    queryKey: ['sprite', source],\n    queryFn: async () => {\n      const response = await fetch(`${baseUrl}sprites/${source}.svg`);\n      return await response.text();\n    },\n    enabled: !!id && !!source,\n  });\n\n  const paddedWidth = width - padding * 2;\n\n  if (isLoading) {\n    return (\n      <span\n        style={{\n          width: `${paddedWidth}px`,\n          height: `${paddedWidth}px`,\n          padding,\n          display: 'grid',\n          placeItems: 'center',\n        }}\n        className={className}\n      >\n        <Spin />\n      </span>\n    );\n  }\n\n  const svgContent = data;\n\n  if (isError || !svgContent) {\n    return (\n      <span\n        style={{\n          width: `${paddedWidth}px`,\n          height: `${paddedWidth}px`,\n          padding,\n          display: 'grid',\n          placeItems: 'center',\n        }}\n        className={className}\n      >\n        <WarningOutlined />\n      </span>\n    );\n  }\n\n  return (\n    <svg\n      viewBox=\"0 0 512 512\"\n      style={{ width: `${paddedWidth}px`, height: `${paddedWidth}px`, padding }}\n      className={className}\n    >\n      <use xlinkHref={`#${id}`} dangerouslySetInnerHTML={{ __html: svgContent }} />\n      <foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">\n        {title && (\n          <Tooltip title={title}>\n            <div style={{ background: 'transparent', width: '100%', height: '100vh' }}></div>\n          </Tooltip>\n        )}\n      </foreignObject>\n    </svg>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Sass\nimport './Instruction.scss';\n\ntype InstructionsProps = {\n  /**\n   * The content of the instruction\n   */\n  children: ReactNode;\n  /**\n   * Adds a semi transparent background (white or black opposite to the white property)\n   */\n  contained?: boolean;\n  /**\n   * Make text color white\n   */\n  white?: boolean;\n  /**\n   * Makes instruction width 100%\n   */\n  fullWidth?: boolean;\n  /**\n   * Custom class name\n   */\n  className?: string;\n  /**\n   *\n   */\n  noMargin?: boolean;\n};\n\n/**\n * Typography container for instructions\n */\nexport const Instruction = ({\n  children,\n  white,\n  className,\n  contained,\n  fullWidth,\n  noMargin = false,\n}: InstructionsProps) => {\n  const baseClass = 'instruction';\n\n  return (\n    <Typography.Text\n      className={clsx(\n        baseClass,\n        contained && `${baseClass}--contained`,\n        white && `${baseClass}--white`,\n        fullWidth && `${baseClass}--full-width`,\n        noMargin && `${baseClass}--no-margin`,\n        className\n      )}\n      data-testid=\"instruction\"\n    >\n      {children}\n    </Typography.Text>\n  );\n};\n","// Types\nimport type { GameRound } from 'types/game';\n// Components\nimport { Translate } from 'components/language';\nimport { RuleInstruction } from 'components/text';\nimport { pluralize } from 'utils/helpers';\n\ntype RoundsLeftInstructionProps = {\n  /**\n   * The state round object with current and total values\n   */\n  round: GameRound;\n};\n\n/**\n * Displays instructional sentence based on the number of rounds left for the game to end\n */\nexport function RoundsLeftInstruction({ round }: RoundsLeftInstructionProps) {\n  const left = (round?.total ?? 0) - (round?.current ?? 0);\n\n  if (left === 0 || round.forceLastRound) {\n    return (\n      <RuleInstruction type=\"event\">\n        <Translate pt=\"Essa foi a última rodada\" en=\"No more rounds left\" />\n      </RuleInstruction>\n    );\n  }\n\n  return (\n    <RuleInstruction type=\"tip\">\n      <Translate\n        pt={\n          <>\n            {pluralize(left, 'Falta', 'Faltam')} <strong>{left}</strong> {pluralize(left, 'rodada')} para o\n            jogo terminar...\n          </>\n        }\n        en={\n          <>\n            <strong>{left}</strong> {pluralize(left, 'round')} left for the game to end...\n          </>\n        }\n      />\n    </RuleInstruction>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Sass\nimport './TextHighlight.scss';\n\ntype TextHighlightProps = {\n  /**\n   * The text to be highlighted\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n};\n\nexport function TextHighlight({ children, className }: TextHighlightProps) {\n  return <span className={clsx('text-highlight', className)}>{children}</span>;\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Sass\nimport './Title.scss';\n\nexport type TitleProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Makes text white\n   */\n  white?: boolean;\n  /**\n   * Icon prefixing the title\n   */\n  icon?: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * The heading level (default: 2)\n   */\n  level?: 1 | 2 | 3 | 4 | 5;\n  /**\n   * The size of the title (default: medium)\n   */\n  size?: 'xx-small' | 'x-small' | 'small' | 'medium' | 'large';\n  /**\n   * The alignment of the text (default: center)\n   */\n  align?: 'left' | 'right' | 'center';\n};\n\nexport const Title = ({\n  children,\n  white,\n  icon,\n  className,\n  level = 2,\n  size = 'medium',\n  align = 'center',\n}: TitleProps) => {\n  return (\n    <Typography.Title\n      level={level}\n      className={clsx('title', `title--${size}`, `title--align-${align}`, white && 'title--white', className)}\n    >\n      {Boolean(icon) && icon}\n      {children}\n    </Typography.Title>\n  );\n};\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Typography, theme } from 'antd';\nimport {\n  AlertFilled,\n  BulbFilled,\n  ClockCircleFilled,\n  ExclamationCircleFilled,\n  MessageFilled,\n  PlayCircleFilled,\n  ReadFilled,\n  RobotFilled,\n  StarFilled,\n} from '@ant-design/icons';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Sass\nimport './RuleInstruction.scss';\n\nexport type RuleInstructionProps = {\n  /**\n   * The content of the rule instruction\n   */\n  children: ReactNode;\n  /**\n   * Makes instruction width 100%\n   */\n  fullWidth?: boolean;\n  /**\n   * Custom class name\n   */\n  className?: string;\n  /**\n   * The type of the rule instruction (default: rule)\n   * Rule is used for general rules\n   * Action is used when the player must do something\n   * Event is used when something happens like the result of an action or decision\n   * Alert is used when something very important needs attention (constant animation)\n   * Lore is used for story elements\n   * Scoring for result points (not rule)\n   * Wait for when the player must wait for something to happen\n   */\n  type: 'rule' | 'action' | 'event' | 'alert' | 'lore' | 'tip' | 'scoring' | 'wait' | 'bot';\n  /**\n   * Optional sound effect played when the component is rendered\n   */\n  sfx?: ReactNode;\n};\n\n/**\n * Typography container for rules instructions, if multiple lines, use <br /> to break lines\n * Do not use lists (ul, ol, li) inside this component\n * Add an icon on the left side\n */\nexport const RuleInstruction = ({\n  children,\n  className,\n  fullWidth,\n  type = 'rule',\n  sfx,\n}: RuleInstructionProps) => {\n  const baseClass = 'rule-instruction';\n\n  const icon = {\n    action: <PlayCircleFilled />,\n    alert: <AlertFilled />,\n    event: <ExclamationCircleFilled />,\n    lore: <MessageFilled />,\n    rule: <ReadFilled />,\n    tip: <BulbFilled />,\n    scoring: <StarFilled />,\n    wait: <ClockCircleFilled />,\n    bot: <RobotFilled />,\n  }[type];\n\n  const animationClass = {\n    action: getAnimationClass('shakeX'),\n    alert: getAnimationClass('flash', { infinite: true, speed: 'fast' }),\n    event: getAnimationClass('tada', { repeat: 3, speed: 'fast' }),\n    lore: getAnimationClass('pulse'),\n    rule: getAnimationClass('pulse'),\n    tip: getAnimationClass('pulse'),\n    scoring: getAnimationClass('pulse'),\n    wait: getAnimationClass('pulse'),\n    bot: getAnimationClass('pulse'),\n  }[type];\n\n  const { token } = theme.useToken();\n  const color = type === 'action' ? { background: token.colorPrimary } : {};\n\n  return (\n    <div\n      className={clsx(baseClass, fullWidth && `${baseClass}--full-width`, className)}\n      data-testid=\"rule-instruction\"\n    >\n      <div className={clsx(`${baseClass}__icon`, `${baseClass}__icon--${type}`)} style={color}>\n        <div className={animationClass}>{icon}</div>\n      </div>\n      {sfx}\n      <Typography.Paragraph className={clsx(`${baseClass}__content`)}>{children}</Typography.Paragraph>\n    </div>\n  );\n};\n","import { MetricHighlight, MetricHighlightProps } from 'components/metrics/MetricHighlight';\nimport { AnimatedClockIcon } from 'icons/AnimatedClockIcon';\nimport { ReactNode } from 'react';\n\nconst padTime = (value: number) => (value < 10 ? `0${value}` : value);\n\ntype TimerClockProps = {\n  /**\n   * Replacement icon for the clock icon\n   */\n  icon?: ReactNode;\n  /**\n   * Optional children that comes after the time\n   */\n  children?: ReactNode;\n  /**\n   * Minutes\n   */\n  minutes?: number;\n  /**\n   * Seconds\n   */\n  seconds: number;\n} & Omit<MetricHighlightProps, 'icon' | 'children'>;\n\n/**\n * Timer highlight with countdown functionality\n */\nexport function TimerClock({\n  icon,\n  type,\n  iconSize,\n  children,\n  className = '',\n  iconPlacement = 'before',\n  minutes = 0,\n  seconds,\n}: TimerClockProps) {\n  return (\n    <MetricHighlight\n      icon={icon ?? <AnimatedClockIcon />}\n      type={type}\n      iconSize={iconSize}\n      className={className}\n      iconPlacement={iconPlacement}\n    >\n      {minutes}:{padTime(seconds)}\n      {children}\n    </MetricHighlight>\n  );\n}\n","import { Progress, ProgressProps } from 'antd';\n\ninterface TimerBarProps extends ProgressProps {\n  steps?: number;\n  value: number;\n  total: number;\n}\n\n/**\n * Time Bar presentational component used in timed operations\n * @param props\n * @returns\n */\nexport function TimerBar({\n  steps,\n  strokeLinecap,\n  total,\n  type = 'line',\n  value,\n  status = 'active',\n  ...props\n}: TimerBarProps) {\n  const percentage = 100 - (value * 100) / total;\n  return (\n    <Progress\n      percent={percentage}\n      steps={steps}\n      showInfo={false}\n      style={{ marginBottom: '1rem' }}\n      size={steps && steps > 30 ? 'small' : undefined}\n      type={type}\n      {...props}\n    />\n  );\n}\n","import clsx from 'clsx';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\n// Components\nimport { TimerBar } from './TimerBar';\n\ntype TimedTimerBarProps = {\n  /**\n   * Duration in seconds\n   */\n  duration: number;\n  /**\n   * Function executed when the time is up\n   */\n  onExpire: GenericFunction;\n  /**\n   * Number of ticks in the bar\n   */\n  steps?: number;\n  /**\n   * Type of bar. Default: line\n   */\n  type?: 'circle' | 'line' | 'dashboard';\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\nexport function TimedTimerBar({ duration, onExpire, type, steps = 10, className }: TimedTimerBarProps) {\n  const { timeLeft } = useCountdown({\n    duration,\n    autoStart: true,\n    onExpire,\n  });\n\n  return (\n    <div className={clsx('timer-number', className)}>\n      {timeLeft} <TimerBar steps={steps} value={timeLeft} total={duration} type={type} /> {timeLeft}\n    </div>\n  );\n}\n","import { MetricHighlight, MetricHighlightProps } from 'components/metrics/MetricHighlight';\nimport { useCountdown, useCountdownSettings } from 'hooks/useCountdown';\nimport { AnimatedClockIcon } from 'icons/AnimatedClockIcon';\nimport { ReactNode } from 'react';\n\nconst padTime = (value: number) => (value < 10 ? `0${value}` : value);\n\ntype TimedTimerClockProps = {\n  /**\n   * Replacement icon for the clock icon\n   */\n  icon?: ReactNode;\n  /**\n   * Optional children that comes after the time\n   */\n  children?: ReactNode;\n} & useCountdownSettings &\n  Omit<MetricHighlightProps, 'icon' | 'children'>;\n\n/**\n * Timer highlight with countdown functionality\n */\nexport function TimedTimerClock({\n  icon,\n  type,\n  iconSize,\n  children,\n  className = '',\n  iconPlacement = 'before',\n  ...timerProps\n}: TimedTimerClockProps) {\n  const { minutes, seconds } = useCountdown({ ...timerProps });\n\n  return (\n    <MetricHighlight\n      icon={icon ?? <AnimatedClockIcon />}\n      type={type}\n      iconSize={iconSize}\n      className={className}\n      iconPlacement={iconPlacement}\n    >\n      {minutes}:{padTime(seconds)}\n      {children}\n    </MetricHighlight>\n  );\n}\n","import { useCountdown } from 'hooks/useCountdown';\n\ntype TimeForActionProps = {\n  duration: number;\n  onExpire?: () => void;\n  timeLeft?: number;\n};\n\nexport function WaitingTime({ duration, timeLeft, onExpire }: TimeForActionProps) {\n  const { timeLeft: privateTimeLeft } = useCountdown({\n    duration,\n    autoStart: timeLeft === undefined,\n    onExpire,\n  });\n\n  const percentage = ((timeLeft ?? privateTimeLeft) / duration) * 100;\n\n  return (\n    <div className=\"timer-waiting-time-bar\">\n      <span className=\"timer-waiting-time-bar__container\">\n        <span className=\"timer-waiting-time-bar__left\" style={{ width: `${percentage}%` }} />\n      </span>\n    </div>\n  );\n}\n","type TDUrlKind = 'tdi' | 'tdr' | 'tdi-data';\n\n/**\n * Returns the URL for the given kind of resource\n * @param kind the kind of resource\n * @returns the URL for the given kind of resource\n */\nexport function useTDBaseUrl(kind: TDUrlKind): string {\n  const base = process.env.REACT_APP_TD_BASE_URL;\n\n  switch (kind) {\n    case 'tdi':\n      return `${base}/${process.env.REACT_APP_TDI_IMAGES}`;\n    case 'tdr':\n      return `${base}/${process.env.REACT_APP_TD_RESOURCES}`;\n    case 'tdi-data':\n      return `${base}/${process.env.REACT_APP_TDI_DATA}`;\n    default:\n      return '';\n  }\n}\n","export function AnimatedClockIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fbfbfb\"\n        d=\"M464 256c0 114.9-93.1 208-208 208S48 370.9 48 256 141.1 48 256 48s208 93.1 208 208z\"\n      ></path>\n      <path\n        fill=\"#e3effa\"\n        d=\"M464 256c0-114.9-93.2-208-208.1-207.9-67 0-130 32.4-169 86.9 93.4-66.9 223.3-45.4 290.2 47.9 51.9 72.4 51.9 169.8 0 242.3C431.7 386.1 464 323.1 464 256z\"\n      ></path>\n      <path\n        fill=\"#fcc369\"\n        d=\"M256 8c137 0 248 111 248 248S393 504 256 504 8 393 8 256 119 8 256 8zm0 456c114.9 0 208-93.1 208-208S370.9 48 256 48 48 141.1 48 256s93.1 208 208 208z\"\n      ></path>\n      <path\n        fill=\"#ed9b52\"\n        d=\"M256 32C132.3 32 32 132.3 32 256s100.3 224 224 224 224-100.3 224-224S379.7 32 256 32zm0 432c-114.9 0-208-93.1-208-208S141.1 48 256 48s208 93.1 208 208-93.1 208-208 208z\"\n      ></path>\n      <path d=\"M256 496c-132.5-.1-239.9-107.5-240-240 0-4.4-3.6-8-8-8s-8 3.6-8 8c0 141.4 114.6 256 256 256.1 109.6 0 207-69.7 242.4-173.5l-15.1-5.2C450.1 430.7 358.7 496 256 496zm0-496C133.8.1 28.6 86.6 4.8 206.5l15.7 3.1C46.3 79.5 172.6-5 302.6 20.7s214.6 152.1 188.8 282.1c-1 5.1-2.2 10.1-3.5 15.1l15.5 4.1c36.4-136.7-45-277-181.8-313.4C300.2 2.9 278.1 0 256 0zM18 225l-15.9-2c-.7 5.4-1.2 10.9-1.6 16.5l16 1c.3-5.2.8-10.4 1.5-15.5z\"></path>\n      <path d=\"M256 472c119.3 0 216-96.7 216-216S375.3 40 256 40 40 136.7 40 256c.1 119.2 96.8 215.9 216 216zm-8-415.8V88h16V56.2c104.1 4.3 187.5 87.7 191.8 191.8H424v16h31.8c-4.3 104.1-87.7 187.5-191.8 191.8V424h-16v31.8C143.9 451.5 60.5 368.1 56.2 264H88v-16H56.2C60.5 143.9 143.9 60.5 248 56.2z\"></path>\n\n      <g>\n        <path\n          fill=\"#555fa3\"\n          d=\"M273 141.6v114.24a15.55 15.55 0 01-3.68 10.16l-50.24 61.12a14.47 14.47 0 01-20.42 1.25 14.32 14.32 0 01-2.78-3.33 18.75 18.75 0 012.4-22.64l40.8-48.16A7.77 7.77 0 00241 249V141.6a16.07 16.07 0 1132-3 15.44 15.44 0 010 3z\"\n        ></path>\n        <path d=\"M206.6 339.94c.56 0 1.11.06 1.67.06a22.7 22.7 0 0016.95-7.83l50.31-61.05a24 24 0 005.47-15.26V141.6a24 24 0 10-48-3 25.69 25.69 0 000 3v107.47l-40.62 48a26.49 26.49 0 00-3.2 32.38 23.05 23.05 0 0017.42 10.49zm-2.18-32.34l40.8-48.18a16.1 16.1 0 003.78-10.36V141.6a8.14 8.14 0 1116 0v114.26a8 8 0 01-1.82 5.08l-50.05 60.76a6.37 6.37 0 01-5.32 2.28 7.05 7.05 0 01-5.29-3.39 10.81 10.81 0 011.89-13z\"></path>\n        <animateTransform\n          attributeName=\"transform\"\n          dur=\"2s\"\n          from=\"0 256 256\"\n          repeatCount=\"indefinite\"\n          to=\"360 256 256\"\n          type=\"rotate\"\n        ></animateTransform>\n      </g>\n    </svg>\n  );\n}\n","export function ApplauseIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path fill=\"none\" d=\"M0 .01h512v512H0z\"></path>\n      <path\n        fill=\"#ffbc86\"\n        d=\"M445.7 199.19l-34.24 21.18-154.58 95.64a71.63 71.63 0 01-32.28 10.5l-6.93.51a131 131 0 00-59.12 19.23l-15.94 9.86-15.68 9.7a10.06 10.06 0 01-13.84-3.26l-85.92-138.9a10.06 10.06 0 013.26-13.84l11.66-7.22a132.47 132.47 0 0037.83-35.26 132.53 132.53 0 0021.45-47 72.37 72.37 0 0132.37-44.95l101.53-62.86a33.41 33.41 0 1135.15 56.82l22.87-14.15 68.77-42.54a25.33 25.33 0 0126.66 43.08l20.45-12.65a25.33 25.33 0 0126.65 43.08l-20.45 12.65a25.33 25.33 0 0134.6 7.8c7.7 11.93 3.64 28.12-8.43 35.58l-22 13.62a25.33 25.33 0 0134.6 7.8c7.7 11.93 3.64 28.11-8.43 35.58\"\n      ></path>\n      <path\n        fill=\"#f7a86c\"\n        d=\"M411.46 220.37l-154.58 95.64a71.63 71.63 0 01-32.28 10.5l-6.93.51a131 131 0 00-59.12 19.23l-15.94 9.86-32.47-100.1a47.52 47.52 0 0145.17-62.15 48.84 48.84 0 015 .27l-19.85-61.24A39.42 39.42 0 01178 81.3h1.35a39.43 39.43 0 0170.82-22.94 38.49 38.49 0 0134.4-6.82 33.33 33.33 0 01-14.1 17.79l22.87-14.16a40.77 40.77 0 0113.56 12.41 38.6 38.6 0 0123.49-8 40.36 40.36 0 0137.93 27.75z\"\n      ></path>\n      <path d=\"M27.18 231.15a7.5 7.5 0 01-6.39-3.56 17.58 17.58 0 015.69-24.16l12.23-7.56a124.26 124.26 0 0055.35-77.27 79.47 79.47 0 0135.43-49.46l24.93-15.43a7.5 7.5 0 017.89 12.76l-24.93 15.42a64.46 64.46 0 00-28.7 40.12 139.36 139.36 0 01-62.08 86.62l-12.22 7.56a2.55 2.55 0 00-.83 3.51 7.5 7.5 0 01-6.37 11.45zm94.5 143.65a17.56 17.56 0 01-15-8.31 7.5 7.5 0 1112.75-7.9 2.56 2.56 0 003.52.83l31.62-19.56a139 139 0 0162.5-20.32l6.93-.53a64.37 64.37 0 0028.9-9.4l188.89-116.82c8.38-5.19 11.29-16.13 6.49-24.38a17.83 17.83 0 00-24.77-6.25 7.5 7.5 0 01-7.89-12.76h.05l22-13.61c8.38-5.18 11.29-16.12 6.49-24.38a17.84 17.84 0 00-24.81-6.22 7.5 7.5 0 01-7.89-12.76l20.45-12.65a17.83 17.83 0 005.78-24.54 17.85 17.85 0 00-24.54-5.78L392.68 62.1a7.5 7.5 0 01-7.89-12.76A17.84 17.84 0 00366 19.01l-91.63 56.71a7.5 7.5 0 01-7.89-12.71 25.92 25.92 0 00-27.27-44.08l-46.69 28.85a7.5 7.5 0 11-7.89-12.77l46.69-28.87a40.92 40.92 0 0162.09 40.17l64.71-40a32.85 32.85 0 0150.1 28.79 32.83 32.83 0 0134.36 55.53 32.66 32.66 0 0114.51 13.28c8.57 14.75 4 34-10.2 43.79a32.51 32.51 0 0114.35 13.21c8.85 15.21 3.67 35.25-11.56 44.68L260.83 322.38a79.33 79.33 0 01-35.67 11.63l-6.93.52a123.94 123.94 0 00-55.73 18.13l-31.62 19.56a17.5 17.5 0 01-9.2 2.58z\"></path>\n      <path d=\"M243.13 153.3a7.5 7.5 0 01-3.95-13.88l145.59-90.07a7.5 7.5 0 017.89 12.76l-145.59 90.07a7.46 7.46 0 01-3.94 1.12zm26.66 43.08a7.5 7.5 0 01-4-13.87l145.63-90.07a7.5 7.5 0 117.89 12.75l-145.58 90.07a7.49 7.49 0 01-3.94 1.12zm26.65 43.08a7.5 7.5 0 01-3.95-13.88l145.59-90.06a7.5 7.5 0 117.92 12.75l-145.62 90.07a7.46 7.46 0 01-3.94 1.12z\"></path>\n      <path d=\"M147.74 254.39a7.5 7.5 0 01-4-13.88c31.63-19.58 48.68-46 50.67-78.44a105.11 105.11 0 00-6.32-43.06 7.49 7.49 0 012.95-9.32l75.44-46.68a7.5 7.5 0 117.89 12.75l-70.29 43.45a123.57 123.57 0 015.35 43.8c-1.58 25.87-12.88 62.53-57.75 90.28a7.47 7.47 0 01-3.94 1.1z\"></path>\n      <path\n        fill=\"#fed1a4\"\n        d=\"M322.39 75.01a25.34 25.34 0 00-15.82 31.75l-8-24.61c-4.36-13.48-19.11-21.28-32.57-16.64a25.32 25.32 0 00-15.81 31.75l-7.42-22.87a25.33 25.33 0 00-48.15 15.62l7.38 22.88a25.33 25.33 0 00-48.19 15.63l33.28 102.49a33.42 33.42 0 00-63.57 20.62l36.83 113.56a72.39 72.39 0 0036 42.14 132.55 132.55 0 0165.83 77.17l4.23 13.05a10.06 10.06 0 0012.59 6.46l155.35-50.38a10.06 10.06 0 006.5-12.62l-11.47-35.37a131 131 0 01-4.59-62l1.15-6.86a71.56 71.56 0 00-2.51-33.85L354.94 91.71c-4.38-13.51-19.13-21.31-32.55-16.7\"\n      ></path>\n      <path\n        fill=\"#ffbc86\"\n        d=\"M354.93 91.68l68.5 211.22a71.56 71.56 0 012.51 33.85l-1.15 6.86a131 131 0 004.59 62l11.47 35.4a10 10 0 01-6.46 12.66l-14.12 4.58-14.57-44.97a130.83 130.83 0 01-4.59-62l1.14-6.86a71.43 71.43 0 00-2.5-33.85L331.08 98.85a25.29 25.29 0 00-19.05-17 25.16 25.16 0 0111.52-7.17c13.24-3.88 27.12 3.88 31.38 17\"\n      ></path>\n      <path d=\"M434.39 461.14a7.5 7.5 0 01-2.31-14.64 2.55 2.55 0 001.64-3.21l-11.47-35.37a139 139 0 01-4.86-65.55l1.15-6.85a64.24 64.24 0 00-2.25-30.31l-7.7-23.75a7.5 7.5 0 1114.27-4.62l7.7 23.75a79.18 79.18 0 012.77 37.4l-1.14 6.86a123.85 123.85 0 004.33 58.44L448 438.66a17.58 17.58 0 01-11.28 22.11 7.5 7.5 0 01-2.33.37zm-158.47 50.87a17.6 17.6 0 01-16.68-12.15l-4.44-13.67a124.21 124.21 0 00-61.87-72.18 79.5 79.5 0 01-39.6-46.19l-16-49.23a7.5 7.5 0 1114.3-4.58l16 49.24a64.39 64.39 0 0032.08 37.41 139.34 139.34 0 0169.39 80.93l4.44 13.67a2.5 2.5 0 001.27 1.49 2.53 2.53 0 001.94.16 7.5 7.5 0 114.63 14.26 17.52 17.52 0 01-5.46.84zM133 288.19a7.51 7.51 0 01-7.14-5.19l-9.42-29.05a40.92 40.92 0 0153.8-50.74l-23.47-72.38a32.81 32.81 0 0139.83-41.82 32.83 32.83 0 0162.12-20.17 32.62 32.62 0 0116.35-10.93c16.37-4.82 34 4.26 40.1 20.33a32.61 32.61 0 0116.25-10.8c16.88-5 35.11 4.84 40.64 21.87l49.85 153.71a7.5 7.5 0 01-14.27 4.62L347.79 94.01c-3-9.38-13-14.81-22.14-12.11a17.83 17.83 0 00-11.94 22.61 7.5 7.5 0 01-14.27 4.63l-8-24.61c-3-9.38-13-14.81-22.14-12.11a17.84 17.84 0 00-11.95 22.59 7.5 7.5 0 11-14.27 4.63l-7.42-22.88a17.83 17.83 0 00-33.92 11l7.42 22.88a7.5 7.5 0 01-14.27 4.62 17.83 17.83 0 00-33.92 11l33.26 102.45a7.5 7.5 0 01-14.23 4.62 25.91 25.91 0 00-49.28 16l9.42 29.06a7.51 7.51 0 01-7.13 9.81z\"></path>\n      <path d=\"M254.85 283.24a7.5 7.5 0 01-7.13-5.19L194.9 115.2a7.5 7.5 0 0114.27-4.62L262 273.42a7.5 7.5 0 01-4.82 9.45 7.39 7.39 0 01-2.33.37zM303 267.61a7.5 7.5 0 01-7.14-5.19L243.09 99.58a7.5 7.5 0 0114.27-4.63l52.81 162.85a7.5 7.5 0 01-4.82 9.45 7.78 7.78 0 01-2.35.36zm48.22-15.6a7.51 7.51 0 01-7.13-5.19L291.28 83.95a7.5 7.5 0 0114.27-4.63l52.81 162.85a7.51 7.51 0 01-7.14 9.82zm-138.49 65.55a7.5 7.5 0 01-7.14-5.18L180 233.33a7.5 7.5 0 0114.27-4.62l25.63 79a7.48 7.48 0 01-7.13 9.81zM92.94 60.01a7.44 7.44 0 01-5.3-2.2l-12.2-12.22a7.5 7.5 0 0110.61-10.58l12.19 12.2a7.5 7.5 0 01-5.3 12.8zm23.87-15.38a7.51 7.51 0 01-7.34-6L106 21.74a7.5 7.5 0 1114.69-3l3.46 16.9a7.51 7.51 0 01-5.85 8.85 7.73 7.73 0 01-1.49.14zM77.6 83.86a7.73 7.73 0 01-1.51-.15l-16.9-3.46a7.5 7.5 0 113-14.69l16.9 3.45a7.5 7.5 0 01-1.49 14.85zm397.61 180.92a7.51 7.51 0 01-3.78-1l-14.89-8.7a7.52 7.52 0 017.57-13l14.89 8.73a7.5 7.5 0 01-3.79 14zm-26.45 27.67a7.48 7.48 0 01-6.73-4.18l-7.63-15.46a7.5 7.5 0 1113.45-6.64l7.63 15.46a7.51 7.51 0 01-3.41 10.05 7.43 7.43 0 01-3.31.77zm20.35-63.36a7.5 7.5 0 01-.4-15l17.21-1a7.51 7.51 0 11.82 15l-17.21.95z\"></path>\n    </svg>\n  );\n}\n","export function GoogleIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#2196f3\"\n        d=\"M501 210c2 0 4 2 4 4v42a249 249 0 1 1-76-179v6l-60 60h-5a156 156 0 0 0-264 112 157 157 0 0 0 306 47H260c-2 0-4-2-4-4v-84c0-2 2-4 4-4z\"\n      />\n      <path\n        fill=\"#1e88e5\"\n        d=\"M501 210h-30c2 0 4 2 4 4v42a249 249 0 0 1-221 248 249 249 0 0 0 251-248v-42c0-2-2-4-4-4z\"\n      />\n      <path fill=\"#f44336\" d=\"m114 190-76-54a248 248 0 0 1 391-59v6l-60 60h-5a156 156 0 0 0-250 47z\" />\n      <path\n        fill=\"#e53935\"\n        d=\"m92 175 22 15c22-49 70-84 126-90h1l-15-1c-57 0-107 31-134 76zM399 77v6l-48 48 13 12h5l60-60v-6A248 248 0 0 0 241 8c61 4 116 29 158 69z\"\n      />\n      <path fill=\"#4caf50\" d=\"M438 425a248 248 0 0 1-404-58l77-53a157 157 0 0 0 252 56z\" />\n      <path\n        fill=\"#43a047\"\n        d=\"m111 314-23 16a156 156 0 0 0 153 82c-59-6-109-45-130-98zM256 505c72 0 137-31 182-80l-18-13c-43 53-107 88-179 92l15 1z\"\n      />\n      <path fill=\"#ffc107\" d=\"M100 256c0 21 3 40 11 58l-77 53a247 247 0 0 1 4-231l76 54c-9 20-15 43-15 66z\" />\n      <path fill=\"#ffb300\" d=\"m88 330 23-16a156 156 0 0 1 3-124l-22-15a156 156 0 0 0-4 155z\" />\n      <path d=\"M501 203h-52a8 8 0 0 0 0 15h48v38a242 242 0 0 1-60 159l-63-46c18-18 31-40 39-65a7 7 0 0 0-7-9H263v-77h153a8 8 0 0 0 0-15H260c-6 0-12 5-12 11v84c0 6 6 12 12 12h135a148 148 0 0 1-229 65 8 8 0 0 0-9 12 163 163 0 0 0 206-7l64 46a241 241 0 0 1-383-57l64-43c6 13 14 26 25 38a7 7 0 1 0 11-10 149 149 0 0 1 215-206c4 4 11 4 16 0l59-60c2-2 4-5 4-8s-2-6-4-8a255 255 0 0 0-289-47 8 8 0 0 0 7 14 239 239 0 0 1 269 41l-54 55a163 163 0 0 0-227 5c-12 11-21 25-29 39l-63-45c19-32 45-59 76-80a8 8 0 0 0-8-13 255 255 0 1 0 396 215v-42c0-6-5-11-12-11zM41 147l63 46a165 165 0 0 0-2 118l-65 45a239 239 0 0 1 4-209z\" />\n    </svg>\n  );\n}\n","export function SkullIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#dbd9dc\"\n        d=\"M249.47 7.6C122.85 11.05 23.53 118.13 23.53 244.8v139.46a56.11 56.11 0 0056.12 56.11h40.08c8.85 0 16.03 7.18 16.03 16.03v24.05a24.05 24.05 0 0024.05 24.05h192.38a24.05 24.05 0 0024.05-24.05V456.4c0-8.85 7.18-16.03 16.03-16.03h40.08a56.11 56.11 0 0056.12-56.11v-144.3c0-130.55-107.63-235.97-239-232.37z\"\n      ></path>\n      <path\n        fill=\"#c9c6ca\"\n        d=\"M143.77 416.32a40.08 40.08 0 01-40.08-40.08V244.8C103.7 129.5 186 30.49 296.25 11a234.69 234.69 0 00-65.21-2.18C112.06 21.42 23.54 125.16 23.54 244.8v139.45a56.11 56.11 0 0056.1 56.11h40.09c8.85 0 16.03 7.18 16.03 16.03v24.05a24.05 24.05 0 0024.05 24.05h24.04v-48.1a40.08 40.08 0 00-40.08-40.08z\"\n      ></path>\n      <g fill=\"#867e88\">\n        <path d=\"M248.6 361.38l-25.41 61.42a8.02 8.02 0 0010.38 10.51l16.48-6.59a16.03 16.03 0 0111.9 0l16.48 6.6a8.02 8.02 0 0010.38-10.51l-25.4-61.42a8.02 8.02 0 00-14.82 0z\"></path>\n        <circle cx=\"151.79\" cy=\"288.06\" r=\"72.14\"></circle>\n      </g>\n      <path\n        fill=\"#6f6571\"\n        d=\"M151.79 247.99c34.33 0 63 24 70.3 56.1a72.2 72.2 0 001.85-16.02 72.14 72.14 0 10-144.3 0c0 5.51.68 10.87 1.85 16.03 7.3-32.12 35.97-56.12 70.3-56.12z\"\n      ></path>\n      <circle cx=\"360.21\" cy=\"288.06\" r=\"72.14\" fill=\"#867e88\"></circle>\n      <path\n        fill=\"#6f6571\"\n        d=\"M360.21 247.99c34.33 0 63 24 70.3 56.1a72.2 72.2 0 001.84-16.02 72.14 72.14 0 10-144.29 0c0 5.51.68 10.87 1.85 16.03 7.3-32.12 35.97-56.12 70.3-56.12zM238.14 396.95c5.7-2.28 11.71-3.44 17.86-3.44s12.15 1.16 17.86 3.44l5.1 2.04-15.55-37.6a8.02 8.02 0 00-14.82 0l-15.55 37.6 5.1-2.04z\"\n      ></path>\n      <path d=\"M476.45 145.01a239.16 239.16 0 00-53.12-77.05C376.5 22.4 314.68-1.7 249.26.1c-62.94 1.73-121.78 28.28-165.7 74.76A246.52 246.52 0 0016.03 244.8v139.46a63.68 63.68 0 0063.61 63.61h40.09c4.7 0 8.53 3.83 8.53 8.53v24.05A31.58 31.58 0 00159.8 512h192.38a31.58 31.58 0 0031.55-31.55V456.4c0-4.7 3.83-8.53 8.53-8.53h40.09a63.69 63.69 0 0063.6-63.61v-144.3c0-32.97-6.56-64.91-19.51-94.95zm4.52 239.25c0 26.8-21.81 48.61-48.62 48.61h-40.08a23.56 23.56 0 00-23.53 23.53v24.05c0 9.13-7.42 16.55-16.55 16.55h-8.53v-16.55a7.5 7.5 0 00-15 0V497h-25.08v-16.55a7.5 7.5 0 00-15 0V497H263.5v-16.55a7.5 7.5 0 00-15 0V497h-25.08v-16.55a7.5 7.5 0 00-15 0V497h-25.08v-16.55a7.5 7.5 0 00-15 0V497h-8.53a16.57 16.57 0 01-16.55-16.55v-24.04a23.56 23.56 0 00-23.53-23.54H79.65a48.67 48.67 0 01-48.62-48.61V244.81A231.57 231.57 0 0194.47 85.15c41.15-43.56 96.27-68.45 155.2-70.06 2.14-.06 4.26-.09 6.38-.09 58.97 0 114.45 22.49 156.82 63.71 43.91 42.73 68.1 100 68.1 161.26v144.29z\"></path>\n      <path d=\"M270.34 358.52a15.47 15.47 0 00-14.34-9.59c-6.3 0-11.93 3.76-14.34 9.59l-25.4 61.42a15.48 15.48 0 003.3 16.84c4.4 4.45 10.99 5.82 16.8 3.5l16.47-6.6a8.5 8.5 0 016.34 0l16.47 6.6a15.53 15.53 0 0016.8-3.5 15.49 15.49 0 003.3-16.84l-25.4-61.42zm11.43 67.71c-.23.25-.39.18-.55.12l-16.48-6.6a23.5 23.5 0 00-17.48 0l-16.48 6.6c-.16.06-.31.12-.55-.12-.25-.24-.18-.4-.11-.56l25.4-61.42c.07-.16.13-.32.48-.32s.4.16.48.32l25.4 61.42c.07.16.13.32-.1.56zM87.54 281.18a63.8 63.8 0 0118.54-38.83 63.8 63.8 0 0138.82-18.54 64.98 64.98 0 0141.26 9.56 7.5 7.5 0 108-12.7 80.06 80.06 0 00-50.83-11.77 79.7 79.7 0 00-47.86 22.85 79.71 79.71 0 00-22.85 47.86 80.04 80.04 0 0011.78 50.82 7.5 7.5 0 1012.7-7.99 64.98 64.98 0 01-9.56-41.26zm131.64-35.48a7.5 7.5 0 00-12.7 8 64.98 64.98 0 019.56 41.25 63.8 63.8 0 01-18.54 38.83 63.8 63.8 0 01-38.82 18.54 64.97 64.97 0 01-41.26-9.56 7.5 7.5 0 10-8 12.7 80.01 80.01 0 0050.83 11.78c18.02-1.9 35.02-10.02 47.86-22.86s20.95-29.83 22.85-47.86a80.04 80.04 0 00-11.78-50.82zm76.74 35.48a63.8 63.8 0 0118.54-38.83 63.8 63.8 0 0138.83-18.54 64.98 64.98 0 0141.26 9.56 7.5 7.5 0 108-12.7 80.06 80.06 0 00-50.83-11.77 79.7 79.7 0 00-47.86 22.85A79.71 79.71 0 00281 279.6a80.04 80.04 0 0011.78 50.82 7.5 7.5 0 1012.69-7.99 64.97 64.97 0 01-9.56-41.26zm118.95-27.48a64.98 64.98 0 019.56 41.25 63.8 63.8 0 01-18.54 38.83 63.8 63.8 0 01-38.83 18.54 64.97 64.97 0 01-41.26-9.56 7.5 7.5 0 10-7.99 12.7 80.01 80.01 0 0050.82 11.78c18.03-1.9 35.03-10.02 47.86-22.86s20.96-29.83 22.86-47.86a80.05 80.05 0 00-11.78-50.82 7.5 7.5 0 00-12.7 8z\"></path>\n    </svg>\n  );\n}\n","import { Layout, Typography } from 'antd';\nimport { IconAvatar } from 'components/avatars';\nimport { ReactNode } from 'react';\n\ntype HeaderProps = {\n  icon: ReactNode;\n  children: ReactNode;\n};\n\nexport function Header({ icon, children }: HeaderProps) {\n  return (\n    <Layout.Header className=\"daily-header\">\n      <IconAvatar icon={icon} />\n      <Typography.Title level={1} className=\"daily-heading\">\n        {children}\n      </Typography.Title>\n    </Layout.Header>\n  );\n}\n","import { Layout } from 'antd';\nimport { Translate } from 'components/language';\nimport { CalendarIcon } from 'icons/CalendarIcon';\nimport { ReactNode } from 'react';\nimport { Header } from './Header';\n\nconst { Content } = Layout;\n\ntype DailyChromeProps = {\n  children: ReactNode;\n};\n\nexport function DailyChrome({ children }: DailyChromeProps) {\n  return (\n    <Layout className=\"app\">\n      <Header icon={<CalendarIcon />}>\n        <Translate pt=\"TD Diário\" en=\"TD Daily\" />\n      </Header>\n\n      <Content>{children}</Content>\n    </Layout>\n  );\n}\n","import { Alert, Button, Space } from 'antd';\nimport { useLanguage } from 'hooks/useLanguage';\n\nimport { DailyChrome } from './DailyChrome';\nimport { Translate } from 'components/language';\nimport { useNavigate } from 'react-router-dom';\n\nexport function DailyError() {\n  const { toggleLanguage, language } = useLanguage();\n  const navigate = useNavigate();\n\n  const onRedirect = () => {\n    toggleLanguage();\n    navigate(language === 'en' ? '/diario' : '/daily');\n  };\n  return (\n    <DailyChrome>\n      <Space className=\"container container--center\">\n        <Alert\n          message={\n            <Translate pt=\"O servidor decidiu não cooperar\" en=\"The server decided not to cooperate\" />\n          }\n          description={\n            <Space direction=\"vertical\">\n              <span>Você pode estar na língua errada. Clique no botão para ser redirecionado:</span>\n              <span>You might be in the wrong language. Click the button to be redirected:</span>\n              <Button type=\"primary\" onClick={onRedirect}>\n                Redirecionar/Redirect\n              </Button>\n            </Space>\n          }\n          type=\"error\"\n          showIcon\n        />\n      </Space>\n    </DailyChrome>\n  );\n}\n","import { Space } from 'antd';\nimport { Loading } from 'components/loaders';\nimport { useLanguage } from 'hooks/useLanguage';\n\nimport { DailyChrome } from './DailyChrome';\n\nexport function DailyLoading() {\n  const { translate } = useLanguage();\n  return (\n    <DailyChrome>\n      <div className=\"daily-loading\">\n        <Space className=\"space-container\">\n          <Loading message={translate('Carregando desafio...', 'Loading challenge...')} margin />\n        </Space>\n      </div>\n    </DailyChrome>\n  );\n}\n","import { App } from 'antd';\nimport { useQuery } from '@tanstack/react-query';\nimport { DAILY_API, DAILY_API_ACTIONS } from 'services/adapters';\nimport { print } from 'utils/helpers';\nimport { DailyResponse } from '../utils/types';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { getSourceName } from '../utils';\n\nexport function useDailyChallenge(today: string) {\n  const { notification } = App.useApp();\n  const { language } = useLanguage();\n  const collectionName = getSourceName(language);\n\n  // Load challenge\n  return useQuery<DailyResponse>({\n    queryKey: [collectionName],\n    queryFn: async () => {\n      console.count(`Fetching ${collectionName}...`);\n      const response = await DAILY_API.run({\n        action: DAILY_API_ACTIONS.GET_DAILY,\n        date: today,\n        document: collectionName,\n      });\n      return response.data as DailyResponse;\n    },\n    retry: false,\n    onSuccess: (response) => {\n      const data = response;\n      print({ [collectionName]: data }, 'table');\n    },\n    onError: (e: any) => {\n      notification.error({\n        message: 'Failed to load user',\n        description: JSON.stringify(e.message),\n      });\n    },\n  });\n}\n","import { Flex, Space } from 'antd';\nimport clsx from 'clsx';\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useEffect } from 'react';\n\nimport { LettersDictionary } from '../utils/types';\n\nconst FIRST_ROW = ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p'];\nconst SECOND_ROW = ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l'];\nconst THIRD_ROW = ['z', 'x', 'c', 'v', 'b', 'n', 'm'];\n\ntype KeyboardProps = {\n  onLetterClick: GenericFunction;\n  lettersState?: LettersDictionary;\n  disabled?: boolean;\n  onEnterClick?: GenericFunction;\n  onBackspaceClick?: GenericFunction;\n};\n\nexport function Keyboard({\n  lettersState,\n  onLetterClick,\n  disabled,\n  onBackspaceClick,\n  onEnterClick,\n}: KeyboardProps) {\n  const width = useCardWidth(FIRST_ROW.length + 2, { margin: 16, maxWidth: 30 });\n\n  useEffect(() => {\n    const handleKeyUp = (event: KeyboardEvent) => {\n      const key = event.key;\n      if (key === 'Enter' && onEnterClick) {\n        return onEnterClick();\n      }\n      if (key === 'Backspace' && onBackspaceClick) {\n        return onBackspaceClick();\n      }\n      if (\n        !disabled &&\n        (FIRST_ROW.includes(key) || SECOND_ROW.includes(key) || THIRD_ROW.includes(key)) &&\n        lettersState?.[key].disabled\n      ) {\n        return onLetterClick(key);\n      }\n    };\n\n    window.addEventListener('keyup', handleKeyUp);\n\n    return () => window.removeEventListener('keyup', handleKeyUp);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <Space direction=\"vertical\" align=\"center\" className=\"daily-keyboard\" size=\"small\">\n      <Flex className=\"daily-keyboard__row\">\n        {FIRST_ROW.map((letter) => (\n          <Key\n            key={letter}\n            width={width}\n            letter={letter}\n            state={lettersState?.[letter]?.state}\n            onLetterClick={onLetterClick}\n            disabled={disabled || lettersState?.[letter]?.disabled}\n          />\n        ))}\n      </Flex>\n      <Flex className=\"daily-keyboard__row\">\n        {SECOND_ROW.map((letter) => (\n          <Key\n            key={letter}\n            width={width}\n            letter={letter}\n            state={lettersState?.[letter]?.state}\n            onLetterClick={onLetterClick}\n            disabled={disabled || lettersState?.[letter]?.disabled}\n          />\n        ))}\n      </Flex>\n      <Flex className=\"daily-keyboard__row\">\n        {!!onEnterClick && (\n          <button\n            type=\"button\"\n            style={{ width }}\n            className=\"daily-keyboard__key daily-keyboard__key--enter\"\n            onClick={onEnterClick}\n            disabled={disabled}\n          >\n            Enter\n          </button>\n        )}\n        {THIRD_ROW.map((letter) => (\n          <Key\n            key={letter}\n            width={width}\n            letter={letter}\n            state={lettersState?.[letter]?.state}\n            onLetterClick={onLetterClick}\n            disabled={disabled || lettersState?.[letter]?.disabled}\n          />\n        ))}\n        {!!onBackspaceClick && (\n          <button\n            type=\"button\"\n            style={{ width }}\n            className=\"daily-keyboard__key daily-keyboard__key--backspace\"\n            onClick={onBackspaceClick}\n            disabled={disabled}\n          >\n            ⌫\n          </button>\n        )}\n      </Flex>\n    </Space>\n  );\n}\n\ntype KeyProps = {\n  letter: string;\n  width: number;\n  state?: string;\n} & Pick<KeyboardProps, 'onLetterClick' | 'disabled'>;\n\nfunction Key({ letter, state, onLetterClick, disabled }: KeyProps) {\n  const baseClassName = 'daily-keyboard__key';\n  const width = useCardWidth(FIRST_ROW.length + 2, { margin: 16, maxWidth: 30 });\n\n  return (\n    <button\n      type=\"button\"\n      data-key={letter}\n      key={letter}\n      style={{ width }}\n      className={clsx(baseClassName, `${baseClassName}--${state}`)}\n      onClick={() => onLetterClick(letter)}\n      disabled={disabled || state === 'disabled'}\n    >\n      {letter}\n    </button>\n  );\n}\n","import { AppstoreFilled, HeartFilled, HeartOutlined, QuestionCircleFilled } from '@ant-design/icons';\nimport { Button, Drawer, Space } from 'antd';\nimport { LanguageSwitch, Translate } from 'components/language';\nimport { useState } from 'react';\n\nimport { ReactNode } from 'react';\nimport { Link } from 'react-router-dom';\n\ntype MenuProps = {\n  hearts: number;\n  total: number;\n  openRules: boolean;\n  rules: ReactNode;\n};\n\nexport function Menu({ hearts, total, openRules, rules }: MenuProps) {\n  return (\n    <div className=\"menu\">\n      <DailyHubLink />\n      <Hearts remaining={hearts} total={total} />\n      <RulesModal defaultOpen={openRules} rules={rules} />\n    </div>\n  );\n}\n\ntype HeartsProps = {\n  remaining: number;\n  total: number;\n};\n\nfunction Hearts({ remaining, total }: HeartsProps) {\n  const hearts = Array(total)\n    .fill(false)\n    .map((_, i) => i < remaining);\n\n  return (\n    <div className=\"menu-hearts\">\n      {hearts.map((heart, i) => (heart ? <HeartFilled key={i} /> : <HeartOutlined key={i} />))}\n    </div>\n  );\n}\n\ntype RulesModalProps = {\n  rules: ReactNode;\n  defaultOpen: boolean;\n};\n\nfunction RulesModal({ rules, defaultOpen }: RulesModalProps) {\n  const [open, setOpen] = useState(defaultOpen);\n\n  return (\n    <>\n      <Button\n        type=\"text\"\n        style={{ color: 'white' }}\n        icon={<QuestionCircleFilled />}\n        onClick={() => setOpen(true)}\n      />\n      <Drawer\n        title={<Translate pt=\"Regras\" en=\"Rules\" />}\n        placement=\"bottom\"\n        open={open}\n        onClose={() => setOpen(false)}\n      >\n        <Space direction=\"vertical\" size=\"small\">\n          <LanguageSwitch />\n          <ul className=\"list\">{rules}</ul>\n        </Space>\n      </Drawer>\n    </>\n  );\n}\n\nfunction DailyHubLink() {\n  return (\n    <Link to=\"/diario/hub\">\n      <Button type=\"text\" style={{ color: 'white' }} icon={<AppstoreFilled />} />\n    </Link>\n  );\n}\n","export const SETTINGS = {\n  HEARTS: 3,\n  TD_DAILY_ARTE_RUIM_LOCAL_TODAY: 'TD_DAILY_ARTE_RUIM_LOCAL_TODAY',\n};\n","import { useState } from 'react';\n\nexport function useDailyGameState<TState = PlainObject>(initialState: TState) {\n  const [state, setState] = useState<TState>(initialState);\n\n  const updateState = (newState: Partial<TState>) => {\n    setState((prev) => ({ ...prev, ...newState }));\n  };\n\n  return { state, setState, updateState };\n}\n","import { useEffect, useState } from 'react';\nimport { useLocalStorage } from 'react-use';\n\ntype UseDailyLocalTodayProps<TLocal> = {\n  key: string;\n  gameId: string;\n  challengeNumber: number;\n  defaultValue: TLocal;\n  onApplyLocalState?: (value: TLocal) => void;\n  disabled?: boolean;\n};\n\nexport function useDailyLocalToday<TLocal = { id: string }>({\n  key,\n  gameId,\n  challengeNumber,\n  defaultValue,\n  onApplyLocalState,\n  disabled,\n}: UseDailyLocalTodayProps<TLocal>) {\n  const [localToday, setLocalToday] = useLocalStorage<TLocal & { id: string }>(key, {\n    ...defaultValue,\n    id: gameId,\n  });\n  const [hasAppliedLocalToday, setHasAppliedLocalToday] = useState<boolean>(false);\n\n  useEffect(() => {\n    // If stored id is different than the current game id, reset the local storage\n    if (localToday && localToday.id !== gameId && !disabled) {\n      setLocalToday({ ...defaultValue, id: gameId, number: challengeNumber });\n      return;\n    }\n  }, [localToday, gameId, setLocalToday, defaultValue, challengeNumber, disabled]);\n\n  // Applied the stored local storage to the game\n  const stateToApply = localToday && localToday.id === gameId ? localToday : null;\n\n  const updateLocalStorage = (value: Partial<TLocal>) => {\n    setLocalToday((prev) => ({ id: gameId, number: challengeNumber, ...(prev ?? defaultValue), ...value }));\n  };\n\n  useEffect(() => {\n    if (!hasAppliedLocalToday && stateToApply && onApplyLocalState && !disabled) {\n      setHasAppliedLocalToday(true);\n      onApplyLocalState(stateToApply);\n    }\n  }, [stateToApply]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return {\n    localToday,\n    updateLocalStorage,\n  };\n}\n","import { useEffect, useState } from 'react';\n\nexport function useShowResultModal(condition: boolean, onUpdate?: GenericFunction) {\n  const [showResultModal, setShowResultModal] = useState(false);\n\n  // Controls auto result modal\n  useEffect(() => {\n    if (condition) {\n      setShowResultModal(true);\n      onUpdate?.();\n    }\n  }, [condition]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return { showResultModal, setShowResultModal };\n}\n","export const getArteRuimName = (language: Language) => {\n  return language === 'pt' ? 'Arte Ruim' : 'Questionable Art';\n};\n\n/**\n * Returns an object with each letter in the word as a key and a boolean value indicating if the letter has been found.\n * @param text - The word to extract the letters from.\n * @returns An object with each letter in the word as a key and a boolean value indicating if the letter has been found.\n */\nexport function getLettersInWord(text: string): BooleanDictionary {\n  const cleanedUpText = text\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n    .toLowerCase();\n  const letters = cleanedUpText.split('');\n  const lettersInWord: BooleanDictionary = {};\n\n  letters.forEach((letter) => {\n    if (letter.match(/[a-zA-Z]/)) {\n      lettersInWord[letter] = false;\n    }\n  });\n\n  return lettersInWord;\n}\n\n/**\n * Removes diacritical marks from a given character and converts it to lowercase.\n *\n * @param char - The character to be cleaned up.\n * @returns The cleaned up character.\n */\nexport function cleanupLetter(char: string): string {\n  return char\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n    .toLowerCase();\n}\n\n/**\n * Checks if a character is a letter.\n *\n * @param char - The character to check.\n * @returns `true` if the character is a letter, `false` otherwise.\n */\nexport function isLetter(char: string): boolean {\n  return cleanupLetter(char).match(/[a-zA-Z]/) !== null;\n}\n","import { useDailyGameState } from 'pages/Daily/hooks/useDailyGameState';\nimport { useDailyLocalToday } from 'pages/Daily/hooks/useDailyLocalToday';\nimport { useShowResultModal } from 'pages/Daily/hooks/useShowResultModal';\nimport { LettersDictionary } from 'pages/Daily/utils/types';\nimport { removeDuplicates } from 'utils/helpers';\n\nimport { getLettersInWord } from './helpers';\nimport { SETTINGS } from './settings';\nimport { ArteRuimLocalToday, DailyArteRuimEntry } from './types';\n\ntype GameState = {\n  hearts: number;\n  solution: BooleanDictionary;\n  guesses: LettersDictionary;\n};\n\nconst defaultArteRuimLocalToday: ArteRuimLocalToday = {\n  id: '',\n  letters: [],\n  number: 0,\n};\n\nexport function useArteRuimEngine(data: DailyArteRuimEntry) {\n  const { state, setState, updateState } = useDailyGameState<GameState>({\n    solution: getLettersInWord(data.text),\n    hearts: SETTINGS.HEARTS,\n    guesses: {},\n  });\n\n  const { localToday, updateLocalStorage } = useDailyLocalToday<ArteRuimLocalToday>({\n    key: SETTINGS.TD_DAILY_ARTE_RUIM_LOCAL_TODAY,\n    gameId: data.id,\n    challengeNumber: data.number ?? 0,\n    defaultValue: defaultArteRuimLocalToday,\n    onApplyLocalState: (value) => {\n      let hearts = SETTINGS.HEARTS;\n      let solution = { ...state.solution };\n      const guesses = value.letters.reduce((acc: LettersDictionary, letter) => {\n        const isCorrect = state.solution[letter] !== undefined;\n        if (state.solution[letter] !== undefined) {\n          solution = { ...solution, [letter]: true };\n        }\n        acc[letter] = {\n          letter: letter,\n          state: isCorrect ? 'correct' : 'incorrect',\n          disabled: true,\n        };\n        hearts = isCorrect ? hearts : hearts - 1;\n        return acc;\n      }, {});\n\n      updateState({\n        guesses,\n        hearts,\n        solution,\n      });\n    },\n  });\n\n  // ACTIONS\n  const guessLetter = (letter: string) => {\n    // Ignore previously guessed letters\n    if (state.guesses[letter]) {\n      return;\n    }\n\n    const isCorrect = state.solution[letter] !== undefined;\n\n    updateLocalStorage({\n      letters: removeDuplicates([...(localToday?.letters ?? []), letter]),\n    });\n\n    setState((prev) => ({\n      ...prev,\n      guesses: {\n        ...prev.guesses,\n        [letter]: {\n          letter: letter,\n          state: isCorrect ? 'correct' : 'incorrect',\n          disabled: true,\n        },\n      },\n      solution: {\n        ...prev.solution,\n        [letter]: isCorrect,\n      },\n      hearts: isCorrect ? prev.hearts : prev.hearts - 1,\n    }));\n  };\n\n  // CONDITIONS\n  const isWin = Object.values(state.solution).every(Boolean);\n  const isLose = state.hearts <= 0;\n  const isComplete = isWin || isLose;\n\n  // RESULTS MODAL\n  const { showResultModal, setShowResultModal } = useShowResultModal(isComplete);\n\n  return {\n    hearts: state.hearts,\n    guesses: state.guesses,\n    solution: state.solution,\n    showResultModal,\n    setShowResultModal,\n    isWin,\n    isLose,\n    isComplete,\n    guessLetter,\n  };\n}\n","import { Carousel } from 'antd';\nimport { CanvasSVG } from 'components/canvas';\nimport { useCardWidth } from 'hooks/useCardWidth';\n\ntype DrawingCarouselProps = {\n  drawings: string[];\n};\n\nexport function DrawingCarousel({ drawings }: DrawingCarouselProps) {\n  const width = useCardWidth(1, { margin: 64, maxWidth: 250, minWidth: 150 });\n\n  return (\n    <Carousel autoplay className=\"carousel\" autoplaySpeed={4000}>\n      {drawings.map((d: string) => (\n        <CanvasSVG key={d} drawing={d} width={width} height={width} className=\"canvas\" />\n      ))}\n    </Carousel>\n  );\n}\n","import { Avatar, Space } from 'antd';\nimport { IconAvatar } from 'components/avatars';\nimport { BoxBlankIcon } from 'icons/BoxBlankIcon';\nimport { LettersDictionary } from 'pages/Daily/utils/types';\nimport { useMemo } from 'react';\n\nimport { cleanupLetter, isLetter } from '../utils/helpers';\n\ntype PromptProps = {\n  text: string;\n  guesses: LettersDictionary;\n};\n\nexport function Prompt({ text, guesses }: PromptProps) {\n  const prompt = useMemo(() => text.split(' ').map((word) => word.split('')), [text]);\n  return (\n    <Space className=\"prompt\" wrap align=\"center\">\n      {prompt.map((word, i, p) => {\n        return (\n          <Space key={`word-${i}`} className=\"prompt-word\" wrap align=\"center\">\n            {word.map((l, j) => {\n              const letter = cleanupLetter(l);\n              const isCorrect = guesses?.[letter]?.state === 'correct';\n              const key = `${j}-${l}-${i}`;\n              if (isLetter(letter)) {\n                return isCorrect ? (\n                  <Avatar key={key} className=\"letter-correct\" shape=\"square\">\n                    {l}\n                  </Avatar>\n                ) : (\n                  <IconAvatar key={key} icon={<BoxBlankIcon />} className=\"letter-blank\" />\n                );\n              }\n\n              return (\n                <Avatar key={key} shape=\"square\">\n                  {l}\n                </Avatar>\n              );\n            })}\n            {i + 1 < p.length && <Avatar shape=\"square\"></Avatar>}\n          </Space>\n        );\n      })}\n    </Space>\n  );\n}\n","import { App, Input, Space, Typography } from 'antd';\nimport { TransparentButton } from 'components/buttons';\nimport { Translate } from 'components/language';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useEffect } from 'react';\nimport { useCopyToClipboard } from 'react-use';\n\ntype CopyToClipboardResultProps = {\n  result: string;\n  rows?: number;\n};\n\nexport function CopyToClipboardResult({ result, rows = 4 }: CopyToClipboardResultProps) {\n  const { message } = App.useApp();\n  const { translate } = useLanguage();\n  const [state, copyToClipboard] = useCopyToClipboard();\n\n  useEffect(() => {\n    if (state.value) {\n      message.info(\n        translate(\n          `Copiado para a área de transferência: ${state.value}`,\n          `Copied to clipboard: ${state.value}`\n        )\n      );\n    }\n  }, [state, message, translate]);\n\n  return (\n    <Space direction=\"vertical\" className=\"space-container full-width\">\n      <TransparentButton onClick={() => copyToClipboard(result)}>\n        <Input.TextArea value={result} readOnly cols={30} rows={rows} />\n      </TransparentButton>\n\n      <Typography.Paragraph className=\"center\">\n        <Translate\n          pt=\"Clique no campo acima para copiar e compartilhe com os amigos\"\n          en=\"Click the field above to copy and share it with friends\"\n        />\n      </Typography.Paragraph>\n    </Space>\n  );\n}\n","import { Space, Typography } from 'antd';\nimport { IconAvatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { TextHighlight } from 'components/text';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { BoxXIcon } from 'icons/BoxXIcon';\nimport { TrophyIcon } from 'icons/TrophyIcon';\nimport { getDailyName, getSourceName, writeHeartResultString } from 'pages/Daily/utils';\n\nimport { CopyToClipboardResult } from '../../../components/CopyToClipboardResult';\nimport { getArteRuimName } from '../utils/helpers';\nimport { SETTINGS } from '../utils/settings';\n\ntype ResultsModalContentProps = {\n  challenge: number;\n  text: string;\n  win: boolean;\n  hearts: number;\n  solution: BooleanDictionary;\n};\n\nexport function ResultsModalContent({ text, challenge, win, hearts, solution }: ResultsModalContentProps) {\n  const { language } = useLanguage();\n\n  const result = writeResult({ challenge, remainingHearts: hearts, solution, language });\n\n  return (\n    <Space direction=\"vertical\" className=\"space-container\">\n      <Typography.Title level={2} className=\"center\">\n        {win ? (\n          <>\n            <IconAvatar icon={<TrophyIcon />} /> <Translate pt=\"Parabéns!\" en=\"Congratulations!\" />\n          </>\n        ) : (\n          <>\n            <IconAvatar icon={<BoxXIcon />} /> <Translate pt=\"Que pena!\" en=\"Too bad!\" />\n          </>\n        )}\n      </Typography.Title>\n      <Typography.Paragraph className=\"center\">\n        {win ? (\n          <Translate pt=\"Você acertou a palavra!\" en=\"You guessed the word!\" />\n        ) : (\n          <Translate pt=\"Você errou a palavra!\" en=\"You missed the word!\" />\n        )}\n      </Typography.Paragraph>\n\n      <TextHighlight className=\"result-answer\">\n        {<Typography.Paragraph>{text}</Typography.Paragraph>}\n      </TextHighlight>\n\n      <CopyToClipboardResult result={result} rows={3} />\n    </Space>\n  );\n}\n\nfunction writeResult({\n  challenge,\n  remainingHearts,\n  solution,\n  language,\n}: {\n  challenge: number;\n  remainingHearts: number;\n  solution: BooleanDictionary;\n  language: Language;\n}) {\n  const totalLetters = Object.keys(solution).length;\n  const guessedLetters = Object.values(solution).filter(Boolean).length;\n\n  return [\n    `💻 ${getDailyName(language)} ${getArteRuimName(language)} #${challenge}`,\n    `${writeHeartResultString(remainingHearts, SETTINGS.HEARTS)} (${Math.round((guessedLetters / totalLetters) * 100)}%)`,\n    `https://www.kavispires.com/tardedivertida/#/${getSourceName(language)}/arte-ruim`,\n  ].join('\\n');\n}\n","import { HeartFilled } from '@ant-design/icons';\nimport { Typography } from 'antd';\nimport { Translate } from 'components/language';\n\nexport function Rules() {\n  return (\n    <Typography>\n      <Translate\n        pt={\n          <>\n            <li>Tente adivinhar a expressão secreta observando os desenhos e apertando letra por letra.</li>\n            <li>\n              Cada letra que você aperta que não está presente na resposta remove um coração e você tem apenas\n              3 <HeartFilled />.\n            </li>\n            <li>Boa sorte!</li>\n          </>\n        }\n        en={\n          <>\n            <li>\n              Try to guess the secret expression by observing the drawings and then pressing letter by letter.\n            </li>\n            <li>\n              Each letter you press that is not present in the answer removes a heart and you only have 3{' '}\n              <HeartFilled />.\n            </li>\n            <li>Good luck!</li>\n          </>\n        }\n      />\n    </Typography>\n  );\n}\n","import { Button, Layout, Modal, Space } from 'antd';\nimport { Translate } from 'components/language';\nimport { DailyArtGameIcon } from 'icons/DailyArtGameIcon';\nimport { Keyboard } from 'pages/Daily/components/Keyboard';\nimport { Me } from 'types/user';\n\nimport { BarChartOutlined } from '@ant-design/icons';\n\nimport { Header } from '../../../components/Header';\nimport { Menu } from '../../../components/Menu';\nimport { SETTINGS } from '../utils/settings';\nimport { DailyArteRuimEntry } from '../utils/types';\nimport { useArteRuimEngine } from '../utils/useArteRuimEngine';\nimport { DrawingCarousel } from './DrawingCarousel';\nimport { Prompt } from './Prompt';\nimport { ResultsModalContent } from './ResultsModalContent';\nimport { Rules } from './Rules';\n\ntype DailyArteRuimProps = {\n  data: DailyArteRuimEntry;\n  currentUser: Me;\n};\n\nexport function DailyArteRuim({ data }: DailyArteRuimProps) {\n  const { hearts, guesses, showResultModal, setShowResultModal, isWin, isComplete, guessLetter, solution } =\n    useArteRuimEngine(data);\n\n  return (\n    <Layout className=\"app\">\n      <Header icon={<DailyArtGameIcon />}>\n        TD <Translate pt=\"Arte Ruim\" en=\"Questionable Art\" /> #{data.number}\n      </Header>\n      <Layout.Content>\n        <Menu\n          hearts={hearts}\n          total={SETTINGS.HEARTS}\n          openRules={!isComplete || hearts === SETTINGS.HEARTS}\n          rules={<Rules />}\n        />\n\n        <DrawingCarousel drawings={data.drawings} />\n\n        <Prompt text={data.text} guesses={guesses} />\n\n        {isComplete && (\n          <Space className=\"results-container\" direction=\"vertical\" align=\"center\">\n            <Button onClick={() => setShowResultModal(true)} type=\"primary\" icon={<BarChartOutlined />}>\n              <Translate pt=\"Ver Resultado\" en=\"Show Results\" />\n            </Button>\n          </Space>\n        )}\n        <Modal\n          title={<Translate pt=\"Resultado\" en=\"Results\" />}\n          open={showResultModal}\n          onCancel={() => setShowResultModal(false)}\n          okButtonProps={{ hidden: true }}\n          cancelButtonProps={{ hidden: true }}\n        >\n          <ResultsModalContent\n            challenge={data.number}\n            win={isWin}\n            hearts={hearts}\n            text={data.text}\n            solution={solution}\n          />\n        </Modal>\n\n        <Keyboard lettersState={guesses} onLetterClick={guessLetter} disabled={isComplete} />\n      </Layout.Content>\n    </Layout>\n  );\n}\n","import './utils/styles.scss';\n\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\nimport { DailyError } from 'pages/Daily/components/DailyError';\nimport { DailyLoading } from 'pages/Daily/components/DailyLoading';\n\nimport { useDailyChallenge } from '../../hooks/useDailyChallenge';\nimport { getToday } from '../../utils';\nimport { DailyArteRuim } from './components/DailyArteRuim';\n\nexport function DailyArteRuimGame() {\n  const { currentUser } = useCurrentUserContext();\n  const today = getToday();\n\n  // Load challenge\n  const challengeQuery = useDailyChallenge(`${today}`);\n\n  if (challengeQuery.isLoading) {\n    return <DailyLoading />;\n  }\n\n  const dailyData = challengeQuery?.data?.['arte-ruim'];\n\n  if (challengeQuery.isError || !dailyData) {\n    return <DailyError />;\n  }\n\n  return <DailyArteRuim data={dailyData} currentUser={currentUser} />;\n}\n","import { Space, Typography } from 'antd';\nimport { TransparentButton } from 'components/buttons';\nimport { LanguageSwitch, Translate } from 'components/language';\nimport { DailyDrawingGameIcon } from 'icons/DailyDrawingGameIcon';\nimport { DailyFindingGameIcon } from 'icons/DailyFindingGameIcon';\nimport { DailyGroupingGameIcon } from 'icons/DailyGroupingGameIcon';\nimport { DailyWordGameIcon } from 'icons/DailyWordGameIcon';\nimport { Link } from 'react-router-dom';\n\nimport { DailyChrome } from '../components/DailyChrome';\nimport { DailyArtGameIcon } from 'icons/DailyArtGameIcon';\nimport { DailyCrimeGameIcon } from 'icons/DailyCrimeGameIcon';\nimport { DailyImagesGameIcon } from 'icons/DailyImagesGameIcon';\nimport { DailyMovieGameIcon } from 'icons/DailyMovieGameIcon';\n\nexport function Hub() {\n  return (\n    <DailyChrome>\n      <div className=\"hub\">\n        <Typography.Title level={5}>\n          <Translate pt=\"Escolha um jogo\" en=\"Choose a game\" />\n        </Typography.Title>\n        <Space className=\"space-container\">\n          <LanguageSwitch />\n        </Space>\n\n        <div className=\"hub-list\">\n          <TransparentButton hoverType=\"sepia\">\n            <Link to=\"/diario/arte-ruim\" className=\"hub-item\">\n              <DailyArtGameIcon style={{ width: 75 }} />\n              <Translate pt=\"Arte Ruim\" en=\"Questionable Art\" />\n            </Link>\n          </TransparentButton>\n\n          <TransparentButton hoverType=\"sepia\">\n            <Link to=\"/diario/aqui-o\" className=\"hub-item\">\n              <DailyFindingGameIcon style={{ width: 75 }} />\n              <Translate pt=\"Aqui Ó\" en=\"Find This\" />\n            </Link>\n          </TransparentButton>\n\n          <TransparentButton hoverType=\"sepia\" className=\"hub-item\">\n            <Link to=\"/diario/artista\" className=\"hub-item\">\n              <DailyDrawingGameIcon style={{ width: 75 }} />\n              <Translate pt=\"Picaço!\" en=\"Draw!\" />\n            </Link>\n          </TransparentButton>\n\n          <TransparentButton hoverType=\"sepia\" disabled className=\"hub-item-disabled\">\n            <Link to=\"/diario/palavreado\" className=\"hub-item\">\n              <DailyWordGameIcon style={{ width: 75 }} />\n              <Translate pt=\"Palavreado\" en=\"Word Game\" />\n            </Link>\n          </TransparentButton>\n\n          <TransparentButton hoverType=\"sepia\" disabled className=\"hub-item-disabled\">\n            <Link to=\"/diario/quarteto\" className=\"hub-item\">\n              <DailyGroupingGameIcon style={{ width: 75 }} />\n              <Translate pt=\"Quarteto\" en=\"Connect Four\" />\n            </Link>\n          </TransparentButton>\n\n          <TransparentButton hoverType=\"sepia\" disabled className=\"hub-item-disabled\">\n            <Link to=\"/diario\" className=\"hub-item\">\n              <DailyCrimeGameIcon style={{ width: 75 }} />\n              <Translate pt=\"Crime Hediondo\" en=\"Horrible Crimes\" />\n            </Link>\n          </TransparentButton>\n\n          <TransparentButton hoverType=\"sepia\" disabled className=\"hub-item-disabled\">\n            <Link to=\"/diario\" className=\"hub-item\">\n              <DailyImagesGameIcon style={{ width: 75 }} />\n              <Translate pt=\"Imagine\" en=\"Imagine\" />\n            </Link>\n          </TransparentButton>\n\n          <TransparentButton hoverType=\"sepia\" disabled className=\"hub-item-disabled\">\n            <Link to=\"/diario\" className=\"hub-item\">\n              <DailyMovieGameIcon style={{ width: 75 }} />\n              <Translate pt=\"Filmaço\" en=\"Movicon\" />\n            </Link>\n          </TransparentButton>\n        </div>\n      </div>\n    </DailyChrome>\n  );\n}\n","import { App } from 'antd';\nimport { sample } from 'lodash';\nimport { print } from 'utils/helpers';\n\nimport { useQuery } from '@tanstack/react-query';\n\nimport { wait } from '../../../utils';\nimport { AquiOSet, DailyAquiOEntry } from '../utils/types';\nimport miscSets from './misc-sets.json';\n\nconst MISC_SETS: AquiOSet[] = miscSets;\n\nexport function useRandomAquiOChallenge(collectionName: string) {\n  const { notification } = App.useApp();\n\n  // Load challenge\n  return useQuery<DailyAquiOEntry>({\n    queryKey: [collectionName, 'aqui-o', 'random'],\n    queryFn: async () => {\n      console.count(`Creating Ache Isso ${collectionName}...`);\n      // Build game getting the set based on today's date\n      await wait(150);\n\n      const chosenSet = sample(MISC_SETS)!;\n      return {\n        id: 'random',\n        type: 'aqui-o',\n        setId: chosenSet.title.en,\n        title: chosenSet.title,\n        itemsIds: chosenSet.itemsIds,\n        number: 0,\n      };\n    },\n    retry: false,\n    onSuccess: (response) => {\n      const data = response;\n      print({ [collectionName]: data }, 'table');\n    },\n    onError: (e: any) => {\n      notification.error({\n        message: 'Failed to load user',\n        description: JSON.stringify(e.message),\n      });\n    },\n  });\n}\n","export const SETTINGS = {\n  HEARTS: 3,\n  GOAL: 15,\n  TD_DAILY_AQUI_O_MODE: 'TD_AQUI_DAILY_O_MODE',\n  TD_DAILY_AQUI_O_LOCAL_TODAY: 'TD_DAILY_AQUI_O_LOCAL_TODAY',\n};\n","import { chain, random, sample, sampleSize, shuffle } from 'lodash';\nimport { SEPARATOR } from 'utils/constants';\n\nimport { AquiODisc, DailyAquiOEntry } from './types';\n\nexport const getAquiOName = (language: Language) => {\n  return language === 'pt' ? 'Aqui Ó' : 'Find This';\n};\n\nexport const getDiscs = (entry: DailyAquiOEntry, challengingGame?: boolean): AquiODisc[] => {\n  const allItems = shuffle(entry.itemsIds);\n\n  const discs: AquiODisc[] = [];\n\n  for (let i = 0; i < 16; i++) {\n    const previousCard = discs[i - 1];\n\n    const card = createCards(allItems, previousCard, challengingGame ? discs[i - 1]?.match : undefined);\n    discs.push(card);\n  }\n\n  return discs;\n};\n\nconst POSITIONS = Array(9)\n  .fill(0)\n  .map((_, i) => i);\nconst SIZES = [100, 90, 110, 80, 105, 130, 120, 150];\n\nconst Z_INDEXES: NumberDictionary = {\n  80: 7,\n  90: 6,\n  100: 5,\n  105: 4,\n  110: 3,\n  120: 2,\n  130: 1,\n  150: 0,\n};\n\nfunction createCards(list: string[], previousCard?: AquiODisc, previousMatchId?: string): AquiODisc {\n  const shuffledList = shuffle(list);\n  const randomPositions = shuffle(POSITIONS);\n  const randomSizes = shuffle(SIZES);\n\n  if (!previousCard) {\n    const items = sampleSize(shuffledList, 8).map((itemId, i) => ({\n      itemId,\n      position: randomPositions[i],\n      size: randomSizes[i],\n      rotation: random(0, 360),\n      zIndex: Z_INDEXES[randomSizes[i]],\n    }));\n\n    return {\n      id: items.map((item) => item.itemId).join(SEPARATOR),\n      items,\n    };\n  }\n\n  const previousCardItems = previousCard.items.map((item) => item.itemId);\n\n  const newCardItems = chain(shuffledList).difference(previousCardItems).take(7).value();\n  const matchingItem =\n    sample(previousCardItems.filter((item) => item !== previousMatchId)) ?? previousCardItems[0];\n\n  const items = shuffle([...newCardItems, matchingItem]).map((itemId, i) => ({\n    itemId,\n    position: randomPositions[i],\n    size: randomSizes[i],\n    rotation: random(0, 360),\n    zIndex: Z_INDEXES[randomSizes[i]],\n  }));\n\n  return {\n    id: items.map((item) => item.itemId).join(SEPARATOR),\n    items,\n    match: matchingItem,\n  };\n}\n","import { useCountdown } from 'hooks/useCountdown';\nimport { intersectionBy } from 'lodash';\nimport { useDailyLocalToday } from 'pages/Daily/hooks/useDailyLocalToday';\nimport { useShowResultModal } from 'pages/Daily/hooks/useShowResultModal';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useLocalStorage } from 'react-use';\nimport { inNSeconds } from 'utils/helpers';\n\nimport { getDiscs } from './helpers';\nimport { SETTINGS } from './settings';\nimport { AquiODisc, AquiOLocalToday, DailyAquiOEntry } from './types';\n\ntype GameState = {\n  hearts: number;\n  goal: number;\n  discs: AquiODisc[];\n  discIndex: number;\n  attempts: number;\n};\n\nconst defaultAquiOLocalToday: AquiOLocalToday = {\n  id: '',\n  number: 0,\n  discs: 0,\n  hardMode: false,\n  attempts: 0,\n  hearts: SETTINGS.HEARTS,\n};\n\nexport function useAquiOEngine(data: DailyAquiOEntry, isRandomGame: boolean) {\n  const [timesUp, setTimesUp] = useState(false);\n\n  const [mode, setMode] = useLocalStorage(SETTINGS.TD_DAILY_AQUI_O_MODE, 'normal');\n\n  const [state, setState] = useState<GameState>({\n    hearts: SETTINGS.HEARTS,\n    goal: SETTINGS.GOAL,\n    discs: [],\n    discIndex: 0,\n    attempts: 0,\n  });\n\n  const { localToday, updateLocalStorage } = useDailyLocalToday<AquiOLocalToday>({\n    key: SETTINGS.TD_DAILY_AQUI_O_LOCAL_TODAY,\n    gameId: data.id,\n    challengeNumber: data.number,\n    defaultValue: defaultAquiOLocalToday,\n    disabled: isRandomGame,\n    onApplyLocalState: (value) => {\n      setState((prev) => ({\n        ...prev,\n        discIndex: value.discs,\n        attempts: value.attempts,\n        hearts: value.hearts,\n      }));\n    },\n  });\n\n  // ADDITIONAL STATE\n  const discA = state.discs[state.discIndex];\n  const discB = state.discs[state.discIndex + 1];\n\n  const result = useMemo(\n    () => intersectionBy(discA?.items ?? [], discB?.items ?? [], 'itemId')?.[0]?.itemId,\n    [discA, discB]\n  );\n\n  // TIMER\n  const { timeLeft, isRunning, restart, pause } = useCountdown({\n    duration: 60,\n    autoStart: false,\n    onExpire: () => {\n      setTimesUp(true);\n      if (!isRandomGame) {\n        updateLocalStorage({\n          hardMode: mode === 'challenge',\n          attempts: state.attempts,\n          hearts: state.hearts,\n          discs: state.discIndex > (localToday?.discs ?? 0) ? state.discIndex : localToday?.discs ?? 0,\n        });\n      }\n    },\n  });\n\n  // ACTIONS\n  const onStart = () => {\n    setState((prev) => ({\n      ...prev,\n      discs: getDiscs(data, mode === 'challenge'),\n      discIndex: 0,\n      attempts: prev.attempts + 1,\n    }));\n    restart(inNSeconds(60), true);\n  };\n\n  const onSelect = (itemId: string) => {\n    if (itemId === result) {\n      setState((prev) => ({ ...prev, discIndex: prev.discIndex + 1 }));\n    } else {\n      setState((prev) => ({ ...prev, hearts: prev.hearts - 1 }));\n    }\n  };\n\n  // CONDITIONS\n  const isWin = state.discIndex === SETTINGS.GOAL;\n  const isLose = state.hearts <= 0;\n  const isComplete = (isWin || isLose || timesUp || state.attempts > 0) && !isRunning;\n\n  useEffect(() => {\n    if (isWin || isLose) {\n      pause();\n      setTimesUp(true);\n    }\n  }, [isWin, isLose]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // RESULTS MODAL\n  const { showResultModal, setShowResultModal } = useShowResultModal(isComplete, () => pause());\n\n  return {\n    hearts: state.hearts,\n    discIndex: state.discIndex,\n    attempts: state.attempts,\n    showResultModal,\n    setShowResultModal,\n    isWin,\n    isLose,\n    isComplete,\n    onStart,\n    onSelect,\n    timeLeft,\n    mode,\n    setMode,\n    discA,\n    discB,\n    result,\n    isPlaying: isRunning,\n    localToday,\n  };\n}\n","import clsx from 'clsx';\nimport { ItemCard } from 'components/cards/ItemCard';\n\nimport { AquiODisc } from '../utils/types';\n\ntype DiscProps = {\n  disc: AquiODisc;\n  onSelect: (itemId: string) => void;\n  width: number;\n  className: string;\n};\nexport function Disc({ disc, onSelect, width, className }: DiscProps) {\n  return (\n    <div className={clsx('aqui-o-disc', className)} style={{ width: width, height: width }}>\n      {disc.items.map((item) => (\n        <div\n          key={item.itemId}\n          className={clsx('aqui-o-disc-item', `aqui-o-disc-item--pos-${item.position}`)}\n          style={{\n            transform: `rotate(${item.rotation}deg) scale(${item.size / 100})`,\n            zIndex: item.zIndex,\n          }}\n          role=\"button\"\n          onClick={() => onSelect(item.itemId)}\n        >\n          <ItemCard id={item.itemId} className=\"aqui-o-disc-sprite\" width={width / 4} />\n        </div>\n      ))}\n    </div>\n  );\n}\n","import { ItemCard } from 'components/cards/ItemCard';\n\ntype PreloadItemsProps = {\n  items: string[];\n};\n\nexport function PreloadItems({ items }: PreloadItemsProps) {\n  return (\n    <div style={{ display: 'none' }}>\n      {items.map((itemId) => (\n        <ItemCard key={itemId} id={itemId} className=\"transparent\" width={1} />\n      ))}\n    </div>\n  );\n}\n","import { Flex, Space, Typography } from 'antd';\nimport { IconAvatar } from 'components/avatars';\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { Translate } from 'components/language';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { ApplauseIcon } from 'icons/ApplauseIcon';\nimport { SealOfApprovalIcon } from 'icons/SealOfApprovalIcon';\nimport { SkullIcon } from 'icons/SkullIcon';\nimport { TrophyIcon } from 'icons/TrophyIcon';\nimport { getSourceName, getDailyName, writeHeartResultString } from 'pages/Daily/utils';\nimport { getAnimationClass } from 'utils/helpers';\n\nimport { CopyToClipboardResult } from '../../../components/CopyToClipboardResult';\nimport { SETTINGS } from '../utils/settings';\nimport { getAquiOName } from '../utils/helpers';\nimport clsx from 'clsx';\nimport { AquiOLocalToday } from '../utils/types';\n\nconst titles = [\n  <>\n    <IconAvatar icon={<SkullIcon />} /> <Translate pt=\"Você é muito ruim!\" en=\"You are really bad!\" />\n  </>,\n  <>\n    <IconAvatar icon={<SealOfApprovalIcon />} /> <Translate pt=\"Foi bem mais ou menos!\" en=\"Pretty Weak!\" />\n  </>,\n  <>\n    <IconAvatar icon={<ApplauseIcon />} /> <Translate pt=\"Muito bom!\" en=\"Very good!\" />\n  </>,\n  <>\n    <IconAvatar icon={<TrophyIcon />} /> <Translate pt=\"Parabéns!\" en=\"Congratulations!\" />\n  </>,\n  <>\n    <IconAvatar icon={<TrophyIcon />} /> <Translate pt=\"Incrível!\" en=\"Incredible!\" />\n  </>,\n];\n\nconst getTitle = (progress: number, remainingHearts: number) => {\n  if (progress <= 3 || remainingHearts === 0) return titles[0];\n  if (progress <= 8) return titles[1];\n  if (progress <= 10) return titles[2];\n  if (progress < 15) return titles[3];\n\n  return titles[4];\n};\n\ntype ResultsModalContentProps = {\n  challengeTitle: string;\n  challengeNumber: number;\n  hearts: number;\n  progress: number;\n  itemsIds: string[];\n  isRandomGame: boolean;\n  hardMode: boolean;\n  lastMatch: string;\n  localToday?: AquiOLocalToday;\n};\n\nexport function ResultsModalContent({\n  challengeTitle,\n  challengeNumber,\n  hearts,\n  progress,\n  itemsIds,\n  isRandomGame,\n  hardMode,\n  lastMatch,\n  localToday,\n}: ResultsModalContentProps) {\n  const { language } = useLanguage();\n  const result = writeResult({\n    title: challengeTitle,\n    remainingHearts: hearts,\n    totalHearts: SETTINGS.HEARTS,\n    progress,\n    goal: SETTINGS.GOAL,\n    language,\n    hardMode,\n    challengeNumber,\n  });\n\n  const title = getTitle(progress, hearts);\n  const better = (localToday?.discs ?? 0) > progress;\n\n  return (\n    <Space direction=\"vertical\" className=\"space-container\">\n      <Typography.Title level={2} className=\"center\">\n        {title}\n      </Typography.Title>\n      <Typography.Paragraph className=\"center\">\n        <Translate\n          pt={`Você avançou ${progress} discos de ${SETTINGS.GOAL}.`}\n          en={`You advanced ${progress} discs out of ${SETTINGS.GOAL}.`}\n        />\n        <br />\n      </Typography.Paragraph>\n      {!isRandomGame && (\n        <Typography.Paragraph className=\"center\">\n          <Translate\n            pt=\"Você pode tentar novamente até conseguir 15 ou até não ter mais corações.\"\n            en=\"You can try again until you reach 15 or until you run out of hearts.\"\n          />\n          {better && (\n            <>\n              <br />\n              <Translate\n                pt={`Seu melhor hoje foi de ${progress} discos. Tente novamente!`}\n                en={`Your best today was ${progress} discs. Try again!`}\n              />\n            </>\n          )}\n        </Typography.Paragraph>\n      )}\n\n      <Flex gap={6}>\n        {!!lastMatch && (\n          <ItemCard\n            id={lastMatch}\n            width={45}\n            className={clsx(getAnimationClass('pulse', { speed: 'fast' }), 'item-match-outline')}\n          />\n        )}\n        {itemsIds\n          .filter((id) => id !== lastMatch)\n          .slice(0, Math.floor((progress - 1) / 3))\n          .map((id, index) => (\n            <ItemCard\n              key={id}\n              id={id}\n              width={45}\n              className={getAnimationClass('pulse', { speed: 'fast', delay: index * 0.5 })}\n            />\n          ))}\n      </Flex>\n\n      {!isRandomGame && <CopyToClipboardResult result={result} rows={4} />}\n    </Space>\n  );\n}\n\nfunction writeResult({\n  title,\n  challengeNumber,\n  remainingHearts,\n  totalHearts,\n  progress,\n  goal,\n  language,\n  hardMode,\n}: {\n  title: string;\n  challengeNumber: number;\n  remainingHearts: number;\n  totalHearts: number;\n  progress: number;\n  goal: number;\n  language: Language;\n  hardMode: boolean;\n}): string {\n  return [\n    `🔘 ${getDailyName(language)} ${getAquiOName(language)} #${challengeNumber}`,\n    `${title}${hardMode ? '*' : ''}: ${progress}/${goal} ${writeHeartResultString(remainingHearts, totalHearts)}`,\n    `https://www.kavispires.com/tardedivertida/#/${getSourceName(language)}/aqui-o`,\n  ].join('\\n');\n}\n","import { Alert } from 'antd';\nimport { Translate } from 'components/language';\n\nexport function BetaBanner() {\n  return (\n    <Alert\n      message={\n        <Translate\n          pt=\"Jogo em fase de testes. Reporte qualquer problema.\"\n          en=\"Game in beta mode. Report any bugs!\"\n        />\n      }\n      type=\"warning\"\n      showIcon\n      banner\n    />\n  );\n}\n","import { Typography } from 'antd';\nimport { Translate } from 'components/language';\n\nimport { HeartFilled } from '@ant-design/icons';\n\nimport { BetaBanner } from '../../../components/BetaBanner';\n\nexport function Rules() {\n  return (\n    <Typography>\n      <BetaBanner />\n      <Translate\n        pt={\n          <>\n            <li>Você é apresentado com dois discos com 8 itens cada.</li>\n            <li>Existe apenas um item que é comum nos dois discos, clique nele o mais rápido possível.</li>\n            <li>Você tem 60 segundos para acertar o maior número de discos.</li>\n            <li>\n              Cada item errado que você clica, remove-se um coração e você tem apenas 3 <HeartFilled />.\n            </li>\n            <li>\n              <strong>Modo difícil:</strong> Itens nunca repetem em sequência.\n            </li>\n            <li>Boa sorte e cuidado com dedos gordos!</li>\n          </>\n        }\n        en={\n          <>\n            <li>You are presented with two discs with 8 items each.</li>\n            <li>There is only one item that is common in both discs, click on it as quickly as possible.</li>\n            <li>You have 60 seconds to hit the most discs.</li>\n            <li>\n              Each wrong item you click, a heart is removed and you only have 3 <HeartFilled />.\n            </li>\n            <li>\n              <strong>Hard mode:</strong> Items never repeat in sequence.\n            </li>\n            <li>Good luck and watch out for fat fingers!</li>\n          </>\n        }\n      />\n    </Typography>\n  );\n}\n","import { Button, Divider, FloatButton, Layout, Modal, Space, Switch, Typography } from 'antd';\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { DualTranslate, Translate } from 'components/language';\nimport { TimerBar } from 'components/timers';\nimport { DailyFindingGameIcon } from 'icons/DailyFindingGameIcon';\nimport { useMemo } from 'react';\nimport { useMeasure } from 'react-use';\nimport { getAnimationClass, isDevEnv } from 'utils/helpers';\n\nimport { Header } from '../../../components/Header';\nimport { Menu } from '../../../components/Menu';\nimport { SETTINGS } from '../utils/settings';\nimport { DailyAquiOEntry } from '../utils/types';\nimport { useAquiOEngine } from '../utils/useAquiOEngine';\nimport { Disc } from './Disc';\nimport { PreloadItems } from './PreloadItems';\nimport { ResultsModalContent } from './ResultsModalContent';\nimport { Rules } from './Rules';\n\ntype DailyAquiOProps = {\n  data: DailyAquiOEntry;\n  language: Language;\n  onToggleGame: () => void;\n  isRandomGame: boolean;\n};\n\nexport function DailyAquiO({ data, language, onToggleGame, isRandomGame }: DailyAquiOProps) {\n  const {\n    hearts,\n    showResultModal,\n    setShowResultModal,\n    discIndex,\n    isWin,\n    isLose,\n    isComplete,\n    onStart,\n    onSelect,\n    timeLeft,\n    mode,\n    setMode,\n    discA,\n    discB,\n    result,\n    isPlaying,\n    attempts,\n    localToday,\n  } = useAquiOEngine(data, isRandomGame);\n\n  // UI state\n  const [contentRef, contentMeasure] = useMeasure<HTMLDivElement>();\n  const [headerRef, headerMeasure] = useMeasure<HTMLDivElement>();\n  const discWidth = useMemo(() => {\n    const width = contentMeasure.width - 24;\n    const height = (contentMeasure.height - headerMeasure.height) / 2 - 24;\n    return Math.max(Math.min(width, height, 450), 150);\n  }, [contentMeasure.height, contentMeasure.width, headerMeasure.height]);\n\n  return (\n    <Layout className=\"app\">\n      <Header icon={<DailyFindingGameIcon />}>\n        <Translate pt=\"Aqui Ó\" en=\"Find This\" />\n      </Header>\n      <Layout.Content ref={contentRef}>\n        <div ref={headerRef}>\n          <Menu hearts={hearts} total={SETTINGS.HEARTS} openRules={true} rules={<Rules />} />\n          <Space className=\"space-container\">\n            <Typography.Text strong>\n              {data.title[language]} | <Translate pt=\"Disco\" en=\"Disc\" /> {discIndex}/{SETTINGS.GOAL}\n              {!isRandomGame && (\n                <>\n                  {' '}\n                  | <Translate pt=\"Tentativa\" en=\"Attempt\" /> {attempts + (isPlaying ? 1 : 0)}{' '}\n                </>\n              )}\n            </Typography.Text>\n          </Space>\n\n          <div className=\"full-width padding\">\n            <TimerBar value={timeLeft} total={60} />\n          </div>\n        </div>\n\n        <Space className=\"space-container\" direction=\"vertical\">\n          {!isPlaying && (\n            <>\n              <Button\n                size=\"large\"\n                onClick={onStart}\n                type=\"primary\"\n                disabled={isRandomGame ? false : isWin || isLose}\n                icon=\"🔘\"\n              >\n                <Translate pt=\"Começar\" en=\"Start\" />\n                &nbsp;\n                {isRandomGame ? (\n                  <DualTranslate>{data.title}</DualTranslate>\n                ) : (\n                  <Translate pt=\" Diário\" en=\" Daily\" />\n                )}\n              </Button>\n              <PreloadItems items={data.itemsIds} />\n\n              <Switch\n                unCheckedChildren={<Translate pt=\"Modo Normal\" en=\"Normal Mode\" />}\n                checkedChildren={<Translate pt=\"Modo Difícil\" en=\"Challenge Mode\" />}\n                value={mode === 'challenge'}\n                onChange={(checked) => setMode(checked ? 'challenge' : 'normal')}\n              />\n            </>\n          )}\n\n          {isComplete && (\n            <Space className=\"results-container\" align=\"center\" direction=\"vertical\">\n              <Button onClick={() => setShowResultModal(true)}>\n                <Translate pt=\"Ver Resultado\" en=\"Show Results\" />\n              </Button>\n            </Space>\n          )}\n\n          {(isRandomGame || isComplete) && (\n            <Space className=\"results-container\" align=\"center\" direction=\"vertical\">\n              <Divider />\n\n              <Button onClick={onToggleGame}>\n                {isRandomGame ? (\n                  <Translate pt=\"Jogar o Desafio Diário\" en=\"Play the daily challenge\" />\n                ) : (\n                  <Translate pt=\"Jogar com baralho aleatório\" en=\"Play a random deck\" />\n                )}\n              </Button>\n            </Space>\n          )}\n\n          {isPlaying && (\n            <Space className=\"space-container\" direction=\"vertical\">\n              <Disc\n                disc={discA}\n                onSelect={onSelect}\n                key={discA.id}\n                width={discWidth}\n                className={getAnimationClass('slideInUp', { speed: 'fast' })}\n              />\n              <Disc\n                disc={discB}\n                onSelect={onSelect}\n                key={discB.id}\n                width={discWidth}\n                className={getAnimationClass('zoomIn', { speed: 'fast' })}\n              />\n              <DevResult result={result} />\n            </Space>\n          )}\n\n          <Modal\n            title={<Translate pt=\"Resultado\" en=\"Results\" />}\n            open={showResultModal}\n            onCancel={() => setShowResultModal(false)}\n            okButtonProps={{ hidden: true }}\n            cancelButtonProps={{ hidden: true }}\n          >\n            <ResultsModalContent\n              challengeTitle={data.title[language]}\n              challengeNumber={data.number}\n              hearts={hearts}\n              progress={discIndex}\n              itemsIds={data.itemsIds}\n              isRandomGame={isRandomGame}\n              hardMode={mode === 'challenge'}\n              lastMatch={result}\n              localToday={localToday}\n            />\n          </Modal>\n        </Space>\n      </Layout.Content>\n    </Layout>\n  );\n}\n\nfunction DevResult({ result }: { result: string }) {\n  if (!isDevEnv) return <></>;\n\n  return (\n    <FloatButton shape=\"square\" icon={<ItemCard id={result} width={50} padding={0} className=\"raw-item\" />} />\n  );\n}\n","import './utils/styles.scss';\n\nimport { useLanguage } from 'hooks/useLanguage';\nimport { DailyError } from 'pages/Daily/components/DailyError';\nimport { DailyLoading } from 'pages/Daily/components/DailyLoading';\nimport { useRandomAquiOChallenge } from 'pages/Daily/games/AquiO/data/useRandomAquiOChallenge';\nimport { useState } from 'react';\n\nimport { getToday, wait } from '../../utils';\nimport { DailyAquiO } from './components/DailyAquiO';\nimport { useDailyChallenge } from 'pages/Daily/hooks/useDailyChallenge';\n\nexport function DailyAquiOGame() {\n  const today = getToday();\n  const { language } = useLanguage();\n  const [isRandomGame, setRandomGame] = useState(false);\n\n  // Load challenge\n  const challengeQuery = useDailyChallenge(`${today}`);\n  const randomGameQuery = useRandomAquiOChallenge(`${today}`);\n\n  if (challengeQuery.isLoading || challengeQuery.isRefetching || randomGameQuery.isLoading) {\n    return <DailyLoading />;\n  }\n\n  const dailyData = challengeQuery?.data?.['aqui-o'];\n  const data = isRandomGame ? randomGameQuery?.data : dailyData;\n\n  if (challengeQuery.isError || !data) {\n    return <DailyError />;\n  }\n\n  const onToggleGame = async () => {\n    setRandomGame((prev) => !prev);\n    await wait(250);\n    challengeQuery.refetch();\n  };\n\n  return (\n    <DailyAquiO data={data} language={language} onToggleGame={onToggleGame} isRandomGame={isRandomGame} />\n  );\n}\n","export const SETTINGS = {\n  HEARTS: 6,\n  WORD_LENGTH: 5,\n};\n","import { Letter } from 'pages/Daily/utils/types';\nimport { SETTINGS } from './settings';\n\nexport const getArteRuimName = (language: Language) => {\n  return language === 'pt' ? 'Palavreado' : 'Wordling';\n};\n\nexport const generateGrid = () => {\n  const grid: Letter[][] = [];\n  for (let i = 0; i < SETTINGS.HEARTS; i++) {\n    grid[i] = [];\n    for (let j = 0; j < SETTINGS.WORD_LENGTH; j++) {\n      grid[i][j] = {\n        letter: ' ',\n        state: 'idle',\n      };\n    }\n  }\n  return grid;\n};\n","import { Space, Typography } from 'antd';\nimport { IconAvatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { TextHighlight } from 'components/text';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { BoxXIcon } from 'icons/BoxXIcon';\nimport { TrophyIcon } from 'icons/TrophyIcon';\nimport { getDailyName, getSourceName } from 'pages/Daily/utils';\n\nimport { CopyToClipboardResult } from '../../../components/CopyToClipboardResult';\nimport { getArteRuimName } from '../utils/helpers';\nimport { Letter } from 'pages/Daily/utils/types';\n\ntype ResultsModalContentProps = {\n  challenge: number;\n  text: string;\n  win: boolean;\n  hearts: number;\n  attempts: Letter[][];\n};\n\nexport function ResultsModalContent({ text, challenge, win, hearts, attempts }: ResultsModalContentProps) {\n  const { language } = useLanguage();\n\n  const result = writeResult({ challenge, remainingHearts: hearts, attempts, language });\n\n  return (\n    <Space direction=\"vertical\" className=\"space-container\">\n      <Typography.Title level={2} className=\"center\">\n        {win ? (\n          <>\n            <IconAvatar icon={<TrophyIcon />} /> <Translate pt=\"Parabéns!\" en=\"Congratulations!\" />\n          </>\n        ) : (\n          <>\n            <IconAvatar icon={<BoxXIcon />} /> <Translate pt=\"Que pena!\" en=\"Too bad!\" />\n          </>\n        )}\n      </Typography.Title>\n      <Typography.Paragraph className=\"center\">\n        {win ? (\n          <Translate pt=\"Você acertou a palavra!\" en=\"You guessed the word!\" />\n        ) : (\n          <Translate pt=\"Você errou a palavra!\" en=\"You missed the word!\" />\n        )}\n      </Typography.Paragraph>\n\n      <TextHighlight className=\"result-answer\">\n        {<Typography.Paragraph>{text}</Typography.Paragraph>}\n      </TextHighlight>\n\n      <CopyToClipboardResult result={result} rows={6} />\n    </Space>\n  );\n}\n\nfunction writeResult({\n  challenge,\n  remainingHearts,\n  attempts,\n  language,\n}: {\n  challenge: number;\n  remainingHearts: number;\n  attempts: Letter[][];\n  language: Language;\n}) {\n  const cleanUpAttempts = attempts.map((row) =>\n    row.map((letter) => {\n      if (letter.state === 'correct') {\n        return '🟩';\n      }\n      if (letter.state === 'incorrect') {\n        return '🟥';\n      }\n      if (letter.state === 'intermediate') {\n        return '🟨';\n      }\n\n      if (letter.state === 'used') {\n        return '⬛️';\n      }\n\n      return '';\n    })\n  );\n\n  return [\n    `💻 ${getDailyName(language)} ${getArteRuimName(language)} #${challenge}`,\n\n    cleanUpAttempts\n      .map((row) => row.join(' ').trim())\n      .filter(Boolean)\n      .join('\\n'),\n    `https://www.kavispires.com/tardedivertida/#/${getSourceName(language)}/palavreado`,\n  ].join('\\n');\n}\n","import { Typography } from 'antd';\nimport { Translate } from 'components/language';\nimport { BetaBanner } from 'pages/Daily/components/BetaBanner';\nimport { SETTINGS } from '../utils/settings';\n\nexport function Rules() {\n  return (\n    <Typography>\n      <BetaBanner />\n      <Translate\n        pt={\n          <>\n            <li>\n              Existe uma palavra secreta de {SETTINGS.WORD_LENGTH} letras. Você tem {SETTINGS.HEARTS} chances\n              de tentar acertá-la.\n            </li>\n            <li>Digite uma palavra de 5 letras e aperte Enter.</li>\n            <li>Se a letra se tornar verde é porque a letra está presente e na posição correta.</li>\n            <li>Se a letra se tornar amarela é porque a letra está presente, mas na posição errada.</li>\n            <li>Boa sorte!</li>\n          </>\n        }\n        en={\n          <>\n            <li>\n              There is a secret word with {SETTINGS.WORD_LENGTH} letters. You have {SETTINGS.HEARTS} chances\n              to try to guess it.\n            </li>\n            <li>Type a 5-letter word and press Enter.</li>\n            <li>\n              If the letter turns green it is because the letter is present and in the correct position.\n            </li>\n            <li>\n              If the letter turns yellow it is because the letter is present, but in the wrong position.\n            </li>\n            <li>Good luck!</li>\n          </>\n        }\n      />\n    </Typography>\n  );\n}\n","import { App, Button, Layout, Modal, Space } from 'antd';\nimport clsx from 'clsx';\nimport { Translate } from 'components/language';\nimport { DailyWordGameIcon } from 'icons/DailyWordGameIcon';\nimport { Keyboard } from 'pages/Daily/components/Keyboard';\nimport { Letter, LettersDictionary } from 'pages/Daily/utils/types';\nimport { useEffect, useState } from 'react';\nimport { Me } from 'types/user';\nimport { getAnimationClass, stringRemoveAccents } from 'utils/helpers';\n\nimport { BarChartOutlined } from '@ant-design/icons';\n\nimport { Header } from '../../../components/Header';\nimport { Menu } from '../../../components/Menu';\nimport { generateGrid } from '../utils/helpers';\nimport { SETTINGS } from '../utils/settings';\nimport { DailyPalavreadoEntry } from '../utils/type';\nimport { ResultsModalContent } from './ResultsModalContent';\nimport { Rules } from './Rules';\n\ntype DailyPalavreadoProps = {\n  data: DailyPalavreadoEntry;\n  currentUser: Me;\n  wordDictionary: StringDictionary;\n};\n\nexport function DailyPalavreado({ data, wordDictionary }: DailyPalavreadoProps) {\n  const { message } = App.useApp();\n\n  // Build game: word, letters, lives\n  const [hearts, setHearts] = useState<number>(SETTINGS.HEARTS);\n  const [attempts, setAttempts] = useState<Letter[][]>(generateGrid());\n  const [win, setWin] = useState<boolean>(false);\n  const [row, setRow] = useState<number>(0);\n  const [col, setCol] = useState<number>(0);\n  const [lettersState, setLettersState] = useState<LettersDictionary>({});\n  const [showResultModal, setShowResultModal] = useState(false);\n\n  const clearRow = () => {\n    const newAttempts = [...attempts];\n    newAttempts[row].fill({ letter: '', state: 'idle' });\n    setAttempts(newAttempts);\n    setCol(0);\n  };\n\n  const onLetterClick = (letter: string) => {\n    if (col < 5) {\n      const newAttempts = [...attempts];\n      newAttempts[row][col] = { letter, state: 'idle' };\n      setAttempts(newAttempts);\n      setCol((prevCol) => prevCol + 1);\n    }\n  };\n\n  const onBackspaceClick = () => {\n    if (col > 0) {\n      const newAttempts = [...attempts];\n      newAttempts[row][col - 1] = { letter: '', state: 'idle' };\n      setAttempts(newAttempts);\n      setCol((prevCol) => prevCol - 1);\n    }\n  };\n\n  const onEnterClick = () => {\n    if (col < 5) {\n      message.info(\n        <Translate pt=\"Palavra incompleta, limpando a linha\" en=\"Incomplete word, clearing the row\" />\n      );\n      return clearRow();\n    }\n    const newAttempts = [...attempts];\n    const currentRow = newAttempts[row];\n    const suggestedWord = currentRow.map((letter) => letter.letter).join('');\n    const cleanWord = stringRemoveAccents(data.text).toLowerCase();\n\n    if (!wordDictionary[suggestedWord] && suggestedWord !== cleanWord) {\n      message.info(\n        <Translate\n          pt={`Essa palavra \"${suggestedWord}\" não existe na lista do jogo`}\n          en={`This word \"${suggestedWord}\" does not exist in the game list`}\n        />\n      );\n      return;\n    }\n\n    const updatedLettersState = { ...lettersState };\n    currentRow.forEach((entry, i) => {\n      currentRow[i] = { ...entry, state: cleanWord.includes(entry.letter) ? 'intermediate' : 'used' };\n\n      if (entry.letter === cleanWord[i]) {\n        currentRow[i] = { ...entry, state: 'correct' };\n      }\n\n      updatedLettersState[entry.letter] = {\n        letter: entry.letter,\n        state: currentRow[i].state,\n      };\n    });\n\n    const isComplete = currentRow.every((entry) => entry.state === 'correct');\n\n    if (!isComplete) {\n      setHearts((prev) => prev - 1);\n      setRow((prevRow) => prevRow + 1);\n    } else {\n      setWin(true);\n    }\n\n    setCol(0);\n    setAttempts(newAttempts);\n    setLettersState(updatedLettersState);\n  };\n\n  // Controls auto result modal\n  useEffect(() => {\n    if (win || hearts <= 0) {\n      setShowResultModal(true);\n    }\n  }, [win, hearts]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <Layout className=\"app\">\n      <Header icon={<DailyWordGameIcon />}>\n        TD <Translate pt=\"Diário\" en=\"Daily\" /> #{data.number}\n      </Header>\n      <Layout.Content>\n        <Menu hearts={hearts} total={SETTINGS.HEARTS} openRules={false} rules={<Rules />} />\n\n        <div className=\"board\">\n          {attempts.map((attemptRow, i) => (\n            <div key={i} className=\"board__row\">\n              {attemptRow.map((letter, j) => (\n                <div\n                  key={j}\n                  className={clsx(\n                    'board__cell',\n                    row === i && `board__cell--active`,\n                    `board__cell--${letter.state}`,\n                    letter.state !== 'idle' && getAnimationClass('flipInY', { delay: j })\n                  )}\n                >\n                  <span>{letter.letter}</span>\n                </div>\n              ))}\n            </div>\n          ))}\n        </div>\n\n        {(win || hearts <= 0) && (\n          <Space className=\"results-container\" direction=\"vertical\" align=\"center\">\n            <Button onClick={() => setShowResultModal(true)} type=\"primary\" icon={<BarChartOutlined />}>\n              <Translate pt=\"Ver Resultado\" en=\"Show Results\" />\n            </Button>\n          </Space>\n        )}\n        <Modal\n          title={<Translate pt=\"Resultado\" en=\"Results\" />}\n          open={showResultModal}\n          onCancel={() => setShowResultModal(false)}\n          okButtonProps={{ hidden: true }}\n          cancelButtonProps={{ hidden: true }}\n        >\n          <ResultsModalContent\n            challenge={data?.number}\n            win={win}\n            hearts={hearts}\n            text={data.text}\n            attempts={attempts}\n          />\n        </Modal>\n\n        <Keyboard\n          onLetterClick={onLetterClick}\n          onBackspaceClick={onBackspaceClick}\n          onEnterClick={onEnterClick}\n          lettersState={lettersState}\n          disabled={win || hearts === 0}\n        />\n      </Layout.Content>\n    </Layout>\n  );\n}\n","import './utils/styles.scss';\n\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\nimport { DailyError } from 'pages/Daily/components/DailyError';\nimport { DailyLoading } from 'pages/Daily/components/DailyLoading';\n\nimport { useDailyChallenge } from '../../hooks/useDailyChallenge';\nimport { getToday } from '../../utils';\nimport { DailyPalavreado } from './components/DailyPalavreado';\nimport { useWordList } from './data/useWordList';\nimport { DailyPalavreadoEntry } from './utils/type';\nimport { sample } from 'lodash';\n\nexport function DailyPalavreadoGame() {\n  const { currentUser } = useCurrentUserContext();\n  const today = getToday();\n\n  // Load challenge\n  const challengeQuery = useDailyChallenge(`${today}`);\n  const wordListQuery = useWordList();\n\n  if (wordListQuery.isLoading || challengeQuery.isLoading) {\n    return <DailyLoading />;\n  }\n\n  // const dailyData =\n  //   challengeQuery?.data?.['palavreado'] ??\n  const dailyData = {\n    id: '',\n    number: 0,\n    type: 'palavreado',\n    language: 'pt',\n    text: sample(Object.values(wordListQuery.data ?? { troco: 'troço' })) || 'troço',\n  } as DailyPalavreadoEntry;\n\n  if (challengeQuery.isError || wordListQuery.isError) {\n    return <DailyError />;\n  }\n\n  return (\n    <DailyPalavreado data={dailyData} currentUser={currentUser} wordDictionary={wordListQuery.data ?? {}} />\n  );\n}\n","import { App } from 'antd';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useTDBaseUrl } from 'hooks/useTDBaseUrl';\nimport { print, stringRemoveAccents } from 'utils/helpers';\n\nimport { useQuery } from '@tanstack/react-query';\n\nexport function useWordList() {\n  const { language } = useLanguage();\n  const { notification } = App.useApp();\n  const baseUrl = useTDBaseUrl('tdr');\n  // const library = 'five-letter-words';\n  const library = 'words-5-letters';\n\n  // Load challenge\n  return useQuery<StringDictionary>({\n    queryKey: ['tdr', library, language],\n    queryFn: async () => {\n      console.count(`Fetching ${library}-${language}...`);\n\n      const response = await fetch(`${baseUrl}/${library}-${language}.json`);\n      const jsonResponse = await response.json();\n      return jsonResponse.reduce(\n        (acc: StringDictionary, word: string) => {\n          acc[stringRemoveAccents(word)] = word;\n          return acc;\n        },\n        { troco: 'troço' }\n      );\n    },\n    retry: false,\n    onSuccess: (response) => {\n      const data = response;\n      print({ [library]: data }, 'log');\n    },\n    onError: (e: any) => {\n      notification.error({\n        message: 'Failed to load user',\n        description: JSON.stringify(e.message),\n      });\n    },\n  });\n}\n","export const SETTINGS = {\n  DURATION: 60,\n  DRAWINGS: 6,\n  TD_DAILY_ARTISTA_LOCAL_TODAY: 'TD_DAILY_ARTISTA_LOCAL_TODAY',\n};\n","import { useDailyGameState } from 'pages/Daily/hooks/useDailyGameState';\nimport { ArtistaLocalToday, DailyArtistaEntry, DrawingToSave } from './types';\nimport { sampleSize } from 'lodash';\nimport { ArteRuimCard } from 'types/tdr';\nimport { Me } from 'types/user';\nimport { useDailyLocalToday } from 'pages/Daily/hooks/useDailyLocalToday';\nimport { SETTINGS } from './settings';\nimport { wait } from 'pages/Daily/utils';\nimport { SEPARATOR } from 'utils/constants';\nimport { useDailySaveDrawings } from 'pages/Daily/hooks/useDailySaveDrawings';\nimport { removeDuplicates } from 'utils/helpers';\n\ntype GameState = {\n  cards: ArteRuimCard[];\n  drawings: string[];\n  cardIndex: number;\n  played: boolean;\n  screen: 'idle' | 'playing' | 'saving';\n};\n\nconst defaultLocalToday: ArtistaLocalToday = {\n  id: '',\n  number: 0,\n  played: false,\n};\n\nexport function useArtistaEngine(data: DailyArtistaEntry, currentUser: Me) {\n  const { state, setState, updateState } = useDailyGameState<GameState>({\n    cards: sampleSize(data.cards, SETTINGS.DRAWINGS),\n    drawings: [],\n    cardIndex: 0,\n    played: false,\n    screen: 'idle',\n  });\n\n  const { updateLocalStorage } = useDailyLocalToday<ArtistaLocalToday>({\n    key: SETTINGS.TD_DAILY_ARTISTA_LOCAL_TODAY,\n    gameId: data.id,\n    challengeNumber: data.number ?? 0,\n    defaultValue: defaultLocalToday,\n    onApplyLocalState: (value) => {\n      if (value.played) {\n        updateState({\n          played: value.played,\n        });\n      }\n    },\n  });\n\n  const card = state.cards[state.cardIndex];\n\n  const onStart = () => updateState({ screen: 'playing' });\n\n  const onNextCard = async (drawing: any) => {\n    if (state.cardIndex < state.cards.length - 1) {\n      return setState((prev) => ({\n        ...prev,\n        drawings: [...prev.drawings, JSON.stringify(drawing)],\n        cardIndex: prev.cardIndex + 1,\n      }));\n    }\n\n    if (state.cardIndex === state.cards.length - 1) {\n      updateState({ screen: 'saving' });\n\n      // SAVE\n      await wait(1000);\n\n      onSaveDrawings({\n        ...state,\n        drawings: removeDuplicates([...state.drawings, JSON.stringify(drawing)]),\n        screen: 'saving',\n      });\n    }\n  };\n\n  const mutation = useDailySaveDrawings(() => {\n    updateLocalStorage({ played: true });\n    updateState({ played: true, screen: 'idle' });\n  });\n\n  const onSaveDrawings = (stateToSave: GameState) => {\n    const toSave = stateToSave.drawings.reduce((acc: Dictionary<DrawingToSave>, drawing, index) => {\n      if (drawing.length > 50) {\n        const card = stateToSave.cards[index];\n        acc[`card${index}${SEPARATOR}${Date.now()}`] = {\n          drawing,\n          id: card.id,\n          level: card.level,\n          playerId: currentUser.id,\n          successRate: 0,\n          text: card.text,\n        };\n      }\n\n      return acc;\n    }, {});\n\n    mutation.mutate(toSave);\n  };\n\n  return {\n    cardNumber: state.cardIndex + 1,\n    card,\n    isPlaying: state.screen === 'playing',\n    isIdle: state.screen === 'idle',\n    isSaving: state.screen === 'saving' || mutation.isLoading,\n    alreadyPlayed: state.played,\n    onStart,\n    onNextCard,\n  };\n}\n","import { useMutation } from '@tanstack/react-query';\nimport { App } from 'antd';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { DAILY_API, DAILY_API_ACTIONS } from 'services/adapters';\nimport { DrawingToSave } from '../games/Artista/utils/types';\n\nexport function useDailySaveDrawings(onSuccess: Function) {\n  const { translate } = useLanguage();\n  const { notification } = App.useApp();\n\n  const query = useMutation({\n    mutationKey: ['add-player'],\n    mutationFn: async (payload: Dictionary<DrawingToSave>) =>\n      await DAILY_API.run({\n        action: DAILY_API_ACTIONS.SAVE_DRAWING,\n        drawings: payload,\n        language: Object.values(payload)?.[0]?.id?.split('-')?.[2] ?? 'pt',\n      }),\n    onSuccess: () => {\n      notification.success({\n        message: translate('Desenhos salvos com sucesso!', 'Drawings saved successfully!'),\n        placement: 'bottomLeft',\n      });\n      onSuccess();\n    },\n    onError: (e: any) => {\n      notification.error({\n        message: translate(\n          'Vixi, o aplicativo encontrou um erro ao tentar salvar desenhos',\n          'Oops, the application failed when trying to save drawings'\n        ),\n        description: JSON.stringify(e.message),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n    },\n  });\n\n  return query;\n}\n","import { Typography } from 'antd';\nimport { Translate } from 'components/language';\nimport { BetaBanner } from 'pages/Daily/components/BetaBanner';\n\nexport function Rules() {\n  return (\n    <Typography>\n      <BetaBanner />\n      <Translate\n        pt={\n          <>\n            <li>Contribua com o banco de dados do TD!</li>\n            <li>A cada 10 segundos, você irá ler uma expressão e desenhar.</li>\n            <li>Após 6 expressões, ou 1 minuto, seus desenhos serão salvos no banco de dados.</li>\n            <li>Tente fazer o melhor possível, evite pornografia, e foque nos detalhes.</li>\n            <li>Boa sorte!</li>\n          </>\n        }\n        en={\n          <>\n            <li>Contribute to TD's database!</li>\n            <li>Every 10 seconds, you will read an expression and draw.</li>\n            <li>After 6 expressions or 1 minute, your drawings will be saved in the database</li>\n            <li>Try to do your best possible, avoid NSFW content, and focus on the details.</li>\n            <li>Good luck!</li>\n          </>\n        }\n      />\n    </Typography>\n  );\n}\n","import { Flex } from 'antd';\nimport { DrawingCanvas } from 'components/canvas';\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useState } from 'react';\nimport { SETTINGS } from '../utils/settings';\nimport { TimerBar } from 'components/timers';\n\ntype CanvasProps = {\n  onNextCard: (lines: any) => void;\n  maxWidth: number;\n};\n\nconst duration = SETTINGS.DURATION / SETTINGS.DRAWINGS;\n\nexport function Canvas({ onNextCard, maxWidth }: CanvasProps) {\n  const [lines, setLines] = useState<CanvasLine[]>([]);\n\n  const { timeLeft } = useCountdown({\n    duration: duration + 2,\n    autoStart: true,\n    onExpire: () => {\n      onNextCard(lines);\n    },\n  });\n\n  return (\n    <Flex className=\"full-width\" vertical style={{ maxWidth }}>\n      <TimerBar value={timeLeft} total={duration} className=\"artista-time-bar\" />\n      <DrawingCanvas\n        lines={lines}\n        setLines={setLines}\n        strokeWidth=\"small\"\n        style={{\n          transform: `scale(${maxWidth / 500})`,\n          transformOrigin: 'top center',\n        }}\n      />\n    </Flex>\n  );\n}\n","import { Alert, Button, Divider, Layout, Space, Typography } from 'antd';\nimport { Translate } from 'components/language';\nimport { Me } from 'types/user';\n\nimport { Header } from '../../../components/Header';\nimport { Menu } from '../../../components/Menu';\nimport { SETTINGS } from '../utils/settings';\nimport { DailyArtistaEntry } from '../utils/types';\nimport { useArtistaEngine } from '../utils/useArtistaEngine';\n\nimport { Rules } from './Rules';\nimport { useMeasure } from 'react-use';\nimport { useMemo } from 'react';\nimport { Canvas } from './Canvas';\nimport { Card } from 'components/cards';\nimport { DailyDrawingGameIcon } from 'icons/DailyDrawingGameIcon';\nimport { getAnimationClass } from 'utils/helpers';\nimport { Instruction } from 'components/text';\nimport { IconAvatar } from 'components/avatars';\nimport { AnimatedProcessingIcon } from 'icons/AnimatedProcessingIcon';\nimport { ThumbsUpIcon } from 'icons/ThumbsUpIcon';\nimport { Link } from 'react-router-dom';\n\ntype DailyArtistaProps = {\n  data: DailyArtistaEntry;\n  currentUser: Me;\n};\n\nexport function DailyArtista({ data, currentUser }: DailyArtistaProps) {\n  const { cardNumber, card, onNextCard, isPlaying, isIdle, isSaving, alreadyPlayed, onStart } =\n    useArtistaEngine(data, currentUser);\n\n  // UI state\n  const [contentRef, contentMeasure] = useMeasure<HTMLDivElement>();\n  const [headerRef, headerMeasure] = useMeasure<HTMLDivElement>();\n  const maxWidth = useMemo(() => {\n    const width = contentMeasure.width - 24;\n    const height = contentMeasure.height - headerMeasure.height - 24;\n    return Math.max(Math.min(width, height, 500), 150);\n  }, [contentMeasure.height, contentMeasure.width, headerMeasure.height]);\n\n  return (\n    <Layout className=\"app\">\n      <Header icon={<DailyDrawingGameIcon />}>\n        TD <Translate pt=\"Picaço\" en=\"Big Artist\" /> #{data.number}\n      </Header>\n      <Layout.Content ref={contentRef}>\n        <div ref={headerRef}>\n          <Menu hearts={0} total={0} openRules rules={<Rules />} />\n          {alreadyPlayed && (\n            <Instruction className=\"info-screen\">\n              <IconAvatar icon={<ThumbsUpIcon />} />\n              <Translate pt=\"Você já jogou hoje!\" en=\"You've already played today!\" />\n              <Translate pt=\"Volte amanhã para jogar novamente!\" en=\"Come back tomorrow to play again!\" />\n              <Divider />\n              <Link to=\"/daily\">\n                <Translate pt=\"Jogar outros jogos\" en=\"Play something else\" />\n              </Link>\n            </Instruction>\n          )}\n\n          {!alreadyPlayed && !isSaving && (\n            <Space className=\"space-container\">\n              <Card\n                key={isPlaying ? card.id : 'none'}\n                header={isPlaying ? `#${cardNumber}` : '?'}\n                color=\"gold\"\n                className={!isPlaying ? 'invisible' : getAnimationClass('tada')}\n              >\n                {!isPlaying ? (\n                  <>\n                    Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut\n                    labore et dolore.\n                  </>\n                ) : (\n                  card.text\n                )}\n              </Card>\n            </Space>\n          )}\n        </div>\n\n        {isPlaying && (\n          <Space className=\"space-container\">\n            <Canvas key={card.id} maxWidth={maxWidth} onNextCard={onNextCard} />\n          </Space>\n        )}\n\n        {isSaving && (\n          <Instruction className=\"info-screen\">\n            <IconAvatar icon={<AnimatedProcessingIcon />} />\n            <Translate pt=\"Salvando\" en=\"Saving\" />\n          </Instruction>\n        )}\n\n        {isIdle && !alreadyPlayed && (\n          <Space className=\"space-container\">\n            <Space direction=\"vertical\" className=\"space-container\">\n              <Instruction contained>\n                <Translate\n                  pt={\n                    <>\n                      Você tem {SETTINGS.DURATION / SETTINGS.DRAWINGS} segundos para fazer cada um dos{' '}\n                      {SETTINGS.DRAWINGS} desenhos. O tempo começa assim que você aperta \"Começar\".\n                    </>\n                  }\n                  en={\n                    <>\n                      You have {SETTINGS.DURATION / SETTINGS.DRAWINGS} seconds to make each of the{' '}\n                      {SETTINGS.DRAWINGS} drawings. The time starts as soon as you press \"Start\".\n                    </>\n                  }\n                />\n              </Instruction>\n              <Button type=\"primary\" size=\"large\" onClick={onStart} disabled={alreadyPlayed}>\n                {isSaving ? <Translate pt=\"Salvando\" en=\"Saving\" /> : <Translate pt=\"Começar\" en=\"Start\" />}\n              </Button>\n            </Space>\n          </Space>\n        )}\n      </Layout.Content>\n    </Layout>\n  );\n}\n","import './utils/styles.scss';\n\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\nimport { DailyError } from 'pages/Daily/components/DailyError';\nimport { DailyLoading } from 'pages/Daily/components/DailyLoading';\n\nimport { useDailyChallenge } from '../../hooks/useDailyChallenge';\nimport { getToday } from '../../utils';\nimport { DailyArtista } from './components/DailyArtista';\n\nexport function DailyArtistaGame() {\n  const { currentUser } = useCurrentUserContext();\n  const today = getToday();\n\n  // Load challenge\n  const challengeQuery = useDailyChallenge(`${today}`);\n\n  if (challengeQuery.isLoading) {\n    return <DailyLoading />;\n  }\n\n  const dailyData = challengeQuery?.data?.['artista'];\n\n  if (challengeQuery.isError || !dailyData) {\n    return <DailyError />;\n  }\n\n  return <DailyArtista data={dailyData} currentUser={currentUser} />;\n}\n","import './utils/daily.scss';\n\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { LoginModal } from 'pages/Me/components/LoginModal';\nimport { useLocation } from 'react-router-dom';\nimport { useEffectOnce, useTitle } from 'react-use';\n\nimport { DailyArteRuimGame } from './games/ArteRuim/DailyArteRuimGame';\nimport { DailyChrome } from './components/DailyChrome';\nimport { Hub } from './games/Hub';\nimport { DailyAquiOGame } from './games/AquiO/DailyAquiOGame';\nimport { getDailyName } from './utils';\nimport { DailyPalavreadoGame } from './games/Palavreado/DailyPalavreadoGame';\nimport { DailyArtistaGame } from './games/Artista/DailyArtistaGame';\n\nfunction DailyPage() {\n  const { isAuthenticated } = useCurrentUserContext();\n  const { pathname } = useLocation();\n  const { setLanguage, language } = useLanguage();\n\n  useEffectOnce(() => {\n    setLanguage(pathname.includes('diario') ? 'pt' : 'en');\n  });\n\n  const subPath = pathname.split('/')?.[2];\n\n  useTitle(`${getDailyName(language)} - Tarde Divertida`);\n\n  if (!isAuthenticated) {\n    return (\n      <DailyChrome>\n        <LoginModal isAuthenticated={false} />\n      </DailyChrome>\n    );\n  }\n\n  const Outlet =\n    {\n      '': Hub,\n      'aqui-o': DailyAquiOGame,\n      'arte-ruim': DailyArteRuimGame,\n      hub: Hub,\n      palavreado: DailyPalavreadoGame,\n      artista: DailyArtistaGame,\n    }?.[subPath] ?? Hub;\n\n  return <Outlet />;\n}\n\nexport default DailyPage;\n","// Ant Design Resources\nimport { Modal } from 'antd';\n// Utils\nimport { NOOP } from 'utils/constants';\n// Components\nimport { SignIn } from 'components/auth/SignIn';\nimport { Translate } from 'components/language';\n\ntype LoginModalProps = {\n  isAuthenticated: boolean;\n};\n\nexport function LoginModal({ isAuthenticated }: LoginModalProps) {\n  return (\n    <Modal\n      open={!isAuthenticated}\n      title={<Translate pt=\"Logar\" en=\"LogIn\" />}\n      cancelText={<Translate pt=\"Cancelar\" en=\"Cancel\" />}\n      onCancel={NOOP}\n      okButtonProps={{\n        style: { display: 'none' },\n      }}\n      cancelButtonProps={{\n        style: { display: 'none' },\n      }}\n      closable={false}\n    >\n      <SignIn onSuccess={NOOP} />\n    </Modal>\n  );\n}\n"],"names":["SignIn","onSuccess","useState","view","setView","className","src","logo","preview","checkedChildren","pt","en","unCheckedChildren","onChange","checked","SignInWithGoogle","SignInWithEmail","buttonProps","useMutation","mutationFn","signInWithGoogle","isLoading","mutate","isError","direction","align","classNames","item","description","type","showIcon","size","onClick","loading","block","icon","Form","form","translate","useLanguage","showForgotPassword","setShowForgotPassword","signIn","getFieldValue","name","labelCol","span","wrapperCol","style","maxWidth","initialValues","remember","onFinish","autoComplete","label","rules","required","message","help","offset","htmlType","v","ResetPasswordForm","email","App","resetPassword","success","username","level","disabled","CanvasResizer","useGlobalState","canvasSize","setCanvasSize","position","DragOutlined","labelText","content","value","min","max","step","CanvasSVG","drawing","width","height","strokeWidth","viewBox","konvaLines","JSON","parse","paths","map","lineArr","path","x","y","length","strokeWidthBySize","small","medium","large","xmlns","overflow","index","d","fill","stroke","strokeLinecap","strokeLinejoin","strokeMiterlimit","DrawingCanvas","lines","setLines","showControls","willReadFrequently","drawingHistory","setDrawingHistory","isDrawing","useRef","startDrawing","current","stopDrawing","startLine","e","pos","target","getStage","getPointerPosition","Math","round","finishLine","point","lastLineEntry","concat","splice","handleMouseDown","handleMouseMove","lastLine","handleMouseUp","handleOffsetMouseUp","handleOffsetMouseDown","vertical","onMouseDown","onMousemove","onMouseup","onTouchStart","onTouchMove","onTouchEnd","onMouseLeave","window","document","addEventListener","onMouseEnter","removeEventListener","clsx","id","line","i","points","tension","lineCap","globalCompositeOperation","linesCopy","drawingHistoryCopy","pop","push","UndoOutlined","lastUndoLine","DeleteOutlined","ItemCard","title","text","padding","str","match","numId","parseInt","itemId","sourceId","ceil","getSource","source","Boolean","Card","children","header","footer","color","randomColor","headerClassName","footerClassName","hideHeader","baseClass","bgColor","getColorFromLetter","toUpperCase","startsWith","backgroundColor","MetricHighlight","iconSize","iconPlacement","Sprite","baseUrl","useTDBaseUrl","useQuery","queryKey","queryFn","fetch","response","enabled","data","paddedWidth","display","placeItems","svgContent","WarningOutlined","xlinkHref","dangerouslySetInnerHTML","__html","background","Instruction","white","contained","fullWidth","noMargin","RoundsLeftInstruction","left","total","forceLastRound","pluralize","TextHighlight","Title","RuleInstruction","sfx","action","PlayCircleFilled","alert","AlertFilled","event","ExclamationCircleFilled","lore","MessageFilled","rule","ReadFilled","tip","BulbFilled","scoring","StarFilled","wait","ClockCircleFilled","bot","RobotFilled","animationClass","getAnimationClass","infinite","speed","repeat","token","theme","colorPrimary","TimerClock","minutes","seconds","AnimatedClockIcon","TimerBar","steps","props","status","percentage","percent","showInfo","marginBottom","undefined","TimedTimerBar","duration","onExpire","timeLeft","useCountdown","autoStart","TimedTimerClock","timerProps","WaitingTime","privateTimeLeft","kind","base","process","attributeName","dur","from","repeatCount","to","ApplauseIcon","GoogleIcon","SkullIcon","cx","cy","r","Header","Content","Layout","DailyChrome","CalendarIcon","DailyError","toggleLanguage","language","navigate","useNavigate","DailyLoading","margin","useDailyChallenge","today","notification","collectionName","getSourceName","console","count","DAILY_API","DAILY_API_ACTIONS","date","retry","print","onError","error","stringify","FIRST_ROW","SECOND_ROW","THIRD_ROW","Keyboard","lettersState","onLetterClick","onBackspaceClick","onEnterClick","useCardWidth","useEffect","handleKeyUp","key","includes","letter","Key","state","baseClassName","Menu","hearts","openRules","DailyHubLink","Hearts","remaining","RulesModal","defaultOpen","Array","_","heart","HeartFilled","HeartOutlined","open","setOpen","QuestionCircleFilled","placement","onClose","AppstoreFilled","SETTINGS","useDailyGameState","initialState","setState","updateState","newState","prev","useDailyLocalToday","gameId","challengeNumber","defaultValue","onApplyLocalState","useLocalStorage","localToday","setLocalToday","hasAppliedLocalToday","setHasAppliedLocalToday","number","stateToApply","updateLocalStorage","useShowResultModal","condition","onUpdate","showResultModal","setShowResultModal","getArteRuimName","getLettersInWord","letters","normalize","replace","toLowerCase","split","lettersInWord","forEach","cleanupLetter","char","defaultArteRuimLocalToday","DrawingCarousel","drawings","minWidth","autoplay","autoplaySpeed","Prompt","guesses","prompt","useMemo","word","wrap","p","l","j","isCorrect","shape","BoxBlankIcon","CopyToClipboardResult","result","rows","useCopyToClipboard","copyToClipboard","info","readOnly","cols","ResultsModalContent","challenge","win","remainingHearts","solution","totalLetters","Object","keys","guessedLetters","values","filter","getDailyName","writeHeartResultString","join","writeResult","TrophyIcon","BoxXIcon","Rules","DailyArteRuim","reduce","acc","isWin","every","isLose","isComplete","guessLetter","removeDuplicates","useArteRuimEngine","DailyArtGameIcon","BarChartOutlined","onCancel","okButtonProps","hidden","cancelButtonProps","DailyArteRuimGame","currentUser","useCurrentUserContext","getToday","challengeQuery","dailyData","Hub","hoverType","DailyFindingGameIcon","DailyDrawingGameIcon","DailyWordGameIcon","DailyGroupingGameIcon","DailyCrimeGameIcon","DailyImagesGameIcon","DailyMovieGameIcon","MISC_SETS","getAquiOName","getDiscs","entry","challengingGame","allItems","shuffle","itemsIds","discs","card","createCards","POSITIONS","SIZES","Z_INDEXES","list","previousCard","previousMatchId","shuffledList","randomPositions","randomSizes","items","sampleSize","rotation","random","zIndex","SEPARATOR","previousCardItems","newCardItems","chain","difference","take","matchingItem","sample","defaultAquiOLocalToday","hardMode","attempts","Disc","disc","onSelect","transform","role","PreloadItems","titles","SealOfApprovalIcon","challengeTitle","progress","isRandomGame","lastMatch","totalHearts","goal","getTitle","better","gap","slice","floor","delay","BetaBanner","banner","DailyAquiO","onToggleGame","timesUp","setTimesUp","mode","setMode","discIndex","discA","discB","intersectionBy","isRunning","restart","pause","onStart","inNSeconds","isPlaying","useAquiOEngine","useMeasure","contentRef","contentMeasure","headerRef","headerMeasure","discWidth","ref","strong","DevResult","isDevEnv","DailyAquiOGame","setRandomGame","randomGameQuery","chosenSet","setId","useRandomAquiOChallenge","isRefetching","refetch","cleanUpAttempts","row","trim","DailyPalavreado","wordDictionary","setHearts","grid","generateGrid","setAttempts","setWin","setRow","col","setCol","setLettersState","attemptRow","newAttempts","prevCol","clearRow","currentRow","suggestedWord","cleanWord","stringRemoveAccents","updatedLettersState","prevRow","DailyPalavreadoGame","wordListQuery","library","json","jsonResponse","troco","useWordList","defaultLocalToday","played","useArtistaEngine","cards","cardIndex","screen","onNextCard","onSaveDrawings","mutation","query","mutationKey","payload","useDailySaveDrawings","stateToSave","toSave","Date","now","playerId","successRate","cardNumber","isIdle","isSaving","alreadyPlayed","Canvas","transformOrigin","DailyArtista","ThumbsUpIcon","AnimatedProcessingIcon","DailyArtistaGame","isAuthenticated","pathname","useLocation","setLanguage","useEffectOnce","subPath","useTitle","LoginModal","Outlet","hub","palavreado","artista","cancelText","NOOP","closable"],"sourceRoot":""}