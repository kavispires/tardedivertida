{"version":3,"file":"static/js/1724.1bcc59e7.chunk.js","mappings":"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","sources":["components/buttons/FixedMenuButton.tsx","components/buttons/TimedButton.tsx","components/buttons/TransparentButton.tsx","components/general/GameTags.tsx","components/rules/CollapsibleRule.tsx","components/rules/PopoverRule.tsx","components/rules/RulesCarousel.tsx","components/rules/RulesList.tsx","components/rules/RulesModal.tsx","components/text/Instruction.tsx","components/text/RoundsLeftInstruction.tsx","components/text/TextHighlight.tsx","components/text/Title.tsx","hooks/useCountdown.ts","utils/avatars.ts","utils/constants.ts","utils/helpers.ts"],"sourcesContent":["import clsx from 'clsx';\nimport { ReactNode, useState } from 'react';\nimport { useEffectOnce } from 'react-use';\n// Ant Design Resources\nimport { Button, ButtonProps, Popover } from 'antd';\n// Sass\nimport './FixedMenuButton.scss';\n\ntype FixedMenuButtonDefaultProps = {\n  /**\n   * What order it will show up in the screen\n   * 0 for rules\n   * 1 for extras (e.g. card size)\n   * 2 for extras\n   * 3 for rating\n   * -1 for admin only\n   */\n  position: 0 | 1 | 2 | 3 | -1;\n  /**\n   * The displayed icon\n   */\n  icon: ReactNode;\n  /**\n   * The optional label to follow the icon when hover\n   */\n  label?: ReactNode;\n  /**\n   * The custom class\n   */\n  className?: string;\n  /**\n   * Determine if label should be visible\n   */\n  showLabel?: boolean;\n  /**\n   * Any ant design button props\n   */\n  buttonProps?: ButtonProps;\n};\n\ninterface FixedMenuButtonPopoverProps extends FixedMenuButtonDefaultProps {\n  /**\n   * The type of the floater\n   */\n  type: 'popover';\n  /**\n   * Content of popover, required when popover rule\n   */\n  content: ReactNode;\n  /**\n   * Guard onclick from button only\n   */\n  onClick?: never;\n  /**\n   * If popover should be open\n   */\n  open?: boolean;\n}\n\ninterface FixedMenuButtonButtonOnlyProps extends FixedMenuButtonDefaultProps {\n  /**\n   * The type of the floater\n   */\n  type: 'button';\n  /**\n   * The click function for the button\n   */\n  onClick: GenericFunction;\n  /**\n   * Guard content from popover\n   */\n  content?: never;\n  /**\n   * If popover should be open\n   */\n  open?: never;\n}\n\ntype FixedMenuButtonProps = FixedMenuButtonPopoverProps | FixedMenuButtonButtonOnlyProps;\n\n/**\n * Button position on the top left of the screen to display rules, admin button and other features\n */\nexport function FixedMenuButton({ type, position, content, className, open, ...rest }: FixedMenuButtonProps) {\n  return (\n    <div className={clsx('fixed-menu-button', `fixed-menu-button--${position}`, className)}>\n      {type === 'popover' ? (\n        <Popover placement=\"bottomLeft\" content={content} trigger=\"click\" open={open}>\n          <FixedMenuButtonContent {...rest} />\n        </Popover>\n      ) : (\n        <FixedMenuButtonContent {...rest} />\n      )}\n    </div>\n  );\n}\n\nfunction FixedMenuButtonContent({\n  icon,\n  label,\n  showLabel,\n  onClick,\n  buttonProps,\n}: Partial<FixedMenuButtonProps>) {\n  const [isActive, setActive] = useState(showLabel);\n  const hasLabel = Boolean(label);\n\n  useEffectOnce(() => {\n    setActive(showLabel);\n  });\n\n  return (\n    <Button\n      shape={hasLabel && isActive ? 'round' : 'circle'}\n      size=\"middle\"\n      onMouseOver={() => setActive(true)}\n      onMouseLeave={() => setActive(showLabel ?? false)}\n      onClick={onClick ? onClick : undefined}\n      icon={icon}\n      type=\"ghost\"\n      {...buttonProps}\n    >\n      {isActive && hasLabel && <span className=\"fixed-menu-button__label\">{label}</span>}\n    </Button>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, ButtonProps } from 'antd';\n// Hook and Utils\nimport { useCountdown } from 'hooks/useCountdown';\n// Sass\nimport './TimedButton.scss';\n\ninterface TimedButtonProps extends ButtonProps {\n  /**\n   * Duration to call onExpire in seconds\n   */\n  duration?: number;\n  /**\n   * Function to be called when the time expires\n   */\n  onExpire?: GenericFunction;\n  /**\n   * Flag indicating if the timer should be hidden (this cancels the onExpire function)\n   */\n  hideTimer?: boolean;\n}\n\n/**\n * Button component that triggers a function when given duration is over\n */\nexport function TimedButton({\n  duration = 10,\n  children,\n  onExpire,\n  type,\n  onClick,\n  hideTimer = false,\n  ...rest\n}: TimedButtonProps) {\n  const { timeLeft } = useCountdown({\n    duration,\n    autoStart: true,\n    onExpire,\n    disabled: hideTimer,\n  });\n\n  const timeClass = 'timed-button__time';\n\n  return (\n    <Button {...rest} type={type} onClick={onClick ?? onExpire}>\n      {children}\n      {Boolean(children && !hideTimer) && ' '}\n      {!hideTimer && <span className={clsx(timeClass, `${timeClass}--${type}`)}>{timeLeft}</span>}\n    </Button>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Sass\nimport './TransparentButton.scss';\ninterface TransparentButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * The content of the button\n   */\n  children: ReactNode;\n  /**\n   * Flag indicating if the button is on its active state\n   */\n  active?: boolean;\n  /**\n   * Custom active class\n   */\n  activeClass?: string;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Behavior when the mouse hovers the button (default: scale)\n   */\n  hoverType?: 'scale' | 'sepia';\n}\n\n/**\n * Transparent button that has all the functionality of a button but no visible styling\n */\nexport const TransparentButton = ({\n  children,\n  active = false,\n  activeClass = '',\n  className = '',\n  hoverType = 'scale',\n  ...rest\n}: TransparentButtonProps) => {\n  return (\n    <button\n      className={clsx(\n        'transparent-button',\n        `transparent-button--${hoverType}`,\n        active && (activeClass || 'transparent-button--active'),\n        className\n      )}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n};\n","// Ant Design Resources\nimport { Space, SpaceProps, Tag } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { TAG_DICT } from 'utils/constants';\n\nconst sortTags = (tags: string[]) => {\n  const sortedTags: string[] = [];\n\n  tags.forEach((tag) => {\n    if (TAG_DICT?.[tag]?.index !== undefined) {\n      sortedTags[TAG_DICT[tag].index] = tag;\n    } else if (sortedTags.length < 18) {\n      sortedTags[18] = tag;\n    } else {\n      sortedTags.push(tag);\n    }\n  });\n\n  return sortedTags.filter((v) => Boolean(v));\n};\n\ntype GameTagsProps = {\n  tags: string[];\n  gameCode: GameCode;\n} & SpaceProps;\n\nexport function GameTags({ tags, gameCode, ...rest }: GameTagsProps) {\n  const { language } = useLanguage();\n  const sortedTags = sortTags(tags);\n\n  return (\n    <Space wrap {...rest}>\n      {sortedTags.map((tag) => (\n        <Tag key={`${gameCode}-${tag}`} color={TAG_DICT[tag]?.color}>\n          {TAG_DICT[tag]?.label[language]}\n        </Tag>\n      ))}\n    </Space>\n  );\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { Collapse } from 'antd';\n// Components\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\n\ntype CollapsibleRuleProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * The title of the panel (default: Rules/Regras)\n   */\n  title?: ReactNode;\n};\nexport function CollapsibleRule({ children, title }: CollapsibleRuleProps): JSX.Element {\n  return (\n    <Instruction contained>\n      <Collapse ghost>\n        <Collapse.Panel header={<Translate pt=\"Regras\" en=\"Rules\" custom={title} />} key=\"1\">\n          {children}\n        </Collapse.Panel>\n      </Collapse>\n    </Instruction>\n  );\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { ReadOutlined } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\nimport { FixedMenuButton } from 'components/buttons';\n\ntype PopoverRuleProps = {\n  /**\n   * The rules themselves\n   */\n  content: ReactNode;\n  /**\n   * A custom label other than rules/regras\n   */\n  label?: ReactNode;\n  /**\n   * If label should be displayed\n   */\n  showLabel?: boolean;\n};\n\nexport function PopoverRule({ content, label, showLabel = false }: PopoverRuleProps): JSX.Element {\n  return (\n    <FixedMenuButton\n      type=\"popover\"\n      position={0}\n      icon={<ReadOutlined />}\n      content={content}\n      label={label || <Translate pt=\" Regras\" en=\" Rules\" />}\n      showLabel={showLabel}\n      buttonProps={{\n        type: 'primary',\n      }}\n    />\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Typography, Image, Carousel, Button, Space } from 'antd';\nimport { CarouselRef } from 'antd/es/carousel';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Constants\nimport { PUBLIC_URL } from 'utils/constants';\nimport { DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\nimport { createRef } from 'react';\nimport { Translate } from 'components/language';\nimport { useKeyPressEvent } from 'react-use';\n\ntype RulesCarouselProps = {\n  info: GameInfo;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Optional custom class name\n   */\n  ruleClassName?: string;\n  /**\n   * Optional custom class name\n   */\n  actionsClassName?: string;\n};\n\nexport function RulesCarousel({\n  info,\n  className = '',\n  ruleClassName = '',\n  actionsClassName,\n}: RulesCarouselProps): JSX.Element {\n  const { language } = useLanguage();\n  const ref = createRef<CarouselRef>();\n\n  useKeyPressEvent('ArrowLeft', () => {\n    ref.current?.prev();\n  });\n\n  useKeyPressEvent('ArrowRight', () => {\n    ref.current?.next();\n  });\n\n  return (\n    <div>\n      <Carousel className={clsx('rules-carousel', className)} autoplay autoplaySpeed={15000} ref={ref}>\n        {info.rules[language].map((rule, index) => (\n          <div className={clsx('rules-carousel__rule', className)} key={rule}>\n            <span className=\"rules-carousel__rule-number\">{index + 1}</span>\n\n            <Image\n              className=\"rules-carousel__image\"\n              src={\n                index === 0\n                  ? `${PUBLIC_URL.BANNERS}${info.gameName}-${language}.jpg`\n                  : `${PUBLIC_URL.RULES}game-rule-${info.gameName}-${index}.jpg`\n              }\n              fallback={`${PUBLIC_URL.RULES}game-rule-not-found.jpg`}\n              alt={rule}\n            />\n            <Typography.Paragraph className={clsx('rules-carousel__rule-text', ruleClassName)}>\n              {rule}\n            </Typography.Paragraph>\n          </div>\n        ))}\n      </Carousel>\n      <Space className={clsx('space-container', actionsClassName)}>\n        <Button type=\"default\" ghost onClick={() => ref.current?.prev()} size=\"small\">\n          <DoubleLeftOutlined /> <Translate pt=\"Regra Anterior\" en=\"Previous Rule\" />\n        </Button>\n        <Button type=\"default\" ghost onClick={() => ref.current?.next()} size=\"small\">\n          <Translate pt=\"Próxima Regra\" en=\"Next Rule\" /> <DoubleRightOutlined />\n        </Button>\n      </Space>\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n\ntype RulesListProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n};\n\nexport function RulesList({ children, className = '' }: RulesListProps): JSX.Element {\n  return <ul className={clsx('rules-list', className)}>{children}</ul>;\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, ButtonProps, Modal } from 'antd';\nimport { ReadOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Translate } from 'components/language';\nimport { RulesCarousel } from 'components/rules';\n\ntype RulesModalProps = {\n  gameInfo: GameInfo;\n  buttonProps?: ButtonProps;\n};\n\nexport function RulesModal({ gameInfo, buttonProps }: RulesModalProps): JSX.Element {\n  const { language, translate } = useLanguage();\n  const [isVisible, setVisibility] = useState(false);\n\n  const onCloseModal = () => {\n    setVisibility(false);\n  };\n\n  return (\n    <>\n      <Button type=\"default\" onClick={() => setVisibility(true)} icon={<ReadOutlined />} {...buttonProps}>\n        <Translate pt=\"Regras\" en=\"Rules\" />\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`${translate('Regras', 'Rules')}: ${gameInfo.title[language]}`}\n          open={isVisible}\n          onCancel={onCloseModal}\n          className=\"rules-modal\"\n          footer={[\n            <Button key=\"close\" onClick={onCloseModal}>\n              <Translate pt=\"Fechar\" en=\"Close\" />\n            </Button>,\n          ]}\n        >\n          <div className=\"rules-modal-content\">\n            <RulesCarousel info={gameInfo} />\n          </div>\n        </Modal>\n      )}\n    </>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Sass\nimport './Instruction.scss';\n\ntype InstructionsProps = {\n  /**\n   * The content of the instruction\n   */\n  children: ReactNode;\n  /**\n   * Adds a semi transparent background (white or black opposite to the white property)\n   */\n  contained?: boolean;\n  /**\n   * Make text color white\n   */\n  white?: boolean;\n  /**\n   * Makes instruction width 100%\n   */\n  fullWidth?: boolean;\n  /**\n   * Custom class name\n   */\n  className?: string;\n};\n\n/**\n * Typography container for instructions\n */\nexport const Instruction = ({ children, white, className, contained, fullWidth }: InstructionsProps) => {\n  const baseClass = 'instruction';\n\n  return (\n    <Typography.Text\n      className={clsx(\n        baseClass,\n        contained && `${baseClass}--contained`,\n        white && `${baseClass}--white`,\n        fullWidth && `${baseClass}--full-width`,\n        className\n      )}\n      data-testid=\"instruction\"\n    >\n      {children}\n    </Typography.Text>\n  );\n};\n","// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { pluralize } from 'utils/helpers';\n\ntype RoundsLeftInstructionProps = {\n  /**\n   * The state round object with current and total values\n   */\n  round: GameRound;\n};\n\n/**\n * Displays instructional sentence based on the number of rounds left for the game to end\n */\nexport function RoundsLeftInstruction({ round }: RoundsLeftInstructionProps) {\n  const left = (round?.total ?? 0) - (round?.current ?? 0);\n\n  if (left === 0 || round.forceLastRound) {\n    return (\n      <Instruction contained>\n        <Translate pt=\"Essa foi a última rodada\" en=\"No more rounds left\" />\n      </Instruction>\n    );\n  }\n\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            {pluralize(left, 'Falta', 'Faltam')} <strong>{left}</strong>{' '}\n            {pluralize(left, 'rodada', 'rodadas')} para o jogo terminar...\n          </>\n        }\n        en={\n          <>\n            <strong>{left}</strong> {pluralize(left, 'round', 'rounds')} left for the game to end...\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n","import { ReactNode } from 'react';\n// Sass\nimport './TextHighlight.scss';\n\ntype TextHighlightProps = {\n  /**\n   * The text to be highlighted\n   */\n  children: ReactNode;\n};\n\nexport function TextHighlight({ children }: TextHighlightProps) {\n  return <span className=\"text-highlight\">{children}</span>;\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Sass\nimport './Title.scss';\n\ntype TitleProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Makes text white\n   */\n  white?: boolean;\n  /**\n   * Icon prefixing the title\n   */\n  icon?: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * The heading level (default: 2)\n   */\n  level?: 1 | 2 | 3 | 4 | 5;\n  /**\n   * The size of the title (default: medium)\n   */\n  size?: 'xx-small' | 'x-small' | 'small' | 'medium' | 'large';\n};\n\nexport const Title = ({ children, white, icon, className, level = 2, size = 'medium' }: TitleProps) => {\n  return (\n    <Typography.Title\n      level={level}\n      className={clsx('title', `title--${size}`, white && 'title--white', className)}\n    >\n      {Boolean(icon) && icon}\n      {children}\n    </Typography.Title>\n  );\n};\n","import { TimerResult, TimerSettings, useTimer } from 'react-timer-hook';\nimport { inNSeconds } from 'utils/helpers';\n\ntype SelectedTimeSettings = Omit<TimerSettings, 'expiryTimestamp'>;\n\ninterface useCountdownSettings extends SelectedTimeSettings {\n  /**\n   * The duration of the countdown in seconds\n   */\n  duration: number;\n  /**\n   * Disable timer\n   */\n  disabled?: boolean;\n}\n\ninterface useCountdownResults extends TimerResult {\n  /**\n   * Time left in total seconds (minutes + seconds)\n   */\n  timeLeft: number;\n}\n\n/**\n * Timer countdown to perform actions\n * @param settings\n * @returns\n */\nexport function useCountdown({\n  duration,\n  onExpire,\n  disabled = false,\n  ...rest\n}: useCountdownSettings): useCountdownResults {\n  const timer = useTimer({\n    expiryTimestamp: inNSeconds(duration),\n    onExpire: disabled ? undefined : onExpire,\n    ...rest,\n  });\n\n  const timeLeft = timer.minutes * 60 + timer.seconds;\n\n  return {\n    ...timer,\n    timeLeft,\n  };\n}\n","type AvatarDict = {\n  [key: string]: {\n    id: string;\n    description: {\n      pt: string;\n      en: string;\n    };\n    color: string;\n  };\n};\n\n/**\n * List of avatar ids\n */\nexport const AVATARS: AvatarDict = {\n  0: {\n    id: '0',\n    description: { pt: 'o sabiá', en: 'the cardinal' },\n    color: '#b22222',\n  },\n  1: {\n    id: '1',\n    description: { pt: 'o porquinho-da-índia', en: 'the guinea pig' },\n    color: '#661613',\n  },\n  2: {\n    id: '2',\n    description: { pt: 'o esquilo', en: 'the squirrel' },\n    color: '#eb5b41',\n  },\n  3: {\n    id: '3',\n    description: { pt: 'a formiga', en: 'the ant' },\n    color: '#6b3626',\n  },\n  4: {\n    id: '4',\n    description: { pt: 'o cachorro', en: 'the dog' },\n    color: '#874f31',\n  },\n  5: {\n    id: '5',\n    description: { pt: 'o tucano', en: 'the toucan' },\n    color: '#f07f3a',\n  },\n  6: {\n    id: '6',\n    description: { pt: 'a raposa', en: 'the fox' },\n    color: '#d25d1e',\n  },\n  7: {\n    id: '7',\n    description: { pt: 'o macaco', en: 'the monkey' },\n    color: '#a67653',\n  },\n  8: {\n    id: '8',\n    description: { pt: 'o gato', en: 'the cat' },\n    color: '#DB8A34',\n  },\n  9: {\n    id: '9',\n    description: { pt: 'a lontra', en: 'the otter' },\n    color: '#D2A467',\n  },\n  10: {\n    id: '10',\n    description: { pt: 'o gambá', en: 'the skunk' },\n    color: '#544a39',\n  },\n  11: {\n    id: '11',\n    description: { pt: 'a abelha', en: 'the bee' },\n    color: '#dfb231',\n  },\n  12: {\n    id: '12',\n    description: { pt: 'o galo', en: 'the rooster' },\n    color: '#c49f19',\n  },\n  13: {\n    id: '13',\n    description: { pt: 'a rolinha', en: 'the pigeon' },\n    color: '#e3c642',\n  },\n  14: {\n    id: '14',\n    description: { pt: 'o timbu', en: 'the possum' },\n    color: '#757468',\n  },\n  15: {\n    id: '15',\n    description: { pt: 'o arminho', en: 'the stoat' },\n    color: '#BDB74C',\n  },\n  16: {\n    id: '16',\n    description: { pt: 'o dinossauro', en: 'the dinosaur' },\n    color: '#808536',\n  },\n  17: {\n    id: '17',\n    description: { pt: 'a minhoca', en: 'the worm' },\n    color: '#a7bf4e',\n  },\n  18: {\n    id: '18',\n    description: { pt: 'o cavalo marinho', en: 'the seahorse' },\n    color: '#81b029',\n  },\n  19: {\n    id: '19',\n    description: { pt: 'o sapo', en: 'the toad' },\n    color: '#556b2f',\n  },\n  20: {\n    id: '20',\n    description: { pt: 'a rã', en: 'the frog' },\n    color: '#35402c',\n  },\n  21: {\n    id: '21',\n    description: { pt: 'a salamandra', en: 'the lizard' },\n    color: '#7cc44f',\n  },\n  22: {\n    id: '22',\n    description: { pt: 'o rato', en: 'the rat' },\n    color: '#646964',\n  },\n  23: {\n    id: '23',\n    description: { pt: 'o pato', en: 'the duck' },\n    color: '#3a874b',\n  },\n  24: {\n    id: '24',\n    description: { pt: 'a planta carnívora', en: 'the venus flytrap' },\n    color: '#58cc80',\n  },\n  25: {\n    id: '25',\n    description: { pt: 'o quiuí', en: 'the kiwi' },\n    color: '#0e4a33',\n  },\n  26: {\n    id: '26',\n    description: { pt: 'a tartaruga', en: 'the turtle' },\n    color: '#008077',\n  },\n  27: {\n    id: '27',\n    description: { pt: 'a toupeira', en: 'the mole' },\n    color: '#2f4d4f',\n  },\n  28: {\n    id: '28',\n    description: { pt: 'o pinguim', en: 'the penguin' },\n    color: '#11788c',\n  },\n  29: {\n    id: '29',\n    description: { pt: 'o camundongo', en: 'the mouse' },\n    color: '#7fb5c7',\n  },\n  30: {\n    id: '30',\n    description: { pt: 'o corvo', en: 'the starling' },\n    color: '#4682b4',\n  },\n  31: {\n    id: '31',\n    description: { pt: 'o porco-espinho', en: 'the hedgehog' },\n    color: '#778899',\n  },\n  32: {\n    id: '32',\n    description: { pt: 'o peixe', en: 'the fish' },\n    color: '#4085d4',\n  },\n  33: {\n    id: '33',\n    description: { pt: 'a lula', en: 'the squid' },\n    color: '#495f8a',\n  },\n  34: {\n    id: '34',\n    description: { pt: 'o guaxinim', en: 'the racoon' },\n    color: '#1b284a',\n  },\n  35: {\n    id: '35',\n    description: { pt: 'a borboleta', en: 'the butterfly' },\n    color: '#3c58ac',\n  },\n  36: {\n    id: '36',\n    description: { pt: 'a arraia', en: 'the manta ray' },\n    color: '#707fcc',\n  },\n  37: {\n    id: '37',\n    description: { pt: 'a água-viva', en: 'the jellyfish' },\n    color: '#3d407a',\n  },\n  38: {\n    id: '38',\n    description: { pt: 'a coruja', en: 'the owl' },\n    color: '#857bdb',\n  },\n  39: {\n    id: '39',\n    description: { pt: 'a aranha', en: 'the spider' },\n    color: '#2e1d66',\n  },\n  40: {\n    id: '40',\n    description: { pt: 'o caramujo', en: 'the snail' },\n    color: '#9584b4',\n  },\n  41: {\n    id: '41',\n    description: { pt: 'o ornitorrinco', en: 'the platypus' },\n    color: '#663399',\n  },\n  42: {\n    id: '42',\n    description: { pt: 'o morcego', en: 'the bat' },\n    color: '#5a2b5e',\n  },\n  43: {\n    id: '43',\n    description: { pt: 'o axolote', en: 'the axolotl' },\n    color: '#da70d6',\n  },\n  44: {\n    id: '44',\n    description: { pt: 'o libélula', en: 'the dragonfly' },\n    color: '#e08dcc',\n  },\n  45: {\n    id: '45',\n    description: { pt: 'o porco', en: 'the pig' },\n    color: '#dd9fbd',\n  },\n  46: {\n    id: '46',\n    description: { pt: 'o beija-flor', en: 'the humming bird' },\n    color: '#ab225b',\n  },\n  47: {\n    id: '47',\n    description: { pt: 'o coelho', en: 'the rabbit' },\n    color: '#eb4773',\n  },\n  48: {\n    id: '48',\n    description: { pt: 'o caranguejo', en: 'the crab' },\n    color: '#d13640',\n  },\n  49: {\n    id: '49',\n    description: { pt: 'o escorpião', en: 'the scorpion' },\n    color: '#ff4346',\n  },\n  A: {\n    id: 'A',\n    description: { pt: 'o robô A', en: 'the bot A' },\n    color: '#826f67',\n  },\n  B: {\n    id: 'B',\n    description: { pt: 'o robô B', en: 'the bot B' },\n    color: '#6b8267',\n  },\n  C: {\n    id: 'C',\n    description: { pt: 'o robô C', en: 'the bot C' },\n    color: '#677182',\n  },\n  D: {\n    id: 'D',\n    description: { pt: 'o robô D', en: 'the bot D' },\n    color: '#6b6782',\n  },\n  E: {\n    id: 'E',\n    description: { pt: 'o robô E', en: 'the bot E' },\n    color: '#826773',\n  },\n  N: {\n    id: 'N',\n    description: { pt: 'desconhecido', en: 'unknown' },\n    color: '#cccccc',\n  },\n};\n\nexport const BOTS = {\n  A: {\n    id: 'A',\n    name: 'A-bot',\n    avatarId: 'A',\n  },\n  B: {\n    id: 'B',\n    name: 'B-bop',\n    avatarId: 'B',\n  },\n  C: {\n    id: 'C',\n    name: 'C-am',\n    avatarId: 'C',\n  },\n  D: {\n    id: 'D',\n    name: 'D-Doo',\n    avatarId: 'D',\n  },\n  E: {\n    id: 'E',\n    name: 'E-max',\n    avatarId: 'E',\n  },\n};\n\nexport const BOTS_LIST = Object.values(BOTS);\n\nexport const AVAILABLE_AVATAR_IDS: string[] = Object.keys(AVATARS).filter((key) => key.match(/^\\d+$/));\n","/**\n * List of urls residing in the public folder\n */\nexport const PUBLIC_URL = {\n  BANNERS: `${process.env.PUBLIC_URL}/images/banners/`,\n  CARDS: `${process.env.PUBLIC_URL}/images/cards/`,\n  CLOUDS: `${process.env.PUBLIC_URL}/images/clouds/`,\n  EXAMPLES: `${process.env.PUBLIC_URL}/images/examples/`,\n  IN_GAME: `${process.env.PUBLIC_URL}/images/in-game/`,\n  RULES: `${process.env.PUBLIC_URL}/images/rules/`,\n  ROOT: `${process.env.PUBLIC_URL}/images/`,\n  RESOURCES: `${process.env.PUBLIC_URL}/resources/`,\n};\n\n/**\n * List of tags translation and color\n */\nexport const TAG_DICT: Record<string, GameTag> = {\n  // About Dynamics\n  competitive: {\n    label: {\n      en: 'competitive',\n      pt: 'competitivo',\n    },\n    color: 'red',\n    index: 0,\n    group: 'dynamics',\n  },\n  cooperative: {\n    label: {\n      en: 'cooperative',\n      pt: 'cooperativo',\n    },\n    color: 'green',\n    index: 0,\n    group: 'dynamics',\n  },\n  // About Turns\n  'same-time': {\n    label: {\n      en: 'same time',\n      pt: 'todos juntos',\n    },\n    color: 'volcano',\n    index: 1,\n    group: 'turns',\n  },\n  'turn-based': {\n    label: {\n      en: 'turn based',\n      pt: 'um por vez',\n    },\n    color: 'volcano',\n    index: 1,\n    group: 'turns',\n  },\n  // About Skilled Mechanics\n  drawing: {\n    label: {\n      en: 'drawing',\n      pt: 'desenhar',\n    },\n    color: 'cyan',\n    index: 2,\n    group: 'skills',\n  },\n  writing: {\n    label: {\n      en: 'writing',\n      pt: 'escrever',\n    },\n    color: 'cyan',\n    index: 3,\n    group: 'skills',\n  },\n  // About Actions\n  guessing: {\n    label: {\n      en: 'guessing',\n      pt: 'adivinhar',\n    },\n    color: 'geekblue',\n    index: 4,\n    group: 'actions',\n  },\n  voting: {\n    label: {\n      en: 'voting',\n      pt: 'votação',\n    },\n    color: 'geekblue',\n    index: 5,\n    group: 'actions',\n  },\n  pairing: {\n    label: {\n      en: 'pairing',\n      pt: 'parear',\n    },\n    color: 'geekblue',\n    index: 6,\n    group: 'actions',\n  },\n  betting: {\n    label: {\n      en: 'betting',\n      pt: 'apostas',\n    },\n    color: 'geekblue',\n    index: 7,\n    group: 'actions',\n  },\n  // About Feeling inducing\n  'push-your-luck': {\n    label: {\n      en: 'push your luck',\n      pt: 'sorte',\n    },\n    color: 'lime',\n    index: 8,\n    group: 'emotions',\n  },\n  'brain-burner': {\n    label: {\n      en: 'brain burner',\n      pt: 'sofrimento',\n    },\n    color: 'lime',\n    index: 9,\n    group: 'emotions',\n  },\n  discussion: {\n    label: {\n      en: 'discussion',\n      pt: 'discussão',\n    },\n    color: 'lime',\n    index: 10,\n    group: 'emotions',\n  },\n  // About Features\n  timed: {\n    label: {\n      en: 'timed',\n      pt: 'cronometrado',\n    },\n    color: 'yellow',\n    index: 11,\n    group: 'features',\n  },\n  traitor: {\n    label: {\n      en: 'traitor',\n      pt: 'traidor',\n    },\n    color: 'volcano',\n    index: 12,\n    group: 'features',\n  },\n  images: {\n    label: {\n      en: 'images',\n      pt: 'imagens',\n    },\n    color: 'purple',\n    index: 13,\n    group: 'features',\n  },\n  achievements: {\n    label: {\n      en: 'achievements',\n      pt: 'medalhas',\n    },\n    color: 'gold',\n    index: 14,\n    group: 'features',\n  },\n  // Technical\n  bots: {\n    label: {\n      en: 'bots',\n      pt: 'bots',\n    },\n    color: '',\n    index: 15,\n    group: 'other',\n  },\n  'mobile-friendly': {\n    label: {\n      en: 'mobile-friendly',\n      pt: 'aparelho móvel',\n    },\n    color: '',\n    index: 16,\n    group: 'other',\n  },\n  'audience-mode': {\n    label: {\n      en: 'audience mode',\n      pt: 'modo audiência',\n    },\n    color: '',\n    index: 17,\n    group: 'other',\n  },\n};\n\nexport const TAG_RULES: Record<string, 'concurrent' | 'exclusive'> = {\n  dynamics: 'exclusive',\n  turns: 'exclusive',\n  skills: 'concurrent',\n  actions: 'concurrent',\n  emotions: 'concurrent',\n  features: 'concurrent',\n  other: 'concurrent',\n};\n\nexport const LETTERS: string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\nexport const SEPARATOR: string = ';;';\n\nexport const LATEST_GAME_IDS: string = 'latestGameIds';\n\nexport const NOOP = () => {};\n\nexport const ADMIN_ACTIONS = {\n  GO_TO_NEXT_PHASE: 'GO_TO_NEXT_PHASE',\n  FORCE_STATE_PROPERTY: 'FORCE_STATE_PROPERTY',\n  PLAY_AGAIN: 'PLAY_AGAIN',\n  FORCE_END_GAME: 'FORCE_END_GAME',\n  RESET_GAME: 'RESET_GAME',\n};\n\n/**\n * Enum of available games\n */\nexport const GAME_COLLECTION = {\n  ARTE_RUIM: 'arte-ruim',\n  BOMBA_RELOGIO: 'bomba-relogio',\n  CAMINHOS_MAGICOS: 'caminhos-magicos',\n  CONTADORES_HISTORIAS: 'contadores-historias',\n  CINEGRAFISTAS_AMADORES: 'cinegrafistas-amadores',\n  CRIMES_HEDIONDOS: 'crimes-hediondos',\n  CRUZA_PALAVRAS: 'cruza-palavras',\n  DESENHO_RAPIDAO: 'desenho-rapidao',\n  DETETIVES_IMAGINATIVOS: 'detetives-imaginativos',\n  DILEMAS_DOS_ESQUIADORES: 'dilemas-dos-esquiadores',\n  ESPIAO_ENTRE_NOS: 'espiao-entre-nos',\n  FILEIRA_DE_FATOS: 'fileira-de-fatos',\n  GALERIA_DE_SONHOS: 'galeria-de-sonhos',\n  INSTRUMENTOS_CODIFICADOS: 'instrumentos-codificados',\n  LINHAS_CRUZADAS: 'linhas-cruzadas',\n  MEGAMIX: 'megamix',\n  MENTE_COLETIVA: 'mente-coletiva',\n  NA_RUA_DO_MEDO: 'na-rua-do-medo',\n  NAUFRAGOS: 'naufragos',\n  ONDA_TELEPATICA: 'onda-telepatica',\n  PALHETA_DE_CORES: 'palheta-de-cores',\n  POLEMICA_DA_VEZ: 'polemica-da-vez',\n  PORTA_DOS_DESESPERADOS: 'porta-dos-desesperados',\n  QUEM_NAO_MATA: 'quem-nao-mata',\n  QUEM_SOU_EU: 'quem-sou-eu',\n  RETRATO_FALADO: 'retrato-falado',\n  SONHOS_PESADELOS: 'sonhos-pesadelos',\n  SUPER_CAMPEONATO: 'super-campeonato',\n  TESTEMUNHA_OCULAR: 'testemunha-ocular',\n  TREVO_DA_SORTE: 'trevo-da-sorte',\n  UE_SO_ISSO: 'ue-so-isso',\n  VAMOS_AO_CINEMA: 'vamos-ao-cinema',\n  VENDAVAL_DE_PALPITE: 'vendaval-de-palpite',\n};\n\nexport const THEME_COLORS = {\n  BLOOD: '#ab0d17', // dark red\n  DEFAULT: '#1890ff',\n  GRASS: '#007A5A',\n  FOREST: '#227168',\n  HOT_PINK: '#FF47DA',\n  LIME: '#1CC41C',\n  MIDNIGHT: '#4B2142', // dark teal\n  ORANGE: '#ea7702',\n  PLUMP_PURPLE: '#6052a8',\n  RUSSIAN_VIOLET: '#301A4B', // dark purple\n  SLATE: '#7d8388', // gray\n  WINE: '#4B2142',\n  WOOD: '#8C4103', // brown,\n  MOSS: '#9ea63b', //green ish\n  DARK_BLUE: '#0f4364f2',\n};\n\nexport const VIEWER_ID = '$viewer$';\n","import { camelCase, orderBy, startCase } from 'lodash';\nimport { AVATARS } from 'utils/avatars';\nimport { SEPARATOR } from './constants';\n\n/**\n * Creates a copy of given object\n * @param obj\n * @returns\n */\nexport const deepCopy = <T>(obj: T): T => JSON.parse(JSON.stringify(obj));\n\n/**\n * Extract the gameId from react history\n * @param pathname\n * @returns\n */\nexport const getGameIdFromPathname = (pathname: string): string => {\n  return pathname.substring(1);\n};\n\n/**\n * Extract the gameId from react history.location\n * @param location\n * @returns\n */\nexport const getGameIdFromLocation = (location?: PlainObject): string => {\n  const { pathname = '/' } = location ?? {};\n  return pathname.substring(1);\n};\n\n/**\n * Get random element/item from a list\n * @param list\n * @returns one random item\n */\nexport const getRandomItem = <T>(list: T[]): T => {\n  return list[Math.floor(Math.random() * list.length)];\n};\n\n/**\n * Gets the last item in a list\n * @param list\n * @returns\n */\nexport const getLastItem = <T>(list: T[]): T => {\n  return list[list.length - 1];\n};\n\n/**\n * Get date from now within the given seconds\n * @param seconds\n * @returns\n */\nexport const inNSeconds = (seconds: number): Date => {\n  const date = new Date();\n  date.setSeconds(date.getSeconds() + seconds);\n  return date;\n};\n\n/**\n * Same as inNSeconds but not just seconds\n * @param time\n * @returns\n */\nexport const inNTime = (time: number): Date => {\n  const date = new Date();\n  date.setTime(date.getTime() + time);\n  return date;\n};\n\n/**\n * Flag indicating if the environment is for development\n */\nexport const isDevEnv: boolean = process.env.NODE_ENV === 'development';\n\n/**\n * Verify if the game id exists and has the correct length\n * @param gameId\n * @returns\n */\nexport const isValidGameId = (gameId: GameId): boolean => {\n  return Boolean(gameId) && gameId.length === 4;\n};\n\n/**\n * Gets color name from index\n * @param index\n * @returns\n */\nexport const getColorFromIndex = (index: number): string => {\n  return (\n    [\n      'red',\n      'blue',\n      'green',\n      'yellow',\n      'pink',\n      'purple',\n      'teal',\n      'orange',\n      'coffee',\n      'navy',\n      'light-green',\n      'brown',\n      'hot-pink',\n      'violet',\n      'forest',\n      'cream',\n    ][index] ?? 'none'\n  );\n};\n\n/**\n * Get color name from letter\n * @param letter\n * @returns\n */\nexport const getColorFromLetter = (letter: string): string => {\n  return (\n    {\n      A: 'red',\n      B: 'blue',\n      C: 'green',\n      D: 'yellow',\n      E: 'pink',\n      F: 'purple',\n      G: 'teal',\n      H: 'orange',\n      I: 'coffee',\n      J: 'navy',\n      K: 'light-green',\n      L: 'brown',\n      M: 'hot-pink',\n      N: 'violet',\n      O: 'forest',\n      P: 'cream',\n\n      // repeats\n      Q: 'red',\n      R: 'blue',\n      S: 'green',\n      T: 'yellow',\n      U: 'pink',\n      V: 'purple',\n      W: 'teal',\n      X: 'none',\n      Y: 'orange',\n      Z: 'coffee',\n    }[letter] ?? 'none'\n  );\n};\n\n/**\n * Get given players from list of ids\n * @param  playerIds\n * @param players\n * @param justNames if true, only return names\n * @returns\n */\nexport const getPlayersFromIds = (\n  playerIds: PlayerId[],\n  players: Players,\n  justNames = false\n): (Player | PlayerName)[] => {\n  return playerIds.map((playerId) => {\n    const player = players[playerId];\n    if (justNames) return player.name;\n    return player;\n  });\n};\n\n/**\n * Determines if it should output the singular or plural argument depending on given quantity\n * @param quantity\n * @param singular\n * @param plural\n * @returns\n */\nexport const pluralize = (quantity: number, singular: string, plural: string): string => {\n  if (!plural) return singular;\n  return quantity === 1 ? singular : plural;\n};\n\n/**\n * Shuffle list copy\n * @param {any[]} list\n * @returns\n */\nexport const shuffle = (list: any[]): any[] => {\n  const result = [...list];\n  result.sort(() => Math.random() - 0.5);\n  return result;\n};\n\n/**\n * Builds entry id from array elements separated by the separator\n * @param arr\n * @returns\n */\nexport const getEntryId = (arr: string[]): string => arr.join(SEPARATOR);\n\n/**\n * Check if array has duplicates\n * @param arr\n * @returns\n */\nexport const hasDuplicates = (arr: any): boolean => {\n  return new Set(arr).size !== arr.length;\n};\n\n/**\n * Converts a string from kebab case to pascal base\n * @param str\n * @returns\n */\nexport const kebabToPascal = (str: string): string => startCase(camelCase(str)).replace(/ /g, '');\n\n/**\n * Gets avatar color by it\n * @param avatarId\n * @returns\n */\nexport const getAvatarColorById = (avatarId: string) => AVATARS?.[avatarId]?.color ?? 'grey';\n\n/**\n * Return the correct animation class from animate.css\n * @param type\n * @returns\n */\nexport const getAnimationClass = (\n  type: AnimationType,\n  delayInSeconds?: number,\n  speed?: 'slow' | 'slower' | 'fast' | 'faster',\n  infinite?: boolean,\n  repeat?: 1 | 2 | 3\n) => {\n  const result = ['animate__animated', `animate__${type}`];\n\n  if (delayInSeconds) {\n    result.push(`animate__delay-${delayInSeconds}s`);\n  }\n\n  if (speed) {\n    result.push(`animate__${speed}`);\n  }\n\n  if (infinite) {\n    result.push(`animate__infinite`);\n  } else if (repeat) {\n    result.push(`animate__repeat-${repeat}`);\n  }\n\n  return result.join(' ');\n};\n\n/**\n * Convert a yyyy/mm/dd date to milliseconds\n * @param yyyymmdd\n * @returns\n */\nexport const convertYYYYMMDDtoMilliseconds = (yyyymmdd: string): number => {\n  const dateArgs = yyyymmdd.match(/\\d{2,4}/g);\n\n  const year = Number(dateArgs?.[0] ?? '2022');\n  const month = Number(dateArgs?.[1] ?? '1');\n  const day = Number(dateArgs?.[2] ?? '1');\n\n  return new Date(year, month, day).getTime();\n};\n\nexport const truncateRecommended = (recommended: number[]): string => {\n  let result = '';\n  recommended.forEach((number, index) => {\n    if (!result || result[result.length - 1] === ',') {\n      result += number;\n      return;\n    }\n\n    if (number - 1 === recommended[index - 1] && result[result.length - 1] !== '-') {\n      result += '-';\n\n      if (number + 1 !== recommended[index + 1]) {\n        result += number;\n      }\n\n      return;\n    }\n\n    if (\n      result[result.length - 1] === '-' &&\n      number + 1 !== recommended[index + 1] &&\n      result[result.length - 1] !== `${number}`\n    ) {\n      result += number;\n      return;\n    }\n\n    if (number !== recommended[index - 1] + 1) {\n      result += `,${number}`;\n      return;\n    }\n\n    if (recommended.length - 1 === index) {\n      result += number;\n    }\n  });\n\n  return result;\n};\n\n/**\n * Sort players by name\n * @param players\n * @returns\n */\nexport const sortPlayers = (players: GamePlayers, by = 'name') =>\n  orderBy(Object.values(players), [by], ['asc']);\n\n/**\n * Calculate a game average duration\n * @param game\n * @param numPlayers\n * @returns\n */\nexport const calculateGameAverageDuration = (game: GameInfo, numPlayers = 0) => {\n  const base = game?.duration?.base ?? 0;\n  const perPlayer = game?.duration?.perPlayer ?? 0;\n\n  const minTime = base + perPlayer * game.playerCount.min;\n  const maxTime = base + perPlayer * game.playerCount.max;\n  const idealTime = base + perPlayer * (game.playerCount.best ?? 0);\n  const customTime = base + perPlayer * numPlayers;\n\n  return {\n    min: Math.ceil(minTime / 5) * 5,\n    max: Math.ceil(maxTime / 5) * 5,\n    ideal: Math.ceil(idealTime / 5) * 5,\n    customTime: Math.ceil(customTime / 5) * 5,\n  };\n};\n\n/**\n * Calculates a good duration to wait for something based on the number of players\n * @param numPlayers\n * @param durationPerPlayer\n * @param minDuration\n * @param maxDuration\n * @returns\n */\nexport const getMeanDuration = (\n  numPlayers: number,\n  durationPerPlayer: number,\n  maxDuration = 30,\n  minDuration = 5\n) => {\n  const duration = numPlayers * durationPerPlayer;\n\n  return Math.min(maxDuration, Math.max(minDuration, duration));\n};\n\n/**\n * Creates array of given length filled with indexes\n * @param length the length of the array\n * @param startAt the starting value\n * @returns\n */\nexport const makeArray = (length = 1, startAt = 0): number[] =>\n  new Array(length).fill(0).map((e, i) => e + i + startAt);\n"],"names":["FixedMenuButton","type","position","content","className","open","rest","clsx","placement","trigger","FixedMenuButtonContent","icon","label","showLabel","onClick","buttonProps","useState","isActive","setActive","hasLabel","Boolean","useEffectOnce","shape","size","onMouseOver","onMouseLeave","undefined","TimedButton","duration","children","onExpire","hideTimer","timeLeft","useCountdown","autoStart","disabled","timeClass","TransparentButton","active","activeClass","hoverType","GameTags","tags","gameCode","language","useLanguage","sortedTags","forEach","tag","TAG_DICT","index","length","push","filter","v","sortTags","wrap","map","color","CollapsibleRule","title","contained","ghost","header","pt","en","custom","PopoverRule","ReadOutlined","RulesCarousel","info","ruleClassName","actionsClassName","ref","createRef","useKeyPressEvent","current","prev","next","autoplay","autoplaySpeed","rules","rule","src","PUBLIC_URL","gameName","fallback","alt","DoubleLeftOutlined","DoubleRightOutlined","RulesList","RulesModal","gameInfo","translate","isVisible","setVisibility","onCloseModal","onCancel","footer","Instruction","white","fullWidth","baseClass","RoundsLeftInstruction","round","left","total","forceLastRound","pluralize","TextHighlight","Title","level","timer","useTimer","expiryTimestamp","inNSeconds","minutes","seconds","AVATARS","id","description","A","B","C","D","E","N","BOTS_LIST","Object","values","name","avatarId","AVAILABLE_AVATAR_IDS","keys","key","match","BANNERS","process","CARDS","CLOUDS","EXAMPLES","IN_GAME","RULES","ROOT","RESOURCES","competitive","group","cooperative","drawing","writing","guessing","voting","pairing","betting","discussion","timed","traitor","images","achievements","bots","TAG_RULES","dynamics","turns","skills","actions","emotions","features","other","LETTERS","SEPARATOR","LATEST_GAME_IDS","NOOP","ADMIN_ACTIONS","GO_TO_NEXT_PHASE","FORCE_STATE_PROPERTY","PLAY_AGAIN","FORCE_END_GAME","RESET_GAME","GAME_COLLECTION","ARTE_RUIM","BOMBA_RELOGIO","CAMINHOS_MAGICOS","CONTADORES_HISTORIAS","CINEGRAFISTAS_AMADORES","CRIMES_HEDIONDOS","CRUZA_PALAVRAS","DESENHO_RAPIDAO","DETETIVES_IMAGINATIVOS","DILEMAS_DOS_ESQUIADORES","ESPIAO_ENTRE_NOS","FILEIRA_DE_FATOS","GALERIA_DE_SONHOS","INSTRUMENTOS_CODIFICADOS","LINHAS_CRUZADAS","MEGAMIX","MENTE_COLETIVA","NA_RUA_DO_MEDO","NAUFRAGOS","ONDA_TELEPATICA","PALHETA_DE_CORES","POLEMICA_DA_VEZ","PORTA_DOS_DESESPERADOS","QUEM_NAO_MATA","QUEM_SOU_EU","RETRATO_FALADO","SONHOS_PESADELOS","SUPER_CAMPEONATO","TESTEMUNHA_OCULAR","TREVO_DA_SORTE","UE_SO_ISSO","VAMOS_AO_CINEMA","VENDAVAL_DE_PALPITE","THEME_COLORS","BLOOD","DEFAULT","GRASS","FOREST","HOT_PINK","LIME","MIDNIGHT","ORANGE","PLUMP_PURPLE","RUSSIAN_VIOLET","SLATE","WINE","WOOD","MOSS","DARK_BLUE","VIEWER_ID","deepCopy","obj","JSON","parse","stringify","getGameIdFromPathname","pathname","substring","getRandomItem","list","Math","floor","random","getLastItem","date","Date","setSeconds","getSeconds","inNTime","time","setTime","getTime","isDevEnv","isValidGameId","gameId","getColorFromIndex","getColorFromLetter","letter","F","G","H","I","J","K","L","M","O","P","Q","R","S","T","U","V","W","X","Y","Z","getPlayersFromIds","playerIds","players","justNames","playerId","player","quantity","singular","plural","shuffle","result","sort","getEntryId","arr","join","getAvatarColorById","getAnimationClass","delayInSeconds","speed","infinite","repeat","truncateRecommended","recommended","number","sortPlayers","by","orderBy","calculateGameAverageDuration","game","numPlayers","base","perPlayer","minTime","playerCount","min","maxTime","max","idealTime","best","customTime","ceil","ideal","getMeanDuration","durationPerPlayer","maxDuration","minDuration","makeArray","startAt","Array","fill","e","i"],"sourceRoot":""}