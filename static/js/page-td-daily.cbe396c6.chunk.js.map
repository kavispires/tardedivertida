{"version":3,"file":"static/js/page-td-daily.cbe396c6.chunk.js","mappings":"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","sources":["components/auth/SignIn.tsx","components/canvas/CanvasResizer.tsx","components/canvas/CanvasSVG.tsx","components/canvas/DrawingCanvas.tsx","components/cards/ItemCard.tsx","components/cards/SignCard.tsx","components/cards/WarehouseGoodCard.tsx","components/cards/Card.tsx","components/metrics/MetricHighlight.tsx","components/metrics/TimeHighlight.tsx","components/sprites/Sprite.tsx","components/text/Instruction.tsx","components/text/RoundsLeftInstruction.tsx","components/text/TextHighlight.tsx","components/text/Title.tsx","components/text/RuleInstruction.tsx","components/timers/TimerClock.tsx","components/timers/TimerBar.tsx","components/timers/TimedTimerBar.tsx","components/timers/TimedTimerClock.tsx","components/timers/WaitingTime.tsx","hooks/useTDBaseUrl.ts","icons/AnimatedClockIcon.tsx","icons/ApplauseIcon.tsx","icons/ClockIcon.tsx","icons/GoogleIcon.tsx","icons/SkullIcon.tsx","icons/SpeechBubbleAcceptedIcon.tsx","pages/Daily/hooks/useDailyChallenge.tsx","pages/Daily/games/AquiO/utils/settings.ts","pages/Daily/games/ArteRuim/utils/settings.ts","pages/Daily/games/Picaco/utils/settings.ts","pages/Daily/games/ControleDeEstoque/utils/settings.ts","pages/Daily/games/Filmaco/utils/settings.ts","pages/Daily/games/Palavreado/utils/settings.ts","pages/Daily/games/TeoriaDeConjuntos/utils/settings.ts","pages/Daily/components/DevResetLocalStorageButton.tsx","pages/Daily/components/Header.tsx","pages/Daily/components/DailyChrome.tsx","pages/Daily/components/DailyError.tsx","pages/Daily/components/DailyLoading.tsx","pages/Daily/games/AquiO/data/useRandomAquiOChallenge.ts","pages/Daily/hooks/useDailyGameState.ts","pages/Daily/hooks/useDailyLocalToday.ts","pages/Daily/hooks/useShowResultModal.ts","pages/Daily/games/AquiO/utils/helpers.ts","pages/Daily/components/Menu.tsx","pages/Daily/games/AquiO/components/Disc.tsx","pages/Daily/games/AquiO/components/PreloadItems.tsx","pages/Daily/components/NextGameSuggestion.tsx","pages/Daily/components/CopyToClipboardResult.tsx","pages/Daily/games/AquiO/components/ResultsModalContent.tsx","pages/Daily/games/AquiO/components/Rules.tsx","pages/Daily/games/AquiO/components/DailyAquiO.tsx","pages/Daily/games/AquiO/utils/useAquiOEngine.ts","pages/Daily/games/AquiO/DailyAquiOGame.tsx","pages/Daily/components/Keyboard.tsx","pages/Daily/games/ArteRuim/utils/helpers.ts","pages/Daily/games/ArteRuim/components/DrawingCarousel.tsx","pages/Daily/games/ArteRuim/components/Prompt.tsx","pages/Daily/games/ArteRuim/components/ResultsModalContent.tsx","pages/Daily/games/ArteRuim/components/Rules.tsx","pages/Daily/games/ArteRuim/components/DailyArteRuim.tsx","pages/Daily/games/ArteRuim/utils/useArteRuimEngine.ts","pages/Daily/games/ArteRuim/DailyArteRuimGame.tsx","pages/Daily/components/Region.tsx","pages/Daily/games/ControleDeEstoque/utils/helpers.ts","pages/Daily/games/ControleDeEstoque/utils/useControleDeEstoqueEngine.ts","pages/Daily/games/ControleDeEstoque/components/FulfillmentBoard.tsx","pages/Daily/games/ControleDeEstoque/components/Orders.tsx","pages/Daily/games/ControleDeEstoque/components/FulfillingPhase.tsx","pages/Daily/games/ControleDeEstoque/components/PreloadItems.tsx","pages/Daily/games/ControleDeEstoque/components/ResultsModalContent.tsx","pages/Daily/components/BetaBanner.tsx","pages/Daily/games/ControleDeEstoque/components/Rules.tsx","pages/Daily/games/ControleDeEstoque/components/StockingBoard.tsx","pages/Daily/games/ControleDeEstoque/components/StockingPhase.tsx","pages/Daily/games/ControleDeEstoque/components/DailyControleDeEstoque.tsx","pages/Daily/games/ControleDeEstoque/DailyControleDeEstoqueGame.tsx","pages/Daily/games/Debug.tsx","pages/Daily/games/Filmaco/utils/helpers.ts","pages/Daily/games/Filmaco/components/Prompt.tsx","pages/Daily/games/Filmaco/components/ResultsModalContent.tsx","pages/Daily/games/Filmaco/components/Rules.tsx","pages/Daily/games/Filmaco/components/DailyFilmaco.tsx","pages/Daily/games/Filmaco/utils/useFilmacoEngine.ts","pages/Daily/games/Filmaco/DailyFilmacoGame.tsx","pages/Daily/components/PlayedWrapper.tsx","pages/Daily/games/ComunicacaoAlienigena/utils/settings.ts","pages/Daily/games/Hub.tsx","pages/Daily/games/Palavreado/utils/helpers.ts","pages/Daily/games/Palavreado/components/Board.tsx","pages/Daily/games/Palavreado/components/ResultsModalContent.tsx","pages/Daily/games/Palavreado/components/Rules.tsx","pages/Daily/games/Palavreado/components/DailyPalavreado.tsx","pages/Daily/games/Palavreado/utils/usePalavreadoEngine.ts","pages/Daily/games/Palavreado/DailyPalavreadoGame.tsx","pages/Daily/games/Picaco/utils/helpers.ts","pages/Daily/games/Picaco/utils/usePicacoEngine.ts","pages/Daily/hooks/useDailySaveDrawings.ts","pages/Daily/games/Picaco/components/Canvas.tsx","pages/Daily/games/Picaco/components/Rules.tsx","pages/Daily/games/Picaco/components/DailyPicaco.tsx","pages/Daily/games/Picaco/DailyPicacoGame.tsx","pages/Daily/games/TeoriaDeConjuntos/utils/helpers.ts","pages/Daily/games/TeoriaDeConjuntos/components/Diagram.tsx","pages/Daily/games/TeoriaDeConjuntos/components/Thing.tsx","pages/Daily/games/TeoriaDeConjuntos/components/InDiagramThings.tsx","pages/Daily/games/TeoriaDeConjuntos/components/PlacementModal.tsx","pages/Daily/games/TeoriaDeConjuntos/components/ResultsModalContent.tsx","pages/Daily/games/TeoriaDeConjuntos/components/Rules.tsx","pages/Daily/games/TeoriaDeConjuntos/components/RulesHints.tsx","pages/Daily/games/TeoriaDeConjuntos/components/DailyTeoriaDeConjuntos.tsx","pages/Daily/games/TeoriaDeConjuntos/utils/useTeoriaDeConjuntosEngine.ts","pages/Daily/games/TeoriaDeConjuntos/DailyTeoriaDeConjuntosGame.tsx","pages/Daily/games/ComunicacaoAlienigena/utils/useComunicacaoAlienigenaDemo.ts","pages/Daily/games/ComunicacaoAlienigena/utils/helpers.ts","pages/Daily/games/ComunicacaoAlienigena/components/ResultsModalContent.tsx","pages/Daily/games/ComunicacaoAlienigena/components/Rules.tsx","pages/Daily/games/ComunicacaoAlienigena/components/DailyComunicacaoAlienigena.tsx","pages/Daily/games/ComunicacaoAlienigena/utils/useComunicacaoAlienigenaEngine.ts","pages/Daily/games/ComunicacaoAlienigena/DailyComunicacaoAlienigenaGame.tsx","pages/Daily/Daily.tsx","pages/Me/components/LoginModal.tsx"],"sourcesContent":["import { useMutation } from '@tanstack/react-query';\nimport { UserCredential } from 'firebase/auth';\nimport { useState } from 'react';\n// Ant Design Resources\nimport { Button, Form, Input, Alert, Image, App, Switch, Space, ButtonProps } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Services\nimport { resetPassword, signIn, signInWithGoogle } from 'services/firebase';\n// Icons\nimport { GoogleIcon } from 'icons/GoogleIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { Title } from 'components/text';\n// Images\nimport logo from 'assets/images/tarde-divertida-logo.svg';\n// API\n// Image\n\ntype SignInProps = {\n  onSuccess: GenericFunction;\n};\n\nexport function SignIn({ onSuccess }: SignInProps) {\n  const [view, setView] = useState('google');\n\n  return (\n    <div className=\"sign-in\">\n      <div className=\"sign-in__logo\">\n        <Image src={logo} preview={false} />\n      </div>\n\n      <Space className=\"space-container\">\n        <Switch\n          checkedChildren={<Translate pt=\"E-mail e senha\" en=\"Email and Password\" />}\n          unCheckedChildren=\"Google\"\n          onChange={(checked) => setView(checked ? 'email' : 'google')}\n        />\n      </Space>\n\n      {view === 'google' ? (\n        <SignInWithGoogle onSuccess={onSuccess} />\n      ) : (\n        <SignInWithEmail onSuccess={onSuccess} />\n      )}\n    </div>\n  );\n}\n\nexport function SignInWithGoogle({ onSuccess, ...buttonProps }: SignInProps & ButtonProps) {\n  const { isPending, mutate, isError } = useMutation<UserCredential, Error, void, unknown>({\n    mutationFn: async () => await signInWithGoogle(),\n    onSuccess,\n  });\n\n  const onFinish = () => {\n    mutate();\n  };\n\n  return (\n    <Space\n      className=\"space-container\"\n      direction=\"vertical\"\n      align=\"center\"\n      classNames={{ item: 'full-width' }}\n    >\n      <>\n        {isError && (\n          <Alert\n            description={\n              <Translate pt=\"Algo deu errado, tente novamente\" en=\"Something went wrong. Please try again\" />\n            }\n            type=\"error\"\n            showIcon\n            className=\"sign-in__error-alert\"\n          />\n        )}\n        <Button\n          type=\"primary\"\n          size=\"large\"\n          onClick={onFinish}\n          loading={isPending}\n          block\n          icon={<IconAvatar icon={<GoogleIcon />} size=\"small\" />}\n          {...buttonProps}\n        >\n          <Translate pt=\"Entrar com Google\" en=\"Sign in with Google\" />\n        </Button>\n      </>\n    </Space>\n  );\n}\n\nfunction SignInWithEmail({ onSuccess }: SignInProps) {\n  const [form] = Form.useForm();\n  const { translate } = useLanguage();\n  const [showForgotPassword, setShowForgotPassword] = useState(false);\n\n  const { isPending, mutate, isError } = useMutation<UserCredential, Error, void, unknown>({\n    mutationFn: async () => await signIn(form.getFieldValue('username'), form.getFieldValue('password')),\n    onSuccess,\n  });\n\n  const onFinish = () => {\n    mutate();\n  };\n\n  return (\n    <>\n      <Form\n        name=\"login\"\n        form={form}\n        labelCol={{ span: 8 }}\n        wrapperCol={{ span: 16 }}\n        style={{ maxWidth: 600 }}\n        initialValues={{ remember: true }}\n        onFinish={onFinish}\n        autoComplete=\"off\"\n      >\n        <Form.Item\n          label={<Translate pt=\"E-mail\" en=\"E-mail\" />}\n          name=\"username\"\n          rules={[\n            { required: true, message: translate('e-mail é um campo obrigatório', 'e-mail is required') },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label={<Translate pt=\"Senha\" en=\"Password\" />}\n          name=\"password\"\n          rules={[\n            { required: true, message: translate('e-mail é um campo obrigatório', 'e-mail is required') },\n          ]}\n          help={translate('Mínimo 6 caracteres', 'Minimum of 6 characters')}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        {isError && (\n          <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n            <Alert\n              description={\n                <Translate\n                  pt=\"Algo deu errado, tente novamente\"\n                  en=\"Something went wrong. Please try again\"\n                />\n              }\n              type=\"error\"\n              showIcon\n              className=\"sign-in__error-alert\"\n            />\n          </Form.Item>\n        )}\n\n        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n          <Button type=\"primary\" htmlType=\"submit\" loading={isPending}>\n            <Translate pt=\"Entrar\" en=\"Submit\" />\n          </Button>\n\n          <Button type=\"link\" onClick={() => setShowForgotPassword((v) => !v)}>\n            <Translate pt=\"Esqueci minha senha\" en=\"Forgot my password\" />\n          </Button>\n        </Form.Item>\n      </Form>\n      {showForgotPassword && (\n        <Alert\n          type=\"info\"\n          message={\n            <ResetPasswordForm\n              email={form.getFieldValue('username')}\n              onSuccess={() => setShowForgotPassword(false)}\n            />\n          }\n        />\n      )}\n    </>\n  );\n}\n\ntype ResetPasswordFormProps = {\n  email?: string;\n  onSuccess: GenericFunction;\n};\n\nfunction ResetPasswordForm({ email, onSuccess }: ResetPasswordFormProps) {\n  const { message } = App.useApp();\n  const [form] = Form.useForm();\n  const { translate } = useLanguage();\n\n  const { isPending, mutate, isError } = useMutation({\n    mutationFn: async () => await resetPassword(form.getFieldValue('username')),\n    onSuccess: () => {\n      onSuccess();\n      message.success(\n        translate(\n          'Verifique seu e-mail enviado para redefinir a sua senha',\n          'Verify your email to reset your password'\n        )\n      );\n    },\n  });\n\n  const onFinish = () => {\n    mutate();\n  };\n\n  return (\n    <Form\n      name=\"forgot-password\"\n      form={form}\n      labelCol={{ span: 8 }}\n      wrapperCol={{ span: 16 }}\n      style={{ maxWidth: 600 }}\n      initialValues={{ username: email, remember: true }}\n      onFinish={onFinish}\n      autoComplete=\"off\"\n    >\n      <Form.Item>\n        <Title level={4} size=\"xx-small\">\n          <Translate pt=\"Redefinir a senha\" en=\"Password Reset\" />\n        </Title>\n      </Form.Item>\n      <Form.Item\n        label={<Translate pt=\"E-mail\" en=\"E-mail\" />}\n        name=\"username\"\n        rules={[\n          { required: true, message: translate('e-mail é um campo obrigatório', 'e-mail is required') },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      {isError && (\n        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n          <Alert\n            description={\n              <Translate\n                pt=\"Algo deu errado, provavelmente este e-mail não existe no banco de dados da Tarde Divertida\"\n                en=\"Something went wrong. Please try again\"\n              />\n            }\n            type=\"error\"\n            showIcon\n            className=\"sign-in__error-alert\"\n          />\n        </Form.Item>\n      )}\n\n      <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n        <Button type=\"primary\" htmlType=\"submit\" loading={isPending}>\n          <Translate pt=\"Enviar\" en=\"Submit\" />\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n","// Ant Design Resources\nimport { DragOutlined } from '@ant-design/icons';\nimport { Slider } from 'antd';\n// Hooks\nimport { useGlobalLocalStorage } from 'hooks/useGlobalLocalStorage';\n// Components\nimport { FixedMenuButton } from 'components/buttons';\nimport { Translate } from 'components/language';\n\n/**\n * Fixed Menu Button for resizing canvas\n */\nexport const CanvasResizer = () => {\n  const [canvasSize, setCanvasSize] = useGlobalLocalStorage('canvasSize');\n\n  return (\n    <FixedMenuButton\n      type=\"popover\"\n      position={1}\n      icon={<DragOutlined />}\n      label={labelText}\n      content={\n        <div className=\"canvas-resizer\">\n          <div className=\"canvas-resizer__label\">{labelText}</div>\n          <Slider\n            className=\"canvas-resizer__slider\"\n            value={canvasSize ?? 100}\n            min={150}\n            max={500}\n            step={50}\n            onChange={setCanvasSize}\n          />\n        </div>\n      }\n    />\n  );\n};\n\nconst labelText = <Translate pt=\"Tamanho das Artes\" en=\"Art Size\" />;\n","/**\n * Builds paths from canvas lines\n * @param lines\n * @returns\n */\nconst getPathFromKonvaLines = (lines: CanvasLine[]) => {\n  const result = lines.map((lineArr) => {\n    let path = '';\n    for (let x = 0, y = 1; y < lineArr.length; x += 2, y += 2) {\n      if (lineArr[x + 2] && lineArr[y + 2]) {\n        path += `M${lineArr[x]},${lineArr[y]} L${lineArr[x + 2]},${lineArr[y + 2]}`;\n      }\n    }\n\n    return path;\n  });\n\n  return result;\n};\n\ntype CanvasSVGProps = {\n  /**\n   * The stringified svg path\n   */\n  drawing: string;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * The width of the canvas (default: 500)\n   */\n  width?: number;\n  /**\n   * The height of the canvas (default: 500)\n   */\n  height?: number;\n  /**\n   * Size of the stroke. Default: medium\n   */\n  strokeWidth?: 'small' | 'medium' | 'large';\n  /**\n   * Custom view box size (default: '0 0 500')\n   */\n  viewBox?: string;\n};\n\nexport const CanvasSVG = ({\n  drawing = '',\n  className = '',\n  width = 250,\n  height,\n  strokeWidth = 'medium',\n  viewBox = '0 0 500 500',\n}: CanvasSVGProps) => {\n  const konvaLines = JSON.parse(drawing);\n  const paths = getPathFromKonvaLines(konvaLines);\n\n  const strokeWidthBySize =\n    {\n      small: 3,\n      medium: 5,\n      large: 7,\n    }?.[strokeWidth] ?? 5;\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox={viewBox}\n      overflow=\"hidden\"\n      className={className}\n      style={{ width: `${width}px`, height: `${height || width}px` }}\n    >\n      <defs />\n      {paths.map((path, index) => (\n        <path\n          key={`${drawing}-${index}`}\n          d={path}\n          fill=\"none\"\n          stroke=\"#000\"\n          strokeWidth={strokeWidthBySize}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit=\"10\"\n        />\n      ))}\n    </svg>\n  );\n};\n","import clsx from 'clsx';\nimport { CSSProperties, ReactNode, useRef, useState } from 'react';\nimport { Stage, Layer, Line } from 'react-konva';\n// Ant Design Resources\nimport { DeleteOutlined, UndoOutlined } from '@ant-design/icons';\nimport { Button, Flex, Space } from 'antd';\n// Components\nimport { Translate } from 'components/language';\n\ntype DrawingCanvasProps = {\n  /**\n   * Lines drawn in the canvas\n   */\n  lines: CanvasLine[];\n  /**\n   * Function where any new version of the drawing is sent to\n   */\n  setLines: CanvasSetLine;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Show controls to undo, redo, or erase drawing. Default: false\n   */\n  showControls?: boolean;\n  /**\n   * Size of the stroke. Default: medium\n   */\n  strokeWidth?: 'small' | 'medium' | 'large';\n  /**\n   * The width of the canvas (default: 500)\n   */\n  width?: number;\n  /**\n   * The height of the canvas (default: 500)\n   */\n  height?: number;\n  /**\n   *\n   */\n  willReadFrequently?: boolean;\n  /**\n   *\n   */\n  style?: CSSProperties;\n  /**\n   * A mask to be used under the canvas\n   * Requires changing canvas to be transparent and setting the mask to have an absolute position\n   */\n  mask?: ReactNode;\n};\n\n/**\n * Canvas drawing board using react-konva\n * It requires an array of lines and an setState function to save the lines\n */\nexport const DrawingCanvas = ({\n  lines,\n  setLines,\n  className = '',\n  showControls = false,\n  strokeWidth = 'medium',\n  width = 500,\n  height,\n  willReadFrequently = false,\n  style = {},\n  mask,\n}: DrawingCanvasProps) => {\n  const [drawingHistory, setDrawingHistory] = useState<CanvasLine[]>([]);\n  const isDrawing = useRef(false);\n\n  /**\n   * Toggles off the isDrawing flag\n   */\n  const startDrawing = () => {\n    isDrawing.current = true;\n  };\n\n  /**\n   * Toggles off the isDrawing flag and resets history\n   */\n  const stopDrawing = () => {\n    isDrawing.current = false;\n    setDrawingHistory([]);\n  };\n\n  const startLine = (e: any) => {\n    startDrawing();\n    const pos = e.target.getStage().getPointerPosition();\n    setLines([...lines, [Math.round(pos.x), Math.round(pos.y)]]);\n  };\n\n  const finishLine = (e: any) => {\n    // Add point if it was a point\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    const x = Math.round(point.x);\n    const y = Math.round(point.y);\n\n    let lastLineEntry = lines[lines.length - 1];\n    lastLineEntry = lastLineEntry.concat([x + 0.1, y + 0.1]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLineEntry);\n    setLines(lines.concat());\n  };\n\n  /**\n   * Start recording drawing\n   * @param e - konva mouse event\n   */\n  const handleMouseDown = (e: any) => {\n    startLine(e);\n  };\n\n  /**\n   * Tracks mouse moving during the drawing\n   * @param e - konva mouse event\n   */\n  const handleMouseMove = (e: any) => {\n    // no drawing - skipping\n    if (!isDrawing.current) {\n      return;\n    }\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    let lastLine = lines[lines.length - 1];\n    // add end point\n    lastLine = lastLine.concat([Math.round(point.x), Math.round(point.y)]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLine);\n    setLines(lines.concat());\n  };\n\n  const handleMouseUp = (e: any) => {\n    if (isDrawing.current) {\n      stopDrawing();\n\n      finishLine(e);\n    }\n  };\n\n  /**\n   * Handles case when a current drawing is stopped off stage\n   * @param e - mouse event\n   */\n  const handleOffsetMouseUp = () => {\n    stopDrawing();\n  };\n\n  /**\n   * Handles case when a current drawing is started off stage\n   * @param e - mouse event\n   */\n  const handleOffsetMouseDown = () => {\n    startDrawing();\n  };\n\n  /**\n   * Handles when mouse leaves the stage\n   * @param e - konva mouse event\n   */\n  const handleMouseLeave = (e: any) => {\n    if (isDrawing.current) {\n      finishLine(e);\n\n      window.document.addEventListener('mouseup', handleOffsetMouseUp);\n      window.document.addEventListener('touchEnd', handleOffsetMouseUp);\n      window.document.addEventListener('mousedown', handleOffsetMouseDown);\n      window.document.addEventListener('touchStart', handleOffsetMouseDown);\n    }\n  };\n\n  /**\n   * Handles when mouse reenters the state\n   * @param e\n   */\n  const handleMouseEnter = (e: any) => {\n    if (isDrawing.current) {\n      startLine(e);\n    }\n    window.document.removeEventListener('mouseup', handleOffsetMouseUp);\n    window.document.removeEventListener('touchEnd', handleOffsetMouseUp);\n    window.document.removeEventListener('mousedown', handleOffsetMouseDown);\n    window.document.removeEventListener('touchStart', handleOffsetMouseDown);\n  };\n\n  const onClear = () => setLines([]);\n\n  const onUndo = () => {\n    const linesCopy = [...lines];\n    const drawingHistoryCopy = [...drawingHistory];\n    const lastLine: CanvasLine | undefined = linesCopy.pop();\n    if (lastLine) {\n      drawingHistoryCopy.push(lastLine);\n      setLines(linesCopy);\n      setDrawingHistory(drawingHistoryCopy);\n    }\n  };\n\n  const onRedo = () => {\n    const linesCopy = [...lines];\n    const drawingHistoryCopy = [...drawingHistory];\n    const lastUndoLine = drawingHistoryCopy.pop();\n    if (lastUndoLine) {\n      linesCopy.push(lastUndoLine);\n      setLines(linesCopy);\n      setDrawingHistory(drawingHistoryCopy);\n    }\n  };\n\n  const strokeWidthBySize =\n    {\n      small: 3,\n      medium: 5,\n      large: 7,\n    }?.[strokeWidth] ?? 5;\n\n  return (\n    <Flex vertical align=\"center\" className=\"relative\">\n      {mask}\n      <Stage\n        width={width}\n        height={height || width}\n        onMouseDown={handleMouseDown}\n        onMousemove={handleMouseMove}\n        onMouseup={handleMouseUp}\n        onTouchStart={handleMouseDown}\n        onTouchMove={handleMouseMove}\n        onTouchEnd={handleMouseUp}\n        onMouseLeave={handleMouseLeave}\n        onMouseEnter={handleMouseEnter}\n        className={clsx('drawing-canvas', className)}\n        style={{ width: `${width}px`, height: `${height || width}px`, ...style }}\n        willReadFrequently={willReadFrequently}\n        id=\"drawing-canvas\"\n      >\n        <Layer>\n          {lines.map((line, i) => (\n            <Line\n              key={i}\n              points={line}\n              stroke=\"#222222\"\n              strokeWidth={strokeWidthBySize}\n              tension={0.5}\n              lineCap=\"round\"\n              globalCompositeOperation=\"source-over\"\n            />\n          ))}\n        </Layer>\n      </Stage>\n      {showControls && (\n        <Space>\n          <Button onClick={onUndo} disabled={lines.length === 0}>\n            <UndoOutlined />\n            <Translate pt=\"Desfazer\" en=\"Undo\" />\n          </Button>\n          <Button onClick={onRedo} disabled={drawingHistory.length === 0}>\n            <UndoOutlined />\n            <Translate pt=\"Refazer\" en=\"Redo\" />\n          </Button>\n          <Button onClick={onClear} disabled={lines.length === 0}>\n            <DeleteOutlined />\n            <Translate pt=\"Apagar\" en=\"Clear\" />\n          </Button>\n        </Space>\n      )}\n    </Flex>\n  );\n};\n","import clsx from 'clsx';\n// Components\nimport { DualTranslate } from 'components/language';\nimport { Sprite } from 'components/sprites';\n// Sass\nimport './ItemCard.scss';\n\nexport type ItemCardProps = {\n  /**\n   * The id of the item\n   */\n  id: string;\n  /**\n   * The width of the item\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n  /**\n   * Replacement title, usually the name of the item\n   */\n  title?: string;\n  /**\n   * Optional text to display\n   */\n  text?: DualLanguageValue;\n  /**\n   * Optional padding\n   */\n  padding?: number;\n};\n\nconst BASE = 64;\n\n/**\n * Retrieves the source and item ID based on a given string.\n *\n * @param str - The input string.\n * @returns An array containing the source and item ID.\n */\nexport const getSource = (str: string) => {\n  const match = str.match(/\\d+/);\n  const numId = match ? parseInt(match[0], 10) : 0;\n  const itemId = `item-${numId}`;\n  const sourceId = Math.ceil(numId / BASE) * BASE;\n  const source = `items-${sourceId}`;\n  return [source, itemId];\n};\n\n/**\n * An item card component.\n */\nexport function ItemCard({ id, width = 75, className, title, text, padding }: ItemCardProps) {\n  const [source, itemId] = getSource(id);\n\n  const height = text ? 'auto' : `${width}px`;\n  const divPadding = padding === 0 ? { padding: 0 } : {};\n\n  return (\n    <div className={clsx('item-card', className)} style={{ width: `${width}px`, height, ...divPadding }}>\n      <Sprite source={source} id={itemId} width={width} title={title} padding={padding} />\n      {Boolean(text) && (\n        <span className=\"item-card__text\">\n          <DualTranslate>{text!}</DualTranslate>\n        </span>\n      )}\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Components\nimport { Sprite } from 'components/sprites';\n// Sass\nimport './SignCard.scss';\n\ntype SignCardProps = {\n  /**\n   * The id of the sign (do not prefix with sign)\n   */\n  id: string | number;\n  /**\n   * The width of the sign\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\n/**\n * An alien sign card component.\n */\nexport function SignCard({ id, width = 50, className = '' }: SignCardProps) {\n  return (\n    <div className={clsx('sign-card', className)} style={{ width: `${width}px`, height: `${width}px` }}>\n      <svg viewBox=\"0 0 512 512\" style={{ width: `${width - 12}px`, height: `${width - 12}px` }}>\n        <Sprite source=\"alien-signs\" id={`sign-${id}`} width={width} />\n      </svg>\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Components\nimport { DualTranslate } from 'components/language';\nimport { Sprite } from 'components/sprites';\n// Sass\nimport './WarehouseGoodCard.scss';\n\nexport type WarehouseGoodCardProps = {\n  /**\n   * The id of the warehouse good\n   */\n  id: string;\n  /**\n   * The width of the warehouse good\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n  /**\n   * Replacement title, usually the name of the warehouse good\n   */\n  title?: string;\n  /**\n   * Optional text to display\n   */\n  text?: DualLanguageValue;\n  /**\n   * Optional padding\n   */\n  padding?: number;\n};\n\nconst BASE = 64;\n\n/**\n * Retrieves the source and warehouse good ID based on a given string.\n *\n * @param str - The input string.\n * @returns An array containing the source and warehouse good ID.\n */\nexport const getSource = (str: string) => {\n  const match = str.match(/\\d+/);\n  const numId = match ? parseInt(match[0], 10) : 0;\n  const goodId = `good-${numId}`;\n  const sourceId = Math.ceil(numId / BASE) * BASE;\n  const source = `warehouse-goods-${sourceId}`;\n  return [source, goodId];\n};\n\n/**\n * An good card component.\n */\nexport function WarehouseGoodCard({\n  id,\n  width = 75,\n  className,\n  title,\n  text,\n  padding,\n}: WarehouseGoodCardProps) {\n  const [source, goodId] = getSource(id);\n\n  const height = text ? 'auto' : `${width}px`;\n\n  return (\n    <div className={clsx('warehouse-good-card', className)} style={{ width: `${width}px`, height, padding }}>\n      <Sprite source={source} id={goodId} width={width} title={title} padding={padding} />\n      {Boolean(text) && (\n        <span className=\"warehouse-good-card__text\">\n          <DualTranslate>{text!}</DualTranslate>\n        </span>\n      )}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Utils\nimport { getColorFromLetter } from 'utils/helpers';\n// Sass\nimport './Card.scss';\n\ntype CardProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  header?: string;\n  footer?: string;\n  color?: string;\n  size?: 'small' | 'medium' | 'large';\n  randomColor?: boolean;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  headerClassName?: string;\n  footerClassName?: string;\n  hideHeader?: boolean;\n};\nexport const Card = ({\n  children,\n  header = 'Carta',\n  footer,\n  color = 'none',\n  size = 'medium',\n  randomColor = false,\n  className = '',\n  headerClassName = '',\n  footerClassName = '',\n  hideHeader = false,\n}: CardProps) => {\n  const baseClass = 'card';\n\n  const bgColor = randomColor\n    ? getColorFromLetter(\n        typeof children === 'string'\n          ? children[0].toUpperCase()\n          : header !== 'Carta'\n          ? header[0].toUpperCase()\n          : 'X'\n      )\n    : color;\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, className)}>\n      {!hideHeader && (\n        <span\n          className={clsx(`${baseClass}__header`, `color-background--${bgColor}`, headerClassName)}\n          style={color.startsWith('#') ? { backgroundColor: color } : {}}\n        >\n          {header}\n        </span>\n      )}\n      <span className={`${baseClass}__text`}>{children}</span>\n      {footer && <span className={clsx(`${baseClass}__footer`, footerClassName)}>{footer}</span>}\n    </div>\n  );\n};\n","import type { AvatarSize } from 'antd/lib/avatar/AvatarContext';\nimport clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Components\nimport { IconAvatar } from 'components/avatars/IconAvatar';\n\nexport type MetricHighlightProps = {\n  /**\n   * The text to be highlighted\n   */\n  children: ReactNode;\n  /**\n   * The icon representing the metric\n   */\n  icon: ReactNode;\n  /**\n   * Indicates if it's a negative metric\n   */\n  type?: 'positive' | 'negative' | 'default';\n  /**\n   * The size of the avatar (default: small)\n   */\n  iconSize?: AvatarSize;\n  /**\n   * Custom class\n   */\n  className?: string;\n  /**\n   * Icon placement (default: after)\n   */\n  iconPlacement?: 'before' | 'after';\n};\n\nexport function MetricHighlight({\n  children,\n  icon,\n  type,\n  className,\n  iconSize = 'small',\n  iconPlacement = 'after',\n}: MetricHighlightProps) {\n  return (\n    <span className={clsx('metric-highlight', type && `metric-highlight--${type}`, className)}>\n      {iconPlacement === 'before' && (\n        <>\n          <IconAvatar size={iconSize} icon={icon} />{' '}\n        </>\n      )}\n      {children}\n      {iconPlacement === 'after' && (\n        <>\n          {' '}\n          <IconAvatar size={iconSize} icon={icon} />\n        </>\n      )}\n    </span>\n  );\n}\n\nexport type HighlightProps = Omit<MetricHighlightProps, 'icon'>;\n","// Icons\nimport { ClockIcon } from 'icons/ClockIcon';\n// Components\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function TimeHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<ClockIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import { useQuery } from '@tanstack/react-query';\n// Ant Design Resources\nimport { WarningOutlined } from '@ant-design/icons';\nimport { Spin, Tooltip } from 'antd';\n// Hooks\nimport { useTDBaseUrl } from 'hooks/useTDBaseUrl';\n\ntype SpriteProps = {\n  /**\n   * The sprite source name\n   */\n  source: string;\n  /**\n   * The id of the item\n   */\n  id: string;\n  /**\n   * The width of the item\n   */\n  width?: number;\n  /**\n   * Replacement title, usually the name of the item\n   */\n  title?: string;\n  /**\n   * Optional class name\n   */\n  className?: string;\n  /**\n   *\n   */\n  padding?: number;\n};\n\n/**\n * Loads a sprite from the Tarde Divertida sprites\n * @param {SpriteProps} props\n * @returns a single sprite item\n */\nexport function Sprite({ id, source, width = 75, padding = 6, title, className }: SpriteProps) {\n  const baseUrl = useTDBaseUrl('sprites');\n\n  const { isLoading, data, isError } = useQuery({\n    queryKey: ['sprite', source],\n    queryFn: async () => {\n      const response = await fetch(`${baseUrl}/sprites/${source}.svg`);\n      return await response.text();\n    },\n    enabled: !!id && !!source,\n  });\n\n  const paddedWidth = width - padding * 2;\n\n  if (isLoading) {\n    return (\n      <span\n        style={{\n          width: `${paddedWidth}px`,\n          height: `${paddedWidth}px`,\n          padding,\n          display: 'grid',\n          placeItems: 'center',\n        }}\n        className={className}\n      >\n        <Spin />\n      </span>\n    );\n  }\n\n  const svgContent = data;\n\n  if (isError || !svgContent) {\n    return (\n      <span\n        style={{\n          width: `${paddedWidth}px`,\n          height: `${paddedWidth}px`,\n          padding,\n          display: 'grid',\n          placeItems: 'center',\n        }}\n        className={className}\n      >\n        <WarningOutlined />\n      </span>\n    );\n  }\n\n  return (\n    <svg\n      viewBox=\"0 0 512 512\"\n      style={{ width: `${paddedWidth}px`, height: `${paddedWidth}px`, padding }}\n      className={className}\n    >\n      <use xlinkHref={`#${id}`} dangerouslySetInnerHTML={{ __html: svgContent }} />\n      <foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">\n        {title && (\n          <Tooltip title={title}>\n            <div style={{ background: 'transparent', width: '100%', height: '100vh' }}></div>\n          </Tooltip>\n        )}\n      </foreignObject>\n    </svg>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Sass\nimport './Instruction.scss';\n\ntype InstructionsProps = {\n  /**\n   * The content of the instruction\n   */\n  children: ReactNode;\n  /**\n   * Adds a semi transparent background (white or black opposite to the white property)\n   */\n  contained?: boolean;\n  /**\n   * Make text color white\n   */\n  white?: boolean;\n  /**\n   * Makes instruction width 100%\n   */\n  fullWidth?: boolean;\n  /**\n   * Custom class name\n   */\n  className?: string;\n  /**\n   *\n   */\n  noMargin?: boolean;\n};\n\n/**\n * Typography container for instructions\n */\nexport const Instruction = ({\n  children,\n  white,\n  className,\n  contained,\n  fullWidth,\n  noMargin = false,\n}: InstructionsProps) => {\n  const baseClass = 'instruction';\n\n  return (\n    <Typography.Text\n      className={clsx(\n        baseClass,\n        contained && `${baseClass}--contained`,\n        white && `${baseClass}--white`,\n        fullWidth && `${baseClass}--full-width`,\n        noMargin && `${baseClass}--no-margin`,\n        className\n      )}\n      data-testid=\"instruction\"\n    >\n      {children}\n    </Typography.Text>\n  );\n};\n","// Types\nimport type { GameRound } from 'types/game';\n// Utils\nimport { pluralize } from 'utils/helpers';\n// Components\nimport { Translate } from 'components/language';\nimport { RuleInstruction } from 'components/text';\n\ntype RoundsLeftInstructionProps = {\n  /**\n   * The state round object with current and total values\n   */\n  round: GameRound;\n};\n\n/**\n * Displays instructional sentence based on the number of rounds left for the game to end\n */\nexport function RoundsLeftInstruction({ round }: RoundsLeftInstructionProps) {\n  const left = (round?.total ?? 0) - (round?.current ?? 0);\n\n  if (left === 0 || round.forceLastRound) {\n    return (\n      <RuleInstruction type=\"event\">\n        <Translate pt=\"Essa foi a última rodada\" en=\"No more rounds left\" />\n      </RuleInstruction>\n    );\n  }\n\n  return (\n    <RuleInstruction type=\"tip\">\n      <Translate\n        pt={\n          <>\n            {pluralize(left, 'Falta', 'Faltam')} <strong>{left}</strong> {pluralize(left, 'rodada')} para o\n            jogo terminar...\n          </>\n        }\n        en={\n          <>\n            <strong>{left}</strong> {pluralize(left, 'round')} left for the game to end...\n          </>\n        }\n      />\n    </RuleInstruction>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Sass\nimport './TextHighlight.scss';\n\ntype TextHighlightProps = {\n  /**\n   * The text to be highlighted\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * If the highlight should be dark\n   */\n  dark?: boolean;\n};\n\nexport function TextHighlight({ children, className, dark }: TextHighlightProps) {\n  return (\n    <span className={clsx('text-highlight', dark && 'text-highlight--dark', className)}>{children}</span>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Sass\nimport './Title.scss';\n\nexport type TitleProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Makes text white\n   */\n  white?: boolean;\n  /**\n   * Icon prefixing the title\n   */\n  icon?: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * The heading level (default: 2)\n   */\n  level?: 1 | 2 | 3 | 4 | 5;\n  /**\n   * The size of the title (default: medium)\n   */\n  size?: 'xx-small' | 'x-small' | 'small' | 'medium' | 'large';\n  /**\n   * The alignment of the text (default: center)\n   */\n  align?: 'left' | 'right' | 'center';\n};\n\nexport const Title = ({\n  children,\n  white,\n  icon,\n  className,\n  level = 2,\n  size = 'medium',\n  align = 'center',\n}: TitleProps) => {\n  return (\n    <Typography.Title\n      level={level}\n      className={clsx('title', `title--${size}`, `title--align-${align}`, white && 'title--white', className)}\n    >\n      {Boolean(icon) && icon}\n      {children}\n    </Typography.Title>\n  );\n};\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport {\n  AlertFilled,\n  BulbFilled,\n  ClockCircleFilled,\n  ExclamationCircleFilled,\n  MessageFilled,\n  PlayCircleFilled,\n  ReadFilled,\n  RobotFilled,\n  StarFilled,\n} from '@ant-design/icons';\nimport { Typography, theme } from 'antd';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Sass\nimport './RuleInstruction.scss';\n\nexport type RuleInstructionProps = {\n  /**\n   * The content of the rule instruction\n   */\n  children: ReactNode;\n  /**\n   * Makes instruction width 100%\n   */\n  fullWidth?: boolean;\n  /**\n   * Custom class name\n   */\n  className?: string;\n  /**\n   * The type of the rule instruction (default: rule)\n   * Rule is used for general rules\n   * Action is used when the player must do something\n   * Event is used when something happens like the result of an action or decision\n   * Alert is used when something very important needs attention (constant animation)\n   * Lore is used for story elements\n   * Scoring for result points (not rule)\n   * Wait for when the player must wait for something to happen\n   */\n  type: 'rule' | 'action' | 'event' | 'alert' | 'lore' | 'tip' | 'scoring' | 'wait' | 'bot';\n  /**\n   * Optional sound effect played when the component is rendered\n   */\n  sfx?: ReactNode;\n};\n\n/**\n * Typography container for rules instructions, if multiple lines, use <br /> to break lines\n * Do not use lists (ul, ol, li) inside this component\n * Add an icon on the left side\n */\nexport const RuleInstruction = ({\n  children,\n  className,\n  fullWidth,\n  type = 'rule',\n  sfx,\n}: RuleInstructionProps) => {\n  const baseClass = 'rule-instruction';\n\n  const icon = {\n    action: <PlayCircleFilled />,\n    alert: <AlertFilled />,\n    event: <ExclamationCircleFilled />,\n    lore: <MessageFilled />,\n    rule: <ReadFilled />,\n    tip: <BulbFilled />,\n    scoring: <StarFilled />,\n    wait: <ClockCircleFilled />,\n    bot: <RobotFilled />,\n  }[type];\n\n  const animationClass = {\n    action: getAnimationClass('shakeX'),\n    alert: getAnimationClass('flash', { infinite: true, speed: 'fast' }),\n    event: getAnimationClass('tada', { repeat: 3, speed: 'fast' }),\n    lore: getAnimationClass('pulse'),\n    rule: getAnimationClass('pulse'),\n    tip: getAnimationClass('pulse'),\n    scoring: getAnimationClass('pulse'),\n    wait: getAnimationClass('pulse'),\n    bot: getAnimationClass('pulse'),\n  }[type];\n\n  const { token } = theme.useToken();\n  const color = type === 'action' ? { background: token.colorPrimary } : {};\n\n  return (\n    <div\n      className={clsx(baseClass, fullWidth && `${baseClass}--full-width`, className)}\n      data-testid=\"rule-instruction\"\n    >\n      <div className={clsx(`${baseClass}__icon`, `${baseClass}__icon--${type}`)} style={color}>\n        <div className={animationClass}>{icon}</div>\n      </div>\n      {sfx}\n      <Typography.Paragraph className={clsx(`${baseClass}__content`)}>{children}</Typography.Paragraph>\n    </div>\n  );\n};\n","import { ReactNode } from 'react';\n// Icons\nimport { AnimatedClockIcon } from 'icons/AnimatedClockIcon';\n// Components\nimport { MetricHighlight, MetricHighlightProps } from 'components/metrics/MetricHighlight';\n\nconst padTime = (value: number) => (value < 10 ? `0${value}` : value);\n\ntype TimerClockProps = {\n  /**\n   * Replacement icon for the clock icon\n   */\n  icon?: ReactNode;\n  /**\n   * Optional children that comes after the time\n   */\n  children?: ReactNode;\n  /**\n   * Minutes\n   */\n  minutes?: number;\n  /**\n   * Seconds\n   */\n  seconds: number;\n} & Omit<MetricHighlightProps, 'icon' | 'children'>;\n\n/**\n * Timer highlight with countdown functionality\n */\nexport function TimerClock({\n  icon,\n  type,\n  iconSize,\n  children,\n  className = '',\n  iconPlacement = 'before',\n  minutes = 0,\n  seconds,\n}: TimerClockProps) {\n  return (\n    <MetricHighlight\n      icon={icon ?? <AnimatedClockIcon />}\n      type={type}\n      iconSize={iconSize}\n      className={className}\n      iconPlacement={iconPlacement}\n    >\n      {minutes}:{padTime(seconds)}\n      {children}\n    </MetricHighlight>\n  );\n}\n","// Ant Design Resources\nimport { Progress, ProgressProps } from 'antd';\n\ninterface TimerBarProps extends ProgressProps {\n  steps?: number;\n  value: number;\n  total: number;\n}\n\n/**\n * Time Bar presentational component used in timed operations\n * @param props\n * @returns\n */\nexport function TimerBar({\n  steps,\n  strokeLinecap,\n  total,\n  type = 'line',\n  value,\n  status = 'active',\n  ...props\n}: TimerBarProps) {\n  const percentage = 100 - (value * 100) / total;\n  return (\n    <Progress\n      percent={percentage}\n      steps={steps}\n      showInfo={false}\n      style={{ marginBottom: '1rem' }}\n      size={steps && steps > 30 ? 'small' : undefined}\n      type={type}\n      {...props}\n    />\n  );\n}\n","import clsx from 'clsx';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\n// Internal\nimport { TimerBar } from './TimerBar';\n\ntype TimedTimerBarProps = {\n  /**\n   * Duration in seconds\n   */\n  duration: number;\n  /**\n   * Function executed when the time is up\n   */\n  onExpire: GenericFunction;\n  /**\n   * Number of ticks in the bar\n   */\n  steps?: number;\n  /**\n   * Type of bar. Default: line\n   */\n  type?: 'circle' | 'line' | 'dashboard';\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\nexport function TimedTimerBar({ duration, onExpire, type, steps = 10, className }: TimedTimerBarProps) {\n  const { timeLeft } = useCountdown({\n    duration,\n    autoStart: true,\n    onExpire,\n  });\n\n  return (\n    <div className={clsx('timer-number', className)}>\n      {timeLeft} <TimerBar steps={steps} value={timeLeft} total={duration} type={type} /> {timeLeft}\n    </div>\n  );\n}\n","import { ReactNode } from 'react';\n// Hooks\nimport { useCountdown, useCountdownSettings } from 'hooks/useCountdown';\n// Icons\nimport { AnimatedClockIcon } from 'icons/AnimatedClockIcon';\n// Components\nimport { MetricHighlight, MetricHighlightProps } from 'components/metrics/MetricHighlight';\n\nconst padTime = (value: number) => (value < 10 ? `0${value}` : value);\n\ntype TimedTimerClockProps = {\n  /**\n   * Replacement icon for the clock icon\n   */\n  icon?: ReactNode;\n  /**\n   * Optional children that comes after the time\n   */\n  children?: ReactNode;\n} & useCountdownSettings &\n  Omit<MetricHighlightProps, 'icon' | 'children'>;\n\n/**\n * Timer highlight with countdown functionality\n */\nexport function TimedTimerClock({\n  icon,\n  type,\n  iconSize,\n  children,\n  className = '',\n  iconPlacement = 'before',\n  ...timerProps\n}: TimedTimerClockProps) {\n  const { minutes, seconds } = useCountdown({ ...timerProps });\n\n  return (\n    <MetricHighlight\n      icon={icon ?? <AnimatedClockIcon />}\n      type={type}\n      iconSize={iconSize}\n      className={className}\n      iconPlacement={iconPlacement}\n    >\n      {minutes}:{padTime(seconds)}\n      {children}\n    </MetricHighlight>\n  );\n}\n","// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\n\ntype TimeForActionProps = {\n  duration: number;\n  onExpire?: () => void;\n  timeLeft?: number;\n};\n\nexport function WaitingTime({ duration, timeLeft, onExpire }: TimeForActionProps) {\n  const { timeLeft: privateTimeLeft } = useCountdown({\n    duration,\n    autoStart: timeLeft === undefined,\n    onExpire,\n  });\n\n  const percentage = ((timeLeft ?? privateTimeLeft) / duration) * 100;\n\n  return (\n    <div className=\"timer-waiting-time-bar\">\n      <span className=\"timer-waiting-time-bar__container\">\n        <span className=\"timer-waiting-time-bar__left\" style={{ width: `${percentage}%` }} />\n      </span>\n    </div>\n  );\n}\n","/**\n * Returns the URL for the given kind of resource\n * @param kind the kind of resource\n * @returns the URL for the given kind of resource\n */\nexport function useTDBaseUrl(library: 'images' | 'sprites' | 'resources' | 'classic'): string {\n  const baseUrl = process.env.REACT_APP_TD_BASE_URL;\n\n  switch (library) {\n    case 'images':\n      return `${baseUrl}/${process.env.REACT_APP_TD_IMAGES}`;\n    case 'sprites':\n      return `${baseUrl}/${process.env.REACT_APP_TD_SPRITES}`;\n    case 'resources':\n      return `${baseUrl}/${process.env.REACT_APP_TD_RESOURCES}`;\n    case 'classic':\n      return `${baseUrl}/${process.env.REACT_APP_TD_CLASSIC}`;\n    default:\n      throw new Error('Invalid library');\n  }\n}\n","export function AnimatedClockIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fbfbfb\"\n        d=\"M464 256c0 114.9-93.1 208-208 208S48 370.9 48 256 141.1 48 256 48s208 93.1 208 208z\"\n      ></path>\n      <path\n        fill=\"#e3effa\"\n        d=\"M464 256c0-114.9-93.2-208-208.1-207.9-67 0-130 32.4-169 86.9 93.4-66.9 223.3-45.4 290.2 47.9 51.9 72.4 51.9 169.8 0 242.3C431.7 386.1 464 323.1 464 256z\"\n      ></path>\n      <path\n        fill=\"#fcc369\"\n        d=\"M256 8c137 0 248 111 248 248S393 504 256 504 8 393 8 256 119 8 256 8zm0 456c114.9 0 208-93.1 208-208S370.9 48 256 48 48 141.1 48 256s93.1 208 208 208z\"\n      ></path>\n      <path\n        fill=\"#ed9b52\"\n        d=\"M256 32C132.3 32 32 132.3 32 256s100.3 224 224 224 224-100.3 224-224S379.7 32 256 32zm0 432c-114.9 0-208-93.1-208-208S141.1 48 256 48s208 93.1 208 208-93.1 208-208 208z\"\n      ></path>\n      <path d=\"M256 496c-132.5-.1-239.9-107.5-240-240 0-4.4-3.6-8-8-8s-8 3.6-8 8c0 141.4 114.6 256 256 256.1 109.6 0 207-69.7 242.4-173.5l-15.1-5.2C450.1 430.7 358.7 496 256 496zm0-496C133.8.1 28.6 86.6 4.8 206.5l15.7 3.1C46.3 79.5 172.6-5 302.6 20.7s214.6 152.1 188.8 282.1c-1 5.1-2.2 10.1-3.5 15.1l15.5 4.1c36.4-136.7-45-277-181.8-313.4C300.2 2.9 278.1 0 256 0zM18 225l-15.9-2c-.7 5.4-1.2 10.9-1.6 16.5l16 1c.3-5.2.8-10.4 1.5-15.5z\"></path>\n      <path d=\"M256 472c119.3 0 216-96.7 216-216S375.3 40 256 40 40 136.7 40 256c.1 119.2 96.8 215.9 216 216zm-8-415.8V88h16V56.2c104.1 4.3 187.5 87.7 191.8 191.8H424v16h31.8c-4.3 104.1-87.7 187.5-191.8 191.8V424h-16v31.8C143.9 451.5 60.5 368.1 56.2 264H88v-16H56.2C60.5 143.9 143.9 60.5 248 56.2z\"></path>\n\n      <g>\n        <path\n          fill=\"#555fa3\"\n          d=\"M273 141.6v114.24a15.55 15.55 0 01-3.68 10.16l-50.24 61.12a14.47 14.47 0 01-20.42 1.25 14.32 14.32 0 01-2.78-3.33 18.75 18.75 0 012.4-22.64l40.8-48.16A7.77 7.77 0 00241 249V141.6a16.07 16.07 0 1132-3 15.44 15.44 0 010 3z\"\n        ></path>\n        <path d=\"M206.6 339.94c.56 0 1.11.06 1.67.06a22.7 22.7 0 0016.95-7.83l50.31-61.05a24 24 0 005.47-15.26V141.6a24 24 0 10-48-3 25.69 25.69 0 000 3v107.47l-40.62 48a26.49 26.49 0 00-3.2 32.38 23.05 23.05 0 0017.42 10.49zm-2.18-32.34l40.8-48.18a16.1 16.1 0 003.78-10.36V141.6a8.14 8.14 0 1116 0v114.26a8 8 0 01-1.82 5.08l-50.05 60.76a6.37 6.37 0 01-5.32 2.28 7.05 7.05 0 01-5.29-3.39 10.81 10.81 0 011.89-13z\"></path>\n        <animateTransform\n          attributeName=\"transform\"\n          dur=\"2s\"\n          from=\"0 256 256\"\n          repeatCount=\"indefinite\"\n          to=\"360 256 256\"\n          type=\"rotate\"\n        ></animateTransform>\n      </g>\n    </svg>\n  );\n}\n","export function ApplauseIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path fill=\"none\" d=\"M0 .01h512v512H0z\"></path>\n      <path\n        fill=\"#ffbc86\"\n        d=\"M445.7 199.19l-34.24 21.18-154.58 95.64a71.63 71.63 0 01-32.28 10.5l-6.93.51a131 131 0 00-59.12 19.23l-15.94 9.86-15.68 9.7a10.06 10.06 0 01-13.84-3.26l-85.92-138.9a10.06 10.06 0 013.26-13.84l11.66-7.22a132.47 132.47 0 0037.83-35.26 132.53 132.53 0 0021.45-47 72.37 72.37 0 0132.37-44.95l101.53-62.86a33.41 33.41 0 1135.15 56.82l22.87-14.15 68.77-42.54a25.33 25.33 0 0126.66 43.08l20.45-12.65a25.33 25.33 0 0126.65 43.08l-20.45 12.65a25.33 25.33 0 0134.6 7.8c7.7 11.93 3.64 28.12-8.43 35.58l-22 13.62a25.33 25.33 0 0134.6 7.8c7.7 11.93 3.64 28.11-8.43 35.58\"\n      ></path>\n      <path\n        fill=\"#f7a86c\"\n        d=\"M411.46 220.37l-154.58 95.64a71.63 71.63 0 01-32.28 10.5l-6.93.51a131 131 0 00-59.12 19.23l-15.94 9.86-32.47-100.1a47.52 47.52 0 0145.17-62.15 48.84 48.84 0 015 .27l-19.85-61.24A39.42 39.42 0 01178 81.3h1.35a39.43 39.43 0 0170.82-22.94 38.49 38.49 0 0134.4-6.82 33.33 33.33 0 01-14.1 17.79l22.87-14.16a40.77 40.77 0 0113.56 12.41 38.6 38.6 0 0123.49-8 40.36 40.36 0 0137.93 27.75z\"\n      ></path>\n      <path d=\"M27.18 231.15a7.5 7.5 0 01-6.39-3.56 17.58 17.58 0 015.69-24.16l12.23-7.56a124.26 124.26 0 0055.35-77.27 79.47 79.47 0 0135.43-49.46l24.93-15.43a7.5 7.5 0 017.89 12.76l-24.93 15.42a64.46 64.46 0 00-28.7 40.12 139.36 139.36 0 01-62.08 86.62l-12.22 7.56a2.55 2.55 0 00-.83 3.51 7.5 7.5 0 01-6.37 11.45zm94.5 143.65a17.56 17.56 0 01-15-8.31 7.5 7.5 0 1112.75-7.9 2.56 2.56 0 003.52.83l31.62-19.56a139 139 0 0162.5-20.32l6.93-.53a64.37 64.37 0 0028.9-9.4l188.89-116.82c8.38-5.19 11.29-16.13 6.49-24.38a17.83 17.83 0 00-24.77-6.25 7.5 7.5 0 01-7.89-12.76h.05l22-13.61c8.38-5.18 11.29-16.12 6.49-24.38a17.84 17.84 0 00-24.81-6.22 7.5 7.5 0 01-7.89-12.76l20.45-12.65a17.83 17.83 0 005.78-24.54 17.85 17.85 0 00-24.54-5.78L392.68 62.1a7.5 7.5 0 01-7.89-12.76A17.84 17.84 0 00366 19.01l-91.63 56.71a7.5 7.5 0 01-7.89-12.71 25.92 25.92 0 00-27.27-44.08l-46.69 28.85a7.5 7.5 0 11-7.89-12.77l46.69-28.87a40.92 40.92 0 0162.09 40.17l64.71-40a32.85 32.85 0 0150.1 28.79 32.83 32.83 0 0134.36 55.53 32.66 32.66 0 0114.51 13.28c8.57 14.75 4 34-10.2 43.79a32.51 32.51 0 0114.35 13.21c8.85 15.21 3.67 35.25-11.56 44.68L260.83 322.38a79.33 79.33 0 01-35.67 11.63l-6.93.52a123.94 123.94 0 00-55.73 18.13l-31.62 19.56a17.5 17.5 0 01-9.2 2.58z\"></path>\n      <path d=\"M243.13 153.3a7.5 7.5 0 01-3.95-13.88l145.59-90.07a7.5 7.5 0 017.89 12.76l-145.59 90.07a7.46 7.46 0 01-3.94 1.12zm26.66 43.08a7.5 7.5 0 01-4-13.87l145.63-90.07a7.5 7.5 0 117.89 12.75l-145.58 90.07a7.49 7.49 0 01-3.94 1.12zm26.65 43.08a7.5 7.5 0 01-3.95-13.88l145.59-90.06a7.5 7.5 0 117.92 12.75l-145.62 90.07a7.46 7.46 0 01-3.94 1.12z\"></path>\n      <path d=\"M147.74 254.39a7.5 7.5 0 01-4-13.88c31.63-19.58 48.68-46 50.67-78.44a105.11 105.11 0 00-6.32-43.06 7.49 7.49 0 012.95-9.32l75.44-46.68a7.5 7.5 0 117.89 12.75l-70.29 43.45a123.57 123.57 0 015.35 43.8c-1.58 25.87-12.88 62.53-57.75 90.28a7.47 7.47 0 01-3.94 1.1z\"></path>\n      <path\n        fill=\"#fed1a4\"\n        d=\"M322.39 75.01a25.34 25.34 0 00-15.82 31.75l-8-24.61c-4.36-13.48-19.11-21.28-32.57-16.64a25.32 25.32 0 00-15.81 31.75l-7.42-22.87a25.33 25.33 0 00-48.15 15.62l7.38 22.88a25.33 25.33 0 00-48.19 15.63l33.28 102.49a33.42 33.42 0 00-63.57 20.62l36.83 113.56a72.39 72.39 0 0036 42.14 132.55 132.55 0 0165.83 77.17l4.23 13.05a10.06 10.06 0 0012.59 6.46l155.35-50.38a10.06 10.06 0 006.5-12.62l-11.47-35.37a131 131 0 01-4.59-62l1.15-6.86a71.56 71.56 0 00-2.51-33.85L354.94 91.71c-4.38-13.51-19.13-21.31-32.55-16.7\"\n      ></path>\n      <path\n        fill=\"#ffbc86\"\n        d=\"M354.93 91.68l68.5 211.22a71.56 71.56 0 012.51 33.85l-1.15 6.86a131 131 0 004.59 62l11.47 35.4a10 10 0 01-6.46 12.66l-14.12 4.58-14.57-44.97a130.83 130.83 0 01-4.59-62l1.14-6.86a71.43 71.43 0 00-2.5-33.85L331.08 98.85a25.29 25.29 0 00-19.05-17 25.16 25.16 0 0111.52-7.17c13.24-3.88 27.12 3.88 31.38 17\"\n      ></path>\n      <path d=\"M434.39 461.14a7.5 7.5 0 01-2.31-14.64 2.55 2.55 0 001.64-3.21l-11.47-35.37a139 139 0 01-4.86-65.55l1.15-6.85a64.24 64.24 0 00-2.25-30.31l-7.7-23.75a7.5 7.5 0 1114.27-4.62l7.7 23.75a79.18 79.18 0 012.77 37.4l-1.14 6.86a123.85 123.85 0 004.33 58.44L448 438.66a17.58 17.58 0 01-11.28 22.11 7.5 7.5 0 01-2.33.37zm-158.47 50.87a17.6 17.6 0 01-16.68-12.15l-4.44-13.67a124.21 124.21 0 00-61.87-72.18 79.5 79.5 0 01-39.6-46.19l-16-49.23a7.5 7.5 0 1114.3-4.58l16 49.24a64.39 64.39 0 0032.08 37.41 139.34 139.34 0 0169.39 80.93l4.44 13.67a2.5 2.5 0 001.27 1.49 2.53 2.53 0 001.94.16 7.5 7.5 0 114.63 14.26 17.52 17.52 0 01-5.46.84zM133 288.19a7.51 7.51 0 01-7.14-5.19l-9.42-29.05a40.92 40.92 0 0153.8-50.74l-23.47-72.38a32.81 32.81 0 0139.83-41.82 32.83 32.83 0 0162.12-20.17 32.62 32.62 0 0116.35-10.93c16.37-4.82 34 4.26 40.1 20.33a32.61 32.61 0 0116.25-10.8c16.88-5 35.11 4.84 40.64 21.87l49.85 153.71a7.5 7.5 0 01-14.27 4.62L347.79 94.01c-3-9.38-13-14.81-22.14-12.11a17.83 17.83 0 00-11.94 22.61 7.5 7.5 0 01-14.27 4.63l-8-24.61c-3-9.38-13-14.81-22.14-12.11a17.84 17.84 0 00-11.95 22.59 7.5 7.5 0 11-14.27 4.63l-7.42-22.88a17.83 17.83 0 00-33.92 11l7.42 22.88a7.5 7.5 0 01-14.27 4.62 17.83 17.83 0 00-33.92 11l33.26 102.45a7.5 7.5 0 01-14.23 4.62 25.91 25.91 0 00-49.28 16l9.42 29.06a7.51 7.51 0 01-7.13 9.81z\"></path>\n      <path d=\"M254.85 283.24a7.5 7.5 0 01-7.13-5.19L194.9 115.2a7.5 7.5 0 0114.27-4.62L262 273.42a7.5 7.5 0 01-4.82 9.45 7.39 7.39 0 01-2.33.37zM303 267.61a7.5 7.5 0 01-7.14-5.19L243.09 99.58a7.5 7.5 0 0114.27-4.63l52.81 162.85a7.5 7.5 0 01-4.82 9.45 7.78 7.78 0 01-2.35.36zm48.22-15.6a7.51 7.51 0 01-7.13-5.19L291.28 83.95a7.5 7.5 0 0114.27-4.63l52.81 162.85a7.51 7.51 0 01-7.14 9.82zm-138.49 65.55a7.5 7.5 0 01-7.14-5.18L180 233.33a7.5 7.5 0 0114.27-4.62l25.63 79a7.48 7.48 0 01-7.13 9.81zM92.94 60.01a7.44 7.44 0 01-5.3-2.2l-12.2-12.22a7.5 7.5 0 0110.61-10.58l12.19 12.2a7.5 7.5 0 01-5.3 12.8zm23.87-15.38a7.51 7.51 0 01-7.34-6L106 21.74a7.5 7.5 0 1114.69-3l3.46 16.9a7.51 7.51 0 01-5.85 8.85 7.73 7.73 0 01-1.49.14zM77.6 83.86a7.73 7.73 0 01-1.51-.15l-16.9-3.46a7.5 7.5 0 113-14.69l16.9 3.45a7.5 7.5 0 01-1.49 14.85zm397.61 180.92a7.51 7.51 0 01-3.78-1l-14.89-8.7a7.52 7.52 0 017.57-13l14.89 8.73a7.5 7.5 0 01-3.79 14zm-26.45 27.67a7.48 7.48 0 01-6.73-4.18l-7.63-15.46a7.5 7.5 0 1113.45-6.64l7.63 15.46a7.51 7.51 0 01-3.41 10.05 7.43 7.43 0 01-3.31.77zm20.35-63.36a7.5 7.5 0 01-.4-15l17.21-1a7.51 7.51 0 11.82 15l-17.21.95z\"></path>\n    </svg>\n  );\n}\n","export function ClockIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <circle cx=\"256\" cy=\"256\" r=\"248\" fill=\"#ff5876\"></circle>\n      <path\n        fill=\"#e6485d\"\n        d=\"M256 486C122.048 486 12.919 379.795 8.18 247c-.107 2.988-.18 5.986-.18 9 0 136.967 111.033 248 248 248s248-111.033 248-248c0-3.014-.073-6.012-.18-9C499.081 379.795 389.952 486 256 486z\"\n      ></path>\n      <circle cx=\"256\" cy=\"256\" r=\"206.942\" fill=\"#e4eef9\"></circle>\n      <path\n        fill=\"#d5e0f2\"\n        d=\"M256 444.942c-111.274 0-202.022-87.828-206.736-197.942a209.92 209.92 0 00-.207 9c0 114.291 92.651 206.942 206.942 206.942S462.942 370.291 462.942 256c0-3.017-.079-6.015-.207-9C458.022 357.114 367.274 444.942 256 444.942z\"\n      ></path>\n      <path\n        fill=\"#405b6c\"\n        d=\"M331.17 183.393c-5.899-5.818-15.396-5.752-21.213.146L262.848 231.3c10.522 2.911 18.324 12.359 18.76 23.701l49.707-50.395c5.818-5.898 5.753-15.396-.145-21.213zM230.367 256c0-11.14 7.109-20.617 17.036-24.151l-92.462-82.397c-6.186-5.512-15.667-4.966-21.178 1.219s-4.966 15.667 1.219 21.178l95.407 85.021c-.01-.289-.022-.578-.022-.87z\"\n      ></path>\n      <circle cx=\"256\" cy=\"256\" r=\"25.633\" fill=\"#ff5876\"></circle>\n      <path\n        fill=\"#2d4456\"\n        d=\"M216.381 244.387l14.008 12.483c-.01-.29-.022-.578-.022-.87 0-11.14 7.109-20.617 17.036-24.151l-12.635-11.26c-8.792 5.283-15.446 13.747-18.387 23.798zm58.377-25.163l-11.91 12.075c10.522 2.911 18.324 12.359 18.76 23.701l13.128-13.31c-3.606-9.76-10.801-17.775-19.978-22.466z\"\n      ></path>\n      <path\n        fill=\"#e6485d\"\n        d=\"M256 263.634c-10.989 0-20.36-6.917-24.005-16.634a25.56 25.56 0 00-1.629 9c0 14.157 11.477 25.634 25.633 25.634 14.157 0 25.634-11.477 25.634-25.634a25.56 25.56 0 00-1.629-9c-3.644 9.716-13.015 16.634-24.004 16.634z\"\n      ></path>\n      <path d=\"M437.02 74.98C388.667 26.629 324.381 0 256 0S123.333 26.629 74.98 74.98C26.628 123.333 0 187.62 0 256c0 65.664 24.828 128.099 69.909 175.802a7.515 7.515 0 1010.923-10.323C38.398 376.577 15.029 317.809 15.029 256c0-64.366 25.065-124.879 70.578-170.392C131.121 40.094 191.634 15.029 256 15.029s124.879 25.065 170.392 70.579C471.905 131.121 496.97 191.634 496.97 256s-25.066 124.879-70.578 170.392C380.879 471.906 320.366 496.971 256 496.971c-56.111 0-110.745-19.706-153.838-55.487a7.515 7.515 0 00-9.601 11.563C138.346 491.063 196.389 512 256 512c68.381 0 132.667-26.629 181.02-74.98C485.372 388.667 512 324.38 512 256s-26.628-132.667-74.98-181.02z\"></path>\n      <path d=\"M402.975 109.552a7.514 7.514 0 00-.363-10.621C362.703 61.662 310.635 41.138 256 41.138c-57.391 0-111.348 22.349-151.93 62.932S41.138 198.608 41.138 256s22.349 111.348 62.932 151.931 94.539 62.931 151.93 62.931 111.348-22.349 151.931-62.931S470.862 313.392 470.862 256c0-49.329-16.259-95.72-47.02-134.156a7.514 7.514 0 10-11.734 9.39c28.605 35.743 43.724 78.886 43.724 124.766 0 110.188-89.645 199.833-199.833 199.833S56.167 366.188 56.167 256 145.812 56.167 256 56.167c50.813 0 99.238 19.088 136.354 53.748a7.512 7.512 0 0010.621-.363z\"></path>\n      <path d=\"M263.515 98.649V75.372a7.515 7.515 0 10-15.03 0v23.276a7.515 7.515 0 0015.03.001zm-15.03 314.702v23.276a7.515 7.515 0 1015.03 0v-23.276a7.515 7.515 0 10-15.03 0zm188.142-149.836a7.515 7.515 0 100-15.03h-23.276c-4.151 0-7.515 3.364-7.515 7.515s3.364 7.515 7.515 7.515zm-361.254-15.03c-4.151 0-7.515 3.364-7.515 7.515s3.364 7.515 7.515 7.515h23.276a7.515 7.515 0 100-15.03zm282.215 102.661a7.515 7.515 0 009.667-11.508l-81.672-68.603c2-3.919 3.245-8.283 3.539-12.904l47.69-48.35c8.687-8.451 8.585-23.551-.219-31.882-8.432-8.714-23.553-8.576-31.882.219l-44.363 44.977a33.14 33.14 0 00-11.013.378l-89.594-79.841c-8.887-8.252-23.953-7.381-31.831 1.833-8.269 9.28-7.447 23.559 1.833 31.829L173.1 215.93a7.516 7.516 0 0010-11.22l-43.355-38.635c-3.094-2.757-3.368-7.517-.611-10.61 2.624-3.072 7.653-3.36 10.61-.611l84.956 75.708a33.368 33.368 0 00-9.068 12.05l-20.094-17.906a7.516 7.516 0 00-9.999 11.221l27.576 24.573c2.204 16.183 16.106 28.698 32.885 28.698a33.025 33.025 0 0019.916-6.655zm-42.175-162.473c2.777-2.934 7.809-2.968 10.627-.072 2.936 2.777 2.969 7.81.072 10.627l-40.747 41.311a33.435 33.435 0 00-9.876-11.39zM256 274.169c-10.019 0-18.169-8.151-18.169-18.169s8.151-18.169 18.169-18.169c10.019 0 18.169 8.151 18.169 18.169s-8.15 18.169-18.169 18.169z\"></path>\n    </svg>\n  );\n}\n","export function GoogleIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#2196f3\"\n        d=\"M501 210c2 0 4 2 4 4v42a249 249 0 1 1-76-179v6l-60 60h-5a156 156 0 0 0-264 112 157 157 0 0 0 306 47H260c-2 0-4-2-4-4v-84c0-2 2-4 4-4z\"\n      />\n      <path\n        fill=\"#1e88e5\"\n        d=\"M501 210h-30c2 0 4 2 4 4v42a249 249 0 0 1-221 248 249 249 0 0 0 251-248v-42c0-2-2-4-4-4z\"\n      />\n      <path fill=\"#f44336\" d=\"m114 190-76-54a248 248 0 0 1 391-59v6l-60 60h-5a156 156 0 0 0-250 47z\" />\n      <path\n        fill=\"#e53935\"\n        d=\"m92 175 22 15c22-49 70-84 126-90h1l-15-1c-57 0-107 31-134 76zM399 77v6l-48 48 13 12h5l60-60v-6A248 248 0 0 0 241 8c61 4 116 29 158 69z\"\n      />\n      <path fill=\"#4caf50\" d=\"M438 425a248 248 0 0 1-404-58l77-53a157 157 0 0 0 252 56z\" />\n      <path\n        fill=\"#43a047\"\n        d=\"m111 314-23 16a156 156 0 0 0 153 82c-59-6-109-45-130-98zM256 505c72 0 137-31 182-80l-18-13c-43 53-107 88-179 92l15 1z\"\n      />\n      <path fill=\"#ffc107\" d=\"M100 256c0 21 3 40 11 58l-77 53a247 247 0 0 1 4-231l76 54c-9 20-15 43-15 66z\" />\n      <path fill=\"#ffb300\" d=\"m88 330 23-16a156 156 0 0 1 3-124l-22-15a156 156 0 0 0-4 155z\" />\n      <path d=\"M501 203h-52a8 8 0 0 0 0 15h48v38a242 242 0 0 1-60 159l-63-46c18-18 31-40 39-65a7 7 0 0 0-7-9H263v-77h153a8 8 0 0 0 0-15H260c-6 0-12 5-12 11v84c0 6 6 12 12 12h135a148 148 0 0 1-229 65 8 8 0 0 0-9 12 163 163 0 0 0 206-7l64 46a241 241 0 0 1-383-57l64-43c6 13 14 26 25 38a7 7 0 1 0 11-10 149 149 0 0 1 215-206c4 4 11 4 16 0l59-60c2-2 4-5 4-8s-2-6-4-8a255 255 0 0 0-289-47 8 8 0 0 0 7 14 239 239 0 0 1 269 41l-54 55a163 163 0 0 0-227 5c-12 11-21 25-29 39l-63-45c19-32 45-59 76-80a8 8 0 0 0-8-13 255 255 0 1 0 396 215v-42c0-6-5-11-12-11zM41 147l63 46a165 165 0 0 0-2 118l-65 45a239 239 0 0 1 4-209z\" />\n    </svg>\n  );\n}\n","export function SkullIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#dbd9dc\"\n        d=\"M249.47 7.6C122.85 11.05 23.53 118.13 23.53 244.8v139.46a56.11 56.11 0 0056.12 56.11h40.08c8.85 0 16.03 7.18 16.03 16.03v24.05a24.05 24.05 0 0024.05 24.05h192.38a24.05 24.05 0 0024.05-24.05V456.4c0-8.85 7.18-16.03 16.03-16.03h40.08a56.11 56.11 0 0056.12-56.11v-144.3c0-130.55-107.63-235.97-239-232.37z\"\n      ></path>\n      <path\n        fill=\"#c9c6ca\"\n        d=\"M143.77 416.32a40.08 40.08 0 01-40.08-40.08V244.8C103.7 129.5 186 30.49 296.25 11a234.69 234.69 0 00-65.21-2.18C112.06 21.42 23.54 125.16 23.54 244.8v139.45a56.11 56.11 0 0056.1 56.11h40.09c8.85 0 16.03 7.18 16.03 16.03v24.05a24.05 24.05 0 0024.05 24.05h24.04v-48.1a40.08 40.08 0 00-40.08-40.08z\"\n      ></path>\n      <g fill=\"#867e88\">\n        <path d=\"M248.6 361.38l-25.41 61.42a8.02 8.02 0 0010.38 10.51l16.48-6.59a16.03 16.03 0 0111.9 0l16.48 6.6a8.02 8.02 0 0010.38-10.51l-25.4-61.42a8.02 8.02 0 00-14.82 0z\"></path>\n        <circle cx=\"151.79\" cy=\"288.06\" r=\"72.14\"></circle>\n      </g>\n      <path\n        fill=\"#6f6571\"\n        d=\"M151.79 247.99c34.33 0 63 24 70.3 56.1a72.2 72.2 0 001.85-16.02 72.14 72.14 0 10-144.3 0c0 5.51.68 10.87 1.85 16.03 7.3-32.12 35.97-56.12 70.3-56.12z\"\n      ></path>\n      <circle cx=\"360.21\" cy=\"288.06\" r=\"72.14\" fill=\"#867e88\"></circle>\n      <path\n        fill=\"#6f6571\"\n        d=\"M360.21 247.99c34.33 0 63 24 70.3 56.1a72.2 72.2 0 001.84-16.02 72.14 72.14 0 10-144.29 0c0 5.51.68 10.87 1.85 16.03 7.3-32.12 35.97-56.12 70.3-56.12zM238.14 396.95c5.7-2.28 11.71-3.44 17.86-3.44s12.15 1.16 17.86 3.44l5.1 2.04-15.55-37.6a8.02 8.02 0 00-14.82 0l-15.55 37.6 5.1-2.04z\"\n      ></path>\n      <path d=\"M476.45 145.01a239.16 239.16 0 00-53.12-77.05C376.5 22.4 314.68-1.7 249.26.1c-62.94 1.73-121.78 28.28-165.7 74.76A246.52 246.52 0 0016.03 244.8v139.46a63.68 63.68 0 0063.61 63.61h40.09c4.7 0 8.53 3.83 8.53 8.53v24.05A31.58 31.58 0 00159.8 512h192.38a31.58 31.58 0 0031.55-31.55V456.4c0-4.7 3.83-8.53 8.53-8.53h40.09a63.69 63.69 0 0063.6-63.61v-144.3c0-32.97-6.56-64.91-19.51-94.95zm4.52 239.25c0 26.8-21.81 48.61-48.62 48.61h-40.08a23.56 23.56 0 00-23.53 23.53v24.05c0 9.13-7.42 16.55-16.55 16.55h-8.53v-16.55a7.5 7.5 0 00-15 0V497h-25.08v-16.55a7.5 7.5 0 00-15 0V497H263.5v-16.55a7.5 7.5 0 00-15 0V497h-25.08v-16.55a7.5 7.5 0 00-15 0V497h-25.08v-16.55a7.5 7.5 0 00-15 0V497h-8.53a16.57 16.57 0 01-16.55-16.55v-24.04a23.56 23.56 0 00-23.53-23.54H79.65a48.67 48.67 0 01-48.62-48.61V244.81A231.57 231.57 0 0194.47 85.15c41.15-43.56 96.27-68.45 155.2-70.06 2.14-.06 4.26-.09 6.38-.09 58.97 0 114.45 22.49 156.82 63.71 43.91 42.73 68.1 100 68.1 161.26v144.29z\"></path>\n      <path d=\"M270.34 358.52a15.47 15.47 0 00-14.34-9.59c-6.3 0-11.93 3.76-14.34 9.59l-25.4 61.42a15.48 15.48 0 003.3 16.84c4.4 4.45 10.99 5.82 16.8 3.5l16.47-6.6a8.5 8.5 0 016.34 0l16.47 6.6a15.53 15.53 0 0016.8-3.5 15.49 15.49 0 003.3-16.84l-25.4-61.42zm11.43 67.71c-.23.25-.39.18-.55.12l-16.48-6.6a23.5 23.5 0 00-17.48 0l-16.48 6.6c-.16.06-.31.12-.55-.12-.25-.24-.18-.4-.11-.56l25.4-61.42c.07-.16.13-.32.48-.32s.4.16.48.32l25.4 61.42c.07.16.13.32-.1.56zM87.54 281.18a63.8 63.8 0 0118.54-38.83 63.8 63.8 0 0138.82-18.54 64.98 64.98 0 0141.26 9.56 7.5 7.5 0 108-12.7 80.06 80.06 0 00-50.83-11.77 79.7 79.7 0 00-47.86 22.85 79.71 79.71 0 00-22.85 47.86 80.04 80.04 0 0011.78 50.82 7.5 7.5 0 1012.7-7.99 64.98 64.98 0 01-9.56-41.26zm131.64-35.48a7.5 7.5 0 00-12.7 8 64.98 64.98 0 019.56 41.25 63.8 63.8 0 01-18.54 38.83 63.8 63.8 0 01-38.82 18.54 64.97 64.97 0 01-41.26-9.56 7.5 7.5 0 10-8 12.7 80.01 80.01 0 0050.83 11.78c18.02-1.9 35.02-10.02 47.86-22.86s20.95-29.83 22.85-47.86a80.04 80.04 0 00-11.78-50.82zm76.74 35.48a63.8 63.8 0 0118.54-38.83 63.8 63.8 0 0138.83-18.54 64.98 64.98 0 0141.26 9.56 7.5 7.5 0 108-12.7 80.06 80.06 0 00-50.83-11.77 79.7 79.7 0 00-47.86 22.85A79.71 79.71 0 00281 279.6a80.04 80.04 0 0011.78 50.82 7.5 7.5 0 1012.69-7.99 64.97 64.97 0 01-9.56-41.26zm118.95-27.48a64.98 64.98 0 019.56 41.25 63.8 63.8 0 01-18.54 38.83 63.8 63.8 0 01-38.83 18.54 64.97 64.97 0 01-41.26-9.56 7.5 7.5 0 10-7.99 12.7 80.01 80.01 0 0050.82 11.78c18.03-1.9 35.03-10.02 47.86-22.86s20.96-29.83 22.86-47.86a80.05 80.05 0 00-11.78-50.82 7.5 7.5 0 00-12.7 8z\"></path>\n    </svg>\n  );\n}\n","export function SpeechBubbleAcceptedIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#23f1a8\"\n        d=\"M252.932 7.518C115.087 9.181 5.716 121.473 7.522 259.316c.53 40.45 10.739 78.56 28.394 112.144L11.518 485.69c-1.887 8.834 5.957 16.678 14.791 14.791l114.23-24.398c33.584 17.655 71.694 27.864 112.144 28.394 137.843 1.806 250.135-107.565 251.798-245.409C506.167 119.394 392.605 5.832 252.932 7.518z\"\n      ></path>\n      <circle cx=\"256\" cy=\"290.169\" r=\"186.061\" fill=\"#26d192\"></circle>\n      <path\n        fill=\"#26d192\"\n        d=\"M504.495 255.995c0 136.564-108.744 246.767-245.295 248.482a247.716 247.716 0 01-33.52-1.823c124.788-13.532 220.756-118.467 220.756-246.659 0-127.854-96.711-233.126-220.958-246.659A252.799 252.799 0 01256 7.499c137.239 0 248.495 111.256 248.495 248.496z\"\n      ></path>\n      <circle cx=\"256\" cy=\"255.999\" r=\"186.066\" fill=\"#f5f7f8\"></circle>\n      <path\n        fill=\"#d9e7eb\"\n        d=\"M442.061 255.999c0 102.764-83.296 186.061-186.061 186.061-14.762 0-29.119-1.718-42.882-4.966 98.007-2.342 176.743-82.516 176.743-181.095S311.125 77.247 213.118 74.904c13.763-3.248 28.119-4.966 42.882-4.966 102.765 0 186.061 83.297 186.061 186.061z\"\n      ></path>\n      <path\n        fill=\"#26d192\"\n        d=\"M229.364 328.182a24.499 24.499 0 01-17.324-7.176l-30.104-30.104c-9.568-9.568-9.568-25.08 0-34.648s25.08-9.568 34.648 0l12.78 12.78 66.047-66.048c9.568-9.568 25.08-9.568 34.648 0 9.567 9.567 9.567 25.08 0 34.648l-83.371 83.372a24.499 24.499 0 01-17.324 7.176z\"\n      ></path>\n      <g>\n        <path d=\"M483.889 139.28a7.499 7.499 0 00-10.097-3.249 7.5 7.5 0 00-3.249 10.097c17.77 34.627 26.912 73.649 26.439 112.849-.78 64.621-26.529 124.899-72.504 169.731-46.016 44.871-107.019 69.09-171.697 68.27-38.366-.502-74.955-9.766-108.752-27.533a7.513 7.513 0 00-5.056-.696l-114.23 24.398c-2.382.513-3.972-.771-4.546-1.344-.574-.574-1.853-2.165-1.344-4.546l24.398-114.23a7.504 7.504 0 00-.696-5.057c-17.767-33.796-27.03-70.385-27.533-108.752-.848-64.705 23.397-125.682 68.27-171.697 44.832-45.976 105.11-71.724 169.73-72.504 78.884-.979 153.324 36.827 199.209 101.059a7.5 7.5 0 1012.205-8.719C415.701 39.134 336.616-.986 252.841.019c-68.63.827-132.658 28.184-180.289 77.029C24.881 125.935-.878 190.7.023 259.415c.522 39.838 9.94 77.878 27.997 113.111L4.183 484.124c-1.419 6.645.602 13.48 5.407 18.285s11.641 6.822 18.286 5.407l111.598-23.837c35.234 18.058 73.274 27.476 113.112 27.996 1.166.016 2.32.023 3.484.023 67.413-.003 130.825-25.689 178.882-72.552 48.846-47.631 76.202-111.659 77.029-180.289.502-41.632-9.212-83.086-28.092-119.877z\"></path>\n        <path d=\"M78.312 273.759a7.496 7.496 0 00-8.201-6.728 7.5 7.5 0 00-6.727 8.2c4.694 47.557 26.81 91.548 62.275 123.87 35.705 32.542 81.995 50.463 130.341 50.463 106.732 0 193.566-86.833 193.566-193.565S362.733 62.433 256 62.433c-48.474 0-94.853 18.005-130.594 50.697-35.509 32.48-57.559 76.647-62.087 124.366a7.5 7.5 0 1014.933 1.417c4.176-44.009 24.518-84.749 57.278-114.715C168.5 94.041 211.284 77.433 256 77.433c98.462 0 178.566 80.104 178.566 178.566 0 98.461-80.104 178.565-178.566 178.565-44.6 0-87.301-16.531-120.237-46.549-32.719-29.82-53.122-70.397-57.451-114.256z\"></path>\n        <path d=\"M306.03 251.056a7.5 7.5 0 0010.607 10.607l18.726-18.727c12.476-12.478 12.476-32.778 0-45.255-12.479-12.477-32.777-12.477-45.256 0l-60.743 60.745-7.477-7.478c-12.476-12.476-32.777-12.478-45.255.001-12.477 12.477-12.477 32.777 0 45.255l30.104 30.104c6.044 6.044 14.08 9.372 22.627 9.372s16.583-3.328 22.627-9.372l38.986-38.985a7.5 7.5 0 00-10.607-10.607l-38.985 38.985c-3.211 3.211-7.48 4.979-12.021 4.979s-8.81-1.769-12.021-4.979l-30.104-30.104c-6.628-6.629-6.628-17.414 0-24.042 6.629-6.629 17.413-6.629 24.042 0l12.78 12.78a7.5 7.5 0 0010.606 0l66.047-66.048c6.627-6.629 17.414-6.629 24.041 0 6.629 6.628 6.628 17.413 0 24.041zm-133.271-54.747a7.5 7.5 0 00-7.5 7.5v4.493h-4.493c-4.142 0-7.5 3.357-7.5 7.5s3.358 7.5 7.5 7.5h4.493v4.493c0 4.143 3.358 7.5 7.5 7.5s7.5-3.357 7.5-7.5v-4.493h4.493c4.142 0 7.5-3.357 7.5-7.5s-3.358-7.5-7.5-7.5h-4.493v-4.493a7.5 7.5 0 00-7.5-7.5z\"></path>\n      </g>\n    </svg>\n  );\n}\n","import { useQuery, UseQueryResult } from '@tanstack/react-query';\nimport moment from 'moment';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Services\nimport { DAILY_API, DAILY_API_ACTIONS } from 'services/adapters';\n// Utils\nimport { print } from 'utils/helpers';\n// Internal\nimport { DailyResponse } from '../utils/types';\nimport { getSourceName, getToday } from '../utils';\nimport { createContext, ReactNode, useContext } from 'react';\n\ntype DailyContextType = Pick<\n  UseQueryResult<DailyResponse, Error>,\n  'isLoading' | 'data' | 'error' | 'isError' | 'isRefetching'\n>;\n\nconst DailyContext = createContext<DailyContextType>({\n  isLoading: false,\n  data: undefined,\n  error: null,\n  isError: false,\n  isRefetching: false,\n});\n\ntype DailyContextProviderProps = {\n  children: ReactNode;\n};\n\nexport const DailyContextProvider = ({ children }: DailyContextProviderProps) => {\n  const { language } = useLanguage();\n  const collectionName = getSourceName(language);\n\n  // Load challenge\n  const query = useQuery<DailyResponse>({\n    queryKey: [collectionName, language],\n    queryFn: async () => {\n      console.count(`Fetching ${collectionName}...`);\n      const response = await DAILY_API.run({\n        action: DAILY_API_ACTIONS.GET_DAILY,\n        date: getToday(),\n        document: collectionName,\n      });\n      const responseData = response.data as DailyResponse;\n      print({ [collectionName]: responseData }, 'table');\n      return responseData;\n    },\n    staleTime: () => {\n      // Calculate time until midnight\n      const now = moment();\n      const midnight = moment().endOf('day');\n      return midnight.diff(now); // Difference in milliseconds\n    },\n    enabled: language === 'pt',\n    retry: false,\n  });\n\n  return (\n    <DailyContext.Provider\n      value={{\n        isLoading: query.isLoading,\n        data: query.data,\n        error: query.error,\n        isError: query.isError,\n        isRefetching: query.isRefetching,\n      }}\n    >\n      {children}\n    </DailyContext.Provider>\n  );\n};\n\nexport const useDailyChallenge = () => {\n  const context = useContext(DailyContext);\n  if (context === undefined) {\n    throw new Error('useDailyChallenge must be used within a DailyContextProvider');\n  }\n  return context;\n};\n","export const SETTINGS = {\n  NAME: { pt: 'Aqui Ó', en: 'Find This' },\n  ICON: '🔍',\n  HEARTS: 3,\n  GOAL: 15,\n  TD_DAILY_AQUI_O_MODE: 'TD_AQUI_DAILY_O_MODE',\n  KEY: 'AQUI_O',\n};\n","export const SETTINGS = {\n  NAME: { pt: 'Arte Ruim', en: 'Questionable Art' },\n  ICON: '🖼️',\n  HEARTS: 3,\n  KEY: 'ARTE_RUIM',\n};\n","export const SETTINGS = {\n  NAME: { pt: 'Picaço!', en: 'Big Artist' },\n  DURATION: 60,\n  DRAWINGS: 6,\n  KEY: 'PICACO',\n};\n","export const SETTINGS = {\n  NAME: { pt: 'Controle De Estoque', en: 'Warehouse Stock' },\n  ICON: '📦',\n  HEARTS: 4,\n  KEY: 'CONTROLE_DE_ESTOQUE',\n};\n\nexport const PHASES = {\n  STOCKING: 'STOCKING',\n  FULFILLING: 'FULFILLING',\n  DELIVERING: 'DELIVERING',\n} as const;\n","export const SETTINGS = {\n  NAME: { pt: 'Filmaço', en: 'Movicon' },\n  ICON: '🎬',\n  HEARTS: 3,\n  KEY: 'FILMACO',\n};\n","export const SETTINGS = {\n  NAME: { pt: 'Palavreado', en: 'Word Game' },\n  ICON: '🔤',\n  HEARTS: 4,\n  WORD_LENGTH: 4,\n  KEY: 'PALAVREADO',\n};\n","export const SETTINGS = {\n  NAME: { pt: 'Teoria de Conjuntos', en: 'Diagram Theory' },\n  ICON: '⭕️',\n  HEARTS: 4,\n  KEY: 'TEORIA_DE_CONJUNTOS',\n};\n","import { useNavigate } from 'react-router-dom';\n// Ant Design Resources\nimport { BugOutlined } from '@ant-design/icons';\nimport { App, Button, Flex, Popconfirm } from 'antd';\n// Utils\nimport { isDevEnv } from 'utils/helpers';\n// Components\nimport { Translate } from 'components/language';\n// Internal\nimport { SETTINGS as AQUI_O } from '../games/AquiO/utils/settings';\nimport { SETTINGS as ARTE_RUIM } from '../games/ArteRuim/utils/settings';\nimport { SETTINGS as ARTISTA } from '../games/Picaco/utils/settings';\nimport { SETTINGS as CONTROLE_DE_ESTOQUE } from '../games/ControleDeEstoque/utils/settings';\nimport { SETTINGS as FILMACO } from '../games/Filmaco/utils/settings';\nimport { SETTINGS as PALAVREADO } from '../games/Palavreado/utils/settings';\nimport { SETTINGS as TEORIA_DE_CONJUNTOS } from '../games/TeoriaDeConjuntos/utils/settings';\nimport { composeLocalPlayedKey, composeLocalTodayKey } from '../utils';\n\nconst keys = [AQUI_O, ARTE_RUIM, PALAVREADO, ARTISTA, FILMACO, CONTROLE_DE_ESTOQUE, TEORIA_DE_CONJUNTOS];\n\ntype DevResetLocalStorageButtonProps = {\n  localStorageKey?: string;\n};\n\nexport function DevResetLocalStorageButton({ localStorageKey }: DevResetLocalStorageButtonProps) {\n  const { message } = App.useApp();\n  const navigate = useNavigate();\n\n  const onReset = () => {\n    if (localStorageKey) {\n      localStorage.removeItem(composeLocalTodayKey(localStorageKey));\n      localStorage.removeItem(composeLocalPlayedKey(localStorageKey));\n    } else {\n      keys.forEach((key) => {\n        localStorage.removeItem(composeLocalTodayKey(key.KEY));\n        localStorage.removeItem(composeLocalPlayedKey(key.KEY));\n      });\n    }\n    message.success(<Translate pt=\"LS resetado corretamente\" en=\"LS reset successfully\" />);\n    navigate('/diario');\n  };\n\n  const onDayBefore = () => {\n    const yesterday = JSON.stringify({\n      id: '2023-10-30',\n      number: -1,\n    });\n    if (localStorageKey) {\n      localStorage.setItem(composeLocalTodayKey(localStorageKey), yesterday);\n      return;\n    } else {\n      keys.forEach((key) => {\n        localStorage.setItem(composeLocalTodayKey(key.KEY), yesterday);\n        localStorage.setItem(composeLocalPlayedKey(key.KEY), yesterday);\n      });\n    }\n    navigate('/diario');\n  };\n\n  return (\n    <Flex justify=\"center\" gap={12}>\n      <Popconfirm\n        title={\n          <Translate\n            pt=\"Tem certeza que quer resetar o jogo?\"\n            en=\"Are you sure you want to reset the game?\"\n          />\n        }\n        onConfirm={onReset}\n      >\n        <Button size=\"large\" type=\"dashed\" icon={<BugOutlined />}>\n          <Translate pt=\"Resetar LS\" en=\"Reset LS\" />\n        </Button>\n      </Popconfirm>\n      {isDevEnv && (\n        <Button size=\"large\" type=\"dashed\" onClick={onDayBefore} icon={<BugOutlined />}>\n          Yesterday LS\n        </Button>\n      )}\n    </Flex>\n  );\n}\n","import { ReactNode, useState } from 'react';\n// Ant Design Resources\nimport { Layout, Typography } from 'antd';\n// Components\nimport { IconAvatar } from 'components/avatars';\n// Internal\nimport { DevResetLocalStorageButton } from './DevResetLocalStorageButton';\n\ntype HeaderProps = {\n  icon: ReactNode;\n  children: ReactNode;\n  localStorageKey: string;\n};\n\nexport function Header({ icon, children, localStorageKey }: HeaderProps) {\n  const [count, setCount] = useState(0);\n\n  return (\n    <Layout.Header className=\"daily-header\">\n      <button\n        onClick={localStorageKey ? () => setCount((prev) => prev + 1) : undefined}\n        className=\"invisible-secret-button daily-header\"\n      >\n        <IconAvatar icon={icon} className=\"daily-header__icon\" />\n        <Typography.Title level={1} className=\"daily-heading\">\n          {children}\n        </Typography.Title>\n      </button>\n      {count >= 5 && <DevResetLocalStorageButton localStorageKey={localStorageKey} />}\n    </Layout.Header>\n  );\n}\n","import { ReactNode, useState } from 'react';\n// Ant Design Resources\nimport { Layout } from 'antd';\n// Icons\nimport { CalendarIcon } from 'icons/CalendarIcon';\n// Components\nimport { Translate } from 'components/language';\n// Internal\nimport { useDailyChallenge } from '../hooks/useDailyChallenge';\nimport { DevResetLocalStorageButton } from './DevResetLocalStorageButton';\nimport { Header } from './Header';\n\nconst { Content, Footer } = Layout;\n\ntype DailyChromeProps = {\n  children: ReactNode;\n};\n\nexport function DailyChrome({ children }: DailyChromeProps) {\n  const challengeQuery = useDailyChallenge();\n  const [count, setCount] = useState(0);\n\n  return (\n    <Layout className=\"app\">\n      <Header icon={<CalendarIcon />} localStorageKey=\"\">\n        <button onClick={() => setCount((prev) => prev + 1)} className=\"invisible-secret-button\">\n          <Translate pt=\"TD Diário\" en=\"TD Daily\" />\n        </button>\n      </Header>\n      {challengeQuery.isLoading && <div className=\"loading-bar\"></div>}\n      <Content>{children}</Content>\n      {count >= 5 && (\n        <Footer>\n          <DevResetLocalStorageButton />\n        </Footer>\n      )}\n    </Layout>\n  );\n}\n","import { useNavigate } from 'react-router-dom';\n// Ant Design Resources\nimport { Alert, Button, Space, Typography } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Translate } from 'components/language';\n// Internal\nimport { DailyChrome } from './DailyChrome';\n\nexport function DailyError() {\n  const { toggleLanguage, language } = useLanguage();\n  const navigate = useNavigate();\n\n  const onRedirect = () => {\n    toggleLanguage();\n    navigate(language === 'en' ? '/diario' : '/daily');\n  };\n  return (\n    <DailyChrome>\n      <Space className=\"container container--center\">\n        <Alert\n          message={\n            <Translate pt=\"O servidor decidiu não cooperar\" en=\"The server decided not to cooperate\" />\n          }\n          description={\n            <Space direction=\"vertical\">\n              <Typography.Paragraph>\n                <Translate\n                  en=\"It's likely that the administrator forgot to generate new challenges for today. If you know them, please complain immediately. Bullying is the way.\"\n                  pt=\"Provavelmente o administrador esqueceu de gerar novos desafios para hoje. Se você os conhece, reclame imediatamente. O bullying é o caminho.\"\n                />\n                <br />\n                <Translate\n                  en=\"It is also possible that you are in the wrong URL. Press here to go back to the right page.\"\n                  pt=\"Também é possível que você esteja na URL errada. Pressione aqui para voltar para a página correta.\"\n                />\n                <Button type=\"link\" onClick={onRedirect}>\n                  Redirecionar/Redirect\n                </Button>\n              </Typography.Paragraph>\n            </Space>\n          }\n          type=\"error\"\n          showIcon\n        />\n      </Space>\n    </DailyChrome>\n  );\n}\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Loading } from 'components/loaders';\n// Internal\nimport { DailyChrome } from './DailyChrome';\n\nexport function DailyLoading() {\n  const { translate } = useLanguage();\n  return (\n    <DailyChrome>\n      <div className=\"daily-loading\">\n        <Space className=\"space-container\">\n          <Loading message={translate('Carregando desafio...', 'Loading challenge...')} margin />\n        </Space>\n      </div>\n    </DailyChrome>\n  );\n}\n","import { useQuery } from '@tanstack/react-query';\nimport { sample } from 'lodash';\n// Utils\nimport { print } from 'utils/helpers';\n// Internal\nimport { AquiOSet, DailyAquiOEntry } from '../utils/types';\nimport { wait } from '../../../utils';\nimport miscSets from './misc-sets.json';\n\nconst MISC_SETS: AquiOSet[] = miscSets;\n\nexport function useRandomAquiOChallenge(collectionName: string) {\n  // Load challenge\n  return useQuery<DailyAquiOEntry>({\n    queryKey: [collectionName, 'aqui-o', 'random'],\n    queryFn: async () => {\n      console.count(`Creating Ache Isso ${collectionName}...`);\n      // Build game getting the set based on today's date\n      await wait(150);\n\n      const chosenSet = sample(MISC_SETS)!;\n\n      const gameData: DailyAquiOEntry = {\n        id: 'random',\n        type: 'aqui-o',\n        setId: chosenSet.title.en,\n        title: chosenSet.title,\n        itemsIds: chosenSet.itemsIds,\n        number: 0,\n      };\n\n      print({ [collectionName]: gameData }, 'table');\n      return gameData;\n    },\n    retry: false,\n  });\n}\n","import { useState } from 'react';\n\nexport function useDailyGameState<TState = PlainObject>(initialState: TState) {\n  const [state, setState] = useState<TState>(initialState);\n\n  const updateState = (newState: Partial<TState>) => {\n    setState((prev) => ({ ...prev, ...newState }));\n  };\n\n  return { state, setState, updateState };\n}\n","import { useEffect } from 'react';\nimport { useLocalStorage } from 'react-use';\n// Internal\nimport { WithRequiredId } from '../utils/types';\nimport { composeLocalPlayedKey, composeLocalTodayKey } from '../utils';\n\ntype UseDailyLocalTodayProps<TLocal> = {\n  key: string;\n  gameId: string;\n  defaultValue: TLocal;\n};\n\n/**\n * Custom hook for managing local state related to the current day.\n * @param options - The options for the hook.\n * @param options.key - The key used to compose the local storage key.\n * @param options.gameId - The ID of the game.\n * @param options.defaultValue - The default value for the local state.\n * @returns - An object containing the current local state and a function to update it.\n */\nexport function useDailyLocalToday<TLocal extends WithRequiredId>({\n  key,\n  gameId,\n  defaultValue,\n}: UseDailyLocalTodayProps<TLocal>) {\n  const localKey = composeLocalTodayKey(key);\n  const [localToday, setLocalToday] = useLocalStorage<TLocal>(localKey, {\n    status: 'idle',\n    ...defaultValue,\n    id: gameId,\n  });\n\n  const updateLocalStorage = (value: Partial<TLocal>) => {\n    setLocalToday((prev) => ({ ...(prev ?? defaultValue), id: gameId, ...value }));\n  };\n\n  return {\n    localToday,\n    updateLocalStorage,\n  };\n}\n\n/**\n * Marks a key as played if it is complete.\n * @param key - The key to mark as played.\n * @param isComplete - Whether the key is complete.\n */\nexport function useMarkAsPlayed({ key, isComplete }: { key: string; isComplete: boolean }) {\n  const localPlayedKey = composeLocalPlayedKey(key);\n  const [played, setPlayed] = useLocalStorage<boolean>(localPlayedKey, false);\n\n  useEffect(() => {\n    if (!played && isComplete) {\n      setPlayed(true);\n    }\n  }, [isComplete, played, setPlayed]);\n}\n","import { useEffect, useState } from 'react';\n\nexport function useShowResultModal(condition: boolean, onUpdate?: GenericFunction) {\n  const [showResultModal, setShowResultModal] = useState(false);\n\n  // Controls auto result modal\n  useEffect(() => {\n    if (condition) {\n      setShowResultModal(true);\n      onUpdate?.();\n    }\n  }, [condition]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return { showResultModal, setShowResultModal };\n}\n","import { chain, orderBy, random, sample, sampleSize, shuffle } from 'lodash';\nimport { loadLocalToday } from 'pages/Daily/utils';\n// Utils\nimport { SEPARATOR } from 'utils/constants';\nimport { deepCopy } from 'utils/helpers';\n// Internal\nimport { AquiODisc, AquiOLocalToday, DailyAquiOEntry, GameState } from './types';\nimport { SETTINGS } from './settings';\n\nexport const DEFAULT_LOCAL_TODAY: AquiOLocalToday = {\n  id: '',\n  number: 0,\n  maxProgress: 0,\n  hardMode: false,\n  attempts: 0,\n  hearts: SETTINGS.HEARTS,\n};\n\n/**\n * Retrieves the initial state for the game.\n * @param data - The DailyAquiOEntry data.\n * @param isRandomGame - A boolean indicating if the game is random.\n * @returns The initial game state.\n */\nexport const getInitialState = (data: DailyAquiOEntry, isRandomGame: boolean): GameState => {\n  const localToday = loadLocalToday({\n    key: SETTINGS.KEY,\n    gameId: data.id,\n    defaultValue: deepCopy(DEFAULT_LOCAL_TODAY),\n  });\n\n  const state: GameState = {\n    hearts: SETTINGS.HEARTS,\n    goal: SETTINGS.GOAL,\n    discs: [],\n    discIndex: 0,\n    attempts: 0,\n    maxProgress: 0,\n  };\n\n  if (!isRandomGame) {\n    state.attempts = localToday.attempts ?? 0;\n    state.discIndex = localToday.maxProgress ?? 0;\n    state.maxProgress = localToday.maxProgress ?? 0;\n    state.hearts = localToday.hearts ?? SETTINGS.HEARTS;\n  }\n\n  return state;\n};\n\nexport const getDiscs = (entry: DailyAquiOEntry, challengingGame?: boolean): AquiODisc[] => {\n  const allItems = shuffle(entry.itemsIds);\n\n  const discs: AquiODisc[] = [];\n\n  for (let i = 0; i < 17; i++) {\n    const previousCard = discs[i - 1];\n\n    const card = createCards(allItems, previousCard, challengingGame ? discs[i - 1]?.match : undefined);\n    discs.push(card);\n  }\n\n  return discs;\n};\n\nconst POSITIONS = Array(9)\n  .fill(0)\n  .map((_, i) => i);\nconst SIZES = [100, 90, 110, 80, 105, 130, 120, 150];\n\nconst Z_INDEXES: NumberDictionary = {\n  80: 7,\n  90: 6,\n  100: 5,\n  105: 4,\n  110: 3,\n  120: 2,\n  130: 1,\n  150: 0,\n};\n\nfunction createCards(list: string[], previousCard?: AquiODisc, previousMatchId?: string): AquiODisc {\n  const shuffledList = shuffle(list);\n  const randomPositions = shuffle(POSITIONS);\n  const randomSizes = shuffle(SIZES);\n\n  if (!previousCard) {\n    const items = sampleSize(shuffledList, 8).map((itemId, i) => ({\n      itemId,\n      position: randomPositions[i],\n      size: randomSizes[i],\n      rotation: random(0, 360),\n      zIndex: Z_INDEXES[randomSizes[i]],\n    }));\n\n    return {\n      id: orderBy(items.map((item) => Number(item.itemId))).join(SEPARATOR),\n      items,\n    };\n  }\n\n  const previousCardItems = previousCard.items.map((item) => item.itemId);\n\n  const newCardItems = chain(shuffledList).difference(previousCardItems).take(7).value();\n  const matchingItem =\n    sample(previousCardItems.filter((item) => item !== previousMatchId)) ?? previousCardItems[0];\n\n  const items = shuffle([...newCardItems, matchingItem]).map((itemId, i) => ({\n    itemId,\n    position: randomPositions[i],\n    size: randomSizes[i],\n    rotation: random(0, 360),\n    zIndex: Z_INDEXES[randomSizes[i]],\n  }));\n\n  return {\n    id: orderBy(items.map((item) => Number(item.itemId))).join(SEPARATOR),\n    items,\n    match: matchingItem,\n  };\n}\n","import { useState } from 'react';\nimport { ReactNode } from 'react';\nimport { Link } from 'react-router-dom';\n// Ant Design Resources\nimport { AppstoreFilled, HeartFilled, HeartOutlined, QuestionCircleFilled } from '@ant-design/icons';\nimport { Button, Drawer, Space } from 'antd';\n// Components\nimport { LanguageSwitch, Translate } from 'components/language';\n\ntype MenuProps = {\n  hearts: number;\n  total: number;\n  openRules: boolean;\n  rules: ReactNode;\n};\n\nexport function Menu({ hearts, total, openRules, rules }: MenuProps) {\n  return (\n    <div className=\"menu\">\n      <DailyHubLink />\n      <Hearts remaining={hearts} total={total} />\n      <RulesModal defaultOpen={openRules} rules={rules} />\n    </div>\n  );\n}\n\ntype HeartsProps = {\n  remaining: number;\n  total: number;\n};\n\nfunction Hearts({ remaining, total }: HeartsProps) {\n  const hearts = Array(total)\n    .fill(false)\n    .map((_, i) => i < remaining);\n\n  return (\n    <div className=\"menu-hearts\">\n      {hearts.map((heart, i) => (heart ? <HeartFilled key={i} /> : <HeartOutlined key={i} />))}\n    </div>\n  );\n}\n\ntype RulesModalProps = {\n  rules: ReactNode;\n  defaultOpen: boolean;\n};\n\nfunction RulesModal({ rules, defaultOpen }: RulesModalProps) {\n  const [open, setOpen] = useState(defaultOpen);\n\n  return (\n    <>\n      <Button\n        type=\"text\"\n        style={{ color: 'white' }}\n        icon={<QuestionCircleFilled />}\n        onClick={() => setOpen(true)}\n      />\n      <Drawer\n        title={<Translate pt=\"Regras\" en=\"Rules\" />}\n        placement=\"bottom\"\n        open={open}\n        onClose={() => setOpen(false)}\n      >\n        <Space direction=\"vertical\" size=\"small\">\n          <LanguageSwitch />\n          <ul className=\"list\">{rules}</ul>\n        </Space>\n      </Drawer>\n    </>\n  );\n}\n\nfunction DailyHubLink() {\n  return (\n    <Link to=\"/diario/hub\">\n      <Button type=\"text\" style={{ color: 'white' }} icon={<AppstoreFilled />} />\n    </Link>\n  );\n}\n","import clsx from 'clsx';\n// Components\nimport { ItemCard } from 'components/cards/ItemCard';\n// Internal\nimport { AquiODisc } from '../utils/types';\n\ntype DiscProps = {\n  disc: AquiODisc;\n  onSelect: (itemId: string) => void;\n  width: number;\n  className: string;\n};\nexport function Disc({ disc, onSelect, width, className }: DiscProps) {\n  return (\n    <div className={clsx('aqui-o-disc', className)} style={{ width: width, height: width }}>\n      {disc.items.map((item) => (\n        <div\n          key={item.itemId}\n          className={clsx('aqui-o-disc-item', `aqui-o-disc-item--pos-${item.position}`)}\n          style={{\n            transform: `rotate(${item.rotation}deg) scale(${item.size / 100})`,\n            zIndex: item.zIndex,\n          }}\n          role=\"button\"\n          onClick={() => onSelect(item.itemId)}\n        >\n          <ItemCard id={item.itemId} className=\"aqui-o-disc-sprite\" width={width / 4} />\n        </div>\n      ))}\n    </div>\n  );\n}\n","// Components\nimport { ItemCard } from 'components/cards/ItemCard';\n\ntype PreloadItemsProps = {\n  items: string[];\n};\n\nexport function PreloadItems({ items }: PreloadItemsProps) {\n  return (\n    <div style={{ display: 'none' }}>\n      {items.map((itemId) => (\n        <ItemCard key={itemId} id={itemId} className=\"transparent\" width={1} />\n      ))}\n    </div>\n  );\n}\n","import { Link } from 'react-router-dom';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Icons\nimport { DailyArtGameIcon } from 'icons/DailyArtGameIcon';\nimport { DailyDiagramGameIcon } from 'icons/DailyDiagramGameIcon';\nimport { DailyDrawingGameIcon } from 'icons/DailyDrawingGameIcon';\nimport { DailyFindingGameIcon } from 'icons/DailyFindingGameIcon';\nimport { DailyMovieGameIcon } from 'icons/DailyMovieGameIcon';\nimport { DailyWarehouseGameIcon } from 'icons/DailyWarehouseGameIcon';\nimport { DailyWordGameIcon } from 'icons/DailyWordGameIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { DualTranslate, Translate } from 'components/language';\n// Internal\nimport { SETTINGS as AQUI_O } from '../games/AquiO/utils/settings';\nimport { SETTINGS as ARTE_RUIM } from '../games/ArteRuim/utils/settings';\nimport { SETTINGS as ARTISTA } from '../games/Picaco/utils/settings';\nimport { SETTINGS as CONTROLE_DE_ESTOQUE } from '../games/ControleDeEstoque/utils/settings';\nimport { SETTINGS as FILMACO } from '../games/Filmaco/utils/settings';\nimport { SETTINGS as PALAVREADO } from '../games/Palavreado/utils/settings';\nimport { SETTINGS as TEORIA_DE_CONJUNTOS } from '../games/TeoriaDeConjuntos/utils/settings';\nimport { checkWasPlayedToday } from '../utils';\n\nconst PRIORITY_LIST = [\n  TEORIA_DE_CONJUNTOS,\n  ARTE_RUIM,\n  FILMACO,\n  PALAVREADO,\n  AQUI_O,\n  CONTROLE_DE_ESTOQUE,\n  ARTISTA,\n];\n\nconst getNextGame = (): string => {\n  for (const game of PRIORITY_LIST) {\n    if (!checkWasPlayedToday(game.KEY)) {\n      return game.KEY;\n    }\n  }\n  return '';\n};\n\nexport function NextGameSuggestion() {\n  switch (getNextGame()) {\n    case AQUI_O.KEY:\n      return (\n        <Typography.Paragraph className=\"center\" strong>\n          <Translate\n            pt=\"Já encontrou a coisa em comum? Ela está...\"\n            en=\"Have you found the matching thing?\"\n          />\n          <br />\n\n          <Link to=\"/diario/aqui-o\">\n            <IconAvatar icon={<DailyFindingGameIcon />} /> <DualTranslate>{AQUI_O.NAME}</DualTranslate>!\n          </Link>\n        </Typography.Paragraph>\n      );\n\n    case ARTE_RUIM.KEY:\n      return (\n        <Typography.Paragraph className=\"center\" strong>\n          <Translate pt=\"Adivinhe o título das obras de arte!\" en=\"Guess the title of the artworks!\" />\n          <br />\n          <Link to=\"/diario/arte-ruim\">\n            <IconAvatar icon={<DailyArtGameIcon />} /> <DualTranslate>{ARTE_RUIM.NAME}</DualTranslate>!\n          </Link>\n        </Typography.Paragraph>\n      );\n\n    case CONTROLE_DE_ESTOQUE.KEY:\n      return (\n        <Typography.Paragraph className=\"center\" strong>\n          <Translate\n            pt=\"Venha aplicar um feng-shui nessa prateleira!\"\n            en=\"Come apply some feng-shui to this shelf!\"\n          />\n          <br />\n          <Link to=\"/diario/controle-de-estoque\">\n            <IconAvatar icon={<DailyWarehouseGameIcon />} />{' '}\n            <DualTranslate>{CONTROLE_DE_ESTOQUE.NAME}</DualTranslate>!\n          </Link>\n        </Typography.Paragraph>\n      );\n\n    case FILMACO.KEY:\n      return (\n        <Typography.Paragraph className=\"center\" strong>\n          <Translate\n            pt=\"Pegue a pipoca e venha descobrir esse filme!\"\n            en=\"Get the popcorn and come find out about this movie!\"\n          />\n          <br />\n          <Link to=\"/diario/filmaco\">\n            <IconAvatar icon={<DailyMovieGameIcon />} /> <DualTranslate>{FILMACO.NAME}</DualTranslate>!\n          </Link>\n        </Typography.Paragraph>\n      );\n\n    case PALAVREADO.KEY:\n      return (\n        <Typography.Paragraph className=\"center\" strong>\n          <Translate\n            pt=\"E se o caça palavras estivesse todo embaralhado?\"\n            en=\"What if the word search was all scrambled?\"\n          />\n          <br />\n\n          <Link to=\"/diario/palavreado\">\n            <IconAvatar icon={<DailyWordGameIcon />} /> <DualTranslate>{PALAVREADO.NAME}</DualTranslate>!\n          </Link>\n        </Typography.Paragraph>\n      );\n\n    case ARTISTA.KEY:\n      return (\n        <Typography.Paragraph className=\"center\" strong>\n          <Translate\n            pt=\"Já desenhou hoje? Novas frases todos os dias!\"\n            en=\"Already drawn today? New phrases every day!\"\n          />\n          <br />\n          <Link to=\"/diario/picaco\">\n            <IconAvatar icon={<DailyDrawingGameIcon />} /> <DualTranslate>{ARTISTA.NAME}</DualTranslate>!\n          </Link>\n        </Typography.Paragraph>\n      );\n\n    case TEORIA_DE_CONJUNTOS.KEY:\n      return (\n        <Typography.Paragraph className=\"center\" strong>\n          <Translate pt=\"Quantas vogais têm em PQP?\" en=\"Can you solve this set challenge?\" />\n          <br />\n          <Link to=\"/diario/teoria-de-conjuntos\">\n            <IconAvatar icon={<DailyDiagramGameIcon />} />{' '}\n            <DualTranslate>{TEORIA_DE_CONJUNTOS.NAME}</DualTranslate>!\n          </Link>\n        </Typography.Paragraph>\n      );\n\n    default:\n      return (\n        <Typography.Paragraph className=\"center\" strong>\n          <Translate pt=\"Você já jogou todos os jogos de hoje!\" en=\"You've played all today's games!\" />\n          <br />\n          <Translate pt=\"Que eficiência!\" en=\"How efficient!\" />\n        </Typography.Paragraph>\n      );\n  }\n}\n","import { useEffect } from 'react';\nimport { useCopyToClipboard } from 'react-use';\n// Ant Design Resources\nimport { App, Input, Space, Typography } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { TransparentButton } from 'components/buttons';\nimport { Translate } from 'components/language';\n\ntype CopyToClipboardResultProps = {\n  result: string;\n  rows?: number;\n};\n\nexport function CopyToClipboardResult({ result, rows = 4 }: CopyToClipboardResultProps) {\n  const { message } = App.useApp();\n  const { translate } = useLanguage();\n  const [state, copyToClipboard] = useCopyToClipboard();\n\n  useEffect(() => {\n    if (state.value) {\n      message.info(\n        translate(\n          `Copiado para a área de transferência: ${state.value}`,\n          `Copied to clipboard: ${state.value}`\n        )\n      );\n    }\n  }, [state, message, translate]);\n\n  return (\n    <Space direction=\"vertical\" className=\"space-container full-width\">\n      <TransparentButton onClick={() => copyToClipboard(result)}>\n        <Input.TextArea value={result} readOnly cols={30} rows={rows} />\n      </TransparentButton>\n\n      <Typography.Paragraph className=\"center\">\n        <Translate\n          pt=\"Clique no campo acima para copiar e compartilhe com os amigos\"\n          en=\"Click the field above to copy and share it with friends\"\n        />\n      </Typography.Paragraph>\n    </Space>\n  );\n}\n","import clsx from 'clsx';\nimport { NextGameSuggestion } from 'pages/Daily/components/NextGameSuggestion';\nimport { getDailyName, getSourceName, writeHeartResultString } from 'pages/Daily/utils';\n// Ant Design Resources\nimport { Flex, Space, Typography } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Icons\nimport { ApplauseIcon } from 'icons/ApplauseIcon';\nimport { SealOfApprovalIcon } from 'icons/SealOfApprovalIcon';\nimport { SkullIcon } from 'icons/SkullIcon';\nimport { TrophyIcon } from 'icons/TrophyIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { Translate } from 'components/language';\n// Internal\nimport { SETTINGS } from '../utils/settings';\nimport { CopyToClipboardResult } from '../../../components/CopyToClipboardResult';\n\nconst titles = [\n  <>\n    <IconAvatar icon={<SkullIcon />} /> <Translate pt=\"Você é muito ruim!\" en=\"You are really bad!\" />\n  </>,\n  <>\n    <IconAvatar icon={<SealOfApprovalIcon />} /> <Translate pt=\"Foi bem mais ou menos!\" en=\"Pretty Weak!\" />\n  </>,\n  <>\n    <IconAvatar icon={<ApplauseIcon />} /> <Translate pt=\"Muito bom!\" en=\"Very good!\" />\n  </>,\n  <>\n    <IconAvatar icon={<TrophyIcon />} /> <Translate pt=\"Parabéns!\" en=\"Congratulations!\" />\n  </>,\n  <>\n    <IconAvatar icon={<TrophyIcon />} /> <Translate pt=\"Incrível!\" en=\"Incredible!\" />\n  </>,\n];\n\nconst getTitle = (progress: number, remainingHearts: number) => {\n  if (progress <= 3 || remainingHearts === 0) return titles[0];\n  if (progress <= 8) return titles[1];\n  if (progress <= 10) return titles[2];\n  if (progress < 15) return titles[3];\n\n  return titles[4];\n};\n\ntype ResultsModalContentProps = {\n  challengeTitle: string;\n  challengeNumber: number;\n  hearts: number;\n  progress: number;\n  itemsIds: string[];\n  isRandomGame: boolean;\n  hardMode: boolean;\n  lastMatch: string;\n  maxProgress: number;\n  attempts: number;\n};\n\nexport function ResultsModalContent({\n  challengeTitle,\n  challengeNumber,\n  hearts,\n  progress,\n  itemsIds,\n  isRandomGame,\n  hardMode,\n  lastMatch,\n  maxProgress,\n  attempts,\n}: ResultsModalContentProps) {\n  const { language, dualTranslate } = useLanguage();\n  const result = writeResult({\n    game: dualTranslate(SETTINGS.NAME),\n    title: challengeTitle,\n    remainingHearts: hearts,\n    totalHearts: SETTINGS.HEARTS,\n    progress: Math.max(progress, maxProgress),\n    goal: SETTINGS.GOAL,\n    language,\n    hardMode,\n    challengeNumber,\n    attempts,\n  });\n\n  const title = getTitle(progress, hearts);\n  const worse = maxProgress > progress;\n\n  return (\n    <Space direction=\"vertical\" className=\"space-container\">\n      <Typography.Title level={2} className=\"center\">\n        {title}\n      </Typography.Title>\n      <Typography.Paragraph className=\"center\">\n        <Translate\n          pt={`Você avançou ${progress} discos de ${SETTINGS.GOAL}.`}\n          en={`You advanced ${progress} discs out of ${SETTINGS.GOAL}.`}\n        />\n        <br />\n      </Typography.Paragraph>\n      {!isRandomGame && (\n        <Typography.Paragraph className=\"center\">\n          <Translate\n            pt=\"Você pode tentar novamente até conseguir 15 ou até não ter mais corações.\"\n            en=\"You can try again until you reach 15 or until you run out of hearts.\"\n          />\n          {worse && (\n            <>\n              <br />\n              <Translate\n                pt={`Seu melhor hoje foi de ${maxProgress} discos. Tente novamente!`}\n                en={`Your best today was ${maxProgress} discs. Try again!`}\n              />\n            </>\n          )}\n        </Typography.Paragraph>\n      )}\n\n      <Flex gap={6}>\n        {!!lastMatch && (\n          <ItemCard\n            id={lastMatch}\n            width={45}\n            className={clsx(getAnimationClass('pulse', { speed: 'fast' }), 'item-match-outline')}\n          />\n        )}\n        {progress > 0 &&\n          itemsIds\n            .filter((id) => id !== lastMatch)\n            .slice(0, Math.floor((progress - 1) / 3))\n            .map((id, index) => (\n              <ItemCard\n                key={id}\n                id={id}\n                width={45}\n                className={getAnimationClass('pulse', { speed: 'fast', delay: index * 0.5 })}\n              />\n            ))}\n      </Flex>\n\n      {!isRandomGame ? (\n        <CopyToClipboardResult result={result} rows={3} />\n      ) : (\n        <Typography.Paragraph className=\"center\">\n          <Translate\n            pt=\"Baralhos aleatórios não são compartilháveis, mas você pode jogar mais.\"\n            en=\"Random decks are not shareable, but you can play more.\"\n          />\n        </Typography.Paragraph>\n      )}\n\n      <NextGameSuggestion />\n    </Space>\n  );\n}\n\nfunction writeResult({\n  game,\n  title,\n  challengeNumber,\n  remainingHearts,\n  totalHearts,\n  progress,\n  goal,\n  language,\n  hardMode,\n  attempts,\n}: {\n  game: string;\n  title: string;\n  challengeNumber: number;\n  remainingHearts: number;\n  totalHearts: number;\n  progress: number;\n  goal: number;\n  language: Language;\n  hardMode: boolean;\n  attempts: number;\n}): string {\n  return [\n    `${SETTINGS.ICON} ${getDailyName(language)} ${game} #${challengeNumber}`,\n    `${title}${hardMode ? '*' : ''}: ${progress}/${goal}  ${writeHeartResultString(remainingHearts, totalHearts)}`,\n    `Tentativas: ${attempts}`,\n    `https://www.kavispires.com/tardedivertida/#/${getSourceName(language)}`,\n  ].join('\\n');\n}\n","// Ant Design Resources\nimport { HeartFilled } from '@ant-design/icons';\nimport { Typography } from 'antd';\n// Components\nimport { Translate } from 'components/language';\n\nexport function Rules() {\n  return (\n    <Typography>\n      <Translate\n        pt={\n          <>\n            <li>Você é apresentado com dois discos com 8 itens cada.</li>\n            <li>Existe apenas um item que é comum nos dois discos, clique nele o mais rápido possível.</li>\n            <li>Você tem 60 segundos para acertar o maior número de discos.</li>\n            <li>\n              Cada item errado que você clica, remove-se um coração e você tem apenas 3 <HeartFilled />.\n            </li>\n            <li>\n              <strong>Modo difícil:</strong> Itens nunca repetem em sequência.\n            </li>\n            <li>Boa sorte e cuidado com dedos gordos!</li>\n          </>\n        }\n        en={\n          <>\n            <li>You are presented with two discs with 8 items each.</li>\n            <li>There is only one item that is common in both discs, click on it as quickly as possible.</li>\n            <li>You have 60 seconds to hit the most discs.</li>\n            <li>\n              Each wrong item you click, a heart is removed and you only have 3 <HeartFilled />.\n            </li>\n            <li>\n              <strong>Hard mode:</strong> Items never repeat in sequence.\n            </li>\n            <li>Good luck and watch out for fat fingers!</li>\n          </>\n        }\n      />\n    </Typography>\n  );\n}\n","import { useMemo } from 'react';\nimport { useMeasure } from 'react-use';\n// Ant Design Resources\nimport { Button, Divider, FloatButton, Layout, Modal, Space, Switch, Typography } from 'antd';\n// Utils\nimport { getAnimationClass, isDevEnv } from 'utils/helpers';\n// Icons\nimport { DailyFindingGameIcon } from 'icons/DailyFindingGameIcon';\n// Components\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { DualTranslate, Translate } from 'components/language';\nimport { TimerBar } from 'components/timers';\n// Internal\nimport { SETTINGS } from '../utils/settings';\nimport { DailyAquiOEntry } from '../utils/types';\nimport { useAquiOEngine } from '../utils/useAquiOEngine';\nimport { getInitialState } from '../utils/helpers';\nimport { Header } from '../../../components/Header';\nimport { Menu } from '../../../components/Menu';\nimport { Disc } from './Disc';\nimport { PreloadItems } from './PreloadItems';\nimport { ResultsModalContent } from './ResultsModalContent';\nimport { Rules } from './Rules';\n\ntype DailyAquiOProps = {\n  data: DailyAquiOEntry;\n  language: Language;\n  onToggleGame: () => void;\n  isRandomGame: boolean;\n};\n\nexport function DailyAquiO({ data, language, onToggleGame, isRandomGame }: DailyAquiOProps) {\n  const initialState = useMemo(() => getInitialState(data, isRandomGame), [isRandomGame]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const {\n    hearts,\n    showResultModal,\n    setShowResultModal,\n    discIndex,\n    isWin,\n    isLose,\n    isComplete,\n    onStart,\n    onSelect,\n    timeLeft,\n    mode,\n    setMode,\n    discA,\n    discB,\n    result,\n    isPlaying,\n    attempts,\n    maxProgress,\n  } = useAquiOEngine(data, initialState, isRandomGame);\n\n  // UI state\n  const [contentRef, contentMeasure] = useMeasure<HTMLDivElement>();\n  const [headerRef, headerMeasure] = useMeasure<HTMLDivElement>();\n  const discWidth = useMemo(() => {\n    const width = contentMeasure.width - 24;\n    const height = (contentMeasure.height - headerMeasure.height) / 2 - 24;\n    return Math.max(Math.min(width, height, 450), 150);\n  }, [contentMeasure.height, contentMeasure.width, headerMeasure.height]);\n\n  return (\n    <Layout className=\"app\">\n      <Header icon={<DailyFindingGameIcon />} localStorageKey={SETTINGS.KEY}>\n        TD <DualTranslate>{SETTINGS.NAME}</DualTranslate> #{data.number}\n      </Header>\n      <Layout.Content ref={contentRef}>\n        <div ref={headerRef}>\n          <Menu hearts={hearts} total={SETTINGS.HEARTS} openRules={true} rules={<Rules />} />\n          <Space className=\"space-container\">\n            <Typography.Text strong>\n              {data.title[language]} | <Translate pt=\"Disco\" en=\"Disc\" /> {discIndex}/{SETTINGS.GOAL}\n              {!isRandomGame && (\n                <>\n                  {' '}\n                  | <Translate pt=\"Tentativa\" en=\"Attempt\" /> {attempts}\n                </>\n              )}\n            </Typography.Text>\n          </Space>\n\n          <div className=\"full-width padding\">\n            <TimerBar value={timeLeft} total={60} />\n          </div>\n        </div>\n\n        <Space className=\"space-container\" direction=\"vertical\">\n          {!isPlaying && (\n            <>\n              <Button\n                size=\"large\"\n                onClick={onStart}\n                type=\"primary\"\n                disabled={isRandomGame ? false : isWin || isLose}\n                icon=\"🔘\"\n              >\n                <Translate pt=\"Começar\" en=\"Start\" />\n                &nbsp;\n                {isRandomGame ? (\n                  <DualTranslate>{data.title}</DualTranslate>\n                ) : (\n                  <Translate pt=\" Diário\" en=\" Daily\" />\n                )}\n              </Button>\n              <PreloadItems items={data.itemsIds} />\n\n              <Switch\n                unCheckedChildren={<Translate pt=\"Modo Normal\" en=\"Normal Mode\" />}\n                checkedChildren={<Translate pt=\"Modo Difícil\" en=\"Challenge Mode\" />}\n                value={mode === 'challenge'}\n                onChange={(checked) => setMode(checked ? 'challenge' : 'normal')}\n              />\n            </>\n          )}\n\n          {isComplete && (\n            <Space className=\"results-container\" align=\"center\" direction=\"vertical\">\n              <Button onClick={() => setShowResultModal(true)}>\n                <Translate pt=\"Ver Resultado\" en=\"Show Results\" />\n              </Button>\n            </Space>\n          )}\n\n          {(isRandomGame || isComplete) && !isPlaying && (\n            <Space className=\"results-container\" align=\"center\" direction=\"vertical\">\n              <Divider />\n\n              <Button onClick={onToggleGame}>\n                {isRandomGame ? (\n                  <Translate pt=\"Jogar o Desafio Diário\" en=\"Play the daily challenge\" />\n                ) : (\n                  <Translate pt=\"Jogar com baralho aleatório\" en=\"Play a random deck\" />\n                )}\n              </Button>\n            </Space>\n          )}\n\n          {isPlaying && (\n            <Space className=\"space-container\" direction=\"vertical\">\n              <Disc\n                disc={discA}\n                onSelect={onSelect}\n                key={discA.id}\n                width={discWidth}\n                className={getAnimationClass('slideInUp', { speed: 'fast' })}\n              />\n              <Disc\n                disc={discB}\n                onSelect={onSelect}\n                key={discB.id}\n                width={discWidth}\n                className={getAnimationClass('zoomIn', { speed: 'fast' })}\n              />\n              <DevResult result={result} />\n            </Space>\n          )}\n\n          <Modal\n            title={<Translate pt=\"Resultado\" en=\"Results\" />}\n            open={showResultModal}\n            onCancel={() => setShowResultModal(false)}\n            okButtonProps={{ hidden: true }}\n            cancelButtonProps={{ hidden: true }}\n          >\n            <ResultsModalContent\n              challengeTitle={data.title[language]}\n              challengeNumber={data.number}\n              hearts={hearts}\n              attempts={attempts}\n              progress={discIndex}\n              itemsIds={data.itemsIds}\n              isRandomGame={isRandomGame}\n              hardMode={mode === 'challenge'}\n              lastMatch={result}\n              maxProgress={maxProgress}\n            />\n          </Modal>\n        </Space>\n      </Layout.Content>\n    </Layout>\n  );\n}\n\nfunction DevResult({ result }: { result: string }) {\n  if (!isDevEnv) return <></>;\n\n  return (\n    <FloatButton shape=\"square\" icon={<ItemCard id={result} width={50} padding={0} className=\"raw-item\" />} />\n  );\n}\n","import { intersectionBy } from 'lodash';\nimport { useDailyGameState } from 'pages/Daily/hooks/useDailyGameState';\nimport { useDailyLocalToday, useMarkAsPlayed } from 'pages/Daily/hooks/useDailyLocalToday';\nimport { useShowResultModal } from 'pages/Daily/hooks/useShowResultModal';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useLocalStorage } from 'react-use';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\n// Utils\nimport { inNSeconds } from 'utils/helpers';\n// Internal\nimport { DEFAULT_LOCAL_TODAY, getDiscs } from './helpers';\nimport { SETTINGS } from './settings';\nimport { AquiOLocalToday, DailyAquiOEntry, GameState } from './types';\n\nconst DURATION = 60;\n\nexport function useAquiOEngine(data: DailyAquiOEntry, initialState: GameState, isRandomGame: boolean) {\n  const [timesUp, setTimesUp] = useState(false);\n\n  const [mode, setMode] = useLocalStorage(SETTINGS.TD_DAILY_AQUI_O_MODE, 'normal');\n\n  const { state, setState, updateState } = useDailyGameState<GameState>(initialState);\n\n  const { updateLocalStorage } = useDailyLocalToday<AquiOLocalToday>({\n    key: SETTINGS.KEY,\n    gameId: data.id,\n    defaultValue: DEFAULT_LOCAL_TODAY,\n  });\n\n  // ADDITIONAL STATE\n  const discA = state.discs[state.discIndex];\n  const discB = state.discs[state.discIndex + 1];\n\n  const result = useMemo(\n    () => intersectionBy(discA?.items ?? [], discB?.items ?? [], 'itemId')?.[0]?.itemId,\n    [discA, discB]\n  );\n\n  // TIMER\n  const { timeLeft, isRunning, restart, pause } = useCountdown({\n    duration: DURATION,\n    autoStart: false,\n    onExpire: () => {\n      setTimesUp(true);\n      if (!isRandomGame) {\n        updateLocalStorage({\n          hardMode: mode === 'challenge',\n          hearts: state.hearts,\n          maxProgress: Math.max(state.discIndex, state.maxProgress),\n        });\n        updateState({\n          maxProgress: Math.max(state.discIndex, state.maxProgress),\n        });\n      }\n    },\n  });\n\n  // ACTIONS\n  const onStart = () => {\n    updateLocalStorage({\n      attempts: state.attempts + 1,\n    });\n    setState((prev) => ({\n      ...prev,\n      discs: getDiscs(data, mode === 'challenge'),\n      discIndex: 0,\n      attempts: prev.attempts + 1,\n    }));\n\n    restart(inNSeconds(DURATION), true);\n  };\n\n  const onSelect = (itemId: string) => {\n    if (itemId === result) {\n      setState((prev) => ({ ...prev, discIndex: prev.discIndex + 1 }));\n    } else {\n      setState((prev) => ({ ...prev, hearts: prev.hearts - 1 }));\n    }\n  };\n\n  // CONDITIONS\n  const isWin = state.discIndex === SETTINGS.GOAL;\n  const isLose = state.hearts <= 0;\n  const isComplete = (isWin || isLose || timesUp || state.attempts > 0) && !isRunning;\n\n  useEffect(() => {\n    if (isWin || isLose) {\n      pause();\n      setTimesUp(true);\n      if (isWin) {\n        updateLocalStorage({\n          maxProgress: SETTINGS.GOAL,\n        });\n      }\n    }\n  }, [isWin, isLose]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useMarkAsPlayed({\n    key: SETTINGS.KEY,\n    isComplete,\n  });\n\n  // RESULTS MODAL\n  const { showResultModal, setShowResultModal } = useShowResultModal(isComplete, () => pause());\n\n  return {\n    hearts: state.hearts,\n    discIndex: state.discIndex,\n    attempts: state.attempts,\n    maxProgress: state.maxProgress,\n    showResultModal,\n    setShowResultModal,\n    isWin,\n    isLose,\n    isComplete,\n    onStart,\n    onSelect,\n    timeLeft,\n    mode,\n    setMode,\n    discA,\n    discB,\n    result,\n    isPlaying: isRunning,\n  };\n}\n","import { DailyError } from 'pages/Daily/components/DailyError';\nimport { DailyLoading } from 'pages/Daily/components/DailyLoading';\nimport { useRandomAquiOChallenge } from 'pages/Daily/games/AquiO/data/useRandomAquiOChallenge';\nimport { useDailyChallenge } from 'pages/Daily/hooks/useDailyChallenge';\nimport { useState } from 'react';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Internal\nimport { DailyAquiO } from './components/DailyAquiO';\nimport { getToday, wait } from '../../utils';\n// Sass\nimport './utils/styles.scss';\n\nexport function DailyAquiOGame() {\n  const today = getToday();\n  const { language } = useLanguage();\n  const [isRandomGame, setRandomGame] = useState(false);\n\n  // Load challenge\n  const challengeQuery = useDailyChallenge();\n  const randomGameQuery = useRandomAquiOChallenge(`${today}`);\n\n  if (challengeQuery.isLoading || challengeQuery.isRefetching || randomGameQuery.isLoading) {\n    return <DailyLoading />;\n  }\n\n  const dailyData = challengeQuery?.data?.['aqui-o'];\n  const data = isRandomGame ? randomGameQuery?.data : dailyData;\n\n  if (challengeQuery.isError || !data) {\n    return <DailyError />;\n  }\n\n  const onToggleGame = async () => {\n    setRandomGame((prev) => !prev);\n    await wait(250);\n  };\n\n  return (\n    <DailyAquiO data={data} language={language} onToggleGame={onToggleGame} isRandomGame={isRandomGame} />\n  );\n}\n","import clsx from 'clsx';\nimport { useEffect } from 'react';\n// Ant Design Resources\nimport { Flex, Space } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Internal\nimport { LettersDictionary } from '../utils/types';\n\nconst NUMBERS = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'];\nconst FIRST_ROW = ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p'];\nconst SECOND_ROW = ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l'];\nconst THIRD_ROW = ['z', 'x', 'c', 'v', 'b', 'n', 'm'];\n\ntype KeyboardProps = {\n  onLetterClick: GenericFunction;\n  lettersState?: LettersDictionary;\n  disabled?: boolean;\n  onEnterClick?: GenericFunction;\n  onBackspaceClick?: GenericFunction;\n  withNumbers?: boolean;\n};\n\nexport function Keyboard({\n  lettersState,\n  onLetterClick,\n  disabled,\n  onBackspaceClick,\n  onEnterClick,\n  withNumbers,\n}: KeyboardProps) {\n  const width = useCardWidth(FIRST_ROW.length + 2, { margin: 16, maxWidth: 30 });\n\n  useEffect(() => {\n    const handleKeyUp = (event: KeyboardEvent) => {\n      const key = event.key;\n      if (disabled) return;\n\n      if (key === 'Enter' && onEnterClick) {\n        return onEnterClick();\n      }\n      if (key === 'Backspace' && onBackspaceClick) {\n        return onBackspaceClick();\n      }\n      if (\n        !disabled &&\n        (FIRST_ROW.includes(key) || SECOND_ROW.includes(key) || THIRD_ROW.includes(key)) &&\n        lettersState?.[key].disabled\n      ) {\n        return onLetterClick(key);\n      }\n    };\n\n    window.addEventListener('keyup', handleKeyUp);\n\n    return () => window.removeEventListener('keyup', handleKeyUp);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <Space direction=\"vertical\" align=\"center\" className=\"daily-keyboard\" size=\"small\">\n      {withNumbers && (\n        <Flex className=\"daily-keyboard__row\">\n          {NUMBERS.map((letter) => (\n            <Key\n              key={letter}\n              width={width}\n              letter={letter}\n              state={lettersState?.[letter]?.state}\n              onLetterClick={onLetterClick}\n              disabled={disabled || lettersState?.[letter]?.disabled}\n            />\n          ))}\n        </Flex>\n      )}\n      <Flex className=\"daily-keyboard__row\">\n        {FIRST_ROW.map((letter) => (\n          <Key\n            key={letter}\n            width={width}\n            letter={letter}\n            state={lettersState?.[letter]?.state}\n            onLetterClick={onLetterClick}\n            disabled={disabled || lettersState?.[letter]?.disabled}\n          />\n        ))}\n      </Flex>\n      <Flex className=\"daily-keyboard__row\">\n        {SECOND_ROW.map((letter) => (\n          <Key\n            key={letter}\n            width={width}\n            letter={letter}\n            state={lettersState?.[letter]?.state}\n            onLetterClick={onLetterClick}\n            disabled={disabled || lettersState?.[letter]?.disabled}\n          />\n        ))}\n      </Flex>\n      <Flex className=\"daily-keyboard__row\">\n        {!!onEnterClick && (\n          <button\n            type=\"button\"\n            style={{ width }}\n            className=\"daily-keyboard__key daily-keyboard__key--enter\"\n            onClick={onEnterClick}\n            disabled={disabled}\n          >\n            Enter\n          </button>\n        )}\n        {THIRD_ROW.map((letter) => (\n          <Key\n            key={letter}\n            width={width}\n            letter={letter}\n            state={lettersState?.[letter]?.state}\n            onLetterClick={onLetterClick}\n            disabled={disabled || lettersState?.[letter]?.disabled}\n          />\n        ))}\n        {!!onBackspaceClick && (\n          <button\n            type=\"button\"\n            style={{ width }}\n            className=\"daily-keyboard__key daily-keyboard__key--backspace\"\n            onClick={onBackspaceClick}\n            disabled={disabled}\n          >\n            ⌫\n          </button>\n        )}\n      </Flex>\n    </Space>\n  );\n}\n\ntype KeyProps = {\n  letter: string;\n  width: number;\n  state?: string;\n} & Pick<KeyboardProps, 'onLetterClick' | 'disabled'>;\n\nfunction Key({ letter, state, onLetterClick, disabled }: KeyProps) {\n  const baseClassName = 'daily-keyboard__key';\n  const width = useCardWidth(FIRST_ROW.length + 2, { margin: 16, maxWidth: 30 });\n\n  return (\n    <button\n      type=\"button\"\n      data-key={letter}\n      key={letter}\n      style={{ width }}\n      className={clsx(baseClassName, `${baseClassName}--${state}`)}\n      onClick={() => onLetterClick(letter)}\n      disabled={disabled || state === 'disabled'}\n    >\n      {letter}\n    </button>\n  );\n}\n","import { loadLocalToday } from 'pages/Daily/utils';\nimport { LettersDictionary } from 'pages/Daily/utils/types';\n// Utils\nimport { deepCopy } from 'utils/helpers';\n// Internal\nimport { SETTINGS } from './settings';\nimport { ArteRuimLocalToday, DailyArteRuimEntry, GameState } from './types';\n\nexport const DEFAULT_LOCAL_TODAY: ArteRuimLocalToday = {\n  id: '',\n  letters: [],\n  number: 0,\n};\n\n/**\n * Retrieves the initial state for the game based on the provided data.\n * @param data - The DailyArteRuimEntry object containing the necessary data.\n * @returns The initial GameState object.\n */\nexport function getInitialState(data: DailyArteRuimEntry): GameState {\n  const localToday = loadLocalToday({\n    key: SETTINGS.KEY,\n    gameId: data.id,\n    defaultValue: deepCopy(DEFAULT_LOCAL_TODAY),\n  });\n\n  const state: GameState = {\n    solution: getLettersInWord(data.text),\n    hearts: SETTINGS.HEARTS,\n    guesses: {},\n    win: false,\n  };\n\n  let solution = { ...state.solution };\n  const guesses = localToday.letters.reduce((acc: LettersDictionary, letter) => {\n    const isCorrect = state.solution[letter] !== undefined;\n    if (state.solution[letter] !== undefined) {\n      solution = { ...solution, [letter]: true };\n    }\n    acc[letter] = {\n      letter: letter,\n      state: isCorrect ? 'correct' : 'incorrect',\n      disabled: true,\n    };\n    state.hearts = isCorrect ? state.hearts : state.hearts - 1;\n    return acc;\n  }, {});\n\n  state.guesses = guesses;\n  state.win = Object.values(solution)\n    .filter((value) => value !== undefined)\n    .every(Boolean);\n\n  return state;\n}\n\n/**\n * Returns an object with each letter in the word as a key and a boolean value indicating if the letter has been found.\n * @param text - The word to extract the letters from.\n * @returns An object with each letter in the word as a key and a boolean value indicating if the letter has been found.\n */\nexport function getLettersInWord(text: string): BooleanDictionary {\n  const cleanedUpText = text\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n    .toLowerCase();\n  const letters = cleanedUpText.split('');\n  const lettersInWord: BooleanDictionary = {};\n\n  letters.forEach((letter) => {\n    if (letter.match(/[a-zA-Z]/)) {\n      lettersInWord[letter] = false;\n    }\n  });\n\n  return lettersInWord;\n}\n\n/**\n * Removes diacritical marks from a given character and converts it to lowercase.\n *\n * @param char - The character to be cleaned up.\n * @returns The cleaned up character.\n */\nexport function cleanupLetter(char: string): string {\n  return char\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n    .toLowerCase();\n}\n\n/**\n * Checks if a character is a letter.\n *\n * @param char - The character to check.\n * @returns `true` if the character is a letter, `false` otherwise.\n */\nexport function isLetter(char: string): boolean {\n  return cleanupLetter(char).match(/[a-zA-Z]/) !== null;\n}\n","// Ant Design Resources\nimport { Carousel } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { CanvasSVG } from 'components/canvas';\n\ntype DrawingCarouselProps = {\n  drawings: string[];\n};\n\nexport function DrawingCarousel({ drawings }: DrawingCarouselProps) {\n  const width = useCardWidth(1, { margin: 64, maxWidth: 250, minWidth: 150 });\n\n  return (\n    <Carousel autoplay className=\"carousel\" autoplaySpeed={4000}>\n      {drawings.map((d: string) => (\n        <CanvasSVG key={d} drawing={d} width={width} height={width} className=\"canvas\" />\n      ))}\n    </Carousel>\n  );\n}\n","import { LettersDictionary } from 'pages/Daily/utils/types';\nimport { useMemo } from 'react';\n// Ant Design Resources\nimport { Avatar, Space } from 'antd';\n// Icons\nimport { BoxBlankIcon } from 'icons/BoxBlankIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\n// Internal\nimport { cleanupLetter, isLetter } from '../utils/helpers';\n\ntype PromptProps = {\n  text: string;\n  guesses: LettersDictionary;\n};\n\nexport function Prompt({ text, guesses }: PromptProps) {\n  const prompt = useMemo(() => text.split(' ').map((word) => word.split('')), [text]);\n  return (\n    <Space className=\"prompt\" wrap align=\"center\">\n      {prompt.map((word, i, p) => {\n        return (\n          <Space key={`word-${i}`} className=\"prompt-word\" wrap align=\"center\">\n            {word.map((l, j) => {\n              const letter = cleanupLetter(l);\n              const isCorrect = guesses?.[letter]?.state === 'correct';\n              const key = `${j}-${l}-${i}`;\n              if (isLetter(letter)) {\n                return isCorrect ? (\n                  <Avatar key={key} className=\"letter-correct\" shape=\"square\">\n                    {l}\n                  </Avatar>\n                ) : (\n                  <IconAvatar key={key} icon={<BoxBlankIcon />} className=\"letter-blank\" />\n                );\n              }\n\n              return (\n                <Avatar key={key} shape=\"square\">\n                  {l}\n                </Avatar>\n              );\n            })}\n            {i + 1 < p.length && <Avatar shape=\"square\"></Avatar>}\n          </Space>\n        );\n      })}\n    </Space>\n  );\n}\n","import { NextGameSuggestion } from 'pages/Daily/components/NextGameSuggestion';\nimport { getDailyName, getSourceName, writeHeartResultString } from 'pages/Daily/utils';\n// Ant Design Resources\nimport { Space, Typography } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Icons\nimport { BoxXIcon } from 'icons/BoxXIcon';\nimport { TrophyIcon } from 'icons/TrophyIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { TextHighlight } from 'components/text';\n// Internal\nimport { SETTINGS } from '../utils/settings';\nimport { CopyToClipboardResult } from '../../../components/CopyToClipboardResult';\n\ntype ResultsModalContentProps = {\n  challenge: number;\n  text: string;\n  win: boolean;\n  hearts: number;\n  solution: BooleanDictionary;\n};\n\nexport function ResultsModalContent({ text, challenge, win, hearts, solution }: ResultsModalContentProps) {\n  const { language, dualTranslate } = useLanguage();\n\n  const result = writeResult({\n    game: dualTranslate(SETTINGS.NAME),\n    challenge,\n    remainingHearts: hearts,\n    solution,\n    language,\n  });\n\n  return (\n    <Space direction=\"vertical\" className=\"space-container\">\n      <Typography.Title level={2} className=\"center\">\n        {win ? (\n          <>\n            <IconAvatar icon={<TrophyIcon />} /> <Translate pt=\"Parabéns!\" en=\"Congratulations!\" />\n          </>\n        ) : (\n          <>\n            <IconAvatar icon={<BoxXIcon />} /> <Translate pt=\"Que pena!\" en=\"Too bad!\" />\n          </>\n        )}\n      </Typography.Title>\n      <Typography.Paragraph className=\"center\">\n        {win ? (\n          <Translate pt=\"Você acertou a palavra!\" en=\"You guessed the word!\" />\n        ) : (\n          <Translate pt=\"Você errou a palavra!\" en=\"You missed the word!\" />\n        )}\n      </Typography.Paragraph>\n\n      <TextHighlight className=\"result-answer\">\n        <Typography.Paragraph className=\"text-center\">{text}</Typography.Paragraph>\n      </TextHighlight>\n\n      <CopyToClipboardResult result={result} rows={3} />\n\n      <NextGameSuggestion />\n    </Space>\n  );\n}\n\nfunction writeResult({\n  game,\n  challenge,\n  remainingHearts,\n  solution,\n  language,\n}: {\n  game: string;\n  challenge: number;\n  remainingHearts: number;\n  solution: BooleanDictionary;\n  language: Language;\n}) {\n  const totalLetters = Object.keys(solution).length;\n  const guessedLetters = Object.values(solution).filter(Boolean).length;\n\n  return [\n    `${SETTINGS.ICON} ${getDailyName(language)} ${game} #${challenge}`,\n    `${writeHeartResultString(remainingHearts, SETTINGS.HEARTS)} (${Math.round((guessedLetters / totalLetters) * 100)}%)`,\n    `https://www.kavispires.com/tardedivertida/#/${getSourceName(language)}`,\n  ].join('\\n');\n}\n","// Ant Design Resources\nimport { HeartFilled } from '@ant-design/icons';\nimport { Typography } from 'antd';\n// Components\nimport { Translate } from 'components/language';\n\nexport function Rules() {\n  return (\n    <Typography>\n      <Translate\n        pt={\n          <>\n            <li>Tente adivinhar a expressão secreta observando os desenhos.</li>\n            <li>Você deve apertar letra por letra até que o nome esteja completo.</li>\n            <li>\n              Cada letra que você aperta que não está presente na resposta remove um coração e você tem apenas\n              3 <HeartFilled />.\n            </li>\n            <li>Boa sorte!</li>\n          </>\n        }\n        en={\n          <>\n            <li>Try to guess the secret expression by looking at the drawings.</li>\n            <li>You must press letter by letter until the name is complete.</li>\n            <li>\n              Each letter you press that is not present in the answer removes a heart and you only have 3{' '}\n              <HeartFilled />.\n            </li>\n            <li>Good luck!</li>\n          </>\n        }\n      />\n    </Typography>\n  );\n}\n","import { Keyboard } from 'pages/Daily/components/Keyboard';\nimport { useMemo } from 'react';\n// Ant Design Resources\nimport { BarChartOutlined } from '@ant-design/icons';\nimport { Button, Layout, Modal, Space } from 'antd';\n// Types\nimport { Me } from 'types/user';\n// Icons\nimport { DailyArtGameIcon } from 'icons/DailyArtGameIcon';\n// Components\nimport { DualTranslate, Translate } from 'components/language';\n// Internal\nimport { getInitialState } from '../utils/helpers';\nimport { SETTINGS } from '../utils/settings';\nimport { DailyArteRuimEntry } from '../utils/types';\nimport { useArteRuimEngine } from '../utils/useArteRuimEngine';\nimport { Header } from '../../../components/Header';\nimport { Menu } from '../../../components/Menu';\nimport { DrawingCarousel } from './DrawingCarousel';\nimport { Prompt } from './Prompt';\nimport { ResultsModalContent } from './ResultsModalContent';\nimport { Rules } from './Rules';\n\ntype DailyArteRuimProps = {\n  data: DailyArteRuimEntry;\n  currentUser: Me;\n};\n\nexport function DailyArteRuim({ data }: DailyArteRuimProps) {\n  const initialState = useMemo(() => getInitialState(data), []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const { hearts, guesses, showResultModal, setShowResultModal, isWin, isComplete, guessLetter, solution } =\n    useArteRuimEngine(data, initialState);\n\n  return (\n    <Layout className=\"app\">\n      <Header icon={<DailyArtGameIcon />} localStorageKey={SETTINGS.KEY}>\n        TD <DualTranslate>{SETTINGS.NAME}</DualTranslate> #{data.number}\n      </Header>\n      <Layout.Content>\n        <Menu\n          hearts={hearts}\n          total={SETTINGS.HEARTS}\n          openRules={!isComplete || hearts === SETTINGS.HEARTS}\n          rules={<Rules />}\n        />\n\n        <DrawingCarousel drawings={data.drawings} />\n\n        <Prompt text={data.text} guesses={guesses} />\n\n        {isComplete && (\n          <Space className=\"results-container\" direction=\"vertical\" align=\"center\">\n            <Button onClick={() => setShowResultModal(true)} type=\"primary\" icon={<BarChartOutlined />}>\n              <Translate pt=\"Ver Resultado\" en=\"Show Results\" />\n            </Button>\n          </Space>\n        )}\n        <Modal\n          title={<Translate pt=\"Resultado\" en=\"Results\" />}\n          open={showResultModal}\n          onCancel={() => setShowResultModal(false)}\n          footer={null}\n        >\n          <ResultsModalContent\n            challenge={data.number}\n            win={isWin}\n            hearts={hearts}\n            text={data.text}\n            solution={solution}\n          />\n        </Modal>\n\n        <Keyboard lettersState={guesses} onLetterClick={guessLetter} disabled={isComplete} />\n      </Layout.Content>\n    </Layout>\n  );\n}\n","import { useDailyGameState } from 'pages/Daily/hooks/useDailyGameState';\nimport { useDailyLocalToday, useMarkAsPlayed } from 'pages/Daily/hooks/useDailyLocalToday';\nimport { useShowResultModal } from 'pages/Daily/hooks/useShowResultModal';\n// Utils\nimport { removeDuplicates } from 'utils/helpers';\n// Internal\nimport { DEFAULT_LOCAL_TODAY } from './helpers';\nimport { SETTINGS } from './settings';\nimport { ArteRuimLocalToday, DailyArteRuimEntry, GameState } from './types';\n\nexport function useArteRuimEngine(data: DailyArteRuimEntry, initialState: GameState) {\n  const { state, setState } = useDailyGameState<GameState>(initialState);\n\n  const { localToday, updateLocalStorage } = useDailyLocalToday<ArteRuimLocalToday>({\n    key: SETTINGS.KEY,\n    gameId: data.id,\n    defaultValue: DEFAULT_LOCAL_TODAY,\n  });\n\n  // ACTIONS\n  const guessLetter = (letter: string) => {\n    // Ignore previously guessed letters\n    if (state.guesses[letter]) {\n      return;\n    }\n\n    const isCorrect = state.solution[letter] !== undefined;\n\n    updateLocalStorage({\n      letters: removeDuplicates([...(localToday?.letters ?? []), letter]),\n    });\n\n    const solution = { ...state.solution };\n    if (isCorrect) {\n      solution[letter] = true;\n    }\n\n    const win = Object.values(solution)\n      .filter((value) => value !== undefined)\n      .every(Boolean);\n\n    setState((prev) => ({\n      ...prev,\n      guesses: {\n        ...prev.guesses,\n        [letter]: {\n          letter: letter,\n          state: isCorrect ? 'correct' : 'incorrect',\n          disabled: true,\n        },\n      },\n      solution,\n      hearts: isCorrect ? prev.hearts : prev.hearts - 1,\n      win,\n    }));\n  };\n\n  // CONDITIONS\n  const isWin = state.win;\n  const isLose = state.hearts <= 0;\n  const isComplete = isWin || isLose;\n\n  useMarkAsPlayed({\n    key: SETTINGS.KEY,\n    isComplete,\n  });\n\n  // RESULTS MODAL\n  const { showResultModal, setShowResultModal } = useShowResultModal(isWin || isLose || isComplete);\n\n  return {\n    hearts: state.hearts,\n    guesses: state.guesses,\n    solution: state.solution,\n    showResultModal,\n    setShowResultModal,\n    isWin,\n    isLose,\n    isComplete,\n    guessLetter,\n  };\n}\n","import { DailyError } from 'pages/Daily/components/DailyError';\nimport { DailyLoading } from 'pages/Daily/components/DailyLoading';\n// Hooks\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\n// Internal\nimport { DailyArteRuim } from './components/DailyArteRuim';\nimport { useDailyChallenge } from '../../hooks/useDailyChallenge';\n// Sass\nimport './utils/styles.scss';\n\nexport function DailyArteRuimGame() {\n  const { currentUser } = useCurrentUserContext();\n\n  // Load challenge\n  const challengeQuery = useDailyChallenge();\n\n  if (challengeQuery.isLoading) {\n    return <DailyLoading />;\n  }\n\n  const dailyData = challengeQuery?.data?.['arte-ruim'];\n\n  if (challengeQuery.isError || !dailyData) {\n    return <DailyError />;\n  }\n\n  return <DailyArteRuim data={dailyData} currentUser={currentUser} />;\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Space, SpaceProps } from 'antd';\n\nexport function Region({ className, align, direction, children, ...props }: SpaceProps) {\n  return (\n    <Space\n      className={clsx('space-container', className)}\n      direction={direction ?? 'vertical'}\n      align={align ?? 'center'}\n      {...props}\n    >\n      {children}\n    </Space>\n  );\n}\n\nexport function TextRegion({ className, align, children, ...props }: SpaceProps) {\n  return (\n    <Space className={clsx('text-region', className)} align={align ?? 'center'} {...props}>\n      {children}\n    </Space>\n  );\n}\n","import { loadLocalToday } from 'pages/Daily/utils';\n// Utils\nimport { SEPARATOR } from 'utils/constants';\nimport { deepCopy } from 'utils/helpers';\n// Internal\nimport { PHASES, SETTINGS } from './settings';\nimport { ControleDeEstoqueLocalToday, DailyControleDeEstoqueEntry, GameState } from './types';\n\nexport const DEFAULT_LOCAL_TODAY: ControleDeEstoqueLocalToday = {\n  id: '',\n  number: 0,\n  warehouse: [],\n  guesses: [],\n  extraAttempts: 0,\n};\n\nexport const getInitialState = (data: DailyControleDeEstoqueEntry, removeHeart?: boolean): GameState => {\n  const localToday = loadLocalToday({\n    key: SETTINGS.KEY,\n    gameId: data.id,\n    defaultValue: deepCopy(DEFAULT_LOCAL_TODAY),\n  });\n\n  const state: GameState = {\n    hearts: SETTINGS.HEARTS,\n    phase: PHASES.STOCKING,\n    warehouse: Array(data.goods.length).fill(null),\n    fulfillments: [],\n    lastPlacedGoodId: null,\n    latestAttempt: null,\n    win: false,\n    guesses: [],\n    evaluations: [],\n    activeOrder: null,\n    extraAttempts: 0,\n  };\n\n  if (localToday.warehouse.length || localToday.extraAttempts) {\n    // Update phase\n    const warehouse =\n      localToday.warehouse.length > 0 ? localToday.warehouse : Array(data.goods.length).fill(null);\n    const guesses = localToday.warehouse.length > 0 ? (localToday.guesses ?? []) : [];\n\n    // Activate the last order attempt\n    const fulfillments = guesses.length > 0 ? parseGuessString(guesses[guesses.length - 1]) : [];\n    // Determine win\n    const attempts = validateAttempts(warehouse, fulfillments);\n    const extraAttempts = localToday.extraAttempts ?? 0;\n    const win = attempts.length > 0 && attempts.every(Boolean);\n\n    state.phase = warehouse.every(Boolean) ? PHASES.FULFILLING : PHASES.STOCKING;\n    state.warehouse = warehouse;\n    state.guesses = guesses;\n    state.evaluations = guesses.map((g) => validateAttempts(warehouse, parseGuessString(g)));\n    state.hearts = SETTINGS.HEARTS - guesses.length - extraAttempts - (removeHeart ? 1 : 0);\n    state.extraAttempts = extraAttempts;\n    state.fulfillments = fulfillments;\n    state.win = win;\n  }\n\n  return state;\n};\n\n/**\n * Validates the attempts made to fulfill orders in the warehouse.\n * @param warehouse - The current state of the warehouse.\n * @param fulfillments - The list of order fulfillments.\n * @returns An array of boolean values indicating whether each fulfillment attempt was successful or not.\n */\nexport const validateAttempts = (\n  warehouse: GameState['warehouse'],\n  fulfillments: GameState['fulfillments']\n) => {\n  return fulfillments.reduce((acc: boolean[], fulfillment) => {\n    // If it's out of stock\n    if (fulfillment.shelfIndex === -1) {\n      const evaluation = !warehouse.some((good) => good === fulfillment.order);\n      acc.push(evaluation);\n      return acc;\n    }\n\n    // Any other order, should be placed correctly\n    const evaluation = fulfillment.order === warehouse[fulfillment.shelfIndex];\n    acc.push(evaluation);\n    return acc;\n  }, []);\n};\n\n/**\n * Returns a string representation of the guesses made in the game.\n * @param fulfillments - The fulfillments array containing the game state.\n * @returns A string representing the guesses made in the game.\n */\nexport const getGuessString = (fulfillments: GameState['fulfillments']) => {\n  return fulfillments.map((f) => `${f.order}${SEPARATOR}${f.shelfIndex}`).join(',');\n};\n\n/**\n * Parses a guess string into an array of objects containing order and shelf index.\n * @param guessString - The guess string to be parsed.\n * @returns An array of objects containing order and shelf index.\n */\nconst parseGuessString = (guessString: string) => {\n  return guessString.split(',').map((g) => {\n    const [order, shelfIndex] = g.split(SEPARATOR);\n    return { order, shelfIndex: Number(shelfIndex) };\n  });\n};\n","import { useDailyGameState } from 'pages/Daily/hooks/useDailyGameState';\nimport { useDailyLocalToday, useMarkAsPlayed } from 'pages/Daily/hooks/useDailyLocalToday';\nimport { useShowResultModal } from 'pages/Daily/hooks/useShowResultModal';\n// Ant Design Resources\nimport { App } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { deepCopy } from 'utils/helpers';\n// Internal\nimport { DEFAULT_LOCAL_TODAY, getGuessString, getInitialState, validateAttempts } from './helpers';\nimport { PHASES, SETTINGS } from './settings';\nimport { ControleDeEstoqueLocalToday, DailyControleDeEstoqueEntry, GameState } from './types';\n\nexport function useControleDeEstoqueEngine(data: DailyControleDeEstoqueEntry, initialState: GameState) {\n  const { message } = App.useApp();\n  const { translate } = useLanguage();\n  const { state, setState, updateState } = useDailyGameState<GameState>(initialState);\n\n  const currentGood: string | undefined = data.goods[state.warehouse.filter(Boolean).length];\n\n  const { updateLocalStorage } = useDailyLocalToday<ControleDeEstoqueLocalToday>({\n    key: SETTINGS.KEY,\n    gameId: data.id,\n    defaultValue: DEFAULT_LOCAL_TODAY,\n  });\n\n  /**\n   * Places a good in the warehouse\n   */\n  const onPlaceGood = (shelfIndex: number) => {\n    if (shelfIndex >= 0 && currentGood) {\n      setState((prev) => {\n        const copy = deepCopy(prev);\n\n        copy.warehouse[shelfIndex] = currentGood;\n        copy.lastPlacedGoodId = currentGood;\n\n        if (copy.warehouse.every(Boolean)) {\n          copy.phase = PHASES.FULFILLING;\n\n          updateLocalStorage({ warehouse: copy.warehouse as string[] });\n        }\n\n        return copy;\n      });\n    }\n  };\n\n  /**\n   * Selects an order to fulfill\n   */\n  const onSelectOrder = (order: string) => {\n    updateState({ activeOrder: order });\n  };\n\n  /**\n   * Fulfills an order\n   * (assigns an order to a shelf)\n   */\n  const onFulfill = (shelfIndex: number) => {\n    setState((prev) => {\n      const copy = deepCopy(prev);\n      copy.fulfillments.push({ order: state.activeOrder!, shelfIndex: shelfIndex });\n      copy.activeOrder = null;\n      return copy;\n    });\n  };\n\n  /**\n   * Takes back an order from a shelf\n   */\n  const onTakeBack = (orderId: string) => {\n    setState((prev) => {\n      const copy = deepCopy(prev);\n      copy.fulfillments = copy.fulfillments.filter((fulfillment) => fulfillment.order !== orderId);\n      copy.activeOrder = orderId;\n      return copy;\n    });\n  };\n\n  /**\n   * Attempt to deliver the orders\n   * The order placements must match where the products are in the warehouse\n   */\n  const onSubmit = () => {\n    const newGuessString = getGuessString(state.fulfillments);\n\n    if (state.guesses.includes(newGuessString)) {\n      message.warning({\n        content: translate(\n          'Você já tentou essa combinação. Tente outra!',\n          'You already tried this combination. Try another one!'\n        ),\n        duration: 5,\n      });\n\n      return updateState({\n        latestAttempt: Date.now(),\n      });\n    }\n\n    updateLocalStorage({\n      guesses: [...state.guesses, newGuessString],\n      warehouse: state.warehouse as string[],\n    });\n\n    const attemptResult = validateAttempts(state.warehouse, state.fulfillments);\n\n    const isAllCorrect = attemptResult.every(Boolean);\n\n    if (!isAllCorrect) {\n      message.warning({\n        content: translate(\n          'Um ou mais produtos estão fora de lugar. Tente novamente!',\n          'One or more products are out of place. Try again!'\n        ),\n        duration: 3,\n      });\n    }\n\n    setState((prev) => {\n      const copy = deepCopy(prev);\n      copy.latestAttempt = Date.now();\n      copy.evaluations.push(attemptResult);\n      copy.guesses.push(newGuessString);\n\n      if (isAllCorrect) {\n        copy.win = true;\n      } else {\n        copy.hearts -= 1;\n      }\n\n      return copy;\n    });\n  };\n\n  // CONDITIONS\n  const isWin = state.win;\n  const isLose = state.hearts <= 0;\n  const isComplete = isWin || isLose;\n\n  useMarkAsPlayed({\n    key: SETTINGS.KEY,\n    isComplete,\n  });\n\n  // RESULTS MODAL\n  const { showResultModal, setShowResultModal } = useShowResultModal(isComplete);\n\n  const reset = () => {\n    updateLocalStorage({\n      warehouse: Array(data.goods.length).fill(null),\n      guesses: [],\n      extraAttempts: state.extraAttempts + 1,\n    });\n    const resetState = getInitialState(data, true);\n    setState({\n      ...resetState,\n      extraAttempts: state.extraAttempts + 1,\n      hearts: SETTINGS.HEARTS - state.extraAttempts - 1,\n    });\n  };\n\n  return {\n    hearts: state.hearts,\n    phase: state.phase,\n    warehouse: state.warehouse,\n    fulfillments: state.fulfillments,\n    lastPlacedGoodId: state.lastPlacedGoodId,\n    guesses: state.guesses,\n    evaluations: state.evaluations,\n    latestAttempt: state.latestAttempt,\n    orders: data.orders,\n    currentGood,\n    activeOrder: state.activeOrder,\n    showResultModal,\n    setShowResultModal,\n    isWin,\n    isLose,\n    isComplete,\n    onPlaceGood,\n    onSelectOrder,\n    onFulfill,\n    onTakeBack,\n    onSubmit,\n    reset,\n  };\n}\n","import clsx from 'clsx';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Icons\nimport { ShippingBoxIcon } from 'icons/ShippingBoxIcon';\n// Components\nimport { TransparentButton } from 'components/buttons';\nimport { WarehouseGoodCard } from 'components/cards/WarehouseGoodCard';\n// Internal\nimport { useControleDeEstoqueEngine } from '../utils/useControleDeEstoqueEngine';\n\ntype FulfillmentBoardProps = {\n  activeOrder: ReturnType<typeof useControleDeEstoqueEngine>['activeOrder'];\n  warehouse: ReturnType<typeof useControleDeEstoqueEngine>['warehouse'];\n  onFulfill: ReturnType<typeof useControleDeEstoqueEngine>['onFulfill'];\n  onTakeBack: ReturnType<typeof useControleDeEstoqueEngine>['onTakeBack'];\n  fulfillments: ReturnType<typeof useControleDeEstoqueEngine>['fulfillments'];\n  width: number;\n  reveal?: boolean;\n};\n\nexport function FulfillmentBoard({\n  activeOrder,\n  warehouse,\n  fulfillments,\n  onFulfill,\n  onTakeBack,\n  width,\n  reveal = false,\n}: FulfillmentBoardProps) {\n  const size = { width, height: width };\n\n  return (\n    <div className=\"shelves-board\">\n      {warehouse.map((goodId, index) => {\n        if (!goodId) {\n          return <div key={index}>X</div>;\n        }\n\n        const isFulfilled = fulfillments.find((f) => f.shelfIndex === index);\n\n        if (isFulfilled) {\n          return (\n            <div\n              key={index}\n              className={clsx('shelves-board__shelf', 'shelves-board__shelf-fulfilled')}\n              style={size}\n            >\n              {reveal ? (\n                <WarehouseGoodCard\n                  id={isFulfilled.order}\n                  padding={1}\n                  width={width - 24}\n                  className=\"shelves-board__placed-order\"\n                />\n              ) : (\n                <TransparentButton onClick={() => onTakeBack(isFulfilled.order)} hoverType=\"none\">\n                  <WarehouseGoodCard\n                    id={isFulfilled.order}\n                    padding={1}\n                    width={width - 24}\n                    className=\"shelves-board__placed-order\"\n                  />\n                </TransparentButton>\n              )}\n              {reveal ? (\n                <WarehouseGoodCard id={goodId} padding={1} width={width - 12} />\n              ) : (\n                <ShippingBoxIcon width={width - 12} />\n              )}\n            </div>\n          );\n        }\n\n        return (\n          <div key={index} className={clsx('shelves-board__shelf')} style={size}>\n            {reveal ? (\n              <WarehouseGoodCard id={goodId} padding={1} width={width - 12} />\n            ) : (\n              <TransparentButton onClick={activeOrder ? () => onFulfill(index) : undefined}>\n                <ShippingBoxIcon width={width - 12} className={getAnimationClass('bounce')} />\n              </TransparentButton>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Icons\nimport { CheckMarkIcon } from 'icons/CheckMarkIcon';\nimport { LocationIcon } from 'icons/LocationIcon';\nimport { OnlineOrderIcon } from 'icons/OnlineOrderIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { TransparentButton } from 'components/buttons';\nimport { WarehouseGoodCard } from 'components/cards/WarehouseGoodCard';\n// Internal\nimport { useControleDeEstoqueEngine } from '../utils/useControleDeEstoqueEngine';\n\ntype OrdersProps = {\n  fulfillments: ReturnType<typeof useControleDeEstoqueEngine>['fulfillments'];\n  orders: ReturnType<typeof useControleDeEstoqueEngine>['orders'];\n  activeOrder: ReturnType<typeof useControleDeEstoqueEngine>['activeOrder'];\n  onSelectOrder: ReturnType<typeof useControleDeEstoqueEngine>['onSelectOrder'];\n  shelfWidth: number;\n};\n\nexport function Orders({ fulfillments, orders, onSelectOrder, shelfWidth, activeOrder }: OrdersProps) {\n  return (\n    <div className=\"fulfillment-center\">\n      <OnlineOrderIcon\n        width={shelfWidth / 1.5}\n        className={getAnimationClass('headShake', { infinite: true })}\n      />\n      <div className={clsx('fulfillment-center__orders', getAnimationClass('lightSpeedInLeft'))}>\n        {orders.map((order) => {\n          const isFulfilled = fulfillments.find((f) => f.order === order);\n\n          return (\n            <TransparentButton\n              key={order}\n              onClick={() => onSelectOrder(order)}\n              disabled={fulfillments.length === 4 || !!isFulfilled}\n            >\n              {!!isFulfilled && <IconAvatar icon={<CheckMarkIcon />} />}\n              {activeOrder === order && (\n                <IconAvatar\n                  icon={<LocationIcon />}\n                  className={getAnimationClass('bounce', { infinite: true })}\n                />\n              )}\n              <WarehouseGoodCard\n                key={order}\n                id={order}\n                width={shelfWidth * 0.85}\n                className={clsx(\n                  'order',\n                  activeOrder === order && 'order--active',\n                  !!isFulfilled && 'order--fulfilled'\n                )}\n              />\n            </TransparentButton>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import { Region, TextRegion } from 'pages/Daily/components/Region';\n// Ant Design Resources\nimport { BarChartOutlined, WarningFilled } from '@ant-design/icons';\nimport { Button } from 'antd';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n// Internal\nimport { PHASES } from '../utils/settings';\nimport { useControleDeEstoqueEngine } from '../utils/useControleDeEstoqueEngine';\nimport { FulfillmentBoard } from './FulfillmentBoard';\nimport { Orders } from './Orders';\n\ntype FulfillingPhaseProps = {\n  phase: ReturnType<typeof useControleDeEstoqueEngine>['phase'];\n  orders: ReturnType<typeof useControleDeEstoqueEngine>['orders'];\n  warehouse: ReturnType<typeof useControleDeEstoqueEngine>['warehouse'];\n  onSelectOrder: ReturnType<typeof useControleDeEstoqueEngine>['onSelectOrder'];\n  onFulfill: ReturnType<typeof useControleDeEstoqueEngine>['onFulfill'];\n  onTakeBack: ReturnType<typeof useControleDeEstoqueEngine>['onTakeBack'];\n  onSubmit: ReturnType<typeof useControleDeEstoqueEngine>['onSubmit'];\n  activeOrder: ReturnType<typeof useControleDeEstoqueEngine>['activeOrder'];\n  fulfillments: ReturnType<typeof useControleDeEstoqueEngine>['fulfillments'];\n  setShowResultModal: ReturnType<typeof useControleDeEstoqueEngine>['setShowResultModal'];\n  isComplete: ReturnType<typeof useControleDeEstoqueEngine>['isComplete'];\n  shelfWidth: number;\n};\n\nexport function FulfillingPhase({\n  phase,\n  orders,\n  warehouse,\n  activeOrder,\n  fulfillments,\n  onSelectOrder,\n  onFulfill,\n  onTakeBack,\n  onSubmit,\n  shelfWidth,\n  isComplete,\n  setShowResultModal,\n}: FulfillingPhaseProps) {\n  const isFulfilling = phase === PHASES.FULFILLING && !isComplete;\n  const isDelivering = phase === PHASES.DELIVERING;\n\n  const board = (\n    <Region>\n      <FulfillmentBoard\n        activeOrder={activeOrder}\n        warehouse={warehouse}\n        onFulfill={onFulfill}\n        onTakeBack={onTakeBack}\n        width={shelfWidth}\n        fulfillments={fulfillments}\n        reveal={isComplete}\n      />\n    </Region>\n  );\n\n  if (isFulfilling) {\n    return (\n      <>\n        {board}\n\n        <TextRegion>\n          <Instruction contained noMargin>\n            <Translate\n              pt={\n                <>\n                  Recebemos 5 pedidos e 4 deles estão em estoque!\n                  <br />\n                  Selecione os pedidos um a um e coloque-nos na prateleira correta.\n                  <br />\n                  <strong>Pedidos Posicionados ({fulfillments.length}/4).</strong>\n                </>\n              }\n              en={\n                <>\n                  We have received 5 orders and 4 of them are in stock!\n                  <br />\n                  Select the orders one by one and place them on the correct shelf.\n                  <br />\n                  <strong>Orders Placed ({fulfillments.length}/4).</strong>\n                </>\n              }\n            />\n          </Instruction>\n        </TextRegion>\n\n        <Orders\n          orders={orders}\n          activeOrder={activeOrder}\n          onSelectOrder={onSelectOrder}\n          shelfWidth={shelfWidth}\n          fulfillments={fulfillments}\n        />\n\n        {!isComplete && (\n          <TextRegion>\n            <Instruction contained noMargin>\n              <Translate\n                pt={<>Para desfazer um pedido, é só clicar nele na prateleira.</>}\n                en={<>To undo an order, just click on it on the shelf.</>}\n              />\n            </Instruction>\n          </TextRegion>\n        )}\n\n        {fulfillments.length === 4 && !isComplete && (\n          <>\n            <Region>\n              <Button size=\"large\" type=\"primary\" onClick={onSubmit}>\n                <Translate pt=\"Enviar pacotes\" en=\"Send packages\" />\n              </Button>\n            </Region>\n\n            <TextRegion>\n              <Instruction contained noMargin>\n                <Translate\n                  pt={\n                    <>\n                      Se tudo estiver nos confirmes, aperte o botão de enviar.\n                      <br />\n                      Você perde um coração se qualquer um deles estiver errado.\n                    </>\n                  }\n                  en={\n                    <>\n                      If everything is in order, press the delivery button.\n                      <br />\n                      You lose a heart if any of them are wrong\n                    </>\n                  }\n                />\n              </Instruction>\n            </TextRegion>\n          </>\n        )}\n      </>\n    );\n  }\n\n  if (isDelivering) {\n    const isMissingOutOfStock = !fulfillments.some((f) => f.shelfIndex === -1);\n\n    return (\n      <>\n        {board}\n\n        <TextRegion>\n          <Instruction contained noMargin>\n            <Translate pt=\"Tudo pronto, hora de entregar!\" en=\"All set, time to deliver!\" />\n          </Instruction>\n        </TextRegion>\n\n        <Region>\n          <Button size=\"large\" type=\"primary\" onClick={onSubmit}>\n            <Translate pt=\"Enviar pacotes\" en=\"Send packages\" />\n          </Button>\n        </Region>\n\n        <TextRegion>\n          <Instruction contained noMargin>\n            <Translate\n              pt={\n                <>\n                  <strong>Pedidos Assinalados</strong>\n                  {isMissingOutOfStock ? (\n                    <>\n                      <br />\n                      <span style={{ color: 'red' }}>\n                        <WarningFilled /> Você não colocou nenhum pedido na lata de lixo! Um dos produtos NÃO\n                        está na prateleira!!!\n                      </span>\n                    </>\n                  ) : (\n                    <></>\n                  )}\n                  <br />\n                  Se tudo estiver nos confirmes, aperte o botão de enviar.\n                  <br />\n                  Você perde um coração se qualquer um deles estiver errado.\n                </>\n              }\n              en={\n                <>\n                  <strong>All Orders have been assigned</strong>\n                  <br />\n                  If everything is in order, press the delivery button.\n                  <br />\n                  You lose a heart if any of them are wrong\n                </>\n              }\n            />\n          </Instruction>\n        </TextRegion>\n      </>\n    );\n  }\n\n  return (\n    <>\n      {board}\n\n      <TextRegion>\n        <Instruction contained noMargin>\n          <Translate pt=\"Você completou todos os pedidos!\" en=\"You have completed all orders!\" />\n        </Instruction>\n      </TextRegion>\n\n      <Region>\n        <Button onClick={() => setShowResultModal(true)} type=\"primary\" icon={<BarChartOutlined />}>\n          <Translate pt=\"Ver Resultado\" en=\"Show Results\" />\n        </Button>\n      </Region>\n    </>\n  );\n}\n","// Components\nimport { WarehouseGoodCard } from 'components/cards/WarehouseGoodCard';\n\ntype PreloadItemsProps = {\n  goods: string[];\n};\n\nexport function PreloadItems({ goods }: PreloadItemsProps) {\n  return (\n    <div style={{ display: 'none' }}>\n      {goods.map((itemId) => (\n        <WarehouseGoodCard key={itemId} id={itemId} className=\"transparent\" width={1} />\n      ))}\n    </div>\n  );\n}\n","import { NextGameSuggestion } from 'pages/Daily/components/NextGameSuggestion';\nimport { getSourceName, writeHeartResultString } from 'pages/Daily/utils';\n// Ant Design Resources\nimport { Space, Typography } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Icons\nimport { BoxXIcon } from 'icons/BoxXIcon';\nimport { TrophyIcon } from 'icons/TrophyIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { Translate } from 'components/language';\n// Internal\nimport { SETTINGS } from '../utils/settings';\nimport { CopyToClipboardResult } from '../../../components/CopyToClipboardResult';\n\ntype ResultsModalContentProps = {\n  challenge: number;\n  title: string;\n  isWin: boolean;\n  hearts: number;\n  evaluations: boolean[][];\n};\n\nexport function ResultsModalContent({\n  challenge,\n  title,\n  isWin,\n  hearts,\n  evaluations,\n}: ResultsModalContentProps) {\n  const { language, dualTranslate } = useLanguage();\n\n  const result = writeResult({\n    game: dualTranslate(SETTINGS.NAME),\n    challenge,\n    remainingHearts: hearts,\n    language,\n    evaluations,\n  });\n\n  return (\n    <Space direction=\"vertical\" className=\"space-container\">\n      <Typography.Title level={2} className=\"center\">\n        {isWin ? (\n          <>\n            <IconAvatar icon={<TrophyIcon />} /> <Translate pt=\"Parabéns!\" en=\"Congratulations!\" />\n          </>\n        ) : (\n          <>\n            <IconAvatar icon={<BoxXIcon />} /> <Translate pt=\"Que pena!\" en=\"Too bad!\" />\n          </>\n        )}\n      </Typography.Title>\n\n      <Typography.Text strong className=\"center\">\n        {title}\n      </Typography.Text>\n\n      <Typography.Paragraph className=\"center\">\n        {isWin ? (\n          <Translate pt=\"Você entregou todos os pedidos!\" en=\"You delivered all orders!\" />\n        ) : (\n          <Translate\n            pt=\"Você não conseguiu entregar todos os pedidos.\"\n            en=\"You couldn't deliver all orders.\"\n          />\n        )}\n      </Typography.Paragraph>\n\n      <CopyToClipboardResult result={result} rows={6} />\n\n      <NextGameSuggestion />\n    </Space>\n  );\n}\n\nfunction writeResult({\n  game,\n  challenge,\n  remainingHearts,\n  language,\n  evaluations,\n}: {\n  game: string;\n  challenge: number;\n  remainingHearts: number;\n  language: Language;\n  evaluations: boolean[][];\n}) {\n  const cleanUpAttempts = evaluations.map((row) =>\n    row.map((value) => {\n      return value ? '📫' : '🤬';\n    })\n  );\n\n  return [\n    `${SETTINGS.ICON} TD ${game} #${challenge}`,\n    `${writeHeartResultString(remainingHearts, SETTINGS.HEARTS, ' ')}`,\n    cleanUpAttempts\n      .map((row) => row.join(' ').trim())\n      .filter(Boolean)\n      .join('\\n'),\n    `https://www.kavispires.com/tardedivertida/#/${getSourceName(language)}`,\n  ].join('\\n');\n}\n","// Ant Design Resources\nimport { Alert } from 'antd';\n// Components\nimport { Translate } from 'components/language';\n\nexport function BetaBanner() {\n  return (\n    <Alert\n      message={\n        <Translate\n          pt=\"Jogo em fase de testes. Reporte qualquer problema.\"\n          en=\"Game in beta mode. Report any bugs!\"\n        />\n      }\n      type=\"warning\"\n      showIcon\n      banner\n    />\n  );\n}\n","import { BetaBanner } from 'pages/Daily/components/BetaBanner';\n// Ant Design Resources\nimport { HeartFilled } from '@ant-design/icons';\nimport { Typography } from 'antd';\n// Components\nimport { Translate } from 'components/language';\n// Internal\nimport { SETTINGS } from '../utils/settings';\n\nexport function Rules() {\n  return (\n    <Typography>\n      <BetaBanner />\n      <Translate\n        pt={\n          <>\n            <li>Você é o funcionário uma empresa de compras online e está encarregado do estoque.</li>\n            <li>\n              Coloque os 16 produtos na prateleira do jeito que você preferir. O ideal é que você siga uma\n              lógica que depois você saiba onde eles estão.\n            </li>\n            <li>A pegadinha é que você não vê mais o produto depois de posicioná-lo.</li>\n            <li>\n              Após todos os produtos estarem organizados, você receberá 5 pedidos. Desses 5, apenas 4 estão em\n              estoque (na prateleira).\n            </li>\n            <li>Selecione os produtos em estoque deixando de fora o produto fora de estoque.</li>\n            <li>\n              Tente completar todos os pedidos sem errar. A cada erro, você perde um <HeartFilled />.\n            </li>\n            <li>\n              Você tem {SETTINGS.HEARTS} <HeartFilled /> chances. Boa sorte!\n            </li>\n          </>\n        }\n        en={\n          <>\n            <li>You are an employee at an online shopping company and are in charge of the stock.</li>\n            <li>\n              Place the 16 products on the shelf as you prefer. It is ideal that you follow a logic that you\n              can remember where they are later.\n            </li>\n            <li>The catch is that you won't see the product anymore after you position it.</li>\n            <li>\n              After all products are organized, you will receive 5 orders. Of these 5, only 4 are in stock (on\n              the shelf).\n            </li>\n            <li>Select the products in stock, leaving out the out-of-stock product.</li>\n            <li>\n              Try to complete all orders without making mistakes. For each mistake, you lose a <HeartFilled />\n              .\n            </li>\n            <li>\n              You have {SETTINGS.HEARTS} <HeartFilled /> chances. Good luck!\n            </li>\n          </>\n        }\n      />\n    </Typography>\n  );\n}\n","import clsx from 'clsx';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Icons\nimport { ShippingBoxIcon } from 'icons/ShippingBoxIcon';\n// Components\nimport { WarehouseGoodCard } from 'components/cards/WarehouseGoodCard';\n// Internal\nimport { useControleDeEstoqueEngine } from '../utils/useControleDeEstoqueEngine';\n\ntype StockingBoardProps = {\n  warehouse: ReturnType<typeof useControleDeEstoqueEngine>['warehouse'];\n  onPlaceGood: ReturnType<typeof useControleDeEstoqueEngine>['onPlaceGood'];\n  lastPlacedGoodId: ReturnType<typeof useControleDeEstoqueEngine>['lastPlacedGoodId'];\n  width: number;\n};\n\nexport function StockingBoard({ warehouse, onPlaceGood, width, lastPlacedGoodId }: StockingBoardProps) {\n  const size = { width, height: width };\n\n  return (\n    <div className=\"shelves-board\">\n      {warehouse.map((goodId, index) => {\n        if (!goodId) {\n          return (\n            <div key={index} className={clsx('shelves-board__empty-shelf')} style={size}>\n              <button className=\"shelves-board__empty-shelf-button\" onClick={() => onPlaceGood(index)}>\n                ?\n              </button>\n            </div>\n          );\n        }\n\n        if (goodId !== lastPlacedGoodId) {\n          return (\n            <div\n              key={index}\n              className={clsx('shelves-board__shelf', getAnimationClass('flipInY'))}\n              style={size}\n            >\n              <ShippingBoxIcon width={width - 12} />\n            </div>\n          );\n        }\n\n        return (\n          <div key={index} className={clsx('shelves-board__shelf')} style={size}>\n            <WarehouseGoodCard\n              id={goodId}\n              padding={1}\n              width={width - 12}\n              className={getAnimationClass('bounce')}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import { Region, TextRegion } from 'pages/Daily/components/Region';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { WarehouseGoodCard } from 'components/cards/WarehouseGoodCard';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n// Internal\nimport { useControleDeEstoqueEngine } from '../utils/useControleDeEstoqueEngine';\nimport { StockingBoard } from './StockingBoard';\n\ntype StockingPhaseProps = {\n  warehouse: ReturnType<typeof useControleDeEstoqueEngine>['warehouse'];\n  onPlaceGood: ReturnType<typeof useControleDeEstoqueEngine>['onPlaceGood'];\n  currentGood: ReturnType<typeof useControleDeEstoqueEngine>['currentGood'];\n  lastPlacedGoodId: ReturnType<typeof useControleDeEstoqueEngine>['lastPlacedGoodId'];\n  shelfWidth: number;\n};\n\nexport function StockingPhase({\n  warehouse,\n  currentGood,\n  lastPlacedGoodId,\n  onPlaceGood,\n  shelfWidth,\n}: StockingPhaseProps) {\n  return (\n    <>\n      <Region>\n        <StockingBoard\n          warehouse={warehouse}\n          onPlaceGood={onPlaceGood}\n          width={shelfWidth}\n          lastPlacedGoodId={lastPlacedGoodId}\n        />\n      </Region>\n\n      <TextRegion>\n        <Instruction contained noMargin>\n          <Translate\n            pt=\"Coloque o produto em uma prateleira vazia:\"\n            en=\"Place the product on an empty shelf:\"\n          />\n        </Instruction>\n      </TextRegion>\n\n      <Region>\n        {currentGood && (\n          <WarehouseGoodCard\n            id={currentGood}\n            width={shelfWidth}\n            key={currentGood}\n            className={getAnimationClass('lightSpeedInLeft')}\n          />\n        )}\n      </Region>\n\n      <TextRegion>\n        <Instruction contained noMargin>\n          <Typography.Text>\n            <Translate\n              pt=\"\n                Um bom funcionário sempre sabe onde está cada produto. Lembre-se de usar uma certa lógica para memorizar a posição de cada produto.\"\n              en=\"A good employee always knows where each product is. Remember to use a certain logic to memorize the position of each product.\"\n            />\n          </Typography.Text>\n        </Instruction>\n      </TextRegion>\n    </>\n  );\n}\n","import { Region, TextRegion } from 'pages/Daily/components/Region';\nimport { useMemo } from 'react';\nimport { useMeasure } from 'react-use';\n// Ant Design Resources\nimport { Button, Divider, Layout, Modal, Popconfirm, Tooltip, Typography } from 'antd';\n// Types\nimport { Me } from 'types/user';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Icons\nimport { DailyWarehouseGameIcon } from 'icons/DailyWarehouseGameIcon';\n// Components\nimport { DualTranslate, Translate } from 'components/language';\n// Internal\nimport { getInitialState } from '../utils/helpers';\nimport { PHASES, SETTINGS } from '../utils/settings';\nimport { DailyControleDeEstoqueEntry } from '../utils/types';\nimport { useControleDeEstoqueEngine } from '../utils/useControleDeEstoqueEngine';\nimport { Header } from '../../../components/Header';\nimport { Menu } from '../../../components/Menu';\nimport { FulfillingPhase } from './FulfillingPhase';\nimport { PreloadItems } from './PreloadItems';\nimport { ResultsModalContent } from './ResultsModalContent';\nimport { Rules } from './Rules';\nimport { StockingPhase } from './StockingPhase';\n\ntype DailyControleDeEstoqueProps = {\n  data: DailyControleDeEstoqueEntry;\n  currentUser: Me;\n};\n\nexport function DailyControleDeEstoque({ data }: DailyControleDeEstoqueProps) {\n  const initialState = useMemo(() => getInitialState(data), []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const {\n    hearts,\n    warehouse,\n    currentGood,\n    activeOrder,\n    lastPlacedGoodId,\n    onPlaceGood,\n    onSelectOrder,\n    onFulfill,\n    onTakeBack,\n    onSubmit,\n    fulfillments,\n    showResultModal,\n    setShowResultModal,\n    isWin,\n    isComplete,\n    evaluations,\n    reset,\n    latestAttempt,\n    phase,\n    orders,\n  } = useControleDeEstoqueEngine(data, initialState);\n  const [contentRef, contentMeasure] = useMeasure<HTMLDivElement>();\n\n  const shouldShakeScreen = latestAttempt && !isComplete;\n\n  const shelfWidth = useMemo(() => {\n    const totalWidth = contentMeasure.width / 5 - 16;\n    return Math.min(Math.max(totalWidth, 48), 96);\n  }, [contentMeasure.width]);\n\n  return (\n    <Layout className=\"app\">\n      <Header icon={<DailyWarehouseGameIcon />} localStorageKey={SETTINGS.KEY}>\n        <DualTranslate>{SETTINGS.NAME}</DualTranslate> #{data.number}\n      </Header>\n      <Layout.Content ref={contentRef}>\n        <Menu hearts={hearts} total={SETTINGS.HEARTS} openRules={true} rules={<Rules />} />\n\n        <PreloadItems goods={data.goods} />\n\n        <Region>\n          <Typography.Text strong className=\"controle-de-estoque-title\">\n            {data.title}\n          </Typography.Text>\n        </Region>\n\n        {phase === PHASES.STOCKING && currentGood && (\n          <StockingPhase\n            warehouse={warehouse}\n            currentGood={currentGood}\n            lastPlacedGoodId={lastPlacedGoodId}\n            onPlaceGood={onPlaceGood}\n            shelfWidth={shelfWidth}\n          />\n        )}\n\n        <div key={latestAttempt} className={shouldShakeScreen ? getAnimationClass('shakeX') : ''}>\n          {phase !== PHASES.STOCKING && (\n            <FulfillingPhase\n              phase={phase}\n              warehouse={warehouse}\n              orders={orders}\n              activeOrder={activeOrder}\n              fulfillments={fulfillments}\n              shelfWidth={shelfWidth}\n              onSelectOrder={onSelectOrder}\n              onFulfill={onFulfill}\n              onTakeBack={onTakeBack}\n              onSubmit={onSubmit}\n              isComplete={isComplete}\n              setShowResultModal={setShowResultModal}\n            />\n          )}\n        </div>\n\n        <TextRegion direction=\"horizontal\" split={<Divider type=\"vertical\" />}>\n          {evaluations.map((attempt, index) => (\n            <Tooltip key={`${attempt}-${index}`} title={<Translate pt=\"Acertos\" en=\"Correct\" />}>\n              <span>{attempt.filter(Boolean).length} 📫</span>\n            </Tooltip>\n          ))}\n        </TextRegion>\n\n        <Modal\n          title={<Translate pt=\"Resultado\" en=\"Results\" />}\n          open={showResultModal}\n          onCancel={() => setShowResultModal(false)}\n          footer={null}\n        >\n          <ResultsModalContent\n            challenge={data?.number}\n            isWin={isWin}\n            hearts={hearts}\n            evaluations={evaluations}\n            title={data.title}\n          />\n        </Modal>\n      </Layout.Content>\n\n      <Region>\n        <Popconfirm\n          title={<Translate pt=\"Deseja mesmo recomeçar o jogo?\" en=\"Do you really want to reset the game?\" />}\n          description={<Translate pt=\"Você perderá um coração.\" en=\"You will lose a heart.\" />}\n          onConfirm={reset}\n        >\n          <Button type=\"primary\" danger disabled={hearts <= 0}>\n            <Translate pt=\"Recomeçar Jogo\" en=\"Reset Game\" />\n          </Button>\n        </Popconfirm>\n      </Region>\n    </Layout>\n  );\n}\n","import { DailyError } from 'pages/Daily/components/DailyError';\nimport { DailyLoading } from 'pages/Daily/components/DailyLoading';\nimport { useDailyChallenge } from 'pages/Daily/hooks/useDailyChallenge';\n// Hooks\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\n// Internal\nimport { DailyControleDeEstoque } from './components/DailyControleDeEstoque';\n// Sass\nimport './utils/styles.scss';\n\nexport function DailyControleDeEstoqueGame() {\n  const { currentUser } = useCurrentUserContext();\n\n  // Load challenge\n  const challengeQuery = useDailyChallenge();\n\n  if (challengeQuery.isLoading) {\n    return <DailyLoading />;\n  }\n  const dailyData = challengeQuery?.data?.['controle-de-estoque'];\n\n  if (challengeQuery.isError || !dailyData) {\n    return <DailyError />;\n  }\n\n  return <DailyControleDeEstoque data={dailyData} currentUser={currentUser} />;\n}\n","import { useMemo } from 'react';\n// Ant Design Resources\nimport { Input, Space, Typography } from 'antd';\n// Hooks\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\n// Internal\nimport { DailyChrome } from '../components/DailyChrome';\nimport { SETTINGS as AQUI_O } from '../games/AquiO/utils/settings';\nimport { SETTINGS as ARTE_RUIM } from '../games/ArteRuim/utils/settings';\nimport { SETTINGS as ARTISTA } from './Picaco/utils/settings';\nimport { SETTINGS as FILMACO } from '../games/Filmaco/utils/settings';\nimport { SETTINGS as PALAVREADO } from '../games/Palavreado/utils/settings';\nimport { SETTINGS as CONTROLE_DE_ESTOQUE } from '../games/ControleDeEstoque/utils/settings';\nimport { getToday } from '../utils';\n\nconst PRIORITY_LIST = [ARTE_RUIM, CONTROLE_DE_ESTOQUE, FILMACO, PALAVREADO, AQUI_O, ARTISTA];\n\nexport function DebugPage() {\n  const { isAdmin } = useCurrentUserContext();\n\n  if (!isAdmin) {\n    return <Typography.Text>Unauthorized</Typography.Text>;\n  }\n\n  return (\n    <DailyChrome>\n      <Space direction=\"vertical\" className=\"margin\">\n        <pre>Today: {getToday()}</pre>\n        {PRIORITY_LIST.map((game) => (\n          <Content localKey={game.KEY} />\n        ))}\n      </Space>\n    </DailyChrome>\n  );\n}\n\nfunction Content({ localKey }: { localKey: string }) {\n  const value = useMemo(\n    () => JSON.stringify(JSON.parse(localStorage.getItem(localKey) || '{}'), null, 2),\n    [localKey]\n  );\n  return (\n    <Space direction=\"vertical\">\n      <Typography.Paragraph className=\"center\" strong>\n        {localKey}\n      </Typography.Paragraph>\n\n      <Input.TextArea cols={10} rows={8} value={value} style={{ width: 'clamp(300px, 80vw, 960px)' }} />\n    </Space>\n  );\n}\n","import { loadLocalToday } from 'pages/Daily/utils';\nimport { LettersDictionary } from 'pages/Daily/utils/types';\n// Utils\nimport { deepCopy } from 'utils/helpers';\n// Internal\nimport { SETTINGS } from './settings';\nimport { DailyFilmacoEntry, FilmacoLocalToday, GameState } from './types';\n\nexport const DEFAULT_LOCAL_TODAY: FilmacoLocalToday = {\n  id: '',\n  letters: [],\n  number: 0,\n};\n\n/**\n * Retrieves the initial state for the game based on the provided data.\n * @param data - The DailyFilmacoEntry object containing the necessary data for the game.\n * @returns The initial GameState object.\n */\nexport const getInitialState = (data: DailyFilmacoEntry): GameState => {\n  const localToday = loadLocalToday({\n    key: SETTINGS.KEY,\n    gameId: data.id,\n    defaultValue: deepCopy(DEFAULT_LOCAL_TODAY),\n  });\n\n  const state: GameState = {\n    solution: getLettersInWord(data.title, true),\n    hearts: SETTINGS.HEARTS,\n    guesses: {},\n  };\n\n  if (localToday) {\n    let hearts = SETTINGS.HEARTS;\n    let solution = { ...state.solution };\n    const guesses = localToday.letters.reduce((acc: LettersDictionary, letter) => {\n      const isCorrect = state.solution[letter] !== undefined;\n      if (state.solution[letter] !== undefined) {\n        solution = { ...solution, [letter]: true };\n      }\n      acc[letter] = {\n        letter: letter,\n        state: isCorrect ? 'correct' : 'incorrect',\n        disabled: true,\n      };\n      hearts = isCorrect ? hearts : hearts - 1;\n      return acc;\n    }, {});\n\n    state.guesses = guesses;\n    state.hearts = hearts;\n    state.solution = solution;\n  }\n\n  return state;\n};\n\n/**\n * Returns an object with each letter in the word as a key and a boolean value indicating if the letter has been found.\n * @param text - The word to extract the letters from.\n * @returns An object with each letter in the word as a key and a boolean value indicating if the letter has been found.\n */\nexport function getLettersInWord(text: string, allowNumbers?: boolean): BooleanDictionary {\n  const cleanedUpText = text\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n    .toLowerCase();\n  const letters = cleanedUpText.split('');\n  const lettersInWord: BooleanDictionary = {};\n\n  letters.forEach((letter) => {\n    if (allowNumbers) {\n      if (letter.match(/[a-zA-Z0-9]/)) {\n        lettersInWord[letter] = false;\n      }\n    } else {\n      if (letter.match(/[a-zA-Z]/)) {\n        lettersInWord[letter] = false;\n      }\n    }\n  });\n  return lettersInWord;\n}\n\n/**\n * Removes diacritical marks from a given character and converts it to lowercase.\n *\n * @param char - The character to be cleaned up.\n * @returns The cleaned up character.\n */\nexport function cleanupLetter(char: string): string {\n  return char\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n    .toLowerCase();\n}\n\n/**\n * Checks if a character is a letter.\n *\n * @param char - The character to check.\n * @returns `true` if the character is a letter, `false` otherwise.\n */\nexport function isLetter(char: string, allowNumbers?: boolean): boolean {\n  if (allowNumbers) {\n    return cleanupLetter(char).match(/[a-zA-Z0-9]/) !== null;\n  }\n  return cleanupLetter(char).match(/[a-zA-Z]/) !== null;\n}\n","import { LettersDictionary } from 'pages/Daily/utils/types';\nimport { useMemo } from 'react';\n// Ant Design Resources\nimport { Avatar, Space } from 'antd';\n// Icons\nimport { BoxBlankIcon } from 'icons/BoxBlankIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\n// Internal\nimport { cleanupLetter, isLetter } from '../utils/helpers';\n\ntype PromptProps = {\n  text: string;\n  guesses: LettersDictionary;\n};\n\nexport function Prompt({ text, guesses }: PromptProps) {\n  const prompt = useMemo(() => text.split(' ').map((word) => word.split('')), [text]);\n  return (\n    <Space className=\"prompt\" wrap align=\"center\">\n      {prompt.map((word, i, p) => {\n        return (\n          <Space key={`word-${i}`} className=\"prompt-word\" wrap align=\"center\">\n            {word.map((l, j) => {\n              const letter = cleanupLetter(l);\n              const isCorrect = guesses?.[letter]?.state === 'correct';\n              const key = `${j}-${l}-${i}`;\n              if (isLetter(letter, true)) {\n                return isCorrect ? (\n                  <Avatar key={key} className=\"letter-correct\" shape=\"square\">\n                    {l}\n                  </Avatar>\n                ) : (\n                  <IconAvatar key={key} icon={<BoxBlankIcon />} className=\"letter-blank\" />\n                );\n              }\n\n              return (\n                <Avatar key={key} shape=\"square\">\n                  {l}\n                </Avatar>\n              );\n            })}\n            {i + 1 < p.length && <Avatar shape=\"square\"></Avatar>}\n          </Space>\n        );\n      })}\n    </Space>\n  );\n}\n","import { NextGameSuggestion } from 'pages/Daily/components/NextGameSuggestion';\nimport { getDailyName, getSourceName, writeHeartResultString } from 'pages/Daily/utils';\n// Ant Design Resources\nimport { Space, Typography } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Icons\nimport { BoxXIcon } from 'icons/BoxXIcon';\nimport { TrophyIcon } from 'icons/TrophyIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { TextHighlight } from 'components/text';\n// Internal\nimport { SETTINGS } from '../utils/settings';\nimport { CopyToClipboardResult } from '../../../components/CopyToClipboardResult';\n\ntype ResultsModalContentProps = {\n  challenge: number;\n  text: string;\n  win: boolean;\n  hearts: number;\n  solution: BooleanDictionary;\n};\n\nexport function ResultsModalContent({ text, challenge, win, hearts, solution }: ResultsModalContentProps) {\n  const { language, dualTranslate } = useLanguage();\n\n  const result = writeResult({\n    game: dualTranslate(SETTINGS.NAME),\n    challenge,\n    remainingHearts: hearts,\n    solution,\n    language,\n  });\n\n  return (\n    <Space direction=\"vertical\" className=\"space-container\">\n      <Typography.Title level={2} className=\"center\">\n        {win ? (\n          <>\n            <IconAvatar icon={<TrophyIcon />} /> <Translate pt=\"Parabéns!\" en=\"Congratulations!\" />\n          </>\n        ) : (\n          <>\n            <IconAvatar icon={<BoxXIcon />} /> <Translate pt=\"Que pena!\" en=\"Too bad!\" />\n          </>\n        )}\n      </Typography.Title>\n      <Typography.Paragraph className=\"center\">\n        {win ? (\n          <Translate pt=\"Você acertou o filme!\" en=\"You guessed the movie!\" />\n        ) : (\n          <Translate pt=\"Você errou o filme!\" en=\"You missed the movie!\" />\n        )}\n      </Typography.Paragraph>\n\n      <TextHighlight className=\"result-answer\">\n        <Typography.Paragraph className=\"text-center\">{text}</Typography.Paragraph>\n      </TextHighlight>\n\n      <CopyToClipboardResult result={result} rows={3} />\n\n      <NextGameSuggestion />\n    </Space>\n  );\n}\n\nfunction writeResult({\n  game,\n  challenge,\n  remainingHearts,\n  solution,\n  language,\n}: {\n  game: string;\n  challenge: number;\n  remainingHearts: number;\n  solution: BooleanDictionary;\n  language: Language;\n}) {\n  const totalLetters = Object.keys(solution).length;\n  const guessedLetters = Object.values(solution).filter(Boolean).length;\n\n  return [\n    `${SETTINGS.ICON} ${getDailyName(language)} ${game} #${challenge}`,\n    `${writeHeartResultString(remainingHearts, SETTINGS.HEARTS)} (${Math.round((guessedLetters / totalLetters) * 100)}%)`,\n    `https://www.kavispires.com/tardedivertida/#/${getSourceName(language)}`,\n  ].join('\\n');\n}\n","// Ant Design Resources\nimport { HeartFilled } from '@ant-design/icons';\nimport { Typography } from 'antd';\n// Components\nimport { Translate } from 'components/language';\n\nexport function Rules() {\n  return (\n    <Typography>\n      <Translate\n        pt={\n          <>\n            <li>Tente adivinhar o filme secreto observando os ícones e ano do filme.</li>\n            <li>\n              Os ícones não estão em ordem e podem significar palavras no título ou sobre o enredo do filme.\n            </li>\n            <li>Você deve apertar letra por letra (e números!) até que o nome esteja completo.</li>\n            <li>\n              Cada letra que você aperta que não está presente na resposta remove um coração e você tem apenas\n              3 <HeartFilled />.\n            </li>\n            <li>Boa sorte!</li>\n          </>\n        }\n        en={\n          <>\n            <li>Try to guess the secret movie by looking at the icons and movie year.</li>\n            <li>The icons are not in order and may mean words in the movie title or about the plot.</li>\n            <li>You must press letter by letter (and numbers!) until the name is complete.</li>\n            <li>\n              Each letter you press that is not present in the answer removes a heart and you only have 3{' '}\n              <HeartFilled />.\n            </li>\n            <li>Good luck!</li>\n          </>\n        }\n      />\n    </Typography>\n  );\n}\n","import { Keyboard } from 'pages/Daily/components/Keyboard';\nimport { Region } from 'pages/Daily/components/Region';\nimport { useMemo } from 'react';\n// Ant Design Resources\nimport { BarChartOutlined } from '@ant-design/icons';\nimport { Button, Layout, Modal, Space, Typography } from 'antd';\n// Types\nimport { Me } from 'types/user';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Icons\nimport { DailyMovieGameIcon } from 'icons/DailyMovieGameIcon';\n// Components\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { DualTranslate, Translate } from 'components/language';\n// Internal\nimport { getInitialState } from '../utils/helpers';\nimport { SETTINGS } from '../utils/settings';\nimport { DailyFilmacoEntry } from '../utils/types';\nimport { useFilmacoEngine } from '../utils/useFilmacoEngine';\nimport { Header } from '../../../components/Header';\nimport { Menu } from '../../../components/Menu';\nimport { Prompt } from './Prompt';\nimport { ResultsModalContent } from './ResultsModalContent';\nimport { Rules } from './Rules';\n\ntype DailyFilmacoProps = {\n  data: DailyFilmacoEntry;\n  currentUser: Me;\n};\n\nexport function DailyFilmaco({ data }: DailyFilmacoProps) {\n  const initialState = useMemo(() => getInitialState(data), []); // eslint-disable-line react-hooks/exhaustive-deps\n  const { hearts, guesses, showResultModal, setShowResultModal, isWin, isComplete, guessLetter, solution } =\n    useFilmacoEngine(data, initialState);\n  const width = useCardWidth(5, { margin: 64, maxWidth: 100, minWidth: 65 });\n\n  return (\n    <Layout className=\"app\">\n      <Header icon={<DailyMovieGameIcon />} localStorageKey={SETTINGS.KEY}>\n        TD <DualTranslate>{SETTINGS.NAME}</DualTranslate> #{data.number}\n      </Header>\n      <Layout.Content>\n        <Menu\n          hearts={hearts}\n          total={SETTINGS.HEARTS}\n          openRules={!isComplete || hearts === SETTINGS.HEARTS}\n          rules={<Rules />}\n        />\n\n        <Region>\n          <Typography.Text strong>\n            <Translate pt=\"Ano de Lançamento\" en=\"Release Year\" />: {data.year}\n          </Typography.Text>\n        </Region>\n\n        <Space className=\"space-container\" wrap>\n          {data.itemsIds.map((itemId, index) => (\n            <ItemCard key={`${itemId}-${index}`} id={itemId} width={width} />\n          ))}\n        </Space>\n\n        <Prompt text={data.title} guesses={guesses} />\n\n        {isComplete && (\n          <Space className=\"results-container\" direction=\"vertical\" align=\"center\">\n            <Button onClick={() => setShowResultModal(true)} type=\"primary\" icon={<BarChartOutlined />}>\n              <Translate pt=\"Ver Resultado\" en=\"Show Results\" />\n            </Button>\n          </Space>\n        )}\n        <Modal\n          title={<Translate pt=\"Resultado\" en=\"Results\" />}\n          open={showResultModal}\n          onCancel={() => setShowResultModal(false)}\n          footer={null}\n        >\n          <ResultsModalContent\n            challenge={data.number}\n            win={isWin}\n            hearts={hearts}\n            text={data.title}\n            solution={solution}\n          />\n        </Modal>\n\n        <Keyboard lettersState={guesses} onLetterClick={guessLetter} disabled={isComplete} withNumbers />\n      </Layout.Content>\n    </Layout>\n  );\n}\n","import { useDailyGameState } from 'pages/Daily/hooks/useDailyGameState';\nimport { useDailyLocalToday, useMarkAsPlayed } from 'pages/Daily/hooks/useDailyLocalToday';\nimport { useShowResultModal } from 'pages/Daily/hooks/useShowResultModal';\n// Utils\nimport { removeDuplicates } from 'utils/helpers';\n// Internal\nimport { DEFAULT_LOCAL_TODAY } from './helpers';\nimport { SETTINGS } from './settings';\nimport { DailyFilmacoEntry, FilmacoLocalToday, GameState } from './types';\n\nexport function useFilmacoEngine(data: DailyFilmacoEntry, initialState: GameState) {\n  const { state, setState } = useDailyGameState<GameState>(initialState);\n\n  const { localToday, updateLocalStorage } = useDailyLocalToday<FilmacoLocalToday>({\n    key: SETTINGS.KEY,\n    gameId: data.id,\n    defaultValue: DEFAULT_LOCAL_TODAY,\n  });\n  // ACTIONS\n  const guessLetter = (letter: string) => {\n    // Ignore previously guessed letters\n    if (state.guesses[letter]) {\n      return;\n    }\n\n    const isCorrect = state.solution[letter] !== undefined;\n\n    updateLocalStorage({\n      letters: removeDuplicates([...(localToday?.letters ?? []), letter]),\n    });\n\n    const solution = { ...state.solution };\n    if (isCorrect) {\n      solution[letter] = true;\n    }\n\n    setState((prev) => ({\n      ...prev,\n      guesses: {\n        ...prev.guesses,\n        [letter]: {\n          letter: letter,\n          state: isCorrect ? 'correct' : 'incorrect',\n          disabled: true,\n        },\n      },\n      solution,\n      hearts: isCorrect ? prev.hearts : prev.hearts - 1,\n    }));\n  };\n\n  // CONDITIONS\n  const isWin = Object.values(state.solution)\n    .filter((value) => value !== undefined)\n    .every(Boolean);\n  const isLose = state.hearts <= 0;\n  const isComplete = isWin || isLose;\n\n  useMarkAsPlayed({\n    key: SETTINGS.KEY,\n    isComplete,\n  });\n\n  // RESULTS MODAL\n  const { showResultModal, setShowResultModal } = useShowResultModal(isWin || isLose || isComplete);\n\n  return {\n    hearts: state.hearts,\n    guesses: state.guesses,\n    solution: state.solution,\n    showResultModal,\n    setShowResultModal,\n    isWin,\n    isLose,\n    isComplete,\n    guessLetter,\n  };\n}\n","import { DailyError } from 'pages/Daily/components/DailyError';\nimport { DailyLoading } from 'pages/Daily/components/DailyLoading';\n// Hooks\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\n// Internal\nimport { DailyFilmaco } from './components/DailyFilmaco';\nimport { useDailyChallenge } from '../../hooks/useDailyChallenge';\n// Sass\nimport './utils/styles.scss';\n\nexport function DailyFilmacoGame() {\n  const { currentUser } = useCurrentUserContext();\n\n  // Load challenge\n  const challengeQuery = useDailyChallenge();\n\n  if (challengeQuery.isLoading) {\n    return <DailyLoading />;\n  }\n\n  const dailyData = challengeQuery?.data?.['filmaco'];\n\n  if (challengeQuery.isError || !dailyData) {\n    return <DailyError />;\n  }\n\n  return <DailyFilmaco data={dailyData} currentUser={currentUser} />;\n}\n","import { ReactNode } from 'react';\n// Icons\nimport { SpeechBubbleAcceptedIcon } from 'icons/SpeechBubbleAcceptedIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\n// Internal\nimport { checkWasPlayedToday } from '../utils';\n\ntype PlayedWrapperProps = {\n  children: ReactNode;\n  lsKey: string;\n};\nexport function PlayedWrapper({ children, lsKey }: PlayedWrapperProps) {\n  const wasPlayed = checkWasPlayedToday(lsKey);\n\n  return (\n    <div className=\"played-wrapper\">\n      {wasPlayed && (\n        <IconAvatar icon={<SpeechBubbleAcceptedIcon />} size=\"small\" className=\"played-wrapper__played\" />\n      )}\n      {children}\n    </div>\n  );\n}\n","export const SETTINGS = {\n  NAME: { pt: 'Comunicação Alienígena', en: 'Alien Communication' },\n  ICON: '🛸',\n  HEARTS: 4,\n  KEY: 'COMUNICACAO_ALIENIGENA',\n};\n","import clsx from 'clsx';\nimport { Link } from 'react-router-dom';\n// Ant Design Resources\nimport { Space, Typography } from 'antd';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Icons\nimport { DailyAlienGameIcon } from 'icons/DailyAlienGameIcon';\nimport { DailyArtGameIcon } from 'icons/DailyArtGameIcon';\nimport { DailyDiagramGameIcon } from 'icons/DailyDiagramGameIcon';\nimport { DailyDrawingGameIcon } from 'icons/DailyDrawingGameIcon';\nimport { DailyFindingGameIcon } from 'icons/DailyFindingGameIcon';\nimport { DailyMovieGameIcon } from 'icons/DailyMovieGameIcon';\nimport { DailyWarehouseGameIcon } from 'icons/DailyWarehouseGameIcon';\nimport { DailyWordGameIcon } from 'icons/DailyWordGameIcon';\n// Components\nimport { TransparentButton } from 'components/buttons';\nimport { LanguageSwitch, Translate } from 'components/language';\n// Internal\nimport { DailyChrome } from '../components/DailyChrome';\nimport { PlayedWrapper } from '../components/PlayedWrapper';\nimport { SETTINGS as AQUI_O } from '../games/AquiO/utils/settings';\nimport { SETTINGS as ARTE_RUIM } from '../games/ArteRuim/utils/settings';\nimport { SETTINGS as PICACO } from './Picaco/utils/settings';\nimport { SETTINGS as CONTROLE_DE_ESTOQUE } from '../games/ControleDeEstoque/utils/settings';\nimport { SETTINGS as FILMACO } from '../games/Filmaco/utils/settings';\nimport { SETTINGS as PALAVREADO } from '../games/Palavreado/utils/settings';\nimport { SETTINGS as TEORIA_DE_CONJUNTOS } from '../games/TeoriaDeConjuntos/utils/settings';\nimport { SETTINGS as COMUNICACAO_ALIENIGENA } from '../games/ComunicacaoAlienigena/utils/settings';\nimport { checkWasPlayedToday } from '../utils';\n// import { DailyGroupingGameIcon } from 'icons/DailyGroupingGameIcon';\n// import { DailyCrimeGameIcon } from 'icons/DailyCrimeGameIcon';\n// import { DailyImagesGameIcon } from 'icons/DailyImagesGameIcon';\n\nexport function Hub() {\n  return (\n    <DailyChrome>\n      <div className=\"hub\">\n        <Typography.Title level={5}>\n          <Translate pt=\"Escolha um jogo\" en=\"Choose a game\" />\n        </Typography.Title>\n        <Space className=\"space-container\">\n          <LanguageSwitch />\n        </Space>\n\n        <div className=\"hub-list\">\n          <PlayedWrapper lsKey={ARTE_RUIM.KEY}>\n            <TransparentButton hoverType=\"sepia\">\n              <Link to=\"/diario/arte-ruim\" className=\"hub-item\">\n                <DailyArtGameIcon style={{ width: 75 }} />\n                <Translate pt=\"Arte Ruim\" en=\"Questionable Art\" />\n              </Link>\n            </TransparentButton>\n          </PlayedWrapper>\n\n          <PlayedWrapper lsKey={AQUI_O.KEY}>\n            <TransparentButton hoverType=\"sepia\">\n              <Link to=\"/diario/aqui-o\" className=\"hub-item\">\n                <DailyFindingGameIcon style={{ width: 75 }} />\n                <Translate pt=\"Aqui Ó\" en=\"Find This\" />\n              </Link>\n            </TransparentButton>\n          </PlayedWrapper>\n\n          <PlayedWrapper lsKey={CONTROLE_DE_ESTOQUE.KEY}>\n            <TransparentButton hoverType=\"sepia\">\n              <Link to=\"/diario/controle-de-estoque\" className=\"hub-item\">\n                <DailyWarehouseGameIcon style={{ width: 75 }} />\n                <Translate pt=\"Controle De Estoque\" en=\"Warehouse\" />\n              </Link>\n            </TransparentButton>\n          </PlayedWrapper>\n\n          <PlayedWrapper lsKey={FILMACO.KEY}>\n            <TransparentButton hoverType=\"sepia\">\n              <Link to=\"/diario/filmaco\" className=\"hub-item\">\n                <DailyMovieGameIcon style={{ width: 75 }} />\n                <Translate pt=\"Filmaço\" en=\"Movicon\" />\n              </Link>\n            </TransparentButton>\n          </PlayedWrapper>\n\n          <PlayedWrapper lsKey={PALAVREADO.KEY}>\n            <TransparentButton hoverType=\"sepia\">\n              <Link to=\"/diario/palavreado\" className=\"hub-item\">\n                <DailyWordGameIcon style={{ width: 75 }} />\n                <Translate pt=\"Palavreado\" en=\"Rewording\" />\n              </Link>\n            </TransparentButton>\n          </PlayedWrapper>\n\n          <PlayedWrapper lsKey={PICACO.KEY}>\n            <TransparentButton hoverType=\"sepia\">\n              <Link to=\"/diario/picaco\" className=\"hub-item\">\n                <DailyDrawingGameIcon style={{ width: 75 }} />\n                <Translate pt=\"Picaço!\" en=\"Big Artist!\" />\n              </Link>\n            </TransparentButton>\n          </PlayedWrapper>\n\n          <PlayedWrapper lsKey={TEORIA_DE_CONJUNTOS.KEY}>\n            <TransparentButton\n              hoverType=\"sepia\"\n              className={clsx(\n                !checkWasPlayedToday(TEORIA_DE_CONJUNTOS.KEY) && getAnimationClass('tada', { repeat: 3 })\n              )}\n            >\n              <Link to=\"/diario/teoria-de-conjuntos\" className=\"hub-item\">\n                <DailyDiagramGameIcon style={{ width: 75 }} />\n                <Translate pt=\"Teoria de Conjuntos\" en=\"Diagram Theory\" />\n              </Link>\n            </TransparentButton>\n          </PlayedWrapper>\n\n          <PlayedWrapper lsKey={COMUNICACAO_ALIENIGENA.KEY}>\n            <TransparentButton hoverType=\"sepia\">\n              <Link to=\"/diario/comunicacao-alienigena\" className=\"hub-item hub-item-disabled\">\n                <DailyAlienGameIcon style={{ width: 75 }} />\n                <Translate pt=\"Comunicação Alienígena\" en=\"Alien Communication\" />\n              </Link>\n            </TransparentButton>\n          </PlayedWrapper>\n\n          {/* <TransparentButton hoverType=\"sepia\" disabled className=\"hub-item-disabled\">\n            <Link to=\"/diario\" className=\"hub-item\">\n              <DailyGroupingGameIcon style={{ width: 75 }} />\n              <Translate pt=\"Quarteto\" en=\"Connect Four\" />\n            </Link>\n          </TransparentButton> */}\n\n          {/* <TransparentButton hoverType=\"sepia\" disabled className=\"hub-item-disabled\">\n            <Link to=\"/diario\" className=\"hub-item\">\n              <DailyCrimeGameIcon style={{ width: 75 }} />\n              <Translate pt=\"Crime Hediondo\" en=\"Horrible Crimes\" />\n            </Link>\n          </TransparentButton> */}\n\n          {/* <TransparentButton hoverType=\"sepia\" disabled className=\"hub-item-disabled\">\n            <Link to=\"/diario\" className=\"hub-item\">\n              <DailyImagesGameIcon style={{ width: 75 }} />\n              <Translate pt=\"Imagine\" en=\"Imagine\" />\n            </Link>\n          </TransparentButton> */}\n        </div>\n      </div>\n    </DailyChrome>\n  );\n}\n","import { chunk, cloneDeep } from 'lodash';\nimport { loadLocalToday } from 'pages/Daily/utils';\n// Utils\nimport { deepCopy } from 'utils/helpers';\n// Internal\nimport { SETTINGS } from './settings';\nimport { DailyPalavreadoEntry, GameState, PalavreadoLetter, PalavreadoLocalToday } from './types';\n\nexport const DEFAULT_LOCAL_TODAY: PalavreadoLocalToday = {\n  id: '',\n  boardState: [],\n  number: 0,\n  swaps: 0,\n};\n\nexport const getInitialState = (data: DailyPalavreadoEntry): GameState => {\n  const size = data.keyword.length;\n\n  const localToday = loadLocalToday({\n    key: SETTINGS.KEY,\n    gameId: data.id,\n    defaultValue: deepCopy(DEFAULT_LOCAL_TODAY),\n  });\n\n  const state: GameState = {\n    selection: null,\n    swap: [],\n    letters: parseLetters(data.letters, size),\n    boardState: [],\n    guesses: [],\n    hearts: Math.max(SETTINGS.HEARTS, size),\n    state: '',\n    swaps: 0,\n  };\n\n  if (localToday.boardState) {\n    const hearts = Math.max(SETTINGS.HEARTS, size) - localToday.boardState.length;\n\n    // Read state of the board and apply guesses\n    const lsGuesses = (localToday.boardState ?? []).map((board) => {\n      const guess = chunk(board, size);\n      return guess.map((g) => g.join(''));\n    });\n\n    // Apply latest board state\n    const latestBoardState = localToday.boardState[localToday.boardState.length - 1];\n    const copyLetters = cloneDeep(state.letters);\n    const answer = data.words.join('');\n    if (latestBoardState) {\n      copyLetters.forEach((letter, index) => {\n        letter.letter = latestBoardState[index];\n\n        if (letter.state === 'idle' && letter.letter === answer[index]) {\n          letter.state = String(Math.floor(index / size)) as PalavreadoLetter['state'];\n          letter.locked = true;\n        }\n\n        return letter;\n      });\n    }\n\n    state.hearts = hearts;\n    state.guesses = lsGuesses;\n    state.letters = copyLetters;\n    state.boardState = localToday.boardState ?? [];\n    state.swaps = localToday.swaps ?? 0;\n  }\n\n  return state;\n};\n\nconst KEYWORD_INDEXES: Record<number, number[]> = {\n  4: [0, 5, 10, 15],\n  5: [0, 6, 12, 18, 24],\n};\n\nconst KEYWORD_STATES: Record<number, string[]> = {\n  4: ['0', '1', '2', '3'],\n  5: ['0', '1', '2', '3', '4'],\n};\n\nexport const parseLetters = (letters: string[], size: number): PalavreadoLetter[] => {\n  const indexes = KEYWORD_INDEXES[size];\n  const states = KEYWORD_STATES[size];\n  return letters.map((letter, index) => ({\n    letter,\n    index,\n    state: (indexes.includes(index) ? states[indexes.indexOf(index)] : 'idle') as PalavreadoLetter['state'],\n    locked: indexes.includes(index),\n  }));\n};\n\n// export const orderLettersByWord = (letters: PalavreadoLetter[], word: string): PalavreadoLetter[] => {\n//   const orderedLetters: PalavreadoLetter[] = [];\n//   const usedIndexes: number[] = [];\n//   word.split('').forEach((wordLetter) => {\n//     const foundLetter = letters.find((cl) => !usedIndexes.includes(cl.index) && cl.letter === wordLetter);\n//     if (foundLetter) {\n//       usedIndexes.push(foundLetter?.index);\n//       orderedLetters.push(foundLetter);\n//     }\n//   });\n//   return orderedLetters;\n// };\n\nexport const calculateGuessValue = (word: string, guess: string): number => {\n  let value = 0;\n  word.split('').forEach((letter, index) => {\n    if (letter === guess[index]) {\n      value += 1;\n    }\n  });\n  return value;\n};\n","import clsx from 'clsx';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Internal\nimport { PalavreadoLetter } from '../utils/types';\n\ntype BoardProps = {\n  letters: PalavreadoLetter[];\n  selection: number | null;\n  swap: number[];\n  onLetterSelection: (index: number) => void;\n  guesses: string[][];\n  size: number;\n};\n\nexport function Board({ letters, onLetterSelection, selection, swap, guesses, size }: BoardProps) {\n  return (\n    <div\n      className=\"palavreado-board\"\n      style={{\n        gridTemplateColumns: `repeat(${size}, 1fr)`,\n        gridTemplateRows: `repeat(${size}, 1fr)`,\n      }}\n    >\n      {letters.map(({ letter, locked, state }, index) => {\n        const row = Math.floor(index / size);\n        const col = index % size;\n        const previousWrongPlacement = guesses.some((attempts) => attempts[row][col] === letter) && !locked;\n\n        return (\n          <button\n            key={`${letter}-${index}`}\n            className={clsx(\n              'palavreado-board__tile',\n              swap.includes(index) && getAnimationClass('zoomIn', { speed: 'faster' }),\n              !locked && selection !== index && 'palavreado-board__tile--button',\n              selection === index && 'palavreado-board__tile--selected',\n              `palavreado-board__tile--${state}`,\n\n              previousWrongPlacement && `palavreado-board__tile--place-guessed`\n            )}\n            onClick={() => (!locked ? onLetterSelection(index) : null)}\n          >\n            {letter}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n","import { chunk } from 'lodash';\nimport { NextGameSuggestion } from 'pages/Daily/components/NextGameSuggestion';\nimport { getDailyName, getSourceName, writeHeartResultString } from 'pages/Daily/utils';\n// Ant Design Resources\nimport { Divider, Space, Typography } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Icons\nimport { BoxXIcon } from 'icons/BoxXIcon';\nimport { TrophyIcon } from 'icons/TrophyIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { Translate } from 'components/language';\n// Internal\nimport { SETTINGS } from '../utils/settings';\nimport { PalavreadoLetter } from '../utils/types';\nimport { CopyToClipboardResult } from '../../../components/CopyToClipboardResult';\n\ntype ResultsModalContentProps = {\n  challenge: number;\n  words: string[];\n  isWin: boolean;\n  hearts: number;\n  letters: PalavreadoLetter[];\n  swaps: number;\n  size: number;\n};\n\nexport function ResultsModalContent({\n  challenge,\n  words,\n  isWin,\n  hearts,\n  letters,\n  swaps,\n  size,\n}: ResultsModalContentProps) {\n  const { language, dualTranslate } = useLanguage();\n\n  const result = writeResult({\n    game: dualTranslate(SETTINGS.NAME),\n    challenge,\n    remainingHearts: hearts,\n    letters,\n    language,\n    swaps,\n    size,\n  });\n\n  return (\n    <Space direction=\"vertical\" className=\"space-container\">\n      <Typography.Title level={2} className=\"center\">\n        {isWin ? (\n          <>\n            <IconAvatar icon={<TrophyIcon />} /> <Translate pt=\"Parabéns!\" en=\"Congratulations!\" />\n          </>\n        ) : (\n          <>\n            <IconAvatar icon={<BoxXIcon />} /> <Translate pt=\"Que pena!\" en=\"Too bad!\" />\n          </>\n        )}\n      </Typography.Title>\n      <Typography.Paragraph className=\"center\">\n        {isWin ? (\n          <Translate pt=\"Você acertou as palavras!\" en=\"You guessed the words!\" />\n        ) : (\n          <Translate pt=\"Você não acertou todas as palavras!\" en=\"You missed the words!\" />\n        )}\n      </Typography.Paragraph>\n\n      <Space className=\"result-answer\" split={<Divider type=\"vertical\" />}>\n        {words.map((word) => (\n          <Typography.Text key={word}>{word}</Typography.Text>\n        ))}\n      </Space>\n\n      <CopyToClipboardResult result={result} rows={size + 2} />\n\n      <NextGameSuggestion />\n    </Space>\n  );\n}\n\nfunction writeResult({\n  game,\n  challenge,\n  remainingHearts,\n  letters,\n  language,\n  swaps,\n  size,\n}: {\n  game: string;\n  challenge: number;\n  remainingHearts: number;\n  letters: PalavreadoLetter[];\n  language: Language;\n  swaps: number;\n  size: number;\n}) {\n  const cleanUpAttempts = chunk(letters, size).map((row) =>\n    row.map((letter) => {\n      switch (letter.state) {\n        case '0':\n          return '🟥';\n        case '1':\n          return '🟦';\n        case '2':\n          return '🟪';\n        case '3':\n          return '🟫';\n        case '4':\n          return '🟧';\n        default:\n          return '⬜️';\n      }\n    })\n  );\n\n  return [\n    `${SETTINGS.ICON} ${getDailyName(language)} ${game} #${challenge}`,\n    `${writeHeartResultString(remainingHearts, Math.max(SETTINGS.HEARTS, size), ' ')} (${swaps} trocas)`,\n    cleanUpAttempts\n      .map((row) => row.join(' ').trim())\n      .filter(Boolean)\n      .join('\\n'),\n    `https://www.kavispires.com/tardedivertida/#/${getSourceName(language)}`,\n  ].join('\\n');\n}\n","// Ant Design Resources\nimport { HeartFilled } from '@ant-design/icons';\nimport { Typography } from 'antd';\n// Components\nimport { Translate } from 'components/language';\n// Internal\nimport { SETTINGS } from '../utils/settings';\n\nexport function Rules() {\n  return (\n    <Typography>\n      <Translate\n        pt={\n          <>\n            <li>\n              Junto à palavra-chave de {SETTINGS.WORD_LENGTH} letras diagonal na grade existem{' '}\n              {SETTINGS.HEARTS} palavras embaralhadas.\n            </li>\n            <li>Você precisa ordenar as letras para formar as {SETTINGS.HEARTS} palavras horizontais.</li>\n            <li>Selecione uma letra e depois uma outra para que elas troquem de lugar.</li>\n            <li>Quando você acha que a grade está certa, aperte \"Enviar\".</li>\n            <li>\n              Todas as letras colocadas na posição corretas serão coloridas da corta da linha. Mas se você não\n              acertas todas, você perde um <HeartFilled />.\n            </li>\n            <li>\n              Você tem {SETTINGS.HEARTS} <HeartFilled /> chances. Boa sorte!\n            </li>\n          </>\n        }\n        en={\n          <>\n            <li>\n              Next to the {SETTINGS.WORD_LENGTH}-letter keyword diagonally in the grid are {SETTINGS.HEARTS}{' '}\n              shuffled words.\n            </li>\n            <li>You need to order the letters to form the {SETTINGS.HEARTS} words in the rows.</li>\n            <li>Select a letter and then another so they swap places.</li>\n            <li>When you think the grid is correct, press \"Submit\".</li>\n            <li>\n              All letters placed in the correct position will be colored in the line color. But if you don't\n              get them all, you lose a <HeartFilled />.\n            </li>\n            <li>\n              You have {SETTINGS.HEARTS} <HeartFilled /> chances. Good luck!\n            </li>\n          </>\n        }\n      />\n    </Typography>\n  );\n}\n","import { Region, TextRegion } from 'pages/Daily/components/Region';\nimport { useMemo } from 'react';\n// Ant Design Resources\nimport { BarChartOutlined } from '@ant-design/icons';\nimport { Button, Divider, Flex, Layout, Modal, Space, Typography } from 'antd';\n// Types\nimport { Me } from 'types/user';\n// Icons\nimport { DailyWordGameIcon } from 'icons/DailyWordGameIcon';\n// Components\nimport { DualTranslate, Translate } from 'components/language';\n// Internal\nimport { getInitialState } from '../utils/helpers';\nimport { SETTINGS } from '../utils/settings';\nimport { DailyPalavreadoEntry } from '../utils/types';\nimport { usePalavreadoEngine } from '../utils/usePalavreadoEngine';\nimport { Header } from '../../../components/Header';\nimport { Menu } from '../../../components/Menu';\nimport { Board } from './Board';\nimport { ResultsModalContent } from './ResultsModalContent';\nimport { Rules } from './Rules';\n\ntype DailyPalavreadoProps = {\n  data: DailyPalavreadoEntry;\n  currentUser: Me;\n};\n\nexport function DailyPalavreado({ data }: DailyPalavreadoProps) {\n  const initialState = useMemo(() => getInitialState(data), []); // eslint-disable-line react-hooks/exhaustive-deps\n  const {\n    hearts,\n    selection,\n    guesses,\n    letters,\n    showResultModal,\n    setShowResultModal,\n    isWin,\n    isComplete,\n    selectLetter,\n    submitGrid,\n    swap,\n    swaps,\n    size,\n    keyword,\n  } = usePalavreadoEngine(data, initialState);\n\n  return (\n    <Layout className=\"app\">\n      <Header icon={<DailyWordGameIcon />} localStorageKey={SETTINGS.KEY}>\n        TD <DualTranslate>{SETTINGS.NAME}</DualTranslate> #{data.number}\n      </Header>\n      <Layout.Content>\n        <Menu hearts={hearts} total={Math.max(SETTINGS.HEARTS, size)} openRules={true} rules={<Rules />} />\n\n        <Region>\n          <Typography.Text strong className=\"palavreado-word\">\n            {keyword} {swaps > 0 && ` ↔️ ${swaps}`}\n          </Typography.Text>\n          <Board\n            letters={letters}\n            onLetterSelection={selectLetter}\n            selection={selection}\n            swap={swap}\n            guesses={guesses}\n            size={size}\n          />\n        </Region>\n\n        <Region>\n          {isComplete ? (\n            <Button onClick={() => setShowResultModal(true)} type=\"primary\" icon={<BarChartOutlined />}>\n              <Translate pt=\"Ver Resultado\" en=\"Show Results\" />\n            </Button>\n          ) : (\n            <Button type=\"primary\" onClick={submitGrid} disabled={isComplete} block>\n              <Translate pt=\"Enviar\" en=\"Submit\" />\n            </Button>\n          )}\n        </Region>\n\n        <TextRegion direction=\"vertical\" size=\"small\">\n          {guesses.map((attempt, index) => (\n            <Space\n              key={`${attempt}-${index}`}\n              split={<Divider type=\"vertical\" className=\"mx-0\" />}\n              size=\"small\"\n            >\n              {attempt.map((word, i) => (\n                <Typography.Text\n                  keyboard\n                  className=\"palavreado-word\"\n                  key={`${attempt}-${index}-${word}-${i}`}\n                >\n                  {word}\n                </Typography.Text>\n              ))}\n            </Space>\n          ))}\n        </TextRegion>\n\n        {guesses.length > 0 && (\n          <TextRegion>\n            <Flex className=\"contained\" gap={12} align=\"center\">\n              <div className=\"palavreado-board__tile palavreado-board__tile--place-guessed palavreado-board__tile--sample\">\n                ?\n              </div>\n              <Typography.Text>\n                <Translate\n                  pt={\n                    <>\n                      Posições que já foram testadas com a letra específica aparecem assim (borda preta\n                      pontilhada).\n                      <br />\n                      Evite enviar com letras assim, elas continuarão erradas.\n                    </>\n                  }\n                  en={\n                    <>\n                      Positions that have already been tested with a specific letter appear like this (dotted\n                      black border).\n                      <br />\n                      Avoid submitting with letters like this, they will remain wrong.\n                    </>\n                  }\n                />\n              </Typography.Text>\n            </Flex>\n          </TextRegion>\n        )}\n\n        <Modal\n          title={<Translate pt=\"Resultado\" en=\"Results\" />}\n          open={showResultModal}\n          onCancel={() => setShowResultModal(false)}\n          footer={null}\n        >\n          <ResultsModalContent\n            challenge={data?.number}\n            isWin={isWin}\n            hearts={hearts}\n            words={data.words}\n            letters={letters}\n            swaps={swaps}\n            size={size}\n          />\n        </Modal>\n      </Layout.Content>\n    </Layout>\n  );\n}\n","import { chunk, cloneDeep } from 'lodash';\nimport { useDailyGameState } from 'pages/Daily/hooks/useDailyGameState';\nimport { useDailyLocalToday, useMarkAsPlayed } from 'pages/Daily/hooks/useDailyLocalToday';\nimport { useShowResultModal } from 'pages/Daily/hooks/useShowResultModal';\n// Internal\nimport { DEFAULT_LOCAL_TODAY } from './helpers';\nimport { SETTINGS } from './settings';\nimport { DailyPalavreadoEntry, GameState, PalavreadoLetter, PalavreadoLocalToday } from './types';\n\nexport function usePalavreadoEngine(data: DailyPalavreadoEntry, initialState: GameState) {\n  const size = data.keyword.length;\n  const { state, setState, updateState } = useDailyGameState<GameState>(initialState);\n\n  const { updateLocalStorage } = useDailyLocalToday<PalavreadoLocalToday>({\n    key: SETTINGS.KEY,\n    gameId: data.id,\n    defaultValue: DEFAULT_LOCAL_TODAY,\n  });\n\n  // ACTIONS\n  const selectLetter = (index: number) => {\n    if (state.selection === index) {\n      updateState({\n        selection: null,\n        swap: [],\n      });\n      return;\n    }\n\n    if (state.selection === null) {\n      updateState({\n        selection: index,\n        swap: [],\n      });\n      return;\n    }\n\n    setState((prev) => {\n      const copyLetters = cloneDeep(state.letters);\n      const temp = copyLetters[prev.selection!];\n      copyLetters[prev.selection!] = copyLetters[index];\n      copyLetters[index] = temp;\n\n      updateLocalStorage({\n        swaps: prev.swaps + 1,\n      });\n\n      return {\n        ...prev,\n        letters: copyLetters,\n        selection: null,\n        swap: [prev.selection!, index],\n        swaps: prev.swaps + 1,\n      };\n    });\n  };\n\n  const submitGrid = () => {\n    const answer = data.words.join('');\n\n    setState((prev) => {\n      // Evaluate letters and mark any correct letter as correct and locked\n      const copyLetters = cloneDeep(state.letters);\n      copyLetters.map((letter, index) => {\n        if (letter.state === 'idle' && letter.letter === answer[index]) {\n          letter.state = String(Math.floor(index / size)) as PalavreadoLetter['state'];\n          letter.locked = true;\n        }\n        return letter;\n      });\n\n      // Generate the guessed words from the letter\n      const generatedWords = chunk(copyLetters, size).map((lg) => lg.map((l) => l.letter).join(''));\n\n      // Evaluate if any of the words match the words in the data\n      generatedWords.forEach((word, wordIndex) => {\n        if (data.words[wordIndex] === word) {\n          word.split('').forEach((_, i) => {\n            copyLetters[wordIndex * size + i].state = String(wordIndex) as PalavreadoLetter['state'];\n            copyLetters[wordIndex * size + i].locked = true;\n          });\n        }\n      });\n\n      const isAllCorrect = copyLetters.every((letter) => letter.locked);\n\n      const guesses = generatedWords;\n      const newBoardState = copyLetters.map((l) => l.letter);\n\n      updateLocalStorage({\n        boardState: [...state.boardState, newBoardState],\n        swaps: prev.swaps,\n      });\n\n      return {\n        ...prev,\n        guesses: [...prev.guesses, guesses],\n        boardState: [...prev.boardState, newBoardState],\n        letters: copyLetters,\n        selection: null,\n        swap: [],\n        hearts: isAllCorrect ? prev.hearts : prev.hearts - 1,\n      };\n    });\n  };\n\n  // CONDITIONS\n  const isWin = Object.values(state.letters).every((l) => l.locked);\n  const isLose = state.hearts <= 0;\n  const isComplete = isWin || isLose;\n\n  useMarkAsPlayed({\n    key: SETTINGS.KEY,\n    isComplete,\n  });\n\n  // RESULTS MODAL\n  const { showResultModal, setShowResultModal } = useShowResultModal(isComplete);\n\n  return {\n    hearts: state.hearts,\n    guesses: state.guesses,\n    letters: state.letters,\n    selection: state.selection,\n    swap: state.swap,\n    swaps: state.swaps,\n    showResultModal,\n    setShowResultModal,\n    isWin,\n    isLose,\n    isComplete,\n    selectLetter,\n    submitGrid,\n    keyword: data.keyword,\n    size,\n  };\n}\n","import { DailyError } from 'pages/Daily/components/DailyError';\nimport { DailyLoading } from 'pages/Daily/components/DailyLoading';\n// Hooks\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\n// Internal\nimport { DailyPalavreado } from './components/DailyPalavreado';\nimport { useDailyChallenge } from '../../hooks/useDailyChallenge';\n// Sass\nimport './utils/styles.scss';\n\nexport function DailyPalavreadoGame() {\n  const { currentUser } = useCurrentUserContext();\n\n  // Load challenge\n  const challengeQuery = useDailyChallenge();\n\n  if (challengeQuery.isLoading) {\n    return <DailyLoading />;\n  }\n  const dailyData = challengeQuery?.data?.['palavreado'];\n\n  if (challengeQuery.isError || !dailyData) {\n    return <DailyError />;\n  }\n\n  return <DailyPalavreado data={dailyData} currentUser={currentUser} />;\n}\n","import { sampleSize } from 'lodash';\nimport { loadLocalToday } from 'pages/Daily/utils';\n// Utils\nimport { deepCopy } from 'utils/helpers';\n// Internal\nimport { SETTINGS } from './settings';\nimport { PicacoLocalToday, DailyPicacoEntry, GameState } from './types';\n\nexport const DEFAULT_LOCAL_TODAY: PicacoLocalToday = {\n  id: '',\n  number: 0,\n  played: false,\n};\n\nexport const getInitialState = (data: DailyPicacoEntry): GameState => {\n  const localToday = loadLocalToday({\n    key: SETTINGS.KEY,\n    gameId: data.id,\n    defaultValue: deepCopy(DEFAULT_LOCAL_TODAY),\n  });\n\n  return {\n    cards: sampleSize(data.cards, SETTINGS.DRAWINGS),\n    drawings: [],\n    cardIndex: 0,\n    played: localToday.played ?? false,\n    screen: 'idle',\n  };\n};\n","import { useDailyGameState } from 'pages/Daily/hooks/useDailyGameState';\nimport { useDailyLocalToday, useMarkAsPlayed } from 'pages/Daily/hooks/useDailyLocalToday';\nimport { useDailySaveDrawings } from 'pages/Daily/hooks/useDailySaveDrawings';\nimport { wait } from 'pages/Daily/utils';\n// Types\nimport { Me } from 'types/user';\n// Utils\nimport { SEPARATOR } from 'utils/constants';\nimport { removeDuplicates } from 'utils/helpers';\n// Internal\nimport { DEFAULT_LOCAL_TODAY } from './helpers';\nimport { SETTINGS } from './settings';\nimport { PicacoLocalToday, DailyPicacoEntry, DrawingToSave, GameState } from './types';\n\nexport function usePicacoEngine(data: DailyPicacoEntry, currentUser: Me, initialState: GameState) {\n  const { state, setState, updateState } = useDailyGameState<GameState>(initialState);\n\n  const { updateLocalStorage } = useDailyLocalToday<PicacoLocalToday>({\n    key: SETTINGS.KEY,\n    gameId: data.id,\n    defaultValue: DEFAULT_LOCAL_TODAY,\n  });\n\n  const card = state.cards[state.cardIndex];\n\n  const onStart = () => updateState({ screen: 'playing' });\n\n  const onNextCard = async (drawing: any) => {\n    if (state.cardIndex < state.cards.length - 1) {\n      return setState((prev) => ({\n        ...prev,\n        drawings: [...prev.drawings, JSON.stringify(drawing)],\n        cardIndex: prev.cardIndex + 1,\n      }));\n    }\n\n    if (state.cardIndex === state.cards.length - 1) {\n      updateState({ screen: 'saving' });\n\n      // SAVE\n      await wait(1000);\n\n      onSaveDrawings({\n        ...state,\n        drawings: removeDuplicates([...state.drawings, JSON.stringify(drawing)]),\n        screen: 'saving',\n      });\n    }\n  };\n\n  const mutation = useDailySaveDrawings(() => {\n    updateLocalStorage({ played: true });\n    updateState({ played: true, screen: 'idle' });\n  });\n\n  useMarkAsPlayed({\n    key: SETTINGS.KEY,\n    isComplete: state.played,\n  });\n\n  const onSaveDrawings = (stateToSave: GameState) => {\n    const toSave = stateToSave.drawings.reduce((acc: Dictionary<DrawingToSave>, drawing, index) => {\n      if (drawing.length > 50) {\n        const card = stateToSave.cards[index];\n        acc[`${card.id}${SEPARATOR}${Date.now()}`] = {\n          drawing,\n          cardId: card.id,\n          level: card.level,\n          playerId: currentUser.id,\n          successRate: 0,\n          text: card.text,\n        };\n      }\n\n      return acc;\n    }, {});\n\n    mutation.mutate(toSave);\n  };\n\n  return {\n    cardNumber: state.cardIndex + 1,\n    card,\n    isPlaying: state.screen === 'playing',\n    isIdle: state.screen === 'idle',\n    isSaving: state.screen === 'saving' || mutation.isPending,\n    alreadyPlayed: state.played,\n    onStart,\n    onNextCard,\n  };\n}\n","import { useMutation } from '@tanstack/react-query';\n// Ant Design Resources\nimport { App } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Services\nimport { DAILY_API, DAILY_API_ACTIONS } from 'services/adapters';\n// Internal\nimport { DrawingToSave } from '../games/Picaco/utils/types';\n\nexport function useDailySaveDrawings(onSuccess: Function) {\n  const { translate } = useLanguage();\n  const { notification } = App.useApp();\n\n  const query = useMutation({\n    mutationKey: ['add-player'],\n    mutationFn: async (payload: Dictionary<DrawingToSave>) =>\n      await DAILY_API.run({\n        action: DAILY_API_ACTIONS.SAVE_DRAWING,\n        drawings: payload,\n        language: Object.values(payload)?.[0]?.cardId?.split('-')?.[2] ?? 'pt',\n      }),\n    onSuccess: () => {\n      notification.success({\n        message: translate('Desenhos salvos com sucesso!', 'Drawings saved successfully!'),\n        placement: 'bottomLeft',\n      });\n      onSuccess();\n    },\n    onError: (e: any) => {\n      notification.error({\n        message: translate(\n          'Vixi, o aplicativo encontrou um erro ao tentar salvar desenhos',\n          'Oops, the application failed when trying to save drawings'\n        ),\n        description: JSON.stringify(e.message),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n    },\n  });\n\n  return query;\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Flex } from 'antd';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { DrawingCanvas } from 'components/canvas';\nimport { TimerBar } from 'components/timers';\n// Internal\nimport { SETTINGS } from '../utils/settings';\n\ntype CanvasProps = {\n  onNextCard: (lines: any) => void;\n  maxWidth: number;\n};\n\nconst duration = SETTINGS.DURATION / SETTINGS.DRAWINGS;\n\nexport function Canvas({ onNextCard, maxWidth }: CanvasProps) {\n  const [lines, setLines] = useState<CanvasLine[]>([]);\n\n  const { timeLeft } = useCountdown({\n    duration: duration + 2,\n    autoStart: true,\n    onExpire: () => {\n      onNextCard(lines);\n    },\n  });\n\n  return (\n    <Flex className=\"full-width\" vertical style={{ maxWidth }}>\n      <TimerBar value={timeLeft - 1} total={duration} className=\"picaco-time-bar\" />\n      {timeLeft < 12 && (\n        <DrawingCanvas\n          lines={lines}\n          className={getAnimationClass('zoomIn', { speed: 'faster' })}\n          setLines={setLines}\n          strokeWidth=\"small\"\n          style={{\n            transform: `scale(${maxWidth / 500})`,\n            transformOrigin: 'top center',\n          }}\n        />\n      )}\n    </Flex>\n  );\n}\n","// Ant Design Resources\nimport { Typography } from 'antd';\n// Components\nimport { Translate } from 'components/language';\n\nexport function Rules() {\n  return (\n    <Typography>\n      <Translate\n        pt={\n          <>\n            <li>Contribua com o banco de dados do TD!</li>\n            <li>A cada 10 segundos, você irá ler uma expressão e desenhar.</li>\n            <li>Após 6 expressões, ou 1 minuto, seus desenhos serão salvos no banco de dados.</li>\n            <li>Tente fazer o melhor possível, evite pornografia, e foque nos detalhes.</li>\n            <li>Boa sorte!</li>\n          </>\n        }\n        en={\n          <>\n            <li>Contribute to TD's database!</li>\n            <li>Every 10 seconds, you will read an expression and draw.</li>\n            <li>After 6 expressions or 1 minute, your drawings will be saved in the database</li>\n            <li>Try to do your best possible, avoid NSFW content, and focus on the details.</li>\n            <li>Good luck!</li>\n          </>\n        }\n      />\n    </Typography>\n  );\n}\n","import { NextGameSuggestion } from 'pages/Daily/components/NextGameSuggestion';\nimport { useMemo } from 'react';\nimport { useMeasure } from 'react-use';\n// Ant Design Resources\nimport { Button, Divider, Layout, Space } from 'antd';\n// Types\nimport { Me } from 'types/user';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Icons\nimport { AnimatedProcessingIcon } from 'icons/AnimatedProcessingIcon';\nimport { DailyDrawingGameIcon } from 'icons/DailyDrawingGameIcon';\nimport { ThumbsUpIcon } from 'icons/ThumbsUpIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { Card } from 'components/cards';\nimport { DualTranslate, Translate } from 'components/language';\nimport { TimeHighlight } from 'components/metrics/TimeHighlight';\nimport { Instruction } from 'components/text';\n// Internal\nimport { getInitialState } from '../utils/helpers';\nimport { SETTINGS } from '../utils/settings';\nimport { DailyPicacoEntry } from '../utils/types';\nimport { usePicacoEngine } from '../utils/usePicacoEngine';\nimport { Header } from '../../../components/Header';\nimport { Menu } from '../../../components/Menu';\nimport { Canvas } from './Canvas';\nimport { Rules } from './Rules';\n\ntype DailyPicacoProps = {\n  data: DailyPicacoEntry;\n  currentUser: Me;\n};\n\nexport function DailyPicaco({ data, currentUser }: DailyPicacoProps) {\n  const initialState = useMemo(() => getInitialState(data), []); // eslint-disable-line react-hooks/exhaustive-deps\n  const { cardNumber, card, onNextCard, isPlaying, isIdle, isSaving, alreadyPlayed, onStart } =\n    usePicacoEngine(data, currentUser, initialState);\n\n  // UI state\n  const [contentRef, contentMeasure] = useMeasure<HTMLDivElement>();\n  const [headerRef, headerMeasure] = useMeasure<HTMLDivElement>();\n  const maxWidth = useMemo(() => {\n    const width = contentMeasure.width - 24;\n    const height = contentMeasure.height - headerMeasure.height - 24;\n    return Math.max(Math.min(width, height, 500), 150);\n  }, [contentMeasure.height, contentMeasure.width, headerMeasure.height]);\n\n  return (\n    <Layout className=\"app\">\n      <Header icon={<DailyDrawingGameIcon />} localStorageKey=\"\">\n        TD <DualTranslate>{SETTINGS.NAME}</DualTranslate> #{data.number}\n      </Header>\n      <Layout.Content ref={contentRef}>\n        <div ref={headerRef}>\n          <Menu hearts={0} total={0} openRules rules={<Rules />} />\n          {alreadyPlayed && (\n            <Instruction className=\"info-screen\">\n              <IconAvatar icon={<ThumbsUpIcon />} />\n              <Translate pt=\"Você já jogou hoje!\" en=\"You've already played today!\" />\n              <Translate pt=\"Volte amanhã para jogar novamente!\" en=\"Come back tomorrow to play again!\" />\n              <Divider />\n              <NextGameSuggestion />\n            </Instruction>\n          )}\n\n          {!alreadyPlayed && !isSaving && (\n            <Space className=\"space-container\">\n              <Card\n                key={isPlaying ? card.id : 'none'}\n                header={isPlaying ? `#${cardNumber}` : '?'}\n                color=\"gold\"\n                className={!isPlaying ? 'invisible' : getAnimationClass('tada')}\n              >\n                {!isPlaying ? (\n                  <>\n                    Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut\n                    labore et dolore.\n                  </>\n                ) : (\n                  card.text\n                )}\n              </Card>\n            </Space>\n          )}\n        </div>\n\n        {isPlaying && (\n          <Space className=\"space-container\">\n            <Canvas key={card.id} maxWidth={maxWidth} onNextCard={onNextCard} />\n          </Space>\n        )}\n\n        {isSaving && (\n          <Instruction className=\"info-screen\">\n            <IconAvatar icon={<AnimatedProcessingIcon />} />\n            <Translate pt=\"Salvando\" en=\"Saving\" />\n          </Instruction>\n        )}\n\n        {isIdle && !alreadyPlayed && (\n          <Space className=\"space-container\">\n            <Space direction=\"vertical\" className=\"space-container\">\n              <Instruction contained>\n                <Translate\n                  pt={\n                    <>\n                      Você tem <TimeHighlight>{SETTINGS.DURATION / SETTINGS.DRAWINGS}</TimeHighlight> segundos\n                      para fazer cada um dos {SETTINGS.DRAWINGS} desenhos.\n                      <br />\n                      Você <strong>NÃO</strong> pode usar letras ou números.\n                      <br />O tempo começa assim que você aperta \"Começar\".\n                    </>\n                  }\n                  en={\n                    <>\n                      You have <TimeHighlight>{SETTINGS.DURATION / SETTINGS.DRAWINGS}</TimeHighlight> seconds\n                      to draw each of the {SETTINGS.DRAWINGS} drawings.\n                      <br />\n                      You <strong>CANNOT</strong> use letters or numbers.\n                      <br />\n                      The time starts as soon as you press \"Start\".\n                    </>\n                  }\n                />\n              </Instruction>\n              <Button type=\"primary\" size=\"large\" onClick={onStart} disabled={alreadyPlayed}>\n                {isSaving ? <Translate pt=\"Salvando\" en=\"Saving\" /> : <Translate pt=\"Começar\" en=\"Start\" />}\n              </Button>\n            </Space>\n          </Space>\n        )}\n      </Layout.Content>\n    </Layout>\n  );\n}\n","import { DailyError } from 'pages/Daily/components/DailyError';\nimport { DailyLoading } from 'pages/Daily/components/DailyLoading';\n// Hooks\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\n// Internal\nimport { DailyPicaco } from './components/DailyPicaco';\nimport { useDailyChallenge } from '../../hooks/useDailyChallenge';\n// Sass\nimport './utils/styles.scss';\n\nexport function DailyPicacoGame() {\n  const { currentUser, isLoading } = useCurrentUserContext();\n\n  // Load challenge\n  const challengeQuery = useDailyChallenge();\n\n  if (challengeQuery.isLoading || isLoading) {\n    return <DailyLoading />;\n  }\n\n  const dailyData = challengeQuery?.data?.['artista'];\n\n  if (challengeQuery.isError || !dailyData) {\n    return <DailyError />;\n  }\n\n  return <DailyPicaco data={dailyData} currentUser={currentUser} />;\n}\n","import { loadLocalToday } from 'pages/Daily/utils';\n// Utils\nimport { deepCopy } from 'utils/helpers';\n// Internal\nimport { SETTINGS } from './settings';\nimport { DailyTeoriaDeConjuntosEntry, GameState, TeoriaDeConjuntosLocalToday } from './types';\n\nexport const DEFAULT_LOCAL_TODAY: TeoriaDeConjuntosLocalToday = {\n  id: '',\n  guesses: [],\n  hearts: SETTINGS.HEARTS,\n};\n\nexport const getInitialState = (data: DailyTeoriaDeConjuntosEntry): GameState => {\n  const localToday = loadLocalToday({\n    key: SETTINGS.KEY,\n    gameId: data.id,\n    defaultValue: deepCopy(DEFAULT_LOCAL_TODAY),\n  });\n\n  const state: GameState = {\n    hearts: SETTINGS.HEARTS,\n    win: false,\n    hand: data.things.slice(0, 4),\n    deck: data.things.slice(4),\n    rule1Things: [\n      {\n        id: data.rule1.thing.id,\n        name: data.rule1.thing.name,\n        rule: 1,\n      },\n    ],\n    rule2Things: [\n      {\n        id: data.rule2.thing.id,\n        name: data.rule2.thing.name,\n        rule: 2,\n      },\n    ],\n    intersectingThings: [\n      {\n        id: data.intersectingThing.id,\n        name: data.intersectingThing.name,\n      },\n    ],\n    activeThing: null,\n    activeArea: null,\n    guesses: [],\n  };\n\n  // Apply local state\n  localToday.guesses.forEach((guess) => {\n    const activeThing = state.hand.find((t) => t.id === guess.thingId);\n\n    if (activeThing) {\n      // Remove it from hand\n      state.hand = state.hand.filter((t) => t.id !== guess.thingId);\n\n      // Place it correctly\n      if (activeThing.rule === 1) {\n        state.rule1Things.push(activeThing);\n      } else if (activeThing.rule === 2) {\n        state.rule2Things.push(activeThing);\n      } else if (activeThing.rule === 0) {\n        state.intersectingThings.push(activeThing);\n      }\n\n      if (activeThing.rule !== guess.sectionId) {\n        if (state.deck.length > 0) {\n          state.hand.push(state.deck.pop()!);\n        }\n      } else {\n        if (state.hand.length === 0) {\n          state.win = true;\n        }\n      }\n    }\n  });\n\n  state.guesses = localToday.guesses ?? state.guesses ?? [];\n  state.hearts = localToday.hearts ?? state.hearts ?? SETTINGS.HEARTS;\n\n  return state;\n};\n","import { ReactNode } from 'react';\n\ntype DiagramProps = {\n  leftCircleChildren: ReactNode;\n  rightCircleChildren: ReactNode;\n  intersectionChildren: ReactNode;\n} & React.SVGProps<SVGSVGElement>;\n\nexport function Diagram({\n  leftCircleChildren,\n  rightCircleChildren,\n  intersectionChildren,\n  ...props\n}: DiagramProps) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 760 500\" {...props}>\n      <path\n        fill=\"#fbb03b\"\n        stroke=\"#000\"\n        strokeMiterlimit=\"10\"\n        strokeWidth=\"5\"\n        d=\"M252.78 3.5c-136.42 0-247 110.59-247 247s110.59 247 247 247 247-110.59 247-247-110.59-247-247-247zm.99 483.07C123.39 486.57 17.7 380.88 17.7 250.5S123.39 14.43 253.77 14.43 489.84 120.12 489.84 250.5 384.15 486.57 253.77 486.57z\"\n      ></path>\n      <path\n        fill=\"#f15a24\"\n        stroke=\"#000\"\n        strokeMiterlimit=\"10\"\n        strokeWidth=\"5\"\n        d=\"M508.22 3.5c-136.41 0-247 110.59-247 247s110.59 247 247 247 247-110.59 247-247-110.58-247-247-247zm.99 483.07c-130.38 0-236.07-105.69-236.07-236.07S378.84 14.43 509.22 14.43 745.29 120.12 745.29 250.5 639.6 486.57 509.22 486.57z\"\n      ></path>\n      <path\n        fill=\"#eee\"\n        d=\"M487.34 250.5c0-62.39-24.29-121.04-68.41-165.16a235.9 235.9 0 00-37.43-30.47 235.35 235.35 0 00-37.43 30.47c-44.12 44.11-68.41 102.77-68.41 165.16s24.29 121.04 68.41 165.16a235.9 235.9 0 0037.43 30.47 235.35 235.35 0 0037.43-30.47c44.12-44.11 68.41-102.77 68.41-165.16z\"\n      ></path>\n      <path\n        // fill=\"#535353\"\n        fill=\"#eee\"\n        d=\"M258.72 250.5c0-66.64 25.95-129.3 73.08-176.42a253.125 253.125 0 0134.1-28.57c-33.98-18.65-72.29-28.57-112.13-28.57-62.39 0-121.04 24.29-165.16 68.41C44.5 129.46 20.2 188.11 20.2 250.5s24.29 121.04 68.41 165.16c44.11 44.12 102.77 68.41 165.16 68.41 39.84 0 78.15-9.92 112.13-28.57a252.507 252.507 0 01-34.1-28.57c-47.12-47.12-73.08-109.78-73.08-176.42zM674.37 85.34C630.25 41.22 571.6 16.93 509.21 16.93c-40.27 0-78.98 10.14-113.24 29.18 11.74 8.26 22.86 17.6 33.22 27.96 47.12 47.12 73.08 109.78 73.08 176.42s-25.95 129.3-73.08 176.42a252.312 252.312 0 01-33.22 27.96c34.25 19.04 72.96 29.18 113.24 29.18 62.39 0 121.04-24.29 165.16-68.41 44.12-44.11 68.41-102.77 68.41-165.16s-24.29-121.04-68.41-165.16z\"\n      ></path>\n      <foreignObject x=\"30\" y=\"25\" width=\"250\" height=\"450\">\n        <div className=\"venn-diagram__circle-content-left\">{leftCircleChildren}</div>\n      </foreignObject>\n      <foreignObject x=\"480\" y=\"25\" width=\"250\" height=\"450\">\n        <div className=\"venn-diagram__circle-content-right\">{rightCircleChildren}</div>\n      </foreignObject>\n      <foreignObject x=\"290\" y=\"65\" width=\"182\" height=\"370\">\n        <div className=\"venn-diagram__circle-content-intersection\">{intersectionChildren}</div>\n      </foreignObject>\n    </svg>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Flex, Typography } from 'antd';\n// Components\nimport { ItemCard } from 'components/cards/ItemCard';\n\ntype ThingProps = {\n  itemId: string;\n  name: string;\n  width?: number;\n  className?: string;\n  minimize?: boolean;\n};\n\nexport function Thing({ itemId, name, width = 50, className, minimize }: ThingProps) {\n  return (\n    <Flex vertical align=\"center\" className={clsx('thing', className)}>\n      {!minimize && (\n        <ItemCard\n          id={itemId}\n          width={Math.max(Math.min(width, 100), 35)}\n          padding={0}\n          className=\"thing__sprite\"\n        />\n      )}\n      <Typography.Text code key={itemId} className=\"thing__name\">\n        {name}\n      </Typography.Text>\n    </Flex>\n  );\n}\n","// Internal\nimport { TThing } from '../utils/types';\nimport { Thing } from './Thing';\n\ntype InDiagramThingsProps = {\n  things: TThing[];\n  width: number;\n};\n\nexport function InDiagramThings({ things, width }: InDiagramThingsProps) {\n  return (\n    <>\n      {things.map((thing, index, arr) => {\n        const isLatestThing = index === arr.length - 1;\n\n        return (\n          <Thing\n            key={thing.id}\n            itemId={thing.id}\n            name={thing.name}\n            width={width * (isLatestThing ? 2 : 1)}\n            className=\"thing-enlarged\"\n            minimize={arr.length > 3 && !isLatestThing}\n          />\n        );\n      })}\n    </>\n  );\n}\n","import { Region } from 'pages/Daily/components/Region';\n// Ant Design Resources\nimport { CaretDownOutlined } from '@ant-design/icons';\nimport { Flex, Modal } from 'antd';\n// Components\nimport { Translate } from 'components/language';\n// Internal\nimport { useTeoriaDeConjuntosEngine } from '../utils/useTeoriaDeConjuntosEngine';\nimport { Thing } from './Thing';\n\ntype PlacementModalProps = Pick<\n  ReturnType<typeof useTeoriaDeConjuntosEngine>,\n  | 'activeThing'\n  | 'activeArea'\n  | 'onSelectArea'\n  | 'onConfirmPlacement'\n  | 'rule1Things'\n  | 'rule2Things'\n  | 'intersectingThings'\n>;\n\nexport function PlacementModal({\n  activeThing,\n  activeArea,\n  onSelectArea,\n  onConfirmPlacement,\n  rule1Things,\n  rule2Things,\n  intersectingThings,\n}: PlacementModalProps) {\n  const title = {\n    1: <Translate pt=\"no círculo da esquerda\" en=\"in the left circle?\" />,\n    2: <Translate pt=\"no círculo da direita\" en=\"in the right circle?\" />,\n    0: <Translate pt=\"na interseção\" en=\"in the intersection?\" />,\n    null: <Translate pt=\"\" en=\"\" />,\n  }[String(activeArea)] ?? <Translate pt=\"\" en=\"\" />;\n\n  const things =\n    {\n      1: rule1Things,\n      2: rule2Things,\n      0: intersectingThings,\n      null: [],\n    }[String(activeArea)] ?? [];\n\n  return (\n    <Modal\n      title={\n        <>\n          <Translate\n            pt={`Tem certeza que quer colocar ${activeThing?.name} `}\n            en={`Are you sure you want to place ${activeThing?.name} `}\n          />\n          {title}\n        </>\n      }\n      open\n      onCancel={() => onSelectArea(null)}\n      cancelText={<Translate pt=\"Não\" en=\"No\" />}\n      onOk={() => onConfirmPlacement()}\n      okText={<Translate pt=\"Sim\" en=\"Yes\" />}\n    >\n      <Region>\n        {activeThing && <Thing itemId={activeThing?.id} name={activeThing?.name} width={50} />}\n        <CaretDownOutlined />\n        <Flex wrap=\"wrap\" align=\"center\" justify=\"center\" gap={6} className=\"diagram-area-sample\">\n          {things.map((thing) => (\n            <Thing key={thing.id} itemId={thing.id} name={thing.name} width={50} />\n          ))}\n        </Flex>\n      </Region>\n    </Modal>\n  );\n}\n","import { NextGameSuggestion } from 'pages/Daily/components/NextGameSuggestion';\nimport { getSourceName, writeHeartResultString } from 'pages/Daily/utils';\n// Ant Design Resources\nimport { Space, Typography } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Icons\nimport { BoxXIcon } from 'icons/BoxXIcon';\nimport { CircleIcon } from 'icons/CircleIcon';\nimport { TrophyIcon } from 'icons/TrophyIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { Translate } from 'components/language';\n// Internal\nimport { SETTINGS } from '../utils/settings';\nimport { useTeoriaDeConjuntosEngine } from '../utils/useTeoriaDeConjuntosEngine';\nimport { DailyTeoriaDeConjuntosEntry } from '../utils/types';\nimport { CopyToClipboardResult } from '../../../components/CopyToClipboardResult';\n\ntype ResultsModalContentProps = {\n  challenge: number;\n  title: string;\n  isWin: boolean;\n  hearts: number;\n  guesses: ReturnType<typeof useTeoriaDeConjuntosEngine>['guesses'];\n  data: DailyTeoriaDeConjuntosEntry;\n};\n\nexport function ResultsModalContent({\n  challenge,\n  title,\n  isWin,\n  hearts,\n  guesses,\n  data,\n}: ResultsModalContentProps) {\n  const { language, dualTranslate } = useLanguage();\n\n  const result = writeResult({\n    game: dualTranslate(SETTINGS.NAME),\n    challenge,\n    remainingHearts: hearts,\n    language,\n    guesses,\n  });\n\n  return (\n    <Space direction=\"vertical\" className=\"space-container\">\n      <Typography.Title level={2} className=\"center\">\n        {isWin ? (\n          <>\n            <IconAvatar icon={<TrophyIcon />} /> <Translate pt=\"Parabéns!\" en=\"Congratulations!\" />\n          </>\n        ) : (\n          <>\n            <IconAvatar icon={<BoxXIcon />} /> <Translate pt=\"Que pena!\" en=\"Too bad!\" />\n          </>\n        )}\n      </Typography.Title>\n\n      <Typography.Paragraph className=\"center\">\n        Regra do círculo <IconAvatar icon={<CircleIcon mainColor=\"gold\" />} size=\"small\" />\n        <br />\n        <Typography.Text code> {data.rule1.text}</Typography.Text>\n      </Typography.Paragraph>\n\n      <Typography.Paragraph className=\"center\">\n        Regra do círculo <IconAvatar icon={<CircleIcon mainColor=\"red\" />} size=\"small\" />\n        <br />\n        <Typography.Text code> {data.rule2.text}</Typography.Text>\n      </Typography.Paragraph>\n\n      <CopyToClipboardResult result={result} rows={3} />\n\n      <NextGameSuggestion />\n    </Space>\n  );\n}\n\nfunction writeResult({\n  game,\n  challenge,\n  remainingHearts,\n  language,\n  guesses,\n}: {\n  game: string;\n  challenge: number;\n  remainingHearts: number;\n  language: Language;\n  guesses: ReturnType<typeof useTeoriaDeConjuntosEngine>['guesses'];\n}) {\n  const cleanUpAttempts = guesses.map((guess) => {\n    return {\n      1: '🟡',\n      2: '🔴',\n      0: '🟠',\n      false: '✖️',\n    }[String(guess.result)];\n  });\n\n  return [\n    `${SETTINGS.ICON} TD ${game} #${challenge}`,\n    `${writeHeartResultString(remainingHearts, SETTINGS.HEARTS, ' ')}`,\n    cleanUpAttempts.join(' '),\n    `https://www.kavispires.com/tardedivertida/#/${getSourceName(language)}`,\n  ].join('\\n');\n}\n","import { BetaBanner } from 'pages/Daily/components/BetaBanner';\n// Ant Design Resources\nimport { HeartFilled } from '@ant-design/icons';\nimport { Typography } from 'antd';\n// Components\nimport { Translate } from 'components/language';\n// Internal\nimport { SETTINGS } from '../utils/settings';\n\nexport function Rules() {\n  return (\n    <Typography>\n      <BetaBanner />\n      <Translate\n        pt={\n          <>\n            <li>Existem dois círculos conectados formando um diagrama com uma intercessão.</li>\n            <li>\n              Cada um dos dois círculo possui uma regra gramatical secreta que pode ir desde \"Começa com B\" ou\n              \"Tem três sílabas\" ou \"Tem mais consoantes que vogais\", etc.\n            </li>\n            <li>\n              Para começar, existe uma \"coisa\" em cada uma das áreas do diagrama. A coisa na área central\n              obedece a regra do círculo amarelo e a do vermelho, enquanto a coisa em só um lado obedece\n              somente a regra daquele círculo. Teoria de conjuntos básica! Matemática 5a série.\n            </li>\n            <li>O objetivo é você colocar 4 coisas, uma a uma, na área correta do diagrama.</li>\n            <li>\n              Se você colocar uma coisa na área errada, o jogo vai colocar a coisa na área correta, você perde\n              uma vida, e ganha uma coisa para posicionar.\n            </li>\n            <li>\n              Dica: o título do jogo é uma pista sobre a regra dos círculos. \"Gramática\" pode ser sobre o\n              número de sílabas ou sílaba tônica, \"Contagem\" sobre quantidade de letras. \"Inclusão\" sobre se\n              tem uma letra específica, etc...\n            </li>\n\n            <li>\n              Você tem {SETTINGS.HEARTS} <HeartFilled /> chances. Boa sorte!\n            </li>\n          </>\n        }\n        en={\n          <>\n            <li>There are two connected circles forming a diagram with an intersection.</li>\n            <li>\n              Each of the two circles has a secret grammar rule that can range from \"Starts with B\" or \"Has\n              three syllables\" or \"Has more consonants than vowels\"\n            </li>\n            <li>\n              To start, there is a \"thing\" in each of the diagram areas. The thing in the central area obeys\n              the rule of the yellow circle and the red one, while the thing on just one side obeys only the\n              rule of that circle. Basic set theory! 5th grade math.\n            </li>\n            <li>The goal is for you to place 4 things, one by one, in the correct area of the diagram.</li>\n            <li>\n              If you place a thing in the wrong area, the game will place the thing in the correct area, you\n              lose a heart, and gain a thing to position.\n            </li>\n            <li>\n              You have {SETTINGS.HEARTS} <HeartFilled /> chances. Good luck!\n            </li>\n          </>\n        }\n      />\n    </Typography>\n  );\n}\n","import { Region } from 'pages/Daily/components/Region';\nimport { useToggle } from 'react-use';\n// Ant Design Resources\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport { Button, Modal, Typography } from 'antd';\n// Components\nimport { Translate } from 'components/language';\n\nexport function RulesHints() {\n  const [showTipsModal, toggleTipsModal] = useToggle(false);\n\n  return (\n    <>\n      <Region className=\"rules-hints\">\n        <Button onClick={() => toggleTipsModal(true)} icon={<QuestionCircleOutlined />} ghost>\n          <Translate pt=\"Entenda as regras gramaticais\" en=\"Understand the grammar rules\" />\n        </Button>\n      </Region>\n      <Modal\n        title={<Translate pt=\"Regras gramaticais\" en=\"Grammar rules\" />}\n        open={showTipsModal}\n        footer={null}\n        onCancel={toggleTipsModal}\n      >\n        <Typography.Paragraph>\n          O título do jogo diário contém dicas sobres as regras gramaticais secretas dos círculos em forma de\n          categorias.\n          <br />\n          As estrelas é a classificação do nível de dificuldade das regras (1-5).\n        </Typography.Paragraph>\n\n        <Entry category=\"Comparação\" hints={['Quantidade de vogais vs consoantes ou posição']} />\n\n        <Entry\n          category=\"Contagem\"\n          hints={['Contém um número específico de letras, vogais, consoantes, ou sílabas']}\n        />\n\n        <Entry category=\"Gramática\" hints={['Sílaba tônica, origem, gênero']} />\n\n        <Entry category=\"Inclusão\" hints={['Contém uma ou mais letras específicas']} />\n\n        <Entry category=\"Inicialização\" hints={['Começa com uma letra (ou letras) específica']} />\n\n        <Entry category=\"Repetição\" hints={['Contém letras repetidas ou repetidas de maneira específica']} />\n\n        <Entry category=\"Sequência\" hints={['Contém uma sequência de letras específica']} />\n\n        <Entry category=\"Terminação\" hints={['Termina com uma letra (ou letras) específica']} />\n      </Modal>\n    </>\n  );\n}\n\nfunction Entry({ category, hints }: { category: string; hints: string[] }) {\n  return (\n    <>\n      <Typography.Paragraph>\n        <Typography.Text strong>{category}: </Typography.Text>\n        {hints.join(', ')}.\n      </Typography.Paragraph>\n      <ul></ul>\n    </>\n  );\n}\n","import clsx from 'clsx';\nimport { Region, TextRegion } from 'pages/Daily/components/Region';\nimport { useMemo } from 'react';\nimport { useMeasure } from 'react-use';\n// Ant Design Resources\nimport { BarChartOutlined } from '@ant-design/icons';\nimport { Button, Layout, Modal, Rate, Tooltip, Typography } from 'antd';\n// Types\nimport { Me } from 'types/user';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Icons\nimport { DailyDiagramGameIcon } from 'icons/DailyDiagramGameIcon';\n// Components\nimport { TransparentButton } from 'components/buttons';\nimport { DualTranslate, Translate } from 'components/language';\n// Internal\nimport { getInitialState } from '../utils/helpers';\nimport { SETTINGS } from '../utils/settings';\nimport { DailyTeoriaDeConjuntosEntry } from '../utils/types';\nimport { useTeoriaDeConjuntosEngine } from '../utils/useTeoriaDeConjuntosEngine';\nimport { Header } from '../../../components/Header';\nimport { Menu } from '../../../components/Menu';\nimport { Diagram } from './Diagram';\nimport { InDiagramThings } from './InDiagramThings';\nimport { PlacementModal } from './PlacementModal';\nimport { ResultsModalContent } from './ResultsModalContent';\nimport { Rules } from './Rules';\nimport { RulesHints } from './RulesHints';\nimport { Thing } from './Thing';\n\ntype DailyTeoriaDeConjuntosProps = {\n  data: DailyTeoriaDeConjuntosEntry;\n  currentUser: Me;\n};\n\nexport function DailyTeoriaDeConjuntos({ data }: DailyTeoriaDeConjuntosProps) {\n  const initialState = useMemo(() => getInitialState(data), []); // eslint-disable-line react-hooks/exhaustive-deps\n  const {\n    hearts,\n    showResultModal,\n    setShowResultModal,\n    isWin,\n    isComplete,\n    hand,\n    rule1Things,\n    rule2Things,\n    intersectingThings,\n    activeThing,\n    activeArea,\n    onSelectThing,\n    onSelectArea,\n    onConfirmPlacement,\n    guesses,\n  } = useTeoriaDeConjuntosEngine(data, initialState);\n\n  const [contentRef, contentMeasure] = useMeasure<HTMLDivElement>();\n\n  const thingWidth = useMemo(() => {\n    const totalWidth = contentMeasure.width / 6 - 16;\n    return Math.min(Math.max(totalWidth, 48), 96);\n  }, [contentMeasure.width]);\n\n  return (\n    <Layout className=\"app\">\n      <Header icon={<DailyDiagramGameIcon />} localStorageKey={SETTINGS.KEY}>\n        <DualTranslate>{SETTINGS.NAME}</DualTranslate> #{data.number}\n      </Header>\n      <Layout.Content ref={contentRef}>\n        <Menu hearts={hearts} total={SETTINGS.HEARTS} openRules={true} rules={<Rules />} />\n\n        <Region>\n          <Typography.Text strong className=\"teoria-de-conjuntos-title\">\n            {data.title}\n          </Typography.Text>\n          <Tooltip title={<Translate pt=\"Dificuldade\" en=\"Difficulty\" />}>\n            <Rate disabled value={data.level} count={data.level} />\n          </Tooltip>\n        </Region>\n\n        <Region>\n          <Diagram\n            width={Math.min(contentMeasure.width - 16, 600)}\n            leftCircleChildren={\n              isComplete ? (\n                <InDiagramThings things={rule1Things} width={thingWidth} />\n              ) : (\n                <TransparentButton onClick={() => onSelectArea(1)} disabled={isComplete} hoverType=\"none\">\n                  <InDiagramThings things={rule1Things} width={thingWidth} />\n                </TransparentButton>\n              )\n            }\n            rightCircleChildren={\n              isComplete ? (\n                <InDiagramThings things={rule2Things} width={thingWidth} />\n              ) : (\n                <TransparentButton onClick={() => onSelectArea(2)} disabled={isComplete} hoverType=\"none\">\n                  <InDiagramThings things={rule2Things} width={thingWidth} />\n                </TransparentButton>\n              )\n            }\n            intersectionChildren={\n              isComplete ? (\n                <InDiagramThings things={intersectingThings} width={thingWidth} />\n              ) : (\n                <TransparentButton onClick={() => onSelectArea(0)} disabled={isComplete} hoverType=\"none\">\n                  <InDiagramThings things={intersectingThings} width={thingWidth} />\n                </TransparentButton>\n              )\n            }\n          />\n        </Region>\n\n        {isComplete ? (\n          <TextRegion>\n            <Translate pt=\"Você já completou o desafio!\" en=\"You have already completed the challenge!\" />\n          </TextRegion>\n        ) : (\n          <TextRegion>\n            <Translate\n              pt=\"Selecione uma coisa e coloque na área correta:\"\n              en=\"Select a thing and place it in the correct area:\"\n            />\n          </TextRegion>\n        )}\n\n        {isComplete && (\n          <Region>\n            <Button onClick={() => setShowResultModal(true)} type=\"primary\" icon={<BarChartOutlined />}>\n              <Translate pt=\"Ver Resultado\" en=\"Show Results\" />\n            </Button>\n          </Region>\n        )}\n\n        <Region className=\"space-center\" direction=\"horizontal\">\n          {hand.map((thing) => (\n            <TransparentButton\n              key={thing.id}\n              className={clsx('thing-button', getAnimationClass('heartBeat'))}\n              activeClass=\"thing-button__active\"\n              onClick={() => onSelectThing(thing)}\n              active={thing.id === activeThing?.id}\n              disabled={isComplete}\n              hoverType=\"none\"\n            >\n              <Thing itemId={thing.id} name={thing.name} width={thingWidth} />\n            </TransparentButton>\n          ))}\n        </Region>\n\n        <RulesHints />\n\n        {activeThing && activeArea !== null && (\n          <PlacementModal\n            activeThing={activeThing}\n            activeArea={activeArea}\n            onSelectArea={onSelectArea}\n            onConfirmPlacement={onConfirmPlacement}\n            rule1Things={rule1Things}\n            rule2Things={rule2Things}\n            intersectingThings={intersectingThings}\n          />\n        )}\n\n        <Modal\n          title={<Translate pt=\"Resultado\" en=\"Results\" />}\n          open={showResultModal}\n          onCancel={() => setShowResultModal(false)}\n          footer={null}\n        >\n          <ResultsModalContent\n            challenge={data?.number}\n            isWin={isWin}\n            hearts={hearts}\n            guesses={guesses}\n            title={data.title}\n            data={data}\n          />\n        </Modal>\n      </Layout.Content>\n    </Layout>\n  );\n}\n","import { useDailyGameState } from 'pages/Daily/hooks/useDailyGameState';\nimport { useDailyLocalToday, useMarkAsPlayed } from 'pages/Daily/hooks/useDailyLocalToday';\nimport { useShowResultModal } from 'pages/Daily/hooks/useShowResultModal';\n// Ant Design Resources\nimport { App } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { deepCopy } from 'utils/helpers';\n// Internal\nimport { DEFAULT_LOCAL_TODAY } from './helpers';\nimport { SETTINGS } from './settings';\nimport { DailyTeoriaDeConjuntosEntry, GameState, Guess, TeoriaDeConjuntosLocalToday, TThing } from './types';\n\nexport function useTeoriaDeConjuntosEngine(data: DailyTeoriaDeConjuntosEntry, initialState: GameState) {\n  const { message } = App.useApp();\n  const { translate } = useLanguage();\n  const { state, setState, updateState } = useDailyGameState<GameState>(initialState);\n\n  const { updateLocalStorage } = useDailyLocalToday<TeoriaDeConjuntosLocalToday>({\n    key: SETTINGS.KEY,\n    gameId: data.id,\n    defaultValue: DEFAULT_LOCAL_TODAY,\n  });\n\n  // CONDITIONS\n  const isWin = state.win;\n  const isLose = state.hearts <= 0;\n  const isComplete = isWin || isLose;\n\n  useMarkAsPlayed({\n    key: SETTINGS.KEY,\n    isComplete,\n  });\n\n  // RESULTS MODAL\n  const { showResultModal, setShowResultModal } = useShowResultModal(isComplete);\n\n  const onSelectThing = (thing: TThing) => {\n    updateState({ activeThing: thing });\n  };\n\n  const onSelectArea = (area: number | null) => {\n    if (!state.activeThing) return;\n\n    updateState({ activeArea: area });\n  };\n\n  const onConfirmPlacement = () => {\n    if (!state.activeThing && state.activeArea === null) return;\n\n    let isCorrect = false;\n    if (state.activeThing?.rule === state.activeArea) {\n      isCorrect = true;\n      message.success({\n        content: translate('Correto!', 'Correct!'),\n      });\n    } else {\n      isCorrect = false;\n      message.error({\n        content: translate('Incorreto!', 'Incorrect!'),\n      });\n    }\n\n    let localStateUpdate = state.guesses;\n    let localStateUpdateHearts = state.hearts;\n\n    setState((prevState) => {\n      const copy = deepCopy(prevState);\n\n      if (state.activeThing) {\n        // Remove thing from hand\n        copy.hand = copy.hand.filter((thing) => thing.id !== state.activeThing?.id);\n\n        let guess: Guess = {\n          thingId: state.activeThing.id,\n          sectionId: state.activeArea!,\n          result: state.activeArea!,\n        };\n\n        // Add to the appropriate area\n        if (state.activeThing.rule === 1) {\n          copy.rule1Things.push(state.activeThing!);\n        } else if (state.activeThing.rule === 2) {\n          copy.rule2Things.push(state.activeThing!);\n        } else if (state.activeThing.rule === 0) {\n          copy.intersectingThings.push(state.activeThing!);\n        }\n\n        // If incorrect, add from the deck and lose a heart\n        if (!isCorrect) {\n          guess.result = false;\n          copy.hearts -= 1;\n          localStateUpdateHearts -= 1;\n          if (copy.deck.length > 0) {\n            copy.hand.push(copy.deck.pop()!);\n          }\n        }\n\n        // Add guess\n        copy.guesses.push(guess);\n        localStateUpdate = deepCopy(copy.guesses);\n\n        // Remove active things\n        copy.activeThing = null;\n        copy.activeArea = null;\n\n        // Check if all things are placed and update win state\n        if (copy.hand.length === 0) {\n          copy.win = true;\n        }\n      }\n\n      return copy;\n    });\n\n    // Update local today\n    updateLocalStorage({\n      guesses: localStateUpdate,\n      hearts: localStateUpdateHearts,\n    });\n  };\n\n  return {\n    hearts: state.hearts,\n    showResultModal,\n    setShowResultModal,\n    isWin,\n    isLose,\n    isComplete,\n    hand: state.hand,\n    rule1Things: state.rule1Things,\n    rule2Things: state.rule2Things,\n    intersectingThings: state.intersectingThings,\n    activeThing: state.activeThing,\n    activeArea: state.activeArea,\n    guesses: state.guesses,\n    onSelectThing,\n    onSelectArea,\n    onConfirmPlacement,\n  };\n}\n","import { DailyError } from 'pages/Daily/components/DailyError';\nimport { DailyLoading } from 'pages/Daily/components/DailyLoading';\nimport { useDailyChallenge } from 'pages/Daily/hooks/useDailyChallenge';\n// Hooks\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\n// Internal\nimport { DailyTeoriaDeConjuntos } from './components/DailyTeoriaDeConjuntos';\n// Sass\nimport './utils/styles.scss';\n\nexport function DailyTeoriaDeConjuntosGame() {\n  const { currentUser } = useCurrentUserContext();\n\n  // Load challenge\n  const challengeQuery = useDailyChallenge();\n\n  if (challengeQuery.isLoading || challengeQuery.isRefetching) {\n    return <DailyLoading />;\n  }\n  const dailyData = challengeQuery?.data?.['teoria-de-conjuntos'];\n\n  if (challengeQuery.isError || !dailyData) {\n    return <DailyError />;\n  }\n\n  return <DailyTeoriaDeConjuntos data={dailyData} currentUser={currentUser} />;\n}\n","import { useQuery } from '@tanstack/react-query';\nimport { sample } from 'lodash';\nimport { getSourceName, wait } from 'pages/Daily/utils';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { print } from 'utils/helpers';\n// Internal\nimport DEMO from './demo.json';\nimport { DailyComunicacaoAlienigenaEntry } from './types';\n// Services\n\nexport const useComunicacaoAlienigenaDemo = () => {\n  const { language } = useLanguage();\n  const collectionName = getSourceName(language);\n\n  // Load challenge\n  return useQuery<DailyComunicacaoAlienigenaEntry>({\n    queryKey: ['comunicacao-alienigena-demo'],\n    queryFn: async () => {\n      console.count(`Fetching ${collectionName}...`);\n      await wait(1250);\n      const responseData = sample(DEMO) as DailyComunicacaoAlienigenaEntry;\n      print({ [collectionName]: responseData }, 'table');\n      return responseData;\n    },\n\n    enabled: language === 'pt',\n    retry: false,\n  });\n};\n","import { loadLocalToday } from 'pages/Daily/utils';\n// Utils\nimport { deepCopy } from 'utils/helpers';\n// Internal\nimport { SETTINGS } from './settings';\nimport { ComunicacaoAlienigenaLocalToday, DailyComunicacaoAlienigenaEntry, GameState } from './types';\n\nexport const DEFAULT_LOCAL_TODAY: ComunicacaoAlienigenaLocalToday = {\n  id: '',\n  guesses: [],\n  number: 0,\n};\n\nexport const getInitialState = (data: DailyComunicacaoAlienigenaEntry): GameState => {\n  const localToday = loadLocalToday({\n    key: SETTINGS.KEY,\n    gameId: data.id,\n    defaultValue: deepCopy(DEFAULT_LOCAL_TODAY),\n  });\n\n  const state: GameState = {\n    hearts: SETTINGS.HEARTS,\n    guesses: [],\n    selection: [null, null, null, null],\n    latestAttempt: null,\n    win: false,\n  };\n\n  if (localToday) {\n    state.hearts = SETTINGS.HEARTS - localToday.guesses.length;\n    state.guesses = localToday.guesses;\n  }\n\n  return state;\n};\n","import { NextGameSuggestion } from 'pages/Daily/components/NextGameSuggestion';\nimport { getDailyName, getSourceName } from 'pages/Daily/utils';\nimport { useMemo } from 'react';\n// Ant Design Resources\nimport { Flex, Space, Typography } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Icons\nimport { BoxXIcon } from 'icons/BoxXIcon';\nimport { TrophyIcon } from 'icons/TrophyIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { SignCard } from 'components/cards/SignCard';\nimport { Translate } from 'components/language';\n// Internal\nimport { SETTINGS } from '../utils/settings';\nimport { DailyComunicacaoAlienigenaEntry } from '../utils/types';\nimport { CopyToClipboardResult } from '../../../components/CopyToClipboardResult';\n\ntype ResultsModalContentProps = {\n  challenge: number;\n  guesses: string[];\n  attributes: DailyComunicacaoAlienigenaEntry['attributes'];\n  win: boolean;\n  hearts: number;\n  solution: string;\n  width: number;\n};\n\nexport function ResultsModalContent({\n  guesses,\n  attributes,\n  challenge,\n  win,\n  hearts,\n  solution,\n  width,\n}: ResultsModalContentProps) {\n  const { language, dualTranslate } = useLanguage();\n\n  const result = useMemo(\n    () =>\n      writeResult({\n        game: dualTranslate(SETTINGS.NAME),\n        challenge,\n        remainingHearts: hearts,\n        guesses,\n        solution,\n        language,\n      }),\n    [challenge, dualTranslate, guesses, hearts, language, solution]\n  );\n\n  return (\n    <Space direction=\"vertical\" className=\"space-container\">\n      <Typography.Title level={2} className=\"center\">\n        {win ? (\n          <>\n            <IconAvatar icon={<TrophyIcon />} /> <Translate pt=\"Parabéns!\" en=\"Congratulations!\" />\n          </>\n        ) : (\n          <>\n            <IconAvatar icon={<BoxXIcon />} /> <Translate pt=\"Que pena!\" en=\"Too bad!\" />\n          </>\n        )}\n      </Typography.Title>\n      <Typography.Paragraph className=\"center\">\n        {win ? (\n          <Translate pt=\"O alienígena abduziu todos os itens!\" en=\"The alien abducted all items!\" />\n        ) : (\n          <Translate\n            pt=\"O alienígena vai destruir a Terra porque você não estregou as coisas certas!\"\n            en=\"The alien will destroy Earth because you didn't deliver the right items!\"\n          />\n        )}\n      </Typography.Paragraph>\n\n      <Space direction=\"vertical\">\n        {attributes.map((attribute, index) => (\n          <Flex gap={6}>\n            <SignCard id={attribute.spriteId} width={width} />\n            <Flex vertical>\n              <Typography.Text strong>{attribute.name}</Typography.Text>\n              <Typography.Text italic>{attribute.description}</Typography.Text>\n            </Flex>\n          </Flex>\n        ))}\n      </Space>\n\n      <CopyToClipboardResult result={result} rows={3} />\n\n      <NextGameSuggestion />\n    </Space>\n  );\n}\n\nfunction writeResult({\n  game,\n  challenge,\n  remainingHearts,\n  guesses,\n  solution,\n  language,\n}: {\n  game: string;\n  challenge: number;\n  remainingHearts: number;\n  guesses: string[];\n  solution: string;\n  language: Language;\n}) {\n  const solutionItems = solution.split('-');\n\n  const indexEmojis = ['🟤', '🟡', '🔵', '🟣'];\n\n  const result = guesses.map((guess, index) => {\n    const guessItems = guess.split('-');\n    return guessItems\n      .map((item, i) => {\n        // Correct?\n        if (item === solutionItems[i]) {\n          return indexEmojis[i];\n        }\n        // Incorrect?\n        if (solutionItems.includes(item)) {\n          return '❌';\n        }\n        // Missing?\n        return '👽';\n      })\n      .join('');\n  });\n\n  return [\n    `${SETTINGS.ICON} ${getDailyName(language)} ${game} #${challenge}`,\n    ...result,\n    `https://www.kavispires.com/tardedivertida/#/${getSourceName(language)}`,\n  ].join('\\n');\n}\n","import { BetaBanner } from 'pages/Daily/components/BetaBanner';\n// Ant Design Resources\nimport { HeartFilled } from '@ant-design/icons';\nimport { Typography } from 'antd';\n// Components\nimport { Translate } from 'components/language';\n// Internal\nimport { SETTINGS } from '../utils/settings';\n\nexport function Rules() {\n  return (\n    <Typography>\n      <BetaBanner />\n      <Translate\n        pt={\n          <>\n            <li>\n              O alienígena precisa de sua ajuda para abduzir 4 coisas, porém ele não fala a língua dos\n              terráqueos.\n            </li>\n            <li>\n              O alienígena se comunica através de símbolos que representam um atributo em comum entre os\n              exemplos dados.\n            </li>\n            <li>\n              Por exemplo, o que uma bola, uma melancia e uma pizza tem em comum? Todos são redondos! Será que\n              o alienígena quer dizer que aquele símbolo significa redondo?\n            </li>\n            <li>\n              Você deve entregar as 4 coisas na ordem correta de uma vez. O alienígena apenas te diz se todas\n              estão corretas ou não.\n            </li>\n            <li>\n              Cada tentativa errada remove um coração e você tem apenas {SETTINGS.HEARTS} <HeartFilled />.\n            </li>\n            <li>Boa sorte!</li>\n          </>\n        }\n        en={\n          <>\n            <li>The alien needs to abduct some things, but it can't speak our language.</li>\n            <li>\n              The alien communicates through symbols that represent a common attribute between the given\n              examples.\n            </li>\n            <li>\n              For example, what does a ball, a watermelon, and a pizza have in common? They're all round! Does\n              the alien mean that symbol represents round?\n            </li>\n            <li>\n              You must deliver 4 things in the correct order and press send. The alien only tells you if all\n              are correct or not.\n            </li>\n            <li>\n              Each wrong attempt removes a heart and you only have 3 <HeartFilled />.\n            </li>\n            <li>Good luck!</li>\n          </>\n        }\n      />\n    </Typography>\n  );\n}\n","import { useQueryClient } from '@tanstack/react-query';\nimport clsx from 'clsx';\nimport { Region } from 'pages/Daily/components/Region';\nimport { useMemo } from 'react';\n// Ant Design Resources\nimport { ArrowRightOutlined, BarChartOutlined } from '@ant-design/icons';\nimport { Avatar, Button, Flex, Layout, Modal, Space, Typography } from 'antd';\n// Types\nimport { Me } from 'types/user';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Icons\nimport { DailyAlienGameIcon } from 'icons/DailyAlienGameIcon';\n// Components\nimport { TransparentButton } from 'components/buttons';\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { SignCard } from 'components/cards/SignCard';\nimport { DualTranslate, Translate } from 'components/language';\n// Internal\nimport { getInitialState } from '../utils/helpers';\nimport { SETTINGS } from '../utils/settings';\nimport { DailyComunicacaoAlienigenaEntry } from '../utils/types';\nimport { useComunicacaoAlienigenaEngine } from '../utils/useComunicacaoAlienigenaEngine';\nimport { Header } from '../../../components/Header';\nimport { Menu } from '../../../components/Menu';\nimport { ResultsModalContent } from './ResultsModalContent';\nimport { Rules } from './Rules';\n\ntype DailyComunicacaoAlienigenaProps = {\n  data: DailyComunicacaoAlienigenaEntry;\n  currentUser: Me;\n};\n\nexport function DailyComunicacaoAlienigena({ data }: DailyComunicacaoAlienigenaProps) {\n  const initialState = useMemo(() => getInitialState(data), []); // eslint-disable-line react-hooks/exhaustive-deps\n  const {\n    hearts,\n    selection,\n    showResultModal,\n    setShowResultModal,\n    isWin,\n    isLose,\n    isComplete,\n    onItemClick,\n    isReady,\n    submitGuess,\n    latestAttempt,\n    guesses,\n  } = useComunicacaoAlienigenaEngine(data, initialState);\n  const width = useCardWidth(7, { margin: 64, maxWidth: 75, minWidth: 55 });\n  const queryClient = useQueryClient();\n\n  const shouldShakeScreen = latestAttempt && !isComplete;\n\n  return (\n    <Layout className=\"app\">\n      <Header icon={<DailyAlienGameIcon />} localStorageKey={SETTINGS.KEY}>\n        TD <DualTranslate>{SETTINGS.NAME}</DualTranslate> #{data.number}\n      </Header>\n      <Layout.Content>\n        <Menu\n          hearts={hearts}\n          total={SETTINGS.HEARTS}\n          openRules={!isComplete || hearts === SETTINGS.HEARTS}\n          rules={<Rules />}\n        />\n\n        <Region>\n          <Typography.Text strong>\n            <Translate pt=\"Atributos\" en=\"Attributes\" />\n          </Typography.Text>\n\n          <Space direction=\"vertical\" className=\"alien-attributes\">\n            {data.attributes.map((attribute) => (\n              <Flex className=\"alien-attributes__attribute\" key={attribute.id} gap={8}>\n                <SignCard id={attribute.spriteId} width={width} className=\"alien-attributes__sign\" />\n                <ArrowRightOutlined />\n                <Flex className=\"alien-attributes__items\">\n                  {attribute.itemsIds.map((itemId) => (\n                    <ItemCard\n                      key={itemId}\n                      id={itemId}\n                      width={width - 12}\n                      className=\"alien-attributes__item\"\n                      padding={0}\n                    />\n                  ))}\n                </Flex>\n              </Flex>\n            ))}\n          </Space>\n        </Region>\n\n        <Region key={latestAttempt} className={shouldShakeScreen ? getAnimationClass('shakeX') : ''}>\n          <Typography.Text strong>\n            <Translate pt=\"Pedidos\" en=\"Requests\" />\n          </Typography.Text>\n\n          <Flex className=\"alien-requests\" gap={8}>\n            {data.requests.map((request, index) => (\n              <Flex\n                vertical\n                className=\"alien-requests__request\"\n                key={request.itemId}\n                align=\"center\"\n                justify=\"flex-start\"\n              >\n                <Avatar className=\"mb-2\">{index + 1}</Avatar>\n                <Flex vertical className=\"alien-requests__attributes\" align=\"center\">\n                  <SignCard id={request.spritesIds[2]} width={width - 12} className=\"alien-requests__sign\" />\n                  <SignCard id={request.spritesIds[1]} width={width - 12} className=\"alien-requests__sign\" />\n                  <SignCard id={request.spritesIds[0]} width={width - 12} className=\"alien-requests__sign\" />\n                </Flex>\n\n                {selection[index] ? (\n                  <TransparentButton\n                    onClick={() => onItemClick(selection[index]!)}\n                    className=\"mt-1\"\n                    disabled={isComplete}\n                  >\n                    <ItemCard id={selection[index]!} width={isLose ? width / 2 : width} padding={0} />\n                  </TransparentButton>\n                ) : (\n                  <Avatar shape=\"square\" size=\"large\" className=\"mt-1\">\n                    ?\n                  </Avatar>\n                )}\n\n                {isComplete && isLose && (\n                  <ItemCard\n                    id={request.itemId}\n                    width={width}\n                    padding={0}\n                    className={clsx('alien-request__answer', getAnimationClass('zoomIn'))}\n                  />\n                )}\n              </Flex>\n            ))}\n          </Flex>\n\n          {isReady && !isComplete && (\n            <Region>\n              <Button type=\"primary\" onClick={submitGuess}>\n                <Translate pt=\"Enviar\" en=\"Submit\" />\n              </Button>\n            </Region>\n          )}\n        </Region>\n\n        {isComplete && (\n          <Space className=\"results-container\" direction=\"vertical\" align=\"center\" size=\"large\">\n            <Button onClick={() => setShowResultModal(true)} type=\"primary\" icon={<BarChartOutlined />}>\n              <Translate pt=\"Ver Resultado\" en=\"Show Results\" />\n            </Button>\n\n            <Button\n              onClick={() =>\n                queryClient.refetchQueries({ queryKey: ['comunicacao-alienigena-demo'], exact: true })\n              }\n              ghost\n            >\n              <Translate pt=\"Tentar Outro Demo\" en=\"Try Another Demo\" />\n            </Button>\n          </Space>\n        )}\n\n        <Region>\n          <Typography.Text strong>\n            <Translate pt=\"Entregue essas coisas:\" en=\"Deliver these things:\" />\n          </Typography.Text>\n\n          <Space>\n            {data.itemsIds.map((itemId, index) => (\n              <TransparentButton\n                key={itemId}\n                onClick={() => onItemClick(itemId)}\n                disabled={isReady || selection.includes(itemId)}\n                className=\"alien-items__item-button\"\n              >\n                <ItemCard id={itemId} width={width} padding={0} />\n              </TransparentButton>\n            ))}\n          </Space>\n        </Region>\n\n        <Modal\n          title={<Translate pt=\"Resultado\" en=\"Results\" />}\n          open={showResultModal}\n          onCancel={() => setShowResultModal(false)}\n          footer={null}\n        >\n          <ResultsModalContent\n            challenge={data.number}\n            win={isWin}\n            hearts={hearts}\n            guesses={guesses}\n            attributes={data.attributes}\n            solution={data.answer}\n            width={width}\n          />\n        </Modal>\n      </Layout.Content>\n    </Layout>\n  );\n}\n","import { useDailyGameState } from 'pages/Daily/hooks/useDailyGameState';\nimport { useDailyLocalToday, useMarkAsPlayed } from 'pages/Daily/hooks/useDailyLocalToday';\nimport { useShowResultModal } from 'pages/Daily/hooks/useShowResultModal';\n// Ant Design Resources\nimport { App } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { deepCopy } from 'utils/helpers';\n// Internal\nimport { ComunicacaoAlienigenaLocalToday, DailyComunicacaoAlienigenaEntry, GameState } from './types';\nimport { SETTINGS } from './settings';\nimport { DEFAULT_LOCAL_TODAY } from './helpers';\n\nexport function useComunicacaoAlienigenaEngine(\n  data: DailyComunicacaoAlienigenaEntry,\n  initialState: GameState\n) {\n  const { message } = App.useApp();\n  const { translate } = useLanguage();\n  const { state, setState, updateState } = useDailyGameState<GameState>(initialState);\n\n  const { localToday, updateLocalStorage } = useDailyLocalToday<ComunicacaoAlienigenaLocalToday>({\n    key: SETTINGS.KEY,\n    gameId: data.id,\n    defaultValue: DEFAULT_LOCAL_TODAY,\n  });\n\n  // ACTIONS\n  const onItemClick = (itemId: string) => {\n    if (state.selection.includes(itemId)) {\n      setState((prev) => ({\n        ...prev,\n        selection: prev.selection.map((item) => (item === itemId ? null : item)),\n      }));\n    } else {\n      const firstNullIndex = state.selection.indexOf(null);\n      if (firstNullIndex !== -1) {\n        setState((prev) => {\n          const newSelection = [...prev.selection];\n          newSelection[firstNullIndex] = itemId;\n          return {\n            ...prev,\n            selection: newSelection,\n          };\n        });\n      }\n    }\n  };\n\n  const submitGuess = () => {\n    const newGuessString = state.selection.join('-');\n\n    if (state.guesses.includes(newGuessString)) {\n      message.warning({\n        content: translate(\n          'Você já tentou essa combinação. Tente outra!',\n          'You already tried this combination. Try another one!'\n        ),\n        duration: 5,\n      });\n\n      return updateState({\n        latestAttempt: Date.now(),\n      });\n    }\n\n    // updateLocalStorage({\n    //   guesses: [...state.guesses, newGuessString],\n    // });\n\n    const isCorrect = data.answer === newGuessString;\n\n    if (!isCorrect) {\n      message.warning({\n        content: translate('Combinação incorreta. Tente novamente!', 'Incorrect combination. Try again!'),\n        duration: 3,\n      });\n    }\n\n    setState((prev) => {\n      const copy = deepCopy(prev);\n      copy.latestAttempt = Date.now();\n      copy.guesses.push(newGuessString);\n\n      if (isCorrect) {\n        copy.win = true;\n      } else {\n        copy.hearts -= 1;\n      }\n\n      return copy;\n    });\n  };\n\n  // CONDITIONS\n  const isWin = state.win;\n  const isLose = state.hearts <= 0;\n  const isComplete = isWin || isLose;\n\n  useMarkAsPlayed({\n    key: SETTINGS.KEY,\n    isComplete,\n  });\n\n  // RESULTS MODAL\n  const { showResultModal, setShowResultModal } = useShowResultModal(isWin || isLose || isComplete);\n\n  const isReady = state.selection.filter(Boolean).length === data.requests.length;\n\n  return {\n    hearts: state.hearts,\n    guesses: state.guesses,\n    selection: state.selection,\n    latestAttempt: state.latestAttempt,\n    showResultModal,\n    setShowResultModal,\n    isWin,\n    isLose,\n    isComplete,\n    onItemClick,\n    submitGuess,\n    isReady,\n  };\n}\n","import { DailyError } from 'pages/Daily/components/DailyError';\nimport { DailyLoading } from 'pages/Daily/components/DailyLoading';\n// Hooks\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\n// Internal\nimport { useComunicacaoAlienigenaDemo } from './utils/useComunicacaoAlienigenaDemo';\nimport { DailyComunicacaoAlienigena } from './components/DailyComunicacaoAlienigena';\n// Sass\nimport './utils/styles.scss';\n// Internal\n\nexport function DailyComunicacaoAlienigenaGame() {\n  const { currentUser } = useCurrentUserContext();\n\n  // Load challenge\n  const challengeQuery = useComunicacaoAlienigenaDemo();\n\n  if (challengeQuery.isLoading || challengeQuery.isRefetching) {\n    return <DailyLoading />;\n  }\n\n  const dailyData = challengeQuery?.data;\n\n  if (challengeQuery.isError || !dailyData) {\n    return <DailyError />;\n  }\n\n  return <DailyComunicacaoAlienigena key={dailyData.id} data={dailyData} currentUser={currentUser} />;\n}\n","import { LoginModal } from 'pages/Me/components/LoginModal';\nimport { useLocation } from 'react-router-dom';\nimport { useEffectOnce, useTitle } from 'react-use';\n// Hooks\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\nimport { useLanguage } from 'hooks/useLanguage';\n// Internal\nimport { DailyChrome } from './components/DailyChrome';\nimport { DailyAquiOGame } from './games/AquiO/DailyAquiOGame';\nimport { DailyArteRuimGame } from './games/ArteRuim/DailyArteRuimGame';\nimport { DailyControleDeEstoqueGame } from './games/ControleDeEstoque/DailyControleDeEstoqueGame';\nimport { DebugPage } from './games/Debug';\nimport { DailyFilmacoGame } from './games/Filmaco/DailyFilmacoGame';\nimport { Hub } from './games/Hub';\nimport { DailyPalavreadoGame } from './games/Palavreado/DailyPalavreadoGame';\nimport { DailyPicacoGame } from './games/Picaco/DailyPicacoGame';\nimport { DailyTeoriaDeConjuntosGame } from './games/TeoriaDeConjuntos/DailyTeoriaDeConjuntosGame';\nimport { getDailyName } from './utils';\nimport { DailyContextProvider } from './hooks/useDailyChallenge';\nimport { DailyComunicacaoAlienigenaGame } from './games/ComunicacaoAlienigena/DailyComunicacaoAlienigenaGame';\n// Sass\nimport './utils/daily.scss';\n\nfunction DailyPage() {\n  const { isAuthenticated } = useCurrentUserContext();\n  const { pathname } = useLocation();\n  const { setLanguage, language } = useLanguage();\n\n  useEffectOnce(() => {\n    setLanguage(pathname.includes('diario') ? 'pt' : 'en');\n  });\n\n  const subPath = pathname.split('/')?.[2];\n\n  useTitle(`${getDailyName(language)} - Tarde Divertida`);\n\n  if (!isAuthenticated) {\n    return (\n      <DailyContextProvider>\n        <DailyChrome>\n          <LoginModal isAuthenticated={false} />\n        </DailyChrome>\n      </DailyContextProvider>\n    );\n  }\n\n  const Outlet =\n    {\n      '': Hub,\n      'aqui-o': DailyAquiOGame,\n      'arte-ruim': DailyArteRuimGame,\n      'comunicacao-alienigena': DailyComunicacaoAlienigenaGame,\n      'controle-de-estoque': DailyControleDeEstoqueGame,\n      filmaco: DailyFilmacoGame,\n      hub: Hub,\n      palavreado: DailyPalavreadoGame,\n      picaco: DailyPicacoGame,\n      'teoria-de-conjuntos': DailyTeoriaDeConjuntosGame,\n      debug: DebugPage,\n    }?.[subPath] ?? Hub;\n\n  return (\n    <DailyContextProvider>\n      <Outlet />\n    </DailyContextProvider>\n  );\n}\n\nexport default DailyPage;\n","// Ant Design Resources\nimport { Modal } from 'antd';\n// Utils\nimport { NOOP } from 'utils/constants';\n// Components\nimport { SignIn } from 'components/auth/SignIn';\nimport { Translate } from 'components/language';\n\ntype LoginModalProps = {\n  isAuthenticated: boolean;\n};\n\nexport function LoginModal({ isAuthenticated }: LoginModalProps) {\n  return (\n    <Modal\n      open={!isAuthenticated}\n      title={<Translate pt=\"Logar\" en=\"LogIn\" />}\n      cancelText={<Translate pt=\"Cancelar\" en=\"Cancel\" />}\n      onCancel={NOOP}\n      okButtonProps={{\n        style: { display: 'none' },\n      }}\n      cancelButtonProps={{\n        style: { display: 'none' },\n      }}\n      closable={false}\n    >\n      <SignIn onSuccess={NOOP} />\n    </Modal>\n  );\n}\n"],"names":["SignIn","onSuccess","useState","view","setView","className","src","logo","preview","checkedChildren","pt","en","unCheckedChildren","onChange","checked","SignInWithGoogle","SignInWithEmail","buttonProps","useMutation","mutationFn","signInWithGoogle","isPending","mutate","isError","direction","align","classNames","item","A","description","type","showIcon","size","onClick","loading","block","icon","Form","useForm","form","translate","useLanguage","showForgotPassword","setShowForgotPassword","signIn","getFieldValue","name","labelCol","span","wrapperCol","style","maxWidth","initialValues","remember","onFinish","autoComplete","Item","label","rules","required","message","help","Password","offset","htmlType","v","ResetPasswordForm","email","App","useApp","resetPassword","success","username","level","CanvasResizer","useGlobalLocalStorage","canvasSize","setCanvasSize","position","DragOutlined","labelText","content","value","min","max","step","CanvasSVG","drawing","width","height","strokeWidth","viewBox","konvaLines","JSON","parse","paths","map","lineArr","path","x","y","length","strokeWidthBySize","small","medium","large","xmlns","overflow","index","d","fill","stroke","strokeLinecap","strokeLinejoin","strokeMiterlimit","DrawingCanvas","lines","setLines","showControls","willReadFrequently","mask","drawingHistory","setDrawingHistory","isDrawing","useRef","startDrawing","current","stopDrawing","startLine","e","pos","target","getStage","getPointerPosition","Math","round","finishLine","point","lastLineEntry","concat","splice","handleMouseDown","handleMouseMove","lastLine","handleMouseUp","handleOffsetMouseUp","handleOffsetMouseDown","vertical","onMouseDown","onMousemove","onMouseup","onTouchStart","onTouchMove","onTouchEnd","onMouseLeave","window","document","addEventListener","onMouseEnter","removeEventListener","clsx","id","line","i","points","tension","lineCap","globalCompositeOperation","linesCopy","drawingHistoryCopy","pop","push","disabled","UndoOutlined","lastUndoLine","DeleteOutlined","getSource","str","match","numId","parseInt","itemId","sourceId","ceil","ItemCard","title","text","padding","source","divPadding","Boolean","SignCard","WarehouseGoodCard","goodId","Card","children","header","footer","color","randomColor","headerClassName","footerClassName","hideHeader","baseClass","bgColor","getColorFromLetter","toUpperCase","startsWith","backgroundColor","MetricHighlight","iconSize","iconPlacement","TimeHighlight","Sprite","baseUrl","useTDBaseUrl","useQuery","queryKey","queryFn","fetch","response","enabled","isLoading","data","paddedWidth","display","placeItems","svgContent","WarningOutlined","xlinkHref","dangerouslySetInnerHTML","__html","background","Instruction","white","contained","fullWidth","noMargin","Text","RoundsLeftInstruction","left","total","forceLastRound","pluralize","TextHighlight","dark","Title","RuleInstruction","sfx","action","PlayCircleFilled","alert","AlertFilled","event","ExclamationCircleFilled","lore","MessageFilled","rule","ReadFilled","tip","BulbFilled","scoring","StarFilled","wait","ClockCircleFilled","bot","RobotFilled","animationClass","getAnimationClass","infinite","speed","repeat","token","theme","useToken","colorPrimary","Paragraph","TimerClock","minutes","seconds","AnimatedClockIcon","TimerBar","steps","props","status","percentage","percent","showInfo","marginBottom","undefined","TimedTimerBar","duration","onExpire","timeLeft","useCountdown","autoStart","TimedTimerClock","timerProps","WaitingTime","privateTimeLeft","library","process","Error","attributeName","dur","from","repeatCount","to","ApplauseIcon","ClockIcon","cx","cy","r","GoogleIcon","SkullIcon","SpeechBubbleAcceptedIcon","DailyContext","createContext","error","isRefetching","DailyContextProvider","language","collectionName","getSourceName","query","console","count","DAILY_API","run","DAILY_API_ACTIONS","GET_DAILY","date","getToday","responseData","print","staleTime","now","moment","endOf","diff","retry","Provider","useDailyChallenge","context","useContext","SETTINGS","NAME","ICON","HEARTS","GOAL","TD_DAILY_AQUI_O_MODE","KEY","DURATION","DRAWINGS","PHASES","WORD_LENGTH","keys","AQUI_O","ARTE_RUIM","PALAVREADO","ARTISTA","FILMACO","CONTROLE_DE_ESTOQUE","TEORIA_DE_CONJUNTOS","DevResetLocalStorageButton","localStorageKey","navigate","useNavigate","justify","gap","onConfirm","localStorage","removeItem","composeLocalTodayKey","composeLocalPlayedKey","forEach","key","BugOutlined","isDevEnv","yesterday","stringify","number","setItem","Header","setCount","prev","Content","Layout","Footer","DailyChrome","challengeQuery","CalendarIcon","C","DailyError","toggleLanguage","DailyLoading","margin","MISC_SETS","useDailyGameState","initialState","state","setState","updateState","newState","useDailyLocalToday","gameId","defaultValue","localKey","useLocalStorage","localToday","setLocalToday","updateLocalStorage","useMarkAsPlayed","isComplete","localPlayedKey","played","setPlayed","useEffect","useShowResultModal","condition","onUpdate","showResultModal","setShowResultModal","DEFAULT_LOCAL_TODAY","maxProgress","hardMode","attempts","hearts","getDiscs","entry","challengingGame","allItems","shuffle","itemsIds","discs","card","createCards","POSITIONS","Array","_","SIZES","Z_INDEXES","list","previousCard","previousMatchId","shuffledList","randomPositions","randomSizes","items","sampleSize","rotation","random","zIndex","orderBy","Number","join","SEPARATOR","previousCardItems","newCardItems","chain","difference","take","matchingItem","sample","filter","Menu","openRules","DailyHubLink","Hearts","remaining","RulesModal","defaultOpen","heart","HeartFilled","HeartOutlined","open","setOpen","QuestionCircleFilled","placement","onClose","AppstoreFilled","Disc","disc","onSelect","transform","role","I","PreloadItems","PRIORITY_LIST","NextGameSuggestion","game","checkWasPlayedToday","getNextGame","strong","DailyFindingGameIcon","DailyArtGameIcon","DailyWarehouseGameIcon","DailyMovieGameIcon","D","DailyWordGameIcon","DailyDrawingGameIcon","DailyDiagramGameIcon","CopyToClipboardResult","result","rows","useCopyToClipboard","copyToClipboard","info","TextArea","readOnly","cols","titles","SealOfApprovalIcon","TrophyIcon","ResultsModalContent","challengeTitle","challengeNumber","progress","isRandomGame","lastMatch","remainingHearts","totalHearts","goal","getDailyName","writeHeartResultString","writeResult","dualTranslate","getTitle","worse","slice","floor","delay","Rules","DailyAquiO","onToggleGame","useMemo","loadLocalToday","deepCopy","discIndex","getInitialState","timesUp","setTimesUp","mode","setMode","discA","discB","intersectionBy","isRunning","restart","pause","isWin","isLose","onStart","inNSeconds","isPlaying","useAquiOEngine","useMeasure","contentRef","contentMeasure","headerRef","headerMeasure","discWidth","ref","DevResult","onCancel","okButtonProps","hidden","cancelButtonProps","shape","DailyAquiOGame","today","setRandomGame","randomGameQuery","chosenSet","gameData","setId","dailyData","NUMBERS","FIRST_ROW","SECOND_ROW","THIRD_ROW","Keyboard","lettersState","onLetterClick","onBackspaceClick","onEnterClick","withNumbers","useCardWidth","handleKeyUp","includes","letter","Key","baseClassName","letters","getLettersInWord","normalize","replace","toLowerCase","split","lettersInWord","cleanupLetter","char","DrawingCarousel","drawings","minWidth","autoplay","autoplaySpeed","Prompt","guesses","prompt","word","wrap","p","l","j","isCorrect","BoxBlankIcon","challenge","win","solution","totalLetters","Object","guessedLetters","values","BoxXIcon","DailyArteRuim","reduce","acc","every","guessLetter","removeDuplicates","useArteRuimEngine","BarChartOutlined","DailyArteRuimGame","currentUser","useCurrentUserContext","Region","TextRegion","warehouse","extraAttempts","removeHeart","phase","goods","fulfillments","lastPlacedGoodId","latestAttempt","evaluations","activeOrder","parseGuessString","validateAttempts","g","fulfillment","shelfIndex","evaluation","some","good","order","guessString","useControleDeEstoqueEngine","currentGood","orders","onPlaceGood","copy","onSelectOrder","onFulfill","onTakeBack","orderId","onSubmit","newGuessString","f","warning","Date","attemptResult","isAllCorrect","reset","resetState","FulfillmentBoard","reveal","isFulfilled","find","hoverType","ShippingBoxIcon","Orders","shelfWidth","OnlineOrderIcon","CheckMarkIcon","LocationIcon","FulfillingPhase","isFulfilling","isDelivering","board","isMissingOutOfStock","WarningFilled","cleanUpAttempts","row","trim","BetaBanner","banner","StockingBoard","StockingPhase","DailyControleDeEstoque","shouldShakeScreen","totalWidth","attempt","danger","DailyControleDeEstoqueGame","DebugPage","isAdmin","getItem","allowNumbers","DailyFilmaco","useFilmacoEngine","year","DailyFilmacoGame","PlayedWrapper","lsKey","wasPlayed","Hub","PICACO","COMUNICACAO_ALIENIGENA","DailyAlienGameIcon","boardState","swaps","KEYWORD_INDEXES","KEYWORD_STATES","parseLetters","indexes","states","indexOf","locked","Board","onLetterSelection","selection","swap","gridTemplateColumns","gridTemplateRows","col","previousWrongPlacement","words","chunk","DailyPalavreado","keyword","lsGuesses","latestBoardState","copyLetters","cloneDeep","answer","String","selectLetter","temp","submitGrid","generatedWords","lg","wordIndex","newBoardState","usePalavreadoEngine","keyboard","DailyPalavreadoGame","usePicacoEngine","cards","cardIndex","onNextCard","screen","onSaveDrawings","mutation","notification","mutationKey","payload","SAVE_DRAWING","cardId","onError","useDailySaveDrawings","stateToSave","toSave","playerId","successRate","cardNumber","isIdle","isSaving","alreadyPlayed","Canvas","transformOrigin","DailyPicaco","ThumbsUpIcon","AnimatedProcessingIcon","DailyPicacoGame","Diagram","leftCircleChildren","rightCircleChildren","intersectionChildren","Thing","minimize","code","InDiagramThings","things","thing","arr","isLatestThing","PlacementModal","activeThing","activeArea","onSelectArea","onConfirmPlacement","rule1Things","rule2Things","intersectingThings","null","cancelText","onOk","okText","CaretDownOutlined","guess","false","CircleIcon","mainColor","rule1","rule2","RulesHints","useToggle","showTipsModal","toggleTipsModal","QuestionCircleOutlined","ghost","Entry","category","hints","DailyTeoriaDeConjuntos","hand","deck","intersectingThing","t","thingId","sectionId","onSelectThing","area","localStateUpdate","localStateUpdateHearts","prevState","useTeoriaDeConjuntosEngine","thingWidth","activeClass","active","DailyTeoriaDeConjuntosGame","attributes","solutionItems","indexEmojis","attribute","spriteId","italic","DailyComunicacaoAlienigena","isReady","requests","onItemClick","firstNullIndex","newSelection","submitGuess","useComunicacaoAlienigenaEngine","queryClient","useQueryClient","ArrowRightOutlined","request","spritesIds","refetchQueries","exact","DailyComunicacaoAlienigenaGame","DEMO","useComunicacaoAlienigenaDemo","isAuthenticated","pathname","useLocation","setLanguage","useEffectOnce","subPath","useTitle","LoginModal","Outlet","filmaco","hub","palavreado","picaco","debug","NOOP","closable"],"sourceRoot":""}