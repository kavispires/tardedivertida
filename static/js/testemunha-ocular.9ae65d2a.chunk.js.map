{"version":3,"file":"static/js/testemunha-ocular.9ae65d2a.chunk.js","mappings":"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","sources":["components/icons/AnimatedClockIcon.tsx","components/icons/CrimeSceneIcon.tsx","components/views/View.tsx","components/views/ViewIf.tsx","components/views/ViewOr.tsx","components/views/ViewSwitch.tsx","games/testemunha-ocular/components/TextBlobs.tsx","games/testemunha-ocular/StepWitnessSelection.tsx","games/testemunha-ocular/PhaseWitnessSelection.tsx","games/testemunha-ocular/utils/api-requests.ts","games/testemunha-ocular/components/QuestionsHistory.tsx","games/testemunha-ocular/components/Suspects.tsx","games/testemunha-ocular/StepQuestionWaiting.tsx","games/testemunha-ocular/StepSelectQuestion.tsx","games/testemunha-ocular/PhaseQuestionSelection.tsx","games/testemunha-ocular/StepQuestioning.tsx","games/testemunha-ocular/PhaseQuestioning.tsx","games/testemunha-ocular/StepSuspectElimination.tsx","games/testemunha-ocular/PhaseTrial.tsx","games/testemunha-ocular/PhaseGameOver.tsx","games/testemunha-ocular/SessionTestemunhaOcular.tsx","../node_modules/@ant-design/icons-svg/es/asn/DownSquareOutlined.js","../node_modules/@ant-design/icons/es/icons/DownSquareOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/UpCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/UpCircleOutlined.js"],"sourcesContent":["export function AnimatedClockIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fbfbfb\"\n        d=\"M464 256c0 114.9-93.1 208-208 208S48 370.9 48 256 141.1 48 256 48s208 93.1 208 208z\"\n      ></path>\n      <path\n        fill=\"#e3effa\"\n        d=\"M464 256c0-114.9-93.2-208-208.1-207.9-67 0-130 32.4-169 86.9 93.4-66.9 223.3-45.4 290.2 47.9 51.9 72.4 51.9 169.8 0 242.3C431.7 386.1 464 323.1 464 256z\"\n      ></path>\n      <path\n        fill=\"#fcc369\"\n        d=\"M256 8c137 0 248 111 248 248S393 504 256 504 8 393 8 256 119 8 256 8zm0 456c114.9 0 208-93.1 208-208S370.9 48 256 48 48 141.1 48 256s93.1 208 208 208z\"\n      ></path>\n      <path\n        fill=\"#ed9b52\"\n        d=\"M256 32C132.3 32 32 132.3 32 256s100.3 224 224 224 224-100.3 224-224S379.7 32 256 32zm0 432c-114.9 0-208-93.1-208-208S141.1 48 256 48s208 93.1 208 208-93.1 208-208 208z\"\n      ></path>\n      <path d=\"M256 496c-132.5-.1-239.9-107.5-240-240 0-4.4-3.6-8-8-8s-8 3.6-8 8c0 141.4 114.6 256 256 256.1 109.6 0 207-69.7 242.4-173.5l-15.1-5.2C450.1 430.7 358.7 496 256 496zm0-496C133.8.1 28.6 86.6 4.8 206.5l15.7 3.1C46.3 79.5 172.6-5 302.6 20.7s214.6 152.1 188.8 282.1c-1 5.1-2.2 10.1-3.5 15.1l15.5 4.1c36.4-136.7-45-277-181.8-313.4C300.2 2.9 278.1 0 256 0zM18 225l-15.9-2c-.7 5.4-1.2 10.9-1.6 16.5l16 1c.3-5.2.8-10.4 1.5-15.5z\"></path>\n      <path d=\"M256 472c119.3 0 216-96.7 216-216S375.3 40 256 40 40 136.7 40 256c.1 119.2 96.8 215.9 216 216zm-8-415.8V88h16V56.2c104.1 4.3 187.5 87.7 191.8 191.8H424v16h31.8c-4.3 104.1-87.7 187.5-191.8 191.8V424h-16v31.8C143.9 451.5 60.5 368.1 56.2 264H88v-16H56.2C60.5 143.9 143.9 60.5 248 56.2z\"></path>\n\n      <g>\n        <path\n          fill=\"#555fa3\"\n          d=\"M273 141.6v114.24a15.55 15.55 0 01-3.68 10.16l-50.24 61.12a14.47 14.47 0 01-20.42 1.25 14.32 14.32 0 01-2.78-3.33 18.75 18.75 0 012.4-22.64l40.8-48.16A7.77 7.77 0 00241 249V141.6a16.07 16.07 0 1132-3 15.44 15.44 0 010 3z\"\n        ></path>\n        <path d=\"M206.6 339.94c.56 0 1.11.06 1.67.06a22.7 22.7 0 0016.95-7.83l50.31-61.05a24 24 0 005.47-15.26V141.6a24 24 0 10-48-3 25.69 25.69 0 000 3v107.47l-40.62 48a26.49 26.49 0 00-3.2 32.38 23.05 23.05 0 0017.42 10.49zm-2.18-32.34l40.8-48.18a16.1 16.1 0 003.78-10.36V141.6a8.14 8.14 0 1116 0v114.26a8 8 0 01-1.82 5.08l-50.05 60.76a6.37 6.37 0 01-5.32 2.28 7.05 7.05 0 01-5.29-3.39 10.81 10.81 0 011.89-13z\"></path>\n        <animateTransform\n          attributeName=\"transform\"\n          dur=\"2s\"\n          from=\"0 256 256\"\n          repeatCount=\"indefinite\"\n          to=\"360 256 256\"\n          type=\"rotate\"\n        ></animateTransform>\n      </g>\n    </svg>\n  );\n}\n","export function CrimeSceneIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fd445f\"\n        d=\"M471.367 338.833c9.15 0 16.567 7.417 16.567 16.567s-7.417 16.567-16.567 16.567H380.25c-9.15 0-16.567 7.417-16.567 16.567s7.417 16.567 16.567 16.567h24.85c9.15 0 16.567 7.417 16.567 16.567s-7.417 16.567-16.567 16.567H272.567c-9.15 0-16.567 7.417-16.567 16.567s7.417 16.567 16.567 16.567h16.567c9.15 0 16.567 7.417 16.567 16.567s-7.417 16.567-16.567 16.567H123.467c-9.15 0-16.567-7.417-16.567-16.567 0-9.149 7.417-16.567 16.567-16.567h66.267c9.15 0 16.567-7.417 16.567-16.567 0-9.149-7.417-16.567-16.567-16.567h-66.267c-9.15 0-16.567-7.417-16.567-16.567s7.417-16.567 16.567-16.567h16.567c9.15 0 16.567-7.417 16.567-16.567s-7.417-16.567-16.567-16.567h-49.7c-9.149 0-16.567-7.417-16.567-16.567s7.417-16.567 16.567-16.567z\"\n      ></path>\n      <path fill=\"#ff8c59\" d=\"M313.667 222.867h63.095c5.045 0 8.918-4.471 8.199-9.465L356.422 15.363z\"></path>\n      <path\n        fill=\"#ffc649\"\n        d=\"M348.148 7.5H166.061a8.283 8.283 0 00-8.211 7.189l-29.674 222.555c-1.324 9.931 6.402 18.756 16.421 18.756H309.97c8.303 0 15.324-6.147 16.421-14.377l1.501-11.256-1.06-7.533 3.06-7.466 26.465-198.489c.664-4.967-3.199-9.379-8.209-9.379z\"\n      ></path>\n      <path\n        fill=\"#ffa742\"\n        d=\"M348.148 7.5h-23c5.01 0 8.873 4.412 8.211 9.378l-29.966 224.745c-1.097 8.23-8.118 14.377-16.421 14.377h23c8.303 0 15.324-6.147 16.421-14.377l1.501-11.256-1.06-7.533 3.06-7.466 26.465-198.489c.662-4.967-3.201-9.379-8.211-9.379z\"\n      ></path>\n      <path\n        fill=\"#f6f6f6\"\n        d=\"M225.076 40.633c-9.415 0-16.996 7.854-16.548 17.368.42 8.91 8.095 15.766 17.016 15.766h7.816a8.282 8.282 0 018.283 8.283v74.082c0 8.92 6.855 16.596 15.766 17.016 9.514.448 17.368-7.133 17.368-16.548V57.2c0-9.15-7.417-16.567-16.567-16.567z\"\n      ></path>\n      <path\n        fill=\"#e2dff4\"\n        d=\"M258.209 40.633h-23c9.15 0 16.567 7.417 16.567 16.567v99.4c0 4.638-1.912 8.826-4.984 11.833 2.773 2.737 6.466 4.519 10.616 4.715 9.514.448 17.368-7.133 17.368-16.548V57.2c0-9.15-7.418-16.567-16.567-16.567z\"\n      ></path>\n      <path\n        fill=\"#fd445f\"\n        d=\"M57.2 405.1H40.633c-9.149 0-16.567 7.417-16.567 16.567s7.417 16.567 16.567 16.567H57.2c9.15 0 16.567-7.417 16.567-16.567S66.35 405.1 57.2 405.1zm314.767 66.267H355.4c-9.15 0-16.567 7.417-16.567 16.567s7.417 16.567 16.567 16.567h16.567c9.15 0 16.567-7.417 16.567-16.567-.001-9.15-7.418-16.567-16.567-16.567z\"\n      ></path>\n      <path fill=\"#bebcdd\" d=\"M266.933 363.683v-66.267h44.4v66.267z\"></path>\n      <path\n        fill=\"#e2dff4\"\n        d=\"M338.833 297.133v66.833a8 8 0 01-8 8H313.7a8 8 0 01-8-8v-66.833a8 8 0 018-8h17.133a8 8 0 018 8zm-66.266 0v66.833a8 8 0 01-8 8h-51.4c-22.091 0-40-17.909-40-40v-2.833c0-22.091 17.909-40 40-40h51.4a8 8 0 018 8z\"\n      ></path>\n      <path\n        fill=\"#bebcdd\"\n        d=\"M330.833 289.133H313.7a7.962 7.962 0 00-2.933.563c2.965 1.171 5.067 4.056 5.067 7.437v66.833a7.996 7.996 0 01-5.067 7.437 7.966 7.966 0 002.933.563h17.133a8 8 0 008-8v-66.833a8 8 0 00-8-8z\"\n      ></path>\n      <path\n        fill=\"#e30f5a\"\n        d=\"M380.25 371.967h-23c-9.15 0-16.567 7.417-16.567 16.567s7.417 16.567 16.567 16.567h23c-9.15 0-16.567-7.417-16.567-16.567s7.417-16.567 16.567-16.567zm-91.117 99.4h-16.567c-9.15 0-16.567-7.417-16.567-16.567 0-9.149 7.417-16.567 16.567-16.567h-23c-9.149 0-16.567 7.417-16.567 16.567s7.417 16.567 16.567 16.567h16.567c9.15 0 16.567 7.417 16.567 16.567s-7.417 16.567-16.567 16.567h23c9.15 0 16.567-7.417 16.567-16.567s-7.417-16.567-16.567-16.567zm182.234-132.534h-23c9.149 0 16.567 7.417 16.567 16.567s-7.417 16.567-16.567 16.567h23c9.149 0 16.567-7.417 16.567-16.567-.001-9.15-7.418-16.567-16.567-16.567zM405.1 405.1h-23c9.15 0 16.567 7.417 16.567 16.567s-7.417 16.567-16.567 16.567h23c9.15 0 16.567-7.417 16.567-16.567S414.25 405.1 405.1 405.1z\"\n      ></path>\n      <g fill=\"#e30f5a\">\n        <path d=\"M371.967 471.367H355.4c-1.25 0-2.463.15-3.633.412 7.4 1.658 12.933 8.255 12.933 16.154 0 7.9-5.534 14.496-12.933 16.154a16.6 16.6 0 003.633.412h16.567c9.15 0 16.567-7.417 16.567-16.567-.001-9.148-7.418-16.565-16.567-16.565zM57.2 405.1H40.633a16.64 16.64 0 00-3.217.318c7.609 1.498 13.35 8.2 13.35 16.249 0 8.048-5.741 14.751-13.35 16.249 1.041.205 2.115.318 3.217.318H57.2c9.15 0 16.567-7.417 16.567-16.567S66.35 405.1 57.2 405.1z\"></path>\n      </g>\n      <g>\n        <path d=\"M471.367 331.333H346.333v-34.2c0-8.547-6.953-15.5-15.5-15.5H313.7c-5.941 0-11.105 3.364-13.706 8.283h-21.721c-2.601-4.919-7.765-8.283-13.706-8.283h-51.399c-26.191 0-47.5 21.309-47.5 47.5v2.2h-22.639c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h24.865c6.104 19.19 24.089 33.133 45.274 33.133h51.399c5.941 0 11.106-3.364 13.706-8.284h21.721c2.601 4.92 7.765 8.284 13.706 8.284h17.133c8.547 0 15.5-6.953 15.5-15.5v-17.633h125.034c4.999 0 9.066 4.067 9.066 9.066 0 5-4.067 9.067-9.066 9.067H380.25c-13.271 0-24.066 10.796-24.066 24.066S366.979 412.6 380.25 412.6h24.85c5 0 9.067 4.067 9.067 9.066s-4.067 9.067-9.067 9.067H272.566c-13.271 0-24.066 10.796-24.066 24.066 0 13.271 10.796 24.067 24.066 24.067h16.566c5 0 9.067 4.067 9.067 9.066s-4.067 9.067-9.067 9.067H123.467c-4.999 0-9.066-4.067-9.066-9.067 0-4.999 4.067-9.066 9.066-9.066h66.267c13.271 0 24.066-10.796 24.066-24.067 0-13.27-10.796-24.066-24.066-24.066h-66.267c-4.999 0-9.066-4.067-9.066-9.067 0-4.999 4.067-9.066 9.066-9.066h16.566c13.27 0 24.066-10.796 24.066-24.067s-10.796-24.066-24.066-24.066h-49.7c-4.999 0-9.066-4.067-9.066-9.067 0-4.999 4.067-9.066 9.066-9.066h22.694c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5H90.333c-13.271 0-24.066 10.796-24.066 24.066s10.796 24.067 24.066 24.067h49.7c4.999 0 9.066 4.067 9.066 9.066 0 5-4.067 9.067-9.066 9.067h-16.566c-13.271 0-24.066 10.796-24.066 24.066 0 13.271 10.796 24.067 24.066 24.067h66.267c4.999 0 9.066 4.067 9.066 9.066s-4.067 9.067-9.066 9.067h-66.267c-13.271 0-24.066 10.796-24.066 24.066 0 13.271 10.796 24.067 24.066 24.067h165.666c13.27 0 24.067-10.796 24.067-24.067 0-13.27-10.797-24.066-24.067-24.066h-16.566c-4.999 0-9.066-4.067-9.066-9.067 0-4.999 4.067-9.066 9.066-9.066H405.1c13.27 0 24.067-10.796 24.067-24.067 0-13.27-10.797-24.066-24.067-24.066h-24.85c-4.999 0-9.066-4.067-9.066-9.067 0-4.999 4.067-9.066 9.066-9.066h91.117c13.271 0 24.066-10.796 24.066-24.067s-10.795-24.067-24.066-24.067zm-290.7.634v-2.833c0-17.92 14.579-32.5 32.5-32.5h2.2v67.833h-2.2c-17.921 0-32.5-14.58-32.5-32.5zm84.399 32a.5.5 0 01-.5.5h-34.199v-67.833h34.199a.5.5 0 01.5.5v66.55zm15-59.05H298.2v51.267h-18.134zm51.267 59.05a.5.5 0 01-.5.5H313.7a.5.5 0 01-.5-.5v-66.834a.5.5 0 01.5-.5h17.133a.5.5 0 01.5.5zM257.056 180.64c.393.019.783.028 1.173.028 6.216 0 12.069-2.338 16.592-6.652a24.184 24.184 0 007.455-17.415V57.2c0-13.271-10.796-24.067-24.066-24.067h-33.134a24.176 24.176 0 00-17.414 7.455c-4.585 4.806-6.938 11.115-6.625 17.766.605 12.848 11.37 22.913 24.507 22.913h7.816c.432 0 .783.352.783.783v74.082c0 13.138 10.064 23.902 22.913 24.508zM233.359 66.267h-7.816c-5.027 0-9.3-3.866-9.523-8.618a9.011 9.011 0 012.494-6.706 8.99 8.99 0 016.561-2.81h33.134c4.999 0 9.066 4.067 9.066 9.067v99.4a8.99 8.99 0 01-2.81 6.562 9.02 9.02 0 01-6.704 2.494c-4.753-.224-8.619-4.497-8.619-9.524V82.05c.001-8.703-7.08-15.783-15.783-15.783z\"></path>\n        <path d=\"M144.598 263.5h165.373c12.013 0 22.269-8.979 23.856-20.886l1.633-12.247h41.302c4.581 0 8.93-1.986 11.929-5.449a15.77 15.77 0 003.693-12.586L363.879 14.528A15.78 15.78 0 00348.147 0H223.509c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h124.639c.236 0 .435.09.59.268a.75.75 0 01.186.619l-26.597 199.48h-31.768v-.783c0-4.142-3.357-7.5-7.5-7.5s-7.5 3.358-7.5 7.5v.783h-42.983v-.783c0-4.142-3.357-7.5-7.5-7.5s-7.5 3.358-7.5 7.5v.783h-42.983v-.783c0-4.142-3.357-7.5-7.5-7.5s-7.5 3.358-7.5 7.5v.783H138.66L165.285 15.68a.785.785 0 01.776-.68h27.447c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5h-27.447c-7.878 0-14.604 5.889-15.645 13.697l-29.674 222.555a24.071 24.071 0 005.748 19.035 24.07 24.07 0 0018.108 8.213zM356.783 70.444l20.754 144.026a.75.75 0 01-.184.626.75.75 0 01-.592.27H337.46zm-36.456 159.923l-1.369 10.265c-.598 4.486-4.462 7.869-8.987 7.869H144.598a8.947 8.947 0 01-6.821-3.094 8.946 8.946 0 01-2.165-7.171l1.049-7.868h183.666zM57.2 397.6H40.633c-13.271 0-24.066 10.796-24.066 24.066 0 13.271 10.796 24.067 24.066 24.067H57.2c13.271 0 24.066-10.796 24.066-24.067.001-13.269-10.795-24.066-24.066-24.066zm0 33.133H40.633c-4.999 0-9.066-4.067-9.066-9.067 0-4.999 4.067-9.066 9.066-9.066H57.2c4.999 0 9.066 4.067 9.066 9.066.001 5-4.067 9.067-9.066 9.067zm314.767 33.134H355.4c-13.27 0-24.067 10.796-24.067 24.066 0 13.271 10.797 24.067 24.067 24.067h16.566c13.271 0 24.066-10.796 24.066-24.067.001-13.27-10.795-24.066-24.065-24.066zm0 33.133H355.4c-5 0-9.067-4.067-9.067-9.067 0-4.999 4.067-9.066 9.067-9.066h16.566c4.999 0 9.066 4.067 9.066 9.066.001 5-4.066 9.067-9.065 9.067z\"></path>\n      </g>\n    </svg>\n  );\n}\n","import { ReactNode } from 'react';\n\ntype ViewProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n};\n\nexport function View({ children }: ViewProps) {\n  return <>{children}</>;\n}\n","import { ReactNode } from 'react';\n\ntype ViewIfProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  isVisible?: boolean;\n};\n\nexport function ViewIf({ isVisible = false, children }: ViewIfProps) {\n  return isVisible ? <>{children}</> : <></>;\n}\n","type ViewOrProps = {\n  children: [any, any];\n  orCondition?: boolean;\n};\n\nexport function ViewOr({ orCondition = false, children }: ViewOrProps) {\n  return orCondition ? <>{children[0]}</> : <>{children[1]}</>;\n}\n","type ViewSwitchProps = {\n  cases: boolean[];\n  /**\n   * The content of the component\n   */\n  children: any;\n};\n\nexport function ViewSwitch({ cases, children }: ViewSwitchProps) {\n  if (cases.length > 5) {\n    throw Error('ViewSwitch only supports up to 5 cases');\n  }\n\n  if (cases[0] && children[0]) {\n    return children[0];\n  }\n\n  if (cases[1] && children[1]) {\n    return children[1];\n  }\n\n  if (cases[2] && children[2]) {\n    return children[2];\n  }\n\n  if (cases[3] && children[3]) {\n    return children[3];\n  }\n\n  if (cases[4] && children[4]) {\n    return children[4];\n  }\n  console.warn('Rendering all children in the ViewSwitch');\n  return children;\n}\n","import { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n\nexport function WitnessRules() {\n  return (\n    <Instruction contained>\n      <Translate\n        pt=\"Em Testemunha Ocular, um jogador será a testemunha que presenciou um crime desconhecido. Essa testemunha responderá perguntas de sim-ou-não para ajudar os outros jogadores, detetives, a liberarem pelo menos um dos 12 suspeitos em cada rodada. Você quer ser a testemunha?\"\n        en=\"In Eye Witness, a player will be the witness who witnessed an unknown crime. This witness will answer yes-or-no questions to help the other players, detective, to release at least one of the 12 suspects each round. Do you want to be the witness?\"\n      />\n    </Instruction>\n  );\n}\n\ntype AnnouncementContentProps = {\n  didUserWin: boolean;\n};\n\nexport function AnnouncementContent({ didUserWin }: AnnouncementContentProps) {\n  return didUserWin ? (\n    <Instruction>\n      <Translate\n        pt=\"O criminoso foi capturado e preso e vai morrer na cadeira elétrica! Obrigado pelo seu serviço e dedicação nesse caso!\"\n        en=\"The perpetrator was captured, arrested, and will be executed by the electric chair! Thank you for your service!\"\n      />\n    </Instruction>\n  ) : (\n    <Instruction>\n      <Translate\n        pt=\"O criminoso não foi capturado. Tudo por conta da sua investigação porca. Ele(a) saiu pelo mundo a fora cometendo mais crimes. Saiu até nos jornais!\"\n        en=\"The perpetrator got away. Thanks to you and your lousy investigation. Now they are out and about committing more crimes. It was even on the news!\"\n      />\n    </Instruction>\n  );\n}\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Hooks\nimport { useLoading, useGlobalState } from 'hooks';\n// Components\nimport { AvatarCard } from 'components/avatars';\nimport { TransparentButton } from 'components/buttons';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { WitnessRules } from './components/TextBlobs';\nimport { IconAvatar } from 'components/icons/IconAvatar';\nimport { AnimatedClockIcon } from 'components/icons/AnimatedClockIcon';\n\ntype StepWitnessSelectionProps = {\n  players: GamePlayers;\n  onWitnessButtonClick: GenericFunction;\n};\n\nexport function StepWitnessSelection({ players, onWitnessButtonClick }: StepWitnessSelectionProps) {\n  const { isLoading } = useLoading();\n  const [isAdmin] = useGlobalState('isAdmin');\n\n  return (\n    <Step key={1}>\n      <Title>\n        <IconAvatar icon={<AnimatedClockIcon />} size=\"large\" />\n        <br />\n        <Translate pt=\"Quem quer ser a testemunha ocular?\" en=\"Who wants to be the eye witness?\" />\n      </Title>\n\n      <WitnessRules />\n\n      <Instruction contained>\n        <Space>\n          {Object.values(players).map((player) => {\n            if (isAdmin) {\n              return (\n                <TransparentButton\n                  key={`p-bt-${player.id}`}\n                  disabled={isLoading}\n                  onClick={() => onWitnessButtonClick({ witnessId: player.id })}\n                >\n                  <AvatarCard key={`p-a-${player.id}`} player={player} withName addressUser />\n                </TransparentButton>\n              );\n            }\n\n            return <AvatarCard key={`p-a-${player.id}`} player={player} withName addressUser />;\n          })}\n        </Space>\n      </Instruction>\n\n      <Instruction>\n        (\n        <Translate pt=\"O administrator selecionará a testemunha\" en=\"The VIP will select the witness\" />)\n      </Instruction>\n    </Step>\n  );\n}\n","// Hooks\nimport { useLanguage, useStep } from 'hooks';\nimport { useOnSelectWitnessAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { StepWitnessSelection } from './StepWitnessSelection';\nimport { CrimeSceneIcon } from 'components/icons/CrimeSceneIcon';\n\nfunction PhaseWitnessSelection({ state, players, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, goToNextStep } = useStep(0);\n\n  const onWitnessButtonClick = useOnSelectWitnessAPIRequest();\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.TESTEMUNHA_OCULAR.WITNESS_SELECTION}\n      className=\"t-phase\"\n    >\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<CrimeSceneIcon />}\n          title={translate('O Caso', 'The Case')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  Um crime horrível aconteceu. Tão horrível quem não consigo nem explicar e nem podemos contar\n                  com a ciência forense para resolvê-lo. Portanto, só há uma pessoa que pode nos ajudar agora:\n                  uma testemunha ocular...\n                </>\n              }\n              en={\n                <>\n                  A horrible crime has happened. So horrible that I can't even explain, neither can't rely on\n                  forensics and science to solve it. So there's only one person that could help us now: An eye\n                  witness...\n                </>\n              }\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepWitnessSelection players={players} onWitnessButtonClick={onWitnessButtonClick} />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseWitnessSelection;\n","import { TESTEMUNHA_OCULAR_API } from 'services/adapters';\n\nimport { useAPICall, useLanguage } from 'hooks';\n\nexport function useOnSelectWitnessAPIRequest() {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: TESTEMUNHA_OCULAR_API.submitAction,\n    actionName: 'select-witness',\n    successMessage: translate('Testemunha enviada com sucesso', 'Witness submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar selecionar a testemunha',\n      'Oops, the application found an error while trying to submit the witness'\n    ),\n  });\n\n  return (payload: SelectWitnessPayload) => {\n    request({\n      action: 'SELECT_WITNESS',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSelectQuestionAPIRequest() {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: TESTEMUNHA_OCULAR_API.submitAction,\n    actionName: 'select-question',\n    successMessage: translate('Pergunta enviada com sucesso', 'Question submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar pergunta',\n      'Oops, the application found an error while trying to submit question'\n    ),\n  });\n\n  return (payload: SelectQuestionPayload) => {\n    request({\n      action: 'SELECT_QUESTION',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitTestimonyAPIRequest() {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: TESTEMUNHA_OCULAR_API.submitAction,\n    actionName: 'submit-testimony',\n    successMessage: translate('Testemunho enviada com sucesso', 'Testimony submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar seu testemunho',\n      'Oops, the application found an error while trying to send your testimony'\n    ),\n  });\n\n  return (payload: SubmitTestimonyPayload) => {\n    request({\n      action: 'GIVE_TESTIMONY',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnEliminateSuspectAPIRequest() {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: TESTEMUNHA_OCULAR_API.submitAction,\n    actionName: 'eliminate-suspect',\n    successMessage: translate('Suspeito eliminado com sucesso', 'Suspect release submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar eliminar o suspeito',\n      'Oops, the application found an error while trying to release the suspect'\n    ),\n  });\n\n  return (payload: EliminatePayload) => {\n    request({\n      action: 'ELIMINATE_SUSPECT',\n      ...payload,\n    });\n  };\n}\n","// Ant Design Resources\nimport { Tooltip } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks';\n// Components\nimport { CollapsibleRule } from 'components/rules';\nimport { IconAvatar } from 'components/icons/IconAvatar';\nimport { SpeechBubbleDeclinedIcon } from 'components/icons/SpeechBubbleDeclinedIcon';\nimport { SpeechBubbleAcceptedIcon } from 'components/icons/SpeechBubbleAcceptedIcon';\n\ntype QuestionsHistoryProps = {\n  history: THistoryEntry[];\n};\n\nexport function QuestionsHistory({ history }: QuestionsHistoryProps) {\n  const { translate } = useLanguage();\n\n  return (\n    <CollapsibleRule title={translate('Respostas Anteriores', 'Previous Answers')}>\n      <ol>\n        {history.map((entry) => (\n          <li key={`history-entry-${entry.id}`} className=\"t-history__entry\">\n            <span className=\"t-history__question\">{entry.question}</span>\n            {entry.answer ? (\n              <Tooltip title={translate('Sim', 'Yes')} className=\"t-history__icon\">\n                <IconAvatar icon={<SpeechBubbleAcceptedIcon />} size=\"small\" />\n              </Tooltip>\n            ) : (\n              <Tooltip title={translate('Não', 'No')} className=\"t-history__icon\">\n                <IconAvatar icon={<SpeechBubbleDeclinedIcon />} size=\"small\" />\n              </Tooltip>\n            )}\n          </li>\n        ))}\n      </ol>\n    </CollapsibleRule>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Popconfirm } from 'antd';\n// Hooks\nimport { useDimensions, useLanguage, useLoading } from 'hooks';\n// Components\nimport { ImageCard } from 'components/cards';\n\ntype SuspectsProps = {\n  suspects: Suspect[];\n  perpetrator?: Suspect;\n  onCardClick?: GenericFunction;\n  eliminatedSuspects?: string[];\n};\n\nexport function Suspects({ suspects, perpetrator, onCardClick, eliminatedSuspects = [] }: SuspectsProps) {\n  const { language, translate } = useLanguage();\n  const { isLoading } = useLoading();\n  const [width] = useDimensions();\n\n  const cardWidth = Math.floor(width / 7);\n\n  if (onCardClick) {\n    return (\n      <div className=\"t-suspects-table\">\n        {suspects.map((suspect) => {\n          const wasEliminated = eliminatedSuspects.includes(suspect.id);\n          const name = suspect.name[language];\n\n          return (\n            <Popconfirm\n              key={suspect.id}\n              title={translate(\n                `Tem certeza que quer liberar ${name}?`,\n                `Are you sure you want to release ${name}?`\n              )}\n              onConfirm={() => onCardClick(suspect.id)}\n              okText={translate('Sim', 'Yes')}\n              cancelText={translate('Não', 'No')}\n              disabled={wasEliminated || isLoading}\n            >\n              <button\n                className=\"t-suspects-table__suspect t-suspects-table__suspect-button\"\n                disabled={wasEliminated || isLoading}\n              >\n                <ImageCard\n                  imageId={wasEliminated ? 'us-00' : suspect.id}\n                  className={clsx(\n                    't-suspects-table__suspect-image',\n                    perpetrator?.id === suspect.id && 't-suspects-table__suspect-image--active',\n                    wasEliminated && 't-suspects-table__suspect-image--disabled'\n                  )}\n                  cardWidth={cardWidth}\n                  preview={false}\n                />\n                {!wasEliminated && <div className=\"t-suspects-table__suspect-name\">{name}</div>}\n              </button>\n            </Popconfirm>\n          );\n        })}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"t-suspects-table\">\n      {suspects.map((suspect) => {\n        const wasEliminated = eliminatedSuspects.includes(suspect.id);\n        return (\n          <div className=\"t-suspects-table__suspect\" key={suspect.id}>\n            <ImageCard\n              imageId={wasEliminated ? 'us-00' : suspect.id}\n              className={clsx(\n                't-suspects-table__suspect-image',\n                perpetrator?.id === suspect.id && 't-suspects-table__suspect-image--active'\n              )}\n              cardWidth={cardWidth}\n            />\n            {!wasEliminated && <div className=\"t-suspects-table__suspect-name\">{suspect.name[language]}</div>}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","// Components\n\nimport { AvatarName } from 'components/avatars';\nimport { AnimatedClockIcon } from 'components/icons/AnimatedClockIcon';\nimport { IconAvatar } from 'components/icons/IconAvatar';\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { QuestionsHistory } from './components/QuestionsHistory';\nimport { Suspects } from './components/Suspects';\n\ntype StepQuestionWaitingProps = {\n  suspects: Suspect[];\n  previouslyEliminatedSuspects: string[];\n  perpetrator: Suspect;\n  questioner: GamePlayer;\n  isUserTheWitness: boolean;\n  history: THistoryEntry[];\n};\n\nexport function StepQuestionWaiting({\n  suspects,\n  previouslyEliminatedSuspects,\n  perpetrator,\n  questioner,\n  isUserTheWitness,\n  history,\n}: StepQuestionWaitingProps) {\n  return (\n    <Step>\n      <Title>\n        <IconAvatar icon={<AnimatedClockIcon />} size=\"large\" />\n        <br />\n        <Translate pt={<>Examine os suspeitos</>} en={<>Examine the suspects</>} />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              <AvatarName player={questioner} /> está escolhendo uma pergunta para essa rodada.\n            </>\n          }\n          en={\n            <>\n              <AvatarName player={questioner} /> is picking a question for this round.\n            </>\n          }\n        />{' '}\n        {isUserTheWitness && (\n          <Translate\n            pt=\"O criminoso que você viu está marcado com borda amarela\"\n            en=\"The criminal you saw is highlighted in yellow\"\n          />\n        )}\n      </Instruction>\n\n      <Suspects\n        suspects={suspects}\n        perpetrator={isUserTheWitness ? perpetrator : undefined}\n        eliminatedSuspects={previouslyEliminatedSuspects}\n      />\n\n      <QuestionsHistory history={history} />\n    </Step>\n  );\n}\n","// Utils\nimport { LETTERS } from 'utils/constants';\n// Components\n\nimport { Suspects } from './components/Suspects';\nimport { QuestionsHistory } from './components/QuestionsHistory';\nimport { Space } from 'antd';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { Card } from 'components/cards';\n\ntype StepSelectQuestionProps = {\n  questions: TQuestion[];\n  onSelectQuestion: GenericFunction;\n  isLoading: boolean;\n  suspects: Suspect[];\n  previouslyEliminatedSuspects: string[];\n  history: THistoryEntry[];\n};\n\nexport function StepSelectQuestion({\n  questions,\n  onSelectQuestion,\n  isLoading,\n  suspects,\n  previouslyEliminatedSuspects,\n  history,\n}: StepSelectQuestionProps) {\n  return (\n    <Step>\n      <Title>\n        <Translate pt=\"Selecione uma pergunta\" en=\"Select a question\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt=\"A testemunha responderá a pergunta sobre o  sobre criminoso. A pergunta que você não escolher será descartada.\"\n          en=\"The witness will answer the question about the perpetrator. The unchosen question will be discarded.\"\n        />{' '}\n      </Instruction>\n\n      <Space className=\"space-container\" align=\"center\">\n        {questions.map(({ question, id }, index) => {\n          return (\n            <button\n              key={id}\n              className=\"t-select-question__button\"\n              onClick={() => onSelectQuestion({ questionId: id })}\n              disabled={isLoading}\n            >\n              <Card header={LETTERS[index]} randomColor className=\"t-card\">\n                {question}\n              </Card>\n            </button>\n          );\n        })}\n      </Space>\n\n      <Suspects suspects={suspects} eliminatedSuspects={previouslyEliminatedSuspects} />\n\n      <QuestionsHistory history={history} />\n    </Step>\n  );\n}\n","// Hooks\nimport { useLanguage, useLoading, useStep, useWhichPlayerIsThe } from 'hooks';\nimport { useOnSelectQuestionAPIRequest } from './utils/api-requests';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { AvatarName } from 'components/avatars';\nimport { ViewOr } from 'components/views';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepQuestionWaiting } from './StepQuestionWaiting';\nimport { StepSelectQuestion } from './StepSelectQuestion';\nimport { InvestigationIcon } from 'components/icons/InvestigationIcon';\n\nfunction PhaseQuestionSelection({ state, players, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n  const { step, goToNextStep } = useStep(0);\n  const [witness, isUserTheWitness] = useWhichPlayerIsThe('witnessId', state, players);\n  const [questioner, isUserTheQuestioner] = useWhichPlayerIsThe('questionerId', state, players);\n  const onSelectQuestion = useOnSelectQuestionAPIRequest();\n\n  const roundsLeft = (state?.round?.total ?? 0) - (state?.round?.current ?? 0) + 1 || 11;\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.TESTEMUNHA_OCULAR.QUESTION_SELECTION}\n      className=\"t-phase\"\n    >\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<InvestigationIcon />}\n          title={translate('Seleção da Pergunta', 'Question Selection')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  Agora que encontramos nossa testemunha (<AvatarName player={witness} />) é hora de\n                  questioná-la.\n                  <br />\n                  Só temos tempo para {roundsLeft} perguntas. Portanto, <AvatarName player={questioner} />,\n                  escolha a pergunta certa.\n                </>\n              }\n              en={\n                <>\n                  Now that we have a Witness (<AvatarName player={witness} />\n                  ), it's time to choose the question to ask them.\n                  <br />\n                  We can only have time for {roundsLeft} questions. So <AvatarName player={questioner} />,\n                  choose a question\n                </>\n              }\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <ViewOr orCondition={isUserTheQuestioner}>\n          <StepSelectQuestion\n            isLoading={isLoading}\n            onSelectQuestion={onSelectQuestion}\n            previouslyEliminatedSuspects={state.previouslyEliminatedSuspects}\n            questions={state.questions}\n            suspects={state.suspects}\n            history={state.history}\n          />\n\n          <StepQuestionWaiting\n            isUserTheWitness={isUserTheWitness}\n            perpetrator={state.perpetrator}\n            previouslyEliminatedSuspects={state.previouslyEliminatedSuspects}\n            questioner={questioner}\n            suspects={state.suspects}\n            history={state.history}\n          />\n        </ViewOr>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseQuestionSelection;\n","// Ant Design Resources\nimport { Avatar, Button } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks';\n// Components\n\nimport { Suspects } from './components/Suspects';\nimport { QuestionsHistory } from './components/QuestionsHistory';\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { AvatarName } from 'components/avatars';\nimport { Card } from 'components/cards';\nimport { SpeechBubbleAcceptedIcon } from 'components/icons/SpeechBubbleAcceptedIcon';\nimport { SpeechBubbleDeclinedIcon } from 'components/icons/SpeechBubbleDeclinedIcon';\n\ntype StepQuestioningProps = {\n  suspects: Suspect[];\n  previouslyEliminatedSuspects: string[];\n  perpetrator: Suspect;\n  isUserTheWitness: boolean;\n  witness: GamePlayer;\n  isLoading: boolean;\n  onAnswer: GenericFunction;\n  question: GamePlayer;\n  history: THistoryEntry[];\n};\n\nexport function StepQuestioning({\n  suspects,\n  previouslyEliminatedSuspects,\n  perpetrator,\n  isUserTheWitness,\n  witness,\n  isLoading,\n  onAnswer,\n  question,\n  history,\n}: StepQuestioningProps) {\n  const { translate } = useLanguage();\n\n  return (\n    <Step>\n      <Title level={3}>\n        <Translate\n          pt={\n            <>\n              Testemunha <AvatarName player={witness} />, responda:\n            </>\n          }\n          en={\n            <>\n              Witness <AvatarName player={witness} />, please answer:\n            </>\n          }\n        />\n        <br />\n        <div className=\"t-questioning-answer-grid\">\n          {isUserTheWitness ? (\n            <Button\n              type=\"text\"\n              size=\"large\"\n              onClick={() => onAnswer({ testimony: false })}\n              className=\"t-questioning-answer-grid__button t-questioning-answer-grid__button--no\"\n              disabled={!isUserTheWitness || isLoading}\n            >\n              <span className=\"t-questioning-answer-grid__answer\">\n                <Translate pt=\"Não\" en=\"No\" />\n              </span>\n              <Avatar\n                size=\"large\"\n                icon={<SpeechBubbleDeclinedIcon />}\n                style={{ backgroundColor: 'transparent' }}\n                shape=\"square\"\n              />\n            </Button>\n          ) : (\n            <div></div>\n          )}\n\n          <Card header={translate('O suspeito...', 'The perpetrator...')} randomColor className=\"t-card\">\n            {question.question}\n          </Card>\n          {isUserTheWitness ? (\n            <Button\n              type=\"text\"\n              size=\"large\"\n              onClick={() => onAnswer({ testimony: true })}\n              className=\"t-questioning-answer-grid__button t-questioning-answer-grid__button--no\"\n              disabled={!isUserTheWitness || isLoading}\n            >\n              <Avatar\n                size=\"large\"\n                icon={<SpeechBubbleAcceptedIcon />}\n                style={{ backgroundColor: 'transparent' }}\n                shape=\"square\"\n              />\n              <span className=\"t-questioning-answer-grid__answer\">\n                <Translate pt=\"Sim\" en=\"Yes\" />\n              </span>\n            </Button>\n          ) : (\n            <div></div>\n          )}\n        </div>\n      </Title>\n\n      <Suspects\n        suspects={suspects}\n        perpetrator={isUserTheWitness ? perpetrator : undefined}\n        eliminatedSuspects={previouslyEliminatedSuspects}\n      />\n\n      <QuestionsHistory history={history} />\n    </Step>\n  );\n}\n","// Hooks\nimport { useWhichPlayerIsThe, useLoading, useLanguage, useStep } from 'hooks';\nimport { useOnSubmitTestimonyAPIRequest } from './utils/api-requests';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Translate } from 'components/language';\nimport { AvatarName } from 'components/avatars';\nimport { Instruction } from 'components/text';\nimport { StepQuestioning } from './StepQuestioning';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { EyeIcon } from 'components/icons/EyeIcon';\n\nfunction PhaseQuestioning({ state, players, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n  const { step, goToNextStep } = useStep(0);\n  const [witness, isUserTheWitness] = useWhichPlayerIsThe('witnessId', state, players);\n\n  const onAnswer = useOnSubmitTestimonyAPIRequest();\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.TESTEMUNHA_OCULAR.QUESTIONING}\n      className=\"t-phase\"\n    >\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<EyeIcon />}\n          title={translate('Questionamento', 'Questioning')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  Nossa testemunha só sabe julgar por aparência.\n                  <br />\n                  <AvatarName player={witness} />, é hora de nos ajudar a pegar esse criminoso hediondo.\n                </>\n              }\n              en={\n                <>\n                  Our witness loves to judge the book by its cover.\n                  <br />\n                  <AvatarName player={witness} />, it's time to help us find this heinous perpetrator!\n                </>\n              }\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepQuestioning\n          suspects={state.suspects}\n          previouslyEliminatedSuspects={state.previouslyEliminatedSuspects}\n          perpetrator={state.perpetrator}\n          isUserTheWitness={isUserTheWitness}\n          witness={witness}\n          isLoading={isLoading}\n          onAnswer={onAnswer}\n          question={state.question}\n          history={state.history}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseQuestioning;\n","// Ant Design Resources\nimport { Avatar, Button, Space } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks';\n// Components\nimport { Suspects } from './components/Suspects';\nimport { QuestionsHistory } from './components/QuestionsHistory';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { AvatarName } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { Card } from 'components/cards';\nimport { SpeechBubbleAcceptedIcon } from 'components/icons/SpeechBubbleAcceptedIcon';\nimport { SpeechBubbleDeclinedIcon } from 'components/icons/SpeechBubbleDeclinedIcon';\n\ntype StepSuspectEliminationProps = {\n  suspects: Suspect[];\n  previouslyEliminatedSuspects: string[];\n  eliminatedSuspects: string[];\n  perpetrator: Suspect;\n  isUserTheWitness: boolean;\n  isUserTheQuestioner: boolean;\n  witness: GamePlayer;\n  isLoading: boolean;\n  onEliminate: GenericFunction;\n  question: GamePlayer;\n  testimony: boolean;\n  history: THistoryEntry[];\n};\n\nexport function StepSuspectElimination({\n  suspects,\n  previouslyEliminatedSuspects,\n  eliminatedSuspects,\n  perpetrator,\n  isUserTheWitness,\n  isUserTheQuestioner,\n  witness,\n  isLoading,\n  onEliminate,\n  question,\n  testimony,\n  history,\n}: StepSuspectEliminationProps) {\n  const { translate } = useLanguage();\n\n  const onEliminateSuspect = (suspectId: string) => onEliminate({ suspectId, pass: false });\n  const onPass = () => onEliminate({ suspectId: '', pass: true });\n\n  return (\n    <Step>\n      <Title level={3}>\n        <AvatarName player={witness} />\n        <Translate en=\"answered\" pt=\"respondeu\" />{' '}\n        {testimony ? (\n          <Translate en=\"YES\" pt=\"SIM\" />\n        ) : (\n          <>\n            <Translate en=\"NO\" pt=\"NÃO\" />\n          </>\n        )}{' '}\n        <Avatar\n          size=\"large\"\n          icon={testimony ? <SpeechBubbleAcceptedIcon /> : <SpeechBubbleDeclinedIcon />}\n          style={{ backgroundColor: 'transparent' }}\n          shape=\"square\"\n        />{' '}\n        <Translate en=\"to the question\" pt=\"para a pergunta:\" />\n        <br />\n        <Space className=\"space-container\" align=\"center\">\n          <Card\n            header={translate('O suspeito...', 'The perpetrator...')}\n            color={testimony ? 'green' : 'red'}\n            className=\"t-card\"\n          >\n            {question.question}\n          </Card>\n        </Space>\n      </Title>\n      {isUserTheQuestioner && (\n        <Instruction contained>\n          <Translate\n            pt=\"Clique em um suspeito para liberá-lo(a)\"\n            en=\"Click on a suspect card to release it\"\n          />\n          <br />\n          {Boolean(eliminatedSuspects?.length && isUserTheQuestioner) && (\n            <Space className=\"space-container\" align=\"center\">\n              <Button type=\"primary\" onClick={onPass} disabled={isLoading}>\n                <Translate\n                  pt=\"Parar de eliminar e ir para a próxima pergunta\"\n                  en=\"Stop releasing suspects and go to next question\"\n                />\n              </Button>\n            </Space>\n          )}\n        </Instruction>\n      )}\n\n      <Suspects\n        suspects={suspects}\n        perpetrator={isUserTheWitness ? perpetrator : undefined}\n        onCardClick={isUserTheQuestioner ? onEliminateSuspect : undefined}\n        eliminatedSuspects={[...(eliminatedSuspects ?? []), ...(previouslyEliminatedSuspects ?? [])]}\n      />\n\n      <QuestionsHistory history={history} />\n    </Step>\n  );\n}\n","import { AvatarName } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { useLanguage, useLoading, useStep, useWhichPlayerIsThe } from 'hooks';\nimport { PHASES } from 'utils/phases';\n\nimport { useOnEliminateSuspectAPIRequest } from './utils/api-requests';\nimport { StepSuspectElimination } from './StepSuspectElimination';\nimport { LawIcon } from 'components/icons/LawIcon';\n\nfunction PhaseTrial({ state, players, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n  const { step, goToNextStep } = useStep(0);\n\n  const [witness, isUserTheWitness] = useWhichPlayerIsThe('witnessId', state, players);\n  const [questioner, isUserTheQuestioner] = useWhichPlayerIsThe('questionerId', state, players);\n\n  const onEliminate = useOnEliminateSuspectAPIRequest();\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.TESTEMUNHA_OCULAR.TRIAL}\n      className=\"t-phase\"\n    >\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<LawIcon />}\n          title={translate('Julgamento', 'Trial')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  Precisamos eliminar suspeitos! Para cada pergunta, pelo menos um suspeito tem que se\n                  eliminado. Lembre-se que estamos tentando liberar testemunhas. Desvendamos o caso se o\n                  último suspeito for o criminoso!\n                  <br />\n                  <AvatarName player={questioner} addressUser /> está encarregado(a) de selecionar os\n                  inocentes.\n                </>\n              }\n              en={\n                <>\n                  We need to eliminate suspects! For each question we must eliminate at least one suspect.\n                  Remember we are trying to release witnesses. We solve the case if the last man (or woman)\n                  standing is the perpetrator!\n                  <br />\n                  <AvatarName player={questioner} /> is in charge of selecting the innocent people.\n                </>\n              }\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepSuspectElimination\n          suspects={state.suspects}\n          previouslyEliminatedSuspects={state.previouslyEliminatedSuspects}\n          perpetrator={state.perpetrator}\n          isUserTheWitness={isUserTheWitness}\n          witness={witness}\n          isLoading={isLoading}\n          onEliminate={onEliminate}\n          question={state.question}\n          eliminatedSuspects={state.eliminatedSuspects}\n          isUserTheQuestioner={isUserTheQuestioner}\n          testimony={state.testimony}\n          history={state.history}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseTrial;\n","// Hooks\nimport { useLanguage } from 'hooks';\n// Components\n\nimport { AnnouncementContent } from './components/TextBlobs';\nimport { QuestionsHistory } from './components/QuestionsHistory';\nimport { GameOverWrapper } from 'components/game-over';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { ImageCard } from 'components/cards';\nimport { CriminalIcon } from 'components/icons/CriminalIcon';\nimport { NewspaperIcon } from 'components/icons/NewspaperIcon';\n\nfunction PhaseGameOver({ state, info }: PhaseProps) {\n  const { language, translate } = useLanguage();\n\n  const didUserWin = state.outcome === 'WIN';\n\n  return (\n    <GameOverWrapper\n      info={info}\n      state={state}\n      announcementIcon={didUserWin ? <CriminalIcon /> : <NewspaperIcon />}\n      announcementDuration={15}\n      announcementTitle={\n        didUserWin\n          ? translate('Capturado!', 'Arrested!')\n          : translate('O criminoso escapou!', 'They got away!')\n      }\n      announcementContent={<AnnouncementContent didUserWin={didUserWin} />}\n    >\n      <Instruction contained>\n        <Translate\n          pt={<>O interrogatório durou {state.groupScore ?? '?'} horas.</>}\n          en={<>The interrogation lasted for {state.groupScore ?? '?'} hours.</>}\n        />\n        <br />\n        <Translate pt=\"O criminoso era:\" en=\"The perpetrator was:\" />\n\n        <div className=\"t-suspects-table__suspect\">\n          <ImageCard\n            imageId={state.perpetrator.id}\n            className=\"t-suspects-table__suspect-image\"\n            cardWidth={150}\n          />\n          <div className=\"t-suspects-table__suspect-name\">{state.perpetrator.name[language]}</div>\n        </div>\n      </Instruction>\n\n      <QuestionsHistory history={state.history} />\n    </GameOverWrapper>\n  );\n}\n\nexport default PhaseGameOver;\n","// Constants\nimport { GAME_COLLECTION } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport PhaseWitnessSelection from './PhaseWitnessSelection';\nimport PhaseQuestionSelection from './PhaseQuestionSelection';\nimport PhaseQuestioning from './PhaseQuestioning';\nimport PhaseTrial from './PhaseTrial';\nimport PhaseGameOver from './PhaseGameOver';\n\nfunction SessionTestemunhaOcular({ gameId }: SessionProps) {\n  function getActiveComponent(phase: string) {\n    switch (phase) {\n      case PHASES.DEFAULT.LOBBY:\n        return PhaseLobby;\n      case PHASES.DEFAULT.RULES:\n        return PhaseRules;\n      case PHASES.DEFAULT.SETUP:\n        return PhaseSetup;\n      case PHASES.TESTEMUNHA_OCULAR.WITNESS_SELECTION:\n        return PhaseWitnessSelection;\n      case PHASES.TESTEMUNHA_OCULAR.QUESTION_SELECTION:\n        return PhaseQuestionSelection;\n      case PHASES.TESTEMUNHA_OCULAR.QUESTIONING:\n        return PhaseQuestioning;\n      case PHASES.TESTEMUNHA_OCULAR.TRIAL:\n        return PhaseTrial;\n      case PHASES.DEFAULT.GAME_OVER:\n        return PhaseGameOver;\n      default:\n        return PageError;\n    }\n  }\n\n  return (\n    <Session\n      gameId={gameId}\n      gameCollection={GAME_COLLECTION.TESTEMUNHA_OCULAR}\n      getActiveComponent={getActiveComponent}\n    />\n  );\n}\n\nexport default SessionTestemunhaOcular;\n","// This icon file is generated automatically.\nvar DownSquareOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M505.5 658.7c3.2 4.4 9.7 4.4 12.9 0l178-246c3.8-5.3 0-12.7-6.5-12.7H643c-10.2 0-19.9 4.9-25.9 13.2L512 558.6 406.8 413.2c-6-8.3-15.6-13.2-25.9-13.2H334c-6.5 0-10.3 7.4-6.5 12.7l178 246z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z\" } }] }, \"name\": \"down-square\", \"theme\": \"outlined\" };\nexport default DownSquareOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DownSquareOutlinedSvg from \"@ant-design/icons-svg/es/asn/DownSquareOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar DownSquareOutlined = function DownSquareOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: DownSquareOutlinedSvg\n  }));\n};\n\nDownSquareOutlined.displayName = 'DownSquareOutlined';\nexport default /*#__PURE__*/React.forwardRef(DownSquareOutlined);","// This icon file is generated automatically.\nvar UpCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M518.5 360.3a7.95 7.95 0 00-12.9 0l-178 246c-3.8 5.3 0 12.7 6.5 12.7H381c10.2 0 19.9-4.9 25.9-13.2L512 460.4l105.2 145.4c6 8.3 15.6 13.2 25.9 13.2H690c6.5 0 10.3-7.4 6.5-12.7l-178-246z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"up-circle\", \"theme\": \"outlined\" };\nexport default UpCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport UpCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/UpCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar UpCircleOutlined = function UpCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: UpCircleOutlinedSvg\n  }));\n};\n\nUpCircleOutlined.displayName = 'UpCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(UpCircleOutlined);"],"names":["AnimatedClockIcon","props","xmlns","viewBox","fill","d","attributeName","dur","from","repeatCount","to","type","CrimeSceneIcon","View","children","ViewIf","isVisible","ViewOr","orCondition","ViewSwitch","cases","length","Error","console","warn","WitnessRules","contained","pt","en","AnnouncementContent","didUserWin","StepWitnessSelection","players","onWitnessButtonClick","isLoading","useLoading","useGlobalState","isAdmin","IconAvatar","icon","size","Object","values","map","player","disabled","onClick","witnessId","id","withName","addressUser","state","info","translate","useLanguage","useStep","step","goToNextStep","request","useAPICall","apiFunction","TESTEMUNHA_OCULAR_API","actionName","successMessage","errorMessage","payload","action","useOnSelectWitnessAPIRequest","phase","allowedPhase","PHASES","className","title","onClose","currentRound","round","current","QuestionsHistory","history","entry","question","answer","SpeechBubbleAcceptedIcon","SpeechBubbleDeclinedIcon","Suspects","suspects","perpetrator","onCardClick","eliminatedSuspects","language","useDimensions","width","cardWidth","Math","floor","suspect","wasEliminated","includes","name","onConfirm","okText","cancelText","imageId","clsx","preview","StepQuestionWaiting","previouslyEliminatedSuspects","questioner","isUserTheWitness","undefined","StepSelectQuestion","questions","onSelectQuestion","align","index","questionId","header","LETTERS","randomColor","useWhichPlayerIsThe","witness","isUserTheQuestioner","useOnSelectQuestionAPIRequest","roundsLeft","total","InvestigationIcon","StepQuestioning","onAnswer","level","testimony","style","backgroundColor","shape","useOnSubmitTestimonyAPIRequest","EyeIcon","StepSuspectElimination","onEliminate","color","Boolean","suspectId","pass","useOnEliminateSuspectAPIRequest","LawIcon","outcome","announcementIcon","CriminalIcon","NewspaperIcon","announcementDuration","announcementTitle","announcementContent","groupScore","gameId","gameCollection","GAME_COLLECTION","getActiveComponent","PhaseLobby","PhaseRules","PhaseSetup","PhaseWitnessSelection","PhaseQuestionSelection","PhaseQuestioning","PhaseTrial","PhaseGameOver","PageError","DownSquareOutlined","ref","React","AntdIcon","_objectSpread","DownSquareOutlinedSvg","displayName","UpCircleOutlined","UpCircleOutlinedSvg"],"sourceRoot":""}