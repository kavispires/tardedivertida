{"version":3,"file":"static/js/332.6add5434.chunk.js","mappings":"qRAcO,SAASA,EAAT,GAIsB,IAH3BC,EAG0B,EAH1BA,cACAC,EAE0B,EAF1BA,mBACAC,EAC0B,EAD1BA,cAEQC,GAAcC,EAAAA,EAAAA,MAAdD,UAER,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAAsB,WACtBF,GACFJ,EAAc,CAAEO,QAASR,EAAmBS,GAAIJ,YAAAA,KAIpD,OACE,iBAAKK,UAAU,SAAf,WACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAWC,GAAG,wBAAwBC,GAAG,wBAG3C,SAAC,KAAD,CAAaC,WAAS,EAAtB,UACE,SAAC,KAAD,CAAWF,GAAG,qCAAqCC,GAAG,iDAGxD,gBAAIF,UAAU,gBAAd,UACGX,EAAce,KAAI,SAACC,GAAD,OACjB,eAAIL,UAAU,sBAAd,UACE,mBAAQM,QAAS,kBAAMf,EAAc,CAAEO,QAASO,EAAMN,MAAOC,UAAU,0BAAvE,SACGK,EAAME,QAF8BF,EAAMN,QAMjD,eAAIC,UAAU,8CAAd,UACE,SAAC,KAAD,CAAWC,GAAG,KAAKC,GAAG,UAExB,gBAAIF,UAAU,kDAAd,WACE,gBAAKA,UAAU,UAAf,SAA0BV,EAAmBiB,QAC7C,SAAC,IAAD,CACEP,UAAU,wBACVQ,YAAahB,EAAU,eAAgB,cACvCiB,SAAU,SAACC,GAAD,OAAOd,EAAec,EAAEC,OAAOC,QACzCC,aAAchB,IAEfiB,QAAQnB,KACP,SAAC,IAAD,CAAQoB,KAAK,UAAUT,QAAST,EAAqBG,UAAU,yBAA/D,UACE,SAAC,KAAD,CAAWC,GAAG,qBAAkBC,GAAG,+BCkDjD,MAzFA,YAAoE,IAAD,IAApCc,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,KACrC1B,GAAcC,EAAAA,EAAAA,MAAdD,UACR,GAA8C2B,EAAAA,EAAAA,IAAoB,iBAAkBH,EAAOC,GAA3F,eAAOG,EAAP,KAAqBC,EAArB,KACA,GAAwB3B,EAAAA,EAAAA,UAAS,GAAjC,eAAO4B,EAAP,KAAaC,EAAb,KAEMhC,ECtBD,SAAoCgC,GACzC,IAAQ/B,GAAcC,EAAAA,EAAAA,MAAdD,UAEFgC,GAAUC,EAAAA,EAAAA,IAAW,CACzBC,YAAaC,EAAAA,GAAAA,aACbC,WAAY,eACZC,aAAc,kBAAMN,EAAQ,IAC5BO,QAAS,kBAAMP,EAAQ,IACvBQ,eAAgBvC,EAAU,+BAAgC,4BAC1DwC,aAAcxC,EACZ,oEACA,sDAIJ,OAAO,SAACyC,GACNT,GAAQ,QACNU,OAAQ,gBACLD,KDIeE,CAA2BZ,GAEjD,OACE,SAAC,KAAD,CAAgBL,KAAMA,EAAMkB,MAAK,OAAEpB,QAAF,IAAEA,OAAF,EAAEA,EAAOoB,MAAOC,aAAcC,EAAAA,EAAAA,gBAAAA,gBAA/D,UACE,UAAC,KAAD,CAAchB,KAAMA,EAAML,QAASA,EAAnC,WAEE,SAAC,KAAD,CAAmBsB,MAAOvB,EAAMuB,MAAOC,cAAe,kBAAMjB,EAAQ,IAAIkB,KAAM,EAAGC,YAAY,OAA7F,UACE,SAAC,KAAD,CAAavC,WAAS,EAAtB,UACE,SAAC,KAAD,CACEF,GAAG,2EACHC,GAAG,qEAMT,SAAC,KAAD,CACEa,KAAK,WACL4B,MAAOnD,EAAU,0CAAqC,oCACtDoD,QAAS,kBAAMrB,EAAQ,IACvBsB,aAAY,OAAE7B,QAAF,IAAEA,GAAF,UAAEA,EAAOuB,aAAT,aAAE,EAAcO,QAC5BC,UAAe,OAAL/B,QAAK,IAALA,GAAA,UAAAA,EAAOuB,aAAP,eAAcO,SAAU,EAAI,QAAKE,EAL7C,UAOE,SAAC,KAAD,WACE,SAAC,KAAD,CACE/C,IACE,4NAGE,kBAHF,mFAKE,mBACA,UAAC,KAAD,CAAaE,WAAS,EAAtB,WACE,SAAC,KAAD,CAAY8C,OAAQ7B,EAAc8B,aAAW,IAD/C,kDAKJhD,IACE,wLAGE,kBAHF,8EAKE,mBACA,UAAC,KAAD,CAAaC,WAAS,EAAtB,WACE,SAAC,KAAD,CAAY8C,OAAQ7B,EAAc8B,aAAW,IAD/C,sDAUV,UAAC,KAAD,CAAMC,WAAS,EAAf,WACE,SAAC,KAAD,CAAQC,UAAW/B,EAAnB,UACE,SAACjC,EAAD,CACEC,cAAe2B,EAAM3B,cACrBC,mBAAoB0B,EAAM1B,mBAC1BC,cAAeA,OAInB,SAAC,KAAD,CAAQ6D,WAAY/B,EAApB,UACE,SAAC,KAAD,CACEsB,MAAOnD,EAAU,aAAc,kBAC/B6D,aACE,iCACE,SAAC,KAAD,CAAYJ,OAAQ7B,EAAc8B,aAAW,IAAI,KACjD,SAAC,KAAD,CACEjD,GAAG,8CACHC,GAAG,4CAITe,QAASA,e,8BEnGvB,EADsB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,+jBAAmkB,KAAQ,UAAW,MAAS,Y,UCMxvBqC,EAAkB,SAAyBC,EAAOC,GACpD,OAAoBC,EAAAA,cAAoBC,EAAAA,GAAUC,EAAAA,EAAAA,IAAcA,EAAAA,EAAAA,GAAc,GAAIJ,GAAQ,GAAI,CAC5FC,IAAKA,EACLI,KAAMC,MAIVP,EAAgBQ,YAAc,kBAC9B,MAA4BL,EAAAA,WAAiBH,GCb7C,EADmB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,kSAAsS,KAAQ,OAAQ,MAAS,YCMrdS,EAAe,SAAsBR,EAAOC,GAC9C,OAAoBC,EAAAA,cAAoBC,EAAAA,GAAUC,EAAAA,EAAAA,IAAcA,EAAAA,EAAAA,GAAc,GAAIJ,GAAQ,GAAI,CAC5FC,IAAKA,EACLI,KAAMI,MAIVD,EAAaD,YAAc,eAC3B,MAA4BL,EAAAA,WAAiBM,GCFtC,SAASE,EAAT,GAA8D,IAA7C5D,EAA4C,EAA5CA,MAAO6D,EAAqC,EAArCA,MAAqC,IAA9BlE,UAAAA,OAA8B,MAAlB,GAAkB,EAClE,OACE,iBAAKA,WAAWmE,EAAAA,EAAAA,GAAK,mBAAoBnE,GAAzC,WACE,SAAC,EAAD,IADF,IACuBK,EADvB,KAC8B,SAAC,EAAD,IAAiB,IAC5CS,QAAQoD,KACP,kBAAMlE,UAAU,0BAAhB,WACE,SAAC,IAAD,CACEoE,KAAK,SAAC,0BAAD,IACLC,MAAM,SACNC,KAAK,QACLtE,UAAU,gCACT,IACFkE,QCVJ,SAASK,EAAT,GAAgG,IAA1EC,EAAyE,EAAzEA,aAAc7E,EAA2D,EAA3DA,YAAa8E,EAA8C,EAA9CA,iBAAkBxD,EAA4B,EAA5BA,QACxE,GAAwBvB,EAAAA,EAAAA,UAAyB,MAAjD,eAAOgF,EAAP,KAAaC,EAAb,KAMMC,GAAeC,EAAAA,EAAAA,UACnB,kBACEC,MAAMC,OAAOC,KAAK/D,GAASgE,OAAS,GACjCC,KAAK,GACL9E,KAAI,SAACM,EAAGyE,GAAJ,OAAUzE,EAAIyE,OACvB,CAAClE,IAGH,OACE,UAAC,KAAD,CAAMkC,WAAS,EAACnD,UAAU,SAA1B,WACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAWC,GAAG,4CAAsCC,GAAG,iDAGzD,iBAAKF,UAAU,qBAAf,WACE,SAACiE,EAAD,CAAO5D,MAAK,OAAEV,QAAF,IAAEA,EAAAA,EAAF,OAAiB6E,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAcjE,KAAMP,UAAU,+BAC3D,UAAC,IAAD,CACEA,WAAWmE,EAAAA,EAAAA,GAAK,4BAAqC,IAATO,GAAiB,oCAC7DJ,KAAK,QACLvD,KAAK,UACLT,QAAS,kBAAMqE,GAAQ,IAJzB,WAME,SAAC,KAAD,CAAY5D,KAAK,0BAA0BsD,MAAM,SAASrE,UAAU,iBACpE,SAAC,KAAD,CAAWC,GAAG,SAASC,GAAG,aAE5B,UAAC,IAAD,CACEF,WAAWmE,EAAAA,EAAAA,GACT,+BACS,IAATO,GAAkB,uCAEpBJ,KAAK,QACLvD,KAAK,UACLT,QAAS,kBAAMqE,GAAQ,IAPzB,WASE,SAAC,KAAD,CAAY5D,KAAK,4BAA4BsD,MAAM,SAASrE,UAAU,iBACtE,SAAC,KAAD,CAAWC,GAAG,eAAYC,GAAG,kBAIvB,OAATwE,IACC,iCACE,SAAC,KAAD,CAAavE,WAAS,EAAtB,UACE,SAAC,KAAD,CACEF,GAAG,6CACHC,GAAG,2CAIP,eAAIF,UAAU,UAAd,SACG4E,EAAaxE,KAAI,SAACgF,GACjB,IAAMC,EAAG,mBAAeD,GACxB,OACE,yBACE,SAAC,IAAD,CACErE,KAAK,UACLuE,SAAmB,OAATZ,EACVpE,QAAS,WA3DzBmE,EAAiB,CAAEc,SAAUb,EAAMc,WA2DcJ,KACjCd,KAAK,QACLD,MAAM,SALR,SAOGe,KARIC,YAgBnB,SAAC,IAAD,KAEA,SAAC,KAAD,CAAiBpE,QAASA,OClChC,MAhDA,YAA2D,IAAD,EAApCD,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,KAC5B1B,GAAcC,EAAAA,EAAAA,MAAdD,UACR,GAAwBE,EAAAA,EAAAA,UAAS,GAAjC,eAAO4B,EAAP,KAAaC,EAAb,KAEMkD,EPaD,SAAuClD,GAC5C,IAAQ/B,GAAcC,EAAAA,EAAAA,MAAdD,UAEFgC,GAAUC,EAAAA,EAAAA,IAAW,CACzBC,YAAaC,EAAAA,GAAAA,aACbC,WAAY,kBACZC,aAAc,kBAAMN,EAAQ,IAC5BO,QAAS,kBAAMP,EAAQ,IACvBQ,eAAgBvC,EAAU,oCAA+B,+BACzDwC,aAAcxC,EACZ,yEACA,0DAIJ,OAAO,SAACyC,GACNT,GAAQ,QACNU,OAAQ,mBACLD,KO/BkBwD,CAA8BlE,GAEvD,OACE,SAAC,KAAD,CAAgBL,KAAMA,EAAMkB,MAAK,OAAEpB,QAAF,IAAEA,OAAF,EAAEA,EAAOoB,MAAOC,aAAcC,EAAAA,EAAAA,gBAAAA,MAA/D,UACE,UAAC,KAAD,CAAchB,KAAMA,EAAML,QAASA,EAAnC,WAEE,SAAC,KAAD,CACEF,KAAK,WACL4B,MAAOnD,EAAU,sBAAoB,sBACrCoD,QAAS,kBAAMrB,EAAQ,IACvBsB,aAAY,OAAE7B,QAAF,IAAEA,GAAF,UAAEA,EAAOuB,aAAT,aAAE,EAAcO,QAJ9B,UAME,SAAC,KAAD,WACE,SAAC,KAAD,CACE7C,IACE,6FAEE,kBAFF,2EAMFC,IACE,4EAEE,kBAFF,uEAWR,SAACqE,EAAD,CACEC,aAAcxD,EAAMwD,aACpB7E,YAAaqB,EAAMrB,YACnB8E,iBAAkBA,EAClBxD,QAASA,UCjDnB,EADmB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,oSAAwS,KAAQ,OAAQ,MAAS,YCMvdyE,EAAe,SAAsBnC,EAAOC,GAC9C,OAAoBC,EAAAA,cAAoBC,EAAAA,GAAUC,EAAAA,EAAAA,IAAcA,EAAAA,EAAAA,GAAc,GAAIJ,GAAQ,GAAI,CAC5FC,IAAKA,EACLI,KAAM+B,MAIVD,EAAa5B,YAAc,eAC3B,MAA4BL,EAAAA,WAAiBiC,GCDtC,SAASE,EAAT,GAMkB,IALvB3E,EAKsB,EALtBA,QACA4E,EAIsB,EAJtBA,WACAlG,EAGsB,EAHtBA,YACA6E,EAEsB,EAFtBA,aACAjD,EACsB,EADtBA,QAEA,OACE,UAAC,KAAD,CAAMvB,UAAU,SAAhB,WACE,SAAC,KAAD,CAAO8F,MAAO,EAAd,UACE,SAAC,KAAD,CAAW7F,GAAG,YAAYC,GAAG,eAG/B,SAAC,KAAD,CAAO4F,MAAO,EAAd,UACE,SAAC7B,EAAD,CAAO5D,MAAK,OAAEV,QAAF,IAAEA,EAAAA,EAAF,OAAiB6E,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAcjE,KAAM2D,MAAO2B,OAG1D,eAAI7F,UAAU,sBAAd,SACG+E,OAAOgB,OAAO9E,GAASb,KAAI,SAAC6C,GAC3B,IAAMoC,EAAG,wBAAoBpC,EAAOlD,IAC9BiG,EAAY/C,EAAOuC,aAAeK,EACxC,OACE,gBAAI7F,UAAU,oBAAd,WACE,0BACE,gBAAKA,UAAU,8BAAf,SACGiD,EAAOsC,UACN,SAAC,KAAD,CAAYxE,KAAK,0BAA0BsD,MAAM,SAASrE,UAAU,iBAEpE,SAAC,KAAD,CAAYe,KAAK,4BAA4BsD,MAAM,SAASrE,UAAU,qBAI5E,iBAAKA,UAAU,4BAAf,WACE,SAAC,KAAD,CAAQD,GAAIkD,EAAOgD,YACnB,gBAAKjG,UAAU,0BAAf,SAA0CiD,EAAOiD,WAEnD,0BACE,iBAAKlG,WAAWmE,EAAAA,EAAAA,GAAK,2BAA4B6B,GAAa,kBAA9D,UACGA,GAAY,SAAC,EAAD,KAAmB,SAAC,EAAD,IADlC,IACqD/C,EAAOuC,kBAhBzBH,SAwB7C,SAAC,KAAD,WACE,SAAC,KAAD,CACEtC,SAAU,GACVoD,WAAS,EACTC,SAAU,kBAAM7E,EAAQ,IACxBjB,QAAS,kBAAMiB,EAAQ,IACvB8E,MAAM,iBCehB,MA5DA,YAA2D,IAAD,EAApCrF,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,KAC5B1B,GAAcC,EAAAA,EAAAA,MAAdD,UACR,GAAwBE,EAAAA,EAAAA,UAAS,GAAjC,eAAO4B,EAAP,KAAaC,EAAb,KAEA,OACE,SAAC,KAAD,CAAgBL,KAAMA,EAAMkB,MAAK,OAAEpB,QAAF,IAAEA,OAAF,EAAEA,EAAOoB,MAAOC,aAAcC,EAAAA,EAAAA,gBAAAA,WAA/D,UACE,UAAC,KAAD,CAAchB,KAAMA,EAAML,QAASA,EAAnC,WAEE,SAAC,KAAD,CACEF,KAAK,SACL4B,MAAOnD,EAAU,YAAa,WAC9BoD,QAAS,kBAAMrB,EAAQ,IACvBsB,aAAY,OAAE7B,QAAF,IAAEA,GAAF,UAAEA,EAAOuB,aAAT,aAAE,EAAcO,QAJ9B,UAME,SAAC,KAAD,WACE,SAAC,KAAD,CACE7C,IACE,0EAEE,kBAFF,wEAMFC,IACE,8DAEE,kBAFF,sEAWR,SAAC,KAAD,CAAMiD,WAAS,EAAf,UACE,SAACyC,EAAD,CACE3E,QAASA,EACTtB,YAAaqB,EAAMrB,YACnB6E,aAAcxD,EAAMwD,aACpBqB,WAAY7E,EAAM6E,WAClBtE,QAASA,OAIb,UAAC,KAAD,CAAM4B,WAAS,EAAf,WACE,SAAC,KAAD,uBACA,SAAC,KAAD,CAAcmD,QAAStF,EAAMsF,QAASrF,QAASA,KAC/C,SAAC,KAAD,WACE,SAAC,IAAD,CAAQX,QAAS,kBAAMiB,EAAQ,IAAIgF,OAAK,EAAxC,UACE,SAAC,KAAD,CAAWtG,GAAG,0BAA0BC,GAAG,2BAG/C,SAAC,KAAD,CAAsBqC,MAAOvB,EAAMuB,iBCnE7C,MAJA,YAAqD,IAA5BvB,EAA2B,EAA3BA,MAAOE,EAAoB,EAApBA,KAC9B,OAAO,SAAC,KAAD,CAAiBsF,iBAAiB,SAAStF,KAAMA,EAAMF,MAAOA,KCqCvE,MA/BA,YAAyD,IAAzByF,EAAwB,EAAxBA,OAsB9B,OACE,SAAC,KAAD,CACEA,OAAQA,EACRC,eAAgBC,EAAAA,GAAAA,gBAChBC,mBAzBJ,SAA4BxE,GAC1B,OAAQA,GACN,KAAKE,EAAAA,EAAAA,QAAAA,MACH,OAAOuE,EAAAA,GACT,KAAKvE,EAAAA,EAAAA,QAAAA,MACH,OAAOwE,EAAAA,GACT,KAAKxE,EAAAA,EAAAA,QAAAA,MACH,OAAOyE,EAAAA,GACT,KAAKzE,EAAAA,EAAAA,gBAAAA,gBACH,OAAO0E,EACT,KAAK1E,EAAAA,EAAAA,gBAAAA,MACH,OAAO2E,EACT,KAAK3E,EAAAA,EAAAA,gBAAAA,WACH,OAAO4E,EACT,KAAK5E,EAAAA,EAAAA,QAAAA,UACH,OAAO6E,EACT,QACE,OAAOC,EAAAA","sources":["games/polemica-da-vez/StepTopicSelection.tsx","games/polemica-da-vez/PhaseTopicSelection.tsx","games/polemica-da-vez/api-requests.ts","../node_modules/@ant-design/icons-svg/es/asn/TwitterOutlined.js","../node_modules/@ant-design/icons/es/icons/TwitterOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/RiseOutlined.js","../node_modules/@ant-design/icons/es/icons/RiseOutlined.js","games/polemica-da-vez/Topic.tsx","games/polemica-da-vez/StepLiking.tsx","games/polemica-da-vez/PhaseReact.tsx","../node_modules/@ant-design/icons-svg/es/asn/FallOutlined.js","../node_modules/@ant-design/icons/es/icons/FallOutlined.js","games/polemica-da-vez/StepResolution.tsx","games/polemica-da-vez/PhaseResolution.tsx","games/polemica-da-vez/PhaseGameOver.tsx","games/polemica-da-vez/SessionPolemicaDaVez.tsx"],"sourcesContent":["import { useState } from 'react';\n//Design Resources\nimport { Button, Input } from 'antd';\n// Hooks\nimport { useLanguage } from '../../hooks';\n// Components\nimport { Instruction, Title, Translate } from '../../components';\n\ntype StepTopicSelectionProps = {\n  currentTopics: Topic[];\n  currentCustomTopic: Topic;\n  onSubmitTopic: GenericFunction;\n};\n\nexport function StepTopicSelection({\n  currentTopics,\n  currentCustomTopic,\n  onSubmitTopic,\n}: StepTopicSelectionProps) {\n  const { translate } = useLanguage();\n\n  const [customTopic, setCustomTopic] = useState('');\n\n  const onSubmitCustomTopic = () => {\n    if (customTopic) {\n      onSubmitTopic({ topicId: currentCustomTopic.id, customTopic });\n    }\n  };\n\n  return (\n    <div className=\"p-step\">\n      <Title>\n        <Translate pt=\"Selecione uma assunto\" en=\"Select one topic\" />\n      </Title>\n\n      <Instruction contained>\n        <Translate pt=\"Ou escreva um de acordo com o tema\" en=\"Or write one according to the given theme\" />\n      </Instruction>\n\n      <ul className=\"p-topics-card\">\n        {currentTopics.map((topic) => (\n          <li className=\"p-topics-card__item\" key={topic.id}>\n            <button onClick={() => onSubmitTopic({ topicId: topic.id })} className=\"p-topic p-topic--button\">\n              {topic.text}\n            </button>\n          </li>\n        ))}\n        <li className=\"p-topics-card__item p-topics-card__item--or\">\n          <Translate pt=\"ou\" en=\"or\" />\n        </li>\n        <li className=\"p-topics-card__item p-topics-card__item--custom\">\n          <div className=\"p-topic\">{currentCustomTopic.text}</div>\n          <Input\n            className=\"p-custom-topic__input\"\n            placeholder={translate('Escreva aqui', 'Write here')}\n            onChange={(e) => setCustomTopic(e.target.value)}\n            onPressEnter={onSubmitCustomTopic}\n          />\n          {Boolean(customTopic) && (\n            <Button type=\"primary\" onClick={onSubmitCustomTopic} className=\"p-custom-topic__button\">\n              <Translate pt=\"Enviar sugestão\" en=\"Send suggestion\" />\n            </Button>\n          )}\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import { useState } from 'react';\n// Hooks\nimport { useLanguage, useWhichPlayerIsThe } from '../../hooks';\nimport { useOnSubmitTopicAPIRequest } from './api-requests';\n// Resources & Utils\nimport { PHASES } from '../../utils/phases';\n// Components\nimport {\n  AvatarName,\n  Instruction,\n  PhaseAnnouncement,\n  PhaseContainer,\n  RoundAnnouncement,\n  Step,\n  StepSwitcher,\n  Translate,\n  ViewIf,\n  WaitingRoom,\n} from '../../components';\nimport { StepTopicSelection } from './StepTopicSelection';\n\nfunction PhaseTopicSelection({ state, players, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const [activePlayer, isUserTheActivePlayer] = useWhichPlayerIsThe('activePlayerId', state, players);\n  const [step, setStep] = useState(0);\n\n  const onSubmitTopic = useOnSubmitTopicAPIRequest(setStep);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.POLEMICA_DA_VEZ.TOPIC_SELECTION}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <RoundAnnouncement round={state.round} onPressButton={() => setStep(1)} time={4} circleColor=\"blue\">\n          <Instruction contained>\n            <Translate\n              pt=\"Cada rodada um novo assunto, a sua opinião e a opinião dos outros.\"\n              en=\"Every round a new topic, your opinion and everybody else's.\"\n            />\n          </Instruction>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <PhaseAnnouncement\n          type=\"trending\"\n          title={translate('Você sabe qual a polêmica da vez?', \"Do you know what's trending now?\")}\n          onClose={() => setStep(2)}\n          currentRound={state?.round?.current}\n          duration={state?.round?.current < 3 ? 30 : undefined}\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  Todos vão curtir ou descurtir a polêmica da vez e então devem tentar adivinhar quantas\n                  curtidas o assunto vai ganhar. Se você adivinhar corretamente, você ganha 1 ponto.\n                  <br />\n                  O primeiro jogador a receber 4 pontos ganha o jogo (ou no máximo 15 rodadas)\n                  <br />\n                  <Instruction contained>\n                    <AvatarName player={activePlayer} addressUser /> escolherá o assunto para essa rodada.\n                  </Instruction>\n                </>\n              }\n              en={\n                <>\n                  All players must like or dislike a topic then must vote how trendy it is (how many players\n                  liked the topic). If you guess correctly you get 1 point.\n                  <br />\n                  The first player to get 4 points wins the game (or a maximum of 15 rounds)\n                  <br />\n                  <Instruction contained>\n                    <AvatarName player={activePlayer} addressUser /> will choose the topic for this round.\n                  </Instruction>\n                </>\n              }\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 2 */}\n        <Step fullWidth>\n          <ViewIf isVisible={isUserTheActivePlayer}>\n            <StepTopicSelection\n              currentTopics={state.currentTopics}\n              currentCustomTopic={state.currentCustomTopic}\n              onSubmitTopic={onSubmitTopic}\n            />\n          </ViewIf>\n\n          <ViewIf isVisible={!isUserTheActivePlayer}>\n            <WaitingRoom\n              title={translate('Aguarde...', 'Please wait...')}\n              instruction={\n                <>\n                  <AvatarName player={activePlayer} addressUser />{' '}\n                  <Translate\n                    pt=\"está escolhendo a polêmica da rodada.\"\n                    en=\"is choosing the topic for the round.\"\n                  />\n                </>\n              }\n              players={players}\n            />\n          </ViewIf>\n        </Step>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseTopicSelection;\n","import { POLEMICA_DA_VEZ_API } from '../../adapters';\n\nimport { useAPICall, useLanguage } from '../../hooks';\n\nexport function useOnSubmitTopicAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: POLEMICA_DA_VEZ_API.submitAction,\n    actionName: 'submit-topic',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(2),\n    successMessage: translate('Assunto enviada com sucesso!', 'Topic send successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar seu assunto',\n      'Oops, the application failed to submit the topic'\n    ),\n  });\n\n  return (payload: SubmitTopicPayload) => {\n    request({\n      action: 'SUBMIT_TOPIC',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitReactionAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: POLEMICA_DA_VEZ_API.submitAction,\n    actionName: 'submit-reaction',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate('Reação enviada com sucesso!', 'Reaction send successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua reação',\n      'Oops, the application failed to submit your reaction'\n    ),\n  });\n\n  return (payload: SubmitReactionPayload) => {\n    request({\n      action: 'SUBMIT_REACTION',\n      ...payload,\n    });\n  };\n}\n","// This icon file is generated automatically.\nvar TwitterOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M928 254.3c-30.6 13.2-63.9 22.7-98.2 26.4a170.1 170.1 0 0075-94 336.64 336.64 0 01-108.2 41.2A170.1 170.1 0 00672 174c-94.5 0-170.5 76.6-170.5 170.6 0 13.2 1.6 26.4 4.2 39.1-141.5-7.4-267.7-75-351.6-178.5a169.32 169.32 0 00-23.2 86.1c0 59.2 30.1 111.4 76 142.1a172 172 0 01-77.1-21.7v2.1c0 82.9 58.6 151.6 136.7 167.4a180.6 180.6 0 01-44.9 5.8c-11.1 0-21.6-1.1-32.2-2.6C211 652 273.9 701.1 348.8 702.7c-58.6 45.9-132 72.9-211.7 72.9-14.3 0-27.5-.5-41.2-2.1C171.5 822 261.2 850 357.8 850 671.4 850 843 590.2 843 364.7c0-7.4 0-14.8-.5-22.2 33.2-24.3 62.3-54.4 85.5-88.2z\" } }] }, \"name\": \"twitter\", \"theme\": \"outlined\" };\nexport default TwitterOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport TwitterOutlinedSvg from \"@ant-design/icons-svg/es/asn/TwitterOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar TwitterOutlined = function TwitterOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: TwitterOutlinedSvg\n  }));\n};\n\nTwitterOutlined.displayName = 'TwitterOutlined';\nexport default /*#__PURE__*/React.forwardRef(TwitterOutlined);","// This icon file is generated automatically.\nvar RiseOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M917 211.1l-199.2 24c-6.6.8-9.4 8.9-4.7 13.6l59.3 59.3-226 226-101.8-101.7c-6.3-6.3-16.4-6.2-22.6 0L100.3 754.1a8.03 8.03 0 000 11.3l45 45.2c3.1 3.1 8.2 3.1 11.3 0L433.3 534 535 635.7c6.3 6.2 16.4 6.2 22.6 0L829 364.5l59.3 59.3a8.01 8.01 0 0013.6-4.7l24-199.2c.7-5.1-3.7-9.5-8.9-8.8z\" } }] }, \"name\": \"rise\", \"theme\": \"outlined\" };\nexport default RiseOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport RiseOutlinedSvg from \"@ant-design/icons-svg/es/asn/RiseOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar RiseOutlined = function RiseOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: RiseOutlinedSvg\n  }));\n};\n\nRiseOutlined.displayName = 'RiseOutlined';\nexport default /*#__PURE__*/React.forwardRef(RiseOutlined);","// Design Resources\nimport { Avatar } from 'antd';\nimport { RiseOutlined, TwitterOutlined } from '@ant-design/icons';\n// Components\nimport { Icons } from '../../components';\nimport clsx from 'clsx';\n\ntype TopicProps = {\n  topic: string;\n  likes?: number;\n  className?: string;\n};\n\nexport function Topic({ topic, likes, className = '' }: TopicProps) {\n  return (\n    <div className={clsx('p-trending-topic', className)}>\n      <TwitterOutlined /> {topic} <RiseOutlined />{' '}\n      {Boolean(likes) && (\n        <span className=\"p-trending-topic__likes\">\n          <Avatar\n            src={<Icons.SpeechBubbleThumbsUp />}\n            shape=\"square\"\n            size=\"large\"\n            className=\"p-trending-topic__icon-like\"\n          />{' '}\n          {likes}\n        </span>\n      )}\n    </div>\n  );\n}\n","import { useMemo, useState } from 'react';\nimport clsx from 'clsx';\n//Design Resources\nimport { Button, Divider } from 'antd';\n// Components\nimport { AvatarIcon, Instruction, ReadyPlayersBar, Step, Title, Translate } from '../../components';\nimport { Topic } from './Topic';\n\ntype StepLikingProps = {\n  currentTopic: Topic;\n  customTopic: string;\n  onSubmitReaction: GenericFunction;\n  players: GamePlayers;\n};\n\nexport function StepLiking({ currentTopic, customTopic, onSubmitReaction, players }: StepLikingProps) {\n  const [like, setLike] = useState<boolean | null>(null);\n\n  const onSubmitReactions = (likes: number) => {\n    onSubmitReaction({ reaction: like, likesGuess: likes });\n  };\n\n  const countOptions = useMemo(\n    () =>\n      Array(Object.keys(players).length + 1)\n        .fill(0)\n        .map((e, i) => e + i),\n    [players]\n  );\n\n  return (\n    <Step fullWidth className=\"p-step\">\n      <Title>\n        <Translate pt=\"O que você acha da polêmica da vez?\" en=\"What do you think of this trending topic?\" />\n      </Title>\n\n      <div className=\"p-reaction-buttons\">\n        <Topic topic={customTopic ?? currentTopic?.text} className=\"p-reaction-buttons__topic\" />\n        <Button\n          className={clsx('p-reaction-buttons__like', like === true && 'p-reaction-buttons__like--active')}\n          size=\"large\"\n          type=\"primary\"\n          onClick={() => setLike(true)}\n        >\n          <AvatarIcon type=\"speech-bubble-thumbs-up\" shape=\"square\" className=\"p-like-icon\" />\n          <Translate pt=\"Curtir\" en=\"Like\" />\n        </Button>\n        <Button\n          className={clsx(\n            'p-reaction-buttons__dislike',\n            like === false && 'p-reaction-buttons__dislike--active'\n          )}\n          size=\"large\"\n          type=\"primary\"\n          onClick={() => setLike(false)}\n        >\n          <AvatarIcon type=\"speech-bubble-thumbs-down\" shape=\"square\" className=\"p-like-icon\" />\n          <Translate pt=\"Não curto\" en=\"Dislike\" />\n        </Button>\n      </div>\n\n      {like !== null && (\n        <>\n          <Instruction contained>\n            <Translate\n              pt=\"Quantas curtidas esse assunto vai receber?\"\n              en=\"How many likes will this topic get?\"\n            />\n          </Instruction>\n\n          <ul className=\"p-votes\">\n            {countOptions.map((option) => {\n              const key = `quantity-${option}`;\n              return (\n                <li key={key}>\n                  <Button\n                    type=\"primary\"\n                    disabled={like === null}\n                    onClick={() => onSubmitReactions(option)}\n                    size=\"large\"\n                    shape=\"circle\"\n                  >\n                    {option}\n                  </Button>\n                </li>\n              );\n            })}\n          </ul>\n        </>\n      )}\n      <Divider />\n\n      <ReadyPlayersBar players={players} />\n    </Step>\n  );\n}\n","import { useState } from 'react';\n// Hooks\nimport { useLanguage } from '../../hooks';\nimport { useOnSubmitReactionAPIRequest } from './api-requests';\n// Resources & Utils\nimport { PHASES } from '../../utils/phases';\n// Components\nimport { Instruction, PhaseAnnouncement, PhaseContainer, StepSwitcher, Translate } from '../../components';\nimport { StepLiking } from './StepLiking';\n\nfunction PhaseReact({ state, players, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const [step, setStep] = useState(0);\n\n  const onSubmitReaction = useOnSubmitReactionAPIRequest(setStep);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.POLEMICA_DA_VEZ.REACT}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          type=\"feedback\"\n          title={translate('O que você acha?', 'What do you think?')}\n          onClose={() => setStep(1)}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  Um assunto polêmico está abalando as redes sociais!\n                  <br />\n                  Curta (ou não) e tente descobrir quantas curtidas ele vai receber.\n                </>\n              }\n              en={\n                <>\n                  A topic is trending in all social media!\n                  <br />\n                  Like (or not) and try to guess how many likes it will get!\n                </>\n              }\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepLiking\n          currentTopic={state.currentTopic}\n          customTopic={state.customTopic}\n          onSubmitReaction={onSubmitReaction}\n          players={players}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseReact;\n","// This icon file is generated automatically.\nvar FallOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M925.9 804l-24-199.2c-.8-6.6-8.9-9.4-13.6-4.7L829 659.5 557.7 388.3c-6.3-6.2-16.4-6.2-22.6 0L433.3 490 156.6 213.3a8.03 8.03 0 00-11.3 0l-45 45.2a8.03 8.03 0 000 11.3L422 591.7c6.2 6.3 16.4 6.3 22.6 0L546.4 490l226.1 226-59.3 59.3a8.01 8.01 0 004.7 13.6l199.2 24c5.1.7 9.5-3.7 8.8-8.9z\" } }] }, \"name\": \"fall\", \"theme\": \"outlined\" };\nexport default FallOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport FallOutlinedSvg from \"@ant-design/icons-svg/es/asn/FallOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar FallOutlined = function FallOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: FallOutlinedSvg\n  }));\n};\n\nFallOutlined.displayName = 'FallOutlined';\nexport default /*#__PURE__*/React.forwardRef(FallOutlined);","import clsx from 'clsx';\n// Design Resources\nimport { FallOutlined, RiseOutlined } from '@ant-design/icons';\n// Components\nimport { Avatar, AvatarIcon, ButtonContainer, Step, TimedButton, Title, Translate } from '../../components';\nimport { Topic } from './Topic';\n\ntype StepResolutionProps = {\n  players: GamePlayers;\n  totalLikes: number;\n  customTopic: string;\n  currentTopic: Topic;\n  setStep: GenericFunction;\n};\nexport function StepResolution({\n  players,\n  totalLikes,\n  customTopic,\n  currentTopic,\n  setStep,\n}: StepResolutionProps) {\n  return (\n    <Step className=\"p-step\">\n      <Title level={1}>\n        <Translate pt=\"Resultado\" en=\"Results\" />\n      </Title>\n\n      <Title level={2}>\n        <Topic topic={customTopic ?? currentTopic?.text} likes={totalLikes} />\n      </Title>\n\n      <ul className=\"p-players-reactions\">\n        {Object.values(players).map((player) => {\n          const key = `player-result-${player.id}`;\n          const isCorrect = player.likesGuess === totalLikes;\n          return (\n            <li className=\"p-player-reaction\" key={key}>\n              <div>\n                <div className=\"p-player-reaction__reaction\">\n                  {player.reaction ? (\n                    <AvatarIcon type=\"speech-bubble-thumbs-up\" shape=\"square\" className=\"p-like-icon\" />\n                  ) : (\n                    <AvatarIcon type=\"speech-bubble-thumbs-down\" shape=\"square\" className=\"p-like-icon\" />\n                  )}\n                </div>\n              </div>\n              <div className=\"p-player-reaction__player\">\n                <Avatar id={player.avatarId} />\n                <div className=\"p-player-reaction__name\">{player.name}</div>\n              </div>\n              <div>\n                <div className={clsx('p-player-reaction__likes', isCorrect && 'p-icon-correct')}>\n                  {isCorrect ? <RiseOutlined /> : <FallOutlined />} {player.likesGuess}\n                </div>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n\n      <ButtonContainer>\n        <TimedButton\n          duration={25}\n          showTimer\n          onExpire={() => setStep(2)}\n          onClick={() => setStep(2)}\n          label=\"Ranking\"\n        />\n      </ButtonContainer>\n    </Step>\n  );\n}\n","import { useState } from 'react';\n// Hooks\nimport { useLanguage } from '../../hooks';\n// Resources & Utils\nimport { PHASES } from '../../utils/phases';\n// Components\nimport {\n  Instruction,\n  PhaseAnnouncement,\n  PhaseContainer,\n  Step,\n  StepSwitcher,\n  Translate,\n  Title,\n  RankingBoard,\n  AdminNextRoundButton,\n  ButtonContainer,\n} from '../../components';\nimport { StepResolution } from './StepResolution';\nimport { Button } from 'antd';\n\nfunction PhaseReact({ state, players, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const [step, setStep] = useState(0);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.POLEMICA_DA_VEZ.RESOLUTION}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          type=\"review\"\n          title={translate('Resultado', 'Results')}\n          onClose={() => setStep(1)}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  E aí? Será que o assunto bombou?\n                  <br />\n                  Se você acertou a quantidade de curtidas, você ganha 1 ponto\n                </>\n              }\n              en={\n                <>\n                  So... did the topic trend?\n                  <br />\n                  If you guess the correct number of likes, you get 1 point\n                </>\n              }\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <Step fullWidth>\n          <StepResolution\n            players={players}\n            customTopic={state.customTopic}\n            currentTopic={state.currentTopic}\n            totalLikes={state.totalLikes}\n            setStep={setStep}\n          />\n        </Step>\n\n        <Step fullWidth>\n          <Title>Ranking</Title>\n          <RankingBoard ranking={state.ranking} players={players} />\n          <ButtonContainer>\n            <Button onClick={() => setStep(1)} ghost>\n              <Translate pt=\"Ver resultado novamente\" en=\"See results again\" />\n            </Button>\n          </ButtonContainer>\n          <AdminNextRoundButton round={state.round} />\n        </Step>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseReact;\n","// Components\nimport { GameOverWrapper } from '../../components';\n\nfunction PhaseGameOver({ state, info }: PhaseProps) {\n  return <GameOverWrapper announcementIcon=\"trophy\" info={info} state={state} />;\n}\n\nexport default PhaseGameOver;\n","// Constants\nimport { GAME_COLLECTION } from '../../utils/constants';\nimport { PHASES } from '../../utils/phases';\n// Components\nimport { Session, PhaseSetup, PhaseRules, PageError, PhaseLobby } from '../../components';\nimport PhaseTopicSelection from './PhaseTopicSelection';\nimport PhaseReact from './PhaseReact';\nimport PhaseResolution from './PhaseResolution';\nimport PhaseGameOver from './PhaseGameOver';\n\nfunction SessionPolemicaDaVez({ gameId }: SessionProps) {\n  function getActiveComponent(phase: string) {\n    switch (phase) {\n      case PHASES.DEFAULT.LOBBY:\n        return PhaseLobby;\n      case PHASES.DEFAULT.RULES:\n        return PhaseRules;\n      case PHASES.DEFAULT.SETUP:\n        return PhaseSetup;\n      case PHASES.POLEMICA_DA_VEZ.TOPIC_SELECTION:\n        return PhaseTopicSelection;\n      case PHASES.POLEMICA_DA_VEZ.REACT:\n        return PhaseReact;\n      case PHASES.POLEMICA_DA_VEZ.RESOLUTION:\n        return PhaseResolution;\n      case PHASES.DEFAULT.GAME_OVER:\n        return PhaseGameOver;\n      default:\n        return PageError;\n    }\n  }\n\n  return (\n    <Session\n      gameId={gameId}\n      gameCollection={GAME_COLLECTION.POLEMICA_DA_VEZ}\n      getActiveComponent={getActiveComponent}\n    />\n  );\n}\n\nexport default SessionPolemicaDaVez;\n"],"names":["StepTopicSelection","currentTopics","currentCustomTopic","onSubmitTopic","translate","useLanguage","useState","customTopic","setCustomTopic","onSubmitCustomTopic","topicId","id","className","pt","en","contained","map","topic","onClick","text","placeholder","onChange","e","target","value","onPressEnter","Boolean","type","state","players","info","useWhichPlayerIsThe","activePlayer","isUserTheActivePlayer","step","setStep","request","useAPICall","apiFunction","POLEMICA_DA_VEZ_API","actionName","onBeforeCall","onError","successMessage","errorMessage","payload","action","useOnSubmitTopicAPIRequest","phase","allowedPhase","PHASES","round","onPressButton","time","circleColor","title","onClose","currentRound","current","duration","undefined","player","addressUser","fullWidth","isVisible","instruction","TwitterOutlined","props","ref","React","AntdIcon","_objectSpread","icon","TwitterOutlinedSvg","displayName","RiseOutlined","RiseOutlinedSvg","Topic","likes","clsx","src","shape","size","StepLiking","currentTopic","onSubmitReaction","like","setLike","countOptions","useMemo","Array","Object","keys","length","fill","i","option","key","disabled","reaction","likesGuess","useOnSubmitReactionAPIRequest","FallOutlined","FallOutlinedSvg","StepResolution","totalLikes","level","values","isCorrect","avatarId","name","showTimer","onExpire","label","ranking","ghost","announcementIcon","gameId","gameCollection","GAME_COLLECTION","getActiveComponent","PhaseLobby","PhaseRules","PhaseSetup","PhaseTopicSelection","PhaseReact","PhaseResolution","PhaseGameOver","PageError"],"sourceRoot":""}