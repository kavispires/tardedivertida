{"version":3,"file":"static/js/page-showcase.3c97e88f.chunk.js","mappings":"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","sources":["components/general/GameTags.tsx","components/rules/CollapsibleRule.tsx","components/rules/PopoverRule.tsx","components/rules/RulesCarousel.tsx","components/rules/RulesList.tsx","components/rules/RulesModal.tsx","components/text/Instruction.tsx","components/text/RoundsLeftInstruction.tsx","components/text/TextHighlight.tsx","components/text/Title.tsx","hooks/useDimensions.ts","../node_modules/@ant-design/icons/es/icons/FilterFilled.js","pages/Showcase/helpers.ts","pages/Showcase/components/CustomFilterOptions.tsx","pages/Showcase/components/FilterOptions.tsx","pages/Showcase/components/FilterEntry.tsx","pages/Showcase/components/FilterDrawers.tsx","pages/Showcase/components/GameDetailsContent.tsx","pages/Showcase/Showcase.tsx","../node_modules/@ant-design/icons-svg/es/asn/FilterFilled.js"],"sourcesContent":["// Ant Design Resources\nimport { Space, SpaceProps, Tag } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { TAG_DICT } from 'utils/constants';\n\nconst sortTags = (tags: string[]) => {\n  const sortedTags: string[] = [];\n\n  tags.forEach((tag) => {\n    if (TAG_DICT?.[tag]?.index !== undefined) {\n      sortedTags[TAG_DICT[tag].index] = tag;\n    } else if (sortedTags.length < 18) {\n      sortedTags[18] = tag;\n    } else {\n      sortedTags.push(tag);\n    }\n  });\n\n  return sortedTags.filter((v) => Boolean(v));\n};\n\ntype GameTagsProps = {\n  tags: string[];\n  gameCode: GameCode;\n} & SpaceProps;\n\nexport function GameTags({ tags, gameCode, ...rest }: GameTagsProps) {\n  const { language } = useLanguage();\n  const sortedTags = sortTags(tags);\n\n  return (\n    <Space wrap {...rest}>\n      {sortedTags.map((tag) => (\n        <Tag key={`${gameCode}-${tag}`} color={TAG_DICT[tag]?.color}>\n          {TAG_DICT[tag]?.label[language]}\n        </Tag>\n      ))}\n    </Space>\n  );\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { Collapse } from 'antd';\n// Components\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\n\ntype CollapsibleRuleProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * The title of the panel (default: Rules/Regras)\n   */\n  title?: ReactNode;\n};\nexport function CollapsibleRule({ children, title }: CollapsibleRuleProps): JSX.Element {\n  return (\n    <Instruction contained>\n      <Collapse ghost>\n        <Collapse.Panel header={<Translate pt=\"Regras\" en=\"Rules\" custom={title} />} key=\"1\">\n          {children}\n        </Collapse.Panel>\n      </Collapse>\n    </Instruction>\n  );\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { ReadOutlined } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\nimport { FixedMenuButton } from 'components/buttons';\n\ntype PopoverRuleProps = {\n  /**\n   * The rules themselves\n   */\n  content: ReactNode;\n  /**\n   * A custom label other than rules/regras\n   */\n  label?: ReactNode;\n  /**\n   * If label should be displayed\n   */\n  showLabel?: boolean;\n};\n\nexport function PopoverRule({ content, label, showLabel = false }: PopoverRuleProps): JSX.Element {\n  return (\n    <FixedMenuButton\n      type=\"popover\"\n      position={0}\n      icon={<ReadOutlined />}\n      content={content}\n      label={label || <Translate pt=\" Regras\" en=\" Rules\" />}\n      showLabel={showLabel}\n      buttonProps={{\n        type: 'primary',\n      }}\n    />\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Typography, Image, Carousel, Button, Space } from 'antd';\nimport { CarouselRef } from 'antd/es/carousel';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Constants\nimport { PUBLIC_URL } from 'utils/constants';\nimport { DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\nimport { createRef } from 'react';\nimport { Translate } from 'components/language';\nimport { useKeyPressEvent } from 'react-use';\n\ntype RulesCarouselProps = {\n  info: GameInfo;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Optional custom class name\n   */\n  ruleClassName?: string;\n  /**\n   * Optional custom class name\n   */\n  actionsClassName?: string;\n};\n\nexport function RulesCarousel({\n  info,\n  className = '',\n  ruleClassName = '',\n  actionsClassName,\n}: RulesCarouselProps): JSX.Element {\n  const { language } = useLanguage();\n  const ref = createRef<CarouselRef>();\n\n  useKeyPressEvent('ArrowLeft', () => {\n    ref.current?.prev();\n  });\n\n  useKeyPressEvent('ArrowRight', () => {\n    ref.current?.next();\n  });\n\n  return (\n    <div>\n      <Carousel className={clsx('rules-carousel', className)} autoplay autoplaySpeed={15000} ref={ref}>\n        {info.rules[language].map((rule, index) => (\n          <div className={clsx('rules-carousel__rule', className)} key={rule}>\n            <span className=\"rules-carousel__rule-number\">{index + 1}</span>\n\n            <Image\n              className=\"rules-carousel__image\"\n              src={\n                index === 0\n                  ? `${PUBLIC_URL.BANNERS}${info.gameName}-${language}.jpg`\n                  : `${PUBLIC_URL.RULES}game-rule-${info.gameName}-${index}.jpg`\n              }\n              fallback={`${PUBLIC_URL.RULES}game-rule-not-found.jpg`}\n              alt={rule}\n            />\n            <Typography.Paragraph className={clsx('rules-carousel__rule-text', ruleClassName)}>\n              {rule}\n            </Typography.Paragraph>\n          </div>\n        ))}\n      </Carousel>\n      <Space className={clsx('space-container', actionsClassName)}>\n        <Button type=\"default\" ghost onClick={() => ref.current?.prev()} size=\"small\">\n          <DoubleLeftOutlined /> <Translate pt=\"Regra Anterior\" en=\"Previous Rule\" />\n        </Button>\n        <Button type=\"default\" ghost onClick={() => ref.current?.next()} size=\"small\">\n          <Translate pt=\"Próxima Regra\" en=\"Next Rule\" /> <DoubleRightOutlined />\n        </Button>\n      </Space>\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n\ntype RulesListProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n};\n\nexport function RulesList({ children, className = '' }: RulesListProps): JSX.Element {\n  return <ul className={clsx('rules-list', className)}>{children}</ul>;\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, ButtonProps, Modal } from 'antd';\nimport { ReadOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Translate } from 'components/language';\nimport { RulesCarousel } from 'components/rules';\n\ntype RulesModalProps = {\n  gameInfo: GameInfo;\n  buttonProps?: ButtonProps;\n};\n\nexport function RulesModal({ gameInfo, buttonProps }: RulesModalProps): JSX.Element {\n  const { language, translate } = useLanguage();\n  const [isVisible, setVisibility] = useState(false);\n\n  const onCloseModal = () => {\n    setVisibility(false);\n  };\n\n  return (\n    <>\n      <Button type=\"default\" onClick={() => setVisibility(true)} icon={<ReadOutlined />} {...buttonProps}>\n        <Translate pt=\"Regras\" en=\"Rules\" />\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`${translate('Regras', 'Rules')}: ${gameInfo.title[language]}`}\n          open={isVisible}\n          onCancel={onCloseModal}\n          className=\"rules-modal\"\n          footer={[\n            <Button key=\"close\" onClick={onCloseModal}>\n              <Translate pt=\"Fechar\" en=\"Close\" />\n            </Button>,\n          ]}\n        >\n          <div className=\"rules-modal-content\">\n            <RulesCarousel info={gameInfo} />\n          </div>\n        </Modal>\n      )}\n    </>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Sass\nimport './Instruction.scss';\n\ntype InstructionsProps = {\n  /**\n   * The content of the instruction\n   */\n  children: ReactNode;\n  /**\n   * Adds a semi transparent background (white or black opposite to the white property)\n   */\n  contained?: boolean;\n  /**\n   * Make text color white\n   */\n  white?: boolean;\n  /**\n   * Makes instruction width 100%\n   */\n  fullWidth?: boolean;\n  /**\n   * Custom class name\n   */\n  className?: string;\n};\n\n/**\n * Typography container for instructions\n */\nexport const Instruction = ({ children, white, className, contained, fullWidth }: InstructionsProps) => {\n  const baseClass = 'instruction';\n\n  return (\n    <Typography.Text\n      className={clsx(\n        baseClass,\n        contained && `${baseClass}--contained`,\n        white && `${baseClass}--white`,\n        fullWidth && `${baseClass}--full-width`,\n        className\n      )}\n      data-testid=\"instruction\"\n    >\n      {children}\n    </Typography.Text>\n  );\n};\n","// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { pluralize } from 'utils/helpers';\n\ntype RoundsLeftInstructionProps = {\n  /**\n   * The state round object with current and total values\n   */\n  round: GameRound;\n};\n\n/**\n * Displays instructional sentence based on the number of rounds left for the game to end\n */\nexport function RoundsLeftInstruction({ round }: RoundsLeftInstructionProps) {\n  const left = (round?.total ?? 0) - (round?.current ?? 0);\n\n  if (left === 0 || round.forceLastRound) {\n    return (\n      <Instruction contained>\n        <Translate pt=\"Essa foi a última rodada\" en=\"No more rounds left\" />\n      </Instruction>\n    );\n  }\n\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            {pluralize(left, 'Falta', 'Faltam')} <strong>{left}</strong>{' '}\n            {pluralize(left, 'rodada', 'rodadas')} para o jogo terminar...\n          </>\n        }\n        en={\n          <>\n            <strong>{left}</strong> {pluralize(left, 'round', 'rounds')} left for the game to end...\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n","import { ReactNode } from 'react';\n// Sass\nimport './TextHighlight.scss';\n\ntype TextHighlightProps = {\n  /**\n   * The text to be highlighted\n   */\n  children: ReactNode;\n};\n\nexport function TextHighlight({ children }: TextHighlightProps) {\n  return <span className=\"text-highlight\">{children}</span>;\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Sass\nimport './Title.scss';\n\ntype TitleProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Makes text white\n   */\n  white?: boolean;\n  /**\n   * Icon prefixing the title\n   */\n  icon?: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * The heading level (default: 2)\n   */\n  level?: 1 | 2 | 3 | 4 | 5;\n  /**\n   * The size of the title (default: medium)\n   */\n  size?: 'xx-small' | 'x-small' | 'small' | 'medium' | 'large';\n};\n\nexport const Title = ({ children, white, icon, className, level = 2, size = 'medium' }: TitleProps) => {\n  return (\n    <Typography.Title\n      level={level}\n      className={clsx('title', `title--${size}`, white && 'title--white', className)}\n    >\n      {Boolean(icon) && icon}\n      {children}\n    </Typography.Title>\n  );\n};\n","import { useGlobalState } from './useGlobalState';\n\n/**\n * Get width and height of given element or from the screen\n * @param [elementId]\n * @returns representing width and height of the element\n */\nexport function useDimensions(elementId?: string): [number, number] {\n  const [[sWidth, sHeight]] = useGlobalState('screenSize');\n\n  if (!elementId) {\n    return [sWidth, sHeight];\n  }\n\n  const element = document.getElementById(elementId);\n\n  if (!element) {\n    // console.warn(`Element of id #${elementId} is not present in the dom`);\n  }\n\n  return [element?.offsetWidth ?? 32, element?.offsetHeight ?? 32];\n}\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport FilterFilledSvg from \"@ant-design/icons-svg/es/asn/FilterFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar FilterFilled = function FilterFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: FilterFilledSvg\n  }));\n};\n\nFilterFilled.displayName = 'FilterFilled';\nexport default /*#__PURE__*/React.forwardRef(FilterFilled);","export const filterGames = (\n  list: GameInfo[],\n  filters: PlainObject,\n  language: Language,\n  setLanguage: GenericFunction\n) => {\n  return list.filter((game) => {\n    let result: boolean[] = [];\n    // Availability\n    if (doesExist(filters.availability)) {\n      const res = game.available[language] && !game.version.endsWith('alpha');\n      result.push(filters.availability === 'on' ? res : !res);\n    }\n\n    // Mobile Friendly\n    evaluateTag(filters, game, 'mobile-friendly', result);\n\n    // Drawing\n    evaluateTag(filters, game, 'drawing', result);\n\n    // Writing\n    evaluateTag(filters, game, 'writing', result);\n\n    // Images\n    evaluateTag(filters, game, 'images', result);\n\n    // Voting\n    evaluateTag(filters, game, 'voting', result);\n\n    // Guessing\n    evaluateTag(filters, game, 'guessing', result);\n\n    // Time\n    evaluateTag(filters, game, 'timed', result);\n\n    // Pairing\n    evaluateTag(filters, game, 'pairing', result);\n\n    // Traitor\n    evaluateTag(filters, game, 'traitor', result);\n\n    // Discussion\n    evaluateTag(filters, game, 'discussion', result);\n\n    // Push Your Luck\n    evaluateTag(filters, game, 'push-your-luck', result);\n\n    // Type\n    evaluateCustomTag(filters, game, 'type', result);\n\n    // Rounds\n    evaluateCustomTag(filters, game, 'rounds', result);\n\n    return result.every((r) => r);\n  });\n};\n\n/**\n * Verify if a filter has an boolean value\n * @param property\n * @returns\n */\nexport const doesExist = (property: any) => property !== undefined && property !== 'any';\n\n/**\n * Verify if a tag is selected updating the result array\n * @param filters\n * @param game\n * @param tagName\n * @param result\n */\nexport const evaluateTag = (filters: PlainObject, game: GameInfo, tagName: string, result: boolean[]) => {\n  if (doesExist(filters[tagName])) {\n    const res = game.tags.includes(tagName);\n    result.push(filters[tagName] === 'on' ? res : !res);\n  }\n};\n\n/**\n * Verify is a custom tag (which values is not on or off) is selected updating the result array\n */\nexport const evaluateCustomTag = (\n  filters: PlainObject,\n  game: GameInfo,\n  tagName: string,\n  result: boolean[]\n) => {\n  if (doesExist(filters[tagName])) {\n    const res = game.tags.includes(filters[tagName]);\n    result.push(res);\n  }\n};\n","// Ant Design Resources\nimport { Radio } from 'antd';\n// Components\nimport { Translate } from 'components/language';\n\ntype CustomFilterOptionsProps = {\n  name: string;\n  value?: string | 'any';\n  onChange: GenericFunction;\n  firstOption: {\n    value: string;\n    text: DualLanguageValue;\n  };\n  secondOption: {\n    value: string;\n    text: DualLanguageValue;\n  };\n};\n\nexport function CustomFilterOptions({\n  name,\n  value = 'any',\n  firstOption,\n  secondOption,\n  onChange,\n}: CustomFilterOptionsProps) {\n  const options = [\n    { label: <Translate pt=\"Tanto faz\" en=\"Whatever\" />, value: 'any' },\n    { label: <Translate pt={firstOption.text.pt} en={firstOption.text.en} />, value: firstOption.value },\n    { label: <Translate pt={secondOption.text.pt} en={secondOption.text.en} />, value: secondOption.value },\n  ];\n\n  return (\n    <Radio.Group\n      onChange={onChange}\n      value={value}\n      className=\"showcase-filter-options\"\n      size=\"small\"\n      name={name}\n      optionType=\"button\"\n      buttonStyle={value !== 'any' ? 'solid' : 'outline'}\n      options={options}\n    />\n  );\n}\n","// Ant Design Resources\nimport { Radio } from 'antd';\n\n// Components\nimport { Translate } from 'components/language';\n\ntype FilterOptionsProps = {\n  name: string;\n  value?: 'on' | 'off' | 'any';\n  onChange: GenericFunction;\n};\n\nconst options = [\n  { label: <Translate pt=\"Tanto faz\" en=\"Whatever\" />, value: 'any' },\n  { label: <Translate pt=\"Sim\" en=\"Yes\" />, value: 'on' },\n  { label: <Translate pt=\"Não\" en=\"No\" />, value: 'off' },\n];\n\nexport function FilterOptions({ name, onChange, value = 'any' }: FilterOptionsProps) {\n  return (\n    <Radio.Group\n      onChange={onChange}\n      value={value}\n      className=\"showcase-filter-options\"\n      size=\"small\"\n      name={name}\n      optionType=\"button\"\n      buttonStyle={value !== 'any' ? 'solid' : 'outline'}\n      options={options}\n    />\n  );\n}\n","import { InfoCircleOutlined } from '@ant-design/icons';\nimport { Button, Tooltip } from 'antd';\nimport { ReactNode } from 'react';\n\ntype FilterEntryProps = {\n  label: ReactNode;\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  tooltip?: ReactNode;\n};\n\nexport function FilterEntry({ label, tooltip, children }: FilterEntryProps) {\n  return (\n    <div className=\"showcase-filter-entry\">\n      <label className=\"showcase-filter-entry__label\">\n        {label}\n        {Boolean(tooltip) && (\n          <Tooltip title={tooltip}>\n            <Button type=\"text\" shape=\"circle\" icon={<InfoCircleOutlined />} size=\"small\" />\n          </Tooltip>\n        )}\n      </label>\n      <div className=\"showcase-filter-entry__content\">{children}</div>\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Button, Divider, Drawer, Space } from 'antd';\n// Hooks\nimport { useDimensions } from 'hooks/useDimensions';\n// Components\nimport { LanguageSwitch, Translate } from 'components/language';\nimport { CustomFilterOptions } from './CustomFilterOptions';\nimport { FilterOptions } from './FilterOptions';\nimport { FilterEntry } from './FilterEntry';\n\ntype FiltersDrawerProps = {\n  list: GameInfo[];\n  filters: PlainObject;\n  setFilters: GenericFunction;\n  showFilters: boolean;\n  setShowFilters: GenericFunction;\n};\n\nexport function FiltersDrawer({\n  list,\n  filters,\n  setFilters,\n  showFilters,\n  setShowFilters,\n}: FiltersDrawerProps) {\n  const [width] = useDimensions('app');\n\n  const updateFilters = (e: any) => {\n    setFilters((s: PlainObject) => ({\n      ...s,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  return (\n    <Drawer\n      open={showFilters}\n      title={<Translate pt={<>Filtros ({list.length} jogos)</>} en={<>Filters ({list.length} games)</>} />}\n      placement=\"left\"\n      onClose={() => setShowFilters(false)}\n      width={Math.min(width / 1.1, 600)}\n      footer={\n        <Space className=\"space-container\" align=\"center\">\n          <Button onClick={() => setFilters({})}>\n            <Translate pt=\"Limpar filtros\" en=\"Clear filters\" />\n          </Button>\n          <Button type=\"primary\" onClick={() => setShowFilters(false)}>\n            OK\n          </Button>\n        </Space>\n      }\n    >\n      <FilterEntry\n        label={<Translate pt=\"Idioma\" en=\"Language\" />}\n        tooltip={\n          <Translate\n            pt=\"Mudar língua do aplicativo, as cartas do jogo continuarão em sua língua original\"\n            en=\"Change app language, the game cards will remain in its original language\"\n          />\n        }\n      >\n        <LanguageSwitch />\n      </FilterEntry>\n\n      <Divider />\n\n      <FilterEntry\n        label={<Translate pt=\"Disponibilidade\" en=\"Availability\" />}\n        tooltip={<Translate pt=\"Somente jogos prontos a serem jogados\" en=\"Only games ready to be played\" />}\n      >\n        <FilterOptions name=\"availability\" value={filters?.availability} onChange={updateFilters} />\n      </FilterEntry>\n\n      <FilterEntry\n        label={<Translate pt=\"Aparelho Móvel\" en=\"Mobile Friendly\" />}\n        tooltip={\n          <Translate\n            pt=\"Dá pra jogar no iPad/Tablet e talvez no celular\"\n            en=\"You may play on your tablet and possibly on a phone\"\n          />\n        }\n      >\n        <FilterOptions name=\"mobile-friendly\" value={filters?.['mobile-friendly']} onChange={updateFilters} />\n      </FilterEntry>\n\n      <Divider />\n\n      <div className=\"showcase-filter-section\">\n        <label className=\"showcase-filter-entry__label\">\n          <Translate pt=\"Dinâmicas\" en=\"Dynamics\" />{' '}\n        </label>\n      </div>\n\n      <FilterEntry label={<Translate pt=\"Tipo\" en=\"Type\" />}>\n        <CustomFilterOptions\n          name=\"type\"\n          onChange={updateFilters}\n          value={filters.type}\n          firstOption={{\n            value: 'competitive',\n            text: {\n              en: 'Competitive',\n              pt: 'Competitivo',\n            },\n          }}\n          secondOption={{\n            value: 'cooperative',\n            text: {\n              en: 'Cooperative',\n              pt: 'Cooperativo',\n            },\n          }}\n        />\n      </FilterEntry>\n\n      <FilterEntry label={<Translate pt=\"Rodadas\" en=\"Rounds\" />}>\n        <CustomFilterOptions\n          name=\"rounds\"\n          onChange={updateFilters}\n          value={filters.rounds}\n          firstOption={{\n            value: 'turn-based',\n            text: {\n              en: 'Turn Based',\n              pt: 'Cada vez um',\n            },\n          }}\n          secondOption={{\n            value: 'same-time',\n            text: {\n              en: 'At the same time',\n              pt: 'Todos juntos',\n            },\n          }}\n        />\n      </FilterEntry>\n\n      <Divider />\n\n      <div className=\"showcase-filter-section\">\n        <label className=\"showcase-filter-entry__label\">\n          <Translate pt=\"Mecânicas\" en=\"Mechanics\" />{' '}\n        </label>\n      </div>\n\n      <FilterEntry label={<Translate pt=\"De desenhar\" en=\"Drawing\" />}>\n        <FilterOptions name=\"drawing\" value={filters?.drawing} onChange={updateFilters} />\n      </FilterEntry>\n\n      <FilterEntry label={<Translate pt=\"De escrever\" en=\"Writing\" />}>\n        <FilterOptions name=\"writing\" value={filters?.writing} onChange={updateFilters} />\n      </FilterEntry>\n\n      <FilterEntry label={<Translate pt=\"Com cartas imagens\" en=\"With images\" />}>\n        <FilterOptions name=\"images\" value={filters?.images} onChange={updateFilters} />\n      </FilterEntry>\n\n      <FilterEntry label={<Translate pt=\"De adivinhar\" en=\"With guessing\" />}>\n        <FilterOptions name=\"guessing\" value={filters?.guessing} onChange={updateFilters} />\n      </FilterEntry>\n\n      <FilterEntry label={<Translate pt=\"Com votação\" en=\"With voting\" />}>\n        <FilterOptions name=\"voting\" value={filters?.voting} onChange={updateFilters} />\n      </FilterEntry>\n\n      <FilterEntry label={<Translate pt=\"Com tempo\" en=\"Timed\" />}>\n        <FilterOptions name=\"timed\" value={filters?.timed} onChange={updateFilters} />\n      </FilterEntry>\n\n      <FilterEntry label={<Translate pt=\"Fazer Pares\" en=\"Matching\" />}>\n        <FilterOptions name=\"pairing\" value={filters?.pairing} onChange={updateFilters} />\n      </FilterEntry>\n\n      <FilterEntry label={<Translate pt=\"Com inimigo\" en=\"With a traitor\" />}>\n        <FilterOptions name=\"traitor\" value={filters?.traitor} onChange={updateFilters} />\n      </FilterEntry>\n\n      <FilterEntry label={<Translate pt=\"De discussão\" en=\"With discussion\" />}>\n        <FilterOptions name=\"discussion\" value={filters?.discussion} onChange={updateFilters} />\n      </FilterEntry>\n\n      <FilterEntry label={<Translate pt=\"De tentar a sorte\" en=\"Push your luck\" />}>\n        <FilterOptions name=\"push-your-luck\" value={filters?.discussion} onChange={updateFilters} />\n      </FilterEntry>\n    </Drawer>\n  );\n}\n","// Ant Design Resources\nimport { Card, Image, Space } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { PUBLIC_URL } from 'utils/constants';\nimport { truncateRecommended } from 'utils/helpers';\n// Components\nimport { RulesModal } from 'components/rules';\nimport { GameTags } from 'components/general/GameTags';\n\nexport function GameDetailsContent({ game }: { game: GameInfo }) {\n  const { language, translate } = useLanguage();\n  return (\n    <>\n      <Image\n        alt={game.title[language]}\n        src={`${PUBLIC_URL.EXAMPLES}game-example-${game.gameName}.png`}\n        fallback={`${PUBLIC_URL.BANNERS}/em-breve-${language}.jpg`}\n      />\n      <Card.Meta style={{ margin: '8px 0' }} description={game.summary[language]} />\n\n      <Card.Meta\n        description={translate(\n          `Para ${game.playerCount.min}-${game.playerCount.max} jogadores`,\n          `For ${game.playerCount.min}-${game.playerCount.max} players`\n        )}\n      />\n\n      <Card.Meta\n        className=\"game-card__player-count\"\n        description={translate(\n          `Melhor com ${game.playerCount.best || '?'} jogadores`,\n          `Best wih ${game.playerCount.best || '?'} players`\n        )}\n      />\n\n      <Card.Meta\n        className=\"game-card__player-count game-card__margin-bottom\"\n        description={translate(\n          `Recomendado jogar com ${truncateRecommended(game.playerCount.recommended)}`,\n          `Recommended with ${truncateRecommended(game.playerCount.recommended)}`\n        )}\n      />\n\n      <GameTags\n        wrap\n        size={[1, 6]}\n        prefixCls={game.gameName}\n        style={{ display: 'flex', marginTop: '12px' }}\n        gameCode={game.gameCode}\n        tags={game.tags}\n      />\n\n      <Space style={{ marginTop: '12px' }}>\n        {Boolean(game.rules?.[language]?.length > 1) && <RulesModal gameInfo={game} />}\n      </Space>\n    </>\n  );\n}\n","import clsx from 'clsx';\nimport { orderBy } from 'lodash';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffectOnce, useTitle } from 'react-use';\n// Ant Design Resources\nimport { Avatar, Image, Layout, Modal, Space } from 'antd';\nimport { FilterFilled } from '@ant-design/icons';\n// Hooks\nimport { useDimensions } from 'hooks/useDimensions';\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport GAMES from 'utils/info';\nimport { PUBLIC_URL } from 'utils/constants';\nimport { getAnimationClass } from 'utils/helpers';\nimport { filterGames } from './helpers';\n// Components\nimport { FiltersDrawer } from './components/FilterDrawers';\nimport { GameDetailsContent } from './components/GameDetailsContent';\nimport { TransparentButton } from 'components/buttons';\nimport { Translate } from 'components/language';\n\nconst GAME_LIST: GameInfo[] = Object.values(GAMES);\n\nfunction Showcase() {\n  useTitle('Showcase | Tarde Divertida');\n  const { language } = useLanguage();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [width] = useDimensions('app');\n  const [, setLanguage] = useGlobalState('language');\n\n  const [showFilters, setShowFilters] = useState(false);\n  const [showModal, setShowModal] = useState('');\n  const [filters, setFilters] = useState<PlainObject>({ availability: 'on' });\n\n  const [list, setList] = useState<GameInfo[]>([]);\n\n  // Load query params\n  useEffectOnce(() => {\n    const searchAsObject = Object.fromEntries(new URLSearchParams(searchParams));\n    if (Object.keys(searchAsObject).length > 0) {\n      const parsedQP = Object.entries(searchAsObject).reduce((acc: StringDictionary, [key, value]) => {\n        if (value === 'off' || value === 'on') {\n          acc[key] = value;\n        }\n        if (key === 'language' && value === 'en') {\n          setLanguage('en');\n        }\n        if (value !== 'any') {\n          acc[key] = value;\n        }\n\n        return acc;\n      }, {});\n\n      setFilters(parsedQP);\n    }\n  });\n\n  useEffect(() => {\n    setList(filterGames(GAME_LIST, filters, language, setLanguage));\n    const queryString = Object.keys(filters)\n      .filter((key) => filters[key] !== 'any')\n      .map((key) => `${key}=${filters[key]}`);\n\n    if (language !== 'pt') {\n      queryString.push(`language=${language}`);\n    }\n    setSearchParams(queryString.join('&'));\n  }, [filters, language, setSearchParams, setLanguage]);\n\n  return (\n    <Layout.Content className=\"showcase\">\n      <ul className=\"showcase-list\" style={{ gridTemplateColumns: `repeat(${width > 450 ? 4 : 2}, 1fr)` }}>\n        <li className={clsx('showcase-entry showcase-entry--title', getAnimationClass('zoomIn'))}>\n          <TransparentButton\n            onClick={() => setShowFilters(true)}\n            className=\"showcase-image-button\"\n            hoverType=\"sepia\"\n          >\n            <h1 className=\"showcase-title\">\n              <Translate pt=\"Vitrine\" en=\"Showcase\" />\n            </h1>\n            <Space className=\"space-container showcase-menu\" align=\"center\">\n              <Avatar icon={<FilterFilled />} shape=\"circle\" size=\"small\" />\n            </Space>\n          </TransparentButton>\n        </li>\n\n        {orderBy(list, `title.${language}`).map((game, index) => {\n          return (\n            <li\n              key={game.gameCode}\n              className={clsx('showcase-entry', getAnimationClass('zoomIn', index + 0.3))}\n            >\n              <TransparentButton\n                onClick={() => setShowModal(game.gameName)}\n                className=\"showcase-image-button\"\n                hoverType=\"sepia\"\n              >\n                <Image\n                  alt={game.title[language]}\n                  src={`${PUBLIC_URL.BANNERS}${game.gameName}-${language}.jpg`}\n                  fallback={`${PUBLIC_URL.BANNERS}/em-breve-${language}.jpg`}\n                  className=\"showcase-image\"\n                  preview={false}\n                />\n                <span className=\"showcase-popular-name\">{game.popularName[language]}</span>\n              </TransparentButton>\n            </li>\n          );\n        })}\n      </ul>\n\n      <FiltersDrawer\n        list={list}\n        filters={filters}\n        setFilters={setFilters}\n        showFilters={showFilters}\n        setShowFilters={setShowFilters}\n      />\n\n      {Boolean(GAMES?.[showModal]) && (\n        <Modal\n          open={Boolean(showModal)}\n          onOk={() => setShowModal('')}\n          onCancel={() => setShowModal('')}\n          title={GAMES[showModal].title[language]}\n          centered\n        >\n          <GameDetailsContent game={GAMES[showModal]} />\n        </Modal>\n      )}\n    </Layout.Content>\n  );\n}\n\nexport default Showcase;\n","// This icon file is generated automatically.\nvar FilterFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M349 838c0 17.7 14.2 32 31.8 32h262.4c17.6 0 31.8-14.3 31.8-32V642H349v196zm531.1-684H143.9c-24.5 0-39.8 26.7-27.5 48l221.3 376h348.8l221.3-376c12.1-21.3-3.2-48-27.7-48z\" } }] }, \"name\": \"filter\", \"theme\": \"filled\" };\nexport default FilterFilled;\n"],"names":["GameTags","tags","gameCode","rest","language","useLanguage","sortedTags","forEach","tag","undefined","TAG_DICT","index","length","push","filter","v","Boolean","sortTags","wrap","map","color","label","CollapsibleRule","children","title","contained","ghost","header","pt","en","custom","PopoverRule","content","showLabel","type","position","icon","ReadOutlined","buttonProps","RulesCarousel","info","className","ruleClassName","actionsClassName","ref","createRef","useKeyPressEvent","current","prev","next","clsx","autoplay","autoplaySpeed","rules","rule","src","PUBLIC_URL","gameName","fallback","alt","onClick","size","DoubleLeftOutlined","DoubleRightOutlined","RulesList","RulesModal","gameInfo","translate","useState","isVisible","setVisibility","onCloseModal","open","onCancel","footer","Instruction","white","fullWidth","baseClass","RoundsLeftInstruction","round","left","total","forceLastRound","pluralize","TextHighlight","Title","level","useDimensions","elementId","useGlobalState","sWidth","sHeight","element","document","getElementById","offsetWidth","offsetHeight","FilterFilled","props","React","AntdIcon","_objectSpread","FilterFilledSvg","displayName","doesExist","property","evaluateTag","filters","game","tagName","result","res","includes","evaluateCustomTag","CustomFilterOptions","name","value","firstOption","secondOption","onChange","options","text","optionType","buttonStyle","FilterOptions","FilterEntry","tooltip","shape","InfoCircleOutlined","FiltersDrawer","list","setFilters","showFilters","setShowFilters","width","updateFilters","e","s","target","placement","onClose","Math","min","align","availability","rounds","drawing","writing","images","guessing","voting","timed","pairing","traitor","discussion","GameDetailsContent","style","margin","description","summary","playerCount","max","best","truncateRecommended","recommended","prefixCls","display","marginTop","GAME_LIST","Object","values","GAMES","useTitle","useSearchParams","searchParams","setSearchParams","setLanguage","showModal","setShowModal","setList","useEffectOnce","searchAsObject","fromEntries","URLSearchParams","keys","parsedQP","entries","reduce","acc","key","useEffect","available","version","endsWith","every","r","filterGames","queryString","join","gridTemplateColumns","getAnimationClass","hoverType","orderBy","preview","popularName","onOk","centered"],"sourceRoot":""}