{"version":3,"file":"static/js/page-hub.b716effa.chunk.js","mappings":"+RAWO,SAASA,EAAT,GAAkF,IAAvDC,EAAsD,EAAtDA,SAAUC,EAA4C,EAA5CA,MAClCC,GAAcC,EAAAA,EAAAA,MAAdD,UAER,OACE,SAAC,KAAD,CAAaE,WAAS,EAAtB,UACE,SAAC,IAAD,CAAUC,OAAK,EAAf,UACE,SAAC,UAAD,CAAgBC,OAAQJ,EAAU,SAAU,QAASD,GAArD,SACGD,GAD8D,S,gECJlE,SAASO,EAAT,GAA2F,IAApEC,EAAmE,EAAnEA,QAASC,EAA0D,EAA1DA,MAA0D,IAAnDC,UAAAA,OAAmD,SAC/F,GAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAiBC,EAAjB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRD,EAAUH,KACT,KAGD,gBAAKK,UAAU,eAAf,UACE,SAAC,IAAD,CAASC,UAAU,aAAaR,QAASA,EAASS,QAAQ,QAA1D,UACE,UAAC,IAAD,CACEC,MAAO,QACPC,KAAK,QACLC,YAAa,kBAAMP,GAAU,IAC7BQ,aAAc,kBAAMR,EAAS,OAACH,QAAD,IAACA,GAAAA,IAJhC,WAME,SAACY,EAAA,EAAD,IACCV,GAAYW,QAAQd,GAASA,GAAQ,SAAC,IAAD,CAAWe,GAAG,UAAUC,GAAG,kB,mFCfpE,SAASC,EAAT,GAAmG,IAA1EC,EAAyE,EAAzEA,KAAyE,IAAnEZ,UAAAA,OAAmE,MAAvD,GAAuD,MAAnDa,UAAAA,OAAmD,MAAvC,GAAuC,EAC/FC,GAAa1B,EAAAA,EAAAA,MAAb0B,SACFC,EAAW,CACfC,WACE,SAAC,IAAD,WACE,SAACC,EAAA,EAAD,CAAoBjB,UAAU,oDAGlCkB,WACE,SAAC,IAAD,WACE,SAACC,EAAA,EAAD,CAAqBnB,UAAU,sDAKrC,OACE,SAAC,KAAD,gBACEA,WAAWoB,EAAAA,EAAAA,GAAK,iBAAkBpB,GAClCqB,UAAQ,EACRC,cAAe,KACfC,QAAM,GACFR,GALN,aAOGH,EAAKY,MAAMV,GAAUW,KAAI,SAACC,EAAMC,GAAP,OACxB,iBAAK3B,WAAWoB,EAAAA,EAAAA,GAAK,uBAAwBP,GAA7C,WACE,iBAAMb,UAAU,8BAAhB,SAA+C2B,EAAQ,KAEvD,SAAC,IAAD,CACE3B,UAAU,wBACV4B,IACY,IAAVD,EAAA,UACOE,EAAAA,GAAAA,QADP,sBACuCjB,EAAKkB,SAD5C,YACwDhB,EADxD,kBAEOe,EAAAA,GAAAA,MAFP,qBAEoCjB,EAAKkB,SAFzC,YAEqDH,EAFrD,QAIFI,SAAQ,UAAKF,EAAAA,GAAAA,MAAL,2BACRG,IAAKN,KAEP,SAAC,cAAD,CAAsB1B,UAAU,4BAAhC,SAA6D0B,MAbDA,SChC/D,SAASO,EAAT,GAA+E,IAA1DhD,EAAyD,EAAzDA,SAAyD,IAA/Ce,UAAAA,OAA+C,MAAnC,GAAmC,EACnF,OAAO,eAAIA,WAAWoB,EAAAA,EAAAA,GAAK,aAAcpB,GAAlC,SAA+Cf,I,cCMjD,SAASiD,EAAT,GAAiE,IAA3CC,EAA0C,EAA1CA,SAC3B,GAAgC/C,EAAAA,EAAAA,MAAxB0B,EAAR,EAAQA,SAAU3B,EAAlB,EAAkBA,UAClB,GAAmCS,EAAAA,EAAAA,WAAS,GAA5C,eAAOwC,EAAP,KAAkBC,EAAlB,KAEMC,EAAe,WACnBD,GAAc,IAGhB,OACE,iCACE,SAAC,IAAD,CAAQE,KAAK,UAAUC,QAAS,kBAAMH,GAAc,IAAOI,MAAM,SAAClC,EAAA,EAAD,IAAjE,UACE,SAAC,IAAD,CAAWE,GAAG,SAASC,GAAG,YAE3B0B,IACC,SAAC,IAAD,CACElD,MAAK,UAAKC,EAAU,SAAU,SAAzB,aAAsCgD,EAASjD,MAAM4B,IAC1D4B,QAASN,EACTO,SAAUL,EACVtC,UAAU,cACV4C,OAAQ,EACN,SAAC,IAAD,CAAoBJ,QAASF,EAA7B,UACE,SAAC,IAAD,CAAW7B,GAAG,SAASC,GAAG,WADhB,UANhB,UAWE,SAACC,EAAD,CAAeC,KAAMuB,W,+JCvBlBU,EAAc,SAAC,GAA6E,IAA3E5D,EAA0E,EAA1EA,SAAU6D,EAAgE,EAAhEA,MAAO9C,EAAyD,EAAzDA,UAAWX,EAA8C,EAA9CA,UAAW0D,EAAmC,EAAnCA,UAC7DC,EAAY,cAElB,OACE,SAAC,SAAD,CACEhD,WAAWoB,EAAAA,EAAAA,GACT4B,EACA3D,GAAS,UAAO2D,EAAP,eACTF,GAAK,UAAOE,EAAP,WACLD,GAAS,UAAOC,EAAP,gBACThD,GAEF,cAAY,cARd,SAUGf,K,UCtBA,SAASgE,EAAT,GAAuE,IAAD,QAArCC,EAAqC,EAArCA,MACtC,OACE,SAACL,EAAD,CAAaxD,WAAS,EAAtB,UACE,SAAC,IAAD,CACEoB,IACE,2CACS,6BAAS,iBAACyC,QAAD,IAACA,OAAD,EAACA,EAAOC,aAAR,QAAiB,IAAjB,iBAAuBD,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAOE,eAA9B,QAAyC,KAD3D,sCAKF1C,IACE,iCACE,6BAAS,iBAACwC,QAAD,IAACA,OAAD,EAACA,EAAOC,aAAR,QAAiB,IAAjB,iBAAuBD,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAOE,eAA9B,QAAyC,KADpD,6CCfH,SAASC,EAAT,GAA0D,IAAjCpE,EAAgC,EAAhCA,SAC9B,OAAO,iBAAMe,UAAU,iBAAhB,SAAkCf,ICQpC,IAAMqE,EAAQ,SAAC,GAAiF,IAA/ErE,EAA8E,EAA9EA,SAAU6D,EAAoE,EAApEA,MAAOL,EAA6D,EAA7DA,KAAMzC,EAAuD,EAAvDA,UAAuD,IAA5CuD,MAAAA,OAA4C,MAApC,EAAoC,MAAjCnD,KAAAA,OAAiC,MAA1B,QAA0B,EACpG,OACE,UAAC,UAAD,CACEmD,MAAOA,EACPvD,WAAWoB,EAAAA,EAAAA,GAAK,QAAD,iBAAoBhB,GAAQ0C,GAAS,eAAgB9C,GAFtE,UAIGQ,QAAQiC,IAASA,EACjBxD,O,4RCRA,SAASuE,IACd,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,KAAnBC,GAAP,eACA,GAAsBhE,EAAAA,EAAAA,UAAmB,IAAzC,eAAOiE,EAAP,KAAYC,EAAZ,KAEMC,EAAa,WAAO,IAAD,EACvBD,EAAOE,OAAOC,KAAP,UAAYL,EAAgBM,EAAAA,WAA5B,QAAgD,IAAIC,SAW7D,OAJApE,EAAAA,EAAAA,YAAU,WACRgE,MACC,KAGD,UAAC,IAAD,YACE,6BACE,SAAC,IAAD,CAAWtD,GAAG,2CAAwCC,GAAG,oCAD3D,OAGCmD,EAAIpC,KAAI,SAAC2C,GAAD,OACP,SAAC,IAAD,CAAiC9E,OAAK,EAACkD,QAAS,kBAdzC,SAAC4B,GACZX,EAASW,GAaiDC,CAAKD,IAA3D,SACGA,GADH,iBAAuBA,QAIzB,SAAC,IAAD,CAASlF,OAAO,SAAC,IAAD,CAAWuB,GAAG,kBAAkBC,GAAG,iBAAnD,UACE,SAAC,IAAD,CAAQP,MAAM,SAASsC,MAAM,SAAC6B,EAAA,EAAD,IAAkB9B,QAASuB,EAAYzE,OAAK,S,+ICxB3EiF,EAAwB,SAACC,EAA4BC,GACzD,IAAMC,EAAMC,KAAKD,MACXE,EAAcF,EAAM,MACpBG,EAAeb,OAAOc,QAAP,OAAeN,QAAf,IAAeA,EAAAA,EAAiB,IAAIO,QAAO,SAACC,EAAD,GAAyC,IAAD,eAApBC,EAAoB,KAAfC,EAAe,KAItG,OAHIA,EAAYN,IACdI,EAAIC,GAAOC,GAENF,IACN,IACH,OAAO,UACJd,EAAAA,IADH,kBAEOW,GAFP,cAGKJ,EAAQC,MASR,SAASS,EAAT,GAA2E,IAAhDhD,EAA+C,EAA/CA,SAC1BsB,GAAWC,EAAAA,EAAAA,MACjB,GAAgCtE,EAAAA,EAAAA,MAAxB0B,EAAR,EAAQA,SAAU3B,EAAlB,EAAkBA,UACViG,GAAcC,EAAAA,EAAAA,MAAdD,UACR,GAA2CzB,EAAAA,EAAAA,KAA3C,eAAOC,EAAP,KAAwB0B,EAAxB,KACA,GAAmC1F,EAAAA,EAAAA,WAAS,GAA5C,eAAOwC,EAAP,KAAkBC,EAAlB,KACA,GAAgCzC,EAAAA,EAAAA,WAAS,GAAzC,eAAO2F,EAAP,KAAkBC,EAAlB,KACA,GAA4B5F,EAAAA,EAAAA,UAAS,MAArC,eAAOwE,EAAP,KAAeqB,EAAf,KACA,GAAsBC,EAAAA,EAAAA,IAAe,UAA5BC,GAAT,eACA,GAAwBD,EAAAA,EAAAA,IAAe,YAA9BE,GAAT,eACA,GAA4BF,EAAAA,EAAAA,IAAe,gBAAlCG,GAAT,eACA,GAA8BjG,EAAAA,EAAAA,UAAS,IAAvC,eAAOkG,GAAP,KAAgBC,GAAhB,KAEMzD,IAAe0D,EAAAA,EAAAA,cAAY,WAC/B3D,GAAc,KACb,IASG4D,GAAU,mCAAG,oGAEfb,EAAU,UAAU,GACpBI,GAAW,GAHI,SAIqBU,EAAAA,GAAAA,WAAqB,CACvDC,SAAUhE,EAASgE,SACnBrF,SAAAA,EACAgF,QAAAA,KAPa,QAITM,EAJS,QASFC,KAAKjC,SAChBqB,EAAUW,EAASC,KAAKjC,QACxBuB,EAAU,MACVC,EAAY,IACZC,EAAgB,IAChBP,EAAgBf,EAAsBX,EAAgBM,EAAAA,IAAkBkC,EAASC,KAAKjC,UAdzE,gDAiBfkC,EAAAA,EAAAA,MAAmB,CACjBC,QAASpH,EACP,sDACA,+DACA2B,GAEF0F,YAAaC,KAAKC,UAAU,KAAEH,SAC9BtG,UAAW,eAEb0G,QAAQC,MAAR,MACAvE,GAAc,GA3BC,yBA6BfmD,GAAW,GACXJ,EAAU,UAAU,GA9BL,4EAAH,qDA4ChB,OACE,iCACE,SAAC,IAAD,CAAQ7C,KAAK,UAAUC,QAAS,kBAAMH,GAAc,IAApD,UACE,SAAC,IAAD,CAAW5B,GAAG,aAAaC,GAAG,kBAE/B0B,IACC,SAAC,IAAD,CACElD,MAAK,UAAKC,EAAU,oBAAqB,qBAApC,aAA6DgD,EAASjD,MAAM4B,IACjF4B,QAASN,EACTO,SAAUL,GACVuE,KApBc,WAChBzC,EACFX,EAAS,IAAD,OAAKW,IAEbmC,EAAAA,GAAAA,KACEpH,EAAU,iDAA4C,yCAgBpD2H,cAAe,CAAEC,SAAUvG,SAAS4D,IACpC4C,cAAc,EANhB,UAQE,iCACE,SAAC,IAAD,CACEhF,IAAKG,EAASjD,MAAM4B,GACpBc,IAAG,UAAKC,EAAAA,GAAAA,QAAL,sBAAqCM,EAASL,SAA9C,YAA0DhB,EAA1D,QACHiB,SAAQ,UAAKF,EAAAA,GAAAA,QAAL,gCAA+Cf,EAA/C,WAGV,SAACmG,EAAD,CACEnB,QAAS3D,EAAS2D,QAClBiB,SAAUxB,GAAa/E,QAAQ4D,GAC/B8C,gBA3EY,SAACjC,EAAakC,GACpCpB,IAAW,SAACqB,GAAD,eAAC,UACPA,GADM,cAERnC,EAAMkC,QAyECE,gBAAiBvB,MAGnB,SAAC,IAAD,IAECP,IACC,iCACE,SAAC,KAAD,WACE,SAAC,IAAD,CAAW9E,GAAG,iCAA8BC,GAAG,yCAEjD,SAAC,KAAD,CAAS6F,QAASpH,EAAU,aAAc,iBAAkBmI,QAAM,OAIrE9G,QAAQ4D,IACP,4BACE,UAAC,KAAD,CAAOpE,UAAU,SAAjB,WACE,SAAC,IAAD,CAAWS,GAAG,oBAAoBC,GAAG,qBADvC,KAC+D0D,MAE/D,SAAC,KAAD,WACE,SAAC,IAAD,CACE3D,GAAG,8DACHC,GAAG,qDAKT,SAAC,IAAD,CAAOV,UAAU,kBAAkBuH,MAAM,SAAzC,UACE,SAAC,IAAD,CAAQhF,KAAK,UAAUnC,KAAK,QAAQ2G,SAAUxB,EAAW/C,QAASyD,GAAlE,UACE,SAAC,IAAD,CAAWxF,GAAG,aAAaC,GAAG,4BAsBhD,SAASuG,EAAT,GAAyF,IAAtEnB,EAAqE,EAArEA,QAASiB,EAA4D,EAA5DA,SAAUG,EAAkD,EAAlDA,gBAAiBG,EAAiC,EAAjCA,gBACrD,OAAO7G,QAAQsF,IACb,iBAAK9F,UAAU,4BAAf,WACE,SAAC,UAAD,CAAkBuD,MAAO,EAAGvD,UAAU,mCAAtC,UACE,SAAC,IAAD,CAAWS,GAAG,gBAAUC,GAAG,eAG5BoF,EAASrE,KAAI,SAAC+F,EAAQ7F,GAAT,eACZ,UAAC,cAAD,CAAqD3B,UAAU,oCAA/D,WACE,iBAAMA,UAAU,mCAAhB,SAAoDwH,EAAO9H,SAC3D,iBACEM,WAAWoB,EAAAA,EAAAA,GACT,kCACCiG,EAAgBG,EAAOvC,MAAQ,uCAHpC,0BAMGuC,QANH,IAMGA,OANH,EAMGA,EAAQC,WANX,QAMkB,MAElB,SAAC,IAAD,CAAQV,SAAUA,EAAUW,SAAU,SAACC,GAAD,OAAOT,EAAgBM,EAAOvC,IAAK0C,OACzE,iBACE3H,WAAWoB,EAAAA,EAAAA,GACT,gCACAiG,EAAgBG,EAAOvC,MAAQ,uCAHnC,0BAMGuC,QANH,IAMGA,OANH,EAMGA,EAAQI,UANX,QAMiB,OAjBnB,iBAAqCJ,EAAO9H,eAuBhD,gBAAKM,UAAU,kEAAf,UACE,SAAC,SAAD,WACE,SAAC,IAAD,CAAWS,GAAG,8CAAqCC,GAAG,kD,aCrLvD,SAASmH,EAAT,GAA4C,IAAD,IArBzBC,EAqBEC,EAAuB,EAAvBA,KACzB,GAAgBC,EAAAA,EAAAA,MAATC,GAAP,eACA,GAAgC7I,EAAAA,EAAAA,MAAxB0B,EAAR,EAAQA,SAAU3B,EAAlB,EAAkBA,UAElB,OACE,SAAC,WAAD,CAAc+I,KAAMH,EAAKD,QAASK,OA1BbL,EA0BoCC,EAAKD,QAzB5DA,EAAQM,SAAS,SACZ,UAEO,SAAZN,EACK,UAGLA,EAAQO,WAAW,MACd,UAELP,EAAQO,WAAW,MACd,UAEF,WAYL,UACE,UAAC,IAAD,CAEEC,WAAS,EACTC,MAAO,CAAEN,MAAOA,GAASA,EAAQ,EAAIO,KAAKC,IAAIR,EAAQ,EAAG,KAAO,KAChES,OACE,SAAC,IAAD,CACE1G,IAAK+F,EAAK7I,MAAM4B,GAChBc,IAAG,UAAKC,EAAAA,GAAAA,QAAL,sBAAqCkG,EAAKjG,SAA1C,YAAsDhB,EAAtD,QACHiB,SAAQ,UAAKF,EAAAA,GAAAA,QAAL,gCAA+Cf,EAA/C,UARd,WAYE,SAAC,SAAD,CACE5B,MAAO6I,EAAK7I,MAAM4B,GAClB0F,YAAW,UAAKrH,EAAU,aAAc,YAA7B,YAA4C4I,EAAKY,QAAQC,MAAM,IAAIC,UAAUC,KAAK,QAE/F,SAAC,SAAD,CAAWP,MAAO,CAAEQ,UAAW,QAAUvC,YAAauB,EAAKiB,QAAQlI,MAEnE,SAAC,IAAD,KAEA,SAAC,SAAD,CACE0F,YAAarH,EAAU,QAAD,OACZ4I,EAAKkB,YAAYC,IADL,YACYnB,EAAKkB,YAAYR,IAD7B,4BAEbV,EAAKkB,YAAYC,IAFJ,YAEWnB,EAAKkB,YAAYR,IAF5B,gBAKxB,SAAC,SAAD,CACEjC,YAAarH,EAAU,yBAAD,OACK4I,EAAKkB,YAAYE,aADtB,2BAEApB,EAAKkB,YAAYE,gBAIxCpB,EAAKqB,iBACJ,SAAC,SAAD,CACE5C,aACE,iCACE,SAAC6C,EAAA,EAAD,IADF,KACmB,SAAC,IAAD,CAAW5I,GAAG,kCAA+BC,GAAG,0BAMzE,SAAC,IAAD,KAEA,SAAC,IAAD,CAAO4I,MAAI,EAAClJ,KAAM,CAAC,EAAG,GAAImJ,UAAWxB,EAAKjG,SAAUyG,MAAO,CAAEiB,QAAS,QAAtE,SACGzB,EAAK0B,KAAKhI,KAAI,SAACiI,GAAD,eACb,SAAC,IAAD,CAAqCvB,MAAK,UAAEwB,EAAAA,GAASD,UAAX,aAAE,EAAevB,MAA3D,SACgB,OAAbrH,EAAA,UAAoB6I,EAAAA,GAASD,UAA7B,aAAoB,EAAehK,MAAQgK,GAD9C,UAAa3B,EAAK5B,SAAlB,YAA8BuD,UAMlC,SAAC,IAAD,KAEA,UAAC,IAAD,WACGlJ,SAAQ,UAAAuH,EAAKvG,aAAL,mBAAaV,UAAb,eAAwB8I,QAAS,KAAM,SAAC,KAAD,CAAYzH,SAAU4F,IACrEvH,QAAQuH,EAAK8B,UAAU/I,MAAc,SAACqE,EAAD,CAAiBhD,SAAU4F,SAxD9DA,EAAKjG,YCxBlB,IAAMgI,EAEFC,EAqFJ,MAnFA,WACE,IAAMtG,GAAWC,EAAAA,EAAAA,MACT5C,GAAa1B,EAAAA,EAAAA,MAAb0B,SACR,GAA0B6C,EAAAA,EAAAA,KAAnBC,GAAP,eACA,GAAwB8B,EAAAA,EAAAA,IAAe,YAA9BsE,GAAT,eACA,GAA+BtE,EAAAA,EAAAA,IAAe,mBAArCuE,GAAT,gBAEAlK,EAAAA,EAAAA,YAAU,WACR,IAAMmK,EAAetG,EAAgB,YACjCsG,GACFF,EAAYE,KAEb,IAEH,IAAMC,EAAS,mCAAG,wGAERC,EAAAA,EAAAA,MAFQ,OAGdH,GAAmB,GAEnBxG,EAAS,KALK,gDAOd8C,EAAAA,GAAAA,MAAc,uBAAd,MAPc,yDAAH,qDAWf,GAA4C8D,EAAAA,EAAAA,UAAQ,WAKlD,OAJuBrG,OAAOsG,OAAOR,GAAW3F,MAAK,SAACoG,EAAGC,GAAJ,OACnDD,EAAErL,MAAM4B,GAAY0J,EAAEtL,MAAM4B,GAAY,GAAK,KAGzBiE,QACpB,SAACC,EAAU+C,GAMT,OALIA,EAAK8B,UAAU/I,GACjBkE,EAAIyF,eAAeC,KAAK3C,GAExB/C,EAAI2F,gBAAgBD,KAAK3C,GAEpB/C,IAET,CACEyF,eAAgB,GAChBE,gBAAiB,OAGpB,CAAC7J,IAnBI2J,EAAR,EAAQA,eAAgBE,EAAxB,EAAwBA,gBAqBxB,OACE,UAAC,YAAD,CAAgB3K,UAAU,YAA1B,WACE,SAAC,IAAD,CACEd,OACE,iCACE,SAAC0L,EAAA,EAAD,IADF,UAIFC,UAAU,SAAC,IAAD,CAAWpK,GAAG,oCAAiCC,GAAG,2BAC5DoK,MAAO,EACL,SAAC,IAAD,GAAoB,oBACpB,SAAC,IAAD,CAAQC,QAAM,EAACzL,OAAK,EAACkD,QAAS2H,EAA9B,mBAA6C,qBAKjD,SAAC,IAAD,KACA,SAAC3G,EAAD,KACA,SAAC,IAAD,KACA,SAAC,IAAD,CAAOpD,KAAM,CAAC,EAAG,IAAKkJ,MAAI,EAAC/B,MAAM,QAAjC,SACGkD,EAAehJ,KAAI,SAACsG,EAAgBpG,GAAjB,OAClB,SAACkG,EAAD,CAA4CE,KAAMA,GAAlD,UAAkBA,EAAK5B,SAAvB,YAAmCxE,UAGvC,SAAC,IAAD,KACA,SAAC,UAAD,CAAkB4B,MAAO,EAAzB,UACE,SAAC,IAAD,CAAW9C,GAAG,WAAWC,GAAG,mBAE9B,SAAC,IAAD,CAAON,KAAM,CAAC,EAAG,IAAKkJ,MAAI,EAAC/B,MAAM,QAAjC,SACGoD,EAAgBlJ,KAAI,SAACsG,EAAgBpG,GAAjB,OACnB,SAACkG,EAAD,CAA4CE,KAAMA,GAAlD,UAAkBA,EAAK5B,SAAvB,YAAmCxE,c,8fC7FhCqJ,EAAW,CACtBC,UAAUC,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,YACnCC,WAAWF,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,aACpCE,iBAAiBH,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,mBAC1CG,UAAUJ,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,aAGxBjF,EAAY,CACvBD,YAAYiF,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,cACrCI,UAAUL,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,YACnCK,oBAAoBN,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,uBAGlCM,EAAgB,CAC3BC,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,yBAG5BQ,EAA2B,CACtCD,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,oCAG5BS,EAA6B,CACxCF,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,sCAG5BU,EAAuB,CAClCH,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,+BAG5BW,EAAwB,CACnCJ,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,gCAG5BY,EAAuB,CAClCL,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,gCAO5Ba,IAHGd,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,uCAGN,CACjCO,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,gCAG5Bc,EAAqB,CAChCP,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,8BAG5Be,EAAqB,CAChCR,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,4BAG5BgB,EAAsB,CACjCT,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,+BAG5BiB,EAAsB,CACjCV,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,8BAG5BkB,EAAqB,CAChCX,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,8BAG5BmB,EAAuB,CAClCZ,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,gCAG5BoB,EAAwB,CACnCb,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,iCAG5BqB,EAAiB,CAC5Bd,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,yBAG5BsB,EAA0B,CACrCf,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW,kCAG5BuB,EAAqB,CAChChB,cAAcR,EAAAA,EAAAA,IAAcC,EAAAA,GAAW","sources":["components/rules/CollapsibleRule.tsx","components/rules/PopoverRule.tsx","components/rules/RulesCarousel.tsx","components/rules/RulesList.tsx","components/rules/RulesModal.tsx","components/text/Instruction.tsx","components/text/RoundsLeftInstruction.tsx","components/text/TextHighlight.tsx","components/text/Title.tsx","pages/Hub/components/RecentlyCreatedGames.tsx","pages/Hub/components/CreateGameModal.tsx","pages/Hub/components/GameCard.tsx","pages/Hub/Hub.tsx","services/adapters.ts"],"sourcesContent":["// Ant Design Resources\nimport { Collapse } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks';\n// Components\nimport { Instruction } from 'components/text';\n\ntype CollapsibleRuleProps = {\n  children: any;\n  title?: string;\n};\nexport function CollapsibleRule({ children, title }: CollapsibleRuleProps): JSX.Element {\n  const { translate } = useLanguage();\n\n  return (\n    <Instruction contained>\n      <Collapse ghost>\n        <Collapse.Panel header={translate('Regras', 'Rules', title)} key=\"1\">\n          {children}\n        </Collapse.Panel>\n      </Collapse>\n    </Instruction>\n  );\n}\n","import { useEffect, useState } from 'react';\n// Ant Design Resources\nimport { Button, Popover } from 'antd';\nimport { ReadOutlined } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\n\ntype PopoverRuleProps = {\n  content: any;\n  showLabel?: boolean;\n  label?: any;\n};\n\nexport function PopoverRule({ content, label, showLabel = true }: PopoverRuleProps): JSX.Element {\n  const [isActive, setActive] = useState(false);\n\n  useEffect(() => {\n    setActive(showLabel);\n  }, []); // eslint-disable-line\n\n  return (\n    <div className=\"popover-rule\">\n      <Popover placement=\"bottomLeft\" content={content} trigger=\"click\">\n        <Button\n          shape={'round'}\n          size=\"large\"\n          onMouseOver={() => setActive(true)}\n          onMouseLeave={() => setActive(showLabel ?? false)}\n        >\n          <ReadOutlined />\n          {isActive && Boolean(label) ? label : <Translate pt=\" Regras\" en=\" Rules\" />}\n        </Button>\n      </Popover>\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Typography, Image, Carousel, Button } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks';\n// Constants\nimport { PUBLIC_URL } from 'utils/constants';\nimport { DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\n\ntype RulesCarouselProps = {\n  info: GameInfo;\n  className?: string;\n  ruleClass?: string;\n};\n\nexport function RulesCarousel({ info, className = '', ruleClass = '' }: RulesCarouselProps): JSX.Element {\n  const { language } = useLanguage();\n  const settings = {\n    prevArrow: (\n      <Button>\n        <DoubleLeftOutlined className=\"rules-carousel__nav rules-carousel__nav--left\" />\n      </Button>\n    ),\n    nextArrow: (\n      <Button>\n        <DoubleRightOutlined className=\"rules-carousel__nav rules-carousel__nav--right\" />\n      </Button>\n    ),\n  };\n\n  return (\n    <Carousel\n      className={clsx('rules-carousel', className)}\n      autoplay\n      autoplaySpeed={15000}\n      arrows\n      {...settings}\n    >\n      {info.rules[language].map((rule, index) => (\n        <div className={clsx('rules-carousel__rule', ruleClass)} key={rule}>\n          <span className=\"rules-carousel__rule-number\">{index + 1}</span>\n\n          <Image\n            className=\"rules-carousel__image\"\n            src={\n              index === 0\n                ? `${PUBLIC_URL.BANNERS}game-image-${info.gameName}-${language}.jpg`\n                : `${PUBLIC_URL.RULES}game-rule-${info.gameName}-${index}.jpg`\n            }\n            fallback={`${PUBLIC_URL.RULES}game-rule-not-found.jpg`}\n            alt={rule}\n          />\n          <Typography.Paragraph className=\"rules-carousel__rule-text\">{rule}</Typography.Paragraph>\n        </div>\n      ))}\n    </Carousel>\n  );\n}\n","import clsx from 'clsx';\n\ntype RulesListProps = {\n  children: any;\n  className?: string;\n};\n\nexport function RulesList({ children, className = '' }: RulesListProps): JSX.Element {\n  return <ul className={clsx('rules-list', className)}>{children}</ul>;\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, Modal } from 'antd';\nimport { ReadOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from 'hooks';\n// Components\nimport { Translate } from 'components/language';\nimport { RulesCarousel } from 'components/rules';\n\ntype RulesModalProps = {\n  gameInfo: GameInfo;\n};\n\nexport function RulesModal({ gameInfo }: RulesModalProps): JSX.Element {\n  const { language, translate } = useLanguage();\n  const [isVisible, setVisibility] = useState(false);\n\n  const onCloseModal = () => {\n    setVisibility(false);\n  };\n\n  return (\n    <>\n      <Button type=\"default\" onClick={() => setVisibility(true)} icon={<ReadOutlined />}>\n        <Translate pt=\"Regras\" en=\"Rules\" />\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`${translate('Regras', 'Rules')}: ${gameInfo.title[language]}`}\n          visible={isVisible}\n          onCancel={onCloseModal}\n          className=\"rules-modal\"\n          footer={[\n            <Button key=\"close\" onClick={onCloseModal}>\n              <Translate pt=\"Fechar\" en=\"Close\" />\n            </Button>,\n          ]}\n        >\n          <RulesCarousel info={gameInfo} />\n        </Modal>\n      )}\n    </>\n  );\n}\n","import clsx from 'clsx';\nimport { Typography } from 'antd';\n\ntype InstructionsProps = {\n  children: any;\n  white?: boolean;\n  className?: string;\n  contained?: boolean;\n  fullWidth?: boolean;\n};\n\n/**\n * Typography container for instructions\n * @param props\n * @returns\n */\nexport const Instruction = ({ children, white, className, contained, fullWidth }: InstructionsProps) => {\n  const baseClass = 'instruction';\n\n  return (\n    <Typography.Text\n      className={clsx(\n        baseClass,\n        contained && `${baseClass}--contained`,\n        white && `${baseClass}--white`,\n        fullWidth && `${baseClass}--full-width`,\n        className\n      )}\n      data-testid=\"instruction\"\n    >\n      {children}\n    </Typography.Text>\n  );\n};\n","// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n\ntype RoundsLeftInstructionProps = {\n  round: GameRound;\n};\n\nexport function RoundsLeftInstruction({ round }: RoundsLeftInstructionProps) {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Faltam <strong>{(round?.total ?? 0) - (round?.current ?? 0)}</strong> rodadas para o jogo\n            terminar...\n          </>\n        }\n        en={\n          <>\n            <strong>{(round?.total ?? 0) - (round?.current ?? 0)}</strong> rounds left for the game to end...\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n","type TextHighlightProps = {\n  children: any;\n};\n\nexport function TextHighlight({ children }: TextHighlightProps) {\n  return <span className=\"text-highlight\">{children}</span>;\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Typography } from 'antd';\n\ntype TitleProps = {\n  children: any;\n  white?: boolean;\n  icon?: any;\n  className?: string;\n  level?: 1 | 2 | 3 | 4 | 5 | undefined;\n  size?: 'x-small' | 'small' | 'medium' | 'large';\n};\n\nexport const Title = ({ children, white, icon, className, level = 1, size = 'large' }: TitleProps) => {\n  return (\n    <Typography.Title\n      level={level}\n      className={clsx('title', `title--${size}`, white && 'title--white', className)}\n    >\n      {Boolean(icon) && icon}\n      {children}\n    </Typography.Title>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// Ant Design Resources\nimport { Button, Space, Tooltip } from 'antd';\nimport { RedoOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLocalStorage } from 'hooks';\n// Utils\nimport { LATEST_GAME_IDS } from 'utils/constants';\n// Components\nimport { Translate } from 'components/language';\n\nexport function RecentlyCreatedGames(): JSX.Element {\n  const navigate = useNavigate();\n  const [getLocalStorage] = useLocalStorage();\n  const [ids, setIds] = useState<string[]>([]);\n\n  const refreshIds = () => {\n    setIds(Object.keys(getLocalStorage(LATEST_GAME_IDS) ?? {}).sort());\n  };\n\n  const goTo = (gameId: GameId) => {\n    navigate(gameId);\n  };\n\n  useEffect(() => {\n    refreshIds();\n  }, []); // eslint-disable-line\n\n  return (\n    <Space>\n      <span>\n        <Translate pt=\"Jogos criados recentemente (por você)\" en=\"Recently created games (by you)\" />:\n      </span>\n      {ids.map((gameId) => (\n        <Button key={`recent-${gameId}`} ghost onClick={() => goTo(gameId)}>\n          {gameId}\n        </Button>\n      ))}\n      <Tooltip title={<Translate pt=\"Atualizar lista\" en=\"Refresh list\" />}>\n        <Button shape=\"circle\" icon={<RedoOutlined />} onClick={refreshIds} ghost />\n      </Tooltip>\n    </Space>\n  );\n}\n","import clsx from 'clsx';\nimport { useCallback, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// Ant Design Resources\nimport { Image, Modal, message, Button, notification, Divider, Typography, Switch, Space } from 'antd';\n// Adapters\nimport { ADMIN_API } from 'services/adapters';\n// Hooks\nimport { useGlobalState, useLanguage, useLoading, useLocalStorage } from 'hooks';\n// Constants\nimport { LATEST_GAME_IDS, PUBLIC_URL } from 'utils/constants';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\nimport { Loading } from 'components/loaders';\n\nconst updateLocal24hGameIds = (latestGameIds: PlainObject, newId: GameId) => {\n  const now = Date.now();\n  const past24Hours = now - 1000 * 60 * 60 * 24;\n  const cleanedUpIds = Object.entries(latestGameIds ?? {}).reduce((acc: PlainObject, [key, timestamp]) => {\n    if (timestamp > past24Hours) {\n      acc[key] = timestamp;\n    }\n    return acc;\n  }, {});\n  return {\n    [LATEST_GAME_IDS]: {\n      ...cleanedUpIds,\n      [newId]: now,\n    },\n  };\n};\n\ntype CreateGameModalProps = {\n  gameInfo: GameInfo;\n};\n\nexport function CreateGameModal({ gameInfo }: CreateGameModalProps): JSX.Element {\n  const navigate = useNavigate();\n  const { language, translate } = useLanguage();\n  const { setLoader } = useLoading();\n  const [getLocalStorage, setLocalStorage] = useLocalStorage();\n  const [isVisible, setVisibility] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [gameId, setGameId] = useState(null);\n  const [, setUserId] = useGlobalState('userId');\n  const [, setUserName] = useGlobalState('username');\n  const [, setUserAvatarId] = useGlobalState('userAvatarId');\n  const [options, setOptions] = useState({});\n\n  const onCloseModal = useCallback(() => {\n    setVisibility(false);\n  }, []);\n\n  const onChangeOptions = (key: string, value: boolean) => {\n    setOptions((s) => ({\n      ...s,\n      [key]: value,\n    }));\n  };\n\n  const createGame = async () => {\n    try {\n      setLoader('create', true);\n      setLoading(true);\n      const response: PlainObject = await ADMIN_API.createGame({\n        gameCode: gameInfo.gameCode,\n        language,\n        options,\n      });\n      if (response.data.gameId) {\n        setGameId(response.data.gameId);\n        setUserId(null);\n        setUserName('');\n        setUserAvatarId('');\n        setLocalStorage(updateLocal24hGameIds(getLocalStorage(LATEST_GAME_IDS), response.data.gameId));\n      }\n    } catch (e: any) {\n      notification.error({\n        message: translate(\n          'Aplicativo encontrou um erro ao tentar criar o jogo',\n          'The application found an error while trying to create a game',\n          language\n        ),\n        description: JSON.stringify(e.message),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n      setVisibility(false);\n    } finally {\n      setLoading(false);\n      setLoader('create', false);\n    }\n  };\n\n  const onConfirmGame = () => {\n    if (gameId) {\n      navigate(`/${gameId}`);\n    } else {\n      message.info(\n        translate('Péra! O jogo ainda não foi inicializado.', 'Wait! The game has not been created')\n      );\n    }\n  };\n\n  return (\n    <>\n      <Button type=\"primary\" onClick={() => setVisibility(true)}>\n        <Translate pt=\"Criar Jogo\" en=\"Create Game\" />\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`${translate('Criando novo jogo', 'Creating new game')}: ${gameInfo.title[language]}`}\n          visible={isVisible}\n          onCancel={onCloseModal}\n          onOk={onConfirmGame}\n          okButtonProps={{ disabled: Boolean(!gameId) }}\n          maskClosable={false}\n        >\n          <>\n            <Image\n              alt={gameInfo.title[language]}\n              src={`${PUBLIC_URL.BANNERS}game-image-${gameInfo.gameName}-${language}.jpg`}\n              fallback={`${PUBLIC_URL.BANNERS}/game-image-em-breve-${language}.jpg`}\n            />\n\n            <Options\n              options={gameInfo.options}\n              disabled={isLoading || Boolean(gameId)}\n              onChangeOptions={onChangeOptions}\n              selectedOptions={options}\n            />\n\n            <Divider />\n\n            {isLoading && (\n              <>\n                <Instruction>\n                  <Translate pt=\"O jogo está sendo criado...\" en=\"The game session is being created\" />\n                </Instruction>\n                <Loading message={translate('Gerando...', 'Generating...')} margin />\n              </>\n            )}\n\n            {Boolean(gameId) ? (\n              <div>\n                <Title className=\"center\">\n                  <Translate pt=\"Jogo inicializado\" en=\"Game Initialized\" />: {gameId}\n                </Title>\n                <Instruction>\n                  <Translate\n                    pt=\"Pressione OK para ser redirecionadx à página do jogo.\"\n                    en=\"Press OK to be redirected to the game page\"\n                  />\n                </Instruction>\n              </div>\n            ) : (\n              <Space className=\"space-container\" align=\"center\">\n                <Button type=\"primary\" size=\"large\" disabled={isLoading} onClick={createGame}>\n                  <Translate pt=\"Criar Jogo\" en=\"Create Game\" />\n                </Button>\n              </Space>\n            )}\n          </>\n        </Modal>\n      )}\n    </>\n  );\n}\n\ntype OptionsProps = {\n  options?: {\n    label: string;\n    key: string;\n    on?: string;\n    off?: string;\n  }[];\n  disabled: boolean;\n  onChangeOptions: GenericFunction;\n  selectedOptions: PlainObject;\n};\nfunction Options({ options, disabled, onChangeOptions, selectedOptions }: OptionsProps) {\n  return Boolean(options) ? (\n    <div className=\"create-game-modal-options\">\n      <Typography.Title level={5} className=\"create-game-modal-options__title\">\n        <Translate pt=\"Opções:\" en=\"Options:\" />\n      </Typography.Title>\n\n      {options!.map((option, index) => (\n        <Typography.Paragraph key={`option-${option.label}`} className=\"create-game-modal-options__option\">\n          <span className=\"create-game-modal-options__label\">{option.label}</span>\n          <span\n            className={clsx(\n              'create-game-modal-options__off',\n              !selectedOptions[option.key] && 'create-game-modal-options__selected'\n            )}\n          >\n            {option?.off ?? ''}\n          </span>\n          <Switch disabled={disabled} onChange={(e) => onChangeOptions(option.key, e)} />\n          <span\n            className={clsx(\n              'create-game-modal-options__on',\n              selectedOptions[option.key] && 'create-game-modal-options__selected'\n            )}\n          >\n            {option?.on ?? ''}\n          </span>\n        </Typography.Paragraph>\n      ))}\n    </div>\n  ) : (\n    <div className=\"create-game-modal-options create-game-modal-options__no-options\">\n      <Typography.Text>\n        <Translate pt=\"Este jogo não possui customizações\" en=\"This game does not support customizations\" />\n      </Typography.Text>\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Space, Card, Image, Divider, Tag, Badge } from 'antd';\n// Hooks\nimport { useDimensions, useLanguage } from 'hooks';\n// Utils\nimport { PUBLIC_URL, TAG_DICT } from 'utils/constants';\n// Components\nimport { RulesModal } from 'components/rules';\nimport { CreateGameModal } from './CreateGameModal';\nimport { MobileFilled } from '@ant-design/icons';\nimport { Translate } from 'components/language';\n\nconst getVersionColor = (version: string) => {\n  if (version.endsWith('alpha')) {\n    return '#F97659';\n  }\n  if (version === 'beta') {\n    return '#F9D859';\n  }\n\n  if (version.startsWith('1.')) {\n    return '#72D984';\n  }\n  if (version.startsWith('2.')) {\n    return '#7CBD51';\n  }\n  return '#96A0A3';\n};\n\ntype GameCardProps = {\n  game: GameInfo;\n};\n\nexport function GameCard({ game }: GameCardProps) {\n  const [width] = useDimensions();\n  const { language, translate } = useLanguage();\n\n  return (\n    <Badge.Ribbon text={game.version} color={getVersionColor(game.version)}>\n      <Card\n        key={game.gameName}\n        hoverable\n        style={{ width: width && width > 0 ? Math.max(width / 5, 250) : 250 }}\n        cover={\n          <Image\n            alt={game.title[language]}\n            src={`${PUBLIC_URL.BANNERS}game-image-${game.gameName}-${language}.jpg`}\n            fallback={`${PUBLIC_URL.BANNERS}/game-image-em-breve-${language}.jpg`}\n          />\n        }\n      >\n        <Card.Meta\n          title={game.title[language]}\n          description={`${translate('Baseado em', 'Based on')} ${game.basedOn.split('').reverse().join('')}`}\n        />\n        <Card.Meta style={{ marginTop: '24px' }} description={game.summary[language]} />\n\n        <Divider />\n\n        <Card.Meta\n          description={translate(\n            `Para ${game.playerCount.min}-${game.playerCount.max} jogadores`,\n            `For ${game.playerCount.min}-${game.playerCount.max} players`\n          )}\n        />\n        <Card.Meta\n          description={translate(\n            `Recomendado jogar com ${game.playerCount.recommended}`,\n            `Recommended with ${game.playerCount.recommended}`\n          )}\n        />\n\n        {game.mobileFriendly && (\n          <Card.Meta\n            description={\n              <>\n                <MobileFilled /> <Translate pt=\"Funciona em aparelhos móveis\" en=\"Mobile friendly\" />\n              </>\n            }\n          />\n        )}\n\n        <Divider />\n\n        <Space wrap size={[1, 6]} prefixCls={game.gameName} style={{ display: 'flex' }}>\n          {game.tags.map((tag) => (\n            <Tag key={`${game.gameCode}-${tag}`} color={TAG_DICT[tag]?.color}>\n              {language === 'pt' ? TAG_DICT[tag]?.label : tag}\n            </Tag>\n          ))}\n        </Space>\n\n        <Divider />\n\n        <Space>\n          {Boolean(game.rules?.[language]?.length > 1) && <RulesModal gameInfo={game} />}\n          {Boolean(game.available[language]) && <CreateGameModal gameInfo={game} />}\n        </Space>\n      </Card>\n    </Badge.Ribbon>\n  );\n}\n","import { useEffect, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// Ant Design Resources\nimport { Typography, Layout, Space, Divider, PageHeader, Button, message } from 'antd';\nimport { DatabaseFilled } from '@ant-design/icons';\n// API\nimport { signOut } from 'services/firebase';\n// Hooks\nimport { useGlobalState, useLanguage, useLocalStorage } from 'hooks';\n// Utils\nimport gameList from 'assets/data/games.json';\n// Components\nimport { RecentlyCreatedGames } from './components/RecentlyCreatedGames';\nimport { GameCard } from './components/GameCard';\nimport { LanguageSwitch, Translate } from 'components/language';\n\nconst GAME_LIST: {\n  [key: string]: GameInfo;\n} = gameList;\n\nfunction Hub() {\n  const navigate = useNavigate();\n  const { language } = useLanguage();\n  const [getLocalStorage] = useLocalStorage();\n  const [, setLanguage] = useGlobalState('language');\n  const [, setIsAuthenticated] = useGlobalState('isAuthenticated');\n\n  useEffect(() => {\n    const prevLanguage = getLocalStorage('language');\n    if (prevLanguage) {\n      setLanguage(prevLanguage);\n    }\n  }, []); // eslint-disable-line\n\n  const onSignOut = async () => {\n    try {\n      await signOut();\n      setIsAuthenticated(false);\n\n      navigate('/');\n    } catch (error: any) {\n      message.error('Something went wrong', error);\n    }\n  };\n\n  const { availableGames, comingSoonGames } = useMemo(() => {\n    const sortedGameList = Object.values(GAME_LIST).sort((a, b) =>\n      a.title[language] > b.title[language] ? 1 : -1\n    );\n\n    return sortedGameList.reduce(\n      (acc: any, game) => {\n        if (game.available[language]) {\n          acc.availableGames.push(game);\n        } else {\n          acc.comingSoonGames.push(game);\n        }\n        return acc;\n      },\n      {\n        availableGames: [],\n        comingSoonGames: [],\n      }\n    );\n  }, [language]);\n\n  return (\n    <Layout.Content className=\"container\">\n      <PageHeader\n        title={\n          <>\n            <DatabaseFilled /> Hub\n          </>\n        }\n        subTitle={<Translate pt=\"Selecione um jogo para começar\" en=\"Select a game to start\" />}\n        extra={[\n          <LanguageSwitch key=\"language-switch\" />,\n          <Button danger ghost onClick={onSignOut} key=\"logout-button\">\n            Logout\n          </Button>,\n        ]}\n      />\n      <Divider />\n      <RecentlyCreatedGames />\n      <Divider />\n      <Space size={[8, 16]} wrap align=\"start\">\n        {availableGames.map((game: GameInfo, index: number) => (\n          <GameCard key={`${game.gameCode}-${index}`} game={game} />\n        ))}\n      </Space>\n      <Divider />\n      <Typography.Title level={2}>\n        <Translate pt=\"Em Breve\" en=\"Coming Soon\" />\n      </Typography.Title>\n      <Space size={[8, 16]} wrap align=\"start\">\n        {comingSoonGames.map((game: GameInfo, index: number) => (\n          <GameCard key={`${game.gameCode}-${index}`} game={game} />\n        ))}\n      </Space>\n    </Layout.Content>\n  );\n}\n\nexport default Hub;\n","import { functions } from 'services/firebase';\nimport { httpsCallable } from 'firebase/functions';\n\nexport const GAME_API = {\n  loadGame: httpsCallable(functions, 'loadGame'),\n  addPlayer: httpsCallable(functions, 'addPlayer'),\n  makePlayerReady: httpsCallable(functions, 'makePlayerReady'),\n  rateGame: httpsCallable(functions, 'rateGame'),\n};\n\nexport const ADMIN_API = {\n  createGame: httpsCallable(functions, 'createGame'),\n  lockGame: httpsCallable(functions, 'lockGame'),\n  performAdminAction: httpsCallable(functions, 'performAdminAction'),\n};\n\nexport const ARTE_RUIM_API = {\n  submitAction: httpsCallable(functions, 'arteRuimSubmitAction'),\n};\n\nexport const CONTADORES_HISTORIAS_API = {\n  submitAction: httpsCallable(functions, 'contadoresHistoriasSubmitAction'),\n};\n\nexport const DETETIVES_IMAGINATIVOS_API = {\n  submitAction: httpsCallable(functions, 'detetivesImaginativosSubmitAction'),\n};\n\nexport const ESPIAO_ENTRE_NOS_API = {\n  submitAction: httpsCallable(functions, 'espiaoEntreNosSubmitAction'),\n};\n\nexport const GALERIA_DE_SONHOS_API = {\n  submitAction: httpsCallable(functions, 'galeriaDeSonhosSubmitAction'),\n};\n\nexport const CRIMES_HEDIONDOS_API = {\n  submitAction: httpsCallable(functions, 'crimesHediondosSubmitAction'),\n};\n\nexport const INSTRUMENTOS_CODIFICADOS_API = {\n  submitAction: httpsCallable(functions, 'instrumentosCodificadosSubmitAction'),\n};\n\nexport const LINHAS_CRUZADAS_API = {\n  submitAction: httpsCallable(functions, 'linhasCruzadasSubmitAction'),\n};\n\nexport const MENTE_COLETIVA_API = {\n  submitAction: httpsCallable(functions, 'menteColetivaSubmitAction'),\n};\n\nexport const NA_RUA_DO_MEDO_API = {\n  submitAction: httpsCallable(functions, 'naRuaDoMedoSubmitAction'),\n};\n\nexport const ONDA_TELEPATICA_API = {\n  submitAction: httpsCallable(functions, 'ondaTelepaticaSubmitAction'),\n};\n\nexport const POLEMICA_DA_VEZ_API = {\n  submitAction: httpsCallable(functions, 'polemicaDaVezSubmitAction'),\n};\n\nexport const RETRATO_FALADO_API = {\n  submitAction: httpsCallable(functions, 'retratoFaladoSubmitAction'),\n};\n\nexport const SONHOS_PESADELOS_API = {\n  submitAction: httpsCallable(functions, 'sonhosPesadelosSubmitAction'),\n};\n\nexport const TESTEMUNHA_OCULAR_API = {\n  submitAction: httpsCallable(functions, 'testemunhaOcularSubmitAction'),\n};\n\nexport const UE_SO_ISSO_API = {\n  submitAction: httpsCallable(functions, 'ueSoIssoSubmitAction'),\n};\n\nexport const VENDAVAL_DE_PALPITE_API = {\n  submitAction: httpsCallable(functions, 'vendavalDePalpiteSubmitAction'),\n};\n\nexport const CRUZA_PALAVRAS_API = {\n  submitAction: httpsCallable(functions, 'cruzaPalavrasSubmitAction'),\n};\n"],"names":["CollapsibleRule","children","title","translate","useLanguage","contained","ghost","header","PopoverRule","content","label","showLabel","useState","isActive","setActive","useEffect","className","placement","trigger","shape","size","onMouseOver","onMouseLeave","ReadOutlined","Boolean","pt","en","RulesCarousel","info","ruleClass","language","settings","prevArrow","DoubleLeftOutlined","nextArrow","DoubleRightOutlined","clsx","autoplay","autoplaySpeed","arrows","rules","map","rule","index","src","PUBLIC_URL","gameName","fallback","alt","RulesList","RulesModal","gameInfo","isVisible","setVisibility","onCloseModal","type","onClick","icon","visible","onCancel","footer","Instruction","white","fullWidth","baseClass","RoundsLeftInstruction","round","total","current","TextHighlight","Title","level","RecentlyCreatedGames","navigate","useNavigate","useLocalStorage","getLocalStorage","ids","setIds","refreshIds","Object","keys","LATEST_GAME_IDS","sort","gameId","goTo","RedoOutlined","updateLocal24hGameIds","latestGameIds","newId","now","Date","past24Hours","cleanedUpIds","entries","reduce","acc","key","timestamp","CreateGameModal","setLoader","useLoading","setLocalStorage","isLoading","setLoading","setGameId","useGlobalState","setUserId","setUserName","setUserAvatarId","options","setOptions","useCallback","createGame","ADMIN_API","gameCode","response","data","notification","message","description","JSON","stringify","console","error","onOk","okButtonProps","disabled","maskClosable","Options","onChangeOptions","value","s","selectedOptions","margin","align","option","off","onChange","e","on","GameCard","version","game","useDimensions","width","text","color","endsWith","startsWith","hoverable","style","Math","max","cover","basedOn","split","reverse","join","marginTop","summary","playerCount","min","recommended","mobileFriendly","MobileFilled","wrap","prefixCls","display","tags","tag","TAG_DICT","length","available","GAME_LIST","gameList","setLanguage","setIsAuthenticated","prevLanguage","onSignOut","signOut","useMemo","values","a","b","availableGames","push","comingSoonGames","DatabaseFilled","subTitle","extra","danger","GAME_API","loadGame","httpsCallable","functions","addPlayer","makePlayerReady","rateGame","lockGame","performAdminAction","ARTE_RUIM_API","submitAction","CONTADORES_HISTORIAS_API","DETETIVES_IMAGINATIVOS_API","ESPIAO_ENTRE_NOS_API","GALERIA_DE_SONHOS_API","CRIMES_HEDIONDOS_API","LINHAS_CRUZADAS_API","MENTE_COLETIVA_API","NA_RUA_DO_MEDO_API","ONDA_TELEPATICA_API","POLEMICA_DA_VEZ_API","RETRATO_FALADO_API","SONHOS_PESADELOS_API","TESTEMUNHA_OCULAR_API","UE_SO_ISSO_API","VENDAVAL_DE_PALPITE_API","CRUZA_PALAVRAS_API"],"sourceRoot":""}