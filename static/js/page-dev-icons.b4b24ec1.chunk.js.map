{"version":3,"file":"static/js/page-dev-icons.b4b24ec1.chunk.js","mappings":"gPA0DA,UAjDA,WACE,IAAQA,EAAYC,EAAAA,EAAAA,SAAZD,SAERE,EAAAA,EAAAA,GAAS,iCACT,IAOMC,EAAgC,CACpCC,OAAQ,kBACRC,OAAQ,SACRC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,gBAChBC,QAAS,UAGX,GAAiCC,EAAAA,EAAAA,KAAjC,eAAOC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACJF,EAAMG,OACRf,EAAQgB,KAAR,+BAAqCJ,EAAMG,OAE9C,GAAE,CAACH,EAAOZ,IAEX,IAAMiB,EAAcC,OAAOC,QAAQC,GACnC,OACE,UAAC,IAAD,CAAQC,UAAU,aAAlB,WACE,SAAC,IAAD,CAAWC,MAAM,QAAQC,SAAQ,WAAMN,EAAYO,OAAlB,QACjC,SAAC,YAAD,CAAgBH,UAAU,cAA1B,UACE,eAAII,MA9B0B,CAClCC,MAAO,OACPpB,QAAS,OACTqB,SAAU,OACVlB,eAAgB,iBA0BZ,SACGQ,EAAYW,KAAI,WAAcC,GAAd,mBAAEC,EAAF,KAAOC,EAAP,YACf,eAAcN,MAAOtB,EAArB,UACE,UAAC,KAAD,CAAmB6B,QAAS,kBAAMnB,EAAgB,IAAD,OAAKiB,EAAL,OAArB,EAA5B,WACE,SAACC,EAAD,CAAMN,MAAO,CAAEC,MAAO,WACtB,gBAAKD,MAAO,CAAEC,MAAO,OAAQO,SAAU,SAAUC,UAAW,UAA5D,SAAyEJ,QAHpEA,EADM,UAY1B,C","sources":["pages/Dev/Icons.tsx"],"sourcesContent":["import { useCopyToClipboard, useTitle } from 'react-use';\n// Ant Design Resources\nimport { Layout, App } from 'antd';\n// Components\nimport * as icons from 'icons/collection';\nimport { DevHeader } from './DevHeader';\nimport { TransparentButton } from 'components/buttons';\nimport { useEffect } from 'react';\n\nfunction IconsPage() {\n  const { message } = App.useApp();\n\n  useTitle('Icons | Dev | Tarde Divertida');\n  const styles: React.CSSProperties = {\n    width: '100%',\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n  };\n\n  const stylesLi: React.CSSProperties = {\n    border: '1px solid black',\n    margin: '0.5rem',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: '0.5rem',\n  };\n\n  const [state, copyToClipboard] = useCopyToClipboard();\n\n  useEffect(() => {\n    if (state.value) {\n      message.info(`Copied to clipboard: ${state.value}`);\n    }\n  }, [state, message]);\n\n  const iconEntries = Object.entries(icons);\n  return (\n    <Layout className=\"dev-layout\">\n      <DevHeader title=\"Icons\" subTitle={`(${iconEntries.length})`} />\n      <Layout.Content className=\"dev-content\">\n        <ul style={styles}>\n          {iconEntries.map(([key, Icon], index) => (\n            <li key={key} style={stylesLi}>\n              <TransparentButton onClick={() => copyToClipboard(`<${key} />`)}>\n                <Icon style={{ width: '90px' }} />\n                <div style={{ width: '90px', overflow: 'hidden', textAlign: 'center' }}>{key}</div>\n              </TransparentButton>\n            </li>\n          ))}\n        </ul>\n      </Layout.Content>\n    </Layout>\n  );\n}\n\nexport default IconsPage;\n"],"names":["message","App","useTitle","stylesLi","border","margin","display","flexDirection","alignItems","justifyContent","padding","useCopyToClipboard","state","copyToClipboard","useEffect","value","info","iconEntries","Object","entries","icons","className","title","subTitle","length","style","width","flexWrap","map","index","key","Icon","onClick","overflow","textAlign"],"sourceRoot":""}