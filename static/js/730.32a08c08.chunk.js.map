{"version":3,"file":"static/js/730.32a08c08.chunk.js","mappings":"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","sources":["games/crimes-hediondos/RulesBlobs.tsx","games/crimes-hediondos/ItemCard.tsx","games/crimes-hediondos/ContinueButton.tsx","games/crimes-hediondos/StepItemsSelection.tsx","games/crimes-hediondos/SceneTile.tsx","../node_modules/@ant-design/icons-svg/es/asn/PlusSquareFilled.js","../node_modules/@ant-design/icons/es/icons/PlusSquareFilled.js","games/crimes-hediondos/SelectedItems.tsx","games/crimes-hediondos/StepCauseOfDeathSelection.tsx","games/crimes-hediondos/StepLocationSelection.tsx","games/crimes-hediondos/StepReviewCrime.tsx","games/crimes-hediondos/StepReasonForEvidence.tsx","games/crimes-hediondos/PhaseCrimeSelection.tsx","games/crimes-hediondos/api-requests.ts","games/crimes-hediondos/mock.ts","../node_modules/@ant-design/icons-svg/es/asn/ClockCircleFilled.js","../node_modules/@ant-design/icons/es/icons/ClockCircleFilled.js","../node_modules/@ant-design/icons-svg/es/asn/SafetyOutlined.js","../node_modules/@ant-design/icons/es/icons/SafetyOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/GiftOutlined.js","../node_modules/@ant-design/icons/es/icons/GiftOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/ExceptionOutlined.js","../node_modules/@ant-design/icons/es/icons/ExceptionOutlined.js","games/crimes-hediondos/ItemCardEmpty.tsx","../node_modules/@ant-design/icons-svg/es/asn/WarningFilled.js","../node_modules/@ant-design/icons/es/icons/WarningFilled.js","games/crimes-hediondos/CrimeGuessStatus.tsx","games/crimes-hediondos/Crime.tsx","games/crimes-hediondos/GroupedItemsBoard.tsx","games/crimes-hediondos/StepNewScene.tsx","games/crimes-hediondos/PhaseSceneMarking.tsx","games/crimes-hediondos/helpers.tsx","games/crimes-hediondos/PlayersCards.tsx","games/crimes-hediondos/SelectableGroupedItemsBoard.tsx","games/crimes-hediondos/StepGuessing.tsx","games/crimes-hediondos/PhaseGuessing.tsx","games/crimes-hediondos/ResultsTable.tsx","games/crimes-hediondos/StepReveal.tsx","games/crimes-hediondos/StepRanking.tsx","games/crimes-hediondos/PhaseReveal.tsx","games/crimes-hediondos/PhaseGameOver.tsx","games/crimes-hediondos/SessionCrimesHediondos.tsx","../node_modules/@ant-design/icons-svg/es/asn/CloudUploadOutlined.js","../node_modules/@ant-design/icons/es/icons/CloudUploadOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/EnvironmentOutlined.js","../node_modules/@ant-design/icons/es/icons/EnvironmentOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/LockFilled.js","../node_modules/@ant-design/icons/es/icons/LockFilled.js","../node_modules/@ant-design/icons-svg/es/asn/QuestionCircleFilled.js","../node_modules/@ant-design/icons/es/icons/QuestionCircleFilled.js","../node_modules/@ant-design/icons-svg/es/asn/TrophyOutlined.js","../node_modules/@ant-design/icons/es/icons/TrophyOutlined.js"],"sourcesContent":["// Components\nimport { Instruction, Translate } from 'components';\n\nexport function WelcomeMessage(): JSX.Element {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Bem-vindo à Convenção Anual de Serial Killers!\n            <br />\n            Você e os outros serial killers decidiram fazer um jogo de adivinhação.\n            <br />\n            O objetivo é todos darem dicas sobre as circunstâncias que seus últimos crimes aconteceram para\n            ajudar os outros jogadores a descobrirem qual arma e qual objeto foram usados durante o crime.\n            <br />\n            Prontos para aterrorizar?\n          </>\n        }\n        en={\n          <>\n            Welcome to the Annual Serial Killers Con!\n            <br />\n            You and the other serial killers decided to make it a game out of it.\n            <br />\n            The goal is to give clues about the circunstancies your latest crime occurred so the other players\n            can guess what weapon and evidence were used during the crime.\n            <br />\n            Ready to terrorize?\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function GuessMessage(): JSX.Element {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Baseado nas informações dadas pelos jogadores, tente adivinhar qual arma e objeto cada jogador\n            usou em seu crime.\n            <br />\n            Você ganha pontos se adivinhar uma das cartas ou ambas as cartas, e você também ganha 1 ponto para\n            cada uma de suas cartas que os outros adivinharem, mas essa pontuação é secreta.\n          </>\n        }\n        en={\n          <>\n            Based on the information given by other players, try to guess the weapon and object used on their\n            crimes.\n            <br />\n            You get points for getting one or both cards correctly, and you get 1 point when other players get\n            each of your cards correctly, but these points are kept secret.\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function ScoringMessage({ round }: { round: GameRound }): JSX.Element {\n  const points = round.total - round.current + 1;\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Você ganha 1 ponto para cada arma ou objeto que você acertar.\n            <br />\n            Se você acertar o par de um jogador, você ganha {points} pontos.\n            <br />\n            Para todos os seus acertos, seus respectivos autores ganham 1 ponto.\n            <br />\n            Ganha o jogo o primeiro jogador que acertar tudo.\n          </>\n        }\n        en={\n          <>\n            You get 1 point for each weapon or evidence you get correctly.\n            <br />\n            If you get the pair for a player, you get {points} points instead.\n            <br />\n            All of your correct guesses grant 1 extra point to the authors.\n            <br />\n            Wins the game the player who get all correctly first.\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function GenericMessage(): JSX.Element {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Escrever msg aqui.\n            <br />\n            Prontos para aterrorizar?\n          </>\n        }\n        en={\n          <>\n            Message comes here.\n            <br />\n            Ready to terrorize?\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Popover, Tag } from 'antd';\n// Hooks\nimport { useDevFeatures, useLanguage } from 'hooks';\n// Components\nimport { ImageCard } from 'components';\n\ntype ItemCardProps = {\n  item: HCard;\n  cardWidth: number;\n  preview?: boolean;\n  isSelected?: boolean;\n  className?: string;\n  activeColor?: string;\n};\n\nexport function ItemCard({\n  item,\n  cardWidth,\n  activeColor,\n  preview = true,\n  isSelected = false,\n  className = '',\n}: ItemCardProps) {\n  const { language } = useLanguage();\n  const { isDebugEnabled } = useDevFeatures();\n  return (\n    <div\n      className={clsx('h-item-card', isSelected && 'h-item-card--selected', className)}\n      style={activeColor && isSelected ? { borderColor: 'black', backgroundColor: activeColor } : {}}\n    >\n      <Popover content={item.name[language].toUpperCase()}>\n        <Tag\n          className=\"h-item-card__name\"\n          color={item.type === 'weapon' ? 'geekblue' : 'volcano'}\n          style={{ maxWidth: `${cardWidth + 16}px` }}\n        >\n          <span>{isDebugEnabled ? item.id : item.name[language]}</span>\n        </Tag>\n      </Popover>\n      <ImageCard imageId={item.id} cardWidth={cardWidth} className=\"h-item-card__image\" preview={preview} />\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Button, ButtonProps } from 'antd';\n// State\nimport { Translate } from 'components';\n\ninterface ContinueButtonProps extends ButtonProps {\n  onClick: GenericFunction;\n  disabled?: boolean;\n  children?: string;\n}\n\nexport function ContinueButton({ onClick, children, disabled = false, ...props }: ContinueButtonProps) {\n  return (\n    <Button type=\"primary\" size=\"large\" disabled={disabled} onClick={onClick} {...props}>\n      {children ?? (\n        <>\n          »» <Translate pt=\"Próximo\" en=\"Next\" /> »»\n        </>\n      )}\n    </Button>\n  );\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks';\n// Utils\nimport { shuffle } from 'utils/helpers';\n// Components\nimport { ButtonContainer, Instruction, Step, Title, Translate, TransparentButton } from 'components';\nimport { ItemCard } from './ItemCard';\nimport { ContinueButton } from './ContinueButton';\n\ntype StepItemsSelectionProps = {\n  user: GamePlayer;\n  groupedItems: GroupedItems;\n  items: ItemsDict;\n  selections: PlainObject;\n  updateSelections: GenericFunction;\n};\n\nexport function StepItemsSelection({\n  user,\n  items,\n  groupedItems,\n  selections,\n  updateSelections,\n}: StepItemsSelectionProps) {\n  const [weaponId, setWeaponId] = useState<string>(selections.weaponId);\n  const [evidenceId, setEvidenceId] = useState<string>(selections.evidenceId);\n  const cardWidth = useCardWidth(12, 8, 50, 200);\n\n  const userItems = groupedItems[user.itemGroupIndex];\n\n  const onSelectItem = (item: HCard) => {\n    if (item.type === 'weapon') {\n      setWeaponId(item.id);\n    } else {\n      setEvidenceId(item.id);\n    }\n  };\n\n  const onRandomSelect = () => {\n    let randomWeaponId = '';\n    let randomEvidenceId = '';\n    shuffle(userItems).forEach((itemId) => {\n      if (items[itemId].type === 'weapon') {\n        randomWeaponId = itemId;\n      } else {\n        randomEvidenceId = itemId;\n      }\n    });\n    setWeaponId(randomWeaponId);\n    setEvidenceId(randomEvidenceId);\n  };\n\n  return (\n    <Step>\n      <Title>\n        <Translate pt=\"Qual foi seu último crime?\" en=\"How was your last crime?\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Selecione uma carta azul e uma carta vermelha.\n              <br />\n              Elas representam a arma usada em seu último crime e um objeto da cena do crime.\n              <br />O jogo contém 16 armas e 16 objetos, mas para essa parte, você vê apenas 4 opções de cada.\n            </>\n          }\n          en={\n            <>\n              Select a blue card and a red card.\n              <br />\n              They represent the weapon used in your latest crime and an object that was in the crime scene.\n              <br />\n              The game has 16 weapons and 16 objects, but for this phase, you only see 4 options of each.\n            </>\n          }\n        />\n      </Instruction>\n\n      <ButtonContainer>\n        <Button onClick={onRandomSelect} size=\"large\">\n          <Translate pt=\"Selecionar aleatoriamente\" en=\"Random picks\" />\n        </Button>\n\n        <ContinueButton\n          disabled={!weaponId || !evidenceId}\n          onClick={() => updateSelections({ weaponId, evidenceId })}\n        />\n      </ButtonContainer>\n\n      <ul className=\"h-items-selection\">\n        {userItems.map((itemId) => (\n          <li key={itemId} className=\"h-items-selection__item\">\n            <TransparentButton onClick={() => onSelectItem(items[itemId])}>\n              <ItemCard\n                item={items[itemId]}\n                cardWidth={cardWidth}\n                preview={false}\n                isSelected={[weaponId, evidenceId].includes(itemId)}\n              />\n            </TransparentButton>\n          </li>\n        ))}\n      </ul>\n    </Step>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Popover } from 'antd';\nimport { CheckCircleFilled } from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from 'hooks';\n\ntype SceneTileProps = {\n  tile: SceneTile;\n  index?: number;\n  onSelectValue?: GenericFunction;\n};\n\nexport function SceneTile({ tile, index, onSelectValue }: SceneTileProps) {\n  const { language } = useLanguage();\n  return (\n    <div className={clsx('h-scene-tile', `h-scene-tile--${tile.type}`)}>\n      <Popover content={tile.description[language]}>\n        <h4 className=\"h-scene-tile__title\">{tile.title[language]}</h4>\n      </Popover>\n      <ul className=\"h-scene-tile__options\">\n        {tile.values.map((entry, i) => {\n          const isActive = i === index;\n          return (\n            <li key={`${tile.id}-value-${i}`}>\n              <Button\n                className={clsx('h-scene-tile__button', `h-scene-tile__button--${tile.type}`)}\n                icon={isActive ? <CheckCircleFilled className=\"h-scene-tile__icon\" /> : undefined}\n                onClick={onSelectValue ? () => onSelectValue({ tileId: tile.id, value: i }) : () => {}}\n              >\n                {entry[language]}\n              </Button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","// This icon file is generated automatically.\nvar PlusSquareFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM704 536c0 4.4-3.6 8-8 8H544v152c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V544H328c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h152V328c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v152h152c4.4 0 8 3.6 8 8v48z\" } }] }, \"name\": \"plus-square\", \"theme\": \"filled\" };\nexport default PlusSquareFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusSquareFilledSvg from \"@ant-design/icons-svg/es/asn/PlusSquareFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PlusSquareFilled = function PlusSquareFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusSquareFilledSvg\n  }));\n};\n\nPlusSquareFilled.displayName = 'PlusSquareFilled';\nexport default /*#__PURE__*/React.forwardRef(PlusSquareFilled);","import clsx from 'clsx';\n// Ant Design Resources\nimport { PlusSquareFilled } from '@ant-design/icons';\n// Hooks\nimport { useCardWidth } from 'hooks';\n// Components\nimport { ItemCard } from './ItemCard';\n\ntype SelectedItemsProps = {\n  items: ItemsDict;\n  weaponId: string;\n  evidenceId: string;\n  fadeWeapon?: boolean;\n  fadeEvidence?: boolean;\n};\n\nexport function SelectedItems({\n  items,\n  weaponId,\n  evidenceId,\n  fadeWeapon = false,\n  fadeEvidence = false,\n}: SelectedItemsProps) {\n  const cardWidth = useCardWidth(12, 8, 50, 200);\n\n  return (\n    <ul className=\"h-items-crime-selection\">\n      <li>\n        <ItemCard\n          item={items[weaponId]}\n          cardWidth={cardWidth}\n          preview\n          className={clsx(fadeWeapon && 'h-items-crime-selection__faded')}\n        />\n      </li>\n      <li>\n        <PlusSquareFilled style={{ color: 'white' }} />\n      </li>\n      <li>\n        <ItemCard\n          item={items[evidenceId]}\n          cardWidth={cardWidth}\n          preview\n          className={clsx(fadeEvidence && 'h-items-crime-selection__faded')}\n        />\n      </li>\n    </ul>\n  );\n}\n","import { useState } from 'react';\n// Components\nimport { ButtonContainer, Instruction, Step, Title, Translate } from 'components';\nimport { SceneTile } from './SceneTile';\nimport { SelectedItems } from './SelectedItems';\nimport { ContinueButton } from './ContinueButton';\n\ntype StepCauseOfDeathSelectionProps = {\n  items: ItemsDict;\n  selections: PlainObject;\n  updateSelections: GenericFunction;\n  causeOfDeathTile: SceneTile;\n};\n\nexport function StepCauseOfDeathSelection({\n  items,\n  selections,\n  updateSelections,\n  causeOfDeathTile,\n}: StepCauseOfDeathSelectionProps) {\n  const [causeOfDeathIndex, setCauseOfDeathIndex] = useState<number>();\n\n  const onSelectItem = (payload: SceneTilePayload) => {\n    setCauseOfDeathIndex(payload.value);\n  };\n\n  return (\n    <Step>\n      <Title>\n        <Translate pt=\"Qual foi seu último crime?\" en=\"How was your last crime?\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>Baseado somente em sua arma do crime (carta azul), selecione a causa da morte de sua vítima.</>\n          }\n          en={<>Based solely on the weapon (blue card) you've chosen, select your victim's cause of death.</>}\n        />\n      </Instruction>\n\n      <ButtonContainer>\n        <SelectedItems\n          items={items}\n          weaponId={selections.weaponId}\n          evidenceId={selections.evidenceId}\n          fadeEvidence\n        />\n\n        <SceneTile tile={causeOfDeathTile} onSelectValue={onSelectItem} index={causeOfDeathIndex} />\n      </ButtonContainer>\n\n      <ButtonContainer>\n        <ContinueButton\n          disabled={causeOfDeathIndex === undefined}\n          onClick={() => updateSelections({ causeOfDeath: causeOfDeathIndex })}\n        />\n      </ButtonContainer>\n    </Step>\n  );\n}\n","import { useState } from 'react';\n// Hooks\nimport { useCardWidth } from 'hooks';\n// Components\nimport { ButtonContainer, Instruction, Step, Title, Translate } from 'components';\nimport { ItemCard } from './ItemCard';\nimport { SceneTile } from './SceneTile';\nimport { ContinueButton } from './ContinueButton';\n\ntype StepLocationSelectionProps = {\n  user: GamePlayer;\n  items: ItemsDict;\n  selections: PlainObject;\n  updateSelections: GenericFunction;\n  locationTiles: SceneTile[];\n  groupedItems: GroupedItems;\n};\n\nexport function StepLocationSelection({\n  user,\n  items,\n  selections,\n  updateSelections,\n  locationTiles,\n  groupedItems,\n}: StepLocationSelectionProps) {\n  const cardWidth = useCardWidth(12, 8, 50, 200);\n  const [location, setLocation] = useState<PlainObject>();\n\n  const userItems = groupedItems[user.itemGroupIndex];\n\n  const onSelectItem = (payload: SceneTilePayload) => {\n    setLocation(payload);\n  };\n\n  return (\n    <Step>\n      <Title>\n        <Translate pt=\"Onde foi o crime?\" en=\"Where was the crime?\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Baseado em qualquer uma das suas cartas (ou ambas), selecione o local onde o crime aconteceu.\n              <br />\n              Temos 4 colunas de locais agrupador por tema, selecione qualquer um.\n              <br />\n              Lembre-se que você está tentando ajudar os outros jogadores adivinhar o seu crime, seja\n              inteligente!\n            </>\n          }\n          en={\n            <>\n              Based on any card (or both), select where the crime occurred.\n              <br />\n              There are 4 columns of locations grouped by theme, you may select any.\n              <br />\n              Remember you are trying to help the players guess your crime, so be smart!\n            </>\n          }\n        />\n      </Instruction>\n\n      <ul className=\"h-items-selection\">\n        {userItems.map((itemId) => (\n          <li key={itemId} className=\"h-items-selection__item\">\n            <ItemCard\n              item={items[itemId]}\n              cardWidth={cardWidth}\n              preview={false}\n              isSelected={[selections.weaponId, selections.evidenceId].includes(itemId)}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"h-scene-tiles-list\">\n        {locationTiles.map((tile) => (\n          <SceneTile\n            key={tile.id}\n            tile={tile}\n            onSelectValue={onSelectItem}\n            index={location?.tileId === tile.id ? location?.value : undefined}\n          />\n        ))}\n      </div>\n\n      <ButtonContainer>\n        <ContinueButton\n          disabled={location?.tileId === undefined}\n          onClick={() => updateSelections({ locationTile: location?.tileId, locationIndex: location?.value })}\n        />\n      </ButtonContainer>\n    </Step>\n  );\n}\n","// Ant Design Resources\nimport { Button } from 'antd';\nimport { CloudUploadOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from 'hooks';\n// Components\nimport { ButtonContainer, Instruction, ReadyPlayersBar, Step, Title, Translate } from 'components';\nimport { SceneTile } from './SceneTile';\nimport { SelectedItems } from './SelectedItems';\n\ntype StepReviewCrimeProps = {\n  items: ItemsDict;\n  selections: PlainObject;\n  onSubmitCrime: GenericFunction;\n  locationTiles: SceneTile[];\n  causeOfDeathTile: SceneTile;\n  reasonForEvidenceTile: SceneTile;\n  updateSelection: GenericFunction;\n  players: GamePlayers;\n};\n\nexport function StepReviewCrime({\n  items,\n  causeOfDeathTile,\n  reasonForEvidenceTile,\n  locationTiles,\n  selections,\n  onSubmitCrime,\n  updateSelection,\n  players,\n}: StepReviewCrimeProps) {\n  const { translate } = useLanguage();\n\n  const locationTile = locationTiles.find((location) => location.id === selections.locationTile);\n\n  return (\n    <Step>\n      <Title>\n        <Translate pt=\"Seu crime tá bom?\" en=\"Is your crime alright?\" />\n      </Title>\n      <Instruction contained>\n        <Translate pt={<>Revise seu crime.</>} en={<>Recap your crime.</>} />\n      </Instruction>\n\n      <SelectedItems items={items} weaponId={selections.weaponId} evidenceId={selections.evidenceId} />\n\n      <div className=\"h-scene-tiles-list\">\n        <SceneTile\n          tile={causeOfDeathTile}\n          index={selections.causeOfDeath}\n          onSelectValue={(payload) => updateSelection({ causeOfDeath: payload.value })}\n        />\n        <SceneTile\n          tile={reasonForEvidenceTile}\n          index={selections.reasonForEvidence}\n          onSelectValue={(payload) => updateSelection({ reasonForEvidence: payload.value })}\n        />\n        <SceneTile\n          tile={locationTile!}\n          index={selections.locationIndex}\n          onSelectValue={(payload) =>\n            updateSelection({ locationTile: payload.tileId, locationIndex: payload.value })\n          }\n        />\n      </div>\n\n      <ButtonContainer>\n        <Button type=\"primary\" size=\"large\" onClick={onSubmitCrime} icon={<CloudUploadOutlined />}>\n          <Translate pt=\"Enviar\" en=\"Submit\" />\n        </Button>\n      </ButtonContainer>\n\n      <ReadyPlayersBar\n        players={players}\n        readyText={translate('Já cometi meu crime', \"I'm done committing my crime\")}\n        readyTextPlural={translate('Já cometemos nossos crimes', \"We're done committing our crimes\")}\n      />\n    </Step>\n  );\n}\n","import { useState } from 'react';\n// Components\nimport { ButtonContainer, Instruction, Step, Title, Translate } from 'components';\nimport { SceneTile } from './SceneTile';\nimport { SelectedItems } from './SelectedItems';\nimport { ContinueButton } from './ContinueButton';\n\ntype StepReasonForEvidenceProps = {\n  items: ItemsDict;\n  selections: PlainObject;\n  updateSelections: GenericFunction;\n  reasonForEvidenceTile: SceneTile;\n};\n\nexport function StepReasonForEvidence({\n  items,\n  selections,\n  updateSelections,\n  reasonForEvidenceTile,\n}: StepReasonForEvidenceProps) {\n  const [reasonForEvidenceIndex, setReasonForEvidenceIndex] = useState<number>();\n\n  const onSelectItem = (payload: SceneTilePayload) => {\n    setReasonForEvidenceIndex(payload.value);\n  };\n\n  return (\n    <Step>\n      <Title>\n        <Translate pt=\"Qual foi seu último crime?\" en=\"How was your last crime?\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Baseado somente em seu objeto (carta vermelha), selecione o que o objeto significa para o crime.\n            </>\n          }\n          en={\n            <>Based solely on the object (red card) you've chosen, select the meaning of it to the crime.</>\n          }\n        />\n      </Instruction>\n\n      <ButtonContainer>\n        <SelectedItems\n          items={items}\n          weaponId={selections.weaponId}\n          evidenceId={selections.evidenceId}\n          fadeWeapon\n        />\n\n        <SceneTile tile={reasonForEvidenceTile} onSelectValue={onSelectItem} index={reasonForEvidenceIndex} />\n      </ButtonContainer>\n\n      <ButtonContainer>\n        <ContinueButton\n          disabled={reasonForEvidenceIndex === undefined}\n          onClick={() => updateSelections({ reasonForEvidence: reasonForEvidenceIndex })}\n        />\n      </ButtonContainer>\n    </Step>\n  );\n}\n","import { useState } from 'react';\n// State & Hooks\nimport { useIsUserReady, useUser, useLanguage, useMock, useStep } from 'hooks';\nimport { useOnSubmitCrimeAPIRequest } from './api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\nimport { mockCrime } from './mock';\n// Components\nimport {\n  ImageCardPreloadHand,\n  Instruction,\n  PhaseAnnouncement,\n  PhaseContainer,\n  RoundAnnouncement,\n  StepSwitcher,\n  Translate,\n} from 'components';\nimport { WelcomeMessage } from './RulesBlobs';\nimport { StepItemsSelection } from './StepItemsSelection';\nimport { StepCauseOfDeathSelection } from './StepCauseOfDeathSelection';\nimport { StepLocationSelection } from './StepLocationSelection';\nimport { StepReviewCrime } from './StepReviewCrime';\nimport { StepReasonForEvidence } from './StepReasonForEvidence';\n\nfunction PhaseCrimeSelection({ players, state, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, setStep, goToNextStep } = useStep(0);\n  const user = useUser(players);\n  const isUserReady = useIsUserReady(players, state);\n  const [selections, setSelections] = useState<SubmitCrimePayload>({});\n\n  const onSubmitCrimeRequest = useOnSubmitCrimeAPIRequest(setStep);\n\n  const onSubmitCrime = () => {\n    onSubmitCrimeRequest(selections);\n  };\n\n  const updateSelections = (payload: SubmitCrimePayload) => {\n    setSelections((s: SubmitCrimePayload) => ({ ...s, ...payload }));\n    goToNextStep();\n  };\n\n  const updateSelection = (payload: SubmitCrimePayload) => {\n    setSelections((s: SubmitCrimePayload) => ({ ...s, ...payload }));\n  };\n\n  useMock(() => {\n    if (step === 1) {\n      onSubmitCrimeRequest(mockCrime(state.groupedItems[user.itemGroupIndex]));\n    }\n  }, [step]);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.CRIMES_HEDIONDOS.CRIME_SELECTION}>\n      <StepSwitcher step={step} conditions={[!isUserReady, !isUserReady, !isUserReady]} players={players}>\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state?.round}\n          onPressButton={goToNextStep}\n          buttonText=\" \"\n          time={5}\n          circleColor=\"black\"\n        >\n          <ImageCardPreloadHand hand={Object.keys(state.items)} />\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <PhaseAnnouncement\n          type=\"event\"\n          title={translate('A Convenção', 'The Convention')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          duration={30}\n        >\n          <WelcomeMessage />\n        </PhaseAnnouncement>\n\n        {/* Step 2 */}\n        <StepItemsSelection\n          user={user}\n          groupedItems={state.groupedItems}\n          items={state.items}\n          selections={selections}\n          updateSelections={updateSelections}\n        />\n\n        {/* Step 3 */}\n        <PhaseAnnouncement\n          type=\"skull\"\n          title={translate('Causa da Morte', 'Cause of Death')}\n          onClose={goToNextStep}\n          duration={5}\n        >\n          <Instruction>\n            <Translate pt=\"Como a vítima morreu?\" en=\"How did the victim die?\" />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 4 */}\n        <StepCauseOfDeathSelection\n          items={state.items}\n          causeOfDeathTile={state.causeOfDeathTile}\n          selections={selections}\n          updateSelections={updateSelections}\n        />\n\n        {/* Step 5 */}\n        <PhaseAnnouncement\n          type=\"crime-scene\"\n          title={translate('Evidências?', 'Evidence?')}\n          onClose={goToNextStep}\n          duration={5}\n        >\n          <Instruction>\n            <Translate\n              pt=\"Conte-nos sobre o objeto que você escolheu.\"\n              en=\"Tell us about the object you selected.\"\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 6 */}\n        <StepReasonForEvidence\n          items={state.items}\n          reasonForEvidenceTile={state.reasonForEvidenceTile}\n          selections={selections}\n          updateSelections={updateSelections}\n        />\n\n        {/* Step 7 */}\n        <PhaseAnnouncement\n          type=\"location\"\n          title={translate('Local do Crime', 'Crime Location')}\n          onClose={goToNextStep}\n          duration={5}\n        >\n          <Instruction>\n            <Translate pt=\"Onde que foi?\" en=\"Where was it?\" />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 8 */}\n        <StepLocationSelection\n          user={user}\n          items={state.items}\n          groupedItems={state.groupedItems}\n          locationTiles={state.locationTiles}\n          selections={selections}\n          updateSelections={updateSelections}\n        />\n\n        {/* Step 9 */}\n        <PhaseAnnouncement\n          type=\"crime-tape\"\n          title={translate('Revisão', 'Review')}\n          onClose={goToNextStep}\n          duration={5}\n        />\n\n        {/* Step 10 */}\n        <StepReviewCrime\n          items={state.items}\n          causeOfDeathTile={state.causeOfDeathTile}\n          reasonForEvidenceTile={state.reasonForEvidenceTile}\n          locationTiles={state.locationTiles}\n          selections={selections}\n          onSubmitCrime={onSubmitCrime}\n          updateSelection={updateSelection}\n          players={players}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseCrimeSelection;\n","import { CRIMES_HEDIONDOS_API } from 'adapters';\nimport { useAPICall, useLanguage } from 'hooks';\n\nexport function useOnSubmitCrimeAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: CRIMES_HEDIONDOS_API.submitAction,\n    actionName: 'submit-crime',\n    onBeforeCall: () => setStep(11),\n    onError: () => setStep(9),\n    successMessage: translate('Crime enviado com sucesso', 'Crime submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar seu crime',\n      'Oops, the application failed to send your crime'\n    ),\n  });\n\n  return (payload: SubmitCrimePayload) => {\n    request({\n      action: 'SUBMIT_CRIME',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitMarkAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: CRIMES_HEDIONDOS_API.submitAction,\n    actionName: 'submit-mark',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(2),\n    successMessage: translate(\n      'Nova informação enviadas com sucesso',\n      'New information submitted successfully'\n    ),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar a nova informação',\n      'Oops, the application failed to send the new information'\n    ),\n  });\n\n  return (payload: SubmitMarkPayload) => {\n    request({\n      action: 'SUBMIT_MARK',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitGuessesAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: CRIMES_HEDIONDOS_API.submitAction,\n    actionName: 'submit-guesses',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate('Respostas enviadas com sucesso', 'Guesses submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar suas respostas',\n      'Oops, the application failed to send your guesses'\n    ),\n  });\n\n  return (payload: SubmitGuessesPayload) => {\n    request({\n      action: 'SUBMIT_GUESSES',\n      ...payload,\n    });\n  };\n}\n","import { SEPARATOR } from 'utils/constants';\nimport { getLastItem, getRandomItem, shuffle } from 'utils/helpers';\n\nexport const mockCrime = (itemsGroup: string[]): SubmitCrimePayload => {\n  const shuffledItems = shuffle(itemsGroup);\n  const weapon = shuffledItems.find((e) => e?.includes('wp'));\n  const evidence = shuffledItems.find((e) => e?.includes('ev'));\n  const locationTileId = `location-tile-${getRandomItem([1, 2, 3, 4])}`;\n  const options = [0, 1, 2, 3, 4, 5];\n\n  return {\n    weaponId: weapon,\n    evidenceId: evidence,\n    causeOfDeath: getRandomItem(options),\n    reasonForEvidence: getRandomItem(options),\n    locationTile: locationTileId,\n    locationIndex: getRandomItem(options),\n  };\n};\n\nexport const mockGuesses = (groupedItems: GroupedItems, players: GamePlayers, user: GamePlayer) => {\n  // TODO: intelligent guessing based on history\n\n  return Object.values(players).reduce((acc: any, player) => {\n    if (player.id !== user.id) {\n      const historyForThisTarget = user.history?.[player.id] ?? [];\n\n      const lastGuess: GuessHistoryEntry = getLastItem(historyForThisTarget);\n\n      if (lastGuess) {\n        // If correct or locked\n        if (lastGuess.status === 'CORRECT' || lastGuess.status === 'LOCKED') {\n          acc[player.id] = {\n            weaponId: lastGuess.weaponId,\n            evidenceId: lastGuess.evidenceId,\n          };\n          return acc;\n        }\n\n        // If half or wrong\n        if (lastGuess.status === 'HALF' || lastGuess.status === 'WRONG') {\n          const group = groupedItems[lastGuess.groupIndex];\n          const weapons: string[] = group.filter((e) => e?.includes('wp'));\n          const evidences: string[] = group.filter((e) => e?.includes('ev'));\n\n          const previousPicksDict = historyForThisTarget.reduce(\n            (acc: BooleanDictionary, entry: GuessHistoryEntry) => {\n              acc[`${entry.weaponId}${SEPARATOR}${entry.evidenceId}`] = true;\n              return acc;\n            },\n            {}\n          );\n          let pair = `${getRandomItem(weapons)}${SEPARATOR}${getRandomItem(evidences)}`;\n\n          while (previousPicksDict[pair]) {\n            pair = `${getRandomItem(weapons)}${SEPARATOR}${getRandomItem(evidences)}`;\n          }\n\n          const [weaponId, evidenceId] = pair.split(SEPARATOR);\n\n          acc[player.id] = {\n            weaponId,\n            evidenceId,\n          };\n          return acc;\n        }\n\n        // If wrong group\n        const previouslyWrongGroups = historyForThisTarget.reduce((t: number[], guess: GuessHistoryEntry) => {\n          if (guess.status === 'WRONG_GROUP') {\n            t.push(guess.groupIndex);\n          }\n          return t;\n        }, []);\n        const availableGroups = [0, 1, 2, 3]\n          .filter((i) => !previouslyWrongGroups.includes(i))\n          .map((i) => groupedItems[i]);\n        const randomGroup = getRandomItem(availableGroups);\n\n        const weapons: string[] = randomGroup.filter((e) => e?.includes('wp'));\n        const evidences: string[] = randomGroup.filter((e) => e?.includes('ev'));\n        acc[player.id] = {\n          weaponId: getRandomItem(weapons),\n          evidenceId: getRandomItem(evidences),\n        };\n        return acc;\n      }\n\n      // If no history exists\n      const randomGroup = getRandomItem(Object.values(groupedItems));\n      const weapons: string[] = randomGroup.filter((e) => e?.includes('wp'));\n      const evidences: string[] = randomGroup.filter((e) => e?.includes('ev'));\n      acc[player.id] = {\n        weaponId: getRandomItem(weapons),\n        evidenceId: getRandomItem(evidences),\n      };\n    }\n    return acc;\n  }, {});\n};\n\nexport const mockSceneMark = () => {\n  return getRandomItem([0, 1, 2, 3, 4, 5]);\n};\n","// This icon file is generated automatically.\nvar ClockCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm176.5 585.7l-28.6 39a7.99 7.99 0 01-11.2 1.7L483.3 569.8a7.92 7.92 0 01-3.3-6.5V288c0-4.4 3.6-8 8-8h48.1c4.4 0 8 3.6 8 8v247.5l142.6 103.1c3.6 2.5 4.4 7.5 1.8 11.1z\" } }] }, \"name\": \"clock-circle\", \"theme\": \"filled\" };\nexport default ClockCircleFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ClockCircleFilledSvg from \"@ant-design/icons-svg/es/asn/ClockCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ClockCircleFilled = function ClockCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ClockCircleFilledSvg\n  }));\n};\n\nClockCircleFilled.displayName = 'ClockCircleFilled';\nexport default /*#__PURE__*/React.forwardRef(ClockCircleFilled);","// This icon file is generated automatically.\nvar SafetyOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"0 0 1024 1024\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64L128 192v384c0 212.1 171.9 384 384 384s384-171.9 384-384V192L512 64zm312 512c0 172.3-139.7 312-312 312S200 748.3 200 576V246l312-110 312 110v330z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M378.4 475.1a35.91 35.91 0 00-50.9 0 35.91 35.91 0 000 50.9l129.4 129.4 2.1 2.1a33.98 33.98 0 0048.1 0L730.6 434a33.98 33.98 0 000-48.1l-2.8-2.8a33.98 33.98 0 00-48.1 0L483 579.7 378.4 475.1z\" } }] }, \"name\": \"safety\", \"theme\": \"outlined\" };\nexport default SafetyOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SafetyOutlinedSvg from \"@ant-design/icons-svg/es/asn/SafetyOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar SafetyOutlined = function SafetyOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: SafetyOutlinedSvg\n  }));\n};\n\nSafetyOutlined.displayName = 'SafetyOutlined';\nexport default /*#__PURE__*/React.forwardRef(SafetyOutlined);","// This icon file is generated automatically.\nvar GiftOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M880 310H732.4c13.6-21.4 21.6-46.8 21.6-74 0-76.1-61.9-138-138-138-41.4 0-78.7 18.4-104 47.4-25.3-29-62.6-47.4-104-47.4-76.1 0-138 61.9-138 138 0 27.2 7.9 52.6 21.6 74H144c-17.7 0-32 14.3-32 32v200c0 4.4 3.6 8 8 8h40v344c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V550h40c4.4 0 8-3.6 8-8V342c0-17.7-14.3-32-32-32zm-334-74c0-38.6 31.4-70 70-70s70 31.4 70 70-31.4 70-70 70h-70v-70zm-138-70c38.6 0 70 31.4 70 70v70h-70c-38.6 0-70-31.4-70-70s31.4-70 70-70zM180 482V378h298v104H180zm48 68h250v308H228V550zm568 308H546V550h250v308zm48-376H546V378h298v104z\" } }] }, \"name\": \"gift\", \"theme\": \"outlined\" };\nexport default GiftOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport GiftOutlinedSvg from \"@ant-design/icons-svg/es/asn/GiftOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar GiftOutlined = function GiftOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: GiftOutlinedSvg\n  }));\n};\n\nGiftOutlined.displayName = 'GiftOutlined';\nexport default /*#__PURE__*/React.forwardRef(GiftOutlined);","// This icon file is generated automatically.\nvar ExceptionOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm376 116c-119.3 0-216 96.7-216 216s96.7 216 216 216 216-96.7 216-216-96.7-216-216-216zm107.5 323.5C750.8 868.2 712.6 884 672 884s-78.8-15.8-107.5-44.5C535.8 810.8 520 772.6 520 732s15.8-78.8 44.5-107.5C593.2 595.8 631.4 580 672 580s78.8 15.8 107.5 44.5C808.2 653.2 824 691.4 824 732s-15.8 78.8-44.5 107.5zM640 812a32 32 0 1064 0 32 32 0 10-64 0zm12-64h40c4.4 0 8-3.6 8-8V628c0-4.4-3.6-8-8-8h-40c-4.4 0-8 3.6-8 8v112c0 4.4 3.6 8 8 8zM440 852H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"exception\", \"theme\": \"outlined\" };\nexport default ExceptionOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ExceptionOutlinedSvg from \"@ant-design/icons-svg/es/asn/ExceptionOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ExceptionOutlined = function ExceptionOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ExceptionOutlinedSvg\n  }));\n};\n\nExceptionOutlined.displayName = 'ExceptionOutlined';\nexport default /*#__PURE__*/React.forwardRef(ExceptionOutlined);","// Components\nimport { ItemCard } from './ItemCard';\n\ntype ItemCardEmptyProps = {\n  cardWidth: number;\n  cardType: 'evidence' | 'weapon';\n};\n\nexport function ItemCardEmpty({ cardWidth, cardType }: ItemCardEmptyProps) {\n  return (\n    <ItemCard\n      item={{\n        id: `dmhk-${cardType === 'evidence' ? 'ev' : 'wp'}-000`,\n        type: cardType,\n        name: {\n          pt: '?',\n          en: '?',\n        },\n      }}\n      cardWidth={cardWidth}\n      isSelected={false}\n      preview={false}\n    />\n  );\n}\n","// This icon file is generated automatically.\nvar WarningFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M955.7 856l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48zM480 416c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v184c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V416zm32 352a48.01 48.01 0 010-96 48.01 48.01 0 010 96z\" } }] }, \"name\": \"warning\", \"theme\": \"filled\" };\nexport default WarningFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport WarningFilledSvg from \"@ant-design/icons-svg/es/asn/WarningFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar WarningFilled = function WarningFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: WarningFilledSvg\n  }));\n};\n\nWarningFilled.displayName = 'WarningFilled';\nexport default /*#__PURE__*/React.forwardRef(WarningFilled);","import clsx from 'clsx';\n// Ant Design Resources\nimport {\n  CheckCircleFilled,\n  CloseCircleFilled,\n  LockFilled,\n  MinusCircleFilled,\n  QuestionCircleFilled,\n  WarningFilled,\n} from '@ant-design/icons';\n// Components\nimport { Translate } from 'components';\n\ntype CrimeGuessStatusProps = {\n  status: string;\n  withDescription?: boolean;\n  className?: string;\n};\n\nexport function CrimeGuessStatus({ status, withDescription = false, className = '' }: CrimeGuessStatusProps) {\n  const baseClass = 'crime-guess-status';\n\n  switch (status) {\n    case 'LOCKED':\n      return (\n        <span className={clsx(baseClass, `${baseClass}--${status}`, className)}>\n          <LockFilled color=\"gray\" />\n          <Translate pt=\"TRAVADO\" en=\"LOCKED\" />\n          {withDescription && (\n            <Translate\n              pt=\": Você já tinha adivinhado esse corretamente\"\n              en=\": You already guessed this one correctly\"\n            />\n          )}\n        </span>\n      );\n    case 'CORRECT':\n      return (\n        <span className={clsx(baseClass, `${baseClass}--${status}`, className)}>\n          <CheckCircleFilled color=\"green\" />\n          <Translate pt=\"CORRETO\" en=\"CORRECT\" />\n          {withDescription && (\n            <Translate pt=\": Você acertou arma e objeto\" en=\": You got the weapon and object correctly\" />\n          )}\n        </span>\n      );\n    case 'HALF':\n      return (\n        <span className={clsx(baseClass, `${baseClass}--${status}`, className)}>\n          <MinusCircleFilled />\n          <Translate pt=\"SOMENTE UM\" en=\"ONE ONLY\" />\n          {withDescription && (\n            <Translate pt=\": Um dos items está correto\" en=\": One of the items is correct\" />\n          )}\n        </span>\n      );\n    case 'WRONG':\n      return (\n        <span className={clsx(baseClass, `${baseClass}--${status}`, className)}>\n          <CloseCircleFilled color=\"red\" />\n          <Translate pt=\"ERRADO\" en=\"WRONG\" />\n          {withDescription && (\n            <Translate pt=\": Você errou ambos arma e objeto\" en=\": You got both weapon and object wrong\" />\n          )}\n        </span>\n      );\n    case 'WRONG_GROUP':\n      return (\n        <span className={clsx(baseClass, `${baseClass}--${status}`, className)}>\n          <WarningFilled color=\"red\" />\n          <Translate pt=\"GRUPO ERRADO\" en=\"WRONG GROUP\" />\n          {withDescription && (\n            <Translate\n              pt=\": Você é tão burro que você escolheu items no grupo errado\"\n              en=\": You're so dumb you chose items in the wrong group\"\n            />\n          )}\n        </span>\n      );\n    default:\n      return (\n        <span className={clsx(baseClass, `${baseClass}--${status}`, className)}>\n          <QuestionCircleFilled />\n          <Translate pt=\"?\" en=\"?\" />\n          );\n          {withDescription && (\n            <Translate pt=\": Recebido status desconhecido\" en=\": Received unknown guess status\" />\n          )}\n        </span>\n      );\n  }\n}\n","import { useState } from 'react';\nimport clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Tooltip } from 'antd';\nimport {\n  CheckCircleFilled,\n  ClockCircleFilled,\n  EnvironmentOutlined,\n  ExceptionOutlined,\n  GiftOutlined,\n  LockFilled,\n  SafetyOutlined,\n} from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from 'hooks';\n// Utils\nimport { getAvatarColorById } from 'utils/helpers';\n// Components\nimport { Avatar, Translate } from 'components';\nimport { ItemCard } from './ItemCard';\nimport { ItemCardEmpty } from './ItemCardEmpty';\nimport { CrimeGuessStatus } from './CrimeGuessStatus';\n\nconst CARD_WIDTH = 100;\n\ntype CrimeProps = {\n  history?: GuessHistoryEntry[];\n  crime: Crime;\n  items: ItemsDict;\n  player: GamePlayer;\n  scenes: ScenesDict;\n  scenesOrder: string[];\n  selectedWeaponId?: CardId;\n  selectedEvidenceId?: CardId;\n  isLocked?: boolean;\n};\n\nexport function Crime({\n  crime,\n  player,\n  scenesOrder,\n  scenes,\n  selectedWeaponId,\n  selectedEvidenceId,\n  history,\n  items,\n  isLocked,\n}: CrimeProps) {\n  const [historyEntryIndex, setHistoryEntryIndex] = useState(-1);\n  const isComplete = Boolean(selectedWeaponId && selectedWeaponId);\n\n  const activeWeaponId =\n    historyEntryIndex >= 0 && history ? history[historyEntryIndex].weaponId : selectedWeaponId;\n\n  const evidenceWeaponId =\n    historyEntryIndex >= 0 && history ? history[historyEntryIndex].evidenceId : selectedEvidenceId;\n\n  const color = getAvatarColorById(player.avatarId);\n  const hasHistory = history && history.length;\n\n  return (\n    <div className=\"h-crime\">\n      <div className=\"h-crime__player\" style={{ backgroundColor: color }}>\n        <span className=\"h-crime__player-avatar\">\n          <Avatar id={player.avatarId} />\n        </span>\n        <span className=\"h-crime__player-name\">{player.name}</span>\n      </div>\n\n      <div className=\"h-crime__scenes\">\n        {scenesOrder\n          .filter((sceneId) => crime.scenes[sceneId] !== undefined)\n          .map((sceneId) => {\n            const scene = scenes[sceneId];\n\n            return (\n              <CrimeScene\n                key={`crime-scene-${sceneId}-by-${crime.playerId}`}\n                scene={scene}\n                playerIndex={crime.scenes[sceneId]}\n              />\n            );\n          })}\n      </div>\n\n      <div className=\"h-crime__history\" style={{ borderColor: hasHistory ? color : 'transparent' }}>\n        {hasHistory && (\n          <>\n            <div className=\"h-crime__history-header\">\n              <Tooltip\n                title={\n                  <Translate\n                    pt=\"Histórico: passe o mouse nas rodadas\"\n                    en=\"History: hover the round numbers\"\n                  />\n                }\n              >\n                <ClockCircleFilled />\n              </Tooltip>\n            </div>\n            {history?.map((_, index) => {\n              return (\n                <Button\n                  key={`history-entry-${index}`}\n                  ghost\n                  shape=\"circle\"\n                  size=\"small\"\n                  onMouseOver={() => setHistoryEntryIndex(index)}\n                  onMouseLeave={() => setHistoryEntryIndex(-1)}\n                >\n                  {index + 1}\n                </Button>\n              );\n            })}\n          </>\n        )}\n      </div>\n\n      <div className=\"h-crime-selections\">\n        {activeWeaponId ? (\n          <ItemCard item={items[activeWeaponId]} cardWidth={CARD_WIDTH} preview />\n        ) : (\n          <ItemCardEmpty cardWidth={CARD_WIDTH} cardType=\"weapon\" />\n        )}\n\n        {evidenceWeaponId ? (\n          <ItemCard item={items[evidenceWeaponId]} cardWidth={CARD_WIDTH} preview />\n        ) : (\n          <ItemCardEmpty cardWidth={CARD_WIDTH} cardType=\"evidence\" />\n        )}\n\n        <div className=\"h-crime-selections__status\">\n          {historyEntryIndex >= 0 && history && history[historyEntryIndex] && (\n            <CrimeGuessStatus status={history[historyEntryIndex].status} />\n          )}\n          {historyEntryIndex === -1 && isLocked && <CrimeGuessStatus status=\"LOCKED\" />}\n        </div>\n      </div>\n\n      <div className=\"h-crime__player\" style={{ backgroundColor: isComplete ? color : undefined }}>\n        {isLocked && <LockFilled />}\n        {!isLocked && isComplete && <CheckCircleFilled />}\n      </div>\n    </div>\n  );\n}\n\ntype CrimeSceneProps = {\n  scene: SceneTile;\n  playerIndex: number;\n};\n\nfunction CrimeScene({ scene, playerIndex }: CrimeSceneProps) {\n  const { language } = useLanguage();\n  return (\n    <li className={clsx('h-crime-scene', `h-crime-scene--${scene.type}`)}>\n      <div className={clsx('h-crime-scene__label', `h-crime-scene__label--${scene.type}`)}>\n        <CrimeSceneIcon type={scene.type} /> {scene.title[language]}\n      </div>\n      <div className=\"h-crime-scene__value\">{scene.values[playerIndex][language]}</div>\n    </li>\n  );\n}\n\ntype CrimeSceneIconProps = {\n  type: string;\n};\n\nfunction CrimeSceneIcon({ type }: CrimeSceneIconProps) {\n  switch (type) {\n    case 'cause':\n      return <SafetyOutlined />;\n    case 'evidence':\n      return <GiftOutlined />;\n    case 'location':\n      return <EnvironmentOutlined />;\n    default:\n      return <ExceptionOutlined />;\n  }\n}\n","// Hooks\nimport { useCardWidth } from 'hooks';\n// Components\nimport { ItemCard } from './ItemCard';\n\ntype GroupedItemsBoardProps = {\n  groupedItems: GroupedItems;\n  items: ItemsDict;\n  weaponId?: string;\n  evidenceId?: string;\n};\n\nexport function GroupedItemsBoard({ items, weaponId, evidenceId, groupedItems }: GroupedItemsBoardProps) {\n  const cardWidth = useCardWidth(12, 8, 30, 200);\n  return (\n    <ul className=\"h-grouped-items-board\">\n      {Object.values(groupedItems).map((group, index) => (\n        <li key={`group-${index}`}>\n          <ul className=\"h-grouped-items-board__group\">\n            {group.map((itemId) => (\n              <li key={itemId}>\n                <ItemCard\n                  item={items[itemId]}\n                  cardWidth={cardWidth}\n                  isSelected={[weaponId, evidenceId].includes(itemId)}\n                />\n              </li>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, Collapse } from 'antd';\n// Components\nimport { ButtonContainer, Instruction, ReadyPlayersBar, Step, Title, Translate } from 'components';\nimport { Crime } from './Crime';\nimport { GroupedItemsBoard } from './GroupedItemsBoard';\nimport { SceneTile } from './SceneTile';\n\ntype StepNewSceneProps = {\n  user: GamePlayer;\n  items: ItemsDict;\n  groupedItems: GroupedItems;\n  onSubmitMark: GenericFunction;\n  sceneTile: SceneTile;\n  crimes: Crime[];\n  scenes: ScenesDict;\n  scenesOrder: string[];\n  players: GamePlayers;\n};\n\nexport function StepNewScene({\n  user,\n  items,\n  groupedItems,\n  onSubmitMark,\n  sceneTile,\n  crimes,\n  players,\n  scenes,\n  scenesOrder,\n}: StepNewSceneProps) {\n  const [sceneMarkIndex, setSceneMarkIndex] = useState<number>();\n\n  const onSelectItem = (payload: SceneTilePayload) => {\n    setSceneMarkIndex(payload.value);\n  };\n\n  const crime = crimes.find((crime) => crime.playerId === user.id);\n\n  return (\n    <Step>\n      <Title>\n        <Translate pt=\"Dê mais detalhes do crime\" en=\"Give us more details\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Baseado em suas cartas, selecione uma opção na nova carta de detalhes da Cena do Crime abaixo.\n            </>\n          }\n          en={<>Based on your cards, select an option in the new Scene card below.</>}\n        />\n      </Instruction>\n\n      <Collapse>\n        <Collapse.Panel\n          key=\"weapons-evidences\"\n          header={\n            <Translate\n              pt=\"Clique para ver todas Armas e Evidências\"\n              en=\"Click to see all Weapons and Evidence\"\n            />\n          }\n        >\n          <GroupedItemsBoard\n            groupedItems={groupedItems}\n            items={items}\n            weaponId={user.weaponId}\n            evidenceId={user.evidenceId}\n          />\n        </Collapse.Panel>\n      </Collapse>\n\n      <div className=\"\">\n        <Crime\n          key={`crime-by-${crime!.playerId}`}\n          crime={crime!}\n          scenes={scenes}\n          scenesOrder={scenesOrder}\n          items={items}\n          player={user}\n          selectedWeaponId={user.weaponId}\n          selectedEvidenceId={user.evidenceId}\n        />\n      </div>\n\n      <SceneTile tile={sceneTile} onSelectValue={onSelectItem} index={sceneMarkIndex} />\n\n      <ButtonContainer>\n        <Button\n          type=\"primary\"\n          size=\"large\"\n          disabled={sceneMarkIndex === undefined}\n          onClick={() => onSubmitMark({ sceneIndex: sceneMarkIndex })}\n        >\n          <Translate pt=\"Enviar\" en=\"Send\" />\n        </Button>\n      </ButtonContainer>\n\n      <ReadyPlayersBar players={players} />\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useUser, useLanguage, useMock, useStep } from 'hooks';\nimport { useOnSubmitMarkAPIRequest } from './api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\nimport { mockSceneMark } from './mock';\n// Components\nimport {\n  Instruction,\n  PhaseAnnouncement,\n  PhaseContainer,\n  RoundAnnouncement,\n  StepSwitcher,\n  Translate,\n} from 'components';\nimport { StepNewScene } from './StepNewScene';\n\nfunction PhaseSceneMarking({ players, state, info }: PhaseProps) {\n  const { language, translate } = useLanguage();\n  const user = useUser(players);\n  const { step, setStep, goToNextStep } = useStep(0);\n\n  const onSubmitMark = useOnSubmitMarkAPIRequest(setStep);\n\n  useMock(() => {\n    onSubmitMark({ sceneIndex: mockSceneMark() });\n  }, []);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.CRIMES_HEDIONDOS.SCENE_MARKING}>\n      <StepSwitcher step={step} conditions={[!user.ready, !user.ready, !user.ready]} players={players}>\n        {/* Step 0 */}\n        <RoundAnnouncement round={state?.round} onPressButton={goToNextStep} buttonText=\" \" time={5} />\n\n        {/* Step 1 */}\n        <PhaseAnnouncement\n          type=\"loupe\"\n          title={translate('Nova pista', 'New clue')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <Translate\n              pt=\"Compartilhe mais uma pista sobre seu crime:\"\n              en=\"Share one more piece of information about your crime:\"\n            />\n            <br />\n            {state.currentScene.description[language]}\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 2 */}\n        <StepNewScene\n          user={user}\n          groupedItems={state.groupedItems}\n          items={state.items}\n          onSubmitMark={onSubmitMark}\n          sceneTile={state.currentScene}\n          scenes={state.scenes}\n          scenesOrder={state.scenesOrder}\n          crimes={state.crimes}\n          players={players}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseSceneMarking;\n","import { orderBy } from 'lodash';\nimport { getLastItem } from 'utils/helpers';\n\ntype SplitWeaponsAndEvidence = {\n  weapons: HCard[];\n  evidences: HCard[];\n};\nexport const splitWeaponsAndEvidence = (items: ItemsDict, language: Language): SplitWeaponsAndEvidence => {\n  const { weapons, evidences } = Object.values(items).reduce(\n    (acc: PlainObject, item) => {\n      if (item.type === 'weapon') {\n        acc.weapons.push(item);\n      } else {\n        acc.evidences.push(item);\n      }\n      return acc;\n    },\n    {\n      weapons: [],\n      evidences: [],\n    }\n  );\n\n  const sortedWeapons = orderBy(weapons, [`name.${language}`], ['asc']);\n  const sortedEvidences = orderBy(evidences, [`name.${language}`], ['asc']);\n\n  return {\n    weapons: sortedWeapons,\n    evidences: sortedEvidences,\n  };\n};\n\nexport const getHistory = (playerHistory: HHistory, activePlayerId: PlayerId) => {\n  return playerHistory?.[activePlayerId] ?? [];\n};\n\nexport const isHistoryLocked = (history: HHistory, activePlayerId: PlayerId): boolean => {\n  const lastGuessHistory = getLastItem(getHistory(history, activePlayerId));\n  return Boolean(['CORRECT', 'LOCKED'].includes(lastGuessHistory?.status));\n};\n\nexport const isEntryLocked = (historyEntry: GuessHistoryEntry): boolean => {\n  return Boolean(['CORRECT', 'LOCKED'].includes(historyEntry?.status));\n};\n\nexport const autoSelectCorrectGuesses = (history: HHistory) => {\n  const guesses: PlainObject = {};\n  Object.entries(history).forEach(([key, historyEntryArray]: any) => {\n    const historyEntry: GuessHistoryEntry = getLastItem(historyEntryArray);\n    if (['CORRECT', 'LOCKED'].includes(historyEntry.status)) {\n      guesses[key] = {\n        weaponId: historyEntry.weaponId,\n        evidenceId: historyEntry.evidenceId,\n        isComplete: true,\n      };\n    }\n  });\n  return guesses;\n};\n","import { orderBy } from 'lodash';\n// Helpers\nimport { isHistoryLocked } from './helpers';\n// Components\nimport { AvatarCard, AvatarIcon, TransparentButton } from 'components';\n\ntype PlayersCardsProps = {\n  activePlayerId: PlayerId;\n  setActivePlayerId: GenericFunction;\n  guesses: PlainObject;\n  players: GamePlayers;\n  user: GamePlayer;\n  history: HHistory;\n};\n\nexport function PlayersCards({\n  activePlayerId,\n  setActivePlayerId,\n  players,\n  guesses,\n  user,\n  history,\n}: PlayersCardsProps) {\n  return (\n    <ul className=\"h-players-cards\">\n      {orderBy(Object.values(players), ['name']).map((player) => {\n        const isActive = activePlayerId === player.id;\n        const isComplete =\n          user.id === player.id || Boolean(guesses[player.id]?.weaponId && guesses[player.id]?.evidenceId);\n        const isLocked = isHistoryLocked(history, player.id);\n        return (\n          <li key={`player-card-${player.id}`}>\n            <TransparentButton onClick={() => setActivePlayerId(player.id)} active={isActive}>\n              <AvatarCard\n                size=\"small\"\n                player={player}\n                withName\n                replacementAvatar={\n                  (isLocked && <AvatarIcon type=\"lock\" className=\"h-players-cards__seal\" />) ||\n                  (isComplete && <AvatarIcon type=\"knife\" className=\"h-players-cards__seal\" />)\n                }\n              />\n            </TransparentButton>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","// Hooks\nimport { useCardWidth } from 'hooks';\n// Components\nimport { TransparentButton } from 'components';\nimport { ItemCard } from './ItemCard';\n\nconst getEliminatedCard = (cardType: string) => ({\n  id: `dmhk-${cardType === 'ev' ? 'ev' : 'wp'}-xxx`,\n  type: cardType,\n  name: {\n    pt: 'x',\n    en: 'x',\n  },\n});\n\ntype SelectableGroupedItemsBoardProps = {\n  groupedItems: GroupedItems;\n  items: ItemsDict;\n  weaponId?: string;\n  evidenceId?: string;\n  onSelectItem: GenericFunction;\n  activeColor?: string;\n  isLocked?: boolean;\n  wrongGroups?: number[];\n};\n\nexport function SelectableGroupedItemsBoard({\n  items,\n  weaponId,\n  evidenceId,\n  groupedItems,\n  onSelectItem,\n  activeColor,\n  isLocked,\n  wrongGroups = [],\n}: SelectableGroupedItemsBoardProps) {\n  const cardWidth = useCardWidth(12, 8, 30, 200);\n\n  return (\n    <ul className=\"h-grouped-items-board\">\n      {Object.values(groupedItems).map((group, index) => {\n        const isGroupWrong = wrongGroups.includes(index);\n\n        return (\n          <li key={`group-${index}`}>\n            <ul\n              className=\"h-grouped-items-board__group\"\n              style={Boolean(activeColor) ? { borderColor: activeColor } : {}}\n            >\n              {group.map((itemId) => (\n                <li key={itemId}>\n                  <TransparentButton\n                    onClick={isLocked || isGroupWrong ? undefined : () => onSelectItem(itemId)}\n                  >\n                    <ItemCard\n                      item={isGroupWrong ? getEliminatedCard(itemId.split('-')[1]) : items[itemId]}\n                      cardWidth={cardWidth}\n                      isSelected={[weaponId, evidenceId].includes(itemId)}\n                      preview={false}\n                      activeColor={activeColor}\n                    />\n                  </TransparentButton>\n                </li>\n              ))}\n            </ul>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import { useEffect, useState } from 'react';\n// Ant Design Resources\nimport { Button } from 'antd';\n// Hooks\nimport { useMock } from 'hooks';\n// Utils\nimport { getAvatarColorById, getLastItem } from 'utils/helpers';\nimport { mockGuesses } from './mock';\nimport { autoSelectCorrectGuesses, getHistory } from './helpers';\n// Components\nimport {\n  ButtonContainer,\n  DebugOnly,\n  FloatingHand,\n  Instruction,\n  ReadyPlayersBar,\n  Step,\n  Title,\n  Translate,\n} from 'components';\nimport { Crime } from './Crime';\nimport { PlayersCards } from './PlayersCards';\nimport { SelectableGroupedItemsBoard } from './SelectableGroupedItemsBoard';\n\ntype StepGuessingProps = {\n  user: GamePlayer;\n  players: GamePlayers;\n  items: ItemsDict;\n  groupedItems: GroupedItems;\n  scenes: ScenesDict;\n  scenesOrder: string[];\n  crimes: Crime[];\n  onSubmitGuesses: GenericFunction;\n};\n\nexport function StepGuessing({\n  user,\n  groupedItems,\n  items,\n  players,\n  scenes,\n  scenesOrder,\n  crimes,\n  onSubmitGuesses,\n}: StepGuessingProps) {\n  const [guesses, setGuesses] = useState<PlainObject>({});\n  const [activePlayerId, setActivePlayerId] = useState<PlayerId>('');\n\n  // DEV: Auto guesses\n  useMock(() => {\n    // onSubmitGuesses({ guesses: mockGuesses(groupedItems, players, user) });\n  }, []);\n\n  // If last guess was CORRECT or LOCK, auto-guess\n  useEffect(() => {\n    setGuesses((g) => ({ ...g, ...autoSelectCorrectGuesses(user.history) }));\n  }, [user]);\n\n  const onUpdateGuesses = (itemId: string) => {\n    if (activePlayerId && itemId) {\n      const guessObj = {\n        ...(guesses[activePlayerId] ?? {\n          weaponId: undefined,\n          evidenceId: undefined,\n          isComplete: false,\n        }),\n      };\n\n      const isWeapon = itemId.includes('wp');\n\n      if (isWeapon) {\n        guessObj.weaponId = itemId;\n      } else {\n        guessObj.evidenceId = itemId;\n      }\n\n      setGuesses((s: PlainObject) => ({\n        ...s,\n        [activePlayerId]: {\n          ...guessObj,\n          isComplete: Boolean(guessObj?.weaponId && guessObj?.evidenceId),\n        },\n      }));\n    }\n  };\n\n  const playerCount = Object.keys(players).length;\n  const isAllComplete =\n    Object.values(guesses).length === playerCount - 1 &&\n    Object.values(guesses).every((guess) => guess.weaponId && guess.evidenceId);\n  const activeCrime = crimes.find((crime) => crime.playerId === activePlayerId);\n  const isOwnCrime = activePlayerId === user.id;\n  const activePlayerGuesses = guesses?.[activePlayerId] ?? {};\n\n  const lastGuessHistory = getLastItem(getHistory(user.history, activePlayerId));\n  const isLocked = ['CORRECT', 'LOCKED'].includes(lastGuessHistory?.status);\n\n  // Active stuff\n  const { activeWeaponId, activeEvidenceId } = getActiveStuff(\n    isOwnCrime,\n    isLocked,\n    user,\n    activePlayerGuesses,\n    lastGuessHistory\n  );\n\n  return (\n    <Step>\n      <Title>\n        <Translate pt=\"Quais foram os crimes?\" en=\"What were the crimes?\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Selecione cada jogador abaixo, analise suas respostas sobre o crime, e selecione uma arma e um\n              objeto.\n              <br />O par sempre estará no mesmo quadrante, mas os objetos não são exclusivos e diferentes\n              crimes podem usar as mesmas cartas.\n              <br />\n              Crimes que já tem ambos selecionados são indicados por uma faca.\n            </>\n          }\n          en={\n            <>\n              Select each player below, analyze their answers about their crimes, then select a weapon and an\n              object.\n              <br />\n              The pair will always be in the same quadrant, but object are non-exclusive so different crimes\n              might use the same cards.\n              <br />\n              Crimes with both cards selected are indicated by a knife.\n            </>\n          }\n        />\n      </Instruction>\n\n      <DebugOnly dev>\n        <ButtonContainer>\n          <Button type=\"dashed\" ghost onClick={() => setGuesses(mockGuesses(groupedItems, players, user))}>\n            <Translate pt=\"Seleção Aleatória Semi-inteligente\" en=\"Semi-intelligent Random Selection\" />\n          </Button>\n        </ButtonContainer>\n      </DebugOnly>\n\n      <PlayersCards\n        user={user}\n        activePlayerId={activePlayerId}\n        setActivePlayerId={setActivePlayerId}\n        players={players}\n        guesses={guesses}\n        history={user.history}\n      />\n\n      {isAllComplete && (\n        <ButtonContainer>\n          <Button\n            size=\"large\"\n            type=\"primary\"\n            disabled={!isAllComplete}\n            onClick={() => onSubmitGuesses({ guesses })}\n          >\n            <Translate pt=\"Enviar Respostas\" en=\"Send Guesses\" />\n          </Button>\n        </ButtonContainer>\n      )}\n\n      <SelectableGroupedItemsBoard\n        items={items}\n        weaponId={activeWeaponId}\n        evidenceId={activeEvidenceId}\n        groupedItems={groupedItems}\n        onSelectItem={onUpdateGuesses}\n        activeColor={getAvatarColorById(players[activePlayerId]?.avatarId)}\n        isLocked={isOwnCrime || isLocked}\n        wrongGroups={user?.wrongGroups?.[activePlayerId] ?? []}\n      />\n\n      <ReadyPlayersBar players={players} />\n\n      {activeCrime && (\n        <FloatingHand type=\"stats\">\n          <Crime\n            key={`crime-by-${activeCrime.playerId}`}\n            crime={activeCrime}\n            scenes={scenes}\n            scenesOrder={scenesOrder}\n            items={items}\n            history={user?.history[activeCrime.playerId] ?? []}\n            player={players[activeCrime.playerId]}\n            selectedWeaponId={activeWeaponId}\n            selectedEvidenceId={activeEvidenceId}\n            isLocked={isOwnCrime || isLocked}\n          />\n        </FloatingHand>\n      )}\n    </Step>\n  );\n}\n\nconst getActiveStuff = (\n  isOwnCrime: boolean,\n  isLocked: boolean,\n  user: GamePlayer,\n  activePlayerGuesses: any,\n  lastGuessHistory: GuessHistoryEntry\n): { activeWeaponId: string; activeEvidenceId: string } => {\n  if (isOwnCrime) {\n    return {\n      activeWeaponId: user.weaponId,\n      activeEvidenceId: user.evidenceId,\n    };\n  }\n\n  if (isLocked) {\n    return {\n      activeWeaponId: lastGuessHistory.weaponId,\n      activeEvidenceId: lastGuessHistory.evidenceId,\n    };\n  }\n\n  return {\n    activeWeaponId: activePlayerGuesses.weaponId,\n    activeEvidenceId: activePlayerGuesses.evidenceId,\n  };\n};\n","// State & Hooks\nimport { useIsUserReady, useUser, useLanguage, useStep } from 'hooks';\nimport { useOnSubmitGuessesAPIRequest } from './api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { PhaseAnnouncement, PhaseContainer, StepSwitcher } from 'components';\nimport { GuessMessage } from './RulesBlobs';\nimport { StepGuessing } from './StepGuessing';\n\nfunction PhaseGuessing({ players, state, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, setStep, goToNextStep } = useStep(0);\n  const user = useUser(players);\n  const isUserReady = useIsUserReady(players, state);\n\n  const onSubmitGuesses = useOnSubmitGuessesAPIRequest(setStep);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.CRIMES_HEDIONDOS.GUESSING}>\n      <StepSwitcher step={step} conditions={[!isUserReady, !isUserReady]} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          type=\"guess\"\n          title={translate('Tente Adivinhar', 'Try to guess')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <GuessMessage />\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepGuessing\n          user={user}\n          groupedItems={state.groupedItems}\n          items={state.items}\n          players={players}\n          scenes={state.scenes}\n          scenesOrder={state.scenesOrder}\n          crimes={state.crimes}\n          onSubmitGuesses={onSubmitGuesses}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseGuessing;\n","import { orderBy } from 'lodash';\n// Ant Design Resources\nimport { Table, Tooltip } from 'antd';\n// Components\nimport { AvatarName, Avatar, AvatarIcon } from 'components';\nimport { CrimeGuessStatus } from './CrimeGuessStatus';\n\ntype ResultsTableProps = {\n  players: GamePlayers;\n  results: HResults;\n};\n\nexport function ResultsTable({ players, results }: ResultsTableProps) {\n  const columns = [\n    {\n      title: '',\n      dataIndex: 'playerId',\n      render: (playerId: string) => <AvatarName player={players[playerId]} size=\"small\" addressUser />,\n    },\n    ...orderBy(Object.keys(results)).map((playerId) => ({\n      title: <Avatar id={players[playerId].avatarId} size=\"small\" />,\n      dataIndex: playerId,\n      render: (status: string) => <ResultsTableCell status={status} />,\n    })),\n  ];\n\n  const data = orderBy(Object.entries(results)).map(([key, result]) => {\n    return {\n      playerId: key,\n      ...result,\n    };\n  });\n\n  return <Table columns={columns} dataSource={data} pagination={false} size=\"small\" bordered />;\n}\n\ntype ResultsTableCellProps = {\n  status: string;\n};\n\nfunction ResultsTableCell({ status }: ResultsTableCellProps) {\n  switch (status) {\n    case 'LOCKED':\n    case 'CORRECT':\n      return (\n        <Tooltip title={<CrimeGuessStatus status={status} withDescription />} color=\"white\">\n          <AvatarIcon type=\"box-check-mark\" shape=\"square\" alt={status} />\n        </Tooltip>\n      );\n    case 'HALF':\n      return (\n        <Tooltip title={<CrimeGuessStatus status={status} withDescription />} color=\"white\">\n          <AvatarIcon type=\"box-one\" shape=\"square\" alt={status} />\n        </Tooltip>\n      );\n    case 'WRONG':\n      return (\n        <Tooltip title={<CrimeGuessStatus status={status} withDescription />} color=\"white\">\n          <AvatarIcon type=\"box-minus\" shape=\"square\" alt={status} />\n        </Tooltip>\n      );\n    case 'WRONG_GROUP':\n      return (\n        <Tooltip title={<CrimeGuessStatus status={status} withDescription />} color=\"white\">\n          <AvatarIcon type=\"box-x\" shape=\"square\" alt={status} />\n        </Tooltip>\n      );\n    default:\n      return <span>•</span>;\n  }\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, Collapse } from 'antd';\nimport { TrophyOutlined } from '@ant-design/icons';\n// Utils\nimport { getAnimationClass, getLastItem } from 'utils/helpers';\nimport { isEntryLocked } from './helpers';\n// Components\nimport { ButtonContainer, Instruction, PopoverRule, Step, TimedButton, Title, Translate } from 'components';\nimport { Crime } from './Crime';\nimport { GroupedItemsBoard } from './GroupedItemsBoard';\nimport { ScoringMessage } from './RulesBlobs';\nimport { PlayersCards } from './PlayersCards';\nimport { CrimeGuessStatus } from './CrimeGuessStatus';\nimport { ResultsTable } from './ResultsTable';\n\ntype StepRevealProps = {\n  user: GamePlayer;\n  players: GamePlayers;\n  items: ItemsDict;\n  groupedItems: GroupedItems;\n  scenes: ScenesDict;\n  scenesOrder: string[];\n  crimes: Crime[];\n  onSeeRanking: GenericFunction;\n  round: GameRound;\n  results: HResults;\n  isFirstRunThrough: boolean;\n};\n\nexport function StepReveal({\n  user,\n  groupedItems,\n  items,\n  players,\n  scenes,\n  scenesOrder,\n  crimes,\n  onSeeRanking,\n  round,\n  results,\n  isFirstRunThrough,\n}: StepRevealProps) {\n  const [activePlayerId, setActivePlayerId] = useState<PlayerId>('');\n\n  const playerCount = Object.keys(players).length;\n\n  const activeCrime = crimes.find((crime) => crime.playerId === activePlayerId);\n  const isOwnCrime = activePlayerId === user.id;\n  const history: GuessHistoryEntry[] = user.history?.[(activeCrime! ?? {})?.playerId] ?? [];\n  const latestHistoryEntry = getLastItem(history);\n  const isLocked = isEntryLocked(latestHistoryEntry);\n\n  return (\n    <Step>\n      <Title>\n        <Translate pt=\"Resultado\" en=\"Results\" />\n      </Title>\n\n      <PopoverRule content={<ScoringMessage round={round} />} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Veja aqui como todos os jogadores foram. Passe o mouse nos ícones para saber mais detalhes.\n              <br />\n              As colunas são os crimes e as linhas são os chutes dessa rodada de cada jogador.\n            </>\n          }\n          en={\n            <>\n              See how all players did. Hover the icons to see details.\n              <br />\n              The columns are the crimes and the rows are the guesses for each player.\n            </>\n          }\n        />\n        <ResultsTable players={players} results={results} />\n        <Translate\n          pt={\n            <>\n              Você acertou {user.correctCrimes} pares e está com um total (secreto) de{' '}\n              {user.score + user.secretScore} pontos.\n            </>\n          }\n          en={\n            <>\n              You guesses {user.correctCrimes} crimes and have a (secret) total of{' '}\n              {user.score + user.secretScore} points.\n            </>\n          }\n        />\n      </Instruction>\n\n      <ButtonContainer>\n        <Collapse>\n          <Collapse.Panel\n            key=\"weapons-evidences\"\n            header={<Translate pt=\" Ver todas Armas e Evidências\" en=\"See all Weapons and Evidence\" />}\n          >\n            <GroupedItemsBoard\n              items={items}\n              weaponId={user.weaponId}\n              evidenceId={user.evidenceId}\n              groupedItems={groupedItems}\n            />\n          </Collapse.Panel>\n        </Collapse>\n      </ButtonContainer>\n\n      <PlayersCards\n        user={user}\n        activePlayerId={activePlayerId}\n        setActivePlayerId={setActivePlayerId}\n        players={players}\n        guesses={{}}\n        history={user.history}\n      />\n\n      {Boolean(activePlayerId) && (\n        <Instruction\n          contained\n          className={!isLocked && !isOwnCrime ? getAnimationClass('tada') : ''}\n          key={`instruction-status-${activePlayerId}`}\n        >\n          {Boolean(latestHistoryEntry) ? (\n            <CrimeGuessStatus status={latestHistoryEntry.status} withDescription />\n          ) : isOwnCrime ? (\n            <Translate pt=\"Este é o seu próprio crime\" en=\"This is your own crime\" />\n          ) : (\n            ''\n          )}\n        </Instruction>\n      )}\n\n      {activeCrime && (\n        <div\n          className={getAnimationClass('slideInUp', undefined, 'fast')}\n          key={`crime-by-${activeCrime.playerId}`}\n        >\n          <Crime\n            crime={activeCrime}\n            scenes={scenes}\n            scenesOrder={scenesOrder}\n            items={items}\n            history={user.history[activeCrime.playerId]}\n            player={players[activeCrime.playerId]}\n            selectedWeaponId={isOwnCrime ? user.weaponId : latestHistoryEntry.weaponId}\n            selectedEvidenceId={isOwnCrime ? user.evidenceId : latestHistoryEntry.evidenceId}\n            isLocked={isLocked}\n          />\n        </div>\n      )}\n\n      <ButtonContainer>\n        {isFirstRunThrough ? (\n          <TimedButton\n            onClick={onSeeRanking}\n            onExpire={onSeeRanking}\n            duration={Math.min(playerCount * 10, 60)}\n            icon={<TrophyOutlined />}\n            label={<Translate pt=\"Ver Ranking\" en=\"See Ranking\" />}\n          />\n        ) : (\n          <Button onClick={onSeeRanking} icon={<TrophyOutlined />}>\n            <Translate pt=\"Ver Ranking\" en=\"See Ranking\" />\n          </Button>\n        )}\n      </ButtonContainer>\n    </Step>\n  );\n}\n","// Ant Design Resources\nimport { Button } from 'antd';\n// Components\nimport {\n  AdminNextRoundButton,\n  ButtonContainer,\n  Instruction,\n  RankingBoard,\n  Step,\n  Title,\n  Translate,\n} from 'components';\n\ntype StepRankingProps = {\n  ranking: GameRanking;\n  players: GamePlayers;\n  goToPreviousStep: GenericFunction;\n  round: GameRound;\n  lastRound?: boolean;\n};\n\nexport function StepRanking({ ranking, players, goToPreviousStep, round, lastRound }: StepRankingProps) {\n  const roundPoints = round.total - round.current + 1;\n\n  return (\n    <Step fullWidth>\n      <Title>Ranking</Title>\n      <Instruction contained>\n        <Translate\n          pt={<>Pares corretos ganham {roundPoints} pontos nessa rodada. 1 ponto a menos na próxima.</>}\n          en={<>Correct pairs get {roundPoints} points this round. 1 point less next round.</>}\n        />\n      </Instruction>\n\n      <RankingBoard ranking={ranking} players={players} />\n\n      <ButtonContainer>\n        <Button onClick={goToPreviousStep}>\n          <Translate pt=\"Ver resultado novamente\" en=\"See results again\" />\n        </Button>\n      </ButtonContainer>\n      <AdminNextRoundButton round={round} lastRound={lastRound} />\n    </Step>\n  );\n}\n","import { useEffect, useState } from 'react';\n// State & Hooks\nimport { useIsUserReady, useUser, useLanguage, useStep } from 'hooks';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Instruction, PhaseAnnouncement, PhaseContainer, StepSwitcher } from 'components';\nimport { StepReveal } from './StepReveal';\nimport { ScoringMessage } from './RulesBlobs';\nimport { StepRanking } from './StepRanking';\n\nfunction PhaseReveal({ players, state, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, goToNextStep, goToPreviousStep } = useStep(0);\n  const user = useUser(players);\n  const isUserReady = useIsUserReady(players, state);\n  const [isFirstRunThrough, setIsFirstRunThrough] = useState(true);\n\n  // Changes isFirstGalleryRunThrough property which disables controls, after the first gallery run through\n  useEffect(() => {\n    if (isFirstRunThrough && step > 1) {\n      setIsFirstRunThrough(false);\n    }\n  }, [step, isFirstRunThrough]);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.CRIMES_HEDIONDOS.REVEAL}>\n      <StepSwitcher step={step} conditions={[!isUserReady, !isUserReady, !isUserReady]} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          type=\"rank\"\n          title={translate('Resultado', 'Results')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <ScoringMessage round={state.round} />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepReveal\n          user={user}\n          groupedItems={state.groupedItems}\n          items={state.items}\n          players={players}\n          scenes={state.scenes}\n          scenesOrder={state.scenesOrder}\n          crimes={state.crimes}\n          onSeeRanking={goToNextStep}\n          round={state.round}\n          results={state.results}\n          isFirstRunThrough={isFirstRunThrough}\n        />\n\n        {/* Step 2 */}\n        <StepRanking\n          ranking={state.ranking}\n          players={players}\n          goToPreviousStep={goToPreviousStep}\n          round={state.round}\n          lastRound={state?.lastRound}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseReveal;\n","import { orderBy } from 'lodash';\n// Hooks\nimport { useUser } from 'hooks';\n// Components\nimport { GameOverWrapper } from 'components';\nimport { Crime } from './Crime';\n\nfunction PhaseGameOver({ state, players, info }: PhaseProps) {\n  const crimes: Crime[] = state.crimes;\n  const user = useUser(players);\n\n  return (\n    <GameOverWrapper info={info} state={state} announcementIcon=\"trophy\">\n      <ul>\n        {orderBy(crimes, ['playerId']).map((crime) => (\n          <Crime\n            key={`crime-by-${crime.playerId}`}\n            crime={crime}\n            items={state.items}\n            player={players[crime.playerId]}\n            scenes={state.scenes}\n            scenesOrder={state.scenesOrder}\n            selectedEvidenceId={crime.evidenceId}\n            selectedWeaponId={crime.weaponId}\n            history={user.history?.[crime.playerId]}\n          />\n        ))}\n      </ul>\n    </GameOverWrapper>\n  );\n}\n\nexport default PhaseGameOver;\n","// Constants\nimport { GAME_COLLECTION } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session, PhaseSetup, PhaseRules, PageError, PhaseLobby } from 'components';\nimport PhaseCrimeSelection from './PhaseCrimeSelection';\nimport PhaseSceneMarking from './PhaseSceneMarking';\nimport PhaseGuessing from './PhaseGuessing';\nimport PhaseReveal from './PhaseReveal';\nimport PhaseGameOver from './PhaseGameOver';\n\nfunction SessionCrimesHediondos({ gameId }: SessionProps) {\n  function getActiveComponent(phase: string) {\n    switch (phase) {\n      case PHASES.DEFAULT.LOBBY:\n        return PhaseLobby;\n      case PHASES.DEFAULT.RULES:\n        return PhaseRules;\n      case PHASES.DEFAULT.SETUP:\n        return PhaseSetup;\n      case PHASES.CRIMES_HEDIONDOS.CRIME_SELECTION:\n        return PhaseCrimeSelection;\n      case PHASES.CRIMES_HEDIONDOS.SCENE_MARKING:\n        return PhaseSceneMarking;\n      case PHASES.CRIMES_HEDIONDOS.GUESSING:\n        return PhaseGuessing;\n      case PHASES.CRIMES_HEDIONDOS.REVEAL:\n        return PhaseReveal;\n      case PHASES.DEFAULT.GAME_OVER:\n        return PhaseGameOver;\n      default:\n        return PageError;\n    }\n  }\n\n  return (\n    <Session\n      gameId={gameId}\n      gameCollection={GAME_COLLECTION.CRIMES_HEDIONDOS}\n      getActiveComponent={getActiveComponent}\n    />\n  );\n}\n\nexport default SessionCrimesHediondos;\n","// This icon file is generated automatically.\nvar CloudUploadOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M518.3 459a8 8 0 00-12.6 0l-112 141.7a7.98 7.98 0 006.3 12.9h73.9V856c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V613.7H624c6.7 0 10.4-7.7 6.3-12.9L518.3 459z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M811.4 366.7C765.6 245.9 648.9 160 512.2 160S258.8 245.8 213 366.6C127.3 389.1 64 467.2 64 560c0 110.5 89.5 200 199.9 200H304c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8h-40.1c-33.7 0-65.4-13.4-89-37.7-23.5-24.2-36-56.8-34.9-90.6.9-26.4 9.9-51.2 26.2-72.1 16.7-21.3 40.1-36.8 66.1-43.7l37.9-9.9 13.9-36.6c8.6-22.8 20.6-44.1 35.7-63.4a245.6 245.6 0 0152.4-49.9c41.1-28.9 89.5-44.2 140-44.2s98.9 15.3 140 44.2c19.9 14 37.5 30.8 52.4 49.9 15.1 19.3 27.1 40.7 35.7 63.4l13.8 36.5 37.8 10C846.1 454.5 884 503.8 884 560c0 33.1-12.9 64.3-36.3 87.7a123.07 123.07 0 01-87.6 36.3H720c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h40.1C870.5 760 960 670.5 960 560c0-92.7-63.1-170.7-148.6-193.3z\" } }] }, \"name\": \"cloud-upload\", \"theme\": \"outlined\" };\nexport default CloudUploadOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloudUploadOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloudUploadOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CloudUploadOutlined = function CloudUploadOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CloudUploadOutlinedSvg\n  }));\n};\n\nCloudUploadOutlined.displayName = 'CloudUploadOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloudUploadOutlined);","// This icon file is generated automatically.\nvar EnvironmentOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M854.6 289.1a362.49 362.49 0 00-79.9-115.7 370.83 370.83 0 00-118.2-77.8C610.7 76.6 562.1 67 512 67c-50.1 0-98.7 9.6-144.5 28.5-44.3 18.3-84 44.5-118.2 77.8A363.6 363.6 0 00169.4 289c-19.5 45-29.4 92.8-29.4 142 0 70.6 16.9 140.9 50.1 208.7 26.7 54.5 64 107.6 111 158.1 80.3 86.2 164.5 138.9 188.4 153a43.9 43.9 0 0022.4 6.1c7.8 0 15.5-2 22.4-6.1 23.9-14.1 108.1-66.8 188.4-153 47-50.4 84.3-103.6 111-158.1C867.1 572 884 501.8 884 431.1c0-49.2-9.9-97-29.4-142zM512 880.2c-65.9-41.9-300-207.8-300-449.1 0-77.9 31.1-151.1 87.6-206.3C356.3 169.5 431.7 139 512 139s155.7 30.5 212.4 85.9C780.9 280 812 353.2 812 431.1c0 241.3-234.1 407.2-300 449.1zm0-617.2c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm79.2 255.2A111.6 111.6 0 01512 551c-29.9 0-58-11.7-79.2-32.8A111.6 111.6 0 01400 439c0-29.9 11.7-58 32.8-79.2C454 338.6 482.1 327 512 327c29.9 0 58 11.6 79.2 32.8C612.4 381 624 409.1 624 439c0 29.9-11.6 58-32.8 79.2z\" } }] }, \"name\": \"environment\", \"theme\": \"outlined\" };\nexport default EnvironmentOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EnvironmentOutlinedSvg from \"@ant-design/icons-svg/es/asn/EnvironmentOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar EnvironmentOutlined = function EnvironmentOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: EnvironmentOutlinedSvg\n  }));\n};\n\nEnvironmentOutlined.displayName = 'EnvironmentOutlined';\nexport default /*#__PURE__*/React.forwardRef(EnvironmentOutlined);","// This icon file is generated automatically.\nvar LockFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM540 701v53c0 4.4-3.6 8-8 8h-40c-4.4 0-8-3.6-8-8v-53a48.01 48.01 0 1156 0zm152-237H332V240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224z\" } }] }, \"name\": \"lock\", \"theme\": \"filled\" };\nexport default LockFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LockFilledSvg from \"@ant-design/icons-svg/es/asn/LockFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar LockFilled = function LockFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: LockFilledSvg\n  }));\n};\n\nLockFilled.displayName = 'LockFilled';\nexport default /*#__PURE__*/React.forwardRef(LockFilled);","// This icon file is generated automatically.\nvar QuestionCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 708c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zm62.9-219.5a48.3 48.3 0 00-30.9 44.8V620c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-21.5c0-23.1 6.7-45.9 19.9-64.9 12.9-18.6 30.9-32.8 52.1-40.9 34-13.1 56-41.6 56-72.7 0-44.1-43.1-80-96-80s-96 35.9-96 80v7.6c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V420c0-39.3 17.2-76 48.4-103.3C430.4 290.4 470 276 512 276s81.6 14.5 111.6 40.7C654.8 344 672 380.7 672 420c0 57.8-38.1 109.8-97.1 132.5z\" } }] }, \"name\": \"question-circle\", \"theme\": \"filled\" };\nexport default QuestionCircleFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport QuestionCircleFilledSvg from \"@ant-design/icons-svg/es/asn/QuestionCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar QuestionCircleFilled = function QuestionCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: QuestionCircleFilledSvg\n  }));\n};\n\nQuestionCircleFilled.displayName = 'QuestionCircleFilled';\nexport default /*#__PURE__*/React.forwardRef(QuestionCircleFilled);","// This icon file is generated automatically.\nvar TrophyOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M868 160h-92v-40c0-4.4-3.6-8-8-8H256c-4.4 0-8 3.6-8 8v40h-92a44 44 0 00-44 44v148c0 81.7 60 149.6 138.2 162C265.7 630.2 359 721.7 476 734.5v105.2H280c-17.7 0-32 14.3-32 32V904c0 4.4 3.6 8 8 8h512c4.4 0 8-3.6 8-8v-32.3c0-17.7-14.3-32-32-32H548V734.5C665 721.7 758.3 630.2 773.8 514 852 501.6 912 433.7 912 352V204a44 44 0 00-44-44zM184 352V232h64v207.6a91.99 91.99 0 01-64-87.6zm520 128c0 49.1-19.1 95.4-53.9 130.1-34.8 34.8-81 53.9-130.1 53.9h-16c-49.1 0-95.4-19.1-130.1-53.9-34.8-34.8-53.9-81-53.9-130.1V184h384v296zm136-128c0 41-26.9 75.8-64 87.6V232h64v120z\" } }] }, \"name\": \"trophy\", \"theme\": \"outlined\" };\nexport default TrophyOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport TrophyOutlinedSvg from \"@ant-design/icons-svg/es/asn/TrophyOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar TrophyOutlined = function TrophyOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: TrophyOutlinedSvg\n  }));\n};\n\nTrophyOutlined.displayName = 'TrophyOutlined';\nexport default /*#__PURE__*/React.forwardRef(TrophyOutlined);"],"names":["WelcomeMessage","contained","pt","en","GuessMessage","ScoringMessage","round","points","total","current","ItemCard","item","cardWidth","activeColor","preview","isSelected","className","language","useLanguage","isDebugEnabled","useDevFeatures","clsx","style","borderColor","backgroundColor","content","name","toUpperCase","color","type","maxWidth","id","imageId","ContinueButton","onClick","children","disabled","props","size","StepItemsSelection","user","items","groupedItems","selections","updateSelections","useState","weaponId","setWeaponId","evidenceId","setEvidenceId","useCardWidth","userItems","itemGroupIndex","randomWeaponId","randomEvidenceId","shuffle","forEach","itemId","map","includes","SceneTile","tile","index","onSelectValue","description","title","values","entry","i","isActive","icon","CheckCircleFilled","undefined","tileId","value","PlusSquareFilled","ref","React","AntdIcon","_objectSpread","PlusSquareFilledSvg","displayName","SelectedItems","fadeWeapon","fadeEvidence","StepCauseOfDeathSelection","causeOfDeathTile","causeOfDeathIndex","setCauseOfDeathIndex","payload","causeOfDeath","StepLocationSelection","locationTiles","location","setLocation","onSelectItem","locationTile","locationIndex","StepReviewCrime","reasonForEvidenceTile","onSubmitCrime","updateSelection","players","translate","find","reasonForEvidence","CloudUploadOutlined","readyText","readyTextPlural","StepReasonForEvidence","reasonForEvidenceIndex","setReasonForEvidenceIndex","state","info","useStep","step","setStep","goToNextStep","useUser","isUserReady","useIsUserReady","setSelections","onSubmitCrimeRequest","request","useAPICall","apiFunction","CRIMES_HEDIONDOS_API","actionName","onBeforeCall","onError","successMessage","errorMessage","action","useOnSubmitCrimeAPIRequest","s","useMock","itemsGroup","shuffledItems","weapon","e","evidence","locationTileId","getRandomItem","options","mockCrime","phase","allowedPhase","PHASES","conditions","onPressButton","buttonText","time","circleColor","hand","Object","keys","onClose","currentRound","duration","ClockCircleFilled","ClockCircleFilledSvg","SafetyOutlined","SafetyOutlinedSvg","GiftOutlined","GiftOutlinedSvg","ExceptionOutlined","ExceptionOutlinedSvg","ItemCardEmpty","cardType","WarningFilled","WarningFilledSvg","CrimeGuessStatus","status","withDescription","baseClass","LockFilled","MinusCircleFilled","CloseCircleFilled","QuestionCircleFilled","CARD_WIDTH","Crime","crime","player","scenesOrder","scenes","selectedWeaponId","selectedEvidenceId","history","isLocked","historyEntryIndex","setHistoryEntryIndex","isComplete","Boolean","activeWeaponId","evidenceWeaponId","getAvatarColorById","avatarId","hasHistory","length","filter","sceneId","scene","CrimeScene","playerIndex","playerId","_","ghost","shape","onMouseOver","onMouseLeave","CrimeSceneIcon","EnvironmentOutlined","GroupedItemsBoard","group","StepNewScene","onSubmitMark","sceneTile","crimes","sceneMarkIndex","setSceneMarkIndex","header","sceneIndex","useOnSubmitMarkAPIRequest","ready","currentScene","getHistory","playerHistory","activePlayerId","PlayersCards","setActivePlayerId","guesses","orderBy","lastGuessHistory","getLastItem","isHistoryLocked","active","withName","replacementAvatar","SelectableGroupedItemsBoard","wrongGroups","isGroupWrong","split","StepGuessing","onSubmitGuesses","setGuesses","useEffect","g","entries","key","historyEntryArray","historyEntry","autoSelectCorrectGuesses","playerCount","isAllComplete","every","guess","activeCrime","isOwnCrime","activePlayerGuesses","getActiveStuff","activeEvidenceId","dev","reduce","acc","historyForThisTarget","lastGuess","groupIndex","weapons","evidences","previousPicksDict","SEPARATOR","pair","previouslyWrongGroups","t","push","availableGroups","randomGroup","mockGuesses","guessObj","useOnSubmitGuessesAPIRequest","ResultsTable","results","columns","dataIndex","render","addressUser","ResultsTableCell","data","result","dataSource","pagination","bordered","alt","StepReveal","onSeeRanking","isFirstRunThrough","latestHistoryEntry","correctCrimes","score","secretScore","getAnimationClass","onExpire","Math","min","TrophyOutlined","label","StepRanking","ranking","goToPreviousStep","lastRound","roundPoints","fullWidth","setIsFirstRunThrough","announcementIcon","gameId","gameCollection","GAME_COLLECTION","getActiveComponent","PhaseLobby","PhaseRules","PhaseSetup","PhaseCrimeSelection","PhaseSceneMarking","PhaseGuessing","PhaseReveal","PhaseGameOver","PageError","CloudUploadOutlinedSvg","EnvironmentOutlinedSvg","LockFilledSvg","QuestionCircleFilledSvg","TrophyOutlinedSvg"],"sourceRoot":""}