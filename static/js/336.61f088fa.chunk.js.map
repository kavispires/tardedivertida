{"version":3,"file":"static/js/336.61f088fa.chunk.js","mappings":"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","sources":["../node_modules/use-sound/src/index.ts","../node_modules/use-sound/src/use-on-mount.ts","games/arte-ruim/StepDraw.tsx","games/arte-ruim/PhaseDraw.tsx","games/arte-ruim/api-requests.ts","../node_modules/@ant-design/icons-svg/es/asn/ThunderboltOutlined.js","../node_modules/@ant-design/icons/es/icons/ThunderboltOutlined.js","games/arte-ruim/EvaluationAllDrawings.tsx","games/arte-ruim/Card.tsx","games/arte-ruim/EvaluationAllCards.tsx","games/arte-ruim/TextBlobs.tsx","games/arte-ruim/StepEvaluation.tsx","games/arte-ruim/PhaseEvaluation.tsx","games/arte-ruim/GalleryWindowCredits.tsx","../node_modules/@ant-design/icons-svg/es/asn/MessageFilled.js","../node_modules/@ant-design/icons/es/icons/MessageFilled.js","games/arte-ruim/GalleryWindowGuesses.tsx","../node_modules/@ant-design/icons-svg/es/asn/StepBackwardOutlined.js","../node_modules/@ant-design/icons/es/icons/StepBackwardOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/PauseOutlined.js","../node_modules/@ant-design/icons/es/icons/PauseOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/PlayCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/PlayCircleOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/StepForwardOutlined.js","../node_modules/@ant-design/icons/es/icons/StepForwardOutlined.js","games/arte-ruim/GalleryWindowControls.tsx","games/arte-ruim/GalleryWindowResult.tsx","games/arte-ruim/GalleryWindow.tsx","games/arte-ruim/StepGallery.tsx","../node_modules/@ant-design/icons-svg/es/asn/PictureOutlined.js","../node_modules/@ant-design/icons/es/icons/PictureOutlined.js","games/arte-ruim/StepRanking.tsx","games/arte-ruim/PhaseGallery.tsx","games/arte-ruim/DrawingGrade.tsx","games/arte-ruim/PhaseGameOver.tsx","games/arte-ruim/SessionArteRuim.tsx","../node_modules/@ant-design/icons-svg/es/asn/CloudUploadOutlined.js","../node_modules/@ant-design/icons/es/icons/CloudUploadOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/TrophyOutlined.js","../node_modules/@ant-design/icons/es/icons/TrophyOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/WarningOutlined.js","../node_modules/@ant-design/icons/es/icons/WarningOutlined.js"],"sourcesContent":["import React from 'react';\n\nimport useOnMount from './use-on-mount';\n\nimport { HookOptions, PlayOptions, PlayFunction, ReturnedValue } from './types';\n\nexport default function useSound<T = any>(\n  src: string | string[],\n  {\n    id,\n    volume = 1,\n    playbackRate = 1,\n    soundEnabled = true,\n    interrupt = false,\n    onload,\n    ...delegated\n  }: HookOptions<T> = {} as HookOptions\n) {\n  const HowlConstructor = React.useRef<HowlStatic | null>(null);\n  const isMounted = React.useRef(false);\n\n  const [duration, setDuration] = React.useState<number | null>(null);\n\n  const [sound, setSound] = React.useState<Howl | null>(null);\n\n  const handleLoad = function() {\n    if (typeof onload === 'function') {\n      // @ts-ignore\n      onload.call(this);\n    }\n\n    if (isMounted.current) {\n      // @ts-ignore\n      setDuration(this.duration() * 1000);\n    }\n\n    // @ts-ignore\n    setSound(this);\n  };\n\n  // We want to lazy-load Howler, since sounds can't play on load anyway.\n  useOnMount(() => {\n    import('howler').then(mod => {\n      if (!isMounted.current) {\n        // Depending on the module system used, `mod` might hold\n        // the export directly, or it might be under `default`.\n        HowlConstructor.current = mod.Howl ?? mod.default.Howl;\n\n        isMounted.current = true;\n\n        new HowlConstructor.current({\n          src: Array.isArray(src) ? src : [src],\n          volume,\n          rate: playbackRate,\n          onload: handleLoad,\n          ...delegated,\n        });\n      }\n    });\n\n    return () => {\n      isMounted.current = false;\n    };\n  });\n\n  // When the `src` changes, we have to do a whole thing where we recreate\n  // the Howl instance. This is because Howler doesn't expose a way to\n  // tweak the sound\n  React.useEffect(() => {\n    if (HowlConstructor.current && sound) {\n      setSound(\n        new HowlConstructor.current({\n          src: Array.isArray(src) ? src : [src],\n          volume,\n          onload: handleLoad,\n          ...delegated,\n        })\n      );\n    }\n    // The linter wants to run this effect whenever ANYTHING changes,\n    // but very specifically I only want to recreate the Howl instance\n    // when the `src` changes. Other changes should have no effect.\n    // Passing array to the useEffect dependencies list will result in\n    // ifinite loop so we need to stringify it, for more details check\n    // https://github.com/facebook/react/issues/14476#issuecomment-471199055\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [JSON.stringify(src)]);\n\n  // Whenever volume/playbackRate are changed, change those properties\n  // on the sound instance.\n  React.useEffect(() => {\n    if (sound) {\n      sound.volume(volume);\n      sound.rate(playbackRate);\n    }\n    // A weird bug means that including the `sound` here can trigger an\n    // error on unmount, where the state loses track of the sprites??\n    // No idea, but anyway I don't need to re-run this if only the `sound`\n    // changes.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [volume, playbackRate]);\n\n  const play: PlayFunction = React.useCallback(\n    (options?: PlayOptions) => {\n      if (typeof options === 'undefined') {\n        options = {};\n      }\n\n      if (!sound || (!soundEnabled && !options.forceSoundEnabled)) {\n        return;\n      }\n\n      if (interrupt) {\n        sound.stop();\n      }\n\n      if (options.playbackRate) {\n        sound.rate(options.playbackRate);\n      }\n\n      sound.play(options.id);\n    },\n    [sound, soundEnabled, interrupt]\n  );\n\n  const stop = React.useCallback(\n    id => {\n      if (!sound) {\n        return;\n      }\n      sound.stop(id);\n    },\n    [sound]\n  );\n\n  const pause = React.useCallback(\n    id => {\n      if (!sound) {\n        return;\n      }\n      sound.pause(id);\n    },\n    [sound]\n  );\n\n  const returnedValue: ReturnedValue = [\n    play,\n    {\n      sound,\n      stop,\n      pause,\n      duration,\n    },\n  ];\n\n  return returnedValue;\n}\n\nexport { useSound };\n","import * as React from 'react';\n\nexport default function useOnMount(callback: React.EffectCallback) {\n  React.useEffect(callback, []);\n}\n","import { useState } from 'react';\nimport { useTimer } from 'react-timer-hook';\n// Utils\nimport { useDevFeatures, useLanguage } from 'hooks';\nimport { inNSeconds } from 'utils/helpers';\n// Components\nimport { Card, DrawingCanvas, Icons, Step } from 'components';\n\ntype StepDrawProps = {\n  secretCard: ArteRuimCard | PlainObject;\n  onSubmitDrawing: GenericFunction;\n};\n\nexport function StepDraw({ secretCard, onSubmitDrawing }: StepDrawProps) {\n  const { translate } = useLanguage();\n  const { isDebugEnabled } = useDevFeatures();\n  const [lines, setLines] = useState<any>([]);\n  const [isTimesUp, setTimesUp] = useState(false);\n\n  const { seconds } = useTimer({\n    expiryTimestamp: inNSeconds(11),\n    autoStart: true,\n    onExpire: () => {\n      setTimesUp(true);\n      onSubmitDrawing({\n        drawing: JSON.stringify(lines),\n        cardId: secretCard.id,\n      });\n    },\n  });\n\n  return (\n    <Step>\n      <Card\n        size=\"large\"\n        header={translate('Desenhe', 'Draw', isDebugEnabled ? secretCard?.id : undefined)}\n        footer={Array(secretCard?.level).fill('•').join('')}\n        className=\"a-draw-step__card\"\n        color=\"yellow\"\n      >\n        {secretCard?.text}\n        <span className=\"a-draw-step__timer\">{seconds > 0 ? seconds - 1 : 0}</span>\n      </Card>\n      {isTimesUp ? (\n        <Icons.Panic style={{ background: 'white', width: '500px', padding: '2em' }} />\n      ) : (\n        <DrawingCanvas lines={lines} setLines={setLines} />\n      )}\n    </Step>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport useSound from 'use-sound';\n// State & Hooks\nimport { useIsUserReady, useUser, useLanguage, useStep } from 'hooks';\nimport { useOnSubmitDrawingAPIRequest } from './api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport {\n  Instruction,\n  PhaseAnnouncement,\n  PhaseContainer,\n  RoundAnnouncement,\n  StepSwitcher,\n  Translate,\n} from 'components';\nimport { StepDraw } from './StepDraw';\n\n// Sound\nconst arteRuimTimer = require('sounds/arte-ruim-timer.mp3');\n\nfunction PhaseDraw({ players, state, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, goToNextStep, setStep } = useStep(0);\n  const user = useUser(players);\n  const isUserReady = useIsUserReady(players, state);\n  const [secretCard, setSecretCard] = useState({});\n  const [play] = useSound(arteRuimTimer, { volume: 0.4 });\n\n  useEffect(() => {\n    setSecretCard(players[user?.id]?.currentCard ?? {});\n  }, [players, user?.id]);\n\n  const onSubmitDrawing = useOnSubmitDrawingAPIRequest(setStep);\n\n  const onStartDrawing = () => {\n    play();\n    setStep(2);\n  };\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.ARTE_RUIM.DRAW}>\n      <StepSwitcher\n        step={step}\n        conditions={[!isUserReady, !isUserReady, !isUserReady]}\n        players={players}\n        waitingRoomInstruction={translate(\n          'Vamos aguardar enquanto os outros jogadores terminam seus desenhos!',\n          'Please wait while other players finish their artwork!'\n        )}\n      >\n        {/* Step 0 */}\n        <RoundAnnouncement round={state?.round} onPressButton={goToNextStep} buttonText=\" \" time={5}>\n          <Instruction contained>\n            <Translate\n              pt={`Essa rodada usará cartas de nível ${state?.level || '?'}`}\n              en={`This round uses cards of level ${state?.level || '?'}`}\n            />\n          </Instruction>\n        </RoundAnnouncement>\n        {/* Step 1 */}\n        <PhaseAnnouncement\n          type=\"painting\"\n          title={translate('Desenhe!', 'Draw!')}\n          buttonText={translate('Um dó, lá, si... vamos ir... já!', 'Ready! Set! Go!')}\n          onClose={onStartDrawing}\n          currentRound={state?.round?.current}\n          withoutTimer\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  Você terá 10 segundos para ler a sua carta e desenhá-la.\n                  <br />\n                  Aperte o botão quando estiver pronto!\n                  <br />\n                  Não vale usar números e letras.\n                  <br />\n                  Fique esperto porque o tempo começa assim que você apertar.\n                </>\n              }\n              en={\n                <>\n                  You'll have 10 seconds to read and draw your card.\n                  <br />\n                  Press the button when you're ready!\n                  <br />\n                  You can NOT use numbers or letters.\n                  <br />\n                  Be aware of the timer! It starts as soon as you press the button.\n                </>\n              }\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 2 */}\n        <StepDraw secretCard={secretCard} onSubmitDrawing={onSubmitDrawing} />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseDraw;\n","import { ARTE_RUIM_API } from 'adapters';\nimport { useAPICall, useLanguage } from 'hooks';\n\nexport function useOnSubmitDrawingAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: ARTE_RUIM_API.submitAction,\n    actionName: 'submit-drawing',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(1),\n    successMessage: translate(\n      'Acabou o tempo! Aguarde enquanto os outros participantes desenham',\n      \"Time's up! Wait for the other players to finish their art\"\n    ),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar o desenho',\n      'Oops, the application failed to send your art'\n    ),\n  });\n\n  return (payload: SubmitDrawingPayload) => {\n    request({\n      action: 'SUBMIT_DRAWING',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitVotingAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: ARTE_RUIM_API.submitAction,\n    actionName: 'submit-voting',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: translate(\n      'Avaliação enviada! Agora aguarde os outros jogadores',\n      'Evaluation sent successfully! Wait for the other players'\n    ),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua avaliação',\n      'Oops, the application failed to send your evaluation'\n    ),\n  });\n\n  return (payload: SubmitVotingPayload) => {\n    request({\n      action: 'SUBMIT_VOTING',\n      ...payload,\n    });\n  };\n}\n","// This icon file is generated automatically.\nvar ThunderboltOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M848 359.3H627.7L825.8 109c4.1-5.3.4-13-6.3-13H436c-2.8 0-5.5 1.5-6.9 4L170 547.5c-3.1 5.3.7 12 6.9 12h174.4l-89.4 357.6c-1.9 7.8 7.5 13.3 13.3 7.7L853.5 373c5.2-4.9 1.7-13.7-5.5-13.7zM378.2 732.5l60.3-241H281.1l189.6-327.4h224.6L487 427.4h211L378.2 732.5z\" } }] }, \"name\": \"thunderbolt\", \"theme\": \"outlined\" };\nexport default ThunderboltOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ThunderboltOutlinedSvg from \"@ant-design/icons-svg/es/asn/ThunderboltOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ThunderboltOutlined = function ThunderboltOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ThunderboltOutlinedSvg\n  }));\n};\n\nThunderboltOutlined.displayName = 'ThunderboltOutlined';\nexport default /*#__PURE__*/React.forwardRef(ThunderboltOutlined);","import clsx from 'clsx';\n// Utils\nimport { getEntryId } from 'utils/helpers';\n// Components\nimport { CanvasSVG, Ribbon } from 'components';\n\ntype EvaluationAllDrawingsProps = {\n  drawings: ArteRuimDrawing[];\n  activeItem: string;\n  onActivateItem: GenericFunction;\n  votes: PlainObject;\n  canvasSize: number;\n  players: GamePlayers;\n};\n\nexport function EvaluationAllDrawings({\n  drawings,\n  activeItem,\n  onActivateItem,\n  votes,\n  canvasSize,\n  players,\n}: EvaluationAllDrawingsProps) {\n  const liButtonBaseClass = 'a-evaluation-all-drawings__li-drawing-button';\n\n  return (\n    <ul className=\"a-evaluation-all-drawings\">\n      {drawings?.map((drawingEntry) => {\n        const canvasEntryId = getEntryId(['drawing', drawingEntry.id]);\n        const isActive = activeItem === canvasEntryId;\n        const vote = votes[canvasEntryId];\n        return (\n          <li\n            key={canvasEntryId}\n            className={clsx(liButtonBaseClass, isActive && `${liButtonBaseClass}--active`)}\n            onClick={() => onActivateItem(canvasEntryId)}\n          >\n            {votes?.[canvasEntryId] && <Ribbon label={vote.charAt(vote.length - 1)} />}\n            <CanvasSVG\n              drawing={drawingEntry.drawing}\n              className=\"a-evaluation-all-drawings__drawing\"\n              size={canvasSize}\n            />\n            <span className=\"a-evaluation-all-drawings__artist\">{players[drawingEntry.playerId].name}</span>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","// Ant Design Resources\nimport { WarningOutlined } from '@ant-design/icons';\n// Helpers\nimport { getColorFromLetter } from 'utils/helpers';\n// Components\nimport { Card } from 'components';\n\ntype ArteRuimCardProps = {\n  text?: any;\n  level: number;\n  header?: string;\n};\n\nexport const ArteRuimCard = ({ text, level, header = 'X' }: ArteRuimCardProps) => {\n  return (\n    <Card\n      color={getColorFromLetter(header)}\n      header={header}\n      size=\"medium\"\n      footer={Array(level).fill('•').join('')}\n    >\n      {text ?? <WarningOutlined />}\n    </Card>\n  );\n};\n","import clsx from 'clsx';\nimport { useDevFeatures } from 'hooks';\n// Utils\nimport { LETTERS } from 'utils/constants';\nimport { getEntryId } from 'utils/helpers';\n// Components\nimport { ArteRuimCard as Card } from './Card';\n\ntype EvaluationAllCardsProps = {\n  cards: ArteRuimCard[];\n  activeItem: string;\n  onActivateItem: GenericFunction;\n  votes: PlainObject;\n};\n\nexport function EvaluationAllCards({ cards, activeItem, onActivateItem, votes }: EvaluationAllCardsProps) {\n  const { isDebugEnabled } = useDevFeatures();\n  const liButtonBaseClass = 'a-evaluation-all-cards__li-card-button';\n\n  return (\n    <ul className=\"a-evaluation-all-cards\">\n      {cards.map((cardEntry, index) => {\n        const letter = LETTERS[index];\n        const cardEntryId = getEntryId(['card', cardEntry.id, letter]);\n        const isActive = activeItem === cardEntryId;\n        const isUsed = Object.values(votes).includes(cardEntryId);\n\n        return (\n          <li\n            role=\"button\"\n            key={cardEntryId}\n            className={clsx(\n              liButtonBaseClass,\n              isActive && `${liButtonBaseClass}--active`,\n              isUsed && `${liButtonBaseClass}--used`\n            )}\n            onClick={() => onActivateItem(cardEntryId)}\n          >\n            <Card\n              text={cardEntry.text}\n              level={cardEntry.level}\n              header={isDebugEnabled ? cardEntry.id : letter}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import { Instruction, Translate } from 'components';\n\nexport const EvaluationRules = () => (\n  <Instruction>\n    <Translate\n      pt={\n        <>\n          Encontre os pares de desenho e carta clicando em uma carta ou desenho e em seguida clicando em seu\n          par.\n          <br />\n          Uma bandeirinha aparecerá no topo de cada desenho com a cor e letra da carta que você selecionou.\n          <br />\n          Quando encontrar todos os pares, envie sua avaliação!\n        </>\n      }\n      en={\n        <>\n          Find the pairs of artwork and card by clicking on a card or artwork then on its match.\n          <br />\n          A ribbon will show up on the artwork with the color and letter of the matching card.\n          <br />\n          When you're done, click the button to send your evaluation!\n        </>\n      }\n    />\n  </Instruction>\n);\n\nexport const GalleryRules = () => (\n  <Instruction>\n    <Translate\n      pt={\n        <>\n          Agora, mostraremos cada arte, o que os jogadores votaram e a resposta final.\n          <br />\n          Se você votou na expressão correta, você ganha 2 pontos.\n          <br />\n          Quando for a sua arte, você ganha 1 ponto para cada pessoa que votou corretamente.\n        </>\n      }\n      en={\n        <>\n          Now we show each art, what players voted, and the final answer.\n          <br />\n          You get 2 points if you selected the right card.\n          <br />\n          When players selected the correct card for your artwork, you get 1 point for each match!\n        </>\n      }\n    />\n  </Instruction>\n);\n\nexport const ScoringRules = () => (\n  <Instruction>\n    <Translate\n      pt={\n        <>\n          Você ganha 2 pontos para cada ligação correta entre arte e expressão.\n          <br />\n          Para cada ligação correta que sua arte ganha, você recebe 1 ponto.\n        </>\n      }\n      en={\n        <>\n          You get 2 points if you matched the right card with artwork.\n          <br />\n          For you own artwork, you get 1 point for each correct match the other players done.\n        </>\n      }\n    />\n  </Instruction>\n);\n","import { useCallback, useEffect } from 'react';\n// Ant Design Resources\nimport { Button } from 'antd';\nimport { CloudUploadOutlined, ThunderboltOutlined } from '@ant-design/icons';\n// Hooks\nimport {\n  useGlobalState,\n  useLanguage,\n  useUser,\n  useLoading,\n  useVotingMatch,\n  useCardWidth,\n  useMock,\n} from 'hooks';\n// Utils\nimport { LETTERS, SEPARATOR } from 'utils/constants';\nimport { getEntryId, shuffle } from 'utils/helpers';\n// Components\nimport {\n  ButtonContainer,\n  CanvasResizer,\n  Step,\n  Title,\n  ReadyPlayersBar,\n  Translate,\n  PopoverRule,\n} from 'components';\nimport { EvaluationAllDrawings } from './EvaluationAllDrawings';\nimport { EvaluationAllCards } from './EvaluationAllCards';\nimport { EvaluationRules } from './TextBlobs';\n\nfunction prepareVotes(votes: PlainObject) {\n  return Object.entries(votes).reduce((acc: PlainObject, [drawingEntryId, cardEntryId]) => {\n    const [, drawingId] = drawingEntryId.split(SEPARATOR);\n    const [, cardId] = cardEntryId.split(SEPARATOR);\n    acc[drawingId] = cardId;\n    return acc;\n  }, {});\n}\n\ntype StepEvaluationProps = {\n  drawings: ArteRuimDrawing[];\n  cards: ArteRuimCard[];\n  players: GamePlayers;\n  onSubmitVoting: GenericFunction;\n};\n\nexport function StepEvaluation({ drawings, cards, players, onSubmitVoting }: StepEvaluationProps) {\n  const { isLoading } = useLoading();\n  const { translate } = useLanguage();\n  const user = useUser(players);\n  const canvasWidth = useCardWidth(Math.min(Object.keys(players).length, 6), 16, 150, 500);\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n  const { votes, setVotes, activeItem, activateItem, resetVoting } = useVotingMatch(\n    'drawing',\n    true,\n    drawings.length || 2\n  );\n\n  const onGuessForMe = useCallback(() => {\n    const usedDrawings = Object.keys(votes);\n    const usedCards = Object.values(votes);\n    const drawingsKeys = drawings\n      .map((e: ArteRuimDrawing) => getEntryId(['drawing', e.id]))\n      .filter((key: string) => !usedDrawings.includes(key));\n    const cardsKeys = shuffle(\n      cards\n        .map((e: ArteRuimCard, index: number) => getEntryId(['card', e.id, LETTERS[index]]))\n        .filter((key: string) => !usedCards.includes(key))\n    );\n    const newVotes = { ...votes };\n    drawingsKeys.forEach((drawingKey: string, index: number) => {\n      if (!newVotes[drawingKey]) {\n        newVotes[drawingKey] = cardsKeys[index];\n      }\n    });\n    setVotes(newVotes);\n  }, [cards, drawings, votes, setVotes]);\n\n  useEffect(() => {\n    if (!canvasSize) {\n      // Round to increments of 50\n      setCanvasSize(Math.floor(canvasWidth / 50) * 50);\n    }\n  }, [canvasSize, canvasWidth]); // eslint-disable-line\n\n  const selectOwnDrawing = useCallback(() => {\n    const playersDrawing = (drawings ?? []).find((drawing: ArteRuimDrawing) => drawing.playerId === user.id);\n    if (playersDrawing) {\n      const drawingKey = getEntryId(['drawing', playersDrawing.id]);\n      const cardIndex = (cards ?? []).findIndex((card: ArteRuimCard) => card.playerId === user.id);\n      const cardKey = getEntryId(['card', playersDrawing.id, LETTERS[cardIndex]]);\n      const vote = { [drawingKey]: cardKey };\n      return vote;\n    }\n    return {};\n  }, [user, drawings, cards]);\n\n  // Auto-select the players own drawing and word\n  useEffect(() => {\n    const selection = selectOwnDrawing();\n    if (selection) {\n      setVotes((s: any) => ({ ...s, ...selection }));\n    }\n  }, [selectOwnDrawing, setVotes]);\n\n  useMock(() => {\n    onGuessForMe();\n  }, []);\n\n  return (\n    <Step className=\"a-evaluation-step\">\n      <PopoverRule content={<EvaluationRules />} />\n      <CanvasResizer />\n      <Title>\n        <Translate pt=\"Adivinhação\" en=\"Match the Pairs\" />\n      </Title>\n\n      <ButtonContainer>\n        <Button\n          type=\"default\"\n          icon={<ThunderboltOutlined />}\n          onClick={() => resetVoting(selectOwnDrawing())}\n          disabled={isLoading}\n        >\n          <Translate pt=\"Limpar seleções\" en=\"Clear selections\" />\n        </Button>\n        <Button\n          type=\"default\"\n          icon={<ThunderboltOutlined />}\n          onClick={onGuessForMe}\n          disabled={isLoading || Object.values(votes).length === drawings.length}\n        >\n          <Translate pt=\"Chutar restantes\" en=\"Guess for me\" />\n        </Button>\n        <Button\n          type=\"primary\"\n          onClick={() => onSubmitVoting({ votes: prepareVotes(votes) })}\n          disabled={isLoading || Object.values(votes).length < drawings.length}\n          icon={<CloudUploadOutlined />}\n        >\n          <Translate pt=\"Enviar sua avaliação\" en=\"Send evaluation\" />\n        </Button>\n      </ButtonContainer>\n\n      <EvaluationAllDrawings\n        drawings={drawings ?? []}\n        activeItem={activeItem}\n        onActivateItem={activateItem}\n        votes={votes}\n        canvasSize={canvasSize}\n        players={players}\n      />\n\n      <EvaluationAllCards\n        cards={cards ?? []}\n        activeItem={activeItem}\n        onActivateItem={activateItem}\n        votes={votes}\n      />\n\n      <ReadyPlayersBar\n        players={players}\n        readyText={translate('Já acabei, anda logo!', \"I'm done, hurry up!\")}\n        readyTextPlural={translate('Já acabamos, anda logo!', \"We're done, hurry up!\")}\n      />\n    </Step>\n  );\n}\n","// Hooks\nimport { useIsUserReady, useLanguage, useStep } from 'hooks';\nimport { useOnSubmitVotingAPIRequest } from './api-requests';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { PhaseContainer, StepSwitcher, PhaseAnnouncement } from 'components';\nimport { StepEvaluation } from './StepEvaluation';\nimport { EvaluationRules } from './TextBlobs';\n\nfunction EvaluationPhase({ players, state, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, goToNextStep, setStep } = useStep(0);\n  const isUserReady = useIsUserReady(players, state);\n  const onSubmitVoting = useOnSubmitVotingAPIRequest(setStep);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.ARTE_RUIM.EVALUATION}>\n      <StepSwitcher\n        step={step}\n        conditions={[!isUserReady, !isUserReady]}\n        players={players}\n        waitingRoomInstruction={translate(\n          'Vamos aguardar enquanto os outros jogadores terminam de avaliar!',\n          'Please wait while other players finish their evaluations!'\n        )}\n      >\n        {/*Step 0 */}\n        <PhaseAnnouncement\n          type=\"evaluate\"\n          title={translate('Adivinhação', 'Match the Pairs')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <EvaluationRules />\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepEvaluation\n          drawings={state.drawings}\n          cards={state.cards}\n          players={players}\n          onSubmitVoting={onSubmitVoting}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default EvaluationPhase;\n","// Components\nimport { AvatarEntry, Translate } from 'components';\n\ntype GalleryWindowCreditsProps = {\n  artistName: string;\n  artistAvatarId: string;\n};\n\nexport function GalleryWindowCredits({ artistName, artistAvatarId }: GalleryWindowCreditsProps) {\n  return (\n    <div className=\"a-gallery-window__credits\">\n      <div className=\"a-gallery-window__label\">\n        <Translate pt=\"Artista\" en=\"Artist\" />\n      </div>\n      <span className=\"a-gallery-window__artist-name\">\n        <AvatarEntry id={artistAvatarId} name={artistName} />\n      </span>\n    </div>\n  );\n}\n","// This icon file is generated automatically.\nvar MessageFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M924.3 338.4a447.57 447.57 0 00-96.1-143.3 443.09 443.09 0 00-143-96.3A443.91 443.91 0 00512 64h-2c-60.5.3-119 12.3-174.1 35.9a444.08 444.08 0 00-141.7 96.5 445 445 0 00-95 142.8A449.89 449.89 0 0065 514.1c.3 69.4 16.9 138.3 47.9 199.9v152c0 25.4 20.6 46 45.9 46h151.8a447.72 447.72 0 00199.5 48h2.1c59.8 0 117.7-11.6 172.3-34.3A443.2 443.2 0 00827 830.5c41.2-40.9 73.6-88.7 96.3-142 23.5-55.2 35.5-113.9 35.8-174.5.2-60.9-11.6-120-34.8-175.6zM312.4 560c-26.4 0-47.9-21.5-47.9-48s21.5-48 47.9-48 47.9 21.5 47.9 48-21.4 48-47.9 48zm199.6 0c-26.4 0-47.9-21.5-47.9-48s21.5-48 47.9-48 47.9 21.5 47.9 48-21.5 48-47.9 48zm199.6 0c-26.4 0-47.9-21.5-47.9-48s21.5-48 47.9-48 47.9 21.5 47.9 48-21.5 48-47.9 48z\" } }] }, \"name\": \"message\", \"theme\": \"filled\" };\nexport default MessageFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport MessageFilledSvg from \"@ant-design/icons-svg/es/asn/MessageFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar MessageFilled = function MessageFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: MessageFilledSvg\n  }));\n};\n\nMessageFilled.displayName = 'MessageFilled';\nexport default /*#__PURE__*/React.forwardRef(MessageFilled);","import { orderBy } from 'lodash';\n// Ant Design Resources\nimport { Avatar as AntAvatar } from 'antd';\nimport { CrownFilled, MessageFilled } from '@ant-design/icons';\n// Utils\nimport { getPlayersFromIds } from 'utils/helpers';\n// Components\nimport { Avatar, Translate } from 'components';\n\ntype GalleryWindowGuessesProps = {\n  playersSay: PlayersSay;\n  players: GamePlayers;\n  cards: ArteRuimCard[];\n  windowCardId: string;\n  artistColor: string;\n};\n\nexport function GalleryWindowGuesses({\n  playersSay,\n  players,\n  cards,\n  windowCardId,\n  artistColor,\n}: GalleryWindowGuessesProps) {\n  const entries = orderBy(\n    Object.entries(playersSay).map(([cardId, playersIds]) => {\n      return {\n        cardId,\n        card: cards.find((i) => i.id === cardId),\n        playersIds,\n        count: playersIds.length,\n        isCorrect: windowCardId === cardId,\n      };\n    }),\n    ['isCorrect', 'count', 'card.text'],\n    ['desc', 'desc', 'asc']\n  );\n\n  return (\n    <div className=\"a-gallery-window__guesses\">\n      <div className=\"a-gallery-window__label\">\n        <Translate pt=\"Participantes votaram\" en=\"Players voted\" />\n      </div>\n      {entries.map((entry, index) => {\n        return (\n          <div key={`guess-${entry.cardId}-${index}`} className=\"a-gallery-window__guess\">\n            <div\n              className=\"a-gallery-window__speech-bubble\"\n              style={entry.isCorrect ? { backgroundColor: artistColor, color: 'white' } : {}}\n            >\n              {entry.isCorrect ? (\n                <CrownFilled className=\"a-gallery-window__speech-bubble-icon\" style={{ color: 'white' }} />\n              ) : (\n                <MessageFilled className=\"a-gallery-window__speech-bubble-icon\" />\n              )}\n              {entry.card?.text}\n            </div>\n            <div className=\"a-gallery-window__players\">\n              <AntAvatar.Group>\n                {entry.playersIds.map((playerId) => (\n                  <Avatar\n                    id={players[playerId].avatarId}\n                    key={`guess-avatar-${players[playerId].avatarId}`}\n                  />\n                ))}\n              </AntAvatar.Group>\n              <span className=\"a-gallery-window__players-names\">\n                {getPlayersFromIds(entry.playersIds, players, true).join(', ')}\n              </span>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","// This icon file is generated automatically.\nvar StepBackwardOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"0 0 1024 1024\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M347.6 528.95l383.2 301.02c14.25 11.2 35.2 1.1 35.2-16.95V210.97c0-18.05-20.95-28.14-35.2-16.94L347.6 495.05a21.53 21.53 0 000 33.9M330 864h-64a8 8 0 01-8-8V168a8 8 0 018-8h64a8 8 0 018 8v688a8 8 0 01-8 8\" } }] }, \"name\": \"step-backward\", \"theme\": \"outlined\" };\nexport default StepBackwardOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport StepBackwardOutlinedSvg from \"@ant-design/icons-svg/es/asn/StepBackwardOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar StepBackwardOutlined = function StepBackwardOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: StepBackwardOutlinedSvg\n  }));\n};\n\nStepBackwardOutlined.displayName = 'StepBackwardOutlined';\nexport default /*#__PURE__*/React.forwardRef(StepBackwardOutlined);","// This icon file is generated automatically.\nvar PauseOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M304 176h80v672h-80zm408 0h-64c-4.4 0-8 3.6-8 8v656c0 4.4 3.6 8 8 8h64c4.4 0 8-3.6 8-8V184c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"pause\", \"theme\": \"outlined\" };\nexport default PauseOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PauseOutlinedSvg from \"@ant-design/icons-svg/es/asn/PauseOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PauseOutlined = function PauseOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PauseOutlinedSvg\n  }));\n};\n\nPauseOutlined.displayName = 'PauseOutlined';\nexport default /*#__PURE__*/React.forwardRef(PauseOutlined);","// This icon file is generated automatically.\nvar PlayCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M719.4 499.1l-296.1-215A15.9 15.9 0 00398 297v430c0 13.1 14.8 20.5 25.3 12.9l296.1-215a15.9 15.9 0 000-25.8zm-257.6 134V390.9L628.5 512 461.8 633.1z\" } }] }, \"name\": \"play-circle\", \"theme\": \"outlined\" };\nexport default PlayCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlayCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlayCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PlayCircleOutlined = function PlayCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlayCircleOutlinedSvg\n  }));\n};\n\nPlayCircleOutlined.displayName = 'PlayCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(PlayCircleOutlined);","// This icon file is generated automatically.\nvar StepForwardOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"0 0 1024 1024\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M676.4 528.95L293.2 829.97c-14.25 11.2-35.2 1.1-35.2-16.95V210.97c0-18.05 20.95-28.14 35.2-16.94l383.2 301.02a21.53 21.53 0 010 33.9M694 864h64a8 8 0 008-8V168a8 8 0 00-8-8h-64a8 8 0 00-8 8v688a8 8 0 008 8\" } }] }, \"name\": \"step-forward\", \"theme\": \"outlined\" };\nexport default StepForwardOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport StepForwardOutlinedSvg from \"@ant-design/icons-svg/es/asn/StepForwardOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar StepForwardOutlined = function StepForwardOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: StepForwardOutlinedSvg\n  }));\n};\n\nStepForwardOutlined.displayName = 'StepForwardOutlined';\nexport default /*#__PURE__*/React.forwardRef(StepForwardOutlined);","import { useEffect } from 'react';\nimport { useTimer } from 'react-timer-hook';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\nimport {\n  PauseOutlined,\n  PlayCircleOutlined,\n  StepBackwardOutlined,\n  StepForwardOutlined,\n  TrophyOutlined,\n} from '@ant-design/icons';\n// Utils\nimport { inNSeconds } from 'utils/helpers';\n// Components\nimport { Translate } from 'components';\n\nconst WINDOW_DURATION = 10;\n\ntype GalleryWindowControlsProps = {\n  galleryLength: number;\n  activeIndex: number;\n  setActiveIndex: GenericFunction;\n  setStep: GenericFunction;\n  disableControls: boolean;\n  barColor: string;\n};\n\nexport function GalleryWindowControls({\n  galleryLength,\n  activeIndex,\n  setActiveIndex,\n  setStep,\n  disableControls,\n  barColor,\n}: GalleryWindowControlsProps) {\n  const { minutes, seconds, isRunning, pause, resume } = useTimer({\n    expiryTimestamp: inNSeconds(WINDOW_DURATION * galleryLength),\n    autoStart: true,\n    onExpire: () => setStep(2),\n  });\n\n  const time = minutes * 60 + seconds;\n\n  // Automatically go to the next window every 10 seconds\n  useEffect(() => {\n    if (time < WINDOW_DURATION * galleryLength && time > 0 && time % WINDOW_DURATION === 0) {\n      setActiveIndex((s: number) => Math.min(s + 1, galleryLength - 1));\n    }\n  }, [time, setActiveIndex, galleryLength]);\n\n  const goToPreviousStep = () => {\n    setActiveIndex((s: number) => Math.max(s - 1, 0));\n  };\n\n  const goToNextStep = () => {\n    setActiveIndex((s: number) => Math.min(s + 1, galleryLength - 1));\n  };\n\n  return (\n    <div className=\"a-gallery-window__controls\">\n      <div className=\"a-gallery-window__timer-bar\">\n        <span\n          className=\"a-gallery-window__timer-bar-pill\"\n          style={{\n            width: `${Math.abs((WINDOW_DURATION * time) / galleryLength - 100)}%`,\n            backgroundColor: barColor ?? 'gray',\n          }}\n        ></span>\n      </div>\n\n      {!disableControls && (\n        <Space>\n          <Button\n            size=\"large\"\n            icon={<StepBackwardOutlined />}\n            onClick={goToPreviousStep}\n            disabled={disableControls || activeIndex === 0}\n          >\n            <Translate pt=\"Desenho Anterior\" en=\"Previous Art\" />\n          </Button>\n          <Button\n            size=\"large\"\n            icon={isRunning ? <PauseOutlined /> : <PlayCircleOutlined />}\n            onClick={isRunning ? pause : resume}\n          />\n          <Button\n            size=\"large\"\n            onClick={goToNextStep}\n            disabled={disableControls || activeIndex === galleryLength - 1}\n          >\n            <Translate pt=\"Próximo Desenho\" en=\"Next Art\" /> <StepForwardOutlined />\n          </Button>\n          <Button\n            size=\"large\"\n            onClick={() => setStep(2)}\n            icon={<TrophyOutlined />}\n            disabled={disableControls}\n          >\n            <Translate pt=\"Ver Ranking\" en=\"See Ranking\" />\n          </Button>\n        </Space>\n      )}\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Avatar as AntAvatar, Typography } from 'antd';\nimport { CrownFilled } from '@ant-design/icons';\n// Utils\nimport { getPlayersFromIds } from 'utils/helpers';\n// Components\nimport { Avatar, AvatarIcon, StarPoints, Translate } from 'components';\n\ntype GalleryWindowResultProps = {\n  playerArtist: any;\n  correctAnswerId: any;\n  correctAnswerText: any;\n  playersPoints: any;\n  playersSay: PlayersSay;\n  players: Players;\n};\n\nexport function GalleryWindowResult({\n  playerArtist,\n  correctAnswerId,\n  correctAnswerText,\n  playersPoints,\n  playersSay,\n  players,\n}: GalleryWindowResultProps) {\n  const correctGuesses = Object.values(playersSay?.[correctAnswerId] ?? {});\n\n  return (\n    <div className=\"a-gallery-window__result\">\n      <div className=\"a-gallery-window__label\">\n        <Translate pt=\"E o título correto da obra é\" en=\"And the masterpiece title is\" />\n      </div>\n      <div className=\"a-gallery-window__speech-bubble\">\n        <CrownFilled className=\"a-gallery-window__speech-bubble-icon\" />\n        {correctAnswerText}\n      </div>\n      {correctGuesses.length ? (\n        <>\n          <div className=\"a-gallery-window__players\">\n            <AntAvatar.Group>\n              {correctGuesses.map((playerId) => {\n                return <Avatar key={`correct-guess-avatar-${playerId}`} id={players[playerId].avatarId} />;\n              })}\n            </AntAvatar.Group>\n            <StarPoints quantity={2} keyPrefix={`guessers-points-${playerArtist.id}`} />\n            <span className=\"a-gallery-window__players-names\">\n              {getPlayersFromIds(correctGuesses, players, true).join(', ')}\n            </span>\n          </div>\n          <div className=\"a-gallery-window__artist-points\">\n            <Avatar id={playerArtist.avatarId} />{' '}\n            <StarPoints\n              quantity={playersPoints?.[playerArtist.id]}\n              keyPrefix={`artist-points-${playerArtist.id}`}\n            />{' '}\n            <span className=\"a-gallery-window__players-names\">{playerArtist.name}</span>\n          </div>\n        </>\n      ) : (\n        <Typography.Text className=\"a-gallery-window__no-wins\">\n          <AvatarIcon type=\"garbage\" size=\"large\" shape=\"square\" />\n          <Translate\n            pt=\"Nossa, ninguém acertou. Esse desenho deve ter sido muito ruim.\"\n            en=\"Wow, nobody got it. It must have been a very crappy drawing. Shame...\"\n          />\n        </Typography.Text>\n      )}\n    </div>\n  );\n}\n","// Hooks\nimport { useCardWidth } from 'hooks';\n// Constants\nimport { AVATARS } from 'utils/constants';\n// Components\nimport { CanvasSVG } from 'components';\nimport { GalleryWindowCredits } from './GalleryWindowCredits';\nimport { GalleryWindowGuesses } from './GalleryWindowGuesses';\nimport { GalleryWindowControls } from './GalleryWindowControls';\nimport { GalleryWindowResult } from './GalleryWindowResult';\n\ntype GalleryWindowProps = {\n  window: ArteRuimWindow;\n  galleryLength: number;\n  players: GamePlayers;\n  activeIndex: number;\n  setActiveIndex: GenericFunction;\n  setStep: GenericFunction;\n  cards: ArteRuimCard[];\n  disableControls: boolean;\n};\n\nexport function GalleryWindow({\n  window,\n  galleryLength,\n  players,\n  activeIndex,\n  setActiveIndex,\n  setStep,\n  cards,\n  disableControls,\n}: GalleryWindowProps) {\n  const canvasWidth = useCardWidth(2, 16, 200, 500);\n\n  const { drawing, artistId, id, text, playersPoints, playersSay } = window;\n\n  const playerArtist = players[artistId];\n  const currentColor = AVATARS[playerArtist.avatarId].color;\n\n  return (\n    <div className=\"a-gallery-window\">\n      <div className=\"a-gallery-window__drawing-container\">\n        <CanvasSVG drawing={drawing} size={canvasWidth} className=\"a-gallery-window__drawing\" />\n      </div>\n\n      <GalleryWindowCredits artistName={playerArtist.name} artistAvatarId={playerArtist.avatarId} />\n\n      <GalleryWindowGuesses\n        players={players}\n        playersSay={playersSay}\n        cards={cards}\n        windowCardId={window.id}\n        artistColor={currentColor}\n      />\n\n      <GalleryWindowResult\n        playerArtist={playerArtist}\n        correctAnswerId={id}\n        correctAnswerText={text}\n        playersPoints={playersPoints}\n        playersSay={playersSay}\n        players={players}\n      />\n\n      <GalleryWindowControls\n        galleryLength={galleryLength}\n        activeIndex={activeIndex}\n        setActiveIndex={setActiveIndex}\n        setStep={setStep}\n        disableControls={disableControls}\n        barColor={currentColor}\n      />\n    </div>\n  );\n}\n","// Components\nimport { PopoverRule, Step, Title, Translate } from 'components';\nimport { GalleryWindow } from './GalleryWindow';\nimport { ScoringRules } from './TextBlobs';\n\ntype StepGalleryProps = {\n  gallery: ArteRuimWindow[];\n  players: GamePlayers;\n  cards: ArteRuimCard[];\n  activeIndex: number;\n  setActiveIndex: GenericFunction;\n  setStep: GenericFunction;\n  isFirstGalleryRunThrough: boolean;\n};\n\nexport function StepGallery({\n  gallery,\n  players,\n  cards,\n  activeIndex,\n  setActiveIndex,\n  setStep,\n  isFirstGalleryRunThrough,\n}: StepGalleryProps) {\n  return (\n    <Step className=\"a-gallery-phase__windows\">\n      <Title>\n        <Translate pt=\"Galeria de Arte\" en=\"Art Gallery\" />\n      </Title>\n\n      <PopoverRule content={<ScoringRules />} />\n\n      {gallery && (\n        <GalleryWindow\n          window={gallery[activeIndex]}\n          galleryLength={gallery.length}\n          cards={cards}\n          players={players}\n          activeIndex={activeIndex}\n          setActiveIndex={setActiveIndex}\n          setStep={setStep}\n          disableControls={isFirstGalleryRunThrough}\n        />\n      )}\n    </Step>\n  );\n}\n","// This icon file is generated automatically.\nvar PictureOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 632H136v-39.9l138.5-164.3 150.1 178L658.1 489 888 761.6V792zm0-129.8L664.2 396.8c-3.2-3.8-9-3.8-12.2 0L424.6 666.4l-144-170.7c-3.2-3.8-9-3.8-12.2 0L136 652.7V232h752v430.2zM304 456a88 88 0 100-176 88 88 0 000 176zm0-116c15.5 0 28 12.5 28 28s-12.5 28-28 28-28-12.5-28-28 12.5-28 28-28z\" } }] }, \"name\": \"picture\", \"theme\": \"outlined\" };\nexport default PictureOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PictureOutlinedSvg from \"@ant-design/icons-svg/es/asn/PictureOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PictureOutlined = function PictureOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PictureOutlinedSvg\n  }));\n};\n\nPictureOutlined.displayName = 'PictureOutlined';\nexport default /*#__PURE__*/React.forwardRef(PictureOutlined);","// Ant Design Resources\nimport { Button } from 'antd';\nimport { PictureOutlined } from '@ant-design/icons';\n// Components\nimport {\n  AdminNextRoundButton,\n  PopoverRule,\n  RankingBoard,\n  RoundsLeftInstruction,\n  Step,\n  Title,\n  Translate,\n} from 'components';\nimport { ScoringRules } from './TextBlobs';\n\ntype StepRankingProps = {\n  players: GamePlayers;\n  ranking: GameRanking;\n  isGameOver: boolean;\n  round: GameRound;\n  goToPreviousStep: GenericFunction;\n  setActiveIndex: GenericFunction;\n  isLastRound?: boolean;\n};\n\nexport function StepRanking({\n  players,\n  ranking,\n  isGameOver,\n  round,\n  goToPreviousStep,\n  setActiveIndex,\n  isLastRound,\n}: StepRankingProps) {\n  return (\n    <Step>\n      <Title>Ranking</Title>\n      <RankingBoard players={players} ranking={ranking} />\n\n      <PopoverRule content={<ScoringRules />} />\n\n      {!isGameOver && <RoundsLeftInstruction round={round} />}\n\n      <Button\n        size=\"large\"\n        onClick={() => {\n          goToPreviousStep();\n          setActiveIndex(0);\n        }}\n        icon={<PictureOutlined />}\n      >\n        <Translate pt=\"Ver Galeria De Novo\" en=\"See Gallery Again\" />\n      </Button>\n\n      <AdminNextRoundButton round={round} lastRound={isLastRound} />\n    </Step>\n  );\n}\n","import { useEffect, useState } from 'react';\n// State & Hooks\nimport { useLanguage, useStep } from 'hooks';\n// Resources and Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { PhaseContainer, StepSwitcher, PhaseAnnouncement } from 'components';\nimport { GalleryRules } from './TextBlobs';\nimport { StepGallery } from './StepGallery';\nimport { StepRanking } from './StepRanking';\n\nfunction PhaseGallery({ players, state, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, goToNextStep, goToPreviousStep, setStep } = useStep(0);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [isFirstGalleryRunThrough, setIsFirstGalleryRunThrough] = useState(true);\n\n  // Changes isFirstGalleryRunThrough property which disables controls, after the first gallery run through\n  useEffect(() => {\n    if (isFirstGalleryRunThrough && step > 1) {\n      setIsFirstGalleryRunThrough(false);\n    }\n  }, [step, isFirstGalleryRunThrough]);\n\n  const isGameOver = Object.values(players).some((player) => player.score > 50);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ARTE_RUIM.GALLERY}\n      className=\"a-gallery-phase\"\n    >\n      <StepSwitcher step={step} players={players}>\n        {/*Step 0 */}\n        <PhaseAnnouncement\n          type=\"picture\"\n          title={translate('Galeria de Arte', 'Art Gallery')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          unskippable\n        >\n          <GalleryRules />\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepGallery\n          gallery={state.gallery}\n          players={players}\n          cards={state.cards}\n          activeIndex={activeIndex}\n          setActiveIndex={setActiveIndex}\n          setStep={setStep}\n          isFirstGalleryRunThrough={isFirstGalleryRunThrough}\n        />\n\n        {/* Step 2 */}\n        <StepRanking\n          players={players}\n          ranking={state.ranking}\n          isGameOver={isGameOver}\n          round={state.round}\n          goToPreviousStep={goToPreviousStep}\n          setActiveIndex={setActiveIndex}\n          isLastRound={state?.lastRound}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseGallery;\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Avatar, Tooltip } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks';\n\nconst GRADES = ['F', 'D', 'D+', 'C-', 'C', 'C+', 'B-', 'B', 'B+', 'A-', 'A', 'A+'];\n\ntype DrawingGradeProps = {\n  value: number;\n};\n\nexport const DrawingGrade = ({ value }: DrawingGradeProps) => {\n  const { translate } = useLanguage();\n  const grade = GRADES[Math.floor(value / 0.084)];\n\n  const baseClass = 'a-drawing-grade';\n\n  return (\n    <Tooltip\n      title={translate(\n        `Nota baseada em quantos acertos o desenho teve: ${value * 100}%`,\n        `Grade based on the number of correct guesses the artwork got: ${value * 100}%`\n      )}\n    >\n      <Avatar className={clsx(baseClass, `${baseClass}--${grade[0]}`)}>{grade}</Avatar>\n    </Tooltip>\n  );\n};\n","// Components\nimport { CanvasSVG, GameOverWrapper, Translate } from 'components';\nimport { DrawingGrade } from './DrawingGrade';\n\nfunction PhaseGameOver({ state, players, info }: PhaseProps) {\n  return (\n    <GameOverWrapper info={info} state={state} announcementIcon=\"trophy\">\n      <ul className=\"a-game-over__gallery\">\n        {state.drawings.map((entry: ArteRuimDrawing) => {\n          return (\n            <li className=\"a-game-over__gallery-item\" key={entry.drawing} style={{ width: '200px' }}>\n              <CanvasSVG drawing={entry.drawing} size={200} className=\"a-game-over__gallery-canvas\" />\n              <span className=\"a-game-over__credits\">\n                \"{entry.text}\" <Translate pt=\"por\" en=\"by\" /> {players[entry.playerId].name}\n              </span>\n              <DrawingGrade value={entry.successRate ?? 0} />\n            </li>\n          );\n        })}\n      </ul>\n    </GameOverWrapper>\n  );\n}\n\nexport default PhaseGameOver;\n","// Constants\nimport { GAME_COLLECTION } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session, PhaseSetup, PhaseRules, PageError, PhaseLobby } from 'components';\nimport PhaseDraw from './PhaseDraw';\nimport PhaseEvaluation from './PhaseEvaluation';\nimport PhaseGallery from './PhaseGallery';\nimport PhaseGameOver from './PhaseGameOver';\n\nfunction SessionArteRuim({ gameId }: SessionProps) {\n  function getActiveComponent(phase: string) {\n    switch (phase) {\n      case PHASES.DEFAULT.LOBBY:\n        return PhaseLobby;\n      case PHASES.DEFAULT.RULES:\n        return PhaseRules;\n      case PHASES.DEFAULT.SETUP:\n        return PhaseSetup;\n      case PHASES.ARTE_RUIM.DRAW:\n        return PhaseDraw;\n      case PHASES.ARTE_RUIM.EVALUATION:\n        return PhaseEvaluation;\n      case PHASES.ARTE_RUIM.GALLERY:\n        return PhaseGallery;\n      case PHASES.DEFAULT.GAME_OVER:\n        return PhaseGameOver;\n      default:\n        return PageError;\n    }\n  }\n\n  return (\n    <Session\n      gameId={gameId}\n      gameCollection={GAME_COLLECTION.ARTE_RUIM}\n      getActiveComponent={getActiveComponent}\n    />\n  );\n}\n\nexport default SessionArteRuim;\n","// This icon file is generated automatically.\nvar CloudUploadOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M518.3 459a8 8 0 00-12.6 0l-112 141.7a7.98 7.98 0 006.3 12.9h73.9V856c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V613.7H624c6.7 0 10.4-7.7 6.3-12.9L518.3 459z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M811.4 366.7C765.6 245.9 648.9 160 512.2 160S258.8 245.8 213 366.6C127.3 389.1 64 467.2 64 560c0 110.5 89.5 200 199.9 200H304c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8h-40.1c-33.7 0-65.4-13.4-89-37.7-23.5-24.2-36-56.8-34.9-90.6.9-26.4 9.9-51.2 26.2-72.1 16.7-21.3 40.1-36.8 66.1-43.7l37.9-9.9 13.9-36.6c8.6-22.8 20.6-44.1 35.7-63.4a245.6 245.6 0 0152.4-49.9c41.1-28.9 89.5-44.2 140-44.2s98.9 15.3 140 44.2c19.9 14 37.5 30.8 52.4 49.9 15.1 19.3 27.1 40.7 35.7 63.4l13.8 36.5 37.8 10C846.1 454.5 884 503.8 884 560c0 33.1-12.9 64.3-36.3 87.7a123.07 123.07 0 01-87.6 36.3H720c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h40.1C870.5 760 960 670.5 960 560c0-92.7-63.1-170.7-148.6-193.3z\" } }] }, \"name\": \"cloud-upload\", \"theme\": \"outlined\" };\nexport default CloudUploadOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloudUploadOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloudUploadOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CloudUploadOutlined = function CloudUploadOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CloudUploadOutlinedSvg\n  }));\n};\n\nCloudUploadOutlined.displayName = 'CloudUploadOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloudUploadOutlined);","// This icon file is generated automatically.\nvar TrophyOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M868 160h-92v-40c0-4.4-3.6-8-8-8H256c-4.4 0-8 3.6-8 8v40h-92a44 44 0 00-44 44v148c0 81.7 60 149.6 138.2 162C265.7 630.2 359 721.7 476 734.5v105.2H280c-17.7 0-32 14.3-32 32V904c0 4.4 3.6 8 8 8h512c4.4 0 8-3.6 8-8v-32.3c0-17.7-14.3-32-32-32H548V734.5C665 721.7 758.3 630.2 773.8 514 852 501.6 912 433.7 912 352V204a44 44 0 00-44-44zM184 352V232h64v207.6a91.99 91.99 0 01-64-87.6zm520 128c0 49.1-19.1 95.4-53.9 130.1-34.8 34.8-81 53.9-130.1 53.9h-16c-49.1 0-95.4-19.1-130.1-53.9-34.8-34.8-53.9-81-53.9-130.1V184h384v296zm136-128c0 41-26.9 75.8-64 87.6V232h64v120z\" } }] }, \"name\": \"trophy\", \"theme\": \"outlined\" };\nexport default TrophyOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport TrophyOutlinedSvg from \"@ant-design/icons-svg/es/asn/TrophyOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar TrophyOutlined = function TrophyOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: TrophyOutlinedSvg\n  }));\n};\n\nTrophyOutlined.displayName = 'TrophyOutlined';\nexport default /*#__PURE__*/React.forwardRef(TrophyOutlined);","// This icon file is generated automatically.\nvar WarningOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M464 720a48 48 0 1096 0 48 48 0 10-96 0zm16-304v184c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V416c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8zm475.7 440l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48zm-783.5-27.9L512 239.9l339.8 588.2H172.2z\" } }] }, \"name\": \"warning\", \"theme\": \"outlined\" };\nexport default WarningOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport WarningOutlinedSvg from \"@ant-design/icons-svg/es/asn/WarningOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar WarningOutlined = function WarningOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: WarningOutlinedSvg\n  }));\n};\n\nWarningOutlined.displayName = 'WarningOutlined';\nexport default /*#__PURE__*/React.forwardRef(WarningOutlined);"],"names":["src","callback","id","volume","playbackRate","soundEnabled","interrupt","onload","delegated","HowlConstructor","React","isMounted","duration","setDuration","sound","setSound","handleLoad","this","mod","Array","rate","JSON","play","options","stop","pause","StepDraw","secretCard","onSubmitDrawing","translate","useLanguage","isDebugEnabled","useDevFeatures","useState","lines","setLines","isTimesUp","setTimesUp","seconds","useTimer","expiryTimestamp","inNSeconds","autoStart","onExpire","drawing","stringify","cardId","size","header","undefined","footer","level","fill","join","className","color","text","style","background","width","padding","arteRuimTimer","require","players","state","info","useStep","step","goToNextStep","setStep","user","useUser","isUserReady","useIsUserReady","setSecretCard","useSound","useEffect","currentCard","request","useAPICall","apiFunction","ARTE_RUIM_API","actionName","onBeforeCall","onError","successMessage","errorMessage","payload","action","useOnSubmitDrawingAPIRequest","phase","allowedPhase","PHASES","conditions","waitingRoomInstruction","round","onPressButton","buttonText","time","contained","pt","en","type","title","onClose","currentRound","current","withoutTimer","ThunderboltOutlined","props","ref","AntdIcon","_objectSpread","icon","ThunderboltOutlinedSvg","displayName","EvaluationAllDrawings","drawings","activeItem","onActivateItem","votes","canvasSize","liButtonBaseClass","map","drawingEntry","canvasEntryId","getEntryId","isActive","vote","clsx","onClick","label","charAt","length","playerId","name","ArteRuimCard","getColorFromLetter","WarningOutlined","EvaluationAllCards","cards","cardEntry","index","letter","LETTERS","cardEntryId","isUsed","Object","values","includes","role","EvaluationRules","GalleryRules","ScoringRules","prepareVotes","entries","reduce","acc","drawingEntryId","split","SEPARATOR","drawingId","StepEvaluation","onSubmitVoting","isLoading","useLoading","canvasWidth","useCardWidth","Math","min","keys","useGlobalState","setCanvasSize","useVotingMatch","setVotes","activateItem","resetVoting","onGuessForMe","useCallback","usedDrawings","usedCards","drawingsKeys","e","filter","key","cardsKeys","shuffle","newVotes","forEach","drawingKey","floor","selectOwnDrawing","playersDrawing","find","cardIndex","findIndex","card","cardKey","selection","s","useMock","content","disabled","CloudUploadOutlined","readyText","readyTextPlural","useOnSubmitVotingAPIRequest","GalleryWindowCredits","artistName","artistAvatarId","MessageFilled","MessageFilledSvg","GalleryWindowGuesses","playersSay","windowCardId","artistColor","orderBy","playersIds","i","count","isCorrect","entry","backgroundColor","CrownFilled","avatarId","getPlayersFromIds","StepBackwardOutlined","StepBackwardOutlinedSvg","PauseOutlined","PauseOutlinedSvg","PlayCircleOutlined","PlayCircleOutlinedSvg","StepForwardOutlined","StepForwardOutlinedSvg","GalleryWindowControls","galleryLength","activeIndex","setActiveIndex","disableControls","barColor","minutes","isRunning","resume","abs","max","TrophyOutlined","GalleryWindowResult","playerArtist","correctAnswerId","correctAnswerText","playersPoints","correctGuesses","quantity","keyPrefix","shape","GalleryWindow","window","artistId","currentColor","AVATARS","StepGallery","gallery","isFirstGalleryRunThrough","PictureOutlined","PictureOutlinedSvg","StepRanking","ranking","isGameOver","goToPreviousStep","isLastRound","lastRound","setIsFirstGalleryRunThrough","some","player","score","unskippable","GRADES","DrawingGrade","value","grade","baseClass","announcementIcon","successRate","gameId","gameCollection","GAME_COLLECTION","getActiveComponent","PhaseLobby","PhaseRules","PhaseSetup","PhaseDraw","PhaseEvaluation","PhaseGallery","PhaseGameOver","PageError","CloudUploadOutlinedSvg","TrophyOutlinedSvg","WarningOutlinedSvg"],"sourceRoot":""}