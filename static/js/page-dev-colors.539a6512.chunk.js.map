{"version":3,"file":"static/js/page-dev-colors.539a6512.chunk.js","mappings":"0PAUMA,EAAc,CAClB,QACA,SACA,SACA,QACA,OACA,OACA,SACA,SACA,OACA,MACA,QACA,OACA,QACA,QAGIC,EAAe,IAAIC,MAAM,GAAGC,KAAK,GAAGC,KAAI,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,CAAd,IA4D9C,UA1DA,YACEC,EAAAA,EAAAA,GAAS,kCACT,IAOMC,EAAgC,CACpCC,OAAQ,kBACRC,OAAQ,SACRC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,gBAChBC,QAAS,UAGX,GAAiCC,EAAAA,EAAAA,KAAjC,eAAOC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACJF,EAAMG,OACRC,EAAAA,GAAAA,KAAA,+BAAqCJ,EAAMG,OAE9C,GAAE,CAACH,IAEJ,IAAMK,EAAcC,OAAOC,QAAQC,GACnC,OACE,UAAC,IAAD,CAAQC,UAAU,aAAlB,WACE,SAAC,IAAD,CAAWC,MAAM,SAASC,SAAQ,WAAMN,EAAYO,OAAlB,QAClC,SAAC,YAAD,CAAgBH,UAAU,cAA1B,UACE,eAAII,MA9B0B,CAClCC,MAAO,OACPpB,QAAS,OACTqB,SAAU,OACVlB,eAAgB,iBA0BZ,SACGd,EAAYI,KAAI,SAAC6B,EAAWC,GAAZ,OACf,eAAoBJ,MAAOtB,EAA3B,UACE,wBACGP,EAAaG,KAAI,SAAC+B,GAAD,OAChB,yBACE,SAAC,KAAD,CACEC,QAAS,kBAAMlB,EAAgB,aAAD,OAAce,EAAd,aAA4BE,EAA5B,MAArB,EADX,UAGE,iBACET,WAAWW,EAAAA,EAAAA,GAAK,mBAAD,4BAA0CJ,EAA1C,YAAuDE,IADxE,uBAGaF,EAHb,KAG0BE,EAH1B,UAJJ,UAAYF,EAAZ,YAAyBE,GADT,OAFbF,EADM,UAuB1B,C","sources":["pages/Dev/Colors.tsx"],"sourcesContent":["import { useCopyToClipboard, useTitle } from 'react-use';\n// Ant Design Resources\nimport { Layout, message } from 'antd';\n// Components\nimport * as icons from 'components/icons/collection';\nimport { DevHeader } from './DevHeader';\nimport { TransparentButton } from 'components/buttons';\nimport { useEffect } from 'react';\nimport clsx from 'clsx';\n\nconst COLOR_NAMES = [\n  'brown',\n  'yellow',\n  'orange',\n  'green',\n  'teal',\n  'blue',\n  'purple',\n  'violet',\n  'pink',\n  'red',\n  'white',\n  'gray',\n  'black',\n  'lime',\n];\n\nconst COLOR_SHADES = new Array(9).fill(1).map((e, i) => e + i);\n\nfunction ColorsPage() {\n  useTitle('Colors | Dev | Tarde Divertida');\n  const styles: React.CSSProperties = {\n    width: '100%',\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n  };\n\n  const stylesLi: React.CSSProperties = {\n    border: '1px solid black',\n    margin: '0.5rem',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: '0.5rem',\n  };\n\n  const [state, copyToClipboard] = useCopyToClipboard();\n\n  useEffect(() => {\n    if (state.value) {\n      message.info(`Copied to clipboard: ${state.value}`);\n    }\n  }, [state]);\n\n  const iconEntries = Object.entries(icons);\n  return (\n    <Layout className=\"dev-layout\">\n      <DevHeader title=\"Colors\" subTitle={`(${iconEntries.length})`} />\n      <Layout.Content className=\"dev-content\">\n        <ul style={styles}>\n          {COLOR_NAMES.map((colorName, index) => (\n            <li key={colorName} style={stylesLi}>\n              <ul>\n                {COLOR_SHADES.map((colorShade) => (\n                  <li key={`${colorName}-${colorShade}`}>\n                    <TransparentButton\n                      onClick={() => copyToClipboard(`get-color(${colorName}, ${colorShade});`)}\n                    >\n                      <div\n                        className={clsx('dev-color-swatch', `dev-color-swatch--${colorName}-${colorShade}`)}\n                      >\n                        get-color({colorName}, {colorShade})\n                      </div>\n                    </TransparentButton>\n                  </li>\n                ))}\n              </ul>\n            </li>\n          ))}\n        </ul>\n      </Layout.Content>\n    </Layout>\n  );\n}\n\nexport default ColorsPage;\n"],"names":["COLOR_NAMES","COLOR_SHADES","Array","fill","map","e","i","useTitle","stylesLi","border","margin","display","flexDirection","alignItems","justifyContent","padding","useCopyToClipboard","state","copyToClipboard","useEffect","value","message","iconEntries","Object","entries","icons","className","title","subTitle","length","style","width","flexWrap","colorName","index","colorShade","onClick","clsx"],"sourceRoot":""}