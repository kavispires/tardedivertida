{"version":3,"file":"static/js/page-td-daily.b255fb0f.chunk.js","mappings":"qcAoBO,SAASA,EAAT,GAA6C,IAA3BC,EAA0B,EAA1BA,UACvB,GAAwBC,EAAAA,EAAAA,UAAS,UAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEA,OACE,iBAAKC,UAAU,UAAf,WACE,gBAAKA,UAAU,gBAAf,UACE,SAAC,IAAD,CAAOC,IAAKC,EAAAA,EAAMC,SAAS,OAG7B,SAAC,IAAD,CAAOH,UAAU,kBAAjB,UACE,SAAC,IAAD,CACEI,iBAAiB,SAAC,KAAD,CAAWC,GAAG,iBAAiBC,GAAG,uBACnDC,kBAAkB,SAClBC,SAAU,SAACC,GAAD,OAAaV,EAAQU,EAAU,QAAU,SAAzC,MAIJ,WAATX,GACC,SAACY,EAAD,CAAkBd,UAAWA,KAE7B,SAACe,EAAD,CAAiBf,UAAWA,MAInC,CAEM,SAASc,EAAT,GAAqF,IAAzDd,EAAwD,EAAxDA,UAAcgB,GAA0C,YACzF,GAAuCC,EAAAA,EAAAA,GAAkD,CACvFC,WAAW,WAAD,wBAAE,+FAAkBC,EAAAA,EAAAA,MAAlB,mFAAF,kDAAC,GACXnB,UAAAA,IAFMoB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OAAQC,EAA3B,EAA2BA,QAS3B,OACE,SAAC,IAAD,CACElB,UAAU,kBACVmB,UAAU,WACVC,MAAM,SACNC,WAAY,CAAEC,KAAM,cAJtB,UAME,gCACGJ,IACC,SAAC,IAAD,CACEK,aACE,SAAC,KAAD,CAAWlB,GAAG,mCAAmCC,GAAG,2CAEtDkB,KAAK,QACLC,UAAQ,EACRzB,UAAU,0BAGd,SAAC,MAAD,gBACEwB,KAAK,UACLE,KAAK,QACLC,QAzBS,WACfV,GACD,EAwBOW,QAASZ,EACTa,OAAK,EACLC,MAAM,SAAC,KAAD,CAAYA,MAAM,SAAC,IAAD,IAAgBJ,KAAK,WACzCd,GAPN,cASE,SAAC,KAAD,CAAWP,GAAG,oBAAoBC,GAAG,+BAK9C,CAED,SAASK,EAAT,GAAsD,IAA3Bf,EAA0B,EAA1BA,UACzB,EAAemC,EAAAA,EAAAA,UAARC,GAAP,eACQC,GAAcC,EAAAA,EAAAA,KAAdD,UACR,GAAoDpC,EAAAA,EAAAA,WAAS,GAA7D,eAAOsC,EAAP,KAA2BC,EAA3B,KAEA,GAAuCvB,EAAAA,EAAAA,GAAkD,CACvFC,WAAW,WAAD,wBAAE,+FAAkBuB,EAAAA,EAAAA,IAAOL,EAAKM,cAAc,YAAaN,EAAKM,cAAc,aAA5E,mFAAF,kDAAC,GACX1C,UAAAA,IAFMoB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OAAQC,EAA3B,EAA2BA,QAS3B,OACE,iCACE,UAAC,IAAD,CACEqB,KAAK,QACLP,KAAMA,EACNQ,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,IACpBE,MAAO,CAAEC,SAAU,KACnBC,cAAe,CAAEC,UAAU,GAC3BC,SAbW,WACf9B,GACD,EAYK+B,aAAa,MARf,WAUE,SAAC,SAAD,CACEC,OAAO,SAAC,KAAD,CAAW5C,GAAG,SAASC,GAAG,WACjCiC,KAAK,WACLW,MAAO,CACL,CAAEC,UAAU,EAAMC,QAASnB,EAAU,sCAAiC,wBAJ1E,UAOE,SAAC,IAAD,OAGF,SAAC,SAAD,CACEgB,OAAO,SAAC,KAAD,CAAW5C,GAAG,QAAQC,GAAG,aAChCiC,KAAK,WACLW,MAAO,CACL,CAAEC,UAAU,EAAMC,QAASnB,EAAU,sCAAiC,wBAExEoB,KAAMpB,EAAU,yBAAuB,2BANzC,UAQE,SAAC,aAAD,MAGDf,IACC,SAAC,SAAD,CAAWwB,WAAY,CAAEY,OAAQ,EAAGb,KAAM,IAA1C,UACE,SAAC,IAAD,CACElB,aACE,SAAC,KAAD,CACElB,GAAG,mCACHC,GAAG,2CAGPkB,KAAK,QACLC,UAAQ,EACRzB,UAAU,4BAKhB,UAAC,SAAD,CAAW0C,WAAY,CAAEY,OAAQ,EAAGb,KAAM,IAA1C,WACE,SAAC,KAAD,CAAQjB,KAAK,UAAU+B,SAAS,SAAS3B,QAASZ,EAAlD,UACE,SAAC,KAAD,CAAWX,GAAG,SAASC,GAAG,cAG5B,SAAC,KAAD,CAAQkB,KAAK,OAAOG,QAAS,kBAAMS,GAAsB,SAACoB,GAAD,OAAQA,CAAR,GAA5B,EAA7B,UACE,SAAC,KAAD,CAAWnD,GAAG,sBAAsBC,GAAG,+BAI5C6B,IACC,SAAC,IAAD,CACEX,KAAK,OACL4B,SACE,SAACK,EAAD,CACEC,MAAO1B,EAAKM,cAAc,YAC1B1C,UAAW,kBAAMwC,GAAsB,EAA5B,QAOxB,CAOD,SAASqB,EAAT,GAA0E,IAA7CC,EAA4C,EAA5CA,MAAO9D,EAAqC,EAArCA,UAC1BwD,EAAYO,EAAAA,EAAAA,SAAZP,QACR,EAAerB,EAAAA,EAAAA,UAARC,GAAP,eACQC,GAAcC,EAAAA,EAAAA,KAAdD,UAER,GAAuCpB,EAAAA,EAAAA,GAAY,CACjDC,WAAW,WAAD,wBAAE,+FAAkB8C,EAAAA,EAAAA,IAAc5B,EAAKM,cAAc,aAAnD,mFAAF,kDAAC,GACX1C,UAAW,WACTA,IACAwD,EAAQS,QACN5B,EACE,0DACA,4CAGL,IAVKjB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OAAQC,EAA3B,EAA2BA,QAiB3B,OACE,UAAC,IAAD,CACEqB,KAAK,kBACLP,KAAMA,EACNQ,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,IACpBE,MAAO,CAAEC,SAAU,KACnBC,cAAe,CAAEiB,SAAUJ,EAAOZ,UAAU,GAC5CC,SAZa,WACf9B,GACD,EAWG+B,aAAa,MARf,WAUE,SAAC,SAAD,WACE,SAAC,KAAD,CAAOe,MAAO,EAAGrC,KAAK,WAAtB,UACE,SAAC,KAAD,CAAWrB,GAAG,oBAAoBC,GAAG,wBAGzC,SAAC,SAAD,CACE2C,OAAO,SAAC,KAAD,CAAW5C,GAAG,SAASC,GAAG,WACjCiC,KAAK,WACLW,MAAO,CACL,CAAEC,UAAU,EAAMC,QAASnB,EAAU,sCAAiC,wBAJ1E,UAOE,SAAC,IAAD,MAGDf,IACC,SAAC,SAAD,CAAWwB,WAAY,CAAEY,OAAQ,EAAGb,KAAM,IAA1C,UACE,SAAC,IAAD,CACElB,aACE,SAAC,KAAD,CACElB,GAAG,gGACHC,GAAG,2CAGPkB,KAAK,QACLC,UAAQ,EACRzB,UAAU,4BAKhB,SAAC,SAAD,CAAW0C,WAAY,CAAEY,OAAQ,EAAGb,KAAM,IAA1C,UACE,SAAC,KAAD,CAAQjB,KAAK,UAAU+B,SAAS,SAAS3B,QAASZ,EAAlD,UACE,SAAC,KAAD,CAAWX,GAAG,SAASC,GAAG,iBAKnC,C,oMClPY0D,EAAgB,WAC3B,OAAoCC,EAAAA,EAAAA,IAAe,cAAnD,eAAOC,EAAP,KAAmBC,EAAnB,KAEA,OACE,SAAC,KAAD,CACE3C,KAAK,UACL4C,SAAU,EACVtC,MAAM,SAACuC,EAAA,EAAD,IACNpB,MAAOqB,EACPC,SACE,iBAAKvE,UAAU,iBAAf,WACE,gBAAKA,UAAU,wBAAf,SAAwCsE,KACxC,SAAC,IAAD,CACEtE,UAAU,yBACVwE,MAAK,OAAEN,QAAF,IAAEA,EAAAA,EAAc,IACrBO,IAAK,IACLC,IAAK,IACLC,KAAM,GACNnE,SAAU2D,QAMrB,EAEKG,GAAY,SAAC,KAAD,CAAWjE,GAAG,oBAAoBC,GAAG,aCS1CsE,EAAY,SAAC,GAOH,IAAD,QANpBC,QAAAA,OAMoB,MANV,GAMU,MALpB7E,UAAAA,OAKoB,MALR,GAKQ,MAJpB8E,MAAAA,OAIoB,MAJZ,IAIY,EAHpBC,EAGoB,EAHpBA,OAGoB,IAFpBC,YAAAA,OAEoB,MAFN,SAEM,MADpBC,QAAAA,OACoB,MADV,cACU,EACdC,EAAaC,KAAKC,MAAMP,GACxBQ,EAA8BH,EAlDfI,KAAI,SAACC,GAExB,IADA,IAAIC,EAAO,GACFC,EAAI,EAAGC,EAAI,EAAGA,EAAIH,EAAQI,OAAQF,GAAK,EAAGC,GAAK,EAClDH,EAAQE,EAAI,IAAMF,EAAQG,EAAI,KAChCF,GAAI,WAAQD,EAAQE,GAAhB,YAAsBF,EAAQG,GAA9B,aAAqCH,EAAQE,EAAI,GAAjD,YAAuDF,EAAQG,EAAI,KAI3E,OAAOF,CACR,IA2CKI,EAAiB,oBACrB,CACEC,MAAO,EACPC,OAAQ,EACRC,MAAO,UAJY,aACrB,EAIIf,UALiB,QAKD,EAEtB,OACE,iBACEgB,MAAM,6BACNf,QAASA,EACTgB,SAAS,SACTjG,UAAWA,EACX2C,MAAO,CAAEmC,MAAM,GAAD,OAAKA,EAAL,MAAgBC,OAAO,GAAD,OAAKA,GAAUD,EAAf,OALtC,WAOE,oBACCO,EAAMC,KAAI,SAACE,EAAMU,GAAP,OACT,iBAEEC,EAAGX,EACHY,KAAK,OACLC,OAAO,OACPrB,YAAaY,EACbU,cAAc,QACdC,eAAe,QACfC,iBAAiB,MARnB,UACU3B,EADV,YACqBqB,GAFZ,MAchB,E,kGCpCYO,EAAgB,SAAC,GAUH,IAAD,IATxBC,EASwB,EATxBA,MACAC,EAQwB,EARxBA,SAQwB,IAPxB3G,UAAAA,OAOwB,MAPZ,GAOY,MANxB4G,aAAAA,OAMwB,aALxB5B,YAAAA,OAKwB,MALV,SAKU,MAJxBF,MAAAA,OAIwB,MAJhB,IAIgB,EAHxBC,EAGwB,EAHxBA,OAGwB,IAFxB8B,mBAAAA,OAEwB,aADxBlE,MAAAA,OACwB,MADhB,CAAC,EACe,EACxB,GAA4C9C,EAAAA,EAAAA,UAAuB,IAAnE,eAAOiH,EAAP,KAAuBC,EAAvB,KACMC,GAAYC,EAAAA,EAAAA,SAAO,GAKnBC,EAAe,WACnBF,EAAUG,SAAU,CACrB,EAKKC,EAAc,WAClBJ,EAAUG,SAAU,EACpBJ,EAAkB,GACnB,EAEKM,EAAY,SAACC,GACjBJ,IACA,IAAMK,EAAMD,EAAEE,OAAOC,WAAWC,qBAChCf,EAAS,GAAD,eAAKD,GAAL,CAAY,CAACiB,KAAKC,MAAML,EAAI9B,GAAIkC,KAAKC,MAAML,EAAI7B,MACxD,EAEKmC,EAAa,SAACP,GAElB,IACMQ,EADQR,EAAEE,OAAOC,WACHC,qBACdjC,EAAIkC,KAAKC,MAAME,EAAMrC,GACrBC,EAAIiC,KAAKC,MAAME,EAAMpC,GAEvBqC,EAAgBrB,EAAMA,EAAMf,OAAS,GACzCoC,EAAgBA,EAAcC,OAAO,CAACvC,EAAI,GAAKC,EAAI,KAGnDgB,EAAMuB,OAAOvB,EAAMf,OAAS,EAAG,EAAGoC,GAClCpB,EAASD,EAAMsB,SAChB,EAMKE,EAAkB,SAACZ,GACvBD,EAAUC,EACX,EAMKa,EAAkB,SAACb,GAEvB,GAAKN,EAAUG,QAAf,CAGA,IACMW,EADQR,EAAEE,OAAOC,WACHC,qBAChBU,EAAW1B,EAAMA,EAAMf,OAAS,GAEpCyC,EAAWA,EAASJ,OAAO,CAACL,KAAKC,MAAME,EAAMrC,GAAIkC,KAAKC,MAAME,EAAMpC,KAGlEgB,EAAMuB,OAAOvB,EAAMf,OAAS,EAAG,EAAGyC,GAClCzB,EAASD,EAAMsB,SATd,CAUF,EAEKK,EAAgB,SAACf,GACjBN,EAAUG,UACZC,IAEAS,EAAWP,GAEd,EAMKgB,EAAsB,WAC1BlB,GACD,EAMKmB,EAAwB,WAC5BrB,GACD,EAuDKtB,EAAiB,oBACrB,CACEC,MAAO,EACPC,OAAQ,EACRC,MAAO,UAJY,aACrB,EAIIf,UALiB,QAKD,EAEtB,OACE,UAAC,IAAD,CAAMwD,UAAQ,EAACpH,MAAM,SAArB,WACE,SAAC,KAAD,CACE0D,MAAOA,EACPC,OAAQA,GAAUD,EAClB2D,YAAaP,EACbQ,YAAaP,EACbQ,UAAWN,EACXO,aAAcV,EACdW,YAAaV,EACbW,WAAYT,EACZU,aAnEmB,SAACzB,GACpBN,EAAUG,UACZU,EAAWP,GAEX0B,OAAOC,SAASC,iBAAiB,UAAWZ,GAC5CU,OAAOC,SAASC,iBAAiB,WAAYZ,GAC7CU,OAAOC,SAASC,iBAAiB,YAAaX,GAC9CS,OAAOC,SAASC,iBAAiB,aAAcX,GAElD,EA2DKY,aArDmB,SAAC7B,GACpBN,EAAUG,SACZE,EAAUC,GAEZ0B,OAAOC,SAASG,oBAAoB,UAAWd,GAC/CU,OAAOC,SAASG,oBAAoB,WAAYd,GAChDU,OAAOC,SAASG,oBAAoB,YAAab,GACjDS,OAAOC,SAASG,oBAAoB,aAAcb,EACnD,EA8CKvI,WAAWqJ,EAAAA,EAAAA,GAAK,iBAAkBrJ,GAClC2C,OAAK,QAAImC,MAAM,GAAD,OAAKA,EAAL,MAAgBC,OAAO,GAAD,OAAKA,GAAUD,EAAf,OAA6BnC,GACjEkE,mBAAoBA,EACpByC,GAAG,iBAdL,UAgBE,SAAC,KAAD,UACG5C,EAAMpB,KAAI,SAACiE,EAAMC,GAAP,OACT,SAAC,KAAD,CAEEC,OAAQF,EACRlD,OAAO,UACPrB,YAAaY,EACb8D,QAAS,GACTC,QAAQ,QACRC,yBAAyB,eANpBJ,EAFE,QAad5C,IACC,UAAC,IAAD,YACE,UAAC,KAAD,CAAQjF,QA/DD,WACb,IAAMkI,GAAS,OAAOnD,GAChBoD,GAAkB,OAAOhD,GACzBsB,EAAmCyB,EAAUE,MAC/C3B,IACF0B,EAAmBE,KAAK5B,GACxBzB,EAASkD,GACT9C,EAAkB+C,GAErB,EAsDgCG,SAA2B,IAAjBvD,EAAMf,OAAzC,WACE,SAACuE,EAAA,EAAD,KACA,SAAC,KAAD,CAAW7J,GAAG,WAAWC,GAAG,aAE9B,UAAC,KAAD,CAAQqB,QAxDD,WACb,IAAMkI,GAAS,OAAOnD,GAChBoD,GAAkB,OAAOhD,GACzBqD,EAAeL,EAAmBC,MACpCI,IACFN,EAAUG,KAAKG,GACfxD,EAASkD,GACT9C,EAAkB+C,GAErB,EA+CgCG,SAAoC,IAA1BnD,EAAenB,OAAlD,WACE,SAACuE,EAAA,EAAD,KACA,SAAC,KAAD,CAAW7J,GAAG,UAAUC,GAAG,aAE7B,UAAC,KAAD,CAAQqB,QAzEA,kBAAMgF,EAAS,GAAf,EAyEkBsD,SAA2B,IAAjBvD,EAAMf,OAA1C,WACE,SAACyE,EAAA,EAAD,KACA,SAAC,KAAD,CAAW/J,GAAG,SAASC,GAAG,kBAMrC,C,0IC9NY+J,EAAY,SAACC,GACxB,IAAMC,EAAQD,EAAIC,MAAM,OAClBC,EAAQD,EAAQE,SAASF,EAAM,GAAI,IAAM,EACzCG,EAAM,eAAWF,GACjBG,EAZK,GAYMhD,KAAKiD,KAAKJ,EAZhB,IAcX,MAAO,CADK,gBAAYG,GACRD,EACjB,EAKM,SAASG,EAAT,GAAuF,IAAnEvB,EAAkE,EAAlEA,GAAkE,IAA9DxE,MAAAA,OAA8D,MAAtD,GAAsD,EAAlD9E,EAAkD,EAAlDA,UAAW8K,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,QACjE,EAAyBX,EAAUf,GAAnC,eAAO2B,EAAP,KAAeP,EAAf,KAEM3F,EAASgG,EAAO,OAAH,UAAejG,EAAf,MAEnB,OACE,iBAAK9E,WAAWqJ,EAAAA,EAAAA,GAAK,YAAarJ,GAAY2C,MAAO,CAAEmC,MAAM,GAAD,OAAKA,EAAL,MAAgBC,OAAAA,GAA5E,WACE,SAAC,IAAD,CAAQkG,OAAQA,EAAQ3B,GAAIoB,EAAQ5F,MAAOA,EAAOgG,MAAOA,EAAOE,QAASA,IACxEE,QAAQH,KACP,iBAAM/K,UAAU,kBAAhB,UACE,SAAC,KAAD,UAAgB+K,QAKzB,C,6FC5CYI,EAAO,SAAC,GAWH,IAVhBC,EAUe,EAVfA,SAUe,IATfC,OAAAA,OASe,MATN,QASM,EARfC,EAQe,EARfA,OAQe,IAPfC,MAAAA,OAOe,MAPP,OAOO,MANf7J,KAAAA,OAMe,MANR,SAMQ,MALf8J,YAAAA,OAKe,aAJfxL,UAAAA,OAIe,MAJH,GAIG,MAHfyL,gBAAAA,OAGe,MAHG,GAGH,MAFfC,gBAAAA,OAEe,MAFG,GAEH,MADfC,WAAAA,OACe,SACTC,EAAY,OAEZC,EAAUL,GACZM,EAAAA,EAAAA,IACsB,kBAAbV,EACHA,EAAS,GAAGW,cACD,UAAXV,EACAA,EAAO,GAAGU,cACV,KAENR,EAEJ,OACE,iBAAKvL,WAAWqJ,EAAAA,EAAAA,GAAKuC,EAAD,UAAeA,EAAf,aAA6BlK,GAAQ1B,GAAzD,WACI2L,IACA,iBACE3L,WAAWqJ,EAAAA,EAAAA,GAAK,GAAD,OAAIuC,EAAJ,wCAA8CC,GAAWJ,GACxE9I,MAAO4I,EAAMS,WAAW,KAAO,CAAEC,gBAAiBV,GAAU,CAAC,EAF/D,SAIGF,KAGL,iBAAMrL,UAAS,UAAK4L,EAAL,UAAf,SAAwCR,IACvCE,IAAU,iBAAMtL,WAAWqJ,EAAAA,EAAAA,GAAK,GAAD,OAAIuC,EAAJ,YAAyBF,GAA9C,SAAiEJ,MAGjF,C,6FC7BM,SAASY,EAAT,GAOmB,IANxBd,EAMuB,EANvBA,SACAtJ,EAKuB,EALvBA,KACAN,EAIuB,EAJvBA,KACAxB,EAGuB,EAHvBA,UAGuB,IAFvBmM,SAAAA,OAEuB,MAFZ,QAEY,MADvBC,cAAAA,OACuB,MADP,QACO,EACvB,OACE,kBAAMpM,WAAWqJ,EAAAA,EAAAA,GAAK,mBAAoB7H,GAAI,4BAAyBA,GAAQxB,GAA/E,UACqB,WAAlBoM,IACC,iCACE,SAAC,IAAD,CAAY1K,KAAMyK,EAAUrK,KAAMA,IAAS,OAG9CsJ,EACkB,UAAlBgB,IACC,gCACG,KACD,SAAC,IAAD,CAAY1K,KAAMyK,EAAUrK,KAAMA,SAK3C,C,6FCvDM,SAASuK,EAAT,GAAiF,IAAxDjB,EAAuD,EAAvDA,SAAU5J,EAA6C,EAA7CA,KAAM2K,EAAuC,EAAvCA,SAAUnM,EAA6B,EAA7BA,UACxD,OACE,SAAC,IAAD,CAAiB8B,MAAM,SAAC,IAAD,IAAeN,KAAMA,EAAM2K,SAAUA,EAAUnM,UAAWA,EAAjF,SACGoL,GAGN,C,4JC4BM,SAASkB,EAAT,GAAyF,IAAvEhD,EAAsE,EAAtEA,GAAI2B,EAAkE,EAAlEA,OAAkE,IAA1DnG,MAAAA,OAA0D,MAAlD,GAAkD,MAA9CkG,QAAAA,OAA8C,MAApC,EAAoC,EAAjCF,EAAiC,EAAjCA,MAAO9K,EAA0B,EAA1BA,UAC7DuM,GAAUC,EAAAA,EAAAA,GAAa,WAE7B,GAAqCC,EAAAA,EAAAA,GAAS,CAC5CC,SAAU,CAAC,SAAUzB,GACrB0B,QAAQ,WAAD,wBAAE,oGACgBC,MAAM,GAAD,OAAIL,EAAJ,oBAAuBtB,EAAvB,SADrB,cACD4B,EADC,gBAEMA,EAAS9B,OAFf,mFAAF,kDAAC,GAIR+B,UAAWxD,KAAQ2B,IANb8B,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KAAM9L,EAAzB,EAAyBA,QASnB+L,EAAcnI,EAAkB,EAAVkG,EAE5B,GAAI+B,EACF,OACE,iBACEpK,MAAO,CACLmC,MAAM,GAAD,OAAKmI,EAAL,MACLlI,OAAO,GAAD,OAAKkI,EAAL,MACNjC,QAAAA,EACAkC,QAAS,OACTC,WAAY,UAEdnN,UAAWA,EARb,UAUE,SAAC,IAAD,MAKN,IAAMoN,EAAaJ,EAEnB,OAAI9L,IAAYkM,GAEZ,iBACEzK,MAAO,CACLmC,MAAM,GAAD,OAAKmI,EAAL,MACLlI,OAAO,GAAD,OAAKkI,EAAL,MACNjC,QAAAA,EACAkC,QAAS,OACTC,WAAY,UAEdnN,UAAWA,EARb,UAUE,SAACqN,EAAA,EAAD,OAMJ,iBACEpI,QAAQ,cACRtC,MAAO,CAAEmC,MAAM,GAAD,OAAKmI,EAAL,MAAsBlI,OAAO,GAAD,OAAKkI,EAAL,MAAsBjC,QAAAA,GAChEhL,UAAWA,EAHb,WAKE,gBAAKsN,UAAS,WAAMhE,GAAMiE,wBAAyB,CAAEC,OAAQJ,MAC7D,0BAAe3H,EAAE,IAAIC,EAAE,IAAIZ,MAAM,OAAOC,OAAO,OAA/C,SACG+F,IACC,SAAC,IAAD,CAASA,MAAOA,EAAhB,UACE,gBAAKnI,MAAO,CAAE8K,WAAY,cAAe3I,MAAO,OAAQC,OAAQ,iBAM3E,C,6LClEY2I,EAAc,SAAC,GAOF,IANxBtC,EAMuB,EANvBA,SACAuC,EAKuB,EALvBA,MACA3N,EAIuB,EAJvBA,UACA4N,EAGuB,EAHvBA,UACAC,EAEuB,EAFvBA,UAEuB,IADvBC,SAAAA,OACuB,SACjBlC,EAAY,cAElB,OACE,SAAC,SAAD,CACE5L,WAAWqJ,EAAAA,EAAAA,GACTuC,EACAgC,GAAS,UAAOhC,EAAP,eACT+B,GAAK,UAAO/B,EAAP,WACLiC,GAAS,UAAOjC,EAAP,gBACTkC,GAAQ,UAAOlC,EAAP,eACR5L,GAEF,cAAY,cATd,SAWGoL,GAGN,E,sBC7CM,SAAS2C,EAAT,GAAuE,IAAD,IAArCnG,EAAqC,EAArCA,MAChCoG,GAAO,iBAACpG,QAAD,IAACA,OAAD,EAACA,EAAOqG,aAAR,QAAiB,IAAjB,iBAAuBrG,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAOT,eAA9B,QAAyC,GAEtD,OAAa,IAAT6G,GAAcpG,EAAMsG,gBAEpB,SAAC,EAAD,CAAiB1M,KAAK,QAAtB,UACE,SAAC,KAAD,CAAWnB,GAAG,8BAA2BC,GAAG,2BAMhD,SAAC,EAAD,CAAiBkB,KAAK,MAAtB,UACE,SAAC,KAAD,CACEnB,IACE,iCACG8N,EAAAA,EAAAA,IAAUH,EAAM,QAAS,UAD5B,KACuC,4BAASA,IADhD,KACgEG,EAAAA,EAAAA,IAAUH,EAAM,UADhF,8BAKF1N,IACE,iCACE,4BAAS0N,IADX,KAC2BG,EAAAA,EAAAA,IAAUH,EAAM,SAD3C,qCAOT,CC7BM,SAASI,EAAT,GAAqE,IAA5ChD,EAA2C,EAA3CA,SAAUpL,EAAiC,EAAjCA,UACxC,OAAO,iBAAMA,WAAWqJ,EAAAA,EAAAA,GAAK,iBAAkBrJ,GAAxC,SAAqDoL,GAC7D,CCoBM,IAAMiD,EAAQ,SAAC,GAQH,IAPjBjD,EAOgB,EAPhBA,SACAuC,EAMgB,EANhBA,MACA7L,EAKgB,EALhBA,KACA9B,EAIgB,EAJhBA,UAIgB,IAHhB+D,MAAAA,OAGgB,MAHR,EAGQ,MAFhBrC,KAAAA,OAEgB,MAFT,SAES,MADhBN,MAAAA,OACgB,MADR,SACQ,EAChB,OACE,UAAC,UAAD,CACE2C,MAAOA,EACP/D,WAAWqJ,EAAAA,EAAAA,GAAK,QAAD,iBAAoB3H,GAApB,uBAA4CN,GAASuM,GAAS,eAAgB3N,GAF/F,UAIGkL,QAAQpJ,IAASA,EACjBsJ,IAGN,E,8GCDYkD,EAAkB,SAAC,GAMH,IAL3BlD,EAK0B,EAL1BA,SACApL,EAI0B,EAJ1BA,UACA6N,EAG0B,EAH1BA,UAG0B,IAF1BrM,KAAAA,OAE0B,MAFnB,OAEmB,EAD1B+M,EAC0B,EAD1BA,IAEM3C,EAAY,mBAEZ9J,EAAO,CACX0M,QAAQ,SAACC,EAAA,EAAD,IACRC,OAAO,SAACC,EAAA,EAAD,IACPC,OAAO,SAACC,EAAA,EAAD,IACPC,MAAM,SAACC,EAAA,EAAD,IACNC,MAAM,SAACC,EAAA,EAAD,IACNC,KAAK,SAACC,EAAA,EAAD,IACLC,SAAS,SAACC,EAAA,EAAD,IACTC,MAAM,SAACC,EAAA,EAAD,IACNC,KAAK,SAACC,EAAA,EAAD,KACLjO,GAEIkO,EAAiB,CACrBlB,QAAQmB,EAAAA,EAAAA,IAAkB,UAC1BjB,OAAOiB,EAAAA,EAAAA,IAAkB,QAAS,CAAEC,UAAU,EAAMC,MAAO,SAC3DjB,OAAOe,EAAAA,EAAAA,IAAkB,OAAQ,CAAEG,OAAQ,EAAGD,MAAO,SACrDf,MAAMa,EAAAA,EAAAA,IAAkB,SACxBX,MAAMW,EAAAA,EAAAA,IAAkB,SACxBT,KAAKS,EAAAA,EAAAA,IAAkB,SACvBP,SAASO,EAAAA,EAAAA,IAAkB,SAC3BL,MAAMK,EAAAA,EAAAA,IAAkB,SACxBH,KAAKG,EAAAA,EAAAA,IAAkB,UACvBnO,GAEMuO,EAAUC,EAAAA,EAAAA,WAAVD,MACFxE,EAAiB,WAAT/J,EAAoB,CAAEiM,WAAYsC,EAAME,cAAiB,CAAC,EAExE,OACE,iBACEjQ,WAAWqJ,EAAAA,EAAAA,GAAKuC,EAAWiC,GAAS,UAAOjC,EAAP,gBAAgC5L,GACpE,cAAY,mBAFd,WAIE,gBAAKA,WAAWqJ,EAAAA,EAAAA,GAAK,GAAD,OAAIuC,EAAJ,oBAA0BA,EAA1B,mBAA8CpK,IAASmB,MAAO4I,EAAlF,UACE,gBAAKvL,UAAW0P,EAAhB,SAAiC5N,MAElCyM,GACD,SAAC,cAAD,CAAsBvO,WAAWqJ,EAAAA,EAAAA,GAAK,GAAD,OAAIuC,EAAJ,cAArC,SAAiER,MAGtE,C,8LC3EM,SAAS8E,EAAT,GASc,IAjCJ1L,EAyBf1C,EAQkB,EARlBA,KACAN,EAOkB,EAPlBA,KACA2K,EAMkB,EANlBA,SACAf,EAKkB,EALlBA,SAKkB,IAJlBpL,UAAAA,OAIkB,MAJN,GAIM,MAHlBoM,cAAAA,OAGkB,MAHF,SAGE,MAFlB+D,QAAAA,OAEkB,MAFR,EAEQ,EADlBC,EACkB,EADlBA,QAEA,OACE,UAAClE,EAAA,EAAD,CACEpK,KAAI,OAAEA,QAAF,IAAEA,EAAAA,GAAQ,SAACuO,EAAA,EAAD,IACd7O,KAAMA,EACN2K,SAAUA,EACVnM,UAAWA,EACXoM,cAAeA,EALjB,UAOG+D,EAPH,KAnCa3L,EA0CQ4L,EA1CW5L,EAAQ,GAAR,WAAiBA,GAAUA,GA2CxD4G,IAGN,C,uHCrCM,SAASkF,EAAT,GAQY,IAPjBC,EAOgB,EAPhBA,MAEAtC,GAKgB,EANhB3H,cAMgB,EALhB2H,OAKgB,IAJhBzM,KAAAA,OAIgB,MAJT,OAIS,EAHhBgD,EAGgB,EAHhBA,MAEGgM,GACa,EAFhBC,QAEgB,aACVC,EAAa,IAAe,IAARlM,EAAeyJ,EACzC,OACE,SAAC,KAAD,QACE0C,QAASD,EACTH,MAAOA,EACPK,UAAU,EACVjO,MAAO,CAAEkO,aAAc,QACvBnP,KAAM6O,GAASA,EAAQ,GAAK,aAAUO,EACtCtP,KAAMA,GACFgP,GAGT,CCLM,SAASO,EAAT,GAAiG,IAAxEC,EAAuE,EAAvEA,SAAUC,EAA6D,EAA7DA,SAAUzP,EAAmD,EAAnDA,KAAmD,IAA7C+O,MAAAA,OAA6C,MAArC,GAAqC,EAAjCvQ,EAAiC,EAAjCA,UAC5DkR,GAAaC,EAAAA,EAAAA,GAAa,CAChCH,SAAAA,EACAI,WAAW,EACXH,SAAAA,IAHMC,SAMR,OACE,iBAAKlR,WAAWqJ,EAAAA,EAAAA,GAAK,eAAgBrJ,GAArC,UACGkR,EADH,KACa,SAACZ,EAAD,CAAUC,MAAOA,EAAO/L,MAAO0M,EAAUjD,MAAO+C,EAAUxP,KAAMA,IAD7E,IACuF0P,IAG1F,C,wECnBM,SAASG,EAAT,GAQmB,IAzBT7M,EAkBf1C,EAOuB,EAPvBA,KACAN,EAMuB,EANvBA,KACA2K,EAKuB,EALvBA,SACAf,EAIuB,EAJvBA,SAIuB,IAHvBpL,UAAAA,OAGuB,MAHX,GAGW,MAFvBoM,cAAAA,OAEuB,MAFP,SAEO,EADpBkF,GACoB,YACvB,GAA6BH,EAAAA,EAAAA,IAAa,UAAKG,IAAvCnB,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAEjB,OACE,UAAClE,EAAA,EAAD,CACEpK,KAAI,OAAEA,QAAF,IAAEA,EAAAA,GAAQ,SAACuO,EAAA,EAAD,IACd7O,KAAMA,EACN2K,SAAUA,EACVnM,UAAWA,EACXoM,cAAeA,EALjB,UAOG+D,EAPH,KA7Ba3L,EAoCQ4L,EApCW5L,EAAQ,GAAR,WAAiBA,GAAUA,GAqCxD4G,IAGN,CCrCM,SAASmG,EAAT,GAA4E,IAArDP,EAAoD,EAApDA,SAAUE,EAA0C,EAA1CA,SAAUD,EAAgC,EAAhCA,SAC9BO,GAAoBL,EAAAA,EAAAA,GAAa,CACjDH,SAAAA,EACAI,eAAwBN,IAAbI,EACXD,SAAAA,IAHMC,SAMFR,GAAc,OAACQ,QAAD,IAACA,EAAAA,EAAYM,GAAmBR,EAAY,IAEhE,OACE,gBAAKhR,UAAU,yBAAf,UACE,iBAAMA,UAAU,oCAAhB,UACE,iBAAMA,UAAU,+BAA+B2C,MAAO,CAAEmC,MAAM,GAAD,OAAK4L,EAAL,WAIpE,C,wBCnBM,SAASlE,EAAaiF,GAC3B,IAAMlF,EAAUmF,6BAEhB,OAAQD,GACN,IAAK,SACH,MAAM,GAAN,OAAUlF,EAAV,YAAqBmF,oBACvB,IAAK,UACH,MAAM,GAAN,OAAUnF,EAAV,YAAqBmF,cACvB,IAAK,YACH,MAAM,GAAN,OAAUnF,EAAV,YAAqBmF,0BACvB,IAAK,UACH,MAAM,GAAN,OAAUnF,EAAV,YAAqBmF,qBACvB,QACE,MAAM,IAAIC,MAAM,mBAErB,C,iHCpBM,SAAStB,EAAkBG,GAChC,OACE,iCAAKxK,MAAM,6BAA6Bf,QAAQ,eAAkBuL,GAAlE,eACE,iBACEpK,KAAK,UACLD,EAAE,yFAEJ,iBACEC,KAAK,UACLD,EAAE,8JAEJ,iBACEC,KAAK,UACLD,EAAE,4JAEJ,iBACEC,KAAK,UACLD,EAAE,8KAEJ,iBAAMA,EAAE,waACR,iBAAMA,EAAE,gSAER,0BACE,iBACEC,KAAK,UACLD,EAAE,kOAEJ,iBAAMA,EAAE,iZACR,6BACEyL,cAAc,YACdC,IAAI,KACJC,KAAK,YACLC,YAAY,aACZC,GAAG,cACHxQ,KAAK,iBAKd,C,kFCvCM,SAASyQ,EAAazB,GAC3B,OACE,iCAAKxK,MAAM,6BAA6Bf,QAAQ,eAAkBuL,GAAlE,eACE,iBAAMpK,KAAK,OAAOD,EAAE,uBACpB,iBACEC,KAAK,UACLD,EAAE,mjBAEJ,iBACEC,KAAK,UACLD,EAAE,kYAEJ,iBAAMA,EAAE,2sCACR,iBAAMA,EAAE,oVACR,iBAAMA,EAAE,yQACR,iBACEC,KAAK,UACLD,EAAE,8fAEJ,iBACEC,KAAK,UACLD,EAAE,mTAEJ,iBAAMA,EAAE,8xCACR,iBAAMA,EAAE,imCAGb,C,kFC3BM,SAAS+L,EAAU1B,GACxB,OACE,iCAAKxK,MAAM,6BAA6Bf,QAAQ,eAAkBuL,GAAlE,eACE,mBAAQ2B,GAAG,MAAMC,GAAG,MAAMC,EAAE,MAAMjM,KAAK,aACvC,iBACEA,KAAK,UACLD,EAAE,8LAEJ,mBAAQgM,GAAG,MAAMC,GAAG,MAAMC,EAAE,UAAUjM,KAAK,aAC3C,iBACEA,KAAK,UACLD,EAAE,kOAEJ,iBACEC,KAAK,UACLD,EAAE,gVAEJ,mBAAQgM,GAAG,MAAMC,GAAG,MAAMC,EAAE,SAASjM,KAAK,aAC1C,iBACEA,KAAK,UACLD,EAAE,qRAEJ,iBACEC,KAAK,UACLD,EAAE,4NAEJ,iBAAMA,EAAE,4oBACR,iBAAMA,EAAE,6hBACR,iBAAMA,EAAE,gvCAGb,C,kFC/BM,SAASmM,EAAW9B,GACzB,OACE,iCAAKxK,MAAM,6BAA6Bf,QAAQ,eAAkBuL,GAAlE,eACE,iBACEpK,KAAK,UACLD,EAAE,2IAEJ,iBACEC,KAAK,UACLD,EAAE,8FAEJ,iBAAMC,KAAK,UAAUD,EAAE,2EACvB,iBACEC,KAAK,UACLD,EAAE,4IAEJ,iBAAMC,KAAK,UAAUD,EAAE,+DACvB,iBACEC,KAAK,UACLD,EAAE,2HAEJ,iBAAMC,KAAK,UAAUD,EAAE,kFACvB,iBAAMC,KAAK,UAAUD,EAAE,mEACvB,iBAAMA,EAAE,ylBAGb,C,kFC1BM,SAASoM,EAAU/B,GACxB,OACE,iCAAKxK,MAAM,6BAA6Bf,QAAQ,eAAkBuL,GAAlE,eACE,iBACEpK,KAAK,UACLD,EAAE,mTAEJ,iBACEC,KAAK,UACLD,EAAE,6SAEJ,eAAGC,KAAK,UAAR,WACE,iBAAMD,EAAE,oKACR,mBAAQgM,GAAG,SAASC,GAAG,SAASC,EAAE,cAEpC,iBACEjM,KAAK,UACLD,EAAE,2JAEJ,mBAAQgM,GAAG,SAASC,GAAG,SAASC,EAAE,QAAQjM,KAAK,aAC/C,iBACEA,KAAK,UACLD,EAAE,gSAEJ,iBAAMA,EAAE,i8BACR,iBAAMA,EAAE,ohDAGb,C,sTCrBM,SAASqM,EAAkBC,GAChC,IAAQC,GAAaxQ,EAAAA,EAAAA,KAAbwQ,SACFC,GAAiBC,EAAAA,EAAAA,IAAcF,GAGrC,OAAOjG,EAAAA,EAAAA,GAAwB,CAC7BC,SAAU,CAACiG,GACXhG,QAAQ,WAAD,wBAAE,6FACPkG,QAAQC,MAAR,mBAA0BH,EAA1B,QADO,SAEgBI,EAAAA,GAAAA,IAAc,CACnCvE,OAAQwE,EAAAA,GAAAA,UACRC,KAAMR,EACNxJ,SAAU0J,IALL,cAED9F,EAFC,OAODqG,EAAerG,EAASG,MAC9BmG,EAAAA,EAAAA,KAAM,UAAGR,EAAiBO,GAAgB,SARnC,kBASAA,GATA,2CAAF,kDAAC,GAWRpG,QAAsB,OAAb4F,EACTU,OAAO,GAEV,C,oCC5BYC,EAAW,CACtBC,KAAM,CAAEjT,GAAI,YAAUC,GAAI,aAC1BiT,OAAQ,EACRC,KAAM,GACNC,qBAAsB,uBACtBC,gBAAiB,+BCLNL,EAAW,CACtBC,KAAM,CAAEjT,GAAI,YAAaC,GAAI,oBAC7BiT,OAAQ,EACRG,gBAAiB,kCCHNL,EAAW,CACtBC,KAAM,CAAEjT,GAAI,aAAWC,GAAI,cAC3BqT,SAAU,GACVC,SAAU,EACVF,gBAAiB,gCCJNL,EAAW,CACtBC,KAAM,CAAEjT,GAAI,aAAcC,GAAI,aAC9BiT,OAAQ,EACRM,YAAa,EACbH,gBAAiB,mCCJNL,EAAW,CACtBC,KAAM,CAAEjT,GAAI,aAAWC,GAAI,WAC3BiT,OAAQ,EACRG,gBAAiB,gC,WCSbI,EAAO,CAACC,EAAQC,EAAWC,EAAYC,EAASC,GAE/C,SAASC,IACd,IAAQhR,EAAYO,EAAAA,EAAAA,SAAZP,QAeR,OACE,UAAC,IAAD,CAAMiR,QAAQ,SAASC,IAAK,GAA5B,WACE,SAAC,KAAD,CAAQ5S,KAAK,QAAQF,KAAK,SAASG,QAfvB,WACdmS,EAAKS,SAAQ,SAACC,GAAD,OAASC,aAAaC,WAAWF,EAAId,gBAArC,IACbtQ,EAAQS,SAAQ,SAAC,KAAD,CAAWxD,GAAG,2BAA2BC,GAAG,0BAC7D,EAYwDwB,MAAM,SAAC6S,EAAA,EAAD,IAA3D,UACE,SAAC,KAAD,CAAWtU,GAAG,aAAaC,GAAG,eAE/BsU,EAAAA,KACC,SAAC,KAAD,CAAQlT,KAAK,QAAQF,KAAK,SAASG,QAdrB,WAClB,IAAMkT,EAAY1P,KAAK2P,UAAU,CAC/BxL,GAAI,aACJyL,QAAS,IAEXjB,EAAKS,SAAQ,SAACC,GAAD,OAASC,aAAaO,QAAQR,EAAId,gBAAiBmB,EAAnD,GACd,EAQ8D/S,MAAM,SAAC6S,EAAA,EAAD,IAA/D,4BAMP,C,0BCjCM,SAASM,EAAT,GAAkD,IAAhCnT,EAA+B,EAA/BA,KAAMsJ,EAAyB,EAAzBA,SAC7B,OACE,UAAC,WAAD,CAAepL,UAAU,eAAzB,WACE,SAAC,KAAD,CAAY8B,KAAMA,KAClB,SAAC,UAAD,CAAkBiC,MAAO,EAAG/D,UAAU,gBAAtC,SACGoL,MAIR,CCRD,IAAQ8J,EAAoBC,EAAAA,EAAAA,QAAXC,EAAWD,EAAAA,EAAAA,OAMrB,SAASE,EAAT,GAAsD,IAA/BjK,EAA8B,EAA9BA,SACtBkK,EAAiB9C,GAAkB+C,EAAAA,EAAAA,OACzC,GAA0B1V,EAAAA,EAAAA,UAAS,GAAnC,eAAOiT,EAAP,KAAc0C,EAAd,KAEA,OACE,UAAC,IAAD,CAAQxV,UAAU,MAAlB,WACE,SAACiV,EAAD,CAAQnT,MAAM,SAAC2T,EAAA,EAAD,IAAd,UACE,mBAAQ9T,QAAS,kBAAM6T,GAAS,SAACE,GAAD,OAAUA,EAAO,CAAjB,GAAf,EAAoC1V,UAAU,0BAA/D,UACE,SAAC,KAAD,CAAWK,GAAG,eAAYC,GAAG,iBAGhCgV,EAAevI,WAAY,gBAAK/M,UAAU,iBAAuB,yBAClE,SAACkV,EAAD,UAAU9J,IACT0H,GAAS,IACR,SAACsC,EAAD,WACE,SAAChB,EAAD,QAKT,CC7BM,SAASuB,IACd,OAAqCzT,EAAAA,EAAAA,KAA7B0T,EAAR,EAAQA,eAAgBlD,EAAxB,EAAwBA,SAClBmD,GAAWC,EAAAA,EAAAA,MAMjB,OACE,SAACT,EAAD,WACE,SAAC,IAAD,CAAOrV,UAAU,8BAAjB,UACE,SAAC,IAAD,CACEoD,SACE,SAAC,KAAD,CAAW/C,GAAG,qCAAkCC,GAAG,wCAErDiB,aACE,UAAC,IAAD,CAAOJ,UAAU,WAAjB,WACE,kHACA,sGACA,SAAC,KAAD,CAAQK,KAAK,UAAUG,QAfhB,WACjBiU,IACAC,EAAsB,OAAbnD,EAAoB,UAAY,SAC1C,EAYW,sCAKJlR,KAAK,QACLC,UAAQ,OAKjB,C,eC/BM,SAASsU,IACd,IAAQ9T,GAAcC,EAAAA,EAAAA,KAAdD,UACR,OACE,SAACoT,EAAD,WACE,gBAAKrV,UAAU,gBAAf,UACE,SAAC,IAAD,CAAOA,UAAU,kBAAjB,UACE,SAAC,KAAD,CAASoD,QAASnB,EAAU,wBAAyB,wBAAyB+T,QAAM,SAK7F,C,gDCVKC,EAAU,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACxDC,EAAY,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1DC,EAAa,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACtDC,EAAY,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAW1C,SAASC,GAAT,GAOY,IANjBC,EAMgB,EANhBA,aACAC,EAKgB,EALhBA,cACAtM,EAIgB,EAJhBA,SACAuM,EAGgB,EAHhBA,iBACAC,EAEgB,EAFhBA,aACAC,EACgB,EADhBA,YAEM5R,GAAQ6R,EAAAA,EAAAA,GAAaT,EAAUvQ,OAAS,EAAG,CAAEqQ,OAAQ,GAAIpT,SAAU,KA2BzE,OAzBAgU,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,SAACjI,GACnB,IAAM4F,EAAM5F,EAAM4F,IAClB,IAAIvK,EAEJ,MAAY,UAARuK,GAAmBiC,EACdA,IAEG,cAARjC,GAAuBgC,EAClBA,KAGNvM,IACAiM,EAAUY,SAAStC,IAAQ2B,EAAWW,SAAStC,IAAQ4B,EAAUU,SAAStC,KAD3E,OAEA8B,QAFA,IAEAA,GAAAA,EAAe9B,GAAKvK,SAEbsM,EAAc/B,QALvB,CAOD,EAID,OAFAxL,OAAOE,iBAAiB,QAAS2N,GAE1B,kBAAM7N,OAAOI,oBAAoB,QAASyN,EAA1C,CACR,GAAE,KAGD,UAAC,IAAD,CAAO1V,UAAU,WAAWC,MAAM,SAASpB,UAAU,iBAAiB0B,KAAK,QAA3E,UACGgV,IACC,SAAC,IAAD,CAAM1W,UAAU,sBAAhB,SACGiW,EAAQ3Q,KAAI,SAACyR,GAAD,eACX,SAACC,GAAD,CAEElS,MAAOA,EACPiS,OAAQA,EACRE,MAAK,OAAEX,QAAF,IAAEA,GAAF,UAAEA,EAAeS,UAAjB,aAAE,EAAwBE,MAC/BV,cAAeA,EACftM,SAAUA,IAAQ,OAAIqM,QAAJ,IAAIA,GAAJ,UAAIA,EAAeS,UAAnB,aAAI,EAAwB9M,WALzC8M,EAFI,OAYjB,SAAC,IAAD,CAAM/W,UAAU,sBAAhB,SACGkW,EAAU5Q,KAAI,SAACyR,GAAD,eACb,SAACC,GAAD,CAEElS,MAAOA,EACPiS,OAAQA,EACRE,MAAK,OAAEX,QAAF,IAAEA,GAAF,UAAEA,EAAeS,UAAjB,aAAE,EAAwBE,MAC/BV,cAAeA,EACftM,SAAUA,IAAQ,OAAIqM,QAAJ,IAAIA,GAAJ,UAAIA,EAAeS,UAAnB,aAAI,EAAwB9M,WALzC8M,EAFM,OAWjB,SAAC,IAAD,CAAM/W,UAAU,sBAAhB,SACGmW,EAAW7Q,KAAI,SAACyR,GAAD,eACd,SAACC,GAAD,CAEElS,MAAOA,EACPiS,OAAQA,EACRE,MAAK,OAAEX,QAAF,IAAEA,GAAF,UAAEA,EAAeS,UAAjB,aAAE,EAAwBE,MAC/BV,cAAeA,EACftM,SAAUA,IAAQ,OAAIqM,QAAJ,IAAIA,GAAJ,UAAIA,EAAeS,UAAnB,aAAI,EAAwB9M,WALzC8M,EAFO,OAWlB,UAAC,IAAD,CAAM/W,UAAU,sBAAhB,YACKyW,IACD,mBACEjV,KAAK,SACLmB,MAAO,CAAEmC,MAAAA,GACT9E,UAAU,iDACV2B,QAAS8U,EACTxM,SAAUA,EALZ,mBAUDmM,EAAU9Q,KAAI,SAACyR,GAAD,eACb,SAACC,GAAD,CAEElS,MAAOA,EACPiS,OAAQA,EACRE,MAAK,OAAEX,QAAF,IAAEA,GAAF,UAAEA,EAAeS,UAAjB,aAAE,EAAwBE,MAC/BV,cAAeA,EACftM,SAAUA,IAAQ,OAAIqM,QAAJ,IAAIA,GAAJ,UAAIA,EAAeS,UAAnB,aAAI,EAAwB9M,WALzC8M,EAFM,MAUZP,IACD,mBACEhV,KAAK,SACLmB,MAAO,CAAEmC,MAAAA,GACT9E,UAAU,qDACV2B,QAAS6U,EACTvM,SAAUA,EALZ,yBAaT,CAQD,SAAS+M,GAAT,GAAoE,IAArDD,EAAoD,EAApDA,OAAQE,EAA4C,EAA5CA,MAAOV,EAAqC,EAArCA,cAAetM,EAAsB,EAAtBA,SACrCiN,EAAgB,sBAChBpS,GAAQ6R,EAAAA,EAAAA,GAAaT,EAAUvQ,OAAS,EAAG,CAAEqQ,OAAQ,GAAIpT,SAAU,KAEzE,OACE,mBACEpB,KAAK,SACL,WAAUuV,EAEVpU,MAAO,CAAEmC,MAAAA,GACT9E,WAAWqJ,EAAAA,EAAAA,GAAK6N,EAAD,UAAmBA,EAAnB,aAAqCD,IACpDtV,QAAS,kBAAM4U,EAAcQ,EAApB,EACT9M,SAAUA,GAAsB,aAAVgN,EAPxB,SASGF,GANIA,EASV,C,sFC9IM,SAASI,GAAT,GAA+D,IAA/CC,EAA8C,EAA9CA,OAAQnJ,EAAsC,EAAtCA,MAAOoJ,EAA+B,EAA/BA,UAAWnU,EAAoB,EAApBA,MAC/C,OACE,iBAAKlD,UAAU,OAAf,WACE,SAACsX,GAAD,KACA,SAACC,GAAD,CAAQC,UAAWJ,EAAQnJ,MAAOA,KAClC,SAACwJ,GAAD,CAAYC,YAAaL,EAAWnU,MAAOA,MAGhD,CAOD,SAASqU,GAAT,GAAoD,IAAlCC,EAAiC,EAAjCA,UAAWvJ,EAAsB,EAAtBA,MACrBmJ,EAASO,MAAM1J,GAClB7H,MAAK,GACLd,KAAI,SAACsS,EAAGpO,GAAJ,OAAUA,EAAIgO,CAAd,IAEP,OACE,gBAAKxX,UAAU,cAAf,SACGoX,EAAO9R,KAAI,SAACuS,EAAOrO,GAAR,OAAeqO,GAAQ,SAACC,GAAA,EAAD,GAAkBtO,IAAQ,SAACuO,GAAA,EAAD,GAAoBvO,EAArE,KAGjB,CAOD,SAASiO,GAAT,GAA8D,IAAxCvU,EAAuC,EAAvCA,MAAOwU,EAAgC,EAAhCA,YAC3B,GAAwB7X,EAAAA,EAAAA,UAAS6X,GAAjC,eAAOM,EAAP,KAAaC,EAAb,KAEA,OACE,iCACE,SAAC,KAAD,CACEzW,KAAK,OACLmB,MAAO,CAAE4I,MAAO,SAChBzJ,MAAM,SAACoW,GAAA,EAAD,IACNvW,QAAS,kBAAMsW,GAAQ,EAAd,KAEX,SAAC,KAAD,CACEnN,OAAO,SAAC,KAAD,CAAWzK,GAAG,SAASC,GAAG,UACjC6X,UAAU,SACVH,KAAMA,EACNI,QAAS,kBAAMH,GAAQ,EAAd,EAJX,UAME,UAAC,IAAD,CAAO9W,UAAU,WAAWO,KAAK,QAAjC,WACE,SAAC,KAAD,KACA,eAAI1B,UAAU,OAAd,SAAsBkD,WAK/B,CAED,SAASoU,KACP,OACE,SAAC,MAAD,CAAMtF,GAAG,cAAT,UACE,SAAC,KAAD,CAAQxQ,KAAK,OAAOmB,MAAO,CAAE4I,MAAO,SAAWzJ,MAAM,SAACuW,GAAA,EAAD,OAG1D,C,4BC7EM,SAASC,GAAwCC,GACtD,OAA0B1Y,EAAAA,EAAAA,UAAiB0Y,GAA3C,eAAOtB,EAAP,KAAcuB,EAAd,KAMA,MAAO,CAAEvB,MAAAA,EAAOuB,SAAAA,EAAUC,YAJN,SAACC,GACnBF,GAAS,SAAC9C,GAAD,gBAAC,WAAeA,GAASgD,EAAzB,GACV,EAGF,C,gBCGM,SAASC,GAAT,GAO8B,IANnCnE,EAMkC,EANlCA,IACAoE,EAKkC,EALlCA,OACAC,EAIkC,EAJlCA,gBACAC,EAGkC,EAHlCA,aACAC,EAEkC,EAFlCA,kBACA9O,EACkC,EADlCA,SAEA,GAAoC+O,EAAAA,GAAAA,GAAyCxE,GAA1B,oBAC9CsE,GAD8C,IAEjDxP,GAAIsP,KAFN,eAAOK,EAAP,KAAmBC,EAAnB,KAKA,GAAwDrZ,EAAAA,EAAAA,WAAkB,GAA1E,eAAOsZ,EAAP,KAA6BC,EAA7B,MAEAxC,EAAAA,EAAAA,YAAU,YAEJqC,GAAcA,EAAW3P,KAAOsP,GAAW3O,GAC7CiP,GAAc,oBAAKJ,GAAN,IAAoBxP,GAAIsP,EAAQ7D,OAAQ8D,IAGxD,GAAE,CAACI,EAAYL,EAAQM,EAAeJ,EAAcD,EAAiB5O,IAGtE,IAAMoP,EAAeJ,GAAcA,EAAW3P,KAAOsP,EAASK,EAAa,KAkB3E,OAZArC,EAAAA,EAAAA,YAAU,YACHuC,GAAwBE,GAAgBN,IAAsB9O,IACjEmP,GAAwB,IAExB,iBAAC,+FACO9J,EAAAA,EAAAA,IAAK,KADZ,OAGCyJ,EAAkBM,GAHnB,0CAAD,GAMH,GAAE,CAACA,IAEG,CACLJ,WAAAA,EACAK,mBAlByB,SAAC9U,GAC1B0U,GAAc,SAACxD,GAAD,gBAAC,WAAD,OAAiBA,QAAjB,IAAiBA,EAAAA,EAAQoD,GAAzB,IAAwCxP,GAAIsP,EAAQ7D,OAAQ8D,GAAoBrU,EAAhF,GACf,EAkBF,CCzDM,SAAS+U,GAAmBC,EAAoBC,GACrD,OAA8C5Z,EAAAA,EAAAA,WAAS,GAAvD,eAAO6Z,EAAP,KAAwBC,EAAxB,KAUA,OAPA/C,EAAAA,EAAAA,YAAU,WACJ4C,IACFG,GAAmB,GACX,OAARF,QAAQ,IAARA,GAAAA,IAEH,GAAE,CAACD,IAEG,CAAEE,gBAAAA,EAAiBC,mBAAAA,EAC3B,CCTM,SAASC,GAAiB7O,GAC/B,IAIM8O,EAJgB9O,EACnB+O,UAAU,OACVC,QAAQ,mBAAoB,IAC5BC,cAC2BC,MAAM,IAC9BC,EAAmC,CAAC,EAQ1C,OANAL,EAAQtF,SAAQ,SAACwC,GACXA,EAAOxM,MAAM,cACf2P,EAAcnD,IAAU,EAE3B,IAEMmD,CACR,CAQM,SAASC,GAAcC,GAC5B,OAAOA,EACJN,UAAU,OACVC,QAAQ,mBAAoB,IAC5BC,aACJ,CCjBD,IAAMK,GAAgD,CACpD/Q,GAAI,GACJuQ,QAAS,GACT9E,OAAQ,G,4BCXH,SAASuF,GAAT,GAA8D,IAAnCC,EAAkC,EAAlCA,SAC1BzV,GAAQ6R,EAAAA,EAAAA,GAAa,EAAG,CAAEX,OAAQ,GAAIpT,SAAU,IAAK4X,SAAU,MAErE,OACE,SAAC,KAAD,CAAUC,UAAQ,EAACza,UAAU,WAAW0a,cAAe,IAAvD,SACGH,EAASjV,KAAI,SAACa,GAAD,OACZ,SAAC,MAAD,CAAmBtB,QAASsB,EAAGrB,MAAOA,EAAOC,OAAQD,EAAO9E,UAAU,UAAtDmG,EADJ,KAKnB,C,4BCLM,SAASwU,GAAT,GAAiD,IAA/B5P,EAA8B,EAA9BA,KAAM6P,EAAwB,EAAxBA,QACvBC,GAASC,EAAAA,EAAAA,UAAQ,kBAAM/P,EAAKkP,MAAM,KAAK3U,KAAI,SAACyV,GAAD,OAAUA,EAAKd,MAAM,GAArB,GAA1B,GAAqD,CAAClP,IAC7E,OACE,SAAC,IAAD,CAAO/K,UAAU,SAASgb,MAAI,EAAC5Z,MAAM,SAArC,SACGyZ,EAAOvV,KAAI,SAACyV,EAAMvR,EAAGyR,GACpB,OACE,UAAC,IAAD,CAAyBjb,UAAU,cAAcgb,MAAI,EAAC5Z,MAAM,SAA5D,UACG2Z,EAAKzV,KAAI,SAAC4V,EAAGC,GAAO,IAAD,EACZpE,EAASoD,GAAce,GACvBE,EAAyC,aAAtB,OAAPR,QAAO,IAAPA,GAAA,UAAAA,EAAU7D,UAAV,eAAmBE,OAC/BzC,EAAG,UAAM2G,EAAN,YAAWD,EAAX,YAAgB1R,GACzB,OHkBqC,OAA1C2Q,GGlBkBpD,GHkBExM,MAAM,YGjBZ6Q,GACL,SAAC,KAAD,CAAkBpb,UAAU,iBAAiBqb,MAAM,SAAnD,SACGH,GADU1G,IAIb,SAAC,KAAD,CAAsB1S,MAAM,SAACwZ,GAAA,EAAD,IAAkBtb,UAAU,gBAAvCwU,IAKnB,SAAC,KAAD,CAAkB6G,MAAM,SAAxB,SACGH,GADU1G,EAIhB,IACAhL,EAAI,EAAIyR,EAAEtV,SAAU,SAAC,KAAD,CAAQ0V,MAAM,aArBrC,eAAoB7R,GAwBvB,KAGN,C,uFClCM,SAAS+R,GAAT,GAAkF,IAAjDC,EAAgD,EAAhDA,OAAgD,IAAxCC,KAAAA,OAAwC,MAAjC,EAAiC,EAC9ErY,EAAYO,EAAAA,EAAAA,SAAZP,QACAnB,GAAcC,EAAAA,EAAAA,KAAdD,UACR,GAAiCyZ,EAAAA,GAAAA,KAAjC,eAAOzE,EAAP,KAAc0E,EAAd,KAaA,OAXA/E,EAAAA,EAAAA,YAAU,WACJK,EAAMzS,OACRpB,EAAQwY,KACN3Z,EAAU,+CAAD,OACkCgV,EAAMzS,OADxC,+BAEiByS,EAAMzS,QAIrC,GAAE,CAACyS,EAAO7T,EAASnB,KAGlB,UAAC,IAAD,CAAOd,UAAU,WAAWnB,UAAU,6BAAtC,WACE,SAAC,MAAD,CAAmB2B,QAAS,kBAAMga,EAAgBH,EAAtB,EAA5B,UACE,SAAC,cAAD,CAAgBhX,MAAOgX,EAAQK,UAAQ,EAACC,KAAM,GAAIL,KAAMA,OAG1D,SAAC,cAAD,CAAsBzb,UAAU,SAAhC,UACE,SAAC,KAAD,CACEK,GAAG,gEACHC,GAAG,gEAKZ,CCpBM,SAASyb,GAAT,GAAoG,IAArEhR,EAAoE,EAApEA,KAAMiR,EAA8D,EAA9DA,UAAWC,EAAmD,EAAnDA,IAAK7E,EAA8C,EAA9CA,OAAQ8E,EAAsC,EAAtCA,SAClE,GAAoCha,EAAAA,EAAAA,KAA5BwQ,EAAR,EAAQA,SAEF8I,EA6CR,YAYI,IAXFW,EAWC,EAXDA,KACAH,EAUC,EAVDA,UACAI,EASC,EATDA,gBACAF,EAQC,EARDA,SACAxJ,EAOC,EAPDA,SAQM2J,EAAeC,OAAOxI,KAAKoI,GAAUvW,OACrC4W,EAAiBD,OAAOE,OAAON,GAAUO,OAAOvR,SAASvF,OAE/D,MAAO,CAAC,gBAAD,QACC+W,EAAAA,EAAAA,IAAahK,GADd,YAC2ByJ,EAD3B,aACoCH,GADpC,WAEFW,EAAAA,EAAAA,IAAuBP,EAAiB/I,EAAAA,QAFtC,aAE2D1L,KAAKC,MAAO2U,EAAiBF,EAAgB,KAFxG,6DAG0CzJ,EAAAA,EAAAA,IAAcF,KAC7DkK,KAAK,KACR,CAlEgBC,CAAY,CACzBV,MAAMW,EAHR,EAAkBA,eAGIzJ,EAAAA,MACpB2I,UAAAA,EACAI,gBAAiBhF,EACjB8E,SAAAA,EACAxJ,SAAAA,IAGF,OACE,UAAC,IAAD,CAAOvR,UAAU,WAAWnB,UAAU,kBAAtC,WACE,SAAC,UAAD,CAAkB+D,MAAO,EAAG/D,UAAU,SAAtC,SACGic,GACC,iCACE,SAAC,KAAD,CAAYna,MAAM,SAACib,GAAA,EAAD,MADpB,KACuC,SAAC,KAAD,CAAW1c,GAAG,eAAYC,GAAG,yBAGpE,iCACE,SAAC,KAAD,CAAYwB,MAAM,SAACkb,GAAA,EAAD,MADpB,KACqC,SAAC,KAAD,CAAW3c,GAAG,YAAYC,GAAG,mBAItE,SAAC,cAAD,CAAsBN,UAAU,SAAhC,SACGic,GACC,SAAC,KAAD,CAAW5b,GAAG,6BAA0BC,GAAG,2BAE3C,SAAC,KAAD,CAAWD,GAAG,2BAAwBC,GAAG,4BAI7C,SAAC,MAAD,CAAeN,UAAU,gBAAzB,UACE,SAAC,cAAD,CAAsBA,UAAU,cAAhC,SAA+C+K,OAGjD,SAACwQ,GAAD,CAAuBC,OAAQA,EAAQC,KAAM,KAE7C,UAAC,cAAD,CAAsBzb,UAAU,SAASid,QAAM,EAA/C,8DAEE,mBACA,SAAC,KAAD,CAAYnb,MAAM,SAACob,GAAA,EAAD,OAClB,SAAC,MAAD,CAAMlL,GAAG,kBAAT,6BAIP,CChEM,SAASmL,KACd,OACE,SAAC,IAAD,WACE,SAAC,KAAD,CACE9c,IACE,iCACE,4FACA,qGACA,mJAEI,SAACyX,GAAA,EAAD,IAFJ,QAIA,0CAGJxX,IACE,iCACE,4FACA,yFACA,wHAC8F,KAC5F,SAACwX,GAAA,EAAD,IAFF,QAIA,6CAMX,CCVM,SAASsF,GAAT,GAAsD,IAA7BpQ,EAA4B,EAA5BA,KAC9B,ENFK,SAA2BA,GAA2B,IAAD,EAC1D,EAAyCsL,GAA6B,CACpE4D,SAAUtC,GAAiB5M,EAAKjC,MAChCqM,OAAQ/D,EAAAA,OACRuH,QAAS,CAAC,IAHJ3D,EAAR,EAAQA,MAAOuB,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,YAMzB,EAA2CE,GAAuC,CAChFnE,IAAKnB,EAAAA,gBACLuF,OAAQ5L,EAAK1D,GACbuP,gBAAe,UAAE7L,EAAK+H,cAAP,QAAiB,EAChC+D,aAAcuB,GACdtB,kBAAmB,SAACvU,GAClB,IAAI4S,EAAS/D,EAAAA,OACT6I,GAAQ,WAAQjF,EAAMiF,UACpBtB,EAAUpW,EAAMqV,QAAQwD,QAAO,SAACC,EAAwBvG,GAC5D,IAAMqE,OAAuCtK,IAA3BmG,EAAMiF,SAASnF,GAUjC,YAT+BjG,IAA3BmG,EAAMiF,SAASnF,KACjBmF,GAAQ,oBAAQA,GAAR,cAAmBnF,GAAS,KAEtCuG,EAAIvG,GAAU,CACZA,OAAQA,EACRE,MAAOmE,EAAY,UAAY,YAC/BnR,UAAU,GAEZmN,EAASgE,EAAYhE,EAASA,EAAS,EAChCkG,CACR,GAAE,CAAC,GAEJ7E,EAAY,CACVmC,QAAAA,EACAxD,OAAAA,EACA8E,SAAAA,GAEH,IA3BKjD,EAAR,EAAQA,WAAYK,EAApB,EAAoBA,mBAgEdiE,EAAQjB,OAAOE,OAAOvF,EAAMiF,UAC/BO,QAAO,SAACjY,GAAD,YAAqBsM,IAAVtM,CAAX,IACPgZ,MAAMtS,SACHuS,EAASxG,EAAMG,QAAU,EACzBsG,EAAaH,GAASE,EAG5B,EAAgDlE,GAAmBgE,GAASE,GAAUC,GAA9EhE,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,mBAEzB,MAAO,CACLvC,OAAQH,EAAMG,OACdwD,QAAS3D,EAAM2D,QACfsB,SAAUjF,EAAMiF,SAChBxC,gBAAAA,EACAC,mBAAAA,EACA4D,MAAAA,EACAE,OAAAA,EACAC,WAAAA,EACAC,YAnDkB,SAAC5G,GAAoB,IAAD,EAEtC,IAAIE,EAAM2D,QAAQ7D,GAAlB,CAIA,IAAMqE,OAAuCtK,IAA3BmG,EAAMiF,SAASnF,GAEjCuC,EAAmB,CACjBO,SAAS+D,EAAAA,EAAAA,IAAiB,GAAD,iCAAM3E,QAAN,IAAMA,OAAN,EAAMA,EAAYY,eAAlB,QAA6B,IAA7B,CAAkC9C,OAG7D,IAAMmF,GAAQ,WAAQjF,EAAMiF,UACxBd,IACFc,EAASnF,IAAU,GAGrByB,GAAS,SAAC9C,GAAD,gBAAC,WACLA,GADI,IAEPkF,SAAQ,oBACHlF,EAAKkF,SADH,cAEJ7D,EAAS,CACRA,OAAQA,EACRE,MAAOmE,EAAY,UAAY,YAC/BnR,UAAU,KAGdiS,SAAAA,EACA9E,OAAQgE,EAAY1F,EAAK0B,OAAS1B,EAAK0B,OAAS,GAXzC,GAbR,CA0BF,EAuBF,CMxFGyG,CAAkB7Q,GADZoK,EAAR,EAAQA,OAAQwD,EAAhB,EAAgBA,QAASlB,EAAzB,EAAyBA,gBAAiBC,EAA1C,EAA0CA,mBAAoB4D,EAA9D,EAA8DA,MAAOG,EAArE,EAAqEA,WAAYC,EAAjF,EAAiFA,YAAazB,EAA9F,EAA8FA,SAG9F,OACE,UAAC,IAAD,CAAQlc,UAAU,MAAlB,WACE,UAACiV,EAAD,CAAQnT,MAAM,SAACgc,EAAA,EAAD,IAAd,iBACK,SAAC,KAAD,UAAgBzK,EAAAA,OADrB,KACsDrG,EAAK+H,WAE3D,UAAC,YAAD,YACE,SAACoC,GAAD,CACEC,OAAQA,EACRnJ,MAAOoF,EAAAA,OACPgE,WAAYqG,GAActG,IAAW/D,EAAAA,OACrCnQ,OAAO,SAACia,GAAD,OAGT,SAAC7C,GAAD,CAAiBC,SAAUvN,EAAKuN,YAEhC,SAACI,GAAD,CAAQ5P,KAAMiC,EAAKjC,KAAM6P,QAASA,IAEjC8C,IACC,SAAC,IAAD,CAAO1d,UAAU,oBAAoBmB,UAAU,WAAWC,MAAM,SAAhE,UACE,SAAC,KAAD,CAAQO,QAAS,kBAAMgY,GAAmB,EAAzB,EAAgCnY,KAAK,UAAUM,MAAM,SAACic,GAAA,EAAD,IAAtE,UACE,SAAC,KAAD,CAAW1d,GAAG,gBAAgBC,GAAG,sBAIvC,SAAC,IAAD,CACEwK,OAAO,SAAC,KAAD,CAAWzK,GAAG,YAAYC,GAAG,YACpC0X,KAAM0B,EACNsE,SAAU,kBAAMrE,GAAmB,EAAzB,EACVsE,cAAe,CAAEC,QAAQ,GACzBC,kBAAmB,CAAED,QAAQ,GAL/B,UAOE,SAACnC,GAAD,CACEC,UAAWhP,EAAK+H,OAChBkH,IAAKsB,EACLnG,OAAQA,EACRrM,KAAMiC,EAAKjC,KACXmR,SAAUA,OAId,SAAC7F,GAAD,CAAUC,aAAcsE,EAASrE,cAAeoH,EAAa1T,SAAUyT,SAI9E,CC7DM,SAASU,KAAqB,IAAD,EAC1BC,GAAgBC,EAAAA,EAAAA,KAAhBD,YACF5L,GAAQ8C,EAAAA,EAAAA,MAGRD,EAAiB9C,EAAkB,GAAD,OAAIC,IAE5C,GAAI6C,EAAevI,UACjB,OAAO,SAACgJ,EAAD,IAGT,IAAMwI,EAAS,OAAGjJ,QAAH,IAAGA,GAAH,UAAGA,EAAgBtI,YAAnB,aAAG,EAAuB,aAEzC,OAAIsI,EAAepU,UAAYqd,GACtB,SAAC5I,EAAD,KAGF,SAACyH,GAAD,CAAepQ,KAAMuR,EAAWF,YAAaA,GACrD,C,4ECbM,SAASG,KAGd,OACE,SAACnJ,EAAD,WACE,iBAAKrV,UAAU,MAAf,WACE,SAAC,UAAD,CAAkB+D,MAAO,EAAzB,UACE,SAAC,KAAD,CAAW1D,GAAG,kBAAkBC,GAAG,qBAErC,SAAC,IAAD,CAAON,UAAU,kBAAjB,UACE,SAAC,KAAD,OAGF,iBAAKA,UAAU,WAAf,WACE,SAAC,MAAD,CAAmBye,UAAU,QAA7B,UACE,UAAC,MAAD,CAAMzM,GAAG,oBAAoBhS,UAAU,WAAvC,WACE,SAAC8d,EAAA,EAAD,CAAkBnb,MAAO,CAAEmC,MAAO,OAClC,SAAC,KAAD,CAAWzE,GAAG,YAAYC,GAAG,2BAIjC,SAAC,MAAD,CAAmBme,UAAU,QAA7B,UACE,UAAC,MAAD,CAAMzM,GAAG,iBAAiBhS,UAAU,WAApC,WACE,SAAC0e,GAAA,EAAD,CAAsB/b,MAAO,CAAEmC,MAAO,OACtC,SAAC,KAAD,CAAWzE,GAAG,YAASC,GAAG,oBAI9B,SAAC,MAAD,CAAmBme,UAAU,QAAQze,UAAU,WAA/C,UACE,UAAC,MAAD,CAAMgS,GAAG,kBAAkBhS,UAAU,WAArC,WACE,SAAC2e,GAAA,EAAD,CAAoBhc,MAAO,CAAEmC,MAAO,OACpC,SAAC,KAAD,CAAWzE,GAAG,aAAUC,GAAG,kBAI/B,SAAC,MAAD,CAAmBme,UAAU,QAAQze,UAAU,WAA/C,UACE,UAAC,MAAD,CAAMgS,GAAG,qBAAqBhS,UAAU,WAAxC,WACE,SAAC4e,GAAA,EAAD,CAAmBjc,MAAO,CAAEmC,MAAO,OACnC,SAAC,KAAD,CAAWzE,GAAG,aAAaC,GAAG,oBAIlC,SAAC,MAAD,CAAmBme,UAAU,QAAQze,UAAU,WAA/C,UACE,UAAC,MAAD,CAAMgS,GAAG,kBAAkBhS,UAAU,WAArC,WACE,SAACkd,GAAA,EAAD,CAAsBva,MAAO,CAAEmC,MAAO,OACtC,SAAC,KAAD,CAAWzE,GAAG,aAAUC,GAAG,sBAI/B,SAAC,MAAD,CAAmBme,UAAU,QAAQxU,UAAQ,EAACjK,UAAU,oBAAxD,UACE,UAAC,MAAD,CAAMgS,GAAG,UAAUhS,UAAU,WAA7B,WACE,SAAC6e,GAAA,EAAD,CAAuBlc,MAAO,CAAEmC,MAAO,OACvC,SAAC,KAAD,CAAWzE,GAAG,WAAWC,GAAG,uBAIhC,SAAC,MAAD,CAAmBme,UAAU,QAAQxU,UAAQ,EAACjK,UAAU,oBAAxD,UACE,UAAC,MAAD,CAAMgS,GAAG,UAAUhS,UAAU,WAA7B,WACE,SAAC8e,GAAA,EAAD,CAAoBnc,MAAO,CAAEmC,MAAO,OACpC,SAAC,KAAD,CAAWzE,GAAG,iBAAiBC,GAAG,0BAItC,SAAC,MAAD,CAAmBme,UAAU,QAAQxU,UAAQ,EAACjK,UAAU,oBAAxD,UACE,UAAC,MAAD,CAAMgS,GAAG,UAAUhS,UAAU,WAA7B,WACE,SAAC+e,GAAA,EAAD,CAAqBpc,MAAO,CAAEmC,MAAO,OACrC,SAAC,KAAD,CAAWzE,GAAG,UAAUC,GAAG,wBAOxC,C,cC/EK0e,G,6GCJOC,GAAW,SAACC,EAAwBC,GAK/C,IAJA,IAAMC,GAAWC,EAAAA,GAAAA,SAAQH,EAAMI,UAEzBC,EAAqB,GAElB/V,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAAC,IAAD,EAGrBgW,EAAOC,GAAYL,EAFJG,EAAM/V,EAAI,GAEkB2V,EAAe,UAAGI,EAAM/V,EAAI,UAAb,aAAG,EAAce,WAAQuG,GACzFyO,EAAMvV,KAAKwV,EACZ,CAED,OAAOD,CACR,EAEKG,GAAY/H,MAAM,GACrBvR,KAAK,GACLd,KAAI,SAACsS,EAAGpO,GAAJ,OAAUA,CAAV,IACDmW,GAAQ,CAAC,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,KAE1CC,GAA8B,CAClC,GAAI,EACJ,GAAI,EACJ,IAAK,EACL,IAAK,EACL,IAAK,EACL,IAAK,EACL,IAAK,EACL,IAAK,GAGP,SAASH,GAAYI,EAAgBC,EAA0BC,GAAsC,IAAD,EAC5FC,GAAeX,EAAAA,GAAAA,SAAQQ,GACvBI,GAAkBZ,EAAAA,GAAAA,SAAQK,IAC1BQ,GAAcb,EAAAA,GAAAA,SAAQM,IAE5B,IAAKG,EAAc,CACjB,IAAMK,GAAQC,EAAAA,GAAAA,YAAWJ,EAAc,GAAG1a,KAAI,SAACoF,EAAQlB,GAAT,MAAgB,CAC5DkB,OAAAA,EACAtG,SAAU6b,EAAgBzW,GAC1B9H,KAAMwe,EAAY1W,GAClB6W,UAAUC,EAAAA,GAAAA,QAAO,EAAG,KACpBC,OAAQX,GAAUM,EAAY1W,IALc,IAQ9C,MAAO,CACLF,GAAI6W,EAAM7a,KAAI,SAAChE,GAAD,OAAUA,EAAKoJ,MAAf,IAAuBkS,KAAK4D,GAAAA,IAC1CL,MAAAA,EAEH,CAED,IAAMM,EAAoBX,EAAaK,MAAM7a,KAAI,SAAChE,GAAD,OAAUA,EAAKoJ,MAAf,IAE3CgW,GAAeC,EAAAA,GAAAA,OAAMX,GAAcY,WAAWH,GAAmBI,KAAK,GAAGrc,QACzEsc,EAAY,WAChBC,EAAAA,GAAAA,QAAON,EAAkBhE,QAAO,SAACnb,GAAD,OAAUA,IAASye,CAAnB,YADhB,QACwDU,EAAkB,GAEtFN,GAAQd,EAAAA,GAAAA,SAAQ,GAAD,gBAAKqB,GAAL,CAAmBI,KAAexb,KAAI,SAACoF,EAAQlB,GAAT,MAAgB,CACzEkB,OAAAA,EACAtG,SAAU6b,EAAgBzW,GAC1B9H,KAAMwe,EAAY1W,GAClB6W,UAAUC,EAAAA,GAAAA,QAAO,EAAG,KACpBC,OAAQX,GAAUM,EAAY1W,IAL2B,IAQ3D,MAAO,CACLF,GAAI6W,EAAM7a,KAAI,SAAChE,GAAD,OAAUA,EAAKoJ,MAAf,IAAuBkS,KAAK4D,GAAAA,IAC1CL,MAAAA,EACA5V,MAAOuW,EAEV,CCvDD,IAAME,GAA0C,CAC9C1X,GAAI,GACJyL,OAAQ,EACRwK,MAAO,EACP0B,UAAU,EACVC,SAAU,EACV9J,OAAQ/D,EAASE,QCfZ,SAAS4N,GAAT,GAAgE,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,SAAUvc,EAA+B,EAA/BA,MAAO9E,EAAwB,EAAxBA,UAC5C,OACE,gBAAKA,WAAWqJ,EAAAA,EAAAA,GAAK,cAAerJ,GAAY2C,MAAO,CAAEmC,MAAOA,EAAOC,OAAQD,GAA/E,SACGsc,EAAKjB,MAAM7a,KAAI,SAAChE,GAAD,OACd,gBAEEtB,WAAWqJ,EAAAA,EAAAA,GAAK,mBAAD,gCAA8C/H,EAAK8C,WAClEzB,MAAO,CACL2e,UAAU,UAAD,OAAYhgB,EAAK+e,SAAjB,sBAAuC/e,EAAKI,KAAO,IAAnD,KACT6e,OAAQjf,EAAKif,QAEfgB,KAAK,SACL5f,QAAS,kBAAM0f,EAAS/f,EAAKoJ,OAApB,EARX,UAUE,SAACG,GAAA,EAAD,CAAUvB,GAAIhI,EAAKoJ,OAAQ1K,UAAU,qBAAqB8E,MAAOA,EAAQ,KATpExD,EAAKoJ,OAFE,KAgBrB,CCxBM,SAAS8W,GAAT,GAAqD,IAA7BrB,EAA4B,EAA5BA,MAC7B,OACE,gBAAKxd,MAAO,CAAEuK,QAAS,QAAvB,SACGiT,EAAM7a,KAAI,SAACoF,GAAD,OACT,SAACG,GAAA,EAAD,CAAuBvB,GAAIoB,EAAQ1K,UAAU,cAAc8E,MAAO,GAAnD4F,EADN,KAKhB,C,wCCGK+W,GAAS,EACb,iCACE,SAAC,KAAD,CAAY3f,MAAM,SAACyQ,GAAA,EAAD,MADpB,KACsC,SAAC,KAAD,CAAWlS,GAAG,2BAAqBC,GAAG,4BAE5E,iCACE,SAAC,KAAD,CAAYwB,MAAM,SAAC4f,GAAA,EAAD,MADpB,KAC+C,SAAC,KAAD,CAAWrhB,GAAG,yBAAyBC,GAAG,qBAEzF,iCACE,SAAC,KAAD,CAAYwB,MAAM,SAACmQ,GAAA,EAAD,MADpB,KACyC,SAAC,KAAD,CAAW5R,GAAG,aAAaC,GAAG,mBAEvE,iCACE,SAAC,KAAD,CAAYwB,MAAM,SAACib,GAAA,EAAD,MADpB,KACuC,SAAC,KAAD,CAAW1c,GAAG,eAAYC,GAAG,yBAEpE,iCACE,SAAC,KAAD,CAAYwB,MAAM,SAACib,GAAA,EAAD,MADpB,KACuC,SAAC,KAAD,CAAW1c,GAAG,eAAYC,GAAG,oBAyB/D,SAASyb,GAAT,GAUuB,IAAD,EAT3B4F,EAS2B,EAT3BA,eACA9I,EAQ2B,EAR3BA,gBACAzB,EAO2B,EAP3BA,OACAwK,EAM2B,EAN3BA,SACAtC,EAK2B,EAL3BA,SACAuC,EAI2B,EAJ3BA,aACAZ,EAG2B,EAH3BA,SACAa,EAE2B,EAF3BA,UACA7I,EAC2B,EAD3BA,WAEA,GAAoC/W,EAAAA,EAAAA,KAA5BwQ,EAAR,EAAQA,SACF8I,EAgFR,YAoBY,IAnBVW,EAmBS,EAnBTA,KACArR,EAkBS,EAlBTA,MACA+N,EAiBS,EAjBTA,gBACAuD,EAgBS,EAhBTA,gBACA2F,EAeS,EAfTA,YACAH,EAcS,EAdTA,SACAI,EAaS,EAbTA,KACAtP,EAYS,EAZTA,SACAuO,EAWS,EAXTA,SAYA,MAAO,CAAC,gBAAD,QACCvE,EAAAA,EAAAA,IAAahK,GADd,YAC2ByJ,EAD3B,aACoCtD,GADpC,UAEF/N,GAFE,OAEMmW,EAAW,IAAM,GAFvB,aAE8BW,EAF9B,YAE0CI,EAF1C,aAEkDrF,EAAAA,EAAAA,IAAuBP,EAAiB2F,IAF1F,uDAG0CnP,EAAAA,EAAAA,IAAcF,KAC7DkK,KAAK,KACR,CA1GgBC,CAAY,CACzBV,MAAMW,EAFR,EAAkBA,eAEIzJ,EAASC,MAC7BxI,MAAO6W,EACPvF,gBAAiBhF,EACjB2K,YAAa1O,EAASE,OACtBqO,SAAAA,EACAI,KAAM3O,EAASG,KACfd,SAAAA,EACAuO,SAAAA,EACApI,gBAAAA,IAGI/N,EA7CS,SAAC8W,EAAkBxF,GAClC,OAAIwF,GAAY,GAAyB,IAApBxF,EAA8BqF,GAAO,GACtDG,GAAY,EAAUH,GAAO,GAC7BG,GAAY,GAAWH,GAAO,GAC9BG,EAAW,GAAWH,GAAO,GAE1BA,GAAO,EACf,CAsCeQ,CAASL,EAAUxK,GAC3B8K,GAAS,iBAACjJ,QAAD,IAACA,OAAD,EAACA,EAAYsG,aAAb,QAAsB,GAAKqC,EAE1C,OACE,UAAC,IAAD,CAAOzgB,UAAU,WAAWnB,UAAU,kBAAtC,WACE,SAAC,UAAD,CAAkB+D,MAAO,EAAG/D,UAAU,SAAtC,SACG8K,KAEH,UAAC,cAAD,CAAsB9K,UAAU,SAAhC,WACE,SAAC,KAAD,CACEK,GAAE,6BAAkBuhB,EAAlB,sBAAwCvO,EAASG,KAAjD,KACFlT,GAAE,uBAAkBshB,EAAlB,yBAA2CvO,EAASG,KAApD,QAEJ,sBAEAqO,IACA,UAAC,cAAD,CAAsB7hB,UAAU,SAAhC,WACE,SAAC,KAAD,CACEK,GAAG,8FACHC,GAAG,yEAEJ4hB,IACC,iCACE,mBACA,SAAC,KAAD,CACE7hB,GAAE,iCAA4BuhB,EAA5B,6BACFthB,GAAE,8BAAyBshB,EAAzB,+BAOZ,UAAC,IAAD,CAAMtN,IAAK,EAAX,YACKwN,IACD,SAACjX,GAAA,EAAD,CACEvB,GAAIwY,EACJhd,MAAO,GACP9E,WAAWqJ,EAAAA,EAAAA,IAAKsG,EAAAA,EAAAA,IAAkB,QAAS,CAAEE,MAAO,SAAW,wBAGlEyP,EACE7C,QAAO,SAACnT,GAAD,OAAQA,IAAOwY,CAAf,IACPK,MAAM,EAAGxa,KAAKya,OAAOR,EAAW,GAAK,IACrCtc,KAAI,SAACgE,EAAIpD,GAAL,OACH,SAAC2E,GAAA,EAAD,CAEEvB,GAAIA,EACJxE,MAAO,GACP9E,WAAW2P,EAAAA,EAAAA,IAAkB,QAAS,CAAEE,MAAO,OAAQwS,MAAe,GAARnc,KAHzDoD,EAFJ,OAUPuY,GAGA,SAAC,cAAD,CAAsB7hB,UAAU,SAAhC,UACE,SAAC,KAAD,CACEK,GAAG,wFACHC,GAAG,8DALP,SAACib,GAAD,CAAuBC,OAAQA,EAAQC,KAAM,MAWpD,CC/IM,SAAS6G,KACd,OACE,SAAC,IAAD,CACElf,SACE,SAAC,KAAD,CACE/C,GAAG,qDACHC,GAAG,wCAGPkB,KAAK,UACLC,UAAQ,EACR8gB,QAAM,GAGX,CCVM,SAASpF,KACd,OACE,UAAC,IAAD,YACE,SAACmF,GAAD,KACA,SAAC,KAAD,CACEjiB,IACE,iCACE,wFACA,6HACA,+FACA,oHAC4E,SAACyX,GAAA,EAAD,IAD5E,QAGA,2BACE,iDADF,4CAGA,qEAGJxX,IACE,iCACE,iFACA,sHACA,wEACA,gGACoE,SAACwX,GAAA,EAAD,IADpE,QAGA,2BACE,2CADF,uCAGA,4EAMX,CCjBM,SAAS0K,GAAT,GAAsF,IAAhExV,EAA+D,EAA/DA,KAAM0F,EAAyD,EAAzDA,SAAU+P,EAA+C,EAA/CA,aAAcZ,EAAiC,EAAjCA,aACzD,ENEK,SAAwB7U,EAAuB6U,GACpD,OAA8BhiB,EAAAA,EAAAA,WAAS,GAAvC,eAAO6iB,EAAP,KAAgBC,EAAhB,KAEA,GAAwB3J,EAAAA,GAAAA,GAAgB3F,EAASI,qBAAsB,UAAvE,eAAOmP,EAAP,KAAaC,EAAb,KAEA,GAA0BhjB,EAAAA,EAAAA,UAAoB,CAC5CuX,OAAQ/D,EAASE,OACjByO,KAAM3O,EAASG,KACf+L,MAAO,GACPuD,UAAW,EACX5B,SAAU,IALZ,eAAOjK,EAAP,KAAcuB,EAAd,KAQA,EAA2CG,GAAoC,CAC7EnE,IAAKnB,EAASK,gBACdkF,OAAQ5L,EAAK1D,GACbuP,gBAAiB7L,EAAK+H,OACtB+D,aAAckI,GACd/W,SAAU4X,EACV9I,kBAAmB,SAACvU,GAClBgU,GAAS,SAAC9C,GAAD,gBAAC,WACLA,GADI,IAEPoN,UAAWte,EAAM+a,MACjB2B,SAAU1c,EAAM0c,SAChB9J,OAAQ5S,EAAM4S,QAJP,GAMV,IAbK6B,EAAR,EAAQA,WAAYK,EAApB,EAAoBA,mBAiBdyJ,EAAQ9L,EAAMsI,MAAMtI,EAAM6L,WAC1BE,EAAQ/L,EAAMsI,MAAMtI,EAAM6L,UAAY,GAEtCtH,GAASV,EAAAA,EAAAA,UACb,yCAAMmI,EAAAA,GAAAA,gBAAc,iBAACF,QAAD,IAACA,OAAD,EAACA,EAAO5C,aAAR,QAAiB,GAAjB,iBAAqB6C,QAArB,IAAqBA,OAArB,EAAqBA,EAAO7C,aAA5B,QAAqC,GAAI,iBAA7D,iBAAM,EAAmE,UAAzE,aAAM,EAAuEzV,MAA7E,GACA,CAACqY,EAAOC,IAIV,GAAgD7R,EAAAA,GAAAA,GAAa,CAC3DH,SAAU,GACVI,WAAW,EACXH,SAAU,WAEY,IAAD,IADnB0R,GAAW,GACNd,GACHvI,EAAmB,CACjB2H,SAAmB,cAAT2B,EACV1B,SAAUjK,EAAMiK,SAChB9J,OAAQH,EAAMG,OACdmI,MAAOtI,EAAM6L,WAAN,iBAAmB7J,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAYsG,aAA/B,QAAwC,GAAKtI,EAAM6L,UAAnD,iBAA+D7J,QAA/D,IAA+DA,OAA/D,EAA+DA,EAAYsG,aAA3E,QAAoF,GAGhG,IAbKrO,EAAR,EAAQA,SAAUgS,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,QAASC,EAAtC,EAAsCA,MAoChC7F,EAAQtG,EAAM6L,YAAczP,EAASG,KACrCiK,EAASxG,EAAMG,QAAU,EACzBsG,GAAcH,GAASE,GAAUiF,GAAWzL,EAAMiK,SAAW,KAAOgC,GAE1EtM,EAAAA,EAAAA,YAAU,YACJ2G,GAASE,KACX2F,IACAT,GAAW,GAEd,GAAE,CAACpF,EAAOE,IAGX,MAAgDlE,GAAmBmE,GAAY,kBAAM0F,GAAN,IAAvE1J,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,mBAEzB,MAAO,CACLvC,OAAQH,EAAMG,OACd0L,UAAW7L,EAAM6L,UACjB5B,SAAUjK,EAAMiK,SAChBxH,gBAAAA,EACAC,mBAAAA,EACA4D,MAAAA,EACAE,OAAAA,EACAC,WAAAA,EACA2F,QA1Cc,WACd7K,GAAS,SAAC9C,GAAD,gBAAC,WACLA,GADI,IAEP6J,MAAON,GAASjS,EAAe,cAAT4V,GACtBE,UAAW,EACX5B,SAAUxL,EAAKwL,SAAW,GAJnB,IAMTiC,GAAQG,EAAAA,EAAAA,IAAW,KAAK,EACzB,EAmCCjC,SAjCe,SAAC3W,GAEd8N,EADE9N,IAAW8Q,EACJ,SAAC9F,GAAD,gBAAC,WAAeA,GAAhB,IAAsBoN,UAAWpN,EAAKoN,UAAY,GAAlD,EAEA,SAACpN,GAAD,gBAAC,WAAeA,GAAhB,IAAsB0B,OAAQ1B,EAAK0B,OAAS,GAA5C,EAEZ,EA4BClG,SAAAA,EACA0R,KAAAA,EACAC,QAAAA,EACAE,MAAAA,EACAC,MAAAA,EACAxH,OAAAA,EACA+H,UAAWL,EACXjK,WAAAA,EAEH,CM5FKuK,CAAexW,EAAM6U,GAlBvBzK,EADF,EACEA,OACAsC,EAFF,EAEEA,gBACAC,EAHF,EAGEA,mBACAmJ,EAJF,EAIEA,UACAvF,EALF,EAKEA,MACAE,EANF,EAMEA,OACAC,EAPF,EAOEA,WACA2F,EARF,EAQEA,QACAhC,EATF,EASEA,SACAnQ,EAVF,EAUEA,SACA0R,EAXF,EAWEA,KACAC,EAZF,EAYEA,QACAE,EAbF,EAaEA,MACAC,EAdF,EAcEA,MACAxH,EAfF,EAeEA,OACA+H,EAhBF,EAgBEA,UACArC,EAjBF,EAiBEA,SACAjI,EAlBF,EAkBEA,WAIF,GAAqCwK,EAAAA,GAAAA,KAArC,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAmCF,EAAAA,GAAAA,KAAnC,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,GAAYhJ,EAAAA,EAAAA,UAAQ,WACxB,IAAMhW,EAAQ6e,EAAe7e,MAAQ,GAC/BC,GAAU4e,EAAe5e,OAAS8e,EAAc9e,QAAU,EAAI,GACpE,OAAO4C,KAAKjD,IAAIiD,KAAKlD,IAAIK,EAAOC,EAAQ,KAAM,IAC/C,GAAE,CAAC4e,EAAe5e,OAAQ4e,EAAe7e,MAAO+e,EAAc9e,SAE/D,OACE,UAAC,IAAD,CAAQ/E,UAAU,MAAlB,WACE,UAACiV,EAAD,CAAQnT,MAAM,SAAC4c,GAAA,EAAD,IAAd,iBACK,SAAC,KAAD,UAAgBrL,EAASC,OAD9B,KACsDtG,EAAK+H,WAE3D,UAAC,YAAD,CAAgBgP,IAAKL,EAArB,WACE,iBAAKK,IAAKH,EAAV,WACE,SAACzM,GAAD,CAAMC,OAAQA,EAAQnJ,MAAOoF,EAASE,OAAQ8D,WAAW,EAAMnU,OAAO,SAAC,GAAD,OACtE,SAAC,IAAD,CAAOlD,UAAU,kBAAjB,UACE,UAAC,SAAD,CAAiBid,QAAM,EAAvB,UACGjQ,EAAKlC,MAAM4H,GADd,OAC2B,SAAC,KAAD,CAAWrS,GAAG,QAAQC,GAAG,SADpD,IAC+DwiB,EAD/D,IAC2EzP,EAASG,MAChFqO,IACA,gCACG,IADH,MAEI,SAAC,KAAD,CAAWxhB,GAAG,YAAYC,GAAG,YAFjC,IAE+C4gB,GAAYqC,EAAY,EAAI,GAAI,aAMrF,gBAAKvjB,UAAU,qBAAf,UACE,SAAC,MAAD,CAAUwE,MAAO0M,EAAUjD,MAAO,WAItC,UAAC,IAAD,CAAOjO,UAAU,kBAAkBmB,UAAU,WAA7C,WACIoiB,IACA,iCACE,UAAC,KAAD,CACE7hB,KAAK,QACLC,QAAS0hB,EACT7hB,KAAK,UACLyI,UAAU4X,IAAuBtE,GAASE,GAC1C3b,KAAK,eALP,WAOE,SAAC,KAAD,CAAWzB,GAAG,aAAUC,GAAG,UAP7B,OASGuhB,GACC,SAAC,KAAD,UAAgB7U,EAAKlC,SAErB,SAAC,KAAD,CAAWzK,GAAG,aAAUC,GAAG,eAG/B,SAACkhB,GAAD,CAAcrB,MAAOnT,EAAKsS,YAE1B,SAAC,KAAD,CACE/e,mBAAmB,SAAC,KAAD,CAAWF,GAAG,cAAcC,GAAG,gBAClDF,iBAAiB,SAAC,KAAD,CAAWC,GAAG,kBAAeC,GAAG,mBACjDkE,MAAgB,cAAToe,EACPpiB,SAAU,SAACC,GAAD,OAAaoiB,EAAQpiB,EAAU,YAAc,SAA7C,OAKfid,IACC,SAAC,IAAD,CAAO1d,UAAU,oBAAoBoB,MAAM,SAASD,UAAU,WAA9D,UACE,SAAC,KAAD,CAAQQ,QAAS,kBAAMgY,GAAmB,EAAzB,EAAjB,UACE,SAAC,KAAD,CAAWtZ,GAAG,gBAAgBC,GAAG,sBAKrCuhB,GAAgBnE,KAAgB6F,IAChC,UAAC,IAAD,CAAOvjB,UAAU,oBAAoBoB,MAAM,SAASD,UAAU,WAA9D,WACE,SAAC,KAAD,KAEA,SAAC,KAAD,CAAQQ,QAAS8gB,EAAjB,SACGZ,GACC,SAAC,KAAD,CAAWxhB,GAAG,4BAAyBC,GAAG,8BAE1C,SAAC,KAAD,CAAWD,GAAG,iCAA8BC,GAAG,4BAMtDijB,IACC,UAAC,IAAD,CAAOvjB,UAAU,kBAAkBmB,UAAU,WAA7C,WACE,SAACggB,GAAD,CACEC,KAAM2B,EACN1B,SAAUA,EAEVvc,MAAOgf,EACP9jB,WAAW2P,EAAAA,EAAAA,IAAkB,YAAa,CAAEE,MAAO,UAF9CkT,EAAMzZ,KAIb,SAAC6X,GAAD,CACEC,KAAM4B,EACN3B,SAAUA,EAEVvc,MAAOgf,EACP9jB,WAAW2P,EAAAA,EAAAA,IAAkB,SAAU,CAAEE,MAAO,UAF3CmT,EAAM1Z,KAIb,SAAC0a,GAAD,CAAWxI,OAAQA,QAIvB,SAAC,IAAD,CACE1Q,OAAO,SAAC,KAAD,CAAWzK,GAAG,YAAYC,GAAG,YACpC0X,KAAM0B,EACNsE,SAAU,kBAAMrE,GAAmB,EAAzB,EACVsE,cAAe,CAAEC,QAAQ,GACzBC,kBAAmB,CAAED,QAAQ,GAL/B,UAOE,SAAC,GAAD,CACEyD,eAAgB3U,EAAKlC,MAAM4H,GAC3BmG,gBAAiB7L,EAAK+H,OACtBqC,OAAQA,EACRwK,SAAUkB,EACVxD,SAAUtS,EAAKsS,SACfuC,aAAcA,EACdZ,SAAmB,cAAT2B,EACVd,UAAWtG,EACXvC,WAAYA,cAOzB,CAED,SAAS+K,GAAT,GAAoD,IAA/BxI,EAA8B,EAA9BA,OACnB,OAAK5G,EAAAA,IAGH,SAAC,KAAD,CAAayG,MAAM,SAASvZ,MAAM,SAAC+I,GAAA,EAAD,CAAUvB,GAAIkS,EAAQ1W,MAAO,GAAIkG,QAAS,EAAGhL,UAAU,gBAHrE,uBAKvB,CC5KM,SAASikB,KAAkB,IAAD,ETDOtR,ESEhCF,GAAQ8C,EAAAA,EAAAA,MACN7C,GAAaxQ,EAAAA,EAAAA,KAAbwQ,SACR,GAAsC7S,EAAAA,EAAAA,WAAS,GAA/C,eAAOgiB,EAAP,KAAqBqC,EAArB,KAGM5O,EAAiB9C,EAAkB,GAAD,OAAIC,IACtC0R,GTRgCxR,ESQU,GAAD,OAAIF,ITN5ChG,EAAAA,EAAAA,GAA0B,CAC/BC,SAAU,CAACiG,EAAgB,SAAU,UACrChG,QAAQ,WAAD,wBAAE,6FACPkG,QAAQC,MAAR,6BAAoCH,EAApC,QADO,UAGDrD,EAAAA,EAAAA,IAAK,KAHJ,cAKD8U,GAAYrD,EAAAA,GAAAA,QAAO/B,IAEnBqF,EAA4B,CAChC/a,GAAI,SACJ9H,KAAM,SACN8iB,MAAOF,EAAUtZ,MAAMxK,GACvBwK,MAAOsZ,EAAUtZ,MACjBwU,SAAU8E,EAAU9E,SACpBvK,OAAQ,IAGV5B,EAAAA,EAAAA,KAAM,UAAGR,EAAiB0R,GAAY,SAhB/B,kBAiBAA,GAjBA,2CAAF,kDAAC,GAmBRjR,OAAO,KSbT,GAAIkC,EAAevI,WAAauI,EAAeiP,cAAgBJ,EAAgBpX,UAC7E,OAAO,SAACgJ,EAAD,IAGT,IAAMwI,EAAS,OAAGjJ,QAAH,IAAGA,GAAH,UAAGA,EAAgBtI,YAAnB,aAAG,EAAuB,UACnCA,EAAO6U,EAAY,OAAGsC,QAAH,IAAGA,OAAH,EAAGA,EAAiBnX,KAAOuR,EAEpD,GAAIjJ,EAAepU,UAAY8L,EAC7B,OAAO,SAAC2I,EAAD,IAGT,IAAM8M,EAAY,mCAAG,qFACnByB,GAAc,SAACxO,GAAD,OAAWA,CAAX,IADK,UAEbpG,EAAAA,EAAAA,IAAK,KAFQ,OAGnBgG,EAAekP,UAHI,2CAAH,qDAMlB,OACE,SAAChC,GAAD,CAAYxV,KAAMA,EAAM0F,SAAUA,EAAU+P,aAAcA,EAAcZ,aAAcA,GAEzF,CCvCM,IAAM4C,GAAkB,CAAC,EAAG,EAAG,GAAI,ICiBpCpK,GAAkD,CACtD/Q,GAAI,GACJsR,QAAS,GACT7F,OAAQ,EACR2P,MAAO,GCVF,SAASC,GAAT,GAAsF,IAArE9K,EAAoE,EAApEA,QAAS+K,EAA2D,EAA3DA,kBAAmBC,EAAwC,EAAxCA,UAAWC,EAA6B,EAA7BA,KAAMlK,EAAuB,EAAvBA,QACnE,OACE,gBAAK5a,UAAU,mBAAf,SACG6Z,EAAQvU,KAAI,WAA4BY,GAAW,IAApC6Q,EAAmC,EAAnCA,OAAQgO,EAA2B,EAA3BA,OAAQ9N,EAAmB,EAAnBA,MACxB+N,EAAMrd,KAAKya,MAAMlc,EAAQ,GACzB+e,EAAM/e,EAAQ,EACdgf,EAAyBtK,EAAQuK,MAAK,SAACjE,GAAD,OAAcA,EAAS8D,GAAKC,KAASlO,CAArC,MAAiDgO,EAE7F,OACE,mBAEE/kB,WAAWqJ,EAAAA,EAAAA,GACT,yBACAyb,EAAKhO,SAAS5Q,KAAUyJ,EAAAA,EAAAA,IAAkB,SAAU,CAAEE,MAAO,YAC5DkV,GAAUF,IAAc3e,GAAS,iCAClC2e,IAAc3e,GAAS,mCAJV,kCAKc+Q,GAE3BiO,GAAsB,yCAExBvjB,QAAS,kBAAQojB,EAAoC,KAA3BH,EAAkB1e,EAAnC,EAXX,SAaG6Q,GAbH,UACUA,EADV,YACoB7Q,GAevB,KAGN,CClBM,SAAS6V,GAAT,GAQuB,IAP5BC,EAO2B,EAP3BA,UACAoJ,EAM2B,EAN3BA,MACA7H,EAK2B,EAL3BA,MAEAnG,GAG2B,EAJ3BqG,OAI2B,EAH3BrG,QACAyC,EAE2B,EAF3BA,QACA6K,EAC2B,EAD3BA,MAEA,GAAoCxiB,EAAAA,EAAAA,KAA5BwQ,EAAR,EAAQA,SAEF8I,EAyCR,YAcI,IAbFW,EAaC,EAbDA,KACAH,EAYC,EAZDA,UACAI,EAWC,EAXDA,gBACAvC,EAUC,EAVDA,QACAnH,EASC,EATDA,SACAgS,EAQC,EARDA,MASMW,GAAkBC,EAAAA,GAAAA,OAAMzL,EAAS,GAAGvU,KAAI,SAAC0f,GAAD,OAC5CA,EAAI1f,KAAI,SAACyR,GACP,OAAQA,EAAOE,OACb,IAAK,IACH,MAAO,eACT,IAAK,IACH,MAAO,eACT,IAAK,IACH,MAAO,eACT,IAAK,IACH,MAAO,eACT,QACE,MAAO,eAEZ,GAd2C,IAiB9C,MAAO,CAAC,gBAAD,QACCyF,EAAAA,EAAAA,IAAahK,GADd,YAC2ByJ,EAD3B,aACoCH,GADpC,WAEFW,EAAAA,EAAAA,IAAuBP,EAAiB/I,EAAAA,OAAiB,KAFvD,aAEgEqR,EAFhE,YAGLW,EACG/f,KAAI,SAAC0f,GAAD,OAASA,EAAIpI,KAAK,KAAK2I,MAAvB,IACJ9I,OAAOvR,SACP0R,KAAK,MANH,uDAO0ChK,EAAAA,EAAAA,IAAcF,KAC7DkK,KAAK,KACR,CAlFgBC,CAAY,CACzBV,MAAMW,EAHR,EAAkBA,eAGIzJ,EAAAA,MACpB2I,UAAAA,EACAI,gBAAiBhF,EACjByC,QAAAA,EACAnH,SAAAA,EACAgS,MAAAA,IAGF,OACE,UAAC,IAAD,CAAOvjB,UAAU,WAAWnB,UAAU,kBAAtC,WACE,SAAC,UAAD,CAAkB+D,MAAO,EAAG/D,UAAU,SAAtC,SACGud,GACC,iCACE,SAAC,KAAD,CAAYzb,MAAM,SAACib,GAAA,EAAD,MADpB,KACuC,SAAC,KAAD,CAAW1c,GAAG,eAAYC,GAAG,yBAGpE,iCACE,SAAC,KAAD,CAAYwB,MAAM,SAACkb,GAAA,EAAD,MADpB,KACqC,SAAC,KAAD,CAAW3c,GAAG,YAAYC,GAAG,mBAItE,SAAC,cAAD,CAAsBN,UAAU,SAAhC,SACGud,GACC,SAAC,KAAD,CAAWld,GAAG,+BAA4BC,GAAG,4BAE7C,SAAC,KAAD,CAAWD,GAAG,4CAAsCC,GAAG,6BAI3D,SAAC,IAAD,CAAON,UAAU,gBAAgBia,OAAO,SAAC,KAAD,CAASzY,KAAK,aAAtD,SACG4jB,EAAM9f,KAAI,SAACyV,GAAD,OACT,SAAC,SAAD,UAA6BA,GAAPA,EADb,OAKb,SAACQ,GAAD,CAAuBC,OAAQA,EAAQC,KAAM,MAGlD,CClEM,SAAS0B,KACd,OACE,SAAC,IAAD,WACE,SAAC,KAAD,CACE9c,IACE,iCACE,yDAC4BgT,EAAAA,YAD5B,oCACmF,IAChFA,EAAAA,OAFH,8BAIA,8EAAmDA,EAAAA,OAAnD,6BACA,oGACA,6FACA,8KAE+B,SAACyE,GAAA,EAAD,IAF/B,QAIA,yCACYzE,EAAAA,OADZ,KAC6B,SAACyE,GAAA,EAAD,IAD7B,6BAKJxX,IACE,iCACE,yCACe+S,EAAAA,YADf,8CACgFA,EAAAA,OAAiB,IADjG,sBAIA,uEAA+CA,EAAAA,OAA/C,0BACA,mFACA,iFACA,sJAE2B,SAACyE,GAAA,EAAD,IAF3B,QAIA,sCACYzE,EAAAA,OADZ,KAC6B,SAACyE,GAAA,EAAD,IAD7B,gCAQX,CC7BM,SAAS0N,GAAT,GAA0D,IAA/BxY,EAA8B,EAA9BA,KAChC,EJIK,SAA6BA,GAA6B,IAAD,EDtBnC6M,ECuB3B,EAAyCvB,GAA6B,CACpEuM,UAAW,KACXC,KAAM,GACNjL,SD1ByBA,EC0BH7M,EAAK6M,QDzBtBA,EAAQvU,KAAI,SAACyR,EAAQ7Q,GAAT,MAAoB,CACrC6Q,OAAAA,EACA7Q,MAAAA,EACA+Q,MAAQwN,GAAgB3N,SAAS5Q,GAC7B,CAAC,IAAK,IAAK,IAAK,KAAKue,GAAgBgB,QAAQvf,IAC7C,OACJ6e,OAAQN,GAAgB3N,SAAS5Q,GANhB,KC0BjB0U,QAAS,GACTxD,OAAQ/D,EAAAA,OACR4D,MAAO,GACPyN,MAAO,IAPDzN,EAAR,EAAQA,MAAOuB,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,YAUjBa,EAAuBX,GAAyC,CACtEnE,IAAKnB,EAAAA,gBACLuF,OAAQ5L,EAAK1D,GACbuP,gBAAe,UAAE7L,EAAK+H,cAAP,QAAiB,EAChC+D,aAAcuB,GACdtB,kBAAmB,SAACvU,GAAW,IAAD,EACtB4S,EAAS/D,EAAAA,OAAkB7O,EAAMoW,QAAQjV,OAGzC+f,EAAclhB,EAAMoW,QAAQpW,EAAMoW,QAAQjV,OAAS,GACnDggB,GAAcC,EAAAA,GAAAA,WAAU3O,EAAM4C,SAC9BgM,EAAS7Y,EAAKoY,MAAMxI,KAAK,IAC/B,GAAI8I,EAAa,CACf,IAAMnJ,EAAiBmJ,EAAYpgB,KAAI,SAACwgB,GAAD,OAAOA,EAAE7L,MAAM,GAAf,IAAoB8L,OAC3DJ,EAAYpR,SAAQ,SAACwC,EAAQ7Q,GAQ3B,OAPA6Q,EAAOA,OAASwF,EAAerW,GAEV,SAAjB6Q,EAAOE,OAAoBF,EAAOA,SAAW8O,EAAO3f,KACtD6Q,EAAOE,MAAQ+O,OAAOre,KAAKya,MAAMlc,EAAQ,IACzC6Q,EAAOgO,QAAS,GAGXhO,CACR,GACF,CAED0B,EAAY,CACVrB,OAAAA,EACAwD,QAASpW,EAAMoW,QACff,QAAS8L,EACTjB,MAAK,UAAElgB,EAAMkgB,aAAR,QAAiB,GAEzB,IAhCKpL,mBAwHFiE,EAAQjB,OAAOE,OAAOvF,EAAM4C,SAAS2D,OAAM,SAACtC,GAAD,OAAOA,EAAE6J,MAAT,IAC3CtH,EAASxG,EAAMG,QAAU,EACzBsG,EAAaH,GAASE,EAG5B,EAAgDlE,GAAmBmE,GAA3DhE,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,mBAEzB,MAAO,CACLvC,OAAQH,EAAMG,OACdwD,QAAS3D,EAAM2D,QACff,QAAS5C,EAAM4C,QACfgL,UAAW5N,EAAM4N,UACjBC,KAAM7N,EAAM6N,KACZJ,MAAOzN,EAAMyN,MACbhL,gBAAAA,EACAC,mBAAAA,EACA4D,MAAAA,EACAE,OAAAA,EACAC,WAAAA,EACAuI,aAvGmB,SAAC/f,GAChB+Q,EAAM4N,YAAc3e,EAQA,OAApB+Q,EAAM4N,UAQVrM,GAAS,SAAC9C,GACR,IAAMiQ,GAAcC,EAAAA,GAAAA,WAAU3O,EAAM4C,SAC9BqM,EAAOP,EAAYjQ,EAAKmP,WAQ9B,OAPAc,EAAYjQ,EAAKmP,WAAcc,EAAYzf,GAC3Cyf,EAAYzf,GAASggB,EAErB5M,EAAmB,CACjBoL,MAAOhP,EAAKgP,MAAQ,KAGf,oBACFhP,GADL,IAEEmE,QAAS8L,EACTd,UAAW,KACXC,KAAM,CAACpP,EAAKmP,UAAY3e,GACxBwe,MAAOhP,EAAKgP,MAAQ,GAEvB,IAxBCjM,EAAY,CACVoM,UAAW3e,EACX4e,KAAM,KAVRrM,EAAY,CACVoM,UAAW,KACXC,KAAM,IA+BX,EAqECqB,WAnEiB,WACjB,IAAMN,EAAS7Y,EAAKoY,MAAMxI,KAAK,IAE/BpE,GAAS,SAAC9C,GAER,IAAMiQ,GAAcC,EAAAA,GAAAA,WAAU3O,EAAM4C,SACpC8L,EAAYrgB,KAAI,SAACyR,EAAQ7Q,GAKvB,MAJqB,SAAjB6Q,EAAOE,OAAoBF,EAAOA,SAAW8O,EAAO3f,KACtD6Q,EAAOE,MAAQ+O,OAAOre,KAAKya,MAAMlc,EAAQ,IACzC6Q,EAAOgO,QAAS,GAEXhO,CACR,IAGD,IAAMqP,GAAiBd,EAAAA,GAAAA,OAAMK,EAAa,GAAGrgB,KAAI,SAAC+gB,GAAD,OAAQA,EAAG/gB,KAAI,SAAC4V,GAAD,OAAOA,EAAEnE,MAAT,IAAiB6F,KAAK,GAArC,IAGjDwJ,EAAe7R,SAAQ,SAACwG,EAAMuL,GACxBtZ,EAAKoY,MAAMkB,KAAevL,GAC5BA,EAAKd,MAAM,IAAI1F,SAAQ,SAACqD,EAAGpO,GACzBmc,EAAwB,EAAZW,EAAgB9c,GAAGyN,MAAQ+O,OAAOM,GAC9CX,EAAwB,EAAZW,EAAgB9c,GAAGub,QAAS,CACzC,GAEJ,IAED,IAAMwB,EAAeZ,EAAYnI,OAAM,SAACzG,GAAD,OAAYA,EAAOgO,MAAnB,IAEjCnK,EAAUwL,EAMhB,OALA9M,EAAmB,CACjBsB,QAAQ,GAAD,gBAAM3D,EAAM2D,SAAZ,CAAqBA,IAC5B8J,MAAOhP,EAAKgP,SAGP,oBACFhP,GADL,IAEEkF,QAAQ,GAAD,gBAAMlF,EAAKkF,SAAX,CAAoBA,IAC3Bf,QAAS8L,EACTd,UAAW,KACXC,KAAM,GACN1N,OAAQmP,EAAe7Q,EAAK0B,OAAS1B,EAAK0B,OAAS,GAEtD,GACF,EAyBF,CI/IKoP,CAAoBxZ,GAbtBoK,EADF,EACEA,OACAyN,EAFF,EAEEA,UACAjK,EAHF,EAGEA,QACAf,EAJF,EAIEA,QACAH,EALF,EAKEA,gBACAC,EANF,EAMEA,mBACA4D,EAPF,EAOEA,MACAE,EARF,EAQEA,OACAC,EATF,EASEA,WACAuI,EAVF,EAUEA,aACAE,EAXF,EAWEA,WACArB,EAZF,EAYEA,KACAJ,EAbF,EAaEA,MAGF,OACG,UAAC,IAAD,CAAQ1kB,UAAU,MAAlB,WACC,UAACiV,EAAD,CAAQnT,MAAM,SAAC8c,GAAA,EAAD,IAAd,iBACK,SAAC,KAAD,UAAgBvL,EAAAA,OADrB,KACsDrG,EAAK+H,WAE3D,UAAC,YAAD,YACE,SAACoC,GAAD,CAAMC,OAAQA,EAAQnJ,MAAOoF,EAAAA,OAAiBgE,WAAW,EAAMnU,OAAO,SAAC,GAAD,OAEtE,UAAC,IAAD,CAAOlD,UAAU,kBAAkBmB,UAAU,WAAWC,MAAM,SAA9D,WACE,UAAC,SAAD,CAAiB6b,QAAM,EAACjd,UAAU,kBAAlC,UACGgN,EAAKyZ,QADR,IACkB/B,EAAQ,GAAR,wBAAoBA,OAEtC,SAACC,GAAD,CACE9K,QAASA,EACT+K,kBAAmBqB,EACnBpB,UAAWA,EACXC,KAAMA,EACNlK,QAASA,QAIb,SAAC,IAAD,CAAO5a,UAAU,kBAAkBmB,UAAU,WAAWC,MAAM,SAA9D,SACGsc,GACC,SAAC,KAAD,CAAQ/b,QAAS,kBAAMgY,GAAmB,EAAzB,EAAgCnY,KAAK,UAAUM,MAAM,SAACic,GAAA,EAAD,IAAtE,UACE,SAAC,KAAD,CAAW1d,GAAG,gBAAgBC,GAAG,oBAGnC,SAAC,KAAD,CAAQkB,KAAK,UAAUG,QAASwkB,EAAYlc,SAAUyT,EAAY7b,OAAK,EAAvE,UACE,SAAC,KAAD,CAAWxB,GAAG,SAASC,GAAG,gBAKhC,SAAC,IAAD,CAAON,UAAU,qCAAqCoB,MAAM,SAASD,UAAU,WAA/E,SACGyZ,EAAQtV,KAAI,SAACohB,EAASxgB,GAAV,OACX,SAAC,IAAD,CAAmC+T,OAAO,SAAC,KAAD,CAASzY,KAAK,aAAxD,SACGklB,EAAQphB,KAAI,SAACyV,EAAMvR,GAAP,OACX,iBAAMxJ,UAAU,kBAAhB,SACG+a,GADH,UAA0C2L,EAA1C,YAAqDxgB,EAArD,YAA8D6U,EAA9D,YAAsEvR,GAD3D,KADf,UAAekd,EAAf,YAA0BxgB,GADf,MAWd0U,EAAQjV,OAAS,IAEf,SAAC,IAAD,CAAO3F,UAAU,uCAAuCoB,MAAM,SAA9D,UACC,UAAC,IAAD,CAAMpB,UAAU,YAAYsU,IAAK,GAAIlT,MAAM,SAA3C,WACE,gBAAKpB,UAAU,8FAAf,gBAGA,SAAC,SAAD,WACE,SAAC,KAAD,CACEK,IACE,8IAGE,kBAHF,iEAOFC,IACE,0IAGE,kBAHF,gFAaZ,SAAC,IAAD,CACEwK,OAAO,SAAC,KAAD,CAAWzK,GAAG,YAAYC,GAAG,YACpC0X,KAAM0B,EACNsE,SAAU,kBAAMrE,GAAmB,EAAzB,EACVsE,cAAe,CAAEC,QAAQ,GACzBC,kBAAmB,CAAED,QAAQ,GAL/B,UAOE,SAAC,GAAD,CACElC,UAAS,OAAEhP,QAAF,IAAEA,OAAF,EAAEA,EAAM+H,OACjBwI,MAAOA,EACPE,OAAQA,EACRrG,OAAQA,EACRgO,MAAOpY,EAAKoY,MACZvL,QAASA,EACT6K,MAAOA,WAMlB,CC5HM,SAASiC,KAAuB,IAAD,EAC5BtI,GAAgBC,EAAAA,EAAAA,KAAhBD,YAGF/I,EAAiB9C,GAAkB+C,EAAAA,EAAAA,OAEzC,GAAID,EAAevI,UACjB,OAAO,SAACgJ,EAAD,IAET,IAAMwI,EAAS,OAAGjJ,QAAH,IAAGA,GAAH,UAAGA,EAAgBtI,YAAnB,aAAG,aAElB,OAAIsI,EAAepU,UAAYqd,GACtB,SAAC5I,EAAD,KAGF,SAAC6P,GAAD,CAAiBxY,KAAMuR,EAAWF,YAAaA,GACvD,C,oDCLD,IAAMuI,GAAuC,CAC3Ctd,GAAI,GACJyL,OAAQ,EACR8R,QAAQ,GAGH,SAASC,GAAiB9Z,EAAyBqR,GAAkB,IAAD,EACzE,EAAyC/F,GAA6B,CACpEyO,OAAO3G,EAAAA,GAAAA,YAAWpT,EAAK+Z,MAAO1T,EAAAA,UAC9BkH,SAAU,GACVyM,UAAW,EACXH,QAAQ,EACRI,OAAQ,SALFhQ,EAAR,EAAQA,MAAOuB,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,YAQjBa,EAAuBX,GAAsC,CACnEnE,IAAKnB,EAAAA,gBACLuF,OAAQ5L,EAAK1D,GACbuP,gBAAe,UAAE7L,EAAK+H,cAAP,QAAiB,EAChC+D,aAAc8N,GACd7N,kBAAmB,SAACvU,GACdA,EAAMqiB,QACRpO,EAAY,CACVoO,OAAQriB,EAAMqiB,QAGnB,IAXKvN,mBAcFkG,EAAOvI,EAAM8P,MAAM9P,EAAM+P,WAIzBE,EAAU,mCAAG,WAAOriB,GAAP,sEACboS,EAAM+P,UAAY/P,EAAM8P,MAAMphB,OAAS,GAD1B,yCAER6S,GAAS,SAAC9C,GAAD,gBAAC,WACZA,GADW,IAEd6E,SAAS,GAAD,gBAAM7E,EAAK6E,UAAX,CAAqBpV,KAAK2P,UAAUjQ,KAC5CmiB,UAAWtR,EAAKsR,UAAY,GAHd,KAFD,UASb/P,EAAM+P,YAAc/P,EAAM8P,MAAMphB,OAAS,EAT5B,uBAUf8S,EAAY,CAAEwO,OAAQ,WAVP,UAaT3X,EAAAA,EAAAA,IAAK,KAbI,OAef6X,GAAe,oBACVlQ,GADS,IAEZsD,UAAUqD,EAAAA,EAAAA,IAAiB,GAAD,gBAAK3G,EAAMsD,UAAX,CAAqBpV,KAAK2P,UAAUjQ,MAC9DoiB,OAAQ,YAlBK,2CAAH,sDAuBVG,ECvED,SAA8BxnB,GACnC,IAAQqC,GAAcC,EAAAA,EAAAA,KAAdD,UACAolB,EAAiB1jB,EAAAA,EAAAA,SAAjB0jB,aAEFC,GAAQzmB,EAAAA,GAAAA,GAAY,CACxB0mB,YAAa,CAAC,cACdzmB,WAAW,WAAD,wBAAE,WAAO0mB,GAAP,+FACJzU,EAAAA,GAAAA,IAAc,CAClBvE,OAAQwE,EAAAA,GAAAA,aACRuH,SAAUiN,EACV9U,SAAQ,oBAAE4J,OAAOE,OAAOgL,UAAhB,iBAAE,EAAyB,UAA3B,iBAAE,EAA6BC,cAA/B,iBAAE,EAAqCxN,MAAM,YAA7C,aAAE,EAAkD,UAApD,QAA0D,OAJ1D,mFAAF,mDAAC,GAMXra,UAAW,WACTynB,EAAaxjB,QAAQ,CACnBT,QAASnB,EAAU,+BAAgC,gCACnDkW,UAAW,eAEbvY,GACD,EACD8nB,QAAS,SAACpgB,GACR+f,EAAaM,MAAM,CACjBvkB,QAASnB,EACP,iEACA,6DAEFV,YAAa4D,KAAK2P,UAAUxN,EAAElE,SAC9B+U,UAAW,eAEbtF,QAAQ8U,MAAMrgB,EACf,IAGH,OAAOggB,CACR,CDsCkBM,EAAqB,WACpCtO,EAAmB,CAAEuN,QAAQ,IAC7BpO,EAAY,CAAEoO,QAAQ,EAAMI,OAAQ,QACrC,IAEKE,EAAiB,SAACU,GACtB,IAAMC,EAASD,EAAYtN,SAAS8C,QAAO,SAACC,EAAgCzY,EAASqB,GACnF,GAAIrB,EAAQc,OAAS,GAAI,CACvB,IAAM6Z,EAAOqI,EAAYd,MAAM7gB,GAC/BoX,EAAI,GAAD,OAAIkC,EAAKlW,IAAT,OAAckX,GAAAA,IAAd,OAA0BuH,KAAKC,QAAW,CAC3CnjB,QAAAA,EACA4iB,OAAQjI,EAAKlW,GACbvF,MAAOyb,EAAKzb,MACZkkB,SAAU5J,EAAY/U,GACtB4e,YAAa,EACbnd,KAAMyU,EAAKzU,KAEd,CAED,OAAOuS,CACR,GAAE,CAAC,GAEJ8J,EAASnmB,OAAO6mB,EACjB,EAED,MAAO,CACLK,WAAYlR,EAAM+P,UAAY,EAC9BxH,KAAAA,EACA+D,UAA4B,YAAjBtM,EAAMgQ,OACjBmB,OAAyB,SAAjBnR,EAAMgQ,OACdoB,SAA2B,WAAjBpR,EAAMgQ,QAAuBG,EAASpmB,UAChDsnB,cAAerR,EAAM4P,OACrBxD,QAzDc,kBAAM5K,EAAY,CAAEwO,OAAQ,WAA5B,EA0DdC,WAAAA,EAEH,CEnGD,IAAMlW,GAAWqC,EAAAA,SAAoBA,EAAAA,SAE9B,SAASkV,GAAT,GAAwD,IAAtCrB,EAAqC,EAArCA,WAAYtkB,EAAyB,EAAzBA,SACnC,GAA0B/C,EAAAA,EAAAA,UAAuB,IAAjD,eAAO6G,EAAP,KAAcC,EAAd,KAEQuK,GAAaC,EAAAA,GAAAA,GAAa,CAChCH,SAAUA,GAAW,EACrBI,WAAW,EACXH,SAAU,WACRiW,EAAWxgB,EACZ,IALKwK,SAQR,OACE,UAAC,IAAD,CAAMlR,UAAU,aAAawI,UAAQ,EAAC7F,MAAO,CAAEC,SAAAA,GAA/C,WACE,SAAC,MAAD,CAAU4B,MAAO0M,EAAW,EAAGjD,MAAO+C,GAAUhR,UAAU,qBACzDkR,EAAW,KACV,SAAC,MAAD,CACExK,MAAOA,EACP1G,WAAW2P,EAAAA,EAAAA,IAAkB,SAAU,CAAEE,MAAO,WAChDlJ,SAAUA,EACV3B,YAAY,QACZrC,MAAO,CACL2e,UAAU,SAAD,OAAW1e,EAAW,IAAtB,KACT4lB,gBAAiB,kBAM5B,CCvCM,SAASrL,KACd,OACE,UAAC,IAAD,YACE,SAACmF,GAAD,KACA,SAAC,KAAD,CACEjiB,IACE,iCACE,mEACA,iGACA,oHACA,wGACA,0CAGJC,IACE,iCACE,0DACA,qFACA,0GACA,yGACA,8CAMX,C,gBCFM,SAASmoB,GAAT,GAAiE,IAAzCzb,EAAwC,EAAxCA,KAC7B,EACE8Z,GAAiB9Z,EAFkD,EAAlCqR,aAC3B8J,EAAR,EAAQA,WAAY3I,EAApB,EAAoBA,KAAM0H,EAA1B,EAA0BA,WAAY3D,EAAtC,EAAsCA,UAAW6E,EAAjD,EAAiDA,OAAQC,EAAzD,EAAyDA,SAAUC,EAAnE,EAAmEA,cAAejF,EAAlF,EAAkFA,QAIlF,GAAqCI,EAAAA,GAAAA,KAArC,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAmCF,EAAAA,GAAAA,KAAnC,eAAOG,EAAP,KAAkBC,EAAlB,KACMjhB,GAAWkY,EAAAA,EAAAA,UAAQ,WACvB,IAAMhW,EAAQ6e,EAAe7e,MAAQ,GAC/BC,EAAS4e,EAAe5e,OAAS8e,EAAc9e,OAAS,GAC9D,OAAO4C,KAAKjD,IAAIiD,KAAKlD,IAAIK,EAAOC,EAAQ,KAAM,IAC/C,GAAE,CAAC4e,EAAe5e,OAAQ4e,EAAe7e,MAAO+e,EAAc9e,SAE/D,OACE,UAAC,IAAD,CAAQ/E,UAAU,MAAlB,WACE,UAACiV,EAAD,CAAQnT,MAAM,SAACob,GAAA,EAAD,IAAd,iBACK,SAAC,KAAD,UAAgB7J,EAAAA,OADrB,KACsDrG,EAAK+H,WAE3D,UAAC,YAAD,CAAgBgP,IAAKL,EAArB,WACE,iBAAKK,IAAKH,EAAV,WACE,SAACzM,GAAD,CAAMC,OAAQ,EAAGnJ,MAAO,EAAGoJ,WAAS,EAACnU,OAAO,SAAC,GAAD,MAC3ColB,IACC,UAAC,MAAD,CAAatoB,UAAU,cAAvB,WACE,SAAC,KAAD,CAAY8B,MAAM,SAAC4mB,GAAA,EAAD,OAClB,SAAC,KAAD,CAAWroB,GAAG,4BAAsBC,GAAG,kCACvC,SAAC,KAAD,CAAWD,GAAG,wCAAqCC,GAAG,uCACtD,SAAC,KAAD,KACA,SAAC,MAAD,CAAM0R,GAAG,UAAT,UACE,SAAC,KAAD,CAAW3R,GAAG,qBAAqBC,GAAG,8BAK1CgoB,IAAkBD,IAClB,SAAC,IAAD,CAAOroB,UAAU,kBAAjB,UACE,SAAC,KAAD,CAEEqL,OAAQkY,EAAS,WAAO4E,GAAe,IACvC5c,MAAM,OACNvL,UAAYujB,GAA0B5T,EAAAA,EAAAA,IAAkB,QAAhC,YAJ1B,SAMI4T,EAMA/D,EAAKzU,MALL,2IANGwY,EAAY/D,EAAKlW,GAAK,aAkBlCia,IACC,SAAC,IAAD,CAAOvjB,UAAU,kBAAjB,UACE,SAACuoB,GAAD,CAAsB3lB,SAAUA,EAAUskB,WAAYA,GAAzC1H,EAAKlW,MAIrB+e,IACC,UAAC,MAAD,CAAaroB,UAAU,cAAvB,WACE,SAAC,KAAD,CAAY8B,MAAM,SAAC6mB,GAAA,EAAD,OAClB,SAAC,KAAD,CAAWtoB,GAAG,WAAWC,GAAG,cAI/B8nB,IAAWE,IACV,SAAC,IAAD,CAAOtoB,UAAU,kBAAjB,UACE,UAAC,IAAD,CAAOmB,UAAU,WAAWnB,UAAU,kBAAtC,WACE,SAAC,MAAD,CAAa4N,WAAS,EAAtB,UACE,SAAC,KAAD,CACEvN,IACE,gDACW,SAACgM,GAAA,EAAD,UAAgBgH,EAAAA,SAAoBA,EAAAA,WAD/C,oCAE0BA,EAAAA,SAF1B,cAGE,kBAHF,YAIO,uCAJP,oCAKE,kBALF,8DAQF/S,IACE,6CACW,SAAC+L,GAAA,EAAD,UAAgBgH,EAAAA,SAAoBA,EAAAA,WAD/C,gCAEuBA,EAAAA,SAFvB,cAGE,kBAHF,QAIM,uCAJN,4BAKE,kBALF,wDAWN,SAAC,KAAD,CAAQ7R,KAAK,UAAUE,KAAK,QAAQC,QAAS0hB,EAASpZ,SAAUqe,EAAhE,SACGD,GAAW,SAAC,KAAD,CAAWhoB,GAAG,WAAWC,GAAG,YAAc,SAAC,KAAD,CAAWD,GAAG,aAAUC,GAAG,sBAQhG,CCxHM,SAASsoB,KAAoB,IAAD,EACzBvK,GAAgBC,EAAAA,EAAAA,KAAhBD,YACF5L,GAAQ8C,EAAAA,EAAAA,MAGRD,EAAiB9C,EAAkB,GAAD,OAAIC,IAE5C,GAAI6C,EAAevI,UACjB,OAAO,SAACgJ,EAAD,IAGT,IAAMwI,EAAS,OAAGjJ,QAAH,IAAGA,GAAH,UAAGA,EAAgBtI,YAAnB,aAAG,UAElB,OAAIsI,EAAepU,UAAYqd,GACtB,SAAC5I,EAAD,KAGF,SAAC8S,GAAD,CAAczb,KAAMuR,EAAWF,YAAaA,GACpD,CCvBM,SAASzE,GAAiB7O,EAAc8d,GAC7C,IAIMhP,EAJgB9O,EACnB+O,UAAU,OACVC,QAAQ,mBAAoB,IAC5BC,cAC2BC,MAAM,IAC9BC,EAAmC,CAAC,EAa1C,OAXAL,EAAQtF,SAAQ,SAACwC,GACX8R,EACE9R,EAAOxM,MAAM,iBACf2P,EAAcnD,IAAU,GAGtBA,EAAOxM,MAAM,cACf2P,EAAcnD,IAAU,EAG7B,IACMmD,CACR,CAQM,SAASC,GAAcC,GAC5B,OAAOA,EACJN,UAAU,OACVC,QAAQ,mBAAoB,IAC5BC,aACJ,CCtBD,IAAM8O,GAA8C,CAClDxf,GAAI,GACJuQ,QAAS,GACT9E,OAAQ,GCNH,SAAS4F,GAAT,GAAiD,IAA/B5P,EAA8B,EAA9BA,KAAM6P,EAAwB,EAAxBA,QACvBC,GAASC,EAAAA,EAAAA,UAAQ,kBAAM/P,EAAKkP,MAAM,KAAK3U,KAAI,SAACyV,GAAD,OAAUA,EAAKd,MAAM,GAArB,GAA1B,GAAqD,CAAClP,IAC7E,OACE,SAAC,IAAD,CAAO/K,UAAU,SAASgb,MAAI,EAAC5Z,MAAM,SAArC,SACGyZ,EAAOvV,KAAI,SAACyV,EAAMvR,EAAGyR,GACpB,OACE,UAAC,IAAD,CAAyBjb,UAAU,cAAcgb,MAAI,EAAC5Z,MAAM,SAA5D,UACG2Z,EAAKzV,KAAI,SAAC4V,EAAGC,GAAO,IAAD,EF0BPf,EEzBLrD,EAASoD,GAAce,GACvBE,EAAyC,aAAtB,OAAPR,QAAO,IAAPA,GAAA,UAAAA,EAAU7D,UAAV,eAAmBE,OAC/BzC,EAAG,UAAM2G,EAAN,YAAWD,EAAX,YAAgB1R,GACzB,OFsBW4Q,EEtBErD,IAAQ,EFwBqB,OAA7CoD,GAAcC,GAAM7P,MAAM,eAEc,OAA1C4P,GAAcC,GAAM7P,MAAM,aEzBZ6Q,GACL,SAAC,KAAD,CAAkBpb,UAAU,iBAAiBqb,MAAM,SAAnD,SACGH,GADU1G,IAIb,SAAC,KAAD,CAAsB1S,MAAM,SAACwZ,GAAA,EAAD,IAAkBtb,UAAU,gBAAvCwU,IAKnB,SAAC,KAAD,CAAkB6G,MAAM,SAAxB,SACGH,GADU1G,EAIhB,IACAhL,EAAI,EAAIyR,EAAEtV,SAAU,SAAC,KAAD,CAAQ0V,MAAM,aArBrC,eAAoB7R,GAwBvB,KAGN,CC1BM,SAASuS,GAAT,GAAoG,IAArEhR,EAAoE,EAApEA,KAAMiR,EAA8D,EAA9DA,UAAWC,EAAmD,EAAnDA,IAAK7E,EAA8C,EAA9CA,OAAQ8E,EAAsC,EAAtCA,SAClE,GAAoCha,EAAAA,EAAAA,KAA5BwQ,EAAR,EAAQA,SAEF8I,EAsCR,YAYI,IAXFW,EAWC,EAXDA,KACAH,EAUC,EAVDA,UACAI,EASC,EATDA,gBACAF,EAQC,EARDA,SACAxJ,EAOC,EAPDA,SAQM2J,EAAeC,OAAOxI,KAAKoI,GAAUvW,OACrC4W,EAAiBD,OAAOE,OAAON,GAAUO,OAAOvR,SAASvF,OAE/D,MAAO,CAAC,gBAAD,QACC+W,EAAAA,EAAAA,IAAahK,GADd,YAC2ByJ,EAD3B,aACoCH,GADpC,WAEFW,EAAAA,EAAAA,IAAuBP,EAAiB/I,EAAAA,QAFtC,aAE2D1L,KAAKC,MAAO2U,EAAiBF,EAAgB,KAFxG,6DAG0CzJ,EAAAA,EAAAA,IAAcF,KAC7DkK,KAAK,KACR,CA3DgBC,CAAY,CACzBV,MAAMW,EAHR,EAAkBA,eAGIzJ,EAAAA,MACpB2I,UAAAA,EACAI,gBAAiBhF,EACjB8E,SAAAA,EACAxJ,SAAAA,IAGF,OACE,UAAC,IAAD,CAAOvR,UAAU,WAAWnB,UAAU,kBAAtC,WACE,SAAC,UAAD,CAAkB+D,MAAO,EAAG/D,UAAU,SAAtC,SACGic,GACC,iCACE,SAAC,KAAD,CAAYna,MAAM,SAACib,GAAA,EAAD,MADpB,KACuC,SAAC,KAAD,CAAW1c,GAAG,eAAYC,GAAG,yBAGpE,iCACE,SAAC,KAAD,CAAYwB,MAAM,SAACkb,GAAA,EAAD,MADpB,KACqC,SAAC,KAAD,CAAW3c,GAAG,YAAYC,GAAG,mBAItE,SAAC,cAAD,CAAsBN,UAAU,SAAhC,SACGic,GACC,SAAC,KAAD,CAAW5b,GAAG,2BAAwBC,GAAG,4BAEzC,SAAC,KAAD,CAAWD,GAAG,yBAAsBC,GAAG,6BAI3C,SAAC,MAAD,CAAeN,UAAU,gBAAzB,UACE,SAAC,cAAD,CAAsBA,UAAU,cAAhC,SAA+C+K,OAGjD,SAACwQ,GAAD,CAAuBC,OAAQA,EAAQC,KAAM,MAGlD,CCtDM,SAAS0B,KACd,OACE,UAAC,IAAD,YACE,SAACmF,GAAD,KACA,SAAC,KAAD,CACEjiB,IACE,iCACE,qGACA,wIAGA,qHACA,mJAEI,SAACyX,GAAA,EAAD,IAFJ,QAIA,0CAGJxX,IACE,iCACE,mGACA,iHACA,wGACA,wHAC8F,KAC5F,SAACwX,GAAA,EAAD,IAFF,QAIA,8CAMX,CCfM,SAASiR,GAAT,GAAoD,IAA5B/b,EAA2B,EAA3BA,KAC7B,EJHK,SAA0BA,GAA0B,IAAD,EACxD,EAAyCsL,GAA6B,CACpE4D,SAAUtC,GAAiB5M,EAAKlC,OAAO,GACvCsM,OAAQ/D,EAAAA,OACRuH,QAAS,CAAC,IAHJ3D,EAAR,EAAQA,MAAOuB,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,YAMzB,EAA2CE,GAAsC,CAC/EnE,IAAKnB,EAAAA,gBACLuF,OAAQ5L,EAAK1D,GACbuP,gBAAe,UAAE7L,EAAK+H,cAAP,QAAiB,EAChC+D,aAAcgQ,GACd/P,kBAAmB,SAACvU,GAClB,IAAI4S,EAAS/D,EAAAA,OACT6I,GAAQ,WAAQjF,EAAMiF,UACpBtB,EAAUpW,EAAMqV,QAAQwD,QAAO,SAACC,EAAwBvG,GAC5D,IAAMqE,OAAuCtK,IAA3BmG,EAAMiF,SAASnF,GAUjC,YAT+BjG,IAA3BmG,EAAMiF,SAASnF,KACjBmF,GAAQ,oBAAQA,GAAR,cAAmBnF,GAAS,KAEtCuG,EAAIvG,GAAU,CACZA,OAAQA,EACRE,MAAOmE,EAAY,UAAY,YAC/BnR,UAAU,GAEZmN,EAASgE,EAAYhE,EAASA,EAAS,EAChCkG,CACR,GAAE,CAAC,GAEJ7E,EAAY,CACVmC,QAAAA,EACAxD,OAAAA,EACA8E,SAAAA,GAEH,IA3BKjD,EAAR,EAAQA,WAAYK,EAApB,EAAoBA,mBAgEdiE,EAAQjB,OAAOE,OAAOvF,EAAMiF,UAC/BO,QAAO,SAACjY,GAAD,YAAqBsM,IAAVtM,CAAX,IACPgZ,MAAMtS,SACHuS,EAASxG,EAAMG,QAAU,EACzBsG,EAAaH,GAASE,EAG5B,EAAgDlE,GAAmBgE,GAASE,GAAUC,GAA9EhE,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,mBAEzB,MAAO,CACLvC,OAAQH,EAAMG,OACdwD,QAAS3D,EAAM2D,QACfsB,SAAUjF,EAAMiF,SAChBxC,gBAAAA,EACAC,mBAAAA,EACA4D,MAAAA,EACAE,OAAAA,EACAC,WAAAA,EACAC,YAnDkB,SAAC5G,GAAoB,IAAD,EAEtC,IAAIE,EAAM2D,QAAQ7D,GAAlB,CAIA,IAAMqE,OAAuCtK,IAA3BmG,EAAMiF,SAASnF,GAEjCuC,EAAmB,CACjBO,SAAS+D,EAAAA,EAAAA,IAAiB,GAAD,iCAAM3E,QAAN,IAAMA,OAAN,EAAMA,EAAYY,eAAlB,QAA6B,IAA7B,CAAkC9C,OAG7D,IAAMmF,GAAQ,WAAQjF,EAAMiF,UACxBd,IACFc,EAASnF,IAAU,GAGrByB,GAAS,SAAC9C,GAAD,gBAAC,WACLA,GADI,IAEPkF,SAAQ,oBACHlF,EAAKkF,SADH,cAEJ7D,EAAS,CACRA,OAAQA,EACRE,MAAOmE,EAAY,UAAY,YAC/BnR,UAAU,KAGdiS,SAAAA,EACA9E,OAAQgE,EAAY1F,EAAK0B,OAAS1B,EAAK0B,OAAS,GAXzC,GAbR,CA0BF,EAuBF,CIvFG4R,CAAiBhc,GADXoK,EAAR,EAAQA,OAAQwD,EAAhB,EAAgBA,QAASlB,EAAzB,EAAyBA,gBAAiBC,EAA1C,EAA0CA,mBAAoB4D,EAA9D,EAA8DA,MAAOG,EAArE,EAAqEA,WAAYC,EAAjF,EAAiFA,YAAazB,EAA9F,EAA8FA,SAExFpX,GAAQ6R,EAAAA,EAAAA,GAAa,EAAG,CAAEX,OAAQ,GAAIpT,SAAU,IAAK4X,SAAU,KAErE,OACE,UAAC,IAAD,CAAQxa,UAAU,MAAlB,WACE,UAACiV,EAAD,CAAQnT,MAAM,SAAC6c,GAAA,EAAD,IAAd,iBACK,SAAC,KAAD,UAAgBtL,EAAAA,OADrB,KACsDrG,EAAK+H,WAE3D,UAAC,YAAD,YACE,SAACoC,GAAD,CACEC,OAAQA,EACRnJ,MAAOoF,EAAAA,OACPgE,WAAYqG,GAActG,IAAW/D,EAAAA,OACrCnQ,OAAO,SAAC,GAAD,OAGT,SAAC,IAAD,CAAOlD,UAAU,kBAAkBmB,UAAU,WAAWC,MAAM,SAA9D,UACE,UAAC,SAAD,CAAiB6b,QAAM,EAAvB,WACE,SAAC,KAAD,CAAW5c,GAAG,uBAAoBC,GAAG,iBADvC,KAC2D0M,EAAKic,WAIlE,SAAC,IAAD,CAAOjpB,UAAU,kBAAkBgb,MAAI,EAAvC,SACGhO,EAAKsS,SAASha,KAAI,SAACoF,EAAQxE,GAAT,OACjB,SAAC2E,GAAA,EAAD,CAAqCvB,GAAIoB,EAAQ5F,MAAOA,GAAxD,UAAkB4F,EAAlB,YAA4BxE,GADX,OAKrB,SAAC,GAAD,CAAQ6E,KAAMiC,EAAKlC,MAAO8P,QAASA,IAElC8C,IACC,SAAC,IAAD,CAAO1d,UAAU,oBAAoBmB,UAAU,WAAWC,MAAM,SAAhE,UACE,SAAC,KAAD,CAAQO,QAAS,kBAAMgY,GAAmB,EAAzB,EAAgCnY,KAAK,UAAUM,MAAM,SAACic,GAAA,EAAD,IAAtE,UACE,SAAC,KAAD,CAAW1d,GAAG,gBAAgBC,GAAG,sBAIvC,SAAC,IAAD,CACEwK,OAAO,SAAC,KAAD,CAAWzK,GAAG,YAAYC,GAAG,YACpC0X,KAAM0B,EACNsE,SAAU,kBAAMrE,GAAmB,EAAzB,EACVsE,cAAe,CAAEC,QAAQ,GACzBC,kBAAmB,CAAED,QAAQ,GAL/B,UAOE,SAAC,GAAD,CACElC,UAAWhP,EAAK+H,OAChBkH,IAAKsB,EACLnG,OAAQA,EACRrM,KAAMiC,EAAKlC,MACXoR,SAAUA,OAId,SAAC7F,GAAD,CAAUC,aAAcsE,EAASrE,cAAeoH,EAAa1T,SAAUyT,EAAYhH,aAAW,SAIrG,CCzEM,SAASwS,KAAoB,IAAD,EACzB7K,GAAgBC,EAAAA,EAAAA,KAAhBD,YACF5L,GAAQ8C,EAAAA,EAAAA,MAGRD,EAAiB9C,EAAkB,GAAD,OAAIC,IAE5C,GAAI6C,EAAevI,UACjB,OAAO,SAACgJ,EAAD,IAGT,IAAMwI,EAAS,OAAGjJ,QAAH,IAAGA,GAAH,UAAGA,EAAgBtI,YAAnB,aAAG,UAElB,OAAIsI,EAAepU,UAAYqd,GACtB,SAAC5I,EAAD,KAGF,SAACoT,GAAD,CAAc/b,KAAMuR,EAAWF,YAAaA,GACpD,CCwBD,OAnCA,WAAsB,IAAD,MACX8K,GAAoB7K,EAAAA,EAAAA,KAApB6K,gBACAC,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAAkClnB,EAAAA,EAAAA,KAA1BonB,EAAR,EAAQA,YAAa5W,EAArB,EAAqBA,UAErB6W,EAAAA,EAAAA,IAAc,WACZD,EAAYF,EAAStS,SAAS,UAAY,KAAO,KAClD,IAED,IAAM0S,EAAO,UAAGJ,EAASnP,MAAM,YAAlB,aAAG,EAAsB,GAItC,IAFAwP,EAAAA,EAAAA,GAAS,GAAD,QAAI/M,EAAAA,EAAAA,IAAahK,GAAjB,wBAEHyW,EACH,OACE,SAAC9T,EAAD,WACE,SAACqU,EAAA,EAAD,CAAYP,iBAAiB,MAKnC,IAAMQ,EAAM,oBACV,CACE,GAAInL,GACJ,SAAUyF,GACV,YAAa7F,GACbwL,IAAKpL,GACLqL,WAAYlD,GACZmD,QAASlB,GACTmB,QAASb,WARD,aACV,EAQIM,UATM,QASMhL,GAElB,OAAO,SAACmL,EAAD,GACR,C,mHCtCM,SAASD,EAAT,GAA2D,IAArCP,EAAoC,EAApCA,gBAC3B,OACE,SAAC,IAAD,CACEnR,MAAOmR,EACPre,OAAO,SAAC,KAAD,CAAWzK,GAAG,QAAQC,GAAG,UAChC0pB,YAAY,SAAC,KAAD,CAAW3pB,GAAG,WAAWC,GAAG,WACxC0d,SAAUiM,EAAAA,GACVhM,cAAe,CACbtb,MAAO,CAAEuK,QAAS,SAEpBiR,kBAAmB,CACjBxb,MAAO,CAAEuK,QAAS,SAEpBgd,UAAU,EAXZ,UAaE,SAAC,IAAD,CAAQtqB,UAAWqqB,EAAAA,MAGxB,C","sources":["components/auth/SignIn.tsx","components/canvas/CanvasResizer.tsx","components/canvas/CanvasSVG.tsx","components/canvas/DrawingCanvas.tsx","components/cards/ItemCard.tsx","components/cards/Card.tsx","components/metrics/MetricHighlight.tsx","components/metrics/TimeHighlight.tsx","components/sprites/Sprite.tsx","components/text/Instruction.tsx","components/text/RoundsLeftInstruction.tsx","components/text/TextHighlight.tsx","components/text/Title.tsx","components/text/RuleInstruction.tsx","components/timers/TimerClock.tsx","components/timers/TimerBar.tsx","components/timers/TimedTimerBar.tsx","components/timers/TimedTimerClock.tsx","components/timers/WaitingTime.tsx","hooks/useTDBaseUrl.ts","icons/AnimatedClockIcon.tsx","icons/ApplauseIcon.tsx","icons/ClockIcon.tsx","icons/GoogleIcon.tsx","icons/SkullIcon.tsx","pages/Daily/hooks/useDailyChallenge.ts","pages/Daily/games/AquiO/utils/settings.ts","pages/Daily/games/ArteRuim/utils/settings.ts","pages/Daily/games/Artista/utils/settings.ts","pages/Daily/games/Palavreado/utils/settings.ts","pages/Daily/games/Filmaco/utils/settings.ts","pages/Daily/components/DevResetLocalStorageButton.tsx","pages/Daily/components/Header.tsx","pages/Daily/components/DailyChrome.tsx","pages/Daily/components/DailyError.tsx","pages/Daily/components/DailyLoading.tsx","pages/Daily/components/Keyboard.tsx","pages/Daily/components/Menu.tsx","pages/Daily/hooks/useDailyGameState.ts","pages/Daily/hooks/useDailyLocalToday.ts","pages/Daily/hooks/useShowResultModal.ts","pages/Daily/games/ArteRuim/utils/helpers.ts","pages/Daily/games/ArteRuim/utils/useArteRuimEngine.ts","pages/Daily/games/ArteRuim/components/DrawingCarousel.tsx","pages/Daily/games/ArteRuim/components/Prompt.tsx","pages/Daily/components/CopyToClipboardResult.tsx","pages/Daily/games/ArteRuim/components/ResultsModalContent.tsx","pages/Daily/games/ArteRuim/components/Rules.tsx","pages/Daily/games/ArteRuim/components/DailyArteRuim.tsx","pages/Daily/games/ArteRuim/DailyArteRuimGame.tsx","pages/Daily/games/Hub.tsx","pages/Daily/games/AquiO/data/useRandomAquiOChallenge.ts","pages/Daily/games/AquiO/utils/helpers.ts","pages/Daily/games/AquiO/utils/useAquiOEngine.ts","pages/Daily/games/AquiO/components/Disc.tsx","pages/Daily/games/AquiO/components/PreloadItems.tsx","pages/Daily/games/AquiO/components/ResultsModalContent.tsx","pages/Daily/components/BetaBanner.tsx","pages/Daily/games/AquiO/components/Rules.tsx","pages/Daily/games/AquiO/components/DailyAquiO.tsx","pages/Daily/games/AquiO/DailyAquiOGame.tsx","pages/Daily/games/Palavreado/utils/helpers.ts","pages/Daily/games/Palavreado/utils/usePalavreadoEngine.ts","pages/Daily/games/Palavreado/components/Board.tsx","pages/Daily/games/Palavreado/components/ResultsModalContent.tsx","pages/Daily/games/Palavreado/components/Rules.tsx","pages/Daily/games/Palavreado/components/DailyPalavreado.tsx","pages/Daily/games/Palavreado/DailyPalavreadoGame.tsx","pages/Daily/games/Artista/utils/useArtistaEngine.ts","pages/Daily/hooks/useDailySaveDrawings.ts","pages/Daily/games/Artista/components/Canvas.tsx","pages/Daily/games/Artista/components/Rules.tsx","pages/Daily/games/Artista/components/DailyArtista.tsx","pages/Daily/games/Artista/DailyArtistaGame.tsx","pages/Daily/games/Filmaco/utils/helpers.ts","pages/Daily/games/Filmaco/utils/useFilmacoEngine.ts","pages/Daily/games/Filmaco/components/Prompt.tsx","pages/Daily/games/Filmaco/components/ResultsModalContent.tsx","pages/Daily/games/Filmaco/components/Rules.tsx","pages/Daily/games/Filmaco/components/DailyFilmaco.tsx","pages/Daily/games/Filmaco/DailyFilmacoGame.tsx","pages/Daily/Daily.tsx","pages/Me/components/LoginModal.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { useMutation } from '@tanstack/react-query';\n// Ant Design Resources\nimport { Button, Form, Input, Alert, Image, App, Switch, Space, ButtonProps } from 'antd';\n// API\nimport { resetPassword, signIn, signInWithGoogle } from 'services/firebase';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Image\nimport logo from 'assets/images/tarde-divertida-logo.svg';\nimport { Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { UserCredential } from 'firebase/auth';\nimport { IconAvatar } from 'components/avatars';\nimport { GoogleIcon } from 'icons/GoogleIcon';\n\ntype SignInProps = {\n  onSuccess: GenericFunction;\n};\n\nexport function SignIn({ onSuccess }: SignInProps) {\n  const [view, setView] = useState('google');\n\n  return (\n    <div className=\"sign-in\">\n      <div className=\"sign-in__logo\">\n        <Image src={logo} preview={false} />\n      </div>\n\n      <Space className=\"space-container\">\n        <Switch\n          checkedChildren={<Translate pt=\"E-mail e senha\" en=\"Email and Password\" />}\n          unCheckedChildren=\"Google\"\n          onChange={(checked) => setView(checked ? 'email' : 'google')}\n        />\n      </Space>\n\n      {view === 'google' ? (\n        <SignInWithGoogle onSuccess={onSuccess} />\n      ) : (\n        <SignInWithEmail onSuccess={onSuccess} />\n      )}\n    </div>\n  );\n}\n\nexport function SignInWithGoogle({ onSuccess, ...buttonProps }: SignInProps & ButtonProps) {\n  const { isPending, mutate, isError } = useMutation<UserCredential, Error, void, unknown>({\n    mutationFn: async () => await signInWithGoogle(),\n    onSuccess,\n  });\n\n  const onFinish = () => {\n    mutate();\n  };\n\n  return (\n    <Space\n      className=\"space-container\"\n      direction=\"vertical\"\n      align=\"center\"\n      classNames={{ item: 'full-width' }}\n    >\n      <>\n        {isError && (\n          <Alert\n            description={\n              <Translate pt=\"Algo deu errado, tente novamente\" en=\"Something went wrong. Please try again\" />\n            }\n            type=\"error\"\n            showIcon\n            className=\"sign-in__error-alert\"\n          />\n        )}\n        <Button\n          type=\"primary\"\n          size=\"large\"\n          onClick={onFinish}\n          loading={isPending}\n          block\n          icon={<IconAvatar icon={<GoogleIcon />} size=\"small\" />}\n          {...buttonProps}\n        >\n          <Translate pt=\"Entrar com Google\" en=\"Sign in with Google\" />\n        </Button>\n      </>\n    </Space>\n  );\n}\n\nfunction SignInWithEmail({ onSuccess }: SignInProps) {\n  const [form] = Form.useForm();\n  const { translate } = useLanguage();\n  const [showForgotPassword, setShowForgotPassword] = useState(false);\n\n  const { isPending, mutate, isError } = useMutation<UserCredential, Error, void, unknown>({\n    mutationFn: async () => await signIn(form.getFieldValue('username'), form.getFieldValue('password')),\n    onSuccess,\n  });\n\n  const onFinish = () => {\n    mutate();\n  };\n\n  return (\n    <>\n      <Form\n        name=\"login\"\n        form={form}\n        labelCol={{ span: 8 }}\n        wrapperCol={{ span: 16 }}\n        style={{ maxWidth: 600 }}\n        initialValues={{ remember: true }}\n        onFinish={onFinish}\n        autoComplete=\"off\"\n      >\n        <Form.Item\n          label={<Translate pt=\"E-mail\" en=\"E-mail\" />}\n          name=\"username\"\n          rules={[\n            { required: true, message: translate('e-mail é um campo obrigatório', 'e-mail is required') },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label={<Translate pt=\"Senha\" en=\"Password\" />}\n          name=\"password\"\n          rules={[\n            { required: true, message: translate('e-mail é um campo obrigatório', 'e-mail is required') },\n          ]}\n          help={translate('Mínimo 6 caracteres', 'Minimum of 6 characters')}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        {isError && (\n          <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n            <Alert\n              description={\n                <Translate\n                  pt=\"Algo deu errado, tente novamente\"\n                  en=\"Something went wrong. Please try again\"\n                />\n              }\n              type=\"error\"\n              showIcon\n              className=\"sign-in__error-alert\"\n            />\n          </Form.Item>\n        )}\n\n        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n          <Button type=\"primary\" htmlType=\"submit\" loading={isPending}>\n            <Translate pt=\"Entrar\" en=\"Submit\" />\n          </Button>\n\n          <Button type=\"link\" onClick={() => setShowForgotPassword((v) => !v)}>\n            <Translate pt=\"Esqueci minha senha\" en=\"Forgot my password\" />\n          </Button>\n        </Form.Item>\n      </Form>\n      {showForgotPassword && (\n        <Alert\n          type=\"info\"\n          message={\n            <ResetPasswordForm\n              email={form.getFieldValue('username')}\n              onSuccess={() => setShowForgotPassword(false)}\n            />\n          }\n        />\n      )}\n    </>\n  );\n}\n\ntype ResetPasswordFormProps = {\n  email?: string;\n  onSuccess: GenericFunction;\n};\n\nfunction ResetPasswordForm({ email, onSuccess }: ResetPasswordFormProps) {\n  const { message } = App.useApp();\n  const [form] = Form.useForm();\n  const { translate } = useLanguage();\n\n  const { isPending, mutate, isError } = useMutation({\n    mutationFn: async () => await resetPassword(form.getFieldValue('username')),\n    onSuccess: () => {\n      onSuccess();\n      message.success(\n        translate(\n          'Verifique seu e-mail enviado para redefinir a sua senha',\n          'Verify your email to reset your password'\n        )\n      );\n    },\n  });\n\n  const onFinish = () => {\n    mutate();\n  };\n\n  return (\n    <Form\n      name=\"forgot-password\"\n      form={form}\n      labelCol={{ span: 8 }}\n      wrapperCol={{ span: 16 }}\n      style={{ maxWidth: 600 }}\n      initialValues={{ username: email, remember: true }}\n      onFinish={onFinish}\n      autoComplete=\"off\"\n    >\n      <Form.Item>\n        <Title level={4} size=\"xx-small\">\n          <Translate pt=\"Redefinir a senha\" en=\"Password Reset\" />\n        </Title>\n      </Form.Item>\n      <Form.Item\n        label={<Translate pt=\"E-mail\" en=\"E-mail\" />}\n        name=\"username\"\n        rules={[\n          { required: true, message: translate('e-mail é um campo obrigatório', 'e-mail is required') },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      {isError && (\n        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n          <Alert\n            description={\n              <Translate\n                pt=\"Algo deu errado, provavelmente este e-mail não existe no banco de dados da Tarde Divertida\"\n                en=\"Something went wrong. Please try again\"\n              />\n            }\n            type=\"error\"\n            showIcon\n            className=\"sign-in__error-alert\"\n          />\n        </Form.Item>\n      )}\n\n      <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n        <Button type=\"primary\" htmlType=\"submit\" loading={isPending}>\n          <Translate pt=\"Enviar\" en=\"Submit\" />\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n","// Ant Design Resources\nimport { Slider } from 'antd';\nimport { DragOutlined } from '@ant-design/icons';\n// State & Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\n// Components\nimport { FixedMenuButton } from 'components/buttons';\nimport { Translate } from 'components/language';\n\n/**\n * Fixed Menu Button for resizing canvas\n */\nexport const CanvasResizer = () => {\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n\n  return (\n    <FixedMenuButton\n      type=\"popover\"\n      position={1}\n      icon={<DragOutlined />}\n      label={labelText}\n      content={\n        <div className=\"canvas-resizer\">\n          <div className=\"canvas-resizer__label\">{labelText}</div>\n          <Slider\n            className=\"canvas-resizer__slider\"\n            value={canvasSize ?? 100}\n            min={150}\n            max={500}\n            step={50}\n            onChange={setCanvasSize}\n          />\n        </div>\n      }\n    />\n  );\n};\n\nconst labelText = <Translate pt=\"Tamanho das Artes\" en=\"Art Size\" />;\n","/**\n * Builds paths from canvas lines\n * @param lines\n * @returns\n */\nconst getPathFromKonvaLines = (lines: CanvasLine[]) => {\n  const result = lines.map((lineArr) => {\n    let path = '';\n    for (let x = 0, y = 1; y < lineArr.length; x += 2, y += 2) {\n      if (lineArr[x + 2] && lineArr[y + 2]) {\n        path += `M${lineArr[x]},${lineArr[y]} L${lineArr[x + 2]},${lineArr[y + 2]}`;\n      }\n    }\n\n    return path;\n  });\n\n  return result;\n};\n\ntype CanvasSVGProps = {\n  /**\n   * The stringified svg path\n   */\n  drawing: string;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * The width of the canvas (default: 500)\n   */\n  width?: number;\n  /**\n   * The height of the canvas (default: 500)\n   */\n  height?: number;\n  /**\n   * Size of the stroke. Default: medium\n   */\n  strokeWidth?: 'small' | 'medium' | 'large';\n  /**\n   * Custom view box size (default: '0 0 500')\n   */\n  viewBox?: string;\n};\n\nexport const CanvasSVG = ({\n  drawing = '',\n  className = '',\n  width = 250,\n  height,\n  strokeWidth = 'medium',\n  viewBox = '0 0 500 500',\n}: CanvasSVGProps) => {\n  const konvaLines = JSON.parse(drawing);\n  const paths = getPathFromKonvaLines(konvaLines);\n\n  const strokeWidthBySize =\n    {\n      small: 3,\n      medium: 5,\n      large: 7,\n    }?.[strokeWidth] ?? 5;\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox={viewBox}\n      overflow=\"hidden\"\n      className={className}\n      style={{ width: `${width}px`, height: `${height || width}px` }}\n    >\n      <defs />\n      {paths.map((path, index) => (\n        <path\n          key={`${drawing}-${index}`}\n          d={path}\n          fill=\"none\"\n          stroke=\"#000\"\n          strokeWidth={strokeWidthBySize}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit=\"10\"\n        />\n      ))}\n    </svg>\n  );\n};\n","import { CSSProperties, useRef, useState } from 'react';\nimport { Stage, Layer, Line } from 'react-konva';\nimport clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Flex, Space } from 'antd';\nimport { DeleteOutlined, UndoOutlined } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\n\ntype DrawingCanvasProps = {\n  /**\n   * Lines drawn in the canvas\n   */\n  lines: CanvasLine[];\n  /**\n   * Function where any new version of the drawing is sent to\n   */\n  setLines: CanvasSetLine;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Show controls to undo, redo, or erase drawing. Default: false\n   */\n  showControls?: boolean;\n  /**\n   * Size of the stroke. Default: medium\n   */\n  strokeWidth?: 'small' | 'medium' | 'large';\n  /**\n   * The width of the canvas (default: 500)\n   */\n  width?: number;\n  /**\n   * The height of the canvas (default: 500)\n   */\n  height?: number;\n  /**\n   *\n   */\n  willReadFrequently?: boolean;\n  /**\n   *\n   */\n  style?: CSSProperties;\n};\n\n/**\n * Canvas drawing board using react-konva\n * It requires an array of lines and an setState function to save the lines\n */\nexport const DrawingCanvas = ({\n  lines,\n  setLines,\n  className = '',\n  showControls = false,\n  strokeWidth = 'medium',\n  width = 500,\n  height,\n  willReadFrequently = false,\n  style = {},\n}: DrawingCanvasProps) => {\n  const [drawingHistory, setDrawingHistory] = useState<CanvasLine[]>([]);\n  const isDrawing = useRef(false);\n\n  /**\n   * Toggles off the isDrawing flag\n   */\n  const startDrawing = () => {\n    isDrawing.current = true;\n  };\n\n  /**\n   * Toggles off the isDrawing flag and resets history\n   */\n  const stopDrawing = () => {\n    isDrawing.current = false;\n    setDrawingHistory([]);\n  };\n\n  const startLine = (e: any) => {\n    startDrawing();\n    const pos = e.target.getStage().getPointerPosition();\n    setLines([...lines, [Math.round(pos.x), Math.round(pos.y)]]);\n  };\n\n  const finishLine = (e: any) => {\n    // Add point if it was a point\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    const x = Math.round(point.x);\n    const y = Math.round(point.y);\n\n    let lastLineEntry = lines[lines.length - 1];\n    lastLineEntry = lastLineEntry.concat([x + 0.1, y + 0.1]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLineEntry);\n    setLines(lines.concat());\n  };\n\n  /**\n   * Start recording drawing\n   * @param e - konva mouse event\n   */\n  const handleMouseDown = (e: any) => {\n    startLine(e);\n  };\n\n  /**\n   * Tracks mouse moving during the drawing\n   * @param e - konva mouse event\n   */\n  const handleMouseMove = (e: any) => {\n    // no drawing - skipping\n    if (!isDrawing.current) {\n      return;\n    }\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    let lastLine = lines[lines.length - 1];\n    // add end point\n    lastLine = lastLine.concat([Math.round(point.x), Math.round(point.y)]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLine);\n    setLines(lines.concat());\n  };\n\n  const handleMouseUp = (e: any) => {\n    if (isDrawing.current) {\n      stopDrawing();\n\n      finishLine(e);\n    }\n  };\n\n  /**\n   * Handles case when a current drawing is stopped off stage\n   * @param e - mouse event\n   */\n  const handleOffsetMouseUp = () => {\n    stopDrawing();\n  };\n\n  /**\n   * Handles case when a current drawing is started off stage\n   * @param e - mouse event\n   */\n  const handleOffsetMouseDown = () => {\n    startDrawing();\n  };\n\n  /**\n   * Handles when mouse leaves the stage\n   * @param e - konva mouse event\n   */\n  const handleMouseLeave = (e: any) => {\n    if (isDrawing.current) {\n      finishLine(e);\n\n      window.document.addEventListener('mouseup', handleOffsetMouseUp);\n      window.document.addEventListener('touchEnd', handleOffsetMouseUp);\n      window.document.addEventListener('mousedown', handleOffsetMouseDown);\n      window.document.addEventListener('touchStart', handleOffsetMouseDown);\n    }\n  };\n\n  /**\n   * Handles when mouse reenters the state\n   * @param e\n   */\n  const handleMouseEnter = (e: any) => {\n    if (isDrawing.current) {\n      startLine(e);\n    }\n    window.document.removeEventListener('mouseup', handleOffsetMouseUp);\n    window.document.removeEventListener('touchEnd', handleOffsetMouseUp);\n    window.document.removeEventListener('mousedown', handleOffsetMouseDown);\n    window.document.removeEventListener('touchStart', handleOffsetMouseDown);\n  };\n\n  const onClear = () => setLines([]);\n\n  const onUndo = () => {\n    const linesCopy = [...lines];\n    const drawingHistoryCopy = [...drawingHistory];\n    const lastLine: CanvasLine | undefined = linesCopy.pop();\n    if (lastLine) {\n      drawingHistoryCopy.push(lastLine);\n      setLines(linesCopy);\n      setDrawingHistory(drawingHistoryCopy);\n    }\n  };\n\n  const onRedo = () => {\n    const linesCopy = [...lines];\n    const drawingHistoryCopy = [...drawingHistory];\n    const lastUndoLine = drawingHistoryCopy.pop();\n    if (lastUndoLine) {\n      linesCopy.push(lastUndoLine);\n      setLines(linesCopy);\n      setDrawingHistory(drawingHistoryCopy);\n    }\n  };\n\n  const strokeWidthBySize =\n    {\n      small: 3,\n      medium: 5,\n      large: 7,\n    }?.[strokeWidth] ?? 5;\n\n  return (\n    <Flex vertical align=\"center\">\n      <Stage\n        width={width}\n        height={height || width}\n        onMouseDown={handleMouseDown}\n        onMousemove={handleMouseMove}\n        onMouseup={handleMouseUp}\n        onTouchStart={handleMouseDown}\n        onTouchMove={handleMouseMove}\n        onTouchEnd={handleMouseUp}\n        onMouseLeave={handleMouseLeave}\n        onMouseEnter={handleMouseEnter}\n        className={clsx('drawing-canvas', className)}\n        style={{ width: `${width}px`, height: `${height || width}px`, ...style }}\n        willReadFrequently={willReadFrequently}\n        id=\"drawing-canvas\"\n      >\n        <Layer>\n          {lines.map((line, i) => (\n            <Line\n              key={i}\n              points={line}\n              stroke=\"#222222\"\n              strokeWidth={strokeWidthBySize}\n              tension={0.5}\n              lineCap=\"round\"\n              globalCompositeOperation=\"source-over\"\n            />\n          ))}\n        </Layer>\n      </Stage>\n      {showControls && (\n        <Space>\n          <Button onClick={onUndo} disabled={lines.length === 0}>\n            <UndoOutlined />\n            <Translate pt=\"Desfazer\" en=\"Undo\" />\n          </Button>\n          <Button onClick={onRedo} disabled={drawingHistory.length === 0}>\n            <UndoOutlined />\n            <Translate pt=\"Refazer\" en=\"Redo\" />\n          </Button>\n          <Button onClick={onClear} disabled={lines.length === 0}>\n            <DeleteOutlined />\n            <Translate pt=\"Apagar\" en=\"Clear\" />\n          </Button>\n        </Space>\n      )}\n    </Flex>\n  );\n};\n","import clsx from 'clsx';\n// Components\nimport { Sprite } from 'components/sprites';\n// Sass\nimport './ItemCard.scss';\nimport { DualTranslate } from 'components/language';\n\nexport type ItemCardProps = {\n  /**\n   * The id of the item\n   */\n  id: string;\n  /**\n   * The width of the item\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n  /**\n   * Replacement title, usually the name of the item\n   */\n  title?: string;\n  /**\n   * Optional text to display\n   */\n  text?: DualLanguageValue;\n  /**\n   * Optional padding\n   */\n  padding?: number;\n};\n\nconst BASE = 64;\n\n/**\n * Retrieves the source and item ID based on a given string.\n *\n * @param str - The input string.\n * @returns An array containing the source and item ID.\n */\nexport const getSource = (str: string) => {\n  const match = str.match(/\\d+/);\n  const numId = match ? parseInt(match[0], 10) : 0;\n  const itemId = `item-${numId}`;\n  const sourceId = Math.ceil(numId / BASE) * BASE;\n  const source = `items-${sourceId}`;\n  return [source, itemId];\n};\n\n/**\n * An item card component.\n */\nexport function ItemCard({ id, width = 75, className, title, text, padding }: ItemCardProps) {\n  const [source, itemId] = getSource(id);\n\n  const height = text ? 'auto' : `${width}px`;\n\n  return (\n    <div className={clsx('item-card', className)} style={{ width: `${width}px`, height }}>\n      <Sprite source={source} id={itemId} width={width} title={title} padding={padding} />\n      {Boolean(text) && (\n        <span className=\"item-card__text\">\n          <DualTranslate>{text!}</DualTranslate>\n        </span>\n      )}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Utils\nimport { getColorFromLetter } from 'utils/helpers';\n// Sass\nimport './Card.scss';\n\ntype CardProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  header?: string;\n  footer?: string;\n  color?: string;\n  size?: 'small' | 'medium' | 'large';\n  randomColor?: boolean;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  headerClassName?: string;\n  footerClassName?: string;\n  hideHeader?: boolean;\n};\nexport const Card = ({\n  children,\n  header = 'Carta',\n  footer,\n  color = 'none',\n  size = 'medium',\n  randomColor = false,\n  className = '',\n  headerClassName = '',\n  footerClassName = '',\n  hideHeader = false,\n}: CardProps) => {\n  const baseClass = 'card';\n\n  const bgColor = randomColor\n    ? getColorFromLetter(\n        typeof children === 'string'\n          ? children[0].toUpperCase()\n          : header !== 'Carta'\n          ? header[0].toUpperCase()\n          : 'X'\n      )\n    : color;\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, className)}>\n      {!hideHeader && (\n        <span\n          className={clsx(`${baseClass}__header`, `color-background--${bgColor}`, headerClassName)}\n          style={color.startsWith('#') ? { backgroundColor: color } : {}}\n        >\n          {header}\n        </span>\n      )}\n      <span className={`${baseClass}__text`}>{children}</span>\n      {footer && <span className={clsx(`${baseClass}__footer`, footerClassName)}>{footer}</span>}\n    </div>\n  );\n};\n","import { ReactNode } from 'react';\nimport clsx from 'clsx';\n// Types\nimport type { AvatarSize } from 'antd/lib/avatar/AvatarContext';\n// Components\nimport { IconAvatar } from 'components/avatars/IconAvatar';\n\nexport type MetricHighlightProps = {\n  /**\n   * The text to be highlighted\n   */\n  children: ReactNode;\n  /**\n   * The icon representing the metric\n   */\n  icon: ReactNode;\n  /**\n   * Indicates if it's a negative metric\n   */\n  type?: 'positive' | 'negative' | 'default';\n  /**\n   * The size of the avatar (default: small)\n   */\n  iconSize?: AvatarSize;\n  /**\n   * Custom class\n   */\n  className?: string;\n  /**\n   * Icon placement (default: after)\n   */\n  iconPlacement?: 'before' | 'after';\n};\n\nexport function MetricHighlight({\n  children,\n  icon,\n  type,\n  className,\n  iconSize = 'small',\n  iconPlacement = 'after',\n}: MetricHighlightProps) {\n  return (\n    <span className={clsx('metric-highlight', type && `metric-highlight--${type}`, className)}>\n      {iconPlacement === 'before' && (\n        <>\n          <IconAvatar size={iconSize} icon={icon} />{' '}\n        </>\n      )}\n      {children}\n      {iconPlacement === 'after' && (\n        <>\n          {' '}\n          <IconAvatar size={iconSize} icon={icon} />\n        </>\n      )}\n    </span>\n  );\n}\n\nexport type HighlightProps = Pick<MetricHighlightProps, 'children' | 'type' | 'iconSize' | 'className'>;\n","import { ClockIcon } from 'icons/ClockIcon';\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function TimeHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<ClockIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import { WarningOutlined } from '@ant-design/icons';\nimport { useQuery } from '@tanstack/react-query';\nimport { Spin, Tooltip } from 'antd';\nimport { useTDBaseUrl } from 'hooks/useTDBaseUrl';\n\ntype SpriteProps = {\n  /**\n   * The sprite source name\n   */\n  source: string;\n  /**\n   * The id of the item\n   */\n  id: string;\n  /**\n   * The width of the item\n   */\n  width?: number;\n  /**\n   * Replacement title, usually the name of the item\n   */\n  title?: string;\n  /**\n   * Optional class name\n   */\n  className?: string;\n  /**\n   *\n   */\n  padding?: number;\n};\n\n/**\n * Loads a sprite from the Tarde Divertida sprites\n * @param {SpriteProps} props\n * @returns a single sprite item\n */\nexport function Sprite({ id, source, width = 75, padding = 6, title, className }: SpriteProps) {\n  const baseUrl = useTDBaseUrl('sprites');\n\n  const { isLoading, data, isError } = useQuery({\n    queryKey: ['sprite', source],\n    queryFn: async () => {\n      const response = await fetch(`${baseUrl}/sprites/${source}.svg`);\n      return await response.text();\n    },\n    enabled: !!id && !!source,\n  });\n\n  const paddedWidth = width - padding * 2;\n\n  if (isLoading) {\n    return (\n      <span\n        style={{\n          width: `${paddedWidth}px`,\n          height: `${paddedWidth}px`,\n          padding,\n          display: 'grid',\n          placeItems: 'center',\n        }}\n        className={className}\n      >\n        <Spin />\n      </span>\n    );\n  }\n\n  const svgContent = data;\n\n  if (isError || !svgContent) {\n    return (\n      <span\n        style={{\n          width: `${paddedWidth}px`,\n          height: `${paddedWidth}px`,\n          padding,\n          display: 'grid',\n          placeItems: 'center',\n        }}\n        className={className}\n      >\n        <WarningOutlined />\n      </span>\n    );\n  }\n\n  return (\n    <svg\n      viewBox=\"0 0 512 512\"\n      style={{ width: `${paddedWidth}px`, height: `${paddedWidth}px`, padding }}\n      className={className}\n    >\n      <use xlinkHref={`#${id}`} dangerouslySetInnerHTML={{ __html: svgContent }} />\n      <foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">\n        {title && (\n          <Tooltip title={title}>\n            <div style={{ background: 'transparent', width: '100%', height: '100vh' }}></div>\n          </Tooltip>\n        )}\n      </foreignObject>\n    </svg>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Sass\nimport './Instruction.scss';\n\ntype InstructionsProps = {\n  /**\n   * The content of the instruction\n   */\n  children: ReactNode;\n  /**\n   * Adds a semi transparent background (white or black opposite to the white property)\n   */\n  contained?: boolean;\n  /**\n   * Make text color white\n   */\n  white?: boolean;\n  /**\n   * Makes instruction width 100%\n   */\n  fullWidth?: boolean;\n  /**\n   * Custom class name\n   */\n  className?: string;\n  /**\n   *\n   */\n  noMargin?: boolean;\n};\n\n/**\n * Typography container for instructions\n */\nexport const Instruction = ({\n  children,\n  white,\n  className,\n  contained,\n  fullWidth,\n  noMargin = false,\n}: InstructionsProps) => {\n  const baseClass = 'instruction';\n\n  return (\n    <Typography.Text\n      className={clsx(\n        baseClass,\n        contained && `${baseClass}--contained`,\n        white && `${baseClass}--white`,\n        fullWidth && `${baseClass}--full-width`,\n        noMargin && `${baseClass}--no-margin`,\n        className\n      )}\n      data-testid=\"instruction\"\n    >\n      {children}\n    </Typography.Text>\n  );\n};\n","// Types\nimport type { GameRound } from 'types/game';\n// Components\nimport { Translate } from 'components/language';\nimport { RuleInstruction } from 'components/text';\nimport { pluralize } from 'utils/helpers';\n\ntype RoundsLeftInstructionProps = {\n  /**\n   * The state round object with current and total values\n   */\n  round: GameRound;\n};\n\n/**\n * Displays instructional sentence based on the number of rounds left for the game to end\n */\nexport function RoundsLeftInstruction({ round }: RoundsLeftInstructionProps) {\n  const left = (round?.total ?? 0) - (round?.current ?? 0);\n\n  if (left === 0 || round.forceLastRound) {\n    return (\n      <RuleInstruction type=\"event\">\n        <Translate pt=\"Essa foi a última rodada\" en=\"No more rounds left\" />\n      </RuleInstruction>\n    );\n  }\n\n  return (\n    <RuleInstruction type=\"tip\">\n      <Translate\n        pt={\n          <>\n            {pluralize(left, 'Falta', 'Faltam')} <strong>{left}</strong> {pluralize(left, 'rodada')} para o\n            jogo terminar...\n          </>\n        }\n        en={\n          <>\n            <strong>{left}</strong> {pluralize(left, 'round')} left for the game to end...\n          </>\n        }\n      />\n    </RuleInstruction>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Sass\nimport './TextHighlight.scss';\n\ntype TextHighlightProps = {\n  /**\n   * The text to be highlighted\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n};\n\nexport function TextHighlight({ children, className }: TextHighlightProps) {\n  return <span className={clsx('text-highlight', className)}>{children}</span>;\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Sass\nimport './Title.scss';\n\nexport type TitleProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Makes text white\n   */\n  white?: boolean;\n  /**\n   * Icon prefixing the title\n   */\n  icon?: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * The heading level (default: 2)\n   */\n  level?: 1 | 2 | 3 | 4 | 5;\n  /**\n   * The size of the title (default: medium)\n   */\n  size?: 'xx-small' | 'x-small' | 'small' | 'medium' | 'large';\n  /**\n   * The alignment of the text (default: center)\n   */\n  align?: 'left' | 'right' | 'center';\n};\n\nexport const Title = ({\n  children,\n  white,\n  icon,\n  className,\n  level = 2,\n  size = 'medium',\n  align = 'center',\n}: TitleProps) => {\n  return (\n    <Typography.Title\n      level={level}\n      className={clsx('title', `title--${size}`, `title--align-${align}`, white && 'title--white', className)}\n    >\n      {Boolean(icon) && icon}\n      {children}\n    </Typography.Title>\n  );\n};\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Typography, theme } from 'antd';\nimport {\n  AlertFilled,\n  BulbFilled,\n  ClockCircleFilled,\n  ExclamationCircleFilled,\n  MessageFilled,\n  PlayCircleFilled,\n  ReadFilled,\n  RobotFilled,\n  StarFilled,\n} from '@ant-design/icons';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Sass\nimport './RuleInstruction.scss';\n\nexport type RuleInstructionProps = {\n  /**\n   * The content of the rule instruction\n   */\n  children: ReactNode;\n  /**\n   * Makes instruction width 100%\n   */\n  fullWidth?: boolean;\n  /**\n   * Custom class name\n   */\n  className?: string;\n  /**\n   * The type of the rule instruction (default: rule)\n   * Rule is used for general rules\n   * Action is used when the player must do something\n   * Event is used when something happens like the result of an action or decision\n   * Alert is used when something very important needs attention (constant animation)\n   * Lore is used for story elements\n   * Scoring for result points (not rule)\n   * Wait for when the player must wait for something to happen\n   */\n  type: 'rule' | 'action' | 'event' | 'alert' | 'lore' | 'tip' | 'scoring' | 'wait' | 'bot';\n  /**\n   * Optional sound effect played when the component is rendered\n   */\n  sfx?: ReactNode;\n};\n\n/**\n * Typography container for rules instructions, if multiple lines, use <br /> to break lines\n * Do not use lists (ul, ol, li) inside this component\n * Add an icon on the left side\n */\nexport const RuleInstruction = ({\n  children,\n  className,\n  fullWidth,\n  type = 'rule',\n  sfx,\n}: RuleInstructionProps) => {\n  const baseClass = 'rule-instruction';\n\n  const icon = {\n    action: <PlayCircleFilled />,\n    alert: <AlertFilled />,\n    event: <ExclamationCircleFilled />,\n    lore: <MessageFilled />,\n    rule: <ReadFilled />,\n    tip: <BulbFilled />,\n    scoring: <StarFilled />,\n    wait: <ClockCircleFilled />,\n    bot: <RobotFilled />,\n  }[type];\n\n  const animationClass = {\n    action: getAnimationClass('shakeX'),\n    alert: getAnimationClass('flash', { infinite: true, speed: 'fast' }),\n    event: getAnimationClass('tada', { repeat: 3, speed: 'fast' }),\n    lore: getAnimationClass('pulse'),\n    rule: getAnimationClass('pulse'),\n    tip: getAnimationClass('pulse'),\n    scoring: getAnimationClass('pulse'),\n    wait: getAnimationClass('pulse'),\n    bot: getAnimationClass('pulse'),\n  }[type];\n\n  const { token } = theme.useToken();\n  const color = type === 'action' ? { background: token.colorPrimary } : {};\n\n  return (\n    <div\n      className={clsx(baseClass, fullWidth && `${baseClass}--full-width`, className)}\n      data-testid=\"rule-instruction\"\n    >\n      <div className={clsx(`${baseClass}__icon`, `${baseClass}__icon--${type}`)} style={color}>\n        <div className={animationClass}>{icon}</div>\n      </div>\n      {sfx}\n      <Typography.Paragraph className={clsx(`${baseClass}__content`)}>{children}</Typography.Paragraph>\n    </div>\n  );\n};\n","import { MetricHighlight, MetricHighlightProps } from 'components/metrics/MetricHighlight';\nimport { AnimatedClockIcon } from 'icons/AnimatedClockIcon';\nimport { ReactNode } from 'react';\n\nconst padTime = (value: number) => (value < 10 ? `0${value}` : value);\n\ntype TimerClockProps = {\n  /**\n   * Replacement icon for the clock icon\n   */\n  icon?: ReactNode;\n  /**\n   * Optional children that comes after the time\n   */\n  children?: ReactNode;\n  /**\n   * Minutes\n   */\n  minutes?: number;\n  /**\n   * Seconds\n   */\n  seconds: number;\n} & Omit<MetricHighlightProps, 'icon' | 'children'>;\n\n/**\n * Timer highlight with countdown functionality\n */\nexport function TimerClock({\n  icon,\n  type,\n  iconSize,\n  children,\n  className = '',\n  iconPlacement = 'before',\n  minutes = 0,\n  seconds,\n}: TimerClockProps) {\n  return (\n    <MetricHighlight\n      icon={icon ?? <AnimatedClockIcon />}\n      type={type}\n      iconSize={iconSize}\n      className={className}\n      iconPlacement={iconPlacement}\n    >\n      {minutes}:{padTime(seconds)}\n      {children}\n    </MetricHighlight>\n  );\n}\n","import { Progress, ProgressProps } from 'antd';\n\ninterface TimerBarProps extends ProgressProps {\n  steps?: number;\n  value: number;\n  total: number;\n}\n\n/**\n * Time Bar presentational component used in timed operations\n * @param props\n * @returns\n */\nexport function TimerBar({\n  steps,\n  strokeLinecap,\n  total,\n  type = 'line',\n  value,\n  status = 'active',\n  ...props\n}: TimerBarProps) {\n  const percentage = 100 - (value * 100) / total;\n  return (\n    <Progress\n      percent={percentage}\n      steps={steps}\n      showInfo={false}\n      style={{ marginBottom: '1rem' }}\n      size={steps && steps > 30 ? 'small' : undefined}\n      type={type}\n      {...props}\n    />\n  );\n}\n","import clsx from 'clsx';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\n// Components\nimport { TimerBar } from './TimerBar';\n\ntype TimedTimerBarProps = {\n  /**\n   * Duration in seconds\n   */\n  duration: number;\n  /**\n   * Function executed when the time is up\n   */\n  onExpire: GenericFunction;\n  /**\n   * Number of ticks in the bar\n   */\n  steps?: number;\n  /**\n   * Type of bar. Default: line\n   */\n  type?: 'circle' | 'line' | 'dashboard';\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\nexport function TimedTimerBar({ duration, onExpire, type, steps = 10, className }: TimedTimerBarProps) {\n  const { timeLeft } = useCountdown({\n    duration,\n    autoStart: true,\n    onExpire,\n  });\n\n  return (\n    <div className={clsx('timer-number', className)}>\n      {timeLeft} <TimerBar steps={steps} value={timeLeft} total={duration} type={type} /> {timeLeft}\n    </div>\n  );\n}\n","import { MetricHighlight, MetricHighlightProps } from 'components/metrics/MetricHighlight';\nimport { useCountdown, useCountdownSettings } from 'hooks/useCountdown';\nimport { AnimatedClockIcon } from 'icons/AnimatedClockIcon';\nimport { ReactNode } from 'react';\n\nconst padTime = (value: number) => (value < 10 ? `0${value}` : value);\n\ntype TimedTimerClockProps = {\n  /**\n   * Replacement icon for the clock icon\n   */\n  icon?: ReactNode;\n  /**\n   * Optional children that comes after the time\n   */\n  children?: ReactNode;\n} & useCountdownSettings &\n  Omit<MetricHighlightProps, 'icon' | 'children'>;\n\n/**\n * Timer highlight with countdown functionality\n */\nexport function TimedTimerClock({\n  icon,\n  type,\n  iconSize,\n  children,\n  className = '',\n  iconPlacement = 'before',\n  ...timerProps\n}: TimedTimerClockProps) {\n  const { minutes, seconds } = useCountdown({ ...timerProps });\n\n  return (\n    <MetricHighlight\n      icon={icon ?? <AnimatedClockIcon />}\n      type={type}\n      iconSize={iconSize}\n      className={className}\n      iconPlacement={iconPlacement}\n    >\n      {minutes}:{padTime(seconds)}\n      {children}\n    </MetricHighlight>\n  );\n}\n","import { useCountdown } from 'hooks/useCountdown';\n\ntype TimeForActionProps = {\n  duration: number;\n  onExpire?: () => void;\n  timeLeft?: number;\n};\n\nexport function WaitingTime({ duration, timeLeft, onExpire }: TimeForActionProps) {\n  const { timeLeft: privateTimeLeft } = useCountdown({\n    duration,\n    autoStart: timeLeft === undefined,\n    onExpire,\n  });\n\n  const percentage = ((timeLeft ?? privateTimeLeft) / duration) * 100;\n\n  return (\n    <div className=\"timer-waiting-time-bar\">\n      <span className=\"timer-waiting-time-bar__container\">\n        <span className=\"timer-waiting-time-bar__left\" style={{ width: `${percentage}%` }} />\n      </span>\n    </div>\n  );\n}\n","/**\n * Returns the URL for the given kind of resource\n * @param kind the kind of resource\n * @returns the URL for the given kind of resource\n */\nexport function useTDBaseUrl(library: 'images' | 'sprites' | 'resources' | 'classic'): string {\n  const baseUrl = process.env.REACT_APP_TD_BASE_URL;\n\n  switch (library) {\n    case 'images':\n      return `${baseUrl}/${process.env.REACT_APP_TD_IMAGES}`;\n    case 'sprites':\n      return `${baseUrl}/${process.env.REACT_APP_TD_SPRITES}`;\n    case 'resources':\n      return `${baseUrl}/${process.env.REACT_APP_TD_RESOURCES}`;\n    case 'classic':\n      return `${baseUrl}/${process.env.REACT_APP_TD_CLASSIC}`;\n    default:\n      throw new Error('Invalid library');\n  }\n}\n","export function AnimatedClockIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fbfbfb\"\n        d=\"M464 256c0 114.9-93.1 208-208 208S48 370.9 48 256 141.1 48 256 48s208 93.1 208 208z\"\n      ></path>\n      <path\n        fill=\"#e3effa\"\n        d=\"M464 256c0-114.9-93.2-208-208.1-207.9-67 0-130 32.4-169 86.9 93.4-66.9 223.3-45.4 290.2 47.9 51.9 72.4 51.9 169.8 0 242.3C431.7 386.1 464 323.1 464 256z\"\n      ></path>\n      <path\n        fill=\"#fcc369\"\n        d=\"M256 8c137 0 248 111 248 248S393 504 256 504 8 393 8 256 119 8 256 8zm0 456c114.9 0 208-93.1 208-208S370.9 48 256 48 48 141.1 48 256s93.1 208 208 208z\"\n      ></path>\n      <path\n        fill=\"#ed9b52\"\n        d=\"M256 32C132.3 32 32 132.3 32 256s100.3 224 224 224 224-100.3 224-224S379.7 32 256 32zm0 432c-114.9 0-208-93.1-208-208S141.1 48 256 48s208 93.1 208 208-93.1 208-208 208z\"\n      ></path>\n      <path d=\"M256 496c-132.5-.1-239.9-107.5-240-240 0-4.4-3.6-8-8-8s-8 3.6-8 8c0 141.4 114.6 256 256 256.1 109.6 0 207-69.7 242.4-173.5l-15.1-5.2C450.1 430.7 358.7 496 256 496zm0-496C133.8.1 28.6 86.6 4.8 206.5l15.7 3.1C46.3 79.5 172.6-5 302.6 20.7s214.6 152.1 188.8 282.1c-1 5.1-2.2 10.1-3.5 15.1l15.5 4.1c36.4-136.7-45-277-181.8-313.4C300.2 2.9 278.1 0 256 0zM18 225l-15.9-2c-.7 5.4-1.2 10.9-1.6 16.5l16 1c.3-5.2.8-10.4 1.5-15.5z\"></path>\n      <path d=\"M256 472c119.3 0 216-96.7 216-216S375.3 40 256 40 40 136.7 40 256c.1 119.2 96.8 215.9 216 216zm-8-415.8V88h16V56.2c104.1 4.3 187.5 87.7 191.8 191.8H424v16h31.8c-4.3 104.1-87.7 187.5-191.8 191.8V424h-16v31.8C143.9 451.5 60.5 368.1 56.2 264H88v-16H56.2C60.5 143.9 143.9 60.5 248 56.2z\"></path>\n\n      <g>\n        <path\n          fill=\"#555fa3\"\n          d=\"M273 141.6v114.24a15.55 15.55 0 01-3.68 10.16l-50.24 61.12a14.47 14.47 0 01-20.42 1.25 14.32 14.32 0 01-2.78-3.33 18.75 18.75 0 012.4-22.64l40.8-48.16A7.77 7.77 0 00241 249V141.6a16.07 16.07 0 1132-3 15.44 15.44 0 010 3z\"\n        ></path>\n        <path d=\"M206.6 339.94c.56 0 1.11.06 1.67.06a22.7 22.7 0 0016.95-7.83l50.31-61.05a24 24 0 005.47-15.26V141.6a24 24 0 10-48-3 25.69 25.69 0 000 3v107.47l-40.62 48a26.49 26.49 0 00-3.2 32.38 23.05 23.05 0 0017.42 10.49zm-2.18-32.34l40.8-48.18a16.1 16.1 0 003.78-10.36V141.6a8.14 8.14 0 1116 0v114.26a8 8 0 01-1.82 5.08l-50.05 60.76a6.37 6.37 0 01-5.32 2.28 7.05 7.05 0 01-5.29-3.39 10.81 10.81 0 011.89-13z\"></path>\n        <animateTransform\n          attributeName=\"transform\"\n          dur=\"2s\"\n          from=\"0 256 256\"\n          repeatCount=\"indefinite\"\n          to=\"360 256 256\"\n          type=\"rotate\"\n        ></animateTransform>\n      </g>\n    </svg>\n  );\n}\n","export function ApplauseIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path fill=\"none\" d=\"M0 .01h512v512H0z\"></path>\n      <path\n        fill=\"#ffbc86\"\n        d=\"M445.7 199.19l-34.24 21.18-154.58 95.64a71.63 71.63 0 01-32.28 10.5l-6.93.51a131 131 0 00-59.12 19.23l-15.94 9.86-15.68 9.7a10.06 10.06 0 01-13.84-3.26l-85.92-138.9a10.06 10.06 0 013.26-13.84l11.66-7.22a132.47 132.47 0 0037.83-35.26 132.53 132.53 0 0021.45-47 72.37 72.37 0 0132.37-44.95l101.53-62.86a33.41 33.41 0 1135.15 56.82l22.87-14.15 68.77-42.54a25.33 25.33 0 0126.66 43.08l20.45-12.65a25.33 25.33 0 0126.65 43.08l-20.45 12.65a25.33 25.33 0 0134.6 7.8c7.7 11.93 3.64 28.12-8.43 35.58l-22 13.62a25.33 25.33 0 0134.6 7.8c7.7 11.93 3.64 28.11-8.43 35.58\"\n      ></path>\n      <path\n        fill=\"#f7a86c\"\n        d=\"M411.46 220.37l-154.58 95.64a71.63 71.63 0 01-32.28 10.5l-6.93.51a131 131 0 00-59.12 19.23l-15.94 9.86-32.47-100.1a47.52 47.52 0 0145.17-62.15 48.84 48.84 0 015 .27l-19.85-61.24A39.42 39.42 0 01178 81.3h1.35a39.43 39.43 0 0170.82-22.94 38.49 38.49 0 0134.4-6.82 33.33 33.33 0 01-14.1 17.79l22.87-14.16a40.77 40.77 0 0113.56 12.41 38.6 38.6 0 0123.49-8 40.36 40.36 0 0137.93 27.75z\"\n      ></path>\n      <path d=\"M27.18 231.15a7.5 7.5 0 01-6.39-3.56 17.58 17.58 0 015.69-24.16l12.23-7.56a124.26 124.26 0 0055.35-77.27 79.47 79.47 0 0135.43-49.46l24.93-15.43a7.5 7.5 0 017.89 12.76l-24.93 15.42a64.46 64.46 0 00-28.7 40.12 139.36 139.36 0 01-62.08 86.62l-12.22 7.56a2.55 2.55 0 00-.83 3.51 7.5 7.5 0 01-6.37 11.45zm94.5 143.65a17.56 17.56 0 01-15-8.31 7.5 7.5 0 1112.75-7.9 2.56 2.56 0 003.52.83l31.62-19.56a139 139 0 0162.5-20.32l6.93-.53a64.37 64.37 0 0028.9-9.4l188.89-116.82c8.38-5.19 11.29-16.13 6.49-24.38a17.83 17.83 0 00-24.77-6.25 7.5 7.5 0 01-7.89-12.76h.05l22-13.61c8.38-5.18 11.29-16.12 6.49-24.38a17.84 17.84 0 00-24.81-6.22 7.5 7.5 0 01-7.89-12.76l20.45-12.65a17.83 17.83 0 005.78-24.54 17.85 17.85 0 00-24.54-5.78L392.68 62.1a7.5 7.5 0 01-7.89-12.76A17.84 17.84 0 00366 19.01l-91.63 56.71a7.5 7.5 0 01-7.89-12.71 25.92 25.92 0 00-27.27-44.08l-46.69 28.85a7.5 7.5 0 11-7.89-12.77l46.69-28.87a40.92 40.92 0 0162.09 40.17l64.71-40a32.85 32.85 0 0150.1 28.79 32.83 32.83 0 0134.36 55.53 32.66 32.66 0 0114.51 13.28c8.57 14.75 4 34-10.2 43.79a32.51 32.51 0 0114.35 13.21c8.85 15.21 3.67 35.25-11.56 44.68L260.83 322.38a79.33 79.33 0 01-35.67 11.63l-6.93.52a123.94 123.94 0 00-55.73 18.13l-31.62 19.56a17.5 17.5 0 01-9.2 2.58z\"></path>\n      <path d=\"M243.13 153.3a7.5 7.5 0 01-3.95-13.88l145.59-90.07a7.5 7.5 0 017.89 12.76l-145.59 90.07a7.46 7.46 0 01-3.94 1.12zm26.66 43.08a7.5 7.5 0 01-4-13.87l145.63-90.07a7.5 7.5 0 117.89 12.75l-145.58 90.07a7.49 7.49 0 01-3.94 1.12zm26.65 43.08a7.5 7.5 0 01-3.95-13.88l145.59-90.06a7.5 7.5 0 117.92 12.75l-145.62 90.07a7.46 7.46 0 01-3.94 1.12z\"></path>\n      <path d=\"M147.74 254.39a7.5 7.5 0 01-4-13.88c31.63-19.58 48.68-46 50.67-78.44a105.11 105.11 0 00-6.32-43.06 7.49 7.49 0 012.95-9.32l75.44-46.68a7.5 7.5 0 117.89 12.75l-70.29 43.45a123.57 123.57 0 015.35 43.8c-1.58 25.87-12.88 62.53-57.75 90.28a7.47 7.47 0 01-3.94 1.1z\"></path>\n      <path\n        fill=\"#fed1a4\"\n        d=\"M322.39 75.01a25.34 25.34 0 00-15.82 31.75l-8-24.61c-4.36-13.48-19.11-21.28-32.57-16.64a25.32 25.32 0 00-15.81 31.75l-7.42-22.87a25.33 25.33 0 00-48.15 15.62l7.38 22.88a25.33 25.33 0 00-48.19 15.63l33.28 102.49a33.42 33.42 0 00-63.57 20.62l36.83 113.56a72.39 72.39 0 0036 42.14 132.55 132.55 0 0165.83 77.17l4.23 13.05a10.06 10.06 0 0012.59 6.46l155.35-50.38a10.06 10.06 0 006.5-12.62l-11.47-35.37a131 131 0 01-4.59-62l1.15-6.86a71.56 71.56 0 00-2.51-33.85L354.94 91.71c-4.38-13.51-19.13-21.31-32.55-16.7\"\n      ></path>\n      <path\n        fill=\"#ffbc86\"\n        d=\"M354.93 91.68l68.5 211.22a71.56 71.56 0 012.51 33.85l-1.15 6.86a131 131 0 004.59 62l11.47 35.4a10 10 0 01-6.46 12.66l-14.12 4.58-14.57-44.97a130.83 130.83 0 01-4.59-62l1.14-6.86a71.43 71.43 0 00-2.5-33.85L331.08 98.85a25.29 25.29 0 00-19.05-17 25.16 25.16 0 0111.52-7.17c13.24-3.88 27.12 3.88 31.38 17\"\n      ></path>\n      <path d=\"M434.39 461.14a7.5 7.5 0 01-2.31-14.64 2.55 2.55 0 001.64-3.21l-11.47-35.37a139 139 0 01-4.86-65.55l1.15-6.85a64.24 64.24 0 00-2.25-30.31l-7.7-23.75a7.5 7.5 0 1114.27-4.62l7.7 23.75a79.18 79.18 0 012.77 37.4l-1.14 6.86a123.85 123.85 0 004.33 58.44L448 438.66a17.58 17.58 0 01-11.28 22.11 7.5 7.5 0 01-2.33.37zm-158.47 50.87a17.6 17.6 0 01-16.68-12.15l-4.44-13.67a124.21 124.21 0 00-61.87-72.18 79.5 79.5 0 01-39.6-46.19l-16-49.23a7.5 7.5 0 1114.3-4.58l16 49.24a64.39 64.39 0 0032.08 37.41 139.34 139.34 0 0169.39 80.93l4.44 13.67a2.5 2.5 0 001.27 1.49 2.53 2.53 0 001.94.16 7.5 7.5 0 114.63 14.26 17.52 17.52 0 01-5.46.84zM133 288.19a7.51 7.51 0 01-7.14-5.19l-9.42-29.05a40.92 40.92 0 0153.8-50.74l-23.47-72.38a32.81 32.81 0 0139.83-41.82 32.83 32.83 0 0162.12-20.17 32.62 32.62 0 0116.35-10.93c16.37-4.82 34 4.26 40.1 20.33a32.61 32.61 0 0116.25-10.8c16.88-5 35.11 4.84 40.64 21.87l49.85 153.71a7.5 7.5 0 01-14.27 4.62L347.79 94.01c-3-9.38-13-14.81-22.14-12.11a17.83 17.83 0 00-11.94 22.61 7.5 7.5 0 01-14.27 4.63l-8-24.61c-3-9.38-13-14.81-22.14-12.11a17.84 17.84 0 00-11.95 22.59 7.5 7.5 0 11-14.27 4.63l-7.42-22.88a17.83 17.83 0 00-33.92 11l7.42 22.88a7.5 7.5 0 01-14.27 4.62 17.83 17.83 0 00-33.92 11l33.26 102.45a7.5 7.5 0 01-14.23 4.62 25.91 25.91 0 00-49.28 16l9.42 29.06a7.51 7.51 0 01-7.13 9.81z\"></path>\n      <path d=\"M254.85 283.24a7.5 7.5 0 01-7.13-5.19L194.9 115.2a7.5 7.5 0 0114.27-4.62L262 273.42a7.5 7.5 0 01-4.82 9.45 7.39 7.39 0 01-2.33.37zM303 267.61a7.5 7.5 0 01-7.14-5.19L243.09 99.58a7.5 7.5 0 0114.27-4.63l52.81 162.85a7.5 7.5 0 01-4.82 9.45 7.78 7.78 0 01-2.35.36zm48.22-15.6a7.51 7.51 0 01-7.13-5.19L291.28 83.95a7.5 7.5 0 0114.27-4.63l52.81 162.85a7.51 7.51 0 01-7.14 9.82zm-138.49 65.55a7.5 7.5 0 01-7.14-5.18L180 233.33a7.5 7.5 0 0114.27-4.62l25.63 79a7.48 7.48 0 01-7.13 9.81zM92.94 60.01a7.44 7.44 0 01-5.3-2.2l-12.2-12.22a7.5 7.5 0 0110.61-10.58l12.19 12.2a7.5 7.5 0 01-5.3 12.8zm23.87-15.38a7.51 7.51 0 01-7.34-6L106 21.74a7.5 7.5 0 1114.69-3l3.46 16.9a7.51 7.51 0 01-5.85 8.85 7.73 7.73 0 01-1.49.14zM77.6 83.86a7.73 7.73 0 01-1.51-.15l-16.9-3.46a7.5 7.5 0 113-14.69l16.9 3.45a7.5 7.5 0 01-1.49 14.85zm397.61 180.92a7.51 7.51 0 01-3.78-1l-14.89-8.7a7.52 7.52 0 017.57-13l14.89 8.73a7.5 7.5 0 01-3.79 14zm-26.45 27.67a7.48 7.48 0 01-6.73-4.18l-7.63-15.46a7.5 7.5 0 1113.45-6.64l7.63 15.46a7.51 7.51 0 01-3.41 10.05 7.43 7.43 0 01-3.31.77zm20.35-63.36a7.5 7.5 0 01-.4-15l17.21-1a7.51 7.51 0 11.82 15l-17.21.95z\"></path>\n    </svg>\n  );\n}\n","export function ClockIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <circle cx=\"256\" cy=\"256\" r=\"248\" fill=\"#ff5876\"></circle>\n      <path\n        fill=\"#e6485d\"\n        d=\"M256 486C122.048 486 12.919 379.795 8.18 247c-.107 2.988-.18 5.986-.18 9 0 136.967 111.033 248 248 248s248-111.033 248-248c0-3.014-.073-6.012-.18-9C499.081 379.795 389.952 486 256 486z\"\n      ></path>\n      <circle cx=\"256\" cy=\"256\" r=\"206.942\" fill=\"#e4eef9\"></circle>\n      <path\n        fill=\"#d5e0f2\"\n        d=\"M256 444.942c-111.274 0-202.022-87.828-206.736-197.942a209.92 209.92 0 00-.207 9c0 114.291 92.651 206.942 206.942 206.942S462.942 370.291 462.942 256c0-3.017-.079-6.015-.207-9C458.022 357.114 367.274 444.942 256 444.942z\"\n      ></path>\n      <path\n        fill=\"#405b6c\"\n        d=\"M331.17 183.393c-5.899-5.818-15.396-5.752-21.213.146L262.848 231.3c10.522 2.911 18.324 12.359 18.76 23.701l49.707-50.395c5.818-5.898 5.753-15.396-.145-21.213zM230.367 256c0-11.14 7.109-20.617 17.036-24.151l-92.462-82.397c-6.186-5.512-15.667-4.966-21.178 1.219s-4.966 15.667 1.219 21.178l95.407 85.021c-.01-.289-.022-.578-.022-.87z\"\n      ></path>\n      <circle cx=\"256\" cy=\"256\" r=\"25.633\" fill=\"#ff5876\"></circle>\n      <path\n        fill=\"#2d4456\"\n        d=\"M216.381 244.387l14.008 12.483c-.01-.29-.022-.578-.022-.87 0-11.14 7.109-20.617 17.036-24.151l-12.635-11.26c-8.792 5.283-15.446 13.747-18.387 23.798zm58.377-25.163l-11.91 12.075c10.522 2.911 18.324 12.359 18.76 23.701l13.128-13.31c-3.606-9.76-10.801-17.775-19.978-22.466z\"\n      ></path>\n      <path\n        fill=\"#e6485d\"\n        d=\"M256 263.634c-10.989 0-20.36-6.917-24.005-16.634a25.56 25.56 0 00-1.629 9c0 14.157 11.477 25.634 25.633 25.634 14.157 0 25.634-11.477 25.634-25.634a25.56 25.56 0 00-1.629-9c-3.644 9.716-13.015 16.634-24.004 16.634z\"\n      ></path>\n      <path d=\"M437.02 74.98C388.667 26.629 324.381 0 256 0S123.333 26.629 74.98 74.98C26.628 123.333 0 187.62 0 256c0 65.664 24.828 128.099 69.909 175.802a7.515 7.515 0 1010.923-10.323C38.398 376.577 15.029 317.809 15.029 256c0-64.366 25.065-124.879 70.578-170.392C131.121 40.094 191.634 15.029 256 15.029s124.879 25.065 170.392 70.579C471.905 131.121 496.97 191.634 496.97 256s-25.066 124.879-70.578 170.392C380.879 471.906 320.366 496.971 256 496.971c-56.111 0-110.745-19.706-153.838-55.487a7.515 7.515 0 00-9.601 11.563C138.346 491.063 196.389 512 256 512c68.381 0 132.667-26.629 181.02-74.98C485.372 388.667 512 324.38 512 256s-26.628-132.667-74.98-181.02z\"></path>\n      <path d=\"M402.975 109.552a7.514 7.514 0 00-.363-10.621C362.703 61.662 310.635 41.138 256 41.138c-57.391 0-111.348 22.349-151.93 62.932S41.138 198.608 41.138 256s22.349 111.348 62.932 151.931 94.539 62.931 151.93 62.931 111.348-22.349 151.931-62.931S470.862 313.392 470.862 256c0-49.329-16.259-95.72-47.02-134.156a7.514 7.514 0 10-11.734 9.39c28.605 35.743 43.724 78.886 43.724 124.766 0 110.188-89.645 199.833-199.833 199.833S56.167 366.188 56.167 256 145.812 56.167 256 56.167c50.813 0 99.238 19.088 136.354 53.748a7.512 7.512 0 0010.621-.363z\"></path>\n      <path d=\"M263.515 98.649V75.372a7.515 7.515 0 10-15.03 0v23.276a7.515 7.515 0 0015.03.001zm-15.03 314.702v23.276a7.515 7.515 0 1015.03 0v-23.276a7.515 7.515 0 10-15.03 0zm188.142-149.836a7.515 7.515 0 100-15.03h-23.276c-4.151 0-7.515 3.364-7.515 7.515s3.364 7.515 7.515 7.515zm-361.254-15.03c-4.151 0-7.515 3.364-7.515 7.515s3.364 7.515 7.515 7.515h23.276a7.515 7.515 0 100-15.03zm282.215 102.661a7.515 7.515 0 009.667-11.508l-81.672-68.603c2-3.919 3.245-8.283 3.539-12.904l47.69-48.35c8.687-8.451 8.585-23.551-.219-31.882-8.432-8.714-23.553-8.576-31.882.219l-44.363 44.977a33.14 33.14 0 00-11.013.378l-89.594-79.841c-8.887-8.252-23.953-7.381-31.831 1.833-8.269 9.28-7.447 23.559 1.833 31.829L173.1 215.93a7.516 7.516 0 0010-11.22l-43.355-38.635c-3.094-2.757-3.368-7.517-.611-10.61 2.624-3.072 7.653-3.36 10.61-.611l84.956 75.708a33.368 33.368 0 00-9.068 12.05l-20.094-17.906a7.516 7.516 0 00-9.999 11.221l27.576 24.573c2.204 16.183 16.106 28.698 32.885 28.698a33.025 33.025 0 0019.916-6.655zm-42.175-162.473c2.777-2.934 7.809-2.968 10.627-.072 2.936 2.777 2.969 7.81.072 10.627l-40.747 41.311a33.435 33.435 0 00-9.876-11.39zM256 274.169c-10.019 0-18.169-8.151-18.169-18.169s8.151-18.169 18.169-18.169c10.019 0 18.169 8.151 18.169 18.169s-8.15 18.169-18.169 18.169z\"></path>\n    </svg>\n  );\n}\n","export function GoogleIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#2196f3\"\n        d=\"M501 210c2 0 4 2 4 4v42a249 249 0 1 1-76-179v6l-60 60h-5a156 156 0 0 0-264 112 157 157 0 0 0 306 47H260c-2 0-4-2-4-4v-84c0-2 2-4 4-4z\"\n      />\n      <path\n        fill=\"#1e88e5\"\n        d=\"M501 210h-30c2 0 4 2 4 4v42a249 249 0 0 1-221 248 249 249 0 0 0 251-248v-42c0-2-2-4-4-4z\"\n      />\n      <path fill=\"#f44336\" d=\"m114 190-76-54a248 248 0 0 1 391-59v6l-60 60h-5a156 156 0 0 0-250 47z\" />\n      <path\n        fill=\"#e53935\"\n        d=\"m92 175 22 15c22-49 70-84 126-90h1l-15-1c-57 0-107 31-134 76zM399 77v6l-48 48 13 12h5l60-60v-6A248 248 0 0 0 241 8c61 4 116 29 158 69z\"\n      />\n      <path fill=\"#4caf50\" d=\"M438 425a248 248 0 0 1-404-58l77-53a157 157 0 0 0 252 56z\" />\n      <path\n        fill=\"#43a047\"\n        d=\"m111 314-23 16a156 156 0 0 0 153 82c-59-6-109-45-130-98zM256 505c72 0 137-31 182-80l-18-13c-43 53-107 88-179 92l15 1z\"\n      />\n      <path fill=\"#ffc107\" d=\"M100 256c0 21 3 40 11 58l-77 53a247 247 0 0 1 4-231l76 54c-9 20-15 43-15 66z\" />\n      <path fill=\"#ffb300\" d=\"m88 330 23-16a156 156 0 0 1 3-124l-22-15a156 156 0 0 0-4 155z\" />\n      <path d=\"M501 203h-52a8 8 0 0 0 0 15h48v38a242 242 0 0 1-60 159l-63-46c18-18 31-40 39-65a7 7 0 0 0-7-9H263v-77h153a8 8 0 0 0 0-15H260c-6 0-12 5-12 11v84c0 6 6 12 12 12h135a148 148 0 0 1-229 65 8 8 0 0 0-9 12 163 163 0 0 0 206-7l64 46a241 241 0 0 1-383-57l64-43c6 13 14 26 25 38a7 7 0 1 0 11-10 149 149 0 0 1 215-206c4 4 11 4 16 0l59-60c2-2 4-5 4-8s-2-6-4-8a255 255 0 0 0-289-47 8 8 0 0 0 7 14 239 239 0 0 1 269 41l-54 55a163 163 0 0 0-227 5c-12 11-21 25-29 39l-63-45c19-32 45-59 76-80a8 8 0 0 0-8-13 255 255 0 1 0 396 215v-42c0-6-5-11-12-11zM41 147l63 46a165 165 0 0 0-2 118l-65 45a239 239 0 0 1 4-209z\" />\n    </svg>\n  );\n}\n","export function SkullIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#dbd9dc\"\n        d=\"M249.47 7.6C122.85 11.05 23.53 118.13 23.53 244.8v139.46a56.11 56.11 0 0056.12 56.11h40.08c8.85 0 16.03 7.18 16.03 16.03v24.05a24.05 24.05 0 0024.05 24.05h192.38a24.05 24.05 0 0024.05-24.05V456.4c0-8.85 7.18-16.03 16.03-16.03h40.08a56.11 56.11 0 0056.12-56.11v-144.3c0-130.55-107.63-235.97-239-232.37z\"\n      ></path>\n      <path\n        fill=\"#c9c6ca\"\n        d=\"M143.77 416.32a40.08 40.08 0 01-40.08-40.08V244.8C103.7 129.5 186 30.49 296.25 11a234.69 234.69 0 00-65.21-2.18C112.06 21.42 23.54 125.16 23.54 244.8v139.45a56.11 56.11 0 0056.1 56.11h40.09c8.85 0 16.03 7.18 16.03 16.03v24.05a24.05 24.05 0 0024.05 24.05h24.04v-48.1a40.08 40.08 0 00-40.08-40.08z\"\n      ></path>\n      <g fill=\"#867e88\">\n        <path d=\"M248.6 361.38l-25.41 61.42a8.02 8.02 0 0010.38 10.51l16.48-6.59a16.03 16.03 0 0111.9 0l16.48 6.6a8.02 8.02 0 0010.38-10.51l-25.4-61.42a8.02 8.02 0 00-14.82 0z\"></path>\n        <circle cx=\"151.79\" cy=\"288.06\" r=\"72.14\"></circle>\n      </g>\n      <path\n        fill=\"#6f6571\"\n        d=\"M151.79 247.99c34.33 0 63 24 70.3 56.1a72.2 72.2 0 001.85-16.02 72.14 72.14 0 10-144.3 0c0 5.51.68 10.87 1.85 16.03 7.3-32.12 35.97-56.12 70.3-56.12z\"\n      ></path>\n      <circle cx=\"360.21\" cy=\"288.06\" r=\"72.14\" fill=\"#867e88\"></circle>\n      <path\n        fill=\"#6f6571\"\n        d=\"M360.21 247.99c34.33 0 63 24 70.3 56.1a72.2 72.2 0 001.84-16.02 72.14 72.14 0 10-144.29 0c0 5.51.68 10.87 1.85 16.03 7.3-32.12 35.97-56.12 70.3-56.12zM238.14 396.95c5.7-2.28 11.71-3.44 17.86-3.44s12.15 1.16 17.86 3.44l5.1 2.04-15.55-37.6a8.02 8.02 0 00-14.82 0l-15.55 37.6 5.1-2.04z\"\n      ></path>\n      <path d=\"M476.45 145.01a239.16 239.16 0 00-53.12-77.05C376.5 22.4 314.68-1.7 249.26.1c-62.94 1.73-121.78 28.28-165.7 74.76A246.52 246.52 0 0016.03 244.8v139.46a63.68 63.68 0 0063.61 63.61h40.09c4.7 0 8.53 3.83 8.53 8.53v24.05A31.58 31.58 0 00159.8 512h192.38a31.58 31.58 0 0031.55-31.55V456.4c0-4.7 3.83-8.53 8.53-8.53h40.09a63.69 63.69 0 0063.6-63.61v-144.3c0-32.97-6.56-64.91-19.51-94.95zm4.52 239.25c0 26.8-21.81 48.61-48.62 48.61h-40.08a23.56 23.56 0 00-23.53 23.53v24.05c0 9.13-7.42 16.55-16.55 16.55h-8.53v-16.55a7.5 7.5 0 00-15 0V497h-25.08v-16.55a7.5 7.5 0 00-15 0V497H263.5v-16.55a7.5 7.5 0 00-15 0V497h-25.08v-16.55a7.5 7.5 0 00-15 0V497h-25.08v-16.55a7.5 7.5 0 00-15 0V497h-8.53a16.57 16.57 0 01-16.55-16.55v-24.04a23.56 23.56 0 00-23.53-23.54H79.65a48.67 48.67 0 01-48.62-48.61V244.81A231.57 231.57 0 0194.47 85.15c41.15-43.56 96.27-68.45 155.2-70.06 2.14-.06 4.26-.09 6.38-.09 58.97 0 114.45 22.49 156.82 63.71 43.91 42.73 68.1 100 68.1 161.26v144.29z\"></path>\n      <path d=\"M270.34 358.52a15.47 15.47 0 00-14.34-9.59c-6.3 0-11.93 3.76-14.34 9.59l-25.4 61.42a15.48 15.48 0 003.3 16.84c4.4 4.45 10.99 5.82 16.8 3.5l16.47-6.6a8.5 8.5 0 016.34 0l16.47 6.6a15.53 15.53 0 0016.8-3.5 15.49 15.49 0 003.3-16.84l-25.4-61.42zm11.43 67.71c-.23.25-.39.18-.55.12l-16.48-6.6a23.5 23.5 0 00-17.48 0l-16.48 6.6c-.16.06-.31.12-.55-.12-.25-.24-.18-.4-.11-.56l25.4-61.42c.07-.16.13-.32.48-.32s.4.16.48.32l25.4 61.42c.07.16.13.32-.1.56zM87.54 281.18a63.8 63.8 0 0118.54-38.83 63.8 63.8 0 0138.82-18.54 64.98 64.98 0 0141.26 9.56 7.5 7.5 0 108-12.7 80.06 80.06 0 00-50.83-11.77 79.7 79.7 0 00-47.86 22.85 79.71 79.71 0 00-22.85 47.86 80.04 80.04 0 0011.78 50.82 7.5 7.5 0 1012.7-7.99 64.98 64.98 0 01-9.56-41.26zm131.64-35.48a7.5 7.5 0 00-12.7 8 64.98 64.98 0 019.56 41.25 63.8 63.8 0 01-18.54 38.83 63.8 63.8 0 01-38.82 18.54 64.97 64.97 0 01-41.26-9.56 7.5 7.5 0 10-8 12.7 80.01 80.01 0 0050.83 11.78c18.02-1.9 35.02-10.02 47.86-22.86s20.95-29.83 22.85-47.86a80.04 80.04 0 00-11.78-50.82zm76.74 35.48a63.8 63.8 0 0118.54-38.83 63.8 63.8 0 0138.83-18.54 64.98 64.98 0 0141.26 9.56 7.5 7.5 0 108-12.7 80.06 80.06 0 00-50.83-11.77 79.7 79.7 0 00-47.86 22.85A79.71 79.71 0 00281 279.6a80.04 80.04 0 0011.78 50.82 7.5 7.5 0 1012.69-7.99 64.97 64.97 0 01-9.56-41.26zm118.95-27.48a64.98 64.98 0 019.56 41.25 63.8 63.8 0 01-18.54 38.83 63.8 63.8 0 01-38.83 18.54 64.97 64.97 0 01-41.26-9.56 7.5 7.5 0 10-7.99 12.7 80.01 80.01 0 0050.82 11.78c18.03-1.9 35.03-10.02 47.86-22.86s20.96-29.83 22.86-47.86a80.05 80.05 0 00-11.78-50.82 7.5 7.5 0 00-12.7 8z\"></path>\n    </svg>\n  );\n}\n","import { useQuery } from '@tanstack/react-query';\nimport { DAILY_API, DAILY_API_ACTIONS } from 'services/adapters';\nimport { print } from 'utils/helpers';\nimport { DailyResponse } from '../utils/types';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { getSourceName } from '../utils';\n\nexport function useDailyChallenge(today: string) {\n  const { language } = useLanguage();\n  const collectionName = getSourceName(language);\n\n  // Load challenge\n  return useQuery<DailyResponse>({\n    queryKey: [collectionName],\n    queryFn: async () => {\n      console.count(`Fetching ${collectionName}...`);\n      const response = await DAILY_API.run({\n        action: DAILY_API_ACTIONS.GET_DAILY,\n        date: today,\n        document: collectionName,\n      });\n      const responseData = response.data as DailyResponse;\n      print({ [collectionName]: responseData }, 'table');\n      return responseData;\n    },\n    enabled: language === 'pt',\n    retry: false,\n  });\n}\n","export const SETTINGS = {\n  NAME: { pt: 'Aqui Ó', en: 'Find This' },\n  HEARTS: 3,\n  GOAL: 15,\n  TD_DAILY_AQUI_O_MODE: 'TD_AQUI_DAILY_O_MODE',\n  LOCAL_TODAY_KEY: 'TD_DAILY_AQUI_O_LOCAL_TODAY',\n};\n","export const SETTINGS = {\n  NAME: { pt: 'Arte Ruim', en: 'Questionable Art' },\n  HEARTS: 3,\n  LOCAL_TODAY_KEY: 'TD_DAILY_ARTE_RUIM_LOCAL_TODAY',\n};\n","export const SETTINGS = {\n  NAME: { pt: 'Picaço!', en: 'Big Artist' },\n  DURATION: 60,\n  DRAWINGS: 6,\n  LOCAL_TODAY_KEY: 'TD_DAILY_ARTISTA_LOCAL_TODAY',\n};\n","export const SETTINGS = {\n  NAME: { pt: 'Palavreado', en: 'Word Game' },\n  HEARTS: 4,\n  WORD_LENGTH: 4,\n  LOCAL_TODAY_KEY: 'TD_DAILY_PALAVREADO_LOCAL_TODAY',\n};\n","export const SETTINGS = {\n  NAME: { pt: 'Filmaço', en: 'Movicon' },\n  HEARTS: 3,\n  LOCAL_TODAY_KEY: 'TD_DAILY_FILMACO_LOCAL_TODAY',\n};\n","import { App, Button, Flex } from 'antd';\n\nimport { BugOutlined } from '@ant-design/icons';\n\nimport { SETTINGS as AQUI_O } from '../games/AquiO/utils/settings';\nimport { SETTINGS as ARTE_RUIM } from '../games/ArteRuim/utils/settings';\nimport { SETTINGS as ARTISTA } from '../games/Artista/utils/settings';\nimport { SETTINGS as PALAVREADO } from '../games/Palavreado/utils/settings';\nimport { SETTINGS as FILMACO } from '../games/Filmaco/utils/settings';\nimport { isDevEnv } from 'utils/helpers';\nimport { Translate } from 'components/language';\n\nconst keys = [AQUI_O, ARTE_RUIM, PALAVREADO, ARTISTA, FILMACO];\n\nexport function DevResetLocalStorageButton() {\n  const { message } = App.useApp();\n\n  const onReset = () => {\n    keys.forEach((key) => localStorage.removeItem(key.LOCAL_TODAY_KEY));\n    message.success(<Translate pt=\"LS resetado corretamente\" en=\"LS reset successfully\" />);\n  };\n\n  const onDayBefore = () => {\n    const yesterday = JSON.stringify({\n      id: '2023-10-30',\n      number: -1,\n    });\n    keys.forEach((key) => localStorage.setItem(key.LOCAL_TODAY_KEY, yesterday));\n  };\n\n  return (\n    <Flex justify=\"center\" gap={12}>\n      <Button size=\"small\" type=\"dashed\" onClick={onReset} icon={<BugOutlined />}>\n        <Translate pt=\"Resetar LS\" en=\"Reset LS\" />\n      </Button>\n      {isDevEnv && (\n        <Button size=\"small\" type=\"dashed\" onClick={onDayBefore} icon={<BugOutlined />}>\n          Yesterday LS\n        </Button>\n      )}\n    </Flex>\n  );\n}\n","import { Layout, Typography } from 'antd';\nimport { IconAvatar } from 'components/avatars';\nimport { ReactNode } from 'react';\n\ntype HeaderProps = {\n  icon: ReactNode;\n  children: ReactNode;\n};\n\nexport function Header({ icon, children }: HeaderProps) {\n  return (\n    <Layout.Header className=\"daily-header\">\n      <IconAvatar icon={icon} />\n      <Typography.Title level={1} className=\"daily-heading\">\n        {children}\n      </Typography.Title>\n    </Layout.Header>\n  );\n}\n","import { Layout } from 'antd';\nimport { Translate } from 'components/language';\nimport { CalendarIcon } from 'icons/CalendarIcon';\nimport { ReactNode, useState } from 'react';\n\nimport { useDailyChallenge } from '../hooks/useDailyChallenge';\nimport { getToday } from '../utils';\nimport { DevResetLocalStorageButton } from './DevResetLocalStorageButton';\nimport { Header } from './Header';\n\nconst { Content, Footer } = Layout;\n\ntype DailyChromeProps = {\n  children: ReactNode;\n};\n\nexport function DailyChrome({ children }: DailyChromeProps) {\n  const challengeQuery = useDailyChallenge(getToday());\n  const [count, setCount] = useState(0);\n\n  return (\n    <Layout className=\"app\">\n      <Header icon={<CalendarIcon />}>\n        <button onClick={() => setCount((prev) => prev + 1)} className=\"invisible-secret-button\">\n          <Translate pt=\"TD Diário\" en=\"TD Daily\" />\n        </button>\n      </Header>\n      {challengeQuery.isLoading ? <div className=\"loading-bar\"></div> : <></>}\n      <Content>{children}</Content>\n      {count >= 5 && (\n        <Footer>\n          <DevResetLocalStorageButton />\n        </Footer>\n      )}\n    </Layout>\n  );\n}\n","import { Alert, Button, Space } from 'antd';\nimport { useLanguage } from 'hooks/useLanguage';\n\nimport { DailyChrome } from './DailyChrome';\nimport { Translate } from 'components/language';\nimport { useNavigate } from 'react-router-dom';\n\nexport function DailyError() {\n  const { toggleLanguage, language } = useLanguage();\n  const navigate = useNavigate();\n\n  const onRedirect = () => {\n    toggleLanguage();\n    navigate(language === 'en' ? '/diario' : '/daily');\n  };\n  return (\n    <DailyChrome>\n      <Space className=\"container container--center\">\n        <Alert\n          message={\n            <Translate pt=\"O servidor decidiu não cooperar\" en=\"The server decided not to cooperate\" />\n          }\n          description={\n            <Space direction=\"vertical\">\n              <span>Você pode estar na língua errada. Clique no botão para ser redirecionado:</span>\n              <span>You might be in the wrong language. Click the button to be redirected:</span>\n              <Button type=\"primary\" onClick={onRedirect}>\n                Redirecionar/Redirect\n              </Button>\n            </Space>\n          }\n          type=\"error\"\n          showIcon\n        />\n      </Space>\n    </DailyChrome>\n  );\n}\n","import { Space } from 'antd';\nimport { Loading } from 'components/loaders';\nimport { useLanguage } from 'hooks/useLanguage';\n\nimport { DailyChrome } from './DailyChrome';\n\nexport function DailyLoading() {\n  const { translate } = useLanguage();\n  return (\n    <DailyChrome>\n      <div className=\"daily-loading\">\n        <Space className=\"space-container\">\n          <Loading message={translate('Carregando desafio...', 'Loading challenge...')} margin />\n        </Space>\n      </div>\n    </DailyChrome>\n  );\n}\n","import { Flex, Space } from 'antd';\nimport clsx from 'clsx';\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useEffect } from 'react';\n\nimport { LettersDictionary } from '../utils/types';\n\nconst NUMBERS = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0'];\nconst FIRST_ROW = ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p'];\nconst SECOND_ROW = ['a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l'];\nconst THIRD_ROW = ['z', 'x', 'c', 'v', 'b', 'n', 'm'];\n\ntype KeyboardProps = {\n  onLetterClick: GenericFunction;\n  lettersState?: LettersDictionary;\n  disabled?: boolean;\n  onEnterClick?: GenericFunction;\n  onBackspaceClick?: GenericFunction;\n  withNumbers?: boolean;\n};\n\nexport function Keyboard({\n  lettersState,\n  onLetterClick,\n  disabled,\n  onBackspaceClick,\n  onEnterClick,\n  withNumbers,\n}: KeyboardProps) {\n  const width = useCardWidth(FIRST_ROW.length + 2, { margin: 16, maxWidth: 30 });\n\n  useEffect(() => {\n    const handleKeyUp = (event: KeyboardEvent) => {\n      const key = event.key;\n      if (disabled) return;\n\n      if (key === 'Enter' && onEnterClick) {\n        return onEnterClick();\n      }\n      if (key === 'Backspace' && onBackspaceClick) {\n        return onBackspaceClick();\n      }\n      if (\n        !disabled &&\n        (FIRST_ROW.includes(key) || SECOND_ROW.includes(key) || THIRD_ROW.includes(key)) &&\n        lettersState?.[key].disabled\n      ) {\n        return onLetterClick(key);\n      }\n    };\n\n    window.addEventListener('keyup', handleKeyUp);\n\n    return () => window.removeEventListener('keyup', handleKeyUp);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <Space direction=\"vertical\" align=\"center\" className=\"daily-keyboard\" size=\"small\">\n      {withNumbers && (\n        <Flex className=\"daily-keyboard__row\">\n          {NUMBERS.map((letter) => (\n            <Key\n              key={letter}\n              width={width}\n              letter={letter}\n              state={lettersState?.[letter]?.state}\n              onLetterClick={onLetterClick}\n              disabled={disabled || lettersState?.[letter]?.disabled}\n            />\n          ))}\n        </Flex>\n      )}\n      <Flex className=\"daily-keyboard__row\">\n        {FIRST_ROW.map((letter) => (\n          <Key\n            key={letter}\n            width={width}\n            letter={letter}\n            state={lettersState?.[letter]?.state}\n            onLetterClick={onLetterClick}\n            disabled={disabled || lettersState?.[letter]?.disabled}\n          />\n        ))}\n      </Flex>\n      <Flex className=\"daily-keyboard__row\">\n        {SECOND_ROW.map((letter) => (\n          <Key\n            key={letter}\n            width={width}\n            letter={letter}\n            state={lettersState?.[letter]?.state}\n            onLetterClick={onLetterClick}\n            disabled={disabled || lettersState?.[letter]?.disabled}\n          />\n        ))}\n      </Flex>\n      <Flex className=\"daily-keyboard__row\">\n        {!!onEnterClick && (\n          <button\n            type=\"button\"\n            style={{ width }}\n            className=\"daily-keyboard__key daily-keyboard__key--enter\"\n            onClick={onEnterClick}\n            disabled={disabled}\n          >\n            Enter\n          </button>\n        )}\n        {THIRD_ROW.map((letter) => (\n          <Key\n            key={letter}\n            width={width}\n            letter={letter}\n            state={lettersState?.[letter]?.state}\n            onLetterClick={onLetterClick}\n            disabled={disabled || lettersState?.[letter]?.disabled}\n          />\n        ))}\n        {!!onBackspaceClick && (\n          <button\n            type=\"button\"\n            style={{ width }}\n            className=\"daily-keyboard__key daily-keyboard__key--backspace\"\n            onClick={onBackspaceClick}\n            disabled={disabled}\n          >\n            ⌫\n          </button>\n        )}\n      </Flex>\n    </Space>\n  );\n}\n\ntype KeyProps = {\n  letter: string;\n  width: number;\n  state?: string;\n} & Pick<KeyboardProps, 'onLetterClick' | 'disabled'>;\n\nfunction Key({ letter, state, onLetterClick, disabled }: KeyProps) {\n  const baseClassName = 'daily-keyboard__key';\n  const width = useCardWidth(FIRST_ROW.length + 2, { margin: 16, maxWidth: 30 });\n\n  return (\n    <button\n      type=\"button\"\n      data-key={letter}\n      key={letter}\n      style={{ width }}\n      className={clsx(baseClassName, `${baseClassName}--${state}`)}\n      onClick={() => onLetterClick(letter)}\n      disabled={disabled || state === 'disabled'}\n    >\n      {letter}\n    </button>\n  );\n}\n","import { AppstoreFilled, HeartFilled, HeartOutlined, QuestionCircleFilled } from '@ant-design/icons';\nimport { Button, Drawer, Space } from 'antd';\nimport { LanguageSwitch, Translate } from 'components/language';\nimport { useState } from 'react';\n\nimport { ReactNode } from 'react';\nimport { Link } from 'react-router-dom';\n\ntype MenuProps = {\n  hearts: number;\n  total: number;\n  openRules: boolean;\n  rules: ReactNode;\n};\n\nexport function Menu({ hearts, total, openRules, rules }: MenuProps) {\n  return (\n    <div className=\"menu\">\n      <DailyHubLink />\n      <Hearts remaining={hearts} total={total} />\n      <RulesModal defaultOpen={openRules} rules={rules} />\n    </div>\n  );\n}\n\ntype HeartsProps = {\n  remaining: number;\n  total: number;\n};\n\nfunction Hearts({ remaining, total }: HeartsProps) {\n  const hearts = Array(total)\n    .fill(false)\n    .map((_, i) => i < remaining);\n\n  return (\n    <div className=\"menu-hearts\">\n      {hearts.map((heart, i) => (heart ? <HeartFilled key={i} /> : <HeartOutlined key={i} />))}\n    </div>\n  );\n}\n\ntype RulesModalProps = {\n  rules: ReactNode;\n  defaultOpen: boolean;\n};\n\nfunction RulesModal({ rules, defaultOpen }: RulesModalProps) {\n  const [open, setOpen] = useState(defaultOpen);\n\n  return (\n    <>\n      <Button\n        type=\"text\"\n        style={{ color: 'white' }}\n        icon={<QuestionCircleFilled />}\n        onClick={() => setOpen(true)}\n      />\n      <Drawer\n        title={<Translate pt=\"Regras\" en=\"Rules\" />}\n        placement=\"bottom\"\n        open={open}\n        onClose={() => setOpen(false)}\n      >\n        <Space direction=\"vertical\" size=\"small\">\n          <LanguageSwitch />\n          <ul className=\"list\">{rules}</ul>\n        </Space>\n      </Drawer>\n    </>\n  );\n}\n\nfunction DailyHubLink() {\n  return (\n    <Link to=\"/diario/hub\">\n      <Button type=\"text\" style={{ color: 'white' }} icon={<AppstoreFilled />} />\n    </Link>\n  );\n}\n","import { useState } from 'react';\n\nexport function useDailyGameState<TState = PlainObject>(initialState: TState) {\n  const [state, setState] = useState<TState>(initialState);\n\n  const updateState = (newState: Partial<TState>) => {\n    setState((prev) => ({ ...prev, ...newState }));\n  };\n\n  return { state, setState, updateState };\n}\n","import { useEffect, useState } from 'react';\nimport { useLocalStorage } from 'react-use';\nimport { wait } from '../utils';\n\ntype UseDailyLocalTodayProps<TLocal> = {\n  key: string;\n  gameId: string;\n  challengeNumber: number;\n  defaultValue: TLocal;\n  onApplyLocalState?: (value: TLocal) => void;\n  disabled?: boolean;\n};\n\nexport function useDailyLocalToday<TLocal = { id: string }>({\n  key,\n  gameId,\n  challengeNumber,\n  defaultValue,\n  onApplyLocalState,\n  disabled,\n}: UseDailyLocalTodayProps<TLocal>) {\n  const [localToday, setLocalToday] = useLocalStorage<TLocal & { id: string }>(key, {\n    ...defaultValue,\n    id: gameId,\n  });\n\n  const [hasAppliedLocalToday, setHasAppliedLocalToday] = useState<boolean>(false);\n\n  useEffect(() => {\n    // If stored id is different than the current game id, reset the local storage\n    if (localToday && localToday.id !== gameId && !disabled) {\n      setLocalToday({ ...defaultValue, id: gameId, number: challengeNumber });\n      return;\n    }\n  }, [localToday, gameId, setLocalToday, defaultValue, challengeNumber, disabled]);\n\n  // Applied the stored local storage to the game\n  const stateToApply = localToday && localToday.id === gameId ? localToday : null;\n\n  const updateLocalStorage = (value: Partial<TLocal>) => {\n    setLocalToday((prev) => ({ ...(prev ?? defaultValue), id: gameId, number: challengeNumber, ...value }));\n  };\n\n  useEffect(() => {\n    if (!hasAppliedLocalToday && stateToApply && onApplyLocalState && !disabled) {\n      setHasAppliedLocalToday(true);\n      // Prevents the onApplyLocalState to be called before the useEffect to check if the id is different happens\n      (async () => {\n        await wait(250);\n\n        onApplyLocalState(stateToApply);\n      })();\n    }\n  }, [stateToApply]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return {\n    localToday,\n    updateLocalStorage,\n  };\n}\n","import { useEffect, useState } from 'react';\n\nexport function useShowResultModal(condition: boolean, onUpdate?: GenericFunction) {\n  const [showResultModal, setShowResultModal] = useState(false);\n\n  // Controls auto result modal\n  useEffect(() => {\n    if (condition) {\n      setShowResultModal(true);\n      onUpdate?.();\n    }\n  }, [condition]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return { showResultModal, setShowResultModal };\n}\n","/**\n * Returns an object with each letter in the word as a key and a boolean value indicating if the letter has been found.\n * @param text - The word to extract the letters from.\n * @returns An object with each letter in the word as a key and a boolean value indicating if the letter has been found.\n */\nexport function getLettersInWord(text: string): BooleanDictionary {\n  const cleanedUpText = text\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n    .toLowerCase();\n  const letters = cleanedUpText.split('');\n  const lettersInWord: BooleanDictionary = {};\n\n  letters.forEach((letter) => {\n    if (letter.match(/[a-zA-Z]/)) {\n      lettersInWord[letter] = false;\n    }\n  });\n\n  return lettersInWord;\n}\n\n/**\n * Removes diacritical marks from a given character and converts it to lowercase.\n *\n * @param char - The character to be cleaned up.\n * @returns The cleaned up character.\n */\nexport function cleanupLetter(char: string): string {\n  return char\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n    .toLowerCase();\n}\n\n/**\n * Checks if a character is a letter.\n *\n * @param char - The character to check.\n * @returns `true` if the character is a letter, `false` otherwise.\n */\nexport function isLetter(char: string): boolean {\n  return cleanupLetter(char).match(/[a-zA-Z]/) !== null;\n}\n","import { useDailyGameState } from 'pages/Daily/hooks/useDailyGameState';\nimport { useDailyLocalToday } from 'pages/Daily/hooks/useDailyLocalToday';\nimport { useShowResultModal } from 'pages/Daily/hooks/useShowResultModal';\nimport { LettersDictionary } from 'pages/Daily/utils/types';\nimport { removeDuplicates } from 'utils/helpers';\n\nimport { getLettersInWord } from './helpers';\nimport { SETTINGS } from './settings';\nimport { ArteRuimLocalToday, DailyArteRuimEntry } from './types';\n\ntype GameState = {\n  hearts: number;\n  solution: BooleanDictionary;\n  guesses: LettersDictionary;\n};\n\nconst defaultArteRuimLocalToday: ArteRuimLocalToday = {\n  id: '',\n  letters: [],\n  number: 0,\n};\n\nexport function useArteRuimEngine(data: DailyArteRuimEntry) {\n  const { state, setState, updateState } = useDailyGameState<GameState>({\n    solution: getLettersInWord(data.text),\n    hearts: SETTINGS.HEARTS,\n    guesses: {},\n  });\n\n  const { localToday, updateLocalStorage } = useDailyLocalToday<ArteRuimLocalToday>({\n    key: SETTINGS.LOCAL_TODAY_KEY,\n    gameId: data.id,\n    challengeNumber: data.number ?? 0,\n    defaultValue: defaultArteRuimLocalToday,\n    onApplyLocalState: (value) => {\n      let hearts = SETTINGS.HEARTS;\n      let solution = { ...state.solution };\n      const guesses = value.letters.reduce((acc: LettersDictionary, letter) => {\n        const isCorrect = state.solution[letter] !== undefined;\n        if (state.solution[letter] !== undefined) {\n          solution = { ...solution, [letter]: true };\n        }\n        acc[letter] = {\n          letter: letter,\n          state: isCorrect ? 'correct' : 'incorrect',\n          disabled: true,\n        };\n        hearts = isCorrect ? hearts : hearts - 1;\n        return acc;\n      }, {});\n\n      updateState({\n        guesses,\n        hearts,\n        solution,\n      });\n    },\n  });\n\n  // ACTIONS\n  const guessLetter = (letter: string) => {\n    // Ignore previously guessed letters\n    if (state.guesses[letter]) {\n      return;\n    }\n\n    const isCorrect = state.solution[letter] !== undefined;\n\n    updateLocalStorage({\n      letters: removeDuplicates([...(localToday?.letters ?? []), letter]),\n    });\n\n    const solution = { ...state.solution };\n    if (isCorrect) {\n      solution[letter] = true;\n    }\n\n    setState((prev) => ({\n      ...prev,\n      guesses: {\n        ...prev.guesses,\n        [letter]: {\n          letter: letter,\n          state: isCorrect ? 'correct' : 'incorrect',\n          disabled: true,\n        },\n      },\n      solution,\n      hearts: isCorrect ? prev.hearts : prev.hearts - 1,\n    }));\n  };\n\n  // CONDITIONS\n  const isWin = Object.values(state.solution)\n    .filter((value) => value !== undefined)\n    .every(Boolean);\n  const isLose = state.hearts <= 0;\n  const isComplete = isWin || isLose;\n\n  // RESULTS MODAL\n  const { showResultModal, setShowResultModal } = useShowResultModal(isWin || isLose || isComplete);\n\n  return {\n    hearts: state.hearts,\n    guesses: state.guesses,\n    solution: state.solution,\n    showResultModal,\n    setShowResultModal,\n    isWin,\n    isLose,\n    isComplete,\n    guessLetter,\n  };\n}\n","import { Carousel } from 'antd';\nimport { CanvasSVG } from 'components/canvas';\nimport { useCardWidth } from 'hooks/useCardWidth';\n\ntype DrawingCarouselProps = {\n  drawings: string[];\n};\n\nexport function DrawingCarousel({ drawings }: DrawingCarouselProps) {\n  const width = useCardWidth(1, { margin: 64, maxWidth: 250, minWidth: 150 });\n\n  return (\n    <Carousel autoplay className=\"carousel\" autoplaySpeed={4000}>\n      {drawings.map((d: string) => (\n        <CanvasSVG key={d} drawing={d} width={width} height={width} className=\"canvas\" />\n      ))}\n    </Carousel>\n  );\n}\n","import { Avatar, Space } from 'antd';\nimport { IconAvatar } from 'components/avatars';\nimport { BoxBlankIcon } from 'icons/BoxBlankIcon';\nimport { LettersDictionary } from 'pages/Daily/utils/types';\nimport { useMemo } from 'react';\n\nimport { cleanupLetter, isLetter } from '../utils/helpers';\n\ntype PromptProps = {\n  text: string;\n  guesses: LettersDictionary;\n};\n\nexport function Prompt({ text, guesses }: PromptProps) {\n  const prompt = useMemo(() => text.split(' ').map((word) => word.split('')), [text]);\n  return (\n    <Space className=\"prompt\" wrap align=\"center\">\n      {prompt.map((word, i, p) => {\n        return (\n          <Space key={`word-${i}`} className=\"prompt-word\" wrap align=\"center\">\n            {word.map((l, j) => {\n              const letter = cleanupLetter(l);\n              const isCorrect = guesses?.[letter]?.state === 'correct';\n              const key = `${j}-${l}-${i}`;\n              if (isLetter(letter)) {\n                return isCorrect ? (\n                  <Avatar key={key} className=\"letter-correct\" shape=\"square\">\n                    {l}\n                  </Avatar>\n                ) : (\n                  <IconAvatar key={key} icon={<BoxBlankIcon />} className=\"letter-blank\" />\n                );\n              }\n\n              return (\n                <Avatar key={key} shape=\"square\">\n                  {l}\n                </Avatar>\n              );\n            })}\n            {i + 1 < p.length && <Avatar shape=\"square\"></Avatar>}\n          </Space>\n        );\n      })}\n    </Space>\n  );\n}\n","import { App, Input, Space, Typography } from 'antd';\nimport { TransparentButton } from 'components/buttons';\nimport { Translate } from 'components/language';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useEffect } from 'react';\nimport { useCopyToClipboard } from 'react-use';\n\ntype CopyToClipboardResultProps = {\n  result: string;\n  rows?: number;\n};\n\nexport function CopyToClipboardResult({ result, rows = 4 }: CopyToClipboardResultProps) {\n  const { message } = App.useApp();\n  const { translate } = useLanguage();\n  const [state, copyToClipboard] = useCopyToClipboard();\n\n  useEffect(() => {\n    if (state.value) {\n      message.info(\n        translate(\n          `Copiado para a área de transferência: ${state.value}`,\n          `Copied to clipboard: ${state.value}`\n        )\n      );\n    }\n  }, [state, message, translate]);\n\n  return (\n    <Space direction=\"vertical\" className=\"space-container full-width\">\n      <TransparentButton onClick={() => copyToClipboard(result)}>\n        <Input.TextArea value={result} readOnly cols={30} rows={rows} />\n      </TransparentButton>\n\n      <Typography.Paragraph className=\"center\">\n        <Translate\n          pt=\"Clique no campo acima para copiar e compartilhe com os amigos\"\n          en=\"Click the field above to copy and share it with friends\"\n        />\n      </Typography.Paragraph>\n    </Space>\n  );\n}\n","import { Space, Typography } from 'antd';\nimport { IconAvatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { TextHighlight } from 'components/text';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { BoxXIcon } from 'icons/BoxXIcon';\nimport { DailyDrawingGameIcon } from 'icons/DailyDrawingGameIcon';\nimport { TrophyIcon } from 'icons/TrophyIcon';\nimport { getDailyName, getSourceName, writeHeartResultString } from 'pages/Daily/utils';\nimport { Link } from 'react-router-dom';\n\nimport { CopyToClipboardResult } from '../../../components/CopyToClipboardResult';\nimport { SETTINGS } from '../utils/settings';\n\ntype ResultsModalContentProps = {\n  challenge: number;\n  text: string;\n  win: boolean;\n  hearts: number;\n  solution: BooleanDictionary;\n};\n\nexport function ResultsModalContent({ text, challenge, win, hearts, solution }: ResultsModalContentProps) {\n  const { language, dualTranslate } = useLanguage();\n\n  const result = writeResult({\n    game: dualTranslate(SETTINGS.NAME),\n    challenge,\n    remainingHearts: hearts,\n    solution,\n    language,\n  });\n\n  return (\n    <Space direction=\"vertical\" className=\"space-container\">\n      <Typography.Title level={2} className=\"center\">\n        {win ? (\n          <>\n            <IconAvatar icon={<TrophyIcon />} /> <Translate pt=\"Parabéns!\" en=\"Congratulations!\" />\n          </>\n        ) : (\n          <>\n            <IconAvatar icon={<BoxXIcon />} /> <Translate pt=\"Que pena!\" en=\"Too bad!\" />\n          </>\n        )}\n      </Typography.Title>\n      <Typography.Paragraph className=\"center\">\n        {win ? (\n          <Translate pt=\"Você acertou a palavra!\" en=\"You guessed the word!\" />\n        ) : (\n          <Translate pt=\"Você errou a palavra!\" en=\"You missed the word!\" />\n        )}\n      </Typography.Paragraph>\n\n      <TextHighlight className=\"result-answer\">\n        <Typography.Paragraph className=\"text-center\">{text}</Typography.Paragraph>\n      </TextHighlight>\n\n      <CopyToClipboardResult result={result} rows={3} />\n\n      <Typography.Paragraph className=\"center\" strong>\n        Já desenhou hoje? Novas frases todos os dias!\n        <br />\n        <IconAvatar icon={<DailyDrawingGameIcon />} />\n        <Link to=\"/diario/artista\">Picaço!</Link>\n      </Typography.Paragraph>\n    </Space>\n  );\n}\n\nfunction writeResult({\n  game,\n  challenge,\n  remainingHearts,\n  solution,\n  language,\n}: {\n  game: string;\n  challenge: number;\n  remainingHearts: number;\n  solution: BooleanDictionary;\n  language: Language;\n}) {\n  const totalLetters = Object.keys(solution).length;\n  const guessedLetters = Object.values(solution).filter(Boolean).length;\n\n  return [\n    `💻 ${getDailyName(language)} ${game} #${challenge}`,\n    `${writeHeartResultString(remainingHearts, SETTINGS.HEARTS)} (${Math.round((guessedLetters / totalLetters) * 100)}%)`,\n    `https://www.kavispires.com/tardedivertida/#/${getSourceName(language)}`,\n  ].join('\\n');\n}\n","import { HeartFilled } from '@ant-design/icons';\nimport { Typography } from 'antd';\nimport { Translate } from 'components/language';\n\nexport function Rules() {\n  return (\n    <Typography>\n      <Translate\n        pt={\n          <>\n            <li>Tente adivinhar a expressão secreta observando os desenhos.</li>\n            <li>Você deve apertar letra por letra até que o nome esteja completo.</li>\n            <li>\n              Cada letra que você aperta que não está presente na resposta remove um coração e você tem apenas\n              3 <HeartFilled />.\n            </li>\n            <li>Boa sorte!</li>\n          </>\n        }\n        en={\n          <>\n            <li>Try to guess the secret expression by looking at the drawings.</li>\n            <li>You must press letter by letter until the name is complete.</li>\n            <li>\n              Each letter you press that is not present in the answer removes a heart and you only have 3{' '}\n              <HeartFilled />.\n            </li>\n            <li>Good luck!</li>\n          </>\n        }\n      />\n    </Typography>\n  );\n}\n","import { Button, Layout, Modal, Space } from 'antd';\nimport { DualTranslate, Translate } from 'components/language';\nimport { DailyArtGameIcon } from 'icons/DailyArtGameIcon';\nimport { Keyboard } from 'pages/Daily/components/Keyboard';\nimport { Me } from 'types/user';\n\nimport { BarChartOutlined } from '@ant-design/icons';\n\nimport { Header } from '../../../components/Header';\nimport { Menu } from '../../../components/Menu';\nimport { SETTINGS } from '../utils/settings';\nimport { DailyArteRuimEntry } from '../utils/types';\nimport { useArteRuimEngine } from '../utils/useArteRuimEngine';\nimport { DrawingCarousel } from './DrawingCarousel';\nimport { Prompt } from './Prompt';\nimport { ResultsModalContent } from './ResultsModalContent';\nimport { Rules } from './Rules';\n\ntype DailyArteRuimProps = {\n  data: DailyArteRuimEntry;\n  currentUser: Me;\n};\n\nexport function DailyArteRuim({ data }: DailyArteRuimProps) {\n  const { hearts, guesses, showResultModal, setShowResultModal, isWin, isComplete, guessLetter, solution } =\n    useArteRuimEngine(data);\n\n  return (\n    <Layout className=\"app\">\n      <Header icon={<DailyArtGameIcon />}>\n        TD <DualTranslate>{SETTINGS.NAME}</DualTranslate> #{data.number}\n      </Header>\n      <Layout.Content>\n        <Menu\n          hearts={hearts}\n          total={SETTINGS.HEARTS}\n          openRules={!isComplete || hearts === SETTINGS.HEARTS}\n          rules={<Rules />}\n        />\n\n        <DrawingCarousel drawings={data.drawings} />\n\n        <Prompt text={data.text} guesses={guesses} />\n\n        {isComplete && (\n          <Space className=\"results-container\" direction=\"vertical\" align=\"center\">\n            <Button onClick={() => setShowResultModal(true)} type=\"primary\" icon={<BarChartOutlined />}>\n              <Translate pt=\"Ver Resultado\" en=\"Show Results\" />\n            </Button>\n          </Space>\n        )}\n        <Modal\n          title={<Translate pt=\"Resultado\" en=\"Results\" />}\n          open={showResultModal}\n          onCancel={() => setShowResultModal(false)}\n          okButtonProps={{ hidden: true }}\n          cancelButtonProps={{ hidden: true }}\n        >\n          <ResultsModalContent\n            challenge={data.number}\n            win={isWin}\n            hearts={hearts}\n            text={data.text}\n            solution={solution}\n          />\n        </Modal>\n\n        <Keyboard lettersState={guesses} onLetterClick={guessLetter} disabled={isComplete} />\n      </Layout.Content>\n    </Layout>\n  );\n}\n","import './utils/styles.scss';\n\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\nimport { DailyError } from 'pages/Daily/components/DailyError';\nimport { DailyLoading } from 'pages/Daily/components/DailyLoading';\n\nimport { useDailyChallenge } from '../../hooks/useDailyChallenge';\nimport { getToday } from '../../utils';\nimport { DailyArteRuim } from './components/DailyArteRuim';\n\nexport function DailyArteRuimGame() {\n  const { currentUser } = useCurrentUserContext();\n  const today = getToday();\n\n  // Load challenge\n  const challengeQuery = useDailyChallenge(`${today}`);\n\n  if (challengeQuery.isLoading) {\n    return <DailyLoading />;\n  }\n\n  const dailyData = challengeQuery?.data?.['arte-ruim'];\n\n  if (challengeQuery.isError || !dailyData) {\n    return <DailyError />;\n  }\n\n  return <DailyArteRuim data={dailyData} currentUser={currentUser} />;\n}\n","import { Space, Typography } from 'antd';\nimport { TransparentButton } from 'components/buttons';\nimport { LanguageSwitch, Translate } from 'components/language';\nimport { DailyDrawingGameIcon } from 'icons/DailyDrawingGameIcon';\nimport { DailyFindingGameIcon } from 'icons/DailyFindingGameIcon';\nimport { DailyGroupingGameIcon } from 'icons/DailyGroupingGameIcon';\nimport { DailyWordGameIcon } from 'icons/DailyWordGameIcon';\nimport { Link } from 'react-router-dom';\n\nimport { DailyChrome } from '../components/DailyChrome';\nimport { DailyArtGameIcon } from 'icons/DailyArtGameIcon';\nimport { DailyCrimeGameIcon } from 'icons/DailyCrimeGameIcon';\nimport { DailyImagesGameIcon } from 'icons/DailyImagesGameIcon';\nimport { DailyMovieGameIcon } from 'icons/DailyMovieGameIcon';\n\nexport function Hub() {\n  // Pre-load challenges\n\n  return (\n    <DailyChrome>\n      <div className=\"hub\">\n        <Typography.Title level={5}>\n          <Translate pt=\"Escolha um jogo\" en=\"Choose a game\" />\n        </Typography.Title>\n        <Space className=\"space-container\">\n          <LanguageSwitch />\n        </Space>\n\n        <div className=\"hub-list\">\n          <TransparentButton hoverType=\"sepia\">\n            <Link to=\"/diario/arte-ruim\" className=\"hub-item\">\n              <DailyArtGameIcon style={{ width: 75 }} />\n              <Translate pt=\"Arte Ruim\" en=\"Questionable Art\" />\n            </Link>\n          </TransparentButton>\n\n          <TransparentButton hoverType=\"sepia\">\n            <Link to=\"/diario/aqui-o\" className=\"hub-item\">\n              <DailyFindingGameIcon style={{ width: 75 }} />\n              <Translate pt=\"Aqui Ó\" en=\"Find This\" />\n            </Link>\n          </TransparentButton>\n\n          <TransparentButton hoverType=\"sepia\" className=\"hub-item\">\n            <Link to=\"/diario/filmaco\" className=\"hub-item\">\n              <DailyMovieGameIcon style={{ width: 75 }} />\n              <Translate pt=\"Filmaço\" en=\"Movicon\" />\n            </Link>\n          </TransparentButton>\n\n          <TransparentButton hoverType=\"sepia\" className=\"hub-item\">\n            <Link to=\"/diario/palavreado\" className=\"hub-item\">\n              <DailyWordGameIcon style={{ width: 75 }} />\n              <Translate pt=\"Palavreado\" en=\"Rewording\" />\n            </Link>\n          </TransparentButton>\n\n          <TransparentButton hoverType=\"sepia\" className=\"hub-item\">\n            <Link to=\"/diario/artista\" className=\"hub-item\">\n              <DailyDrawingGameIcon style={{ width: 75 }} />\n              <Translate pt=\"Picaço!\" en=\"Big Artist!\" />\n            </Link>\n          </TransparentButton>\n\n          <TransparentButton hoverType=\"sepia\" disabled className=\"hub-item-disabled\">\n            <Link to=\"/diario\" className=\"hub-item\">\n              <DailyGroupingGameIcon style={{ width: 75 }} />\n              <Translate pt=\"Quarteto\" en=\"Connect Four\" />\n            </Link>\n          </TransparentButton>\n\n          <TransparentButton hoverType=\"sepia\" disabled className=\"hub-item-disabled\">\n            <Link to=\"/diario\" className=\"hub-item\">\n              <DailyCrimeGameIcon style={{ width: 75 }} />\n              <Translate pt=\"Crime Hediondo\" en=\"Horrible Crimes\" />\n            </Link>\n          </TransparentButton>\n\n          <TransparentButton hoverType=\"sepia\" disabled className=\"hub-item-disabled\">\n            <Link to=\"/diario\" className=\"hub-item\">\n              <DailyImagesGameIcon style={{ width: 75 }} />\n              <Translate pt=\"Imagine\" en=\"Imagine\" />\n            </Link>\n          </TransparentButton>\n        </div>\n      </div>\n    </DailyChrome>\n  );\n}\n","import { sample } from 'lodash';\nimport { print } from 'utils/helpers';\n\nimport { useQuery } from '@tanstack/react-query';\n\nimport { wait } from '../../../utils';\nimport { AquiOSet, DailyAquiOEntry } from '../utils/types';\nimport miscSets from './misc-sets.json';\n\nconst MISC_SETS: AquiOSet[] = miscSets;\n\nexport function useRandomAquiOChallenge(collectionName: string) {\n  // Load challenge\n  return useQuery<DailyAquiOEntry>({\n    queryKey: [collectionName, 'aqui-o', 'random'],\n    queryFn: async () => {\n      console.count(`Creating Ache Isso ${collectionName}...`);\n      // Build game getting the set based on today's date\n      await wait(150);\n\n      const chosenSet = sample(MISC_SETS)!;\n\n      const gameData: DailyAquiOEntry = {\n        id: 'random',\n        type: 'aqui-o',\n        setId: chosenSet.title.en,\n        title: chosenSet.title,\n        itemsIds: chosenSet.itemsIds,\n        number: 0,\n      };\n\n      print({ [collectionName]: gameData }, 'table');\n      return gameData;\n    },\n    retry: false,\n  });\n}\n","import { chain, random, sample, sampleSize, shuffle } from 'lodash';\nimport { SEPARATOR } from 'utils/constants';\n\nimport { AquiODisc, DailyAquiOEntry } from './types';\n\nexport const getDiscs = (entry: DailyAquiOEntry, challengingGame?: boolean): AquiODisc[] => {\n  const allItems = shuffle(entry.itemsIds);\n\n  const discs: AquiODisc[] = [];\n\n  for (let i = 0; i < 17; i++) {\n    const previousCard = discs[i - 1];\n\n    const card = createCards(allItems, previousCard, challengingGame ? discs[i - 1]?.match : undefined);\n    discs.push(card);\n  }\n\n  return discs;\n};\n\nconst POSITIONS = Array(9)\n  .fill(0)\n  .map((_, i) => i);\nconst SIZES = [100, 90, 110, 80, 105, 130, 120, 150];\n\nconst Z_INDEXES: NumberDictionary = {\n  80: 7,\n  90: 6,\n  100: 5,\n  105: 4,\n  110: 3,\n  120: 2,\n  130: 1,\n  150: 0,\n};\n\nfunction createCards(list: string[], previousCard?: AquiODisc, previousMatchId?: string): AquiODisc {\n  const shuffledList = shuffle(list);\n  const randomPositions = shuffle(POSITIONS);\n  const randomSizes = shuffle(SIZES);\n\n  if (!previousCard) {\n    const items = sampleSize(shuffledList, 8).map((itemId, i) => ({\n      itemId,\n      position: randomPositions[i],\n      size: randomSizes[i],\n      rotation: random(0, 360),\n      zIndex: Z_INDEXES[randomSizes[i]],\n    }));\n\n    return {\n      id: items.map((item) => item.itemId).join(SEPARATOR),\n      items,\n    };\n  }\n\n  const previousCardItems = previousCard.items.map((item) => item.itemId);\n\n  const newCardItems = chain(shuffledList).difference(previousCardItems).take(7).value();\n  const matchingItem =\n    sample(previousCardItems.filter((item) => item !== previousMatchId)) ?? previousCardItems[0];\n\n  const items = shuffle([...newCardItems, matchingItem]).map((itemId, i) => ({\n    itemId,\n    position: randomPositions[i],\n    size: randomSizes[i],\n    rotation: random(0, 360),\n    zIndex: Z_INDEXES[randomSizes[i]],\n  }));\n\n  return {\n    id: items.map((item) => item.itemId).join(SEPARATOR),\n    items,\n    match: matchingItem,\n  };\n}\n","import { useCountdown } from 'hooks/useCountdown';\nimport { intersectionBy } from 'lodash';\nimport { useDailyLocalToday } from 'pages/Daily/hooks/useDailyLocalToday';\nimport { useShowResultModal } from 'pages/Daily/hooks/useShowResultModal';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useLocalStorage } from 'react-use';\nimport { inNSeconds } from 'utils/helpers';\n\nimport { getDiscs } from './helpers';\nimport { SETTINGS } from './settings';\nimport { AquiODisc, AquiOLocalToday, DailyAquiOEntry } from './types';\n\ntype GameState = {\n  hearts: number;\n  goal: number;\n  discs: AquiODisc[];\n  discIndex: number;\n  attempts: number;\n};\n\nconst defaultAquiOLocalToday: AquiOLocalToday = {\n  id: '',\n  number: 0,\n  discs: 0,\n  hardMode: false,\n  attempts: 0,\n  hearts: SETTINGS.HEARTS,\n};\n\nexport function useAquiOEngine(data: DailyAquiOEntry, isRandomGame: boolean) {\n  const [timesUp, setTimesUp] = useState(false);\n\n  const [mode, setMode] = useLocalStorage(SETTINGS.TD_DAILY_AQUI_O_MODE, 'normal');\n\n  const [state, setState] = useState<GameState>({\n    hearts: SETTINGS.HEARTS,\n    goal: SETTINGS.GOAL,\n    discs: [],\n    discIndex: 0,\n    attempts: 0,\n  });\n\n  const { localToday, updateLocalStorage } = useDailyLocalToday<AquiOLocalToday>({\n    key: SETTINGS.LOCAL_TODAY_KEY,\n    gameId: data.id,\n    challengeNumber: data.number,\n    defaultValue: defaultAquiOLocalToday,\n    disabled: isRandomGame,\n    onApplyLocalState: (value) => {\n      setState((prev) => ({\n        ...prev,\n        discIndex: value.discs,\n        attempts: value.attempts,\n        hearts: value.hearts,\n      }));\n    },\n  });\n\n  // ADDITIONAL STATE\n  const discA = state.discs[state.discIndex];\n  const discB = state.discs[state.discIndex + 1];\n\n  const result = useMemo(\n    () => intersectionBy(discA?.items ?? [], discB?.items ?? [], 'itemId')?.[0]?.itemId,\n    [discA, discB]\n  );\n\n  // TIMER\n  const { timeLeft, isRunning, restart, pause } = useCountdown({\n    duration: 60,\n    autoStart: false,\n    onExpire: () => {\n      setTimesUp(true);\n      if (!isRandomGame) {\n        updateLocalStorage({\n          hardMode: mode === 'challenge',\n          attempts: state.attempts,\n          hearts: state.hearts,\n          discs: state.discIndex > (localToday?.discs ?? 0) ? state.discIndex : localToday?.discs ?? 0,\n        });\n      }\n    },\n  });\n\n  // ACTIONS\n  const onStart = () => {\n    setState((prev) => ({\n      ...prev,\n      discs: getDiscs(data, mode === 'challenge'),\n      discIndex: 0,\n      attempts: prev.attempts + 1,\n    }));\n    restart(inNSeconds(60), true);\n  };\n\n  const onSelect = (itemId: string) => {\n    if (itemId === result) {\n      setState((prev) => ({ ...prev, discIndex: prev.discIndex + 1 }));\n    } else {\n      setState((prev) => ({ ...prev, hearts: prev.hearts - 1 }));\n    }\n  };\n\n  // CONDITIONS\n  const isWin = state.discIndex === SETTINGS.GOAL;\n  const isLose = state.hearts <= 0;\n  const isComplete = (isWin || isLose || timesUp || state.attempts > 0) && !isRunning;\n\n  useEffect(() => {\n    if (isWin || isLose) {\n      pause();\n      setTimesUp(true);\n    }\n  }, [isWin, isLose]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // RESULTS MODAL\n  const { showResultModal, setShowResultModal } = useShowResultModal(isComplete, () => pause());\n\n  return {\n    hearts: state.hearts,\n    discIndex: state.discIndex,\n    attempts: state.attempts,\n    showResultModal,\n    setShowResultModal,\n    isWin,\n    isLose,\n    isComplete,\n    onStart,\n    onSelect,\n    timeLeft,\n    mode,\n    setMode,\n    discA,\n    discB,\n    result,\n    isPlaying: isRunning,\n    localToday,\n  };\n}\n","import clsx from 'clsx';\nimport { ItemCard } from 'components/cards/ItemCard';\n\nimport { AquiODisc } from '../utils/types';\n\ntype DiscProps = {\n  disc: AquiODisc;\n  onSelect: (itemId: string) => void;\n  width: number;\n  className: string;\n};\nexport function Disc({ disc, onSelect, width, className }: DiscProps) {\n  return (\n    <div className={clsx('aqui-o-disc', className)} style={{ width: width, height: width }}>\n      {disc.items.map((item) => (\n        <div\n          key={item.itemId}\n          className={clsx('aqui-o-disc-item', `aqui-o-disc-item--pos-${item.position}`)}\n          style={{\n            transform: `rotate(${item.rotation}deg) scale(${item.size / 100})`,\n            zIndex: item.zIndex,\n          }}\n          role=\"button\"\n          onClick={() => onSelect(item.itemId)}\n        >\n          <ItemCard id={item.itemId} className=\"aqui-o-disc-sprite\" width={width / 4} />\n        </div>\n      ))}\n    </div>\n  );\n}\n","import { ItemCard } from 'components/cards/ItemCard';\n\ntype PreloadItemsProps = {\n  items: string[];\n};\n\nexport function PreloadItems({ items }: PreloadItemsProps) {\n  return (\n    <div style={{ display: 'none' }}>\n      {items.map((itemId) => (\n        <ItemCard key={itemId} id={itemId} className=\"transparent\" width={1} />\n      ))}\n    </div>\n  );\n}\n","import { Flex, Space, Typography } from 'antd';\nimport clsx from 'clsx';\nimport { IconAvatar } from 'components/avatars';\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { Translate } from 'components/language';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { ApplauseIcon } from 'icons/ApplauseIcon';\nimport { SealOfApprovalIcon } from 'icons/SealOfApprovalIcon';\nimport { SkullIcon } from 'icons/SkullIcon';\nimport { TrophyIcon } from 'icons/TrophyIcon';\nimport { getDailyName, getSourceName, writeHeartResultString } from 'pages/Daily/utils';\nimport { getAnimationClass } from 'utils/helpers';\n\nimport { CopyToClipboardResult } from '../../../components/CopyToClipboardResult';\nimport { SETTINGS } from '../utils/settings';\nimport { AquiOLocalToday } from '../utils/types';\n\nconst titles = [\n  <>\n    <IconAvatar icon={<SkullIcon />} /> <Translate pt=\"Você é muito ruim!\" en=\"You are really bad!\" />\n  </>,\n  <>\n    <IconAvatar icon={<SealOfApprovalIcon />} /> <Translate pt=\"Foi bem mais ou menos!\" en=\"Pretty Weak!\" />\n  </>,\n  <>\n    <IconAvatar icon={<ApplauseIcon />} /> <Translate pt=\"Muito bom!\" en=\"Very good!\" />\n  </>,\n  <>\n    <IconAvatar icon={<TrophyIcon />} /> <Translate pt=\"Parabéns!\" en=\"Congratulations!\" />\n  </>,\n  <>\n    <IconAvatar icon={<TrophyIcon />} /> <Translate pt=\"Incrível!\" en=\"Incredible!\" />\n  </>,\n];\n\nconst getTitle = (progress: number, remainingHearts: number) => {\n  if (progress <= 3 || remainingHearts === 0) return titles[0];\n  if (progress <= 8) return titles[1];\n  if (progress <= 10) return titles[2];\n  if (progress < 15) return titles[3];\n\n  return titles[4];\n};\n\ntype ResultsModalContentProps = {\n  challengeTitle: string;\n  challengeNumber: number;\n  hearts: number;\n  progress: number;\n  itemsIds: string[];\n  isRandomGame: boolean;\n  hardMode: boolean;\n  lastMatch: string;\n  localToday?: AquiOLocalToday;\n};\n\nexport function ResultsModalContent({\n  challengeTitle,\n  challengeNumber,\n  hearts,\n  progress,\n  itemsIds,\n  isRandomGame,\n  hardMode,\n  lastMatch,\n  localToday,\n}: ResultsModalContentProps) {\n  const { language, dualTranslate } = useLanguage();\n  const result = writeResult({\n    game: dualTranslate(SETTINGS.NAME),\n    title: challengeTitle,\n    remainingHearts: hearts,\n    totalHearts: SETTINGS.HEARTS,\n    progress,\n    goal: SETTINGS.GOAL,\n    language,\n    hardMode,\n    challengeNumber,\n  });\n\n  const title = getTitle(progress, hearts);\n  const better = (localToday?.discs ?? 0) > progress;\n\n  return (\n    <Space direction=\"vertical\" className=\"space-container\">\n      <Typography.Title level={2} className=\"center\">\n        {title}\n      </Typography.Title>\n      <Typography.Paragraph className=\"center\">\n        <Translate\n          pt={`Você avançou ${progress} discos de ${SETTINGS.GOAL}.`}\n          en={`You advanced ${progress} discs out of ${SETTINGS.GOAL}.`}\n        />\n        <br />\n      </Typography.Paragraph>\n      {!isRandomGame && (\n        <Typography.Paragraph className=\"center\">\n          <Translate\n            pt=\"Você pode tentar novamente até conseguir 15 ou até não ter mais corações.\"\n            en=\"You can try again until you reach 15 or until you run out of hearts.\"\n          />\n          {better && (\n            <>\n              <br />\n              <Translate\n                pt={`Seu melhor hoje foi de ${progress} discos. Tente novamente!`}\n                en={`Your best today was ${progress} discs. Try again!`}\n              />\n            </>\n          )}\n        </Typography.Paragraph>\n      )}\n\n      <Flex gap={6}>\n        {!!lastMatch && (\n          <ItemCard\n            id={lastMatch}\n            width={45}\n            className={clsx(getAnimationClass('pulse', { speed: 'fast' }), 'item-match-outline')}\n          />\n        )}\n        {itemsIds\n          .filter((id) => id !== lastMatch)\n          .slice(0, Math.floor((progress - 1) / 3))\n          .map((id, index) => (\n            <ItemCard\n              key={id}\n              id={id}\n              width={45}\n              className={getAnimationClass('pulse', { speed: 'fast', delay: index * 0.5 })}\n            />\n          ))}\n      </Flex>\n\n      {!isRandomGame ? (\n        <CopyToClipboardResult result={result} rows={4} />\n      ) : (\n        <Typography.Paragraph className=\"center\">\n          <Translate\n            pt=\"Baralhos aleatórios não são compartilháveis, mas você pode jogar mais.\"\n            en=\"Random decks are not shareable, but you can play more.\"\n          />\n        </Typography.Paragraph>\n      )}\n    </Space>\n  );\n}\n\nfunction writeResult({\n  game,\n  title,\n  challengeNumber,\n  remainingHearts,\n  totalHearts,\n  progress,\n  goal,\n  language,\n  hardMode,\n}: {\n  game: string;\n  title: string;\n  challengeNumber: number;\n  remainingHearts: number;\n  totalHearts: number;\n  progress: number;\n  goal: number;\n  language: Language;\n  hardMode: boolean;\n}): string {\n  return [\n    `🔘 ${getDailyName(language)} ${game} #${challengeNumber}`,\n    `${title}${hardMode ? '*' : ''}: ${progress}/${goal} ${writeHeartResultString(remainingHearts, totalHearts)}`,\n    `https://www.kavispires.com/tardedivertida/#/${getSourceName(language)}`,\n  ].join('\\n');\n}\n","import { Alert } from 'antd';\nimport { Translate } from 'components/language';\n\nexport function BetaBanner() {\n  return (\n    <Alert\n      message={\n        <Translate\n          pt=\"Jogo em fase de testes. Reporte qualquer problema.\"\n          en=\"Game in beta mode. Report any bugs!\"\n        />\n      }\n      type=\"warning\"\n      showIcon\n      banner\n    />\n  );\n}\n","import { Typography } from 'antd';\nimport { Translate } from 'components/language';\n\nimport { HeartFilled } from '@ant-design/icons';\n\nimport { BetaBanner } from '../../../components/BetaBanner';\n\nexport function Rules() {\n  return (\n    <Typography>\n      <BetaBanner />\n      <Translate\n        pt={\n          <>\n            <li>Você é apresentado com dois discos com 8 itens cada.</li>\n            <li>Existe apenas um item que é comum nos dois discos, clique nele o mais rápido possível.</li>\n            <li>Você tem 60 segundos para acertar o maior número de discos.</li>\n            <li>\n              Cada item errado que você clica, remove-se um coração e você tem apenas 3 <HeartFilled />.\n            </li>\n            <li>\n              <strong>Modo difícil:</strong> Itens nunca repetem em sequência.\n            </li>\n            <li>Boa sorte e cuidado com dedos gordos!</li>\n          </>\n        }\n        en={\n          <>\n            <li>You are presented with two discs with 8 items each.</li>\n            <li>There is only one item that is common in both discs, click on it as quickly as possible.</li>\n            <li>You have 60 seconds to hit the most discs.</li>\n            <li>\n              Each wrong item you click, a heart is removed and you only have 3 <HeartFilled />.\n            </li>\n            <li>\n              <strong>Hard mode:</strong> Items never repeat in sequence.\n            </li>\n            <li>Good luck and watch out for fat fingers!</li>\n          </>\n        }\n      />\n    </Typography>\n  );\n}\n","import { Button, Divider, FloatButton, Layout, Modal, Space, Switch, Typography } from 'antd';\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { DualTranslate, Translate } from 'components/language';\nimport { TimerBar } from 'components/timers';\nimport { DailyFindingGameIcon } from 'icons/DailyFindingGameIcon';\nimport { useMemo } from 'react';\nimport { useMeasure } from 'react-use';\nimport { getAnimationClass, isDevEnv } from 'utils/helpers';\n\nimport { Header } from '../../../components/Header';\nimport { Menu } from '../../../components/Menu';\nimport { SETTINGS } from '../utils/settings';\nimport { DailyAquiOEntry } from '../utils/types';\nimport { useAquiOEngine } from '../utils/useAquiOEngine';\nimport { Disc } from './Disc';\nimport { PreloadItems } from './PreloadItems';\nimport { ResultsModalContent } from './ResultsModalContent';\nimport { Rules } from './Rules';\n\ntype DailyAquiOProps = {\n  data: DailyAquiOEntry;\n  language: Language;\n  onToggleGame: () => void;\n  isRandomGame: boolean;\n};\n\nexport function DailyAquiO({ data, language, onToggleGame, isRandomGame }: DailyAquiOProps) {\n  const {\n    hearts,\n    showResultModal,\n    setShowResultModal,\n    discIndex,\n    isWin,\n    isLose,\n    isComplete,\n    onStart,\n    onSelect,\n    timeLeft,\n    mode,\n    setMode,\n    discA,\n    discB,\n    result,\n    isPlaying,\n    attempts,\n    localToday,\n  } = useAquiOEngine(data, isRandomGame);\n\n  // UI state\n  const [contentRef, contentMeasure] = useMeasure<HTMLDivElement>();\n  const [headerRef, headerMeasure] = useMeasure<HTMLDivElement>();\n  const discWidth = useMemo(() => {\n    const width = contentMeasure.width - 24;\n    const height = (contentMeasure.height - headerMeasure.height) / 2 - 24;\n    return Math.max(Math.min(width, height, 450), 150);\n  }, [contentMeasure.height, contentMeasure.width, headerMeasure.height]);\n\n  return (\n    <Layout className=\"app\">\n      <Header icon={<DailyFindingGameIcon />}>\n        TD <DualTranslate>{SETTINGS.NAME}</DualTranslate> #{data.number}\n      </Header>\n      <Layout.Content ref={contentRef}>\n        <div ref={headerRef}>\n          <Menu hearts={hearts} total={SETTINGS.HEARTS} openRules={true} rules={<Rules />} />\n          <Space className=\"space-container\">\n            <Typography.Text strong>\n              {data.title[language]} | <Translate pt=\"Disco\" en=\"Disc\" /> {discIndex}/{SETTINGS.GOAL}\n              {!isRandomGame && (\n                <>\n                  {' '}\n                  | <Translate pt=\"Tentativa\" en=\"Attempt\" /> {attempts + (isPlaying ? 1 : 0)}{' '}\n                </>\n              )}\n            </Typography.Text>\n          </Space>\n\n          <div className=\"full-width padding\">\n            <TimerBar value={timeLeft} total={60} />\n          </div>\n        </div>\n\n        <Space className=\"space-container\" direction=\"vertical\">\n          {!isPlaying && (\n            <>\n              <Button\n                size=\"large\"\n                onClick={onStart}\n                type=\"primary\"\n                disabled={isRandomGame ? false : isWin || isLose}\n                icon=\"🔘\"\n              >\n                <Translate pt=\"Começar\" en=\"Start\" />\n                &nbsp;\n                {isRandomGame ? (\n                  <DualTranslate>{data.title}</DualTranslate>\n                ) : (\n                  <Translate pt=\" Diário\" en=\" Daily\" />\n                )}\n              </Button>\n              <PreloadItems items={data.itemsIds} />\n\n              <Switch\n                unCheckedChildren={<Translate pt=\"Modo Normal\" en=\"Normal Mode\" />}\n                checkedChildren={<Translate pt=\"Modo Difícil\" en=\"Challenge Mode\" />}\n                value={mode === 'challenge'}\n                onChange={(checked) => setMode(checked ? 'challenge' : 'normal')}\n              />\n            </>\n          )}\n\n          {isComplete && (\n            <Space className=\"results-container\" align=\"center\" direction=\"vertical\">\n              <Button onClick={() => setShowResultModal(true)}>\n                <Translate pt=\"Ver Resultado\" en=\"Show Results\" />\n              </Button>\n            </Space>\n          )}\n\n          {(isRandomGame || isComplete) && !isPlaying && (\n            <Space className=\"results-container\" align=\"center\" direction=\"vertical\">\n              <Divider />\n\n              <Button onClick={onToggleGame}>\n                {isRandomGame ? (\n                  <Translate pt=\"Jogar o Desafio Diário\" en=\"Play the daily challenge\" />\n                ) : (\n                  <Translate pt=\"Jogar com baralho aleatório\" en=\"Play a random deck\" />\n                )}\n              </Button>\n            </Space>\n          )}\n\n          {isPlaying && (\n            <Space className=\"space-container\" direction=\"vertical\">\n              <Disc\n                disc={discA}\n                onSelect={onSelect}\n                key={discA.id}\n                width={discWidth}\n                className={getAnimationClass('slideInUp', { speed: 'fast' })}\n              />\n              <Disc\n                disc={discB}\n                onSelect={onSelect}\n                key={discB.id}\n                width={discWidth}\n                className={getAnimationClass('zoomIn', { speed: 'fast' })}\n              />\n              <DevResult result={result} />\n            </Space>\n          )}\n\n          <Modal\n            title={<Translate pt=\"Resultado\" en=\"Results\" />}\n            open={showResultModal}\n            onCancel={() => setShowResultModal(false)}\n            okButtonProps={{ hidden: true }}\n            cancelButtonProps={{ hidden: true }}\n          >\n            <ResultsModalContent\n              challengeTitle={data.title[language]}\n              challengeNumber={data.number}\n              hearts={hearts}\n              progress={discIndex}\n              itemsIds={data.itemsIds}\n              isRandomGame={isRandomGame}\n              hardMode={mode === 'challenge'}\n              lastMatch={result}\n              localToday={localToday}\n            />\n          </Modal>\n        </Space>\n      </Layout.Content>\n    </Layout>\n  );\n}\n\nfunction DevResult({ result }: { result: string }) {\n  if (!isDevEnv) return <></>;\n\n  return (\n    <FloatButton shape=\"square\" icon={<ItemCard id={result} width={50} padding={0} className=\"raw-item\" />} />\n  );\n}\n","import './utils/styles.scss';\n\nimport { useLanguage } from 'hooks/useLanguage';\nimport { DailyError } from 'pages/Daily/components/DailyError';\nimport { DailyLoading } from 'pages/Daily/components/DailyLoading';\nimport { useRandomAquiOChallenge } from 'pages/Daily/games/AquiO/data/useRandomAquiOChallenge';\nimport { useState } from 'react';\n\nimport { getToday, wait } from '../../utils';\nimport { DailyAquiO } from './components/DailyAquiO';\nimport { useDailyChallenge } from 'pages/Daily/hooks/useDailyChallenge';\n\nexport function DailyAquiOGame() {\n  const today = getToday();\n  const { language } = useLanguage();\n  const [isRandomGame, setRandomGame] = useState(false);\n\n  // Load challenge\n  const challengeQuery = useDailyChallenge(`${today}`);\n  const randomGameQuery = useRandomAquiOChallenge(`${today}`);\n\n  if (challengeQuery.isLoading || challengeQuery.isRefetching || randomGameQuery.isLoading) {\n    return <DailyLoading />;\n  }\n\n  const dailyData = challengeQuery?.data?.['aqui-o'];\n  const data = isRandomGame ? randomGameQuery?.data : dailyData;\n\n  if (challengeQuery.isError || !data) {\n    return <DailyError />;\n  }\n\n  const onToggleGame = async () => {\n    setRandomGame((prev) => !prev);\n    await wait(250);\n    challengeQuery.refetch();\n  };\n\n  return (\n    <DailyAquiO data={data} language={language} onToggleGame={onToggleGame} isRandomGame={isRandomGame} />\n  );\n}\n","import { PalavreadoLetter } from './types';\n\nexport const KEYWORD_INDEXES = [0, 5, 10, 15];\n\nexport const parseLetters = (letters: string[]): PalavreadoLetter[] => {\n  return letters.map((letter, index) => ({\n    letter,\n    index,\n    state: (KEYWORD_INDEXES.includes(index)\n      ? ['0', '1', '2', '3'][KEYWORD_INDEXES.indexOf(index)]\n      : 'idle') as PalavreadoLetter['state'],\n    locked: KEYWORD_INDEXES.includes(index),\n  }));\n};\n\n// export const orderLettersByWord = (letters: PalavreadoLetter[], word: string): PalavreadoLetter[] => {\n//   const orderedLetters: PalavreadoLetter[] = [];\n//   const usedIndexes: number[] = [];\n//   word.split('').forEach((wordLetter) => {\n//     const foundLetter = letters.find((cl) => !usedIndexes.includes(cl.index) && cl.letter === wordLetter);\n//     if (foundLetter) {\n//       usedIndexes.push(foundLetter?.index);\n//       orderedLetters.push(foundLetter);\n//     }\n//   });\n//   return orderedLetters;\n// };\n\nexport const calculateGuessValue = (word: string, guess: string): number => {\n  let value = 0;\n  word.split('').forEach((letter, index) => {\n    if (letter === guess[index]) {\n      value += 1;\n    }\n  });\n  return value;\n};\n","import { chunk, cloneDeep } from 'lodash';\nimport { useDailyGameState } from 'pages/Daily/hooks/useDailyGameState';\nimport { useDailyLocalToday } from 'pages/Daily/hooks/useDailyLocalToday';\nimport { useShowResultModal } from 'pages/Daily/hooks/useShowResultModal';\n\nimport { parseLetters } from './helpers';\nimport { SETTINGS } from './settings';\nimport { DailyPalavreadoEntry, PalavreadoLetter, PalavreadoLocalToday } from './types';\n\ntype GameState = {\n  hearts: number;\n  selection: number | null; // indexes of letters\n  swap: number[]; // indexes of letters\n  letters: PalavreadoLetter[];\n  guesses: string[][]; // words guesses per heart\n  state: string;\n  swaps: number;\n};\n\nconst defaultArteRuimLocalToday: PalavreadoLocalToday = {\n  id: '',\n  guesses: [],\n  number: 0,\n  swaps: 0,\n};\n\nexport function usePalavreadoEngine(data: DailyPalavreadoEntry) {\n  const { state, setState, updateState } = useDailyGameState<GameState>({\n    selection: null,\n    swap: [],\n    letters: parseLetters(data.letters),\n    guesses: [],\n    hearts: SETTINGS.HEARTS,\n    state: '',\n    swaps: 0,\n  });\n\n  const { updateLocalStorage } = useDailyLocalToday<PalavreadoLocalToday>({\n    key: SETTINGS.LOCAL_TODAY_KEY,\n    gameId: data.id,\n    challengeNumber: data.number ?? 0,\n    defaultValue: defaultArteRuimLocalToday,\n    onApplyLocalState: (value) => {\n      const hearts = SETTINGS.HEARTS - value.guesses.length;\n\n      // Apply state if there are any guesses\n      const latestGuess = value.guesses[value.guesses.length - 1];\n      const copyLetters = cloneDeep(state.letters);\n      const answer = data.words.join('');\n      if (latestGuess) {\n        const guessedLetters = latestGuess.map((w) => w.split('')).flat();\n        copyLetters.forEach((letter, index) => {\n          letter.letter = guessedLetters[index];\n\n          if (letter.state === 'idle' && letter.letter === answer[index]) {\n            letter.state = String(Math.floor(index / 4)) as PalavreadoLetter['state'];\n            letter.locked = true;\n          }\n\n          return letter;\n        });\n      }\n\n      updateState({\n        hearts,\n        guesses: value.guesses,\n        letters: copyLetters,\n        swaps: value.swaps ?? 0,\n      });\n    },\n  });\n\n  // ACTIONS\n  const selectLetter = (index: number) => {\n    if (state.selection === index) {\n      updateState({\n        selection: null,\n        swap: [],\n      });\n      return;\n    }\n\n    if (state.selection === null) {\n      updateState({\n        selection: index,\n        swap: [],\n      });\n      return;\n    }\n\n    setState((prev) => {\n      const copyLetters = cloneDeep(state.letters);\n      const temp = copyLetters[prev.selection!];\n      copyLetters[prev.selection!] = copyLetters[index];\n      copyLetters[index] = temp;\n\n      updateLocalStorage({\n        swaps: prev.swaps + 1,\n      });\n\n      return {\n        ...prev,\n        letters: copyLetters,\n        selection: null,\n        swap: [prev.selection!, index],\n        swaps: prev.swaps + 1,\n      };\n    });\n  };\n\n  const submitGrid = () => {\n    const answer = data.words.join('');\n\n    setState((prev) => {\n      // Evaluate letters and mark any correct letter as correct and locked\n      const copyLetters = cloneDeep(state.letters);\n      copyLetters.map((letter, index) => {\n        if (letter.state === 'idle' && letter.letter === answer[index]) {\n          letter.state = String(Math.floor(index / 4)) as PalavreadoLetter['state'];\n          letter.locked = true;\n        }\n        return letter;\n      });\n\n      // Generate the guessed words from the letter\n      const generatedWords = chunk(copyLetters, 4).map((lg) => lg.map((l) => l.letter).join(''));\n\n      // Evaluate if any of the words match the words in the data\n      generatedWords.forEach((word, wordIndex) => {\n        if (data.words[wordIndex] === word) {\n          word.split('').forEach((_, i) => {\n            copyLetters[wordIndex * 4 + i].state = String(wordIndex) as PalavreadoLetter['state'];\n            copyLetters[wordIndex * 4 + i].locked = true;\n          });\n        }\n      });\n\n      const isAllCorrect = copyLetters.every((letter) => letter.locked);\n\n      const guesses = generatedWords;\n      updateLocalStorage({\n        guesses: [...state.guesses, guesses],\n        swaps: prev.swaps,\n      });\n\n      return {\n        ...prev,\n        guesses: [...prev.guesses, guesses],\n        letters: copyLetters,\n        selection: null,\n        swap: [],\n        hearts: isAllCorrect ? prev.hearts : prev.hearts - 1,\n      };\n    });\n  };\n\n  // CONDITIONS\n  const isWin = Object.values(state.letters).every((l) => l.locked);\n  const isLose = state.hearts <= 0;\n  const isComplete = isWin || isLose;\n\n  // RESULTS MODAL\n  const { showResultModal, setShowResultModal } = useShowResultModal(isComplete);\n\n  return {\n    hearts: state.hearts,\n    guesses: state.guesses,\n    letters: state.letters,\n    selection: state.selection,\n    swap: state.swap,\n    swaps: state.swaps,\n    showResultModal,\n    setShowResultModal,\n    isWin,\n    isLose,\n    isComplete,\n    selectLetter,\n    submitGrid,\n  };\n}\n","import clsx from 'clsx';\n\nimport { PalavreadoLetter } from '../utils/types';\nimport { getAnimationClass } from 'utils/helpers';\n\ntype BoardProps = {\n  letters: PalavreadoLetter[];\n  selection: number | null;\n  swap: number[];\n  onLetterSelection: (index: number) => void;\n  guesses: string[][];\n};\n\nexport function Board({ letters, onLetterSelection, selection, swap, guesses }: BoardProps) {\n  return (\n    <div className=\"palavreado-board\">\n      {letters.map(({ letter, locked, state }, index) => {\n        const row = Math.floor(index / 4);\n        const col = index % 4;\n        const previousWrongPlacement = guesses.some((attempts) => attempts[row][col] === letter) && !locked;\n\n        return (\n          <button\n            key={`${letter}-${index}`}\n            className={clsx(\n              'palavreado-board__tile',\n              swap.includes(index) && getAnimationClass('zoomIn', { speed: 'faster' }),\n              !locked && selection !== index && 'palavreado-board__tile--button',\n              selection === index && 'palavreado-board__tile--selected',\n              `palavreado-board__tile--${state}`,\n\n              previousWrongPlacement && `palavreado-board__tile--place-guessed`\n            )}\n            onClick={() => (!locked ? onLetterSelection(index) : null)}\n          >\n            {letter}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n","import { Divider, Space, Typography } from 'antd';\nimport { IconAvatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { BoxXIcon } from 'icons/BoxXIcon';\nimport { TrophyIcon } from 'icons/TrophyIcon';\nimport { getDailyName, getSourceName, writeHeartResultString } from 'pages/Daily/utils';\n\nimport { CopyToClipboardResult } from '../../../components/CopyToClipboardResult';\nimport { SETTINGS } from '../utils/settings';\nimport { PalavreadoLetter } from '../utils/types';\nimport { chunk } from 'lodash';\n\ntype ResultsModalContentProps = {\n  challenge: number;\n  words: string[];\n  isWin: boolean;\n  isLose: boolean;\n  hearts: number;\n  letters: PalavreadoLetter[];\n  swaps: number;\n};\n\nexport function ResultsModalContent({\n  challenge,\n  words,\n  isWin,\n  isLose,\n  hearts,\n  letters,\n  swaps,\n}: ResultsModalContentProps) {\n  const { language, dualTranslate } = useLanguage();\n\n  const result = writeResult({\n    game: dualTranslate(SETTINGS.NAME),\n    challenge,\n    remainingHearts: hearts,\n    letters,\n    language,\n    swaps,\n  });\n\n  return (\n    <Space direction=\"vertical\" className=\"space-container\">\n      <Typography.Title level={2} className=\"center\">\n        {isWin ? (\n          <>\n            <IconAvatar icon={<TrophyIcon />} /> <Translate pt=\"Parabéns!\" en=\"Congratulations!\" />\n          </>\n        ) : (\n          <>\n            <IconAvatar icon={<BoxXIcon />} /> <Translate pt=\"Que pena!\" en=\"Too bad!\" />\n          </>\n        )}\n      </Typography.Title>\n      <Typography.Paragraph className=\"center\">\n        {isWin ? (\n          <Translate pt=\"Você acertou as palavras!\" en=\"You guessed the words!\" />\n        ) : (\n          <Translate pt=\"Você não acertou todas as palavras!\" en=\"You missed the words!\" />\n        )}\n      </Typography.Paragraph>\n\n      <Space className=\"result-answer\" split={<Divider type=\"vertical\" />}>\n        {words.map((word) => (\n          <Typography.Text key={word}>{word}</Typography.Text>\n        ))}\n      </Space>\n\n      <CopyToClipboardResult result={result} rows={6} />\n    </Space>\n  );\n}\n\nfunction writeResult({\n  game,\n  challenge,\n  remainingHearts,\n  letters,\n  language,\n  swaps,\n}: {\n  game: string;\n  challenge: number;\n  remainingHearts: number;\n  letters: PalavreadoLetter[];\n  language: Language;\n  swaps: number;\n}) {\n  const cleanUpAttempts = chunk(letters, 4).map((row) =>\n    row.map((letter) => {\n      switch (letter.state) {\n        case '0':\n          return '🟥';\n        case '1':\n          return '🟦';\n        case '2':\n          return '🟪';\n        case '3':\n          return '🟫';\n        default:\n          return '⬜️';\n      }\n    })\n  );\n\n  return [\n    `📒 ${getDailyName(language)} ${game} #${challenge}`,\n    `${writeHeartResultString(remainingHearts, SETTINGS.HEARTS, ' ')} (${swaps} trocas)`,\n    cleanUpAttempts\n      .map((row) => row.join(' ').trim())\n      .filter(Boolean)\n      .join('\\n'),\n    `https://www.kavispires.com/tardedivertida/#/${getSourceName(language)}`,\n  ].join('\\n');\n}\n","import { Typography } from 'antd';\nimport { Translate } from 'components/language';\n\nimport { HeartFilled } from '@ant-design/icons';\n\nimport { SETTINGS } from '../utils/settings';\n\nexport function Rules() {\n  return (\n    <Typography>\n      <Translate\n        pt={\n          <>\n            <li>\n              Junto à palavra-chave de {SETTINGS.WORD_LENGTH} letras diagonal na grade existem{' '}\n              {SETTINGS.HEARTS} palavras embaralhadas.\n            </li>\n            <li>Você precisa ordenar as letras para formar as {SETTINGS.HEARTS} palavras horizontais.</li>\n            <li>Selecione uma letra e depois uma outra para que elas troquem de lugar.</li>\n            <li>Quando você acha que a grade está certa, aperte \"Enviar\".</li>\n            <li>\n              Todas as letras colocadas na posição corretas serão coloridas da corta da linha. Mas se você não\n              acertas todas, você perde um <HeartFilled />.\n            </li>\n            <li>\n              Você tem {SETTINGS.HEARTS} <HeartFilled /> chances. Boa sorte!\n            </li>\n          </>\n        }\n        en={\n          <>\n            <li>\n              Next to the {SETTINGS.WORD_LENGTH}-letter keyword diagonally in the grid are {SETTINGS.HEARTS}{' '}\n              shuffled words.\n            </li>\n            <li>You need to order the letters to form the {SETTINGS.HEARTS} words in the rows.</li>\n            <li>Select a letter and then another so they swap places.</li>\n            <li>When you think the grid is correct, press \"Submit\".</li>\n            <li>\n              All letters placed in the correct position will be colored in the line color. But if you don't\n              get them all, you lose a <HeartFilled />.\n            </li>\n            <li>\n              You have {SETTINGS.HEARTS} <HeartFilled /> chances. Good luck!\n            </li>\n          </>\n        }\n      />\n    </Typography>\n  );\n}\n","import { Button, Divider, Flex, Layout, Modal, Space, Typography } from 'antd';\nimport { DualTranslate, Translate } from 'components/language';\nimport { DailyWordGameIcon } from 'icons/DailyWordGameIcon';\nimport { Me } from 'types/user';\n\nimport { BarChartOutlined } from '@ant-design/icons';\n\nimport { Header } from '../../../components/Header';\nimport { Menu } from '../../../components/Menu';\nimport { SETTINGS } from '../utils/settings';\nimport { DailyPalavreadoEntry } from '../utils/types';\nimport { usePalavreadoEngine } from '../utils/usePalavreadoEngine';\nimport { Board } from './Board';\nimport { ResultsModalContent } from './ResultsModalContent';\nimport { Rules } from './Rules';\n\ntype DailyPalavreadoProps = {\n  data: DailyPalavreadoEntry;\n  currentUser: Me;\n};\n\nexport function DailyPalavreado({ data }: DailyPalavreadoProps) {\n  const {\n    hearts,\n    selection,\n    guesses,\n    letters,\n    showResultModal,\n    setShowResultModal,\n    isWin,\n    isLose,\n    isComplete,\n    selectLetter,\n    submitGrid,\n    swap,\n    swaps,\n  } = usePalavreadoEngine(data);\n\n  return (\n    (<Layout className=\"app\">\n      <Header icon={<DailyWordGameIcon />}>\n        TD <DualTranslate>{SETTINGS.NAME}</DualTranslate> #{data.number}\n      </Header>\n      <Layout.Content>\n        <Menu hearts={hearts} total={SETTINGS.HEARTS} openRules={true} rules={<Rules />} />\n\n        <Space className=\"space-container\" direction=\"vertical\" align=\"center\">\n          <Typography.Text strong className=\"palavreado-word\">\n            {data.keyword} {swaps > 0 && ` ↔️ ${swaps}`}\n          </Typography.Text>\n          <Board\n            letters={letters}\n            onLetterSelection={selectLetter}\n            selection={selection}\n            swap={swap}\n            guesses={guesses}\n          />\n        </Space>\n\n        <Space className=\"space-container\" direction=\"vertical\" align=\"center\">\n          {isComplete ? (\n            <Button onClick={() => setShowResultModal(true)} type=\"primary\" icon={<BarChartOutlined />}>\n              <Translate pt=\"Ver Resultado\" en=\"Show Results\" />\n            </Button>\n          ) : (\n            <Button type=\"primary\" onClick={submitGrid} disabled={isComplete} block>\n              <Translate pt=\"Enviar\" en=\"Submit\" />\n            </Button>\n          )}\n        </Space>\n\n        <Space className=\"space-container palavreado-guesses\" align=\"center\" direction=\"vertical\">\n          {guesses.map((attempt, index) => (\n            <Space key={`${attempt}-${index}`} split={<Divider type=\"vertical\" />}>\n              {attempt.map((word, i) => (\n                <span className=\"palavreado-word\" key={`${attempt}-${index}-${word}-${i}`}>\n                  {word}\n                </span>\n              ))}\n            </Space>\n          ))}\n        </Space>\n\n        {guesses.length > 0 && (\n          // <Instruction contained>\n          (<Space className=\"palavreado-used-position-instruction\" align=\"center\">\n            <Flex className=\"contained\" gap={12} align=\"center\">\n              <div className=\"palavreado-board__tile palavreado-board__tile--place-guessed palavreado-board__tile--sample\">\n                ?\n              </div>\n              <Typography.Text>\n                <Translate\n                  pt={\n                    <>\n                      Posições que já foram testadas com a letra específica aparecem assim (borda preta\n                      pontilhada).\n                      <br />\n                      Evite enviar com letras assim, elas continuarão erradas.\n                    </>\n                  }\n                  en={\n                    <>\n                      Positions that have already been tested with a specific letter appear like this (dotted\n                      black border).\n                      <br />\n                      Avoid submitting with letters like this, they will remain wrong.\n                    </>\n                  }\n                />\n              </Typography.Text>\n            </Flex>\n          </Space>)\n          // </Instruction>\n        )}\n        <Modal\n          title={<Translate pt=\"Resultado\" en=\"Results\" />}\n          open={showResultModal}\n          onCancel={() => setShowResultModal(false)}\n          okButtonProps={{ hidden: true }}\n          cancelButtonProps={{ hidden: true }}\n        >\n          <ResultsModalContent\n            challenge={data?.number}\n            isWin={isWin}\n            isLose={isLose}\n            hearts={hearts}\n            words={data.words}\n            letters={letters}\n            swaps={swaps}\n          />\n        </Modal>\n      </Layout.Content>\n    </Layout>)\n  );\n}\n","import './utils/styles.scss';\n\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\nimport { DailyError } from 'pages/Daily/components/DailyError';\nimport { DailyLoading } from 'pages/Daily/components/DailyLoading';\n\nimport { useDailyChallenge } from '../../hooks/useDailyChallenge';\nimport { getToday } from '../../utils';\nimport { DailyPalavreado } from './components/DailyPalavreado';\n\nexport function DailyPalavreadoGame() {\n  const { currentUser } = useCurrentUserContext();\n\n  // Load challenge\n  const challengeQuery = useDailyChallenge(getToday());\n\n  if (challengeQuery.isLoading) {\n    return <DailyLoading />;\n  }\n  const dailyData = challengeQuery?.data?.['palavreado'];\n\n  if (challengeQuery.isError || !dailyData) {\n    return <DailyError />;\n  }\n\n  return <DailyPalavreado data={dailyData} currentUser={currentUser} />;\n}\n","import { sampleSize } from 'lodash';\nimport { useDailyGameState } from 'pages/Daily/hooks/useDailyGameState';\nimport { useDailyLocalToday } from 'pages/Daily/hooks/useDailyLocalToday';\nimport { useDailySaveDrawings } from 'pages/Daily/hooks/useDailySaveDrawings';\nimport { wait } from 'pages/Daily/utils';\nimport { ArteRuimCard } from 'types/tdr';\nimport { Me } from 'types/user';\nimport { SEPARATOR } from 'utils/constants';\nimport { removeDuplicates } from 'utils/helpers';\n\nimport { SETTINGS } from './settings';\nimport { ArtistaLocalToday, DailyArtistaEntry, DrawingToSave } from './types';\n\ntype GameState = {\n  cards: ArteRuimCard[];\n  drawings: string[];\n  cardIndex: number;\n  played: boolean;\n  screen: 'idle' | 'playing' | 'saving';\n};\n\nconst defaultLocalToday: ArtistaLocalToday = {\n  id: '',\n  number: 0,\n  played: false,\n};\n\nexport function useArtistaEngine(data: DailyArtistaEntry, currentUser: Me) {\n  const { state, setState, updateState } = useDailyGameState<GameState>({\n    cards: sampleSize(data.cards, SETTINGS.DRAWINGS),\n    drawings: [],\n    cardIndex: 0,\n    played: false,\n    screen: 'idle',\n  });\n\n  const { updateLocalStorage } = useDailyLocalToday<ArtistaLocalToday>({\n    key: SETTINGS.LOCAL_TODAY_KEY,\n    gameId: data.id,\n    challengeNumber: data.number ?? 0,\n    defaultValue: defaultLocalToday,\n    onApplyLocalState: (value) => {\n      if (value.played) {\n        updateState({\n          played: value.played,\n        });\n      }\n    },\n  });\n\n  const card = state.cards[state.cardIndex];\n\n  const onStart = () => updateState({ screen: 'playing' });\n\n  const onNextCard = async (drawing: any) => {\n    if (state.cardIndex < state.cards.length - 1) {\n      return setState((prev) => ({\n        ...prev,\n        drawings: [...prev.drawings, JSON.stringify(drawing)],\n        cardIndex: prev.cardIndex + 1,\n      }));\n    }\n\n    if (state.cardIndex === state.cards.length - 1) {\n      updateState({ screen: 'saving' });\n\n      // SAVE\n      await wait(1000);\n\n      onSaveDrawings({\n        ...state,\n        drawings: removeDuplicates([...state.drawings, JSON.stringify(drawing)]),\n        screen: 'saving',\n      });\n    }\n  };\n\n  const mutation = useDailySaveDrawings(() => {\n    updateLocalStorage({ played: true });\n    updateState({ played: true, screen: 'idle' });\n  });\n\n  const onSaveDrawings = (stateToSave: GameState) => {\n    const toSave = stateToSave.drawings.reduce((acc: Dictionary<DrawingToSave>, drawing, index) => {\n      if (drawing.length > 50) {\n        const card = stateToSave.cards[index];\n        acc[`${card.id}${SEPARATOR}${Date.now()}`] = {\n          drawing,\n          cardId: card.id,\n          level: card.level,\n          playerId: currentUser.id,\n          successRate: 0,\n          text: card.text,\n        };\n      }\n\n      return acc;\n    }, {});\n\n    mutation.mutate(toSave);\n  };\n\n  return {\n    cardNumber: state.cardIndex + 1,\n    card,\n    isPlaying: state.screen === 'playing',\n    isIdle: state.screen === 'idle',\n    isSaving: state.screen === 'saving' || mutation.isPending,\n    alreadyPlayed: state.played,\n    onStart,\n    onNextCard,\n  };\n}\n","import { useMutation } from '@tanstack/react-query';\nimport { App } from 'antd';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { DAILY_API, DAILY_API_ACTIONS } from 'services/adapters';\nimport { DrawingToSave } from '../games/Artista/utils/types';\n\nexport function useDailySaveDrawings(onSuccess: Function) {\n  const { translate } = useLanguage();\n  const { notification } = App.useApp();\n\n  const query = useMutation({\n    mutationKey: ['add-player'],\n    mutationFn: async (payload: Dictionary<DrawingToSave>) =>\n      await DAILY_API.run({\n        action: DAILY_API_ACTIONS.SAVE_DRAWING,\n        drawings: payload,\n        language: Object.values(payload)?.[0]?.cardId?.split('-')?.[2] ?? 'pt',\n      }),\n    onSuccess: () => {\n      notification.success({\n        message: translate('Desenhos salvos com sucesso!', 'Drawings saved successfully!'),\n        placement: 'bottomLeft',\n      });\n      onSuccess();\n    },\n    onError: (e: any) => {\n      notification.error({\n        message: translate(\n          'Vixi, o aplicativo encontrou um erro ao tentar salvar desenhos',\n          'Oops, the application failed when trying to save drawings'\n        ),\n        description: JSON.stringify(e.message),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n    },\n  });\n\n  return query;\n}\n","import { Flex } from 'antd';\nimport { DrawingCanvas } from 'components/canvas';\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useState } from 'react';\nimport { SETTINGS } from '../utils/settings';\nimport { TimerBar } from 'components/timers';\nimport { getAnimationClass } from 'utils/helpers';\n\ntype CanvasProps = {\n  onNextCard: (lines: any) => void;\n  maxWidth: number;\n};\n\nconst duration = SETTINGS.DURATION / SETTINGS.DRAWINGS;\n\nexport function Canvas({ onNextCard, maxWidth }: CanvasProps) {\n  const [lines, setLines] = useState<CanvasLine[]>([]);\n\n  const { timeLeft } = useCountdown({\n    duration: duration + 2,\n    autoStart: true,\n    onExpire: () => {\n      onNextCard(lines);\n    },\n  });\n\n  return (\n    <Flex className=\"full-width\" vertical style={{ maxWidth }}>\n      <TimerBar value={timeLeft - 1} total={duration} className=\"artista-time-bar\" />\n      {timeLeft < 12 && (\n        <DrawingCanvas\n          lines={lines}\n          className={getAnimationClass('zoomIn', { speed: 'faster' })}\n          setLines={setLines}\n          strokeWidth=\"small\"\n          style={{\n            transform: `scale(${maxWidth / 500})`,\n            transformOrigin: 'top center',\n          }}\n        />\n      )}\n    </Flex>\n  );\n}\n","import { Typography } from 'antd';\nimport { Translate } from 'components/language';\nimport { BetaBanner } from 'pages/Daily/components/BetaBanner';\n\nexport function Rules() {\n  return (\n    <Typography>\n      <BetaBanner />\n      <Translate\n        pt={\n          <>\n            <li>Contribua com o banco de dados do TD!</li>\n            <li>A cada 10 segundos, você irá ler uma expressão e desenhar.</li>\n            <li>Após 6 expressões, ou 1 minuto, seus desenhos serão salvos no banco de dados.</li>\n            <li>Tente fazer o melhor possível, evite pornografia, e foque nos detalhes.</li>\n            <li>Boa sorte!</li>\n          </>\n        }\n        en={\n          <>\n            <li>Contribute to TD's database!</li>\n            <li>Every 10 seconds, you will read an expression and draw.</li>\n            <li>After 6 expressions or 1 minute, your drawings will be saved in the database</li>\n            <li>Try to do your best possible, avoid NSFW content, and focus on the details.</li>\n            <li>Good luck!</li>\n          </>\n        }\n      />\n    </Typography>\n  );\n}\n","import { Button, Divider, Layout, Space } from 'antd';\nimport { IconAvatar } from 'components/avatars';\nimport { Card } from 'components/cards';\nimport { DualTranslate, Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { AnimatedProcessingIcon } from 'icons/AnimatedProcessingIcon';\nimport { DailyDrawingGameIcon } from 'icons/DailyDrawingGameIcon';\nimport { ThumbsUpIcon } from 'icons/ThumbsUpIcon';\nimport { useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMeasure } from 'react-use';\nimport { Me } from 'types/user';\nimport { getAnimationClass } from 'utils/helpers';\n\nimport { Header } from '../../../components/Header';\nimport { Menu } from '../../../components/Menu';\nimport { SETTINGS } from '../utils/settings';\nimport { DailyArtistaEntry } from '../utils/types';\nimport { useArtistaEngine } from '../utils/useArtistaEngine';\nimport { Canvas } from './Canvas';\nimport { Rules } from './Rules';\nimport { TimeHighlight } from 'components/metrics/TimeHighlight';\n\ntype DailyArtistaProps = {\n  data: DailyArtistaEntry;\n  currentUser: Me;\n};\n\nexport function DailyArtista({ data, currentUser }: DailyArtistaProps) {\n  const { cardNumber, card, onNextCard, isPlaying, isIdle, isSaving, alreadyPlayed, onStart } =\n    useArtistaEngine(data, currentUser);\n\n  // UI state\n  const [contentRef, contentMeasure] = useMeasure<HTMLDivElement>();\n  const [headerRef, headerMeasure] = useMeasure<HTMLDivElement>();\n  const maxWidth = useMemo(() => {\n    const width = contentMeasure.width - 24;\n    const height = contentMeasure.height - headerMeasure.height - 24;\n    return Math.max(Math.min(width, height, 500), 150);\n  }, [contentMeasure.height, contentMeasure.width, headerMeasure.height]);\n\n  return (\n    <Layout className=\"app\">\n      <Header icon={<DailyDrawingGameIcon />}>\n        TD <DualTranslate>{SETTINGS.NAME}</DualTranslate> #{data.number}\n      </Header>\n      <Layout.Content ref={contentRef}>\n        <div ref={headerRef}>\n          <Menu hearts={0} total={0} openRules rules={<Rules />} />\n          {alreadyPlayed && (\n            <Instruction className=\"info-screen\">\n              <IconAvatar icon={<ThumbsUpIcon />} />\n              <Translate pt=\"Você já jogou hoje!\" en=\"You've already played today!\" />\n              <Translate pt=\"Volte amanhã para jogar novamente!\" en=\"Come back tomorrow to play again!\" />\n              <Divider />\n              <Link to=\"/diario\">\n                <Translate pt=\"Jogar outros jogos\" en=\"Play something else\" />\n              </Link>\n            </Instruction>\n          )}\n\n          {!alreadyPlayed && !isSaving && (\n            <Space className=\"space-container\">\n              <Card\n                key={isPlaying ? card.id : 'none'}\n                header={isPlaying ? `#${cardNumber}` : '?'}\n                color=\"gold\"\n                className={!isPlaying ? 'invisible' : getAnimationClass('tada')}\n              >\n                {!isPlaying ? (\n                  <>\n                    Lorem ipsum dolor sit amet, consectetur adipisci elit, sed eiusmod tempor incidunt ut\n                    labore et dolore.\n                  </>\n                ) : (\n                  card.text\n                )}\n              </Card>\n            </Space>\n          )}\n        </div>\n\n        {isPlaying && (\n          <Space className=\"space-container\">\n            <Canvas key={card.id} maxWidth={maxWidth} onNextCard={onNextCard} />\n          </Space>\n        )}\n\n        {isSaving && (\n          <Instruction className=\"info-screen\">\n            <IconAvatar icon={<AnimatedProcessingIcon />} />\n            <Translate pt=\"Salvando\" en=\"Saving\" />\n          </Instruction>\n        )}\n\n        {isIdle && !alreadyPlayed && (\n          <Space className=\"space-container\">\n            <Space direction=\"vertical\" className=\"space-container\">\n              <Instruction contained>\n                <Translate\n                  pt={\n                    <>\n                      Você tem <TimeHighlight>{SETTINGS.DURATION / SETTINGS.DRAWINGS}</TimeHighlight> segundos\n                      para fazer cada um dos {SETTINGS.DRAWINGS} desenhos.\n                      <br />\n                      Você <strong>NÃO</strong> pode usar letras ou números.\n                      <br />O tempo começa assim que você aperta \"Começar\".\n                    </>\n                  }\n                  en={\n                    <>\n                      You have <TimeHighlight>{SETTINGS.DURATION / SETTINGS.DRAWINGS}</TimeHighlight> seconds\n                      to draw each of the {SETTINGS.DRAWINGS} drawings.\n                      <br />\n                      You <strong>CANNOT</strong> use letters or numbers.\n                      <br />\n                      The time starts as soon as you press \"Start\".\n                    </>\n                  }\n                />\n              </Instruction>\n              <Button type=\"primary\" size=\"large\" onClick={onStart} disabled={alreadyPlayed}>\n                {isSaving ? <Translate pt=\"Salvando\" en=\"Saving\" /> : <Translate pt=\"Começar\" en=\"Start\" />}\n              </Button>\n            </Space>\n          </Space>\n        )}\n      </Layout.Content>\n    </Layout>\n  );\n}\n","import './utils/styles.scss';\n\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\nimport { DailyError } from 'pages/Daily/components/DailyError';\nimport { DailyLoading } from 'pages/Daily/components/DailyLoading';\n\nimport { useDailyChallenge } from '../../hooks/useDailyChallenge';\nimport { getToday } from '../../utils';\nimport { DailyArtista } from './components/DailyArtista';\n\nexport function DailyArtistaGame() {\n  const { currentUser } = useCurrentUserContext();\n  const today = getToday();\n\n  // Load challenge\n  const challengeQuery = useDailyChallenge(`${today}`);\n\n  if (challengeQuery.isLoading) {\n    return <DailyLoading />;\n  }\n\n  const dailyData = challengeQuery?.data?.['artista'];\n\n  if (challengeQuery.isError || !dailyData) {\n    return <DailyError />;\n  }\n\n  return <DailyArtista data={dailyData} currentUser={currentUser} />;\n}\n","/**\n * Returns an object with each letter in the word as a key and a boolean value indicating if the letter has been found.\n * @param text - The word to extract the letters from.\n * @returns An object with each letter in the word as a key and a boolean value indicating if the letter has been found.\n */\nexport function getLettersInWord(text: string, allowNumbers?: boolean): BooleanDictionary {\n  const cleanedUpText = text\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n    .toLowerCase();\n  const letters = cleanedUpText.split('');\n  const lettersInWord: BooleanDictionary = {};\n\n  letters.forEach((letter) => {\n    if (allowNumbers) {\n      if (letter.match(/[a-zA-Z0-9]/)) {\n        lettersInWord[letter] = false;\n      }\n    } else {\n      if (letter.match(/[a-zA-Z]/)) {\n        lettersInWord[letter] = false;\n      }\n    }\n  });\n  return lettersInWord;\n}\n\n/**\n * Removes diacritical marks from a given character and converts it to lowercase.\n *\n * @param char - The character to be cleaned up.\n * @returns The cleaned up character.\n */\nexport function cleanupLetter(char: string): string {\n  return char\n    .normalize('NFD')\n    .replace(/[\\u0300-\\u036f]/g, '')\n    .toLowerCase();\n}\n\n/**\n * Checks if a character is a letter.\n *\n * @param char - The character to check.\n * @returns `true` if the character is a letter, `false` otherwise.\n */\nexport function isLetter(char: string, allowNumbers?: boolean): boolean {\n  if (allowNumbers) {\n    return cleanupLetter(char).match(/[a-zA-Z0-9]/) !== null;\n  }\n  return cleanupLetter(char).match(/[a-zA-Z]/) !== null;\n}\n","import { useDailyGameState } from 'pages/Daily/hooks/useDailyGameState';\nimport { useDailyLocalToday } from 'pages/Daily/hooks/useDailyLocalToday';\nimport { useShowResultModal } from 'pages/Daily/hooks/useShowResultModal';\nimport { LettersDictionary } from 'pages/Daily/utils/types';\nimport { removeDuplicates } from 'utils/helpers';\n\nimport { getLettersInWord } from './helpers';\nimport { SETTINGS } from './settings';\nimport { FilmacoLocalToday, DailyFilmacoEntry } from './types';\n\ntype GameState = {\n  hearts: number;\n  solution: BooleanDictionary;\n  guesses: LettersDictionary;\n};\n\nconst defaultFilmacoLocalToday: FilmacoLocalToday = {\n  id: '',\n  letters: [],\n  number: 0,\n};\n\nexport function useFilmacoEngine(data: DailyFilmacoEntry) {\n  const { state, setState, updateState } = useDailyGameState<GameState>({\n    solution: getLettersInWord(data.title, true),\n    hearts: SETTINGS.HEARTS,\n    guesses: {},\n  });\n\n  const { localToday, updateLocalStorage } = useDailyLocalToday<FilmacoLocalToday>({\n    key: SETTINGS.LOCAL_TODAY_KEY,\n    gameId: data.id,\n    challengeNumber: data.number ?? 0,\n    defaultValue: defaultFilmacoLocalToday,\n    onApplyLocalState: (value) => {\n      let hearts = SETTINGS.HEARTS;\n      let solution = { ...state.solution };\n      const guesses = value.letters.reduce((acc: LettersDictionary, letter) => {\n        const isCorrect = state.solution[letter] !== undefined;\n        if (state.solution[letter] !== undefined) {\n          solution = { ...solution, [letter]: true };\n        }\n        acc[letter] = {\n          letter: letter,\n          state: isCorrect ? 'correct' : 'incorrect',\n          disabled: true,\n        };\n        hearts = isCorrect ? hearts : hearts - 1;\n        return acc;\n      }, {});\n\n      updateState({\n        guesses,\n        hearts,\n        solution,\n      });\n    },\n  });\n\n  // ACTIONS\n  const guessLetter = (letter: string) => {\n    // Ignore previously guessed letters\n    if (state.guesses[letter]) {\n      return;\n    }\n\n    const isCorrect = state.solution[letter] !== undefined;\n\n    updateLocalStorage({\n      letters: removeDuplicates([...(localToday?.letters ?? []), letter]),\n    });\n\n    const solution = { ...state.solution };\n    if (isCorrect) {\n      solution[letter] = true;\n    }\n\n    setState((prev) => ({\n      ...prev,\n      guesses: {\n        ...prev.guesses,\n        [letter]: {\n          letter: letter,\n          state: isCorrect ? 'correct' : 'incorrect',\n          disabled: true,\n        },\n      },\n      solution,\n      hearts: isCorrect ? prev.hearts : prev.hearts - 1,\n    }));\n  };\n\n  // CONDITIONS\n  const isWin = Object.values(state.solution)\n    .filter((value) => value !== undefined)\n    .every(Boolean);\n  const isLose = state.hearts <= 0;\n  const isComplete = isWin || isLose;\n\n  // RESULTS MODAL\n  const { showResultModal, setShowResultModal } = useShowResultModal(isWin || isLose || isComplete);\n\n  return {\n    hearts: state.hearts,\n    guesses: state.guesses,\n    solution: state.solution,\n    showResultModal,\n    setShowResultModal,\n    isWin,\n    isLose,\n    isComplete,\n    guessLetter,\n  };\n}\n","import { Avatar, Space } from 'antd';\nimport { IconAvatar } from 'components/avatars';\nimport { BoxBlankIcon } from 'icons/BoxBlankIcon';\nimport { LettersDictionary } from 'pages/Daily/utils/types';\nimport { useMemo } from 'react';\n\nimport { cleanupLetter, isLetter } from '../utils/helpers';\n\ntype PromptProps = {\n  text: string;\n  guesses: LettersDictionary;\n};\n\nexport function Prompt({ text, guesses }: PromptProps) {\n  const prompt = useMemo(() => text.split(' ').map((word) => word.split('')), [text]);\n  return (\n    <Space className=\"prompt\" wrap align=\"center\">\n      {prompt.map((word, i, p) => {\n        return (\n          <Space key={`word-${i}`} className=\"prompt-word\" wrap align=\"center\">\n            {word.map((l, j) => {\n              const letter = cleanupLetter(l);\n              const isCorrect = guesses?.[letter]?.state === 'correct';\n              const key = `${j}-${l}-${i}`;\n              if (isLetter(letter, true)) {\n                return isCorrect ? (\n                  <Avatar key={key} className=\"letter-correct\" shape=\"square\">\n                    {l}\n                  </Avatar>\n                ) : (\n                  <IconAvatar key={key} icon={<BoxBlankIcon />} className=\"letter-blank\" />\n                );\n              }\n\n              return (\n                <Avatar key={key} shape=\"square\">\n                  {l}\n                </Avatar>\n              );\n            })}\n            {i + 1 < p.length && <Avatar shape=\"square\"></Avatar>}\n          </Space>\n        );\n      })}\n    </Space>\n  );\n}\n","import { Space, Typography } from 'antd';\nimport { IconAvatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { TextHighlight } from 'components/text';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { BoxXIcon } from 'icons/BoxXIcon';\nimport { TrophyIcon } from 'icons/TrophyIcon';\nimport { getDailyName, getSourceName, writeHeartResultString } from 'pages/Daily/utils';\n\nimport { CopyToClipboardResult } from '../../../components/CopyToClipboardResult';\nimport { SETTINGS } from '../utils/settings';\n\ntype ResultsModalContentProps = {\n  challenge: number;\n  text: string;\n  win: boolean;\n  hearts: number;\n  solution: BooleanDictionary;\n};\n\nexport function ResultsModalContent({ text, challenge, win, hearts, solution }: ResultsModalContentProps) {\n  const { language, dualTranslate } = useLanguage();\n\n  const result = writeResult({\n    game: dualTranslate(SETTINGS.NAME),\n    challenge,\n    remainingHearts: hearts,\n    solution,\n    language,\n  });\n\n  return (\n    <Space direction=\"vertical\" className=\"space-container\">\n      <Typography.Title level={2} className=\"center\">\n        {win ? (\n          <>\n            <IconAvatar icon={<TrophyIcon />} /> <Translate pt=\"Parabéns!\" en=\"Congratulations!\" />\n          </>\n        ) : (\n          <>\n            <IconAvatar icon={<BoxXIcon />} /> <Translate pt=\"Que pena!\" en=\"Too bad!\" />\n          </>\n        )}\n      </Typography.Title>\n      <Typography.Paragraph className=\"center\">\n        {win ? (\n          <Translate pt=\"Você acertou o filme!\" en=\"You guessed the movie!\" />\n        ) : (\n          <Translate pt=\"Você errou o filme!\" en=\"You missed the movie!\" />\n        )}\n      </Typography.Paragraph>\n\n      <TextHighlight className=\"result-answer\">\n        <Typography.Paragraph className=\"text-center\">{text}</Typography.Paragraph>\n      </TextHighlight>\n\n      <CopyToClipboardResult result={result} rows={3} />\n    </Space>\n  );\n}\n\nfunction writeResult({\n  game,\n  challenge,\n  remainingHearts,\n  solution,\n  language,\n}: {\n  game: string;\n  challenge: number;\n  remainingHearts: number;\n  solution: BooleanDictionary;\n  language: Language;\n}) {\n  const totalLetters = Object.keys(solution).length;\n  const guessedLetters = Object.values(solution).filter(Boolean).length;\n\n  return [\n    `🎬 ${getDailyName(language)} ${game} #${challenge}`,\n    `${writeHeartResultString(remainingHearts, SETTINGS.HEARTS)} (${Math.round((guessedLetters / totalLetters) * 100)}%)`,\n    `https://www.kavispires.com/tardedivertida/#/${getSourceName(language)}`,\n  ].join('\\n');\n}\n","import { HeartFilled } from '@ant-design/icons';\nimport { Typography } from 'antd';\nimport { Translate } from 'components/language';\nimport { BetaBanner } from 'pages/Daily/components/BetaBanner';\n\nexport function Rules() {\n  return (\n    <Typography>\n      <BetaBanner />\n      <Translate\n        pt={\n          <>\n            <li>Tente adivinhar o filme secreto observando os ícones e ano do filme.</li>\n            <li>\n              Os ícones não estão em ordem e podem significar palavras no título ou sobre o enredo do filme.\n            </li>\n            <li>Você deve apertar letra por letra (e números!) até que o nome esteja completo.</li>\n            <li>\n              Cada letra que você aperta que não está presente na resposta remove um coração e você tem apenas\n              3 <HeartFilled />.\n            </li>\n            <li>Boa sorte!</li>\n          </>\n        }\n        en={\n          <>\n            <li>Try to guess the secret movie by looking at the icons and movie year.</li>\n            <li>The icons are not in order and may mean words in the movie title or about the plot.</li>\n            <li>You must press letter by letter (and numbers!) until the name is complete.</li>\n            <li>\n              Each letter you press that is not present in the answer removes a heart and you only have 3{' '}\n              <HeartFilled />.\n            </li>\n            <li>Good luck!</li>\n          </>\n        }\n      />\n    </Typography>\n  );\n}\n","import { Button, Layout, Modal, Space, Typography } from 'antd';\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { DualTranslate, Translate } from 'components/language';\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { DailyMovieGameIcon } from 'icons/DailyMovieGameIcon';\nimport { Keyboard } from 'pages/Daily/components/Keyboard';\nimport { Me } from 'types/user';\n\nimport { BarChartOutlined } from '@ant-design/icons';\n\nimport { Header } from '../../../components/Header';\nimport { Menu } from '../../../components/Menu';\nimport { SETTINGS } from '../utils/settings';\nimport { DailyFilmacoEntry } from '../utils/types';\nimport { useFilmacoEngine } from '../utils/useFilmacoEngine';\nimport { Prompt } from './Prompt';\nimport { ResultsModalContent } from './ResultsModalContent';\nimport { Rules } from './Rules';\n\ntype DailyFilmacoProps = {\n  data: DailyFilmacoEntry;\n  currentUser: Me;\n};\n\nexport function DailyFilmaco({ data }: DailyFilmacoProps) {\n  const { hearts, guesses, showResultModal, setShowResultModal, isWin, isComplete, guessLetter, solution } =\n    useFilmacoEngine(data);\n  const width = useCardWidth(5, { margin: 64, maxWidth: 100, minWidth: 65 });\n\n  return (\n    <Layout className=\"app\">\n      <Header icon={<DailyMovieGameIcon />}>\n        TD <DualTranslate>{SETTINGS.NAME}</DualTranslate> #{data.number}\n      </Header>\n      <Layout.Content>\n        <Menu\n          hearts={hearts}\n          total={SETTINGS.HEARTS}\n          openRules={!isComplete || hearts === SETTINGS.HEARTS}\n          rules={<Rules />}\n        />\n\n        <Space className=\"space-container\" direction=\"vertical\" align=\"center\">\n          <Typography.Text strong>\n            <Translate pt=\"Ano de Lançamento\" en=\"Release Year\" />: {data.year}\n          </Typography.Text>\n        </Space>\n\n        <Space className=\"space-container\" wrap>\n          {data.itemsIds.map((itemId, index) => (\n            <ItemCard key={`${itemId}-${index}`} id={itemId} width={width} />\n          ))}\n        </Space>\n\n        <Prompt text={data.title} guesses={guesses} />\n\n        {isComplete && (\n          <Space className=\"results-container\" direction=\"vertical\" align=\"center\">\n            <Button onClick={() => setShowResultModal(true)} type=\"primary\" icon={<BarChartOutlined />}>\n              <Translate pt=\"Ver Resultado\" en=\"Show Results\" />\n            </Button>\n          </Space>\n        )}\n        <Modal\n          title={<Translate pt=\"Resultado\" en=\"Results\" />}\n          open={showResultModal}\n          onCancel={() => setShowResultModal(false)}\n          okButtonProps={{ hidden: true }}\n          cancelButtonProps={{ hidden: true }}\n        >\n          <ResultsModalContent\n            challenge={data.number}\n            win={isWin}\n            hearts={hearts}\n            text={data.title}\n            solution={solution}\n          />\n        </Modal>\n\n        <Keyboard lettersState={guesses} onLetterClick={guessLetter} disabled={isComplete} withNumbers />\n      </Layout.Content>\n    </Layout>\n  );\n}\n","import './utils/styles.scss';\n\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\nimport { DailyError } from 'pages/Daily/components/DailyError';\nimport { DailyLoading } from 'pages/Daily/components/DailyLoading';\n\nimport { useDailyChallenge } from '../../hooks/useDailyChallenge';\nimport { getToday } from '../../utils';\nimport { DailyFilmaco } from './components/DailyFilmaco';\n\nexport function DailyFilmacoGame() {\n  const { currentUser } = useCurrentUserContext();\n  const today = getToday();\n\n  // Load challenge\n  const challengeQuery = useDailyChallenge(`${today}`);\n\n  if (challengeQuery.isLoading) {\n    return <DailyLoading />;\n  }\n\n  const dailyData = challengeQuery?.data?.['filmaco'];\n\n  if (challengeQuery.isError || !dailyData) {\n    return <DailyError />;\n  }\n\n  return <DailyFilmaco data={dailyData} currentUser={currentUser} />;\n}\n","import './utils/daily.scss';\n\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { LoginModal } from 'pages/Me/components/LoginModal';\nimport { useLocation } from 'react-router-dom';\nimport { useEffectOnce, useTitle } from 'react-use';\n\nimport { DailyArteRuimGame } from './games/ArteRuim/DailyArteRuimGame';\nimport { DailyChrome } from './components/DailyChrome';\nimport { Hub } from './games/Hub';\nimport { DailyAquiOGame } from './games/AquiO/DailyAquiOGame';\nimport { getDailyName } from './utils';\nimport { DailyPalavreadoGame } from './games/Palavreado/DailyPalavreadoGame';\nimport { DailyArtistaGame } from './games/Artista/DailyArtistaGame';\nimport { DailyFilmacoGame } from './games/Filmaco/DailyFilmacoGame';\n\nfunction DailyPage() {\n  const { isAuthenticated } = useCurrentUserContext();\n  const { pathname } = useLocation();\n  const { setLanguage, language } = useLanguage();\n\n  useEffectOnce(() => {\n    setLanguage(pathname.includes('diario') ? 'pt' : 'en');\n  });\n\n  const subPath = pathname.split('/')?.[2];\n\n  useTitle(`${getDailyName(language)} - Tarde Divertida`);\n\n  if (!isAuthenticated) {\n    return (\n      <DailyChrome>\n        <LoginModal isAuthenticated={false} />\n      </DailyChrome>\n    );\n  }\n\n  const Outlet =\n    {\n      '': Hub,\n      'aqui-o': DailyAquiOGame,\n      'arte-ruim': DailyArteRuimGame,\n      hub: Hub,\n      palavreado: DailyPalavreadoGame,\n      artista: DailyArtistaGame,\n      filmaco: DailyFilmacoGame,\n    }?.[subPath] ?? Hub;\n\n  return <Outlet />;\n}\n\nexport default DailyPage;\n","// Ant Design Resources\nimport { Modal } from 'antd';\n// Utils\nimport { NOOP } from 'utils/constants';\n// Components\nimport { SignIn } from 'components/auth/SignIn';\nimport { Translate } from 'components/language';\n\ntype LoginModalProps = {\n  isAuthenticated: boolean;\n};\n\nexport function LoginModal({ isAuthenticated }: LoginModalProps) {\n  return (\n    <Modal\n      open={!isAuthenticated}\n      title={<Translate pt=\"Logar\" en=\"LogIn\" />}\n      cancelText={<Translate pt=\"Cancelar\" en=\"Cancel\" />}\n      onCancel={NOOP}\n      okButtonProps={{\n        style: { display: 'none' },\n      }}\n      cancelButtonProps={{\n        style: { display: 'none' },\n      }}\n      closable={false}\n    >\n      <SignIn onSuccess={NOOP} />\n    </Modal>\n  );\n}\n"],"names":["SignIn","onSuccess","useState","view","setView","className","src","logo","preview","checkedChildren","pt","en","unCheckedChildren","onChange","checked","SignInWithGoogle","SignInWithEmail","buttonProps","useMutation","mutationFn","signInWithGoogle","isPending","mutate","isError","direction","align","classNames","item","description","type","showIcon","size","onClick","loading","block","icon","Form","form","translate","useLanguage","showForgotPassword","setShowForgotPassword","signIn","getFieldValue","name","labelCol","span","wrapperCol","style","maxWidth","initialValues","remember","onFinish","autoComplete","label","rules","required","message","help","offset","htmlType","v","ResetPasswordForm","email","App","resetPassword","success","username","level","CanvasResizer","useGlobalState","canvasSize","setCanvasSize","position","DragOutlined","labelText","content","value","min","max","step","CanvasSVG","drawing","width","height","strokeWidth","viewBox","konvaLines","JSON","parse","paths","map","lineArr","path","x","y","length","strokeWidthBySize","small","medium","large","xmlns","overflow","index","d","fill","stroke","strokeLinecap","strokeLinejoin","strokeMiterlimit","DrawingCanvas","lines","setLines","showControls","willReadFrequently","drawingHistory","setDrawingHistory","isDrawing","useRef","startDrawing","current","stopDrawing","startLine","e","pos","target","getStage","getPointerPosition","Math","round","finishLine","point","lastLineEntry","concat","splice","handleMouseDown","handleMouseMove","lastLine","handleMouseUp","handleOffsetMouseUp","handleOffsetMouseDown","vertical","onMouseDown","onMousemove","onMouseup","onTouchStart","onTouchMove","onTouchEnd","onMouseLeave","window","document","addEventListener","onMouseEnter","removeEventListener","clsx","id","line","i","points","tension","lineCap","globalCompositeOperation","linesCopy","drawingHistoryCopy","pop","push","disabled","UndoOutlined","lastUndoLine","DeleteOutlined","getSource","str","match","numId","parseInt","itemId","sourceId","ceil","ItemCard","title","text","padding","source","Boolean","Card","children","header","footer","color","randomColor","headerClassName","footerClassName","hideHeader","baseClass","bgColor","getColorFromLetter","toUpperCase","startsWith","backgroundColor","MetricHighlight","iconSize","iconPlacement","TimeHighlight","Sprite","baseUrl","useTDBaseUrl","useQuery","queryKey","queryFn","fetch","response","enabled","isLoading","data","paddedWidth","display","placeItems","svgContent","WarningOutlined","xlinkHref","dangerouslySetInnerHTML","__html","background","Instruction","white","contained","fullWidth","noMargin","RoundsLeftInstruction","left","total","forceLastRound","pluralize","TextHighlight","Title","RuleInstruction","sfx","action","PlayCircleFilled","alert","AlertFilled","event","ExclamationCircleFilled","lore","MessageFilled","rule","ReadFilled","tip","BulbFilled","scoring","StarFilled","wait","ClockCircleFilled","bot","RobotFilled","animationClass","getAnimationClass","infinite","speed","repeat","token","theme","colorPrimary","TimerClock","minutes","seconds","AnimatedClockIcon","TimerBar","steps","props","status","percentage","percent","showInfo","marginBottom","undefined","TimedTimerBar","duration","onExpire","timeLeft","useCountdown","autoStart","TimedTimerClock","timerProps","WaitingTime","privateTimeLeft","library","process","Error","attributeName","dur","from","repeatCount","to","ApplauseIcon","ClockIcon","cx","cy","r","GoogleIcon","SkullIcon","useDailyChallenge","today","language","collectionName","getSourceName","console","count","DAILY_API","DAILY_API_ACTIONS","date","responseData","print","retry","SETTINGS","NAME","HEARTS","GOAL","TD_DAILY_AQUI_O_MODE","LOCAL_TODAY_KEY","DURATION","DRAWINGS","WORD_LENGTH","keys","AQUI_O","ARTE_RUIM","PALAVREADO","ARTISTA","FILMACO","DevResetLocalStorageButton","justify","gap","forEach","key","localStorage","removeItem","BugOutlined","isDevEnv","yesterday","stringify","number","setItem","Header","Content","Layout","Footer","DailyChrome","challengeQuery","getToday","setCount","CalendarIcon","prev","DailyError","toggleLanguage","navigate","useNavigate","DailyLoading","margin","NUMBERS","FIRST_ROW","SECOND_ROW","THIRD_ROW","Keyboard","lettersState","onLetterClick","onBackspaceClick","onEnterClick","withNumbers","useCardWidth","useEffect","handleKeyUp","includes","letter","Key","state","baseClassName","Menu","hearts","openRules","DailyHubLink","Hearts","remaining","RulesModal","defaultOpen","Array","_","heart","HeartFilled","HeartOutlined","open","setOpen","QuestionCircleFilled","placement","onClose","AppstoreFilled","useDailyGameState","initialState","setState","updateState","newState","useDailyLocalToday","gameId","challengeNumber","defaultValue","onApplyLocalState","useLocalStorage","localToday","setLocalToday","hasAppliedLocalToday","setHasAppliedLocalToday","stateToApply","updateLocalStorage","useShowResultModal","condition","onUpdate","showResultModal","setShowResultModal","getLettersInWord","letters","normalize","replace","toLowerCase","split","lettersInWord","cleanupLetter","char","defaultArteRuimLocalToday","DrawingCarousel","drawings","minWidth","autoplay","autoplaySpeed","Prompt","guesses","prompt","useMemo","word","wrap","p","l","j","isCorrect","shape","BoxBlankIcon","CopyToClipboardResult","result","rows","useCopyToClipboard","copyToClipboard","info","readOnly","cols","ResultsModalContent","challenge","win","solution","game","remainingHearts","totalLetters","Object","guessedLetters","values","filter","getDailyName","writeHeartResultString","join","writeResult","dualTranslate","TrophyIcon","BoxXIcon","strong","DailyDrawingGameIcon","Rules","DailyArteRuim","reduce","acc","isWin","every","isLose","isComplete","guessLetter","removeDuplicates","useArteRuimEngine","DailyArtGameIcon","BarChartOutlined","onCancel","okButtonProps","hidden","cancelButtonProps","DailyArteRuimGame","currentUser","useCurrentUserContext","dailyData","Hub","hoverType","DailyFindingGameIcon","DailyMovieGameIcon","DailyWordGameIcon","DailyGroupingGameIcon","DailyCrimeGameIcon","DailyImagesGameIcon","MISC_SETS","getDiscs","entry","challengingGame","allItems","shuffle","itemsIds","discs","card","createCards","POSITIONS","SIZES","Z_INDEXES","list","previousCard","previousMatchId","shuffledList","randomPositions","randomSizes","items","sampleSize","rotation","random","zIndex","SEPARATOR","previousCardItems","newCardItems","chain","difference","take","matchingItem","sample","defaultAquiOLocalToday","hardMode","attempts","Disc","disc","onSelect","transform","role","PreloadItems","titles","SealOfApprovalIcon","challengeTitle","progress","isRandomGame","lastMatch","totalHearts","goal","getTitle","better","slice","floor","delay","BetaBanner","banner","DailyAquiO","onToggleGame","timesUp","setTimesUp","mode","setMode","discIndex","discA","discB","intersectionBy","isRunning","restart","pause","onStart","inNSeconds","isPlaying","useAquiOEngine","useMeasure","contentRef","contentMeasure","headerRef","headerMeasure","discWidth","ref","DevResult","DailyAquiOGame","setRandomGame","randomGameQuery","chosenSet","gameData","setId","isRefetching","refetch","KEYWORD_INDEXES","swaps","Board","onLetterSelection","selection","swap","locked","row","col","previousWrongPlacement","some","words","cleanUpAttempts","chunk","trim","DailyPalavreado","indexOf","latestGuess","copyLetters","cloneDeep","answer","w","flat","String","selectLetter","temp","submitGrid","generatedWords","lg","wordIndex","isAllCorrect","usePalavreadoEngine","keyword","attempt","DailyPalavreadoGame","defaultLocalToday","played","useArtistaEngine","cards","cardIndex","screen","onNextCard","onSaveDrawings","mutation","notification","query","mutationKey","payload","cardId","onError","error","useDailySaveDrawings","stateToSave","toSave","Date","now","playerId","successRate","cardNumber","isIdle","isSaving","alreadyPlayed","Canvas","transformOrigin","DailyArtista","ThumbsUpIcon","AnimatedProcessingIcon","DailyArtistaGame","allowNumbers","defaultFilmacoLocalToday","DailyFilmaco","useFilmacoEngine","year","DailyFilmacoGame","isAuthenticated","pathname","useLocation","setLanguage","useEffectOnce","subPath","useTitle","LoginModal","Outlet","hub","palavreado","artista","filmaco","cancelText","NOOP","closable"],"sourceRoot":""}