{"version":3,"file":"static/js/page-td-connect-trio.f79b260f.chunk.js","mappings":"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","sources":["components/auth/SignIn.tsx","components/cards/ItemCard.tsx","components/sprites/Sprite.tsx","components/text/Instruction.tsx","components/text/RoundsLeftInstruction.tsx","components/text/TextHighlight.tsx","components/text/Title.tsx","components/text/RuleInstruction.tsx","hooks/useTDBaseUrl.ts","icons/BoxXIcon.tsx","icons/GoogleIcon.tsx","icons/PlayerIconsIcon.tsx","icons/TrophyIcon.tsx","pages/Daily/games/ConnectTrio/Menu.tsx","pages/Dev/ConnectItems/hooks.ts","pages/Dev/ConnectItems/ResultsModalContent.tsx","pages/Dev/ConnectItems/ConnectTrioPage.tsx","pages/Me/components/LoginModal.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { useMutation } from '@tanstack/react-query';\n// Ant Design Resources\nimport { Button, Form, Input, Alert, Image, App, Switch, Space, ButtonProps } from 'antd';\n// API\nimport { resetPassword, signIn, signInWithGoogle } from 'services/firebase';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Image\nimport logo from 'assets/images/tarde-divertida-logo.svg';\nimport { Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { UserCredential } from 'firebase/auth';\nimport { IconAvatar } from 'components/avatars';\nimport { GoogleIcon } from 'icons/GoogleIcon';\n\ntype SignInProps = {\n  onSuccess: GenericFunction;\n};\n\nexport function SignIn({ onSuccess }: SignInProps) {\n  const [view, setView] = useState('google');\n\n  return (\n    <div className=\"sign-in\">\n      <div className=\"sign-in__logo\">\n        <Image src={logo} preview={false} />\n      </div>\n\n      <Space className=\"space-container\">\n        <Switch\n          checkedChildren={<Translate pt=\"E-mail e senha\" en=\"Email and Password\" />}\n          unCheckedChildren=\"Google\"\n          onChange={(checked) => setView(checked ? 'email' : 'google')}\n        />\n      </Space>\n\n      {view === 'google' ? (\n        <SignInWithGoogle onSuccess={onSuccess} />\n      ) : (\n        <SignInWithEmail onSuccess={onSuccess} />\n      )}\n    </div>\n  );\n}\n\nexport function SignInWithGoogle({ onSuccess, ...buttonProps }: SignInProps & ButtonProps) {\n  const { isLoading, mutate, isError } = useMutation<UserCredential, Error, void, unknown>({\n    mutationFn: async () => await signInWithGoogle(),\n    onSuccess,\n  });\n\n  const onFinish = () => {\n    mutate();\n  };\n\n  return (\n    <Space\n      className=\"space-container\"\n      direction=\"vertical\"\n      align=\"center\"\n      classNames={{ item: 'full-width' }}\n    >\n      <>\n        {isError && (\n          <Alert\n            description={\n              <Translate pt=\"Algo deu errado, tente novamente\" en=\"Something went wrong. Please try again\" />\n            }\n            type=\"error\"\n            showIcon\n            className=\"sign-in__error-alert\"\n          />\n        )}\n        <Button\n          type=\"primary\"\n          size=\"large\"\n          onClick={onFinish}\n          loading={isLoading}\n          block\n          icon={<IconAvatar icon={<GoogleIcon />} size=\"small\" />}\n          {...buttonProps}\n        >\n          <Translate pt=\"Entrar com Google\" en=\"Sign in with Google\" />\n        </Button>\n      </>\n    </Space>\n  );\n}\n\nfunction SignInWithEmail({ onSuccess }: SignInProps) {\n  const [form] = Form.useForm();\n  const { translate } = useLanguage();\n  const [showForgotPassword, setShowForgotPassword] = useState(false);\n\n  const { isLoading, mutate, isError } = useMutation<UserCredential, Error, void, unknown>({\n    mutationFn: async () => await signIn(form.getFieldValue('username'), form.getFieldValue('password')),\n    onSuccess,\n  });\n\n  const onFinish = () => {\n    mutate();\n  };\n\n  return (\n    <>\n      <Form\n        name=\"login\"\n        form={form}\n        labelCol={{ span: 8 }}\n        wrapperCol={{ span: 16 }}\n        style={{ maxWidth: 600 }}\n        initialValues={{ remember: true }}\n        onFinish={onFinish}\n        autoComplete=\"off\"\n      >\n        <Form.Item\n          label={<Translate pt=\"E-mail\" en=\"E-mail\" />}\n          name=\"username\"\n          rules={[\n            { required: true, message: translate('e-mail é um campo obrigatório', 'e-mail is required') },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label={<Translate pt=\"Senha\" en=\"Password\" />}\n          name=\"password\"\n          rules={[\n            { required: true, message: translate('e-mail é um campo obrigatório', 'e-mail is required') },\n          ]}\n          help={translate('Mínimo 6 caracteres', 'Minimum of 6 characters')}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        {isError && (\n          <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n            <Alert\n              description={\n                <Translate\n                  pt=\"Algo deu errado, tente novamente\"\n                  en=\"Something went wrong. Please try again\"\n                />\n              }\n              type=\"error\"\n              showIcon\n              className=\"sign-in__error-alert\"\n            />\n          </Form.Item>\n        )}\n\n        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n          <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\n            <Translate pt=\"Entrar\" en=\"Submit\" />\n          </Button>\n\n          <Button type=\"link\" onClick={() => setShowForgotPassword((v) => !v)}>\n            <Translate pt=\"Esqueci minha senha\" en=\"Forgot my password\" />\n          </Button>\n        </Form.Item>\n      </Form>\n      {showForgotPassword && (\n        <Alert\n          type=\"info\"\n          message={\n            <ResetPasswordForm\n              email={form.getFieldValue('username')}\n              onSuccess={() => setShowForgotPassword(false)}\n            />\n          }\n        />\n      )}\n    </>\n  );\n}\n\ntype ResetPasswordFormProps = {\n  email?: string;\n  onSuccess: GenericFunction;\n};\n\nfunction ResetPasswordForm({ email, onSuccess }: ResetPasswordFormProps) {\n  const { message } = App.useApp();\n  const [form] = Form.useForm();\n  const { translate } = useLanguage();\n\n  const { isLoading, mutate, isError } = useMutation({\n    mutationFn: async () => await resetPassword(form.getFieldValue('username')),\n    onSuccess: () => {\n      onSuccess();\n      message.success(\n        translate(\n          'Verifique seu e-mail enviado para redefinir a sua senha',\n          'Verify your email to reset your password'\n        )\n      );\n    },\n  });\n\n  const onFinish = () => {\n    mutate();\n  };\n\n  return (\n    <Form\n      name=\"forgot-password\"\n      form={form}\n      labelCol={{ span: 8 }}\n      wrapperCol={{ span: 16 }}\n      style={{ maxWidth: 600 }}\n      initialValues={{ username: email, remember: true }}\n      onFinish={onFinish}\n      autoComplete=\"off\"\n    >\n      <Form.Item>\n        <Title level={4} size=\"xx-small\">\n          <Translate pt=\"Redefinir a senha\" en=\"Password Reset\" />\n        </Title>\n      </Form.Item>\n      <Form.Item\n        label={<Translate pt=\"E-mail\" en=\"E-mail\" />}\n        name=\"username\"\n        rules={[\n          { required: true, message: translate('e-mail é um campo obrigatório', 'e-mail is required') },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      {isError && (\n        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n          <Alert\n            description={\n              <Translate\n                pt=\"Algo deu errado, provavelmente este e-mail não existe no banco de dados da Tarde Divertida\"\n                en=\"Something went wrong. Please try again\"\n              />\n            }\n            type=\"error\"\n            showIcon\n            className=\"sign-in__error-alert\"\n          />\n        </Form.Item>\n      )}\n\n      <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n        <Button type=\"primary\" htmlType=\"submit\" disabled={isLoading}>\n          <Translate pt=\"Enviar\" en=\"Submit\" />\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n","import clsx from 'clsx';\n// Components\nimport { Sprite } from 'components/sprites';\n// Sass\nimport './ItemCard.scss';\nimport { DualTranslate } from 'components/language';\n\nexport type ItemCardProps = {\n  /**\n   * The id of the item\n   */\n  id: string;\n  /**\n   * The width of the item\n   */\n  width?: number;\n  /**\n   * Optional class name\n   */\n  className?: string;\n  /**\n   * Replacement title, usually the name of the item\n   */\n  title?: string;\n  /**\n   * Optional text to display\n   */\n  text?: DualLanguageValue;\n  /**\n   * Optional padding\n   */\n  padding?: number;\n};\n\nconst BASE = 64;\n\n/**\n * Retrieves the source and item ID based on a given string.\n *\n * @param str - The input string.\n * @returns An array containing the source and item ID.\n */\nconst getSource = (str: string) => {\n  const match = str.match(/\\d+/);\n  const numId = match ? parseInt(match[0], 10) : 0;\n  const itemId = `item-${numId}`;\n  const sourceId = Math.ceil(numId / BASE) * BASE;\n  const source = `items-${sourceId}`;\n  return [source, itemId];\n};\n\n/**\n * An item card component.\n */\nexport function ItemCard({ id, width = 75, className, title, text, padding }: ItemCardProps) {\n  const [source, itemId] = getSource(id);\n\n  const height = text ? 'auto' : `${width}px`;\n\n  return (\n    <div className={clsx('item-card', className)} style={{ width: `${width}px`, height }}>\n      <Sprite source={source} id={itemId} width={width} title={title} padding={padding} />\n      {Boolean(text) && (\n        <span className=\"item-card__text\">\n          <DualTranslate>{text!}</DualTranslate>\n        </span>\n      )}\n    </div>\n  );\n}\n","import { WarningOutlined } from '@ant-design/icons';\nimport { useQuery } from '@tanstack/react-query';\nimport { Spin, Tooltip } from 'antd';\nimport { useTDBaseUrl } from 'hooks/useTDBaseUrl';\n\ntype SpriteProps = {\n  /**\n   * The sprite source name\n   */\n  source: string;\n  /**\n   * The id of the item\n   */\n  id: string;\n  /**\n   * The width of the item\n   */\n  width?: number;\n  /**\n   * Replacement title, usually the name of the item\n   */\n  title?: string;\n  /**\n   * Optional class name\n   */\n  className?: string;\n  /**\n   *\n   */\n  padding?: number;\n};\n\n/**\n * Loads a sprite from the Tarde Divertida sprites\n * @param {SpriteProps} props\n * @returns a single sprite item\n */\nexport function Sprite({ id, source, width = 75, padding = 6, title, className }: SpriteProps) {\n  const baseUrl = useTDBaseUrl('tdi');\n\n  const { isLoading, data, isError } = useQuery({\n    queryKey: ['sprite', source],\n    queryFn: async () => {\n      const response = await fetch(`${baseUrl}sprites/${source}.svg`);\n      return await response.text();\n    },\n    enabled: !!id && !!source,\n  });\n\n  const paddedWidth = width - padding * 2;\n\n  if (isLoading) {\n    return (\n      <span\n        style={{\n          width: `${paddedWidth}px`,\n          height: `${paddedWidth}px`,\n          padding,\n          display: 'grid',\n          placeItems: 'center',\n        }}\n        className={className}\n      >\n        <Spin />\n      </span>\n    );\n  }\n\n  const svgContent = data;\n\n  if (isError || !svgContent) {\n    return (\n      <span\n        style={{\n          width: `${paddedWidth}px`,\n          height: `${paddedWidth}px`,\n          padding,\n          display: 'grid',\n          placeItems: 'center',\n        }}\n        className={className}\n      >\n        <WarningOutlined />\n      </span>\n    );\n  }\n\n  return (\n    <svg\n      viewBox=\"0 0 512 512\"\n      style={{ width: `${paddedWidth}px`, height: `${paddedWidth}px`, padding }}\n      className={className}\n    >\n      <use xlinkHref={`#${id}`} dangerouslySetInnerHTML={{ __html: svgContent }} />\n      <foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">\n        {title && (\n          <Tooltip title={title}>\n            <div style={{ background: 'transparent', width: '100%', height: '100vh' }}></div>\n          </Tooltip>\n        )}\n      </foreignObject>\n    </svg>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Sass\nimport './Instruction.scss';\n\ntype InstructionsProps = {\n  /**\n   * The content of the instruction\n   */\n  children: ReactNode;\n  /**\n   * Adds a semi transparent background (white or black opposite to the white property)\n   */\n  contained?: boolean;\n  /**\n   * Make text color white\n   */\n  white?: boolean;\n  /**\n   * Makes instruction width 100%\n   */\n  fullWidth?: boolean;\n  /**\n   * Custom class name\n   */\n  className?: string;\n  /**\n   *\n   */\n  noMargin?: boolean;\n};\n\n/**\n * Typography container for instructions\n */\nexport const Instruction = ({\n  children,\n  white,\n  className,\n  contained,\n  fullWidth,\n  noMargin = false,\n}: InstructionsProps) => {\n  const baseClass = 'instruction';\n\n  return (\n    <Typography.Text\n      className={clsx(\n        baseClass,\n        contained && `${baseClass}--contained`,\n        white && `${baseClass}--white`,\n        fullWidth && `${baseClass}--full-width`,\n        noMargin && `${baseClass}--no-margin`,\n        className\n      )}\n      data-testid=\"instruction\"\n    >\n      {children}\n    </Typography.Text>\n  );\n};\n","// Types\nimport type { GameRound } from 'types/game';\n// Components\nimport { Translate } from 'components/language';\nimport { RuleInstruction } from 'components/text';\nimport { pluralize } from 'utils/helpers';\n\ntype RoundsLeftInstructionProps = {\n  /**\n   * The state round object with current and total values\n   */\n  round: GameRound;\n};\n\n/**\n * Displays instructional sentence based on the number of rounds left for the game to end\n */\nexport function RoundsLeftInstruction({ round }: RoundsLeftInstructionProps) {\n  const left = (round?.total ?? 0) - (round?.current ?? 0);\n\n  if (left === 0 || round.forceLastRound) {\n    return (\n      <RuleInstruction type=\"event\">\n        <Translate pt=\"Essa foi a última rodada\" en=\"No more rounds left\" />\n      </RuleInstruction>\n    );\n  }\n\n  return (\n    <RuleInstruction type=\"tip\">\n      <Translate\n        pt={\n          <>\n            {pluralize(left, 'Falta', 'Faltam')} <strong>{left}</strong> {pluralize(left, 'rodada')} para o\n            jogo terminar...\n          </>\n        }\n        en={\n          <>\n            <strong>{left}</strong> {pluralize(left, 'round')} left for the game to end...\n          </>\n        }\n      />\n    </RuleInstruction>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Sass\nimport './TextHighlight.scss';\n\ntype TextHighlightProps = {\n  /**\n   * The text to be highlighted\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n};\n\nexport function TextHighlight({ children, className }: TextHighlightProps) {\n  return <span className={clsx('text-highlight', className)}>{children}</span>;\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Sass\nimport './Title.scss';\n\nexport type TitleProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Makes text white\n   */\n  white?: boolean;\n  /**\n   * Icon prefixing the title\n   */\n  icon?: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * The heading level (default: 2)\n   */\n  level?: 1 | 2 | 3 | 4 | 5;\n  /**\n   * The size of the title (default: medium)\n   */\n  size?: 'xx-small' | 'x-small' | 'small' | 'medium' | 'large';\n  /**\n   * The alignment of the text (default: center)\n   */\n  align?: 'left' | 'right' | 'center';\n};\n\nexport const Title = ({\n  children,\n  white,\n  icon,\n  className,\n  level = 2,\n  size = 'medium',\n  align = 'center',\n}: TitleProps) => {\n  return (\n    <Typography.Title\n      level={level}\n      className={clsx('title', `title--${size}`, `title--align-${align}`, white && 'title--white', className)}\n    >\n      {Boolean(icon) && icon}\n      {children}\n    </Typography.Title>\n  );\n};\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Typography, theme } from 'antd';\nimport {\n  AlertFilled,\n  BulbFilled,\n  ClockCircleFilled,\n  ExclamationCircleFilled,\n  MessageFilled,\n  PlayCircleFilled,\n  ReadFilled,\n  RobotFilled,\n  StarFilled,\n} from '@ant-design/icons';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Sass\nimport './RuleInstruction.scss';\n\nexport type RuleInstructionProps = {\n  /**\n   * The content of the rule instruction\n   */\n  children: ReactNode;\n  /**\n   * Makes instruction width 100%\n   */\n  fullWidth?: boolean;\n  /**\n   * Custom class name\n   */\n  className?: string;\n  /**\n   * The type of the rule instruction (default: rule)\n   * Rule is used for general rules\n   * Action is used when the player must do something\n   * Event is used when something happens like the result of an action or decision\n   * Alert is used when something very important needs attention (constant animation)\n   * Lore is used for story elements\n   * Scoring for result points (not rule)\n   * Wait for when the player must wait for something to happen\n   */\n  type: 'rule' | 'action' | 'event' | 'alert' | 'lore' | 'tip' | 'scoring' | 'wait' | 'bot';\n  /**\n   * Optional sound effect played when the component is rendered\n   */\n  sfx?: ReactNode;\n};\n\n/**\n * Typography container for rules instructions, if multiple lines, use <br /> to break lines\n * Do not use lists (ul, ol, li) inside this component\n * Add an icon on the left side\n */\nexport const RuleInstruction = ({\n  children,\n  className,\n  fullWidth,\n  type = 'rule',\n  sfx,\n}: RuleInstructionProps) => {\n  const baseClass = 'rule-instruction';\n\n  const icon = {\n    action: <PlayCircleFilled />,\n    alert: <AlertFilled />,\n    event: <ExclamationCircleFilled />,\n    lore: <MessageFilled />,\n    rule: <ReadFilled />,\n    tip: <BulbFilled />,\n    scoring: <StarFilled />,\n    wait: <ClockCircleFilled />,\n    bot: <RobotFilled />,\n  }[type];\n\n  const animationClass = {\n    action: getAnimationClass('shakeX'),\n    alert: getAnimationClass('flash', { infinite: true, speed: 'fast' }),\n    event: getAnimationClass('tada', { repeat: 3, speed: 'fast' }),\n    lore: getAnimationClass('pulse'),\n    rule: getAnimationClass('pulse'),\n    tip: getAnimationClass('pulse'),\n    scoring: getAnimationClass('pulse'),\n    wait: getAnimationClass('pulse'),\n    bot: getAnimationClass('pulse'),\n  }[type];\n\n  const { token } = theme.useToken();\n  const color = type === 'action' ? { background: token.colorPrimary } : {};\n\n  return (\n    <div\n      className={clsx(baseClass, fullWidth && `${baseClass}--full-width`, className)}\n      data-testid=\"rule-instruction\"\n    >\n      <div className={clsx(`${baseClass}__icon`, `${baseClass}__icon--${type}`)} style={color}>\n        <div className={animationClass}>{icon}</div>\n      </div>\n      {sfx}\n      <Typography.Paragraph className={clsx(`${baseClass}__content`)}>{children}</Typography.Paragraph>\n    </div>\n  );\n};\n","type TDUrlKind = 'tdi' | 'tdr' | 'tdi-data';\n\n/**\n * Returns the URL for the given kind of resource\n * @param kind the kind of resource\n * @returns the URL for the given kind of resource\n */\nexport function useTDBaseUrl(kind: TDUrlKind): string {\n  const base = process.env.REACT_APP_TD_BASE_URL;\n\n  switch (kind) {\n    case 'tdi':\n      return `${base}/${process.env.REACT_APP_TDI_IMAGES}`;\n    case 'tdr':\n      return `${base}/${process.env.REACT_APP_TD_RESOURCES}`;\n    case 'tdi-data':\n      return `${base}/${process.env.REACT_APP_TDI_DATA}`;\n    default:\n      return '';\n  }\n}\n","export function BoxXIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#f07281\"\n        d=\"M473.2 481.1H38.8a31.28 31.28 0 01-31.3-31.3V45.2A37.73 37.73 0 0145.2 7.5h421.6a37.73 37.73 0 0137.7 37.7v404.6a31.28 31.28 0 01-31.3 31.3z\"\n      ></path>\n      <path\n        fill=\"#eb5569\"\n        d=\"M504.5 45.2v404.6a31.28 31.28 0 01-31.3 31.3H452a31.28 31.28 0 0031.3-31.3V45.2a37.73 37.73 0 00-37.7-37.7h21.1a37.75 37.75 0 0137.8 37.7z\"\n      ></path>\n      <path\n        fill=\"#f07281\"\n        d=\"M434.7 436.5H77.3a25.65 25.65 0 01-25.6-25.6V82.8A30.81 30.81 0 0182.5 52h347.1a30.81 30.81 0 0130.8 30.8v328.1a25.73 25.73 0 01-25.7 25.6z\"\n      ></path>\n      <path\n        fill=\"#eb5569\"\n        d=\"M429.5 52.1h-27.4a30.81 30.81 0 0130.8 30.8V411a25.65 25.65 0 01-25.6 25.6h27.4a25.65 25.65 0 0025.6-25.6V82.8a30.73 30.73 0 00-30.8-30.7z\"\n      ></path>\n      <path d=\"M512 45.2C512 21.1 492.1 0 466.8 0H45.2C20.7-.1.1 20.1 0 45.2v404.6c0 20.5 17 38.8 38.8 38.8h357.4a7.5 7.5 0 000-15H38.8a24.41 24.41 0 01-11.4-2.9l33.1-31.3a33.05 33.05 0 0016.8 4.6h357.4a33.05 33.05 0 0016.8-4.6l33.1 31.3a23.28 23.28 0 01-11.4 2.9h-42a7.5 7.5 0 000 15h42c20.9.1 38.7-17.2 38.8-38.8zM466.8 15a29.94 29.94 0 0116 4.6l-32.8 31a37.88 37.88 0 00-20.5-6h-347a37.63 37.63 0 00-20.5 6l-32.8-31a29.94 29.94 0 0116-4.6zM15 449.8V45.2a30.62 30.62 0 013.8-14.7L51.1 61a38.48 38.48 0 00-6.9 21.9V411a32.94 32.94 0 005.4 18.1l-32.4 30.7a24.32 24.32 0 01-2.2-10zM77.3 429a18.1 18.1 0 01-18.1-18.1V82.8a23.32 23.32 0 0123.3-23.3h347.1a23.32 23.32 0 0123.3 23.3v22.5a7.5 7.5 0 0015 0V82.8a38.48 38.48 0 00-6.9-21.9l32.3-30.5a30.62 30.62 0 013.8 14.7v404.6a23.51 23.51 0 01-2.2 9.9l-32.4-30.7a32.94 32.94 0 005.4-18.1V141.6a7.5 7.5 0 00-15 0V411a18.1 18.1 0 01-18.1 18.1z\"></path>\n      <path\n        fill=\"#ffeee6\"\n        d=\"M348.4 287.2L306 244.8l42.4-42.4a35.36 35.36 0 00-50-50L256 194.8l-42.4-42.4a35.36 35.36 0 00-50 50l42.4 42.4-42.4 42.4a35.36 35.36 0 0050 50l42.4-42.4 42.4 42.4a35.36 35.36 0 0050-50z\"\n      ></path>\n      <path d=\"M156 344.8a46.11 46.11 0 0065.2 0L256 310l34.8 34.8a46.1 46.1 0 0065.2-65.2l-34.8-34.8L356 210a46.1 46.1 0 00-65.2-65.2L256 179.6l-34.8-34.8A46.1 46.1 0 00156 210l34.8 34.8-34.8 34.8a46.11 46.11 0 000 65.2zm15.2-50l42.4-42.4a10.93 10.93 0 003.2-7.6 10.35 10.35 0 00-3.2-7.6l-42.4-42.4A24.61 24.61 0 01206 160l42.4 42.4a10.74 10.74 0 0015.2 0L306 160a24.61 24.61 0 0134.8 34.8l-42.4 42.4a10.93 10.93 0 00-3.2 7.6 10.35 10.35 0 003.2 7.6l42.4 42.4a24.61 24.61 0 01-34.8 34.8l-42.4-42.4a10.85 10.85 0 00-7.6-3.2 10.68 10.68 0 00-7.6 3.2L206 329.6a24.61 24.61 0 01-34.8-34.8z\"></path>\n    </svg>\n  );\n}\n","export function GoogleIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#2196f3\"\n        d=\"M501 210c2 0 4 2 4 4v42a249 249 0 1 1-76-179v6l-60 60h-5a156 156 0 0 0-264 112 157 157 0 0 0 306 47H260c-2 0-4-2-4-4v-84c0-2 2-4 4-4z\"\n      />\n      <path\n        fill=\"#1e88e5\"\n        d=\"M501 210h-30c2 0 4 2 4 4v42a249 249 0 0 1-221 248 249 249 0 0 0 251-248v-42c0-2-2-4-4-4z\"\n      />\n      <path fill=\"#f44336\" d=\"m114 190-76-54a248 248 0 0 1 391-59v6l-60 60h-5a156 156 0 0 0-250 47z\" />\n      <path\n        fill=\"#e53935\"\n        d=\"m92 175 22 15c22-49 70-84 126-90h1l-15-1c-57 0-107 31-134 76zM399 77v6l-48 48 13 12h5l60-60v-6A248 248 0 0 0 241 8c61 4 116 29 158 69z\"\n      />\n      <path fill=\"#4caf50\" d=\"M438 425a248 248 0 0 1-404-58l77-53a157 157 0 0 0 252 56z\" />\n      <path\n        fill=\"#43a047\"\n        d=\"m111 314-23 16a156 156 0 0 0 153 82c-59-6-109-45-130-98zM256 505c72 0 137-31 182-80l-18-13c-43 53-107 88-179 92l15 1z\"\n      />\n      <path fill=\"#ffc107\" d=\"M100 256c0 21 3 40 11 58l-77 53a247 247 0 0 1 4-231l76 54c-9 20-15 43-15 66z\" />\n      <path fill=\"#ffb300\" d=\"m88 330 23-16a156 156 0 0 1 3-124l-22-15a156 156 0 0 0-4 155z\" />\n      <path d=\"M501 203h-52a8 8 0 0 0 0 15h48v38a242 242 0 0 1-60 159l-63-46c18-18 31-40 39-65a7 7 0 0 0-7-9H263v-77h153a8 8 0 0 0 0-15H260c-6 0-12 5-12 11v84c0 6 6 12 12 12h135a148 148 0 0 1-229 65 8 8 0 0 0-9 12 163 163 0 0 0 206-7l64 46a241 241 0 0 1-383-57l64-43c6 13 14 26 25 38a7 7 0 1 0 11-10 149 149 0 0 1 215-206c4 4 11 4 16 0l59-60c2-2 4-5 4-8s-2-6-4-8a255 255 0 0 0-289-47 8 8 0 0 0 7 14 239 239 0 0 1 269 41l-54 55a163 163 0 0 0-227 5c-12 11-21 25-29 39l-63-45c19-32 45-59 76-80a8 8 0 0 0-8-13 255 255 0 1 0 396 215v-42c0-6-5-11-12-11zM41 147l63 46a165 165 0 0 0-2 118l-65 45a239 239 0 0 1 4-209z\" />\n    </svg>\n  );\n}\n","export function PlayerIconsIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path fill=\"none\" d=\"M0 0h512v512H0z\"></path>\n      <path fill=\"#fbf4db\" d=\"M199.89 103.69a96.2 96.2 0 11-96.2-96.19 96.2 96.2 0 0196.2 96.19\"></path>\n      <path\n        fill=\"#8ceea1\"\n        d=\"M114.3 57a23.81 23.81 0 00-10.41 16.91 5.77 5.77 0 004.28 6.25 23.79 23.79 0 0029.89-20 5.8 5.8 0 00-4.28-6.26A23.84 23.84 0 00114.3 57\"\n      ></path>\n      <path fill=\"#ffe077\" d=\"M504.5 103.69A96.2 96.2 0 11408.31 7.5a96.2 96.2 0 0196.19 96.19\"></path>\n      <path fill=\"#7ad7ee\" d=\"M504.5 408.31a96.2 96.2 0 11-96.19-96.2 96.2 96.2 0 0196.19 96.2\"></path>\n      <path fill=\"#eceaec\" d=\"M448.39 416.32h-80.16v-24.05h80.16z\"></path>\n      <path fill=\"#8ceea1\" d=\"M199.89 408.31a96.2 96.2 0 11-96.2-96.2 96.2 96.2 0 0196.2 96.2\"></path>\n      <path\n        fill=\"#736572\"\n        d=\"M456.4 440.37h-16a8 8 0 01-8-8v-48.11a8 8 0 018-8h16a8 8 0 018 8v48.09a8 8 0 01-8 8\"\n      ></path>\n      <path\n        fill=\"#ff7e92\"\n        d=\"M89 79.73a25.07 25.07 0 00-25.39 25.53c.46 21.78 10.43 46.53 32.05 46.53a30.43 30.43 0 004.91-.42 19 19 0 016.21 0 30.43 30.43 0 004.91.42c22.14 0 32.06-26 32.06-48.1 0-26.87-26.45-23.94-54.75-24\"\n      ></path>\n      <path\n        fill=\"#ff744d\"\n        d=\"M392.27 133.51a16 16 0 11-16-16 16 16 0 0116 16m64.13-8.01a16 16 0 11-16-16 16 16 0 0116 16\"\n      ></path>\n      <path\n        fill=\"#736572\"\n        d=\"M376.24 440.37h-16a8 8 0 01-8-8v-48.11a8 8 0 018-8h16a8 8 0 018 8v48.09a8 8 0 01-8 8\"\n      ></path>\n      <path\n        fill=\"#615260\"\n        d=\"M352.19 416.32v16a8 8 0 008 8h16a8 8 0 008-8v-16zm80.16 0v16a8 8 0 008 8h16a8 8 0 008-8v-16z\"\n      ></path>\n      <path fill=\"#fbbd80\" d=\"M280.05 183.85a24.05 24.05 0 11-24.05-24 24 24 0 0124.05 24\"></path>\n      <path\n        fill=\"#dbd8db\"\n        d=\"M288.06 232h-64.12a32.07 32.07 0 00-32.07 32v32.06c0 13.28 32.07 24.05 32.07 24.05h72.14a24.05 24.05 0 0024.05-24.05V264a32.07 32.07 0 00-32.07-32\"\n      ></path>\n      <path\n        fill=\"#c9c5c9\"\n        d=\"M256 232h-32.06a32.07 32.07 0 00-32.07 32v32.06a24.05 24.05 0 0024 24.05h8V264A32.06 32.06 0 01256 232\"\n      ></path>\n      <path\n        fill=\"#f8ebcc\"\n        d=\"M119.73 183.85A96.09 96.09 0 0144.22 28.19a96.13 96.13 0 10135 135 95.71 95.71 0 01-59.47 20.68\"\n      ></path>\n      <path\n        fill=\"#ffd05b\"\n        d=\"M424.34 183.85a96.1 96.1 0 01-75.51-155.66 96.13 96.13 0 10135 135 95.71 95.71 0 01-59.47 20.68\"\n      ></path>\n      <path\n        fill=\"#4ce1a1\"\n        d=\"M119.73 488.47A96.1 96.1 0 0144.22 332.8a96.13 96.13 0 10135 135 95.66 95.66 0 01-59.47 20.69\"\n      ></path>\n      <path\n        fill=\"#4bc3ef\"\n        d=\"M424.34 488.47a96.11 96.11 0 01-75.51-155.67 96.13 96.13 0 10135 135 95.66 95.66 0 01-59.47 20.69\"\n      ></path>\n      <path fill=\"#fff\" d=\"M119.73 440.37h32.06v-64.13h-32.06a16 16 0 00-16 16v64.16a16 16 0 0116-16\"></path>\n      <path fill=\"#f8ebcc\" d=\"M87.66 440.37H55.6v-64.13h32.06a16 16 0 0116 16v64.16a16 16 0 00-16-16\"></path>\n      <path\n        fill=\"#ff5f7a\"\n        d=\"M87.68 105.26a25 25 0 0124.58-25.45c-7.22-.29-15.14-.07-23.24-.08a25.07 25.07 0 00-25.39 25.53c.46 21.78 10.43 46.53 32.05 46.53a30.43 30.43 0 004.91-.42 19 19 0 016.21 0 30.43 30.43 0 004.91.42 26.21 26.21 0 004-.3c-18.85-2.85-27.62-25.84-28-46.23\"\n      ></path>\n      <path d=\"M103.69 207.39A103.7 103.7 0 00187.92 43.2a7.5 7.5 0 10-12.17 8.8 88.7 88.7 0 11-23-22.18A7.5 7.5 0 00161 17.29a103.7 103.7 0 10-57.35 190.1m.04 289.61a88.7 88.7 0 1188.7-88.69 88.8 88.8 0 01-88.7 88.69m0-192.39a103.7 103.7 0 10103.7 103.7 103.82 103.82 0 00-103.7-103.7M408.31 497A88.7 88.7 0 11497 408.31 88.8 88.8 0 01408.31 497m0-192.39A103.7 103.7 0 10512 408.31a103.82 103.82 0 00-103.69-103.7M256 167.31a16.55 16.55 0 11-16.55 16.54A16.57 16.57 0 01256 167.31m0 48.09a31.55 31.55 0 10-31.55-31.55A31.58 31.58 0 00256 215.4M184.37 264v40.1a7.5 7.5 0 0015 0V264a24.6 24.6 0 0124.57-24.57h64.12A24.6 24.6 0 01312.63 264v40.1a7.5 7.5 0 0015 0V264a39.61 39.61 0 00-39.57-39.57h-64.12A39.61 39.61 0 00184.37 264\"></path>\n      <path d=\"M223.94 264.53a7.5 7.5 0 00-7.5 7.5v48.1a7.5 7.5 0 0015 0V272a7.5 7.5 0 00-7.5-7.5m64.12.03a7.5 7.5 0 00-7.5 7.5v48.1a7.5 7.5 0 0015 0V272a7.5 7.5 0 00-7.5-7.5M408.31 15a88.7 88.7 0 11-88.7 88.69A88.8 88.8 0 01408.31 15m0 192.39a103.7 103.7 0 10-103.7-103.7 103.82 103.82 0 00103.7 103.7\"></path>\n      <path d=\"M376.24 125a8.53 8.53 0 11-8.53 8.53 8.54 8.54 0 018.53-8.53m64.13 9a8.54 8.54 0 118.53-8.53 8.54 8.54 0 01-8.53 8.53m-64.13 23a23.55 23.55 0 0023.53-23.53V81.9a8.52 8.52 0 016.47-8.28l42-10.5a.5.5 0 01.64.5v39.95a23.53 23.53 0 1015 21.93V63.62a15.52 15.52 0 00-19.28-15.06l-42 10.51a23.49 23.49 0 00-17.83 22.83v29.69a23.23 23.23 0 00-8.53-1.61 23.53 23.53 0 000 47.06m80.68 275.31a.52.52 0 01-.52.52h-16a.52.52 0 01-.52-.52v-48.09a.52.52 0 01.52-.52h16a.52.52 0 01.52.52zm-65.16-32.58h33.09v17.07h-33.09zm-15 32.58a.52.52 0 01-.52.52h-16a.52.52 0 01-.52-.52v-48.09a.52.52 0 01.52-.52h16a.52.52 0 01.52.52zm79.64-63.61h-16a15.53 15.53 0 00-15.52 15.52v.51h-33.12v-.51a15.53 15.53 0 00-15.52-15.52h-16a15.53 15.53 0 00-15.52 15.52v48.09a15.53 15.53 0 0015.52 15.52h16a15.53 15.53 0 0015.52-15.52v-.51h33.09v.51a15.53 15.53 0 0015.52 15.52h16a15.53 15.53 0 0015.52-15.52v-48.09a15.53 15.53 0 00-15.52-15.52M118.46 61.89a16.21 16.21 0 0111.89-2.49 16.29 16.29 0 01-18.75 12.5 16.15 16.15 0 016.86-10m-6.75 82.4a23.11 23.11 0 01-3.71-.3 26.22 26.22 0 00-8.66 0 22.9 22.9 0 01-3.68.32c-17.41 0-24.22-23.43-24.55-39.18a17.22 17.22 0 014.93-12.52A18 18 0 0189 87.23h7.77c15.51-.13 30.16-.27 36 5.56 2.33 2.3 3.45 5.88 3.45 10.94 0 29.79-14.69 40.6-24.56 40.6M89 72.23a32.82 32.82 0 00-23.65 9.86 32.13 32.13 0 00-9.22 23.33c.28 13.11 3.52 25.57 9.13 35.08 7.14 12.12 17.94 18.79 30.42 18.79a38.34 38.34 0 006.13-.52 11.3 11.3 0 013.76 0 38.46 38.46 0 006.14.52c26 0 39.56-28 39.56-55.6 0-9.14-2.65-16.41-7.89-21.6a26.92 26.92 0 00-6.38-4.62 31.7 31.7 0 008.65-23.76 7.49 7.49 0 00-4.18-6.28 31.62 31.62 0 00-31.37 2 30.78 30.78 0 00-6.62 6l-.73-2.17A7.5 7.5 0 1088.56 58l4.75 14.24H89m55.29 360.63h-24.56a23.53 23.53 0 00-8.54 1.6v-42.2a8.55 8.55 0 018.54-8.53h24.56zm-56.63 0H63.1v-49.13h24.56a8.54 8.54 0 018.53 8.53v42.2a23.43 23.43 0 00-8.53-1.6m64.13-64.13h-32.06a23.46 23.46 0 00-16 6.33 23.43 23.43 0 00-16-6.33H55.6a7.5 7.5 0 00-7.5 7.5v64.13a7.5 7.5 0 007.5 7.5h32.06a8.54 8.54 0 018.53 8.53 7.5 7.5 0 0015 0 8.55 8.55 0 018.54-8.53h32.06a7.5 7.5 0 007.5-7.5v-64.13a7.5 7.5 0 00-7.5-7.5\"></path>\n    </svg>\n  );\n}\n","export function TrophyIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M397.763 87.5h-98.509v213.476h98.509c58.855 0 106.737-47.882 106.737-106.738S456.618 87.5 397.763 87.5zm0 183.476h-68.509V117.5h68.509c42.381 0 76.738 34.357 76.738 76.738-.001 42.381-34.357 76.738-76.738 76.738zM114.237 87.5C55.382 87.5 7.5 135.382 7.5 194.238s47.882 106.738 106.737 106.738h98.509V87.5zm68.509 183.476h-68.509c-42.381 0-76.738-34.357-76.738-76.738S71.856 117.5 114.237 117.5h68.509zM314 419.5H198l15-91h86z\"\n      ></path>\n      <path fill=\"#fee97d\" d=\"M299 328.5h-30l15 91h30z\"></path>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M382.221 504.5H129.779a7 7 0 01-7-7v-11.629c0-22.091 17.909-40 40-40h186.442c22.091 0 40 17.909 40 40V497.5a7 7 0 01-7 7z\"\n      ></path>\n      <path\n        fill=\"#fee97d\"\n        d=\"M349.221 445.871h-30c22.092 0 40 17.909 40 40V497.5a7 7 0 01-7 7h30a7 7 0 007-7v-11.629c0-22.092-17.909-40-40-40zm-5 0H167.779v-3.629c0-22.091 17.909-40 40-40h96.442c22.091 0 40 17.909 40 40z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M304.221 402.241h-30c22.092 0 40 17.909 40 40v3.629h30v-3.629c0-22.091-17.909-40-40-40z\"\n      ></path>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M411.5 57.5h-311c-13.807 0-25-11.193-25-25s11.193-25 25-25h311c13.807 0 25 11.193 25 25s-11.193 25-25 25z\"\n      ></path>\n      <path\n        fill=\"#fee97d\"\n        d=\"M411.5 7.5h-30c13.807 0 25 11.193 25 25s-11.193 25-25 25h30c13.807 0 25-11.193 25-25s-11.193-25-25-25zM256 362.5c-83.119 0-150.5-67.381-150.5-150.5V57.5h301V212c0 83.119-67.381 150.5-150.5 150.5z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M376.5 57.5V212c0 78.056-59.424 142.229-135.5 149.757 4.934.488 9.937.743 15 .743 83.119 0 150.5-67.381 150.5-150.5V57.5z\"\n      ></path>\n      <circle cx=\"256\" cy=\"207.96\" r=\"94.169\" fill=\"#fff\"></circle>\n      <path\n        fill=\"#fee97d\"\n        d=\"M262.277 154.391l13.139 26.623a7 7 0 005.271 3.829l29.38 4.269c5.742.834 8.034 7.89 3.879 11.94l-21.26 20.723a6.998 6.998 0 00-2.013 6.196l5.019 29.261c.981 5.718-5.021 10.079-10.157 7.379l-26.278-13.815a7.001 7.001 0 00-6.515 0l-26.278 13.815c-5.135 2.7-11.137-1.661-10.157-7.379l5.019-29.261a7 7 0 00-2.013-6.196l-21.26-20.723c-4.155-4.05-1.862-11.106 3.879-11.94l29.38-4.269a7 7 0 005.271-3.829l13.139-26.623c2.569-5.203 9.987-5.203 12.555 0z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M313.946 201.052c4.155-4.05 1.862-11.106-3.88-11.94l-29.38-4.269a6.997 6.997 0 01-5.27-3.829l-13.139-26.623c-2.568-5.203-9.987-5.203-12.554 0l-10.888 22.061 3.874 7.85a18.632 18.632 0 0014.03 10.193c15.284 2.221 21.386 21.003 10.327 31.783a18.632 18.632 0 00-5.359 16.493l1.755 10.236 22.073 11.604c5.135 2.7 11.137-1.661 10.157-7.379l-5.019-29.261a7 7 0 012.013-6.196z\"\n      ></path>\n      <path d=\"M282.025 177.458l-13.022-26.387c-2.462-4.985-7.443-8.082-13.003-8.082s-10.541 3.097-13.003 8.083l-13.022 26.387-29.119 4.231c-5.502.799-9.987 4.581-11.706 9.868-1.718 5.288-.312 10.983 3.669 14.865l21.071 20.539-4.975 29.003c-.939 5.479 1.271 10.914 5.77 14.182s10.349 3.691 15.271 1.104L256 257.557l26.045 13.693c4.903 2.578 10.759 2.174 15.271-1.104 4.498-3.268 6.709-8.702 5.769-14.182l-4.974-29.003 21.071-20.539c3.981-3.881 5.387-9.577 3.669-14.865-1.719-5.287-6.204-9.068-11.706-9.867zm5.426 38.946a14.494 14.494 0 00-4.169 12.834l4.847 28.264-25.382-13.345a14.498 14.498 0 00-13.495 0l-25.381 13.344 4.847-28.262a14.495 14.495 0 00-4.169-12.835l-20.534-20.016 28.377-4.124a14.494 14.494 0 0010.918-7.932L256 158.618l12.69 25.714a14.494 14.494 0 0010.918 7.932l28.377 4.124zm194.096-99.749c-17.941-19.36-41.716-31.799-67.547-35.49v-16.27c16.756-1.282 30-15.316 30-32.394C444 14.58 429.421 0 411.5 0h-311C82.579 0 68 14.58 68 32.5c0 17.078 13.244 31.112 30 32.394v16.27c-25.714 3.676-49.409 16.029-67.321 35.248a7.5 7.5 0 0010.972 10.228C56.721 110.471 76.495 99.908 98 96.352v15.236c-39.204 7.62-68 42.024-68 82.652 0 22.509 8.765 43.663 24.675 59.561 15.532 15.543 36.076 24.242 57.996 24.641a157.847 157.847 0 008.007 15.038h-6.438c-54.722 0-99.24-44.519-99.24-99.24 0-14.091 2.904-27.711 8.633-40.48a7.5 7.5 0 00-13.685-6.14C3.347 162.333 0 178.019 0 194.24c0 62.992 51.248 114.24 114.24 114.24h16.729c17.756 22.957 41.679 40.906 69.267 51.348l-6.089 36.917c-18.396 5.522-32.123 21.915-33.701 41.685-25.112 1.221-45.167 22.032-45.167 47.441V497.5c0 7.995 6.505 14.5 14.5 14.5H382.22c7.995 0 14.5-6.505 14.5-14.5v-11.629c0-25.409-20.055-46.22-45.167-47.441-1.579-19.771-15.306-36.163-33.701-41.685l-6.089-36.917c27.588-10.441 51.511-28.391 69.267-51.348h16.729c62.992 0 114.24-51.248 114.24-114.24.001-28.841-10.814-56.394-30.452-77.585zM65.281 243.195C52.203 230.126 45 212.74 45 194.24c0-32.392 22.265-59.968 53-67.308V212c0 17.851 2.98 35.018 8.461 51.034-15.554-1.728-29.958-8.609-41.18-19.839zM100.5 50C90.851 50 83 42.149 83 32.5S90.851 15 100.5 15h311c9.649 0 17.5 7.851 17.5 17.5S421.149 50 411.5 50zM414 126.932c30.735 7.34 53 34.916 53 67.308 0 18.5-7.203 35.886-20.286 48.958-11.218 11.227-25.621 18.108-41.175 19.836C411.02 247.018 414 229.851 414 212zm-77.518 311.439h-22.895c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h35.634c17.921 0 32.5 14.58 32.5 32.5V497H130.279v-11.129c0-17.92 14.579-32.5 32.5-32.5h115.808c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5H175.518c1.921-16.101 15.651-28.629 32.261-28.629h96.441c16.611-.001 30.342 12.527 32.262 28.629zm-126.801-43.63l4.987-30.237C227.849 368.08 241.703 370 256 370s28.151-1.92 41.332-5.496l4.987 30.237zM256 355c-78.851 0-143-64.149-143-143V65h286v147c0 78.851-64.149 143-143 143zm141.76-61.52h-6.438a157.741 157.741 0 008.007-15.038c21.919-.399 42.463-9.097 57.991-24.637C473.235 237.903 482 216.749 482 194.24c0-40.627-28.796-75.032-68-82.652V96.352c21.605 3.57 41.449 14.208 56.545 30.498C487.604 145.259 497 169.192 497 194.24c0 54.721-44.519 99.24-99.24 99.24zM256 106.291c-56.061 0-101.67 45.609-101.67 101.669S199.939 309.629 256 309.629 357.67 264.02 357.67 207.96 312.061 106.291 256 106.291zm0 188.338c-47.79 0-86.67-38.88-86.67-86.669s38.88-86.669 86.67-86.669 86.67 38.88 86.67 86.669-38.88 86.669-86.67 86.669z\"></path>\n    </svg>\n  );\n}\n","import { FireFilled, HeartFilled, HeartOutlined, QuestionCircleFilled } from '@ant-design/icons';\nimport { Button, Popover, Space, Typography } from 'antd';\nimport { LanguageSwitch, Translate } from 'components/language';\nimport { useState } from 'react';\nimport { Me } from 'types/user';\n\ntype MenuProps = {\n  userDaily: Me['daily'];\n  hearts: number;\n  openRules: boolean;\n};\n\nexport function Menu({ userDaily, hearts, openRules }: MenuProps) {\n  return (\n    <div className=\"menu\">\n      <StreakCount userDaily={userDaily} />\n      <div className=\"menu-hearts\">\n        {hearts > 0 ? <HeartFilled /> : <HeartOutlined />}\n        {hearts > 1 ? <HeartFilled /> : <HeartOutlined />}\n        {hearts > 2 ? <HeartFilled /> : <HeartOutlined />}\n      </div>\n      <Rules defaultOpen={openRules} />\n    </div>\n  );\n}\n\nfunction StreakCount({ userDaily }: Pick<MenuProps, 'userDaily'>) {\n  return (\n    <Popover\n      title={<Translate pt=\"Estatísticas\" en=\"Stats\" />}\n      content={\n        <Space direction=\"vertical\" size=\"small\">\n          <ul className=\"list\">\n            <li>\n              <Typography>\n                <Translate pt=\"Maior sequência\" en=\"Longest streak\" />: {userDaily.longestStreak}\n              </Typography>\n            </li>\n            <li>\n              <Typography>\n                <Translate pt=\"Desafios completados\" en=\"Challenges completed\" />: {userDaily.streak}\n              </Typography>\n            </li>\n            <li>\n              <Typography>\n                <Translate pt=\"Desafios jogados\" en=\"Challenges played\" />: {userDaily.total}\n              </Typography>\n            </li>\n          </ul>\n        </Space>\n      }\n      trigger=\"click\"\n      className=\"menu-entry\"\n    >\n      <FireFilled />\n    </Popover>\n  );\n}\n\nfunction Rules({ defaultOpen = true }: { defaultOpen: boolean }) {\n  const [open, setOpen] = useState(defaultOpen);\n\n  return (\n    <Popover\n      title={<Translate pt=\"Regras\" en=\"Rules\" />}\n      trigger=\"click\"\n      open={open}\n      onOpenChange={(o) => setOpen(o)}\n      content={\n        <Space direction=\"vertical\" size=\"small\">\n          <LanguageSwitch />\n          <ul className=\"list\">\n            <Typography>\n              <Translate\n                pt={\n                  <>\n                    <li>\n                      Há 3 temas secretos que agrupam os 9 itens em 3 grupos de 3 itens cada. Você sabe quais\n                      são?\n                    </li>\n                    <li>\n                      Cada grupo que você tenta fazer e que não está presente na resposta remove um coração e\n                      você tem apenas 3 <HeartFilled />.\n                    </li>\n                    <li>Boa sorte!</li>\n                  </>\n                }\n                en={\n                  <>\n                    <li>\n                      There are 3 secret themes that group the 9 items into 3 groups of 3 items each. Do you\n                      know what they are?\n                    </li>\n                    <li>\n                      Each group you try to make and that is not present in the answer removes a heart and you\n                      have only 3 <HeartFilled />.\n                    </li>\n                    <li>Good luck!</li>\n                  </>\n                }\n              />\n            </Typography>\n          </ul>\n          <Space className=\"space-container\">\n            <Button size=\"small\" onClick={() => setOpen(false)}>\n              <Translate pt=\"Fechar\" en=\"Close\" />\n            </Button>\n          </Space>\n        </Space>\n      }\n      className=\"menu-entry\"\n    >\n      <QuestionCircleFilled />\n    </Popover>\n  );\n}\n","import { App } from 'antd';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { cloneDeep, orderBy, sample, sampleSize, shuffle } from 'lodash';\nimport { useEffect, useMemo, useState } from 'react';\nimport { PUBLIC_URL } from 'utils/constants';\n\nimport { useQuery } from '@tanstack/react-query';\n\nimport { ConnectionGame, ConnectionGroup, GroupDictEntry, GroupSummary, ItemGroup } from './types';\n\nconst emojiColors: StringDictionary = {\n  teal: '🟩',\n  orange: '🟧',\n  purple: '🟪',\n};\n\nexport function useConnectTrioGame() {\n  const [failToCreate, setFailToCreate] = useState(false);\n  const [creatingGame, setCreatingGame] = useState(true);\n  const [game, setGame] = useState<ConnectionGame | null>(null);\n\n  const query = useQuery<Dictionary<ConnectionGroup>>({\n    queryKey: ['connect-items'],\n    queryFn: async () => {\n      const response = await fetch(`${PUBLIC_URL.RESOURCES}/connect-items.json`);\n      return await response.json();\n    },\n  });\n\n  const itemCount: ItemGroup[] = useMemo(() => {\n    const items: Record<string, GroupSummary[]> = {};\n    Object.values(query.data ?? {}).forEach((group) => {\n      group.items.forEach((item) => {\n        if (group.items.length >= 3) {\n          if (!items[item]) {\n            items[item] = [];\n          }\n          items[item].push({\n            groupId: group.id,\n            name: group.name,\n            items: group.items.map(String),\n            count: group.items.length,\n          });\n        }\n      });\n    });\n    return orderBy(\n      Object.entries(items).map(([itemId, groups]) => ({\n        itemId,\n        groups,\n        total: groups.length,\n      })),\n      ['total'],\n      ['desc']\n    );\n  }, [query.data]);\n\n  const createNewGame = async () => {\n    setCreatingGame(true);\n    await new Promise((resolve) => setTimeout(resolve, 1000));\n\n    const result: GroupSummary[] = [];\n    const usedGroupIds = [];\n\n    // Get the first 2 groups. They must have at least\n    let tries = 0;\n    while (result.length < 2 && tries < 200) {\n      tries++;\n      const selection = sample(itemCount);\n      if (selection && selection.total > 1) {\n        const selectedGroups = getTwoGroups(selection.itemId, selection.groups);\n        if (selectedGroups.length === 2) {\n          usedGroupIds.push(...selectedGroups.map((group) => group.groupId));\n          result.push(...selectedGroups);\n        }\n      }\n    }\n\n    // Get 3rd group\n    const dict = result.reduce((acc: BooleanDictionary, group) => {\n      group.items.forEach((item) => {\n        acc[item] = true;\n      });\n      return acc;\n    }, {});\n\n    tries = 0;\n    while (result.length < 3 && tries < 200) {\n      tries++;\n      console.count('tries');\n\n      // Related third group\n      const thirdItem = sample(Object.keys(dict));\n      if (thirdItem) {\n        const selection = itemCount.find((item) => item.itemId === thirdItem && item);\n\n        if (selection && selection.total > 1) {\n          const selectedGroups = getTwoGroups(selection.itemId, selection.groups, dict, usedGroupIds);\n          if (selectedGroups.length === 2) {\n            result.push(selectedGroups[1]);\n          }\n        }\n      }\n\n      // Random third group\n      // const selection = sample(itemCount);\n      // if (selection) {\n      //   const group = sample(selection.groups)!;\n      //   const trio = getTrio('0', group.items, false);\n      //   if (trio.length === 3 && trio.every((item) => !dict[item])) {\n      //     const copy = cloneDeep(group);\n      //     copy.items = trio;\n      //     result.push(copy);\n      //   }\n      // }\n    }\n\n    const newGame: ConnectionGame = {\n      id: '',\n      itemsDict: {},\n      groupsDict: {},\n      items: [],\n    };\n\n    const colors: StringDictionary = {\n      0: 'teal',\n      1: 'orange',\n      2: 'purple',\n    };\n\n    result.forEach((group, index) => {\n      newGame.id += '-' + group.groupId.split('-')[1];\n      newGame.groupsDict[group.groupId] = {\n        groupId: group.groupId,\n        name: group.name,\n        color: colors[index],\n        items: group.items,\n        count: group.items.length,\n      };\n\n      group.items.forEach((item) => {\n        newGame.items.push(item);\n\n        newGame.itemsDict[item] = {\n          groupId: group.groupId,\n          itemId: item,\n          color: colors[index],\n        };\n      });\n    });\n\n    newGame.items = shuffle(newGame.items);\n\n    if (newGame.items.length !== 9) {\n      setFailToCreate(true);\n      return;\n    }\n\n    setGame(newGame);\n    setCreatingGame(false);\n  };\n\n  useEffect(() => {\n    if (itemCount.length) {\n      createNewGame();\n    }\n  }, [itemCount]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  /***\n   * Create a new game\n   * Find an item in 2 groups of 4 that only have the item in common\n   * Get one group with that item\n   * Get the other group but remove that item\n   * Get 2 other groups all with unrelated\n   */\n\n  return {\n    game,\n    failToCreate,\n    createNewGame,\n    ...query,\n    isLoading: query.isLoading || creatingGame,\n  };\n}\n\nfunction getTwoGroups(\n  itemId: string,\n  groupSummaries: GroupSummary[],\n  dict: BooleanDictionary = {},\n  usedGroupIds: string[] = []\n) {\n  const mainGroup = cloneDeep(sample(groupSummaries)!);\n  mainGroup.items = getTrio(\n    itemId,\n    mainGroup.items.filter((i) => !dict[i]),\n    true\n  );\n\n  const itemsDict: BooleanDictionary = mainGroup.items.reduce((acc, item) => ({ ...acc, [item]: true }), {\n    ...dict,\n  });\n\n  const leftOverGroups = shuffle(groupSummaries.filter((group) => group.groupId !== mainGroup.groupId));\n\n  for (let i = 0; i < leftOverGroups.length; i++) {\n    const group = leftOverGroups[i];\n    if (usedGroupIds.includes(group.groupId)) {\n      continue;\n    }\n    const trio = getTrio(itemId, group.items, false);\n    if (trio.length === 3 && trio.every((item) => !itemsDict[item])) {\n      const copy = cloneDeep(group);\n      copy.items = trio;\n      return [mainGroup, copy];\n    }\n  }\n\n  return [];\n}\n\nfunction getTrio(itemId: string, items: string[], includeItem: boolean) {\n  const selectedItems = items.filter((item) => item !== itemId);\n\n  if (includeItem) {\n    return [itemId, ...sampleSize(selectedItems, 2)].sort();\n  }\n\n  return sampleSize(selectedItems, 3).sort();\n}\n\nexport function useConnectTrioEngine(game: ConnectionGame) {\n  const { message } = App.useApp();\n  const { translate } = useLanguage();\n\n  const [hearts, setHearts] = useState<number>(3);\n  const [items, setItems] = useState<string[]>(game.items);\n  const [frozenItems, setFrozenItems] = useState<string[]>([]);\n  const [selection, setSelection] = useState<string[]>([]);\n  const [previousSelection, setPreviousSelection] = useState<string[]>([]);\n  const [resultPrint, setResultPrint] = useState<string>('');\n  const [outcome, setOutcome] = useState<string>('CONTINUE');\n  const [history, setHistory] = useState<string[]>([]);\n  const [correctGroups, setCorrectGroups] = useState<GroupDictEntry[]>([]);\n  const [showResultModal, setShowResultModal] = useState(false);\n  const [isComplete, setIsComplete] = useState(false);\n\n  const onShuffle = () => {\n    setItems(shuffle(items.filter((item) => !frozenItems.includes(item))));\n  };\n\n  const onSelect = (itemId: string) => {\n    if (selection.includes(itemId)) {\n      setSelection(selection.filter((item) => item !== itemId));\n      return;\n    }\n\n    if (selection.length === 3) {\n      message.info(translate('Você só pode selecionar 3 itens', 'You can only select 3 items'));\n      return;\n    }\n\n    setSelection([...selection, itemId]);\n  };\n\n  const onDeselectAll = () => {\n    setSelection([]);\n  };\n\n  const onSubmit = async () => {\n    const attemptStr = selection.sort().join('-');\n    if (history.includes(attemptStr)) {\n      message.info(translate('Você já tentou esse trio', 'You already tried this trio'));\n      return;\n    }\n\n    const color = game.itemsDict[selection[0]].color;\n    const activeGroup = game.groupsDict[game.itemsDict[selection[0]].groupId];\n    let isCorrect = true;\n    let print = '';\n    selection.forEach((itemId) => {\n      if (game.itemsDict[itemId].color !== color) {\n        isCorrect = false;\n      }\n      print += emojiColors[game.itemsDict[itemId].color];\n      print += ' ';\n    });\n    print += '\\n';\n\n    setResultPrint((v) => v + print);\n\n    if (isCorrect) {\n      message.success(translate('Você acertou um trio!', 'You got the trio right!'));\n      setFrozenItems([...frozenItems, ...selection]);\n      setItems(items.filter((item) => !selection.includes(item)));\n      setCorrectGroups((s) => [\n        ...s,\n        {\n          groupId: game.itemsDict[selection[0]].groupId,\n          name: activeGroup.name,\n          items: selection,\n          count: 3,\n          color: color,\n        },\n      ]);\n      setPreviousSelection([]);\n      if (correctGroups.length === 2) {\n        setIsComplete(true);\n        setOutcome('WIN');\n        await new Promise((resolve) => setTimeout(resolve, 1000));\n        setShowResultModal(true);\n      } else {\n        setOutcome('CORRECT');\n      }\n    } else {\n      setPreviousSelection([...selection]);\n      setHistory((h) => [...h, attemptStr]);\n      message.error(translate('Você errou o trio!', 'You got the trio wrong!'));\n      if (hearts === 1) {\n        setOutcome('LOSE');\n        const otherGroups = Object.values(game.groupsDict).filter(\n          (group) => !correctGroups.find((g) => g.name === group.name)\n        );\n\n        setCorrectGroups((s) => [\n          ...s,\n          ...otherGroups.map((group) => ({\n            groupId: group.name,\n            name: group.name,\n            items: group.items,\n            count: 3,\n            color: group.color,\n          })),\n        ]);\n        await new Promise((resolve) => setTimeout(resolve, 1000));\n        setShowResultModal(true);\n      } else {\n        setOutcome('WRONG');\n      }\n      setHearts(hearts - 1);\n    }\n\n    onDeselectAll();\n  };\n\n  const disabled = hearts === 0 || isComplete;\n\n  return {\n    hearts,\n    items,\n    selection,\n    previousSelection,\n    onShuffle,\n    onSelect,\n    onSubmit,\n    onDeselectAll,\n    outcome,\n    resultPrint,\n    correctGroups,\n    isComplete,\n    showResultModal,\n    setShowResultModal,\n    disabled,\n  };\n}\n","import { App, Input, Space, Typography } from 'antd';\nimport { IconAvatar } from 'components/avatars';\nimport { TransparentButton } from 'components/buttons';\nimport { Translate } from 'components/language';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { BoxXIcon } from 'icons/BoxXIcon';\nimport { TrophyIcon } from 'icons/TrophyIcon';\nimport { useEffect } from 'react';\nimport { useCopyToClipboard } from 'react-use';\n\nimport { ConnectionGame, GroupSummary } from './types';\n\ntype ResultsModalContentProps = {\n  game: ConnectionGame;\n  win: boolean;\n  hearts: number;\n  resultPrint: string;\n  correctGroups: GroupSummary[];\n};\n\nexport function ResultsModalContent({\n  game,\n  win,\n  hearts,\n  resultPrint,\n  correctGroups,\n}: ResultsModalContentProps) {\n  const { message } = App.useApp();\n  const { translate, language } = useLanguage();\n  const [state, copyToClipboard] = useCopyToClipboard();\n  const result = writeResult(game, hearts, resultPrint, language, correctGroups);\n\n  useEffect(() => {\n    if (state.value) {\n      message.info(\n        translate(\n          `Copiado para a área de transferência: ${state.value}`,\n          `Copied to clipboard: ${state.value}`\n        )\n      );\n    }\n  }, [state, message, translate]);\n\n  return (\n    <Space direction=\"vertical\" className=\"space-container\">\n      <Typography.Title level={2} className=\"center\">\n        {win ? (\n          <>\n            <IconAvatar icon={<TrophyIcon />} /> <Translate pt=\"Parabéns!\" en=\"Congratulations!\" />\n          </>\n        ) : (\n          <>\n            <IconAvatar icon={<BoxXIcon />} /> <Translate pt=\"Que pena!\" en=\"Too bad!\" />\n          </>\n        )}\n      </Typography.Title>\n      <Typography.Paragraph className=\"center\">\n        {win ? (\n          <Translate pt=\"Você acertou os trios!\" en=\"You guessed the trios!\" />\n        ) : (\n          <Translate pt=\"Você não fez todos os trios!\" en=\"You did not create all trios!\" />\n        )}\n      </Typography.Paragraph>\n\n      {/* <TextHighlight className=\"result-answer\">\n      <Input.TextArea value={resultPrint} rows={3} cols={9} />\n      </TextHighlight> */}\n\n      <TransparentButton onClick={() => copyToClipboard(result)}>\n        <Input.TextArea value={result} readOnly cols={30} rows={9} />\n      </TransparentButton>\n\n      <Typography.Paragraph className=\"center\">\n        <Translate\n          pt=\"Clique no campo acima para copiar e compartilhe com os amigos\"\n          en=\"Click the field above to copy and share it with friends\"\n        />\n      </Typography.Paragraph>\n    </Space>\n  );\n}\n\nfunction writeResult(\n  game: ConnectionGame,\n  hearts: number = 0,\n  resultPrint: string,\n  language: Language,\n  correctGroups: GroupSummary[]\n) {\n  let result = '';\n  const gameId = game.id;\n\n  const heartsValue = Math.max(0, hearts);\n  const gameName = language === 'pt' ? 'Conexões Triplas' : 'Connect Trio';\n\n  result += '🔗 ' + gameName + ' #' + gameId + '\\n';\n  result +=\n    Array(heartsValue).fill('❤️').join('') +\n    Array(3 - heartsValue)\n      .fill('🩶')\n      .join('');\n  result += ` (${Math.round(((correctGroups.length + heartsValue) / 6) * 100)}%)`;\n  result += '\\n';\n  result += resultPrint;\n  result += '\\nhttps://www.kavispires.com/tardedivertida/#/trio';\n\n  return result;\n}\n","import './ConnectTrio.scss';\n\nimport { Button, Layout, Modal, Space, Typography } from 'antd';\nimport clsx from 'clsx';\nimport { IconAvatar } from 'components/avatars';\nimport { TransparentButton } from 'components/buttons';\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { PageError } from 'components/errors';\nimport { Translate } from 'components/language';\nimport { Loading } from 'components/loaders';\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { PlayerIconsIcon } from 'icons/PlayerIconsIcon';\nimport { Menu } from 'pages/Daily/games/ConnectTrio/Menu';\nimport { LoginModal } from 'pages/Me/components/LoginModal';\nimport { ReactNode, useEffect } from 'react';\nimport { useTitle } from 'react-use';\n\nimport { useConnectTrioEngine, useConnectTrioGame } from './hooks';\nimport { ResultsModalContent } from './ResultsModalContent';\nimport { ConnectionGame } from './types';\nimport { getAnimationClass } from 'utils/helpers';\n\nconst { Header, Content } = Layout;\n\ntype ConnectTrioGameProps = {\n  game: ConnectionGame;\n  createNewGame: () => void;\n};\n\nfunction ConnectTrioGame({ game, createNewGame }: ConnectTrioGameProps) {\n  const {\n    hearts,\n    items,\n    correctGroups,\n    selection,\n    previousSelection,\n    onShuffle,\n    onSelect,\n    onSubmit,\n    onDeselectAll,\n    outcome,\n    resultPrint,\n    isComplete,\n    showResultModal,\n    disabled,\n    setShowResultModal,\n  } = useConnectTrioEngine(game);\n  const cardWidth = useCardWidth(3, { maxWidth: 100, minWidth: 80 });\n\n  return (\n    <>\n      <Menu userDaily={{ total: 0, longestStreak: 0, streak: 0 }} hearts={hearts} openRules={true} />\n\n      <Space className=\"space-container\" direction=\"vertical\">\n        <Typography.Title level={2} className=\"connect-trio-heading\">\n          <Translate pt=\"Faça grupos de três\" en=\"Create groups of three\" />\n        </Typography.Title>\n\n        <div className=\"connect-trio-container\">\n          {correctGroups.map((correctGroup) => (\n            <div\n              key={correctGroup.groupId}\n              className={clsx(\n                'connect-trio-group-container',\n                outcome === 'CORRECT' && getAnimationClass('fadeIn')\n              )}\n            >\n              <span className=\"connect-trip-group-name\">{correctGroup.name}</span>\n              <div className=\"connect-trio-item-container\">\n                {correctGroup.items.map((item) => (\n                  <ItemCard\n                    key={item}\n                    id={item}\n                    width={cardWidth}\n                    className={clsx(`item--${game.itemsDict[item].color}`)}\n                  />\n                ))}\n              </div>\n            </div>\n          ))}\n          {!disabled && (\n            <div className=\"connect-trio-item-container\">\n              {items.map((item) => {\n                const isActive = selection.includes(item);\n                return (\n                  <TransparentButton\n                    key={item}\n                    onClick={() => onSelect(item)}\n                    active={isActive}\n                    activeClass=\"item-button-active-override\"\n                    disabled={disabled}\n                  >\n                    <ItemCard\n                      id={item}\n                      width={cardWidth}\n                      className={clsx(\n                        isActive && 'item--active',\n                        outcome === 'WRONG' && previousSelection.includes(item) && getAnimationClass('shakeX')\n                      )}\n                    />\n                  </TransparentButton>\n                );\n              })}\n            </div>\n          )}\n        </div>\n\n        <Space className=\"space-container\">\n          <Button onClick={onShuffle} shape=\"round\" disabled={disabled}>\n            <Translate pt=\"Embaralhar\" en=\"Shuffle\" />\n          </Button>\n          <Button\n            onClick={onDeselectAll}\n            type=\"dashed\"\n            shape=\"round\"\n            disabled={selection.length === 0 || disabled}\n          >\n            <Translate pt=\"Limpar\" en=\"Clear\" />\n          </Button>\n          <Button onClick={onSubmit} type=\"primary\" shape=\"round\" disabled={selection.length < 3 || disabled}>\n            <Translate pt=\"Enviar\" en=\"Submit\" />\n          </Button>\n        </Space>\n\n        {disabled && (\n          <Space className=\"results-container\" direction=\"vertical\" align=\"center\">\n            <Button onClick={() => setShowResultModal(true)} type=\"primary\">\n              <Translate pt=\"Ver Resultado\" en=\"Show Results\" />\n            </Button>\n            <Button onClick={createNewGame}>\n              <Translate pt=\"Gerar Novo Desafio\" en=\"GenerateNew Challenge\" />\n            </Button>\n          </Space>\n        )}\n        <Modal\n          title={<Translate pt=\"Resultado\" en=\"Results\" />}\n          open={showResultModal}\n          onCancel={() => setShowResultModal(false)}\n          okButtonProps={{ hidden: true }}\n          cancelButtonProps={{ hidden: true }}\n        >\n          <ResultsModalContent\n            game={game}\n            win={isComplete}\n            hearts={hearts}\n            resultPrint={resultPrint}\n            correctGroups={correctGroups}\n          />\n        </Modal>\n      </Space>\n    </>\n  );\n}\n\nfunction ConnectTrioDataWrapper() {\n  const { translate } = useLanguage();\n\n  const { isLoading, isError, game, failToCreate, createNewGame } = useConnectTrioGame();\n\n  if (isLoading) {\n    return (\n      <ConnectTrioChrome>\n        <Space className=\"space-container\">\n          <Loading message={translate('Carregando desafio', 'Loading challenge')} margin />\n        </Space>\n      </ConnectTrioChrome>\n    );\n  }\n\n  if (isError || !game || failToCreate) {\n    return (\n      <ConnectTrioChrome>\n        <PageError />\n      </ConnectTrioChrome>\n    );\n  }\n\n  return (\n    <ConnectTrioChrome>\n      <ConnectTrioGame game={game} createNewGame={createNewGame} />\n    </ConnectTrioChrome>\n  );\n}\n\nfunction ConnectTrioPage() {\n  const { isAuthenticated } = useCurrentUserContext();\n\n  if (!isAuthenticated) {\n    return (\n      <ConnectTrioChrome>\n        <LoginModal isAuthenticated={false} />\n      </ConnectTrioChrome>\n    );\n  }\n\n  return <ConnectTrioDataWrapper />;\n}\n\ntype ConnectTrioChromeProps = {\n  challenge?: ReactNode;\n  children: ReactNode;\n};\n\nfunction ConnectTrioChrome({ challenge, children }: ConnectTrioChromeProps) {\n  const { translate, setLanguage } = useLanguage();\n  useEffect(() => {\n    setLanguage('pt');\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useTitle(translate('Conexões Triplas | Tarde Divertida', 'Connect Trio | Tarde Divertida'));\n\n  return (\n    <Layout className=\"app\">\n      <Header className=\"daily-header\">\n        <IconAvatar icon={<PlayerIconsIcon />} />\n        <Typography.Title level={1} className=\"daily-heading\">\n          TD <Translate pt=\"Conexões Triplas\" en=\"Connect Trio\" /> #{challenge ?? 0}\n        </Typography.Title>\n      </Header>\n      <Content>{children}</Content>\n    </Layout>\n  );\n}\n\nexport default ConnectTrioPage;\n","// Ant Design Resources\nimport { Modal } from 'antd';\n// Utils\nimport { NOOP } from 'utils/constants';\n// Components\nimport { SignIn } from 'components/auth/SignIn';\nimport { Translate } from 'components/language';\n\ntype LoginModalProps = {\n  isAuthenticated: boolean;\n};\n\nexport function LoginModal({ isAuthenticated }: LoginModalProps) {\n  return (\n    <Modal\n      open={!isAuthenticated}\n      title={<Translate pt=\"Logar\" en=\"LogIn\" />}\n      cancelText={<Translate pt=\"Cancelar\" en=\"Cancel\" />}\n      onCancel={NOOP}\n      okButtonProps={{\n        style: { display: 'none' },\n      }}\n      cancelButtonProps={{\n        style: { display: 'none' },\n      }}\n      closable={false}\n    >\n      <SignIn onSuccess={NOOP} />\n    </Modal>\n  );\n}\n"],"names":["SignIn","onSuccess","useState","view","setView","className","src","logo","preview","checkedChildren","pt","en","unCheckedChildren","onChange","checked","SignInWithGoogle","SignInWithEmail","buttonProps","useMutation","mutationFn","signInWithGoogle","isLoading","mutate","isError","direction","align","classNames","item","description","type","showIcon","size","onClick","loading","block","icon","Form","form","translate","useLanguage","showForgotPassword","setShowForgotPassword","signIn","getFieldValue","name","labelCol","span","wrapperCol","style","maxWidth","initialValues","remember","onFinish","autoComplete","label","rules","required","message","help","offset","htmlType","v","ResetPasswordForm","email","App","resetPassword","success","username","level","disabled","ItemCard","id","width","title","text","padding","str","match","numId","parseInt","itemId","sourceId","Math","ceil","getSource","source","height","clsx","Boolean","Sprite","baseUrl","useTDBaseUrl","useQuery","queryKey","queryFn","fetch","response","enabled","data","paddedWidth","display","placeItems","svgContent","WarningOutlined","viewBox","xlinkHref","dangerouslySetInnerHTML","__html","x","y","background","Instruction","children","white","contained","fullWidth","noMargin","baseClass","RoundsLeftInstruction","round","left","total","current","forceLastRound","pluralize","TextHighlight","Title","RuleInstruction","sfx","action","PlayCircleFilled","alert","AlertFilled","event","ExclamationCircleFilled","lore","MessageFilled","rule","ReadFilled","tip","BulbFilled","scoring","StarFilled","wait","ClockCircleFilled","bot","RobotFilled","animationClass","getAnimationClass","infinite","speed","repeat","token","theme","color","colorPrimary","kind","base","process","BoxXIcon","props","xmlns","fill","d","GoogleIcon","PlayerIconsIcon","TrophyIcon","cx","cy","r","Menu","userDaily","hearts","openRules","StreakCount","HeartFilled","HeartOutlined","Rules","defaultOpen","content","longestStreak","streak","trigger","FireFilled","open","setOpen","onOpenChange","o","QuestionCircleFilled","emojiColors","teal","orange","purple","getTwoGroups","groupSummaries","dict","usedGroupIds","mainGroup","cloneDeep","sample","items","getTrio","filter","i","itemsDict","reduce","acc","leftOverGroups","shuffle","group","groupId","length","includes","trio","every","copy","includeItem","selectedItems","sampleSize","sort","ResultsModalContent","game","win","resultPrint","correctGroups","language","useCopyToClipboard","state","copyToClipboard","result","gameId","heartsValue","max","Array","join","writeResult","useEffect","value","info","readOnly","cols","rows","Header","Layout","Content","ConnectTrioGame","createNewGame","setHearts","setItems","frozenItems","setFrozenItems","selection","setSelection","previousSelection","setPreviousSelection","setResultPrint","outcome","setOutcome","history","setHistory","setCorrectGroups","showResultModal","setShowResultModal","isComplete","setIsComplete","onDeselectAll","onSubmit","attemptStr","activeGroup","groupsDict","isCorrect","print","forEach","s","count","Promise","resolve","setTimeout","h","error","otherGroups","Object","values","find","g","map","onShuffle","onSelect","useConnectTrioEngine","cardWidth","useCardWidth","minWidth","correctGroup","isActive","active","activeClass","shape","onCancel","okButtonProps","hidden","cancelButtonProps","ConnectTrioDataWrapper","failToCreate","setFailToCreate","creatingGame","setCreatingGame","setGame","query","PUBLIC_URL","json","itemCount","useMemo","push","String","orderBy","entries","groups","tries","selectedGroups","console","thirdItem","keys","newGame","colors","index","split","useConnectTrioGame","ConnectTrioChrome","margin","challenge","setLanguage","useTitle","useCurrentUserContext","isAuthenticated","LoginModal","cancelText","NOOP","closable"],"sourceRoot":""}