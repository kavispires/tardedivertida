{"version":3,"file":"static/js/page-dev-classifier.c5039cea.chunk.js","mappings":"gWAmFO,SAASA,EAAT,GAAuG,IAA5EC,EAA2E,EAA3EA,KAAMC,EAAqE,EAArEA,SAAUC,EAA2D,EAA3DA,QAASC,EAAkD,EAAlDA,UAAWC,EAAuC,EAAvCA,KAASC,GAA8B,YAC3G,OACE,gBAAKF,WAAWG,EAAAA,EAAAA,GAAK,oBAAD,6BAA4CL,GAAYE,GAA5E,SACY,YAATH,GACC,SAAC,IAAD,CAASO,UAAU,aAAaL,QAASA,EAASM,QAAQ,QAAQJ,KAAMA,EAAxE,UACE,SAACK,GAAD,UAA4BJ,OAG9B,SAACI,GAAD,UAA4BJ,KAInC,CAED,SAASI,EAAT,GAMmC,IALjCC,EAKgC,EALhCA,KACAC,EAIgC,EAJhCA,MACAC,EAGgC,EAHhCA,UACAC,EAEgC,EAFhCA,QACAC,EACgC,EADhCA,YAEA,GAA8BC,EAAAA,EAAAA,UAASH,GAAvC,eAAOI,EAAP,KAAiBC,EAAjB,KACMC,EAAWC,QAAQR,GAMzB,OAJAS,EAAAA,EAAAA,IAAc,WACZH,EAAUL,EACX,KAGC,SAAC,MAAD,gBACES,MAAOH,GAAYF,EAAW,QAAU,SACxCM,KAAK,SACLC,YAAa,kBAAMN,GAAU,EAAhB,EACbO,aAAc,kBAAMP,EAAS,OAACL,QAAD,IAACA,GAAAA,EAAhB,EACdC,QAASA,QAAoBY,EAC7Bf,KAAMA,EACNgB,OAAK,EACL1B,KAAK,WACDc,GATN,aAWGE,GAAYE,IAAY,iBAAMf,UAAU,2BAAhB,SAA4CQ,MAG1E,C,iFCpGM,SAASgB,EAAT,GAQe,IAAD,IAPnBC,SAAAA,OAOmB,MAPR,GAOQ,EANnBC,EAMmB,EANnBA,SACAC,EAKmB,EALnBA,SACA9B,EAImB,EAJnBA,KACAa,EAGmB,EAHnBA,QAGmB,IAFnBkB,UAAAA,OAEmB,SADhB1B,GACgB,YACX2B,GAAaC,EAAAA,EAAAA,GAAa,CAChCL,SAAAA,EACAM,WAAW,EACXJ,SAAAA,EACAK,SAAUJ,IAJJC,SAOFI,EAAY,qBAElB,OACE,UAAC,MAAD,kBAAY/B,GAAZ,IAAkBL,KAAMA,EAAMa,QAAO,OAAEA,QAAF,IAAEA,EAAAA,EAAWiB,EAAlD,UACGD,EACAV,QAAQU,IAAaE,IAAc,KAClCA,IAAa,iBAAM5B,WAAWG,EAAAA,EAAAA,GAAK8B,EAAD,UAAeA,EAAf,aAA6BpC,IAAlD,SAA4DgC,OAGhF,C,kECrBYK,EAAoB,SAAC,GAOH,IAN7BR,EAM4B,EAN5BA,SAM4B,IAL5BS,OAAAA,OAK4B,aAJ5BC,YAAAA,OAI4B,MAJd,GAIc,MAH5BpC,UAAAA,OAG4B,MAHhB,GAGgB,MAF5BqC,UAAAA,OAE4B,MAFhB,QAEgB,EADzBnC,GACyB,YAC5B,OACE,mCACEF,WAAWG,EAAAA,EAAAA,GACT,qBADa,8BAEUkC,GACvBF,IAAWC,GAAe,8BAC1BpC,IAEEE,GAPN,aASGwB,IAGN,C,sKClBYY,EAAc,SAAC,GAA6E,IAA3EZ,EAA0E,EAA1EA,SAAUa,EAAgE,EAAhEA,MAAOvC,EAAyD,EAAzDA,UAAWwC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,UAC7DC,EAAY,cAElB,OACE,SAAC,SAAD,CACE1C,WAAWG,EAAAA,EAAAA,GACTuC,EACAF,GAAS,UAAOE,EAAP,eACTH,GAAK,UAAOG,EAAP,WACLD,GAAS,UAAOC,EAAP,gBACT1C,GAEF,cAAY,cARd,SAUG0B,GAGN,E,sBCnCM,SAASiB,EAAT,GAAuE,IAAD,IAArCC,EAAqC,EAArCA,MAChCC,GAAO,iBAACD,QAAD,IAACA,OAAD,EAACA,EAAOE,aAAR,QAAiB,IAAjB,iBAAuBF,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAOG,eAA9B,QAAyC,GAEtD,OAAa,IAATF,GAAcD,EAAMI,gBAEpB,SAAC,EAAD,CAAaR,WAAS,EAAtB,UACE,SAAC,KAAD,CAAWS,GAAG,8BAA2BC,GAAG,2BAMhD,SAAC,EAAD,CAAaV,WAAS,EAAtB,UACE,SAAC,KAAD,CACES,IACE,iCACGE,EAAAA,EAAAA,IAAUN,EAAM,QAAS,UAD5B,KACuC,4BAASA,IADhD,KACgEM,EAAAA,EAAAA,IAAUN,EAAM,UADhF,8BAKFK,IACE,iCACE,4BAASL,IADX,KAC2BM,EAAAA,EAAAA,IAAUN,EAAM,SAD3C,qCAOT,CC3BM,SAASO,EAAT,GAAqE,IAA5C1B,EAA2C,EAA3CA,SAAU1B,EAAiC,EAAjCA,UACxC,OAAO,iBAAMA,WAAWG,EAAAA,EAAAA,GAAK,iBAAkBH,GAAxC,SAAqD0B,GAC7D,CCoBM,IAAM2B,EAAQ,SAAC,GAQH,IAPjB3B,EAOgB,EAPhBA,SACAa,EAMgB,EANhBA,MACAhC,EAKgB,EALhBA,KACAP,EAIgB,EAJhBA,UAIgB,IAHhBsD,MAAAA,OAGgB,MAHR,EAGQ,MAFhBnC,KAAAA,OAEgB,MAFT,SAES,MADhBoC,MAAAA,OACgB,MADR,SACQ,EAChB,OACE,UAAC,UAAD,CACED,MAAOA,EACPtD,WAAWG,EAAAA,EAAAA,GAAK,QAAD,iBAAoBgB,GAApB,uBAA4CoC,GAAShB,GAAS,eAAgBvC,GAF/F,UAIGgB,QAAQT,IAASA,EACjBmB,IAGN,C,6IC5BM,SAASI,EAAT,GAK4C,IAJjDL,EAIgD,EAJhDA,SACAE,EAGgD,EAHhDA,SAGgD,IAFhDK,SAAAA,OAEgD,SAD7C9B,GAC6C,YAC1CsD,GAAQC,EAAAA,EAAAA,WAAS,QACrBC,iBAAiBC,EAAAA,EAAAA,IAAWlC,GAC5BE,SAAUK,OAAWV,EAAYK,GAC9BzB,IAGC2B,EAA2B,GAAhB2B,EAAMI,QAAeJ,EAAMK,QAE5C,OAAO,kBACFL,GADL,IAEE3B,SAAAA,GAEH,C,4FC3CM,SAASiC,IAAqE,IAAtDC,EAAqD,uDAAJ,CAAC,EAC/E,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAOMC,EAAM,SAACC,EAAaC,QACV/C,IAAV+C,EACFJ,EAAaK,OAAOF,GAEpBH,EAAaM,IAAIH,EAAKI,OAAOH,IAG/BH,EAAgBD,EACjB,EAMKQ,EAAS,SAACL,GACdH,EAAaK,OAAOF,GACpBF,EAAgBD,EACjB,GAEDS,EAAAA,EAAAA,YAAU,WACRC,OAAOC,QAAQb,GAAec,SAAQ,YAAmB,IAAD,eAAhBT,EAAgB,KAAXC,EAAW,KACjDJ,EAAaa,IAAIV,IACpBD,EAAIC,EAAKC,EAEZ,GACF,GAAE,IAEH,IAAMU,EAAcd,EACjBe,WACAC,MAAM,KACNC,QAAO,SAACC,EAA4BC,GACnC,MAAqBA,EAAMH,MAAM,KAAjC,eAAOb,EAAP,KAAYC,EAAZ,KAIA,OAHID,QAAiB9C,IAAV+C,IACTc,EAAGf,GAAOC,GAELc,CACR,GAAE,CAAC,GAEN,MAAO,CACLhB,IAAAA,EACAM,OAAAA,EACAM,YAAAA,EAEH,C,wBC/CM,SAASM,EAAaC,GAC3B,IAAMC,EAAOC,6BAEb,OAAQF,GACN,IAAK,MACH,MAAM,GAAN,OAAUC,EAAV,YAAkBC,eACpB,IAAK,MACH,MAAM,GAAN,OAAUD,EAAV,YAAkBC,iBACpB,IAAK,WACH,MAAM,GAAN,OAAUD,EAAV,YAAkBC,YACpB,QACE,MAAO,GAEZ,C,qPCpBYC,EAAa,CACxBC,MAAO,CAAEC,GAAI,QAASC,KAAM,CAAE1C,GAAI,QAASD,GAAI,SAC/C4C,UAAW,CAAEF,GAAI,YAAaC,KAAM,CAAE1C,GAAI,YAAaD,GAAI,WAC3D6C,IAAK,CAAEH,GAAI,MAAOC,KAAM,CAAE1C,GAAI,MAAOD,GAAI,WACzC8C,OAAQ,CAAEJ,GAAI,SAAUC,KAAM,CAAE1C,GAAI,SAAUD,GAAI,WAClD+C,QAAS,CAAEL,GAAI,UAAWC,KAAM,CAAE1C,GAAI,UAAWD,GAAI,eACrDgD,OAAQ,CAAEN,GAAI,SAAUC,KAAM,CAAE1C,GAAI,SAAUD,GAAI,WAClDiD,QAAS,CAAEP,GAAI,UAAWC,KAAM,CAAE1C,GAAI,UAAWD,GAAI,WACrDkD,KAAM,CAAER,GAAI,OAAQC,KAAM,CAAE1C,GAAI,OAAQD,GAAI,cAC5CmD,KAAM,CAAET,GAAI,OAAQC,KAAM,CAAE1C,GAAI,OAAQD,GAAI,UAC5CoD,OAAQ,CAAEV,GAAI,SAAUC,KAAM,CAAE1C,GAAI,SAAUD,GAAI,WAClDqD,KAAM,CAAEX,GAAI,OAAQC,KAAM,CAAE1C,GAAI,OAAQD,GAAI,WAC5CsD,MAAO,CAAEZ,GAAI,QAASC,KAAM,CAAE1C,GAAI,QAASD,GAAI,WAC/CuD,MAAO,CAAEb,GAAI,QAASC,KAAM,CAAE1C,GAAI,QAASD,GAAI,WAC/CwD,UAAW,CAAEd,GAAI,YAAaC,KAAM,CAAE1C,GAAI,YAAaD,GAAI,iBAC3DyD,OAAQ,CAAEf,GAAI,SAAUC,KAAM,CAAE1C,GAAI,SAAUD,GAAI,eAClD0D,KAAM,CAAEhB,GAAI,OAAQC,KAAM,CAAE1C,GAAI,OAAQD,GAAI,UAC5C2D,QAAS,CAAEjB,GAAI,UAAWC,KAAM,CAAE1C,GAAI,UAAWD,GAAI,eACrD4D,MAAO,CAAElB,GAAI,QAASC,KAAM,CAAE1C,GAAI,QAASD,GAAI,UAC/C6D,KAAM,CAAEnB,GAAI,OAAQC,KAAM,CAAE1C,GAAI,OAAQD,GAAI,WAC5C8D,IAAK,CAAEpB,GAAI,MAAOC,KAAM,CAAE1C,GAAI,MAAOD,GAAI,UACzC+D,MAAO,CAAErB,GAAI,QAASC,KAAM,CAAE1C,GAAI,QAASD,GAAI,WAC/CgE,MAAO,CAAEtB,GAAI,QAASC,KAAM,CAAE1C,GAAI,QAASD,GAAI,aAC/CL,MAAO,CAAE+C,GAAI,QAASC,KAAM,CAAE1C,GAAI,QAASD,GAAI,YAC/CiE,MAAO,CAAEvB,GAAI,QAASC,KAAM,CAAE1C,GAAI,QAASD,GAAI,WAC/CkE,SAAU,CAAExB,GAAI,WAAYC,KAAM,CAAE1C,GAAI,WAAYD,GAAI,aACxDmE,KAAM,CAAEzB,GAAI,OAAQC,KAAM,CAAE1C,GAAI,OAAQD,GAAI,SAC5CoE,MAAO,CAAE1B,GAAI,QAASC,KAAM,CAAE1C,GAAI,QAASD,GAAI,cAC/CqE,MAAO,CAAE3B,GAAI,QAASC,KAAM,CAAE1C,GAAI,QAASD,GAAI,QAC/CsE,KAAM,CAAE5B,GAAI,OAAQC,KAAM,CAAE1C,GAAI,OAAQD,GAAI,eAC5CuE,SAAU,CAAE7B,GAAI,WAAYC,KAAM,CAAE1C,GAAI,WAAYD,GAAI,YACxDwE,KAAM,CAAE9B,GAAI,OAAQC,KAAM,CAAE1C,GAAI,OAAQD,GAAI,WAC5CyE,OAAQ,CAAE/B,GAAI,SAAUC,KAAM,CAAE1C,GAAI,SAAUD,GAAI,UAIvC0E,EAAW,I,WCfjB,SAASC,EAAuBC,GAErC,IADA,IAAIC,EAAQ,EACZ,MAAqBnD,OAAOoD,OAAOF,EAAKG,YAAxC,eAAqD,CACpC,IADA,MAEbF,GAEH,CACD,OAAOA,CACR,CAqFM,IAAMG,EAAwBtD,OAAOuD,KAAKzC,GAAYP,QAAO,SAACiD,EAAU/D,GAE7E,OADA+D,EAAI/D,GAAO,EACJ+D,CACR,GAAE,CAAC,G,gHC1GSC,GAAoBC,EAAAA,EAAAA,eAiB9B,CACDC,WAAW,EACXC,WAAW,EACXC,SAAS,EACTC,UAAU,EACVC,KAAM,CAAC,EACPC,KAAM,WAAQ,EACdC,SAAS,EACTC,OAAQ,WAAQ,EAChBC,UAAW,CACTC,SAAU,GACVC,OAAQ,WAAQ,EAChBC,aAAc,WAAQ,EACtBC,aAAc,WAAQ,EACtBC,qBAAsB,WAAQ,EAC9BC,WAAY,WAAQ,KAQXC,EAAqB,SAAC,GAA2C,IAAzC3H,EAAwC,EAAxCA,SAC7B4H,GAAcC,EAAAA,EAAAA,kBACZC,EAAiBC,EAAAA,EAAAA,SAAjBD,aACFE,EAAW,kBACjB,GAAwB9I,EAAAA,EAAAA,UAAwB,CAAC,GAAjD,eAAO8H,EAAP,KAAaiB,EAAb,KACA,GAA8B/I,EAAAA,EAAAA,WAAS,GAAvC,eAAOgI,EAAP,KAAgBgB,EAAhB,KAEMC,GAAUxE,EAAAA,EAAAA,GAAa,OAE7B,GAKIyE,EAAAA,EAAAA,UAA8B,CAChCJ,SAAU,gBACVK,QAAQ,WAAD,wBAAE,oGACgBC,MAAM,GAAD,OAAIH,EAAJ,sBADrB,cACDI,EADC,gBAEMA,EAASC,OAFf,mFAAF,kDAAC,KANGC,EADb,EACE7B,UACS8B,EAFX,EAEE5B,QACM6B,EAHR,EAGE3B,KACW4B,EAJb,EAIE/B,UASF,GAMIuB,EAAAA,EAAAA,UAAgD,CAClDJ,SAAAA,EACAK,QAAQ,WAAD,wBAAE,+FACDQ,GAASC,EAAAA,EAAAA,IAAIC,EAAAA,GAAW,mBADvB,UAEqBC,EAAAA,EAAAA,IAAOH,GAF5B,cAEDI,EAFC,mCAGCA,EAAcjC,cAHf,QAGyB,CAAC,GAH1B,2CAAF,kDAAC,GAKRkC,QAASN,EACTO,UAAW,SAACZ,GACVT,EAAasB,KAAK,CAChBC,QAAS,cACT3K,UAAW,eAEb,IAAM4K,GAASC,EAAAA,EAAAA,OAAM,CAAC,EAAGZ,EAAQJ,GAEjCtF,OAAOoD,OAAOiD,GAAQnG,SAAQ,SAACgD,GAC7B,IAAKA,EAAKG,WAAWZ,KAAM,CAAC,IAAD,EACnB8D,GAAyC,GAA/B,UAACrD,EAAKG,WAAWmD,YAAjB,QAAyB,GACzCtD,EAAKG,WAAWZ,KAAO8D,CACxB,CACIrD,EAAKG,WAAWX,QACnBQ,EAAKG,WAAWX,MAAQ,GAErBQ,EAAKG,WAAWb,WACnBU,EAAKG,WAAWb,SAAW,UAGtBU,EAAKG,WAAWmD,KACvBxB,EAAQqB,GACiB,kBAAdnD,EAAKjC,OACdiC,EAAKjC,KAAO,CACV1C,GAAI2E,EAAKjC,KACT3C,GAAI,IAGT,IAED2G,GAAW,EACZ,EACDwB,QAAS,WACP5B,EAAa6B,MAAM,CACjBN,QAAS,qBACT3K,UAAW,cAEd,IAhDUkL,EAFb,EAEEhD,UACAC,EAHF,EAGEA,UACAC,EAJF,EAIEA,QACS+C,EALX,EAKEC,QAgDF,GAKIC,EAAAA,EAAAA,aAA4D,CAC9DC,YAAahC,EACbiC,WAAW,WAAD,wBAAE,WAAOC,GAAP,8EACJrB,GAASC,EAAAA,EAAAA,IAAIC,EAAAA,GAAW,mBADpB,UAEJoB,EAAAA,EAAAA,IAAOtB,EAAQqB,GAFX,gCAGHA,GAHG,2CAAF,mDAAC,GAKXf,UAAW,SAACiB,EAAGC,GACbvC,EAAawC,QAAQ,CACnBjB,QAAS,QACT3K,UAAW,eAEbkJ,EAAY2C,aAAavC,EAAUqC,GACnCnC,GAAW,EACZ,IAlBUsC,EADb,EACE5D,UACS6D,EAFX,EAEE3D,QACW4D,EAHb,EAGE7D,UACA8D,EAJF,EAIEA,OAkBItD,EAAWvE,ODhJS,SAACkE,GAC3B,IAAM4D,EAAqB3H,OAAOuD,KAAKQ,GACpC6D,IAAIC,QACJC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,CAAd,IAER,GAAIL,EAAmBM,OAAS,EAC9B,OAAOjF,EAGT,IAAK,IAAIkF,EAAI,EAAGA,EAAIP,EAAmBM,OAAQC,IAC7C,GAAIP,EAAmBO,GAAKP,EAAmBO,EAAI,KAAO,EACxD,OAAOP,EAAmBO,GAG9B,OAAOP,EAAmBA,EAAmBM,OAAS,EACvD,CCiIyBE,CAAapE,IAwErC,OACE,SAACN,EAAkB2E,SAAnB,CACE1I,MAAO,CACLiE,UAAW6B,GAAemB,EAC1B9C,QAAS4B,GAAa5B,GAAW2D,EACjC5D,UAAWA,GAAa6D,EACxB3D,SAAUyD,EACVxD,KAAAA,EACAC,KAAM0D,EACNzD,QAAAA,EACAC,OAAQ0C,EACRzC,UAAW,CACTC,SAAAA,EACAC,OAnFc,SAACgE,GACrBpD,GAAW,GACXD,GAAQ,SAACsD,GAAD,eAAC,UACJA,GADG,cAELD,EAAS,CACRrH,GAAIqH,EACJpH,KAAM,CACJ1C,GAAI,GACJD,GAAI,IAEN+E,YAAYkF,EAAAA,EAAAA,WAAUjF,KARlB,GAWT,EAuEOgB,aArEiB,SAAC+D,EAAgBpH,GACxCgE,GAAW,GACXD,GAAQ,SAACsD,GAAD,qBAAC,UACJA,GADG,cAELD,GAFK,QAAC,UAGFC,EAASD,IAHR,IAIJpH,KAAM,CACJ3C,GAAE,UAAEgK,EAASD,GAAQpH,KAAK3C,UAAxB,QAA8B,GAChCC,GAAI0C,MANF,GAUT,EA0DOsD,aAxDiB,SAAC8D,EAAgBpH,GACxCgE,GAAW,GACXD,GAAQ,SAACsD,GAAD,qBAAC,UACJA,GADG,cAELD,GAFK,QAAC,UAGFC,EAASD,IAHR,IAIJpH,KAAM,CACJ1C,GAAE,UAAE+J,EAASD,GAAQpH,KAAK1C,UAAxB,QAA8B,GAChCD,GAAI2C,MANF,GAUT,EA6COuD,qBA3CyB,SAAC6D,EAAgBG,EAAqB9I,GACrEuF,GAAW,GACXD,GAAQ,SAACsD,GAAD,eAAC,UACJA,GADG,cAELD,GAFK,QAAC,UAGFC,EAASD,IAHR,IAIJhF,YAAW,kBACNiF,EAASD,GAAQhF,YADZ,cAEPmF,EAAc9I,OANb,GAUT,EAgCO+E,WA9BW,SAAC4D,EAAgBI,GAClCxD,GAAW,GACXD,GAAQ,SAACsD,GACP,IAAMI,GAAOH,EAAAA,EAAAA,WAAUD,GAMvB,OALIG,EACFC,EAAKL,GAAQI,MAAO,SAEbC,EAAKL,GAAQI,KAEfC,CACR,GACF,IAGC,SAoBG3L,GAGN,EAEY4L,EAAgB,kBAAMC,EAAAA,EAAAA,YAAWnF,EAAjB,EC7OtB,SAASoF,IACd,IAAQ9E,EAAS4E,IAAT5E,KAIF+E,GAAQC,EAAAA,EAAAA,UAAQ,kBFgCA,SAAChF,GACvB,IAAMiF,EAA0D,CAAC,EAC3DC,EAA+B,GAC/BC,EAA+B,GACjCC,EAAgB,EAChBC,EAAgB,EAEpBpJ,OAAOoD,OAAOW,GAAM7D,SAAQ,SAACgD,EAAMmG,GACjCJ,EAAmBI,GAAS,EAC5BH,EAAmBG,GAAS,EAC5B,IAAIC,GAAO,EACPC,GAAY,EAChBvJ,OAAOC,QAAQiD,EAAKG,YAAYnD,SAAQ,YAA0B,IAAD,eAAvBsJ,EAAuB,KAAZC,EAAY,UAE5B9M,IAA/BqM,EAAgBQ,KAClBR,EAAgBQ,GAAa,CAC3B,KAAM,EACN,KAAM,EACN,KAAM,EACN,EAAK,EACL,EAAK,EACL,EAAG,EACH,EAAG,IAGPR,EAAgBQ,GAAW3J,OAAO4J,KAAY,EAG1CA,EAAS,EACXR,EAAmBI,IAAUI,EAE7BP,EAAmBG,IAAUI,EAGhB,IAAXA,GAAiBH,IACnBH,GAAiB,EACjBG,GAAO,IAGO,IAAZG,GAAkBF,IACpBH,GAAiB,EACjBG,GAAY,EAEf,GACF,IAED,IAAMG,EAAa1J,OAAOuD,KAAKQ,GAAMkE,OAErC,MAAO,CACLe,gBAAAA,EACAG,cAAeQ,KAAK1L,MAAuB,IAAhBkL,EAAuBO,GAClDN,cAAeO,KAAK1L,MAAuB,IAAhBmL,EAAuBM,GAClDE,wBAAwBC,EAAAA,EAAAA,MAAKZ,GAC7Ba,wBAAwBD,EAAAA,EAAAA,MAAKX,GAC7B/K,MAAOuL,EAEV,CExF6BK,CAAShG,EAAf,GAAsB,CAACA,IAE7C,GAA8B9H,EAAAA,EAAAA,UAAS,QAAvC,eAAO+N,EAAP,KAAgBC,EAAhB,KAEMC,GAAgBnB,EAAAA,EAAAA,UAAQ,WAC5B,OAAOoB,EAAAA,EAAAA,SACLnK,OAAOoD,OAAOtC,GACd,CACE,SAACsJ,GACC,GAAgB,SAAZJ,EAAoB,OAAOI,EAAInJ,KAAK1C,GACxC,IAAM8E,EAAayF,EAAME,gBAAgBoB,EAAIpJ,IAC7C,MAAgB,kBAAZgJ,EAAoC3G,EAAW,GACnC,aAAZ2G,EAA+B3G,EAAW,GAAOA,EAAW,GAChD,YAAZ2G,EAA8B3G,EAAW,GAAOA,GAAW,GAC/C,aAAZ2G,EAA+B3G,GAAW,GAAQA,GAAW,GACjD,kBAAZ2G,EAAoC3G,GAAW,GAC5C+G,EAAIpJ,EACZ,GAEH,CAAa,SAAZgJ,EAAqB,MAAQ,QAEjC,GAAE,CAAClB,EAAME,gBAAiBgB,IAE3B,OACE,SAAC,IAAD,CAAO3O,UAAU,uBAAuBgP,UAAU,WAAlD,UACE,UAAC,IAAD,CAAMC,MAAK,QAAX,WACE,UAAC,IAAD,CAAOC,MAAI,EAAC/N,KAAK,QAAjB,WACE,SAAC,IAAD,CAAW8N,MAAM,iBAAiB5K,MAAOoJ,EAAMK,cAAeqB,OAAO,OACrE,SAAC,IAAD,CAAWF,MAAM,iBAAiB5K,MAAOoJ,EAAMM,cAAeoB,OAAO,OACrE,SAAC,IAAD,CACEF,MAAM,oCACN5K,MAAOoJ,EAAMc,uBACba,UAAW,KAEb,SAAC,IAAD,CACEH,MAAM,oCACN5K,MAAOoJ,EAAMgB,uBACbW,UAAW,KAGb,4BACE,sCAAqB,KACrB,UAAC,IAAD,CAAQC,SAAU,SAACC,GAAD,OAAOV,EAAWU,EAAlB,EAAsBjL,MAAOsK,EAASxN,KAAK,QAAQoO,MAAO,CAAEC,SAAU,QAAxF,WACE,SAAC,WAAD,CAAenL,MAAM,OAArB,mBACA,SAAC,WAAD,CAAeA,MAAM,gBAArB,iCACA,SAAC,WAAD,CAAeA,MAAM,WAArB,4BACA,SAAC,WAAD,CAAeA,MAAM,UAArB,2BACA,SAAC,WAAD,CAAeA,MAAM,WAArB,4BACA,SAAC,WAAD,CAAeA,MAAM,gBAArB,0CAIN,SAAC,IAAD,KAEA,SAAC,IAAD,CAAO6K,MAAI,EAAC/N,KAAK,QAAjB,SACG0N,EAActC,KAAI,SAACnH,GAClB,IAAM+I,EAAYV,EAAME,gBAAgBvI,EAAMO,IAC9C,OACE,UAAC,IAAD,CAAMsJ,MAAK,UAAK7J,EAAMQ,KAAK1C,GAAhB,cAAwBkC,EAAMQ,KAAK3C,IAA9C,WACE,SAAC,IAAD,CACEgM,MAAM,gBACN5K,MAAyB,IAAjB8J,EAAU,GAAcV,EAAM3K,MACtCqM,OAAO,IACPC,UAAW,KAEb,SAAC,IAAD,CACEH,MAAM,WACN5K,MAA4C,KAAnC8J,EAAU,GAAOA,EAAU,IAAeV,EAAM3K,MACzDqM,OAAO,IACPC,UAAW,KAEb,SAAC,IAAD,CACEH,MAAM,UACN5K,MAA6C,KAApC8J,GAAU,GAAQA,EAAU,IAAeV,EAAM3K,MAC1DqM,OAAO,IACPC,UAAW,EACXpP,UAAU,UAEZ,SAAC,IAAD,CACEiP,MAAM,WACN5K,MAA8C,KAArC8J,GAAU,GAAQA,GAAU,IAAgBV,EAAM3K,MAC3DqM,OAAO,IACPC,UAAW,KAEb,SAAC,IAAD,CACEH,MAAM,gBACN5K,MAA0B,IAAlB8J,GAAU,GAAeV,EAAM3K,MACvCqM,OAAO,IACPC,UAAW,EACXpP,UAAU,WA/B2CoF,EAAMO,GAmClE,UAKV,C,2FCrGM,SAAS8J,IAAiC,IAAzBC,EAAwB,uDAAV/H,EACpC,GAA4B/G,EAAAA,EAAAA,UAAS8O,GAArC,eAAO1C,EAAP,KAAe2C,EAAf,KAEMC,EAAe,WACnBD,GAAU,SAACE,GACT,OAAOrL,OAAOgI,OAAOqD,GAAO,EAC7B,GACF,EAEKC,EAAW,WACfH,GAAU,SAACE,GACT,OAAOrL,OAAOgI,OAAOqD,GAAO,EAC7B,GACF,EAEKE,EAAO,SAACC,GACZL,GAAU,SAACE,GACT,GAAe,UAAXG,EACF,OAAOrI,EAGT,GAAe,SAAXqI,EACF,OAAON,EAGT,IAAMO,EAASzD,OAAOqD,GAChBK,EAASF,EAASC,EACxB,OAAIC,EAAS,GAAKA,GAAU1D,OAAOkD,GAAe,EACzClL,OAAOgI,OAAOqD,GAAOG,GAG1BA,EAAS,EACJrI,EAGF+H,CACR,GACF,EAED,MAAO,CACL1C,OAAAA,EACA4C,aAAAA,EACAE,SAAAA,EACAH,UAAAA,EACAQ,WAAY3D,OAAOQ,GACnB+C,KAAAA,EAEH,C,eCnDM,SAASK,EAAT,GAAuF,IAAnD/L,EAAkD,EAAlDA,MAAOgL,EAA2C,EAA3CA,SAChD,OACE,UAAC,WAAD,CAAahL,MAAOA,EAAOgL,SAAUA,EAAUgB,WAAW,SAASC,YAAY,QAA/E,WACE,SAAC,YAAD,CAAczQ,KAAK,UAAUwE,OAAQ,EAArC,iBAGA,SAAC,YAAD,CAAcA,OAAQ,EAAtB,iBACA,SAAC,YAAD,CAAcA,OAAQ,EAAtB,iBACA,SAAC,YAAD,CACEA,MAAO,EACPkL,MAAO,CACLgB,gBAA2B,IAAVlM,EAAc,MAAQ,SAH3C,gBAQA,SAAC,YAAD,CAAcA,MAAO,EAArB,gBACA,SAAC,YAAD,CAAcA,MAAO,EAArB,gBACA,SAAC,YAAD,CAAcA,MAAO,EAArB,iBAGL,C,eCZKmM,GAAoB1B,EAAAA,EAAAA,SAAQnK,OAAOoD,OAAOtC,GAAa,CAAC,WAAY,CAAC,QAEpE,SAASgL,IAAY,IAAD,IACzB,EAAqDnD,IAA7C5E,EAAR,EAAQA,KAAME,EAAd,EAAcA,QAASH,EAAvB,EAAuBA,SAAUE,EAAjC,EAAiCA,KAAMG,EAAvC,EAAuCA,UACvC,EAA8B2G,EAAQ,IAA9BzC,EAAR,EAAQA,OAAQ2C,EAAhB,EAAgBA,UAChB,GAA8C/O,EAAAA,EAAAA,UAAQ,oBAAC4P,EAAkB,UAAnB,aAAC,EAAsB7K,UAAvB,QAA6B,SAAnF,eAAO+K,EAAP,KAAwBC,EAAxB,KACA,GAA8B/P,EAAAA,EAAAA,UAAS,MAAvC,eAAO+N,EAAP,KAAgBC,EAAhB,KACA,GAAgChO,EAAAA,EAAAA,UAAS,MAAzC,eAAOgQ,EAAP,KAAiBC,EAAjB,KACA,GAAwBjQ,EAAAA,EAAAA,UAAS,OAAjC,eAAOkQ,EAAP,KAAaC,EAAb,KAEMC,GAAYtD,EAAAA,EAAAA,UAAQ,WACxB,OAAOoB,EAAAA,EAAAA,SACLnK,OAAOoD,OAAOW,GACd,CAAC,SAACqG,GAAD,MAAsB,OAAZJ,EAAmBnC,OAAOuC,EAAIpJ,KAAMsL,EAAAA,EAAAA,KAAIlC,EAAKJ,EAAvD,GACD,CAAC,OAEJ,GAAE,CAACjG,EAAMiG,IAEJuC,GAA+BxD,EAAAA,EAAAA,UAAQ,WAC3C,OAAOsD,EAAU9L,QAAO,SAACiD,EAAwBN,GAI/C,OLuFC,SAAuBA,EAAiBsG,EAAsByC,GACnE,MAAiB,OAAbA,EACK/I,EAAKG,WAAWmG,GAAa,EAErB,OAAbyC,EACK/I,EAAKG,WAAWmG,GAAa,EAGrB,OAAbyC,EACK/I,EAAKG,WAAWmG,GAAa,EAErB,OAAbyC,EACK/I,EAAKG,WAAWmG,GAAa,EAGrB,MAAbyC,EACoC,IAA/B/I,EAAKG,WAAWmG,GAGR,MAAbyC,EACoC,IAA/B/I,EAAKG,WAAWmG,GAGR,MAAbyC,EACoC,IAA/B/I,EAAKG,WAAWmG,GAGR,OAAbyC,GACqC,IAAhC/I,EAAKG,WAAWmG,GAGR,OAAbyC,GACqC,IAAhC/I,EAAKG,WAAWmG,GAGR,OAAbyC,IACqC,IAAhC/I,EAAKG,WAAWmG,EAI1B,CKlISgD,CAActJ,EAAM6I,EAA8BE,KACpDzI,EAAIN,EAAKlC,KAAM,GAEVwC,CACR,GAAE,CAAC,EACL,GAAE,CAAC6I,EAAWN,EAAiBE,IAM1BQ,EAAa1I,EAAKsE,GAExB,OACE,SAAC,IAAD,CAAOhN,UAAU,uBAAuBgP,UAAU,WAAlD,UACE,UAAC,IAAD,CACEC,MAAM,WACNoC,MACEzI,IACE,SAAC,KAAD,CACE/I,KAAK,UACLa,QAAS,kBAAMiI,EAAKD,EAAX,EACT4I,QAAS7I,EACTzG,SAAUyG,IAAaG,EAJzB,kBAJN,WAeE,SAAC2I,EAAD,CACEL,UAAWA,EACXR,gBAAiBA,EACjBC,mBAAoBA,EACpBhC,QAASA,EACTC,WAAYA,EACZgC,SAAUA,EACVC,YAAaA,EACbC,KAAMA,EACNC,QAASA,KAGX,SAAC,IAAD,CAAO7B,MAAI,EAAX,SACG8B,EAAUzE,KAAI,SAAC1E,GAAU,IAAD,IACvB,MAAa,aAATiJ,GAAwBI,EAAUrJ,EAAKlC,IAI9B,iBAATmL,GAA2BI,EAAUrJ,EAAKlC,IACrC,MAIP,UAAC,KAAD,CAEE3F,UAAU,4BACVU,QAAS,kBAjDCiF,EAiDoBkC,EAAKlC,QAhD/CgK,EAAUhK,GADW,IAACA,CAiDD,EAHX,WAKE,SAAC,IAAD,CAAOmC,MAAO0E,OAAO3E,EAAKlC,IAAKxE,KAAK,QAAQqQ,MAAM,OAAOC,cAAe,IAAxE,UACE,SAACC,EAAA,EAAD,CACE/L,GAAIkC,EAAKlC,GACTgM,MAAO,IACP3R,WAAWG,EAAAA,EAAAA,GAAK+Q,EAAUrJ,EAAKlC,KAAO,gCAG1C,iBAAM3F,UAAU,4BAAhB,SAC6B,kBAA1B,OAAO6H,QAAP,IAAOA,GAAP,UAAOA,EAAMjC,YAAb,aAAO,EAAY1C,IAAnB,OAAqC2E,QAArC,IAAqCA,GAArC,UAAqCA,EAAMjC,YAA3C,aAAqC,EAAY1C,GAAK,QAZpD2E,EAAKlC,IATL,IAyBV,OAGH,SAAC,IAAD,CACEsJ,MAAM,kBACNhP,KAAMe,QAAQgM,GACd4E,SAAU,kBAAMjC,EAAU,GAAhB,EACVkC,cAAe,CAAEtC,MAAO,CAAEuC,QAAS,SAJrC,SAMG9Q,QAAQoQ,KACP,iBAAKpR,UAAU,mBAAf,WACE,SAAC0R,EAAA,EAAD,CAAU/L,GAAIyL,EAAWzL,GAAIgM,MAAO,OACpC,4BACE,UAAC,UAAD,CAAkBrO,MAAO,EAAzB,WACE,SAAC,KAAD,UAAgBoN,IADlB,KACqDU,EAAWxL,KAAK1C,IAAM,IAD3E,KACkF,IAC/EkO,EAAWxL,KAAK3C,IAAM,IAFzB,IAE+BmO,EAAWhE,OAAQ,SAAC,IAAD,CAAKoE,MAAM,UAAX,sBAElD,SAACpB,EAAD,CACE/L,MAAO+M,EAAWpJ,WAAW0I,GAC7BrB,SAAU,SAACC,GACTxG,EAAUK,qBAAqB6D,EAAQ0D,EAAiBpB,EAAEU,OAAO3L,OACjEsL,EAAU,GACX,gBASlB,CAcD,SAAS4B,EAAT,GAUkB,IAThBL,EASe,EATfA,UACAR,EAQe,EARfA,gBACAC,EAOe,EAPfA,mBACAhC,EAMe,EANfA,QACAC,EAKe,EALfA,WACAgC,EAIe,EAJfA,SACAC,EAGe,EAHfA,YACAC,EAEe,EAFfA,KACAC,EACe,EADfA,QAEA,OACE,UAAC,IAAD,CAAO7B,MAAI,EAAClP,UAAU,SAAtB,WACE,UAAC,IAAD,CAAOmB,KAAK,QAAZ,WACE,yCACA,SAAC,IAAD,CACEkO,SAAU,SAACC,GAAD,OAAOqB,EAAmBrB,EAA1B,EACVjL,MAAOqM,EACPvP,KAAK,QACLoO,MAAO,CAAEC,SAAU,QAJrB,SAMGgB,EAAkBjE,KAAI,SAACnH,GAAD,OACrB,SAAC,WAAD,CAA8Bf,MAAOe,EAAMO,GAA3C,SACGP,EAAMQ,KAAK1C,IADMkC,EAAMO,GADL,UAQ3B,UAAC,IAAD,CAAOxE,KAAK,QAAZ,WACE,uCACA,UAAC,IAAD,CAAQkO,SAAU,SAACC,GAAD,OAAOV,EAAWU,EAAlB,EAAsBjL,MAAOsK,EAASxN,KAAK,QAAQoO,MAAO,CAAEC,SAAU,QAAxF,WACE,SAAC,WAAD,CAAenL,MAAM,KAArB,iBACA,SAAC,WAAD,CAAeA,MAAM,UAArB,yBAIJ,UAAC,IAAD,CAAOlD,KAAK,QAAZ,WACE,wCACA,UAAC,IAAD,CAAQkO,SAAU,SAACC,GAAD,OAAOuB,EAAYvB,EAAnB,EAAuBjL,MAAOuM,EAAUzP,KAAK,QAAQoO,MAAO,CAAEC,SAAU,QAA1F,WACE,SAAC,WAAD,CAAenL,MAAM,KAArB,4BACA,SAAC,WAAD,CAAeA,MAAM,KAArB,uBACA,SAAC,WAAD,CAAeA,MAAM,IAArB,gBACA,SAAC,WAAD,CAAeA,MAAM,IAArB,gBACA,SAAC,WAAD,CAAeA,MAAM,IAArB,gBACA,SAAC,WAAD,CAAeA,MAAM,KAArB,iBACA,SAAC,WAAD,CAAeA,MAAM,KAArB,gBACA,SAAC,WAAD,CAAeA,MAAM,KAArB,iBACA,SAAC,WAAD,CAAeA,MAAM,MAArB,uBACA,SAAC,WAAD,CAAeA,MAAM,MAArB,kCAIJ,UAAC,IAAD,CAAOlD,KAAK,QAAZ,WACE,oCACA,UAAC,IAAD,CAAQkO,SAAU,SAACC,GAAD,OAAOyB,EAAQzB,EAAf,EAAmBjL,MAAOyM,EAAM3P,KAAK,QAAQoO,MAAO,CAAEC,SAAU,QAAlF,WACE,SAAC,WAAD,CAAenL,MAAM,MAArB,kBACA,SAAC,WAAD,CAAeA,MAAM,WAArB,4BACA,SAAC,WAAD,CAAeA,MAAM,eAArB,sCAIJ,UAAC,IAAD,CAAOlD,KAAK,QAAZ,WACE,wCACA,SAAC,IAAD,CAAO2G,MAAOnD,OAAOuD,KAAKgJ,GAAWtE,OAAQ4E,MAAM,OAAOC,cAAe,WAIhF,CCtMM,SAASM,EAAT,GAWY,IAVjB/E,EAUgB,EAVhBA,OACAmD,EASgB,EAThBA,WACAP,EAQgB,EARhBA,aACAE,EAOgB,EAPhBA,SACAC,EAMgB,EANhBA,KACApH,EAKgB,EALhBA,KACAF,EAIgB,EAJhBA,SACAC,EAGgB,EAHhBA,KACAK,EAEgB,EAFhBA,SACAH,EACgB,EADhBA,QAEA,OACE,UAAC,IAAD,CAAO5I,UAAU,yBAAyBkP,MAAI,EAA9C,WACE,SAAC,IAAD,CAAOA,MAAI,EAAX,UACE,SAAC,KAAD,CAAQrP,KAAK,UAAUa,QAAS,kBAAMiI,EAAKD,EAAX,EAAkB4I,QAAS7I,EAAUzG,SAAUyG,IAAaG,EAA5F,qBAIF,UAAC,IAAD,CAAOsG,MAAI,EAAX,WACE,SAAC,KAAD,CAAQxO,QAAS,kBAAMqP,EAAK,QAAX,EAAqB/N,SAAUgL,IAAWrF,EAA3D,oBAGA,SAAC,KAAD,CAAQjH,QAAS,kBAAMqP,GAAM,GAAZ,EAAiB/N,SAAUmO,GAAc,GAA1D,0BAGA,SAAC,KAAD,CAAQzP,QAASkP,EAAc5N,SAAUgL,IAAWrF,EAApD,uBAGA,SAAC,IAAD,CAAS9H,KAAK,cACd,SAAC,KAAD,CAAQa,QAASoP,EAAU9N,SPdZ,QOcsBgL,EAArC,mBAGA,SAAC,KAAD,CAAQtM,QAAS,kBAAMqP,EAAK,GAAX,EAAgB/N,SAAUmO,GAAc3D,OPjB1C,OOiB4D,GAA3E,sBAGA,SAAC,KAAD,CAAQ9L,QAAS,kBAAMqP,EAAK,OAAX,EAAoB/N,SAAUmO,GAAc3D,OAAOzD,GAAY,EAAhF,wBAIF,SAAC,IAAD,CAAOmG,MAAI,EAAX,UACE,SAAC,KAAD,CACExO,QAAS,kBNyGZ,SAA8BqO,EAAkBiD,GACrD,IAAMC,EAAO,IAAIC,KAAK,CAACC,KAAKC,UAAUrD,EAAK,KAAM,IAAK,CAAElP,KAAM,qBACxDwS,EAAgBC,SAASC,cAAc,KAC7CF,EAAcG,KAAOC,OAAOC,IAAIC,gBAAgBV,GAChDI,EAAcO,SAAWZ,EACzBK,EAAcQ,QACdJ,OAAOC,IAAII,gBAAgBT,EAAcG,KAC1C,CMhHwBO,CAAqBrK,EAAM,cAAjC,EACT4I,QAAS7I,EACTzG,SAAUyG,EAHZ,+BAUP,C,0BC3DM,SAASuK,EAAT,GAMgB,IALrBhG,EAKoB,EALpBA,OACA/D,EAIoB,EAJpBA,aACAC,EAGoB,EAHpBA,aACAkI,EAEoB,EAFpBA,WACAhI,EACoB,EADpBA,WAEA,OACE,UAAC,IAAD,CAAOpJ,UAAU,mBAAmBgP,UAAU,WAA9C,WACE,SAAC,IAAD,CAAOiE,YAAY,YAAY5D,SAAUpG,EAAc5E,MAAO+M,EAAWxL,KAAK1C,MAC9E,SAAC,IAAD,CAAO+P,YAAY,YAAY5D,SAAUnG,EAAc7E,MAAO+M,EAAWxL,KAAK3C,MAC9E,SAACyO,EAAA,EAAD,CAAU/L,GAAIqH,EAAQ2E,MAAO,OAC7B,SAAC,IAAD,CACEuB,gBAAgB,OAChBC,kBAAkB,MAClB9D,SAAUjG,EACVgK,QAAO,OAAEhC,QAAF,IAAEA,OAAF,EAAEA,EAAYhE,SAI5B,C,gBCxBM,SAASiG,GAAT,GAAmD,IAAjC3K,EAAgC,EAAhCA,KAAMiH,EAA0B,EAA1BA,UACvB2D,EAAY3O,OAAOoD,OAAOW,GAAMxD,QAAO,SAACiD,EAA6B/C,GAEzE,OADA+C,EAAI/C,EAAMQ,KAAK1C,IAAMkC,EAAMO,GACpBwC,CACR,GAAE,CAAC,GACEoL,EAAQ5O,OAAOuD,KAAKoL,GAAW/G,KAAI,SAAC3G,GAAD,MAAW,CAAEvB,MAAOuB,EAApB,IAQzC,OACE,SAAC,IAAD,WACE,SAAC,KAAD,CACE4N,QAASD,EACThE,MAAO,CAAEoC,MAAO,KAChB8B,SAXW,SAAC7N,GACZ0N,EAAU1N,IACZ+J,EAAU2D,EAAU1N,GAEvB,EAQKqN,YAAY,WACZS,aAAc,SAACC,EAAYC,GAAb,OACuD,IAAnEA,EAAQvP,MAAMwP,cAAcC,QAAQH,EAAWE,cADnC,KAMrB,C,4BC5BM,SAASE,GAAT,GAAoD,IAAhCvT,EAA+B,EAA/BA,MAAO6D,EAAwB,EAAxBA,MAChC,OACE,iBAAKrE,UAAU,uBAAf,UACGQ,EADH,IACW,IACR6D,GACC,SAAC2P,GAAA,EAAD,CAAmBzE,MAAO,CAAEiC,MAAO,YAEnC,SAACyC,GAAA,EAAD,CAAqB1E,MAAO,CAAEiC,MAAO,WAI5C,CCFM,SAAS0C,KACd,MAAqD5G,IAA7C5E,EAAR,EAAQA,KAAMC,EAAd,EAAcA,KAAMF,EAApB,EAAoBA,SAAUK,EAA9B,EAA8BA,UAAWF,EAAzC,EAAyCA,QACzC,EAAwE6G,EAAQ3G,EAAUC,UAAlFiE,EAAR,EAAQA,OAAQ4C,EAAhB,EAAgBA,aAAcE,EAA9B,EAA8BA,SAAUK,EAAxC,EAAwCA,WAAYJ,EAApD,EAAoDA,KAAMJ,EAA1D,EAA0DA,UAEpD5M,EAAU2F,EAAKsE,IAErBtI,EAAAA,EAAAA,YAAU,WACH3B,GACH+F,EAAUE,OAAOgE,EAEpB,GAAE,CAACjK,IAkBJ,IAAKA,EACH,OACE,SAAC,IAAD,CAAO/C,UAAU,kBAAjB,UACE,SAAC,KAAD,MAKN,IAAMmU,EVrBD,SAAsBtM,EAAiBuM,GAC5C,IAAMpM,EAAarD,OAAOoD,QAAP,kBAAmBqM,GAAkBvM,EAAKG,aAM7D,MAAO,CACLqM,QANcrT,QAAQ6G,EAAKjC,MAO3B0O,QANctM,EAAWuM,SAAS,GAOlCC,aANmBxM,EAAWuM,SAAS,GAOvCE,YANkBzM,EAAW0M,MAAK,SAACC,GAAD,OAAOA,EAAI,CAAX,IAQrC,CUQoBC,CAAa7R,EAASkF,GAEnC4M,GACJ,SAAC7B,EAAD,CACEhG,OAAQA,EACRoE,WAAYrO,EACZkG,aA9BiB,SAACqG,GACpBxG,EAAUG,aAAa+D,EAAQsC,EAAEU,OAAO3L,MAAMyQ,cAC/C,EA6BG5L,aA3BiB,SAACoG,GACpBxG,EAAUI,aAAa8D,EAAQsC,EAAEU,OAAO3L,MAAMyQ,cAC/C,EA0BG1L,WApBe,SAAC/E,GAClByE,EAAUM,WAAW4D,EAAQ3I,EAC9B,IAsBD,OACE,UAAC,IAAD,CAAOrE,UAAU,uBAAuBgP,UAAU,WAAlD,WACE,SAAC+C,EAAD,CACE/E,OAAQA,EACRmD,WAAYA,EACZP,aAAcA,EACdE,SAAUA,EACVC,KAAMA,EACNtH,SAAUA,EACVE,KAAMA,EACNI,SAAUD,EAAUC,SACpBL,KAAMA,EACNE,QAASA,KAGX,UAAC,IAAD,CACEqG,MAAK,sBAAiBjC,EAAjB,cAA6BjK,EAAQ6C,KAAK1C,GAA1C,eAAmD0E,EAAuB7E,GAA1E,QACLsO,OAAO,SAACgC,GAAD,CAAQ1D,UAAWA,EAAWjH,KAAMA,IAF7C,WAIE,UAAC,IAAD,CAAO1I,UAAU,mBAAjB,UACG6U,GAED,SAAC,IAAD,CAAO7U,UAAU,yBAAyBkP,MAAI,EAA9C,SACGvK,OAAOoD,OAAOtC,GAAY8G,KAAI,SAACnH,GAC9B,OACE,UAAC,IAAD,CAAOpF,UAAU,oBAAoBgP,UAAU,WAA/C,WACE,gBAAKhP,UAAU,QAAf,mBAA2BoF,EAAMQ,KAAK1C,GAAtC,cAA8CkC,EAAMQ,KAAK3C,OACzD,SAACmN,EAAD,CACE/L,MAAOtB,EAAQiF,WAAW5C,EAAMO,IAChC0J,SAAU,SAACC,GAAD,OAzDEnC,EAyD0B/H,EAAMO,GAzDXtB,EAyDeiL,EAAEU,OAAO3L,WAxDzEyE,EAAUK,qBAAqB6D,EAAQG,EAAa9I,GADzB,IAAC8I,EAAqB9I,CAyDvB,MAJiDe,EAAMO,GAQxE,MAGFkP,MAEH,UAAC,IAAD,CAAO7U,UAAU,wBAAjB,WACE,SAAC+T,GAAD,CAAUvT,MAAM,WAAW6D,MAAO8P,EAAWE,WAC7C,SAACN,GAAD,CAAUvT,MAAM,gBAAgB6D,MAAO8P,EAAWK,eAClD,SAACT,GAAD,CAAUvT,MAAM,sBAAsB6D,MAAO8P,EAAWM,eACxD,SAACV,GAAD,CAAUvT,MAAM,qBAAqB6D,MAAO8P,EAAWG,iBAI3D,SAACvC,EAAD,CACE/E,OAAQA,EACRmD,WAAYA,EACZP,aAAcA,EACdE,SAAUA,EACVC,KAAMA,EACNtH,SAAUA,EACVE,KAAMA,EACNI,SAAUD,EAAUC,SACpBL,KAAMA,EACNE,QAASA,MAIhB,C,eC3GD,SAASmM,KACP,MAAqCzH,IAA7BhF,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,QAASE,EAA5B,EAA4BA,KAC5B,GAAwB9H,EAAAA,EAAAA,UAAS,WAAjC,eAAOoU,EAAP,KAAaC,EAAb,KACM9P,GAAKrB,EAAAA,GAAAA,GAAe,CAAEkR,KAAM,YAMlC,IAJAtQ,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACduQ,EAAO,UAAC9P,EAAGJ,YAAYiQ,YAAhB,QAAwB,UAChC,GAAE,CAAC7P,EAAGJ,YAAYiQ,QAEfE,EAAAA,EAAAA,SAAQxM,IAASJ,EACnB,OAAO,SAAC,KAAD,IAGT,GAAIE,EACF,OAAO,SAAC,IAAD,CAAWuC,QAAQ,uBAG5B,IAAMoK,EAAW,CACf,CAAE3U,MAAO,aAAc6D,MAAO,UAAWrC,SAAmB,YAATgT,GACnD,CAAExU,MAAO,WAAY6D,MAAO,WAAYrC,SAAmB,aAATgT,GAClD,CAAExU,MAAO,QAAS6D,MAAO,QAASrC,SAAmB,UAATgT,IAG9C,OACE,4BACE,SAACI,EAAA,EAAD,CACEnG,MAAM,aACNoC,OAAO,SAAC,IAAD,CAAWmC,QAAS2B,EAAUE,aAAcL,EAAM3F,SAAU,SAACsF,GAAD,OAAYxP,EAAGhB,IAAI,OAAQwQ,EAA3B,MAG3D,YAATK,IAAsB,SAACd,GAAD,IACb,aAATc,IAAuB,SAACvE,EAAD,IACd,UAATuE,IAAoB,SAACxH,EAAD,MAG1B,CAYD,OAVA,WAGE,OAFA8H,EAAAA,EAAAA,GAAS,6CAGP,SAACjM,EAAD,WACE,SAAC,GAAD,KAGL,C,wGC3DM,SAASkM,IACd,IAAQC,GAAaC,EAAAA,EAAAA,MAAbD,SACFE,GAAWC,EAAAA,EAAAA,MAEXnC,EAAU,CACd,CAAEhT,MAAO,OAAQ6D,MAAO,IAAKrC,SAAuB,MAAbwT,GACvC,CAAEhV,MAAO,MAAO6D,MAAO,OAAQrC,SAAuB,SAAbwT,GACzC,CAAEhV,MAAO,QAAS6D,MAAO,aAAcrC,SAAuB,eAAbwT,GACjD,CAAEhV,MAAO,SAAU6D,MAAO,cAAerC,SAAuB,gBAAbwT,GACnD,CAAEhV,MAAO,UAAW6D,MAAO,eAAgBrC,SAAuB,iBAAbwT,GACrD,CAAEhV,MAAO,YAAa6D,MAAO,iBAAkBrC,SAAuB,mBAAbwT,GACzD,CAAEhV,MAAO,aAAc6D,MAAO,kBAAmBrC,SAAuB,oBAAbwT,GAC3D,CAAEhV,MAAO,WAAY6D,MAAO,YAAarC,SAAuB,cAAbwT,IAOrD,OAAO,SAAC,IAAD,CAAWhC,QAASA,EAAS6B,aAAcG,EAAUnG,SAJzC,SAACuG,GAClBF,EAASE,EACV,GAGF,CCXM,SAASR,EAAT,GAAgE,IAA3CnG,EAA0C,EAA1CA,MAAO4G,EAAmC,EAAnCA,SAAUxE,EAAyB,EAAzBA,MAC3C,OACE,mBAAQrR,UAAU,aAAlB,UACE,iBAAKA,UAAU,sBAAf,WACE,iBAAKA,UAAU,mBAAf,WACE,kBAAMA,UAAU,oBAAhB,UAAqCiP,EAArC,QACA,iBAAMjP,UAAU,uBAAhB,SAAwC6V,QAE1C,iBAAK7V,UAAU,oBAAf,WACE,SAAC,IAAD,CAAOA,UAAU,0BAA0BkP,MAAI,EAA/C,SACGmC,KAEH,SAACkE,EAAD,WAKT,C","sources":["components/buttons/FixedMenuButton.tsx","components/buttons/TimedButton.tsx","components/buttons/TransparentButton.tsx","components/text/Instruction.tsx","components/text/RoundsLeftInstruction.tsx","components/text/TextHighlight.tsx","components/text/Title.tsx","hooks/useCountdown.ts","hooks/useQueryParams.ts","hooks/useTDBaseUrl.ts","pages/Dev/Classifier/constants.ts","pages/Dev/Classifier/helpers.ts","pages/Dev/Classifier/ClassifierContext.tsx","pages/Dev/Classifier/StatsCard.tsx","pages/Dev/Classifier/hooks.ts","pages/Dev/Classifier/AttributeLevelRadioGroup.tsx","pages/Dev/Classifier/Grouping.tsx","pages/Dev/Classifier/Controls.tsx","pages/Dev/Classifier/CurrentItem.tsx","pages/Dev/Classifier/Search.tsx","pages/Dev/Classifier/Verifier.tsx","pages/Dev/Classifier/ClassifyingCard.tsx","pages/Dev/Classifier/ItemClassifier.tsx","pages/Dev/DevMenu.tsx","pages/Dev/DevHeader.tsx"],"sourcesContent":["import clsx from 'clsx';\nimport { ReactNode, useState } from 'react';\nimport { useEffectOnce } from 'react-use';\n// Ant Design Resources\nimport { Button, ButtonProps, Popover } from 'antd';\n// Sass\nimport './FixedMenuButton.scss';\n\ntype FixedMenuButtonDefaultProps = {\n  /**\n   * What order it will show up in the screen\n   * 0 for rules\n   * 1 for extras (e.g. card size)\n   * 2 for extras\n   * 3 for rating\n   * -1 for admin only\n   */\n  position: 0 | 1 | 2 | 3 | -1;\n  /**\n   * The displayed icon\n   */\n  icon: ReactNode;\n  /**\n   * The optional label to follow the icon when hover\n   */\n  label?: ReactNode;\n  /**\n   * The custom class\n   */\n  className?: string;\n  /**\n   * Determine if label should be visible\n   */\n  showLabel?: boolean;\n  /**\n   * Any ant design button props\n   */\n  buttonProps?: ButtonProps;\n};\n\ninterface FixedMenuButtonPopoverProps extends FixedMenuButtonDefaultProps {\n  /**\n   * The type of the floater\n   */\n  type: 'popover';\n  /**\n   * Content of popover, required when popover rule\n   */\n  content: ReactNode;\n  /**\n   * Guard onclick from button only\n   */\n  onClick?: never;\n  /**\n   * If popover should be open\n   */\n  open?: boolean;\n}\n\ninterface FixedMenuButtonButtonOnlyProps extends FixedMenuButtonDefaultProps {\n  /**\n   * The type of the floater\n   */\n  type: 'button';\n  /**\n   * The click function for the button\n   */\n  onClick: GenericFunction;\n  /**\n   * Guard content from popover\n   */\n  content?: never;\n  /**\n   * If popover should be open\n   */\n  open?: never;\n}\n\ntype FixedMenuButtonProps = FixedMenuButtonPopoverProps | FixedMenuButtonButtonOnlyProps;\n\n/**\n * Button position on the top left of the screen to display rules, admin button and other features\n */\nexport function FixedMenuButton({ type, position, content, className, open, ...rest }: FixedMenuButtonProps) {\n  return (\n    <div className={clsx('fixed-menu-button', `fixed-menu-button--${position}`, className)}>\n      {type === 'popover' ? (\n        <Popover placement=\"bottomLeft\" content={content} trigger=\"click\" open={open}>\n          <FixedMenuButtonContent {...rest} />\n        </Popover>\n      ) : (\n        <FixedMenuButtonContent {...rest} />\n      )}\n    </div>\n  );\n}\n\nfunction FixedMenuButtonContent({\n  icon,\n  label,\n  showLabel,\n  onClick,\n  buttonProps,\n}: Partial<FixedMenuButtonProps>) {\n  const [isActive, setActive] = useState(showLabel);\n  const hasLabel = Boolean(label);\n\n  useEffectOnce(() => {\n    setActive(showLabel);\n  });\n\n  return (\n    <Button\n      shape={hasLabel && isActive ? 'round' : 'circle'}\n      size=\"middle\"\n      onMouseOver={() => setActive(true)}\n      onMouseLeave={() => setActive(showLabel ?? false)}\n      onClick={onClick ? onClick : undefined}\n      icon={icon}\n      ghost\n      type=\"primary\"\n      {...buttonProps}\n    >\n      {isActive && hasLabel && <span className=\"fixed-menu-button__label\">{label}</span>}\n    </Button>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, ButtonProps } from 'antd';\n// Hook and Utils\nimport { useCountdown } from 'hooks/useCountdown';\n// Sass\nimport './TimedButton.scss';\n\ninterface TimedButtonProps extends ButtonProps {\n  /**\n   * Duration to call onExpire in seconds\n   */\n  duration?: number;\n  /**\n   * Function to be called when the time expires\n   */\n  onExpire?: GenericFunction;\n  /**\n   * Flag indicating if the timer should be hidden (this cancels the onExpire function)\n   */\n  hideTimer?: boolean;\n}\n\n/**\n * Button component that triggers a function when given duration is over\n */\nexport function TimedButton({\n  duration = 10,\n  children,\n  onExpire,\n  type,\n  onClick,\n  hideTimer = false,\n  ...rest\n}: TimedButtonProps) {\n  const { timeLeft } = useCountdown({\n    duration,\n    autoStart: true,\n    onExpire,\n    disabled: hideTimer,\n  });\n\n  const timeClass = 'timed-button__time';\n\n  return (\n    <Button {...rest} type={type} onClick={onClick ?? onExpire}>\n      {children}\n      {Boolean(children && !hideTimer) && ' '}\n      {!hideTimer && <span className={clsx(timeClass, `${timeClass}--${type}`)}>{timeLeft}</span>}\n    </Button>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Sass\nimport './TransparentButton.scss';\ninterface TransparentButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * The content of the button\n   */\n  children: ReactNode;\n  /**\n   * Flag indicating if the button is on its active state\n   */\n  active?: boolean;\n  /**\n   * Custom active class\n   */\n  activeClass?: string;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Behavior when the mouse hovers the button (default: scale)\n   */\n  hoverType?: 'scale' | 'sepia';\n}\n\n/**\n * Transparent button that has all the functionality of a button but no visible styling\n */\nexport const TransparentButton = ({\n  children,\n  active = false,\n  activeClass = '',\n  className = '',\n  hoverType = 'scale',\n  ...rest\n}: TransparentButtonProps) => {\n  return (\n    <button\n      className={clsx(\n        'transparent-button',\n        `transparent-button--${hoverType}`,\n        active && (activeClass || 'transparent-button--active'),\n        className\n      )}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n};\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Sass\nimport './Instruction.scss';\n\ntype InstructionsProps = {\n  /**\n   * The content of the instruction\n   */\n  children: ReactNode;\n  /**\n   * Adds a semi transparent background (white or black opposite to the white property)\n   */\n  contained?: boolean;\n  /**\n   * Make text color white\n   */\n  white?: boolean;\n  /**\n   * Makes instruction width 100%\n   */\n  fullWidth?: boolean;\n  /**\n   * Custom class name\n   */\n  className?: string;\n};\n\n/**\n * Typography container for instructions\n */\nexport const Instruction = ({ children, white, className, contained, fullWidth }: InstructionsProps) => {\n  const baseClass = 'instruction';\n\n  return (\n    <Typography.Text\n      className={clsx(\n        baseClass,\n        contained && `${baseClass}--contained`,\n        white && `${baseClass}--white`,\n        fullWidth && `${baseClass}--full-width`,\n        className\n      )}\n      data-testid=\"instruction\"\n    >\n      {children}\n    </Typography.Text>\n  );\n};\n","// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { pluralize } from 'utils/helpers';\n\ntype RoundsLeftInstructionProps = {\n  /**\n   * The state round object with current and total values\n   */\n  round: GameRound;\n};\n\n/**\n * Displays instructional sentence based on the number of rounds left for the game to end\n */\nexport function RoundsLeftInstruction({ round }: RoundsLeftInstructionProps) {\n  const left = (round?.total ?? 0) - (round?.current ?? 0);\n\n  if (left === 0 || round.forceLastRound) {\n    return (\n      <Instruction contained>\n        <Translate pt=\"Essa foi a última rodada\" en=\"No more rounds left\" />\n      </Instruction>\n    );\n  }\n\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            {pluralize(left, 'Falta', 'Faltam')} <strong>{left}</strong> {pluralize(left, 'rodada')} para o\n            jogo terminar...\n          </>\n        }\n        en={\n          <>\n            <strong>{left}</strong> {pluralize(left, 'round')} left for the game to end...\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Sass\nimport './TextHighlight.scss';\n\ntype TextHighlightProps = {\n  /**\n   * The text to be highlighted\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n};\n\nexport function TextHighlight({ children, className }: TextHighlightProps) {\n  return <span className={clsx('text-highlight', className)}>{children}</span>;\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Sass\nimport './Title.scss';\n\nexport type TitleProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Makes text white\n   */\n  white?: boolean;\n  /**\n   * Icon prefixing the title\n   */\n  icon?: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * The heading level (default: 2)\n   */\n  level?: 1 | 2 | 3 | 4 | 5;\n  /**\n   * The size of the title (default: medium)\n   */\n  size?: 'xx-small' | 'x-small' | 'small' | 'medium' | 'large';\n  /**\n   * The alignment of the text (default: center)\n   */\n  align?: 'left' | 'right' | 'center';\n};\n\nexport const Title = ({\n  children,\n  white,\n  icon,\n  className,\n  level = 2,\n  size = 'medium',\n  align = 'center',\n}: TitleProps) => {\n  return (\n    <Typography.Title\n      level={level}\n      className={clsx('title', `title--${size}`, `title--align-${align}`, white && 'title--white', className)}\n    >\n      {Boolean(icon) && icon}\n      {children}\n    </Typography.Title>\n  );\n};\n","import { TimerResult, TimerSettings, useTimer } from 'react-timer-hook';\nimport { inNSeconds } from 'utils/helpers';\n\ntype SelectedTimeSettings = Omit<TimerSettings, 'expiryTimestamp'>;\n\nexport interface useCountdownSettings extends SelectedTimeSettings {\n  /**\n   * The duration of the countdown in seconds\n   */\n  duration: number;\n  /**\n   * Disable timer\n   */\n  disabled?: boolean;\n}\n\ninterface useCountdownReturnValue extends TimerResult {\n  /**\n   * Time left in total seconds (minutes + seconds)\n   */\n  timeLeft: number;\n}\n\n/**\n * Timer countdown to perform actions\n * @param settings\n * @returns\n */\nexport function useCountdown({\n  duration,\n  onExpire,\n  disabled = false,\n  ...rest\n}: useCountdownSettings): useCountdownReturnValue {\n  const timer = useTimer({\n    expiryTimestamp: inNSeconds(duration),\n    onExpire: disabled ? undefined : onExpire,\n    ...rest,\n  });\n\n  const timeLeft = timer.minutes * 60 + timer.seconds;\n\n  return {\n    ...timer,\n    timeLeft,\n  };\n}\n","import { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport function useQueryParams(defaultParams: Record<string, string | number> = {}) {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  /**\n   * Adds a query param\n   * @param key - the key of the query param to add\n   * @param value - the value of the query param to add\n   */\n  const add = (key: string, value: unknown) => {\n    if (value === undefined) {\n      searchParams.delete(key);\n    } else {\n      searchParams.set(key, String(value));\n    }\n\n    setSearchParams(searchParams);\n  };\n\n  /**\n   * Removes a query param\n   * @param key - the key of the query param to remove\n   */\n  const remove = (key: string) => {\n    searchParams.delete(key);\n    setSearchParams(searchParams);\n  };\n\n  useEffect(() => {\n    Object.entries(defaultParams).forEach(([key, value]) => {\n      if (!searchParams.has(key)) {\n        add(key, value);\n      }\n    });\n  }, []); // eslint-disable-line\n\n  const queryParams = searchParams\n    .toString()\n    .split('&')\n    .reduce((qp: Record<string, string>, entry) => {\n      const [key, value] = entry.split('=');\n      if (key && value !== undefined) {\n        qp[key] = value;\n      }\n      return qp;\n    }, {});\n\n  return {\n    add,\n    remove,\n    queryParams,\n  };\n}\n","type TDUrlKind = 'tdi' | 'tdr' | 'tdi-data';\n\n/**\n * Returns the URL for the given kind of resource\n * @param kind the kind of resource\n * @returns the URL for the given kind of resource\n */\nexport function useTDBaseUrl(kind: TDUrlKind): string {\n  const base = process.env.REACT_APP_TD_BASE_URL;\n\n  switch (kind) {\n    case 'tdi':\n      return `${base}/${process.env.REACT_APP_TDI_IMAGES}`;\n    case 'tdr':\n      return `${base}/${process.env.REACT_APP_TD_RESOURCES}`;\n    case 'tdi-data':\n      return `${base}/${process.env.REACT_APP_TDI_DATA}`;\n    default:\n      return '';\n  }\n}\n","export const ATTRIBUTES = {\n  alive: { id: 'alive', name: { en: 'Alive', pt: 'Vivo' } },\n  beautiful: { id: 'beautiful', name: { en: 'Beautiful', pt: 'Bonito' } },\n  big: { id: 'big', name: { en: 'Big', pt: 'Grande' } },\n  bright: { id: 'bright', name: { en: 'Bright', pt: 'Brilho' } },\n  clothes: { id: 'clothes', name: { en: 'Clothes', pt: 'Vestimenta' } },\n  danger: { id: 'danger', name: { en: 'Danger', pt: 'Perigo' } },\n  defense: { id: 'defense', name: { en: 'Defense', pt: 'Defesa' } },\n  fast: { id: 'fast', name: { en: 'Fast', pt: 'Rápido' } },\n  flat: { id: 'flat', name: { en: 'Flat', pt: 'Plano' } }, // New\n  flight: { id: 'flight', name: { en: 'Flight', pt: 'Vôo' } },\n  food: { id: 'food', name: { en: 'Food', pt: 'Comida' } },\n  heavy: { id: 'heavy', name: { en: 'Heavy', pt: 'Pesado' } },\n  human: { id: 'human', name: { en: 'Human', pt: 'Humano' } },\n  knowledge: { id: 'knowledge', name: { en: 'Knowledge', pt: 'Conhecimento' } },\n  liquid: { id: 'liquid', name: { en: 'Liquid', pt: 'Líquido' } },\n  long: { id: 'long', name: { en: 'Long', pt: 'Longo' } },\n  machine: { id: 'machine', name: { en: 'Machine', pt: 'Máquina' } }, // New\n  metal: { id: 'metal', name: { en: 'Metal', pt: 'Metal' } },\n  odor: { id: 'odor', name: { en: 'Odor', pt: 'Cheiro' } }, // New\n  old: { id: 'old', name: { en: 'Old', pt: 'Velho' } }, // New\n  plant: { id: 'plant', name: { en: 'Plant', pt: 'Planta' } },\n  power: { id: 'power', name: { en: 'Power', pt: 'Força' } },\n  round: { id: 'round', name: { en: 'Round', pt: 'Redondo' } },\n  sharp: { id: 'sharp', name: { en: 'Sharp', pt: 'Afiado' } },\n  singular: { id: 'singular', name: { en: 'Singular', pt: 'Singular' } }, // Newer\n  soft: { id: 'soft', name: { en: 'Soft', pt: 'Mole' } }, // Newer\n  solid: { id: 'solid', name: { en: 'Solid', pt: 'Sólido' } }, // Newer\n  sound: { id: 'sound', name: { en: 'Sound', pt: 'Som' } }, // New\n  tool: { id: 'tool', name: { en: 'Tool', pt: 'Ferramenta' } },\n  valuable: { id: 'valuable', name: { en: 'Valuable', pt: 'Valioso' } },\n  warm: { id: 'warm', name: { en: 'Warm', pt: 'Quente' } },\n  weapon: { id: 'weapon', name: { en: 'Weapon', pt: 'Arma' } },\n  // hard: { id: 'hard', name: { en: 'Hard', pt: 'Duro' } }, // New\n};\n\nexport const FIRST_ID = '1';\nexport const LAST_ID = '450';\n","import { mean } from 'lodash';\nimport { ATTRIBUTES, FIRST_ID } from './constants';\nimport type { AlienItem, AlienItemDict, Attribute, Weight } from './types';\n\nexport const findLatestId = (data: AlienItemDict) => {\n  const orderedNumberedIds = Object.keys(data)\n    .map(Number)\n    .sort((a, b) => a - b);\n\n  if (orderedNumberedIds.length < 1) {\n    return FIRST_ID;\n  }\n\n  for (let i = 1; i < orderedNumberedIds.length; i++) {\n    if (orderedNumberedIds[i] - orderedNumberedIds[i - 1] !== 1) {\n      return orderedNumberedIds[i];\n    }\n  }\n  return orderedNumberedIds[orderedNumberedIds.length - 1];\n};\n\nexport function countNonZeroAttributes(item: AlienItem): number {\n  let count = 0;\n  for (const weight of Object.values(item.attributes)) {\n    if (weight !== 0) {\n      count++;\n    }\n  }\n  return count;\n}\n\nexport function validateItem(item: AlienItem, allAttributes: Record<Attribute, Weight>) {\n  const attributes = Object.values({ ...allAttributes, ...item.attributes });\n  const hasName = Boolean(item.name);\n  const hasFive = attributes.includes(5);\n  const hasNoZeroes = !attributes.includes(0);\n  const hasPositive = attributes.some((v) => v > 1);\n\n  return {\n    hasName,\n    hasFive,\n    hasNoZeroes,\n    hasPositive,\n  };\n}\n\nexport const getStats = (data: AlienItemDict) => {\n  const attributeCounts: Record<string, Record<string, number>> = {};\n  const positiveAttributes: number[] = [];\n  const negativeAttributes: number[] = [];\n  let positiveFives = 0;\n  let negativeFives = 0;\n\n  Object.values(data).forEach((item, index) => {\n    positiveAttributes[index] = 0;\n    negativeAttributes[index] = 0;\n    let has5 = false;\n    let hasMinus5 = false;\n    Object.entries(item.attributes).forEach(([attribute, weight]) => {\n      // Count attributes\n      if (attributeCounts[attribute] === undefined) {\n        attributeCounts[attribute] = {\n          '-5': 0,\n          '-3': 0,\n          '-1': 0,\n          '0': 0,\n          '1': 0,\n          3: 0,\n          5: 0,\n        };\n      }\n      attributeCounts[attribute][String(weight)] += 1;\n\n      // Count weights\n      if (weight > 0) {\n        positiveAttributes[index] += weight;\n      } else {\n        negativeAttributes[index] += weight;\n      }\n\n      if (weight === 5 && !has5) {\n        positiveFives += 1;\n        has5 = true;\n      }\n\n      if (weight === -1 && !hasMinus5) {\n        negativeFives += 1;\n        hasMinus5 = true;\n      }\n    });\n  });\n\n  const totalItems = Object.keys(data).length;\n\n  return {\n    attributeCounts,\n    positiveFives: Math.round((positiveFives * 100) / totalItems),\n    negativeFives: Math.round((negativeFives * 100) / totalItems),\n    positiveAttributesMean: mean(positiveAttributes),\n    negativeAttributesMean: mean(negativeAttributes),\n    total: totalItems,\n  };\n};\n\nexport function replaceAttributes(newData: Record<string, Record<string, Record<string, number>>>) {\n  Object.values(newData).forEach((item) => {\n    item.attributes.hard = item.attributes.solid;\n    delete item.attributes.solid;\n  });\n}\n\n/**\n * Generates a new items with attributes in their initial states\n */\nexport const initialAttributeState = Object.keys(ATTRIBUTES).reduce((acc: any, key) => {\n  acc[key] = 0;\n  return acc;\n}, {}) as Record<Attribute, Weight>;\n\n/**\n * Checks if an item matches the criteria\n * @param item\n * @param attribute\n * @param criteria\n * @returns\n */\nexport function checkCriteria(item: AlienItem, attribute: Attribute, criteria: string) {\n  if (criteria === '>0') {\n    return item.attributes[attribute] > 0;\n  }\n  if (criteria === '>1') {\n    return item.attributes[attribute] > 1;\n  }\n\n  if (criteria === '<0') {\n    return item.attributes[attribute] < 0;\n  }\n  if (criteria === '<1') {\n    return item.attributes[attribute] < 1;\n  }\n\n  if (criteria === '5') {\n    return item.attributes[attribute] === 5;\n  }\n\n  if (criteria === '3') {\n    return item.attributes[attribute] === 3;\n  }\n\n  if (criteria === '1') {\n    return item.attributes[attribute] === 1;\n  }\n\n  if (criteria === '-1') {\n    return item.attributes[attribute] === -1;\n  }\n\n  if (criteria === '-3') {\n    return item.attributes[attribute] === -3;\n  }\n\n  if (criteria === '-5') {\n    return item.attributes[attribute] === -5;\n  }\n\n  return true;\n}\n\nexport function downloadObjectAsFile(obj: PlainObject, filename: string): void {\n  const blob = new Blob([JSON.stringify(obj, null, 2)], { type: 'application/json' });\n  const anchorElement = document.createElement('a');\n  anchorElement.href = window.URL.createObjectURL(blob);\n  anchorElement.download = filename;\n  anchorElement.click();\n  window.URL.revokeObjectURL(anchorElement.href);\n}\n","import { App } from 'antd';\nimport { doc, getDoc, setDoc } from 'firebase/firestore';\nimport { useTDBaseUrl } from 'hooks/useTDBaseUrl';\nimport { cloneDeep, merge } from 'lodash';\nimport { createContext, ReactNode, useContext, useState } from 'react';\nimport { QueryKey, UseMutateFunction, useMutation, useQuery, useQueryClient } from 'react-query';\nimport { firestore } from 'services/firebase';\n\nimport { findLatestId, initialAttributeState } from './helpers';\n\nimport type { AlienItemDict, LegacyAlienItemDict } from './types';\nexport const ClassifierContext = createContext<{\n  isLoading: boolean;\n  isSuccess: boolean;\n  isError: boolean;\n  isSaving: boolean;\n  data: AlienItemDict;\n  save: UseMutateFunction<AlienItemDict, unknown, AlienItemDict, unknown>;\n  isDirty: boolean;\n  reload: () => void;\n  itemUtils: {\n    latestId: string;\n    create: (itemId: string) => void;\n    updateNameEN: (itemId: string, name: string) => void;\n    updateNamePT: (itemId: string, name: string) => void;\n    updateAttributeValue: (itemId: string, attributeId: string, value: number) => void;\n    updateNSFW: (itemId: string, value: boolean) => void;\n  };\n}>({\n  isLoading: false,\n  isSuccess: false,\n  isError: false,\n  isSaving: false,\n  data: {},\n  save: () => {},\n  isDirty: false,\n  reload: () => {},\n  itemUtils: {\n    latestId: '',\n    create: () => {},\n    updateNameEN: () => {},\n    updateNamePT: () => {},\n    updateAttributeValue: () => {},\n    updateNSFW: () => {},\n  },\n});\n\ntype ClassifierProviderProps = {\n  children: ReactNode;\n};\n\nexport const ClassifierProvider = ({ children }: ClassifierProviderProps) => {\n  const queryClient = useQueryClient();\n  const { notification } = App.useApp();\n  const queryKey = 'data/alienItems';\n  const [data, setData] = useState<AlienItemDict>({});\n  const [isDirty, setIsDirty] = useState(false);\n\n  const baseUrl = useTDBaseUrl('tdr');\n\n  const {\n    isLoading: isLoadingTR,\n    isError: isTRError,\n    data: trData,\n    isSuccess: isSuccessTR,\n  } = useQuery<LegacyAlienItemDict>({\n    queryKey: 'td/alienItems',\n    queryFn: async () => {\n      const response = await fetch(`${baseUrl}/alien-items.json`);\n      return await response.json();\n    },\n  });\n\n  const {\n    // data: firebaseData = {},\n    isLoading: isLoadingFirestore,\n    isSuccess,\n    isError,\n    refetch: fetchItems,\n  } = useQuery<any, unknown, AlienItemDict, QueryKey>({\n    queryKey,\n    queryFn: async () => {\n      const docRef = doc(firestore, 'data/alienItems');\n      const querySnapshot = await getDoc(docRef);\n      return (querySnapshot.data() ?? {}) as AlienItemDict;\n    },\n    enabled: isSuccessTR,\n    onSuccess: (response) => {\n      notification.info({\n        message: 'Data loaded',\n        placement: 'bottomLeft',\n      });\n      const merged = merge({}, trData, response) as any;\n      // Remove hard\n      Object.values(merged).forEach((item: any) => {\n        if (!item.attributes.soft) {\n          const softVal = (item.attributes.hard ?? 0) * -1;\n          item.attributes.soft = softVal;\n        }\n        if (!item.attributes.solid) {\n          item.attributes.solid = 0;\n        }\n        if (!item.attributes.singular) {\n          item.attributes.singular = 0;\n        }\n\n        delete item.attributes.hard;\n        setData(merged);\n        if (typeof item.name === 'string') {\n          item.name = {\n            en: item.name,\n            pt: '',\n          };\n        }\n      });\n      // Make it dual language\n      setIsDirty(false);\n    },\n    onError: () => {\n      notification.error({\n        message: 'Error loading data',\n        placement: 'bottomLeft',\n      });\n    },\n  });\n\n  const {\n    isLoading: isMutating,\n    isError: isMutationError,\n    isSuccess: isSaved,\n    mutate,\n  } = useMutation<AlienItemDict, unknown, AlienItemDict, unknown>({\n    mutationKey: queryKey,\n    mutationFn: async (newData: AlienItemDict) => {\n      const docRef = doc(firestore, 'data/alienItems');\n      await setDoc(docRef, newData);\n      return newData;\n    },\n    onSuccess: (_, variables) => {\n      notification.success({\n        message: 'Saved',\n        placement: 'bottomLeft',\n      });\n      queryClient.setQueryData(queryKey, variables);\n      setIsDirty(false);\n    },\n  });\n\n  const latestId = String(findLatestId(data));\n\n  const createNewItem = (itemId: string) => {\n    setIsDirty(true);\n    setData((prevData) => ({\n      ...prevData,\n      [itemId]: {\n        id: itemId,\n        name: {\n          en: '',\n          pt: '',\n        },\n        attributes: cloneDeep(initialAttributeState),\n      },\n    }));\n  };\n\n  const updateItemNameEN = (itemId: string, name: string) => {\n    setIsDirty(true);\n    setData((prevData) => ({\n      ...prevData,\n      [itemId]: {\n        ...prevData[itemId],\n        name: {\n          pt: prevData[itemId].name.pt ?? '',\n          en: name,\n        },\n      },\n    }));\n  };\n\n  const updateItemNamePT = (itemId: string, name: string) => {\n    setIsDirty(true);\n    setData((prevData) => ({\n      ...prevData,\n      [itemId]: {\n        ...prevData[itemId],\n        name: {\n          en: prevData[itemId].name.en ?? '',\n          pt: name,\n        },\n      },\n    }));\n  };\n\n  const updateItemAttributeValue = (itemId: string, attributeId: string, value: number) => {\n    setIsDirty(true);\n    setData((prevData) => ({\n      ...prevData,\n      [itemId]: {\n        ...prevData[itemId],\n        attributes: {\n          ...prevData[itemId].attributes,\n          [attributeId]: value,\n        },\n      },\n    }));\n  };\n\n  const updateNSFW = (itemId: string, nsfw: boolean) => {\n    setIsDirty(true);\n    setData((prevData) => {\n      const copy = cloneDeep(prevData);\n      if (nsfw) {\n        copy[itemId].nsfw = true;\n      } else {\n        delete copy[itemId].nsfw;\n      }\n      return copy;\n    });\n  };\n\n  return (\n    <ClassifierContext.Provider\n      value={{\n        isLoading: isLoadingTR || isLoadingFirestore,\n        isError: isTRError || isError || isMutationError,\n        isSuccess: isSuccess || isSaved,\n        isSaving: isMutating,\n        data,\n        save: mutate,\n        isDirty,\n        reload: fetchItems,\n        itemUtils: {\n          latestId,\n          create: createNewItem,\n          updateNameEN: updateItemNameEN,\n          updateNamePT: updateItemNamePT,\n          updateAttributeValue: updateItemAttributeValue,\n          updateNSFW,\n        },\n      }}\n    >\n      {children}\n    </ClassifierContext.Provider>\n  );\n};\n\nexport const useClassifier = () => useContext(ClassifierContext);\n","import { Card, Divider, Select, Space, Statistic } from 'antd';\n\nimport { ATTRIBUTES } from './constants';\nimport { getStats } from './helpers';\n\nimport { orderBy } from 'lodash';\nimport { useMemo, useState } from 'react';\nimport { useClassifier } from './ClassifierContext';\n\nexport function StatsCard() {\n  const { data } = useClassifier();\n  // Count 5s and -5s among objects\n  // Counts attribute values for -5 -3 -1 0 1 3 5\n  // Positive vs Negative\n  const stats = useMemo(() => getStats(data), [data]);\n\n  const [sorting, setSorting] = useState('name');\n\n  const attributeList = useMemo(() => {\n    return orderBy(\n      Object.values(ATTRIBUTES),\n      [\n        (obj) => {\n          if (sorting === 'name') return obj.name.en;\n          const attributes = stats.attributeCounts[obj.id];\n          if (sorting === 'positive-five') return attributes['5'];\n          if (sorting === 'positive') return attributes['5'] + attributes['3'];\n          if (sorting === 'neutral') return attributes['1'] + attributes['-1'];\n          if (sorting === 'negative') return attributes['-5'] + attributes['-3'];\n          if (sorting === 'negative-five') return attributes['-5'];\n          return obj.id;\n        },\n      ],\n      [sorting === 'name' ? 'asc' : 'desc']\n    );\n  }, [stats.attributeCounts, sorting]);\n\n  return (\n    <Space className=\"container classifier\" direction=\"vertical\">\n      <Card title={`Stats`}>\n        <Space wrap size=\"large\">\n          <Statistic title=\"Positive Fives\" value={stats.positiveFives} suffix=\"%\" />\n          <Statistic title=\"Negative Fives\" value={stats.negativeFives} suffix=\"%\" />\n          <Statistic\n            title=\"Positive Attributes Total Average\"\n            value={stats.positiveAttributesMean}\n            precision={1}\n          />\n          <Statistic\n            title=\"Negative Attributes Total Average\"\n            value={stats.negativeAttributesMean}\n            precision={1}\n          />\n\n          <div>\n            <span>Sorting</span>{' '}\n            <Select onChange={(e) => setSorting(e)} value={sorting} size=\"small\" style={{ minWidth: '15ch' }}>\n              <Select.Option value=\"name\">name</Select.Option>\n              <Select.Option value=\"positive-five\">Most Positive Five</Select.Option>\n              <Select.Option value=\"positive\">Most Positive</Select.Option>\n              <Select.Option value=\"neutral\">Most Neutral</Select.Option>\n              <Select.Option value=\"negative\">Most Negative</Select.Option>\n              <Select.Option value=\"negative-five\">Most Negative Five</Select.Option>\n            </Select>\n          </div>\n        </Space>\n        <Divider />\n\n        <Space wrap size=\"small\">\n          {attributeList.map((entry) => {\n            const attribute = stats.attributeCounts[entry.id];\n            return (\n              <Card title={`${entry.name.en} - ${entry.name.pt}`} key={entry.id}>\n                <Statistic\n                  title=\"Positive Five\"\n                  value={(attribute['5'] * 100) / stats.total}\n                  suffix=\"%\"\n                  precision={1}\n                />\n                <Statistic\n                  title=\"Positive\"\n                  value={((attribute['5'] + attribute['3']) * 100) / stats.total}\n                  suffix=\"%\"\n                  precision={1}\n                />\n                <Statistic\n                  title=\"Neutral\"\n                  value={((attribute['-1'] + attribute['1']) * 100) / stats.total}\n                  suffix=\"%\"\n                  precision={1}\n                  className=\"stat\"\n                />\n                <Statistic\n                  title=\"Negative\"\n                  value={((attribute['-5'] + attribute['-3']) * 100) / stats.total}\n                  suffix=\"%\"\n                  precision={1}\n                />\n                <Statistic\n                  title=\"Negative Five\"\n                  value={(attribute['-5'] * 100) / stats.total}\n                  suffix=\"%\"\n                  precision={1}\n                  className=\"stat\"\n                />\n              </Card>\n            );\n          })}\n        </Space>\n      </Card>\n    </Space>\n  );\n}\n","import { useState } from 'react';\nimport { doc, getDoc, setDoc } from 'firebase/firestore';\nimport { firestore } from 'services/firebase';\nimport type { AlienItemDict, LegacyAlienItemDict } from './types';\nimport { findLatestId, initialAttributeState } from './helpers';\nimport { cloneDeep, merge } from 'lodash';\nimport { FIRST_ID } from './constants';\nimport { QueryKey, UseMutateFunction, useMutation, useQuery, useQueryClient } from 'react-query';\nimport { useTDBaseUrl } from 'hooks/useTDBaseUrl';\nimport { App } from 'antd';\n\nexport function useItem(initialItem = FIRST_ID) {\n  const [itemId, setItemId] = useState(initialItem);\n\n  const previousItem = () => {\n    setItemId((cur) => {\n      return String(Number(cur) - 1);\n    });\n  };\n\n  const nextItem = () => {\n    setItemId((cur) => {\n      return String(Number(cur) + 1);\n    });\n  };\n\n  const goTo = (target: number | 'first' | 'last') => {\n    setItemId((cur) => {\n      if (target === 'first') {\n        return FIRST_ID;\n      }\n\n      if (target === 'last') {\n        return initialItem;\n      }\n\n      const curNum = Number(cur);\n      const result = target + curNum;\n      if (result > 0 && result <= Number(initialItem) + 1) {\n        return String(Number(cur) + target);\n      }\n\n      if (target < 0) {\n        return FIRST_ID;\n      }\n\n      return initialItem;\n    });\n  };\n\n  return {\n    itemId,\n    previousItem,\n    nextItem,\n    setItemId,\n    itemNumber: Number(itemId),\n    goTo,\n  };\n}\n\nexport type UseAlienItemDocumentReturnValue = {\n  isLoading: boolean;\n  isSuccess: boolean;\n  isError: boolean;\n  isSaving: boolean;\n  data: AlienItemDict;\n  save: UseMutateFunction<AlienItemDict, unknown, AlienItemDict, unknown>;\n  isDirty: boolean;\n  reload: () => void;\n  itemUtils: {\n    latestId: string;\n    create: (itemId: string) => void;\n    updateNameEN: (itemId: string, name: string) => void;\n    updateNamePT: (itemId: string, name: string) => void;\n    updateAttributeValue: (itemId: string, attributeId: string, value: number) => void;\n    updateNSFW: (itemId: string, value: boolean) => void;\n  };\n};\n\n/**\n * Handles the alien items document from Firestore.\n * @returns\n */\nexport function useAlienItemsDocument(): UseAlienItemDocumentReturnValue {\n  const queryClient = useQueryClient();\n  const { notification } = App.useApp();\n  const queryKey = 'data/alienItems';\n  const [data, setData] = useState<AlienItemDict>({});\n  const [isDirty, setIsDirty] = useState(false);\n\n  const baseUrl = useTDBaseUrl('tdr');\n\n  const {\n    isLoading: isLoadingTR,\n    isError: isTRError,\n    data: trData,\n    isSuccess: isSuccessTR,\n  } = useQuery<LegacyAlienItemDict>({\n    queryKey: 'td/alienItems',\n    queryFn: async () => {\n      const response = await fetch(`${baseUrl}/alien-items.json`);\n      return await response.json();\n    },\n  });\n\n  const {\n    // data: firebaseData = {},\n    isLoading: isLoadingFirestore,\n    isSuccess,\n    isError,\n    refetch: fetchItems,\n  } = useQuery<any, unknown, AlienItemDict, QueryKey>({\n    queryKey,\n    queryFn: async () => {\n      const docRef = doc(firestore, 'data/alienItems');\n      const querySnapshot = await getDoc(docRef);\n      return (querySnapshot.data() ?? {}) as AlienItemDict;\n    },\n    enabled: isSuccessTR,\n    onSuccess: (response) => {\n      notification.info({\n        message: 'Data loaded',\n        placement: 'bottomLeft',\n      });\n      const merged = merge({}, trData, response) as any;\n      // Remove hard\n      Object.values(merged).forEach((item: any) => {\n        if (!item.attributes.soft) {\n          const softVal = (item.attributes.hard ?? 0) * -1;\n          item.attributes.soft = softVal;\n        }\n        if (!item.attributes.solid) {\n          item.attributes.solid = 0;\n        }\n        if (!item.attributes.singular) {\n          item.attributes.singular = 0;\n        }\n\n        delete item.attributes.hard;\n        setData(merged);\n        if (typeof item.name === 'string') {\n          item.name = {\n            en: item.name,\n            pt: '',\n          };\n        }\n      });\n      // Make it dual language\n      setIsDirty(false);\n    },\n    onError: () => {\n      notification.error({\n        message: 'Error loading data',\n        placement: 'bottomLeft',\n      });\n    },\n  });\n\n  const {\n    isLoading: isMutating,\n    isError: isMutationError,\n    isSuccess: isSaved,\n    mutate,\n  } = useMutation<AlienItemDict, unknown, AlienItemDict, unknown>({\n    mutationKey: queryKey,\n    mutationFn: async (newData: AlienItemDict) => {\n      const docRef = doc(firestore, 'data/alienItems');\n      await setDoc(docRef, newData);\n      return newData;\n    },\n    onSuccess: (_, variables) => {\n      notification.success({\n        message: 'Saved',\n        placement: 'bottomLeft',\n      });\n      queryClient.setQueryData(queryKey, variables);\n      setIsDirty(false);\n    },\n  });\n\n  const latestId = String(findLatestId(data));\n\n  const createNewItem = (itemId: string) => {\n    setIsDirty(true);\n    setData((prevData) => ({\n      ...prevData,\n      [itemId]: {\n        id: itemId,\n        name: {\n          en: '',\n          pt: '',\n        },\n        attributes: cloneDeep(initialAttributeState),\n      },\n    }));\n  };\n\n  const updateItemNameEN = (itemId: string, name: string) => {\n    setIsDirty(true);\n    setData((prevData) => ({\n      ...prevData,\n      [itemId]: {\n        ...prevData[itemId],\n        name: {\n          pt: prevData[itemId].name.pt ?? '',\n          en: name,\n        },\n      },\n    }));\n  };\n\n  const updateItemNamePT = (itemId: string, name: string) => {\n    setIsDirty(true);\n    setData((prevData) => ({\n      ...prevData,\n      [itemId]: {\n        ...prevData[itemId],\n        name: {\n          en: prevData[itemId].name.en ?? '',\n          pt: name,\n        },\n      },\n    }));\n  };\n\n  const updateItemAttributeValue = (itemId: string, attributeId: string, value: number) => {\n    setIsDirty(true);\n    setData((prevData) => ({\n      ...prevData,\n      [itemId]: {\n        ...prevData[itemId],\n        attributes: {\n          ...prevData[itemId].attributes,\n          [attributeId]: value,\n        },\n      },\n    }));\n  };\n\n  const updateNSFW = (itemId: string, nsfw: boolean) => {\n    setIsDirty(true);\n    setData((prevData) => {\n      const copy = cloneDeep(prevData);\n      if (nsfw) {\n        copy[itemId].nsfw = true;\n      } else {\n        delete copy[itemId].nsfw;\n      }\n      return copy;\n    });\n  };\n\n  return {\n    isLoading: isLoadingTR || isLoadingFirestore,\n    isError: isTRError || isError || isMutationError,\n    isSuccess: isSuccess || isSaved,\n    isSaving: isMutating,\n    data,\n    save: mutate,\n    isDirty,\n    reload: fetchItems,\n    itemUtils: {\n      latestId,\n      create: createNewItem,\n      updateNameEN: updateItemNameEN,\n      updateNamePT: updateItemNamePT,\n      updateAttributeValue: updateItemAttributeValue,\n      updateNSFW,\n    },\n  };\n}\n","import { Radio, RadioChangeEvent } from 'antd';\n\ntype AttributeLevelRadioGroupProps = {\n  value: number;\n  onChange: (e: RadioChangeEvent) => void;\n};\n\nexport function AttributeLevelRadioGroup({ value, onChange }: AttributeLevelRadioGroupProps) {\n  return (\n    <Radio.Group value={value} onChange={onChange} optionType=\"button\" buttonStyle=\"solid\">\n      <Radio.Button type=\"primary\" value={-5}>\n        -5\n      </Radio.Button>\n      <Radio.Button value={-3}>-3</Radio.Button>\n      <Radio.Button value={-1}>-1</Radio.Button>\n      <Radio.Button\n        value={0}\n        style={{\n          backgroundColor: value === 0 ? 'red' : 'white',\n        }}\n      >\n        0\n      </Radio.Button>\n      <Radio.Button value={1}>1</Radio.Button>\n      <Radio.Button value={3}>3</Radio.Button>\n      <Radio.Button value={5}>5</Radio.Button>\n    </Radio.Group>\n  );\n}\n","import { Badge, Button, Card, Modal, Select, Space, Tag, Typography } from 'antd';\nimport clsx from 'clsx';\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { get, orderBy } from 'lodash';\nimport { useMemo, useState } from 'react';\n\nimport { ATTRIBUTES } from './constants';\nimport { checkCriteria } from './helpers';\n\nimport type { Attribute, Weight } from './types';\nimport { useClassifier } from './ClassifierContext';\nimport { TransparentButton } from 'components/buttons';\nimport { useItem } from './hooks';\nimport { AttributeLevelRadioGroup } from './AttributeLevelRadioGroup';\nimport { TextHighlight } from 'components/text';\n\nconst SORTED_ATTRIBUTES = orderBy(Object.values(ATTRIBUTES), ['name.en'], ['asc']);\n\nexport function Grouping() {\n  const { data, isDirty, isSaving, save, itemUtils } = useClassifier();\n  const { itemId, setItemId } = useItem('');\n  const [activeAttribute, setActiveAttribute] = useState(SORTED_ATTRIBUTES[0]?.id ?? 'alive');\n  const [sorting, setSorting] = useState('id');\n  const [criteria, setCriteria] = useState('>1');\n  const [show, setShow] = useState('all');\n\n  const itemsList = useMemo(() => {\n    return orderBy(\n      Object.values(data),\n      [(obj) => (sorting === 'id' ? Number(obj.id) : get(obj, sorting))],\n      ['asc']\n    );\n  }, [data, sorting]);\n\n  const selection: BooleanDictionary = useMemo(() => {\n    return itemsList.reduce((acc: BooleanDictionary, item) => {\n      if (checkCriteria(item, activeAttribute as Attribute, criteria)) {\n        acc[item.id] = true;\n      }\n      return acc;\n    }, {});\n  }, [itemsList, activeAttribute, criteria]);\n\n  const handleOpenItem = (id: string) => {\n    setItemId(id);\n  };\n\n  const activeItem = data[itemId];\n\n  return (\n    <Space className=\"container classifier\" direction=\"vertical\">\n      <Card\n        title=\"Grouping\"\n        extra={\n          isDirty && (\n            <Button\n              type=\"primary\"\n              onClick={() => save(data)}\n              loading={isSaving}\n              disabled={isSaving || !isDirty}\n            >\n              Save\n            </Button>\n          )\n        }\n      >\n        <Filters\n          selection={selection}\n          activeAttribute={activeAttribute}\n          setActiveAttribute={setActiveAttribute}\n          sorting={sorting}\n          setSorting={setSorting}\n          criteria={criteria}\n          setCriteria={setCriteria}\n          show={show}\n          setShow={setShow}\n        />\n\n        <Space wrap>\n          {itemsList.map((item) => {\n            if (show === 'selected' && !selection[item.id]) {\n              return null;\n            }\n\n            if (show === 'non-selected' && selection[item.id]) {\n              return null;\n            }\n\n            return (\n              <TransparentButton\n                key={item.id}\n                className=\"classifier__grouping-item\"\n                onClick={() => handleOpenItem(item.id)}\n              >\n                <Badge count={Number(item.id)} size=\"small\" color=\"cyan\" overflowCount={1000}>\n                  <ItemCard\n                    id={item.id}\n                    width={100}\n                    className={clsx(selection[item.id] && 'classifier__active-item')}\n                  />\n                </Badge>\n                <span className=\"classifier__grouping-name\">\n                  {typeof item?.name?.en === 'string' ? item?.name?.en : '?'}\n                </span>\n              </TransparentButton>\n            );\n          })}\n        </Space>\n\n        <Modal\n          title=\"Item Quick Edit\"\n          open={Boolean(itemId)}\n          onCancel={() => setItemId('')}\n          okButtonProps={{ style: { display: 'none' } }}\n        >\n          {Boolean(activeItem) && (\n            <div className=\"quick-edit-modal\">\n              <ItemCard id={activeItem.id} width={100} />\n              <div>\n                <Typography.Title level={4}>\n                  <TextHighlight>{activeAttribute}</TextHighlight>- {activeItem.name.en || '?'} |{' '}\n                  {activeItem.name.pt || '?'} {activeItem.nsfw && <Tag color=\"magenta\">NSFW</Tag>}\n                </Typography.Title>\n                <AttributeLevelRadioGroup\n                  value={activeItem.attributes[activeAttribute as Attribute]}\n                  onChange={(e) => {\n                    itemUtils.updateAttributeValue(itemId, activeAttribute, e.target.value as Weight);\n                    setItemId('');\n                  }}\n                />\n              </div>\n            </div>\n          )}\n        </Modal>\n      </Card>\n    </Space>\n  );\n}\n\ntype FiltersProps = {\n  selection: BooleanDictionary;\n  activeAttribute: string;\n  setActiveAttribute: (e: string) => void;\n  sorting: string;\n  setSorting: (e: string) => void;\n  criteria: string;\n  setCriteria: (e: string) => void;\n  show: string;\n  setShow: (e: string) => void;\n};\n\nfunction Filters({\n  selection,\n  activeAttribute,\n  setActiveAttribute,\n  sorting,\n  setSorting,\n  criteria,\n  setCriteria,\n  show,\n  setShow,\n}: FiltersProps) {\n  return (\n    <Space wrap className=\"margin\">\n      <Space size=\"small\">\n        <span>Attribute</span>\n        <Select\n          onChange={(e) => setActiveAttribute(e)}\n          value={activeAttribute}\n          size=\"small\"\n          style={{ minWidth: '15ch' }}\n        >\n          {SORTED_ATTRIBUTES.map((entry) => (\n            <Select.Option key={entry.id} value={entry.id}>\n              {entry.name.en}\n            </Select.Option>\n          ))}\n        </Select>\n      </Space>\n\n      <Space size=\"small\">\n        <span>Sorting</span>\n        <Select onChange={(e) => setSorting(e)} value={sorting} size=\"small\" style={{ minWidth: '15ch' }}>\n          <Select.Option value=\"id\">id</Select.Option>\n          <Select.Option value=\"name.en\">name</Select.Option>\n        </Select>\n      </Space>\n\n      <Space size=\"small\">\n        <span>Criteria</span>\n        <Select onChange={(e) => setCriteria(e)} value={criteria} size=\"small\" style={{ minWidth: '15ch' }}>\n          <Select.Option value=\">1\">Very Positive</Select.Option>\n          <Select.Option value=\">0\">Positive</Select.Option>\n          <Select.Option value=\"5\">5</Select.Option>\n          <Select.Option value=\"3\">3</Select.Option>\n          <Select.Option value=\"1\">1</Select.Option>\n          <Select.Option value=\"-1\">-1</Select.Option>\n          <Select.Option value=\"-3\">3</Select.Option>\n          <Select.Option value=\"-5\">-5</Select.Option>\n          <Select.Option value=\"<0>\">Negative</Select.Option>\n          <Select.Option value=\"<1>\">Very Negative</Select.Option>\n        </Select>\n      </Space>\n\n      <Space size=\"small\">\n        <span>Show</span>\n        <Select onChange={(e) => setShow(e)} value={show} size=\"small\" style={{ minWidth: '15ch' }}>\n          <Select.Option value=\"all\">All</Select.Option>\n          <Select.Option value=\"selected\">Selected Only</Select.Option>\n          <Select.Option value=\"non-selected\">Non-Selected Only</Select.Option>\n        </Select>\n      </Space>\n\n      <Space size=\"small\">\n        <span>Selected</span>\n        <Badge count={Object.keys(selection).length} color=\"cyan\" overflowCount={1000} />\n      </Space>\n    </Space>\n  );\n}\n","import { Button, Divider, Space } from 'antd';\n\nimport { FIRST_ID, LAST_ID } from './constants';\nimport { UseAlienItemDocumentReturnValue } from './hooks';\n\nimport type { AlienItemDict } from './types';\nimport { downloadObjectAsFile } from './helpers';\n\ntype ControlsProps = {\n  itemId: string;\n  itemNumber: number;\n  previousItem: () => void;\n  nextItem: () => void;\n  goTo: (target: number | 'first' | 'last') => void;\n  isSaving: boolean;\n  save: UseAlienItemDocumentReturnValue['save'];\n  latestId: string;\n  data: AlienItemDict;\n  isDirty: boolean;\n};\n\nexport function Controls({\n  itemId,\n  itemNumber,\n  previousItem,\n  nextItem,\n  goTo,\n  save,\n  isSaving,\n  data,\n  latestId,\n  isDirty,\n}: ControlsProps) {\n  return (\n    <Space className=\"classifier__navigation\" wrap>\n      <Space wrap>\n        <Button type=\"primary\" onClick={() => save(data)} loading={isSaving} disabled={isSaving || !isDirty}>\n          Save\n        </Button>\n      </Space>\n      <Space wrap>\n        <Button onClick={() => goTo('first')} disabled={itemId === FIRST_ID}>\n          First\n        </Button>\n        <Button onClick={() => goTo(-10)} disabled={itemNumber <= 10}>\n          Previous 10\n        </Button>\n        <Button onClick={previousItem} disabled={itemId === FIRST_ID}>\n          Previous\n        </Button>\n        <Divider type=\"vertical\" />\n        <Button onClick={nextItem} disabled={itemId === LAST_ID}>\n          Next\n        </Button>\n        <Button onClick={() => goTo(10)} disabled={itemNumber >= Number(LAST_ID) - 10}>\n          Next 10\n        </Button>\n        <Button onClick={() => goTo('last')} disabled={itemNumber >= Number(latestId) - 1}>\n          Latest\n        </Button>\n      </Space>\n      <Space wrap>\n        <Button\n          onClick={() => downloadObjectAsFile(data, 'alien-items')}\n          loading={isSaving}\n          disabled={isSaving}\n        >\n          Download JSON\n        </Button>\n      </Space>\n    </Space>\n  );\n}\n","import { Input, Space, Switch } from 'antd';\nimport { ItemCard } from 'components/cards/ItemCard';\n\nimport type { ItemId, AlienItem } from './types';\n\ntype CurrentItemsProps = {\n  itemId: ItemId;\n  updateNameEN: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  updateNamePT: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  activeItem: AlienItem;\n  updateNSFW: any;\n};\n\nexport function CurrentItem({\n  itemId,\n  updateNameEN,\n  updateNamePT,\n  activeItem,\n  updateNSFW,\n}: CurrentItemsProps) {\n  return (\n    <Space className=\"classifier__item\" direction=\"vertical\">\n      <Input placeholder=\"Type name\" onChange={updateNameEN} value={activeItem.name.en} />\n      <Input placeholder=\"Type nome\" onChange={updateNamePT} value={activeItem.name.pt} />\n      <ItemCard id={itemId} width={100} />\n      <Switch\n        checkedChildren=\"NSFW\"\n        unCheckedChildren=\"SFW\"\n        onChange={updateNSFW}\n        checked={activeItem?.nsfw}\n      />\n    </Space>\n  );\n}\n","import { AutoComplete, Space } from 'antd';\n\nimport type { AlienItemDict, ItemId } from './types';\n\ntype SearchProps = {\n  data: AlienItemDict;\n  setItemId: React.Dispatch<React.SetStateAction<string>>;\n};\n\nexport function Search({ data, setItemId }: SearchProps) {\n  const namesDict = Object.values(data).reduce((acc: Record<string, ItemId>, entry) => {\n    acc[entry.name.en] = entry.id;\n    return acc;\n  }, {});\n  const names = Object.keys(namesDict).map((name) => ({ value: name }));\n\n  const onSelect = (name: string) => {\n    if (namesDict[name]) {\n      setItemId(namesDict[name]);\n    }\n  };\n\n  return (\n    <Space>\n      <AutoComplete\n        options={names}\n        style={{ width: 150 }}\n        onSelect={onSelect}\n        placeholder=\"Go to...\"\n        filterOption={(inputValue, option) =>\n          option!.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n        }\n      />\n    </Space>\n  );\n}\n","import { CheckCircleFilled, CloseCircleOutlined } from '@ant-design/icons';\n\ntype VerifierProps = {\n  label: string;\n  value: boolean;\n};\n\nexport function Verifier({ label, value }: VerifierProps) {\n  return (\n    <div className=\"classifier__verifier\">\n      {label}:{' '}\n      {value ? (\n        <CheckCircleFilled style={{ color: 'green' }} />\n      ) : (\n        <CloseCircleOutlined style={{ color: 'red' }} />\n      )}\n    </div>\n  );\n}\n","import { Card, Space } from 'antd';\nimport { Loading } from 'components/loaders';\nimport { useEffect } from 'react';\n\nimport { useClassifier } from './ClassifierContext';\nimport { ATTRIBUTES } from './constants';\nimport { Controls } from './Controls';\nimport { CurrentItem } from './CurrentItem';\nimport { countNonZeroAttributes, initialAttributeState, validateItem } from './helpers';\nimport { useItem } from './hooks';\nimport { Search } from './Search';\nimport { Verifier } from './Verifier';\n\nimport type { Attribute, Weight } from './types';\nimport { AttributeLevelRadioGroup } from './AttributeLevelRadioGroup';\n\nexport function ClassifyingCard() {\n  const { data, save, isSaving, itemUtils, isDirty } = useClassifier();\n  const { itemId, previousItem, nextItem, itemNumber, goTo, setItemId } = useItem(itemUtils.latestId);\n\n  const current = data[itemId];\n\n  useEffect(() => {\n    if (!current) {\n      itemUtils.create(itemId);\n    }\n  }, [current]); // eslint-disable-line\n\n  const updateNameEN = (e: React.ChangeEvent<HTMLInputElement>) => {\n    itemUtils.updateNameEN(itemId, e.target.value.toLowerCase());\n  };\n\n  const updateNamePT = (e: React.ChangeEvent<HTMLInputElement>) => {\n    itemUtils.updateNamePT(itemId, e.target.value.toLowerCase());\n  };\n\n  const updateAttributeValue = (attributeId: string, value: number) => {\n    itemUtils.updateAttributeValue(itemId, attributeId, value as Weight);\n  };\n\n  const updateNSFW = (value: boolean) => {\n    itemUtils.updateNSFW(itemId, value);\n  };\n\n  if (!current) {\n    return (\n      <Space className=\"space-container\">\n        <Loading />\n      </Space>\n    );\n  }\n\n  const validation = validateItem(current, initialAttributeState);\n\n  const currentItemComponent = (\n    <CurrentItem\n      itemId={itemId}\n      activeItem={current}\n      updateNameEN={updateNameEN}\n      updateNamePT={updateNamePT}\n      updateNSFW={updateNSFW}\n    />\n  );\n\n  return (\n    <Space className=\"container classifier\" direction=\"vertical\">\n      <Controls\n        itemId={itemId}\n        itemNumber={itemNumber}\n        previousItem={previousItem}\n        nextItem={nextItem}\n        goTo={goTo}\n        isSaving={isSaving}\n        save={save}\n        latestId={itemUtils.latestId}\n        data={data}\n        isDirty={isDirty}\n      />\n\n      <Card\n        title={`Classifying ${itemId} - ${current.name.en} - (${countNonZeroAttributes(current)}/30)`}\n        extra={<Search setItemId={setItemId} data={data} />}\n      >\n        <Space className=\"classifier__grid\">\n          {currentItemComponent}\n\n          <Space className=\"classifier__attributes\" wrap>\n            {Object.values(ATTRIBUTES).map((entry) => {\n              return (\n                <Space className=\"classifier__entry\" direction=\"vertical\" key={entry.id}>\n                  <div className=\"title\">{`${entry.name.en} - ${entry.name.pt}`}</div>\n                  <AttributeLevelRadioGroup\n                    value={current.attributes[entry.id as Attribute]}\n                    onChange={(e) => updateAttributeValue(entry.id, e.target.value)}\n                  />\n                </Space>\n              );\n            })}\n          </Space>\n\n          {currentItemComponent}\n        </Space>\n        <Space className=\"classifier__verifiers\">\n          <Verifier label=\"Has name\" value={validation.hasName} />\n          <Verifier label=\"Has no zeroes\" value={validation.hasNoZeroes} />\n          <Verifier label=\"Has positive values\" value={validation.hasPositive} />\n          <Verifier label=\"Has at least one 5\" value={validation.hasFive} />\n        </Space>\n      </Card>\n\n      <Controls\n        itemId={itemId}\n        itemNumber={itemNumber}\n        previousItem={previousItem}\n        nextItem={nextItem}\n        goTo={goTo}\n        isSaving={isSaving}\n        save={save}\n        latestId={itemUtils.latestId}\n        data={data}\n        isDirty={isDirty}\n      />\n    </Space>\n  );\n}\n","import { Segmented } from 'antd';\nimport { PageError } from 'components/errors';\nimport { LoadingPage } from 'components/loaders';\nimport { isEmpty } from 'lodash';\nimport { useEffect, useState } from 'react';\nimport { useTitle } from 'react-use';\n\nimport { DevHeader } from '../DevHeader';\n\nimport { StatsCard } from './StatsCard';\nimport { Grouping } from './Grouping';\nimport { ClassifyingCard } from './ClassifyingCard';\nimport { ClassifierProvider, useClassifier } from './ClassifierContext';\n\nimport './ItemClassifier.scss';\nimport { useQueryParams } from 'hooks/useQueryParams';\n\nfunction ItemClassifier() {\n  const { isLoading, isError, data } = useClassifier();\n  const [view, setView] = useState('default');\n  const qp = useQueryParams({ view: 'default' });\n\n  useEffect(() => {\n    setView(qp.queryParams.view ?? 'default');\n  }, [qp.queryParams.view]);\n\n  if (isEmpty(data) && isLoading) {\n    return <LoadingPage />;\n  }\n\n  if (isError) {\n    return <PageError message=\"Something is wrong\" />;\n  }\n\n  const segments = [\n    { label: 'Classifier', value: 'default', disabled: view === 'default' },\n    { label: 'Grouping', value: 'grouping', disabled: view === 'grouping' },\n    { label: 'Stats', value: 'stats', disabled: view === 'stats' },\n  ];\n\n  return (\n    <div>\n      <DevHeader\n        title=\"Classifier\"\n        extra={<Segmented options={segments} defaultValue={view} onChange={(v: any) => qp.add('view', v)} />}\n      />\n\n      {view === 'default' && <ClassifyingCard />}\n      {view === 'grouping' && <Grouping />}\n      {view === 'stats' && <StatsCard />}\n    </div>\n  );\n}\n\nfunction ItemClassifierPage() {\n  useTitle('Items Classifier | Dev | Tarde Divertida');\n\n  return (\n    <ClassifierProvider>\n      <ItemClassifier />\n    </ClassifierProvider>\n  );\n}\n\nexport default ItemClassifierPage;\n","import { Segmented } from 'antd';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nexport function DevMenu() {\n  const { pathname } = useLocation();\n  const navigate = useNavigate();\n\n  const options = [\n    { label: 'Home', value: '/', disabled: pathname === '/' },\n    { label: 'Hub', value: '/hub', disabled: pathname === '/hub' },\n    { label: 'Icons', value: '/dev/icons', disabled: pathname === '/dev/icons' },\n    { label: 'Colors', value: '/dev/colors', disabled: pathname === '/dev/colors' },\n    { label: 'Sprites', value: '/dev/sprites', disabled: pathname === '/dev/sprites' },\n    { label: 'Resources', value: '/dev/resources', disabled: pathname === '/dev/resources' },\n    { label: 'Playground', value: '/dev/playground', disabled: pathname === '/dev/playground' },\n    { label: 'Showcase', value: '/showcase', disabled: pathname === '/showcase' },\n  ];\n\n  const onNavigate = (path: any) => {\n    navigate(path);\n  };\n\n  return <Segmented options={options} defaultValue={pathname} onChange={onNavigate} />;\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { Space } from 'antd';\n// Components\nimport { DevMenu } from './DevMenu';\n\ntype DevHeaderProps = {\n  title: ReactNode;\n  subTitle?: ReactNode;\n  extra?: ReactNode;\n};\n\nexport function DevHeader({ title, subTitle, extra }: DevHeaderProps) {\n  return (\n    <header className=\"dev-header\">\n      <div className=\"dev-header__heading\">\n        <div className=\"dev-header__left\">\n          <span className=\"dev-header__title\">{title} </span>\n          <span className=\"dev-header__subtitle\">{subTitle}</span>\n        </div>\n        <div className=\"dev-header__extra\">\n          <Space className=\"dev-header__extra-space\" wrap>\n            {extra}\n          </Space>\n          <DevMenu />\n        </div>\n      </div>\n    </header>\n  );\n}\n"],"names":["FixedMenuButton","type","position","content","className","open","rest","clsx","placement","trigger","FixedMenuButtonContent","icon","label","showLabel","onClick","buttonProps","useState","isActive","setActive","hasLabel","Boolean","useEffectOnce","shape","size","onMouseOver","onMouseLeave","undefined","ghost","TimedButton","duration","children","onExpire","hideTimer","timeLeft","useCountdown","autoStart","disabled","timeClass","TransparentButton","active","activeClass","hoverType","Instruction","white","contained","fullWidth","baseClass","RoundsLeftInstruction","round","left","total","current","forceLastRound","pt","en","pluralize","TextHighlight","Title","level","align","timer","useTimer","expiryTimestamp","inNSeconds","minutes","seconds","useQueryParams","defaultParams","useSearchParams","searchParams","setSearchParams","add","key","value","delete","set","String","remove","useEffect","Object","entries","forEach","has","queryParams","toString","split","reduce","qp","entry","useTDBaseUrl","kind","base","process","ATTRIBUTES","alive","id","name","beautiful","big","bright","clothes","danger","defense","fast","flat","flight","food","heavy","human","knowledge","liquid","long","machine","metal","odor","old","plant","power","sharp","singular","soft","solid","sound","tool","valuable","warm","weapon","FIRST_ID","countNonZeroAttributes","item","count","values","attributes","initialAttributeState","keys","acc","ClassifierContext","createContext","isLoading","isSuccess","isError","isSaving","data","save","isDirty","reload","itemUtils","latestId","create","updateNameEN","updateNamePT","updateAttributeValue","updateNSFW","ClassifierProvider","queryClient","useQueryClient","notification","App","queryKey","setData","setIsDirty","baseUrl","useQuery","queryFn","fetch","response","json","isLoadingTR","isTRError","trData","isSuccessTR","docRef","doc","firestore","getDoc","querySnapshot","enabled","onSuccess","info","message","merged","merge","softVal","hard","onError","error","isLoadingFirestore","fetchItems","refetch","useMutation","mutationKey","mutationFn","newData","setDoc","_","variables","success","setQueryData","isMutating","isMutationError","isSaved","mutate","orderedNumberedIds","map","Number","sort","a","b","length","i","findLatestId","Provider","itemId","prevData","cloneDeep","attributeId","nsfw","copy","useClassifier","useContext","StatsCard","stats","useMemo","attributeCounts","positiveAttributes","negativeAttributes","positiveFives","negativeFives","index","has5","hasMinus5","attribute","weight","totalItems","Math","positiveAttributesMean","mean","negativeAttributesMean","getStats","sorting","setSorting","attributeList","orderBy","obj","direction","title","wrap","suffix","precision","onChange","e","style","minWidth","useItem","initialItem","setItemId","previousItem","cur","nextItem","goTo","target","curNum","result","itemNumber","AttributeLevelRadioGroup","optionType","buttonStyle","backgroundColor","SORTED_ATTRIBUTES","Grouping","activeAttribute","setActiveAttribute","criteria","setCriteria","show","setShow","itemsList","get","selection","checkCriteria","activeItem","extra","loading","Filters","color","overflowCount","ItemCard","width","onCancel","okButtonProps","display","Controls","filename","blob","Blob","JSON","stringify","anchorElement","document","createElement","href","window","URL","createObjectURL","download","click","revokeObjectURL","downloadObjectAsFile","CurrentItem","placeholder","checkedChildren","unCheckedChildren","checked","Search","namesDict","names","options","onSelect","filterOption","inputValue","option","toUpperCase","indexOf","Verifier","CheckCircleFilled","CloseCircleOutlined","ClassifyingCard","validation","allAttributes","hasName","hasFive","includes","hasNoZeroes","hasPositive","some","v","validateItem","currentItemComponent","toLowerCase","ItemClassifier","view","setView","isEmpty","segments","DevHeader","defaultValue","useTitle","DevMenu","pathname","useLocation","navigate","useNavigate","path","subTitle"],"sourceRoot":""}