{"version":3,"file":"static/js/page-hub.2d606bc2.chunk.js","mappings":"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","sources":["components/auth/LogoutButton.tsx","components/general/GameTags.tsx","hooks/useDevFeatures.ts","pages/Dev/DevMenu.tsx","pages/Dev/DevHeader.tsx","pages/Hub/components/GameCustomizations.tsx","pages/Hub/components/CreateGameModal.tsx","hooks/useRedirectToNewGame.ts","pages/Hub/components/GameCard.tsx","pages/Hub/components/DevEmulatorAlert.tsx","pages/Hub/components/Filters.tsx","pages/Hub/Hub.tsx"],"sourcesContent":["import { useMutation } from '@tanstack/react-query';\nimport { useNavigate } from 'react-router-dom';\n// Ant Design Resources\nimport { App, Button, ButtonProps, Popconfirm } from 'antd';\n// Services\nimport { signOut } from 'services/firebase';\n// Components\nimport { Translate } from 'components/language';\n\nexport function LogoutButton(props: ButtonProps) {\n  const navigate = useNavigate();\n  const { message } = App.useApp();\n\n  const { isPending, mutate } = useMutation({\n    mutationKey: ['sign-out'],\n    mutationFn: async () => await signOut(),\n    onSuccess: () => {\n      navigate('/');\n    },\n    onError: (error: any) => {\n      message.error(`Something went wrong: ${JSON.stringify(error, null, 2)}`);\n    },\n  });\n\n  return (\n    <Popconfirm\n      title={<Translate pt=\"Tem certeza que quer deslogar?\" en=\"Are you sure you want to log out?\" />}\n      onConfirm={() => mutate()}\n      key=\"logout-button\"\n    >\n      <Button danger ghost {...props} loading={isPending}>\n        Logout\n      </Button>\n    </Popconfirm>\n  );\n}\n","// Ant Design Resources\nimport { Space, SpaceProps, Tag } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { TAG_DICT } from 'utils/constants';\n\nconst sortTags = (tags: string[]) => {\n  const sortedTags: string[] = [];\n\n  tags.forEach((tag) => {\n    if (TAG_DICT?.[tag]?.index !== undefined) {\n      sortedTags[TAG_DICT[tag].index] = tag;\n    } else if (sortedTags.length < 18) {\n      sortedTags[18] = tag;\n    } else {\n      sortedTags.push(tag);\n    }\n  });\n\n  return sortedTags.filter((v) => Boolean(v));\n};\n\ntype GameTagsProps = {\n  tags: string[];\n  gameCode: GameCode;\n} & SpaceProps;\n\nexport function GameTags({ tags, gameCode, ...rest }: GameTagsProps) {\n  const { language } = useLanguage();\n  const sortedTags = sortTags(tags);\n\n  return (\n    <Space wrap {...rest}>\n      {sortedTags.map((tag) => (\n        <Tag key={`${gameCode}-${tag}`} color={TAG_DICT[tag]?.color}>\n          {TAG_DICT[tag]?.label[language]}\n        </Tag>\n      ))}\n    </Space>\n  );\n}\n","import { isDevEnv } from '../utils/helpers';\nimport { useGlobalState } from './useGlobalState';\n\n/**\n * Controls debug and dev environment\n * @returns\n */\nexport function useDevFeatures() {\n  const [isDebugEnabled, setIsDebugEnabled] = useGlobalState('isDebugEnabled');\n\n  const toggleDevFeatures = () => {\n    setIsDebugEnabled((s) => !s);\n  };\n\n  return {\n    isDevEnv,\n    isDebugEnabled,\n    toggleDevFeatures,\n  };\n}\n","import { Segmented } from 'antd';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nexport function DevMenu() {\n  const { pathname } = useLocation();\n  const navigate = useNavigate();\n\n  const options = [\n    { label: 'Home', value: '/', disabled: pathname === '/' },\n    { label: 'Hub', value: '/hub', disabled: pathname === '/hub' },\n    { label: 'Icons', value: '/dev/icons', disabled: pathname === '/dev/icons' },\n    { label: 'Colors', value: '/dev/colors', disabled: pathname === '/dev/colors' },\n    { label: 'Sprites', value: '/dev/sprites', disabled: pathname === '/dev/sprites' },\n    { label: 'Playground', value: '/dev/playground', disabled: pathname === '/dev/playground' },\n    { label: 'Showcase', value: '/showcase', disabled: pathname === '/showcase' },\n  ];\n\n  const onNavigate = (path: any) => {\n    navigate(path);\n  };\n\n  return <Segmented options={options} defaultValue={pathname} onChange={onNavigate} />;\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { Space } from 'antd';\n// Components\nimport { DevMenu } from './DevMenu';\n\ntype DevHeaderProps = {\n  title: ReactNode;\n  subTitle?: ReactNode;\n  extra?: ReactNode;\n};\n\nexport function DevHeader({ title, subTitle, extra }: DevHeaderProps) {\n  return (\n    <header className=\"dev-header\">\n      <div className=\"dev-header__heading\">\n        <div className=\"dev-header__left\">\n          <span className=\"dev-header__title\">{title} </span>\n          <span className=\"dev-header__subtitle\">{subTitle}</span>\n        </div>\n        <div className=\"dev-header__extra\">\n          <Space className=\"dev-header__extra-space\" wrap>\n            {extra}\n          </Space>\n          <DevMenu />\n        </div>\n      </div>\n    </header>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Typography, Switch, Radio, Checkbox } from 'antd';\n// Types\nimport type { GameInfo, GameInfoOption } from 'types/game-info';\n// Adapters\n// Hooks\n// Constants\n// Components\nimport { Translate } from 'components/language';\n\ntype GameCustomizationsProps = {\n  options?: GameInfo['options'];\n  disabled: boolean;\n  onChangeOptions: GenericFunction;\n  selectedOptions: PlainObject;\n};\n\nexport function GameCustomizations({\n  options = [],\n  disabled,\n  onChangeOptions,\n  selectedOptions,\n}: GameCustomizationsProps) {\n  if (!options) {\n    return (\n      <div className=\"create-game-modal-options create-game-modal-options__no-options\">\n        <Typography.Text>\n          <Translate pt=\"Este jogo não possui customizações\" en=\"This game does not support customizations\" />\n        </Typography.Text>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"create-game-modal-options\">\n      <Typography.Title level={5} className=\"create-game-modal-options__title\">\n        <Translate pt=\"Opções:\" en=\"Options:\" />\n      </Typography.Title>\n      <div className=\"create-game-modal-options__list\">\n        {(options ?? []).map((option) => (\n          <Typography.Paragraph\n            key={`option-${option.label}`}\n            className={clsx(\n              'create-game-modal-options__option',\n              option.disabled && 'create-game-modal-options__option--disabled'\n            )}\n          >\n            <div className=\"create-game-modal-options__label\">\n              <span>{option.label}</span>\n              {option.kind !== 'switch' && Boolean(option.description) && (\n                <div className=\"create-game-modal-options__option-description\">{option.description}</div>\n              )}\n            </div>\n\n            {option.kind === 'switch' && (\n              <SwitchOptions\n                option={option}\n                disabled={disabled}\n                onChangeOptions={onChangeOptions}\n                selectedOptions={selectedOptions}\n              />\n            )}\n            {option.kind === 'radio' && (\n              <RadioOptions\n                option={option}\n                disabled={disabled}\n                onChangeOptions={onChangeOptions}\n                selectedOptions={selectedOptions}\n              />\n            )}\n            {option.kind === 'checkbox' && (\n              <CheckboxOptions\n                option={option}\n                disabled={disabled}\n                onChangeOptions={onChangeOptions}\n                selectedOptions={selectedOptions}\n              />\n            )}\n\n            {option.kind === 'switch' && Boolean(option.description) && (\n              <span className=\"create-game-modal-options__option-description\">{option.description}</span>\n            )}\n          </Typography.Paragraph>\n        ))}\n      </div>\n    </div>\n  );\n}\n\ntype OptionProps = {\n  option: GameInfoOption;\n  disabled?: boolean;\n  onChangeOptions: GenericFunction;\n  selectedOptions: PlainObject;\n};\n\nfunction SwitchOptions({ option, disabled, onChangeOptions, selectedOptions }: OptionProps) {\n  return (\n    <>\n      <span\n        className={clsx(\n          'create-game-modal-options__off',\n          !selectedOptions[option.key] && 'create-game-modal-options--selected'\n        )}\n      >\n        {option?.values[0].label ?? ''}\n      </span>\n      <Switch disabled={disabled || option.disabled} onChange={(e) => onChangeOptions(option.key, e)} />\n      <span\n        className={clsx(\n          'create-game-modal-options__on',\n          selectedOptions[option.key] && 'create-game-modal-options--selected'\n        )}\n      >\n        {option?.values[1].label ?? ''}\n      </span>\n    </>\n  );\n}\n\nfunction RadioOptions({ option, disabled, onChangeOptions }: OptionProps) {\n  return (\n    <Radio.Group\n      disabled={disabled || option.disabled}\n      onChange={(e) => onChangeOptions(option.key, e.target.value)}\n      defaultValue={option.values[0].value}\n      className=\"create-game-modal-options__selections\"\n    >\n      {option.values.map((value) => (\n        <Radio key={String(value.value)} value={value.value}>\n          {value.label}\n        </Radio>\n      ))}\n    </Radio.Group>\n  );\n}\n\nfunction CheckboxOptions({ option, disabled, onChangeOptions }: OptionProps) {\n  return (\n    <Checkbox.Group\n      disabled={disabled || option.disabled}\n      onChange={(v) => onChangeOptions(option.key, v)}\n      className=\"create-game-modal-options__selections\"\n      options={option.values}\n    />\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useCopyToClipboard } from 'react-use';\nimport { orderBy } from 'lodash';\n// Ant Design Resources\nimport { Image, Modal, Button, Divider, Space, Alert, App } from 'antd';\n// Types\nimport type { GameInfo } from 'types/game-info';\n// Adapters\nimport { ADMIN_API, ADMIN_API_ACTIONS } from 'services/adapters';\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useRedirectToNewGame } from 'hooks/useRedirectToNewGame';\n// Constants\nimport { PUBLIC_URL } from 'utils/constants';\n// Components\nimport { LanguageSwitch, Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\nimport { Loading } from 'components/loaders';\nimport { useGlobalLocalStorage } from 'hooks/useGlobalLocalStorage';\nimport { GameCustomizations } from './GameCustomizations';\n\nconst updateLocal24hGameIds = (latestGameIds: NumberDictionary, newId: GameId) => {\n  const now = Date.now();\n  const past24Hours = now - 1000 * 60 * 60 * 24;\n  const cleanedUpIds = Object.entries(latestGameIds ?? {}).reduce((acc: PlainObject, [key, timestamp]) => {\n    if (timestamp > past24Hours) {\n      acc[key] = timestamp;\n    }\n    return acc;\n  }, {});\n  return {\n    ...cleanedUpIds,\n    [newId]: now,\n  };\n};\n\nconst latestGameBeforeNewOne = (latestGameIds: NumberDictionary) => {\n  const idsObjectList = Object.entries(latestGameIds).map(([gameId, createdAt]) => ({ gameId, createdAt }));\n  if (idsObjectList.length < 2) {\n    return null;\n  }\n\n  const orderedList = orderBy(idsObjectList, 'createdAt', 'desc');\n  const twoHoursInMilliseconds = 2 * 60 * 60 * 1000; // 2 hours\n  const currentMilliseconds = Date.now();\n\n  // Check if game is too old\n  if (orderedList[1].createdAt - currentMilliseconds > twoHoursInMilliseconds) {\n    return null;\n  }\n\n  return orderedList[1].gameId;\n};\n\nconst getOptionsDefaultValues = (\n  options: GameInfo['options']\n): Record<string, boolean | string | string[]> => {\n  return (\n    options?.reduce((acc: Record<string, boolean | string | string[]>, option) => {\n      if (option.kind === 'switch') {\n        acc[option.key] = false;\n      }\n      if (option.kind === 'radio') {\n        acc[option.key] = option.values[0].value;\n      }\n      if (option.kind === 'checkbox') {\n        acc[option.key] = [];\n      }\n      return acc;\n    }, {}) ?? {}\n  );\n};\n\ntype CreateGameFlowProps = {\n  gameInfo: GameInfo;\n};\n\nexport function CreateGameFlow({ gameInfo }: CreateGameFlowProps) {\n  const [open, setOpen] = useState(false);\n  return (\n    <>\n      <Button type=\"primary\" onClick={() => setOpen(true)} block>\n        <Translate pt=\"Criar\" en=\"Create\" />\n      </Button>\n      {open && <CreateGameModal gameInfo={gameInfo} open={open} setOpen={setOpen} />}\n    </>\n  );\n}\n\ntype CreateGameModalProps = {\n  gameInfo: GameInfo;\n  open: boolean;\n  setOpen: (open: boolean) => void;\n};\n\nfunction CreateGameModal({ gameInfo, open, setOpen }: CreateGameModalProps): JSX.Element {\n  const { message, notification } = App.useApp();\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n  const [state, copyToClipboard] = useCopyToClipboard();\n\n  const { language, translate } = useLanguage();\n  const { setLoader } = useLoading();\n\n  const [isLoading, setLoading] = useState(false);\n  const [gameId, setGameId] = useState(null);\n  const [, setUserId] = useGlobalState('userId');\n  const [, setUserName] = useGlobalState('username');\n  const [, setUserAvatarId] = useGlobalState('userAvatarId');\n  const [options, setOptions] = useState(getOptionsDefaultValues(gameInfo.options));\n  const [latestGameIds, setLatestGameIds] = useGlobalLocalStorage('latestGameIds');\n  const previousGameId = latestGameBeforeNewOne(latestGameIds);\n\n  const { startRedirect, isSettingRedirect, wasRedirectSuccessful } = useRedirectToNewGame();\n\n  useEffect(() => {\n    if (state.value && gameId) {\n      message.info(`Copied to clipboard: ${state.value}`);\n    }\n  }, [state, gameId, message]);\n\n  const onChangeOptions = (key: string, value: boolean | string | string[]) => {\n    setOptions((s) => ({\n      ...s,\n      [key]: value,\n    }));\n  };\n\n  const createGame = async () => {\n    try {\n      setLoader('create', true);\n      setLoading(true);\n      const response: PlainObject = await ADMIN_API.run({\n        action: ADMIN_API_ACTIONS.CREATE_GAME,\n        gameName: gameInfo.gameName,\n        language,\n        options,\n        version: gameInfo.version,\n      });\n      if (response.data.gameId) {\n        setGameId(response.data.gameId);\n        setUserId(null);\n        setUserName('');\n        setUserAvatarId('');\n        setLatestGameIds(updateLocal24hGameIds(latestGameIds, response.data.gameId));\n        const baseUrl = window.location.href.split(pathname)[0];\n        copyToClipboard(`${baseUrl}/${response.data.gameId}`);\n      }\n    } catch (e: any) {\n      notification.error({\n        message: translate(\n          'Aplicativo encontrou um erro ao tentar criar o jogo',\n          'The application found an error while trying to create a game',\n          language\n        ),\n        description: JSON.stringify(e.message),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n      setOpen(false);\n    } finally {\n      setLoading(false);\n      setLoader('create', false);\n    }\n  };\n\n  const onConfirmGame = async () => {\n    if (gameId) {\n      navigate(`/${gameId}`);\n    } else {\n      message.info(\n        translate('Péra! O jogo ainda não foi inicializado.', 'Wait! The game has not been created')\n      );\n    }\n  };\n\n  return (\n    <Modal\n      title={`${translate('Criando novo jogo', 'Creating new game')}: ${gameInfo.title[language]}`}\n      open={open}\n      onCancel={() => setOpen(false)}\n      onOk={onConfirmGame}\n      okButtonProps={{ disabled: Boolean(!gameId) || isSettingRedirect }}\n      maskClosable={false}\n    >\n      <>\n        <Image\n          alt={gameInfo.title[language]}\n          src={`${PUBLIC_URL.BANNERS}${gameInfo.gameName}-${language}.jpg`}\n          fallback={`${PUBLIC_URL.BANNERS}/em-breve-${language}.jpg`}\n          className=\"round-corners\"\n        />\n\n        {!gameId && (\n          <Instruction>\n            <Translate pt=\"Você está criando um jogo em:\" en=\"You are creating a game in:\" />{' '}\n            <LanguageSwitch />\n          </Instruction>\n        )}\n\n        <GameCustomizations\n          options={gameInfo.options}\n          disabled={isLoading || Boolean(gameId)}\n          onChangeOptions={onChangeOptions}\n          selectedOptions={options}\n        />\n\n        <Divider />\n\n        {isLoading && (\n          <>\n            <Instruction>\n              <Translate pt=\"O jogo está sendo criado...\" en=\"The game session is being created\" />\n            </Instruction>\n            <Loading message={translate('Gerando...', 'Generating...')} margin />\n          </>\n        )}\n\n        {gameInfo.version.startsWith('alpha') && (\n          <Alert\n            type=\"warning\"\n            showIcon\n            message={\n              <Translate\n                pt=\"Este jogo está em alpha, não o jogue\"\n                en=\"This game is still in alpha and shouldn't be played\"\n              />\n            }\n          />\n        )}\n\n        {gameInfo.version.startsWith('beta') && (\n          <Alert\n            type=\"warning\"\n            showIcon\n            message={\n              <Translate\n                pt=\"Este jogo está em beta, prossiga com cuidado\"\n                en=\"This game is in beta and bugs might be everywhere\"\n              />\n            }\n          />\n        )}\n\n        {Boolean(gameId) ? (\n          <div>\n            <Title className=\"center\">\n              <Translate pt=\"Jogo inicializado\" en=\"Game Initialized\" />: {gameId}\n            </Title>\n            <Instruction>\n              {previousGameId && !wasRedirectSuccessful && (\n                <Alert\n                  type=\"info\"\n                  showIcon\n                  message={\n                    <>\n                      <Translate\n                        pt={<>Você quer redirecionar jogadores em {previousGameId} para essa nova partida?</>}\n                        en={<>Redirect players in {previousGameId} to this new play?</>}\n                      />\n                      <Button\n                        size=\"large\"\n                        onClick={() => {\n                          startRedirect(previousGameId ?? '', gameId ?? '', gameInfo.gameName);\n                        }}\n                        disabled={!gameId || !previousGameId}\n                        loading={isSettingRedirect}\n                      >\n                        <Translate pt=\"Redirecione-os\" en=\"Redirect them\" />\n                      </Button>\n                    </>\n                  }\n                />\n              )}\n              {wasRedirectSuccessful && (\n                <Alert\n                  type=\"info\"\n                  showIcon\n                  message={\n                    <Translate\n                      pt={\n                        <>\n                          Jogadores em {previousGameId} foram convidados para o jogo {gameId}\n                        </>\n                      }\n                      en={\n                        <>\n                          Players in {previousGameId} have been invited to {gameId}\n                        </>\n                      }\n                    />\n                  }\n                />\n              )}\n            </Instruction>\n          </div>\n        ) : (\n          <Space className=\"space-container\" align=\"center\">\n            <Button type=\"primary\" size=\"large\" disabled={isLoading} onClick={createGame}>\n              <Translate pt=\"Criar Jogo\" en=\"Create Game\" />\n            </Button>\n          </Space>\n        )}\n      </>\n    </Modal>\n  );\n}\n","import { App } from 'antd';\nimport { useState } from 'react';\nimport { useMutation } from '@tanstack/react-query';\n// Types\nimport type { GameMeta } from 'types/game';\n// Services\nimport { ADMIN_API, GAME_API, GAME_API_ACTIONS } from 'services/adapters';\n// Utils\nimport { ADMIN_ACTIONS } from 'utils/constants';\n// Hooks\nimport { useCurrentUserContext } from './useCurrentUserContext';\n\ntype GameMetaResponse = {\n  data: GameMeta;\n};\n\nexport function useRedirectToNewGame() {\n  const { notification } = App.useApp();\n  const { currentUser } = useCurrentUserContext();\n  const [happenedOnce, setHappenedOnce] = useState(false);\n  const [newGame, setNewGame] = useState({\n    gameId: '',\n    gameName: '',\n  });\n\n  const mutation = useMutation<unknown, Error, PlainObject, unknown>({\n    mutationKey: ['oldState', newGame.gameId],\n    mutationFn: async ({ prevGameId, payload }) => {\n      const metaResponse = (await GAME_API.run({\n        action: GAME_API_ACTIONS.LOAD_GAME,\n        gameId: prevGameId,\n      })) as GameMetaResponse;\n\n      const meta = metaResponse.data;\n\n      return await ADMIN_API.performAdminAction({\n        gameId: prevGameId,\n        gameName: meta?.gameName ?? '',\n        playerId: currentUser.id,\n        action: ADMIN_ACTIONS.FORCE_STATE_PROPERTY,\n        state: payload,\n      });\n    },\n    onSuccess: async () => {\n      notification.success({\n        message: 'Redirect successfully triggered',\n      });\n    },\n    onError: (e: any) => {\n      console.error(e);\n      notification.error({\n        message: 'Failed to load previous game to continue the redirect',\n        description: JSON.stringify(e.message),\n      });\n    },\n  });\n\n  const startRedirect = async (prevGameId: GameId, newGameId: GameId, newGameName: GameName) => {\n    if (happenedOnce) {\n      notification.error({\n        message: 'Redirect has failed to trigger',\n      });\n      return;\n    }\n    setNewGame({\n      gameId: newGameId,\n      gameName: newGameName,\n    });\n\n    await mutation.mutateAsync({\n      prevGameId,\n      gameName: newGameName,\n      payload: {\n        redirect: {\n          redirectAt: Date.now(),\n          gameId: newGameId,\n          gameName: newGameName,\n        },\n      },\n    });\n    setHappenedOnce(true);\n  };\n\n  return {\n    isSettingRedirect: mutation.isPending,\n    startRedirect,\n    wasRedirectSuccessful: mutation.isSuccess,\n  };\n}\n","// Ant Design Resources\nimport { Card, Image, Divider, Badge, Space } from 'antd';\n// Types\nimport type { GameInfo } from 'types/game-info';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { PUBLIC_URL } from 'utils/constants';\nimport { calculateGameAverageDuration, isDevEnv, truncateRecommended } from 'utils/helpers';\n// Components\nimport { RulesModal } from 'components/rules';\nimport { CreateGameFlow } from './CreateGameModal';\nimport { GameTags } from 'components/general/GameTags';\nimport { ClockCircleOutlined } from '@ant-design/icons';\n\nconst getVersionColor = (version: string) => {\n  if (version.includes('dev')) {\n    return '#6cb3f6';\n  }\n\n  if (version.includes('alpha')) {\n    return '#F97659';\n  }\n\n  if (version.includes('beta')) {\n    return '#F9D859';\n  }\n\n  const major = Number(version.split('.')[0]);\n\n  if (isNaN(major)) {\n    return '#96A0A3';\n  }\n\n  if (major === 0) {\n    return '#F9D859';\n  }\n\n  if (major === 1) {\n    return '#72D984';\n  }\n\n  if (major === 2) {\n    return '#7CBD51';\n  }\n\n  if (major >= 3) {\n    return '#7CBD51';\n  }\n\n  return '#96A0A3';\n};\n\ntype GameCardProps = {\n  game: GameInfo;\n  isAdmin?: boolean;\n};\n\nexport function GameCard({ game, isAdmin = true }: GameCardProps) {\n  const { language, translate } = useLanguage();\n\n  const duration = calculateGameAverageDuration(game);\n\n  return (\n    <Card\n      key={game.gameName}\n      className=\"game-card\"\n      cover={\n        <Badge.Ribbon text={game.version} color={getVersionColor(game.version)}>\n          <Image\n            alt={game.title[language]}\n            src={`${PUBLIC_URL.BANNERS}${game.gameName}-${language}.jpg`}\n            fallback={`${PUBLIC_URL.BANNERS}/em-breve-${language}.jpg`}\n          />\n        </Badge.Ribbon>\n      }\n    >\n      <div className=\"game-card__contents\">\n        <Space direction=\"vertical\">\n          <Card.Meta\n            title={\n              <span className=\"game-card__title\" title={game.title[language]}>\n                {isDevEnv && `[${game.gameCode}]`} {game.title[language]}\n              </span>\n            }\n            description={`${translate('Baseado em', 'Based on')} ${game.basedOn\n              .split('')\n              .reverse()\n              .join('')}`}\n          />\n\n          <Card.Meta className=\"game-card__description\" description={game.summary[language]} />\n\n          {Boolean(game.rules?.[language]?.length > 1) && (\n            <RulesModal\n              gameInfo={game}\n              buttonProps={{ size: 'small', className: 'game-card__margin-bottom' }}\n            />\n          )}\n\n          <GameTags\n            wrap\n            size={[1, 6]}\n            style={{ display: 'flex' }}\n            gameCode={game.gameCode}\n            tags={game.tags}\n          />\n        </Space>\n      </div>\n\n      <div className=\"game-card__actions\">\n        {game.duration && (\n          <Card.Meta\n            description={\n              <>\n                <ClockCircleOutlined /> {duration.min} min - {duration.max} min (Avg: {duration.ideal} min)\n              </>\n            }\n          />\n        )}\n\n        <Divider className=\"game-card__divider\" />\n\n        <Space direction=\"vertical\">\n          <Card.Meta\n            description={translate(\n              `Para ${game.playerCount.min}-${game.playerCount.max} jogadores`,\n              `For ${game.playerCount.min}-${game.playerCount.max} players`\n            )}\n          />\n\n          <Card.Meta\n            className=\"game-card__player-count\"\n            description={translate(\n              `Melhor com ${game.playerCount.best || '?'} jogadores`,\n              `Best wih ${game.playerCount.best || '?'} players`\n            )}\n          />\n\n          <Card.Meta\n            className=\"game-card__player-count game-card__margin-bottom\"\n            description={translate(\n              `Recomendado jogar com ${truncateRecommended(game.playerCount.recommended)}`,\n              `Recommended with ${truncateRecommended(game.playerCount.recommended)}`\n            )}\n          />\n        </Space>\n\n        {isAdmin && (\n          <div style={{ marginTop: '1rem' }}>\n            {Boolean(game.available) && <CreateGameFlow gameInfo={game} />}\n          </div>\n        )}\n      </div>\n    </Card>\n  );\n}\n","import { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { Alert, Button, Modal } from 'antd';\nimport { useDevFeatures } from 'hooks/useDevFeatures';\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useState } from 'react';\nimport { useEffectOnce } from 'react-use';\n\n/**\n * The emulator only properly works if using the local ip, to allow multi device testing\n * including mobile, this component will display an alert in case the current port is localhost\n */\nexport function DevEmulatorAlert() {\n  const { isDevEnv } = useDevFeatures();\n  const [stay, setStay] = useState(false);\n  const [usingFirestoreEmulator] = useGlobalState('usingFirestoreEmulator');\n  const [usingFunctionsEmulator] = useGlobalState('usingFunctionsEmulator');\n\n  const ip = process.env.REACT_APP_LOCAL_IP;\n  const displayDevWarningMessage = isDevEnv && window.location.hostname !== usingFirestoreEmulator;\n  const displayDevWarningMessageFunctions = isDevEnv && window.location.hostname !== usingFunctionsEmulator;\n  const { port, pathname, hash, protocol } = window.location;\n  const newPath = `${ip}:${port}${pathname}/${hash}`.replace('//', '/');\n  const emulatorUrl = `${protocol}//${newPath}`;\n\n  useEffectOnce(() => {\n    if (!stay && isDevEnv && displayDevWarningMessage) {\n      Modal.confirm({\n        title: 'Wrong Dev Environment',\n        icon: <ExclamationCircleOutlined />,\n        content: 'You are in a development environment and not using the Firestore emulator.',\n        okText: 'Switch Routes',\n        cancelText: 'Stay in Localhost',\n        onOk: () => {\n          setStay(true);\n          window.location.href = emulatorUrl;\n        },\n      });\n    }\n  });\n\n  if (!isDevEnv) return <></>;\n\n  return (\n    <>\n      {displayDevWarningMessage && (\n        <Alert\n          message={\n            <>\n              You are in a development environment and not using the Firestore emulator.{' '}\n              <Button href={emulatorUrl} type=\"link\">\n                Switch Routes\n              </Button>\n            </>\n          }\n          type=\"error\"\n          showIcon\n          banner\n        />\n      )}\n      {displayDevWarningMessageFunctions && (\n        <Alert\n          message={\n            <>\n              You are in a development environment and not using the Functions emulator.{' '}\n              <Button href={emulatorUrl} type=\"link\">\n                Switch Routes\n              </Button>\n            </>\n          }\n          type=\"warning\"\n          showIcon\n          banner\n        />\n      )}\n      {!displayDevWarningMessageFunctions && !displayDevWarningMessage && (\n        <Alert message={<>You are running emulators safely.</>} type=\"success\" showIcon banner />\n      )}\n    </>\n  );\n}\n","import { capitalize } from 'lodash';\nimport { useMemo } from 'react';\n// Ant Design Resources\nimport { FilterOutlined } from '@ant-design/icons';\nimport { InputNumber, Select, Space, TreeSelect } from 'antd';\nimport { DefaultOptionType } from 'antd/lib/select';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { SEPARATOR, TAG_DICT } from 'utils/constants';\n\nconst { SHOW_PARENT } = TreeSelect;\n\ntype FiltersProps = {\n  setTagFilters: GenericFunction;\n  setNumberFilters: GenericFunction;\n  availabilityCount: number;\n};\nexport function Filters({ availabilityCount, setTagFilters, setNumberFilters }: FiltersProps) {\n  const onNumberFiltersUpdate = (key: string, value: number) => {\n    setNumberFilters((prevState: NumberDictionary) => ({\n      ...prevState,\n      [key]: value,\n    }));\n  };\n\n  const onPlayingSelectChange = (value: string) => {\n    onNumberFiltersUpdate('recommendedWith', Number(value === 'recommended'));\n    onNumberFiltersUpdate('bestWith', Number(value === 'best'));\n  };\n\n  return (\n    <Space className=\"hub-filters\" wrap size=\"middle\">\n      <span>\n        <FilterOutlined /> ({availabilityCount})\n      </span>\n      <Select defaultValue=\"\" style={{ minWidth: '20ch' }} size=\"small\" onChange={onPlayingSelectChange}>\n        <Select.Option value=\"\">Playing with</Select.Option>\n        <Select.Option value=\"recommended\">Recommended with</Select.Option>\n        <Select.Option value=\"best\">Best with</Select.Option>\n      </Select>\n      <div className=\"hub-filters__entry\">\n        <label>Players</label>\n        <InputNumber\n          min={2}\n          max={12}\n          size=\"small\"\n          className=\"hub-filters__input-number\"\n          onChange={(value) => onNumberFiltersUpdate('players', value ?? 0)}\n        />\n      </div>\n      <div className=\"hub-filters__entry\">\n        <label>Duration</label>\n        <InputNumber\n          min={15}\n          step={15}\n          size=\"small\"\n          className=\"hub-filters__input-number\"\n          onChange={(value) => onNumberFiltersUpdate('duration', value ?? 0)}\n        />\n      </div>\n      <div className=\"hub-filters__entry\">\n        <label>Tags</label>\n        <TagTreeSelect value={undefined} onTreeSelectChange={setTagFilters} />\n      </div>\n    </Space>\n  );\n}\n\nfunction TagTreeSelect({ value, onTreeSelectChange }: any) {\n  const { dualTranslate } = useLanguage();\n\n  const onChange = (tags: string[]) => {\n    onTreeSelectChange(\n      tags\n      // .map((tag) => {\n      //   if (tag.includes(SEPARATOR)) {\n      //     return tag.split(SEPARATOR);\n      //   }\n      //   return tag;\n      // })\n      // .flat()\n    );\n  };\n\n  const treeData: DefaultOptionType[] = useMemo(\n    () =>\n      Object.values(\n        Object.keys(TAG_DICT).reduce((acc: any, tagKey: string) => {\n          const tagObj = TAG_DICT[tagKey];\n          if (acc[tagObj.group] === undefined) {\n            acc[tagObj.group] = {\n              title: capitalize(tagObj.group),\n              value: tagObj.group,\n              children: [],\n            };\n          }\n\n          acc[tagObj.group].children.push({\n            title: capitalize(dualTranslate(tagObj.label)),\n            value: `${tagObj.group}${SEPARATOR}${tagKey}`,\n          });\n\n          return acc;\n        }, {})\n      ),\n    [dualTranslate]\n  );\n\n  return (\n    <TreeSelect\n      treeData={treeData}\n      value={value}\n      onChange={onChange}\n      treeCheckable={true}\n      showCheckedStrategy={SHOW_PARENT}\n      placeholder=\"Select Game Tags\"\n      size=\"small\"\n      style={{\n        width: '100%',\n        minWidth: '400px',\n      }}\n    />\n  );\n}\n","import { useMemo, useState } from 'react';\nimport { useTitle } from 'react-use';\nimport { orderBy } from 'lodash';\n// Ant Design Resources\nimport { Typography, Layout, Divider, Row, Col } from 'antd';\nimport { DatabaseFilled } from '@ant-design/icons';\n// Types\nimport type { GameInfo } from 'types/game-info';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport GAME_LIST from 'utils/info';\nimport { SEPARATOR, TAG_RULES } from 'utils/constants';\nimport { calculateGameAverageDuration, isDevEnv } from 'utils/helpers';\n// Components\nimport { GameCard } from './components/GameCard';\nimport { LanguageSwitch, Translate } from 'components/language';\nimport { DevHeader } from 'pages/Dev/DevHeader';\nimport { DevEmulatorAlert } from './components/DevEmulatorAlert';\nimport { Filters } from './components/Filters';\nimport { LogoutButton } from 'components/auth/LogoutButton';\n\nfunction Hub() {\n  useTitle('Hub - Tarde Divertida');\n  const { language } = useLanguage();\n  const [tagFilters, setTagFilters] = useState<string[]>([]);\n  const [numberFilters, setNumberFilters] = useState<NumberDictionary>({});\n\n  const gameList = useMemo(\n    () =>\n      Object.values(GAME_LIST).filter((game) => {\n        let result = [];\n\n        // Check player count\n        if (numberFilters.players) {\n          result.push(\n            game.playerCount.min <= numberFilters.players && game.playerCount.max >= numberFilters.players\n          );\n\n          if (numberFilters.bestWith) {\n            result.push(numberFilters.players === game.playerCount.best);\n          }\n\n          if (numberFilters.recommendedWith) {\n            result.push(game.playerCount.recommended.includes(numberFilters.players));\n          }\n        }\n\n        // Check tags\n        // TODO: this does not account for tagGroups and concurrent tags\n        tagFilters.forEach((tagKey) => {\n          const [tagGroup, tag] = tagKey.split(SEPARATOR);\n\n          if (tagGroup && tag && TAG_RULES?.[tagGroup] === 'exclusive') {\n            result.push(game.tags.includes(tag));\n          } else if (tag) {\n            result.push(game.tags.includes(tag));\n          }\n        });\n\n        // Check time\n        if (numberFilters.duration) {\n          const duration = calculateGameAverageDuration(game, numberFilters.players ?? 0);\n\n          if (numberFilters.players) {\n            result.push(\n              numberFilters.duration >= duration.customTime - 10 &&\n                numberFilters.duration <= duration.customTime + 10\n            );\n          } else {\n            result.push(numberFilters.duration >= duration.min && numberFilters.duration <= duration.max);\n          }\n        }\n\n        return result.every(Boolean);\n      }),\n    [tagFilters, numberFilters]\n  );\n\n  const { availableGames, comingSoonGames, devGames } = useMemo(() => {\n    const sortedGameList = orderBy(gameList, [`title.[${language}]`], ['asc']);\n\n    return sortedGameList.reduce(\n      (acc: any, game) => {\n        if (game.available) {\n          if (['alpha', 'dev'].includes(game.version) || game.version.startsWith('beta')) {\n            acc.devGames.push(game);\n          } else {\n            acc.availableGames.push(game);\n          }\n        } else {\n          acc.comingSoonGames.push(game);\n        }\n        return acc;\n      },\n      {\n        availableGames: [],\n        devGames: [],\n        comingSoonGames: [],\n      }\n    );\n  }, [gameList, language]);\n  return (\n    <Layout className=\"dev-layout\">\n      <DevHeader\n        title={\n          <>\n            <DatabaseFilled /> Hub\n          </>\n        }\n        subTitle={<Translate pt=\"Selecione um jogo para começar\" en=\"Select a game to start\" />}\n        extra={[\n          <LanguageSwitch key=\"language-switch\" />,\n          <LogoutButton key=\"logout-button\" danger ghost size=\"small\" />,\n        ]}\n      />\n\n      <DevEmulatorAlert />\n\n      <Filters\n        setTagFilters={setTagFilters}\n        setNumberFilters={setNumberFilters}\n        availabilityCount={availableGames.length}\n      />\n\n      <Layout.Content className=\"container\" id=\"main-container\">\n        {isDevEnv && (\n          <>\n            <Typography.Title level={2}>\n              <Translate pt=\"Em Desenvolvimento\" en=\"Under Development\" />\n            </Typography.Title>\n            <RowOfGames games={devGames} />\n            <Divider />\n          </>\n        )}\n        <Typography.Title level={2}>\n          <Translate pt=\"Disponíveis\" en=\"Available\" />\n        </Typography.Title>\n        <RowOfGames games={availableGames} />\n\n        <Divider />\n        {!isDevEnv && (\n          <>\n            <Typography.Title level={2}>\n              <Translate pt=\"Em Desenvolvimento\" en=\"Under Development\" />\n            </Typography.Title>\n            <RowOfGames games={devGames} />\n\n            <Divider />\n          </>\n        )}\n        <Typography.Title level={2}>\n          <Translate pt=\"Em Breve\" en=\"Coming Soon\" />\n        </Typography.Title>\n        <RowOfGames games={comingSoonGames} />\n      </Layout.Content>\n    </Layout>\n  );\n}\n\ntype RowOfGamesProps = {\n  games: GameInfo[];\n};\n\nfunction RowOfGames({ games }: RowOfGamesProps) {\n  if (games.length === 0) {\n    return (\n      <Typography.Text type=\"secondary\">\n        <Translate pt=\"Nenhum jogo encontrado nessa categoria\" en=\"No games found in this category\" />\n      </Typography.Text>\n    );\n  }\n\n  return (\n    <Row gutter={[8, 16]}>\n      {games.map((game: GameInfo) => (\n        <Col key={game.gameName} xs={24} sm={12} md={8} lg={8} xl={6} xxl={4}>\n          <GameCard game={game} isAdmin={game.available} />\n        </Col>\n      ))}\n    </Row>\n  );\n}\n\nexport default Hub;\n"],"names":["LogoutButton","props","navigate","useNavigate","message","App","useMutation","mutationKey","mutationFn","signOut","onSuccess","onError","error","JSON","stringify","isPending","mutate","title","pt","en","onConfirm","danger","ghost","loading","GameTags","tags","gameCode","rest","language","useLanguage","sortedTags","forEach","tag","undefined","TAG_DICT","index","length","push","filter","v","Boolean","sortTags","wrap","map","color","label","useDevFeatures","useGlobalState","isDebugEnabled","setIsDebugEnabled","isDevEnv","toggleDevFeatures","s","DevMenu","pathname","useLocation","options","value","disabled","defaultValue","onChange","path","DevHeader","subTitle","extra","className","GameCustomizations","onChangeOptions","selectedOptions","level","option","clsx","kind","description","SwitchOptions","RadioOptions","CheckboxOptions","key","values","e","target","String","updateLocal24hGameIds","latestGameIds","newId","now","Date","past24Hours","cleanedUpIds","Object","entries","reduce","acc","timestamp","CreateGameFlow","gameInfo","useState","open","setOpen","type","onClick","block","CreateGameModal","notification","useCopyToClipboard","state","copyToClipboard","translate","setLoader","useLoading","isLoading","setLoading","gameId","setGameId","setUserId","setUserName","setUserAvatarId","getOptionsDefaultValues","setOptions","useGlobalLocalStorage","setLatestGameIds","previousGameId","idsObjectList","createdAt","orderedList","orderBy","currentMilliseconds","latestGameBeforeNewOne","currentUser","useCurrentUserContext","happenedOnce","setHappenedOnce","gameName","newGame","setNewGame","mutation","prevGameId","payload","GAME_API","action","GAME_API_ACTIONS","metaResponse","meta","data","ADMIN_API","playerId","id","ADMIN_ACTIONS","success","console","startRedirect","newGameId","newGameName","mutateAsync","redirect","redirectAt","isSettingRedirect","wasRedirectSuccessful","isSuccess","useRedirectToNewGame","useEffect","info","createGame","ADMIN_API_ACTIONS","version","response","baseUrl","window","location","href","split","placement","onConfirmGame","onCancel","onOk","okButtonProps","maskClosable","alt","src","PUBLIC_URL","fallback","margin","startsWith","showIcon","size","align","getVersionColor","includes","major","Number","isNaN","GameCard","game","isAdmin","duration","calculateGameAverageDuration","cover","text","direction","basedOn","reverse","join","summary","rules","buttonProps","style","display","ClockCircleOutlined","min","max","ideal","playerCount","best","truncateRecommended","recommended","marginTop","available","DevEmulatorAlert","stay","setStay","usingFirestoreEmulator","usingFunctionsEmulator","displayDevWarningMessage","hostname","displayDevWarningMessageFunctions","port","hash","protocol","newPath","process","replace","emulatorUrl","useEffectOnce","Modal","icon","ExclamationCircleOutlined","content","okText","cancelText","banner","SHOW_PARENT","TreeSelect","Filters","availabilityCount","setTagFilters","setNumberFilters","onNumberFiltersUpdate","prevState","FilterOutlined","minWidth","step","TagTreeSelect","onTreeSelectChange","dualTranslate","treeData","useMemo","keys","tagKey","tagObj","group","capitalize","children","SEPARATOR","treeCheckable","showCheckedStrategy","placeholder","width","RowOfGames","games","gutter","xs","sm","md","lg","xl","xxl","useTitle","tagFilters","numberFilters","gameList","GAME_LIST","result","players","bestWith","recommendedWith","tagGroup","TAG_RULES","customTime","every","devGames","availableGames","comingSoonGames","DatabaseFilled"],"sourceRoot":""}