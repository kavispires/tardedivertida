{"version":3,"file":"static/js/cruza-palavras.4170211a.chunk.js","mappings":"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","sources":["components/metrics/PointsHighlight.tsx","components/ranking/RankingBoard.tsx","components/ranking/StepRankingWrapper.tsx","games/cruza-palavras/components/WordGridHeader.tsx","games/cruza-palavras/components/WordGrid.tsx","../node_modules/@ant-design/icons-svg/es/asn/FormOutlined.js","../node_modules/@ant-design/icons/es/icons/FormOutlined.js","games/cruza-palavras/components/PreviousClue.tsx","games/cruza-palavras/components/WordForm.tsx","games/cruza-palavras/components/WritingCell.tsx","games/cruza-palavras/components/RulesBlobs.tsx","games/cruza-palavras/StepClueWriting.tsx","games/cruza-palavras/components/PlayerRecentClue.tsx","games/cruza-palavras/PhaseClueWriting.tsx","games/cruza-palavras/utils/api-requests.ts","games/cruza-palavras/utils/helpers.ts","games/cruza-palavras/components/ClueCard.tsx","games/cruza-palavras/components/SelectableCell.tsx","games/cruza-palavras/components/Clues.tsx","games/cruza-palavras/StepGuessing.tsx","games/cruza-palavras/PhaseGuessing.tsx","../node_modules/@ant-design/icons-svg/es/asn/CheckSquareFilled.js","../node_modules/@ant-design/icons/es/icons/CheckSquareFilled.js","../node_modules/@ant-design/icons-svg/es/asn/CloseSquareFilled.js","../node_modules/@ant-design/icons/es/icons/CloseSquareFilled.js","games/cruza-palavras/StepReveal.tsx","games/cruza-palavras/StepRanking.tsx","games/cruza-palavras/PhaseReveal.tsx","games/cruza-palavras/PhaseGameOver.tsx","games/cruza-palavras/SessionCruzaPalavras.tsx","games/cruza-palavras/utils/achievements.ts","hooks/useCardWidth.ts","icons/GridIcon.tsx","icons/GuessIcon.tsx","icons/RankIcon.tsx","icons/StarIcon.tsx","icons/TrophyIcon.tsx","../node_modules/@ant-design/icons/es/icons/CaretUpOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/CrownFilled.js","../node_modules/@ant-design/icons/es/icons/CrownFilled.js","../node_modules/@ant-design/icons-svg/es/asn/PlusCircleFilled.js","../node_modules/@ant-design/icons/es/icons/PlusCircleFilled.js","../node_modules/@ant-design/icons-svg/es/asn/TrophyOutlined.js","../node_modules/@ant-design/icons/es/icons/TrophyOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/WarningOutlined.js","../node_modules/@ant-design/icons/es/icons/WarningOutlined.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toArray.js"],"sourcesContent":["import { StarIcon } from 'icons/StarIcon';\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function PointsHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<StarIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode, useEffect, useMemo, useState } from 'react';\nimport { orderBy } from 'lodash';\nimport { useEffectOnce } from 'react-use';\n// Ant Design Resources\nimport { Tooltip } from 'antd';\nimport { CrownFilled } from '@ant-design/icons';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useDimensions } from 'hooks/useDimensions';\n// Components\nimport { Translate } from 'components/language';\nimport { Avatar } from 'components/avatars';\n\ntype GainedPointProps = {\n  gainedPoint: number;\n  order: number;\n  description?: any;\n};\n\nfunction GainedPoint({ gainedPoint, order, description }: GainedPointProps): JSX.Element {\n  const isPositive = gainedPoint > 0;\n  const isNegative = gainedPoint < 0;\n  return (\n    <li\n      className={clsx(\n        'ranking-board__gained-point',\n        isPositive && 'ranking-board__gained-point--plus',\n        isNegative && 'ranking-board__gained-point--minus',\n        `ranking-board__gained-point--${order}`\n      )}\n    >\n      <Tooltip\n        title={description ?? <Translate pt=\"Pontos ganhos\" en=\"Gained Points\" />}\n        color={isPositive ? 'gold' : isNegative ? 'red' : 'gray'}\n      >\n        {isPositive ? '+' : ''}\n        {gainedPoint}\n      </Tooltip>\n    </li>\n  );\n}\n\ntype GainedPointsProps = {\n  gainedPoints: number[] | number;\n  playerId: PlayerId;\n  gainedPointsDescriptions?: any[];\n};\n\nfunction GainedPoints({\n  gainedPoints,\n  playerId,\n  gainedPointsDescriptions = [],\n}: GainedPointsProps): JSX.Element {\n  const points = Array.isArray(gainedPoints) ? gainedPoints : [gainedPoints];\n  return (\n    <ul className=\"ranking-board__cell-gained-points\">\n      {points.map((gainedPoint, index) => (\n        <GainedPoint\n          key={`gained-point-${playerId}-${index}`}\n          gainedPoint={gainedPoint}\n          order={index}\n          description={gainedPointsDescriptions[index]}\n        />\n      ))}\n    </ul>\n  );\n}\n\ntype RankingBoardProps = {\n  players: GamePlayers;\n  ranking: GameRanking;\n  gainedPointsDescriptions?: ReactNode[];\n  hideGainedPoints?: boolean;\n  delay?: number;\n};\n\nexport function RankingBoard({\n  players,\n  ranking,\n  gainedPointsDescriptions,\n  hideGainedPoints = false,\n  delay = 0,\n}: RankingBoardProps): JSX.Element {\n  const [displayStep, setDisplayStep] = useState(0);\n  const [sortedRanking, setSortedRanking] = useState<GameRanking>([]);\n  const [reRank, setReRank] = useState(0);\n  const [, height] = useDimensions('ranking-row-0');\n\n  const maxPoints = useMemo(() => Math.max(...ranking.map((scores) => scores.newScore)), [ranking]);\n\n  const { seconds } = useCountdown({\n    duration: 5 + delay,\n    autoStart: true,\n    onExpire: () => {\n      setReRank(1);\n      setDisplayStep(3);\n    },\n  });\n\n  // Rank by previousScore\n  useEffectOnce(() => {\n    const positions: PlainObject = {};\n    let lastPosition = 0;\n    let lastPoints = 0;\n\n    const rankByFinalScoreDict = orderBy(ranking, ['newScore', 'name'], ['desc', 'asc']).reduce(\n      (acc: PlainObject, entry, index) => {\n        acc[entry.playerId] = index;\n        // Calculate position\n        if (lastPoints === 0 || entry.newScore < lastPoints) {\n          lastPoints = entry.newScore;\n          lastPosition += 1;\n        }\n        positions[entry.playerId] = [0, lastPosition];\n        return acc;\n      },\n      {}\n    );\n\n    const rankByPreviousScore = orderBy(ranking, ['previousScore', 'name'], ['desc', 'asc']);\n\n    // Reset position trackers\n    lastPosition = 0;\n    lastPoints = 0;\n\n    const tempSortedRanking: GameRanking = rankByPreviousScore.map((entry, index) => {\n      const newEntry = { ...entry };\n\n      newEntry.order = [index, rankByFinalScoreDict[newEntry.playerId]];\n      newEntry.position = positions[newEntry.playerId];\n      // Calculate position\n      if (lastPoints === 0 || entry.previousScore < lastPoints) {\n        lastPoints = entry.previousScore;\n        lastPosition += 1;\n      }\n      newEntry.position[0] = lastPosition;\n      return newEntry;\n    });\n\n    setSortedRanking(tempSortedRanking);\n  });\n\n  // Show gained points\n  useEffect(() => {\n    if (seconds === 4 + delay) {\n      setDisplayStep(1);\n    } else if (seconds === 2 + delay) {\n      setDisplayStep(2);\n    }\n  }, [seconds, delay]);\n\n  return (\n    <div\n      className=\"ranking-board\"\n      style={{ height: `${(Math.max(60, height) + 8) * sortedRanking.length}px` }}\n    >\n      {sortedRanking.map((entry, index) => {\n        const { playerId, newScore, previousScore, gainedPoints, order, position } = entry;\n        const hPosition = (Math.max(60, height) + 8) * (order[reRank] ?? 0);\n\n        return (\n          <div\n            className={`ranking-board__row ranking-board__row--${index}`}\n            key={`ranking-${playerId}`}\n            id={`ranking-row-${index}`}\n            style={{ top: `${hPosition}px` }}\n          >\n            <div className=\"ranking-board__cell-crown\">\n              {newScore > 0 && maxPoints === newScore && displayStep >= 3 && (\n                <CrownFilled className=\"ranking-board__crown-icon\" />\n              )}\n            </div>\n            <div className=\"ranking-board__cell-position\">#{position[reRank] ?? ''}</div>\n            <div className=\"ranking-board__cell-player\">\n              <div className=\"ranking-board__avatar\">\n                <Avatar id={players[playerId].avatarId} />\n              </div>\n              <div className=\"ranking-board__name\">{players[playerId].name}</div>\n            </div>\n            <Tooltip title={<Translate pt=\"Pontos Anteriores\" en=\"Previous Points\" />} color=\"gray\">\n              <div className=\"ranking-board__cell-points\">{previousScore}</div>\n            </Tooltip>\n            {!hideGainedPoints && displayStep >= 1 && gainedPoints !== undefined && (\n              <GainedPoints\n                gainedPoints={gainedPoints}\n                playerId={playerId}\n                gainedPointsDescriptions={gainedPointsDescriptions}\n              />\n            )}\n            {displayStep >= 2 && (\n              <Tooltip title=\"Total\" color=\"gold\">\n                <span className=\"ranking-board__cell-points-total\">{newScore}</span>\n              </Tooltip>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { CaretUpOutlined } from '@ant-design/icons';\n// Hooks\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Components\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { RankingBoard } from './RankingBoard';\n\ntype StepRankingWrapperProps = {\n  /**\n   * The players\n   */\n  players: GamePlayers;\n  /**\n   * The ranking array\n   */\n  ranking: GameRanking;\n  /**\n   * Gained points descriptions for the popover\n   */\n  gainedPointsDescriptions: ReactNode[];\n  /**\n   * Additional content\n   */\n  children?: ReactNode;\n  /**\n   * Replacement title for Ranking\n   */\n  title?: ReactNode;\n  /**\n   * Optional node that goes under the title\n   */\n  subtitle?: ReactNode;\n};\n\nexport function StepRankingWrapper({\n  players,\n  ranking,\n  gainedPointsDescriptions,\n  children,\n  title,\n  subtitle,\n}: StepRankingWrapperProps) {\n  useTemporarilyHidePlayersBar();\n\n  return (\n    <Step>\n      <Title>{title ?? 'Ranking'}</Title>\n\n      {subtitle}\n\n      <RankingBoard players={players} ranking={ranking} gainedPointsDescriptions={gainedPointsDescriptions} />\n      <Instruction className=\"step-ranking-wrapper-gained-points-instruction\">\n        <CaretUpOutlined />\n        <Translate\n          pt=\"Passe o mouse em cada um dos pontos para saber como eles foram distribuídos\"\n          en=\"Hover over the scores to learn how they were granted\"\n        />\n        <CaretUpOutlined />\n      </Instruction>\n\n      {children}\n    </Step>\n  );\n}\n","import clsx from 'clsx';\n// Design Resources\nimport { Image, Tooltip } from 'antd';\n// Hooks\nimport { useBlurCards } from 'hooks/useBlurCards';\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Utils\nimport { PUBLIC_URL } from 'utils/constants';\n\ntype WordGridHeaderProps = {\n  cell: CruzaPalavrasGridCell;\n};\n\nexport function WordGridHeader({ cell }: WordGridHeaderProps) {\n  if (cell?.id?.startsWith('cnt')) {\n    return <WordGridHeaderImage cell={cell} />;\n  }\n\n  return <>{cell.text}</>;\n}\n\nfunction WordGridHeaderImage({ cell }: WordGridHeaderProps) {\n  const { shouldBeBlurred } = useBlurCards();\n  const cardWidth = useCardWidth(8, 16, 30, 100);\n\n  const imageURL = cell.id!.replace(/-/g, '/');\n\n  const isBlurred = shouldBeBlurred(cell.id);\n  return (\n    <div className=\"w-contender\" style={{ width: `${cardWidth}px` }}>\n      <Tooltip title={cell.text}>\n        <span className=\"w-contender-name\">{cell.text}</span>\n      </Tooltip>\n\n      <Image\n        src={`${process.env.REACT_APP_TDI_IMAGES_URL}${imageURL}.jpg`}\n        width={cardWidth}\n        className={clsx('w-contender-image', isBlurred && 'w-contender-image--blur')}\n        fallback={`${PUBLIC_URL.IN_GAME}/w-no-image.jpg`}\n        alt={cell.text}\n      />\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Components\nimport { WordGridHeader } from './WordGridHeader';\n\ntype WordGridProps = {\n  grid: CruzaPalavraGrid;\n  user: GamePlayer;\n  CellComponent: any;\n  cellComponentProps: any;\n};\n\nexport function WordGrid({ grid, user, CellComponent, cellComponentProps = {} }: WordGridProps) {\n  const length = Math.sqrt(grid.length);\n\n  const gridStyle = {\n    gridTemplateColumns: `repeat(${length}, 1fr)`,\n    gridTemplateRows: `repeat(${length}, auto)`,\n  };\n\n  return (\n    <div className=\"x-grid\" style={gridStyle}>\n      {grid.map((cell) => (\n        <div className={clsx('x-grid-cell', `x-grid-cell--${cell.kind}`)} key={`${cell.index}-${cell.kind}`}>\n          {cell.kind === 'header' && <WordGridHeader cell={cell} />}\n\n          {cell.kind === 'cell' && <CellComponent {...cellComponentProps} cell={cell} user={user} />}\n        </div>\n      ))}\n    </div>\n  );\n}\n","// This icon file is generated automatically.\nvar FormOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M904 512h-56c-4.4 0-8 3.6-8 8v320H184V184h320c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V520c0-4.4-3.6-8-8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M355.9 534.9L354 653.8c-.1 8.9 7.1 16.2 16 16.2h.4l118-2.9c2-.1 4-.9 5.4-2.3l415.9-415c3.1-3.1 3.1-8.2 0-11.3L785.4 114.3c-1.6-1.6-3.6-2.3-5.7-2.3s-4.1.8-5.7 2.3l-415.8 415a8.3 8.3 0 00-2.3 5.6zm63.5 23.6L779.7 199l45.2 45.1-360.5 359.7-45.7 1.1.7-46.4z\" } }] }, \"name\": \"form\", \"theme\": \"outlined\" };\nexport default FormOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport FormOutlinedSvg from \"@ant-design/icons-svg/es/asn/FormOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar FormOutlined = function FormOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: FormOutlinedSvg\n  }));\n};\nFormOutlined.displayName = 'FormOutlined';\nexport default /*#__PURE__*/React.forwardRef(FormOutlined);","type PreviousClueProps = {\n  clue: string;\n};\n\nexport function PreviousClue({ clue }: PreviousClueProps) {\n  return <div className=\"x-previous-clue\">{clue}</div>;\n}\n","import { useEffect, useRef, useState } from 'react';\n//Design Resources\nimport { Button, Input, InputRef, Space } from 'antd';\n// Hooks\nimport { useMock } from 'hooks/useMock';\n// Components\nimport { Translate } from 'components/language';\n\ntype WordFormProps = {\n  x: string;\n  y: string;\n  onSubmit: GenericFunction;\n  disabled?: boolean;\n};\n\nexport function WordForm({ x, y, onSubmit, disabled }: WordFormProps) {\n  const [clue, setClue] = useState('');\n  const textInput = useRef<InputRef | null>(null);\n\n  const onChange = (e: any) => {\n    setClue(e.target.value);\n  };\n\n  useEffect(() => textInput && textInput.current!.focus(), []);\n\n  // DEV: Submit made-up words\n  useMock(() => {\n    onSubmit(`${x.substring(0, x.length / 2)}${y.substring(y.length / 2)}`);\n  }, []);\n\n  return (\n    <Space direction=\"vertical\">\n      <Input\n        ref={textInput}\n        placeholder={`${x} + ${y}`}\n        onChange={onChange}\n        onPressEnter={() => onSubmit(clue)}\n      />\n      <Button type=\"primary\" onClick={() => onSubmit(clue)} disabled={disabled || !clue.length}>\n        <Translate pt=\"Enviar\" en=\"Submit\" />\n      </Button>\n    </Space>\n  );\n}\n","//Design Resources\nimport { Button, Popover } from 'antd';\nimport { FormOutlined } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\nimport { PreviousClue } from './PreviousClue';\nimport { WordForm } from './WordForm';\n\ntype WritingCellProps = {\n  onSubmitClue: GenericFunction;\n  cell: CruzaPalavrasGridCell;\n  disabled?: boolean;\n  user: GamePlayer;\n};\n\nexport function WritingCell({ onSubmitClue, cell, user, disabled }: WritingCellProps) {\n  if (cell.writable && user.id === cell.playerId) {\n    return (\n      <Popover\n        content={<WordForm x={cell.xText ?? ''} y={cell.yText ?? ''} onSubmit={onSubmitClue} />}\n        title={<Translate pt=\"Escreva\" en=\"Write\" />}\n        trigger=\"click\"\n      >\n        <Button shape=\"circle\" type=\"primary\" disabled={disabled}>\n          <FormOutlined />\n        </Button>\n      </Popover>\n    );\n  }\n\n  if (cell.text) {\n    return <PreviousClue clue={cell.text} />;\n  }\n\n  return <></>;\n}\n","import { Translate } from 'components/language';\nimport { PointsHighlight } from 'components/metrics/PointsHighlight';\nimport { Instruction } from 'components/text';\n\nexport function WritingCluesRule({ playerCount }: { playerCount: number }) {\n  return (\n    <Instruction>\n      <Translate\n        pt={\n          <>\n            Você tem uma coordenada específica e única na grade de palavras.\n            <br />\n            Escreva uma dica (palavra única) que conecte as palavras da linha e da coluna assinalada a você.\n            <br />\n            Escreva algo bem simples e óbvio porque se ninguém entender você perderá{' '}\n            <PointsHighlight type=\"negative\">- {playerCount}</PointsHighlight> pontos.\n          </>\n        }\n        en={\n          <>\n            You will get an unique coordinate in the word grid.\n            <br />\n            You must write a single word clue that connects the word in the column and in the row of your\n            coordinate.\n            <br />\n            Write something simple and obvious because if nobody gets your clue you will lose{' '}\n            <PointsHighlight type=\"negative\">- {playerCount}</PointsHighlight>\n            points.\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function ScoringRule({ playerCount }: { playerCount: number }) {\n  return (\n    <Instruction>\n      <Translate\n        pt={\n          <>\n            Você ganha <PointsHighlight>+2</PointsHighlight> pontos para cada célula com uma resposta correta\n            sua.\n            <br />\n            <PointsHighlight>+1</PointsHighlight> ponto para cada célula com uma dica mas uma resposta errada\n            sua.\n            <br />\n            <PointsHighlight>+1</PointsHighlight> ponto para cada voto correto que sua dica recebeu.\n            <br />\n            Mas se ninguém acertar sua dica, você perde{' '}\n            <PointsHighlight type=\"negative\">- {playerCount}</PointsHighlight> pontos.\n          </>\n        }\n        en={\n          <>\n            You get <PointsHighlight>+2</PointsHighlight> points for each cell with your correct answer.\n            <br />\n            <PointsHighlight>+1</PointsHighlight> point for each cell with a clue but with a wrong answer of\n            yours.\n            <br />\n            <PointsHighlight>+1</PointsHighlight> point for each correct vote your clue received.\n            <br />\n            But if nobody gets your clue correctly, you lose{' '}\n            <PointsHighlight type=\"negative\">- {playerCount}</PointsHighlight> points.\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n","// Hooks\nimport { useLoading } from 'hooks/useLoading';\n// Components\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { PopoverRule } from 'components/rules';\nimport { WordGrid } from './components/WordGrid';\nimport { WritingCell } from './components/WritingCell';\nimport { WritingCluesRule } from './components/RulesBlobs';\n\ntype StepClueWritingProps = {\n  grid: CruzaPalavraGrid;\n  user: GamePlayer;\n  onSubmitClue: GenericFunction;\n  players: GamePlayers;\n} & AnnouncementProps;\n\nexport function StepClueWriting({ grid, user, onSubmitClue, players, announcement }: StepClueWritingProps) {\n  const { isLoading } = useLoading();\n\n  const onSubmitClueClick = (payload: string) => {\n    onSubmitClue({\n      clue: payload.trim().toLowerCase(),\n    });\n  };\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title>\n        <Translate pt=\"Escreva sua dica\" en=\"Write your clue\" />\n      </Title>\n\n      <PopoverRule content={<WritingCluesRule playerCount={Object.keys(players).length} />} />\n\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Clique no ícone na grade e escreva sua dica.\n              <br />\n              Sua dica deve conter apenas <strong>uma palavra única</strong>.\n              <br />\n              Você <strong>NÃO</strong> pode usar nenhuma palavra que esteja na grade.\n            </>\n          }\n          en={\n            <>\n              Click on the icon on the table cell and write your clue.\\\n              <br />\n              Your clue must be a <strong>single-word</strong> clue.\n              <br />\n              You can <strong>NOT</strong> use any words already in the table.\n            </>\n          }\n        />\n      </Instruction>\n\n      <WordGrid\n        grid={grid}\n        user={user}\n        CellComponent={WritingCell}\n        cellComponentProps={{ onSubmitClue: onSubmitClueClick, disabled: isLoading }}\n      />\n    </Step>\n  );\n}\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Components\nimport { Translate } from 'components/language';\nimport { TextHighlight, Title } from 'components/text';\n\ntype PlayerRecentClueProps = {\n  user: GamePlayer;\n  grid: CruzaPalavrasGridCell[];\n};\n\nexport function PlayerRecentClue({ user, grid }: PlayerRecentClueProps) {\n  const cell = grid[user.coordinate];\n\n  if (!user.clue || !cell) {\n    return <></>;\n  }\n\n  return (\n    <Space className=\"space-container\" direction=\"vertical\">\n      <Title size=\"xx-small\">\n        <Translate pt=\"Sua dica\" en=\"Your clue\" />\n      </Title>\n      <span>\n        <TextHighlight>{cell.xText}</TextHighlight> + <TextHighlight>{cell.yText}</TextHighlight> ={' '}\n        <TextHighlight>{user.clue}</TextHighlight>\n      </span>\n    </Space>\n  );\n}\n","// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitClueAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { GridIcon } from 'icons/GridIcon';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { RoundAnnouncement } from 'components/round';\nimport { StepSwitcher } from 'components/steps';\nimport { StepClueWriting } from './StepClueWriting';\nimport { WritingCluesRule } from './components/RulesBlobs';\nimport { Translate } from 'components/language';\nimport { PlayerRecentClue } from './components/PlayerRecentClue';\n\nfunction PhaseClueWriting({ players, state, info }: PhaseProps) {\n  const { step, goToNextStep, setStep } = useStep(0);\n\n  const user = useUser(players, state);\n\n  const onSubmitClue = useOnSubmitClueAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<GridIcon />}\n      title={<Translate pt=\"Escreva!\" en=\"Write!\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <WritingCluesRule playerCount={Object.keys(players).length} />\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.CRUZA_PALAVRAS.CLUE_WRITING}>\n      <StepSwitcher\n        step={step}\n        conditions={[!user.isReady, !user.isReady, !user.isReady]}\n        players={players}\n        waitingRoomContent={<PlayerRecentClue grid={state.grid} user={user} />}\n      >\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state?.round}\n          onPressButton={goToNextStep}\n          buttonText=\" \"\n          time={5}\n          circleColor={info?.appearance?.color}\n        />\n\n        {/* Step 1 */}\n        <StepClueWriting\n          user={user}\n          grid={state.grid}\n          onSubmitClue={onSubmitClue}\n          players={players}\n          announcement={announcement}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseClueWriting;\n","import { CRUZA_PALAVRAS_API } from 'services/adapters';\nimport { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\n\nexport function useOnSubmitClueAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: CRUZA_PALAVRAS_API.submitAction,\n    actionName: 'submit-clue',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(1),\n    successMessage: translate('Dica enviada com sucesso', 'Clue submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua dica',\n      'Oops, the application failed to send your clue'\n    ),\n  });\n\n  return (payload: SubmitCluePayload) => {\n    request({\n      action: 'SUBMIT_CLUE',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitGuessesAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: CRUZA_PALAVRAS_API.submitAction,\n    actionName: 'submit-guesses',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate('Respostas enviadas com sucesso', 'Guesses submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar suas respostas',\n      'Oops, the application failed to send your guesses'\n    ),\n  });\n\n  return (payload: SubmitGuessesPayload) => {\n    request({\n      action: 'SUBMIT_GUESSES',\n      ...payload,\n    });\n  };\n}\n","import { SEPARATOR } from 'utils/constants';\n\n/**\n * Checks if an instance is a clue\n * @param instance\n * @returns\n */\nexport const isClue = (instance?: any) => Boolean(instance?.clue);\n\n/**\n *\n * @param clueObj\n * @returns\n */\nexport const getClueKey = (clueObj?: CruzaPalavrasClue): string =>\n  `${clueObj?.clue}${SEPARATOR}${clueObj?.playerId}`;\n\n/**\n *\n * @param key\n * @returns\n */\nexport const getClueFromKey = (key: string): string[] => key.split(SEPARATOR) ?? ['', ''];\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { CheckCircleFilled, PlusCircleFilled } from '@ant-design/icons';\n// Utils\nimport { getColorFromIndex } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\n\ntype ClueCardProps = {\n  isMatched?: boolean;\n  isSelected?: boolean;\n  clue?: string;\n  indexColor?: number;\n  color?: string;\n  player?: GamePlayer;\n  strikeMatches?: boolean;\n};\n\nexport function ClueCard({\n  isMatched,\n  isSelected,\n  clue,\n  indexColor = 0,\n  color,\n  player,\n  strikeMatches = false,\n}: ClueCardProps) {\n  const colorClass = getColorFromIndex(indexColor);\n  return (\n    <div\n      className={clsx(\n        'x-clue-card',\n        isSelected && 'x-clue-card--selected',\n        !Boolean(color) && `color-border--${colorClass}`\n      )}\n      style={{ borderColor: color }}\n    >\n      <span\n        className={clsx('x-clue-card__icon', !Boolean(color) && `color-background--${colorClass}`)}\n        style={{ backgroundColor: color }}\n      >\n        {isMatched ? (\n          Boolean(player) ? (\n            <Avatar id={player?.avatarId} />\n          ) : (\n            <CheckCircleFilled />\n          )\n        ) : (\n          <PlusCircleFilled style={isSelected ? { color: 'gold' } : { color: 'white' }} />\n        )}\n      </span>\n      <span className={clsx('x-clue-card__clue', isMatched && strikeMatches && 'x-clue-card__clue--matched')}>\n        {clue}\n      </span>\n    </div>\n  );\n}\n","//Design Resources\nimport { Button } from 'antd';\nimport { PlusCircleFilled } from '@ant-design/icons';\n// Utils\nimport { getClueFromKey } from '../utils/helpers';\n// Components\nimport { ClueCard } from './ClueCard';\nimport { PreviousClue } from './PreviousClue';\n\ntype SelectableCellProps = {\n  onSelectCell: GenericFunction;\n  onClearCell: GenericFunction;\n  cell: CruzaPalavrasGridCell;\n  active: any;\n  guesses: any;\n  clues: CruzaPalavrasClue[];\n  user: GamePlayer;\n};\n\nexport function SelectableCell({\n  onSelectCell,\n  onClearCell,\n  cell,\n  active,\n  guesses,\n  clues,\n  user,\n}: SelectableCellProps) {\n  const isSelected = cell.index === active;\n  const matchEntry = Object.entries(guesses).find((arr) => arr[1] === cell.index);\n  const [clueKey, coordinate] = matchEntry ?? [];\n  const [clue, playerId] = getClueFromKey(clueKey ?? '');\n\n  const isMatched = coordinate === cell.index;\n\n  if (isMatched) {\n    const clueIndexColor = clues.findIndex((c) => c.clue === clue && c.playerId === playerId);\n    return (\n      <Button\n        onClick={user.id !== playerId ? () => onClearCell(clueKey) : () => {}}\n        type=\"text\"\n        style={{ height: 'auto' }}\n      >\n        <ClueCard isMatched={isMatched} isSelected={isSelected} clue={clue} indexColor={clueIndexColor} />\n      </Button>\n    );\n  }\n\n  if (cell.text) {\n    return <PreviousClue clue={cell.text} />;\n  }\n\n  return (\n    <Button onClick={() => onSelectCell(cell.index)} shape=\"circle\">\n      <PlusCircleFilled style={isSelected ? { color: 'gold' } : {}} />\n    </Button>\n  );\n}\n","// Helpers\nimport { getClueKey } from '../utils/helpers';\n// Components\nimport { ClueCard } from './ClueCard';\n\ntype CluesProps = {\n  clues: CruzaPalavrasClue[];\n  onSelectClue: GenericFunction;\n  active: any;\n  guesses: PlainObject;\n};\n\nexport function Clues({ clues, onSelectClue, active, guesses }: CluesProps) {\n  return (\n    <ul className=\"x-clue-cards\">\n      {clues.map((clueObj, index: number) => {\n        const isSelected = clueObj.coordinate === active?.coordinate;\n        const isMatched = Boolean(guesses[getClueKey(clueObj)]);\n        return (\n          <li key={`${clueObj.coordinate}-${clueObj.clue}`} className=\"x-clue-card-li\">\n            <button className=\"x-clue-card-button\" onClick={() => onSelectClue(clueObj)}>\n              <ClueCard\n                isMatched={isMatched}\n                isSelected={isSelected}\n                clue={clueObj.clue}\n                indexColor={index}\n                strikeMatches\n              />\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import { useState, useCallback } from 'react';\nimport { useEffectOnce } from 'react-use';\n//Design Resources\nimport { Button, Space } from 'antd';\n// Utils\nimport { shuffle } from 'utils/helpers';\nimport { getClueFromKey, getClueKey, isClue } from './utils/helpers';\n// Components\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { WordGrid } from './components/WordGrid';\nimport { SelectableCell } from './components/SelectableCell';\nimport { Clues } from './components/Clues';\n\ntype StepGuessingProps = {\n  grid: CruzaPalavraGrid;\n  user: GamePlayer;\n  clues: CruzaPalavrasClue[];\n  onSubmitGuesses: GenericFunction;\n} & AnnouncementProps;\n\nexport function StepGuessing({ grid, user, clues, onSubmitGuesses, announcement }: StepGuessingProps) {\n  const [active, setActive] = useState(null);\n  const [guesses, setGuesses] = useState<any>({});\n  const [choseRandomly, setChoseRandomly] = useState(false);\n\n  const onSelectClue = useCallback(\n    (clueIndex: any) => {\n      if (!active || isClue(active)) {\n        setActive(clueIndex);\n      } else {\n        setGuesses((state: any) => ({\n          ...state,\n          [getClueKey(clueIndex)]: active,\n        }));\n        setActive(null);\n      }\n    },\n    [active]\n  );\n\n  const onSelectCell = useCallback(\n    (cellCoordinate: any) => {\n      if (!isClue(active)) {\n        setActive(cellCoordinate);\n      } else {\n        setGuesses((state: any) => {\n          const newState = Object.entries(state).reduce((acc: PlainObject, [key, value]) => {\n            if (key && value && value !== cellCoordinate) {\n              acc[key] = value;\n            }\n            return acc;\n          }, {});\n\n          newState[getClueKey(active!)] = cellCoordinate;\n\n          setActive(null);\n          return newState;\n        });\n      }\n    },\n    [active]\n  );\n\n  const onClearCell = (clueKey: string) => {\n    setGuesses((state: PlainObject) => {\n      const newState = { ...state };\n      delete newState[clueKey];\n      return newState;\n    });\n  };\n\n  const prepareSubmitGuesses = useCallback(() => {\n    const result = Object.entries(guesses).reduce((acc: PlainObject, [clueKey, value]) => {\n      const [, playerId] = getClueFromKey(clueKey);\n      acc[playerId] = value;\n      return acc;\n    }, {});\n\n    onSubmitGuesses({ guesses: result, choseRandomly });\n  }, [guesses, onSubmitGuesses, choseRandomly]);\n\n  // Select player's own clue\n  useEffectOnce(() => {\n    const playersOwnClue = clues.find((clue) => clue.playerId === user.id);\n\n    setGuesses({\n      [getClueKey(playersOwnClue)]: playersOwnClue?.coordinate,\n    });\n  });\n\n  const randomGuessThem = () => {\n    const usedCells = Object.values(guesses);\n    const usedClues = Object.keys(guesses);\n    setChoseRandomly(true);\n\n    const availableCells = shuffle(\n      grid.filter((cell) => cell.available && cell.playerId !== user.id && !usedCells.includes(cell.index))\n    );\n    const availableClues = clues.filter((clue) => !usedClues.includes(getClueKey(clue)));\n    const newGuesses = availableClues.reduce((acc: PlainObject, clueObj, index) => {\n      if (clueObj.playerId === user.id) {\n        acc[getClueKey(clueObj)] = clueObj.coordinate;\n      } else {\n        acc[getClueKey(clueObj)] = availableCells[index].index;\n      }\n      return acc;\n    }, {});\n    setGuesses({\n      ...newGuesses,\n      ...guesses,\n    });\n  };\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title>\n        <Translate pt=\"Decifre as dicas!\" en=\"Guess the cells!\" />\n      </Title>\n\n      <Clues clues={clues} onSelectClue={onSelectClue} active={active} guesses={guesses} />\n      <Instruction contained>\n        <Translate\n          pt=\"Clique em uma dica acima e em uma célula abaixo, ou vice-versa.\"\n          en=\"Click on a clue above then on a cell below, or vice-versa.\"\n        />\n      </Instruction>\n\n      <Space className=\"space-container\" align=\"center\">\n        <Button\n          size=\"large\"\n          type=\"primary\"\n          onClick={prepareSubmitGuesses}\n          disabled={Object.keys(guesses).length !== clues.length}\n        >\n          <Translate pt=\"Enviar respostas\" en=\"Send guesses\" />\n        </Button>\n        <Button size=\"large\" type=\"dashed\" onClick={randomGuessThem}>\n          <Translate pt=\"Desistir\" en=\"Give up\" />\n        </Button>\n      </Space>\n\n      <WordGrid\n        grid={grid}\n        user={user}\n        CellComponent={SelectableCell}\n        cellComponentProps={{ onSelectCell, onClearCell, active, guesses, clues, user }}\n      />\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitGuessesAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { GuessIcon } from 'icons/GuessIcon';\n// Components\nimport { Translate } from 'components/language';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { StepGuessing } from './StepGuessing';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\n\nfunction PhaseGuessing({ players, state, info }: PhaseProps) {\n  const { step, setStep } = useStep(0);\n  const user = useUser(players, state);\n\n  const onSubmitGuesses = useOnSubmitGuessesAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<GuessIcon />}\n      title={<Translate pt=\"Match!\" en=\"Combine!\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <Instruction>\n        <Translate\n          pt={\n            <>\n              Agora combine as dicas de cada jogador com as coordenadas corretas!\n              <br />\n              Basta clicar em uma das dicas no topo e então em uma das células da grade.\n            </>\n          }\n          en={\n            <>\n              Now match the clues from each player with the correct coordinates\n              <br />\n              Just click on one of the clues on top then in one of the cells in the grid.\n            </>\n          }\n        />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.CRUZA_PALAVRAS.GUESSING}>\n      <StepSwitcher step={step} conditions={[!user.isReady, !user.isReady]} players={players}>\n        {/* Step 0 */}\n        <StepGuessing\n          user={user}\n          grid={state.grid}\n          clues={state.clues}\n          onSubmitGuesses={onSubmitGuesses}\n          announcement={announcement}\n        />\n\n        {/* Step 1 */}\n        <></>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseGuessing;\n","// This icon file is generated automatically.\nvar CheckSquareFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM695.5 365.7l-210.6 292a31.8 31.8 0 01-51.7 0L308.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.2 0 19.9 4.9 25.9 13.3l71.2 98.8 157.2-218c6-8.3 15.6-13.3 25.9-13.3H689c6.5 0 10.3 7.4 6.5 12.7z\" } }] }, \"name\": \"check-square\", \"theme\": \"filled\" };\nexport default CheckSquareFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CheckSquareFilledSvg from \"@ant-design/icons-svg/es/asn/CheckSquareFilled\";\nimport AntdIcon from '../components/AntdIcon';\nvar CheckSquareFilled = function CheckSquareFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CheckSquareFilledSvg\n  }));\n};\nCheckSquareFilled.displayName = 'CheckSquareFilled';\nexport default /*#__PURE__*/React.forwardRef(CheckSquareFilled);","// This icon file is generated automatically.\nvar CloseSquareFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM676.1 657.9c4.4 5.2.7 13.1-6.1 13.1h-58.9c-4.7 0-9.2-2.1-12.3-5.7L512 561.8l-86.8 103.5c-3 3.6-7.5 5.7-12.3 5.7H354c-6.8 0-10.5-7.9-6.1-13.1L470.2 512 347.9 366.1A7.95 7.95 0 01354 353h58.9c4.7 0 9.2 2.1 12.3 5.7L512 462.2l86.8-103.5c3-3.6 7.5-5.7 12.3-5.7H670c6.8 0 10.5 7.9 6.1 13.1L553.8 512l122.3 145.9z\" } }] }, \"name\": \"close-square\", \"theme\": \"filled\" };\nexport default CloseSquareFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloseSquareFilledSvg from \"@ant-design/icons-svg/es/asn/CloseSquareFilled\";\nimport AntdIcon from '../components/AntdIcon';\nvar CloseSquareFilled = function CloseSquareFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CloseSquareFilledSvg\n  }));\n};\nCloseSquareFilled.displayName = 'CloseSquareFilled';\nexport default /*#__PURE__*/React.forwardRef(CloseSquareFilled);","import clsx from 'clsx';\nimport { orderBy } from 'lodash';\n//Design Resources\nimport { Space, Table } from 'antd';\nimport { CheckSquareFilled, CloseSquareFilled, TrophyOutlined, WarningOutlined } from '@ant-design/icons';\n// Hooks\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Utils\nimport { AVATARS as avatars } from 'utils/avatars';\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { PopoverRule } from 'components/rules';\nimport { WordGrid } from './components/WordGrid';\nimport { ClueCard } from './components/ClueCard';\nimport { PreviousClue } from './components/PreviousClue';\nimport { ScoringRule } from './components/RulesBlobs';\nimport { AvatarName } from 'components/avatars';\nimport { TimedButton } from 'components/buttons';\nimport { getMeanDuration } from 'utils/helpers';\nimport { PointsHighlight } from 'components/metrics/PointsHighlight';\n\nconst AVATARS: PlainObject = avatars;\n\ntype PlayersInCellProps = {\n  cellPlayers: {\n    playerId: PlayerId;\n    isCorrect?: boolean;\n    color?: string;\n  }[];\n  players: GamePlayers;\n};\n\nfunction PlayersInCell({ cellPlayers, players }: PlayersInCellProps) {\n  return (\n    <ul>\n      {cellPlayers.map(({ playerId, isCorrect }: any) =>\n        isCorrect ? (\n          <li\n            key={`players-in-cell-${playerId}`}\n            className={clsx(isCorrect && 'x-players-in-cell-player--correct')}\n          >\n            <AvatarName player={players[playerId]} size=\"small\" />\n          </li>\n        ) : undefined\n      )}\n    </ul>\n  );\n}\n\ntype ResultCellProps = {\n  cell: any;\n  clues: CruzaPalavrasClue[];\n  players: GamePlayers;\n  playerPerVotedCell: any;\n  colorCodedCluesPerPlayer: any;\n};\n\nfunction ResultCell({ cell, clues, players, playerPerVotedCell, colorCodedCluesPerPlayer }: ResultCellProps) {\n  const clue = clues.find((c) => c.coordinate === cell.index);\n  const cellPlayers = playerPerVotedCell[cell.index] ?? [];\n\n  if (clue) {\n    return (\n      <div>\n        <ClueCard\n          isMatched\n          clue={clue.clue}\n          color={colorCodedCluesPerPlayer[clue.playerId!]}\n          player={players[clue.playerId!]}\n        />\n        {Boolean(cellPlayers.length) && <PlayersInCell cellPlayers={cellPlayers} players={players} />}\n      </div>\n    );\n  }\n\n  if (cell.text) {\n    return <PreviousClue clue={cell.text} />;\n  }\n\n  return (\n    <span>\n      {Boolean(cellPlayers.length) && <PlayersInCell cellPlayers={cellPlayers} players={players} />}\n    </span>\n  );\n}\n\ntype AnswersListProps = {\n  players: GamePlayers;\n  grid: CruzaPalavraGrid;\n  correctCoordinatesPerPlayer: any;\n};\n\nfunction AnswersList({ players, grid, correctCoordinatesPerPlayer }: AnswersListProps) {\n  const { translate } = useLanguage();\n\n  const columns = [\n    {\n      title: translate('Jogador', 'Player'),\n      dataIndex: 'player',\n      key: 'player',\n      render: (data: any) => <AvatarName player={data} />,\n      sorter: (a: any, b: any) => (a.name > b.name ? -1 : 1),\n    },\n    {\n      title: translate('Achou que', 'Thought that'),\n      dataIndex: 'guess',\n      key: 'guess',\n      render: (guess: string) => guess.toUpperCase(),\n      sorter: (a: any, b: any) => (a > b ? -1 : 1),\n    },\n    {\n      title: translate('Era', 'Was'),\n      dataIndex: 'clue',\n      key: 'clue',\n      render: (clue: string) => clue.toUpperCase(),\n      sorter: (a: any, b: any) => (a > b ? -1 : 1),\n    },\n    {\n      title: translate('Resultado', 'Result'),\n      dataIndex: 'result',\n      key: 'result',\n      render: (value: any) =>\n        value ? (\n          <CheckSquareFilled style={{ color: 'green' }} />\n        ) : (\n          <CloseSquareFilled style={{ color: 'red' }} />\n        ),\n      sorter: (a: any, b: any) => (a > b ? -1 : 1),\n    },\n  ];\n\n  const parsedData = Object.values(players).map((player) => {\n    return Object.entries(player?.guesses ?? {}).reduce(\n      (acc: PlainObject, [guessedPlayerId, guessedCoordinate]: any) => {\n        if (guessedPlayerId === player.id) return acc;\n\n        const cell = grid[guessedCoordinate];\n\n        acc.push({\n          playerName: player.name,\n          player,\n          clue: `${cell.yText} + ${cell.xText}`,\n          guess: players[guessedPlayerId].clue,\n          result: correctCoordinatesPerPlayer?.[guessedCoordinate] === guessedPlayerId,\n        });\n\n        return acc;\n      },\n      []\n    );\n  });\n\n  const dataSource: any = orderBy(parsedData.flat(), ['playerName', 'guess'], ['asc', 'asc']);\n\n  return <Table size=\"small\" columns={columns} dataSource={dataSource} pagination={false} />;\n}\n\ntype BadCluesPlayersListProps = {\n  badCluesPlayersList: GamePlayer[];\n};\n\nfunction BadCluesPlayersList({ badCluesPlayersList }: BadCluesPlayersListProps) {\n  return (\n    <span>\n      {badCluesPlayersList.map((player, index) => (\n        <span key={`bad-clue-${player.id}-${index}`}>\n          <AvatarName player={player} key={`bad-clue-${player.id}`} size=\"small\" />\n          {badCluesPlayersList.length > 0 && index < badCluesPlayersList.length - 1 ? ', ' : ''}\n        </span>\n      ))}\n    </span>\n  );\n}\n\ntype StepRevealProps = {\n  players: GamePlayers;\n  grid: CruzaPalavraGrid;\n  user: GamePlayer;\n  clues: CruzaPalavrasClue[];\n  goToNextStep: GenericFunction;\n  whoGotNoPoints: PlayerId[];\n} & AnnouncementProps;\n\nexport function StepReveal({\n  grid,\n  user,\n  players,\n  clues,\n  goToNextStep,\n  whoGotNoPoints,\n  announcement,\n}: StepRevealProps) {\n  useTemporarilyHidePlayersBar();\n  const correctCoordinatesPerPlayer = clues.reduce((acc: PlainObject, clue) => {\n    acc[clue.coordinate] = clue.playerId;\n    return acc;\n  }, {});\n\n  const colorCodedCluesPerPlayer = clues.reduce((acc: PlainObject, clue) => {\n    acc[clue.playerId!] = AVATARS[players[clue.playerId!].avatarId].color;\n    return acc;\n  }, {});\n\n  const playerPerVotedCell = Object.values(players).reduce((acc: PlainObject, player) => {\n    Object.entries(player.guesses ?? {}).forEach(([playerId, coordinate]: any) => {\n      if (playerId !== player.id) {\n        if (acc[coordinate] === undefined) {\n          acc[coordinate] = [];\n        }\n        acc[coordinate].push({\n          playerId: player.id,\n          color: colorCodedCluesPerPlayer[playerId],\n          isCorrect: correctCoordinatesPerPlayer[coordinate] === playerId,\n        });\n      }\n    });\n\n    return acc;\n  }, {});\n\n  const whoGotNoPointsNames = whoGotNoPoints.map((playerId) => players[playerId]);\n  const playerCount = Object.keys(players).length;\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title>\n        <Translate pt=\"Resultado\" en=\"Results\" />\n      </Title>\n\n      <PopoverRule content={<ScoringRule playerCount={playerCount} />} />\n\n      {Boolean(whoGotNoPoints.length) && (\n        <Instruction contained>\n          <WarningOutlined style={{ color: 'red' }} />\n          <Translate\n            pt={\n              <>\n                Ninguém acertou a(s) dica(s) dadas por\n                <BadCluesPlayersList badCluesPlayersList={whoGotNoPointsNames} />, então ele(s) perde(m){' '}\n                <PointsHighlight type=\"negative\">- {playerCount}</PointsHighlight> pontos.\n              </>\n            }\n            en={\n              <>\n                Nobody got the clues given by\n                <BadCluesPlayersList badCluesPlayersList={whoGotNoPointsNames} />, so they lose{' '}\n                <PointsHighlight type=\"negative\">- {playerCount}</PointsHighlight> points.\n              </>\n            }\n          />\n        </Instruction>\n      )}\n\n      <WordGrid\n        grid={grid}\n        user={user}\n        CellComponent={ResultCell}\n        cellComponentProps={{ clues, players, playerPerVotedCell, colorCodedCluesPerPlayer }}\n      />\n\n      <Space className=\"space-container\" align=\"center\">\n        <TimedButton\n          duration={getMeanDuration(playerCount, 6, 40, 15) + 5}\n          icon={<TrophyOutlined />}\n          onExpire={goToNextStep}\n          onClick={goToNextStep}\n        >\n          <Translate pt=\"Ver Ranking\" en=\"See Ranking\" />\n        </TimedButton>\n      </Space>\n\n      <Title level={3} size=\"x-small\">\n        <Translate pt=\"Todas as respostas\" en=\"All Answers\" />\n      </Title>\n      <AnswersList correctCoordinatesPerPlayer={correctCoordinatesPerPlayer} players={players} grid={grid} />\n    </Step>\n  );\n}\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Components\nimport { Translate } from 'components/language';\nimport { PopoverRule } from 'components/rules';\nimport { ScoringRule } from './components/RulesBlobs';\nimport { StepRankingWrapper } from 'components/ranking';\nimport { VIPNextPhaseButton } from 'components/vip';\n\ntype StepRankingProps = {\n  players: GamePlayers;\n  playerCount: number;\n  round: GameRound;\n  ranking: GameRanking;\n  goToPreviousStep: GenericFunction;\n};\n\nexport function StepRanking({ players, playerCount, ranking, goToPreviousStep, round }: StepRankingProps) {\n  return (\n    <StepRankingWrapper\n      players={players}\n      ranking={ranking}\n      gainedPointsDescriptions={[\n        <Translate pt=\"Palpites corretos\" en=\"Correct guesses\" />,\n        <Translate\n          pt=\"Palpites que acertaram a célula de outra dica\"\n          en=\"Guesses that were placed in a cell for a different clue\"\n        />,\n        <Translate pt=\"Palpites recebidos corretamente\" en=\"Received correct guesses\" />,\n        <Translate\n          pt=\"Penalidade se ninguém acertou a sua dica\"\n          en=\"Penalty for nobody getting your clue correctly\"\n        />,\n      ]}\n    >\n      <PopoverRule content={<ScoringRule playerCount={playerCount} />} />\n\n      <Space className=\"space-container\" align=\"center\">\n        <Button onClick={goToPreviousStep}>\n          <Translate pt=\"Ver resultado novamente\" en=\"See results again\" />\n        </Button>\n      </Space>\n      <VIPNextPhaseButton round={round} />\n    </StepRankingWrapper>\n  );\n}\n","// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { RankIcon } from 'icons/RankIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { StepReveal } from './StepReveal';\nimport { StepRanking } from './StepRanking';\nimport { ScoringRule } from './components/RulesBlobs';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\n\nfunction PhaseReveal({ players, state, info }: PhaseProps) {\n  const { step, goToNextStep, goToPreviousStep } = useStep(0);\n  const user = useUser(players, state);\n\n  const playerCount = Object.keys(players).length;\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<RankIcon />}\n      title={<Translate pt=\"Resultado\" en=\"Results\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <ScoringRule playerCount={playerCount} />\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.CRUZA_PALAVRAS.REVEAL}>\n      <StepSwitcher step={step} conditions={[!user.isReady, !user.isReady, !user.isReady]} players={players}>\n        {/* Step 0 */}\n        <StepReveal\n          user={user}\n          grid={state.grid}\n          clues={state.clues}\n          goToNextStep={goToNextStep}\n          players={players}\n          whoGotNoPoints={state.whoGotNoPoints ?? []}\n          announcement={announcement}\n        />\n\n        {/* Step 1 */}\n        <StepRanking\n          players={players}\n          playerCount={playerCount}\n          round={state.round}\n          ranking={state.ranking}\n          goToPreviousStep={goToPreviousStep}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseReveal;\n","// Icons\nimport { TrophyIcon } from 'icons/TrophyIcon';\n// Components\nimport { GameOverWrapper } from 'components/game-over';\nimport { Achievements } from 'components/general/Achievements';\nimport achievementsReference from './utils/achievements';\n\nfunction PhaseGameOver({ state, info, players }: PhaseProps) {\n  return (\n    <GameOverWrapper info={info} state={state} players={players} announcementIcon={<TrophyIcon />}>\n      <Achievements players={players} achievements={state.achievements} reference={achievementsReference} />\n    </GameOverWrapper>\n  );\n}\n\nexport default PhaseGameOver;\n","import { ConfigProvider } from 'antd';\n// Constants\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport { LoadingPage } from 'components/loaders';\nimport PhaseClueWriting from './PhaseClueWriting';\nimport PhaseGuessing from './PhaseGuessing';\nimport PhaseReveal from './PhaseReveal';\nimport PhaseGameOver from './PhaseGameOver';\n// Sass\nimport './cruza-palavras.scss';\n\nfunction getActiveComponent(phase: string) {\n  // If phase is not defined, it is likely that the game is still loading\n  if (!phase) return LoadingPage;\n\n  switch (phase) {\n    case PHASES.DEFAULT.LOBBY:\n      return PhaseLobby;\n    case PHASES.DEFAULT.RULES:\n      return PhaseRules;\n    case PHASES.DEFAULT.SETUP:\n      return PhaseSetup;\n    case PHASES.CRUZA_PALAVRAS.CLUE_WRITING:\n      return PhaseClueWriting;\n    case PHASES.CRUZA_PALAVRAS.GUESSING:\n      return PhaseGuessing;\n    case PHASES.CRUZA_PALAVRAS.REVEAL:\n      return PhaseReveal;\n    case PHASES.DEFAULT.GAME_OVER:\n      return PhaseGameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionCruzaPalavras() {\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorPrimary: THEME_COLORS.FOREST,\n          colorLink: THEME_COLORS.FOREST,\n        },\n      }}\n    >\n      <Session gameCollection={GAME_COLLECTION.CRUZA_PALAVRAS} getActiveComponent={getActiveComponent} />\n    </ConfigProvider>\n  );\n}\n\nexport default SessionCruzaPalavras;\n","const ACHIEVEMENTS = {\n  BEST_CLUES: 'BEST_CLUES',\n  WORST_CLUES: 'WORST_CLUES',\n  BEST_GUESSER: 'BEST_GUESSER',\n  WORST_GUESSER: 'WORST_GUESSER',\n  CHOOSE_FOR_ME: 'CHOOSE_FOR_ME',\n  SHORTEST_WORDS: 'SHORTEST_WORDS',\n  LONGEST_WORDS: 'LONGEST_WORDS',\n  SAVIOR: 'SAVIOR',\n};\nexport const achievementsReference: AchievementReference = {\n  [ACHIEVEMENTS.BEST_CLUES]: {\n    icon: 'thumbs-up',\n    title: {\n      pt: 'Melhor Cruzador',\n      en: 'Best Mixer',\n    },\n    description: {\n      pt: 'Jogadores acertaram suas dicas mais vezes',\n      en: 'Players got their clues correctly the most',\n    },\n  },\n  [ACHIEVEMENTS.WORST_CLUES]: {\n    icon: '',\n    title: {\n      pt: 'Mais obscuro',\n      en: 'Most obscure',\n    },\n    description: {\n      pt: 'Foi possuído menos vezes',\n      en: 'Was possessed the least',\n    },\n  },\n  [ACHIEVEMENTS.BEST_GUESSER]: {\n    icon: 'check-mark',\n    title: {\n      pt: 'Melhor Adivinhador',\n      en: 'Best Guesser',\n    },\n    description: {\n      pt: 'Acertou as dicas mais vezes',\n      en: 'Got clues right the most',\n    },\n  },\n  [ACHIEVEMENTS.WORST_GUESSER]: {\n    icon: 'x',\n    title: {\n      pt: 'Pior Adivinhador',\n      en: 'Worst Guesser',\n    },\n    description: {\n      pt: 'Errou as dicas mais vezes',\n      en: 'Got clues wrong the most',\n    },\n  },\n  [ACHIEVEMENTS.LONGEST_WORDS]: {\n    icon: 'dialog',\n    title: {\n      pt: 'Mais Falador',\n      en: 'Best Speaker',\n    },\n    description: {\n      pt: 'Usou as dicas mais longas',\n      en: 'Used the longest words',\n    },\n  },\n  [ACHIEVEMENTS.SHORTEST_WORDS]: {\n    icon: 'minus',\n    title: {\n      pt: 'Mais Quieto',\n      en: 'Quieter',\n    },\n    description: {\n      pt: 'Usou as dias mais curtas',\n      en: 'Used the shortest words',\n    },\n  },\n  [ACHIEVEMENTS.SAVIOR]: {\n    icon: 'heart',\n    title: {\n      pt: 'O Salvador',\n      en: 'The Savior',\n    },\n    description: {\n      pt: 'Foi o único a acertar a dica de alguém mais vezes, impedindo eles de perderem pontos',\n      en: 'Guessed a clue by themselves the most preventing a player to lose points',\n    },\n  },\n\n  [ACHIEVEMENTS.CHOOSE_FOR_ME]: {\n    icon: 'dice',\n    title: {\n      pt: 'Menos Brasileiro',\n      en: 'The Shirker',\n    },\n    description: {\n      pt: 'Apertou o botão Chutar Restantes mais vezes',\n      en: \"Pressed 'Guess for me' the most\",\n    },\n  },\n};\n\nexport default achievementsReference;\n","import { useMemo } from 'react';\nimport { useDimensions } from './useDimensions';\n\n/**\n * Get a card width in px based on the window size of the user's browser\n * @param quantity how many cards should be fitted in the page screen width\n * @param gap total value of padding and margin on the left and right of the card\n * @param minWidth minimum width of a card\n * @param maxWidth maximum width of a card\n * @param margin the outer margin of the container that should be removed from the width\n * @param containerId the id of the container element where the cards will live in which is the total width\n * @returns\n */\nexport function useCardWidth(\n  quantity: number,\n  gap = 32,\n  minWidth = 120,\n  maxWidth = 300,\n  margin = 0,\n  containerId?: string\n): number {\n  const [width] = useDimensions(containerId);\n  return useMemo(() => {\n    const value = Math.min(Math.max(Math.floor((width - margin) / quantity) - gap, minWidth), maxWidth);\n    return Number.isNaN(value) ? minWidth : value;\n  }, [width, quantity, gap, minWidth, maxWidth, margin]);\n}\n","export function GridIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#f9ad32\"\n        d=\"M50.624 50.623h410.752v410.754H50.624V50.623zm40.624 40.625v329.504h329.505V91.248H91.248z\"\n      ></path>\n      <path\n        fill=\"#f0f0fb\"\n        d=\"M91.25 91.25h329.5v329.5H91.25zM420.75 10H502v81.25h-81.25zM10 10h81.25v81.25H10zm0 410.75h81.25V502H10zm410.75 0H502V502h-81.25z\"\n      ></path>\n      <path d=\"M451.376 139.434v.475c0 5.522 4.477 10 10 10s10-4.478 10-10v-.475c0-5.522-4.477-10-10-10s-10 4.477-10 10zm-78.809 311.943h-.475c-5.523 0-10 4.478-10 10s4.477 10 10 10h.475c5.523 0 10-4.478 10-10s-4.477-10-10-10zM60.624 372.566v-.475c0-5.522-4.477-10-10-10s-10 4.478-10 10v.475c0 5.522 4.477 10 10 10 5.522 0 10-4.477 10-10zm78.809-311.943h.475c5.523 0 10-4.477 10-10s-4.477-10-10-10h-.475c-5.523 0-10 4.478-10 10s4.477 10 10 10z\"></path>\n      <path d=\"M512 91.248V10c0-5.522-4.477-10-10-10h-81.247c-5.523 0-10 4.478-10 10v30.623H168.992c-5.523 0-10 4.478-10 10s4.477 10 10 10h241.761v20.625H101.248V10c0-5.522-4.477-10-10-10H10C4.477 0 0 4.478 0 10v81.248c0 5.523 4.477 10 10 10h30.623v241.76c0 5.522 4.477 10 10 10s10-4.478 10-10v-241.76h20.624v309.504H10c-5.523 0-10 4.478-10 10V502c0 5.522 4.477 10 10 10h81.248c5.523 0 10-4.478 10-10v-30.623h241.76c5.523 0 10-4.478 10-10s-4.477-10-10-10c0 0 .001 0 0 0h-241.76v-20.625h309.505V502c0 5.522 4.477 10 10 10H502c5.523 0 10-4.478 10-10v-81.248c0-5.522-4.477-10-10-10h-30.623v-241.76c0-5.522-4.477-10-10-10s-10 4.478-10 10v241.76h-20.624V101.248H502c5.523 0 10-4.477 10-10zM410.752 410.752h-62.376v-62.377h62.376v62.377zM101.248 101.248h62.377v62.375h-62.377v-62.375zM348.376 266h62.376v62.375h-62.376V266zm-20 62.375H266V266h62.376v62.375zm20-82.375v-62.377h62.376V246h-62.376zm-20 0H266v-62.377h62.376V246zm-144.751-62.377h62.376V246h-62.376v-62.377zm-20 62.377h-62.377v-62.377h62.377V246zm102.376-82.377v-62.375h62.376v62.375h-62.376zm-20 0h-62.376v-62.375h62.376v62.375zM101.248 266h62.377v62.375h-62.377V266zm82.377 0h62.376v62.375h-62.376V266zm62.376 82.375v62.377h-62.376v-62.377h62.376zm20 0h62.376v62.377h-62.376v-62.377zm144.751-184.752h-62.376v-62.375h62.376v62.375zm-360.128-123c-5.523 0-10 4.478-10 10v30.625H20V20h61.248v61.248H60.624V50.623c0-5.522-4.478-10-10-10zm0 430.754h30.624V492H20v-61.248h61.248v20.625H50.624c-5.523 0-10 4.478-10 10s4.477 10 10 10zm50.624-123.002h62.377v62.377h-62.377v-62.377zm360.128 123.002c5.523 0 10-4.478 10-10v-30.625H492V492h-61.247v-61.248h20.624v30.625c-.001 5.522 4.476 10 9.999 10zM492 81.248h-61.247V60.623h30.624c5.523 0 10-4.477 10-10s-4.477-10-10-10h-30.624V20H492v61.248z\"></path>\n    </svg>\n  );\n}\n","export function GuessIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ff7b79\"\n        d=\"M440.447 428.072c16.619-20.939 26.55-47.426 26.55-76.235 0-10.548-1.332-20.784-3.835-30.552C486.593 305.468 502 278.671 502 248.273c0-46.528-36.106-84.599-81.824-87.786 8.812-12.864 13.976-28.424 13.976-45.194 0-44.226-35.853-80.079-80.079-80.079-16.63 0-32.075 5.072-44.876 13.75C291.326 25.298 262.961 10 231.021 10c-52.976 0-96.118 42.078-97.843 94.635a90.44 90.44 0 00-20.196-2.297c-49.845 0-90.252 40.407-90.252 90.252 0 23.113 8.698 44.187 22.987 60.153C24.019 269.226 10 295.294 10 324.644c0 49.845 40.407 90.252 90.252 90.252a89.959 89.959 0 0034.438-6.82c7.846 41.85 44.552 73.528 88.68 73.528 23.152 0 44.26-8.727 60.236-23.059 17.893 10.194 38.596 16.021 60.662 16.021 13.373 0 26.243-2.147 38.293-6.101C397.207 488.77 421.051 502 448 502a80.272 80.272 0 0036.406-8.691c-24.354-12.346-41.598-36.675-43.959-65.237z\"\n      ></path>\n      <path\n        fill=\"#80b4ff\"\n        d=\"M256 321.511c-12.15 0-22-9.85-22-22v-29.93c0-20.685 13.741-39.232 33.416-45.103 17.141-5.115 28.817-21.21 28.395-39.14-.492-20.923-17.915-38.346-38.837-38.838-10.842-.264-21.061 3.765-28.795 11.319-7.739 7.559-12.001 17.677-12.001 28.491 0 12.15-9.85 22-22 22s-22-9.85-22-22c0-22.763 8.969-44.061 25.256-59.968 16.282-15.904 37.795-24.35 60.575-23.831 21.541.507 41.857 9.239 57.205 24.586 15.347 15.347 24.079 35.663 24.586 57.205.888 37.708-23.704 71.567-59.802 82.339-1.157.345-1.997 1.582-1.997 2.94v29.93c-.001 12.15-9.851 22-22.001 22z\"\n      ></path>\n      <circle cx=\"256\" cy=\"387.511\" r=\"22\" fill=\"#80b6ff\"></circle>\n      <path d=\"M448 512c-26.624 0-51.955-11.846-69.1-32.008a132.764 132.764 0 01-34.632 4.574c-20.67 0-41.073-4.833-59.431-14.027a100.05 100.05 0 01-61.467 21.065c-44.32 0-82.912-29.039-95.741-70.502a99.87 99.87 0 01-27.377 3.794c-14.572 0-28.629-3.061-41.78-9.097-5.02-2.304-7.221-8.241-4.917-13.26 2.304-5.02 8.239-7.223 13.26-4.917 10.515 4.826 21.765 7.273 33.437 7.273 10.584 0 20.886-2.04 30.619-6.061a9.997 9.997 0 0113.648 7.399c7.1 37.878 40.262 65.371 78.851 65.371a80.093 80.093 0 0053.559-20.503 10.002 10.002 0 0111.628-1.245c16.892 9.624 36.156 14.71 55.711 14.71 12.011 0 23.846-1.885 35.175-5.603a10 10 0 0111.228 3.651C403.942 481.015 425.374 492 448 492a70.69 70.69 0 0014.335-1.451c-18.115-15.394-29.869-37.631-31.854-61.653a9.998 9.998 0 012.133-7.04c15.951-20.097 24.382-44.309 24.382-70.019 0-9.505-1.185-18.949-3.522-28.07a10 10 0 014.092-10.77C479.128 298.442 492 274.247 492 248.273c0-40.797-31.854-74.976-72.519-77.811a10 10 0 01-7.555-15.627c7.998-11.676 12.226-25.349 12.226-39.542 0-38.642-31.437-70.079-70.079-70.079-14.081 0-27.659 4.159-39.265 12.027a10 10 0 01-13.592-2.251C284.425 32.753 258.84 20 231.021 20c-47.698 0-86.285 37.32-87.849 84.963a10 10 0 01-12.224 9.421 80.714 80.714 0 00-17.966-2.045c-44.251 0-80.252 36-80.252 80.251a80.105 80.105 0 0020.438 53.485 10 10 0 01-1.403 14.631C31.578 276.042 20 299.346 20 324.644c0 3.576.237 7.171.704 10.684.728 5.475-3.12 10.503-8.595 11.23-5.479.732-10.503-3.12-11.231-8.595A101.374 101.374 0 010 324.644c0-28.153 11.475-54.328 31.801-73.246a100.049 100.049 0 01-19.071-58.809c0-55.279 44.973-100.251 100.252-100.251 3.716 0 7.446.211 11.165.631 3.278-23.739 14.329-45.625 31.771-62.539C176.155 10.807 202.827 0 231.021 0c31.109 0 59.94 12.989 80.405 35.933 13.057-7.035 27.633-10.718 42.647-10.718 49.67 0 90.079 40.409 90.079 90.079 0 13.063-2.789 25.788-8.148 37.475C479.656 162.844 512 202.2 512 248.273a97.95 97.95 0 01-37.623 77.212 133.55 133.55 0 012.62 26.352c0 28.874-9.034 56.146-26.172 79.144 3.133 22.718 17.472 42.95 38.104 53.409a10 10 0 010 17.838C476.138 508.712 462.368 512 448 512z\"></path>\n      <path d=\"M256 331.511c-17.645 0-32-14.355-32-32v-29.93c0-25.072 16.677-47.56 40.557-54.686 12.832-3.829 21.573-15.887 21.257-29.322-.369-15.664-13.412-28.707-29.076-29.076-8.09-.192-15.773 2.812-21.572 8.476-5.796 5.661-8.988 13.239-8.988 21.337 0 17.645-14.355 32-32 32s-32-14.355-32-32c0-25.479 10.04-49.317 28.269-67.121 18.205-17.782 42.281-27.246 67.79-26.675 24.131.568 46.875 10.339 64.048 27.512s26.944 39.917 27.512 64.04c.951 40.387-24.216 76.83-61.796 90.458v24.985C288 317.156 273.645 331.511 256 331.511zm-.035-195.023c.417 0 .833.005 1.252.015 26.173.616 47.975 22.417 48.591 48.6.528 22.425-14.083 42.558-35.532 48.958-15.471 4.616-26.276 19.223-26.276 35.52v29.93c0 6.617 5.383 12 12 12s12-5.383 12-12v-29.93c0-5.768 3.758-10.917 9.139-12.522 31.789-9.486 53.445-39.308 52.663-72.521-.447-18.96-8.139-36.848-21.66-50.369s-31.409-21.213-50.369-21.66c-20.078-.452-39.028 6.997-53.352 20.988-14.344 14.01-22.243 32.766-22.243 52.814 0 6.617 5.383 12 12 12s12-5.383 12-12c0-13.53 5.332-26.189 15.013-35.645 9.389-9.171 21.695-14.178 34.774-14.178zM256 419.511c-17.645 0-32-14.355-32-32s14.355-32 32-32 32 14.355 32 32-14.355 32-32 32zm0-44c-6.617 0-12 5.383-12 12s5.383 12 12 12 12-5.383 12-12-5.383-12-12-12zM27.71 388.35c-2.63 0-5.21-1.07-7.07-2.93a10.093 10.093 0 01-2.93-7.07c0-2.64 1.07-5.211 2.93-7.08a10.068 10.068 0 017.07-2.92c2.63 0 5.21 1.06 7.07 2.92s2.93 4.44 2.93 7.08c0 2.63-1.07 5.21-2.93 7.07s-4.44 2.93-7.07 2.93z\"></path>\n    </svg>\n  );\n}\n","export function RankIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fb5f7a\"\n        d=\"M305.709 123.258L256 87.857l-49.709 35.401a24.745 24.745 0 00-10.391 20.157v54.673c0 10.884 8.823 19.707 19.707 19.707h80.787c10.884 0 19.707-8.823 19.707-19.707v-54.673a24.746 24.746 0 00-10.392-20.157z\"\n      ></path>\n      <path\n        fill=\"#f74455\"\n        d=\"M316.1 143.42v54.67c0 10.88-8.82 19.71-19.71 19.71h-30.13c10.89 0 19.71-8.83 19.71-19.71v-54.67c0-8.01-3.87-15.52-10.39-20.16l-34.64-24.67L256 87.86l49.71 35.4a24.738 24.738 0 0110.39 20.16z\"\n      ></path>\n      <circle cx=\"256\" cy=\"53.83\" r=\"46.33\" fill=\"#fb5f7a\"></circle>\n      <path\n        fill=\"#f74455\"\n        d=\"M302.33 53.83c0 25.59-20.74 46.33-46.33 46.33-5.27 0-10.34-.88-15.06-2.5 18.19-6.26 31.26-23.52 31.26-43.83S259.13 16.26 240.94 10c4.72-1.62 9.79-2.5 15.06-2.5 25.59 0 46.33 20.74 46.33 46.33z\"\n      ></path>\n      <path\n        fill=\"#99e6fc\"\n        d=\"M395.942 258.439l-49.709-35.401-49.709 35.401a24.746 24.746 0 00-10.391 20.158v54.673c0 10.884 8.823 19.707 19.707 19.707h80.787c10.884 0 19.707-8.823 19.707-19.707v-54.673a24.747 24.747 0 00-10.392-20.158z\"\n      ></path>\n      <path\n        fill=\"#62dbfb\"\n        d=\"M406.333 278.601v54.67c0 10.88-8.82 19.71-19.71 19.71h-30.13c10.89 0 19.71-8.83 19.71-19.71v-54.67c0-8.01-3.87-15.52-10.39-20.16l-34.64-24.67 15.06-10.73 49.71 35.4a24.738 24.738 0 0110.39 20.16z\"\n      ></path>\n      <circle cx=\"346.233\" cy=\"189.011\" r=\"46.33\" fill=\"#99e6fc\"></circle>\n      <path\n        fill=\"#62dbfb\"\n        d=\"M392.563 189.011c0 25.59-20.74 46.33-46.33 46.33-5.27 0-10.34-.88-15.06-2.5 18.19-6.26 31.26-23.52 31.26-43.83s-13.07-37.57-31.26-43.83c4.72-1.62 9.79-2.5 15.06-2.5 25.59 0 46.33 20.74 46.33 46.33z\"\n      ></path>\n      <path\n        fill=\"#99e6fc\"\n        d=\"M215.477 258.439l-49.709-35.401-49.709 35.401a24.746 24.746 0 00-10.391 20.158v54.673c0 10.884 8.823 19.707 19.707 19.707h80.787c10.884 0 19.707-8.823 19.707-19.707v-54.673a24.752 24.752 0 00-10.392-20.158z\"\n      ></path>\n      <path\n        fill=\"#62dbfb\"\n        d=\"M225.867 278.601v54.67c0 10.88-8.82 19.71-19.71 19.71h-30.13c10.89 0 19.71-8.83 19.71-19.71v-54.67c0-8.01-3.87-15.52-10.39-20.16l-34.64-24.67 15.06-10.73 49.71 35.4a24.738 24.738 0 0110.39 20.16z\"\n      ></path>\n      <circle cx=\"165.767\" cy=\"189.011\" r=\"46.33\" fill=\"#99e6fc\"></circle>\n      <path\n        fill=\"#62dbfb\"\n        d=\"M212.097 189.011c0 25.59-20.74 46.33-46.33 46.33-5.27 0-10.34-.88-15.06-2.5 18.19-6.26 31.26-23.52 31.26-43.83s-13.07-37.57-31.26-43.83c4.72-1.62 9.79-2.5 15.06-2.5 25.59 0 46.33 20.74 46.33 46.33z\"\n      ></path>\n      <path\n        fill=\"#ffe177\"\n        d=\"M486.175 409.962l-49.709-35.401-49.709 35.401a24.746 24.746 0 00-10.391 20.158v54.673c0 10.884 8.823 19.707 19.707 19.707h80.787c10.884 0 19.707-8.823 19.707-19.707V430.12a24.747 24.747 0 00-10.392-20.158z\"\n      ></path>\n      <path\n        fill=\"#ffd15b\"\n        d=\"M496.566 430.124v54.67c0 10.88-8.82 19.71-19.71 19.71h-30.13c10.89 0 19.71-8.83 19.71-19.71v-54.67c0-8.01-3.87-15.52-10.39-20.16l-34.64-24.67 15.06-10.73 49.71 35.4a24.738 24.738 0 0110.39 20.16z\"\n      ></path>\n      <circle cx=\"436.466\" cy=\"340.535\" r=\"46.33\" fill=\"#ffe177\"></circle>\n      <path\n        fill=\"#ffd15b\"\n        d=\"M482.796 340.534c0 25.59-20.74 46.33-46.33 46.33-5.27 0-10.34-.88-15.06-2.5 18.19-6.26 31.26-23.52 31.26-43.83s-13.07-37.57-31.26-43.83c4.72-1.62 9.79-2.5 15.06-2.5 25.59 0 46.33 20.74 46.33 46.33z\"\n      ></path>\n      <path\n        fill=\"#ffe177\"\n        d=\"M305.709 409.962L256 374.561l-49.709 35.401A24.746 24.746 0 00195.9 430.12v54.673c0 10.884 8.823 19.707 19.707 19.707h80.787c10.884 0 19.707-8.823 19.707-19.707V430.12a24.747 24.747 0 00-10.392-20.158z\"\n      ></path>\n      <path\n        fill=\"#ffd15b\"\n        d=\"M316.1 430.124v54.67c0 10.88-8.82 19.71-19.71 19.71h-30.13c10.89 0 19.71-8.83 19.71-19.71v-54.67c0-8.01-3.87-15.52-10.39-20.16l-34.64-24.67 15.06-10.73 49.71 35.4a24.738 24.738 0 0110.39 20.16z\"\n      ></path>\n      <circle cx=\"256\" cy=\"340.535\" r=\"46.33\" fill=\"#ffe177\"></circle>\n      <path\n        fill=\"#ffd15b\"\n        d=\"M302.33 340.534c0 25.59-20.74 46.33-46.33 46.33-5.27 0-10.34-.88-15.06-2.5 18.19-6.26 31.26-23.52 31.26-43.83s-13.07-37.57-31.26-43.83c4.72-1.62 9.79-2.5 15.06-2.5 25.59 0 46.33 20.74 46.33 46.33z\"\n      ></path>\n      <path\n        fill=\"#ffe177\"\n        d=\"M125.244 409.962l-49.709-35.401-49.709 35.401a24.746 24.746 0 00-10.391 20.158v54.673c0 10.884 8.823 19.707 19.707 19.707h80.787c10.884 0 19.707-8.823 19.707-19.707V430.12a24.75 24.75 0 00-10.392-20.158z\"\n      ></path>\n      <path\n        fill=\"#ffd15b\"\n        d=\"M135.634 430.124v54.67c0 10.88-8.82 19.71-19.71 19.71h-30.13c10.89 0 19.71-8.83 19.71-19.71v-54.67c0-8.01-3.87-15.52-10.39-20.16l-34.64-24.67 15.06-10.73 49.71 35.4a24.738 24.738 0 0110.39 20.16z\"\n      ></path>\n      <circle cx=\"75.534\" cy=\"340.535\" r=\"46.33\" fill=\"#ffe177\"></circle>\n      <path\n        fill=\"#ffd15b\"\n        d=\"M121.864 340.534c0 25.59-20.74 46.33-46.33 46.33-5.27 0-10.34-.88-15.06-2.5 18.19-6.26 31.26-23.52 31.26-43.83s-13.07-37.57-31.26-43.83c4.72-1.62 9.79-2.5 15.06-2.5 25.59 0 46.33 20.74 46.33 46.33z\"\n      ></path>\n      <path d=\"M490.525 403.853l-25.175-17.929c14.982-9.568 24.946-26.332 24.946-45.389 0-29.682-24.148-53.83-53.83-53.83a53.5 53.5 0 00-22.632 5.006v-13.115a32.308 32.308 0 00-13.541-26.267l-25.177-17.928c14.983-9.568 24.948-26.332 24.948-45.39 0-29.682-24.148-53.83-53.831-53.83a53.497 53.497 0 00-22.801 5.083c-.909-9.214-5.756-17.692-13.372-23.115L284.884 99.22c14.983-9.568 24.946-26.332 24.946-45.389C309.83 24.148 285.682 0 256 0s-53.83 24.148-53.83 53.831c0 19.059 9.965 35.824 24.95 45.392l-25.18 17.926c-7.616 5.424-12.463 13.902-13.372 23.115a53.49 53.49 0 00-22.801-5.083c-5.992 0-11.881.979-17.501 2.911a7.499 7.499 0 104.875 14.185 38.767 38.767 0 0112.626-2.097c21.411 0 38.83 17.419 38.83 38.83s-17.419 38.831-38.83 38.831-38.831-17.419-38.831-38.831c0-6.247 1.436-12.208 4.268-17.717a7.5 7.5 0 10-13.342-6.856c-3.877 7.544-5.926 16.041-5.926 24.574 0 19.059 9.965 35.824 24.95 45.392l-25.18 17.926a32.306 32.306 0 00-13.541 26.267v13.115a53.485 53.485 0 00-22.632-5.006c-29.682 0-53.83 24.148-53.83 53.83 0 19.057 9.963 35.821 24.946 45.389l-25.175 17.929a32.304 32.304 0 00-13.54 26.267v54.673C7.934 499.795 20.139 512 35.141 512h80.787c15.002 0 27.207-12.205 27.207-27.208v-11.664c0-4.142-3.357-7.5-7.5-7.5s-7.5 3.358-7.5 7.5v11.664c0 6.731-5.476 12.208-12.207 12.208H35.141c-6.731 0-12.207-5.476-12.207-12.208V430.12a17.276 17.276 0 017.242-14.048l32.632-23.239c6.901 1.642 16.289 2.274 25.454 0l32.631 23.24a17.276 17.276 0 017.242 14.048v7.251c0 4.142 3.357 7.5 7.5 7.5s7.5-3.358 7.5-7.5v-7.251a32.303 32.303 0 00-13.541-26.267l-25.175-17.929c9.444-6.032 16.886-14.922 21.1-25.447h80.468c4.215 10.526 11.656 19.416 21.101 25.447l-25.176 17.929a32.303 32.303 0 00-13.54 26.267v54.673c0 15.002 12.205 27.208 27.207 27.208h80.787c15.002 0 27.207-12.205 27.207-27.208V430.12a32.303 32.303 0 00-13.541-26.267l-25.175-17.929c14.982-9.568 24.946-26.332 24.946-45.389 0-15.033-6.201-28.639-16.171-38.414v-23.524a17.28 17.28 0 017.241-14.048l32.641-23.238c6.899 1.641 16.281 2.271 25.442-.001l32.635 23.238a17.282 17.282 0 017.242 14.049v23.498c-9.986 9.778-16.198 23.394-16.198 38.44 0 1.667.087 3.313.236 4.942h-44.226c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h47.836c4.215 10.526 11.656 19.416 21.1 25.447l-25.175 17.929a32.303 32.303 0 00-13.541 26.267v54.673c0 15.002 12.205 27.208 27.207 27.208h80.787c15.002 0 27.207-12.205 27.207-27.208V430.12c0-10.41-5.062-20.23-13.541-26.267zM217.17 53.831C217.17 32.419 234.589 15 256 15s38.83 17.419 38.83 38.831-17.419 38.83-38.83 38.83-38.83-17.419-38.83-38.83zm-13.771 96.74v-7.156a17.274 17.274 0 017.241-14.047l32.641-23.238c6.9 1.641 16.282 2.271 25.445-.002l32.632 23.24a17.275 17.275 0 017.242 14.048v7.156c-9.986 9.778-16.198 23.394-16.198 38.44a53.53 53.53 0 004.389 21.27c-1.4.029-80.329.028-81.583 0a53.525 53.525 0 004.389-21.269c.001-15.048-6.212-28.665-16.198-38.442zM36.704 340.535c0-21.411 17.419-38.83 38.83-38.83s38.83 17.419 38.83 38.83-17.419 38.831-38.83 38.831-38.83-17.42-38.83-38.831zm92.424 4.942c1.766-14.97-5.012-33.199-15.962-43.382v-23.498a17.28 17.28 0 017.241-14.048l32.641-23.238c6.899 1.641 16.282 2.272 25.445-.002l32.632 23.239a17.282 17.282 0 017.242 14.049v23.471c-10.717 10.473-17.63 26.704-15.99 43.409zm172.203 70.594a17.276 17.276 0 017.242 14.048v54.673c0 6.731-5.476 12.208-12.207 12.208h-80.787c-6.731 0-12.207-5.476-12.207-12.208V430.12a17.278 17.278 0 017.241-14.048l32.633-23.239c6.9 1.642 16.288 2.274 25.453 0zm-6.528-75.536c0 21.411-17.419 38.831-38.83 38.831-21.31-.228-38.682-17.17-38.831-38.831 0-21.411 17.42-38.83 38.831-38.83s38.83 17.419 38.83 38.83zm-2.63-88.205a32.306 32.306 0 00-13.541 26.267v13.127a53.485 53.485 0 00-22.659-5.019 53.484 53.484 0 00-22.604 4.994v-13.102a32.308 32.308 0 00-13.541-26.267l-25.175-17.929a54.259 54.259 0 0012.134-10.586 27.154 27.154 0 008.82 1.481h80.787c3.033 0 6.002-.516 8.82-1.482a54.225 54.225 0 0012.139 10.589zm15.229-63.319c0-21.411 17.419-38.83 38.83-38.83s38.831 17.419 38.831 38.83-17.42 38.831-38.831 38.831-38.83-17.42-38.83-38.831zm129.064 112.694c21.411 0 38.83 17.419 38.83 38.83s-17.419 38.831-38.83 38.831-38.83-17.419-38.83-38.831 17.419-38.83 38.83-38.83zm52.6 183.087c0 6.731-5.476 12.208-12.207 12.208h-80.787c-6.731 0-12.207-5.476-12.207-12.208V430.12a17.276 17.276 0 017.242-14.048l32.632-23.239c6.901 1.642 16.288 2.274 25.453 0l32.631 23.24a17.276 17.276 0 017.242 14.048v54.671z\"></path>\n    </svg>\n  );\n}\n","export function StarIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffb820\"\n        d=\"M491.64 188.725l-153.53-22.31-68.66-139.12c-2.75-5.57-8.1-8.36-13.45-8.36l.02 400.2 137.3 72.19c11.01 5.78 23.86-3.56 21.76-15.81l-26.22-152.92 111.09-108.29c8.91-8.68 3.99-23.79-8.31-25.58z\"\n      ></path>\n      <path\n        fill=\"#ffd06a\"\n        d=\"M356.62 312.125s23.68 138.03 23.76 138.49c-.08-.01-122.45-31-124.36-31.48-.02-.01-137.34 72.19-137.34 72.19-11.01 5.78-23.86-3.56-21.76-15.81l26.22-152.92-111.09-108.29c-8.91-8.68-3.99-23.79 8.31-25.58l153.53-22.31 68.66-139.12c2.75-5.57 8.1-8.36 13.45-8.36l62.19 174.9 139.06 20.21z\"\n      ></path>\n      <path d=\"M510.883 196.615c-2.666-8.204-9.625-14.07-18.16-15.311l-149.632-21.743-66.918-135.588c-3.817-7.735-11.547-12.54-20.173-12.54s-16.356 4.805-20.173 12.54L168.91 159.561 19.278 181.305c-8.537 1.24-15.495 7.106-18.161 15.311s-.484 17.04 5.693 23.062l108.274 105.541-9.911 57.786a7.501 7.501 0 006.124 8.66 7.499 7.499 0 008.66-6.125l10.578-61.672a7.502 7.502 0 00-2.157-6.639L17.28 208.934c-2.089-2.036-2.798-4.909-1.897-7.684.902-2.775 3.164-4.683 6.052-5.103l153.534-22.31a7.498 7.498 0 005.647-4.103l68.662-139.125c1.292-2.617 3.804-4.179 6.722-4.179s5.431 1.562 6.722 4.179l68.663 139.125a7.5 7.5 0 005.647 4.103l153.534 22.31c2.888.42 5.15 2.327 6.051 5.102.902 2.775.193 5.648-1.896 7.685L383.622 317.228a7.499 7.499 0 00-2.157 6.639l26.227 152.913c.494 2.876-.621 5.617-2.982 7.332-2.361 1.714-5.312 1.929-7.895.57L259.49 412.487a7.504 7.504 0 00-6.98 0l-137.325 72.195c-2.583 1.358-5.535 1.144-7.894-.57-2.361-1.715-3.476-4.456-2.982-7.332l10.578-61.673a7.501 7.501 0 00-6.124-8.66 7.501 7.501 0 00-8.66 6.125l-10.578 61.673c-1.458 8.502 1.971 16.933 8.95 22.003 3.943 2.865 8.557 4.32 13.201 4.32a22.51 22.51 0 0010.49-2.608L256 427.6l133.834 70.36c7.635 4.014 16.713 3.357 23.692-1.712 6.979-5.07 10.408-13.502 8.949-22.003l-25.56-149.027L505.19 219.677c6.177-6.022 8.359-14.859 5.693-23.062z\"></path>\n    </svg>\n  );\n}\n","export function TrophyIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M397.763 87.5h-98.509v213.476h98.509c58.855 0 106.737-47.882 106.737-106.738S456.618 87.5 397.763 87.5zm0 183.476h-68.509V117.5h68.509c42.381 0 76.738 34.357 76.738 76.738-.001 42.381-34.357 76.738-76.738 76.738zM114.237 87.5C55.382 87.5 7.5 135.382 7.5 194.238s47.882 106.738 106.737 106.738h98.509V87.5zm68.509 183.476h-68.509c-42.381 0-76.738-34.357-76.738-76.738S71.856 117.5 114.237 117.5h68.509zM314 419.5H198l15-91h86z\"\n      ></path>\n      <path fill=\"#fee97d\" d=\"M299 328.5h-30l15 91h30z\"></path>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M382.221 504.5H129.779a7 7 0 01-7-7v-11.629c0-22.091 17.909-40 40-40h186.442c22.091 0 40 17.909 40 40V497.5a7 7 0 01-7 7z\"\n      ></path>\n      <path\n        fill=\"#fee97d\"\n        d=\"M349.221 445.871h-30c22.092 0 40 17.909 40 40V497.5a7 7 0 01-7 7h30a7 7 0 007-7v-11.629c0-22.092-17.909-40-40-40zm-5 0H167.779v-3.629c0-22.091 17.909-40 40-40h96.442c22.091 0 40 17.909 40 40z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M304.221 402.241h-30c22.092 0 40 17.909 40 40v3.629h30v-3.629c0-22.091-17.909-40-40-40z\"\n      ></path>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M411.5 57.5h-311c-13.807 0-25-11.193-25-25s11.193-25 25-25h311c13.807 0 25 11.193 25 25s-11.193 25-25 25z\"\n      ></path>\n      <path\n        fill=\"#fee97d\"\n        d=\"M411.5 7.5h-30c13.807 0 25 11.193 25 25s-11.193 25-25 25h30c13.807 0 25-11.193 25-25s-11.193-25-25-25zM256 362.5c-83.119 0-150.5-67.381-150.5-150.5V57.5h301V212c0 83.119-67.381 150.5-150.5 150.5z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M376.5 57.5V212c0 78.056-59.424 142.229-135.5 149.757 4.934.488 9.937.743 15 .743 83.119 0 150.5-67.381 150.5-150.5V57.5z\"\n      ></path>\n      <circle cx=\"256\" cy=\"207.96\" r=\"94.169\" fill=\"#fff\"></circle>\n      <path\n        fill=\"#fee97d\"\n        d=\"M262.277 154.391l13.139 26.623a7 7 0 005.271 3.829l29.38 4.269c5.742.834 8.034 7.89 3.879 11.94l-21.26 20.723a6.998 6.998 0 00-2.013 6.196l5.019 29.261c.981 5.718-5.021 10.079-10.157 7.379l-26.278-13.815a7.001 7.001 0 00-6.515 0l-26.278 13.815c-5.135 2.7-11.137-1.661-10.157-7.379l5.019-29.261a7 7 0 00-2.013-6.196l-21.26-20.723c-4.155-4.05-1.862-11.106 3.879-11.94l29.38-4.269a7 7 0 005.271-3.829l13.139-26.623c2.569-5.203 9.987-5.203 12.555 0z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M313.946 201.052c4.155-4.05 1.862-11.106-3.88-11.94l-29.38-4.269a6.997 6.997 0 01-5.27-3.829l-13.139-26.623c-2.568-5.203-9.987-5.203-12.554 0l-10.888 22.061 3.874 7.85a18.632 18.632 0 0014.03 10.193c15.284 2.221 21.386 21.003 10.327 31.783a18.632 18.632 0 00-5.359 16.493l1.755 10.236 22.073 11.604c5.135 2.7 11.137-1.661 10.157-7.379l-5.019-29.261a7 7 0 012.013-6.196z\"\n      ></path>\n      <path d=\"M282.025 177.458l-13.022-26.387c-2.462-4.985-7.443-8.082-13.003-8.082s-10.541 3.097-13.003 8.083l-13.022 26.387-29.119 4.231c-5.502.799-9.987 4.581-11.706 9.868-1.718 5.288-.312 10.983 3.669 14.865l21.071 20.539-4.975 29.003c-.939 5.479 1.271 10.914 5.77 14.182s10.349 3.691 15.271 1.104L256 257.557l26.045 13.693c4.903 2.578 10.759 2.174 15.271-1.104 4.498-3.268 6.709-8.702 5.769-14.182l-4.974-29.003 21.071-20.539c3.981-3.881 5.387-9.577 3.669-14.865-1.719-5.287-6.204-9.068-11.706-9.867zm5.426 38.946a14.494 14.494 0 00-4.169 12.834l4.847 28.264-25.382-13.345a14.498 14.498 0 00-13.495 0l-25.381 13.344 4.847-28.262a14.495 14.495 0 00-4.169-12.835l-20.534-20.016 28.377-4.124a14.494 14.494 0 0010.918-7.932L256 158.618l12.69 25.714a14.494 14.494 0 0010.918 7.932l28.377 4.124zm194.096-99.749c-17.941-19.36-41.716-31.799-67.547-35.49v-16.27c16.756-1.282 30-15.316 30-32.394C444 14.58 429.421 0 411.5 0h-311C82.579 0 68 14.58 68 32.5c0 17.078 13.244 31.112 30 32.394v16.27c-25.714 3.676-49.409 16.029-67.321 35.248a7.5 7.5 0 0010.972 10.228C56.721 110.471 76.495 99.908 98 96.352v15.236c-39.204 7.62-68 42.024-68 82.652 0 22.509 8.765 43.663 24.675 59.561 15.532 15.543 36.076 24.242 57.996 24.641a157.847 157.847 0 008.007 15.038h-6.438c-54.722 0-99.24-44.519-99.24-99.24 0-14.091 2.904-27.711 8.633-40.48a7.5 7.5 0 00-13.685-6.14C3.347 162.333 0 178.019 0 194.24c0 62.992 51.248 114.24 114.24 114.24h16.729c17.756 22.957 41.679 40.906 69.267 51.348l-6.089 36.917c-18.396 5.522-32.123 21.915-33.701 41.685-25.112 1.221-45.167 22.032-45.167 47.441V497.5c0 7.995 6.505 14.5 14.5 14.5H382.22c7.995 0 14.5-6.505 14.5-14.5v-11.629c0-25.409-20.055-46.22-45.167-47.441-1.579-19.771-15.306-36.163-33.701-41.685l-6.089-36.917c27.588-10.441 51.511-28.391 69.267-51.348h16.729c62.992 0 114.24-51.248 114.24-114.24.001-28.841-10.814-56.394-30.452-77.585zM65.281 243.195C52.203 230.126 45 212.74 45 194.24c0-32.392 22.265-59.968 53-67.308V212c0 17.851 2.98 35.018 8.461 51.034-15.554-1.728-29.958-8.609-41.18-19.839zM100.5 50C90.851 50 83 42.149 83 32.5S90.851 15 100.5 15h311c9.649 0 17.5 7.851 17.5 17.5S421.149 50 411.5 50zM414 126.932c30.735 7.34 53 34.916 53 67.308 0 18.5-7.203 35.886-20.286 48.958-11.218 11.227-25.621 18.108-41.175 19.836C411.02 247.018 414 229.851 414 212zm-77.518 311.439h-22.895c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h35.634c17.921 0 32.5 14.58 32.5 32.5V497H130.279v-11.129c0-17.92 14.579-32.5 32.5-32.5h115.808c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5H175.518c1.921-16.101 15.651-28.629 32.261-28.629h96.441c16.611-.001 30.342 12.527 32.262 28.629zm-126.801-43.63l4.987-30.237C227.849 368.08 241.703 370 256 370s28.151-1.92 41.332-5.496l4.987 30.237zM256 355c-78.851 0-143-64.149-143-143V65h286v147c0 78.851-64.149 143-143 143zm141.76-61.52h-6.438a157.741 157.741 0 008.007-15.038c21.919-.399 42.463-9.097 57.991-24.637C473.235 237.903 482 216.749 482 194.24c0-40.627-28.796-75.032-68-82.652V96.352c21.605 3.57 41.449 14.208 56.545 30.498C487.604 145.259 497 169.192 497 194.24c0 54.721-44.519 99.24-99.24 99.24zM256 106.291c-56.061 0-101.67 45.609-101.67 101.669S199.939 309.629 256 309.629 357.67 264.02 357.67 207.96 312.061 106.291 256 106.291zm0 188.338c-47.79 0-86.67-38.88-86.67-86.669s38.88-86.669 86.67-86.669 86.67 38.88 86.67 86.669-38.88 86.669-86.67 86.669z\"></path>\n    </svg>\n  );\n}\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CaretUpOutlinedSvg from \"@ant-design/icons-svg/es/asn/CaretUpOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar CaretUpOutlined = function CaretUpOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CaretUpOutlinedSvg\n  }));\n};\nCaretUpOutlined.displayName = 'CaretUpOutlined';\nexport default /*#__PURE__*/React.forwardRef(CaretUpOutlined);","// This icon file is generated automatically.\nvar CrownFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M899.6 276.5L705 396.4 518.4 147.5a8.06 8.06 0 00-12.9 0L319 396.4 124.3 276.5c-5.7-3.5-13.1 1.2-12.2 7.9L188.5 865c1.1 7.9 7.9 14 16 14h615.1c8 0 14.9-6 15.9-14l76.4-580.6c.8-6.7-6.5-11.4-12.3-7.9zM512 734.2c-62.1 0-112.6-50.5-112.6-112.6S449.9 509 512 509s112.6 50.5 112.6 112.6S574.1 734.2 512 734.2zm0-160.9c-26.6 0-48.2 21.6-48.2 48.3 0 26.6 21.6 48.3 48.2 48.3s48.2-21.6 48.2-48.3c0-26.6-21.6-48.3-48.2-48.3z\" } }] }, \"name\": \"crown\", \"theme\": \"filled\" };\nexport default CrownFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CrownFilledSvg from \"@ant-design/icons-svg/es/asn/CrownFilled\";\nimport AntdIcon from '../components/AntdIcon';\nvar CrownFilled = function CrownFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CrownFilledSvg\n  }));\n};\nCrownFilled.displayName = 'CrownFilled';\nexport default /*#__PURE__*/React.forwardRef(CrownFilled);","// This icon file is generated automatically.\nvar PlusCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm192 472c0 4.4-3.6 8-8 8H544v152c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V544H328c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h152V328c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v152h152c4.4 0 8 3.6 8 8v48z\" } }] }, \"name\": \"plus-circle\", \"theme\": \"filled\" };\nexport default PlusCircleFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusCircleFilledSvg from \"@ant-design/icons-svg/es/asn/PlusCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\nvar PlusCircleFilled = function PlusCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusCircleFilledSvg\n  }));\n};\nPlusCircleFilled.displayName = 'PlusCircleFilled';\nexport default /*#__PURE__*/React.forwardRef(PlusCircleFilled);","// This icon file is generated automatically.\nvar TrophyOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M868 160h-92v-40c0-4.4-3.6-8-8-8H256c-4.4 0-8 3.6-8 8v40h-92a44 44 0 00-44 44v148c0 81.7 60 149.6 138.2 162C265.7 630.2 359 721.7 476 734.5v105.2H280c-17.7 0-32 14.3-32 32V904c0 4.4 3.6 8 8 8h512c4.4 0 8-3.6 8-8v-32.3c0-17.7-14.3-32-32-32H548V734.5C665 721.7 758.3 630.2 773.8 514 852 501.6 912 433.7 912 352V204a44 44 0 00-44-44zM184 352V232h64v207.6a91.99 91.99 0 01-64-87.6zm520 128c0 49.1-19.1 95.4-53.9 130.1-34.8 34.8-81 53.9-130.1 53.9h-16c-49.1 0-95.4-19.1-130.1-53.9-34.8-34.8-53.9-81-53.9-130.1V184h384v296zm136-128c0 41-26.9 75.8-64 87.6V232h64v120z\" } }] }, \"name\": \"trophy\", \"theme\": \"outlined\" };\nexport default TrophyOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport TrophyOutlinedSvg from \"@ant-design/icons-svg/es/asn/TrophyOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar TrophyOutlined = function TrophyOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: TrophyOutlinedSvg\n  }));\n};\nTrophyOutlined.displayName = 'TrophyOutlined';\nexport default /*#__PURE__*/React.forwardRef(TrophyOutlined);","// This icon file is generated automatically.\nvar WarningOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M464 720a48 48 0 1096 0 48 48 0 10-96 0zm16-304v184c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V416c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8zm475.7 440l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48zm-783.5-27.9L512 239.9l339.8 588.2H172.2z\" } }] }, \"name\": \"warning\", \"theme\": \"outlined\" };\nexport default WarningOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport WarningOutlinedSvg from \"@ant-design/icons-svg/es/asn/WarningOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar WarningOutlined = function WarningOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: WarningOutlinedSvg\n  }));\n};\nWarningOutlined.displayName = 'WarningOutlined';\nexport default /*#__PURE__*/React.forwardRef(WarningOutlined);","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}"],"names":["PointsHighlight","children","type","iconSize","className","icon","GainedPoint","gainedPoint","order","description","isPositive","isNegative","clsx","title","pt","en","color","GainedPoints","gainedPoints","playerId","gainedPointsDescriptions","points","Array","isArray","map","index","RankingBoard","players","ranking","hideGainedPoints","delay","useState","displayStep","setDisplayStep","sortedRanking","setSortedRanking","reRank","setReRank","useDimensions","height","maxPoints","useMemo","Math","max","scores","newScore","seconds","useCountdown","duration","autoStart","onExpire","useEffectOnce","positions","lastPosition","lastPoints","rankByFinalScoreDict","orderBy","reduce","acc","entry","rankByPreviousScore","tempSortedRanking","newEntry","position","previousScore","useEffect","style","length","hPosition","id","top","CrownFilled","avatarId","name","undefined","StepRankingWrapper","subtitle","useTemporarilyHidePlayersBar","CaretUpOutlined","WordGridHeader","cell","startsWith","WordGridHeaderImage","text","shouldBeBlurred","useBlurCards","cardWidth","useCardWidth","imageURL","replace","isBlurred","width","src","process","fallback","PUBLIC_URL","alt","WordGrid","grid","user","CellComponent","cellComponentProps","sqrt","gridStyle","gridTemplateColumns","gridTemplateRows","kind","FormOutlined","props","ref","React","AntdIcon","_objectSpread","FormOutlinedSvg","displayName","PreviousClue","clue","WordForm","x","y","onSubmit","disabled","setClue","textInput","useRef","current","focus","useMock","substring","direction","placeholder","onChange","e","target","value","onPressEnter","onClick","WritingCell","onSubmitClue","writable","content","xText","yText","trigger","shape","WritingCluesRule","playerCount","ScoringRule","StepClueWriting","announcement","isLoading","useLoading","fullWidth","Object","keys","contained","payload","trim","toLowerCase","PlayerRecentClue","coordinate","size","state","info","useStep","step","goToNextStep","setStep","useUser","translate","useLanguage","request","useAPICall","apiFunction","CRUZA_PALAVRAS_API","actionName","onBeforeCall","onError","successMessage","errorMessage","action","useOnSubmitClueAPIRequest","GridIcon","currentRound","round","phase","allowedPhase","PHASES","conditions","isReady","waitingRoomContent","onPressButton","buttonText","time","circleColor","appearance","isClue","instance","Boolean","getClueKey","clueObj","SEPARATOR","getClueFromKey","key","split","ClueCard","isMatched","isSelected","indexColor","player","strikeMatches","colorClass","getColorFromIndex","borderColor","backgroundColor","CheckCircleFilled","PlusCircleFilled","SelectableCell","onSelectCell","onClearCell","active","guesses","clues","matchEntry","entries","find","arr","clueKey","clueIndexColor","findIndex","c","Clues","onSelectClue","StepGuessing","onSubmitGuesses","setActive","setGuesses","choseRandomly","setChoseRandomly","useCallback","clueIndex","cellCoordinate","newState","prepareSubmitGuesses","result","playersOwnClue","align","usedCells","values","usedClues","availableCells","shuffle","filter","available","includes","newGuesses","useOnSubmitGuessesAPIRequest","GuessIcon","CheckSquareFilled","CheckSquareFilledSvg","CloseSquareFilled","CloseSquareFilledSvg","AVATARS","avatars","PlayersInCell","cellPlayers","isCorrect","ResultCell","playerPerVotedCell","colorCodedCluesPerPlayer","AnswersList","correctCoordinatesPerPlayer","columns","dataIndex","render","data","sorter","a","b","guess","toUpperCase","parsedData","guessedPlayerId","guessedCoordinate","push","playerName","dataSource","flat","pagination","BadCluesPlayersList","badCluesPlayersList","StepReveal","whoGotNoPoints","forEach","whoGotNoPointsNames","WarningOutlined","getMeanDuration","TrophyOutlined","level","StepRanking","goToPreviousStep","RankIcon","announcementIcon","TrophyIcon","Achievements","achievements","reference","achievementsReference","getActiveComponent","LoadingPage","PhaseLobby","PhaseRules","PhaseSetup","PhaseClueWriting","PhaseGuessing","PhaseReveal","PhaseGameOver","PageError","theme","token","colorPrimary","THEME_COLORS","colorLink","gameCollection","GAME_COLLECTION","ACHIEVEMENTS","quantity","gap","minWidth","maxWidth","margin","containerId","min","floor","Number","isNaN","xmlns","viewBox","fill","d","cx","cy","r","StarIcon","CaretUpOutlinedSvg","CrownFilledSvg","PlusCircleFilledSvg","TrophyOutlinedSvg","WarningOutlinedSvg","_toArray"],"sourceRoot":""}