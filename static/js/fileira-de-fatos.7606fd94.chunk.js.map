{"version":3,"file":"static/js/fileira-de-fatos.7606fd94.chunk.js","mappings":"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","sources":["components/general/Achievements.tsx","components/general/Container.tsx","components/metrics/MetricHighlight.tsx","components/metrics/PointsHighlight.tsx","components/ranking/RankingBoard.tsx","components/ranking/StepRankingWrapper.tsx","components/views/View.tsx","components/views/ViewIf.tsx","components/views/ViewOr.tsx","components/views/ViewSwitch.tsx","games/fileira-de-fatos/utils/api-requests.ts","games/fileira-de-fatos/utils/constants.ts","games/fileira-de-fatos/utils/helpers.ts","games/fileira-de-fatos/components/Scenarios.tsx","games/fileira-de-fatos/components/SelectableScenarioOrder.tsx","games/fileira-de-fatos/utils/mock.ts","components/text/SpecialRule.tsx","games/fileira-de-fatos/components/RoundTypeExplanation.tsx","games/fileira-de-fatos/StepOrderScenarios.tsx","games/fileira-de-fatos/StepJudgeScenarios.tsx","games/fileira-de-fatos/components/RulesExplanation.tsx","games/fileira-de-fatos/PhaseOrdering.tsx","games/fileira-de-fatos/StepRanking.tsx","games/fileira-de-fatos/components/Results.tsx","games/fileira-de-fatos/StepReveal.tsx","games/fileira-de-fatos/PhaseResults.tsx","games/fileira-de-fatos/components/FinalScenarios.tsx","games/fileira-de-fatos/PhaseGameOver.tsx","games/fileira-de-fatos/SessionFileiraDeFatos.tsx","games/fileira-de-fatos/utils/achievements.ts","hooks/useWhichPlayerIsThe.ts","icons/BarChartIcon.tsx","icons/BoxXIcon.tsx","icons/FlagIcon.tsx","icons/QueueIcon.tsx","icons/StarIcon.tsx","../node_modules/@ant-design/icons-svg/es/asn/RiseOutlined.js","../node_modules/@ant-design/icons/es/icons/RiseOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/UndoOutlined.js","../node_modules/@ant-design/icons/es/icons/UndoOutlined.js"],"sourcesContent":["import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Popover } from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { DualTranslate, Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { Medal } from './Medal';\n\ntype AchievementsProps = {\n  players: GamePlayers;\n  achievements: Achievement[];\n  reference: AchievementReference;\n};\n\nconst unknownText = { pt: 'Desconhecido', en: 'Unknown' };\n\nexport function Achievements({ players, achievements, reference }: AchievementsProps) {\n  if (achievements.length === 0) return <></>;\n\n  return (\n    <div className={clsx('achievements', getAnimationClass('fadeIn'))}>\n      <Title size=\"small\" level={3}>\n        <Translate pt=\"Medalhas\" en=\"Achievements\" />\n      </Title>\n      <ul className=\"achievements-list\">\n        {achievements.map((achievement, index) => {\n          const { icon = 'star', ...achievementObj } = reference[achievement.type] ?? {};\n          const player = players[achievement.playerId];\n          return (\n            <li\n              key={`achievement-${achievement.type}`}\n              className={clsx(\n                'achievements-entry',\n                getAnimationClass('flipInY', {\n                  delay: index < achievements.length / 2 ? index : achievements.length - 1 - index,\n                })\n              )}\n            >\n              <div className=\"achievement__medal\">\n                <Medal id={icon} />\n              </div>\n              <h4 className=\"achievement__title\">\n                <DualTranslate>{achievementObj.title ?? unknownText}</DualTranslate>\n              </h4>\n              <div className=\"achievement__avatar\">\n                <Avatar id={player.avatarId} />\n              </div>\n              <div className=\"achievement__name\">{player.name}</div>\n              {Boolean(achievementObj.description) && (\n                <div className=\"achievement__description\">\n                  <Popover\n                    content={\n                      <>\n                        <DualTranslate>{achievementObj.description ?? unknownText}</DualTranslate> (\n                        {achievement.value})\n                      </>\n                    }\n                  >\n                    <Button icon={<QuestionCircleOutlined />} shape=\"circle\" type=\"text\" size=\"small\" />\n                  </Popover>\n                </div>\n              )}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","import { ReactNode } from 'react';\nimport clsx from 'clsx';\n// Ant Design Resources\nimport { Space, SpaceProps } from 'antd';\n// Components\nimport { Title, TitleProps } from 'components/text';\n// Sass\nimport './Container.scss';\n\ntype ContainerProps = {\n  title: ReactNode;\n  children: ReactNode;\n  contained?: boolean;\n  className?: string;\n  titleProps?: TitleProps;\n  childrenContainerProps?: SpaceProps;\n} & Omit<SpaceProps, 'title' | 'children'>;\n\n/**\n * Container component with title and center aligned children\n */\nexport function Container({\n  title,\n  children,\n  className,\n  contained,\n  titleProps,\n  childrenContainerProps,\n  ...spaceProps\n}: ContainerProps) {\n  const { level = 4, size = 'xx-small', ...restTitleProps } = titleProps ?? {};\n\n  const {\n    className: childrenClassName,\n    wrap = true,\n    direction: childrenDirection = 'horizontal',\n    ...restChildrenContainerProps\n  } = childrenContainerProps ?? {};\n\n  return (\n    <Space direction=\"vertical\" className={clsx('container-wrapper', className)} {...spaceProps}>\n      <Title level={level} size={size} {...restTitleProps}>\n        {title}\n      </Title>\n\n      <Space\n        direction={childrenDirection}\n        wrap={wrap}\n        className={clsx(\n          'container-wrapper__children',\n          contained && 'container-wrapper__children--contained',\n          childrenClassName\n        )}\n        {...restChildrenContainerProps}\n      >\n        {children}\n      </Space>\n    </Space>\n  );\n}\n","import { ReactNode } from 'react';\nimport clsx from 'clsx';\n// Types\nimport type { AvatarSize } from 'antd/lib/avatar/AvatarContext';\n// Components\nimport { IconAvatar } from 'components/avatars/IconAvatar';\n\nexport type MetricHighlightProps = {\n  /**\n   * The text to be highlighted\n   */\n  children: ReactNode;\n  /**\n   * The icon representing the metric\n   */\n  icon: ReactNode;\n  /**\n   * Indicates if it's a negative metric\n   */\n  type?: 'positive' | 'negative' | 'default';\n  /**\n   * The size of the avatar (default: small)\n   */\n  iconSize?: AvatarSize;\n  /**\n   * Custom class\n   */\n  className?: string;\n  /**\n   * Icon placement (default: after)\n   */\n  iconPlacement?: 'before' | 'after';\n};\n\nexport function MetricHighlight({\n  children,\n  icon,\n  type,\n  className,\n  iconSize = 'small',\n  iconPlacement = 'after',\n}: MetricHighlightProps) {\n  return (\n    <span className={clsx('metric-highlight', type && `metric-highlight--${type}`, className)}>\n      {iconPlacement === 'before' && (\n        <>\n          <IconAvatar size={iconSize} icon={icon} />{' '}\n        </>\n      )}\n      {children}\n      {iconPlacement === 'after' && (\n        <>\n          {' '}\n          <IconAvatar size={iconSize} icon={icon} />\n        </>\n      )}\n    </span>\n  );\n}\n\nexport type HighlightProps = Pick<MetricHighlightProps, 'children' | 'type' | 'iconSize' | 'className'>;\n","import { StarIcon } from 'icons/StarIcon';\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function PointsHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<StarIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import clsx from 'clsx';\nimport { LegacyRef, ReactNode, useEffect, useMemo, useState } from 'react';\nimport { orderBy } from 'lodash';\nimport { useEffectOnce, useMeasure } from 'react-use';\n// Ant Design Resources\nimport { Tooltip } from 'antd';\nimport { CrownFilled } from '@ant-design/icons';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\n// Helpers\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { Translate } from 'components/language';\nimport { Avatar } from 'components/avatars';\n\ntype GainedPointProps = {\n  gainedPoint: number;\n  order: number;\n  description?: any;\n};\n\nfunction GainedPoint({ gainedPoint, order, description }: GainedPointProps): JSX.Element {\n  const isPositive = gainedPoint > 0;\n  const isNegative = gainedPoint < 0;\n  return (\n    <li\n      className={clsx(\n        'ranking-board__gained-point',\n        isPositive && 'ranking-board__gained-point--plus',\n        isNegative && 'ranking-board__gained-point--minus',\n        `ranking-board__gained-point--${order}`\n      )}\n    >\n      <Tooltip\n        title={description ?? <Translate pt=\"Pontos ganhos\" en=\"Gained Points\" />}\n        color={isPositive ? 'gold' : isNegative ? 'red' : 'gray'}\n      >\n        {isPositive ? '+' : ''}\n        {gainedPoint}\n      </Tooltip>\n    </li>\n  );\n}\n\ntype GainedPointsProps = {\n  gainedPoints: number[] | number;\n  playerId: PlayerId;\n  gainedPointsDescriptions?: any[];\n};\n\nfunction GainedPoints({\n  gainedPoints,\n  playerId,\n  gainedPointsDescriptions = [],\n}: GainedPointsProps): JSX.Element {\n  const points = Array.isArray(gainedPoints) ? gainedPoints : [gainedPoints];\n  return (\n    <ul className=\"ranking-board__cell-gained-points\">\n      {points.map((gainedPoint, index) => (\n        <GainedPoint\n          key={`gained-point-${playerId}-${index}`}\n          gainedPoint={gainedPoint}\n          order={index}\n          description={gainedPointsDescriptions[index]}\n        />\n      ))}\n    </ul>\n  );\n}\n\ntype RankingBoardProps = {\n  players: GamePlayers;\n  ranking: GameRanking;\n  gainedPointsDescriptions?: ReactNode[];\n  hideGainedPoints?: boolean;\n  delay?: number;\n};\n\nexport function RankingBoard({\n  players,\n  ranking,\n  gainedPointsDescriptions,\n  hideGainedPoints = false,\n  delay = 0,\n}: RankingBoardProps): JSX.Element {\n  const [displayStep, setDisplayStep] = useState(0);\n  const [sortedRanking, setSortedRanking] = useState<GameRanking>([]);\n  const [reRank, setReRank] = useState(0);\n  const [ref, { height }] = useMeasure();\n\n  const maxPoints = useMemo(() => Math.max(...ranking.map((scores) => scores.newScore)), [ranking]);\n\n  const { seconds } = useCountdown({\n    duration: 5 + delay,\n    autoStart: true,\n    onExpire: () => {\n      setReRank(1);\n      setDisplayStep(3);\n    },\n  });\n\n  // Rank by previousScore\n  useEffectOnce(() => {\n    const positions: PlainObject = {};\n    let lastPosition = 0;\n    let lastPoints = 0;\n\n    const rankByFinalScoreDict = orderBy(ranking, ['newScore', 'name'], ['desc', 'asc']).reduce(\n      (acc: PlainObject, entry, index) => {\n        acc[entry.playerId] = index;\n        // Calculate position\n        if (lastPoints === 0 || entry.newScore < lastPoints) {\n          lastPoints = entry.newScore;\n          lastPosition += 1;\n        }\n        positions[entry.playerId] = [0, lastPosition];\n        return acc;\n      },\n      {}\n    );\n\n    const rankByPreviousScore = orderBy(ranking, ['previousScore', 'name'], ['desc', 'asc']);\n\n    // Reset position trackers\n    lastPosition = 0;\n    lastPoints = 0;\n\n    const tempSortedRanking: GameRanking = rankByPreviousScore.map((entry, index) => {\n      const newEntry = { ...entry };\n\n      newEntry.order = [index, rankByFinalScoreDict[newEntry.playerId]];\n      newEntry.position = positions[newEntry.playerId];\n      // Calculate position\n      if (lastPoints === 0 || entry.previousScore < lastPoints) {\n        lastPoints = entry.previousScore;\n        lastPosition += 1;\n      }\n      newEntry.position[0] = lastPosition;\n      return newEntry;\n    });\n\n    setSortedRanking(tempSortedRanking);\n  });\n\n  // Show gained points\n  useEffect(() => {\n    if (seconds === 4 + delay) {\n      setDisplayStep(1);\n    } else if (seconds === 2 + delay) {\n      setDisplayStep(2);\n    }\n  }, [seconds, delay]);\n\n  return (\n    <div\n      className={clsx(\n        'ranking-board',\n        seconds > 4 && 'ranking-board--hidden',\n        seconds === 4 && getAnimationClass('fadeIn')\n      )}\n      style={{ height: `${(Math.max(60, height) + 8) * sortedRanking.length}px` }}\n    >\n      <div\n        className=\"ranking-board__row\"\n        id=\"ranking-row-placeholder\"\n        style={{ opacity: 0 }}\n        ref={ref as LegacyRef<HTMLDivElement>}\n      >\n        <div className=\"ranking-board__cell-crown\">\n          <CrownFilled className=\"ranking-board__crown-icon\" />\n        </div>\n        <div className=\"ranking-board__cell-position\">#0</div>\n        <div className=\"ranking-board__cell-player\">\n          <div className=\"ranking-board__avatar\">\n            <Avatar id=\"A\" />\n          </div>\n          <div className=\"ranking-board__name\">Placeholder</div>\n        </div>\n        <Tooltip title={<Translate pt=\"Pontos Anteriores\" en=\"Previous Points\" />} color=\"gray\">\n          <div className=\"ranking-board__cell-points\">0</div>\n        </Tooltip>\n\n        <GainedPoints gainedPoints={0} playerId=\"A\" />\n\n        <Tooltip title=\"Total\" color=\"gold\">\n          <span className=\"ranking-board__cell-points-total\">0</span>\n        </Tooltip>\n      </div>\n\n      {sortedRanking.map((entry, index) => {\n        const { playerId, newScore, previousScore, gainedPoints, order, position } = entry;\n        const hPosition = (Math.max(60, height) + 8) * (order[reRank] ?? 0);\n\n        return (\n          <div\n            className={`ranking-board__row ranking-board__row--${index}`}\n            key={`ranking-${playerId}`}\n            // id={`ranking-row-${index}`}\n            style={{ top: `${hPosition}px` }}\n          >\n            <div className=\"ranking-board__cell-crown\">\n              {newScore > 0 && maxPoints === newScore && displayStep >= 3 && (\n                <CrownFilled className=\"ranking-board__crown-icon\" />\n              )}\n            </div>\n            <div className=\"ranking-board__cell-position\">#{position[reRank] ?? ''}</div>\n            <div className=\"ranking-board__cell-player\">\n              <div className=\"ranking-board__avatar\">\n                <Avatar id={players[playerId].avatarId} />\n              </div>\n              <div className=\"ranking-board__name\">{players[playerId].name}</div>\n            </div>\n            <Tooltip title={<Translate pt=\"Pontos Anteriores\" en=\"Previous Points\" />} color=\"gray\">\n              <div className=\"ranking-board__cell-points\">{previousScore}</div>\n            </Tooltip>\n            {!hideGainedPoints && displayStep >= 1 && gainedPoints !== undefined && (\n              <GainedPoints\n                gainedPoints={gainedPoints}\n                playerId={playerId}\n                gainedPointsDescriptions={gainedPointsDescriptions}\n              />\n            )}\n            {displayStep >= 2 && (\n              <Tooltip title=\"Total\" color=\"gold\">\n                <span className=\"ranking-board__cell-points-total\">{newScore}</span>\n              </Tooltip>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { CaretUpOutlined } from '@ant-design/icons';\n// Hooks\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Components\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { RankingBoard } from './RankingBoard';\n\ntype StepRankingWrapperProps = {\n  /**\n   * The players\n   */\n  players: GamePlayers;\n  /**\n   * The ranking array\n   */\n  ranking: GameRanking;\n  /**\n   * Gained points descriptions for the popover\n   */\n  gainedPointsDescriptions: ReactNode[];\n  /**\n   * Additional content\n   */\n  children?: ReactNode;\n  /**\n   * Replacement title for Ranking\n   */\n  title?: ReactNode;\n  /**\n   * Optional node that goes under the title\n   */\n  subtitle?: ReactNode;\n  /**\n   * Whether the title should be white or not\n   */\n  white?: boolean;\n};\n\nexport function StepRankingWrapper({\n  players,\n  ranking,\n  gainedPointsDescriptions,\n  children,\n  title,\n  subtitle,\n  white,\n}: StepRankingWrapperProps) {\n  useTemporarilyHidePlayersBar();\n\n  return (\n    <Step>\n      <Title white={white}>{title ?? 'Ranking'}</Title>\n\n      {subtitle}\n\n      <RankingBoard players={players} ranking={ranking} gainedPointsDescriptions={gainedPointsDescriptions} />\n      <Instruction className=\"step-ranking-wrapper-gained-points-instruction\">\n        <CaretUpOutlined />\n        <Translate\n          pt=\"Passe o mouse em cada um dos pontos para saber como eles foram distribuídos\"\n          en=\"Hover over the scores to learn how they were granted\"\n        />\n        <CaretUpOutlined />\n      </Instruction>\n\n      {children}\n    </Step>\n  );\n}\n","import { ReactNode } from 'react';\n\ntype ViewProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n};\n\nexport function View({ children }: ViewProps) {\n  return <>{children}</>;\n}\n","import { ReactNode } from 'react';\n\ntype ViewIfProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Displays children only if condition is truthy\n   */\n  condition?: boolean;\n};\n\n/**\n * Wrapper component that only renders the children if the condition is truthy\n */\nexport function ViewIf({ condition = false, children }: ViewIfProps) {\n  return condition ? <>{children}</> : <></>;\n}\n","import { ReactNode } from 'react';\n\ntype ViewOrProps = {\n  /**\n   * The content of the component to be toggled\n   */\n  children: [ReactNode, ReactNode];\n  /**\n   * The condition to be met to render the first children\n   */\n  condition?: boolean;\n};\n\n/**\n * View wrapper that renders one of two children depending on a condition\n */\nexport function ViewOr({ condition = false, children }: ViewOrProps) {\n  return condition ? <>{children[0]}</> : <>{children[1]}</>;\n}\n","type ViewSwitchProps = {\n  cases: boolean[];\n  /**\n   * The content of the component\n   */\n  children: any;\n};\n\nexport function ViewSwitch({ cases, children }: ViewSwitchProps) {\n  if (cases.length > 5) {\n    throw Error('ViewSwitch only supports up to 5 cases');\n  }\n\n  if (cases[0] && children[0]) {\n    return children[0];\n  }\n\n  if (cases[1] && children[1]) {\n    return children[1];\n  }\n\n  if (cases[2] && children[2]) {\n    return children[2];\n  }\n\n  if (cases[3] && children[3]) {\n    return children[3];\n  }\n\n  if (cases[4] && children[4]) {\n    return children[4];\n  }\n  console.warn('Rendering all children in the ViewSwitch');\n  return children;\n}\n","import type { SubmitScenarioOrderPayload } from './types';\nimport type { UseStep } from 'hooks/useStep';\nimport { functions } from 'services/firebase';\nimport { httpsCallable } from 'firebase/functions';\nimport { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\n\nconst submitAction = httpsCallable(functions, 'fileiraDeFatosSubmitAction');\n\nexport function useOnSubmitOrderingAPIRequest(setStep: UseStep['setStep']) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: submitAction,\n    actionName: 'submit-order',\n    onSuccess: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: translate('Ordem submetida com sucesso', 'Order submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua ordem',\n      'Oops, the application found an error while trying to submit your order'\n    ),\n  });\n\n  return (payload: SubmitScenarioOrderPayload) => {\n    request({\n      action: 'SUBMIT_SCENARIO_ORDER',\n      ...payload,\n    });\n  };\n}\n","import { ScaleEntry } from './types';\n\nexport const POSITIVE_SCALE: ScaleEntry[] = [\n  {\n    id: '1',\n    text: {\n      pt: 'Discordo totalmente',\n      en: 'Strongly disagree',\n    },\n  },\n  {\n    id: '2',\n    text: {\n      pt: 'Discordo',\n      en: 'Disagree',\n    },\n  },\n  {\n    id: '3',\n    text: {\n      pt: 'Neutro',\n      en: 'Neutral',\n    },\n  },\n  {\n    id: '4',\n    text: {\n      pt: 'Concordo',\n      en: 'Agree',\n    },\n  },\n  {\n    id: '5',\n    text: {\n      pt: 'Concordo totalmente',\n      en: 'Strongly agree',\n    },\n  },\n];\n\nexport const NEGATIVE_SCALE: ScaleEntry[] = [\n  {\n    id: '10',\n    text: {\n      pt: 'Vish',\n      en: 'Oh!',\n    },\n  },\n  {\n    id: '7',\n    text: {\n      pt: 'Ah não',\n      en: 'Gosh',\n    },\n  },\n  {\n    id: '23',\n    text: {\n      pt: 'Quê?',\n      en: 'No way',\n    },\n  },\n  {\n    id: '2',\n    text: {\n      pt: 'PQP',\n      en: 'What the...',\n    },\n  },\n  {\n    id: '3',\n    text: {\n      pt: 'Preferia ⭐ Morta',\n      en: 'Lord have mercy!',\n    },\n  },\n];\n","import { NEGATIVE_SCALE, POSITIVE_SCALE } from './constants';\n\nexport const getReference = (kind: string) => {\n  return kind === 'positive' ? POSITIVE_SCALE : NEGATIVE_SCALE;\n};\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Avatar, Space } from 'antd';\n// Types\nimport type { ScaleEntry } from '../utils/types';\n// Hook\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { EmojiCard } from 'components/cards/EmojiCard';\nimport { DualTranslate } from 'components/language';\nimport { AvatarStrip } from 'components/avatars';\n\ntype ScenarioCardProps = {\n  scenarios: (TextCard | null)[];\n  reference: ScaleEntry[];\n  player?: GamePlayer;\n};\n\nexport function Scenarios({ scenarios, reference, player }: ScenarioCardProps) {\n  const width = useCardWidth(8, {\n    gap: 16,\n    minWidth: 100,\n    maxWidth: 200,\n    margin: 32,\n  });\n\n  return (\n    <Space className={clsx(player ? 'scenarios-results' : 'scenarios')}>\n      {Boolean(player) && <AvatarStrip player={player!} />}\n      {scenarios.map((entry, index) => (\n        <div key={`position-${index}`} className=\"scenario\" style={{ width: `${width}px` }}>\n          <Avatar>{index + 1}</Avatar>\n          <div className=\"scenario__tagline\">\n            <DualTranslate>{reference[index].text}</DualTranslate>\n          </div>\n          <EmojiCard id={reference[index].id} className=\"scenario__emoji\" />\n          {entry && <div className=\"scenario__card\">{entry.text}</div>}\n        </div>\n      ))}\n      {Boolean(player) && <AvatarStrip player={player!} />}\n    </Space>\n  );\n}\n","import { useState } from 'react';\nimport { findLastIndex } from 'lodash';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\nimport { RiseOutlined, UndoOutlined } from '@ant-design/icons';\n// Types\nimport type { OnSubmitOrder } from '../utils/types';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Utils\nimport { getReference } from '../utils/helpers';\n// Components\nimport { Translate } from 'components/language';\nimport { Scenarios } from './Scenarios';\nimport { RuleInstruction } from 'components/text';\nimport { TransparentButton } from 'components/buttons';\nimport { DevButton } from 'components/debug';\nimport { mockOrder } from '../utils/mock';\n\ntype SelectableScenarioOrderProps = {\n  scenarios: TextCard[];\n  kind: 'positive' | 'negative';\n  onSubmitOrder: OnSubmitOrder;\n};\n\nexport function SelectableScenarioOrder({ scenarios, kind, onSubmitOrder }: SelectableScenarioOrderProps) {\n  const { isLoading } = useLoading();\n  const width = useCardWidth(8, {\n    gap: 16,\n    minWidth: 100,\n    maxWidth: 200,\n    margin: 32,\n  });\n  const reference = getReference(kind);\n\n  const [selection, setSelection] = useState<(null | TextCard)[]>(Array(scenarios.length).fill(null));\n\n  const availableScenarios = scenarios.filter((card) => !selection.includes(card));\n\n  const onAddScenario = (card: TextCard) => {\n    setSelection((selection) => {\n      const newSelection = [...selection];\n      const firstNullIndex = newSelection.findIndex((entry) => entry === null);\n      newSelection[firstNullIndex] = card;\n      return newSelection;\n    });\n  };\n\n  const onRemoveScenario = () => {\n    setSelection((selection) => {\n      const newSelection = [...selection];\n      const lastCardIndex = findLastIndex(newSelection, (entry) => entry !== null);\n      newSelection[lastCardIndex] = null;\n      return newSelection;\n    });\n  };\n\n  const onSubmit = () => {\n    const orderedScenarios = selection.map((card) => card!.id);\n    onSubmitOrder({ order: orderedScenarios });\n  };\n\n  return (\n    <Space className=\"space-container\" direction=\"vertical\">\n      <Scenarios scenarios={selection} reference={reference} />\n\n      <RuleInstruction type=\"rule\">\n        <Translate\n          pt=\"Você deve escolher os cenários em ordem do menos pior para o pior. Você pode desfazer a seleção, se precisar. Quando estiver pronto(a), clique em 'Enviar'.\"\n          en=\"You must choose the scenarios in order from the least bad to the worst. You may undo your selection if needed. When you're ready, click 'Submit'.\"\n        />\n      </RuleInstruction>\n\n      <div className=\"scenarios-buttons\">\n        {availableScenarios.map((card) => (\n          <TransparentButton\n            className=\"scenarios-buttons__button\"\n            key={`scenario-${card.id}`}\n            onClick={() => onAddScenario(card)}\n            style={{ width: `${width}px` }}\n          >\n            {card.text}\n          </TransparentButton>\n        ))}\n      </div>\n\n      <Space className=\"space-container\">\n        <Button\n          size=\"large\"\n          onClick={onRemoveScenario}\n          icon={<UndoOutlined />}\n          disabled={selection[0] === null}\n        >\n          <Translate pt=\"Desfazer\" en=\"Undo\" />\n        </Button>\n\n        <DevButton size=\"large\" type=\"dashed\" ghost onClick={() => setSelection(mockOrder(scenarios))}>\n          Auto-select\n        </DevButton>\n\n        <Button\n          size=\"large\"\n          type=\"primary\"\n          onClick={onSubmit}\n          icon={<RiseOutlined />}\n          disabled={selection.some((entry) => entry === null) || isLoading}\n        >\n          <Translate pt=\"Enviar\" en=\"Submit\" />\n        </Button>\n      </Space>\n    </Space>\n  );\n}\n","import { shuffle } from 'utils/helpers';\n\nexport const mockOrder = (scenarios: TextCard[]) => {\n  const firstHalf = shuffle([scenarios[0], scenarios[1], scenarios[2]]);\n  const secondHalf = shuffle([scenarios[3], scenarios[4]]);\n\n  return [...firstHalf, ...secondHalf];\n};\n","import { ReactNode } from 'react';\n// Components\nimport { Translate } from 'components/language';\n// Sass\nimport './SpecialRule.scss';\n\ntype SpecialRuleProps = {\n  /**\n   * The special rule content\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n};\n\nexport function SpecialRule({ children, className }: SpecialRuleProps) {\n  return (\n    <span className={className}>\n      <span className=\"special-rule-highlight\">\n        <Translate pt=\"Regra Especial\" en=\"Special Rule\" />\n      </span>\n      {children}\n    </span>\n  );\n}\n","// Ant Design Resources\nimport { Avatar } from 'antd';\n// Components\nimport { Translate } from 'components/language';\nimport { PointsHighlight } from 'components/metrics/PointsHighlight';\nimport { RuleInstruction } from 'components/text';\nimport { SpecialRule } from 'components/text/SpecialRule';\n\ntype RoundTypeProps = {\n  roundType: string;\n};\n\nconst POSITIONS: NumberDictionary = {\n  CURSED_FIRST_POSITION: 1,\n  SECOND_POSITION: 2,\n  CENTER_POSITION: 3,\n  FOURTH_POSITION: 4,\n  CURSED_LAST_POSITION: 5,\n};\n\nexport function RoundTypeExplanation({ roundType }: RoundTypeProps) {\n  if (['SECOND_POSITION', 'CENTER_POSITION', 'FOURTH_POSITION'].includes(roundType)) {\n    return (\n      <RuleInstruction type=\"event\">\n        <SpecialRule>\n          <Translate\n            pt={\n              <>\n                Nesta rodada, jogadores que <strong>acertarem</strong> o cenário da posição{' '}\n                <Avatar>{POSITIONS[roundType]}</Avatar> ganham <PointsHighlight>3 pontos</PointsHighlight> ao\n                invés de 1.\n              </>\n            }\n            en={\n              <>\n                This round, players who <strong>match</strong> the scenario in position{' '}\n                <Avatar>{POSITIONS[roundType]}</Avatar> get <PointsHighlight>3 points</PointsHighlight>{' '}\n                instead of 1.\n              </>\n            }\n          />\n        </SpecialRule>\n      </RuleInstruction>\n    );\n  }\n\n  if (['CURSED_FIRST_POSITION', 'CURSED_LAST_POSITION'].includes(roundType)) {\n    return (\n      <RuleInstruction type=\"event\">\n        <SpecialRule>\n          <Translate\n            pt={\n              <>\n                Nesta rodada, jogadores que <strong>errarem</strong> o cenário da posição{' '}\n                <Avatar>{POSITIONS[roundType]}</Avatar> perdem{' '}\n                <PointsHighlight type=\"negative\">1 ponto</PointsHighlight> ao invés de 0.\n              </>\n            }\n            en={\n              <>\n                This round, players who <strong>miss</strong> the scenario in position{' '}\n                <Avatar>{POSITIONS[roundType]}</Avatar> lose{' '}\n                <PointsHighlight type=\"negative\">1 point</PointsHighlight> instead of 0.\n              </>\n            }\n          />\n        </SpecialRule>\n      </RuleInstruction>\n    );\n  }\n\n  return <></>;\n}\n","// Types\nimport type { OnSubmitOrder } from './utils/types';\n// Components\nimport { Step } from 'components/steps';\nimport { RuleInstruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { AvatarName } from 'components/avatars';\nimport { SelectableScenarioOrder } from './components/SelectableScenarioOrder';\nimport { RoundTypeExplanation } from './components/RoundTypeExplanation';\nimport { PointsHighlight } from 'components/metrics/PointsHighlight';\n\ntype StepOrderScenariosProps = {\n  activePlayer: GamePlayer;\n  scenarios: TextCard[];\n  roundType: string;\n  onSubmitOrder: OnSubmitOrder;\n} & AnnouncementProps;\n\nexport function StepOrderScenarios({\n  announcement,\n  activePlayer,\n  scenarios,\n  onSubmitOrder,\n  roundType,\n}: StepOrderScenariosProps) {\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title>\n        <Translate\n          pt={\n            <>\n              Ordene os cenários de acordo com <AvatarName player={activePlayer} />\n            </>\n          }\n          en={\n            <>\n              Order the scenarios according to <AvatarName player={activePlayer} />\n            </>\n          }\n        />\n      </Title>\n\n      <RuleInstruction type=\"rule\">\n        <Translate\n          pt={\n            <>\n              Dados os cenários abaixo, tente adivinhar como o juiz <AvatarName player={activePlayer} /> da\n              rodada vai ordená-los do melhor para o pior.\n              <br />\n              Você ganha <PointsHighlight>1 ponto</PointsHighlight> para cada combinação!\n            </>\n          }\n          en={\n            <>\n              Given the scenarios below, try to guess how the judge <AvatarName player={activePlayer} /> will\n              order them from best to worst.\n              <br />\n              You get <PointsHighlight>1 point</PointsHighlight> for each match!\n            </>\n          }\n        />\n      </RuleInstruction>\n\n      <RoundTypeExplanation roundType={roundType} />\n\n      <SelectableScenarioOrder scenarios={scenarios} kind=\"negative\" onSubmitOrder={onSubmitOrder} />\n    </Step>\n  );\n}\n","// Types\nimport type { OnSubmitOrder } from './utils/types';\n// Components\nimport { Step } from 'components/steps';\nimport { RuleInstruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { SelectableScenarioOrder } from './components/SelectableScenarioOrder';\nimport { RoundTypeExplanation } from './components/RoundTypeExplanation';\n\ntype StepJudgeScenariosProps = {\n  scenarios: TextCard[];\n  roundType: string;\n  onSubmitOrder: OnSubmitOrder;\n} & AnnouncementProps;\n\nexport function StepJudgeScenarios({\n  announcement,\n  scenarios,\n  roundType,\n  onSubmitOrder,\n}: StepJudgeScenariosProps) {\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title>\n        <Translate pt={<>Você é o juiz da rodada!</>} en={<>You are the round's judge!</>} />\n      </Title>\n\n      <RuleInstruction type=\"rule\">\n        <Translate\n          pt={\n            <>\n              Dados os cenários abaixo, ordene-os do melhor para o pior.\n              <br />\n              Os outros jogadores tentaram adivinhar a ordem que você escolher e você ganha pontos se os\n              outros jogadores acertarem suas escolhas, então seja sincero!\n            </>\n          }\n          en={\n            <>\n              Given the scenarios below, order them from best to worst.\n              <br />\n              The other players will try to guess the order you choose and you get points if the other players\n              get your choices right, so be honest!\n            </>\n          }\n        />\n        <br />\n      </RuleInstruction>\n\n      <RoundTypeExplanation roundType={roundType} />\n\n      <SelectableScenarioOrder scenarios={scenarios} kind=\"negative\" onSubmitOrder={onSubmitOrder} />\n    </Step>\n  );\n}\n","import { Translate } from 'components/language';\nimport { TextHighlight } from 'components/text';\n\nexport function FirstRoundIntroduction() {\n  return (\n    <>\n      <Translate\n        pt={\n          <>\n            A cada rodada um jogador é escolhido para ser o <TextHighlight>juiz</TextHighlight> e colocar os\n            cenários em ordem. Os outros jogadores devem tentar adivinhar qual a ordem o jogador principal\n            colocou cada cenário.\n          </>\n        }\n        en={\n          <>\n            Each round a player is chosen to be the <TextHighlight>judge</TextHighlight> and put the scenarios\n            in order. The other players must try to guess which order the main player placed each scenario.\n          </>\n        }\n      />\n      <br />\n    </>\n  );\n}\n","// State & Hooks\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitOrderingAPIRequest } from './utils/api-requests';\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { BarChartIcon } from 'icons/BarChartIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\nimport { TurnOrder } from 'components/players';\nimport { AvatarName } from 'components/avatars';\nimport { ViewOr } from 'components/views';\nimport { StepOrderScenarios } from './StepOrderScenarios';\nimport { StepJudgeScenarios } from './StepJudgeScenarios';\nimport { FirstRoundIntroduction } from './components/RulesExplanation';\n\nexport function PhaseOrdering({ players, state, info }: PhaseProps) {\n  const { step, setStep } = useStep();\n  const [activePlayer, isTheActivePlayer] = useWhichPlayerIsThe('activePlayerId', state, players);\n\n  const onSubmitOrder = useOnSubmitOrderingAPIRequest(setStep);\n  const isFirstRound = state.round.current === 1;\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<BarChartIcon />}\n      title={<Translate pt=\"Do melhor para o pior!\" en=\"From best to worst!\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n      duration={isFirstRound ? 12 : undefined}\n    >\n      <Instruction>\n        <FirstRoundIntroduction />\n        <Translate\n          pt={\n            <>\n              O juiz da rodada é <AvatarName player={activePlayer} addressUser />\n            </>\n          }\n          en={\n            <>\n              The judge for the round is <AvatarName player={activePlayer} addressUser />\n            </>\n          }\n        />\n      </Instruction>\n\n      <TurnOrder players={players} order={state.turnOrder} activePlayerId={activePlayer.id} />\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.FILEIRA_DE_FATOS.ORDERING}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <ViewOr condition={isTheActivePlayer}>\n          <StepJudgeScenarios\n            scenarios={state.scenarios}\n            roundType={state.roundType}\n            onSubmitOrder={onSubmitOrder}\n            announcement={announcement}\n          />\n\n          <StepOrderScenarios\n            activePlayer={activePlayer}\n            scenarios={state.scenarios}\n            roundType={state.roundType}\n            onSubmitOrder={onSubmitOrder}\n            announcement={announcement}\n          />\n        </ViewOr>\n\n        {/* Step 1 */}\n        <></>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Types\nimport type { UseStep } from 'hooks/useStep';\n// Components\nimport { Translate } from 'components/language';\nimport { StepRankingWrapper } from 'components/ranking';\nimport { RuleInstruction } from 'components/text';\nimport { HostNextPhaseButton } from 'components/host';\nimport { RoundTypeExplanation } from './components/RoundTypeExplanation';\nimport { PointsHighlight } from 'components/metrics/PointsHighlight';\n\ntype StepRankingProps = {\n  players: GamePlayers;\n  round: GameRound;\n  ranking: GameRanking;\n  goToPreviousStep: UseStep['goToPreviousStep'];\n  roundType: string;\n};\n\nexport function StepRanking({ players, ranking, goToPreviousStep, round, roundType }: StepRankingProps) {\n  return (\n    <StepRankingWrapper\n      players={players}\n      ranking={ranking}\n      gainedPointsDescriptions={[\n        <Translate pt=\"Posições corretas\" en=\"Correct positions\" />,\n        <Translate pt=\"Penalidade em rodadas especiais\" en=\"Penalty in special rounds\" />,\n        <Translate pt=\"Bonus por acertar todos\" en=\"Bonus points for getting all correct\" />,\n      ]}\n    >\n      <RuleInstruction type=\"alert\">\n        <Translate\n          pt={\n            <>\n              Acertar todos os cenários da rodada dá <PointsHighlight>2 pontos bônus</PointsHighlight>.\n            </>\n          }\n          en={\n            <>\n              Matching all scenarios in the round gives <PointsHighlight>2 bonus points</PointsHighlight>.\n            </>\n          }\n        />\n        <br />\n      </RuleInstruction>\n      <RoundTypeExplanation roundType={roundType} />\n\n      <Space className=\"space-container\" align=\"center\">\n        <Button onClick={goToPreviousStep}>\n          <Translate pt=\"Ver resultado novamente\" en=\"See results again\" />\n        </Button>\n      </Space>\n      <HostNextPhaseButton round={round} />\n    </StepRankingWrapper>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Space, Avatar as AntAvatar, Tooltip } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Utils\nimport { getAvatarColorById, sortPlayers } from 'utils/helpers';\n// Icons\nimport { BoxXIcon } from 'icons/BoxXIcon';\nimport { StarIcon } from 'icons/StarIcon';\n// Components\nimport { Avatar, AvatarName, AvatarStrip, IconAvatar } from 'components/avatars';\nimport { Translate } from 'components/language';\n\ntype ResultsProps = {\n  players: GamePlayers;\n  activePlayerId: PlayerId;\n  correctOrder: CardId[];\n  scenarioDictionary: Record<CardId, TextCard>;\n  roundType: string;\n};\n\nexport function Results({ players, activePlayerId, correctOrder, roundType }: ResultsProps) {\n  const width = useCardWidth(8, {\n    gap: 16,\n    minWidth: 100,\n    maxWidth: 200,\n    margin: 32,\n  });\n\n  const listOfPLayers = sortPlayers(players).filter((player) => player.id !== activePlayerId);\n\n  return (\n    <Space className=\"space-container\" direction=\"vertical\">\n      {listOfPLayers.map((player) => (\n        <Space className=\"scenarios-results\">\n          <AvatarStrip player={player} />\n          {player.currentOrder.map((cardId: CardId, index: number) => {\n            const isCorrect = correctOrder[index] === cardId;\n            const backgroundColor = isCorrect ? { backgroundColor: getAvatarColorById(player.avatarId) } : {};\n            return (\n              <div\n                key={`position-${index}`}\n                className={clsx('scenario', !isCorrect && 'scenario__incorrect-result')}\n                style={{ width: `${width}px`, ...backgroundColor }}\n              >\n                {isCorrect ? (\n                  <span>\n                    <Avatar id={player.avatarId} alt={player.name} size=\"small\" />{' '}\n                    <PositiveStarPoints roundType={roundType} position={index + 1} />\n                  </span>\n                ) : (\n                  <span>\n                    <Tooltip\n                      title={\n                        <Translate\n                          pt={\n                            <>\n                              <AvatarName player={player} addressUser size=\"small\" /> achou que esse cenário\n                              era na posição #{correctOrder.indexOf(cardId) + 1}\n                            </>\n                          }\n                          en={\n                            <>\n                              <AvatarName player={player} addressUser size=\"small\" /> thought this scenario\n                              would go in position #{correctOrder.indexOf(cardId) + 1}\n                            </>\n                          }\n                        />\n                      }\n                    >\n                      <AntAvatar size=\"small\">{correctOrder.indexOf(cardId) + 1}</AntAvatar>\n                    </Tooltip>\n                    <NegativeStarPoints roundType={roundType} position={index + 1} />\n                  </span>\n                )}\n              </div>\n            );\n          })}\n          <AvatarStrip player={player} />\n        </Space>\n      ))}\n    </Space>\n  );\n}\n\nfunction TripleStar() {\n  return (\n    <>\n      <IconAvatar icon={<StarIcon />} size=\"small\" />\n      <IconAvatar icon={<StarIcon />} size=\"small\" />\n      <IconAvatar icon={<StarIcon />} size=\"small\" />\n    </>\n  );\n}\n\ntype PositiveStarPointsProps = {\n  roundType: string;\n  position: number;\n};\n\nfunction PositiveStarPoints({ roundType, position }: PositiveStarPointsProps) {\n  if (roundType === 'SECOND_POSITION' && position === 2) {\n    return <TripleStar />;\n  }\n  if (roundType === 'CENTER_POSITION' && position === 3) {\n    return <TripleStar />;\n  }\n  if (roundType === 'FOURTH_POSITION' && position === 4) {\n    return <TripleStar />;\n  }\n\n  return <IconAvatar icon={<StarIcon />} size=\"small\" />;\n}\n\ntype NegativeStarPointsProps = {\n  roundType: string;\n  position: number;\n};\n\nfunction NegativeStarPoints({ roundType, position }: NegativeStarPointsProps) {\n  if (roundType === 'CURSED_FIRST_POSITION' && position === 1) {\n    return <IconAvatar icon={<BoxXIcon />} size=\"small\" />;\n  }\n  if (roundType === 'CURSED_LAST_POSITION' && position === 5) {\n    return <IconAvatar icon={<BoxXIcon />} size=\"small\" />;\n  }\n\n  return <></>;\n}\n","import { useMemo } from 'react';\n// Ant Design Resources\nimport { Space } from 'antd';\n// Types\nimport type { UseStep } from 'hooks/useStep';\n// Utils\nimport { getReference } from './utils/helpers';\n// Components\nimport { TimedButton } from 'components/buttons';\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { RuleInstruction, Title } from 'components/text';\nimport { Scenarios } from './components/Scenarios';\nimport { AvatarName } from 'components/avatars';\nimport { Results } from './components/Results';\nimport { RoundTypeExplanation } from './components/RoundTypeExplanation';\n\ntype StepRevealProps = {\n  activePlayer: GamePlayer;\n  players: GamePlayers;\n  goToNextStep: UseStep['goToNextStep'];\n  scenarios: TextCard[];\n  roundType: string;\n} & AnnouncementProps;\n\nexport function StepReveal({\n  announcement,\n  activePlayer,\n  players,\n  goToNextStep,\n  scenarios,\n  roundType,\n}: StepRevealProps) {\n  const scenarioDictionary = useMemo(\n    () =>\n      scenarios.reduce(\n        (acc, scenario) => {\n          acc[scenario.id] = scenario;\n          return acc;\n        },\n        {} as Record<CardId, TextCard>\n      ),\n    [scenarios]\n  );\n\n  const result = (activePlayer.currentOrder ?? []).map((id: CardId) => scenarioDictionary[id]);\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title>\n        <Translate\n          pt={\n            <>\n              Resultado para <AvatarName player={activePlayer} />\n            </>\n          }\n          en={\n            <>\n              Results for <AvatarName player={activePlayer} />\n            </>\n          }\n        />\n      </Title>\n\n      <RuleInstruction type=\"rule\">\n        <Translate\n          pt={\n            <>\n              Essa é a ordem que o(a) juiz(a) {activePlayer.name} escolheu os cenários, do ruim para o pior.\n              Abaixo de cada cenário você pode ver a posição que cada jogador escolheu e se eles ganharam\n              pontos.\n            </>\n          }\n          en={\n            <>\n              This is the order that {activePlayer.name} chose the scenarios, from bad to worst. Below each\n              scenario you can see the position that each player chose and if they got any points.\n            </>\n          }\n        />\n\n        {roundType !== 'NORMAL' && (\n          <>\n            <br />\n            <RoundTypeExplanation roundType={roundType} />\n          </>\n        )}\n      </RuleInstruction>\n\n      <Scenarios scenarios={result} reference={getReference('negative')} player={activePlayer} />\n\n      <Results\n        players={players}\n        activePlayerId={activePlayer.id}\n        correctOrder={activePlayer.currentOrder ?? []}\n        scenarioDictionary={scenarioDictionary}\n        roundType={roundType}\n      />\n\n      <Space className=\"space-container\" align=\"center\">\n        <TimedButton duration={40} onExpire={goToNextStep} onClick={goToNextStep}>\n          <Translate pt=\"Ver Ranking\" en=\"See Ranking\" />\n        </TimedButton>\n      </Space>\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useStep } from 'hooks/useStep';\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { QueueIcon } from 'icons/QueueIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\nimport { StepRanking } from './StepRanking';\nimport { StepReveal } from './StepReveal';\nimport { Instruction } from 'components/text';\n\nexport function PhaseResults({ players, state, info }: PhaseProps) {\n  const { step, goToPreviousStep, goToNextStep } = useStep();\n  const [activePlayer] = useWhichPlayerIsThe('activePlayerId', state, players);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<QueueIcon />}\n      title={<Translate pt=\"Resultado\" en=\"Results\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <Instruction>\n        <Translate pt=\"Quem será que acertou mais?\" en=\"Who got the most right?\" />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.FILEIRA_DE_FATOS.RESULTS}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepReveal\n          scenarios={state.scenarios}\n          players={players}\n          activePlayer={activePlayer}\n          announcement={announcement}\n          goToNextStep={goToNextStep}\n          roundType={state.roundType}\n        />\n\n        {/* Step 1 */}\n        <StepRanking\n          players={players}\n          round={state.round}\n          ranking={state.ranking}\n          goToPreviousStep={goToPreviousStep}\n          roundType={state.roundType}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","// Ant Design Resources\nimport { Avatar, Space } from 'antd';\n// Types\nimport type { ScaleEntry } from '../utils/types';\n// Hook\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { EmojiCard } from 'components/cards/EmojiCard';\nimport { DualTranslate } from 'components/language';\nimport { AvatarStrip } from 'components/avatars';\n\ntype ScenarioCardProps = {\n  player: GamePlayer;\n  scenarios: (TextCard | null)[];\n  reference: ScaleEntry[];\n};\n\nexport function FinalScenarios({ scenarios, reference, player }: ScenarioCardProps) {\n  const width = useCardWidth(8, {\n    gap: 16,\n    minWidth: 100,\n    maxWidth: 200,\n    margin: 32,\n  });\n\n  return (\n    <Space className=\"final-scenarios\">\n      <AvatarStrip player={player} withName />\n      {scenarios.map((entry, index) => (\n        <div\n          key={`${player.id}-position-${index}-${(entry ?? {}).id}`}\n          className=\"scenario\"\n          style={{ width: `${width}px` }}\n        >\n          <Avatar>{index + 1}</Avatar>\n          <div className=\"scenario__tagline\">\n            <DualTranslate>{reference[index].text}</DualTranslate>\n          </div>\n          <EmojiCard id={reference[index].id} className=\"scenario__emoji\" />\n          {entry && <div className=\"scenario__card\">{entry.text}</div>}\n        </div>\n      ))}\n    </Space>\n  );\n}\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Utils\nimport { getReference } from './utils/helpers';\nimport achievementsReference from './utils/achievements';\n// Icons\nimport { FlagIcon } from 'icons/FlagIcon';\n// Components\nimport { GameOverWrapper } from 'components/game-over';\nimport { Translate } from 'components/language';\nimport { Container } from 'components/general/Container';\nimport { FinalScenarios } from './components/FinalScenarios';\nimport { Achievements } from 'components/general/Achievements';\n\nexport function PhaseGameOver({ state, info, players }: PhaseProps) {\n  return (\n    <GameOverWrapper info={info} state={state} players={players} announcementIcon={<FlagIcon />}>\n      <Achievements achievements={state.achievements} players={players} reference={achievementsReference} />\n\n      <Container title={<Translate pt=\"Cenários\" en=\"Scenarios\" />}>\n        {state.gallery &&\n          state.gallery.map((entry: PlainObject, index: number) => (\n            <Space className=\"space-contained\" key={`gallery-entry-${entry.playerId}-${index}`}>\n              <FinalScenarios\n                scenarios={entry.scenarios}\n                reference={getReference('negative')}\n                player={players[entry.playerId]}\n              />\n            </Space>\n          ))}\n      </Container>\n    </GameOverWrapper>\n  );\n}\n","import { ConfigProvider } from 'antd';\n// Constants\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport { LoadingPage } from 'components/loaders';\nimport { PhaseOrdering } from './PhaseOrdering';\nimport { PhaseResults } from './PhaseResults';\nimport { PhaseGameOver } from './PhaseGameOver';\n// Sass\nimport './utils/styles.scss';\n\nfunction getActiveComponent(state: GameState) {\n  // If phase is not defined, it is likely that the game is still loading\n  if (state && !state.phase) return LoadingPage;\n\n  switch (state.phase) {\n    case PHASES.DEFAULT.LOBBY:\n      return PhaseLobby;\n    case PHASES.DEFAULT.RULES:\n      return PhaseRules;\n    case PHASES.DEFAULT.SETUP:\n      return PhaseSetup;\n    case PHASES.FILEIRA_DE_FATOS.ORDERING:\n      return PhaseOrdering;\n    case PHASES.FILEIRA_DE_FATOS.RESULTS:\n      return PhaseResults;\n    case PHASES.DEFAULT.GAME_OVER:\n      return PhaseGameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionFileiraDeFatos() {\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorPrimary: THEME_COLORS.BLOOD,\n          colorLink: THEME_COLORS.BLOOD,\n        },\n      }}\n    >\n      <Session gameCollection={GAME_COLLECTION.FILEIRA_DE_FATOS} getActiveComponent={getActiveComponent} />\n    </ConfigProvider>\n  );\n}\n\nexport default SessionFileiraDeFatos;\n","const ACHIEVEMENTS = {\n  MOST_FIRST_POSITIONS: 'MOST_FIRST_POSITIONS',\n  FEWEST_FIRST_POSITIONS: 'FEWEST_FIRST_POSITIONS',\n  MOST_SECOND_POSITIONS: 'MOST_SECOND_POSITIONS',\n  FEWEST_SECOND_POSITIONS: 'FEWEST_SECOND_POSITIONS',\n  MOST_THIRD_POSITIONS: 'MOST_THIRD_POSITIONS',\n  FEWEST_THIRD_POSITIONS: 'FEWEST_THIRD_POSITIONS',\n  MOST_FOURTH_POSITIONS: 'MOST_FOURTH_POSITIONS',\n  FEWEST_FOURTH_POSITIONS: 'FEWEST_FOURTH_POSITIONS',\n  MOST_FIFTH_POSITIONS: 'MOST_FIFTH_POSITIONS',\n  FEWEST_FIFTH_POSITIONS: 'FEWEST_FIFTH_POSITIONS',\n  BEST_COMMON_SENSE: 'BEST_COMMON_SENSE',\n  WORST_COMMON_SENSE: 'WORST_COMMON_SENSE',\n  PERFECT_GUESS: 'PERFECT_GUESS',\n};\n\nexport const achievementsReference: AchievementReference = {\n  [ACHIEVEMENTS.MOST_FIRST_POSITIONS]: {\n    icon: 'one',\n    title: {\n      pt: 'Melhores 1s',\n      en: 'Best #1s',\n    },\n    description: {\n      pt: 'Acertou cenários na posição 1 mais vezes',\n      en: 'Guessed scenarios in the #1 position correctly the most times',\n    },\n  },\n  [ACHIEVEMENTS.FEWEST_FIRST_POSITIONS]: {\n    icon: 'one',\n    title: {\n      pt: 'Piores 1s',\n      en: 'Worst #1s',\n    },\n    description: {\n      pt: 'Errou cenários na posição 1 mais vezes',\n      en: 'Guessed scenarios in the #1 position wrong the most times',\n    },\n  },\n  [ACHIEVEMENTS.MOST_SECOND_POSITIONS]: {\n    icon: 'two',\n    title: {\n      pt: 'Melhores 2s',\n      en: 'Best #2s',\n    },\n    description: {\n      pt: 'Acertou cenários na posição 2 mais vezes',\n      en: 'Guessed scenarios in the #2 position correctly the most times',\n    },\n  },\n  [ACHIEVEMENTS.FEWEST_SECOND_POSITIONS]: {\n    icon: 'two',\n    title: {\n      pt: 'Piores 2s',\n      en: 'Worst #2s',\n    },\n    description: {\n      pt: 'Errou cenários na posição 2 mais vezes',\n      en: 'Guessed scenarios in the #2 position wrong the most times',\n    },\n  },\n  [ACHIEVEMENTS.MOST_THIRD_POSITIONS]: {\n    icon: 'three',\n    title: {\n      pt: 'Melhores 3s',\n      en: 'Best #3s',\n    },\n    description: {\n      pt: 'Acertou cenários na posição 3 mais vezes',\n      en: 'Guessed scenarios in the #3 position correctly the most times',\n    },\n  },\n  [ACHIEVEMENTS.FEWEST_THIRD_POSITIONS]: {\n    icon: 'three',\n    title: {\n      pt: 'Piores 3s',\n      en: 'Worst #3s',\n    },\n    description: {\n      pt: 'Errou cenários na posição 3 mais vezes',\n      en: 'Guessed scenarios in the #3 position wrong the most times',\n    },\n  },\n  [ACHIEVEMENTS.MOST_FOURTH_POSITIONS]: {\n    icon: 'four',\n    title: {\n      pt: 'Melhores 4s',\n      en: 'Best #4s',\n    },\n    description: {\n      pt: 'Acertou cenários na posição 4 mais vezes',\n      en: 'Guessed scenarios in the #4 position correctly the most times',\n    },\n  },\n  [ACHIEVEMENTS.FEWEST_FOURTH_POSITIONS]: {\n    icon: 'four',\n    title: {\n      pt: 'Piores 4s',\n      en: 'Worst #4s',\n    },\n    description: {\n      pt: 'Errou cenários na posição 4 mais vezes',\n      en: 'Guessed scenarios in the #4 position wrong the most times',\n    },\n  },\n  [ACHIEVEMENTS.MOST_FIFTH_POSITIONS]: {\n    icon: 'five',\n    title: {\n      pt: 'Melhores 5s',\n      en: 'Best #5s',\n    },\n    description: {\n      pt: 'Acertou cenários na posição 5 mais vezes',\n      en: 'Guessed scenarios in the #5 position correctly the most times',\n    },\n  },\n  [ACHIEVEMENTS.FEWEST_FIFTH_POSITIONS]: {\n    icon: 'five',\n    title: {\n      pt: 'Piores 5s',\n      en: 'Worst #5s',\n    },\n    description: {\n      pt: 'Errou cenários na posição 5 mais vezes',\n      en: 'Guessed scenarios in the #5 position wrong the most times',\n    },\n  },\n  [ACHIEVEMENTS.BEST_COMMON_SENSE]: {\n    icon: 'scale',\n    title: {\n      pt: 'Melhor Senso Comum',\n      en: 'Best Common Sense',\n    },\n    description: {\n      pt: 'Teve jogadores acertando seus cenários mais vezes',\n      en: 'Had players guessing your scenarios the most times',\n    },\n  },\n  [ACHIEVEMENTS.WORST_COMMON_SENSE]: {\n    icon: 'person',\n    title: {\n      pt: 'Mais individualista',\n      en: 'Most Individualistic',\n    },\n    description: {\n      pt: 'Teve jogadores acertando seus cenários menos vezes',\n      en: 'Had players guessing your scenarios the fewest times',\n    },\n  },\n  [ACHIEVEMENTS.PERFECT_GUESS]: {\n    icon: 'graph-increase',\n    title: {\n      pt: 'Mais Completamente Correto',\n      en: 'Most Perfect Kills',\n    },\n    description: {\n      pt: 'Acertou todos cenários nem mais rodadas',\n      en: 'Guessed all scenarios correctly in more rounds',\n    },\n  },\n};\n\nexport default achievementsReference;\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\nimport { PLACEHOLDER_PLAYER } from 'utils/constants';\n\n/**\n * Gets player that is assigned to a property in the state\n * @param propertyName\n * @param state\n * @param players\n * @returns a player instance, a boolean if the player is assigned to given property\n */\nexport function useWhichPlayerIsThe(\n  propertyName = 'activePlayer',\n  state: PlainObject = {},\n  players: GamePlayers = {}\n): [GamePlayer, boolean] {\n  const [userId] = useGlobalState('userId');\n  const [activePlayer, setActivePlayer] = useState<GamePlayer>(PLACEHOLDER_PLAYER);\n  const [isUser, setIsUser] = useState(false);\n\n  // Determine if user is active as the guesser, the clue giver, the psychic, the storyteller, etc\n  useEffect(() => {\n    const activePlayer = state?.[propertyName];\n    setActivePlayer(players?.[activePlayer] ?? {});\n    setIsUser(state?.[propertyName] === userId);\n  }, [players, propertyName, state, userId]);\n\n  return [activePlayer, isUser];\n}\n","export function BarChartIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path fill=\"#ffe27a\" d=\"M123.1 480H49.6V309.2a10 10 0 0110-10H113a10 10 0 0110 10z\"></path>\n      <path fill=\"#ffba57\" d=\"M236.2 480h-73.5V233.5a10 10 0 0110-10h53.5a10 10 0 0110 10z\"></path>\n      <path fill=\"#98db7c\" d=\"M349.3 480h-73.5V148.8a10 10 0 0110-10h53.5a10 10 0 0110 10z\"></path>\n      <path fill=\"#8bcaff\" d=\"M462.4 480H389V54a10 10 0 0110-10h53.5a10 10 0 0110 10z\"></path>\n      <path fill=\"#f9cf58\" d=\"M49.6 462H123v18H49.6z\"></path>\n      <path fill=\"#ffac3e\" d=\"M162.7 462h73.5v18h-73.5z\"></path>\n      <path fill=\"#82d361\" d=\"M275.8 462h73.5v18h-73.5z\"></path>\n      <path fill=\"#6cc4ff\" d=\"M388.9 462h73.5v18H389z\"></path>\n      <path d=\"M504.5 472.4H470V251.8a7.5 7.5 0 10-15 0v220.6h-58.6V54.1a2.5 2.5 0 012.5-2.5h53.5A2.5 2.5 0 01455 54v167.7a7.5 7.5 0 0015 0V54a17.6 17.6 0 00-17.5-17.6H399A17.6 17.6 0 00381.5 54v418.3h-24.6V148.8a17.6 17.6 0 00-17.5-17.6h-53.5a17.6 17.6 0 00-17.5 17.6v323.6h-24.6v-239a17.6 17.6 0 00-17.5-17.5h-53.5a17.6 17.6 0 00-17.5 17.5v86.8a7.5 7.5 0 0015 0v-86.7a2.5 2.5 0 012.5-2.5h53.5a2.5 2.5 0 012.5 2.5v239h-58.5V350.2a7.5 7.5 0 10-15 0v122.3h-24.6V309.1a17.6 17.6 0 00-17.5-17.6H59.6A17.6 17.6 0 0042 309.2v163.3H7.5a7.5 7.5 0 000 15h497a7.5 7.5 0 000-15zM283.3 148.8a2.5 2.5 0 012.5-2.5h53.5a2.5 2.5 0 012.5 2.5v323.6h-58.5zM57 309.2a2.5 2.5 0 012.5-2.5H113a2.5 2.5 0 012.5 2.5v163.3H57.1z\"></path>\n    </svg>\n  );\n}\n","export function BoxXIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#f07281\"\n        d=\"M473.2 481.1H38.8a31.28 31.28 0 01-31.3-31.3V45.2A37.73 37.73 0 0145.2 7.5h421.6a37.73 37.73 0 0137.7 37.7v404.6a31.28 31.28 0 01-31.3 31.3z\"\n      ></path>\n      <path\n        fill=\"#eb5569\"\n        d=\"M504.5 45.2v404.6a31.28 31.28 0 01-31.3 31.3H452a31.28 31.28 0 0031.3-31.3V45.2a37.73 37.73 0 00-37.7-37.7h21.1a37.75 37.75 0 0137.8 37.7z\"\n      ></path>\n      <path\n        fill=\"#f07281\"\n        d=\"M434.7 436.5H77.3a25.65 25.65 0 01-25.6-25.6V82.8A30.81 30.81 0 0182.5 52h347.1a30.81 30.81 0 0130.8 30.8v328.1a25.73 25.73 0 01-25.7 25.6z\"\n      ></path>\n      <path\n        fill=\"#eb5569\"\n        d=\"M429.5 52.1h-27.4a30.81 30.81 0 0130.8 30.8V411a25.65 25.65 0 01-25.6 25.6h27.4a25.65 25.65 0 0025.6-25.6V82.8a30.73 30.73 0 00-30.8-30.7z\"\n      ></path>\n      <path d=\"M512 45.2C512 21.1 492.1 0 466.8 0H45.2C20.7-.1.1 20.1 0 45.2v404.6c0 20.5 17 38.8 38.8 38.8h357.4a7.5 7.5 0 000-15H38.8a24.41 24.41 0 01-11.4-2.9l33.1-31.3a33.05 33.05 0 0016.8 4.6h357.4a33.05 33.05 0 0016.8-4.6l33.1 31.3a23.28 23.28 0 01-11.4 2.9h-42a7.5 7.5 0 000 15h42c20.9.1 38.7-17.2 38.8-38.8zM466.8 15a29.94 29.94 0 0116 4.6l-32.8 31a37.88 37.88 0 00-20.5-6h-347a37.63 37.63 0 00-20.5 6l-32.8-31a29.94 29.94 0 0116-4.6zM15 449.8V45.2a30.62 30.62 0 013.8-14.7L51.1 61a38.48 38.48 0 00-6.9 21.9V411a32.94 32.94 0 005.4 18.1l-32.4 30.7a24.32 24.32 0 01-2.2-10zM77.3 429a18.1 18.1 0 01-18.1-18.1V82.8a23.32 23.32 0 0123.3-23.3h347.1a23.32 23.32 0 0123.3 23.3v22.5a7.5 7.5 0 0015 0V82.8a38.48 38.48 0 00-6.9-21.9l32.3-30.5a30.62 30.62 0 013.8 14.7v404.6a23.51 23.51 0 01-2.2 9.9l-32.4-30.7a32.94 32.94 0 005.4-18.1V141.6a7.5 7.5 0 00-15 0V411a18.1 18.1 0 01-18.1 18.1z\"></path>\n      <path\n        fill=\"#ffeee6\"\n        d=\"M348.4 287.2L306 244.8l42.4-42.4a35.36 35.36 0 00-50-50L256 194.8l-42.4-42.4a35.36 35.36 0 00-50 50l42.4 42.4-42.4 42.4a35.36 35.36 0 0050 50l42.4-42.4 42.4 42.4a35.36 35.36 0 0050-50z\"\n      ></path>\n      <path d=\"M156 344.8a46.11 46.11 0 0065.2 0L256 310l34.8 34.8a46.1 46.1 0 0065.2-65.2l-34.8-34.8L356 210a46.1 46.1 0 00-65.2-65.2L256 179.6l-34.8-34.8A46.1 46.1 0 00156 210l34.8 34.8-34.8 34.8a46.11 46.11 0 000 65.2zm15.2-50l42.4-42.4a10.93 10.93 0 003.2-7.6 10.35 10.35 0 00-3.2-7.6l-42.4-42.4A24.61 24.61 0 01206 160l42.4 42.4a10.74 10.74 0 0015.2 0L306 160a24.61 24.61 0 0134.8 34.8l-42.4 42.4a10.93 10.93 0 00-3.2 7.6 10.35 10.35 0 003.2 7.6l42.4 42.4a24.61 24.61 0 01-34.8 34.8l-42.4-42.4a10.85 10.85 0 00-7.6-3.2 10.68 10.68 0 00-7.6 3.2L206 329.6a24.61 24.61 0 01-34.8-34.8z\"></path>\n    </svg>\n  );\n}\n","export function FlagIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#f58a97\"\n        d=\"M440.433 381.526H256.629v-204.53h183.804c5.054 0 8.443 5.193 6.407 9.819l-39.439 89.627a7.005 7.005 0 000 5.639l39.439 89.627c2.036 4.625-1.352 9.818-6.407 9.818z\"\n      ></path>\n      <path\n        fill=\"#f07281\"\n        d=\"M407.402 282.081a6.997 6.997 0 010-5.639l39.439-89.627c2.036-4.626-1.353-9.819-6.407-9.819h-30c5.055 0 8.443 5.193 6.407 9.819l-39.439 89.627a6.997 6.997 0 000 5.639l39.439 89.626c2.036 4.626-1.353 9.819-6.407 9.819h30c5.055 0 8.443-5.193 6.407-9.819z\"\n      ></path>\n      <path fill=\"#f8a6af\" d=\"M304.7 291.526l-30-30H148.559V108.154H274.7c16.569 0 30 13.431 30 30z\"></path>\n      <path\n        fill=\"#f07281\"\n        d=\"M208.559 261.526H274.7c16.569 0 30 13.431 30 30 0 16.569-13.431 30-30 30h-36.142l-30 30v-90z\"\n      ></path>\n      <path\n        fill=\"#f58a97\"\n        d=\"M274.7 321.526h-36.142c-16.569 0-30 13.431-30 30 0 16.569 13.431 30 30 30H304.7z\"\n      ></path>\n      <path fill=\"#d8ecfe\" d=\"M109.559 74.5h39v378h-39z\"></path>\n      <path\n        fill=\"#f58a97\"\n        d=\"M67.059 504.5h124a2.5 2.5 0 002.5-2.5c0-35.622-28.878-64.5-64.5-64.5s-64.5 28.878-64.5 64.5a2.5 2.5 0 002.5 2.5z\"\n      ></path>\n      <path\n        fill=\"#f07281\"\n        d=\"M129.059 437.5a64.64 64.64 0 00-15 1.772c28.385 6.764 49.5 32.272 49.5 62.728a2.5 2.5 0 01-2.5 2.5h30a2.5 2.5 0 002.5-2.5c0-35.623-28.878-64.5-64.5-64.5z\"\n      ></path>\n      <circle cx=\"129.059\" cy=\"50.5\" r=\"43\" fill=\"#f58a97\"></circle>\n      <path\n        fill=\"#f07281\"\n        d=\"M129.059 7.5a42.9 42.9 0 00-15 2.694c16.351 6.088 28 21.834 28 40.306s-11.649 34.218-28 40.306a42.9 42.9 0 0015 2.694c23.748 0 43-19.252 43-43s-19.252-43-43-43z\"\n      ></path>\n      <path d=\"M453.704 368.689l-39.352-89.429 39.35-89.416a14.45 14.45 0 00-1.122-13.765 14.458 14.458 0 00-12.151-6.58h-48.621c-4.142 0-7.5 3.357-7.5 7.5s3.358 7.5 7.5 7.5h47.858l-39.135 88.926a14.56 14.56 0 00.003 11.675l39.132 88.93H304.777c-.026 0-.051-.004-.077-.004h-66.142c-12.407 0-22.5-10.094-22.5-22.5s10.093-22.5 22.5-22.5H274.7c20.675 0 37.495-16.818 37.499-37.492V184.5h44.609c4.142 0 7.5-3.357 7.5-7.5s-3.358-7.5-7.5-7.5H312.2v-31.35c0-20.678-16.822-37.5-37.5-37.5H156.06v-7.508c14.109-8.966 23.499-24.724 23.499-42.643 0-27.846-22.654-50.5-50.5-50.5s-50.5 22.654-50.5 50.5c0 17.92 9.391 33.679 23.501 42.645V347.38c0 4.143 3.358 7.5 7.5 7.5s7.5-3.357 7.5-7.5V99.548c3.848.942 7.864 1.452 11.999 1.452s8.152-.511 12.001-1.453v331.472A72.162 72.162 0 00129.059 430c-4.089 0-8.094.361-11.999 1.019V382.38c0-4.143-3.358-7.5-7.5-7.5s-7.5 3.357-7.5 7.5v52.892C75.701 445.976 57.058 471.844 57.058 502c0 5.514 4.486 10 10 10h124c5.514 0 10-4.486 10-10 0-30.155-18.641-56.022-44.999-66.727V269.03h44.999v82.496c0 20.678 16.822 37.5 37.5 37.5l201.872.004c4.923 0 9.466-2.462 12.153-6.587a14.437 14.437 0 001.121-13.754zm-179.003-54.663h-36.142a37.297 37.297 0 00-22.5 7.521V269.03H274.7l.052-.003c12.383.028 22.448 10.11 22.448 22.499 0 12.407-10.093 22.5-22.499 22.5zM185.841 497H72.276c2.54-29.098 27.037-52 56.783-52s54.242 22.902 56.782 52zM129.058 86c-19.575 0-35.5-15.925-35.5-35.5s15.925-35.5 35.5-35.5 35.5 15.925 35.5 35.5-15.925 35.5-35.5 35.5zm79.5 168.026c-.026 0-.051.004-.077.004H156.06V115.65H274.7c12.407 0 22.5 10.094 22.5 22.5v123.396a37.302 37.302 0 00-22.5-7.52z\"></path>\n    </svg>\n  );\n}\n","export function QueueIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path fill=\"#965859\" d=\"M187.3 262.5v75a45 45 0 0045-45l-45-30z\"></path>\n      <path fill=\"#cb5956\" d=\"M202.3 292.5l-15-30-45 30a45 45 0 0045 45c8.27 0 15-20.15 15-45z\"></path>\n      <path fill=\"#33adc0\" d=\"M212.3 172.5h-30l20 120h30v-100a20 20 0 00-20-20z\"></path>\n      <path fill=\"#3ccae0\" d=\"M182.3 172.5h-20a20 20 0 00-20 20v100h60v-100a20 20 0 00-20-20z\"></path>\n      <path fill=\"#2c8896\" d=\"M142.29 255h90v15h-90zm0-30h90v15h-90zm0-30h90v15h-90z\"></path>\n      <path fill=\"#e5925c\" d=\"M187.3 52.5v90a45 45 0 100-90z\"></path>\n      <path fill=\"#f2ae5f\" d=\"M202.3 97.5c0-24.85-6.73-45-15-45a45 45 0 100 90c8.27 0 15-20.15 15-45z\"></path>\n      <path fill=\"#ff5a52\" d=\"M307.08 277.5v90a45 45 0 0045-45l-45-45z\"></path>\n      <path fill=\"#ff7a4c\" d=\"M322.08 322.5l-15-45-45 45a45 45 0 0045 45c8.28 0 15-20.15 15-45z\"></path>\n      <path fill=\"#44e7ff\" d=\"M332.08 227.5h-30l20 95h30v-75a20 20 0 00-20-20z\"></path>\n      <path fill=\"#90f0ff\" d=\"M302.08 227.5h-20a20 20 0 00-20 20v75h60v-75a20 20 0 00-20-20z\"></path>\n      <path fill=\"#764445\" d=\"M307.08 107.5v90a45 45 0 100-90z\"></path>\n      <path\n        fill=\"#965859\"\n        d=\"M322.08 152.5c0-24.85-6.72-45-15-45a45 45 0 100 90c8.28 0 15-20.15 15-45z\"\n      ></path>\n      <path fill=\"#2c8896\" d=\"M429.5 262.5v75a45 45 0 0045-45l-45-30z\"></path>\n      <path fill=\"#33adc0\" d=\"M444.5 292.5l-15-30-45 30a45 45 0 0045 45c8.29 0 15-20.15 15-45z\"></path>\n      <path fill=\"#9cc248\" d=\"M454.5 172.5h-30l20 120h30v-100a20 20 0 00-20-20z\"></path>\n      <path fill=\"#d4cf5e\" d=\"M424.5 172.5h-20a20 20 0 00-20 20v100h60v-100a20 20 0 00-20-20z\"></path>\n      <path fill=\"#965859\" d=\"M429.5 52.5v101l45-46v-10a45 45 0 00-45-45z\"></path>\n      <path fill=\"#b76759\" d=\"M429.5 52.5a45 45 0 00-45 45v10l60 46v-56c0-24.85-6.71-45-15-45z\"></path>\n      <path\n        fill=\"#361d1d\"\n        d=\"M448.21 107.5a22.6 22.6 0 00-3.7-4.26l-15 69.26a45 45 0 0045-45v-20h-26.3z\"\n      ></path>\n      <path\n        fill=\"#563131\"\n        d=\"M444.5 127.5v-24.26a22.48 22.48 0 00-33.7 4.26h-26.3v20a45 45 0 0045 45c8.29 0 15-20.15 15-45z\"\n      ></path>\n      <path fill=\"#ff5a52\" d=\"M92.5 172.5h-30v120l50-30v-70a20 20 0 00-20-20z\"></path>\n      <path fill=\"#ff7a4c\" d=\"M62.5 172.5h-20a20 20 0 00-20 20v100h60v-100a20 20 0 00-20-20z\"></path>\n      <path fill=\"#55585d\" d=\"M112.5 262.5h-30l-30 45 30 45h30z\"></path>\n      <path fill=\"#1c6c78\" d=\"M82.5 262.5h-60a59.75 59.75 0 00-15 39.66v50.34h75v-90z\"></path>\n      <path fill=\"#fabbc4\" d=\"M67.5 62.5v80a45 45 0 0042.43-60l-42.43-20z\"></path>\n      <path\n        fill=\"#ffd9d0\"\n        d=\"M25.07 82.5a45 45 0 0042.43 60c8.29 0 15-20.15 15-45 0-5.26-.3-10.3-.86-15l-14.14-20-42.43 20z\"\n      ></path>\n      <path fill=\"#894787\" d=\"M67.5 52.5l14.14 30h28.29a45 45 0 00-42.43-30z\"></path>\n      <path fill=\"#c43f9a\" d=\"M67.5 52.5a45 45 0 00-42.43 30h56.57c-2.06-17.48-7.6-30-14.14-30z\"></path>\n      <path\n        fill=\"#894787\"\n        d=\"M85 17.5h-1.7a17.48 17.48 0 00-31.6 0H50a17.5 17.5 0 100 35h35a17.5 17.5 0 100-35z\"\n      ></path>\n      <circle cx=\"429.5\" cy=\"202.5\" r=\"7.5\"></circle>\n      <circle cx=\"429.5\" cy=\"232.5\" r=\"7.5\"></circle>\n      <path d=\"M249.66 497.38l-24.87-8.29V329.2a52.32 52.32 0 0015-36.69v-100a27.53 27.53 0 00-27.5-27.5h-50a27.53 27.53 0 00-27.5 27.5v100a52.32 52.32 0 0015 36.7v165.3a7.5 7.5 0 005.13 7.12l30 10a7.5 7.5 0 104.74-14.24l-24.87-8.29V339.92c6.82 3.25 14.45 5.08 22.5 5.08s15.68-1.82 22.5-5.08V494.5a7.5 7.5 0 005.13 7.12l30 10a7.5 7.5 0 104.74-14.24zM162.3 180h50c6.9 0 12.5 5.6 12.5 12.5V285h-75v-92.5c0-6.9 5.6-12.5 12.5-12.5zm-11.75 120h73.5c-3.49 17.1-18.64 30-36.75 30s-33.26-12.9-36.75-30zm36.75-150c28.94 0 52.5-23.55 52.5-52.5S216.23 45 187.3 45s-52.5 23.55-52.5 52.5 23.54 52.5 52.5 52.5zm0-90c20.67 0 37.5 16.82 37.5 37.5S207.96 135 187.3 135s-37.5-16.82-37.5-37.5S166.6 60 187.3 60zm119.78 145a52.56 52.56 0 0052.5-52.5c0-16.7-7.85-31.6-20.04-41.22l1.54-2.66a7.5 7.5 0 10-13-7.5l-1.52 2.64a52.05 52.05 0 00-11.98-3.22V97.5a7.5 7.5 0 10-15 0v3.04c-4.17.6-8.18 1.7-11.98 3.22l-1.52-2.64a7.5 7.5 0 00-13 7.5l1.54 2.66a52.42 52.42 0 00-20.04 41.22 52.56 52.56 0 0052.5 52.5zm0-90c20.68 0 37.5 16.82 37.5 37.5s-16.82 37.5-37.5 37.5-37.5-16.82-37.5-37.5 16.82-37.5 37.5-37.5zm62.37 382.38l-24.87-8.29V359.2a52.32 52.32 0 0015-36.69v-75a27.53 27.53 0 00-27.5-27.5h-50a27.53 27.53 0 00-27.5 27.5v75a52.32 52.32 0 0015 36.7v135.3a7.5 7.5 0 005.13 7.12l30 10a7.5 7.5 0 104.74-14.24l-24.87-8.29V369.92c6.82 3.25 14.45 5.08 22.5 5.08s15.68-1.82 22.5-5.08V494.5a7.5 7.5 0 005.13 7.12l30 10a7.5 7.5 0 104.74-14.24zM282.08 235h50c6.9 0 12.5 5.6 12.5 12.5V315h-75v-67.5c0-6.9 5.6-12.5 12.5-12.5zm-11.75 95h73.5c-3.49 17.1-18.64 30-36.75 30s-33.26-12.9-36.75-30zm210.79-144.4a27.61 27.61 0 00-16.86-18.8A52.38 52.38 0 00482 127.5v-30a52.2 52.2 0 00-3.76-19.48l2.64-1.52a7.5 7.5 0 10-7.5-13l-2.66 1.54a52.93 52.93 0 00-8.76-8.76l1.54-2.66a7.5 7.5 0 10-13-7.5l-1.52 2.64A52.05 52.05 0 00437 45.54V42.5a7.5 7.5 0 10-15 0v3.04c-4.17.6-8.18 1.7-11.98 3.22l-1.52-2.64a7.5 7.5 0 10-13 7.5l1.54 2.66a52.93 52.93 0 00-8.76 8.76l-2.66-1.53a7.5 7.5 0 10-7.5 12.99l2.64 1.52A52.2 52.2 0 00377 97.5v30a52.38 52.38 0 0017.74 39.3A27.54 27.54 0 00377 192.5v100a52.32 52.32 0 0015 36.7v165.3a7.5 7.5 0 005.13 7.12l30 10a7.5 7.5 0 104.74-14.24L407 489.1V339.92c6.82 3.25 14.45 5.08 22.5 5.08s15.68-1.82 22.5-5.08V494.5a7.5 7.5 0 005.13 7.12l30 10a7.5 7.5 0 104.74-14.24L467 489.1V329.2a52.37 52.37 0 0014.54-29.86A37.56 37.56 0 00512 262.5v-40a37.55 37.55 0 00-30.88-36.9zM392 97.5c0-20.68 16.82-37.5 37.5-37.5S467 76.82 467 97.5v2.5h-15.14c-5.65-6.32-13.75-10-22.36-10s-16.7 3.68-22.36 10H392v-2.5zm0 30V115h18.8a7.5 7.5 0 006.22-3.33 15 15 0 0124.96 0 7.5 7.5 0 006.23 3.33h18.8v12.5c0 20.68-16.83 37.5-37.5 37.5S392 148.18 392 127.5zm12.5 52.5h50c6.9 0 12.5 5.6 12.5 12.5V285h-75v-92.5c0-6.9 5.6-12.5 12.5-12.5zm-11.74 120h73.49c-3.49 17.1-18.64 30-36.75 30s-33.26-12.9-36.74-30zM497 262.5c0 9.78-6.27 18.11-15 21.21v-82.42c8.73 3.1 15 11.43 15 21.21v40zM15 97.5c0 28.95 23.55 52.5 52.5 52.5S120 126.45 120 97.5c0-17.09-8.2-32.29-20.88-41.88a25 25 0 00-11.55-45.49C82.91 3.86 75.45 0 67.5 0S52.1 3.86 47.43 10.13a24.99 24.99 0 00-11.55 45.49A52.44 52.44 0 0015 97.5zM67.5 135a37.54 37.54 0 01-36.74-45h73.49a37.53 37.53 0 01-36.75 45zM37.52 75a37.47 37.47 0 0159.96 0H37.52zM50 45a10.01 10.01 0 010-20h1.7a7.5 7.5 0 006.78-4.28A9.92 9.92 0 0167.5 15c3.89 0 7.34 2.2 9.02 5.72A7.5 7.5 0 0083.3 25H85a10.01 10.01 0 010 20H50zm79.87 452.38L105 489.1V360h7.5a7.5 7.5 0 007.5-7.5v-160A27.53 27.53 0 0092.5 165h-50A27.53 27.53 0 0015 192.5v67.26a67.41 67.41 0 00-15 42.4v50.34a7.5 7.5 0 007.5 7.5H30v134.5a7.5 7.5 0 005.13 7.12l30 10a7.5 7.5 0 104.74-14.24L45 489.1V360h45v134.5a7.5 7.5 0 005.13 7.12l30 10a7.5 7.5 0 104.74-14.24zM42.5 180h50c6.9 0 12.5 5.6 12.5 12.5V255H60v-52.5a7.5 7.5 0 10-15 0V255H30v-62.5c0-6.9 5.6-12.5 12.5-12.5zM15 302.17A52.4 52.4 0 0126.04 270H45v52.5a7.5 7.5 0 1015 0V270h45v75H15v-42.83z\"></path>\n    </svg>\n  );\n}\n","export function StarIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffb820\"\n        d=\"M491.64 188.725l-153.53-22.31-68.66-139.12c-2.75-5.57-8.1-8.36-13.45-8.36l.02 400.2 137.3 72.19c11.01 5.78 23.86-3.56 21.76-15.81l-26.22-152.92 111.09-108.29c8.91-8.68 3.99-23.79-8.31-25.58z\"\n      ></path>\n      <path\n        fill=\"#ffd06a\"\n        d=\"M356.62 312.125s23.68 138.03 23.76 138.49c-.08-.01-122.45-31-124.36-31.48-.02-.01-137.34 72.19-137.34 72.19-11.01 5.78-23.86-3.56-21.76-15.81l26.22-152.92-111.09-108.29c-8.91-8.68-3.99-23.79 8.31-25.58l153.53-22.31 68.66-139.12c2.75-5.57 8.1-8.36 13.45-8.36l62.19 174.9 139.06 20.21z\"\n      ></path>\n      <path d=\"M510.883 196.615c-2.666-8.204-9.625-14.07-18.16-15.311l-149.632-21.743-66.918-135.588c-3.817-7.735-11.547-12.54-20.173-12.54s-16.356 4.805-20.173 12.54L168.91 159.561 19.278 181.305c-8.537 1.24-15.495 7.106-18.161 15.311s-.484 17.04 5.693 23.062l108.274 105.541-9.911 57.786a7.501 7.501 0 006.124 8.66 7.499 7.499 0 008.66-6.125l10.578-61.672a7.502 7.502 0 00-2.157-6.639L17.28 208.934c-2.089-2.036-2.798-4.909-1.897-7.684.902-2.775 3.164-4.683 6.052-5.103l153.534-22.31a7.498 7.498 0 005.647-4.103l68.662-139.125c1.292-2.617 3.804-4.179 6.722-4.179s5.431 1.562 6.722 4.179l68.663 139.125a7.5 7.5 0 005.647 4.103l153.534 22.31c2.888.42 5.15 2.327 6.051 5.102.902 2.775.193 5.648-1.896 7.685L383.622 317.228a7.499 7.499 0 00-2.157 6.639l26.227 152.913c.494 2.876-.621 5.617-2.982 7.332-2.361 1.714-5.312 1.929-7.895.57L259.49 412.487a7.504 7.504 0 00-6.98 0l-137.325 72.195c-2.583 1.358-5.535 1.144-7.894-.57-2.361-1.715-3.476-4.456-2.982-7.332l10.578-61.673a7.501 7.501 0 00-6.124-8.66 7.501 7.501 0 00-8.66 6.125l-10.578 61.673c-1.458 8.502 1.971 16.933 8.95 22.003 3.943 2.865 8.557 4.32 13.201 4.32a22.51 22.51 0 0010.49-2.608L256 427.6l133.834 70.36c7.635 4.014 16.713 3.357 23.692-1.712 6.979-5.07 10.408-13.502 8.949-22.003l-25.56-149.027L505.19 219.677c6.177-6.022 8.359-14.859 5.693-23.062z\"></path>\n    </svg>\n  );\n}\n","// This icon file is generated automatically.\nvar RiseOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M917 211.1l-199.2 24c-6.6.8-9.4 8.9-4.7 13.6l59.3 59.3-226 226-101.8-101.7c-6.3-6.3-16.4-6.2-22.6 0L100.3 754.1a8.03 8.03 0 000 11.3l45 45.2c3.1 3.1 8.2 3.1 11.3 0L433.3 534 535 635.7c6.3 6.2 16.4 6.2 22.6 0L829 364.5l59.3 59.3a8.01 8.01 0 0013.6-4.7l24-199.2c.7-5.1-3.7-9.5-8.9-8.8z\" } }] }, \"name\": \"rise\", \"theme\": \"outlined\" };\nexport default RiseOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport RiseOutlinedSvg from \"@ant-design/icons-svg/es/asn/RiseOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar RiseOutlined = function RiseOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: RiseOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  RiseOutlined.displayName = 'RiseOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(RiseOutlined);","// This icon file is generated automatically.\nvar UndoOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M511.4 124C290.5 124.3 112 303 112 523.9c0 128 60.2 242 153.8 315.2l-37.5 48c-4.1 5.3-.3 13 6.3 12.9l167-.8c5.2 0 9-4.9 7.7-9.9L369.8 727a8 8 0 00-14.1-3L315 776.1c-10.2-8-20-16.7-29.3-26a318.64 318.64 0 01-68.6-101.7C200.4 609 192 567.1 192 523.9s8.4-85.1 25.1-124.5c16.1-38.1 39.2-72.3 68.6-101.7 29.4-29.4 63.6-52.5 101.7-68.6C426.9 212.4 468.8 204 512 204s85.1 8.4 124.5 25.1c38.1 16.1 72.3 39.2 101.7 68.6 29.4 29.4 52.5 63.6 68.6 101.7 16.7 39.4 25.1 81.3 25.1 124.5s-8.4 85.1-25.1 124.5a318.64 318.64 0 01-68.6 101.7c-7.5 7.5-15.3 14.5-23.4 21.2a7.93 7.93 0 00-1.2 11.1l39.4 50.5c2.8 3.5 7.9 4.1 11.4 1.3C854.5 760.8 912 649.1 912 523.9c0-221.1-179.4-400.2-400.6-399.9z\" } }] }, \"name\": \"undo\", \"theme\": \"outlined\" };\nexport default UndoOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport UndoOutlinedSvg from \"@ant-design/icons-svg/es/asn/UndoOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar UndoOutlined = function UndoOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: UndoOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  UndoOutlined.displayName = 'UndoOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(UndoOutlined);"],"names":["unknownText","pt","en","Achievements","players","achievements","reference","length","className","clsx","getAnimationClass","size","level","map","achievement","index","type","icon","achievementObj","player","playerId","delay","id","title","avatarId","name","Boolean","description","content","value","shape","Container","children","contained","titleProps","childrenContainerProps","spaceProps","restTitleProps","childrenClassName","wrap","direction","childrenDirection","restChildrenContainerProps","MetricHighlight","iconSize","iconPlacement","PointsHighlight","GainedPoint","gainedPoint","order","isPositive","isNegative","color","GainedPoints","gainedPoints","gainedPointsDescriptions","points","Array","isArray","RankingBoard","ranking","hideGainedPoints","useState","displayStep","setDisplayStep","sortedRanking","setSortedRanking","reRank","setReRank","useMeasure","ref","height","maxPoints","useMemo","Math","max","scores","newScore","seconds","useCountdown","duration","autoStart","onExpire","useEffectOnce","positions","lastPosition","lastPoints","rankByFinalScoreDict","orderBy","reduce","acc","entry","rankByPreviousScore","tempSortedRanking","newEntry","position","previousScore","useEffect","style","opacity","CrownFilled","hPosition","top","undefined","StepRankingWrapper","subtitle","white","useTemporarilyHidePlayersBar","CaretUpOutlined","View","ViewIf","condition","ViewOr","ViewSwitch","cases","Error","console","warn","submitAction","httpsCallable","functions","POSITIVE_SCALE","text","NEGATIVE_SCALE","getReference","kind","Scenarios","scenarios","width","useCardWidth","gap","minWidth","maxWidth","margin","EmojiCard","SelectableScenarioOrder","onSubmitOrder","isLoading","useLoading","fill","selection","setSelection","availableScenarios","filter","card","includes","onClick","newSelection","firstNullIndex","findIndex","onAddScenario","findLastIndex","UndoOutlined","disabled","ghost","firstHalf","shuffle","secondHalf","mockOrder","orderedScenarios","RiseOutlined","some","SpecialRule","POSITIONS","CURSED_FIRST_POSITION","SECOND_POSITION","CENTER_POSITION","FOURTH_POSITION","CURSED_LAST_POSITION","RoundTypeExplanation","roundType","StepOrderScenarios","announcement","activePlayer","fullWidth","StepJudgeScenarios","FirstRoundIntroduction","PhaseOrdering","state","info","useStep","step","setStep","useWhichPlayerIsThe","isTheActivePlayer","translate","useLanguage","request","useAPICall","apiFunction","actionName","onSuccess","onError","successMessage","errorMessage","payload","action","useOnSubmitOrderingAPIRequest","isFirstRound","round","current","BarChartIcon","currentRound","addressUser","turnOrder","activePlayerId","phase","allowedPhase","PHASES","StepRanking","goToPreviousStep","align","Results","correctOrder","listOfPLayers","sortPlayers","currentOrder","cardId","isCorrect","backgroundColor","getAvatarColorById","alt","PositiveStarPoints","indexOf","NegativeStarPoints","TripleStar","StarIcon","BoxXIcon","StepReveal","goToNextStep","scenarioDictionary","scenario","result","PhaseResults","QueueIcon","FinalScenarios","withName","PhaseGameOver","announcementIcon","FlagIcon","achievementsReference","gallery","getActiveComponent","LoadingPage","PhaseLobby","PhaseRules","PhaseSetup","PageError","theme","token","colorPrimary","THEME_COLORS","colorLink","gameCollection","GAME_COLLECTION","ACHIEVEMENTS","propertyName","useGlobalState","userId","PLACEHOLDER_PLAYER","setActivePlayer","isUser","setIsUser","props","xmlns","viewBox","d","cx","cy","r","React","AntdIcon","_extends","RiseOutlinedSvg","UndoOutlinedSvg"],"sourceRoot":""}