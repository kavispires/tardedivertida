{"version":3,"file":"static/js/arte-ruim.673bcaa3.chunk.js","mappings":"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,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GACvG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,KAC/F,OAEF,CACE,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACvG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpG,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACnG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,MAAO,OAEd,CACE,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACtG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACtG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,MAAO,MAE/B,CACE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,OAEvC,CACE,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACrG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACtG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IACrG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACvG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,OAE3D,CACE,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,OAErE,CACE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,OAEvC,CACE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,KAAM,GAAK,OAErF,CACE,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACpG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,KAAM,OAErD,CACE,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GACnG,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IACnG,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,OAEzF,CACE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,OAEhE,CACE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,OAE1E,CACE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,OAEhE,CACE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACpG,IAAK,IAAK,IAAK,IAAK,IAAK,MAAO,QAIvBxO,EAAc,WACzB,OAAOyO,EAAAA,EAAAA,YAAWD,GAAgBE,EAAAA,EAAAA,GAAc,CAAC,EAAG,EAAG,EAAG,EAAG,IAC9D,C","sources":["components/audio/ArteRuimTimerSound.tsx","components/canvas/CanvasResizer.tsx","components/canvas/CanvasSVG.tsx","components/canvas/DrawingCanvas.tsx","components/cards/Card.tsx","components/general/Achievements.tsx","components/metrics/TimeHighlight.tsx","components/views/View.tsx","components/views/ViewIf.tsx","components/views/ViewOr.tsx","components/views/ViewSwitch.tsx","games/arte-ruim/StepDraw.tsx","games/arte-ruim/components/TextBlobs.tsx","games/arte-ruim/components/LevelInstruction.tsx","games/arte-ruim/PhaseDraw.tsx","games/arte-ruim/utils/api-requests.ts","games/arte-ruim/utils/helpers.ts","games/arte-ruim/components/EvaluationAllDrawings.tsx","games/arte-ruim/components/Card.tsx","games/arte-ruim/components/EvaluationAllCards.tsx","games/arte-ruim/StepEvaluation.tsx","games/arte-ruim/components/EvaluatedDrawings.tsx","games/arte-ruim/PhaseEvaluation.tsx","games/arte-ruim/components/GalleryWindowCredits.tsx","games/arte-ruim/components/GalleryWindowGuesses.tsx","games/arte-ruim/components/GalleryWindowResult.tsx","games/arte-ruim/StepGallery.tsx","games/arte-ruim/utils/constants.ts","games/arte-ruim/StepRanking.tsx","games/arte-ruim/PhaseGallery.tsx","games/arte-ruim/components/DrawingGrade.tsx","games/arte-ruim/components/FinalGallery.tsx","games/arte-ruim/PhaseGameOver.tsx","games/arte-ruim/SessionArteRuim.tsx","games/arte-ruim/utils/achievements.ts","icons/ClockIcon.tsx","icons/GarbageIcon.tsx","icons/PaintingIcon.tsx","icons/PanicIcon.tsx","icons/PictureIcon.tsx","mock/drawing.ts"],"sourcesContent":["import { useGlobalState } from 'hooks/useGlobalState';\nimport { useEffect } from 'react';\nimport { useAudio } from 'react-use';\n// Sound\nconst arteRuimTimer = require('assets/sounds/arte-ruim-timer-remix.mp3');\n\nexport function ArteRuimTimerSound() {\n  const [volume] = useGlobalState('volume');\n  const [audio, , controls] = useAudio({\n    src: arteRuimTimer,\n    autoPlay: true,\n    loop: false,\n  });\n\n  // Updated volume\n  useEffect(() => {\n    controls.volume(volume);\n  }, [volume]); // eslint-disable-line\n\n  return <>{audio}</>;\n}\n","// Ant Design Resources\nimport { Slider } from 'antd';\nimport { DragOutlined } from '@ant-design/icons';\n// State & Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\n// Components\nimport { FixedMenuButton } from 'components/buttons';\nimport { Translate } from 'components/language';\n\n/**\n * Fixed Menu Button for resizing canvas\n */\nexport const CanvasResizer = () => {\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n\n  return (\n    <FixedMenuButton\n      type=\"popover\"\n      position={1}\n      icon={<DragOutlined />}\n      label={labelText}\n      content={\n        <div className=\"canvas-resizer\">\n          <div className=\"canvas-resizer__label\">{labelText}</div>\n          <Slider\n            className=\"canvas-resizer__slider\"\n            value={canvasSize ?? 100}\n            min={150}\n            max={500}\n            step={50}\n            onChange={setCanvasSize}\n          />\n        </div>\n      }\n    />\n  );\n};\n\nconst labelText = <Translate pt=\"Tamanho das Artes\" en=\"Art Size\" />;\n","/**\n * Builds paths from canvas lines\n * @param lines\n * @returns\n */\nconst getPathFromKonvaLines = (lines: CanvasLine[]) => {\n  const result = lines.map((lineArr) => {\n    let path = '';\n    for (let x = 0, y = 1; y < lineArr.length; x += 2, y += 2) {\n      if (lineArr[x + 2] && lineArr[y + 2]) {\n        path += `M${lineArr[x]},${lineArr[y]} L${lineArr[x + 2]},${lineArr[y + 2]}`;\n      }\n    }\n\n    return path;\n  });\n\n  return result;\n};\n\ntype CanvasSVGProps = {\n  /**\n   * The stringified svg path\n   */\n  drawing: string;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * The width of the canvas (default: 500)\n   */\n  width?: number;\n  /**\n   * The height of the canvas (default: 500)\n   */\n  height?: number;\n  /**\n   * Size of the stroke. Default: medium\n   */\n  strokeWidth?: 'small' | 'medium' | 'large';\n  /**\n   * Custom view box size (default: '0 0 500')\n   */\n  viewBox?: string;\n};\n\nexport const CanvasSVG = ({\n  drawing = '',\n  className = '',\n  width = 250,\n  height,\n  strokeWidth = 'medium',\n  viewBox = '0 0 500 500',\n}: CanvasSVGProps) => {\n  const konvaLines = JSON.parse(drawing);\n  const paths = getPathFromKonvaLines(konvaLines);\n\n  const strokeWidthBySize =\n    {\n      small: 3,\n      medium: 5,\n      large: 7,\n    }?.[strokeWidth] ?? 5;\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox={viewBox}\n      overflow=\"hidden\"\n      className={className}\n      style={{ width: `${width}px`, height: `${height || width}px` }}\n    >\n      <defs />\n      {paths.map((path, index) => (\n        <path\n          key={`${drawing}-${index}`}\n          d={path}\n          fill=\"none\"\n          stroke=\"#000\"\n          strokeWidth={strokeWidthBySize}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit=\"10\"\n        />\n      ))}\n    </svg>\n  );\n};\n","import { useRef, useState } from 'react';\nimport { Stage, Layer, Line } from 'react-konva';\nimport clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\nimport { DeleteOutlined, UndoOutlined } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\n\ntype DrawingCanvasProps = {\n  /**\n   * Lines drawn in the canvas\n   */\n  lines: CanvasLine[];\n  /**\n   * Function where any new version of the drawing is sent to\n   */\n  setLines: CanvasSetLine;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Show controls to undo, redo, or erase drawing. Default: false\n   */\n  showControls?: boolean;\n  /**\n   * Size of the stroke. Default: medium\n   */\n  strokeWidth?: 'small' | 'medium' | 'large';\n  /**\n   * The width of the canvas (default: 500)\n   */\n  width?: number;\n  /**\n   * The height of the canvas (default: 500)\n   */\n  height?: number;\n  /**\n   *\n   */\n  willReadFrequently?: boolean;\n};\n\n/**\n * Canvas drawing board using react-konva\n * It requires an array of lines and an setState function to save the lines\n */\nexport const DrawingCanvas = ({\n  lines,\n  setLines,\n  className = '',\n  showControls = false,\n  strokeWidth = 'medium',\n  width = 500,\n  height,\n  willReadFrequently = false,\n}: DrawingCanvasProps) => {\n  const [drawingHistory, setDrawingHistory] = useState<CanvasLine[]>([]);\n  const isDrawing = useRef(false);\n\n  /**\n   * Toggles off the isDrawing flag\n   */\n  const startDrawing = () => {\n    isDrawing.current = true;\n  };\n\n  /**\n   * Toggles off the isDrawing flag and resets history\n   */\n  const stopDrawing = () => {\n    isDrawing.current = false;\n    setDrawingHistory([]);\n  };\n\n  const startLine = (e: any) => {\n    startDrawing();\n    const pos = e.target.getStage().getPointerPosition();\n    setLines([...lines, [Math.round(pos.x), Math.round(pos.y)]]);\n  };\n\n  const finishLine = (e: any) => {\n    // Add point if it was a point\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    const x = Math.round(point.x);\n    const y = Math.round(point.y);\n\n    let lastLineEntry = lines[lines.length - 1];\n    lastLineEntry = lastLineEntry.concat([x + 0.1, y + 0.1]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLineEntry);\n    setLines(lines.concat());\n  };\n\n  /**\n   * Start recording drawing\n   * @param e - konva mouse event\n   */\n  const handleMouseDown = (e: any) => {\n    startLine(e);\n  };\n\n  /**\n   * Tracks mouse moving during the drawing\n   * @param e - konva mouse event\n   */\n  const handleMouseMove = (e: any) => {\n    // no drawing - skipping\n    if (!isDrawing.current) {\n      return;\n    }\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    let lastLine = lines[lines.length - 1];\n    // add end point\n    lastLine = lastLine.concat([Math.round(point.x), Math.round(point.y)]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLine);\n    setLines(lines.concat());\n  };\n\n  const handleMouseUp = (e: any) => {\n    if (isDrawing.current) {\n      stopDrawing();\n\n      finishLine(e);\n    }\n  };\n\n  /**\n   * Handles case when a current drawing is stopped off stage\n   * @param e - mouse event\n   */\n  const handleOffsetMouseUp = () => {\n    stopDrawing();\n  };\n\n  /**\n   * Handles case when a current drawing is started off stage\n   * @param e - mouse event\n   */\n  const handleOffsetMouseDown = () => {\n    startDrawing();\n  };\n\n  /**\n   * Handles when mouse leaves the stage\n   * @param e - konva mouse event\n   */\n  const handleMouseLeave = (e: any) => {\n    if (isDrawing.current) {\n      finishLine(e);\n\n      window.document.addEventListener('mouseup', handleOffsetMouseUp);\n      window.document.addEventListener('touchEnd', handleOffsetMouseUp);\n      window.document.addEventListener('mousedown', handleOffsetMouseDown);\n      window.document.addEventListener('touchStart', handleOffsetMouseDown);\n    }\n  };\n\n  /**\n   * Handles when mouse reenters the state\n   * @param e\n   */\n  const handleMouseEnter = (e: any) => {\n    if (isDrawing.current) {\n      startLine(e);\n    }\n    window.document.removeEventListener('mouseup', handleOffsetMouseUp);\n    window.document.removeEventListener('touchEnd', handleOffsetMouseUp);\n    window.document.removeEventListener('mousedown', handleOffsetMouseDown);\n    window.document.removeEventListener('touchStart', handleOffsetMouseDown);\n  };\n\n  const onClear = () => setLines([]);\n\n  const onUndo = () => {\n    const linesCopy = [...lines];\n    const drawingHistoryCopy = [...drawingHistory];\n    const lastLine: CanvasLine | undefined = linesCopy.pop();\n    if (lastLine) {\n      drawingHistoryCopy.push(lastLine);\n      setLines(linesCopy);\n      setDrawingHistory(drawingHistoryCopy);\n    }\n  };\n\n  const onRedo = () => {\n    const linesCopy = [...lines];\n    const drawingHistoryCopy = [...drawingHistory];\n    const lastUndoLine = drawingHistoryCopy.pop();\n    if (lastUndoLine) {\n      linesCopy.push(lastUndoLine);\n      setLines(linesCopy);\n      setDrawingHistory(drawingHistoryCopy);\n    }\n  };\n\n  const strokeWidthBySize =\n    {\n      small: 3,\n      medium: 5,\n      large: 7,\n    }?.[strokeWidth] ?? 5;\n\n  return (\n    <Space direction=\"vertical\" align=\"center\">\n      <Stage\n        width={width}\n        height={height || width}\n        onMouseDown={handleMouseDown}\n        onMousemove={handleMouseMove}\n        onMouseup={handleMouseUp}\n        onTouchStart={handleMouseDown}\n        onTouchMove={handleMouseMove}\n        onTouchEnd={handleMouseUp}\n        onMouseLeave={handleMouseLeave}\n        onMouseEnter={handleMouseEnter}\n        className={clsx('drawing-canvas', className)}\n        style={{ width: `${width}px`, height: `${height || width}px` }}\n        willReadFrequently={willReadFrequently}\n        id=\"drawing-canvas\"\n      >\n        <Layer>\n          {lines.map((line, i) => (\n            <Line\n              key={i}\n              points={line}\n              stroke=\"#222222\"\n              strokeWidth={strokeWidthBySize}\n              tension={0.5}\n              lineCap=\"round\"\n              globalCompositeOperation=\"source-over\"\n            />\n          ))}\n        </Layer>\n      </Stage>\n      {showControls && (\n        <Space>\n          <Button onClick={onUndo} disabled={lines.length === 0}>\n            <UndoOutlined />\n            <Translate pt=\"Desfazer\" en=\"Undo\" />\n          </Button>\n          <Button onClick={onRedo} disabled={drawingHistory.length === 0}>\n            <UndoOutlined />\n            <Translate pt=\"Refazer\" en=\"Redo\" />\n          </Button>\n          <Button onClick={onClear} disabled={lines.length === 0}>\n            <DeleteOutlined />\n            <Translate pt=\"Apagar\" en=\"Clear\" />\n          </Button>\n        </Space>\n      )}\n    </Space>\n  );\n};\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Utils\nimport { getColorFromLetter } from 'utils/helpers';\n// Sass\nimport './Card.scss';\n\ntype CardProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  header?: string;\n  footer?: string;\n  color?: string;\n  size?: 'small' | 'medium' | 'large';\n  randomColor?: boolean;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  headerClassName?: string;\n  footerClassName?: string;\n};\nexport const Card = ({\n  children,\n  header = 'Carta',\n  footer,\n  color = 'none',\n  size = 'medium',\n  randomColor = false,\n  className = '',\n  headerClassName = '',\n  footerClassName = '',\n}: CardProps) => {\n  const baseClass = 'card';\n\n  const bgColor = randomColor\n    ? getColorFromLetter(\n        typeof children === 'string'\n          ? children[0].toUpperCase()\n          : header !== 'Carta'\n          ? header[0].toUpperCase()\n          : 'X'\n      )\n    : color;\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, className)}>\n      <span\n        className={clsx(`${baseClass}__header`, `color-background--${bgColor}`, headerClassName)}\n        style={color.startsWith('#') ? { backgroundColor: color } : {}}\n      >\n        {header}\n      </span>\n      <span className={`${baseClass}__text`}>{children}</span>\n      {footer && <span className={clsx(`${baseClass}__footer`, footerClassName)}>{footer}</span>}\n    </div>\n  );\n};\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Popover } from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { DualTranslate, Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { Medal } from './Medal';\n\ntype AchievementsProps = {\n  players: GamePlayers;\n  achievements: Achievement[];\n  reference: AchievementReference;\n};\n\nconst unknownText = { pt: 'Desconhecido', en: 'Unknown' };\n\nexport function Achievements({ players, achievements, reference }: AchievementsProps) {\n  return (\n    <div className={clsx('achievements', getAnimationClass('fadeIn'))}>\n      <Title size=\"small\" level={3}>\n        <Translate pt=\"Medalhas\" en=\"Achievements\" />\n      </Title>\n      <ul className=\"achievements-list\">\n        {achievements.map((achievement, index) => {\n          const { icon = 'star', ...achievementObj } = reference[achievement.type] ?? {};\n          const player = players[achievement.playerId];\n          return (\n            <li\n              key={`achievement-${achievement.type}`}\n              className={clsx(\n                'achievements-entry',\n                getAnimationClass('flipInY', {\n                  delay: index < achievements.length / 2 ? index : achievements.length - 1 - index,\n                })\n              )}\n            >\n              <div className=\"achievement__medal\">\n                <Medal id={icon} />\n              </div>\n              <h4 className=\"achievement__title\">\n                <DualTranslate>{achievementObj.title ?? unknownText}</DualTranslate>\n              </h4>\n              <div className=\"achievement__avatar\">\n                <Avatar id={player.avatarId} />\n              </div>\n              <div className=\"achievement__name\">{player.name}</div>\n              {Boolean(achievementObj.description) && (\n                <div className=\"achievement__description\">\n                  <Popover\n                    content={\n                      <>\n                        <DualTranslate>{achievementObj.description ?? unknownText}</DualTranslate> (\n                        {achievement.value})\n                      </>\n                    }\n                  >\n                    <Button icon={<QuestionCircleOutlined />} shape=\"circle\" type=\"text\" size=\"small\" />\n                  </Popover>\n                </div>\n              )}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","import { ClockIcon } from 'icons/ClockIcon';\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function TimeHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<ClockIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import { ReactNode } from 'react';\n\ntype ViewProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n};\n\nexport function View({ children }: ViewProps) {\n  return <>{children}</>;\n}\n","import { ReactNode } from 'react';\n\ntype ViewIfProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Displays children only if condition is truthy\n   */\n  condition?: boolean;\n};\n\n/**\n * Wrapper component that only renders the children if the condition is truthy\n */\nexport function ViewIf({ condition = false, children }: ViewIfProps) {\n  return condition ? <>{children}</> : <></>;\n}\n","import { ReactNode } from 'react';\n\ntype ViewOrProps = {\n  /**\n   * The content of the component to be toggled\n   */\n  children: [ReactNode, ReactNode];\n  /**\n   * The condition to be met to render the first children\n   */\n  condition?: boolean;\n};\n\n/**\n * View wrapper that renders one of two children depending on a condition\n */\nexport function ViewOr({ condition = false, children }: ViewOrProps) {\n  return condition ? <>{children[0]}</> : <>{children[1]}</>;\n}\n","type ViewSwitchProps = {\n  cases: boolean[];\n  /**\n   * The content of the component\n   */\n  children: any;\n};\n\nexport function ViewSwitch({ cases, children }: ViewSwitchProps) {\n  if (cases.length > 5) {\n    throw Error('ViewSwitch only supports up to 5 cases');\n  }\n\n  if (cases[0] && children[0]) {\n    return children[0];\n  }\n\n  if (cases[1] && children[1]) {\n    return children[1];\n  }\n\n  if (cases[2] && children[2]) {\n    return children[2];\n  }\n\n  if (cases[3] && children[3]) {\n    return children[3];\n  }\n\n  if (cases[4] && children[4]) {\n    return children[4];\n  }\n  console.warn('Rendering all children in the ViewSwitch');\n  return children;\n}\n","import { useEffect, useState } from 'react';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useDevFeatures } from 'hooks/useDevFeatures';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockDrawing } from 'mock/drawing';\n// Icons\nimport { PanicIcon } from 'icons/PanicIcon';\n// Components\nimport { Step } from 'components/steps';\nimport { Card } from 'components/cards';\nimport { DrawingCanvas } from 'components/canvas';\nimport { ArteRuimTimerSound } from 'components/audio/ArteRuimTimerSound';\nimport { DevButton } from 'components/debug';\n\ntype StepDrawProps = {\n  secretCard: ArteRuimCard | PlainObject;\n  onSubmitDrawing: GenericFunction;\n  startDrawingTimer: boolean;\n} & AnnouncementProps;\n\nexport function StepDraw({ secretCard, onSubmitDrawing, startDrawingTimer, announcement }: StepDrawProps) {\n  const { translate } = useLanguage();\n  const { isDebugEnabled } = useDevFeatures();\n  const [lines, setLines] = useState<any>([]);\n  const [isTimesUp, setTimesUp] = useState(false);\n\n  const { seconds, start, isRunning } = useCountdown({\n    duration: 12,\n    autoStart: false,\n    onExpire: () => {\n      setTimesUp(true);\n      onSubmitDrawing({\n        drawing: JSON.stringify(lines),\n        cardId: secretCard.id,\n      });\n    },\n  });\n\n  useEffect(() => {\n    if (!isRunning && startDrawingTimer) {\n      start();\n    }\n  }, [startDrawingTimer, isRunning, start]);\n\n  const onMockDrawing = () =>\n    onSubmitDrawing({\n      drawing: JSON.stringify(mockDrawing()),\n      cardId: secretCard.id,\n    });\n\n  useMock(() => {\n    onSubmitDrawing({\n      drawing: JSON.stringify(mockDrawing()),\n      cardId: secretCard.id,\n    });\n  });\n\n  return (\n    <Step announcement={announcement}>\n      <Card\n        size=\"large\"\n        header={translate('Desenhe', 'Draw', isDebugEnabled ? secretCard?.id : undefined)}\n        footer={Array(secretCard?.level).fill('•').join('')}\n        className=\"a-draw-step__card\"\n        color=\"yellow\"\n      >\n        {isRunning && (\n          <>\n            {secretCard?.text}\n            <span className=\"a-draw-step__timer\">{seconds > 1 ? seconds - 2 : 0}</span>\n          </>\n        )}\n      </Card>\n      {isRunning && <ArteRuimTimerSound />}\n\n      <DevButton onClick={onMockDrawing}>Mock Drawing</DevButton>\n\n      {isTimesUp ? (\n        <PanicIcon style={{ background: 'white', width: '500px', padding: '2em' }} />\n      ) : (\n        <DrawingCanvas lines={lines} setLines={setLines} />\n      )}\n    </Step>\n  );\n}\n","import clsx from 'clsx';\nimport { Translate } from 'components/language';\nimport { PointsHighlight } from 'components/metrics/PointsHighlight';\nimport { TimeHighlight } from 'components/metrics/TimeHighlight';\nimport { Instruction } from 'components/text';\nimport { getAnimationClass } from 'utils/helpers';\n\nexport const DrawInstruction = () => (\n  <Instruction>\n    <Translate\n      pt={\n        <>\n          Você terá <TimeHighlight>10</TimeHighlight> segundos para ler a sua carta e desenhá-la.\n          <br />\n          Aperte o botão quando estiver pronto!\n          <br />\n          <span className={clsx(getAnimationClass('tada'))}>\n            <strong>Não vale usar números e letras.</strong>\n          </span>\n          <br />\n          Fique esperto porque o tempo começa assim que você apertar.\n        </>\n      }\n      en={\n        <>\n          You'll have <TimeHighlight>10</TimeHighlight> seconds to read and draw your card.\n          <br />\n          Press the button when you're ready!\n          <br />\n          <span className={clsx(getAnimationClass('tada'))}>\n            <strong>You can NOT use numbers or letters.</strong>\n          </span>\n          <br />\n          Be aware of the timer! It starts as soon as you press the button.\n        </>\n      }\n    />\n  </Instruction>\n);\n\nexport const EvaluationRules = () => (\n  <Instruction>\n    <Translate\n      pt={\n        <>\n          Encontre os pares de desenho e carta clicando em uma carta ou desenho e em seguida clicando em seu\n          par.\n          <br />\n          Uma bandeirinha aparecerá no topo de cada desenho com a cor e letra da carta que você selecionou.\n          <br />\n          Quando encontrar todos os pares, envie sua avaliação!\n        </>\n      }\n      en={\n        <>\n          Find the pairs of artwork and card by clicking on a card or artwork then on its match.\n          <br />\n          A ribbon will show up on the artwork with the color and letter of the matching card.\n          <br />\n          When you're done, click the button to send your evaluation!\n        </>\n      }\n    />\n  </Instruction>\n);\n\nexport const GalleryRules = () => (\n  <Instruction>\n    <Translate\n      pt={\n        <>\n          Agora, mostraremos cada arte, o que os jogadores votaram e a resposta final.\n          <br />\n          Se você votou na expressão correta, você ganha <PointsHighlight type=\"positive\">\n            2\n          </PointsHighlight>{' '}\n          pontos.\n          <br />\n          Quando for a sua arte, você ganha <PointsHighlight type=\"positive\">1</PointsHighlight> ponto para\n          cada pessoa que votou corretamente.\n        </>\n      }\n      en={\n        <>\n          Now we show each art, what players voted, and the final answer.\n          <br />\n          You get <PointsHighlight type=\"positive\">2</PointsHighlight> points if you selected the right card.\n          <br />\n          When players selected the correct card for your artwork, you get{' '}\n          <PointsHighlight type=\"positive\">1</PointsHighlight> point for each match!\n        </>\n      }\n    />\n  </Instruction>\n);\n\nexport const ScoringRules = () => (\n  <Instruction>\n    <Translate\n      pt={\n        <>\n          Você ganha <PointsHighlight type=\"positive\">2</PointsHighlight> pontos para cada ligação correta\n          entre arte e expressão.\n          <br />\n          Para cada ligação correta que sua arte ganha, você recebe{' '}\n          <PointsHighlight type=\"positive\">1</PointsHighlight> ponto.\n        </>\n      }\n      en={\n        <>\n          You get <PointsHighlight type=\"positive\">2</PointsHighlight> points if you matched the right card\n          with artwork.\n          <br />\n          For you own artwork, you get <PointsHighlight type=\"positive\">1</PointsHighlight> point for each\n          correct match the other players done.\n        </>\n      }\n    />\n  </Instruction>\n);\n","import { DualTranslate, Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n\ntype LevelInstructionProps = {\n  level: number;\n  levelType: string;\n};\n\nexport function LevelInstruction({ level, levelType }: LevelInstructionProps) {\n  if (level < 4) {\n    return <></>;\n  }\n\n  if (level === 4) {\n    return (\n      <Instruction contained>\n        <Translate\n          pt=\"No nível 4, as cartas tem um ou dois temas comuns, então preste atenção nos detalhes\"\n          en=\"On level 4, the cards have one or two common themes, so pay attention to details\"\n        />\n      </Instruction>\n    );\n  }\n\n  if (levelType === 'pairs') {\n    return (\n      <Instruction contained>\n        <Translate\n          pt=\"No nível 5, só existem duas cartas para todos\"\n          en=\"On level 5, players draw one of two things only\"\n        />\n      </Instruction>\n    );\n  }\n\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Rodada Especial:{' '}\n            <DualTranslate>{getLevelText[levelType] ?? { pt: 'Surpresa', en: 'Surprise' }}</DualTranslate>\n          </>\n        }\n        en={<>Special Round: {}</>}\n      />\n    </Instruction>\n  );\n}\n\nconst getLevelText: Record<string, DualLanguageValue> = {\n  contenders: {\n    pt: 'Personagens e Personalidades',\n    en: 'Characters and Celebrities',\n  },\n  movies: {\n    pt: 'Filmes',\n    en: 'Movies',\n  },\n  adjectives: {\n    pt: 'Adjetivos',\n    en: 'Adjectives',\n  },\n};\n","import { useState } from 'react';\n// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitDrawingAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { PaintingIcon } from 'icons/PaintingIcon';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { RoundAnnouncement } from 'components/round';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { StepDraw } from './StepDraw';\nimport { DrawInstruction } from './components/TextBlobs';\nimport { LevelInstruction } from './components/LevelInstruction';\n\nfunction PhaseDraw({ players, state, info }: PhaseProps) {\n  const { step, goToNextStep, setStep } = useStep(0);\n  const user = useUser(players, state);\n  const [startDrawingTimer, setStartDrawingTimer] = useState(false);\n\n  const onSubmitDrawing = useOnSubmitDrawingAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<PaintingIcon />}\n      title={<Translate pt=\"Desenhe!\" en=\"Draw!\" />}\n      buttonText={<Translate pt=\"Um dó, lá, si... vamos e... já!\" en=\"Ready! Set! Go!\" />}\n      onClose={() => setStartDrawingTimer(true)}\n      currentRound={state?.round?.current}\n      withoutTimer\n      type=\"overlay\"\n    >\n      <DrawInstruction />\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.ARTE_RUIM.DRAW}>\n      <StepSwitcher\n        step={step}\n        players={players}\n        waitingRoom={{\n          instruction: (\n            <Translate\n              pt=\"Vamos aguardar enquanto os outros jogadores terminam seus desenhos!\"\n              en=\"Please wait while other players finish their artwork!\"\n            />\n          ),\n        }}\n      >\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state?.round}\n          onPressButton={goToNextStep}\n          buttonText=\" \"\n          time={5}\n          circleColor={info?.appearance?.color}\n          unskippable\n        >\n          <Instruction contained>\n            <Translate\n              pt={`Essa rodada usará cartas de nível ${state?.level || '?'}`}\n              en={`This round uses cards of level ${state?.level || '?'}`}\n            />\n            <LevelInstruction level={state.level} levelType={state.levelType} />\n          </Instruction>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <StepDraw\n          secretCard={user.currentCard ?? {}}\n          onSubmitDrawing={onSubmitDrawing}\n          announcement={announcement}\n          startDrawingTimer={startDrawingTimer}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseDraw;\n","import { ARTE_RUIM_API } from 'services/adapters';\nimport { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\n\nexport function useOnSubmitDrawingAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: ARTE_RUIM_API.submitAction,\n    actionName: 'submit-drawing',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate(\n      'Acabou o tempo! Aguarde enquanto os outros participantes desenham',\n      \"Time's up! Wait for the other players to finish their art\"\n    ),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar o desenho',\n      'Oops, the application failed to send your art'\n    ),\n  });\n\n  return (payload: SubmitDrawingPayload) => {\n    request({\n      action: 'SUBMIT_DRAWING',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitVotingAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: ARTE_RUIM_API.submitAction,\n    actionName: 'submit-voting',\n    onSuccess: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: translate(\n      'Avaliação enviada! Agora aguarde os outros jogadores',\n      'Evaluation sent successfully! Wait for the other players'\n    ),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua avaliação',\n      'Oops, the application failed to send your evaluation'\n    ),\n  });\n\n  return (payload: SubmitVotingPayload) => {\n    request({\n      action: 'SUBMIT_VOTING',\n      ...payload,\n    });\n  };\n}\n","import { SEPARATOR } from 'utils/constants';\n\nexport function prepareVotes(votes: StringDictionary) {\n  return Object.entries(votes).reduce((acc: StringDictionary, [drawingEntryId, cardEntryId]) => {\n    const [, drawingId] = drawingEntryId.split(SEPARATOR);\n    const [, cardId] = cardEntryId.split(SEPARATOR);\n    acc[drawingId] = cardId;\n    return acc;\n  }, {});\n}\n","import clsx from 'clsx';\n// Utils\nimport { getEntryId } from 'utils/helpers';\n// Components\nimport { CanvasSVG } from 'components/canvas';\nimport { Ribbon } from 'components/ribbons';\n\ntype EvaluationAllDrawingsProps = {\n  drawings: ArteRuimDrawing[];\n  activeItem: string;\n  onActivateItem: GenericFunction;\n  votes: PlainObject;\n  canvasSize: number;\n  players: GamePlayers;\n};\n\nexport function EvaluationAllDrawings({\n  drawings,\n  activeItem,\n  onActivateItem,\n  votes,\n  canvasSize,\n  players,\n}: EvaluationAllDrawingsProps) {\n  const liButtonBaseClass = 'a-evaluation-all-drawings__li-drawing-button';\n\n  return (\n    <ul className=\"a-evaluation-all-drawings\">\n      {drawings?.map((drawingEntry) => {\n        const canvasEntryId = getEntryId(['drawing', drawingEntry.id]);\n        const isActive = activeItem === canvasEntryId;\n        const vote = votes[canvasEntryId];\n\n        return (\n          <li\n            key={`${canvasEntryId}-${drawingEntry.playerId}`}\n            className={clsx(liButtonBaseClass, isActive && `${liButtonBaseClass}--active`)}\n            onClick={() => onActivateItem(canvasEntryId)}\n          >\n            {votes?.[canvasEntryId] && <Ribbon label={vote.charAt(vote.length - 1)} />}\n            <CanvasSVG\n              drawing={drawingEntry.drawing}\n              className=\"a-evaluation-all-drawings__drawing\"\n              width={canvasSize}\n            />\n            <span className=\"a-evaluation-all-drawings__artist\">{players[drawingEntry.playerId].name}</span>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","// Ant Design Resources\nimport { WarningOutlined } from '@ant-design/icons';\n// Helpers\nimport { getColorFromLetter } from 'utils/helpers';\n// Components\nimport { Card } from 'components/cards';\nimport { ReactNode } from 'react';\n\ntype ArteRuimCardProps = {\n  /**\n   * The text of the card\n   */\n  text?: ReactNode;\n  /**\n   * The level of the card displayed as dots in the footer\n   */\n  level: number;\n  /**\n   * The header of the card. Default: X\n   */\n  header?: string;\n};\n\n/**\n * This is the Card component\n * @param props {object}\n * @returns\n */\nexport const ArteRuimCard = ({ text, level, header = 'X' }: ArteRuimCardProps) => {\n  return (\n    <Card\n      color={getColorFromLetter(header)}\n      header={header}\n      size=\"medium\"\n      footer={Array(level).fill('•').join('')}\n    >\n      {text ?? <WarningOutlined />}\n    </Card>\n  );\n};\n","import clsx from 'clsx';\nimport { useDevFeatures } from 'hooks/useDevFeatures';\n// Utils\nimport { LETTERS } from 'utils/constants';\nimport { getEntryId } from 'utils/helpers';\n// Components\nimport { ArteRuimCard as Card } from './Card';\n\ntype EvaluationAllCardsProps = {\n  cards: ArteRuimCard[];\n  activeItem: string;\n  onActivateItem: GenericFunction;\n  votes: PlainObject;\n  levelType: string;\n};\n\nexport function EvaluationAllCards({\n  cards,\n  activeItem,\n  onActivateItem,\n  votes,\n  levelType,\n}: EvaluationAllCardsProps) {\n  const { isDebugEnabled } = useDevFeatures();\n  const liButtonBaseClass = 'a-evaluation-all-cards__li-card-button';\n\n  return (\n    <ul className=\"a-evaluation-all-cards\">\n      {cards.map((cardEntry, index) => {\n        const letter = LETTERS[index];\n        const cardEntryId = getEntryId(['card', cardEntry.id, letter]);\n        const isActive = activeItem === cardEntryId;\n        const isUsed = Object.values(votes).includes(cardEntryId);\n\n        return (\n          <li\n            role=\"button\"\n            key={cardEntryId}\n            className={clsx(\n              liButtonBaseClass,\n              isActive && `${liButtonBaseClass}--active`,\n              isUsed && levelType !== 'pairs' && `${liButtonBaseClass}--used`\n            )}\n            onClick={() => onActivateItem(cardEntryId)}\n          >\n            <Card\n              text={cardEntry.text}\n              level={cardEntry.level}\n              header={isDebugEnabled ? cardEntry.id : letter}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import { useCallback, useEffect, useState } from 'react';\nimport { useEffectOnce } from 'react-use';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\nimport { CloudUploadOutlined, ThunderboltOutlined } from '@ant-design/icons';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\nimport { useVotingMatch } from 'hooks/useVotingMatch';\n// Utils\nimport { LETTERS } from 'utils/constants';\nimport { getEntryId, shuffle } from 'utils/helpers';\nimport { prepareVotes } from './utils/helpers';\n// Components\nimport { Step } from 'components/steps';\nimport { PopoverRule } from 'components/rules';\nimport { CanvasResizer } from 'components/canvas';\nimport { Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { EvaluationAllDrawings } from './components/EvaluationAllDrawings';\nimport { EvaluationAllCards } from './components/EvaluationAllCards';\nimport { EvaluationRules } from './components/TextBlobs';\n\ntype StepEvaluationProps = {\n  drawings: ArteRuimDrawing[];\n  cards: ArteRuimCard[];\n  players: GamePlayers;\n  onSubmitVoting: GenericFunction;\n  levelType: string;\n  user: GamePlayer;\n} & AnnouncementProps;\n\nexport function StepEvaluation({\n  drawings,\n  cards,\n  players,\n  onSubmitVoting,\n  levelType,\n  announcement,\n  user,\n}: StepEvaluationProps) {\n  const { isLoading } = useLoading();\n\n  const canvasWidth = useCardWidth(5, { gap: 16, minWidth: 150, maxWidth: 500 });\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n  const { votes, setVotes, activeItem, activateItem, resetVoting, isVotingComplete } = useVotingMatch(\n    'drawing',\n    true,\n    drawings.length || 2\n  );\n  const [choseRandomly, setChoseRandomly] = useState(false);\n\n  const onGuessForMe = useCallback(() => {\n    setChoseRandomly(true);\n    const usedDrawings = Object.keys(votes);\n    const usedCards = Object.values(votes);\n    const drawingsKeys = drawings\n      .map((e: ArteRuimDrawing) => getEntryId(['drawing', e.id]))\n      .filter((key: string) => !usedDrawings.includes(key));\n    let cardsKeys = shuffle(\n      cards\n        .map((e: ArteRuimCard, index: number) => getEntryId(['card', e.id, LETTERS[index]]))\n        .filter((key: string) => !usedCards.includes(key))\n    );\n    // For level 5 specifically, if there are less cards than drawings\n    cardsKeys =\n      cardsKeys.length < drawingsKeys.length\n        ? Array(Math.ceil(drawingsKeys.length / cardsKeys.length))\n            .fill(cardsKeys)\n            .flat()\n        : cardsKeys;\n\n    const newVotes = { ...votes };\n    drawingsKeys.forEach((drawingKey: string, index: number) => {\n      if (!newVotes[drawingKey]) {\n        newVotes[drawingKey] = cardsKeys[index];\n      }\n    });\n    setVotes(newVotes);\n  }, [cards, drawings, votes, setVotes]);\n\n  useEffect(() => {\n    if (!canvasSize) {\n      // Round to increments of 50\n      setCanvasSize(Math.floor(canvasWidth / 50) * 50);\n    }\n  }, [canvasSize, canvasWidth]); // eslint-disable-line\n\n  const selectOwnDrawing = useCallback(() => {\n    const playersDrawing = (drawings ?? []).find((drawing: ArteRuimDrawing) => drawing.playerId === user.id);\n    if (playersDrawing && playersDrawing.level !== 5) {\n      const drawingKey = getEntryId(['drawing', playersDrawing.id]);\n      const cardIndex = (cards ?? []).findIndex((card: ArteRuimCard) => card.playerId === user.id);\n      const cardKey = getEntryId(['card', playersDrawing.id, LETTERS[cardIndex]]);\n      const vote = { [drawingKey]: cardKey };\n      return vote;\n    }\n    return {};\n  }, [user, drawings, cards]);\n\n  // Auto-select the players own drawing and word\n  useEffectOnce(() => {\n    const selection = selectOwnDrawing();\n    if (selection) {\n      setVotes((s: any) => ({ ...s, ...selection }));\n    }\n  });\n\n  useMock(() => {\n    onGuessForMe();\n  }, []);\n\n  return (\n    <Step className=\"a-evaluation-step\" announcement={announcement} fullWidth>\n      <PopoverRule content={<EvaluationRules />} />\n      <CanvasResizer />\n      <Title>\n        <Translate pt=\"Adivinhação\" en=\"Match the Pairs\" />\n      </Title>\n\n      <Space className=\"space-container\" align=\"center\" wrap>\n        <Button\n          type=\"default\"\n          icon={<ThunderboltOutlined />}\n          onClick={() => resetVoting(selectOwnDrawing())}\n          disabled={isLoading}\n        >\n          <Translate pt=\"Limpar seleções\" en=\"Clear selections\" />\n        </Button>\n        <Button\n          type=\"default\"\n          icon={<ThunderboltOutlined />}\n          onClick={onGuessForMe}\n          disabled={isLoading || Object.values(votes).length === drawings.length}\n        >\n          <Translate pt=\"Chutar restantes\" en=\"Guess for me\" />\n        </Button>\n        <Button\n          type=\"primary\"\n          onClick={() => onSubmitVoting({ votes: prepareVotes(votes), choseRandomly })}\n          disabled={isLoading || !isVotingComplete}\n          icon={<CloudUploadOutlined />}\n          loading={isLoading}\n        >\n          <Translate pt=\"Enviar sua avaliação\" en=\"Send evaluation\" />\n        </Button>\n      </Space>\n\n      <EvaluationAllDrawings\n        drawings={drawings ?? []}\n        activeItem={activeItem}\n        onActivateItem={activateItem}\n        votes={votes}\n        canvasSize={canvasSize}\n        players={players}\n      />\n\n      <EvaluationAllCards\n        cards={cards ?? []}\n        activeItem={activeItem}\n        onActivateItem={activateItem}\n        votes={votes}\n        levelType={levelType}\n      />\n    </Step>\n  );\n}\n","import { useMemo } from 'react';\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\n// Components\nimport { CanvasSVG } from 'components/canvas';\nimport { IconAvatar } from 'components/avatars/IconAvatar';\nimport { AnimatedLoaderIcon } from 'icons/AnimatedLoaderIcon';\nimport { AvatarName } from 'components/avatars';\n\ntype EvaluatedDrawingsProps = {\n  votes?: StringDictionary;\n  cards: ArteRuimCard[];\n  drawings: ArteRuimDrawing[];\n  players: GamePlayers;\n};\n\n/**\n * Displays drawings in the waiting room after evaluation\n * @param props\n * @returns\n */\nexport function EvaluatedDrawings({ votes, cards, drawings, players }: EvaluatedDrawingsProps) {\n  const [canvasSize] = useGlobalState('canvasSize');\n\n  const cardsDict = useMemo(\n    () =>\n      cards.reduce((acc: Record<string, ArteRuimCard>, card) => {\n        acc[card.id] = card;\n        return acc;\n      }, {}),\n    [cards]\n  );\n\n  const drawingsDict = useMemo(\n    () =>\n      drawings.reduce((acc: Record<string, ArteRuimDrawing>, drawing) => {\n        acc[drawing.id] = drawing;\n        return acc;\n      }, {}),\n    [drawings]\n  );\n\n  if (!votes) {\n    return (\n      <div className=\"a-evaluated-drawings\">\n        <IconAvatar icon={<AnimatedLoaderIcon />} />\n      </div>\n    );\n  }\n  const cSize = Math.min(canvasSize * 0.6, 2000);\n\n  return (\n    <ul className=\"a-evaluated-drawings\">\n      {Object.keys(votes)\n        .sort()\n        .map((drawingKey: string) => {\n          const drawing = drawingsDict[drawingKey] as ArteRuimDrawing;\n          const card = cardsDict[votes[drawingKey]] as ArteRuimCard;\n\n          return (\n            <li className=\"a-evaluated-drawings__item\" key={`${drawing.id}-${card.id}-${card.playerId}`}>\n              <div className=\"a-evaluated-drawings__card\" style={{ maxWidth: `${cSize}px` }}>\n                <AvatarName player={players[drawing.playerId]} size=\"small\" />\n              </div>\n              <CanvasSVG\n                drawing={drawing.drawing}\n                width={cSize}\n                className=\"a-evaluation-all-drawings__drawing\"\n              />\n              <div className=\"a-evaluated-drawings__card\" style={{ maxWidth: `${cSize}px` }}>\n                {card.text}\n              </div>\n            </li>\n          );\n        })}\n    </ul>\n  );\n}\n","// Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitVotingAPIRequest } from './utils/api-requests';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { EvaluateIcon } from 'icons/EvaluateIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { StepEvaluation } from './StepEvaluation';\nimport { EvaluationRules } from './components/TextBlobs';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { EvaluatedDrawings } from './components/EvaluatedDrawings';\nimport { Translate } from 'components/language';\nimport { ViewIf } from 'components/views';\n\nfunction EvaluationPhase({ players, state, info }: PhaseProps) {\n  const { step, setStep } = useStep(0);\n  const user = useUser(players, state);\n\n  const onSubmitVoting = useOnSubmitVotingAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<EvaluateIcon />}\n      title={<Translate pt=\"Adivinhação\" en=\"Match the Pairs\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <EvaluationRules />\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.ARTE_RUIM.EVALUATION}>\n      <StepSwitcher\n        step={step}\n        players={players}\n        waitingRoom={{\n          instruction: (\n            <Translate\n              pt=\"Vamos aguardar enquanto os outros jogadores terminam de avaliar!\"\n              en=\"Please wait while other players finish their evaluations!\"\n            />\n          ),\n          content: (\n            <EvaluatedDrawings\n              cards={state.cards}\n              drawings={state.drawings}\n              votes={user?.votes}\n              players={players}\n            />\n          ),\n        }}\n      >\n        {/*Step 0 */}\n        <ViewIf condition={state.drawings && user.id}>\n          <StepEvaluation\n            drawings={state.drawings}\n            cards={state.cards}\n            players={players}\n            onSubmitVoting={onSubmitVoting}\n            levelType={state.levelType}\n            announcement={announcement}\n            user={user}\n          />\n        </ViewIf>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default EvaluationPhase;\n","// Components\nimport { AvatarEntry } from 'components/avatars';\nimport { Translate } from 'components/language';\n\ntype GalleryWindowCreditsProps = {\n  artist: GamePlayer;\n};\n\nexport function GalleryWindowCredits({ artist }: GalleryWindowCreditsProps) {\n  return (\n    <div className=\"a-gallery__credits\">\n      <div className=\"a-gallery__label\">\n        <Translate pt=\"Artista\" en=\"Artist\" />\n      </div>\n      <span className=\"a-gallery__artist-name\">\n        <AvatarEntry player={artist} />\n      </span>\n    </div>\n  );\n}\n","import { orderBy } from 'lodash';\n// Ant Design Resources\nimport { Avatar as AntAvatar } from 'antd';\nimport { CrownFilled, MessageFilled } from '@ant-design/icons';\n// Utils\nimport { getPlayersFromIds } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\n\ntype GalleryWindowGuessesProps = {\n  playersSay: PlayersSay;\n  players: GamePlayers;\n  cards: ArteRuimCard[];\n  windowCardId: string;\n  artistColor: string;\n};\n\nexport function GalleryWindowGuesses({\n  playersSay,\n  players,\n  cards,\n  windowCardId,\n  artistColor,\n}: GalleryWindowGuessesProps) {\n  const entries = orderBy(\n    Object.entries(playersSay).map(([cardId, playersIds]) => {\n      return {\n        cardId,\n        card: cards.find((i) => i.id === cardId),\n        playersIds,\n        count: playersIds.length,\n        isCorrect: windowCardId === cardId,\n      };\n    }),\n    ['isCorrect', 'count', 'card.text'],\n    ['desc', 'desc', 'asc']\n  );\n\n  return (\n    <div className=\"a-gallery__guesses\">\n      <div className=\"a-gallery__label\">\n        <Translate pt=\"Participantes votaram\" en=\"Players voted\" />\n      </div>\n      {entries.map((entry, index) => {\n        return (\n          <div key={`guess-${entry.cardId}-${index}`} className=\"a-gallery__guess\">\n            <div\n              className=\"a-gallery__speech-bubble\"\n              style={entry.isCorrect ? { backgroundColor: artistColor, color: 'white' } : {}}\n            >\n              {entry.isCorrect ? (\n                <CrownFilled className=\"a-gallery__speech-bubble-icon\" style={{ color: 'white' }} />\n              ) : (\n                <MessageFilled className=\"a-gallery__speech-bubble-icon\" />\n              )}\n              {entry.card?.text}\n            </div>\n            <div className=\"a-gallery__players\">\n              <AntAvatar.Group>\n                {entry.playersIds.map((playerId) => (\n                  <Avatar\n                    id={players[playerId].avatarId}\n                    key={`guess-avatar-${players[playerId].avatarId}`}\n                  />\n                ))}\n              </AntAvatar.Group>\n              <span className=\"a-gallery__players-names\">\n                {getPlayersFromIds(entry.playersIds, players, true).join(', ')}\n              </span>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Avatar as AntAvatar, Typography } from 'antd';\nimport { CrownFilled } from '@ant-design/icons';\n// Utils\nimport { getPlayersFromIds } from 'utils/helpers';\n// Components\nimport { Translate } from 'components/language';\nimport { Avatar } from 'components/avatars';\nimport { StarPoints } from 'components/points';\nimport { GarbageIcon } from 'icons/GarbageIcon';\nimport { IconAvatar } from 'components/avatars/IconAvatar';\n\ntype GalleryWindowResultProps = {\n  playerArtist: GamePlayer;\n  correctAnswerId: string;\n  correctAnswerText: string;\n  playersPoints?: NumberDictionary;\n  playersSay: PlayersSay;\n  players: GamePlayers;\n};\n\nexport function GalleryWindowResult({\n  playerArtist,\n  correctAnswerId,\n  correctAnswerText,\n  playersPoints,\n  playersSay,\n  players,\n}: GalleryWindowResultProps) {\n  const correctGuesses = Object.values(playersSay?.[correctAnswerId] ?? {});\n\n  return (\n    <div className=\"a-gallery__result\">\n      <div className=\"a-gallery__label\">\n        <Translate pt=\"E o título correto da obra é\" en=\"And the masterpiece title is\" />\n      </div>\n      <div className=\"a-gallery__speech-bubble\">\n        <CrownFilled className=\"a-gallery__speech-bubble-icon\" />\n        {correctAnswerText}\n      </div>\n      {correctGuesses.length ? (\n        <>\n          <div className=\"a-gallery__players\">\n            <AntAvatar.Group>\n              {correctGuesses.map((playerId) => {\n                return <Avatar key={`correct-guess-avatar-${playerId}`} id={players[playerId].avatarId} />;\n              })}\n            </AntAvatar.Group>\n            <StarPoints quantity={2} keyPrefix={`guessers-points-${playerArtist.id}`} />\n            <span className=\"a-gallery__players-names\">\n              {getPlayersFromIds(correctGuesses, players, true).join(', ')}\n            </span>\n          </div>\n          <div className=\"a-gallery__artist-points\">\n            <Avatar id={playerArtist.avatarId} />{' '}\n            <StarPoints\n              quantity={playersPoints?.[playerArtist.id]}\n              keyPrefix={`artist-points-${playerArtist.id}`}\n            />{' '}\n            <span className=\"a-gallery__players-names\">{playerArtist.name}</span>\n          </div>\n        </>\n      ) : (\n        <Typography.Text className=\"a-gallery__no-wins\">\n          <IconAvatar icon={<GarbageIcon />} size=\"large\" shape=\"square\" />\n          <Translate\n            pt=\"Nossa, ninguém acertou. Esse desenho deve ter sido muito ruim.\"\n            en=\"Wow, nobody got it. It must have been a very crappy drawing. Shame...\"\n          />\n        </Typography.Text>\n      )}\n    </div>\n  );\n}\n","// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Utils\nimport { WINDOW_DURATION } from './utils/constants';\nimport { getAvatarColorById } from 'utils/helpers';\n// Components\nimport { CanvasSVG } from 'components/canvas';\nimport { Translate } from 'components/language';\nimport { PopoverRule } from 'components/rules';\nimport { SlideShow } from 'components/slide-show';\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\nimport { GalleryWindowCredits } from './components/GalleryWindowCredits';\nimport { GalleryWindowGuesses } from './components/GalleryWindowGuesses';\nimport { GalleryWindowResult } from './components/GalleryWindowResult';\nimport { ScoringRules } from './components/TextBlobs';\n\ntype StepGalleryProps = {\n  gallery: ArteRuimWindow[];\n  players: GamePlayers;\n  cards: ArteRuimCard[];\n  activeIndex: number;\n  setActiveIndex: GenericFunction;\n  setStep: GenericFunction;\n  isFirstGalleryRunThrough: boolean;\n};\n\nexport function StepGallery({\n  gallery,\n  players,\n  cards,\n  activeIndex,\n  setActiveIndex,\n  setStep,\n  isFirstGalleryRunThrough,\n}: StepGalleryProps) {\n  useTemporarilyHidePlayersBar();\n\n  const canvasWidth = useCardWidth(2, { gap: 16, minWidth: 200, maxWidth: 500 });\n\n  const { drawing, artistId, id, text, playersPoints, playersSay } = gallery[activeIndex];\n\n  const playerArtist = players[artistId];\n  const currentColor = getAvatarColorById(playerArtist.avatarId);\n\n  return (\n    <Step fullWidth>\n      <Title size=\"small\">\n        <Translate pt=\"Galeria de Arte\" en=\"Art Gallery\" />\n      </Title>\n\n      <PopoverRule content={<ScoringRules />} />\n\n      <SlideShow\n        players={players}\n        length={gallery.length}\n        activeIndex={activeIndex}\n        setActiveIndex={setActiveIndex}\n        setStep={setStep}\n        disableControls={isFirstGalleryRunThrough}\n        barColor={currentColor}\n        windowDuration={WINDOW_DURATION}\n        leftClassName=\"a-gallery__canvas\"\n        rightClassName=\"a-gallery__info\"\n      >\n        <CanvasSVG drawing={drawing} width={canvasWidth} className=\"a-gallery__drawing\" />\n\n        <>\n          <GalleryWindowCredits artist={playerArtist} />\n\n          <GalleryWindowGuesses\n            players={players}\n            playersSay={playersSay}\n            cards={cards}\n            windowCardId={id}\n            artistColor={currentColor}\n          />\n\n          <GalleryWindowResult\n            playerArtist={playerArtist}\n            correctAnswerId={id}\n            correctAnswerText={text}\n            playersPoints={playersPoints}\n            playersSay={playersSay}\n            players={players}\n          />\n        </>\n      </SlideShow>\n    </Step>\n  );\n}\n","export const WINDOW_DURATION = 10;\n","// Ant Design Resources\nimport { Button } from 'antd';\nimport { PictureOutlined } from '@ant-design/icons';\n// Components\nimport { Instruction, RoundsLeftInstruction } from 'components/text';\nimport { StepRankingWrapper } from 'components/ranking';\nimport { PopoverRule } from 'components/rules';\nimport { Translate } from 'components/language';\nimport { VIPNextPhaseButton } from 'components/vip';\nimport { ScoringRules } from './components/TextBlobs';\nimport { PointsHighlight } from 'components/metrics/PointsHighlight';\n\ntype StepRankingProps = {\n  players: GamePlayers;\n  ranking: GameRanking;\n  isGameOver: boolean;\n  round: GameRound;\n  goToPreviousStep: GenericFunction;\n  setActiveIndex: GenericFunction;\n  threshold: number;\n};\n\nexport function StepRanking({\n  players,\n  ranking,\n  isGameOver,\n  round,\n  goToPreviousStep,\n  setActiveIndex,\n  threshold,\n}: StepRankingProps) {\n  return (\n    <StepRankingWrapper\n      players={players}\n      ranking={ranking}\n      gainedPointsDescriptions={[\n        <Translate pt=\"Votos corretos\" en=\"Correct guesses\" />,\n        <Translate\n          pt=\"Votos corretos em seu desenho por outros jogadores\"\n          en=\"Correct guesses on your drawing by other players\"\n        />,\n      ]}\n    >\n      <PopoverRule content={<ScoringRules />} />\n\n      {threshold > 0 && (\n        <Instruction contained>\n          <Translate\n            pt={\n              <>\n                O jogo termina quando alguém passa os <PointsHighlight>{threshold} pontos</PointsHighlight> ou{' '}\n                {round.total} rodadas.\n              </>\n            }\n            en={\n              <>\n                The game ends when someones passes <PointsHighlight>{threshold} points</PointsHighlight> or{' '}\n                {round.total} rounds.\n              </>\n            }\n          />\n        </Instruction>\n      )}\n\n      {!isGameOver && <RoundsLeftInstruction round={round} />}\n\n      <Button\n        size=\"large\"\n        onClick={() => {\n          goToPreviousStep();\n          setActiveIndex(0);\n        }}\n        icon={<PictureOutlined />}\n      >\n        <Translate pt=\"Ver Galeria Novamente\" en=\"See Gallery Again\" />\n      </Button>\n\n      <VIPNextPhaseButton round={round} />\n    </StepRankingWrapper>\n  );\n}\n","// Hooks\nimport { useSlideShow } from 'hooks/useSlideShow';\nimport { useStep } from 'hooks/useStep';\n// Resources and Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { PictureIcon } from 'icons/PictureIcon';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { GalleryRules } from './components/TextBlobs';\nimport { StepGallery } from './StepGallery';\nimport { StepRanking } from './StepRanking';\nimport { Translate } from 'components/language';\n\nfunction PhaseGallery({ players, state, info, meta }: PhaseProps) {\n  const { step, goToNextStep, goToPreviousStep, setStep } = useStep(0);\n  const { activeIndex, setActiveIndex, isFirstGalleryRunThrough } = useSlideShow(state.gallery.length);\n\n  const isGameOver = meta.options?.shortGame\n    ? state.round.current === 5\n    : Object.values(players).some((player) => player.score > 50);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ARTE_RUIM.GALLERY}\n      className=\"a-gallery-phase\"\n    >\n      <StepSwitcher step={step} players={players}>\n        {/*Step 0 */}\n        <PhaseAnnouncement\n          icon={<PictureIcon />}\n          title={<Translate pt=\"Galeria de Arte\" en=\"Art Gallery\" />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          unskippable\n          type=\"block\"\n        >\n          <GalleryRules />\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepGallery\n          gallery={state.gallery}\n          players={players}\n          cards={state.cards}\n          activeIndex={activeIndex}\n          setActiveIndex={setActiveIndex}\n          setStep={setStep}\n          isFirstGalleryRunThrough={isFirstGalleryRunThrough}\n        />\n\n        {/* Step 2 */}\n        <StepRanking\n          players={players}\n          ranking={state.ranking}\n          isGameOver={isGameOver}\n          round={state.round}\n          goToPreviousStep={goToPreviousStep}\n          setActiveIndex={setActiveIndex}\n          threshold={state.threshold}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseGallery;\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Avatar, Tooltip } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n\nconst GRADES = ['F', 'D', 'D+', 'C-', 'C', 'C+', 'B-', 'B', 'B+', 'A-', 'A', 'A+'];\n\ntype DrawingGradeProps = {\n  value: number;\n};\n\nexport const DrawingGrade = ({ value }: DrawingGradeProps) => {\n  const { translate } = useLanguage();\n  const grade = GRADES[Math.floor(value / 0.084)];\n\n  const baseClass = 'a-drawing-grade';\n\n  return (\n    <Tooltip\n      title={translate(\n        `Nota baseada em quantos acertos o desenho teve: ${value * 100}%`,\n        `Grade based on the number of correct guesses the artwork got: ${value * 100}%`\n      )}\n    >\n      <Avatar className={clsx(baseClass, `${baseClass}--${grade[0]}`)}>{grade}</Avatar>\n    </Tooltip>\n  );\n};\n","// Components\nimport { CanvasSVG } from 'components/canvas';\nimport { Translate } from 'components/language';\nimport { DrawingGrade } from './DrawingGrade';\n\ntype FinalGalleryProps = {\n  drawings: ArteRuimDrawing[];\n  players: GamePlayers;\n};\n\nexport function FinalGallery({ drawings, players }: FinalGalleryProps) {\n  return (\n    <ul className=\"a-game-over__gallery\">\n      {drawings.map((entry: ArteRuimDrawing) => {\n        const successRate = entry.successRate ?? 0;\n\n        return (\n          <li className=\"a-game-over__gallery-item\" key={entry.drawing} style={{ width: '200px' }}>\n            <CanvasSVG drawing={entry.drawing} width={200} className=\"a-game-over__gallery-canvas\" />\n            <span className=\"a-game-over__credits\">\n              \"{entry.text}\" <Translate pt=\"por\" en=\"by\" /> {players[entry.playerId].name}\n            </span>\n            <DrawingGrade value={successRate > 1 ? successRate / 100 : successRate} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","// Utils\nimport { achievementsReference } from './utils/achievements';\n// Icons\nimport { TrophyIcon } from 'icons/TrophyIcon';\n// Components\nimport { GameOverWrapper } from 'components/game-over';\nimport { Achievements } from 'components/general/Achievements';\nimport { Translate } from 'components/language';\nimport { FinalGallery } from './components/FinalGallery';\n\nfunction PhaseGameOver({ state, players, info }: PhaseProps) {\n  return (\n    <GameOverWrapper\n      info={info}\n      state={state}\n      players={players}\n      announcementIcon={<TrophyIcon />}\n      rateWidgetCustomText={<Translate pt=\"Alguma sugestão de carta?\" en=\"Any card suggestions?\" />}\n    >\n      <Achievements players={players} achievements={state.achievements} reference={achievementsReference} />\n\n      <FinalGallery players={players} drawings={state.drawings} />\n    </GameOverWrapper>\n  );\n}\n\nexport default PhaseGameOver;\n","import { ConfigProvider } from 'antd';\n// Constants\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport { LoadingPage } from 'components/loaders';\nimport PhaseDraw from './PhaseDraw';\nimport PhaseEvaluation from './PhaseEvaluation';\nimport PhaseGallery from './PhaseGallery';\nimport PhaseGameOver from './PhaseGameOver';\n// Sass\nimport './arte-ruim.scss';\n\nfunction getActiveComponent(state: GameState) {\n  // If phase is not defined, it is likely that the game is still loading\n  if (state && !state.phase) return LoadingPage;\n\n  switch (state.phase) {\n    case PHASES.DEFAULT.LOBBY:\n      return PhaseLobby;\n    case PHASES.DEFAULT.RULES:\n      return PhaseRules;\n    case PHASES.DEFAULT.SETUP:\n      return PhaseSetup;\n    case PHASES.ARTE_RUIM.DRAW:\n      return PhaseDraw;\n    case PHASES.ARTE_RUIM.EVALUATION:\n      return PhaseEvaluation;\n    case PHASES.ARTE_RUIM.GALLERY:\n      return PhaseGallery;\n    case PHASES.DEFAULT.GAME_OVER:\n      return PhaseGameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionArteRuim() {\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorPrimary: THEME_COLORS.WOOD,\n          colorLink: THEME_COLORS.WOOD,\n        },\n      }}\n    >\n      <Session gameCollection={GAME_COLLECTION.ARTE_RUIM} getActiveComponent={getActiveComponent} />\n    </ConfigProvider>\n  );\n}\n\nexport default SessionArteRuim;\n","const ACHIEVEMENTS = {\n  SOLITARY_LOSER: 'SOLITARY_LOSER',\n  SOLITARY_WINNER: 'SOLITARY_WINNER',\n  BEST_ARTIST: 'BEST_ARTIST',\n  WORST_ARTIST: 'WORST_ARTIST',\n  TABLE_VOTES: 'TABLE_VOTES',\n  CHOOSE_FOR_ME: 'CHOOSE_FOR_ME',\n};\n\nexport const achievementsReference: AchievementReference = {\n  [ACHIEVEMENTS.BEST_ARTIST]: {\n    icon: 'paint-brush',\n    title: {\n      pt: 'Melhor Artista',\n      en: 'Best Artist',\n    },\n    description: {\n      pt: 'Todos os jogadores acertaram unanimemente seu desenho mais vezes',\n      en: 'Got players to guess your drawing unanimously the most',\n    },\n  },\n  [ACHIEVEMENTS.WORST_ARTIST]: {\n    icon: 'broken-pencil',\n    title: {\n      pt: 'Artista Mais Não Convencional',\n      en: 'Most Unconventional Artist',\n    },\n    description: {\n      pt: 'Todos os jogadores NÃO acertaram unanimemente seu desenho mais vezes',\n      en: 'Got players to miss your drawing unanimously the most',\n    },\n  },\n  [ACHIEVEMENTS.SOLITARY_WINNER]: {\n    icon: 'person',\n    title: {\n      pt: 'Adivinhador Solitário',\n      en: 'Best Solitary Guesser',\n    },\n    description: {\n      pt: 'Foi o único que acertou o desenho mais vezes',\n      en: 'Was the only one to get the drawing the most',\n    },\n  },\n  [ACHIEVEMENTS.SOLITARY_LOSER]: {\n    icon: 'difference',\n    title: {\n      pt: 'Mais Diferentão',\n      en: 'Most Unique Guesser',\n    },\n    description: {\n      pt: 'Foi o único que errou o desenho mais vezes',\n      en: 'Was the only one to get the drawing the most',\n    },\n  },\n  [ACHIEVEMENTS.TABLE_VOTES]: {\n    icon: 'table',\n    title: {\n      pt: 'Melhor Votador Pra Mesa',\n      en: 'Best Table Voter',\n    },\n    description: {\n      pt: 'Votou nas cartas extras que não eram de nenhum jogador mais vezes',\n      en: \"Voted for extra cards that didn't belong to any player the most\",\n    },\n  },\n  [ACHIEVEMENTS.CHOOSE_FOR_ME]: {\n    icon: 'dice',\n    title: {\n      pt: 'Menos Brasileiro',\n      en: 'The Shirker',\n    },\n    description: {\n      pt: 'Apertou o botão Chutar Restantes mais vezes',\n      en: \"Pressed 'Guess for me' the most\",\n    },\n  },\n};\n\nexport default achievementsReference;\n","export function ClockIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <circle cx=\"256\" cy=\"256\" r=\"248\" fill=\"#ff5876\"></circle>\n      <path\n        fill=\"#e6485d\"\n        d=\"M256 486C122.048 486 12.919 379.795 8.18 247c-.107 2.988-.18 5.986-.18 9 0 136.967 111.033 248 248 248s248-111.033 248-248c0-3.014-.073-6.012-.18-9C499.081 379.795 389.952 486 256 486z\"\n      ></path>\n      <circle cx=\"256\" cy=\"256\" r=\"206.942\" fill=\"#e4eef9\"></circle>\n      <path\n        fill=\"#d5e0f2\"\n        d=\"M256 444.942c-111.274 0-202.022-87.828-206.736-197.942a209.92 209.92 0 00-.207 9c0 114.291 92.651 206.942 206.942 206.942S462.942 370.291 462.942 256c0-3.017-.079-6.015-.207-9C458.022 357.114 367.274 444.942 256 444.942z\"\n      ></path>\n      <path\n        fill=\"#405b6c\"\n        d=\"M331.17 183.393c-5.899-5.818-15.396-5.752-21.213.146L262.848 231.3c10.522 2.911 18.324 12.359 18.76 23.701l49.707-50.395c5.818-5.898 5.753-15.396-.145-21.213zM230.367 256c0-11.14 7.109-20.617 17.036-24.151l-92.462-82.397c-6.186-5.512-15.667-4.966-21.178 1.219s-4.966 15.667 1.219 21.178l95.407 85.021c-.01-.289-.022-.578-.022-.87z\"\n      ></path>\n      <circle cx=\"256\" cy=\"256\" r=\"25.633\" fill=\"#ff5876\"></circle>\n      <path\n        fill=\"#2d4456\"\n        d=\"M216.381 244.387l14.008 12.483c-.01-.29-.022-.578-.022-.87 0-11.14 7.109-20.617 17.036-24.151l-12.635-11.26c-8.792 5.283-15.446 13.747-18.387 23.798zm58.377-25.163l-11.91 12.075c10.522 2.911 18.324 12.359 18.76 23.701l13.128-13.31c-3.606-9.76-10.801-17.775-19.978-22.466z\"\n      ></path>\n      <path\n        fill=\"#e6485d\"\n        d=\"M256 263.634c-10.989 0-20.36-6.917-24.005-16.634a25.56 25.56 0 00-1.629 9c0 14.157 11.477 25.634 25.633 25.634 14.157 0 25.634-11.477 25.634-25.634a25.56 25.56 0 00-1.629-9c-3.644 9.716-13.015 16.634-24.004 16.634z\"\n      ></path>\n      <path d=\"M437.02 74.98C388.667 26.629 324.381 0 256 0S123.333 26.629 74.98 74.98C26.628 123.333 0 187.62 0 256c0 65.664 24.828 128.099 69.909 175.802a7.515 7.515 0 1010.923-10.323C38.398 376.577 15.029 317.809 15.029 256c0-64.366 25.065-124.879 70.578-170.392C131.121 40.094 191.634 15.029 256 15.029s124.879 25.065 170.392 70.579C471.905 131.121 496.97 191.634 496.97 256s-25.066 124.879-70.578 170.392C380.879 471.906 320.366 496.971 256 496.971c-56.111 0-110.745-19.706-153.838-55.487a7.515 7.515 0 00-9.601 11.563C138.346 491.063 196.389 512 256 512c68.381 0 132.667-26.629 181.02-74.98C485.372 388.667 512 324.38 512 256s-26.628-132.667-74.98-181.02z\"></path>\n      <path d=\"M402.975 109.552a7.514 7.514 0 00-.363-10.621C362.703 61.662 310.635 41.138 256 41.138c-57.391 0-111.348 22.349-151.93 62.932S41.138 198.608 41.138 256s22.349 111.348 62.932 151.931 94.539 62.931 151.93 62.931 111.348-22.349 151.931-62.931S470.862 313.392 470.862 256c0-49.329-16.259-95.72-47.02-134.156a7.514 7.514 0 10-11.734 9.39c28.605 35.743 43.724 78.886 43.724 124.766 0 110.188-89.645 199.833-199.833 199.833S56.167 366.188 56.167 256 145.812 56.167 256 56.167c50.813 0 99.238 19.088 136.354 53.748a7.512 7.512 0 0010.621-.363z\"></path>\n      <path d=\"M263.515 98.649V75.372a7.515 7.515 0 10-15.03 0v23.276a7.515 7.515 0 0015.03.001zm-15.03 314.702v23.276a7.515 7.515 0 1015.03 0v-23.276a7.515 7.515 0 10-15.03 0zm188.142-149.836a7.515 7.515 0 100-15.03h-23.276c-4.151 0-7.515 3.364-7.515 7.515s3.364 7.515 7.515 7.515zm-361.254-15.03c-4.151 0-7.515 3.364-7.515 7.515s3.364 7.515 7.515 7.515h23.276a7.515 7.515 0 100-15.03zm282.215 102.661a7.515 7.515 0 009.667-11.508l-81.672-68.603c2-3.919 3.245-8.283 3.539-12.904l47.69-48.35c8.687-8.451 8.585-23.551-.219-31.882-8.432-8.714-23.553-8.576-31.882.219l-44.363 44.977a33.14 33.14 0 00-11.013.378l-89.594-79.841c-8.887-8.252-23.953-7.381-31.831 1.833-8.269 9.28-7.447 23.559 1.833 31.829L173.1 215.93a7.516 7.516 0 0010-11.22l-43.355-38.635c-3.094-2.757-3.368-7.517-.611-10.61 2.624-3.072 7.653-3.36 10.61-.611l84.956 75.708a33.368 33.368 0 00-9.068 12.05l-20.094-17.906a7.516 7.516 0 00-9.999 11.221l27.576 24.573c2.204 16.183 16.106 28.698 32.885 28.698a33.025 33.025 0 0019.916-6.655zm-42.175-162.473c2.777-2.934 7.809-2.968 10.627-.072 2.936 2.777 2.969 7.81.072 10.627l-40.747 41.311a33.435 33.435 0 00-9.876-11.39zM256 274.169c-10.019 0-18.169-8.151-18.169-18.169s8.151-18.169 18.169-18.169c10.019 0 18.169 8.151 18.169 18.169s-8.15 18.169-18.169 18.169z\"></path>\n    </svg>\n  );\n}\n","export function GarbageIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#f7f3f1\"\n        d=\"M199.02 408.89h-19.67a5 5 0 01-5-5V290.5a5 5 0 015-5h19.67a5 5 0 015 5v113.4a5 5 0 01-5 5z\"\n      ></path>\n      <path\n        fill=\"#e38523\"\n        d=\"M411.84 215.02c-1.39-9.14-9.04-16.98-18.13-18.6-9.15-1.62-18.34 3.41-23.99 10.73a5.25 5.25 0 01-8.34 0c-5.64-7.32-14.84-12.35-23.98-10.72-9.1 1.61-16.75 9.45-18.13 18.59-.94 6.17.79 12.55 3.94 17.94 5.86 10.03 16.25 15.4 23.54 24.12h37.6c7.3-8.72 17.68-14.1 23.55-24.12 3.14-5.39 4.87-11.77 3.94-17.94z\"\n      ></path>\n      <path\n        fill=\"#e9a52d\"\n        d=\"M365.55 245.72c-39.32 0-71.2 55.63-71.2 91.73s31.88 65.38 71.2 65.38 71.2-29.27 71.2-65.37-31.88-91.74-71.2-91.74z\"\n      ></path>\n      <path\n        fill=\"#e38523\"\n        d=\"M388.03 251.79c18.94 19.47 31.4 49.66 31.4 72.23 0 36.11-31.88 65.38-71.2 65.38-13.4 0-25.92-3.4-36.62-9.3 13.05 13.9 32.37 22.73 53.94 22.73 39.32 0 71.2-29.27 71.2-65.38 0-28.89-20.42-70.28-48.72-85.66z\"\n      ></path>\n      <path\n        fill=\"#5ea570\"\n        d=\"M104.99 268.48a18.95 18.95 0 00-19.37-9.33c-7.57 1.33-13.3 7.84-15.62 15.13a4.34 4.34 0 01-6.49 2.36c-6.46-4.09-15.04-5.4-21.7-1.55a18.95 18.95 0 00-8.83 19.6c1.02 5.07 4.17 9.54 8.15 12.84 7.4 6.14 17 7.38 25.13 12.1l29.26-10.65c3.2-8.85 9.76-15.97 11.48-25.43.93-5.08.46-10.53-2.01-15.07z\"\n      ></path>\n      <path\n        fill=\"#6dc17d\"\n        d=\"M78.8 308.56c-36.94 13.45-47.87 76.62-35.52 110.55s52.31 50.54 89.26 37.1 56.89-51.86 44.54-85.8-61.33-75.3-98.28-61.85z\"\n      ></path>\n      <path\n        fill=\"#a87c72\"\n        d=\"M476.3 403.63a4.19 4.19 0 01-3.12-4.88 51.27 51.27 0 00-64.43-59.42 6.9 6.9 0 01-7.18-2.2 98.46 98.46 0 00-75.29-34.88 98.29 98.29 0 00-65.88 25.21 6.26 6.26 0 01-6.31 1.21 78.15 78.15 0 00-26.5-4.6 78.24 78.24 0 00-61.63 29.96 3.86 3.86 0 01-5.7.43 42.62 42.62 0 00-65.02 7.93 5.7 5.7 0 01-5.62 2.56 48.62 48.62 0 00-54.36 35.59 6.8 6.8 0 01-4.1 4.56A37.38 37.38 0 007.5 439.87v23.96a5 5 0 005 5h487a5 5 0 005-5v-23.96a37.36 37.36 0 00-28.2-36.24z\"\n      ></path>\n      <path\n        fill=\"#9a695e\"\n        d=\"M476.3 403.63a4.19 4.19 0 01-3.12-4.88 51.27 51.27 0 00-62.74-59.88 51.28 51.28 0 0137.74 59.88 4.19 4.19 0 003.12 4.88 37.36 37.36 0 0128.2 36.24v23.95a5 5 0 01-5 5h25a5 5 0 005-5v-23.95a37.36 37.36 0 00-28.2-36.24z\"\n      ></path>\n      <path\n        fill=\"#de5791\"\n        d=\"M249.31 269.6l8.26 22.67 33.77-12.3-8.26-22.67a7.59 7.59 0 00-9.72-4.53l-19.51 7.1a7.59 7.59 0 00-4.54 9.72z\"\n      ></path>\n      <path\n        fill=\"#91dafa\"\n        d=\"M318.11 322.21c-1.78-4.88-.66-10.16 2.5-14.23a7.77 7.77 0 001.04-7.4l-4.74-13.04a15.85 15.85 0 00-20.32-9.48l-44.28 16.12a15.85 15.85 0 00-9.47 20.32l4.74 13.03a7.77 7.77 0 005.57 5c5.03 1.1 9.27 4.42 11.05 9.3s.66 10.16-2.49 14.23a7.77 7.77 0 00-1.05 7.4l23.96 65.84 74.07-26.96-23.96-65.83a7.77 7.77 0 00-5.57-5c-5.02-1.09-9.27-4.41-11.05-9.3z\"\n      ></path>\n      <path\n        fill=\"#6cbff8\"\n        d=\"M334.73 336.5a7.77 7.77 0 00-5.57-5c-5.02-1.08-9.27-4.4-11.05-9.29s-.66-10.16 2.5-14.23a7.77 7.77 0 001.04-7.4l-4.74-13.04a15.85 15.85 0 00-20.32-9.48l-18.14 6.6c7.97-2.9 16.86 1.42 19.86 9.65l4.74 13.03c.9 2.5.61 5.3-.95 7.38-3.03 4.02-4.06 9.27-2.28 14.15s5.94 8.24 10.84 9.37a7.84 7.84 0 015.47 5.04l23.96 65.83 18.6-6.77z\"\n      ></path>\n      <path\n        fill=\"#a87c72\"\n        d=\"M410.44 432.03a26.44 26.44 0 00-31.2-26 4.75 4.75 0 01-5.44-3.55 45.62 45.62 0 00-82.3-13.59 5.38 5.38 0 01-7.04 1.77 26.45 26.45 0 00-39.09 23.23v35h165.07z\"\n      ></path>\n      <path d=\"M481.06 397.2a58.85 58.85 0 00-36.92-63.4 95.22 95.22 0 00-3.21-19.66 7.5 7.5 0 00-14.5 3.86 86.2 86.2 0 012.36 12.12 58.59 58.59 0 00-21.72 1.9 106.05 106.05 0 00-79.55-37.26l-3.56-9.8a23.39 23.39 0 00-1.78-3.78c10.27-14.3 25.77-27.96 43.37-27.96 20.13 0 37.28 17.5 47.81 34.63a7.5 7.5 0 0012.78-7.85c-7.31-11.9-15.79-21.52-24.9-28.52 4.77-4.14 9.53-8.59 13.13-14.74 4.27-7.3 6-15.42 4.89-22.85-1.86-12.24-12.06-22.69-24.24-24.85-10.3-1.84-21.6 2.6-29.47 11.4-7.86-8.8-19.16-13.24-29.45-11.4-12.2 2.16-22.4 12.61-24.24 24.85-1.13 7.42.6 15.53 4.87 22.85 3.6 6.17 8.39 10.62 13.18 14.76a98.34 98.34 0 00-19.11 19.84 23.28 23.28 0 00-14.95-.9l-5.72-15.7a15.1 15.1 0 00-19.34-9.03l-19.5 7.1c-3.8 1.38-6.82 4.15-8.52 7.8s-1.88 7.76-.5 11.54l5.71 15.72a23.15 23.15 0 00-11.41 11.33 23.19 23.19 0 00-.81 17.75 86.77 86.77 0 00-24.24 1.11v-27.55c0-6.9-5.6-12.5-12.5-12.5h-19.67c-6.9 0-12.5 5.6-12.5 12.5v48.47c-10.1-12.15-22.8-22.8-36.02-30.04a88.17 88.17 0 00-22.46-8.8c2.46-4.44 4.95-9.42 6-15.24 1.32-7.17.33-14.28-2.8-20.02a26.28 26.28 0 00-27.25-13.12c-8.7 1.53-16.15 7.8-20.12 16.7-8.7-4.2-18.62-4.22-26.14.14-9.33 5.41-14.56 17-12.43 27.56 1.28 6.39 5.09 12.47 10.7 17.14 4.57 3.79 9.7 6 14.43 7.82a85.38 85.38 0 00-10.06 17.51c-6.65 15.35-10.08 33.6-9.74 51.62a55.84 55.84 0 00-2.85 8A44.63 44.63 0 000 439.86v23.96c0 6.9 5.6 12.5 12.5 12.5h86.87a7.5 7.5 0 100-15H15v-21.46a29.71 29.71 0 0118.93-27.8 14.34 14.34 0 008.58-9.61 37.14 37.14 0 012.81-7.53 41.14 41.14 0 0143.2-22.56 13.26 13.26 0 0013.02-5.9 35.04 35.04 0 0129.52-16.08 35 35 0 0124.05 9.52 11.39 11.39 0 0016.74-1.24 71 71 0 0170.12-25.62 15.01 15.01 0 009.6 6.81c2.71.59 4.75 2.24 5.58 4.54.84 2.29.34 4.86-1.37 7.06a15.35 15.35 0 00-2.17 14.58l5.9 16.22a34 34 0 00-21.64 31.63v15.45a7.5 7.5 0 1015 0V413.9a18.97 18.97 0 0128-16.65 12.92 12.92 0 0016.9-4.23 38.02 38.02 0 0131.87-17.23 38.08 38.08 0 0136.9 28.57 12.3 12.3 0 0014.04 9.05 18.96 18.96 0 0122.36 18.63v3a7.5 7.5 0 1015 0v-3a33.97 33.97 0 00-37.54-33.75 53.03 53.03 0 00-26.77-31.78l-11.86-32.57a15.17 15.17 0 00-11.02-9.75c-2.72-.6-4.76-2.25-5.6-4.54-.83-2.29-.33-4.86 1.36-7.05.68-.87 1.25-1.82 1.71-2.82a91.08 91.08 0 0167.62 32.2 14.41 14.41 0 0014.99 4.57 43.82 43.82 0 0155 50.7 11.68 11.68 0 008.63 13.66A29.82 29.82 0 01497 439.87v21.46H134.37a7.5 7.5 0 100 15H499.5c6.9 0 12.5-5.6 12.5-12.5v-23.96a44.8 44.8 0 00-30.94-42.67zM196.52 293v29.35a84.97 84.97 0 00-14.67 7.38V293zm-156.19.2a11.54 11.54 0 015.25-11.62c4.23-2.45 10.03-1.06 13.93 1.42a11.8 11.8 0 0010.41 1.1 11.78 11.78 0 007.23-7.55c1.4-4.37 4.95-9.17 9.76-10.01a11.54 11.54 0 0111.5 5.52c1.48 2.73 1.91 6.33 1.21 10.15-.78 4.32-3.09 8.4-5.53 12.73-.65 1.15-1.3 2.33-1.95 3.53-5.53.2-10.85 1.2-15.9 3.04a51.38 51.38 0 00-14.1 7.9c-5.99-2.38-11.98-4.13-16.22-7.65-3-2.48-4.98-5.52-5.59-8.55zm49.24 64.17a56.06 56.06 0 00-42.29 11.77c4.45-28.7 19.1-48.08 34.08-53.53 19.2-6.99 44.04 4.24 63.06 21.59a50.24 50.24 0 00-13.36-1.81 49.97 49.97 0 00-41.49 21.98zm240.12-128.2c-2.55-4.36-3.62-8.98-3-13.03.9-5.97 6.07-11.27 12.03-12.33 5.67-1 12.23 2.1 16.72 7.92 2.44 3.17 6.13 4.98 10.11 4.98s7.67-1.81 10.1-4.98c4.5-5.82 11.07-8.92 16.74-7.91 5.95 1.05 11.13 6.35 12.03 12.32.61 4.04-.46 8.67-3 13.04-3.18 5.42-8.47 9.61-13.66 14.1a53.19 53.19 0 00-22.21-5.06 53.04 53.04 0 00-22.18 5.08c-5.13-4.43-10.52-8.7-13.68-14.13zm-73.28 37.74l19.51-7.1c.05-.02.1 0 .12.06l5.68 15.62-19.67 7.16-5.69-15.62c-.01-.04.01-.1.05-.12zm71.1 71.9c.02.02.12.1.17.26l8.03 22.06a52.98 52.98 0 00-49.4 22.06 34 34 0 00-11.62-3.11l-6.99-19.19c-.05-.15-.03-.27-.06-.24 4.85-6.27 6.2-14.26 3.61-21.38-2.59-7.13-8.76-12.4-16.44-14.05a.58.58 0 01-.18-.26l-4.74-13.03a8.3 8.3 0 01.27-6.4 8.28 8.28 0 014.72-4.3l44.27-16.12a8.37 8.37 0 0110.71 5l4.75 13.03.02.11c0 .06 0 .11.02.16-4.84 6.27-6.18 14.26-3.59 21.37a22.3 22.3 0 0016.45 14.04zM167.72 146.83a7.47 7.47 0 0010.52-1.3 7.5 7.5 0 00-1.3-10.53c-6.48-5.05-6.74-15.99-4.12-24.59 1.5-4.94 3.75-9.74 6.13-14.81 2.69-5.75 5.47-11.7 7.3-18.2 5.35-19.12-1.74-34.09-11.13-40.44a7.5 7.5 0 00-8.4 12.42c6.81 4.61 7.4 15.66 5.08 23.97-1.49 5.31-3.9 10.45-6.44 15.89-2.5 5.33-5.07 10.84-6.89 16.8-6.1 20.03 1.17 34.5 9.25 40.79zm83.85 0a7.47 7.47 0 0010.52-1.3 7.5 7.5 0 00-1.3-10.53c-6.48-5.05-6.74-15.99-4.12-24.59 1.5-4.94 3.75-9.74 6.13-14.81 2.69-5.75 5.47-11.7 7.3-18.2 5.35-19.12-1.74-34.09-11.13-40.44a7.5 7.5 0 00-8.4 12.43c6.8 4.6 7.4 15.65 5.08 23.96-1.49 5.31-3.9 10.45-6.44 15.89-2.5 5.33-5.07 10.84-6.9 16.8-6.09 20.03 1.18 34.5 9.26 40.79zm83.85 0a7.47 7.47 0 0010.52-1.3 7.5 7.5 0 00-1.3-10.53c-6.48-5.05-6.74-15.99-4.12-24.59 1.5-4.94 3.75-9.74 6.13-14.81 2.69-5.75 5.47-11.7 7.3-18.2 5.35-19.12-1.73-34.09-11.13-40.44a7.5 7.5 0 00-8.4 12.42c6.81 4.61 7.4 15.66 5.08 23.97-1.49 5.31-3.9 10.45-6.44 15.89-2.5 5.33-5.07 10.84-6.89 16.8-6.1 20.03 1.17 34.5 9.25 40.79z\"></path>\n    </svg>\n  );\n}\n","export function PaintingIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#d19a6e\"\n        d=\"M255.517 48.881h-47.52V19.77c0-6.777 5.493-12.27 12.27-12.27h22.98c6.777 0 12.27 5.493 12.27 12.27z\"\n      ></path>\n      <path\n        fill=\"#bc845e\"\n        d=\"M234.907 7.5h-14.64c-6.777 0-12.27 5.493-12.27 12.27v29.111h14.64V19.77c0-6.777 5.494-12.27 12.27-12.27z\"\n      ></path>\n      <path\n        fill=\"#ffc269\"\n        d=\"M306.997 87.601h-150.48v-25.58c0-7.257 5.883-13.14 13.14-13.14h124.2c7.257 0 13.14 5.883 13.14 13.14z\"\n      ></path>\n      <path\n        fill=\"#ffa95f\"\n        d=\"M188.377 48.881h-18.72c-7.257 0-13.14 5.883-13.14 13.14v25.58h18.72v-25.58c0-7.257 5.883-13.14 13.14-13.14z\"\n      ></path>\n      <path\n        fill=\"#d19a6e\"\n        d=\"M175.536 492.233l25.619-71.973h-49.68l-24.066 67.611c-2.886 8.108 3.126 16.629 11.732 16.629h19.009a18.455 18.455 0 0017.386-12.267zM288.138 492.233l-25.619-71.973h49.68l24.066 67.611c2.886 8.108-3.126 16.629-11.732 16.629h-19.009a18.455 18.455 0 01-17.386-12.267z\"\n      ></path>\n      <path\n        fill=\"#bc845e\"\n        d=\"M166.538 446.66h25.22l9.397-26.4h-49.68l-24.066 67.611c-2.886 8.108 3.126 16.629 11.732 16.629h18.24c-8.606 0-14.618-8.521-11.732-16.629l12.583-35.352a8.817 8.817 0 018.306-5.859zM306.378 492.233l-13.836-38.871c-1.163-3.268 1.26-6.703 4.729-6.703h24.325l-9.397-26.4h-49.68l25.619 71.973a18.455 18.455 0 0017.387 12.267h18.24a18.453 18.453 0 01-17.387-12.266z\"\n      ></path>\n      <path\n        fill=\"#ffc269\"\n        d=\"M398.405 429.244H65.27c-6.742 0-12.208-5.466-12.208-12.208v-24.889c0-6.742 5.466-12.208 12.208-12.208h37.194l39.512-21.24 34.244 21.24h222.185c6.742 0 12.208 5.466 12.208 12.208v24.889c-.001 6.742-5.466 12.208-12.208 12.208z\"\n      ></path>\n      <path\n        fill=\"#ffa95f\"\n        d=\"M71.062 417.036v-24.889c0-6.742 5.466-12.208 12.208-12.208h-18c-6.742 0-12.208 5.466-12.208 12.208v24.889c0 6.742 5.466 12.208 12.208 12.208h18c-6.742 0-12.208-5.466-12.208-12.208z\"\n      ></path>\n      <path\n        fill=\"#f4f4f4\"\n        d=\"M376.742 379.94H86.932V112.753c0-13.891 11.261-25.152 25.152-25.152H351.59c13.891 0 25.152 11.261 25.152 25.152z\"\n      ></path>\n      <path\n        fill=\"#e5e5e5\"\n        d=\"M376.742 145.146a67.752 67.752 0 00-3.022-3.232c-12.437-12.437-28.972-19.421-46.558-19.667l-3.622-.047c-9.196 0-17.817 3.607-24.276 10.157-6.458 6.548-9.944 15.22-9.815 24.418l.044 3.142c.246 17.587 7.23 34.122 19.667 46.559a67.3 67.3 0 0029.421 17.196l34.692 34.691a236.08 236.08 0 003.469 3.383zM134.201 87.601h-22.116c-13.891 0-25.152 11.261-25.152 25.152V379.94h22.116V112.753c0-13.891 11.261-25.152 25.152-25.152z\"\n      ></path>\n      <path\n        fill=\"#69d6f4\"\n        d=\"M132.664 161.295v158.191c0 9.055 7.34 16.395 16.395 16.395s16.395-7.34 16.395-16.395V212.909c0-8.83 7.158-15.989 15.989-15.989 8.83 0 15.989 7.158 15.989 15.989v12.45c0 9.189 7.52 16.994 16.708 16.822 8.91-.167 16.082-7.442 16.082-16.392V212.91c0-8.83 7.158-15.989 15.989-15.989h36.024c8.83 0 15.989 7.158 15.989 15.989v74.467c0 9.189 7.52 16.994 16.708 16.822 8.91-.167 16.082-7.442 16.082-16.392V152.51c0-5.694-4.616-10.31-10.31-10.31H151.759c-10.546 0-19.095 8.549-19.095 19.095z\"\n      ></path>\n      <path\n        fill=\"#69d6f4\"\n        d=\"M230.22 286.12c0-8.881-7.199-16.08-16.08-16.08h-.63c-8.881 0-16.08 7.199-16.08 16.08 0 8.881 7.199 16.08 16.08 16.08h.63c8.881 0 16.08-7.199 16.08-16.08z\"\n      ></path>\n      <path\n        fill=\"#51c1ed\"\n        d=\"M320.701 142.2h-28.223a33.96 33.96 0 00-3.029 14.574l.044 3.142c.246 17.587 7.23 34.122 19.667 46.558a67.264 67.264 0 0021.852 14.578V152.51c-.002-5.694-4.617-10.31-10.311-10.31z\"\n      ></path>\n      <path\n        fill=\"#aab2bd\"\n        d=\"M371.204 228.009l16.211 16.211a210.226 210.226 0 0015.636 14.141l37.697 30.801a11.129 11.129 0 0014.911-.749 11.129 11.129 0 00.749-14.911l-30.801-37.697a210.226 210.226 0 00-14.141-15.636l-16.211-16.211z\"\n      ></path>\n      <path\n        fill=\"#969faa\"\n        d=\"M449.658 280.253l-37.697-30.801a210.226 210.226 0 01-15.636-14.141L380.114 219.1l-8.91 8.91 16.211 16.211a210.226 210.226 0 0015.636 14.141l37.697 30.801a11.129 11.129 0 0014.911-.749 11.078 11.078 0 003.063-5.847 11.103 11.103 0 01-9.064-2.314z\"\n      ></path>\n      <path\n        fill=\"#ffc269\"\n        d=\"M355.109 189.154h34.013v31.433h-34.013z\"\n        transform=\"rotate(-45 372.107 204.954)\"\n      ></path>\n      <path\n        fill=\"#fc8d94\"\n        d=\"M309.447 156.495l.044 3.142a47.168 47.168 0 0034.704 44.836l4.783 1.31 24.051-24.051-1.31-4.783a47.172 47.172 0 00-44.836-34.704l-3.142-.044c-7.94-.11-14.405 6.354-14.294 14.294z\"\n      ></path>\n      <path fill=\"#ffa95f\" d=\"M373.028 181.732l-24.051 24.051 22.227 22.226 8.91-8.91-22.227-22.226z\"></path>\n      <path\n        fill=\"#fa6f7c\"\n        d=\"M353.105 195.563a47.172 47.172 0 01-34.704-44.836l-.044-3.142a14.047 14.047 0 01.732-4.652c-5.658 1.886-9.73 7.252-9.642 13.562l.044 3.142a47.168 47.168 0 0034.704 44.836l4.783 1.31 24.051-24.051-15.141 15.141z\"\n      ></path>\n      <g>\n        <path d=\"M398.405 372.44h-14.163V268.92a7.5 7.5 0 00-15 0v103.52H159.071a7.5 7.5 0 000 15h239.334a4.713 4.713 0 014.708 4.708v24.889a4.713 4.713 0 01-4.708 4.708H65.27a4.713 4.713 0 01-4.708-4.708v-24.889a4.713 4.713 0 014.708-4.708h61.408a7.5 7.5 0 000-15H94.432V112.753c0-9.733 7.919-17.652 17.652-17.652H351.59c9.733 0 17.652 7.919 17.652 17.652v25.126a7.5 7.5 0 0015 0v-25.126c0-18.004-14.648-32.652-32.652-32.652h-37.092v-18.08c0-11.381-9.259-20.64-20.64-20.64h-30.84V19.77c0-10.901-8.869-19.77-19.77-19.77h-22.98c-10.901 0-19.77 8.869-19.77 19.77v21.611h-30.84c-11.381 0-20.64 9.259-20.64 20.64v18.08h-36.933c-18.004 0-32.652 14.648-32.652 32.652V372.44H65.27c-10.867 0-19.708 8.841-19.708 19.708v24.889c0 10.867 8.841 19.708 19.708 19.708h72.376l-17.303 48.613c-2.171 6.101-1.239 12.902 2.494 18.193s9.828 8.45 16.304 8.45h19.009c10.953 0 20.78-6.933 24.453-17.251l20.646-58.005h57.177l20.647 58.005c3.673 10.319 13.5 17.251 24.452 17.251h19.009a19.98 19.98 0 0016.304-8.45 19.978 19.978 0 002.494-18.194l-17.303-48.612h72.376c10.867 0 19.708-8.841 19.708-19.708v-24.889c0-10.867-8.841-19.708-19.708-19.708zM215.497 19.77c0-2.63 2.14-4.77 4.77-4.77h22.98c2.63 0 4.77 2.14 4.77 4.77v21.611h-32.52zm-51.48 42.251c0-3.11 2.53-5.64 5.64-5.64h124.2c3.11 0 5.64 2.53 5.64 5.64v18.08h-135.48zm4.453 427.697A10.977 10.977 0 01158.149 497H139.14c-2.317 0-3.602-1.467-4.047-2.098s-1.396-2.333-.619-4.516l19.094-53.643h33.758zm160.729.668c.777 2.183-.174 3.886-.619 4.517s-1.73 2.098-4.047 2.098h-19.009a10.976 10.976 0 01-10.321-7.282l-18.856-52.975h33.758z\"></path>\n        <path d=\"M214.14 262.54h-.629c-13.002 0-23.58 10.578-23.58 23.58s10.578 23.58 23.58 23.58h.629c13.002 0 23.58-10.578 23.58-23.58s-10.578-23.58-23.58-23.58zm0 32.16h-.629c-4.731 0-8.58-3.849-8.58-8.58s3.849-8.58 8.58-8.58h.629c4.731 0 8.58 3.849 8.58 8.58s-3.849 8.58-8.58 8.58z\"></path>\n        <path d=\"M282.232 189.42h-36.023c-12.952 0-23.489 10.537-23.489 23.489v12.879c0 4.813-3.913 8.803-8.722 8.893-2.268.05-4.48-.861-6.195-2.544-1.826-1.792-2.873-4.263-2.873-6.779v-12.45c0-12.952-10.537-23.489-23.488-23.489s-23.489 10.537-23.489 23.489v106.577c0 4.904-3.99 8.895-8.895 8.895-4.904 0-8.895-3.99-8.895-8.895v-158.19c0-6.394 5.201-11.595 11.595-11.595H282.19a7.5 7.5 0 000-15H151.759c-14.665 0-26.595 11.93-26.595 26.595v158.19c0 13.175 10.719 23.895 23.895 23.895 13.175 0 23.895-10.719 23.895-23.895V212.909c0-4.681 3.808-8.489 8.489-8.489s8.488 3.808 8.488 8.489v12.45c0 6.517 2.685 12.89 7.366 17.484 4.613 4.526 10.632 6.954 16.983 6.835 12.925-.242 23.441-10.959 23.441-23.89v-12.879c0-4.681 3.808-8.489 8.489-8.489h36.023c4.681 0 8.489 3.808 8.489 8.489v74.467c0 6.518 2.685 12.89 7.366 17.485 4.612 4.526 10.634 6.959 16.982 6.835 12.925-.242 23.441-10.959 23.441-23.891v-59.796a7.5 7.5 0 00-15 0v59.796c0 4.814-3.913 8.803-8.722 8.894-2.287.039-4.48-.861-6.195-2.544-1.826-1.792-2.873-4.263-2.873-6.779v-74.467c0-12.952-10.537-23.489-23.489-23.489z\"></path>\n        <path d=\"M462.216 268.757l-30.801-37.697a218.436 218.436 0 00-14.646-16.194l-37.032-37.032-.785-2.866a54.76 54.76 0 00-14.07-24.215c-10.123-10.123-23.58-15.807-37.894-16.007l-3.144-.044c-5.86-.066-11.414 2.164-15.573 6.325-4.16 4.16-6.406 9.69-6.323 15.573l.043 3.142c.2 14.314 5.885 27.772 16.007 37.894a54.764 54.764 0 0024.215 14.07l2.866.785 37.032 37.032a218.5 218.5 0 0016.194 14.646l37.697 30.802a18.589 18.589 0 0011.791 4.222 18.58 18.58 0 0013.17-5.476 18.574 18.574 0 001.253-24.96zM316.99 159.532l-.044-3.142a6.548 6.548 0 011.931-4.757c1.271-1.271 2.992-1.98 4.758-1.932l3.143.044c10.386.145 20.151 4.27 27.497 11.615a39.746 39.746 0 0110.21 17.571l.159.58-17.888 17.888-.58-.159a39.74 39.74 0 01-17.571-10.21c-7.346-7.345-11.471-17.111-11.615-27.498zm56.038 32.806l11.62 11.62-13.444 13.444-11.62-11.62zm77.328 90.773a3.619 3.619 0 01-4.862.244l-37.697-30.801a203.468 203.468 0 01-15.079-13.637l-10.908-10.908 13.444-13.444 10.908 10.908a203.67 203.67 0 0113.637 15.079l30.801 37.697a3.618 3.618 0 01-.244 4.862z\"></path>\n      </g>\n    </svg>\n  );\n}\n","export function PanicIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fed2a4\"\n        d=\"M104.478 214.588v136.94c0 83.889 67.555 152.93 151.444 152.972 83.719.042 151.6-67.813 151.6-151.522v-138.39c0-5.579-4.523-10.101-10.101-10.101H114.579c-5.578-.001-10.101 4.522-10.101 10.101z\"\n      ></path>\n      <path\n        fill=\"#ffbd86\"\n        d=\"M367.652 204.486v148.492c0 76.921-57.32 140.449-131.576 150.214 6.52.857 13.169 1.308 19.924 1.308 83.683 0 151.522-67.839 151.522-151.522v-138.39c0-5.579-4.523-10.101-10.101-10.101h-29.769z\"\n      ></path>\n      <path\n        fill=\"#ea9b58\"\n        d=\"M422.674 352.978h-15.152v-90.913h15.152c25.105 0 45.457 20.352 45.457 45.457 0 25.104-20.352 45.456-45.457 45.456zm-333.348 0h15.152v-90.913H89.326c-25.105 0-45.457 20.352-45.457 45.457 0 25.104 20.352 45.456 45.457 45.456z\"\n      ></path>\n      <path\n        fill=\"#e175a5\"\n        d=\"M214.296 459.83c-6.439 0-11.097-6.041-9.6-12.304 5.543-23.196 26.409-40.442 51.304-40.442s45.761 17.246 51.304 40.442c1.497 6.263-3.161 12.304-9.6 12.304z\"\n      ></path>\n      <path\n        fill=\"#e69642\"\n        d=\"M263.442 31.701l21.77-21.166c5.797-5.636 15.511-3.033 17.713 4.746l8.27 29.215c1.574 5.56 7.287 8.859 12.889 7.442l29.436-7.445c7.838-1.982 14.949 5.129 12.967 12.967l-7.445 29.436a10.675 10.675 0 007.442 12.889l29.215 8.27c7.779 2.202 10.382 11.917 4.746 17.713l-21.166 21.77c-4.028 4.143-4.028 10.74 0 14.883l21.166 21.77c5.636 5.797 3.033 15.511-4.746 17.713l-29.215 8.27c-5.56 1.574-8.859 7.287-7.442 12.889l7.445 29.436c1.983 7.838-5.129 14.949-12.967 12.967l-29.436-7.445a10.675 10.675 0 00-12.889 7.442l-8.27 29.215c-2.202 7.779-11.917 10.382-17.713 4.746l-21.77-21.166c-4.143-4.028-10.74-4.028-14.883 0l-21.77 21.166c-5.797 5.636-15.511 3.033-17.713-4.746l-8.27-29.215c-1.574-5.56-7.287-8.859-12.889-7.442l-29.436 7.445c-7.838 1.982-14.949-5.129-12.967-12.967l7.445-29.436a10.675 10.675 0 00-7.442-12.889l-29.215-8.27c-7.779-2.202-10.382-11.917-4.746-17.713l21.166-21.77c4.028-4.143 4.028-10.74 0-14.883l-21.166-21.77c-5.636-5.797-3.033-15.511 4.746-17.713l29.215-8.27c5.56-1.574 8.859-7.287 7.442-12.889l-7.445-29.436c-1.982-7.838 5.129-14.949 12.967-12.967l29.436 7.445a10.675 10.675 0 0012.889-7.442l8.27-29.215c2.202-7.779 11.917-10.382 17.713-4.746l21.77 21.166c4.143 4.029 10.739 4.029 14.883 0z\"\n      ></path>\n      <path\n        fill=\"#e38523\"\n        d=\"M379.279 162.422c-4.028-4.143-4.028-10.74 0-14.883l21.166-21.77c5.636-5.797 3.033-15.511-4.746-17.713l-29.215-8.27c-5.56-1.574-8.859-7.287-7.442-12.889l7.445-29.436c1.983-7.838-5.129-14.949-12.967-12.967l-24.611 6.225c.544 5.641.831 11.357.831 17.141 0 97.488-79.03 176.518-176.518 176.518-1.885 0-3.76-.04-5.631-.098l-2.08 8.223c-1.983 7.838 5.129 14.949 12.967 12.967l29.436-7.445c5.602-1.417 11.315 1.881 12.889 7.441l8.27 29.215c2.202 7.779 11.917 10.382 17.713 4.746l21.77-21.166c4.143-4.028 10.74-4.028 14.883 0l21.77 21.166c5.797 5.636 15.511 3.033 17.713-4.746l8.27-29.215c1.574-5.56 7.287-8.859 12.889-7.441l29.436 7.445c7.838 1.982 14.949-5.129 12.967-12.967l-7.445-29.436a10.675 10.675 0 017.442-12.889l29.215-8.27c7.779-2.202 10.382-11.917 4.746-17.713z\"\n      ></path>\n      <path\n        fill=\"#f8e883\"\n        d=\"M255.691 178.223c-8.927 0-16.162-7.236-16.162-16.162V83.269c0-8.927 7.236-16.162 16.162-16.162s16.162 7.236 16.162 16.162v78.791c.001 8.927-7.235 16.163-16.162 16.163z\"\n      ></path>\n      <circle cx=\"256\" cy=\"226.71\" r=\"16.162\" fill=\"#f8e883\"></circle>\n      <path d=\"M422.674 254.564h-7.657v-39.98c0-5.531-2.57-10.468-6.573-13.697a18.416 18.416 0 001.903-4.551c1.673-6.244-.019-12.739-4.525-17.374l-21.165-21.768a3.161 3.161 0 01-.001-4.428l21.166-21.77c4.507-4.635 6.198-11.13 4.525-17.373-1.673-6.245-6.385-11.024-12.605-12.785l-29.215-8.27a3.158 3.158 0 01-2.213-3.834l7.445-29.436c1.585-6.267-.198-12.737-4.769-17.308-4.57-4.57-11.039-6.357-17.307-4.768l-29.437 7.445a3.156 3.156 0 01-3.833-2.214l-8.27-29.215c-1.761-6.22-6.54-10.931-12.784-12.605-6.244-1.672-12.739.018-17.375 4.525l-21.77 21.167a3.158 3.158 0 01-4.426 0L232.016 5.157c-4.635-4.505-11.13-6.198-17.374-4.524s-11.023 6.386-12.784 12.605l-8.27 29.216a3.166 3.166 0 01-3.833 2.214l-29.437-7.447c-6.264-1.583-12.737.198-17.307 4.769-4.571 4.571-6.354 11.042-4.769 17.308l7.445 29.436a3.158 3.158 0 01-2.213 3.834l-29.215 8.27c-6.221 1.761-10.932 6.54-12.605 12.785-1.673 6.243.019 12.738 4.524 17.373l21.166 21.769a3.161 3.161 0 01.001 4.428l-21.166 21.769c-4.507 4.635-6.198 11.13-4.525 17.374a18.4 18.4 0 001.903 4.551c-4.003 3.229-6.573 8.166-6.573 13.697v39.98h-7.657c-29.2 0-52.956 23.756-52.956 52.957 0 29.2 23.756 52.956 52.956 52.956h7.91c.827 15.085 3.74 29.88 8.706 44.096a7.5 7.5 0 007.08 5.029c.82 0 1.655-.136 2.473-.422a7.499 7.499 0 004.608-9.553c-5.389-15.427-8.12-31.612-8.12-48.107V214.585c0-1.434 1.166-2.6 2.6-2.6h9.79l19.101 5.407a3.158 3.158 0 012.213 3.834l-7.445 29.436c-1.585 6.267.198 12.738 4.769 17.309 4.571 4.57 11.039 6.352 17.307 4.767l29.437-7.445a3.157 3.157 0 013.833 2.214l8.27 29.214c1.761 6.22 6.54 10.932 12.785 12.605 6.24 1.673 12.739-.017 17.374-4.524l21.77-21.167a3.158 3.158 0 014.426 0l21.771 21.168c3.458 3.361 7.95 5.156 12.602 5.156 1.584 0 3.185-.208 4.77-.633 6.245-1.673 11.024-6.386 12.785-12.605l8.27-29.215a3.157 3.157 0 013.833-2.213l29.436 7.444c6.267 1.589 12.737-.196 17.308-4.767s6.354-11.042 4.769-17.309l-7.445-29.436a3.158 3.158 0 012.213-3.834l19.101-5.407h9.79c1.434 0 2.6 1.166 2.6 2.6v138.398c0 14.965-2.282 29.7-6.784 43.797a7.5 7.5 0 1014.288 4.562c4.219-13.212 6.667-26.926 7.314-40.865h7.838c29.2 0 52.956-23.756 52.956-52.956.001-29.199-23.755-52.956-52.955-52.956zM89.326 345.478c-20.929 0-37.956-17.027-37.956-37.956s17.027-37.957 37.956-37.957h7.652v34.809a22.413 22.413 0 00-13.235-4.351h-5.529c-4.143 0-7.5 3.357-7.5 7.5s3.357 7.5 7.5 7.5h5.529a7.39 7.39 0 015.975 3.056l7.261 10.053v17.348h-7.653zm275.115-142.519c-9.534 2.699-15.099 12.339-12.67 21.945l7.445 29.436c.386 1.521-.356 2.548-.833 3.024-.477.477-1.501 1.22-3.023.832l-29.437-7.445c-9.602-2.424-19.245 3.137-21.944 12.671l-8.27 29.214c-.427 1.511-1.583 2.028-2.233 2.203-.651.174-1.911.302-3.035-.79l-21.77-21.167c-3.553-3.455-8.11-5.182-12.67-5.182-4.559 0-9.118 1.728-12.67 5.182l-21.77 21.166c-1.124 1.093-2.386.964-3.035.791-.65-.175-1.807-.692-2.233-2.203l-8.27-29.213c-2.698-9.536-12.344-15.099-21.944-12.672l-29.438 7.446c-1.519.382-2.546-.356-3.022-.833-.477-.477-1.219-1.503-.833-3.024l7.445-29.436c2.43-9.606-3.136-19.246-12.67-21.945l-29.215-8.27c-1.511-.427-2.028-1.583-2.202-2.233-.175-.65-.304-1.91.79-3.035l21.167-21.77c6.906-7.104 6.906-18.234-.001-25.339l-21.166-21.77c-1.094-1.125-.965-2.384-.791-3.034.175-.651.692-1.807 2.203-2.233l29.215-8.27c9.534-2.699 15.099-12.339 12.67-21.945l-7.445-29.436c-.386-1.521.356-2.548.833-3.024.476-.476 1.501-1.216 3.023-.834l29.437 7.447c9.602 2.424 19.245-3.136 21.944-12.671l8.27-29.215c.427-1.51 1.582-2.027 2.232-2.202.653-.173 1.91-.305 3.036.79l21.77 21.167c7.103 6.908 18.236 6.908 25.339 0l21.77-21.166c1.126-1.097 2.384-.965 3.036-.791.65.175 1.806.692 2.232 2.202l8.27 29.214c2.698 9.535 12.342 15.101 21.944 12.671l29.437-7.445c1.518-.388 2.547.357 3.023.833.477.477 1.219 1.503.833 3.024L351.77 85.06c-2.43 9.606 3.136 19.246 12.67 21.945l29.215 8.27c1.511.427 2.028 1.582 2.203 2.233.174.65.303 1.909-.791 3.034L373.9 142.313c-6.906 7.104-6.906 18.234.001 25.339l21.166 21.769c1.094 1.125.965 2.385.79 3.035-.174.65-.691 1.807-2.202 2.233zm58.233 142.519h-7.652V328.13l7.262-10.054a7.386 7.386 0 015.974-3.055h5.529c4.143 0 7.5-3.357 7.5-7.5s-3.357-7.5-7.5-7.5h-5.529a22.413 22.413 0 00-13.235 4.351v-34.809h7.652c20.929 0 37.956 17.028 37.956 37.957 0 20.931-17.027 37.958-37.957 37.958zm-32.862 79.036a7.5 7.5 0 00-10.292 2.563c-12.592 20.942-30.428 38.472-51.58 50.695C306.17 490.352 281.296 497 256.003 497h-.079c-49.319-.027-94.684-25.219-121.353-67.388a7.5 7.5 0 10-12.677 8.017c29.432 46.537 79.534 74.34 134.022 74.37h.087c27.923 0 55.395-7.345 79.442-21.241 23.346-13.491 43.033-32.838 56.931-55.953a7.5 7.5 0 00-2.564-10.291z\"></path>\n      <path d=\"M197.401 445.782c-1.259 5.267-.064 10.716 3.277 14.949a17.249 17.249 0 0013.618 6.599h83.406a17.249 17.249 0 0013.618-6.599c3.342-4.233 4.536-9.682 3.277-14.948-6.5-27.202-30.596-46.199-58.599-46.199-28.001 0-52.097 18.998-58.597 46.198zm102.607 3.489a2.492 2.492 0 01-.463 2.169c-.32.407-.9.892-1.843.892h-83.406a2.272 2.272 0 01-1.843-.892 2.493 2.493 0 01-.463-2.17c4.88-20.423 22.976-34.686 44.008-34.686s39.13 14.263 44.01 34.687zm45.579-96.293c0-16.03-13.042-29.072-29.073-29.072-16.03 0-29.072 13.042-29.072 29.072s13.042 29.072 29.072 29.072c16.032 0 29.073-13.042 29.073-29.072zm-43.144 0c0-7.76 6.312-14.072 14.072-14.072s14.073 6.312 14.073 14.072-6.313 14.072-14.073 14.072-14.072-6.312-14.072-14.072zm-106.958-29.072c-16.031 0-29.073 13.042-29.073 29.072s13.042 29.072 29.073 29.072c16.03 0 29.072-13.042 29.072-29.072s-13.042-29.072-29.072-29.072zm0 43.144c-7.76 0-14.073-6.312-14.073-14.072s6.313-14.072 14.073-14.072 14.072 6.312 14.072 14.072-6.312 14.072-14.072 14.072zm60.205-181.325c13.046 0 23.659-10.618 23.659-23.67v-22.109c0-4.143-3.357-7.5-7.5-7.5s-7.5 3.357-7.5 7.5v22.109c0 4.78-3.885 8.67-8.659 8.67-4.775 0-8.66-3.89-8.66-8.67V83.266c0-4.775 3.885-8.66 8.66-8.66 4.774 0 8.659 3.885 8.659 8.66v21.68c0 4.143 3.357 7.5 7.5 7.5s7.5-3.357 7.5-7.5v-21.68c0-13.046-10.613-23.66-23.659-23.66s-23.66 10.614-23.66 23.66v78.789c.001 13.052 10.615 23.67 23.66 23.67zm.31 17.323c-13.048 0-23.663 10.615-23.663 23.662 0 13.048 10.615 23.663 23.663 23.663s23.663-10.615 23.663-23.663c0-13.047-10.615-23.662-23.663-23.662zm0 32.324c-4.776 0-8.663-3.887-8.663-8.663s3.887-8.662 8.663-8.662 8.663 3.886 8.663 8.662c0 4.777-3.887 8.663-8.663 8.663z\"></path>\n    </svg>\n  );\n}\n","export function PictureIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path fill=\"#fccd7f\" d=\"M57.142 7.501h397.717v497H57.142z\"></path>\n      <path fill=\"#f0b95f\" d=\"M435.756 7.501h19.103v497h-19.103z\"></path>\n      <path fill=\"#8ce1a4\" d=\"M422.859 39.501v433H89.142v-433z\"></path>\n      <path fill=\"#78c2a4\" d=\"M399.756 39.501h23.103v433h-23.103z\"></path>\n      <path\n        fill=\"#7a6d79\"\n        d=\"M365.53 343.679H163.056V150.643c0-38.777 31.435-70.212 70.212-70.212h62.049c38.777 0 70.212 31.435 70.212 70.212v193.036z\"\n      ></path>\n      <path\n        fill=\"#685e68\"\n        d=\"M295.318 80.431h-23.103c38.777 0 70.212 31.435 70.212 70.212v193.036h23.103V150.643c0-38.777-31.435-70.212-70.212-70.212z\"\n      ></path>\n      <path\n        fill=\"#f6a96c\"\n        d=\"M315.644 282.905h-75.73c-25.941 0-46.971-21.03-46.971-46.971v-89.285a8.347 8.347 0 018.347-8.347h53.004s10.527 47.113 61.351 47.113v97.49\"\n      ></path>\n      <path\n        fill=\"#ea9b58\"\n        d=\"M254.293 138.302H231.19s10.527 47.113 61.351 47.113v97.489h23.103v-97.489c-50.823 0-61.351-47.113-61.351-47.113z\"\n      ></path>\n      <path fill=\"#7a6d79\" d=\"M192.952 345.671h122.7v126.83h-122.7z\"></path>\n      <path fill=\"#685e68\" d=\"M315.652 345.671v126.83h-42.76v-109.43c0-6.56 2.24-12.6 6-17.4z\"></path>\n      <path\n        fill=\"#f6a96c\"\n        d=\"M315.652 282.901v65.85c0 25.45-18.49 46.57-42.76 50.68-2.81.47-5.7.72-8.64.72h-19.91c-28.38 0-51.39-23.01-51.39-51.4v-13.9l25.6-6.84c14.41-3.85 24.44-16.91 24.44-31.83v-13.28z\"\n      ></path>\n      <path\n        fill=\"#ea9b58\"\n        d=\"M315.652 334.851v13.9c0 25.45-18.49 46.57-42.76 50.68v-36.36c0-15.59 12.63-28.22 28.22-28.22z\"\n      ></path>\n      <path\n        fill=\"#ea9b58\"\n        d=\"M292.544 282.901v65.85c0 27.854-22.163 50.514-49.803 51.36.532.016 1.061.04 1.597.04h19.91c28.38 0 51.4-23.01 51.4-51.4v-65.85z\"\n      ></path>\n      <path\n        fill=\"#c4a098\"\n        d=\"M192.943 472.501H89.142l35.302-110.855c5.082-15.958 19.905-26.794 36.652-26.794h31.846v137.649z\"\n      ></path>\n      <path fill=\"#a3847e\" d=\"M169.84 334.852h23.103v137.649H169.84z\"></path>\n      <path\n        fill=\"#c4a098\"\n        d=\"M422.859 472.501H295.996V363.07c0-15.584 12.634-28.218 28.218-28.218h46.072c13.283 0 24.767 9.263 27.579 22.245z\"\n      ></path>\n      <path\n        fill=\"#a3847e\"\n        d=\"M397.865 357.097c-2.812-12.982-14.296-22.245-27.579-22.245h-23.103c13.283 0 24.767 9.263 27.579 22.245l24.994 115.404h23.103z\"\n      ></path>\n      <path d=\"M461.096 508.665c.686-1.178 1.244-2.231 1.263-4.167V89.017a7.5 7.5 0 00-15 0v397.377l-17-17V42.607l17-17v27.282a7.5 7.5 0 0015 0V7.503c.063-3.554-3.005-7.563-7.5-7.502H57.142c-3.589-.037-7.537 2.973-7.5 7.502v496.995c-.046 3.557 2.976 7.557 7.5 7.503h397.717c2.337-.207 4.354-.665 6.237-3.336zm-157.6-43.664V363.07c0-11.424 9.294-20.718 20.718-20.718h46.072c9.683 0 18.199 6.869 20.249 16.333l23.026 106.316zm-103.044 0v-77.033c10.792 12.069 26.466 19.683 43.89 19.683h19.91c8.507 0 16.704-1.778 24.245-5.197v62.547zm88.044-101.931v22.283c-7.184 4.783-15.495 7.297-24.245 7.297h-19.91c-28.205.077-46.745-25.282-43.89-52.041l20.036-5.354c19.61-4.92 31.878-24.792 30.004-44.852h57.66v40.778c-11.646 5.892-19.655 17.969-19.655 31.889zm19.648-87.669h-65.152c-22.343 1.627-42.642-16.56-42.549-39.467v-89.285c0-.467.38-.847.847-.847h47.475c8.907 22.621 25.022 42.863 59.38 46.786v82.813zM201.289 130.802c-8.738 0-15.847 7.109-15.847 15.847v89.285c0 28.545 22.076 52.016 50.049 54.276 1.611 12.915-5.305 27.013-18.876 30.555l-24.652 6.587h-21.408V150.643c-.186-35.586 30.655-64.766 66.557-62.712l-28.76 42.872h-7.063zm-40.192 211.55h24.346v122.649H99.402l32.189-101.079c4.108-12.902 15.966-21.57 29.506-21.57zM419.752 32.001H92.248l-17-17h361.504zM81.642 42.607v219.597a7.5 7.5 0 0015 0V47.001h318.717V402.44l-10.164-46.93c-3.534-16.316-18.215-28.158-34.909-28.158-1.883.028-45.16-.053-47.134.027l-.008-134.464c4.288.75 10.079-1.726 10.396-7.5a7.5 7.5 0 00-7.5-7.5c-50.97 3.96-62.148-33.357-64.428-41.249a7.5 7.5 0 00-7.319-5.864h-27.877l28.76-42.872h40.141c34.58 0 62.712 28.132 62.712 62.712v148.061a7.5 7.5 0 0015 0v-148.06c0-42.851-34.862-77.712-77.712-77.712h-62.049c-42.851 0-77.712 34.861-77.712 77.712v177.039c-17.736 2.121-32.728 14.32-38.259 31.688l-20.656 64.863V297.406a7.5 7.5 0 00-15 0v171.988l-17 17V25.607zm10.606 437.394h327.504l17 17H75.248z\"></path>\n      <path d=\"M246.293 187.543h-12.396a7.5 7.5 0 00-7.5 7.5v37.686a7.5 7.5 0 0015 0v-30.186h4.896a7.5 7.5 0 000-15z\"></path>\n    </svg>\n  );\n}\n","import { sampleSize } from 'lodash';\nimport { getRandomItem } from 'utils/helpers';\n\nconst mockedDrawings = [\n  [\n    88, 263, 88, 262, 89, 262, 89, 262, 90, 261, 92, 258, 95, 253, 97, 251, 100, 249, 108, 238, 111, 235, 121,\n    224, 124, 221, 136, 209, 140, 204, 143, 201, 158, 186, 162, 182, 178, 164, 183, 159, 188, 154, 205, 133,\n    209, 128, 212, 124, 224, 110, 226, 107, 228, 105, 235, 98, 236, 97, 238, 95, 239, 94, 240, 93, 241, 92,\n    242, 91, 244, 90, 244, 89, 246, 88, 249, 87, 249, 86, 249, 86, 250, 86, 250, 86, 251, 86, 252, 86, 254,\n    87, 256, 87, 258, 88, 260, 88, 263, 90, 264, 90, 270, 93, 276, 98, 280, 100, 287, 105, 302, 117, 310, 123,\n    318, 129, 337, 143, 344, 150, 353, 155, 359, 161, 361, 162, 365, 166, 372, 170, 376, 172, 377, 173, 385,\n    176, 390, 179, 391, 180, 395, 182, 396, 183, 398, 184, 399, 184, 400, 185, 400, 186, 401, 186, 401, 186,\n    401, 186, 401, 186, 401, 187, 401, 187, 401, 188, 402, 188, 402, 189, 403, 190, 403, 191, 403, 192, 404,\n    192, 404, 193, 404, 193, 404, 194, 405, 194, 405, 195, 405, 196, 405, 196, 405, 196, 406, 198, 406, 199,\n    407, 200, 407, 200, 407, 201, 408, 201, 409, 202, 409, 204, 410, 205, 411, 207, 412, 209, 412, 209, 415,\n    212, 416, 214, 417, 215, 418, 216, 419, 217, 419, 217, 420, 218, 421, 218, 421, 219, 421, 219, 421, 219,\n    422, 220, 422, 221, 422, 221, 423, 222, 423, 222, 423, 223, 423, 223, 424, 224, 424, 225, 424, 227, 424,\n    227, 424, 229, 424, 230, 424, 231, 425, 233, 425, 234, 425, 235, 425, 235, 425, 238, 425, 238, 425, 239,\n    424, 242, 423, 243, 423, 244, 423, 245, 421, 247, 417, 253, 410, 264, 408, 266, 403, 271, 396, 278, 389,\n    283, 380, 291, 369, 301, 358, 311, 355, 314, 344, 324, 329, 337, 314, 350, 299, 363, 287, 375, 285, 377,\n    276, 385, 274, 387, 268, 392, 266, 393, 257, 401, 256, 402, 253, 404, 252, 405, 251, 406, 249, 408, 245,\n    410, 245, 411, 245, 411, 243, 412, 243, 413, 242, 413, 242, 413, 242, 414, 241, 414, 241, 414, 241, 414,\n    240, 415, 239, 415, 239, 415, 239, 415, 238, 416, 238, 416, 237, 416, 237, 416, 235, 415, 234, 414, 230,\n    412, 222, 407, 215, 404, 204, 398, 195, 393, 190, 389, 183, 384, 179, 378, 173, 373, 169, 366, 167, 362,\n    162, 353, 161, 352, 157, 344, 154, 340, 150, 334, 148, 330, 145, 328, 142, 325, 141, 323, 139, 321, 137,\n    319, 136, 317, 134, 315, 134, 315, 132, 312, 132, 312, 132, 311, 131, 310, 130, 308, 129, 308, 127, 306,\n    127, 305, 126, 305, 124, 304, 123, 303, 123, 302, 121, 301, 121, 301, 119, 299, 118, 298, 118, 298, 115,\n    295, 115, 294, 110, 289, 107, 284, 106, 283, 104, 281, 101, 278, 100, 277, 100, 277, 98, 276, 98, 275, 97,\n    274, 96, 274, 96, 274, 96, 274, 95, 273, 94, 272, 94, 272, 94, 272, 93, 272, 93, 272, 93, 272, 93.1,\n    272.1,\n  ],\n  [\n    100, 47, 100, 48, 100, 48, 99, 50, 99, 50, 98, 51, 97, 52, 97, 54, 96, 55, 95, 56, 94, 58, 93, 59, 93, 60,\n    92, 61, 92, 62, 91, 63, 91, 64, 91, 65, 91, 66, 91, 67, 91, 69, 91, 70, 91, 72, 91, 73, 92, 76, 93, 81,\n    95, 85, 97, 89, 100, 93, 101, 95, 105, 100, 105, 100, 108, 103, 109, 104, 111, 106, 114, 108, 115, 109,\n    118, 110, 118, 111, 120, 112, 122, 113, 123, 114, 126, 115, 129, 116, 130, 117, 133, 117, 134, 118, 139,\n    120, 140, 121, 141, 121, 143, 122, 150, 125, 156, 128, 160, 131, 164, 133, 165, 134, 169, 136, 172, 140,\n    176, 142, 178, 143, 181, 146, 182, 147, 185, 149, 186, 149, 189, 152, 190, 153, 193, 155, 198, 159, 201,\n    163, 202, 164, 204, 166, 206, 167, 206, 168, 206, 170, 207, 170, 208, 173, 208, 174, 209, 181, 211, 185,\n    212, 191, 215, 210, 216, 220, 218, 229, 218, 231, 220, 240, 220, 245, 220, 253, 220, 258, 220, 262, 220,\n    267, 220, 268, 219, 269, 218, 273, 218, 276, 217, 279, 215, 282, 215, 283, 214, 285, 213, 286, 213, 287,\n    211, 289, 209, 291, 209, 292, 208, 294, 206, 295, 205, 297, 205, 297, 204, 299, 203, 299, 202, 300, 202,\n    301, 202.1, 301.1,\n  ],\n  [\n    399, 58, 398, 58, 398, 58, 397, 59, 397, 59, 397, 59, 396, 59, 396, 59, 394, 61, 394, 61, 391, 64, 389,\n    66, 386, 71, 385, 72, 384, 75, 380, 83, 380, 86, 379, 94, 378, 95, 378, 103, 378, 104, 378, 105, 378, 106,\n    378, 107, 379, 108, 379, 108, 380, 108, 381, 109, 381, 110, 382, 111, 387, 114, 388, 115, 389, 116, 390,\n    118, 396, 123, 398, 125, 400, 126, 402, 128, 403, 128, 407, 129, 409, 130, 411, 130, 412, 130, 413, 130,\n    414, 130, 415, 130, 415, 129, 415, 129, 416, 129, 416, 129, 416, 128, 417, 127, 421, 123, 424, 118, 424,\n    118, 427, 115, 427, 113, 428, 112, 430, 109, 430, 108, 431, 106, 434, 101, 434, 99, 434, 97, 435, 96, 435,\n    95, 435, 93, 435, 92, 435, 92, 435, 91, 435, 90, 435, 87, 435, 85, 435, 82, 435, 82, 434, 80, 433, 78,\n    432, 77, 430, 73, 430, 72, 429, 72, 428, 71, 427, 70, 426, 69, 425, 68, 424, 67, 423, 67, 422, 66, 418,\n    63, 416, 63, 414, 61, 412, 61, 411, 61, 409, 61, 409, 61, 407, 61, 406, 61, 406, 61, 405, 61, 405, 61,\n    404, 61, 404, 61, 403, 61, 403, 61, 403, 61, 403, 61, 401, 61, 400, 62, 398, 63, 398, 63, 396, 63, 395,\n    63, 395, 63, 395, 63, 395.1, 63.1,\n  ],\n  [\n    381, 433, 381, 432, 381, 431, 380, 429, 380, 427, 379, 425, 379, 422, 379, 421, 378, 418, 377, 408, 376,\n    404, 376, 399, 375, 394, 375, 385, 374, 378, 374, 369, 373, 363, 372, 351, 372, 340, 372, 331, 371, 319,\n    371, 312, 370, 308, 369, 302, 368, 297, 368, 296, 368, 294, 368, 292, 367, 291, 367, 290, 367, 289, 366,\n    288, 366, 287, 366, 286, 366, 285, 364, 282, 364, 280, 363, 277, 362, 276, 362, 275, 362, 274, 362, 274,\n    361, 272, 361, 271, 361, 270, 360, 269, 360, 268, 360, 268, 359, 267, 359, 265, 359, 265, 359, 265, 359,\n    264, 359, 264, 359, 264, 359, 263, 359, 263, 359, 262, 359, 262, 358, 262, 358, 261, 358, 261, 358, 261,\n    358, 260, 358, 260, 358, 260, 357, 260, 357, 259, 357, 259, 357, 259, 357, 259, 357, 259, 357, 259, 357,\n    261, 356, 262, 356, 263, 356, 264, 356, 269, 356, 271, 354, 283, 352, 295, 352, 300, 351, 304, 348, 318,\n    342, 352, 340, 366, 337, 383, 333, 402, 332, 407, 329, 421, 326, 435, 324, 442, 323, 445, 322, 452, 322,\n    454, 322, 455, 322, 455, 321, 455, 321, 455, 321, 456, 321, 456, 321, 456, 321, 456, 321, 457, 321, 458,\n    321, 459, 319, 461, 317, 466, 317, 467, 316, 468, 316, 470, 315, 472, 314, 473, 314, 473, 313, 473, 313,\n    473, 313, 472, 312, 470, 310, 464, 304, 453, 302, 449, 297, 438, 295, 435, 294, 431, 292, 428, 288, 418,\n    287, 416, 283, 406, 283, 404, 282, 399, 281, 397, 280, 394, 277, 380, 276, 377, 276, 373, 273, 362, 273,\n    357, 272, 351, 271, 347, 271, 342, 271, 331, 271, 327, 271, 324, 271, 315, 271, 312, 271, 309, 271, 307,\n    271, 305, 271, 303, 272, 301, 272, 299, 272, 298, 272, 298, 272, 297, 272, 296, 272, 295, 272, 292, 272,\n    290, 272, 289, 272, 288, 272, 287, 273, 286, 273, 285, 273, 284, 273, 283, 273, 281, 273, 281, 273, 281,\n    273, 280, 273, 280, 273, 280, 273.1, 280.1,\n  ],\n  [\n    62, 368, 61, 369, 61, 369, 60, 370, 60, 371, 60, 372, 58, 374, 58, 376, 56, 379, 55, 381, 55, 383, 54,\n    384, 53, 390, 53, 392, 53, 393, 53, 395, 53, 397, 53, 400, 54, 401, 54, 402, 55, 402, 55, 402, 55, 402,\n    57, 403, 57, 403, 59, 404, 63, 405, 64, 405, 65, 405, 66, 406, 71, 407, 73, 407, 75, 407, 80, 407, 82,\n    407, 85, 407, 87, 407, 92, 407, 94, 407, 100, 407, 101, 407, 102, 407, 103, 406, 104, 406, 105, 405, 108,\n    403, 109, 402, 110, 401, 111, 400, 114, 398, 115, 396, 116, 395, 121, 388, 122, 386, 123, 384, 124, 381,\n    125, 379, 126, 378, 126, 376, 126, 374, 126, 373, 126, 369, 126, 368, 126, 368, 126, 367, 126, 366, 126,\n    366, 126, 365, 125, 364, 125, 363, 124, 363, 123, 363, 123, 363, 122, 363, 121, 363, 120, 363, 118, 363,\n    116, 363, 112, 363, 108, 364, 105, 364, 102, 365, 101, 365, 100, 365, 100, 365, 99, 365, 99, 365, 99, 365,\n    98, 365, 98, 365, 98, 364, 98, 364, 97, 364, 97, 364, 97, 363, 97, 363, 96, 361, 96, 361, 96, 360, 96,\n    355, 95, 353, 95, 350, 95, 349, 95, 348, 95, 343, 95, 339, 95, 334, 95, 334, 95, 330, 95, 327, 95, 325,\n    96, 323, 97, 321, 97, 321, 97, 320, 97, 319, 98, 318, 98, 317, 99, 317, 99, 316, 100, 315, 101, 315, 101,\n    314, 101, 314, 102, 313, 102, 311, 102, 311, 103, 310, 103, 310, 103, 309, 103, 308, 102, 308, 102, 308,\n    101, 307, 101, 307, 101, 307, 100, 306, 99, 305, 95, 302, 94, 301, 93, 301, 92, 300, 90, 299, 88, 297, 88,\n    297, 88, 297, 87, 296, 87, 295, 86, 294, 86, 294, 86, 293, 85, 291, 85, 290, 85, 288, 84, 286, 84, 285,\n    83, 279, 83, 277, 82, 276, 82, 273, 82, 272, 82, 270, 82, 268, 82, 266, 82, 263, 82, 259, 82, 256, 82,\n    252, 81, 243, 81, 240, 81, 232, 81, 231, 81, 230, 81, 228, 81, 223, 81, 222, 81, 220, 82, 220, 82, 216,\n    82, 214, 83, 212, 84, 211, 84, 210, 85, 208, 86, 206, 86, 205, 87, 203, 89, 201, 90, 200, 92, 197, 93,\n    196, 94, 195, 97, 192, 98, 191, 99, 190, 99, 190, 103, 188, 104, 186, 108, 184, 110, 183, 111, 182, 112,\n    181, 115, 180, 117, 179, 119, 177, 121, 177, 122, 176, 122, 176, 122, 176, 124, 176, 127, 175, 128, 175,\n    134, 174, 135, 174, 141, 174, 144, 174, 151, 174, 154, 174, 168, 174, 185, 175, 201, 178, 222, 180, 242,\n    185, 261, 189, 287, 192, 314, 194, 336, 194, 342, 194, 362, 194, 381, 194, 401, 194, 406, 194, 432, 194,\n    435, 194, 440, 193, 442, 193, 443, 193, 443, 193, 443.1, 193.1,\n  ],\n  [\n    348, 50, 348, 50, 348, 51, 347, 52, 347, 55, 345, 57, 344, 60, 341, 64, 340, 70, 336, 77, 321, 113, 317,\n    125, 307, 145, 302, 157, 286, 197, 282, 206, 267, 238, 261, 255, 258, 262, 249, 285, 246, 290, 237, 311,\n    236, 315, 233, 321, 225, 336, 222, 342, 215, 357, 212, 362, 207, 374, 204, 378, 203, 382, 201, 385, 195,\n    395, 194, 398, 191, 405, 189, 407, 188, 409, 187, 413, 185, 416, 184, 417, 184, 418, 181, 422, 181, 423,\n    180, 424, 180, 425, 180, 426, 179, 428, 178, 428, 178, 429, 178, 429, 178, 429, 178, 429, 178, 430, 177,\n    430, 177, 430, 177, 431, 176, 431, 176, 432, 176, 432, 176, 433, 175, 433, 175, 433, 175, 433, 175, 434,\n    174, 434, 174, 435, 174, 435, 173, 436, 172, 436, 172, 437, 171, 438, 170, 438, 170, 439, 170, 439, 169,\n    440, 168, 440, 168, 441, 167, 441, 167, 442, 166, 443, 165, 443, 165, 444, 165, 444, 165, 444, 165, 445,\n    164, 445, 164, 445, 164, 445, 164, 446, 164, 446, 163, 446, 163.1, 446.1,\n  ],\n  [\n    438, 422, 439, 422, 439, 422, 439, 422, 439, 422, 440, 422, 440, 422, 441, 422, 443, 422, 444, 422, 445,\n    422, 446, 422, 446, 422, 447, 421, 448, 420, 451, 416, 452, 415, 453, 412, 454, 410, 456, 408, 457, 405,\n    458, 402, 459, 396, 460, 395, 460, 393, 460, 393, 459, 391, 459, 391, 457, 388, 456, 387, 456, 387, 456,\n    386, 455, 386, 454, 385, 453, 385, 452, 385, 448, 384, 448, 384, 445, 384, 443, 384, 440, 384, 439, 384,\n    436, 385, 436, 385, 435, 385, 434, 385, 432, 387, 430, 388, 429, 389, 428, 389, 426, 391, 425, 392, 425,\n    392, 424, 392, 424, 393, 424, 393, 424, 393, 424, 394, 424, 394, 424, 395, 424, 396, 424, 398, 424, 399,\n    424, 400, 424, 401, 424, 404, 424, 408, 424, 410, 426, 414, 427, 417, 428, 419, 429, 421, 429, 422, 430,\n    423, 430, 423, 430, 423, 431, 424, 431, 424, 431, 424, 432, 425, 432, 425, 432, 425, 432, 426, 433, 427,\n    434, 427, 434, 427, 434, 428, 434.1, 428.1,\n  ],\n  [\n    108, 157, 107, 157, 107, 157, 106, 157, 106, 157, 106, 157, 105, 157, 104, 157, 103, 157, 99, 156, 97,\n    155, 95, 155, 86, 152, 77, 150, 63, 148, 43, 147, 36, 146, 24, 146, 10, 146, -0.9, 146.1,\n  ],\n  [\n    2, 145, 2, 145, 6, 145, 10, 145, 17, 145, 18, 145, 20, 144, 21, 144, 21, 143, 21, 143, 22, 143, 22, 142,\n    23, 142, 23, 142, 25, 141, 26, 140, 27, 139, 28, 139, 29, 139, 30, 138, 31, 137, 35, 134, 38, 132, 39,\n    131, 48, 127, 51, 126, 53, 125, 60, 121, 63, 120, 65, 120, 65, 119, 65, 120, 65, 120, 65, 121, 65, 123,\n    64, 127, 63, 130, 62, 134, 60, 142, 60, 145, 58, 148, 57, 153, 56, 156, 55, 158, 55, 161, 54, 162, 54,\n    163, 54, 164, 54, 165, 53, 166, 53, 168, 53, 170, 53, 171, 53, 172, 52, 172, 52, 172, 52, 173, 52, 173,\n    52, 174, 52, 174, 52, 174, 52, 174, 52, 175, 51, 175, 51, 174, 51, 174, 50, 173, 49, 171, 48, 170, 46,\n    166, 44, 162, 38, 151, 32, 140, 31, 137, 29, 132, 26, 126, 25, 123, 24, 122, 24, 122, 24, 121, 23, 120,\n    23, 120, 24, 120, 24, 120, 26, 121, 27, 121, 30, 123, 33, 125, 35, 126, 42, 131, 45, 134, 49, 136, 50,\n    136, 52, 138, 56, 141, 59, 143, 62, 146, 65, 149, 68, 152, 71, 155, 74, 158, 76, 159, 77, 160, 80, 162,\n    81, 162, 82, 163, 83, 163, 83, 163, 84, 163, 84.1, 163.1,\n  ],\n  [\n    136, 34, 139, 34, 140, 35, 142, 35, 143, 35, 146, 36, 148, 36, 151, 37, 152, 37, 153, 37, 155, 38, 157,\n    38, 159, 39, 162, 39, 163, 40, 166, 40, 168, 40, 170, 40, 179, 42, 183, 43, 184, 43, 185, 43, 187, 44,\n    188, 44, 190, 46, 193, 47, 197, 49, 198, 50, 205, 55, 206, 56, 213, 62, 218, 67, 219, 68, 224, 73, 226,\n    75, 227, 77, 236, 86, 239, 89, 246, 98, 250, 101, 259, 113, 263, 116, 265, 118, 268, 121, 276, 132, 286,\n    143, 289, 147, 291, 149, 293, 152, 294, 154, 304, 165, 306, 167, 307, 169, 316, 177, 318, 179, 319, 180,\n    321, 183, 322, 183, 327, 190, 328, 191, 330, 194, 331, 195, 335, 199, 336, 200, 337, 201, 338, 203, 339,\n    204, 340, 204, 341, 205, 346, 212, 350, 216, 351, 218, 353, 220, 358, 226, 359, 228, 364, 232, 365, 233,\n    368, 236, 368, 237, 370, 239, 374, 242, 375, 243, 377, 245, 379, 247, 386, 254, 388, 256, 392, 259, 395,\n    263, 396, 263, 397, 264, 399, 267, 400, 269, 403, 271, 412, 280, 415, 284, 418, 287, 422, 292, 425, 294,\n    426, 295, 426, 296, 426, 296, 426, 296, 427, 297, 427, 297, 427, 297, 427, 298, 427.1, 298.1,\n  ],\n  [\n    191, 254, 191, 254, 191, 254, 191, 254, 191, 255, 191, 258, 191, 260, 191, 261, 191, 263, 191, 267, 191,\n    268, 191, 276, 191, 277, 191, 278, 192, 282, 194, 287, 194, 288, 195, 291, 195, 292, 195, 292, 196, 293,\n    196, 295, 196, 296, 197, 297, 197, 298, 198, 299, 198, 300, 201, 303, 202, 305, 207, 309, 208, 309, 209,\n    311, 210, 312, 211, 312, 216, 315, 217, 315, 218, 316, 219, 316, 220, 316, 220, 316, 224, 316, 224, 316,\n    226, 317, 227, 317, 229, 317, 231, 317, 234, 317, 236, 316, 242, 315, 244, 315, 246, 315, 249, 315, 252,\n    314, 256, 313, 259, 313, 261, 313, 262, 312, 265, 312, 270, 310, 272, 309, 273, 308, 275, 307, 279, 305,\n    280, 305, 280, 304, 282, 303, 283, 302, 283, 302, 284, 301, 284, 301, 285, 300, 287, 298, 288, 297, 289,\n    295, 291, 293, 293, 291, 294, 290, 295, 289, 296, 288, 296, 287, 297, 287, 297, 287, 297, 286, 298, 285,\n    299, 283, 300, 282, 300, 281, 301, 281, 303, 278, 306, 273, 306, 272, 307, 270, 308, 267, 308, 266, 309,\n    265, 309, 264, 310, 262, 310, 261, 310, 259, 310, 257, 310, 256, 310, 254, 310, 253, 310, 247, 310, 246,\n    309, 245, 309, 244, 309, 244, 308, 243, 308, 241, 308, 240, 308, 239, 307, 239, 307, 237, 306, 237, 305,\n    235, 305, 234, 305, 234, 305, 233, 305, 233, 305, 233, 305.1, 233.1,\n  ],\n  [\n    259, 152, 258, 153, 258, 154, 257, 155, 256, 158, 254, 160, 252, 165, 251, 167, 250, 168, 250, 170, 249,\n    171, 249, 172, 248, 173, 248, 174, 248, 174, 248, 174, 248, 175, 248, 176, 248, 178, 248, 179, 248, 180,\n    248, 181, 250, 186, 251, 188, 251, 189, 253, 190, 254, 191, 254, 191, 255, 191, 256, 191, 256, 191, 256,\n    191, 257, 191, 257, 191, 257, 191, 258, 190, 259, 190, 260, 189, 260, 189, 261, 188, 261, 188, 261, 187,\n    262, 187, 262, 186, 262, 185, 263, 184, 263, 183, 264, 181, 264, 179, 265, 177, 265, 177, 265, 177, 266,\n    176, 266, 175, 266, 175, 266, 172, 266, 171, 266, 169, 266, 168, 266, 167, 265, 166, 264, 164, 264, 163,\n    263, 161, 263, 160, 262, 160, 262, 159, 262, 159, 261, 158, 260, 157, 259, 156, 258, 155, 257, 154, 256,\n    154, 255, 153, 254, 153, 254, 153, 254, 153, 253, 153, 253, 153, 253.1, 153.1,\n  ],\n  [\n    182, 208, 182, 208, 182, 209, 182, 210, 182, 211, 182, 212, 182, 215, 181, 217, 181, 219, 181, 221, 181,\n    222, 181, 222, 181, 223, 181, 224, 181, 224, 181, 224, 182, 225, 182, 226, 182, 226, 183, 227, 184, 228,\n    184, 229, 185, 229, 185, 229, 188, 230, 190, 231, 192, 232, 193, 232, 193, 232, 193, 232, 194, 231, 194,\n    231, 194, 230, 194, 229, 194, 227, 195, 224, 195, 223, 195, 220, 195, 218, 195, 217, 195, 215, 195, 214,\n    195, 211, 195, 211, 195, 210, 195, 210, 195, 210, 194, 209, 193, 208, 192, 207, 191, 206, 190, 205, 190,\n    205, 190, 205, 188, 204, 188, 204, 188, 203, 187, 203, 187.1, 203.1,\n  ],\n  [\n    251, 236, 250, 236, 249, 236, 248, 235, 247, 235, 247, 235, 246, 235, 246, 235, 245, 234, 245, 234, 245,\n    234, 244, 233, 244, 233, 244, 233, 243, 232, 242, 231, 241, 229, 240, 229, 239, 228, 239, 227, 238, 227,\n    238, 226, 238, 226, 238, 226, 238, 226, 238, 226, 237, 228, 237, 229, 237, 230, 237, 230, 237, 231, 237,\n    233, 237, 234, 236, 236, 236, 238, 236, 240, 236, 242, 235, 242, 235, 242, 235, 243, 236, 243, 236, 243,\n    236, 243, 237, 243, 238, 243, 238, 243, 239, 242, 239, 242, 240, 242, 241, 242, 241, 241, 242, 241, 242,\n    241, 243, 241, 243, 240, 243, 240, 243, 240, 244, 240, 244, 240, 244, 239, 244, 239, 245, 239, 245, 239,\n    245, 239, 245, 238, 245, 238, 246, 237, 247, 237, 247, 237, 247, 237, 247, 237, 247, 236, 248, 236, 248,\n    236, 248, 236, 249, 236, 249.1, 236.1,\n  ],\n];\n\nexport const mockDrawing = () => {\n  return sampleSize(mockedDrawings, getRandomItem([2, 3, 3, 4, 5]));\n};\n"],"names":["arteRuimTimer","require","ArteRuimTimerSound","useGlobalState","volume","useAudio","src","autoPlay","loop","audio","controls","useEffect","CanvasResizer","canvasSize","setCanvasSize","type","position","icon","DragOutlined","label","labelText","content","className","value","min","max","step","onChange","pt","en","CanvasSVG","drawing","width","height","strokeWidth","viewBox","konvaLines","JSON","parse","paths","map","lineArr","path","x","y","length","strokeWidthBySize","small","medium","large","xmlns","overflow","style","index","d","fill","stroke","strokeLinecap","strokeLinejoin","strokeMiterlimit","DrawingCanvas","lines","setLines","showControls","willReadFrequently","useState","drawingHistory","setDrawingHistory","isDrawing","useRef","startDrawing","current","stopDrawing","startLine","e","pos","target","getStage","getPointerPosition","Math","round","finishLine","point","lastLineEntry","concat","splice","handleMouseDown","handleMouseMove","lastLine","handleMouseUp","handleOffsetMouseUp","handleOffsetMouseDown","direction","align","onMouseDown","onMousemove","onMouseup","onTouchStart","onTouchMove","onTouchEnd","onMouseLeave","window","document","addEventListener","onMouseEnter","removeEventListener","clsx","id","line","i","points","tension","lineCap","globalCompositeOperation","onClick","linesCopy","drawingHistoryCopy","pop","push","disabled","UndoOutlined","lastUndoLine","DeleteOutlined","Card","children","header","footer","color","size","randomColor","headerClassName","footerClassName","baseClass","bgColor","getColorFromLetter","toUpperCase","startsWith","backgroundColor","unknownText","Achievements","players","achievements","reference","getAnimationClass","level","achievement","achievementObj","player","playerId","delay","title","avatarId","name","Boolean","description","shape","TimeHighlight","iconSize","View","ViewIf","condition","ViewOr","ViewSwitch","cases","Error","console","warn","StepDraw","secretCard","onSubmitDrawing","startDrawingTimer","announcement","translate","useLanguage","isDebugEnabled","useDevFeatures","isTimesUp","setTimesUp","useCountdown","duration","autoStart","onExpire","stringify","cardId","seconds","start","isRunning","useMock","mockDrawing","undefined","Array","join","text","PanicIcon","background","padding","DrawInstruction","EvaluationRules","GalleryRules","PointsHighlight","ScoringRules","LevelInstruction","levelType","contained","getLevelText","contenders","movies","adjectives","state","info","useStep","goToNextStep","setStep","user","useUser","setStartDrawingTimer","request","useAPICall","apiFunction","ARTE_RUIM_API","actionName","onBeforeCall","onError","successMessage","errorMessage","payload","action","useOnSubmitDrawingAPIRequest","PaintingIcon","buttonText","onClose","currentRound","withoutTimer","phase","allowedPhase","PHASES","waitingRoom","instruction","onPressButton","time","circleColor","appearance","unskippable","currentCard","prepareVotes","votes","Object","entries","reduce","acc","drawingEntryId","cardEntryId","split","SEPARATOR","drawingId","EvaluationAllDrawings","drawings","activeItem","onActivateItem","liButtonBaseClass","drawingEntry","canvasEntryId","getEntryId","isActive","vote","charAt","ArteRuimCard","WarningOutlined","EvaluationAllCards","cards","cardEntry","letter","LETTERS","isUsed","values","includes","role","StepEvaluation","onSubmitVoting","isLoading","useLoading","canvasWidth","useCardWidth","gap","minWidth","maxWidth","useVotingMatch","setVotes","activateItem","resetVoting","isVotingComplete","choseRandomly","setChoseRandomly","onGuessForMe","useCallback","usedDrawings","keys","usedCards","drawingsKeys","filter","key","cardsKeys","shuffle","ceil","flat","newVotes","forEach","drawingKey","floor","selectOwnDrawing","playersDrawing","find","cardIndex","findIndex","card","cardKey","useEffectOnce","selection","s","fullWidth","wrap","ThunderboltOutlined","CloudUploadOutlined","loading","EvaluatedDrawings","cardsDict","useMemo","drawingsDict","IconAvatar","AnimatedLoaderIcon","cSize","sort","onSuccess","useOnSubmitVotingAPIRequest","EvaluateIcon","GalleryWindowCredits","artist","GalleryWindowGuesses","playersSay","windowCardId","artistColor","orderBy","playersIds","count","isCorrect","entry","CrownFilled","MessageFilled","getPlayersFromIds","GalleryWindowResult","playerArtist","correctAnswerId","correctAnswerText","playersPoints","correctGuesses","quantity","keyPrefix","GarbageIcon","StepGallery","gallery","activeIndex","setActiveIndex","isFirstGalleryRunThrough","useTemporarilyHidePlayersBar","artistId","currentColor","getAvatarColorById","disableControls","barColor","windowDuration","leftClassName","rightClassName","StepRanking","ranking","isGameOver","goToPreviousStep","threshold","gainedPointsDescriptions","total","PictureOutlined","meta","useSlideShow","options","shortGame","some","score","PictureIcon","GRADES","DrawingGrade","grade","FinalGallery","successRate","announcementIcon","TrophyIcon","rateWidgetCustomText","achievementsReference","getActiveComponent","LoadingPage","PhaseLobby","PhaseRules","PhaseSetup","PhaseDraw","PhaseEvaluation","PhaseGallery","PhaseGameOver","PageError","theme","token","colorPrimary","THEME_COLORS","colorLink","gameCollection","GAME_COLLECTION","ACHIEVEMENTS","ClockIcon","props","cx","cy","r","transform","mockedDrawings","sampleSize","getRandomItem"],"sourceRoot":""}