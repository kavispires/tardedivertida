{"version":3,"file":"static/js/9771.9465bf86.chunk.js","mappings":"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","sources":["components/general/GameBanner.tsx","components/general/GameTags.tsx","games/arte-ruim/utils/achievements.ts","games/contadores-historias/utils/achievements.ts","games/galeria-de-sonhos/utils/achievements.ts","games/mente-coletiva/utils/achievements.ts","games/na-rua-do-medo/utils/achievements.ts","games/onda-telepatica/utils/achievements.ts","games/porta-dos-desesperados/utils/achievements.ts","games/quem-sou-eu/utils/achievements.ts","icons/TrophyIcon.tsx","pages/Hub/components/CreateGameModal.tsx","pages/Hub/components/GameCard.tsx","utils/achievements.ts","pages/Me/utils.ts","pages/Me/components/UserName.tsx","pages/Me/components/StatisticCard.tsx","pages/Me/components/InfoCard.tsx","components/general/Achievement.tsx","pages/Me/components/UserAchievements.tsx","pages/Me/components/GameStatistics.tsx","pages/Me/components/GameCheckCard.tsx","pages/Me/MeContent.tsx"],"sourcesContent":["// Ant Design Resources\nimport { Image } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { PUBLIC_URL } from 'utils/constants';\n\ntype BannerProps = {\n  /**\n   * Display title of the game\n   */\n  title?: DualLanguageValue;\n  /**\n   * Name (collection key) of the game\n   */\n  gameName?: string;\n  /**\n   * Custom class name\n   */\n  className?: string;\n  /**\n   * Determine if image should be able to be previewed\n   */\n  preview?: boolean;\n};\n\nexport function GameBanner({ title, gameName, className, preview }: BannerProps) {\n  const { language } = useLanguage();\n\n  return (\n    <figure>\n      <Image\n        alt={title?.[language]}\n        src={`${PUBLIC_URL.BANNERS}${gameName}-${language}.jpg`}\n        fallback={`${PUBLIC_URL.BANNERS}/em-breve.jpg`}\n        className={className}\n        preview={preview}\n      />\n    </figure>\n  );\n}\n","// Ant Design Resources\nimport { Space, SpaceProps, Tag } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { TAG_DICT } from 'utils/constants';\n\nconst sortTags = (tags: string[]) => {\n  const sortedTags: string[] = [];\n\n  tags.forEach((tag) => {\n    if (TAG_DICT?.[tag]?.index !== undefined) {\n      sortedTags[TAG_DICT[tag].index] = tag;\n    } else if (sortedTags.length < 18) {\n      sortedTags[18] = tag;\n    } else {\n      sortedTags.push(tag);\n    }\n  });\n\n  return sortedTags.filter((v) => Boolean(v));\n};\n\ntype GameTagsProps = {\n  tags: string[];\n  gameCode: GameCode;\n} & SpaceProps;\n\nexport function GameTags({ tags, gameCode, ...rest }: GameTagsProps) {\n  const { language } = useLanguage();\n  const sortedTags = sortTags(tags);\n\n  return (\n    <Space wrap {...rest}>\n      {sortedTags.map((tag) => (\n        <Tag key={`${gameCode}-${tag}`} color={TAG_DICT[tag]?.color}>\n          {TAG_DICT[tag]?.label[language]}\n        </Tag>\n      ))}\n    </Space>\n  );\n}\n","export const achievementsReference: AchievementReference = {\n  BEST_ARTIST: {\n    icon: 'paint-brush',\n    title: {\n      pt: 'Melhor Artista',\n      en: 'Best Artist',\n    },\n    description: {\n      pt: 'Todos os jogadores acertaram unanimemente seu desenho mais vezes',\n      en: 'Got players to guess your drawing unanimously the most',\n    },\n  },\n  WORST_ARTIST: {\n    icon: 'question-mark',\n    title: {\n      pt: 'Artista Mais Não Convencional',\n      en: 'Most Unconventional Artist',\n    },\n    description: {\n      pt: 'Todos os jogadores NÃO acertaram unanimemente seu desenho mais vezes',\n      en: 'Got players to miss your drawing unanimously the most',\n    },\n  },\n  SOLITARY_WINNER: {\n    icon: 'person',\n    title: {\n      pt: 'Adivinhador Solitário',\n      en: 'Best Solitary Guesser',\n    },\n    description: {\n      pt: 'Foi o único que acertou o desenho mais vezes',\n      en: 'Was the only one to get the drawing the most',\n    },\n  },\n  SOLITARY_LOSER: {\n    icon: 'difference',\n    title: {\n      pt: 'Mais Diferentão',\n      en: 'Most Unique Guesser',\n    },\n    description: {\n      pt: 'Foi o único que errou o desenho mais vezes',\n      en: 'Was the only one to get the drawing the most',\n    },\n  },\n  TABLE_VOTES: {\n    icon: 'table',\n    title: {\n      pt: 'Melhor Votador Pra Mesa',\n      en: 'Best Table Voter',\n    },\n    description: {\n      pt: 'Votou nas cartas extras que não eram de nenhum jogador mais vezes',\n      en: \"Voted for extra cards that didn't belong to any player the most\",\n    },\n  },\n};\n\nexport default achievementsReference;\n","export const achievementsReference: AchievementReference = {\n  MOST_DECEIVING: {\n    icon: 'light-bulb',\n    title: {\n      pt: 'Mais Convincente',\n      en: 'Most Deceiving',\n    },\n    description: {\n      pt: 'Suas cartas foram escolhidas mais vezes quando não era o Contador de Histórias',\n      en: 'Their cards were chosen the most when they were not the Storyteller',\n    },\n  },\n  WORST_CARDS: {\n    icon: 'x',\n    title: {\n      pt: 'Piores Cartas',\n      en: 'Worst Cards',\n    },\n    description: {\n      pt: 'Suas cartas foram escolhidas menos vezes quando não era o Contador de Histórias',\n      en: 'Their cards were chosen the least when they were not the Storyteller',\n    },\n  },\n  WORST_CLUES: {\n    icon: 'face-mental-breakdown',\n    title: {\n      pt: 'Histórias mais Cabulosas',\n      en: 'Most Obscure',\n    },\n    description: {\n      pt: 'As histórias que deram nenhum match mais vezes',\n      en: 'Their stories got no matches more times',\n    },\n  },\n  EASIEST_CLUES: {\n    icon: 'face-smiley',\n    title: {\n      pt: 'Histórias Mais Simples',\n      en: 'Easiest Stories',\n    },\n    description: {\n      pt: 'Os jogadores adivinharam as histórias mais vezes',\n      en: 'Players guessed their story correctly more times',\n    },\n  },\n  HARDEST_CLUES: {\n    icon: 'thumbs-up',\n    title: {\n      pt: 'Histórias Mais Difíceis',\n      en: 'Hardest Stories',\n    },\n    description: {\n      pt: 'Os jogadores adivinharam as histórias menos vezes',\n      en: 'Players guessed their story correctly fewer times',\n    },\n  },\n  TABLE_VOTES: {\n    icon: 'table',\n    title: {\n      pt: 'Melhor Votador Pra Mesa',\n      en: 'Best Table Voter',\n    },\n    description: {\n      pt: 'Votou nas cartas extras que não eram de nenhum jogador mais vezes',\n      en: \"Voted for extra cards that didn't belong to any player the most\",\n    },\n  },\n};\n\nexport default achievementsReference;\n","export const achievementsReference: AchievementReference = {\n  MOST_MATCHES: {\n    icon: 'double-arrow-up',\n    title: {\n      pt: 'Mais Matches',\n      en: 'Most Matches',\n    },\n    description: {\n      pt: 'Deu match com o mais jogadores em cartas sonhos',\n      en: 'Match dream cards with other players the most',\n    },\n  },\n  FEWEST_MATCHES: {\n    icon: 'double-arrow-down',\n    title: {\n      pt: 'Menos Matches',\n      en: 'Fewest Matches',\n    },\n    description: {\n      pt: 'Deu match com o menos jogadores em cartas sonhos',\n      en: 'Match dream cards with other players the fewest',\n    },\n  },\n  MOST_FULL_MATCHES: {\n    icon: 'heart',\n    title: {\n      pt: 'Mais Match Completo',\n      en: 'Most Full Matches',\n    },\n    description: {\n      pt: 'Deu match com todos os sonhos em uma rodada mais vezes',\n      en: 'Match all dream cards in a round most times',\n    },\n  },\n  MOST_VISITS: {\n    icon: 'sand-timer',\n    title: {\n      pt: 'Melhor Visitante',\n      en: 'Best Visitor',\n    },\n    description: {\n      pt: 'Visitou o maior número de cartas-sonhos durante o jogo',\n      en: 'Visited the most dream cards during the game',\n    },\n  },\n  LEAST_ADVENTUROUS: {\n    icon: 'arrow-narrow',\n    title: {\n      pt: 'Mais Comedido',\n      en: 'Least Adventurous',\n    },\n    description: {\n      pt: 'Visitou o menor número de cartas-sonhos durante o jogo',\n      en: 'Visited the fewest dream cards during the game',\n    },\n  },\n  MOST_ADVENTUROUS: {\n    icon: 'face-scared',\n    title: {\n      pt: 'Mais Aventureiro',\n      en: 'Most Adventurous',\n    },\n    description: {\n      pt: 'Esteve em pesadelos mais vezes',\n      en: 'Was in a nightmare more times',\n    },\n  },\n  MOST_PAIRS: {\n    icon: 'puzzle',\n    title: {\n      pt: 'Mais Brilhante',\n      en: 'Brightest',\n    },\n    description: {\n      pt: 'Encontrou somente um outro jogador mais vezes',\n      en: 'Found only one other player most times',\n    },\n  },\n  MOST_OUT_OF_THE_BOX: {\n    icon: 'box',\n    title: {\n      pt: 'Mais Diferentão',\n      en: 'Out of the Box Thinker',\n    },\n    description: {\n      pt: 'Teve mais cartas sem dar match no total',\n      en: 'Had the most cards without a match throughout the game',\n    },\n  },\n  MOST_LONELY: {\n    icon: 'face-tired',\n    title: {\n      pt: 'Mais Solitário',\n      en: 'Loneliest',\n    },\n    description: {\n      pt: 'Não deu mete nenhum mais vezes',\n      en: 'Got zero matches in a round more times',\n    },\n  },\n  POOREST_CHOICES: {\n    icon: 'face-oops',\n    title: {\n      pt: 'Mais Burro',\n      en: 'Poorest Choices',\n    },\n    description: {\n      pt: 'Foi eliminado mais vezes',\n      en: 'Was eliminated the most',\n    },\n  },\n  SMARTEST_CHOICES: {\n    icon: 'brain',\n    title: {\n      pt: 'Mais Esperto',\n      en: 'Smartest Choices',\n    },\n    description: {\n      pt: 'Foi eliminado menos vezes',\n      en: 'Was eliminated the least',\n    },\n  },\n};\n\nexport default achievementsReference;\n","export const achievementsReference: AchievementReference = {\n  MOST_MATCHES: {\n    icon: 'double-arrow-up',\n    title: {\n      pt: 'Mais Matches',\n      en: 'Best Matcher',\n    },\n    description: {\n      pt: 'As respostas combinaram mais vezes com outros jogadores',\n      en: 'Their answers matched the most with other players',\n    },\n  },\n  LEAST_MATCHES: {\n    icon: 'difference',\n    title: {\n      pt: 'Mais Diferentão',\n      en: 'Most Unique',\n    },\n    description: {\n      pt: 'As respostas combinaram menos vezes com outros jogadores',\n      en: 'Their answers matched the least with other players',\n    },\n  },\n  MOST_DEAD: {\n    icon: 'skull',\n    title: {\n      pt: 'Mais Morta',\n      en: 'Most Dead',\n    },\n    description: {\n      pt: 'A única ovelhinha morta no final',\n      en: 'The only dead sheep in the end',\n    },\n  },\n  MOST_LONELY: {\n    icon: 'face-tired',\n    title: {\n      pt: 'Mais Solitária',\n      en: 'Most Lonely',\n    },\n    description: {\n      pt: 'A única ovelhinha num pasto sozinha no final',\n      en: 'The only sheep by itself in the end',\n    },\n  },\n  BEST_TRAVELER: {\n    icon: 'distance',\n    title: {\n      pt: 'Mais Viajada',\n      en: 'Best Traveler',\n    },\n    description: {\n      pt: 'Ovelhinha que mais moveu pra direita e esquerda',\n      en: 'Sheep who moved the most left or right',\n    },\n  },\n};\n\nexport default achievementsReference;\n","export const achievementsReference: AchievementReference = {\n  BRAVEST: {\n    icon: 'sword',\n    title: {\n      pt: 'Mais Corajoso',\n      en: 'Bravest',\n    },\n    description: {\n      pt: 'Encontrou o maior número de monstros',\n      en: 'Encounter the most number of monsters',\n    },\n  },\n  LUCKIEST: {\n    icon: 'clover',\n    title: {\n      pt: 'Mais Sortudo',\n      en: 'Luckiest',\n    },\n    description: {\n      pt: 'Encontrou o menor número de monstros',\n      en: 'Encounter the fewest monsters',\n    },\n  },\n  CANDY_LOSER: {\n    icon: 'candy',\n    title: {\n      pt: 'Mais Desesperado',\n      en: 'Most Desperate',\n    },\n    description: {\n      pt: 'Perdeu mais doces para ataques dos monstros',\n      en: 'Lost the most number of candy for a double monster',\n    },\n  },\n  MOST_SCARED: {\n    icon: 'face-scared',\n    title: {\n      pt: 'Mais Assustado',\n      en: 'Most Scared',\n    },\n    description: {\n      pt: 'Visitou o menor número de casas',\n      en: 'Visited the fewest houses',\n    },\n  },\n  MOST_HOUSES: {\n    icon: 'house',\n    title: {\n      pt: 'Mais Andador',\n      en: 'Most Houses',\n    },\n    description: {\n      pt: 'Visitou o maior número de casas',\n      en: 'Visited the most houses',\n    },\n  },\n  MOST_JACKPOTS: {\n    icon: 'dollar',\n    title: {\n      pt: 'Mais Boladas',\n      en: 'Most Jackpots',\n    },\n    description: {\n      pt: 'Ganhou mais boladas',\n      en: 'Got the most jackpots',\n    },\n  },\n  MOST_SIDEWALK: {\n    icon: 'arrow-wide',\n    title: {\n      pt: 'Mais Mendigo',\n      en: 'Most Sidewalk Candy',\n    },\n    description: {\n      pt: 'Catou mais doces da calçada',\n      en: 'Got the most candy from the sidewalk',\n    },\n  },\n};\n\nexport default achievementsReference;\n","export const achievementsReference: AchievementReference = {\n  MOST_ACCURATE: {\n    icon: 'arrow-up',\n    title: {\n      pt: 'Mais Preciso',\n      en: 'Most Accurate',\n    },\n    description: {\n      pt: 'Os palpites foram mais próximos do ponteiro do que qualquer outro jogador',\n      en: 'Their guesses were closer to the needle than other players',\n    },\n  },\n  LEAST_ACCURATE: {\n    icon: 'arrow-down',\n    title: {\n      pt: 'Menos Preciso',\n      en: 'Least Accurate',\n    },\n    description: {\n      pt: 'Os palpites foram mais longe do ponteiro do que qualquer outro jogador',\n      en: 'Their guesses were farther to the needle than other players',\n    },\n  },\n  MOST_EXACT: {\n    icon: 'arrow-narrow',\n    title: {\n      pt: 'Mais Exato',\n      en: 'Most Exact',\n    },\n    description: {\n      pt: 'Mais palpites exatamente no ponteiro do que qualquer outro jogador',\n      en: 'Most guesses exactly on the needle than other players',\n    },\n  },\n  BEST_PSYCHIC: {\n    icon: 'brain',\n    title: {\n      pt: 'Melhor Medium',\n      en: 'Best Medium',\n    },\n    description: {\n      pt: 'Ganhou mais pontos por outros jogadores adivinhando sua dica',\n      en: 'Got the most points by other players guessing their clue',\n    },\n  },\n  MOST_ZEROS: {\n    icon: 'box',\n    title: {\n      pt: 'Mais Diferentão',\n      en: 'Outside of the Box Thinker',\n    },\n    description: {\n      pt: 'Não ganhou nenhum ponto em mais rodadas',\n      en: 'Did not score any points in a round more times',\n    },\n  },\n};\n\nexport default achievementsReference;\n","const ACHIEVEMENTS = {\n  MOST_POSSESSED: 'MOST_POSSESSED',\n  LEAST_POSSESSED: 'LEAST_POSSESSED',\n  BEST_GUIDE: 'BEST_GUIDE',\n  BEGINNER_GUIDE: 'BEGINNER_GUIDE',\n  SLOW_READER: 'SLOW_READER',\n  FAST_LEARNER: 'FAST_LEARNER',\n  MOST_PAGES: 'MOST_PAGES',\n  FEWEST_PAGES: 'FEWEST_PAGES',\n  MOST_CORRECT_DOORS: 'MOST_CORRECT_DOORS',\n  MOST_WRONG_DOORS: 'MOST_WRONG_DOORS',\n  MOST_SOLO_CORRECT_DOORS: 'MOST_SOLO_CORRECT_DOORS',\n  MOST_SOLO_WRONG_DOORS: 'MOST_SOLO_WRONG_DOORS',\n  SLOW_DECISIONS: 'SLOW_DECISIONS',\n  QUICK_DECISIONS: 'QUICK_DECISIONS',\n  MAGIC_WASTER: 'MAGIC_WASTER',\n  MAGIC_SAVER: 'MAGIC_SAVER',\n};\n\nexport const achievementsReference: AchievementReference = {\n  [ACHIEVEMENTS.MOST_POSSESSED]: {\n    icon: 'face-perplexed',\n    title: {\n      pt: 'Mais possuído',\n      en: 'Most Possessed',\n    },\n    description: {\n      pt: 'Foi possuído mais vezes',\n      en: 'Was possessed the most',\n    },\n  },\n  [ACHIEVEMENTS.LEAST_POSSESSED]: {\n    icon: 'heart',\n    title: {\n      pt: 'Mais puro',\n      en: 'Purest',\n    },\n    description: {\n      pt: 'Foi possuído menos vezes',\n      en: 'Was possessed the least',\n    },\n  },\n  [ACHIEVEMENTS.BEST_GUIDE]: {\n    icon: 'guide',\n    title: {\n      pt: 'Melhor Guia',\n      en: 'Best Guide',\n    },\n    description: {\n      pt: 'Ajudou os outros jogadores a acharem a porta certa com as melhores páginas mais vezes',\n      en: 'Helped the other players with best book pages the most',\n    },\n  },\n  [ACHIEVEMENTS.BEGINNER_GUIDE]: {\n    icon: 'arrows',\n    title: {\n      pt: 'Guia Aprendiz',\n      en: 'Beginner Guide',\n    },\n    description: {\n      pt: 'Usou páginas não tão boas mais vezes',\n      en: 'Use not so good book pages the most',\n    },\n  },\n  [ACHIEVEMENTS.SLOW_READER]: {\n    icon: 'glasses',\n    title: {\n      pt: 'Mais Analítico',\n      en: 'Most Analytical',\n    },\n    description: {\n      pt: 'Demorou mais tempo para escolher páginas do livro',\n      en: 'Took the longest total to choose book pages',\n    },\n  },\n  [ACHIEVEMENTS.FAST_LEARNER]: {\n    icon: 'clock',\n    title: {\n      pt: 'Melhor Leitor',\n      en: 'Fastest Reader',\n    },\n    description: {\n      pt: 'Demorou menos tempo para escolher páginas do livro',\n      en: 'Took the shortest total to choose book pages',\n    },\n  },\n  [ACHIEVEMENTS.MOST_PAGES]: {\n    icon: 'open-book',\n    title: {\n      pt: 'Melhor Conteúdo',\n      en: 'Best Content',\n    },\n    description: {\n      pt: 'Usou o maior número de páginas do livro',\n      en: 'Used the most book pages',\n    },\n  },\n  [ACHIEVEMENTS.FEWEST_PAGES]: {\n    icon: 'minus',\n    title: {\n      pt: 'Mais Sucinto',\n      en: 'Most Succinct',\n    },\n    description: {\n      pt: 'Usou o menor número de páginas do livro',\n      en: 'Used the fewest book pages',\n    },\n  },\n  [ACHIEVEMENTS.MOST_CORRECT_DOORS]: {\n    icon: 'door',\n    title: {\n      pt: 'Mais Correto',\n      en: 'Most Correct',\n    },\n    description: {\n      pt: 'Escolheu a porta correta mais vezes',\n      en: 'Chose the correct door more times',\n    },\n  },\n  [ACHIEVEMENTS.MOST_WRONG_DOORS]: {\n    icon: 'x',\n    title: {\n      pt: 'Mais Equivocado',\n      en: 'Most Mistaken',\n    },\n    description: {\n      pt: 'Escolheu a porta errada mais vezes',\n      en: 'Chose the wrong door more times',\n    },\n  },\n  [ACHIEVEMENTS.MOST_SOLO_CORRECT_DOORS]: {\n    icon: 'check-mark',\n    title: {\n      pt: 'Mais Solitário',\n      en: 'Most Lonely',\n    },\n    description: {\n      pt: 'Escolheu a porta correta sozinho mais vezes',\n      en: 'Chose the correct door alone more times',\n    },\n  },\n  [ACHIEVEMENTS.MOST_SOLO_WRONG_DOORS]: {\n    icon: 'person',\n    title: {\n      pt: 'Mais Do Contra',\n      en: 'Most Naysayer',\n    },\n    description: {\n      pt: 'Escolheu a porta errada sozinho mais vezes',\n      en: 'Chose the wrong door alone most times',\n    },\n  },\n  [ACHIEVEMENTS.QUICK_DECISIONS]: {\n    icon: 'hare',\n    title: {\n      pt: 'Mais Decidido',\n      en: 'Most Decisive',\n    },\n    description: {\n      pt: 'Mais rápido ao escolher portas',\n      en: 'Quickest to choose doors',\n    },\n  },\n  [ACHIEVEMENTS.SLOW_DECISIONS]: {\n    icon: 'snail',\n    title: {\n      pt: 'Mais Indeciso',\n      en: 'Most Undecided',\n    },\n    description: {\n      pt: 'Demorou mais para escolher portas',\n      en: 'Took the longest to choose doors',\n    },\n  },\n  [ACHIEVEMENTS.MAGIC_SAVER]: {\n    icon: 'arrow-up',\n    title: {\n      pt: 'Economizador De Cristal',\n      en: 'Crystal Saver',\n    },\n    description: {\n      pt: 'Usou menos cristais em portas erradas',\n      en: 'Used the fewest crystals on wrong doors',\n    },\n  },\n  [ACHIEVEMENTS.MAGIC_WASTER]: {\n    icon: 'arrow-down',\n    title: {\n      pt: 'Gastador De Cristal',\n      en: 'Crystal Spender',\n    },\n    description: {\n      pt: 'Usou mais cristais em portas erradas',\n      en: 'Used the most crystals on wrong doors',\n    },\n  },\n};\n\nexport default achievementsReference;\n","export const achievementsReference: AchievementReference = {\n  MOST_GLYPHS: {\n    icon: 'arrow-up',\n    title: {\n      pt: 'Melhor Uso dos Ícones',\n      en: 'Best Glyph User',\n    },\n    description: {\n      pt: 'Usou o maior número de ícones durante o jogo',\n      en: 'Used the most glyphs during the game',\n    },\n  },\n  LEAST_GLYPHS: {\n    icon: 'arrow-down',\n    title: {\n      pt: 'Mais Sucinto',\n      en: 'Most Succinct',\n    },\n    description: {\n      pt: 'Usou o menor número de ícones durante o jogo',\n      en: 'Used the fewest glyphs during the game',\n    },\n  },\n  MOST_POSITIVE: {\n    icon: 'thumbs-up',\n    title: {\n      pt: 'Mais Positivo',\n      en: 'Most Positive',\n    },\n    description: {\n      pt: 'Usou mais ícones no lado positivo',\n      en: 'Used the most glyphs on the positive side',\n    },\n  },\n  LEAST_POSITIVE: {\n    icon: 'arrow-left',\n    title: {\n      pt: 'Menos Positivo',\n      en: 'Least Positive',\n    },\n    description: {\n      pt: 'Usou menos ícones no lado positivo',\n      en: 'Used the least glyphs on the positive side',\n    },\n  },\n  MOST_NEGATIVE: {\n    icon: 'thumbs-down',\n    title: {\n      pt: 'Mais Negativo',\n      en: 'Most Negative',\n    },\n    description: {\n      pt: 'Usou mais ícones no lado negativo',\n      en: 'Used the most glyphs on the negative side',\n    },\n  },\n  LEAST_NEGATIVE: {\n    icon: 'arrow-right',\n    title: {\n      pt: 'Menos Negativo',\n      en: 'Least Negative',\n    },\n    description: {\n      pt: 'Usou menos ícones no lado negativo',\n      en: 'Used the least glyphs on the negative side',\n    },\n  },\n  SINGLE_ICON: {\n    icon: 'one',\n    title: {\n      pt: 'Mais Único',\n      en: 'Most Unique',\n    },\n    description: {\n      pt: 'Usou apenas um ícone mais vezes',\n      en: 'Used a single icon most times',\n    },\n  },\n  TABLE_VOTES: {\n    icon: 'table',\n    title: {\n      pt: 'Melhor Votador Pra Mesa',\n      en: 'Best Table Voter',\n    },\n    description: {\n      pt: 'Votou nas cartas extras que não eram de nenhum jogador mais vezes',\n      en: \"Voted for extra cards that didn't belong to any player the most\",\n    },\n  },\n};\n\nexport default achievementsReference;\n","export function TrophyIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M397.763 87.5h-98.509v213.476h98.509c58.855 0 106.737-47.882 106.737-106.738S456.618 87.5 397.763 87.5zm0 183.476h-68.509V117.5h68.509c42.381 0 76.738 34.357 76.738 76.738-.001 42.381-34.357 76.738-76.738 76.738zM114.237 87.5C55.382 87.5 7.5 135.382 7.5 194.238s47.882 106.738 106.737 106.738h98.509V87.5zm68.509 183.476h-68.509c-42.381 0-76.738-34.357-76.738-76.738S71.856 117.5 114.237 117.5h68.509zM314 419.5H198l15-91h86z\"\n      ></path>\n      <path fill=\"#fee97d\" d=\"M299 328.5h-30l15 91h30z\"></path>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M382.221 504.5H129.779a7 7 0 01-7-7v-11.629c0-22.091 17.909-40 40-40h186.442c22.091 0 40 17.909 40 40V497.5a7 7 0 01-7 7z\"\n      ></path>\n      <path\n        fill=\"#fee97d\"\n        d=\"M349.221 445.871h-30c22.092 0 40 17.909 40 40V497.5a7 7 0 01-7 7h30a7 7 0 007-7v-11.629c0-22.092-17.909-40-40-40zm-5 0H167.779v-3.629c0-22.091 17.909-40 40-40h96.442c22.091 0 40 17.909 40 40z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M304.221 402.241h-30c22.092 0 40 17.909 40 40v3.629h30v-3.629c0-22.091-17.909-40-40-40z\"\n      ></path>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M411.5 57.5h-311c-13.807 0-25-11.193-25-25s11.193-25 25-25h311c13.807 0 25 11.193 25 25s-11.193 25-25 25z\"\n      ></path>\n      <path\n        fill=\"#fee97d\"\n        d=\"M411.5 7.5h-30c13.807 0 25 11.193 25 25s-11.193 25-25 25h30c13.807 0 25-11.193 25-25s-11.193-25-25-25zM256 362.5c-83.119 0-150.5-67.381-150.5-150.5V57.5h301V212c0 83.119-67.381 150.5-150.5 150.5z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M376.5 57.5V212c0 78.056-59.424 142.229-135.5 149.757 4.934.488 9.937.743 15 .743 83.119 0 150.5-67.381 150.5-150.5V57.5z\"\n      ></path>\n      <circle cx=\"256\" cy=\"207.96\" r=\"94.169\" fill=\"#fff\"></circle>\n      <path\n        fill=\"#fee97d\"\n        d=\"M262.277 154.391l13.139 26.623a7 7 0 005.271 3.829l29.38 4.269c5.742.834 8.034 7.89 3.879 11.94l-21.26 20.723a6.998 6.998 0 00-2.013 6.196l5.019 29.261c.981 5.718-5.021 10.079-10.157 7.379l-26.278-13.815a7.001 7.001 0 00-6.515 0l-26.278 13.815c-5.135 2.7-11.137-1.661-10.157-7.379l5.019-29.261a7 7 0 00-2.013-6.196l-21.26-20.723c-4.155-4.05-1.862-11.106 3.879-11.94l29.38-4.269a7 7 0 005.271-3.829l13.139-26.623c2.569-5.203 9.987-5.203 12.555 0z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M313.946 201.052c4.155-4.05 1.862-11.106-3.88-11.94l-29.38-4.269a6.997 6.997 0 01-5.27-3.829l-13.139-26.623c-2.568-5.203-9.987-5.203-12.554 0l-10.888 22.061 3.874 7.85a18.632 18.632 0 0014.03 10.193c15.284 2.221 21.386 21.003 10.327 31.783a18.632 18.632 0 00-5.359 16.493l1.755 10.236 22.073 11.604c5.135 2.7 11.137-1.661 10.157-7.379l-5.019-29.261a7 7 0 012.013-6.196z\"\n      ></path>\n      <path d=\"M282.025 177.458l-13.022-26.387c-2.462-4.985-7.443-8.082-13.003-8.082s-10.541 3.097-13.003 8.083l-13.022 26.387-29.119 4.231c-5.502.799-9.987 4.581-11.706 9.868-1.718 5.288-.312 10.983 3.669 14.865l21.071 20.539-4.975 29.003c-.939 5.479 1.271 10.914 5.77 14.182s10.349 3.691 15.271 1.104L256 257.557l26.045 13.693c4.903 2.578 10.759 2.174 15.271-1.104 4.498-3.268 6.709-8.702 5.769-14.182l-4.974-29.003 21.071-20.539c3.981-3.881 5.387-9.577 3.669-14.865-1.719-5.287-6.204-9.068-11.706-9.867zm5.426 38.946a14.494 14.494 0 00-4.169 12.834l4.847 28.264-25.382-13.345a14.498 14.498 0 00-13.495 0l-25.381 13.344 4.847-28.262a14.495 14.495 0 00-4.169-12.835l-20.534-20.016 28.377-4.124a14.494 14.494 0 0010.918-7.932L256 158.618l12.69 25.714a14.494 14.494 0 0010.918 7.932l28.377 4.124zm194.096-99.749c-17.941-19.36-41.716-31.799-67.547-35.49v-16.27c16.756-1.282 30-15.316 30-32.394C444 14.58 429.421 0 411.5 0h-311C82.579 0 68 14.58 68 32.5c0 17.078 13.244 31.112 30 32.394v16.27c-25.714 3.676-49.409 16.029-67.321 35.248a7.5 7.5 0 0010.972 10.228C56.721 110.471 76.495 99.908 98 96.352v15.236c-39.204 7.62-68 42.024-68 82.652 0 22.509 8.765 43.663 24.675 59.561 15.532 15.543 36.076 24.242 57.996 24.641a157.847 157.847 0 008.007 15.038h-6.438c-54.722 0-99.24-44.519-99.24-99.24 0-14.091 2.904-27.711 8.633-40.48a7.5 7.5 0 00-13.685-6.14C3.347 162.333 0 178.019 0 194.24c0 62.992 51.248 114.24 114.24 114.24h16.729c17.756 22.957 41.679 40.906 69.267 51.348l-6.089 36.917c-18.396 5.522-32.123 21.915-33.701 41.685-25.112 1.221-45.167 22.032-45.167 47.441V497.5c0 7.995 6.505 14.5 14.5 14.5H382.22c7.995 0 14.5-6.505 14.5-14.5v-11.629c0-25.409-20.055-46.22-45.167-47.441-1.579-19.771-15.306-36.163-33.701-41.685l-6.089-36.917c27.588-10.441 51.511-28.391 69.267-51.348h16.729c62.992 0 114.24-51.248 114.24-114.24.001-28.841-10.814-56.394-30.452-77.585zM65.281 243.195C52.203 230.126 45 212.74 45 194.24c0-32.392 22.265-59.968 53-67.308V212c0 17.851 2.98 35.018 8.461 51.034-15.554-1.728-29.958-8.609-41.18-19.839zM100.5 50C90.851 50 83 42.149 83 32.5S90.851 15 100.5 15h311c9.649 0 17.5 7.851 17.5 17.5S421.149 50 411.5 50zM414 126.932c30.735 7.34 53 34.916 53 67.308 0 18.5-7.203 35.886-20.286 48.958-11.218 11.227-25.621 18.108-41.175 19.836C411.02 247.018 414 229.851 414 212zm-77.518 311.439h-22.895c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h35.634c17.921 0 32.5 14.58 32.5 32.5V497H130.279v-11.129c0-17.92 14.579-32.5 32.5-32.5h115.808c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5H175.518c1.921-16.101 15.651-28.629 32.261-28.629h96.441c16.611-.001 30.342 12.527 32.262 28.629zm-126.801-43.63l4.987-30.237C227.849 368.08 241.703 370 256 370s28.151-1.92 41.332-5.496l4.987 30.237zM256 355c-78.851 0-143-64.149-143-143V65h286v147c0 78.851-64.149 143-143 143zm141.76-61.52h-6.438a157.741 157.741 0 008.007-15.038c21.919-.399 42.463-9.097 57.991-24.637C473.235 237.903 482 216.749 482 194.24c0-40.627-28.796-75.032-68-82.652V96.352c21.605 3.57 41.449 14.208 56.545 30.498C487.604 145.259 497 169.192 497 194.24c0 54.721-44.519 99.24-99.24 99.24zM256 106.291c-56.061 0-101.67 45.609-101.67 101.669S199.939 309.629 256 309.629 357.67 264.02 357.67 207.96 312.061 106.291 256 106.291zm0 188.338c-47.79 0-86.67-38.88-86.67-86.669s38.88-86.669 86.67-86.669 86.67 38.88 86.67 86.669-38.88 86.669-86.67 86.669z\"></path>\n    </svg>\n  );\n}\n","import clsx from 'clsx';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useCopyToClipboard } from 'react-use';\n// Ant Design Resources\nimport { Image, Modal, message, Button, notification, Divider, Typography, Switch, Space, Alert } from 'antd';\n// Adapters\nimport { ADMIN_API } from 'services/adapters';\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useLocalStorage } from 'hooks/useLocalStorage';\n// Constants\nimport { LATEST_GAME_IDS, PUBLIC_URL } from 'utils/constants';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\nimport { Loading } from 'components/loaders';\n\nconst updateLocal24hGameIds = (latestGameIds: PlainObject, newId: GameId) => {\n  const now = Date.now();\n  const past24Hours = now - 1000 * 60 * 60 * 24;\n  const cleanedUpIds = Object.entries(latestGameIds ?? {}).reduce((acc: PlainObject, [key, timestamp]) => {\n    if (timestamp > past24Hours) {\n      acc[key] = timestamp;\n    }\n    return acc;\n  }, {});\n  return {\n    [LATEST_GAME_IDS]: {\n      ...cleanedUpIds,\n      [newId]: now,\n    },\n  };\n};\n\ntype CreateGameModalProps = {\n  gameInfo: GameInfo;\n};\n\nexport function CreateGameModal({ gameInfo }: CreateGameModalProps): JSX.Element {\n  const navigate = useNavigate();\n  const { pathname } = useLocation();\n  const [state, copyToClipboard] = useCopyToClipboard();\n\n  const { language, translate } = useLanguage();\n  const { setLoader } = useLoading();\n  const [getLocalStorage, setLocalStorage] = useLocalStorage();\n  const [isVisible, setVisibility] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [gameId, setGameId] = useState(null);\n  const [, setUserId] = useGlobalState('userId');\n  const [, setUserName] = useGlobalState('username');\n  const [, setUserAvatarId] = useGlobalState('userAvatarId');\n  const [options, setOptions] = useState({});\n\n  useEffect(() => {\n    if (state.value && gameId) {\n      message.info(`Copied to clipboard: ${state.value}`);\n    }\n  }, [state, gameId]);\n\n  const onCloseModal = useCallback(() => {\n    setVisibility(false);\n  }, []);\n\n  const onChangeOptions = (key: string, value: boolean) => {\n    setOptions((s) => ({\n      ...s,\n      [key]: value,\n    }));\n  };\n\n  const createGame = async () => {\n    try {\n      setLoader('create', true);\n      setLoading(true);\n      const response: PlainObject = await ADMIN_API.createGame({\n        gameName: gameInfo.gameName,\n        language,\n        options,\n      });\n      if (response.data.gameId) {\n        setGameId(response.data.gameId);\n        setUserId(null);\n        setUserName('');\n        setUserAvatarId('');\n        setLocalStorage(updateLocal24hGameIds(getLocalStorage(LATEST_GAME_IDS), response.data.gameId));\n        const baseUrl = window.location.href.split(pathname)[0];\n        copyToClipboard(`${baseUrl}/${response.data.gameId}`);\n      }\n    } catch (e: any) {\n      notification.error({\n        message: translate(\n          'Aplicativo encontrou um erro ao tentar criar o jogo',\n          'The application found an error while trying to create a game',\n          language\n        ),\n        description: JSON.stringify(e.message),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n      setVisibility(false);\n    } finally {\n      setLoading(false);\n      setLoader('create', false);\n    }\n  };\n\n  const onConfirmGame = () => {\n    if (gameId) {\n      navigate(`/${gameId}`);\n    } else {\n      message.info(\n        translate('Péra! O jogo ainda não foi inicializado.', 'Wait! The game has not been created')\n      );\n    }\n  };\n\n  return (\n    <>\n      <Button type=\"primary\" onClick={() => setVisibility(true)} block>\n        <Translate pt=\"Criar\" en=\"Create\" />\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`${translate('Criando novo jogo', 'Creating new game')}: ${gameInfo.title[language]}`}\n          open={isVisible}\n          onCancel={onCloseModal}\n          onOk={onConfirmGame}\n          okButtonProps={{ disabled: Boolean(!gameId) }}\n          maskClosable={false}\n        >\n          <>\n            <Image\n              alt={gameInfo.title[language]}\n              src={`${PUBLIC_URL.BANNERS}${gameInfo.gameName}-${language}.jpg`}\n              fallback={`${PUBLIC_URL.BANNERS}/em-breve-${language}.jpg`}\n              className=\"round-corners\"\n            />\n\n            <Options\n              options={gameInfo.options}\n              disabled={isLoading || Boolean(gameId)}\n              onChangeOptions={onChangeOptions}\n              selectedOptions={options}\n            />\n\n            <Divider />\n\n            {isLoading && (\n              <>\n                <Instruction>\n                  <Translate pt=\"O jogo está sendo criado...\" en=\"The game session is being created\" />\n                </Instruction>\n                <Loading message={translate('Gerando...', 'Generating...')} margin />\n              </>\n            )}\n\n            {gameInfo.version.startsWith('alpha') && (\n              <Alert\n                type=\"warning\"\n                showIcon\n                message={\n                  <Translate\n                    pt=\"Este jogo está em alpha, não o jogue\"\n                    en=\"This game is still in alpha and shouldn't be played\"\n                  />\n                }\n              />\n            )}\n\n            {gameInfo.version.startsWith('beta') && (\n              <Alert\n                type=\"warning\"\n                showIcon\n                message={\n                  <Translate\n                    pt=\"Este jogo está em beta, prossiga com cuidado\"\n                    en=\"This game is in beta and bugs might be everywhere\"\n                  />\n                }\n              />\n            )}\n\n            {Boolean(gameId) ? (\n              <div>\n                <Title className=\"center\">\n                  <Translate pt=\"Jogo inicializado\" en=\"Game Initialized\" />: {gameId}\n                </Title>\n                <Instruction>\n                  <Translate\n                    pt=\"Pressione OK para ser redirecionadx à página do jogo.\"\n                    en=\"Press OK to be redirected to the game page\"\n                  />\n                </Instruction>\n              </div>\n            ) : (\n              <Space className=\"space-container\" align=\"center\">\n                <Button type=\"primary\" size=\"large\" disabled={isLoading} onClick={createGame}>\n                  <Translate pt=\"Criar Jogo\" en=\"Create Game\" />\n                </Button>\n              </Space>\n            )}\n          </>\n        </Modal>\n      )}\n    </>\n  );\n}\n\ntype OptionsProps = {\n  options?: GameInfo['options'];\n  disabled: boolean;\n  onChangeOptions: GenericFunction;\n  selectedOptions: PlainObject;\n};\nfunction Options({ options = [], disabled, onChangeOptions, selectedOptions }: OptionsProps) {\n  return Boolean(options) ? (\n    <div className=\"create-game-modal-options\">\n      <Typography.Title level={5} className=\"create-game-modal-options__title\">\n        <Translate pt=\"Opções:\" en=\"Options:\" />\n      </Typography.Title>\n      {(options ?? []).map((option) => (\n        <Typography.Paragraph key={`option-${option.label}`} className=\"create-game-modal-options__option\">\n          <span className=\"create-game-modal-options__label\">{option.label}</span>\n          <span\n            className={clsx(\n              'create-game-modal-options__off',\n              !selectedOptions[option.key] && 'create-game-modal-options--selected'\n            )}\n          >\n            {option?.off ?? ''}\n          </span>\n          <Switch disabled={disabled} onChange={(e) => onChangeOptions(option.key, e)} />\n          <span\n            className={clsx(\n              'create-game-modal-options__on',\n              selectedOptions[option.key] && 'create-game-modal-options--selected'\n            )}\n          >\n            {option?.on ?? ''}\n          </span>\n          {Boolean(option.description) && (\n            <span className=\"create-game-modal-options__option-description\">{option.description}</span>\n          )}\n        </Typography.Paragraph>\n      ))}\n    </div>\n  ) : (\n    <div className=\"create-game-modal-options create-game-modal-options__no-options\">\n      <Typography.Text>\n        <Translate pt=\"Este jogo não possui customizações\" en=\"This game does not support customizations\" />\n      </Typography.Text>\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Card, Image, Divider, Badge, Space } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { PUBLIC_URL } from 'utils/constants';\nimport { calculateGameAverageDuration, isDevEnv, truncateRecommended } from 'utils/helpers';\n// Components\nimport { RulesModal } from 'components/rules';\nimport { CreateGameModal } from './CreateGameModal';\nimport { GameTags } from 'components/general/GameTags';\nimport { ClockCircleOutlined } from '@ant-design/icons';\n\nconst getVersionColor = (version: string) => {\n  if (version.includes('dev')) {\n    return '#6cb3f6';\n  }\n\n  if (version.includes('alpha')) {\n    return '#F97659';\n  }\n\n  if (version.includes('beta')) {\n    return '#F9D859';\n  }\n\n  const major = Number(version.split('.')[0]);\n\n  if (isNaN(major)) {\n    return '#96A0A3';\n  }\n\n  if (major === 0) {\n    return '#F9D859';\n  }\n\n  if (major === 1) {\n    return '#72D984';\n  }\n\n  if (major === 2) {\n    return '#7CBD51';\n  }\n\n  if (major >= 3) {\n    return '#7CBD51';\n  }\n\n  return '#96A0A3';\n};\n\ntype GameCardProps = {\n  game: GameInfo;\n  isAdmin?: boolean;\n};\n\nexport function GameCard({ game, isAdmin = true }: GameCardProps) {\n  const { language, translate } = useLanguage();\n\n  const duration = calculateGameAverageDuration(game);\n\n  return (\n    <Card\n      key={game.gameName}\n      className=\"game-card\"\n      cover={\n        <Badge.Ribbon text={game.version} color={getVersionColor(game.version)}>\n          <Image\n            alt={game.title[language]}\n            src={`${PUBLIC_URL.BANNERS}${game.gameName}-${language}.jpg`}\n            fallback={`${PUBLIC_URL.BANNERS}/em-breve-${language}.jpg`}\n          />\n        </Badge.Ribbon>\n      }\n    >\n      <div className=\"game-card__contents\">\n        <Space direction=\"vertical\">\n          <Card.Meta\n            title={\n              <span className=\"game-card__title\" title={game.title[language]}>\n                {isDevEnv && `[${game.gameCode}]`} {game.title[language]}\n              </span>\n            }\n            description={`${translate('Baseado em', 'Based on')} ${game.basedOn\n              .split('')\n              .reverse()\n              .join('')}`}\n          />\n\n          <Card.Meta className=\"game-card__description\" description={game.summary[language]} />\n\n          {Boolean(game.rules?.[language]?.length > 1) && (\n            <RulesModal\n              gameInfo={game}\n              buttonProps={{ size: 'small', className: 'game-card__margin-bottom' }}\n            />\n          )}\n\n          <GameTags\n            wrap\n            size={[1, 6]}\n            style={{ display: 'flex' }}\n            gameCode={game.gameCode}\n            tags={game.tags}\n          />\n        </Space>\n      </div>\n\n      <div className=\"game-card__actions\">\n        {game.duration && (\n          <Card.Meta\n            description={\n              <>\n                <ClockCircleOutlined /> {duration.min} min - {duration.max} min (Avg: {duration.ideal} min)\n              </>\n            }\n          />\n        )}\n\n        <Divider className=\"game-card__divider\" />\n\n        <Space direction=\"vertical\">\n          <Card.Meta\n            description={translate(\n              `Para ${game.playerCount.min}-${game.playerCount.max} jogadores`,\n              `For ${game.playerCount.min}-${game.playerCount.max} players`\n            )}\n          />\n\n          <Card.Meta\n            className=\"game-card__player-count\"\n            description={translate(\n              `Melhor com ${game.playerCount.best || '?'} jogadores`,\n              `Best wih ${game.playerCount.best || '?'} players`\n            )}\n          />\n\n          <Card.Meta\n            className=\"game-card__player-count game-card__margin-bottom\"\n            description={translate(\n              `Recomendado jogar com ${truncateRecommended(game.playerCount.recommended)}`,\n              `Recommended with ${truncateRecommended(game.playerCount.recommended)}`\n            )}\n          />\n        </Space>\n\n        {isAdmin && (\n          <div style={{ marginTop: '1rem' }}>\n            {Boolean(game.available[language]) && <CreateGameModal gameInfo={game} />}\n          </div>\n        )}\n      </div>\n    </Card>\n  );\n}\n","import ARTE_RUIM from 'games/arte-ruim/utils/achievements';\n// import BOMBA_RELOGIO from 'games/bomba-relogio/utils/achievements';\n// import CAMINHOS_MAGICOS from 'games/caminhos-magicos/utils/achievements';\n// import CINEGRAFISTAS_AMADORES from 'games/cinegrafistas-amadores/utils/achievements';\n// import COMUNICACAO_ALIENIGENA from 'games/comunicacao-alienigena/utils/achievements';\nimport CONTADORES_HISTORIAS from 'games/contadores-historias/utils/achievements';\n// import CRIMES_HEDIONDOS from 'games/crimes-hediondos/utils/achievements';\n// import CRUZA_PALAVRAS from 'games/cruza-palavras/utils/achievements';\n// import DETETIVES_IMAGINATIVOS from 'games/detetives-imaginativos/utils/achievements';\n// import DILEMA_DOS_ESQUIADORES from 'games/dilema-dos-esquiadores/utils/achievements';\n// import ESPIAO_ENTRE_NOS from 'games/espiao-entre-nos/utils/achievements';\n// import FILEIRA_DE_FATOS from 'games/fileira-de-fatos/utils/achievements';\nimport GALERIA_DE_SONHOS from 'games/galeria-de-sonhos/utils/achievements';\n// import INSTRUMENTOS_CODIFICADOS from 'games/instrumentos-codificados/utils/achievements';\n// import LINHAS_CRUZADAS from 'games/linhas-cruzadas/utils/achievements';\n// import MEGAMIX from 'games/megamix/utils/achievements';\nimport MENTE_COLETIVA from 'games/mente-coletiva/utils/achievements';\nimport NA_RUA_DO_MEDO from 'games/na-rua-do-medo/utils/achievements';\n// import NAUFRAGOS from 'games/naufragos/utils/achievements';\nimport ONDA_TELEPATICA from 'games/onda-telepatica/utils/achievements';\n// import PALHETA_DE_CORES from 'games/palheta-de-cores/utils/achievements';\n// import POLEMICA_DA_VEZ from 'games/polemica-da-vez/utils/achievements';\nimport PORTA_DOS_DESESPERADOS from 'games/porta-dos-desesperados/utils/achievements';\n// import QUEM_NAO_MATA from 'games/quem-nao-mata/utils/achievements';\nimport QUEM_SOU_EU from 'games/quem-sou-eu/utils/achievements';\n// import RETRATO_FALADO from 'games/retrato-falado/utils/achievements';\n// import SONHOS_PESADELOS from 'games/sonhos-pesadelos/utils/achievements';\n// import SUPER_CAMPEONATO from 'games/super-campeonato/utils/achievements';\n// import TESTEMUNHA_OCULAR from 'games/testemunha-ocular/utils/achievements';\n// import TREVO_DA_SORTE from 'games/trevo-da-sorte/utils/achievements';\n// import UE_SO_ISSO from 'games/ue-so-isso/utils/achievements';\n// import VAMOS_AO_CINEMA from 'games/vamos-ao-cinema/utils/achievements';\n// import VENDAVAL_DE_PALPITE from 'games/vendaval-de-palpite/utils/achievements';\n// import TA_NA_CARA from 'games/ta-na-cara/utils/achievements';\n\nexport const ACHIEVEMENTS_DICT: Record<GameName, AchievementReference | null> = {\n  'arte-ruim': ARTE_RUIM,\n  'bomba-relogio': null,\n  'caminhos-magicos': null,\n  'cinegrafistas-amadores': null,\n  'comunicacao-alienigena': null,\n  'contadores-historias': CONTADORES_HISTORIAS,\n  'crimes-hediondos': null,\n  'cruza-palavras': null,\n  'detetives-imaginativos': null,\n  'dilema-dos-esquiadores': null,\n  'espiao-entre-nos': null,\n  'fileira-de-fatos': null,\n  'galeria-de-sonhos': GALERIA_DE_SONHOS,\n  'instrumentos-codificados': null,\n  'linhas-cruzadas': null,\n  megamix: null,\n  'mente-coletiva': MENTE_COLETIVA,\n  'na-rua-do-medo': NA_RUA_DO_MEDO,\n  naufragos: null,\n  'onda-telepatica': ONDA_TELEPATICA,\n  'palheta-de-cores': null,\n  'polemica-da-vez': null,\n  'porta-dos-desesperados': PORTA_DOS_DESESPERADOS,\n  'quem-nao-mata': null,\n  'quem-sou-eu': QUEM_SOU_EU,\n  'retrato-falado': null,\n  'sonhos-pesadelos': null,\n  'super-campeonato': null,\n  'ta-na-cara': null,\n  'testemunha-ocular': null,\n  'trevo-da-sorte': null,\n  'ue-so-isso': null,\n  'vamos-ao-cinema': null,\n  'vendaval-de-palpite': null,\n};\n\nexport default ACHIEVEMENTS_DICT;\n","import GAME_LIST from 'utils/info';\n\n/**\n * Converts a timestamp (number of milliseconds since January 1, 1970, 00:00:00 UTC) to a string\n * representation of the date in the format \"YYYY/MM/DD HH:MM\".\n * @param timestamp - The timestamp to convert to a date string.\n * @returns A string representation of the date in the format \"YYYY/MM/DD HH:MM\".\n */\nexport function timestampToDate(timestamp: number, includeTime?: false): string {\n  const date = new Date(timestamp);\n  const year = date.getFullYear();\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  const day = date.getDate().toString().padStart(2, '0');\n\n  if (!includeTime) {\n    return `${year}/${month}/${day}`;\n  }\n  const hours = date.getHours().toString().padStart(2, '0');\n  const minutes = date.getMinutes().toString().padStart(2, '0');\n  return `${year}/${month}/${day} ${hours}:${minutes}`;\n}\n\n/**\n * Converts a duration in milliseconds to the number of hours.\n *\n * @param duration - The duration to convert, in milliseconds.\n * @returns The number of whole hours represented by the duration.\n */\nexport function durationToHours(duration: number): number {\n  const minutes = Math.floor(duration / 60000);\n  const hours = Math.round(minutes / 60);\n  if (hours < 1) {\n    return minutes / 60;\n  }\n  return hours;\n}\n\nexport const playableGames = Object.entries(GAME_LIST).reduce(\n  (acc: Record<GameName, GameInfo>, [gameName, info]) => {\n    if (info.version.includes('.')) {\n      acc[gameName] = info;\n    }\n    return acc;\n  },\n  {}\n);\n\nexport const availableGamesCount = Object.keys(playableGames).length;\n","// Components\nimport { TextHighlight } from 'components/text';\n\ntype UserNameProps = {\n  names?: string[];\n};\n\nexport function UserName({ names }: UserNameProps) {\n  if (!names || names.length === 0) {\n    return <></>;\n  }\n\n  return (\n    <>\n      : <TextHighlight>{names.at(-1)}</TextHighlight>\n    </>\n  );\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { Card, Col, Statistic, StatisticProps } from 'antd';\n// Components\nimport { IconAvatar } from 'components/avatars';\n\ntype StatisticCardProps = {\n  icon: ReactNode;\n  description?: ReactNode;\n  disabled?: boolean;\n} & StatisticProps;\n\nexport function StatisticCard({ icon, title, value, disabled, description, ...rest }: StatisticCardProps) {\n  return (\n    <Col xs={24} sm={8} md={8} lg={6}>\n      <Card bordered={false} size=\"small\" className=\"me__card-statistic\">\n        <Statistic\n          title={<>{title}</>}\n          value={disabled ? 0 : value}\n          prefix={<IconAvatar size=\"small\" icon={icon} />}\n          {...rest}\n        />\n      </Card>\n    </Col>\n  );\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { Card, Col, ColProps } from 'antd';\n\ntype InfoCardProps = {\n  title: ReactNode;\n  children: ReactNode;\n} & Pick<ColProps, 'xs' | 'sm' | 'md' | 'lg'>;\n\nexport function InfoCard({ title, children, xs, sm, md, lg }: InfoCardProps) {\n  return (\n    <Col xs={xs ?? 24} sm={sm ?? 12} md={md ?? 8} lg={lg ?? 6}>\n      <Card title={title} bordered={false} size=\"small\" className=\"me__card-info\">\n        {children}\n      </Card>\n    </Col>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Popover } from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\n// Components\nimport { DualTranslate } from 'components/language';\nimport { Medal } from './Medal';\n\ntype AchievementProps = {\n  achievement: AchievementInfo;\n  value?: number;\n};\n\nconst unknownText = { pt: 'Desconhecido', en: 'Unknown' };\n\nexport function Achievement({ achievement, value }: AchievementProps) {\n  return (\n    <div className={clsx('achievement', Boolean(value) && 'achievement--achieved')}>\n      <div className=\"achievement__medal\">\n        <Medal id={achievement.icon} className={clsx(!value && 'achievement__disabled-icon')} />\n      </div>\n      <h4 className=\"achievement__title\">\n        <DualTranslate>{achievement.title ?? unknownText}</DualTranslate>\n      </h4>\n\n      {Boolean(achievement.description) && (\n        <div className=\"achievement__description\">\n          <Popover\n            content={\n              <>\n                <DualTranslate>{achievement.description ?? unknownText}</DualTranslate> ({value ?? 0})\n              </>\n            }\n          >\n            <Button icon={<QuestionCircleOutlined />} shape=\"circle\" type=\"text\" size=\"small\" />\n          </Popover>\n        </div>\n      )}\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Col, Row } from 'antd';\n// Components\nimport { Achievement } from 'components/general/Achievement';\n\ntype UserAchievementsProps = {\n  reference: AchievementReference;\n  achievements: Record<AchievementKey, number>;\n};\n\nexport function UserAchievements({ reference, achievements }: UserAchievementsProps) {\n  return (\n    <Row gutter={8} align=\"stretch\">\n      {Object.entries(reference).map(([achievementKey, info]) => {\n        return (\n          <Col xs={12} sm={8} md={8} lg={4} key={achievementKey}>\n            <Achievement achievement={info} value={achievements?.[achievementKey]} />\n          </Col>\n        );\n      })}\n    </Row>\n  );\n}\n","// Ant Design Resources\nimport { Col, Rate, Row } from 'antd';\n// Utils\nimport { durationToHours, timestampToDate } from '../utils';\n// Icons\nimport { PlayersIcon } from 'icons/PlayersIcon';\nimport { TrophyIcon } from 'icons/TrophyIcon';\nimport { SkullIcon } from 'icons/SkullIcon';\nimport { ClockIcon } from 'icons/ClockIcon';\nimport { DiceIcon } from 'icons/DiceIcon';\nimport { CalendarIcon } from 'icons/CalendarIcon';\nimport { SealOfApprovalIcon } from 'icons/SealOfApprovalIcon';\n// Components\nimport { GameBanner } from 'components/general/GameBanner';\nimport { DualTranslate, Translate } from 'components/language';\nimport { InfoCard } from './InfoCard';\nimport { StatisticCard } from './StatisticCard';\nimport { UserAchievements } from './UserAchievements';\n\ntype GameUserStatisticsProps = {\n  game: GameUserStatistics;\n  info: GameInfo;\n  achievements?: AchievementReference | null;\n};\n\nconst leftColProps = { xs: 24, sm: 24, md: 24, lg: 24 };\n\nexport function GameStatistics({ game, info, achievements }: GameUserStatisticsProps) {\n  return (\n    <>\n      <Row gutter={8}>\n        <Col xs={24} sm={8} md={8} lg={6}>\n          {/* <Row gutter={8}> */}\n          <Col>\n            <GameBanner title={info.title} gameName={game.gameName} className=\"me__game-banner\" />\n          </Col>\n          <InfoCard title={<Translate pt=\"Descrição\" en=\"Summary\" />} {...leftColProps}>\n            <DualTranslate>{info.summary}</DualTranslate>\n          </InfoCard>\n          <InfoCard title={<Translate pt=\"Sua avaliação\" en=\"Your Rating\" />} {...leftColProps}>\n            <Rate value={game.rating} />\n          </InfoCard>\n          {/* </Row> */}\n        </Col>\n        <Col xs={24} sm={16} md={16} lg={18}>\n          <Row gutter={8}>\n            <InfoCard title={<Translate pt=\"Nome Popular\" en=\"Popular Name\" />}>\n              <DualTranslate>{info.popularName}</DualTranslate>\n            </InfoCard>\n\n            <StatisticCard\n              title={<Translate pt=\"Total de Partidas\" en=\"Total Plays\" />}\n              icon={<DiceIcon />}\n              value={game.plays}\n            />\n\n            {game.isWinnable && (\n              <StatisticCard\n                title={<Translate pt=\"Vitórias\" en=\"Victories\" />}\n                value={(game.win / game.plays) * 100}\n                icon={<TrophyIcon />}\n                precision={0}\n                suffix=\"%\"\n                disabled={!Boolean(game.plays)}\n              />\n            )}\n\n            {game.isWinnable && info.tags.includes('competitive') && (\n              <StatisticCard\n                title={<Translate pt=\"Partidas em Último\" en=\"Dead Last\" />}\n                value={(game.last / game.plays) * 100}\n                icon={<SkullIcon />}\n                precision={0}\n                suffix=\"%\"\n                disabled={!Boolean(game.plays)}\n              />\n            )}\n\n            <StatisticCard\n              title={<Translate pt=\"Tempo Jogado\" en=\"Play Duration\" />}\n              value={durationToHours(game.totalPlayDuration)}\n              icon={<ClockIcon />}\n              suffix={<Translate pt=\"horas\" en=\"hours\" />}\n              precision={1}\n            />\n\n            <StatisticCard\n              title={<Translate pt=\"Partida Mais Recente\" en=\"Latest Play\" />}\n              value={timestampToDate(game.latestPlay.startedAt)}\n              icon={<CalendarIcon />}\n            />\n\n            <StatisticCard\n              title={<Translate pt=\"Primeira Partida\" en=\"First Play\" />}\n              value={timestampToDate(game.firstPlay.startedAt)}\n              icon={<CalendarIcon />}\n            />\n\n            <StatisticCard\n              title={<Translate pt=\"Média de Jogadores\" en=\"Average Player Count\" />}\n              value={game.averagePlayerCount}\n              icon={<PlayersIcon />}\n              suffix={<Translate pt=\"jogadores\" en=\"players\" />}\n              precision={0}\n            />\n\n            {Boolean(achievements) && (\n              <StatisticCard\n                title={<Translate pt=\"Total de Medalhas\" en=\"Total Achievements\" />}\n                value={Object.keys(game.achievements).length}\n                icon={<SealOfApprovalIcon />}\n                suffix={`/${Object.keys(achievements!).length}`}\n              />\n            )}\n          </Row>\n\n          {Boolean(achievements) && (\n            <UserAchievements reference={achievements!} achievements={game.achievements} />\n          )}\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import clsx from 'clsx';\nimport { useMemo, useState } from 'react';\n// Ant Design Resources\nimport { Badge, Col, Modal, Row } from 'antd';\n// Icons\nimport { SpeechBubbleAcceptedIcon } from 'icons/SpeechBubbleAcceptedIcon';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { TransparentButton } from 'components/buttons';\nimport { GameBanner } from 'components/general/GameBanner';\nimport { DualTranslate, Translate } from 'components/language';\nimport { GameCard } from 'pages/Hub/components/GameCard';\n\ntype GameUserStatisticsProps = {\n  info: GameInfo[];\n  games: Record<string, GameUserStatistics>;\n};\n\nexport function GameCheckCard({ info, games }: GameUserStatisticsProps) {\n  const [open, setOpen] = useState(false);\n  const [activeGameName, setActiveGame] = useState<GameName>('arte-ruim');\n\n  const activeGame: GameInfo = useMemo(() => {\n    return info.find((g) => g.gameName === activeGameName) ?? info[0];\n  }, [activeGameName, info]);\n\n  const activateGameCard = (gameName: GameName) => {\n    setOpen(true);\n    setActiveGame(gameName);\n  };\n\n  const modal = (\n    <Modal\n      open={open}\n      title={<DualTranslate>{activeGame.title}</DualTranslate>}\n      cancelText={<Translate pt=\"Fechar\" en=\"Close\" />}\n      onCancel={() => setOpen(false)}\n      okButtonProps={{\n        style: { display: 'none' },\n      }}\n    >\n      <GameCard game={activeGame} isAdmin={false} />\n    </Modal>\n  );\n\n  return (\n    <Row gutter={8}>\n      {modal}\n      {info.map((gameInfo) => (\n        <Col xs={12} sm={6} md={6} lg={3} key={`info-${gameInfo.gameName}`}>\n          <TransparentButton onClick={() => activateGameCard(gameInfo.gameName)}>\n            {Boolean(games[gameInfo.gameName]) ? (\n              <Badge count={<IconAvatar icon={<SpeechBubbleAcceptedIcon />} size=\"small\" />}>\n                <GameBanner\n                  title={gameInfo.title}\n                  gameName={gameInfo.gameName}\n                  className={clsx('me__game-bingo-banner', 'me__game-bingo-banner--played')}\n                  preview={false}\n                />\n              </Badge>\n            ) : (\n              <GameBanner\n                title={gameInfo.title}\n                gameName={gameInfo.gameName}\n                className={clsx('me__game-bingo-banner')}\n                preview={false}\n              />\n            )}\n          </TransparentButton>\n        </Col>\n      ))}\n    </Row>\n  );\n}\n","import { orderBy } from 'lodash';\nimport { ReactNode, useMemo } from 'react';\n// Ant Design Resources\nimport { Layout, Row, Divider, Collapse } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport GAME_LIST from 'utils/info';\nimport ACHIEVEMENTS_DICT from 'utils/achievements';\nimport { availableGamesCount, durationToHours, playableGames, timestampToDate } from './utils';\n// Icons\nimport { TrophyIcon } from 'icons/TrophyIcon';\nimport { SealOfApprovalIcon } from 'icons/SealOfApprovalIcon';\nimport { UserStatsIcon } from 'icons/UserStatsIcon';\nimport { SkullIcon } from 'icons/SkullIcon';\nimport { DiceIcon } from 'icons/DiceIcon';\nimport { CatalogIcon } from 'icons/CatalogIcon';\nimport { ClockIcon } from 'icons/ClockIcon';\nimport { CalendarIcon } from 'icons/CalendarIcon';\nimport { PlayersIcon } from 'icons/PlayersIcon';\n// Components\nimport { DualTranslate, LanguageSwitch, Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { UserName } from './components/UserName';\nimport { Avatar, IconAvatar } from 'components/avatars';\nimport { StatisticCard } from './components/StatisticCard';\nimport { GameStatistics } from './components/GameStatistics';\nimport { InfoCard } from './components/InfoCard';\nimport { GameCheckCard } from './components/GameCheckCard';\n// Sass\nimport './Me.scss';\n\ntype MeContentProps = {\n  user: Me;\n  additionalContent: ReactNode;\n};\n\nexport function MeContent({ user, additionalContent }: MeContentProps) {\n  const { language } = useLanguage();\n\n  // Count achievable achievements only from the games the user has played\n  const achievementsCount = useMemo(() => {\n    return Object.entries(ACHIEVEMENTS_DICT).reduce((acc, [gameName, references]) => {\n      if (references && user.games?.[gameName]) {\n        return acc + Object.keys(references).length;\n      }\n      return acc;\n    }, 0);\n  }, [user.games]);\n\n  const games = useMemo(\n    () => orderBy(Object.values(user.games), (game) => GAME_LIST[game.gameName].title[language]),\n    [user.games, language]\n  );\n\n  const alphabetizedPlayableGames = useMemo(\n    () => orderBy(Object.values(playableGames), `title.${language}`),\n    [language]\n  );\n\n  return (\n    <Layout className=\"me__container\">\n      <Layout.Content className=\"container me__content\">\n        {additionalContent}\n\n        <header className=\"me__header\">\n          <Title size=\"small\" level={1} align=\"left\">\n            <IconAvatar icon={<UserStatsIcon />} size=\"large\" />\n            <Translate pt=\"Página do Usuário\" en=\"User Page\" /> <UserName names={user.names} />\n          </Title>\n          <LanguageSwitch />\n        </header>\n\n        <Row gutter={8}>\n          <InfoCard title={<Translate pt=\"Nomes usados\" en=\"Used Names\" />}>{user.names.join(', ')}</InfoCard>\n\n          <InfoCard title={<Translate pt=\"Avatares preferidos\" en=\"Favorite Avatars\" />}>\n            {user.avatars.map((avatarId) => (\n              <Avatar key={avatarId} id={avatarId} shape=\"square\" />\n            ))}\n          </InfoCard>\n        </Row>\n\n        <Divider />\n\n        <Row gutter={8}>\n          <StatisticCard\n            title={<Translate pt=\"Total de Partidas\" en=\"Total Plays\" />}\n            icon={<DiceIcon />}\n            value={user.statistics.plays}\n          />\n\n          <StatisticCard\n            title={<Translate pt=\"Jogos\" en=\"Played Games\" />}\n            icon={<CatalogIcon />}\n            value={user.statistics.uniqueGamesPlayed}\n            suffix={`/${availableGamesCount}`}\n          />\n\n          <StatisticCard\n            title={<Translate pt=\"Vitórias\" en=\"Victories\" />}\n            value={(user.statistics.win / user.statistics.winnableGames) * 100}\n            icon={<TrophyIcon />}\n            precision={0}\n            suffix=\"%\"\n            disabled={!Boolean(user.statistics.winnableGames)}\n          />\n\n          <StatisticCard\n            title={<Translate pt=\"Jogos em Último\" en=\"Dead Last\" />}\n            value={(user.statistics.last / user.statistics.winnableGames) * 100}\n            icon={<SkullIcon />}\n            precision={0}\n            suffix=\"%\"\n            disabled={!Boolean(user.statistics.winnableGames)}\n          />\n\n          <StatisticCard\n            title={<Translate pt=\"Tempo Jogado\" en=\"Play Duration\" />}\n            value={durationToHours(user.statistics.totalPlayDuration)}\n            icon={<ClockIcon />}\n            suffix={<Translate pt=\"horas\" en=\"hours\" />}\n            precision={1}\n          />\n\n          <StatisticCard\n            title={<Translate pt=\"Partida Mais Recente\" en=\"Latest Play\" />}\n            value={timestampToDate(user.statistics.latestPlay.startedAt)}\n            icon={<CalendarIcon />}\n          />\n\n          <StatisticCard\n            title={<Translate pt=\"Média de Jogadores\" en=\"Average Player Count\" />}\n            value={user.statistics.averagePlayerCount}\n            icon={<PlayersIcon />}\n            precision={1}\n            suffix={<Translate pt=\"jogadores\" en=\"players\" />}\n          />\n\n          <StatisticCard\n            title={<Translate pt=\"Total de Medalhas\" en=\"Total Achievements\" />}\n            value={user.statistics.achievements}\n            icon={<SealOfApprovalIcon />}\n            suffix={`/${achievementsCount}`}\n          />\n        </Row>\n\n        <Divider />\n\n        <Title size=\"x-small\" level={2} align=\"left\">\n          <Translate pt=\"Jogos\" en=\"Games\" />\n        </Title>\n\n        <GameCheckCard info={alphabetizedPlayableGames} games={user.games} />\n\n        <Divider />\n\n        <Title size=\"x-small\" level={2} align=\"left\">\n          <Translate pt=\"Estatísticas Por Jogo\" en=\"Per Game Stats\" />\n        </Title>\n\n        <Collapse>\n          {games.map((game) => {\n            const info = GAME_LIST[game.gameName];\n            return (\n              <Collapse.Panel header={<DualTranslate>{info.title}</DualTranslate>} key={game.gameName}>\n                <GameStatistics\n                  key={game.gameName}\n                  game={game}\n                  info={info}\n                  achievements={ACHIEVEMENTS_DICT[game.gameName]}\n                />\n              </Collapse.Panel>\n            );\n          })}\n        </Collapse>\n      </Layout.Content>\n    </Layout>\n  );\n}\n"],"names":["GameBanner","title","gameName","className","preview","language","useLanguage","alt","src","PUBLIC_URL","fallback","GameTags","tags","gameCode","rest","sortedTags","forEach","tag","undefined","TAG_DICT","index","length","push","filter","v","Boolean","sortTags","wrap","map","color","label","achievementsReference","BEST_ARTIST","icon","pt","en","description","WORST_ARTIST","SOLITARY_WINNER","SOLITARY_LOSER","TABLE_VOTES","MOST_DECEIVING","WORST_CARDS","WORST_CLUES","EASIEST_CLUES","HARDEST_CLUES","MOST_MATCHES","FEWEST_MATCHES","MOST_FULL_MATCHES","MOST_VISITS","LEAST_ADVENTUROUS","MOST_ADVENTUROUS","MOST_PAIRS","MOST_OUT_OF_THE_BOX","MOST_LONELY","POOREST_CHOICES","SMARTEST_CHOICES","LEAST_MATCHES","MOST_DEAD","BEST_TRAVELER","BRAVEST","LUCKIEST","CANDY_LOSER","MOST_SCARED","MOST_HOUSES","MOST_JACKPOTS","MOST_SIDEWALK","MOST_ACCURATE","LEAST_ACCURATE","MOST_EXACT","BEST_PSYCHIC","MOST_ZEROS","ACHIEVEMENTS","MOST_GLYPHS","LEAST_GLYPHS","MOST_POSITIVE","LEAST_POSITIVE","MOST_NEGATIVE","LEAST_NEGATIVE","SINGLE_ICON","TrophyIcon","props","xmlns","viewBox","fill","d","cx","cy","r","updateLocal24hGameIds","latestGameIds","newId","now","Date","past24Hours","cleanedUpIds","Object","entries","reduce","acc","key","timestamp","LATEST_GAME_IDS","CreateGameModal","gameInfo","navigate","useNavigate","pathname","useLocation","useCopyToClipboard","state","copyToClipboard","translate","setLoader","useLoading","useLocalStorage","getLocalStorage","setLocalStorage","useState","isVisible","setVisibility","isLoading","setLoading","gameId","setGameId","useGlobalState","setUserId","setUserName","setUserAvatarId","options","setOptions","useEffect","value","message","onCloseModal","useCallback","createGame","ADMIN_API","response","data","baseUrl","window","location","href","split","notification","JSON","stringify","placement","console","error","type","onClick","block","open","onCancel","onOk","okButtonProps","disabled","maskClosable","Options","onChangeOptions","s","selectedOptions","margin","version","startsWith","showIcon","align","size","level","option","clsx","off","onChange","e","on","getVersionColor","includes","major","Number","isNaN","GameCard","game","isAdmin","duration","calculateGameAverageDuration","cover","text","direction","isDevEnv","basedOn","reverse","join","summary","rules","buttonProps","style","display","ClockCircleOutlined","min","max","ideal","playerCount","best","truncateRecommended","recommended","marginTop","available","ARTE_RUIM","CONTADORES_HISTORIAS","GALERIA_DE_SONHOS","megamix","MENTE_COLETIVA","NA_RUA_DO_MEDO","naufragos","ONDA_TELEPATICA","PORTA_DOS_DESESPERADOS","QUEM_SOU_EU","timestampToDate","includeTime","date","year","getFullYear","month","getMonth","toString","padStart","day","getDate","hours","getHours","minutes","getMinutes","durationToHours","Math","floor","round","playableGames","GAME_LIST","info","availableGamesCount","keys","UserName","names","at","StatisticCard","xs","sm","md","lg","bordered","prefix","InfoCard","children","unknownText","Achievement","achievement","Medal","id","content","QuestionCircleOutlined","shape","UserAchievements","reference","achievements","gutter","achievementKey","leftColProps","GameStatistics","rating","popularName","DiceIcon","plays","isWinnable","win","precision","suffix","last","SkullIcon","totalPlayDuration","ClockIcon","latestPlay","startedAt","CalendarIcon","firstPlay","averagePlayerCount","PlayersIcon","SealOfApprovalIcon","GameCheckCard","games","setOpen","activeGameName","setActiveGame","activeGame","useMemo","find","g","modal","cancelText","count","SpeechBubbleAcceptedIcon","MeContent","user","additionalContent","achievementsCount","ACHIEVEMENTS_DICT","references","orderBy","values","alphabetizedPlayableGames","UserStatsIcon","avatars","avatarId","statistics","CatalogIcon","uniqueGamesPlayed","winnableGames","header"],"sourceRoot":""}