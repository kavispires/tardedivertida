{"version":3,"file":"static/js/2764.6a0287f9.chunk.js","mappings":"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","sources":["components/debug/DebugOnly.tsx","components/debug/DevButton.tsx","components/general/AutoNextPhase.tsx","components/host/HostButton.tsx","components/host/HostOnlyContainer.tsx","components/host/HostNextPhaseButton.tsx","components/host/HostOnlyButton.tsx","components/metrics/MetricHighlight.tsx","components/phases/PhaseContainer.tsx","components/phases/PhaseAnnouncement.tsx","components/phases/lobby/CloudBackground.tsx","components/phases/lobby/StepJoin.tsx","mock/players.ts","components/phases/lobby/AvatarSelection.tsx","components/phases/lobby/Settings.tsx","components/phases/lobby/UsualAvatarsSelection.tsx","components/phases/lobby/StepInfo.tsx","hooks/useAddPlayer.ts","components/phases/lobby/StepWaiting.tsx","components/phases/lobby/JoinedPlayers.tsx","components/phases/lobby/LobbyRules.tsx","components/phases/PhaseLobby.tsx","components/phases/PhasePlaceholder.tsx","components/phases/PhaseRules.tsx","components/phases/PhaseSetup.tsx","components/phases/PhaseTimerReset.tsx","components/players/ReadyPlayersBar.tsx","components/players/TurnOrder.tsx","components/players/WaitingRoom.tsx","components/players/reorder.tsx","hooks/useGameState.ts","hooks/useFirestoreDocument.ts","components/players/PlayersStatusBar.tsx","components/drawers/_internal/SectionMeta.tsx","components/drawers/_internal/SectionRankedPlayers.tsx","components/drawers/_internal/BlurOptions.tsx","components/drawers/_internal/SectionSettings.tsx","components/drawers/GameInfoDrawer.tsx","components/session/RedirectSession.tsx","components/session/Session.tsx","hooks/useIdleRedirect.ts","components/steps/Step.tsx","components/steps/StepSwitcher.tsx","components/timers/TimerClock.tsx","components/timers/TimerBar.tsx","components/timers/TimedTimerBar.tsx","components/timers/TimedTimerClock.tsx","components/timers/WaitingTime.tsx","hooks/useBlurCards.ts","hooks/useDevFeatures.ts","hooks/useGameActionRequest.ts","hooks/useHost.ts","hooks/useMock.ts","hooks/useStep.ts","hooks/useTDBaseUrl.ts","hooks/useTemporarilyHidePlayersBar.ts","hooks/useUser.ts","utils/phases.ts","utils/speech.ts"],"sourcesContent":["import type { ReactNode } from 'react';\n// Hooks\nimport { useDevFeatures } from 'hooks/useDevFeatures';\n\ntype DebugOnlyProps = {\n  dev?: boolean;\n  devOnly?: boolean;\n  div?: boolean;\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n};\n\n/**\n * Wrapper component for information only displayed if the debug mode is on\n * @param props\n * @returns\n */\nexport function DebugOnly({ children, div = false, dev = false, devOnly = false }: DebugOnlyProps) {\n  const { isDebugEnabled, isDevEnv } = useDevFeatures();\n\n  if (devOnly) {\n    if (div && isDevEnv) {\n      return <div>{children}</div>;\n    }\n\n    return isDevEnv ? <> {children}</> : <></>;\n  }\n\n  if ((dev && isDevEnv) || isDebugEnabled) {\n    if (div) {\n      return <div>{children}</div>;\n    }\n    return <>{children}</>;\n  }\n  return <></>;\n}\n","// Ant Design Resources\nimport { BugFilled } from '@ant-design/icons';\nimport { Button, type ButtonProps } from 'antd';\n// Internal\nimport { DebugOnly } from './DebugOnly';\n\n/**\n * Button only available during dev only\n * @returns\n */\nexport function DevButton({ children, ghost, type, ...rest }: ButtonProps) {\n  return (\n    <DebugOnly devOnly>\n      <Button icon={<BugFilled />} ghost={ghost ?? true} type={type ?? 'primary'} {...rest}>\n        {children}\n      </Button>\n    </DebugOnly>\n  );\n}\n","// Types\nimport type { GamePlayers } from 'types/player';\n// Utils\nimport { isEverybodyReady } from 'utils/helpers';\n// Components\nimport { HostNextPhaseButton } from 'components/host';\nimport { Translate } from 'components/language';\n\ntype AutoNextPhaseProps = {\n  /**\n   * Game players objects\n   */\n  players: GamePlayers;\n};\n\n/**\n * Add this component to a game if you want the game to automatically go to the next phase when all players are ready.\n */\nexport function AutoNextPhase({ players }: AutoNextPhaseProps) {\n  if (!isEverybodyReady(players)) return <></>;\n\n  return (\n    <HostNextPhaseButton round={{ current: -1, total: 10, forceLastRound: false }} autoTriggerTime={20}>\n      <Translate pt=\"Continuar\" en=\"Next\" />\n    </HostNextPhaseButton>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { RocketOutlined } from '@ant-design/icons';\n// Sass\nimport './HostButton.scss';\nimport { useCountdown } from 'hooks/useCountdown';\nimport { SendButton } from 'components/buttons';\nimport type { ComponentProps } from 'react';\n\n/**\n * Host Button (orange with rocket icon)\n * Important: This button is NOT guarded by HostOnlyContainer, and it must be wrapped by it.\n */\nexport function HostButton({\n  icon,\n  ghost = true,\n  className = '',\n  ...rest\n}: ComponentProps<typeof SendButton>) {\n  return (\n    <SendButton\n      icon={icon ?? <RocketOutlined />}\n      ghost={ghost}\n      className={clsx('host-button', className)}\n      {...rest}\n    />\n  );\n}\n\ntype HostTimedButtonProps = ComponentProps<typeof SendButton> & {\n  /**\n   * Duration to call onExpire in seconds\n   */\n  duration?: number;\n  /**\n   * Function to be called when the time expires\n   */\n  onExpire?: () => void;\n  /**\n   * Flag indicating if the timer should be hidden (this cancels the onExpire function)\n   */\n  hideTimer?: boolean;\n};\n\n/**\n * Timed Host Button (orange with rocket icon)\n * Important: This button is NOT  guarded by HostOnlyContainer, and it must be wrapped by it.\n */\nexport function HostTimedButton({\n  duration = 10,\n  onExpire,\n  hideTimer,\n  children,\n  ...rest\n}: HostTimedButtonProps) {\n  const { timeLeft } = useCountdown({\n    duration,\n    autoStart: true,\n    onExpire,\n    disabled: hideTimer,\n  });\n\n  return (\n    <HostButton {...rest}>\n      {children}\n      {!hideTimer && <span className=\"host-button-timer\">{timeLeft}</span>}\n    </HostButton>\n  );\n}\n","import clsx from 'clsx';\nimport type { ReactNode } from 'react';\n// Ant Design Resources\nimport { RocketOutlined } from '@ant-design/icons';\nimport { Space, type SpaceProps } from 'antd';\n// Hooks\nimport { useHost } from 'hooks/useHost';\n// Sass\nimport './HostOnlyContainer.scss';\n\ninterface HostOnlyContainerProps extends SpaceProps {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Custom label\n   */\n  label?: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n}\n\nexport const HostOnlyContainer = ({ children, label, className = '', ...rest }: HostOnlyContainerProps) => {\n  const isHost = useHost();\n\n  if (!isHost) return <></>;\n\n  return (\n    <fieldset className={clsx('host-only-container', className)}>\n      <legend className=\"host-only-container__legend\">\n        <RocketOutlined /> {label ?? 'Host Controls'}\n      </legend>\n      <Space {...rest}>{children}</Space>\n    </fieldset>\n  );\n};\n","import clsx from 'clsx';\nimport { type ReactNode, useEffect } from 'react';\n// Ant Design Resources\nimport { PauseOutlined, PlayCircleOutlined } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\n// Types\nimport type { GameRound } from 'types/game';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useHost } from 'hooks/useHost';\nimport { useHostActionRequest } from 'hooks/useHostActionRequest';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\n// Services\nimport { HOST_API_ACTIONS } from 'services/adapters';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { Translate } from 'components/language';\nimport { WaitingTime } from 'components/timers';\n// Internal\nimport { HostOnlyContainer } from './HostOnlyContainer';\nimport { HostButton } from './HostButton';\n\nfunction ButtonLabel({ round }: { round?: GameRound }) {\n  if (!round || round.current === round.total || round.forceLastRound) {\n    return <Translate pt=\"Tela de Game Over\" en=\"Game Over Screen\" />;\n  }\n\n  return <Translate pt=\"Próxima rodada\" en=\"Next Round\" />;\n}\n\ntype HostNextPhaseButtonProps = {\n  /**\n   * The button content, if not present \"Next Round is used instead\"\n   */\n  children?: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Game round information used to determine if it is game over\n   */\n  round?: GameRound;\n  /**\n   * Time to auto trigger the button in seconds (default: 45 seconds)\n   */\n  autoTriggerTime?: number;\n  /**\n   *\n   */\n  withWaitingTimeBar?: boolean;\n};\n\n/**\n * Button only available to the Host to go to the next phase.\n * It will be auto-triggered after 60 seconds unless value is overridden with a 0\n * It may be paused\n */\nexport function HostNextPhaseButton({\n  round,\n  autoTriggerTime = 30,\n  children,\n  withWaitingTimeBar,\n}: HostNextPhaseButtonProps) {\n  const isHost = useHost();\n  const { translate } = useLanguage();\n  const { isKeyLoading } = useLoading();\n  const isLoading = isKeyLoading('go-to-next-phase');\n\n  const onGoToNextPhase = useHostActionRequest({\n    actionName: 'go-to-next-phase',\n    successMessage: translate('Funcionou, próxima fase!', 'It worked, next phase!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar ir para a próxima fase',\n      'The application found an error while trying to go to the next phase',\n    ),\n  });\n\n  const handleClick = () => onGoToNextPhase({ action: HOST_API_ACTIONS.GO_TO_NEXT_PHASE });\n\n  const hasTimer = Boolean(autoTriggerTime);\n\n  const { timeLeft, isRunning, pause, resume } = useCountdown({\n    autoStart: autoTriggerTime > 0,\n    duration: autoTriggerTime,\n    onExpire: handleClick,\n    disabled: !isHost || !hasTimer,\n  });\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: only watch for isLoading\n  useEffect(() => {\n    if (isLoading) {\n      pause();\n    }\n    return () => pause();\n  }, [isLoading]);\n\n  return (\n    <>\n      {withWaitingTimeBar && <WaitingTime duration={autoTriggerTime} timeLeft={timeLeft} />}\n\n      <HostOnlyContainer\n        label=\"Host Action\"\n        className={clsx('host-only-container--float', getAnimationClass('slideInUp'))}\n      >\n        <Tooltip title=\"Pause\">\n          <HostButton\n            icon={isRunning ? <PauseOutlined /> : <PlayCircleOutlined />}\n            onClick={isRunning ? pause : resume}\n            disabled={isLoading}\n          />\n        </Tooltip>\n        <HostButton\n          disabled={isLoading}\n          onClick={handleClick}\n          icon={\n            hasTimer && (\n              <span\n                className={clsx(\n                  'host-button-timer',\n                  !isRunning &&\n                    getAnimationClass('flash', {\n                      speed: 'slow',\n                      infinite: true,\n                    }),\n                )}\n              >\n                {timeLeft}\n              </span>\n            )\n          }\n        >\n          {children ?? <ButtonLabel round={round} />}\n        </HostButton>\n      </HostOnlyContainer>\n    </>\n  );\n}\n","import type { ReactNode } from 'react';\n// Ant Design Resources\nimport type { ButtonProps } from 'antd';\n// Internal\nimport { HostButton, HostOnlyContainer } from './index';\n\ntype HostOnlyButtonProps = {\n  /**\n   * The click action\n   */\n  onClick: GenericFunction;\n  /**\n   * The button label\n   */\n  children: ReactNode;\n} & ButtonProps;\n\nexport function HostOnlyButton({ onClick, children, ...buttonProps }: HostOnlyButtonProps) {\n  return (\n    <HostOnlyContainer>\n      <HostButton onClick={onClick} {...buttonProps}>\n        {children}\n      </HostButton>\n    </HostOnlyContainer>\n  );\n}\n","import type { AvatarSize } from 'antd/lib/avatar/AvatarContext';\nimport clsx from 'clsx';\nimport type { ReactNode } from 'react';\n// Components\nimport { IconAvatar } from 'components/avatars/IconAvatar';\n\nexport type MetricHighlightProps = {\n  /**\n   * The text to be highlighted\n   */\n  children: ReactNode;\n  /**\n   * The icon representing the metric\n   */\n  icon: ReactNode;\n  /**\n   * Indicates if it's a negative metric\n   */\n  type?: 'positive' | 'negative' | 'default';\n  /**\n   * The size of the avatar (default: small)\n   */\n  iconSize?: AvatarSize;\n  /**\n   * Custom class\n   */\n  className?: string;\n  /**\n   * Icon placement (default: after)\n   */\n  iconPlacement?: 'before' | 'after';\n};\n\nexport function MetricHighlight({\n  children,\n  icon,\n  type,\n  className,\n  iconSize = 'small',\n  iconPlacement = 'after',\n}: MetricHighlightProps) {\n  return (\n    <span className={clsx('metric-highlight', type && `metric-highlight--${type}`, className)}>\n      {iconPlacement === 'before' && (\n        <>\n          <IconAvatar size={iconSize} icon={icon} />{' '}\n        </>\n      )}\n      {children}\n      {iconPlacement === 'after' && (\n        <>\n          {' '}\n          <IconAvatar size={iconSize} icon={icon} />\n        </>\n      )}\n    </span>\n  );\n}\n\nexport type HighlightProps = Omit<MetricHighlightProps, 'icon'>;\n","import clsx from 'clsx';\nimport { type ReactNode, useRef } from 'react';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { PageError } from 'components/errors';\nimport { LoadingPage } from 'components/loaders';\nimport { useGameAppearance } from 'components/session/GameInfoContext';\n\ntype PhaseContainerProps = {\n  /**\n   * The current phase that must match the allowed phase\n   */\n  phase?: string;\n  /**\n   * The allowed phase\n   */\n  allowedPhase?: string;\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * If the container should take the full screen\n   */\n  fullScreen?: boolean;\n};\n\n/**\n * Wrapping container around a game screen\n * @param props\n * @returns\n */\nexport function PhaseContainer({\n  phase,\n  allowedPhase = '',\n  children,\n  className = '',\n  fullScreen = false,\n}: PhaseContainerProps) {\n  const appearance = useGameAppearance();\n  const { translate } = useLanguage();\n  const screenRef = useRef<HTMLScriptElement>(null);\n\n  if (allowedPhase !== phase) {\n    return <LoadingPage />;\n  }\n\n  if (!phase) {\n    return (\n      <PageError description={translate('Estado do jogo não está correto', 'Game state is not correct')} />\n    );\n  }\n\n  const baseClass = 'phase-container';\n  const backgroundColorOverlay = appearance?.backgroundColor;\n\n  return (\n    <main\n      className={clsx(baseClass, fullScreen && `${baseClass}--full-screen`, className)}\n      id=\"screen\"\n      ref={screenRef}\n      style={backgroundColorOverlay ? { backgroundColor: backgroundColorOverlay } : {}}\n    >\n      {children}\n    </main>\n  );\n}\n","import clsx from 'clsx';\nimport { type ReactNode, useState } from 'react';\nimport { useKeyPressEvent } from 'react-use';\n// Ant Design Resources\nimport { Button } from 'antd';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Utils\nimport { type AnimationType, getAnimationClass } from 'utils/helpers';\n// Components\nimport { TimedButton } from 'components/buttons';\nimport { Translate } from 'components/language';\nimport { Title } from 'components/text';\n// Sass\nimport './PhaseAnnouncement.scss';\n// Design Resource\n\ntype PhaseAnnouncementBasicProps = {\n  /**\n   * The title of the game phase\n   */\n  title: ReactNode;\n  /**\n   * The icon displayed to illustrate the phase\n   */\n  icon: ReactNode;\n  /**\n   * The Text\n   */\n  buttonText?: ReactNode;\n  /**\n   * Additional content of the announcement, usually a simple instruction\n   */\n  children?: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Current round number (default 0)\n   */\n  currentRound?: number;\n  /**\n   * Duration to override default duration.\n   * The default duration follows the current round going for 15, 10, then 5 seconds\n   */\n  duration?: number;\n  /**\n   * Prevents user from skipping the the announcement card\n   */\n  unskippable?: boolean;\n  /**\n   * Removes timer from the continue button\n   */\n  withoutTimer?: boolean;\n  /**\n   * In animation for the announcement\n   */\n  animationType?: AnimationType;\n  /**\n   * If component should be an overlay or a block\n   */\n  type?: 'block' | 'overlay';\n};\n\ntype PhaseAnnouncementBlock = {\n  /**\n   * The phase announcement will be its own screen without overlaying any content\n   */\n  type: 'block';\n  /**\n   * The function called when the close button is clicked\n   */\n  onClose: GenericFunction;\n} & PhaseAnnouncementBasicProps;\n\ntype PhaseAnnouncementOverlay = {\n  /**\n   * The phase announcement will be its own screen without overlaying any content\n   */\n  type: 'overlay';\n  /**\n   * The function called when the close button is clicked\n   */\n  onClose?: GenericFunction;\n} & PhaseAnnouncementBasicProps;\n\ntype PhaseAnnouncementProps = PhaseAnnouncementBlock | PhaseAnnouncementOverlay;\n\n/**\n * Screen displayed before (or over) any game phase with title and illustration and some simple instruction\n */\nexport function PhaseAnnouncement({\n  buttonText,\n  icon,\n  title,\n  children,\n  currentRound = 3,\n  onClose = () => {},\n  className,\n  duration,\n  withoutTimer = false,\n  unskippable,\n  animationType = 'backInDown',\n  type = 'block',\n}: PhaseAnnouncementProps) {\n  useTemporarilyHidePlayersBar(type === 'overlay');\n  const durationPerRound = [7, 15, 7, 5]?.[currentRound] ?? 4;\n  const [isActive, setActive] = useState(true);\n  const [isRemoved, setRemoved] = useState(false);\n\n  /**\n   * Deactivate component (triggering animation)\n   * Start timer to remove it from dom\n   * Perform the onClose function\n   */\n  const onContinue = () => {\n    setActive(false);\n    start();\n    onClose();\n  };\n\n  // Allow skip when pressing the space bar in a skippable announcement\n  useKeyPressEvent(' ', () => {\n    if (!unskippable) {\n      onContinue();\n    }\n  });\n\n  /**\n   * When the overlay is dismissed the component needs to disappear so the screen\n   * components can be clickable again\n   */\n  const { start } = useCountdown({\n    autoStart: false,\n    duration: 1,\n    onExpire: () => setRemoved(true),\n  });\n\n  if (isRemoved) {\n    return <></>;\n  }\n\n  return (\n    <div\n      className={clsx(\n        type === 'overlay' && 'phase-announcement-overlay',\n        !isActive && getAnimationClass('fadeOut', { speed: 'faster' }),\n      )}\n    >\n      <div className=\"phase-announcement-wrapper\">\n        <div\n          className={clsx(\n            'phase-announcement',\n            isActive ? getAnimationClass(animationType, { speed: 'fast' }) : getAnimationClass('bounceOut'),\n            className,\n          )}\n        >\n          <Title colorScheme=\"light\">{title}</Title>\n\n          <span className=\"phase-announcement__icon\">{icon}</span>\n\n          {children}\n\n          {withoutTimer ? (\n            <Button type=\"primary\" onClick={onContinue} autoFocus className=\"mt-2\">\n              <Translate pt=\"Prosseguir\" en=\"Continue\" custom={buttonText} />\n            </Button>\n          ) : (\n            <TimedButton\n              duration={duration || durationPerRound}\n              type=\"text\"\n              onClick={onContinue}\n              onExpire={onContinue}\n              disabled={unskippable}\n              autoFocus\n              className=\"mt-2\"\n            >\n              <Translate pt=\"Prosseguir\" en=\"Continue\" custom={buttonText} />\n            </TimedButton>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { motion, type MotionProps } from 'framer-motion';\nimport { sampleSize } from 'lodash';\nimport { useMemo } from 'react';\n// Utils\nimport { PUBLIC_URL } from 'utils/constants';\n// Components\nimport { useGameAppearance } from 'components/session/GameInfoContext';\n// Sass\nimport './CloudBackground.scss';\n\nfunction SingleCloud({ type }: { type: string; index?: number }) {\n  return (\n    <div\n      className=\"cloud-background__cloud\"\n      style={{\n        backgroundImage: `url('${PUBLIC_URL.CLOUDS}${type}.png')`,\n        backgroundPositionX: '0',\n      }}\n    ></div>\n  );\n}\n\nconst cloudData = [\n  {\n    backgroundPositionX: '0',\n  },\n  {\n    backgroundPositionX: '-300px',\n  },\n  {\n    backgroundPositionX: '-600px',\n  },\n  {\n    backgroundPositionX: '-900px',\n  },\n  {\n    backgroundPositionX: '-1200px',\n  },\n];\n\nfunction MultiCloud({ type, index }: { type: string; index: number }) {\n  return (\n    <div\n      className=\"cloud-background__cloud\"\n      style={{\n        backgroundImage: `url('${PUBLIC_URL.CLOUDS}${type}.png')`,\n        ...cloudData[index],\n      }}\n    ></div>\n  );\n}\n\nfunction getCloudComponent(type: string) {\n  if (type) {\n    const plural = type.split('-cloud')?.[1];\n\n    if (plural === 's') {\n      return MultiCloud;\n    }\n  }\n  return SingleCloud;\n}\n\nconst CLOUDS = [0, 1, 2, 3, 4];\nconst SCREEN_HEIGHT = window.innerHeight;\nconst SCREEN_WIDTH = window.innerWidth;\nconst X_POSITIONS = [10, 25, 40, 55, 70, 85];\nconst Y_POSITIONS = [10, 25, 40, 55, 70, 85];\nconst SCALES = [0.25, 0.3, 0.35, 0.4, 0.45, 0.5];\nconst DELAYS = [0, 0.5, 1, 1.5, 2];\nconst DURATIONS = [15, 20, 25, 30, 35];\n\ntype AnimationConfig = {\n  xs: number[];\n  ys: number[];\n  scales: number[];\n  delays: number[];\n  durations: number[];\n};\n\nexport function CloudBackground() {\n  const gameAppearance = useGameAppearance();\n  const cloudType = gameAppearance.clouds ?? 'cloud';\n  const cloudAnimationType = gameAppearance.cloudsAnimationType ?? 'flow';\n  const backgroundColor = gameAppearance.backgroundColor;\n\n  const CloudTypeComponent = getCloudComponent(cloudType);\n\n  const config = useMemo(() => {\n    return {\n      xs: sampleSize(X_POSITIONS, 5),\n      ys: sampleSize(Y_POSITIONS, 5),\n      scales: sampleSize(SCALES, 5),\n      delays: sampleSize(DELAYS, 5),\n      durations: sampleSize(DURATIONS, 5),\n    };\n  }, []);\n\n  return (\n    <div\n      className={clsx('cloud-background', `cloud-background--${cloudType}`)}\n      style={backgroundColor ? { backgroundColor } : {}}\n    >\n      {CLOUDS.map((id) => {\n        return (\n          <motion.div key={id} {...getAnimationProps(cloudAnimationType, id, config)}>\n            <CloudTypeComponent index={id} type={cloudType} />\n          </motion.div>\n        );\n      })}\n    </div>\n  );\n}\n\nconst getAnimationProps = (type: string, id: number, config: AnimationConfig): MotionProps => {\n  const randomScale = config.scales[id];\n  const randomDuration = config.durations[id];\n  const randomDelay = config.delays[id];\n  const randomX = (config.xs[id] * SCREEN_WIDTH) / 100;\n  const randomY = (config.ys[id] * SCREEN_HEIGHT) / 100;\n  const orbitOriginX = SCREEN_WIDTH / 5 - 300; // Shift orbit to the left by 150px\n  const orbitOriginY = SCREEN_HEIGHT / 2;\n\n  if (type === 'falling') {\n    return {\n      initial: { x: randomX, y: -SCREEN_HEIGHT, scale: randomScale },\n      animate: { y: SCREEN_HEIGHT + 300 },\n      transition: {\n        ease: 'linear',\n        delay: randomDelay,\n        duration: randomDuration,\n        repeat: Number.POSITIVE_INFINITY,\n        repeatType: 'loop',\n        type: 'tween',\n      },\n    };\n  }\n\n  if (type === 'rising') {\n    return {\n      initial: { x: randomX, y: SCREEN_HEIGHT + 300, scale: randomScale },\n      animate: { y: -300 },\n      transition: {\n        ease: 'linear',\n        delay: randomDelay,\n        duration: randomDuration,\n        repeat: Number.POSITIVE_INFINITY,\n        repeatType: 'loop',\n        type: 'tween',\n      },\n    };\n  }\n\n  if (type === 'orbit') {\n    return {\n      initial: { rotate: 0, x: orbitOriginX, y: orbitOriginY, scale: randomScale },\n      animate: { rotate: -360 },\n      transition: {\n        ease: 'linear',\n        delay: randomDelay,\n        duration: randomDuration,\n        repeat: Number.POSITIVE_INFINITY,\n        repeatType: 'loop',\n        type: 'tween',\n      },\n    };\n  }\n\n  return {\n    initial: { x: -SCREEN_WIDTH, y: randomY, scale: randomScale },\n    animate: { x: SCREEN_WIDTH + 300 },\n    transition: {\n      ease: 'linear',\n      delay: randomDelay,\n      duration: randomDuration,\n      repeat: Number.POSITIVE_INFINITY,\n      repeatType: 'loop',\n      type: 'tween',\n    },\n  };\n};\n","import { useMutation } from '@tanstack/react-query';\nimport { motion } from 'framer-motion';\nimport { useEffect, useState } from 'react';\n// Ant Design Resources\nimport { Alert, Button, Divider, Modal, Typography } from 'antd';\n// Hooks\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\nimport type { UseStep } from 'hooks/useStep';\n// Services\nimport { signInAsGuest } from 'services/firebase';\n// Components\nimport { SignIn, SignInWithGoogle } from 'components/auth/SignIn';\nimport { SignUp } from 'components/auth/SignUp';\nimport { Translate } from 'components/language';\n\nconst Title = motion(Typography.Title);\n\ntype StepJoinProps = {\n  setStep: UseStep['setStep'];\n};\n\nexport function StepJoin({ setStep }: StepJoinProps) {\n  const { isAuthenticated } = useCurrentUserContext();\n\n  const { isPending, mutate, isError, error } = useMutation({\n    mutationKey: ['sign-in-anon'],\n    mutationFn: async () => signInAsGuest(),\n    onSuccess: () => setStep(1),\n  });\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      setStep(1);\n    }\n  }, [isAuthenticated, setStep]);\n\n  return (\n    <>\n      <Title level={2} className=\"lobby-step__title\" layoutId=\"lobby-step-title\">\n        <Translate pt=\"Bem-vindo!\" en=\"Welcome\" />\n      </Title>\n\n      <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n        <SignInWithGoogle onSuccess={() => setStep(1)} block size=\"large\" />\n\n        {isError && <Alert message=\"Error\" description={JSON.stringify(error)} type=\"error\" showIcon />}\n\n        <Divider>\n          <Translate pt=\"ou\" en=\"or\" />\n        </Divider>\n\n        <Button type=\"primary\" block disabled={isAuthenticated} onClick={() => mutate()} loading={isPending}>\n          <Translate pt=\"Entrar como visitante\" en=\"Join as a Guest\" />\n        </Button>\n      </motion.div>\n    </>\n  );\n}\n\ntype LoginButtonProps = {\n  disabled: boolean;\n  setStep: UseStep['setStep'];\n};\n\nexport function LoginButton({ disabled, setStep }: LoginButtonProps) {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <div>\n      <Modal\n        open={open}\n        title={<Translate pt=\"Logar\" en=\"LogIn\" />}\n        cancelText={<Translate pt=\"Cancelar\" en=\"Cancel\" />}\n        onCancel={() => setOpen(false)}\n        okButtonProps={{\n          style: { display: 'none' },\n        }}\n      >\n        <SignIn onSuccess={() => setStep(1)} />\n      </Modal>\n      <Button type=\"link\" block disabled={disabled} onClick={() => setOpen(true)}>\n        <Translate pt=\"Fazer Login\" en=\"Login\" />\n      </Button>\n    </div>\n  );\n}\n\ntype SignUpButtonProps = {\n  disabled: boolean;\n  setStep: UseStep['setStep'];\n};\n\nexport function SignUpButton({ disabled, setStep }: SignUpButtonProps) {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <div>\n      <Modal\n        open={open}\n        title={<Translate pt=\"Cadastro\" en=\"Sign Up Form\" />}\n        cancelText={<Translate pt=\"Cancelar\" en=\"Cancel\" />}\n        onCancel={() => setOpen(false)}\n        okButtonProps={{\n          style: { display: 'none' },\n        }}\n      >\n        <SignUp onSuccess={() => setStep(1)} />\n      </Modal>\n      <Button type=\"link\" block disabled={disabled} onClick={() => setOpen(true)}>\n        <Translate pt=\"Cadastrar\" en=\"Sign up\" />\n      </Button>\n    </div>\n  );\n}\n","// Types\nimport type { GamePlayer, GamePlayers } from 'types/player';\n// Utils\nimport { AVAILABLE_AVATAR_IDS } from 'utils/avatars';\nimport { getRandomItem } from 'utils/helpers';\n\n/**\n * Random names used during Dev\n */\nconst DEV_NAMES: string[] =\n  'Abe,Bob,Cam,Dan,Eva,Fin,Gus,Hal,Ian,Jan,Kim,Leo,Max,Nic,Oli,Pat,Quinn,Roy,Sam,Tim,Una,Vic,Will,Xavier,Yara,Zoe'.split(\n    ',',\n  );\n\nconst cacheNames: BooleanDictionary = {};\nconst cacheAvatars: BooleanDictionary = {};\n\nlet cacheMockedPlayers: GamePlayers = {};\n\n/**\n * Gets a random unique item from list based on the cached dictionary or used dictionary\n * @param source\n * @param used\n * @param cache\n * @returns\n */\nconst getRandomUniqueItemFromList = (\n  source: string[],\n  used: string[] = [],\n  cache: BooleanDictionary = {},\n) => {\n  let randomItem = '';\n  let tries = 0;\n  while (!randomItem || cache[randomItem] || used?.includes(randomItem) || tries < 50) {\n    randomItem = getRandomItem(source);\n    tries += 1;\n  }\n  cache[randomItem] = true;\n  return randomItem;\n};\n\n/**\n * Get random user name\n * @param used\n * @returns\n */\nexport function mockPlayerName(used?: string[]): string {\n  return getRandomUniqueItemFromList(DEV_NAMES, used, cacheNames);\n}\n\n/**\n * Mock players to be used during dev\n * @param players\n * @param quantity\n * @param properties\n * @returns\n */\nexport function mockPlayers(\n  players: GamePlayers,\n  quantity = 10,\n  properties: PlainObject | GenericFunction = {},\n): GamePlayers {\n  if (Object.keys(cacheMockedPlayers).length === quantity) {\n    return {\n      ...cacheMockedPlayers,\n      ...players,\n    };\n  }\n\n  const usedNames: BooleanDictionary = {};\n  const usedAvatars: BooleanDictionary = {};\n  Object.values(players).forEach((player) => {\n    usedNames[player.name] = true;\n    usedAvatars[player.avatarId] = true;\n  });\n\n  const neededQuantity = quantity - Object.keys(players).length;\n\n  const mockedPlayers: GamePlayer[] = Array(neededQuantity)\n    .fill(0)\n    .map((e, i) => {\n      const name = mockPlayerName(Object.keys(usedNames));\n\n      return {\n        id: `_${name.toLowerCase()}`,\n        name: `${name}`,\n        avatarId: getRandomUniqueItemFromList(AVAILABLE_AVATAR_IDS, Object.keys(usedAvatars), cacheAvatars),\n        updatedAt: Date.now(),\n        ready: true,\n        ...(typeof properties === 'function' ? properties(i) : properties),\n      };\n    });\n\n  const newMockedPlayers: GamePlayers = {\n    ...mockedPlayers.reduce((acc: GamePlayers, player) => {\n      acc[player.id] = player;\n      return acc;\n    }, {}),\n    ...players,\n  };\n\n  cacheMockedPlayers = newMockedPlayers;\n  return cacheMockedPlayers;\n}\n","import clsx from 'clsx';\nimport { motion } from 'framer-motion';\nimport { useMemo } from 'react';\nimport { useToggle } from 'react-use';\n// Ant Design Resources\nimport { Button, Popover, Tooltip } from 'antd';\n// Types\nimport type { GamePlayers } from 'types/player';\n// Utils\nimport { AVAILABLE_AVATAR_IDS, AVATARS } from 'utils/avatars';\n// Components\nimport { TransparentButton } from 'components/buttons';\nimport { DualTranslate, Translate } from 'components/language';\n// Images\nimport avatars from 'assets/images/avatars.svg';\ntype AvatarSelectionProps = {\n  players: GamePlayers;\n  selectedAvatar: string;\n  setSelectedAvatar: GenericFunction;\n  userId: PlayerId;\n};\n\nexport function AvatarSelection({\n  players,\n  setSelectedAvatar,\n  selectedAvatar,\n  userId,\n}: AvatarSelectionProps) {\n  const [open, setOpen] = useToggle(false);\n\n  return (\n    <>\n      <div className=\"lobby-step__avatar-selection\">\n        <Popover\n          arrow\n          placement=\"right\"\n          content={\n            <AvatarOptions\n              players={players}\n              setSelectedAvatar={setSelectedAvatar}\n              selectedAvatar={selectedAvatar}\n              userId={userId}\n            />\n          }\n          title={<Translate pt=\"Escolha seu avatar\" en=\"Choose your avatar\" />}\n          trigger=\"click\"\n          open={open}\n          onOpenChange={setOpen}\n        >\n          <motion.svg viewBox=\"0 0 100 100\" className=\"lobby-avatar\" layoutId=\"avatar\">\n            <use href={`${avatars}#avatar-${selectedAvatar}`}></use>\n            <title>\n              <DualTranslate>{AVATARS[selectedAvatar].description}</DualTranslate>\n            </title>\n          </motion.svg>\n        </Popover>\n      </div>\n      <div className=\"lobby-step__description\">\n        <small>\n          <DualTranslate>{AVATARS[selectedAvatar].description}</DualTranslate>\n        </small>\n      </div>\n      <Button type=\"link\" onClick={setOpen} block>\n        <Translate pt=\"Trocar avatar\" en=\"Change avatar\" />\n      </Button>\n    </>\n  );\n}\n\nfunction AvatarOptions({ players, setSelectedAvatar, selectedAvatar, userId }: AvatarSelectionProps) {\n  const usedAvatars = useMemo(() => {\n    return Object.values(players).reduce((acc: StringDictionary, { name, avatarId, id }) => {\n      if (id !== userId) {\n        acc[avatarId] = name;\n      }\n      return acc;\n    }, {});\n  }, [players, userId]);\n\n  return (\n    <div className=\"avatar-selection-options\">\n      {AVAILABLE_AVATAR_IDS.map((avatarId) => {\n        const avatar = AVATARS[avatarId];\n        const isUsed = !!usedAvatars[avatarId];\n\n        return (\n          <Tooltip\n            key={avatarId}\n            title={\n              isUsed ? (\n                <Translate\n                  pt={`Usado por ${usedAvatars[avatarId]}`}\n                  en={`Used by ${usedAvatars[avatarId]}`}\n                />\n              ) : (\n                <DualTranslate>{avatar.description}</DualTranslate>\n              )\n            }\n          >\n            <TransparentButton\n              onClick={() => setSelectedAvatar(avatarId)}\n              disabled={isUsed}\n              className={clsx(\n                'avatar-selection-options__avatar',\n                avatarId === selectedAvatar && 'avatar-selection-options__avatar--selected',\n                isUsed && 'avatar-selection-options__avatar--used',\n              )}\n            >\n              <svg viewBox=\"0 0 100 100\" className=\"avatar-selection-options__avatar-svg\">\n                <use href={`${avatars}#avatar-${avatarId}`}></use>\n                <title>\n                  <DualTranslate>{avatar.description}</DualTranslate>\n                </title>\n              </svg>\n            </TransparentButton>\n          </Tooltip>\n        );\n      })}\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport { Button, Divider, Space, Switch, Tooltip } from 'antd';\n// Hooks\nimport { useGlobalLocalStorage } from 'hooks/useGlobalLocalStorage';\n// Components\nimport { Translate } from 'components/language';\n\ntype SettingsProps = {\n  hasImages: boolean;\n};\n\nexport function Settings({ hasImages }: SettingsProps) {\n  const [blurEnabled, setBlurEnabled] = useGlobalLocalStorage('blurEnabled');\n  const [volume, setVolume] = useGlobalLocalStorage('volume');\n\n  const onBlurSwitchClick = (value: boolean) => {\n    setBlurEnabled(value);\n  };\n\n  const onSoundSwitchClick = (value: boolean) => {\n    setVolume(value ? 0.5 : 0);\n  };\n\n  return (\n    <Space className=\"lobby-step__settings\" split={<Divider type=\"vertical\" />}>\n      <div className=\"lobby-step__settings-entry\">\n        <div className=\"lobby-step__switch-label\">\n          <Translate pt=\"Som\" en=\"Sound\" />\n          <Tooltip\n            title={\n              <Translate\n                pt=\"Alguns jogos tocam sons ou falas. Você pode mudar essa configuração durante o jogo.\"\n                en=\"A few games will play sound effects or speech. You may change this setting during the game.\"\n              />\n            }\n          >\n            <Button type=\"text\" shape=\"circle\" icon={<InfoCircleOutlined />} size=\"small\" />\n          </Tooltip>\n        </div>\n\n        <Switch\n          checkedChildren=\"on\"\n          unCheckedChildren=\"off\"\n          checked={volume > 0}\n          onClick={onSoundSwitchClick}\n        />\n      </div>\n\n      <div className=\"lobby-step__settings-entry\">\n        <div className=\"lobby-step__switch-label\">\n          <Translate pt=\"Efeitos\" en=\"Effects\" />\n          <Tooltip\n            title={\n              <Translate\n                pt=\"Alguns jogos tocam sons ou falas. Você pode mudar essa configuração durante o jogo.\"\n                en=\"A few games will play sound effects or speech. You may change this setting during the game.\"\n              />\n            }\n          >\n            <Button type=\"text\" shape=\"circle\" icon={<InfoCircleOutlined />} size=\"small\" />\n          </Tooltip>\n        </div>\n\n        <Switch checkedChildren=\"on\" unCheckedChildren=\"off\" disabled />\n      </div>\n\n      <div className=\"lobby-step__settings-entry\">\n        <div className=\"lobby-step__switch-label\">\n          <Translate pt=\"Credo\" en=\"Blur Button\" />\n          <Tooltip\n            title={\n              <Translate\n                pt=\"Adiciona um botão em todas Cartas-imagem para embaça-las caso você tenha alguma fobia. Você pode mudar essa configuração durante o jogo\"\n                en=\"Adds a button to every Image Card to blur them in case you have any phobia. You may change this setting during the game\"\n              />\n            }\n          >\n            <Button type=\"text\" shape=\"circle\" icon={<InfoCircleOutlined />} size=\"small\" />\n          </Tooltip>\n        </div>\n\n        <Switch\n          checkedChildren=\"on\"\n          unCheckedChildren=\"off\"\n          checked={blurEnabled}\n          onClick={onBlurSwitchClick}\n          disabled={!hasImages}\n        />\n      </div>\n    </Space>\n  );\n}\n","// Utils\nimport { AVATARS } from 'utils/avatars';\n// Components\nimport { TransparentButton } from 'components/buttons';\nimport { DualTranslate, Translate } from 'components/language';\n// Images\nimport avatars from 'assets/images/avatars.svg';\n\ntype UsualAvatarsSelectionProps = {\n  setSelectedAvatar: GenericFunction;\n  avatarsIds: string[];\n};\n\nexport function UsualAvatarsSelection({ avatarsIds, setSelectedAvatar }: UsualAvatarsSelectionProps) {\n  return (\n    <div className=\"lobby-usual-avatar-selection\">\n      <div className=\"lobby-usual-avatar-selection__title\">\n        <small>\n          <Translate pt=\"Seus avatars mais usados\" en=\"Frequently used avatars\" />\n        </small>\n      </div>\n      <ul className=\"lobby-usual-avatar-selection__list\">\n        {avatarsIds.map((avatarId) => (\n          <TransparentButton key={avatarId} onClick={() => setSelectedAvatar(avatarId)}>\n            <svg viewBox=\"0 0 100 100\" className=\"lobby-usual-avatar-selection__avatar\">\n              <use href={`${avatars}#avatar-${avatarId}`}></use>\n              <title>\n                <DualTranslate>{AVATARS[avatarId].description}</DualTranslate>\n              </title>\n            </svg>\n          </TransparentButton>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import { motion } from 'framer-motion';\nimport { mockPlayerName } from 'mock/players';\nimport { useEffect, useState } from 'react';\nimport { useLocalStorage } from 'react-use';\n// Ant Design Resources\nimport { Alert, AutoComplete, Button, Typography } from 'antd';\n// Types\nimport type { GamePlayers } from 'types/player';\n// Hooks\nimport { useAddPlayer } from 'hooks/useAddPlayer';\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\nimport { useLanguage } from 'hooks/useLanguage';\nimport type { UseStep } from 'hooks/useStep';\n// Utils\nimport { AVAILABLE_AVATAR_IDS } from 'utils/avatars';\nimport { getRandomItem, isDevEnv } from 'utils/helpers';\n// Components\nimport { Translate } from 'components/language';\nimport { useGameInfoContext } from 'components/session/GameInfoContext';\n// Internal\nimport { AvatarSelection } from './AvatarSelection';\nimport { Settings } from './Settings';\nimport { UsualAvatarsSelection } from './UsualAvatarsSelection';\n\nconst Title = motion(Typography.Title);\n\nconst randomName = isDevEnv ? mockPlayerName() : undefined;\n\ntype StepInfoProps = {\n  players: GamePlayers;\n  setStep: UseStep['setStep'];\n};\n\nexport function StepInfo({ players, setStep }: StepInfoProps) {\n  const { currentUser, isGuest } = useCurrentUserContext();\n  const info = useGameInfoContext();\n  const { translate } = useLanguage();\n  const [selectedAvatar, setSelectedAvatar] = useState(\n    currentUser?.avatars?.[0] ?? getRandomItem(AVAILABLE_AVATAR_IDS),\n  );\n\n  const [name, setName] = useState((currentUser?.names ?? []).at(-1) ?? '');\n  const [lsAvatarId] = useLocalStorage('username', '');\n  const [lsUsername] = useLocalStorage('avatarId', '');\n\n  // Load username and avatar from localStorage if any\n  // biome-ignore lint/correctness/useExhaustiveDependencies: This is only necessary if the account is a for a guest\n  useEffect(() => {\n    if (isGuest) {\n      if (lsAvatarId) {\n        setSelectedAvatar(lsAvatarId);\n      }\n\n      if (lsUsername) {\n        setName(lsUsername ?? '');\n      }\n    }\n  }, [isGuest]);\n\n  const { isPending, mutate } = useAddPlayer(name, selectedAvatar, isGuest, () => setStep(2));\n\n  const hasPlayedBefore = Boolean(currentUser.games?.[info.gameName]);\n\n  const nameOptions = (currentUser?.names ?? []).map((name) => ({\n    value: name,\n  }));\n\n  return (\n    <>\n      <Title level={2} className=\"lobby-step__title\" layoutId=\"lobby-step-title\">\n        <Translate pt=\"Adicione seus dados\" en=\"Add your info\" />\n      </Title>\n\n      {hasPlayedBefore && (\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n          <Alert\n            type=\"info\"\n            message={<Translate pt=\"Você jogou esse jogo anteriormente\" en=\"You played this game before\" />}\n            className=\"margin\"\n          />\n        </motion.div>\n      )}\n\n      <AvatarSelection\n        players={players}\n        setSelectedAvatar={setSelectedAvatar}\n        selectedAvatar={selectedAvatar}\n        userId={currentUser.id}\n      />\n\n      <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n        {currentUser?.avatars.length > 0 && (\n          <UsualAvatarsSelection avatarsIds={currentUser.avatars} setSelectedAvatar={setSelectedAvatar} />\n        )}\n\n        <AutoComplete\n          className=\"lobby-step__name-input\"\n          options={nameOptions}\n          onChange={(value) => setName(value.trim())}\n          onSelect={(value) => setName(value.trim())}\n          placeholder={translate('Digite seu nome', 'Type your name')}\n          maxLength={10}\n          value={name || randomName}\n        />\n\n        <Settings hasImages={info.tags.includes('images')} />\n\n        <Button\n          block\n          loading={isPending}\n          disabled={!name || !selectedAvatar}\n          type=\"primary\"\n          onClick={() => mutate()}\n        >\n          <Translate pt=\"Entrar\" en=\"Enter\" />\n        </Button>\n      </motion.div>\n    </>\n  );\n}\n","import { useMutation } from '@tanstack/react-query';\n// Ant Design Resources\nimport { App } from 'antd';\n// Services\nimport { GAME_API, GAME_API_COMMON_ACTIONS } from 'services/adapters';\n// Utils\nimport { getRandomWelcomeMessage, speak } from 'utils/speech';\n// Internal\nimport { useGameMeta } from './useGameMeta';\nimport { useGlobalState } from './useGlobalState';\nimport { useLanguage } from './useLanguage';\nimport { getKey, useGlobalLocalStorage } from './useGlobalLocalStorage';\n\nexport function useAddPlayer(name: string, avatarId: string, isGuest: boolean, onSuccess: GenericFunction) {\n  const { gameId, gameName } = useGameMeta();\n  const [, setUserId] = useGlobalState('userId');\n  const [, setUsername] = useGlobalState('username');\n  const [, setUserAvatarId] = useGlobalState('userAvatarId');\n  const [volume] = useGlobalLocalStorage('volume');\n  const { language, translate } = useLanguage();\n  const { notification } = App.useApp();\n\n  const query = useMutation({\n    mutationKey: ['add-player'],\n    mutationFn: async () =>\n      await GAME_API.run({\n        action: GAME_API_COMMON_ACTIONS.JOIN_GAME,\n        gameId,\n        gameName,\n        playerName: name,\n        playerAvatarId: avatarId,\n        isGuest,\n      }),\n    onSuccess: (response) => {\n      const data = response.data as PlainObject;\n      setUserId(data.id);\n      setUsername(data.name);\n      setUserAvatarId(data.avatarId);\n\n      localStorage.setItem(getKey('username'), data.name);\n      localStorage.setItem(getKey('avatarId'), data.avatarId);\n      localStorage.setItem(getKey('gameId'), gameId);\n\n      if (volume) {\n        speak(getRandomWelcomeMessage(name ?? translate('vei', 'babe')), language, volume);\n      }\n\n      onSuccess();\n    },\n    onError: (e: Error) => {\n      notification.error({\n        message: translate(\n          'Vixi, o aplicativo encontrou um erro ao tentar te adicionar como jogador',\n          'Oops, the application failed when trying to add you as a player',\n        ),\n        description: JSON.stringify(e.message),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n    },\n  });\n\n  return query;\n}\n","import { useMutation } from '@tanstack/react-query';\nimport { motion } from 'framer-motion';\nimport { useEffect } from 'react';\n// Ant Design Resources\nimport { App, Typography } from 'antd';\n// Types\nimport type { GamePlayers } from 'types/player';\n// Hooks\nimport { useGameMeta } from 'hooks/useGameMeta';\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\n// Services\nimport { HOST_API, HOST_API_ACTIONS } from 'services/adapters';\n// Utils\nimport { AVATARS } from 'utils/avatars';\n// Components\nimport { HostButton, HostOnlyContainer } from 'components/host';\nimport { DualTranslate, Translate } from 'components/language';\nimport { SpaceContainer } from 'components/layout/SpaceContainer';\n// Images\nimport avatars from 'assets/images/avatars.svg';\n\nconst Title = motion(Typography.Title);\nconst Paragraph = motion(Typography.Paragraph);\n\ntype StepWaitingProps = {\n  players: GamePlayers;\n};\n\nexport function StepWaiting({ players }: StepWaitingProps) {\n  const { message, notification } = App.useApp();\n  const { gameId, gameName } = useGameMeta();\n  const { translate } = useLanguage();\n  const { isLoading, setLoader } = useLoading();\n\n  const gameMeta = useGameMeta();\n\n  const [username] = useGlobalState('username');\n  const [userAvatarId] = useGlobalState('userAvatarId');\n\n  const { mutate, isPending: isLocking } = useMutation({\n    mutationKey: ['lock-game'],\n    mutationFn: async () => {\n      setLoader('lock-game', true);\n      return await HOST_API.run({\n        action: HOST_API_ACTIONS.LOCK_GAME,\n        gameId,\n        gameName,\n      });\n    },\n    onSuccess: (response) => {\n      const data = response.data as PlainObject;\n\n      if (data.isLocked) {\n        message.success(\n          translate('Jogo trancado e iniciado com sucesso!', 'Game locked and initialized successfully'),\n        );\n      }\n    },\n    onError: (e: Error) => {\n      notification.error({\n        message: translate(\n          'Vixi, o aplicativo encontrou um erro ao tentar trancar e iniciar o jogo',\n          'Oops, the application found an error while trying to lock and start the game',\n        ),\n        description: JSON.stringify(e.message),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n    },\n    onSettled: () => {\n      setLoader('lock-game', false);\n    },\n  });\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: <explanation>\n  useEffect(() => {\n    setLoader('lock-game', isLocking);\n\n    return () => {\n      setLoader('lock-game', false);\n    };\n  }, [isLocking]);\n\n  const numPlayers = Object.keys(players).length;\n\n  return (\n    <>\n      <Title level={2} className=\"lobby-step__title\" layoutId=\"lobby-step-title\">\n        <Translate pt=\"Pronto!\" en=\"Ready!\" />\n      </Title>\n\n      <SpaceContainer vertical>\n        <motion.svg viewBox=\"0 0 100 100\" className=\"lobby-avatar\" layoutId=\"avatar\">\n          <use href={`${avatars}#avatar-${userAvatarId}`}></use>\n        </motion.svg>\n\n        <div className=\"lobby-step__description\">\n          <small>\n            {username || translate('Fulano', 'Unknown')},{' '}\n            <DualTranslate>{AVATARS[userAvatarId].description}</DualTranslate>\n          </small>\n        </div>\n      </SpaceContainer>\n\n      <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n        <Paragraph className=\"lobby-heading\">\n          <Translate\n            pt=\"Aguarde os outros jogadores entrarem.\"\n            en=\"Please, wait while other players join...\"\n          />\n        </Paragraph>\n        <HostOnlyContainer className=\"lobby-waiting__lock-button\" direction=\"vertical\">\n          <Typography.Text className=\"center padding\">\n            <Translate pt=\"Jogadores necessários\" en=\"Players needed\" />: {numPlayers}/{gameMeta.min}\n          </Typography.Text>\n          <HostButton\n            onClick={() => mutate()}\n            disabled={isLoading || numPlayers < gameMeta.min}\n            loading={isLoading}\n            block\n          >\n            <Translate pt=\"Trancar e Iniciar Jogo\" en=\"Lock and Start Game\" />\n          </HostButton>\n        </HostOnlyContainer>\n      </motion.div>\n    </>\n  );\n}\n","import clsx from 'clsx';\nimport { motion } from 'framer-motion';\nimport { orderBy, sample } from 'lodash';\nimport { useMemo } from 'react';\n// Types\nimport type { GamePlayers } from 'types/player';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\n\ntype JoinedPlayersProps = {\n  players: GamePlayers;\n  orientation: 'horizontal' | 'vertical';\n};\n\nexport function JoinedPlayers({ players, orientation }: JoinedPlayersProps) {\n  const orderedPlayers = useMemo(\n    () => orderBy(Object.values(players), ['updatedAt', 'name'], ['asc']),\n    [players],\n  );\n\n  return (\n    <div className={clsx('joined-players', orientation === 'horizontal' && 'joined-players--horizontal')}>\n      {orderedPlayers.map((player, index) => (\n        <motion.div\n          key={player.id}\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ duration: 1, delay: index * 0.25 }}\n        >\n          <motion.div\n            layoutId={`player-${player.id}`}\n            className=\"joined-players__player\"\n            animate={{\n              y: [0, 5, 0], // Y-axis movement\n              filter: [\n                'drop-shadow(0px 10px 4px rgba(0, 0, 0, 0.1))',\n                'drop-shadow(0px 20px 4px rgba(0, 0, 0, 0.05))',\n                'drop-shadow(0px 10px 4px rgba(0, 0, 0, 0.1))',\n              ],\n              transition: {\n                duration: sample([6, 6.2, 7, 7.5, 8]), // Total time for one cycle\n                ease: 'easeInOut',\n                repeat: Number.POSITIVE_INFINITY,\n              },\n            }}\n          >\n            <Avatar id={player?.avatarId} size=\"large\" />\n            <div className=\"joined-players__avatar-name\">\n              <Translate pt=\"Fulano\" en=\"John Doe\" custom={player?.name} />\n            </div>\n          </motion.div>\n        </motion.div>\n      ))}\n    </div>\n  );\n}\n","import { motion } from 'framer-motion';\n// Ant Design Resources\nimport { Image, Space, Typography } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { getAnimation } from 'utils/animations';\nimport { PUBLIC_URL } from 'utils/constants';\n// Components\nimport { GameTags } from 'components/general/GameTags';\nimport { Translate } from 'components/language';\nimport { useGameInfoContext } from 'components/session/GameInfoContext';\n\nexport function LobbyRules() {\n  const info = useGameInfoContext();\n  const { language } = useLanguage();\n  return (\n    <motion.div\n      className=\"lobby-step__rules\"\n      initial={{ opacity: 0, width: 0 }}\n      animate={{ opacity: 1, width: 'auto' }}\n      exit={{ opacity: 0 }}\n      transition={{ delay: 0.25 }}\n    >\n      <Typography.Title level={4} style={{ marginTop: 0 }}>\n        <Translate pt=\"Revise as regras\" en=\"Review the rules\" />\n      </Typography.Title>\n      <GameTags wrap size={[1, 10]} style={{ display: 'flex' }} gameCode={info.gameCode} tags={info.tags} />\n      <Image.PreviewGroup\n        fallback={`${PUBLIC_URL.RULES}no-rules.jpg`}\n        preview={{\n          countRender: (current, total) => (\n            <Space direction=\"vertical\" size=\"small\" className=\"text-center\">\n              <span>{info.rules[language][current]}</span>\n              <span>\n                {current}/{total}\n              </span>\n            </Space>\n          ),\n        }}\n      >\n        <ul className=\"lobby-step__rule-list\">\n          {info.rules[language].map((rule, index) => (\n            <motion.li\n              key={rule}\n              className=\"lobby-step__rule\"\n              {...getAnimation('fadeIn', {\n                delay: 1 + index * 0.1,\n              })}\n            >\n              {index > 0 && (\n                <Image\n                  src={`${PUBLIC_URL.RULES}game-rule-${info.gameName}-${index}.jpg`}\n                  width={96}\n                  className=\"border-radius\"\n                  fallback={`${PUBLIC_URL.RULES}no-rules.jpg`}\n                />\n              )}\n              <Typography.Paragraph style={{ marginBottom: 0 }}>{rule}</Typography.Paragraph>\n            </motion.li>\n          ))}\n        </ul>\n      </Image.PreviewGroup>\n    </motion.div>\n  );\n}\n","import { AnimatePresence, motion } from 'framer-motion';\nimport { useEffect } from 'react';\nimport { useLocalStorage } from 'react-use';\n// Ant Design Resources\nimport { Alert, Typography } from 'antd';\n// Types\nimport type { GameMeta } from 'types/game';\nimport type { GamePlayers } from 'types/player';\n// Hooks\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\nimport { resetGlobalState, useGlobalState } from 'hooks/useGlobalState';\nimport { useStep } from 'hooks/useStep';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { AdminMenuDrawer } from 'components/admin';\nimport { GameStrip } from 'components/general/GameBanner';\nimport { DualTranslate, Translate } from 'components/language';\nimport { PhaseContainer } from 'components/phases';\nimport { useGameInfoContext } from 'components/session/GameInfoContext';\n// Internal\nimport { CloudBackground } from './lobby/CloudBackground';\nimport { StepJoin } from './lobby/StepJoin';\nimport { StepInfo } from './lobby/StepInfo';\nimport { StepWaiting } from './lobby/StepWaiting';\nimport { JoinedPlayers } from './lobby/JoinedPlayers';\nimport { LobbyRules } from './lobby/LobbyRules';\n// Sass\nimport './PhaseLobby.scss';\n\nconst Paragraph = motion(Typography.Paragraph);\n\ntype PhaseLobbyProps = {\n  players: GamePlayers;\n  meta: GameMeta;\n};\n\nexport function PhaseLobby({ players, meta }: PhaseLobbyProps) {\n  const { step, setStep } = useStep();\n  const { currentUser, isAuthenticated } = useCurrentUserContext();\n  const [, setUserId] = useGlobalState('userId');\n  const [, setUsername] = useGlobalState('username');\n  const [, setUserAvatarId] = useGlobalState('userAvatarId');\n  const [localUsername] = useLocalStorage('username', '');\n  const [localAvatarId] = useLocalStorage('avatarId', '');\n  const info = useGameInfoContext();\n\n  const player = players?.[currentUser.id];\n\n  useEffect(() => {\n    if (player) {\n      setStep(2);\n      setUserId(player.id);\n      setUsername(player.name);\n      setUserAvatarId(player.avatarId);\n    } else if (isAuthenticated) {\n      setStep(1);\n      resetGlobalState();\n    } else {\n      setStep(0);\n      setUsername(localUsername ?? '');\n      setUserAvatarId(localAvatarId ?? '');\n    }\n  }, [\n    player,\n    setStep,\n    setUserId,\n    setUsername,\n    setUserAvatarId,\n    isAuthenticated,\n    localUsername,\n    localAvatarId,\n  ]);\n\n  return (\n    <PhaseContainer phase=\"LOBBY\" allowedPhase={PHASES.DEFAULT.LOBBY} className=\"lobby\">\n      <AnimatePresence>\n        <motion.div className=\"lobby-step\" layout>\n          <motion.div className=\"lobby-step__card\">\n            <GameStrip\n              width={340}\n              title={info?.title}\n              gameName={info?.gameName}\n              className=\"lobby-step__banner\"\n            />\n            <div className=\"lobby-step__content\">\n              <Paragraph className=\"lobby-step__summary italic\" layoutId=\"lobby-step-summary\">\n                <DualTranslate>{info.summary}</DualTranslate>\n              </Paragraph>\n\n              {meta.isLocked ? (\n                <>\n                  <Typography.Title className=\"lobby-step__title\">\n                    <Translate pt=\"Esse jogo está trancado\" en=\"This session is locked\" />\n                  </Typography.Title>\n\n                  <Alert\n                    type=\"warning\"\n                    showIcon\n                    message={\n                      <Translate\n                        pt=\"O jogo já foi iniciado e novos jogadores não podem ser adicionados\"\n                        en=\"The game has started and new players cannot be added at this time\"\n                      />\n                    }\n                  />\n                </>\n              ) : (\n                <>\n                  {step === 0 && <StepJoin setStep={setStep} />}\n                  {step === 1 && <StepInfo players={players} setStep={setStep} />}\n                  {step === 2 && <StepWaiting players={players} />}\n                </>\n              )}\n            </div>\n          </motion.div>\n          <div className=\"lobby-step__waiting\">\n            {step === 2 && <LobbyRules />}\n\n            <JoinedPlayers players={players} orientation={step === 1 ? 'vertical' : 'horizontal'} />\n          </div>\n        </motion.div>\n\n        <AdminMenuDrawer\n          state={{\n            phase: 'LOBBY',\n            round: { current: 0, total: 0, forceLastRound: false },\n            players: {},\n          }}\n          players={players}\n        />\n      </AnimatePresence>\n      <CloudBackground />\n    </PhaseContainer>\n  );\n}\n","// Types\nimport type { GameState } from 'types/game';\n// Internal\nimport { PhaseContainer } from './index';\n\ntype PhasePlaceholderProps = {\n  state: GameState;\n};\n\nexport function PhasePlaceholder({ state }: PhasePlaceholderProps) {\n  return (\n    <PhaseContainer phase=\"ANY\" allowedPhase=\"ANY\" className=\"phase-placeholder\">\n      {state?.phase ?? 'Unknown Phase'}\n    </PhaseContainer>\n  );\n}\n","import { useQueryClient } from '@tanstack/react-query';\nimport { useEffect } from 'react';\nimport { useEffectOnce } from 'react-use';\n// Ant Design Resources\nimport { CheckCircleFilled, MehFilled, RobotFilled, SmileFilled } from '@ant-design/icons';\nimport { Button, Layout, Space } from 'antd';\n// Types\nimport type { GameInfo } from 'types/game-info';\nimport type { GamePlayers } from 'types/player';\n// Hooks\nimport { useGameActionRequest } from 'hooks/useGameActionRequest';\nimport { useGameId } from 'hooks/useGameId';\nimport { useGlobalLocalStorage } from 'hooks/useGlobalLocalStorage';\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\nimport { useUser } from 'hooks/useUser';\n// Services\nimport { GAME_API_COMMON_ACTIONS } from 'services/adapters';\n// Utils\nimport {\n  getRandomNegativeReadyMessage,\n  getRandomNeutralReadyMessage,\n  getRandomPositiveReadyMessage,\n  speak,\n} from 'utils/speech';\n// Components\nimport { Translate } from 'components/language';\nimport { LoadingPage } from 'components/loaders';\nimport { useGameInfoContext } from 'components/session/GameInfoContext';\nimport { StepTitle } from 'components/text/StepTitle';\n// Internal\nimport { RulesCarousel } from '../rules';\nimport { AutoNextPhase } from '../general/AutoNextPhase';\n\ntype PhaseRulesProps = {\n  players: GamePlayers;\n  info: GameInfo;\n};\n\nexport function PhaseRules({ players }: PhaseRulesProps) {\n  const { isLoading } = useLoading();\n  const info = useGameInfoContext();\n  const { language, translate } = useLanguage();\n  const user = useUser(players);\n  const [volume] = useGlobalLocalStorage('volume');\n  const [, setIsAdminEnabled] = useGlobalState('isAdminEnabled');\n\n  useEffectOnce(() => {\n    setIsAdminEnabled(true);\n  });\n\n  const gameId = useGameId();\n  // TODO: check if this is working\n  const queryClient = useQueryClient();\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: only gameId is necessary\n  useEffect(() => {\n    queryClient.invalidateQueries({ queryKey: ['meta', gameId] });\n  }, [gameId]);\n\n  const errorMessage = translate(\n    'Vixi, o aplicativo encontrou um erro ao tentar continuar',\n    'Oh no! The application found an error when trying to continue',\n  );\n\n  const onBeReady = useGameActionRequest({\n    actionName: 'be-ready',\n    successMessage: translate(\n      'Pronto! Aguarde os outros jogadores estarem prontos',\n      'Done! Now wait for the other players',\n    ),\n    errorMessage,\n    onSuccess: () => {\n      speak(getRandomPositiveReadyMessage(user.name), language, volume);\n    },\n  });\n\n  const onBeReadyIDK = useGameActionRequest({\n    actionName: 'be-ready',\n    successMessage: translate(\n      'Pronto! Aguarde os outros jogadores estarem prontos',\n      'Done! Now wait for the other players',\n    ),\n    errorMessage,\n    onSuccess: () => {\n      speak(getRandomNeutralReadyMessage(user.name), language, volume);\n    },\n  });\n\n  const onBeReadyQue = useGameActionRequest({\n    actionName: 'be-ready',\n    successMessage: translate(\n      'Vixi, se fudeu então, porque o jogo vai começar!',\n      'Sorry, you are screwed because the game is starting anyway!',\n    ),\n    errorMessage,\n    onSuccess: () => {\n      speak(getRandomNegativeReadyMessage(user.name), language, volume);\n    },\n  });\n\n  // DEV: Auto-ready\n  useMock(() => onBeReady({ action: GAME_API_COMMON_ACTIONS.MAKE_ME_READY }), [], 2);\n\n  if (!info?.gameName) {\n    return <LoadingPage />;\n  }\n\n  const backgroundColor = info.appearance?.backgroundColor;\n\n  return (\n    <Layout.Content className=\"phase-rules\" style={backgroundColor ? { backgroundColor } : {}}>\n      <StepTitle>\n        <Translate pt=\"Regras do Jogo\" en=\"Game Rules\" />\n      </StepTitle>\n\n      <RulesCarousel\n        info={info}\n        className=\"phase-rules__carousel\"\n        ruleClassName=\"phase-rules__rule\"\n        actionsClassName=\"phase-rules__actions\"\n      />\n\n      <Space className=\"phase-rules__actions\" wrap>\n        <Button\n          type=\"primary\"\n          icon={user.isReady ? <CheckCircleFilled /> : <SmileFilled />}\n          disabled={isLoading || user.isReady}\n          onClick={() => onBeReady({ action: GAME_API_COMMON_ACTIONS.MAKE_ME_READY })}\n          loading={isLoading}\n        >\n          <Translate\n            pt=\"Entendi tudo e estou pronto para jogar!\"\n            en=\"I understood everything and I'm ready to play!\"\n          />\n        </Button>\n        <Button\n          icon={user.isReady ? <CheckCircleFilled /> : <MehFilled />}\n          disabled={isLoading || user.isReady}\n          onClick={() => onBeReadyIDK({ action: GAME_API_COMMON_ACTIONS.MAKE_ME_READY })}\n          loading={isLoading}\n        >\n          <Translate pt=\"Não entendi nada, mas vamos lá!\" en=\"I don't get it but let's go!\" />\n        </Button>\n        <Button\n          type=\"primary\"\n          danger\n          icon={user.isReady ? <CheckCircleFilled /> : <RobotFilled />}\n          disabled={isLoading || user.isReady}\n          onClick={() => onBeReadyQue({ action: GAME_API_COMMON_ACTIONS.MAKE_ME_READY })}\n          loading={isLoading}\n        >\n          <Translate pt=\"Quê?\" en=\"What?\" />\n        </Button>\n      </Space>\n\n      <AutoNextPhase players={players} />\n    </Layout.Content>\n  );\n}\n","// Types\nimport type { GameState } from 'types/game';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { AnimatedGearIcon } from 'icons/AnimatedGearIcon';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { StepTitle } from 'components/text/StepTitle';\n// Internal\nimport { PhaseContainer } from './PhaseContainer';\n\ntype PhaseSetupProps = {\n  state: GameState;\n};\n\nexport function PhaseSetup({ state }: PhaseSetupProps) {\n  return (\n    <PhaseContainer phase={state?.phase} allowedPhase={PHASES.DEFAULT.SETUP} className=\"setup\">\n      <div className=\"phase-announcement\">\n        <StepTitle colorScheme=\"light\">\n          <Translate pt=\"Preparando o jogo...\" en=\"Setting up...\" />\n        </StepTitle>\n\n        <AnimatedGearIcon className=\"phase-announcement__icon\" />\n\n        <Instruction>\n          <Translate pt=\"Aguarde um momento\" en=\"Just a moment\" />\n        </Instruction>\n      </div>\n    </PhaseContainer>\n  );\n}\n","import { useEffectOnce } from 'react-use';\n// Hooks\nimport type { UseStep } from 'hooks/useStep';\n\ntype PhaseTimerResetProps = {\n  goToNextStep: UseStep['goToNextStep'];\n};\n\n/**\n * Component to be place in between sequential PhaseAnnouncement to reset the automatic timer\n * @param props\n * @returns\n */\nexport function PhaseTimerReset({ goToNextStep }: PhaseTimerResetProps) {\n  useEffectOnce(() => {\n    const delay = () => new Promise((res) => setTimeout(res, 100));\n    const next = async () => {\n      await delay();\n      goToNextStep();\n    };\n\n    next();\n  });\n\n  return <div></div>;\n}\n","// Ant Design Resources\nimport { LikeFilled } from '@ant-design/icons';\nimport { Avatar as AntAvatar, Typography } from 'antd';\n// Types\nimport type { GamePlayers, GamePlayer } from 'types/player';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\n\ntype ReadyPlayersBarProps = {\n  players: GamePlayers;\n  readyText?: string;\n  readyTextPlural?: string;\n  hideNames?: boolean;\n};\n\nexport function ReadyPlayersBar({\n  players,\n  readyText,\n  readyTextPlural,\n  hideNames = false,\n}: ReadyPlayersBarProps) {\n  const { readyPlayers, notReadyPlayers }: { readyPlayers: GamePlayer[]; notReadyPlayers: string[] } =\n    Object.values(players).reduce(\n      (acc: any, player: GamePlayer) => {\n        if (player.ready) {\n          acc.readyPlayers.push(player);\n        } else {\n          acc.notReadyPlayers.push(player.name);\n        }\n        return acc;\n      },\n      {\n        readyPlayers: [],\n        notReadyPlayers: [],\n      },\n    );\n\n  if (readyPlayers.length === 0) {\n    return <span></span>;\n  }\n\n  return (\n    <div className=\"ready-player-bar\">\n      <div className=\"ready-player-bar__bar\">\n        <AntAvatar.Group size=\"small\">\n          {readyPlayers.map((player) => (\n            <Avatar key={player.name} id={player.avatarId} />\n          ))}\n        </AntAvatar.Group>\n        <span className=\"ready-player-bar__speech-bubble\">\n          <Typography.Text>\n            {readyPlayers.length > 1 ? (\n              <Translate pt=\"Estamos prontos!\" en=\"We're ready!\" custom={readyTextPlural} />\n            ) : (\n              <Translate pt=\"Estou pronto!\" en=\"I'm ready!\" custom={readyText} />\n            )}\n          </Typography.Text>\n          <LikeFilled className=\"ready-player-bar__speech-bubble-icon\" />\n        </span>\n      </div>\n      {!hideNames && notReadyPlayers.length > 0 && (\n        <span className=\"ready-player-bar__names\">\n          <Translate pt=\"Esperando\" en=\"Waiting for\" />: {notReadyPlayers.join(', ')}\n        </span>\n      )}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { Fragment, type ReactNode, useMemo } from 'react';\n// Ant Design Resources\nimport { ForwardFilled } from '@ant-design/icons';\n// Types\nimport type { GamePlayer, GamePlayers } from 'types/player';\n// Utils\nimport { getAvatarColorById } from 'utils/helpers';\n// Components\nimport { AvatarName } from 'components/avatars';\nimport { Translate } from 'components/language';\n// Internal\nimport { reorder } from './reorder';\n\ntype TurnOrderProps = {\n  /**\n   * Game players\n   */\n  players: GamePlayers;\n  /**\n   * The order array\n   */\n  order: PlayerId[];\n  /**\n   * The active player who should be highlighted\n   */\n  activePlayerId?: PlayerId;\n  /**\n   * Optional custom title\n   */\n  title?: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Reorder turn order so it starts with given player\n   */\n  reorderByUser?: PlayerId;\n  /**\n   *\n   */\n  additionalInfoParser?: (player: GamePlayer) => ReactNode;\n};\n\nexport function TurnOrder({\n  players,\n  order,\n  activePlayerId,\n  reorderByUser,\n  title,\n  className = '',\n  additionalInfoParser,\n}: TurnOrderProps) {\n  const orderList = useMemo(\n    () => (reorderByUser ? reorder(order, reorderByUser) : order),\n    [reorderByUser, order],\n  );\n\n  return (\n    <div className={clsx('turn-order', className)}>\n      <header className=\"turn-order__title\">\n        <Translate en=\"Player Order\" pt=\"Ordem dos Jogadores\" custom={title} />\n      </header>\n      <ol className=\"turn-order__players\">\n        {orderList.map((playerId, index) => {\n          const player = players[playerId];\n          const isActive = activePlayerId === playerId;\n          return (\n            <Fragment key={`turn-order-player-${playerId}`}>\n              <span\n                className={clsx('turn-order__player', isActive && 'turn-order__player--active')}\n                style={isActive ? { backgroundColor: getAvatarColorById(player.avatarId) } : undefined}\n              >\n                <AvatarName player={player} />\n                {!!additionalInfoParser && additionalInfoParser(player)}\n              </span>\n              {index < order.length - 1 && (\n                <span className=\"turn-order__arrow\">\n                  <ForwardFilled />\n                </span>\n              )}\n            </Fragment>\n          );\n        })}\n      </ol>\n    </div>\n  );\n}\n","import type { ReactNode } from 'react';\n// Types\nimport type { GamePlayers } from 'types/player';\n// Hooks\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Icons\nimport { WaitingRoomIcon } from 'icons/WaitingRoomIcon';\n// Components\nimport { Translate } from 'components/language';\nimport { ReadyPlayersBar } from 'components/players';\nimport { Instruction, Title } from 'components/text';\n// Sass\nimport './WaitingRoom.scss';\n\ntype WaitingRoomProps = {\n  /**\n   * The game players\n   */\n  players: GamePlayers;\n  /**\n   * Replacement title of the waiting room\n   */\n  title?: ReactNode;\n  /**\n   * Replacement instruction for the waiting room\n   */\n  instruction?: ReactNode;\n  /**\n   * Additional content of the waiting room\n   */\n  children?: ReactNode;\n  /**\n   * Icon the replaces the default Waiting Room icon\n   */\n  icon?: ReactNode;\n};\n\nexport function WaitingRoom({ players, title, instruction, children, icon }: WaitingRoomProps) {\n  useTemporarilyHidePlayersBar();\n\n  return (\n    <div className=\"waiting-room\">\n      <Title colorScheme=\"light\">\n        <Translate pt=\"Pronto!\" en=\"Done!\" custom={title} />\n      </Title>\n      {icon ?? <WaitingRoomIcon style={{ width: '6rem' }} />}\n      <div className=\"waiting-room__content\">\n        <Instruction>\n          {instruction ? (\n            instruction\n          ) : (\n            <Translate pt=\"Vamos aguardar os outros jogadores!\" en=\"Please wait for the other players!\" />\n          )}\n        </Instruction>\n        {children}\n      </div>\n      <ReadyPlayersBar players={players} />\n    </div>\n  );\n}\n","export function reorder(order: PlayerId[], startWith: PlayerId): PlayerId[] {\n  const starterIndex = order.indexOf(startWith);\n\n  return [...order.slice(starterIndex), ...order.slice(0, starterIndex)];\n}\n","import { useEffect } from 'react';\n// Ant Design Resources\nimport { App } from 'antd';\n// Types\nimport type { GameState } from 'types/game';\n// Utils\nimport { print } from 'utils/helpers';\n// Internal\nimport { useFirestoreDocument } from './useFirestoreDocument';\n\nexport function useGameState(gameId: GameId, gameName: GameName): GameState {\n  const { notification } = App.useApp();\n  const docPath = `games/${gameName}/${gameId}/state`;\n\n  const { isLoading, isRefetching, isError, error, data } = useFirestoreDocument(docPath, true);\n\n  if (isError) {\n    notification.error({\n      message: 'The application found an error while trying to update the game state',\n      description: JSON.stringify(error),\n      placement: 'bottomLeft',\n    });\n    console.error(error);\n  }\n\n  const state = data ?? {};\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: <explanation>\n  useEffect(() => {\n    if (isLoading || isRefetching) {\n      console.count('Refreshing state...');\n    } else {\n      print({ state });\n    }\n  }, [isLoading, isRefetching]);\n\n  return state as GameState;\n}\n","import { type UseQueryResult, useQuery } from '@tanstack/react-query';\nimport { doc, getDoc, onSnapshot } from 'firebase/firestore';\nimport { useEffect } from 'react';\n// Services\nimport { firestore } from 'services/firebase';\n\n/**\n * React hook that retrieves a Firestore document and provides the result as a query object.\n * @param docPath - The path to the Firestore document.\n * @param [subscribe=false] - Whether to subscribe to real-time updates on the document.\n * @returns A React Query object containing the document data.\n */\nexport function useFirestoreDocument(docPath: string, subscribe = false): UseQueryResult {\n  const docRef = doc(firestore, docPath);\n  const query = useQuery({\n    queryKey: ['firestore', 'doc', docPath],\n    queryFn: async () => {\n      const snapshot = await getDoc(docRef);\n      return snapshot.data();\n    },\n  });\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: <explanation>\n  useEffect(() => {\n    if (subscribe) {\n      const unsubscribe = onSnapshot(docRef, () => {\n        query.refetch();\n      });\n\n      return () => unsubscribe();\n    }\n  }, [subscribe]);\n\n  return query;\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Badge, Tooltip } from 'antd';\n// Types\nimport type { GamePlayers } from 'types/player';\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\n// Utils\nimport { getAnimationClass, sortPlayers } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\n\ntype PlayersStatusBarProps = {\n  players: GamePlayers;\n};\n\nexport function PlayersStatusBar({ players }: PlayersStatusBarProps) {\n  const [showPlayersBar] = useGlobalState('showPlayersBar');\n\n  if (!showPlayersBar) {\n    return <></>;\n  }\n\n  return (\n    <div className={clsx('players-status-bar', getAnimationClass('slideInRight'))}>\n      <ul className=\"players-status-bar__list\">\n        {sortPlayers(players).map((player) => {\n          return (\n            <li className=\"players-status-bar__player\" key={`players-status-bar-${player.id}`}>\n              <Tooltip title={player.name} placement=\"left\" trigger=\"hover\">\n                <Badge dot color={player.ready ? 'green' : 'gray'}>\n                  <Avatar\n                    id={player.avatarId}\n                    alt={player.name}\n                    size=\"small\"\n                    className={clsx(!player.ready && 'players-status-bar__avatar-not-ready')}\n                  />\n                </Badge>\n              </Tooltip>\n              {player.ready && (\n                <div className=\"players-status-bar__ready\">\n                  <div className=\"players-status-bar__ready-speech\">\n                    <Translate pt=\"Pronto!\" en=\"I'm ready!\" />\n                  </div>\n                </div>\n              )}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Avatar as AntAvatar } from 'antd';\n// Types\nimport type { GameRound } from 'types/game';\n// Components\nimport { Translate } from 'components/language';\n\ntype SectionMetaProps = {\n  round: GameRound;\n  groupScore?: number;\n};\n\nexport function SectionMeta({ round, groupScore }: SectionMetaProps) {\n  return (\n    <ul className=\"game-info-drawer__meta\">\n      <li>\n        <div className=\"game-info-drawer__label-inline\">\n          <Translate pt=\"Rodada:\" en=\"Round:\" />\n        </div>\n        <AntAvatar className=\"game-info-drawer__round\" size=\"small\">\n          {round.current}\n        </AntAvatar>\n        <span className=\"game-info-drawer__inline-separator\">\n          <Translate pt=\"de\" en=\"out of\" />\n        </span>\n        <AntAvatar className=\"game-info-drawer__round\" size=\"small\">\n          {round.total}\n        </AntAvatar>\n      </li>\n\n      {Boolean(groupScore) && (\n        <li>\n          <div className=\"game-info-drawer__label-inline\">\n            <Translate pt=\"Pontos:\" en=\"Points:\" />\n          </div>\n          <AntAvatar\n            className=\"game-info-drawer__round\"\n            size=\"default\"\n            style={{ backgroundColor: 'gold', color: 'black' }}\n          >\n            {groupScore}\n          </AntAvatar>\n        </li>\n      )}\n    </ul>\n  );\n}\n","import { orderBy } from 'lodash';\nimport { useMemo } from 'react';\n// Ant Design Resources\nimport { Badge, Tag } from 'antd';\n// Types\nimport type { GamePlayers } from 'types/player';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useUser } from 'hooks/useUser';\n// Utils\nimport { AVATARS } from 'utils/avatars';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\n\ntype SectionRankedPlayersProps = {\n  players: GamePlayers;\n};\n\nexport function SectionRankedPlayers({ players }: SectionRankedPlayersProps) {\n  const { language } = useLanguage();\n  const user = useUser(players);\n\n  const rankedPlayers = useMemo(\n    () => orderBy(Object.values(players), ['score', 'name'], ['desc', 'asc']),\n    [players],\n  );\n  return (\n    <ul>\n      {rankedPlayers.map((player, index) => {\n        return (\n          <div className=\"game-info-drawer__ranked-player\" key={`ranked-${player.name}`}>\n            {index + 1}.{' '}\n            <Badge count={player.score} className=\"game-info-drawer__avatar-with-badge\">\n              <Avatar id={player.avatarId} shape=\"square\" />\n            </Badge>\n            {player.name}, {AVATARS[player.avatarId].description[language]}\n            {player.id === user.id && (\n              <Tag color={AVATARS[player.avatarId].color} className=\"game-info-drawer__avatar-tag\">\n                <Translate pt=\"VOCÊ\" en=\"YOU\" />\n              </Tag>\n            )}\n          </div>\n        );\n      })}\n    </ul>\n  );\n}\n","import { useQuery } from '@tanstack/react-query';\nimport { useState } from 'react';\n// Ant Design Resources\nimport { Alert, App, Button, Checkbox, Spin } from 'antd';\n// Hooks\nimport { useBlurCards } from 'hooks/useBlurCards';\nimport { useTDBaseUrl } from 'hooks/useTDBaseUrl';\n// Components\nimport { Translate } from 'components/language';\n// Ant Design Resource\n\nexport function BlurOptions() {\n  const { message } = App.useApp();\n  const { blurCard } = useBlurCards();\n  const baseUrl = useTDBaseUrl('resources');\n\n  const { isLoading, isError, data } = useQuery({\n    queryKey: ['credo'],\n    queryFn: async () => {\n      const response = await fetch(`${baseUrl}/images-credo.json`);\n      return await response.json();\n    },\n  });\n\n  const [selected, setSelected] = useState<BooleanDictionary>({\n    aliens: false,\n    cockroaches: false,\n    scorpions: false,\n    snakes: false,\n    spiders: false,\n  });\n\n  const onUpdateSelected = (key: string, value: boolean) => {\n    setSelected((prevState) => ({\n      ...prevState,\n      [key]: value,\n    }));\n  };\n\n  const onBlurSelected = () => {\n    // Gather all ids of all trues\n    const selectedGroups: string[][] = [];\n    Object.keys(selected).forEach((key) => {\n      if (selected[key] && data[key]) {\n        selectedGroups.push(data[key]);\n      }\n    });\n\n    selectedGroups.flat().forEach(blurCard);\n    message.success(<Translate pt=\"Cartas 'credadas' com sucesso\" en=\"Cards blurred successfully\" />);\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"blur-options\">\n        <Spin />\n      </div>\n    );\n  }\n\n  if (isError) {\n    return (\n      <div className=\"blur-options\">\n        <Alert\n          type=\"error\"\n          message={\n            <Translate\n              pt=\"Servidor falhou ao tentar baixar a lista de cartas credo\"\n              en=\"Server failed while trying to fetch blur cards list\"\n            />\n          }\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"blur-options\">\n      <p>\n        <Translate\n          pt=\"Você pode embaçar cartas automaticamente por tema\"\n          en=\"You may blur cards automatically by theme\"\n        />\n        :\n      </p>\n\n      <Checkbox\n        checked={selected.aliens}\n        disabled={!data.aliens}\n        onChange={(e) => onUpdateSelected('aliens', e.target.checked)}\n        className=\"blur-options__checkbox\"\n      >\n        <Translate pt=\"alienígenas\" en=\"aliens\" />\n      </Checkbox>\n\n      <Checkbox\n        checked={selected.cockroaches}\n        disabled={!data.cockroaches}\n        onChange={(e) => onUpdateSelected('cockroaches', e.target.checked)}\n        className=\"blur-options__checkbox\"\n      >\n        <Translate pt=\"baratas\" en=\"cockroaches\" />\n      </Checkbox>\n\n      <Checkbox\n        checked={selected.scorpions}\n        disabled={!data.scorpions}\n        onChange={(e) => onUpdateSelected('scorpions', e.target.checked)}\n        className=\"blur-options__checkbox\"\n      >\n        <Translate pt=\"escorpiões\" en=\"scorpions\" />\n      </Checkbox>\n\n      <Checkbox\n        checked={selected.snakes}\n        disabled={!data.snakes}\n        onChange={(e) => onUpdateSelected('snakes', e.target.checked)}\n        className=\"blur-options__checkbox\"\n      >\n        <Translate pt=\"cobras\" en=\"snakes\" />\n      </Checkbox>\n\n      <Checkbox\n        checked={selected.spiders}\n        disabled={!data.spiders}\n        onChange={(e) => onUpdateSelected('spiders', e.target.checked)}\n        className=\"blur-options__checkbox\"\n      >\n        <Translate pt=\"aranhas\" en=\"spiders\" />\n      </Checkbox>\n\n      <Button type=\"primary\" ghost size=\"small\" onClick={onBlurSelected}>\n        <Translate pt=\"Credar selecionados\" en=\"Blur selected\" />\n      </Button>\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport { Button, Switch, Tooltip } from 'antd';\n// Hooks\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\nimport { useDevFeatures } from 'hooks/useDevFeatures';\nimport { useGlobalLocalStorage } from 'hooks/useGlobalLocalStorage';\nimport { useGlobalState } from 'hooks/useGlobalState';\n// Components\nimport { LanguageSwitch, Translate } from 'components/language';\n// Internal\nimport { BlurOptions } from './BlurOptions';\n\nexport function SectionSettings() {\n  const { isAdmin } = useCurrentUserContext();\n  const [isAdminEnabled, setIsAdminEnabled] = useGlobalState('isAdminEnabled');\n  const { isDebugEnabled, toggleDevFeatures } = useDevFeatures();\n  const [blurEnabled, setBlurEnabled] = useGlobalLocalStorage('blurEnabled');\n  const [volume, setVolume] = useGlobalLocalStorage('volume');\n\n  const onBlurSwitchClick = (value: boolean) => {\n    setBlurEnabled(value);\n  };\n\n  const onSoundSwitchClick = (value: boolean) => {\n    setVolume(value ? 0.5 : 0);\n  };\n\n  return (\n    <div className=\"game-info-drawer__section-settings\">\n      <div className=\"game-info-drawer__settings-entry\">\n        <div className=\"game-info-drawer__switch-label\">\n          <Translate pt=\"Idioma\" en=\"Language\" />{' '}\n          <Tooltip\n            title={\n              <Translate\n                pt=\"Mudar língua do aplicativo, as cartas do jogo continuarão em sua língua original\"\n                en=\"Change app language, the game cards will remain in its original language\"\n              />\n            }\n          >\n            <Button type=\"text\" shape=\"circle\" icon={<InfoCircleOutlined />} size=\"small\" />\n          </Tooltip>\n        </div>\n\n        <LanguageSwitch />\n      </div>\n\n      <div className=\"game-info-drawer__settings-entry\">\n        <div className=\"game-info-drawer__switch-label\">\n          <Translate pt=\"Som\" en=\"Sound\" />\n          <Tooltip\n            title={<Translate pt=\"Muda ou desmuda sons no aplicativo\" en=\"Mute/Unmute sounds in the app\" />}\n          >\n            <Button type=\"text\" shape=\"circle\" icon={<InfoCircleOutlined />} size=\"small\" />\n          </Tooltip>\n        </div>\n\n        <Switch\n          checkedChildren=\"on\"\n          unCheckedChildren=\"off\"\n          checked={volume > 0}\n          onClick={onSoundSwitchClick}\n        />\n      </div>\n\n      <div className=\"game-info-drawer__settings-entry\">\n        <div className=\"game-info-drawer__switch-label\">\n          <Translate pt=\"Botão Credo\" en=\"Blur Button\" />\n          <Tooltip\n            title={\n              <Translate\n                pt=\"Adiciona um botão em todas Cartas-imagem para embaça-las caso você tenha alguma fobia\"\n                en=\"Adds a button to every Image Card to blur them in case you have any phobia\"\n              />\n            }\n          >\n            <Button type=\"text\" shape=\"circle\" icon={<InfoCircleOutlined />} size=\"small\" />\n          </Tooltip>\n        </div>\n\n        <Switch\n          checkedChildren=\"on\"\n          unCheckedChildren=\"off\"\n          checked={blurEnabled}\n          onClick={onBlurSwitchClick}\n        />\n      </div>\n\n      {blurEnabled && (\n        <div className=\"game-info-drawer__settings-entry\">\n          <BlurOptions />\n        </div>\n      )}\n\n      <div className=\"game-info-drawer__settings-entry\">\n        <div className=\"game-info-drawer__switch-label\">\n          Debug\n          <Tooltip\n            title={\n              <Translate\n                pt=\"Ativa coisas para ajudar o desenvolvedor a encontrar error. Use apenas quando instruído\"\n                en=\"Activate debug mode. Only turn on when instructed\"\n              />\n            }\n          >\n            <Button type=\"text\" shape=\"circle\" icon={<InfoCircleOutlined />} size=\"small\" />\n          </Tooltip>\n        </div>\n\n        <Switch\n          checkedChildren=\"on\"\n          unCheckedChildren=\"off\"\n          checked={isDebugEnabled}\n          onClick={toggleDevFeatures}\n        />\n      </div>\n\n      {isAdmin && (\n        <div className=\"game-info-drawer__settings-entry\">\n          <div className=\"game-info-drawer__switch-label\">\n            Admin\n            <Tooltip title={<Translate pt=\"Ativa recursos para o administrador\" en=\"Activate admin mode\" />}>\n              <Button type=\"text\" shape=\"circle\" icon={<InfoCircleOutlined />} size=\"small\" />\n            </Tooltip>\n          </div>\n\n          <Switch\n            checkedChildren=\"on\"\n            unCheckedChildren=\"off\"\n            checked={isAdminEnabled}\n            onClick={() => setIsAdminEnabled((s) => !s)}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n","import { useNavigate } from 'react-router-dom';\nimport { useToggle } from 'react-use';\n// Ant Design Resources\nimport { FireOutlined, SettingOutlined } from '@ant-design/icons';\nimport { Avatar as AntAvatar, Badge, Button, Divider, Drawer, Space } from 'antd';\n// Types\nimport type { GameState } from 'types/game';\nimport type { GamePlayers } from 'types/player';\n// Hooks\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { DebugOnly } from 'components/debug';\nimport { GameBanner } from 'components/general/GameBanner';\nimport { Translate } from 'components/language';\nimport { PlayersStatusBar } from 'components/players/PlayersStatusBar';\nimport { RulesModal } from 'components/rules';\nimport { useGameInfoContext } from 'components/session/GameInfoContext';\n// Internal\nimport { SectionMeta } from './_internal/SectionMeta';\nimport { SectionRankedPlayers } from './_internal/SectionRankedPlayers';\nimport { SectionSettings } from './_internal/SectionSettings';\n\ntype GameInfoDrawerProps = {\n  players: GamePlayers;\n  state: GameState;\n  userId: string;\n};\n\nexport function GameInfoDrawer({ players, state, userId }: GameInfoDrawerProps) {\n  const info = useGameInfoContext();\n  const { language } = useLanguage();\n  const [isDrawerOpen, toggleDrawer] = useToggle(false);\n  const [isSettingsOpen, toggleSettingsDrawer] = useToggle(false);\n  const navigate = useNavigate();\n  const { isAdmin, isAuthenticated, isGuest } = useCurrentUserContext();\n\n  if (state.phase === 'LOBBY') {\n    return <></>;\n  }\n\n  return (\n    <>\n      <div className=\"game-info-drawer-container\">\n        <button type=\"button\" className=\"game-info-drawer-button\" onClick={toggleDrawer}>\n          <span className=\"game-info-drawer-button__game-title\">\n            {info.title?.[language] ?? '?'}\n            <DebugOnly devOnly>({players?.[userId]?.name})</DebugOnly>\n          </span>\n          <AntAvatar icon={<SettingOutlined />} size=\"small\" />\n          <div className=\"game-info-drawer-button__player-status-bar\">\n            <PlayersStatusBar players={players} />\n          </div>\n        </button>\n\n        <Drawer\n          title={\n            <GameBanner\n              title={info?.title}\n              gameName={info.gameName}\n              preview={false}\n              className=\"round-corners\"\n            />\n          }\n          placement=\"right\"\n          closable={false}\n          onClose={toggleDrawer}\n          open={isDrawerOpen}\n        >\n          {isAuthenticated && !isGuest && (\n            <p>\n              <Badge size=\"default\" dot color=\"green\">\n                <Avatar id={players?.[userId]?.avatarId} shape=\"square\" size=\"small\" />\n              </Badge>{' '}\n              <Translate pt=\"Você está logado!\" en=\"You are logged in!\" />\n            </p>\n          )}\n\n          <Space>\n            <Button type=\"default\" onClick={() => toggleSettingsDrawer(true)} icon={<SettingOutlined />}>\n              <Translate pt=\"Configurações\" en=\"Settings\" />\n            </Button>\n            <RulesModal gameInfo={info} />\n            <Drawer\n              title={<Translate pt=\"Configurações\" en=\"Settings\" />}\n              width={200}\n              closable={false}\n              onClose={toggleSettingsDrawer}\n              open={isSettingsOpen}\n            >\n              <SectionSettings />\n            </Drawer>\n            {isAdmin && (\n              <Button type=\"default\" danger onClick={() => navigate('/hub')} icon={<FireOutlined />}>\n                Hub\n              </Button>\n            )}\n          </Space>\n\n          <Divider />\n\n          <SectionMeta round={state?.round || 0} groupScore={state?.groupScore} />\n\n          <SectionRankedPlayers players={players} />\n        </Drawer>\n      </div>\n    </>\n  );\n}\n","import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n// Ant Design Resources\nimport { Image, Modal } from 'antd';\n// Types\nimport type { GameState } from 'types/game';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { PUBLIC_URL } from 'utils/constants';\nimport GAME_LIST from 'utils/info';\n// Components\nimport { Translate } from 'components/language';\nimport { Title } from 'components/text';\n\ntype RedirectSessionProps = {\n  state: GameState;\n};\n\nexport function RedirectSession({ state }: RedirectSessionProps) {\n  const { language } = useLanguage();\n  const navigate = useNavigate();\n\n  const [open, setOpen] = useState<boolean | null>(null);\n  const [isLoading, setLoading] = useState(false);\n\n  const hideModal = () => {\n    setOpen(false);\n  };\n\n  const redirect = state.redirect;\n\n  if (redirect) {\n    const twoHoursInMilliseconds = 2 * 60 * 60 * 1000; // 2 hours\n    const currentMilliseconds = Date.now();\n\n    if (redirect.redirectAt - currentMilliseconds > twoHoursInMilliseconds) {\n      return <></>;\n    }\n\n    const gameInfo = GAME_LIST[redirect.gameName];\n    return (\n      <>\n        <Modal\n          title={\n            <Translate\n              pt=\"Você está convidado para uma nova partida\"\n              en=\"You've been invited to a new session\"\n            />\n          }\n          open={open ?? true}\n          onCancel={hideModal}\n          onOk={() => {\n            setLoading(true);\n            navigate(`/${redirect.gameId}`);\n          }}\n          okButtonProps={{ loading: isLoading }}\n          okText={<Translate pt=\"Quero participar!\" en=\"Take me there!\" />}\n          cancelText={<Translate pt=\"Cancelar\" en=\"Cancel\" />}\n        >\n          <Image\n            alt={gameInfo.title[language]}\n            src={`${PUBLIC_URL.BANNERS}${gameInfo.gameName}-${language}.jpg`}\n            fallback={`${PUBLIC_URL.BANNERS}/em-breve-${language}.jpg`}\n            className=\"round-corners\"\n          />\n          <Title>{redirect.gameId}</Title>\n        </Modal>\n      </>\n    );\n  }\n\n  return <></>;\n}\n","import type { AliasToken } from 'antd/es/theme/internal';\nimport { type ReactNode, useEffect, useMemo } from 'react';\n// Ant Design Resources\nimport { ConfigProvider } from 'antd';\n// Hooks\nimport { useGameMeta } from 'hooks/useGameMeta';\nimport { useGameState } from 'hooks/useGameState';\nimport { useGlobalLocalStorage } from 'hooks/useGlobalLocalStorage';\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useIdleRedirect } from 'hooks/useIdleRedirect';\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { AdminMenuDrawer } from 'components/admin';\nimport { GameInfoDrawer } from 'components/drawers';\nimport { AutoNextPhase } from 'components/general/AutoNextPhase';\nimport { PageLayout } from 'components/layout/PageLayout';\nimport { PhaseLobby } from 'components/phases';\n// Internal\nimport { RedirectSession } from './RedirectSession';\nimport { GameInfoProvider, useGameAppearance } from './GameInfoContext';\n// Utils\n\ntype SessionProps = {\n  /**\n   * The game collection name\n   */\n  gameCollection: GameName;\n  /**\n   * The active component to be rendered, usually a Phase... component\n   */\n  getActiveComponent: (args: any) => any;\n};\n\nexport function Session({ gameCollection, getActiveComponent }: SessionProps) {\n  const gameMeta = useGameMeta();\n  const { language } = useLanguage();\n  const state = useGameState(gameMeta.gameId, gameCollection);\n  const [userId] = useGlobalState('userId');\n  const [, setLanguage] = useGlobalLocalStorage('language');\n\n  const players = state.players ?? {};\n\n  useIdleRedirect();\n\n  // Update session language to match the game\n  // biome-ignore lint/correctness/useExhaustiveDependencies: only update then receiving the game language\n  useEffect(() => {\n    if (language !== gameMeta.language) {\n      setLanguage(gameMeta.language);\n    }\n  }, [gameMeta.language]);\n\n  if (!userId || !players[userId]) {\n    return (\n      <GameInfoProvider gameCollection={gameCollection}>\n        <SessionConfigWrapper>\n          <RedirectSession state={state} />\n          <PhaseLobby players={players} meta={gameMeta} />\n        </SessionConfigWrapper>\n      </GameInfoProvider>\n    );\n  }\n\n  const ActiveComponent: any = getActiveComponent(state);\n\n  return (\n    <PageLayout>\n      <GameInfoProvider gameCollection={gameCollection}>\n        <SessionConfigWrapper>\n          <GameInfoDrawer players={players} state={state} userId={userId} />\n          <RedirectSession state={state} />\n          <ActiveComponent players={players} state={state} meta={gameMeta} />\n          <AutoNextPhase players={players} />\n          <AdminMenuDrawer state={state} players={players} />\n        </SessionConfigWrapper>\n      </GameInfoProvider>\n    </PageLayout>\n  );\n}\n\ntype SessionConfigWrapperProps = {\n  children: ReactNode;\n};\n\nexport function SessionConfigWrapper({ children }: SessionConfigWrapperProps) {\n  const customTokens = useGetCustomTokens();\n\n  return (\n    <ConfigProvider\n      theme={{\n        token: customTokens,\n      }}\n    >\n      {children}\n    </ConfigProvider>\n  );\n}\n\nfunction useGetCustomTokens() {\n  const gameAppearance = useGameAppearance();\n\n  return useMemo(() => {\n    const customTokens: Partial<AliasToken> = {};\n    if (gameAppearance.primaryColor) {\n      customTokens.colorPrimary = gameAppearance.primaryColor;\n      customTokens.colorLink = gameAppearance.primaryColor;\n    }\n    if (gameAppearance.surfaceColor) {\n      customTokens.colorBgContainer = gameAppearance.surfaceColor;\n    }\n    return customTokens;\n  }, [gameAppearance]);\n}\n","import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useIdle } from 'react-use';\n// Ant Design Resources\nimport { App } from 'antd';\n// Internal\nimport { useLanguage } from './useLanguage';\n\nexport function useIdleRedirect() {\n  const { notification } = App.useApp();\n  const navigate = useNavigate();\n  const { translate } = useLanguage();\n\n  // Considers a player idle after 15 minutes of inactivity\n  const isIdle = useIdle(9e5);\n\n  useEffect(() => {\n    if (isIdle) {\n      notification.warning({\n        message: translate(\n          'Página parada por um longo tempo, redirecionando...',\n          'The page has been idle for too long, redirecting...',\n        ),\n        duration: 5,\n        onClose: () => navigate('/'),\n        placement: 'top',\n      });\n    }\n  }, [isIdle, navigate, translate, notification]);\n}\n","import clsx from 'clsx';\nimport { type ReactNode, forwardRef } from 'react';\n\nexport type StepProps = {\n  /**\n   * Overlay PhaseAnnouncement\n   */\n  announcement?: ReactNode;\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Flag indicating if the step should be full width\n   */\n  fullWidth?: boolean;\n  /**\n   * Flag indicating if the step should be full height\n   */\n  fullHeight?: boolean;\n};\n\nexport const Step = forwardRef<HTMLDivElement, StepProps>(\n  ({ children, announcement, fullWidth = false, fullHeight = false, className = '' }: StepProps, ref) => {\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          'step',\n          fullWidth && 'step--full-width',\n          fullHeight && 'step--full-height',\n          className,\n        )}\n      >\n        {announcement}\n        {children}\n      </div>\n    );\n  },\n);\n","import type { ReactNode } from 'react';\n// Types\nimport type { GamePlayers } from 'types/player';\n// Utils\nimport { print } from 'utils/helpers';\n// Components\nimport { Translate } from 'components/language';\nimport { Loading } from 'components/loaders';\nimport { WaitingRoom } from 'components/players';\n\nconst getWaitingRoomInstruction = (kind: string) => {\n  switch (kind) {\n    case 'SERVER':\n      return (\n        <Translate pt=\"Aguardando o servidor dar sinal de vida\" en=\"Waiting for the server to resuscitate\" />\n      );\n    case 'PLAYERS':\n      return (\n        <Translate\n          pt=\"Vamos aguardar enquanto os outros jogadores terminam!\"\n          en=\"Please wait while other players finish!\"\n        />\n      );\n\n    default:\n      return <Translate pt=\"Aguardando algo acontecer...\" en=\"Waiting for something...\" />;\n  }\n};\n\ntype StepSwitcherProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode[] | ReactNode;\n  /**\n   * The current step\n   */\n  step: number;\n  /*\n   * The conditions to render each step, otherwise the waiting room is rendered\n   */\n  conditions?: boolean[];\n  /**\n   * The players dictionary\n   */\n  players?: GamePlayers;\n  /**\n   * Waiting room customizations\n   */\n  waitingRoom?: {\n    /**\n     * The type of waiting room (for players or server)\n     */\n    type?: 'SERVER' | 'PLAYERS';\n    /**\n     * The instruction to replace the default one\n     */\n    instruction?: ReactNode;\n    /**\n     * Additional content to be rendered\n     */\n    content?: ReactNode;\n  };\n};\n\nexport function StepSwitcher({ children, step, conditions, players, waitingRoom = {} }: StepSwitcherProps) {\n  if (!players) print('SetSwitcher is being used without `players`, please add it.', 'warn');\n\n  const content = Array.isArray(children) ? children : [children];\n\n  if (players && step >= content.length) {\n    return (\n      <WaitingRoom\n        players={players}\n        title={<Translate pt=\"Pronto!\" en=\"Done!\" />}\n        instruction={waitingRoom.instruction ?? getWaitingRoomInstruction(waitingRoom.type ?? 'PLAYERS')}\n      >\n        {waitingRoom.content}\n      </WaitingRoom>\n    );\n  }\n\n  if (!content[step]) {\n    return <Loading />;\n  }\n\n  if (conditions?.[step] ?? true) {\n    return <>{content[step]}</>;\n  }\n\n  return <div></div>;\n}\n","import type { ReactNode } from 'react';\n// Icons\nimport { AnimatedClockIcon } from 'icons/AnimatedClockIcon';\n// Components\nimport { MetricHighlight, type MetricHighlightProps } from 'components/metrics/MetricHighlight';\n\nconst padTime = (value: number) => (value < 10 ? `0${value}` : value);\n\ntype TimerClockProps = {\n  /**\n   * Replacement icon for the clock icon\n   */\n  icon?: ReactNode;\n  /**\n   * Optional children that comes after the time\n   */\n  children?: ReactNode;\n  /**\n   * Minutes\n   */\n  minutes?: number;\n  /**\n   * Seconds\n   */\n  seconds: number;\n} & Omit<MetricHighlightProps, 'icon' | 'children'>;\n\n/**\n * Timer highlight with countdown functionality\n */\nexport function TimerClock({\n  icon,\n  type,\n  iconSize,\n  children,\n  className = '',\n  iconPlacement = 'before',\n  minutes = 0,\n  seconds,\n}: TimerClockProps) {\n  return (\n    <MetricHighlight\n      icon={icon ?? <AnimatedClockIcon />}\n      type={type}\n      iconSize={iconSize}\n      className={className}\n      iconPlacement={iconPlacement}\n    >\n      {minutes}:{padTime(seconds)}\n      {children}\n    </MetricHighlight>\n  );\n}\n","// Ant Design Resources\nimport { Progress, type ProgressProps } from 'antd';\n\ninterface TimerBarProps extends ProgressProps {\n  steps?: number;\n  value: number;\n  total: number;\n}\n\n/**\n * Time Bar presentational component used in timed operations\n * @param props\n * @returns\n */\nexport function TimerBar({\n  steps,\n  strokeLinecap,\n  total,\n  type = 'line',\n  value,\n  status = 'active',\n  ...props\n}: TimerBarProps) {\n  const percentage = 100 - (value * 100) / total;\n  return (\n    <Progress\n      percent={percentage}\n      steps={steps}\n      showInfo={false}\n      style={{ marginBottom: '1rem' }}\n      size={steps && steps > 30 ? 'small' : undefined}\n      type={type}\n      {...props}\n    />\n  );\n}\n","import clsx from 'clsx';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\n// Internal\nimport { TimerBar } from './TimerBar';\n\ntype TimedTimerBarProps = {\n  /**\n   * Duration in seconds\n   */\n  duration: number;\n  /**\n   * Function executed when the time is up\n   */\n  onExpire: GenericFunction;\n  /**\n   * Number of ticks in the bar\n   */\n  steps?: number;\n  /**\n   * Type of bar. Default: line\n   */\n  type?: 'circle' | 'line' | 'dashboard';\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\nexport function TimedTimerBar({ duration, onExpire, type, steps = 10, className }: TimedTimerBarProps) {\n  const { timeLeft } = useCountdown({\n    duration,\n    autoStart: true,\n    onExpire,\n  });\n\n  return (\n    <div className={clsx('timer-number', className)}>\n      {timeLeft} <TimerBar steps={steps} value={timeLeft} total={duration} type={type} /> {timeLeft}\n    </div>\n  );\n}\n","import type { ReactNode } from 'react';\n// Hooks\nimport { useCountdown, type useCountdownSettings } from 'hooks/useCountdown';\n// Icons\nimport { AnimatedClockIcon } from 'icons/AnimatedClockIcon';\n// Components\nimport { MetricHighlight, type MetricHighlightProps } from 'components/metrics/MetricHighlight';\n\nconst padTime = (value: number) => (value < 10 ? `0${value}` : value);\n\ntype TimedTimerClockProps = {\n  /**\n   * Replacement icon for the clock icon\n   */\n  icon?: ReactNode;\n  /**\n   * Optional children that comes after the time\n   */\n  children?: ReactNode;\n} & useCountdownSettings &\n  Omit<MetricHighlightProps, 'icon' | 'children'>;\n\n/**\n * Timer highlight with countdown functionality\n */\nexport function TimedTimerClock({\n  icon,\n  type,\n  iconSize,\n  children,\n  className = '',\n  iconPlacement = 'before',\n  ...timerProps\n}: TimedTimerClockProps) {\n  const { minutes, seconds } = useCountdown({ ...timerProps });\n\n  return (\n    <MetricHighlight\n      icon={icon ?? <AnimatedClockIcon />}\n      type={type}\n      iconSize={iconSize}\n      className={className}\n      iconPlacement={iconPlacement}\n    >\n      {minutes}:{padTime(seconds)}\n      {children}\n    </MetricHighlight>\n  );\n}\n","// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\n\ntype TimeForActionProps = {\n  duration: number;\n  onExpire?: () => void;\n  timeLeft?: number;\n};\n\nexport function WaitingTime({ duration, timeLeft, onExpire }: TimeForActionProps) {\n  const { timeLeft: privateTimeLeft } = useCountdown({\n    duration,\n    autoStart: timeLeft === undefined,\n    onExpire,\n  });\n\n  const percentage = ((timeLeft ?? privateTimeLeft) / duration) * 100;\n\n  return (\n    <div className=\"timer-waiting-time-bar\">\n      <span className=\"timer-waiting-time-bar__container\">\n        <span className=\"timer-waiting-time-bar__left\" style={{ width: `${percentage}%` }} />\n      </span>\n    </div>\n  );\n}\n","// Internal\nimport { useGlobalLocalStorage } from './useGlobalLocalStorage';\n\ntype UseBlurCards = {\n  blurredCards: BooleanDictionary;\n  shouldBeBlurred: (cardId?: string) => boolean;\n  blurCard: (cardId: string) => void;\n  isBlurEnabled: boolean;\n};\n\n/**\n * Add card ids to the blur dictionary\n * @returns the dictionary of blurred ids, the function to add a blur card, the function to check if a card should be blurred, the flag indicating if the feature was enabled by the user\n */\nexport function useBlurCards(): UseBlurCards {\n  const [blurredCards, setBlurredCards] = useGlobalLocalStorage('blurredCards');\n  const [blurEnabled] = useGlobalLocalStorage('blurEnabled');\n\n  const blurCard = (cardId: string) => {\n    setBlurredCards({\n      ...blurredCards,\n      [cardId]: !blurredCards?.[cardId] ?? true,\n    });\n  };\n\n  const shouldBeBlurred = (cardId?: string) => {\n    return Boolean(cardId && blurEnabled && blurredCards?.[cardId]);\n  };\n\n  return {\n    blurredCards,\n    shouldBeBlurred,\n    blurCard,\n    isBlurEnabled: blurEnabled,\n  };\n}\n","// Internal\nimport { isDevEnv } from '../utils/helpers';\nimport { useGlobalState } from './useGlobalState';\n\n/**\n * Controls debug and dev environment\n * @returns\n */\nexport function useDevFeatures() {\n  const [isDebugEnabled, setIsDebugEnabled] = useGlobalState('isDebugEnabled');\n\n  const toggleDevFeatures = () => {\n    setIsDebugEnabled((s) => !s);\n  };\n\n  return {\n    isDevEnv,\n    isDebugEnabled,\n    toggleDevFeatures,\n  };\n}\n","import { useMutation } from '@tanstack/react-query';\n// Ant Design Resources\nimport { App } from 'antd';\n// Services\nimport { GAME_API, type GAME_API_COMMON_ACTIONS } from 'services/adapters';\n// Internal\nimport { useLoading } from './useLoading';\nimport { useGlobalState } from './useGlobalState';\nimport { useGameMeta } from './useGameMeta';\n\nconst debounce = (func: any, timeout = 1000): ((...args: any[]) => any) => {\n  let timer: NodeJS.Timeout;\n  return (...args: any[]) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      func.apply(this, args);\n    }, timeout);\n  };\n};\n\nexport type UseGameActionRequestArgs = {\n  actionName: string;\n  onBeforeCall?: (...args: any) => any;\n  onAfterCall?: (...args: any) => any;\n  onError?: (...args: any) => any;\n  onSuccess?: (...args: any) => any;\n  successMessage?: string;\n  errorMessage?: string;\n};\n\ninterface Payload {\n  action: keyof typeof GAME_API_COMMON_ACTIONS | string;\n  [key: string]: any;\n}\n\n/**\n * Custom hook for making a game action request.\n *\n * @param options - The options for the game action request.\n * @param options.actionName - The name of the action.\n * @param [options.onBeforeCall] - The callback function to be called before making the API call.\n * @param [options.onAfterCall] - The callback function to be called after making the API call.\n * @param [options.onError] - The callback function to be called when an error occurs during the API call.\n * @param [options.onSuccess] - The callback function to be called when the API call is successful.\n * @param [options.successMessage] - The success message to be displayed.\n * @param [options.errorMessage] - The error message to be displayed.\n * @returns The debounced function for making the game action request.\n */\nexport function useGameActionRequest({\n  actionName,\n  onBeforeCall = () => {},\n  onAfterCall = () => {},\n  onError = () => {},\n  onSuccess = () => {},\n  successMessage = 'API call was successful',\n  errorMessage = 'API call has failed',\n}: UseGameActionRequestArgs): (...args: any[]) => any {\n  const { message, notification } = App.useApp();\n  const { setLoader } = useLoading();\n  const { gameId, gameName } = useGameMeta();\n  const [userId] = useGlobalState('userId');\n\n  const query = useMutation({\n    mutationKey: [actionName],\n    mutationFn: (payload: Payload) =>\n      GAME_API.run({\n        gameId,\n        gameName,\n        playerId: userId,\n        ...payload,\n      }),\n    onMutate: async () => {\n      setLoader(actionName, true);\n      await onBeforeCall();\n    },\n    onSuccess: async () => {\n      await onSuccess();\n      message.success(successMessage);\n    },\n    onError: (e: Error) => {\n      notification.error({\n        message: errorMessage,\n        description: JSON.stringify(e?.message),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n      onError();\n    },\n    onSettled: async () => {\n      await onAfterCall();\n      setLoader(actionName, false);\n    },\n  });\n\n  return debounce(query.mutate);\n}\n","// Internal\nimport { useGameMeta } from './useGameMeta';\nimport { useGlobalState } from './useGlobalState';\n\n/**\n * Determine is user is the Host by checking if they were the one who created the game.\n * @returns Returns true if the user is the Host, false otherwise\n */\nexport function useHost(): boolean {\n  const { createdBy } = useGameMeta();\n  const [userId] = useGlobalState('userId');\n\n  return createdBy === userId;\n}\n","import { USE_MOCKS } from 'dev-configs';\nimport { useState } from 'react';\n// Utils\nimport { VIEWER_ID } from 'utils/constants';\nimport { getRandomItem, isDevEnv } from 'utils/helpers';\n// Internal\nimport { useCountdown } from './useCountdown';\nimport { useGlobalState } from './useGlobalState';\nimport { useHost } from './useHost';\n\n/**\n * Runs mock function tht performs whatever after 3-6 seconds\n * @param whatToDo\n * @param requirements\n * @param delay (default a random value between 3-6 seconds)\n * @returns\n */\nexport function useMock(whatToDo: () => void, requirements: unknown[] = [], delay?: number) {\n  const isHost = useHost();\n  const [userId] = useGlobalState('userId');\n  const [runOnce, setRunOnce] = useState(false);\n  const duration = delay ?? getRandomItem([3, 4, 4, 5, 6]);\n\n  return useCountdown({\n    duration,\n    onExpire: () => {\n      if (\n        !runOnce &&\n        isDevEnv &&\n        USE_MOCKS &&\n        !isHost &&\n        userId !== VIEWER_ID &&\n        requirements.every(Boolean)\n      ) {\n        whatToDo();\n        setRunOnce(true);\n      }\n    },\n    disabled: runOnce,\n  });\n}\n","import { useState } from 'react';\n\nexport type UseStep = {\n  step: number;\n  setStep: React.Dispatch<React.SetStateAction<number>>;\n  goToNextStep: () => void;\n  goToPreviousStep: () => void;\n};\n\n/**\n * Controls steps\n * @param startingStep\n */\nexport function useStep(startingStep = 0): UseStep {\n  const [step, setStep] = useState<number>(startingStep);\n\n  const goToNextStep = () => setStep((s) => s + 1);\n\n  const goToPreviousStep = () => setStep((s) => (s - 1 < 0 ? 0 : s - 1));\n\n  return {\n    step,\n    setStep,\n    goToNextStep,\n    goToPreviousStep,\n  };\n}\n","/**\n * Returns the URL for the given kind of resource\n * @param kind the kind of resource\n * @returns the URL for the given kind of resource\n */\nexport function useTDBaseUrl(library: 'images' | 'sprites' | 'resources' | 'classic'): string {\n  const baseUrl = process.env.REACT_APP_TD_BASE_URL;\n\n  switch (library) {\n    case 'images':\n      return `${baseUrl}/${process.env.REACT_APP_TD_IMAGES}`;\n    case 'sprites':\n      return `${baseUrl}/${process.env.REACT_APP_TD_SPRITES}`;\n    case 'resources':\n      return `${baseUrl}/${process.env.REACT_APP_TD_RESOURCES}`;\n    case 'classic':\n      return `${baseUrl}/${process.env.REACT_APP_TD_CLASSIC}`;\n    default:\n      throw new Error('Invalid library');\n  }\n}\n","import { useEffectOnce } from 'react-use';\n// Internal\nimport { useGlobalState } from './useGlobalState';\n\nexport function useTemporarilyHidePlayersBar(ignore = false) {\n  const [, setShowPlayersBar] = useGlobalState('showPlayersBar');\n\n  useEffectOnce(() => {\n    setShowPlayersBar(ignore);\n    return () => {\n      setShowPlayersBar(true);\n    };\n  });\n}\n","import { useEffect, useState } from 'react';\n// Types\nimport type { GameState } from 'types/game';\nimport type { GamePlayers, GamePlayer } from 'types/player';\n// Utils\nimport { PLACEHOLDER_PLAYER, VIEWER_ID } from 'utils/constants';\n// Internal\nimport { useGlobalState } from './useGlobalState';\n\nconst THREE_MINUTES = 3 * 60 * 1000;\n\n/**\n * Get player data for the user\n * @param players\n * @returns\n */\nexport function useUser(players: GamePlayers, state?: GameState): GamePlayer {\n  const [userId] = useGlobalState('userId');\n  const [user, setUser] = useGlobalState('user');\n  const [isReady, setIsReady] = useState(false);\n\n  useEffect(() => {\n    if (userId === VIEWER_ID) {\n      setUser({\n        ...PLACEHOLDER_PLAYER,\n        id: VIEWER_ID,\n        ready: true,\n      });\n      return;\n    }\n\n    if (userId && players?.[userId]) {\n      setUser(players?.[userId]);\n    }\n  }, [players, userId, setUser]);\n\n  useEffect(() => {\n    if (userId === VIEWER_ID) {\n      setIsReady(false);\n      return;\n    }\n    // Check if user is ready and check if user has been ready after the last state change\n    if (userId && user?.ready === false) {\n      setIsReady(false);\n      return;\n    }\n\n    if (!state?.updatedAt) {\n      setIsReady(user?.ready ?? true);\n      return;\n    }\n\n    // If state was updated after the player was updated, data might not be synced\n    if (userId && user?.updatedAt < state?.updatedAt) {\n      setIsReady(false);\n      return;\n    }\n\n    setIsReady(true);\n  }, [userId, user?.ready, user?.updatedAt, state?.updatedAt]);\n\n  return {\n    ...user,\n    isReady,\n    online: user.updatedAt ? Date.now() - user.updatedAt < THREE_MINUTES : false,\n  };\n}\n","/**\n * Enum of Game Phases\n */\nexport const PHASES = {\n  DEFAULT: {\n    LOBBY: 'LOBBY',\n    RULES: 'RULES',\n    SETUP: 'SETUP',\n    GAME_OVER: 'GAME_OVER',\n    WAIT: 'WAIT',\n  },\n  ADEDANHX: {\n    ANSWERING: 'ANSWERING',\n    EVALUATION: 'EVALUATION',\n    RESULTS: 'RESULTS',\n  },\n  ARTE_RUIM: {\n    DRAW: 'DRAW',\n    EVALUATION: 'EVALUATION',\n    GALLERY: 'GALLERY',\n  },\n  BOMBA_RELOGIO: {\n    ROLE_ASSIGNMENT: 'ROLE_ASSIGNMENT',\n    DECLARATION: 'DECLARATION',\n    EXAMINATION: 'EXAMINATION',\n    RESULT: 'RESULT',\n  },\n  CINEGRAFISTAS_AMADORES: {\n    UNKNOWN: 'UNKNOWN',\n  },\n  COMUNICACAO_ALIENIGENA: {\n    ALIEN_SELECTION: 'ALIEN_SELECTION',\n    ALIEN_SEEDING: 'ALIEN_SEEDING',\n    HUMAN_ASK: 'HUMAN_ASK',\n    ALIEN_ANSWER: 'ALIEN_ANSWER',\n    ALIEN_REQUEST: 'ALIEN_REQUEST',\n    OFFERINGS: 'OFFERINGS',\n    REVEAL: 'REVEAL',\n  },\n  COMUNICACAO_DUO: {\n    ASKING_FOR_SOMETHING: 'ASKING_FOR_SOMETHING',\n    DELIVER_SOMETHING: 'DELIVER_SOMETHING',\n    VERIFICATION: 'VERIFICATION',\n  },\n  CONTADORES_HISTORIAS: {\n    STORY: 'STORY',\n    CARD_PLAY: 'CARD_PLAY',\n    VOTING: 'VOTING',\n    RESOLUTION: 'RESOLUTION',\n  },\n  CONTROLE_DE_ESTOQUE: {\n    // PHASE ONE\n    GOOD_PLACEMENT: 'GOOD_PLACEMENT',\n    PLACEMENT_CONFIRMATION: 'PLACEMENT_CONFIRMATION',\n    // PHASE TWO\n    FULFILLMENT: 'FULFILLMENT',\n    RESULTS: 'RESULTS',\n  },\n  CRUZA_PALAVRAS: {\n    WORDS_SELECTION: 'WORDS_SELECTION',\n    CLUE_WRITING: 'CLUE_WRITING',\n    GUESSING: 'GUESSING',\n    REVEAL: 'REVEAL',\n  },\n  DETETIVES_IMAGINATIVOS: {\n    SECRET_CLUE: 'SECRET_CLUE',\n    CARD_PLAY: 'CARD_PLAY',\n    DEFENSE: 'DEFENSE',\n    VOTING: 'VOTING',\n    REVEAL: 'REVEAL',\n  },\n  DUETOS: {\n    PAIRING: 'PAIRING',\n    RESULTS: 'RESULTS',\n  },\n  ESPIAO_ENTRE_NOS: {\n    ASSIGNMENT: 'ASSIGNMENT',\n    INVESTIGATION: 'INVESTIGATION',\n    ASSESSMENT: 'ASSESSMENT',\n    FINAL_ASSESSMENT: 'FINAL_ASSESSMENT',\n    RESOLUTION: 'RESOLUTION',\n  },\n  ESQUIADORES: {\n    BETS: 'BETS',\n    STARTING_RESULTS: 'STARTING_RESULTS',\n    BOOSTS: 'BOOSTS',\n    PRELIMINARY_RESULTS: 'PRELIMINARY_RESULTS',\n    LAST_CHANGE: 'LAST_CHANGE',\n    FINAL_RESULTS: 'FINAL_RESULTS',\n  },\n  FILEIRA_DE_FATOS: {\n    ORDERING: 'ORDERING',\n    RESULTS: 'RESULTS',\n  },\n  GALERIA_DE_SONHOS: {\n    WORD_SELECTION: 'WORD_SELECTION',\n    DREAMS_SELECTION: 'DREAMS_SELECTION',\n    CARD_PLAY: 'CARD_PLAY',\n    RESOLUTION: 'RESOLUTION',\n  },\n  CRIMES_HEDIONDOS: {\n    CRIME_SELECTION: 'CRIME_SELECTION',\n    SCENE_MARKING: 'SCENE_MARKING',\n    GUESSING: 'GUESSING',\n    REVEAL: 'REVEAL',\n  },\n  INSTRUMENTOS_CODIFICADOS: {\n    UNKNOWN: 'UNKNOWN',\n  },\n  LABIRINTO_SECRETO: {\n    MAP_BUILDING: 'MAP_BUILDING',\n    PATH_FOLLOWING: 'PATH_FOLLOWING',\n    RESULTS: 'RESULTS',\n  },\n  LINHAS_CRUZADAS: {\n    PROMPT_SELECTION: 'PROMPT_SELECTION',\n    DRAWING: 'DRAWING',\n    NAMING: 'NAMING',\n    PRESENTATION: 'PRESENTATION',\n  },\n  MEGAMIX: {\n    SEEDING: 'SEEDING',\n    TRACK: 'TRACK',\n    RESULT: 'RESULT',\n  },\n  MENTE_COLETIVA: {\n    QUESTION_SELECTION: 'QUESTION_SELECTION',\n    EVERYBODY_WRITES: 'EVERYBODY_WRITES',\n    COMPARE: 'COMPARE',\n    RESOLUTION: 'RESOLUTION',\n  },\n  MESMICE: {\n    CLUE_WRITING: 'CLUE_WRITING',\n    OBJECT_FEATURE_ELIMINATION: 'OBJECT_FEATURE_ELIMINATION',\n    RESULT: 'RESULT',\n  },\n  NA_RUA_DO_MEDO: {\n    TRICK_OR_TREAT: 'TRICK_OR_TREAT',\n    RESULT: 'RESULT',\n    STREET_END: 'STREET_END',\n  },\n  NAO_SOU_ROBO: {\n    CARD_SELECTION: 'CARD_SELECTION',\n    ARE_YOU_A_ROBOT: 'ARE_YOU_A_ROBOT',\n    RESULTS: 'RESULTS',\n  },\n  NAUFRAGOS: {\n    UNKNOWN: 'UNKNOWN',\n  },\n  ONDA_TELEPATICA: {\n    DIAL_CLUE: 'DIAL_CLUE',\n    GUESS: 'GUESS',\n    REVEAL: 'REVEAL',\n  },\n  PALHETA_DE_CORES: {\n    UNKNOWN: 'UNKNOWN',\n  },\n  PLANEJAMENTO_URBANO: {\n    PLANNING: 'PLANNING',\n    PLACING: 'PLACING',\n    RESOLUTION: 'RESOLUTION',\n  },\n  POLEMICA_DA_VEZ: {\n    TOPIC_SELECTION: 'TOPIC_SELECTION',\n    REACT: 'REACT',\n    RESOLUTION: 'RESOLUTION',\n  },\n  PORTA_DOS_DESESPERADOS: {\n    BOOK_POSSESSION: 'BOOK_POSSESSION',\n    DOOR_CHOICE: 'DOOR_CHOICE',\n    RESOLUTION: 'RESOLUTION',\n  },\n  QUEM_NAO_MATA: {\n    TARGETING: 'TARGETING',\n    STANDOFF: 'STANDOFF',\n    DUEL: 'DUEL',\n    RESOLUTION: 'RESOLUTION',\n  },\n  QUEM_SOU_EU: {\n    CHARACTER_FILTERING: 'CHARACTER_FILTERING',\n    CHARACTER_DESCRIPTION: 'CHARACTER_DESCRIPTION',\n    GUESSING: 'GUESSING',\n    RESULTS: 'RESULTS',\n  },\n  RETRATO_FALADO: {\n    COMPOSITE_SKETCH: 'COMPOSITE_SKETCH',\n    EVALUATION: 'EVALUATION',\n    REVEAL: 'REVEAL',\n  },\n  SINAIS_DE_ALERTA: {\n    DRAWING: 'DRAWING',\n    EVALUATION: 'EVALUATION',\n    GALLERY: 'GALLERY',\n  },\n  SONHOS_PESADELOS: {\n    DREAM_TELLING: 'DREAM_TELLING',\n    MATCHING: 'MATCHING',\n    RESOLUTION: 'RESOLUTION',\n  },\n  SUPER_CAMPEONATO: {\n    CHALLENGE_SELECTION: 'CHALLENGE_SELECTION',\n    CONTENDER_SELECTION: 'CONTENDER_SELECTION',\n    BETS: 'BETS',\n    BATTLE: 'BATTLE',\n    RESULTS: 'RESULTS',\n  },\n  TA_NA_CARA: {\n    PROMPT: 'PROMPT',\n    ANSWERING: 'ANSWERING',\n    GUESSING: 'GUESSING',\n    REVEAL: 'REVEAL',\n  },\n  TEORIA_DE_CONJUNTOS: {\n    JUDGE_SELECTION: 'JUDGE_SELECTION',\n    ITEM_PLACEMENT: 'ITEM_PLACEMENT',\n    EVALUATION: 'EVALUATION',\n    REVEAL: 'REVEAL',\n  },\n  TESTEMUNHA_OCULAR: {\n    WITNESS_SELECTION: 'WITNESS_SELECTION',\n    QUESTION_SELECTION: 'QUESTION_SELECTION',\n    QUESTIONING: 'QUESTIONING',\n    TRIAL: 'TRIAL',\n  },\n  TESTE_DE_ELENCO: {\n    MOVIE_GENRE_SELECTION: 'MOVIE_GENRE_SELECTION',\n    ACTOR_SELECTION: 'ACTOR_SELECTION',\n    RESULT: 'RESULT',\n  },\n  TREVO_DA_SORTE: {\n    WORD_SELECTION: 'WORD_SELECTION',\n    CLOVER_WRITING: 'CLOVER_WRITING',\n    CLOVER_GUESSING: 'CLOVER_GUESSING',\n    RESULTS: 'RESULTS',\n  },\n  UE_SO_ISSO: {\n    WORD_SELECTION: 'WORD_SELECTION',\n    SUGGEST: 'SUGGEST',\n    COMPARE: 'COMPARE',\n    GUESS: 'GUESS',\n    VERIFY_GUESS: 'VERIFY_GUESS',\n    RESULT: 'RESULT',\n  },\n  VAMOS_AO_CINEMA: {\n    MOVIE_SELECTION: 'MOVIE_SELECTION',\n    MOVIE_ELIMINATION: 'MOVIE_ELIMINATION',\n    REVEAL: 'REVEAL',\n  },\n  VENDAVAL_DE_PALPITE: {\n    BOSS_SELECTION: 'BOSS_SELECTION',\n    SECRET_WORD_SELECTION: 'SECRET_WORD_SELECTION',\n    PLAYERS_CLUES: 'PLAYERS_CLUES',\n    CLUE_EVALUATIONS: 'CLUE_EVALUATIONS',\n  },\n  VINGATIVOS: {\n    UNKNOWN: 'UNKNOWN',\n  },\n  TEMPLATE: {\n    UNKNOWN: 'UNKNOWN',\n  },\n};\n","// Internal\nimport { getRandomItem, stringRemoveAccents } from './helpers';\n\n/**\n * Tells browser to speak out loud given sentence in given language in given volume\n * @param text\n * @param language\n * @param volume\n */\nexport function speak(\n  text: DualLanguageValue,\n  language: Language,\n  volume: number,\n  onEnd: GenericFunction = () => {},\n): void {\n  const utterance = new SpeechSynthesisUtterance(text[language]);\n  utterance.lang = language === 'pt' ? 'pt-BR' : 'en-US';\n  utterance.volume = volume;\n  utterance.addEventListener('end', onEnd);\n  window.speechSynthesis.speak(utterance);\n}\n\n/**\n * Give variety to the lobby greeting message\n * @param name\n * @returns\n */\nexport function getRandomWelcomeMessage(name: string): DualLanguageValue {\n  // Special flavia\n  if (stringRemoveAccents(name.toLowerCase()).startsWith('fla')) {\n    const options = [\n      {\n        pt: `A mais sexy de todas chegou! Bem-vinda, ${name}!`,\n        en: `Welcome, ${name}!`,\n      },\n      {\n        pt: `Fiu, fiu! ${name} chegou para abalar e sensualizar!`,\n        en: `Welcome, ${name}!`,\n      },\n      {\n        pt: `Olha só quem chegou! ${name}, a mais linda de todas!`,\n        en: `Welcome, ${name}!`,\n      },\n    ];\n\n    return getRandomItem(options);\n  }\n\n  const options = [\n    {\n      pt: `Bem-vindo, ${name}!`,\n      en: `Welcome, ${name}!`,\n    },\n    {\n      pt: 'Olha ele, ou ela, ou elix, aqui!',\n      en: 'Look at you! Ready to play!',\n    },\n    {\n      pt: 'Eba! Você entrou',\n      en: `Yay, you're in!`,\n    },\n    {\n      pt: `Saudações, ${name}!`,\n      en: `Greetings, ${name}!`,\n    },\n    {\n      pt: `${name} chegou para abalar essa geringonça!`,\n      en: `${name} is here!`,\n    },\n    {\n      pt: `Presente, presidente. ${name} está aqui, fessô!`,\n      en: `You are here, ${name}!`,\n    },\n    {\n      pt: 'O jogo vai ser muito mais sensual agora que você entrou',\n      en: `The game will be so much better now that you're here!`,\n    },\n    {\n      pt: `Olha quem decidiu dar as caras! Bem-vindo, ${name}!`,\n      en: `Look who decided to show up! Welcome, ${name}!`,\n    },\n    {\n      pt: `A festa começou! ${name} chegou!`,\n      en: `The party has started! ${name} is here!`,\n    },\n    {\n      pt: `Seja bem-vindo ao rolê, ${name}!`,\n      en: `Welcome to the fun, ${name}!`,\n    },\n    {\n      pt: `Você trouxe a energia boa, ${name}! Vamos lá!`,\n      en: `You brought the good vibes, ${name}! Let’s go!`,\n    },\n    {\n      pt: `Ah, que delícia! ${name} chegou para animar a galera!`,\n      en: `Oh, how wonderful! ${name} is here to spice things up!`,\n    },\n    {\n      pt: `Atenção, pessoal! O rei ou rainha ${name} chegou!`,\n      en: `Attention, everyone! King or Queen ${name} has arrived!`,\n    },\n    {\n      pt: `Ei, ${name}! Você trouxe o lanche? Porque a diversão já começou!`,\n      en: `Hey, ${name}! Did you bring snacks? Because the fun has already started!`,\n    },\n    {\n      pt: `Preparem-se! ${name} é a estrela do show!`,\n      en: `Get ready! ${name} is the star of the show!`,\n    },\n    {\n      pt: `Olha o povo! ${name} entrou e agora é só alegria!`,\n      en: `Look out, world! ${name} is here and it’s all fun from now on!`,\n    },\n    {\n      pt: `Parou tudo! ${name} chegou e agora o jogo vai bombar!`,\n      en: `Hold everything! ${name} has arrived, and now the game is about to blow up!`,\n    },\n  ];\n\n  return getRandomItem(options);\n}\n\nexport function getRandomPositiveReadyMessage(name: string): DualLanguageValue {\n  const options = [\n    {\n      pt: `Pronto! Aguarde os outros jogadores estarem prontos. Boa sorte, ${name}`,\n      en: `Done! Now wait for the other players. Good luck, ${name}`,\n    },\n    {\n      pt: 'Pronto! Agora é so esperar esses manés',\n      en: 'Done and Ready to play! Were you born ready?',\n    },\n    {\n      pt: 'Pronto! Cá entre nós, estou torcendo por você!',\n      en: 'Done! And can I tell you a secret? I’m rooting for you!',\n    },\n    {\n      pt: `Pronto! Que comece a diversão! Não se esqueça de respirar, ${name}!`,\n      en: `Ready! Let the fun begin! Don't forget to breathe, ${name}!`,\n    },\n    {\n      pt: 'Pronto! Agora é só esperar esses lagartixas chegarem!',\n      en: 'Ready! Now just waiting for those slowpokes to show up!',\n    },\n    {\n      pt: 'Pronto! Se você estiver tão empolgado quanto eu, vamos arrebentar!',\n      en: `Ready! If you're as excited as I am, we’re going to crush it!`,\n    },\n    {\n      pt: 'Pronto! Espero que você tenha trazido suas habilidades secretas!',\n      en: 'Ready! I hope you brought your secret skills with you!',\n    },\n    {\n      pt: 'Pronto! Estou mais ansioso que criança na véspera de Natal!',\n      en: 'Ready! I’m more excited than a kid on Christmas Eve!',\n    },\n    {\n      pt: `Pronto! Hora de mostrar quem manda! Boa sorte, ${name}!`,\n      en: `Ready! Time to show who’s boss! Good luck, ${name}!`,\n    },\n    {\n      pt: 'Pronto! Prepare-se para a aventura mais épica da sua vida!',\n      en: 'Ready! Get ready for the most epic adventure of your life!',\n    },\n  ];\n\n  return getRandomItem(options);\n}\n\nexport function getRandomNeutralReadyMessage(name: string): DualLanguageValue {\n  const options = [\n    {\n      pt: `Agora só resta rezar, ${name}, porque o jogo vai começar mesmo assim!`,\n      en: `Now all you have left is to pray ${name} because the game is starting anyway!`,\n    },\n    {\n      pt: 'Tudo bem. Não se preocupe em vencer, já que as chances são bem baixas.',\n      en: \"It’s alright. Don't worry too much about winning, there’s very little chance anyway.\",\n    },\n    {\n      pt: 'Ok, ok, ok. Respire fundo, e vamos lá!',\n      en: 'Okay, okay okay. Take deep breaths and let’s go!',\n    },\n    {\n      pt: `Relaxa, ${name}! O importante é se divertir... e perder!`,\n      en: `Relax, ${name}! The important thing is to have fun... and lose!`,\n    },\n    {\n      pt: 'Não se preocupe, a confusão faz parte do jogo!',\n      en: 'Don’t worry, confusion is part of the game!',\n    },\n    {\n      pt: 'Ok, sem regras, só instinto! Vamos ver no que dá!',\n      en: 'Okay, no rules, just instincts! Let’s see how this goes!',\n    },\n    {\n      pt: 'Quem precisa de regras? O jogo vai ficar mais interessante assim!',\n      en: 'Who needs rules? The game will be way more interesting this way!',\n    },\n    {\n      pt: 'Não tenha medo! O pior que pode acontecer é... bem, vamos descobrir!',\n      en: 'Don’t be scared! The worst that can happen is... well, let’s find out!',\n    },\n    {\n      pt: 'Vai ser divertido! E se não for, pelo menos temos histórias!',\n      en: 'It’ll be fun! And if not, at least we’ll have stories to tell!',\n    },\n    {\n      pt: `A única regra é... não há regras! Vamos nessa, ${name}!`,\n      en: `The only rule is... there are no rules! Let’s do this, ${name}!`,\n    },\n  ];\n\n  return getRandomItem(options);\n}\n\nexport function getRandomNegativeReadyMessage(name: string): DualLanguageValue {\n  const options = [\n    {\n      pt: `Vixi ${name}, se fudeu então, porque o jogo vai começar mesmo assim!`,\n      en: `Oh ${name}, you are screwed because the game is starting anyway!`,\n    },\n    {\n      pt: 'Que carai, eim. As regras foram explicadas super bem. Agora vai assim mesmo!',\n      en: 'W.T.F, the rules were so clear! Well, the game is starting anyway',\n    },\n    {\n      pt: 'Segura o tchan, amarra o tchan, segura o tchan-tchan-tchan-tchan-tchan. Estou cantando pra esquecer que você vai me decepcionar',\n      en: 'Oh my... let’s hope for the best!',\n    },\n    {\n      pt: `Olha só, ${name}. Se não entendeu as regras, é melhor segurar o choro!`,\n      en: `Look, ${name}. If you didn't get the rules, you better hold back those tears!`,\n    },\n    {\n      pt: `Uau, ${name}, você é um verdadeiro prodígio da confusão! Vamos lá!`,\n      en: `Wow, ${name}, you’re a true prodigy of confusion! Let’s do this!`,\n    },\n    {\n      pt: `Ah, não se preocupe, ${name}. A derrota vai ser tão engraçada quanto a sua falta de atenção!`,\n      en: `Oh, don’t worry, ${name}. Your loss is going to be as funny as your lack of focus!`,\n    },\n    {\n      pt: `Vish, ${name}, quem precisa de regras quando se tem uma boa dose de caos?`,\n      en: `Yikes, ${name}, who needs rules when you can have a good dose of chaos?`,\n    },\n    {\n      pt: 'Se você não entendeu nada, é melhor pedir ajuda a alguém... ou não!',\n      en: 'If you didn’t get anything, you might want to ask for help... or not!',\n    },\n    {\n      pt: 'Espero que você seja bom em improvisar, porque as regras não ajudaram!',\n      en: 'I hope you’re good at improvising because the rules didn’t help!',\n    },\n    {\n      pt: `Que lindo, ${name}. Você entrou na aventura sem saber o que está fazendo!`,\n      en: `How lovely, ${name}. You jumped into the adventure without knowing what you’re doing!`,\n    },\n  ];\n\n  return getRandomItem(options);\n}\n"],"names":["DebugOnly","children","div","dev","devOnly","useDevFeatures","isDebugEnabled","isDevEnv","DevButton","ghost","type","rest","icon","BugFilled","AutoNextPhase","players","isEverybodyReady","round","current","total","forceLastRound","autoTriggerTime","pt","en","HostButton","className","RocketOutlined","clsx","HostTimedButton","duration","onExpire","hideTimer","timeLeft","useCountdown","autoStart","disabled","HostOnlyContainer","label","useHost","ButtonLabel","HostNextPhaseButton","withWaitingTimeBar","isHost","translate","useLanguage","isLoading","isKeyLoading","useLoading","onGoToNextPhase","useHostActionRequest","actionName","successMessage","errorMessage","handleClick","action","HOST_API_ACTIONS","GO_TO_NEXT_PHASE","hasTimer","Boolean","isRunning","pause","resume","useEffect","getAnimationClass","title","PauseOutlined","PlayCircleOutlined","onClick","speed","infinite","HostOnlyButton","buttonProps","MetricHighlight","iconSize","iconPlacement","size","PhaseContainer","phase","allowedPhase","fullScreen","appearance","useGameAppearance","screenRef","useRef","description","baseClass","backgroundColorOverlay","backgroundColor","id","ref","style","PhaseAnnouncement","buttonText","currentRound","onClose","withoutTimer","unskippable","animationType","useTemporarilyHidePlayersBar","durationPerRound","useState","isActive","setActive","isRemoved","setRemoved","onContinue","start","useKeyPressEvent","colorScheme","autoFocus","custom","SingleCloud","backgroundImage","PUBLIC_URL","CLOUDS","backgroundPositionX","cloudData","MultiCloud","index","SCREEN_HEIGHT","window","innerHeight","SCREEN_WIDTH","innerWidth","X_POSITIONS","Y_POSITIONS","SCALES","DELAYS","DURATIONS","CloudBackground","gameAppearance","cloudType","clouds","cloudAnimationType","cloudsAnimationType","CloudTypeComponent","split","getCloudComponent","config","useMemo","xs","sampleSize","ys","scales","delays","durations","map","getAnimationProps","randomScale","randomDuration","randomDelay","randomX","randomY","orbitOriginX","orbitOriginY","initial","x","y","scale","animate","transition","ease","delay","repeat","Number","POSITIVE_INFINITY","repeatType","rotate","Title","motion","Typography","StepJoin","setStep","isAuthenticated","useCurrentUserContext","useMutation","mutationKey","mutationFn","signInAsGuest","onSuccess","isPending","mutate","isError","error","level","layoutId","opacity","exit","S","block","A","message","JSON","stringify","showIcon","loading","DEV_NAMES","cacheNames","getRandomUniqueItemFromList","source","used","cache","randomItem","tries","includes","getRandomItem","mockPlayerName","AvatarSelection","setSelectedAvatar","selectedAvatar","userId","useToggle","open","setOpen","arrow","placement","content","AvatarOptions","trigger","onOpenChange","svg","viewBox","href","avatars","AVATARS","usedAvatars","Object","values","reduce","acc","name","avatarId","AVAILABLE_AVATAR_IDS","avatar","isUsed","Settings","hasImages","useGlobalLocalStorage","blurEnabled","setBlurEnabled","volume","setVolume","shape","InfoCircleOutlined","checkedChildren","unCheckedChildren","checked","value","UsualAvatarsSelection","avatarsIds","randomName","undefined","StepInfo","currentUser","isGuest","info","useGameInfoContext","names","at","setName","useLocalStorage","lsAvatarId","lsUsername","useGameMeta","gameId","gameName","useGlobalState","setUserId","setUsername","setUserAvatarId","language","notification","App","useApp","query","GAME_API","run","GAME_API_COMMON_ACTIONS","JOIN_GAME","playerName","playerAvatarId","response","data","localStorage","setItem","getKey","speak","getRandomWelcomeMessage","onError","e","console","useAddPlayer","hasPlayedBefore","games","nameOptions","length","options","onChange","trim","onSelect","placeholder","maxLength","tags","Paragraph","StepWaiting","setLoader","gameMeta","username","userAvatarId","HOST_API","LOCK_GAME","isLocked","success","onSettled","isLocking","numPlayers","keys","SpaceContainer","vertical","direction","Text","min","JoinedPlayers","orientation","orderedPlayers","orderBy","player","filter","sample","LobbyRules","width","marginTop","GameTags","wrap","display","gameCode","PreviewGroup","fallback","RULES","preview","countRender","rules","rule","li","getAnimation","src","marginBottom","PhaseLobby","meta","useStep","step","localUsername","localAvatarId","resetGlobalState","PHASES","DEFAULT","LOBBY","AnimatePresence","layout","summary","state","PhasePlaceholder","PhaseRules","user","useUser","setIsAdminEnabled","useEffectOnce","useGameId","queryClient","useQueryClient","invalidateQueries","queryKey","onBeReady","useGameActionRequest","getRandomPositiveReadyMessage","onBeReadyIDK","getRandomNeutralReadyMessage","onBeReadyQue","getRandomNegativeReadyMessage","useMock","MAKE_ME_READY","Content","StepTitle","ruleClassName","actionsClassName","isReady","CheckCircleFilled","SmileFilled","MehFilled","danger","RobotFilled","PhaseSetup","SETUP","AnimatedGearIcon","PhaseTimerReset","goToNextStep","next","Promise","res","setTimeout","ReadyPlayersBar","readyText","readyTextPlural","hideNames","ready","readyPlayers","push","notReadyPlayers","LikeFilled","join","TurnOrder","order","activePlayerId","reorderByUser","additionalInfoParser","orderList","reorder","playerId","Fragment","getAvatarColorById","ForwardFilled","WaitingRoom","instruction","WaitingRoomIcon","startWith","starterIndex","indexOf","slice","useGameState","docPath","subscribe","docRef","doc","firestore","useQuery","queryFn","getDoc","snapshot","unsubscribe","onSnapshot","refetch","useFirestoreDocument","isRefetching","count","print","PlayersStatusBar","sortPlayers","dot","color","alt","SectionMeta","groupScore","SectionRankedPlayers","rankedPlayers","score","BlurOptions","blurCard","useBlurCards","baseUrl","useTDBaseUrl","fetch","json","aliens","cockroaches","scorpions","snakes","spiders","selected","setSelected","onUpdateSelected","key","prevState","target","selectedGroups","forEach","flat","SectionSettings","isAdmin","isAdminEnabled","toggleDevFeatures","s","GameInfoDrawer","isDrawerOpen","toggleDrawer","isSettingsOpen","toggleSettingsDrawer","navigate","useNavigate","SettingOutlined","GameBanner","closable","gameInfo","FireOutlined","RedirectSession","setLoading","redirect","currentMilliseconds","Date","now","redirectAt","GAME_LIST","onCancel","onOk","okButtonProps","okText","cancelText","BANNERS","Session","gameCollection","getActiveComponent","setLanguage","isIdle","useIdle","warning","useIdleRedirect","SessionConfigWrapper","ActiveComponent","PageLayout","customTokens","primaryColor","colorPrimary","colorLink","surfaceColor","colorBgContainer","useGetCustomTokens","theme","token","Step","forwardRef","announcement","fullWidth","fullHeight","getWaitingRoomInstruction","kind","StepSwitcher","conditions","waitingRoom","Array","isArray","TimerClock","minutes","seconds","AnimatedClockIcon","TimerBar","steps","strokeLinecap","props","status","percentage","percent","showInfo","TimedTimerBar","TimedTimerClock","timerProps","WaitingTime","privateTimeLeft","blurredCards","setBlurredCards","shouldBeBlurred","cardId","isBlurEnabled","setIsDebugEnabled","onBeforeCall","onAfterCall","payload","onMutate","func","timer","timeout","args","clearTimeout","apply","debounce","createdBy","whatToDo","requirements","runOnce","setRunOnce","USE_MOCKS","VIEWER_ID","every","startingStep","goToPreviousStep","library","process","Error","ignore","setShowPlayersBar","setUser","setIsReady","PLACEHOLDER_PLAYER","updatedAt","online","GAME_OVER","WAIT","ADEDANHX","ANSWERING","EVALUATION","RESULTS","ARTE_RUIM","DRAW","GALLERY","BOMBA_RELOGIO","ROLE_ASSIGNMENT","DECLARATION","EXAMINATION","RESULT","CINEGRAFISTAS_AMADORES","UNKNOWN","COMUNICACAO_ALIENIGENA","ALIEN_SELECTION","ALIEN_SEEDING","HUMAN_ASK","ALIEN_ANSWER","ALIEN_REQUEST","OFFERINGS","REVEAL","COMUNICACAO_DUO","ASKING_FOR_SOMETHING","DELIVER_SOMETHING","VERIFICATION","CONTADORES_HISTORIAS","STORY","CARD_PLAY","VOTING","RESOLUTION","CONTROLE_DE_ESTOQUE","GOOD_PLACEMENT","PLACEMENT_CONFIRMATION","FULFILLMENT","CRUZA_PALAVRAS","WORDS_SELECTION","CLUE_WRITING","GUESSING","DETETIVES_IMAGINATIVOS","SECRET_CLUE","DEFENSE","DUETOS","PAIRING","ESPIAO_ENTRE_NOS","ASSIGNMENT","INVESTIGATION","ASSESSMENT","FINAL_ASSESSMENT","ESQUIADORES","BETS","STARTING_RESULTS","BOOSTS","PRELIMINARY_RESULTS","LAST_CHANGE","FINAL_RESULTS","FILEIRA_DE_FATOS","ORDERING","GALERIA_DE_SONHOS","WORD_SELECTION","DREAMS_SELECTION","CRIMES_HEDIONDOS","CRIME_SELECTION","SCENE_MARKING","INSTRUMENTOS_CODIFICADOS","LABIRINTO_SECRETO","MAP_BUILDING","PATH_FOLLOWING","LINHAS_CRUZADAS","PROMPT_SELECTION","DRAWING","NAMING","PRESENTATION","MEGAMIX","SEEDING","TRACK","MENTE_COLETIVA","QUESTION_SELECTION","EVERYBODY_WRITES","COMPARE","MESMICE","OBJECT_FEATURE_ELIMINATION","NA_RUA_DO_MEDO","TRICK_OR_TREAT","STREET_END","NAO_SOU_ROBO","CARD_SELECTION","ARE_YOU_A_ROBOT","NAUFRAGOS","ONDA_TELEPATICA","DIAL_CLUE","GUESS","PALHETA_DE_CORES","PLANEJAMENTO_URBANO","PLANNING","PLACING","POLEMICA_DA_VEZ","TOPIC_SELECTION","REACT","PORTA_DOS_DESESPERADOS","BOOK_POSSESSION","DOOR_CHOICE","QUEM_NAO_MATA","TARGETING","STANDOFF","DUEL","QUEM_SOU_EU","CHARACTER_FILTERING","CHARACTER_DESCRIPTION","RETRATO_FALADO","COMPOSITE_SKETCH","SINAIS_DE_ALERTA","SONHOS_PESADELOS","DREAM_TELLING","MATCHING","SUPER_CAMPEONATO","CHALLENGE_SELECTION","CONTENDER_SELECTION","BATTLE","TA_NA_CARA","PROMPT","TEORIA_DE_CONJUNTOS","JUDGE_SELECTION","ITEM_PLACEMENT","TESTEMUNHA_OCULAR","WITNESS_SELECTION","QUESTIONING","TRIAL","TESTE_DE_ELENCO","MOVIE_GENRE_SELECTION","ACTOR_SELECTION","TREVO_DA_SORTE","CLOVER_WRITING","CLOVER_GUESSING","UE_SO_ISSO","SUGGEST","VERIFY_GUESS","VAMOS_AO_CINEMA","MOVIE_SELECTION","MOVIE_ELIMINATION","VENDAVAL_DE_PALPITE","BOSS_SELECTION","SECRET_WORD_SELECTION","PLAYERS_CLUES","CLUE_EVALUATIONS","VINGATIVOS","TEMPLATE","text","onEnd","utterance","SpeechSynthesisUtterance","lang","addEventListener","speechSynthesis","stringRemoveAccents","toLowerCase","startsWith"],"sourceRoot":""}