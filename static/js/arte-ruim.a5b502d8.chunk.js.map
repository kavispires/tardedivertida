{"version":3,"file":"static/js/arte-ruim.a5b502d8.chunk.js","mappings":"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","sources":["components/canvas/CanvasResizer.tsx","components/canvas/CanvasSVG.tsx","components/canvas/DrawingCanvas.tsx","components/general/Achievements.tsx","components/icons/MedalPersonIcon.tsx","components/icons/PanicIcon.tsx","components/text/MetricHighlight.tsx","../node_modules/react-use/esm/misc/parseTimeRanges.js","../node_modules/react-use/esm/useAudio.js","../node_modules/react-use/esm/factory/createHTMLMediaHook.js","games/arte-ruim/StepDraw.tsx","games/arte-ruim/PhaseDraw.tsx","games/arte-ruim/utils/api-requests.ts","../node_modules/@ant-design/icons-svg/es/asn/ThunderboltOutlined.js","../node_modules/@ant-design/icons/es/icons/ThunderboltOutlined.js","games/arte-ruim/utils/helpers.ts","games/arte-ruim/components/EvaluationAllDrawings.tsx","games/arte-ruim/components/Card.tsx","games/arte-ruim/components/EvaluationAllCards.tsx","games/arte-ruim/components/Highlights.tsx","games/arte-ruim/components/TextBlobs.tsx","games/arte-ruim/StepEvaluation.tsx","games/arte-ruim/components/EvaluatedDrawings.tsx","games/arte-ruim/PhaseEvaluation.tsx","games/arte-ruim/components/GalleryWindowCredits.tsx","../node_modules/@ant-design/icons-svg/es/asn/MessageFilled.js","../node_modules/@ant-design/icons/es/icons/MessageFilled.js","games/arte-ruim/components/GalleryWindowGuesses.tsx","games/arte-ruim/components/GalleryWindowResult.tsx","games/arte-ruim/StepGallery.tsx","games/arte-ruim/utils/constants.ts","games/arte-ruim/StepRanking.tsx","games/arte-ruim/PhaseGallery.tsx","games/arte-ruim/utils/achievements.ts","games/arte-ruim/components/DrawingGrade.tsx","games/arte-ruim/components/FinalGallery.tsx","games/arte-ruim/PhaseGameOver.tsx","games/arte-ruim/SessionArteRuim.tsx","../node_modules/@ant-design/icons-svg/es/asn/CloudUploadOutlined.js","../node_modules/@ant-design/icons/es/icons/CloudUploadOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/WarningOutlined.js","../node_modules/@ant-design/icons/es/icons/WarningOutlined.js"],"sourcesContent":["// Ant Design Resources\nimport { Slider } from 'antd';\nimport { DragOutlined } from '@ant-design/icons';\n// State & Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\n// Components\nimport { FixedMenuButton } from 'components/buttons';\nimport { Translate } from 'components/language';\n\n/**\n * Fixed Menu Button for resizing canvas\n */\nexport const CanvasResizer = () => {\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n\n  return (\n    <FixedMenuButton\n      type=\"popover\"\n      position={1}\n      icon={<DragOutlined />}\n      label={labelText}\n      content={\n        <div className=\"canvas-resizer\">\n          <div className=\"canvas-resizer__label\">{labelText}</div>\n          <Slider\n            className=\"canvas-resizer__slider\"\n            value={canvasSize ?? 100}\n            min={150}\n            max={500}\n            step={50}\n            onChange={setCanvasSize}\n          />\n        </div>\n      }\n    />\n  );\n};\n\nconst labelText = <Translate pt=\"Tamanho das Artes\" en=\"Art Size\" />;\n","/**\n * Builds paths from canvas lines\n * @param lines\n * @returns\n */\nconst getPathFromKonvaLines = (lines: CanvasLine[]) => {\n  const result = lines.map((lineArr) => {\n    let path = '';\n    for (let x = 0, y = 1; y < lineArr.length; x += 2, y += 2) {\n      if (lineArr[x + 2] && lineArr[y + 2]) {\n        path += `M${lineArr[x]},${lineArr[y]} L${lineArr[x + 2]},${lineArr[y + 2]}`;\n      }\n    }\n\n    return path;\n  });\n\n  return result;\n};\n\ntype CanvasSVGProps = {\n  drawing: string;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  size?: number;\n};\n\nexport const CanvasSVG = ({ drawing = '', className = '', size = 250 }: CanvasSVGProps) => {\n  const konvaLines = JSON.parse(drawing);\n  const paths = getPathFromKonvaLines(konvaLines);\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 500 500\"\n      overflow=\"hidden\"\n      className={className}\n      style={{ width: `${size}px` }}\n    >\n      <defs />\n      {paths.map((path, index) => (\n        <path\n          key={`${drawing}-${index}`}\n          d={path}\n          fill=\"none\"\n          stroke=\"#000\"\n          strokeWidth=\"4\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit=\"10\"\n        />\n      ))}\n    </svg>\n  );\n};\n","import { useRef, useState } from 'react';\nimport { Stage, Layer, Line } from 'react-konva';\nimport clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\nimport { DeleteOutlined, UndoOutlined } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\n\ntype DrawingCanvasProps = {\n  /**\n   * Lines drawn in the canvas\n   */\n  lines: CanvasLine[];\n  /**\n   * Function where any new version of the drawing is sent to\n   */\n  setLines: CanvasSetLine;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Show controls to undo, redo, or erase drawing. Default: false\n   */\n  showControls?: boolean;\n  /**\n   * Size of the stroke. Default: medium\n   */\n  strokeWidth?: 'small' | 'medium' | 'large';\n};\n\n/**\n * Canvas drawing board using react-konva\n * It requires an array of lines and an setState function to save the lines\n */\nexport const DrawingCanvas = ({\n  lines,\n  setLines,\n  className = '',\n  showControls = false,\n  strokeWidth = 'medium',\n}: DrawingCanvasProps) => {\n  const [drawingHistory, setDrawingHistory] = useState<CanvasLine[]>([]);\n  const isDrawing = useRef(false);\n\n  /**\n   * Toggles off the isDrawing flag\n   */\n  const startDrawing = () => {\n    isDrawing.current = true;\n  };\n\n  /**\n   * Toggles off the isDrawing flag and resets history\n   */\n  const stopDrawing = () => {\n    isDrawing.current = false;\n    setDrawingHistory([]);\n  };\n\n  const startLine = (e: any) => {\n    startDrawing();\n    const pos = e.target.getStage().getPointerPosition();\n    setLines([...lines, [Math.round(pos.x), Math.round(pos.y)]]);\n  };\n\n  const finishLine = (e: any) => {\n    // Add point if it was a point\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    const x = Math.round(point.x);\n    const y = Math.round(point.y);\n\n    let lastLineEntry = lines[lines.length - 1];\n    lastLineEntry = lastLineEntry.concat([x + 0.1, y + 0.1]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLineEntry);\n    setLines(lines.concat());\n  };\n\n  /**\n   * Start recording drawing\n   * @param e - konva mouse event\n   */\n  const handleMouseDown = (e: any) => {\n    startLine(e);\n  };\n\n  /**\n   * Tracks mouse moving during the drawing\n   * @param e - konva mouse event\n   */\n  const handleMouseMove = (e: any) => {\n    // no drawing - skipping\n    if (!isDrawing.current) {\n      return;\n    }\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    let lastLine = lines[lines.length - 1];\n    // add end point\n    lastLine = lastLine.concat([Math.round(point.x), Math.round(point.y)]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLine);\n    setLines(lines.concat());\n  };\n\n  const handleMouseUp = (e: any) => {\n    if (isDrawing.current) {\n      stopDrawing();\n\n      finishLine(e);\n    }\n  };\n\n  /**\n   * Handles case when a current drawing is stopped off stage\n   * @param e - mouse event\n   */\n  const handleOffsetMouseUp = () => {\n    stopDrawing();\n  };\n\n  /**\n   * Handles case when a current drawing is started off stage\n   * @param e - mouse event\n   */\n  const handleOffsetMouseDown = () => {\n    startDrawing();\n  };\n\n  /**\n   * Handles when mouse leaves the stage\n   * @param e - konva mouse event\n   */\n  const handleMouseLeave = (e: any) => {\n    if (isDrawing.current) {\n      finishLine(e);\n\n      window.document.addEventListener('mouseup', handleOffsetMouseUp);\n      window.document.addEventListener('touchEnd', handleOffsetMouseUp);\n      window.document.addEventListener('mousedown', handleOffsetMouseDown);\n      window.document.addEventListener('touchStart', handleOffsetMouseDown);\n    }\n  };\n\n  /**\n   * Handles when mouse reenters the state\n   * @param e\n   */\n  const handleMouseEnter = (e: any) => {\n    if (isDrawing.current) {\n      startLine(e);\n    }\n    window.document.removeEventListener('mouseup', handleOffsetMouseUp);\n    window.document.removeEventListener('touchEnd', handleOffsetMouseUp);\n    window.document.removeEventListener('mousedown', handleOffsetMouseDown);\n    window.document.removeEventListener('touchStart', handleOffsetMouseDown);\n  };\n\n  const onClear = () => setLines([]);\n\n  const onUndo = () => {\n    const linesCopy = [...lines];\n    const drawingHistoryCopy = [...drawingHistory];\n    const lastLine: CanvasLine | undefined = linesCopy.pop();\n    if (lastLine) {\n      drawingHistoryCopy.push(lastLine);\n      setLines(linesCopy);\n      setDrawingHistory(drawingHistoryCopy);\n    }\n  };\n\n  const onRedo = () => {\n    const linesCopy = [...lines];\n    const drawingHistoryCopy = [...drawingHistory];\n    const lastUndoLine = drawingHistoryCopy.pop();\n    if (lastUndoLine) {\n      linesCopy.push(lastUndoLine);\n      setLines(linesCopy);\n      setDrawingHistory(drawingHistoryCopy);\n    }\n  };\n\n  const strokeWidthBySize =\n    {\n      small: 3,\n      medium: 5,\n      large: 7,\n    }?.[strokeWidth] ?? 5;\n\n  return (\n    <Space direction=\"vertical\" align=\"center\">\n      <Stage\n        width={500}\n        height={500}\n        onMouseDown={handleMouseDown}\n        onMousemove={handleMouseMove}\n        onMouseup={handleMouseUp}\n        onTouchStart={handleMouseDown}\n        onTouchMove={handleMouseMove}\n        onTouchEnd={handleMouseUp}\n        onMouseLeave={handleMouseLeave}\n        onMouseEnter={handleMouseEnter}\n        className={clsx('drawing-canvas', className)}\n        id=\"drawing-canvas\"\n      >\n        <Layer>\n          {lines.map((line, i) => (\n            <Line\n              key={i}\n              points={line}\n              stroke=\"#222222\"\n              strokeWidth={strokeWidthBySize}\n              tension={0.5}\n              lineCap=\"round\"\n              globalCompositeOperation=\"source-over\"\n            />\n          ))}\n        </Layer>\n      </Stage>\n      {showControls && (\n        <Space>\n          <Button onClick={onUndo} disabled={lines.length === 0}>\n            <UndoOutlined />\n            <Translate pt=\"Desfazer\" en=\"Undo\" />\n          </Button>\n          <Button onClick={onRedo} disabled={drawingHistory.length === 0}>\n            <UndoOutlined />\n            <Translate pt=\"Refazer\" en=\"Redo\" />\n          </Button>\n          <Button onClick={onClear} disabled={lines.length === 0}>\n            <DeleteOutlined />\n            <Translate pt=\"Apagar\" en=\"Clear\" />\n          </Button>\n        </Space>\n      )}\n    </Space>\n  );\n};\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Popover } from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { IconAvatar } from 'components/icons/IconAvatar';\nimport { DualTranslate, Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { MedalStarIcon } from 'components/icons/MedalStarIcon';\n\ntype AchievementsProps = {\n  players: GamePlayers;\n  achievements: Achievement[];\n  reference: AchievementReference;\n};\n\nexport function Achievements({ players, achievements, reference }: AchievementsProps) {\n  const unknownText = { pt: 'Desconhecido', en: 'Unknown' };\n\n  return (\n    <div className={clsx('achievements', getAnimationClass('fadeIn'))}>\n      <Title size=\"small\" level={3}>\n        <Translate pt=\"Medalhas\" en=\"Achievements\" />\n      </Title>\n      <ul className=\"achievements-list\">\n        {achievements.map((achievement, index) => {\n          const { Icon = MedalStarIcon, ...achievementObj } = reference[achievement.type] ?? {};\n          const player = players[achievement.playerId];\n          return (\n            <li\n              key={`achievement-${achievement.type}`}\n              className={clsx(\n                'achievements-entry',\n                getAnimationClass(\n                  'flipInY',\n                  index < achievements.length / 2 ? index : achievements.length - 1 - index\n                )\n              )}\n            >\n              <div className=\"achievement__medal\">\n                <IconAvatar icon={<Icon />} size=\"large\" />\n              </div>\n              <h4 className=\"achievement__title\">\n                <DualTranslate>{achievementObj.title ?? unknownText}</DualTranslate>\n              </h4>\n              <div className=\"achievement__avatar\">\n                <Avatar id={player.avatarId} />\n              </div>\n              <div className=\"achievement__name\">{player.name}</div>\n              {Boolean(achievementObj.description) && (\n                <div className=\"achievement__description\">\n                  <Popover\n                    content={\n                      <>\n                        <DualTranslate>{achievementObj.description ?? unknownText}</DualTranslate> (\n                        {achievement.value})\n                      </>\n                    }\n                  >\n                    <Button icon={<QuestionCircleOutlined />} shape=\"circle\" type=\"text\" size=\"small\" />\n                  </Popover>\n                </div>\n              )}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","export function MedalPersonIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffe07d\"\n        d=\"M186.32 499l-22.17-41.81a10.4 10.4 0 00-12.22-5.08L106.68 466a10.38 10.38 0 01-12.64-13.9l79.78-192.62 111.05 46-79.79 192.61a10.39 10.39 0 01-18.77.89z\"\n      ></path>\n      <path\n        fill=\"#ffd064\"\n        d=\"M226.47 281.29L155.93 451.7a10.39 10.39 0 018.26 5.47L186.32 499a10.39 10.39 0 0018.77-.89l79.78-192.62z\"\n      ></path>\n      <path\n        fill=\"#ffe07d\"\n        d=\"M325.55 499l22.18-41.81a10.37 10.37 0 0112.2-5.08L405.18 466a10.39 10.39 0 0012.65-13.9l-79.79-192.63-111 46 79.79 192.62a10.39 10.39 0 0018.77.89z\"\n      ></path>\n      <path\n        fill=\"#ffd064\"\n        d=\"M417.83 452.09l-79.79-192.61-58.19 24.1 70.56 170.35a10.42 10.42 0 019.53-1.82L405.18 466a10.39 10.39 0 0012.65-13.9z\"\n      ></path>\n      <path\n        fill=\"#e8ae4d\"\n        d=\"M275.93 14.53a32.23 32.23 0 0029.59 5.53 32.23 32.23 0 0137.41 14.47 32.25 32.25 0 0025.61 15.85 32.24 32.24 0 0129.61 27 32.24 32.24 0 0018.14 24 32.24 32.24 0 0117.86 35.87 32.23 32.23 0 008.24 29 32.24 32.24 0 013.7 39.9 32.21 32.21 0 00-2.78 30 32.25 32.25 0 01-11 38.54 32.21 32.21 0 00-13.38 26.9 32.24 32.24 0 01-24.14 32 32.22 32.22 0 00-22.25 20.28A32.27 32.27 0 01338.45 375a32.24 32.24 0 00-28.08 10.87 32.24 32.24 0 01-39.39 7.37 32.19 32.19 0 00-30.1 0 32.25 32.25 0 01-39.39-7.37A32.22 32.22 0 00173.41 375a32.24 32.24 0 01-34.06-21.1 32.22 32.22 0 00-22.25-20.28 32.23 32.23 0 01-24.15-32 32.19 32.19 0 00-13.42-27 32.25 32.25 0 01-11-38.54 32.21 32.21 0 00-2.78-30 32.24 32.24 0 013.7-39.9 32.2 32.2 0 008.23-29 32.27 32.27 0 0117.9-35.8 32.23 32.23 0 0018.16-24 32.22 32.22 0 0129.61-27 32.24 32.24 0 0025.58-15.85 32.22 32.22 0 0137.36-14.47 32.2 32.2 0 0029.64-5.53 32.26 32.26 0 0140.09 0z\"\n      ></path>\n      <circle cx=\"255.93\" cy=\"202.23\" r=\"142.21\" fill=\"#ffe07d\"></circle>\n      <path\n        fill=\"#ffd064\"\n        d=\"M255.93 60a142.49 142.49 0 00-31.67 3.54 142.24 142.24 0 010 277.32A142.21 142.21 0 10255.93 60z\"\n      ></path>\n      <path d=\"M452.36 210.23a39.57 39.57 0 00-4.56-49.18 24.71 24.71 0 01-6.32-22.22 39.59 39.59 0 00-22-44.22 24.71 24.71 0 01-13.94-18.43 39.57 39.57 0 00-36.5-33.28 24.71 24.71 0 01-19.64-12.16 39.57 39.57 0 00-46.07-17.84 24.73 24.73 0 01-22.71-4.25 39.57 39.57 0 00-49.38 0 24.7 24.7 0 01-22.7 4.25 39.55 39.55 0 00-46.06 17.84 24.75 24.75 0 01-19.65 12.16 39.58 39.58 0 00-36.5 33.28A24.7 24.7 0 0192.4 94.61a39.59 39.59 0 00-22 44.22 24.71 24.71 0 01-6.32 22.22 39.57 39.57 0 00-4.56 49.18 24.67 24.67 0 012.13 23 39.57 39.57 0 0013.53 47.51 24.72 24.72 0 0110.29 20.68 39.56 39.56 0 0029.77 39.41 24.81 24.81 0 0113.21 8.63l-41.34 99.76a17.89 17.89 0 0021.82 23.95l45.25-13.89a2.89 2.89 0 013.39 1.41l22.17 41.81a17.88 17.88 0 0032.27-1.5l43.07-104h1.71l43.07 104a17.88 17.88 0 0032.32 1.54l22.17-41.81a2.9 2.9 0 013.4-1.41l45.24 13.89a17.88 17.88 0 0021.77-23.94l-41.34-99.77a24.84 24.84 0 0113.22-8.63 39.56 39.56 0 0029.76-39.41 24.78 24.78 0 0110.3-20.68 39.57 39.57 0 0013.52-47.51 24.73 24.73 0 012.13-23zm-254.2 285a2.89 2.89 0 01-3.76 1.57 2.83 2.83 0 01-1.45-1.32l-22.17-41.81a17.93 17.93 0 00-21-8.72l-45.24 13.89a2.89 2.89 0 01-3.61-3.84l36.67-88.51a39.57 39.57 0 0036.66 15.95 24.74 24.74 0 0121.54 8.34A39.37 39.37 0 00236.36 403zm209.23-36.4L362.15 445a17.91 17.91 0 00-21 8.72l-22.22 41.75a2.87 2.87 0 01-5.2-.25L275.51 403a39.53 39.53 0 0040.52-12.27 24.74 24.74 0 0121.54-8.35 39.49 39.49 0 0036.66-15.94l36.7 88.56a2.88 2.88 0 01-1.56 3.78 2.85 2.85 0 01-1.95.09zM439.79 202a39.75 39.75 0 00-3.42 37 24.6 24.6 0 01-8.44 29.55 39.75 39.75 0 00-16.54 33.22 24.61 24.61 0 01-18.46 24.54A39.73 39.73 0 00368.36 345v.08a40.3 40.3 0 00-2.85 6.19 24.65 24.65 0 01-26.15 16.19 39.71 39.71 0 00-34.6 13.4 24.63 24.63 0 01-30.22 5.65 40.06 40.06 0 00-10.93-3.84h-.09a39.59 39.59 0 00-15.11 0h-.06a40.08 40.08 0 00-10.93 3.85 24.63 24.63 0 01-30.23-5.65 39.69 39.69 0 00-34.59-13.4 24.63 24.63 0 01-26.14-16.19 40.4 40.4 0 00-2.87-6.19V345a39.73 39.73 0 00-24.51-18.72 24.62 24.62 0 01-18.53-24.54 39.72 39.72 0 00-16.62-33.19A24.64 24.64 0 0175.5 239a39.69 39.69 0 00-3.43-37 24.65 24.65 0 012.86-30.59 39.73 39.73 0 0010.17-35.69 24.63 24.63 0 0113.69-27.53 39.72 39.72 0 0022.38-29.61 24.62 24.62 0 0122.76-20.72 39.65 39.65 0 0031.5-19.53 24.65 24.65 0 0128.67-11.11 39.69 39.69 0 0036.48-6.82 24.64 24.64 0 0130.75 0 39.71 39.71 0 0036.49 6.82 24.63 24.63 0 0128.67 11.11 39.67 39.67 0 0031.55 19.53 24.62 24.62 0 0122.69 20.72 39.73 39.73 0 0022.37 29.61 24.62 24.62 0 0113.7 27.53 39.76 39.76 0 0010.13 35.69 24.63 24.63 0 012.86 30.59z\"></path>\n      <path d=\"M113.93 192.13a7.5 7.5 0 008.36-6.53c8.23-67.31 65.72-118.07 133.64-118.07a134.77 134.77 0 01133.71 118.14 7.48 7.48 0 007.43 6.58 5.8 5.8 0 00.92-.05 7.52 7.52 0 006.54-8.36C395.35 109 331.46 52.53 255.93 52.53S116.56 109 107.35 183.77a7.52 7.52 0 006.53 8.36zm284.05 20.13a7.53 7.53 0 00-8.35 6.53 134.72 134.72 0 01-267.39.06 7.5 7.5 0 10-14.89 1.83c9.2 74.83 73.08 131.25 148.58 131.25s139.41-56.45 148.58-131.32a7.48 7.48 0 00-6.49-8.35z\"></path>\n      <path\n        fill=\"#e8ae4d\"\n        d=\"M316.12 272.42c12.18 7.07 26.14 15.17 36.14 26.35a143.32 143.32 0 01-192.64 0c10-11.18 24-19.28 36.14-26.35 14.95-8.69 27.89-16.2 27.89-25.61a32.89 32.89 0 00-12.15-26.26c-7.14-1.18-10.87-14.58-10.87-21.93a10.22 10.22 0 013.05-8.63c-5.17-16.78-5.08-40.08 6.67-56.56 9.18-12.9 24.32-19.75 43.79-19.81a41.59 41.59 0 0140.09 8.44c8.75 7.88 22 27.1 13.92 67.75 1.69 1.18 3.31 3.64 3.31 8.81 0 7.35-3.74 20.78-10.91 21.93a32.62 32.62 0 00-12.3 26.26c-.01 9.41 12.92 16.92 27.87 25.61z\"\n      ></path>\n      <path d=\"M352.26 305a6.2 6.2 0 01-4.65-2.08c-9.34-10.44-22.76-18.23-34.6-25.11-16.65-9.67-31-18-31-31a39 39 0 0114.66-31.14 6.32 6.32 0 012.9-1.27c1.78-.29 5.66-8.37 5.66-15.78 0-2.94-.69-3.73-.69-3.74a6.12 6.12 0 01-2.49-6.29c7.53-37.69-4.28-55-12-61.9a35.53 35.53 0 00-34-7.14 6.64 6.64 0 01-1.87.3c-17.37.05-30.77 6-38.74 17.19-11.1 15.57-10.06 37.27-5.79 51.12a6.23 6.23 0 01-1.63 6.32 4 4 0 00-1.19 3.37v.77c0 7.36 3.88 15.47 5.66 15.78a6.54 6.54 0 012.9 1.31A39.33 39.33 0 01229.86 247c0 12.84-14.34 21.18-31 30.83-11.88 6.9-25.31 14.69-34.65 25.13a6.23 6.23 0 11-9.6-7.93l.32-.37c10.65-11.92 25-20.24 37.64-27.59 11.64-6.75 24.78-14.4 24.78-20.21a26.85 26.85 0 00-8.86-20.59c-10.37-3.45-14-19.56-14.15-27.23a16.53 16.53 0 012.42-10.35c-4.27-16.6-4.42-40.76 8.45-58.83 10.25-14.39 26.8-22.13 47.91-22.42a48.1 48.1 0 0145.17 10c9.49 8.55 23.94 28.89 16.5 70.51 1.59 2.34 2.83 5.75 2.83 10.73 0 7.54-3.63 24.18-14.22 27.61a26.63 26.63 0 00-9 20.44c0 6 13.16 13.6 24.77 20.34 12.67 7.36 27 15.69 37.66 27.6a6.24 6.24 0 01-4.57 10.33z\"></path>\n    </svg>\n  );\n}\n","export function PanicIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fed2a4\"\n        d=\"M104.478 214.588v136.94c0 83.889 67.555 152.93 151.444 152.972 83.719.042 151.6-67.813 151.6-151.522v-138.39c0-5.579-4.523-10.101-10.101-10.101H114.579c-5.578-.001-10.101 4.522-10.101 10.101z\"\n      ></path>\n      <path\n        fill=\"#ffbd86\"\n        d=\"M367.652 204.486v148.492c0 76.921-57.32 140.449-131.576 150.214 6.52.857 13.169 1.308 19.924 1.308 83.683 0 151.522-67.839 151.522-151.522v-138.39c0-5.579-4.523-10.101-10.101-10.101h-29.769z\"\n      ></path>\n      <path\n        fill=\"#ea9b58\"\n        d=\"M422.674 352.978h-15.152v-90.913h15.152c25.105 0 45.457 20.352 45.457 45.457 0 25.104-20.352 45.456-45.457 45.456zm-333.348 0h15.152v-90.913H89.326c-25.105 0-45.457 20.352-45.457 45.457 0 25.104 20.352 45.456 45.457 45.456z\"\n      ></path>\n      <path\n        fill=\"#e175a5\"\n        d=\"M214.296 459.83c-6.439 0-11.097-6.041-9.6-12.304 5.543-23.196 26.409-40.442 51.304-40.442s45.761 17.246 51.304 40.442c1.497 6.263-3.161 12.304-9.6 12.304z\"\n      ></path>\n      <path\n        fill=\"#e69642\"\n        d=\"M263.442 31.701l21.77-21.166c5.797-5.636 15.511-3.033 17.713 4.746l8.27 29.215c1.574 5.56 7.287 8.859 12.889 7.442l29.436-7.445c7.838-1.982 14.949 5.129 12.967 12.967l-7.445 29.436a10.675 10.675 0 007.442 12.889l29.215 8.27c7.779 2.202 10.382 11.917 4.746 17.713l-21.166 21.77c-4.028 4.143-4.028 10.74 0 14.883l21.166 21.77c5.636 5.797 3.033 15.511-4.746 17.713l-29.215 8.27c-5.56 1.574-8.859 7.287-7.442 12.889l7.445 29.436c1.983 7.838-5.129 14.949-12.967 12.967l-29.436-7.445a10.675 10.675 0 00-12.889 7.442l-8.27 29.215c-2.202 7.779-11.917 10.382-17.713 4.746l-21.77-21.166c-4.143-4.028-10.74-4.028-14.883 0l-21.77 21.166c-5.797 5.636-15.511 3.033-17.713-4.746l-8.27-29.215c-1.574-5.56-7.287-8.859-12.889-7.442l-29.436 7.445c-7.838 1.982-14.949-5.129-12.967-12.967l7.445-29.436a10.675 10.675 0 00-7.442-12.889l-29.215-8.27c-7.779-2.202-10.382-11.917-4.746-17.713l21.166-21.77c4.028-4.143 4.028-10.74 0-14.883l-21.166-21.77c-5.636-5.797-3.033-15.511 4.746-17.713l29.215-8.27c5.56-1.574 8.859-7.287 7.442-12.889l-7.445-29.436c-1.982-7.838 5.129-14.949 12.967-12.967l29.436 7.445a10.675 10.675 0 0012.889-7.442l8.27-29.215c2.202-7.779 11.917-10.382 17.713-4.746l21.77 21.166c4.143 4.029 10.739 4.029 14.883 0z\"\n      ></path>\n      <path\n        fill=\"#e38523\"\n        d=\"M379.279 162.422c-4.028-4.143-4.028-10.74 0-14.883l21.166-21.77c5.636-5.797 3.033-15.511-4.746-17.713l-29.215-8.27c-5.56-1.574-8.859-7.287-7.442-12.889l7.445-29.436c1.983-7.838-5.129-14.949-12.967-12.967l-24.611 6.225c.544 5.641.831 11.357.831 17.141 0 97.488-79.03 176.518-176.518 176.518-1.885 0-3.76-.04-5.631-.098l-2.08 8.223c-1.983 7.838 5.129 14.949 12.967 12.967l29.436-7.445c5.602-1.417 11.315 1.881 12.889 7.441l8.27 29.215c2.202 7.779 11.917 10.382 17.713 4.746l21.77-21.166c4.143-4.028 10.74-4.028 14.883 0l21.77 21.166c5.797 5.636 15.511 3.033 17.713-4.746l8.27-29.215c1.574-5.56 7.287-8.859 12.889-7.441l29.436 7.445c7.838 1.982 14.949-5.129 12.967-12.967l-7.445-29.436a10.675 10.675 0 017.442-12.889l29.215-8.27c7.779-2.202 10.382-11.917 4.746-17.713z\"\n      ></path>\n      <path\n        fill=\"#f8e883\"\n        d=\"M255.691 178.223c-8.927 0-16.162-7.236-16.162-16.162V83.269c0-8.927 7.236-16.162 16.162-16.162s16.162 7.236 16.162 16.162v78.791c.001 8.927-7.235 16.163-16.162 16.163z\"\n      ></path>\n      <circle cx=\"256\" cy=\"226.71\" r=\"16.162\" fill=\"#f8e883\"></circle>\n      <path d=\"M422.674 254.564h-7.657v-39.98c0-5.531-2.57-10.468-6.573-13.697a18.416 18.416 0 001.903-4.551c1.673-6.244-.019-12.739-4.525-17.374l-21.165-21.768a3.161 3.161 0 01-.001-4.428l21.166-21.77c4.507-4.635 6.198-11.13 4.525-17.373-1.673-6.245-6.385-11.024-12.605-12.785l-29.215-8.27a3.158 3.158 0 01-2.213-3.834l7.445-29.436c1.585-6.267-.198-12.737-4.769-17.308-4.57-4.57-11.039-6.357-17.307-4.768l-29.437 7.445a3.156 3.156 0 01-3.833-2.214l-8.27-29.215c-1.761-6.22-6.54-10.931-12.784-12.605-6.244-1.672-12.739.018-17.375 4.525l-21.77 21.167a3.158 3.158 0 01-4.426 0L232.016 5.157c-4.635-4.505-11.13-6.198-17.374-4.524s-11.023 6.386-12.784 12.605l-8.27 29.216a3.166 3.166 0 01-3.833 2.214l-29.437-7.447c-6.264-1.583-12.737.198-17.307 4.769-4.571 4.571-6.354 11.042-4.769 17.308l7.445 29.436a3.158 3.158 0 01-2.213 3.834l-29.215 8.27c-6.221 1.761-10.932 6.54-12.605 12.785-1.673 6.243.019 12.738 4.524 17.373l21.166 21.769a3.161 3.161 0 01.001 4.428l-21.166 21.769c-4.507 4.635-6.198 11.13-4.525 17.374a18.4 18.4 0 001.903 4.551c-4.003 3.229-6.573 8.166-6.573 13.697v39.98h-7.657c-29.2 0-52.956 23.756-52.956 52.957 0 29.2 23.756 52.956 52.956 52.956h7.91c.827 15.085 3.74 29.88 8.706 44.096a7.5 7.5 0 007.08 5.029c.82 0 1.655-.136 2.473-.422a7.499 7.499 0 004.608-9.553c-5.389-15.427-8.12-31.612-8.12-48.107V214.585c0-1.434 1.166-2.6 2.6-2.6h9.79l19.101 5.407a3.158 3.158 0 012.213 3.834l-7.445 29.436c-1.585 6.267.198 12.738 4.769 17.309 4.571 4.57 11.039 6.352 17.307 4.767l29.437-7.445a3.157 3.157 0 013.833 2.214l8.27 29.214c1.761 6.22 6.54 10.932 12.785 12.605 6.24 1.673 12.739-.017 17.374-4.524l21.77-21.167a3.158 3.158 0 014.426 0l21.771 21.168c3.458 3.361 7.95 5.156 12.602 5.156 1.584 0 3.185-.208 4.77-.633 6.245-1.673 11.024-6.386 12.785-12.605l8.27-29.215a3.157 3.157 0 013.833-2.213l29.436 7.444c6.267 1.589 12.737-.196 17.308-4.767s6.354-11.042 4.769-17.309l-7.445-29.436a3.158 3.158 0 012.213-3.834l19.101-5.407h9.79c1.434 0 2.6 1.166 2.6 2.6v138.398c0 14.965-2.282 29.7-6.784 43.797a7.5 7.5 0 1014.288 4.562c4.219-13.212 6.667-26.926 7.314-40.865h7.838c29.2 0 52.956-23.756 52.956-52.956.001-29.199-23.755-52.956-52.955-52.956zM89.326 345.478c-20.929 0-37.956-17.027-37.956-37.956s17.027-37.957 37.956-37.957h7.652v34.809a22.413 22.413 0 00-13.235-4.351h-5.529c-4.143 0-7.5 3.357-7.5 7.5s3.357 7.5 7.5 7.5h5.529a7.39 7.39 0 015.975 3.056l7.261 10.053v17.348h-7.653zm275.115-142.519c-9.534 2.699-15.099 12.339-12.67 21.945l7.445 29.436c.386 1.521-.356 2.548-.833 3.024-.477.477-1.501 1.22-3.023.832l-29.437-7.445c-9.602-2.424-19.245 3.137-21.944 12.671l-8.27 29.214c-.427 1.511-1.583 2.028-2.233 2.203-.651.174-1.911.302-3.035-.79l-21.77-21.167c-3.553-3.455-8.11-5.182-12.67-5.182-4.559 0-9.118 1.728-12.67 5.182l-21.77 21.166c-1.124 1.093-2.386.964-3.035.791-.65-.175-1.807-.692-2.233-2.203l-8.27-29.213c-2.698-9.536-12.344-15.099-21.944-12.672l-29.438 7.446c-1.519.382-2.546-.356-3.022-.833-.477-.477-1.219-1.503-.833-3.024l7.445-29.436c2.43-9.606-3.136-19.246-12.67-21.945l-29.215-8.27c-1.511-.427-2.028-1.583-2.202-2.233-.175-.65-.304-1.91.79-3.035l21.167-21.77c6.906-7.104 6.906-18.234-.001-25.339l-21.166-21.77c-1.094-1.125-.965-2.384-.791-3.034.175-.651.692-1.807 2.203-2.233l29.215-8.27c9.534-2.699 15.099-12.339 12.67-21.945l-7.445-29.436c-.386-1.521.356-2.548.833-3.024.476-.476 1.501-1.216 3.023-.834l29.437 7.447c9.602 2.424 19.245-3.136 21.944-12.671l8.27-29.215c.427-1.51 1.582-2.027 2.232-2.202.653-.173 1.91-.305 3.036.79l21.77 21.167c7.103 6.908 18.236 6.908 25.339 0l21.77-21.166c1.126-1.097 2.384-.965 3.036-.791.65.175 1.806.692 2.232 2.202l8.27 29.214c2.698 9.535 12.342 15.101 21.944 12.671l29.437-7.445c1.518-.388 2.547.357 3.023.833.477.477 1.219 1.503.833 3.024L351.77 85.06c-2.43 9.606 3.136 19.246 12.67 21.945l29.215 8.27c1.511.427 2.028 1.582 2.203 2.233.174.65.303 1.909-.791 3.034L373.9 142.313c-6.906 7.104-6.906 18.234.001 25.339l21.166 21.769c1.094 1.125.965 2.385.79 3.035-.174.65-.691 1.807-2.202 2.233zm58.233 142.519h-7.652V328.13l7.262-10.054a7.386 7.386 0 015.974-3.055h5.529c4.143 0 7.5-3.357 7.5-7.5s-3.357-7.5-7.5-7.5h-5.529a22.413 22.413 0 00-13.235 4.351v-34.809h7.652c20.929 0 37.956 17.028 37.956 37.957 0 20.931-17.027 37.958-37.957 37.958zm-32.862 79.036a7.5 7.5 0 00-10.292 2.563c-12.592 20.942-30.428 38.472-51.58 50.695C306.17 490.352 281.296 497 256.003 497h-.079c-49.319-.027-94.684-25.219-121.353-67.388a7.5 7.5 0 10-12.677 8.017c29.432 46.537 79.534 74.34 134.022 74.37h.087c27.923 0 55.395-7.345 79.442-21.241 23.346-13.491 43.033-32.838 56.931-55.953a7.5 7.5 0 00-2.564-10.291z\"></path>\n      <path d=\"M197.401 445.782c-1.259 5.267-.064 10.716 3.277 14.949a17.249 17.249 0 0013.618 6.599h83.406a17.249 17.249 0 0013.618-6.599c3.342-4.233 4.536-9.682 3.277-14.948-6.5-27.202-30.596-46.199-58.599-46.199-28.001 0-52.097 18.998-58.597 46.198zm102.607 3.489a2.492 2.492 0 01-.463 2.169c-.32.407-.9.892-1.843.892h-83.406a2.272 2.272 0 01-1.843-.892 2.493 2.493 0 01-.463-2.17c4.88-20.423 22.976-34.686 44.008-34.686s39.13 14.263 44.01 34.687zm45.579-96.293c0-16.03-13.042-29.072-29.073-29.072-16.03 0-29.072 13.042-29.072 29.072s13.042 29.072 29.072 29.072c16.032 0 29.073-13.042 29.073-29.072zm-43.144 0c0-7.76 6.312-14.072 14.072-14.072s14.073 6.312 14.073 14.072-6.313 14.072-14.073 14.072-14.072-6.312-14.072-14.072zm-106.958-29.072c-16.031 0-29.073 13.042-29.073 29.072s13.042 29.072 29.073 29.072c16.03 0 29.072-13.042 29.072-29.072s-13.042-29.072-29.072-29.072zm0 43.144c-7.76 0-14.073-6.312-14.073-14.072s6.313-14.072 14.073-14.072 14.072 6.312 14.072 14.072-6.312 14.072-14.072 14.072zm60.205-181.325c13.046 0 23.659-10.618 23.659-23.67v-22.109c0-4.143-3.357-7.5-7.5-7.5s-7.5 3.357-7.5 7.5v22.109c0 4.78-3.885 8.67-8.659 8.67-4.775 0-8.66-3.89-8.66-8.67V83.266c0-4.775 3.885-8.66 8.66-8.66 4.774 0 8.659 3.885 8.659 8.66v21.68c0 4.143 3.357 7.5 7.5 7.5s7.5-3.357 7.5-7.5v-21.68c0-13.046-10.613-23.66-23.659-23.66s-23.66 10.614-23.66 23.66v78.789c.001 13.052 10.615 23.67 23.66 23.67zm.31 17.323c-13.048 0-23.663 10.615-23.663 23.662 0 13.048 10.615 23.663 23.663 23.663s23.663-10.615 23.663-23.663c0-13.047-10.615-23.662-23.663-23.662zm0 32.324c-4.776 0-8.663-3.887-8.663-8.663s3.887-8.662 8.663-8.662 8.663 3.886 8.663 8.662c0 4.777-3.887 8.663-8.663 8.663z\"></path>\n    </svg>\n  );\n}\n","import { ReactNode } from 'react';\nimport clsx from 'clsx';\n// Components\nimport { IconAvatar } from 'components/icons/IconAvatar';\n\nexport type MetricHighlightProps = {\n  /**\n   * The text to be highlighted\n   */\n  children: ReactNode;\n  /**\n   * The icon representing the metric\n   */\n  icon: ReactNode;\n  /**\n   * Indicates if it's a negative metric\n   */\n  type?: 'positive' | 'negative' | 'default';\n  /**\n   * Custom class\n   */\n  className?: string;\n};\n\nexport function MetricHighlight({ children, icon, type, className }: MetricHighlightProps) {\n  return (\n    <span className={clsx('metric-highlight', type && `metric-highlight--${type}`, className)}>\n      {children} <IconAvatar size=\"small\" icon={icon} />\n    </span>\n  );\n}\n","export default function parseTimeRanges(ranges) {\n    var result = [];\n    for (var i = 0; i < ranges.length; i++) {\n        result.push({\n            start: ranges.start(i),\n            end: ranges.end(i),\n        });\n    }\n    return result;\n}\n","import createHTMLMediaHook from './factory/createHTMLMediaHook';\nvar useAudio = createHTMLMediaHook('audio');\nexport default useAudio;\n","import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { useEffect, useRef } from 'react';\nimport useSetState from '../useSetState';\nimport parseTimeRanges from '../misc/parseTimeRanges';\nexport default function createHTMLMediaHook(tag) {\n    return function (elOrProps) {\n        var element;\n        var props;\n        if (React.isValidElement(elOrProps)) {\n            element = elOrProps;\n            props = element.props;\n        }\n        else {\n            props = elOrProps;\n        }\n        var _a = useSetState({\n            buffered: [],\n            time: 0,\n            duration: 0,\n            paused: true,\n            muted: false,\n            volume: 1,\n            playing: false,\n        }), state = _a[0], setState = _a[1];\n        var ref = useRef(null);\n        var wrapEvent = function (userEvent, proxyEvent) {\n            return function (event) {\n                try {\n                    proxyEvent && proxyEvent(event);\n                }\n                finally {\n                    userEvent && userEvent(event);\n                }\n            };\n        };\n        var onPlay = function () { return setState({ paused: false }); };\n        var onPlaying = function () { return setState({ playing: true }); };\n        var onWaiting = function () { return setState({ playing: false }); };\n        var onPause = function () { return setState({ paused: true, playing: false }); };\n        var onVolumeChange = function () {\n            var el = ref.current;\n            if (!el) {\n                return;\n            }\n            setState({\n                muted: el.muted,\n                volume: el.volume,\n            });\n        };\n        var onDurationChange = function () {\n            var el = ref.current;\n            if (!el) {\n                return;\n            }\n            var duration = el.duration, buffered = el.buffered;\n            setState({\n                duration: duration,\n                buffered: parseTimeRanges(buffered),\n            });\n        };\n        var onTimeUpdate = function () {\n            var el = ref.current;\n            if (!el) {\n                return;\n            }\n            setState({ time: el.currentTime });\n        };\n        var onProgress = function () {\n            var el = ref.current;\n            if (!el) {\n                return;\n            }\n            setState({ buffered: parseTimeRanges(el.buffered) });\n        };\n        if (element) {\n            element = React.cloneElement(element, __assign(__assign({ controls: false }, props), { ref: ref, onPlay: wrapEvent(props.onPlay, onPlay), onPlaying: wrapEvent(props.onPlaying, onPlaying), onWaiting: wrapEvent(props.onWaiting, onWaiting), onPause: wrapEvent(props.onPause, onPause), onVolumeChange: wrapEvent(props.onVolumeChange, onVolumeChange), onDurationChange: wrapEvent(props.onDurationChange, onDurationChange), onTimeUpdate: wrapEvent(props.onTimeUpdate, onTimeUpdate), onProgress: wrapEvent(props.onProgress, onProgress) }));\n        }\n        else {\n            element = React.createElement(tag, __assign(__assign({ controls: false }, props), { ref: ref, onPlay: wrapEvent(props.onPlay, onPlay), onPlaying: wrapEvent(props.onPlaying, onPlaying), onWaiting: wrapEvent(props.onWaiting, onWaiting), onPause: wrapEvent(props.onPause, onPause), onVolumeChange: wrapEvent(props.onVolumeChange, onVolumeChange), onDurationChange: wrapEvent(props.onDurationChange, onDurationChange), onTimeUpdate: wrapEvent(props.onTimeUpdate, onTimeUpdate), onProgress: wrapEvent(props.onProgress, onProgress) })); // TODO: fix this typing.\n        }\n        // Some browsers return `Promise` on `.play()` and may throw errors\n        // if one tries to execute another `.play()` or `.pause()` while that\n        // promise is resolving. So we prevent that with this lock.\n        // See: https://bugs.chromium.org/p/chromium/issues/detail?id=593273\n        var lockPlay = false;\n        var controls = {\n            play: function () {\n                var el = ref.current;\n                if (!el) {\n                    return undefined;\n                }\n                if (!lockPlay) {\n                    var promise = el.play();\n                    var isPromise = typeof promise === 'object';\n                    if (isPromise) {\n                        lockPlay = true;\n                        var resetLock = function () {\n                            lockPlay = false;\n                        };\n                        promise.then(resetLock, resetLock);\n                    }\n                    return promise;\n                }\n                return undefined;\n            },\n            pause: function () {\n                var el = ref.current;\n                if (el && !lockPlay) {\n                    return el.pause();\n                }\n            },\n            seek: function (time) {\n                var el = ref.current;\n                if (!el || state.duration === undefined) {\n                    return;\n                }\n                time = Math.min(state.duration, Math.max(0, time));\n                el.currentTime = time;\n            },\n            volume: function (volume) {\n                var el = ref.current;\n                if (!el) {\n                    return;\n                }\n                volume = Math.min(1, Math.max(0, volume));\n                el.volume = volume;\n                setState({ volume: volume });\n            },\n            mute: function () {\n                var el = ref.current;\n                if (!el) {\n                    return;\n                }\n                el.muted = true;\n            },\n            unmute: function () {\n                var el = ref.current;\n                if (!el) {\n                    return;\n                }\n                el.muted = false;\n            },\n        };\n        useEffect(function () {\n            var el = ref.current;\n            if (!el) {\n                if (process.env.NODE_ENV !== 'production') {\n                    if (tag === 'audio') {\n                        console.error('useAudio() ref to <audio> element is empty at mount. ' +\n                            'It seem you have not rendered the audio element, which it ' +\n                            'returns as the first argument const [audio] = useAudio(...).');\n                    }\n                    else if (tag === 'video') {\n                        console.error('useVideo() ref to <video> element is empty at mount. ' +\n                            'It seem you have not rendered the video element, which it ' +\n                            'returns as the first argument const [video] = useVideo(...).');\n                    }\n                }\n                return;\n            }\n            setState({\n                volume: el.volume,\n                muted: el.muted,\n                paused: el.paused,\n            });\n            // Start media, if autoPlay requested.\n            if (props.autoPlay && el.paused) {\n                controls.play();\n            }\n        }, [props.src]);\n        return [element, state, controls, ref];\n    };\n}\n","import { useEffect, useState } from 'react';\nimport { useAudio } from 'react-use';\n// Utils\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useDevFeatures } from 'hooks/useDevFeatures';\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Step } from 'components/steps';\nimport { Card } from 'components/cards';\nimport { DrawingCanvas } from 'components/canvas';\nimport { PanicIcon } from 'components/icons/PanicIcon';\n\n// Sound\nconst arteRuimTimer = require('assets/sounds/arte-ruim-timer.mp3');\n\ntype StepDrawProps = {\n  secretCard: ArteRuimCard | PlainObject;\n  onSubmitDrawing: GenericFunction;\n};\n\nexport function StepDraw({ secretCard, onSubmitDrawing }: StepDrawProps) {\n  const { translate } = useLanguage();\n  const { isDebugEnabled } = useDevFeatures();\n  const [lines, setLines] = useState<any>([]);\n  const [isTimesUp, setTimesUp] = useState(false);\n  const [volume] = useGlobalState('volume');\n  const [audio, , controls] = useAudio({\n    src: arteRuimTimer,\n    autoPlay: true,\n  });\n\n  // Updated volume\n  useEffect(() => {\n    controls.volume(volume);\n  }, [volume]); // eslint-disable-line\n\n  const { seconds } = useCountdown({\n    duration: 11,\n    autoStart: true,\n    onExpire: () => {\n      setTimesUp(true);\n      onSubmitDrawing({\n        drawing: JSON.stringify(lines),\n        cardId: secretCard.id,\n      });\n    },\n  });\n\n  return (\n    <Step>\n      <Card\n        size=\"large\"\n        header={translate('Desenhe', 'Draw', isDebugEnabled ? secretCard?.id : undefined)}\n        footer={Array(secretCard?.level).fill('•').join('')}\n        className=\"a-draw-step__card\"\n        color=\"yellow\"\n      >\n        {secretCard?.text}\n        <span className=\"a-draw-step__timer\">{seconds > 0 ? seconds - 1 : 0}</span>\n      </Card>\n      {audio}\n      {isTimesUp ? (\n        <PanicIcon style={{ background: 'white', width: '500px', padding: '2em' }} />\n      ) : (\n        <DrawingCanvas lines={lines} setLines={setLines} />\n      )}\n    </Step>\n  );\n}\n","import { useEffect, useState } from 'react';\n// State & Hooks\nimport { useIsUserReady } from 'hooks/useIsUserReady';\nimport { useUser } from 'hooks/useUser';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitDrawingAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { RoundAnnouncement } from 'components/round';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { StepDraw } from './StepDraw';\nimport { PaintingIcon } from 'components/icons/PaintingIcon';\n\nfunction PhaseDraw({ players, state, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, goToNextStep, setStep } = useStep(0);\n  const user = useUser(players);\n  const isUserReady = useIsUserReady(players, state);\n  const [secretCard, setSecretCard] = useState({});\n\n  useEffect(() => {\n    setSecretCard(players[user?.id]?.currentCard ?? {});\n  }, [players, user?.id]);\n\n  const onSubmitDrawing = useOnSubmitDrawingAPIRequest(setStep);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.ARTE_RUIM.DRAW}>\n      <StepSwitcher\n        step={step}\n        conditions={[!isUserReady, !isUserReady, !isUserReady]}\n        players={players}\n        waitingRoomInstruction={translate(\n          'Vamos aguardar enquanto os outros jogadores terminam seus desenhos!',\n          'Please wait while other players finish their artwork!'\n        )}\n      >\n        {/* Step 0 */}\n        <RoundAnnouncement round={state?.round} onPressButton={goToNextStep} buttonText=\" \" time={5}>\n          <Instruction contained>\n            <Translate\n              pt={`Essa rodada usará cartas de nível ${state?.level || '?'}`}\n              en={`This round uses cards of level ${state?.level || '?'}`}\n            />\n            {state.level === 4 && (\n              <Instruction contained>\n                <Translate\n                  pt=\"No nível 4, as cartas tem um ou dois temas comuns, então preste atenção nos detalhes\"\n                  en=\"On level 4, the cards have one or two common themes, so pay attention to details\"\n                />\n              </Instruction>\n            )}\n            {state.level === 5 && (\n              <Instruction contained>\n                <Translate\n                  pt=\"No nível 5, só existem duas cartas para todos\"\n                  en=\"On level 5, players draw one of two things only\"\n                />\n              </Instruction>\n            )}\n          </Instruction>\n        </RoundAnnouncement>\n        {/* Step 1 */}\n        <PhaseAnnouncement\n          icon={<PaintingIcon />}\n          title={translate('Desenhe!', 'Draw!')}\n          buttonText={translate('Um dó, lá, si... vamos ir... já!', 'Ready! Set! Go!')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          withoutTimer\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  Você terá 10 segundos para ler a sua carta e desenhá-la.\n                  <br />\n                  Aperte o botão quando estiver pronto!\n                  <br />\n                  Não vale usar números e letras.\n                  <br />\n                  Fique esperto porque o tempo começa assim que você apertar.\n                </>\n              }\n              en={\n                <>\n                  You'll have 10 seconds to read and draw your card.\n                  <br />\n                  Press the button when you're ready!\n                  <br />\n                  You can NOT use numbers or letters.\n                  <br />\n                  Be aware of the timer! It starts as soon as you press the button.\n                </>\n              }\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 2 */}\n        <StepDraw secretCard={secretCard} onSubmitDrawing={onSubmitDrawing} />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseDraw;\n","import { ARTE_RUIM_API } from 'services/adapters';\nimport { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\n\nexport function useOnSubmitDrawingAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: ARTE_RUIM_API.submitAction,\n    actionName: 'submit-drawing',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(1),\n    successMessage: translate(\n      'Acabou o tempo! Aguarde enquanto os outros participantes desenham',\n      \"Time's up! Wait for the other players to finish their art\"\n    ),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar o desenho',\n      'Oops, the application failed to send your art'\n    ),\n  });\n\n  return (payload: SubmitDrawingPayload) => {\n    request({\n      action: 'SUBMIT_DRAWING',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitVotingAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: ARTE_RUIM_API.submitAction,\n    actionName: 'submit-voting',\n    onSuccess: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: translate(\n      'Avaliação enviada! Agora aguarde os outros jogadores',\n      'Evaluation sent successfully! Wait for the other players'\n    ),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua avaliação',\n      'Oops, the application failed to send your evaluation'\n    ),\n  });\n\n  return (payload: SubmitVotingPayload) => {\n    request({\n      action: 'SUBMIT_VOTING',\n      ...payload,\n    });\n  };\n}\n","// This icon file is generated automatically.\nvar ThunderboltOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M848 359.3H627.7L825.8 109c4.1-5.3.4-13-6.3-13H436c-2.8 0-5.5 1.5-6.9 4L170 547.5c-3.1 5.3.7 12 6.9 12h174.4l-89.4 357.6c-1.9 7.8 7.5 13.3 13.3 7.7L853.5 373c5.2-4.9 1.7-13.7-5.5-13.7zM378.2 732.5l60.3-241H281.1l189.6-327.4h224.6L487 427.4h211L378.2 732.5z\" } }] }, \"name\": \"thunderbolt\", \"theme\": \"outlined\" };\nexport default ThunderboltOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ThunderboltOutlinedSvg from \"@ant-design/icons-svg/es/asn/ThunderboltOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ThunderboltOutlined = function ThunderboltOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ThunderboltOutlinedSvg\n  }));\n};\n\nThunderboltOutlined.displayName = 'ThunderboltOutlined';\nexport default /*#__PURE__*/React.forwardRef(ThunderboltOutlined);","import { SEPARATOR } from 'utils/constants';\n\nexport function prepareVotes(votes: StringDictionary) {\n  return Object.entries(votes).reduce((acc: StringDictionary, [drawingEntryId, cardEntryId]) => {\n    const [, drawingId] = drawingEntryId.split(SEPARATOR);\n    const [, cardId] = cardEntryId.split(SEPARATOR);\n    acc[drawingId] = cardId;\n    return acc;\n  }, {});\n}\n","import clsx from 'clsx';\n// Utils\nimport { getEntryId } from 'utils/helpers';\n// Components\nimport { CanvasSVG } from 'components/canvas';\nimport { Ribbon } from 'components/ribbons';\n\ntype EvaluationAllDrawingsProps = {\n  drawings: ArteRuimDrawing[];\n  activeItem: string;\n  onActivateItem: GenericFunction;\n  votes: PlainObject;\n  canvasSize: number;\n  players: GamePlayers;\n};\n\nexport function EvaluationAllDrawings({\n  drawings,\n  activeItem,\n  onActivateItem,\n  votes,\n  canvasSize,\n  players,\n}: EvaluationAllDrawingsProps) {\n  const liButtonBaseClass = 'a-evaluation-all-drawings__li-drawing-button';\n\n  return (\n    <ul className=\"a-evaluation-all-drawings\">\n      {drawings?.map((drawingEntry) => {\n        const canvasEntryId = getEntryId(['drawing', drawingEntry.id]);\n        const isActive = activeItem === canvasEntryId;\n        const vote = votes[canvasEntryId];\n\n        return (\n          <li\n            key={`${canvasEntryId}-${drawingEntry.playerId}`}\n            className={clsx(liButtonBaseClass, isActive && `${liButtonBaseClass}--active`)}\n            onClick={() => onActivateItem(canvasEntryId)}\n          >\n            {votes?.[canvasEntryId] && <Ribbon label={vote.charAt(vote.length - 1)} />}\n            <CanvasSVG\n              drawing={drawingEntry.drawing}\n              className=\"a-evaluation-all-drawings__drawing\"\n              size={canvasSize}\n            />\n            <span className=\"a-evaluation-all-drawings__artist\">{players[drawingEntry.playerId].name}</span>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","// Ant Design Resources\nimport { WarningOutlined } from '@ant-design/icons';\n// Helpers\nimport { getColorFromLetter } from 'utils/helpers';\n// Components\nimport { Card } from 'components/cards';\nimport { ReactNode } from 'react';\n\ntype ArteRuimCardProps = {\n  /**\n   * The text of the card\n   */\n  text?: ReactNode;\n  /**\n   * The level of the card displayed as dots in the footer\n   */\n  level: number;\n  /**\n   * The header of the card. Default: X\n   */\n  header?: string;\n};\n\n/**\n * This is the Card component\n * @param props {object}\n * @returns\n */\nexport const ArteRuimCard = ({ text, level, header = 'X' }: ArteRuimCardProps) => {\n  return (\n    <Card\n      color={getColorFromLetter(header)}\n      header={header}\n      size=\"medium\"\n      footer={Array(level).fill('•').join('')}\n    >\n      {text ?? <WarningOutlined />}\n    </Card>\n  );\n};\n","import clsx from 'clsx';\nimport { useDevFeatures } from 'hooks/useDevFeatures';\n// Utils\nimport { LETTERS } from 'utils/constants';\nimport { getEntryId } from 'utils/helpers';\n// Components\nimport { ArteRuimCard as Card } from './Card';\n\ntype EvaluationAllCardsProps = {\n  cards: ArteRuimCard[];\n  activeItem: string;\n  onActivateItem: GenericFunction;\n  votes: PlainObject;\n};\n\nexport function EvaluationAllCards({ cards, activeItem, onActivateItem, votes }: EvaluationAllCardsProps) {\n  const { isDebugEnabled } = useDevFeatures();\n  const liButtonBaseClass = 'a-evaluation-all-cards__li-card-button';\n\n  return (\n    <ul className=\"a-evaluation-all-cards\">\n      {cards.map((cardEntry, index) => {\n        const letter = LETTERS[index];\n        const cardEntryId = getEntryId(['card', cardEntry.id, letter]);\n        const isActive = activeItem === cardEntryId;\n        const isUsed = Object.values(votes).includes(cardEntryId);\n\n        return (\n          <li\n            role=\"button\"\n            key={cardEntryId}\n            className={clsx(\n              liButtonBaseClass,\n              isActive && `${liButtonBaseClass}--active`,\n              isUsed && `${liButtonBaseClass}--used`\n            )}\n            onClick={() => onActivateItem(cardEntryId)}\n          >\n            <Card\n              text={cardEntry.text}\n              level={cardEntry.level}\n              header={isDebugEnabled ? cardEntry.id : letter}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import { StarIcon } from 'components/icons/StarIcon';\nimport { MetricHighlight, MetricHighlightProps } from 'components/text/MetricHighlight';\n\ntype HighlightProps = Pick<MetricHighlightProps, 'children' | 'type'>;\n\nexport function PointsHighlight({ children, type }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<StarIcon />} type={type}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { PointsHighlight } from './Highlights';\n\nexport const EvaluationRules = () => (\n  <Instruction>\n    <Translate\n      pt={\n        <>\n          Encontre os pares de desenho e carta clicando em uma carta ou desenho e em seguida clicando em seu\n          par.\n          <br />\n          Uma bandeirinha aparecerá no topo de cada desenho com a cor e letra da carta que você selecionou.\n          <br />\n          Quando encontrar todos os pares, envie sua avaliação!\n        </>\n      }\n      en={\n        <>\n          Find the pairs of artwork and card by clicking on a card or artwork then on its match.\n          <br />\n          A ribbon will show up on the artwork with the color and letter of the matching card.\n          <br />\n          When you're done, click the button to send your evaluation!\n        </>\n      }\n    />\n  </Instruction>\n);\n\nexport const GalleryRules = () => (\n  <Instruction>\n    <Translate\n      pt={\n        <>\n          Agora, mostraremos cada arte, o que os jogadores votaram e a resposta final.\n          <br />\n          Se você votou na expressão correta, você ganha <PointsHighlight type=\"positive\">\n            2\n          </PointsHighlight>{' '}\n          pontos.\n          <br />\n          Quando for a sua arte, você ganha <PointsHighlight type=\"positive\">1</PointsHighlight> ponto para\n          cada pessoa que votou corretamente.\n        </>\n      }\n      en={\n        <>\n          Now we show each art, what players voted, and the final answer.\n          <br />\n          You get <PointsHighlight type=\"positive\">2</PointsHighlight> points if you selected the right card.\n          <br />\n          When players selected the correct card for your artwork, you get{' '}\n          <PointsHighlight type=\"positive\">1</PointsHighlight> point for each match!\n        </>\n      }\n    />\n  </Instruction>\n);\n\nexport const ScoringRules = () => (\n  <Instruction>\n    <Translate\n      pt={\n        <>\n          Você ganha <PointsHighlight type=\"positive\">2</PointsHighlight> pontos para cada ligação correta\n          entre arte e expressão.\n          <br />\n          Para cada ligação correta que sua arte ganha, você recebe{' '}\n          <PointsHighlight type=\"positive\">1</PointsHighlight> ponto.\n        </>\n      }\n      en={\n        <>\n          You get <PointsHighlight type=\"positive\">2</PointsHighlight> points if you matched the right card\n          with artwork.\n          <br />\n          For you own artwork, you get <PointsHighlight type=\"positive\">1</PointsHighlight> point for each\n          correct match the other players done.\n        </>\n      }\n    />\n  </Instruction>\n);\n","import { useCallback, useEffect } from 'react';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\nimport { CloudUploadOutlined, ThunderboltOutlined } from '@ant-design/icons';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\nimport { useUser } from 'hooks/useUser';\nimport { useVotingMatch } from 'hooks/useVotingMatch';\n// Utils\nimport { LETTERS } from 'utils/constants';\nimport { getEntryId, shuffle } from 'utils/helpers';\nimport { prepareVotes } from './utils/helpers';\n// Components\nimport { Step } from 'components/steps';\nimport { PopoverRule } from 'components/rules';\nimport { CanvasResizer } from 'components/canvas';\nimport { Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { EvaluationAllDrawings } from './components/EvaluationAllDrawings';\nimport { EvaluationAllCards } from './components/EvaluationAllCards';\nimport { EvaluationRules } from './components/TextBlobs';\n\ntype StepEvaluationProps = {\n  drawings: ArteRuimDrawing[];\n  cards: ArteRuimCard[];\n  players: GamePlayers;\n  onSubmitVoting: GenericFunction;\n};\n\nexport function StepEvaluation({ drawings, cards, players, onSubmitVoting }: StepEvaluationProps) {\n  const { isLoading } = useLoading();\n  const user = useUser(players);\n  const canvasWidth = useCardWidth(Math.min(Object.keys(players).length, 6), 16, 150, 500);\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n  const { votes, setVotes, activeItem, activateItem, resetVoting, isVotingComplete } = useVotingMatch(\n    'drawing',\n    true,\n    drawings.length || 2\n  );\n\n  const onGuessForMe = useCallback(() => {\n    const usedDrawings = Object.keys(votes);\n    const usedCards = Object.values(votes);\n    const drawingsKeys = drawings\n      .map((e: ArteRuimDrawing) => getEntryId(['drawing', e.id]))\n      .filter((key: string) => !usedDrawings.includes(key));\n    let cardsKeys = shuffle(\n      cards\n        .map((e: ArteRuimCard, index: number) => getEntryId(['card', e.id, LETTERS[index]]))\n        .filter((key: string) => !usedCards.includes(key))\n    );\n    // For level 5 specifically, if there are less cards than drawings\n    cardsKeys =\n      cardsKeys.length < drawingsKeys.length\n        ? Array(Math.ceil(drawingsKeys.length / cardsKeys.length))\n            .fill(cardsKeys)\n            .flat()\n        : cardsKeys;\n\n    const newVotes = { ...votes };\n    drawingsKeys.forEach((drawingKey: string, index: number) => {\n      if (!newVotes[drawingKey]) {\n        newVotes[drawingKey] = cardsKeys[index];\n      }\n    });\n    setVotes(newVotes);\n  }, [cards, drawings, votes, setVotes]);\n\n  useEffect(() => {\n    if (!canvasSize) {\n      // Round to increments of 50\n      setCanvasSize(Math.floor(canvasWidth / 50) * 50);\n    }\n  }, [canvasSize, canvasWidth]); // eslint-disable-line\n\n  const selectOwnDrawing = useCallback(() => {\n    const playersDrawing = (drawings ?? []).find((drawing: ArteRuimDrawing) => drawing.playerId === user.id);\n    if (playersDrawing && playersDrawing.level !== 5) {\n      const drawingKey = getEntryId(['drawing', playersDrawing.id]);\n      const cardIndex = (cards ?? []).findIndex((card: ArteRuimCard) => card.playerId === user.id);\n      const cardKey = getEntryId(['card', playersDrawing.id, LETTERS[cardIndex]]);\n      const vote = { [drawingKey]: cardKey };\n      return vote;\n    }\n    return {};\n  }, [user, drawings, cards]);\n\n  // Auto-select the players own drawing and word\n  useEffect(() => {\n    const selection = selectOwnDrawing();\n    if (selection) {\n      setVotes((s: any) => ({ ...s, ...selection }));\n    }\n  }, [selectOwnDrawing, setVotes]);\n\n  useMock(() => {\n    onGuessForMe();\n  }, []);\n\n  return (\n    <Step className=\"a-evaluation-step\">\n      <PopoverRule content={<EvaluationRules />} />\n      <CanvasResizer />\n      <Title>\n        <Translate pt=\"Adivinhação\" en=\"Match the Pairs\" />\n      </Title>\n\n      <Space className=\"space-container\" align=\"center\" wrap>\n        <Button\n          type=\"default\"\n          icon={<ThunderboltOutlined />}\n          onClick={() => resetVoting(selectOwnDrawing())}\n          disabled={isLoading}\n        >\n          <Translate pt=\"Limpar seleções\" en=\"Clear selections\" />\n        </Button>\n        <Button\n          type=\"default\"\n          icon={<ThunderboltOutlined />}\n          onClick={onGuessForMe}\n          disabled={isLoading || Object.values(votes).length === drawings.length}\n        >\n          <Translate pt=\"Chutar restantes\" en=\"Guess for me\" />\n        </Button>\n        <Button\n          type=\"primary\"\n          onClick={() => onSubmitVoting({ votes: prepareVotes(votes) })}\n          disabled={isLoading || !isVotingComplete}\n          icon={<CloudUploadOutlined />}\n          loading={isLoading}\n        >\n          <Translate pt=\"Enviar sua avaliação\" en=\"Send evaluation\" />\n        </Button>\n      </Space>\n\n      <EvaluationAllDrawings\n        drawings={drawings ?? []}\n        activeItem={activeItem}\n        onActivateItem={activateItem}\n        votes={votes}\n        canvasSize={canvasSize}\n        players={players}\n      />\n\n      <EvaluationAllCards\n        cards={cards ?? []}\n        activeItem={activeItem}\n        onActivateItem={activateItem}\n        votes={votes}\n      />\n    </Step>\n  );\n}\n","import { useMemo } from 'react';\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\n// Components\nimport { CanvasSVG } from 'components/canvas';\nimport { IconAvatar } from 'components/icons/IconAvatar';\nimport { AnimatedLoaderIcon } from 'components/icons/AnimatedLoaderIcon';\n\ntype EvaluatedDrawingsProps = {\n  votes?: StringDictionary;\n  cards: ArteRuimCard[];\n  drawings: ArteRuimDrawing[];\n};\n\n/**\n * Displays drawings in the waiting room after evaluation\n * @param props\n * @returns\n */\nexport function EvaluatedDrawings({ votes, cards, drawings }: EvaluatedDrawingsProps) {\n  const [canvasSize] = useGlobalState('canvasSize');\n\n  const cardsDict = useMemo(\n    () =>\n      cards.reduce((acc: Record<string, ArteRuimCard>, card) => {\n        acc[card.id] = card;\n        return acc;\n      }, {}),\n    [cards]\n  );\n\n  const drawingsDict = useMemo(\n    () =>\n      drawings.reduce((acc: Record<string, ArteRuimDrawing>, drawing) => {\n        acc[drawing.id] = drawing;\n        return acc;\n      }, {}),\n    [drawings]\n  );\n\n  if (!votes) {\n    return (\n      <div className=\"a-evaluated-drawings\">\n        <IconAvatar icon={<AnimatedLoaderIcon />} />\n      </div>\n    );\n  }\n  const cSize = Math.min(canvasSize * 0.6, 2000);\n\n  return (\n    <ul className=\"a-evaluated-drawings\">\n      {Object.keys(votes)\n        .sort()\n        .map((drawingKey: string) => {\n          const drawing = drawingsDict[drawingKey] as ArteRuimDrawing;\n          const card = cardsDict[votes[drawingKey]] as ArteRuimCard;\n\n          return (\n            <li className=\"a-evaluated-drawings__item\" key={`${drawing.id}-${card.id}-${card.playerId}`}>\n              <CanvasSVG\n                drawing={drawing.drawing}\n                size={cSize}\n                className=\"a-evaluation-all-drawings__drawing\"\n              />\n              <div className=\"a-evaluated-drawings__card\" style={{ maxWidth: `${cSize}px` }}>\n                {card.text}\n              </div>\n            </li>\n          );\n        })}\n    </ul>\n  );\n}\n","// Hooks\nimport { useIsUserReady } from 'hooks/useIsUserReady';\nimport { useUser } from 'hooks/useUser';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitVotingAPIRequest } from './utils/api-requests';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { StepEvaluation } from './StepEvaluation';\nimport { EvaluationRules } from './components/TextBlobs';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { EvaluatedDrawings } from './components/EvaluatedDrawings';\nimport { EvaluateIcon } from 'components/icons/EvaluateIcon';\n\nfunction EvaluationPhase({ players, state, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, goToNextStep, setStep } = useStep(0);\n  const user = useUser(players);\n  const isUserReady = useIsUserReady(players, state);\n  const onSubmitVoting = useOnSubmitVotingAPIRequest(setStep);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.ARTE_RUIM.EVALUATION}>\n      <StepSwitcher\n        step={step}\n        conditions={[!isUserReady, !isUserReady]}\n        players={players}\n        waitingRoomInstruction={translate(\n          'Vamos aguardar enquanto os outros jogadores terminam de avaliar!',\n          'Please wait while other players finish their evaluations!'\n        )}\n        waitingRoomContent={\n          <EvaluatedDrawings cards={state.cards} drawings={state.drawings} votes={user?.votes} />\n        }\n      >\n        {/*Step 0 */}\n        <PhaseAnnouncement\n          icon={<EvaluateIcon />}\n          title={translate('Adivinhação', 'Match the Pairs')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <EvaluationRules />\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepEvaluation\n          drawings={state.drawings}\n          cards={state.cards}\n          players={players}\n          onSubmitVoting={onSubmitVoting}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default EvaluationPhase;\n","// Components\nimport { AvatarEntry } from 'components/avatars';\nimport { Translate } from 'components/language';\n\ntype GalleryWindowCreditsProps = {\n  artistName: string;\n  artistAvatarId: string;\n};\n\nexport function GalleryWindowCredits({ artistName, artistAvatarId }: GalleryWindowCreditsProps) {\n  return (\n    <div className=\"a-gallery__credits\">\n      <div className=\"a-gallery__label\">\n        <Translate pt=\"Artista\" en=\"Artist\" />\n      </div>\n      <span className=\"a-gallery__artist-name\">\n        <AvatarEntry id={artistAvatarId} name={artistName} />\n      </span>\n    </div>\n  );\n}\n","// This icon file is generated automatically.\nvar MessageFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M924.3 338.4a447.57 447.57 0 00-96.1-143.3 443.09 443.09 0 00-143-96.3A443.91 443.91 0 00512 64h-2c-60.5.3-119 12.3-174.1 35.9a444.08 444.08 0 00-141.7 96.5 445 445 0 00-95 142.8A449.89 449.89 0 0065 514.1c.3 69.4 16.9 138.3 47.9 199.9v152c0 25.4 20.6 46 45.9 46h151.8a447.72 447.72 0 00199.5 48h2.1c59.8 0 117.7-11.6 172.3-34.3A443.2 443.2 0 00827 830.5c41.2-40.9 73.6-88.7 96.3-142 23.5-55.2 35.5-113.9 35.8-174.5.2-60.9-11.6-120-34.8-175.6zM312.4 560c-26.4 0-47.9-21.5-47.9-48s21.5-48 47.9-48 47.9 21.5 47.9 48-21.4 48-47.9 48zm199.6 0c-26.4 0-47.9-21.5-47.9-48s21.5-48 47.9-48 47.9 21.5 47.9 48-21.5 48-47.9 48zm199.6 0c-26.4 0-47.9-21.5-47.9-48s21.5-48 47.9-48 47.9 21.5 47.9 48-21.5 48-47.9 48z\" } }] }, \"name\": \"message\", \"theme\": \"filled\" };\nexport default MessageFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport MessageFilledSvg from \"@ant-design/icons-svg/es/asn/MessageFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar MessageFilled = function MessageFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: MessageFilledSvg\n  }));\n};\n\nMessageFilled.displayName = 'MessageFilled';\nexport default /*#__PURE__*/React.forwardRef(MessageFilled);","import { orderBy } from 'lodash';\n// Ant Design Resources\nimport { Avatar as AntAvatar } from 'antd';\nimport { CrownFilled, MessageFilled } from '@ant-design/icons';\n// Utils\nimport { getPlayersFromIds } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\n\ntype GalleryWindowGuessesProps = {\n  playersSay: PlayersSay;\n  players: GamePlayers;\n  cards: ArteRuimCard[];\n  windowCardId: string;\n  artistColor: string;\n};\n\nexport function GalleryWindowGuesses({\n  playersSay,\n  players,\n  cards,\n  windowCardId,\n  artistColor,\n}: GalleryWindowGuessesProps) {\n  const entries = orderBy(\n    Object.entries(playersSay).map(([cardId, playersIds]) => {\n      return {\n        cardId,\n        card: cards.find((i) => i.id === cardId),\n        playersIds,\n        count: playersIds.length,\n        isCorrect: windowCardId === cardId,\n      };\n    }),\n    ['isCorrect', 'count', 'card.text'],\n    ['desc', 'desc', 'asc']\n  );\n\n  return (\n    <div className=\"a-gallery__guesses\">\n      <div className=\"a-gallery__label\">\n        <Translate pt=\"Participantes votaram\" en=\"Players voted\" />\n      </div>\n      {entries.map((entry, index) => {\n        return (\n          <div key={`guess-${entry.cardId}-${index}`} className=\"a-gallery__guess\">\n            <div\n              className=\"a-gallery__speech-bubble\"\n              style={entry.isCorrect ? { backgroundColor: artistColor, color: 'white' } : {}}\n            >\n              {entry.isCorrect ? (\n                <CrownFilled className=\"a-gallery__speech-bubble-icon\" style={{ color: 'white' }} />\n              ) : (\n                <MessageFilled className=\"a-gallery__speech-bubble-icon\" />\n              )}\n              {entry.card?.text}\n            </div>\n            <div className=\"a-gallery__players\">\n              <AntAvatar.Group>\n                {entry.playersIds.map((playerId) => (\n                  <Avatar\n                    id={players[playerId].avatarId}\n                    key={`guess-avatar-${players[playerId].avatarId}`}\n                  />\n                ))}\n              </AntAvatar.Group>\n              <span className=\"a-gallery__players-names\">\n                {getPlayersFromIds(entry.playersIds, players, true).join(', ')}\n              </span>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Avatar as AntAvatar, Typography } from 'antd';\nimport { CrownFilled } from '@ant-design/icons';\n// Utils\nimport { getPlayersFromIds } from 'utils/helpers';\n// Components\nimport { Translate } from 'components/language';\nimport { Avatar } from 'components/avatars';\nimport { StarPoints } from 'components/points';\nimport { GarbageIcon } from 'components/icons/GarbageIcon';\nimport { IconAvatar } from 'components/icons/IconAvatar';\n\ntype GalleryWindowResultProps = {\n  playerArtist: GamePlayer;\n  correctAnswerId: string;\n  correctAnswerText: string;\n  playersPoints?: NumberDictionary;\n  playersSay: PlayersSay;\n  players: GamePlayers;\n};\n\nexport function GalleryWindowResult({\n  playerArtist,\n  correctAnswerId,\n  correctAnswerText,\n  playersPoints,\n  playersSay,\n  players,\n}: GalleryWindowResultProps) {\n  const correctGuesses = Object.values(playersSay?.[correctAnswerId] ?? {});\n\n  return (\n    <div className=\"a-gallery__result\">\n      <div className=\"a-gallery__label\">\n        <Translate pt=\"E o título correto da obra é\" en=\"And the masterpiece title is\" />\n      </div>\n      <div className=\"a-gallery__speech-bubble\">\n        <CrownFilled className=\"a-gallery__speech-bubble-icon\" />\n        {correctAnswerText}\n      </div>\n      {correctGuesses.length ? (\n        <>\n          <div className=\"a-gallery__players\">\n            <AntAvatar.Group>\n              {correctGuesses.map((playerId) => {\n                return <Avatar key={`correct-guess-avatar-${playerId}`} id={players[playerId].avatarId} />;\n              })}\n            </AntAvatar.Group>\n            <StarPoints quantity={2} keyPrefix={`guessers-points-${playerArtist.id}`} />\n            <span className=\"a-gallery__players-names\">\n              {getPlayersFromIds(correctGuesses, players, true).join(', ')}\n            </span>\n          </div>\n          <div className=\"a-gallery__artist-points\">\n            <Avatar id={playerArtist.avatarId} />{' '}\n            <StarPoints\n              quantity={playersPoints?.[playerArtist.id]}\n              keyPrefix={`artist-points-${playerArtist.id}`}\n            />{' '}\n            <span className=\"a-gallery__players-names\">{playerArtist.name}</span>\n          </div>\n        </>\n      ) : (\n        <Typography.Text className=\"a-gallery__no-wins\">\n          <IconAvatar icon={<GarbageIcon />} size=\"large\" shape=\"square\" />\n          <Translate\n            pt=\"Nossa, ninguém acertou. Esse desenho deve ter sido muito ruim.\"\n            en=\"Wow, nobody got it. It must have been a very crappy drawing. Shame...\"\n          />\n        </Typography.Text>\n      )}\n    </div>\n  );\n}\n","// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Utils\nimport { AVATARS } from 'utils/avatars';\nimport { WINDOW_DURATION } from './utils/constants';\n// Components\nimport { CanvasSVG } from 'components/canvas';\nimport { Translate } from 'components/language';\nimport { PopoverRule } from 'components/rules';\nimport { SlideShow } from 'components/slide-show';\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\nimport { GalleryWindowCredits } from './components/GalleryWindowCredits';\nimport { GalleryWindowGuesses } from './components/GalleryWindowGuesses';\nimport { GalleryWindowResult } from './components/GalleryWindowResult';\nimport { ScoringRules } from './components/TextBlobs';\n\ntype StepGalleryProps = {\n  gallery: ArteRuimWindow[];\n  players: GamePlayers;\n  cards: ArteRuimCard[];\n  activeIndex: number;\n  setActiveIndex: GenericFunction;\n  setStep: GenericFunction;\n  isFirstGalleryRunThrough: boolean;\n};\n\nexport function StepGallery({\n  gallery,\n  players,\n  cards,\n  activeIndex,\n  setActiveIndex,\n  setStep,\n  isFirstGalleryRunThrough,\n}: StepGalleryProps) {\n  useTemporarilyHidePlayersBar();\n\n  const canvasWidth = useCardWidth(2, 16, 200, 500);\n\n  const { drawing, artistId, id, text, playersPoints, playersSay } = gallery[activeIndex];\n\n  const playerArtist = players[artistId];\n  const currentColor = AVATARS[playerArtist.avatarId].color;\n\n  return (\n    <Step className=\"a-gallery-phase__windows\">\n      <Title size=\"small\">\n        <Translate pt=\"Galeria de Arte\" en=\"Art Gallery\" />\n      </Title>\n\n      <PopoverRule content={<ScoringRules />} />\n\n      <SlideShow\n        players={players}\n        length={gallery.length}\n        activeIndex={activeIndex}\n        setActiveIndex={setActiveIndex}\n        setStep={setStep}\n        disableControls={isFirstGalleryRunThrough}\n        barColor={currentColor}\n        windowDuration={WINDOW_DURATION}\n        leftClassName=\"a-gallery__canvas\"\n        rightClassName=\"a-gallery__info\"\n      >\n        <CanvasSVG drawing={drawing} size={canvasWidth} className=\"a-gallery__drawing\" />\n\n        <>\n          <GalleryWindowCredits artistName={playerArtist.name} artistAvatarId={playerArtist.avatarId} />\n\n          <GalleryWindowGuesses\n            players={players}\n            playersSay={playersSay}\n            cards={cards}\n            windowCardId={id}\n            artistColor={currentColor}\n          />\n\n          <GalleryWindowResult\n            playerArtist={playerArtist}\n            correctAnswerId={id}\n            correctAnswerText={text}\n            playersPoints={playersPoints}\n            playersSay={playersSay}\n            players={players}\n          />\n        </>\n      </SlideShow>\n    </Step>\n  );\n}\n","export const WINDOW_DURATION = 10;\n","// Ant Design Resources\nimport { Button } from 'antd';\nimport { PictureOutlined } from '@ant-design/icons';\n// Components\nimport { RoundsLeftInstruction } from 'components/text';\nimport { StepRankingWrapper } from 'components/ranking';\nimport { PopoverRule } from 'components/rules';\nimport { Translate } from 'components/language';\nimport { AdminNextPhaseButton } from 'components/admin';\nimport { ScoringRules } from './components/TextBlobs';\n\ntype StepRankingProps = {\n  players: GamePlayers;\n  ranking: GameRanking;\n  isGameOver: boolean;\n  round: GameRound;\n  goToPreviousStep: GenericFunction;\n  setActiveIndex: GenericFunction;\n  isLastRound?: boolean;\n};\n\nexport function StepRanking({\n  players,\n  ranking,\n  isGameOver,\n  round,\n  goToPreviousStep,\n  setActiveIndex,\n  isLastRound = false,\n}: StepRankingProps) {\n  return (\n    <StepRankingWrapper\n      players={players}\n      ranking={ranking}\n      gainedPointsDescriptions={[\n        <Translate pt=\"Votos corretos\" en=\"Correct guesses\" />,\n        <Translate\n          pt=\"Votos corretos em seu desenho por outros jogadores\"\n          en=\"Correct guesses on your drawing by other players\"\n        />,\n      ]}\n    >\n      <PopoverRule content={<ScoringRules />} />\n\n      {!isGameOver && <RoundsLeftInstruction round={round} lastRound={isLastRound} />}\n\n      <Button\n        size=\"large\"\n        onClick={() => {\n          goToPreviousStep();\n          setActiveIndex(0);\n        }}\n        icon={<PictureOutlined />}\n      >\n        <Translate pt=\"Ver Galeria De Novo\" en=\"See Gallery Again\" />\n      </Button>\n\n      <AdminNextPhaseButton round={round} lastRound={isLastRound} />\n    </StepRankingWrapper>\n  );\n}\n","// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useSlideShow } from 'hooks/useSlideShow';\nimport { useStep } from 'hooks/useStep';\n// Resources and Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { GalleryRules } from './components/TextBlobs';\nimport { StepGallery } from './StepGallery';\nimport { StepRanking } from './StepRanking';\nimport { PictureIcon } from 'components/icons/PictureIcon';\n\nfunction PhaseGallery({ players, state, info, meta }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, goToNextStep, goToPreviousStep, setStep } = useStep(0);\n  const { activeIndex, setActiveIndex, isFirstGalleryRunThrough } = useSlideShow(state.gallery.length);\n\n  const isGameOver = meta.options?.shortGame\n    ? state.round.current === 5\n    : Object.values(players).some((player) => player.score > 50);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ARTE_RUIM.GALLERY}\n      className=\"a-gallery-phase\"\n    >\n      <StepSwitcher step={step} players={players}>\n        {/*Step 0 */}\n        <PhaseAnnouncement\n          icon={<PictureIcon />}\n          title={translate('Galeria de Arte', 'Art Gallery')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          unskippable\n        >\n          <GalleryRules />\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepGallery\n          gallery={state.gallery}\n          players={players}\n          cards={state.cards}\n          activeIndex={activeIndex}\n          setActiveIndex={setActiveIndex}\n          setStep={setStep}\n          isFirstGalleryRunThrough={isFirstGalleryRunThrough}\n        />\n\n        {/* Step 2 */}\n        <StepRanking\n          players={players}\n          ranking={state.ranking}\n          isGameOver={isGameOver}\n          round={state.round}\n          goToPreviousStep={goToPreviousStep}\n          setActiveIndex={setActiveIndex}\n          isLastRound={state?.lastRound}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseGallery;\n","import { MedalBrushIcon } from 'components/icons/MedalBrushIcon';\nimport { MedalLightBulbIcon } from 'components/icons/MedalLightBulbIcon';\nimport { MedalPersonIcon } from 'components/icons/MedalPersonIcon';\nimport { MedalQuestionMarkIcon } from 'components/icons/MedalQuestionMarkIcon';\nimport { MedalRobotIcon } from 'components/icons/MedalRobotIcon';\n\nexport const achievementsReference: AchievementReference = {\n  BEST_ARTIST: {\n    Icon: MedalBrushIcon,\n    title: {\n      pt: 'Melhor Artista',\n      en: 'Best Artist',\n    },\n    description: {\n      pt: 'Todos os jogadores acertaram unanimemente seu desenho mais vezes',\n      en: 'Got players to guess your drawing unanimously the most',\n    },\n  },\n  WORST_ARTIST: {\n    Icon: MedalQuestionMarkIcon,\n    title: {\n      pt: 'Artista Mais Não Convencional',\n      en: 'Most Unconventional Artist',\n    },\n    description: {\n      pt: 'Todos os jogadores NÃO acertaram unanimemente seu desenho mais vezes',\n      en: 'Got players to miss your drawing unanimously the most',\n    },\n  },\n  SOLITARY_WINNER: {\n    Icon: MedalPersonIcon,\n    title: {\n      pt: 'Adivinhador Solitário',\n      en: 'Best Solitary Guesser',\n    },\n    description: {\n      pt: 'Foi o único que acertou o desenho mais vezes',\n      en: 'Was the only one to get the drawing the most',\n    },\n  },\n  SOLITARY_LOSER: {\n    Icon: MedalLightBulbIcon,\n    title: {\n      pt: 'Mais Diferentão',\n      en: 'Most Unique Guesser',\n    },\n    description: {\n      pt: 'Foi o único que errou o desenho mais vezes',\n      en: 'Was the only one to get the drawing the most',\n    },\n  },\n  TABLE_VOTES: {\n    Icon: MedalRobotIcon,\n    title: {\n      pt: 'Melhor Votador Pra Mesa',\n      en: 'Best Table Voter',\n    },\n    description: {\n      pt: 'Votou nas cartas extras que não eram de nenhum jogador mais vezes',\n      en: \"Voted for extra cards that didn't belong to any player the most\",\n    },\n  },\n};\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Avatar, Tooltip } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n\nconst GRADES = ['F', 'D', 'D+', 'C-', 'C', 'C+', 'B-', 'B', 'B+', 'A-', 'A', 'A+'];\n\ntype DrawingGradeProps = {\n  value: number;\n};\n\nexport const DrawingGrade = ({ value }: DrawingGradeProps) => {\n  const { translate } = useLanguage();\n  const grade = GRADES[Math.floor(value / 0.084)];\n\n  const baseClass = 'a-drawing-grade';\n\n  return (\n    <Tooltip\n      title={translate(\n        `Nota baseada em quantos acertos o desenho teve: ${value * 100}%`,\n        `Grade based on the number of correct guesses the artwork got: ${value * 100}%`\n      )}\n    >\n      <Avatar className={clsx(baseClass, `${baseClass}--${grade[0]}`)}>{grade}</Avatar>\n    </Tooltip>\n  );\n};\n","// Components\nimport { CanvasSVG } from 'components/canvas';\nimport { Translate } from 'components/language';\nimport { DrawingGrade } from './DrawingGrade';\n\ntype FinalGalleryProps = {\n  drawings: ArteRuimDrawing[];\n  players: GamePlayers;\n};\n\nexport function FinalGallery({ drawings, players }: FinalGalleryProps) {\n  return (\n    <ul className=\"a-game-over__gallery\">\n      {drawings.map((entry: ArteRuimDrawing) => {\n        const successRate = entry.successRate ?? 0;\n\n        return (\n          <li className=\"a-game-over__gallery-item\" key={entry.drawing} style={{ width: '200px' }}>\n            <CanvasSVG drawing={entry.drawing} size={200} className=\"a-game-over__gallery-canvas\" />\n            <span className=\"a-game-over__credits\">\n              \"{entry.text}\" <Translate pt=\"por\" en=\"by\" /> {players[entry.playerId].name}\n            </span>\n            <DrawingGrade value={successRate > 1 ? successRate / 100 : successRate} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","// Utils\nimport { achievementsReference } from './utils/achievements';\n// Components\nimport { GameOverWrapper } from 'components/game-over';\nimport { Achievements } from 'components/general/Achievements';\nimport { TrophyIcon } from 'components/icons/TrophyIcon';\nimport { Translate } from 'components/language';\nimport { FinalGallery } from './components/FinalGallery';\n\nfunction PhaseGameOver({ state, players, info }: PhaseProps) {\n  return (\n    <GameOverWrapper\n      info={info}\n      state={state}\n      announcementIcon={<TrophyIcon />}\n      rateWidgetCustomText={<Translate pt=\"Alguma sugestão de carta?\" en=\"Any card suggestions?\" />}\n    >\n      <Achievements players={players} achievements={state.achievements} reference={achievementsReference} />\n\n      <FinalGallery players={players} drawings={state.drawings} />\n    </GameOverWrapper>\n  );\n}\n\nexport default PhaseGameOver;\n","import { ConfigProvider } from 'antd';\n// Constants\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport PhaseDraw from './PhaseDraw';\nimport PhaseEvaluation from './PhaseEvaluation';\nimport PhaseGallery from './PhaseGallery';\nimport PhaseGameOver from './PhaseGameOver';\n\nConfigProvider.config({\n  theme: {\n    primaryColor: THEME_COLORS.WOOD,\n  },\n});\n\nfunction SessionArteRuim({ gameId }: SessionProps) {\n  function getActiveComponent(phase: string) {\n    switch (phase) {\n      case PHASES.DEFAULT.LOBBY:\n        return PhaseLobby;\n      case PHASES.DEFAULT.RULES:\n        return PhaseRules;\n      case PHASES.DEFAULT.SETUP:\n        return PhaseSetup;\n      case PHASES.ARTE_RUIM.DRAW:\n        return PhaseDraw;\n      case PHASES.ARTE_RUIM.EVALUATION:\n        return PhaseEvaluation;\n      case PHASES.ARTE_RUIM.GALLERY:\n        return PhaseGallery;\n      case PHASES.DEFAULT.GAME_OVER:\n        return PhaseGameOver;\n      default:\n        return PageError;\n    }\n  }\n\n  return (\n    <Session\n      gameId={gameId}\n      gameCollection={GAME_COLLECTION.ARTE_RUIM}\n      getActiveComponent={getActiveComponent}\n    />\n  );\n}\n\nexport default SessionArteRuim;\n","// This icon file is generated automatically.\nvar CloudUploadOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M518.3 459a8 8 0 00-12.6 0l-112 141.7a7.98 7.98 0 006.3 12.9h73.9V856c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V613.7H624c6.7 0 10.4-7.7 6.3-12.9L518.3 459z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M811.4 366.7C765.6 245.9 648.9 160 512.2 160S258.8 245.8 213 366.6C127.3 389.1 64 467.2 64 560c0 110.5 89.5 200 199.9 200H304c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8h-40.1c-33.7 0-65.4-13.4-89-37.7-23.5-24.2-36-56.8-34.9-90.6.9-26.4 9.9-51.2 26.2-72.1 16.7-21.3 40.1-36.8 66.1-43.7l37.9-9.9 13.9-36.6c8.6-22.8 20.6-44.1 35.7-63.4a245.6 245.6 0 0152.4-49.9c41.1-28.9 89.5-44.2 140-44.2s98.9 15.3 140 44.2c19.9 14 37.5 30.8 52.4 49.9 15.1 19.3 27.1 40.7 35.7 63.4l13.8 36.5 37.8 10C846.1 454.5 884 503.8 884 560c0 33.1-12.9 64.3-36.3 87.7a123.07 123.07 0 01-87.6 36.3H720c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h40.1C870.5 760 960 670.5 960 560c0-92.7-63.1-170.7-148.6-193.3z\" } }] }, \"name\": \"cloud-upload\", \"theme\": \"outlined\" };\nexport default CloudUploadOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloudUploadOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloudUploadOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CloudUploadOutlined = function CloudUploadOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CloudUploadOutlinedSvg\n  }));\n};\n\nCloudUploadOutlined.displayName = 'CloudUploadOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloudUploadOutlined);","// This icon file is generated automatically.\nvar WarningOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M464 720a48 48 0 1096 0 48 48 0 10-96 0zm16-304v184c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V416c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8zm475.7 440l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48zm-783.5-27.9L512 239.9l339.8 588.2H172.2z\" } }] }, \"name\": \"warning\", \"theme\": \"outlined\" };\nexport default WarningOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport WarningOutlinedSvg from \"@ant-design/icons-svg/es/asn/WarningOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar WarningOutlined = function WarningOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: WarningOutlinedSvg\n  }));\n};\n\nWarningOutlined.displayName = 'WarningOutlined';\nexport default /*#__PURE__*/React.forwardRef(WarningOutlined);"],"names":["CanvasResizer","useGlobalState","canvasSize","setCanvasSize","type","position","icon","DragOutlined","label","labelText","content","className","value","min","max","step","onChange","pt","en","CanvasSVG","drawing","size","konvaLines","JSON","parse","paths","map","lineArr","path","x","y","length","xmlns","viewBox","overflow","style","width","index","d","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","strokeMiterlimit","DrawingCanvas","lines","setLines","showControls","useState","drawingHistory","setDrawingHistory","isDrawing","useRef","startDrawing","current","stopDrawing","startLine","e","pos","target","getStage","getPointerPosition","Math","round","finishLine","point","lastLineEntry","concat","splice","handleMouseDown","handleMouseMove","lastLine","handleMouseUp","handleOffsetMouseUp","handleOffsetMouseDown","strokeWidthBySize","small","medium","large","direction","align","height","onMouseDown","onMousemove","onMouseup","onTouchStart","onTouchMove","onTouchEnd","onMouseLeave","window","document","addEventListener","onMouseEnter","removeEventListener","clsx","id","line","i","points","tension","lineCap","globalCompositeOperation","onClick","linesCopy","drawingHistoryCopy","pop","push","disabled","UndoOutlined","lastUndoLine","DeleteOutlined","Achievements","players","achievements","reference","unknownText","getAnimationClass","level","achievement","Icon","MedalStarIcon","achievementObj","player","playerId","title","avatarId","name","Boolean","description","shape","MedalPersonIcon","props","cx","cy","r","PanicIcon","MetricHighlight","children","parseTimeRanges","ranges","result","start","end","tag","elOrProps","element","React","_a","useSetState","buffered","time","duration","paused","muted","volume","playing","state","setState","ref","wrapEvent","userEvent","proxyEvent","event","onPlay","onPlaying","onWaiting","onPause","onVolumeChange","el","onDurationChange","onTimeUpdate","currentTime","onProgress","__assign","controls","lockPlay","play","promise","resetLock","then","pause","seek","undefined","mute","unmute","useEffect","autoPlay","src","arteRuimTimer","require","StepDraw","secretCard","onSubmitDrawing","translate","useLanguage","isDebugEnabled","useDevFeatures","isTimesUp","setTimesUp","useAudio","audio","seconds","useCountdown","autoStart","onExpire","stringify","cardId","header","footer","Array","join","color","text","background","padding","info","useStep","goToNextStep","setStep","user","useUser","isUserReady","useIsUserReady","setSecretCard","currentCard","request","useAPICall","apiFunction","ARTE_RUIM_API","actionName","onBeforeCall","onError","successMessage","errorMessage","payload","action","useOnSubmitDrawingAPIRequest","phase","allowedPhase","PHASES","conditions","waitingRoomInstruction","onPressButton","buttonText","contained","PaintingIcon","onClose","currentRound","withoutTimer","ThunderboltOutlined","AntdIcon","_objectSpread","ThunderboltOutlinedSvg","displayName","prepareVotes","votes","Object","entries","reduce","acc","drawingEntryId","cardEntryId","split","SEPARATOR","drawingId","EvaluationAllDrawings","drawings","activeItem","onActivateItem","liButtonBaseClass","drawingEntry","canvasEntryId","getEntryId","isActive","vote","charAt","ArteRuimCard","getColorFromLetter","WarningOutlined","EvaluationAllCards","cards","cardEntry","letter","LETTERS","isUsed","values","includes","role","PointsHighlight","StarIcon","EvaluationRules","GalleryRules","ScoringRules","StepEvaluation","onSubmitVoting","isLoading","useLoading","canvasWidth","useCardWidth","keys","useVotingMatch","setVotes","activateItem","resetVoting","isVotingComplete","onGuessForMe","useCallback","usedDrawings","usedCards","drawingsKeys","filter","key","cardsKeys","shuffle","ceil","flat","newVotes","forEach","drawingKey","floor","selectOwnDrawing","playersDrawing","find","cardIndex","findIndex","card","cardKey","selection","s","useMock","wrap","CloudUploadOutlined","loading","EvaluatedDrawings","cardsDict","useMemo","drawingsDict","IconAvatar","AnimatedLoaderIcon","cSize","sort","maxWidth","onSuccess","useOnSubmitVotingAPIRequest","waitingRoomContent","EvaluateIcon","GalleryWindowCredits","artistName","artistAvatarId","MessageFilled","MessageFilledSvg","GalleryWindowGuesses","playersSay","windowCardId","artistColor","orderBy","playersIds","count","isCorrect","entry","backgroundColor","CrownFilled","getPlayersFromIds","GalleryWindowResult","playerArtist","correctAnswerId","correctAnswerText","playersPoints","correctGuesses","quantity","keyPrefix","GarbageIcon","StepGallery","gallery","activeIndex","setActiveIndex","isFirstGalleryRunThrough","useTemporarilyHidePlayersBar","artistId","currentColor","AVATARS","disableControls","barColor","windowDuration","leftClassName","rightClassName","StepRanking","ranking","isGameOver","goToPreviousStep","isLastRound","gainedPointsDescriptions","lastRound","PictureOutlined","meta","useSlideShow","options","shortGame","some","score","PictureIcon","unskippable","achievementsReference","BEST_ARTIST","MedalBrushIcon","WORST_ARTIST","MedalQuestionMarkIcon","SOLITARY_WINNER","SOLITARY_LOSER","MedalLightBulbIcon","TABLE_VOTES","MedalRobotIcon","GRADES","DrawingGrade","grade","baseClass","FinalGallery","successRate","announcementIcon","TrophyIcon","rateWidgetCustomText","ConfigProvider","theme","primaryColor","THEME_COLORS","gameId","gameCollection","GAME_COLLECTION","getActiveComponent","PhaseLobby","PhaseRules","PhaseSetup","PhaseDraw","PhaseEvaluation","PhaseGallery","PhaseGameOver","PageError","CloudUploadOutlinedSvg","WarningOutlinedSvg"],"sourceRoot":""}