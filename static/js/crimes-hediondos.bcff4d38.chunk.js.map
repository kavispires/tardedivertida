{"version":3,"file":"static/js/crimes-hediondos.bcff4d38.chunk.js","mappings":"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","sources":["components/ranking/RankingBoard.tsx","components/ranking/StepRankingWrapper.tsx","games/crimes-hediondos/utils/mock.ts","games/crimes-hediondos/components/RulesBlobs.tsx","games/crimes-hediondos/components/ItemCard.tsx","games/crimes-hediondos/components/ContinueButton.tsx","games/crimes-hediondos/StepItemsSelection.tsx","games/crimes-hediondos/components/SceneTile.tsx","../node_modules/@ant-design/icons-svg/es/asn/PlusSquareFilled.js","../node_modules/@ant-design/icons/es/icons/PlusSquareFilled.js","games/crimes-hediondos/components/SelectedItems.tsx","games/crimes-hediondos/components/ResetButton.tsx","games/crimes-hediondos/StepCauseOfDeathSelection.tsx","games/crimes-hediondos/StepLocationSelection.tsx","games/crimes-hediondos/StepReviewCrime.tsx","games/crimes-hediondos/StepReasonForEvidence.tsx","games/crimes-hediondos/PhaseCrimeSelection.tsx","games/crimes-hediondos/utils/api-requests.ts","../node_modules/@ant-design/icons-svg/es/asn/ClockCircleFilled.js","../node_modules/@ant-design/icons/es/icons/ClockCircleFilled.js","../node_modules/@ant-design/icons-svg/es/asn/SafetyOutlined.js","../node_modules/@ant-design/icons/es/icons/SafetyOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/GiftOutlined.js","../node_modules/@ant-design/icons/es/icons/GiftOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/ExceptionOutlined.js","../node_modules/@ant-design/icons/es/icons/ExceptionOutlined.js","games/crimes-hediondos/components/ItemCardEmpty.tsx","../node_modules/@ant-design/icons-svg/es/asn/WarningFilled.js","../node_modules/@ant-design/icons/es/icons/WarningFilled.js","games/crimes-hediondos/components/CrimeGuessStatus.tsx","games/crimes-hediondos/components/Crime.tsx","games/crimes-hediondos/components/GroupedItemsBoard.tsx","games/crimes-hediondos/StepNewScene.tsx","games/crimes-hediondos/PhaseSceneMarking.tsx","games/crimes-hediondos/utils/helpers.tsx","games/crimes-hediondos/components/PlayersCards.tsx","games/crimes-hediondos/components/SelectableGroupedItemsBoard.tsx","games/crimes-hediondos/StepGuessing.tsx","games/crimes-hediondos/PhaseGuessing.tsx","games/crimes-hediondos/components/ResultsTable.tsx","games/crimes-hediondos/StepReveal.tsx","games/crimes-hediondos/StepRanking.tsx","games/crimes-hediondos/PhaseReveal.tsx","games/crimes-hediondos/PhaseGameOver.tsx","games/crimes-hediondos/SessionCrimesHediondos.tsx","icons/CrimeSceneIcon.tsx","icons/LoupeIcon.tsx","../node_modules/@ant-design/icons-svg/es/asn/CloudUploadOutlined.js","../node_modules/@ant-design/icons/es/icons/CloudUploadOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/CrownFilled.js","../node_modules/@ant-design/icons/es/icons/CrownFilled.js","../node_modules/@ant-design/icons-svg/es/asn/EnvironmentOutlined.js","../node_modules/@ant-design/icons/es/icons/EnvironmentOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/LockFilled.js","../node_modules/@ant-design/icons/es/icons/LockFilled.js","../node_modules/@ant-design/icons-svg/es/asn/QuestionCircleFilled.js","../node_modules/@ant-design/icons/es/icons/QuestionCircleFilled.js","../node_modules/@ant-design/icons-svg/es/asn/TrophyOutlined.js","../node_modules/@ant-design/icons/es/icons/TrophyOutlined.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toArray.js"],"sourcesContent":["import clsx from 'clsx';\nimport { ReactNode, useEffect, useMemo, useState } from 'react';\nimport { orderBy } from 'lodash';\nimport { useEffectOnce } from 'react-use';\n// Ant Design Resources\nimport { Tooltip } from 'antd';\nimport { CrownFilled } from '@ant-design/icons';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useDimensions } from 'hooks/useDimensions';\n// Components\nimport { Translate } from 'components/language';\nimport { Avatar } from 'components/avatars';\n\ntype GainedPointProps = {\n  gainedPoint: number;\n  order: number;\n  description?: any;\n};\n\nfunction GainedPoint({ gainedPoint, order, description }: GainedPointProps): JSX.Element {\n  const isPositive = gainedPoint > 0;\n  const isNegative = gainedPoint < 0;\n  return (\n    <li\n      className={clsx(\n        'ranking-board__gained-point',\n        isPositive && 'ranking-board__gained-point--plus',\n        isNegative && 'ranking-board__gained-point--minus',\n        `ranking-board__gained-point--${order}`\n      )}\n    >\n      <Tooltip\n        title={description ?? <Translate pt=\"Pontos ganhos\" en=\"Gained Points\" />}\n        color={isPositive ? 'gold' : isNegative ? 'red' : 'gray'}\n      >\n        {isPositive ? '+' : ''}\n        {gainedPoint}\n      </Tooltip>\n    </li>\n  );\n}\n\ntype GainedPointsProps = {\n  gainedPoints: number[] | number;\n  playerId: PlayerId;\n  gainedPointsDescriptions?: any[];\n};\n\nfunction GainedPoints({\n  gainedPoints,\n  playerId,\n  gainedPointsDescriptions = [],\n}: GainedPointsProps): JSX.Element {\n  const points = Array.isArray(gainedPoints) ? gainedPoints : [gainedPoints];\n  return (\n    <ul className=\"ranking-board__cell-gained-points\">\n      {points.map((gainedPoint, index) => (\n        <GainedPoint\n          key={`gained-point-${playerId}-${index}`}\n          gainedPoint={gainedPoint}\n          order={index}\n          description={gainedPointsDescriptions[index]}\n        />\n      ))}\n    </ul>\n  );\n}\n\ntype RankingBoardProps = {\n  players: GamePlayers;\n  ranking: GameRanking;\n  gainedPointsDescriptions?: ReactNode[];\n  hideGainedPoints?: boolean;\n  delay?: number;\n};\n\nexport function RankingBoard({\n  players,\n  ranking,\n  gainedPointsDescriptions,\n  hideGainedPoints = false,\n  delay = 0,\n}: RankingBoardProps): JSX.Element {\n  const [displayStep, setDisplayStep] = useState(0);\n  const [sortedRanking, setSortedRanking] = useState<GameRanking>([]);\n  const [reRank, setReRank] = useState(0);\n  const [, height] = useDimensions('ranking-row-0');\n\n  const maxPoints = useMemo(() => Math.max(...ranking.map((scores) => scores.newScore)), [ranking]);\n\n  const { seconds } = useCountdown({\n    duration: 5 + delay,\n    autoStart: true,\n    onExpire: () => {\n      setReRank(1);\n      setDisplayStep(3);\n    },\n  });\n\n  // Rank by previousScore\n  useEffectOnce(() => {\n    const positions: PlainObject = {};\n    let lastPosition = 0;\n    let lastPoints = 0;\n\n    const rankByFinalScoreDict = orderBy(ranking, ['newScore', 'name'], ['desc', 'asc']).reduce(\n      (acc: PlainObject, entry, index) => {\n        acc[entry.playerId] = index;\n        // Calculate position\n        if (lastPoints === 0 || entry.newScore < lastPoints) {\n          lastPoints = entry.newScore;\n          lastPosition += 1;\n        }\n        positions[entry.playerId] = [0, lastPosition];\n        return acc;\n      },\n      {}\n    );\n\n    const rankByPreviousScore = orderBy(ranking, ['previousScore', 'name'], ['desc', 'asc']);\n\n    // Reset position trackers\n    lastPosition = 0;\n    lastPoints = 0;\n\n    const tempSortedRanking: GameRanking = rankByPreviousScore.map((entry, index) => {\n      const newEntry = { ...entry };\n\n      newEntry.order = [index, rankByFinalScoreDict[newEntry.playerId]];\n      newEntry.position = positions[newEntry.playerId];\n      // Calculate position\n      if (lastPoints === 0 || entry.previousScore < lastPoints) {\n        lastPoints = entry.previousScore;\n        lastPosition += 1;\n      }\n      newEntry.position[0] = lastPosition;\n      return newEntry;\n    });\n\n    setSortedRanking(tempSortedRanking);\n  });\n\n  // Show gained points\n  useEffect(() => {\n    if (seconds === 4 + delay) {\n      setDisplayStep(1);\n    } else if (seconds === 2 + delay) {\n      setDisplayStep(2);\n    }\n  }, [seconds, delay]);\n\n  return (\n    <div\n      className=\"ranking-board\"\n      style={{ height: `${(Math.max(60, height) + 8) * sortedRanking.length}px` }}\n    >\n      {sortedRanking.map((entry, index) => {\n        const { playerId, newScore, previousScore, gainedPoints, order, position } = entry;\n        const hPosition = (Math.max(60, height) + 8) * (order[reRank] ?? 0);\n\n        return (\n          <div\n            className={`ranking-board__row ranking-board__row--${index}`}\n            key={`ranking-${playerId}`}\n            id={`ranking-row-${index}`}\n            style={{ top: `${hPosition}px` }}\n          >\n            <div className=\"ranking-board__cell-crown\">\n              {newScore > 0 && maxPoints === newScore && displayStep >= 3 && (\n                <CrownFilled className=\"ranking-board__crown-icon\" />\n              )}\n            </div>\n            <div className=\"ranking-board__cell-position\">#{position[reRank] ?? ''}</div>\n            <div className=\"ranking-board__cell-player\">\n              <div className=\"ranking-board__avatar\">\n                <Avatar id={players[playerId].avatarId} />\n              </div>\n              <div className=\"ranking-board__name\">{players[playerId].name}</div>\n            </div>\n            <Tooltip title={<Translate pt=\"Pontos Anteriores\" en=\"Previous Points\" />} color=\"gray\">\n              <div className=\"ranking-board__cell-points\">{previousScore}</div>\n            </Tooltip>\n            {!hideGainedPoints && displayStep >= 1 && gainedPoints !== undefined && (\n              <GainedPoints\n                gainedPoints={gainedPoints}\n                playerId={playerId}\n                gainedPointsDescriptions={gainedPointsDescriptions}\n              />\n            )}\n            {displayStep >= 2 && (\n              <Tooltip title=\"Total\" color=\"gold\">\n                <span className=\"ranking-board__cell-points-total\">{newScore}</span>\n              </Tooltip>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { CaretUpOutlined } from '@ant-design/icons';\n// Hooks\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Components\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { RankingBoard } from './RankingBoard';\n\ntype StepRankingWrapperProps = {\n  /**\n   * The players\n   */\n  players: GamePlayers;\n  /**\n   * The ranking array\n   */\n  ranking: GameRanking;\n  /**\n   * Gained points descriptions for the popover\n   */\n  gainedPointsDescriptions: ReactNode[];\n  /**\n   * Additional content\n   */\n  children?: ReactNode;\n  /**\n   * Replacement title for Ranking\n   */\n  title?: ReactNode;\n  /**\n   * Optional node that goes under the title\n   */\n  subtitle?: ReactNode;\n};\n\nexport function StepRankingWrapper({\n  players,\n  ranking,\n  gainedPointsDescriptions,\n  children,\n  title,\n  subtitle,\n}: StepRankingWrapperProps) {\n  useTemporarilyHidePlayersBar();\n\n  return (\n    <Step>\n      <Title>{title ?? 'Ranking'}</Title>\n\n      {subtitle}\n\n      <RankingBoard players={players} ranking={ranking} gainedPointsDescriptions={gainedPointsDescriptions} />\n      <Instruction className=\"step-ranking-wrapper-gained-points-instruction\">\n        <CaretUpOutlined />\n        <Translate\n          pt=\"Passe o mouse em cada um dos pontos para saber como eles foram distribuídos\"\n          en=\"Hover over the scores to learn how they were granted\"\n        />\n        <CaretUpOutlined />\n      </Instruction>\n\n      {children}\n    </Step>\n  );\n}\n","import { SEPARATOR } from 'utils/constants';\nimport { getLastItem, getRandomItem, shuffle } from 'utils/helpers';\n\nexport const mockCrime = (itemsGroup: string[], locationTiles: SceneTile[]): SubmitCrimePayload => {\n  const shuffledItems = shuffle(itemsGroup);\n  const weapon = shuffledItems.find((e) => e?.includes('wp'));\n  const evidence = shuffledItems.find((e) => e?.includes('ev'));\n  const options = [0, 1, 2, 3, 4, 5];\n\n  return {\n    weaponId: weapon,\n    evidenceId: evidence,\n    causeOfDeath: getRandomItem(options),\n    reasonForEvidence: getRandomItem(options),\n    locationTile: getRandomItem(locationTiles).id,\n    locationIndex: getRandomItem(options),\n  };\n};\n\nexport const mockGuesses = (groupedItems: GroupedItems, players: GamePlayers, user: GamePlayer) => {\n  // TODO: intelligent guessing based on history\n\n  return Object.values(players).reduce((acc: any, player) => {\n    if (player.id !== user.id) {\n      const historyForThisTarget = user.history?.[player.id] ?? [];\n\n      const lastGuess: GuessHistoryEntry = getLastItem(historyForThisTarget);\n\n      if (lastGuess) {\n        // If correct or locked\n        if (lastGuess.status === 'CORRECT' || lastGuess.status === 'LOCKED') {\n          acc[player.id] = {\n            weaponId: lastGuess.weaponId,\n            evidenceId: lastGuess.evidenceId,\n          };\n          return acc;\n        }\n\n        // If half or wrong\n        if (lastGuess.status === 'HALF' || lastGuess.status === 'WRONG') {\n          const group = groupedItems[lastGuess.groupIndex];\n          const weapons: string[] = group.filter((e) => e?.includes('wp'));\n          const evidences: string[] = group.filter((e) => e?.includes('ev'));\n\n          const previousPicksDict = historyForThisTarget.reduce(\n            (acc: BooleanDictionary, entry: GuessHistoryEntry) => {\n              acc[`${entry.weaponId}${SEPARATOR}${entry.evidenceId}`] = true;\n              return acc;\n            },\n            {}\n          );\n          let pair = `${getRandomItem(weapons)}${SEPARATOR}${getRandomItem(evidences)}`;\n\n          while (previousPicksDict[pair]) {\n            pair = `${getRandomItem(weapons)}${SEPARATOR}${getRandomItem(evidences)}`;\n          }\n\n          const [weaponId, evidenceId] = pair.split(SEPARATOR);\n\n          acc[player.id] = {\n            weaponId,\n            evidenceId,\n          };\n          return acc;\n        }\n\n        // If wrong group\n        const previouslyWrongGroups = historyForThisTarget.reduce((t: number[], guess: GuessHistoryEntry) => {\n          if (guess.status === 'WRONG_GROUP') {\n            t.push(guess.groupIndex);\n          }\n          return t;\n        }, []);\n        const availableGroups = [0, 1, 2, 3]\n          .filter((i) => !previouslyWrongGroups.includes(i))\n          .map((i) => groupedItems[i]);\n        const randomGroup = getRandomItem(availableGroups);\n\n        const weapons: string[] = randomGroup.filter((e) => e?.includes('wp'));\n        const evidences: string[] = randomGroup.filter((e) => e?.includes('ev'));\n        acc[player.id] = {\n          weaponId: getRandomItem(weapons),\n          evidenceId: getRandomItem(evidences),\n        };\n        return acc;\n      }\n\n      // If no history exists\n      const randomGroup = getRandomItem(Object.values(groupedItems));\n      const weapons: string[] = randomGroup.filter((e) => e?.includes('wp'));\n      const evidences: string[] = randomGroup.filter((e) => e?.includes('ev'));\n      acc[player.id] = {\n        weaponId: getRandomItem(weapons),\n        evidenceId: getRandomItem(evidences),\n      };\n    }\n    return acc;\n  }, {});\n};\n\nexport const mockSceneMark = () => {\n  return getRandomItem([0, 1, 2, 3, 4, 5]);\n};\n","// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n\nexport function WelcomeMessage(): JSX.Element {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Bem-vindo à Convenção Anual de Serial Killers!\n            <br />\n            Você e os outros serial killers decidiram fazer um jogo de adivinhação.\n            <br />\n            O objetivo é todos darem dicas sobre as circunstâncias que seus últimos crimes aconteceram para\n            ajudar os outros jogadores a descobrirem qual arma e qual objeto foram usados durante o crime.\n            <br />\n            Prontos para aterrorizar?\n          </>\n        }\n        en={\n          <>\n            Welcome to the Annual Serial Killers Con!\n            <br />\n            You and the other serial killers decided to make it a game out of it.\n            <br />\n            The goal is to give clues about the circunstancies your latest crime occurred so the other players\n            can guess what weapon and evidence were used during the crime.\n            <br />\n            Ready to terrorize?\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function GuessMessage(): JSX.Element {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Baseado nas informações dadas pelos jogadores, tente adivinhar qual arma e objeto cada jogador\n            usou em seu crime.\n            <br />\n            Você ganha pontos se adivinhar uma das cartas ou ambas as cartas, e você também ganha 1 ponto para\n            cada uma de suas cartas que os outros adivinharem, mas essa pontuação é secreta.\n          </>\n        }\n        en={\n          <>\n            Based on the information given by other players, try to guess the weapon and object used on their\n            crimes.\n            <br />\n            You get points for getting one or both cards correctly, and you get 1 point when other players get\n            each of your cards correctly, but these points are kept secret.\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function ScoringMessage({ round }: { round: GameRound }): JSX.Element {\n  const points = round.total - round.current + 1;\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Você ganha 1 ponto para cada arma ou objeto que você acertar.\n            <br />\n            Se você acertar o par de um jogador, você ganha {points} pontos.\n            <br />\n            Para todos os seus acertos, seus respectivos autores ganham 1 ponto.\n            <br />\n            Ganha o jogo o primeiro jogador que acertar tudo.\n          </>\n        }\n        en={\n          <>\n            You get 1 point for each weapon or evidence you get correctly.\n            <br />\n            If you get the pair for a player, you get {points} points instead.\n            <br />\n            All of your correct guesses grant 1 extra point to the authors.\n            <br />\n            Wins the game the player who get all correctly first.\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function GenericMessage(): JSX.Element {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Escrever msg aqui.\n            <br />\n            Prontos para aterrorizar?\n          </>\n        }\n        en={\n          <>\n            Message comes here.\n            <br />\n            Ready to terrorize?\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Popover, Tag } from 'antd';\n// Hooks\nimport { useDevFeatures } from 'hooks/useDevFeatures';\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { ImageCard } from 'components/cards';\n\ntype ItemCardProps = {\n  item: HCard;\n  cardWidth: number;\n  preview?: boolean;\n  isSelected?: boolean;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  activeColor?: string;\n};\n\nexport function ItemCard({\n  item,\n  cardWidth,\n  activeColor,\n  preview = true,\n  isSelected = false,\n  className = '',\n}: ItemCardProps) {\n  const { language } = useLanguage();\n  const { isDebugEnabled } = useDevFeatures();\n  return (\n    <div\n      className={clsx('h-item-card', isSelected && 'h-item-card--selected', className)}\n      style={activeColor && isSelected ? { borderColor: 'black', backgroundColor: activeColor } : {}}\n    >\n      <Popover content={item.name[language].toUpperCase()}>\n        <Tag\n          className=\"h-item-card__name\"\n          color={item.type === 'weapon' ? 'geekblue' : 'volcano'}\n          style={{ maxWidth: `${cardWidth + 16}px` }}\n        >\n          <span>{isDebugEnabled ? item.id : item.name[language]}</span>\n        </Tag>\n      </Popover>\n      <ImageCard imageId={item.id} cardWidth={cardWidth} className=\"h-item-card__image\" preview={preview} />\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Button, ButtonProps } from 'antd';\n// State\nimport { Translate } from 'components/language';\n\ninterface ContinueButtonProps extends ButtonProps {\n  onClick: GenericFunction;\n  disabled?: boolean;\n  children?: string;\n}\n\nexport function ContinueButton({ onClick, children, disabled = false, ...props }: ContinueButtonProps) {\n  return (\n    <Button type=\"primary\" size=\"large\" disabled={disabled} onClick={onClick} {...props}>\n      {children ?? (\n        <>\n          »» <Translate pt=\"Próximo\" en=\"Next\" /> »»\n        </>\n      )}\n    </Button>\n  );\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Utils\nimport { shuffle } from 'utils/helpers';\n// Components\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { TransparentButton } from 'components/buttons';\nimport { ItemCard } from './components/ItemCard';\nimport { ContinueButton } from './components/ContinueButton';\n\ntype StepItemsSelectionProps = {\n  user: GamePlayer;\n  groupedItems: GroupedItems;\n  items: ItemsDict;\n  selections: PlainObject;\n  updateSelections: GenericFunction;\n} & AnnouncementProps;\n\nexport function StepItemsSelection({\n  announcement,\n  user,\n  items,\n  groupedItems,\n  selections,\n  updateSelections,\n}: StepItemsSelectionProps) {\n  const [weaponId, setWeaponId] = useState<string>(selections.weaponId);\n  const [evidenceId, setEvidenceId] = useState<string>(selections.evidenceId);\n  const cardWidth = useCardWidth(12, 8, 50, 200);\n\n  const userItems = groupedItems[user.itemGroupIndex];\n\n  const onSelectItem = (item: HCard) => {\n    if (item.type === 'weapon') {\n      setWeaponId(item.id);\n    } else {\n      setEvidenceId(item.id);\n    }\n  };\n\n  const onRandomSelect = () => {\n    let randomWeaponId = '';\n    let randomEvidenceId = '';\n    shuffle(userItems).forEach((itemId) => {\n      if (items[itemId].type === 'weapon') {\n        randomWeaponId = itemId;\n      } else {\n        randomEvidenceId = itemId;\n      }\n    });\n    setWeaponId(randomWeaponId);\n    setEvidenceId(randomEvidenceId);\n  };\n\n  return (\n    <Step announcement={announcement}>\n      <Title>\n        <Translate pt=\"Qual foi seu último crime?\" en=\"How was your last crime?\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Selecione uma carta azul e uma carta vermelha.\n              <br />\n              Elas representam a arma usada em seu último crime e um objeto da cena do crime.\n              <br />O jogo contém 16 armas e 16 objetos, mas para essa parte, você vê apenas 4 opções de cada.\n            </>\n          }\n          en={\n            <>\n              Select a blue card and a red card.\n              <br />\n              They represent the weapon used in your latest crime and an object that was in the crime scene.\n              <br />\n              The game has 16 weapons and 16 objects, but for this phase, you only see 4 options of each.\n            </>\n          }\n        />\n      </Instruction>\n\n      <ul className=\"h-items-selection\">\n        {userItems.map((itemId) => (\n          <li key={itemId} className=\"h-items-selection__item\">\n            <TransparentButton onClick={() => onSelectItem(items[itemId])}>\n              <ItemCard\n                item={items[itemId]}\n                cardWidth={cardWidth}\n                preview={false}\n                isSelected={[weaponId, evidenceId].includes(itemId)}\n              />\n            </TransparentButton>\n          </li>\n        ))}\n      </ul>\n\n      <Space className=\"space-container\" align=\"center\">\n        <Button onClick={onRandomSelect} size=\"large\">\n          <Translate pt=\"Selecionar aleatoriamente\" en=\"Random picks\" />\n        </Button>\n\n        <ContinueButton\n          disabled={!weaponId || !evidenceId}\n          onClick={() => updateSelections({ weaponId, evidenceId })}\n        />\n      </Space>\n    </Step>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Popover } from 'antd';\nimport { CheckCircleFilled } from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n\ntype SceneTileProps = {\n  tile: SceneTile;\n  index?: number;\n  onSelectValue?: GenericFunction;\n};\n\nexport function SceneTile({ tile, index, onSelectValue }: SceneTileProps) {\n  const { language } = useLanguage();\n  return (\n    <div className={clsx('h-scene-tile', `h-scene-tile--${tile.type}`)}>\n      <Popover content={tile.description[language]}>\n        <h4 className=\"h-scene-tile__title\">{tile.title[language]}</h4>\n      </Popover>\n      <ul className=\"h-scene-tile__options\">\n        {tile.values.map((entry, i) => {\n          const isActive = i === index;\n          return (\n            <li key={`${tile.id}-value-${i}`}>\n              <Button\n                className={clsx('h-scene-tile__button', `h-scene-tile__button--${tile.type}`)}\n                icon={isActive ? <CheckCircleFilled className=\"h-scene-tile__icon\" /> : undefined}\n                onClick={onSelectValue ? () => onSelectValue({ tileId: tile.id, value: i }) : () => {}}\n              >\n                {entry[language]}\n              </Button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","// This icon file is generated automatically.\nvar PlusSquareFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM704 536c0 4.4-3.6 8-8 8H544v152c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V544H328c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h152V328c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v152h152c4.4 0 8 3.6 8 8v48z\" } }] }, \"name\": \"plus-square\", \"theme\": \"filled\" };\nexport default PlusSquareFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusSquareFilledSvg from \"@ant-design/icons-svg/es/asn/PlusSquareFilled\";\nimport AntdIcon from '../components/AntdIcon';\nvar PlusSquareFilled = function PlusSquareFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusSquareFilledSvg\n  }));\n};\nPlusSquareFilled.displayName = 'PlusSquareFilled';\nexport default /*#__PURE__*/React.forwardRef(PlusSquareFilled);","import clsx from 'clsx';\n// Ant Design Resources\nimport { PlusSquareFilled } from '@ant-design/icons';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { ItemCard } from './ItemCard';\n\ntype SelectedItemsProps = {\n  items: ItemsDict;\n  weaponId: string;\n  evidenceId: string;\n  fadeWeapon?: boolean;\n  fadeEvidence?: boolean;\n};\n\nexport function SelectedItems({\n  items,\n  weaponId,\n  evidenceId,\n  fadeWeapon = false,\n  fadeEvidence = false,\n}: SelectedItemsProps) {\n  const cardWidth = useCardWidth(12, 8, 50, 200);\n\n  return (\n    <ul className=\"h-items-crime-selection\">\n      <li>\n        <ItemCard\n          item={items[weaponId]}\n          cardWidth={cardWidth}\n          preview\n          className={clsx(fadeWeapon && 'h-items-crime-selection__faded')}\n        />\n      </li>\n      <li>\n        <PlusSquareFilled style={{ color: 'white' }} />\n      </li>\n      <li>\n        <ItemCard\n          item={items[evidenceId]}\n          cardWidth={cardWidth}\n          preview\n          className={clsx(fadeEvidence && 'h-items-crime-selection__faded')}\n        />\n      </li>\n    </ul>\n  );\n}\n","// Ant Design Resources\nimport { Button } from 'antd';\n// Components\nimport { Translate } from 'components/language';\n\ntype ResetButtonProps = {\n  goToStep: GenericFunction;\n};\n\nexport function ResetButton({ goToStep }: ResetButtonProps) {\n  return (\n    <Button onClick={() => goToStep(1)} size=\"large\">\n      <Translate pt=\"Reiniciar\" en=\"Restart\" />\n    </Button>\n  );\n}\n","import { useState } from 'react';\nimport { Space } from 'antd';\n// Components\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { SceneTile } from './components/SceneTile';\nimport { SelectedItems } from './components/SelectedItems';\nimport { ContinueButton } from './components/ContinueButton';\nimport { ResetButton } from './components/ResetButton';\n\ntype StepCauseOfDeathSelectionProps = {\n  items: ItemsDict;\n  selections: PlainObject;\n  updateSelections: GenericFunction;\n  causeOfDeathTile: SceneTile;\n  goToStep: GenericFunction;\n} & AnnouncementProps;\n\nexport function StepCauseOfDeathSelection({\n  announcement,\n  items,\n  selections,\n  updateSelections,\n  causeOfDeathTile,\n  goToStep,\n}: StepCauseOfDeathSelectionProps) {\n  const [causeOfDeathIndex, setCauseOfDeathIndex] = useState<number>();\n\n  const onSelectItem = (payload: SceneTilePayload) => {\n    setCauseOfDeathIndex(payload.value);\n  };\n\n  return (\n    <Step announcement={announcement}>\n      <Title>\n        <Translate pt=\"Qual foi seu último crime?\" en=\"How was your last crime?\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>Baseado somente em sua arma do crime (carta azul), selecione a causa da morte de sua vítima.</>\n          }\n          en={<>Based solely on the weapon (blue card) you've chosen, select your victim's cause of death.</>}\n        />\n      </Instruction>\n\n      <Space className=\"space-container\" align=\"center\">\n        <SelectedItems\n          items={items}\n          weaponId={selections.weaponId}\n          evidenceId={selections.evidenceId}\n          fadeEvidence\n        />\n\n        <SceneTile tile={causeOfDeathTile} onSelectValue={onSelectItem} index={causeOfDeathIndex} />\n      </Space>\n\n      <Space className=\"space-container\" align=\"center\">\n        <ResetButton goToStep={goToStep} />\n\n        <ContinueButton\n          disabled={causeOfDeathIndex === undefined}\n          onClick={() => updateSelections({ causeOfDeath: causeOfDeathIndex })}\n        />\n      </Space>\n    </Step>\n  );\n}\n","import { useState } from 'react';\nimport { Space } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { ItemCard } from './components/ItemCard';\nimport { SceneTile } from './components/SceneTile';\nimport { ContinueButton } from './components/ContinueButton';\nimport { ResetButton } from './components/ResetButton';\n\ntype StepLocationSelectionProps = {\n  user: GamePlayer;\n  items: ItemsDict;\n  selections: PlainObject;\n  updateSelections: GenericFunction;\n  locationTiles: SceneTile[];\n  groupedItems: GroupedItems;\n  goToStep: GenericFunction;\n} & AnnouncementProps;\n\nexport function StepLocationSelection({\n  announcement,\n  user,\n  items,\n  selections,\n  updateSelections,\n  locationTiles,\n  groupedItems,\n  goToStep,\n}: StepLocationSelectionProps) {\n  const cardWidth = useCardWidth(12, 8, 50, 200);\n  const [location, setLocation] = useState<PlainObject>();\n\n  const userItems = groupedItems[user.itemGroupIndex];\n\n  const onSelectItem = (payload: SceneTilePayload) => {\n    setLocation(payload);\n  };\n\n  return (\n    <Step announcement={announcement}>\n      <Title>\n        <Translate pt=\"Onde foi o crime?\" en=\"Where was the crime?\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Baseado em qualquer uma das suas cartas (ou ambas), selecione o local onde o crime aconteceu.\n              <br />\n              Temos 4 colunas de locais agrupador por tema, selecione qualquer um.\n              <br />\n              Lembre-se que você está tentando ajudar os outros jogadores adivinhar o seu crime, seja\n              inteligente!\n            </>\n          }\n          en={\n            <>\n              Based on any card (or both), select where the crime occurred.\n              <br />\n              There are 4 columns of locations grouped by theme, you may select any.\n              <br />\n              Remember you are trying to help the players guess your crime, so be smart!\n            </>\n          }\n        />\n      </Instruction>\n\n      <ul className=\"h-items-selection\">\n        {userItems.map((itemId) => (\n          <li key={itemId} className=\"h-items-selection__item\">\n            <ItemCard\n              item={items[itemId]}\n              cardWidth={cardWidth}\n              preview={false}\n              isSelected={[selections.weaponId, selections.evidenceId].includes(itemId)}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"h-scene-tiles-list\">\n        {locationTiles.map((tile) => (\n          <SceneTile\n            key={tile.id}\n            tile={tile}\n            onSelectValue={onSelectItem}\n            index={location?.tileId === tile.id ? location?.value : undefined}\n          />\n        ))}\n      </div>\n\n      <Space className=\"space-container\" align=\"center\">\n        <ResetButton goToStep={goToStep} />\n\n        <ContinueButton\n          disabled={location?.tileId === undefined}\n          onClick={() => updateSelections({ locationTile: location?.tileId, locationIndex: location?.value })}\n        />\n      </Space>\n    </Step>\n  );\n}\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\nimport { CloudUploadOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Translate } from 'components/language';\nimport { ReadyPlayersBar } from 'components/players';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { SceneTile } from './components/SceneTile';\nimport { SelectedItems } from './components/SelectedItems';\n\ntype StepReviewCrimeProps = {\n  items: ItemsDict;\n  selections: PlainObject;\n  onSubmitCrime: GenericFunction;\n  locationTiles: SceneTile[];\n  causeOfDeathTile: SceneTile;\n  reasonForEvidenceTile: SceneTile;\n  updateSelection: GenericFunction;\n  players: GamePlayers;\n} & AnnouncementProps;\n\nexport function StepReviewCrime({\n  announcement,\n  items,\n  causeOfDeathTile,\n  reasonForEvidenceTile,\n  locationTiles,\n  selections,\n  onSubmitCrime,\n  updateSelection,\n  players,\n}: StepReviewCrimeProps) {\n  const { translate } = useLanguage();\n\n  const locationTile = locationTiles.find((location) => location.id === selections.locationTile);\n\n  return (\n    <Step announcement={announcement}>\n      <Title>\n        <Translate pt=\"Seu crime tá bom?\" en=\"Is your crime alright?\" />\n      </Title>\n      <Instruction contained>\n        <Translate pt={<>Revise seu crime.</>} en={<>Recap your crime.</>} />\n      </Instruction>\n\n      <SelectedItems items={items} weaponId={selections.weaponId} evidenceId={selections.evidenceId} />\n\n      <div className=\"h-scene-tiles-list\">\n        <SceneTile\n          tile={causeOfDeathTile}\n          index={selections.causeOfDeath}\n          onSelectValue={(payload) => updateSelection({ causeOfDeath: payload.value })}\n        />\n        <SceneTile\n          tile={reasonForEvidenceTile}\n          index={selections.reasonForEvidence}\n          onSelectValue={(payload) => updateSelection({ reasonForEvidence: payload.value })}\n        />\n        <SceneTile\n          tile={locationTile!}\n          index={selections.locationIndex}\n          onSelectValue={(payload) =>\n            updateSelection({ locationTile: payload.tileId, locationIndex: payload.value })\n          }\n        />\n      </div>\n\n      <Space className=\"space-container\" align=\"center\">\n        <Button type=\"primary\" size=\"large\" onClick={onSubmitCrime} icon={<CloudUploadOutlined />}>\n          <Translate pt=\"Enviar\" en=\"Submit\" />\n        </Button>\n      </Space>\n\n      <ReadyPlayersBar\n        players={players}\n        readyText={translate('Já cometi meu crime', \"I'm done committing my crime\")}\n        readyTextPlural={translate('Já cometemos nossos crimes', \"We're done committing our crimes\")}\n      />\n    </Step>\n  );\n}\n","import { useState } from 'react';\n// Components\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { SceneTile } from './components/SceneTile';\nimport { SelectedItems } from './components/SelectedItems';\nimport { ContinueButton } from './components/ContinueButton';\nimport { Space } from 'antd';\nimport { ResetButton } from './components/ResetButton';\n\ntype StepReasonForEvidenceProps = {\n  items: ItemsDict;\n  selections: PlainObject;\n  updateSelections: GenericFunction;\n  reasonForEvidenceTile: SceneTile;\n  goToStep: GenericFunction;\n} & AnnouncementProps;\n\nexport function StepReasonForEvidence({\n  announcement,\n  items,\n  selections,\n  updateSelections,\n  reasonForEvidenceTile,\n  goToStep,\n}: StepReasonForEvidenceProps) {\n  const [reasonForEvidenceIndex, setReasonForEvidenceIndex] = useState<number>();\n\n  const onSelectItem = (payload: SceneTilePayload) => {\n    setReasonForEvidenceIndex(payload.value);\n  };\n\n  return (\n    <Step announcement={announcement}>\n      <Title>\n        <Translate pt=\"Qual foi seu último crime?\" en=\"How was your last crime?\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Baseado somente em seu objeto (carta vermelha), selecione o que o objeto significa para o crime.\n            </>\n          }\n          en={\n            <>Based solely on the object (red card) you've chosen, select the meaning of it to the crime.</>\n          }\n        />\n      </Instruction>\n\n      <Space className=\"space-container\" align=\"center\">\n        <SelectedItems\n          items={items}\n          weaponId={selections.weaponId}\n          evidenceId={selections.evidenceId}\n          fadeWeapon\n        />\n\n        <SceneTile tile={reasonForEvidenceTile} onSelectValue={onSelectItem} index={reasonForEvidenceIndex} />\n      </Space>\n\n      <Space className=\"space-container\" align=\"center\">\n        <ResetButton goToStep={goToStep} />\n\n        <ContinueButton\n          disabled={reasonForEvidenceIndex === undefined}\n          onClick={() => updateSelections({ reasonForEvidence: reasonForEvidenceIndex })}\n        />\n      </Space>\n    </Step>\n  );\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button } from 'antd';\n// State & Hooks\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\nimport { useOnSubmitCrimeAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\nimport { mockCrime } from './utils/mock';\n// Icons\nimport { EventIcon } from 'icons/EventIcon';\nimport { SkullIcon } from 'icons/SkullIcon';\nimport { CrimeSceneIcon } from 'icons/CrimeSceneIcon';\nimport { LocationIcon } from 'icons/LocationIcon';\nimport { CrimeTapeIcon } from 'icons/CrimeTapeIcon';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { RoundAnnouncement } from 'components/round';\nimport { ImageCardPreloadHand } from 'components/cards';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { WelcomeMessage } from './components/RulesBlobs';\nimport { StepItemsSelection } from './StepItemsSelection';\nimport { StepCauseOfDeathSelection } from './StepCauseOfDeathSelection';\nimport { StepLocationSelection } from './StepLocationSelection';\nimport { StepReviewCrime } from './StepReviewCrime';\nimport { StepReasonForEvidence } from './StepReasonForEvidence';\nimport { DebugOnly } from 'components/debug';\n\nfunction PhaseCrimeSelection({ players, state, info }: PhaseProps) {\n  const { step, setStep, goToNextStep } = useStep(0);\n  const user = useUser(players, state);\n\n  const [selections, setSelections] = useState<SubmitCrimePayload>({});\n\n  const onSubmitCrimeRequest = useOnSubmitCrimeAPIRequest(setStep);\n\n  const onSubmitCrime = () => {\n    onSubmitCrimeRequest(selections);\n  };\n\n  const updateSelections = (payload: SubmitCrimePayload) => {\n    setSelections((prevState: SubmitCrimePayload) => ({ ...prevState, ...payload }));\n    goToNextStep();\n  };\n\n  const updateSelection = (payload: SubmitCrimePayload) => {\n    setSelections((prevState: SubmitCrimePayload) => ({ ...prevState, ...payload }));\n  };\n\n  const onMockCrime = () =>\n    onSubmitCrimeRequest(mockCrime(state.groupedItems[user.itemGroupIndex], state.locationTiles));\n\n  const announcementItems = (\n    <PhaseAnnouncement\n      icon={<EventIcon />}\n      title={<Translate pt=\"A Convenção\" en=\"The Convention\" />}\n      currentRound={state?.round?.current}\n      duration={30}\n      type=\"overlay\"\n    >\n      <WelcomeMessage />\n    </PhaseAnnouncement>\n  );\n\n  const announcementCause = (\n    <PhaseAnnouncement\n      icon={<SkullIcon />}\n      title={<Translate pt=\"Causa da Morte\" en=\"Cause of Death\" />}\n      duration={3}\n      type=\"overlay\"\n    >\n      <Instruction>\n        <Translate pt=\"Como a vítima morreu?\" en=\"How did the victim die?\" />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  const announcementEvidence = (\n    <PhaseAnnouncement\n      icon={<CrimeSceneIcon />}\n      title={<Translate pt=\"Evidências?\" en=\"Evidence?\" />}\n      duration={3}\n      type=\"overlay\"\n    >\n      <Instruction>\n        <Translate\n          pt=\"Conte-nos sobre o objeto que você escolheu.\"\n          en=\"Tell us about the object you selected.\"\n        />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  const announcementLocation = (\n    <PhaseAnnouncement\n      icon={<LocationIcon />}\n      title={<Translate pt=\"Local do Crime\" en=\"Crime Location\" />}\n      duration={3}\n      type=\"overlay\"\n    >\n      <Instruction>\n        <Translate pt=\"Onde que foi?\" en=\"Where was it?\" />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  const announcementReview = (\n    <PhaseAnnouncement\n      icon={<CrimeTapeIcon />}\n      title={<Translate pt=\"Revisão\" en=\"Review\" />}\n      duration={3}\n      type=\"overlay\"\n    />\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.CRIMES_HEDIONDOS.CRIME_SELECTION}>\n      <StepSwitcher step={step} conditions={[!user.isReady, !user.isReady, !user.isReady]} players={players}>\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state?.round}\n          onPressButton={goToNextStep}\n          buttonText=\" \"\n          time={5}\n          circleColor={info?.appearance?.color}\n        >\n          <ImageCardPreloadHand hand={Object.keys(state.items)} />\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <>\n          <StepItemsSelection\n            user={user}\n            groupedItems={state.groupedItems}\n            items={state.items}\n            selections={selections}\n            updateSelections={updateSelections}\n            announcement={announcementItems}\n          />\n          <DebugOnly dev>\n            <Button onClick={onMockCrime} size=\"large\">\n              Random Crime\n            </Button>\n          </DebugOnly>\n        </>\n\n        {/* Step 2 */}\n        <StepCauseOfDeathSelection\n          items={state.items}\n          causeOfDeathTile={state.causeOfDeathTile}\n          selections={selections}\n          updateSelections={updateSelections}\n          goToStep={setStep}\n          announcement={announcementCause}\n        />\n\n        {/* Step 3 */}\n        <StepReasonForEvidence\n          items={state.items}\n          reasonForEvidenceTile={state.reasonForEvidenceTile}\n          selections={selections}\n          updateSelections={updateSelections}\n          goToStep={setStep}\n          announcement={announcementEvidence}\n        />\n\n        {/* Step 4 */}\n        <StepLocationSelection\n          user={user}\n          items={state.items}\n          groupedItems={state.groupedItems}\n          locationTiles={state.locationTiles}\n          selections={selections}\n          updateSelections={updateSelections}\n          goToStep={setStep}\n          announcement={announcementLocation}\n        />\n\n        {/* Step 5 */}\n        <StepReviewCrime\n          items={state.items}\n          causeOfDeathTile={state.causeOfDeathTile}\n          reasonForEvidenceTile={state.reasonForEvidenceTile}\n          locationTiles={state.locationTiles}\n          selections={selections}\n          onSubmitCrime={onSubmitCrime}\n          updateSelection={updateSelection}\n          players={players}\n          announcement={announcementReview}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseCrimeSelection;\n","import { CRIMES_HEDIONDOS_API } from 'services/adapters';\nimport { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\n\nexport function useOnSubmitCrimeAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: CRIMES_HEDIONDOS_API.submitAction,\n    actionName: 'submit-crime',\n    onBeforeCall: () => setStep(11),\n    onError: () => setStep(9),\n    successMessage: translate('Crime enviado com sucesso', 'Crime submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar seu crime',\n      'Oops, the application failed to send your crime'\n    ),\n  });\n\n  return (payload: SubmitCrimePayload) => {\n    request({\n      action: 'SUBMIT_CRIME',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitMarkAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: CRIMES_HEDIONDOS_API.submitAction,\n    actionName: 'submit-mark',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(2),\n    successMessage: translate(\n      'Nova informação enviadas com sucesso',\n      'New information submitted successfully'\n    ),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar a nova informação',\n      'Oops, the application failed to send the new information'\n    ),\n  });\n\n  return (payload: SubmitMarkPayload) => {\n    request({\n      action: 'SUBMIT_MARK',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitGuessesAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: CRIMES_HEDIONDOS_API.submitAction,\n    actionName: 'submit-guesses',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate('Respostas enviadas com sucesso', 'Guesses submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar suas respostas',\n      'Oops, the application failed to send your guesses'\n    ),\n  });\n\n  return (payload: SubmitGuessesPayload) => {\n    request({\n      action: 'SUBMIT_GUESSES',\n      ...payload,\n    });\n  };\n}\n","// This icon file is generated automatically.\nvar ClockCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm176.5 585.7l-28.6 39a7.99 7.99 0 01-11.2 1.7L483.3 569.8a7.92 7.92 0 01-3.3-6.5V288c0-4.4 3.6-8 8-8h48.1c4.4 0 8 3.6 8 8v247.5l142.6 103.1c3.6 2.5 4.4 7.5 1.8 11.1z\" } }] }, \"name\": \"clock-circle\", \"theme\": \"filled\" };\nexport default ClockCircleFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ClockCircleFilledSvg from \"@ant-design/icons-svg/es/asn/ClockCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\nvar ClockCircleFilled = function ClockCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ClockCircleFilledSvg\n  }));\n};\nClockCircleFilled.displayName = 'ClockCircleFilled';\nexport default /*#__PURE__*/React.forwardRef(ClockCircleFilled);","// This icon file is generated automatically.\nvar SafetyOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"0 0 1024 1024\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64L128 192v384c0 212.1 171.9 384 384 384s384-171.9 384-384V192L512 64zm312 512c0 172.3-139.7 312-312 312S200 748.3 200 576V246l312-110 312 110v330z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M378.4 475.1a35.91 35.91 0 00-50.9 0 35.91 35.91 0 000 50.9l129.4 129.4 2.1 2.1a33.98 33.98 0 0048.1 0L730.6 434a33.98 33.98 0 000-48.1l-2.8-2.8a33.98 33.98 0 00-48.1 0L483 579.7 378.4 475.1z\" } }] }, \"name\": \"safety\", \"theme\": \"outlined\" };\nexport default SafetyOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SafetyOutlinedSvg from \"@ant-design/icons-svg/es/asn/SafetyOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar SafetyOutlined = function SafetyOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: SafetyOutlinedSvg\n  }));\n};\nSafetyOutlined.displayName = 'SafetyOutlined';\nexport default /*#__PURE__*/React.forwardRef(SafetyOutlined);","// This icon file is generated automatically.\nvar GiftOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M880 310H732.4c13.6-21.4 21.6-46.8 21.6-74 0-76.1-61.9-138-138-138-41.4 0-78.7 18.4-104 47.4-25.3-29-62.6-47.4-104-47.4-76.1 0-138 61.9-138 138 0 27.2 7.9 52.6 21.6 74H144c-17.7 0-32 14.3-32 32v200c0 4.4 3.6 8 8 8h40v344c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V550h40c4.4 0 8-3.6 8-8V342c0-17.7-14.3-32-32-32zm-334-74c0-38.6 31.4-70 70-70s70 31.4 70 70-31.4 70-70 70h-70v-70zm-138-70c38.6 0 70 31.4 70 70v70h-70c-38.6 0-70-31.4-70-70s31.4-70 70-70zM180 482V378h298v104H180zm48 68h250v308H228V550zm568 308H546V550h250v308zm48-376H546V378h298v104z\" } }] }, \"name\": \"gift\", \"theme\": \"outlined\" };\nexport default GiftOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport GiftOutlinedSvg from \"@ant-design/icons-svg/es/asn/GiftOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar GiftOutlined = function GiftOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: GiftOutlinedSvg\n  }));\n};\nGiftOutlined.displayName = 'GiftOutlined';\nexport default /*#__PURE__*/React.forwardRef(GiftOutlined);","// This icon file is generated automatically.\nvar ExceptionOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm376 116c-119.3 0-216 96.7-216 216s96.7 216 216 216 216-96.7 216-216-96.7-216-216-216zm107.5 323.5C750.8 868.2 712.6 884 672 884s-78.8-15.8-107.5-44.5C535.8 810.8 520 772.6 520 732s15.8-78.8 44.5-107.5C593.2 595.8 631.4 580 672 580s78.8 15.8 107.5 44.5C808.2 653.2 824 691.4 824 732s-15.8 78.8-44.5 107.5zM640 812a32 32 0 1064 0 32 32 0 10-64 0zm12-64h40c4.4 0 8-3.6 8-8V628c0-4.4-3.6-8-8-8h-40c-4.4 0-8 3.6-8 8v112c0 4.4 3.6 8 8 8zM440 852H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"exception\", \"theme\": \"outlined\" };\nexport default ExceptionOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ExceptionOutlinedSvg from \"@ant-design/icons-svg/es/asn/ExceptionOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar ExceptionOutlined = function ExceptionOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ExceptionOutlinedSvg\n  }));\n};\nExceptionOutlined.displayName = 'ExceptionOutlined';\nexport default /*#__PURE__*/React.forwardRef(ExceptionOutlined);","// Components\nimport { ItemCard } from './ItemCard';\n\ntype ItemCardEmptyProps = {\n  cardWidth: number;\n  cardType: 'evidence' | 'weapon';\n};\n\nexport function ItemCardEmpty({ cardWidth, cardType }: ItemCardEmptyProps) {\n  return (\n    <ItemCard\n      item={{\n        id: `dmhk-${cardType === 'evidence' ? 'ev' : 'wp'}-000`,\n        type: cardType,\n        name: {\n          pt: '?',\n          en: '?',\n        },\n      }}\n      cardWidth={cardWidth}\n      isSelected={false}\n      preview={false}\n    />\n  );\n}\n","// This icon file is generated automatically.\nvar WarningFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M955.7 856l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48zM480 416c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v184c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V416zm32 352a48.01 48.01 0 010-96 48.01 48.01 0 010 96z\" } }] }, \"name\": \"warning\", \"theme\": \"filled\" };\nexport default WarningFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport WarningFilledSvg from \"@ant-design/icons-svg/es/asn/WarningFilled\";\nimport AntdIcon from '../components/AntdIcon';\nvar WarningFilled = function WarningFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: WarningFilledSvg\n  }));\n};\nWarningFilled.displayName = 'WarningFilled';\nexport default /*#__PURE__*/React.forwardRef(WarningFilled);","import clsx from 'clsx';\n// Ant Design Resources\nimport {\n  CheckCircleFilled,\n  CloseCircleFilled,\n  LockFilled,\n  MinusCircleFilled,\n  QuestionCircleFilled,\n  WarningFilled,\n} from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\n\ntype CrimeGuessStatusProps = {\n  status: string;\n  withDescription?: boolean;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n};\n\nexport function CrimeGuessStatus({ status, withDescription = false, className = '' }: CrimeGuessStatusProps) {\n  const baseClass = 'crime-guess-status';\n\n  switch (status) {\n    case 'LOCKED':\n      return (\n        <span className={clsx(baseClass, `${baseClass}--${status}`, className)}>\n          <LockFilled color=\"gray\" />\n          <Translate pt=\"TRAVADO\" en=\"LOCKED\" />\n          {withDescription && (\n            <Translate\n              pt=\": Você já tinha adivinhado esse corretamente\"\n              en=\": You already guessed this one correctly\"\n            />\n          )}\n        </span>\n      );\n    case 'CORRECT':\n      return (\n        <span className={clsx(baseClass, `${baseClass}--${status}`, className)}>\n          <CheckCircleFilled color=\"green\" />\n          <Translate pt=\"CORRETO\" en=\"CORRECT\" />\n          {withDescription && (\n            <Translate pt=\": Você acertou arma e objeto\" en=\": You got the weapon and object correctly\" />\n          )}\n        </span>\n      );\n    case 'HALF':\n      return (\n        <span className={clsx(baseClass, `${baseClass}--${status}`, className)}>\n          <MinusCircleFilled />\n          <Translate pt=\"SOMENTE UM\" en=\"ONE ONLY\" />\n          {withDescription && (\n            <Translate pt=\": Um dos items está correto\" en=\": One of the items is correct\" />\n          )}\n        </span>\n      );\n    case 'WRONG':\n      return (\n        <span className={clsx(baseClass, `${baseClass}--${status}`, className)}>\n          <CloseCircleFilled color=\"red\" />\n          <Translate pt=\"ERRADO\" en=\"WRONG\" />\n          {withDescription && (\n            <Translate\n              pt=\": Você errou ambos arma e objeto, mas está no quadrante certo\"\n              en=\": You got both weapon and object wrong but you are in the right group\"\n            />\n          )}\n        </span>\n      );\n    case 'WRONG_GROUP':\n      return (\n        <span className={clsx(baseClass, `${baseClass}--${status}`, className)}>\n          <WarningFilled color=\"red\" />\n          <Translate pt=\"GRUPO ERRADO\" en=\"WRONG GROUP\" />\n          {withDescription && (\n            <Translate\n              pt=\": Você é tão burro que você escolheu items no grupo errado\"\n              en=\": You're so dumb you chose items in the wrong group\"\n            />\n          )}\n        </span>\n      );\n    default:\n      return (\n        <span className={clsx(baseClass, `${baseClass}--${status}`, className)}>\n          <QuestionCircleFilled />\n          <Translate pt=\"?\" en=\"?\" />\n          );\n          {withDescription && (\n            <Translate pt=\": Recebido status desconhecido\" en=\": Received unknown guess status\" />\n          )}\n        </span>\n      );\n  }\n}\n","import { useState } from 'react';\nimport clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Tooltip } from 'antd';\nimport {\n  CheckCircleFilled,\n  ClockCircleFilled,\n  EnvironmentOutlined,\n  ExceptionOutlined,\n  GiftOutlined,\n  LockFilled,\n  SafetyOutlined,\n} from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { getAvatarColorById } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { ItemCard } from './ItemCard';\nimport { ItemCardEmpty } from './ItemCardEmpty';\nimport { CrimeGuessStatus } from './CrimeGuessStatus';\n\nconst CARD_WIDTH = 100;\n\ntype CrimeProps = {\n  history?: GuessHistoryEntry[];\n  crime: Crime;\n  items: ItemsDict;\n  player: GamePlayer;\n  scenes: ScenesDict;\n  scenesOrder: string[];\n  selectedWeaponId?: CardId;\n  selectedEvidenceId?: CardId;\n  isLocked?: boolean;\n};\n\nexport function Crime({\n  crime,\n  player,\n  scenesOrder,\n  scenes,\n  selectedWeaponId,\n  selectedEvidenceId,\n  history,\n  items,\n  isLocked,\n}: CrimeProps) {\n  const [historyEntryIndex, setHistoryEntryIndex] = useState(-1);\n  const isComplete = Boolean(selectedWeaponId && selectedWeaponId);\n\n  const activeWeaponId =\n    historyEntryIndex >= 0 && history ? history[historyEntryIndex].weaponId : selectedWeaponId;\n\n  const evidenceWeaponId =\n    historyEntryIndex >= 0 && history ? history[historyEntryIndex].evidenceId : selectedEvidenceId;\n\n  const color = getAvatarColorById(player.avatarId);\n  const hasHistory = history && history.length;\n\n  return (\n    <div className=\"h-crime\">\n      <div className=\"h-crime__player\" style={{ backgroundColor: color }}>\n        <span className=\"h-crime__player-avatar\">\n          <Avatar id={player.avatarId} />\n        </span>\n        <span className=\"h-crime__player-name\">{player.name}</span>\n      </div>\n\n      <div className=\"h-crime__scenes\">\n        {scenesOrder\n          .filter((sceneId) => crime.scenes[sceneId] !== undefined)\n          .map((sceneId) => {\n            const scene = scenes[sceneId];\n\n            return (\n              <CrimeScene\n                key={`crime-scene-${sceneId}-by-${crime.playerId}`}\n                scene={scene}\n                playerIndex={crime.scenes[sceneId]}\n              />\n            );\n          })}\n      </div>\n\n      <div className=\"h-crime__history\" style={{ borderColor: hasHistory ? color : 'transparent' }}>\n        {hasHistory && (\n          <>\n            <div className=\"h-crime__history-header\">\n              <Tooltip\n                title={\n                  <Translate\n                    pt=\"Histórico: passe o mouse nas rodadas\"\n                    en=\"History: hover the round numbers\"\n                  />\n                }\n              >\n                <ClockCircleFilled />\n              </Tooltip>\n            </div>\n            {history?.map((_, index) => {\n              return (\n                <Button\n                  key={`history-entry-${index}`}\n                  ghost\n                  shape=\"circle\"\n                  size=\"small\"\n                  onMouseOver={() => setHistoryEntryIndex(index)}\n                  onMouseLeave={() => setHistoryEntryIndex(-1)}\n                >\n                  {index + 1}\n                </Button>\n              );\n            })}\n          </>\n        )}\n      </div>\n\n      <div className=\"h-crime-selections\">\n        {activeWeaponId ? (\n          <ItemCard item={items[activeWeaponId]} cardWidth={CARD_WIDTH} preview />\n        ) : (\n          <ItemCardEmpty cardWidth={CARD_WIDTH} cardType=\"weapon\" />\n        )}\n\n        {evidenceWeaponId ? (\n          <ItemCard item={items[evidenceWeaponId]} cardWidth={CARD_WIDTH} preview />\n        ) : (\n          <ItemCardEmpty cardWidth={CARD_WIDTH} cardType=\"evidence\" />\n        )}\n\n        <div className=\"h-crime-selections__status\">\n          {historyEntryIndex >= 0 && history && history[historyEntryIndex] && (\n            <CrimeGuessStatus status={history[historyEntryIndex].status} />\n          )}\n          {historyEntryIndex === -1 && isLocked && <CrimeGuessStatus status=\"LOCKED\" />}\n        </div>\n      </div>\n\n      <div className=\"h-crime__player\" style={{ backgroundColor: isComplete ? color : undefined }}>\n        {isLocked && <LockFilled />}\n        {!isLocked && isComplete && <CheckCircleFilled />}\n      </div>\n    </div>\n  );\n}\n\ntype CrimeSceneProps = {\n  scene: SceneTile;\n  playerIndex: number;\n};\n\nfunction CrimeScene({ scene, playerIndex }: CrimeSceneProps) {\n  const { language } = useLanguage();\n  return (\n    <li className={clsx('h-crime-scene', `h-crime-scene--${scene.type}`)}>\n      <div className={clsx('h-crime-scene__label', `h-crime-scene__label--${scene.type}`)}>\n        <CrimeSceneIcon type={scene.type} /> {scene.title[language]}\n      </div>\n      <div className=\"h-crime-scene__value\">{scene.values[playerIndex][language]}</div>\n    </li>\n  );\n}\n\ntype CrimeSceneIconProps = {\n  type: string;\n};\n\nfunction CrimeSceneIcon({ type }: CrimeSceneIconProps) {\n  switch (type) {\n    case 'cause':\n      return <SafetyOutlined />;\n    case 'evidence':\n      return <GiftOutlined />;\n    case 'location':\n      return <EnvironmentOutlined />;\n    default:\n      return <ExceptionOutlined />;\n  }\n}\n","// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { ItemCard } from './ItemCard';\n\ntype GroupedItemsBoardProps = {\n  groupedItems: GroupedItems;\n  items: ItemsDict;\n  weaponId?: string;\n  evidenceId?: string;\n};\n\nexport function GroupedItemsBoard({ items, weaponId, evidenceId, groupedItems }: GroupedItemsBoardProps) {\n  const cardWidth = useCardWidth(12, 8, 30, 200);\n  return (\n    <ul className=\"h-grouped-items-board\">\n      {Object.values(groupedItems).map((group, index) => (\n        <li key={`group-${index}`}>\n          <ul className=\"h-grouped-items-board__group\">\n            {group.map((itemId) => (\n              <li key={itemId}>\n                <ItemCard\n                  item={items[itemId]}\n                  cardWidth={cardWidth}\n                  isSelected={[weaponId, evidenceId].includes(itemId)}\n                />\n              </li>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, Collapse, Space } from 'antd';\n// Components\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Crime } from './components/Crime';\nimport { GroupedItemsBoard } from './components/GroupedItemsBoard';\nimport { SceneTile } from './components/SceneTile';\nimport { useLanguage } from 'hooks/useLanguage';\n\ntype StepNewSceneProps = {\n  user: GamePlayer;\n  items: ItemsDict;\n  groupedItems: GroupedItems;\n  onSubmitMark: GenericFunction;\n  sceneTile: SceneTile;\n  crimes: Crime[];\n  scenes: ScenesDict;\n  scenesOrder: string[];\n  players: GamePlayers;\n};\n\nexport function StepNewScene({\n  user,\n  items,\n  groupedItems,\n  onSubmitMark,\n  sceneTile,\n  crimes,\n  players,\n  scenes,\n  scenesOrder,\n}: StepNewSceneProps) {\n  const { language } = useLanguage();\n  const [sceneMarkIndex, setSceneMarkIndex] = useState<number>();\n\n  const onSelectItem = (payload: SceneTilePayload) => {\n    setSceneMarkIndex(payload.value);\n  };\n\n  const crime = crimes.find((crime) => crime.playerId === user.id);\n\n  return (\n    <Step>\n      <Title size=\"medium\">\n        {/* <Translate pt=\"Dê mais detalhes do crime\" en=\"Give us more details\" /> */}\n        {sceneTile.description[language]}\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Baseado em suas cartas, selecione uma opção na nova carta de detalhes da Cena do Crime abaixo.\n            </>\n          }\n          en={<>Based on your cards, select an option in the new Scene card below.</>}\n        />\n      </Instruction>\n\n      <Collapse>\n        <Collapse.Panel\n          key=\"weapons-evidences\"\n          header={\n            <Translate\n              pt=\"Clique para ver todas Armas e Evidências\"\n              en=\"Click to see all Weapons and Evidence\"\n            />\n          }\n        >\n          <GroupedItemsBoard\n            groupedItems={groupedItems}\n            items={items}\n            weaponId={user.weaponId}\n            evidenceId={user.evidenceId}\n          />\n        </Collapse.Panel>\n      </Collapse>\n\n      <div className=\"\">\n        <Crime\n          key={`crime-by-${crime!.playerId}`}\n          crime={crime!}\n          scenes={scenes}\n          scenesOrder={scenesOrder}\n          items={items}\n          player={user}\n          selectedWeaponId={user.weaponId}\n          selectedEvidenceId={user.evidenceId}\n        />\n      </div>\n\n      <SceneTile tile={sceneTile} onSelectValue={onSelectItem} index={sceneMarkIndex} />\n\n      <Space className=\"space-container\" align=\"center\">\n        <Button\n          type=\"primary\"\n          size=\"large\"\n          disabled={sceneMarkIndex === undefined}\n          onClick={() => onSubmitMark({ sceneIndex: sceneMarkIndex })}\n        >\n          <Translate pt=\"Enviar\" en=\"Send\" />\n        </Button>\n      </Space>\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useMock } from 'hooks/useMock';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\nimport { useOnSubmitMarkAPIRequest } from './utils/api-requests';\nimport { mockSceneMark } from './utils/mock';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { LoupeIcon } from 'icons/LoupeIcon';\n// Components\nimport { Translate } from 'components/language';\nimport { RoundAnnouncement } from 'components/round';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { StepNewScene } from './StepNewScene';\n\nfunction PhaseSceneMarking({ players, state, info }: PhaseProps) {\n  const { language } = useLanguage();\n  const user = useUser(players, state);\n  const { step, setStep, goToNextStep } = useStep(0);\n\n  const onSubmitMark = useOnSubmitMarkAPIRequest(setStep);\n\n  useMock(() => {\n    onSubmitMark({ sceneIndex: mockSceneMark() });\n  }, []);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.CRIMES_HEDIONDOS.SCENE_MARKING}>\n      <StepSwitcher step={step} conditions={[!user.ready, !user.ready, !user.ready]} players={players}>\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state?.round}\n          onPressButton={goToNextStep}\n          buttonText=\" \"\n          time={5}\n          circleColor={info?.appearance?.color}\n        />\n\n        {/* Step 1 */}\n        <PhaseAnnouncement\n          icon={<LoupeIcon />}\n          title={<Translate pt=\"Nova pista\" en=\"New clue\" />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          type=\"block\"\n        >\n          <Instruction>\n            <Translate\n              pt=\"Compartilhe mais uma pista sobre seu crime:\"\n              en=\"Share one more piece of information about your crime:\"\n            />\n            <br />\n            {state.currentScene.description[language]}\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 2 */}\n        <StepNewScene\n          user={user}\n          groupedItems={state.groupedItems}\n          items={state.items}\n          onSubmitMark={onSubmitMark}\n          sceneTile={state.currentScene}\n          scenes={state.scenes}\n          scenesOrder={state.scenesOrder}\n          crimes={state.crimes}\n          players={players}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseSceneMarking;\n","import { orderBy } from 'lodash';\nimport { getLastItem } from 'utils/helpers';\n\ntype SplitWeaponsAndEvidence = {\n  weapons: HCard[];\n  evidences: HCard[];\n};\nexport const splitWeaponsAndEvidence = (items: ItemsDict, language: Language): SplitWeaponsAndEvidence => {\n  const { weapons, evidences } = Object.values(items).reduce(\n    (acc: PlainObject, item) => {\n      if (item.type === 'weapon') {\n        acc.weapons.push(item);\n      } else {\n        acc.evidences.push(item);\n      }\n      return acc;\n    },\n    {\n      weapons: [],\n      evidences: [],\n    }\n  );\n\n  const sortedWeapons = orderBy(weapons, [`name.${language}`], ['asc']);\n  const sortedEvidences = orderBy(evidences, [`name.${language}`], ['asc']);\n\n  return {\n    weapons: sortedWeapons,\n    evidences: sortedEvidences,\n  };\n};\n\nexport const getHistory = (playerHistory: HHistory, activePlayerId: PlayerId) => {\n  return playerHistory?.[activePlayerId] ?? [];\n};\n\nexport const isHistoryLocked = (history: HHistory, activePlayerId: PlayerId): boolean => {\n  const lastGuessHistory = getLastItem(getHistory(history, activePlayerId));\n  return Boolean(['CORRECT', 'LOCKED'].includes(lastGuessHistory?.status));\n};\n\nexport const isEntryLocked = (historyEntry: GuessHistoryEntry): boolean => {\n  return Boolean(['CORRECT', 'LOCKED'].includes(historyEntry?.status));\n};\n\nexport const autoSelectCorrectGuesses = (history: HHistory) => {\n  const guesses: PlainObject = {};\n  Object.entries(history).forEach(([key, historyEntryArray]: any) => {\n    const historyEntry: GuessHistoryEntry = getLastItem(historyEntryArray);\n    if (['CORRECT', 'LOCKED'].includes(historyEntry.status)) {\n      guesses[key] = {\n        weaponId: historyEntry.weaponId,\n        evidenceId: historyEntry.evidenceId,\n        isComplete: true,\n      };\n    }\n  });\n  return guesses;\n};\n","// Helpers\nimport { isHistoryLocked } from '../utils/helpers';\nimport { sortPlayers } from 'utils/helpers';\n// Icons\nimport { LockIcon } from 'icons/LockIcon';\nimport { KnifeIcon } from 'icons/KnifeIcon';\n// Components\nimport { AvatarCard, IconAvatar } from 'components/avatars';\nimport { TransparentButton } from 'components/buttons';\n\ntype PlayersCardsProps = {\n  activePlayerId: PlayerId;\n  setActivePlayerId: GenericFunction;\n  guesses: PlainObject;\n  players: GamePlayers;\n  user: GamePlayer;\n  history: HHistory;\n};\n\nexport function PlayersCards({\n  activePlayerId,\n  setActivePlayerId,\n  players,\n  guesses,\n  user,\n  history,\n}: PlayersCardsProps) {\n  return (\n    <ul className=\"h-players-cards\">\n      {sortPlayers(players).map((player) => {\n        const isActive = activePlayerId === player.id;\n        const isComplete =\n          user.id === player.id || Boolean(guesses[player.id]?.weaponId && guesses[player.id]?.evidenceId);\n        const isLocked = isHistoryLocked(history, player.id);\n        return (\n          <li key={`player-card-${player.id}`}>\n            <TransparentButton onClick={() => setActivePlayerId(player.id)} active={isActive}>\n              <AvatarCard\n                size=\"small\"\n                player={player}\n                withName\n                replacementAvatar={\n                  (isLocked && <IconAvatar icon={<LockIcon />} className=\"h-players-cards__seal\" />) ||\n                  (isComplete && <IconAvatar icon={<KnifeIcon />} className=\"h-players-cards__seal\" />)\n                }\n              />\n            </TransparentButton>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { TransparentButton } from 'components/buttons';\nimport { ItemCard } from './ItemCard';\n\nconst getEliminatedCard = (cardType: string) => ({\n  id: `dmhk-${cardType === 'ev' ? 'ev' : 'wp'}-xxx`,\n  type: cardType,\n  name: {\n    pt: 'x',\n    en: 'x',\n  },\n});\n\ntype SelectableGroupedItemsBoardProps = {\n  groupedItems: GroupedItems;\n  items: ItemsDict;\n  weaponId?: string;\n  evidenceId?: string;\n  onSelectItem: GenericFunction;\n  activeColor?: string;\n  isLocked?: boolean;\n  wrongGroups?: number[];\n};\n\nexport function SelectableGroupedItemsBoard({\n  items,\n  weaponId,\n  evidenceId,\n  groupedItems,\n  onSelectItem,\n  activeColor,\n  isLocked,\n  wrongGroups = [],\n}: SelectableGroupedItemsBoardProps) {\n  const cardWidth = useCardWidth(12, 8, 30, 200);\n\n  return (\n    <ul className=\"h-grouped-items-board\">\n      {Object.values(groupedItems).map((group, index) => {\n        const isGroupWrong = wrongGroups.includes(index);\n\n        return (\n          <li key={`group-${index}`}>\n            <ul\n              className=\"h-grouped-items-board__group\"\n              style={Boolean(activeColor) ? { borderColor: activeColor } : {}}\n            >\n              {group.map((itemId) => (\n                <li key={itemId}>\n                  <TransparentButton\n                    onClick={isLocked || isGroupWrong ? undefined : () => onSelectItem(itemId)}\n                  >\n                    <ItemCard\n                      item={isGroupWrong ? getEliminatedCard(itemId.split('-')[1]) : items[itemId]}\n                      cardWidth={cardWidth}\n                      isSelected={[weaponId, evidenceId].includes(itemId)}\n                      preview={false}\n                      activeColor={activeColor}\n                    />\n                  </TransparentButton>\n                </li>\n              ))}\n            </ul>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import { useEffect, useState } from 'react';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { getAvatarColorById, getLastItem } from 'utils/helpers';\nimport { mockGuesses } from './utils/mock';\nimport { autoSelectCorrectGuesses, getHistory } from './utils/helpers';\n// Icons\nimport { InvestigationIcon } from 'icons/InvestigationIcon';\n// Components\nimport { Crime } from './components/Crime';\nimport { PlayersCards } from './components/PlayersCards';\nimport { SelectableGroupedItemsBoard } from './components/SelectableGroupedItemsBoard';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { DebugOnly } from 'components/debug';\nimport { FloatingHand } from 'components/cards';\n\ntype StepGuessingProps = {\n  user: GamePlayer;\n  players: GamePlayers;\n  items: ItemsDict;\n  groupedItems: GroupedItems;\n  scenes: ScenesDict;\n  scenesOrder: string[];\n  crimes: Crime[];\n  onSubmitGuesses: GenericFunction;\n};\n\nexport function StepGuessing({\n  user,\n  groupedItems,\n  items,\n  players,\n  scenes,\n  scenesOrder,\n  crimes,\n  onSubmitGuesses,\n}: StepGuessingProps) {\n  const [guesses, setGuesses] = useState<PlainObject>({});\n  const [activePlayerId, setActivePlayerId] = useState<PlayerId>('');\n\n  // DEV: Auto guesses\n  useMock(() => {\n    onSubmitGuesses({ guesses: mockGuesses(groupedItems, players, user) });\n  }, []);\n\n  // If last guess was CORRECT or LOCK, auto-guess\n  useEffect(() => {\n    setGuesses((g) => ({ ...g, ...autoSelectCorrectGuesses(user.history) }));\n  }, [user]);\n\n  const onUpdateGuesses = (itemId: string) => {\n    if (activePlayerId && itemId) {\n      const guessObj = {\n        ...(guesses[activePlayerId] ?? {\n          weaponId: undefined,\n          evidenceId: undefined,\n          isComplete: false,\n        }),\n      };\n\n      const isWeapon = itemId.includes('wp');\n\n      if (isWeapon) {\n        guessObj.weaponId = itemId;\n      } else {\n        guessObj.evidenceId = itemId;\n      }\n\n      setGuesses((s: PlainObject) => ({\n        ...s,\n        [activePlayerId]: {\n          ...guessObj,\n          isComplete: Boolean(guessObj?.weaponId && guessObj?.evidenceId),\n        },\n      }));\n    }\n  };\n\n  const playerCount = Object.keys(players).length;\n  const isAllComplete =\n    Object.values(guesses).length === playerCount - 1 &&\n    Object.values(guesses).every((guess) => guess.weaponId && guess.evidenceId);\n  const activeCrime = crimes.find((crime) => crime.playerId === activePlayerId);\n  const isOwnCrime = activePlayerId === user.id;\n  const activePlayerGuesses = guesses?.[activePlayerId] ?? {};\n\n  const lastGuessHistory = getLastItem(getHistory(user.history, activePlayerId));\n  const isLocked = ['CORRECT', 'LOCKED'].includes(lastGuessHistory?.status);\n\n  // Active stuff\n  const { activeWeaponId, activeEvidenceId } = getActiveStuff(\n    isOwnCrime,\n    isLocked,\n    user,\n    activePlayerGuesses,\n    lastGuessHistory\n  );\n\n  return (\n    <Step>\n      <Title>\n        <Translate pt=\"Quais foram os crimes?\" en=\"What were the crimes?\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Selecione cada jogador abaixo, analise suas respostas sobre o crime, e selecione uma arma e um\n              objeto.\n              <br />O par sempre estará no mesmo quadrante, mas os objetos não são exclusivos e diferentes\n              crimes podem usar as mesmas cartas.\n              <br />\n              Crimes que já tem ambos selecionados são indicados por uma faca.\n            </>\n          }\n          en={\n            <>\n              Select each player below, analyze their answers about their crimes, then select a weapon and an\n              object.\n              <br />\n              The pair will always be in the same quadrant, but object are non-exclusive so different crimes\n              might use the same cards.\n              <br />\n              Crimes with both cards selected are indicated by a knife.\n            </>\n          }\n        />\n      </Instruction>\n\n      <DebugOnly dev>\n        <Space className=\"space-container\" align=\"center\">\n          <Button type=\"dashed\" ghost onClick={() => setGuesses(mockGuesses(groupedItems, players, user))}>\n            <Translate pt=\"Seleção Aleatória Semi-inteligente\" en=\"Semi-intelligent Random Selection\" />\n          </Button>\n        </Space>\n      </DebugOnly>\n\n      <PlayersCards\n        user={user}\n        activePlayerId={activePlayerId}\n        setActivePlayerId={setActivePlayerId}\n        players={players}\n        guesses={guesses}\n        history={user.history}\n      />\n\n      {isAllComplete && (\n        <Space className=\"space-container\" align=\"center\">\n          <Button\n            size=\"large\"\n            type=\"primary\"\n            disabled={!isAllComplete}\n            onClick={() => onSubmitGuesses({ guesses })}\n          >\n            <Translate pt=\"Enviar Respostas\" en=\"Send Guesses\" />\n          </Button>\n        </Space>\n      )}\n\n      <SelectableGroupedItemsBoard\n        items={items}\n        weaponId={activeWeaponId}\n        evidenceId={activeEvidenceId}\n        groupedItems={groupedItems}\n        onSelectItem={onUpdateGuesses}\n        activeColor={getAvatarColorById(players[activePlayerId]?.avatarId)}\n        isLocked={isOwnCrime || isLocked}\n        wrongGroups={user?.wrongGroups?.[activePlayerId] ?? []}\n      />\n\n      {activeCrime && (\n        <FloatingHand title=\"Crime\" icon={<InvestigationIcon />}>\n          <Crime\n            key={`crime-by-${activeCrime.playerId}`}\n            crime={activeCrime}\n            scenes={scenes}\n            scenesOrder={scenesOrder}\n            items={items}\n            history={user?.history[activeCrime.playerId] ?? []}\n            player={players[activeCrime.playerId]}\n            selectedWeaponId={activeWeaponId}\n            selectedEvidenceId={activeEvidenceId}\n            isLocked={isOwnCrime || isLocked}\n          />\n        </FloatingHand>\n      )}\n\n      {/* This makes sure people can open the floating hand and still see all ItemBoard */}\n      <div className=\"h-empty-space\"></div>\n    </Step>\n  );\n}\n\nconst getActiveStuff = (\n  isOwnCrime: boolean,\n  isLocked: boolean,\n  user: GamePlayer,\n  activePlayerGuesses: any,\n  lastGuessHistory: GuessHistoryEntry\n): { activeWeaponId: string; activeEvidenceId: string } => {\n  if (isOwnCrime) {\n    return {\n      activeWeaponId: user.weaponId,\n      activeEvidenceId: user.evidenceId,\n    };\n  }\n\n  if (isLocked) {\n    return {\n      activeWeaponId: lastGuessHistory.weaponId,\n      activeEvidenceId: lastGuessHistory.evidenceId,\n    };\n  }\n\n  return {\n    activeWeaponId: activePlayerGuesses.weaponId,\n    activeEvidenceId: activePlayerGuesses.evidenceId,\n  };\n};\n","// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitGuessesAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { GuessIcon } from 'icons/GuessIcon';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { GuessMessage } from './components/RulesBlobs';\nimport { StepGuessing } from './StepGuessing';\nimport { Translate } from 'components/language';\n\nfunction PhaseGuessing({ players, state, info }: PhaseProps) {\n  const { step, setStep, goToNextStep } = useStep(0);\n  const user = useUser(players, state);\n\n  const onSubmitGuesses = useOnSubmitGuessesAPIRequest(setStep);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.CRIMES_HEDIONDOS.GUESSING}>\n      <StepSwitcher step={step} conditions={[!user.isReady, !user.isReady]} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<GuessIcon />}\n          title={<Translate pt=\"Tente Adivinhar\" en=\"Try to guess\" />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          type=\"block\"\n        >\n          <GuessMessage />\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepGuessing\n          user={user}\n          groupedItems={state.groupedItems}\n          items={state.items}\n          players={players}\n          scenes={state.scenes}\n          scenesOrder={state.scenesOrder}\n          crimes={state.crimes}\n          onSubmitGuesses={onSubmitGuesses}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseGuessing;\n","import { orderBy } from 'lodash';\n// Ant Design Resources\nimport { Table, Tooltip } from 'antd';\n// Icons\nimport { BoxCheckMarkIcon } from 'icons/BoxCheckMarkIcon';\nimport { BoxXIcon } from 'icons/BoxXIcon';\nimport { BoxMinusIcon } from 'icons/BoxMinusIcon';\nimport { BoxOneIcon } from 'icons/BoxOneIcon';\n// Components\nimport { AvatarName, Avatar, IconAvatar } from 'components/avatars';\nimport { CrimeGuessStatus } from './CrimeGuessStatus';\n\ntype ResultsTableProps = {\n  players: GamePlayers;\n  results: HResults;\n};\n\nexport function ResultsTable({ players, results }: ResultsTableProps) {\n  const columns = [\n    {\n      title: '',\n      dataIndex: 'playerId',\n      render: (playerId: string) => <AvatarName player={players[playerId]} size=\"small\" addressUser />,\n    },\n    ...orderBy(Object.keys(results)).map((playerId) => ({\n      title: <Avatar id={players[playerId].avatarId} size=\"small\" />,\n      dataIndex: playerId,\n      render: (status: string) => <ResultsTableCell status={status} />,\n    })),\n  ];\n\n  const data = orderBy(Object.entries(results))\n    .filter(([key, _]) => players[key].type === 'player')\n    .map(([key, result]) => {\n      return {\n        playerId: key,\n        ...result,\n      };\n    });\n\n  return <Table columns={columns} dataSource={data} pagination={false} size=\"small\" bordered />;\n}\n\ntype ResultsTableCellProps = {\n  status: string;\n};\n\nfunction ResultsTableCell({ status }: ResultsTableCellProps) {\n  switch (status) {\n    case 'LOCKED':\n    case 'CORRECT':\n      return (\n        <Tooltip title={<CrimeGuessStatus status={status} withDescription />} color=\"white\">\n          <IconAvatar icon={<BoxCheckMarkIcon />} shape=\"square\" alt={status} />\n        </Tooltip>\n      );\n    case 'HALF':\n      return (\n        <Tooltip title={<CrimeGuessStatus status={status} withDescription />} color=\"white\">\n          <IconAvatar icon={<BoxOneIcon />} shape=\"square\" alt={status} />\n        </Tooltip>\n      );\n    case 'WRONG':\n      return (\n        <Tooltip title={<CrimeGuessStatus status={status} withDescription />} color=\"white\">\n          <IconAvatar icon={<BoxMinusIcon />} shape=\"square\" alt={status} />\n        </Tooltip>\n      );\n    case 'WRONG_GROUP':\n      return (\n        <Tooltip title={<CrimeGuessStatus status={status} withDescription />} color=\"white\">\n          <IconAvatar icon={<BoxXIcon />} shape=\"square\" alt={status} />\n        </Tooltip>\n      );\n    default:\n      return <span>•</span>;\n  }\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, Collapse, Space } from 'antd';\nimport { TrophyOutlined } from '@ant-design/icons';\n// Utils\nimport { getAnimationClass, getLastItem } from 'utils/helpers';\nimport { isEntryLocked } from './utils/helpers';\n// Hooks\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Components\nimport { Crime } from './components/Crime';\nimport { GroupedItemsBoard } from './components/GroupedItemsBoard';\nimport { ScoringMessage } from './components/RulesBlobs';\nimport { PlayersCards } from './components/PlayersCards';\nimport { CrimeGuessStatus } from './components/CrimeGuessStatus';\nimport { ResultsTable } from './components/ResultsTable';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { PopoverRule } from 'components/rules';\nimport { TimedButton } from 'components/buttons';\n\ntype StepRevealProps = {\n  user: GamePlayer;\n  players: GamePlayers;\n  items: ItemsDict;\n  groupedItems: GroupedItems;\n  scenes: ScenesDict;\n  scenesOrder: string[];\n  crimes: Crime[];\n  onSeeRanking: GenericFunction;\n  round: GameRound;\n  results: HResults;\n  isFirstRunThrough: boolean;\n};\n\nexport function StepReveal({\n  user,\n  groupedItems,\n  items,\n  players,\n  scenes,\n  scenesOrder,\n  crimes,\n  onSeeRanking,\n  round,\n  results,\n  isFirstRunThrough,\n}: StepRevealProps) {\n  useTemporarilyHidePlayersBar();\n\n  const [activePlayerId, setActivePlayerId] = useState<PlayerId>('');\n\n  const playerCount = Object.keys(players).length;\n\n  const activeCrime = crimes.find((crime) => crime.playerId === activePlayerId);\n  const isOwnCrime = activePlayerId === user.id;\n  const history: GuessHistoryEntry[] = user.history?.[(activeCrime! ?? {})?.playerId] ?? [];\n  const latestHistoryEntry = getLastItem(history);\n  const isLocked = isEntryLocked(latestHistoryEntry);\n\n  return (\n    <Step>\n      <Title>\n        <Translate pt=\"Resultado\" en=\"Results\" />\n      </Title>\n\n      <PopoverRule content={<ScoringMessage round={round} />} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Veja aqui como todos os jogadores foram. Passe o mouse nos ícones para saber mais detalhes.\n              <br />\n              As colunas são os crimes e as linhas são os chutes dessa rodada de cada jogador.\n            </>\n          }\n          en={\n            <>\n              See how all players did. Hover the icons to see details.\n              <br />\n              The columns are the crimes and the rows are the guesses for each player.\n            </>\n          }\n        />\n        \n        <ResultsTable players={players} results={results} />\n        \n        <Translate\n          pt={\n            <>\n              Você acertou {user.correctCrimes} pares e está com um total (secreto) de{' '}\n              {user.score + user.secretScore} pontos.\n            </>\n          }\n          en={\n            <>\n              You guesses {user.correctCrimes} crimes and have a (secret) total of{' '}\n              {user.score + user.secretScore} points.\n            </>\n          }\n        />\n      </Instruction>\n\n      <Space className=\"space-container\" align=\"center\">\n        <Collapse>\n          <Collapse.Panel\n            key=\"weapons-evidences\"\n            header={<Translate pt=\" Ver todas Armas e Evidências\" en=\"See all Weapons and Evidence\" />}\n          >\n            <GroupedItemsBoard\n              items={items}\n              weaponId={user.weaponId}\n              evidenceId={user.evidenceId}\n              groupedItems={groupedItems}\n            />\n          </Collapse.Panel>\n        </Collapse>\n      </Space>\n\n      <PlayersCards\n        user={user}\n        activePlayerId={activePlayerId}\n        setActivePlayerId={setActivePlayerId}\n        players={players}\n        guesses={{}}\n        history={user.history}\n      />\n\n      {Boolean(activePlayerId) && (\n        <Instruction\n          contained\n          className={!isLocked && !isOwnCrime ? getAnimationClass('tada') : ''}\n          key={`instruction-status-${activePlayerId}`}\n        >\n          {Boolean(latestHistoryEntry) ? (\n            <CrimeGuessStatus status={latestHistoryEntry.status} withDescription />\n          ) : isOwnCrime ? (\n            <Translate pt=\"Este é o seu próprio crime\" en=\"This is your own crime\" />\n          ) : (\n            ''\n          )}\n        </Instruction>\n      )}\n\n      {activeCrime && (\n        <div\n          className={getAnimationClass('slideInUp', undefined, 'fast')}\n          key={`crime-by-${activeCrime.playerId}`}\n        >\n          <Crime\n            crime={activeCrime}\n            scenes={scenes}\n            scenesOrder={scenesOrder}\n            items={items}\n            history={user.history[activeCrime.playerId]}\n            player={players[activeCrime.playerId]}\n            selectedWeaponId={isOwnCrime ? user.weaponId : latestHistoryEntry.weaponId}\n            selectedEvidenceId={isOwnCrime ? user.evidenceId : latestHistoryEntry.evidenceId}\n            isLocked={isLocked}\n          />\n        </div>\n      )}\n\n      <Space className=\"space-container\" align=\"center\">\n        {isFirstRunThrough ? (\n          <TimedButton\n            onClick={onSeeRanking}\n            onExpire={onSeeRanking}\n            duration={Math.min(playerCount * 10, 60)}\n            icon={<TrophyOutlined />}\n          >\n            <Translate pt=\"Ver Ranking\" en=\"See Ranking\" />\n          </TimedButton>\n        ) : (\n          <Button onClick={onSeeRanking} icon={<TrophyOutlined />}>\n            <Translate pt=\"Ver Ranking\" en=\"See Ranking\" />\n          </Button>\n        )}\n      </Space>\n    </Step>\n  );\n}\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Components\nimport { VIPNextPhaseButton } from 'components/vip';\nimport { Translate } from 'components/language';\nimport { StepRankingWrapper } from 'components/ranking';\n\ntype StepRankingProps = {\n  ranking: GameRanking;\n  players: GamePlayers;\n  goToPreviousStep: GenericFunction;\n  round: GameRound;\n};\n\nexport function StepRanking({ ranking, players, goToPreviousStep, round }: StepRankingProps) {\n  const roundPoints = round.total - round.current + 1;\n\n  return (\n    <StepRankingWrapper\n      players={players}\n      ranking={ranking}\n      gainedPointsDescriptions={[\n        <Translate\n          pt={<>Pares corretos ganham {roundPoints} pontos nessa rodada. 1 ponto a menos na próxima.</>}\n          en={<>Correct pairs get {roundPoints} points this round. 1 point less next round.</>}\n        />,\n      ]}\n    >\n      <Space className=\"space-container\" align=\"center\">\n        <Button onClick={goToPreviousStep}>\n          <Translate pt=\"Ver resultado novamente\" en=\"See results again\" />\n        </Button>\n      </Space>\n      <VIPNextPhaseButton round={round} />\n    </StepRankingWrapper>\n  );\n}\n","import { useEffect, useState } from 'react';\n// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { RankIcon } from 'icons/RankIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { StepReveal } from './StepReveal';\nimport { ScoringMessage } from './components/RulesBlobs';\nimport { StepRanking } from './StepRanking';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\n\nfunction PhaseReveal({ players, state, info }: PhaseProps) {\n  const { step, goToNextStep, goToPreviousStep } = useStep(0);\n  const user = useUser(players, state);\n\n  const [isFirstRunThrough, setIsFirstRunThrough] = useState(true);\n\n  // Changes isFirstGalleryRunThrough property which disables controls, after the first gallery run through\n  useEffect(() => {\n    if (isFirstRunThrough && step > 1) {\n      setIsFirstRunThrough(false);\n    }\n  }, [step, isFirstRunThrough]);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.CRIMES_HEDIONDOS.REVEAL}>\n      <StepSwitcher step={step} conditions={[!user.isReady, !user.isReady, !user.isReady]} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<RankIcon />}\n          title={<Translate pt=\"Resultado\" en=\"Results\" />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          type=\"block\"\n        >\n          <Instruction>\n            <ScoringMessage round={state.round} />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepReveal\n          user={user}\n          groupedItems={state.groupedItems}\n          items={state.items}\n          players={players}\n          scenes={state.scenes}\n          scenesOrder={state.scenesOrder}\n          crimes={state.crimes}\n          onSeeRanking={goToNextStep}\n          round={state.round}\n          results={state.results}\n          isFirstRunThrough={isFirstRunThrough}\n        />\n\n        {/* Step 2 */}\n        <StepRanking\n          ranking={state.ranking}\n          players={players}\n          goToPreviousStep={goToPreviousStep}\n          round={state.round}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseReveal;\n","import { orderBy } from 'lodash';\n// Hooks\nimport { useUser } from 'hooks/useUser';\n// Icons\nimport { TrophyIcon } from 'icons/TrophyIcon';\n// Components\nimport { GameOverWrapper } from 'components/game-over';\nimport { Crime } from './components/Crime';\n\nfunction PhaseGameOver({ state, players, info }: PhaseProps) {\n  const crimes: Crime[] = state.crimes;\n  const user = useUser(players, state);\n\n  return (\n    <GameOverWrapper info={info} state={state} players={players} announcementIcon={<TrophyIcon />}>\n      <ul>\n        {orderBy(crimes, ['playerId']).map((crime) => (\n          <Crime\n            key={`crime-by-${crime.playerId}`}\n            crime={crime}\n            items={state.items}\n            player={players[crime.playerId]}\n            scenes={state.scenes}\n            scenesOrder={state.scenesOrder}\n            selectedEvidenceId={crime.evidenceId}\n            selectedWeaponId={crime.weaponId}\n            history={user.history?.[crime.playerId]}\n          />\n        ))}\n      </ul>\n    </GameOverWrapper>\n  );\n}\n\nexport default PhaseGameOver;\n","import { ConfigProvider } from 'antd';\n// Constants\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport PhaseCrimeSelection from './PhaseCrimeSelection';\nimport PhaseSceneMarking from './PhaseSceneMarking';\nimport PhaseGuessing from './PhaseGuessing';\nimport PhaseReveal from './PhaseReveal';\nimport PhaseGameOver from './PhaseGameOver';\n// Sass\nimport './crimes-hediondos.scss';\n\nfunction getActiveComponent(phase: string) {\n  switch (phase) {\n    case PHASES.DEFAULT.LOBBY:\n      return PhaseLobby;\n    case PHASES.DEFAULT.RULES:\n      return PhaseRules;\n    case PHASES.DEFAULT.SETUP:\n      return PhaseSetup;\n    case PHASES.CRIMES_HEDIONDOS.CRIME_SELECTION:\n      return PhaseCrimeSelection;\n    case PHASES.CRIMES_HEDIONDOS.SCENE_MARKING:\n      return PhaseSceneMarking;\n    case PHASES.CRIMES_HEDIONDOS.GUESSING:\n      return PhaseGuessing;\n    case PHASES.CRIMES_HEDIONDOS.REVEAL:\n      return PhaseReveal;\n    case PHASES.DEFAULT.GAME_OVER:\n      return PhaseGameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionCrimesHediondos() {\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorPrimary: THEME_COLORS.BLOOD,\n          colorLink: THEME_COLORS.BLOOD,\n        },\n      }}\n    >\n      <Session gameCollection={GAME_COLLECTION.CRIMES_HEDIONDOS} getActiveComponent={getActiveComponent} />\n    </ConfigProvider>\n  );\n}\n\nexport default SessionCrimesHediondos;\n","export function CrimeSceneIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fd445f\"\n        d=\"M471.367 338.833c9.15 0 16.567 7.417 16.567 16.567s-7.417 16.567-16.567 16.567H380.25c-9.15 0-16.567 7.417-16.567 16.567s7.417 16.567 16.567 16.567h24.85c9.15 0 16.567 7.417 16.567 16.567s-7.417 16.567-16.567 16.567H272.567c-9.15 0-16.567 7.417-16.567 16.567s7.417 16.567 16.567 16.567h16.567c9.15 0 16.567 7.417 16.567 16.567s-7.417 16.567-16.567 16.567H123.467c-9.15 0-16.567-7.417-16.567-16.567 0-9.149 7.417-16.567 16.567-16.567h66.267c9.15 0 16.567-7.417 16.567-16.567 0-9.149-7.417-16.567-16.567-16.567h-66.267c-9.15 0-16.567-7.417-16.567-16.567s7.417-16.567 16.567-16.567h16.567c9.15 0 16.567-7.417 16.567-16.567s-7.417-16.567-16.567-16.567h-49.7c-9.149 0-16.567-7.417-16.567-16.567s7.417-16.567 16.567-16.567z\"\n      ></path>\n      <path fill=\"#ff8c59\" d=\"M313.667 222.867h63.095c5.045 0 8.918-4.471 8.199-9.465L356.422 15.363z\"></path>\n      <path\n        fill=\"#ffc649\"\n        d=\"M348.148 7.5H166.061a8.283 8.283 0 00-8.211 7.189l-29.674 222.555c-1.324 9.931 6.402 18.756 16.421 18.756H309.97c8.303 0 15.324-6.147 16.421-14.377l1.501-11.256-1.06-7.533 3.06-7.466 26.465-198.489c.664-4.967-3.199-9.379-8.209-9.379z\"\n      ></path>\n      <path\n        fill=\"#ffa742\"\n        d=\"M348.148 7.5h-23c5.01 0 8.873 4.412 8.211 9.378l-29.966 224.745c-1.097 8.23-8.118 14.377-16.421 14.377h23c8.303 0 15.324-6.147 16.421-14.377l1.501-11.256-1.06-7.533 3.06-7.466 26.465-198.489c.662-4.967-3.201-9.379-8.211-9.379z\"\n      ></path>\n      <path\n        fill=\"#f6f6f6\"\n        d=\"M225.076 40.633c-9.415 0-16.996 7.854-16.548 17.368.42 8.91 8.095 15.766 17.016 15.766h7.816a8.282 8.282 0 018.283 8.283v74.082c0 8.92 6.855 16.596 15.766 17.016 9.514.448 17.368-7.133 17.368-16.548V57.2c0-9.15-7.417-16.567-16.567-16.567z\"\n      ></path>\n      <path\n        fill=\"#e2dff4\"\n        d=\"M258.209 40.633h-23c9.15 0 16.567 7.417 16.567 16.567v99.4c0 4.638-1.912 8.826-4.984 11.833 2.773 2.737 6.466 4.519 10.616 4.715 9.514.448 17.368-7.133 17.368-16.548V57.2c0-9.15-7.418-16.567-16.567-16.567z\"\n      ></path>\n      <path\n        fill=\"#fd445f\"\n        d=\"M57.2 405.1H40.633c-9.149 0-16.567 7.417-16.567 16.567s7.417 16.567 16.567 16.567H57.2c9.15 0 16.567-7.417 16.567-16.567S66.35 405.1 57.2 405.1zm314.767 66.267H355.4c-9.15 0-16.567 7.417-16.567 16.567s7.417 16.567 16.567 16.567h16.567c9.15 0 16.567-7.417 16.567-16.567-.001-9.15-7.418-16.567-16.567-16.567z\"\n      ></path>\n      <path fill=\"#bebcdd\" d=\"M266.933 363.683v-66.267h44.4v66.267z\"></path>\n      <path\n        fill=\"#e2dff4\"\n        d=\"M338.833 297.133v66.833a8 8 0 01-8 8H313.7a8 8 0 01-8-8v-66.833a8 8 0 018-8h17.133a8 8 0 018 8zm-66.266 0v66.833a8 8 0 01-8 8h-51.4c-22.091 0-40-17.909-40-40v-2.833c0-22.091 17.909-40 40-40h51.4a8 8 0 018 8z\"\n      ></path>\n      <path\n        fill=\"#bebcdd\"\n        d=\"M330.833 289.133H313.7a7.962 7.962 0 00-2.933.563c2.965 1.171 5.067 4.056 5.067 7.437v66.833a7.996 7.996 0 01-5.067 7.437 7.966 7.966 0 002.933.563h17.133a8 8 0 008-8v-66.833a8 8 0 00-8-8z\"\n      ></path>\n      <path\n        fill=\"#e30f5a\"\n        d=\"M380.25 371.967h-23c-9.15 0-16.567 7.417-16.567 16.567s7.417 16.567 16.567 16.567h23c-9.15 0-16.567-7.417-16.567-16.567s7.417-16.567 16.567-16.567zm-91.117 99.4h-16.567c-9.15 0-16.567-7.417-16.567-16.567 0-9.149 7.417-16.567 16.567-16.567h-23c-9.149 0-16.567 7.417-16.567 16.567s7.417 16.567 16.567 16.567h16.567c9.15 0 16.567 7.417 16.567 16.567s-7.417 16.567-16.567 16.567h23c9.15 0 16.567-7.417 16.567-16.567s-7.417-16.567-16.567-16.567zm182.234-132.534h-23c9.149 0 16.567 7.417 16.567 16.567s-7.417 16.567-16.567 16.567h23c9.149 0 16.567-7.417 16.567-16.567-.001-9.15-7.418-16.567-16.567-16.567zM405.1 405.1h-23c9.15 0 16.567 7.417 16.567 16.567s-7.417 16.567-16.567 16.567h23c9.15 0 16.567-7.417 16.567-16.567S414.25 405.1 405.1 405.1z\"\n      ></path>\n      <g fill=\"#e30f5a\">\n        <path d=\"M371.967 471.367H355.4c-1.25 0-2.463.15-3.633.412 7.4 1.658 12.933 8.255 12.933 16.154 0 7.9-5.534 14.496-12.933 16.154a16.6 16.6 0 003.633.412h16.567c9.15 0 16.567-7.417 16.567-16.567-.001-9.148-7.418-16.565-16.567-16.565zM57.2 405.1H40.633a16.64 16.64 0 00-3.217.318c7.609 1.498 13.35 8.2 13.35 16.249 0 8.048-5.741 14.751-13.35 16.249 1.041.205 2.115.318 3.217.318H57.2c9.15 0 16.567-7.417 16.567-16.567S66.35 405.1 57.2 405.1z\"></path>\n      </g>\n      <g>\n        <path d=\"M471.367 331.333H346.333v-34.2c0-8.547-6.953-15.5-15.5-15.5H313.7c-5.941 0-11.105 3.364-13.706 8.283h-21.721c-2.601-4.919-7.765-8.283-13.706-8.283h-51.399c-26.191 0-47.5 21.309-47.5 47.5v2.2h-22.639c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h24.865c6.104 19.19 24.089 33.133 45.274 33.133h51.399c5.941 0 11.106-3.364 13.706-8.284h21.721c2.601 4.92 7.765 8.284 13.706 8.284h17.133c8.547 0 15.5-6.953 15.5-15.5v-17.633h125.034c4.999 0 9.066 4.067 9.066 9.066 0 5-4.067 9.067-9.066 9.067H380.25c-13.271 0-24.066 10.796-24.066 24.066S366.979 412.6 380.25 412.6h24.85c5 0 9.067 4.067 9.067 9.066s-4.067 9.067-9.067 9.067H272.566c-13.271 0-24.066 10.796-24.066 24.066 0 13.271 10.796 24.067 24.066 24.067h16.566c5 0 9.067 4.067 9.067 9.066s-4.067 9.067-9.067 9.067H123.467c-4.999 0-9.066-4.067-9.066-9.067 0-4.999 4.067-9.066 9.066-9.066h66.267c13.271 0 24.066-10.796 24.066-24.067 0-13.27-10.796-24.066-24.066-24.066h-66.267c-4.999 0-9.066-4.067-9.066-9.067 0-4.999 4.067-9.066 9.066-9.066h16.566c13.27 0 24.066-10.796 24.066-24.067s-10.796-24.066-24.066-24.066h-49.7c-4.999 0-9.066-4.067-9.066-9.067 0-4.999 4.067-9.066 9.066-9.066h22.694c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5H90.333c-13.271 0-24.066 10.796-24.066 24.066s10.796 24.067 24.066 24.067h49.7c4.999 0 9.066 4.067 9.066 9.066 0 5-4.067 9.067-9.066 9.067h-16.566c-13.271 0-24.066 10.796-24.066 24.066 0 13.271 10.796 24.067 24.066 24.067h66.267c4.999 0 9.066 4.067 9.066 9.066s-4.067 9.067-9.066 9.067h-66.267c-13.271 0-24.066 10.796-24.066 24.066 0 13.271 10.796 24.067 24.066 24.067h165.666c13.27 0 24.067-10.796 24.067-24.067 0-13.27-10.797-24.066-24.067-24.066h-16.566c-4.999 0-9.066-4.067-9.066-9.067 0-4.999 4.067-9.066 9.066-9.066H405.1c13.27 0 24.067-10.796 24.067-24.067 0-13.27-10.797-24.066-24.067-24.066h-24.85c-4.999 0-9.066-4.067-9.066-9.067 0-4.999 4.067-9.066 9.066-9.066h91.117c13.271 0 24.066-10.796 24.066-24.067s-10.795-24.067-24.066-24.067zm-290.7.634v-2.833c0-17.92 14.579-32.5 32.5-32.5h2.2v67.833h-2.2c-17.921 0-32.5-14.58-32.5-32.5zm84.399 32a.5.5 0 01-.5.5h-34.199v-67.833h34.199a.5.5 0 01.5.5v66.55zm15-59.05H298.2v51.267h-18.134zm51.267 59.05a.5.5 0 01-.5.5H313.7a.5.5 0 01-.5-.5v-66.834a.5.5 0 01.5-.5h17.133a.5.5 0 01.5.5zM257.056 180.64c.393.019.783.028 1.173.028 6.216 0 12.069-2.338 16.592-6.652a24.184 24.184 0 007.455-17.415V57.2c0-13.271-10.796-24.067-24.066-24.067h-33.134a24.176 24.176 0 00-17.414 7.455c-4.585 4.806-6.938 11.115-6.625 17.766.605 12.848 11.37 22.913 24.507 22.913h7.816c.432 0 .783.352.783.783v74.082c0 13.138 10.064 23.902 22.913 24.508zM233.359 66.267h-7.816c-5.027 0-9.3-3.866-9.523-8.618a9.011 9.011 0 012.494-6.706 8.99 8.99 0 016.561-2.81h33.134c4.999 0 9.066 4.067 9.066 9.067v99.4a8.99 8.99 0 01-2.81 6.562 9.02 9.02 0 01-6.704 2.494c-4.753-.224-8.619-4.497-8.619-9.524V82.05c.001-8.703-7.08-15.783-15.783-15.783z\"></path>\n        <path d=\"M144.598 263.5h165.373c12.013 0 22.269-8.979 23.856-20.886l1.633-12.247h41.302c4.581 0 8.93-1.986 11.929-5.449a15.77 15.77 0 003.693-12.586L363.879 14.528A15.78 15.78 0 00348.147 0H223.509c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h124.639c.236 0 .435.09.59.268a.75.75 0 01.186.619l-26.597 199.48h-31.768v-.783c0-4.142-3.357-7.5-7.5-7.5s-7.5 3.358-7.5 7.5v.783h-42.983v-.783c0-4.142-3.357-7.5-7.5-7.5s-7.5 3.358-7.5 7.5v.783h-42.983v-.783c0-4.142-3.357-7.5-7.5-7.5s-7.5 3.358-7.5 7.5v.783H138.66L165.285 15.68a.785.785 0 01.776-.68h27.447c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5h-27.447c-7.878 0-14.604 5.889-15.645 13.697l-29.674 222.555a24.071 24.071 0 005.748 19.035 24.07 24.07 0 0018.108 8.213zM356.783 70.444l20.754 144.026a.75.75 0 01-.184.626.75.75 0 01-.592.27H337.46zm-36.456 159.923l-1.369 10.265c-.598 4.486-4.462 7.869-8.987 7.869H144.598a8.947 8.947 0 01-6.821-3.094 8.946 8.946 0 01-2.165-7.171l1.049-7.868h183.666zM57.2 397.6H40.633c-13.271 0-24.066 10.796-24.066 24.066 0 13.271 10.796 24.067 24.066 24.067H57.2c13.271 0 24.066-10.796 24.066-24.067.001-13.269-10.795-24.066-24.066-24.066zm0 33.133H40.633c-4.999 0-9.066-4.067-9.066-9.067 0-4.999 4.067-9.066 9.066-9.066H57.2c4.999 0 9.066 4.067 9.066 9.066.001 5-4.067 9.067-9.066 9.067zm314.767 33.134H355.4c-13.27 0-24.067 10.796-24.067 24.066 0 13.271 10.797 24.067 24.067 24.067h16.566c13.271 0 24.066-10.796 24.066-24.067.001-13.27-10.795-24.066-24.065-24.066zm0 33.133H355.4c-5 0-9.067-4.067-9.067-9.067 0-4.999 4.067-9.066 9.067-9.066h16.566c4.999 0 9.066 4.067 9.066 9.066.001 5-4.066 9.067-9.065 9.067z\"></path>\n      </g>\n    </svg>\n  );\n}\n","export function LoupeIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffd88e\"\n        d=\"M19.45 492.55a32.26 32.26 0 0045.63 0l126.36-126.36-45.63-45.63L19.45 446.92a32.26 32.26 0 000 45.63z\"\n      ></path>\n      <path\n        fill=\"#fff\"\n        d=\"M169.13 259.72l-23.82 23.83a25.8 25.8 0 000 36.5l46.64 46.64a25.8 25.8 0 0036.5 0l23.83-23.82z\"\n      ></path>\n      <circle cx=\"327.65\" cy=\"184.35\" r=\"174.35\" fill=\"#a0c8ff\"></circle>\n      <circle cx=\"327.65\" cy=\"184.35\" r=\"122\" fill=\"#dfecff\"></circle>\n      <path d=\"M327.65 52.35c-72.78 0-132 59.21-132 132s59.22 132 132 132 132-59.22 132-132c0-72.79-59.21-132-132-132zm0 20c61.76 0 112 50.24 112 112s-50.24 112-112 112-112-50.24-112-112 50.25-112 112-112z\"></path>\n      <path d=\"M388.6 123.4a10 10 0 01-14.15 14.14c-12.5-12.5-29.12-19.38-46.8-19.38s-34.3 6.88-46.8 19.38a9.97 9.97 0 01-14.14 0 10 10 0 010-14.14 85.62 85.62 0 0160.94-25.24 85.63 85.63 0 0160.95 25.24z\"></path>\n      <path d=\"M0 469.74c0 11.29 4.4 21.9 12.38 29.88S30.98 512 42.26 512s21.9-4.4 29.89-12.38L192.3 379.46a35.83 35.83 0 0043.21-5.7l19.84-19.84a183.32 183.32 0 0072.3 14.78C429.3 368.7 512 286 512 184.35c0-83.63-56.4-156.94-137.18-178.26a10 10 0 00-5.1 19.34c72 19 122.28 84.36 122.28 158.92 0 90.62-73.73 164.35-164.35 164.35S163.3 274.97 163.3 184.35c0-74.56 50.28-139.91 122.28-158.92a10 10 0 00-5.1-19.33C199.7 27.42 143.3 100.72 143.3 184.35c0 25.64 5.27 50.08 14.78 72.29l-19.85 19.84a35.87 35.87 0 00-5.7 43.21L12.39 439.85A41.99 41.99 0 000 469.74zm199.02-110.12l-46.64-46.64a15.83 15.83 0 010-22.36l15.1-15.1c16.4 28.7 40.3 52.6 69 69l-15.1 15.1a15.83 15.83 0 01-22.36 0zM20 469.74c0-5.95 2.32-11.54 6.52-15.74l119.3-119.3 31.48 31.49L58 485.48c-4.2 4.2-9.8 6.52-15.74 6.52a22.11 22.11 0 01-15.74-6.52c-4.2-4.2-6.52-9.8-6.52-15.74z\"></path>\n      <path d=\"M327.65 20c-2.63 0-5.21-1.07-7.07-2.93-1.86-1.86-2.93-4.44-2.93-7.07s1.07-5.21 2.93-7.07S325.02 0 327.65 0s5.21 1.07 7.07 2.93 2.93 4.44 2.93 7.07-1.07 5.21-2.93 7.07-4.44 2.93-7.07 2.93z\"></path>\n    </svg>\n  );\n}\n","// This icon file is generated automatically.\nvar CloudUploadOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M518.3 459a8 8 0 00-12.6 0l-112 141.7a7.98 7.98 0 006.3 12.9h73.9V856c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V613.7H624c6.7 0 10.4-7.7 6.3-12.9L518.3 459z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M811.4 366.7C765.6 245.9 648.9 160 512.2 160S258.8 245.8 213 366.6C127.3 389.1 64 467.2 64 560c0 110.5 89.5 200 199.9 200H304c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8h-40.1c-33.7 0-65.4-13.4-89-37.7-23.5-24.2-36-56.8-34.9-90.6.9-26.4 9.9-51.2 26.2-72.1 16.7-21.3 40.1-36.8 66.1-43.7l37.9-9.9 13.9-36.6c8.6-22.8 20.6-44.1 35.7-63.4a245.6 245.6 0 0152.4-49.9c41.1-28.9 89.5-44.2 140-44.2s98.9 15.3 140 44.2c19.9 14 37.5 30.8 52.4 49.9 15.1 19.3 27.1 40.7 35.7 63.4l13.8 36.5 37.8 10C846.1 454.5 884 503.8 884 560c0 33.1-12.9 64.3-36.3 87.7a123.07 123.07 0 01-87.6 36.3H720c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h40.1C870.5 760 960 670.5 960 560c0-92.7-63.1-170.7-148.6-193.3z\" } }] }, \"name\": \"cloud-upload\", \"theme\": \"outlined\" };\nexport default CloudUploadOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloudUploadOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloudUploadOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar CloudUploadOutlined = function CloudUploadOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CloudUploadOutlinedSvg\n  }));\n};\nCloudUploadOutlined.displayName = 'CloudUploadOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloudUploadOutlined);","// This icon file is generated automatically.\nvar CrownFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M899.6 276.5L705 396.4 518.4 147.5a8.06 8.06 0 00-12.9 0L319 396.4 124.3 276.5c-5.7-3.5-13.1 1.2-12.2 7.9L188.5 865c1.1 7.9 7.9 14 16 14h615.1c8 0 14.9-6 15.9-14l76.4-580.6c.8-6.7-6.5-11.4-12.3-7.9zM512 734.2c-62.1 0-112.6-50.5-112.6-112.6S449.9 509 512 509s112.6 50.5 112.6 112.6S574.1 734.2 512 734.2zm0-160.9c-26.6 0-48.2 21.6-48.2 48.3 0 26.6 21.6 48.3 48.2 48.3s48.2-21.6 48.2-48.3c0-26.6-21.6-48.3-48.2-48.3z\" } }] }, \"name\": \"crown\", \"theme\": \"filled\" };\nexport default CrownFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CrownFilledSvg from \"@ant-design/icons-svg/es/asn/CrownFilled\";\nimport AntdIcon from '../components/AntdIcon';\nvar CrownFilled = function CrownFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CrownFilledSvg\n  }));\n};\nCrownFilled.displayName = 'CrownFilled';\nexport default /*#__PURE__*/React.forwardRef(CrownFilled);","// This icon file is generated automatically.\nvar EnvironmentOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M854.6 289.1a362.49 362.49 0 00-79.9-115.7 370.83 370.83 0 00-118.2-77.8C610.7 76.6 562.1 67 512 67c-50.1 0-98.7 9.6-144.5 28.5-44.3 18.3-84 44.5-118.2 77.8A363.6 363.6 0 00169.4 289c-19.5 45-29.4 92.8-29.4 142 0 70.6 16.9 140.9 50.1 208.7 26.7 54.5 64 107.6 111 158.1 80.3 86.2 164.5 138.9 188.4 153a43.9 43.9 0 0022.4 6.1c7.8 0 15.5-2 22.4-6.1 23.9-14.1 108.1-66.8 188.4-153 47-50.4 84.3-103.6 111-158.1C867.1 572 884 501.8 884 431.1c0-49.2-9.9-97-29.4-142zM512 880.2c-65.9-41.9-300-207.8-300-449.1 0-77.9 31.1-151.1 87.6-206.3C356.3 169.5 431.7 139 512 139s155.7 30.5 212.4 85.9C780.9 280 812 353.2 812 431.1c0 241.3-234.1 407.2-300 449.1zm0-617.2c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm79.2 255.2A111.6 111.6 0 01512 551c-29.9 0-58-11.7-79.2-32.8A111.6 111.6 0 01400 439c0-29.9 11.7-58 32.8-79.2C454 338.6 482.1 327 512 327c29.9 0 58 11.6 79.2 32.8C612.4 381 624 409.1 624 439c0 29.9-11.6 58-32.8 79.2z\" } }] }, \"name\": \"environment\", \"theme\": \"outlined\" };\nexport default EnvironmentOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EnvironmentOutlinedSvg from \"@ant-design/icons-svg/es/asn/EnvironmentOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar EnvironmentOutlined = function EnvironmentOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: EnvironmentOutlinedSvg\n  }));\n};\nEnvironmentOutlined.displayName = 'EnvironmentOutlined';\nexport default /*#__PURE__*/React.forwardRef(EnvironmentOutlined);","// This icon file is generated automatically.\nvar LockFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM540 701v53c0 4.4-3.6 8-8 8h-40c-4.4 0-8-3.6-8-8v-53a48.01 48.01 0 1156 0zm152-237H332V240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224z\" } }] }, \"name\": \"lock\", \"theme\": \"filled\" };\nexport default LockFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LockFilledSvg from \"@ant-design/icons-svg/es/asn/LockFilled\";\nimport AntdIcon from '../components/AntdIcon';\nvar LockFilled = function LockFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: LockFilledSvg\n  }));\n};\nLockFilled.displayName = 'LockFilled';\nexport default /*#__PURE__*/React.forwardRef(LockFilled);","// This icon file is generated automatically.\nvar QuestionCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 708c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zm62.9-219.5a48.3 48.3 0 00-30.9 44.8V620c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-21.5c0-23.1 6.7-45.9 19.9-64.9 12.9-18.6 30.9-32.8 52.1-40.9 34-13.1 56-41.6 56-72.7 0-44.1-43.1-80-96-80s-96 35.9-96 80v7.6c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V420c0-39.3 17.2-76 48.4-103.3C430.4 290.4 470 276 512 276s81.6 14.5 111.6 40.7C654.8 344 672 380.7 672 420c0 57.8-38.1 109.8-97.1 132.5z\" } }] }, \"name\": \"question-circle\", \"theme\": \"filled\" };\nexport default QuestionCircleFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport QuestionCircleFilledSvg from \"@ant-design/icons-svg/es/asn/QuestionCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\nvar QuestionCircleFilled = function QuestionCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: QuestionCircleFilledSvg\n  }));\n};\nQuestionCircleFilled.displayName = 'QuestionCircleFilled';\nexport default /*#__PURE__*/React.forwardRef(QuestionCircleFilled);","// This icon file is generated automatically.\nvar TrophyOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M868 160h-92v-40c0-4.4-3.6-8-8-8H256c-4.4 0-8 3.6-8 8v40h-92a44 44 0 00-44 44v148c0 81.7 60 149.6 138.2 162C265.7 630.2 359 721.7 476 734.5v105.2H280c-17.7 0-32 14.3-32 32V904c0 4.4 3.6 8 8 8h512c4.4 0 8-3.6 8-8v-32.3c0-17.7-14.3-32-32-32H548V734.5C665 721.7 758.3 630.2 773.8 514 852 501.6 912 433.7 912 352V204a44 44 0 00-44-44zM184 352V232h64v207.6a91.99 91.99 0 01-64-87.6zm520 128c0 49.1-19.1 95.4-53.9 130.1-34.8 34.8-81 53.9-130.1 53.9h-16c-49.1 0-95.4-19.1-130.1-53.9-34.8-34.8-53.9-81-53.9-130.1V184h384v296zm136-128c0 41-26.9 75.8-64 87.6V232h64v120z\" } }] }, \"name\": \"trophy\", \"theme\": \"outlined\" };\nexport default TrophyOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport TrophyOutlinedSvg from \"@ant-design/icons-svg/es/asn/TrophyOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar TrophyOutlined = function TrophyOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: TrophyOutlinedSvg\n  }));\n};\nTrophyOutlined.displayName = 'TrophyOutlined';\nexport default /*#__PURE__*/React.forwardRef(TrophyOutlined);","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}"],"names":["GainedPoint","gainedPoint","order","description","isPositive","isNegative","className","clsx","title","pt","en","color","GainedPoints","gainedPoints","playerId","gainedPointsDescriptions","points","Array","isArray","map","index","RankingBoard","players","ranking","hideGainedPoints","delay","useState","displayStep","setDisplayStep","sortedRanking","setSortedRanking","reRank","setReRank","useDimensions","height","maxPoints","useMemo","Math","max","scores","newScore","seconds","useCountdown","duration","autoStart","onExpire","useEffectOnce","positions","lastPosition","lastPoints","rankByFinalScoreDict","orderBy","reduce","acc","entry","rankByPreviousScore","tempSortedRanking","newEntry","position","previousScore","useEffect","style","length","hPosition","id","top","CrownFilled","avatarId","name","undefined","StepRankingWrapper","children","subtitle","useTemporarilyHidePlayersBar","CaretUpOutlined","mockGuesses","groupedItems","user","Object","values","player","historyForThisTarget","history","lastGuess","getLastItem","status","weaponId","evidenceId","group","groupIndex","weapons","filter","e","includes","evidences","previousPicksDict","SEPARATOR","pair","getRandomItem","split","previouslyWrongGroups","t","guess","push","availableGroups","i","randomGroup","WelcomeMessage","contained","GuessMessage","ScoringMessage","round","total","current","ItemCard","item","cardWidth","activeColor","preview","isSelected","language","useLanguage","isDebugEnabled","useDevFeatures","borderColor","backgroundColor","content","toUpperCase","type","maxWidth","imageId","ContinueButton","onClick","disabled","props","size","StepItemsSelection","announcement","items","selections","updateSelections","setWeaponId","setEvidenceId","useCardWidth","userItems","itemGroupIndex","itemId","align","randomWeaponId","randomEvidenceId","shuffle","forEach","SceneTile","tile","onSelectValue","isActive","icon","CheckCircleFilled","tileId","value","PlusSquareFilled","ref","React","AntdIcon","_objectSpread","PlusSquareFilledSvg","displayName","SelectedItems","fadeWeapon","fadeEvidence","ResetButton","goToStep","StepCauseOfDeathSelection","causeOfDeathTile","causeOfDeathIndex","setCauseOfDeathIndex","payload","causeOfDeath","StepLocationSelection","locationTiles","location","setLocation","onSelectItem","locationTile","locationIndex","StepReviewCrime","reasonForEvidenceTile","onSubmitCrime","updateSelection","translate","find","reasonForEvidence","CloudUploadOutlined","readyText","readyTextPlural","StepReasonForEvidence","reasonForEvidenceIndex","setReasonForEvidenceIndex","state","info","useStep","step","setStep","goToNextStep","useUser","setSelections","onSubmitCrimeRequest","request","useAPICall","apiFunction","CRIMES_HEDIONDOS_API","actionName","onBeforeCall","onError","successMessage","errorMessage","action","useOnSubmitCrimeAPIRequest","prevState","announcementItems","EventIcon","currentRound","announcementCause","SkullIcon","announcementEvidence","CrimeSceneIcon","announcementLocation","LocationIcon","announcementReview","CrimeTapeIcon","C","phase","allowedPhase","PHASES","conditions","isReady","onPressButton","buttonText","time","circleColor","appearance","hand","keys","dev","itemsGroup","shuffledItems","options","mockCrime","ClockCircleFilled","ClockCircleFilledSvg","SafetyOutlined","SafetyOutlinedSvg","GiftOutlined","GiftOutlinedSvg","ExceptionOutlined","ExceptionOutlinedSvg","ItemCardEmpty","cardType","WarningFilled","WarningFilledSvg","CrimeGuessStatus","withDescription","baseClass","LockFilled","MinusCircleFilled","CloseCircleFilled","QuestionCircleFilled","CARD_WIDTH","Crime","crime","scenesOrder","scenes","selectedWeaponId","selectedEvidenceId","isLocked","historyEntryIndex","setHistoryEntryIndex","isComplete","Boolean","activeWeaponId","evidenceWeaponId","getAvatarColorById","hasHistory","sceneId","scene","CrimeScene","playerIndex","_","ghost","shape","onMouseOver","onMouseLeave","EnvironmentOutlined","GroupedItemsBoard","StepNewScene","onSubmitMark","sceneTile","crimes","sceneMarkIndex","setSceneMarkIndex","header","sceneIndex","useOnSubmitMarkAPIRequest","useMock","ready","LoupeIcon","onClose","currentScene","getHistory","playerHistory","activePlayerId","PlayersCards","setActivePlayerId","guesses","sortPlayers","lastGuessHistory","isHistoryLocked","active","withName","replacementAvatar","LockIcon","KnifeIcon","SelectableGroupedItemsBoard","wrongGroups","isGroupWrong","StepGuessing","onSubmitGuesses","setGuesses","g","entries","key","historyEntryArray","historyEntry","autoSelectCorrectGuesses","playerCount","isAllComplete","every","activeCrime","isOwnCrime","activePlayerGuesses","getActiveStuff","activeEvidenceId","guessObj","s","InvestigationIcon","useOnSubmitGuessesAPIRequest","GuessIcon","ResultsTable","results","columns","dataIndex","render","addressUser","ResultsTableCell","data","result","dataSource","pagination","bordered","BoxCheckMarkIcon","alt","BoxOneIcon","BoxMinusIcon","BoxXIcon","StepReveal","onSeeRanking","isFirstRunThrough","latestHistoryEntry","correctCrimes","score","secretScore","getAnimationClass","min","TrophyOutlined","StepRanking","goToPreviousStep","roundPoints","setIsFirstRunThrough","RankIcon","announcementIcon","TrophyIcon","getActiveComponent","PhaseLobby","PhaseRules","PhaseSetup","PhaseCrimeSelection","PhaseSceneMarking","PhaseGuessing","PhaseReveal","PhaseGameOver","PageError","theme","token","colorPrimary","THEME_COLORS","colorLink","gameCollection","GAME_COLLECTION","xmlns","viewBox","fill","d","cx","cy","r","CloudUploadOutlinedSvg","CrownFilledSvg","EnvironmentOutlinedSvg","LockFilledSvg","QuestionCircleFilledSvg","TrophyOutlinedSvg","_toArray","arr"],"sourceRoot":""}