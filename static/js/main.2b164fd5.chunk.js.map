{"version":3,"sources":["reportWebVitals.js","services/firebase.js","hooks/useAPICall.js","hooks/useDimensions.js","hooks/useGlobalState.js","hooks/useIsUserReady.js","hooks/useIsUserThe.js","hooks/useIsUsersTeamActive.js","hooks/useLoading.js","hooks/useUser.js","hooks/useWhichPlayerIsThe.js","images/tarde-divertida-logo.svg","components/Home.jsx","utils/constants.js","utils/index.js","adapters/index.js","components/loaders/Loading.jsx","components/loaders/LoadingBar.jsx","components/loaders/LoadingPage.jsx","components/shared/ButtonContainer.jsx","images/game-over-title.svg","images/avatars.svg","components/avatars/Avatar.jsx","components/avatars/AvatarEntry.jsx","components/avatars/AvatarName.jsx","components/admin/AdminButton.jsx","components/avatars/AvatarReady.jsx","components/admin/AdminForceNextPhase.jsx","components/admin/AdminOnly.jsx","components/admin/AdminOnlyButton.jsx","components/shared/GameOver.jsx","components/shared/Instruction.jsx","components/errors/PageError.jsx","components/shared/PhaseContainer.jsx","components/shared/RankingBoard.jsx","components/shared/ReadyPlayersBar.jsx","images/rodada-title.svg","components/shared/RoundAnnouncement.jsx","services/localStorage.js","components/lobby/Join.jsx","components/lobby/Waiting.jsx","components/lobby/CloudBackground.jsx","components/lobby/Lobby.jsx","components/shared/GameInfoDrawer.jsx","components/shared/Session.jsx","hooks/useGamePlayers.js","hooks/useGameState.js","components/shared/StarPoints.jsx","components/shared/StepSwitcher.jsx","components/shared/TimedButton.jsx","components/shared/Title.jsx","components/shared/View.jsx","components/shared/WaitingRoom.jsx","components/modals/CreateGameModal.jsx","components/rules/Rules.jsx","components/rules/RulesCarousel.jsx","components/modals/RulesModal.jsx","components/modals/messageContent.js","components/Admin.jsx","adapters/auth.js","components/Login.jsx","sounds/arte-ruim-timer.mp3","components/cards/ArteRuimCard.jsx","components/cards/Card.jsx","components/cards/EspiaoEntreNosCard.jsx","components/cards/ImageCard.jsx","components/cards/ImageCardHand.jsx","components/cards/UeSoIssoCard.jsx","components/games/arte-ruim/DrawingCanvas.jsx","components/games/arte-ruim/DrawPhaseDrawStep.jsx","components/games/arte-ruim/DrawPhase.jsx","components/games/arte-ruim/CanvasSVG.jsx","components/games/arte-ruim/Ribbon.jsx","components/games/arte-ruim/EvaluationAllDrawings.jsx","components/games/arte-ruim/EvaluationAllCards.jsx","components/games/arte-ruim/CanvasResizer.jsx","components/games/arte-ruim/EvaluationPhase.jsx","components/games/arte-ruim/GalleryWindowCredits.jsx","components/games/arte-ruim/GalleryWindowGuesses.jsx","components/games/arte-ruim/GalleryWindowControls.jsx","components/games/arte-ruim/GalleryWindowResult.jsx","components/games/arte-ruim/GalleryWindow.jsx","components/games/arte-ruim/GalleryPhase.jsx","components/games/arte-ruim/DrawingGrade.jsx","components/games/arte-ruim/GameOverPhase.jsx","components/games/arte-ruim/SessionArteRuim.jsx","components/games/clube-detetives/SecretClueWrite.jsx","components/games/clube-detetives/SecretClueWaiting.jsx","components/games/clube-detetives/SecretCluePhase.jsx","components/games/clube-detetives/Table.jsx","components/games/clube-detetives/CardPlayPhase.jsx","components/games/clube-detetives/TableFocus.jsx","components/games/clube-detetives/DefensePhase.jsx","components/games/clube-detetives/VotingOptions.jsx","components/games/clube-detetives/VotingPhase.jsx","components/games/clube-detetives/RevealPhase.jsx","components/games/clube-detetives/SessionClubeDetetives.jsx","components/games/espiao-entre-nos/Notes.jsx","components/games/espiao-entre-nos/AdminTimerControlButton.jsx","components/games/espiao-entre-nos/LocationsList.jsx","components/games/espiao-entre-nos/AssignmentPhase.jsx","components/games/espiao-entre-nos/PlayerSelect.jsx","components/games/espiao-entre-nos/LocationSelect.jsx","components/games/espiao-entre-nos/Timer.jsx","components/games/espiao-entre-nos/SuspectsList.jsx","components/games/espiao-entre-nos/InvestigationPhase.jsx","components/games/espiao-entre-nos/EmergencyAlert.jsx","components/games/espiao-entre-nos/AssessmentPhase.jsx","components/games/espiao-entre-nos/ResolutionPhase.jsx","components/games/espiao-entre-nos/FinalAssessmentPhase.jsx","components/games/espiao-entre-nos/SessionEspiaoEntreNos.jsx","components/games/onda-telepatica/Card.jsx","components/games/onda-telepatica/CardSelection.jsx","components/games/onda-telepatica/DialSidesPhase.jsx","components/games/onda-telepatica/Dial.jsx","components/games/onda-telepatica/DialClueWriting.jsx","components/games/onda-telepatica/DialCluePhase.jsx","components/games/onda-telepatica/DialGuessSelection.jsx","components/games/onda-telepatica/GuessPhase.jsx","components/games/onda-telepatica/DialRivalSelection.jsx","components/games/onda-telepatica/RivalPhase.jsx","components/games/onda-telepatica/RevealPhase.jsx","components/games/onda-telepatica/SessionOndaTelepatica.jsx","components/games/ue-so-isso/WordSelectionStep.jsx","components/games/ue-so-isso/WordSelectionPhase.jsx","components/games/ue-so-isso/SuggestionEasel.jsx","components/games/ue-so-isso/SuggestionStep.jsx","components/games/ue-so-isso/SuggestPhase.jsx","components/games/ue-so-isso/SuggestionCard.jsx","components/games/ue-so-isso/CompareSuggestionsStep.jsx","components/games/ue-so-isso/ComparePhase.jsx","components/games/ue-so-isso/Guess.jsx","components/games/ue-so-isso/GuessingStep.jsx","components/games/ue-so-isso/GuessVerificationStep.jsx","components/games/ue-so-isso/GuessPhase.jsx","components/games/ue-so-isso/SessionUeSoIsso.jsx","components/games/index.js","components/Game.jsx","hooks/useIsGameStale.js","components/TestingZone.jsx","components/App.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","firestore","functions","window","location","hostname","includes","useEmulator","useAPICall","apiFunction","actionName","onBeforeCall","onAfterCall","onError","successMessage","errorMessage","useLoading","setLoader","useGlobalState","gameId","gameName","userId","func","timer","timeout","args","clearTimeout","setTimeout","apply","debounce","useCallback","payload","a","playerId","data","message","success","notification","error","description","JSON","stringify","placement","console","useDimensions","elementId","sWidth","sHeight","element","document","getElementById","warn","offsetWidth","offsetHeight","initialState","isLoading","loaders","isAuthenticated","appStartedAt","Date","now","screenSize","gameMeta","username","userAvatarId","isAdmin","canvasSize","cachedCanvasSize","espiaoEntreNosCache","createGlobalState","setGlobalState","getGlobalState","useIsUserReady","players","state","useState","isReady","setIsReady","useEffect","ready","updatedAt","useIsUserThe","propertyName","isUser","setIsUser","useIsUsersTeamActive","isUsersTeamActive","setIsUsersTeamActive","activeTeam","team","setLoading","setLoaders","Object","values","some","v","key","value","useUser","user","setUser","useWhichPlayerIsThe","activePlayer","setActivePlayer","Home","className","src","logo","preview","alt","PUBLIC_URL","BANNERS","RULES","CARDS","ROOT","TAG_DICT","competitive","label","color","cooperative","traitor","timed","drawing","guessing","writing","images","discussion","AVATARS","0","id","br","en","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","LETTERS","GAME_COLLECTION","split","PHASES","LOBBY","DRAW","EVALUATION","GALLERY","GAME_OVER","SECRET_CLUE","CARD_PLAY","DEFENSE","VOTING","REVEAL","ASSIGNMENT","INVESTIGATION","ASSESSMENT","FINAL_ASSESSMENT","RESOLUTION","DIAL_SIDES","DIAL_CLUE","GUESS","RIVAL_GUESS","WORD_SELECTION","SUGGEST","COMPARE","isValidGameId","length","getRandomItem","list","Math","floor","random","inNSeconds","seconds","getColorFromLetter","letter","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","getColorFromIndex","orderBy","properties","orders","sortBy","_key","_cb","b","sortByDesc","cb","p","Array","isArray","reverse","o","entries","i","order","Error","sort","getOppositeTeam","teams","teamsNames","keys","getPlayersFromIds","playerIds","justNames","map","player","name","GAME_API","helloWorld","httpsCallable","initializeGame","loadGame","addPlayer","lockGame","makeMeReady","playAgain","goToNextPhase","ARTE_RUIM_API","submitDrawing","submitVoting","CLUBE_DETETIVES_API","submitAction","ESPIAO_ENTRE_NOS_API","handleAdminAction","makeAccusation","guessLocation","ONDA_TELEPATICA","submitSides","submitClue","submitGuess","submitRivalGuess","UE_SO_ISSO_API","submitWordSelectionVotes","submitSuggestions","submitValidation","confirmGuess","sendGuess","Loading","margin","clsx","Boolean","Text","LoadingBar","LoadingPage","Content","size","ButtonContainer","children","wrap","defaultProps","Avatar","memo","shape","viewBox","href","avatars","AvatarEntry","animate","propTypes","PropTypes","string","bool","AvatarName","withDescription","uppercase","addressUser","baseClass","avatarId","AdminButton","action","icon","RocketFilled","danger","type","onClick","disabled","score","number","AdminForceNextPhase","onGoToNextPhase","FireFilled","AdminOnly","AdminOnlyButton","GameOver","info","onPlayAgain","PhaseContainer","phase","allowedPhase","gameOverTitle","winners","winner","group","strokeColor","victory","percent","title","onConfirm","okText","cancelText","Instruction","white","contained","PageError","showIcon","fullScreen","screenRef","useRef","setScreenSize","current","height","width","ref","RankingBoard","ranking","displayStep","setDisplayStep","sortedRanking","setSortedRanking","reRank","setReRank","maxPoints","newScore","useTimer","expiryTimestamp","autoStart","onExpire","positions","lastPosition","lastPoints","rankByFinalScoreDict","reduce","acc","entry","index","rankByPreviousScore","previousScore","tempSortedRanking","newEntry","position","style","gainedPoints","hPosition","top","CrownFilled","ReadyPlayersBar","readyText","readyTextPlural","showNames","readyPlayers","filter","Group","LikeFilled","join","Team","members","playerName","RoundAnnouncement","round","onPressButton","buttonText","time","rodadaTitle","TimedButton","duration","showTimer","this","store","notLoaded","appName","init","load","get","localStorage","parse","getItem","forEach","item","undefined","save","setItem","AVATAR_IDS","Join","setUserId","setUsername","setUserAvatarId","availableAvatars","setAvailableAvatars","tempAvatar","setTempAvatar","tempUsername","setTempUsername","sameGameId","setSameGameId","localStorageAvatar","setLocalStorageAvatar","usedAvatars","newAvailableAvatars","lsAvatarId","lsUsername","lsGameId","onPreviousAvatar","indexOf","newIndex","onNextAvatar","onAddPlayer","playerAvatarId","response","set","fallback","CaretLeftOutlined","CaretRightOutlined","onChange","e","target","trim","placeholder","maxLength","suffix","InfoCircleOutlined","onKeyPress","Waiting","onLockGameAndStart","isLocked","numPlayers","min","Cloud","CyberCloud","data-name","xmlns","d","fill","FunkyCloud","DetectiveCloud","result","ArtsyCloud","CloudBackground","TypeComponent","getTypeComponent","backgroundType","Lobby","gameCode","SectionMe","isTeamGame","count","SectionMeta","roundsToEndGame","groupScore","pointsToVictory","isNaN","backgroundColor","SectionTeams","SectionTeamPlayers","sortedPlayers","useMemo","SectionRankedPlayers","rankedPlayers","GameInfoDrawer","visible","setVisible","completeMe","offsetTop","closable","onClose","RulesModal","gameInfo","Session","gameCollection","getActiveComponent","useDocument","doc","snapshotListenOptions","includeMetadataChanges","snapshot","loading","log","useGamePlayers","useGameState","setInfo","gameList","ActiveComponent","StarPoints","quantity","keyPrefix","starsArray","from","_","StarFilled","StepSwitcher","step","conditions","Step","fullWidth","props","timeClass","Title","level","View","ViewIf","isVisible","ViewSwitch","cases","WaitingRoom","instruction","CreateGameModal","history","useHistory","setVisibility","setGameId","onCloseModal","createGame","onCancel","onOk","push","Rules","isUserReady","onBeReady","onBeReadyQue","RulesCarousel","ruleClass","CheckCircleFilled","SmileFilled","MehFilled","RobotFilled","settings","prevArrow","DoubleLeftOutlined","nextArrow","DoubleRightOutlined","autoplay","autoplaySpeed","arrows","rules","rule","Paragraph","ReadOutlined","footer","messageContent","content","innerWidth","destroy","GameCard","game","hoverable","cover","Meta","summary","max","recommended","tags","tag","available","Admin","availableGames","comingSoonGames","align","code","signIn","email","password","signInWithEmailAndPassword","layout","labelCol","span","wrapperCol","tailLayout","offset","Login","setIsAuthenticated","setError","setEmail","setPassword","onHandleSubmit","uid","onValuesChange","autoComplete","Item","ArteRuimCard","text","header","Card","WarningOutlined","randomColor","headerClassName","footerClassName","bgColor","EspiaoEntreNosCard","role","QuestionCircleFilled","ImageCard","imageId","cardWidth","fallbackName","maskClassName","bordered","ImageCardHand","hand","onSelectCard","selectButtonLabel","selectButtonClass","sizeRatio","cardSize","disabledSelectButton","screenWidth","cardId","DownSquareOutlined","ghost","UeSoIssoCard","word","DrawingCanvas","lines","setLines","isDrawing","handleMouseDown","pos","getStage","getPointerPosition","x","y","handleMouseMove","point","lastLine","concat","splice","handleMouseUp","onMouseDown","onMousemove","onMouseup","onTouchStart","onTouchMove","onTouchEnd","line","points","stroke","strokeWidth","tension","lineCap","globalCompositeOperation","DrawPhaseDrawStep","secretCard","onSubmitDrawing","DrawPhase","setStep","setSecretCard","useSound","arteRuimTimer","volume","play","currentCard","CanvasSVG","konvaLines","paths","lineArr","path","overflow","strokeLinecap","strokeLinejoin","strokeMiterlimit","Ribbon","cardEntryId","EvaluationAllDrawings","drawings","activeItem","onActivateItem","votes","liButtonBaseClass","drawingEntry","canvasEntryId","isActive","EvaluationAllCards","cards","cardEntry","isUsed","CanvasResizer","setCanvasSize","defaultValue","prepareVotes","drawingEntryId","drawingId","EvaluationPhase","setVotes","setActiveItem","onSubmitVoting","entryId","startsWith","prevVotes","CloudUploadOutlined","GalleryWindowCredits","artistName","artistAvatarId","GalleryWindowGuesses","playersSay","card","find","MessageFilled","GalleryWindowControls","galleryLength","activeIndex","setActiveIndex","isRunning","pause","resume","s","abs","StepBackwardOutlined","PauseOutlined","PlayCircleOutlined","StepForwardOutlined","TrophyOutlined","GalleryWindowResult","playerArtist","correctAnswerId","correctAnswerText","playersPoints","correctGuesses","DeleteFilled","GalleryWindow","artist","correctAnswer","correctAnswerLevel","GalleryPhase","setCachedCanvasSize","onGoToNextRound","gallery","PictureOutlined","grades","minValues","DrawingGrade","grade","findIndex","GameOverPhase","successRate","SessionArteRuim","SecretClueWrite","onSubmitClue","clue","setClue","onButtonClick","SecretClueWaiting","leader","SecretCluePhase","isUserTheLeader","onSubmitSecretClue","Table","table","playerEntryKey","CardPlayPhase","currentPlayer","isUserTheImpostor","isUserTheCurrentPlayer","onPlayCard","FileImageOutlined","TableFocus","tableEntry","DefensePhase","onFinishDefense","VotingOptions","onVote","votingOptions","playerOption","votedForPlayer","vote","vPlayer","VotingPhase","onSubmitVote","RevealPhase","impostor","impostorVotes","SessionClubeDetetives","Notes","cols","rows","AdminTimerControlButton","onControlStopwatch","List","locations","cache","setCache","EnvironmentOutlined","ClearOutlined","newState","onCross","AssignmentPhase","isUserTheSpy","LocationsList","possibleLocations","PlayerSelect","onSend","isFinalAssessment","selectedPlayerId","setSelectedPlayerId","playersWithoutMe","Option","LoadingOutlined","LocationSelect","selectedLocation","setSelectedLocation","guess","FinalAssessmentModal","isModalVisible","onAdminControl","UserOutlined","lastPlayer","Timer","timeRemaining","hideAccusationSelect","setModalVisible","warning","minutes","SuspectsList","AimOutlined","usedAccusation","IssuesCloseOutlined","InvestigationPhase","startingPlayer","isAccusationSelectVisible","setAccusationSelectVisible","onMakeAccusation","onGuessLocation","outcome","votedYes","EmergencyAlertSVG","EmergencyAlert","centered","AssessmentPhase","isUserTheTarget","isUserTheAccuser","submittedAction","setSubmitAction","accuser","finalAssessment","ResolutionPhase","currentSpy","resolutionType","spyWin","viewInfo","playerVictory","wasABadVoting","wasAnAccusationAttempt","didSpyGuess","didTheSpyWin","determineView","currentLocation","FinalAssessmentInstruction","playerOrder","playerOrderIndex","FinalAssessmentPhase","setAccuser","setTarget","SessionEspiaoEntreNos","getColorModifier","left","right","setNeedle","leftColor","rightColor","cardSideClass","isButton","onSetNeedle","direction","n","ArrowLeftOutlined","MinusOutlined","ArrowRightOutlined","cardName","CardSelection","onSendChosenSide","DialSidesPhase","psychic","isUserThePsychic","getBracketClass","showNeedle","needle","showTarget","baseBracketClass","modifier","Dial","rivalGuess","rivalTeam","showPoints","basePointsClass","baseRivalClass","transform","textAnchor","getHint","DialClueWriting","onSendClue","FileUnknownOutlined","toUpperCase","DialCluePhase","Prompt","TeamInstructions","teamController","PsychicView","ControllerView","onSendGuess","ActiveTeamView","OtherTeamView","DialGuessSelection","isUserTheController","viewDelegator","GuessPhase","controller","rivalController","RivalControllerView","onSendRivalGuess","BackwardOutlined","ForwardOutlined","RivalTeamView","DialRivalSelection","isUserTheRivalController","isUsersTeamRival","RivalPhase","getResultInstructionLine","pointsBreakdown","catchup","got","getRivalResultInstructionLine","PointDistributionExplanation","activeTeamMessageType","getMessageType","shouldCatchup","rival","SessionOndaTelepatica","WordSelectionStep","guesser","onSendSelectedWords","words","selectedWords","setSelectedWords","selectedWordsArray","noSelection","wordId","randomSelection","WordSelectionPhase","isUserTheGuesser","nextGuesser","status","SuggestionEasel","onChangeInput","opacity","SuggestionStep","onSendSuggestions","secretWord","suggestionsNumber","suggestions","setSuggestions","indexStr","Number","suggestionsValues","SuggestPhase","SuggestionCard","invalid","suggestion","CloseOutlined","CompareSuggestionsStep","obj","isUserTheNextGuesser","onValidateSuggestions","myRecommendation","setMyRecommendation","ExclamationCircleOutlined","suggestionEntry","notAllowed","arr","newArr","onSetValidation","validSuggestions","ComparePhase","Guess","onSubmitGuess","setGuess","GuessingStep","QuestionCircleOutlined","GuessVerificationStep","onConfirmGuess","CheckOutlined","SessionUeSoIsso","games","ArteRuim","ClubeDetetives","EspiaoEntreNos","OndaTelepatica","UeSoIsso","Game","setGameName","setGameMeta","isPageLoading","setPageLoading","isGameStale","gameCreatedAt","setGameStale","useIsGameStale","createdAt","urlGameId","pathname","substring","getGameIdFromURL","listen","getGameIdFromLocation","meta","loadGameSession","TestingZone","Flaviane","Kavis","Stephanie","PrivateRoute","Component","component","authenticated","rest","render","to","PublicRoute","fromPath","App","setIsLoading","setIsAdmin","onAuthStateChanged","exact","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.2b164fd5.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/functions';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_API_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n// firebase.analytics();\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const functions = firebase.functions();\n\nif (window.location.hostname.includes('localhost')) {\n  firestore.useEmulator('localhost', 8091);\n  functions.useEmulator('localhost', 5001);\n}\n\nexport default firebase;\n","import { useCallback } from 'react';\nimport { message, notification } from 'antd';\nimport { useGlobalState, useLoading } from './index';\n\nfunction debounce(func, timeout = 500) {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      func.apply(this, args);\n    }, timeout);\n  };\n}\n\n/**\n * Wrapper around common firebase http call\n * @param {object} data\n * @param {Function} data.apiFunction\n * @param {Function} [data.onBeforeCall]\n * @param {Function} [data.onAfterCall]\n * @param {Function} [data.onError]\n * @param {string} [data.actionName] the name used in the loader hook\n * @param {string} [data.successMessage]\n * @param {string} [data.errorMessage]\n * @returns\n */\nexport function useAPICall({\n  apiFunction,\n  actionName = 'api-action',\n  onBeforeCall = () => {},\n  onAfterCall = () => {},\n  onError = () => {},\n  successMessage = 'API call was successful',\n  errorMessage = 'API call has failed',\n}) {\n  const [, setLoader] = useLoading();\n  const [gameId] = useGlobalState('gameId');\n  const [gameName] = useGlobalState('gameName');\n  const [userId] = useGlobalState('userId');\n\n  const onAPICall = debounce(\n    useCallback(\n      async (payload) => {\n        try {\n          setLoader(actionName, true);\n          await onBeforeCall();\n          const response = await apiFunction({\n            gameId,\n            gameName,\n            playerId: userId,\n            ...payload,\n          });\n\n          if (response.data) {\n            message.success(successMessage);\n          }\n        } catch (e) {\n          notification.error({\n            message: errorMessage,\n            description: JSON.stringify(e.message),\n            placement: 'bottomLeft',\n          });\n          console.error(e);\n          onError();\n        } finally {\n          await onAfterCall();\n          setLoader(actionName, false);\n        }\n      },\n      [\n        actionName,\n        apiFunction,\n        errorMessage,\n        gameId,\n        gameName,\n        userId,\n        setLoader,\n        successMessage,\n        onBeforeCall,\n        onAfterCall,\n        onError,\n      ]\n    )\n  );\n\n  return onAPICall;\n}\n","import { useGlobalState } from './index';\n\n/**\n * Get width and height of given element or from the screen\n * @returns [number, number] representing width and height of the element\n */\nexport function useDimensions(elementId) {\n  const [[sWidth, sHeight]] = useGlobalState('screenSize');\n\n  if (!elementId) {\n    return [sWidth, sHeight];\n  }\n\n  const element = document.getElementById(elementId);\n\n  if (!element) {\n    console.warn(`Element of id #${elementId} is not present in the dom`);\n  }\n\n  return [element?.offsetWidth ?? 32, element?.offsetHeight ?? 32];\n}\n","import { createGlobalState } from 'react-hooks-global-state';\n\nconst initialState = {\n  isLoading: false,\n  loaders: false,\n  isAuthenticated: false,\n  appStartedAt: Date.now(),\n  screenSize: [],\n  // Meta\n  gameId: null,\n  gameName: null,\n  gameMeta: {},\n  // User/Player\n  userId: null,\n  username: '',\n  userAvatarId: '',\n  isAdmin: false,\n  // Arte-Ruim\n  canvasSize: 250,\n  cachedCanvasSize: 250,\n  // Espiao-entre-nos\n  espiaoEntreNosCache: {},\n};\n\nconst { useGlobalState, setGlobalState, getGlobalState } = createGlobalState(initialState);\n\nexport { setGlobalState, getGlobalState, useGlobalState };\n\nexport default useGlobalState;\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\nexport function useIsUserReady(players, state = {}) {\n  const [userId] = useGlobalState('userId');\n  const [isReady, setIsReady] = useState(false);\n\n  useEffect(() => {\n    // Check if user is ready and check if user has been ready after the last state change\n    if (players[userId].ready === false) {\n      setIsReady(false);\n      return;\n    }\n\n    if (!state?.updatedAt) {\n      setIsReady(true);\n      return;\n    }\n\n    // If state was updated after the player was updated, data might not be synced\n    if (players[userId]?.updatedAt < state?.updatedAt) {\n      setIsReady(false);\n      return;\n    }\n\n    setIsReady(true);\n  }, [userId, players, state?.updatedAt]);\n\n  return isReady;\n}\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\n/**\n * Check if the current user is associated with given property\n * @param {string} propertyName - the property to be check in the state\n * @param {*} state - the game state\n * @returns {boolean}\n */\nexport function useIsUserThe(propertyName = 'activePlayer', state = {}) {\n  const [userId] = useGlobalState('userId');\n  const [isUser, setIsUser] = useState(false);\n\n  // Determine if user is active as the guesser, the clue giver, the psychic, the storyteller, etc\n  useEffect(() => {\n    setIsUser(state?.[propertyName] === userId);\n  }, [state, userId, propertyName]);\n\n  return isUser;\n}\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\nexport function useIsUsersTeamActive(state, players) {\n  const [userId] = useGlobalState('userId');\n  const [isUsersTeamActive, setIsUsersTeamActive] = useState(false);\n\n  // Determine if user's team is active\n  useEffect(() => {\n    setIsUsersTeamActive(state?.activeTeam === players?.[userId]?.team);\n  }, [state, userId, players]);\n\n  return isUsersTeamActive;\n}\n","import { useEffect } from 'react';\n\nimport { useGlobalState } from './index';\n\n/**\n * Aggregate loading states into a single object, and single isLoading state\n * @returns [boolean, function, object]\n */\nexport function useLoading() {\n  const [isLoading, setLoading] = useGlobalState('isLoading');\n  const [loaders, setLoaders] = useGlobalState('loaders');\n\n  useEffect(() => {\n    setLoading(Object.values(loaders).some((v) => v));\n  }, [loaders, setLoading]);\n\n  const setLoader = (key, value) => {\n    setLoaders((values) => ({\n      ...values,\n      [key]: value,\n    }));\n  };\n\n  return [isLoading, setLoader, loaders];\n}\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\nexport function useUser(players) {\n  const [userId] = useGlobalState('userId');\n  const [user, setUser] = useState({});\n\n  // Determine if user is active as the guesser, the clue giver, the psychic, the storyteller, etc\n  useEffect(() => {\n    setUser(players?.[userId]);\n  }, [players, userId]);\n\n  return user;\n}\n","import { useEffect, useState } from 'react';\n\n/**\n * Gets player that is assigned to a property in the state\n * @param {string} propertyName\n * @param {object} state\n * @param {object} players\n * @returns {object} a player instance\n */\nexport function useWhichPlayerIsThe(propertyName = 'activePlayer', state = {}, players = {}) {\n  const [activePlayer, setActivePlayer] = useState({});\n\n  // Determine if user is active as the guesser, the clue giver, the psychic, the storyteller, etc\n  useEffect(() => {\n    const activePlayer = state?.[propertyName];\n    setActivePlayer(players?.[activePlayer]);\n  }, [players, propertyName, state]);\n\n  return activePlayer;\n}\n","export default __webpack_public_path__ + \"static/media/tarde-divertida-logo.7e15410c.svg\";","import React from 'react';\nimport { Image, Layout } from 'antd';\n\nimport logo from '../images/tarde-divertida-logo.svg';\n\nfunction Home() {\n  return (\n    <Layout className=\"home\">\n      <div className=\"home__logo-container\">\n        <Image src={logo} className=\"home__logo\" preview={false} alt=\"Tarde Divertida logo\" />\n      </div>\n      <div className=\"home__background\">\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Home;\n","/**\n * List of urls residing in the public folder\n */\nexport const PUBLIC_URL = {\n  BANNERS: `${process.env.PUBLIC_URL}/images/banners/`,\n  RULES: `${process.env.PUBLIC_URL}/images/rules/`,\n  CARDS: `${process.env.PUBLIC_URL}/images/cards/`,\n  ROOT: `${process.env.PUBLIC_URL}/images/`,\n};\n\n/**\n * List of tags translation and color\n */\nexport const TAG_DICT = {\n  competitive: {\n    label: 'competitivo',\n    color: 'red',\n  },\n  cooperative: {\n    label: 'cooperativo',\n    color: 'green',\n  },\n  traitor: {\n    label: 'inimigo',\n    color: 'volcano',\n  },\n  'real-time': {\n    label: 'juntos',\n    color: 'volcano',\n  },\n  'turn-based': {\n    label: 'vez',\n    color: 'volcano',\n  },\n  timed: {\n    label: 'tempo',\n    color: 'orange',\n  },\n  drawing: {\n    label: 'desenho',\n    color: 'gold',\n  },\n  guessing: {\n    label: 'adivinhar',\n    color: 'cyan',\n  },\n  writing: {\n    label: 'escrever',\n    color: 'blue',\n  },\n  images: {\n    label: 'imagens',\n    color: 'purple',\n  },\n  discussion: {\n    label: 'discussão/fala',\n    color: 'geekblue',\n  },\n};\n\n/**\n * List of avatar ids\n */\nexport const AVATARS = {\n  0: {\n    id: '0',\n    description: { br: 'o axolote', en: 'the axolotl' },\n    color: '#da70d6',\n  },\n  1: {\n    id: '1',\n    description: { br: 'a tartaruga', en: 'the turtle' },\n    color: '#008080',\n  },\n  2: {\n    id: '2',\n    description: { br: 'a raposa', en: 'the fox' },\n    color: '#d2691e',\n  },\n  3: {\n    id: '3',\n    description: { br: 'o sapo', en: 'the toad' },\n    color: '#556b2f',\n  },\n  4: {\n    id: '4',\n    description: { br: 'a salamandra', en: 'the lizard' },\n    color: '#7cc44f',\n  },\n  5: {\n    id: '5',\n    description: { br: 'a toupeira', en: 'the mole' },\n    color: '#2f4f4f',\n  },\n  6: {\n    id: '6',\n    description: { br: 'o esquilo', en: 'the squirrel' },\n    color: '#ff6347',\n  },\n  7: {\n    id: '7',\n    description: { br: 'o corvo', en: 'the starling' },\n    color: '#4682b4',\n  },\n  8: {\n    id: '8',\n    description: { br: 'a lontra', en: 'the otter' },\n    color: '#d2a467',\n  },\n  9: {\n    id: '9',\n    description: { br: 'o camundongo', en: 'the mouse' },\n    color: '#7fb5c7',\n  },\n  10: {\n    id: '10',\n    description: { br: 'o sabiá', en: 'the cardinal' },\n    color: '#b22222',\n  },\n  11: {\n    id: '11',\n    description: { br: 'a coruja', en: 'the owl' },\n    color: '#9370db',\n  },\n  12: {\n    id: '12',\n    description: { br: 'o porco-espinho', en: 'the hedgehog' },\n    color: '#778899',\n  },\n  13: {\n    id: '13',\n    description: { br: 'o ornitorrinco', en: 'the platypus' },\n    color: '#663399',\n  },\n  14: {\n    id: '14',\n    description: { br: 'o rato', en: 'the rat' },\n    color: '#696969',\n  },\n  15: {\n    id: '15',\n    description: { br: 'a rã', en: 'the frog' },\n    color: '#20212e',\n  },\n  16: {\n    id: '16',\n    description: { br: 'o caramujo', en: 'the snail' },\n    color: '#9884b4',\n  },\n  17: {\n    id: '17',\n    description: { br: 'a abelha', en: 'the bee' },\n    color: '#dfb231',\n  },\n  18: {\n    id: '18',\n    description: { br: 'o morcego', en: 'the bat' },\n    color: '#875131',\n  },\n  19: {\n    id: '19',\n    description: { br: 'o gato', en: 'the cat' },\n    color: '#db8a34',\n  },\n  20: {\n    id: '20',\n    description: { br: 'o coelho', en: 'the rabbit' },\n    color: '#eb3465',\n  },\n  21: {\n    id: '21',\n    description: { br: 'a aranha', en: 'the spider' },\n    color: '#2b1752',\n  },\n  22: {\n    id: '22',\n    description: { br: 'a borboleta', en: 'the butterfly' },\n    color: '#3c58ac',\n  },\n  23: {\n    id: '23',\n    description: { br: 'o arminho', en: 'the stoat' },\n    color: '#bdb74c',\n  },\n  24: {\n    id: '24',\n    description: { br: 'o porco', en: 'the pig' },\n    color: '#dd9fbd',\n  },\n};\n\nexport const LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n/**\n * Random names used during Dev\n */\nexport const RANDOM_NAMES = 'Ana,Bob,Cam,Dan,Evan,Fred,Gus,Helen,Ian,Jess,Kim,Liam,Max,Nick,Oliver,Peter,Quinn,Roy,Tina'.split(\n  ','\n);\n\n/**\n * Enum of available games\n */\nexport const GAME_COLLECTION = {\n  ARTE_RUIM: 'arte-ruim',\n  CLUBE_DETETIVES: 'clube-detetives',\n  ESPIAO_ENTRE_NOS: 'espiao-entre-nos',\n  ONDA_TELEPATICA: 'onda-telepatica',\n  UE_SO_ISSO: 'ue-so-isso',\n};\n\n/**\n * Enum of Game Phases\n */\nexport const PHASES = {\n  ARTE_RUIM: {\n    LOBBY: 'LOBBY',\n    RULES: 'RULES',\n    DRAW: 'DRAW',\n    EVALUATION: 'EVALUATION',\n    GALLERY: 'GALLERY',\n    GAME_OVER: 'GAME_OVER',\n  },\n  CLUBE_DETETIVES: {\n    LOBBY: 'LOBBY',\n    RULES: 'RULES',\n    SECRET_CLUE: 'SECRET_CLUE',\n    CARD_PLAY: 'CARD_PLAY',\n    DEFENSE: 'DEFENSE',\n    VOTING: 'VOTING',\n    REVEAL: 'REVEAL',\n    GAME_OVER: 'GAME_OVER',\n  },\n  ESPIAO_ENTRE_NOS: {\n    LOBBY: 'LOBBY',\n    RULES: 'RULES',\n    ASSIGNMENT: 'ASSIGNMENT',\n    INVESTIGATION: 'INVESTIGATION',\n    ASSESSMENT: 'ASSESSMENT',\n    FINAL_ASSESSMENT: 'FINAL_ASSESSMENT',\n    RESOLUTION: 'RESOLUTION',\n    GAME_OVER: 'GAME_OVER',\n  },\n  ONDA_TELEPATICA: {\n    LOBBY: 'LOBBY',\n    RULES: 'RULES',\n    DIAL_SIDES: 'DIAL_SIDES',\n    DIAL_CLUE: 'DIAL_CLUE',\n    GUESS: 'GUESS',\n    RIVAL_GUESS: 'RIVAL_GUESS',\n    REVEAL: 'REVEAL',\n    GAME_OVER: 'GAME_OVER',\n  },\n  UE_SO_ISSO: {\n    LOBBY: 'LOBBY',\n    RULES: 'RULES',\n    WORD_SELECTION: 'WORD_SELECTION',\n    SUGGEST: 'SUGGEST',\n    COMPARE: 'COMPARE',\n    GUESS: 'GUESS',\n    GAME_OVER: 'GAME_OVER',\n  },\n};\n","/**\n * Extract the gameId from react history\n * @param {object} history\n * @returns {string}\n */\nexport const getGameIdFromURL = (history) => {\n  const { pathname = '/' } = history?.location ?? {};\n  return pathname.substring(1);\n};\n\n/**\n * Extract the gameId from react history.location\n * @param {object} history\n * @returns {string}\n */\nexport const getGameIdFromLocation = (location) => {\n  const { pathname = '/' } = location ?? {};\n  return pathname.substring(1);\n};\n\n/**\n * Verify if the game id exists and has the correct length\n * @param {string} gameId\n * @returns\n */\nexport const isValidGameId = (gameId) => {\n  return gameId && gameId.length === 4;\n};\n\n/**\n * Get random element/item from a list\n * @param {array} list\n * @returns one random item\n */\nexport const getRandomItem = (list) => {\n  return list[Math.floor(Math.random() * list.length)];\n};\n\n/**\n * Get date from now within the given seconds\n * @param {number} seconds\n * @returns\n */\nexport const inNSeconds = (seconds) => {\n  return Date.now() + seconds * 1000;\n};\n\n/**\n * Get color name from letter\n * @param {string} letter\n * @returns\n */\nexport const getColorFromLetter = (letter) => {\n  return (\n    {\n      A: 'red',\n      B: 'blue',\n      C: 'green',\n      D: 'yellow',\n      E: 'pink',\n      F: 'purple',\n      G: 'teal',\n      H: 'orange',\n      I: 'coffee',\n      J: 'navy',\n      K: 'light-green',\n      L: 'brown',\n      M: 'hot-pink',\n      N: 'violet',\n      O: 'forest',\n      P: 'cream',\n\n      // repeats\n      Q: 'red',\n      R: 'blue',\n      S: 'green',\n      T: 'yellow',\n      U: 'pink',\n      V: 'purple',\n      W: 'teal',\n      X: 'none',\n      Y: 'orange',\n      Z: 'coffee',\n    }[letter] ?? 'none'\n  );\n};\n\n/**\n * Gets color name from index\n * @param {number} letter\n * @returns\n */\nexport const getColorFromIndex = (letter) => {\n  return (\n    [\n      'red',\n      'blue',\n      'green',\n      'yellow',\n      'pink',\n      'purple',\n      'teal',\n      'orange',\n      'coffee',\n      'navy',\n      'light-green',\n      'brown',\n      'hot-pink',\n      'violet',\n      'forest',\n      'cream',\n    ][letter] ?? 'none'\n  );\n};\n\n/**\n * Creates a copy of given object\n * @param {object} obj\n * @returns {object}\n */\nexport const deepCopy = (obj) => JSON.parse(JSON.stringify(obj));\n\n/**\n * Orders array by a value its item object\n * @param {object[]} list\n * @param {string|string[]} properties\n * @param {string|string[]} orders\n * @returns {object[]}\n */\nexport const orderBy = (list, properties, orders) => {\n  function sortBy(_key, _cb) {\n    if (!_cb) _cb = () => 0;\n    return (a, b) => (a[_key] > b[_key] ? 1 : b[_key] > a[_key] ? -1 : _cb(a, b));\n  }\n\n  function sortByDesc(key, _cb) {\n    if (!_cb) _cb = () => 0;\n    return (b, a) => (a[key] > b[key] ? 1 : b[key] > a[key] ? -1 : _cb(b, a));\n  }\n\n  let cb = () => 0;\n  const p = Array.isArray(properties) ? properties.reverse() : [properties];\n  const o = Array.isArray(properties) ? orders.reverse() : [orders];\n\n  for (const [i, key] of p.entries()) {\n    const order = o[i] ?? o[0] ?? 'asc';\n    if (order === 'asc') {\n      cb = sortBy(key, cb);\n    } else if (order === 'desc') {\n      cb = sortByDesc(key, cb);\n    } else {\n      throw new Error(`Unsupported order \"${order}\"`);\n    }\n  }\n\n  return [...list].sort(cb);\n};\n\n/**\n * Get the team name that is not active\n * @param {object|array} teams\n * @param {string} activeTeam\n * @returns {string}\n */\nexport const getOppositeTeam = (teams, activeTeam) => {\n  if (!teams || !activeTeam || teams?.length < 2) return '?';\n\n  const teamsNames = Array.isArray(teams) ? teams : Object.keys(teams);\n  if (teamsNames[0] === activeTeam) return teamsNames[1];\n  else return teamsNames[0];\n};\n\n/**\n * Get given players from list of ids\n * @param {string[]} playerIds\n * @param {object} players\n * @param {boolean} justNames if true, only return names\n * @returns\n */\nexport const getPlayersFromIds = (playerIds, players, justNames = false) => {\n  return playerIds.map((playerId) => {\n    const player = players[playerId];\n    if (justNames) return player.name;\n    return player;\n  });\n};\n","import { functions } from '../services/firebase';\nimport { GAME_COLLECTION } from '../utils/constants';\n\nexport const GAME_API = {\n  helloWorld: functions.httpsCallable('helloWorld'),\n  initializeGame: functions.httpsCallable('initializeGame'),\n  loadGame: functions.httpsCallable('loadGame'),\n  addPlayer: functions.httpsCallable('addPlayer'),\n  lockGame: functions.httpsCallable('lockGame'),\n  makeMeReady: functions.httpsCallable('makeMeReady'),\n  playAgain: functions.httpsCallable('playAgain'),\n  goToNextPhase: functions.httpsCallable('goToNextPhase'),\n};\n\nexport const ARTE_RUIM_API = {\n  submitDrawing: functions.httpsCallable('arteRuimSubmitDrawing'),\n  submitVoting: functions.httpsCallable('arteRuimSubmitVoting'),\n};\n\nexport const CLUBE_DETETIVES_API = {\n  submitAction: functions.httpsCallable('clubeDetetivesSubmitAction'),\n};\n\nexport const ESPIAO_ENTRE_NOS_API = {\n  handleAdminAction: functions.httpsCallable('espiaoEntreNosHandleAdminAction'),\n  makeAccusation: functions.httpsCallable('espiaoEntreNosMakeAccusation'),\n  guessLocation: functions.httpsCallable('espiaoEntreNosGuessLocation'),\n  submitVoting: functions.httpsCallable('espiaoEntreNosSubmitVoting'),\n};\n\nexport const ONDA_TELEPATICA = {\n  submitSides: functions.httpsCallable('ondaTelepaticaSubmitSides'),\n  submitClue: functions.httpsCallable('ondaTelepaticaSubmitClue'),\n  submitGuess: functions.httpsCallable('ondaTelepaticaSubmitGuess'),\n  submitRivalGuess: functions.httpsCallable('ondaTelepaticaSubmitRivalGuess'),\n};\n\nexport const UE_SO_ISSO_API = {\n  submitWordSelectionVotes: functions.httpsCallable('ueSoIssoSubmitWordSelectionVotes'),\n  submitSuggestions: functions.httpsCallable('ueSoIssoSubmitSuggestions'),\n  submitValidation: functions.httpsCallable('ueSoIssoSubmitValidation'),\n  confirmGuess: functions.httpsCallable('ueSoIssoConfirmGuess'),\n  sendGuess: functions.httpsCallable('ueSoIssoSendGuess'),\n};\n\n/**\n * Gets the game specific API http functions\n * @param {string} gameName\n * @returns\n */\nexport const getAPI = (gameName) => {\n  switch (gameName) {\n    case GAME_COLLECTION.ARTE_RUIM:\n      return ARTE_RUIM_API;\n    case GAME_COLLECTION.ESPIAO_ENTRE_NOS:\n      return ESPIAO_ENTRE_NOS_API;\n    case GAME_COLLECTION.ONDA_TELEPATICA:\n      return ONDA_TELEPATICA;\n    case GAME_COLLECTION.UE_SO_ISSO:\n      return UE_SO_ISSO_API;\n    default:\n      throw Error(`Adapter for ${gameName} does not exist`);\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Space, Spin, Typography } from 'antd';\n\nexport function Loading({ message, margin }) {\n  return (\n    <Space className={clsx('loading', margin && 'loading--margin')}>\n      <Spin />\n      {Boolean(message) && <Typography.Text>{message}</Typography.Text>}\n    </Space>\n  );\n}\n\nLoading.propTypes = {\n  message: PropTypes.string,\n  margin: PropTypes.bool,\n};\n\nLoading.defaultProps = {\n  margin: false,\n};\n","import React from 'react';\n// Hooks\nimport { useLoading } from '../../hooks';\n\nexport function LoadingBar() {\n  const [isLoading] = useLoading();\n\n  return isLoading ? <div className=\"loading-bar\"></div> : <></>;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Layout, Spin, Typography } from 'antd';\n\nexport function LoadingPage({ message }) {\n  return (\n    <Layout.Content className=\"loading-page\">\n      <Spin size=\"large\" />\n      <Typography.Text>{message}</Typography.Text>\n    </Layout.Content>\n  );\n}\n\nLoadingPage.propTypes = {\n  message: PropTypes.string,\n};\n\nLoadingPage.defaultProps = {\n  message: 'Carregando...',\n};\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Space } from 'antd';\n\nexport function ButtonContainer({ children, wrap = false, className = '' }) {\n  const baseClass = 'button-container';\n  return (\n    <Space className={clsx(baseClass, className)} wrap={wrap}>\n      {children}\n    </Space>\n  );\n}\n\nButtonContainer.propTypes = {\n  children: PropTypes.element.isRequired,\n  className: PropTypes.string,\n  wrap: PropTypes.bool,\n};\n","export default __webpack_public_path__ + \"static/media/game-over-title.7073f1c0.svg\";","export default __webpack_public_path__ + \"static/media/avatars.a2364409.svg\";","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Avatar as AntAvatar } from 'antd';\n// Images\nimport avatars from '../../images/avatars.svg';\n\nexport const Avatar = memo(function ({\n  id = 25,\n  size = 'large',\n  shape = 'circle',\n  alt = 'Fulano',\n  className = '',\n}) {\n  return (\n    <AntAvatar\n      className={clsx('avatar', className)}\n      size={size}\n      shape={shape}\n      alt={alt}\n      src={\n        <svg viewBox=\"0 0 100 100\">\n          <use href={avatars + `#avatar-${id}`}></use>\n        </svg>\n      }\n    />\n  );\n});\n\nAvatar.propTypes = {\n  id: PropTypes.string,\n  className: PropTypes.string,\n  size: PropTypes.string,\n  shape: PropTypes.string,\n  alt: PropTypes.string,\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Components\nimport { Avatar } from './Avatar';\n\nexport const AvatarEntry = memo(function ({ id = 25, name = 'Fulano', animate = false, className = '' }) {\n  return (\n    <div className={clsx('avatar-entry', animate && 'avatar-entry--floating', className)}>\n      <Avatar id={id} className=\"avatar-entry__avatar\" />\n      <div className=\"avatar-entry__name\">{name}</div>\n    </div>\n  );\n});\n\nAvatar.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  animate: PropTypes.bool,\n  className: PropTypes.string,\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Resources\nimport { AVATARS } from '../../utils/constants';\n// Components\nimport { Avatar } from './Avatar';\nimport { useGlobalState } from '../../hooks';\n\nexport const AvatarName = memo(function ({\n  player,\n  size = 'default',\n  className = '',\n  withDescription = false,\n  uppercase = false,\n  addressUser = false,\n}) {\n  const [userId] = useGlobalState('userId');\n\n  const baseClass = 'avatar-name';\n\n  const isUser = player.id === userId;\n\n  return (\n    <span\n      className={clsx(baseClass, `${baseClass}--${size}`, uppercase && `${baseClass}--uppercase`, className)}\n    >\n      <Avatar id={player.avatarId} className=\"avatar-name__avatar\" size={size} />\n      <span className=\"avatar-name__name\">{addressUser && isUser ? 'VOCÊ' : player.name}</span>\n      {withDescription && (\n        <span className=\"avatar-name__name\">, {AVATARS[player.avatarId].description.br}</span>\n      )}\n    </span>\n  );\n});\n\nAvatarName.propTypes = {\n  player: PropTypes.shape({\n    avatarId: PropTypes.string,\n    name: PropTypes.string,\n  }).isRequired,\n  size: PropTypes.oneOf(['small', 'default', 'large']),\n  withDescription: PropTypes.bool,\n  uppercase: PropTypes.bool,\n  addressUser: PropTypes.bool,\n  className: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button } from 'antd';\nimport { RocketFilled } from '@ant-design/icons';\n// State\nimport { useLoading } from '../../hooks';\n\nexport function AdminButton({ action, label }) {\n  const [isLoading] = useLoading();\n  return (\n    <Button icon={<RocketFilled />} danger type=\"primary\" onClick={action} disabled={isLoading}>\n      {label}\n    </Button>\n  );\n}\n\nAdminButton.propTypes = {\n  action: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Components\nimport { Avatar } from './Avatar';\nimport { CrownFilled, LikeFilled } from '@ant-design/icons';\n\nexport const AvatarReady = memo(function ({\n  id = 25,\n  name = 'Fulano',\n  score = 0,\n  ready = false,\n  className = '',\n}) {\n  return (\n    <div className={clsx('avatar-entry', className)}>\n      <Avatar id={id} className=\"avatar-entry__avatar\" />\n      <div className=\"avatar-entry__name\">{name}</div>\n      <LikeFilled />\n      <CrownFilled />\n    </div>\n  );\n});\n\nAvatar.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  score: PropTypes.number,\n  ready: PropTypes.bool,\n  animate: PropTypes.bool,\n  className: PropTypes.string,\n};\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Space } from 'antd';\nimport { FireFilled } from '@ant-design/icons';\n// State & Hooks\nimport { useAPICall, useGlobalState, useLoading } from '../../hooks';\nimport { GAME_API } from '../../adapters';\n\nexport function AdminForceNextPhase({ className = '' }) {\n  const [isLoading] = useLoading();\n  const [isAdmin] = useGlobalState('isAdmin');\n\n  const onGoToNextPhase = useAPICall({\n    apiFunction: GAME_API.goToNextPhase,\n    actionName: 'force-next-phase',\n    successMessage: 'Funcionou, próxima fase!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar ir para a próxima fase',\n  });\n\n  if (!isAdmin) return <span></span>;\n\n  return (\n    <Space className={clsx('admin-only-container', className)}>\n      <Button\n        icon={<FireFilled />}\n        type=\"primary\"\n        danger\n        onClick={() => onGoToNextPhase({})}\n        disabled={isLoading}\n      >\n        Force Next Phase\n      </Button>\n    </Space>\n  );\n}\n\nAdminForceNextPhase.propTypes = {\n  className: PropTypes.string,\n};\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Space } from 'antd';\n// State\nimport { useGlobalState } from '../../hooks';\n\nexport const AdminOnly = ({ children, className = '' }) => {\n  const [isAdmin] = useGlobalState('isAdmin');\n\n  if (!isAdmin) return <span></span>;\n\n  return <Space className={clsx('admin-only-container', className)}>{children}</Space>;\n};\n\nAdminOnly.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)]).isRequired,\n  className: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Components\nimport { AdminOnly, AdminButton } from './index';\n\nexport function AdminOnlyButton({ action, label }) {\n  return (\n    <AdminOnly>\n      <AdminButton action={action} label={label} />\n    </AdminOnly>\n  );\n}\n\nAdminOnlyButton.propTypes = {\n  action: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n};\n","import React from 'react';\n// Design Resources\nimport { Button, Popconfirm, Progress } from 'antd';\nimport { RocketFilled } from '@ant-design/icons';\n// Images\nimport gameOverTitle from '../../images/game-over-title.svg';\n// Utils\nimport { useAPICall, useLoading } from '../../hooks';\nimport { GAME_API } from '../../adapters';\nimport { AVATARS } from '../../utils/constants';\n// Components\nimport { Avatar } from '../avatars';\nimport { AdminOnly } from '../admin/index';\nimport { PhaseContainer } from './index';\n\nexport function GameOver({ info, state, children }) {\n  const [isLoading] = useLoading();\n\n  const onPlayAgain = useAPICall({\n    apiFunction: GAME_API.playAgain,\n    actionName: 'play-=again',\n    successMessage: 'Jogando novamente o mesmo jogo!',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar ir reiniciar o jogo',\n  });\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase=\"GAME_OVER\" className=\"game-over\">\n      <div className=\"game-over__title\">\n        <img src={gameOverTitle} alt=\"Game Over\" />\n      </div>\n\n      {Boolean(state.winners) && (\n        <div className=\"game-over__winner-container\">\n          <div className=\"game-over__text\">\n            Jogo concluido e {state.winners.length > 1 ? 'os vencedores são' : 'o vencedor é'}:\n          </div>\n          <ul className=\"game-over__winners\">\n            {state.winners.map((winner) => {\n              return (\n                <li className=\"game-over__winner\" key={`winner-${winner.name}`}>\n                  <Avatar className=\"game-over__avatar\" id={winner.avatarId ?? 25} />\n                  <div className=\"game-over__winner-name\">\n                    <strong>{winner.name ?? '?'}</strong>, {AVATARS[winner.avatarId].description.br}\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      )}\n\n      {Boolean(state.group) && (\n        <div className=\"game-over__winner\">\n          <div className=\"game-over__text\">Jogo concluido.</div>\n          <Progress\n            type=\"circle\"\n            strokeColor={\n              state.group.victory\n                ? {\n                    '0%': '#4ba226',\n                    '100%': '#87d068',\n                  }\n                : {\n                    '0%': '#ff0000',\n                    '70%': '#ff0000',\n                    '100%': '#87d068',\n                  }\n            }\n            percent={state.group.score ?? 0}\n          />\n          <div className=\"game-over__text\">\n            {state.group.victory ? 'Parabéns, vocês ganharam!' : 'Não foi dessa vez, que vergonha heim!'}\n          </div>\n        </div>\n      )}\n\n      {Boolean(state.team) && (\n        <div className=\"game-over__winner\">\n          <div className=\"game-over__text\">Jogo concluido.</div>\n          <Progress\n            type=\"circle\"\n            strokeColor={{\n              '0%': '#ff0000',\n              '70%': '#ff0000',\n              '100%': '#87d068',\n            }}\n            percent={state.team.score ?? 0}\n          />\n          <div className=\"game-over__text\">\n            {state.team.victory ? 'Parabéns, vocês ganharam!' : 'Não foi dessa vez, que vergonha heim!'}\n          </div>\n        </div>\n      )}\n\n      {!Boolean(state.winners) && !Boolean(state.team) && !Boolean(state.group) && (\n        <div className=\"game-over__text\">Jogo concluido.</div>\n      )}\n\n      {children}\n\n      <AdminOnly>\n        <Popconfirm\n          title=\"Tem certeza que que jogar este jogo novamente??\"\n          onConfirm={() => onPlayAgain({})}\n          okText=\"Sim\"\n          cancelText=\"Não\"\n        >\n          <Button icon={<RocketFilled />} danger type=\"primary\" disabled={isLoading}>\n            Jogar novamente\n          </Button>\n        </Popconfirm>\n      </AdminOnly>\n    </PhaseContainer>\n  );\n}\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Typography } from 'antd';\nimport clsx from 'clsx';\n\nexport const Instruction = memo(function ({ children, white, className, contained }) {\n  const baseClass = 'instruction';\n\n  return (\n    <Typography.Text\n      className={clsx(\n        baseClass,\n        contained && `${baseClass}--contained`,\n        white && `${baseClass}--white`,\n        className\n      )}\n    >\n      {children}\n    </Typography.Text>\n  );\n});\n\nInstruction.propTypes = {\n  children: PropTypes.any.isRequired,\n  white: PropTypes.bool,\n  className: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Alert } from 'antd';\n\nexport function PageError({ message, description }) {\n  return (\n    <div className=\"container container--center\">\n      <Alert message={message} description={description} type=\"error\" showIcon />\n    </div>\n  );\n}\n\nPageError.propTypes = {\n  message: PropTypes.string,\n  description: PropTypes.string,\n};\n\nPageError.defaultProps = {\n  message: 'Algo errado não está certo',\n  description: 'Não era pra você estar vendo esta mensagem.',\n};\n","import React, { useEffect, useRef } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useGlobalState } from '../../hooks';\n// Components\nimport { LoadingPage } from '../loaders';\nimport { PageError } from '../errors/PageError';\n\n/**\n * Wrapping container around a game screen\n * @param {*} props\n * @returns\n */\nexport function PhaseContainer({ info, phase, allowedPhase, children, className, fullScreen, white }) {\n  const screenRef = useRef(null);\n  const [username] = useGlobalState('username');\n  const [, setScreenSize] = useGlobalState('screenSize');\n\n  useEffect(() => {\n    if (screenRef.current) {\n      let height = screenRef.current.offsetHeight;\n      let width = screenRef.current.offsetWidth;\n      setScreenSize([width, height]);\n    }\n  }, [screenRef, setScreenSize]);\n\n  if (!info?.gameName || allowedPhase !== phase) {\n    return <LoadingPage />;\n  }\n\n  if (!phase) {\n    return <PageError message=\"Algo errado não está certo\" description=\"Estado do jogo não está correto\" />;\n  }\n\n  const baseClass = 'phase-container';\n\n  return (\n    <main\n      className={clsx(\n        baseClass,\n        fullScreen && `${baseClass}--full-screen`,\n        white && `${baseClass}--white`,\n        className\n      )}\n      id=\"screen\"\n      ref={screenRef}\n    >\n      {process.env.NODE_ENV === 'development' && (\n        <span className={`${baseClass}__dev-player-name`}>{username}</span>\n      )}\n      <span className={`${baseClass}__title`}>{info.title}</span>\n      {children}\n    </main>\n  );\n}\n\nPhaseContainer.propTypes = {\n  allowedPhase: PropTypes.string,\n  children: PropTypes.any.isRequired,\n  className: PropTypes.string,\n  fullScreen: PropTypes.bool,\n  info: PropTypes.shape({\n    gameName: PropTypes.string,\n    title: PropTypes.string,\n  }),\n  phase: PropTypes.string,\n  white: PropTypes.bool,\n};\n\nPhaseContainer.defaultProps = {\n  allowedPhase: '',\n  className: '',\n  fullScreen: false,\n  phase: '',\n  white: false,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTimer } from 'react-timer-hook';\n// Design Resources\nimport { CrownFilled } from '@ant-design/icons';\n// Hooks\nimport { useDimensions } from '../../hooks';\n// Utils\nimport { inNSeconds } from '../../utils';\n// Components\nimport { Avatar } from '../avatars';\n\nexport function RankingBoard({ players, ranking }) {\n  const [displayStep, setDisplayStep] = useState(0);\n  const [sortedRanking, setSortedRanking] = useState([]);\n  // const [positions, setPositions] = useState([]);\n  const [reRank, setReRank] = useState(0);\n  const [, height] = useDimensions('ranking-row-0');\n\n  const maxPoints = ranking[0].newScore;\n\n  const { seconds } = useTimer({\n    expiryTimestamp: inNSeconds(4),\n    autoStart: true,\n    onExpire: () => setReRank(1),\n  });\n\n  // Rank by previousScore\n  useEffect(() => {\n    const positions = {};\n    let lastPosition = 0;\n    let lastPoints = null;\n\n    const rankByFinalScoreDict = ranking\n      .sort((a, b) => (a.newScore < b.newScore ? 1 : -1))\n      .reduce((acc, entry, index) => {\n        acc[entry.playerId] = index;\n        // Calculate position\n        if (lastPoints === null || entry.newScore < lastPoints) {\n          lastPoints = entry.newScore;\n          lastPosition += 1;\n        }\n        positions[entry.playerId] = [0, lastPosition];\n        return acc;\n      }, {});\n\n    const rankByPreviousScore = ranking.sort((a, b) => (a.previousScore < b.previousScore ? 1 : -1));\n\n    // Reset position trackers\n    lastPosition = 0;\n    lastPoints = null;\n\n    const tempSortedRanking = rankByPreviousScore.map((entry, index) => {\n      const newEntry = { ...entry };\n\n      newEntry.order = [index, rankByFinalScoreDict[newEntry.playerId]];\n      newEntry.position = positions[newEntry.playerId];\n      // Calculate position\n      if (lastPoints === null || entry.previousScore < lastPoints) {\n        lastPoints = entry.previousScore;\n        lastPosition += 1;\n      }\n      newEntry.position[0] = lastPosition;\n      return newEntry;\n    });\n\n    setSortedRanking(tempSortedRanking);\n  }, []); // eslint-disable-line\n\n  // Show gained points\n  useEffect(() => {\n    if (seconds === 3) {\n      setDisplayStep(1);\n    } else if (seconds === 2) {\n      setDisplayStep(2);\n    }\n  }, [seconds]);\n\n  return (\n    <div className=\"ranking-board\" style={{ height: `${(height + 8) * sortedRanking.length}px` }}>\n      {sortedRanking.map((entry, index) => {\n        const { playerId, newScore, previousScore, gainedPoints, order, position } = entry;\n        const hPosition = (height + 8) * (order[reRank] ?? 0);\n        return (\n          <div\n            className={`ranking-board__row ranking-board__row--${index}`}\n            key={`ranking-${playerId}`}\n            id={`ranking-row-${index}`}\n            style={{ top: `${hPosition}px` }}\n          >\n            <div className=\"ranking-board__cell-crown\">\n              {newScore > 0 && maxPoints === newScore && displayStep >= 3 && (\n                <CrownFilled className=\"ranking-board__crown-icon\" />\n              )}\n            </div>\n            <div className=\"ranking-board__cell-position\">#{position[reRank] ?? ''}</div>\n            <div className=\"ranking-board__cell-player\">\n              <div className=\"ranking-board__avatar\">\n                <Avatar id={players[playerId].avatarId} />\n              </div>\n              <div className=\"ranking-board__name\">{players[playerId].name}</div>\n            </div>\n            <div className=\"ranking-board__cell-points\">{previousScore}</div>\n            {displayStep >= 1 && <div className=\"ranking-board__cell-points-plus\">+{gainedPoints}</div>}\n            {displayStep >= 2 && <div className=\"ranking-board__cell-points-total\">{newScore}</div>}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nRankingBoard.propTypes = {\n  players: PropTypes.object,\n  ranking: PropTypes.arrayOf(\n    PropTypes.shape({\n      playerId: PropTypes.string,\n      previousScore: PropTypes.number,\n      gainedPoints: PropTypes.number,\n      newScore: PropTypes.number,\n    })\n  ),\n};\n\nexport default RankingBoard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Avatar as AntAvatar, Typography } from 'antd';\nimport { LikeFilled } from '@ant-design/icons';\n// Components\nimport { Avatar } from '../avatars';\n\nexport function ReadyPlayersBar({\n  players,\n  readyText = 'Estou pronto!',\n  readyTextPlural = 'Estamos prontos!',\n  showNames,\n}) {\n  const readyPlayers = Object.values(players).filter((player) => player.ready);\n\n  if (readyPlayers.length === 0) {\n    return <span></span>;\n  }\n\n  return (\n    <div className=\"ready-player-bar\">\n      <div className=\"ready-player-bar__bar\">\n        <AntAvatar.Group size=\"small\">\n          {readyPlayers.map((player) => (\n            <Avatar key={player.name} id={player.avatarId} />\n          ))}\n        </AntAvatar.Group>\n        <span className=\"ready-player-bar__speech-bubble\">\n          <Typography.Text>{readyPlayers.length > 1 ? readyTextPlural : readyText}</Typography.Text>\n          <LikeFilled className=\"ready-player-bar__speech-bubble-icon\" />\n        </span>\n      </div>\n      {showNames && (\n        <span className=\"ready-player-bar__names\">\n          ({readyPlayers.map((player) => player.name).join(', ')})\n        </span>\n      )}\n    </div>\n  );\n}\n\nReadyPlayersBar.propTypes = {\n  players: PropTypes.object.isRequired,\n  readyText: PropTypes.string,\n  readyTextPlural: PropTypes.string,\n  showNames: PropTypes.bool,\n};\n\nReadyPlayersBar.defaultProps = {\n  readyText: 'Estou pronto!',\n  readyTextPlural: 'Estamos prontos!',\n  showNames: false,\n};\n","export default __webpack_public_path__ + \"static/media/rodada-title.2e3f9c1d.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Button, Tag } from 'antd';\n// Images\nimport rodadaTitle from '../../images/rodada-title.svg';\n// Components\nimport { AvatarName } from '../avatars';\nimport { TimedButton } from './index';\n\nfunction Team({ team, players, className }) {\n  return (\n    <div className={className}>\n      <h1>Time {team.name}</h1>\n      <ul className=\"round-announcement__team-members\">\n        {team.members.map((playerName) => (\n          <li key={`team-member-${playerName}`} className=\"round-announcement__team-member\">\n            <AvatarName player={players[playerName]} />\n          </li>\n        ))}\n      </ul>\n      <Tag className=\"round-announcement__points\" color=\"blue\">\n        {team.score} {team.score > 1 ? 'pontos' : 'ponto'}\n      </Tag>\n    </div>\n  );\n}\n\nexport function RoundAnnouncement({\n  round,\n  onPressButton,\n  buttonText,\n  time,\n  teams,\n  players,\n  className,\n  children,\n}) {\n  return (\n    <div className={clsx('round-announcement', className)}>\n      {Boolean(teams?.A) && (\n        <Team className=\"round-announcement__team-left\" team={teams.A} players={players} />\n      )}\n\n      <div className=\"round-announcement__main\">\n        <div className=\"round-announcement__title\">\n          <img src={rodadaTitle} alt=\"Rodada\" />\n        </div>\n        <div className=\"round-announcement__round-wrapper\">\n          <div className=\"round-announcement__circle\"></div>\n          <div className=\"round-announcement__number\">{round ?? 0}</div>\n        </div>\n\n        {children}\n\n        {Boolean(onPressButton) && !Boolean(time) && (\n          <Button type=\"primary\" onClick={onPressButton} className=\"round-announcement__go-button\">\n            {buttonText}\n          </Button>\n        )}\n\n        {Boolean(onPressButton) && Boolean(time) && (\n          <TimedButton\n            label={buttonText}\n            type=\"primary\"\n            onClick={onPressButton}\n            onExpire={onPressButton}\n            duration={time}\n            showTimer\n          />\n        )}\n      </div>\n\n      {Boolean(teams?.B) && (\n        <Team className=\"round-announcement__team-right\" team={teams.B} players={players} />\n      )}\n    </div>\n  );\n}\n\nRoundAnnouncement.propTypes = {\n  round: PropTypes.number,\n  onPressButton: PropTypes.func,\n  buttonText: PropTypes.string,\n  time: PropTypes.number,\n  players: PropTypes.object,\n  teams: PropTypes.object,\n  className: PropTypes.string,\n};\n\nRoundAnnouncement.defaultProps = {\n  buttonText: 'Prosseguir',\n  time: 0,\n};\n","class LocalStorage {\n  constructor() {\n    this.store = {};\n    this.notLoaded = true;\n    this.appName = 'tarde-divertida';\n\n    this.init();\n  }\n\n  init() {\n    this.load();\n    return this.get();\n  }\n\n  get(key) {\n    if (this.notLoaded) {\n      this.load();\n    }\n\n    if (key) {\n      return this.store[key] || null;\n    }\n    return this.store;\n  }\n\n  load() {\n    const localStorage = JSON.parse(window.localStorage.getItem(this.appName));\n    if (localStorage) {\n      this.store = localStorage;\n      this.notLoaded = false;\n    }\n  }\n\n  // To Remove a property, you can use the set method, but passing an object with the key and value\n  // null, the property will be removed from local storage\n  set(value) {\n    if (this.notLoaded) {\n      this.load();\n    }\n\n    const type = typeof value;\n    if (type !== 'string' && type !== 'object') {\n      console.error('localStorage set value must be a string or a key-value object');\n      return;\n    }\n\n    // When value is a string, use as a property toggle\n    if (typeof value === 'string') {\n      this.store[value] = !this.store[value];\n    } else {\n      // Remove any null or undefined property\n      Object.entries(value).forEach(([key, item]) => {\n        if (item === null || item === undefined) {\n          delete value[key];\n        }\n      });\n\n      this.store = {\n        ...this.store,\n        ...value,\n      };\n    }\n\n    this.save();\n  }\n\n  save() {\n    if (this.notLoaded) {\n      this.load();\n    }\n\n    window.localStorage.setItem(this.appName, JSON.stringify(this.store));\n    this.load();\n  }\n}\n\nexport default new LocalStorage();\n","import React, { useCallback, useEffect, useState } from 'react';\n// Design Resources\nimport { Alert, Button, Image, Input, notification, Spin, Tooltip } from 'antd';\nimport { CaretLeftOutlined, CaretRightOutlined, InfoCircleOutlined } from '@ant-design/icons';\n// API & Hooks\nimport { GAME_API } from '../../adapters';\nimport { useLoading } from '../../hooks';\nimport useGlobalState from '../../hooks/useGlobalState';\n// Images\nimport avatars from '../../images/avatars.svg';\n// Services\nimport localStorage from '../../services/localStorage';\n// Utils\nimport { AVATARS, PUBLIC_URL, RANDOM_NAMES } from '../../utils/constants';\nimport { getRandomItem } from '../../utils/index';\n\nconst randomName = process.env.NODE_ENV === 'development' ? getRandomItem(RANDOM_NAMES) : undefined;\n\nconst AVATAR_IDS = Object.keys(AVATARS);\n\nfunction Join({ players, info }) {\n  const [isLoading, setLoader] = useLoading();\n  const [gameId] = useGlobalState('gameId');\n  const [gameName] = useGlobalState('gameName');\n  const [, setUserId] = useGlobalState('userId');\n  const [, setUsername] = useGlobalState('username');\n  const [, setUserAvatarId] = useGlobalState('userAvatarId');\n\n  const [availableAvatars, setAvailableAvatars] = useState(AVATAR_IDS);\n  const [tempAvatar, setTempAvatar] = useState(getRandomItem(AVATAR_IDS));\n  const [tempUsername, setTempUsername] = useState('');\n  const [sameGameId, setSameGameId] = useState(false);\n\n  const [localStorageAvatar, setLocalStorageAvatar] = useState(null);\n\n  // Calculate available avatars and monitor if user chose a non-available one\n  useEffect(() => {\n    const usedAvatars = Object.values(players).reduce((acc, { avatarId }) => {\n      acc[avatarId] = true;\n      return acc;\n    }, {});\n\n    const newAvailableAvatars = AVATAR_IDS.filter((avatarId) => usedAvatars[avatarId] === undefined);\n\n    if (newAvailableAvatars.includes(tempAvatar) && !localStorageAvatar) {\n      setTempAvatar(getRandomItem(newAvailableAvatars));\n    }\n\n    setAvailableAvatars(newAvailableAvatars);\n  }, [players]); // eslint-disable-line\n\n  // Load name and avatarId from localStorage\n  useEffect(() => {\n    const lsAvatarId = localStorage.get('avatarId');\n    const lsUsername = localStorage.get('username');\n    const lsGameId = localStorage.get('gameId');\n\n    if (lsAvatarId && lsUsername) {\n      setTempAvatar(localStorage.get('avatarId'));\n      setTempUsername(localStorage.get('username') ?? '');\n      setLocalStorageAvatar(lsAvatarId);\n\n      if (lsGameId === gameId) {\n        setSameGameId(true);\n      }\n    }\n  }, []); // eslint-disable-line\n\n  const onPreviousAvatar = useCallback(() => {\n    const index = availableAvatars.indexOf(tempAvatar);\n    const newIndex = index === 0 ? availableAvatars.length - 1 : index - 1;\n    setTempAvatar(availableAvatars[newIndex]);\n  }, [availableAvatars, tempAvatar]);\n\n  const onNextAvatar = useCallback(() => {\n    const index = availableAvatars.indexOf(tempAvatar);\n    const newIndex = index === availableAvatars.length - 1 ? 0 : index + 1;\n    setTempAvatar(availableAvatars[newIndex]);\n  }, [availableAvatars, tempAvatar]);\n\n  const onAddPlayer = useCallback(async () => {\n    try {\n      setLoader('add-player', true);\n      const response = await GAME_API.addPlayer({\n        gameId,\n        gameName,\n        playerName: tempUsername,\n        playerAvatarId: tempAvatar,\n      });\n\n      setUserId(response.data.id);\n      setUsername(response.data.name);\n      setUserAvatarId(response.data.avatarId);\n\n      localStorage.set({\n        username: response.data.name,\n        avatarId: response.data.avatarId,\n        gameId,\n      });\n    } catch (e) {\n      notification.error({\n        message: 'Vixi, o aplicativo encontrou um erro ao tentar te adicionar como jogador',\n        description: JSON.stringify(e.message),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n    } finally {\n      setLoader('add-player', false);\n    }\n  }, [gameId, gameName, tempUsername, tempAvatar]); // eslint-disable-line\n\n  const onEnterInput = (e) => {\n    if (e.key === 'Enter') {\n      onAddPlayer();\n    }\n  };\n\n  return (\n    <div className=\"lobby-join\">\n      <Image\n        alt={info?.title}\n        src={`${PUBLIC_URL.BANNERS}game-image-${info?.gameName}.jpg`}\n        fallback={`${PUBLIC_URL.BANNERS}/game-image-em-breve.jpg`}\n        className=\"lobby-join__game-image\"\n      />\n      <h1 className=\"lobby-join__title\">\n        {Boolean(localStorageAvatar) ? 'Bem-vindo de volta!' : 'Selecione seu avatar'}\n      </h1>\n      <div className=\"lobby-join__avatar-selection\">\n        <Button type=\"dashed\" onClick={onPreviousAvatar} className=\"lobby-join__avatar-nav-button\">\n          <CaretLeftOutlined />\n        </Button>\n        <svg viewBox=\"0 0 100 100\" className=\"lobby-join__avatar-selection-image\">\n          <use href={avatars + `#avatar-${tempAvatar}`}></use>\n          <title>{AVATARS[tempAvatar].description.br}</title>\n        </svg>\n        <Button type=\"dashed\" onClick={onNextAvatar} className=\"lobby-join__avatar-nav-button\">\n          <CaretRightOutlined />\n        </Button>\n      </div>\n\n      {Boolean(localStorageAvatar) ? (\n        <Alert\n          className=\"lobby-join__avatar-alert\"\n          type=\"success\"\n          message=\"Você está de volta! Lembramos seu nome e avatar!\"\n        />\n      ) : (\n        <Alert\n          className=\"lobby-join__avatar-alert\"\n          type=\"warning\"\n          message=\"Se alguém selecionar um mesmo avatar, um avatar aleatório será atribuido à você.\"\n        />\n      )}\n\n      {Boolean(sameGameId) && (\n        <Alert\n          className=\"lobby-join__avatar-alert\"\n          type=\"error\"\n          message=\"Se você está retornando a um jogo, NÃO mude seu apelido! Se o apelido for modificado, você será adicionado como um novo jogador e tudo pode bugar.\"\n        />\n      )}\n\n      <Input\n        className=\"lobby-join__name-input\"\n        onChange={(e) => setTempUsername(e.target.value.trim())}\n        placeholder=\"Digite seu nome\"\n        value={tempUsername || randomName}\n        maxLength={10}\n        suffix={\n          <Tooltip title=\"Máximo de 10 caracteres\">\n            <InfoCircleOutlined />\n          </Tooltip>\n        }\n        onKeyPress={onEnterInput}\n      />\n      <Button\n        className=\"lobby-join__join-button\"\n        type=\"primary\"\n        disabled={!Boolean(tempUsername) || isLoading}\n        onClick={onAddPlayer}\n      >\n        {isLoading ? <Spin size=\"small\" /> : 'Entrar no jogo'}\n      </Button>\n    </div>\n  );\n}\n\nexport default Join;\n","import React, { useCallback } from 'react';\n// Design Resources\nimport { Button, Image, message, notification, Typography } from 'antd';\n// API & Hooks\nimport { GAME_API } from '../../adapters';\nimport useGlobalState from '../../hooks/useGlobalState';\nimport { useLoading } from '../../hooks';\n// Images\nimport avatars from '../../images/avatars.svg';\n// Utils and Resources\nimport { PUBLIC_URL } from '../../utils/constants';\n// Components\nimport { AdminOnly } from '../admin/index';\n\nfunction Waiting({ info, players }) {\n  const [isLoading, setLoader] = useLoading();\n  const [gameId] = useGlobalState('gameId');\n  const [gameName] = useGlobalState('gameName');\n  const [gameMeta] = useGlobalState('gameMeta');\n\n  const [username] = useGlobalState('username');\n  const [userAvatarId] = useGlobalState('userAvatarId');\n\n  const onLockGameAndStart = useCallback(async () => {\n    try {\n      setLoader('lock-game', true);\n      const response = await GAME_API.lockGame({\n        gameId,\n        gameName,\n      });\n      if (response.data.isLocked) {\n        message.success('Jogo trancado e iniciado com sucesso!');\n      }\n    } catch (e) {\n      notification.error({\n        message: 'Vixi, o aplicativo encontrou um erro ao tentar trancar e iniciar o jogo',\n        description: JSON.stringify(e.message),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n    } finally {\n      setLoader('lock-game', false);\n    }\n  }, [gameId, gameName, setLoader]);\n\n  const numPlayers = Object.keys(players).length;\n\n  return (\n    <div className=\"lobby-waiting\">\n      <Image\n        alt={info?.title}\n        src={`${PUBLIC_URL.BANNERS}game-image-${info?.gameName}.jpg`}\n        fallback={`${PUBLIC_URL.BANNERS}/game-image-em-breve.jpg`}\n      />\n\n      <h1 className=\"center\">{username || 'Fulano'},</h1>\n      <svg viewBox=\"0 0 100 100\" className=\"lobby-waiting__avatar\">\n        <use href={avatars + `#avatar-${userAvatarId}`}></use>\n      </svg>\n      <h3 className=\"center\">Aguarde os outros jogadores entrarem.</h3>\n      <AdminOnly className=\"lobby-waiting__lock-button\">\n        <Typography.Text className=\"center padding\">\n          Jogadores necessários: {numPlayers}/{gameMeta.min}\n        </Typography.Text>\n        <Button\n          type=\"primary\"\n          danger\n          onClick={onLockGameAndStart}\n          disabled={isLoading || numPlayers < gameMeta.min}\n        >\n          Trancar e Iniciar Jogo\n        </Button>\n      </AdminOnly>\n    </div>\n  );\n}\n\nexport default Waiting;\n","import clsx from 'clsx';\nimport React from 'react';\nimport { PUBLIC_URL } from '../../utils/constants';\n\nfunction Cloud() {\n  return <div className=\"cloud-background__cloud cloud-background__cloud-basic\"></div>;\n}\n\nfunction CyberCloud() {\n  return (\n    <div className=\"cloud-background__cloud cloud-background__cyber-cloud\">\n      <svg data-name=\"Layer 6\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 352 215.72\">\n        <defs />\n        <path\n          d=\"M352 83.98h-48.56v-84H119.07v40.76H50.29v50.71H.05v111.5h36.24v12.77h283.26v-14.43h32.5zm-231-82h180.42v82h-66.74v54.79H121.07v-15.71h11.52v-82.3h-11.52zm196.48 197.29h-80.8v-14.82h66.74V140.8h14.06zm-16.04-16.82H236.7V140.8h64.74zm-180.37-41.68h113.68v41.68H121.07zm115.68-2V85.98h64.74v52.79zm-117.68 0h-7.48v-15.71h7.48zm2-17.71v-78.3h9.52v78.3zm-68.78-78.3h66.78v78.3h-7.48V91.45h-59.3zm0 50.65h57.3v27.65h-57.3zM2 200.95V93.45h48.24v29.65h59.3v15.71h-73.3v62.18zm107.54-60.18v60.18h-71.3v-60.18zm208 73H38.24v-10.82h73.3v-62.18h7.53v43.68h115.68v16.87h82.8zm32.5-14.43h-30.5v-60.52h-16.06V86.03h46.56z\"\n          fill=\"#0f0\"\n        />\n      </svg>\n    </div>\n  );\n}\n\nfunction FunkyCloud() {\n  return (\n    <div className=\"cloud-background__cloud cloud-background__funky-cloud\">\n      <svg data-name=\"Layer 6\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 377.96 227.27\">\n        <defs />\n        <path\n          d=\"M377.96 162.03a65.23 65.23 0 00-55.76-64.55v-.7a96.8 96.8 0 00-96.8-96.8 96.8 96.8 0 00-86.44 53.18 53.48 53.48 0 00-31.33-10.09 53.71 53.71 0 00-53.71 53.71v1a65.25 65.25 0 00-54 64.24 65.22 65.22 0 0065.23 65.23h253.71v-.29a65.23 65.23 0 0059.1-64.93z\"\n          fill=\"#f45b69\"\n        />\n        <path\n          d=\"M353.29 168.55a56.72 56.72 0 00-48.49-56.07v-.6a84.17 84.17 0 00-84.17-84.17 84.14 84.14 0 00-75.15 46.21 46.53 46.53 0 00-27.26-8.79 46.7 46.7 0 00-46.7 46.71v.86a56.71 56.71 0 00-46.91 55.85 56.72 56.72 0 0056.72 56.71h220.51v-.25a56.72 56.72 0 0051.45-56.46z\"\n          fill=\"#3a7ca5\"\n        />\n        <path\n          d=\"M322.21 175.86a47.42 47.42 0 00-40.53-46.91v-.5a70.36 70.36 0 00-70.36-70.35 70.33 70.33 0 00-62.8 38.66 38.81 38.81 0 00-22.78-7.35 39 39 0 00-39 39v.72a47.42 47.42 0 00-39.21 46.69 47.41 47.41 0 0047.41 47.4h184.32v-.21a47.41 47.41 0 0042.95-47.15z\"\n          fill=\"#44bba4\"\n        />\n        <path\n          d=\"M290.48 184.3a36 36 0 00-30.75-35.59v-.38a53.37 53.37 0 00-53.37-53.37 53.34 53.34 0 00-47.65 29.33 29.5 29.5 0 00-17.28-5.57 29.62 29.62 0 00-29.62 29.61v.55a36 36 0 00-29.75 35.42 36 36 0 0036 36H257.9v-.16a36 36 0 0032.58-35.84z\"\n          fill=\"#f2e863\"\n        />\n      </svg>\n    </div>\n  );\n}\n\nfunction DetectiveCloud() {\n  const result = Math.round(Math.random());\n\n  return (\n    <div className=\"cloud-background__cloud cloud-background__body-mark\">\n      {result === 0 ? (\n        <svg data-name=\"Layer 6\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 360.01 214.25\">\n          <defs />\n          <path\n            d=\"M167.81 214.25c-7.08 0-9.84-4-10.21-4.65a74.21 74.21 0 01-7-15.79c-.38-1.33-9.27-32.55-10.51-44.86-.93-9.19-5.64-12.57-5.84-12.71a137.57 137.57 0 00-13.37-7.3l-26.12-12.06 8.37 28.8a13.91 13.91 0 01-8.31 16.61l-72.7 27.37a12.85 12.85 0 01-10-.36 12.83 12.83 0 01-6.74-7.35l-4.59-12.9a14 14 0 017.08-17.22l43.7-20.87a1.58 1.58 0 00.72-.55 1.94 1.94 0 00-.49-.72l-5.12-5.33c-3.35-3.49-6.95-9.31-6.95-13.84 0-3.44 1.25-9.62 2.43-13.69l.5-1.71a32.92 32.92 0 01-28.3-7.53C6.11 80.54 1.64 70.22 3.73 63.06c.3-1 .57-2.09.85-3.18 2.67-10.31 6.32-24.42 32.88-28.81 18.5-3.06 32.89 12.64 33.49 13.31l.27.3 1.83-2.8a49.15 49.15 0 0111.74-13.17l27.05-19.67a43.43 43.43 0 0116.68-6.75L143.32.2a27.67 27.67 0 0117.8 4.35c7.24 4.06 40.27 22.94 46.25 32.65 1.22 2 3.48 5.66-9.73 21.47a13.81 13.81 0 01-18.15 3.38l-33.39-21a6.89 6.89 0 00-7.12.48l-12 9.95-.18.16.22.12 47.37 22.95a39.55 39.55 0 0013.19 3.2l49.86 1.27a38.33 38.33 0 0117.35 5.34l66.23 42.68a6 6 0 006.53-.57l1.56-1.45a15 15 0 0118.71-1l7.18 5.38a12.38 12.38 0 014.92 8.67 12.37 12.37 0 01-3.18 9.45l-24.86 27.46a14.08 14.08 0 01-18.51 1.79l-56.61-42.42a88.18 88.18 0 00-12.7-7.61 38.18 38.18 0 00-13.09-2.87h-37a2.14 2.14 0 00-1.64.65 2.17 2.17 0 00-.45 1.71l3.39 27.77a2 2 0 00.78 1.45 2 2 0 001.64.17l52.39-14.42a15.65 15.65 0 0117.3 7.33l20 36.62a13.17 13.17 0 01-5.09 17.73l-9.19 5.15a16.26 16.26 0 01-18.66-2.57c-7.32-7.32-11.24-11.86-13.3-14.84-5.26 1.37-20.37 6-63.61 21.36l-.94.33a26.62 26.62 0 01-8.78 1.78zm-2-10.33c.69.37 3 .78 7.46-.81l.93-.33c6.23-2.21 22.76-8.08 38.06-13.26 31.59-10.68 32.28-10.12 34.85-8a5.13 5.13 0 011.79 3c1.35 2.24 7.44 8.92 12.63 14.11a6.26 6.26 0 006.69.92l9.19-5.15a3.16 3.16 0 001.21-4.21l-20-36.62a5.7 5.7 0 00-5.87-2.49l-52.38 14.42a12 12 0 01-9.86-1.5 12 12 0 01-5.14-8.55l-3.39-27.77a12.14 12.14 0 012.89-9.55 12.17 12.17 0 019.12-4h37a48.13 48.13 0 0117.31 3.8 97.37 97.37 0 0114.48 8.68l56.61 42.42a4 4 0 005.1-.5l24.86-27.48a2.29 2.29 0 00.65-1.78 2.29 2.29 0 00-1-1.63l-7.17-5.38a5.08 5.08 0 00-5.92.31l-1.56 1.44a16 16 0 01-18.74 1.63l-66.23-42.67a29.27 29.27 0 00-12.19-3.76l-49.85-1.26a49.24 49.24 0 01-17.3-4.2L122.67 60.8a10.23 10.23 0 01-6.07-7.87 10.23 10.23 0 014-9.1l12-10a16.92 16.92 0 0118.82-1.26l33.43 20.95a3.74 3.74 0 004.82-.93l.21-.27a75.74 75.74 0 008-11.22c-5.68-6.33-27.23-19.82-41.87-28l-.52-.33a17.72 17.72 0 00-10.75-2.71l-14.8 2.09a33.29 33.29 0 00-12.19 4.94L90.7 36.76a39 39 0 00-9 10.12l-.17.28-5.34 8.21c-2.39 4.11-5.69 4-7 3.74-4-.76-5.79-5-6.59-9-3-2.84-12.61-11-23.48-9.18-20.14 3.33-22.41 12.13-24.82 21.44-.31 1.19-.62 2.36-.94 3.48-.74 2.52 1.52 9 7.53 14.13 4.42 3.77 13.82 9.18 27.1 2.91l10-4.73-6.23 21.45a54.14 54.14 0 00-2 10.9c.08.93 1.63 4.27 4.16 6.91l5.12 5.33a10.84 10.84 0 013.11 9.46 10.83 10.83 0 01-6.24 7.76l-43.7 20.88a4.12 4.12 0 00-2 4.8l4.65 12.92a2.92 2.92 0 001.52 1.66 2.86 2.86 0 002.24.08l72.71-27.37a3.83 3.83 0 002.23-4.46l-9.19-31.62c-1.65-5.66.91-8.63 2.09-9.64s4.5-3.11 9.85-.64l28.79 13.29a146.4 146.4 0 0114.65 8c.9.57 8.9 6.06 10.31 20.07 1.16 11.43 10.1 42.8 10.19 43.12a64.66 64.66 0 005.6 12.86zm83.13-17.76zm0 0zM126.39 51.38z\"\n            fill=\"#fff\"\n          />\n        </svg>\n      ) : (\n        <svg data-name=\"Layer 6\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 235.56 235.54\">\n          <defs />\n          <path\n            d=\"M214.71 121.48a71.16 71.16 0 10-113.63-17.8l-.58.49-96.51 90.6a12.55 12.55 0 00-.28 18.09l19 19a12.45 12.45 0 0018-.35l90-97.1c.11-.11.21-.24.31-.36a71.19 71.19 0 0083.69-12.57zm-86.67-14a51.41 51.41 0 1172.71 0 51.41 51.41 0 01-72.71.04z\"\n            fill=\"#f45b69\"\n          />\n        </svg>\n      )}\n    </div>\n  );\n}\n\nfunction ArtsyCloud({ index }) {\n  return (\n    <div className=\"cloud-background__cloud cloud-background__body-mark\">\n      <img src={`${PUBLIC_URL.ROOT}cloud-arte-ruim-${index}.jpg`} alt=\"cloud\" />\n    </div>\n  );\n}\n\nfunction getTypeComponent(type) {\n  switch (type) {\n    case 'cloud':\n      return Cloud;\n    case 'cyber-cloud':\n      return CyberCloud;\n    case 'funky-cloud':\n      return FunkyCloud;\n    case 'detective-cloud':\n      return DetectiveCloud;\n    case 'artsy-cloud':\n      return ArtsyCloud;\n    default:\n      return Cloud;\n  }\n}\n\nfunction CloudBackground({ type = 'cloud' }) {\n  const TypeComponent = getTypeComponent(type);\n\n  const baseClass = 'cloud-background';\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${type}`)}>\n      <div className=\"cloud-background__animation-1\">\n        <TypeComponent index={0} />\n      </div>\n\n      <div className=\"cloud-background__animation-2\">\n        <TypeComponent index={1} />\n      </div>\n\n      <div className=\"cloud-background__animation-3\">\n        <TypeComponent index={2} />\n      </div>\n\n      <div className=\"cloud-background__animation-4\">\n        <TypeComponent index={3} />\n      </div>\n\n      <div className=\"cloud-background__animation-5\">\n        <TypeComponent index={4} />\n      </div>\n    </div>\n  );\n}\n\nexport default CloudBackground;\n","import React from 'react';\n// Hooks\nimport useGlobalState from '../../hooks/useGlobalState';\n// Components\nimport { PhaseContainer } from '../shared';\nimport Join from './Join';\nimport Waiting from './Waiting';\nimport CloudBackground from './CloudBackground';\nimport { AvatarEntry } from '../avatars';\n\nconst backgroundType = {\n  A: 'artsy-cloud',\n  E: 'cyber-cloud',\n  O: 'funky-cloud',\n  D: 'detective-cloud',\n  U: 'cloud',\n};\n\nfunction Lobby({ players, info }) {\n  const [userId] = useGlobalState('userId');\n  const [username] = useGlobalState('username');\n  const [userAvatarId] = useGlobalState('userAvatarId');\n\n  return (\n    <PhaseContainer phase=\"LOBBY\" allowedPhase=\"LOBBY\" info={info}>\n      <div className=\"lobby__room\">\n        {Object.values(players).map((player, index) => (\n          <AvatarEntry\n            key={player.name}\n            id={player.avatarId}\n            name={player.name}\n            className={`lobby__seat lobby__seat--${index}`}\n            animate\n          />\n        ))}\n\n        {userId && username && userAvatarId !== undefined ? (\n          <Waiting players={players} info={info} />\n        ) : (\n          <Join players={players} info={info} />\n        )}\n      </div>\n\n      <CloudBackground type={backgroundType?.[info.gameCode]} />\n    </PhaseContainer>\n  );\n}\n\nexport default Lobby;\n","import React, { Fragment, useMemo, useState } from 'react';\n// Design Resources\nimport { Affix, Avatar as AntAvatar, Badge, Button, Divider, Drawer } from 'antd';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n// Utils\nimport { AVATARS } from '../../utils/constants';\n// Components\nimport { Avatar } from '../avatars';\nimport { RulesModal } from '../modals';\n\nfunction SectionMe({ player, isTeamGame }) {\n  return (\n    <div className=\"game-info-drawer__section-me\">\n      <div className=\"game-info-drawer__label\">Você é{isTeamGame && ` do time ${player?.team ?? '?'}`}</div>\n      <div className=\"game-info-drawer__me\">\n        <Badge count={player.score} className=\"game-info-drawer__avatar-with-badge\">\n          <Avatar id={player.avatarId} shape=\"square\" />\n        </Badge>\n        {player.name}, {AVATARS[player.avatarId].description.br}\n      </div>\n    </div>\n  );\n}\n\nfunction SectionMeta({ round, roundsToEndGame, groupScore, pointsToVictory, isTeamGame, teams }) {\n  return (\n    <ul className=\"game-info-drawer__meta\">\n      <li className=\"game-info-drawer__meta-item\">\n        <div className=\"game-info-drawer__label-inline\">Rodada:</div>\n        <AntAvatar className=\"game-info-drawer__round\" size=\"small\">\n          {round}\n        </AntAvatar>\n        {Boolean(roundsToEndGame) && !isNaN(round) && (\n          <Fragment>\n            <span className=\"game-info-drawer__inline-separator\">de</span>\n            <AntAvatar className=\"game-info-drawer__round\" size=\"small\">\n              {round + roundsToEndGame}\n            </AntAvatar>\n          </Fragment>\n        )}\n      </li>\n\n      {Boolean(groupScore) && (\n        <li className=\"game-info-drawer__meta-item\">\n          <div className=\"game-info-drawer__label-inline\">Pontos:</div>\n          <AntAvatar className=\"game-info-drawer__round\" size=\"default\" style={{ backgroundColor: 'gold' }}>\n            {groupScore ?? 0}\n          </AntAvatar>\n        </li>\n      )}\n\n      {Boolean(teams) && (\n        <li className=\"game-info-drawer__meta-item\">\n          <div className=\"game-info-drawer__label-inline\">Pontos A vs B:</div>\n          <AntAvatar className=\"game-info-drawer__round\" size=\"default\">\n            {teams?.A?.score ?? '?'}\n          </AntAvatar>\n          <span className=\"game-info-drawer__inline-separator\">vs</span>\n          <AntAvatar className=\"game-info-drawer__round\" size=\"default\">\n            {teams?.B?.score ?? '?'}\n          </AntAvatar>\n        </li>\n      )}\n\n      {Boolean(pointsToVictory) && (\n        <div>\n          <div className=\"game-info-drawer__label-inline\">\n            Pontos restantes para {isTeamGame ? 'um time' : 'alguém'} ganhar:\n          </div>\n          <AntAvatar className=\"game-info-drawer__round\" size=\"small\">\n            {pointsToVictory}\n          </AntAvatar>\n        </div>\n      )}\n    </ul>\n  );\n}\n\nfunction SectionTeams({ players, teams }) {\n  return (\n    <div className=\"game-info-drawer__team-players\">\n      {Object.values(teams).map((team) => (\n        <SectionTeamPlayers key={team.name} team={team} players={players} />\n      ))}\n    </div>\n  );\n}\n\nfunction SectionTeamPlayers({ team, players }) {\n  const sortedPlayers = useMemo(\n    () =>\n      team.members\n        .map((playerId) => {\n          return players[playerId];\n        })\n        .sort((a, b) => (a.name > b.name ? 1 : -1)),\n    [players, team]\n  );\n\n  return (\n    <div className=\"game-info-drawer__team\" key={team.name}>\n      <h3>Team {team.name}</h3>\n      <ul>\n        {sortedPlayers.map((player) => {\n          return (\n            <div className=\"game-info-drawer__ranked-player\" key={`ranked-${player.id}`}>\n              <Avatar id={player.avatarId} shape=\"square\" className=\"game-info-drawer__avatar-with-badge\" />\n              {player.name}, {AVATARS[player.avatarId].description.br}\n            </div>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nfunction SectionRankedPlayers({ players }) {\n  const rankedPlayers = useMemo(() => Object.values(players).sort((a, b) => (a.score < b.score ? 1 : -1)), [\n    players,\n  ]);\n  return (\n    <ul>\n      {rankedPlayers.map((player, index) => {\n        return (\n          <div className=\"game-info-drawer__ranked-player\" key={`ranked-${player.name}`}>\n            {index + 1}.{' '}\n            <Badge count={player.score} className=\"game-info-drawer__avatar-with-badge\">\n              <Avatar id={player.avatarId} shape=\"square\" />\n            </Badge>\n            {player.name}, {AVATARS[player.avatarId].description.br}\n          </div>\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction GameInfoDrawer({ players, state, info, userId }) {\n  const [visible, setVisible] = useState(false);\n\n  if (state.phase === 'LOBBY') {\n    return <></>;\n  }\n\n  const showDrawer = () => {\n    setVisible(true);\n  };\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  const completeMe = players?.[userId] ?? {};\n  const isTeamGame = Boolean(completeMe?.team) && Boolean(state.teams);\n\n  return (\n    <Fragment>\n      <Affix offsetTop={10} className=\"game-info-drawer__affix-button\">\n        <Button\n          type=\"primary\"\n          shape=\"circle\"\n          size=\"large\"\n          className=\"game-info-drawer__button\"\n          onClick={showDrawer}\n          icon={<InfoCircleOutlined />}\n        />\n      </Affix>\n\n      <Drawer title={info.title} placement=\"right\" closable={false} onClose={onClose} visible={visible}>\n        {completeMe && <SectionMe player={completeMe} isTeamGame={isTeamGame} />}\n\n        <Divider />\n\n        <RulesModal gameInfo={info} />\n\n        <Divider />\n\n        <SectionMeta\n          round={state?.round || '?'}\n          roundsToEndGame={state?.roundsToEndGame}\n          groupScore={state?.groupScore}\n          pointsToVictory={state?.pointsToVictory}\n          isTeamGame={isTeamGame}\n          teams={state?.teams}\n        />\n\n        <Divider />\n\n        {isTeamGame ? (\n          <SectionTeams players={players} teams={state?.teams} />\n        ) : (\n          <SectionRankedPlayers players={players} />\n        )}\n      </Drawer>\n    </Fragment>\n  );\n}\n\nexport default GameInfoDrawer;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useGameState, useGlobalState, useGamePlayers } from '../../hooks';\n// Utils\nimport gameList from '../../resources/games.json';\n// Components\nimport Lobby from '../lobby/Lobby';\nimport GameInfoDrawer from '../shared/GameInfoDrawer';\n\nexport function Session({ gameId, gameCollection, getActiveComponent }) {\n  const players = useGamePlayers(gameId, gameCollection);\n  const state = useGameState(gameId, gameCollection);\n  const [userId] = useGlobalState('userId');\n  const [info, setInfo] = useState({});\n\n  // Update game description as the gameId comes in\n  useEffect(() => {\n    setInfo(gameId?.[0] ? gameList[gameId[0]] : {});\n  }, [gameId]);\n\n  if (process.env.NODE_ENV === 'development') {\n    console.table(players);\n    console.log({ state });\n  }\n\n  if (!userId) {\n    return <Lobby players={players} state={state} info={info} />;\n  }\n\n  const ActiveComponent = getActiveComponent(state.phase);\n\n  return (\n    <Fragment>\n      <GameInfoDrawer players={players} state={state} info={info} userId={userId} />\n      <ActiveComponent players={players} state={state} info={info} />\n    </Fragment>\n  );\n}\n\nSession.propTypes = {\n  gameId: PropTypes.string.isRequired,\n  gameCollection: PropTypes.string.isRequired,\n  getActiveComponent: PropTypes.func.isRequired,\n};\n","import { notification } from 'antd';\nimport { useDocument } from 'react-firebase-hooks/firestore';\n// Services\nimport { firestore } from '../services/firebase';\n\nexport function useGamePlayers(gameId, gameName) {\n  const [snapshot, loading, error] = useDocument(firestore.doc(`${gameName}/${gameId}/session/players`), {\n    snapshotListenOptions: { includeMetadataChanges: true },\n  });\n\n  if (error) {\n    notification.error({\n      message: 'Applicativo encontrou um erro ao tentar atualizar os jogadores',\n      description: JSON.stringify(error),\n      placement: 'bottomLeft',\n    });\n    console.error(error);\n  }\n\n  if (loading) {\n    console.log('%cRefreshing players...', 'color:orange');\n  }\n\n  return snapshot?.data() ?? {};\n}\n","import { notification } from 'antd';\nimport { useDocument } from 'react-firebase-hooks/firestore';\n// Services\nimport { firestore } from '../services/firebase';\n\nexport function useGameState(gameId, gameName) {\n  const [snapshot, loading, error] = useDocument(firestore.doc(`${gameName}/${gameId}/session/state`), {\n    snapshotListenOptions: { includeMetadataChanges: true },\n  });\n\n  if (error) {\n    notification.error({\n      message: 'Aplicativo encontrou um erro ao tentar atualizar o estado do jogo',\n      description: JSON.stringify(error),\n      placement: 'bottomLeft',\n    });\n    console.error(error);\n  }\n\n  if (loading) {\n    console.log('%cRefreshing state...', 'color:tomato');\n  }\n\n  return snapshot?.data() ?? {};\n}\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { StarFilled } from '@ant-design/icons';\n\nexport const StarPoints = memo(function ({ quantity, keyPrefix, className = '' }) {\n  if (!quantity || quantity < 1) {\n    return <span></span>;\n  }\n  const starsArray = Array.from({ length: quantity }, (_, i) => <StarFilled key={`${keyPrefix}-${i}`} />);\n  return (\n    <span className={clsx('star-points', className)}>\n      + <span className=\"star-points__stars\">{starsArray}</span> ponto{quantity > 1 ? 's' : ''}\n    </span>\n  );\n});\n\nStarPoints.propTypes = {\n  quantity: PropTypes.number,\n  className: PropTypes.string,\n  keyPrefix: PropTypes.string.isRequired,\n};\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Components\nimport { Loading } from '../loaders';\n\nexport function StepSwitcher({ children, step, conditions }) {\n  if (!children[step]) {\n    return <Loading />;\n  }\n\n  return (conditions?.[step] ?? true) && <Fragment>{children[step]}</Fragment>;\n}\n\nStepSwitcher.propTypes = {\n  children: PropTypes.any.isRequired,\n  step: PropTypes.number.isRequired,\n  conditions: PropTypes.arrayOf(PropTypes.bool),\n};\n\nexport function Step({ children, fullWidth = false, className }) {\n  return <div className={clsx('step', fullWidth && 'step--full-width', className)}>{children}</div>;\n}\n\nStep.propTypes = {\n  children: PropTypes.any.isRequired,\n  fullWidth: PropTypes.bool,\n  className: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Button } from 'antd';\n// Hook and Utils\nimport { useTimer } from 'react-timer-hook';\nimport { inNSeconds } from '../../utils';\n\nexport function TimedButton({ duration, label, onExpire, showTimer, ...props }) {\n  const { seconds } = useTimer({\n    expiryTimestamp: inNSeconds(duration),\n    autoStart: true,\n    onExpire: showTimer ? onExpire : undefined,\n  });\n\n  const timeClass = 'timed-button__time';\n\n  return (\n    <Button {...props}>\n      {label} {showTimer && <span className={clsx(timeClass, `${timeClass}--${props.type}`)}>{seconds}</span>}\n    </Button>\n  );\n}\n\nTimedButton.propTypes = {\n  duration: PropTypes.number,\n  label: PropTypes.any.isRequired,\n  onExpire: PropTypes.func.isRequired,\n  showTimer: PropTypes.bool,\n};\n\nTimedButton.defaultProps = {\n  duration: 10,\n  showTimer: true,\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Typography } from 'antd';\nimport clsx from 'clsx';\n\nexport const Title = memo(function ({ children, white, icon, className, level }) {\n  return (\n    <Typography.Title level={level} className={clsx('title', white && 'title--white', className)}>\n      {Boolean(icon) && icon}\n      {children}\n    </Typography.Title>\n  );\n});\n\nTitle.propTypes = {\n  children: PropTypes.any.isRequired,\n  white: PropTypes.bool,\n  icon: PropTypes.element,\n  className: PropTypes.string,\n  level: PropTypes.number,\n};\n\nTitle.defaultProps = {\n  className: '',\n  level: 1,\n};\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nexport function View({ children }) {\n  return <Fragment>{children}</Fragment>;\n}\n\nexport function ViewIf({ isVisible = false, children }) {\n  return isVisible && <Fragment>{children}</Fragment>;\n}\n\nexport function ViewSwitch({ cases, children }) {\n  if (cases.length > 5) {\n    throw Error('ViewSwitch only supports up to 5 cases');\n  }\n\n  if (cases[0] && children[0]) {\n    return children[0];\n  }\n\n  if (cases[1] && children[1]) {\n    return children[1];\n  }\n\n  if (cases[2] && children[2]) {\n    return children[2];\n  }\n\n  if (cases[3] && children[3]) {\n    return children[3];\n  }\n\n  if (cases[4] && children[4]) {\n    return children[4];\n  }\n  console.warn('Rendering all children in the ViewSwitch');\n  return children;\n}\n\nView.propTypes = {\n  children: PropTypes.any.isRequired,\n};\n\nViewIf.propTypes = {\n  children: PropTypes.any.isRequired,\n  isVisible: PropTypes.bool,\n};\n\nViewIf.propTypes = {\n  children: PropTypes.any.isRequired,\n  cases: PropTypes.arrayOf(PropTypes.bool),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Spin } from 'antd';\n// Components\nimport { Instruction, ReadyPlayersBar, Title } from './index';\n\nexport function WaitingRoom({ players, title, instruction, children }) {\n  return (\n    <div className=\"waiting-room\">\n      <Title>{title}</Title>\n      <Spin />\n      <Instruction>{instruction}</Instruction>\n      {children}\n      <ReadyPlayersBar players={players} showNames />\n    </div>\n  );\n}\n\nWaitingRoom.propTypes = {\n  players: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n  instruction: PropTypes.string.isRequired,\n  children: PropTypes.any,\n};\n\nexport default WaitingRoom;\n","import React, { Fragment, useCallback, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Image, Modal, message, Button, notification } from 'antd';\n// Adapters\nimport { GAME_API } from '../../adapters';\n// Hooks\nimport { useLoading } from '../../hooks';\n// Constants\nimport { PUBLIC_URL } from '../../utils/constants';\n// Components\nimport { Loading } from '../loaders';\nimport { Instruction, Title } from '../shared';\n\nexport function CreateGameModal({ gameInfo }) {\n  const history = useHistory();\n  const [, setLoader] = useLoading();\n  const [isVisible, setVisibility] = useState(false);\n  const [isLoading, setLoading] = useState(true);\n  const [gameId, setGameId] = useState(null);\n\n  const onCloseModal = useCallback(() => {\n    setVisibility(false);\n  }, []);\n\n  useEffect(() => {\n    async function createGame() {\n      try {\n        setLoader('create', true);\n        const response = await GAME_API.initializeGame({ gameCode: gameInfo.gameCode });\n        if (response.data.gameId) {\n          setGameId(response.data.gameId);\n        }\n      } catch (e) {\n        notification.error({\n          message: 'Applicativo encontrou um erro ao tentar criar o jogo',\n          description: JSON.stringify(e.message),\n          placement: 'bottomLeft',\n        });\n        console.error(e);\n        setVisibility(false);\n      } finally {\n        setLoading(false);\n        setLoader('create', false);\n      }\n    }\n\n    if (isVisible) {\n      createGame();\n    }\n  }, [isVisible]); // eslint-disable-line\n\n  const onConfirmGame = () => {\n    if (gameId) {\n      history.push(`/${gameId}`);\n    } else {\n      message.info('Péra! O jogo ainda não foi inicializado.');\n    }\n  };\n\n  return (\n    <Fragment>\n      <Button type=\"primary\" onClick={() => setVisibility(true)}>\n        Criar Jogo\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`Criando jogo: ${gameInfo.title}`}\n          visible={isVisible}\n          onCancel={onCloseModal}\n          onOk={onConfirmGame}\n        >\n          <Fragment>\n            <Image\n              alt={gameInfo.title}\n              src={`${PUBLIC_URL.BANNERS}game-image-${gameInfo.gameName}.jpg`}\n              fallback={`${PUBLIC_URL.BANNERS}/game-image-em-breve.jpg`}\n            />\n\n            {isLoading ? (\n              <Fragment>\n                <Instruction>O jogo está sendo criado...</Instruction>\n                <Loading message=\"Gerando...\" margin />\n              </Fragment>\n            ) : (\n              <div>\n                <Title className=\"center\">Jogo inicializado: {gameId}</Title>\n                <Instruction>Pressione OK para ser redirecionadx à página do jogo.</Instruction>\n              </div>\n            )}\n          </Fragment>\n        </Modal>\n      )}\n    </Fragment>\n  );\n}\n\nCreateGameModal.propTypes = {\n  gameInfo: PropTypes.shape({\n    gameCode: PropTypes.string.isRequired,\n    gameName: PropTypes.string,\n    title: PropTypes.string,\n  }),\n};\n","import React from 'react';\n// Design Resources\nimport { Button, Layout, Space, Typography } from 'antd';\nimport { CheckCircleFilled, MehFilled, RobotFilled, SmileFilled } from '@ant-design/icons';\n// State\nimport { GAME_API } from '../../adapters';\nimport { useLoading, useIsUserReady, useAPICall } from '../../hooks';\n// Components\nimport { RulesCarousel } from './index';\nimport { LoadingPage } from '../loaders';\nimport { ReadyPlayersBar } from '../shared';\n\nexport function Rules({ players, info }) {\n  const [isLoading] = useLoading();\n  const isUserReady = useIsUserReady(players);\n\n  const onBeReady = useAPICall({\n    apiFunction: GAME_API.makeMeReady,\n    actionName: 'be-ready',\n    successMessage: 'Pronto! Aguarde os outros jogadores estarem prontos',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar continuar',\n  });\n\n  const onBeReadyQue = useAPICall({\n    apiFunction: GAME_API.makeMeReady,\n    actionName: 'be-ready',\n    successMessage: 'Vixi, se fudeu então, pq o jogo vai começar!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar continuar',\n  });\n\n  if (!info?.gameName) {\n    return <LoadingPage />;\n  }\n\n  return (\n    <Layout.Content className=\"rules\">\n      <Typography.Title className=\"center\">Regras do Jogo</Typography.Title>\n\n      <RulesCarousel info={info} className=\"rules__carousel\" ruleClass=\"rules__rule\" />\n\n      <Space className=\"rules__actions\">\n        <Button\n          type=\"primary\"\n          icon={isUserReady ? <CheckCircleFilled /> : <SmileFilled />}\n          disabled={isLoading || isUserReady}\n          onClick={() => onBeReady({})}\n        >\n          Entendi tudo e estou pronto para jogar!\n        </Button>\n        <Button\n          icon={isUserReady ? <CheckCircleFilled /> : <MehFilled />}\n          disabled={isLoading || isUserReady}\n          onClick={() => onBeReady({})}\n        >\n          Não entendi nada, mas vamos lá\n        </Button>\n        <Button\n          type=\"primary\"\n          danger\n          icon={isUserReady ? <CheckCircleFilled /> : <RobotFilled />}\n          disabled={isLoading || isUserReady}\n          onClick={() => onBeReadyQue({})}\n        >\n          Que?\n        </Button>\n      </Space>\n      <ReadyPlayersBar players={players} showNames />\n    </Layout.Content>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Typography, Image, Carousel, Button } from 'antd';\n// Constants\nimport { PUBLIC_URL } from '../../utils/constants';\nimport { DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\n\nexport function RulesCarousel({ info, className, ruleClass }) {\n  const settings = {\n    prevArrow: (\n      <Button>\n        <DoubleLeftOutlined className=\"rules-carousel__nav rules-carousel__nav--left\" />\n      </Button>\n    ),\n    nextArrow: (\n      <Button>\n        <DoubleRightOutlined className=\"rules-carousel__nav rules-carousel__nav--right\" />\n      </Button>\n    ),\n  };\n\n  return (\n    <Carousel\n      className={clsx('rules-carousel', className)}\n      autoplay\n      autoplaySpeed={15000}\n      arrows\n      {...settings}\n    >\n      {info.rules.map((rule, index) => (\n        <div className={clsx('rules-carousel__rule', ruleClass)} key={rule}>\n          <span className=\"rules-carousel__rule-number\">{index + 1}</span>\n\n          <Image\n            className=\"rules-carousel__image\"\n            src={\n              index === 0\n                ? `${PUBLIC_URL.BANNERS}game-image-${info.gameName}.jpg`\n                : `${PUBLIC_URL.RULES}game-rule-${info.gameName}-${index}.jpg`\n            }\n            fallback={`${PUBLIC_URL.RULES}game-rule-not-found.jpg`}\n            alt={rule}\n          />\n          <Typography.Paragraph className=\"rules-carousel__rule-text\">{rule}</Typography.Paragraph>\n        </div>\n      ))}\n    </Carousel>\n  );\n}\n\nRulesCarousel.propTypes = {\n  info: PropTypes.shape({\n    gameName: PropTypes.string,\n    rules: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string,\n  }),\n  className: PropTypes.string,\n  ruleClass: PropTypes.string,\n};\n\nRulesCarousel.defaultProps = {\n  className: '',\n  ruleClass: '',\n};\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\n\n// Design Resources\nimport { Button, Modal } from 'antd';\nimport { ReadOutlined } from '@ant-design/icons';\n// Components\nimport { RulesCarousel } from '../rules/index';\n\nexport function RulesModal({ gameInfo }) {\n  const [isVisible, setVisibility] = useState(false);\n\n  const onCloseModal = () => {\n    setVisibility(false);\n  };\n\n  return (\n    <Fragment>\n      <Button type=\"default\" onClick={() => setVisibility(true)} icon={<ReadOutlined />}>\n        Regras\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`Rules: ${gameInfo.title}`}\n          visible={isVisible}\n          onCancel={onCloseModal}\n          className=\"rules-modal\"\n          footer={[\n            <Button key=\"close\" onClick={onCloseModal}>\n              Fechar\n            </Button>,\n          ]}\n        >\n          <RulesCarousel info={gameInfo} />\n        </Modal>\n      )}\n    </Fragment>\n  );\n}\n\nRulesModal.propTypes = {\n  gameInfo: PropTypes.shape({\n    gameName: PropTypes.string,\n    rules: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string,\n  }),\n};\n","import React from 'react';\nimport { message } from 'antd';\n\n/**\n * Pops up a modal with a confirmation button but also closing timeout\n * @param {string} title\n * @param {string} description\n * @param {string} id\n * @param {number} duration\n * @returns\n */\nexport const messageContent = (title, description, id, duration = 30) => {\n  const key = `${id} - ${title}`;\n\n  return {\n    content: (\n      <div>\n        <h1>{title}</h1>\n        <p>{description}</p>\n        <p>\n          <small>Click para fechar</small>\n        </p>\n      </div>\n    ),\n    top: window.innerWidth / 2 - 100,\n    duration,\n    key,\n    onClick: () => message.destroy(key),\n  };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Typography, Layout, Space, Card, Image, Divider, Tag } from 'antd';\n// Utils\nimport gameList from '../resources/games.json';\nimport { PUBLIC_URL, TAG_DICT } from '../utils/constants';\nimport { orderBy } from '../utils';\n// Components\nimport { CreateGameModal, RulesModal } from './modals';\n\nfunction GameCard({ game }) {\n  return (\n    <Card\n      key={game.gameName}\n      hoverable\n      style={{ width: 240 }}\n      cover={\n        <Image\n          alt={game.title}\n          src={`${PUBLIC_URL.BANNERS}game-image-${game.gameName}.jpg`}\n          fallback={`${PUBLIC_URL.BANNERS}/game-image-em-breve.jpg`}\n        />\n      }\n    >\n      <Card.Meta title={game.title} description={game.summary} />\n      <Divider />\n      <Card.Meta description={`Para ${game.min}-${game.max} jogadores`} />\n      <Card.Meta description={`Recomendado jogar com ${game.recommended}`} />\n      <Divider />\n      <Space wrap size={[1, 6]}>\n        {game.tags.map((tag) => (\n          <Tag key={`${game.gameCode}-${tag}`} color={TAG_DICT[tag]?.color}>\n            {TAG_DICT[tag]?.label}\n          </Tag>\n        ))}\n      </Space>\n      <Divider />\n      <Space>\n        <RulesModal gameInfo={game} />\n        {Boolean(game.available) && <CreateGameModal gameInfo={game} />}\n      </Space>\n    </Card>\n  );\n}\n\nGameCard.propTypes = {\n  game: PropTypes.shape({\n    available: PropTypes.bool,\n    gameCode: PropTypes.string,\n    gameName: PropTypes.string,\n    max: PropTypes.number,\n    min: PropTypes.number,\n    recommended: PropTypes.string,\n    summary: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string,\n  }),\n};\n\nfunction Admin() {\n  const sortedGameList = orderBy(Object.values(gameList), ['available', 'title'], ['desc', 'asc']);\n\n  const { availableGames, comingSoonGames } = sortedGameList.reduce(\n    (acc, game) => {\n      if (game.available) {\n        acc.availableGames.push(game);\n      } else {\n        acc.comingSoonGames.push(game);\n      }\n      return acc;\n    },\n    {\n      availableGames: [],\n      comingSoonGames: [],\n    }\n  );\n\n  return (\n    <Layout.Content className=\"container\">\n      <Typography.Title>Admin Hub</Typography.Title>\n\n      <Typography.Paragraph>Selecione um jogo para começar</Typography.Paragraph>\n      <Space size={[8, 16]} wrap align=\"start\">\n        {availableGames.map((game) => (\n          <GameCard key={game.code} game={game} />\n        ))}\n      </Space>\n\n      <Typography.Title level={2}>Em Breve</Typography.Title>\n      <Space size={[8, 16]} wrap align=\"start\">\n        {comingSoonGames.map((game) => (\n          <GameCard key={game.code} game={game} />\n        ))}\n      </Space>\n    </Layout.Content>\n  );\n}\n\nexport default Admin;\n","import { auth } from '../services/firebase';\n\n/**\n * Sign up user via email through firebase auth\n * @param {string} email\n * @param {string} password\n * @returns {Promise}\n */\nexport function signUp(email, password) {\n  return auth.createUserWithEmailAndPassword(email, password);\n}\n\n/**\n * Sign in user via email through firebase auth\n * @param {string} email\n * @param {string} password\n * @returns {Promise}\n */\nexport function signIn(email, password) {\n  return auth.signInWithEmailAndPassword(email, password);\n}\n\n/**\n * Sign out current user\n * @returns {Promise}\n */\nexport async function signOut() {\n  return auth.signOut().then(() => {\n    alert(`You've been signed out`);\n  });\n}\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\n// Design Resources\nimport { Layout, Button, Form, Input, Alert, Image } from 'antd';\n// API\nimport { signIn } from '../adapters/auth';\n// State\nimport { useGlobalState } from '../hooks';\n// Image\nimport logo from '../images/tarde-divertida-logo.svg';\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 0, span: 8 },\n};\n\nfunction Login() {\n  const history = useHistory();\n  const [, setIsAuthenticated] = useGlobalState('isAuthenticated');\n\n  const [error, setError] = useState(null);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const onValuesChange = (data) => {\n    if (data.email) {\n      setEmail(data.email.trim());\n    }\n    if (data.password) {\n      setPassword(data.password.trim());\n    }\n  };\n\n  const onHandleSubmit = async () => {\n    setError('');\n    try {\n      const response = await signIn(email, password);\n      if (response?.user?.uid) {\n        setIsAuthenticated(true);\n        history.push('/admin');\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <Layout.Content className=\"login\">\n      <div className=\"login__content\">\n        <div className=\"login__logo\">\n          <Image src={logo} preview={false} />\n        </div>\n\n        {Boolean(error) && (\n          <Alert message=\"Error\" description={error} type=\"error\" showIcon className=\"login__error-alert\" />\n        )}\n        <Form\n          {...layout}\n          layout=\"horizontal\"\n          name=\"sign-in\"\n          onValuesChange={onValuesChange}\n          className=\"login__form\"\n          autoComplete=\"off\"\n        >\n          <Form.Item {...tailLayout} label=\"E-mail\" name=\"email\" className=\"login__form-item\">\n            <Input type=\"email\" />\n          </Form.Item>\n          <Form.Item {...tailLayout} label=\"Password\" name=\"password\" className=\"login__form-item\">\n            <Input type=\"password\" />\n          </Form.Item>\n          <div className=\"login__form-action\">\n            <Button type=\"primary\" onClick={onHandleSubmit}>\n              Login\n            </Button>\n          </div>\n        </Form>\n      </div>\n    </Layout.Content>\n  );\n}\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/arte-ruim-timer.1f16745a.mp3\";","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { WarningOutlined } from '@ant-design/icons';\nimport { getColorFromLetter } from '../../utils';\n// Components\nimport { Card } from './index';\n\nexport const ArteRuimCard = memo(function ({ text, level, header = 'X' }) {\n  return (\n    <Card\n      color={getColorFromLetter(header)}\n      header={header}\n      size=\"medium\"\n      footer={Array(level).fill('•').join('')}\n    >\n      {text ?? <WarningOutlined />}\n    </Card>\n  );\n});\n\nArteRuimCard.propTypes = {\n  text: PropTypes.string.isRequired,\n  header: PropTypes.string,\n  level: PropTypes.number,\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { getColorFromLetter } from '../../utils';\n\nexport const Card = memo(function ({\n  children,\n  header,\n  footer,\n  color,\n  size,\n  randomColor,\n  className,\n  headerClassName,\n  footerClassName,\n}) {\n  const baseClass = 'card';\n\n  const bgColor = randomColor ? getColorFromLetter(typeof children === 'string' ? children[0] : 'X') : color;\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, className)}>\n      <span className={clsx(`${baseClass}__header`, `color-background--${bgColor}`, headerClassName)}>\n        {header}\n      </span>\n      <span className={`${baseClass}__text`}>{children}</span>\n      {footer && <span className={clsx(`${baseClass}__footer`, footerClassName)}>{footer}</span>}\n    </div>\n  );\n});\n\nCard.propTypes = {\n  children: PropTypes.any.isRequired,\n  header: PropTypes.string,\n  footer: PropTypes.string,\n  color: PropTypes.string,\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  randomColor: PropTypes.bool,\n  className: PropTypes.string,\n  headerClassName: PropTypes.string,\n  footerClassName: PropTypes.string,\n};\n\nCard.defaultProps = {\n  header: 'Carta',\n  color: 'none',\n  size: 'medium',\n  randomColor: false,\n  className: '',\n  headerClassName: '',\n  footerClassName: '',\n};\n\nexport default memo(Card);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { QuestionCircleFilled } from '@ant-design/icons';\n// Components\nimport { Card } from './index';\n\nexport const EspiaoEntreNosCard = memo(function ({ location, role, header = 'Local' }) {\n  return (\n    <Card\n      color={location === 'SPY' ? 'red' : 'lime'}\n      header={location === 'SPY' ? 'Local Desconhecido' : header}\n      size=\"large\"\n      footer={`Você é ${role === 'SPY' ? 'o espião' : `um(a) ${role}`} `}\n      className=\"e-card\"\n      footerClassName=\"e-card__footer\"\n    >\n      {location === 'SPY' ? <QuestionCircleFilled /> : location}\n    </Card>\n  );\n});\n\nEspiaoEntreNosCard.propTypes = {\n  location: PropTypes.string.isRequired,\n  header: PropTypes.string,\n  role: PropTypes.string.isRequired,\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Image } from 'antd';\nimport { PUBLIC_URL } from '../../utils/constants';\n\nexport const ImageCard = memo(function ({ imageId, size, cardWidth, className }) {\n  const baseClass = 'image-card';\n\n  const fallbackName = `placeholder-${imageId[imageId.length - 1]}`;\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, className)}>\n      <Image\n        width={cardWidth}\n        src={`${PUBLIC_URL.CARDS}${imageId}.jpg`}\n        fallback={`${PUBLIC_URL.CARDS}${fallbackName}.jpg`}\n        preview={{\n          maskClassName: `${baseClass}__preview-mask`,\n        }}\n      />\n    </div>\n  );\n});\n\nImageCard.propTypes = {\n  imageId: PropTypes.string.isRequired,\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  bordered: PropTypes.bool,\n  cardWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  className: PropTypes.string,\n};\n\nImageCard.defaultProps = {\n  size: 'medium',\n  className: '',\n  bordered: false,\n  cardWidth: 200,\n};\n\nexport default memo(ImageCard);\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Button } from 'antd';\nimport { DownSquareOutlined } from '@ant-design/icons';\n// Hooks\nimport { useDimensions } from '../../hooks';\n// Components\nimport { ImageCard } from '.';\n\nexport function ImageCardHand({\n  hand = [],\n  onSelectCard,\n  selectButtonLabel,\n  className,\n  selectButtonClass,\n  sizeRatio,\n  cardSize,\n  disabledSelectButton,\n}) {\n  const [screenWidth] = useDimensions();\n  // Prefers cardSize otherwise calculates width based on screen and ratio\n  const cardWidth = useMemo(() => cardSize || screenWidth / sizeRatio || 200, [\n    cardSize,\n    screenWidth,\n    sizeRatio,\n  ]);\n\n  return (\n    <div className={clsx('image-card-hand', className)}>\n      {hand.map((cardId) => {\n        return (\n          <div key={`hand-${cardId}`} className=\"image-card-hand__card-container\">\n            {Boolean(onSelectCard) && (\n              <Button\n                icon={<DownSquareOutlined />}\n                className={selectButtonClass}\n                onClick={() => onSelectCard(cardId)}\n                size=\"small\"\n                ghost\n                disabled={disabledSelectButton}\n              >\n                {selectButtonLabel}\n              </Button>\n            )}\n            <ImageCard imageId={cardId} cardWidth={cardWidth} />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nImageCardHand.propTypes = {\n  cardSize: PropTypes.number,\n  className: PropTypes.string,\n  disabledSelectButton: PropTypes.bool,\n  hand: PropTypes.arrayOf(PropTypes.string),\n  onSelectCard: PropTypes.func,\n  selectButtonClass: PropTypes.string,\n  selectButtonLabel: PropTypes.string,\n  sizeRatio: PropTypes.number,\n};\n\nImageCardHand.defaultProps = {\n  className: '',\n  disabledSelectButton: false,\n  hand: [],\n  onSelectCard: null,\n  selectButtonClass: '',\n  sizeRatio: 8,\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { WarningOutlined } from '@ant-design/icons';\n// Components\nimport { Card } from './index';\n\nexport const UeSoIssoCard = memo(function ({ word, header = 'Palavra Secreta' }) {\n  return (\n    <Card color=\"purple\" header={header} size=\"large\">\n      {word ?? <WarningOutlined />}\n    </Card>\n  );\n});\n\nUeSoIssoCard.propTypes = {\n  word: PropTypes.any.isRequired,\n  title: PropTypes.string,\n};\n","import React, { useRef } from 'react';\nimport { Stage, Layer, Line } from 'react-konva';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n\nconst DrawingCanvas = ({ lines, setLines, className = '' }) => {\n  const isDrawing = useRef(false);\n\n  const handleMouseDown = (e) => {\n    isDrawing.current = true;\n    const pos = e.target.getStage().getPointerPosition();\n    setLines([...lines, [pos.x, pos.y]]);\n  };\n\n  const handleMouseMove = (e) => {\n    // no drawing - skipping\n    if (!isDrawing.current) {\n      return;\n    }\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    let lastLine = lines[lines.length - 1];\n    // add point\n    lastLine = lastLine.concat([point.x, point.y]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLine);\n    setLines(lines.concat());\n  };\n\n  const handleMouseUp = () => {\n    isDrawing.current = false;\n  };\n\n  return (\n    <Stage\n      width={500}\n      height={500}\n      onMouseDown={handleMouseDown}\n      onMousemove={handleMouseMove}\n      onMouseup={handleMouseUp}\n      onTouchStart={handleMouseDown}\n      onTouchMove={handleMouseMove}\n      onTouchEnd={handleMouseUp}\n      className={clsx('a-drawing-canvas', className)}\n    >\n      <Layer>\n        {lines.map((line, i) => (\n          <Line\n            key={i}\n            points={line}\n            stroke=\"#222222\"\n            strokeWidth={5}\n            tension={0.5}\n            lineCap=\"round\"\n            globalCompositeOperation=\"source-over\"\n          />\n        ))}\n      </Layer>\n    </Stage>\n  );\n};\n\nDrawingCanvas.propTypes = {\n  className: PropTypes.string,\n  lines: PropTypes.array.isRequired,\n  setLines: PropTypes.func.isRequired,\n};\n\nexport default DrawingCanvas;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTimer } from 'react-timer-hook';\n// Utils\nimport { inNSeconds } from '../../../utils';\n// Components\nimport { Step } from '../../shared';\nimport { Card } from '../../cards';\nimport DrawingCanvas from './DrawingCanvas';\n\nfunction DrawPhaseDrawStep({ secretCard, onSubmitDrawing }) {\n  const [lines, setLines] = useState([]);\n\n  const { seconds } = useTimer({\n    expiryTimestamp: inNSeconds(11),\n    autoStart: true,\n    onExpire: () =>\n      onSubmitDrawing({\n        drawing: JSON.stringify(lines),\n        cardId: secretCard.id,\n      }),\n  });\n\n  return (\n    <Step>\n      <Card\n        size=\"large\"\n        header=\"Desenhe\"\n        footer={Array(secretCard?.level).fill('•').join('')}\n        className=\"a-draw-step__card\"\n        color=\"yellow\"\n      >\n        {secretCard?.text}\n        <span className=\"a-draw-step__timer\">{seconds - 1}</span>\n      </Card>\n      <DrawingCanvas lines={lines} setLines={setLines} />\n    </Step>\n  );\n}\n\nDrawPhaseDrawStep.propTypes = {\n  onSubmitDrawing: PropTypes.func.isRequired,\n  secretCard: PropTypes.shape({\n    id: PropTypes.string,\n    level: PropTypes.number,\n    text: PropTypes.string,\n  }).isRequired,\n};\n\nexport default DrawPhaseDrawStep;\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport useSound from 'use-sound';\n// State & Hooks\nimport { useIsUserReady, useAPICall, useUser } from '../../../hooks';\n// Resources & Utils\nimport { ARTE_RUIM_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\nimport arteRuimTimer from '../../../sounds/arte-ruim-timer.mp3';\n// Components\nimport { AdminForceNextPhase } from '../../admin/index';\nimport {\n  Instruction,\n  PhaseContainer,\n  RoundAnnouncement,\n  Step,\n  StepSwitcher,\n  WaitingRoom,\n} from '../../shared';\nimport DrawPhaseDrawStep from './DrawPhaseDrawStep';\n\nfunction DrawPhase({ players, state, info }) {\n  const isUserReady = useIsUserReady(players, state);\n  const user = useUser(players);\n  const [step, setStep] = useState(0);\n  const [secretCard, setSecretCard] = useState({});\n  const [play] = useSound(arteRuimTimer, { volume: 0.4 });\n\n  useEffect(() => {\n    setSecretCard(players[user?.id]?.currentCard ?? {});\n  }, [players, user?.id]);\n\n  const onSubmitDrawing = useAPICall({\n    apiFunction: ARTE_RUIM_API.submitDrawing,\n    actionName: 'submit-drawing',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: 'Acabou o tempo! Aguarde enquanto os outros participantes desenham',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar o desenho',\n  });\n\n  const onStartDrawing = () => {\n    play();\n    setStep(1);\n  };\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.ARTE_RUIM.DRAW} className=\"a-phase\">\n      <StepSwitcher step={step} conditions={[!isUserReady, !isUserReady]}>\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state?.round}\n          onPressButton={onStartDrawing}\n          buttonText=\"Um dó, lá, si... vamos ir... já!\"\n        >\n          <Instruction white>\n            Você terá 10 segundos para ler a sua carta e desenhá-la.\n            <br />\n            Aperte o botão quando estiver pronto!\n            <br />\n            Não vale usar números e letras.\n            <br />\n            Fique esperto porque o tempo começa assim que você apertar.\n          </Instruction>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <DrawPhaseDrawStep secretCard={secretCard} onSubmitDrawing={onSubmitDrawing} />\n\n        {/* Step 2 */}\n        <Step fullWidth>\n          <WaitingRoom\n            players={players}\n            title=\"Pronto!\"\n            instruction=\"Vamos aguardar enquanto os outros jogadores terminam seus desenhos!\"\n          />\n          <AdminForceNextPhase />\n        </Step>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nDrawPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.shape({\n    phase: PropTypes.string,\n    round: PropTypes.number,\n  }),\n};\n\nexport default DrawPhase;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nconst getPathFromKonvaLines = (lines) => {\n  const result = lines.map((lineArr) => {\n    let path = '';\n    for (let x = 0, y = 1; y < lineArr.length; x += 2, y += 2) {\n      if (lineArr[x + 2] && lineArr[y + 2]) {\n        path += `M${lineArr[x]},${lineArr[y]} L${lineArr[x + 2]},${lineArr[y + 2]}`;\n      }\n    }\n\n    return path;\n  });\n\n  return result;\n};\n\nfunction CanvasSVG({ drawing = '', className = '', size = 250 }) {\n  const konvaLines = JSON.parse(drawing);\n  const paths = getPathFromKonvaLines(konvaLines);\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 500 500\"\n      overflow=\"hidden\"\n      className={className}\n      style={{ width: `${size}px` }}\n    >\n      <defs />\n      {paths.map((path, index) => (\n        <path\n          key={`${drawing}-${index}`}\n          d={path}\n          fill=\"none\"\n          stroke=\"#000\"\n          strokeWidth=\"4\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit=\"10\"\n        />\n      ))}\n    </svg>\n  );\n}\n\nCanvasSVG.propTypes = {\n  className: PropTypes.string,\n  drawing: PropTypes.string.isRequired,\n  size: PropTypes.number,\n};\n\nCanvasSVG.defaultProps = {\n  size: 250,\n};\n\nexport default memo(CanvasSVG);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { getColorFromLetter } from '../../../utils';\n\nfunction Ribbon({ cardEntryId }) {\n  const [, , letter] = cardEntryId.split('-');\n  return (\n    <div className=\"a-ribbon\">\n      <div\n        className={`a-ribbon__content a-ribbon__content--${letter} color-background--${getColorFromLetter(\n          letter\n        )}`}\n      >\n        {letter}\n      </div>\n    </div>\n  );\n}\n\nRibbon.propTypes = {\n  cardEntryId: PropTypes.string,\n};\n\nexport default Ribbon;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Components\nimport CanvasSVG from './CanvasSVG';\nimport Ribbon from './Ribbon';\n\nfunction EvaluationAllDrawings({ drawings, activeItem, onActivateItem, votes, canvasSize }) {\n  const liButtonBaseClass = 'a-evaluation-all-drawings__li-drawing-button';\n\n  return (\n    <ul className=\"a-evaluation-all-drawings\">\n      {drawings?.map((drawingEntry) => {\n        const canvasEntryId = `drawing-${drawingEntry.id}`;\n        const isActive = activeItem === canvasEntryId;\n        return (\n          <li\n            key={canvasEntryId}\n            className={clsx(liButtonBaseClass, isActive && `${liButtonBaseClass}--active`)}\n            onClick={() => onActivateItem(canvasEntryId)}\n          >\n            {votes?.[canvasEntryId] && <Ribbon cardEntryId={votes[canvasEntryId]} />}\n            <CanvasSVG\n              drawing={drawingEntry.drawing}\n              className=\"a-evaluation-all-drawings__drawing\"\n              size={canvasSize}\n            />\n            <span className=\"a-evaluation-all-drawings__artist\">{drawingEntry.playerName}</span>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nEvaluationAllDrawings.propTypes = {\n  activeItem: PropTypes.string,\n  canvasSize: PropTypes.number,\n  drawings: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      drawing: PropTypes.string,\n    })\n  ),\n  onActivateItem: PropTypes.func,\n  onActiveItem: PropTypes.func,\n  votes: PropTypes.object,\n};\n\nexport default EvaluationAllDrawings;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Utils\nimport { LETTERS } from '../../../utils/constants';\n// Components\nimport { ArteRuimCard as Card } from '../../cards';\n\nfunction EvaluationAllCards({ cards, activeItem, onActivateItem, votes }) {\n  const liButtonBaseClass = 'a-evaluation-all-cards__li-card-button';\n\n  return (\n    <ul className=\"a-evaluation-all-cards\">\n      {cards.map((cardEntry, index) => {\n        const letter = LETTERS[index];\n        const cardEntryId = `card-${cardEntry.id}-${letter}`;\n        const isActive = activeItem === cardEntryId;\n        const isUsed = Object.values(votes).includes(cardEntryId);\n\n        return (\n          <li\n            role=\"button\"\n            key={cardEntryId}\n            className={clsx(\n              liButtonBaseClass,\n              isActive && `${liButtonBaseClass}--active`,\n              isUsed && `${liButtonBaseClass}--used`\n            )}\n            onClick={() => onActivateItem(cardEntryId)}\n          >\n            <Card text={cardEntry.text} level={cardEntry.level} header={letter} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nEvaluationAllCards.propTypes = {\n  activeItem: PropTypes.string,\n  cards: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n    })\n  ),\n  onActivateItem: PropTypes.func,\n  onActiveItem: PropTypes.func,\n  votes: PropTypes.object,\n};\n\nexport default EvaluationAllCards;\n","import PropTypes from 'prop-types';\nimport React, { memo, useEffect } from 'react';\n// Design Resources\nimport { Slider } from 'antd';\n// State & Hooks\nimport { useDimensions, useGlobalState } from '../../../hooks';\n\nconst CanvasResizer = ({ numPlayers = 5 }) => {\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n  const [cachedCanvasSize] = useGlobalState('cachedCanvasSize');\n  const [width] = useDimensions();\n\n  useEffect(() => {\n    if (canvasSize === 250 || canvasSize !== cachedCanvasSize) {\n      setCanvasSize(Math.round(width / numPlayers) - 30);\n    }\n  }, [width]); // eslint-disable-line\n\n  return (\n    <div className=\"a-canvas-resizer\">\n      <div className=\"a-canvas-resizer__label\">Tamanho das Images</div>\n      <Slider\n        className=\"a-canvas-resizer__slider\"\n        defaultValue={canvasSize}\n        min={100}\n        max={500}\n        step={50}\n        onChange={setCanvasSize}\n      />\n    </div>\n  );\n};\n\nCanvasResizer.propTypes = {\n  numPlayers: PropTypes.number,\n};\n\nexport default memo(CanvasResizer);\n","import PropTypes from 'prop-types';\nimport React, { useCallback, useEffect, useState } from 'react';\n// Design Resources\nimport { Button } from 'antd';\nimport { CloudUploadOutlined } from '@ant-design/icons';\n// Hooks\nimport { useIsUserReady, useGlobalState, useAPICall } from '../../../hooks';\n// Utils\nimport { ARTE_RUIM_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport {\n  ButtonContainer,\n  Instruction,\n  PhaseContainer,\n  StepSwitcher,\n  Step,\n  Title,\n  WaitingRoom,\n  ReadyPlayersBar,\n} from '../../shared';\nimport EvaluationAllDrawings from './EvaluationAllDrawings';\nimport EvaluationAllCards from './EvaluationAllCards';\nimport CanvasResizer from './CanvasResizer';\nimport { AdminForceNextPhase } from '../../admin/index';\n\nfunction prepareVotes(votes) {\n  return Object.entries(votes).reduce((acc, [drawingEntryId, cardEntryId]) => {\n    const [, drawingId] = drawingEntryId.split('-');\n    const [, cardId] = cardEntryId.split('-');\n    acc[drawingId] = cardId;\n    return acc;\n  }, {});\n}\n\nfunction EvaluationPhase({ players, state, info }) {\n  const isUserReady = useIsUserReady(players, state);\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n  const [cachedCanvasSize] = useGlobalState('cachedCanvasSize');\n  const [step, setStep] = useState(0);\n  const [votes, setVotes] = useState({});\n  const [activeItem, setActiveItem] = useState(null);\n\n  const onSubmitVoting = useAPICall({\n    apiFunction: ARTE_RUIM_API.submitVoting,\n    actionName: 'submit-drawing',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage: 'Avaliação enviada! Agora aguarde os outros jogadores',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar sua avaliação',\n  });\n\n  useEffect(() => {\n    setCanvasSize(cachedCanvasSize);\n  }, []); // eslint-disable-line\n\n  const onActivateItem = useCallback(\n    (entryId) => {\n      const [type] = entryId.split('-');\n      if (!activeItem || activeItem.startsWith(type)) {\n        setActiveItem(entryId);\n      } else {\n        if (type === 'card') {\n          setVotes((prevVotes) => {\n            return {\n              ...prevVotes,\n              [activeItem]: entryId,\n            };\n          });\n        } else {\n          setVotes((prevVotes) => {\n            return {\n              ...prevVotes,\n              [entryId]: activeItem,\n            };\n          });\n        }\n        setActiveItem(null);\n      }\n    },\n    [activeItem]\n  );\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ARTE_RUIM.EVALUATION}\n      className=\"a-evaluation-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady]}>\n        {/*Step 0 */}\n        <Step className=\"a-evaluation-step\">\n          <CanvasResizer numPlayers={Object.keys(players).length} />\n          <Title>Adivinhação</Title>\n          <Instruction>\n            Encontre os pares de desenho e carta clicando em uma carta ou desenho e em seguida clicando em seu\n            par.\n            <br />\n            Uma bandeirinha aparecerá no topo de cada desenho com a cor e letra da carta que você selecionou.\n            <br />\n            Quando encontrar todos os pares, envie sua avaliação!\n          </Instruction>\n\n          <EvaluationAllDrawings\n            drawings={state?.drawings ?? []}\n            activeItem={activeItem}\n            onActivateItem={onActivateItem}\n            votes={votes}\n            canvasSize={canvasSize}\n          />\n\n          <EvaluationAllCards\n            cards={state?.cards ?? []}\n            activeItem={activeItem}\n            onActivateItem={onActivateItem}\n            votes={votes}\n          />\n\n          <ButtonContainer>\n            <Button\n              type=\"primary\"\n              onClick={() => onSubmitVoting({ votes: prepareVotes(votes) })}\n              disabled={Object.values(votes).length < state.drawings.length}\n              icon={<CloudUploadOutlined />}\n            >\n              Enviar sua avaliação\n            </Button>\n          </ButtonContainer>\n\n          <ReadyPlayersBar\n            players={players}\n            readyText=\"Já acabei, anda logo!\"\n            readyTextPlural=\"Já acabamos, anda logo!\"\n            showNames\n          />\n        </Step>\n\n        {/*Step 1 */}\n        <Step fullWidth>\n          <WaitingRoom\n            players={players}\n            title=\"Pronto!\"\n            instruction=\"Vamos aguardar enquanto os outros jogadores terminam de avaliar!\"\n          />\n          <AdminForceNextPhase />\n        </Step>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nEvaluationPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.shape({\n    cards: PropTypes.array,\n    drawings: PropTypes.array,\n    phase: PropTypes.string,\n  }),\n};\n\nexport default EvaluationPhase;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Components\nimport { AvatarEntry } from '../../avatars';\n\nfunction GalleryWindowCredits({ artistName, artistAvatarId }) {\n  return (\n    <div className=\"a-gallery-window__credits\">\n      <div className=\"a-gallery-window__label\">Artista</div>\n      <span className=\"a-gallery-window__artist-name\">\n        <AvatarEntry id={artistAvatarId} name={artistName} />\n      </span>\n    </div>\n  );\n}\n\nGalleryWindowCredits.propTypes = {\n  artistAvatarId: PropTypes.string,\n  artistName: PropTypes.string,\n};\n\nexport default memo(GalleryWindowCredits);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Avatar as AntAvatar } from 'antd';\nimport { MessageFilled } from '@ant-design/icons';\n// Utils\nimport { getPlayersFromIds } from '../../../utils';\n// Components\nimport { Avatar } from '../../avatars';\n\nfunction GalleryWindowGuesses({ playersSay, players, cards }) {\n  return (\n    <div className=\"a-gallery-window__guesses\">\n      <div className=\"a-gallery-window__label\">Participantes votaram</div>\n      {Object.entries(playersSay).map(([cardId, playerIds], index) => {\n        const card = cards.find((i) => i.id === cardId);\n        return (\n          <div key={`guess-${cardId}-${index}`} className=\"a-gallery-window__guess\">\n            <div className=\"a-gallery-window__speech-bubble\">\n              <MessageFilled className=\"a-gallery-window__speech-bubble-icon\" /> {card.text}\n            </div>\n            <div className=\"a-gallery-window__players\">\n              <AntAvatar.Group>\n                {playerIds.map((playerId) => (\n                  <Avatar\n                    id={players[playerId].avatarId}\n                    key={`guess-avatar-${players[playerId].avatarId}`}\n                  />\n                ))}\n              </AntAvatar.Group>\n              <span className=\"a-gallery-window__players-names\">\n                {getPlayersFromIds(playerIds, players, true).join(', ')}\n              </span>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nGalleryWindowGuesses.propTypes = {\n  cards: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      text: PropTypes.string,\n    })\n  ),\n  players: PropTypes.object,\n  playersSay: PropTypes.object,\n};\n\nexport default memo(GalleryWindowGuesses);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTimer } from 'react-timer-hook';\n// Design Resources\nimport { Button, Space } from 'antd';\nimport {\n  PauseOutlined,\n  PlayCircleOutlined,\n  StepBackwardOutlined,\n  StepForwardOutlined,\n  TrophyOutlined,\n} from '@ant-design/icons';\n// Utils\nimport { inNSeconds } from '../../../utils';\n\nfunction GalleryWindowControls({ galleryLength, activeIndex, setActiveIndex, setStep }) {\n  const { seconds, isRunning, pause, resume } = useTimer({\n    expiryTimestamp: inNSeconds(10 * galleryLength),\n    autoStart: true,\n    onExpire: () => setStep(1),\n  });\n\n  // Automatically go to the next window every 10 seconds\n  useEffect(() => {\n    if (seconds < 10 * galleryLength && seconds > 0 && seconds % 10 === 0) {\n      setActiveIndex((s) => Math.min(s + 1, galleryLength - 1));\n    }\n  }, [seconds, setActiveIndex, galleryLength]);\n\n  const previousStep = () => {\n    setActiveIndex((s) => Math.max(s - 1, 0));\n  };\n\n  const nextStep = () => {\n    setActiveIndex((s) => Math.min(s + 1, galleryLength - 1));\n  };\n\n  return (\n    <div className=\"a-gallery-window__controls\">\n      <div className=\"a-gallery-window__timer-bar\">\n        <span style={{ width: `${Math.abs((10 * seconds) / galleryLength - 100)}%` }}></span>\n      </div>\n      <Space>\n        <Button\n          size=\"large\"\n          icon={<StepBackwardOutlined />}\n          onClick={previousStep}\n          disabled={activeIndex === 0}\n        >\n          Desenho Anterior\n        </Button>\n        <Button\n          size=\"large\"\n          icon={isRunning ? <PauseOutlined /> : <PlayCircleOutlined />}\n          onClick={isRunning ? pause : resume}\n        />\n        <Button size=\"large\" onClick={nextStep} disabled={activeIndex === galleryLength - 1}>\n          Próximo Desenho <StepForwardOutlined />\n        </Button>\n        <Button size=\"large\" onClick={() => setStep(1)} icon={<TrophyOutlined />}>\n          Ver Ranking\n        </Button>\n      </Space>\n    </div>\n  );\n}\n\nGalleryWindowControls.propTypes = {\n  activeIndex: PropTypes.number,\n  galleryLength: PropTypes.number,\n  setActiveIndex: PropTypes.func,\n  setStep: PropTypes.func,\n};\n\nexport default GalleryWindowControls;\n","import React, { Fragment, memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Avatar as AntAvatar, Typography } from 'antd';\nimport { CrownFilled, DeleteFilled } from '@ant-design/icons';\n// Utils\nimport { getPlayersFromIds } from '../../../utils';\n// Components\nimport { Avatar } from '../../avatars';\nimport { StarPoints } from '../../shared';\n\nfunction GalleryWindowResult({\n  playerArtist,\n  correctAnswerId,\n  correctAnswerText,\n  playersPoints,\n  playersSay,\n  players,\n}) {\n  const correctGuesses = Object.values(playersSay?.[correctAnswerId] ?? {});\n\n  return (\n    <div className=\"a-gallery-window__result\">\n      <div className=\"a-gallery-window__label\">E o nome correto da obra é</div>\n      <div className=\"a-gallery-window__speech-bubble\">\n        <CrownFilled className=\"a-gallery-window__speech-bubble-icon\" />\n        {correctAnswerText}\n      </div>\n      {correctGuesses.length ? (\n        <Fragment>\n          <div className=\"a-gallery-window__players\">\n            <AntAvatar.Group>\n              {correctGuesses.map((playerId) => {\n                return <Avatar key={`correct-guess-avatar-${playerId}`} id={players[playerId].avatarId} />;\n              })}\n            </AntAvatar.Group>\n            <StarPoints quantity={2} keyPrefix={`guessers-points-${playerArtist.id}`} />\n            <span className=\"a-gallery-window__players-names\">\n              {getPlayersFromIds(correctGuesses, players, true).join(', ')}\n            </span>\n          </div>\n          <div className=\"a-gallery-window__artist-points\">\n            <Avatar id={playerArtist.avatarId} />{' '}\n            <StarPoints\n              quantity={playersPoints?.[playerArtist.id]}\n              keyPrefix={`artist-points-${playerArtist.id}`}\n            />{' '}\n            <span className=\"a-gallery-window__players-names\">{playerArtist.name}</span>\n          </div>\n        </Fragment>\n      ) : (\n        <Typography.Text className=\"a-gallery-window__no-wins\">\n          <DeleteFilled /> Nossa, ninguém acertou. Esse desenho deve ter sido muito ruim.\n        </Typography.Text>\n      )}\n    </div>\n  );\n}\n\nGalleryWindowResult.propTypes = {\n  correctAnswer: PropTypes.string,\n  correctAnswerId: PropTypes.string,\n  correctAnswerText: PropTypes.string,\n  playerArtist: PropTypes.object,\n  players: PropTypes.object,\n  playersPoints: PropTypes.object,\n  playersSay: PropTypes.object,\n};\n\nexport default memo(GalleryWindowResult);\n","import PropTypes from 'prop-types';\nimport React, { memo } from 'react';\n\n// Hooks\nimport { useGlobalState } from '../../../hooks';\n// Components\nimport CanvasSVG from './CanvasSVG';\nimport GalleryWindowCredits from './GalleryWindowCredits';\nimport GalleryWindowGuesses from './GalleryWindowGuesses';\nimport GalleryWindowControls from './GalleryWindowControls';\nimport GalleryWindowResult from './GalleryWindowResult';\nimport CanvasResizer from './CanvasResizer';\n\nfunction GalleryWindow({ window, galleryLength, players, activeIndex, setActiveIndex, setStep, cards }) {\n  const [canvasSize] = useGlobalState('canvasSize');\n\n  const { drawing, artist, id, text, level, playersPoints, playersSay } = window;\n\n  const playerArtist = players[artist];\n\n  return (\n    <div className=\"a-gallery-window\">\n      <CanvasResizer numPlayers={Object.keys(players).length} />\n      <div className=\"a-gallery-window__drawing-container\">\n        <CanvasSVG\n          key={window.correctAnswer}\n          drawing={drawing}\n          size={canvasSize}\n          className=\"a-gallery-window__drawing\"\n        />\n      </div>\n\n      <GalleryWindowCredits artistName={playerArtist.name} artistAvatarId={playerArtist.avatarId} />\n\n      <GalleryWindowGuesses players={players} playersSay={playersSay} cards={cards} />\n\n      <GalleryWindowResult\n        playerArtist={playerArtist}\n        correctAnswerId={id}\n        correctAnswerText={text}\n        correctAnswerLevel={level}\n        playersPoints={playersPoints}\n        playersSay={playersSay}\n        players={players}\n      />\n\n      <GalleryWindowControls\n        galleryLength={galleryLength}\n        activeIndex={activeIndex}\n        setActiveIndex={setActiveIndex}\n        setStep={setStep}\n      />\n    </div>\n  );\n}\n\nGalleryWindow.propTypes = {\n  activeIndex: PropTypes.number,\n  cards: PropTypes.array,\n  galleryLength: PropTypes.number,\n  players: PropTypes.object,\n  setActiveIndex: PropTypes.number,\n  setStep: PropTypes.func,\n  window: PropTypes.shape({\n    artist: PropTypes.string,\n    correctAnswer: PropTypes.string,\n    drawing: PropTypes.string,\n    id: PropTypes.string,\n    level: PropTypes.number,\n    playersPoints: PropTypes.object,\n    playersSay: PropTypes.object,\n    text: PropTypes.string,\n  }),\n};\n\nexport default memo(GalleryWindow);\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\n// Design Resources\nimport { Button } from 'antd';\nimport { PictureOutlined } from '@ant-design/icons';\n// State & Hooks\nimport { useAPICall, useGlobalState } from '../../../hooks';\n// Resources and Utils\nimport { GAME_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { AdminOnlyButton } from '../../admin/index';\nimport { Instruction, PhaseContainer, RankingBoard, StepSwitcher, Step, Title } from '../../shared';\nimport GalleryWindow from './GalleryWindow';\n\nfunction GalleryPhase({ players, state, info }) {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [step, setStep] = useState(0);\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n  const [cachedCanvasSize, setCachedCanvasSize] = useGlobalState('cachedCanvasSize');\n\n  // The gallery needs a bigger image, its annoying that we are changing the users settings but whatever\n  useEffect(() => {\n    if (step === 0) {\n      setCachedCanvasSize(canvasSize);\n      setCanvasSize(Math.min(window.innerWidth / 2 - 100, 500));\n    } else {\n      setCanvasSize(cachedCanvasSize);\n    }\n  }, [step]); // eslint-disable-line\n\n  const onGoToNextRound = useAPICall({\n    apiFunction: GAME_API.goToNextPhase,\n    actionName: 'go-to-next-phase',\n    successMessage: 'Ranking!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar ir para a próxima fase',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ARTE_RUIM.GALLERY}\n      className=\"a-gallery-phase\"\n    >\n      <StepSwitcher step={step}>\n        {/* Step 0 */}\n        <Step className=\"a-gallery-phase__windows\">\n          <Title>Galeria de Arte</Title>\n          {state?.gallery && (\n            <GalleryWindow\n              window={state.gallery[activeIndex]}\n              galleryLength={state.gallery.length}\n              cards={state.cards}\n              players={players}\n              activeIndex={activeIndex}\n              setActiveIndex={setActiveIndex}\n              setStep={setStep}\n            />\n          )}\n        </Step>\n\n        {/* Step 1 */}\n        <Step>\n          <Title>{state.pointsToVictory >= 0 ? 'Ranking' : 'Game Over'}</Title>\n          <RankingBoard players={players} ranking={state.ranking} />\n          {state.pointsToVictory >= 0 && (\n            <Instruction contained>\n              Faltam <strong>{state.pointsToVictory}</strong> pontos para o jogo acabar...\n            </Instruction>\n          )}\n\n          <Button size=\"large\" onClick={() => setStep(0)} icon={<PictureOutlined />}>\n            Ver Galeria\n          </Button>\n          <AdminOnlyButton action={() => onGoToNextRound({})} label=\"Ir para próxima rodada ou game over\" />\n        </Step>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nGalleryPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.shape({\n    cards: PropTypes.array,\n    gallery: PropTypes.array,\n    phase: PropTypes.string,\n    pointsToVictory: PropTypes.number,\n    ranking: PropTypes.object,\n  }),\n};\n\nexport default GalleryPhase;\n","import React, { memo } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Avatar, Tooltip } from 'antd';\n\nconst grades = ['A+', 'A', 'A-', 'B+', 'B', 'B-', 'C+', 'C', 'C-', 'D+', 'D', 'F'];\nconst minValues = [97, 93, 90, 87, 83, 80, 77, 73, 70, 67, 65, 0];\n\nconst DrawingGrade = ({ value }) => {\n  const grade = grades[minValues.findIndex((i) => value * 100 >= i) ?? 11];\n\n  const baseClass = 'a-drawing-grade';\n\n  return (\n    <Tooltip title={`Nota baseada em quantos acertos o desenho teve: ${value * 100}%`}>\n      <Avatar className={clsx(baseClass, `${baseClass}--${grade[0]}`)}>{grade}</Avatar>\n    </Tooltip>\n  );\n};\n\nDrawingGrade.propTypes = {\n  value: PropTypes.number.isRequired,\n};\n\nexport default memo(DrawingGrade);\n","import PropTypes from 'prop-types';\nimport React from 'react';\n// Components\nimport { GameOver } from '../../shared';\nimport CanvasSVG from './CanvasSVG';\nimport DrawingGrade from './DrawingGrade';\n\nfunction GameOverPhase({ state, info }) {\n  return (\n    <GameOver info={info} state={state}>\n      <ul className=\"a-game-over__gallery\">\n        {state.drawings.map((entry) => {\n          return (\n            <li className=\"a-game-over__gallery-item\" key={entry.drawing}>\n              <CanvasSVG drawing={entry.drawing} size={200} className=\"a-game-over__gallery-canvas\" />\n              <span className=\"a-game-over__credits\">\n                \"{entry.text}\" por {entry.playerName}\n              </span>\n              <DrawingGrade value={entry.successRate} />\n            </li>\n          );\n        })}\n      </ul>\n    </GameOver>\n  );\n}\n\nGameOverPhase.propTypes = {\n  info: PropTypes.object,\n  state: PropTypes.shape({\n    drawings: PropTypes.array,\n  }),\n};\n\nexport default GameOverPhase;\n","import React from 'react';\n// Hooks\nimport { GAME_COLLECTION, PHASES } from '../../../utils/constants';\n// Components\nimport { Session } from '../../shared';\nimport Lobby from '../../lobby/Lobby';\nimport { Rules } from '../../rules';\nimport { PageError } from '../../errors/PageError';\nimport DrawPhase from './DrawPhase';\nimport EvaluationPhase from './EvaluationPhase';\nimport GalleryPhase from './GalleryPhase';\nimport GameOverPhase from './GameOverPhase';\n\nfunction SessionArteRuim({ gameId }) {\n  function getActiveComponent(phase) {\n    switch (phase) {\n      case PHASES.ARTE_RUIM.LOBBY:\n        return Lobby;\n      case PHASES.ARTE_RUIM.RULES:\n        return Rules;\n      case PHASES.ARTE_RUIM.DRAW:\n        return DrawPhase;\n      case PHASES.ARTE_RUIM.EVALUATION:\n        return EvaluationPhase;\n      case PHASES.ARTE_RUIM.GALLERY:\n        return GalleryPhase;\n      case PHASES.ARTE_RUIM.GAME_OVER:\n        return GameOverPhase;\n      default:\n        return PageError;\n    }\n  }\n\n  return (\n    <Session\n      gameId={gameId}\n      gameCollection={GAME_COLLECTION.ARTE_RUIM}\n      getActiveComponent={getActiveComponent}\n    />\n  );\n}\n\nexport default SessionArteRuim;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useLoading } from '../../../hooks';\n// Design Resources\nimport { Button, Input } from 'antd';\n// Components\nimport { ButtonContainer, Instruction, Title } from '../../shared';\nimport { ImageCardHand as Hand } from '../../cards';\n\nfunction SecretClueWrite({ user, onSubmitClue }) {\n  const [isLoading] = useLoading();\n  const [clue, setClue] = useState('');\n\n  const onButtonClick = () => {\n    onSubmitClue({\n      action: 'SUBMIT_CLUE',\n      clue,\n    });\n  };\n\n  const onEnterInput = (e) => {\n    if (e.key === 'Enter') {\n      onButtonClick();\n    }\n  };\n\n  return (\n    <div className=\"d-secret-clue-write\">\n      <Title>Escreva a Pista!</Title>\n      <Instruction contained>\n        <ul>\n          <li>Escreva uma pista que relacione com duas das suas cartas.</li>\n          <li>A pista pode ser qualquer coisa que você quiser. Não há restricões!</li>\n          <li>Você ganha pontos somente se o Impostor não for encontrado, então escolha algo fácil.</li>\n        </ul>\n      </Instruction>\n      <ButtonContainer className=\"d-input-container\">\n        <Input\n          className=\"uppercase-input\"\n          placeholder=\"Escreva sua pista aqui\"\n          onChange={(e) => setClue(e.target.value)}\n          onKeyPress={onEnterInput}\n        />\n        <Button type=\"primary\" disabled={isLoading || clue.length < 1} onClick={onButtonClick}>\n          Enviar pista secreta\n        </Button>\n      </ButtonContainer>\n      <Hand hand={user.hand} />\n    </div>\n  );\n}\n\nSecretClueWrite.propTypes = {\n  onSubmitClue: PropTypes.func,\n  user: PropTypes.shape({\n    hand: PropTypes.arrayOf(PropTypes.string),\n  }),\n};\n\nexport default SecretClueWrite;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Spin } from 'antd';\n// Components\nimport { Instruction, Title } from '../../shared';\nimport { AvatarName } from '../../avatars';\nimport { ImageCardHand as Hand } from '../../cards';\n\nfunction SecretClueWaiting({ leader, user }) {\n  return (\n    <div className=\"d-secret-clue-write\">\n      <Title>\n        <Spin /> Aguarde...\n      </Title>\n      <Instruction contained>\n        <AvatarName player={leader} addressUser /> está escrevendo a pista secreta.\n        <br />\n        Enquanto isso, examine suas cartas! Você as usará durante esta rodada.\n      </Instruction>\n      <Hand hand={user.hand} />\n    </div>\n  );\n}\n\nSecretClueWaiting.propTypes = {\n  leader: PropTypes.shape({\n    name: PropTypes.string,\n  }),\n  user: PropTypes.shape({\n    hand: PropTypes.arrayOf(PropTypes.string),\n  }),\n};\n\nexport default SecretClueWaiting;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useIsUserReady, useIsUserThe, useWhichPlayerIsThe, useAPICall, useUser } from '../../../hooks';\n// Resources & Utils\nimport { CLUBE_DETETIVES_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport {\n  Instruction,\n  PhaseContainer,\n  RoundAnnouncement,\n  Step,\n  StepSwitcher,\n  ViewIf,\n  WaitingRoom,\n} from '../../shared';\nimport { AvatarName } from '../../avatars';\nimport SecretClueWrite from './SecretClueWrite';\nimport SecretClueWaiting from './SecretClueWaiting';\n\nfunction SecretCluePhase({ state, players, info }) {\n  const user = useUser(players);\n  const isUserReady = useIsUserReady(players, state);\n  const leader = useWhichPlayerIsThe('leader', state, players);\n  const isUserTheLeader = useIsUserThe('leader', state);\n  const [step, setStep] = useState(0);\n\n  const onSubmitSecretClue = useAPICall({\n    apiFunction: CLUBE_DETETIVES_API.submitAction,\n    actionName: 'submit-secret-clue',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: 'Pista Secreta submetida com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar sua pista secreta',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.CLUBE_DETETIVES.SECRET_CLUE}\n      className=\"d-secret-clue-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady]}>\n        {/* Step 0 */}\n        <RoundAnnouncement round={state.round} onPressButton={() => setStep(1)} time={5}>\n          <Instruction contained>\n            Para essa rodada, <AvatarName player={leader} addressUser /> será o(a) líder!\n          </Instruction>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <Step fullWidth>\n          <ViewIf isVisible={!isUserTheLeader}>\n            <SecretClueWaiting user={user} leader={leader} />\n          </ViewIf>\n\n          <ViewIf isVisible={isUserTheLeader}>\n            <SecretClueWrite user={user} onSubmitClue={onSubmitSecretClue} />\n          </ViewIf>\n        </Step>\n\n        {/* Step 2 */}\n        <WaitingRoom\n          players={players}\n          title=\"Pronto!\"\n          instruction=\"Aguardando o servidor dar sinal de vida\"\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nSecretCluePhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.shape({\n    phase: PropTypes.string,\n    round: PropTypes.number,\n  }),\n};\n\nexport default SecretCluePhase;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Spin } from 'antd';\n// Components\nimport { ImageCard } from '../../cards';\nimport { Avatar } from '../../avatars';\nimport { AVATARS } from '../../../utils/constants';\n\nexport function Table({ table, players }) {\n  const baseClass = 'd-table';\n\n  if (!table || !table?.length) {\n    return (\n      <div className={clsx(baseClass, `${baseClass}--center`)}>\n        <Spin size=\"large\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className={baseClass}>\n      {table.map((entry) => {\n        const { playerId, cards } = entry;\n        const playerEntryKey = `table-${playerId}`;\n        return (\n          <div key={playerEntryKey} className=\"d-table__player-entry\">\n            <div className=\"d-table__cards\">\n              {cards.map((cardId) => {\n                return (\n                  <ImageCard\n                    key={`${playerEntryKey}${cardId}`}\n                    imageId={cardId}\n                    cardWidth={120}\n                    className=\"d-table__card\"\n                  />\n                );\n              })}\n            </div>\n            <div className=\"d-table__player-info\">\n              <Avatar id={players[playerId].avatarId} className=\"d-table__player-avatar\" size=\"medium\" />\n              <span\n                className=\"d-table__player-bar\"\n                style={{ backgroundColor: AVATARS[players[playerId].avatarId].color }}\n              />\n              <span className=\"d-table__player-name\">{players[playerId].name}</span>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nTable.propTypes = {\n  players: PropTypes.any,\n  table: PropTypes.arrayOf(\n    PropTypes.shape({\n      playerId: PropTypes.string,\n      cards: PropTypes.arrayOf(PropTypes.string),\n    })\n  ),\n};\n\nexport default Table;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { message, Spin } from 'antd';\nimport { FileImageOutlined, QuestionCircleFilled } from '@ant-design/icons';\n// Hooks\nimport { useIsUserThe, useWhichPlayerIsThe, useAPICall, useUser, useLoading } from '../../../hooks';\n// Resources & Utils\nimport { CLUBE_DETETIVES_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { Instruction, PhaseContainer, Title } from '../../shared';\nimport { AvatarName } from '../../avatars';\nimport { messageContent } from '../../modals';\nimport { ImageCardHand as Hand } from '../../cards';\nimport Table from './Table';\n\nfunction CardPlayPhase({ state, players, info }) {\n  const [isLoading] = useLoading();\n  const user = useUser(players);\n  const currentPlayer = useWhichPlayerIsThe('currentPlayerId', state, players);\n  const isUserTheImpostor = useIsUserThe('impostor', state);\n  const isUserTheCurrentPlayer = useIsUserThe('currentPlayerId', state);\n\n  const onPlayCard = useAPICall({\n    apiFunction: CLUBE_DETETIVES_API.submitAction,\n    actionName: 'play-card',\n    successMessage: 'Carta enviada com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar sua carta',\n  });\n\n  const onSelectCard = (cardId) => {\n    onPlayCard({\n      action: 'PLAY_CARD',\n      cardId,\n    });\n  };\n\n  useEffect(() => {\n    if (isUserTheCurrentPlayer) {\n      message.info(\n        messageContent(\n          'Escolha uma carta!',\n          'Aperte o botão Selecionar acima da carta escolhida',\n          currentPlayer.id,\n          3\n        )\n      );\n    }\n  }, [isUserTheCurrentPlayer, currentPlayer.id]);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.CLUBE_DETETIVES.CARD_PLAY}\n      className=\"d-phase d-play-card-phase\"\n    >\n      <Title>\n        A pista secreta é{' '}\n        <span className=\"d-clue\">{isUserTheImpostor ? <QuestionCircleFilled /> : state.clue}</span>\n      </Title>\n      <Instruction>\n        {isUserTheCurrentPlayer && !isUserTheImpostor && (\n          <>\n            <FileImageOutlined /> Selecione uma carta que mais combine com a pista secreta.\n          </>\n        )}\n        {isUserTheCurrentPlayer && isUserTheImpostor && (\n          <>\n            <FileImageOutlined /> Selecione uma carta que mais combine com as cartas que os outros jogadores\n            estão usando.\n          </>\n        )}\n        {!isUserTheCurrentPlayer && (\n          <>\n            <Spin /> Aguarde enquanto <AvatarName player={currentPlayer} addressUser /> escolhe uma carta\n          </>\n        )}\n      </Instruction>\n      <Table table={state.table} players={players} />\n      <Hand\n        hand={user.hand}\n        onSelectCard={isUserTheCurrentPlayer ? onSelectCard : null}\n        disabledSelectButton={isLoading}\n        selectButtonLabel=\"Selecionar\"\n        sizeRatio={10}\n      />\n    </PhaseContainer>\n  );\n}\n\nCardPlayPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.shape({\n    clue: PropTypes.string,\n    phase: PropTypes.string,\n    table: PropTypes.arrayOf(\n      PropTypes.shape({\n        playerId: PropTypes.string,\n        cards: PropTypes.arrayOf(PropTypes.string),\n      })\n    ),\n  }),\n};\n\nexport default CardPlayPhase;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Spin } from 'antd';\n// Utils\nimport { AVATARS } from '../../../utils/constants';\n// Components\nimport { ImageCard } from '../../cards';\nimport { Avatar } from '../../avatars';\n\nexport function TableFocus({ table, currentPlayer }) {\n  const tableEntry = table.find((entry) => entry.playerId === currentPlayer.id);\n  const baseClass = 'd-table';\n\n  if (!currentPlayer || !tableEntry?.cards) {\n    return (\n      <div className={clsx(baseClass, `${baseClass}--center`)}>\n        <Spin />\n      </div>\n    );\n  }\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--center`)}>\n      <div className=\"d-table__player-entry\">\n        <div className=\"d-table__cards\">\n          {tableEntry?.cards.map((cardId) => {\n            return (\n              <ImageCard\n                key={`table-focous-${cardId}`}\n                imageId={cardId}\n                cardWidth={200}\n                className=\"d-table__card\"\n              />\n            );\n          })}\n        </div>\n        <div className=\"d-table__player-info\">\n          <Avatar id={currentPlayer.avatarId} className=\"d-table__player-avatar\" size=\"medium\" />\n          <span\n            className=\"d-table__player-bar\"\n            style={{ backgroundColor: AVATARS[currentPlayer.avatarId].color }}\n          />\n          <span className=\"d-table__player-name\">{currentPlayer.name}</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nTableFocus.propTypes = {\n  currentPlayer: PropTypes.shape({\n    avatarId: PropTypes.string,\n    name: PropTypes.string,\n  }),\n  table: PropTypes.arrayOf(\n    PropTypes.shape({\n      playerId: PropTypes.string,\n      cards: PropTypes.arrayOf(PropTypes.string),\n    })\n  ),\n};\n\nexport default TableFocus;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, message } from 'antd';\n// Hooks\nimport { useIsUserThe, useWhichPlayerIsThe, useAPICall, useLoading } from '../../../hooks';\n// Resources & Utils\nimport { CLUBE_DETETIVES_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { ButtonContainer, Instruction, PhaseContainer, Title } from '../../shared';\nimport { AvatarName } from '../../avatars';\nimport { messageContent } from '../../modals';\nimport TableFocus from './TableFocus';\n\nfunction DefensePhase({ state, players, info }) {\n  const [isLoading] = useLoading();\n  const currentPlayer = useWhichPlayerIsThe('currentPlayerId', state, players);\n  const isUserTheCurrentPlayer = useIsUserThe('currentPlayerId', state);\n\n  const onFinishDefense = useAPICall({\n    apiFunction: CLUBE_DETETIVES_API.submitAction,\n    actionName: 'submit-secret-clue',\n    successMessage: 'Defesa concluída com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar concluir sua defesa',\n  });\n\n  const onFinishDefenseClick = () => {\n    onFinishDefense({\n      action: 'DEFEND',\n    });\n  };\n\n  useEffect(() => {\n    if (isUserTheCurrentPlayer) {\n      message.info(\n        messageContent(\n          'Sua vez de defender suas escolhas!',\n          'Aperte o botão Concluir Defesa quando terminar',\n          currentPlayer?.id,\n          4\n        )\n      );\n    }\n  }, [isUserTheCurrentPlayer, currentPlayer?.id]);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.CLUBE_DETETIVES.DEFENSE}\n      className=\"d-secret-clue-phase\"\n    >\n      <Title>\n        Defesa: A pista secreta era <span className=\"d-clue\">{state.clue}</span>\n      </Title>\n      <Instruction>\n        <AvatarName player={currentPlayer} />, explique porque você escolheu as cartas.\n        {isUserTheCurrentPlayer && <> Quando terminar sua defesa, aperte concluir.</>}\n      </Instruction>\n\n      <TableFocus table={state.table} currentPlayer={currentPlayer} />\n\n      {isUserTheCurrentPlayer && (\n        <ButtonContainer>\n          <Button type=\"primary\" onClick={onFinishDefenseClick} disabled={isLoading}>\n            Concluir Defesa\n          </Button>\n        </ButtonContainer>\n      )}\n    </PhaseContainer>\n  );\n}\n\nDefensePhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.shape({\n    clue: PropTypes.string,\n    phase: PropTypes.string,\n    table: PropTypes.arrayOf(\n      PropTypes.shape({\n        playerId: PropTypes.string,\n        cards: PropTypes.arrayOf(PropTypes.string),\n      })\n    ),\n  }),\n};\n\nexport default DefensePhase;\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button } from 'antd';\n// Components\nimport { Avatar, AvatarName } from '../../avatars';\nimport { ButtonContainer } from '../../shared';\nimport { orderBy } from '../../../utils';\n\nexport function VotingOptions({ players, leader, user, onVote, isLoading }) {\n  const votingOptions = useMemo(\n    () =>\n      orderBy(\n        Object.values(players).filter((playerId) => playerId !== leader),\n        'name'\n      ),\n    [players, leader]\n  );\n\n  return (\n    <ButtonContainer className=\"d-voting-options\">\n      {votingOptions?.map((playerOption) => {\n        const votedForPlayer = Object.values(players).filter((player) => player?.vote === playerOption.name);\n        return (\n          <div className=\"d-voting-options__container\" key={`voting-button-${playerOption.name}`}>\n            <Button\n              onClick={() => onVote(playerOption.name)}\n              ghost\n              size=\"large\"\n              disabled={user.vote || isLoading || user.name === playerOption.name}\n            >\n              <AvatarName player={playerOption} uppercase />\n            </Button>\n            <div className=\"d-voting-options__vote-container\">\n              Votos: {votedForPlayer.length}\n              <ul className=\"d-voting-options__votes\">\n                {votedForPlayer.map((vPlayer) => (\n                  <Avatar id={vPlayer.avatarId} size=\"small\" alt={vPlayer.name} />\n                ))}\n              </ul>\n            </div>\n          </div>\n        );\n      })}\n    </ButtonContainer>\n  );\n}\n\nVotingOptions.propTypes = {\n  leader: PropTypes.string,\n  onVote: PropTypes.func,\n  players: PropTypes.object,\n  user: PropTypes.shape({\n    name: PropTypes.string,\n  }),\n  isLoading: PropTypes.bool,\n};\n\nexport default VotingOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Spin } from 'antd';\n// Hooks\nimport { useIsUserThe, useAPICall, useUser, useLoading } from '../../../hooks';\n// Resources & Utils\nimport { CLUBE_DETETIVES_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { Instruction, PhaseContainer, Title } from '../../shared';\nimport Table from './Table';\nimport VotingOptions from './VotingOptions';\nimport { AdminForceNextPhase } from '../../admin/index';\n\nfunction VotingPhase({ state, players, info }) {\n  const [isLoading] = useLoading();\n  const user = useUser(players);\n  const isUserTheLeader = useIsUserThe('leader', state);\n\n  const onSubmitVote = useAPICall({\n    apiFunction: CLUBE_DETETIVES_API.submitAction,\n    actionName: 'submit-vote',\n    successMessage: 'Voto enviado com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar seu voto',\n  });\n\n  const onVote = (playerId) => {\n    onSubmitVote({\n      action: 'SUBMIT_VOTE',\n      vote: playerId,\n    });\n  };\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.CLUBE_DETETIVES.VOTING}\n      className=\"d-voting-phase\"\n    >\n      <Title>{isLoading ? <Spin size=\"large\" /> : 'Quem é o impostor?'}</Title>\n      <Instruction>\n        {isUserTheLeader && 'Aguarde enquanto os outros jogadorem votam em quem eles acham ser o impostor'}\n\n        {!isUserTheLeader &&\n          !user.vote &&\n          'Vote para quem você acha que pode ser o impostor! O impostor só perde se 2 ou mais detetives votarem nele! Discutam antes de votar!'}\n\n        {!isUserTheLeader && user.vote && 'Aguarde enquanto os outros jogadores votam...'}\n      </Instruction>\n\n      {!isUserTheLeader && (\n        <VotingOptions\n          players={players}\n          leader={state.leader}\n          user={user}\n          onVote={onVote}\n          isLoading={isLoading}\n        />\n      )}\n\n      <Table table={state.table} players={players} />\n\n      <AdminForceNextPhase />\n    </PhaseContainer>\n  );\n}\n\nVotingPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.shape({\n    leader: PropTypes.string,\n    phase: PropTypes.string,\n    table: PropTypes.arrayOf(\n      PropTypes.shape({\n        playerId: PropTypes.string,\n        cards: PropTypes.arrayOf(PropTypes.string),\n      })\n    ),\n  }),\n};\n\nexport default VotingPhase;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useWhichPlayerIsThe, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { GAME_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { Instruction, PhaseContainer, RankingBoard, Title } from '../../shared';\nimport { AvatarName } from '../../avatars';\nimport { AdminOnlyButton } from '../../admin/index';\n\nfunction RevealPhase({ state, players, info }) {\n  const impostor = useWhichPlayerIsThe('impostor', state, players);\n\n  const onGoToNextRound = useAPICall({\n    apiFunction: GAME_API.goToNextPhase,\n    actionName: 'go-to-next-phase',\n    successMessage: 'Ranking!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar ir para a próxima fase',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.CLUBE_DETETIVES.REVEAL}\n      className=\"d-voting-phase\"\n    >\n      <Title>O impostor era {<AvatarName player={impostor} />}</Title>\n      <Instruction contained>\n        {state.impostorVotes > 1 ? (\n          <>Ele(a) recebeu mais de dois votos! Quem votou nele(a) ganha 3 pontos!</>\n        ) : (\n          <>Ele(a) não recebeu mais de 2 votos: Impostor ganha 5 pontos e Líder ganha 4 pontos!</>\n        )}\n      </Instruction>\n      <RankingBoard players={players} ranking={state.ranking} />\n\n      <Instruction contained>Faltam {state.roundsToEndGame} rodadas para o jogo terminar</Instruction>\n\n      <AdminOnlyButton action={() => onGoToNextRound({})} label=\"Ir para próxima rodada ou game over\" />\n    </PhaseContainer>\n  );\n}\n\nRevealPhase.propTypes = {\n  info: PropTypes.any,\n  players: PropTypes.any,\n  state: PropTypes.shape({\n    impostorVotes: PropTypes.number,\n    phase: PropTypes.any,\n    ranking: PropTypes.any,\n    roundsToEndGame: PropTypes.number,\n  }),\n};\n\nexport default RevealPhase;\n","import React from 'react';\n// Hooks\nimport { GAME_COLLECTION, PHASES } from '../../../utils/constants';\n// Components\nimport { GameOver, Session } from '../../shared';\nimport Lobby from '../../lobby/Lobby';\nimport { Rules } from '../../rules';\nimport { PageError } from '../../errors/PageError';\nimport SecretCluePhase from './SecretCluePhase';\nimport CardPlayPhase from './CardPlayPhase';\nimport DefensePhase from './DefensePhase';\nimport VotingPhase from './VotingPhase';\nimport RevealPhase from './RevealPhase';\n\nfunction SessionClubeDetetives({ gameId }) {\n  function getActiveComponent(phase) {\n    switch (phase) {\n      case PHASES.CLUBE_DETETIVES.LOBBY:\n        return Lobby;\n      case PHASES.CLUBE_DETETIVES.RULES:\n        return Rules;\n      case PHASES.CLUBE_DETETIVES.SECRET_CLUE:\n        return SecretCluePhase;\n      case PHASES.CLUBE_DETETIVES.CARD_PLAY:\n        return CardPlayPhase;\n      case PHASES.CLUBE_DETETIVES.DEFENSE:\n        return DefensePhase;\n      case PHASES.CLUBE_DETETIVES.VOTING:\n        return VotingPhase;\n      case PHASES.CLUBE_DETETIVES.REVEAL:\n        return RevealPhase;\n      case PHASES.CLUBE_DETETIVES.GAME_OVER:\n        return GameOver;\n      default:\n        return PageError;\n    }\n  }\n\n  return (\n    <Session\n      gameId={gameId}\n      gameCollection={GAME_COLLECTION.CLUBE_DETETIVES}\n      getActiveComponent={getActiveComponent}\n    />\n  );\n}\n\nexport default SessionClubeDetetives;\n","import React, { memo } from 'react';\n\nfunction Notes() {\n  return (\n    <textarea\n      name=\"\"\n      id=\"\"\n      cols=\"30\"\n      rows=\"10\"\n      className=\"e-notes\"\n      placeholder=\"Escreva anotações aqui se quiser, mas cuidado com o teclado fazendo muito barulho\"\n    ></textarea>\n  );\n}\n\nNotes.propTypes = {};\n\nexport default memo(Notes);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { ESPIAO_ENTRE_NOS_API } from '../../../adapters';\n// Components\nimport { AdminOnlyButton } from '../../admin/index';\n\nfunction AdminTimerControlButton({ label = 'Continuar', action = 'resume' }) {\n  const onControlStopwatch = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.handleAdminAction,\n    actionName: 'timer-control',\n    successMessage: 'Admin action com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar ação',\n  });\n\n  return <AdminOnlyButton action={() => onControlStopwatch({ action })} label={label} />;\n}\n\nAdminTimerControlButton.propTypes = {\n  label: PropTypes.string,\n  action: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nexport default AdminTimerControlButton;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Button, Tooltip } from 'antd';\nimport { ClearOutlined, EnvironmentOutlined } from '@ant-design/icons';\n// Hooks\nimport { useGlobalState } from '../../../hooks';\n\nfunction List({ locations }) {\n  const [cache, setCache] = useGlobalState('espiaoEntreNosCache');\n\n  const onCross = (item) => {\n    setCache((s) => {\n      const newState = { ...s };\n      if (newState[item]) {\n        delete newState[item];\n      } else {\n        newState[item] = true;\n      }\n      return newState;\n    });\n  };\n\n  const onClearCrossed = () => setCache({});\n\n  return (\n    <div className=\"e-list\">\n      <h3 className=\"e-list__title\">\n        <EnvironmentOutlined /> Possíveis Locais\n        <Tooltip title=\"Deselecionar todos\">\n          <Button\n            shape=\"circle\"\n            ghost\n            type=\"default\"\n            size=\"small\"\n            icon={<ClearOutlined />}\n            onClick={onClearCrossed}\n          />\n        </Tooltip>\n      </h3>\n      <ul className={clsx('e-list__list')}>\n        {locations.map((item) => (\n          <li\n            className={clsx('e-list__item', cache[item] && 'e-list__item--crossed')}\n            key={item}\n            role=\"button\"\n            onClick={() => onCross(item)}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nList.propTypes = {\n  locations: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default memo(List);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\n// Hooks\nimport { useIsUserReady, useUser, useIsUserThe } from '../../../hooks';\n// Resources & Utils\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { Instruction, PhaseContainer, RoundAnnouncement, StepSwitcher, Title } from '../../shared';\nimport { EspiaoEntreNosCard as Card } from '../../cards';\nimport Notes from './Notes';\nimport AdminTimerControlButton from './AdminTimerControlButton';\nimport LocationsList from './LocationsList';\n\nfunction AssignmentPhase({ state, players, info }) {\n  const isUserReady = useIsUserReady(players, state);\n  const user = useUser(players);\n  const isUserTheSpy = useIsUserThe('currentSpy', state);\n  const [step, setStep] = useState(0);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ESPIAO_ENTRE_NOS.ASSIGNMENT}\n      className=\"e-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady]}>\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state.round}\n          onPressButton={() => setStep(1)}\n          time={5}\n          className=\"e-round-announcement\"\n        >\n          <Instruction className=\"e-phase-instruction\">Há um espião entre nós!</Instruction>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <div className=\"e-phase-step\">\n          <Title level={2} className=\"e-phase-title\">\n            Você está no(a)...\n          </Title>\n\n          <Card location={user.location} role={user.role} />\n\n          <AdminTimerControlButton label=\"Começar cronômetro\" action=\"start\" />\n\n          <Instruction className=\"e-phase-instruction\">\n            {isUserTheSpy\n              ? 'Você terá 10 minutos para descobrir onde os outros agentes estão! Pronto?'\n              : 'Você terá 10 minutos para descobrir quem é o espião entre nós! Pronto?'}\n          </Instruction>\n\n          <Instruction className=\"e-lists\">\n            <LocationsList locations={state.possibleLocations} />\n          </Instruction>\n          <Notes />\n        </div>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nAssignmentPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default AssignmentPhase;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Popconfirm, Select, Space } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n// Hooks\nimport { useGlobalState, useLoading } from '../../../hooks';\n\nfunction PlayerSelect({ players, onSend, isFinalAssessment = false }) {\n  const [isLoading] = useLoading();\n  const [userId] = useGlobalState('userId');\n\n  const [selectedPlayerId, setSelectedPlayerId] = useState(null);\n\n  const playersWithoutMe = Object.values(players).filter((player) => player.id !== userId);\n\n  return (\n    <Space>\n      <Select onChange={setSelectedPlayerId} className=\"e-select\" placeholder=\"Acuse um jogador\">\n        {playersWithoutMe.map((player) => (\n          <Select.Option key={player.id} value={player.id}>\n            {player.name}\n          </Select.Option>\n        ))}\n      </Select>\n      <Popconfirm\n        title={`${\n          isFinalAssessment ? '' : 'Você só pode acusar uma vez durante o jogo! '\n        }Tem certeza que quer acusar ${players[selectedPlayerId]?.name}?`}\n        onConfirm={() => onSend({ vote: selectedPlayerId })}\n        okText=\"Sim\"\n        cancelText=\"Não\"\n      >\n        <Button\n          type=\"primary\"\n          disabled={!selectedPlayerId || isLoading}\n          icon={isLoading ? <LoadingOutlined /> : null}\n        >\n          Acusar{selectedPlayerId ? `: ${players[selectedPlayerId]?.name}` : ''}\n        </Button>\n      </Popconfirm>\n    </Space>\n  );\n}\n\nPlayerSelect.propTypes = {\n  players: PropTypes.object.isRequired,\n  onSend: PropTypes.func.isRequired,\n  isFinalAssessment: PropTypes.bool,\n};\n\nexport default PlayerSelect;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Popconfirm, Select, Space } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLoading } from '../../../hooks';\n\nfunction LocationSelect({ locations, onSend }) {\n  const [isLoading] = useLoading();\n  const [selectedLocation, setSelectedLocation] = useState(null);\n\n  return (\n    <Space className=\"e-select-container e-select-container--locations\">\n      <Select onChange={setSelectedLocation} placeholder=\"Chute um local\">\n        {locations.map((location) => (\n          <Select.Option key={`select-${location}`} value={location}>\n            {location}\n          </Select.Option>\n        ))}\n      </Select>\n      <Popconfirm\n        title={`Você só pode chutar uma vez durante o jogo! Tem certeza que quer chutar ${selectedLocation}?`}\n        onConfirm={() => onSend({ guess: selectedLocation })}\n        okText=\"Sim\"\n        cancelText=\"Não\"\n      >\n        <Button\n          type=\"primary\"\n          disabled={!selectedLocation || isLoading}\n          icon={isLoading ? <LoadingOutlined /> : null}\n        >\n          Chutar{selectedLocation ? `: ${selectedLocation}` : ''}\n        </Button>\n      </Popconfirm>\n    </Space>\n  );\n}\n\nLocationSelect.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default LocationSelect;\n","import React, { useState } from 'react';\nimport { useTimer } from 'react-timer-hook';\n// Design Resources\nimport { Button, message, Modal } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\n// Hooks and API\nimport { ESPIAO_ENTRE_NOS_API } from '../../../adapters';\nimport { useAPICall, useGlobalState } from '../../../hooks';\n// Components\nimport { ButtonContainer } from '../../shared';\n\nfunction FinalAssessmentModal({ isModalVisible, onAdminControl, players }) {\n  return (\n    <Modal\n      visible={isModalVisible}\n      title=\"O Tempo Acabou!\"\n      footer={null}\n      closable={false}\n      className=\"e-modal\"\n    >\n      Quem foi a última pessoa a responder uma pergunta?\n      <ButtonContainer wrap>\n        {Object.entries(players).map(([playerId, player]) => (\n          <Button\n            type=\"default\"\n            key={playerId}\n            icon={<UserOutlined />}\n            onClick={() => onAdminControl({ action: 'final', lastPlayer: playerId })}\n          >\n            {player.name}\n          </Button>\n        ))}\n      </ButtonContainer>\n    </Modal>\n  );\n}\n\nfunction Timer({ timeRemaining, players, hideAccusationSelect }) {\n  const [isAdmin] = useGlobalState('isAdmin');\n  const [isModalVisible, setModalVisible] = useState(false);\n\n  const onAdminControl = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.handleAdminAction,\n    actionName: 'admin-control',\n    successMessage: 'Admin action com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar ação',\n  });\n\n  const onTimesUp = () => {\n    if (isAdmin) {\n      setModalVisible(true);\n    }\n    hideAccusationSelect();\n    message.warning('O tempo acabou!!! Preparado para a avaliação final?', 10);\n  };\n\n  const { minutes, seconds } = useTimer({\n    expiryTimestamp: Date.now() + timeRemaining,\n    autoStart: true,\n    onExpire: onTimesUp,\n  });\n\n  return (\n    <div className=\"e-timer\">\n      {minutes}:{seconds < 10 ? `0${seconds}` : seconds}\n      <FinalAssessmentModal\n        isModalVisible={isModalVisible}\n        onAdminControl={onAdminControl}\n        players={players}\n      />\n    </div>\n  );\n}\n\nexport default Timer;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Button, Tooltip } from 'antd';\nimport { AimOutlined, ClearOutlined, IssuesCloseOutlined } from '@ant-design/icons';\n// Hooks\nimport { useGlobalState } from '../../../hooks';\n\nfunction SuspectsList({ players }) {\n  const [cache, setCache] = useGlobalState('espiaoEntreNosCache');\n\n  const onCross = (item) => {\n    setCache((s) => {\n      const newState = { ...s };\n      if (newState[item]) {\n        delete newState[item];\n      } else {\n        newState[item] = true;\n      }\n      return newState;\n    });\n  };\n\n  const onClearCrossed = () => setCache({});\n\n  return (\n    <div className={clsx('e-list')}>\n      <h3 className=\"e-list__title\">\n        <AimOutlined /> Suspeitos{' '}\n        <Tooltip title=\"Deselecionar todos\">\n          <Button\n            shape=\"circle\"\n            ghost\n            type=\"default\"\n            size=\"small\"\n            icon={<ClearOutlined />}\n            onClick={onClearCrossed}\n          />\n        </Tooltip>\n      </h3>\n      <ul className=\"e-list__list\">\n        {Object.entries(players).map(([playerId, player]) => (\n          <li\n            className={clsx('e-list__item', cache[playerId] && 'e-list__item--crossed')}\n            key={playerId}\n            role=\"button\"\n            onClick={() => onCross(playerId)}\n          >\n            {player.name}{' '}\n            {player.usedAccusation && (\n              <Tooltip title=\"Já usou acusação\">\n                <IssuesCloseOutlined size=\"small\" />\n              </Tooltip>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nSuspectsList.propTypes = {\n  players: PropTypes.object,\n};\n\nexport default memo(SuspectsList);\n","import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { notification } from 'antd';\n// Hooks\nimport { useUser, useAPICall, useIsUserThe, useWhichPlayerIsThe } from '../../../hooks';\n// Resources & Utils\nimport { ESPIAO_ENTRE_NOS_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { Instruction, PhaseContainer, Title } from '../../shared';\nimport { EspiaoEntreNosCard as Card } from '../../cards';\nimport Notes from './Notes';\nimport PlayerSelect from './PlayerSelect';\nimport LocationSelect from './LocationSelect';\nimport Timer from './Timer';\nimport AdminTimerControlButton from './AdminTimerControlButton';\nimport SuspectsList from './SuspectsList';\nimport LocationsList from './LocationsList';\n\nfunction InvestigationPhase({ state, players, info }) {\n  const user = useUser(players);\n  const isUserTheSpy = useIsUserThe('currentSpy', state);\n  const startingPlayer = useWhichPlayerIsThe('startingPlayer', state, players);\n  const [isAccusationSelectVisible, setAccusationSelectVisible] = useState(true);\n\n  const onMakeAccusation = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.makeAccusation,\n    actionName: 'accuse',\n    successMessage: 'Jogador acusado com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar acusar',\n  });\n\n  const onGuessLocation = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.guessLocation,\n    actionName: 'guess',\n    successMessage: 'Chute enviado com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar chutar o local',\n  });\n\n  const hideAccusationSelect = () => {\n    setAccusationSelectVisible(false);\n  };\n\n  useEffect(() => {\n    if (state?.outcome === 'VOTE_FAIL') {\n      notification.info({\n        message: 'A votação não foi unânime',\n        description: state?.votedYes ? `Votaram sim: ${state?.votedYes}` : 'Ninguém votou sim',\n        duration: 10,\n      });\n    }\n\n    if (state.timeRemaining > 590000) {\n      notification.info({\n        message: '10 minutos!',\n        description: `${startingPlayer.name ?? Object.values(players)[0].name} começa perguntando!`,\n        duration: 10,\n      });\n    }\n  }, []); // eslint-disable-line\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ESPIAO_ENTRE_NOS.INVESTIGATION}\n      className=\"e-phase\"\n    >\n      <div className=\"e-phase-step-header\">\n        <div className=\"e-phase-step-header__timer-container\">\n          <Timer\n            timeRemaining={state.timeRemaining}\n            players={players}\n            hideAccusationSelect={hideAccusationSelect}\n          />\n        </div>\n\n        <div className=\"e-phase-step-header__center\">\n          <Title level={2} className=\"e-phase-title\">\n            {isUserTheSpy ? 'Onde eles estão?' : 'Quem é o Espião?'}\n          </Title>\n          <Card location={user.location} role={user.role} />\n        </div>\n      </div>\n\n      {isAccusationSelectVisible && (\n        <Fragment>\n          {isUserTheSpy && <LocationSelect locations={state.possibleLocations} onSend={onGuessLocation} />}\n\n          {!user?.usedAccusation ? (\n            <PlayerSelect players={players} onSend={onMakeAccusation} />\n          ) : (\n            <Instruction className=\"e-phase-instruction\">Você já usou sua chance de acusar</Instruction>\n          )}\n        </Fragment>\n      )}\n\n      <Instruction className=\"e-lists\">\n        <SuspectsList players={players} />\n        <LocationsList locations={state.possibleLocations} />\n      </Instruction>\n\n      <Notes />\n\n      <AdminTimerControlButton label=\"Forçar pausar cronômetro\" action=\"pause\" />\n    </PhaseContainer>\n  );\n}\n\nInvestigationPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default InvestigationPhase;\n","import { Modal } from 'antd';\nimport React, { useState } from 'react';\nimport { useTimer } from 'react-timer-hook';\nimport { inNSeconds } from '../../../utils';\n\nfunction EmergencyAlertSVG() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 245.8 204.8\"\n      overflow=\"visible\"\n      className=\"e-emergency-alert__svg\"\n    >\n      <defs />\n\n      <g id=\"g6f2cE_2_\">\n        <path\n          fill=\"#f9c303\"\n          d=\"M0 114.9c2.6-3.2 5.8-4.4 10-4.1 4 .3 8 0 11.9.1 4.6.1 7.8 2.7 8 6.4.2 3.7-3.1 6.5-7.7 6.6-4.5.1-9-.2-13.4.1-3.9.3-6.7-1.1-8.8-4.2v-4.9zM245.8 119.9c-2.1 3.1-4.9 4.5-8.8 4.2-4.6-.3-9.3 0-14-.1-4.3-.1-7.5-2.9-7.1-6.6.4-3.9 2.8-6.4 6.9-6.5 5.3-.1 10.6.1 16-.1 3.3-.1 4.8 2.4 7 4v5.1zM129.9 0c3.8 2.2 5.3 5.5 5 9.9-.2 4.1.1 8.3-.1 12.5-.2 4.6-3.2 7.7-6.9 7.6-4-.1-6.2-2.8-6.3-7.8-.1-4.3.2-8.7-.1-13-.3-4 1-7 4.4-9.2h4z\"\n        />\n        <path\n          d=\"M197.1 170c-3.5-.2-6.9-.2-10.4-.2h-1.6c-19.2.1-38.5.2-57.7.2-22.2 0-44.5-.1-66.7-.2h-1.6c-2.8.1-5.6.1-8.4.2-7.1.2-12.2 3.6-13.7 9.2-2.6 9.5-.1 20.2 5.6 23.6 1.3.8 2.6 1.3 4.2 1.2.1.3.1.6.2.9h152.9c.2-.2.3-.5.3-.8-2.7 0-5.4-.1-8.1-.1 2.7 0 5.4.1 8.1.1 6.3-1.7 9.6-5.6 9.7-11.9.1-3-.2-6 .1-8.9.5-6.7-5.3-12.9-12.9-13.3z\"\n          fill=\"#3a3939\"\n        />\n        <path\n          fill=\"#f9c303\"\n          d=\"M189.9 22.6c0 .1-.1 1.4-.6 2.3-2.7 4.8-5.4 9.5-8.2 14.2-2.2 3.6-5.6 4.3-9 2.4-3.5-2-4.3-5.4-2.2-9 2.7-4.8 5.4-9.5 8.3-14.2 1.6-2.6 4.1-4 7.2-3 2.8 1 4.8 2.9 4.5 7.3zM77.4 35.6c-.3 3-1.7 5.2-4.1 6.2-2.7 1.1-5.9 1.2-7.7-1.6-3.4-5.3-6.7-10.7-9.5-16.3-1.2-2.4-.6-5.3 1.8-7.2 2.3-1.7 5-2.8 7.3-.7 5.9 5.4 8.4 12.9 12.2 19.6zM22.4 55.9c.3.1 1.3.1 2.2.5 4.9 2.8 9.8 5.5 14.6 8.5 3.6 2.2 4 5.8 2.1 9.1-1.9 3.2-5.2 4.1-8.7 2.1-4.9-2.8-9.8-5.5-14.6-8.5-2.6-1.6-3.8-4.3-2.8-7.3s3.2-4.7 7.2-4.4zM230.8 62c.1 2.6-1.2 4.5-3.3 5.8-4.8 2.9-9.7 5.8-14.6 8.5-3.5 1.9-6.8.7-8.6-2.5-1.8-3.1-1.3-6.6 2.1-8.7 4.8-3 9.6-5.9 14.6-8.5 4.8-2.5 9.8.5 9.8 5.4z\"\n        />\n        <path\n          d=\"M186 105.9c-1.5-28.5-22-48.9-46.3-54.7-14.7-3.5-29.8-2.8-43.8 3.4-21.3 9.4-33.5 26-36.2 49.3-1 1.9-.6 3.9-.6 5.9v60.1h1.6c22.2.1 44.5.2 66.7.2 19.2 0 38.5-.1 57.7-.2h1.6v-57.1c-.1-2.4.3-4.7-.7-6.9zm-95.5 9.6c-1.5 10-2.2 20.1-2.2 30.3 0 3.4-.7 4.6-4.3 4.5-7.9-.2-8.1 0-7.9-7.7.2-11.6-1.1-23.3.9-34.8 2.5-14.8 10.9-25.7 23.6-33.4.5-.3 1.2-.3 2.9-.8-6.5 14-10.9 27.6-13 41.9z\"\n          fill=\"red\"\n        />\n        <path\n          d=\"M103.4 73.5c-6.4 14-10.7 27.6-12.9 41.9-1.5 10-2.2 20.1-2.2 30.3 0 3.4-.7 4.6-4.3 4.5-7.9-.2-8.1 0-7.9-7.7.2-11.6-1.1-23.3.9-34.8 2.5-14.8 10.9-25.7 23.6-33.4.4-.3 1.1-.3 2.8-.8z\"\n          fill=\"#fefefd\"\n        />\n      </g>\n    </svg>\n  );\n}\n\nfunction EmergencyAlert() {\n  const [isVisible, setVisible] = useState(true);\n\n  useTimer({\n    expiryTimestamp: inNSeconds(2),\n    autoStart: true,\n    onExpire: () => setVisible(false),\n  });\n\n  return (\n    <Modal centered footer={null} visible={isVisible} className=\"e-emergency-alert\" closable={false}>\n      <EmergencyAlertSVG />\n    </Modal>\n  );\n}\n\nexport default EmergencyAlert;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useUser, useAPICall, useIsUserThe, useWhichPlayerIsThe } from '../../../hooks';\n// Resources & Utils\nimport { ESPIAO_ENTRE_NOS_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { Instruction, PhaseContainer, ReadyPlayersBar, Title, View, ViewSwitch } from '../../shared';\nimport { EspiaoEntreNosCard as Card } from '../../cards';\nimport Notes from './Notes';\nimport AdminTimerControlButton from './AdminTimerControlButton';\nimport SuspectsList from './SuspectsList';\nimport EmergencyAlert from './EmergencyAlert';\nimport LocationsList from './LocationsList';\n\nfunction AssessmentPhase({ state, players, info }) {\n  const user = useUser(players);\n  const isUserTheTarget = useIsUserThe('target', state);\n  const isUserTheAccuser = useIsUserThe('accuser', state);\n  const [submittedAction, setSubmitAction] = useState(false);\n  const accuser = useWhichPlayerIsThe('accuser', state, players);\n  const target = useWhichPlayerIsThe('target', state, players);\n\n  const onSubmitVoting = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.submitVoting,\n    actionName: 'guess',\n    onBeforeCall: () => setSubmitAction(true),\n    onError: () => setSubmitAction(false),\n    successMessage: 'Voto enviado com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar seu voto',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ESPIAO_ENTRE_NOS.ASSESSMENT}\n      className=\"e-phase\"\n    >\n      <Title level={2} className=\"e-phase-title\">\n        {accuser.name} está acusando {target.name} de ser o espião. Concorda?\n      </Title>\n\n      {!state?.finalAssessment && <EmergencyAlert />}\n\n      <ViewSwitch cases={[isUserTheAccuser, isUserTheTarget, true]}>\n        <View key=\"accuser\">\n          <Instruction className=\"e-phase-instruction\">\n            Você não participa dessa votacão, afinal, você quem acusou!\n          </Instruction>\n        </View>\n\n        <View key=\"target\">\n          <Instruction className=\"e-phase-instruction\">\n            Você não participa dessa votacão, afinal, é você quem está no paredão!\n          </Instruction>\n        </View>\n\n        <View key=\"others\">\n          <Space>\n            <Button ghost disabled={submittedAction} onClick={() => onSubmitVoting({ vote: true })}>\n              Também acho!\n            </Button>\n            <Button ghost disabled={submittedAction} onClick={() => onSubmitVoting({ vote: false })}>\n              Não é ele(a)\n            </Button>\n          </Space>\n        </View>\n      </ViewSwitch>\n\n      <Card location={user.location} role={user.role} />\n\n      <ReadyPlayersBar players={players} readyText=\"Votei\" readyTextPlural=\"Votamos\" />\n\n      <Instruction className=\"e-lists\">\n        <SuspectsList players={players} />\n        <LocationsList locations={state.possibleLocations} />\n      </Instruction>\n\n      <Notes />\n\n      <AdminTimerControlButton label=\"Forçar continuar cronômetro\" action=\"resume\" />\n    </PhaseContainer>\n  );\n}\n\nAssessmentPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default AssessmentPhase;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { message } from 'antd';\n// Hooks\nimport { useAPICall, useIsUserThe, useWhichPlayerIsThe } from '../../../hooks';\n// Resources & Utils\nimport { ESPIAO_ENTRE_NOS_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { AdminOnly, AdminButton } from '../../admin/index';\nimport { Instruction, PhaseContainer, Title } from '../../shared';\n\nconst determineView = (resolutionType, spyWin, isUserTheSpy, timeRemaining) => {\n  return {\n    playerVictory: spyWin === isUserTheSpy,\n    isUserTheSpy,\n    wasABadVoting: spyWin && Boolean(timeRemaining > 0),\n    wasAnAccusationAttempt: resolutionType === 'SPY_FOUND',\n    didSpyGuess: resolutionType === 'SPY_GUESS',\n    didTheSpyWin: spyWin,\n  };\n};\n\nfunction ResolutionPhase({ state, players, info }) {\n  const isUserTheSpy = useIsUserThe('currentSpy', state);\n  const currentSpy = useWhichPlayerIsThe('currentSpy', state, players);\n  const target = useWhichPlayerIsThe('target', state, players);\n\n  const onAdminControl = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.handleAdminAction,\n    actionName: 'admin-control',\n    successMessage: 'Admin action com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar ação',\n  });\n\n  useEffect(() => {\n    if (state?.resolutionType === 'SPY_GUESS') {\n      if (state.spyWin) {\n        message.warning(`${currentSpy?.name} chutou ${state.guess} e acertou`, 6);\n      } else {\n        message.warning(`${currentSpy?.name} chutou ${state.guess} e error feio`, 6);\n      }\n    }\n  }, []); // eslint-disable-line\n\n  const viewInfo = determineView(state.resolutionType, state.spyWin, isUserTheSpy, state?.timeRemaining);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ESPIAO_ENTRE_NOS.RESOLUTION}\n      className=\"e-phase e-phase--center\"\n    >\n      <div className=\"e-phase-step\">\n        <Title level={2} className=\"e-phase-title\">\n          {viewInfo.playerVictory ? 'Missão Cumprida!' : 'Missão Fracassada!'}\n        </Title>\n\n        {viewInfo.wasAnAccusationAttempt && (\n          <Instruction className=\"e-phase-instruction\">\n            Os agentes tentaram incriminar {target.name}\n            {viewInfo.didTheSpyWin ? ' e erraram feio!' : ' e acertaram na mosca!'}\n            <br />\n            {viewInfo.didTheSpyWin\n              ? `O espião era ${currentSpy.name}! Todos os segredos da agência foram revelados e o mundo vai acabar.`\n              : `Parabéns! O mundo está salvo graças a você.`}\n            <br />\n            {viewInfo.wasABadVoting &&\n              'Da próxima vez, discutam mais antes de fazerem uma votação precipitada.'}\n          </Instruction>\n        )}\n\n        {viewInfo.didSpyGuess && (\n          <Instruction className=\"e-phase-instruction\">\n            O espião disse que o local é {state?.guess}\n            {viewInfo.didTheSpyWin\n              ? ' e acertou na mosca!'\n              : ` e errou feio! Os Agentes estão no ${state.currentLocation}`}\n            <br />\n            {viewInfo.didTheSpyWin\n              ? `Todos os segredos da agência foram revelados e o mundo vai acabar.`\n              : `Foi por pouco, mas não foi dessa vez que o mal venceu.`}\n            <br />\n          </Instruction>\n        )}\n      </div>\n\n      <Instruction className=\"e-phase-instruction\">\n        Disfarces dos infiltrados:\n        {Object.values(players).map(({ id, name, role }) => (\n          <li key={`role-list-${id}`}>\n            {name} como {role}\n          </li>\n        ))}\n      </Instruction>\n\n      <AdminOnly>\n        <AdminButton action={() => onAdminControl({ action: 'round' })} label=\"Iniciar nova rodada\" />\n        <AdminButton action={() => onAdminControl({ action: 'end' })} label=\"Terminar o jogo\" />\n      </AdminOnly>\n    </PhaseContainer>\n  );\n}\n\nResolutionPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default ResolutionPhase;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Modal, notification, Select } from 'antd';\n// Hooks\nimport { useUser, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { ESPIAO_ENTRE_NOS_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\nimport { getPlayersFromIds } from '../../../utils';\n// Components\nimport { AdminOnly } from '../../admin/index';\nimport { ButtonContainer, Instruction, PhaseContainer, Title } from '../../shared';\nimport { EspiaoEntreNosCard as Card } from '../../cards';\nimport LocationsList from './LocationsList';\nimport SuspectsList from './SuspectsList';\nimport Notes from './Notes';\nimport PlayerSelect from './PlayerSelect';\n\nfunction FinalAssessmentInstruction({ playerOrder, playerOrderIndex, players }) {\n  return (\n    <Instruction className=\"e-phase-instruction\">\n      Já que vocês falharam em encontrar o espião, há uma última possibilidade!\n      <ul>\n        {playerOrderIndex === 0 ? (\n          <li>Cada jogador, começando por {players?.[playerOrder[0]]?.name}, faz uma acusação.</li>\n        ) : (\n          <li>Agora é a vez de {playerOrder[playerOrderIndex]} faz uma acusação.</li>\n        )}\n        <li>Se a votação for unânime em qualquer uma das votações, o jogo acaba e revelam-se os papéis.</li>\n        <li>Sem discussão dessa vez, simplesmente acuse alguém! Não temos mais tempo!</li>\n        <li>A ordem será essa: {getPlayersFromIds(playerOrder, players, true).join(', ')}</li>\n      </ul>\n    </Instruction>\n  );\n}\n\nfunction FinalAssessmentModal({ isModalVisible, onMakeAccusation, players, playerOrder, playerOrderIndex }) {\n  return (\n    <Modal\n      visible={isModalVisible}\n      title=\"Quem você vai acusar?\"\n      footer={null}\n      closable={false}\n      className=\"e-modal\"\n    >\n      <FinalAssessmentInstruction\n        playerOrder={playerOrder}\n        playerOrderIndex={playerOrderIndex}\n        players={players}\n      />\n      Não há tempo pra pensar, escolha alguém!\n      <ButtonContainer>\n        <PlayerSelect players={players} onSend={onMakeAccusation} isFinalAssessment />\n      </ButtonContainer>\n    </Modal>\n  );\n}\n\nfunction FinalAssessmentPhase({ state, players, info }) {\n  const user = useUser(players);\n  const [accuser, setAccuser] = useState(null);\n  const [target, setTarget] = useState(null);\n\n  const onAdminControl = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.handleAdminAction,\n    actionName: 'admin-control',\n    successMessage: 'Admin action com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar ação',\n  });\n\n  const onMakeAccusation = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.makeAccusation,\n    actionName: 'accuse',\n    successMessage: 'Jogador acusado com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar acusar',\n  });\n\n  useEffect(() => {\n    if (state?.outcome === 'VOTE_FAIL') {\n      notification.info({\n        message: 'A votação não foi unânime',\n        description: state?.votedYes ? `Votaram sim: ${state?.votedYes}` : 'Ninguém votou sim',\n        duration: 10,\n      });\n    }\n  }, []); // eslint-disable-line\n\n  const isUserTheAccuser = state.playerOrder[state.playerOrderIndex] === user.id;\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ESPIAO_ENTRE_NOS.FINAL_ASSESSMENT}\n      className=\"e-phase\"\n    >\n      <Title level={2} className=\"e-phase-title\">\n        Última Chance!\n      </Title>\n\n      <FinalAssessmentModal\n        isModalVisible={isUserTheAccuser}\n        onMakeAccusation={onMakeAccusation}\n        players={players}\n        playerOrder={state.playerOrder}\n        playerOrderIndex={state.playerOrderIndex}\n      />\n\n      <FinalAssessmentInstruction\n        playerOrder={state.playerOrder}\n        playerOrderIndex={state.playerOrderIndex}\n        players={players}\n      />\n\n      <Card location={user.location} role={user.role} />\n\n      <Instruction className=\"e-lists\">\n        <SuspectsList players={players} />\n        <LocationsList locations={state.possibleLocations} />\n      </Instruction>\n\n      <Notes />\n\n      <AdminOnly className=\"e-admin-final-assessment\">\n        <span>Acusador:</span>\n        <Select onChange={setAccuser} className=\"e-select\" placeholder=\"Acusador\">\n          {Object.values(players).map((player) => (\n            <Select.Option key={player.id} value={player.id}>\n              {player.name}\n            </Select.Option>\n          ))}\n        </Select>\n        <span>Acusado:</span>\n        <Select onChange={setTarget} className=\"e-select\" placeholder=\"Acusado\">\n          {Object.values(players).map((player) => (\n            <Select.Option key={player.id} value={player.id}>\n              {player.name}\n            </Select.Option>\n          ))}\n        </Select>\n        <Button\n          type=\"primary\"\n          disabled={!accuser || !target || accuser === target}\n          onClick={() =>\n            onAdminControl({\n              action: {\n                accuser,\n                target,\n              },\n            })\n          }\n        >\n          Enviar decisão final\n        </Button>\n      </AdminOnly>\n    </PhaseContainer>\n  );\n}\n\nFinalAssessmentPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default FinalAssessmentPhase;\n","import React from 'react';\n// Hooks\nimport { GAME_COLLECTION, PHASES } from '../../../utils/constants';\n// Components\nimport { GameOver, Session } from '../../shared';\nimport Lobby from '../../lobby/Lobby';\nimport { Rules } from '../../rules';\nimport { PageError } from '../../errors/PageError';\nimport AssignmentPhase from './AssignmentPhase';\nimport InvestigationPhase from './InvestigationPhase';\nimport AssessmentPhase from './AssessmentPhase';\nimport ResolutionPhase from './ResolutionPhase';\nimport FinalAssessmentPhase from './FinalAssessmentPhase';\n\nfunction SessionEspiaoEntreNos({ gameId }) {\n  function getActiveComponent(phase) {\n    switch (phase) {\n      case PHASES.ESPIAO_ENTRE_NOS.LOBBY:\n        return Lobby;\n      case PHASES.ESPIAO_ENTRE_NOS.RULES:\n        return Rules;\n      case PHASES.ESPIAO_ENTRE_NOS.ASSIGNMENT:\n        return AssignmentPhase;\n      case PHASES.ESPIAO_ENTRE_NOS.INVESTIGATION:\n        return InvestigationPhase;\n      case PHASES.ESPIAO_ENTRE_NOS.ASSESSMENT:\n        return AssessmentPhase;\n      case PHASES.ESPIAO_ENTRE_NOS.FINAL_ASSESSMENT:\n        return FinalAssessmentPhase;\n      case PHASES.ESPIAO_ENTRE_NOS.RESOLUTION:\n        return ResolutionPhase;\n      case PHASES.ESPIAO_ENTRE_NOS.GAME_OVER:\n        return GameOver;\n      default:\n        return PageError;\n    }\n  }\n\n  return (\n    <Session\n      gameId={gameId}\n      gameCollection={GAME_COLLECTION.ESPIAO_ENTRE_NOS}\n      getActiveComponent={getActiveComponent}\n    />\n  );\n}\n\nexport default SessionEspiaoEntreNos;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { ArrowLeftOutlined, ArrowRightOutlined, MinusOutlined } from '@ant-design/icons';\nimport { LETTERS } from '../../../utils/constants';\n\nconst getColorModifier = (letter) => {\n  const index = LETTERS.indexOf(letter);\n  return Math.abs(index) % 4;\n};\n\nfunction Card({ left, right, className, setNeedle }) {\n  const leftColor = getColorModifier(left[0]);\n  const rightColor = getColorModifier(right[0]);\n  const cardSideClass = 'o-card__side';\n  const isButton = Boolean(setNeedle);\n\n  const onSetNeedle = (direction) => {\n    if (setNeedle) {\n      if (direction === 1) {\n        setNeedle((n) => Math.min(n + direction, 10));\n      } else {\n        setNeedle((n) => Math.max(n + direction, -10));\n      }\n    }\n  };\n\n  return (\n    <div className={clsx('o-card', className)}>\n      <div\n        className={clsx(\n          cardSideClass,\n          `${cardSideClass}--left`,\n          `${cardSideClass}--L${leftColor}`,\n          isButton && `${cardSideClass}--button`\n        )}\n        onClick={() => onSetNeedle(-1)}\n      >\n        <span className=\"o-card__arrow\">\n          <ArrowLeftOutlined /> <MinusOutlined /> <MinusOutlined />\n        </span>\n        <span className=\"o-card__text\">{left}</span>\n      </div>\n      <div\n        className={clsx(\n          cardSideClass,\n          `${cardSideClass}--right`,\n          `${cardSideClass}--R${rightColor}`,\n          isButton && `${cardSideClass}--button`\n        )}\n        onClick={() => onSetNeedle(1)}\n      >\n        <span className=\"o-card__arrow\">\n          <MinusOutlined /> <MinusOutlined /> <ArrowRightOutlined />\n        </span>\n        <span className=\"o-card__text\">{right}</span>\n      </div>\n    </div>\n  );\n}\n\nCard.propTypes = {\n  left: PropTypes.string.isRequired,\n  right: PropTypes.string.isRequired,\n  className: PropTypes.string,\n};\n\nCard.defaultProps = {\n  cardName: '',\n};\n\nexport default memo(Card);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Components\nimport { Instruction, Title } from '../../shared';\nimport Card from './Card';\n\nfunction CardSelection({ onSendChosenSide, cards }) {\n  return (\n    <div className=\"o-card-selection\">\n      <Title>Selecione a carta que será usada nessa rodada!</Title>\n      <Instruction contained>Escolha uma carta que você acredita que conseguirá criar uma dica.</Instruction>\n      <div className=\"o-card-selection__container\">\n        {cards.map((card) => (\n          <button\n            key={`card-button-${card.id}`}\n            className=\"o-card-selection__button\"\n            onClick={() => onSendChosenSide({ cardId: card.id })}\n          >\n            <Card left={card.left} right={card.right} />\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nCardSelection.propTypes = {\n  onSendChosenSide: PropTypes.func.isRequired,\n  cards: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      left: PropTypes.string,\n      right: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default CardSelection;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport {\n  useIsUserReady,\n  useWhichPlayerIsThe,\n  useIsUserThe,\n  useAPICall,\n  useIsUsersTeamActive,\n} from '../../../hooks';\n// Resources & Utils\nimport { ONDA_TELEPATICA } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport {\n  Instruction,\n  PhaseContainer,\n  RoundAnnouncement,\n  Step,\n  StepSwitcher,\n  ViewIf,\n  WaitingRoom,\n} from '../../shared';\nimport CardSelection from './CardSelection';\nimport { AvatarName } from '../../avatars';\n\nfunction DialSidesPhase({ state, players, info }) {\n  const isUserReady = useIsUserReady(players, state);\n  const [step, setStep] = useState(0);\n  const psychic = useWhichPlayerIsThe('psychic', state, players);\n  const isUserThePsychic = useIsUserThe('psychic', state);\n  const isUsersTeamActive = useIsUsersTeamActive(state, players);\n\n  const onSendChosenSide = useAPICall({\n    apiFunction: ONDA_TELEPATICA.submitSides,\n    actionName: 'submit-side',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: 'Carta selecionada com sucesso',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar enviar a carta',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ONDA_TELEPATICA.DIAL_SIDES}\n      className=\"o-dial-sides-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady]}>\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state.round}\n          onPressButton={() => setStep(1)}\n          players={players}\n          teams={state.teams}\n          time={10}\n        >\n          <ViewIf isVisible={isUsersTeamActive}>\n            <Instruction contained>\n              É a vez do seu time!\n              <br />\n              <AvatarName player={psychic} uppercase size=\"large\" addressUser />\n              será o(a) medium\n            </Instruction>\n          </ViewIf>\n\n          <ViewIf isVisible={!isUsersTeamActive}>\n            <Instruction contained>\n              É a vez do\n              <span className=\"u-word-selection-phase__guesser-name-announcement\">\n                TIME {state.activeTeam}\n              </span>\n              <br />\n              <AvatarName player={psychic} uppercase size=\"large\" addressUser />\n              será o(a) medium\n            </Instruction>\n          </ViewIf>\n\n          <div className=\"u-word-selection-phase__team-points\"></div>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <Step fullWidth>\n          <ViewIf isVisible={isUserThePsychic}>\n            <CardSelection onSendChosenSide={onSendChosenSide} cards={state.cards} />\n          </ViewIf>\n\n          <ViewIf isVisible={!isUserThePsychic}>\n            <WaitingRoom\n              players={players}\n              title={`${psychic.name} está escolhendo uma carta...`}\n              instruction=\"Aguarde enquanto ele(a) decide a carta que será usada nessa rodada.\"\n            />\n          </ViewIf>\n        </Step>\n\n        {/* Step 2 */}\n        <WaitingRoom\n          players={players}\n          title=\"Pronto!\"\n          instruction=\"Vamos aguardar o jogo iniciar a próxima fase.\"\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nDialSidesPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default DialSidesPhase;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Components\nimport Card from './Card';\n\nconst getBracketClass = (number, showNeedle, needle, showTarget, target) => {\n  const baseBracketClass = 'o-dial-numbers';\n  const modifier = number % 2 === 0 ? 'even' : 'odd';\n  return clsx(\n    baseBracketClass,\n    `${baseBracketClass}--${modifier}`,\n    showNeedle && needle === number && `${baseBracketClass}--active`,\n    showTarget && target === number && `${baseBracketClass}--target`\n  );\n};\n\nfunction Dial({\n  card,\n  needle = 0,\n  showNeedle = false,\n  target = 0,\n  showTarget = false,\n  rivalGuess = 0,\n  rivalTeam = 'rival',\n  animate = false,\n  showPoints,\n  setNeedle,\n}) {\n  const baseClass = 'o-dial';\n  const basePointsClass = 'o-dial-points';\n  const baseRivalClass = 'o-dial-rival';\n  const points = Math.abs(needle - target);\n\n  return (\n    <div\n      className={clsx(\n        `${baseClass}`,\n        animate && `${baseClass}--animated`,\n        Boolean(setNeedle) && `${baseClass}--clickable`\n      )}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 670 340\"\n        overflow=\"visible\"\n        className={clsx(`${baseClass}__svg`)}\n      >\n        <defs />\n\n        <path\n          d=\"M669.9 329.9c-1.1-21-6.1-71.9-27.3-127.7C591.2 83.3 472.8 0 335 0h-.2C198.2.1 80.7 81.9 28.7 199.2 5.7 258 1 312.1 0 332c-.1 1.1.1 2.1.5 3 1.1 2.9 3.9 5 7.2 5h654.6c3.3 0 6.1-2.1 7.2-5 .2-.5.3-1.1.4-1.7v-3.4z\"\n          fill=\"#181d44\"\n        />\n\n        {showTarget && (\n          <path\n            id=\"target\"\n            className={clsx(`${baseClass}__target`, animate && `${basePointsClass}--animated-2`)}\n            style={{ transform: `rotate(${target * 8}deg)` }}\n            d=\"M335.2 0l7.1 11.4 13 3.2-8.6 10.3.9 13.4-12.4-5.1-12.5 5.1 1-13.4-8.6-10.3 13-3.2z\"\n          />\n        )}\n\n        <g className=\"o-dial-numbers\">\n          <path\n            id=\"bracket-number-10-r\"\n            className={getBracketClass(10, showNeedle, needle, showTarget, target)}\n            d=\"M341.2 51.9l-3 5.4v-5.1c0-.4.1-.8.4-1.1.3-.3.6-.4 1.1-.4.8 0 1.3.4 1.5 1.2zm-2.5 9c.2.2.6.3 1 .3s.8-.1 1.1-.5c.3-.3.4-.7.4-1.1v-5.1l-3 5.3c.1.6.2.9.5 1.1zm16.8-20.2L335 340 314.5 40.7h41zm-23.8 8.5h-1.5l-3 1.5v1.5h1.5v10.5h3V49.2zm12.5 10.5v-7.5c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v7.5c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.6.9-1.3.9-2.1z\"\n            onClick={() => setNeedle(10)}\n          />\n          <path\n            id=\"bracket-number-9-r\"\n            className={getBracketClass(9, showNeedle, needle, showTarget, target)}\n            d=\"M336 51.1c.3.3.4.7.4 1.1v3c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.8-.1-1.1-.5-.3-.3-.4-.7-.4-1.1v-3c0-.4.1-.8.4-1.1s.6-.5 1.1-.5c.5.1.8.2 1.1.5zm19.5-10.4L335 340 314.5 40.7h41zm-16.1 16.7v-5.2c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v3c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h1.5c.9 0 1.4-.5 1.5-1.5v1.5c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-1.5v1.5h2.2c1.4 0 2.7-.5 3.7-1.5s1.6-2.3 1.6-3.8z\"\n            onClick={() => setNeedle(9)}\n          />\n          <path\n            id=\"bracket-number-8-r\"\n            className={getBracketClass(8, showNeedle, needle, showTarget, target)}\n            d=\"M336.4 58.2v1.5c0 .4-.1.8-.4 1.1s-.7.4-1.1.4c-.4 0-.8-.1-1.1-.4s-.4-.7-.4-1.1v-1.5c0-1 .5-1.5 1.5-1.5s1.5.5 1.5 1.5zm-1.5-7.5c-.4 0-.8.1-1.1.4-.3.3-.4.7-.4 1.1v1.5c0 .4.1.8.4 1.1.3.3.6.4 1.1.4.4 0 .8-.1 1.1-.4.3-.3.4-.6.4-1.1v-1.5c0-.4-.1-.8-.4-1.1-.3-.3-.6-.4-1.1-.4zm20.6-10L335 340 314.5 40.7h41zm-19.1 15.2c1-.1 1.7-.4 2.2-.9.5-.5.7-1.2.7-2.1v-.7c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v.7c0 .9.3 1.6.8 2.1s1.3.8 2.2.9c-1 0-1.7.3-2.2 1-.5.6-.8 1.3-.8 2v.7c0 .7.3 1.3.9 2 .6.7 1.3 1 2.1 1h3c.8 0 1.5-.3 2.1-1 .6-.7.9-1.3.9-2V59c0-.7-.2-1.4-.7-2-.4-.7-1.2-1.1-2.2-1.1z\"\n            onClick={() => setNeedle(8)}\n          />\n          <path\n            id=\"bracket-number-7-r\"\n            className={getBracketClass(7, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm24.2 13l-.8 1.5c-1 2.1-1.5 3.6-1.5 4.5v3h-3v-3c0-1 .5-2.5 1.5-4.5l1.5-3v-1.5h-6v-1.5h9v3l-.7 1.5z\"\n            onClick={() => setNeedle(7)}\n          />\n\n          <path\n            id=\"bracket-number-6-r\"\n            className={getBracketClass(6, showNeedle, needle, showTarget, target)}\n            d=\"M336 55.6c.3.3.4.7.4 1.1v3c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.8-.1-1.1-.5-.3-.3-.4-.7-.4-1.1v-3c0-.4.1-.8.4-1.1.3-.3.6-.4 1.1-.4.5 0 .8.1 1.1.4zm19.5-14.9L335 340 314.5 40.7h41zm-16.1 19v-3c0-.8-.3-1.5-.9-2.1s-1.3-.9-2.1-.9h-1.5c-.4 0-.8.1-1 .4-.3.3-.4.6-.5 1.1v-1.5c0-.8.3-1.5.9-2.1s1.3-.9 2.1-.9h1.5v-1.5h-2.2c-1.4 0-2.7.5-3.7 1.5s-1.6 2.3-1.6 3.7v5.2c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.5.9-1.2.9-2z\"\n            onClick={() => setNeedle(6)}\n          />\n\n          <path\n            id=\"bracket-number-5-r\"\n            className={getBracketClass(5, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm21.9 13c.8 0 1.5.3 2.1.9s.9 1.3.9 2.1v3c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-3c-1.8 0-2.8-1-3-3h1.5c.1 1 .6 1.5 1.5 1.5h1.5c.4 0 .8-.1 1.1-.4s.4-.7.4-1.1v-3c0-.4-.1-.8-.4-1.1-.3-.3-.7-.4-1.1-.4h-4.5v-6h9v1.5h-6v3h3z\"\n            onClick={() => setNeedle(5)}\n          />\n\n          <path\n            id=\"bracket-number-4-r\"\n            className={getBracketClass(4, showNeedle, needle, showTarget, target)}\n            d=\"M330.4 56.7l4.5-5.6v5.6h-4.5zm25.1-16L335 340 314.5 40.7h41zm-16.1 17.5v-1.5h-1.5v-7.5h-3l-6 7.5v1.5h6v4.5h3v-4.5h1.5z\"\n            onClick={() => setNeedle(4)}\n          />\n\n          <path\n            id=\"bracket-number-3-r\"\n            className={getBracketClass(3, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm21.9 13c.9 0 1.6.3 2.1 1s.8 1.3.8 2v3c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-3c-1.8 0-2.8-1-3-3h1.5c.1 1 .6 1.5 1.5 1.5h1.5c.4 0 .8-.1 1.1-.4s.4-.7.4-1.1v-3c0-.2-.1-.6-.4-.9s-.6-.6-1.1-.6h-3v-1.5l4.5-3h-6v-1.5h9v1.5l-4.5 3h1.6z\"\n            onClick={() => setNeedle(3)}\n          />\n\n          <path\n            id=\"bracket-number-2-r\"\n            className={getBracketClass(2, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm24.9 20.5v1.5h-9v-1.5c0-1 1-2.4 2.9-4l.2-.2c1.9-1.7 2.9-3 2.9-4v-.7c0-.4-.1-.8-.4-1.1-.3-.3-.7-.4-1.1-.4h-1.5c-.9 0-1.4.5-1.5 1.5h-1.5c.2-2 1.2-3 3-3h3c.8 0 1.5.3 2.1.9.6.6.9 1.3.9 2.1v.7c0 1-1 2.4-2.9 4l-.2.2c-1.9 1.7-2.9 3-2.9 3.9v.1h6z\"\n            onClick={() => setNeedle(2)}\n          />\n          <path\n            id=\"bracket-number-1-r\"\n            className={getBracketClass(1, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm18.9 22V52.2h-1.5v-1.5l3-1.5h1.5v13.5h-3z\"\n            onClick={() => setNeedle(1)}\n          />\n\n          <path\n            id=\"bracket-number-10-l\"\n            className={getBracketClass(-10, showNeedle, needle, showTarget, target)}\n            d=\"M341.2 51.9l-3 5.4v-5.1c0-.4.1-.8.4-1.1.3-.3.6-.4 1.1-.4.8 0 1.3.4 1.5 1.2zm-2.5 9c.2.2.6.3 1 .3s.8-.1 1.1-.5c.3-.3.4-.7.4-1.1v-5.1l-3 5.3c.1.6.2.9.5 1.1zm16.8-20.2L335 340 314.5 40.7h41zm-23.8 8.5h-1.5l-3 1.5v1.5h1.5v10.5h3V49.2zm12.5 10.5v-7.5c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v7.5c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.6.9-1.3.9-2.1z\"\n            onClick={() => setNeedle(-10)}\n          />\n          <path\n            id=\"bracket-number-9-l\"\n            className={getBracketClass(-9, showNeedle, needle, showTarget, target)}\n            d=\"M336 51.1c.3.3.4.7.4 1.1v3c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.8-.1-1.1-.5-.3-.3-.4-.7-.4-1.1v-3c0-.4.1-.8.4-1.1s.6-.5 1.1-.5c.5.1.8.2 1.1.5zm19.5-10.4L335 340 314.5 40.7h41zm-16.1 16.7v-5.2c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v3c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h1.5c.9 0 1.4-.5 1.5-1.5v1.5c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-1.5v1.5h2.2c1.4 0 2.7-.5 3.7-1.5s1.6-2.3 1.6-3.8z\"\n            onClick={() => setNeedle(-9)}\n          />\n          <path\n            id=\"bracket-number-8-l\"\n            className={getBracketClass(-8, showNeedle, needle, showTarget, target)}\n            d=\"M336.4 58.2v1.5c0 .4-.1.8-.4 1.1s-.7.4-1.1.4c-.4 0-.8-.1-1.1-.4s-.4-.7-.4-1.1v-1.5c0-1 .5-1.5 1.5-1.5s1.5.5 1.5 1.5zm-1.5-7.5c-.4 0-.8.1-1.1.4-.3.3-.4.7-.4 1.1v1.5c0 .4.1.8.4 1.1.3.3.6.4 1.1.4.4 0 .8-.1 1.1-.4.3-.3.4-.6.4-1.1v-1.5c0-.4-.1-.8-.4-1.1-.3-.3-.6-.4-1.1-.4zm20.6-10L335 340 314.5 40.7h41zm-19.1 15.2c1-.1 1.7-.4 2.2-.9.5-.5.7-1.2.7-2.1v-.7c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v.7c0 .9.3 1.6.8 2.1s1.3.8 2.2.9c-1 0-1.7.3-2.2 1-.5.6-.8 1.3-.8 2v.7c0 .7.3 1.3.9 2 .6.7 1.3 1 2.1 1h3c.8 0 1.5-.3 2.1-1 .6-.7.9-1.3.9-2V59c0-.7-.2-1.4-.7-2-.4-.7-1.2-1.1-2.2-1.1z\"\n            onClick={() => setNeedle(-8)}\n          />\n          <path\n            id=\"bracket-number-7-l\"\n            className={getBracketClass(-7, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm24.2 13l-.8 1.5c-1 2.1-1.5 3.6-1.5 4.5v3h-3v-3c0-1 .5-2.5 1.5-4.5l1.5-3v-1.5h-6v-1.5h9v3l-.7 1.5z\"\n            onClick={() => setNeedle(-7)}\n          />\n          <path\n            id=\"bracket-number-6-l\"\n            className={getBracketClass(-6, showNeedle, needle, showTarget, target)}\n            d=\"M336 55.6c.3.3.4.7.4 1.1v3c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.8-.1-1.1-.5-.3-.3-.4-.7-.4-1.1v-3c0-.4.1-.8.4-1.1.3-.3.6-.4 1.1-.4.5 0 .8.1 1.1.4zm19.5-14.9L335 340 314.5 40.7h41zm-16.1 19v-3c0-.8-.3-1.5-.9-2.1s-1.3-.9-2.1-.9h-1.5c-.4 0-.8.1-1 .4-.3.3-.4.6-.5 1.1v-1.5c0-.8.3-1.5.9-2.1s1.3-.9 2.1-.9h1.5v-1.5h-2.2c-1.4 0-2.7.5-3.7 1.5s-1.6 2.3-1.6 3.7v5.2c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.5.9-1.2.9-2z\"\n            onClick={() => setNeedle(-6)}\n          />\n          <path\n            id=\"bracket-number-5-l\"\n            className={getBracketClass(-5, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm21.9 13c.8 0 1.5.3 2.1.9s.9 1.3.9 2.1v3c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-3c-1.8 0-2.8-1-3-3h1.5c.1 1 .6 1.5 1.5 1.5h1.5c.4 0 .8-.1 1.1-.4s.4-.7.4-1.1v-3c0-.4-.1-.8-.4-1.1-.3-.3-.7-.4-1.1-.4h-4.5v-6h9v1.5h-6v3h3z\"\n            onClick={() => setNeedle(-5)}\n          />\n          <path\n            id=\"bracket-number-4-l\"\n            className={getBracketClass(-4, showNeedle, needle, showTarget, target)}\n            d=\"M330.4 56.7l4.5-5.6v5.6h-4.5zm25.1-16L335 340 314.5 40.7h41zm-16.1 17.5v-1.5h-1.5v-7.5h-3l-6 7.5v1.5h6v4.5h3v-4.5h1.5z\"\n            onClick={() => setNeedle(-4)}\n          />\n          <path\n            id=\"bracket-number-3-l\"\n            className={getBracketClass(-3, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm21.9 13c.9 0 1.6.3 2.1 1s.8 1.3.8 2v3c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-3c-1.8 0-2.8-1-3-3h1.5c.1 1 .6 1.5 1.5 1.5h1.5c.4 0 .8-.1 1.1-.4s.4-.7.4-1.1v-3c0-.2-.1-.6-.4-.9s-.6-.6-1.1-.6h-3v-1.5l4.5-3h-6v-1.5h9v1.5l-4.5 3h1.6z\"\n            onClick={() => setNeedle(-3)}\n          />\n          <path\n            id=\"bracket-number-2-l\"\n            className={getBracketClass(-2, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm24.9 20.5v1.5h-9v-1.5c0-1 1-2.4 2.9-4l.2-.2c1.9-1.7 2.9-3 2.9-4v-.7c0-.4-.1-.8-.4-1.1-.3-.3-.7-.4-1.1-.4h-1.5c-.9 0-1.4.5-1.5 1.5h-1.5c.2-2 1.2-3 3-3h3c.8 0 1.5.3 2.1.9.6.6.9 1.3.9 2.1v.7c0 1-1 2.4-2.9 4l-.2.2c-1.9 1.7-2.9 3-2.9 3.9v.1h6z\"\n            onClick={() => setNeedle(-2)}\n          />\n          <path\n            id=\"bracket-number-1-l\"\n            className={getBracketClass(-1, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm18.9 22V52.2h-1.5v-1.5l3-1.5h1.5v13.5h-3z\"\n            onClick={() => setNeedle(-1)}\n          />\n\n          <path\n            id=\"bracket-number-0\"\n            className={getBracketClass(0, showNeedle, needle, showTarget, target)}\n            d=\"M333.5 59.9l3-5.3v5.1c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.7-.1-1-.3-.3-.3-.5-.6-.5-1.1zm1.4-9.2c-.4 0-.8.1-1.1.4-.3.3-.4.7-.4 1.1v5.1l3-5.4c-.2-.8-.7-1.2-1.5-1.2zm20.6-10L335 340 314.5 40.7h41zm-16.1 19v-7.5c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v7.5c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.6.9-1.3.9-2.1z\"\n            onClick={() => setNeedle(0)}\n          />\n        </g>\n\n        {showNeedle && (\n          <path\n            id=\"needle\"\n            className={clsx(`${baseClass}__needle`, animate && `${basePointsClass}--animated-1`)}\n            style={{ transform: `rotate(${needle * 8}deg)` }}\n            d=\"M335 340c-.9 0-3.7-.8-3.7-1.8l2-260.6c0-1 .8-1.8 1.7-1.8.9 0 1.7.8 1.7 1.8l2 260.6c0 1-2.8 1.8-3.7 1.8z\"\n          />\n        )}\n\n        {showPoints && (\n          <g className={clsx(`${baseClass}__points`)}>\n            {points === 0 && (\n              <g>\n                <path\n                  fill=\"#29abe2\"\n                  d=\"M335.2 102.7l14 22.5 25.8 6.4-17.1 20.3 1.9 26.5-24.6-10-24.6 10 1.9-26.5-17.1-20.3 25.7-6.4z\"\n                />\n                <path\n                  d=\"M334.9 158.7v-10.1h-13.5v-3.4l13.5-16.9h6.8v16.9h3.4v3.4h-3.4v10.1h-6.8zm0-13.4v-12.7l-10.1 12.7h10.1z\"\n                  fill=\"#fff\"\n                />\n              </g>\n            )}\n\n            {points === 1 && (\n              <g>\n                <path\n                  fill=\"#a45467\"\n                  d=\"M335.2 102.7l14 22.5 25.8 6.4-17.1 20.3 1.9 26.5-24.6-10-24.6 10 1.9-26.5-17.1-20.3 25.7-6.4z\"\n                />\n                <path\n                  d=\"M324.8 130.4H345v3.4l-10.1 6.8h3.4c1.9 0 3.6.7 4.8 2.2 1.3 1.5 1.9 3 1.9 4.5v6.7c0 1.9-.7 3.5-2 4.8-1.3 1.3-2.9 2-4.7 2h-6.8c-4 0-6.2-2.3-6.8-6.8h3.4c.2 2.3 1.3 3.4 3.4 3.4h3.4c.9 0 1.7-.3 2.4-1s1-1.5 1-2.4v-6.7c0-.5-.3-1.2-.9-2.1-.6-.9-1.4-1.3-2.6-1.3h-6.7v-3.4l10.1-6.8h-13.5v-3.3z\"\n                  fill=\"#fff\"\n                />\n              </g>\n            )}\n\n            {points === 2 && (\n              <g className={clsx(`${baseClass}__points`)}>\n                <path\n                  fill=\"#a45467\"\n                  d=\"M335.2 102.7l14 22.5 25.8 6.4-17.1 20.3 1.9 26.5-24.6-10-24.6 10 1.9-26.5-17.1-20.3 25.7-6.4z\"\n                />\n                <path\n                  d=\"M328.2 136.1h-3.4c.5-4.5 2.8-6.8 6.8-6.8h6.8c1.8 0 3.4.7 4.7 2 1.3 1.3 2 2.9 2 4.8v1.7c0 2.3-2.2 5.4-6.5 9.1l-.4.4c-4.3 3.7-6.5 6.7-6.5 8.8v.3H345v3.4h-20.3v-3.4c0-2.4 2.2-5.4 6.6-9.1l.4-.4c4.3-3.7 6.5-6.8 6.5-9.1v-1.7c0-.9-.3-1.7-1-2.4s-1.5-1-2.4-1h-3.4c-1.9 0-3.1 1.2-3.2 3.4z\"\n                  fill=\"#fff\"\n                />\n              </g>\n            )}\n          </g>\n        )}\n\n        {rivalGuess === -1 && (\n          <g className={clsx(`${baseRivalClass} ${baseRivalClass}---1`)}>\n            <path\n              fill=\"#FFFFFF\"\n              d=\"M64.6 14.1c-23.9 0-43.3 14.4-43.3 32.1 0 8.8 4.8 16.8 12.6 22.6-5.3 4.6-12.3 7-19.4 6.6 1.8 1.5 3.7 2.7 5.9 3.7 9 4 19.1 2.2 26.2-3.6 5.5 1.9 11.6 2.9 18 2.9 23.9 0 43.3-14.4 43.3-32.1S88.5 14.1 64.6 14.1z\"\n            />\n            <path\n              fill=\"#f7931e\"\n              d=\"M45.4 49.1c-2.3-1.3-2.3-4.6 0-5.9l13.1-7.6L71.6 28c2.3-1.3 5.1.3 5.1 2.9v30.2c0 2.6-2.8 4.2-5.1 2.9l-13.1-7.6-13.1-7.3z\"\n            />\n            <text x=\"10\" y=\"11\" fill=\"#FFFFFF\" style={{ textAnchor: 'start' }}>\n              O time {rivalTeam} disse que tá mais pra cá!\n            </text>\n          </g>\n        )}\n\n        {rivalGuess === 1 && (\n          <g className={clsx(`${baseRivalClass} ${baseRivalClass}---1`)}>\n            <text x=\"660\" y=\"11\" fill=\"#FFFFFF\" style={{ textAnchor: 'end' }}>\n              O time {rivalTeam} disse que tá mais pra cá!\n            </text>\n            <path\n              fill=\"#FFFFFF\"\n              d=\"M605.4 14.1c23.9 0 43.3 14.4 43.3 32.1 0 8.8-4.8 16.8-12.6 22.6 5.3 4.6 12.3 7 19.4 6.6-1.8 1.5-3.7 2.7-5.9 3.7-9 4-19.1 2.2-26.2-3.6-5.5 1.9-11.6 2.9-18 2.9-23.9 0-43.3-14.4-43.3-32.1s19.4-32.2 43.3-32.2z\"\n            />\n            <path\n              fill=\"#f7931e\"\n              d=\"M624.6 49.1c2.3-1.3 2.3-4.6 0-5.9l-13.1-7.6-13.1-7.6c-2.3-1.3-5.1.3-5.1 2.9v30.2c0 2.6 2.8 4.2 5.1 2.9l13.1-7.6 13.1-7.3z\"\n            />\n          </g>\n        )}\n      </svg>\n      <Card left={card.left} right={card.right} className=\"o-dial__card\" setNeedle={setNeedle} />\n    </div>\n  );\n}\n\nDial.propTypes = {\n  card: PropTypes.shape({\n    id: PropTypes.string,\n    left: PropTypes.string,\n    right: PropTypes.string,\n  }).isRequired,\n  needle: PropTypes.number,\n  showNeedle: PropTypes.bool,\n  target: PropTypes.number,\n  showTarget: PropTypes.bool,\n  showPoints: PropTypes.bool,\n  rivalGuess: PropTypes.number,\n  rivalTeam: PropTypes.string,\n  animate: PropTypes.bool,\n};\n\nDial.defaultProps = {\n  needle: 0,\n  showNeedle: false,\n  target: 0,\n  showTarget: false,\n  showPoints: false,\n  rivalGuess: 0,\n  rivalTeam: 'rival',\n  animate: false,\n};\n\nexport default memo(Dial);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Input, Popover, Space } from 'antd';\nimport { FileUnknownOutlined } from '@ant-design/icons';\n// Components\nimport { Instruction, Title } from '../../shared';\nimport Dial from './Dial';\n\nconst getHint = (card) => {\n  if (card.target === 0) {\n    return 'número 0, bem no centro,';\n  }\n\n  if (card.target < 0) {\n    return `\"${Math.abs(card.target)}\" do lado \"${card.left}\"`;\n  }\n\n  return `\"${card.target}\" do lado \"${card.right}\"`;\n};\n\nfunction Rules() {\n  return (\n    <ul>\n      <li>\n        Use uma única idea. Evite usar \"mas\", \"enquanto\", \"quando\", e também superlativos \"super\", \"muito\"\n      </li>\n      <li>Não invente coisas. Exemplo: 'Nicolas Cage cantando uma música dos Beatles' é inválido.</li>\n      <li>Mantenha-se no assunto da carta. Exemplo: 'Amor' não é uma dica válida para 'Sujo'.</li>\n      <li>Não use números para sugerir a posição do espectro.</li>\n      <li>Não use partes, derivados ou sinônimos das palavras da carta.</li>\n    </ul>\n  );\n}\n\nfunction DialClueWriting({ onSendClue, card }) {\n  const [clue, setClue] = useState('');\n\n  const onEnterInput = (e) => {\n    if (e.key === 'Enter') {\n      onSendClue({ clue });\n    }\n  };\n\n  return (\n    <div className=\"o-dial-clue-writing\">\n      <Title>Escreva uma dica!</Title>\n      <Instruction contained>\n        Escreva uma dica que ajudará seu time a apontar o número {getHint(card)} do medidor de ondas\n        telepáticas.\n        <br />\n        <Popover title=\"Regras\" content={Rules}>\n          <Button type=\"link\" icon={<FileUnknownOutlined />}>\n            Regras\n          </Button>\n        </Popover>\n      </Instruction>\n\n      <Dial card={card} showTarget target={card.target} />\n\n      <Space className=\"container container--center container--transparent\">\n        <Input\n          onChange={(e) => setClue(e.target.value.toUpperCase())}\n          placeholder=\"Digite sua dica aqui\"\n          className=\"uppercase-input\"\n          onKeyPress={onEnterInput}\n        />\n        <Button\n          type=\"primary\"\n          disabled={!Boolean(clue)}\n          onClick={() => {\n            onSendClue({ clue });\n          }}\n        >\n          Enviar dica\n        </Button>\n      </Space>\n    </div>\n  );\n}\n\nDialClueWriting.propTypes = {\n  onSendClue: PropTypes.func.isRequired,\n  card: PropTypes.shape({\n    id: PropTypes.string,\n    left: PropTypes.string,\n    right: PropTypes.string,\n  }).isRequired,\n};\n\nexport default DialClueWriting;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useIsUserReady, useWhichPlayerIsThe, useIsUserThe, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { ONDA_TELEPATICA } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { PhaseContainer, StepSwitcher, Step, ViewIf, WaitingRoom } from '../../shared';\nimport Card from './Card';\nimport DialClueWriting from './DialClueWriting';\n\nfunction DialCluePhase({ state, players, info }) {\n  const isUserReady = useIsUserReady(players, state);\n  const [step, setStep] = useState(0);\n  const psychic = useWhichPlayerIsThe('psychic', state, players);\n  const isUserThePsychic = useIsUserThe('psychic', state);\n\n  const onSendClue = useAPICall({\n    apiFunction: ONDA_TELEPATICA.submitClue,\n    actionName: 'submit-clue',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage: 'Dica submetida com sucesso',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar enviar a dica',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ONDA_TELEPATICA.DIAL_CLUE}\n      className=\"o-dial-clue-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady]}>\n        {/* Step 0 */}\n        <Step>\n          <ViewIf isVisible={isUserThePsychic}>\n            <DialClueWriting card={state.card} onSendClue={onSendClue} />\n          </ViewIf>\n\n          <ViewIf isVisible={!isUserThePsychic}>\n            <WaitingRoom\n              players={players}\n              title={`${psychic.name} está pensando em uma dica...`}\n              instruction=\"Aguarde enquanto ele(a) escreve uma dica para:\"\n            >\n              <div className=\"container container--center\">\n                <Card left={state.card.left} right={state.card.right} />\n              </div>\n            </WaitingRoom>\n          </ViewIf>\n        </Step>\n\n        {/* Step 1 */}\n        <WaitingRoom\n          players={players}\n          title=\"Pronto!\"\n          instruction=\"Vamos aguardar o jogo iniciar a próxima fase.\"\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nDialCluePhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default DialCluePhase;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Popconfirm, Slider } from 'antd';\n// Components\nimport { ButtonContainer, Instruction, Title } from '../../shared';\nimport Dial from './Dial';\nimport { AvatarName } from '../../avatars';\n\nfunction Prompt({ card }) {\n  return (\n    <Instruction contained>\n      Qual número melhor indica <span className=\"o-dial-guess-selection__clue\">{card.clue}</span> na escala de{' '}\n      <strong>\n        {card.left}-{card.right}\n      </strong>\n      ?\n    </Instruction>\n  );\n}\n\nfunction TeamInstructions({ teamController }) {\n  return (\n    <Instruction contained>\n      <ul>\n        <li>\n          Discuta com seu time em qual número do medidor de ondas telepáticas você acha que a dica se melhor\n          encaixa.\n        </li>\n        <li>\n          Todos podem controlar o ponteiro usando a barra abaixo, mas somente{' '}\n          <AvatarName player={teamController} addressUser /> pode apertar o botão para enviar a resposta\n          final.\n        </li>\n      </ul>\n    </Instruction>\n  );\n}\n\nfunction PsychicView({ card, needle, setNeedle }) {\n  return (\n    <div className=\"o-dial-guess-selection\">\n      <Title>Seu time está pensando...</Title>\n      <Prompt card={card} />\n      <Dial card={card} target={card.target} needle={needle} showNeedle showTarget setNeedle={setNeedle} />\n      <Instruction contained>Pokerface e bico fechado!</Instruction>\n    </div>\n  );\n}\n\nfunction ControllerView({ activeTeam, card, needle, onSendGuess, setNeedle, teamController }) {\n  return (\n    <div className=\"o-dial-guess-selection\">\n      <Title>Hora de brilhar, Time {activeTeam}!</Title>\n      <Prompt card={card} />\n      <Dial\n        card={card}\n        target={card.target}\n        needle={needle}\n        showNeedle\n        showTarget={false}\n        setNeedle={setNeedle}\n      />\n      <Slider defaultValue={0} min={-10} max={10} onChange={setNeedle} value={needle} />\n      <TeamInstructions teamController={teamController} />\n      <ButtonContainer>\n        <Popconfirm\n          title=\"Essa é a sua resposta final?\"\n          onConfirm={() => {\n            onSendGuess({ guess: needle });\n          }}\n          okText=\"Sim\"\n          cancelText=\"Não\"\n        >\n          <Button type=\"primary\">\n            Enviar resposta: {needle < 0 ? card.left : card.right} » {Math.abs(needle)}\n          </Button>\n        </Popconfirm>\n      </ButtonContainer>\n    </div>\n  );\n}\n\nfunction ActiveTeamView({ activeTeam, card, needle, setNeedle, teamController }) {\n  return (\n    <div className=\"o-dial-guess-selection\">\n      <Title>Hora de brilhar, Time {activeTeam}!</Title>\n      <Prompt card={card} />\n      <Dial\n        card={card}\n        target={card.target}\n        needle={needle}\n        showNeedle\n        showTarget={false}\n        setNeedle={setNeedle}\n      />\n      <Slider defaultValue={0} min={-10} max={10} onChange={setNeedle} value={needle} />\n      <TeamInstructions teamController={teamController} />\n    </div>\n  );\n}\n\nfunction OtherTeamView({ activeTeam, card, needle }) {\n  return (\n    <div className=\"o-dial-guess-selection\">\n      <Title>Hora do time {activeTeam} brilhar!</Title>\n      <Prompt card={card} />\n      <Dial card={card} target={card.target} needle={needle} showNeedle={false} showTarget={false} />\n      <Instruction contained>\n        O outro time agora está tentando adivinhar onde no medidor de ondas telepáticas a dica se encaixa\n        melhor. Daqui a pouco, você e seu time terão a change de contra-atacar dizendo se a solução está mais\n        para esquerda ou mais para a direita do que eles escolheram!\n      </Instruction>\n    </div>\n  );\n}\n\nfunction viewDelegator(isUserThePsychic, isUserTheController, isUsersTeamActive) {\n  if (isUserThePsychic) {\n    return PsychicView;\n  }\n  if (isUserTheController) {\n    return ControllerView;\n  }\n  if (isUsersTeamActive) {\n    return ActiveTeamView;\n  }\n  return OtherTeamView;\n}\n\nfunction DialGuessSelection({\n  activeTeam,\n  card,\n  isUsersTeamActive,\n  isUserTheController,\n  isUserThePsychic,\n  onSendGuess,\n  teamController,\n}) {\n  const [needle, setNeedle] = useState(0);\n\n  const ActiveComponent = viewDelegator(isUserThePsychic, isUserTheController, isUsersTeamActive);\n\n  return (\n    <ActiveComponent\n      activeTeam={activeTeam}\n      needle={needle}\n      onSendGuess={onSendGuess}\n      teamController={teamController}\n      card={card}\n      setNeedle={setNeedle}\n    />\n  );\n}\n\nDialGuessSelection.propTypes = {\n  onSendGuess: PropTypes.func.isRequired,\n  card: PropTypes.shape({\n    id: PropTypes.string,\n    left: PropTypes.string,\n    right: PropTypes.string,\n  }).isRequired,\n  activeTeam: PropTypes.oneOf(['A', 'B']),\n  teamController: PropTypes.object,\n  isUserTheController: PropTypes.bool,\n  isMyTeamActive: PropTypes.bool,\n  isUserThePsychic: PropTypes.bool,\n};\n\nexport default DialGuessSelection;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { message } from 'antd';\n// Hooks\nimport {\n  useIsUserReady,\n  useWhichPlayerIsThe,\n  useIsUserThe,\n  useAPICall,\n  useIsUsersTeamActive,\n} from '../../../hooks';\n// Resources & Utils\nimport { ONDA_TELEPATICA } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { PhaseContainer, StepSwitcher, WaitingRoom } from '../../shared';\nimport DialGuessSelection from './DialGuessSelection';\nimport { messageContent } from '../../modals/messageContent';\n\nfunction GuessPhase({ state, players, info }) {\n  const isUserReady = useIsUserReady(players, state);\n  const [step, setStep] = useState(0);\n  const psychic = useWhichPlayerIsThe('psychic', state, players);\n  const controller = useWhichPlayerIsThe('teamController', state, players);\n  const isUserTheController = useIsUserThe('teamController', state);\n  const isUserThePsychic = useIsUserThe('psychic', state);\n  const isUsersTeamActive = useIsUsersTeamActive(state, players);\n\n  const onSendGuess = useAPICall({\n    apiFunction: ONDA_TELEPATICA.submitGuess,\n    actionName: 'submit-guess',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage: 'Chute submetido com sucesso',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar enviar seu chute',\n  });\n\n  useEffect(() => {\n    if (isUserTheController) {\n      message.info(\n        messageContent(\n          'Você controla!',\n          'Move o ponteiro para a posição desejada pelo time e aperte Enviar Resposta',\n          controller.name\n        )\n      );\n    }\n  }, [isUserTheController, controller.name]);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ONDA_TELEPATICA.GUESS}\n      className=\"o-guess-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady]}>\n        {/* Step 0 */}\n        <DialGuessSelection\n          activeTeam={state.activeTeam}\n          psychic={psychic}\n          teamController={controller}\n          isUserTheController={isUserTheController}\n          onSendGuess={onSendGuess}\n          isUsersTeamActive={isUsersTeamActive}\n          card={state.card}\n          isUserThePsychic={isUserThePsychic}\n        />\n\n        {/* Step 1 */}\n        <WaitingRoom\n          players={players}\n          title=\"Pronto!\"\n          instruction=\"Vamos aguardar o jogo iniciar a próxima fase.\"\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nGuessPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default GuessPhase;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button } from 'antd';\nimport { BackwardOutlined, ForwardOutlined } from '@ant-design/icons';\n// Components\nimport { ButtonContainer, Instruction, Title } from '../../shared';\nimport Dial from './Dial';\nimport { AvatarName } from '../../avatars';\n\nfunction Prompt({ card }) {\n  return (\n    <Instruction contained>\n      A solução esta mais pra esquerda ou mais pr direita do número {card.needle} para a dica{' '}\n      <span className=\"o-dial-guess-selection__clue\">{card.clue}</span> na escala de{' '}\n      <strong>\n        {card.left}-{card.right}\n      </strong>\n      ?\n    </Instruction>\n  );\n}\n\nfunction TeamInstructions({ rivalController }) {\n  return (\n    <Instruction contained>\n      Você pode ganhar um ponto se escolher a direção correta.\n      <br />\n      <AvatarName player={rivalController} addressUser /> está no comando para apertar os botões! <br />E\n      então, a solução está mais para a esquerda ou mais para a direita do ponteiro vermelho?\n    </Instruction>\n  );\n}\n\nfunction RivalControllerView({ activeTeam, card, onSendRivalGuess, rivalController }) {\n  return (\n    <div className=\"o-dial-guess-selection\">\n      <Title>Hora de brilhar, Time {activeTeam}!</Title>\n      <Prompt card={card} />\n      <ButtonContainer>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            onSendRivalGuess({ rivalGuess: -1 });\n          }}\n        >\n          <BackwardOutlined /> Mais para a esquerda\n        </Button>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            onSendRivalGuess({ rivalGuess: 1 });\n          }}\n        >\n          Mais para a direita <ForwardOutlined />\n        </Button>\n      </ButtonContainer>\n      <Dial card={card} showTarget={false} target={card.target} showNeedle needle={card.needle} />\n      <TeamInstructions rivalController={rivalController} />\n    </div>\n  );\n}\n\nfunction RivalTeamView({ card, rivalController }) {\n  return (\n    <div className=\"o-dial-guess-selection\">\n      <Title>Hora de contra-atacar!</Title>\n      <Prompt card={card} />\n      <Dial card={card} showTarget={false} target={card.target} showNeedle needle={card.needle} />\n      <TeamInstructions rivalController={rivalController} />\n    </div>\n  );\n}\n\nfunction OtherTeamView({ card, rivalTeam }) {\n  return (\n    <div className=\"o-dial-guess-selection\">\n      <Title>Hora do time {rivalTeam} contra-atacar!</Title>\n      <Prompt card={card} />\n      <Dial card={card} showTarget={false} target={card.target} showNeedle needle={card.needle} />\n      <Instruction contained>\n        Agora, o time oposto tem a chance de ganhar 1 ponto ao tentar adivinhar se a solução está mais para a\n        esquerda ou mais para a direita do que o seu time escolheu.\n      </Instruction>\n    </div>\n  );\n}\n\nfunction viewDelegator(isUserTheRivalController, isUsersTeamRival) {\n  if (isUserTheRivalController) {\n    return RivalControllerView;\n  }\n  if (isUsersTeamRival) {\n    return RivalTeamView;\n  }\n  return OtherTeamView;\n}\n\nfunction DialRivalSelection({\n  rivalTeam,\n  rivalController,\n  isUserTheRivalController,\n  isUsersTeamRival,\n  onSendRivalGuess,\n  card,\n}) {\n  const ActiveComponent = viewDelegator(isUserTheRivalController, isUsersTeamRival);\n\n  return (\n    <ActiveComponent\n      card={card}\n      rivalTeam={rivalTeam}\n      rivalController={rivalController}\n      onSendRivalGuess={onSendRivalGuess}\n    />\n\n    // return (\n    //   <div className=\"o-dial-guess-selection\">\n    //     <Title>Hora do time {rivalTeam} contra-atacar!</Title>\n    //     <Instruction contained>\n    //       A solução esta mais pra esquerda ou mais pr direita do número {card.needle} para a dica{' '}\n    //       <span className=\"o-dial-guess-selection__clue\">{card.clue}</span> na escala de{' '}\n    //       <strong>\n    //         {card.left}-{card.right}\n    //       </strong>\n    //       ?\n    //     </Instruction>\n\n    //     <Dial card={card} showTarget={false} target={card.target} showNeedle needle={card.needle} />\n\n    //     {isUsersTeamRival ? (\n    //       <Instruction contained>\n    //         Você pode ganhar um ponto se escolher a direção correta.\n    //         <br />\n    //         {isUserTheRivalController ? 'VOCÊ ' : <AvatarName player={rivalController} />}está no comando para\n    //         apertar os botões! <br />E então, a solução está mais para a esquerda ou mais para a direita do\n    //         ponteiro vermelho?\n    //       </Instruction>\n    //     ) : (\n    //       <Instruction contained>\n    //         Agora, o time oposto tem a chance de ganhar 1 ponto ao tentar adivinhar se a solução está mais para\n    //         a esquerda ou mais para a direita do que o seu time escolheu.\n    //       </Instruction>\n    //     )}\n\n    //     {isUserTheRivalController && (\n    //       <div className=\"container container--center container--transparent\">\n    //         <Space>\n    //           <Button\n    //             type=\"primary\"\n    //             onClick={() => {\n    //               onSendRivalGuess({ rivalGuess: -1 });\n    //             }}\n    //           >\n    //             <BackwardOutlined /> Mais para a esquerda\n    //           </Button>\n    //           <Button\n    //             type=\"primary\"\n    //             onClick={() => {\n    //               onSendRivalGuess({ rivalGuess: 1 });\n    //             }}\n    //           >\n    //             Mais para a direita <ForwardOutlined />\n    //           </Button>\n    //         </Space>\n    //       </div>\n    //     )}\n    //   </div>\n  );\n}\n\nDialRivalSelection.propTypes = {\n  onSendRivalGuess: PropTypes.func.isRequired,\n  card: PropTypes.shape({\n    id: PropTypes.string,\n    left: PropTypes.string,\n    right: PropTypes.string,\n  }).isRequired,\n  rivalTeam: PropTypes.oneOf(['A', 'B']),\n  rivalController: PropTypes.object,\n  isUserTheRivalController: PropTypes.bool,\n  isUsersTeamRival: PropTypes.bool,\n};\n\nexport default DialRivalSelection;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { message } from 'antd';\n// Hooks\nimport {\n  useIsUserReady,\n  useWhichPlayerIsThe,\n  useIsUserThe,\n  useAPICall,\n  useIsUsersTeamActive,\n} from '../../../hooks';\n// Resources & Utils\nimport { ONDA_TELEPATICA } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\nimport { getOppositeTeam } from '../../../utils';\n// Components\nimport { PhaseContainer, StepSwitcher, WaitingRoom } from '../../shared';\nimport DialRivalSelection from './DialRivalSelection';\nimport { messageContent } from '../../modals/messageContent';\n\nfunction RivalPhase({ state, players, info }) {\n  const isUserReady = useIsUserReady(players, state);\n  const [step, setStep] = useState(0);\n  const rivalController = useWhichPlayerIsThe('rivalController', state, players);\n  const isUserTheRivalController = useIsUserThe('rivalController', state);\n  const isUsersTeamActive = useIsUsersTeamActive(state, players);\n\n  const onSendRivalGuess = useAPICall({\n    apiFunction: ONDA_TELEPATICA.submitRivalGuess,\n    actionName: 'submit-rival-guess',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage: 'Chute submetido com sucesso',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar enviar seu chute',\n  });\n\n  useEffect(() => {\n    if (isUserTheRivalController) {\n      message.info(\n        messageContent('Você controla!', 'Aperte um dos botões após seu time discutir', rivalController.name)\n      );\n    }\n  }, [isUserTheRivalController, rivalController.name]);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ONDA_TELEPATICA.RIVAL_GUESS}\n      className=\"o-guess-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady]}>\n        {/* Step 0 */}\n        <DialRivalSelection\n          rivalTeam={getOppositeTeam(state.teams, state.activeTeam)}\n          rivalController={rivalController}\n          isUserTheRivalController={isUserTheRivalController}\n          onSendRivalGuess={onSendRivalGuess}\n          isUsersTeamRival={!isUsersTeamActive}\n          card={state.card}\n        />\n\n        {/* Step 1 */}\n        <WaitingRoom\n          players={players}\n          title=\"Pronto!\"\n          instruction=\"Vamos aguardar o jogo iniciar a próxima fase.\"\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nRivalPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default RivalPhase;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTimer } from 'react-timer-hook';\n// Design Resources\nimport { Button, message, Popover } from 'antd';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n// Hooks\nimport { useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { GAME_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\nimport { getOppositeTeam, inNSeconds } from '../../../utils';\n// Components\nimport { AdminOnlyButton } from '../../admin/index';\nimport { Instruction, PhaseContainer, Title } from '../../shared';\n\nimport Dial from './Dial';\n\nfunction getResultInstructionLine(pointsBreakdown, team, catchup = false) {\n  const { got, now } = pointsBreakdown;\n\n  if (got === 0) {\n    return `O time ${team} não conseguiu nenhum ponto dessa vez e continua com ${now} pontos.\n      `;\n  }\n\n  if (got === 3) {\n    return `Quase na mosca! O time ${team} ganhou 3 pontos!`;\n  }\n\n  if (got === 4 && catchup) {\n    return `\n        Wow! O time ${team} ganhou ${got} pontos nessa rodada e agora tem ${now} pontos, mas como eles estão indo\n        muito mal vão ter rodada dupla!\n      `;\n  }\n\n  if (got === 4) {\n    return `Na mosca!!! 4 pontos para o time ${team}`;\n  }\n\n  return `\n      O time ${team} ganhou ${got} pontos nessa rodada e agora tá com ${now} pontos.\n    `;\n}\n\nfunction getRivalResultInstructionLine(pointsBreakdown, team) {\n  const { got } = pointsBreakdown;\n\n  if (got === 0) {\n    return `\n        O contra-ataque falhou para o time ${team}.\n      `;\n  }\n\n  return `\n      O time ${team} conseguiu contra atacar e ganhou ${got} ponto!\n    `;\n}\n\nconst getMessageType = (value) => {\n  switch (value) {\n    case 4:\n    case 3:\n      return 'success';\n    case 2:\n      return 'info';\n    default:\n      return 'error';\n  }\n};\n\nfunction RevealPhase({ state, players, info }) {\n  const onGoToNextRound = useAPICall({\n    apiFunction: GAME_API.goToNextPhase,\n    actionName: 'next-phase',\n    successMessage: 'Próxima fase ativada com sucesso',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar ir pra próxima fase',\n  });\n\n  const showMessage = () => {\n    const activeTeamMessageType = getMessageType(state.pointsBreakdown[state.activeTeam].got);\n\n    message[activeTeamMessageType](\n      getResultInstructionLine(\n        state.pointsBreakdown[state.activeTeam],\n        state.activeTeam,\n        state.shouldCatchup\n      ),\n      5\n    );\n    message.info(getRivalResultInstructionLine(state.pointsBreakdown[rivalTeam], rivalTeam), 6);\n  };\n\n  const { seconds } = useTimer({\n    expiryTimestamp: inNSeconds(7),\n    onExpire: showMessage,\n    autoStart: true,\n  });\n\n  const rivalTeam = getOppositeTeam(state.teams, state.activeTeam);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ONDA_TELEPATICA.REVEAL}\n      className=\"o-guess-phase\"\n    >\n      <Title>E o resultado é...</Title>\n      <Dial\n        card={state.card}\n        showNeedle={seconds < 6}\n        needle={state.card.needle}\n        showTarget={seconds < 4}\n        target={state.card.target}\n        showPoints={seconds < 1}\n        points={state?.pointsBreakdown?.[state?.activeTeam].got}\n        rivalGuess={state.card.rival}\n        rivalTeam={rivalTeam}\n        animate\n      />\n\n      {seconds < 1 && (\n        <Instruction contained>\n          <p>\n            {getResultInstructionLine(\n              state.pointsBreakdown[state.activeTeam],\n              state.activeTeam,\n              state.shouldCatchup\n            )}\n          </p>\n          <p>{getRivalResultInstructionLine(state.pointsBreakdown[rivalTeam], rivalTeam)}</p>\n          <Popover title=\"Como a distribuição de pontos functiona?\" content={PointDistributionExplanation}>\n            <Button type=\"link\" icon={<InfoCircleOutlined />}>\n              Como a distribuição de pontos funciona?\n            </Button>\n          </Popover>\n        </Instruction>\n      )}\n\n      <AdminOnlyButton action={() => onGoToNextRound({})} label=\"Ir para próxima rodada ou game over\" />\n    </PhaseContainer>\n  );\n}\n\nfunction PointDistributionExplanation() {\n  return (\n    <div>\n      Distribuição de pontos:\n      <ul>\n        <li>Na mosca: 4 pontos</li>\n        <li>Quase: 3 pontos</li>\n        <li>Dois de distância: 2 pontos</li>\n        <li>Mais de dois distância: 0 ponto</li>\n        <li>Time adversário acertou a direção: 1 ponto</li>\n      </ul>\n    </div>\n  );\n}\n\nRevealPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default RevealPhase;\n","import React from 'react';\n// Hooks\nimport { GAME_COLLECTION, PHASES } from '../../../utils/constants';\n// Components\nimport { GameOver, Session } from '../../shared';\nimport Lobby from '../../lobby/Lobby';\nimport { Rules } from '../../rules';\nimport { PageError } from '../../errors/PageError';\nimport DialSidesPhase from './DialSidesPhase';\nimport DialCluePhase from './DialCluePhase';\nimport GuessPhase from './GuessPhase';\nimport RivalPhase from './RivalPhase';\nimport RevealPhase from './RevealPhase';\n\nfunction SessionOndaTelepatica({ gameId }) {\n  function getActiveComponent(phase) {\n    switch (phase) {\n      case PHASES.ONDA_TELEPATICA.LOBBY:\n        return Lobby;\n      case PHASES.ONDA_TELEPATICA.RULES:\n        return Rules;\n      case PHASES.ONDA_TELEPATICA.DIAL_SIDES:\n        return DialSidesPhase;\n      case PHASES.ONDA_TELEPATICA.DIAL_CLUE:\n        return DialCluePhase;\n      case PHASES.ONDA_TELEPATICA.GUESS:\n        return GuessPhase;\n      case PHASES.ONDA_TELEPATICA.RIVAL_GUESS:\n        return RivalPhase;\n      case PHASES.ONDA_TELEPATICA.REVEAL:\n        return RevealPhase;\n      case PHASES.ONDA_TELEPATICA.GAME_OVER:\n        return GameOver;\n      default:\n        return PageError;\n    }\n  }\n\n  return (\n    <Session\n      gameId={gameId}\n      gameCollection={GAME_COLLECTION.ONDA_TELEPATICA}\n      getActiveComponent={getActiveComponent}\n    />\n  );\n}\n\nexport default SessionOndaTelepatica;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { CheckCircleFilled, CloudUploadOutlined } from '@ant-design/icons';\n// Components\nimport { Instruction, Step, TimedButton, Title } from '../../shared';\nimport { AvatarName } from '../../avatars';\n\nfunction WordSelectionStep({ guesser, onSendSelectedWords, words = [] }) {\n  const [selectedWords, setSelectedWords] = useState({});\n\n  const selectedWordsArray = Object.keys(selectedWords);\n  const noSelection = selectedWordsArray.length === 0;\n\n  const autoSelectRandomWord = () => {\n    const randomSelection = words[0].id;\n    onSendSelectedWords({ votes: [randomSelection] });\n  };\n\n  const onSelectWord = (wordId) => {\n    setSelectedWords((s) => {\n      const newState = { ...s };\n      if (newState[wordId]) {\n        delete newState[wordId];\n      } else {\n        newState[wordId] = true;\n      }\n      return newState;\n    });\n  };\n\n  return (\n    <Step>\n      <Title white>\n        Selecione a Palavra-Secreta para <AvatarName player={guesser} />\n      </Title>\n\n      <Instruction white>\n        A palavra secreta com mais votos será escolhida para essa rodada. Você pode selecionar quantas quiser!\n      </Instruction>\n\n      <ul className=\"u-word-card\">\n        {words.map((word) => {\n          return (\n            <li className=\"u-word-card__word\" key={word.id}>\n              <button className=\"u-word-card__button\" onClick={() => onSelectWord(word.id)}>\n                <span className=\"u-word-card__text\">{word.text}</span>\n                <span className=\"u-word-card__icon\">{selectedWords[word.id] && <CheckCircleFilled />}</span>\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n\n      <TimedButton\n        label=\"Enviar votos\"\n        icon={<CloudUploadOutlined />}\n        type=\"primary\"\n        onClick={() => onSendSelectedWords({ votes: selectedWordsArray })}\n        disabled={noSelection}\n        onExpire={autoSelectRandomWord}\n        duration={15}\n        showTimer={noSelection}\n      />\n    </Step>\n  );\n}\n\nWordSelectionStep.propTypes = {\n  guesser: PropTypes.shape({\n    avatarId: PropTypes.string,\n    name: PropTypes.string,\n  }),\n  onSendSelectedWords: PropTypes.func.isRequired,\n  words: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      text: PropTypes.string,\n    })\n  ),\n};\n\nexport default WordSelectionStep;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Progress } from 'antd';\n// Hooks\nimport { useIsUserReady, useIsUserThe, useWhichPlayerIsThe, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { UE_SO_ISSO_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport {\n  Instruction,\n  PhaseContainer,\n  RoundAnnouncement,\n  Step,\n  StepSwitcher,\n  ViewIf,\n  WaitingRoom,\n} from '../../shared';\nimport WordSelectionStep from './WordSelectionStep';\nimport { AvatarName } from '../../avatars';\n\nfunction WordSelectionPhase({ state, players, info }) {\n  const isUserReady = useIsUserReady(players, state);\n  const guesser = useWhichPlayerIsThe('guesser', state, players);\n  const isUserTheGuesser = useIsUserThe('guesser', state);\n  const nextGuesser = useWhichPlayerIsThe('nextGuesser', state, players);\n  const [step, setStep] = useState(0);\n\n  const onSendSelectedWords = useAPICall({\n    apiFunction: UE_SO_ISSO_API.submitWordSelectionVotes,\n    actionName: 'submit-votes',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: 'Aguarde enquanto os outros participantes votam',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar seus votos',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.UE_SO_ISSO.WORD_SELECTION}\n      className=\"u-word-selection-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady]}>\n        {/* Step 0 */}\n        <RoundAnnouncement round={state.round} onPressButton={() => setStep(1)} time={7}>\n          <Instruction contained>\n            Para essa rodada, <AvatarName player={guesser} addressUser /> será o(a) adivinhador(a) <br />\n            {state?.nextGuesser ? `Próximo adivinhador(a): ${nextGuesser.name}` : 'Essa é a última rodada'}\n          </Instruction>\n          <div className=\"u-word-selection-phase__team-points\">\n            Pontos do Grupo:\n            <br />\n            <Progress\n              percent={state.groupScore ?? 0}\n              status=\"active\"\n              strokeColor={{\n                '0%': '#ff0000',\n                '70%': '#ff0000',\n                '100%': '#87d068',\n              }}\n            />\n          </div>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <Step fullWidth>\n          <ViewIf isVisible={isUserTheGuesser}>\n            <WaitingRoom\n              players={players}\n              title=\"Você é o(a) adivinhador(a)\"\n              instruction=\"Aguarde os outros jogadores decidirem a palavra secreta.\"\n            />\n          </ViewIf>\n\n          <ViewIf isVisible={!isUserTheGuesser}>\n            <WordSelectionStep\n              words={state?.words}\n              onSendSelectedWords={onSendSelectedWords}\n              guesser={guesser}\n            />\n          </ViewIf>\n        </Step>\n\n        {/* Step 2 */}\n        <WaitingRoom players={players} title=\"Pronto!\" instruction=\"Vamos aguardar os outros joadores.\" />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nWordSelectionPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default WordSelectionPhase;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Input } from 'antd';\n\nfunction SuggestionEasel({ id, onChangeInput, value }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 230 60\"\n      overflow=\"visible\"\n      width=\"230\"\n      className=\"u-suggestion-easel\"\n    >\n      <path fill=\"#fff\" d=\"M26.7 59.5L14.1.5h202.7l12.6 59z\" />\n      <path fill=\"#4d4d4d\" d=\"M216.4 1l12.4 58H27.1L14.7 1h201.7m.8-1H13.5l12.8 60H230L217.2 0z\" />\n      <path fill=\"#4d4d4d\" d=\"M24.2 48.3L13.5 0 0 48.3z\" />\n      <foreignObject x=\"32.6\" y=\"13.9\" width=\"185\" height=\"300\">\n        <div xmlns=\"http://www.w3.org/1999/xhtml\">\n          <Input\n            placeholder=\"Escreva dica aqui\"\n            key={id}\n            id={id}\n            value={value}\n            onChange={onChangeInput}\n            className=\"u-suggestion-easel__input\"\n            bordered={false}\n          />\n        </div>\n      </foreignObject>\n      <path opacity=\".2\" d=\"M0 48.3L26.3 60l-2.1-11.7z\" />\n    </svg>\n  );\n}\n\nSuggestionEasel.propTypes = {\n  id: PropTypes.string,\n  onChangeInput: PropTypes.func,\n  value: PropTypes.string,\n};\n\nexport default SuggestionEasel;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Space } from 'antd';\nimport { CloudUploadOutlined } from '@ant-design/icons';\n// Components\nimport { Instruction, Step, Title } from '../../shared';\nimport { UeSoIssoCard as Card } from '../../cards';\nimport { AvatarName } from '../../avatars';\nimport SuggestionEasel from './SuggestionEasel';\n\nfunction SuggestionStep({ guesser, onSendSuggestions, secretWord, suggestionsNumber = 1 }) {\n  const [suggestions, setSuggestions] = useState([]);\n\n  const onChangeInput = (e) => {\n    const { id, value } = e.target;\n    if (id && value?.length > 1) {\n      const indexStr = id.split('-')[1];\n      const index = Number(indexStr) - 1;\n      setSuggestions((s) => {\n        const newState = { ...s };\n        newState[index] = value.toUpperCase().trim();\n        return newState;\n      });\n    }\n  };\n\n  const suggestionsValues = Object.values(suggestions);\n\n  return (\n    <Step>\n      <Title>\n        Escreva uma dica para <AvatarName player={guesser} />\n      </Title>\n\n      <Instruction contained>\n        A dica tem que ser uma palavra única que ajude o adivinhador... adivinhar.\n        <br />\n        É proibido usar derivados, partes da palavra ou traduções em outras línguas.\n        <br />\n        E não seja tão óbvio, já que dicas similares são eliminadas.\n        <br />\n      </Instruction>\n\n      <Card word={secretWord.text} header=\"Palavra Secreta\" />\n\n      {suggestionsNumber > 1 && (\n        <Instruction contained>\n          Já que esse jogo tem menos jogadores, você tem que escrever {suggestionsNumber} sugestões\n        </Instruction>\n      )}\n\n      <Space className=\"u-word-suggestion-step__inputs\">\n        {Array(suggestionsNumber)\n          .fill(1)\n          .map((entry, index) => {\n            const id = `suggestion-${entry + index}`;\n            return <SuggestionEasel key={id} id={id} onChangeInput={onChangeInput} />;\n          })}\n      </Space>\n\n      <Space className=\"u-word-suggestion-step__submit\">\n        <Button\n          icon={<CloudUploadOutlined />}\n          type=\"primary\"\n          onClick={() => onSendSuggestions({ suggestions: suggestionsValues })}\n          disabled={suggestionsValues.length < suggestionsNumber}\n        >\n          {suggestionsNumber > 1 ? 'Enviar sugestões' : 'Enviar sugestão'}\n        </Button>\n      </Space>\n    </Step>\n  );\n}\n\nSuggestionStep.propTypes = {\n  guesser: PropTypes.shape({\n    avatarId: PropTypes.string,\n    name: PropTypes.string,\n  }),\n  onSendSuggestions: PropTypes.func,\n  secretWord: PropTypes.shape({ text: PropTypes.string }),\n  suggestionsNumber: PropTypes.number,\n};\n\nSuggestionStep.defaultProps = {\n  suggestionsNumber: 1,\n};\n\nexport default SuggestionStep;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useIsUserReady, useWhichPlayerIsThe, useIsUserThe, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { UE_SO_ISSO_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { PhaseContainer, Step, StepSwitcher, ViewIf, WaitingRoom } from '../../shared';\nimport SuggestionStep from './SuggestionStep';\n\nfunction SuggestPhase({ state, players, info }) {\n  const isUserReady = useIsUserReady(players, state);\n  const [step, setStep] = useState(0);\n  const guesser = useWhichPlayerIsThe('guesser', state, players);\n  const isUserTheGuesser = useIsUserThe('guesser', state);\n\n  const onSendSuggestions = useAPICall({\n    apiFunction: UE_SO_ISSO_API.submitSuggestions,\n    actionName: 'submit-suggestion',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage:\n      'Sugestão enviada com successo! Aguarde enquanto os outros participantes escrevem suas dicas',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar sua(s) dica(s)',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.UE_SO_ISSO.SUGGEST}\n      className=\"word-selection-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!isUserReady]}>\n        {/* Step 0 */}\n        <Step fullWidth>\n          <ViewIf isVisible={isUserTheGuesser}>\n            <WaitingRoom\n              players={players}\n              title=\"Você é o(a) adivinhador(a)\"\n              instruction=\"Aguarde enquanto os outros jogadores escrevem dicas para você adivinhar.\"\n            />\n          </ViewIf>\n\n          <ViewIf isVisible={!isUserTheGuesser}>\n            <SuggestionStep\n              guesser={guesser}\n              onSendSuggestions={onSendSuggestions}\n              secretWord={state.secretWord}\n              suggestionsNumber={state.suggestionsNumber}\n            />\n          </ViewIf>\n        </Step>\n\n        {/* Step 1 */}\n        <WaitingRoom players={players} title=\"Pronto!\" instruction=\"Vamos aguardar os outros joadores.\" />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nSuggestPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default SuggestPhase;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Avatar as AntAvatar } from 'antd';\nimport { CloseOutlined } from '@ant-design/icons';\n// Utils\nimport { getColorFromIndex } from '../../../utils';\nimport { LETTERS } from '../../../utils/constants';\n// Components\nimport BasicCard from '../../cards/Card';\nimport { Avatar } from '../../avatars';\n\nfunction SuggestionCard({ avatarId, index, invalid, suggestion }) {\n  return (\n    <BasicCard\n      size=\"medium\"\n      color={getColorFromIndex(index)}\n      className={clsx(invalid && 'u-suggestion-card__invalid')}\n      header={LETTERS[index]}\n    >\n      {invalid ? (\n        <AntAvatar size=\"small\" className=\"u-suggestion-card__suggestion-avatar\">\n          <CloseOutlined />\n        </AntAvatar>\n      ) : (\n        <Avatar id={avatarId} size=\"small\" className=\"u-suggestion-card__suggestion-avatar\" />\n      )}\n      {suggestion}\n    </BasicCard>\n  );\n}\n\nSuggestionCard.propTypes = {\n  avatarId: PropTypes.number.isRequired,\n  index: PropTypes.number.isRequired,\n  invalid: PropTypes.bool,\n  suggestion: PropTypes.string.isRequired,\n};\n\nexport default memo(SuggestionCard);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, message, Space } from 'antd';\nimport { CloudUploadOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\n// Hooks\nimport { useGlobalState, useLoading } from '../../../hooks';\n// Utils\nimport { deepCopy } from '../../../utils';\n// Components\nimport { AdminOnlyButton } from '../../admin/index';\nimport { Instruction, Step, Title } from '../../shared';\nimport { UeSoIssoCard as Card } from '../../cards';\nimport { AvatarName } from '../../avatars';\nimport { messageContent } from '../../modals/messageContent';\nimport SuggestionCard from './SuggestionCard';\n\nfunction CompareSuggestionsStep({\n  isUserTheNextGuesser,\n  nextGuesser,\n  onValidateSuggestions,\n  players,\n  secretWord,\n  suggestions,\n}) {\n  const [isLoading] = useLoading();\n  const [myRecommendation, setMyRecommendation] = useState(deepCopy(suggestions));\n  const [isAdmin] = useGlobalState('isAdmin');\n\n  const onSetValidation = (index, suggestionEntry, notAllowed) => {\n    if (notAllowed) return;\n\n    setMyRecommendation((arr) => {\n      const newArr = [...arr];\n      if (newArr[index]) {\n        newArr[index].invalid = !newArr[index].invalid;\n      } else {\n        newArr[index] = {\n          ...suggestionEntry,\n          invalid: true,\n        };\n      }\n      return newArr;\n    });\n  };\n\n  useEffect(() => {\n    if (isUserTheNextGuesser) {\n      message.info(\n        messageContent(\n          'Você controla!',\n          'Clique nas cartas para desclassificá-las, então, pressione \"Confirmar Dicas Válidas\"',\n          nextGuesser.name\n        )\n      );\n    }\n  }, [isUserTheNextGuesser, nextGuesser.name]);\n\n  const suggestionsValues = Object.values(myRecommendation);\n\n  return (\n    <Step>\n      <Title white>Comparem as sugestões</Title>\n      <Card word={secretWord.text} header=\"Palavra Secreta\" />\n      <Instruction contained>\n        Já eliminamos todas as palavras iguais, agora, elimine palavras inválidas ou similares.\n        <br />\n        Lembre-se que são consideradas dicas iguais palavras derividadas, conjugações:{' '}\n        <code>piloto = pilotar = pilotando</code>. Variações como pluralidade, gênero e erros ortográficos\n        também devem ser eliminadas: <code>príncipe = princesa = principes = pryncip</code>.\n        <br />\n        <ExclamationCircleOutlined /> Para não virar bagunça, somente{' '}\n        <AvatarName player={nextGuesser} addressUser />\n        pode clicar nas palavras para eliminá-las ou ativá-las, mas todos podem discutir. Uma dica ser muito\n        ruim não significa que ela seja inválida.\n        <br /> Refiram às palavras por letra, o Adivinhador pode estar ouvindo!\n      </Instruction>\n\n      <Space className=\"u-word-compare-suggestions-step__suggestions\">\n        {suggestions.map((suggestionEntry, index) => {\n          if (!isUserTheNextGuesser && !isAdmin) {\n            return (\n              <div key={`${suggestionEntry.suggestion}-${index}`}>\n                <SuggestionCard\n                  suggestion={suggestionEntry.suggestion}\n                  invalid={suggestionEntry.invalid}\n                  avatarId={players[suggestionEntry.playerId].avatarId}\n                  index={index}\n                />\n              </div>\n            );\n          }\n\n          return (\n            <button\n              key={`${suggestionEntry.suggestion}-${index}`}\n              className=\"u-word-compare-suggestions-step__suggestion-button\"\n              onClick={() => onSetValidation(index, suggestionEntry, suggestionEntry.invalid)}\n            >\n              <SuggestionCard\n                suggestion={suggestionEntry.suggestion}\n                invalid={myRecommendation?.[index]?.invalid ?? suggestionEntry.invalid}\n                avatarId={players[suggestionEntry.playerId].avatarId}\n                index={index}\n              />\n            </button>\n          );\n        })}\n      </Space>\n\n      {isUserTheNextGuesser && (\n        <Space className=\"u-word-compare-suggestions-step__submit\">\n          <Button\n            icon={<CloudUploadOutlined />}\n            type=\"primary\"\n            onClick={() =>\n              onValidateSuggestions({\n                validSuggestions: suggestionsValues.filter((suggestion) => !suggestion.invalid),\n              })\n            }\n            disabled={isLoading}\n          >\n            Confirmar dicas válidas\n          </Button>\n        </Space>\n      )}\n\n      <AdminOnlyButton\n        action={() =>\n          onValidateSuggestions({\n            validSuggestions: suggestionsValues.filter((suggestion) => !suggestion.invalid),\n          })\n        }\n        label=\"Confirmar dicas válidas como Admin\"\n      />\n    </Step>\n  );\n}\n\nCompareSuggestionsStep.propTypes = {\n  isUserTheNextGuesser: PropTypes.bool,\n  nextGuesser: PropTypes.shape({\n    avatarId: PropTypes.string,\n    name: PropTypes.string,\n  }),\n  onValidateSuggestions: PropTypes.func,\n  players: PropTypes.object,\n  secretWord: PropTypes.shape({ text: PropTypes.string }),\n  suggestions: PropTypes.arrayOf(\n    PropTypes.shape({\n      suggestion: PropTypes.string,\n      invalid: PropTypes.bool,\n      playerId: PropTypes.string,\n    })\n  ),\n};\n\nexport default CompareSuggestionsStep;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useIsUserThe, useAPICall, useWhichPlayerIsThe } from '../../../hooks';\n// Resources & Utils\nimport { UE_SO_ISSO_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { PhaseContainer, Step, StepSwitcher, ViewIf, WaitingRoom } from '../../shared';\nimport CompareSuggestionsStep from './CompareSuggestionsStep';\n\nfunction ComparePhase({ state, players, info }) {\n  const [step, setStep] = useState(0);\n  const isUserTheGuesser = useIsUserThe('guesser', state);\n  const isUserTheNextGuesser = useIsUserThe('nextGuesser', state);\n  const nextGuesser = useWhichPlayerIsThe('nextGuesser', state, players);\n\n  const onValidateSuggestions = useAPICall({\n    apiFunction: UE_SO_ISSO_API.submitValidation,\n    actionName: 'validate-suggestions',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage: 'Validação enviada com sucesso!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar a confirmação das sugestões',\n  });\n\n  // TODO: Add modal\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.UE_SO_ISSO.COMPARE}\n      className=\"u-compare-phase\"\n    >\n      <StepSwitcher step={step}>\n        {/* Step 0 */}\n        <Step fullWidth>\n          <ViewIf isVisible={isUserTheGuesser}>\n            <WaitingRoom\n              players={players}\n              title=\"Você é o(a) adivinhador(a)\"\n              instruction=\"Aguarde os outros jogadores selecionarem as dicas válidas.\"\n            />\n          </ViewIf>\n\n          <ViewIf isVisible={!isUserTheGuesser}>\n            <CompareSuggestionsStep\n              nextGuesser={nextGuesser}\n              isUserTheNextGuesser={isUserTheNextGuesser}\n              secretWord={state.secretWord}\n              suggestions={state.suggestions}\n              players={players}\n              onValidateSuggestions={onValidateSuggestions}\n            />\n          </ViewIf>\n        </Step>\n\n        {/* Step 1 */}\n        <WaitingRoom players={players} title=\"Enviando a confirmação de sugestões\" instruction=\"Aguarde...\" />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nComparePhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default ComparePhase;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Input, Space } from 'antd';\nimport { CloudUploadOutlined, MinusOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLoading } from '../../../hooks';\n\nfunction Guess({ onSubmitGuess, onSendGuess }) {\n  const [isLoading] = useLoading();\n  const [guess, setGuess] = useState('');\n\n  const onEnterInput = (e) => {\n    if (e.key === 'Enter') {\n      onSendGuess({ guess });\n    }\n  };\n\n  return (\n    <Space className=\"u-word-guess-phase__suggestions\">\n      <Input\n        placeholder=\"Digite aqui seu chute\"\n        onChange={(e) => setGuess(e.target.value)}\n        onKeyPress={onEnterInput}\n      />\n      <Button\n        icon={<CloudUploadOutlined />}\n        type=\"primary\"\n        onClick={() => onSendGuess({ guess })}\n        disabled={guess.length < 3 || isLoading}\n      >\n        Enviar\n      </Button>\n      <Button\n        icon={<MinusOutlined />}\n        type=\"default\"\n        onClick={() => onSubmitGuess({ guess: 'PASS' })}\n        disabled={isLoading}\n      >\n        Passar a vez...\n      </Button>\n    </Space>\n  );\n}\n\nGuess.propTypes = {\n  onSendGuess: PropTypes.func.isRequired,\n  onSubmitGuess: PropTypes.func,\n};\n\nexport default Guess;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Space } from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\n// Components\nimport { Instruction, Step, Title, ViewIf } from '../../shared';\nimport { UeSoIssoCard as Card } from '../../cards';\nimport { AvatarName } from '../../avatars';\nimport Guess from './Guess';\nimport SuggestionEasel from './SuggestionEasel';\n\nfunction GuessingStep({\n  guesser,\n  isUserTheGuesser,\n  secretWord,\n  onSendGuess,\n  onSubmitGuess,\n  validSuggestions,\n}) {\n  return (\n    <Step>\n      <ViewIf isVisible={isUserTheGuesser}>\n        <Title>\n          Hora de brilhar, <AvatarName player={guesser} />!\n        </Title>\n        <Instruction contained>Você tem uma única change de adivinhar a palavra secreta!</Instruction>\n\n        <Card word={<QuestionCircleOutlined />} header=\"A Palavra Secreta é\" />\n\n        <Instruction contained>Escreva seu chute no campo abaixo</Instruction>\n\n        <Space className=\"u-word-guess-phase__suggestions\">\n          {validSuggestions.map((suggestionEntry, index) => {\n            const id = `${suggestionEntry.suggestion}-${index}`;\n            return <SuggestionEasel key={id} id={id} value={suggestionEntry.suggestion} />;\n          })}\n        </Space>\n\n        <Guess onSubmitGuess={onSubmitGuess} onSendGuess={onSendGuess} />\n      </ViewIf>\n\n      <ViewIf isVisible={!isUserTheGuesser}>\n        <Title>\n          Hora de <AvatarName player={guesser} /> brilhar!\n        </Title>\n        <Instruction contained>\n          {guesser.name} tem uma única change de adivinhar a palavra secreta!\n        </Instruction>\n        <Card word={secretWord.text} header=\"A Palavra Secreta é\" />\n        <Instruction contained>{guesser.name} está pensando...</Instruction>\n\n        <Space className=\"u-word-guess-phase__suggestions\">\n          {validSuggestions.map((suggestionEntry, index) => {\n            const id = `${suggestionEntry.suggestion}-${index}`;\n            return <SuggestionEasel key={id} id={id} value={suggestionEntry.suggestion} />;\n          })}\n        </Space>\n      </ViewIf>\n    </Step>\n  );\n}\n\nGuessingStep.propTypes = {\n  guesser: PropTypes.shape({\n    avatarId: PropTypes.string,\n    name: PropTypes.string,\n  }),\n  isUserTheGuesser: PropTypes.bool,\n  onSendGuess: PropTypes.func,\n  onSubmitGuess: PropTypes.func,\n  secretWord: PropTypes.shape({ text: PropTypes.string }),\n  validSuggestions: PropTypes.arrayOf(\n    PropTypes.shape({\n      suggestion: PropTypes.string,\n    })\n  ),\n};\n\nexport default GuessingStep;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Button, message, Space } from 'antd';\nimport { CheckOutlined, CloseOutlined } from '@ant-design/icons';\n// Components\nimport { Instruction, Step, Title, ViewIf } from '../../shared';\nimport { UeSoIssoCard as Card } from '../../cards';\nimport { AvatarName } from '../../avatars';\nimport { messageContent } from '../../modals/messageContent';\nimport SuggestionEasel from './SuggestionEasel';\n\nfunction GuessVerificationStep({\n  guess,\n  guesser,\n  isAdmin,\n  isLoading,\n  isUserTheGuesser,\n  isUserTheNextGuesser,\n  nextGuesser,\n  secretWord,\n  onConfirmGuess,\n  validSuggestions,\n}) {\n  useEffect(() => {\n    if (isUserTheNextGuesser) {\n      message.info(\n        messageContent('Você controla!', 'Selecione se o adivinhador acertou ou não', nextGuesser.name)\n      );\n    }\n  }, [isUserTheNextGuesser, nextGuesser.name]);\n\n  return (\n    <Step>\n      <ViewIf isVisible={isUserTheGuesser}>\n        <Title>\n          <AvatarName player={guesser} addressUser /> disse \"{guess}\"\n        </Title>\n\n        <Card word={secretWord.text} header=\"A Palavra Secreta é\" />\n\n        <Instruction contained>\n          <AvatarName player={nextGuesser} /> está encarregado(a) de apertar os botões se você acertou ou não.{' '}\n          <br />\n          São 3 pontos se você acertar, -1 se errar, mas você pode passar e não tentar, covarde!.. <br />\n          As dicas foram:\n        </Instruction>\n\n        <Space className=\"u-word-guess-phase__suggestions\">\n          {validSuggestions.map((suggestionEntry, index) => {\n            const id = `${suggestionEntry.suggestion}-${index}`;\n            return <SuggestionEasel key={id} id={id} value={suggestionEntry.suggestion} />;\n          })}\n        </Space>\n      </ViewIf>\n\n      <ViewIf isVisible={!isUserTheGuesser}>\n        <Title>\n          <AvatarName player={guesser} addressUser /> disse \"{guess}\"\n        </Title>\n\n        <Card word={secretWord.text} header=\"A Palavra Secreta é\" />\n\n        <Instruction contained>\n          <AvatarName player={nextGuesser} addressUser /> está encarregado(a) de apertar os botões se você\n          acertou ou não. <br />\n          São 3 pontos se você acertar, -1 se errar, mas você pode passar e não tentar, covarde!.. <br />\n          As dicas são:\n        </Instruction>\n\n        <Space className=\"u-word-guess-phase__suggestions\">\n          {validSuggestions.map((suggestionEntry, index) => {\n            const id = `${suggestionEntry.suggestion}-${index}`;\n            return <SuggestionEasel key={id} id={id} value={suggestionEntry.suggestion} />;\n          })}\n        </Space>\n\n        {(isUserTheNextGuesser || isAdmin) && (\n          <Space className={clsx('u-word-guess-phase__guess-submit', isAdmin && 'admin-container')}>\n            <Button\n              icon={<CheckOutlined />}\n              type=\"primary\"\n              style={{ backgroundColor: 'green' }}\n              onClick={() => onConfirmGuess({ guess: 'CORRECT' })}\n              disabled={isLoading}\n            >\n              Acertou\n            </Button>\n            <Button\n              icon={<CloseOutlined />}\n              type=\"primary\"\n              danger\n              onClick={() => onConfirmGuess({ guess: 'WRONG' })}\n              disabled={isLoading}\n            >\n              Errou\n            </Button>\n          </Space>\n        )}\n      </ViewIf>\n    </Step>\n  );\n}\n\nGuessVerificationStep.propTypes = {\n  guess: PropTypes.string,\n  guesser: PropTypes.shape({\n    avatarId: PropTypes.string,\n    name: PropTypes.string,\n  }),\n  isAdmin: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  isUserTheGuesser: PropTypes.bool,\n  isUserTheNextGuesser: PropTypes.bool,\n  nextGuesser: PropTypes.shape({\n    avatarId: PropTypes.string,\n    name: PropTypes.string,\n  }),\n  onConfirmGuess: PropTypes.func,\n  secretWord: PropTypes.shape({ text: PropTypes.string }),\n  validSuggestions: PropTypes.arrayOf(\n    PropTypes.shape({\n      suggestion: PropTypes.string,\n    })\n  ),\n};\n\nexport default GuessVerificationStep;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useGlobalState, useLoading, useWhichPlayerIsThe, useIsUserThe, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { UE_SO_ISSO_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport { PhaseContainer, StepSwitcher, WaitingRoom } from '../../shared';\nimport GuessingStep from './GuessingStep';\nimport GuessVerificationStep from './GuessVerificationStep';\n\nfunction GuessPhase({ state, players, info }) {\n  const [isLoading] = useLoading();\n  const [isAdmin] = useGlobalState('isAdmin');\n  const [step, setStep] = useState(0);\n  const guesser = useWhichPlayerIsThe('guesser', state, players);\n  const nextGuesser = useWhichPlayerIsThe('nextGuesser', state, players);\n  const isUserTheNextGuesser = useIsUserThe('nextGuesser', state);\n  const isUserTheGuesser = useIsUserThe('guesser', state);\n\n  const onConfirmGuess = useAPICall({\n    apiFunction: UE_SO_ISSO_API.confirmGuess,\n    actionName: 'guess',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: 'Resultado enviado com sucesso!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar o resultado',\n  });\n\n  const onSendGuess = useAPICall({\n    apiFunction: UE_SO_ISSO_API.sendGuess,\n    actionName: 'guess',\n    successMessage: 'Resultado enviado com sucesso!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar o resultado',\n  });\n\n  // If guess is present in the state, move to the next step\n  useEffect(() => {\n    if (state?.guess) {\n      setStep(1);\n    }\n  }, [state]);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.UE_SO_ISSO.GUESS}\n      className=\"u-word-guess-phase\"\n    >\n      <StepSwitcher step={step}>\n        {/* Step 0 */}\n        <GuessingStep\n          guesser={guesser}\n          isUserTheGuesser={isUserTheGuesser}\n          onConfirmGuess={onConfirmGuess}\n          onSendGuess={onSendGuess}\n          validSuggestions={state.validSuggestions}\n          secretWord={state.secretWord}\n          players={players}\n        />\n\n        {/* Step 1 */}\n        <GuessVerificationStep\n          guesser={guesser}\n          guess={state.guess}\n          isUserTheGuesser={isUserTheGuesser}\n          onConfirmGuess={onConfirmGuess}\n          validSuggestions={state.validSuggestions}\n          secretWord={state.secretWord}\n          nextGuesser={nextGuesser}\n          isUserTheNextGuesser={isUserTheNextGuesser}\n          isAdmin={isAdmin}\n          isLoading={isLoading}\n        />\n\n        {/* Step 2 */}\n        <WaitingRoom players={players} title=\"Enviando a confirmação de sugestões\" instruction=\"Aguarde...\" />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nGuessPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default GuessPhase;\n","import React from 'react';\n// Hooks\nimport { GAME_COLLECTION, PHASES } from '../../../utils/constants';\n// Components\nimport { GameOver, Session } from '../../shared';\nimport Lobby from '../../lobby/Lobby';\nimport { Rules } from '../../rules';\nimport { PageError } from '../../errors/PageError';\nimport WordSelectionPhase from './WordSelectionPhase';\nimport SuggestPhase from './SuggestPhase';\nimport ComparePhase from './ComparePhase';\nimport GuessPhase from './GuessPhase';\n\nfunction SessionUeSoIsso({ gameId }) {\n  function getActiveComponent(phase) {\n    switch (phase) {\n      case PHASES.UE_SO_ISSO.LOBBY:\n        return Lobby;\n      case PHASES.UE_SO_ISSO.RULES:\n        return Rules;\n      case PHASES.UE_SO_ISSO.WORD_SELECTION:\n        return WordSelectionPhase;\n      case PHASES.UE_SO_ISSO.SUGGEST:\n        return SuggestPhase;\n      case PHASES.UE_SO_ISSO.COMPARE:\n        return ComparePhase;\n      case PHASES.UE_SO_ISSO.GUESS:\n        return GuessPhase;\n      case PHASES.UE_SO_ISSO.GAME_OVER:\n        return GameOver;\n      default:\n        return PageError;\n    }\n  }\n\n  return (\n    <Session\n      gameId={gameId}\n      gameCollection={GAME_COLLECTION.UE_SO_ISSO}\n      getActiveComponent={getActiveComponent}\n    />\n  );\n}\n\nexport default SessionUeSoIsso;\n","import ArteRuim from './arte-ruim/SessionArteRuim';\nimport ClubeDetetives from './clube-detetives/SessionClubeDetetives';\nimport EspiaoEntreNos from './espiao-entre-nos/SessionEspiaoEntreNos';\nimport OndaTelepatica from './onda-telepatica/SessionOndaTelepatica';\nimport UeSoIsso from './ue-so-isso/SessionUeSoIsso';\n\nconst games = {\n  ArteRuim,\n  ClubeDetetives,\n  EspiaoEntreNos,\n  OndaTelepatica,\n  UeSoIsso,\n};\n\nexport default games;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n// Design Resources\nimport { message, notification } from 'antd';\n// Adapters\nimport { GAME_API } from '../adapters';\n// Hooks\nimport { useIsGameStale, useLoading, useGlobalState } from '../hooks';\n// Utils\nimport { getGameIdFromURL, getGameIdFromLocation, isValidGameId } from '../utils';\nimport { GAME_COLLECTION } from '../utils/constants';\n// Components\nimport { LoadingPage } from './loaders';\nimport { PageError } from './errors/PageError';\nimport GameSessions from './games';\n\nfunction Game() {\n  const history = useHistory();\n  const [, setLoader] = useLoading();\n  const [gameId, setGameId] = useGlobalState('gameId');\n  const [gameName, setGameName] = useGlobalState('gameName');\n  const [gameMeta, setGameMeta] = useGlobalState('gameMeta');\n  const [, setUserId] = useGlobalState('userId');\n  const [, setUsername] = useGlobalState('username');\n  const [, setUserAvatarId] = useGlobalState('userAvatarId');\n\n  const [isPageLoading, setPageLoading] = useState(true);\n  const isGameStale = useIsGameStale(gameMeta?.createdAt);\n\n  // Verify url game code\n  useEffect(() => {\n    const urlGameId = getGameIdFromURL(history);\n    if (isValidGameId(urlGameId)) {\n      setGameId(urlGameId);\n    } else {\n      message.error('Vixi, a id do jogo na barra de endereços tá errada');\n      history.push('/');\n    }\n  }, [history, setGameId, setUsername, setUserAvatarId]);\n\n  // Keeps track of url changes\n  useEffect(() => {\n    return history.listen((location) => {\n      const urlGameId = getGameIdFromLocation(location);\n      if (isValidGameId(urlGameId)) {\n        setGameId(urlGameId);\n        setUserId(null);\n        setUsername('');\n        setUserAvatarId('');\n        message.info('Uma nova id de jogo foi provida');\n      } else {\n        message.error('Vixi, a id do jogo na barra de endereços está errada');\n        history.push('/');\n      }\n    });\n  }, [history, setGameId, setUsername, setUserAvatarId, setUserId]);\n\n  // Load game\n  useEffect(() => {\n    setPageLoading(true);\n    async function loadGameSession() {\n      try {\n        setLoader('load', true);\n        const meta = await GAME_API.loadGame({ gameId });\n        setGameName(meta.data.gameName);\n        setGameMeta(meta.data);\n      } catch (e) {\n        console.error(e);\n        notification.error({\n          message: 'Erro ao carregar o jogo',\n          description: JSON.stringify(e.message),\n        });\n        console.error(e);\n      } finally {\n        setPageLoading(false);\n        setLoader('load', false);\n      }\n    }\n\n    if (gameId) {\n      loadGameSession();\n    }\n  }, [gameId]); // eslint-disable-line\n\n  // Deffer to load screen if any major API call is running\n  if (isPageLoading) {\n    return <LoadingPage />;\n  }\n\n  if (isGameStale) {\n    return (\n      <PageError message=\"Jogo expirado\" description=\"Esse jogo é muito antigo e não pode ser usado mais\" />\n    );\n  }\n\n  if (gameId && gameName) {\n    switch (gameName) {\n      case GAME_COLLECTION.ARTE_RUIM:\n        return <GameSessions.ArteRuim gameId={gameId} />;\n      case GAME_COLLECTION.CLUBE_DETETIVES:\n        return <GameSessions.ClubeDetetives gameId={gameId} />;\n      case GAME_COLLECTION.ESPIAO_ENTRE_NOS:\n        return <GameSessions.EspiaoEntreNos gameId={gameId} />;\n      case GAME_COLLECTION.ONDA_TELEPATICA:\n        return <GameSessions.OndaTelepatica gameId={gameId} />;\n      case GAME_COLLECTION.UE_SO_ISSO:\n        return <GameSessions.UeSoIsso gameId={gameId} />;\n      default:\n        console.warn('Wrong game library provided');\n    }\n  }\n\n  // If switch fails, it's an error\n  return <PageError />;\n}\n\nexport default Game;\n","import { useEffect, useState } from 'react';\n\nexport function useIsGameStale(gameCreatedAt) {\n  const [isGameStale, setGameStale] = useState(false);\n\n  useEffect(() => {\n    setGameStale(Date.now() - 24 * 60 * 60 * 1000 > gameCreatedAt);\n  }, [gameCreatedAt, setGameStale]);\n\n  return isGameStale;\n}\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\n// import { Image, Layout } from 'antd';\nimport gameList from '../resources/games.json';\nimport { Avatar, AvatarEntry } from './avatars';\nimport { GameOver, Instruction, PhaseContainer, RoundAnnouncement, Title } from './shared';\n// Resources\nimport { CheckCircleFilled, CheckCircleOutlined } from '@ant-design/icons';\nimport { Button, Input } from 'antd';\nimport { LETTERS } from '../utils/constants';\nimport Card from './cards/Card';\nimport { getColorFromLetter } from '../utils';\n\nfunction TestingZone() {\n  const info = gameList['U'];\n\n  const players = {\n    Flaviane: {\n      avatarId: '10',\n      name: 'Flaviane',\n      ready: false,\n      score: 0,\n      updatedAt: Date.now(),\n    },\n    Kavis: {\n      avatarId: '11',\n      name: 'Kavis',\n      ready: false,\n      score: 0,\n      updatedAt: Date.now(),\n    },\n    Stephanie: {\n      avatarId: '12',\n      name: 'Stephanie',\n      ready: false,\n      score: 0,\n      updatedAt: Date.now(),\n    },\n  };\n\n  // Mock State\n  const state = {\n    phase: 'WORD_SELECTION',\n    guesser: 'Kavis',\n    playerOrder: ['Flaviane', 'Stephanie', 'Kavis', 'Flaviane', 'Stephanie', 'Kavis'],\n    round: 3,\n    words: [1, 2, 3, 4, 5],\n    // phase: 'GAME_OVER',\n    // winner: {\n    //   name: 'Flaviane',\n    //   avatarId: '15',\n    //   score: 35,\n    // },\n  };\n\n  console.log('==========');\n  console.log({ info });\n  console.table(players);\n  console.log({ state });\n  console.log('==========');\n\n  const guesser = players[state.guesser];\n  console.log(guesser);\n\n  // return <GameOver info={info} state={state} players={players} />;\n  return (\n    <PhaseContainer info={info} phase={state.phase} allowedPhase=\"WORD_SELECTION\" className=\"\" fullScreen>\n      <div className=\"u-word-selection\"></div>\n    </PhaseContainer>\n  );\n}\n\nexport default TestingZone;\n","import React, { useState, useEffect } from 'react';\nimport { HashRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\n\n// Design Resources\nimport { Layout, message } from 'antd';\n// Firebase\nimport { auth } from '../services/firebase';\n// State\nimport { useGlobalState } from '../hooks';\n// Pages\nimport Home from './Home';\nimport Admin from './Admin';\nimport Login from './Login';\nimport Game from './Game';\nimport TestingZone from './TestingZone';\nimport { LoadingBar, LoadingPage } from './loaders';\n\nfunction PrivateRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authenticated === true ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        )\n      }\n    />\n  );\n}\n\nfunction PublicRoute({ component: Component, authenticated, ...rest }) {\n  const fromPath = rest?.location?.state?.from?.pathname ?? '/';\n  return (\n    <Route\n      {...rest}\n      render={(props) => (authenticated === false ? <Component {...props} /> : <Redirect to={fromPath} />)}\n    />\n  );\n}\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useGlobalState('isAuthenticated');\n  const [, setIsAdmin] = useGlobalState('isAdmin');\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoading(false);\n        setIsAuthenticated(true);\n        setIsAdmin(true);\n        message.info('Você foi logado de volta automaticamente.');\n      } else {\n        setIsLoading(false);\n        setIsAuthenticated(false);\n        setIsAdmin(false);\n      }\n    });\n  }, []); // eslint-disable-line\n\n  return (\n    <Layout className=\"app\">\n      <LoadingBar />\n      <Router>\n        {isLoading ? (\n          <LoadingPage />\n        ) : (\n          <Switch>\n            <Route exact path=\"/\" component={Home}></Route>\n            <PrivateRoute path=\"/admin\" authenticated={isAuthenticated} component={Admin} />\n            <PublicRoute path=\"/login\" authenticated={isAuthenticated} component={Login} />\n            <PrivateRoute path=\"/testing-zone\" authenticated={isAuthenticated} component={TestingZone} />\n            <Route path=\"*\" component={Game} />\n          </Switch>\n        )}\n      </Router>\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport './styles/index.css';\n\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}