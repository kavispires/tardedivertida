{"version":3,"file":"static/js/testemunha-ocular.60d44c07.chunk.js","mappings":"gLAAO,SAASA,EAAkBC,GAChC,OACE,iCAAKC,MAAM,6BAA6BC,QAAQ,eAAkBF,GAAlE,eACE,iBACEG,KAAK,UACLC,EAAE,yFAEJ,iBACED,KAAK,UACLC,EAAE,8JAEJ,iBACED,KAAK,UACLC,EAAE,4JAEJ,iBACED,KAAK,UACLC,EAAE,8KAEJ,iBAAMA,EAAE,waACR,iBAAMA,EAAE,gSAER,0BACE,iBACED,KAAK,UACLC,EAAE,kOAEJ,iBAAMA,EAAE,iZACR,6BACEC,cAAc,YACdC,IAAI,KACJC,KAAK,YACLC,YAAY,aACZC,GAAG,cACHC,KAAK,iBAKd,C,kFCvCM,SAASC,EAAQX,GACtB,OACE,iCAAKC,MAAM,6BAA6BC,QAAQ,eAAkBF,GAAlE,eACE,iBACEG,KAAK,UACLC,EAAE,iPAEJ,mBAAQQ,GAAG,UAAUC,GAAG,MAAMC,EAAE,SAASX,KAAK,aAC9C,iBACEC,EAAE,yLACFW,QAAQ,SAEV,mBAAQH,GAAG,UAAUC,GAAG,MAAMC,EAAE,SAASX,KAAK,aAC9C,mBAAQS,GAAG,UAAUC,GAAG,UAAUC,EAAE,SAASX,KAAK,UAClD,iBACEC,EAAE,qKACFW,QAAQ,UAEV,iBACEX,EAAE,00BACFW,QAAQ,SAEV,iBAAMX,EAAE,80DAGb,C,kFCzBM,SAASY,EAAkBhB,GAChC,OACE,iCAAKC,MAAM,6BAA6BC,QAAQ,eAAkBF,GAAlE,eACE,iBAAMG,KAAK,UAAUC,EAAE,uBACvB,iBAAMD,KAAK,UAAUC,EAAE,8BACvB,iBAAMD,KAAK,UAAUC,EAAE,6BACvB,iBAAMD,KAAK,UAAUC,EAAE,kCACvB,iBAAMD,KAAK,UAAUC,EAAE,4DACvB,iBAAMD,KAAK,UAAUC,EAAE,2DACvB,mBAAQQ,GAAG,MAAMC,GAAG,MAAMC,EAAE,MAAMX,KAAK,aACvC,iBAAMA,KAAK,UAAUC,EAAE,yDACvB,iBAAMD,KAAK,UAAUC,EAAE,yBACvB,iBAAMa,MAAM,KAAKC,OAAO,KAAKC,EAAE,MAAMC,EAAE,MAAMjB,KAAK,UAAUkB,GAAG,QAC/D,mBAAQT,GAAG,MAAMC,GAAG,MAAMC,EAAE,KAAKX,KAAK,aACtC,iBAAMA,KAAK,UAAUC,EAAE,2DACvB,iBAAMA,EAAE,oGACR,iBAAMA,EAAE,4UACR,iBAAMA,EAAE,0MACR,iBAAMA,EAAE,gKACR,iBAAMA,EAAE,8eAGb,C,kFCtBM,SAASkB,EAAQtB,GACtB,OACE,gCAAKC,MAAM,6BAA6BC,QAAQ,aAAgBF,GAAhE,cACE,0BACE,eAAGuB,UAAU,iBAAb,WACE,iBAAMpB,KAAK,UAAUC,EAAE,4BAA4BmB,UAAU,8BAC7D,iBAAMpB,KAAK,UAAUC,EAAE,+CACvB,iBAAMD,KAAK,UAAUC,EAAE,+CACvB,iBACED,KAAK,UACLC,EAAE,6FAEJ,iBACED,KAAK,SACLC,EAAE,qHAEJ,iBACED,KAAK,UACLC,EAAE,uHAEJ,iBACED,KAAK,SACLC,EAAE,kHAEJ,iBAAMD,KAAK,UAAUC,EAAE,yEACvB,iBAAMD,KAAK,SAASC,EAAE,yEACtB,iBACED,KAAK,UACLC,EAAE,8FAEJ,iBACED,KAAK,UACLC,EAAE,8EAEJ,iBACED,KAAK,UACLC,EAAE,4EAEJ,iBAAMD,KAAK,SAASC,EAAE,0EACtB,iBACED,KAAK,UACLC,EAAE,kFAEJ,iBACED,KAAK,UACLC,EAAE,0EAEJ,iBAAMD,KAAK,UAAUC,EAAE,kDACvB,iBACED,KAAK,UACLC,EAAE,iCACFmB,UAAU,+BAEZ,iBACEpB,KAAK,UACLC,EAAE,iFAEJ,iBACED,KAAK,UACLC,EAAE,wFAGN,eAAGD,KAAK,OAAR,WACE,iBAAMC,EAAE,+9CACR,iBAAMA,EAAE,qKAKjB,C,iFCrEM,SAASoB,EAAcxB,GAC5B,OACE,iCAAKC,MAAM,6BAA6BC,QAAQ,eAAkBF,GAAlE,eACE,iBACEG,KAAK,OACLC,EAAE,mMAEJ,iBACED,KAAK,UACLC,EAAE,gKAEJ,iBAAMD,KAAK,UAAUC,EAAE,2CACvB,iBAAMD,KAAK,UAAUC,EAAE,6CACvB,mBAAQQ,GAAG,SAASC,GAAG,UAAUC,EAAE,QACnC,iBAAMV,EAAE,+tBACR,iBAAMA,EAAE,2/FAGb,C,gJCTM,SAASqB,EAAT,GAAwC,IAAxBC,EAAuB,EAAvBA,SACrB,OAAO,8BAAGA,GACX,CCDM,SAASC,EAAT,GAA+D,IAAD,IAA5CC,UAAAA,OAA4C,SAAzBF,EAAyB,EAAzBA,SAC1C,OAAOE,GAAY,8BAAGF,KAAe,uBACtC,CCPM,SAASG,EAAT,GAAiE,IAAD,IAA9CC,YAAAA,OAA8C,SAAzBJ,EAAyB,EAAzBA,SAC5C,OAAOI,GAAc,8BAAGJ,EAAS,MAAS,8BAAGA,EAAS,IACvD,CCCM,SAASK,EAAT,GAA2D,IAArCC,EAAoC,EAApCA,MAAON,EAA6B,EAA7BA,SAClC,GAAIM,EAAMC,OAAS,EACjB,MAAMC,MAAM,0CAGd,OAAIF,EAAM,IAAMN,EAAS,GAChBA,EAAS,GAGdM,EAAM,IAAMN,EAAS,GAChBA,EAAS,GAGdM,EAAM,IAAMN,EAAS,GAChBA,EAAS,GAGdM,EAAM,IAAMN,EAAS,GAChBA,EAAS,GAGdM,EAAM,IAAMN,EAAS,GAChBA,EAAS,IAElBS,QAAQC,KAAK,4CACNV,EACR,C,uUC/BM,SAASW,IACd,OACE,SAAC,KAAD,CAAaC,WAAS,EAAtB,UACE,SAAC,KAAD,CACEC,GAAG,6RACHC,GAAG,2PAIV,CAMM,SAASC,EAAT,GACL,OAD4E,EAAxCC,YAElC,SAAC,KAAD,WACE,SAAC,KAAD,CACEH,GAAG,oIACHC,GAAG,uHAIP,SAAC,KAAD,WACE,SAAC,KAAD,CACED,GAAG,kKACHC,GAAG,uJAIV,C,yBCXM,SAASG,EAAT,GAA6F,IAA7DC,EAA4D,EAA5DA,QAASC,EAAmD,EAAnDA,sBAC9CC,EAAAA,EAAAA,KACA,IAAQC,GAAcC,EAAAA,EAAAA,KAAdD,UACR,GAAkBE,EAAAA,EAAAA,IAAe,WAA1BC,GAAP,eAEA,OACE,UAAC,IAAD,YACE,UAAC,KAAD,YACE,SAACC,EAAA,EAAD,CAAYC,MAAM,SAACrD,EAAA,EAAD,IAAuBsD,KAAK,WAC9C,mBACA,SAAC,KAAD,CAAWd,GAAG,qCAAqCC,GAAG,yCAGxD,SAACH,EAAD,KAEA,SAAC,KAAD,CAAaC,WAAS,EAAtB,UACE,SAAC,IAAD,WACGgB,EAAAA,EAAAA,IAAYV,GAASW,KAAI,SAACC,GACzB,OAAIN,GAEA,SAAC,KAAD,CAEEO,SAAUV,EACVW,QAAS,kBAAMb,EAAqB,CAAEc,UAAWH,EAAOI,IAA/C,EAHX,UAKE,SAAC,KAAD,CAAqCJ,OAAQA,EAAQK,UAAQ,EAACC,aAAW,GAAzE,cAAwBN,EAAOI,MALjC,eACeJ,EAAOI,MASnB,SAAC,KAAD,CAAqCJ,OAAQA,EAAQK,UAAQ,EAACC,aAAW,GAAzE,cAAwBN,EAAOI,IACvC,SAIL,UAAC,KAAD,gBAEE,SAAC,KAAD,CAAWrB,GAAG,8CAA2CC,GAAG,oCAF9D,SA7BS,EAmCd,C,eCJD,MA/CA,YAAsE,IAAD,EAApCuB,EAAoC,EAApCA,MAAOnB,EAA6B,EAA7BA,QAASoB,EAAoB,EAApBA,KAC/C,GAA+BC,EAAAA,EAAAA,GAAQ,GAA/BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,aAERtB,ECXD,WACL,IAAQuB,GAAcC,EAAAA,EAAAA,KAAdD,UAEFE,GAAUC,EAAAA,EAAAA,GAAW,CACzBC,YAAaC,EAAAA,GAAAA,aACbC,WAAY,iBACZC,eAAgBP,EAAU,iCAAkC,kCAC5DQ,aAAcR,EACZ,yEACA,6EAIJ,OAAO,SAACS,GACNP,GAAQ,QACNQ,OAAQ,kBACLD,GAEN,CACF,CDR8BE,GAE7B,OACE,SAAC,KAAD,CACEf,KAAMA,EACNgB,MAAK,OAAEjB,QAAF,IAAEA,OAAF,EAAEA,EAAOiB,MACdC,aAAcC,EAAAA,EAAAA,kBAAAA,kBACdC,UAAU,UAJZ,UAME,UAAC,IAAD,CAAcjB,KAAMA,EAAMtB,QAASA,EAAnC,WAEE,SAAC,KAAD,CACEQ,MAAM,SAACgC,EAAA,EAAD,IACNC,OAAO,SAAC,KAAD,CAAW9C,GAAG,SAASC,GAAG,aACjC8C,QAASnB,EACToB,aAAY,OAAExB,QAAF,IAAEA,GAAF,UAAEA,EAAOyB,aAAT,aAAE,EAAcC,QAJ9B,UAME,SAAC,KAAD,WACE,SAAC,KAAD,CACElD,IACE,6QAMFC,IACE,6OAWR,SAACG,EAAD,CAAsBC,QAASA,EAASC,qBAAsBA,QAIrE,E,kEE7CM,SAAS6C,EAAT,GAA+D,IAAnCC,EAAkC,EAAlCA,QACjC,OACE,SAAC,KAAD,CAAiBN,OAAO,SAAC,KAAD,CAAW9C,GAAG,uBAAuBC,GAAG,qBAAhE,UACE,wBACGmD,EAAQpC,KAAI,SAACqC,GAAD,OACX,gBAAsCT,UAAU,mBAAhD,WACE,iBAAMA,UAAU,sBAAhB,SAAuCS,EAAMC,WAC5CD,EAAME,QACL,SAAC,IAAD,CAAST,OAAO,SAAC,KAAD,CAAW9C,GAAG,MAAMC,GAAG,QAAU2C,UAAU,kBAA3D,UACE,SAAChC,EAAA,EAAD,CAAYC,MAAM,SAAC2C,EAAA,EAAD,IAA8B1C,KAAK,aAGvD,SAAC,IAAD,CAASgC,OAAO,SAAC,KAAD,CAAW9C,GAAG,SAAMC,GAAG,OAAS2C,UAAU,kBAA1D,UACE,SAAChC,EAAA,EAAD,CAAYC,MAAM,SAAC4C,EAAA,EAAD,IAA8B3C,KAAK,cAR3D,wBAA0BuC,EAAMhC,IADrB,OAiBpB,C,2DCjBM,SAASqC,EAAT,GAAmG,IAA/EC,EAA8E,EAA9EA,SAAUC,EAAoE,EAApEA,YAAaC,EAAuD,EAAvDA,YAAuD,IAA1CC,mBAAAA,OAA0C,MAArB,GAAqB,EACvG,GAAgChC,EAAAA,EAAAA,KAAxBiC,EAAR,EAAQA,SAAUlC,EAAlB,EAAkBA,UACVrB,GAAcC,EAAAA,EAAAA,KAAdD,UACR,GAAgBwD,EAAAA,EAAAA,KAATtF,GAAP,eAEMuF,EAAYC,KAAKC,MAAMzF,EAAQ,GAErC,OAAImF,GAEA,gBAAKjB,UAAU,mBAAf,SACGe,EAAS3C,KAAI,SAACoD,GACb,IAAMC,EAAgBP,EAAmBQ,SAASF,EAAQ/C,IACpDkD,EAAOH,EAAQG,KAAKR,GAE1B,OACE,SAAC,IAAD,CAEEjB,MAAOjB,EAAU,gCAAD,OACkB0C,EADlB,gDAEsBA,EAFtB,MAIhBC,UAAW,kBAAMX,EAAYO,EAAQ/C,GAA1B,EACXoD,OAAQ5C,EAAU,MAAO,OACzB6C,WAAY7C,EAAU,SAAO,MAC7BX,SAAUmD,GAAiB7D,EAT7B,UAWE,oBACEoC,UAAU,6DACV1B,SAAUmD,GAAiB7D,EAF7B,WAIE,SAAC,KAAD,CACEmE,QAASN,EAAgB,QAAUD,EAAQ/C,GAC3CuB,WAAWgC,EAAAA,EAAAA,GACT,mCACW,OAAXhB,QAAW,IAAXA,OAAA,EAAAA,EAAavC,MAAO+C,EAAQ/C,IAAM,0CAClCgD,GAAiB,6CAEnBJ,UAAWA,EACXY,SAAS,KAETR,IAAiB,gBAAKzB,UAAU,iCAAf,SAAiD2B,QAxBjEH,EAAQ/C,GA4BlB,OAML,gBAAKuB,UAAU,mBAAf,UACE,SAAC,iBAAD,UACGe,EAAS3C,KAAI,SAACoD,GACb,IAAMC,EAAgBP,EAAmBQ,SAASF,EAAQ/C,IAC1D,OACE,iBAAKuB,UAAU,4BAAf,WACE,SAAC,KAAD,CACE+B,QAASN,EAAgB,QAAUD,EAAQ/C,GAC3CyD,eAAgBV,EAAQ/C,GACxBuB,WAAWgC,EAAAA,EAAAA,GACT,mCACW,OAAXhB,QAAW,IAAXA,OAAA,EAAAA,EAAavC,MAAO+C,EAAQ/C,IAAM,2CAEpC4C,UAAWA,KAEXI,IACA,gBAAKzB,UAAU,iCAAf,SAAiDwB,EAAQG,KAAKR,OAXlBK,EAAQ/C,GAe3D,OAIR,CCvEM,SAAS0D,EAAT,GAOuB,IAN5BpB,EAM2B,EAN3BA,SACAqB,EAK2B,EAL3BA,6BACApB,EAI2B,EAJ3BA,YACAqB,EAG2B,EAH3BA,WACAC,EAE2B,EAF3BA,iBACA9B,EAC2B,EAD3BA,QAEA,OACE,UAAC,IAAD,YACE,UAAC,KAAD,YACE,SAACxC,EAAA,EAAD,CAAYC,MAAM,SAACrD,EAAA,EAAD,IAAuBsD,KAAK,WAC9C,mBACA,SAAC,KAAD,CAAWd,IAAI,uDAA2BC,IAAI,6DAEhD,UAAC,KAAD,CAAaF,WAAS,EAAtB,WACE,SAAC,KAAD,CACEC,IACE,iCACE,SAAC,KAAD,CAAYiB,OAAQgE,IADtB,wDAIFhF,IACE,iCACE,SAAC,KAAD,CAAYgB,OAAQgE,IADtB,8CAID,IACFC,IACC,SAAC,KAAD,CACElF,GAAG,gEACHC,GAAG,sDAKT,SAACyD,EAAD,CACEC,SAAUA,EACVC,YAAasB,EAAmBtB,OAAcuB,EAC9CrB,mBAAoBkB,IAGrB5B,EAAQ1D,OAAS,IAAK,SAACyD,EAAD,CAAkBC,QAASA,MAGvD,CC5CM,SAASgC,EAAT,GAOsB,IAN3BC,EAM0B,EAN1BA,UACAC,EAK0B,EAL1BA,iBACA9E,EAI0B,EAJ1BA,UACAmD,EAG0B,EAH1BA,SACAqB,EAE0B,EAF1BA,6BACA5B,EAC0B,EAD1BA,QAEA,OACE,UAAC,IAAD,YACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAWpD,GAAG,yBAAyBC,GAAG,yBAE5C,UAAC,KAAD,CAAaF,WAAS,EAAtB,WACE,SAAC,KAAD,CACEC,GAAG,6HACHC,GAAG,yGACF,QAGL,SAAC,IAAD,CAAO2C,UAAU,kBAAkB2C,MAAM,SAAzC,SACGF,EAAUrE,KAAI,WAAmBwE,GAAW,IAA3BlC,EAA0B,EAA1BA,SAAUjC,EAAgB,EAAhBA,GAC1B,OACE,mBAEEuB,UAAU,4BACVzB,QAAS,kBAAMmE,EAAiB,CAAEG,WAAYpE,GAArC,EACTH,SAAUV,EAJZ,UAME,SAAC,KAAD,CAAMkF,OAAQC,EAAAA,GAAQH,GAAQI,aAAW,EAAChD,UAAU,SAApD,SACGU,KANEjC,EAUV,OAGH,SAACqC,EAAD,CAAUC,SAAUA,EAAUG,mBAAoBkB,IAEjD5B,EAAQ1D,OAAS,IAAK,SAACyD,EAAD,CAAkBC,QAASA,MAGvD,C,eC4BD,MAzEA,YAAuE,IAAD,UAApC5B,EAAoC,EAApCA,MAAOnB,EAA6B,EAA7BA,QAASoB,EAAoB,EAApBA,KACxCjB,GAAcC,EAAAA,EAAAA,KAAdD,UACR,GAA+BkB,EAAAA,EAAAA,GAAQ,GAA/BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,aACd,GAAoCiE,EAAAA,EAAAA,GAAoB,YAAarE,EAAOnB,GAA5E,eAAOyF,EAAP,KAAgBZ,EAAhB,KACA,GAA0CW,EAAAA,EAAAA,GAAoB,eAAgBrE,EAAOnB,GAArF,eAAO4E,EAAP,KAAmBc,EAAnB,KACMT,ELGD,WACL,IAAQzD,GAAcC,EAAAA,EAAAA,KAAdD,UAEFE,GAAUC,EAAAA,EAAAA,GAAW,CACzBC,YAAaC,EAAAA,GAAAA,aACbC,WAAY,kBACZC,eAAgBP,EAAU,+BAAgC,mCAC1DQ,aAAcR,EACZ,iEACA,0EAIJ,OAAO,SAACS,GACNP,GAAQ,QACNQ,OAAQ,mBACLD,GAEN,CACF,CKtB0B0D,GAEnBC,GAAa,iBAACzE,QAAD,IAACA,GAAD,UAACA,EAAOyB,aAAR,aAAC,EAAciD,aAAf,QAAwB,IAAxB,iBAA8B1E,QAA9B,IAA8BA,GAA9B,UAA8BA,EAAOyB,aAArC,aAA8B,EAAcC,eAA5C,QAAuD,GAAK,GAAK,GAEpF,OACE,SAAC,KAAD,CACEzB,KAAMA,EACNgB,MAAK,OAAEjB,QAAF,IAAEA,OAAF,EAAEA,EAAOiB,MACdC,aAAcC,EAAAA,EAAAA,kBAAAA,mBACdC,UAAU,UAJZ,UAME,UAAC,IAAD,CAAcjB,KAAMA,EAAMtB,QAASA,EAAnC,WAEE,SAAC,KAAD,CACEQ,MAAM,SAACpC,EAAA,EAAD,IACNqE,OAAO,SAAC,KAAD,CAAW9C,GAAG,4BAAsBC,GAAG,uBAC9C8C,QAASnB,EACToB,aAAY,OAAExB,QAAF,IAAEA,GAAF,UAAEA,EAAOyB,aAAT,aAAE,EAAcC,QAJ9B,UAME,SAAC,KAAD,WACE,SAAC,KAAD,CACElD,IACE,4EAC0C,SAAC,KAAD,CAAYiB,OAAQ6E,IAD9D,mCAGE,kBAHF,0BAIuBG,EAJvB,0BAIwD,SAAC,KAAD,CAAYhF,OAAQgE,IAJ5E,iCAQFhF,IACE,gEAC8B,SAAC,KAAD,CAAYgB,OAAQ6E,IADlD,oDAGE,kBAHF,6BAI6BG,EAJ7B,mBAIuD,SAAC,KAAD,CAAYhF,OAAQgE,IAJ3E,gCAaR,UAAC,KAAD,CAAQ1F,YAAawG,EAArB,WACE,SAACX,EAAD,CACE5E,UAAWA,EACX8E,iBAAkBA,EAClBN,6BAA8BxD,EAAMwD,6BACpCK,UAAW7D,EAAM6D,UACjB1B,SAAUnC,EAAMmC,SAChBP,QAAS5B,EAAM4B,WAGjB,SAAC2B,EAAD,CACEG,iBAAkBA,EAClBtB,YAAapC,EAAMoC,YACnBoB,6BAA8BxD,EAAMwD,6BACpCC,WAAYA,EACZtB,SAAUnC,EAAMmC,SAChBP,QAAS5B,EAAM4B,iBAM1B,E,sBC9DM,SAAS+C,EAAT,GAUmB,IATxBxC,EASuB,EATvBA,SACAqB,EAQuB,EARvBA,6BACApB,EAOuB,EAPvBA,YACAsB,EAMuB,EANvBA,iBACAY,EAKuB,EALvBA,QACAtF,EAIuB,EAJvBA,UACA4F,EAGuB,EAHvBA,SACA9C,EAEuB,EAFvBA,SACAF,EACuB,EADvBA,QAEQvB,GAAcC,EAAAA,EAAAA,KAAdD,UAER,OACE,UAAC,IAAD,YACE,UAAC,KAAD,CAAOwE,MAAO,EAAGvF,KAAK,SAAtB,WACE,SAAC,KAAD,CACEd,IACE,+CACa,SAAC,KAAD,CAAYiB,OAAQ6E,IADjC,iBAIF7F,IACE,4CACU,SAAC,KAAD,CAAYgB,OAAQ6E,IAD9B,yBAKJ,mBACA,iBAAKlD,UAAU,4BAAf,UACGsC,GACC,UAAC,IAAD,CACE/G,KAAK,OACL2C,KAAK,QACLK,QAAS,kBAAMiF,EAAS,CAAEE,WAAW,GAA5B,EACT1D,UAAU,0EACV1B,UAAWgE,GAAoB1E,EALjC,WAOE,iBAAMoC,UAAU,oCAAhB,UACE,SAAC,KAAD,CAAW5C,GAAG,SAAMC,GAAG,UAEzB,SAAC,IAAD,CACEa,KAAK,QACLD,MAAM,SAAC4C,EAAA,EAAD,IACN8C,MAAO,CAAEC,gBAAiB,eAC1BC,MAAM,eAIV,oBAGF,SAAC,KAAD,CAAMf,OAAQ7D,EAAU,gBAAiB,sBAAuB+D,aAAW,EAAChD,UAAU,SAAtF,SACGU,EAASA,WAEX4B,GACC,UAAC,IAAD,CACE/G,KAAK,OACL2C,KAAK,QACLK,QAAS,kBAAMiF,EAAS,CAAEE,WAAW,GAA5B,EACT1D,UAAU,0EACV1B,UAAWgE,GAAoB1E,EALjC,WAOE,SAAC,IAAD,CACEM,KAAK,QACLD,MAAM,SAAC2C,EAAA,EAAD,IACN+C,MAAO,CAAEC,gBAAiB,eAC1BC,MAAM,YAER,iBAAM7D,UAAU,oCAAhB,UACE,SAAC,KAAD,CAAW5C,GAAG,MAAMC,GAAG,cAI3B,0BAKN,SAACyD,EAAD,CACEC,SAAUA,EACVC,YAAasB,EAAmBtB,OAAcuB,EAC9CrB,mBAAoBkB,IAGrB5B,EAAQ1D,OAAS,IAAK,SAACyD,EAAD,CAAkBC,QAASA,MAGvD,C,eCxCD,OA3DA,YAAiE,IAAD,EAApC5B,EAAoC,EAApCA,MAAOnB,EAA6B,EAA7BA,QAASoB,EAAoB,EAApBA,KAClCjB,GAAcC,EAAAA,EAAAA,KAAdD,UACR,GAA+BkB,EAAAA,EAAAA,GAAQ,GAA/BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,aACd,GAAoCiE,EAAAA,EAAAA,GAAoB,YAAarE,EAAOnB,GAA5E,eAAOyF,EAAP,KAAgBZ,EAAhB,KAEMkB,EP0BD,WACL,IAAQvE,GAAcC,EAAAA,EAAAA,KAAdD,UAEFE,GAAUC,EAAAA,EAAAA,GAAW,CACzBC,YAAaC,EAAAA,GAAAA,aACbC,WAAY,mBACZC,eAAgBP,EAAU,iCAAkC,oCAC5DQ,aAAcR,EACZ,uEACA,8EAIJ,OAAO,SAACS,GACNP,GAAQ,QACNQ,OAAQ,kBACLD,GAEN,CACF,CO7CkBoE,GAEjB,OACE,SAAC,KAAD,CACEjF,KAAMA,EACNgB,MAAK,OAAEjB,QAAF,IAAEA,OAAF,EAAEA,EAAOiB,MACdC,aAAcC,EAAAA,EAAAA,kBAAAA,YACdC,UAAU,UAJZ,UAME,UAAC,IAAD,CAAcjB,KAAMA,EAAMtB,QAASA,EAAnC,WAEE,SAAC,KAAD,CACEQ,MAAM,SAACzC,EAAA,EAAD,IACN0E,OAAO,SAAC,KAAD,CAAW9C,GAAG,iBAAiBC,GAAG,gBACzC8C,QAASnB,EACToB,aAAY,OAAExB,QAAF,IAAEA,GAAF,UAAEA,EAAOyB,aAAT,aAAE,EAAcC,QAJ9B,UAME,SAAC,KAAD,WACE,SAAC,KAAD,CACElD,IACE,wFAEE,mBACA,SAAC,KAAD,CAAYiB,OAAQ6E,IAHtB,gEAMF7F,IACE,qFAEE,mBACA,SAAC,KAAD,CAAYgB,OAAQ6E,IAHtB,kEAWR,SAACK,EAAD,CACExC,SAAUnC,EAAMmC,SAChBqB,6BAA8BxD,EAAMwD,6BACpCpB,YAAapC,EAAMoC,YACnBsB,iBAAkBA,EAClBY,QAASA,EACTtF,UAAWA,EACX4F,SAAUA,EACV9C,SAAU9B,EAAM8B,SAChBF,QAAS5B,EAAM4B,cAKxB,E,YCzCM,SAASuD,GAAT,GAc0B,IAb/BhD,EAa8B,EAb9BA,SACAqB,EAY8B,EAZ9BA,6BACAlB,EAW8B,EAX9BA,mBACAF,EAU8B,EAV9BA,YACAsB,EAS8B,EAT9BA,iBACAa,EAQ8B,EAR9BA,oBACAD,EAO8B,EAP9BA,QACAtF,EAM8B,EAN9BA,UACAoG,EAK8B,EAL9BA,YACAtD,EAI8B,EAJ9BA,SACAgD,EAG8B,EAH9BA,UACAlD,EAE8B,EAF9BA,QACA6B,EAC8B,EAD9BA,WAEQpD,GAAcC,EAAAA,EAAAA,KAAdD,UAKR,OACE,UAAC,IAAD,YACE,UAAC,KAAD,CAAOwE,MAAO,EAAGvF,KAAK,SAAtB,WACE,SAAC,KAAD,CAAYG,OAAQ6E,KACpB,SAAC,KAAD,CAAW7F,GAAG,WAAWD,GAAG,cAAe,IAC1CsG,GACC,SAAC,KAAD,CAAWrG,GAAG,MAAMD,GAAG,SAEvB,+BACE,SAAC,KAAD,CAAWC,GAAG,KAAKD,GAAG,aAEvB,KACH,SAACY,EAAA,EAAD,CACEE,KAAK,QACLD,KAAMyF,GAAY,SAAC9C,EAAA,EAAD,KAA+B,SAACC,EAAA,EAAD,MAChD,KACH,SAAC,KAAD,CAAWxD,GAAG,kBAAkBD,GAAG,sBACnC,mBACA,SAAC,IAAD,CAAO4C,UAAU,kBAAkB2C,MAAM,SAAzC,UACE,SAAC,KAAD,CACEG,OAAQ7D,EAAU,gBAAiB,sBACnCgF,MAAOP,EAAY,QAAU,MAC7B1D,UAAU,SAHZ,SAKGU,EAASA,gBAIfyC,GACC,UAAC,KAAD,CAAahG,WAAS,EAAtB,WACE,SAAC,KAAD,CACEC,GAAG,6CACHC,GAAG,2CAEL,kBACC6G,SAA0B,OAAlBhD,QAAkB,IAAlBA,OAAA,EAAAA,EAAoBpE,SAAUqG,KACrC,SAAC,IAAD,CAAOnD,UAAU,kBAAkB2C,MAAM,SAAzC,UACE,SAAC,IAAD,CAAQpH,KAAK,UAAUgD,QAvCpB,kBAAMyF,EAAY,CAAEG,UAAW,GAAIC,MAAM,GAAzC,EAuCqC9F,SAAUV,EAAlD,UACE,SAAC,KAAD,CACER,GAAG,oDACHC,GAAG,4DAOb,UAAC,KAAD,CAAaF,WAAS,EAAtB,WACE,SAAC,KAAD,CAAYkB,OAAQgE,IAAe,KACnC,SAAC,KAAD,CAAWjF,GAAG,gCAA6BC,GAAG,yCAIlD,SAACyD,EAAD,CACEC,SAAUA,EACVC,YAAasB,EAAmBtB,OAAcuB,EAC9CtB,YAAakC,EA3DQ,SAACgB,GAAD,OAAuBH,EAAY,CAAEG,UAAAA,EAAWC,MAAM,GAAtD,OA2DmC7B,EACxDrB,mBAAkB,0BAAOA,QAAP,IAAOA,EAAAA,EAAsB,KAA7B,eAAsCkB,QAAtC,IAAsCA,EAAAA,EAAgC,OAGzF5B,EAAQ1D,OAAS,IAAK,SAACyD,EAAD,CAAkBC,QAASA,MAGvD,C,gBC/BD,OAtEA,YAA2D,IAAD,EAApC5B,EAAoC,EAApCA,MAAOnB,EAA6B,EAA7BA,QAASoB,EAAoB,EAApBA,KAC5BjB,GAAcC,EAAAA,EAAAA,KAAdD,UACR,GAA+BkB,EAAAA,EAAAA,GAAQ,GAA/BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,aAEd,GAAoCiE,EAAAA,EAAAA,GAAoB,YAAarE,EAAOnB,GAA5E,eAAOyF,EAAP,KAAgBZ,EAAhB,KACA,GAA0CW,EAAAA,EAAAA,GAAoB,eAAgBrE,EAAOnB,GAArF,eAAO4E,EAAP,KAAmBc,EAAnB,KAEMa,ET+CD,WACL,IAAQ/E,GAAcC,EAAAA,EAAAA,KAAdD,UAEFE,GAAUC,EAAAA,EAAAA,GAAW,CACzBC,YAAaC,EAAAA,GAAAA,aACbC,WAAY,oBACZC,eAAgBP,EAAU,iCAAkC,0CAC5DQ,aAAcR,EACZ,qEACA,8EAIJ,OAAO,SAACS,GACNP,GAAQ,QACNQ,OAAQ,qBACLD,GAEN,CACF,CSlEqB2E,GAEpB,OACE,SAAC,KAAD,CACExF,KAAMA,EACNgB,MAAK,OAAEjB,QAAF,IAAEA,OAAF,EAAEA,EAAOiB,MACdC,aAAcC,EAAAA,EAAAA,kBAAAA,MACdC,UAAU,UAJZ,UAME,UAAC,IAAD,CAAcjB,KAAMA,EAAMtB,QAASA,EAAnC,WAEE,SAAC,KAAD,CACEQ,MAAM,SAAC9B,GAAA,EAAD,IACN+D,OAAO,SAAC,KAAD,CAAW9C,GAAG,aAAaC,GAAG,UACrC8C,QAASnB,EACToB,aAAY,OAAExB,QAAF,IAAEA,GAAF,UAAEA,EAAOyB,aAAT,aAAE,EAAcC,QAJ9B,UAME,SAAC,KAAD,WACE,SAAC,KAAD,CACElD,IACE,mPAIE,mBACA,SAAC,KAAD,CAAYiB,OAAQgE,EAAY1D,aAAW,IAL7C,yDASFtB,IACE,mPAIE,mBACA,SAAC,KAAD,CAAYgB,OAAQgE,IALtB,4DAaR,SAAC0B,GAAD,CACEhD,SAAUnC,EAAMmC,SAChBqB,6BAA8BxD,EAAMwD,6BACpCpB,YAAapC,EAAMoC,YACnBsB,iBAAkBA,EAClBY,QAASA,EACTtF,UAAWA,EACXoG,YAAaA,EACbtD,SAAU9B,EAAM8B,SAChBQ,mBAAoBtC,EAAMsC,mBAC1BmB,WAAYA,EACZc,oBAAqBA,EACrBO,UAAW9E,EAAM8E,UACjBlD,QAAS5B,EAAM4B,cAKxB,E,mCC3BD,OA3CA,YAAqD,IAAD,IAA3B5B,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KACtBsC,GAAajC,EAAAA,EAAAA,KAAbiC,SAEF5D,EAA+B,QAAlBqB,EAAM0F,QAEzB,OACE,UAAC,KAAD,CACEzF,KAAMA,EACND,MAAOA,EACP2F,iBAAkBhH,GAAa,SAACiH,GAAA,EAAD,KAAmB,SAACnI,GAAA,EAAD,IAClDoI,qBAAsB,GACtBC,kBACEnH,GACE,SAAC,KAAD,CAAWH,GAAG,aAAaC,GAAG,eAE9B,SAAC,KAAD,CAAWD,GAAG,uBAAuBC,GAAG,mBAG5CsH,qBAAqB,SAACrH,EAAD,CAAqBC,WAAYA,IAZxD,WAcE,UAAC,KAAD,CAAaJ,WAAS,EAAtB,WACE,SAAC,KAAD,CACEC,IAAI,uEAA0BwB,EAAMgG,kBAAhC,QAA8C,IAA9C,aACJvH,IAAI,0EAAgCuB,EAAMgG,kBAAtC,QAAoD,IAApD,gBAEN,mBACA,SAAC,KAAD,CAAWxH,GAAG,mBAAmBC,GAAG,0BAEpC,iBAAK2C,UAAU,4BAAf,WACE,SAAC,KAAD,CACE+B,QAASnD,EAAMoC,YAAYvC,GAC3BuB,UAAU,kCACVqB,UAAW,OAEb,gBAAKrB,UAAU,iCAAf,SAAiDpB,EAAMoC,YAAYW,KAAKR,YAI5E,SAACZ,EAAD,CAAkBC,QAAS5B,EAAM4B,YAGtC,E,SCnCD,SAASqE,GAAmBhF,GAC1B,OAAQA,GACN,KAAKE,EAAAA,EAAAA,QAAAA,MACH,OAAO+E,EAAAA,GACT,KAAK/E,EAAAA,EAAAA,QAAAA,MACH,OAAOgF,EAAAA,GACT,KAAKhF,EAAAA,EAAAA,QAAAA,MACH,OAAOiF,EAAAA,GACT,KAAKjF,EAAAA,EAAAA,kBAAAA,kBACH,OAAOkF,EACT,KAAKlF,EAAAA,EAAAA,kBAAAA,mBACH,OAAOmF,EACT,KAAKnF,EAAAA,EAAAA,kBAAAA,YACH,OAAOoF,GACT,KAAKpF,EAAAA,EAAAA,kBAAAA,MACH,OAAOqF,GACT,KAAKrF,EAAAA,EAAAA,QAAAA,UACH,OAAOsF,GACT,QACE,OAAOC,EAAAA,EAEZ,CAoBD,OAlBA,YAA4D,IAAzBC,EAAwB,EAAxBA,OACjC,OACE,SAAC,KAAD,CACEC,MAAO,CACLC,MAAO,CACLC,aAAcC,EAAAA,GAAAA,QAHpB,UAOE,SAAC,IAAD,CACEJ,OAAQA,EACRK,eAAgBC,EAAAA,GAAAA,kBAChBhB,mBAAoBA,MAI3B,C,6FC/CM,SAAS5B,IAIU,IAHxB6C,EAGuB,uDAHR,eACflH,EAEuB,uDAFF,CAAC,EACtBnB,EACuB,uDADJ,CAAC,EAEpB,GAAiBK,EAAAA,EAAAA,IAAe,UAAhC,eAAOiI,EAAP,KACA,GAAwCC,EAAAA,EAAAA,UAAqB,CAAC,GAA9D,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KASA,OANAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACRJ,EAAY,OAAGrH,QAAH,IAAGA,OAAH,EAAGA,EAAQkH,GAC7BI,EAAe,iBAACzI,QAAD,IAACA,OAAD,EAACA,EAAUwI,UAAX,QAA4B,CAAC,GAC5CG,GAAe,OAALxH,QAAK,IAALA,OAAA,EAAAA,EAAQkH,MAAkBC,EACrC,GAAE,CAACtI,EAASqI,EAAclH,EAAOmH,IAE3B,CAACE,EAAcE,EACvB,C","sources":["components/icons/AnimatedClockIcon.tsx","components/icons/EyeIcon.tsx","components/icons/InvestigationIcon.tsx","components/icons/LawIcon.tsx","components/icons/NewspaperIcon.tsx","components/views/View.tsx","components/views/ViewIf.tsx","components/views/ViewOr.tsx","components/views/ViewSwitch.tsx","games/testemunha-ocular/components/TextBlobs.tsx","games/testemunha-ocular/StepWitnessSelection.tsx","games/testemunha-ocular/PhaseWitnessSelection.tsx","games/testemunha-ocular/utils/api-requests.ts","games/testemunha-ocular/components/QuestionsHistory.tsx","games/testemunha-ocular/components/Suspects.tsx","games/testemunha-ocular/StepQuestionWaiting.tsx","games/testemunha-ocular/StepSelectQuestion.tsx","games/testemunha-ocular/PhaseQuestionSelection.tsx","games/testemunha-ocular/StepQuestioning.tsx","games/testemunha-ocular/PhaseQuestioning.tsx","games/testemunha-ocular/StepSuspectElimination.tsx","games/testemunha-ocular/PhaseTrial.tsx","games/testemunha-ocular/PhaseGameOver.tsx","games/testemunha-ocular/SessionTestemunhaOcular.tsx","hooks/useWhichPlayerIsThe.ts"],"sourcesContent":["export function AnimatedClockIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fbfbfb\"\n        d=\"M464 256c0 114.9-93.1 208-208 208S48 370.9 48 256 141.1 48 256 48s208 93.1 208 208z\"\n      ></path>\n      <path\n        fill=\"#e3effa\"\n        d=\"M464 256c0-114.9-93.2-208-208.1-207.9-67 0-130 32.4-169 86.9 93.4-66.9 223.3-45.4 290.2 47.9 51.9 72.4 51.9 169.8 0 242.3C431.7 386.1 464 323.1 464 256z\"\n      ></path>\n      <path\n        fill=\"#fcc369\"\n        d=\"M256 8c137 0 248 111 248 248S393 504 256 504 8 393 8 256 119 8 256 8zm0 456c114.9 0 208-93.1 208-208S370.9 48 256 48 48 141.1 48 256s93.1 208 208 208z\"\n      ></path>\n      <path\n        fill=\"#ed9b52\"\n        d=\"M256 32C132.3 32 32 132.3 32 256s100.3 224 224 224 224-100.3 224-224S379.7 32 256 32zm0 432c-114.9 0-208-93.1-208-208S141.1 48 256 48s208 93.1 208 208-93.1 208-208 208z\"\n      ></path>\n      <path d=\"M256 496c-132.5-.1-239.9-107.5-240-240 0-4.4-3.6-8-8-8s-8 3.6-8 8c0 141.4 114.6 256 256 256.1 109.6 0 207-69.7 242.4-173.5l-15.1-5.2C450.1 430.7 358.7 496 256 496zm0-496C133.8.1 28.6 86.6 4.8 206.5l15.7 3.1C46.3 79.5 172.6-5 302.6 20.7s214.6 152.1 188.8 282.1c-1 5.1-2.2 10.1-3.5 15.1l15.5 4.1c36.4-136.7-45-277-181.8-313.4C300.2 2.9 278.1 0 256 0zM18 225l-15.9-2c-.7 5.4-1.2 10.9-1.6 16.5l16 1c.3-5.2.8-10.4 1.5-15.5z\"></path>\n      <path d=\"M256 472c119.3 0 216-96.7 216-216S375.3 40 256 40 40 136.7 40 256c.1 119.2 96.8 215.9 216 216zm-8-415.8V88h16V56.2c104.1 4.3 187.5 87.7 191.8 191.8H424v16h31.8c-4.3 104.1-87.7 187.5-191.8 191.8V424h-16v31.8C143.9 451.5 60.5 368.1 56.2 264H88v-16H56.2C60.5 143.9 143.9 60.5 248 56.2z\"></path>\n\n      <g>\n        <path\n          fill=\"#555fa3\"\n          d=\"M273 141.6v114.24a15.55 15.55 0 01-3.68 10.16l-50.24 61.12a14.47 14.47 0 01-20.42 1.25 14.32 14.32 0 01-2.78-3.33 18.75 18.75 0 012.4-22.64l40.8-48.16A7.77 7.77 0 00241 249V141.6a16.07 16.07 0 1132-3 15.44 15.44 0 010 3z\"\n        ></path>\n        <path d=\"M206.6 339.94c.56 0 1.11.06 1.67.06a22.7 22.7 0 0016.95-7.83l50.31-61.05a24 24 0 005.47-15.26V141.6a24 24 0 10-48-3 25.69 25.69 0 000 3v107.47l-40.62 48a26.49 26.49 0 00-3.2 32.38 23.05 23.05 0 0017.42 10.49zm-2.18-32.34l40.8-48.18a16.1 16.1 0 003.78-10.36V141.6a8.14 8.14 0 1116 0v114.26a8 8 0 01-1.82 5.08l-50.05 60.76a6.37 6.37 0 01-5.32 2.28 7.05 7.05 0 01-5.29-3.39 10.81 10.81 0 011.89-13z\"></path>\n        <animateTransform\n          attributeName=\"transform\"\n          dur=\"2s\"\n          from=\"0 256 256\"\n          repeatCount=\"indefinite\"\n          to=\"360 256 256\"\n          type=\"rotate\"\n        ></animateTransform>\n      </g>\n    </svg>\n  );\n}\n","export function EyeIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#D1EFF2\"\n        d=\"M256 130.246c109.138 0 199.851 67.317 242.28 110.438 8.373 8.509 8.373 22.121 0 30.63C455.851 314.435 365.138 381.753 256 381.753S56.15 314.435 13.721 271.314c-8.373-8.509-8.373-22.121 0-30.63C56.15 197.563 146.862 130.246 256 130.246z\"\n      ></path>\n      <circle cx=\"256.001\" cy=\"256\" r=\"125.75\" fill=\"#76B7EB\"></circle>\n      <path\n        d=\"M190.937 148.366c-36.378 22.037-60.69 61.995-60.69 107.633 0 69.452 56.301 125.753 125.753 125.753 29.998 0 57.537-10.509 79.151-28.04-191.149 46.405-204.903-137.001-144.214-205.346z\"\n        opacity=\"0.1\"\n      ></path>\n      <circle cx=\"256.001\" cy=\"256\" r=\"61.605\" fill=\"#38648C\"></circle>\n      <circle cx=\"316.396\" cy=\"223.042\" r=\"29.097\" fill=\"#FFF\"></circle>\n      <path\n        d=\"M18.148 236.272C60.356 210.211 154.601 155.981 256 155.981s195.644 54.23 237.852 80.291C449.751 193.129 361.484 130.246 256 130.246S62.249 193.129 18.148 236.272z\"\n        opacity=\"0.15\"\n      ></path>\n      <path\n        d=\"M333.405 326.463a7.468 7.468 0 01-4.729-1.682l-8.888-7.23c-3.215-2.615-3.7-7.339-1.086-10.554s7.339-3.701 10.553-1.086l8.888 7.23a7.502 7.502 0 01-4.738 13.322zm18.042-33.858a7.517 7.517 0 01-2.191-.328l-10.958-3.341a7.5 7.5 0 01-4.987-9.363 7.5 7.5 0 019.363-4.987l10.958 3.341a7.5 7.5 0 01-2.185 14.678zm-104.623 70.254a7.501 7.501 0 01-7.478-8.192l1.054-11.408a7.501 7.501 0 1114.939 1.38l-1.054 11.408a7.5 7.5 0 01-7.461 6.812zm-87.485-74.575a7.504 7.504 0 01-1.859-14.77l11.098-2.846a7.502 7.502 0 013.726 14.533l-11.098 2.846a7.456 7.456 0 01-1.867.237zm49.63-99.541a7.495 7.495 0 01-6.357-3.508l-6.101-9.696a7.501 7.501 0 1112.699-7.989l6.101 9.696a7.5 7.5 0 01-2.355 10.344 7.452 7.452 0 01-3.987 1.153zm87.92-3.529a7.502 7.502 0 01-6.644-10.976l5.304-10.154a7.502 7.502 0 0113.298 6.945l-5.304 10.154a7.498 7.498 0 01-6.654 4.031z\"\n        opacity=\"0.1\"\n      ></path>\n      <path d=\"M503.627 235.422a345.342 345.342 0 00-7.779-7.654 7.502 7.502 0 00-10.355 10.859 325.772 325.772 0 017.438 7.319c5.455 5.543 5.455 14.563 0 20.108-15.241 15.489-47.758 45.183-94.309 70.033-20.571 10.981-41.244 19.611-61.911 25.868 31.913-24.368 52.544-62.794 52.544-105.954 0-43.075-20.551-81.435-52.356-105.81 54.173 16.484 97.442 45.811 122.612 65.842a7.502 7.502 0 009.343-11.74C430.585 173.838 352.045 122.747 256 122.747c-49.688 0-100.05 13.435-149.688 39.933-48.311 25.788-82.098 56.646-97.938 72.745-11.165 11.346-11.165 29.807 0 41.154 9.64 9.797 25.728 24.859 47.624 40.967a7.476 7.476 0 004.439 1.459 7.502 7.502 0 004.451-13.545c-21.101-15.522-36.565-29.995-45.822-39.403-5.455-5.543-5.455-14.563 0-20.108 15.241-15.489 47.758-45.183 94.309-70.033 20.571-10.981 41.244-19.611 61.911-25.868-31.912 24.365-52.543 62.792-52.543 105.952 0 43.05 20.527 81.391 52.3 105.768-27.488-8.336-54.925-20.766-81.538-37.063a7.501 7.501 0 10-7.836 12.795c55.292 33.858 114.191 51.754 170.329 51.754 49.688 0 100.05-13.435 149.688-39.932 48.311-25.789 82.098-56.647 97.938-72.746 11.167-11.346 11.167-29.807.003-41.154zm-365.879 20.577c0-65.204 53.048-118.251 118.252-118.251s118.252 53.048 118.252 118.251S321.205 374.25 256 374.25s-118.252-53.047-118.252-118.251zm215.243-32.956c0-20.178-16.416-36.594-36.594-36.594-9.754 0-18.622 3.844-25.19 10.087-10.631-6.324-22.668-9.648-35.206-9.648-38.108 0-69.11 31.002-69.11 69.109s31.002 69.109 69.11 69.109c37.237 0 67.672-29.606 69.044-66.513 16.016-3.895 27.946-18.351 27.946-35.55zM256 310.105c-29.834 0-54.107-24.272-54.107-54.106s24.273-54.106 54.107-54.106c9.458 0 18.555 2.407 26.648 7.009a36.39 36.39 0 00-2.846 14.142c0 18 13.067 32.996 30.211 36.026-1.596 28.409-25.209 51.035-54.013 51.035zm60.397-65.471c-11.905 0-21.59-9.685-21.59-21.59s9.685-21.59 21.59-21.59 21.59 9.685 21.59 21.59-9.685 21.59-21.59 21.59z\"></path>\n    </svg>\n  );\n}\n","export function InvestigationIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path fill=\"#d7e6eb\" d=\"M80 24h248v48H80z\"></path>\n      <path fill=\"#ccdce4\" d=\"M112 24l32 32h88l-32-32z\"></path>\n      <path fill=\"#b4c2c9\" d=\"M56 24l32 32h88l-32-32z\"></path>\n      <path fill=\"#ecae49\" d=\"M24 456V24h56l32 32h216v400z\"></path>\n      <path fill=\"#ccdce4\" d=\"M67.136 160.762l233.52-55.2 75.44 319.144-233.52 55.2z\"></path>\n      <path fill=\"#7a8a9a\" d=\"M115.26 190.481l155.68-36.8 14.72 62.272-155.68 36.8z\"></path>\n      <circle cx=\"376\" cy=\"216\" r=\"112\" fill=\"#0093ba\"></circle>\n      <path fill=\"#ecae49\" d=\"M392 352v120a16 16 0 01-16 16 16 16 0 01-16-16V352z\"></path>\n      <path fill=\"#d7a145\" d=\"M360 352h32v24h-32z\"></path>\n      <rect width=\"64\" height=\"32\" x=\"344\" y=\"328\" fill=\"#d08b29\" rx=\"16\"></rect>\n      <circle cx=\"376\" cy=\"216\" r=\"80\" fill=\"#7fcbe5\"></circle>\n      <path fill=\"#d08b29\" d=\"M360 456h32v16a16 16 0 01-16 16 16 16 0 01-16-16v-16z\"></path>\n      <path d=\"M376 128a88 88 0 1088 88 88.1 88.1 0 00-88-88zm0 160a72 72 0 1172-72 72.081 72.081 0 01-72 72z\"></path>\n      <path d=\"M496 216a120 120 0 10-155.851 114.529A23.979 23.979 0 00352 366.624V472a24 24 0 0048 0V366.624a23.979 23.979 0 0011.851-36.1A120.215 120.215 0 00496 216zM384 368v80h-16v-80zm-8 112a8.009 8.009 0 01-8-8v-8h16v8a8.009 8.009 0 01-8 8zm16-144a8 8 0 010 16h-32a8 8 0 010-16zm-16-16a104 104 0 11104-104 104.118 104.118 0 01-104 104z\"></path>\n      <path d=\"M32 32h44.687l29.656 29.657A8 8 0 00112 64h208v24h16V24a8 8 0 00-8-8H24a8 8 0 00-8 8v432a8 8 0 008 8h88v-16H32zm67.314 0h41.372l16 16h-41.373zm64 0h33.372l16 16h-33.372zM320 48h-84.686l-16-16H320z\"></path>\n      <path d=\"M148.527 470.375l-71.75-303.638 225.783-53.353-3.68-15.571-233.568 55.193a8 8 0 00-5.945 9.625L134.8 481.84a8 8 0 009.625 5.945L337.84 442.08l-3.68-15.57z\"></path>\n      <path d=\"M145.118 282.05l15.568-3.68 3.68 15.567-15.568 3.68zm31.134-7.353l69.862-16.514 3.68 15.567-69.862 16.514zm-39.347 42.175l125.206-29.596 3.68 15.567-125.206 29.596zm7.358 31.137l141.843-33.529 3.68 15.567-141.843 33.53zm7.365 31.13l171.248-40.48 3.68 15.567-171.248 40.48zm7.362 31.133l140.112-33.12 3.68 15.567-140.112 33.12zm83.61-258.057l-129.159 30.52a8 8 0 00-5.945 9.625l14.718 62.285a7.987 7.987 0 009.625 5.945l110-25.993-3.68-15.571-102.216 24.154-11.043-46.713 121.373-28.682z\"></path>\n    </svg>\n  );\n}\n","export function LawIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 60 60\" {...props}>\n      <g>\n        <g transform=\"translate(1 1)\">\n          <path fill=\"#624421\" d=\"M27.964 24.95h4v10.02h-4z\" transform=\"rotate(-45 29.96 29.968)\"></path>\n          <path fill=\"#f57c00\" d=\"M23 51v4H3v-4a3 3 0 013-3h14a3 3 0 013 3z\"></path>\n          <path fill=\"#ff9801\" d=\"M20 51v4H3v-4a3 3 0 013-3h11a3 3 0 013 3z\"></path>\n          <path\n            fill=\"#825a2c\"\n            d=\"M32.79 24.3l-8.49 8.49a2 2 0 01-2.83 0l-1.41-1.42 11.31-11.31 1.42 1.41a2 2 0 010 2.83z\"\n          ></path>\n          <path\n            fill=\"sienna\"\n            d=\"M15.11 37.74l-1.42 1.41a1 1 0 01-1.41 0L1 27.84a1 1 0 010-1.42L2.38 25a3 3 0 014.24 0l8.49 8.48a3 3 0 010 4.26z\"\n          ></path>\n          <path\n            fill=\"#783e22\"\n            d=\"M39.15 13.69l-1.41 1.42a3 3 0 01-4.25 0L25 6.62a3 3 0 010-4.24L26.42 1a1 1 0 011.42 0l11.31 11.28a1 1 0 010 1.41z\"\n          ></path>\n          <path\n            fill=\"sienna\"\n            d=\"M37.48 12l-1.42 1.42a3 3 0 01-4.24 0L25 6.62a3 3 0 010-4.24L26.42 1a1 1 0 011.42 0l9.64 9.64a1 1 0 010 1.36z\"\n          ></path>\n          <path fill=\"#783e22\" d=\"M26 55v2a1 1 0 01-1 1H1a1 1 0 01-1-1v-2a2 2 0 012-2h22a2 2 0 012 2z\"></path>\n          <path fill=\"sienna\" d=\"M23 55v2a1 1 0 01-1 1H1a1 1 0 01-1-1v-2a2 2 0 012-2h19a2 2 0 012 2z\"></path>\n          <path\n            fill=\"#f57c00\"\n            d=\"M33.49 17.94L17.94 33.49a2 2 0 01-2.83 0l-6.36-6.36L27.13 8.75l6.36 6.36a2 2 0 010 2.83z\"\n          ></path>\n          <path\n            fill=\"#ff9801\"\n            d=\"M27.13 8.75L8.75 27.13 6.62 25a2 2 0 010-2.83L22.18 6.62a2 2 0 012.83 0z\"\n          ></path>\n          <path\n            fill=\"#783e22\"\n            d=\"M51.88 46.22l-5.66 5.66C32.63 38.29 32.79 38.54 32.79 38.44l5.65-5.65z\"\n          ></path>\n          <path fill=\"sienna\" d=\"M49.7 48.41l-3.48 3.47C32.63 38.29 32.79 38.54 32.79 38.44L36.26 35z\"></path>\n          <path\n            fill=\"#fec108\"\n            d=\"M38.44 32.79l-5.65 5.65L30 35.62a2 2 0 010-2.83L31.75 31l1-1a2 2 0 012.83 0z\"\n          ></path>\n          <path\n            fill=\"#ffdc00\"\n            d=\"M36 34.42L32.38 38 30 35.62a2 2 0 010-2.83L31.75 31a2 2 0 011.43.59z\"\n          ></path>\n          <path fill=\"#707070\" d=\"M54.71 49.05l-5.66 5.66-2.83-2.83 5.66-5.66z\"></path>\n          <path\n            fill=\"#9e9e9e\"\n            d=\"M46.77 49.506h5.18v3.69h-5.18z\"\n            transform=\"rotate(-45 49.354 51.363)\"\n          ></path>\n          <path\n            fill=\"#624421\"\n            d=\"M56.83 56.83a4 4 0 01-5.66 0l-2.12-2.12 5.66-5.66 2.12 2.12a4 4 0 010 5.66z\"\n          ></path>\n          <path\n            fill=\"#825a2c\"\n            d=\"M55.55 57.69a4 4 0 01-4.38-.86l-2.12-2.12 3.66-3.66 2.07 2.07a4 4 0 01.77 4.57z\"\n          ></path>\n        </g>\n        <g fill=\"#000\">\n          <path d=\"M37.32 30.25a3 3 0 00-3.4-.58l-1.55-1.54L34.49 26a3 3 0 000-4.24l-.7-.71c1.33-1.34 2.08-1.85 2.25-3.13a4 4 0 003.4-1.11l1.42-1.42a2 2 0 000-2.83L29.54 1.26a2 2 0 00-2.82 0L25.3 2.67a4 4 0 00-1.11 3.41 3 3 0 00-1.72.84L6.92 22.47a3 3 0 00-.85 1.75 4 4 0 00-3.4 1.08l-1.41 1.42a2 2 0 000 2.82l11.31 11.32a2 2 0 002.83 0l1.42-1.42A3.91 3.91 0 0017.93 36c1.3-.18 1.81-.93 3.13-2.25.84.84 1.44 1.58 2.83 1.58a3 3 0 002.11-.84l2.12-2.12 1.54 1.55a3 3 0 00.58 3.4C39.74 46.8 14 21 51.46 58.54a5.006 5.006 0 007.08-7.08c-44.39-44.38-1.39-1.39-21.22-21.21zm11.32 22.63l4.24-4.24 1.41 1.41-4.24 4.24zM35.2 39.44l4.24-4.24 12 12-4.24 4.24zM26.72 4.09l1.41-1.42L39.44 14 38 15.4a2 2 0 01-2.83 0l-8.45-8.48a2 2 0 010-2.83zM15.4 38L14 39.44 2.67 28.13l1.42-1.41a2 2 0 012.83 0l8.48 8.48a2 2 0 010 2.8zm2.83-4.24a1 1 0 01-1.41 0l-5.66-5.66 2.12-2.1a1 1 0 10-1.41-1.42l-2.12 2.14C8.19 25.16 8 25.12 8 24.59a1 1 0 01.29-.7l15.6-15.56a1 1 0 011.41 0l1.42 1.42-12 12a1 1 0 001.42 1.41l12-12 5.66 5.66a1 1 0 010 1.41c.09 0-.14.09-15.57 15.56zm6.36-.71a1 1 0 01-1.41 0l-.71-.71 9.9-9.9.71.71a1 1 0 010 1.41c-4.01 4.04.67-.62-8.49 8.52zM31 29.54L32.37 31 31 32.37 29.54 31zm.41 5.66a1 1 0 01.3-.71l2.82-2.82a1 1 0 011.42 0L38 33.79 33.79 38c-2.31-2.27-2.42-2.26-2.42-2.8zm25.71 21.92a3 3 0 01-4.24 0l-1.42-1.41 4.25-4.25 1.41 1.42a3 3 0 010 4.24zM25 53v-1a4 4 0 00-4-4H7a4 4 0 00-4 4v1a3 3 0 00-3 3v3a1 1 0 001 1h26a1 1 0 001-1v-3a3 3 0 00-3-3zM5 52a2 2 0 012-2h14a2 2 0 012 2v1H5zm21 6H2v-2a1 1 0 011-1h22a1 1 0 011 1z\"></path>\n          <path d=\"M25 44v-4a1 1 0 00-2 0v4a1 1 0 002 0zM32 47h-4a1 1 0 000 2h4a1 1 0 000-2zM27.71 45.71l3-3a1.004 1.004 0 00-1.42-1.42l-3 3A1 1 0 0027 46a1 1 0 00.71-.29z\"></path>\n        </g>\n      </g>\n    </svg>\n  );\n}\n","export function NewspaperIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fff\"\n        d=\"M82.501 501.98h369.826c15.011 0 27.179-13.47 27.179-30.087v-441.1c0-11.473-9.301-20.773-20.773-20.773H153.806c-11.473 0-20.773 9.301-20.773 20.773v415.529c-.001 0 .412 51.484-50.532 55.658z\"\n      ></path>\n      <path\n        fill=\"#a0c8ff\"\n        d=\"M82.871 501.98h-.197c-27.714 0-50.181-22.467-50.181-50.181v-209.37c0-12.872 10.435-23.307 23.307-23.307h77.251V451.8c.001 27.714-22.466 50.18-50.18 50.18z\"\n      ></path>\n      <path fill=\"#ff7b79\" d=\"M173.86 168.977h80.231v80.231H173.86z\"></path>\n      <path fill=\"#7ddac2\" d=\"M353.936 369.554h80.231v80.231h-80.231z\"></path>\n      <circle cx=\"32.493\" cy=\"329.689\" r=\"10\"></circle>\n      <path d=\"M464.478 0H148.062c-13.812 0-25.049 11.237-25.049 25.049v184.053H47.522c-13.812 0-25.049 11.237-25.049 25.049v50.325c0 5.534 4.486 10.02 10.02 10.02s10.02-4.486 10.02-10.02v-50.325a5.016 5.016 0 015.01-5.01h75.491v217.181c0 .088.011.174.013.262-.125 25.044-18.132 45.376-40.254 45.376-22.199 0-40.26-20.473-40.26-45.638v-71.419c0-5.534-4.486-10.02-10.02-10.02s-10.02 4.486-10.02 10.02v71.419c0 35.98 26.704 65.282 59.658 65.659.124.005.245.019.37.019h369.826c20.512 0 37.199-17.992 37.199-40.106V25.049C489.527 11.237 478.29 0 464.478 0zm5.01 471.894c0 11.065-7.698 20.067-17.16 20.067H126.073c10.51-11.827 16.998-27.919 16.998-45.639 0-.128-.014-.251-.019-.378V25.049a5.016 5.016 0 015.01-5.01h316.416a5.016 5.016 0 015.01 5.01z\"></path>\n      <path d=\"M173.86 134.745c5.534 0 10.02-4.486 10.02-10.02V92.674l25.143 36.409c2.866 4.14 7.679 5.891 12.257 4.46 4.657-1.455 7.666-5.766 7.666-10.984V60.413c0-5.534-4.486-10.02-10.02-10.02s-10.02 4.486-10.02 10.02v33.238l-26.803-38.812a10.02 10.02 0 00-18.265 5.694v64.193c.003 5.533 4.489 10.019 10.022 10.019zm74.731-.293h26.851c5.534 0 10.02-4.486 10.02-10.02s-4.486-10.02-10.02-10.02H258.61v-11.824h14.852c5.534 0 10.02-4.486 10.02-10.02s-4.486-10.02-10.02-10.02H258.61V70.726h16.832c5.534 0 10.02-4.486 10.02-10.02s-4.486-10.02-10.02-10.02h-26.851c-5.534 0-10.02 4.486-10.02 10.02v63.726c.001 5.534 4.486 10.02 10.02 10.02zm164.917-19.746c-5.842 0-11.445-2.334-14.987-6.242-3.717-4.101-10.053-4.411-14.153-.696-4.1 3.716-4.412 10.052-.696 14.153 7.387 8.15 18.261 12.824 29.836 12.824 14.514 0 26.716-9.335 29.012-22.197 1.742-9.756-2.587-22.464-19.96-28.873-7.551-2.785-14.605-5.811-17.122-6.909-.719-.691-.781-1.561-.688-2.212.23-1.604 1.589-2.894 3.726-3.538 7.288-2.195 16.848 2.59 19.927 4.625 4.581 3.071 10.788 1.861 13.879-2.711 3.099-4.585 1.895-10.814-2.69-13.912-1.916-1.296-19.238-12.506-36.896-7.189-9.624 2.9-16.438 10.516-17.782 19.878-1.268 8.832 2.563 17.329 9.997 22.176a10 10 0 001.39.757c.375.167 9.29 4.136 19.325 7.837 3.781 1.395 7.65 3.848 7.168 6.549-.41 2.291-3.644 5.68-9.286 5.68zM304.38 125.704c1.021 5.154 5.797 8.941 10.995 9.038 5.013.093 9.663-3.239 11.148-8.038l9.989-32.273 9.944 32.279c1.481 4.825 6.197 8.16 11.225 8.03 5.176-.134 9.897-3.914 10.919-9.042l12.58-63.21c1.08-5.428-2.444-10.703-7.871-11.783-5.431-1.079-10.703 2.444-11.783 7.871l-5.924 29.763-9.512-30.876c-1.629-5.288-7.234-8.254-12.525-6.625-3.536 1.089-6.024 3.96-6.804 7.322l-9.344 30.188-5.91-29.879c-1.074-5.429-6.344-8.959-11.773-7.885s-8.959 6.345-7.885 11.773zM173.86 259.228h80.231c5.534 0 10.02-4.486 10.02-10.02v-80.231c0-5.534-4.486-10.02-10.02-10.02H173.86c-5.534 0-10.02 4.486-10.02 10.02v80.231c.001 5.534 4.487 10.02 10.02 10.02zm10.02-80.231h60.192v60.192H183.88zm250.287 180.537h-80.231c-5.534 0-10.02 4.486-10.02 10.02v80.231c0 5.534 4.486 10.02 10.02 10.02h80.231c5.534 0 10.02-4.486 10.02-10.02v-80.231c-.001-5.534-4.487-10.02-10.02-10.02zm-10.02 80.231h-60.192v-60.192h60.192zM294.322 219.112h139.659c5.534 0 10.02-4.486 10.02-10.02s-4.486-10.02-10.02-10.02H294.322c-5.534 0-10.02 4.486-10.02 10.02s4.486 10.02 10.02 10.02zm139.659 20.076H294.322c-5.534 0-10.02 4.486-10.02 10.02s4.486 10.02 10.02 10.02h139.659c5.534 0 10.02-4.486 10.02-10.02s-4.486-10.02-10.02-10.02zM173.86 339.458h260.121c5.534 0 10.02-4.486 10.02-10.02s-4.486-10.02-10.02-10.02H173.86c-5.534 0-10.02 4.486-10.02 10.02s4.487 10.02 10.02 10.02zm0-40.116h260.121c5.534 0 10.02-4.486 10.02-10.02s-4.486-10.02-10.02-10.02H173.86c-5.534 0-10.02 4.486-10.02 10.02s4.487 10.02 10.02 10.02zm139.915 60.192H173.86c-5.534 0-10.02 4.486-10.02 10.02s4.486 10.02 10.02 10.02h139.914c5.534 0 10.02-4.486 10.02-10.02s-4.486-10.02-10.019-10.02zm0 40.116H173.86c-5.534 0-10.02 4.486-10.02 10.02s4.486 10.02 10.02 10.02h139.914c5.534 0 10.02-4.486 10.02-10.02s-4.486-10.02-10.019-10.02z\"></path>\n    </svg>\n  );\n}\n","import { ReactNode } from 'react';\n\ntype ViewProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n};\n\nexport function View({ children }: ViewProps) {\n  return <>{children}</>;\n}\n","import { ReactNode } from 'react';\n\ntype ViewIfProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  isVisible?: boolean;\n};\n\nexport function ViewIf({ isVisible = false, children }: ViewIfProps) {\n  return isVisible ? <>{children}</> : <></>;\n}\n","type ViewOrProps = {\n  children: [any, any];\n  orCondition?: boolean;\n};\n\nexport function ViewOr({ orCondition = false, children }: ViewOrProps) {\n  return orCondition ? <>{children[0]}</> : <>{children[1]}</>;\n}\n","type ViewSwitchProps = {\n  cases: boolean[];\n  /**\n   * The content of the component\n   */\n  children: any;\n};\n\nexport function ViewSwitch({ cases, children }: ViewSwitchProps) {\n  if (cases.length > 5) {\n    throw Error('ViewSwitch only supports up to 5 cases');\n  }\n\n  if (cases[0] && children[0]) {\n    return children[0];\n  }\n\n  if (cases[1] && children[1]) {\n    return children[1];\n  }\n\n  if (cases[2] && children[2]) {\n    return children[2];\n  }\n\n  if (cases[3] && children[3]) {\n    return children[3];\n  }\n\n  if (cases[4] && children[4]) {\n    return children[4];\n  }\n  console.warn('Rendering all children in the ViewSwitch');\n  return children;\n}\n","import { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n\nexport function WitnessRules() {\n  return (\n    <Instruction contained>\n      <Translate\n        pt=\"Em Testemunha Ocular, um jogador será a testemunha que presenciou um crime desconhecido. Essa testemunha responderá perguntas de sim-ou-não para ajudar os outros jogadores, detetives, a liberarem pelo menos um dos 12 suspeitos em cada rodada. Você quer ser a testemunha?\"\n        en=\"In Eye Witness, a player will be the witness who witnessed an unknown crime. This witness will answer yes-or-no questions to help the other players, detective, to release at least one of the 12 suspects each round. Do you want to be the witness?\"\n      />\n    </Instruction>\n  );\n}\n\ntype AnnouncementContentProps = {\n  didUserWin: boolean;\n};\n\nexport function AnnouncementContent({ didUserWin }: AnnouncementContentProps) {\n  return didUserWin ? (\n    <Instruction>\n      <Translate\n        pt=\"O criminoso foi capturado e preso e vai morrer na cadeira elétrica! Obrigado pelo seu serviço e dedicação nesse caso!\"\n        en=\"The perpetrator was captured, arrested, and will be executed by the electric chair! Thank you for your service!\"\n      />\n    </Instruction>\n  ) : (\n    <Instruction>\n      <Translate\n        pt=\"O criminoso não foi capturado. Tudo por conta da sua investigação porca. Ele(a) saiu pelo mundo a fora cometendo mais crimes. Saiu até nos jornais!\"\n        en=\"The perpetrator got away. Thanks to you and your lousy investigation. Now they are out and about committing more crimes. It was even on the news!\"\n      />\n    </Instruction>\n  );\n}\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useLoading } from 'hooks/useLoading';\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Utils\nimport { sortPlayers } from 'utils/helpers';\n// Components\nimport { AvatarCard } from 'components/avatars';\nimport { TransparentButton } from 'components/buttons';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { WitnessRules } from './components/TextBlobs';\nimport { IconAvatar } from 'components/icons/IconAvatar';\nimport { AnimatedClockIcon } from 'components/icons/AnimatedClockIcon';\n\ntype StepWitnessSelectionProps = {\n  players: GamePlayers;\n  onWitnessButtonClick: GenericFunction;\n};\n\nexport function StepWitnessSelection({ players, onWitnessButtonClick }: StepWitnessSelectionProps) {\n  useTemporarilyHidePlayersBar();\n  const { isLoading } = useLoading();\n  const [isAdmin] = useGlobalState('isAdmin');\n\n  return (\n    <Step key={1}>\n      <Title>\n        <IconAvatar icon={<AnimatedClockIcon />} size=\"large\" />\n        <br />\n        <Translate pt=\"Quem quer ser a testemunha ocular?\" en=\"Who wants to be the eye witness?\" />\n      </Title>\n\n      <WitnessRules />\n\n      <Instruction contained>\n        <Space>\n          {sortPlayers(players).map((player) => {\n            if (isAdmin) {\n              return (\n                <TransparentButton\n                  key={`p-bt-${player.id}`}\n                  disabled={isLoading}\n                  onClick={() => onWitnessButtonClick({ witnessId: player.id })}\n                >\n                  <AvatarCard key={`p-a-${player.id}`} player={player} withName addressUser />\n                </TransparentButton>\n              );\n            }\n\n            return <AvatarCard key={`p-a-${player.id}`} player={player} withName addressUser />;\n          })}\n        </Space>\n      </Instruction>\n\n      <Instruction>\n        (\n        <Translate pt=\"O administrator selecionará a testemunha\" en=\"The VIP will select the witness\" />)\n      </Instruction>\n    </Step>\n  );\n}\n","// Hooks\nimport { useStep } from 'hooks/useStep';\nimport { useOnSelectWitnessAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { StepWitnessSelection } from './StepWitnessSelection';\nimport { CrimeSceneIcon } from 'components/icons/CrimeSceneIcon';\n\nfunction PhaseWitnessSelection({ state, players, info }: PhaseProps) {\n  const { step, goToNextStep } = useStep(0);\n\n  const onWitnessButtonClick = useOnSelectWitnessAPIRequest();\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.TESTEMUNHA_OCULAR.WITNESS_SELECTION}\n      className=\"t-phase\"\n    >\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<CrimeSceneIcon />}\n          title={<Translate pt=\"O Caso\" en=\"The Case\" />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  Um crime horrível aconteceu. Tão horrível quem não consigo nem explicar e nem podemos contar\n                  com a ciência forense para resolvê-lo. Portanto, só há uma pessoa que pode nos ajudar agora:\n                  uma testemunha ocular...\n                </>\n              }\n              en={\n                <>\n                  A horrible crime has happened. So horrible that I can't even explain, neither can't rely on\n                  forensics and science to solve it. So there's only one person that could help us now: An eye\n                  witness...\n                </>\n              }\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepWitnessSelection players={players} onWitnessButtonClick={onWitnessButtonClick} />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseWitnessSelection;\n","import { TESTEMUNHA_OCULAR_API } from 'services/adapters';\n\nimport { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\n\nexport function useOnSelectWitnessAPIRequest() {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: TESTEMUNHA_OCULAR_API.submitAction,\n    actionName: 'select-witness',\n    successMessage: translate('Testemunha enviada com sucesso', 'Witness submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar selecionar a testemunha',\n      'Oops, the application found an error while trying to submit the witness'\n    ),\n  });\n\n  return (payload: SelectWitnessPayload) => {\n    request({\n      action: 'SELECT_WITNESS',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSelectQuestionAPIRequest() {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: TESTEMUNHA_OCULAR_API.submitAction,\n    actionName: 'select-question',\n    successMessage: translate('Pergunta enviada com sucesso', 'Question submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar pergunta',\n      'Oops, the application found an error while trying to submit question'\n    ),\n  });\n\n  return (payload: SelectQuestionPayload) => {\n    request({\n      action: 'SELECT_QUESTION',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitTestimonyAPIRequest() {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: TESTEMUNHA_OCULAR_API.submitAction,\n    actionName: 'submit-testimony',\n    successMessage: translate('Testemunho enviada com sucesso', 'Testimony submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar seu testemunho',\n      'Oops, the application found an error while trying to send your testimony'\n    ),\n  });\n\n  return (payload: SubmitTestimonyPayload) => {\n    request({\n      action: 'GIVE_TESTIMONY',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnEliminateSuspectAPIRequest() {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: TESTEMUNHA_OCULAR_API.submitAction,\n    actionName: 'eliminate-suspect',\n    successMessage: translate('Suspeito eliminado com sucesso', 'Suspect release submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar eliminar o suspeito',\n      'Oops, the application found an error while trying to release the suspect'\n    ),\n  });\n\n  return (payload: EliminatePayload) => {\n    request({\n      action: 'ELIMINATE_SUSPECT',\n      ...payload,\n    });\n  };\n}\n","// Ant Design Resources\nimport { Tooltip } from 'antd';\n// Components\nimport { CollapsibleRule } from 'components/rules';\nimport { IconAvatar } from 'components/icons/IconAvatar';\nimport { SpeechBubbleDeclinedIcon } from 'components/icons/SpeechBubbleDeclinedIcon';\nimport { SpeechBubbleAcceptedIcon } from 'components/icons/SpeechBubbleAcceptedIcon';\nimport { Translate } from 'components/language';\n\ntype QuestionsHistoryProps = {\n  history: THistoryEntry[];\n};\n\nexport function QuestionsHistory({ history }: QuestionsHistoryProps) {\n  return (\n    <CollapsibleRule title={<Translate pt=\"Respostas Anteriores\" en=\"Previous Answers\" />}>\n      <ol>\n        {history.map((entry) => (\n          <li key={`history-entry-${entry.id}`} className=\"t-history__entry\">\n            <span className=\"t-history__question\">{entry.question}</span>\n            {entry.answer ? (\n              <Tooltip title={<Translate pt=\"Sim\" en=\"Yes\" />} className=\"t-history__icon\">\n                <IconAvatar icon={<SpeechBubbleAcceptedIcon />} size=\"small\" />\n              </Tooltip>\n            ) : (\n              <Tooltip title={<Translate pt=\"Não\" en=\"No\" />} className=\"t-history__icon\">\n                <IconAvatar icon={<SpeechBubbleDeclinedIcon />} size=\"small\" />\n              </Tooltip>\n            )}\n          </li>\n        ))}\n      </ol>\n    </CollapsibleRule>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Image, Popconfirm } from 'antd';\n// Hooks\nimport { useDimensions } from 'hooks/useDimensions';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\n// Components\nimport { ImageCard } from 'components/cards';\n\ntype SuspectsProps = {\n  suspects: Suspect[];\n  perpetrator?: Suspect;\n  onCardClick?: GenericFunction;\n  eliminatedSuspects?: string[];\n};\n\nexport function Suspects({ suspects, perpetrator, onCardClick, eliminatedSuspects = [] }: SuspectsProps) {\n  const { language, translate } = useLanguage();\n  const { isLoading } = useLoading();\n  const [width] = useDimensions();\n\n  const cardWidth = Math.floor(width / 7);\n\n  if (onCardClick) {\n    return (\n      <div className=\"t-suspects-table\">\n        {suspects.map((suspect) => {\n          const wasEliminated = eliminatedSuspects.includes(suspect.id);\n          const name = suspect.name[language];\n\n          return (\n            <Popconfirm\n              key={suspect.id}\n              title={translate(\n                `Tem certeza que quer liberar ${name}?`,\n                `Are you sure you want to release ${name}?`\n              )}\n              onConfirm={() => onCardClick(suspect.id)}\n              okText={translate('Sim', 'Yes')}\n              cancelText={translate('Não', 'No')}\n              disabled={wasEliminated || isLoading}\n            >\n              <button\n                className=\"t-suspects-table__suspect t-suspects-table__suspect-button\"\n                disabled={wasEliminated || isLoading}\n              >\n                <ImageCard\n                  imageId={wasEliminated ? 'us-00' : suspect.id}\n                  className={clsx(\n                    't-suspects-table__suspect-image',\n                    perpetrator?.id === suspect.id && 't-suspects-table__suspect-image--active',\n                    wasEliminated && 't-suspects-table__suspect-image--disabled'\n                  )}\n                  cardWidth={cardWidth}\n                  preview={false}\n                />\n                {!wasEliminated && <div className=\"t-suspects-table__suspect-name\">{name}</div>}\n              </button>\n            </Popconfirm>\n          );\n        })}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"t-suspects-table\">\n      <Image.PreviewGroup>\n        {suspects.map((suspect) => {\n          const wasEliminated = eliminatedSuspects.includes(suspect.id);\n          return (\n            <div className=\"t-suspects-table__suspect\" key={suspect.id}>\n              <ImageCard\n                imageId={wasEliminated ? 'us-00' : suspect.id}\n                previewImageId={suspect.id}\n                className={clsx(\n                  't-suspects-table__suspect-image',\n                  perpetrator?.id === suspect.id && 't-suspects-table__suspect-image--active'\n                )}\n                cardWidth={cardWidth}\n              />\n              {!wasEliminated && (\n                <div className=\"t-suspects-table__suspect-name\">{suspect.name[language]}</div>\n              )}\n            </div>\n          );\n        })}\n      </Image.PreviewGroup>\n    </div>\n  );\n}\n","// Components\n\nimport { AvatarName } from 'components/avatars';\nimport { AnimatedClockIcon } from 'components/icons/AnimatedClockIcon';\nimport { IconAvatar } from 'components/icons/IconAvatar';\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { QuestionsHistory } from './components/QuestionsHistory';\nimport { Suspects } from './components/Suspects';\n\ntype StepQuestionWaitingProps = {\n  suspects: Suspect[];\n  previouslyEliminatedSuspects: string[];\n  perpetrator: Suspect;\n  questioner: GamePlayer;\n  isUserTheWitness: boolean;\n  history: THistoryEntry[];\n};\n\nexport function StepQuestionWaiting({\n  suspects,\n  previouslyEliminatedSuspects,\n  perpetrator,\n  questioner,\n  isUserTheWitness,\n  history,\n}: StepQuestionWaitingProps) {\n  return (\n    <Step>\n      <Title>\n        <IconAvatar icon={<AnimatedClockIcon />} size=\"large\" />\n        <br />\n        <Translate pt={<>Examine os suspeitos</>} en={<>Examine the suspects</>} />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              <AvatarName player={questioner} /> está escolhendo uma pergunta para essa rodada.\n            </>\n          }\n          en={\n            <>\n              <AvatarName player={questioner} /> is picking a question for this round.\n            </>\n          }\n        />{' '}\n        {isUserTheWitness && (\n          <Translate\n            pt=\"O criminoso que você viu está marcado com borda amarela\"\n            en=\"The criminal you saw is highlighted in yellow\"\n          />\n        )}\n      </Instruction>\n\n      <Suspects\n        suspects={suspects}\n        perpetrator={isUserTheWitness ? perpetrator : undefined}\n        eliminatedSuspects={previouslyEliminatedSuspects}\n      />\n\n      {history.length > 0 && <QuestionsHistory history={history} />}\n    </Step>\n  );\n}\n","// Utils\nimport { LETTERS } from 'utils/constants';\n// Components\n\nimport { Suspects } from './components/Suspects';\nimport { QuestionsHistory } from './components/QuestionsHistory';\nimport { Space } from 'antd';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { Card } from 'components/cards';\n\ntype StepSelectQuestionProps = {\n  questions: TQuestion[];\n  onSelectQuestion: GenericFunction;\n  isLoading: boolean;\n  suspects: Suspect[];\n  previouslyEliminatedSuspects: string[];\n  history: THistoryEntry[];\n};\n\nexport function StepSelectQuestion({\n  questions,\n  onSelectQuestion,\n  isLoading,\n  suspects,\n  previouslyEliminatedSuspects,\n  history,\n}: StepSelectQuestionProps) {\n  return (\n    <Step>\n      <Title>\n        <Translate pt=\"Selecione uma pergunta\" en=\"Select a question\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt=\"A testemunha responderá a pergunta sobre o  sobre criminoso. A pergunta que você não escolher será descartada.\"\n          en=\"The witness will answer the question about the perpetrator. The unchosen question will be discarded.\"\n        />{' '}\n      </Instruction>\n\n      <Space className=\"space-container\" align=\"center\">\n        {questions.map(({ question, id }, index) => {\n          return (\n            <button\n              key={id}\n              className=\"t-select-question__button\"\n              onClick={() => onSelectQuestion({ questionId: id })}\n              disabled={isLoading}\n            >\n              <Card header={LETTERS[index]} randomColor className=\"t-card\">\n                {question}\n              </Card>\n            </button>\n          );\n        })}\n      </Space>\n\n      <Suspects suspects={suspects} eliminatedSuspects={previouslyEliminatedSuspects} />\n\n      {history.length > 0 && <QuestionsHistory history={history} />}\n    </Step>\n  );\n}\n","// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useStep } from 'hooks/useStep';\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\nimport { useOnSelectQuestionAPIRequest } from './utils/api-requests';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { AvatarName } from 'components/avatars';\nimport { ViewOr } from 'components/views';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepQuestionWaiting } from './StepQuestionWaiting';\nimport { StepSelectQuestion } from './StepSelectQuestion';\nimport { InvestigationIcon } from 'components/icons/InvestigationIcon';\n\nfunction PhaseQuestionSelection({ state, players, info }: PhaseProps) {\n  const { isLoading } = useLoading();\n  const { step, goToNextStep } = useStep(0);\n  const [witness, isUserTheWitness] = useWhichPlayerIsThe('witnessId', state, players);\n  const [questioner, isUserTheQuestioner] = useWhichPlayerIsThe('questionerId', state, players);\n  const onSelectQuestion = useOnSelectQuestionAPIRequest();\n\n  const roundsLeft = (state?.round?.total ?? 0) - (state?.round?.current ?? 0) + 1 || 11;\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.TESTEMUNHA_OCULAR.QUESTION_SELECTION}\n      className=\"t-phase\"\n    >\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<InvestigationIcon />}\n          title={<Translate pt=\"Seleção da Pergunta\" en=\"Question Selection\" />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  Agora que encontramos nossa testemunha (<AvatarName player={witness} />) é hora de\n                  questioná-la.\n                  <br />\n                  Só temos tempo para {roundsLeft} perguntas. Portanto, <AvatarName player={questioner} />,\n                  escolha a pergunta certa.\n                </>\n              }\n              en={\n                <>\n                  Now that we have a Witness (<AvatarName player={witness} />\n                  ), it's time to choose the question to ask them.\n                  <br />\n                  We can only have time for {roundsLeft} questions. So <AvatarName player={questioner} />,\n                  choose a question\n                </>\n              }\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <ViewOr orCondition={isUserTheQuestioner}>\n          <StepSelectQuestion\n            isLoading={isLoading}\n            onSelectQuestion={onSelectQuestion}\n            previouslyEliminatedSuspects={state.previouslyEliminatedSuspects}\n            questions={state.questions}\n            suspects={state.suspects}\n            history={state.history}\n          />\n\n          <StepQuestionWaiting\n            isUserTheWitness={isUserTheWitness}\n            perpetrator={state.perpetrator}\n            previouslyEliminatedSuspects={state.previouslyEliminatedSuspects}\n            questioner={questioner}\n            suspects={state.suspects}\n            history={state.history}\n          />\n        </ViewOr>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseQuestionSelection;\n","// Ant Design Resources\nimport { Avatar, Button } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Suspects } from './components/Suspects';\nimport { QuestionsHistory } from './components/QuestionsHistory';\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { AvatarName } from 'components/avatars';\nimport { Card } from 'components/cards';\nimport { SpeechBubbleAcceptedIcon } from 'components/icons/SpeechBubbleAcceptedIcon';\nimport { SpeechBubbleDeclinedIcon } from 'components/icons/SpeechBubbleDeclinedIcon';\n\ntype StepQuestioningProps = {\n  suspects: Suspect[];\n  previouslyEliminatedSuspects: string[];\n  perpetrator: Suspect;\n  isUserTheWitness: boolean;\n  witness: GamePlayer;\n  isLoading: boolean;\n  onAnswer: GenericFunction;\n  question: GamePlayer;\n  history: THistoryEntry[];\n};\n\nexport function StepQuestioning({\n  suspects,\n  previouslyEliminatedSuspects,\n  perpetrator,\n  isUserTheWitness,\n  witness,\n  isLoading,\n  onAnswer,\n  question,\n  history,\n}: StepQuestioningProps) {\n  const { translate } = useLanguage();\n\n  return (\n    <Step>\n      <Title level={3} size=\"medium\">\n        <Translate\n          pt={\n            <>\n              Testemunha <AvatarName player={witness} />, responda:\n            </>\n          }\n          en={\n            <>\n              Witness <AvatarName player={witness} />, please answer:\n            </>\n          }\n        />\n        <br />\n        <div className=\"t-questioning-answer-grid\">\n          {isUserTheWitness ? (\n            <Button\n              type=\"text\"\n              size=\"large\"\n              onClick={() => onAnswer({ testimony: false })}\n              className=\"t-questioning-answer-grid__button t-questioning-answer-grid__button--no\"\n              disabled={!isUserTheWitness || isLoading}\n            >\n              <span className=\"t-questioning-answer-grid__answer\">\n                <Translate pt=\"Não\" en=\"No\" />\n              </span>\n              <Avatar\n                size=\"large\"\n                icon={<SpeechBubbleDeclinedIcon />}\n                style={{ backgroundColor: 'transparent' }}\n                shape=\"square\"\n              />\n            </Button>\n          ) : (\n            <div></div>\n          )}\n\n          <Card header={translate('O suspeito...', 'The perpetrator...')} randomColor className=\"t-card\">\n            {question.question}\n          </Card>\n          {isUserTheWitness ? (\n            <Button\n              type=\"text\"\n              size=\"large\"\n              onClick={() => onAnswer({ testimony: true })}\n              className=\"t-questioning-answer-grid__button t-questioning-answer-grid__button--no\"\n              disabled={!isUserTheWitness || isLoading}\n            >\n              <Avatar\n                size=\"large\"\n                icon={<SpeechBubbleAcceptedIcon />}\n                style={{ backgroundColor: 'transparent' }}\n                shape=\"square\"\n              />\n              <span className=\"t-questioning-answer-grid__answer\">\n                <Translate pt=\"Sim\" en=\"Yes\" />\n              </span>\n            </Button>\n          ) : (\n            <div></div>\n          )}\n        </div>\n      </Title>\n\n      <Suspects\n        suspects={suspects}\n        perpetrator={isUserTheWitness ? perpetrator : undefined}\n        eliminatedSuspects={previouslyEliminatedSuspects}\n      />\n\n      {history.length > 0 && <QuestionsHistory history={history} />}\n    </Step>\n  );\n}\n","// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useStep } from 'hooks/useStep';\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\nimport { useOnSubmitTestimonyAPIRequest } from './utils/api-requests';\n// Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Translate } from 'components/language';\nimport { AvatarName } from 'components/avatars';\nimport { Instruction } from 'components/text';\nimport { StepQuestioning } from './StepQuestioning';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { EyeIcon } from 'components/icons/EyeIcon';\n\nfunction PhaseQuestioning({ state, players, info }: PhaseProps) {\n  const { isLoading } = useLoading();\n  const { step, goToNextStep } = useStep(0);\n  const [witness, isUserTheWitness] = useWhichPlayerIsThe('witnessId', state, players);\n\n  const onAnswer = useOnSubmitTestimonyAPIRequest();\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.TESTEMUNHA_OCULAR.QUESTIONING}\n      className=\"t-phase\"\n    >\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<EyeIcon />}\n          title={<Translate pt=\"Questionamento\" en=\"Questioning\" />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  Nossa testemunha só sabe julgar por aparência.\n                  <br />\n                  <AvatarName player={witness} />, é hora de nos ajudar a pegar esse criminoso hediondo.\n                </>\n              }\n              en={\n                <>\n                  Our witness loves to judge the book by its cover.\n                  <br />\n                  <AvatarName player={witness} />, it's time to help us find this heinous perpetrator!\n                </>\n              }\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepQuestioning\n          suspects={state.suspects}\n          previouslyEliminatedSuspects={state.previouslyEliminatedSuspects}\n          perpetrator={state.perpetrator}\n          isUserTheWitness={isUserTheWitness}\n          witness={witness}\n          isLoading={isLoading}\n          onAnswer={onAnswer}\n          question={state.question}\n          history={state.history}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseQuestioning;\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Suspects } from './components/Suspects';\nimport { QuestionsHistory } from './components/QuestionsHistory';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { AvatarName } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { Card } from 'components/cards';\nimport { SpeechBubbleAcceptedIcon } from 'components/icons/SpeechBubbleAcceptedIcon';\nimport { SpeechBubbleDeclinedIcon } from 'components/icons/SpeechBubbleDeclinedIcon';\nimport { IconAvatar } from 'components/icons/IconAvatar';\n\ntype StepSuspectEliminationProps = {\n  suspects: Suspect[];\n  previouslyEliminatedSuspects: string[];\n  eliminatedSuspects: string[];\n  perpetrator: Suspect;\n  isUserTheWitness: boolean;\n  isUserTheQuestioner: boolean;\n  witness: GamePlayer;\n  questioner: GamePlayer;\n  isLoading: boolean;\n  onEliminate: GenericFunction;\n  question: GamePlayer;\n  testimony: boolean;\n  history: THistoryEntry[];\n};\n\nexport function StepSuspectElimination({\n  suspects,\n  previouslyEliminatedSuspects,\n  eliminatedSuspects,\n  perpetrator,\n  isUserTheWitness,\n  isUserTheQuestioner,\n  witness,\n  isLoading,\n  onEliminate,\n  question,\n  testimony,\n  history,\n  questioner,\n}: StepSuspectEliminationProps) {\n  const { translate } = useLanguage();\n\n  const onEliminateSuspect = (suspectId: string) => onEliminate({ suspectId, pass: false });\n  const onPass = () => onEliminate({ suspectId: '', pass: true });\n\n  return (\n    <Step>\n      <Title level={3} size=\"medium\">\n        <AvatarName player={witness} />\n        <Translate en=\"answered\" pt=\"respondeu\" />{' '}\n        {testimony ? (\n          <Translate en=\"YES\" pt=\"SIM\" />\n        ) : (\n          <>\n            <Translate en=\"NO\" pt=\"NÃO\" />\n          </>\n        )}{' '}\n        <IconAvatar\n          size=\"large\"\n          icon={testimony ? <SpeechBubbleAcceptedIcon /> : <SpeechBubbleDeclinedIcon />}\n        />{' '}\n        <Translate en=\"to the question\" pt=\"para a pergunta:\" />\n        <br />\n        <Space className=\"space-container\" align=\"center\">\n          <Card\n            header={translate('O suspeito...', 'The perpetrator...')}\n            color={testimony ? 'green' : 'red'}\n            className=\"t-card\"\n          >\n            {question.question}\n          </Card>\n        </Space>\n      </Title>\n      {isUserTheQuestioner ? (\n        <Instruction contained>\n          <Translate\n            pt=\"Clique em um suspeito para liberá-lo(a)\"\n            en=\"Click on a suspect card to release it\"\n          />\n          <br />\n          {Boolean(eliminatedSuspects?.length && isUserTheQuestioner) && (\n            <Space className=\"space-container\" align=\"center\">\n              <Button type=\"primary\" onClick={onPass} disabled={isLoading}>\n                <Translate\n                  pt=\"Parar de eliminar e ir para a próxima pergunta\"\n                  en=\"Stop releasing suspects and go to next question\"\n                />\n              </Button>\n            </Space>\n          )}\n        </Instruction>\n      ) : (\n        <Instruction contained>\n          <AvatarName player={questioner} />{' '}\n          <Translate pt=\"é quem libera os suspeitos\" en=\"is who is releasing the suspects\" />\n        </Instruction>\n      )}\n\n      <Suspects\n        suspects={suspects}\n        perpetrator={isUserTheWitness ? perpetrator : undefined}\n        onCardClick={isUserTheQuestioner ? onEliminateSuspect : undefined}\n        eliminatedSuspects={[...(eliminatedSuspects ?? []), ...(previouslyEliminatedSuspects ?? [])]}\n      />\n\n      {history.length > 0 && <QuestionsHistory history={history} />}\n    </Step>\n  );\n}\n","import { AvatarName } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { useLoading } from 'hooks/useLoading';\nimport { useStep } from 'hooks/useStep';\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\nimport { PHASES } from 'utils/phases';\n\nimport { useOnEliminateSuspectAPIRequest } from './utils/api-requests';\nimport { StepSuspectElimination } from './StepSuspectElimination';\nimport { LawIcon } from 'components/icons/LawIcon';\n\nfunction PhaseTrial({ state, players, info }: PhaseProps) {\n  const { isLoading } = useLoading();\n  const { step, goToNextStep } = useStep(0);\n\n  const [witness, isUserTheWitness] = useWhichPlayerIsThe('witnessId', state, players);\n  const [questioner, isUserTheQuestioner] = useWhichPlayerIsThe('questionerId', state, players);\n\n  const onEliminate = useOnEliminateSuspectAPIRequest();\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.TESTEMUNHA_OCULAR.TRIAL}\n      className=\"t-phase\"\n    >\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<LawIcon />}\n          title={<Translate pt=\"Julgamento\" en=\"Trial\" />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  Precisamos eliminar suspeitos! Para cada pergunta, pelo menos um suspeito tem que se\n                  eliminado. Lembre-se que estamos tentando liberar testemunhas. Desvendamos o caso se o\n                  último suspeito for o criminoso!\n                  <br />\n                  <AvatarName player={questioner} addressUser /> está encarregado(a) de selecionar os\n                  inocentes.\n                </>\n              }\n              en={\n                <>\n                  We need to eliminate suspects! For each question we must eliminate at least one suspect.\n                  Remember we are trying to release witnesses. We solve the case if the last man (or woman)\n                  standing is the perpetrator!\n                  <br />\n                  <AvatarName player={questioner} /> is in charge of selecting the innocent people.\n                </>\n              }\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepSuspectElimination\n          suspects={state.suspects}\n          previouslyEliminatedSuspects={state.previouslyEliminatedSuspects}\n          perpetrator={state.perpetrator}\n          isUserTheWitness={isUserTheWitness}\n          witness={witness}\n          isLoading={isLoading}\n          onEliminate={onEliminate}\n          question={state.question}\n          eliminatedSuspects={state.eliminatedSuspects}\n          questioner={questioner}\n          isUserTheQuestioner={isUserTheQuestioner}\n          testimony={state.testimony}\n          history={state.history}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseTrial;\n","// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { AnnouncementContent } from './components/TextBlobs';\nimport { QuestionsHistory } from './components/QuestionsHistory';\nimport { GameOverWrapper } from 'components/game-over';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { ImageCard } from 'components/cards';\nimport { CriminalIcon } from 'components/icons/CriminalIcon';\nimport { NewspaperIcon } from 'components/icons/NewspaperIcon';\n\nfunction PhaseGameOver({ state, info }: PhaseProps) {\n  const { language } = useLanguage();\n\n  const didUserWin = state.outcome === 'WIN';\n\n  return (\n    <GameOverWrapper\n      info={info}\n      state={state}\n      announcementIcon={didUserWin ? <CriminalIcon /> : <NewspaperIcon />}\n      announcementDuration={15}\n      announcementTitle={\n        didUserWin ? (\n          <Translate pt=\"Capturado!\" en=\"Arrested!\" />\n        ) : (\n          <Translate pt=\"O criminoso escapou!\" en=\"They got away!\" />\n        )\n      }\n      announcementContent={<AnnouncementContent didUserWin={didUserWin} />}\n    >\n      <Instruction contained>\n        <Translate\n          pt={<>O interrogatório durou {state.groupScore ?? '?'} horas.</>}\n          en={<>The interrogation lasted for {state.groupScore ?? '?'} hours.</>}\n        />\n        <br />\n        <Translate pt=\"O criminoso era:\" en=\"The perpetrator was:\" />\n\n        <div className=\"t-suspects-table__suspect\">\n          <ImageCard\n            imageId={state.perpetrator.id}\n            className=\"t-suspects-table__suspect-image\"\n            cardWidth={150}\n          />\n          <div className=\"t-suspects-table__suspect-name\">{state.perpetrator.name[language]}</div>\n        </div>\n      </Instruction>\n\n      <QuestionsHistory history={state.history} />\n    </GameOverWrapper>\n  );\n}\n\nexport default PhaseGameOver;\n","import { ConfigProvider } from 'antd';\n// Constants\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport PhaseWitnessSelection from './PhaseWitnessSelection';\nimport PhaseQuestionSelection from './PhaseQuestionSelection';\nimport PhaseQuestioning from './PhaseQuestioning';\nimport PhaseTrial from './PhaseTrial';\nimport PhaseGameOver from './PhaseGameOver';\n// Fonts\nimport 'assets/fonts/architects-daughter.scss';\n// Sass\nimport './testemunha-ocular.scss';\n\nfunction getActiveComponent(phase: string) {\n  switch (phase) {\n    case PHASES.DEFAULT.LOBBY:\n      return PhaseLobby;\n    case PHASES.DEFAULT.RULES:\n      return PhaseRules;\n    case PHASES.DEFAULT.SETUP:\n      return PhaseSetup;\n    case PHASES.TESTEMUNHA_OCULAR.WITNESS_SELECTION:\n      return PhaseWitnessSelection;\n    case PHASES.TESTEMUNHA_OCULAR.QUESTION_SELECTION:\n      return PhaseQuestionSelection;\n    case PHASES.TESTEMUNHA_OCULAR.QUESTIONING:\n      return PhaseQuestioning;\n    case PHASES.TESTEMUNHA_OCULAR.TRIAL:\n      return PhaseTrial;\n    case PHASES.DEFAULT.GAME_OVER:\n      return PhaseGameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionTestemunhaOcular({ gameId }: SessionProps) {\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorPrimary: THEME_COLORS.SLATE,\n        },\n      }}\n    >\n      <Session\n        gameId={gameId}\n        gameCollection={GAME_COLLECTION.TESTEMUNHA_OCULAR}\n        getActiveComponent={getActiveComponent}\n      />\n    </ConfigProvider>\n  );\n}\n\nexport default SessionTestemunhaOcular;\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\n/**\n * Gets player that is assigned to a property in the state\n * @param propertyName\n * @param state\n * @param players\n * @returns a player instance, a boolean if the player is assigned to given property\n */\nexport function useWhichPlayerIsThe(\n  propertyName = 'activePlayer',\n  state: PlainObject = {},\n  players: Players = {}\n): [GamePlayer, boolean] {\n  const [userId] = useGlobalState('userId');\n  const [activePlayer, setActivePlayer] = useState<GamePlayer>({});\n  const [isUser, setIsUser] = useState(false);\n\n  // Determine if user is active as the guesser, the clue giver, the psychic, the storyteller, etc\n  useEffect(() => {\n    const activePlayer = state?.[propertyName];\n    setActivePlayer(players?.[activePlayer] ?? {});\n    setIsUser(state?.[propertyName] === userId);\n  }, [players, propertyName, state, userId]);\n\n  return [activePlayer, isUser];\n}\n"],"names":["AnimatedClockIcon","props","xmlns","viewBox","fill","d","attributeName","dur","from","repeatCount","to","type","EyeIcon","cx","cy","r","opacity","InvestigationIcon","width","height","x","y","rx","LawIcon","transform","NewspaperIcon","View","children","ViewIf","isVisible","ViewOr","orCondition","ViewSwitch","cases","length","Error","console","warn","WitnessRules","contained","pt","en","AnnouncementContent","didUserWin","StepWitnessSelection","players","onWitnessButtonClick","useTemporarilyHidePlayersBar","isLoading","useLoading","useGlobalState","isAdmin","IconAvatar","icon","size","sortPlayers","map","player","disabled","onClick","witnessId","id","withName","addressUser","state","info","useStep","step","goToNextStep","translate","useLanguage","request","useAPICall","apiFunction","TESTEMUNHA_OCULAR_API","actionName","successMessage","errorMessage","payload","action","useOnSelectWitnessAPIRequest","phase","allowedPhase","PHASES","className","CrimeSceneIcon","title","onClose","currentRound","round","current","QuestionsHistory","history","entry","question","answer","SpeechBubbleAcceptedIcon","SpeechBubbleDeclinedIcon","Suspects","suspects","perpetrator","onCardClick","eliminatedSuspects","language","useDimensions","cardWidth","Math","floor","suspect","wasEliminated","includes","name","onConfirm","okText","cancelText","imageId","clsx","preview","previewImageId","StepQuestionWaiting","previouslyEliminatedSuspects","questioner","isUserTheWitness","undefined","StepSelectQuestion","questions","onSelectQuestion","align","index","questionId","header","LETTERS","randomColor","useWhichPlayerIsThe","witness","isUserTheQuestioner","useOnSelectQuestionAPIRequest","roundsLeft","total","StepQuestioning","onAnswer","level","testimony","style","backgroundColor","shape","useOnSubmitTestimonyAPIRequest","StepSuspectElimination","onEliminate","color","Boolean","suspectId","pass","useOnEliminateSuspectAPIRequest","outcome","announcementIcon","CriminalIcon","announcementDuration","announcementTitle","announcementContent","groupScore","getActiveComponent","PhaseLobby","PhaseRules","PhaseSetup","PhaseWitnessSelection","PhaseQuestionSelection","PhaseQuestioning","PhaseTrial","PhaseGameOver","PageError","gameId","theme","token","colorPrimary","THEME_COLORS","gameCollection","GAME_COLLECTION","propertyName","userId","useState","activePlayer","setActivePlayer","isUser","setIsUser","useEffect"],"sourceRoot":""}