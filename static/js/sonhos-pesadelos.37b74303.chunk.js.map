{"version":3,"file":"static/js/sonhos-pesadelos.37b74303.chunk.js","mappings":"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","sources":["components/cards/Card.tsx","components/cards/FloatingHand.tsx","components/cards/ImageBlurButton.tsx","components/cards/ImageBlurButtonContainer.tsx","components/cards/ImageCard.tsx","components/cards/ImageCardHand.tsx","components/cards/ImageCardBack.tsx","components/cards/ImageCardPreloadHand.tsx","components/cards/ImageCardSelectButton.tsx","components/points/StarPoints.tsx","components/ribbons/Ribbon.tsx","components/ribbons/RibbonGroup.tsx","components/slide-show/SlideShowControls.tsx","components/slide-show/SlideShow.tsx","games/sonhos-pesadelos/PhaseGameOver.tsx","games/sonhos-pesadelos/utils/mock.ts","games/sonhos-pesadelos/components/DreamCard.tsx","games/sonhos-pesadelos/components/DreamBoard.tsx","games/sonhos-pesadelos/StepTellDream.tsx","games/sonhos-pesadelos/components/RulesBlobs.tsx","games/sonhos-pesadelos/PhaseDreamTelling.tsx","games/sonhos-pesadelos/utils/api-requests.ts","games/sonhos-pesadelos/components/AllDreamsClues.tsx","games/sonhos-pesadelos/utils/helpers.ts","games/sonhos-pesadelos/components/DreamBoardVote.tsx","games/sonhos-pesadelos/StepMatchDreams.tsx","games/sonhos-pesadelos/PhaseMatching.tsx","games/sonhos-pesadelos/components/GalleryDreamDisplay.tsx","games/sonhos-pesadelos/components/GalleryGuesses.tsx","games/sonhos-pesadelos/StepResults.tsx","games/sonhos-pesadelos/StepRanking.tsx","games/sonhos-pesadelos/PhaseResolution.tsx","games/sonhos-pesadelos/SessionSonhosPesadelos.tsx","../node_modules/@ant-design/icons-svg/es/asn/CrownFilled.js","../node_modules/@ant-design/icons/es/icons/CrownFilled.js","../node_modules/@ant-design/icons-svg/es/asn/DownSquareOutlined.js","../node_modules/@ant-design/icons/es/icons/DownSquareOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/PauseOutlined.js","../node_modules/@ant-design/icons/es/icons/PauseOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/PictureOutlined.js","../node_modules/@ant-design/icons/es/icons/PictureOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/PlayCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/PlayCircleOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/StepBackwardOutlined.js","../node_modules/@ant-design/icons/es/icons/StepBackwardOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/StepForwardOutlined.js","../node_modules/@ant-design/icons/es/icons/StepForwardOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/TrophyOutlined.js","../node_modules/@ant-design/icons/es/icons/TrophyOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/UpCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/UpCircleOutlined.js"],"sourcesContent":["import clsx from 'clsx';\n// Utils\nimport { getColorFromLetter } from 'utils/helpers';\n\ntype CardProps = {\n  children: any;\n  header?: string;\n  footer?: string;\n  color?: string;\n  size?: 'small' | 'medium' | 'large';\n  randomColor?: boolean;\n  className?: string;\n  headerClassName?: string;\n  footerClassName?: string;\n};\nexport const Card = ({\n  children,\n  header = 'Carta',\n  footer,\n  color = 'none',\n  size = 'medium',\n  randomColor = false,\n  className = '',\n  headerClassName = '',\n  footerClassName = '',\n}: CardProps) => {\n  const baseClass = 'card';\n\n  const bgColor = randomColor\n    ? getColorFromLetter(\n        typeof children === 'string'\n          ? children[0].toUpperCase()\n          : header !== 'Carta'\n          ? header[0].toUpperCase()\n          : 'X'\n      )\n    : color;\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, className)}>\n      <span\n        className={clsx(`${baseClass}__header`, `color-background--${bgColor}`, headerClassName)}\n        style={color.startsWith('#') ? { backgroundColor: color } : {}}\n      >\n        {header}\n      </span>\n      <span className={`${baseClass}__text`}>{children}</span>\n      {footer && <span className={clsx(`${baseClass}__footer`, footerClassName)}>{footer}</span>}\n    </div>\n  );\n};\n","import clsx from 'clsx';\nimport { useState } from 'react';\n// Hooks\nimport { useLanguage } from 'hooks';\n// Components\nimport { AvatarIcon } from 'components/avatars';\nimport { Translate } from 'components/language';\n\ntype FloatingHandProps = {\n  children: any;\n  type?: 'hand' | 'stats';\n  subtitle?: any;\n};\n\nexport function FloatingHand({ children, subtitle = '', type = 'hand' }: FloatingHandProps) {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const { translate } = useLanguage();\n\n  return (\n    <>\n      <div className=\"floating-hand-added-white-space\"></div>\n      <div\n        className={clsx('floating-hand', isExpanded && 'floating-hand--expanded')}\n        onMouseOver={() => setIsExpanded(true)}\n        onMouseLeave={() => setIsExpanded(false)}\n      >\n        <span className=\"floating-hand__label\">\n          <AvatarIcon\n            type={type === 'hand' ? 'hand-of-cards' : 'user-stats'}\n            size={isExpanded ? 40 : 60}\n            className=\"floating-hand__icon\"\n            alt={translate('Mão de Cartas', 'Hand of Cards')}\n          />\n          <Translate pt=\"Passe o mouse para expandir \" en=\"Hover to expand \" />\n          {subtitle}\n        </span>\n        {children}\n      </div>\n    </>\n  );\n}\n","// Ant Design Resources\nimport { Button, Tooltip } from 'antd';\nimport { EyeInvisibleOutlined } from '@ant-design/icons';\n// Utils\nimport { useBlurCards } from 'hooks';\n// Components\nimport { Translate } from 'components/language';\n\ntype ImageBlurButtonProps = {\n  cardId: string;\n};\n\nexport function ImageBlurButton({ cardId }: ImageBlurButtonProps) {\n  const { blurCard, isBlurEnabled } = useBlurCards();\n\n  return isBlurEnabled ? (\n    <Tooltip\n      placement=\"top\"\n      title={\n        <Translate\n          pt=\"Aperte o botão para embaçar a foto caso você tenha alguma fobia\"\n          en=\"Use this button to blur the image in case of any phobia\"\n        />\n      }\n    >\n      <Button ghost onClick={() => blurCard(cardId)} size=\"small\" className=\"image-blur-button\">\n        <EyeInvisibleOutlined /> <Translate pt=\"Credo\" en=\"Blur\" />\n      </Button>\n    </Tooltip>\n  ) : (\n    <></>\n  );\n}\n","import clsx from 'clsx';\n// Components\nimport { ImageBlurButton } from './ImageBlurButton';\n\ntype ImageBlurButtonContainerProps = {\n  cardId: string;\n  className?: string;\n  children: any;\n  [key: string]: any;\n};\n\nexport function ImageBlurButtonContainer({\n  cardId,\n  className,\n  children,\n  ...props\n}: ImageBlurButtonContainerProps) {\n  return (\n    <div className={clsx('image-blur-button-container', className)} {...props}>\n      {children}\n      <ImageBlurButton cardId={cardId} />\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Image } from 'antd';\n// Constants\nimport { PUBLIC_URL } from 'utils/constants';\n// Assets\nimport placeholder from 'assets/images/placeholder.jpg';\n// Hooks\nimport { useBlurCards } from 'hooks';\n\ntype ImageCardProps = {\n  imageId: string;\n  size?: 'small' | 'medium' | 'large';\n  cardWidth?: number;\n  className?: string;\n  preview?: Boolean;\n};\nexport const ImageCard = ({\n  imageId,\n  size = 'medium',\n  cardWidth = 200,\n  className = '',\n  preview = true,\n}: ImageCardProps) => {\n  const { shouldBeBlurred } = useBlurCards();\n\n  const baseClass = 'image-card';\n\n  const fallbackName = `placeholder-${imageId[imageId.length - 1]}`;\n\n  const imageURL = imageId.replace(/-/g, '/');\n\n  const isBlurred = shouldBeBlurred(imageId);\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, isBlurred && `${baseClass}--blur`, className)}>\n      <Image\n        width={cardWidth}\n        src={`${process.env.REACT_APP_TD_IMAGES_URL}${imageURL}.jpg`}\n        placeholder={<Image preview={false} src={placeholder} width={cardWidth} />}\n        fallback={`${PUBLIC_URL.CARDS}${fallbackName}.jpg`}\n        preview={\n          preview && !isBlurred\n            ? {\n                maskClassName: `${baseClass}__preview-mask`,\n              }\n            : false\n        }\n      />\n    </div>\n  );\n};\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Image } from 'antd';\nimport { DownSquareOutlined } from '@ant-design/icons';\n// Hooks\nimport { useCardWidth, useLanguage } from 'hooks';\n// Components\nimport { ImageBlurButton, ImageCard } from '.';\n\ntype ImageCardHandProps = {\n  hand: string[];\n  onSelectCard?: GenericFunction;\n  selectButtonLabel?: string;\n  className?: string;\n  selectButtonClass?: string;\n  sizeRatio?: number;\n  cardSize?: number;\n  minCardSize?: number;\n  disabledSelectButton?: boolean;\n};\n\nexport function ImageCardHand({\n  hand = [],\n  onSelectCard,\n  selectButtonLabel,\n  className = '',\n  selectButtonClass = '',\n  sizeRatio = 8,\n  cardSize,\n  minCardSize = 80,\n  disabledSelectButton = false,\n}: ImageCardHandProps) {\n  const { translate } = useLanguage();\n  // Prefers cardSize otherwise calculates width based on screen and ratio\n  const cardWidth = useCardWidth(sizeRatio, 32, minCardSize);\n\n  return (\n    <Image.PreviewGroup>\n      <div className={clsx('image-card-hand', className)}>\n        {hand.map((cardId) => {\n          return (\n            <div key={`hand-${cardId}`} className=\"image-card-hand__card-container\">\n              {Boolean(onSelectCard) && (\n                <Button\n                  icon={<DownSquareOutlined />}\n                  className={selectButtonClass}\n                  onClick={() => onSelectCard!(cardId)}\n                  size=\"small\"\n                  disabled={disabledSelectButton}\n                >\n                  {translate('Selecionar', 'Select', selectButtonLabel)}\n                </Button>\n              )}\n              <ImageCard imageId={cardId} cardWidth={cardSize || cardWidth} />\n              <ImageBlurButton cardId={cardId} />\n            </div>\n          );\n        })}\n      </div>\n    </Image.PreviewGroup>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Image } from 'antd';\n// Resources\nimport placeholder from 'assets/images/placeholder.jpg';\nimport { useBlurCards } from 'hooks';\n\ntype ImageCardBackProps = {\n  size?: 'small' | 'medium' | 'large';\n  cardWidth?: number | string;\n  className?: string;\n  previewImageId?: string;\n};\n\nexport const ImageCardBack = ({\n  size = 'medium',\n  cardWidth = 200,\n  className = '',\n  previewImageId,\n}: ImageCardBackProps) => {\n  const baseClass = 'image-card-back';\n  const { shouldBeBlurred } = useBlurCards();\n  const isBlurred = shouldBeBlurred(previewImageId);\n  const imageURL = (previewImageId ?? '').replace(/-/g, '/');\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, className)}>\n      <Image\n        width={cardWidth}\n        src={placeholder}\n        preview={\n          Boolean(previewImageId)\n            ? !isBlurred\n              ? {\n                  maskClassName: 'image-card__preview-mask',\n                  src: `${process.env.REACT_APP_TD_IMAGES_URL}${imageURL}.jpg`,\n                }\n              : false\n            : false\n        }\n      />\n    </div>\n  );\n};\n","// Components\nimport { ImageCard } from './ImageCard';\n\ntype ImageCardPreloadHandProps = {\n  hand: string[];\n};\nexport function ImageCardPreloadHand({ hand }: ImageCardPreloadHandProps) {\n  if (!hand) return <span></span>;\n  return (\n    <div className=\"image-card-preload-hand\">\n      {hand.map((cardId) => (\n        <ImageCard imageId={cardId} cardWidth={1} key={`pre-load-${cardId}`} preview={false} />\n      ))}\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Button } from 'antd';\nimport { UpCircleOutlined } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\n\ntype ImageCardSelectButtonProps = {\n  isSelected?: boolean;\n  cardId: ImageCard;\n  onClick: GenericFunction;\n  className?: string;\n  selectLabel?: string;\n  deselectLabel?: string;\n};\n\nexport function ImageCardSelectButton({\n  onClick,\n  cardId,\n  selectLabel,\n  deselectLabel,\n  isSelected = false,\n}: ImageCardSelectButtonProps) {\n  return (\n    <Button\n      shape=\"round\"\n      size=\"small\"\n      ghost={!isSelected}\n      className=\"image-card-select-button\"\n      onClick={() => onClick(cardId)}\n    >\n      <UpCircleOutlined />\n      {isSelected ? (\n        <Translate pt=\"Desmarcar\" en=\"Deselect\" custom={deselectLabel} />\n      ) : (\n        <Translate pt=\"Selecionar\" en=\"Select\" custom={selectLabel} />\n      )}\n      <UpCircleOutlined />\n    </Button>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { StarFilled } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\n\ntype StarPointsProps = {\n  keyPrefix: string;\n  quantity?: number;\n  className?: string;\n  hideText?: boolean;\n};\n\nexport const StarPoints = ({ keyPrefix, quantity, className, hideText }: StarPointsProps) => {\n  if (!quantity) {\n    return <span />;\n  }\n\n  const isNegative = quantity < 0;\n  const num = Math.abs(quantity);\n\n  const StarsArray = Array.from({ length: num }, (_, i) => <StarFilled key={`${keyPrefix}-${i}`} />);\n\n  return (\n    <span className={clsx('star-points', isNegative && 'star-points--negative', className)}>\n      {isNegative ? '-' : '+'} <span className=\"star-points__stars\">{StarsArray}</span>\n      {!hideText && (\n        <>\n          <Translate pt=\"ponto\" en=\"point\" />\n          {num > 1 ? 's' : ''}\n        </>\n      )}\n    </span>\n  );\n};\n","import clsx from 'clsx';\n// Utils\nimport { getAnimationClass, getColorFromLetter } from 'utils/helpers';\n\ntype RibbonProps = {\n  label: string;\n  position?: 'absolute' | 'static';\n};\n\nexport function Ribbon({ label, position = 'absolute' }: RibbonProps): JSX.Element {\n  return (\n    <div className={clsx('ribbon', `ribbon--${position}`)}>\n      <div\n        className={clsx(\n          'ribbon__content',\n          `ribbon__content--${label}`,\n          `color-background--${getColorFromLetter(label)}`,\n          getAnimationClass('bounceIn')\n        )}\n      >\n        {label}\n      </div>\n    </div>\n  );\n}\n","import { Ribbon } from './Ribbon';\n\ntype RibbonGroupProps = {\n  labels: string[];\n};\n\nexport function RibbonGroup({ labels }: RibbonGroupProps) {\n  return (\n    <div className=\"ribbon-group ribbon--absolute\">\n      {labels.length > 0 &&\n        labels.map((label) => (\n          <Ribbon\n            key={label}\n            label={label.length > 0 ? label.charAt(label.length - 1) : label}\n            position=\"static\"\n          />\n        ))}\n    </div>\n  );\n}\n","import { useEffect } from 'react';\nimport { useTimer } from 'react-timer-hook';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\nimport {\n  PauseOutlined,\n  PlayCircleOutlined,\n  StepBackwardOutlined,\n  StepForwardOutlined,\n  TrophyOutlined,\n} from '@ant-design/icons';\n// Utils\nimport { inNSeconds } from 'utils/helpers';\n// Components\nimport { Translate } from 'components/language';\n\ntype SlideShowControlsProps = {\n  length: number;\n  activeIndex: number;\n  setActiveIndex: GenericFunction;\n  setStep: GenericFunction;\n  disableControls: boolean;\n  barColor: string;\n  windowDuration: number;\n};\n\nexport function SlideShowControls({\n  length,\n  activeIndex,\n  setActiveIndex,\n  setStep,\n  disableControls,\n  barColor = 'gray',\n  windowDuration = 10,\n}: SlideShowControlsProps) {\n  const { minutes, seconds, isRunning, pause, resume } = useTimer({\n    expiryTimestamp: inNSeconds(windowDuration * length),\n    autoStart: true,\n    onExpire: () => setStep(2),\n  });\n\n  const time = minutes * 60 + seconds;\n\n  // Automatically go to the next window every {windowDuration} seconds\n  useEffect(() => {\n    if (time < windowDuration * length && time > 0 && time % windowDuration === 0) {\n      setActiveIndex((s: number) => Math.min(s + 1, length - 1));\n    }\n  }, [time, setActiveIndex, length, windowDuration]);\n\n  const goToPreviousStep = () => {\n    setActiveIndex((s: number) => Math.max(s - 1, 0));\n  };\n\n  const goToNextStep = () => {\n    setActiveIndex((s: number) => Math.min(s + 1, length - 1));\n  };\n\n  return (\n    <div className=\"slide-show__controls\">\n      <div className=\"slide-show__controls-timer-bar\">\n        <div className=\"slide-show__controls-timer-bar-base\">\n          {Array(length)\n            .fill('')\n            .map((e, i) => {\n              return (\n                <div\n                  key={`control-timer-bar-${e + i}`}\n                  className=\"slide-show__controls-timer-bar-node\"\n                  style={{ width: `${99 / length}%` }}\n                >\n                  {e}\n                </div>\n              );\n            })}\n        </div>\n        <span\n          className=\"slide-show__controls-timer-bar-pill\"\n          style={{\n            width: `${Math.abs((windowDuration * time) / length - 100)}%`,\n            backgroundColor: barColor,\n          }}\n        ></span>\n      </div>\n\n      {!disableControls && (\n        <Space>\n          <Button\n            size=\"large\"\n            icon={<StepBackwardOutlined />}\n            onClick={goToPreviousStep}\n            disabled={disableControls || activeIndex === 0}\n          >\n            <Translate pt=\"Anterior\" en=\"Previous\" />\n          </Button>\n          <Button\n            size=\"large\"\n            icon={isRunning ? <PauseOutlined /> : <PlayCircleOutlined />}\n            onClick={isRunning ? pause : resume}\n          />\n          <Button\n            size=\"large\"\n            onClick={goToNextStep}\n            disabled={disableControls || activeIndex === length - 1}\n          >\n            <Translate pt=\"Próximo\" en=\"Next\" /> <StepForwardOutlined />\n          </Button>\n          <Button\n            size=\"large\"\n            onClick={() => setStep(2)}\n            icon={<TrophyOutlined />}\n            disabled={disableControls}\n          >\n            <Translate pt=\"Ver Ranking\" en=\"See Ranking\" />\n          </Button>\n        </Space>\n      )}\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Components\nimport { SlideShowControls } from './SlideShowControls';\n\ntype SlideShowProps = {\n  players: GamePlayers;\n  children: [ReactChildren, ReactChildren];\n  length: number;\n  activeIndex: number;\n  setActiveIndex: GenericFunction;\n  setStep: GenericFunction;\n  disableControls: boolean;\n  barColor: string;\n  windowDuration: number;\n  className?: string;\n  leftClassName?: string;\n  rightClassName?: string;\n};\n\n/**\n * Display Slick show with a left and right sides with full navigation controls\n * @param props\n * @returns\n */\nexport function SlideShow({\n  children,\n  length,\n  activeIndex,\n  setActiveIndex,\n  setStep,\n  disableControls,\n  barColor,\n  windowDuration = 10,\n  className = '',\n  leftClassName = '',\n  rightClassName = '',\n}: SlideShowProps) {\n  return (\n    <div className={clsx('slide-show', className)}>\n      <div className={clsx('slide-show__left', leftClassName)} id=\"gallery-left\">\n        {children[0]}\n      </div>\n      <div className={clsx('slide-show__right', rightClassName)} id=\"gallery-right\">\n        {children[1]}\n      </div>\n      <SlideShowControls\n        length={length}\n        activeIndex={activeIndex}\n        setActiveIndex={setActiveIndex}\n        setStep={setStep}\n        disableControls={disableControls}\n        barColor={barColor}\n        windowDuration={windowDuration}\n      />\n    </div>\n  );\n}\n","// Components\nimport { GameOverWrapper } from 'components/game-over';\n\nfunction PhaseGameOver({ state, info }: PhaseProps) {\n  return <GameOverWrapper info={info} state={state} announcementIcon=\"trophy\" />;\n}\n\nexport default PhaseGameOver;\n","import { shuffle } from 'utils/helpers';\n\nconst mockedDreamClues = [\n  'água',\n  'bola',\n  'calderão do huck',\n  'dedo',\n  'esmalte',\n  'fatídico',\n  'ganhar',\n  'hereditário',\n  'simpático',\n  'abismo',\n  'rola',\n  'a branca de neve',\n  'oops i did it again',\n  'pesquisa',\n  'saborosa',\n  'amargo',\n];\n\nexport const mockDream = (): string => shuffle(mockedDreamClues)[0];\n\nexport const mockVotes = (dreams: SDream[], table: ImageCard[], user: GamePlayer): StringDictionary => {\n  const playersIds = shuffle(dreams.map((dream) => dream.id).filter((playerId) => playerId !== user.id));\n  const shuffledTable = shuffle(table);\n\n  return playersIds.reduce((acc: StringDictionary, playerId, index) => {\n    acc[playerId] = shuffledTable[index];\n    return acc;\n  }, {});\n};\n","import clsx from 'clsx';\nimport { ImageBlurButton, ImageCard } from 'components/cards';\n// Components\n\ntype DreamCardProps = {\n  cardId: string;\n  cardWidth: number;\n  isDream?: boolean;\n  isNightmare?: boolean;\n  flipped?: boolean;\n  hideBlurButton?: boolean;\n};\n\nexport function DreamCard({\n  cardId,\n  cardWidth,\n  isDream = false,\n  isNightmare = false,\n  hideBlurButton = false,\n}: DreamCardProps) {\n  const baseClass = 's-dream-board-card';\n\n  return (\n    <>\n      <ImageCard\n        imageId={cardId}\n        cardWidth={cardWidth}\n        className={clsx(\n          baseClass,\n          isDream && `${baseClass}--dream`,\n          isNightmare && `${baseClass}--nightmare`\n        )}\n      />\n      {!hideBlurButton && <ImageBlurButton cardId={cardId} />}\n    </>\n  );\n}\n","import clsx from 'clsx';\n// Hooks\nimport { useCardWidth } from 'hooks';\n// Components\nimport { Translate } from 'components/language';\nimport { DreamCard } from './DreamCard';\n\ntype DreamBoardProps = {\n  table: ImageCard[];\n  user: GamePlayer;\n  className?: string;\n};\n\nexport function DreamBoard({ table, user, className = '' }: DreamBoardProps) {\n  const cardWidth = useCardWidth(table.length + 1, 20);\n\n  return (\n    <ul className={clsx('s-dream-board', className)}>\n      {table.map((cardId) => {\n        const isDream = user.dreamId === cardId;\n        const isNightmare = user.nightmareId === cardId;\n\n        return (\n          <li\n            className=\"s-dream-board__entry\"\n            key={`board-${cardId}`}\n            style={{ maxWidth: `${cardWidth + 20}px` }}\n          >\n            <DreamCard cardId={cardId} cardWidth={cardWidth} isDream={isDream} isNightmare={isNightmare} />\n            {isDream && (\n              <div className=\"s-dream-board__dream-label\" style={{ maxWidth: `${cardWidth}px` }}>\n                <Translate pt=\"Sonho\" en=\"Pesadelo\" />\n              </div>\n            )}\n            {isNightmare && (\n              <div className=\"s-dream-board__nightmare-label\" style={{ maxWidth: `${cardWidth}px` }}>\n                <Translate pt=\"Pesadelo\" en=\"Nightmare\" />\n              </div>\n            )}\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, Input, Space } from 'antd';\n// Hooks\nimport { useLanguage, useLoading, useMock } from 'hooks';\n// Utils\nimport { mockDream } from './utils/mock';\n// Components\n\nimport { DreamBoard } from './components/DreamBoard';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Card } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { ReadyPlayersBar } from 'components/players';\n\ntype StepTellDreamProps = {\n  players: GamePlayers;\n  table: ImageCard[];\n  user: GamePlayer;\n  onSubmitDream: GenericFunction;\n};\n\nexport function StepTellDream({ players, table, user, onSubmitDream }: StepTellDreamProps) {\n  const { isLoading } = useLoading();\n  const { translate } = useLanguage();\n  const [dream, setDream] = useState('');\n\n  // DEV: mocks clues\n  useMock(() => {\n    onSubmitDream({ dream: mockDream() });\n  }, []);\n\n  const onSubmitDreamsClick = () => {\n    onSubmitDream({\n      dream,\n    });\n  };\n\n  return (\n    <Step fullWidth className=\"s-tell-dream-step\">\n      <Title>\n        <Card\n          header={translate('Tema do Sonho', 'Dream Theme')}\n          className=\"s-theme-card\"\n          randomColor\n          footer={Array(user.theme.level).fill('•').join('')}\n          footerClassName=\"s-theme-card__description\"\n        >\n          {user.theme.text}\n        </Card>\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt=\"Dentro do tema acima, escreva sua dica no campo abaixo. Lembre-se que seu sonho é a carta de borda amarela e seu pesadelo é a carta de borda roxa.\"\n          en=\"Write a clue in the field below within the given theme. Remember that your dream is the card with the yellow border and your nightmare is the card with the purple border.\"\n        />\n      </Instruction>\n\n      <DreamBoard table={table} user={user} />\n\n      <Space className=\"space-container\" align=\"center\">\n        <Input\n          size=\"large\"\n          onPressEnter={onSubmitDreamsClick}\n          onChange={(e) => setDream(e.target.value)}\n          placeholder={translate('Escreva aqui', 'Write here')}\n        />\n      </Space>\n\n      <Space className=\"space-container\" align=\"center\">\n        <Button type=\"primary\" disabled={isLoading || !Boolean(dream)} onClick={onSubmitDreamsClick}>\n          <Translate pt=\"Enviar Sonho\" en=\"Submit Dream\" />\n        </Button>\n      </Space>\n\n      <ReadyPlayersBar players={players} />\n    </Step>\n  );\n}\n","import { Translate } from 'components/language';\n\nexport const DreamTellingRules = () => (\n  <Translate\n    pt={\n      <>\n        Escreva uma dica dentro do tema dado para o seu sonho (carta com borda amarela).\n        <br />\n        Preste atenção em seu pesadelo (carta com borda roxa), se alguém achar que sua dica é relacionada a\n        seu pesadelo, você perde pontos.\n      </>\n    }\n    en={\n      <>\n        Write a clue for your dream (yellow bordered card).\n        <br />\n        Pay attention to your nightmare (purple bordered card) because if any player thinks that your clue is\n        related to that card, you lose points.\n      </>\n    }\n  />\n);\n","// Hooks\nimport { useIsUserReady, useUser, useLanguage, useStep } from 'hooks';\nimport { useOnSubmitDreamAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { RoundAnnouncement } from 'components/round';\nimport { ImageCardPreloadHand } from 'components/cards';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { StepTellDream } from './StepTellDream';\nimport { DreamTellingRules } from './components/RulesBlobs';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\n\nfunction PhaseDreamTelling({ state, players, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, goToNextStep, setStep } = useStep(0);\n  const user = useUser(players);\n  const isUserReady = useIsUserReady(players, state);\n\n  const onSubmitDream = useOnSubmitDreamAPIRequest(setStep);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.SONHOS_PESADELOS.DREAM_TELLING}>\n      <StepSwitcher step={step} conditions={[!isUserReady]} players={players}>\n        {/* Step 0 */}\n        <RoundAnnouncement round={state.round} buttonText=\"\" onPressButton={goToNextStep} time={5}>\n          <Instruction contained>\n            <Translate\n              pt=\"Sabe quando você sonha com uma coisa, mas não consegue explicar? Então...\"\n              en=\"You know when you dream about something but you can't quite explain? So...\"\n            />\n          </Instruction>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <PhaseAnnouncement\n          type=\"dream\"\n          title={translate('Conte-nos sobre seu sonho', 'Tell us about your dream...')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <DreamTellingRules />\n          </Instruction>\n          <ImageCardPreloadHand hand={state.table} />\n        </PhaseAnnouncement>\n\n        {/* Step 2 */}\n        <StepTellDream players={players} table={state.table} onSubmitDream={onSubmitDream} user={user} />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseDreamTelling;\n","import { SONHOS_PESADELOS_API } from 'services/adapters';\nimport { useAPICall, useLanguage } from 'hooks';\n\nexport function useOnSubmitDreamAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: SONHOS_PESADELOS_API.submitAction,\n    actionName: 'submit-dream',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(0),\n    successMessage: translate('Sonho submetido com sucesso', 'Dream submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar seu sonho',\n      'Oops, the application found an error while trying to submit your dream'\n    ),\n  });\n\n  return (payload: SubmitDreamPayload) => {\n    request({\n      action: 'SUBMIT_DREAM',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitVotesAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: SONHOS_PESADELOS_API.submitAction,\n    actionName: 'submit-votes',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: translate('Votos submetidos com sucesso', 'Votes submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar seus votos',\n      'Oops, the application found an error while trying to submit your votes'\n    ),\n  });\n\n  return (payload: SubmitVotesPayload) => {\n    request({\n      action: 'SUBMIT_VOTING',\n      ...payload,\n    });\n  };\n}\n","import clsx from 'clsx';\n// Constants\nimport { LETTERS } from 'utils/constants';\n// Utils\nimport { getColorFromLetter, getEntryId } from 'utils/helpers';\n// Components\nimport { Card } from 'components/cards';\n\ntype AllDreamsCluesProps = {\n  dreams: SDream[];\n  activeItem: string;\n  onActivateItem: GenericFunction;\n  votes: StringDictionary;\n  players: GamePlayers;\n};\n\nexport function AllDreamsClues({ dreams, activeItem, onActivateItem, votes, players }: AllDreamsCluesProps) {\n  const liButtonBaseClass = 'a-evaluation-all-cards__li-card-button';\n\n  return (\n    <ul className=\"a-evaluation-all-cards\">\n      {dreams.map(({ id, dream }, index) => {\n        const player = players[id];\n        const letter = LETTERS[index];\n        const cardEntryId = getEntryId(['dream', id, letter]);\n        const isActive = activeItem === cardEntryId;\n        const isUsed = Object.keys(votes).includes(cardEntryId);\n\n        return (\n          <li\n            role=\"button\"\n            key={cardEntryId}\n            className={clsx(\n              liButtonBaseClass,\n              isActive && `${liButtonBaseClass}--active`,\n              isUsed && `${liButtonBaseClass}--used`\n            )}\n            onClick={() => onActivateItem(cardEntryId)}\n          >\n            <Card\n              color={getColorFromLetter(letter)}\n              header={letter}\n              size=\"medium\"\n              footer={player.name}\n              className=\"s-clue-card\"\n              footerClassName=\"s-clue-card__footer\"\n            >\n              {dream}\n            </Card>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import { LETTERS, SEPARATOR } from 'utils/constants';\nimport { getEntryId, shuffle } from 'utils/helpers';\n\nexport const getClueId = (votes: StringDictionary, cardEntryId: string): string[] => {\n  return Object.keys(votes).filter((key) => votes[key] === cardEntryId);\n};\n\nexport const cleanupVotes = (votes: StringDictionary, user: GamePlayer): StringDictionary => {\n  return Object.entries(votes).reduce((acc: StringDictionary, [dreamEntryKey, cardEntryKey]) => {\n    const playerId = dreamEntryKey.split(SEPARATOR)[1];\n    const cardId = cardEntryKey.split(SEPARATOR)[1];\n\n    if (playerId !== user.id) {\n      acc[playerId] = cardId;\n    }\n\n    return acc;\n  }, {});\n};\n\nexport const selectOwnVote = (dreams: SDream[], user: GamePlayer) =>\n  dreams.reduce((acc: StringDictionary, entry, index) => {\n    if (entry.id === user.id) {\n      const clueEntryId = getEntryId(['dream', entry.id, LETTERS[index]]);\n      const cardEntryId = getEntryId(['card', user.dreamId]);\n      acc[clueEntryId] = cardEntryId;\n    }\n    return acc;\n  }, {});\n\nexport const voteRandomly = (votes: StringDictionary, dreams: SDream[], table: ImageCard[]) => {\n  const randomVotes = dreams.reduce((acc: StringDictionary, entry, index) => {\n    const randomTable = shuffle(table);\n    const clueEntryId = getEntryId(['dream', entry.id, LETTERS[index]]);\n    const cardEntryId = getEntryId(['card', randomTable[0]]);\n    acc[clueEntryId] = cardEntryId;\n\n    return acc;\n  }, {});\n\n  return {\n    ...randomVotes,\n    ...votes,\n  };\n};\n","import clsx from 'clsx';\n// Hooks\nimport { useCardWidth } from 'hooks';\n// Utils\nimport { getEntryId } from 'utils/helpers';\nimport { getClueId } from '../utils/helpers';\n// Components\n\nimport { DreamCard } from './DreamCard';\nimport { RibbonGroup } from 'components/ribbons';\nimport { ImageBlurButton, ImageCardSelectButton } from 'components/cards';\n\ntype DreamBoardVoteProps = {\n  table: ImageCard[];\n  user: GamePlayer;\n  activeItem: string;\n  onActivateItem: GenericFunction;\n  votes: PlainObject;\n};\n\nexport function DreamBoardVote({ table, activeItem, onActivateItem, votes }: DreamBoardVoteProps) {\n  const cardWidth = useCardWidth(table.length, 20);\n  const liButtonBaseClass = 'a-evaluation-all-drawings__li-drawing-button';\n\n  return (\n    <ul className=\"s-dream-board\">\n      {table.map((cardId) => {\n        const cardEntryId = getEntryId(['card', cardId]);\n        const isActive = activeItem === cardEntryId;\n        const ribbonIds = getClueId(votes, cardEntryId);\n\n        return (\n          <li\n            className={clsx(\n              's-dream-board__entry',\n              liButtonBaseClass,\n              isActive && `${liButtonBaseClass}--active`\n            )}\n            key={`board-${cardId}`}\n            style={{ maxWidth: `${cardWidth + 20}px` }}\n          >\n            <div className=\"s-dream-board__card-container\">\n              <RibbonGroup labels={ribbonIds} />\n              <DreamCard cardId={cardId} cardWidth={cardWidth} hideBlurButton />\n              <ImageCardSelectButton cardId={cardEntryId} onClick={onActivateItem} />\n            </div>\n            <ImageBlurButton cardId={cardId} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import clsx from 'clsx';\nimport { useEffect } from 'react';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useLanguage, useLoading, useMock, useVotingMatch } from 'hooks';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { Translate } from 'components/language';\nimport { ReadyPlayersBar } from 'components/players';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { AllDreamsClues } from './components/AllDreamsClues';\nimport { DreamBoardVote } from './components/DreamBoardVote';\nimport { cleanupVotes, selectOwnVote, voteRandomly } from './utils/helpers';\nimport { mockVotes } from './utils/mock';\n\ntype StepMatchDreamsProps = {\n  onSubmitVotes: GenericFunction;\n  players: GamePlayers;\n  table: ImageCard[];\n  user: GamePlayer;\n  dreams: SDream[];\n};\n\nexport function StepMatchDreams({ players, user, table, onSubmitVotes, dreams }: StepMatchDreamsProps) {\n  const { isLoading } = useLoading();\n  const { translate } = useLanguage();\n\n  const { votes, setVotes, activeItem, activateItem, isVotingComplete } = useVotingMatch(\n    'dream',\n    true,\n    dreams.length\n  );\n\n  // Auto-select own clue\n  useEffect(() => {\n    const userClues = selectOwnVote(dreams, user);\n    if (userClues) {\n      setVotes((s: StringDictionary) => ({ ...s, ...userClues }));\n    }\n  }, []); //eslint-disable-line\n\n  // DEV: Random vote\n  useMock(() => {\n    onSubmitVotes({\n      votes: mockVotes(dreams, table, user),\n    });\n  }, []);\n\n  const onSubmitDreams = () => {\n    onSubmitVotes({\n      votes: cleanupVotes(votes, user),\n    });\n  };\n\n  return (\n    <Step fullWidth className=\"s-tell-dream-step\">\n      <Title>{translate('Adivinhação', 'Match the Pairs')}</Title>\n      <Instruction contained>\n        <Translate\n          pt=\"Clique em uma carta e então uma botão da imagem correspondente ou vice e versa. Aperte enviar quando terminar te combinar todas as dicas.\"\n          en=\"Click on a clue then on an image button or vice versa. When you're done matching all clues, press Submit.\"\n        />\n      </Instruction>\n\n      <Space className=\"space-container\" align=\"center\">\n        <Button\n          type=\"default\"\n          disabled={isLoading}\n          onClick={() => setVotes(voteRandomly(votes, dreams, table))}\n          className={clsx(isVotingComplete && getAnimationClass('tada'))}\n          size=\"large\"\n        >\n          <Translate pt=\"Vote pra mim\" en=\"Vote for me\" />\n        </Button>\n        <Button\n          type=\"primary\"\n          disabled={isLoading || !isVotingComplete}\n          onClick={onSubmitDreams}\n          className={clsx(isVotingComplete && getAnimationClass('tada'))}\n          size=\"large\"\n        >\n          <Translate pt=\"Enviar\" en=\"Submit\" />\n        </Button>\n      </Space>\n\n      <DreamBoardVote\n        user={user}\n        table={table}\n        activeItem={activeItem}\n        onActivateItem={activateItem}\n        votes={votes}\n      />\n\n      <AllDreamsClues\n        dreams={dreams}\n        activeItem={activeItem}\n        onActivateItem={activateItem}\n        votes={votes}\n        players={players}\n      />\n\n      <ReadyPlayersBar players={players} />\n    </Step>\n  );\n}\n","// Hooks\nimport { useIsUserReady, useUser, useLanguage, useStep } from 'hooks';\nimport { useOnSubmitVotesAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Translate } from 'components/language';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { StepMatchDreams } from './StepMatchDreams';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\n\nfunction PhaseMatching({ state, players, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, goToNextStep, setStep } = useStep(0);\n  const user = useUser(players);\n  const isUserReady = useIsUserReady(players, state);\n\n  const onSubmitVotes = useOnSubmitVotesAPIRequest(setStep);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.SONHOS_PESADELOS.MATCHING}>\n      <StepSwitcher step={step} conditions={[!isUserReady]} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          type=\"evaluate\"\n          title={translate('Combine os sonhos', 'Match the dreams')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  Selecione os pares de dica e carta.\n                  <br />\n                  Mais de um jogador pode ter o mesmo sonho.\n                </>\n              }\n              en={\n                <>\n                  Match the pairs of cards and clues.\n                  <br />\n                  More than one player may have the same card.\n                </>\n              }\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepMatchDreams\n          players={players}\n          user={user}\n          table={state.table}\n          onSubmitVotes={onSubmitVotes}\n          dreams={state.dreams}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseMatching;\n","import { AvatarName } from 'components/avatars';\nimport { ImageCard } from 'components/cards';\nimport { useCardWidth } from 'hooks';\n\ntype GalleryDreamDisplayProps = {\n  entry: SGalleryEntry;\n  activePlayer: GamePlayer;\n};\n\nexport function GalleryDreamDisplay({ entry, activePlayer }: GalleryDreamDisplayProps) {\n  const cardWidth = useCardWidth(5, 40);\n  return (\n    <div className=\"s-gallery-dream-display\">\n      <div className=\"s-gallery-dream-display__player\">\n        <AvatarName player={activePlayer} />\n      </div>\n      <div className=\"s-gallery-dream-display__theme-container\">\n        <div className=\"s-gallery-dream-display__theme\">{activePlayer.theme.text}:</div>\n        <div className=\"s-gallery-dream-display__dream\">{entry.dream}</div>\n      </div>\n      <div className=\"s-gallery-dream-display__dream-image-container\">\n        <ImageCard\n          imageId={entry.dreamId}\n          cardWidth={cardWidth}\n          className=\"s-gallery-dream-display__dream-image\"\n        />\n      </div>\n    </div>\n  );\n}\n","import { Avatar as AntAvatar } from 'antd';\nimport { Avatar } from 'components/avatars';\nimport { StarPoints } from 'components/points';\nimport { useCardWidth } from 'hooks';\nimport { DreamCard } from './DreamCard';\n\ntype GalleryGuessesProps = {\n  entry: SGalleryEntry;\n  players: GamePlayers;\n  correctGuessPoints: number;\n};\n\nexport function GalleryGuesses({ entry, players, correctGuessPoints }: GalleryGuessesProps) {\n  const cardWidth = useCardWidth(8, 20);\n  return (\n    <ul className=\"s-gallery-guesses\">\n      {entry.cards.map((cardEntry) => {\n        return (\n          <li\n            key={`gallery-guess-${cardEntry.cardId}`}\n            className=\"s-gallery-guesses__votes-container\"\n            style={{ width: `${cardWidth + 16}px` }}\n          >\n            <div>\n              <DreamCard\n                cardId={cardEntry.cardId}\n                cardWidth={cardWidth}\n                isDream={cardEntry.isDream}\n                isNightmare={cardEntry.isNightmare}\n                hideBlurButton\n              />\n            </div>\n            <div className=\"s-gallery-guesses__votes\">\n              <AntAvatar.Group>\n                {cardEntry.votes.map((playerId) => {\n                  const player = players[playerId];\n                  return <Avatar id={player.avatarId} alt={player.name} size=\"small\" />;\n                })}\n              </AntAvatar.Group>\n              {cardEntry.votes.length > 0 && cardEntry.isDream && (\n                <StarPoints quantity={correctGuessPoints} keyPrefix={'dream-correct'} hideText />\n              )}\n\n              {cardEntry.votes.length > 0 && cardEntry.isNightmare && (\n                <StarPoints quantity={-1} keyPrefix={'dream-incorrect'} hideText />\n              )}\n            </div>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","// Hooks\nimport { useLanguage } from 'hooks';\n// Components\n\nimport { GalleryDreamDisplay } from './components/GalleryDreamDisplay';\nimport { getAvatarColorById } from 'utils/helpers';\nimport { GalleryGuesses } from './components/GalleryGuesses';\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\nimport { SlideShow } from 'components/slide-show';\n\ntype StepResultsProps = {\n  players: GamePlayers;\n  gallery: SGalleryEntry[];\n  activeIndex: number;\n  setActiveIndex: GenericFunction;\n  setStep: GenericFunction;\n  isFirstGalleryRunThrough: boolean;\n  correctGuessPoints: number;\n};\n\nexport function StepResults({\n  players,\n  gallery,\n  activeIndex,\n  setActiveIndex,\n  setStep,\n  isFirstGalleryRunThrough,\n  correctGuessPoints,\n}: StepResultsProps) {\n  const { translate } = useLanguage();\n\n  const galleryEntry = gallery[activeIndex];\n  const activePlayer = players[galleryEntry.playerId];\n\n  return (\n    <Step fullWidth className=\"s-results-step\">\n      <Title>{translate('Resultado', 'Results')}</Title>\n\n      <SlideShow\n        players={players}\n        length={gallery.length}\n        activeIndex={activeIndex}\n        setActiveIndex={setActiveIndex}\n        setStep={setStep}\n        disableControls={isFirstGalleryRunThrough}\n        barColor={getAvatarColorById(activePlayer.avatarId)}\n        windowDuration={10}\n      >\n        <GalleryDreamDisplay entry={galleryEntry} activePlayer={activePlayer} />\n        <GalleryGuesses entry={galleryEntry} players={players} correctGuessPoints={correctGuessPoints} />\n      </SlideShow>\n    </Step>\n  );\n}\n","// Ant Design Resources\nimport { Button } from 'antd';\nimport { PictureOutlined } from '@ant-design/icons';\nimport { Step } from 'components/steps';\nimport { StepRankingWrapper } from 'components/ranking';\nimport { Translate } from 'components/language';\nimport { RoundsLeftInstruction } from 'components/text';\nimport { AdminNextRoundButton } from 'components/admin';\n// Components\n\ntype StepRankingProps = {\n  players: GamePlayers;\n  ranking: GameRanking;\n  round: GameRound;\n  goToPreviousStep: GenericFunction;\n  setActiveIndex: GenericFunction;\n  isLastRound?: boolean;\n  correctGuessPoints: number;\n};\n\nexport function StepRanking({\n  players,\n  ranking,\n  round,\n  goToPreviousStep,\n  setActiveIndex,\n  isLastRound,\n  correctGuessPoints,\n}: StepRankingProps) {\n  return (\n    <Step>\n      <StepRankingWrapper\n        players={players}\n        ranking={ranking}\n        gainedPointsDescriptions={[\n          <Translate pt=\"Votos corretos\" en=\"Correct guesses\" />,\n          <Translate\n            pt=\"Votos corretos em seu sonho por outros jogadores\"\n            en=\"Correct guesses on your dream by other players\"\n          />,\n          <Translate pt=\"Votos em pesadelos\" en=\"Nightmares selected\" />,\n        ]}\n      />\n\n      {/* <PopoverRule content={<ScoringRules />} /> */}\n\n      {round.current < round.total && <RoundsLeftInstruction round={round} />}\n\n      <Button\n        size=\"large\"\n        onClick={() => {\n          goToPreviousStep();\n          setActiveIndex(0);\n        }}\n        icon={<PictureOutlined />}\n      >\n        <Translate pt=\"Ver Galeria De Novo\" en=\"See Gallery Again\" />\n      </Button>\n\n      <AdminNextRoundButton round={round} lastRound={isLastRound} />\n    </Step>\n  );\n}\n","// Hooks\nimport { useIsUserReady, useLanguage, useSlideShow, useStep } from 'hooks';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Translate } from 'components/language';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { StepResults } from './StepResults';\nimport { StepRanking } from './StepRanking';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\n\nfunction PhaseResolution({ state, players, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, goToNextStep, goToPreviousStep, setStep } = useStep(0);\n  const isUserReady = useIsUserReady(players, state);\n  const { activeIndex, setActiveIndex, isFirstGalleryRunThrough } = useSlideShow(state.gallery.length);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.SONHOS_PESADELOS.RESOLUTION}>\n      <StepSwitcher step={step} conditions={[!isUserReady]} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          type=\"countdown\"\n          title={translate('Resultado', 'Results')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <Translate\n              pt={<>Acertos ganham {state.correctGuessPoints} pontos nessa rodada.</>}\n              en={<>Correct guesses get {state.correctGuessPoints} points this round.</>}\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepResults\n          players={players}\n          gallery={state.gallery}\n          activeIndex={activeIndex}\n          setActiveIndex={setActiveIndex}\n          setStep={setStep}\n          isFirstGalleryRunThrough={isFirstGalleryRunThrough}\n          correctGuessPoints={state.correctGuessPoints}\n        />\n\n        {/* Step 2 */}\n        <StepRanking\n          players={players}\n          ranking={state.ranking}\n          round={state.round}\n          goToPreviousStep={goToPreviousStep}\n          setActiveIndex={setActiveIndex}\n          correctGuessPoints={state.correctGuessPoints}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseResolution;\n","// Constants\nimport { GAME_COLLECTION } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport PhaseGameOver from './PhaseGameOver';\nimport PhaseDreamTelling from './PhaseDreamTelling';\nimport PhaseMatching from './PhaseMatching';\nimport PhaseResolution from './PhaseResolution';\n\nfunction SessionSonhosPesadelos({ gameId }: SessionProps) {\n  function getActiveComponent(phase: string) {\n    switch (phase) {\n      case PHASES.DEFAULT.LOBBY:\n        return PhaseLobby;\n      case PHASES.DEFAULT.RULES:\n        return PhaseRules;\n      case PHASES.DEFAULT.SETUP:\n        return PhaseSetup;\n      case PHASES.SONHOS_PESADELOS.DREAM_TELLING:\n        return PhaseDreamTelling;\n      case PHASES.SONHOS_PESADELOS.MATCHING:\n        return PhaseMatching;\n      case PHASES.SONHOS_PESADELOS.RESOLUTION:\n        return PhaseResolution;\n      case PHASES.DEFAULT.GAME_OVER:\n        return PhaseGameOver;\n      default:\n        return PageError;\n    }\n  }\n\n  return (\n    <Session\n      gameId={gameId}\n      gameCollection={GAME_COLLECTION.SONHOS_PESADELOS}\n      getActiveComponent={getActiveComponent}\n    />\n  );\n}\n\nexport default SessionSonhosPesadelos;\n","// This icon file is generated automatically.\nvar CrownFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M899.6 276.5L705 396.4 518.4 147.5a8.06 8.06 0 00-12.9 0L319 396.4 124.3 276.5c-5.7-3.5-13.1 1.2-12.2 7.9L188.5 865c1.1 7.9 7.9 14 16 14h615.1c8 0 14.9-6 15.9-14l76.4-580.6c.8-6.7-6.5-11.4-12.3-7.9zM512 734.2c-62.1 0-112.6-50.5-112.6-112.6S449.9 509 512 509s112.6 50.5 112.6 112.6S574.1 734.2 512 734.2zm0-160.9c-26.6 0-48.2 21.6-48.2 48.3 0 26.6 21.6 48.3 48.2 48.3s48.2-21.6 48.2-48.3c0-26.6-21.6-48.3-48.2-48.3z\" } }] }, \"name\": \"crown\", \"theme\": \"filled\" };\nexport default CrownFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CrownFilledSvg from \"@ant-design/icons-svg/es/asn/CrownFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CrownFilled = function CrownFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CrownFilledSvg\n  }));\n};\n\nCrownFilled.displayName = 'CrownFilled';\nexport default /*#__PURE__*/React.forwardRef(CrownFilled);","// This icon file is generated automatically.\nvar DownSquareOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M505.5 658.7c3.2 4.4 9.7 4.4 12.9 0l178-246c3.8-5.3 0-12.7-6.5-12.7H643c-10.2 0-19.9 4.9-25.9 13.2L512 558.6 406.8 413.2c-6-8.3-15.6-13.2-25.9-13.2H334c-6.5 0-10.3 7.4-6.5 12.7l178 246z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z\" } }] }, \"name\": \"down-square\", \"theme\": \"outlined\" };\nexport default DownSquareOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DownSquareOutlinedSvg from \"@ant-design/icons-svg/es/asn/DownSquareOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar DownSquareOutlined = function DownSquareOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: DownSquareOutlinedSvg\n  }));\n};\n\nDownSquareOutlined.displayName = 'DownSquareOutlined';\nexport default /*#__PURE__*/React.forwardRef(DownSquareOutlined);","// This icon file is generated automatically.\nvar PauseOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M304 176h80v672h-80zm408 0h-64c-4.4 0-8 3.6-8 8v656c0 4.4 3.6 8 8 8h64c4.4 0 8-3.6 8-8V184c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"pause\", \"theme\": \"outlined\" };\nexport default PauseOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PauseOutlinedSvg from \"@ant-design/icons-svg/es/asn/PauseOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PauseOutlined = function PauseOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PauseOutlinedSvg\n  }));\n};\n\nPauseOutlined.displayName = 'PauseOutlined';\nexport default /*#__PURE__*/React.forwardRef(PauseOutlined);","// This icon file is generated automatically.\nvar PictureOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zm-40 632H136v-39.9l138.5-164.3 150.1 178L658.1 489 888 761.6V792zm0-129.8L664.2 396.8c-3.2-3.8-9-3.8-12.2 0L424.6 666.4l-144-170.7c-3.2-3.8-9-3.8-12.2 0L136 652.7V232h752v430.2zM304 456a88 88 0 100-176 88 88 0 000 176zm0-116c15.5 0 28 12.5 28 28s-12.5 28-28 28-28-12.5-28-28 12.5-28 28-28z\" } }] }, \"name\": \"picture\", \"theme\": \"outlined\" };\nexport default PictureOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PictureOutlinedSvg from \"@ant-design/icons-svg/es/asn/PictureOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PictureOutlined = function PictureOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PictureOutlinedSvg\n  }));\n};\n\nPictureOutlined.displayName = 'PictureOutlined';\nexport default /*#__PURE__*/React.forwardRef(PictureOutlined);","// This icon file is generated automatically.\nvar PlayCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M719.4 499.1l-296.1-215A15.9 15.9 0 00398 297v430c0 13.1 14.8 20.5 25.3 12.9l296.1-215a15.9 15.9 0 000-25.8zm-257.6 134V390.9L628.5 512 461.8 633.1z\" } }] }, \"name\": \"play-circle\", \"theme\": \"outlined\" };\nexport default PlayCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlayCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlayCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PlayCircleOutlined = function PlayCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlayCircleOutlinedSvg\n  }));\n};\n\nPlayCircleOutlined.displayName = 'PlayCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(PlayCircleOutlined);","// This icon file is generated automatically.\nvar StepBackwardOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"0 0 1024 1024\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M347.6 528.95l383.2 301.02c14.25 11.2 35.2 1.1 35.2-16.95V210.97c0-18.05-20.95-28.14-35.2-16.94L347.6 495.05a21.53 21.53 0 000 33.9M330 864h-64a8 8 0 01-8-8V168a8 8 0 018-8h64a8 8 0 018 8v688a8 8 0 01-8 8\" } }] }, \"name\": \"step-backward\", \"theme\": \"outlined\" };\nexport default StepBackwardOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport StepBackwardOutlinedSvg from \"@ant-design/icons-svg/es/asn/StepBackwardOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar StepBackwardOutlined = function StepBackwardOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: StepBackwardOutlinedSvg\n  }));\n};\n\nStepBackwardOutlined.displayName = 'StepBackwardOutlined';\nexport default /*#__PURE__*/React.forwardRef(StepBackwardOutlined);","// This icon file is generated automatically.\nvar StepForwardOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"0 0 1024 1024\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M676.4 528.95L293.2 829.97c-14.25 11.2-35.2 1.1-35.2-16.95V210.97c0-18.05 20.95-28.14 35.2-16.94l383.2 301.02a21.53 21.53 0 010 33.9M694 864h64a8 8 0 008-8V168a8 8 0 00-8-8h-64a8 8 0 00-8 8v688a8 8 0 008 8\" } }] }, \"name\": \"step-forward\", \"theme\": \"outlined\" };\nexport default StepForwardOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport StepForwardOutlinedSvg from \"@ant-design/icons-svg/es/asn/StepForwardOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar StepForwardOutlined = function StepForwardOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: StepForwardOutlinedSvg\n  }));\n};\n\nStepForwardOutlined.displayName = 'StepForwardOutlined';\nexport default /*#__PURE__*/React.forwardRef(StepForwardOutlined);","// This icon file is generated automatically.\nvar TrophyOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M868 160h-92v-40c0-4.4-3.6-8-8-8H256c-4.4 0-8 3.6-8 8v40h-92a44 44 0 00-44 44v148c0 81.7 60 149.6 138.2 162C265.7 630.2 359 721.7 476 734.5v105.2H280c-17.7 0-32 14.3-32 32V904c0 4.4 3.6 8 8 8h512c4.4 0 8-3.6 8-8v-32.3c0-17.7-14.3-32-32-32H548V734.5C665 721.7 758.3 630.2 773.8 514 852 501.6 912 433.7 912 352V204a44 44 0 00-44-44zM184 352V232h64v207.6a91.99 91.99 0 01-64-87.6zm520 128c0 49.1-19.1 95.4-53.9 130.1-34.8 34.8-81 53.9-130.1 53.9h-16c-49.1 0-95.4-19.1-130.1-53.9-34.8-34.8-53.9-81-53.9-130.1V184h384v296zm136-128c0 41-26.9 75.8-64 87.6V232h64v120z\" } }] }, \"name\": \"trophy\", \"theme\": \"outlined\" };\nexport default TrophyOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport TrophyOutlinedSvg from \"@ant-design/icons-svg/es/asn/TrophyOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar TrophyOutlined = function TrophyOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: TrophyOutlinedSvg\n  }));\n};\n\nTrophyOutlined.displayName = 'TrophyOutlined';\nexport default /*#__PURE__*/React.forwardRef(TrophyOutlined);","// This icon file is generated automatically.\nvar UpCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M518.5 360.3a7.95 7.95 0 00-12.9 0l-178 246c-3.8 5.3 0 12.7 6.5 12.7H381c10.2 0 19.9-4.9 25.9-13.2L512 460.4l105.2 145.4c6 8.3 15.6 13.2 25.9 13.2H690c6.5 0 10.3-7.4 6.5-12.7l-178-246z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"up-circle\", \"theme\": \"outlined\" };\nexport default UpCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport UpCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/UpCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar UpCircleOutlined = function UpCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: UpCircleOutlinedSvg\n  }));\n};\n\nUpCircleOutlined.displayName = 'UpCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(UpCircleOutlined);"],"names":["Card","children","header","footer","color","size","randomColor","className","headerClassName","footerClassName","baseClass","bgColor","getColorFromLetter","toUpperCase","clsx","style","startsWith","backgroundColor","FloatingHand","subtitle","type","useState","isExpanded","setIsExpanded","translate","useLanguage","onMouseOver","onMouseLeave","alt","pt","en","ImageBlurButton","cardId","useBlurCards","blurCard","isBlurEnabled","placement","title","ghost","onClick","EyeInvisibleOutlined","ImageBlurButtonContainer","props","ImageCard","imageId","cardWidth","preview","shouldBeBlurred","fallbackName","length","imageURL","replace","isBlurred","width","src","process","placeholder","fallback","PUBLIC_URL","maskClassName","ImageCardHand","hand","onSelectCard","selectButtonLabel","selectButtonClass","sizeRatio","cardSize","minCardSize","disabledSelectButton","useCardWidth","map","Boolean","icon","DownSquareOutlined","disabled","ImageCardBack","previewImageId","ImageCardPreloadHand","ImageCardSelectButton","selectLabel","deselectLabel","isSelected","shape","UpCircleOutlined","custom","StarPoints","keyPrefix","quantity","hideText","isNegative","num","Math","abs","StarsArray","Array","from","_","i","StarFilled","Ribbon","label","position","getAnimationClass","RibbonGroup","labels","charAt","SlideShowControls","activeIndex","setActiveIndex","setStep","disableControls","barColor","windowDuration","useTimer","expiryTimestamp","inNSeconds","autoStart","onExpire","minutes","seconds","isRunning","pause","resume","time","useEffect","s","min","fill","e","StepBackwardOutlined","max","PauseOutlined","PlayCircleOutlined","StepForwardOutlined","TrophyOutlined","SlideShow","leftClassName","rightClassName","id","state","info","announcementIcon","mockedDreamClues","mockVotes","dreams","table","user","playersIds","shuffle","dream","filter","playerId","shuffledTable","reduce","acc","index","DreamCard","isDream","isNightmare","hideBlurButton","DreamBoard","dreamId","nightmareId","maxWidth","StepTellDream","players","onSubmitDream","isLoading","useLoading","setDream","useMock","onSubmitDreamsClick","fullWidth","theme","level","join","text","contained","align","onPressEnter","onChange","target","value","DreamTellingRules","useStep","step","goToNextStep","useUser","isUserReady","useIsUserReady","request","useAPICall","apiFunction","SONHOS_PESADELOS_API","actionName","onBeforeCall","onError","successMessage","errorMessage","payload","action","useOnSubmitDreamAPIRequest","phase","allowedPhase","PHASES","conditions","round","buttonText","onPressButton","onClose","currentRound","current","AllDreamsClues","activeItem","onActivateItem","votes","liButtonBaseClass","player","letter","LETTERS","cardEntryId","getEntryId","isActive","isUsed","Object","keys","includes","role","name","cleanupVotes","entries","dreamEntryKey","cardEntryKey","split","SEPARATOR","DreamBoardVote","ribbonIds","key","getClueId","StepMatchDreams","onSubmitVotes","useVotingMatch","setVotes","activateItem","isVotingComplete","userClues","entry","clueEntryId","selectOwnVote","randomVotes","randomTable","voteRandomly","useOnSubmitVotesAPIRequest","GalleryDreamDisplay","activePlayer","GalleryGuesses","correctGuessPoints","cards","cardEntry","avatarId","StepResults","gallery","isFirstGalleryRunThrough","galleryEntry","getAvatarColorById","StepRanking","ranking","goToPreviousStep","isLastRound","gainedPointsDescriptions","total","PictureOutlined","lastRound","useSlideShow","gameId","gameCollection","GAME_COLLECTION","getActiveComponent","PhaseLobby","PhaseRules","PhaseSetup","PhaseDreamTelling","PhaseMatching","PhaseResolution","PhaseGameOver","PageError","CrownFilled","ref","React","AntdIcon","_objectSpread","CrownFilledSvg","displayName","DownSquareOutlinedSvg","PauseOutlinedSvg","PictureOutlinedSvg","PlayCircleOutlinedSvg","StepBackwardOutlinedSvg","StepForwardOutlinedSvg","TrophyOutlinedSvg","UpCircleOutlinedSvg"],"sourceRoot":""}