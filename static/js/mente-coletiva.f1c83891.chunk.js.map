{"version":3,"file":"static/js/mente-coletiva.f1c83891.chunk.js","mappings":"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","sources":["components/cards/GroupQuestionCard.tsx","components/cards/Card.tsx","components/metrics/MetricHighlight.tsx","components/timers/TimerClock.tsx","components/timers/TimerBar.tsx","components/timers/TimedTimerBar.tsx","components/timers/TimedTimerClock.tsx","components/views/View.tsx","components/views/ViewIf.tsx","components/views/ViewOr.tsx","components/views/ViewSwitch.tsx","games/mente-coletiva/utils/api-requests.ts","games/mente-coletiva/components/RulesBlobs.tsx","games/mente-coletiva/utils/mock.ts","games/mente-coletiva/components/RoundType.tsx","games/mente-coletiva/components/Pasture.tsx","games/mente-coletiva/components/CustomQuestion.tsx","games/mente-coletiva/StepQuestionSelection.tsx","games/mente-coletiva/StepQuestionSelectionWaiting.tsx","games/mente-coletiva/PhaseQuestionSelection.tsx","games/mente-coletiva/StepAnswering.tsx","games/mente-coletiva/PhaseEverybodyWrites.tsx","games/mente-coletiva/components/AdminAnswerControl.tsx","games/mente-coletiva/components/AnswerGroup.tsx","games/mente-coletiva/components/UserAnswers.tsx","games/mente-coletiva/StepCompare.tsx","games/mente-coletiva/PhaseCompare.tsx","games/mente-coletiva/StepResolution.tsx","games/mente-coletiva/PhaseResolution.tsx","games/mente-coletiva/PhaseGameOver.tsx","games/mente-coletiva/SessionMenteColetiva.tsx","games/mente-coletiva/utils/achievements.ts","hooks/useWhichPlayerIsThe.ts","icons/AnimatedClockIcon.tsx","icons/ArrowSignIcon.tsx","icons/CustomerReviewIcon.tsx","icons/DiscussionIcon.tsx","icons/SheepIcon.tsx","icons/WritingIcon.tsx","../node_modules/@ant-design/icons-svg/es/asn/HeartFilled.js","../node_modules/@ant-design/icons/es/icons/HeartFilled.js","../node_modules/@ant-design/icons-svg/es/asn/PlusCircleFilled.js","../node_modules/@ant-design/icons/es/icons/PlusCircleFilled.js","../node_modules/@ant-design/icons-svg/es/asn/QuestionCircleFilled.js","../node_modules/@ant-design/icons/es/icons/QuestionCircleFilled.js","../node_modules/@ant-design/icons-svg/es/asn/RocketFilled.js","../node_modules/@ant-design/icons/es/icons/RocketFilled.js"],"sourcesContent":["// Sass\nimport './GroupQuestionCard.scss';\n\ntype GroupQuestionCardProps = {\n  /**\n   * The question to be displayed\n   */\n  question: GroupQuestionCard;\n  /**\n   * The number to be displayed. If not provided, the question's number will be used.\n   */\n  overrideNumber?: number;\n};\n\nexport function GroupQuestionCard({ question, overrideNumber }: GroupQuestionCardProps) {\n  return (\n    <span className=\"group-question-card group-question-card--span\">\n      <span className=\"group-question-card__prefix\">{question.prefix}</span>\n      <span className=\"group-question-card__number\">{overrideNumber ?? question.number}</span>\n      <span className=\"group-question-card__suffix\">{question.suffix}</span>\n    </span>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Utils\nimport { getColorFromLetter } from 'utils/helpers';\n// Sass\nimport './Card.scss';\n\ntype CardProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  header?: string;\n  footer?: string;\n  color?: string;\n  size?: 'small' | 'medium' | 'large';\n  randomColor?: boolean;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  headerClassName?: string;\n  footerClassName?: string;\n  hideHeader?: boolean;\n};\nexport const Card = ({\n  children,\n  header = 'Carta',\n  footer,\n  color = 'none',\n  size = 'medium',\n  randomColor = false,\n  className = '',\n  headerClassName = '',\n  footerClassName = '',\n  hideHeader = false,\n}: CardProps) => {\n  const baseClass = 'card';\n\n  const bgColor = randomColor\n    ? getColorFromLetter(\n        typeof children === 'string'\n          ? children[0].toUpperCase()\n          : header !== 'Carta'\n          ? header[0].toUpperCase()\n          : 'X'\n      )\n    : color;\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, className)}>\n      {!hideHeader && (\n        <span\n          className={clsx(`${baseClass}__header`, `color-background--${bgColor}`, headerClassName)}\n          style={color.startsWith('#') ? { backgroundColor: color } : {}}\n        >\n          {header}\n        </span>\n      )}\n      <span className={`${baseClass}__text`}>{children}</span>\n      {footer && <span className={clsx(`${baseClass}__footer`, footerClassName)}>{footer}</span>}\n    </div>\n  );\n};\n","import { ReactNode } from 'react';\nimport clsx from 'clsx';\n// Types\nimport type { AvatarSize } from 'antd/lib/avatar/AvatarContext';\n// Components\nimport { IconAvatar } from 'components/avatars/IconAvatar';\n\nexport type MetricHighlightProps = {\n  /**\n   * The text to be highlighted\n   */\n  children: ReactNode;\n  /**\n   * The icon representing the metric\n   */\n  icon: ReactNode;\n  /**\n   * Indicates if it's a negative metric\n   */\n  type?: 'positive' | 'negative' | 'default';\n  /**\n   * The size of the avatar (default: small)\n   */\n  iconSize?: AvatarSize;\n  /**\n   * Custom class\n   */\n  className?: string;\n  /**\n   * Icon placement (default: after)\n   */\n  iconPlacement?: 'before' | 'after';\n};\n\nexport function MetricHighlight({\n  children,\n  icon,\n  type,\n  className,\n  iconSize = 'small',\n  iconPlacement = 'after',\n}: MetricHighlightProps) {\n  return (\n    <span className={clsx('metric-highlight', type && `metric-highlight--${type}`, className)}>\n      {iconPlacement === 'before' && (\n        <>\n          <IconAvatar size={iconSize} icon={icon} />{' '}\n        </>\n      )}\n      {children}\n      {iconPlacement === 'after' && (\n        <>\n          {' '}\n          <IconAvatar size={iconSize} icon={icon} />\n        </>\n      )}\n    </span>\n  );\n}\n\nexport type HighlightProps = Pick<MetricHighlightProps, 'children' | 'type' | 'iconSize' | 'className'>;\n","import { MetricHighlight, MetricHighlightProps } from 'components/metrics/MetricHighlight';\nimport { AnimatedClockIcon } from 'icons/AnimatedClockIcon';\nimport { ReactNode } from 'react';\n\nconst padTime = (value: number) => (value < 10 ? `0${value}` : value);\n\ntype TimerClockProps = {\n  /**\n   * Replacement icon for the clock icon\n   */\n  icon?: ReactNode;\n  /**\n   * Optional children that comes after the time\n   */\n  children?: ReactNode;\n  /**\n   * Minutes\n   */\n  minutes?: number;\n  /**\n   * Seconds\n   */\n  seconds: number;\n} & Omit<MetricHighlightProps, 'icon' | 'children'>;\n\n/**\n * Timer highlight with countdown functionality\n */\nexport function TimerClock({\n  icon,\n  type,\n  iconSize,\n  children,\n  className = '',\n  iconPlacement = 'before',\n  minutes = 0,\n  seconds,\n}: TimerClockProps) {\n  return (\n    <MetricHighlight\n      icon={icon ?? <AnimatedClockIcon />}\n      type={type}\n      iconSize={iconSize}\n      className={className}\n      iconPlacement={iconPlacement}\n    >\n      {minutes}:{padTime(seconds)}\n      {children}\n    </MetricHighlight>\n  );\n}\n","import { Progress, ProgressProps } from 'antd';\n\ninterface TimerBarProps extends ProgressProps {\n  steps?: number;\n  value: number;\n  total: number;\n}\n\n/**\n * Time Bar presentational component used in timed operations\n * @param props\n * @returns\n */\nexport function TimerBar({\n  steps,\n  strokeLinecap,\n  total,\n  type = 'line',\n  value,\n  status = 'active',\n  ...props\n}: TimerBarProps) {\n  const percentage = 100 - (value * 100) / total;\n  return (\n    <Progress\n      percent={percentage}\n      steps={steps}\n      showInfo={false}\n      style={{ marginBottom: '1rem' }}\n      size={steps && steps > 30 ? 'small' : undefined}\n      type={type}\n      {...props}\n    />\n  );\n}\n","import clsx from 'clsx';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\n// Components\nimport { TimerBar } from './TimerBar';\n\ntype TimedTimerBarProps = {\n  /**\n   * Duration in seconds\n   */\n  duration: number;\n  /**\n   * Function executed when the time is up\n   */\n  onExpire: GenericFunction;\n  /**\n   * Number of ticks in the bar\n   */\n  steps?: number;\n  /**\n   * Type of bar. Default: line\n   */\n  type?: 'circle' | 'line' | 'dashboard';\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\nexport function TimedTimerBar({ duration, onExpire, type, steps = 10, className }: TimedTimerBarProps) {\n  const { timeLeft } = useCountdown({\n    duration,\n    autoStart: true,\n    onExpire,\n  });\n\n  return (\n    <div className={clsx('timer-number', className)}>\n      {timeLeft} <TimerBar steps={steps} value={timeLeft} total={duration} type={type} /> {timeLeft}\n    </div>\n  );\n}\n","import { MetricHighlight, MetricHighlightProps } from 'components/metrics/MetricHighlight';\nimport { useCountdown, useCountdownSettings } from 'hooks/useCountdown';\nimport { AnimatedClockIcon } from 'icons/AnimatedClockIcon';\nimport { ReactNode } from 'react';\n\nconst padTime = (value: number) => (value < 10 ? `0${value}` : value);\n\ntype TimedTimerClockProps = {\n  /**\n   * Replacement icon for the clock icon\n   */\n  icon?: ReactNode;\n  /**\n   * Optional children that comes after the time\n   */\n  children?: ReactNode;\n} & useCountdownSettings &\n  Omit<MetricHighlightProps, 'icon' | 'children'>;\n\n/**\n * Timer highlight with countdown functionality\n */\nexport function TimedTimerClock({\n  icon,\n  type,\n  iconSize,\n  children,\n  className = '',\n  iconPlacement = 'before',\n  ...timerProps\n}: TimedTimerClockProps) {\n  const { minutes, seconds } = useCountdown({ ...timerProps });\n\n  return (\n    <MetricHighlight\n      icon={icon ?? <AnimatedClockIcon />}\n      type={type}\n      iconSize={iconSize}\n      className={className}\n      iconPlacement={iconPlacement}\n    >\n      {minutes}:{padTime(seconds)}\n      {children}\n    </MetricHighlight>\n  );\n}\n","import { ReactNode } from 'react';\n\ntype ViewProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n};\n\nexport function View({ children }: ViewProps) {\n  return <>{children}</>;\n}\n","import { ReactNode } from 'react';\n\ntype ViewIfProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Displays children only if condition is truthy\n   */\n  condition?: boolean;\n};\n\n/**\n * Wrapper component that only renders the children if the condition is truthy\n */\nexport function ViewIf({ condition = false, children }: ViewIfProps) {\n  return condition ? <>{children}</> : <></>;\n}\n","import { ReactNode } from 'react';\n\ntype ViewOrProps = {\n  /**\n   * The content of the component to be toggled\n   */\n  children: [ReactNode, ReactNode];\n  /**\n   * The condition to be met to render the first children\n   */\n  condition?: boolean;\n};\n\n/**\n * View wrapper that renders one of two children depending on a condition\n */\nexport function ViewOr({ condition = false, children }: ViewOrProps) {\n  return condition ? <>{children[0]}</> : <>{children[1]}</>;\n}\n","type ViewSwitchProps = {\n  cases: boolean[];\n  /**\n   * The content of the component\n   */\n  children: any;\n};\n\nexport function ViewSwitch({ cases, children }: ViewSwitchProps) {\n  if (cases.length > 5) {\n    throw Error('ViewSwitch only supports up to 5 cases');\n  }\n\n  if (cases[0] && children[0]) {\n    return children[0];\n  }\n\n  if (cases[1] && children[1]) {\n    return children[1];\n  }\n\n  if (cases[2] && children[2]) {\n    return children[2];\n  }\n\n  if (cases[3] && children[3]) {\n    return children[3];\n  }\n\n  if (cases[4] && children[4]) {\n    return children[4];\n  }\n  console.warn('Rendering all children in the ViewSwitch');\n  return children;\n}\n","import { functions } from 'services/firebase';\nimport { httpsCallable } from 'firebase/functions';\nimport { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\n\nconst submitAction = httpsCallable(functions, 'menteColetivaSubmitAction');\n\nexport function useOnSubmitQuestionAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: submitAction,\n    actionName: 'submit-question',\n    onSuccess: () => setStep(3),\n    onError: () => setStep(1),\n    successMessage: translate('Pergunta enviada com sucesso!', 'Question send successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar a pergunta',\n      'Oops, the application failed to submit the question'\n    ),\n  });\n\n  return (payload: SubmitQuestionPayload) => {\n    request({\n      action: 'SUBMIT_QUESTION',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitCustomQuestionAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: submitAction,\n    actionName: 'submit-question',\n    onSuccess: () => setStep(3),\n    onError: () => setStep(1),\n    successMessage: translate('Pergunta enviada com sucesso!', 'Question send successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar a pergunta',\n      'Oops, the application failed to submit the question'\n    ),\n  });\n\n  return (payload: SubmitCustomQuestionPayload) => {\n    request({\n      action: 'SUBMIT_CUSTOM_QUESTION',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitAnswersAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: submitAction,\n    actionName: 'submit-answers',\n    onSuccess: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate('Respostas enviadas com sucesso!', 'Answers send successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar respostas',\n      'Oops, the application failed to submit answers'\n    ),\n  });\n\n  return (payload: SubmitAnswersPayload) => {\n    request({\n      action: 'SUBMIT_ANSWERS',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnAddAnswerAPIRequest() {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: submitAction,\n    actionName: 'add-answer',\n    successMessage: translate('Resposta adicionada com sucesso!', 'Answer added successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar adicionar respostar',\n      'Oops, the application failed to add answer'\n    ),\n  });\n\n  return (payload: AddAnswerPayload) => {\n    request({\n      action: 'ADD_ANSWER',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnNextAnswersAPIRequest(clearAllowList: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: submitAction,\n    actionName: 'next-answers',\n    onSuccess: clearAllowList,\n    successMessage: translate(\n      'Próximas respostas acionadas com sucesso!',\n      'Next answers triggered successfully!'\n    ),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar avançar',\n      'Oops, the application failed to advance'\n    ),\n  });\n\n  return (payload: NextAnswersPayload) => {\n    request({\n      action: 'NEXT_ANSWERS',\n      ...payload,\n    });\n  };\n}\n","import { AvatarName } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { PointsHighlight } from 'components/metrics/PointsHighlight';\nimport { Instruction } from 'components/text';\n\ntype GamePremiseRulesProps = {\n  activePlayer: GamePlayer;\n};\n\nexport function GamePremiseRules({ activePlayer }: GamePremiseRulesProps) {\n  return (\n    <Instruction>\n      <Translate\n        pt={\n          <>\n            Precisamos reduzir essa população! Vamos fazer uma pergunta em que todos tem que escrever uma\n            certa quantidade de respostas. Você ganha um ponto para cada resposta igual a de outra ovelha.\n            Quem receber o menor número de pontos move uma seção para a direita.\n            <br />\n            Se você já está no último pasto e tiver que mover pra direita, você cai no precipício e morre. O\n            pasto fica menos lotado e todos mais felizes.\n            <br />\n            <Instruction contained>\n              <AvatarName player={activePlayer} addressUser /> escolherá uma pergunta para essa rodada.\n            </Instruction>\n          </>\n        }\n        en={\n          <>\n            We are sheep and our pasture is overcrowded! We need to decide who should leave.\n            <br />\n            Let's ask a question and everyone has to give a certain number of answers. You are trying to match\n            answers with other sheep to get points. Whoever gets the fewest points moves one section to the\n            right.\n            <br />\n            If you are already in the last pasture and have to move to the right, you fall off the cliff and\n            die. The pasture is less crowded and everyone is happier.\n            <br />\n            <Instruction contained>\n              <AvatarName player={activePlayer} addressUser /> will choose a question for this round.\n            </Instruction>\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function AnsweringRules() {\n  return (\n    <Instruction>\n      <Translate\n        pt={\n          <>\n            Agora é hora de responder!\n            <br />\n            Pense em respostas comuns que fará com que você responda igual a outros jogadores.\n            <br />\n            Você ganha <PointsHighlight>1</PointsHighlight> ponto para cada uma de suas respostas +{' '}\n            <PointsHighlight>1</PointsHighlight> ponto para cada resposta igual a de outro jogador (1 ponto\n            por jogador).\n            <br />\n            Por exemplo, se 3 jogadores escreveram 'bola', são <PointsHighlight>+3</PointsHighlight> pontos\n            para cada.\n          </>\n        }\n        en={\n          <>\n            It's time to answer!\n            <br />\n            Think of common answers that will help you match the largest number of players.\n            <br />\n            You get <PointsHighlight>1</PointsHighlight> point for each of your answers +{' '}\n            <PointsHighlight>1</PointsHighlight> point for each match with other players.\n            <br />\n            For example, if 3 players write 'chicken', each of those players get{' '}\n            <PointsHighlight>3</PointsHighlight> points.\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function ComparingRules() {\n  return (\n    <Instruction>\n      <Translate\n        pt={\n          <>\n            Hora de comparar respostas!\n            <br />\n            O jogo agrupará todas as respostas iguais, mas agora vocês tem a chance de adicionar palavras que\n            o jogo não agrupou por conta de erro gramatical, acento ou plural.\n            <br />\n            Lembre-se gêneros são considerados diferentes <code>príncipe ≠ princesa</code>, assim como geral\n            vs específico <code>caminhão ≠ caminhão de mudança</code>.\n          </>\n        }\n        en={\n          <>\n            Time to compare answers!\n            <br />\n            The game will group all identical answers, but now the group has a chance to add answers that it\n            missed because of typo, accents, or pluralization.\n            <br />\n            Remember that genders are considered different <code>prince ≠ princess</code>, as well as general\n            vs specific <code>truck ≠ fire truck</code>.\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n","import { shuffle } from 'lodash';\nimport { getEntryId, getRandomItem } from 'utils/helpers';\n\nexport const mockAnswers = (userId: PlayerId, numAnswers: number) => {\n  const list = ['agua', 'bola', 'coco', 'dedo', 'egua', 'flauta', 'gatilho', 'hélio', 'jaguar', 'pêssego'];\n  const list2 = ['água', 'bola', 'cocô', 'dedo', 'égua', 'flauta', 'gatilho', 'helio', 'jipe'];\n\n  const shuffled = shuffle(Math.random() > 0.5 ? list : list2);\n\n  return Array(numAnswers)\n    .fill(0)\n    .map((i, index) => ({ [getEntryId(['answer', `${index}`, userId])]: shuffled[i + index].toUpperCase() }))\n    .reduce((acc, item) => {\n      acc = { ...acc, ...item };\n      return acc;\n    }, {});\n};\n\nexport const mockSelectQuestion = (questions: MQuestion[]) => getRandomItem(questions).id;\n","import clsx from 'clsx';\n// Icons\nimport { ArrowSignIcon } from 'icons/ArrowSignIcon';\n// Components\nimport { Translate } from 'components/language';\n\ntype RoundTypeProps = {\n  /**\n   * Round type\n   */\n  roundType: number;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n};\n\nexport function RoundType({ roundType, className = '' }: RoundTypeProps) {\n  const arrowBaseClass = 'm-round-type__arrow';\n  return (\n    <div className={clsx('m-round-type', className)}>\n      <div className=\"m-round-type__arrows\">\n        {roundType === 0 && <ArrowSignIcon className={clsx(arrowBaseClass, `${arrowBaseClass}--0`)} />}\n        <ArrowSignIcon className={clsx(arrowBaseClass, `${arrowBaseClass}--1`)} />\n        {roundType >= 2 && <ArrowSignIcon className={clsx(arrowBaseClass, `${arrowBaseClass}--2`)} />}\n        {roundType === 3 && <ArrowSignIcon className={clsx(arrowBaseClass, `${arrowBaseClass}--3`)} />}\n      </div>\n\n      <div>\n        <Translate pt={<>Nesta rodada,</>} en={<>This round</>} />\n      </div>\n      {roundType === 1 && (\n        <Translate\n          pt={<>todos com a pontuação mais baixa movem uma cerquinha para direita.</>}\n          en={<>all players with the lowest score move one fence to the right.</>}\n        />\n      )}\n      {roundType === 2 && (\n        <Translate\n          pt={\n            <>\n              todos com as <span className=\"m-round-type__number\">2</span> pontuações mais baixas movem uma\n              cerquinha para direita.\n            </>\n          }\n          en={\n            <>\n              all players with the <span className=\"m-round-type__number\">2</span> lowest scores move one\n              fence to the right.\n            </>\n          }\n        />\n      )}\n      {roundType === 3 && (\n        <Translate\n          pt={\n            <>\n              todos com as <span className=\"m-round-type__number\">3</span> pontuações mais baixas movem uma\n              cerquinha para direita.\n            </>\n          }\n          en={\n            <>\n              all players with the <span className=\"m-round-type__number\">3</span> lowest scores move one\n              fence to the right.\n            </>\n          }\n        />\n      )}\n      {roundType === 0 && (\n        <Translate\n          pt={\n            <>\n              todos com a pontuação mais baixa movem uma cerquinha para direita e todos com a pontuação mais\n              alta movem uma cerquinha <span className=\"m-round-type__highlight\">para a esquerda</span>!\n            </>\n          }\n          en={\n            <>\n              all players with the lowest score move one fence to the right and all players with the highest\n              score move one fence <span className=\"m-round-type__highlight\">to the left</span>!\n            </>\n          }\n        />\n      )}\n    </div>\n  );\n}\n","import { useMemo } from 'react';\nimport clsx from 'clsx';\n// Hooks\nimport { useDimensions } from 'hooks/useDimensions';\n// Utils\nimport { PUBLIC_URL } from 'utils/constants';\n// Components\nimport { RoundType } from './RoundType';\nimport { SheepAvatar } from './SheepAvatar';\n\ntype PastureProps = {\n  players: GamePlayers;\n  pastureSize?: number;\n  roundType?: number;\n};\n\nexport function Pasture({ players, pastureSize = 5, roundType }: PastureProps) {\n  const [width] = useDimensions();\n  const isShortPasture = pastureSize === 3;\n\n  const pastureBase = Math.min(width, 1360) - 36;\n  const pastureWidth = Math.max(pastureBase * (isShortPasture ? 0.65 : 1), 300);\n  const pastureHeight = pastureBase / 4;\n  const sheepWidth = Math.min(width, 1360) / 22;\n  const gridStyleDistribution = {\n    gridTemplateColumns: isShortPasture ? '1fr 1fr 1fr 0.65fr' : '1fr 1fr 1fr 1fr 1fr 0.65fr',\n  };\n\n  const sheepPerEnclosure = useMemo(() => {\n    const spe = Array(pastureSize + 1).fill(null);\n    Object.values(players).forEach((player) => {\n      if (spe[player.level] === null) {\n        spe[player.level] = [];\n      }\n      spe[player.level].push(player);\n    });\n\n    return spe;\n  }, [players, pastureSize]);\n\n  return (\n    <div className=\"m-pasture-container\" style={{ width: `${pastureWidth}px` }}>\n      {roundType !== undefined && <RoundType roundType={roundType} className=\"m-pasture-round-type\" />}\n\n      <div className=\"m-pasture\" style={{ height: `${pastureHeight}px` }}>\n        <img\n          src={`${PUBLIC_URL.IN_GAME}m-pasture-${pastureSize}.png`}\n          alt=\"pasture background\"\n          className=\"m-pasture__background\"\n        />\n\n        <div className=\"m-enclosures\" style={gridStyleDistribution}>\n          {sheepPerEnclosure.map((sheepPlayers, enclosureId) => {\n            const enclosureKey = `m-enclosure-${enclosureId}`;\n            return (\n              <div className={clsx('m-enclosure', enclosureKey)} key={enclosureKey}>\n                {sheepPlayers &&\n                  sheepPlayers.map((player: GamePlayer, index: number) => {\n                    const sheepKey = `${enclosureKey}-${player.id}`;\n                    const sheepClassName = `m-sheep--pos-${index}`;\n\n                    return (\n                      <SheepAvatar\n                        key={sheepKey}\n                        id={player.avatarId}\n                        sheepId={player.sheepId}\n                        className={clsx(\n                          'm-sheep',\n                          sheepClassName,\n                          player.animateRight && 'm-sheep--animate-right',\n                          player.animateLeft && 'm-sheep--animate-left',\n                          player.animateRebound && 'm-sheep--animate-rebound',\n                          player.level === pastureSize && 'm-sheep--animate-die'\n                        )}\n                        width={sheepWidth}\n                        animate\n                      />\n                    );\n                  })}\n              </div>\n            );\n          })}\n        </div>\n\n        <img\n          src={`${PUBLIC_URL.IN_GAME}m-fence-${pastureSize}.svg`}\n          alt=\"fence\"\n          className=\"m-pasture__fence\"\n        />\n        <div className=\"m-pasture-names\">\n          <div className=\"m-enclosures m-enclosures--names\" style={gridStyleDistribution}>\n            {sheepPerEnclosure.map((sheepPlayers, index) => {\n              const names = sheepPlayers?.map((p: GamePlayer) => p.name)?.join(',\\n') ?? '';\n              return (\n                <span\n                  key={`m-enclosure-${index}`}\n                  className={clsx('m-enclosure-names', names && 'm-enclosure-names--has-names')}\n                >\n                  {names}\n                </span>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { Button, Input, InputNumber, Select, Space } from 'antd';\nimport { Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useState } from 'react';\n\ntype CustomQuestionProps = {\n  onSubmit: GenericFunction;\n  userId: PlayerId;\n};\n\nexport function CustomQuestion({ onSubmit, userId }: CustomQuestionProps) {\n  const { isLoading } = useLoading();\n  const { translate } = useLanguage();\n  const [questionType, setQuestionType] = useState(translate('Cite', 'What are'));\n  const [questionNumber, setQuestionNumber] = useState<number>(3);\n  const [questionText, setQuestionText] = useState('');\n\n  return (\n    <>\n      <Space className=\"space-container\">\n        <Translate pt=\"OU\" en=\"OR\" />\n      </Space>\n      <Space className=\"contained center\" direction=\"vertical\">\n        <Title size=\"xx-small\">\n          <Translate pt=\"Criar pergunta\" en=\"Write custom question\" />:\n        </Title>\n        <Space className=\"m-custom-question-form\">\n          <Select value={questionType} onChange={(e) => setQuestionType(e)}>\n            <Select.Option value={translate('Cite', 'What are')}>\n              <Translate pt=\"Cite\" en=\"What are\" />\n            </Select.Option>\n            <Select.Option value={translate('Complete a frase', 'Fill in the blank')}>\n              <Translate pt=\"Complete a frase\" en=\"Fill in the blank\" />\n            </Select.Option>\n          </Select>\n          <InputNumber\n            defaultValue={3}\n            min={2}\n            max={4}\n            onChange={(e) => setQuestionNumber(e ?? 3)}\n            value={questionNumber}\n            placeholder={translate('...escreva aqui', '...write here')}\n          />\n          <Input onChange={(e) => setQuestionText(e.target.value)} />\n        </Space>\n        <div className=\"m-custom-question-sample\">\n          \"{questionType} {questionNumber} {questionText || '...'}\"\n        </div>\n        <Button\n          onClick={() =>\n            onSubmit({\n              customQuestion: {\n                id: `${userId}-${Date.now()}`,\n                prefix: questionType,\n                number: questionNumber,\n                suffix: questionText,\n              },\n            })\n          }\n          disabled={!questionText}\n          loading={isLoading}\n        >\n          <Translate pt=\"Enviar pergunta personalizada\" en=\"Submit custom question\" />\n        </Button>\n      </Space>\n    </>\n  );\n}\n","// Hooks\nimport { useMock } from 'hooks/useMock';\nimport { useLoading } from 'hooks/useLoading';\n// Utils\nimport { mockSelectQuestion } from './utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { PopoverRule } from 'components/rules';\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\nimport { Pasture } from './components/Pasture';\nimport { GamePremiseRules } from './components/RulesBlobs';\nimport { CustomQuestion } from './components/CustomQuestion';\nimport { TransparentButton } from 'components/buttons';\nimport { GroupQuestionCard } from 'components/cards/GroupQuestionCard';\n\ntype StepQuestionSelectionProps = {\n  activePlayer: GamePlayer;\n  currentQuestions: MQuestion[];\n  onSubmitQuestion: GenericFunction;\n  onSubmitCustomQuestion: GenericFunction;\n  players: GamePlayers;\n  roundType: number;\n  pastureSize: number;\n  user: GamePlayer;\n} & AnnouncementProps;\n\nexport function StepQuestionSelection({\n  announcement,\n  currentQuestions,\n  onSubmitQuestion,\n  onSubmitCustomQuestion,\n  players,\n  roundType,\n  activePlayer,\n  pastureSize,\n  user,\n}: StepQuestionSelectionProps) {\n  const { isLoading } = useLoading();\n\n  // DEV: Mock answers\n  useMock(() => {\n    onSubmitQuestion({ questionId: mockSelectQuestion(currentQuestions) });\n  });\n\n  return (\n    <Step fullWidth className=\"m-step\" announcement={announcement}>\n      <Title size=\"small\">\n        <Translate pt=\"Selecione uma das perguntas\" en=\"Select one of the questions\" />\n      </Title>\n\n      <PopoverRule content={<GamePremiseRules activePlayer={activePlayer} />} />\n\n      <ul className=\"contained\">\n        {currentQuestions.map((question) => (\n          <li className=\"m-question-selection-item\" key={question.id}>\n            <TransparentButton\n              onClick={() => onSubmitQuestion({ questionId: question.id })}\n              disabled={isLoading || user.ready}\n            >\n              <GroupQuestionCard question={question} />\n            </TransparentButton>\n          </li>\n        ))}\n      </ul>\n      <CustomQuestion onSubmit={onSubmitCustomQuestion} userId={user.id} />\n\n      <Pasture players={players} pastureSize={pastureSize} roundType={roundType} />\n    </Step>\n  );\n}\n","// Icons\nimport { AnimatedClockIcon } from 'icons/AnimatedClockIcon';\n// Components\nimport { AvatarName, IconAvatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Pasture } from './components/Pasture';\n\ntype StepQuestionSelectionWaitingProps = {\n  activePlayer: GamePlayer;\n  players: GamePlayers;\n  roundType: number;\n  pastureSize: number;\n} & AnnouncementProps;\n\nexport function StepQuestionSelectionWaiting({\n  announcement,\n  activePlayer,\n  players,\n  roundType,\n  pastureSize,\n}: StepQuestionSelectionWaitingProps) {\n  return (\n    <Step fullWidth className=\"m-step\" announcement={announcement}>\n      <Title>\n        <IconAvatar icon={<AnimatedClockIcon />} size=\"large\" />{' '}\n        <Translate pt=\"Aguarde...\" en=\"Please wait...\" />\n      </Title>\n\n      <Instruction contained>\n        <AvatarName player={activePlayer} addressUser />{' '}\n        <Translate pt=\"está escolhendo a pergunta da rodada.\" en=\"is choosing the question for the round.\" />\n        <br />\n      </Instruction>\n\n      <Pasture players={players} pastureSize={pastureSize} roundType={roundType} />\n    </Step>\n  );\n}\n","// Hooks\nimport { useStep } from 'hooks/useStep';\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\nimport { useUser } from 'hooks/useUser';\nimport { useOnSubmitCustomQuestionAPIRequest, useOnSubmitQuestionAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { SheepIcon } from 'icons/SheepIcon';\n// Components\nimport { GamePremiseRules } from './components/RulesBlobs';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { RoundAnnouncement } from 'components/round';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { ViewOr } from 'components/views';\nimport { StepQuestionSelection } from './StepQuestionSelection';\nimport { StepQuestionSelectionWaiting } from './StepQuestionSelectionWaiting';\n\nfunction PhaseQuestionSelection({ state, players, info }: PhaseProps) {\n  const { step, goToNextStep, setStep } = useStep(0);\n  const user = useUser(players, state);\n  const [activePlayer, isUserTheActivePlayer] = useWhichPlayerIsThe('activePlayerId', state, players);\n\n  const onSubmitQuestion = useOnSubmitQuestionAPIRequest(setStep);\n  const onSubmitCustomQuestion = useOnSubmitCustomQuestionAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<SheepIcon />}\n      title={<Translate pt=\"O Pasto Superlotado\" en=\"A Overcrowded Pasture\" />}\n      currentRound={state?.round?.current}\n      duration={state?.round?.current < 3 ? 40 : 10}\n      type=\"overlay\"\n    >\n      <GamePremiseRules activePlayer={activePlayer} />\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.MENTE_COLETIVA.QUESTION_SELECTION}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state.round}\n          onPressButton={goToNextStep}\n          time={3}\n          circleColor={info?.appearance?.color}\n        >\n          <Instruction contained>\n            <Translate\n              pt=\"Somos ovelhinhas e nosso pasto está superlotado!\"\n              en=\"We are sheep and our pasture is overcrowded!\"\n            />\n          </Instruction>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <ViewOr condition={isUserTheActivePlayer}>\n          <StepQuestionSelection\n            players={players}\n            currentQuestions={state.currentQuestions}\n            onSubmitQuestion={onSubmitQuestion}\n            onSubmitCustomQuestion={onSubmitCustomQuestion}\n            roundType={state.roundType}\n            activePlayer={activePlayer}\n            pastureSize={state.pastureSize}\n            user={user}\n            announcement={announcement}\n          />\n\n          <StepQuestionSelectionWaiting\n            activePlayer={activePlayer}\n            players={players}\n            roundType={state.roundType}\n            pastureSize={state.pastureSize}\n            announcement={announcement}\n          />\n        </ViewOr>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseQuestionSelection;\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, Input, Space } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useMock } from 'hooks/useMock';\nimport { useLoading } from 'hooks/useLoading';\n// Utils\nimport { getEntryId } from 'utils/helpers';\nimport { mockAnswers } from './utils/mock';\n// Components\nimport { Pasture } from './components/Pasture';\nimport { AnsweringRules } from './components/RulesBlobs';\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { PopoverRule } from 'components/rules';\nimport { DevButton } from 'components/debug';\nimport { TimedTimerClock } from 'components/timers';\nimport { GroupQuestionCard } from 'components/cards/GroupQuestionCard';\n\ntype StepAnsweringProps = {\n  currentQuestion: MQuestion;\n  onSubmitAnswers: GenericFunction;\n  players: GamePlayers;\n  roundType: number;\n  user: GamePlayer;\n  pastureSize: number;\n  timedAnswers?: boolean;\n} & AnnouncementProps;\n\nexport function StepAnswering({\n  user,\n  currentQuestion,\n  players,\n  roundType,\n  onSubmitAnswers,\n  pastureSize,\n  announcement,\n  timedAnswers = false,\n}: StepAnsweringProps) {\n  const { isLoading } = useLoading();\n  const { translate } = useLanguage();\n  const [answers, setAnswers] = useState({});\n\n  // DEV: Mock answers\n  useMock(() => {\n    // onSubmitAnswers({ answers: mockAnswers(user.id, currentQuestion.number) });\n  }, []);\n\n  const onWriteAnswer = (e: any) => {\n    setAnswers((s) => ({\n      ...s,\n      [e.target.id]: e.target.value.toUpperCase().trim(),\n    }));\n  };\n\n  const isDisabled =\n    Object.keys(answers).length < currentQuestion.number ||\n    new Set(Object.values(answers)).size !== currentQuestion.number;\n\n  const onPressEnter = () => {\n    if (!isDisabled) {\n      onSubmitAnswers({ answers });\n    }\n  };\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <div className=\"m-step__contained-content\">\n        <Title level={3} size=\"small\">\n          <Translate pt=\"Responda a pergunta\" en=\"Answer the question\" />\n          {Boolean(timedAnswers) && (\n            <TimedTimerClock\n              duration={2 * 60}\n              onExpire={() => {\n                if (!user.ready && !isLoading) {\n                  onSubmitAnswers({ answers });\n                }\n              }}\n              disabled={Boolean(!timedAnswers)}\n            />\n          )}\n          :\n        </Title>\n\n        <GroupQuestionCard question={currentQuestion} />\n\n        <PopoverRule content={<AnsweringRules />} />\n\n        <ol className=\"m-answers\">\n          {Array(currentQuestion.number)\n            .fill(1)\n            .map((i, index) => {\n              const num = i + index;\n              const key = `answer-${index}`;\n              const id = getEntryId(['answer', index, user.id]);\n              return (\n                <li className=\"m-answers__item\" key={key}>\n                  <Input\n                    className=\"m-answers__input\"\n                    id={id}\n                    placeholder={translate(`Escreva a resposta ${num} aqui`, `Write answer ${num} here`)}\n                    autoComplete=\"off\"\n                    onChange={onWriteAnswer}\n                    onPressEnter={onPressEnter}\n                  />\n                </li>\n              );\n            })}\n        </ol>\n        <Space className=\"space-container\" align=\"center\">\n          <Button\n            type=\"primary\"\n            disabled={isDisabled || isLoading}\n            onClick={() => onSubmitAnswers({ answers })}\n          >\n            <Translate pt=\"Enviar respostas\" en=\"Submit answers\" />\n          </Button>\n\n          <DevButton\n            ghost\n            onClick={() => onSubmitAnswers({ answers: mockAnswers(user.id, currentQuestion.number) })}\n          >\n            Mock Answers\n          </DevButton>\n        </Space>\n      </div>\n\n      <Pasture players={players} pastureSize={pastureSize} roundType={roundType} />\n    </Step>\n  );\n}\n","// Hooks\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\nimport { useOnSubmitAnswersAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { WritingIcon } from 'icons/WritingIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { StepAnswering } from './StepAnswering';\nimport { AnsweringRules } from './components/RulesBlobs';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\n\nfunction PhaseEverybodyWrites({ state, players, info, meta }: PhaseProps) {\n  const { step, setStep } = useStep(0);\n  const user = useUser(players, state);\n\n  const onSubmitAnswers = useOnSubmitAnswersAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<WritingIcon />}\n      title={<Translate pt=\"Todos Respondem\" en=\"Everybody Writes\" />}\n      currentRound={state?.round?.current}\n      duration={state?.round?.current < 3 ? 20 : undefined}\n      type=\"overlay\"\n    >\n      <AnsweringRules />\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.MENTE_COLETIVA.EVERYBODY_WRITES}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepAnswering\n          announcement={announcement}\n          currentQuestion={state.currentQuestion}\n          players={players}\n          roundType={state.roundType}\n          onSubmitAnswers={onSubmitAnswers}\n          user={user}\n          pastureSize={state.pastureSize}\n          timedAnswers={meta?.options?.timed}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseEverybodyWrites;\n","import { useMemo, useState } from 'react';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\nimport { PlusCircleFilled, RocketFilled } from '@ant-design/icons';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useDevFeatures } from 'hooks/useDevFeatures';\n// Components\nimport { VIPOnlyContainer } from 'components/vip';\nimport { Translate } from 'components/language';\nimport { Avatar } from 'components/avatars';\nimport { TimedButton } from 'components/buttons';\n\ntype AdminAnswerControlProps = {\n  allAnswers: MAnswer[];\n  allowedList: AllowedList;\n  answerGroup: AnswerGroup;\n  onAddAnswer: GenericFunction;\n  onNextAnswer: GenericFunction;\n  players: GamePlayers;\n  remainingGroupsCount: number;\n};\n\nexport function AdminAnswerControl({\n  allAnswers,\n  allowedList,\n  answerGroup,\n  onNextAnswer,\n  onAddAnswer,\n  players,\n  remainingGroupsCount,\n}: AdminAnswerControlProps) {\n  const { isLoading } = useLoading();\n  const { isDevEnv } = useDevFeatures();\n  const [disableButton, setDisableButton] = useState(true);\n  const playerCount = Object.keys(players).length;\n\n  const filteredAnswers = useMemo(\n    () =>\n      allAnswers.filter((answer) => {\n        if (answer.isLocked) return false;\n\n        const included = answerGroup.entries.map((a: MAnswer) => a.id);\n        const playerIds = answerGroup.entries.map((a: MAnswer) => a.playerId);\n\n        return !included.includes(answer.id) && !playerIds.includes(answer.playerId);\n      }),\n    [allAnswers, answerGroup]\n  );\n\n  // How long to wait to enable the button to avoid ignoring player's custom adds to the answer group\n  const waitDuration = useMemo(() => {\n    const answersCount = answerGroup.entries.length;\n    // Dev\n    if (isDevEnv) return 1;\n    // When all players are in\n    if (playerCount === answersCount) return 1;\n    // When only 2 or less answers left\n    if (answersCount < 3 && remainingGroupsCount < 3) return 3;\n    // When only 1 answer in\n    if (answersCount === 1) return 2;\n    // Other cases\n    return 5;\n  }, [answerGroup.entries.length, isDevEnv, playerCount, remainingGroupsCount]);\n\n  return (\n    <VIPOnlyContainer className=\"m-admin\" direction=\"vertical\" align=\"center\">\n      <TimedButton\n        onClick={() => onNextAnswer({ allowedList: Object.keys(allowedList) })}\n        disabled={disableButton || isLoading}\n        type=\"primary\"\n        duration={waitDuration}\n        icon={<RocketFilled />}\n        onExpire={() => setDisableButton(false)}\n      >\n        <Translate pt=\"Confirmar e ir para próxima resposta\" en=\"Confirm and go to next answer\" />\n      </TimedButton>\n\n      {filteredAnswers.length > 0 && (\n        <p>\n          <Translate\n            pt=\"Essas são as respostas dos jogadores que não deram match com a atual resposta. Somente adicione elas se os jogadores estiverem comendo mosca\"\n            en=\"These are the players who haven't matched the current answer. Only add them if a player failed to do so for themselves.\"\n          />\n        </p>\n      )}\n      <Space className=\"space-container\" wrap align=\"center\">\n        {filteredAnswers.map((answer) => {\n          return (\n            <Button\n              size=\"large\"\n              disabled={isLoading}\n              className=\"m-admin__answer\"\n              icon={<PlusCircleFilled />}\n              loading={isLoading}\n              key={`admin-${answer.id}`}\n              onClick={() => onAddAnswer({ answer: { ...answer } })}\n            >\n              <Avatar id={players[answer.playerId].avatarId} /> {answer.answer}\n            </Button>\n          );\n        })}\n      </Space>\n    </VIPOnlyContainer>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Checkbox } from 'antd';\nimport { LockFilled, QuestionCircleFilled } from '@ant-design/icons';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useVIP } from 'hooks/useVIP';\n// Components\nimport { SheepAvatar } from './SheepAvatar';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { Card } from 'components/cards';\nimport { GroupQuestionCard } from 'components/cards/GroupQuestionCard';\n\ntype AnswerGroupProps = {\n  currentQuestion: MQuestion;\n  answerGroup: AnswerGroup;\n  players: GamePlayers;\n  remainingGroupsCount: number;\n  allowUserAnswer: GenericFunction;\n};\n\nexport function AnswerGroup({\n  answerGroup,\n  currentQuestion,\n  players,\n  allowUserAnswer,\n  remainingGroupsCount,\n}: AnswerGroupProps) {\n  const { translate } = useLanguage();\n  const isVIP = useVIP();\n\n  return (\n    <Step className=\"m-step\">\n      <Title level={3} size=\"small\">\n        <Translate pt=\"Comparar Respostas\" en=\"Compare Answers\" />\n      </Title>\n      <Card\n        header={translate('Pergunta', 'Question')}\n        color={['yellow', 'orange', 'green', 'blue', 'purple'][remainingGroupsCount % 5]}\n        className=\"m-question-card\"\n        footer={Array(remainingGroupsCount).fill('•').join('')}\n      >\n        <GroupQuestionCard question={currentQuestion} />\n      </Card>\n\n      <Instruction contained>\n        <Translate\n          pt=\"Não existe resposta certa ou errada. Aqui, apenas agrupamos respostas iguais para ganhar pontos. O objetivo é pensar como o grupo!\"\n          en=\"There's no wrong or right answer. Here, we just group equal answers for points. The goal is to think like the group\"\n        />\n      </Instruction>\n\n      <div className=\"m-answer-group\">\n        <div className=\"m-answer-group__answer-container\">\n          <div className=\"m-answer-group__answer\">{answerGroup.answer}</div>\n        </div>\n        <ul className=\"m-answer-group__players\">\n          {answerGroup.entries.map((entry) => {\n            const key = `ag-${entry.id}`;\n            const player = players[entry.playerId];\n            const isLocked =\n              player.answers[entry.id].parsedAnswer === answerGroup.parsedAnswer ||\n              player.answers[entry.id].isLocked;\n            return (\n              <li className=\"m-answer-group__player\" key={key}>\n                <SheepAvatar\n                  id={player.avatarId}\n                  sheepId={player.sheepId}\n                  className=\"m-answer-group__sheep-avatar\"\n                  width={40}\n                  animate\n                />\n                <span className=\"m-answer-group__player-name\">\n                  {player.name} {isLocked ? <LockFilled /> : <QuestionCircleFilled />}\n                </span>\n                {!isLocked && (\n                  <span className={clsx('m-answer-group__speech-bubble-small', getAnimationClass('tada'))}>\n                    {player.answers[entry.id].answer}\n                  </span>\n                )}\n                {!isLocked && isVIP && (\n                  <div className=\"m-answer-group__allow-add\">\n                    <Checkbox\n                      data-allowanswer={entry.id}\n                      onChange={(e) => allowUserAnswer(e.target.checked, entry.id)}\n                    />\n                  </div>\n                )}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </Step>\n  );\n}\n\nexport default AnswerGroup;\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\nimport { LockFilled, PlusCircleFilled } from '@ant-design/icons';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { PointsHighlight } from 'components/metrics/PointsHighlight';\n\ntype UserAnswersProps = {\n  answerGroup: any;\n  user: GamePlayer;\n  onAddAnswer: GenericFunction;\n};\n\nexport function UserAnswers({ answerGroup, user, onAddAnswer }: UserAnswersProps) {\n  const { isLoading } = useLoading();\n\n  const answers = user.answers ?? {};\n\n  const alreadyHasAnswer = answerGroup.entries.some((entry: any) => entry.playerId === user.id);\n\n  const points = Object.values(answers).reduce((acc: number, answer: any) => {\n    return acc + Number(answer?.score ?? 0);\n  }, 0);\n\n  return (\n    <div className=\"m-step\">\n      <div className=\"m-step__contained-content\">\n        <Instruction contained>\n          <Translate\n            pt=\"Se você cometeu um erro ortográfico ou acha que sua resposta deveria estar no grupo acima, clique nela para adicioná-la. Você só pode ter uma resposta por pergunta!\"\n            en=\"If you made a typo or for some reason think your answer should be in this group, click on it to add it. You can only have one answer per question.\"\n          />\n          <br />\n          <Translate\n            pt={\n              <>\n                Você tem: <PointsHighlight>{points}</PointsHighlight> ponto(s)\n              </>\n            }\n            en={\n              <>\n                You have:<PointsHighlight>{points}</PointsHighlight> point(s)\n              </>\n            }\n          />\n        </Instruction>\n\n        <Space className=\"space-container m-user-answers\" align=\"center\">\n          {Object.entries(answers).map(([key, answerObj]: any) => {\n            return (\n              <Button\n                key={`a-b-${key}`}\n                disabled={answerObj?.isLocked || alreadyHasAnswer || isLoading}\n                className=\"m-user-answer\"\n                icon={answerObj.isLocked ? <LockFilled /> : <PlusCircleFilled />}\n                onClick={() => onAddAnswer({ answer: { id: key, playerId: user.id, ...answerObj } })}\n              >\n                {answerObj.answer} {Boolean(answerObj.score) && `(${answerObj.score})`}\n              </Button>\n            );\n          })}\n        </Space>\n      </div>\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Divider } from 'antd';\n// Hook\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Components\nimport { Step } from 'components/steps';\nimport { AdminAnswerControl } from './components/AdminAnswerControl';\nimport { AnswerGroup } from './components/AnswerGroup';\nimport { UserAnswers } from './components/UserAnswers';\nimport { Translate } from 'components/language';\nimport { VIPNextPhaseButton } from 'components/vip';\n\ntype StepCompareProps = {\n  currentQuestion: MQuestion;\n  answerGroup: AnswerGroup;\n  players: GamePlayers;\n  user: GamePlayer;\n  allAnswers: MAnswer[];\n  onAddAnswer: GenericFunction;\n  onNextAnswer: GenericFunction;\n  remainingGroupsCount: number;\n  allowedList: AllowedList;\n  setAllowedList: GenericFunction;\n  round: GameRound;\n} & AnnouncementProps;\n\nexport function StepCompare({\n  announcement,\n  currentQuestion,\n  answerGroup,\n  players,\n  user,\n  allAnswers,\n  onAddAnswer,\n  onNextAnswer,\n  remainingGroupsCount,\n  allowedList,\n  setAllowedList,\n  round,\n}: StepCompareProps) {\n  useTemporarilyHidePlayersBar();\n  const allowUserAnswer = (isAllowed: boolean, answerId: string) => {\n    const allowedListCopy = { ...allowedList };\n    if (!isAllowed) {\n      delete allowedListCopy?.[answerId];\n      setAllowedList(allowedListCopy);\n    } else {\n      setAllowedList({ ...allowedListCopy, [answerId]: true });\n    }\n  };\n\n  if (!answerGroup) {\n    return (\n      <Step fullWidth>\n        <Translate pt=\"Pronto!\" en=\"All done!\" />\n        <Divider />\n        <VIPNextPhaseButton round={round} />\n      </Step>\n    );\n  }\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <AnswerGroup\n        currentQuestion={currentQuestion}\n        answerGroup={answerGroup}\n        players={players}\n        allowUserAnswer={allowUserAnswer}\n        remainingGroupsCount={remainingGroupsCount}\n      />\n      <Divider />\n      <UserAnswers user={user} answerGroup={answerGroup} onAddAnswer={onAddAnswer} />\n      <Divider />\n      <AdminAnswerControl\n        key={answerGroup.answer}\n        answerGroup={answerGroup}\n        allAnswers={allAnswers}\n        players={players}\n        onAddAnswer={onAddAnswer}\n        onNextAnswer={onNextAnswer}\n        allowedList={allowedList}\n        remainingGroupsCount={remainingGroupsCount}\n      />\n    </Step>\n  );\n}\n","import { useState } from 'react';\n// Hooks\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\nimport { useOnAddAnswerAPIRequest, useOnNextAnswersAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { DiscussionIcon } from 'icons/DiscussionIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { StepCompare } from './StepCompare';\nimport { ComparingRules } from './components/RulesBlobs';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\n\nfunction PhaseCompare({ state, players, info }: PhaseProps) {\n  const { step } = useStep(0);\n  const user = useUser(players, state);\n  const [allowedList, setAllowedList] = useState({});\n\n  const onAddAnswer = useOnAddAnswerAPIRequest();\n  const onNextAnswer = useOnNextAnswersAPIRequest(() => setAllowedList({}));\n\n  const answerGroup = state.answersList[0];\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<DiscussionIcon />}\n      title={<Translate pt=\"Respostas\" en=\"Answers\" />}\n      currentRound={state?.round?.current}\n      duration={state?.round?.current < 3 ? 20 : undefined}\n      type=\"overlay\"\n    >\n      <ComparingRules />\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.MENTE_COLETIVA.COMPARE}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepCompare\n          currentQuestion={state.currentQuestion}\n          answerGroup={answerGroup}\n          players={players}\n          user={user}\n          allAnswers={state.allAnswers}\n          onAddAnswer={onAddAnswer}\n          onNextAnswer={onNextAnswer}\n          remainingGroupsCount={state.answersList?.length ?? 0}\n          allowedList={allowedList}\n          setAllowedList={setAllowedList}\n          round={state.round}\n          announcement={announcement}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseCompare;\n","import clsx from 'clsx';\nimport { useEffect, useMemo, useState } from 'react';\n// Ant Design Resources\nimport { HeartFilled } from '@ant-design/icons';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { Pasture } from './components/Pasture';\nimport { RoundType } from './components/RoundType';\nimport { Step, StepSwitcher } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { RankingBoard } from 'components/ranking';\nimport { VIPNextPhaseButton } from 'components/vip';\n\ntype StepResolutionProps = {\n  ranking: GameRanking;\n  players: GamePlayers;\n  roundType: number;\n  pastureChangeStr: string;\n  round: GameRound;\n  announceSave: boolean;\n  pastureSize: number;\n} & AnnouncementProps;\n\nexport function StepResolution({\n  announcement,\n  ranking,\n  players,\n  roundType,\n  pastureChangeStr,\n  round,\n  pastureSize,\n  announceSave = false,\n}: StepResolutionProps) {\n  useTemporarilyHidePlayersBar();\n  const [step, setStep] = useState(0);\n  const [pastureIndex, setPastureIndex] = useState(0);\n  const [showAnnounceSave, setShowAnnounceSave] = useState(false);\n\n  const pastureChange = useMemo(() => JSON.parse(pastureChangeStr), [pastureChangeStr]);\n  const { timeLeft } = useCountdown({\n    duration: 17,\n    autoStart: true,\n  });\n\n  useEffect(() => {\n    if (timeLeft === 7) {\n      setStep(1);\n    }\n    if (timeLeft === 5) {\n      setPastureIndex(1);\n    }\n    if (timeLeft === 4 && announceSave) {\n      setShowAnnounceSave(true);\n    }\n\n    if (timeLeft === 1) {\n      setPastureIndex(2);\n    }\n  }, [timeLeft]); // eslint-disable-line\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title level={2}>\n        <Translate pt=\"Resultado\" en=\"Results\" />\n      </Title>\n\n      {step === 0 && <RoundType roundType={roundType} />}\n\n      <StepSwitcher step={step} players={players}>\n        <Step key={0}>\n          <RankingBoard ranking={ranking} players={players} hideGainedPoints delay={1} />\n        </Step>\n\n        <Step key={1}>\n          {showAnnounceSave && (\n            <Instruction contained className={clsx('m-save-card', getAnimationClass('zoomInDown'))}>\n              <HeartFilled style={{ color: 'red' }} />{' '}\n              <Translate\n                pt=\"Vamos dar uma última chance para a pobre ovelhinha que\n              ia morrer agora\"\n                en=\"Let's give one more chance to the poor sheep about to die. The last one!\"\n              />{' '}\n              <HeartFilled style={{ color: 'red' }} />\n            </Instruction>\n          )}\n          <Pasture\n            players={pastureChange[pastureIndex]}\n            pastureSize={pastureSize}\n            roundType={step > 0 ? roundType : undefined}\n          />\n          <VIPNextPhaseButton round={round} />\n        </Step>\n      </StepSwitcher>\n    </Step>\n  );\n}\n","// Hooks\nimport { useStep } from 'hooks/useStep';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { CustomerReviewIcon } from 'icons/CustomerReviewIcon';\n// Components\nimport { Translate } from 'components/language';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { StepResolution } from './StepResolution';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\n\nfunction PhaseResolution({ state, players, info }: PhaseProps) {\n  const { step } = useStep(0);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<CustomerReviewIcon />}\n      title={<Translate pt=\"Resultado\" en=\"And who moves is...\" />}\n      currentRound={state?.round?.current}\n      duration={3}\n      type=\"overlay\"\n    >\n      <Instruction>\n        <Translate\n          pt={\n            <>\n              Agora podemos saber quem deve ser linchado porque não combina com o grupo!\n              <br />\n              Graças a Deus, mais espaço!\n            </>\n          }\n          en={\n            <>\n              Now we will know who can be moved because they don't match with the group!\n              <br />\n              Thank God, more room!\n            </>\n          }\n        />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.MENTE_COLETIVA.RESOLUTION}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepResolution\n          announcement={announcement}\n          ranking={state.ranking}\n          players={players}\n          pastureChangeStr={state.pastureChangeStr}\n          roundType={state.roundType}\n          announceSave={state?.announceSave}\n          round={state.round}\n          pastureSize={state.pastureSize}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseResolution;\n","// Utils\nimport { achievementsReference } from './utils/achievements';\n// Icons\nimport { TheEndIcon } from 'icons/TheEndIcon';\n// Components\nimport { GameOverWrapper } from 'components/game-over';\nimport { Achievements } from 'components/general/Achievements';\nimport { Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { SheepAvatar } from './components/SheepAvatar';\nimport { Space } from 'antd';\n\nfunction PhaseGameOver({ state, info, players }: PhaseProps) {\n  return (\n    <GameOverWrapper\n      info={info}\n      state={state}\n      players={players}\n      announcementIcon={<TheEndIcon />}\n      rateWidgetCustomText={<Translate pt=\"Sugira uma pergunta:\" en=\"Suggest a question:\" />}\n    >\n      <div className=\"m-game-over-in-memoriam\">\n        <Title>In memoriam</Title>\n        <div className=\"m-sheep-rip\">\n          {state.losers.map((player: GamePlayer) => {\n            return (\n              <div className=\"m-sheep-rip__entry\" key={`sheep-player-1`}>\n                <SheepAvatar id={player.avatarId} width={80} sheepId={player.sheepId} />\n                <span className=\"m-sheep-rip__name\">{player.name}</span>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      <Achievements players={players} achievements={state.achievements} reference={achievementsReference} />\n\n      {Boolean(state.gallery) && (\n        <>\n          <Title size=\"x-small\" level={3}>\n            <Translate pt=\"Melhores Respostas\" en=\"Best Answers\" />\n          </Title>\n          <Space className=\"space-container gallery\" wrap>\n            {state.gallery.map(({ question, answers }: MGalleryEntry) => {\n              return (\n                <div className=\"gallery-entry\" key={question.id}>\n                  <h4 className=\"gallery-entry__question\">\n                    {question.prefix} {question.number} {question.suffix}\n                  </h4>\n                  {answers.map(({ answer, playerIds }) => {\n                    return (\n                      <div className=\"gallery-entry__answer\" key={`${question.id}-${answer}`}>\n                        <span>{answer}</span>\n                        <span>\n                          {playerIds.length} <Translate pt=\"jogadores\" en=\"players\" />\n                        </span>\n                      </div>\n                    );\n                  })}\n                </div>\n              );\n            })}\n          </Space>\n        </>\n      )}\n    </GameOverWrapper>\n  );\n}\n\nexport default PhaseGameOver;\n","import { ConfigProvider } from 'antd';\n// Constants\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport { LoadingPage } from 'components/loaders';\nimport PhaseQuestionSelection from './PhaseQuestionSelection';\nimport PhaseEverybodyWrites from './PhaseEverybodyWrites';\nimport PhaseCompare from './PhaseCompare';\nimport PhaseResolution from './PhaseResolution';\nimport PhaseGameOver from './PhaseGameOver';\n// Sass\nimport 'assets/fonts/architects-daughter.scss';\nimport './mente-coletiva.scss';\n\nfunction getActiveComponent(state: GameState) {\n  // If phase is not defined, it is likely that the game is still loading\n  if (state && !state.phase) return LoadingPage;\n\n  switch (state.phase) {\n    case PHASES.DEFAULT.LOBBY:\n      return PhaseLobby;\n    case PHASES.DEFAULT.RULES:\n      return PhaseRules;\n    case PHASES.DEFAULT.SETUP:\n      return PhaseSetup;\n    case PHASES.MENTE_COLETIVA.QUESTION_SELECTION:\n      return PhaseQuestionSelection;\n    case PHASES.MENTE_COLETIVA.EVERYBODY_WRITES:\n      return PhaseEverybodyWrites;\n    case PHASES.MENTE_COLETIVA.COMPARE:\n      return PhaseCompare;\n    case PHASES.MENTE_COLETIVA.RESOLUTION:\n      return PhaseResolution;\n    case PHASES.DEFAULT.GAME_OVER:\n      return PhaseGameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionMenteColetiva() {\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorPrimary: THEME_COLORS.WOOD,\n          colorLink: THEME_COLORS.WOOD,\n        },\n      }}\n    >\n      <Session gameCollection={GAME_COLLECTION.MENTE_COLETIVA} getActiveComponent={getActiveComponent} />\n    </ConfigProvider>\n  );\n}\n\nexport default SessionMenteColetiva;\n","export const achievementsReference: AchievementReference = {\n  MOST_MATCHES: {\n    icon: 'double-arrow-up',\n    title: {\n      pt: 'Mais Matches',\n      en: 'Best Matcher',\n    },\n    description: {\n      pt: 'As respostas combinaram mais vezes com outros jogadores',\n      en: 'Their answers matched the most with other players',\n    },\n  },\n  LEAST_MATCHES: {\n    icon: 'difference',\n    title: {\n      pt: 'Mais Diferentão',\n      en: 'Most Unique',\n    },\n    description: {\n      pt: 'As respostas combinaram menos vezes com outros jogadores',\n      en: 'Their answers matched the least with other players',\n    },\n  },\n  MOST_DEAD: {\n    icon: 'skull',\n    title: {\n      pt: 'Mais Morta',\n      en: 'Most Dead',\n    },\n    description: {\n      pt: 'A única ovelhinha morta no final',\n      en: 'The only dead sheep in the end',\n    },\n  },\n  MOST_LONELY: {\n    icon: 'face-tired',\n    title: {\n      pt: 'Mais Solitária',\n      en: 'Most Lonely',\n    },\n    description: {\n      pt: 'A única ovelhinha num pasto sozinha no final',\n      en: 'The only sheep by itself in the end',\n    },\n  },\n  BEST_TRAVELER: {\n    icon: 'distance',\n    title: {\n      pt: 'Mais Viajada',\n      en: 'Best Traveler',\n    },\n    description: {\n      pt: 'Ovelhinha que mais moveu pra direita e esquerda',\n      en: 'Sheep who moved the most left or right',\n    },\n  },\n};\n\nexport default achievementsReference;\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\n/**\n * Gets player that is assigned to a property in the state\n * @param propertyName\n * @param state\n * @param players\n * @returns a player instance, a boolean if the player is assigned to given property\n */\nexport function useWhichPlayerIsThe(\n  propertyName = 'activePlayer',\n  state: PlainObject = {},\n  players: GamePlayers = {}\n): [GamePlayer, boolean] {\n  const [userId] = useGlobalState('userId');\n  const [activePlayer, setActivePlayer] = useState<GamePlayer>({});\n  const [isUser, setIsUser] = useState(false);\n\n  // Determine if user is active as the guesser, the clue giver, the psychic, the storyteller, etc\n  useEffect(() => {\n    const activePlayer = state?.[propertyName];\n    setActivePlayer(players?.[activePlayer] ?? {});\n    setIsUser(state?.[propertyName] === userId);\n  }, [players, propertyName, state, userId]);\n\n  return [activePlayer, isUser];\n}\n","export function AnimatedClockIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fbfbfb\"\n        d=\"M464 256c0 114.9-93.1 208-208 208S48 370.9 48 256 141.1 48 256 48s208 93.1 208 208z\"\n      ></path>\n      <path\n        fill=\"#e3effa\"\n        d=\"M464 256c0-114.9-93.2-208-208.1-207.9-67 0-130 32.4-169 86.9 93.4-66.9 223.3-45.4 290.2 47.9 51.9 72.4 51.9 169.8 0 242.3C431.7 386.1 464 323.1 464 256z\"\n      ></path>\n      <path\n        fill=\"#fcc369\"\n        d=\"M256 8c137 0 248 111 248 248S393 504 256 504 8 393 8 256 119 8 256 8zm0 456c114.9 0 208-93.1 208-208S370.9 48 256 48 48 141.1 48 256s93.1 208 208 208z\"\n      ></path>\n      <path\n        fill=\"#ed9b52\"\n        d=\"M256 32C132.3 32 32 132.3 32 256s100.3 224 224 224 224-100.3 224-224S379.7 32 256 32zm0 432c-114.9 0-208-93.1-208-208S141.1 48 256 48s208 93.1 208 208-93.1 208-208 208z\"\n      ></path>\n      <path d=\"M256 496c-132.5-.1-239.9-107.5-240-240 0-4.4-3.6-8-8-8s-8 3.6-8 8c0 141.4 114.6 256 256 256.1 109.6 0 207-69.7 242.4-173.5l-15.1-5.2C450.1 430.7 358.7 496 256 496zm0-496C133.8.1 28.6 86.6 4.8 206.5l15.7 3.1C46.3 79.5 172.6-5 302.6 20.7s214.6 152.1 188.8 282.1c-1 5.1-2.2 10.1-3.5 15.1l15.5 4.1c36.4-136.7-45-277-181.8-313.4C300.2 2.9 278.1 0 256 0zM18 225l-15.9-2c-.7 5.4-1.2 10.9-1.6 16.5l16 1c.3-5.2.8-10.4 1.5-15.5z\"></path>\n      <path d=\"M256 472c119.3 0 216-96.7 216-216S375.3 40 256 40 40 136.7 40 256c.1 119.2 96.8 215.9 216 216zm-8-415.8V88h16V56.2c104.1 4.3 187.5 87.7 191.8 191.8H424v16h31.8c-4.3 104.1-87.7 187.5-191.8 191.8V424h-16v31.8C143.9 451.5 60.5 368.1 56.2 264H88v-16H56.2C60.5 143.9 143.9 60.5 248 56.2z\"></path>\n\n      <g>\n        <path\n          fill=\"#555fa3\"\n          d=\"M273 141.6v114.24a15.55 15.55 0 01-3.68 10.16l-50.24 61.12a14.47 14.47 0 01-20.42 1.25 14.32 14.32 0 01-2.78-3.33 18.75 18.75 0 012.4-22.64l40.8-48.16A7.77 7.77 0 00241 249V141.6a16.07 16.07 0 1132-3 15.44 15.44 0 010 3z\"\n        ></path>\n        <path d=\"M206.6 339.94c.56 0 1.11.06 1.67.06a22.7 22.7 0 0016.95-7.83l50.31-61.05a24 24 0 005.47-15.26V141.6a24 24 0 10-48-3 25.69 25.69 0 000 3v107.47l-40.62 48a26.49 26.49 0 00-3.2 32.38 23.05 23.05 0 0017.42 10.49zm-2.18-32.34l40.8-48.18a16.1 16.1 0 003.78-10.36V141.6a8.14 8.14 0 1116 0v114.26a8 8 0 01-1.82 5.08l-50.05 60.76a6.37 6.37 0 01-5.32 2.28 7.05 7.05 0 01-5.29-3.39 10.81 10.81 0 011.89-13z\"></path>\n        <animateTransform\n          attributeName=\"transform\"\n          dur=\"2s\"\n          from=\"0 256 256\"\n          repeatCount=\"indefinite\"\n          to=\"360 256 256\"\n          type=\"rotate\"\n        ></animateTransform>\n      </g>\n    </svg>\n  );\n}\n","export function ArrowSignIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <g>\n        <path\n          d=\"M256.64 129h234.85c11.85 0 17.91 5.85 17.92 17.53v217.83c0 12.09-6.49 18.69-18.35 18.69H21.38c-4.89 0-9.58-.37-13.3-4.19-3.39-3.48-5.52-7.37-5.52-12.38q0-110.67.06-221.33c0-9.7 7.17-16.14 17.67-16.14zm-1.08 248.27h235.85c8.55 0 12.45-3.71 12.45-11.94q0-109.17-.1-218.33c0-9.45-4.55-12.82-12.68-12.82q-234.58.13-469.19.06c-10.46 0-14.07 3.61-14.07 14.1v214.83c0 10.71 3.36 14.12 13.91 14.12q116.92-.02 233.83-.05z\"\n          fill=\"#fdac00\"\n        ></path>\n        <path\n          d=\"M255.56 377.25H21.72c-10.55 0-13.91-3.41-13.91-14.12V148.3c0-10.49 3.61-14.1 14.07-14.1q234.6 0 469.19-.06c8.13 0 12.65 3.37 12.68 12.82q.32 109.17.1 218.33c0 8.23-3.9 11.94-12.45 11.94q-117.92.03-235.84.02zm.58-7.89h233.34c6.65 0 6.65 0 6.65-6.7V148.84c0-6.48-.16-6.65-6.79-6.65q-233.85 0-467.69-.11c-4.38 0-6 1-6 5.72q.23 107.41.11 214.83c0 6.72 0 6.72 7 6.72z\"\n          fill=\"#100f0d\"\n        ></path>\n        <path\n          d=\"M256.14 369.35H22.8c-7 0-7 0-7-6.72q0-107.42-.11-214.83c0-4.72 1.58-5.72 6-5.72q233.85.16 467.69.11c6.63 0 6.79.17 6.79 6.65v213.82c0 6.68 0 6.7-6.65 6.7zM451.9 255.71c-1.24-.9-2-1.51-2.84-2.07q-40-27.3-80.06-54.58c-13.06-8.91-26.08-17.88-39.17-26.73-6.36-4.3-12-4.29-17.05-.25a14.1 14.1 0 00-3.88 17.1c4.34 9.48 6.53 19.68 10.4 29.3 1.64 4.09.48 5.16-3.76 5.16q-125.7-.16-251.39-.22c-3.47 0-4.53.76-4.49 4.35.18 18.32.25 36.65 0 55-.08 4.56 1.29 5.4 5.57 5.39q118.2-.19 236.4-.1c5.33 0 10.67.08 16 0 2.53-.06 3.2.53 2.27 3.12-3.72 10.39-7.12 20.9-10.92 31.27-2.71 7.38-1.58 12.91 4.23 17.56 4.64 3.73 10.41 3.57 16.59-.59 7.08-4.77 14.09-9.63 21.13-14.45l75.36-51.54c8.44-5.88 16.89-11.73 25.61-17.72z\"\n          fill=\"#fdac00\"\n        ></path>\n        <path\n          d=\"M451.9 255.71c-8.72 6-17.17 11.84-25.65 17.64q-37.67 25.78-75.36 51.54c-7 4.82-14.05 9.68-21.13 14.45-6.18 4.16-11.95 4.32-16.59.59-5.81-4.65-6.94-10.18-4.23-17.56 3.8-10.37 7.2-20.88 10.92-31.27.93-2.59.26-3.18-2.27-3.12-5.33.13-10.67 0-16 0q-118.2 0-236.4.1c-4.28 0-5.65-.83-5.57-5.39.29-18.32.22-36.65 0-55 0-3.59 1-4.36 4.49-4.35q125.68.2 251.39.22c4.24 0 5.4-1.07 3.76-5.16-3.87-9.62-6.06-19.82-10.4-29.3a14.1 14.1 0 013.88-17.1c5-4 10.69-4.05 17.05.25 13.09 8.85 26.11 17.82 39.17 26.73q40 27.3 80.06 54.58c.86.64 1.64 1.25 2.88 2.15z\"\n          fill=\"#100f0d\"\n        ></path>\n      </g>\n    </svg>\n  );\n}\n","export function CustomerReviewIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ff8ccc\"\n        d=\"M318.68 504.5v-43.803c18.811 0 34.06-15.238 34.06-34.035V351.31c0-27.507-16.037-51.271-39.279-62.465 12.006-9.345 19.391-24.338 18.12-40.993-1.767-23.153-20.589-41.824-43.771-43.432-27.642-1.917-50.662 19.923-50.662 47.135 0 14.81 6.823 28.023 17.494 36.687-23.954 10.919-40.612 35.042-40.612 63.068v75.352c0 18.797 15.249 34.035 34.06 34.035h1.931V504.5z\"\n      ></path>\n      <path\n        fill=\"#a6f5cf\"\n        d=\"M457.39 504.5v-43.803c18.811 0 34.06-15.238 34.06-34.035V351.31c0-27.507-16.037-51.271-39.279-62.465 12.006-9.345 19.391-24.338 18.12-40.993-1.767-23.153-20.589-41.824-43.771-43.432-27.642-1.917-50.662 19.923-50.662 47.135 0 14.81 6.823 28.023 17.494 36.687-23.954 10.919-40.612 35.042-40.612 63.068v75.352c0 18.797 15.249 34.035 34.06 34.035h1.931V504.5z\"\n      ></path>\n      <path\n        fill=\"#8aedbd\"\n        d=\"M452.172 288.845c12.006-9.345 19.391-24.338 18.12-40.993-1.767-23.153-20.589-41.824-43.771-43.432-8.399-.582-16.37 1.028-23.4 4.316 15.037 7.058 25.852 21.839 27.171 39.115 1.271 16.655-6.115 31.648-18.12 40.993 23.241 11.194 39.279 34.958 39.279 62.465v109.387h5.94c18.811 0 34.06-15.238 34.06-34.035V351.31c0-27.507-16.038-51.271-39.279-62.465z\"\n      ></path>\n      <path\n        fill=\"#ff78c2\"\n        d=\"M313.755 288.845c12.006-9.345 19.391-24.338 18.12-40.993-1.767-23.153-20.589-41.824-43.771-43.432-8.399-.582-16.37 1.028-23.4 4.316 15.037 7.058 25.852 21.839 27.171 39.115 1.271 16.655-6.115 31.648-18.12 40.993 23.241 11.194 39.279 34.958 39.279 62.465v109.387h5.94c18.811 0 34.06-15.238 34.06-34.035V351.31c0-27.507-16.038-51.271-39.279-62.465z\"\n      ></path>\n      <path\n        fill=\"#fff5b5\"\n        d=\"M475.598 138.314H452.53l-25.853 28.823-27.369-28.823h-89.671l-26.119 28.823-27.104-28.823h-26.532 3.549c-17.922 0-32.451-14.518-32.451-32.426V40.329c0-17.909 14.529-32.426 32.451-32.426h238.617c17.922 0 32.451 14.518 32.451 32.426v65.558c0 17.909-14.529 32.426-32.451 32.426h3.55z\"\n      ></path>\n      <path\n        fill=\"#ffef8f\"\n        d=\"M472.049 7.903h-40c17.922 0 32.451 14.518 32.451 32.426v65.558c0 17.909-14.529 32.426-32.451 32.426h-32.741l6.8 7.161 20.57 21.662 25.853-28.823h19.519c17.922 0 32.451-14.518 32.451-32.426V40.329c-.001-17.908-14.53-32.426-32.452-32.426z\"\n      ></path>\n      <path\n        fill=\"#ffd54d\"\n        d=\"M264.705 38.372l10.305 20.864 23.042 3.346-16.674 16.24 3.936 22.932-20.609-10.827-20.609 10.827 3.936-22.932-16.673-16.24 23.041-3.346zm88.036 0l10.304 20.864 23.042 3.346-16.673 16.24 3.936 22.932-20.609-10.827-20.61 10.827 3.936-22.932-16.673-16.24 23.042-3.346zm88.035 0l10.305 20.864 23.042 3.346-16.673 16.24 3.936 22.932-20.61-10.827-20.609 10.827 3.936-22.932-16.673-16.24 23.042-3.346z\"\n      ></path>\n      <g>\n        <path\n          fill=\"#ffd54d\"\n          d=\"M112.216 504.5v-43.803c18.811 0 34.06-15.238 34.06-34.035V351.31c0-27.507-16.037-51.271-39.279-62.465 12.006-9.345 19.391-24.338 18.12-40.993-1.767-23.153-20.589-41.824-43.771-43.432-27.642-1.917-50.662 19.923-50.662 47.135 0 14.81 6.823 28.023 17.494 36.687-23.952 10.919-40.611 35.042-40.611 63.068v75.352c0 18.797 15.249 34.035 34.06 34.035h1.931V504.5z\"\n        ></path>\n        <path\n          fill=\"#ffc919\"\n          d=\"M106.998 288.845c12.006-9.345 19.391-24.338 18.12-40.993-1.767-23.153-20.589-41.824-43.771-43.432-8.399-.582-16.37 1.028-23.4 4.316 15.037 7.058 25.852 21.839 27.171 39.115 1.271 16.655-6.115 31.648-18.12 40.993 23.241 11.194 39.279 34.958 39.279 62.465v109.387h5.94c18.811 0 34.06-15.238 34.06-34.035V351.31c0-27.507-16.038-51.271-39.279-62.465z\"\n        ></path>\n        <path\n          fill=\"#ff8ccc\"\n          d=\"M117.183 139.082h-13.939l-26.168 29.082-27.532-29.082H36.661h3.581c-18.083 0-32.742-14.648-32.742-32.718V40.218C7.5 22.148 22.159 7.5 40.242 7.5h73.36c18.083 0 32.742 14.648 32.742 32.718v66.147c0 17.832-14.897 32.718-32.742 32.718l3.581-.001z\"\n        ></path>\n        <path\n          fill=\"#ff78c2\"\n          d=\"M113.602 7.5h-40c18.083 0 32.742 14.648 32.742 32.718v66.147c0 17.832-14.897 32.718-32.742 32.718H49.543l7.024 7.42 20.508 21.662 26.168-29.082h10.358c17.845 0 32.742-14.886 32.742-32.718V40.218c.001-18.07-14.658-32.718-32.741-32.718z\"\n        ></path>\n        <path\n          fill=\"#fff\"\n          d=\"M87.404 74.99l17.235-17.651a7.5 7.5 0 00-10.732-10.48L76.922 64.255 59.937 46.86a7.5 7.5 0 00-10.732 10.48l17.234 17.65-17.235 17.651a7.5 7.5 0 0010.732 10.48l16.985-17.395 16.985 17.395a7.478 7.478 0 005.367 2.26 7.5 7.5 0 005.365-12.74z\"\n        ></path>\n      </g>\n      <g>\n        <path d=\"M464.609 287.33c9.463-10.942 14.288-25.284 13.162-40.049-2.048-26.837-23.858-48.479-50.731-50.343-15.387-1.07-30.049 4.114-41.276 14.59-11.062 10.321-17.405 24.91-17.405 40.027 0 12.911 4.492 25.175 12.576 34.909-12.319 7.827-22.044 18.952-28.212 31.875-5.947-12.44-15.18-23.241-26.823-31.009 9.463-10.942 14.288-25.284 13.162-40.049-2.048-26.836-23.857-48.479-50.731-50.343-15.389-1.07-30.049 4.114-41.276 14.59-11.061 10.321-17.405 24.91-17.405 40.027 0 12.911 4.491 25.175 12.576 34.909-21.972 13.96-35.694 38.408-35.694 64.846v75.351c0 21.016 15.699 38.436 35.992 41.164V504.5a7.5 7.5 0 0015 0V373.009a7.5 7.5 0 00-15 0v79.6c-11.981-2.564-20.992-13.224-20.992-25.948V351.31c0-24.136 14.219-46.213 36.224-56.244a7.5 7.5 0 001.617-12.647c-9.355-7.595-14.721-18.845-14.721-30.864 0-11.135 4.488-21.456 12.638-29.06 8.153-7.607 18.807-11.366 30.005-10.593 19.5 1.352 35.326 17.053 36.811 36.521 1.021 13.378-4.679 26.277-15.249 34.504a7.5 7.5 0 001.352 12.675c21.282 10.251 35.033 32.118 35.033 55.708v75.351c0 12.03-8.055 22.216-19.061 25.458v-79.11a7.5 7.5 0 00-15 0V504.5a7.5 7.5 0 0015 0v-36.981c10.946-2.001 20.407-8.303 26.561-17.082 6.513 9.291 16.731 15.807 28.492 17.388V504.5a7.5 7.5 0 0015 0V373.009a7.5 7.5 0 00-15 0v79.6c-11.981-2.564-20.992-13.224-20.992-25.948V351.31c0-24.136 14.218-46.213 36.223-56.244a7.5 7.5 0 001.617-12.647c-9.355-7.596-14.721-18.845-14.721-30.864 0-11.135 4.488-21.456 12.638-29.06 8.153-7.607 18.803-11.369 30.006-10.593 19.5 1.352 35.326 17.053 36.811 36.521 1.021 13.378-4.679 26.277-15.249 34.504a7.5 7.5 0 001.352 12.675c21.282 10.251 35.033 32.118 35.033 55.708v75.351c0 12.03-8.055 22.216-19.061 25.458v-79.11a7.5 7.5 0 00-15 0V504.5a7.5 7.5 0 0015 0v-36.981c19.35-3.538 34.061-20.513 34.061-40.857v-75.351c-.001-25.765-13.198-49.873-34.343-63.981zM472.049.403h-54.148c-9.697 0-9.697 15 0 15h54.148c13.758 0 24.951 11.182 24.951 24.926v65.559c0 13.745-11.193 24.926-24.951 24.926H452.53a7.5 7.5 0 00-5.583 2.492l-20.427 22.773-21.773-22.93a7.5 7.5 0 00-5.438-2.335h-89.671a7.502 7.502 0 00-5.558 2.464l-20.663 22.802-21.538-22.904a7.501 7.501 0 00-5.464-2.362h-22.982c-13.758 0-24.951-11.182-24.951-24.926V40.329c0-13.745 11.193-24.926 24.951-24.926H377.99c9.697 0 9.697-15 0-15H233.432c-22.029 0-39.951 17.911-39.951 39.926v65.559c0 22.016 17.922 39.926 39.951 39.926h19.74l24.883 26.46c2.996 3.185 8.078 3.147 11.021-.102l23.886-26.359h83.126l25.151 26.487c3.72 3.165 7.393 3.113 11.021-.157l23.618-26.331h16.171c22.029 0 39.951-17.911 39.951-39.926V40.329C512 18.313 494.078.403 472.049.403z\"></path>\n        <path d=\"M305.185 60.265a7.502 7.502 0 00-6.056-5.106l-19.141-2.779-8.559-17.33c-2.702-5.469-10.747-5.469-13.449 0l-8.559 17.33-19.14 2.779c-6.04.878-8.529 8.536-4.155 12.795l13.847 13.487-3.269 19.043a7.5 7.5 0 0010.879 7.908l17.122-8.995 17.122 8.995c5.375 2.824 11.913-1.892 10.88-7.908l-3.269-19.043 13.847-13.487a7.499 7.499 0 001.9-7.689zm-29.039 13.184c-3.205 3.121-2.14 10.806-.793 14.599-6.667-5.385-14.628-5.385-21.295 0 2.708-7.936.283-15.402-6.573-20.229 8.39.123 14.742-4.494 17.221-12.51 2.479 8.016 8.831 12.633 17.221 12.51zm83.319-38.398c-2.702-5.469-10.747-5.469-13.449 0l-8.559 17.33-19.141 2.779c-6.04.878-8.529 8.536-4.155 12.795l13.847 13.487-3.269 19.043c-1.032 6.013 5.479 10.746 10.88 7.908l17.122-8.995 17.122 8.995c5.375 2.824 11.913-1.892 10.88-7.908l-3.269-19.043 13.847-13.487c4.374-4.259 1.884-11.917-4.155-12.795l-19.141-2.779zm4.716 38.398c-3.205 3.121-2.14 10.806-.793 14.599-6.667-5.385-14.628-5.385-21.295 0 2.708-7.936.283-15.402-6.573-20.229 8.39.123 14.742-4.494 17.221-12.51 2.479 8.016 8.831 12.633 17.221 12.51zm38.016-5.495l13.847 13.487-3.269 19.043c-1.032 6.013 5.479 10.746 10.88 7.908l17.122-8.995 17.122 8.995c5.375 2.824 11.913-1.892 10.88-7.908l-3.269-19.043 13.847-13.487c4.374-4.259 1.884-11.917-4.155-12.795l-19.14-2.779-8.559-17.33c-2.702-5.469-10.747-5.469-13.449 0l-8.559 17.33-19.141 2.779c-6.042.878-8.531 8.536-4.157 12.795zm29.352-1.296c4.428-.644 8.085-7.49 9.227-11.35 2.479 8.016 8.831 12.633 17.221 12.51-6.856 4.828-9.282 12.294-6.573 20.229-6.667-5.385-14.628-5.385-21.295 0 2.708-7.936.283-15.402-6.573-20.229zM119.436 287.33c9.463-10.942 14.288-25.284 13.162-40.049-2.048-26.836-23.857-48.479-50.731-50.343-15.389-1.07-30.049 4.114-41.276 14.59-11.061 10.321-17.405 24.91-17.405 40.027 0 12.911 4.491 25.175 12.576 34.909C13.79 300.424.068 324.872.068 351.31v75.351c0 21.016 15.699 38.436 35.992 41.164V504.5a7.5 7.5 0 0015 0V373.009a7.5 7.5 0 00-15 0v79.6c-11.981-2.564-20.992-13.224-20.992-25.948V351.31c0-24.136 14.219-46.213 36.224-56.244a7.5 7.5 0 001.617-12.647c-9.355-7.595-14.721-18.845-14.721-30.864 0-11.135 4.488-21.456 12.638-29.06 8.153-7.607 18.808-11.366 30.005-10.593 19.5 1.352 35.326 17.053 36.811 36.521 1.021 13.378-4.679 26.277-15.249 34.504a7.5 7.5 0 001.352 12.675c21.282 10.251 35.033 32.118 35.033 55.708v15.699a7.5 7.5 0 0015 0V351.31c-.001-25.764-13.198-49.872-34.342-63.98z\"></path>\n        <path d=\"M146.277 399.5a7.5 7.5 0 00-7.5 7.5v19.662c0 12.03-8.055 22.216-19.061 25.458v-79.11a7.5 7.5 0 00-15 0V504.5a7.5 7.5 0 0015 0v-36.981c19.35-3.538 34.061-20.513 34.061-40.857V407a7.5 7.5 0 00-7.5-7.5zM113.602 0h-73.36C18.053 0 0 18.042 0 40.218v66.147c0 18.937 16.299 40.218 36.661 40.218h9.654l25.313 26.738c3.006 3.174 8.087 3.121 11.021-.14l23.934-26.598h10.599c20.075 0 36.661-21.57 36.661-40.218V40.218C153.844 18.042 135.792 0 113.602 0zm25.242 106.365c0 13.669-11.559 25.218-25.242 25.218h-10.359a7.502 7.502 0 00-5.575 2.483l-20.733 23.041-21.946-23.181a7.501 7.501 0 00-5.446-2.344h-9.301C26.324 131.583 15 120.27 15 106.365V40.218C15 26.313 26.324 15 40.242 15h73.36c13.918 0 25.242 11.313 25.242 25.218z\"></path>\n        <path d=\"M104.513 46.733a7.5 7.5 0 00-10.606.126L76.922 64.255 59.937 46.86c-6.776-6.938-17.507 3.542-10.732 10.479L66.439 74.99 49.204 92.641c-6.763 6.926 3.939 17.435 10.732 10.479l16.985-17.395 16.985 17.395c6.793 6.956 17.496-3.553 10.732-10.479L87.404 74.99l17.235-17.651a7.5 7.5 0 00-.126-10.606z\"></path>\n      </g>\n    </svg>\n  );\n}\n","export function DiscussionIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffeae1\"\n        d=\"M277.605 356.329c-2.174-2.174-2.032-4.537-2.032-7.967v-22.065h-39.884v22.065c0 3.43.043 5.891-2.032 7.967 10.162 16.215 33.786 16.215 43.948 0z\"\n      ></path>\n      <path\n        fill=\"#fc8086\"\n        d=\"M340.113 455.619l-5.387-53.016c-2.043-20.108-16.607-36.71-36.278-41.354l-20.844-4.921a30.57 30.57 0 01-43.949 0l-20.844 4.921c-19.67 4.644-34.235 21.246-36.278 41.354l-5.387 53.016z\"\n      ></path>\n      <path\n        fill=\"#fb636f\"\n        d=\"M334.727 402.603c-2.043-20.108-16.607-36.71-36.278-41.354l-20.844-4.921a30.79 30.79 0 01-8.631 6.246c17.335 5.966 29.846 21.506 31.728 40.028l2.403 23.648c.903 8.883-6.069 16.601-14.998 16.603-34.558.008-75.239.005-115.661-.001l-1.297 12.765h168.965z\"\n      ></path>\n      <path\n        fill=\"#ffeae1\"\n        d=\"M301.903 285.059c-.015-3.638-2.941-6.574-6.535-6.559l-2.451.01-.041-9.879c-.086-20.697-17.166-28.306-36.103-28.439-18.854.293-35.895 7.97-35.808 28.746l.029 6.965.012 2.914-2.323.001a9.36 9.36 0 00-9.354 9.365l.006 8.487a9.359 9.359 0 009.363 9.352l2.403-.001c.243 9.559 4.25 18.743 11.446 24.961 5.793 5.006 13.925 9.363 24.644 9.438 10.718-.167 18.813-4.593 24.564-9.648 7.144-6.279 11.074-15.497 11.237-25.058l2.461-.01c3.594-.015 6.495-2.977 6.48-6.615z\"\n      ></path>\n      <path\n        fill=\"#ffdbcc\"\n        d=\"M301.903 285.059c-.015-3.638-2.941-6.574-6.535-6.559l-2.451.01-.041-9.879c-.069-16.66-11.152-24.835-25.349-27.461l.029 74.619c-.159 9.343-3.926 18.352-10.765 24.618.134.002.264.012.4.013 10.718-.167 18.813-4.593 24.564-9.648 7.144-6.279 11.074-15.498 11.237-25.058l2.461-.01c3.594-.015 6.495-2.977 6.48-6.615z\"\n      ></path>\n      <path\n        fill=\"#786e79\"\n        d=\"M292.525 246.01a8.991 8.991 0 01-8.455-5.933l-1.013-2.802a8.99 8.99 0 00-8.455-5.933h-63.595a6.562 6.562 0 00-6.562 6.562v9.9c0 11.986 9.716 21.702 21.702 21.702h45.965c3.806 0 7.428 1.635 9.946 4.488l2.215 2.51a13.262 13.262 0 009.946 4.488h5a2.296 2.296 0 002.296-2.296V255c.001-4.965-4.025-8.99-8.99-8.99z\"\n      ></path>\n      <path\n        fill=\"#695e66\"\n        d=\"M292.525 246.01a8.991 8.991 0 01-8.455-5.933l-1.013-2.802a8.99 8.99 0 00-8.455-5.933h-7.08l.015 38.164h4.575c3.806 0 7.428 1.635 9.946 4.488l2.215 2.51a13.262 13.262 0 009.946 4.488h5a2.296 2.296 0 002.296-2.296V255c.001-4.965-4.025-8.99-8.99-8.99z\"\n      ></path>\n      <path\n        fill=\"#ffeae1\"\n        d=\"M398.565 310.018c-4.128-.218-6.45-4.844-4.159-8.284l6.683-10.033c2.416-3.682 1.061-6.938 1.04-9.532-2.294-23.886 14.992-45.446 38.87-47.822 23.931-2.382 45.224 15.133 47.521 39.053 1.115 11.608-2.45 22.587-9.152 31.067-1.869 2.365-2.816 5.328-2.528 8.329l3.572 37.2-40.68 8.88-1.497-15.062a7.676 7.676 0 00-8.381-6.906l-9.773.947a8.66 8.66 0 01-9.461-7.791l-1.466-15.254a4.961 4.961 0 00-4.678-4.48z\"\n      ></path>\n      <path\n        fill=\"#ffdbcc\"\n        d=\"M479.368 304.466c6.702-8.48 10.267-19.459 9.152-31.067-2.297-23.92-23.59-41.434-47.521-39.053-.569.057-1.131.134-1.693.212 8.057 5.759 13.944 14.562 15.769 25.091l3.319 19.149c1.854 10.696.197 19.347-2.6 25.983-7.026 16.674-10.023 34.616-8.937 52.641l33.556-7.428-3.572-37.2c-.289-3 .658-5.962 2.527-8.328z\"\n      ></path>\n      <path\n        fill=\"#786e79\"\n        d=\"M492.745 278.799l-3.319-19.149c-3.683-21.247-23.892-35.486-45.139-31.802l-40.099 6.951a5.043 5.043 0 00-4.081 5.973c2.598 12.78 14.889 21.177 27.74 18.949a9.367 9.367 0 0110.826 7.61l1.952 11.118c.893 5.089 5.738 8.493 10.828 7.61l.236-.041c3.769-.654 7.269 1.972 7.814 5.758 2.806 19.523 18.159 29.528 18.159 29.528s20.028-13.983 15.083-42.505z\"\n      ></path>\n      <path\n        fill=\"#695e66\"\n        d=\"M492.745 278.799l-3.319-19.149c-3.682-21.247-23.892-35.486-45.139-31.802l-13.071 2.266c12.096 4.895 21.466 15.733 23.858 29.536l3.319 19.149c.715 4.127.904 7.947.71 11.467.184.478.323.981.4 1.511 2.806 19.523 18.159 29.528 18.159 29.528s20.028-13.984 15.083-42.506z\"\n      ></path>\n      <path\n        fill=\"#fcdd2e\"\n        d=\"M499.887 490.976l-4.662-119.266c0-6.651-3.542-23.177-15.531-29.205l-40.52 10.74a89.772 89.772 0 00-30.342 56.286L396.384 504.5h90.461c7.402.021 13.331-6.127 13.042-13.524z\"\n      ></path>\n      <path\n        fill=\"#ffeae1\"\n        d=\"M113.435 310.018c4.128-.218 6.45-4.844 4.159-8.284l-6.683-10.033c-2.416-3.682-1.061-6.938-1.04-9.532 2.294-23.886-14.992-45.446-38.87-47.822C47.07 231.965 25.777 249.48 23.48 273.4c-1.115 11.608 2.45 22.587 9.152 31.067 1.869 2.365 2.816 5.328 2.528 8.329l-3.572 37.2 40.68 8.88 1.497-15.062a7.675 7.675 0 018.381-6.906l9.773.947a8.66 8.66 0 009.461-7.791l1.466-15.254a4.961 4.961 0 014.678-4.48z\"\n      ></path>\n      <path\n        fill=\"#ffdbcc\"\n        d=\"M117.594 301.734l-6.683-10.033c-2.416-3.682-1.061-6.938-1.04-9.532 1.852-19.284-9.062-37.047-25.901-44.427a44.019 44.019 0 017.364 28.918c0 6.266-.918 10.879-2.033 14.17-3.223 9.515-5.098 19.435-6.05 29.435l-.408 4.29a8.66 8.66 0 01-9.462 7.791l-9.773-.947a7.676 7.676 0 00-8.381 6.906l-2.898 26.22 19.938 4.352 1.497-15.062a7.674 7.674 0 018.381-6.906l9.773.947a8.661 8.661 0 009.462-7.791l1.466-15.254a4.961 4.961 0 014.678-4.48l5.912-.312c4.127-.218 6.449-4.845 4.158-8.285z\"\n      ></path>\n      <path\n        fill=\"#786e79\"\n        d=\"M19.255 278.799l3.319-19.149c3.683-21.247 23.892-35.486 45.139-31.802l40.099 6.951a5.043 5.043 0 014.081 5.973c-2.598 12.78-14.889 21.177-27.74 18.949a9.367 9.367 0 00-10.826 7.61l-1.952 11.118c-.893 5.089-5.738 8.493-10.828 7.61l-.236-.041c-3.769-.654-7.269 1.972-7.814 5.758-2.806 19.523-18.159 29.528-18.159 29.528s-20.028-13.983-15.083-42.505z\"\n      ></path>\n      <path\n        fill=\"#695e66\"\n        d=\"M107.812 234.799l-31.182-5.406c8.607 7.595 14.142 18.509 14.832 30.472 9.922-1.323 18.334-8.778 20.431-19.093a5.043 5.043 0 00-4.081-5.973z\"\n      ></path>\n      <path\n        fill=\"#7aabdc\"\n        d=\"M12.113 490.976l4.662-119.266c0-6.651 3.542-23.177 15.531-29.205l40.52 10.74a89.772 89.772 0 0130.342 56.286l12.447 94.968h-90.46c-7.402.022-13.331-6.126-13.042-13.523z\"\n      ></path>\n      <path\n        fill=\"#5f98d5\"\n        d=\"M74.25 454.612h34.827l-5.909-45.08a89.772 89.772 0 00-30.342-56.286l-40.52-10.74s31.553 29.583 36.036 67.026z\"\n      ></path>\n      <path\n        fill=\"#7aabdc\"\n        d=\"M89.251 417.01a3.965 3.965 0 01-2.795-1.271l-36.442-39.41-33.612 5.144a53.919 53.919 0 0016.605 41.138l28.233 27.006c2.621 2.507 5.853 4.864 9.48 4.864.176 0 13.998.117 20.237.131 26.084.057 82.521 0 82.521 0 4.238-.123 7.611-3.499 7.611-7.739 0-14.835-11.798-26.981-26.627-27.411z\"\n      ></path>\n      <path\n        fill=\"#5f98d5\"\n        d=\"M33.008 410.834L61.24 437.84c2.621 2.507 5.853 4.864 9.48 4.864.176 0 13.998.117 20.237.131 20.918.046 70.869.018 89.836.005.194 1.317.296 2.663.296 4.033 0 4.24-3.372 7.616-7.611 7.739 0 0-56.437.057-82.521 0-6.239-.014-20.061-.131-20.237-.131-3.627 0-6.859-2.357-9.48-4.864l-28.233-27.006a53.919 53.919 0 01-16.605-41.138c.001.001-.377 12.378 16.606 29.361z\"\n      ></path>\n      <path\n        fill=\"#ffeae1\"\n        d=\"M140.055 454.634V418.92l14.407.542c14.829.431 26.627 12.576 26.627 27.411 0 4.24-3.372 7.616-7.611 7.739 0 0-15.175.015-33.423.022z\"\n      ></path>\n      <path\n        fill=\"#ffdbcc\"\n        d=\"M173.478 454.612s-15.175.015-33.423.022v-11.776c16.261-.003 31.879-.013 40.738-.019.194 1.317.296 2.663.296 4.033 0 4.241-3.372 7.617-7.611 7.74z\"\n      ></path>\n      <path\n        fill=\"#d6e8f9\"\n        d=\"M172.146 58.509H36.38c-13.204 0-23.908 10.704-23.908 23.908v54.593c0 15.559 12.613 28.172 28.172 28.172a4.264 4.264 0 014.264 4.264v24.516c0 3.232 3.94 4.814 6.175 2.48l28.673-29.945a4.264 4.264 0 013.08-1.315h89.31c13.204 0 23.908-10.704 23.908-23.908V82.417c0-13.204-10.704-23.908-23.908-23.908z\"\n      ></path>\n      <path\n        fill=\"#b1d6fa\"\n        d=\"M44.908 169.446v24.517c0 3.232 3.94 4.814 6.175 2.48l28.673-29.945a4.264 4.264 0 013.08-1.315H40.644a4.262 4.262 0 014.264 4.263zM172.146 58.509h-10.56v82.765c0 13.204-10.704 23.908-23.908 23.908h34.468c13.204 0 23.908-10.704 23.908-23.908V82.417c0-13.204-10.704-23.908-23.908-23.908z\"\n      ></path>\n      <path\n        fill=\"#d6e8f9\"\n        d=\"M475.62 58.509H339.854c-13.204 0-23.908 10.704-23.908 23.908v58.857c0 13.204 10.704 23.908 23.908 23.908h89.31c1.163 0 2.275.475 3.08 1.315l28.673 29.945c2.235 2.334 6.175.752 6.175-2.48v-24.516a4.264 4.264 0 014.264-4.264h4.264c13.204 0 23.908-10.704 23.908-23.908V82.417c0-13.204-10.704-23.908-23.908-23.908z\"\n      ></path>\n      <path\n        fill=\"#b1d6fa\"\n        d=\"M475.62 58.509h-10.444v82.765c0 13.204-10.704 23.908-23.908 23.908h-4.264c-1.657 0-3.077.955-3.783 2.336l27.696 28.924c2.235 2.334 6.175.752 6.175-2.48v-24.517a4.264 4.264 0 014.264-4.264h4.264c13.204 0 23.908-10.704 23.908-23.908V82.417c0-13.204-10.704-23.908-23.908-23.908z\"\n      ></path>\n      <path\n        fill=\"#d6e8f9\"\n        d=\"M325.181 7.5H186.08c-13.528 0-24.495 10.967-24.495 24.495v60.303c0 13.528 10.967 24.495 24.495 24.495h39.973a4.37 4.37 0 013.941 2.483l19.608 40.974c1.332 2.784 5.295 2.784 6.627 0l19.608-40.974a4.37 4.37 0 013.941-2.483h45.404c13.528 0 24.495-10.967 24.495-24.495V31.995C349.676 18.467 338.71 7.5 325.181 7.5z\"\n      ></path>\n      <path\n        fill=\"#b1d6fa\"\n        d=\"M325.181 7.5h-10.02v84.798c0 13.528-10.967 24.495-24.495 24.495h34.515c13.528 0 24.495-10.967 24.495-24.495V31.995C349.677 18.467 338.71 7.5 325.181 7.5zm-89.495 123.671l13.916 29.08c1.332 2.784 5.295 2.784 6.627 0l19.608-40.974a4.37 4.37 0 013.941-2.483h-19.92a27.522 27.522 0 00-24.172 14.377z\"\n      ></path>\n      <g>\n        <path\n          fill=\"#ecb9a1\"\n          d=\"M439.418 504.5H72.582v-31.513c0-10.148 8.227-18.375 18.375-18.375h330.086c10.148 0 18.375 8.227 18.375 18.375z\"\n        ></path>\n        <path\n          fill=\"#e7ab8a\"\n          d=\"M421.043 454.612h-34.352c10.148 0 18.375 8.227 18.375 18.375V504.5h34.352v-31.513c0-10.148-8.227-18.375-18.375-18.375z\"\n        ></path>\n      </g>\n      <g>\n        <path\n          fill=\"#fcdd2e\"\n          d=\"M422.749 417.01a3.965 3.965 0 002.795-1.271l36.442-39.41 33.612 5.144a53.919 53.919 0 01-16.605 41.138l-28.233 27.006c-2.621 2.507-5.853 4.864-9.48 4.864-.176 0-13.998.117-20.237.131-26.084.057-82.521 0-82.521 0-4.238-.123-7.611-3.499-7.611-7.739 0-14.835 11.798-26.981 26.627-27.411z\"\n        ></path>\n        <path\n          fill=\"#fbd307\"\n          d=\"M478.992 410.834L450.76 437.84c-2.621 2.507-5.853 4.864-9.48 4.864-.176 0-13.998.117-20.237.131-20.918.046-70.869.018-89.836.005a27.655 27.655 0 00-.296 4.033c0 4.24 3.372 7.616 7.611 7.739 0 0 56.437.057 82.521 0 6.239-.014 20.061-.131 20.237-.131 3.627 0 6.859-2.357 9.48-4.864l28.233-27.006a53.919 53.919 0 0016.605-41.138c-.001.001.44 12.315-16.606 29.361z\"\n        ></path>\n        <path\n          fill=\"#ffeae1\"\n          d=\"M371.945 454.634V418.92l-14.407.542c-14.829.431-26.627 12.576-26.627 27.411 0 4.24 3.372 7.616 7.611 7.739 0 0 15.175.015 33.423.022z\"\n        ></path>\n        <path\n          fill=\"#ffdbcc\"\n          d=\"M338.522 454.612s15.175.015 33.423.022v-11.776c-16.261-.003-31.879-.013-40.738-.019a27.655 27.655 0 00-.296 4.033c0 4.241 3.372 7.617 7.611 7.74z\"\n        ></path>\n      </g>\n      <path\n        fill=\"#fbd307\"\n        d=\"M495.225 371.71c0-6.651-3.542-23.177-15.531-29.205l-26.684 7.072c5.52 5.52 7.35 17.341 7.35 22.132l4.662 119.266c.289 7.396-5.64 13.544-13.042 13.524h34.865c7.402.021 13.331-6.127 13.042-13.524z\"\n      ></path>\n      <g>\n        <path d=\"M37.408 172.537v21.426c0 4.553 2.73 8.59 6.955 10.287a11.035 11.035 0 0012.138-2.621l27.717-28.947h87.929c17.318 0 31.408-14.09 31.408-31.408v-16.981h20.527l18.756 39.195c1.874 3.917 5.736 6.351 10.079 6.351s8.205-2.434 10.079-6.351l18.756-39.195h26.696v16.981c0 17.318 14.089 31.408 31.408 31.408h87.929l27.717 28.947a11.036 11.036 0 0012.138 2.621 11.035 11.035 0 006.955-10.287v-21.28h1.027c17.318 0 31.408-14.09 31.408-31.408V82.417c0-17.318-14.09-31.408-31.408-31.408H357.177V31.996C357.177 14.353 342.824 0 325.181 0H186.08c-17.642 0-31.995 14.353-31.995 31.996V51.01H87.852a7.5 7.5 0 000 15h66.233v26.289c0 17.642 14.353 31.995 31.995 31.995h2.473v16.981c0 9.047-7.36 16.408-16.408 16.408h-89.31a11.82 11.82 0 00-8.497 3.628l-21.931 22.904v-14.768c0-6.486-5.277-11.764-11.764-11.764-11.398 0-20.672-9.273-20.672-20.672V82.417c0-9.047 7.36-16.408 16.408-16.408H53.43a7.5 7.5 0 000-15H36.38c-17.318 0-31.408 14.09-31.408 31.408v54.593c0 18.579 14.277 33.886 32.436 35.527zM475.62 66.009c9.047 0 16.408 7.361 16.408 16.408v58.857c0 9.047-7.361 16.408-16.408 16.408h-4.264c-6.486 0-11.764 5.277-11.764 11.764v14.768l-21.931-22.904a11.82 11.82 0 00-8.497-3.628h-89.311c-9.047 0-16.408-7.361-16.408-16.408v-16.981h1.735c17.642 0 31.995-14.353 31.995-31.995V66.009zM169.085 92.298V31.996c0-9.372 7.624-16.996 16.995-16.996h139.101c9.371 0 16.995 7.624 16.995 16.996v60.303c0 9.371-7.624 16.995-16.995 16.995h-45.404c-4.543 0-8.746 2.648-10.706 6.746l-16.156 33.76-16.156-33.762c-1.961-4.098-6.164-6.745-10.706-6.745H186.08c-9.371 0-16.995-7.624-16.995-16.995zm337.512 378.33c-.162-4.14-3.666-7.364-7.787-7.201a7.5 7.5 0 00-7.201 7.787l.784 20.055a5.511 5.511 0 01-5.531 5.73h-39.945v-24.013c0-4.052-.938-7.889-2.606-11.307 5.848-1.124 10.092-5.17 11.632-6.643l28.233-27.006a61.419 61.419 0 005.508-6.053l.59 15.091a7.5 7.5 0 1014.988-.586l-2.538-64.933c-.071-11.33-5.642-26.132-15.922-33.482l-1.306-13.597c6.458-6.122 19.024-21.658 14.638-46.953l-3.319-19.149c-4.392-25.344-28.461-42.308-53.81-37.911l-40.1 6.951c-6.973 1.208-11.559 7.923-10.149 14.857 1.071 5.268 3.368 9.952 6.533 13.817-7.964 16.929-3.537 30.076-4.442 31.458l-6.684 10.033c-5.502 8.26.088 19.409 10.006 19.932l3.728.196 1.256 13.077c.858 8.92 8.787 15.411 17.651 14.538l9.773-.947c.092.007.185.076.194.183l.563 5.669c-27.138 25.422-30.055 59.715-30.171 60.093l-43.845 1.648a35.128 35.128 0 00-13.776 3.229l-1.356-13.348c-2.364-23.272-19.25-42.52-42.016-47.895l-17.098-4.037c-.003-.417-.002-.712-.001-10.617 9.571-6.922 14.998-16.339 16.797-26.82 5.573-1.879 9.589-7.189 9.563-13.404l-.03-14.045a14.11 14.11 0 00-.647-4.125c.164-.71.26-1.446.26-2.205V255c0-9.093-7.397-16.491-16.49-16.491-1.642 0-1.592-2.045-2.415-3.785-2.354-6.509-8.586-10.883-15.508-10.883h-63.595c-7.754 0-14.062 6.308-14.062 14.062v9.899c0 10.72 5.81 20.104 14.443 25.183-5.749 2.768-9.565 8.56-9.56 15.203l.006 8.487c.006 7.771 5.296 14.327 12.463 16.265 1.674 9.168 6.283 17.781 13.891 24.168 0 12.893 0 12.36-.007 12.807l-17.092 4.035c-22.767 5.375-39.652 24.622-42.016 47.895l-1.322 13.017a34.999 34.999 0 00-13.007-2.896l-43.909-1.65c-.297-.964-2.19-33.882-30.171-60.093l.566-5.693c.008-.083.106-.156.192-.158l9.768.947c8.897.868 16.799-5.636 17.656-14.538l1.256-13.077 3.728-.196c4.595-.242 8.731-2.946 10.795-7.058s1.762-9.045-.789-12.874l-6.654-9.988c-1.007-1.537 3.525-14.503-4.469-31.498 3.165-3.866 5.46-8.554 6.531-13.823 1.409-6.934-3.178-13.649-10.149-14.856l-40.1-6.951c-25.348-4.393-49.417 12.561-53.81 37.911l-3.319 19.149c-4.385 25.295 8.181 40.832 14.638 46.954l-1.306 13.597c-5.085 3.635-9.215 9.061-12.075 15.918-2.8 6.714-3.821 13.44-3.847 17.564L4.619 490.684C4.159 502.432 13.58 512 25.095 512h461.79c11.637 0 20.953-9.653 20.497-21.316zm-61.028-235.39c17.181-2.974 33.491 8.513 36.468 25.693l3.319 19.149c2.723 15.71-3.455 26.022-7.919 31.181-3.869-3.935-9.119-10.878-10.51-20.552-1.124-7.823-8.439-13.48-16.522-12.08l-.233.041a1.87 1.87 0 01-2.159-1.517l-1.952-11.117c-1.604-9.141-10.345-15.289-19.495-13.703-8.063 1.396-15.721-3.215-18.419-10.607zm-16.438 94.204l-9.777.948a1.159 1.159 0 01-1.268-1.043l-1.466-15.256c-1.138-11.834-13.765-11.323-13.865-11.362l4.605-6.914c6.005-9.153-1.233-15.6 4.333-30.56a31.429 31.429 0 0011.91 2.335 32.36 32.36 0 005.525-.478 1.87 1.87 0 012.158 1.517l1.952 11.118c1.573 8.957 10 15.037 18.946 13.789 2.645 16.73 13.054 27.325 18.32 31.725l1.116 11.626-25.854 6.852-.064-.642c-.802-8.35-8.212-14.466-16.571-13.655zm13.673 30.6l35.7-9.462c10.843 8.32 9.229 27.37 9.601 31.004.001.064-.005.127-.002.191a46.433 46.433 0 01-14.295 35.416l-28.233 27.006c-2.7 2.583-3.97 2.783-4.295 2.783-32.085.254-23.329.069-61.835.13v-20.969l43.52-1.636a11.532 11.532 0 008.085-3.676l22.598-24.438a7.5 7.5 0 00-.415-10.598 7.498 7.498 0 00-10.598.415l-21.601 23.359-4.649.175a82.167 82.167 0 0126.419-49.7zm-84.984 66.914l6.625-.249v20.405h-25.75c-.102-.01-.284-.055-.284-.239 0-10.938 8.645-19.604 19.409-19.917zM211.946 238.842h62.657c.626 0 1.189.395 1.402.984.334.476 3.034 13.684 16.521 13.684.822 0 1.49.669 1.49 1.491v18.489c-3.534-.126-4.753-2.995-6.333-4.458a20.774 20.774 0 00-15.57-7.026h-45.965c-7.831 0-14.202-6.371-14.202-14.203zm9.155 59.679h-.003l-2.403.001h-.001a1.861 1.861 0 01-1.859-1.857l-.006-8.487a1.854 1.854 0 011.858-1.859l2.323-.001a7.502 7.502 0 007.495-7.531l-.007-1.78h43.614c1.653 0 3.229.711 4.322 1.95 1.09.879 6.325 9.538 17.786 9.538h.19l.021 9.714-1.472.006a7.5 7.5 0 00-7.466 7.372c-.278 16.32-13.845 27.07-28.335 27.333-14.339-.139-28.141-10.604-28.559-27.088a7.501 7.501 0 00-7.498-7.311zm46.971 47.916c-.004 3.301-.084 5.503.356 7.829a23.02 23.02 0 01-25.614-.013c.465-2.482.374-4.942.374-8.651 8.293 2.785 16.458 3.057 24.884.835zm-53.536 22.112l16.987-4.01c6.801 5.579 15.214 8.608 24.108 8.608 8.895 0 17.307-3.029 24.108-8.608l16.987 4.01c16.548 3.906 28.821 17.896 30.54 34.812l2.387 23.492c-3.938 5.659-6.241 12.552-6.241 20.019 0 .081.01.158.012.239H188.577c.001-.08.012-.158.012-.239 0-7.87-2.555-15.105-6.887-20.926l2.294-22.585c1.719-16.915 13.992-30.905 30.54-34.812zm-45.847 65.213a19.85 19.85 0 014.9 13.112c0 .184-.182.229-.284.239h-25.75v-20.405c5.175.814 11.816-2.024 21.134 7.054zM107.128 302.84c-6.111.322-11.162 5.159-11.749 11.252l-1.465 15.253a1.16 1.16 0 01-1.273 1.044l-9.772-.947c-8.381-.811-15.772 5.335-16.568 13.629l-.066.668-25.854-6.852 1.116-11.626c5.266-4.4 15.674-14.995 18.32-31.725 8.945 1.25 17.373-4.831 18.945-13.789l1.952-11.118a1.872 1.872 0 012.158-1.517c6.122 1.062 12.111.312 17.431-1.864 2.152 5.778 2.716 11.942 1.945 18.01-.331 2.61-.947 7.468 2.42 12.601l4.576 6.869zm-80.484-22.759c0-.001 0-.001 0 0l3.319-19.149c2.68-15.465 16.102-26.165 31.013-26.165 4.771 0 4.645.48 42.877 6.959a16.558 16.558 0 01-18.419 10.607c-9.145-1.586-17.89 4.562-19.495 13.703l-1.952 11.118a1.87 1.87 0 01-2.156 1.517l-.239-.042a14.056 14.056 0 00-10.753 2.497 14.441 14.441 0 00-5.766 9.583c-1.391 9.678-6.645 16.623-10.505 20.551-4.479-5.174-10.645-15.481-7.924-31.179zm6.851 70.499l35.7 9.462a82.164 82.164 0 0126.419 49.703l-4.648-.175-21.73-23.5a7.501 7.501 0 00-11.014 10.184l22.728 24.579c2.078 2.247 5.024 3.586 8.019 3.672l43.585 1.638v20.969c-22.024-.036 11.272.07-61.835-.13-.325 0-1.595-.201-4.295-2.784l-28.233-27.006a46.435 46.435 0 01-14.295-35.416c.003-.065-.003-.128-.002-.192.31-3.025-1.389-22.571 9.601-31.004zM25.133 497h-.016a5.466 5.466 0 01-3.968-1.687 5.47 5.47 0 01-1.542-4.044l2.709-69.291a61.294 61.294 0 005.508 6.053l28.232 27.005c1.542 1.475 5.792 5.528 11.631 6.647a25.708 25.708 0 00-2.604 11.303V497zm54.949-24.013c0-5.996 4.878-10.875 10.874-10.875h330.088c5.996 0 10.874 4.879 10.874 10.875V497H80.082z\"></path>\n      </g>\n    </svg>\n  );\n}\n","export function SheepIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fff\"\n        d=\"M202.566 18.465c-19.308 8.652-35.28 23.418-45.464 41.828-10.934-6.543-23.813-10.172-37.57-9.793-35.684.988-65.102 29.41-67.344 65.04a69.42 69.42 0 002.398 22.976C28.446 149.098 10 174.71 10 204.645c0 20.546 8.7 39.054 22.602 52.074a69.512 69.512 0 00-2.73 19.265c0 30.055 19.097 55.645 45.812 65.317a72.42 72.42 0 00-.133 4.133c0 38.355 31.094 69.449 69.449 69.449a69.167 69.167 0 0028.629-6.18c17.601 17.54 41.883 28.387 68.691 28.387h.243c26.812 0 51.09-10.848 68.69-28.387a69.181 69.181 0 0028.63 6.18c38.355 0 69.449-31.094 69.449-69.45 0-1.386-.05-2.761-.133-4.132 26.719-9.672 45.813-35.262 45.813-65.317 0-6.687-.965-13.148-2.73-19.265 13.902-13.02 22.6-31.524 22.6-52.074 0-29.934-18.445-55.547-44.581-66.13a69.523 69.523 0 002.398-22.976c-2.242-35.629-31.664-64.05-67.347-65.039-13.754-.379-26.633 3.25-37.57 9.793-10.137-18.328-26.016-33.047-45.212-41.715l-.054-.023a100.043 100.043 0 00-79.95-.09zm0 0\"\n      ></path>\n      <g fill=\"#898998\">\n        <path d=\"M334.941 425v66c0 6.074-4.925 11-11 11h-18c-6.074 0-11-4.926-11-11v-66l18.457-15.375zm-185 0v66c0 6.074 4.926 11 11 11h18c6.075 0 11-4.926 11-11v-66l-16.832-15.375zm151.004-229.29c-10.191 0-19.398-4.206-25.996-10.968-5.996 11.797-18.238 19.887-32.383 19.887-14.207 0-26.503-8.168-32.468-20.063-6.606 6.868-15.883 11.145-26.16 11.145-.97 0-1.926-.05-2.875-.125-14.204 16.824-22.907 39.484-22.907 64.414 0 51.914 37.735 94 84.285 94 46.547 0 84.282-42.086 84.282-94 0-24.93-8.703-47.59-22.903-64.414a36.82 36.82 0 01-2.875.125zm0 0\"></path>\n        <path d=\"M181.047 195.605s-35.387 14.407-73.777 20.684c-5.586.914-8.293 7.383-5.063 12.027 18.902 27.204 55.95 23.582 55.95 23.582m147.007-56.293s35.39 14.407 73.781 20.684c5.586.914 8.293 7.383 5.063 12.027-18.903 27.204-55.95 23.582-55.95 23.582\"></path>\n      </g>\n      <path d=\"M484.883 204.645c0-30.434-16.668-57.774-43.11-71.801a79.151 79.151 0 001.063-12.922c0-43.809-35.645-79.45-79.45-79.45a79.39 79.39 0 00-31.945 6.704c-11.117-16.36-26.726-29.567-44.757-37.711-5.032-2.27-10.957-.035-13.23 5-2.27 5.031-.036 10.957 5 13.23 17.077 7.711 31.487 21.008 40.573 37.438a9.993 9.993 0 006.153 4.816 9.993 9.993 0 007.734-1.074 59.352 59.352 0 0130.473-8.402c32.777 0 59.449 26.668 59.449 59.449 0 5.363-.734 10.719-2.176 15.922a9.998 9.998 0 005.883 11.937c23.289 9.434 38.336 31.754 38.336 56.864 0 17.136-6.902 33.035-19.434 44.773a9.989 9.989 0 00-2.773 10.07 59.538 59.538 0 012.336 16.496c0 24.954-15.758 47.422-39.215 55.914a10.001 10.001 0 00-6.578 9.993c.078 1.32.117 2.476.117 3.543 0 32.78-26.668 59.449-59.45 59.449-8.519 0-16.76-1.778-24.5-5.29a10.005 10.005 0 00-11.187 2.024c-16.48 16.426-38.37 25.469-61.636 25.469-.04 0-.079.008-.118.008-.043 0-.082-.008-.12-.008-23.266 0-45.153-9.043-61.637-25.469a10.007 10.007 0 00-11.188-2.023c-7.738 3.511-15.98 5.289-24.5 5.289-32.777 0-59.445-26.668-59.445-59.45 0-1.066.035-2.222.113-3.542a10.001 10.001 0 00-6.578-9.993c-23.457-8.492-39.215-30.96-39.215-55.914 0-5.566.79-11.117 2.34-16.496a10.005 10.005 0 00-2.773-10.07C26.902 237.68 20 221.781 20 204.645c0-25.11 15.047-47.43 38.336-56.864a9.994 9.994 0 005.883-11.937 59.64 59.64 0 01-2.172-15.922c0-32.777 26.668-59.45 59.45-59.45a59.339 59.339 0 0130.468 8.403 10 10 0 0013.887-3.742c9.128-16.508 23.62-29.844 40.804-37.543 5.04-2.258 7.293-8.176 5.035-13.215-2.257-5.04-8.175-7.293-13.214-5.035-18.153 8.137-33.86 21.387-45.036 37.832a79.452 79.452 0 00-31.945-6.7c-43.808 0-79.45 35.641-79.45 79.45 0 4.328.356 8.648 1.063 12.922C16.668 146.87 0 174.21 0 204.644c0 20.399 7.79 40.168 21.547 55.118a79.468 79.468 0 00-1.676 16.222c0 30.914 18.102 58.977 45.715 71.946 1.27 40.972 33.723 74.215 74.367 76.773-.004.102-.016.195-.016.297v66c0 11.578 9.422 21 21 21h18c11.583 0 21-9.422 21-21v-52.578c13.215 5.68 27.57 8.664 42.383 8.664.04 0 .078-.008.118-.008.042 0 .082.008.12.008 14.81 0 29.169-2.984 42.38-8.664V491c0 11.578 9.421 21 21 21h18c11.582 0 21-9.422 21-21v-66c0-.102-.012-.195-.012-.297 40.64-2.558 73.097-35.8 74.363-76.773 27.617-12.97 45.719-41.032 45.719-71.946 0-5.449-.563-10.882-1.68-16.222 13.766-14.95 21.555-34.719 21.555-55.117zM179.94 491c0 .55-.449 1-1 1h-18c-.55 0-1-.45-1-1v-66c0-.516-.05-1.02-.129-1.516a78.758 78.758 0 0011.63-3.129 108.163 108.163 0 008.5 6.747zm145 0c0 .55-.449 1-1 1h-18c-.55 0-1-.45-1-1v-63.898c2.926-2.102 5.77-4.34 8.496-6.747a79.018 79.018 0 0011.63 3.13c-.075.495-.126 1-.126 1.515zm0 0\"></path>\n      <path d=\"M242.32 20h.243c5.523 0 10-4.477 10-10s-4.477-10-10-10h-.243c-5.523 0-10 4.477-10 10s4.477 10 10 10zm-39.43 157.633c-5.011 5.21-11.742 8.078-18.952 8.078-14.508 0-26.313-11.805-26.313-26.313 0-5.523-4.477-10-10-10s-10 4.477-10 10c0 14.067 6.313 26.68 16.242 35.18-13.129 4.16-30.398 8.93-48.21 11.844-6.024.984-11.04 4.933-13.423 10.558-2.39 5.649-1.734 12.016 1.762 17.043 15.3 22.024 39.984 26.954 54.184 27.856C149.09 318.359 191.023 364 242.44 364c51.395 0 93.313-45.598 94.262-102.047 13.938-.68 39.723-5.2 55.52-27.93 3.492-5.027 4.152-11.398 1.761-17.043-2.386-5.625-7.402-9.574-13.425-10.558-18.25-2.984-35.946-7.922-49.184-12.152 9.723-8.497 15.887-20.973 15.887-34.872 0-5.523-4.48-10-10-10-5.524 0-10 4.477-10 10 0 14.508-11.805 26.313-26.317 26.313-7.144 0-13.836-2.824-18.832-7.95-2.254-2.312-5.48-3.394-8.668-2.906s-5.945 2.48-7.406 5.356c-4.523 8.89-13.516 14.418-23.469 14.418-10.015 0-19.035-5.574-23.53-14.543a9.997 9.997 0 00-7.438-5.402 10.003 10.003 0 00-8.711 2.949zm-90.25 47.883c16.688-2.957 32.512-7.246 45.075-11.157-3.86 8.711-6.594 17.985-8.117 27.59-9.578-.57-26.114-3.539-36.957-16.433zm222.65 16.46c-1.552-9.788-4.353-19.242-8.33-28.097 12.794 4.031 29.235 8.559 46.61 11.637-11.289 13.379-28.953 16.043-38.28 16.46zm-92.724-27.347c13.461 0 25.918-5.734 34.579-15.48 6.578 3.956 14.058 6.183 21.894 6.5 11.43 15.18 17.688 34.292 17.688 54.351 0 42.48-28.04 77.676-64.286 83.219v-13.586l13.18-10.703c4.29-3.48 4.942-9.778 1.461-14.067-3.484-4.289-9.781-4.941-14.066-1.457l-10.45 8.48-10.445-8.48c-4.289-3.48-10.586-2.828-14.066 1.457-3.485 4.29-2.828 10.586 1.457 14.067l12.93 10.496v13.793c-36.247-5.543-64.286-40.739-64.286-83.219 0-20.059 6.258-39.172 17.688-54.352 7.906-.316 15.441-2.578 22.058-6.597 8.653 9.808 21.141 15.578 34.664 15.578zm0 0\"></path>\n      <path d=\"M205.36 259.5c0 2.629 1.07 5.21 2.93 7.07a10.087 10.087 0 007.07 2.93c2.64 0 5.21-1.07 7.07-2.93 1.87-1.86 2.93-4.441 2.93-7.07s-1.06-5.21-2.93-7.07a10.073 10.073 0 00-7.07-2.93c-2.63 0-5.208 1.07-7.07 2.93a10.08 10.08 0 00-2.93 7.07zm64.16 10c2.632 0 5.21-1.07 7.07-2.93 1.86-1.86 2.93-4.441 2.93-7.07s-1.07-5.21-2.93-7.07a10.073 10.073 0 00-7.07-2.93c-2.637 0-5.208 1.07-7.07 2.93-1.86 1.86-2.93 4.441-2.93 7.07s1.07 5.21 2.93 7.07a10.073 10.073 0 007.07 2.93zm0 0\"></path>\n    </svg>\n  );\n}\n","export function WritingIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffddcf\"\n        d=\"M219.421 310.029l-38.936 38.936c-10.935 10.935-28.663 10.935-39.598 0-10.935-10.935-10.935-28.663 0-39.598l27.435-27.435z\"\n      ></path>\n      <path\n        fill=\"#ffddcf\"\n        d=\"M117.575 208.182l-38.936 38.936c-10.935 10.935-28.663 10.935-39.598 0-10.935-10.935-10.935-28.663 0-39.598l27.435-27.435a181.448 181.448 0 01128.303-53.145c66.713 0 128.046 36.609 159.709 95.33L384 277.001l-39.899 150.983z\"\n      ></path>\n      <path\n        fill=\"#91def5\"\n        d=\"M433.343 481.298l-77.274-20.706c-10.669-2.859-17.001-13.826-14.142-24.495l43.482-162.276c2.859-10.669 13.826-17.001 24.495-14.142l77.274 20.706c10.669 2.859 17.001 13.826 14.142 24.495l-43.482 162.276c-2.859 10.669-13.825 17.001-24.495 14.142z\"\n      ></path>\n      <path fill=\"#ffcb7c\" d=\"M295.721 30.003l62.216 62.216L121.075 329.08l-62.216-62.216z\"></path>\n      <path fill=\"#98a1b3\" d=\"M10 377.984L58.839 266.92l62.225 62.226z\"></path>\n      <path\n        fill=\"#ffddcf\"\n        d=\"M256.466 298.519l-60.583-60.583c-12.497-12.497-32.758-12.497-45.255 0s-12.497 32.758 0 45.255l60.583 60.583c21.915 51.09 72.162 84.211 127.754 84.211h5.136z\"\n      ></path>\n      <path d=\"M489.765 270.726l-77.274-20.705c-10.239-2.743-20.679.186-27.989 6.843l-21.212-39.339c-13.197-24.475-31.711-45.893-53.945-62.517l55.689-55.689c3.905-3.905 3.905-10.237 0-14.143L302.809 22.95c-3.905-3.904-10.237-3.904-14.143 0l-93.991 93.991c-25.233.014-49.846 4.915-73.16 14.572-23.345 9.67-44.242 23.633-62.11 41.5L31.97 200.449c-7.178 7.178-11.13 16.72-11.13 26.87s3.953 19.692 11.13 26.87a37.753 37.753 0 0017.207 9.863L.847 373.959a10 10 0 0013.18 13.18l109.921-48.336a37.763 37.763 0 009.869 17.234c7.408 7.408 17.139 11.112 26.87 11.112s19.462-3.704 26.87-11.112l10.888-10.888 4.36 4.36a148.813 148.813 0 00128.643 88.265c-.764 6.39.542 12.827 3.818 18.5 4.006 6.94 10.476 11.904 18.216 13.978l77.274 20.706a29.939 29.939 0 007.757 1.025c13.244 0 25.398-8.853 28.985-22.239l9.829-36.684c1.43-5.334-1.736-10.817-7.071-12.247-5.332-1.43-10.818 1.736-12.247 7.071l-9.829 36.684c-1.427 5.327-6.921 8.5-12.248 7.071l-77.274-20.706a9.935 9.935 0 01-6.072-4.659 9.938 9.938 0 01-.999-7.588l43.481-162.275c1.428-5.326 6.925-8.496 12.248-7.071l77.274 20.705c5.326 1.428 8.499 6.922 7.071 12.248l-10.354 38.643c-1.43 5.334 1.736 10.817 7.071 12.247 5.331 1.43 10.818-1.736 12.247-7.071l10.354-38.643c4.282-15.979-5.235-32.461-21.214-36.743zM343.821 92.247L204.079 231.989l-1.125-1.125c-5.698-5.698-12.749-9.545-20.424-11.267L326.85 75.276zm-48.083-48.083l16.97 16.97L89.951 283.89l-16.97-16.97zM46.112 240.047c-3.4-3.399-5.272-7.92-5.272-12.728s1.872-9.328 5.272-12.728l27.435-27.436c27.277-27.277 62.128-44.229 99.81-48.897L71.567 240.047c-7.017 7.02-18.437 7.018-25.455 0zm15.995 44.284l41.546 41.546-74.155 32.609zm58.958 30.672l-16.97-16.97 28.217-28.217a41.744 41.744 0 0011.246 20.446l1.125 1.125zm52.348 26.891c-7.019 7.018-18.438 7.017-25.456.001-7.018-7.02-7.018-18.439 0-25.457l10.888-10.888 25.456 25.455zm163.028 76.044a128.854 128.854 0 01-116.04-78.106 10.01 10.01 0 00-2.119-3.129l-60.583-60.583c-8.578-8.577-8.578-22.535 0-31.112 4.155-4.155 9.68-6.444 15.556-6.444s11.401 2.289 15.556 6.444l60.583 60.583c3.905 3.904 10.237 3.904 14.143 0 3.905-3.905 3.905-10.237 0-14.143l-45.316-45.316 76.804-76.804c20.953 15.116 38.383 34.917 50.662 57.689l27.998 51.923z\"></path>\n      <path d=\"M479.32 397.003c-2.64 0-5.21-1.07-7.08-2.931a10.08 10.08 0 01-2.92-7.069c0-2.641 1.06-5.21 2.92-7.08 1.86-1.86 4.44-2.92 7.08-2.92 2.63 0 5.21 1.06 7.07 2.92a10.097 10.097 0 012.93 7.08c0 2.63-1.07 5.21-2.93 7.069a10.09 10.09 0 01-7.07 2.931z\"></path>\n    </svg>\n  );\n}\n","// This icon file is generated automatically.\nvar HeartFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M923 283.6a260.04 260.04 0 00-56.9-82.8 264.4 264.4 0 00-84-55.5A265.34 265.34 0 00679.7 125c-49.3 0-97.4 13.5-139.2 39-10 6.1-19.5 12.8-28.5 20.1-9-7.3-18.5-14-28.5-20.1-41.8-25.5-89.9-39-139.2-39-35.5 0-69.9 6.8-102.4 20.3-31.4 13-59.7 31.7-84 55.5a258.44 258.44 0 00-56.9 82.8c-13.9 32.3-21 66.6-21 101.9 0 33.3 6.8 68 20.3 103.3 11.3 29.5 27.5 60.1 48.2 91 32.8 48.9 77.9 99.9 133.9 151.6 92.8 85.7 184.7 144.9 188.6 147.3l23.7 15.2c10.5 6.7 24 6.7 34.5 0l23.7-15.2c3.9-2.5 95.7-61.6 188.6-147.3 56-51.7 101.1-102.7 133.9-151.6 20.7-30.9 37-61.5 48.2-91 13.5-35.3 20.3-70 20.3-103.3.1-35.3-7-69.6-20.9-101.9z\" } }] }, \"name\": \"heart\", \"theme\": \"filled\" };\nexport default HeartFilled;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport HeartFilledSvg from \"@ant-design/icons-svg/es/asn/HeartFilled\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar HeartFilled = function HeartFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: HeartFilledSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  HeartFilled.displayName = 'HeartFilled';\n}\nexport default /*#__PURE__*/React.forwardRef(HeartFilled);","// This icon file is generated automatically.\nvar PlusCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm192 472c0 4.4-3.6 8-8 8H544v152c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V544H328c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h152V328c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v152h152c4.4 0 8 3.6 8 8v48z\" } }] }, \"name\": \"plus-circle\", \"theme\": \"filled\" };\nexport default PlusCircleFilled;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport PlusCircleFilledSvg from \"@ant-design/icons-svg/es/asn/PlusCircleFilled\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar PlusCircleFilled = function PlusCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: PlusCircleFilledSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  PlusCircleFilled.displayName = 'PlusCircleFilled';\n}\nexport default /*#__PURE__*/React.forwardRef(PlusCircleFilled);","// This icon file is generated automatically.\nvar QuestionCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 708c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zm62.9-219.5a48.3 48.3 0 00-30.9 44.8V620c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-21.5c0-23.1 6.7-45.9 19.9-64.9 12.9-18.6 30.9-32.8 52.1-40.9 34-13.1 56-41.6 56-72.7 0-44.1-43.1-80-96-80s-96 35.9-96 80v7.6c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V420c0-39.3 17.2-76 48.4-103.3C430.4 290.4 470 276 512 276s81.6 14.5 111.6 40.7C654.8 344 672 380.7 672 420c0 57.8-38.1 109.8-97.1 132.5z\" } }] }, \"name\": \"question-circle\", \"theme\": \"filled\" };\nexport default QuestionCircleFilled;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport QuestionCircleFilledSvg from \"@ant-design/icons-svg/es/asn/QuestionCircleFilled\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar QuestionCircleFilled = function QuestionCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: QuestionCircleFilledSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  QuestionCircleFilled.displayName = 'QuestionCircleFilled';\n}\nexport default /*#__PURE__*/React.forwardRef(QuestionCircleFilled);","// This icon file is generated automatically.\nvar RocketFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M864 736c0-111.6-65.4-208-160-252.9V317.3c0-15.1-5.3-29.7-15.1-41.2L536.5 95.4C530.1 87.8 521 84 512 84s-18.1 3.8-24.5 11.4L335.1 276.1a63.97 63.97 0 00-15.1 41.2v165.8C225.4 528 160 624.4 160 736h156.5c-2.3 7.2-3.5 15-3.5 23.8 0 22.1 7.6 43.7 21.4 60.8a97.2 97.2 0 0043.1 30.6c23.1 54 75.6 88.8 134.5 88.8 29.1 0 57.3-8.6 81.4-24.8 23.6-15.8 41.9-37.9 53-64a97 97 0 0043.1-30.5 97.52 97.52 0 0021.4-60.8c0-8.4-1.1-16.4-3.1-23.8L864 736zM512 352a48.01 48.01 0 010 96 48.01 48.01 0 010-96zm116.1 432.2c-5.2 3-11.2 4.2-17.1 3.4l-19.5-2.4-2.8 19.4c-5.4 37.9-38.4 66.5-76.7 66.5s-71.3-28.6-76.7-66.5l-2.8-19.5-19.5 2.5a27.7 27.7 0 01-17.1-3.5c-8.7-5-14.1-14.3-14.1-24.4 0-10.6 5.9-19.4 14.6-23.8h231.3c8.8 4.5 14.6 13.3 14.6 23.8-.1 10.2-5.5 19.6-14.2 24.5z\" } }] }, \"name\": \"rocket\", \"theme\": \"filled\" };\nexport default RocketFilled;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport RocketFilledSvg from \"@ant-design/icons-svg/es/asn/RocketFilled\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar RocketFilled = function RocketFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: RocketFilledSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  RocketFilled.displayName = 'RocketFilled';\n}\nexport default /*#__PURE__*/React.forwardRef(RocketFilled);"],"names":["GroupQuestionCard","question","overrideNumber","className","prefix","number","suffix","Card","children","header","footer","color","size","randomColor","headerClassName","footerClassName","hideHeader","baseClass","bgColor","getColorFromLetter","toUpperCase","clsx","style","startsWith","backgroundColor","MetricHighlight","icon","type","iconSize","iconPlacement","TimerClock","value","minutes","seconds","AnimatedClockIcon","TimerBar","steps","total","strokeLinecap","props","status","percentage","percent","showInfo","marginBottom","undefined","TimedTimerBar","duration","onExpire","timeLeft","useCountdown","autoStart","TimedTimerClock","timerProps","View","ViewIf","condition","ViewOr","ViewSwitch","cases","length","Error","console","warn","submitAction","httpsCallable","functions","GamePremiseRules","activePlayer","pt","contained","player","addressUser","en","AnsweringRules","PointsHighlight","ComparingRules","mockAnswers","userId","numAnswers","shuffled","shuffle","Math","random","Array","fill","map","i","index","getEntryId","reduce","acc","item","RoundType","roundType","arrowBaseClass","ArrowSignIcon","Pasture","players","pastureSize","useDimensions","width","isShortPasture","pastureBase","min","pastureWidth","max","pastureHeight","sheepWidth","gridStyleDistribution","gridTemplateColumns","sheepPerEnclosure","useMemo","spe","Object","values","forEach","level","push","height","src","PUBLIC_URL","alt","sheepPlayers","enclosureId","enclosureKey","sheepKey","id","sheepClassName","SheepAvatar","avatarId","sheepId","animateRight","animateLeft","animateRebound","animate","names","p","name","join","CustomQuestion","onSubmit","isLoading","useLoading","translate","useLanguage","useState","questionType","setQuestionType","questionNumber","setQuestionNumber","questionText","setQuestionText","direction","onChange","e","defaultValue","placeholder","target","onClick","customQuestion","Date","now","disabled","loading","StepQuestionSelection","announcement","currentQuestions","onSubmitQuestion","onSubmitCustomQuestion","user","useMock","questions","questionId","getRandomItem","fullWidth","content","ready","StepQuestionSelectionWaiting","state","info","useStep","step","goToNextStep","setStep","useUser","useWhichPlayerIsThe","isUserTheActivePlayer","request","useAPICall","apiFunction","actionName","onSuccess","onError","successMessage","errorMessage","payload","action","useOnSubmitQuestionAPIRequest","useOnSubmitCustomQuestionAPIRequest","SheepIcon","title","currentRound","round","current","phase","allowedPhase","PHASES","onPressButton","time","circleColor","appearance","StepAnswering","currentQuestion","onSubmitAnswers","timedAnswers","answers","setAnswers","onWriteAnswer","s","trim","isDisabled","keys","Set","onPressEnter","Boolean","num","key","autoComplete","align","ghost","meta","useOnSubmitAnswersAPIRequest","WritingIcon","options","timed","AdminAnswerControl","allAnswers","allowedList","answerGroup","onNextAnswer","onAddAnswer","remainingGroupsCount","isDevEnv","useDevFeatures","disableButton","setDisableButton","playerCount","filteredAnswers","filter","answer","isLocked","included","entries","a","playerIds","playerId","includes","waitDuration","answersCount","RocketFilled","wrap","PlusCircleFilled","AnswerGroup","allowUserAnswer","isVIP","useVIP","entry","parsedAnswer","LockFilled","QuestionCircleFilled","getAnimationClass","checked","UserAnswers","alreadyHasAnswer","some","points","Number","score","answerObj","StepCompare","setAllowedList","useTemporarilyHidePlayersBar","isAllowed","answerId","allowedListCopy","useOnAddAnswerAPIRequest","clearAllowList","useOnNextAnswersAPIRequest","answersList","DiscussionIcon","StepResolution","ranking","pastureChangeStr","announceSave","pastureIndex","setPastureIndex","showAnnounceSave","setShowAnnounceSave","pastureChange","JSON","parse","useEffect","hideGainedPoints","delay","HeartFilled","CustomerReviewIcon","announcementIcon","TheEndIcon","T","rateWidgetCustomText","losers","Achievements","achievements","reference","achievementsReference","gallery","getActiveComponent","LoadingPage","PhaseLobby","PhaseRules","PhaseSetup","PhaseQuestionSelection","PhaseEverybodyWrites","PhaseCompare","PhaseResolution","PhaseGameOver","PageError","theme","token","colorPrimary","THEME_COLORS","colorLink","gameCollection","GAME_COLLECTION","MOST_MATCHES","description","LEAST_MATCHES","MOST_DEAD","MOST_LONELY","BEST_TRAVELER","propertyName","useGlobalState","setActivePlayer","isUser","setIsUser","xmlns","viewBox","d","attributeName","dur","from","repeatCount","to","ref","React","AntdIcon","_extends","HeartFilledSvg","PlusCircleFilledSvg","QuestionCircleFilledSvg","RocketFilledSvg"],"sourceRoot":""}