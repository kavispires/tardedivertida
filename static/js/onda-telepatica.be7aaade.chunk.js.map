{"version":3,"file":"static/js/onda-telepatica.be7aaade.chunk.js","mappings":"gMAaaA,EAAa,SAAC,GAAmE,IAAjEC,EAAgE,EAAhEA,UAAWC,EAAqD,EAArDA,SAAUC,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,SAC3D,IAAKF,EACH,OAAO,oBAGT,IAAMG,EAAaH,EAAW,EACxBI,EAAMC,KAAKC,IAAIN,GAEfO,EAAaC,MAAMC,KAAK,CAAEC,OAAQN,IAAO,SAACO,EAAGC,GAAJ,OAAU,SAACC,EAAA,EAAD,aAAoBd,EAApB,YAAiCa,OAE1F,OACE,kBAAMX,WAAWa,EAAAA,EAAAA,GAAK,cAAeX,GAAc,wBAAyBF,GAA5E,UACGE,EAAa,IAAM,IADtB,KAC2B,iBAAMF,UAAU,qBAAhB,SAAsCM,KAC7DL,IACA,iCACE,SAAC,IAAD,CAAWa,GAAG,QAAQC,GAAG,UACxBZ,EAAM,EAAI,IAAM,W,2ICzBpB,SAASa,EAAT,GAAwC,IAAxBC,EAAuB,EAAvBA,SACrB,OAAO,8BAAGA,ICAL,SAASC,EAAT,GAA+D,IAAD,IAA5CC,UAAAA,OAA4C,SAAzBF,EAAyB,EAAzBA,SAC1C,OAAOE,GAAY,8BAAGF,KAAe,wBCDhC,SAASG,EAAT,GAAiE,IAAD,IAA9CC,YAAAA,OAA8C,SAAzBJ,EAAyB,EAAzBA,SAC5C,OAAOI,GAAc,8BAAGJ,EAAS,MAAS,8BAAGA,EAAS,KCDjD,SAASK,EAAT,GAA2D,IAArCC,EAAoC,EAApCA,MAAON,EAA6B,EAA7BA,SAClC,GAAIM,EAAMd,OAAS,EACjB,MAAMe,MAAM,0CAGd,OAAID,EAAM,IAAMN,EAAS,GAChBA,EAAS,GAGdM,EAAM,IAAMN,EAAS,GAChBA,EAAS,GAGdM,EAAM,IAAMN,EAAS,GAChBA,EAAS,GAGdM,EAAM,IAAMN,EAAS,GAChBA,EAAS,GAGdM,EAAM,IAAMN,EAAS,GAChBA,EAAS,IAElBQ,QAAQC,KAAK,4CACNT,K,sNC3BIU,EAAmB,SAACC,GAC/B,IAAMC,EAAQC,EAAAA,GAAAA,QAAgBF,GAC9B,OAAOxB,KAAKC,IAAIwB,GAAS,GAGdE,EAAkB,SAC7B5B,EACA6B,EACAC,EACAC,EACAC,GAEA,IAAMC,EAAmB,iBACnBC,EAAWlC,EAAM,IAAM,EAAI,OAAS,MAC1C,OAAOU,EAAAA,EAAAA,GACLuB,EADS,UAENA,EAFM,aAEeC,GACxBL,GAAcC,IAAW9B,GAAzB,UAAmCiC,EAAnC,YACAF,GAAcC,IAAWhC,GAAzB,UAAmCiC,EAAnC,cAISE,EAAgB,SAACH,EAAgBI,EAAWC,GACvD,IAAKD,EACH,MAAO,GAET,GAAe,IAAXJ,EACF,MAAoB,OAAbK,EAAoB,2BAA6B,gCAG1D,IAAMC,EAAON,EAAS,EAAII,EAAKG,KAAOH,EAAKI,MAE3C,MAAoB,OAAbH,EAAA,mBAAgCC,EAAhC,uBAAqDA,EAArD,WAGIG,EAAsB,SAACC,EAAeV,GACjD,IAAMW,EAAO,wBACb,OAAIX,EAASU,IAAU,EAAS,GAAN,OAAUC,EAAV,UACO,IAA7B1C,KAAKC,IAAI8B,EAASU,GAAoB,GAAN,OAAUC,EAAV,YACH,IAA7B1C,KAAKC,IAAI8B,EAASU,GAAoB,GAAN,OAAUC,EAAV,YAC7B,I,oBC7BIC,EAAW,SAACR,EAAqBJ,GAC5C,OAAIA,EAAS,EACL,GAAN,OAAUI,EAAKG,KAAf,YAAuBtC,KAAKC,IAAI8B,IAG9BA,EAAS,EACL,GAAN,OAAUI,EAAKI,MAAf,YAAwBvC,KAAKC,IAAI8B,IAG7B,O,qECVD,SAASa,EAAT,GAAsE,IAAtDN,EAAqD,EAArDA,KAAMC,EAA+C,EAA/CA,MAA+C,IAAxC3C,UAAAA,OAAwC,MAA5B,GAA4B,EAAxBiD,EAAwB,EAAxBA,UAC5CC,EAAYvB,EAAiBe,EAAK,IAClCS,EAAaxB,EAAiBgB,EAAM,IACpCS,EAAgB,eAChBC,EAAWC,QAAQL,GAEnBM,EAAc,SAACC,GACfP,GAEAA,EADgB,IAAdO,EACQ,SAACC,GAAD,OAAerD,KAAKsD,IAAID,EAAID,EAAW,KAEvC,SAACC,GAAD,OAAerD,KAAKuD,IAAIF,EAAID,GAAY,OAKxD,OACE,iBAAKxD,WAAWa,EAAAA,EAAAA,GAAK,SAAUb,GAA/B,WACE,iBACEA,WAAWa,EAAAA,EAAAA,GACTuC,EADa,UAEVA,EAFU,oBAGVA,EAHU,cAGSF,GACtBG,GAAQ,UAAOD,EAAP,aAEVQ,QAAS,kBAAML,GAAa,IAP9B,WASE,kBAAMvD,UAAU,gBAAhB,WACE,SAAC6D,EAAA,EAAD,IADF,KACwB,SAACC,EAAA,EAAD,IADxB,KAC0C,SAACA,EAAA,EAAD,QAE1C,iBAAM9D,UAAU,eAAhB,SAAgC0C,QAElC,iBACE1C,WAAWa,EAAAA,EAAAA,GACTuC,EADa,UAEVA,EAFU,qBAGVA,EAHU,cAGSD,GACtBE,GAAQ,UAAOD,EAAP,aAEVQ,QAAS,kBAAML,EAAY,IAP7B,WASE,kBAAMvD,UAAU,gBAAhB,WACE,SAAC8D,EAAA,EAAD,IADF,KACoB,SAACA,EAAA,EAAD,IADpB,KACsC,SAACC,EAAA,EAAD,QAEtC,iBAAM/D,UAAU,eAAhB,SAAgC2C,UCzCjC,SAASqB,EAAT,GAQQ,IAPbzB,EAOY,EAPZA,KAOY,IANZN,OAAAA,OAMY,MANH,EAMG,MALZD,WAAAA,OAKY,aAJZG,OAAAA,OAIY,MAJH,EAIG,MAHZD,WAAAA,OAGY,aAFZ+B,QAAAA,OAEY,SADZhB,EACY,EADZA,UAEMiB,EAAY,SACZC,EAAkB,gBAElBZ,EAAcN,EAAY,SAACmB,GAAD,OAAmBnB,EAAUmB,IAAS,aAEtE,OACE,iBACEpE,WAAWa,EAAAA,EAAAA,GAAK,GAAD,OACVqD,GACHD,GAAO,UAAOC,EAAP,cACPZ,QAAQL,IAAR,UAAyBiB,EAAzB,gBAJJ,WAOE,iBACEG,MAAM,6BACNC,QAAQ,cACRC,SAAS,UACTvE,WAAWa,EAAAA,EAAAA,GAAK,GAAD,OAAIqD,EAAJ,UAJjB,WAME,qBAEA,iBACEM,EAAE,mNACFC,KAAK,YAGNvC,IACC,iBACEwC,GAAG,SACH1E,WAAWa,EAAAA,EAAAA,GAAK,GAAD,OAAIqD,EAAJ,YAAyBD,GAAO,UAAOE,EAAP,iBAC/CQ,MAAO,CAAEC,UAAU,UAAD,OAAqB,EAATzC,EAAZ,SAClBqC,EAAE,wFAIN,eAAGxE,UAAU,iBAAb,WACE,iBACE0E,GAAG,sBACH1E,UAAW+B,EAAgB,GAAIC,EAAYC,EAAQC,EAAYC,GAC/DqC,EAAE,mZACFZ,QAAS,kBAAML,EAAY,QAE7B,iBACEmB,GAAG,qBACH1E,UAAW+B,EAAgB,EAAGC,EAAYC,EAAQC,EAAYC,GAC9DqC,EAAE,qaACFZ,QAAS,kBAAML,EAAY,OAE7B,iBACEmB,GAAG,qBACH1E,UAAW+B,EAAgB,EAAGC,EAAYC,EAAQC,EAAYC,GAC9DqC,EAAE,omBACFZ,QAAS,kBAAML,EAAY,OAE7B,iBACEmB,GAAG,qBACH1E,UAAW+B,EAAgB,EAAGC,EAAYC,EAAQC,EAAYC,GAC9DqC,EAAE,wIACFZ,QAAS,kBAAML,EAAY,OAG7B,iBACEmB,GAAG,qBACH1E,UAAW+B,EAAgB,EAAGC,EAAYC,EAAQC,EAAYC,GAC9DqC,EAAE,8aACFZ,QAAS,kBAAML,EAAY,OAG7B,iBACEmB,GAAG,qBACH1E,UAAW+B,EAAgB,EAAGC,EAAYC,EAAQC,EAAYC,GAC9DqC,EAAE,0PACFZ,QAAS,kBAAML,EAAY,OAG7B,iBACEmB,GAAG,qBACH1E,UAAW+B,EAAgB,EAAGC,EAAYC,EAAQC,EAAYC,GAC9DqC,EAAE,yHACFZ,QAAS,kBAAML,EAAY,OAG7B,iBACEmB,GAAG,qBACH1E,UAAW+B,EAAgB,EAAGC,EAAYC,EAAQC,EAAYC,GAC9DqC,EAAE,oQACFZ,QAAS,kBAAML,EAAY,OAG7B,iBACEmB,GAAG,qBACH1E,UAAW+B,EAAgB,EAAGC,EAAYC,EAAQC,EAAYC,GAC9DqC,EAAE,qRACFZ,QAAS,kBAAML,EAAY,OAE7B,iBACEmB,GAAG,qBACH1E,UAAW+B,EAAgB,EAAGC,EAAYC,EAAQC,EAAYC,GAC9DqC,EAAE,gFACFZ,QAAS,kBAAML,EAAY,OAG7B,iBACEmB,GAAG,sBACH1E,UAAW+B,GAAiB,GAAIC,EAAYC,EAAQC,EAAYC,GAChEqC,EAAE,mZACFZ,QAAS,kBAAML,GAAa,QAE9B,iBACEmB,GAAG,qBACH1E,UAAW+B,GAAiB,EAAGC,EAAYC,EAAQC,EAAYC,GAC/DqC,EAAE,qaACFZ,QAAS,kBAAML,GAAa,OAE9B,iBACEmB,GAAG,qBACH1E,UAAW+B,GAAiB,EAAGC,EAAYC,EAAQC,EAAYC,GAC/DqC,EAAE,omBACFZ,QAAS,kBAAML,GAAa,OAE9B,iBACEmB,GAAG,qBACH1E,UAAW+B,GAAiB,EAAGC,EAAYC,EAAQC,EAAYC,GAC/DqC,EAAE,wIACFZ,QAAS,kBAAML,GAAa,OAE9B,iBACEmB,GAAG,qBACH1E,UAAW+B,GAAiB,EAAGC,EAAYC,EAAQC,EAAYC,GAC/DqC,EAAE,8aACFZ,QAAS,kBAAML,GAAa,OAE9B,iBACEmB,GAAG,qBACH1E,UAAW+B,GAAiB,EAAGC,EAAYC,EAAQC,EAAYC,GAC/DqC,EAAE,0PACFZ,QAAS,kBAAML,GAAa,OAE9B,iBACEmB,GAAG,qBACH1E,UAAW+B,GAAiB,EAAGC,EAAYC,EAAQC,EAAYC,GAC/DqC,EAAE,yHACFZ,QAAS,kBAAML,GAAa,OAE9B,iBACEmB,GAAG,qBACH1E,UAAW+B,GAAiB,EAAGC,EAAYC,EAAQC,EAAYC,GAC/DqC,EAAE,oQACFZ,QAAS,kBAAML,GAAa,OAE9B,iBACEmB,GAAG,qBACH1E,UAAW+B,GAAiB,EAAGC,EAAYC,EAAQC,EAAYC,GAC/DqC,EAAE,qRACFZ,QAAS,kBAAML,GAAa,OAE9B,iBACEmB,GAAG,qBACH1E,UAAW+B,GAAiB,EAAGC,EAAYC,EAAQC,EAAYC,GAC/DqC,EAAE,gFACFZ,QAAS,kBAAML,GAAa,OAG9B,iBACEmB,GAAG,mBACH1E,UAAW+B,EAAgB,EAAGC,EAAYC,EAAQC,EAAYC,GAC9DqC,EAAE,gXACFZ,QAAS,kBAAML,EAAY,SAI9BvB,IACC,iBACE0C,GAAG,SACH1E,WAAWa,EAAAA,EAAAA,GAAK,GAAD,OAAIqD,EAAJ,YAAyBD,GAAO,UAAOE,EAAP,iBAC/CQ,MAAO,CAAEC,UAAU,UAAD,OAAqB,EAAT3C,EAAZ,SAClBuC,EAAE,gHAIR,SAACxB,EAAD,CAAMN,KAAMH,EAAKG,KAAMC,MAAOJ,EAAKI,MAAO3C,UAAU,eAAeiD,UAAWM,O,cCzMpF,SAASsB,IACP,OACE,2BACE,sIAGA,iIACA,0HACA,6FACA,mGAKN,SAASC,IACP,OACE,2BACE,qIAIA,4GACA,wGACA,qFACA,sFAKC,SAASC,IACd,OAAO,SAAC,KAAD,CAAaC,SAAS,SAAC,IAAD,CAAWlE,IAAI,SAAC+D,EAAD,IAAa9D,IAAI,SAAC+D,EAAD,QAGxD,SAASG,IACd,OACE,SAAC,KAAD,CAAaC,WAAS,EAAtB,UACE,SAAC,IAAD,CACEpE,IACE,oFAEE,kBAFF,kEAIE,kBAJF,8KAME,kBANF,+DASFC,IACE,sFAEE,kBAFF,oFAIE,kBAJF,kMAOE,kBAPF,uEC9BH,SAASoE,EAAT,GAKmB,IAJxBC,EAIuB,EAJvBA,kBACAC,EAGuB,EAHvBA,kBACAlD,EAEuB,EAFvBA,OACAmD,EACuB,EADvBA,WAEA,GAAgCC,EAAAA,EAAAA,MAAxB/C,EAAR,EAAQA,SAAUgD,EAAlB,EAAkBA,UACVC,GAAcC,EAAAA,EAAAA,MAAdD,UACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAMMC,EAAe,WACnBR,EAAW,CAAEM,KAAAA,KAGTrD,EAAO6C,EAAkBW,MAAK,SAACC,GAAD,OAAOA,EAAEtB,KAAOW,KAQpD,OANAY,EAAAA,EAAAA,KAAQ,WACF1D,GACF+C,EAAW,CAAEM,KAAM7C,EAASR,EAAMJ,OAEnC,CAACI,KAGF,UAAC,IAAD,CAAM2D,WAAS,EAAf,WACE,SAAC,KAAD,WACE,SAAC,IAAD,CAAWpF,GAAG,mBAAmBC,GAAG,uBAEtC,UAAC,KAAD,CAAamE,WAAS,EAAtB,WACE,SAAC,IAAD,CACEpE,GAAE,gCAAwBV,KAAKC,IAAI8B,GAAjC,YAA4CG,EAC5CH,EACAI,EACAC,GAHA,8KAKFzB,GAAE,iCAA4BX,KAAKC,IAAI8B,GAArC,YAAgDG,EAChDH,EACAI,EACAC,GAHA,mJAMJ,SAACuC,EAAD,QAEF,SAACf,EAAD,CAAM7B,OAAQA,EAAQI,KAAMA,EAAOL,YAAU,KAC7C,UAAC,IAAD,CAAOlC,UAAU,kBAAkBmG,MAAM,SAAzC,WACE,SAAC,IAAD,CACEC,SAvCc,SAACC,GACrBR,EAAQQ,EAAElE,OAAOiC,QAuCXkC,aAAcR,EACdS,YAAaf,EAAU,eAAgB,iBAEzC,SAAC,IAAD,CAAQgB,KAAK,UAAU5C,QAASkC,EAAcW,SAAUhB,EAAxD,UACE,SAAC,IAAD,CAAW3E,GAAG,SAASC,GAAG,iB,wBC9D7B,SAAS2F,EAAT,GAKmB,IAJxBC,EAIuB,EAJvBA,QACAC,EAGuB,EAHvBA,QACAxB,EAEuB,EAFvBA,kBACAC,EACuB,EADvBA,kBAEM9C,EAAO6C,EAAkBW,MAAK,SAACC,GAAD,OAAOA,EAAEtB,KAAOW,KAEpD,OACE,SAAC,KAAD,CACEsB,QAASA,EACTE,OAAO,SAAC,IAAD,CAAW/F,GAAI,wBAAmBC,GAAI,aAC7C+F,YAAY,GAHd,UAKE,SAAC,KAAD,CAAa5B,WAAS,EAAtB,SACG5B,SAAS+B,IACR,0BACE,SAAC,KAAD,CAAY0B,OAAQH,KACpB,SAAC,IAAD,CACE9F,GACE,sNAEFC,GACE,0MAKN,iCACE,0BACE,SAAC,KAAD,CAAYgG,OAAQH,KACpB,SAAC,IAAD,CAAW9F,GAAI,YAAaC,GAAI,eAElC,SAAC,IAAD,CAAOf,UAAU,kBAAkBmG,MAAM,SAAzC,UACE,SAACnD,EAAD,CAAMN,KAAMH,EAAMG,KAAMC,MAAOJ,EAAMI,WAEvC,wBACE,SAAC,IAAD,CACE7B,GAAE,sHACAyB,EAAMG,KADN,kCAEwBH,EAAMI,MAF9B,2BAGF5B,GAAE,0GACAwB,EAAMG,KADN,gCAEsBH,EAAMI,MAF5B,8CCxCX,SAASqE,EAAT,GAAqG,IAApE5B,EAAmE,EAAnEA,kBAAmB6B,EAAgD,EAAhDA,iBACjDxB,GAAcC,EAAAA,EAAAA,MAAdD,UAMR,OAJAQ,EAAAA,EAAAA,KAAQ,WACNgB,EAAiB,CAAEC,WAAY9B,EAAkB,GAAGV,OACnD,KAGD,UAAC,IAAD,CAAM1E,UAAU,mBAAhB,WACE,SAAC,KAAD,WACE,SAAC,IAAD,CACEc,GAAG,4CACHC,GAAG,iDAGP,UAAC,KAAD,CAAamE,WAAS,EAAtB,WACE,SAAC,IAAD,CACEpE,GAAG,sNACHC,GAAG,uOAEJ0E,IACC,0BACE,SAAC,KAAD,CAAYe,KAAK,kBAAkBW,KAAK,gBAK9C,gBAAKnH,UAAU,8BAAf,SACGoF,EAAkBgC,KAAI,SAAC7E,GAAD,OACrB,mBAEEvC,UAAU,2BACV4D,QAAS,kBAAMqD,EAAiB,CAAEC,WAAY3E,EAAKmC,MACnD+B,SAAUhB,EAJZ,UAME,SAACzC,EAAD,CAAMN,KAAMH,EAAKG,KAAMC,MAAOJ,EAAKI,SANrC,sBACsBJ,EAAKmC,a,uBC8CrC,MAzEA,YAA8D,IAAD,EAApCiC,EAAoC,EAApCA,QAASU,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KACjCC,GAAcC,EAAAA,EAAAA,IAAeb,EAASU,GACpC7B,GAAcD,EAAAA,EAAAA,MAAdC,UACR,GAA+BiC,EAAAA,EAAAA,IAAQ,GAA/BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,aACd,GAAoCC,EAAAA,EAAAA,IAAoB,YAAaP,EAAOV,GAA5E,eAAOC,EAAP,KAAgBiB,EAAhB,KAEMZ,ECpBD,WACL,IAAQzB,GAAcD,EAAAA,EAAAA,MAAdC,UAEFsC,GAAUC,EAAAA,EAAAA,IAAW,CACzBC,YAAaC,EAAAA,GAAAA,aACbC,WAAY,kBACZC,eAAgB3C,EAAU,iCAAkC,oCAC5D4C,aAAc5C,EACZ,oEACA,yDAIJ,OAAO,SAAC6C,GACNP,GAAQ,QACNQ,OAAQ,mBACLD,KDIkBE,GAEnBjD,ECDD,WACL,IAAQE,GAAcD,EAAAA,EAAAA,MAAdC,UAEFsC,GAAUC,EAAAA,EAAAA,IAAW,CACzBC,YAAaC,EAAAA,GAAAA,aACbC,WAAY,kBACZC,eAAgB3C,EAAU,iCAAkC,oCAC5D4C,aAAc5C,EACZ,oEACA,yDAIJ,OAAO,SAAC6C,GACNP,GAAQ,QACNQ,OAAQ,eACLD,KDfYG,GAEnB,OACE,SAAC,KAAD,CAAgBlB,KAAMA,EAAMmB,MAAK,OAAEpB,QAAF,IAAEA,OAAF,EAAEA,EAAOoB,MAAOC,aAAcC,EAAAA,EAAAA,gBAAAA,UAA/D,UACE,UAAC,IAAD,CAAcjB,KAAMA,EAAMkB,WAAY,EAAErB,GAAcA,GAAcA,GAAcZ,QAASA,EAA3F,WAEE,SAAC,IAAD,CACEkC,MAAOxB,EAAMwB,MACbC,WAAW,IACXC,cAAepB,EACfqB,KAAM,EACNC,YAAY,UAId,SAAC,KAAD,CACEzC,KAAK,SACLK,MAAOrB,EAAU,qBAAgB,SACjC0D,QAASvB,EACTwB,aAAY,OAAE9B,QAAF,IAAEA,GAAF,UAAEA,EAAOwB,aAAT,aAAE,EAAcO,QAC5BC,SAAU,EALZ,UAOE,UAAC,KAAD,YACE,SAAC,IAAD,CACEvI,IACE,sDACoB,SAAC,KAAD,CAAYiG,OAAQH,EAAS0C,aAAW,IAD5D,2BAIFvI,IACE,oDACkB,SAAC,KAAD,CAAYgG,OAAQH,EAAS0C,aAAW,IAD1D,8BAKJ,SAAC,KAAD,CAAW3C,QAASA,EAAS4C,MAAOlC,EAAMmC,UAAWC,eAAgBpC,EAAMqC,kBAK/E,UAAC,KAAD,CAAQrI,YAAawG,EAArB,WACE,UAAC,KAAD,CAAQxG,aAAcgG,EAAMhC,kBAA5B,WACE,SAAC2B,EAAD,CACE5B,kBAAmBiC,EAAMjC,kBACzB6B,iBAAkBA,KAEpB,SAAC9B,EAAD,CACEC,kBAAmBiC,EAAMjC,kBACzBC,kBAAmBgC,EAAMhC,kBACzBlD,OAAQkF,EAAMlF,OACdmD,WAAYA,QAGhB,SAACoB,EAAD,CACEC,QAASA,EACTC,QAASA,EACTxB,kBAAmBiC,EAAMjC,kBACzBC,kBAAmBgC,EAAMhC,6B,UEjErC,SAASsE,EAAT,GAAmD,IAAjCC,EAAgC,EAAhCA,gBAChB,OACE,UAAC,KAAD,CAAa1E,WAAS,EAAtB,WACE,SAAC,IAAD,CAAWpE,GAAG,+BAA4BC,GAAG,iCAC7C,iBAAMf,UAAU,+BAAhB,SAAgD4J,EAAgBhE,OAAa,KAC7E,SAAC,IAAD,CAAW9E,GAAG,YAAYC,GAAG,iBAAkB,KAC/C,8BACG6I,EAAgBlH,KADnB,IAC0BkH,EAAgBjH,SAL5C,KAQE,mBACA,SAAC,IAAD,CACE7B,GAAG,6GACHC,GAAG,2GAYJ,SAAS8I,EAAT,GAA+E,IAA1DD,EAAyD,EAAzDA,gBAAiBE,EAAwC,EAAxCA,YAAanD,EAA2B,EAA3BA,QAChDlB,GAAcC,EAAAA,EAAAA,MAAdD,UACR,GAA4BE,EAAAA,EAAAA,UAAS,GAArC,eAAO1D,EAAP,KAAegB,EAAf,KAOA,OALAgD,EAAAA,EAAAA,KAAQ,WAAO,IAAD,ET7CU9D,ES8CtB2H,EAAY,CAAEjH,OT9CQV,ES8CQ,UAACyH,EAAgBzH,cAAjB,QAA2B,GT7CpD4H,EAAAA,EAAAA,GAAc,CACnB5H,EACAA,EACAA,EACAA,GAJkB,eAKf5B,MAAM,IACNkE,MAAM,IACN2C,KAAI,SAACf,EAAG1F,GAAJ,OAAU0F,EAAI1F,WSuCrBqJ,MAAM,eACL,KAGD,UAAC,IAAD,CAAMhK,UAAU,yBAAhB,WACE,SAAC,KAAD,WACE,SAAC,IAAD,CAAWc,GAAG,mCAAmCC,GAAG,qCAEtD,SAAC4I,EAAD,CAAQC,gBAAiBA,KACzB,SAAC5F,EAAD,CACEzB,KAAMqH,EACNzH,OAAQyH,EAAgBzH,OACxBF,OAAQA,EACRD,YAAU,EACVE,YAAY,EACZe,UAAWA,KAEb,SAAC,IAAD,CACE0B,MAAO,CAAEsF,MAAO,QAChBC,aAAc,EACdxG,KAAM,GACNC,IAAK,GACLyC,SAAUnD,EACVmB,MAAOnC,KAET,SAAC,IAAD,CAAOjC,UAAU,kBAAkBmG,MAAM,SAAzC,UACE,UAAC,IAAD,CACEK,KAAK,UACL5C,QAAS,kBAAMkG,EAAY,CAAEjH,MAAOZ,KACpCkF,KAAK,QACLV,SAAUhB,EAJZ,WAME,SAAC,IAAD,CAAW3E,GAAG,SAASC,GAAG,SAN5B,KAMwCkB,EAAS,EAAI2H,EAAgBlH,KAAOkH,EAAgBjH,MAN5F,QAMqG,IAClGvC,KAAKC,IAAI4B,SAId,SAAC,KAAD,CAAiB0E,QAASA,OCrEzB,SAASwD,EAAT,GAA6F,IAAjEP,EAAgE,EAAhEA,gBAAiBE,EAA+C,EAA/CA,YAAanD,EAAkC,EAAlCA,QACvDlB,GAAcC,EAAAA,EAAAA,MAAdD,UAOR,OALAQ,EAAAA,EAAAA,KAAQ,WACN6D,EAAY,CAAEjH,OAAO,IACrBmH,MAAM,sBACL,KAGD,UAAC,IAAD,CAAMhK,UAAU,yBAAhB,WACE,SAAC,KAAD,WACE,SAAC,IAAD,CAAWc,GAAG,mCAAmCC,GAAG,qCAEtD,SAAC,KAAD,CAAamE,WAAS,EAAtB,UACE,SAAC,IAAD,CACEpE,GAAG,0NACHC,GAAG,gNAGP,UAAC,IAAD,CAAOf,UAAU,kBAAkBmG,MAAM,SAAzC,WACE,SAAC,IAAD,CACEK,KAAK,UACL5C,QAAS,kBAAMkG,EAAY,CAAEjH,OAAO,KACpCsE,KAAK,QACLV,SAAUhB,EAJZ,UAME,SAAC,IAAD,CAAW3E,GAAG,kBAAkBC,GAAG,sBAErC,SAAC,IAAD,CAAQyF,KAAK,UAAU5C,QAAS,kBAAMkG,EAAY,CAAEjH,OAAO,KAASsE,KAAK,QAAQV,SAAUhB,EAA3F,UACE,SAAC,IAAD,CAAW3E,GAAG,mBAAmBC,GAAG,uBAIxC,SAACiD,EAAD,CAAMzB,KAAMqH,EAAiBzH,OAAQyH,EAAgBzH,OAAQD,YAAU,KAEvE,SAAC,KAAD,CAAiByE,QAASA,OCAhC,MAtCA,YAA2D,IAAD,EAApCA,EAAoC,EAApCA,QAASU,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAC9BC,GAAcC,EAAAA,EAAAA,IAAeb,EAASU,GACpC7B,GAAcD,EAAAA,EAAAA,MAAdC,UACR,GAAwCiC,EAAAA,EAAAA,IAAQ,GAAxCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,aAAcyC,EAA5B,EAA4BA,QAC5B,GAA6BxC,EAAAA,EAAAA,IAAoB,YAAaP,EAAOV,GAA5DkB,GAAT,eAEMiC,EH0BD,SAAoCM,GACzC,IAAQ5E,GAAcD,EAAAA,EAAAA,MAAdC,UAEFsC,GAAUC,EAAAA,EAAAA,IAAW,CACzBC,YAAaC,EAAAA,GAAAA,aACbC,WAAY,eACZmC,aAAc,kBAAMD,EAAQ,IAC5BE,QAAS,kBAAMF,EAAQ,IACvBjC,eAAgB3C,EAAU,gCAAiC,iCAC3D4C,aAAc5C,EACZ,qEACA,uDAIJ,OAAO,SAAC6C,GACNP,GAAQ,QACNQ,OAAQ,gBACLD,KG5CakC,CAA2BH,GAE/C,OACE,SAAC,KAAD,CAAgB9C,KAAMA,EAAMmB,MAAK,OAAEpB,QAAF,IAAEA,OAAF,EAAEA,EAAOoB,MAAOC,aAAcC,EAAAA,EAAAA,gBAAAA,MAA/D,UACE,UAAC,IAAD,CAAcjB,KAAMA,EAAMkB,WAAY,EAAErB,GAAcA,GAAcA,GAAcZ,QAASA,EAA3F,WAEE,SAAC,KAAD,CACEH,KAAK,aACLK,MAAOrB,EAAU,oBAAe,YAChC0D,QAASvB,EACTwB,aAAY,OAAE9B,QAAF,IAAEA,GAAF,UAAEA,EAAOwB,aAAT,aAAE,EAAcO,QAC5BC,SAAU,EALZ,UAOE,SAAC,KAAD,WACE,SAAC,IAAD,CAAWvI,GAAG,gDAA0CC,GAAG,yCAK/D,UAAC,KAAD,CAAQM,YAAawG,EAArB,WACE,SAACsC,EAAD,CACEP,gBAAiBvC,EAAMuC,gBACvBE,YAAaA,EACbnD,QAASA,KAEX,SAACkD,EAAD,CAAWD,gBAAiBvC,EAAMuC,gBAAiBE,YAAaA,EAAanD,QAASA,a,mDC1BhG,SAAS6D,GAAT,GAAuD,IAAnCZ,EAAkC,EAAlCA,gBAClB,OACE,iCACE,SAAC,IAAD,CAAW9I,GAAG,mBAAmBC,GAAG,oBACpC,iBAAMf,UAAU,+BAAhB,SAAgD4J,EAAgBhE,OAAa,KAC7E,SAAC,IAAD,CAAW9E,GAAG,YAAYC,GAAG,iBAAkB,KAC/C,8BACG6I,EAAgBlH,KADnB,IAC0BkH,EAAgBjH,SAL5C,OAmBG,SAAS8H,GAAT,GAA2F,IAArE9C,EAAoE,EAApEA,aAAciC,EAAsD,EAAtDA,gBAAiBjD,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,QAC7D8D,EAAiBC,OAAOC,OAAOjE,GAASkE,QAAO,SAACC,GAAD,OAAOA,EAAEpG,KAAOkC,EAAQlC,MAE7E,OACE,UAAC,IAAD,CAAMwB,WAAS,EAAf,WACE,SAAC,KAAD,CAAO6E,MAAO,EAAG/K,UAAU,sBAA3B,UACE,SAACwK,GAAD,CAAUZ,gBAAiBA,OAG7B,SAAC5F,EAAD,CAAMzB,KAAMqH,EAAiBzH,OAAQyH,EAAgBzH,OAAQD,YAAU,EAAC+B,SAAO,KAE/E,SAAC,KAAD,CAAaiB,WAAS,EAAtB,UACE,SAAC,IAAD,CACEpE,IACE,qEAC6B,SAAC,KAAD,CAAYiG,OAAQH,IADjD,YACsE,IACnEA,EAAQ/D,MAAQ,MAAQ,YAG7B9B,IACE,qDACmB,SAAC,KAAD,CAAYgG,OAAQH,IADvC,IACoDA,EAAQ/D,MAAQ,OAAS,UAD7E,oBAMN,eAAI7C,UAAU,mBAAd,UACGgL,EAAAA,EAAAA,SAAQN,EAAgB,CAAC,QAAS,SAAStD,KAAI,SAACL,GAC/C,OACE,gBAAI/G,UAAU,iBAAd,WACE,kBACEA,WAAWa,EAAAA,EAAAA,GACT,wBACA+B,EAAoBmE,EAAOlE,MAAO+G,EAAgBzH,SAHtD,UAMG4E,EAAOlE,MAAQ,GAAK,OACpBzC,KAAKC,IAAI0G,EAAOlE,OAChBkE,EAAOlE,MAAQ,GAAK,WAEvB,SAAC,KAAD,CAAQ6B,GAAIqC,EAAOkE,SAAUjL,UAAU,4BACvC,iBAAMA,UAAU,uBAAhB,SAAwC+G,EAAOmE,QAC/C,SAAC,KAAD,CACEnL,UbrCU8C,EaqCUkE,EAAOlE,MbrCFV,EaqCSyH,EAAgBzH,ObpC5DA,EAASU,IAAU,EAAU,EACA,IAA7BzC,KAAKC,IAAI8B,EAASU,GAAqB,EACV,IAA7BzC,KAAKC,IAAI8B,EAASU,GAAqB,EACpC,GakCO/C,UAAS,UAAKiH,EAAOrC,GAAZ,eAfuBqC,EAAOrC,IbvB9B,IAAC7B,EAAeV,Qa6CnC,SAAC,KAAD,CAAa6C,SAAS,SAACC,EAAD,OAEtB,SAAC,KAAD,CAAaoE,SAAU,GAAI8B,SAAUxD,EAAc/D,QAAS+D,EAA5D,UACE,SAAC,IAAD,CAAW7G,GAAG,YAAYC,GAAG,kBCzBrC,OApDA,YAA4D,IAAD,EAApC4F,EAAoC,EAApCA,QAASU,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAC/BC,GAAcC,EAAAA,EAAAA,IAAeb,EAASU,GACpC7B,GAAcD,EAAAA,EAAAA,MAAdC,UACR,GAAiDiC,EAAAA,EAAAA,IAAQ,GAAjDC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,aAAcyD,EAA5B,EAA4BA,iBAC5B,GAAkBxD,EAAAA,EAAAA,IAAoB,YAAaP,EAAOV,GAAnDC,GAAP,eAEA,OACE,SAAC,KAAD,CAAgBU,KAAMA,EAAMmB,MAAK,OAAEpB,QAAF,IAAEA,OAAF,EAAEA,EAAOoB,MAAOC,aAAcC,EAAAA,EAAAA,gBAAAA,OAA/D,UACE,UAAC,IAAD,CAAcjB,KAAMA,EAAMkB,WAAY,EAAErB,GAAcA,GAAcA,GAAcZ,QAASA,EAA3F,WAEE,SAAC,KAAD,CACEH,KAAK,oBACLK,MAAOrB,EAAU,YAAa,WAC9B0D,QAASvB,EACTwB,aAAY,OAAE9B,QAAF,IAAEA,GAAF,UAAEA,EAAOwB,aAAT,aAAE,EAAcO,QAC5BC,SAAU,EALZ,UAOE,SAAC,KAAD,WACE,SAAC,IAAD,CAAWvI,GAAG,4BAA4BC,GAAG,wBAKjD,SAAC0J,GAAD,CACE9D,QAASA,EACTC,QAASA,EACTgD,gBAAiBvC,EAAMuC,gBACvBjC,aAAcA,KAIhB,UAAC,IAAD,CAAMzB,WAAS,EAAf,WACE,SAAC,KAAD,uBAEA,SAAC,KAAD,CACEmF,OAAO,SAAC,IAAD,CAAWvK,GAAG,mCAA6BC,GAAG,2BACrDiE,SAAS,SAACC,EAAD,OAGX,SAAC,IAAD,CAAcqG,QAASjE,EAAMiE,QAAS3E,QAASA,KAC/C,SAAC,IAAD,CAAO3G,UAAU,kBAAkBmG,MAAM,SAAzC,UACE,SAAC,IAAD,CAAQvC,QAASwH,EAAjB,UACE,SAAC,IAAD,CAAWtK,GAAG,0BAA0BC,GAAG,2BAG/C,SAAC,KAAD,CAAsB8H,MAAOxB,EAAMwB,MAAO0C,UAAS,OAAElE,QAAF,IAAEA,OAAF,EAAEA,EAAOkE,qB,WCpBtE,OApCA,YAA8D,IAArClE,EAAoC,EAApCA,MAAOV,EAA6B,EAA7BA,QAASW,EAAoB,EAApBA,KACvC,OACE,SAAC,KAAD,CACEA,KAAMA,EACND,MAAOA,EACPmE,iBAAiB,SACjBC,sBACE,SAAC,IAAD,CACE3K,GAAG,mDACHC,GAAG,wCAPT,UAWE,SAAC,IAAD,CAAO2K,MAAI,EAACvF,MAAM,SAASnG,UAAU,kBAArC,SACGqH,EAAMsE,eAAevE,KAAI,SAACwE,GAAmB,IAAD,IAC3C,OACE,iBAAuB5L,UAAU,wBAAjC,WACE,SAAC,KAAD,CAAYwG,KAAK,oBAAoBW,KAAM,MAC3C,oBAAQnH,UAAU,kCAAlB,UACG4L,EAASzJ,OAAS,GAAKyJ,EAASlJ,KAChCkJ,EAASzJ,OAAS,GAAKyJ,EAASjJ,MACZ,IAApBiJ,EAASzJ,QAAT,UAA4ByJ,EAASlJ,KAArC,YAA6CkJ,EAASjJ,QACvD,gBAAK3C,UAAU,gCAAf,SAAgDI,KAAKC,IAAIuL,EAASzJ,cAEpE,gBAAKnC,UAAU,8BAAf,SAA8C4L,EAAShG,QACvD,iBAAK5F,UAAU,gCAAf,iCACM2G,QADN,IACMA,GADN,UACMA,EAAUiF,EAASlC,kBADzB,aACM,EAA+BwB,YADrC,QAC6C,SAVrCU,EAASlH,YCqB/B,OA/BA,YAA0D,IAAzBmH,EAAwB,EAAxBA,OAsB/B,OACE,SAAC,IAAD,CACEA,OAAQA,EACRC,eAAgBC,EAAAA,GAAAA,gBAChBC,mBAzBJ,SAA4BvD,GAC1B,OAAQA,GACN,KAAKE,EAAAA,EAAAA,QAAAA,MACH,OAAOsD,EAAAA,GACT,KAAKtD,EAAAA,EAAAA,QAAAA,MACH,OAAOuD,EAAAA,GACT,KAAKvD,EAAAA,EAAAA,QAAAA,MACH,OAAOwD,EAAAA,GACT,KAAKxD,EAAAA,EAAAA,gBAAAA,UACH,OAAOyD,EACT,KAAKzD,EAAAA,EAAAA,gBAAAA,MACH,OAAO0D,EACT,KAAK1D,EAAAA,EAAAA,gBAAAA,OACH,OAAO2D,GACT,KAAK3D,EAAAA,EAAAA,QAAAA,UACH,OAAO4D,GACT,QACE,OAAOC,EAAAA,Q,6EC5Bf,EADwB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,gOAAoO,KAAQ,aAAc,MAAS,Y,UCM9Z3I,EAAoB,SAA2B4I,EAAOC,GACxD,OAAoBC,EAAAA,cAAoBC,EAAAA,GAAUC,EAAAA,EAAAA,IAAcA,EAAAA,EAAAA,GAAc,GAAIJ,GAAQ,GAAI,CAC5FC,IAAKA,EACLI,KAAMC,MAIVlJ,EAAkBmJ,YAAc,oBAChC,MAA4BL,EAAAA,WAAiB9I,I,6ECb7C,EADyB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,uOAA2O,KAAQ,cAAe,MAAS,Y,UCMvaE,EAAqB,SAA4B0I,EAAOC,GAC1D,OAAoBC,EAAAA,cAAoBC,EAAAA,GAAUC,EAAAA,EAAAA,IAAcA,EAAAA,EAAAA,GAAc,GAAIJ,GAAQ,GAAI,CAC5FC,IAAKA,EACLI,KAAMG,MAIVlJ,EAAmBiJ,YAAc,qBACjC,MAA4BL,EAAAA,WAAiB5I,I,6ECb7C,EADkB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,qaAAya,KAAQ,QAAS,MAAS,U,UCMxlBmJ,EAAc,SAAqBT,EAAOC,GAC5C,OAAoBC,EAAAA,cAAoBC,EAAAA,GAAUC,EAAAA,EAAAA,IAAcA,EAAAA,EAAAA,GAAc,GAAIJ,GAAQ,GAAI,CAC5FC,IAAKA,EACLI,KAAMK,MAIVD,EAAYF,YAAc,cAC1B,MAA4BL,EAAAA,WAAiBO,I,6ECb7C,EADoB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,gGAAoG,KAAQ,QAAS,MAAS,Y,UCMrRpJ,EAAgB,SAAuB2I,EAAOC,GAChD,OAAoBC,EAAAA,cAAoBC,EAAAA,GAAUC,EAAAA,EAAAA,IAAcA,EAAAA,EAAAA,GAAc,GAAIJ,GAAQ,GAAI,CAC5FC,IAAKA,EACLI,KAAMM,MAIVtJ,EAAckJ,YAAc,gBAC5B,MAA4BL,EAAAA,WAAiB7I","sources":["components/points/StarPoints.tsx","components/views/View.tsx","components/views/ViewIf.tsx","components/views/ViewOr.tsx","components/views/ViewSwitch.tsx","games/onda-telepatica/utils/helpers.ts","games/onda-telepatica/utils/mock.ts","games/onda-telepatica/components/Card.tsx","games/onda-telepatica/components/Dial.tsx","games/onda-telepatica/components/RulesBlobs.tsx","games/onda-telepatica/StepClueWriting.tsx","games/onda-telepatica/StepClueWaiting.tsx","games/onda-telepatica/StepCategorySelection.tsx","games/onda-telepatica/PhaseDialClue.tsx","games/onda-telepatica/utils/api-requests.ts","games/onda-telepatica/StepGuess.tsx","games/onda-telepatica/StepPsychicGuess.tsx","games/onda-telepatica/PhaseGuess.tsx","games/onda-telepatica/StepReveal.tsx","games/onda-telepatica/PhaseReveal.tsx","games/onda-telepatica/PhaseGameOver.tsx","games/onda-telepatica/SessionOndaTelepatica.tsx","../node_modules/@ant-design/icons-svg/es/asn/ArrowLeftOutlined.js","../node_modules/@ant-design/icons/es/icons/ArrowLeftOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/ArrowRightOutlined.js","../node_modules/@ant-design/icons/es/icons/ArrowRightOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/CrownFilled.js","../node_modules/@ant-design/icons/es/icons/CrownFilled.js","../node_modules/@ant-design/icons-svg/es/asn/MinusOutlined.js","../node_modules/@ant-design/icons/es/icons/MinusOutlined.js"],"sourcesContent":["import clsx from 'clsx';\n// Ant Design Resources\nimport { StarFilled } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\n\ntype StarPointsProps = {\n  keyPrefix: string;\n  quantity?: number;\n  className?: string;\n  hideText?: boolean;\n};\n\nexport const StarPoints = ({ keyPrefix, quantity, className, hideText }: StarPointsProps) => {\n  if (!quantity) {\n    return <span />;\n  }\n\n  const isNegative = quantity < 0;\n  const num = Math.abs(quantity);\n\n  const StarsArray = Array.from({ length: num }, (_, i) => <StarFilled key={`${keyPrefix}-${i}`} />);\n\n  return (\n    <span className={clsx('star-points', isNegative && 'star-points--negative', className)}>\n      {isNegative ? '-' : '+'} <span className=\"star-points__stars\">{StarsArray}</span>\n      {!hideText && (\n        <>\n          <Translate pt=\"ponto\" en=\"point\" />\n          {num > 1 ? 's' : ''}\n        </>\n      )}\n    </span>\n  );\n};\n","type ViewProps = {\n  children: any;\n};\n\nexport function View({ children }: ViewProps) {\n  return <>{children}</>;\n}\n","type ViewIfProps = {\n  children: any;\n  isVisible?: boolean;\n};\n\nexport function ViewIf({ isVisible = false, children }: ViewIfProps) {\n  return isVisible ? <>{children}</> : <></>;\n}\n","type ViewOrProps = {\n  children: [any, any];\n  orCondition?: boolean;\n};\n\nexport function ViewOr({ orCondition = false, children }: ViewOrProps) {\n  return orCondition ? <>{children[0]}</> : <>{children[1]}</>;\n}\n","type ViewSwitchProps = {\n  cases: boolean[];\n  children: any;\n};\n\nexport function ViewSwitch({ cases, children }: ViewSwitchProps) {\n  if (cases.length > 5) {\n    throw Error('ViewSwitch only supports up to 5 cases');\n  }\n\n  if (cases[0] && children[0]) {\n    return children[0];\n  }\n\n  if (cases[1] && children[1]) {\n    return children[1];\n  }\n\n  if (cases[2] && children[2]) {\n    return children[2];\n  }\n\n  if (cases[3] && children[3]) {\n    return children[3];\n  }\n\n  if (cases[4] && children[4]) {\n    return children[4];\n  }\n  console.warn('Rendering all children in the ViewSwitch');\n  return children;\n}\n","import clsx from 'clsx';\nimport { LETTERS } from 'utils/constants';\n\nexport const getColorModifier = (letter: string) => {\n  const index = LETTERS.indexOf(letter);\n  return Math.abs(index) % 4;\n};\n\nexport const getBracketClass = (\n  num: number,\n  showNeedle: boolean,\n  needle: number,\n  showTarget: boolean,\n  target: number\n): string => {\n  const baseBracketClass = 'o-dial-numbers';\n  const modifier = num % 2 === 0 ? 'even' : 'odd';\n  return clsx(\n    baseBracketClass,\n    `${baseBracketClass}--${modifier}`,\n    showNeedle && needle === num && `${baseBracketClass}--active`,\n    showTarget && target === num && `${baseBracketClass}--target`\n  );\n};\n\nexport const getTargetSide = (target: number, card: any, language: Language): string => {\n  if (!card) {\n    return '';\n  }\n  if (target === 0) {\n    return language === 'pt' ? 'exatamente entre os dois' : 'exactly in between both ideas';\n  }\n\n  const side = target < 0 ? card.left : card.right;\n\n  return language === 'pt' ? `do lado \"${side}\"` : `on the \"${side}\" side`;\n};\n\nexport const getGuessResultClass = (guess: number, target: number): string => {\n  const base = 'o-player-guess__guess';\n  if (target - guess === 0) return `${base}--blue`;\n  if (Math.abs(target - guess) === 1) return `${base}--orange`;\n  if (Math.abs(target - guess) === 2) return `${base}--yellow`;\n  return '';\n};\n\nexport const getPoints = (guess: number, target: number): number => {\n  if (target - guess === 0) return 4;\n  if (Math.abs(target - guess) === 1) return 3;\n  if (Math.abs(target - guess) === 2) return 2;\n  return 0;\n};\n","import { getRandomItem } from 'utils/helpers';\n\nexport const mockGuess = (target: number): number => {\n  return getRandomItem([\n    target,\n    target,\n    target,\n    target,\n    ...Array(21)\n      .fill(-10)\n      .map((e, i) => e + i),\n  ]);\n};\n\nexport const mockHint = (card: OCategoryCard, target: number): string => {\n  if (target < 0) {\n    return `${card.left}:${Math.abs(target)}`;\n  }\n\n  if (target > 0) {\n    return `${card.right}:${Math.abs(target)}`;\n  }\n\n  return `0:0`;\n};\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { ArrowLeftOutlined, ArrowRightOutlined, MinusOutlined } from '@ant-design/icons';\n// Helpers\nimport { getColorModifier } from '../utils/helpers';\n\ntype CardProps = {\n  left: string;\n  right: string;\n  className?: string;\n  setNeedle?: GenericFunction;\n};\n\nexport function Card({ left, right, className = '', setNeedle }: CardProps) {\n  const leftColor = getColorModifier(left[0]);\n  const rightColor = getColorModifier(right[0]);\n  const cardSideClass = 'o-card__side';\n  const isButton = Boolean(setNeedle);\n\n  const onSetNeedle = (direction: number) => {\n    if (setNeedle) {\n      if (direction === 1) {\n        setNeedle((n: number) => Math.min(n + direction, 10));\n      } else {\n        setNeedle((n: number) => Math.max(n + direction, -10));\n      }\n    }\n  };\n\n  return (\n    <div className={clsx('o-card', className)}>\n      <div\n        className={clsx(\n          cardSideClass,\n          `${cardSideClass}--left`,\n          `${cardSideClass}--L${leftColor}`,\n          isButton && `${cardSideClass}--button`\n        )}\n        onClick={() => onSetNeedle(-1)}\n      >\n        <span className=\"o-card__arrow\">\n          <ArrowLeftOutlined /> <MinusOutlined /> <MinusOutlined />\n        </span>\n        <span className=\"o-card__text\">{left}</span>\n      </div>\n      <div\n        className={clsx(\n          cardSideClass,\n          `${cardSideClass}--right`,\n          `${cardSideClass}--R${rightColor}`,\n          isButton && `${cardSideClass}--button`\n        )}\n        onClick={() => onSetNeedle(1)}\n      >\n        <span className=\"o-card__arrow\">\n          <MinusOutlined /> <MinusOutlined /> <ArrowRightOutlined />\n        </span>\n        <span className=\"o-card__text\">{right}</span>\n      </div>\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Utils\nimport { getBracketClass } from '../utils/helpers';\n// Components\nimport { Card } from './Card';\n\ntype DialProps = {\n  card: OCategoryCard;\n  needle?: number;\n  showNeedle?: boolean;\n  target?: number;\n  showTarget?: boolean;\n  animate?: boolean;\n  setNeedle?: GenericFunction;\n};\n\nexport function Dial({\n  card,\n  needle = 0,\n  showNeedle = false,\n  target = 0,\n  showTarget = false,\n  animate = false,\n  setNeedle,\n}: DialProps) {\n  const baseClass = 'o-dial';\n  const basePointsClass = 'o-dial-points';\n\n  const onSetNeedle = setNeedle ? (value: number) => setNeedle(value) : () => {};\n\n  return (\n    <div\n      className={clsx(\n        `${baseClass}`,\n        animate && `${baseClass}--animated`,\n        Boolean(setNeedle) && `${baseClass}--clickable`\n      )}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 670 340\"\n        overflow=\"visible\"\n        className={clsx(`${baseClass}__svg`)}\n      >\n        <defs />\n\n        <path\n          d=\"M669.9 329.9c-1.1-21-6.1-71.9-27.3-127.7C591.2 83.3 472.8 0 335 0h-.2C198.2.1 80.7 81.9 28.7 199.2 5.7 258 1 312.1 0 332c-.1 1.1.1 2.1.5 3 1.1 2.9 3.9 5 7.2 5h654.6c3.3 0 6.1-2.1 7.2-5 .2-.5.3-1.1.4-1.7v-3.4z\"\n          fill=\"#181d44\"\n        />\n\n        {showTarget && (\n          <path\n            id=\"target\"\n            className={clsx(`${baseClass}__target`, animate && `${basePointsClass}--animated-2`)}\n            style={{ transform: `rotate(${target * 8}deg)` }}\n            d=\"M335.2 0l7.1 11.4 13 3.2-8.6 10.3.9 13.4-12.4-5.1-12.5 5.1 1-13.4-8.6-10.3 13-3.2z\"\n          />\n        )}\n\n        <g className=\"o-dial-numbers\">\n          <path\n            id=\"bracket-number-10-r\"\n            className={getBracketClass(10, showNeedle, needle, showTarget, target)}\n            d=\"M341.2 51.9l-3 5.4v-5.1c0-.4.1-.8.4-1.1.3-.3.6-.4 1.1-.4.8 0 1.3.4 1.5 1.2zm-2.5 9c.2.2.6.3 1 .3s.8-.1 1.1-.5c.3-.3.4-.7.4-1.1v-5.1l-3 5.3c.1.6.2.9.5 1.1zm16.8-20.2L335 340 314.5 40.7h41zm-23.8 8.5h-1.5l-3 1.5v1.5h1.5v10.5h3V49.2zm12.5 10.5v-7.5c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v7.5c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.6.9-1.3.9-2.1z\"\n            onClick={() => onSetNeedle(10)}\n          />\n          <path\n            id=\"bracket-number-9-r\"\n            className={getBracketClass(9, showNeedle, needle, showTarget, target)}\n            d=\"M336 51.1c.3.3.4.7.4 1.1v3c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.8-.1-1.1-.5-.3-.3-.4-.7-.4-1.1v-3c0-.4.1-.8.4-1.1s.6-.5 1.1-.5c.5.1.8.2 1.1.5zm19.5-10.4L335 340 314.5 40.7h41zm-16.1 16.7v-5.2c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v3c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h1.5c.9 0 1.4-.5 1.5-1.5v1.5c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-1.5v1.5h2.2c1.4 0 2.7-.5 3.7-1.5s1.6-2.3 1.6-3.8z\"\n            onClick={() => onSetNeedle(9)}\n          />\n          <path\n            id=\"bracket-number-8-r\"\n            className={getBracketClass(8, showNeedle, needle, showTarget, target)}\n            d=\"M336.4 58.2v1.5c0 .4-.1.8-.4 1.1s-.7.4-1.1.4c-.4 0-.8-.1-1.1-.4s-.4-.7-.4-1.1v-1.5c0-1 .5-1.5 1.5-1.5s1.5.5 1.5 1.5zm-1.5-7.5c-.4 0-.8.1-1.1.4-.3.3-.4.7-.4 1.1v1.5c0 .4.1.8.4 1.1.3.3.6.4 1.1.4.4 0 .8-.1 1.1-.4.3-.3.4-.6.4-1.1v-1.5c0-.4-.1-.8-.4-1.1-.3-.3-.6-.4-1.1-.4zm20.6-10L335 340 314.5 40.7h41zm-19.1 15.2c1-.1 1.7-.4 2.2-.9.5-.5.7-1.2.7-2.1v-.7c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v.7c0 .9.3 1.6.8 2.1s1.3.8 2.2.9c-1 0-1.7.3-2.2 1-.5.6-.8 1.3-.8 2v.7c0 .7.3 1.3.9 2 .6.7 1.3 1 2.1 1h3c.8 0 1.5-.3 2.1-1 .6-.7.9-1.3.9-2V59c0-.7-.2-1.4-.7-2-.4-.7-1.2-1.1-2.2-1.1z\"\n            onClick={() => onSetNeedle(8)}\n          />\n          <path\n            id=\"bracket-number-7-r\"\n            className={getBracketClass(7, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm24.2 13l-.8 1.5c-1 2.1-1.5 3.6-1.5 4.5v3h-3v-3c0-1 .5-2.5 1.5-4.5l1.5-3v-1.5h-6v-1.5h9v3l-.7 1.5z\"\n            onClick={() => onSetNeedle(7)}\n          />\n\n          <path\n            id=\"bracket-number-6-r\"\n            className={getBracketClass(6, showNeedle, needle, showTarget, target)}\n            d=\"M336 55.6c.3.3.4.7.4 1.1v3c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.8-.1-1.1-.5-.3-.3-.4-.7-.4-1.1v-3c0-.4.1-.8.4-1.1.3-.3.6-.4 1.1-.4.5 0 .8.1 1.1.4zm19.5-14.9L335 340 314.5 40.7h41zm-16.1 19v-3c0-.8-.3-1.5-.9-2.1s-1.3-.9-2.1-.9h-1.5c-.4 0-.8.1-1 .4-.3.3-.4.6-.5 1.1v-1.5c0-.8.3-1.5.9-2.1s1.3-.9 2.1-.9h1.5v-1.5h-2.2c-1.4 0-2.7.5-3.7 1.5s-1.6 2.3-1.6 3.7v5.2c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.5.9-1.2.9-2z\"\n            onClick={() => onSetNeedle(6)}\n          />\n\n          <path\n            id=\"bracket-number-5-r\"\n            className={getBracketClass(5, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm21.9 13c.8 0 1.5.3 2.1.9s.9 1.3.9 2.1v3c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-3c-1.8 0-2.8-1-3-3h1.5c.1 1 .6 1.5 1.5 1.5h1.5c.4 0 .8-.1 1.1-.4s.4-.7.4-1.1v-3c0-.4-.1-.8-.4-1.1-.3-.3-.7-.4-1.1-.4h-4.5v-6h9v1.5h-6v3h3z\"\n            onClick={() => onSetNeedle(5)}\n          />\n\n          <path\n            id=\"bracket-number-4-r\"\n            className={getBracketClass(4, showNeedle, needle, showTarget, target)}\n            d=\"M330.4 56.7l4.5-5.6v5.6h-4.5zm25.1-16L335 340 314.5 40.7h41zm-16.1 17.5v-1.5h-1.5v-7.5h-3l-6 7.5v1.5h6v4.5h3v-4.5h1.5z\"\n            onClick={() => onSetNeedle(4)}\n          />\n\n          <path\n            id=\"bracket-number-3-r\"\n            className={getBracketClass(3, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm21.9 13c.9 0 1.6.3 2.1 1s.8 1.3.8 2v3c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-3c-1.8 0-2.8-1-3-3h1.5c.1 1 .6 1.5 1.5 1.5h1.5c.4 0 .8-.1 1.1-.4s.4-.7.4-1.1v-3c0-.2-.1-.6-.4-.9s-.6-.6-1.1-.6h-3v-1.5l4.5-3h-6v-1.5h9v1.5l-4.5 3h1.6z\"\n            onClick={() => onSetNeedle(3)}\n          />\n\n          <path\n            id=\"bracket-number-2-r\"\n            className={getBracketClass(2, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm24.9 20.5v1.5h-9v-1.5c0-1 1-2.4 2.9-4l.2-.2c1.9-1.7 2.9-3 2.9-4v-.7c0-.4-.1-.8-.4-1.1-.3-.3-.7-.4-1.1-.4h-1.5c-.9 0-1.4.5-1.5 1.5h-1.5c.2-2 1.2-3 3-3h3c.8 0 1.5.3 2.1.9.6.6.9 1.3.9 2.1v.7c0 1-1 2.4-2.9 4l-.2.2c-1.9 1.7-2.9 3-2.9 3.9v.1h6z\"\n            onClick={() => onSetNeedle(2)}\n          />\n          <path\n            id=\"bracket-number-1-r\"\n            className={getBracketClass(1, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm18.9 22V52.2h-1.5v-1.5l3-1.5h1.5v13.5h-3z\"\n            onClick={() => onSetNeedle(1)}\n          />\n\n          <path\n            id=\"bracket-number-10-l\"\n            className={getBracketClass(-10, showNeedle, needle, showTarget, target)}\n            d=\"M341.2 51.9l-3 5.4v-5.1c0-.4.1-.8.4-1.1.3-.3.6-.4 1.1-.4.8 0 1.3.4 1.5 1.2zm-2.5 9c.2.2.6.3 1 .3s.8-.1 1.1-.5c.3-.3.4-.7.4-1.1v-5.1l-3 5.3c.1.6.2.9.5 1.1zm16.8-20.2L335 340 314.5 40.7h41zm-23.8 8.5h-1.5l-3 1.5v1.5h1.5v10.5h3V49.2zm12.5 10.5v-7.5c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v7.5c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.6.9-1.3.9-2.1z\"\n            onClick={() => onSetNeedle(-10)}\n          />\n          <path\n            id=\"bracket-number-9-l\"\n            className={getBracketClass(-9, showNeedle, needle, showTarget, target)}\n            d=\"M336 51.1c.3.3.4.7.4 1.1v3c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.8-.1-1.1-.5-.3-.3-.4-.7-.4-1.1v-3c0-.4.1-.8.4-1.1s.6-.5 1.1-.5c.5.1.8.2 1.1.5zm19.5-10.4L335 340 314.5 40.7h41zm-16.1 16.7v-5.2c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v3c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h1.5c.9 0 1.4-.5 1.5-1.5v1.5c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-1.5v1.5h2.2c1.4 0 2.7-.5 3.7-1.5s1.6-2.3 1.6-3.8z\"\n            onClick={() => onSetNeedle(-9)}\n          />\n          <path\n            id=\"bracket-number-8-l\"\n            className={getBracketClass(-8, showNeedle, needle, showTarget, target)}\n            d=\"M336.4 58.2v1.5c0 .4-.1.8-.4 1.1s-.7.4-1.1.4c-.4 0-.8-.1-1.1-.4s-.4-.7-.4-1.1v-1.5c0-1 .5-1.5 1.5-1.5s1.5.5 1.5 1.5zm-1.5-7.5c-.4 0-.8.1-1.1.4-.3.3-.4.7-.4 1.1v1.5c0 .4.1.8.4 1.1.3.3.6.4 1.1.4.4 0 .8-.1 1.1-.4.3-.3.4-.6.4-1.1v-1.5c0-.4-.1-.8-.4-1.1-.3-.3-.6-.4-1.1-.4zm20.6-10L335 340 314.5 40.7h41zm-19.1 15.2c1-.1 1.7-.4 2.2-.9.5-.5.7-1.2.7-2.1v-.7c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v.7c0 .9.3 1.6.8 2.1s1.3.8 2.2.9c-1 0-1.7.3-2.2 1-.5.6-.8 1.3-.8 2v.7c0 .7.3 1.3.9 2 .6.7 1.3 1 2.1 1h3c.8 0 1.5-.3 2.1-1 .6-.7.9-1.3.9-2V59c0-.7-.2-1.4-.7-2-.4-.7-1.2-1.1-2.2-1.1z\"\n            onClick={() => onSetNeedle(-8)}\n          />\n          <path\n            id=\"bracket-number-7-l\"\n            className={getBracketClass(-7, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm24.2 13l-.8 1.5c-1 2.1-1.5 3.6-1.5 4.5v3h-3v-3c0-1 .5-2.5 1.5-4.5l1.5-3v-1.5h-6v-1.5h9v3l-.7 1.5z\"\n            onClick={() => onSetNeedle(-7)}\n          />\n          <path\n            id=\"bracket-number-6-l\"\n            className={getBracketClass(-6, showNeedle, needle, showTarget, target)}\n            d=\"M336 55.6c.3.3.4.7.4 1.1v3c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.8-.1-1.1-.5-.3-.3-.4-.7-.4-1.1v-3c0-.4.1-.8.4-1.1.3-.3.6-.4 1.1-.4.5 0 .8.1 1.1.4zm19.5-14.9L335 340 314.5 40.7h41zm-16.1 19v-3c0-.8-.3-1.5-.9-2.1s-1.3-.9-2.1-.9h-1.5c-.4 0-.8.1-1 .4-.3.3-.4.6-.5 1.1v-1.5c0-.8.3-1.5.9-2.1s1.3-.9 2.1-.9h1.5v-1.5h-2.2c-1.4 0-2.7.5-3.7 1.5s-1.6 2.3-1.6 3.7v5.2c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.5.9-1.2.9-2z\"\n            onClick={() => onSetNeedle(-6)}\n          />\n          <path\n            id=\"bracket-number-5-l\"\n            className={getBracketClass(-5, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm21.9 13c.8 0 1.5.3 2.1.9s.9 1.3.9 2.1v3c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-3c-1.8 0-2.8-1-3-3h1.5c.1 1 .6 1.5 1.5 1.5h1.5c.4 0 .8-.1 1.1-.4s.4-.7.4-1.1v-3c0-.4-.1-.8-.4-1.1-.3-.3-.7-.4-1.1-.4h-4.5v-6h9v1.5h-6v3h3z\"\n            onClick={() => onSetNeedle(-5)}\n          />\n          <path\n            id=\"bracket-number-4-l\"\n            className={getBracketClass(-4, showNeedle, needle, showTarget, target)}\n            d=\"M330.4 56.7l4.5-5.6v5.6h-4.5zm25.1-16L335 340 314.5 40.7h41zm-16.1 17.5v-1.5h-1.5v-7.5h-3l-6 7.5v1.5h6v4.5h3v-4.5h1.5z\"\n            onClick={() => onSetNeedle(-4)}\n          />\n          <path\n            id=\"bracket-number-3-l\"\n            className={getBracketClass(-3, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm21.9 13c.9 0 1.6.3 2.1 1s.8 1.3.8 2v3c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-3c-1.8 0-2.8-1-3-3h1.5c.1 1 .6 1.5 1.5 1.5h1.5c.4 0 .8-.1 1.1-.4s.4-.7.4-1.1v-3c0-.2-.1-.6-.4-.9s-.6-.6-1.1-.6h-3v-1.5l4.5-3h-6v-1.5h9v1.5l-4.5 3h1.6z\"\n            onClick={() => onSetNeedle(-3)}\n          />\n          <path\n            id=\"bracket-number-2-l\"\n            className={getBracketClass(-2, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm24.9 20.5v1.5h-9v-1.5c0-1 1-2.4 2.9-4l.2-.2c1.9-1.7 2.9-3 2.9-4v-.7c0-.4-.1-.8-.4-1.1-.3-.3-.7-.4-1.1-.4h-1.5c-.9 0-1.4.5-1.5 1.5h-1.5c.2-2 1.2-3 3-3h3c.8 0 1.5.3 2.1.9.6.6.9 1.3.9 2.1v.7c0 1-1 2.4-2.9 4l-.2.2c-1.9 1.7-2.9 3-2.9 3.9v.1h6z\"\n            onClick={() => onSetNeedle(-2)}\n          />\n          <path\n            id=\"bracket-number-1-l\"\n            className={getBracketClass(-1, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm18.9 22V52.2h-1.5v-1.5l3-1.5h1.5v13.5h-3z\"\n            onClick={() => onSetNeedle(-1)}\n          />\n\n          <path\n            id=\"bracket-number-0\"\n            className={getBracketClass(0, showNeedle, needle, showTarget, target)}\n            d=\"M333.5 59.9l3-5.3v5.1c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.7-.1-1-.3-.3-.3-.5-.6-.5-1.1zm1.4-9.2c-.4 0-.8.1-1.1.4-.3.3-.4.7-.4 1.1v5.1l3-5.4c-.2-.8-.7-1.2-1.5-1.2zm20.6-10L335 340 314.5 40.7h41zm-16.1 19v-7.5c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v7.5c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.6.9-1.3.9-2.1z\"\n            onClick={() => onSetNeedle(0)}\n          />\n        </g>\n\n        {showNeedle && (\n          <path\n            id=\"needle\"\n            className={clsx(`${baseClass}__needle`, animate && `${basePointsClass}--animated-1`)}\n            style={{ transform: `rotate(${needle * 8}deg)` }}\n            d=\"M335 340c-.9 0-3.7-.8-3.7-1.8l2-260.6c0-1 .8-1.8 1.7-1.8.9 0 1.7.8 1.7 1.8l2 260.6c0 1-2.8 1.8-3.7 1.8z\"\n          />\n        )}\n      </svg>\n      <Card left={card.left} right={card.right} className=\"o-dial__card\" setNeedle={onSetNeedle} />\n    </div>\n  );\n}\n","import { Translate } from 'components/language';\nimport { PopoverRule } from 'components/rules';\nimport { Instruction } from 'components/text';\n\nfunction RulesPt() {\n  return (\n    <ul>\n      <li>\n        Use uma única idea. Evite usar \"mas\", \"enquanto\", \"quando\", e também superlativos \"super\", \"muito\"\n      </li>\n      <li>Não invente coisas. Exemplo: 'Nicolas Cage cantando uma música dos Beatles' é inválido.</li>\n      <li>Mantenha-se no assunto da carta. Exemplo: 'Amor' não é uma dica válida para 'Sujo'.</li>\n      <li>Não use números para sugerir a posição do ponteiro.</li>\n      <li>Não use partes, derivados ou sinônimos das palavras da carta.</li>\n    </ul>\n  );\n}\n\nfunction RulesEn() {\n  return (\n    <ul>\n      <li>\n        Use a single idea. Avoid the use of \"but\", \"while\", \"when\", and superlatives like \"super\", \"very\",\n        etc.\n      </li>\n      <li>Do not make up things. Example: 'Nicolas Cage singing the Beatles' is invalid.</li>\n      <li>Keep it within the theme. Example: 'Love' is not a valid clue for 'Dirty'.</li>\n      <li>Don't use number to suggest the position of the needle.</li>\n      <li>Don't use parts or synonyms of the words in the cards.</li>\n    </ul>\n  );\n}\n\nexport function ClueWritingRules() {\n  return <PopoverRule content={<Translate pt={<RulesPt />} en={<RulesEn />} />} />;\n}\n\nexport function ScoringRules() {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Jogadores ganham 4 pontos se acertarem na mosca!\n            <br />\n            Mas 3 e 2 pontos se votaram 1 ou 2 espaços de distância.\n            <br />O Medium ganha 1 ponto para cada jogador que ganhou ponto (máximo 3 pontos) e se ele(a)\n            chutou a quantidade certa de jogadores que iam acertar, ele ganha mais 1 ponto.\n            <br />O Medium nunca ganha mais pontos que os outros jogadores.\n          </>\n        }\n        en={\n          <>\n            Players get 4 points if they get it exactly right!\n            <br />\n            If one or two spaces away from the needle, they get 3 and 2 points respectively.\n            <br />\n            The psychic gets 1 point for every player that got points this turn (maximum of 3 points) and may\n            get 1 extra point if they guessed the correct number of player who would get the clue right.\n            <br />\n            The psychic may never get more points than the other players.\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, Input, Space } from 'antd';\n// Hooks\nimport { useLanguage, useLoading, useMock } from 'hooks';\n// Utils\nimport { getTargetSide } from './utils/helpers';\nimport { mockHint } from './utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Dial } from './components/Dial';\nimport { ClueWritingRules } from './components/RulesBlobs';\n\ntype StepClueWritingProps = {\n  currentCategories: OCategoryCard[];\n  currentCategoryId: string;\n  target: number;\n  onSendClue: GenericFunction;\n};\n\nexport function StepClueWriting({\n  currentCategories,\n  currentCategoryId,\n  target,\n  onSendClue,\n}: StepClueWritingProps) {\n  const { language, translate } = useLanguage();\n  const { isLoading } = useLoading();\n  const [clue, setClue] = useState('');\n\n  const onChangeInput = (e: any) => {\n    setClue(e.target.value);\n  };\n\n  const onSubmitClue = () => {\n    onSendClue({ clue });\n  };\n\n  const card = currentCategories.find((c) => c.id === currentCategoryId);\n\n  useMock(() => {\n    if (card) {\n      onSendClue({ clue: mockHint(card, target) });\n    }\n  }, [card]);\n\n  return (\n    <Step fullWidth>\n      <Title>\n        <Translate pt=\"Escreva sua dica\" en=\"Write your clue\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={`O ponteiro está no ${Math.abs(target)} ${getTargetSide(\n            target,\n            card,\n            language\n          )}. Escreva uma dica que ajude os outros jogadores a escolher exatamente esse número! Revise as regras de quais dicas são válidas clicando no Ícone de Livrinho.`}\n          en={`The needle is point at ${Math.abs(target)} ${getTargetSide(\n            target,\n            card,\n            language\n          )}. Write a clue that will help the other players to choose this exact number! Revise the rules for clue writing by clicking on the Book Icon.`}\n        />\n        <ClueWritingRules />\n      </Instruction>\n      <Dial target={target} card={card!} showTarget />\n      <Space className=\"space-container\" align=\"center\">\n        <Input\n          onChange={onChangeInput}\n          onPressEnter={onSubmitClue}\n          placeholder={translate('Escreva aqui', 'Write here')}\n        />\n        <Button type=\"primary\" onClick={onSubmitClue} disabled={isLoading}>\n          <Translate pt=\"Enviar\" en=\"Send\" />\n        </Button>\n      </Space>\n    </Step>\n  );\n}\n","import { Space } from 'antd';\nimport { AvatarName } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { WaitingRoom } from 'components/players';\nimport { Instruction } from 'components/text';\nimport { Card } from './components/Card';\n\ntype StepClueWaitingProps = {\n  players: GamePlayers;\n  psychic: GamePlayer;\n  currentCategories: OCategoryCard[];\n  currentCategoryId: string;\n};\n\nexport function StepClueWaiting({\n  players,\n  psychic,\n  currentCategories,\n  currentCategoryId,\n}: StepClueWaitingProps) {\n  const card = currentCategories.find((c) => c.id === currentCategoryId);\n\n  return (\n    <WaitingRoom\n      players={players}\n      title={<Translate pt={'Concentração...'} en={'Focus...'} />}\n      instruction=\"\"\n    >\n      <Instruction contained>\n        {Boolean(!currentCategoryId) ? (\n          <p>\n            <AvatarName player={psychic} />\n            <Translate\n              pt={\n                'escolherá uma carta com duas ideias opostas, e então terá que escrever uma dica que ajude você e os outros jogadores a escolher a posição correta do ponteiro no medidor de ondas telepáticas.'\n              }\n              en={\n                'is choosing a card with two opposing ideas, then they will write a clue that will help you and the other players to find the correct position of the needle in the Wavelength measuring device...'\n              }\n            />\n          </p>\n        ) : (\n          <>\n            <p>\n              <AvatarName player={psychic} />\n              <Translate pt={'escolheu:'} en={'chose:'} />\n            </p>\n            <Space className=\"space-container\" align=\"center\">\n              <Card left={card!.left} right={card!.right} />\n            </Space>\n            <p>\n              <Translate\n                pt={`Agora, é uma boa ideia pra discutir com o grupo em voz alta o que vocês acham ser super pra esquerda \"${\n                  card!.left\n                }\" e super pra direita \"${card!.right}\". Isso ajuda o medium!`}\n                en={`Now it's a good idea to discuss with the group out loud what you guys think it's extreme left \"${\n                  card!.left\n                }\" and extreme right \"${card!.right}\". This might help the psychic!`}\n              />\n            </p>\n          </>\n        )}\n      </Instruction>\n    </WaitingRoom>\n  );\n}\n","// Hooks\nimport { useLoading, useMock } from 'hooks';\n// Components\nimport { AvatarIcon } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\n\nimport { Card } from './components/Card';\n\ntype StepCategorySelectionProps = {\n  currentCategories: OCategoryCard[];\n  onSendChosenSide: GenericFunction;\n};\n\nexport function StepCategorySelection({ currentCategories, onSendChosenSide }: StepCategorySelectionProps) {\n  const { isLoading } = useLoading();\n\n  useMock(() => {\n    onSendChosenSide({ categoryId: currentCategories[0].id });\n  }, []);\n\n  return (\n    <Step className=\"o-card-selection\">\n      <Title>\n        <Translate\n          pt=\"Medium, selecione uma das duas categorias\"\n          en=\"Psychic, select one of the two categories\"\n        />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt=\"Como medium, seu objetivo é ajudar as pessoas escolherem a posição correta do medidor de ondas telepáticas. Primeiro, escolha uma das duas cartas que você acredita ser capaz de criar uma boa dica.\"\n          en=\"As the Psychic, your goal is to help the other players to find the correct position of the needle in the wavelength measuring device. But first, choose one of these cards that you believe you will be able to write a good clue.\"\n        />\n        {isLoading && (\n          <div>\n            <AvatarIcon type=\"animated-loader\" size=\"small\" />\n          </div>\n        )}\n      </Instruction>\n\n      <div className=\"o-card-selection__container\">\n        {currentCategories.map((card) => (\n          <button\n            key={`card-button-${card.id}`}\n            className=\"o-card-selection__button\"\n            onClick={() => onSendChosenSide({ categoryId: card.id })}\n            disabled={isLoading}\n          >\n            <Card left={card.left} right={card.right} />\n          </button>\n        ))}\n      </div>\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useIsUserReady, useLanguage, useStep, useWhichPlayerIsThe } from 'hooks';\nimport { useOnSubmitCategoryAPIRequest, useOnSubmitClueAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { StepClueWriting } from './StepClueWriting';\nimport { StepClueWaiting } from './StepClueWaiting';\nimport { StepCategorySelection } from './StepCategorySelection';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { RoundAnnouncement } from 'components/round';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { AvatarName } from 'components/avatars';\nimport { TurnOrder } from 'components/players';\nimport { ViewOr } from 'components/views';\n\nfunction PhaseDialClue({ players, state, info }: PhaseProps) {\n  const isUserReady = useIsUserReady(players, state);\n  const { translate } = useLanguage();\n  const { step, goToNextStep } = useStep(0);\n  const [psychic, isUserThePsychic] = useWhichPlayerIsThe('psychicId', state, players);\n\n  const onSendChosenSide = useOnSubmitCategoryAPIRequest();\n\n  const onSendClue = useOnSubmitClueAPIRequest();\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.ONDA_TELEPATICA.DIAL_CLUE}>\n      <StepSwitcher step={step} conditions={[!isUserReady, !isUserReady, !isUserReady]} players={players}>\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state.round}\n          buttonText=\" \"\n          onPressButton={goToNextStep}\n          time={5}\n          circleColor=\"pink\"\n        ></RoundAnnouncement>\n\n        {/* Step 1 */}\n        <PhaseAnnouncement\n          type=\"turban\"\n          title={translate('Concentração', 'Focus')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          duration={7}\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  Para essa rodada, <AvatarName player={psychic} addressUser /> será o(a) Medium.\n                </>\n              }\n              en={\n                <>\n                  For this round, <AvatarName player={psychic} addressUser /> will be the Psychic.\n                </>\n              }\n            />\n            <TurnOrder players={players} order={state.gameOrder} activePlayerId={state.psychicId} />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 2 */}\n        <ViewOr orCondition={isUserThePsychic}>\n          <ViewOr orCondition={!state.currentCategoryId}>\n            <StepCategorySelection\n              currentCategories={state.currentCategories}\n              onSendChosenSide={onSendChosenSide}\n            />\n            <StepClueWriting\n              currentCategories={state.currentCategories}\n              currentCategoryId={state.currentCategoryId}\n              target={state.target}\n              onSendClue={onSendClue}\n            />\n          </ViewOr>\n          <StepClueWaiting\n            players={players}\n            psychic={psychic}\n            currentCategories={state.currentCategories}\n            currentCategoryId={state.currentCategoryId}\n          />\n        </ViewOr>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseDialClue;\n","import { ONDA_TELEPATICA_API } from 'services/adapters';\n\nimport { useAPICall, useLanguage } from 'hooks';\n\nexport function useOnSubmitCategoryAPIRequest() {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: ONDA_TELEPATICA_API.submitAction,\n    actionName: 'submit-category',\n    successMessage: translate('Categoria enviada com sucesso!', 'Category submitted successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar a categoria',\n      'Oops, the application failed to submit the category'\n    ),\n  });\n\n  return (payload: SubmitCategoryPayload) => {\n    request({\n      action: 'SUBMIT_CATEGORY',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitClueAPIRequest() {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: ONDA_TELEPATICA_API.submitAction,\n    actionName: 'submit-category',\n    successMessage: translate('Categoria enviada com sucesso!', 'Category submitted successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar a categoria',\n      'Oops, the application failed to submit the category'\n    ),\n  });\n\n  return (payload: SubmitCluePayload) => {\n    request({\n      action: 'SUBMIT_CLUE',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitGuessAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: ONDA_TELEPATICA_API.submitAction,\n    actionName: 'submit-guess',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate('Resposta enviado com sucesso!', 'Guess submitted successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua resposta',\n      'Oops, the application failed to submit your guess'\n    ),\n  });\n\n  return (payload: SubmitGuessPayload) => {\n    request({\n      action: 'SUBMIT_GUESS',\n      ...payload,\n    });\n  };\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, Slider, Space } from 'antd';\n// Hooks\nimport { useLoading, useMock } from 'hooks';\n// Utils\nimport { mockGuess } from './utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { ReadyPlayersBar } from 'components/players';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Dial } from './components/Dial';\n\ntype PromptProps = {\n  currentCategory: OCurrentCategory;\n};\n\nfunction Prompt({ currentCategory }: PromptProps) {\n  return (\n    <Instruction contained>\n      <Translate pt=\"Qual número melhor indica\" en=\"What number best translates\" />\n      <span className=\"o-dial-guess-selection__clue\">{currentCategory.clue}</span>{' '}\n      <Translate pt=\"na escala\" en=\"on the scale\" />{' '}\n      <strong>\n        {currentCategory.left}-{currentCategory.right}\n      </strong>\n      ?\n      <br />\n      <Translate\n        pt=\"Clique no número ou use a barra abaixo para alinhar o ponteiro na sua resposta, então aperte Enviar.\"\n        en=\"Click on the number or use the slider below to position the pointer on your guess, then press Send.\"\n      />\n    </Instruction>\n  );\n}\n\ntype StepGuessProps = {\n  currentCategory: OCurrentCategory;\n  onSendGuess: GenericFunction;\n  players: GamePlayers;\n};\n\nexport function StepGuess({ currentCategory, onSendGuess, players }: StepGuessProps) {\n  const { isLoading } = useLoading();\n  const [needle, setNeedle] = useState(0);\n\n  useMock(() => {\n    onSendGuess({ guess: mockGuess(currentCategory.target ?? 0) });\n    alert('StepGuess');\n  }, []);\n\n  return (\n    <Step className=\"o-dial-guess-selection\">\n      <Title>\n        <Translate pt=\"Hora de brilhar telepaticamente!\" en=\"Time to shine telepathically!\" />\n      </Title>\n      <Prompt currentCategory={currentCategory} />\n      <Dial\n        card={currentCategory}\n        target={currentCategory.target}\n        needle={needle}\n        showNeedle\n        showTarget={false}\n        setNeedle={setNeedle}\n      />\n      <Slider\n        style={{ width: '100%' }}\n        defaultValue={0}\n        min={-10}\n        max={10}\n        onChange={setNeedle}\n        value={needle}\n      />\n      <Space className=\"space-container\" align=\"center\">\n        <Button\n          type=\"primary\"\n          onClick={() => onSendGuess({ guess: needle })}\n          size=\"large\"\n          disabled={isLoading}\n        >\n          <Translate pt=\"Enviar\" en=\"Send\" />: {needle < 0 ? currentCategory.left : currentCategory.right} »{' '}\n          {Math.abs(needle)}\n        </Button>\n      </Space>\n\n      <ReadyPlayersBar players={players} />\n    </Step>\n  );\n}\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useLoading, useMock } from 'hooks';\n// Components\nimport { Translate } from 'components/language';\nimport { ReadyPlayersBar } from 'components/players';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Dial } from './components/Dial';\n\ntype StepPsychicGuessProps = {\n  currentCategory: OCurrentCategory;\n  onSendGuess: GenericFunction;\n  players: GamePlayers;\n};\n\nexport function StepPsychicGuess({ currentCategory, onSendGuess, players }: StepPsychicGuessProps) {\n  const { isLoading } = useLoading();\n\n  useMock(() => {\n    onSendGuess({ guess: false });\n    alert('StepPsychicGuess');\n  }, []);\n\n  return (\n    <Step className=\"o-dial-guess-selection\">\n      <Title>\n        <Translate pt=\"Hora de brilhar telepaticamente!\" en=\"Time to shine telepathically!\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt=\"Você como Medium agora pode tentar adivinhar quantas pessoas irão ganhar pontos com sua dica. Lembre-se que ganhar pontos significa acertar o numero ou qualquer um dos dois espaços em cada lado do ponteiro.\"\n          en=\"You as the Psychic can now try to guess how many people will get points with your clue. Remember that players get points by getting the right number or any of the two neighboring numbers on each side.\"\n        />\n      </Instruction>\n      <Space className=\"space-container\" align=\"center\">\n        <Button\n          type=\"primary\"\n          onClick={() => onSendGuess({ guess: false })}\n          size=\"large\"\n          disabled={isLoading}\n        >\n          <Translate pt=\"Menos da metade\" en=\"Less than half\" />\n        </Button>\n        <Button type=\"primary\" onClick={() => onSendGuess({ guess: true })} size=\"large\" disabled={isLoading}>\n          <Translate pt=\"A metade ou mais\" en=\"Half or more\" />\n        </Button>\n      </Space>\n\n      <Dial card={currentCategory} target={currentCategory.target} showTarget />\n\n      <ReadyPlayersBar players={players} />\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useIsUserReady, useLanguage, useStep, useWhichPlayerIsThe } from 'hooks';\nimport { useOnSubmitGuessAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { ViewOr } from 'components/views';\nimport { StepGuess } from './StepGuess';\nimport { StepPsychicGuess } from './StepPsychicGuess';\n\nfunction PhaseGuess({ players, state, info }: PhaseProps) {\n  const isUserReady = useIsUserReady(players, state);\n  const { translate } = useLanguage();\n  const { step, goToNextStep, setStep } = useStep(0);\n  const [, isUserThePsychic] = useWhichPlayerIsThe('psychicId', state, players);\n\n  const onSendGuess = useOnSubmitGuessAPIRequest(setStep);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.ONDA_TELEPATICA.GUESS}>\n      <StepSwitcher step={step} conditions={[!isUserReady, !isUserReady, !isUserReady]} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          type=\"sound-wave\"\n          title={translate('Adivinhação', 'Guessing')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          duration={7}\n        >\n          <Instruction>\n            <Translate pt=\"Você está sincronizado telepaticamente?\" en=\"Are you telepathically in sync?\" />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <ViewOr orCondition={isUserThePsychic}>\n          <StepPsychicGuess\n            currentCategory={state.currentCategory}\n            onSendGuess={onSendGuess}\n            players={players}\n          />\n          <StepGuess currentCategory={state.currentCategory} onSendGuess={onSendGuess} players={players} />\n        </ViewOr>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseGuess;\n","import clsx from 'clsx';\nimport { orderBy } from 'lodash';\n// Components\nimport { Avatar, AvatarName } from 'components/avatars';\nimport { TimedButton } from 'components/buttons';\nimport { Translate } from 'components/language';\nimport { StarPoints } from 'components/points';\nimport { PopoverRule } from 'components/rules';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\n\nimport { Dial } from './components/Dial';\nimport { getGuessResultClass, getPoints } from './utils/helpers';\nimport { ScoringRules } from './components/RulesBlobs';\n\ntype SentenceProps = {\n  currentCategory: OCurrentCategory;\n};\n\nfunction Sentence({ currentCategory }: SentenceProps) {\n  return (\n    <>\n      <Translate pt=\"O resultado para\" en=\"The answer for\" />\n      <span className=\"o-dial-guess-selection__clue\">{currentCategory.clue}</span>{' '}\n      <Translate pt=\"na escala\" en=\"on the scale\" />{' '}\n      <strong>\n        {currentCategory.left}-{currentCategory.right}\n      </strong>\n      :\n    </>\n  );\n}\n\ntype StepRevealProps = {\n  currentCategory: OCurrentCategory;\n  players: GamePlayers;\n  psychic: GamePlayer;\n  goToNextStep: GenericFunction;\n};\n\nexport function StepReveal({ goToNextStep, currentCategory, players, psychic }: StepRevealProps) {\n  const regularPlayers = Object.values(players).filter((p) => p.id !== psychic.id);\n\n  return (\n    <Step fullWidth>\n      <Title level={2} className=\"o-step-reveal-title\">\n        <Sentence currentCategory={currentCategory} />\n      </Title>\n\n      <Dial card={currentCategory} target={currentCategory.target} showTarget animate />\n\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Vocês estão sincronizados? <AvatarName player={psychic} /> acha que{' '}\n              {psychic.guess ? 'sim' : 'não'}\n            </>\n          }\n          en={\n            <>\n              Are you in sync? <AvatarName player={psychic} /> {psychic.guess ? 'does' : \"doesn't\"} think so\n            </>\n          }\n        />\n      </Instruction>\n      <ul className=\"o-player-guesses\">\n        {orderBy(regularPlayers, ['guess', 'name']).map((player) => {\n          return (\n            <li className=\"o-player-guess\" key={player.id}>\n              <span\n                className={clsx(\n                  'o-player-guess__guess',\n                  getGuessResultClass(player.guess, currentCategory.target!)\n                )}\n              >\n                {player.guess < 0 && '«'}\n                {Math.abs(player.guess)}\n                {player.guess > 0 && '»'}\n              </span>\n              <Avatar id={player.avatarId} className=\"o-player-guess__avatar\" />\n              <span className=\"o-player-guess__name\">{player.name}</span>\n              <StarPoints\n                quantity={getPoints(player.guess, currentCategory.target!)}\n                keyPrefix={`${player.id}-points`}\n              />\n            </li>\n          );\n        })}\n      </ul>\n\n      <PopoverRule content={<ScoringRules />} />\n\n      <TimedButton duration={30} onExpire={goToNextStep} onClick={goToNextStep}>\n        <Translate pt=\"Continuar\" en=\"Continue\" />\n      </TimedButton>\n    </Step>\n  );\n}\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\n// State & Hooks\nimport { useIsUserReady, useLanguage, useStep, useWhichPlayerIsThe } from 'hooks';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Step, StepSwitcher } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { PopoverRule } from 'components/rules';\nimport { RankingBoard } from 'components/ranking';\nimport { AdminNextRoundButton } from 'components/admin';\nimport { StepReveal } from './StepReveal';\nimport { ScoringRules } from './components/RulesBlobs';\n\nfunction PhaseReveal({ players, state, info }: PhaseProps) {\n  const isUserReady = useIsUserReady(players, state);\n  const { translate } = useLanguage();\n  const { step, goToNextStep, goToPreviousStep } = useStep(0);\n  const [psychic] = useWhichPlayerIsThe('psychicId', state, players);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.ONDA_TELEPATICA.REVEAL}>\n      <StepSwitcher step={step} conditions={[!isUserReady, !isUserReady, !isUserReady]} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          type=\"wavelength-device\"\n          title={translate('Resultado', 'Results')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          duration={7}\n        >\n          <Instruction>\n            <Translate pt=\"Hora de contar os pontos!\" en=\"Time to score!\" />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepReveal\n          players={players}\n          psychic={psychic}\n          currentCategory={state.currentCategory}\n          goToNextStep={goToNextStep}\n        />\n\n        {/* Step 2 */}\n        <Step fullWidth>\n          <Title>Ranking</Title>\n\n          <PopoverRule\n            label={<Translate pt=\"Como a pontuação funciona?\" en=\"How does scoring work?\" />}\n            content={<ScoringRules />}\n          />\n\n          <RankingBoard ranking={state.ranking} players={players} />\n          <Space className=\"space-container\" align=\"center\">\n            <Button onClick={goToPreviousStep}>\n              <Translate pt=\"Ver resultado novamente\" en=\"See results again\" />\n            </Button>\n          </Space>\n          <AdminNextRoundButton round={state.round} lastRound={state?.lastRound} />\n        </Step>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseReveal;\n","import { Space } from 'antd';\n// Components\nimport { AvatarIcon } from 'components/avatars';\nimport { GameOverWrapper } from 'components/game-over';\nimport { Translate } from 'components/language';\n\nfunction PhaseGameOver({ state, players, info }: PhaseProps) {\n  return (\n    <GameOverWrapper\n      info={info}\n      state={state}\n      announcementIcon=\"trophy\"\n      rateWidgetCustomText={\n        <Translate\n          pt=\"Alguma sugestão de cartas com ideias opostas?\"\n          en=\"Any two-opposing ideas suggestions?\"\n        />\n      }\n    >\n      <Space wrap align=\"center\" className=\"o-past-category\">\n        {state.pastCategories.map((category: any) => {\n          return (\n            <div key={category.id} className=\"o-past-category-entry\">\n              <AvatarIcon type=\"wavelength-device\" size={48} />\n              <header className=\"o-past-category-entry__category\">\n                {category.target < 0 && category.left}\n                {category.target > 0 && category.right}\n                {category.target === 0 && `${category.left}-${category.right}`}\n                <div className=\"o-past-category-entry__number\">{Math.abs(category.target)}</div>\n              </header>\n              <div className=\"o-past-category-entry__clue\">{category.clue}</div>\n              <div className=\"o-past-category-entry__author\">\n                by {players?.[category.psychicId]?.name ?? '?'}\n              </div>\n            </div>\n          );\n        })}\n      </Space>\n    </GameOverWrapper>\n  );\n}\n\nexport default PhaseGameOver;\n","// Constants\nimport { GAME_COLLECTION } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport PhaseDialClue from './PhaseDialClue';\nimport PhaseGuess from './PhaseGuess';\nimport PhaseReveal from './PhaseReveal';\nimport PhaseGameOver from './PhaseGameOver';\n\nfunction SessionOndaTelepatica({ gameId }: SessionProps) {\n  function getActiveComponent(phase: string) {\n    switch (phase) {\n      case PHASES.DEFAULT.LOBBY:\n        return PhaseLobby;\n      case PHASES.DEFAULT.RULES:\n        return PhaseRules;\n      case PHASES.DEFAULT.SETUP:\n        return PhaseSetup;\n      case PHASES.ONDA_TELEPATICA.DIAL_CLUE:\n        return PhaseDialClue;\n      case PHASES.ONDA_TELEPATICA.GUESS:\n        return PhaseGuess;\n      case PHASES.ONDA_TELEPATICA.REVEAL:\n        return PhaseReveal;\n      case PHASES.DEFAULT.GAME_OVER:\n        return PhaseGameOver;\n      default:\n        return PageError;\n    }\n  }\n\n  return (\n    <Session\n      gameId={gameId}\n      gameCollection={GAME_COLLECTION.ONDA_TELEPATICA}\n      getActiveComponent={getActiveComponent}\n    />\n  );\n}\n\nexport default SessionOndaTelepatica;\n","// This icon file is generated automatically.\nvar ArrowLeftOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M872 474H286.9l350.2-304c5.6-4.9 2.2-14-5.2-14h-88.5c-3.9 0-7.6 1.4-10.5 3.9L155 487.8a31.96 31.96 0 000 48.3L535.1 866c1.5 1.3 3.3 2 5.2 2h91.5c7.4 0 10.8-9.2 5.2-14L286.9 550H872c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"arrow-left\", \"theme\": \"outlined\" };\nexport default ArrowLeftOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ArrowLeftOutlinedSvg from \"@ant-design/icons-svg/es/asn/ArrowLeftOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ArrowLeftOutlined = function ArrowLeftOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ArrowLeftOutlinedSvg\n  }));\n};\n\nArrowLeftOutlined.displayName = 'ArrowLeftOutlined';\nexport default /*#__PURE__*/React.forwardRef(ArrowLeftOutlined);","// This icon file is generated automatically.\nvar ArrowRightOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M869 487.8L491.2 159.9c-2.9-2.5-6.6-3.9-10.5-3.9h-88.5c-7.4 0-10.8 9.2-5.2 14l350.2 304H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h585.1L386.9 854c-5.6 4.9-2.2 14 5.2 14h91.5c1.9 0 3.8-.7 5.2-2L869 536.2a32.07 32.07 0 000-48.4z\" } }] }, \"name\": \"arrow-right\", \"theme\": \"outlined\" };\nexport default ArrowRightOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ArrowRightOutlinedSvg from \"@ant-design/icons-svg/es/asn/ArrowRightOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ArrowRightOutlined = function ArrowRightOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ArrowRightOutlinedSvg\n  }));\n};\n\nArrowRightOutlined.displayName = 'ArrowRightOutlined';\nexport default /*#__PURE__*/React.forwardRef(ArrowRightOutlined);","// This icon file is generated automatically.\nvar CrownFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M899.6 276.5L705 396.4 518.4 147.5a8.06 8.06 0 00-12.9 0L319 396.4 124.3 276.5c-5.7-3.5-13.1 1.2-12.2 7.9L188.5 865c1.1 7.9 7.9 14 16 14h615.1c8 0 14.9-6 15.9-14l76.4-580.6c.8-6.7-6.5-11.4-12.3-7.9zM512 734.2c-62.1 0-112.6-50.5-112.6-112.6S449.9 509 512 509s112.6 50.5 112.6 112.6S574.1 734.2 512 734.2zm0-160.9c-26.6 0-48.2 21.6-48.2 48.3 0 26.6 21.6 48.3 48.2 48.3s48.2-21.6 48.2-48.3c0-26.6-21.6-48.3-48.2-48.3z\" } }] }, \"name\": \"crown\", \"theme\": \"filled\" };\nexport default CrownFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CrownFilledSvg from \"@ant-design/icons-svg/es/asn/CrownFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CrownFilled = function CrownFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CrownFilledSvg\n  }));\n};\n\nCrownFilled.displayName = 'CrownFilled';\nexport default /*#__PURE__*/React.forwardRef(CrownFilled);","// This icon file is generated automatically.\nvar MinusOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M872 474H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h720c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"minus\", \"theme\": \"outlined\" };\nexport default MinusOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport MinusOutlinedSvg from \"@ant-design/icons-svg/es/asn/MinusOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar MinusOutlined = function MinusOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: MinusOutlinedSvg\n  }));\n};\n\nMinusOutlined.displayName = 'MinusOutlined';\nexport default /*#__PURE__*/React.forwardRef(MinusOutlined);"],"names":["StarPoints","keyPrefix","quantity","className","hideText","isNegative","num","Math","abs","StarsArray","Array","from","length","_","i","StarFilled","clsx","pt","en","View","children","ViewIf","isVisible","ViewOr","orCondition","ViewSwitch","cases","Error","console","warn","getColorModifier","letter","index","LETTERS","getBracketClass","showNeedle","needle","showTarget","target","baseBracketClass","modifier","getTargetSide","card","language","side","left","right","getGuessResultClass","guess","base","mockHint","Card","setNeedle","leftColor","rightColor","cardSideClass","isButton","Boolean","onSetNeedle","direction","n","min","max","onClick","ArrowLeftOutlined","MinusOutlined","ArrowRightOutlined","Dial","animate","baseClass","basePointsClass","value","xmlns","viewBox","overflow","d","fill","id","style","transform","RulesPt","RulesEn","ClueWritingRules","content","ScoringRules","contained","StepClueWriting","currentCategories","currentCategoryId","onSendClue","useLanguage","translate","isLoading","useLoading","useState","clue","setClue","onSubmitClue","find","c","useMock","fullWidth","align","onChange","e","onPressEnter","placeholder","type","disabled","StepClueWaiting","players","psychic","title","instruction","player","StepCategorySelection","onSendChosenSide","categoryId","size","map","state","info","isUserReady","useIsUserReady","useStep","step","goToNextStep","useWhichPlayerIsThe","isUserThePsychic","request","useAPICall","apiFunction","ONDA_TELEPATICA_API","actionName","successMessage","errorMessage","payload","action","useOnSubmitCategoryAPIRequest","useOnSubmitClueAPIRequest","phase","allowedPhase","PHASES","conditions","round","buttonText","onPressButton","time","circleColor","onClose","currentRound","current","duration","addressUser","order","gameOrder","activePlayerId","psychicId","Prompt","currentCategory","StepGuess","onSendGuess","getRandomItem","alert","width","defaultValue","StepPsychicGuess","setStep","onBeforeCall","onError","useOnSubmitGuessAPIRequest","Sentence","StepReveal","regularPlayers","Object","values","filter","p","level","orderBy","avatarId","name","onExpire","goToPreviousStep","label","ranking","lastRound","announcementIcon","rateWidgetCustomText","wrap","pastCategories","category","gameId","gameCollection","GAME_COLLECTION","getActiveComponent","PhaseLobby","PhaseRules","PhaseSetup","PhaseDialClue","PhaseGuess","PhaseReveal","PhaseGameOver","PageError","props","ref","React","AntdIcon","_objectSpread","icon","ArrowLeftOutlinedSvg","displayName","ArrowRightOutlinedSvg","CrownFilled","CrownFilledSvg","MinusOutlinedSvg"],"sourceRoot":""}