{"version":3,"file":"static/js/9180.97d32c68.chunk.js","mappings":"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","sources":["components/ribbons/Ribbon.tsx","components/ribbons/PlayerRibbon.tsx","components/ribbons/RibbonGroup.tsx","components/slide-show/SlideShowControls.tsx","components/slide-show/SlideShow.tsx","components/slide-show/SlideShowComposableComponents.tsx","hooks/useSlideShow.ts","hooks/useVotingMatch.ts","icons/EvaluateIcon.tsx","icons/TrophyIcon.tsx"],"sourcesContent":["import clsx from 'clsx';\n// Utils\nimport { getAnimationClass, getColorFromLetter } from 'utils/helpers';\n\ntype RibbonProps = {\n  label: string;\n  position?: 'absolute' | 'static';\n};\n\nexport function Ribbon({ label, position = 'absolute' }: RibbonProps) {\n  return (\n    <div className={clsx('ribbon', `ribbon--${position}`)}>\n      <div\n        className={clsx(\n          'ribbon__content',\n          `ribbon__content--${label}`,\n          `color-background--${getColorFromLetter(label)}`,\n          getAnimationClass('bounceIn'),\n        )}\n      >\n        {label}\n      </div>\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Tooltip } from 'antd';\n// Types\nimport type { GamePlayer } from 'types/player';\n// Utils\nimport { getAnimationClass, getAvatarColorById } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\n\ntype RibbonProps = {\n  player: GamePlayer;\n  position?: 'absolute' | 'static';\n};\n\nexport function PlayerRibbon({ player, position = 'absolute' }: RibbonProps) {\n  return (\n    <div className={clsx('ribbon', `ribbon--${position}`)}>\n      <div\n        className={clsx('ribbon__content', getAnimationClass('bounceIn'))}\n        style={{ backgroundColor: getAvatarColorById(player.avatarId) }}\n      >\n        <Tooltip title={player.name}>\n          <Avatar id={player.avatarId} size=\"small\" />\n        </Tooltip>\n      </div>\n    </div>\n  );\n}\n","// Types\nimport type { GamePlayer } from 'types/player';\n// Internal\nimport { PlayerRibbon } from './PlayerRibbon';\nimport { Ribbon } from './Ribbon';\n\ntype RibbonGroupProps = {\n  labels: string[] | GamePlayer[];\n};\n\nexport function RibbonGroup({ labels }: RibbonGroupProps) {\n  return (\n    <div className=\"ribbon-group ribbon--absolute\">\n      {labels.length > 0 &&\n        labels.map((label) =>\n          typeof labels[0] === 'string' ? (\n            <Ribbon\n              key={label as string}\n              label={label.length > 0 ? label.charAt(label.length - 1) : label}\n              position=\"static\"\n            />\n          ) : (\n            <PlayerRibbon key={String(label)} player={label as GamePlayer} position=\"static\" />\n          ),\n        )}\n    </div>\n  );\n}\n","import { useEffect, useMemo } from 'react';\n// Ant Design Resources\nimport {\n  PauseOutlined,\n  PlayCircleOutlined,\n  StepBackwardOutlined,\n  StepForwardOutlined,\n  TrophyOutlined,\n} from '@ant-design/icons';\nimport { Button, type ButtonProps, Space } from 'antd';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\nimport type { SlideShowConfig } from 'hooks/useSlideShow';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { Translate } from 'components/language';\n\ntype SlideShowControlsProps = {\n  /**\n   * Slide show configuration provided by useSlideShow\n   */\n  config: SlideShowConfig;\n  /**\n   * The color of the progress bar (default: gray)\n   */\n  barColor: string;\n  /**\n   * Prop indicating if the controls should be disabled\n   */\n  disableControls?: boolean;\n  /**\n   * Next Button props (See Ranking Button)\n   */\n  nextButtonProps?: ButtonProps;\n};\n\nexport function SlideShowControls({\n  config,\n  disableControls,\n  barColor = 'gray',\n  nextButtonProps,\n}: SlideShowControlsProps) {\n  const slideDuration = config.slideDuration ?? 10;\n  const totalDuration = slideDuration * config.length;\n  const { timeLeft, isRunning, pause, resume } = useCountdown({\n    duration: totalDuration,\n    autoStart: true,\n    onExpire: () => config.onExpire(),\n  });\n  const disableControlsFlag = disableControls ?? config.isFirstGalleryRunThrough;\n\n  // Automatically go to the next window every {windowDuration} seconds\n  // biome-ignore lint/correctness/useExhaustiveDependencies: isRunning shouldn't retrigger the effect\n  useEffect(() => {\n    const expectedSlideIndex = Math.max(\n      0,\n      Math.min(config.length - 1, Math.floor((totalDuration - timeLeft) / slideDuration)),\n    );\n    if (isRunning && timeLeft < totalDuration && timeLeft > 0 && expectedSlideIndex !== config.slideIndex) {\n      config.setSlideIndex(expectedSlideIndex);\n    }\n    return () => {};\n  }, [timeLeft, config, slideDuration, totalDuration]);\n\n  const goToPreviousSlide = () => {\n    pause();\n    config.setSlideIndex((s: number) => Math.max(s - 1, 0));\n  };\n\n  const goToNextSlide = () => {\n    pause();\n    config.setSlideIndex((s: number) => Math.min(s + 1, config.length - 1));\n  };\n\n  const slots = useMemo(() => {\n    return Array(config.length)\n      .fill('')\n      .map((e, i) => {\n        return (\n          <div\n            key={`control-timer-bar-${e + i}`}\n            className=\"slide-show__controls-timer-bar-node\"\n            style={{ width: `${99 / config.length}%` }}\n          >\n            {e}\n          </div>\n        );\n      });\n  }, [config.length]);\n\n  return (\n    <div className=\"slide-show__controls\">\n      <div className=\"slide-show__controls-timer-bar\">\n        <div className=\"slide-show__controls-timer-bar-base\">{slots}</div>\n        <span\n          className=\"slide-show__controls-timer-bar-pill\"\n          style={{\n            width: `${calculateProgress(totalDuration, timeLeft)}%`,\n            backgroundColor: barColor,\n          }}\n        ></span>\n      </div>\n\n      <Space style={{ opacity: disableControlsFlag ? 0 : 100 }} className={getAnimationClass('fadeIn')}>\n        <Button\n          size=\"large\"\n          icon={<StepBackwardOutlined />}\n          onClick={goToPreviousSlide}\n          disabled={disableControlsFlag || config.slideIndex === 0}\n        >\n          <Translate pt=\"Anterior\" en=\"Previous\" />\n        </Button>\n        <Button\n          size=\"large\"\n          icon={isRunning ? <PauseOutlined /> : <PlayCircleOutlined />}\n          onClick={isRunning ? pause : resume}\n        />\n        <Button\n          size=\"large\"\n          onClick={goToNextSlide}\n          disabled={disableControlsFlag || config.slideIndex === config.length - 1}\n        >\n          <Translate pt=\"Próximo\" en=\"Next\" /> <StepForwardOutlined />\n        </Button>\n        <Button\n          {...nextButtonProps}\n          size=\"large\"\n          onClick={() => config.onExpire()}\n          icon={nextButtonProps?.icon ?? <TrophyOutlined />}\n          disabled={disableControlsFlag}\n        >\n          {nextButtonProps?.children ?? <Translate pt=\"Ver Ranking\" en=\"See Ranking\" />}\n        </Button>\n      </Space>\n    </div>\n  );\n}\n\nfunction calculateProgress(totalDuration: number, timeLeft: number): number {\n  if (totalDuration === 0) return 100; // Handle case to avoid division by zero\n  return (1 - timeLeft / totalDuration) * 100;\n}\n","import clsx from 'clsx';\nimport type { ReactNode } from 'react';\n// Ant Design Resources\nimport type { ButtonProps } from 'antd';\n// Hooks\nimport type { SlideShowConfig } from 'hooks/useSlideShow';\n// Internal\nimport { SlideShowControls } from './SlideShowControls';\n\ntype SlideShowProps = {\n  /**\n   * Slide show configuration provided by useSlideShow\n   */\n  config: SlideShowConfig;\n  /**\n   * The left and right active pages of the slide\n   */\n  children: [ReactNode, ReactNode];\n  /**\n   * The color of the progress bar (default: gray)\n   */\n  barColor: string;\n  /**\n   * Prop indicating if the controls should be disabled\n   */\n  disableControls?: boolean;\n  /**\n   * Optional class name for the wrapper\n   */\n  className?: string;\n  /**\n   * Optional class name for the left page\n   */\n  leftClassName?: string;\n  /**\n   * Optional class name for the right page\n   */\n  rightClassName?: string;\n  /**\n   * Next Button props (See Ranking Button)\n   */\n  nextButtonProps?: ButtonProps;\n};\n\n/**\n * Display Slick show with a left and right sides with full navigation controls\n * @param props\n * @returns\n */\nexport function SlideShow({\n  children,\n  disableControls,\n  barColor,\n  className = '',\n  leftClassName = '',\n  rightClassName = '',\n  nextButtonProps,\n  config,\n}: SlideShowProps) {\n  return (\n    <div className={clsx('slide-show', className)}>\n      <div className={clsx('slide-show__left', leftClassName)} id=\"gallery-left\">\n        {children[0]}\n      </div>\n      <div className={clsx('slide-show__right', rightClassName)} id=\"gallery-right\">\n        {children[1]}\n      </div>\n      <SlideShowControls\n        config={config}\n        disableControls={disableControls}\n        barColor={barColor}\n        nextButtonProps={nextButtonProps}\n      />\n    </div>\n  );\n}\n","import type { TextProps } from 'antd/es/typography/Text';\nimport clsx from 'clsx';\nimport { type ReactNode, useMemo } from 'react';\n// Ant Design Resources\nimport { CrownFilled, MessageFilled } from '@ant-design/icons';\nimport { Avatar as AntAvatar, Typography } from 'antd';\n// Types\nimport type { GamePlayers } from 'types/player';\n// Utils\nimport { getContrastColor, getPlayerNamesFromIds } from 'utils/helpers';\n// Icons\nimport { GarbageIcon } from 'icons/GarbageIcon';\n// Components\nimport { Avatar, IconAvatar } from 'components/avatars';\nimport { Translate } from 'components/language';\n\n/**\n * A functional component that renders a label for the slide show.\n */\nexport function SlideShowLabel({ children, className, ...props }: ElementPropsWithChildren) {\n  return (\n    <div className={clsx('slide-show-composable__label', className)} {...props}>\n      {children}\n    </div>\n  );\n}\n\ntype SlideShowBubbleProps = {\n  /**\n   * If true, the bubble will display a crown icon.\n   */\n  winner?: boolean;\n  /**\n   * The background color of the bubble.\n   */\n  backgroundColor?: string;\n  /**\n   * Extra content to be displayed on the right\n   */\n  extra?: ReactNode;\n} & ElementPropsWithChildren;\n\n/**\n * A component that displays a bubble value in a slide show.\n * It conditionally renders a crown icon if the `winner` prop is true,\n * otherwise, it renders a message icon.\n */\nexport function SlideShowBubbleValue({\n  children,\n  winner,\n  backgroundColor,\n  className,\n  extra,\n  ...props\n}: SlideShowBubbleProps) {\n  return (\n    <div\n      className={clsx('slide-show-composable__bubble-value', className)}\n      style={winner && backgroundColor ? { backgroundColor, color: getContrastColor(backgroundColor) } : {}}\n      {...props}\n    >\n      {winner ? (\n        <CrownFilled\n          className=\"slide-show-composable__bubble-icon\"\n          style={backgroundColor ? { color: getContrastColor(backgroundColor) } : {}}\n        />\n      ) : (\n        <MessageFilled className=\"slide-show-composable__bubble-icon\" />\n      )}\n\n      <span>{children}</span>\n\n      <span>{extra}</span>\n    </div>\n  );\n}\n\ntype SlideShowPlayersListProps = {\n  /**\n   * The player objects.\n   */\n  players: GamePlayers;\n  /**\n   * The player IDs to be displayed.\n   */\n  playersIds: PlayerId[];\n} & ElementProps;\n\n/**\n * SlideShowPlayersList component displays a list of player avatars and their names.\n */\nexport function SlideShowPlayersList({\n  players,\n  playersIds,\n  className,\n  children,\n  ...props\n}: SlideShowPlayersListProps) {\n  const selectedPlayersNames = useMemo(\n    () => getPlayerNamesFromIds(playersIds, players).join(', '),\n    [playersIds, players],\n  );\n\n  return (\n    <div className={clsx('slide-show-composable__players', className)} {...props}>\n      <AntAvatar.Group>\n        {playersIds.map((playerId) => (\n          <Avatar id={players[playerId].avatarId} key={`slide-show-player-${playerId}`} />\n        ))}\n      </AntAvatar.Group>\n      {children}\n      <span className=\"slide-show-composable__players-names\">{selectedPlayersNames}</span>\n    </div>\n  );\n}\n\ntype SlideShowNoWinsProps = TextProps & {\n  /**\n   * Custom icon to replace the garbage icon.\n   */\n  icon?: ReactNode;\n};\n\n/**\n * SlideShowNoWins displays a message indicating that no one won in the slide show.\n */\nexport function SlideShowNoWins({ children, icon, className, ...props }: SlideShowNoWinsProps) {\n  return (\n    <Typography.Text className={clsx('slide-show-composable__no-wins', className)} {...props}>\n      <IconAvatar icon={icon ?? <GarbageIcon />} size=\"large\" shape=\"square\" />\n      <div>\n        <Translate pt=\"Nossa, ninguém acertou.\" en=\"Wow, nobody got it.\" />\n        <br />\n        {children}\n      </div>\n    </Typography.Text>\n  );\n}\n","import { useEffect, useState } from 'react';\n\nexport type SlideShowConfig = {\n  /**\n   * The total number of slides\n   */\n  length: number;\n  /**\n   * The duration of each slide\n   */\n  slideDuration?: number;\n  /**\n   * The index of the current slide\n   * @default 0\n   **/\n  slideIndex: number;\n  /**\n   * Set the index of the current slide\n   */\n  setSlideIndex: React.Dispatch<React.SetStateAction<number>>;\n  /**\n   * Flag to indicate if this is the first run through of the gallery\n   */\n  isFirstGalleryRunThrough: boolean;\n  /**\n   * Set the flag to indicate if this is the first run through of the gallery\n   */\n  setIsFirstGalleryRunThrough: React.Dispatch<React.SetStateAction<boolean>>;\n  /**\n   * Callback function to execute when the slide show expires\n   */\n  onExpire: () => void;\n  /**\n   * Reset the slide show to the first slide\n   */\n  reset: () => void;\n};\n\n/**\n * Controls slide show\n * @param length\n */\nexport function useSlideShow(options: {\n  length: number;\n  slideDuration: number;\n  onExpire: () => void;\n}): SlideShowConfig {\n  const [slideIndex, setSlideIndex] = useState(0);\n  const [isFirstGalleryRunThrough, setIsFirstGalleryRunThrough] = useState(true);\n\n  useEffect(() => {\n    if (isFirstGalleryRunThrough && slideIndex === options.length - 1) {\n      setIsFirstGalleryRunThrough(false);\n    }\n  }, [isFirstGalleryRunThrough, slideIndex, options.length]);\n\n  return {\n    ...options,\n    slideIndex,\n    setSlideIndex,\n    reset: () => setSlideIndex(0),\n    isFirstGalleryRunThrough,\n    setIsFirstGalleryRunThrough,\n  };\n}\n","import { useCallback, useEffect, useState } from 'react';\n// Utils\nimport { SEPARATOR } from 'utils/constants';\n\n/**\n * Delete duplicated votes on the 'value' side of the votes object\n * @param votes\n * @param target\n */\nconst deleteDuplicate = (votes: PlainObject, target: string) => {\n  const votesArray = Object.entries(votes);\n  const duplicateIndex = votesArray.findIndex((el) => el[1] === target);\n  if (duplicateIndex > -1) {\n    const duplicateKey = votesArray[duplicateIndex][0];\n    delete votes[duplicateKey];\n  }\n};\n\n/**\n * Keeps track of an object with votes following the schema:\n * {<typeSEPARATORid...>: <typeSEPARATORid...>\n * @param keyType the type of the entry that will work as the key of the voting object\n * @param uniqueOnly Indicates if it is allow to voting duplicates\n * @param completeCount\n * @returns\n */\nexport function useVotingMatch(\n  keyType: string,\n  allowDuplicates = true,\n  completeCount?: number,\n  initialState: StringDictionary = {},\n) {\n  const [votes, setVotes] = useState<StringDictionary>({\n    ...initialState,\n  });\n  const [activeItem, setActiveItem] = useState<string>('');\n  const [isVotingComplete, setIsVotingComplete] = useState<boolean>(false);\n\n  const activateItem = useCallback(\n    (entryId: string) => {\n      // When new Item is already the active item, deselect it\n      if (entryId === activeItem) {\n        return setActiveItem('');\n      }\n\n      const [type] = entryId.split(SEPARATOR);\n\n      // When no active item or type of new item is the same as active item, set it\n      if (!activeItem || activeItem.startsWith(type)) {\n        return setActiveItem(entryId);\n      }\n\n      // When new item type is a key\n      if (type === keyType) {\n        setVotes((prevVotes: StringDictionary) => {\n          const copy = { ...prevVotes };\n          // Find and clear any previous vote if uniqueOnly\n          if (!allowDuplicates) {\n            deleteDuplicate(copy, activeItem);\n          }\n\n          return {\n            ...copy,\n            [entryId]: activeItem,\n          };\n        });\n        return setActiveItem('');\n      }\n\n      // When new item is a value\n      setVotes((prevVotes: StringDictionary) => {\n        const copy = { ...prevVotes };\n        // Find and clear any previous vote if uniqueOnly\n        if (!allowDuplicates) {\n          deleteDuplicate(copy, entryId);\n        }\n\n        return {\n          ...copy,\n          [activeItem]: entryId,\n        };\n      });\n\n      return setActiveItem('');\n    },\n    [activeItem, keyType, allowDuplicates],\n  );\n\n  const resetVoting = (newInitialState: StringDictionary) => {\n    setVotes(newInitialState ?? initialState);\n    setActiveItem('');\n  };\n\n  const isItemActive = (item: string) => activeItem === item;\n\n  const getEntryId = (arr: string[]): string => arr.join(SEPARATOR);\n\n  useEffect(() => {\n    if (completeCount) {\n      setIsVotingComplete(Object.keys(votes).length === completeCount);\n    }\n  }, [completeCount, votes]);\n\n  return {\n    votes,\n    setVotes,\n    activeItem,\n    activateItem,\n    isVotingComplete,\n    resetVoting,\n    getEntryId,\n    isItemActive,\n  };\n}\n","export function EvaluateIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffd15b\"\n        d=\"M347.757 451.78a5 5 0 01-5-5V312.308a45.2 45.2 0 01-26.675 8.668H311v39.209c0 3.854-4.176 6.259-7.509 4.325l-44.981-26.101a5.002 5.002 0 00-5.019 0L208.51 364.51c-3.333 1.934-7.509-.471-7.509-4.325v-39.209h-5.082a45.2 45.2 0 01-26.675-8.668V446.78a5 5 0 01-5 5H123v33.744a5 5 0 005 5h256a5 5 0 005-5V451.78z\"\n      ></path>\n      <path fill=\"#fdb441\" d=\"M163 485.524V451.78h-40v33.744a5 5 0 005 5h40a5 5 0 01-5-5z\"></path>\n      <path\n        fill=\"#fff\"\n        d=\"M258.509 338.408a5.002 5.002 0 00-5.019 0l-19.573 11.357 17.388 47.411c1.603 4.371 7.785 4.371 9.388 0l17.388-47.411z\"\n      ></path>\n      <path\n        fill=\"#fe7701\"\n        d=\"M284.625 33.636c-9.799-7.614-22.101-12.16-35.471-12.16h-21.779c-42.457 0-76.875 34.418-76.875 76.875v161.385h13.743a5 5 0 015 5v47.572a45.2 45.2 0 0026.675 8.668H201v-33.342c0-1.662.826-3.215 2.203-4.145l21.911-14.786a70.13 70.13 0 0024.783 4.505h12.206a70.157 70.157 0 0024.783-4.505l21.911 14.786a5.002 5.002 0 012.203 4.145v33.342h5.082a45.2 45.2 0 0026.675-8.668v-47.572a5 5 0 015-5H361.5V110.511c0-42.457-34.418-76.875-76.875-76.875z\"\n      ></path>\n      <path\n        fill=\"#f46700\"\n        d=\"M159.825 156.976h19.757c0 .048-.007.095-.007.143 0-11.191 8.518-20.39 19.425-21.473V98.351c0-37.572 26.96-68.828 62.586-75.528a57.922 57.922 0 00-12.432-1.347h-21.779c-42.457 0-76.875 34.418-76.875 76.875v60.182a28.666 28.666 0 019.325-1.557zM201 288.917a45.404 45.404 0 01-2-13.358v-24.176c-7.365-7.727-13.002-17.114-16.255-27.56h-22.92c-3.266 0-6.4-.553-9.325-1.557v37.471h13.743a5 5 0 015 5v47.572a45.2 45.2 0 0026.675 8.668H201z\"\n      ></path>\n      <path\n        fill=\"#eaf6ff\"\n        d=\"M308.797 283.489l-21.911-14.786a70.13 70.13 0 01-24.783 4.505h-12.206a70.157 70.157 0 01-24.783-4.505l-21.911 14.786a5 5 0 00-2.203 4.145v72.551c0 3.854 4.176 6.259 7.509 4.325l44.981-26.101c1.552-.9 3.467-.9 5.019 0l44.981 26.101c3.333 1.934 7.509-.471 7.509-4.325v-72.551a4.999 4.999 0 00-2.202-4.145z\"\n      ></path>\n      <path\n        fill=\"#d8ecfe\"\n        d=\"M225.114 268.703l-21.911 14.786a5 5 0 00-2.203 4.145v72.551c0 3.854 4.176 6.259 7.509 4.325L226 354.36v-66.727c0-1.662.826-3.215 2.203-4.145l15.644-10.557a69.91 69.91 0 01-18.733-4.228z\"\n      ></path>\n      <path\n        fill=\"#fed2a4\"\n        d=\"M262.103 273.208h-12.206a70.193 70.193 0 01-22.87-3.824v36.592L256 336.952l28.973-30.976v-36.592a70.193 70.193 0 01-22.87 3.824z\"\n      ></path>\n      <path\n        fill=\"#ffbd86\"\n        d=\"M252.054 273.208h-2.157a70.193 70.193 0 01-22.87-3.824v36.592L256 336.952l16.296-17.422-20.242-21.641z\"\n      ></path>\n      <path\n        fill=\"#ffe5c2\"\n        d=\"M179.575 202.886v-45.768c0-.048.007-.095.007-.143h-19.757c-15.856 0-28.71 12.854-28.71 28.71v9.425c0 15.856 12.854 28.71 28.71 28.71h22.92a70.261 70.261 0 01-3.17-20.934zm172.6-45.91h-19.75v45.911c0 7.291-1.11 14.322-3.17 20.935h22.92c15.856 0 28.71-12.854 28.71-28.71v-9.425c0-15.857-12.854-28.711-28.71-28.711z\"\n      ></path>\n      <path\n        fill=\"#ffe5c2\"\n        d=\"M295.681 112.592c7.497-5.43 17.747-5.644 25.168-.11 7.026 5.24 11.576 13.616 11.576 23.054v67.35c0 38.837-31.484 70.321-70.321 70.321h-12.206c-38.837 0-70.321-31.484-70.321-70.321v-45.768c0-11.92 9.663-21.582 21.582-21.582h55.848c4.547 0 8.977-1.436 12.659-4.103z\"\n      ></path>\n      <path\n        fill=\"#fed2a4\"\n        d=\"M213.151 202.886v-45.768c0-11.92 9.663-21.582 21.582-21.582h-33.575c-11.92 0-21.582 9.663-21.582 21.582v45.768c0 38.837 31.484 70.322 70.321 70.322h12.206a70.9 70.9 0 0010.685-.807c-33.767-5.148-59.637-34.31-59.637-69.515z\"\n      ></path>\n      <path\n        fill=\"#fff\"\n        d=\"M229.269 216.388c-2.863 0-5.061 2.595-4.535 5.41 2.537 13.558 14.435 23.819 28.729 23.819h5.073c14.294 0 26.192-10.261 28.729-23.819.527-2.814-1.672-5.41-4.535-5.41z\"\n      ></path>\n      <path\n        fill=\"#d8ecfe\"\n        d=\"M164.243 259.736h-139a5 5 0 00-5 5v142.633h21.746c6.349 0 11.496 5.147 11.496 11.496v32.915h110.757a5 5 0 005-5V264.736a4.998 4.998 0 00-4.999-5z\"\n      ></path>\n      <path\n        fill=\"#c4e2ff\"\n        d=\"M61 446.78V264.736a5 5 0 015-5H25.243a5 5 0 00-5 5v142.633h21.746c6.349 0 11.496 5.147 11.496 11.496v32.915H66a5 5 0 01-5-5z\"\n      ></path>\n      <path\n        fill=\"#ffe5c2\"\n        d=\"M41.989 466H18.996C12.647 466 7.5 460.853 7.5 454.504v-35.638c0-6.349 5.147-11.496 11.496-11.496h22.993c6.349 0 11.496 5.147 11.496 11.496v35.638c0 6.349-5.147 11.496-11.496 11.496z\"\n      ></path>\n      <path\n        fill=\"#fed2a4\"\n        d=\"M31 454.504v-35.638c0-6.264 5.012-11.347 11.243-11.483-.085-.002-.168-.013-.254-.013H18.996c-6.349 0-11.496 5.147-11.496 11.496v35.638C7.5 460.853 12.647 466 18.996 466h22.993c.086 0 .169-.011.254-.013-6.231-.136-11.243-5.22-11.243-11.483z\"\n      ></path>\n      <path\n        fill=\"#0593fc\"\n        d=\"M458.515 418.865c0-6.349 5.147-11.496 11.496-11.496h21.746V264.736a5 5 0 00-5-5h-139a5 5 0 00-5 5V446.78a5 5 0 005 5h110.757v-32.915z\"\n      ></path>\n      <path\n        fill=\"#0182fc\"\n        d=\"M387 446.78V264.736a5 5 0 015-5h-44.243a5 5 0 00-5 5V446.78a5 5 0 005 5H392a5 5 0 01-5-5z\"\n      ></path>\n      <path\n        fill=\"#fb2b3a\"\n        d=\"M443.43 327.481a22.016 22.016 0 01-5.773 10.118c-5.428 5.428-12.972 7.446-19.976 6.06a22.15 22.15 0 01-.409-3.726.133.133 0 00-.014.019c-5.912-8.361-14.482-13.458-23.443-12.84-14.999 1.035-25.405 17.686-23.241 37.191s16.076 34.477 31.076 33.442h31.217c14.999 1.035 28.912-13.938 31.076-33.442 2.028-18.298-7.004-34.083-20.513-36.822z\"\n      ></path>\n      <path\n        fill=\"#e41f2d\"\n        d=\"M404.348 364.302c-1.324-11.934 2.064-22.793 8.324-29.667-5.382-5.118-12.003-7.997-18.857-7.524-14.999 1.035-25.405 17.686-23.241 37.191s16.076 34.477 31.076 33.442h30.879c-13.856-.924-26.158-15.199-28.181-33.442z\"\n      ></path>\n      <ellipse\n        cx=\"430.699\"\n        cy=\"330.641\"\n        fill=\"#97d729\"\n        rx=\"18.41\"\n        ry=\"9.841\"\n        transform=\"rotate(-45 430.671 330.745)\"\n      ></ellipse>\n      <path\n        fill=\"#ffe5c2\"\n        d=\"M493.004 466h-22.993c-6.349 0-11.496-5.147-11.496-11.496v-35.638c0-6.349 5.147-11.496 11.496-11.496h22.993c6.349 0 11.496 5.147 11.496 11.496v35.638c0 6.349-5.147 11.496-11.496 11.496z\"\n      ></path>\n      <path\n        fill=\"#fed2a4\"\n        d=\"M482.015 454.504v-35.638c0-6.264 5.012-11.347 11.243-11.483-.085-.002-.168-.013-.254-.013h-22.993c-6.349 0-11.496 5.147-11.496 11.496v35.638c0 6.349 5.147 11.496 11.496 11.496h22.993c.086 0 .169-.011.254-.013-6.231-.136-11.243-5.22-11.243-11.483z\"\n      ></path>\n      <g>\n        <path d=\"M282.731 208.889h-53.462a12.09 12.09 0 00-9.329 4.382 12.009 12.009 0 00-2.578 9.907c3.247 17.348 18.429 29.939 36.101 29.939h5.073c17.672 0 32.854-12.592 36.101-29.939a12.008 12.008 0 00-2.578-9.907 12.083 12.083 0 00-9.328-4.382zm-24.194 29.228h-5.073c-9.235 0-17.32-5.806-20.405-14.229h45.883c-3.085 8.423-11.171 14.229-20.405 14.229zm-31.845-64.496v-18.924c0-4.143-3.358-7.5-7.5-7.5s-7.5 3.357-7.5 7.5v18.924c0 4.143 3.358 7.5 7.5 7.5s7.5-3.357 7.5-7.5zm66.116-26.424a7.5 7.5 0 00-7.5 7.5v18.924c0 4.143 3.358 7.5 7.5 7.5s7.5-3.357 7.5-7.5v-18.924a7.5 7.5 0 00-7.5-7.5zm-42.413 48.22a7.479 7.479 0 005.608 2.518 7.468 7.468 0 004.98-1.895 7.5 7.5 0 00.623-10.588l-6.313-7.104 6.564-8.205a7.501 7.501 0 00-11.713-9.371l-10.517 13.146a7.5 7.5 0 00.251 9.668zM94.743 309.014a7.5 7.5 0 00-6.866 4.482l-34.5 78.488a7.5 7.5 0 1013.732 6.035l8.14-18.518h38.989l8.14 18.518a7.5 7.5 0 1013.732-6.036l-34.5-78.488a7.502 7.502 0 00-6.867-4.481zm12.901 55.488H81.842l12.901-29.35zm343.982-42.095a29.787 29.787 0 00-.552-6.241 7.5 7.5 0 00-5.901-5.9 29.635 29.635 0 00-20.423 3.314 7.496 7.496 0 00-7.493-7.359 7.5 7.5 0 00-7.5 7.5v9.61c-5.187-2.775-10.828-4.093-16.459-3.7-7.996.552-15.432 4.485-20.936 11.077-7.327 8.775-10.696 21.321-9.243 34.423 2.508 22.614 18.928 40.166 37.104 40.164.552 0 1.108-.016 1.664-.049h30.74c.557.033 1.11.049 1.664.049 18.174 0 34.596-17.551 37.104-40.164 1.454-13.102-1.916-25.647-9.243-34.422-3.006-3.602-6.59-6.407-10.526-8.302zm-22.582 6.579a14.605 14.605 0 017.271-3.961c-.583 2.715-1.937 5.246-3.961 7.271s-4.555 3.378-7.271 3.961a14.625 14.625 0 013.961-7.271zm27.443 34.49c-1.645 14.825-11.667 26.821-22.163 26.819-.313 0-.628-.011-.942-.032a7.419 7.419 0 00-.517-.018h-31.216a7.39 7.39 0 00-.516.018c-10.854.739-21.412-11.52-23.105-26.787-.99-8.927 1.196-17.583 5.848-23.153 2.023-2.424 5.48-5.385 10.456-5.728.305-.021.61-.032.917-.032 5.173 0 10.519 2.989 14.716 8.185.091.79.203 1.58.359 2.368a7.5 7.5 0 005.901 5.901c1.929.382 3.868.568 5.792.568a29.586 29.586 0 0020.944-8.682 29.666 29.666 0 004.417-5.643 18.046 18.046 0 013.262 3.062c4.651 5.572 6.838 14.227 5.847 23.154z\"></path>\n        <path d=\"M499.257 400.948V321c0-4.143-3.358-7.5-7.5-7.5s-7.5 3.357-7.5 7.5v78.869h-14.246c-10.475 0-18.997 8.521-18.997 18.996v25.415H350.257V267.235h134V286c0 4.143 3.358 7.5 7.5 7.5s7.5-3.357 7.5-7.5v-21.265c0-6.893-5.607-12.5-12.5-12.5H369V227.16c11.514-6.069 19.385-18.154 19.385-32.049v-9.425c0-13.895-7.871-25.98-19.385-32.05V110.51c0-45.676-36.48-82.99-81.835-84.337-11.135-7.989-24.223-12.198-38.011-12.198h-21.779C180.851 13.976 143 51.826 143 98.351v55.286c-11.514 6.069-19.385 18.155-19.385 32.05v9.425c0 13.895 7.871 25.979 19.385 32.049v25.075h-12c-4.142 0-7.5 3.357-7.5 7.5s3.358 7.5 7.5 7.5h30.743V444.28H60.985v-25.415c0-10.475-8.522-18.996-18.997-18.996H27.743V267.235H96c4.142 0 7.5-3.357 7.5-7.5s-3.358-7.5-7.5-7.5H25.243c-6.893 0-12.5 5.607-12.5 12.5v136.213C5.336 403.542 0 410.584 0 418.865v35.639C0 464.979 8.521 473.5 18.996 473.5h22.993c8.822 0 16.238-6.054 18.364-14.22H115.5v26.244c0 6.893 5.607 12.5 12.5 12.5h173c4.142 0 7.5-3.357 7.5-7.5s-3.358-7.5-7.5-7.5H130.5V459.28h33.743c6.893 0 12.5-5.607 12.5-12.5V324.867a52.467 52.467 0 0016.757 3.547v31.771c0 4.457 2.399 8.607 6.262 10.832a12.537 12.537 0 0012.512-.02l17.68-10.26 14.311 39.02c1.826 4.979 6.432 8.197 11.736 8.197s9.91-3.218 11.736-8.197l14.311-39.021 17.68 10.26a12.495 12.495 0 006.272 1.683c2.157 0 4.313-.555 6.239-1.663a12.535 12.535 0 006.262-10.832v-31.771a52.461 52.461 0 0016.757-3.547V446.78c0 6.893 5.607 12.5 12.5 12.5H381.5v23.744H336c-4.142 0-7.5 3.357-7.5 7.5s3.358 7.5 7.5 7.5h48c6.893 0 12.5-5.607 12.5-12.5V459.28h55.147c2.127 8.166 9.542 14.22 18.364 14.22h22.993c10.475 0 18.996-8.521 18.996-18.996v-35.639c0-8.281-5.336-15.323-12.743-17.917zM45.985 454.504a4.001 4.001 0 01-3.997 3.996H18.996A4 4 0 0115 454.504v-35.639a4 4 0 013.996-3.996h22.993a4.001 4.001 0 013.997 3.996v35.639zm327.4-259.393c0 11.695-9.515 21.21-21.21 21.21h-13.417a77.985 77.985 0 001.167-13.435v-38.411h12.25c11.695 0 21.21 9.516 21.21 21.211zM158 98.351c0-38.254 31.122-69.375 69.375-69.375h21.779c11.285 0 21.959 3.659 30.87 10.582a7.497 7.497 0 004.602 1.578c38.253 0 69.375 31.121 69.375 69.375v39.011a36.831 36.831 0 00-1.825-.046h-12.25v-13.939c0-11.387-5.455-22.252-14.593-29.066-10.014-7.467-23.698-7.449-34.05.048l-26.016 18.842a14 14 0 01-8.261 2.677h-55.848c-13.391 0-24.691 9.101-28.056 21.439h-13.276c-.612 0-1.22.016-1.825.046V98.351zm104.103 167.357h-12.206c-34.64 0-62.822-28.182-62.822-62.821v-45.768c0-7.766 6.317-14.083 14.083-14.083h55.848a28.912 28.912 0 0017.059-5.528l26.016-18.842c4.934-3.572 11.63-3.643 16.285-.171 5.439 4.057 8.56 10.268 8.56 17.041v67.351c-.001 34.639-28.183 62.821-62.823 62.821zm15.37 13.469v23.838L256 325.973l-21.473-22.958v-23.838a77.862 77.862 0 0015.37 1.531h12.206c5.261 0 10.399-.531 15.37-1.531zm-138.858-93.49c0-11.695 9.515-21.211 21.21-21.211h12.25v38.411c0 4.581.404 9.069 1.167 13.435h-13.417c-11.695 0-21.21-9.515-21.21-21.21zm60.392 91.585a12.483 12.483 0 00-5.507 10.361v25.756a37.622 37.622 0 01-16.757-5.142v-43.513c0-6.893-5.607-12.5-12.5-12.5H158v-20.96c.605.03 1.213.046 1.825.046h17.641c6.358 16.13 17.951 29.645 32.681 38.434zm9.493 78.572v-66.881l11.027-7.442v24.454c0 1.902.723 3.733 2.022 5.123l22.537 24.095zm47.5 32.349l-12.873-35.1 12.873-7.47 12.873 7.47zm47.5-32.349l-35.586-20.65 22.537-24.095a7.503 7.503 0 002.022-5.123v-24.454l11.027 7.442zm31.757-91.109v43.513a37.635 37.635 0 01-16.757 5.142v-25.756c0-4.16-2.059-8.033-5.508-10.361l-11.139-7.517c14.73-8.789 26.322-22.304 32.681-38.434h17.641c.612 0 1.22-.016 1.825-.046v20.96h-6.243c-6.892-.001-12.5 5.607-12.5 12.499zM497 454.504a4 4 0 01-3.996 3.996h-22.993a4.001 4.001 0 01-3.997-3.996v-35.639a4.001 4.001 0 013.997-3.996h22.993a4 4 0 013.996 3.996z\"></path>\n      </g>\n    </svg>\n  );\n}\n","export function TrophyIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M397.763 87.5h-98.509v213.476h98.509c58.855 0 106.737-47.882 106.737-106.738S456.618 87.5 397.763 87.5zm0 183.476h-68.509V117.5h68.509c42.381 0 76.738 34.357 76.738 76.738-.001 42.381-34.357 76.738-76.738 76.738zM114.237 87.5C55.382 87.5 7.5 135.382 7.5 194.238s47.882 106.738 106.737 106.738h98.509V87.5zm68.509 183.476h-68.509c-42.381 0-76.738-34.357-76.738-76.738S71.856 117.5 114.237 117.5h68.509zM314 419.5H198l15-91h86z\"\n      ></path>\n      <path fill=\"#fee97d\" d=\"M299 328.5h-30l15 91h30z\"></path>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M382.221 504.5H129.779a7 7 0 01-7-7v-11.629c0-22.091 17.909-40 40-40h186.442c22.091 0 40 17.909 40 40V497.5a7 7 0 01-7 7z\"\n      ></path>\n      <path\n        fill=\"#fee97d\"\n        d=\"M349.221 445.871h-30c22.092 0 40 17.909 40 40V497.5a7 7 0 01-7 7h30a7 7 0 007-7v-11.629c0-22.092-17.909-40-40-40zm-5 0H167.779v-3.629c0-22.091 17.909-40 40-40h96.442c22.091 0 40 17.909 40 40z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M304.221 402.241h-30c22.092 0 40 17.909 40 40v3.629h30v-3.629c0-22.091-17.909-40-40-40z\"\n      ></path>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M411.5 57.5h-311c-13.807 0-25-11.193-25-25s11.193-25 25-25h311c13.807 0 25 11.193 25 25s-11.193 25-25 25z\"\n      ></path>\n      <path\n        fill=\"#fee97d\"\n        d=\"M411.5 7.5h-30c13.807 0 25 11.193 25 25s-11.193 25-25 25h30c13.807 0 25-11.193 25-25s-11.193-25-25-25zM256 362.5c-83.119 0-150.5-67.381-150.5-150.5V57.5h301V212c0 83.119-67.381 150.5-150.5 150.5z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M376.5 57.5V212c0 78.056-59.424 142.229-135.5 149.757 4.934.488 9.937.743 15 .743 83.119 0 150.5-67.381 150.5-150.5V57.5z\"\n      ></path>\n      <circle cx=\"256\" cy=\"207.96\" r=\"94.169\" fill=\"#fff\"></circle>\n      <path\n        fill=\"#fee97d\"\n        d=\"M262.277 154.391l13.139 26.623a7 7 0 005.271 3.829l29.38 4.269c5.742.834 8.034 7.89 3.879 11.94l-21.26 20.723a6.998 6.998 0 00-2.013 6.196l5.019 29.261c.981 5.718-5.021 10.079-10.157 7.379l-26.278-13.815a7.001 7.001 0 00-6.515 0l-26.278 13.815c-5.135 2.7-11.137-1.661-10.157-7.379l5.019-29.261a7 7 0 00-2.013-6.196l-21.26-20.723c-4.155-4.05-1.862-11.106 3.879-11.94l29.38-4.269a7 7 0 005.271-3.829l13.139-26.623c2.569-5.203 9.987-5.203 12.555 0z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M313.946 201.052c4.155-4.05 1.862-11.106-3.88-11.94l-29.38-4.269a6.997 6.997 0 01-5.27-3.829l-13.139-26.623c-2.568-5.203-9.987-5.203-12.554 0l-10.888 22.061 3.874 7.85a18.632 18.632 0 0014.03 10.193c15.284 2.221 21.386 21.003 10.327 31.783a18.632 18.632 0 00-5.359 16.493l1.755 10.236 22.073 11.604c5.135 2.7 11.137-1.661 10.157-7.379l-5.019-29.261a7 7 0 012.013-6.196z\"\n      ></path>\n      <path d=\"M282.025 177.458l-13.022-26.387c-2.462-4.985-7.443-8.082-13.003-8.082s-10.541 3.097-13.003 8.083l-13.022 26.387-29.119 4.231c-5.502.799-9.987 4.581-11.706 9.868-1.718 5.288-.312 10.983 3.669 14.865l21.071 20.539-4.975 29.003c-.939 5.479 1.271 10.914 5.77 14.182s10.349 3.691 15.271 1.104L256 257.557l26.045 13.693c4.903 2.578 10.759 2.174 15.271-1.104 4.498-3.268 6.709-8.702 5.769-14.182l-4.974-29.003 21.071-20.539c3.981-3.881 5.387-9.577 3.669-14.865-1.719-5.287-6.204-9.068-11.706-9.867zm5.426 38.946a14.494 14.494 0 00-4.169 12.834l4.847 28.264-25.382-13.345a14.498 14.498 0 00-13.495 0l-25.381 13.344 4.847-28.262a14.495 14.495 0 00-4.169-12.835l-20.534-20.016 28.377-4.124a14.494 14.494 0 0010.918-7.932L256 158.618l12.69 25.714a14.494 14.494 0 0010.918 7.932l28.377 4.124zm194.096-99.749c-17.941-19.36-41.716-31.799-67.547-35.49v-16.27c16.756-1.282 30-15.316 30-32.394C444 14.58 429.421 0 411.5 0h-311C82.579 0 68 14.58 68 32.5c0 17.078 13.244 31.112 30 32.394v16.27c-25.714 3.676-49.409 16.029-67.321 35.248a7.5 7.5 0 0010.972 10.228C56.721 110.471 76.495 99.908 98 96.352v15.236c-39.204 7.62-68 42.024-68 82.652 0 22.509 8.765 43.663 24.675 59.561 15.532 15.543 36.076 24.242 57.996 24.641a157.847 157.847 0 008.007 15.038h-6.438c-54.722 0-99.24-44.519-99.24-99.24 0-14.091 2.904-27.711 8.633-40.48a7.5 7.5 0 00-13.685-6.14C3.347 162.333 0 178.019 0 194.24c0 62.992 51.248 114.24 114.24 114.24h16.729c17.756 22.957 41.679 40.906 69.267 51.348l-6.089 36.917c-18.396 5.522-32.123 21.915-33.701 41.685-25.112 1.221-45.167 22.032-45.167 47.441V497.5c0 7.995 6.505 14.5 14.5 14.5H382.22c7.995 0 14.5-6.505 14.5-14.5v-11.629c0-25.409-20.055-46.22-45.167-47.441-1.579-19.771-15.306-36.163-33.701-41.685l-6.089-36.917c27.588-10.441 51.511-28.391 69.267-51.348h16.729c62.992 0 114.24-51.248 114.24-114.24.001-28.841-10.814-56.394-30.452-77.585zM65.281 243.195C52.203 230.126 45 212.74 45 194.24c0-32.392 22.265-59.968 53-67.308V212c0 17.851 2.98 35.018 8.461 51.034-15.554-1.728-29.958-8.609-41.18-19.839zM100.5 50C90.851 50 83 42.149 83 32.5S90.851 15 100.5 15h311c9.649 0 17.5 7.851 17.5 17.5S421.149 50 411.5 50zM414 126.932c30.735 7.34 53 34.916 53 67.308 0 18.5-7.203 35.886-20.286 48.958-11.218 11.227-25.621 18.108-41.175 19.836C411.02 247.018 414 229.851 414 212zm-77.518 311.439h-22.895c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h35.634c17.921 0 32.5 14.58 32.5 32.5V497H130.279v-11.129c0-17.92 14.579-32.5 32.5-32.5h115.808c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5H175.518c1.921-16.101 15.651-28.629 32.261-28.629h96.441c16.611-.001 30.342 12.527 32.262 28.629zm-126.801-43.63l4.987-30.237C227.849 368.08 241.703 370 256 370s28.151-1.92 41.332-5.496l4.987 30.237zM256 355c-78.851 0-143-64.149-143-143V65h286v147c0 78.851-64.149 143-143 143zm141.76-61.52h-6.438a157.741 157.741 0 008.007-15.038c21.919-.399 42.463-9.097 57.991-24.637C473.235 237.903 482 216.749 482 194.24c0-40.627-28.796-75.032-68-82.652V96.352c21.605 3.57 41.449 14.208 56.545 30.498C487.604 145.259 497 169.192 497 194.24c0 54.721-44.519 99.24-99.24 99.24zM256 106.291c-56.061 0-101.67 45.609-101.67 101.669S199.939 309.629 256 309.629 357.67 264.02 357.67 207.96 312.061 106.291 256 106.291zm0 188.338c-47.79 0-86.67-38.88-86.67-86.669s38.88-86.669 86.67-86.669 86.67 38.88 86.67 86.669-38.88 86.669-86.67 86.669z\"></path>\n    </svg>\n  );\n}\n"],"names":["Ribbon","label","position","className","clsx","getColorFromLetter","getAnimationClass","PlayerRibbon","player","style","backgroundColor","getAvatarColorById","avatarId","title","name","id","size","RibbonGroup","labels","length","map","charAt","String","SlideShowControls","config","disableControls","barColor","nextButtonProps","slideDuration","totalDuration","useCountdown","duration","autoStart","onExpire","timeLeft","isRunning","pause","resume","disableControlsFlag","isFirstGalleryRunThrough","useEffect","expectedSlideIndex","Math","max","min","floor","slideIndex","setSlideIndex","slots","useMemo","Array","fill","e","i","width","calculateProgress","opacity","icon","onClick","s","disabled","pt","en","children","SlideShow","leftClassName","rightClassName","SlideShowLabel","props","SlideShowBubbleValue","winner","extra","color","getContrastColor","CrownFilled","MessageFilled","SlideShowPlayersList","players","playersIds","selectedPlayersNames","getPlayerNamesFromIds","join","A","playerId","SlideShowNoWins","Text","GarbageIcon","shape","useSlideShow","options","useState","setIsFirstGalleryRunThrough","reset","deleteDuplicate","votes","target","votesArray","Object","entries","duplicateIndex","findIndex","el","useVotingMatch","keyType","allowDuplicates","completeCount","initialState","setVotes","activeItem","setActiveItem","isVotingComplete","setIsVotingComplete","activateItem","useCallback","entryId","split","SEPARATOR","type","startsWith","prevVotes","copy","resetVoting","newInitialState","isItemActive","item","getEntryId","arr","keys","EvaluateIcon","xmlns","viewBox","d","cx","cy","rx","ry","transform","TrophyIcon","r"],"sourceRoot":""}