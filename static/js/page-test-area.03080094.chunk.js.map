{"version":3,"file":"static/js/page-test-area.03080094.chunk.js","mappings":"iNAIMA,EAAgBC,EAAQ,OAEvB,SAASC,IACd,OAAiBC,EAAAA,EAAAA,IAAe,UAAzBC,GAAP,eACA,GAA4BC,EAAAA,EAAAA,GAAS,CACnCC,IAAKN,EACLO,UAAU,EACVC,MAAM,IAHR,eAAOC,EAAP,KAAgBC,EAAhB,KAWA,OAJAC,EAAAA,EAAAA,YAAU,WACRD,EAASN,OAAOA,EACjB,GAAE,CAACA,KAEG,8BAAGK,GACX,C,kHChBKG,EAAUX,EAAQ,OAEjB,SAASY,IACd,OAAiBV,EAAAA,EAAAA,IAAe,UAAzBC,GAAP,eACA,GAA4BC,EAAAA,EAAAA,GAAS,CACnCC,IAAKM,EACLL,UAAU,IAFZ,eAAOE,EAAP,KAAgBC,EAAhB,KAUA,OAJAC,EAAAA,EAAAA,YAAU,WACRD,EAASN,OAAOA,EACjB,GAAE,CAACA,KAEG,8BAAGK,GACX,C,mMCPYK,EAAgB,WAC3B,OAAoCX,EAAAA,EAAAA,IAAe,cAAnD,eAAOY,EAAP,KAAmBC,EAAnB,KAEA,OACE,SAAC,KAAD,CACEC,KAAK,UACLC,SAAU,EACVC,MAAM,SAACC,EAAA,EAAD,IACNC,MAAOC,EACPC,SACE,iBAAKC,UAAU,iBAAf,WACE,gBAAKA,UAAU,wBAAf,SAAwCF,KACxC,SAAC,IAAD,CACEE,UAAU,yBACVC,MAAK,OAAEV,QAAF,IAAEA,EAAAA,EAAc,IACrBW,IAAK,IACLC,IAAK,IACLC,KAAM,GACNC,SAAUb,QAMrB,EAEKM,GAAY,SAAC,KAAD,CAAWQ,GAAG,oBAAoBC,GAAG,aCS1CC,EAAY,SAAC,GAOH,IAAD,QANpBC,QAAAA,OAMoB,MANV,GAMU,MALpBT,UAAAA,OAKoB,MALR,GAKQ,MAJpBU,MAAAA,OAIoB,MAJZ,IAIY,EAHpBC,EAGoB,EAHpBA,OAGoB,IAFpBC,YAAAA,OAEoB,MAFN,SAEM,MADpBC,QAAAA,OACoB,MADV,cACU,EACdC,EAAaC,KAAKC,MAAMP,GACxBQ,EAA8BH,EAlDfI,KAAI,SAACC,GAExB,IADA,IAAIC,EAAO,GACFC,EAAI,EAAGC,EAAI,EAAGA,EAAIH,EAAQI,OAAQF,GAAK,EAAGC,GAAK,EAClDH,EAAQE,EAAI,IAAMF,EAAQG,EAAI,KAChCF,GAAI,WAAQD,EAAQE,GAAhB,YAAsBF,EAAQG,GAA9B,aAAqCH,EAAQE,EAAI,GAAjD,YAAuDF,EAAQG,EAAI,KAI3E,OAAOF,CACR,IA2CKI,EAAiB,oBACrB,CACEC,MAAO,EACPC,OAAQ,EACRC,MAAO,UAJY,aACrB,EAIIf,UALiB,QAKD,EAEtB,OACE,iBACEgB,MAAM,6BACNf,QAASA,EACTgB,SAAS,SACT7B,UAAWA,EACX8B,MAAO,CAAEpB,MAAM,GAAD,OAAKA,EAAL,MAAgBC,OAAO,GAAD,OAAKA,GAAUD,EAAf,OALtC,WAOE,oBACCO,EAAMC,KAAI,SAACE,EAAMW,GAAP,OACT,iBAEEC,EAAGZ,EACHa,KAAK,OACLC,OAAO,OACPtB,YAAaY,EACbW,cAAc,QACdC,eAAe,QACfC,iBAAiB,MARnB,UACU5B,EADV,YACqBsB,GAFZ,MAchB,E,4ECxCYO,EAAgB,SAAC,GASH,IAAD,IARxBC,EAQwB,EARxBA,MACAC,EAOwB,EAPxBA,SAOwB,IANxBxC,UAAAA,OAMwB,MANZ,GAMY,MALxByC,aAAAA,OAKwB,aAJxB7B,YAAAA,OAIwB,MAJV,SAIU,MAHxBF,MAAAA,OAGwB,MAHhB,IAGgB,EAFxBC,EAEwB,EAFxBA,OAEwB,IADxB+B,mBAAAA,OACwB,SACxB,GAA4CC,EAAAA,EAAAA,UAAuB,IAAnE,eAAOC,EAAP,KAAuBC,EAAvB,KACMC,GAAYC,EAAAA,EAAAA,SAAO,GAKnBC,EAAe,WACnBF,EAAUG,SAAU,CACrB,EAKKC,EAAc,WAClBJ,EAAUG,SAAU,EACpBJ,EAAkB,GACnB,EAEKM,EAAY,SAACC,GACjBJ,IACA,IAAMK,EAAMD,EAAEE,OAAOC,WAAWC,qBAChChB,EAAS,GAAD,eAAKD,GAAL,CAAY,CAACkB,KAAKC,MAAML,EAAIhC,GAAIoC,KAAKC,MAAML,EAAI/B,MACxD,EAEKqC,EAAa,SAACP,GAElB,IACMQ,EADQR,EAAEE,OAAOC,WACHC,qBACdnC,EAAIoC,KAAKC,MAAME,EAAMvC,GACrBC,EAAImC,KAAKC,MAAME,EAAMtC,GAEvBuC,EAAgBtB,EAAMA,EAAMhB,OAAS,GACzCsC,EAAgBA,EAAcC,OAAO,CAACzC,EAAI,GAAKC,EAAI,KAGnDiB,EAAMwB,OAAOxB,EAAMhB,OAAS,EAAG,EAAGsC,GAClCrB,EAASD,EAAMuB,SAChB,EAMKE,EAAkB,SAACZ,GACvBD,EAAUC,EACX,EAMKa,EAAkB,SAACb,GAEvB,GAAKN,EAAUG,QAAf,CAGA,IACMW,EADQR,EAAEE,OAAOC,WACHC,qBAChBU,EAAW3B,EAAMA,EAAMhB,OAAS,GAEpC2C,EAAWA,EAASJ,OAAO,CAACL,KAAKC,MAAME,EAAMvC,GAAIoC,KAAKC,MAAME,EAAMtC,KAGlEiB,EAAMwB,OAAOxB,EAAMhB,OAAS,EAAG,EAAG2C,GAClC1B,EAASD,EAAMuB,SATd,CAUF,EAEKK,EAAgB,SAACf,GACjBN,EAAUG,UACZC,IAEAS,EAAWP,GAEd,EAMKgB,EAAsB,WAC1BlB,GACD,EAMKmB,EAAwB,WAC5BrB,GACD,EAuDKxB,EAAiB,oBACrB,CACEC,MAAO,EACPC,OAAQ,EACRC,MAAO,UAJY,aACrB,EAIIf,UALiB,QAKD,EAEtB,OACE,UAAC,IAAD,CAAO0D,UAAU,WAAWC,MAAM,SAAlC,WACE,SAAC,KAAD,CACE7D,MAAOA,EACPC,OAAQA,GAAUD,EAClB8D,YAAaR,EACbS,YAAaR,EACbS,UAAWP,EACXQ,aAAcX,EACdY,YAAaX,EACbY,WAAYV,EACZW,aAnEmB,SAAC1B,GACpBN,EAAUG,UACZU,EAAWP,GAEX2B,OAAOC,SAASC,iBAAiB,UAAWb,GAC5CW,OAAOC,SAASC,iBAAiB,WAAYb,GAC7CW,OAAOC,SAASC,iBAAiB,YAAaZ,GAC9CU,OAAOC,SAASC,iBAAiB,aAAcZ,GAElD,EA2DKa,aArDmB,SAAC9B,GACpBN,EAAUG,SACZE,EAAUC,GAEZ2B,OAAOC,SAASG,oBAAoB,UAAWf,GAC/CW,OAAOC,SAASG,oBAAoB,WAAYf,GAChDW,OAAOC,SAASG,oBAAoB,YAAad,GACjDU,OAAOC,SAASG,oBAAoB,aAAcd,EACnD,EA8CKrE,WAAWoF,EAAAA,EAAAA,GAAK,iBAAkBpF,GAClC8B,MAAO,CAAEpB,MAAM,GAAD,OAAKA,EAAL,MAAgBC,OAAO,GAAD,OAAKA,GAAUD,EAAf,OACpCgC,mBAAoBA,EACpB2C,GAAG,iBAdL,UAgBE,SAAC,KAAD,UACG9C,EAAMrB,KAAI,SAACoE,EAAMC,GAAP,OACT,SAAC,KAAD,CAEEC,OAAQF,EACRpD,OAAO,UACPtB,YAAaY,EACbiE,QAAS,GACTC,QAAQ,QACRC,yBAAyB,eANpBJ,EAFE,QAad9C,IACC,UAAC,IAAD,YACE,UAAC,KAAD,CAAQmD,QA/DD,WACb,IAAMC,GAAS,OAAOtD,GAChBuD,GAAkB,OAAOlD,GACzBsB,EAAmC2B,EAAUE,MAC/C7B,IACF4B,EAAmBE,KAAK9B,GACxB1B,EAASqD,GACThD,EAAkBiD,GAErB,EAsDgCG,SAA2B,IAAjB1D,EAAMhB,OAAzC,WACE,SAAC2E,EAAA,EAAD,KACA,SAAC,KAAD,CAAW5F,GAAG,WAAWC,GAAG,aAE9B,UAAC,KAAD,CAAQqF,QAxDD,WACb,IAAMC,GAAS,OAAOtD,GAChBuD,GAAkB,OAAOlD,GACzBuD,EAAeL,EAAmBC,MACpCI,IACFN,EAAUG,KAAKG,GACf3D,EAASqD,GACThD,EAAkBiD,GAErB,EA+CgCG,SAAoC,IAA1BrD,EAAerB,OAAlD,WACE,SAAC2E,EAAA,EAAD,KACA,SAAC,KAAD,CAAW5F,GAAG,UAAUC,GAAG,aAE7B,UAAC,KAAD,CAAQqF,QAzEA,kBAAMpD,EAAS,GAAf,EAyEkByD,SAA2B,IAAjB1D,EAAMhB,OAA1C,WACE,SAAC6E,EAAA,EAAD,KACA,SAAC,KAAD,CAAW9F,GAAG,SAASC,GAAG,kBAMrC,C,iHC3PK8F,EAAcC,IAqBPC,EAAkB,SAAC,GAA2E,IAAzE9G,EAAwE,EAAxEA,KAAM+G,EAAkE,EAAlEA,KAAkE,IAA5DC,WAAAA,OAA4D,MAA/C,GAA+C,MAA3CzG,UAAAA,OAA2C,MAA/B,GAA+B,EAClG0G,EAAY,oBAElB,OACE,iBAAK1G,WAAWoF,EAAAA,EAAAA,GAAKsB,EAAD,UAAeA,EAAf,aAA6BjH,GAAQO,GAAzD,WACE,kBAAMA,UAAS,UAAK0G,EAAL,YAAf,UACY,aAATjH,GACC,SAAC,KAAD,CAAWa,GAAG,sBAAmBC,GAAG,qBAEpC,SAAC,KAAD,CAAWD,GAAG,sBAAmBC,GAAG,oBAE5B,aAATd,EAAsB,gBAAQ,oBAEjC,gBAAKO,UAAS,UAAK0G,EAAL,aAAd,UACE,SAACL,EAAD,CACErG,UAAS,UAAK0G,EAAL,UACTC,oBAAoBvB,EAAAA,EAAAA,GAAK,GAAD,OAAIsB,EAAJ,8BAAoCA,EAApC,6BAAkEjH,IAC1FmH,YAAaH,EACbI,YAAY,EACZC,gBAAiBN,QAK1B,C,yGCnCM,SAASO,EAAT,GAA6F,IAAxEC,EAAuE,EAAvEA,SAAuE,IAA7DC,IAAAA,OAA6D,aAAhDC,IAAAA,OAAgD,aAAnCC,QAAAA,OAAmC,SACjG,GAAqCC,EAAAA,EAAAA,KAA7BC,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,SAExB,OAAIH,EACEF,GAAOK,GACF,yBAAMN,IAGRM,GAAW,oCAAIN,MAAe,wBAGlCE,GAAOI,GAAaD,EACnBJ,GACK,yBAAMD,KAER,8BAAGA,KAEL,uBACR,C,qEC5BM,SAASO,EAAT,GAA8D,IAAzCP,EAAwC,EAAxCA,SAAUvH,EAA8B,EAA9BA,KAAS+H,GAAqB,YAClE,OACE,SAACT,EAAD,CAAWI,SAAO,EAAlB,UACE,SAAC,MAAD,gBAAQxH,MAAM,SAAC8H,EAAA,EAAD,IAAehI,KAAI,OAAEA,QAAF,IAAEA,EAAAA,EAAQ,WAAe+H,GAA1D,aACGR,MAIR,C,oHCPM,SAASU,EAAT,GAA6E,IAA3D7H,EAA0D,EAA1DA,MAA0D,IAAnDH,SAAAA,OAAmD,MAAxC,WAAwC,EACjF,OACE,gBAAKM,WAAWoF,EAAAA,EAAAA,GAAK,SAAD,kBAAsB1F,IAA1C,UACE,gBACEM,WAAWoF,EAAAA,EAAAA,GACT,kBADa,2BAEOvF,GAFP,6BAGQ8H,EAAAA,EAAAA,IAAmB9H,KACxC+H,EAAAA,EAAAA,IAAkB,aALtB,SAQG/H,KAIR,C,0BCZM,SAASgI,EAAT,GAAoF,IAA5DC,EAA2D,EAA3DA,OAA2D,IAAnDpI,SAAAA,OAAmD,MAAxC,WAAwC,EACxF,OACE,gBAAKM,WAAWoF,EAAAA,EAAAA,GAAK,SAAD,kBAAsB1F,IAA1C,UACE,gBACEM,WAAWoF,EAAAA,EAAAA,GAAK,mBAAmBwC,EAAAA,EAAAA,IAAkB,aACrD9F,MAAO,CAAEiG,iBAAiBC,EAAAA,EAAAA,IAAmBF,EAAOG,WAFtD,UAIE,SAAC,IAAD,CAASC,MAAOJ,EAAOK,KAAvB,UACE,SAAC,KAAD,CAAQ9C,GAAIyC,EAAOG,SAAUG,KAAK,eAK3C,CClBM,SAASC,EAAT,GAAoD,IAA7BC,EAA4B,EAA5BA,OAC5B,OACE,gBAAKtI,UAAU,gCAAf,SACGsI,EAAO/G,OAAS,GACf+G,EAAOpH,KAAI,SAACrB,GAAD,MACY,kBAAdyI,EAAO,IACZ,SAACZ,EAAD,CAEE7H,MAAOA,EAAM0B,OAAS,EAAI1B,EAAM0I,OAAO1I,EAAM0B,OAAS,GAAK1B,EAC3DH,SAAS,UAFJG,IAKP,SAACgI,EAAD,CAAcC,OAAQjI,EAAqBH,SAAS,UAR7C,KAalB,C,6LCSY8I,EAAc,SAAC,GAA6E,IAA3ExB,EAA0E,EAA1EA,SAAUyB,EAAgE,EAAhEA,MAAOzI,EAAyD,EAAzDA,UAAW0I,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,UAC7DjC,EAAY,cAElB,OACE,SAAC,SAAD,CACE1G,WAAWoF,EAAAA,EAAAA,GACTsB,EACAgC,GAAS,UAAOhC,EAAP,eACT+B,GAAK,UAAO/B,EAAP,WACLiC,GAAS,UAAOjC,EAAP,gBACT1G,GAEF,cAAY,cARd,SAUGgH,GAGN,E,sBCnCM,SAAS4B,EAAT,GAAuE,IAAD,IAArClF,EAAqC,EAArCA,MAChCmF,GAAO,iBAACnF,QAAD,IAACA,OAAD,EAACA,EAAOoF,aAAR,QAAiB,IAAjB,iBAAuBpF,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAOT,eAA9B,QAAyC,GAEtD,OAAa,IAAT4F,GAAcnF,EAAMqF,gBAEpB,SAAC,EAAD,CAAiBtJ,KAAK,QAAtB,UACE,SAAC,KAAD,CAAWa,GAAG,8BAA2BC,GAAG,2BAMhD,SAAC,EAAD,CAAiBd,KAAK,MAAtB,UACE,SAAC,KAAD,CACEa,IACE,iCACG0I,EAAAA,EAAAA,IAAUH,EAAM,QAAS,UAD5B,KACuC,4BAASA,IADhD,KACgEG,EAAAA,EAAAA,IAAUH,EAAM,UADhF,8BAKFtI,IACE,iCACE,4BAASsI,IADX,KAC2BG,EAAAA,EAAAA,IAAUH,EAAM,SAD3C,qCAOT,CC3BM,SAASI,EAAT,GAAqE,IAA5CjC,EAA2C,EAA3CA,SAAUhH,EAAiC,EAAjCA,UACxC,OAAO,iBAAMA,WAAWoF,EAAAA,EAAAA,GAAK,iBAAkBpF,GAAxC,SAAqDgH,GAC7D,CCoBM,IAAMkC,EAAQ,SAAC,GAQH,IAPjBlC,EAOgB,EAPhBA,SACAyB,EAMgB,EANhBA,MACA9I,EAKgB,EALhBA,KACAK,EAIgB,EAJhBA,UAIgB,IAHhBmJ,MAAAA,OAGgB,MAHR,EAGQ,MAFhBf,KAAAA,OAEgB,MAFT,SAES,MADhB7D,MAAAA,OACgB,MADR,SACQ,EAChB,OACE,UAAC,UAAD,CACE4E,MAAOA,EACPnJ,WAAWoF,EAAAA,EAAAA,GAAK,QAAD,iBAAoBgD,GAApB,uBAA4C7D,GAASkE,GAAS,eAAgBzI,GAF/F,UAIGoJ,QAAQzJ,IAASA,EACjBqH,IAGN,E,8GCDYqC,EAAkB,SAAC,GAMF,IAL5BrC,EAK2B,EAL3BA,SACAhH,EAI2B,EAJ3BA,UACA2I,EAG2B,EAH3BA,UAG2B,IAF3BlJ,KAAAA,OAE2B,MAFpB,OAEoB,EAD3B6J,EAC2B,EAD3BA,IAEM5C,EAAY,mBAEZ/G,EAAO,CACX4J,QAAQ,SAACC,EAAA,EAAD,IACRC,OAAO,SAACC,EAAA,EAAD,IACPC,OAAO,SAACC,EAAA,EAAD,IACPC,MAAM,SAACC,EAAA,EAAD,IACNC,MAAM,SAACC,EAAA,EAAD,IACNC,KAAK,SAACC,EAAA,EAAD,IACLC,SAAS,SAACC,EAAA,EAAD,IACTC,MAAM,SAACC,EAAA,EAAD,IACNC,KAAK,SAACC,EAAA,EAAD,KACL/K,GAEIgL,EAAiB,CACrBlB,QAAQ3B,EAAAA,EAAAA,IAAkB,UAC1B6B,OAAO7B,EAAAA,EAAAA,IAAkB,QAAS,CAAE8C,UAAU,EAAMC,MAAO,SAC3DhB,OAAO/B,EAAAA,EAAAA,IAAkB,OAAQ,CAAEgD,OAAQ,EAAGD,MAAO,SACrDd,MAAMjC,EAAAA,EAAAA,IAAkB,SACxBmC,MAAMnC,EAAAA,EAAAA,IAAkB,SACxBqC,KAAKrC,EAAAA,EAAAA,IAAkB,SACvBuC,SAASvC,EAAAA,EAAAA,IAAkB,SAC3ByC,MAAMzC,EAAAA,EAAAA,IAAkB,SACxB2C,KAAK3C,EAAAA,EAAAA,IAAkB,UACvBnI,GAEMoL,EAAUC,EAAAA,EAAAA,WAAVD,MACFE,EAAiB,WAATtL,EAAoB,CAAEuL,WAAYH,EAAMI,cAAiB,CAAC,EAExE,OACE,iBACEjL,WAAWoF,EAAAA,EAAAA,GAAKsB,EAAWiC,GAAS,UAAOjC,EAAP,gBAAgC1G,GACpE,cAAY,mBAFd,WAIE,gBAAKA,WAAWoF,EAAAA,EAAAA,GAAK,GAAD,OAAIsB,EAAJ,oBAA0BA,EAA1B,mBAA8CjH,IAASqC,MAAOiJ,EAAlF,UACE,gBAAK/K,UAAWyK,EAAhB,SAAiC9K,MAElC2J,GACD,SAAC,cAAD,CAAsBtJ,WAAWoF,EAAAA,EAAAA,GAAK,GAAD,OAAIsB,EAAJ,cAArC,SAAiEM,MAGtE,C,qKC3EM,SAASkE,EAAT,GASc,IAjCJjL,EAyBfN,EAQkB,EARlBA,KACAF,EAOkB,EAPlBA,KACA0L,EAMkB,EANlBA,SACAnE,EAKkB,EALlBA,SAKkB,IAJlBhH,UAAAA,OAIkB,MAJN,GAIM,MAHlBoL,cAAAA,OAGkB,MAHF,SAGE,MAFlBC,QAAAA,OAEkB,MAFR,EAEQ,EADlBC,EACkB,EADlBA,QAEA,OACE,UAACC,EAAA,EAAD,CACE5L,KAAI,OAAEA,QAAF,IAAEA,EAAAA,GAAQ,SAAC6L,EAAA,EAAD,IACd/L,KAAMA,EACN0L,SAAUA,EACVnL,UAAWA,EACXoL,cAAeA,EALjB,UAOGC,EAPH,KAnCapL,EA0CQqL,EA1CWrL,EAAQ,GAAR,WAAiBA,GAAUA,GA2CxD+G,IAGN,C,uHCrCM,SAASyE,EAAT,GAQY,IAPjBC,EAOgB,EAPhBA,MAEA5C,GAKgB,EANhB3G,cAMgB,EALhB2G,OAKgB,IAJhBrJ,KAAAA,OAIgB,MAJT,OAIS,EAHhBQ,EAGgB,EAHhBA,MAEG0L,GACa,EAFhBC,QAEgB,aACVC,EAAa,IAAe,IAAR5L,EAAe6I,EACzC,OACE,SAAC,KAAD,QACEgD,QAASD,EACTH,MAAOA,EACPK,UAAU,EACVjK,MAAO,CAAEkK,aAAc,QACvB5D,KAAMsD,GAASA,EAAQ,GAAK,aAAUO,EACtCxM,KAAMA,GACFkM,GAGT,CCLM,SAASO,EAAT,GAAiG,IAAxEC,EAAuE,EAAvEA,SAAUC,EAA6D,EAA7DA,SAAU3M,EAAmD,EAAnDA,KAAmD,IAA7CiM,MAAAA,OAA6C,MAArC,GAAqC,EAAjC1L,EAAiC,EAAjCA,UAC5DqM,GAAaC,EAAAA,EAAAA,GAAa,CAChCH,SAAAA,EACAI,WAAW,EACXH,SAAAA,IAHMC,SAMR,OACE,iBAAKrM,WAAWoF,EAAAA,EAAAA,GAAK,eAAgBpF,GAArC,UACGqM,EADH,KACa,SAACZ,EAAD,CAAUC,MAAOA,EAAOzL,MAAOoM,EAAUvD,MAAOqD,EAAU1M,KAAMA,IAD7E,IACuF4M,IAG1F,C,wECnBM,SAASG,EAAT,GAQmB,IAzBTvM,EAkBfN,EAOuB,EAPvBA,KACAF,EAMuB,EANvBA,KACA0L,EAKuB,EALvBA,SACAnE,EAIuB,EAJvBA,SAIuB,IAHvBhH,UAAAA,OAGuB,MAHX,GAGW,MAFvBoL,cAAAA,OAEuB,MAFP,SAEO,EADpBqB,GACoB,YACvB,GAA6BH,EAAAA,EAAAA,IAAa,UAAKG,IAAvCpB,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAEjB,OACE,UAACC,EAAA,EAAD,CACE5L,KAAI,OAAEA,QAAF,IAAEA,EAAAA,GAAQ,SAAC6L,EAAA,EAAD,IACd/L,KAAMA,EACN0L,SAAUA,EACVnL,UAAWA,EACXoL,cAAeA,EALjB,UAOGC,EAPH,KA7BapL,EAoCQqL,EApCWrL,EAAQ,GAAR,WAAiBA,GAAUA,GAqCxD+G,IAGN,C,wIC7BM,SAAS0F,IACd,OAAwC/N,EAAAA,EAAAA,IAAe,gBAAvD,eAAOgO,EAAP,KAAqBC,EAArB,KACA,GAAsBjO,EAAAA,EAAAA,IAAe,eAA9BkO,GAAP,eACA,GAA2CC,EAAAA,EAAAA,KAA3C,eAAOC,EAAP,KAAwBC,EAAxB,KAuBA,OAVAC,EAAAA,EAAAA,IAAc,WAAO,IAAD,EAClBL,EAAe,UAACG,EAAgB,uBAAjB,QAAoC,CAAC,EACrD,KAED5N,EAAAA,EAAAA,YAAU,WACJ+N,OAAOC,KAAP,OAAYR,QAAZ,IAAYA,EAAAA,EAAgB,CAAC,GAAGpL,QAClCyL,EAAgB,CAAEL,aAAY,OAAEA,QAAF,IAAEA,EAAAA,EAAgB,CAAC,GAEpD,GAAE,CAACA,EAAcK,IAEX,CACLL,aAAAA,EACAS,gBAhBsB,SAACC,GACvB,OAAOjE,QAAQiE,GAAUR,IAAV,OAAyBF,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAeU,IACxD,EAeCC,SAxBe,SAACD,GAChBT,GAAgB,SAACW,GAAD,qBAAC,UACZA,GADW,cAEbF,EAFa,YAEJ,OAACE,QAAD,IAACA,GAAAA,EAAIF,WAFD,aAIjB,EAoBCG,cAAeX,EAElB,C,4FCzCM,SAASzF,IACd,OAA4CzI,EAAAA,EAAAA,IAAe,kBAA3D,eAAO0I,EAAP,KAAuBoG,EAAvB,KAMA,MAAO,CACLnG,SAAAA,EAAAA,GACAD,eAAAA,EACAqG,kBAPwB,WACxBD,GAAkB,SAACF,GAAD,OAAQA,CAAR,GACnB,EAOF,C,wBCZM,SAASI,EAAaC,GAC3B,IAAMC,EAAOC,6BAEb,OAAQF,GACN,IAAK,MACH,MAAM,GAAN,OAAUC,EAAV,YAAkBC,eACpB,IAAK,MACH,MAAM,GAAN,OAAUD,EAAV,YAAkBC,iBACpB,IAAK,WACH,MAAM,GAAN,OAAUD,EAAV,YAAkBC,YACpB,QACE,MAAO,GAEZ,C,iHCpBM,SAAStC,EAAkBG,GAChC,OACE,iCAAK/J,MAAM,6BAA6Bf,QAAQ,eAAkB8K,GAAlE,eACE,iBACE1J,KAAK,UACLD,EAAE,yFAEJ,iBACEC,KAAK,UACLD,EAAE,8JAEJ,iBACEC,KAAK,UACLD,EAAE,4JAEJ,iBACEC,KAAK,UACLD,EAAE,8KAEJ,iBAAMA,EAAE,waACR,iBAAMA,EAAE,gSAER,0BACE,iBACEC,KAAK,UACLD,EAAE,kOAEJ,iBAAMA,EAAE,iZACR,6BACE+L,cAAc,YACdC,IAAI,KACJC,KAAK,YACLC,YAAY,aACZC,GAAG,cACH1O,KAAK,iBAKd,C,kFCvCM,SAAS2O,EAAazC,GAC3B,OACE,iCAAK/J,MAAM,6BAA6Bf,QAAQ,eAAkB8K,GAAlE,eACE,iBACE1J,KAAK,UACLD,EAAE,0IAEJ,iBACEC,KAAK,UACLD,EAAE,wIAEJ,iBACEC,KAAK,UACLD,EAAE,yIAEJ,iBACEC,KAAK,UACLD,EAAE,wIAEJ,iBAAMA,EAAE,wzBAGb,C,kFCtBM,SAASqM,EAAiB1C,GAC/B,OACE,iCAAK/J,MAAM,6BAA6Bf,QAAQ,eAAkB8K,GAAlE,eACE,iBACE1J,KAAK,UACLD,EAAE,kJAEJ,iBACEC,KAAK,UACLD,EAAE,gJAEJ,iBACEC,KAAK,UACLD,EAAE,iJAEJ,iBACEC,KAAK,UACLD,EAAE,gJAEJ,iBAAMA,EAAE,62BACR,iBACEC,KAAK,UACLD,EAAE,sKAEJ,iBAAMA,EAAE,yUAGb,C,kFC3BM,SAASsM,EAAa3C,GAC3B,OACE,iCAAK/J,MAAM,6BAA6Bf,QAAQ,eAAkB8K,GAAlE,eACE,iBACE1J,KAAK,UACLD,EAAE,8JAEJ,iBACEC,KAAK,UACLD,EAAE,8JAEJ,iBACEC,KAAK,UACLD,EAAE,0JAEJ,iBACEC,KAAK,UACLD,EAAE,yJAEJ,iBACEC,KAAK,UACLD,EAAE,uKAEJ,iBACEC,KAAK,UACLD,EAAE,mKAEJ,iBAAMA,EAAE,88BACR,iBAAMA,EAAE,qVAGb,C,kFC/BM,SAASuM,EAAoB5C,GAClC,OACE,iCAAK/J,MAAM,6BAA6Bf,QAAQ,eAAkB8K,GAAlE,eACE,iBACE1J,KAAK,UACLD,EAAE,kJAEJ,iBACEC,KAAK,UACLD,EAAE,gJAEJ,iBACEC,KAAK,UACLD,EAAE,iJAEJ,iBACEC,KAAK,UACLD,EAAE,gJAEJ,iBAAMA,EAAE,62BACR,iBACEC,KAAK,UACLD,EAAE,kZAEJ,iBACEC,KAAK,UACLD,EAAE,ilBAEJ,iBAAMA,EAAE,mwBAGb,C,+LCnBM,SAASwM,EAAT,GAA2E,IAAhDpO,EAA+C,EAA/CA,KAAMwF,EAAyC,EAAzCA,QAAS6I,EAAgC,EAAhCA,OAC/C,OACE,iBAAKzO,UAAU,YAAf,WACE,SAAC,KAAD,WACE,SAAC,KAAD,UAAgByO,OAElB,UAAC,IAAD,CAAOC,MAAI,EAAC1O,UAAU,kBAAkBuE,MAAM,SAA9C,WACE,SAAC,KAAD,CAAQ9E,KAAK,UAAU2I,KAAK,QAAQxC,QAAS,kBAAMA,EAAQxF,GAAM,EAApB,EAA7C,UACE,SAAC,KAAD,CAAWE,GAAG,MAAMC,GAAG,WAEzB,SAAC,KAAD,CAAQd,KAAK,UAAUkP,QAAM,EAACvG,KAAK,QAAQxC,QAAS,kBAAMA,EAAQxF,GAAM,EAApB,EAApD,UACE,SAAC,KAAD,CAAWE,GAAG,SAAMC,GAAG,cAKhC,C,0ECPM,SAASqO,EAAT,GAAgE,IAA7ClD,EAA4C,EAA5CA,MAAOmD,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,WACxC,OACE,SAAC,IAAD,CAAO9O,UAAU,6BAA6B0O,MAAI,EAAlD,SACGhD,EAAMxK,KAAI,SAAC6N,EAAGhN,GACb,IAhBe9B,EAAiB+O,EAgB1BC,GAhBShP,EAgBkB4O,EAAQ9M,GAhBTiN,EAgBiBF,IAAe/M,EAflE9B,EAAcoO,EAAAA,GACJ,IAAVpO,EAAwBqO,EAAAA,EACxBU,EAAeT,EAAAA,EACZH,EAAAA,GAaD,OAAO,SAAC,KAAD,CAAYzO,MAAM,SAACsP,EAAD,KAC1B,KAGN,C,iDCnBKC,EAAOC,MAAM,GAChBlN,KAAK,GACLf,KAAI,SAAC6N,EAAGxJ,GAAJ,qBAAiB6J,EAAAA,EAAAA,QAAO,EAAG,IAA3B,aAAkCA,EAAAA,EAAAA,QAAO,EAAG,KAA5C,I,6ECEDC,EAAO,eAAUD,EAAAA,EAAAA,QAAO,EAAG,M,gDCD3BE,EAAcC,QAAOH,EAAAA,EAAAA,QAAO,EAAG,K,yGCL9B,SAASI,EAAT,GAAsC,IAArBhJ,EAAoB,EAApBA,KACtB,GAAiB7H,EAAAA,EAAAA,IAAe,UAAzBC,GAAP,eACQ6Q,GAAaC,EAAAA,EAAAA,KAAbD,SAOR,OAJAtQ,EAAAA,EAAAA,YAAU,YACRwQ,EAAAA,EAAAA,IAAMnJ,EAAMiJ,EAAU7Q,EACvB,GAAE,CAACA,KAEG,uBACR,CCDD,IAAM8M,EAAQ,CACZ,CACEkE,IAAK,WACL1H,MAAO,GACPnI,QCbG,YAA0D,IAAlC8P,EAAiC,EAAjCA,SAAUzP,EAAuB,EAAvBA,KACvC,OACE,UAAC,IAAD,CAAOJ,UAAU,6BAA6BsE,UAAU,WAAxD,WACE,SAAC,KAAD,CAAO6E,MAAO,EAAGf,KAAK,QAAtB,UACE,SAAC,KAAD,CAAW9H,GAAG,uBAAoBC,GAAG,uBAGvC,UAAC,KAAD,CAAamI,WAAS,EAAtB,WACE,sFACA,mBACA,uGAGF,SAACoH,EAAA,GAAD,KAEA,SAACtB,EAAD,CACEpO,KAAMA,EACNwF,QAASiK,EACTpB,OAAQ,CACNnO,GAAI,2DACJC,GAAI,yDAKb,GDVC,CACEqP,IAAK,SACL1H,MAAO,GACPnI,QEjBG,YAAyD,IAAlC8P,EAAiC,EAAjCA,SAAUzP,EAAuB,EAAvBA,KACtC,GAA0BuC,EAAAA,EAAAA,UAAc,IAAxC,eAAOJ,EAAP,KAAcC,EAAd,KAEA,OACE,UAAC,IAAD,CAAOxC,UAAU,6BAA6BsE,UAAU,WAAxD,WACE,SAAC,KAAD,CAAO6E,MAAO,EAAGf,KAAK,QAAtB,UACE,SAAC,KAAD,CAAW9H,GAAG,UAAUC,GAAG,eAG7B,SAAC,KAAD,CAAamI,WAAS,EAAtB,UACE,SAAC,KAAD,CACEpI,GAAG,wEACHC,GAAG,mEAIP,SAAC,IAAD,CAAOmO,MAAI,EAAC1O,UAAU,6BAAtB,UACE,SAAC,KAAD,CAAeuC,MAAOA,EAAOC,SAAUA,EAAUC,cAAY,EAAC7B,YAAY,aAG5E,SAAC4N,EAAD,CACEpO,KAAMA,EACNwF,QAASiK,EACTpB,OAAQ,CACNlO,GAAI,kDACJD,GAAI,wDAKb,GFXC,CACEsP,IAAK,WACL1H,MAAO,GACPnI,QGrBG,YAA0D,IAAlC8P,EAAiC,EAAjCA,SAAUzP,EAAuB,EAAvBA,KACvC,GAAqBzB,EAAAA,EAAAA,IAAe,cAA7BY,GAAP,eAEA,OACE,UAAC,IAAD,CAAOS,UAAU,6BAA6BsE,UAAU,WAAxD,WACE,SAAC,KAAD,CAAO6E,MAAO,EAAGf,KAAK,QAAtB,UACE,SAAC,KAAD,CAAW9H,GAAG,kBAAkBC,GAAG,eAGrC,SAAC,KAAD,CAAamI,WAAS,EAAtB,UACE,SAAC,KAAD,CACEpI,GAAG,sHACHC,GAAG,qGAIP,SAAC,KAAD,KACA,SAAC,IAAD,CAAOmO,MAAI,EAAC1O,UAAU,6BAAtB,UACE,SAAC,KAAD,CAAe+P,UAAS,OAAExQ,QAAF,IAAEA,EAAAA,EAAc,QAG1C,SAACiP,EAAD,CACEpO,KAAMA,EACNwF,QAASiK,EACTpB,OAAQ,CACNnO,GAAI,gEACJC,GAAI,yDAKb,GHRC,CACEqP,IAAK,gBACL1H,MAAO,GACPnI,QJtBG,YAA8D,IAAlC8P,EAAiC,EAAjCA,SAAUzP,EAAuB,EAAvBA,KAC3C,OACE,UAAC,IAAD,CAAOJ,UAAU,6BAA6BsE,UAAU,WAAxD,WACE,SAAC,KAAD,CAAO6E,MAAO,EAAGf,KAAK,QAAtB,UACE,SAAC,KAAD,CAAW9H,GAAG,mBAAgBC,GAAG,qBAEnC,SAAC,KAAD,CAAamI,WAAS,EAAtB,UACE,SAAC,KAAD,CACEpI,GAAG,sQACHC,GAAG,kNAIP,SAACiO,EAAD,CACEpO,KAAMA,EACNwF,QAASiK,EACTpB,OAAQ,CACNnO,GAAI,iCACJC,GAAI,mCAIR,SAACyP,EAAA,EAAD,WACE,SAAC,KAAD,CAAeC,UAAW,EAAGf,KAAMA,QAI1C,GIHC,CACEU,IAAK,SACL1H,MAAO,GACPnI,QIhCG,YAAwD,IAAlC8P,EAAiC,EAAjCA,SAAUzP,EAAuB,EAAvBA,KACrC,OACE,UAAC,IAAD,CAAOJ,UAAU,6BAA6BsE,UAAU,WAAxD,WACE,SAAC,KAAD,CAAO6E,MAAO,EAAGf,KAAK,QAAtB,UACE,SAAC,KAAD,CAAW9H,GAAG,iBAAcC,GAAG,cAGjC,SAAC,KAAD,CAAamI,WAAS,EAAtB,UACE,SAAC,KAAD,CAAWpI,GAAG,sCAAgCC,GAAG,kDAGnD,UAAC,IAAD,CAAOmO,MAAI,EAAC1O,UAAU,6BAA6BsE,UAAU,WAA7D,WACE,SAAC,KAAD,CAAe6H,SAAU,IAAKC,SAAU,WAAQ,KAChD,SAAC,KAAD,CAAiBD,SAAU,IAAKC,SAAU,WAAQ,KAClD,SAAC,KAAD,CAAaD,SAAU,IAAKC,SAAU,WAAQ,EAA9C,6BAKF,SAACoC,EAAD,CACEpO,KAAMA,EACNwF,QAASiK,EACTpB,OAAQ,CACNnO,GAAI,4EACJC,GAAI,kEAKb,GJKC,CACEqP,IAAK,iBACL1H,MAAO,GACPnI,QKrCG,YAA+D,IAAlC8P,EAAiC,EAAjCA,SAAUzP,EAAuB,EAAvBA,KACpC8P,GAAcR,EAAAA,EAAAA,KAAdQ,UACR,OACE,UAAC,IAAD,CAAOlQ,UAAU,6BAA6BsE,UAAU,WAAxD,WACE,SAAC,KAAD,CAAO6E,MAAO,EAAGf,KAAK,QAAtB,UACE,SAAC,KAAD,CAAW9H,GAAG,6BAA6BC,GAAG,uBAGhD,SAAC,KAAD,CAAamI,WAAS,EAAtB,UACE,SAAC,KAAD,CAAWpI,GAAG,0CAAuCC,GAAG,0CAG1D,SAAC,IAAD,CAAOmO,MAAI,EAAC1O,UAAU,6BAA6BsE,UAAU,WAA7D,UACE,SAACiC,EAAA,EAAD,CACE9G,KAAK,WACL+G,KAAM0J,EACJ,gDACA,6CAEFzJ,WAAY,CAAC,iBAAe,aAAc,UAAW,eAIzD,SAAC+H,EAAD,CACEpO,KAAMA,EACNwF,QAASiK,EACTpB,OAAQ,CACNnO,GAAI,wEACJC,GAAI,yEAKb,GLMC,CACEqP,IAAK,UACL1H,MAAO,GACPnI,QHnCG,YAAyD,IAAlC8P,EAAiC,EAAjCA,SAAUzP,EAAuB,EAAvBA,KACtC,GAA8BuC,EAAAA,EAAAA,UAAmB,CAAC,MAAlD,eAAOwN,EAAP,KAAgBC,EAAhB,KAMA,OACE,UAAC,IAAD,CAAOpQ,UAAU,6BAA6BsE,UAAU,WAAxD,WACE,SAAC,KAAD,CAAO6E,MAAO,EAAGf,KAAK,QAAtB,UACE,SAAC,KAAD,CAAW9H,GAAG,gCAA0BC,GAAG,8BAG7C,SAAC,KAAD,CAAamI,WAAS,EAAtB,UACE,SAAC,KAAD,CACEpI,GAAG,8LACHC,GAAG,mKAIP,SAAC,IAAD,CAAOmO,MAAI,EAAC1O,UAAU,6BAA6BsE,UAAU,WAA7D,UACE,UAAC,KAAD,CAAmBsB,QAlBL,WAClBwK,EAAW,GAAD,eAAKD,GAAL,CAAcE,EAAAA,GAAQF,EAAQ5O,UACzC,EAgB8CO,MAAO,CAAEpC,SAAU,YAA5D,WACE,SAAC,IAAD,CAAa4I,OAAQ6H,KACrB,SAAC,KAAD,CAAW9K,GAAIgK,EAASiB,SAAS,UAIrC,SAAC9B,EAAD,CACEpO,KAAMA,EACNwF,QAASiK,EACTpB,OAAQ,CACNnO,GAAI,+CACJC,GAAI,qCAKb,GGAC,CACEqP,IAAK,UACL1H,MAAO,GACPnI,QFzCG,YAAyD,IAAlC8P,EAAiC,EAAjCA,SAAUzP,EAAuB,EAAvBA,KAChC0H,EAAqB,CACzBzC,GAAI,IACJ8C,KAAM,WACNF,SAAUsH,QAAOH,EAAAA,EAAAA,QAAO,EAAG,KAC3BmB,UAAWC,KAAKC,MAChBC,OAAO,GAGT,OACE,UAAC,IAAD,CAAO1Q,UAAU,6BAA6BsE,UAAU,WAAxD,WACE,SAAC,KAAD,CAAO6E,MAAO,EAAGf,KAAK,QAAtB,UACE,SAAC,KAAD,CAAW9H,GAAG,WAAWC,GAAG,eAG9B,SAAC,KAAD,CAAamI,WAAS,EAAtB,UACE,SAAC,KAAD,CACEpI,GAAG,+CACHC,GAAG,kDAIP,UAAC,IAAD,CAAOmO,MAAI,EAAC1O,UAAU,6BAA6BsE,UAAU,WAA7D,WACE,SAAC,KAAD,CAAYwD,OAAQA,KACpB,SAAC,KAAD,CAAaA,OAAQA,KACrB,SAAC,KAAD,CAAYA,OAAQA,QAGtB,UAAC,IAAD,CAAO4G,MAAI,EAAC1O,UAAU,6BAAtB,WACE,SAAC2Q,EAAA,EAAD,CAAiB1I,SAAUH,EAAOG,SAAU5C,GAAIiK,KAChD,SAACsB,EAAA,EAAD,CAAe3I,SAAUH,EAAOG,SAAU5C,GAAIiK,KAC9C,SAACuB,EAAA,EAAD,CAAe5I,SAAUH,EAAOG,SAAU5C,GAAIiK,KAC9C,SAACwB,EAAA,EAAD,CAAazL,GAAIyC,EAAOG,SAAU8I,QAASzB,EAAa0B,SAAO,QAGjE,SAACxC,EAAD,CACEpO,KAAMA,EACNwF,QAASiK,EACTpB,OAAQ,CACNnO,GAAI,mFACJC,GAAI,wFAKb,GEFC,CACEqP,IAAK,SACL1H,MAAO,GACPnI,QM9CG,YAAwD,IAAlC8P,EAAiC,EAAjCA,SAAUzP,EAAuB,EAAvBA,KACrC,GAAkCuC,EAAAA,EAAAA,UAAiB,IAAnD,eAAOsO,EAAP,KAAkBC,EAAlB,KACA,GAA4BvS,EAAAA,EAAAA,IAAe,UAA3C,eAAOC,EAAP,KAAeuS,EAAf,KACQ1B,GAAaC,EAAAA,EAAAA,KAAbD,UAERtQ,EAAAA,EAAAA,YAAU,WACJP,EAAS,IACXuS,EAAU,GAEb,GAAE,CAACvS,EAAQuS,IAEZ,IAAMC,EAAY,mCAAG,WAAOnR,GAAP,iEACnBiR,EAAajR,IACboR,EAAAA,EAAAA,QAAM,kBAAMH,EAAa,GAAnB,GAAwB,KAFX,2CAAH,sDAKlB,OACE,UAAC,IAAD,CAAOlR,UAAU,6BAA6BsE,UAAU,WAAxD,WACE,SAAC,KAAD,CAAO6E,MAAO,EAAGf,KAAK,QAAtB,UACE,SAAC,KAAD,CAAW9H,GAAG,OAAOC,GAAG,cAG1B,SAAC,KAAD,CAAamI,WAAS,EAAtB,UACE,SAAC,KAAD,CACEpI,GAAG,iEACHC,GAAG,mEAIP,UAAC,IAAD,CAAOmO,MAAI,EAAC1O,UAAU,6BAA6BsE,UAAU,WAA7D,WACE,SAAC,KAAD,CAAQsB,QAAS,kBAAMwL,EAAa,YAAnB,EAAiCnL,SAAUmD,QAAQ6H,GAApE,UACE,SAAC,KAAD,CAAW3Q,GAAG,QAAQC,GAAG,eAE3B,SAAC,KAAD,CAAQqF,QAAS,kBAAMwL,EAAa,KAAnB,EAA0BnL,SAAUmD,QAAQ6H,GAA7D,UACE,SAAC,KAAD,CAAW3Q,GAAG,QAAQC,GAAG,eAE3B,SAAC,KAAD,CAAQqF,QAAS,kBAAMwL,EAAa,SAAnB,EAA8BnL,SAAUmD,QAAQ6H,GAAjE,UACE,SAAC,KAAD,CAAW3Q,GAAG,QAAQC,GAAG,eAE3B,SAAC,KAAD,CACEqF,QAAS,kBACP+J,EAAAA,EAAAA,IACE,CAAErP,GAAI,kCAAgCC,GAAI,kCAC1CkP,EACA7Q,EAJK,EAOTqH,SAAUmD,QAAQ6H,GARpB,UAUE,SAAC,KAAD,CAAW3Q,GAAG,QAAQC,GAAG,cAEZ,cAAd0Q,IAA6B,SAACvS,EAAA,EAAD,IACf,OAAduS,IAAsB,SAAC5R,EAAA,EAAD,IACR,WAAd4R,IACC,SAACzB,EAAD,CAAOhJ,KAAM,CAAElG,GAAI,kCAAgCC,GAAI,wCAI3D,SAACiO,EAAD,CACEpO,KAAMA,EACNwF,QAASiK,EACTpB,OAAQ,CACNnO,GAAI,2CACJC,GAAI,2CAKb,GNpBC,CACEqP,IAAK,OACL1H,MAAO,GACPnI,QO1DG,YAAmD,IAA3B8O,EAA0B,EAA1BA,QACrByC,EAAYC,EAAAA,EAAAA,SAAZD,QACR,GAAiCE,EAAAA,EAAAA,KAAjC,eAAOC,EAAP,KAAcC,EAAd,MAEAvS,EAAAA,EAAAA,YAAU,WACJsS,EAAMxR,OACRqR,EAAQK,KAAR,+BAAqCF,EAAMxR,OAE9C,GAAE,CAACwR,EAAOH,IAEX,IAAMM,EAAM,kCAA6B,OAAC/C,QAAD,IAACA,EAAAA,EAAW,IAAI3N,KAAI,SAAC2Q,GAAD,OAAQA,EAAC,iBAAT,IAAwBC,KAAK,KAE1F,OACE,UAAC,IAAD,CAAO9R,UAAU,6BAA6BsE,UAAU,WAAxD,WACE,SAAC,KAAD,CAAO6E,MAAO,EAAGf,KAAK,QAAtB,UACE,SAAC,KAAD,CAAW9H,GAAG,UAAUC,GAAG,aAG7B,SAAC,KAAD,CAAamI,WAAS,EAAtB,UACE,SAAC,KAAD,CACEpI,GAAG,wHACHC,GAAG,wGAIP,UAAC,IAAD,CAAOmO,MAAI,EAAC1O,UAAU,6BAA6BsE,UAAU,WAA7D,WACE,SAAC,aAAD,CAAgByN,UAAQ,EAAC9R,MAAO2R,EAAQI,KAAM,MAC9C,SAAC,KAAD,CAAQvS,KAAK,UAAUmG,QAAS,kBAAM8L,EAAgBE,EAAtB,EAAhC,UACE,SAAC,KAAD,CAAWtR,GAAG,SAASC,GAAG,gBAKnC,IPmED,MAhCA,WACE,OAA8BoC,EAAAA,EAAAA,UAAS,GAAvC,eAAOM,EAAP,KAAgBgP,EAAhB,KACA,GAA8BtP,EAAAA,EAAAA,UAAoB,IAAlD,eAAOkM,EAAP,KAAgBqD,EAAhB,KAWMC,EAAUzG,EAAMzI,GAASlD,QAE/B,OACE,SAAC,YAAD,CAAgBC,UAAU,YAA1B,UACE,UAAC,IAAD,CAAOA,UAAU,6BAA6BsE,UAAU,WAAxD,WACE,SAAC,KAAD,CAAO6E,MAAO,EAAGf,KAAK,QAAtB,UACE,SAAC,KAAD,CAAW9H,GAAG,mBAAgBC,GAAG,iBAGnC,SAAC,IAAD,CAAO0C,QAASA,EAASmP,MAAO1G,EAAOtD,KAAK,WAE5C,SAAC+J,EAAD,CAAStC,SApBG,SAACwC,EAAmBpS,GACpCiS,GAAW,SAACI,GACV,IAAMC,GAAU,OAAOD,GAEvB,OADAC,EAAWF,GAAapS,EACjBsS,CACR,IACDN,GAAW,SAACK,GAAD,OAAUA,EAAO,CAAjB,GACZ,EAamClS,KAAM6C,EAAS4L,QAASA,KAEtD,SAACD,EAAD,CAASC,QAASA,EAASnD,MAAOA,EAAOoD,WAAY7L,QAI5D,C,wKQnGM,SAAS0M,EACdnJ,EACAiJ,EACA7Q,GAEO,IADP4T,EACM,uDADmB,WAAQ,EAE3BC,EAAY,IAAIC,yBAAyBlM,EAAKiJ,IACpDgD,EAAUE,KAAoB,OAAblD,EAAoB,QAAU,QAC/CgD,EAAU7T,OAASA,EACnB6T,EAAUxN,iBAAiB,MAAOuN,GAClCzN,OAAO6N,gBAAgBjD,MAAM8C,EAC9B,CAOM,SAASI,EAAwB1K,GACtC,IAAM2K,EAAU,CACd,CACExS,GAAG,cAAD,OAAgB6H,EAAhB,KACF5H,GAAG,YAAD,OAAc4H,EAAd,MAEJ,CACE7H,GAAG,mCACHC,GAAG,+BAEL,CACED,GAAG,sBACHC,GAAG,mBAEL,CACED,GAAG,oBAAD,OAAgB6H,EAAhB,KACF5H,GAAG,cAAD,OAAgB4H,EAAhB,MAEJ,CACE7H,GAAG,GAAD,OAAK6H,EAAL,2CACF5H,GAAG,GAAD,OAAK4H,EAAL,cAEJ,CACE7H,GAAG,yBAAD,OAA2B6H,EAA3B,4BACF5H,GAAG,iBAAD,OAAmB4H,EAAnB,MAEJ,CACE7H,GAAG,6DACHC,GAAG,0DAIP,OAAOwS,EAAAA,EAAAA,GAAcD,EACtB,CAEM,SAASE,EAA8B7K,GAC5C,IAAM2K,EAAU,CACd,CACExS,GAAG,mEAAD,OAAqE6H,GACvE5H,GAAG,oDAAD,OAAsD4H,IAE1D,CACE7H,GAAG,+CACHC,GAAG,gDAEL,CACED,GAAG,0DACHC,GAAG,4DAIP,OAAOwS,EAAAA,EAAAA,GAAcD,EACtB,CAEM,SAASG,EAA6B9K,GAC3C,IAAM2K,EAAU,CACd,CACExS,GAAG,4BAAD,OAA2B6H,EAA3B,+CACF5H,GAAG,oCAAD,OAAsC4H,EAAtC,0CAEJ,CACE7H,GAAG,kFACHC,GAAG,wFAEL,CACED,GAAG,4CACHC,GAAG,qDAIP,OAAOwS,EAAAA,EAAAA,GAAcD,EACtB,CAEM,SAASI,EAA8B/K,GAC5C,IAAM2K,EAAU,CACd,CACExS,GAAG,QAAD,OAAU6H,EAAV,kEACF5H,GAAG,MAAD,OAAQ4H,EAAR,2DAEJ,CACE7H,GAAG,+EACHC,GAAG,qEAEL,CACED,GAAG,qIACHC,GAAG,sCAIP,OAAOwS,EAAAA,EAAAA,GAAcD,EACtB,C","sources":["components/audio/ArteRuimTimerSound.tsx","components/audio/DJPruPruPruSound.tsx","components/canvas/CanvasResizer.tsx","components/canvas/CanvasSVG.tsx","components/canvas/DrawingCanvas.tsx","components/cards/MovieReviewCard.tsx","components/debug/DebugOnly.tsx","components/debug/DevButton.tsx","components/ribbons/Ribbon.tsx","components/ribbons/PlayerRibbon.tsx","components/ribbons/RibbonGroup.tsx","components/text/Instruction.tsx","components/text/RoundsLeftInstruction.tsx","components/text/TextHighlight.tsx","components/text/Title.tsx","components/text/RuleInstruction.tsx","components/timers/TimerClock.tsx","components/timers/TimerBar.tsx","components/timers/TimedTimerBar.tsx","components/timers/TimedTimerClock.tsx","hooks/useBlurCards.ts","hooks/useDevFeatures.ts","hooks/useTDBaseUrl.ts","icons/AnimatedClockIcon.tsx","icons/BoxBlankIcon.tsx","icons/BoxCheckMarkIcon.tsx","icons/BoxMinusIcon.tsx","icons/BoxQuestionMarkIcon.tsx","pages/TestArea/components/DecisionButtons.tsx","pages/TestArea/components/Results.tsx","pages/TestArea/components/FloatingHandTest.tsx","pages/TestArea/components/RibbonsTest.tsx","pages/TestArea/components/AvatarsTest.tsx","components/audio/Speak.tsx","pages/TestArea/TestArea.tsx","pages/TestArea/components/LanguageTest.tsx","pages/TestArea/components/DrawingTest.tsx","pages/TestArea/components/ResizingTest.tsx","pages/TestArea/components/TimersTest.tsx","pages/TestArea/components/TextHighlightTest.tsx","pages/TestArea/components/SoundsTest.tsx","pages/TestArea/components/CompleteTest.tsx","utils/speech.ts"],"sourcesContent":["import { useGlobalState } from 'hooks/useGlobalState';\nimport { useEffect } from 'react';\nimport { useAudio } from 'react-use';\n// Sound\nconst arteRuimTimer = require('assets/sounds/arte-ruim-timer-remix.mp3');\n\nexport function ArteRuimTimerSound() {\n  const [volume] = useGlobalState('volume');\n  const [audio, , controls] = useAudio({\n    src: arteRuimTimer,\n    autoPlay: true,\n    loop: false,\n  });\n\n  // Updated volume\n  useEffect(() => {\n    controls.volume(volume);\n  }, [volume]); // eslint-disable-line\n\n  return <>{audio}</>;\n}\n","import { useGlobalState } from 'hooks/useGlobalState';\nimport { useEffect } from 'react';\nimport { useAudio } from 'react-use';\n// Sound\nconst airHorn = require('assets/sounds/airhorn.mp3');\n\nexport function DJPruPruPruSound() {\n  const [volume] = useGlobalState('volume');\n  const [audio, , controls] = useAudio({\n    src: airHorn,\n    autoPlay: true,\n  });\n\n  // Updated volume\n  useEffect(() => {\n    controls.volume(volume);\n  }, [volume]); // eslint-disable-line\n\n  return <>{audio}</>;\n}\n","// Ant Design Resources\nimport { Slider } from 'antd';\nimport { DragOutlined } from '@ant-design/icons';\n// State & Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\n// Components\nimport { FixedMenuButton } from 'components/buttons';\nimport { Translate } from 'components/language';\n\n/**\n * Fixed Menu Button for resizing canvas\n */\nexport const CanvasResizer = () => {\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n\n  return (\n    <FixedMenuButton\n      type=\"popover\"\n      position={1}\n      icon={<DragOutlined />}\n      label={labelText}\n      content={\n        <div className=\"canvas-resizer\">\n          <div className=\"canvas-resizer__label\">{labelText}</div>\n          <Slider\n            className=\"canvas-resizer__slider\"\n            value={canvasSize ?? 100}\n            min={150}\n            max={500}\n            step={50}\n            onChange={setCanvasSize}\n          />\n        </div>\n      }\n    />\n  );\n};\n\nconst labelText = <Translate pt=\"Tamanho das Artes\" en=\"Art Size\" />;\n","/**\n * Builds paths from canvas lines\n * @param lines\n * @returns\n */\nconst getPathFromKonvaLines = (lines: CanvasLine[]) => {\n  const result = lines.map((lineArr) => {\n    let path = '';\n    for (let x = 0, y = 1; y < lineArr.length; x += 2, y += 2) {\n      if (lineArr[x + 2] && lineArr[y + 2]) {\n        path += `M${lineArr[x]},${lineArr[y]} L${lineArr[x + 2]},${lineArr[y + 2]}`;\n      }\n    }\n\n    return path;\n  });\n\n  return result;\n};\n\ntype CanvasSVGProps = {\n  /**\n   * The stringified svg path\n   */\n  drawing: string;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * The width of the canvas (default: 500)\n   */\n  width?: number;\n  /**\n   * The height of the canvas (default: 500)\n   */\n  height?: number;\n  /**\n   * Size of the stroke. Default: medium\n   */\n  strokeWidth?: 'small' | 'medium' | 'large';\n  /**\n   * Custom view box size (default: '0 0 500')\n   */\n  viewBox?: string;\n};\n\nexport const CanvasSVG = ({\n  drawing = '',\n  className = '',\n  width = 250,\n  height,\n  strokeWidth = 'medium',\n  viewBox = '0 0 500 500',\n}: CanvasSVGProps) => {\n  const konvaLines = JSON.parse(drawing);\n  const paths = getPathFromKonvaLines(konvaLines);\n\n  const strokeWidthBySize =\n    {\n      small: 3,\n      medium: 5,\n      large: 7,\n    }?.[strokeWidth] ?? 5;\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox={viewBox}\n      overflow=\"hidden\"\n      className={className}\n      style={{ width: `${width}px`, height: `${height || width}px` }}\n    >\n      <defs />\n      {paths.map((path, index) => (\n        <path\n          key={`${drawing}-${index}`}\n          d={path}\n          fill=\"none\"\n          stroke=\"#000\"\n          strokeWidth={strokeWidthBySize}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit=\"10\"\n        />\n      ))}\n    </svg>\n  );\n};\n","import { useRef, useState } from 'react';\nimport { Stage, Layer, Line } from 'react-konva';\nimport clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\nimport { DeleteOutlined, UndoOutlined } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\n\ntype DrawingCanvasProps = {\n  /**\n   * Lines drawn in the canvas\n   */\n  lines: CanvasLine[];\n  /**\n   * Function where any new version of the drawing is sent to\n   */\n  setLines: CanvasSetLine;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Show controls to undo, redo, or erase drawing. Default: false\n   */\n  showControls?: boolean;\n  /**\n   * Size of the stroke. Default: medium\n   */\n  strokeWidth?: 'small' | 'medium' | 'large';\n  /**\n   * The width of the canvas (default: 500)\n   */\n  width?: number;\n  /**\n   * The height of the canvas (default: 500)\n   */\n  height?: number;\n  /**\n   *\n   */\n  willReadFrequently?: boolean;\n};\n\n/**\n * Canvas drawing board using react-konva\n * It requires an array of lines and an setState function to save the lines\n */\nexport const DrawingCanvas = ({\n  lines,\n  setLines,\n  className = '',\n  showControls = false,\n  strokeWidth = 'medium',\n  width = 500,\n  height,\n  willReadFrequently = false,\n}: DrawingCanvasProps) => {\n  const [drawingHistory, setDrawingHistory] = useState<CanvasLine[]>([]);\n  const isDrawing = useRef(false);\n\n  /**\n   * Toggles off the isDrawing flag\n   */\n  const startDrawing = () => {\n    isDrawing.current = true;\n  };\n\n  /**\n   * Toggles off the isDrawing flag and resets history\n   */\n  const stopDrawing = () => {\n    isDrawing.current = false;\n    setDrawingHistory([]);\n  };\n\n  const startLine = (e: any) => {\n    startDrawing();\n    const pos = e.target.getStage().getPointerPosition();\n    setLines([...lines, [Math.round(pos.x), Math.round(pos.y)]]);\n  };\n\n  const finishLine = (e: any) => {\n    // Add point if it was a point\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    const x = Math.round(point.x);\n    const y = Math.round(point.y);\n\n    let lastLineEntry = lines[lines.length - 1];\n    lastLineEntry = lastLineEntry.concat([x + 0.1, y + 0.1]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLineEntry);\n    setLines(lines.concat());\n  };\n\n  /**\n   * Start recording drawing\n   * @param e - konva mouse event\n   */\n  const handleMouseDown = (e: any) => {\n    startLine(e);\n  };\n\n  /**\n   * Tracks mouse moving during the drawing\n   * @param e - konva mouse event\n   */\n  const handleMouseMove = (e: any) => {\n    // no drawing - skipping\n    if (!isDrawing.current) {\n      return;\n    }\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    let lastLine = lines[lines.length - 1];\n    // add end point\n    lastLine = lastLine.concat([Math.round(point.x), Math.round(point.y)]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLine);\n    setLines(lines.concat());\n  };\n\n  const handleMouseUp = (e: any) => {\n    if (isDrawing.current) {\n      stopDrawing();\n\n      finishLine(e);\n    }\n  };\n\n  /**\n   * Handles case when a current drawing is stopped off stage\n   * @param e - mouse event\n   */\n  const handleOffsetMouseUp = () => {\n    stopDrawing();\n  };\n\n  /**\n   * Handles case when a current drawing is started off stage\n   * @param e - mouse event\n   */\n  const handleOffsetMouseDown = () => {\n    startDrawing();\n  };\n\n  /**\n   * Handles when mouse leaves the stage\n   * @param e - konva mouse event\n   */\n  const handleMouseLeave = (e: any) => {\n    if (isDrawing.current) {\n      finishLine(e);\n\n      window.document.addEventListener('mouseup', handleOffsetMouseUp);\n      window.document.addEventListener('touchEnd', handleOffsetMouseUp);\n      window.document.addEventListener('mousedown', handleOffsetMouseDown);\n      window.document.addEventListener('touchStart', handleOffsetMouseDown);\n    }\n  };\n\n  /**\n   * Handles when mouse reenters the state\n   * @param e\n   */\n  const handleMouseEnter = (e: any) => {\n    if (isDrawing.current) {\n      startLine(e);\n    }\n    window.document.removeEventListener('mouseup', handleOffsetMouseUp);\n    window.document.removeEventListener('touchEnd', handleOffsetMouseUp);\n    window.document.removeEventListener('mousedown', handleOffsetMouseDown);\n    window.document.removeEventListener('touchStart', handleOffsetMouseDown);\n  };\n\n  const onClear = () => setLines([]);\n\n  const onUndo = () => {\n    const linesCopy = [...lines];\n    const drawingHistoryCopy = [...drawingHistory];\n    const lastLine: CanvasLine | undefined = linesCopy.pop();\n    if (lastLine) {\n      drawingHistoryCopy.push(lastLine);\n      setLines(linesCopy);\n      setDrawingHistory(drawingHistoryCopy);\n    }\n  };\n\n  const onRedo = () => {\n    const linesCopy = [...lines];\n    const drawingHistoryCopy = [...drawingHistory];\n    const lastUndoLine = drawingHistoryCopy.pop();\n    if (lastUndoLine) {\n      linesCopy.push(lastUndoLine);\n      setLines(linesCopy);\n      setDrawingHistory(drawingHistoryCopy);\n    }\n  };\n\n  const strokeWidthBySize =\n    {\n      small: 3,\n      medium: 5,\n      large: 7,\n    }?.[strokeWidth] ?? 5;\n\n  return (\n    <Space direction=\"vertical\" align=\"center\">\n      <Stage\n        width={width}\n        height={height || width}\n        onMouseDown={handleMouseDown}\n        onMousemove={handleMouseMove}\n        onMouseup={handleMouseUp}\n        onTouchStart={handleMouseDown}\n        onTouchMove={handleMouseMove}\n        onTouchEnd={handleMouseUp}\n        onMouseLeave={handleMouseLeave}\n        onMouseEnter={handleMouseEnter}\n        className={clsx('drawing-canvas', className)}\n        style={{ width: `${width}px`, height: `${height || width}px` }}\n        willReadFrequently={willReadFrequently}\n        id=\"drawing-canvas\"\n      >\n        <Layer>\n          {lines.map((line, i) => (\n            <Line\n              key={i}\n              points={line}\n              stroke=\"#222222\"\n              strokeWidth={strokeWidthBySize}\n              tension={0.5}\n              lineCap=\"round\"\n              globalCompositeOperation=\"source-over\"\n            />\n          ))}\n        </Layer>\n      </Stage>\n      {showControls && (\n        <Space>\n          <Button onClick={onUndo} disabled={lines.length === 0}>\n            <UndoOutlined />\n            <Translate pt=\"Desfazer\" en=\"Undo\" />\n          </Button>\n          <Button onClick={onRedo} disabled={drawingHistory.length === 0}>\n            <UndoOutlined />\n            <Translate pt=\"Refazer\" en=\"Redo\" />\n          </Button>\n          <Button onClick={onClear} disabled={lines.length === 0}>\n            <DeleteOutlined />\n            <Translate pt=\"Apagar\" en=\"Clear\" />\n          </Button>\n        </Space>\n      )}\n    </Space>\n  );\n};\n","import clsx from 'clsx';\n// Components\nimport HighlighterImport from 'react-highlight-words';\nimport { Translate } from 'components/language';\n// Sass\nimport './MovieReviewCard.scss';\n\n// TODO: Verify\nconst Highlighter = HighlighterImport as any;\n\ntype MovieReviewCardProps = {\n  /**\n   * The type of review\n   */\n  type: 'positive' | 'negative';\n  /**\n   * The review itself\n   */\n  text: string;\n  /**\n   * Optional list of words to be highlighted in the review\n   */\n  highlights?: string[];\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n};\n\nexport const MovieReviewCard = ({ type, text, highlights = [], className = '' }: MovieReviewCardProps) => {\n  const baseClass = 'movie-review-card';\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${type}`, className)}>\n      <span className={`${baseClass}__header`}>\n        {type === 'positive' ? (\n          <Translate pt=\"Crítica Positiva\" en=\"Positive Review\" />\n        ) : (\n          <Translate pt=\"Crítica Negativa\" en=\"Negative Review\" />\n        )}\n        {type === 'positive' ? ' 👏' : ' 🤮'}\n      </span>\n      <div className={`${baseClass}__content`}>\n        <Highlighter\n          className={`${baseClass}__text`}\n          highlightClassName={clsx(`${baseClass}__text-highlight`, `${baseClass}__text-highlight--${type}`)}\n          searchWords={highlights}\n          autoEscape={true}\n          textToHighlight={text}\n        />\n      </div>\n    </div>\n  );\n};\n","import { useDevFeatures } from 'hooks/useDevFeatures';\nimport { ReactNode } from 'react';\n\ntype DebugOnlyProps = {\n  dev?: boolean;\n  devOnly?: boolean;\n  div?: boolean;\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n};\n\n/**\n * Wrapper component for information only displayed if the debug mode is on\n * @param props\n * @returns\n */\nexport function DebugOnly({ children, div = false, dev = false, devOnly = false }: DebugOnlyProps) {\n  const { isDebugEnabled, isDevEnv } = useDevFeatures();\n\n  if (devOnly) {\n    if (div && isDevEnv) {\n      return <div>{children}</div>;\n    }\n\n    return isDevEnv ? <> {children}</> : <></>;\n  }\n\n  if ((dev && isDevEnv) || isDebugEnabled) {\n    if (div) {\n      return <div>{children}</div>;\n    }\n    return <>{children}</>;\n  }\n  return <></>;\n}\n","import { BugFilled } from '@ant-design/icons';\nimport { Button, ButtonProps } from 'antd';\nimport { DebugOnly } from './DebugOnly';\n\n/**\n * Button only available during dev only\n * @returns\n */\nexport function DevButton({ children, type, ...rest }: ButtonProps) {\n  return (\n    <DebugOnly devOnly>\n      <Button icon={<BugFilled />} type={type ?? 'primary'} {...rest}>\n        {children}\n      </Button>\n    </DebugOnly>\n  );\n}\n","import clsx from 'clsx';\n// Utils\nimport { getAnimationClass, getColorFromLetter } from 'utils/helpers';\n\ntype RibbonProps = {\n  label: string;\n  position?: 'absolute' | 'static';\n};\n\nexport function Ribbon({ label, position = 'absolute' }: RibbonProps): JSX.Element {\n  return (\n    <div className={clsx('ribbon', `ribbon--${position}`)}>\n      <div\n        className={clsx(\n          'ribbon__content',\n          `ribbon__content--${label}`,\n          `color-background--${getColorFromLetter(label)}`,\n          getAnimationClass('bounceIn')\n        )}\n      >\n        {label}\n      </div>\n    </div>\n  );\n}\n","import { Tooltip } from 'antd';\nimport clsx from 'clsx';\n// Utils\nimport { getAnimationClass, getAvatarColorById } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\n\ntype RibbonProps = {\n  player: GamePlayer;\n  position?: 'absolute' | 'static';\n};\n\nexport function PlayerRibbon({ player, position = 'absolute' }: RibbonProps): JSX.Element {\n  return (\n    <div className={clsx('ribbon', `ribbon--${position}`)}>\n      <div\n        className={clsx('ribbon__content', getAnimationClass('bounceIn'))}\n        style={{ backgroundColor: getAvatarColorById(player.avatarId) }}\n      >\n        <Tooltip title={player.name}>\n          <Avatar id={player.avatarId} size=\"small\" />\n        </Tooltip>\n      </div>\n    </div>\n  );\n}\n","import { PlayerRibbon } from './PlayerRibbon';\nimport { Ribbon } from './Ribbon';\n\ntype RibbonGroupProps = {\n  labels: string[] | GamePlayer[];\n};\n\nexport function RibbonGroup({ labels }: RibbonGroupProps) {\n  return (\n    <div className=\"ribbon-group ribbon--absolute\">\n      {labels.length > 0 &&\n        labels.map((label) =>\n          typeof labels[0] === 'string' ? (\n            <Ribbon\n              key={label as string}\n              label={label.length > 0 ? label.charAt(label.length - 1) : label}\n              position=\"static\"\n            />\n          ) : (\n            <PlayerRibbon player={label as GamePlayer} position=\"static\" />\n          )\n        )}\n    </div>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Sass\nimport './Instruction.scss';\n\ntype InstructionsProps = {\n  /**\n   * The content of the instruction\n   */\n  children: ReactNode;\n  /**\n   * Adds a semi transparent background (white or black opposite to the white property)\n   */\n  contained?: boolean;\n  /**\n   * Make text color white\n   */\n  white?: boolean;\n  /**\n   * Makes instruction width 100%\n   */\n  fullWidth?: boolean;\n  /**\n   * Custom class name\n   */\n  className?: string;\n};\n\n/**\n * Typography container for instructions\n */\nexport const Instruction = ({ children, white, className, contained, fullWidth }: InstructionsProps) => {\n  const baseClass = 'instruction';\n\n  return (\n    <Typography.Text\n      className={clsx(\n        baseClass,\n        contained && `${baseClass}--contained`,\n        white && `${baseClass}--white`,\n        fullWidth && `${baseClass}--full-width`,\n        className\n      )}\n      data-testid=\"instruction\"\n    >\n      {children}\n    </Typography.Text>\n  );\n};\n","// Components\nimport { Translate } from 'components/language';\nimport { RuleInstruction } from 'components/text';\nimport { pluralize } from 'utils/helpers';\n\ntype RoundsLeftInstructionProps = {\n  /**\n   * The state round object with current and total values\n   */\n  round: GameRound;\n};\n\n/**\n * Displays instructional sentence based on the number of rounds left for the game to end\n */\nexport function RoundsLeftInstruction({ round }: RoundsLeftInstructionProps) {\n  const left = (round?.total ?? 0) - (round?.current ?? 0);\n\n  if (left === 0 || round.forceLastRound) {\n    return (\n      <RuleInstruction type=\"event\">\n        <Translate pt=\"Essa foi a última rodada\" en=\"No more rounds left\" />\n      </RuleInstruction>\n    );\n  }\n\n  return (\n    <RuleInstruction type=\"tip\">\n      <Translate\n        pt={\n          <>\n            {pluralize(left, 'Falta', 'Faltam')} <strong>{left}</strong> {pluralize(left, 'rodada')} para o\n            jogo terminar...\n          </>\n        }\n        en={\n          <>\n            <strong>{left}</strong> {pluralize(left, 'round')} left for the game to end...\n          </>\n        }\n      />\n    </RuleInstruction>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Sass\nimport './TextHighlight.scss';\n\ntype TextHighlightProps = {\n  /**\n   * The text to be highlighted\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n};\n\nexport function TextHighlight({ children, className }: TextHighlightProps) {\n  return <span className={clsx('text-highlight', className)}>{children}</span>;\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Sass\nimport './Title.scss';\n\nexport type TitleProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Makes text white\n   */\n  white?: boolean;\n  /**\n   * Icon prefixing the title\n   */\n  icon?: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * The heading level (default: 2)\n   */\n  level?: 1 | 2 | 3 | 4 | 5;\n  /**\n   * The size of the title (default: medium)\n   */\n  size?: 'xx-small' | 'x-small' | 'small' | 'medium' | 'large';\n  /**\n   * The alignment of the text (default: center)\n   */\n  align?: 'left' | 'right' | 'center';\n};\n\nexport const Title = ({\n  children,\n  white,\n  icon,\n  className,\n  level = 2,\n  size = 'medium',\n  align = 'center',\n}: TitleProps) => {\n  return (\n    <Typography.Title\n      level={level}\n      className={clsx('title', `title--${size}`, `title--align-${align}`, white && 'title--white', className)}\n    >\n      {Boolean(icon) && icon}\n      {children}\n    </Typography.Title>\n  );\n};\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Typography, theme } from 'antd';\nimport {\n  AlertFilled,\n  BulbFilled,\n  ClockCircleFilled,\n  ExclamationCircleFilled,\n  MessageFilled,\n  PlayCircleFilled,\n  ReadFilled,\n  RobotFilled,\n  StarFilled,\n} from '@ant-design/icons';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Sass\nimport './RuleInstruction.scss';\n\ntype RuleInstructionsProps = {\n  /**\n   * The content of the rule instruction\n   */\n  children: ReactNode;\n  /**\n   * Makes instruction width 100%\n   */\n  fullWidth?: boolean;\n  /**\n   * Custom class name\n   */\n  className?: string;\n  /**\n   * The type of the rule instruction (default: rule)\n   * Rule is used for general rules\n   * Action is used when the player must do something\n   * Event is used when something happens like the result of an action or decision\n   * Alert is used when something very important needs attention (constant animation)\n   * Lore is used for story elements\n   * Scoring for result points (not rule)\n   * Wait for when the player must wait for something to happen\n   */\n  type: 'rule' | 'action' | 'event' | 'alert' | 'lore' | 'tip' | 'scoring' | 'wait' | 'bot';\n  /**\n   * Optional sound effect played when the component is rendered\n   */\n  sfx?: ReactNode;\n};\n\n/**\n * Typography container for rules instructions, if multiple lines, use <br /> to break lines\n * Do not use lists (ul, ol, li) inside this component\n * Add an icon on the left side\n */\nexport const RuleInstruction = ({\n  children,\n  className,\n  fullWidth,\n  type = 'rule',\n  sfx,\n}: RuleInstructionsProps) => {\n  const baseClass = 'rule-instruction';\n\n  const icon = {\n    action: <PlayCircleFilled />,\n    alert: <AlertFilled />,\n    event: <ExclamationCircleFilled />,\n    lore: <MessageFilled />,\n    rule: <ReadFilled />,\n    tip: <BulbFilled />,\n    scoring: <StarFilled />,\n    wait: <ClockCircleFilled />,\n    bot: <RobotFilled />,\n  }[type];\n\n  const animationClass = {\n    action: getAnimationClass('shakeX'),\n    alert: getAnimationClass('flash', { infinite: true, speed: 'fast' }),\n    event: getAnimationClass('tada', { repeat: 3, speed: 'fast' }),\n    lore: getAnimationClass('pulse'),\n    rule: getAnimationClass('pulse'),\n    tip: getAnimationClass('pulse'),\n    scoring: getAnimationClass('pulse'),\n    wait: getAnimationClass('pulse'),\n    bot: getAnimationClass('pulse'),\n  }[type];\n\n  const { token } = theme.useToken();\n  const color = type === 'action' ? { background: token.colorPrimary } : {};\n\n  return (\n    <div\n      className={clsx(baseClass, fullWidth && `${baseClass}--full-width`, className)}\n      data-testid=\"rule-instruction\"\n    >\n      <div className={clsx(`${baseClass}__icon`, `${baseClass}__icon--${type}`)} style={color}>\n        <div className={animationClass}>{icon}</div>\n      </div>\n      {sfx}\n      <Typography.Paragraph className={clsx(`${baseClass}__content`)}>{children}</Typography.Paragraph>\n    </div>\n  );\n};\n","import { MetricHighlight, MetricHighlightProps } from 'components/metrics/MetricHighlight';\nimport { AnimatedClockIcon } from 'icons/AnimatedClockIcon';\nimport { ReactNode } from 'react';\n\nconst padTime = (value: number) => (value < 10 ? `0${value}` : value);\n\ntype TimerClockProps = {\n  /**\n   * Replacement icon for the clock icon\n   */\n  icon?: ReactNode;\n  /**\n   * Optional children that comes after the time\n   */\n  children?: ReactNode;\n  /**\n   * Minutes\n   */\n  minutes?: number;\n  /**\n   * Seconds\n   */\n  seconds: number;\n} & Omit<MetricHighlightProps, 'icon' | 'children'>;\n\n/**\n * Timer highlight with countdown functionality\n */\nexport function TimerClock({\n  icon,\n  type,\n  iconSize,\n  children,\n  className = '',\n  iconPlacement = 'before',\n  minutes = 0,\n  seconds,\n}: TimerClockProps) {\n  return (\n    <MetricHighlight\n      icon={icon ?? <AnimatedClockIcon />}\n      type={type}\n      iconSize={iconSize}\n      className={className}\n      iconPlacement={iconPlacement}\n    >\n      {minutes}:{padTime(seconds)}\n      {children}\n    </MetricHighlight>\n  );\n}\n","import { Progress, ProgressProps } from 'antd';\n\ninterface TimerBarProps extends ProgressProps {\n  steps?: number;\n  value: number;\n  total: number;\n}\n\n/**\n * Time Bar presentational component used in timed operations\n * @param props\n * @returns\n */\nexport function TimerBar({\n  steps,\n  strokeLinecap,\n  total,\n  type = 'line',\n  value,\n  status = 'active',\n  ...props\n}: TimerBarProps) {\n  const percentage = 100 - (value * 100) / total;\n  return (\n    <Progress\n      percent={percentage}\n      steps={steps}\n      showInfo={false}\n      style={{ marginBottom: '1rem' }}\n      size={steps && steps > 30 ? 'small' : undefined}\n      type={type}\n      {...props}\n    />\n  );\n}\n","import clsx from 'clsx';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\n// Components\nimport { TimerBar } from './TimerBar';\n\ntype TimedTimerBarProps = {\n  /**\n   * Duration in seconds\n   */\n  duration: number;\n  /**\n   * Function executed when the time is up\n   */\n  onExpire: GenericFunction;\n  /**\n   * Number of ticks in the bar\n   */\n  steps?: number;\n  /**\n   * Type of bar. Default: line\n   */\n  type?: 'circle' | 'line' | 'dashboard';\n  /**\n   * Optional class name\n   */\n  className?: string;\n};\n\nexport function TimedTimerBar({ duration, onExpire, type, steps = 10, className }: TimedTimerBarProps) {\n  const { timeLeft } = useCountdown({\n    duration,\n    autoStart: true,\n    onExpire,\n  });\n\n  return (\n    <div className={clsx('timer-number', className)}>\n      {timeLeft} <TimerBar steps={steps} value={timeLeft} total={duration} type={type} /> {timeLeft}\n    </div>\n  );\n}\n","import { MetricHighlight, MetricHighlightProps } from 'components/metrics/MetricHighlight';\nimport { useCountdown, useCountdownSettings } from 'hooks/useCountdown';\nimport { AnimatedClockIcon } from 'icons/AnimatedClockIcon';\nimport { ReactNode } from 'react';\n\nconst padTime = (value: number) => (value < 10 ? `0${value}` : value);\n\ntype TimedTimerClockProps = {\n  /**\n   * Replacement icon for the clock icon\n   */\n  icon?: ReactNode;\n  /**\n   * Optional children that comes after the time\n   */\n  children?: ReactNode;\n} & useCountdownSettings &\n  Omit<MetricHighlightProps, 'icon' | 'children'>;\n\n/**\n * Timer highlight with countdown functionality\n */\nexport function TimedTimerClock({\n  icon,\n  type,\n  iconSize,\n  children,\n  className = '',\n  iconPlacement = 'before',\n  ...timerProps\n}: TimedTimerClockProps) {\n  const { minutes, seconds } = useCountdown({ ...timerProps });\n\n  return (\n    <MetricHighlight\n      icon={icon ?? <AnimatedClockIcon />}\n      type={type}\n      iconSize={iconSize}\n      className={className}\n      iconPlacement={iconPlacement}\n    >\n      {minutes}:{padTime(seconds)}\n      {children}\n    </MetricHighlight>\n  );\n}\n","import { useEffect } from 'react';\nimport { useEffectOnce } from 'react-use';\nimport { useGlobalState } from './useGlobalState';\nimport { useLocalStorage } from './useLocalStorage';\n\ntype UseBlueCards = {\n  blurredCards: BooleanDictionary;\n  shouldBeBlurred: (cardId?: string) => boolean;\n  blurCard: (cardId: string) => void;\n  isBlurEnabled: boolean;\n};\n\n/**\n * Add card ids to the blur dictionary\n * @returns the dictionary of blurred ids, the function to add a blur card, the function to check if a card should be blurred, the flag indicating if the feature was enabled by the user\n */\nexport function useBlurCards(): UseBlueCards {\n  const [blurredCards, setBlurredCards] = useGlobalState('blurredCards');\n  const [blurEnabled] = useGlobalState('blurEnabled');\n  const [getLocalStorage, setLocalStorage] = useLocalStorage();\n\n  const blurCard = (cardId: string) => {\n    setBlurredCards((s: BooleanDictionary) => ({\n      ...s,\n      [cardId]: !s?.[cardId] ?? true,\n    }));\n  };\n\n  const shouldBeBlurred = (cardId?: string) => {\n    return Boolean(cardId && blurEnabled && blurredCards?.[cardId]);\n  };\n\n  useEffectOnce(() => {\n    setBlurredCards(getLocalStorage('blurredCards') ?? {});\n  });\n\n  useEffect(() => {\n    if (Object.keys(blurredCards ?? {}).length) {\n      setLocalStorage({ blurredCards: blurredCards ?? {} });\n    }\n  }, [blurredCards, setLocalStorage]);\n\n  return {\n    blurredCards,\n    shouldBeBlurred,\n    blurCard,\n    isBlurEnabled: blurEnabled,\n  };\n}\n","import { isDevEnv } from '../utils/helpers';\nimport { useGlobalState } from './useGlobalState';\n\n/**\n * Controls debug and dev environment\n * @returns\n */\nexport function useDevFeatures() {\n  const [isDebugEnabled, setIsDebugEnabled] = useGlobalState('isDebugEnabled');\n\n  const toggleDevFeatures = () => {\n    setIsDebugEnabled((s) => !s);\n  };\n\n  return {\n    isDevEnv,\n    isDebugEnabled,\n    toggleDevFeatures,\n  };\n}\n","type TDUrlKind = 'tdi' | 'tdr' | 'tdi-data';\n\n/**\n * Returns the URL for the given kind of resource\n * @param kind the kind of resource\n * @returns the URL for the given kind of resource\n */\nexport function useTDBaseUrl(kind: TDUrlKind): string {\n  const base = process.env.REACT_APP_TD_BASE_URL;\n\n  switch (kind) {\n    case 'tdi':\n      return `${base}/${process.env.REACT_APP_TDI_IMAGES}`;\n    case 'tdr':\n      return `${base}/${process.env.REACT_APP_TD_RESOURCES}`;\n    case 'tdi-data':\n      return `${base}/${process.env.REACT_APP_TDI_DATA}`;\n    default:\n      return '';\n  }\n}\n","export function AnimatedClockIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fbfbfb\"\n        d=\"M464 256c0 114.9-93.1 208-208 208S48 370.9 48 256 141.1 48 256 48s208 93.1 208 208z\"\n      ></path>\n      <path\n        fill=\"#e3effa\"\n        d=\"M464 256c0-114.9-93.2-208-208.1-207.9-67 0-130 32.4-169 86.9 93.4-66.9 223.3-45.4 290.2 47.9 51.9 72.4 51.9 169.8 0 242.3C431.7 386.1 464 323.1 464 256z\"\n      ></path>\n      <path\n        fill=\"#fcc369\"\n        d=\"M256 8c137 0 248 111 248 248S393 504 256 504 8 393 8 256 119 8 256 8zm0 456c114.9 0 208-93.1 208-208S370.9 48 256 48 48 141.1 48 256s93.1 208 208 208z\"\n      ></path>\n      <path\n        fill=\"#ed9b52\"\n        d=\"M256 32C132.3 32 32 132.3 32 256s100.3 224 224 224 224-100.3 224-224S379.7 32 256 32zm0 432c-114.9 0-208-93.1-208-208S141.1 48 256 48s208 93.1 208 208-93.1 208-208 208z\"\n      ></path>\n      <path d=\"M256 496c-132.5-.1-239.9-107.5-240-240 0-4.4-3.6-8-8-8s-8 3.6-8 8c0 141.4 114.6 256 256 256.1 109.6 0 207-69.7 242.4-173.5l-15.1-5.2C450.1 430.7 358.7 496 256 496zm0-496C133.8.1 28.6 86.6 4.8 206.5l15.7 3.1C46.3 79.5 172.6-5 302.6 20.7s214.6 152.1 188.8 282.1c-1 5.1-2.2 10.1-3.5 15.1l15.5 4.1c36.4-136.7-45-277-181.8-313.4C300.2 2.9 278.1 0 256 0zM18 225l-15.9-2c-.7 5.4-1.2 10.9-1.6 16.5l16 1c.3-5.2.8-10.4 1.5-15.5z\"></path>\n      <path d=\"M256 472c119.3 0 216-96.7 216-216S375.3 40 256 40 40 136.7 40 256c.1 119.2 96.8 215.9 216 216zm-8-415.8V88h16V56.2c104.1 4.3 187.5 87.7 191.8 191.8H424v16h31.8c-4.3 104.1-87.7 187.5-191.8 191.8V424h-16v31.8C143.9 451.5 60.5 368.1 56.2 264H88v-16H56.2C60.5 143.9 143.9 60.5 248 56.2z\"></path>\n\n      <g>\n        <path\n          fill=\"#555fa3\"\n          d=\"M273 141.6v114.24a15.55 15.55 0 01-3.68 10.16l-50.24 61.12a14.47 14.47 0 01-20.42 1.25 14.32 14.32 0 01-2.78-3.33 18.75 18.75 0 012.4-22.64l40.8-48.16A7.77 7.77 0 00241 249V141.6a16.07 16.07 0 1132-3 15.44 15.44 0 010 3z\"\n        ></path>\n        <path d=\"M206.6 339.94c.56 0 1.11.06 1.67.06a22.7 22.7 0 0016.95-7.83l50.31-61.05a24 24 0 005.47-15.26V141.6a24 24 0 10-48-3 25.69 25.69 0 000 3v107.47l-40.62 48a26.49 26.49 0 00-3.2 32.38 23.05 23.05 0 0017.42 10.49zm-2.18-32.34l40.8-48.18a16.1 16.1 0 003.78-10.36V141.6a8.14 8.14 0 1116 0v114.26a8 8 0 01-1.82 5.08l-50.05 60.76a6.37 6.37 0 01-5.32 2.28 7.05 7.05 0 01-5.29-3.39 10.81 10.81 0 011.89-13z\"></path>\n        <animateTransform\n          attributeName=\"transform\"\n          dur=\"2s\"\n          from=\"0 256 256\"\n          repeatCount=\"indefinite\"\n          to=\"360 256 256\"\n          type=\"rotate\"\n        ></animateTransform>\n      </g>\n    </svg>\n  );\n}\n","export function BoxBlankIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ababab\"\n        d=\"M473.2 481.1H38.8a31.3 31.3 0 01-31.3-31.3V45.2A37.7 37.7 0 0145.2 7.5h421.6a37.7 37.7 0 0137.7 37.7v404.6a31.3 31.3 0 01-31.3 31.3z\"\n      ></path>\n      <path\n        fill=\"#878787\"\n        d=\"M504.5 45.2v404.6a31.3 31.3 0 01-31.3 31.3H452a31.3 31.3 0 0031.3-31.3V45.2a37.7 37.7 0 00-37.7-37.7h21.1a37.8 37.8 0 0137.8 37.7z\"\n      ></path>\n      <path\n        fill=\"#ababab\"\n        d=\"M434.7 436.5H77.3a25.6 25.6 0 01-25.6-25.6V82.8A30.8 30.8 0 0182.5 52h347.1a30.8 30.8 0 0130.8 30.8v328.1a25.7 25.7 0 01-25.7 25.6z\"\n      ></path>\n      <path\n        fill=\"#878787\"\n        d=\"M429.5 52.1h-27.4a30.8 30.8 0 0130.8 30.8V411a25.6 25.6 0 01-25.6 25.6h27.4a25.6 25.6 0 0025.6-25.6V82.8a30.7 30.7 0 00-30.8-30.7z\"\n      ></path>\n      <path d=\"M512 45.2A45.5 45.5 0 00466.8 0H45.2A45.4 45.4 0 000 45.2v404.6c0 20.5 17 38.8 38.8 38.8h357.4a7.5 7.5 0 000-15H38.8a24.4 24.4 0 01-11.4-2.9l33.1-31.3a33 33 0 0016.8 4.6h357.4a33 33 0 0016.8-4.6l33.1 31.3a23.2 23.2 0 01-11.4 2.9h-42a7.5 7.5 0 100 15h42a39 39 0 0038.8-38.8zM466.8 15a29.9 29.9 0 0116 4.6l-32.8 31a37.8 37.8 0 00-20.5-6h-347a37.6 37.6 0 00-20.5 6l-32.8-31a29.9 29.9 0 0116-4.6zM15 449.8V45.2a30.6 30.6 0 013.8-14.7L51.1 61a38.5 38.5 0 00-6.9 21.9V411a32.9 32.9 0 005.4 18.1l-32.4 30.7a24.5 24.5 0 01-2.2-10zM77.3 429a18.1 18.1 0 01-18.1-18.1V82.8a23.3 23.3 0 0123.3-23.3h347.1a23.3 23.3 0 0123.3 23.3v22.5a7.5 7.5 0 0015 0V82.8a38.5 38.5 0 00-6.9-21.9l32.3-30.5a30.6 30.6 0 013.8 14.7v404.6a23.5 23.5 0 01-2.2 9.9l-32.4-30.7a32.9 32.9 0 005.4-18.1V141.6a7.5 7.5 0 00-15 0V411a18.1 18.1 0 01-18.1 18.1z\"></path>\n    </svg>\n  );\n}\n","export function BoxCheckMarkIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#69bb69\"\n        d=\"M473.2 481.1H38.8a31.28 31.28 0 01-31.3-31.3V45.2A37.73 37.73 0 0145.2 7.5h421.6a37.73 37.73 0 0137.7 37.7v404.6a31.28 31.28 0 01-31.3 31.3z\"\n      ></path>\n      <path\n        fill=\"#53b652\"\n        d=\"M504.5 45.2v404.6a31.28 31.28 0 01-31.3 31.3H452a31.28 31.28 0 0031.3-31.3V45.2a37.73 37.73 0 00-37.7-37.7h21.1a37.75 37.75 0 0137.8 37.7z\"\n      ></path>\n      <path\n        fill=\"#69bb69\"\n        d=\"M434.7 436.5H77.3a25.65 25.65 0 01-25.6-25.6V82.8A30.81 30.81 0 0182.5 52h347.1a30.81 30.81 0 0130.8 30.8v328.1a25.73 25.73 0 01-25.7 25.6z\"\n      ></path>\n      <path\n        fill=\"#53b652\"\n        d=\"M429.5 52.1h-27.4a30.81 30.81 0 0130.8 30.8V411a25.65 25.65 0 01-25.6 25.6h27.4a25.65 25.65 0 0025.6-25.6V82.8a30.73 30.73 0 00-30.8-30.7z\"\n      ></path>\n      <path d=\"M512 45.2C512 21.1 492.1 0 466.8 0H45.2C20.7-.1.1 20.1 0 45.2v404.6c0 20.5 17 38.8 38.8 38.8h357.4a7.5 7.5 0 000-15H38.8a24.41 24.41 0 01-11.4-2.9l33.1-31.3a33.05 33.05 0 0016.8 4.6h357.4a33.05 33.05 0 0016.8-4.6l33.1 31.3a23.28 23.28 0 01-11.4 2.9h-42a7.5 7.5 0 000 15h42c20.9.1 38.7-17.2 38.8-38.8zM466.8 15a29.94 29.94 0 0116 4.6l-32.8 31a37.88 37.88 0 00-20.5-6h-347a37.63 37.63 0 00-20.5 6l-32.8-31a29.94 29.94 0 0116-4.6zM15 449.8V45.2a30.62 30.62 0 013.8-14.7L51.1 61a38.48 38.48 0 00-6.9 21.9V411a32.94 32.94 0 005.4 18.1l-32.4 30.7a24.32 24.32 0 01-2.2-10zM77.3 429a18.1 18.1 0 01-18.1-18.1V82.8a23.32 23.32 0 0123.3-23.3h347.1a23.32 23.32 0 0123.3 23.3v22.5a7.5 7.5 0 0015 0V82.8a38.48 38.48 0 00-6.9-21.9l32.3-30.5a30.62 30.62 0 013.8 14.7v404.6a23.51 23.51 0 01-2.2 9.9l-32.4-30.7a32.94 32.94 0 005.4-18.1V141.6a7.5 7.5 0 00-15 0V411a18.1 18.1 0 01-18.1 18.1z\"></path>\n      <path\n        fill=\"#ffeee6\"\n        d=\"M216.9 341.4a36 36 0 01-25.4-10.5l-44.2-44.2a35.921 35.921 0 0150.8-50.8l18.7 18.7 96.9-96.9a35.921 35.921 0 1150.8 50.8L242.3 330.8a35.54 35.54 0 01-25.4 10.6z\"\n      ></path>\n      <path d=\"M329.4 228.2a11.03 11.03 0 0015.6 15.6l27.5-27.5a47 47 0 00-66.4-66.4L217 239l-11-11a47 47 0 10-66.4 66.4l44.2 44.2a47.08 47.08 0 0066.4 0l57.2-57.2a11.03 11.03 0 10-15.6-15.6L234.6 323a24.87 24.87 0 01-35.2 0l-44.2-44.2a25 25 0 0135.3-35.3l18.7 18.7a11 11 0 007.8 3.2 11.4 11.4 0 007.8-3.2l96.9-96.9a25 25 0 1135.3 35.3z\"></path>\n    </svg>\n  );\n}\n","export function BoxMinusIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#8795de\"\n        d=\"M473.16 492.81H38.84A31.34 31.34 0 017.5 461.47V56.87a37.68 37.68 0 0137.68-37.68h421.64a37.68 37.68 0 0137.68 37.68v404.6a31.34 31.34 0 01-31.34 31.34z\"\n      ></path>\n      <path\n        fill=\"#6c7fd8\"\n        d=\"M504.5 56.87v404.6a31.34 31.34 0 01-31.34 31.34h-21.12a31.34 31.34 0 0031.34-31.34V56.87a37.68 37.68 0 00-37.68-37.68h21.12a37.68 37.68 0 0137.68 37.68z\"\n      ></path>\n      <path\n        fill=\"#8795de\"\n        d=\"M434.7 448.24H77.3a25.6 25.6 0 01-25.61-25.6V94.53c0-17 13.78-30.78 30.78-30.78h347.06c17 0 30.78 13.79 30.78 30.79v328.08a25.6 25.6 0 01-25.6 25.6z\"\n      ></path>\n      <path\n        fill=\"#6c7fd8\"\n        d=\"M429.53 63.76h-27.44c17 0 30.78 13.79 30.78 30.79v328.08a25.6 25.6 0 01-25.6 25.6h27.44a25.6 25.6 0 0025.6-25.6V94.55c0-17-13.78-30.79-30.78-30.79z\"\n      ></path>\n      <path\n        fill=\"#ffeee6\"\n        d=\"M137.55 290.39v-68.78c0-8.2 6.64-14.84 14.83-14.84h207.24c8.19 0 14.83 6.65 14.83 14.84v68.78c0 8.2-6.64 14.84-14.83 14.84H152.38c-8.19 0-14.83-6.65-14.83-14.84z\"\n      ></path>\n      <path\n        fill=\"#ffdfcf\"\n        d=\"M359.62 206.77h-27.5c8.19 0 14.83 6.65 14.83 14.84v68.78c0 8.2-6.64 14.84-14.83 14.84h27.5c8.19 0 14.83-6.65 14.83-14.84v-68.78c0-8.2-6.64-14.84-14.83-14.84z\"\n      ></path>\n      <path d=\"M512 56.87c.04-24.08-19.87-45.18-45.18-45.18H45.18C20.73 11.6.15 31.79 0 56.87v404.6C-.04 482 16.96 500.3 38.84 500.31h357.45a7.5 7.5 0 100-15H38.84a23.7 23.7 0 01-11.45-2.93l33.07-31.26a32.89 32.89 0 0016.83 4.62h357.42c6.14 0 11.9-1.69 16.83-4.62l33.07 31.26a23.7 23.7 0 01-11.45 2.93H431.2a7.5 7.5 0 100 15h41.96c20.89.07 38.68-17.18 38.84-38.84zm-45.18-30.18a30 30 0 0116.01 4.61l-32.76 30.97c-5.94-3.8-12.99-6-20.54-6H82.47c-7.55 0-14.6 2.2-20.54 6L29.17 31.3a30 30 0 0116.01-4.61zM15 461.47V56.87c0-5.33 1.4-10.34 3.83-14.7L51.1 72.66a38.05 38.05 0 00-6.9 21.89v328.08c0 6.69 2 12.9 5.41 18.12L17.17 471.4a23.71 23.71 0 01-2.17-9.93zm62.3-20.73c-9.99 0-18.11-8.13-18.11-18.1V94.53a23.3 23.3 0 0123.28-23.28h347.06a23.3 23.3 0 0123.28 23.29v22.53a7.5 7.5 0 1015 0V94.55c0-8.14-2.56-15.68-6.9-21.9l32.26-30.48a29.98 29.98 0 013.83 14.7v404.6c0 3.54-.78 6.9-2.17 9.93l-32.43-30.65a32.9 32.9 0 005.41-18.12V153.28a7.5 7.5 0 10-15 0v269.35c0 9.98-8.12 18.1-18.1 18.1z\"></path>\n      <path d=\"M359.62 199.27H152.38a22.36 22.36 0 00-22.33 22.34v68.78a22.36 22.36 0 0022.33 22.34h31.69a7.5 7.5 0 100-15h-31.69a7.35 7.35 0 01-7.33-7.34v-68.78c0-4.05 3.29-7.34 7.33-7.34h207.24c4.04 0 7.33 3.3 7.33 7.34v68.78c0 4.04-3.29 7.34-7.33 7.34H218.7a7.5 7.5 0 100 15h140.92a22.36 22.36 0 0022.33-22.34V221.6a22.36 22.36 0 00-22.33-22.34z\"></path>\n    </svg>\n  );\n}\n","export function BoxQuestionMarkIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffd15b\"\n        d=\"M473.2 481.1H38.8a31.28 31.28 0 01-31.3-31.3V45.2A37.73 37.73 0 0145.2 7.5h421.6a37.73 37.73 0 0137.7 37.7v404.6a31.28 31.28 0 01-31.3 31.3z\"\n      ></path>\n      <path\n        fill=\"#ffc344\"\n        d=\"M504.5 45.2v404.6a31.28 31.28 0 01-31.3 31.3H452a31.28 31.28 0 0031.3-31.3V45.2a37.73 37.73 0 00-37.7-37.7h21.1a37.75 37.75 0 0137.8 37.7z\"\n      ></path>\n      <path\n        fill=\"#ffd15b\"\n        d=\"M434.7 436.5H77.3a25.65 25.65 0 01-25.6-25.6V82.8A30.81 30.81 0 0182.5 52h347.1a30.81 30.81 0 0130.8 30.8v328.1a25.73 25.73 0 01-25.7 25.6z\"\n      ></path>\n      <path\n        fill=\"#ffc344\"\n        d=\"M429.5 52.1h-27.4a30.81 30.81 0 0130.8 30.8V411a25.65 25.65 0 01-25.6 25.6h27.4a25.65 25.65 0 0025.6-25.6V82.8a30.73 30.73 0 00-30.8-30.7z\"\n      ></path>\n      <path d=\"M512 45.2C512 21.1 492.1 0 466.8 0H45.2C20.7-.1.1 20.1 0 45.2v404.6c0 20.5 17 38.8 38.8 38.8h357.4a7.5 7.5 0 000-15H38.8a24.41 24.41 0 01-11.4-2.9l33.1-31.3a33.05 33.05 0 0016.8 4.6h357.4a33.05 33.05 0 0016.8-4.6l33.1 31.3a23.28 23.28 0 01-11.4 2.9h-42a7.5 7.5 0 000 15h42c20.9.1 38.7-17.2 38.8-38.8zM466.8 15a29.94 29.94 0 0116 4.6l-32.8 31a37.88 37.88 0 00-20.5-6h-347a37.63 37.63 0 00-20.5 6l-32.8-31a29.94 29.94 0 0116-4.6zM15 449.8V45.2a30.62 30.62 0 013.8-14.7L51.1 61a38.48 38.48 0 00-6.9 21.9V411a32.94 32.94 0 005.4 18.1l-32.4 30.7a24.32 24.32 0 01-2.2-10zM77.3 429a18.1 18.1 0 01-18.1-18.1V82.8a23.32 23.32 0 0123.3-23.3h347.1a23.32 23.32 0 0123.3 23.3v22.5a7.5 7.5 0 0015 0V82.8a38.48 38.48 0 00-6.9-21.9l32.3-30.5a30.62 30.62 0 013.8 14.7v404.6a23.51 23.51 0 01-2.2 9.9l-32.4-30.7a32.94 32.94 0 005.4-18.1V141.6a7.5 7.5 0 00-15 0V411a18.1 18.1 0 01-18.1 18.1z\"></path>\n      <path\n        fill=\"#f9f7f8\"\n        d=\"M254.4 316.2a24.16 24.16 0 01-24.2-24.2v-10.3a56.24 56.24 0 0137.4-53.1 39.72 39.72 0 10-52.5-43.1 34.35 34.35 0 00-.4 5.6 24.2 24.2 0 01-48.4 0 98.67 98.67 0 01.8-12.2c6.3-45.4 47.2-78.6 93.1-75.6 43.5 2.9 78.8 37.8 81.9 81.3a88.46 88.46 0 01-58.5 89.6 7.92 7.92 0 00-5.2 7.5V292a23.86 23.86 0 01-24 24.2zm0 71.9a24.16 24.16 0 01-24.2-24.2v-.2a24.2 24.2 0 1148.4 0v.2a24.16 24.16 0 01-24.2 24.2z\"\n      ></path>\n      <path\n        fill=\"#dedbee\"\n        d=\"M188.6 179a83.33 83.33 0 00-.8 12.2 24.15 24.15 0 0013.5 21.7 23.75 23.75 0 01-10.7 2.5 24.22 24.22 0 01-24.2-24.2 82.46 82.46 0 01.9-12.2c6.3-45.4 47.2-78.6 93.1-75.6 1.6.1 3.3.3 4.9.5a88.36 88.36 0 00-76.7 75.1zM289 228.6a56.34 56.34 0 00-37.4 53.1V292a24.15 24.15 0 0013.5 21.7 23.75 23.75 0 01-10.7 2.5 24.16 24.16 0 01-24.2-24.2v-10.3a56.24 56.24 0 0137.4-53.1 39.76 39.76 0 00-2.5-75.7 39.15 39.15 0 0113.3-1.4 39.75 39.75 0 0110.6 77.1zm-23.9 157a23.75 23.75 0 01-10.7 2.5 24.16 24.16 0 01-24.2-24.2v-.2a24.19 24.19 0 0134.9-21.7 24.15 24.15 0 00-13.5 21.7v.2a24 24 0 0013.5 21.7z\"\n      ></path>\n      <path d=\"M254.4 323.1a31 31 0 01-31-31v-10.3a63.26 63.26 0 0142-59.6 32.84 32.84 0 10-43.5-35.6 35.53 35.53 0 00-.3 4.6 31 31 0 01-62 0 96.49 96.49 0 01.9-13.2 94.54 94.54 0 017.9-26.7 6.84 6.84 0 1112.4 5.8 82.18 82.18 0 00-6.8 22.8 84.66 84.66 0 00-.8 11.3 17.3 17.3 0 1034.6 0 46.23 46.23 0 01.5-6.5c3.3-24 25-41.5 49.3-39.9a46.53 46.53 0 0112.4 90.3 49.46 49.46 0 00-32.8 46.6V292a17.3 17.3 0 1034.6 0v-10.3a14.75 14.75 0 019.7-14A81.12 81.12 0 10198 133.1a6.86 6.86 0 11-9.5-9.9 95.16 95.16 0 0172.4-26.7c46.9 3.1 84.9 40.8 88.3 87.7a95.2 95.2 0 01-63 96.5 1.11 1.11 0 00-.6 1.1v10.3a31.26 31.26 0 01-31.2 31zm0 71.9a31 31 0 01-31-31v-.2a31 31 0 1162 0v.2a30.9 30.9 0 01-31 31zm0-48.6a17.37 17.37 0 00-17.3 17.3v.2a17.3 17.3 0 1034.6 0v-.2a17.31 17.31 0 00-17.3-17.3z\"></path>\n    </svg>\n  );\n}\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Components\nimport { DualTranslate, Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n\ntype DecisionButtonsProps = {\n  step: number;\n  onClick: (step: number, value: boolean) => void;\n  prompt: DualLanguageValue;\n};\n\nexport function DecisionButtons({ step, onClick, prompt }: DecisionButtonsProps) {\n  return (\n    <div className=\"container\">\n      <Instruction>\n        <DualTranslate>{prompt}</DualTranslate>\n      </Instruction>\n      <Space wrap className=\"space-container\" align=\"center\">\n        <Button type=\"primary\" size=\"large\" onClick={() => onClick(step, true)}>\n          <Translate pt=\"Sim\" en=\"Yes\" />\n        </Button>\n        <Button type=\"primary\" danger size=\"large\" onClick={() => onClick(step, false)}>\n          <Translate pt=\"Não\" en=\"No\" />\n        </Button>\n      </Space>\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Components\nimport { IconAvatar } from 'components/avatars';\nimport { BoxBlankIcon } from 'icons/BoxBlankIcon';\nimport { BoxCheckMarkIcon } from 'icons/BoxCheckMarkIcon';\nimport { BoxMinusIcon } from 'icons/BoxMinusIcon';\nimport { BoxQuestionMarkIcon } from 'icons/BoxQuestionMarkIcon';\n\nconst getActiveIcon = (value?: boolean, active?: boolean) => {\n  if (value) return BoxCheckMarkIcon;\n  if (value === false) return BoxMinusIcon;\n  if (active) return BoxQuestionMarkIcon;\n  return BoxBlankIcon;\n};\n\ntype ResultsProps = {\n  results: boolean[];\n  steps: PlainObject[];\n  activeStep: number;\n};\nexport function Results({ steps, results, activeStep }: ResultsProps) {\n  return (\n    <Space className=\"space-container full-width\" wrap>\n      {steps.map((_, index) => {\n        const ActiveIcon = getActiveIcon(results[index], activeStep === index);\n        return <IconAvatar icon={<ActiveIcon />} />;\n      })}\n    </Space>\n  );\n}\n","import { random } from 'lodash';\n// Ant Design Resources\nimport { Space } from 'antd';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\nimport { DecisionButtons } from './DecisionButtons';\nimport { TestStepProps } from '../TestArea';\nimport { ImageCardHand } from 'components/image-cards';\nimport { FloatingHand } from 'components/general/FloatingHand';\n\nconst hand = Array(8)\n  .fill(0)\n  .map((_, i) => `td-d${random(1, 10)}-${random(1, 168)}`);\n\nexport function FloatingHandTest({ onResult, step }: TestStepProps) {\n  return (\n    <Space className=\"space-container full-width\" direction=\"vertical\">\n      <Title level={2} size=\"small\">\n        <Translate pt=\"Mão de Cartas\" en=\"Hand of Cards\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt=\"Durante alguns jogos, você terá uma mão de cartas. Em um computador, as cartas são minimizadas na parte inferior e você pode arrastar o mouse para vê-las. Em um dispositivo móvel, elas são exibidas diretamente na parte inferior da tela\"\n          en=\"During some games, you will have a hand of cards. In a computer, you may hover the minimized cards at the bottom to see them. In a mobile device, they are displayed directly at the bottom of the screen.\"\n        />\n      </Instruction>\n\n      <DecisionButtons\n        step={step}\n        onClick={onResult}\n        prompt={{\n          pt: 'Você consegue ver 8 cartas?',\n          en: 'Are you able to see 8 cards?',\n        }}\n      />\n\n      <FloatingHand>\n        <ImageCardHand sizeRatio={8} hand={hand} />\n      </FloatingHand>\n    </Space>\n  );\n}\n","import { useState } from 'react';\nimport { random } from 'lodash';\n// Ant Design Resources\nimport { Space } from 'antd';\n// Utils\nimport { LETTERS } from 'utils/constants';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\nimport { DecisionButtons } from './DecisionButtons';\nimport { TestStepProps } from '../TestArea';\nimport { TransparentButton } from 'components/buttons';\nimport { ImageCard } from 'components/image-cards';\nimport { RibbonGroup } from 'components/ribbons';\n\nconst imageId = `cnt-${random(1, 100)}`;\n\nexport function RibbonsTest({ onResult, step }: TestStepProps) {\n  const [ribbons, setRibbons] = useState<string[]>(['A']);\n\n  const onAddRibbon = () => {\n    setRibbons([...ribbons, LETTERS[ribbons.length]]);\n  };\n\n  return (\n    <Space className=\"space-container full-width\" direction=\"vertical\">\n      <Title level={2} size=\"small\">\n        <Translate pt=\"Bandeirinhas e Seleções\" en=\"Ribbons and Selections\" />\n      </Title>\n\n      <Instruction contained>\n        <Translate\n          pt=\"Em vários de jogos de achar os pares, você verá bandeirinhas no canto de uma carta indicando que você selecionou a carta. Clique nas cartas abaixo para adicionar bandeirinhas.\"\n          en=\"In many games you will have to pair cards and images, you will see a ribbon on the corner of the card you selected. Click on the cards below to add ribbons\"\n        />\n      </Instruction>\n\n      <Space wrap className=\"space-container full-width\" direction=\"vertical\">\n        <TransparentButton onClick={onAddRibbon} style={{ position: 'relative' }}>\n          <RibbonGroup labels={ribbons} />\n          <ImageCard id={imageId} preview={false} />\n        </TransparentButton>\n      </Space>\n\n      <DecisionButtons\n        step={step}\n        onClick={onResult}\n        prompt={{\n          pt: 'Você conseguiu adicionar uma bandeirinha?',\n          en: 'Are you able to add a ribbon?',\n        }}\n      />\n    </Space>\n  );\n}\n","import { random } from 'lodash';\n// Ant Design Resources\nimport { Space } from 'antd';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\nimport { DecisionButtons } from './DecisionButtons';\nimport { TestStepProps } from '../TestArea';\nimport { AvatarCard, AvatarName, AvatarStrip } from 'components/avatars';\nimport { SuperHeroAvatar } from 'components/avatars/SuperHeroAvatar';\nimport { CostumeAvatar } from 'components/avatars/CostumeAvatar';\nimport { ClubberAvatar } from 'components/avatars/ClubberAvatar';\nimport { SheepAvatar } from 'games/mente-coletiva/components/SheepAvatar';\n\nconst superHeroId = String(random(0, 20));\n\nexport function AvatarsTest({ onResult, step }: TestStepProps) {\n  const player: GamePlayer = {\n    id: '1',\n    name: 'Player 1',\n    avatarId: String(random(0, 50)),\n    updatedAt: Date.now(),\n    ready: true,\n  };\n\n  return (\n    <Space className=\"space-container full-width\" direction=\"vertical\">\n      <Title level={2} size=\"small\">\n        <Translate pt=\"Avatares\" en=\"Avatars\" />\n      </Title>\n\n      <Instruction contained>\n        <Translate\n          pt=\"Alguns jogos usarão avatares customizados\"\n          en=\"Many games have timers in different types:\"\n        />\n      </Instruction>\n\n      <Space wrap className=\"space-container full-width\" direction=\"vertical\">\n        <AvatarCard player={player} />\n        <AvatarStrip player={player} />\n        <AvatarName player={player} />\n      </Space>\n\n      <Space wrap className=\"space-container full-width\">\n        <SuperHeroAvatar avatarId={player.avatarId} id={superHeroId} />\n        <CostumeAvatar avatarId={player.avatarId} id={superHeroId} />\n        <ClubberAvatar avatarId={player.avatarId} id={superHeroId} />\n        <SheepAvatar id={player.avatarId} sheepId={superHeroId} animate />\n      </Space>\n\n      <DecisionButtons\n        step={step}\n        onClick={onResult}\n        prompt={{\n          pt: 'Você consegue ver os 7 avatars (contando os sem figurinha, só o ícone)?',\n          en: 'Are you able to see all 7 avatars (counting the square ones only with the icon)?',\n        }}\n      />\n    </Space>\n  );\n}\n","import { useGlobalState } from 'hooks/useGlobalState';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useEffect } from 'react';\nimport { speak } from 'utils/speech';\n\ntype SpeakProps = {\n  text: DualLanguageValue;\n};\n\nexport function Speak({ text }: SpeakProps) {\n  const [volume] = useGlobalState('volume');\n  const { language } = useLanguage();\n\n  // Updated volume\n  useEffect(() => {\n    speak(text, language, volume);\n  }, [volume]); // eslint-disable-line\n\n  return <></>;\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Layout, Space, Steps } from 'antd';\n// Components\nimport { Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { LanguageTest } from './components/LanguageTest';\nimport { DrawingTest } from './components/DrawingTest';\nimport { Results } from './components/Results';\nimport { ResizingTest } from './components/ResizingTest';\nimport { FloatingHandTest } from './components/FloatingHandTest';\nimport { TimersTest } from './components/TimersTest';\nimport { TextHighlightTest } from './components/TextHighlightTest';\nimport { RibbonsTest } from './components/RibbonsTest';\nimport { AvatarsTest } from './components/AvatarsTest';\nimport { CompleteTest } from './components/CompleteTest';\nimport { SoundsTest } from './components/SoundsTest';\n\nconst steps = [\n  {\n    key: 'language',\n    title: '',\n    content: LanguageTest,\n  },\n  {\n    key: 'canvas',\n    title: '',\n    content: DrawingTest,\n  },\n  {\n    key: 'resizing',\n    title: '',\n    content: ResizingTest,\n  },\n  {\n    key: 'floating-hand',\n    title: '',\n    content: FloatingHandTest,\n  },\n  {\n    key: 'timers',\n    title: '',\n    content: TimersTest,\n  },\n  {\n    key: 'text-highlight',\n    title: '',\n    content: TextHighlightTest,\n  },\n  {\n    key: 'ribbons',\n    title: '',\n    content: RibbonsTest,\n  },\n  {\n    key: 'avatars',\n    title: '',\n    content: AvatarsTest,\n  },\n  {\n    key: 'sounds',\n    title: '',\n    content: SoundsTest,\n  },\n  {\n    key: 'done',\n    title: '',\n    content: CompleteTest,\n  },\n];\n\nexport type TestStepProps = {\n  step: number;\n  onResult: (stepIndex: number, value: boolean) => void;\n  results?: boolean[];\n};\n\nfunction TestArea() {\n  const [current, setCurrent] = useState(0);\n  const [results, setResults] = useState<boolean[]>([]);\n\n  const setResult = (stepIndex: number, value: boolean) => {\n    setResults((prev) => {\n      const newResults = [...prev];\n      newResults[stepIndex] = value;\n      return newResults;\n    });\n    setCurrent((prev) => prev + 1);\n  };\n\n  const Content = steps[current].content;\n\n  return (\n    <Layout.Content className=\"container\">\n      <Space className=\"space-container full-width\" direction=\"vertical\">\n        <Title level={1} size=\"large\">\n          <Translate pt=\"Área de Teste\" en=\"Test Area\" />\n        </Title>\n\n        <Steps current={current} items={steps} size=\"small\" />\n\n        <Content onResult={setResult} step={current} results={results} />\n\n        <Results results={results} steps={steps} activeStep={current} />\n      </Space>\n    </Layout.Content>\n  );\n}\n\nexport default TestArea;\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Components\nimport { Translate } from 'components/language';\nimport { LanguageButtons } from 'components/language/LanguageButtons';\nimport { Instruction, Title } from 'components/text';\nimport { DecisionButtons } from './DecisionButtons';\nimport { TestStepProps } from '../TestArea';\n\nexport function LanguageTest({ onResult, step }: TestStepProps) {\n  return (\n    <Space className=\"space-container full-width\" direction=\"vertical\">\n      <Title level={2} size=\"small\">\n        <Translate pt=\"Mudança de Idioma\" en=\"Language Switch\" />\n      </Title>\n\n      <Instruction contained>\n        <span>This is the test area. To begin, choose your language:</span>\n        <br />\n        <span>Essa é a área de teste. Para começar, selecione seu idioma:</span>\n      </Instruction>\n\n      <LanguageButtons />\n\n      <DecisionButtons\n        step={step}\n        onClick={onResult}\n        prompt={{\n          pt: 'Você está vendo a página no idioma selecionado?',\n          en: 'Are you seeing the page in the selected language?',\n        }}\n      />\n    </Space>\n  );\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Space } from 'antd';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\nimport { DecisionButtons } from './DecisionButtons';\nimport { TestStepProps } from '../TestArea';\nimport { DrawingCanvas } from 'components/canvas';\n\nexport function DrawingTest({ onResult, step }: TestStepProps) {\n  const [lines, setLines] = useState<any>([]);\n\n  return (\n    <Space className=\"space-container full-width\" direction=\"vertical\">\n      <Title level={2} size=\"small\">\n        <Translate pt=\"Desenho\" en=\"Desenho\" />\n      </Title>\n\n      <Instruction contained>\n        <Translate\n          pt=\"Desenhe um quadrado, um triângulo e um circulo no espaço abaixo\"\n          en=\"Draw a square, a triangle, and a circle in the canvas below\"\n        />\n      </Instruction>\n\n      <Space wrap className=\"space-container full-width\">\n        <DrawingCanvas lines={lines} setLines={setLines} showControls strokeWidth=\"small\" />\n      </Space>\n\n      <DecisionButtons\n        step={step}\n        onClick={onResult}\n        prompt={{\n          en: 'Were you able to draw without any major issues?',\n          pt: 'Você conseguiu desenhar sem muitos problemas?',\n        }}\n      />\n    </Space>\n  );\n}\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\nimport { DecisionButtons } from './DecisionButtons';\nimport { TestStepProps } from '../TestArea';\nimport { CanvasResizer } from 'components/canvas';\nimport { ImageCardBack } from 'components/image-cards';\nimport { useGlobalState } from 'hooks/useGlobalState';\n\nexport function ResizingTest({ onResult, step }: TestStepProps) {\n  const [canvasSize] = useGlobalState('canvasSize');\n\n  return (\n    <Space className=\"space-container full-width\" direction=\"vertical\">\n      <Title level={2} size=\"small\">\n        <Translate pt=\"Redimensionador\" en=\"Resizer\" />\n      </Title>\n\n      <Instruction contained>\n        <Translate\n          pt=\"O botão no canto superior esquerdo é o botão de redimensionar. Clique nele e tente redimensionar a imagem.\"\n          en=\"The button in the top left corner is the resize button. Click it and try to resize the image.\"\n        />\n      </Instruction>\n\n      <CanvasResizer />\n      <Space wrap className=\"space-container full-width\">\n        <ImageCardBack cardWidth={canvasSize ?? 50} />\n      </Space>\n\n      <DecisionButtons\n        step={step}\n        onClick={onResult}\n        prompt={{\n          pt: 'Você conseguiu redimensionar a carta sem muitos problemas?',\n          en: 'Were you able to resize without any major issues?',\n        }}\n      />\n    </Space>\n  );\n}\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\nimport { DecisionButtons } from './DecisionButtons';\nimport { TestStepProps } from '../TestArea';\nimport { TimedTimerBar, TimedTimerClock } from 'components/timers';\nimport { TimedButton } from 'components/buttons';\n\nexport function TimersTest({ onResult, step }: TestStepProps) {\n  return (\n    <Space className=\"space-container full-width\" direction=\"vertical\">\n      <Title level={2} size=\"small\">\n        <Translate pt=\"Cronômetros\" en=\"Timers\" />\n      </Title>\n\n      <Instruction contained>\n        <Translate pt=\"Vários jogos tem cronômetros:\" en=\"Many games have timers in different types:\" />\n      </Instruction>\n\n      <Space wrap className=\"space-container full-width\" direction=\"vertical\">\n        <TimedTimerBar duration={120} onExpire={() => {}} />\n        <TimedTimerClock duration={120} onExpire={() => {}} />\n        <TimedButton duration={120} onExpire={() => {}}>\n          Testando...\n        </TimedButton>\n      </Space>\n\n      <DecisionButtons\n        step={step}\n        onClick={onResult}\n        prompt={{\n          pt: 'Você consegue ver todos os 3 cronômetros mudando a medida do tempo?',\n          en: 'Are you able to see all 3 timers changing as time goes by?',\n        }}\n      />\n    </Space>\n  );\n}\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\nimport { DecisionButtons } from './DecisionButtons';\nimport { TestStepProps } from '../TestArea';\nimport { MovieReviewCard } from 'components/cards/MovieReviewCard';\nimport { useLanguage } from 'hooks/useLanguage';\n\nexport function TextHighlightTest({ onResult, step }: TestStepProps) {\n  const { translate } = useLanguage();\n  return (\n    <Space className=\"space-container full-width\" direction=\"vertical\">\n      <Title level={2} size=\"small\">\n        <Translate pt=\"Texto e Destaques de Texto\" en=\"Text Highlights\" />\n      </Title>\n\n      <Instruction contained>\n        <Translate pt=\"Algumas vezes o texto será destacado\" en=\"Sometimes text will be highlighted\" />\n      </Instruction>\n\n      <Space wrap className=\"space-container full-width\" direction=\"vertical\">\n        <MovieReviewCard\n          type=\"negative\"\n          text={translate(\n            'O abacate tem três pernas de bambu madeira',\n            'The avocado has three legs made of bamboo'\n          )}\n          highlights={['três pernas', 'three legs', 'madeira', 'bamboo']}\n        />\n      </Space>\n\n      <DecisionButtons\n        step={step}\n        onClick={onResult}\n        prompt={{\n          pt: 'Você consegue ler \"O abacate tem três pernas de bambu madeira\"?',\n          en: 'Are you able to read \"The Avocado has three legs made of bamboo\"?',\n        }}\n      />\n    </Space>\n  );\n}\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\nimport { DecisionButtons } from './DecisionButtons';\nimport { TestStepProps } from '../TestArea';\nimport { ArteRuimTimerSound } from 'components/audio/ArteRuimTimerSound';\nimport { useEffect, useState } from 'react';\nimport { DJPruPruPruSound } from 'components/audio/DJPruPruPruSound';\nimport { speak } from 'utils/speech';\nimport { Speak } from 'components/audio/Speak';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { delay } from 'lodash';\n\nexport function SoundsTest({ onResult, step }: TestStepProps) {\n  const [showAudio, setShowAudio] = useState<string>('');\n  const [volume, setVolume] = useGlobalState('volume');\n  const { language } = useLanguage();\n\n  useEffect(() => {\n    if (volume < 0.5) {\n      setVolume(0.5);\n    }\n  }, [volume, setVolume]);\n\n  const onStartAudio = async (value: string) => {\n    setShowAudio(value);\n    delay(() => setShowAudio(''), 3000);\n  };\n\n  return (\n    <Space className=\"space-container full-width\" direction=\"vertical\">\n      <Title level={2} size=\"small\">\n        <Translate pt=\"Sons\" en=\"Sounds\" />\n      </Title>\n\n      <Instruction contained>\n        <Translate\n          pt=\"Aperte os botões abaixo para ouvir sons de diferentes jogos\"\n          en=\"Press the buttons below to hear sounds from different games\"\n        />\n      </Instruction>\n\n      <Space wrap className=\"space-container full-width\" direction=\"vertical\">\n        <Button onClick={() => onStartAudio('arte-ruim')} disabled={Boolean(showAudio)}>\n          <Translate pt=\"Som 1\" en=\"Sound 1\" />\n        </Button>\n        <Button onClick={() => onStartAudio('dj')} disabled={Boolean(showAudio)}>\n          <Translate pt=\"Som 2\" en=\"Sound 2\" />\n        </Button>\n        <Button onClick={() => onStartAudio('dialog')} disabled={Boolean(showAudio)}>\n          <Translate pt=\"Som 3\" en=\"Sound 3\" />\n        </Button>\n        <Button\n          onClick={() =>\n            speak(\n              { pt: 'Olá, o seu teste 4 deu certo', en: 'Hello, you test 4 worked well.' },\n              language,\n              volume\n            )\n          }\n          disabled={Boolean(showAudio)}\n        >\n          <Translate pt=\"Som 4\" en=\"Sound 4\" />\n        </Button>\n        {showAudio === 'arte-ruim' && <ArteRuimTimerSound />}\n        {showAudio === 'dj' && <DJPruPruPruSound />}\n        {showAudio === 'dialog' && (\n          <Speak text={{ pt: 'Olá, o seu teste 3 deu certo', en: 'Hello, you test 3 worked well.' }} />\n        )}\n      </Space>\n\n      <DecisionButtons\n        step={step}\n        onClick={onResult}\n        prompt={{\n          pt: 'Você conseguiu ouvir todos os 4 sons?',\n          en: 'Were you able to hear all 4 sounds?',\n        }}\n      />\n    </Space>\n  );\n}\n","import { useEffect } from 'react';\nimport { useCopyToClipboard } from 'react-use';\n// Ant Design Resources\nimport { Button, Input, Space, App } from 'antd';\n// Components\nimport { Translate } from 'components/language';\nimport { Instruction, Title } from 'components/text';\nimport { TestStepProps } from '../TestArea';\n\nexport function CompleteTest({ results }: TestStepProps) {\n  const { message } = App.useApp();\n  const [state, copyToClipboard] = useCopyToClipboard();\n\n  useEffect(() => {\n    if (state.value) {\n      message.info(`Copied to clipboard: ${state.value}`);\n    }\n  }, [state, message]);\n\n  const result = `Tarde Divertida Test:\\n${(results ?? []).map((r) => (r ? `✅` : `❌`)).join('')}`;\n\n  return (\n    <Space className=\"space-container full-width\" direction=\"vertical\">\n      <Title level={2} size=\"small\">\n        <Translate pt=\"Pronto!\" en=\"Done!\" />\n      </Title>\n\n      <Instruction contained>\n        <Translate\n          pt=\"Compartilhe com quem te pediu para fazer o teste o resultado abaixo caso você tenha tipo algum resultado negativo.\"\n          en=\"Share the result below with whoever asked you to take this test if you had any negative results.\"\n        />\n      </Instruction>\n\n      <Space wrap className=\"space-container full-width\" direction=\"vertical\">\n        <Input.TextArea readOnly value={result} cols={30}></Input.TextArea>\n        <Button type=\"primary\" onClick={() => copyToClipboard(result)}>\n          <Translate pt=\"Copiar\" en=\"Copy\" />\n        </Button>\n      </Space>\n    </Space>\n  );\n}\n","import { getRandomItem } from './helpers';\n\n/**\n * Tells browser to speak out loud given sentence in given language in given volume\n * @param text\n * @param language\n * @param volume\n */\nexport function speak(\n  text: DualLanguageValue,\n  language: Language,\n  volume: number,\n  onEnd: GenericFunction = () => {}\n): void {\n  const utterance = new SpeechSynthesisUtterance(text[language]);\n  utterance.lang = language === 'pt' ? 'pt-BR' : 'en-US';\n  utterance.volume = volume;\n  utterance.addEventListener('end', onEnd);\n  window.speechSynthesis.speak(utterance);\n}\n\n/**\n * Give variety to the lobby greeting message\n * @param name\n * @returns\n */\nexport function getRandomWelcomeMessage(name: string): DualLanguageValue {\n  const options = [\n    {\n      pt: `Bem-vindo, ${name}!`,\n      en: `Welcome, ${name}!`,\n    },\n    {\n      pt: `Olha ele, ou ela, ou elix, aqui!`,\n      en: `Look at you! Ready to play!`,\n    },\n    {\n      pt: `Eba! Você entrou`,\n      en: `Yay, you're in!`,\n    },\n    {\n      pt: `Saudações, ${name}!`,\n      en: `Greetings, ${name}!`,\n    },\n    {\n      pt: `${name} chegou para abalar essa geringonça!`,\n      en: `${name} is here!`,\n    },\n    {\n      pt: `Presente, presidente. ${name} está aqui, fessô!`,\n      en: `You are here, ${name}!`,\n    },\n    {\n      pt: `O jogo vai ser muito mais sensual agora que você entrou`,\n      en: `The game will be so much better now that you're here!`,\n    },\n  ];\n\n  return getRandomItem(options);\n}\n\nexport function getRandomPositiveReadyMessage(name: string): DualLanguageValue {\n  const options = [\n    {\n      pt: `Pronto! Aguarde os outros jogadores estarem prontos. Boa sorte, ${name}`,\n      en: `Done! Now wait for the other players. Good luck, ${name}`,\n    },\n    {\n      pt: `Pronto! Agora é so esperar esses manés`,\n      en: `Done and Ready to play! Were you born ready?`,\n    },\n    {\n      pt: `Pronto! Cá entre nós, estou torcendo por você!`,\n      en: `Done! And can I tell you a secret? I'm rooting for you!`,\n    },\n  ];\n\n  return getRandomItem(options);\n}\n\nexport function getRandomNeutralReadyMessage(name: string): DualLanguageValue {\n  const options = [\n    {\n      pt: `Agora só resta rezar, ${name}, porque o jogo vai começar mesmo assim!`,\n      en: `Now all you have left is to pray ${name} because the game is starting anyway!`,\n    },\n    {\n      pt: `Tudo bem. Não se preocupe em vencer, já que as chances são bem baixas.`,\n      en: `It's alright. Don't worry too much about winning, there's very little chance anyway.`,\n    },\n    {\n      pt: `Ok, ok, ok. Respire fundo, e vamos lá!`,\n      en: `Okay, okay okay. Take deep breaths and let's go!`,\n    },\n  ];\n\n  return getRandomItem(options);\n}\n\nexport function getRandomNegativeReadyMessage(name: string): DualLanguageValue {\n  const options = [\n    {\n      pt: `Vixi ${name}, se fudeu então, porque o jogo vai começar mesmo assim!`,\n      en: `Oh ${name}, you are screwed because the game is starting anyway!`,\n    },\n    {\n      pt: `Que carai, eim. As regras foram explicadas super bem. Agora vai assim mesmo!`,\n      en: `W.T.F, the rules were so clear! Well, the game is starting anyway`,\n    },\n    {\n      pt: `Segura o tchan, amarra o tchan, segura o tchan-tchan-tchan-tchan-tchan. Estou cantando pra esquecer que você vai me decepcionar`,\n      en: `Oh my... let's hope for the best!`,\n    },\n  ];\n\n  return getRandomItem(options);\n}\n"],"names":["arteRuimTimer","require","ArteRuimTimerSound","useGlobalState","volume","useAudio","src","autoPlay","loop","audio","controls","useEffect","airHorn","DJPruPruPruSound","CanvasResizer","canvasSize","setCanvasSize","type","position","icon","DragOutlined","label","labelText","content","className","value","min","max","step","onChange","pt","en","CanvasSVG","drawing","width","height","strokeWidth","viewBox","konvaLines","JSON","parse","paths","map","lineArr","path","x","y","length","strokeWidthBySize","small","medium","large","xmlns","overflow","style","index","d","fill","stroke","strokeLinecap","strokeLinejoin","strokeMiterlimit","DrawingCanvas","lines","setLines","showControls","willReadFrequently","useState","drawingHistory","setDrawingHistory","isDrawing","useRef","startDrawing","current","stopDrawing","startLine","e","pos","target","getStage","getPointerPosition","Math","round","finishLine","point","lastLineEntry","concat","splice","handleMouseDown","handleMouseMove","lastLine","handleMouseUp","handleOffsetMouseUp","handleOffsetMouseDown","direction","align","onMouseDown","onMousemove","onMouseup","onTouchStart","onTouchMove","onTouchEnd","onMouseLeave","window","document","addEventListener","onMouseEnter","removeEventListener","clsx","id","line","i","points","tension","lineCap","globalCompositeOperation","onClick","linesCopy","drawingHistoryCopy","pop","push","disabled","UndoOutlined","lastUndoLine","DeleteOutlined","Highlighter","HighlighterImport","MovieReviewCard","text","highlights","baseClass","highlightClassName","searchWords","autoEscape","textToHighlight","DebugOnly","children","div","dev","devOnly","useDevFeatures","isDebugEnabled","isDevEnv","DevButton","rest","BugFilled","Ribbon","getColorFromLetter","getAnimationClass","PlayerRibbon","player","backgroundColor","getAvatarColorById","avatarId","title","name","size","RibbonGroup","labels","charAt","Instruction","white","contained","fullWidth","RoundsLeftInstruction","left","total","forceLastRound","pluralize","TextHighlight","Title","level","Boolean","RuleInstruction","sfx","action","PlayCircleFilled","alert","AlertFilled","event","ExclamationCircleFilled","lore","MessageFilled","rule","ReadFilled","tip","BulbFilled","scoring","StarFilled","wait","ClockCircleFilled","bot","RobotFilled","animationClass","infinite","speed","repeat","token","theme","color","background","colorPrimary","TimerClock","iconSize","iconPlacement","minutes","seconds","MetricHighlight","AnimatedClockIcon","TimerBar","steps","props","status","percentage","percent","showInfo","marginBottom","undefined","TimedTimerBar","duration","onExpire","timeLeft","useCountdown","autoStart","TimedTimerClock","timerProps","useBlurCards","blurredCards","setBlurredCards","blurEnabled","useLocalStorage","getLocalStorage","setLocalStorage","useEffectOnce","Object","keys","shouldBeBlurred","cardId","blurCard","s","isBlurEnabled","setIsDebugEnabled","toggleDevFeatures","useTDBaseUrl","kind","base","process","attributeName","dur","from","repeatCount","to","BoxBlankIcon","BoxCheckMarkIcon","BoxMinusIcon","BoxQuestionMarkIcon","DecisionButtons","prompt","wrap","danger","Results","results","activeStep","_","active","ActiveIcon","hand","Array","random","imageId","superHeroId","String","Speak","language","useLanguage","speak","key","onResult","LanguageButtons","cardWidth","FloatingHand","sizeRatio","translate","ribbons","setRibbons","LETTERS","preview","updatedAt","Date","now","ready","SuperHeroAvatar","CostumeAvatar","ClubberAvatar","SheepAvatar","sheepId","animate","showAudio","setShowAudio","setVolume","onStartAudio","delay","message","App","useCopyToClipboard","state","copyToClipboard","info","result","r","join","readOnly","cols","setCurrent","setResults","Content","items","stepIndex","prev","newResults","onEnd","utterance","SpeechSynthesisUtterance","lang","speechSynthesis","getRandomWelcomeMessage","options","getRandomItem","getRandomPositiveReadyMessage","getRandomNeutralReadyMessage","getRandomNegativeReadyMessage"],"sourceRoot":""}