{"version":3,"sources":["reportWebVitals.js","services/firebase.js","hooks/useGlobalState.js","hooks/useLoading.js","images/tarde-divertida-logo.svg","components/Home.jsx","utils/constants.js","adapters/index.js","components/loaders/Loading.jsx","components/modals/CreateGameModal.jsx","components/rules/RulesCarousel.jsx","components/modals/RulesModal.jsx","components/Admin.jsx","adapters/auth.js","components/Login.jsx","utils/index.js","components/loaders/LoadingPage.jsx","components/errors/PageError.jsx","images/avatars.svg","components/avatars/Avatar.jsx","components/avatars/AvatarEntry.jsx","services/localStorage.js","components/lobby/Join.jsx","components/shared/AdminOnly.jsx","components/lobby/Waiting.jsx","components/lobby/Lobby.jsx","components/shared/ReadyPlayersBar.jsx","components/rules/Rules.jsx","sounds/arte-ruim-timer.mp3","components/shared/PhaseContainer.jsx","components/arte-ruim/DrawPhaseStepOne.jsx","components/arte-ruim/DrawingCanvas.jsx","components/arte-ruim/DrawPhaseStepTwo.jsx","components/shared/WaitingRoom.jsx","components/arte-ruim/DrawPhase.jsx","components/arte-ruim/CanvasSVG.jsx","components/arte-ruim/Ribbon.jsx","components/arte-ruim/EvaluationAllDrawings.jsx","components/arte-ruim/Card.jsx","components/arte-ruim/EvaluationAllCards.jsx","components/arte-ruim/CanvasResizer.jsx","components/arte-ruim/EvaluationPhase.jsx","components/arte-ruim/GalleryWindowCredits.jsx","components/arte-ruim/GalleryWindowGuesses.jsx","components/arte-ruim/GalleryWindowControls.jsx","components/shared/StarPoints.jsx","components/arte-ruim/GalleryWindowResult.jsx","components/arte-ruim/GalleryWindow.jsx","components/shared/RankingBoard.jsx","components/arte-ruim/GalleryPhase.jsx","components/arte-ruim/GameOverPhase.jsx","components/arte-ruim/GameInfoDrawer.jsx","components/arte-ruim/SessionArteRuim.jsx","hooks/useGamePlayers.js","hooks/useGameState.js","components/Game.jsx","hooks/useIsGameStale.js","components/loaders/LoadingBar.jsx","components/App.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","firestore","functions","window","location","hostname","includes","useEmulator","initialState","isLoading","loaders","isAuthenticated","appStartedAt","Date","now","gameId","gameName","gameMeta","me","myAvatar","isAdmin","canvasSize","createGlobalState","useGlobalState","setGlobalState","getGlobalState","useLoading","setLoading","setLoaders","useEffect","Object","values","some","v","key","value","Home","className","src","logo","preview","alt","PUBLIC_URL","BANNERS","RULES","TAG_DICT","competitive","label","color","cooperative","traitor","timed","drawing","guessing","writing","images","discussion","AVATAR_IDS","Array","fill","map","i","index","GAME_COLLECTION","ARTE_RUIM_PHASES","AVATAR_DESCRIPTIONS_BR","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","GAME_API","helloWorld","httpsCallable","initializeGame","loadGame","addPlayer","lockGame","ARTE_RUIM_API","makeMeReady","submitDrawing","submitVoting","submitRating","goToNextPhase","Loading","message","margin","clsx","Boolean","Text","defaultProps","CreateGameModal","gameInfo","history","useHistory","setLoader","useState","isVisible","setVisibility","setGameId","onCloseModal","useCallback","a","gameCode","response","data","notification","error","description","JSON","stringify","placement","console","createGame","type","onClick","title","visible","onCancel","onOk","push","info","fallback","Paragraph","Title","RulesCarousel","ruleClass","autoplay","autoplaySpeed","rules","rule","RulesModal","footer","Admin","Content","size","wrap","align","gameList","game","hoverable","style","width","cover","Meta","summary","min","max","recommended","tags","tag","available","signIn","email","password","signInWithEmailAndPassword","layout","labelCol","span","wrapperCol","tailLayout","offset","Login","setIsAuthenticated","setError","setEmail","setPassword","onHandleSubmit","user","uid","showIcon","name","onValuesChange","trim","autoComplete","Item","getRandomItem","list","Math","floor","random","length","inNSeconds","seconds","LoadingPage","PageError","Avatar","id","shape","viewBox","href","avatars","memo","AvatarEntry","animate","propTypes","PropTypes","number","string","bool","this","store","notLoaded","appName","init","load","get","localStorage","parse","getItem","entries","forEach","item","undefined","save","setItem","Join","players","setMe","setMyAvatar","availableAvatars","setAvailableAvatars","tempAvatar","setTempAvatar","tempMe","setTempMe","localStorageAvatar","setLocalStorageAvatar","usedAvatars","reduce","acc","p","avatarId","newAvailableAvatars","filter","lsAvatarId","lsMe","onPreviousAvatar","indexOf","newIndex","onNextAvatar","onAddPlayer","playerName","playerAvatarId","set","CaretLeftOutlined","CaretRightOutlined","onChange","e","target","placeholder","maxLength","suffix","InfoCircleOutlined","disabled","AdminOnly","children","Waiting","onLockGameAndStart","isLocked","success","numPlayers","keys","danger","Lobby","player","ReadyPlayersBar","readyPlayers","ready","Group","LikeFilled","Rules","amIReady","setImReady","onBeReady","onBeReadyQue","warning","icon","CheckCircleFilled","SmileFilled","MehFilled","RobotFilled","PhaseContainer","phase","allowedPhase","DrawPhaseStepOne","setStep","round","play","DrawingCanvas","lines","setLines","isDrawing","useRef","height","onMouseDown","current","pos","getStage","getPointerPosition","x","y","onMousemove","point","lastLine","concat","splice","onMouseup","line","points","stroke","strokeWidth","tension","lineCap","globalCompositeOperation","DrawPhaseStepTwo","secretCard","onSubmitDrawing","useTimer","expiryTimestamp","autoStart","onExpire","text","level","WaitingRoom","DrawPhase","state","step","setSecretCard","useSound","arteRuimTimer","volume","myCardId","cards","allCards","cardId","CanvasSVG","konvaLines","paths","lineArr","path","xmlns","overflow","d","strokeLinecap","strokeLinejoin","strokeMiterlimit","Ribbon","cardEntryId","split","letter","EvaluationAllDrawings","drawings","activeItem","onActivateItem","votes","drawingEntry","canvasEntryId","Card","card","EvaluationAllCards","cardEntry","CanvasResizer","setCanvasSize","defaultValue","EvaluationPhase","setVotes","setActiveItem","entryId","startsWith","prevVotes","onSubmitVoting","preparedVotes","drawingEntryId","drawingId","CloudUploadOutlined","GalleryWindowCredits","artist","artistAvatarId","GalleryWindowGuesses","playersSay","playersNames","MessageFilled","join","GalleryWindowControls","galleryLength","activeIndex","setActiveIndex","isRunning","pause","resume","s","abs","StepBackwardOutlined","PauseOutlined","PlayCircleOutlined","StepForwardOutlined","TrophyOutlined","StarPoints","quantity","starArrays","StarFilled","GalleryWindowResult","correctAnswer","playersPoints","correctGuesses","CrownFilled","DeleteFilled","GalleryWindow","RankingBoard","ranking","displayStep","setDisplayStep","sortedRanking","setSortedRanking","positions","setPositions","maxPoints","newScore","sort","b","previousScore","property","lastPosition","lastPoints","entry","gainedPoints","GalleryPhase","cachedCanvasSize","setCachedCanvasSize","onGoToNextRound","gallery","pointsToVictory","PictureOutlined","RocketFilled","GameOverPhase","GameInfoDrawer","setVisible","completeMe","rankedPlayers","score","offsetTop","closable","onClose","count","SessionArteRuim","useDocument","doc","snapshotListenOptions","includeMetadataChanges","snapshot","loading","log","useGamePlayers","useGameState","setInfo","ActiveComponent","getActiveComponent","Game","setGameName","setGameMeta","isPageLoading","setPageLoading","isGameStale","gameCreatedAt","setGameStale","useIsGameStale","createdAt","urlGameId","pathname","substring","getGameIdFromURL","isValidGameId","meta","loadGameSession","warn","LoadingBar","PrivateRoute","Component","component","authenticated","rest","render","props","to","from","PublicRoute","fromPath","App","setIsLoading","setIsAdmin","onAuthStateChanged","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91ef3a3e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/functions';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_API_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n// firebase.analytics();\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const functions = firebase.functions();\n\nif (window.location.hostname.includes('localhost')) {\n  firestore.useEmulator('localhost', 8091);\n  functions.useEmulator('localhost', 5001);\n}\n\nexport default firebase;\n","import { createGlobalState } from 'react-hooks-global-state';\n\nconst initialState = {\n  isLoading: false,\n  loaders: false,\n  isAuthenticated: false,\n  appStartedAt: Date.now(),\n  // Meta\n  gameId: null,\n  gameName: null,\n  gameMeta: {},\n  me: '',\n  myAvatar: '',\n  isAdmin: false,\n  // Arte-Ruim\n  canvasSize: 250,\n};\n\nconst { useGlobalState, setGlobalState, getGlobalState } = createGlobalState(initialState);\n\nexport { setGlobalState, getGlobalState, useGlobalState };\n\nexport default useGlobalState;\n","import { useEffect } from 'react';\n\nimport { useGlobalState } from './index';\n\n/**\n * Aggregate loading states into a single object, and single isLoading state\n * @returns [boolean, function, object]\n */\nexport function useLoading() {\n  const [isLoading, setLoading] = useGlobalState('isLoading');\n  const [loaders, setLoaders] = useGlobalState('loaders');\n\n  useEffect(() => {\n    setLoading(Object.values(loaders).some((v) => v));\n  }, [loaders, setLoading]);\n\n  const setLoader = (key, value) => {\n    setLoaders((values) => ({\n      ...values,\n      [key]: value,\n    }));\n  };\n\n  return [isLoading, setLoader, loaders];\n}\n","export default __webpack_public_path__ + \"static/media/tarde-divertida-logo.7e15410c.svg\";","import React from 'react';\nimport { Image, Layout } from 'antd';\n\nimport logo from '../images/tarde-divertida-logo.svg';\n\nfunction Home() {\n  return (\n    <Layout className=\"home\">\n      <div className=\"home__logo-container\">\n        <Image src={logo} className=\"home__logo\" preview={false} alt=\"Tarde Divertida logo\" />\n      </div>\n      <div className=\"home__background\">\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Home;\n","/**\n * List of urls residing in the public folder\n */\nexport const PUBLIC_URL = {\n  BANNERS: `${process.env.PUBLIC_URL}/images/banners/`,\n  RULES: `${process.env.PUBLIC_URL}/images/rules/`,\n};\n\n/**\n * List of tags translation and color\n */\nexport const TAG_DICT = {\n  competitive: {\n    label: 'competitivo',\n    color: 'red',\n  },\n  cooperative: {\n    label: 'cooperativo',\n    color: 'green',\n  },\n  traitor: {\n    label: 'inimigo',\n    color: 'volcano',\n  },\n  'real-time': {\n    label: 'juntos',\n    color: 'volcano',\n  },\n  'turn-based': {\n    label: 'vez',\n    color: 'volcano',\n  },\n  timed: {\n    label: 'tempo',\n    color: 'orange',\n  },\n  drawing: {\n    label: 'desenho',\n    color: 'gold',\n  },\n  guessing: {\n    label: 'adivinhar',\n    color: 'cyan',\n  },\n  writing: {\n    label: 'escrever',\n    color: 'blue',\n  },\n  images: {\n    label: 'imagens',\n    color: 'purple',\n  },\n  discussion: {\n    label: 'discussão/fala',\n    color: 'geekblue',\n  },\n};\n\n/**\n * List of avatar ids\n */\nexport const AVATAR_IDS = new Array(25).fill(0).map((i, index) => i + index);\n\n/**\n * Enum of available games\n */\nexport const GAME_COLLECTION = {\n  ARTE_RUIM: 'arte-ruim',\n};\n\n/**\n * Enum of Arte Ruim phases\n */\nexport const ARTE_RUIM_PHASES = {\n  LOBBY: 'LOBBY',\n  RULES: 'RULES',\n  DRAW: 'DRAW',\n  EVALUATION: 'EVALUATION',\n  GALLERY: 'GALLERY',\n  GAME_OVER: 'GAME_OVER',\n};\n\nexport const LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\nexport const AVATAR_DESCRIPTIONS_BR = {\n  0: 'o axolote',\n  1: 'a tartaruga',\n  2: 'a raposa',\n  3: 'o sapo',\n  4: 'a salamandra',\n  5: 'a toupeira',\n  6: 'o esquilo',\n  7: 'o corvo',\n  8: 'a lontra',\n  9: 'o camundongo',\n  10: 'o sabiá',\n  11: 'a cojura',\n  12: 'o porco-espinho',\n  13: 'o ornitorrinco',\n  14: 'o rato',\n  15: 'a rã',\n  16: 'o caramujo',\n  17: 'a abelha',\n  18: 'o morcego',\n  19: 'o gato',\n  20: 'o coelho',\n  21: 'a aranha',\n  22: 'a borboleta',\n  23: 'o arminho',\n  24: 'o porco',\n};\n","import { functions } from '../services/firebase';\n\nexport const GAME_API = {\n  helloWorld: functions.httpsCallable('helloWorld'),\n  initializeGame: functions.httpsCallable('initializeGame'),\n  loadGame: functions.httpsCallable('loadGame'),\n  addPlayer: functions.httpsCallable('addPlayer'),\n  lockGame: functions.httpsCallable('lockGame'),\n};\n\nexport const ARTE_RUIM_API = {\n  makeMeReady: functions.httpsCallable('arteRuimMakeMeReady'),\n  submitDrawing: functions.httpsCallable('arteRuimSubmitDrawing'),\n  submitVoting: functions.httpsCallable('arteRuimSubmitVoting'),\n  submitRating: functions.httpsCallable('arteRuimSubmitRating'),\n  goToNextPhase: functions.httpsCallable('arteRuimGoToNextPhase'),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Space, Spin, Typography } from 'antd';\n\nfunction Loading({ message, margin }) {\n  return (\n    <Space className={clsx('loading', margin && 'loading--margin')}>\n      <Spin />\n      {Boolean(message) && <Typography.Text>{message}</Typography.Text>}\n    </Space>\n  );\n}\n\nLoading.propTypes = {\n  message: PropTypes.string,\n  margin: PropTypes.bool,\n};\n\nLoading.defaultProps = {\n  margin: false,\n};\n\nexport default Loading;\n","import React, { Fragment, useCallback, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Typography, Image, Modal, message, Button, notification } from 'antd';\n// Adapters\nimport { GAME_API } from '../../adapters';\n// Hooks\nimport { useLoading } from '../../hooks';\n// Constants\nimport { PUBLIC_URL } from '../../utils/constants';\n// Components\nimport Loading from '../loaders/Loading';\n\nfunction CreateGameModal({ gameInfo }) {\n  const history = useHistory();\n  const [, setLoader] = useLoading();\n  const [isVisible, setVisibility] = useState(false);\n  const [isLoading, setLoading] = useState(true);\n  const [gameId, setGameId] = useState(null);\n\n  const onCloseModal = useCallback(() => {\n    setVisibility(false);\n  }, []);\n\n  useEffect(() => {\n    async function createGame() {\n      try {\n        setLoader('create', true);\n        const response = await GAME_API.initializeGame({ gameCode: gameInfo.gameCode });\n        if (response.data.gameId) {\n          setGameId(response.data.gameId);\n        }\n      } catch (e) {\n        notification.error({\n          message: 'Applicativo encontrou um erro ao tentar criar o jogo',\n          description: JSON.stringify(e),\n          placement: 'bottomLeft',\n        });\n        console.error(e);\n        setVisibility(false);\n      } finally {\n        setLoading(false);\n        setLoader('create', false);\n      }\n    }\n\n    if (isVisible) {\n      createGame();\n    }\n  }, [isVisible]); // eslint-disable-line\n\n  const onConfirmGame = () => {\n    if (gameId) {\n      history.push(`/${gameId}`);\n    } else {\n      message.info('Péra! O jogo ainda não foi inicializado.');\n    }\n  };\n\n  return (\n    <Fragment>\n      <Button type=\"primary\" onClick={() => setVisibility(true)}>\n        Criar Jogo\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`Criando jogo: ${gameInfo.title}`}\n          visible={isVisible}\n          onCancel={onCloseModal}\n          onOk={onConfirmGame}\n        >\n          <Fragment>\n            <Image\n              alt={gameInfo.title}\n              src={`${PUBLIC_URL.BANNERS}game-image-${gameInfo.gameName}.jpg`}\n              fallback={`${PUBLIC_URL.BANNERS}/game-image-em-breve.jpg`}\n            />\n\n            {isLoading ? (\n              <Fragment>\n                <Typography.Paragraph className=\"center\">O jogo está sendo criado...</Typography.Paragraph>\n                <Loading message=\"Gerando...\" margin />\n              </Fragment>\n            ) : (\n              <div>\n                <Typography.Title className=\"center\">Jogo inicializado: {gameId}</Typography.Title>\n                <Typography.Paragraph>\n                  Pressione OK para ser redirecionadx à página do jogo.\n                </Typography.Paragraph>\n              </div>\n            )}\n          </Fragment>\n        </Modal>\n      )}\n    </Fragment>\n  );\n}\n\nCreateGameModal.propTypes = {\n  gameInfo: PropTypes.shape({\n    gameCode: PropTypes.string.isRequired,\n    gameName: PropTypes.string,\n    title: PropTypes.string,\n  }),\n};\n\nexport default CreateGameModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Typography, Image, Carousel } from 'antd';\n// Constants\nimport { PUBLIC_URL } from '../../utils/constants';\n\nfunction RulesCarousel({ info, className, ruleClass }) {\n  return (\n    <Carousel className={clsx('rules-carousel', className)} autoplay autoplaySpeed={10000}>\n      {info.rules.map((rule, index) => (\n        <div className={clsx('rules-carousel__rule', ruleClass)} key={rule}>\n          <Image\n            className=\"rules-carousel__image\"\n            src={`${PUBLIC_URL.RULES}${info.gameName}-${index}.jpg`}\n            fallback={`${PUBLIC_URL.RULES}game-rule-not-found.jpg`}\n            alt={rule}\n          />\n          <Typography.Paragraph className=\"rules-carousel__rule-text\">{rule}</Typography.Paragraph>\n        </div>\n      ))}\n    </Carousel>\n  );\n}\n\nRulesCarousel.propTypes = {\n  info: PropTypes.shape({\n    gameName: PropTypes.string,\n    rules: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string,\n  }),\n  className: PropTypes.string,\n  ruleClass: PropTypes.string,\n};\n\nRulesCarousel.defaultProps = {\n  className: '',\n  ruleClass: '',\n};\n\nexport default RulesCarousel;\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\n\n// Design Resources\nimport { Button, Modal } from 'antd';\n// Components\nimport RulesCarousel from '../rules/RulesCarousel';\n\nfunction RulesModal({ gameInfo }) {\n  const [isVisible, setVisibility] = useState(false);\n\n  const onCloseModal = () => {\n    setVisibility(false);\n  };\n\n  return (\n    <Fragment>\n      <Button type=\"default\" onClick={() => setVisibility(true)}>\n        Regras\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`Rules: ${gameInfo.title}`}\n          visible={isVisible}\n          onCancel={onCloseModal}\n          className=\"rules-modal\"\n          footer={[\n            <Button key=\"close\" onClick={onCloseModal}>\n              Fechar\n            </Button>,\n          ]}\n        >\n          <RulesCarousel info={gameInfo} />\n        </Modal>\n      )}\n    </Fragment>\n  );\n}\n\nRulesModal.propTypes = {\n  gameInfo: PropTypes.shape({\n    gameName: PropTypes.string,\n    rules: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string,\n  }),\n};\n\nexport default RulesModal;\n","import React from 'react';\n\n// Design Resources\nimport { Typography, Layout, Space, Card, Image, Divider, Tag } from 'antd';\n// Utils\nimport gameList from '../resources/games.json';\nimport { PUBLIC_URL, TAG_DICT } from '../utils/constants';\n// Components\nimport CreateGameModal from './modals/CreateGameModal';\nimport RulesModal from './modals/RulesModal';\n\nfunction Admin() {\n  return (\n    <Layout.Content className=\"container\">\n      <Typography.Title>Admin Hub</Typography.Title>\n      <Typography.Paragraph>Select the game you want to start</Typography.Paragraph>\n\n      <Space size={[8, 16]} wrap align=\"start\">\n        {Object.values(gameList).map((game) => (\n          <Card\n            key={game.gameName}\n            hoverable\n            style={{ width: 240 }}\n            cover={\n              <Image\n                alt={game.title}\n                src={`${PUBLIC_URL.BANNERS}game-image-${game.gameName}.jpg`}\n                fallback={`${PUBLIC_URL.BANNERS}/game-image-em-breve.jpg`}\n              />\n            }\n          >\n            <Card.Meta title={game.title} description={game.summary} />\n            <Divider />\n            <Card.Meta description={`Para ${game.min}-${game.max} jogadores`} />\n            <Card.Meta description={`Recomendado jogar com ${game.recommended}`} />\n            <Divider />\n            <Space wrap size={[1, 6]}>\n              {game.tags.map((tag) => (\n                <Tag key={`${game.gameCode}-${tag}`} color={TAG_DICT[tag]?.color}>\n                  {TAG_DICT[tag]?.label}\n                </Tag>\n              ))}\n            </Space>\n            <Divider />\n            <Space>\n              <RulesModal gameInfo={game} />\n              {Boolean(game.available) && <CreateGameModal gameInfo={game} />}\n            </Space>\n          </Card>\n        ))}\n      </Space>\n    </Layout.Content>\n  );\n}\n\nexport default Admin;\n","import { auth } from '../services/firebase';\n\n/**\n * Sign up user via email through firebase auth\n * @param {string} email\n * @param {string} password\n * @returns {Promise}\n */\nexport function signUp(email, password) {\n  return auth.createUserWithEmailAndPassword(email, password);\n}\n\n/**\n * Sign in user via email through firebase auth\n * @param {string} email\n * @param {string} password\n * @returns {Promise}\n */\nexport function signIn(email, password) {\n  return auth.signInWithEmailAndPassword(email, password);\n}\n\n/**\n * Sign out current user\n * @returns {Promise}\n */\nexport async function signOut() {\n  return auth.signOut().then(() => {\n    alert(`You've been signed out`);\n  });\n}\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\n// Design Resources\nimport { Layout, Button, Form, Input, Alert, Image } from 'antd';\n// API\nimport { signIn } from '../adapters/auth';\n// State\nimport { useGlobalState } from '../hooks';\n// Image\nimport logo from '../images/tarde-divertida-logo.svg';\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 0, span: 8 },\n};\n\nfunction Login() {\n  const history = useHistory();\n  const [, setIsAuthenticated] = useGlobalState('isAuthenticated');\n\n  const [error, setError] = useState(null);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const onValuesChange = (data) => {\n    if (data.email) {\n      setEmail(data.email.trim());\n    }\n    if (data.password) {\n      setPassword(data.password.trim());\n    }\n  };\n\n  const onHandleSubmit = async () => {\n    setError('');\n    try {\n      const response = await signIn(email, password);\n      if (response?.user?.uid) {\n        setIsAuthenticated(true);\n        history.push('/admin');\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <Layout.Content className=\"login\">\n      <div className=\"login__content\">\n        <div className=\"login__logo\">\n          <Image src={logo} preview={false} />\n        </div>\n\n        {Boolean(error) && (\n          <Alert message=\"Error\" description={error} type=\"error\" showIcon className=\"login__error-alert\" />\n        )}\n        <Form\n          {...layout}\n          layout=\"horizontal\"\n          name=\"sign-in\"\n          onValuesChange={onValuesChange}\n          className=\"login__form\"\n          autoComplete=\"off\"\n        >\n          <Form.Item {...tailLayout} label=\"E-mail\" name=\"email\" className=\"login__form-item\">\n            <Input type=\"email\" />\n          </Form.Item>\n          <Form.Item {...tailLayout} label=\"Password\" name=\"password\" className=\"login__form-item\">\n            <Input type=\"password\" />\n          </Form.Item>\n          <div className=\"login__form-action\">\n            <Button type=\"primary\" onClick={onHandleSubmit}>\n              Login\n            </Button>\n          </div>\n        </Form>\n      </div>\n    </Layout.Content>\n  );\n}\n\nexport default Login;\n","/**\n * Extract the gameId from react history\n * @param {object} history\n * @returns {string}\n */\nexport const getGameIdFromURL = (history) => {\n  const { pathname = '/' } = history?.location ?? {};\n  return pathname.substring(1);\n};\n\n/**\n * Verify if the game id exists and has the correct length\n * @param {string} gameId\n * @returns\n */\nexport const isValidGameId = (gameId) => {\n  return gameId && gameId.length === 4;\n};\n\n/**\n * Get random element/item from a list\n * @param {array} list\n * @returns one random item\n */\nexport const getRandomItem = (list) => {\n  return list[Math.floor(Math.random() * list.length)];\n};\n\nexport const inNSeconds = (seconds) => {\n  return Date.now() + seconds * 1000;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Layout, Spin, Typography } from 'antd';\n\nfunction LoadingPage({ message }) {\n  return (\n    <Layout.Content className=\"loading-page\">\n      <Spin size=\"large\" />\n      <Typography.Text>{message}</Typography.Text>\n    </Layout.Content>\n  );\n}\n\nLoadingPage.propTypes = {\n  message: PropTypes.string,\n};\n\nLoadingPage.defaultProps = {\n  message: 'Carregando...',\n};\n\nexport default LoadingPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Alert } from 'antd';\n\nfunction PageError({ message, description }) {\n  return (\n    <div className=\"container container--center\">\n      <Alert message={message} description={description} type=\"error\" showIcon />\n    </div>\n  );\n}\n\nPageError.propTypes = {\n  message: PropTypes.string,\n  description: PropTypes.string,\n};\n\nPageError.defaultProps = {\n  message: 'Algo errado não está certo',\n  description: 'Não era pra você estar vendo esta mensagem.',\n};\n\nexport default PageError;\n","export default __webpack_public_path__ + \"static/media/avatars.a2364409.svg\";","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Avatar as AntAvatar } from 'antd';\n// Images\nimport avatars from '../../images/avatars.svg';\n\nfunction Avatar({ id = 25, size = 'large', shape = 'circle', alt = 'Fulano', className = '' }) {\n  return (\n    <AntAvatar\n      className={clsx('avatar', className)}\n      size={size}\n      shape={shape}\n      alt={alt}\n      src={\n        <svg viewBox=\"0 0 100 100\">\n          <use href={avatars + `#avatar-${id}`}></use>\n        </svg>\n      }\n    />\n  );\n}\n\nAvatar.propTypes = {\n  id: PropTypes.number,\n  className: PropTypes.string,\n  size: PropTypes.string,\n  shape: PropTypes.string,\n  alt: PropTypes.string,\n};\n\nexport default memo(Avatar);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Components\nimport Avatar from './Avatar';\n\nfunction AvatarEntry({ id = 25, name = 'Fulano', animate = false, className = '' }) {\n  return (\n    <div className={clsx('avatar-entry', animate && 'avatar-entry--floating', className)}>\n      <Avatar id={id} className=\"avatar-entry__avatar\" />\n      <div className=\"avatar-entry__name\">{name}</div>\n    </div>\n  );\n}\n\nAvatar.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  animate: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nexport default memo(AvatarEntry);\n","class LocalStorage {\n  constructor() {\n    this.store = {};\n    this.notLoaded = true;\n    this.appName = 'tarde-divertida';\n\n    this.init();\n  }\n\n  init() {\n    this.load();\n    return this.get();\n  }\n\n  get(key) {\n    if (this.notLoaded) {\n      this.load();\n    }\n\n    if (key) {\n      return this.store[key] || null;\n    }\n    return this.store;\n  }\n\n  load() {\n    const localStorage = JSON.parse(window.localStorage.getItem(this.appName));\n    if (localStorage) {\n      this.store = localStorage;\n      this.notLoaded = false;\n    }\n  }\n\n  // To Remove a property, you can use the set method, but passing an object with the key and value\n  // null, the property will be removed from local storage\n  set(value) {\n    if (this.notLoaded) {\n      this.load();\n    }\n\n    const type = typeof value;\n    if (type !== 'string' && type !== 'object') {\n      console.error('localStorage set value must be a string or a key-value object');\n      return;\n    }\n\n    // When value is a string, use as a property toggle\n    if (typeof value === 'string') {\n      this.store[value] = !this.store[value];\n    } else {\n      // Remove any null or undefined property\n      Object.entries(value).forEach(([key, item]) => {\n        if (item === null || item === undefined) {\n          delete value[key];\n        }\n      });\n\n      this.store = {\n        ...this.store,\n        ...value,\n      };\n    }\n\n    this.save();\n  }\n\n  save() {\n    if (this.notLoaded) {\n      this.load();\n    }\n\n    window.localStorage.setItem(this.appName, JSON.stringify(this.store));\n    this.load();\n  }\n}\n\nexport default new LocalStorage();\n","import React, { useCallback, useEffect, useState } from 'react';\n// Design Resources\nimport { Alert, Button, Image, Input, notification, Spin, Tooltip } from 'antd';\nimport { CaretLeftOutlined, CaretRightOutlined, InfoCircleOutlined } from '@ant-design/icons';\n// Adapters\nimport { GAME_API } from '../../adapters';\n// State\nimport useGlobalState from '../../hooks/useGlobalState';\n// Images\nimport avatars from '../../images/avatars.svg';\n// Services\nimport localStorage from '../../services/localStorage';\n// Utils\nimport { AVATAR_IDS, PUBLIC_URL } from '../../utils/constants';\nimport { getRandomItem } from '../../utils/index';\n// Components\nimport { useLoading } from '../../hooks';\n\nfunction Join({ players, info }) {\n  const [isLoading, setLoader] = useLoading();\n  const [gameId] = useGlobalState('gameId');\n  const [gameName] = useGlobalState('gameName');\n  const [, setMe] = useGlobalState('me');\n  const [, setMyAvatar] = useGlobalState('myAvatar');\n\n  const [availableAvatars, setAvailableAvatars] = useState(AVATAR_IDS);\n  const [tempAvatar, setTempAvatar] = useState(getRandomItem(AVATAR_IDS));\n  const [tempMe, setTempMe] = useState('');\n\n  const [localStorageAvatar, setLocalStorageAvatar] = useState(null);\n\n  // Calculate available avatars and monitor if user chose a non-available one\n  useEffect(() => {\n    const usedAvatars = Object.values(players).reduce((acc, p) => {\n      acc[p.avatarId] = true;\n      return acc;\n    }, {});\n\n    const newAvailableAvatars = AVATAR_IDS.filter((avatarId) => usedAvatars[avatarId] === undefined);\n\n    if (newAvailableAvatars.includes(tempAvatar) && !localStorageAvatar) {\n      setTempAvatar(getRandomItem(newAvailableAvatars));\n    }\n\n    setAvailableAvatars(newAvailableAvatars);\n  }, [players]); // eslint-disable-line\n\n  // Load name and avatarId from localStorage\n  useEffect(() => {\n    const lsAvatarId = localStorage.get('avatarId');\n    const lsMe = localStorage.get('me');\n\n    if (lsAvatarId && lsMe) {\n      setTempAvatar(localStorage.get('avatarId'));\n      setTempMe(localStorage.get('me') ?? '');\n      setLocalStorageAvatar(lsAvatarId);\n    }\n  }, []); // eslint-disable-line\n\n  const onPreviousAvatar = useCallback(() => {\n    const index = availableAvatars.indexOf(tempAvatar);\n    const newIndex = index === 0 ? availableAvatars.length - 1 : index - 1;\n    setTempAvatar(availableAvatars[newIndex]);\n  }, [availableAvatars, tempAvatar]);\n\n  const onNextAvatar = useCallback(() => {\n    const index = availableAvatars.indexOf(tempAvatar);\n    const newIndex = index === availableAvatars.length - 1 ? 0 : index + 1;\n    setTempAvatar(availableAvatars[newIndex]);\n  }, [availableAvatars, tempAvatar]);\n\n  const onAddPlayer = useCallback(async () => {\n    try {\n      setLoader('add-player', true);\n      const response = await GAME_API.addPlayer({\n        gameId,\n        gameName,\n        playerName: tempMe,\n        playerAvatarId: tempAvatar,\n      });\n\n      setMe(response.data.name);\n      setMyAvatar(response.data.avatarId);\n      localStorage.set({\n        me: response.data.name,\n        avatarId: response.data.avatarId,\n      });\n    } catch (e) {\n      notification.error({\n        message: 'Vixi, o aplicativo encontrou um erro ao tentar adicionar você como jogador',\n        description: JSON.stringify(e),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n    } finally {\n      setLoader('add-player', false);\n    }\n  }, [gameId, gameName, tempMe, tempAvatar]); // eslint-disable-line\n\n  return (\n    <div className=\"lobby-join\">\n      <Image\n        alt={info?.title}\n        src={`${PUBLIC_URL.BANNERS}game-image-${info?.gameName}.jpg`}\n        fallback={`${PUBLIC_URL.BANNERS}/game-image-em-breve.jpg`}\n      />\n      <h1 className=\"lobby-join__title\">\n        {Boolean(localStorageAvatar) ? 'Bem-vindo de volta!' : 'Selecione seu avatar'}\n      </h1>\n      <div className=\"lobby-join__avatar-selection\">\n        <Button type=\"dashed\" onClick={onPreviousAvatar} className=\"lobby-join__avatar-nav-button\">\n          <CaretLeftOutlined />\n        </Button>\n        <svg viewBox=\"0 0 100 100\" className=\"lobby-join__avatar-selection-image\">\n          <use href={avatars + `#avatar-${tempAvatar}`}></use>\n        </svg>\n        <Button type=\"dashed\" onClick={onNextAvatar} className=\"lobby-join__avatar-nav-button\">\n          <CaretRightOutlined />\n        </Button>\n      </div>\n\n      {Boolean(localStorageAvatar) ? (\n        <Alert\n          className=\"lobby-join__avatar-alert\"\n          type=\"error\"\n          message=\"Você está de volta! Lembramos seu nome e avatar. Se você está retornando para o mesmo jogo de antes, NÃO mude seu apelido! Se o nome estiver diferente você é adicionado como um novo jogador e pode bugar o jogo.\"\n        />\n      ) : (\n        <Alert\n          className=\"lobby-join__avatar-alert\"\n          type=\"warning\"\n          message=\"Se alguém escolher o mesmo avatar que você, um avatar aleatório será escolhido.\"\n        />\n      )}\n      <Input\n        className=\"lobby-join__name-input\"\n        onChange={(e) => setTempMe(e.target.value)}\n        placeholder=\"Insira seu nome\"\n        value={tempMe}\n        maxLength={10}\n        suffix={\n          <Tooltip title=\"Máximo de 10 characteres\">\n            <InfoCircleOutlined />\n          </Tooltip>\n        }\n      />\n      <Button\n        className=\"lobby__join-button\"\n        type=\"primary\"\n        disabled={!Boolean(tempMe) || isLoading}\n        onClick={onAddPlayer}\n      >\n        {isLoading ? <Spin size=\"small\" /> : 'Entrar no jogo'}\n      </Button>\n    </div>\n  );\n}\n\nexport default Join;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Space } from 'antd';\n// State\nimport useGlobalState from '../../hooks/useGlobalState';\n\nfunction AdminOnly({ children, className = '' }) {\n  const [isAdmin] = useGlobalState('isAdmin');\n\n  if (!isAdmin) return <span></span>;\n\n  return <Space className={clsx('admin-only-container', className)}>{children}</Space>;\n}\n\nAdminOnly.propTypes = {\n  children: PropTypes.element.isRequired,\n  className: PropTypes.string,\n};\n\nexport default AdminOnly;\n","import React, { useCallback } from 'react';\n// Design Resources\nimport { Button, Image, message, notification, Typography } from 'antd';\n// State\nimport useGlobalState from '../../hooks/useGlobalState';\n// Utils and Resources\nimport { GAME_API } from '../../adapters';\nimport avatars from '../../images/avatars.svg';\nimport { PUBLIC_URL } from '../../utils/constants';\nimport { useLoading } from '../../hooks';\n// Components\nimport AdminOnly from '../shared/AdminOnly';\n\nfunction Waiting({ info, players }) {\n  const [isLoading, setLoader] = useLoading();\n  const [gameId] = useGlobalState('gameId');\n  const [gameName] = useGlobalState('gameName');\n  const [gameMeta] = useGlobalState('gameMeta');\n\n  const [me] = useGlobalState('me');\n  const [myAvatar] = useGlobalState('myAvatar');\n\n  const onLockGameAndStart = useCallback(async () => {\n    try {\n      setLoader('lock-game', true);\n      const response = await GAME_API.lockGame({\n        gameId,\n        gameName,\n      });\n      if (response.data.isLocked) {\n        message.success('Jogo trancado e iniciado com sucesso!');\n      }\n    } catch (e) {\n      notification.error({\n        message: 'Vixi, o aplicativo encontrou um erro ao tentar trancar e iniciar o jogo',\n        description: JSON.stringify(e),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n    } finally {\n      setLoader('lock-game', false);\n    }\n  }, [gameId, gameName, setLoader]);\n\n  const numPlayers = Object.keys(players).length;\n\n  return (\n    <div className=\"lobby-waiting\">\n      <Image\n        alt={info?.title}\n        src={`${PUBLIC_URL.BANNERS}game-image-${info?.gameName}.jpg`}\n        fallback={`${PUBLIC_URL.BANNERS}/game-image-em-breve.jpg`}\n      />\n\n      <h1 className=\"center\">{me || 'Fulano'},</h1>\n      <svg viewBox=\"0 0 100 100\" className=\"lobby-waiting__avatar\">\n        <use href={avatars + `#avatar-${myAvatar}`}></use>\n      </svg>\n      <h3 className=\"center\">Aguarde os outros jogadores entrarem.</h3>\n      <AdminOnly className=\"lobby-waiting__lock-button\">\n        <Typography.Text className=\"center padding\">\n          Jogadores necessários: {numPlayers}/{gameMeta.min}\n        </Typography.Text>\n        <Button\n          type=\"primary\"\n          danger\n          onClick={onLockGameAndStart}\n          disabled={isLoading || numPlayers < gameMeta.min}\n        >\n          Trancar e Iniciar Jogo\n        </Button>\n      </AdminOnly>\n    </div>\n  );\n}\n\nexport default Waiting;\n","import React from 'react';\n// Design Resources\nimport { Layout } from 'antd';\n// State\nimport useGlobalState from '../../hooks/useGlobalState';\n\n// Components\nimport AvatarEntry from '../avatars/AvatarEntry';\nimport Join from './Join';\nimport Waiting from './Waiting';\n\nfunction Lobby({ players, info }) {\n  const [me] = useGlobalState('me');\n  const [myAvatar] = useGlobalState('myAvatar');\n\n  return (\n    <Layout.Content className=\"lobby\">\n      <div className=\"lobby__room\">\n        {Object.values(players).map((player, index) => (\n          <AvatarEntry\n            key={player.name}\n            id={player.avatarId}\n            name={player.name}\n            className={`lobby__seat lobby__seat--${index}`}\n            animate\n          />\n        ))}\n\n        {me && myAvatar ? <Waiting players={players} info={info} /> : <Join players={players} info={info} />}\n      </div>\n    </Layout.Content>\n  );\n}\n\nexport default Lobby;\n","import React from 'react';\n// Design Resources\nimport { Avatar as AntAvatar, Typography } from 'antd';\nimport { LikeFilled } from '@ant-design/icons';\n// Components\nimport Avatar from '../avatars/Avatar';\n\nfunction ReadyPlayersBar({ players }) {\n  const readyPlayers = Object.values(players).filter((player) => player.ready);\n\n  if (readyPlayers.length === 0) {\n    return <span></span>;\n  }\n\n  return (\n    <div className=\"ready-player-bar\">\n      <AntAvatar.Group size=\"small\">\n        {readyPlayers.map((player) => (\n          <Avatar key={player.name} id={player.avatarId} />\n        ))}\n      </AntAvatar.Group>\n      <span className=\"ready-player-bar__speech-bubble\">\n        <Typography.Text>Estamos prontos!</Typography.Text>\n        <LikeFilled className=\"ready-player-bar__speech-bubble-icon\" />\n      </span>\n    </div>\n  );\n}\n\nexport default ReadyPlayersBar;\n","import React, { useCallback, useEffect, useState } from 'react';\n// Design Resources\nimport { Button, Layout, message, notification, Space, Typography } from 'antd';\n// State\nimport useGlobalState from '../../hooks/useGlobalState';\n// Components\nimport RulesCarousel from './RulesCarousel';\nimport LoadingPage from '../loaders/LoadingPage';\nimport { CheckCircleFilled, MehFilled, RobotFilled, SmileFilled } from '@ant-design/icons';\nimport { useLoading } from '../../hooks';\nimport { ARTE_RUIM_API } from '../../adapters';\nimport ReadyPlayersBar from '../shared/ReadyPlayersBar';\n\nfunction Rules({ players, info }) {\n  const [isLoading, setLoader] = useLoading();\n  const [gameId] = useGlobalState('gameId');\n  const [gameName] = useGlobalState('gameName');\n  const [me] = useGlobalState('me');\n  const [amIReady, setImReady] = useState(false);\n\n  useEffect(() => {\n    if (!amIReady) {\n      const ready = players?.[me]?.ready;\n      setImReady(ready);\n      if (ready) {\n        message.success('Pronto! Aguarde os outros jogadores estarem prontos');\n      }\n    }\n  }, [players, me]); // eslint-disable-line\n\n  const onBeReady = useCallback(async () => {\n    try {\n      setLoader('be-ready', true);\n      const response = await ARTE_RUIM_API.makeMeReady({\n        gameId,\n        gameName,\n        playerName: me,\n      });\n      if (response.data) {\n        setImReady(true);\n        message.success('Pronto! Aguarde os outros jogadores estarem prontos');\n      }\n    } catch (e) {\n      notification.error({\n        message: 'Vixi, o aplicativo encontrou um erro ao tentar continuar',\n        description: JSON.stringify(e),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n    } finally {\n      setLoader('be-ready', false);\n    }\n  }, [gameId, gameName, setLoader, me]);\n\n  const onBeReadyQue = useCallback(() => {\n    message.warning('Vixi, se fudeu então, pq o jogo vai começar!');\n    onBeReady();\n  }, [onBeReady]);\n\n  if (!info?.gameName) {\n    return <LoadingPage />;\n  }\n\n  return (\n    <Layout.Content className=\"rules\">\n      <Typography.Title className=\"center\">Regras do Jogo</Typography.Title>\n\n      <RulesCarousel info={info} className=\"rules__carousel\" ruleClass=\"rules__rule\" />\n\n      <Space className=\"rules__actions\">\n        <Button\n          type=\"primary\"\n          icon={amIReady ? <CheckCircleFilled /> : <SmileFilled />}\n          disabled={isLoading || amIReady}\n          onClick={onBeReady}\n        >\n          Entendi tudo e estou pronto para jogar!\n        </Button>\n        <Button\n          icon={amIReady ? <CheckCircleFilled /> : <MehFilled />}\n          disabled={isLoading || amIReady}\n          onClick={onBeReady}\n        >\n          Não entendi nada, mas vamos lá\n        </Button>\n        <Button\n          type=\"primary\"\n          danger\n          icon={amIReady ? <CheckCircleFilled /> : <RobotFilled />}\n          disabled={isLoading || amIReady}\n          onClick={onBeReadyQue}\n        >\n          Que?\n        </Button>\n      </Space>\n      <ReadyPlayersBar players={players} />\n    </Layout.Content>\n  );\n}\n\nexport default Rules;\n","export default __webpack_public_path__ + \"static/media/arte-ruim-timer.1f16745a.mp3\";","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Layout } from 'antd';\n// Components\nimport LoadingPage from '../loaders/LoadingPage';\n\nfunction PhaseContainer({ info, phase = '', allowedPhase = '', children, className }) {\n  if (!info?.gameName || allowedPhase !== phase) {\n    return <LoadingPage />;\n  }\n\n  return <Layout.Content className={clsx('phase-container', className)}>{children}</Layout.Content>;\n}\n\nPhaseContainer.propTypes = {\n  allowedPhase: PropTypes.string,\n  children: PropTypes.any,\n  className: PropTypes.string,\n  info: PropTypes.object,\n  phase: PropTypes.string,\n};\n\nexport default PhaseContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Typography } from 'antd';\n\nfunction DrawPhaseStepOne({ setStep, round, play }) {\n  return (\n    <div className=\"draw-phase-step-one\">\n      <Typography.Title className=\"draw-phase-step-one__title\">RODADA</Typography.Title>\n      <div className=\"draw-phase-step-one__round\">{round ?? 0}</div>\n      <Typography.Text className=\"draw-phase-step-one__instructions\">\n        Você terá 10 segundos para ler a sua carta e desenhá-la. Aperte o botão quando estiver pronto! Fique\n        esperto porque começa assim quando você apertar. Não 'seje' lerdo.\n      </Typography.Text>\n      <Button\n        type=\"primary\"\n        onClick={() => {\n          play();\n          setStep(2);\n        }}\n        className=\"draw-phase-step-one__go-button\"\n      >\n        Um dó, lá, si... vamos ir... JÁ!\n      </Button>\n    </div>\n  );\n}\n\nDrawPhaseStepOne.propTypes = {\n  round: PropTypes.number,\n  setStep: PropTypes.func.isRequired,\n};\n\nexport default DrawPhaseStepOne;\n","import React, { useRef } from 'react';\nimport { Stage, Layer, Line } from 'react-konva';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n\nconst DrawingCanvas = ({ lines, setLines, className = '' }) => {\n  const isDrawing = useRef(false);\n\n  const handleMouseDown = (e) => {\n    isDrawing.current = true;\n    const pos = e.target.getStage().getPointerPosition();\n    setLines([...lines, [pos.x, pos.y]]);\n  };\n\n  const handleMouseMove = (e) => {\n    // no drawing - skipping\n    if (!isDrawing.current) {\n      return;\n    }\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    let lastLine = lines[lines.length - 1];\n    // add point\n    lastLine = lastLine.concat([point.x, point.y]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLine);\n    setLines(lines.concat());\n  };\n\n  const handleMouseUp = () => {\n    isDrawing.current = false;\n  };\n\n  return (\n    <Stage\n      width={500}\n      height={500}\n      onMouseDown={handleMouseDown}\n      onMousemove={handleMouseMove}\n      onMouseup={handleMouseUp}\n      className={clsx('canvas', className)}\n    >\n      <Layer>\n        {lines.map((line, i) => (\n          <Line\n            key={i}\n            points={line}\n            stroke=\"#222222\"\n            strokeWidth={5}\n            tension={0.5}\n            lineCap=\"round\"\n            globalCompositeOperation=\"source-over\"\n          />\n        ))}\n      </Layer>\n    </Stage>\n  );\n};\n\nDrawingCanvas.propTypes = {\n  lines: PropTypes.array.isRequired,\n  setLines: PropTypes.func.isRequired,\n  className: PropTypes.string,\n};\n\nexport default DrawingCanvas;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTimer } from 'react-timer-hook';\n// Utils\nimport { inNSeconds } from '../../utils';\n// Components\nimport DrawingCanvas from './DrawingCanvas';\n\nfunction DrawPhaseStepTwo({ secretCard, onSubmitDrawing }) {\n  const [lines, setLines] = useState([]);\n\n  const { seconds } = useTimer({\n    expiryTimestamp: inNSeconds(11),\n    autoStart: true,\n    onExpire: () => onSubmitDrawing(lines),\n  });\n\n  return (\n    <div className=\"draw-phase-step-two\">\n      <div className=\"draw-phase-step-two__card\">\n        <span className=\"draw-phase-step-two__card-title\">Desenhe</span>\n        <span className=\"draw-phase-step-two__card-text\">{secretCard?.text}</span>\n        <span className=\"draw-phase-step-two__card-level\">{Array(secretCard?.level).fill('•')}</span>\n        <span className=\"draw-phase-step-two__timer\">{seconds - 1}s</span>\n      </div>\n      <DrawingCanvas lines={lines} setLines={setLines} />\n    </div>\n  );\n}\n\nDrawPhaseStepTwo.propTypes = {\n  secretCard: PropTypes.shape({\n    text: PropTypes.string,\n    level: PropTypes.number,\n  }).isRequired,\n  onSubmitDrawing: PropTypes.func.isRequired,\n};\n\nexport default DrawPhaseStepTwo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Spin, Typography } from 'antd';\n// Components\nimport ReadyPlayersBar from './ReadyPlayersBar';\n\nconst WaitingRoom = ({ players }) => {\n  return (\n    <div className=\"waiting-room\">\n      <Typography.Title className=\"waiting-room__title\">Pronto!</Typography.Title>\n      <Spin />\n      <Typography.Paragraph className=\"waiting-room__paragraph\">\n        Vamos aguardar enquanto os outros jogadores terminam!\n      </Typography.Paragraph>\n      <ReadyPlayersBar players={players} />\n    </div>\n  );\n};\n\nWaitingRoom.propTypes = {\n  players: PropTypes.object.isRequired,\n};\n\nexport default WaitingRoom;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport useSound from 'use-sound';\n// Design Resources\nimport { message, notification } from 'antd';\n// State & Hooks\nimport useGlobalState from '../../hooks/useGlobalState';\nimport { useLoading } from '../../hooks';\n// Resources & Utils\nimport { ARTE_RUIM_API } from '../../adapters';\nimport { ARTE_RUIM_PHASES } from '../../utils/constants';\nimport allCards from '../../resources/arte-ruim-cards.json';\nimport arteRuimTimer from '../../sounds/arte-ruim-timer.mp3';\n// Components\nimport PhaseContainer from '../shared/PhaseContainer';\nimport DrawPhaseStepOne from './DrawPhaseStepOne';\nimport DrawPhaseStepTwo from './DrawPhaseStepTwo';\nimport WaitingRoom from '../shared/WaitingRoom';\n\nfunction DrawPhase({ players, state, info }) {\n  const [, setLoader] = useLoading();\n  const [gameId] = useGlobalState('gameId');\n  const [gameName] = useGlobalState('gameName');\n  const [me] = useGlobalState('me');\n  const [amIReady, setImReady] = useState(false);\n  const [step, setStep] = useState(1);\n  const [secretCard, setSecretCard] = useState({});\n  const [play] = useSound(arteRuimTimer, { volume: 0.4 });\n\n  useEffect(() => {\n    const myCardId = state?.cards?.[me];\n    setSecretCard(allCards?.[myCardId] ?? {});\n  }, [state?.cards, me]);\n\n  const onSubmitDrawing = useCallback(\n    async (lines) => {\n      try {\n        setLoader('submit-drawing', true);\n        setStep(3);\n        const response = await ARTE_RUIM_API.submitDrawing({\n          gameId,\n          gameName,\n          playerName: me,\n          drawing: JSON.stringify(lines),\n          cardId: secretCard.id,\n        });\n        if (response.data) {\n          setImReady(true);\n          message.success('Acabou o tempo! Aguarde enquanto os outros participantes desenham');\n        }\n      } catch (e) {\n        notification.error({\n          message: 'Vixi, o aplicativo encontrou um erro ao tentar enviar o desenho',\n          description: JSON.stringify(e),\n          placement: 'bottomLeft',\n        });\n        console.error(e);\n      } finally {\n        setLoader('submit-drawing', false);\n      }\n    },\n    [gameId, gameName, setLoader, me, secretCard.id]\n  );\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={ARTE_RUIM_PHASES.DRAW}\n      className=\"draw-phase\"\n    >\n      {step === 1 && !amIReady && <DrawPhaseStepOne setStep={setStep} round={state?.round} play={play} />}\n\n      {step === 2 && !amIReady && (\n        <DrawPhaseStepTwo secretCard={secretCard} onSubmitDrawing={onSubmitDrawing} />\n      )}\n\n      {step === 3 && <WaitingRoom players={players} />}\n    </PhaseContainer>\n  );\n}\n\nexport default DrawPhase;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nconst getPathFromKonvaLines = (lines) => {\n  const result = lines.map((lineArr) => {\n    let path = '';\n    for (let x = 0, y = 1; y < lineArr.length; x += 2, y += 2) {\n      if (lineArr[x + 2] && lineArr[y + 2]) {\n        path += `M${lineArr[x]},${lineArr[y]} L${lineArr[x + 2]},${lineArr[y + 2]}`;\n      }\n    }\n\n    return path;\n  });\n\n  return result;\n};\n\nfunction CanvasSVG({ drawing = '', className = '', size = 250 }) {\n  const konvaLines = JSON.parse(drawing);\n  const paths = getPathFromKonvaLines(konvaLines);\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 500 500\"\n      overflow=\"hidden\"\n      className={className}\n      style={{ width: `${size}px` }}\n    >\n      <defs />\n      {paths.map((path, index) => (\n        <path\n          key={`${drawing}-${index}`}\n          d={path}\n          fill=\"none\"\n          stroke=\"#000\"\n          strokeWidth=\"4\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit=\"10\"\n        />\n      ))}\n    </svg>\n  );\n}\n\nCanvasSVG.propTypes = {\n  drawing: PropTypes.string.isRequired,\n  className: PropTypes.string,\n};\n\nexport default memo(CanvasSVG);\n","import React from 'react';\n\nfunction Ribbon({ cardEntryId }) {\n  const [, , letter] = cardEntryId.split('-');\n  return (\n    <div className=\"ribbon\">\n      <div className={`ribbon__content ribbon__content--${letter} color-background--${letter}`}>{letter}</div>\n    </div>\n  );\n}\n\nexport default Ribbon;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Components\nimport CanvasSVG from './CanvasSVG';\nimport Ribbon from './Ribbon';\n\nfunction EvaluationAllDrawings({ drawings, activeItem, onActivateItem, votes, canvasSize }) {\n  return (\n    <ul className=\"evaluation-phase__all-drawings\">\n      {drawings?.map((drawingEntry) => {\n        const canvasEntryId = `drawing-${drawingEntry.cardId}`;\n        return (\n          <li\n            key={canvasEntryId}\n            className={clsx(\n              'evaluation-phase__li-drawing-button',\n              activeItem === canvasEntryId && 'evaluation-phase__li-drawing-button--active'\n            )}\n            onClick={() => onActivateItem(canvasEntryId)}\n          >\n            {votes?.[canvasEntryId] && <Ribbon cardEntryId={votes[canvasEntryId]} />}\n            <CanvasSVG\n              drawing={drawingEntry.drawing}\n              className=\"evaluation-phase__drawing\"\n              size={canvasSize}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nEvaluationAllDrawings.propTypes = {\n  activeItem: PropTypes.string,\n  drawings: PropTypes.arrayOf(\n    PropTypes.shape({\n      cardId: PropTypes.string,\n      drawing: PropTypes.string,\n    })\n  ),\n  onActiveItem: PropTypes.func,\n  votes: PropTypes.object,\n  canvasSize: PropTypes.number,\n};\n\nexport default EvaluationAllDrawings;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Resources\nimport allCards from '../../resources/arte-ruim-cards.json';\n\nfunction Card({ id, title = 'Título' }) {\n  const card = allCards[id];\n\n  return (\n    <div className=\"secret-word-card\">\n      <span className={`secret-word-card__title color-background--${title}`}>{title}</span>\n      <span className=\"secret-word-card__text\">{card?.text}</span>\n      <span className=\"secret-word-card__level\">{Array(card?.level).fill('•')}</span>\n    </div>\n  );\n}\n\nCard.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string,\n};\n\nexport default memo(Card);\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Utils\nimport { LETTERS } from '../../utils/constants';\n// Components\nimport Card from './Card';\n\nfunction EvaluationAllCards({ cards, activeItem, onActivateItem, votes }) {\n  return (\n    <ul className=\"evaluation-phase__all-cards\">\n      {cards.map((cardEntry, index) => {\n        const letter = LETTERS[index];\n        const cardEntryId = `card-${cardEntry.id}-${letter}`;\n        return (\n          <li\n            key={cardEntryId}\n            className={clsx(\n              'evaluation-phase__li-card-button',\n              activeItem === cardEntryId && 'evaluation-phase__li-card-button--active',\n              Object.values(votes).includes(cardEntryId) && 'evaluation-phase__li-card-button--used'\n            )}\n            onClick={() => onActivateItem(cardEntryId)}\n          >\n            <Card id={cardEntry.id} title={letter} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nEvaluationAllCards.propTypes = {\n  activeItem: PropTypes.string,\n  cards: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n    })\n  ),\n  onActiveItem: PropTypes.func,\n  votes: PropTypes.object,\n};\n\nexport default EvaluationAllCards;\n","import React, { memo } from 'react';\n// Design Resources\nimport { Slider } from 'antd';\n// State & Hooks\nimport { useGlobalState } from '../../hooks';\n\nconst CanvasResizer = () => {\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n\n  return (\n    <div className=\"canvas-resizer\">\n      <div className=\"canvas-resizer__label\">Tamanho das Images</div>\n      <Slider\n        className=\"canvas-resizer__slider\"\n        defaultValue={canvasSize}\n        min={100}\n        max={500}\n        step={50}\n        onChange={setCanvasSize}\n      />\n    </div>\n  );\n};\n\nexport default memo(CanvasResizer);\n","import React, { useCallback, useState } from 'react';\n// Design Resources\nimport { Button, message, notification, Space, Typography } from 'antd';\nimport { CloudUploadOutlined } from '@ant-design/icons';\n// State\nimport useGlobalState from '../../hooks/useGlobalState';\n// Hooks\nimport { useLoading } from '../../hooks';\n// Utils\nimport { ARTE_RUIM_API } from '../../adapters';\nimport { ARTE_RUIM_PHASES } from '../../utils/constants';\n// Components\nimport WaitingRoom from '../shared/WaitingRoom';\nimport EvaluationAllDrawings from './EvaluationAllDrawings';\nimport EvaluationAllCards from './EvaluationAllCards';\nimport PhaseContainer from '../shared/PhaseContainer';\nimport CanvasResizer from './CanvasResizer';\n\nfunction EvaluationPhase({ players, state, info }) {\n  const [, setLoader] = useLoading();\n  const [gameId] = useGlobalState('gameId');\n  const [gameName] = useGlobalState('gameName');\n  const [me] = useGlobalState('me');\n  const [canvasSize] = useGlobalState('canvasSize');\n  const [amIReady, setImReady] = useState(false);\n  const [step, setStep] = useState(1);\n  const [votes, setVotes] = useState({});\n  const [activeItem, setActiveItem] = useState(null);\n\n  const onActivateItem = useCallback(\n    (entryId) => {\n      const [type] = entryId.split('-');\n      if (!activeItem || activeItem.startsWith(type)) {\n        setActiveItem(entryId);\n      } else {\n        if (type === 'card') {\n          setVotes((prevVotes) => {\n            return {\n              ...prevVotes,\n              [activeItem]: entryId,\n            };\n          });\n        } else {\n          setVotes((prevVotes) => {\n            return {\n              ...prevVotes,\n              [entryId]: activeItem,\n            };\n          });\n        }\n        setActiveItem(null);\n      }\n    },\n    [activeItem]\n  );\n\n  const onSubmitVoting = useCallback(async () => {\n    try {\n      setLoader('submit-drawing', true);\n      const preparedVotes = Object.entries(votes).reduce((acc, [drawingEntryId, cardEntryId]) => {\n        const [, drawingId] = drawingEntryId.split('-');\n        const [, cardId] = cardEntryId.split('-');\n        acc[drawingId] = cardId;\n        return acc;\n      }, {});\n\n      setStep(2);\n\n      const response = await ARTE_RUIM_API.submitVoting({\n        gameId,\n        gameName,\n        playerName: me,\n        votes: preparedVotes,\n      });\n      if (response.data) {\n        setImReady(true);\n        message.success('Avaliação enviada! Agora aguarde os outros jogadores');\n      }\n    } catch (e) {\n      notification.error({\n        message: 'Vixi, o aplicativo encontrou um erro ao tentar enviar sua avaliação',\n        description: JSON.stringify(e),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n    } finally {\n      setLoader('submit-drawing', false);\n    }\n  }, [gameId, gameName, setLoader, me, votes]);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={ARTE_RUIM_PHASES.EVALUATION}\n      className=\"evaluation-phase\"\n    >\n      {step === 1 && !amIReady && (\n        <div className=\"evaluation-phase__step-one\">\n          <CanvasResizer />\n          <Typography.Title className=\"center\">Adivinhação</Typography.Title>\n          <Typography.Paragraph className=\"center\">\n            Encontre os pares de desenho e carta clicando em uma carta ou desenho e em seguida clicando em seu\n            par. Uma bandeirinha aparecerá no topo de cada desenho com a cor e letra da carta que você\n            selecionou. Quando encontrar todos os pares, envie sua avaliação!\n          </Typography.Paragraph>\n\n          <EvaluationAllDrawings\n            drawings={state?.drawings ?? []}\n            activeItem={activeItem}\n            onActivateItem={onActivateItem}\n            votes={votes}\n            canvasSize={canvasSize}\n          />\n\n          <EvaluationAllCards\n            cards={state?.cards ?? []}\n            activeItem={activeItem}\n            onActivateItem={onActivateItem}\n            votes={votes}\n          />\n\n          <Space className=\"evaluation-phase__action-button\">\n            <Button\n              type=\"primary\"\n              onClick={onSubmitVoting}\n              disabled={Object.values(votes).length < state.drawings.length}\n              icon={<CloudUploadOutlined />}\n            >\n              Enviar sua avaliação\n            </Button>\n          </Space>\n        </div>\n      )}\n\n      {step === 2 && <WaitingRoom players={players} />}\n    </PhaseContainer>\n  );\n}\n\nexport default EvaluationPhase;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Components\nimport AvatarEntry from '../avatars/AvatarEntry';\n\nfunction GalleryWindowCredits({ artist, artistAvatarId }) {\n  return (\n    <div className=\"gallery-window__credits\">\n      <div className=\"gallery-window__label\">Artista</div>\n      <span className=\"gallery-window__artist-name\">\n        <AvatarEntry id={artistAvatarId} name={artist} />\n      </span>\n    </div>\n  );\n}\n\nGalleryWindowCredits.propTypes = {\n  artist: PropTypes.string,\n  artistAvatarId: PropTypes.number,\n};\n\nexport default memo(GalleryWindowCredits);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Avatar as AntAvatar } from 'antd';\nimport { MessageFilled } from '@ant-design/icons';\n// Resources\nimport allCards from '../../resources/arte-ruim-cards.json';\n// Components\nimport Avatar from '../avatars/Avatar';\n\nfunction GalleryWindowGuesses({ playersSay, players }) {\n  return (\n    <div className=\"gallery-window__guesses\">\n      <div className=\"gallery-window__label\">Participantes votaram</div>\n      {Object.entries(playersSay).map(([cardId, playersNames], index) => {\n        return (\n          <div key={`guess-${cardId}-${index}`} className=\"gallery-window__guess\">\n            <div className=\"gallery-window__speech-bubble\">\n              <MessageFilled className=\"gallery-window__speech-bubble-icon\" /> {allCards[cardId]?.text}\n            </div>\n            <div className=\"gallery-window__players\">\n              <AntAvatar.Group>\n                {playersNames.map((playerName) => (\n                  <Avatar\n                    id={players[playerName].avatarId}\n                    key={`guess-avatar-${players[playerName].avatarId}`}\n                  />\n                ))}\n              </AntAvatar.Group>\n              <span className=\"gallery-window__players-names\">{playersNames.join(', ')}</span>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nGalleryWindowGuesses.propTypes = {\n  playersSay: PropTypes.object,\n  players: PropTypes.object,\n};\n\nexport default memo(GalleryWindowGuesses);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTimer } from 'react-timer-hook';\n// Design Resources\nimport { Button } from 'antd';\nimport {\n  PauseOutlined,\n  PlayCircleOutlined,\n  StepBackwardOutlined,\n  StepForwardOutlined,\n  TrophyOutlined,\n} from '@ant-design/icons';\n// Utils\nimport { inNSeconds } from '../../utils';\n\nfunction GalleryWindowControls({ galleryLength, activeIndex, setActiveIndex, setStep }) {\n  const { seconds, isRunning, pause, resume } = useTimer({\n    expiryTimestamp: inNSeconds(10 * galleryLength),\n    autoStart: true,\n    onExpire: () => setStep(1),\n  });\n\n  // Automatically go to the next window every 10 seconds\n  useEffect(() => {\n    if (seconds < 10 * galleryLength && seconds > 0 && seconds % 10 === 0) {\n      setActiveIndex((s) => Math.min(s + 1, galleryLength - 1));\n    }\n  }, [seconds, setActiveIndex, galleryLength]);\n\n  const previousStep = () => {\n    setActiveIndex((s) => Math.max(s - 1, 0));\n  };\n\n  const nextStep = () => {\n    setActiveIndex((s) => Math.min(s + 1, galleryLength - 1));\n  };\n\n  return (\n    <div className=\"gallery-window__controls\">\n      <div className=\"gallery-window__timer-bar\">\n        <span style={{ width: `${Math.abs((10 * seconds) / galleryLength - 100)}%` }}></span>\n      </div>\n      <Button\n        size=\"large\"\n        icon={<StepBackwardOutlined />}\n        onClick={previousStep}\n        disabled={activeIndex === 0}\n      >\n        Desenho Anterior\n      </Button>\n      <Button\n        size=\"large\"\n        icon={isRunning ? <PauseOutlined /> : <PlayCircleOutlined />}\n        onClick={isRunning ? pause : resume}\n      />\n      <Button size=\"large\" onClick={nextStep} disabled={activeIndex === galleryLength - 1}>\n        Próximo Desenho <StepForwardOutlined />\n      </Button>\n      <Button\n        className=\"gallery-window__go-to-ranking\"\n        size=\"large\"\n        onClick={() => setStep(1)}\n        icon={<TrophyOutlined />}\n      >\n        Ver Ranking\n      </Button>\n    </div>\n  );\n}\n\nGalleryWindowControls.propTypes = {\n  galleryLength: PropTypes.number,\n  activeIndex: PropTypes.number,\n  setActiveIndex: PropTypes.func,\n  setStep: PropTypes.func,\n};\n\nexport default GalleryWindowControls;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { StarFilled } from '@ant-design/icons';\n\nfunction StarPoints({ quantity, className = '' }) {\n  if (!quantity || quantity < 1) {\n    return <span></span>;\n  }\n  const starArrays = new Array(quantity).fill(<StarFilled />);\n  return (\n    <span className={clsx('star-points', className)}>\n      + <span className=\"star-points__stars\">{starArrays}</span> point{quantity > 1 ? 's' : ''}\n    </span>\n  );\n}\n\nStarPoints.propTypes = {\n  quantity: PropTypes.number,\n  className: PropTypes.string,\n};\n\nexport default memo(StarPoints);\n","import React, { Fragment, memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Avatar as AntAvatar, Typography } from 'antd';\nimport { CrownFilled, DeleteFilled } from '@ant-design/icons';\n// Resources\nimport allCards from '../../resources/arte-ruim-cards.json';\n// Components\nimport Avatar from '../avatars/Avatar';\nimport StarPoints from '../shared/StarPoints';\n\nfunction GalleryWindowResult({ artist, correctAnswer, playersPoints, playersSay, players }) {\n  const correctGuesses = Object.values(playersSay?.[correctAnswer] ?? {});\n\n  return (\n    <div className=\"gallery-window__result\">\n      <div className=\"gallery-window__label\">E a carta correta é</div>\n      <div className=\"gallery-window__speech-bubble\">\n        <CrownFilled className=\"gallery-window__speech-bubble-icon\" />\n        {allCards[correctAnswer].text}\n      </div>\n      {correctGuesses.length ? (\n        <Fragment>\n          <div className=\"gallery-window__players\">\n            <AntAvatar.Group>\n              {correctGuesses.map((playerName) => {\n                return (\n                  <Avatar key={`correct-guess-avatar-${playerName}`} id={players[playerName].avatarId} />\n                );\n              })}\n            </AntAvatar.Group>\n            <StarPoints quantity={2} />\n          </div>\n          <div className=\"gallery-window__artist-points\">\n            <Avatar id={players[artist].avatarId} /> <StarPoints quantity={playersPoints?.[artist]} />\n          </div>\n        </Fragment>\n      ) : (\n        <Typography.Text className=\"gallery-window__no-wins\">\n          <DeleteFilled /> Nossa, ninguém acertou. Seu desenho deve ter sido muito ruim.\n        </Typography.Text>\n      )}\n    </div>\n  );\n}\n\nGalleryWindowResult.propTypes = {\n  artist: PropTypes.string,\n  correctAnswer: PropTypes.string,\n  playersPoints: PropTypes.object,\n  playersSay: PropTypes.object,\n  players: PropTypes.object,\n};\n\nexport default memo(GalleryWindowResult);\n","import React, { memo } from 'react';\n\n// Hooks\nimport { useGlobalState } from '../../hooks';\n// Components\nimport CanvasSVG from './CanvasSVG';\nimport GalleryWindowCredits from './GalleryWindowCredits';\nimport GalleryWindowGuesses from './GalleryWindowGuesses';\nimport GalleryWindowControls from './GalleryWindowControls';\nimport GalleryWindowResult from './GalleryWindowResult';\nimport CanvasResizer from './CanvasResizer';\n\nfunction GalleryWindow({ window, galleryLength, players, activeIndex, setActiveIndex, setStep }) {\n  const [canvasSize] = useGlobalState('canvasSize');\n\n  const { drawing, artist, correctAnswer, playersPoints, playersSay } = window;\n\n  return (\n    <div className=\"gallery-window\">\n      <CanvasResizer />\n      <div className=\"gallery-window__drawing-container\">\n        <CanvasSVG\n          key={window.correctAnswer}\n          drawing={drawing}\n          size={canvasSize}\n          className=\"gallery-window__drawing\"\n        />\n      </div>\n\n      <GalleryWindowCredits artist={artist} artistAvatarId={players[artist].avatarId} />\n\n      <GalleryWindowGuesses players={players} playersSay={playersSay} />\n\n      <GalleryWindowResult\n        artist={artist}\n        correctAnswer={correctAnswer}\n        playersPoints={playersPoints}\n        playersSay={playersSay}\n        players={players}\n      />\n\n      <GalleryWindowControls\n        galleryLength={galleryLength}\n        activeIndex={activeIndex}\n        setActiveIndex={setActiveIndex}\n        setStep={setStep}\n      />\n    </div>\n  );\n}\n\nexport default memo(GalleryWindow);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTimer } from 'react-timer-hook';\n// Design Resources\nimport { CrownFilled } from '@ant-design/icons';\n// Utils\nimport { inNSeconds } from '../../utils';\n// Components\nimport Avatar from '../avatars/Avatar';\n\nfunction RankingBoard({ players, ranking }) {\n  const [displayStep, setDisplayStep] = useState(0);\n  const [sortedRanking, setSortedRanking] = useState([]);\n  const [positions, setPositions] = useState([]);\n\n  const maxPoints = ranking[0].newScore;\n\n  const rankByFinalScore = () => {\n    setSortedRanking(ranking.sort((a, b) => (a.newScore < b.newScore ? 1 : -1)));\n    setDisplayStep(3);\n  };\n\n  const { seconds } = useTimer({\n    expiryTimestamp: inNSeconds(4),\n    autoStart: true,\n    onExpire: () => rankByFinalScore(),\n  });\n\n  // Rank by previousScore\n  useEffect(() => {\n    setSortedRanking(ranking.sort((a, b) => (a.previousScore < b.previousScore ? 1 : -1)));\n  }, []); // eslint-disable-line\n\n  // Show gained points\n  useEffect(() => {\n    if (seconds === 3) {\n      setDisplayStep(1);\n    } else if (seconds === 2) {\n      setDisplayStep(2);\n    }\n  }, [seconds]);\n\n  // Determine position number in rank\n  useEffect(() => {\n    const property = displayStep < 3 ? 'previousScore' : 'newScore';\n\n    let lastPosition = 1;\n    let lastPoints = sortedRanking?.[0]?.[property] ?? 0;\n    setPositions(\n      sortedRanking.map((entry) => {\n        if (entry[property] < lastPoints) {\n          lastPoints = entry[property];\n          lastPosition += 1;\n        }\n\n        return lastPosition;\n      })\n    );\n  }, [sortedRanking, displayStep]);\n\n  return (\n    <div className=\"ranking-board\">\n      {sortedRanking.map((entry, index) => {\n        const { playerName, newScore, previousScore, gainedPoints } = entry;\n        return (\n          <div className={`ranking-board__row ranking-board__row--${index}`} key={`ranking-${playerName}`}>\n            <div className=\"ranking-board__cell-crown\">\n              {newScore > 0 && maxPoints === newScore && displayStep >= 3 && (\n                <CrownFilled className=\"ranking-board__crown-icon\" />\n              )}\n            </div>\n            <div className=\"ranking-board__cell-position\">#{positions?.[index] ?? ''}</div>\n            <div className=\"ranking-board__cell-player\">\n              <div className=\"ranking-board__avatar\">\n                <Avatar id={players[playerName].avatarId} />\n              </div>\n              <div className=\"ranking-board__name\">{playerName}</div>\n            </div>\n            <div className=\"ranking-board__cell-points\">{previousScore}</div>\n            {displayStep >= 1 && <div className=\"ranking-board__cell-points-plus\">+{gainedPoints}</div>}\n            {displayStep >= 2 && <div className=\"ranking-board__cell-points-total\">{newScore}</div>}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nRankingBoard.propTypes = {\n  players: PropTypes.object,\n  ranking: PropTypes.arrayOf(\n    PropTypes.shape({\n      playerName: PropTypes.string,\n      previousScore: PropTypes.number,\n      gainedPoints: PropTypes.number,\n      newScore: PropTypes.number,\n    })\n  ),\n};\n\nexport default RankingBoard;\n","import React, { Fragment, useCallback, useEffect, useState } from 'react';\n// Design Resources\nimport { Button, message, notification, Typography } from 'antd';\nimport { PictureOutlined, RocketFilled } from '@ant-design/icons';\n// State & Hooks\nimport useGlobalState from '../../hooks/useGlobalState';\nimport { useLoading } from '../../hooks';\n// Resources and Utils\nimport { ARTE_RUIM_API } from '../../adapters';\nimport { ARTE_RUIM_PHASES } from '../../utils/constants';\n// Components\nimport GalleryWindow from './GalleryWindow';\nimport PhaseContainer from '../shared/PhaseContainer';\nimport AdminOnly from '../shared/AdminOnly';\nimport RankingBoard from '../shared/RankingBoard';\n\nfunction GalleryPhase({ players, state, info }) {\n  const [, setLoader] = useLoading();\n  const [gameId] = useGlobalState('gameId');\n  const [gameName] = useGlobalState('gameName');\n  const [me] = useGlobalState('me');\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [step, setStep] = useState(0);\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n  const [cachedCanvasSize, setCachedCanvasSize] = useState(canvasSize);\n\n  // The gallery needs a bigger image, its annoying that we are changing the users settings but whatever\n  useEffect(() => {\n    if (step === 0) {\n      setCachedCanvasSize(canvasSize);\n      setCanvasSize(500);\n    } else {\n      setCanvasSize(cachedCanvasSize);\n    }\n  }, [step]); // eslint-disable-line\n\n  const onGoToNextRound = useCallback(async () => {\n    try {\n      setLoader('go-to-next-round', true);\n\n      const response = await ARTE_RUIM_API.goToNextPhase({\n        gameId,\n        gameName,\n        playerName: me,\n      });\n      if (response.data) {\n        message.success('Ranking!');\n      }\n    } catch (e) {\n      notification.error({\n        message: 'Vixi, o aplicativo encontrou um erro ao tentar ir para a proxima rodada',\n        description: JSON.stringify(e),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n    } finally {\n      setLoader('go-to-next-round', false);\n    }\n  }, [gameId, gameName, me, setLoader]);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={ARTE_RUIM_PHASES.GALLERY}\n      className=\"gallery-phase\"\n    >\n      {step === 0 && (\n        <Fragment>\n          <Typography.Title className=\"center\">Galeria de Arte</Typography.Title>\n          {state?.gallery && (\n            <GalleryWindow\n              window={state.gallery[activeIndex]}\n              galleryLength={state.gallery.length}\n              players={players}\n              activeIndex={activeIndex}\n              setActiveIndex={setActiveIndex}\n              setStep={setStep}\n            />\n          )}\n        </Fragment>\n      )}\n\n      {step === 1 && (\n        <Fragment>\n          <Typography.Title className=\"center\">\n            {state.pointsToVictory >= 0 ? 'Ranking' : 'Game Over'}\n          </Typography.Title>\n          <RankingBoard players={players} ranking={state.ranking} />\n          <Button\n            className=\"gallery-window__go-to-ranking\"\n            size=\"large\"\n            onClick={() => setStep(0)}\n            icon={<PictureOutlined />}\n          >\n            Ver Galeria\n          </Button>\n          <AdminOnly>\n            <Button icon={<RocketFilled />} danger type=\"primary\" onClick={onGoToNextRound}>\n              Ir para próxima rodada ou game over\n            </Button>\n          </AdminOnly>\n        </Fragment>\n      )}\n    </PhaseContainer>\n  );\n}\n\nexport default GalleryPhase;\n","import React from 'react';\n// Design Resources\nimport { Layout, Typography } from 'antd';\n\nfunction GameOverPhase() {\n  return (\n    <Layout.Content className=\"phase-container phase-container--vertical ranking-phase\">\n      <Typography.Title className=\"center\">Game Over</Typography.Title>\n      <Typography.Paragraph className=\"center\">\n        Esse jogo foi completo, expirou, ou trancado permanentemente.\n      </Typography.Paragraph>\n    </Layout.Content>\n  );\n}\n\nexport default GameOverPhase;\n","import React, { Fragment, useState } from 'react';\n// Design Resources\nimport { Affix, Avatar as AntAvatar, Badge, Button, Divider, Drawer } from 'antd';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n// Utils\nimport { ARTE_RUIM_PHASES, AVATAR_DESCRIPTIONS_BR } from '../../utils/constants';\n// Components\nimport Avatar from '../avatars/Avatar';\nimport RulesModal from '../modals/RulesModal';\n\nfunction GameInfoDrawer({ players, state, info, me }) {\n  const [visible, setVisible] = useState(false);\n\n  if (state.phase === ARTE_RUIM_PHASES.LOBBY) {\n    return <span></span>;\n  }\n\n  const showDrawer = () => {\n    setVisible(true);\n  };\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  const completeMe = players?.[me];\n  const rankedPlayers = Object.values(players).sort((a, b) => (a.score < b.score ? 1 : -1));\n\n  return (\n    <Fragment>\n      <Affix offsetTop={10} className=\"game-info-drawer__affix-button\">\n        <Button\n          type=\"primary\"\n          shape=\"circle\"\n          size=\"large\"\n          className=\"game-info-drawer__button\"\n          onClick={showDrawer}\n          icon={<InfoCircleOutlined />}\n        />\n      </Affix>\n      <Drawer title={info.title} placement=\"right\" closable={false} onClose={onClose} visible={visible}>\n        {completeMe && (\n          <Fragment>\n            <div className=\"game-info-drawer__label\">Você é</div>\n            <div className=\"game-info-drawer__me\">\n              <Badge count={completeMe.score} className=\"game-info-drawer__avatar-with-badge\">\n                <Avatar id={completeMe.avatarId} shape=\"square\" />\n              </Badge>\n              {completeMe.name}, {AVATAR_DESCRIPTIONS_BR[completeMe.avatarId]}\n            </div>\n          </Fragment>\n        )}\n        <Divider />\n        <RulesModal gameInfo={info} />\n        <Divider />\n        <div>\n          <div className=\"game-info-drawer__label-inline\">Rodada:</div>\n          <AntAvatar className=\"game-info-drawer__round\" size=\"small\">\n            {state?.round ?? '?'}\n          </AntAvatar>\n        </div>\n        <div>\n          <div className=\"game-info-drawer__label-inline\">Pontos restantes para alguém ganhar:</div>\n          <AntAvatar className=\"game-info-drawer__round\" size=\"small\">\n            {state?.pointsToVictory ?? '?'}\n          </AntAvatar>\n        </div>\n        <Divider />\n        <ul>\n          {rankedPlayers.map((player, index) => {\n            return (\n              <div className=\"game-info-drawer__ranked-player\" key={`ranked-${player.name}`}>\n                {index + 1}.{' '}\n                <Badge count={player.score} className=\"game-info-drawer__avatar-with-badge\">\n                  <Avatar id={player.avatarId} shape=\"square\" />\n                </Badge>\n                {player.name}, {AVATAR_DESCRIPTIONS_BR[player.avatarId]}\n              </div>\n            );\n          })}\n        </ul>\n      </Drawer>\n    </Fragment>\n  );\n}\n\nexport default GameInfoDrawer;\n","import React, { Fragment, useEffect, useState } from 'react';\n// Hooks\nimport { useGameState, useGlobalState } from '../../hooks';\nimport { GAME_COLLECTION, ARTE_RUIM_PHASES } from '../../utils/constants';\n// Hooks\nimport { useGamePlayers } from '../../hooks/useGamePlayers';\n// Utils\nimport gameList from '../../resources/games.json';\n// Components\nimport Lobby from '../lobby/Lobby';\nimport Rules from '../rules/Rules';\nimport PageError from '../errors/PageError';\nimport DrawPhase from './DrawPhase';\nimport EvaluationPhase from './EvaluationPhase';\nimport GalleryPhase from './GalleryPhase';\nimport GameOverPhase from './GameOverPhase';\nimport GameInfoDrawer from './GameInfoDrawer';\n\nfunction getActiveComponent(phase) {\n  switch (phase) {\n    case ARTE_RUIM_PHASES.LOBBY:\n      return Lobby;\n    case ARTE_RUIM_PHASES.RULES:\n      return Rules;\n    case ARTE_RUIM_PHASES.DRAW:\n      return DrawPhase;\n    case ARTE_RUIM_PHASES.EVALUATION:\n      return EvaluationPhase;\n    case ARTE_RUIM_PHASES.GALLERY:\n      return GalleryPhase;\n    case ARTE_RUIM_PHASES.GAME_OVER:\n      return GameOverPhase;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionArteRuim({ gameId }) {\n  const players = useGamePlayers(gameId, GAME_COLLECTION.ARTE_RUIM);\n  const state = useGameState(gameId, GAME_COLLECTION.ARTE_RUIM);\n  const [me] = useGlobalState('me');\n  const [info, setInfo] = useState({});\n\n  // Update game description as the gameId comes in\n  useEffect(() => {\n    setInfo(gameId?.[0] ? gameList[gameId[0]] : {});\n  }, [gameId]);\n\n  if (process.env.NODE_ENV === 'development') {\n    console.table(players);\n    console.log({ state });\n  }\n\n  if (!me) {\n    return <Lobby players={players} state={state} info={info} />;\n  }\n\n  const ActiveComponent = getActiveComponent(state.phase);\n\n  return (\n    <Fragment>\n      <GameInfoDrawer players={players} state={state} info={info} me={me} />\n      <ActiveComponent players={players} state={state} info={info} />\n    </Fragment>\n  );\n}\n\nexport default SessionArteRuim;\n","import { notification } from 'antd';\nimport { useDocument } from 'react-firebase-hooks/firestore';\n// Services\nimport { firestore } from '../services/firebase';\n\nexport function useGamePlayers(gameId, gameName) {\n  const [snapshot, loading, error] = useDocument(firestore.doc(`${gameName}/${gameId}/session/players`), {\n    snapshotListenOptions: { includeMetadataChanges: true },\n  });\n\n  if (error) {\n    notification.error({\n      message: 'Applicativo encontrou um erro ao tentar atualizar os jogadores',\n      description: JSON.stringify(error),\n      placement: 'bottomLeft',\n    });\n    console.error(error);\n  }\n\n  if (loading) {\n    console.log('%cRefreshing players...', 'color:orange');\n  }\n\n  return snapshot?.data() ?? {};\n}\n","import { notification } from 'antd';\nimport { useDocument } from 'react-firebase-hooks/firestore';\n// Services\nimport { firestore } from '../services/firebase';\n\nexport function useGameState(gameId, gameName) {\n  const [snapshot, loading, error] = useDocument(firestore.doc(`${gameName}/${gameId}/session/state`), {\n    snapshotListenOptions: { includeMetadataChanges: true },\n  });\n\n  if (error) {\n    notification.error({\n      message: 'Aplicativo encontrou um erro ao tentar atualizar o estado',\n      description: JSON.stringify(error),\n      placement: 'bottomLeft',\n    });\n    console.error(error);\n  }\n\n  if (loading) {\n    console.log('%cRefreshing state...', 'color:tomato');\n  }\n\n  return snapshot?.data() ?? {};\n}\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n// Design Resources\nimport { message, notification } from 'antd';\n// Adapters\nimport { GAME_API } from '../adapters';\n// Hooks\nimport { useIsGameStale, useLoading, useGlobalState } from '../hooks';\n// Utils\nimport { getGameIdFromURL, isValidGameId } from '../utils';\n// Components\nimport LoadingPage from './loaders/LoadingPage';\nimport PageError from './errors/PageError';\nimport SessionArteRuim from './arte-ruim/SessionArteRuim';\nimport { GAME_COLLECTION } from '../utils/constants';\n\nfunction Game() {\n  const history = useHistory();\n  const [, setLoader] = useLoading();\n  const [gameId, setGameId] = useGlobalState('gameId');\n  const [gameName, setGameName] = useGlobalState('gameName');\n  const [gameMeta, setGameMeta] = useGlobalState('gameMeta');\n\n  const [isPageLoading, setPageLoading] = useState(true);\n  const isGameStale = useIsGameStale(gameMeta?.createdAt);\n\n  // Verify url game code\n  useEffect(() => {\n    const urlGameId = getGameIdFromURL(history);\n    if (isValidGameId(urlGameId)) {\n      setGameId(urlGameId);\n    } else {\n      message.error('Vixi, the provided game id does not look right');\n      history.push('/');\n    }\n  }, [history, setGameId]);\n\n  // Load game\n  useEffect(() => {\n    setPageLoading(true);\n    async function loadGameSession() {\n      try {\n        setLoader('load', true);\n        const meta = await GAME_API.loadGame({ gameId });\n        setGameName(meta.data.gameName);\n        setGameMeta(meta.data);\n      } catch (e) {\n        console.error(e);\n        notification.error({\n          message: 'Erro ao carregar o jogo',\n          description: JSON.stringify(e),\n        });\n        console.error(e);\n      } finally {\n        setPageLoading(false);\n        setLoader('load', false);\n      }\n    }\n\n    if (gameId) {\n      loadGameSession();\n    }\n  }, [gameId]); // eslint-disable-line\n\n  // Deffer to load screen if any major API call is running\n  if (isPageLoading) {\n    return <LoadingPage />;\n  }\n\n  if (isGameStale) {\n    return (\n      <PageError message=\"Jogo expirado\" description=\"Esse jogo é muito antigo e não pode ser usado mais\" />\n    );\n  }\n\n  if (gameId && gameName) {\n    switch (gameName) {\n      case GAME_COLLECTION.ARTE_RUIM:\n        return <SessionArteRuim gameId={gameId} />;\n      default:\n        console.warn('Wrong game library provided');\n    }\n  }\n\n  // If switch fails, it's an error\n  return <PageError />;\n}\n\nexport default Game;\n","import { useEffect, useState } from 'react';\n\nexport function useIsGameStale(gameCreatedAt) {\n  const [isGameStale, setGameStale] = useState(false);\n\n  useEffect(() => {\n    setGameStale(Date.now() - 24 * 60 * 60 * 1000 > gameCreatedAt);\n  }, [gameCreatedAt, setGameStale]);\n\n  return isGameStale;\n}\n","import React from 'react';\n// Hooks\nimport { useLoading } from '../../hooks';\n\nfunction LoadingBar() {\n  const [isLoading] = useLoading();\n\n  return isLoading ? <div className=\"loading-bar\"></div> : <></>;\n}\n\nexport default LoadingBar;\n","import React, { useState, useEffect } from 'react';\nimport { HashRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\n\n// Design Resources\nimport { Layout, message } from 'antd';\n// Firebase\nimport { auth } from '../services/firebase';\n// State\nimport { useGlobalState } from '../hooks';\n// Pages\nimport Home from './Home';\nimport Admin from './Admin';\nimport Login from './Login';\nimport Game from './Game';\nimport LoadingPage from './loaders/LoadingPage';\nimport LoadingBar from './loaders/LoadingBar';\n\nfunction PrivateRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authenticated === true ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        )\n      }\n    />\n  );\n}\n\nfunction PublicRoute({ component: Component, authenticated, ...rest }) {\n  const fromPath = rest?.location?.state?.from?.pathname ?? '/';\n  return (\n    <Route\n      {...rest}\n      render={(props) => (authenticated === false ? <Component {...props} /> : <Redirect to={fromPath} />)}\n    />\n  );\n}\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useGlobalState('isAuthenticated');\n  const [, setIsAdmin] = useGlobalState('isAdmin');\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoading(false);\n        setIsAuthenticated(true);\n        setIsAdmin(true);\n        message.info('Você foi logado de volta automaticamente.');\n      } else {\n        setIsLoading(false);\n        setIsAuthenticated(false);\n        setIsAdmin(false);\n      }\n    });\n  }, []); // eslint-disable-line\n\n  return (\n    <Layout className=\"app\">\n      <LoadingBar />\n      <Router>\n        {isLoading ? (\n          <LoadingPage />\n        ) : (\n          <Switch>\n            <Route exact path=\"/\" component={Home}></Route>\n            <PrivateRoute path=\"/admin\" authenticated={isAuthenticated} component={Admin} />\n            <PublicRoute path=\"/login\" authenticated={isAuthenticated} component={Login}></PublicRoute>\n            <Route path=\"*\" component={Game} />\n          </Switch>\n        )}\n      </Router>\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport './styles/index.css';\n\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}