{"version":3,"file":"static/js/teste-de-elenco.795d2d02.chunk.js","mappings":"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","sources":["components/cards/SuspectCard.tsx","components/general/Achievements.tsx","components/general/Container.tsx","components/image-cards/ImageBlurButton.tsx","components/image-cards/ImageBlurButtonContainer.tsx","components/image-cards/ImageCard.tsx","components/image-cards/ImageCardBack.tsx","components/image-cards/ImageCardButton.tsx","components/image-cards/ImageCardHand.tsx","components/image-cards/ImageCardPreloadHand.tsx","components/image-cards/ImageCardSelectButton.tsx","components/metrics/MetricHighlight.tsx","components/metrics/PointsHighlight.tsx","components/ranking/RankingBoard.tsx","components/ranking/StepRankingWrapper.tsx","games/teste-de-elenco/utils/api-requests.ts","games/teste-de-elenco/utils/helpers.ts","games/teste-de-elenco/StepSelectGenre.tsx","games/teste-de-elenco/PhaseMovieGenreSelection.tsx","games/teste-de-elenco/components/ActorsBoard.tsx","games/teste-de-elenco/components/RoleBoard.tsx","games/teste-de-elenco/StepSelectActor.tsx","games/teste-de-elenco/PhaseActorSelection.tsx","games/teste-de-elenco/StepRanking.tsx","games/teste-de-elenco/components/ActorsSelections.tsx","games/teste-de-elenco/StepResult.tsx","games/teste-de-elenco/PhaseResult.tsx","games/teste-de-elenco/PhaseGameOver.tsx","games/teste-de-elenco/SessionTesteDeElenco.tsx","games/teste-de-elenco/utils/achievements.ts","icons/CrownIcon.tsx","icons/NoIcon.tsx","icons/StarIcon.tsx","../node_modules/@ant-design/icons-svg/es/asn/DownCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/DownCircleOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/UpCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/UpCircleOutlined.js"],"sourcesContent":["// Components\nimport { DualTranslate } from 'components/language';\nimport { ImageCard } from 'components/image-cards';\n// Sass\nimport './SuspectCard.scss';\n\ntype SuspectCardProps = {\n  /**\n   * Suspect object\n   */\n  suspect: Suspect;\n  /**\n   * Card width\n   */\n  width: number;\n};\n\nexport function SuspectCard({ suspect, width }: SuspectCardProps) {\n  return (\n    <div className=\"suspect-card\">\n      <ImageCard imageId={suspect.id} className=\"suspect-card__image\" cardWidth={width} preview={false} />\n      <div className=\"suspect-card__name\">\n        <DualTranslate>{suspect.name}</DualTranslate>\n      </div>\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Popover } from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { DualTranslate, Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { Medal } from './Medal';\n\ntype AchievementsProps = {\n  players: GamePlayers;\n  achievements: Achievement[];\n  reference: AchievementReference;\n};\n\nconst unknownText = { pt: 'Desconhecido', en: 'Unknown' };\n\nexport function Achievements({ players, achievements, reference }: AchievementsProps) {\n  return (\n    <div className={clsx('achievements', getAnimationClass('fadeIn'))}>\n      <Title size=\"small\" level={3}>\n        <Translate pt=\"Medalhas\" en=\"Achievements\" />\n      </Title>\n      <ul className=\"achievements-list\">\n        {achievements.map((achievement, index) => {\n          const { icon = 'star', ...achievementObj } = reference[achievement.type] ?? {};\n          const player = players[achievement.playerId];\n          return (\n            <li\n              key={`achievement-${achievement.type}`}\n              className={clsx(\n                'achievements-entry',\n                getAnimationClass('flipInY', {\n                  delay: index < achievements.length / 2 ? index : achievements.length - 1 - index,\n                })\n              )}\n            >\n              <div className=\"achievement__medal\">\n                <Medal id={icon} />\n              </div>\n              <h4 className=\"achievement__title\">\n                <DualTranslate>{achievementObj.title ?? unknownText}</DualTranslate>\n              </h4>\n              <div className=\"achievement__avatar\">\n                <Avatar id={player.avatarId} />\n              </div>\n              <div className=\"achievement__name\">{player.name}</div>\n              {Boolean(achievementObj.description) && (\n                <div className=\"achievement__description\">\n                  <Popover\n                    content={\n                      <>\n                        <DualTranslate>{achievementObj.description ?? unknownText}</DualTranslate> (\n                        {achievement.value})\n                      </>\n                    }\n                  >\n                    <Button icon={<QuestionCircleOutlined />} shape=\"circle\" type=\"text\" size=\"small\" />\n                  </Popover>\n                </div>\n              )}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","import { ReactNode } from 'react';\nimport clsx from 'clsx';\n// Ant Design Resources\nimport { Space, SpaceProps } from 'antd';\n// Components\nimport { Title, TitleProps } from 'components/text';\n// Sass\nimport './Container.scss';\n\ntype ContainerProps = {\n  title: ReactNode;\n  children: ReactNode;\n  contained?: boolean;\n  className?: string;\n  titleProps?: TitleProps;\n  childrenContainerProps?: SpaceProps;\n} & Omit<SpaceProps, 'title' | 'children'>;\n\n/**\n * Container component with title and center aligned children\n */\nexport function Container({\n  title,\n  children,\n  className,\n  contained,\n  titleProps,\n  childrenContainerProps,\n  ...spaceProps\n}: ContainerProps) {\n  const { level = 4, size = 'xx-small', ...restTitleProps } = titleProps ?? {};\n\n  const {\n    className: childrenClassName,\n    wrap = true,\n    direction: childrenDirection = 'horizontal',\n    ...restChildrenContainerProps\n  } = childrenContainerProps ?? {};\n\n  return (\n    <Space direction=\"vertical\" className={clsx('container-wrapper', className)} {...spaceProps}>\n      <Title level={level} size={size} {...restTitleProps}>\n        {title}\n      </Title>\n\n      <Space\n        direction={childrenDirection}\n        wrap={wrap}\n        className={clsx(\n          'container-wrapper__children',\n          contained && 'container-wrapper__children--contained',\n          childrenClassName\n        )}\n        {...restChildrenContainerProps}\n      >\n        {children}\n      </Space>\n    </Space>\n  );\n}\n","// Ant Design Resources\nimport { Button, Tooltip } from 'antd';\nimport { EyeInvisibleOutlined, EyeOutlined } from '@ant-design/icons';\n// Utils\nimport { useBlurCards } from 'hooks/useBlurCards';\n// Components\nimport { Translate } from 'components/language';\n// Sass\nimport './ImageBlurButton.scss';\n\ntype ImageBlurButtonProps = {\n  /**\n   * The card to be blurred\n   */\n  cardId: string;\n  /**\n   * Determines if the button is ghost or not (default: true)\n   */\n  ghost?: boolean;\n};\n\nexport function ImageBlurButton({ cardId, ghost = true }: ImageBlurButtonProps) {\n  const { blurCard, isBlurEnabled, shouldBeBlurred } = useBlurCards();\n\n  return isBlurEnabled ? (\n    <Tooltip\n      placement=\"top\"\n      title={\n        <Translate\n          pt=\"Aperte o botão para embaçar a foto caso você tenha alguma fobia\"\n          en=\"Use this button to blur the image in case of any phobia\"\n        />\n      }\n    >\n      <Button ghost={ghost} onClick={() => blurCard(cardId)} size=\"small\" className=\"image-blur-button\">\n        {shouldBeBlurred(cardId) ? (\n          <>\n            <EyeOutlined /> <Translate pt=\"Descredar\" en=\"Focus\" />\n          </>\n        ) : (\n          <>\n            <EyeInvisibleOutlined /> <Translate pt=\"Credo\" en=\"Blur\" />\n          </>\n        )}\n      </Button>\n    </Tooltip>\n  ) : (\n    <></>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Components\nimport { ImageBlurButton } from './ImageBlurButton';\n// Sass\nimport './ImageBlurButtonContainer.scss';\n\ninterface ImageBlurButtonContainerProps extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * The card to be blurred\n   */\n  cardId: string;\n  /**\n   * The content the component is wrapping\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * The position of the button (default: bottom)\n   */\n  position?: 'top' | 'bottom';\n  /**\n   * Determines if the button is ghost or not (default: true)\n   */\n  ghost?: boolean;\n}\n\nexport function ImageBlurButtonContainer({\n  cardId,\n  children,\n  className = '',\n  position = 'bottom',\n  ghost = true,\n  ...rest\n}: ImageBlurButtonContainerProps) {\n  return (\n    <div className={clsx('image-blur-button-container', className)} {...rest}>\n      {position === 'top' && <ImageBlurButton cardId={cardId} ghost={ghost} />}\n      {children}\n      {position === 'bottom' && <ImageBlurButton cardId={cardId} ghost={ghost} />}\n    </div>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Image } from 'antd';\n// Constants\nimport { PUBLIC_URL } from 'utils/constants';\n// Assets\nimport placeholder from 'assets/images/placeholder.jpg';\n// Hooks\nimport { useBlurCards } from 'hooks/useBlurCards';\nimport { useTDBaseUrl } from 'hooks/useTDBaseUrl';\n// Sass\nimport './ImageCard.scss';\n\nexport type ImageCardProps = {\n  /**\n   * The id of the image\n   */\n  imageId: string;\n  /**\n   * The width of the card (Default: 200px)\n   */\n  cardWidth?: number;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Enables or disables the preview (default: true)\n   */\n  preview?: Boolean;\n  /**\n   * Replacement image when the preview is open\n   */\n  previewImageId?: string;\n  /**\n   * The file extension for the image (default: jpg)\n   */\n  fileExtension?: 'jpg' | 'png' | 'gif';\n};\n\n/**\n * Renders an Image Card on tdi\n */\nexport const ImageCard = ({\n  imageId,\n  cardWidth = 200,\n  className = '',\n  preview = true,\n  previewImageId = '',\n  fileExtension = 'jpg',\n}: ImageCardProps) => {\n  const { shouldBeBlurred } = useBlurCards();\n  const baseUrl = useTDBaseUrl('tdi');\n\n  const baseClass = 'image-card';\n\n  const fallbackName = `placeholder-${imageId[imageId.length - 1]}`;\n\n  const imageURL = imageId.replace(/-/g, '/');\n\n  const isBlurred = shouldBeBlurred(imageId);\n\n  const booleanPreviewConfig =\n    preview && !isBlurred\n      ? {\n          maskClassName: `${baseClass}__preview-mask`,\n        }\n      : false;\n\n  return (\n    <div className={clsx(baseClass, isBlurred && `${baseClass}--blur`, className)}>\n      <Image\n        width={cardWidth}\n        src={`${baseUrl}/${imageURL}.${fileExtension}`}\n        placeholder={<Image preview={false} src={placeholder} width={cardWidth} />}\n        fallback={`${PUBLIC_URL.CARDS}${fallbackName}.jpg`}\n        preview={\n          Boolean(previewImageId)\n            ? {\n                src: `${baseUrl}/${previewImageId.replace(/-/g, '/')}.${fileExtension}`,\n              }\n            : booleanPreviewConfig\n        }\n      />\n    </div>\n  );\n};\n","import { ImageCard, ImageCardProps } from './ImageCard';\n\ntype ImageCardBackProps = Omit<ImageCardProps, 'imageId'> & { imageId?: ImageCardId };\n\nexport const ImageCardBack = ({ imageId = 'back-default', ...rest }: ImageCardBackProps) => {\n  return <ImageCard imageId={imageId} {...rest} />;\n};\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Button, ButtonProps } from 'antd';\nimport { DownCircleOutlined, UpCircleOutlined } from '@ant-design/icons';\n//  Components\nimport { Translate } from 'components/language';\nimport { DebugOnly } from 'components/debug';\nimport { ImageBlurButtonContainer } from './ImageBlurButtonContainer';\n// Sass\nimport './ImageCardButton.scss';\n\ntype ImageCardButtonProps = {\n  /**\n   * The id of the image\n   */\n  imageId: string;\n  /**\n   * The content, usually a ImageCard component\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name for the container\n   */\n  className?: string;\n  /**\n   * The position of the button (default: top)\n   */\n  buttonPosition?: 'top' | 'bottom';\n  /**\n   * The button is over the image (default: false)\n   */\n  over?: boolean;\n  /**\n   * Button icon replacement\n   */\n  icon?: ReactNode;\n  /**\n   * The function to be called when the button is clicked\n   */\n  onClick?: (...args: any) => void;\n  /**\n   * Disables the button (default: false)\n   */\n  disabled?: boolean;\n  /**\n   * The text for the button\n   */\n  buttonText?: ReactNode;\n  /**\n   * The props for the button\n   */\n  buttonProps?: Omit<ButtonProps, 'onClick' | 'disabled'>;\n};\n\nexport function ImageCardButton({\n  imageId,\n  children,\n  className = '',\n  buttonPosition = 'top',\n  over = false,\n  icon,\n  onClick,\n  disabled = false,\n  buttonText,\n  buttonProps = {},\n}: ImageCardButtonProps) {\n  const isTop = buttonPosition === 'top';\n\n  const iconComponent = icon ?? (isTop ? <DownCircleOutlined /> : <UpCircleOutlined />);\n\n  const { className: buttonClassName, ...restButtonProps } = buttonProps;\n\n  const button = onClick ? (\n    <Button\n      shape=\"round\"\n      size=\"small\"\n      ghost={over}\n      className={clsx(\n        'image-card-button__button',\n        over && 'image-card-button__button--over',\n        over && `image-card-button__button--over-${buttonPosition}`,\n        buttonClassName\n      )}\n      onClick={() => onClick(imageId)}\n      disabled={disabled}\n      {...restButtonProps}\n    >\n      {iconComponent}\n      {buttonText ?? <Translate pt=\"Selecionar\" en=\"Select\" />}\n      {iconComponent}\n    </Button>\n  ) : (\n    <></>\n  );\n\n  return (\n    <div className={clsx('image-card-button', className)}>\n      <ImageBlurButtonContainer cardId={imageId} position={buttonPosition === 'bottom' ? 'top' : 'bottom'}>\n        <DebugOnly>{imageId}</DebugOnly>\n        <div className=\"image-card-button__container\">\n          {isTop && button}\n          {children}\n          {!isTop && button}\n        </div>\n      </ImageBlurButtonContainer>\n    </div>\n  );\n}\n","import { ReactNode } from 'react';\nimport clsx from 'clsx';\n// Ant Design Resources\nimport { Image } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { ImageCard, ImageCardButton } from '.';\n// Sass\nimport './ImageCardHand.scss';\n\ntype ImageCardHandProps = {\n  /**\n   * The list of card ids\n   */\n  hand: ImageCardId[];\n  /**\n   * Function to trigger when clicking on the select button\n   */\n  onSelectCard?: GenericFunction;\n  /**\n   * Select button custom label\n   */\n  selectButtonText?: ReactNode;\n  /**\n   * Select button custom icon\n   */\n  selectButtonIcon?: ReactNode;\n  /**\n   * Select button custom class\n   */\n  selectButtonClass?: string;\n  /**\n   * Disable select button\n   */\n  disabledSelectButton?: boolean;\n  /**\n   * Optional custom class name for the hand container\n   */\n  className?: string;\n  /**\n   * The size of the card\n   */\n  cardSize?: number;\n  /**\n   * If no card size is provided, the ratio is used instead to determine card size (default 8)\n   */\n  sizeRatio?: number;\n  /**\n   * Minimum width of a card (default 80)\n   */\n  minCardSize?: number;\n  /**\n   * Cache showing which cards have been selected and should be highlighted\n   */\n  selectedCards?: BooleanDictionary;\n  /**\n   * Custom card class\n   */\n  cardClassName?: string;\n  /**\n   * Enable preview (default: true)\n   */\n  preview?: boolean;\n};\n\nexport function ImageCardHand({\n  hand = [],\n  onSelectCard,\n  selectButtonText,\n  selectButtonIcon,\n  className = '',\n  selectButtonClass = '',\n  sizeRatio = 8,\n  cardSize,\n  minCardSize = 80,\n  disabledSelectButton = false,\n  selectedCards = {},\n  cardClassName = '',\n  preview = true,\n}: ImageCardHandProps) {\n  // Prefers cardSize otherwise calculates width based on screen and ratio\n  const cardWidth = useCardWidth(Math.max(sizeRatio, 6), { minWidth: minCardSize });\n\n  return (\n    <Image.PreviewGroup>\n      <div className={clsx('image-card-hand', className)}>\n        {hand.map((cardId) => {\n          return (\n            <div\n              key={`hand-${cardId}`}\n              className={clsx('image-card-hand__card-container', getAnimationClass('slideInRight'))}\n            >\n              <ImageCardButton\n                onClick={onSelectCard}\n                imageId={cardId}\n                buttonProps={{ className: selectButtonClass }}\n                icon={selectButtonIcon}\n                buttonText={selectButtonText}\n                disabled={disabledSelectButton}\n              >\n                <ImageCard\n                  imageId={cardId}\n                  cardWidth={cardSize || cardWidth}\n                  className={clsx(selectedCards[cardId] && 'image-card-hand__selected', cardClassName)}\n                  preview={preview}\n                />\n              </ImageCardButton>\n            </div>\n          );\n        })}\n      </div>\n    </Image.PreviewGroup>\n  );\n}\n","// Components\nimport { ImageCard } from './ImageCard';\n// Sass\nimport './ImageCardPreloadHand.scss';\n\ntype ImageCardPreloadHandProps = {\n  hand: string[];\n};\nexport function ImageCardPreloadHand({ hand }: ImageCardPreloadHandProps) {\n  if (!hand) return <span></span>;\n  return (\n    <div className=\"image-card-preload-hand\">\n      {hand.map((cardId) => (\n        <ImageCard imageId={cardId} cardWidth={1} key={`pre-load-${cardId}`} preview={false} />\n      ))}\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Button } from 'antd';\nimport { UpCircleOutlined } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\n\ntype ImageCardSelectButtonProps = {\n  isSelected?: boolean;\n  cardId: ImageCard;\n  onClick: GenericFunction;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  selectLabel?: string;\n  deselectLabel?: string;\n};\n\nexport function ImageCardSelectButton({\n  onClick,\n  cardId,\n  selectLabel,\n  deselectLabel,\n  isSelected = false,\n}: ImageCardSelectButtonProps) {\n  return (\n    <Button\n      shape=\"round\"\n      size=\"small\"\n      ghost={!isSelected}\n      className=\"image-card-select-button\"\n      onClick={() => onClick(cardId)}\n    >\n      <UpCircleOutlined />\n      {isSelected ? (\n        <Translate pt=\"Desmarcar\" en=\"Deselect\" custom={deselectLabel} />\n      ) : (\n        <Translate pt=\"Selecionar\" en=\"Select\" custom={selectLabel} />\n      )}\n      <UpCircleOutlined />\n    </Button>\n  );\n}\n","import { ReactNode } from 'react';\nimport clsx from 'clsx';\n// Types\nimport type { AvatarSize } from 'antd/lib/avatar/AvatarContext';\n// Components\nimport { IconAvatar } from 'components/avatars/IconAvatar';\n\nexport type MetricHighlightProps = {\n  /**\n   * The text to be highlighted\n   */\n  children: ReactNode;\n  /**\n   * The icon representing the metric\n   */\n  icon: ReactNode;\n  /**\n   * Indicates if it's a negative metric\n   */\n  type?: 'positive' | 'negative' | 'default';\n  /**\n   * The size of the avatar (default: small)\n   */\n  iconSize?: AvatarSize;\n  /**\n   * Custom class\n   */\n  className?: string;\n  /**\n   * Icon placement (default: after)\n   */\n  iconPlacement?: 'before' | 'after';\n};\n\nexport function MetricHighlight({\n  children,\n  icon,\n  type,\n  className,\n  iconSize = 'small',\n  iconPlacement = 'after',\n}: MetricHighlightProps) {\n  return (\n    <span className={clsx('metric-highlight', type && `metric-highlight--${type}`, className)}>\n      {iconPlacement === 'before' && (\n        <>\n          <IconAvatar size={iconSize} icon={icon} />{' '}\n        </>\n      )}\n      {children}\n      {iconPlacement === 'after' && (\n        <>\n          {' '}\n          <IconAvatar size={iconSize} icon={icon} />\n        </>\n      )}\n    </span>\n  );\n}\n\nexport type HighlightProps = Pick<MetricHighlightProps, 'children' | 'type' | 'iconSize' | 'className'>;\n","import { StarIcon } from 'icons/StarIcon';\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function PointsHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<StarIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode, useEffect, useMemo, useState } from 'react';\nimport { orderBy } from 'lodash';\nimport { useEffectOnce } from 'react-use';\n// Ant Design Resources\nimport { Tooltip } from 'antd';\nimport { CrownFilled } from '@ant-design/icons';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\nimport { useDimensions } from 'hooks/useDimensions';\n// Components\nimport { Translate } from 'components/language';\nimport { Avatar } from 'components/avatars';\n\ntype GainedPointProps = {\n  gainedPoint: number;\n  order: number;\n  description?: any;\n};\n\nfunction GainedPoint({ gainedPoint, order, description }: GainedPointProps): JSX.Element {\n  const isPositive = gainedPoint > 0;\n  const isNegative = gainedPoint < 0;\n  return (\n    <li\n      className={clsx(\n        'ranking-board__gained-point',\n        isPositive && 'ranking-board__gained-point--plus',\n        isNegative && 'ranking-board__gained-point--minus',\n        `ranking-board__gained-point--${order}`\n      )}\n    >\n      <Tooltip\n        title={description ?? <Translate pt=\"Pontos ganhos\" en=\"Gained Points\" />}\n        color={isPositive ? 'gold' : isNegative ? 'red' : 'gray'}\n      >\n        {isPositive ? '+' : ''}\n        {gainedPoint}\n      </Tooltip>\n    </li>\n  );\n}\n\ntype GainedPointsProps = {\n  gainedPoints: number[] | number;\n  playerId: PlayerId;\n  gainedPointsDescriptions?: any[];\n};\n\nfunction GainedPoints({\n  gainedPoints,\n  playerId,\n  gainedPointsDescriptions = [],\n}: GainedPointsProps): JSX.Element {\n  const points = Array.isArray(gainedPoints) ? gainedPoints : [gainedPoints];\n  return (\n    <ul className=\"ranking-board__cell-gained-points\">\n      {points.map((gainedPoint, index) => (\n        <GainedPoint\n          key={`gained-point-${playerId}-${index}`}\n          gainedPoint={gainedPoint}\n          order={index}\n          description={gainedPointsDescriptions[index]}\n        />\n      ))}\n    </ul>\n  );\n}\n\ntype RankingBoardProps = {\n  players: GamePlayers;\n  ranking: GameRanking;\n  gainedPointsDescriptions?: ReactNode[];\n  hideGainedPoints?: boolean;\n  delay?: number;\n};\n\nexport function RankingBoard({\n  players,\n  ranking,\n  gainedPointsDescriptions,\n  hideGainedPoints = false,\n  delay = 0,\n}: RankingBoardProps): JSX.Element {\n  const [displayStep, setDisplayStep] = useState(0);\n  const [sortedRanking, setSortedRanking] = useState<GameRanking>([]);\n  const [reRank, setReRank] = useState(0);\n  const [, height] = useDimensions('ranking-row-0');\n\n  const maxPoints = useMemo(() => Math.max(...ranking.map((scores) => scores.newScore)), [ranking]);\n\n  const { seconds } = useCountdown({\n    duration: 5 + delay,\n    autoStart: true,\n    onExpire: () => {\n      setReRank(1);\n      setDisplayStep(3);\n    },\n  });\n\n  // Rank by previousScore\n  useEffectOnce(() => {\n    const positions: PlainObject = {};\n    let lastPosition = 0;\n    let lastPoints = 0;\n\n    const rankByFinalScoreDict = orderBy(ranking, ['newScore', 'name'], ['desc', 'asc']).reduce(\n      (acc: PlainObject, entry, index) => {\n        acc[entry.playerId] = index;\n        // Calculate position\n        if (lastPoints === 0 || entry.newScore < lastPoints) {\n          lastPoints = entry.newScore;\n          lastPosition += 1;\n        }\n        positions[entry.playerId] = [0, lastPosition];\n        return acc;\n      },\n      {}\n    );\n\n    const rankByPreviousScore = orderBy(ranking, ['previousScore', 'name'], ['desc', 'asc']);\n\n    // Reset position trackers\n    lastPosition = 0;\n    lastPoints = 0;\n\n    const tempSortedRanking: GameRanking = rankByPreviousScore.map((entry, index) => {\n      const newEntry = { ...entry };\n\n      newEntry.order = [index, rankByFinalScoreDict[newEntry.playerId]];\n      newEntry.position = positions[newEntry.playerId];\n      // Calculate position\n      if (lastPoints === 0 || entry.previousScore < lastPoints) {\n        lastPoints = entry.previousScore;\n        lastPosition += 1;\n      }\n      newEntry.position[0] = lastPosition;\n      return newEntry;\n    });\n\n    setSortedRanking(tempSortedRanking);\n  });\n\n  // Show gained points\n  useEffect(() => {\n    if (seconds === 4 + delay) {\n      setDisplayStep(1);\n    } else if (seconds === 2 + delay) {\n      setDisplayStep(2);\n    }\n  }, [seconds, delay]);\n\n  return (\n    <div\n      className={clsx('ranking-board', seconds > 4 && 'ranking-board--hidden')}\n      style={{ height: `${(Math.max(60, height) + 8) * sortedRanking.length}px` }}\n    >\n      {sortedRanking.map((entry, index) => {\n        const { playerId, newScore, previousScore, gainedPoints, order, position } = entry;\n        const hPosition = (Math.max(60, height) + 8) * (order[reRank] ?? 0);\n\n        return (\n          <div\n            className={`ranking-board__row ranking-board__row--${index}`}\n            key={`ranking-${playerId}`}\n            id={`ranking-row-${index}`}\n            style={{ top: `${hPosition}px` }}\n          >\n            <div className=\"ranking-board__cell-crown\">\n              {newScore > 0 && maxPoints === newScore && displayStep >= 3 && (\n                <CrownFilled className=\"ranking-board__crown-icon\" />\n              )}\n            </div>\n            <div className=\"ranking-board__cell-position\">#{position[reRank] ?? ''}</div>\n            <div className=\"ranking-board__cell-player\">\n              <div className=\"ranking-board__avatar\">\n                <Avatar id={players[playerId].avatarId} />\n              </div>\n              <div className=\"ranking-board__name\">{players[playerId].name}</div>\n            </div>\n            <Tooltip title={<Translate pt=\"Pontos Anteriores\" en=\"Previous Points\" />} color=\"gray\">\n              <div className=\"ranking-board__cell-points\">{previousScore}</div>\n            </Tooltip>\n            {!hideGainedPoints && displayStep >= 1 && gainedPoints !== undefined && (\n              <GainedPoints\n                gainedPoints={gainedPoints}\n                playerId={playerId}\n                gainedPointsDescriptions={gainedPointsDescriptions}\n              />\n            )}\n            {displayStep >= 2 && (\n              <Tooltip title=\"Total\" color=\"gold\">\n                <span className=\"ranking-board__cell-points-total\">{newScore}</span>\n              </Tooltip>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { CaretUpOutlined } from '@ant-design/icons';\n// Hooks\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Components\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { RankingBoard } from './RankingBoard';\n\ntype StepRankingWrapperProps = {\n  /**\n   * The players\n   */\n  players: GamePlayers;\n  /**\n   * The ranking array\n   */\n  ranking: GameRanking;\n  /**\n   * Gained points descriptions for the popover\n   */\n  gainedPointsDescriptions: ReactNode[];\n  /**\n   * Additional content\n   */\n  children?: ReactNode;\n  /**\n   * Replacement title for Ranking\n   */\n  title?: ReactNode;\n  /**\n   * Optional node that goes under the title\n   */\n  subtitle?: ReactNode;\n  /**\n   * Whether the title should be white or not\n   */\n  white?: boolean;\n};\n\nexport function StepRankingWrapper({\n  players,\n  ranking,\n  gainedPointsDescriptions,\n  children,\n  title,\n  subtitle,\n  white,\n}: StepRankingWrapperProps) {\n  useTemporarilyHidePlayersBar();\n\n  return (\n    <Step>\n      <Title white={white}>{title ?? 'Ranking'}</Title>\n\n      {subtitle}\n\n      <RankingBoard players={players} ranking={ranking} gainedPointsDescriptions={gainedPointsDescriptions} />\n      <Instruction className=\"step-ranking-wrapper-gained-points-instruction\">\n        <CaretUpOutlined />\n        <Translate\n          pt=\"Passe o mouse em cada um dos pontos para saber como eles foram distribuídos\"\n          en=\"Hover over the scores to learn how they were granted\"\n        />\n        <CaretUpOutlined />\n      </Instruction>\n\n      {children}\n    </Step>\n  );\n}\n","import { functions } from 'services/firebase';\nimport { httpsCallable } from 'firebase/functions';\nimport { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\n\nconst submitAction = httpsCallable(functions, 'testeDeElencoSubmitAction');\n\nexport function useOnSubmitMovieGenreAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: submitAction,\n    actionName: 'submit-genre',\n    onSuccess: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: translate('Gênero submetido com sucesso', 'Genre submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua ação',\n      'Oops, the application found an error while trying to submit your action'\n    ),\n  });\n\n  return (payload: SubmitMovieGenrePayload) => {\n    request({\n      action: 'SELECT_MOVIE_GENRE',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitMovieActorAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: submitAction,\n    actionName: 'submit-genre',\n    onSuccess: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: translate('Ator submetido com sucesso', 'Actor submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua ação',\n      'Oops, the application found an error while trying to submit your action'\n    ),\n  });\n\n  return (payload: SubmitMovieActorPayload) => {\n    request({\n      action: 'SELECT_ACTOR',\n      ...payload,\n    });\n  };\n}\n","import { MovieComedyIcon } from 'icons/MovieComedyIcon';\nimport { MovieActionIcon } from 'icons/MovieActionIcon';\nimport { MovieDramaIcon } from 'icons/MovieDramaIcon';\nimport { MovieHorrorIcon } from 'icons/MovieHorrorIcon';\nimport { MovieSciFiIcon } from 'icons/MovieSciFiIcon';\n\nexport const Icons: Record<string, any> = {\n  ACTION: MovieActionIcon,\n  COMEDY: MovieComedyIcon,\n  DRAMA: MovieDramaIcon,\n  HORROR: MovieHorrorIcon,\n  SCI_FI: MovieSciFiIcon,\n};\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { getRandomItem } from 'utils/helpers';\nimport { Icons } from './utils/helpers';\n// Icons\nimport { MovieGenreIcon } from 'icons/MovieGenreIcon';\n// Components\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { DualTranslate, Translate } from 'components/language';\nimport { TransparentButton } from 'components/buttons';\nimport { IconAvatar } from 'components/avatars';\n\ntype StepSelectGenreProps = {\n  user: GamePlayer;\n  genres: MovieGenreOption[];\n  onSubmitGenre: (payload: SubmitMovieGenrePayload) => void;\n} & AnnouncementProps;\n\nexport function StepSelectGenre({ user, announcement, genres, onSubmitGenre }: StepSelectGenreProps) {\n  const { isLoading } = useLoading();\n\n  useMock(() => {\n    onSubmitGenre({ genre: getRandomItem(genres).key });\n  });\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title>\n        <Translate pt={<>Selecione o gênero do filme</>} en={<>Select the movie genre</>} />\n      </Title>\n\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Somos diretores de elenco tentando determinar o elenco para um filme! Haverá 5 papéis para\n              escalar, mas primeiro precisamos decidir qual é o gênero do filme em que vamos trabalhar!\n            </>\n          }\n          en={\n            <>\n              We are casting directors trying to determine the cast for a movie! There will be 5 roles to\n              cast, but we first need to decide what genre is the movie we'll be working on!\n            </>\n          }\n        />\n      </Instruction>\n\n      <Space className=\"movie-genre-selection\">\n        {genres.map((genre) => {\n          const Icon = Icons?.[genre.key] ?? MovieGenreIcon;\n          return (\n            <TransparentButton\n              key={genre.key}\n              onClick={() => onSubmitGenre({ genre: genre.key })}\n              disabled={isLoading || user.ready}\n              className=\"movie-genre-selection__button\"\n            >\n              <IconAvatar icon={<Icon />} size={64} />\n              <DualTranslate>{genre.title}</DualTranslate>\n            </TransparentButton>\n          );\n        })}\n      </Space>\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitMovieGenreAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { MovieGenreIcon } from 'icons/MovieGenreIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Translate } from 'components/language';\nimport { StepSelectGenre } from './StepSelectGenre';\n\nexport function PhaseMovieGenreSelection({ players, state, info }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, setStep } = useStep();\n\n  const onSubmitGenre = useOnSubmitMovieGenreAPIRequest(setStep);\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<MovieGenreIcon />}\n      title={<Translate pt=\"Seleção do Gênero do Filme\" en=\"Movie Genre Selection\" />}\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <Instruction>\n        <Translate\n          pt={\n            <>\n              Somos diretores de elenco tentando determinar o elenco para um filme! Haverá 5 papéis para\n              escalar, mas primeiro precisamos decidir qual é o gênero do filme em que vamos trabalhar!\n            </>\n          }\n          en={\n            <>\n              We are casting directors trying to determine the cast for a movie! There will be 5 roles to\n              cast, but we first need to decide what genre is the movie we'll be working on!\n            </>\n          }\n        />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.TESTE_DE_ELENCO.MOVIE_GENRE_SELECTION}\n    >\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepSelectGenre\n          user={user}\n          onSubmitGenre={onSubmitGenre}\n          genres={state.genres}\n          announcement={announcement}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","// Ant Design Resources\nimport { Popconfirm, Space } from 'antd';\nimport { TransparentButton } from 'components/buttons';\nimport { SuspectCard } from 'components/cards/SuspectCard';\n\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\n\ntype ActorsBoardProps = {\n  actors: ActingRole['candidates'];\n  selection: CardId[];\n  user: GamePlayer;\n  onSubmitActor: (payload: SubmitMovieActorPayload) => void;\n};\n\nexport function ActorsBoard({ actors, user, onSubmitActor, selection }: ActorsBoardProps) {\n  const cardWidth = useCardWidth(4, { gap: 16, minWidth: 80, maxWidth: 150, margin: 16 });\n  const { isLoading } = useLoading();\n  const { language, translate } = useLanguage();\n\n  return (\n    <Space className=\"actors-board space-container\" wrap>\n      {selection.map((actorId) => {\n        const actor = actors[actorId];\n        const name = actor.name[language];\n\n        return (\n          <Popconfirm\n            key={actor.id}\n            title={translate(\n              `Tem certeza que quer escolher ${name}?`,\n              `Are you sure you want to choose ${name}?`\n            )}\n            onConfirm={() => onSubmitActor({ actorId: actor.id })}\n            okText={translate('Sim', 'Yes')}\n            cancelText={translate('Não', 'No')}\n            disabled={isLoading || user.ready}\n          >\n            <TransparentButton\n              className=\"characters-table__character characters-table__character-button\"\n              disabled={isLoading || user.ready}\n            >\n              <SuspectCard suspect={actor} width={cardWidth} />\n            </TransparentButton>\n          </Popconfirm>\n        );\n      })}\n    </Space>\n  );\n}\n","// Ant Design Resources\nimport { Space, Avatar as AntAvatar } from 'antd';\n// Utils\nimport { pluralize } from 'utils/helpers';\nimport { Icons } from '../utils/helpers';\n// Icons\nimport { MovieGenreIcon } from 'icons/MovieGenreIcon';\nimport { NoIcon } from 'icons/NoIcon';\n// Components\nimport { Instruction, TextHighlight, Title } from 'components/text';\nimport { DualTranslate, Translate } from 'components/language';\nimport { IconAvatar } from 'components/avatars';\n\ntype RoleBoardProps = {\n  movie?: FeatureFilm;\n  activeRole: ActingRole;\n  instruction: 'SELECT' | 'RESULT' | 'CAST';\n  children?: React.ReactNode;\n  outcome?: string;\n};\n\nexport function RoleBoard({ activeRole, instruction, movie, children, outcome }: RoleBoardProps) {\n  const traitCount = activeRole.traits.length;\n\n  const movieId = movie?.id ?? '';\n  const Icon = Icons?.[movieId] ?? MovieGenreIcon;\n\n  return (\n    <Space wrap>\n      <Space className=\"role\" direction=\"vertical\" align=\"center\">\n        {movie && (\n          <>\n            <Icon width={75} />\n            <Title size=\"small\" className=\"role__title\">\n              <DualTranslate>{movie.title}</DualTranslate>\n            </Title>\n          </>\n        )}\n        {children}\n      </Space>\n\n      <Space className=\"role\" direction=\"vertical\">\n        {instruction !== 'CAST' && (\n          <div className=\"role__round\">\n            <AntAvatar size=\"large\" style={{ backgroundColor: 'orange' }}>\n              {instruction === 'SELECT' || outcome === 'CAST' ? activeRole.round : activeRole.round - 1}\n            </AntAvatar>\n          </div>\n        )}\n        <Title size=\"small\" className=\"role__title\">\n          <DualTranslate>{activeRole.title}</DualTranslate>\n        </Title>\n        <Instruction className=\"role__description\">\n          \"<DualTranslate>{activeRole.description}</DualTranslate>\"\n        </Instruction>\n\n        <Instruction className=\"role__instructions\">\n          {instruction === 'SELECT' && (\n            <Translate\n              pt={\n                <>\n                  Selecione o ator que mais combina com{' '}\n                  {pluralize(traitCount, 'a característica', 'as características')} abaixo:\n                </>\n              }\n              en={<>Select the actor that best fits the {pluralize(traitCount, 'trait')} below:</>}\n            />\n          )}\n\n          {instruction === 'RESULT' && (\n            <Translate\n              pt=\"Esses são as características para esse papel:\"\n              en=\"These are the traits for this role:\"\n            />\n          )}\n\n          {instruction === 'CAST' && !activeRole.cast && (\n            <div className=\"role__cancelled\">\n              <IconAvatar icon={<NoIcon />} />{' '}\n              <Translate\n                pt=\"Papel cancelado por falta de atores competentes\"\n                en=\"Role canceled due to lack of competent actors\"\n              />\n            </div>\n          )}\n        </Instruction>\n\n        <Instruction className=\"role__traits\">\n          <ul>\n            {activeRole.traits.map((trait, index) => {\n              if (index === traitCount - 1 && instruction === 'RESULT' && outcome === 'CONTINUE') {\n                return <></>;\n              }\n              return (\n                <li key={trait}>\n                  <TextHighlight>{trait}</TextHighlight>\n                </li>\n              );\n            })}\n          </ul>\n        </Instruction>\n      </Space>\n    </Space>\n  );\n}\n","// Hooks\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { getRandomItem } from 'utils/helpers';\n// Components\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { ActorsBoard } from './components/ActorsBoard';\nimport { RoleBoard } from './components/RoleBoard';\nimport { PointsHighlight } from 'components/metrics/PointsHighlight';\n\ntype StepSelectActorProps = {\n  user: GamePlayer;\n  activeRole: ActingRole;\n  onSubmitActor: (payload: SubmitMovieActorPayload) => void;\n  movie: FeatureFilm;\n} & AnnouncementProps;\n\nexport function StepSelectActor({\n  user,\n  announcement,\n  activeRole,\n  onSubmitActor,\n  movie,\n}: StepSelectActorProps) {\n  useMock(() => {\n    onSubmitActor({ actorId: getRandomItem(activeRole.selection) });\n  });\n\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title size=\"x-small\">\n        <Translate pt={<>Selecione um ator!</>} en={<>Cast a role:</>} />\n      </Title>\n\n      <RoleBoard activeRole={activeRole} instruction=\"SELECT\" movie={movie} />\n\n      <ActorsBoard\n        actors={activeRole.candidates}\n        selection={activeRole.selection}\n        user={user}\n        onSubmitActor={onSubmitActor}\n      />\n\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Se um ator receber mais de 50% dos votos, ele será escolhido para o papel!\n              <br />\n              Caso contrário, o papel vai o final da fila e vamos reselecioná-lo na próxima rodada.\n              <br />\n              Você ganha <PointsHighlight>1</PointsHighlight> por cada jogador que escolher o mesmo ator que\n              você.\n            </>\n          }\n          en={\n            <>\n              If an actor receives more than 50% of the votes, he will be chosen for the role!\n              <br />\n              Otherwise, the role goes to the end of the queue and we will reselect it in the next round.\n              <br />\n              You earn <PointsHighlight>1</PointsHighlight> for each player who chooses the same actor as you.\n            </>\n          }\n        />\n      </Instruction>\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitMovieActorAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Icons\nimport { SofaIcon } from 'icons/SofaIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction, TextHighlight } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { DualTranslate, Translate } from 'components/language';\nimport { StepSelectActor } from './StepSelectActor';\n\nexport function PhaseActorSelection({ players, state, info }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, setStep } = useStep();\n\n  const onSubmitActor = useOnSubmitMovieActorAPIRequest(setStep);\n\n  const activeRole = state.movie.roles[state.activeRoleId];\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<SofaIcon />}\n      title={\n        <>\n          <Translate pt=\"Seleção\" en=\"Actor Selection\" />: <DualTranslate>{activeRole.title}</DualTranslate>\n        </>\n      }\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n    >\n      <Instruction>\n        <Translate pt={<>Quem vai ser o</>} en={<>Who is the best choice for</>} />\n        <TextHighlight>\n          <DualTranslate>{activeRole.description}</DualTranslate>\n        </TextHighlight>\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.TESTE_DE_ELENCO.ACTOR_SELECTION}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepSelectActor\n          user={user}\n          activeRole={activeRole}\n          onSubmitActor={onSubmitActor}\n          announcement={announcement}\n          movie={state.movie}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Components\nimport { Translate } from 'components/language';\nimport { StepRankingWrapper } from 'components/ranking';\nimport { VIPNextPhaseButton } from 'components/vip';\n\ntype StepRankingProps = {\n  players: GamePlayers;\n  round: GameRound;\n  ranking: GameRanking;\n  goToPreviousStep: GenericFunction;\n};\n\nexport function StepRanking({ players, ranking, goToPreviousStep, round }: StepRankingProps) {\n  return (\n    <StepRankingWrapper\n      players={players}\n      ranking={ranking}\n      gainedPointsDescriptions={[\n        <Translate pt=\"Adivinhou corretamente\" en=\"Correct guess\" />,\n        <Translate pt=\"Era o alvo e foi adivinhado corretamente\" en=\"Was guessed correctly\" />,\n      ]}\n    >\n      <Space className=\"space-container\" align=\"center\">\n        <Button onClick={goToPreviousStep}>\n          <Translate pt=\"Ver resultado novamente\" en=\"See results again\" />\n        </Button>\n      </Space>\n      <VIPNextPhaseButton round={round} />\n    </StepRankingWrapper>\n  );\n}\n","// Ant Design Resources\nimport { Avatar as AntAvatar, Space } from 'antd';\nimport { Avatar } from 'components/avatars';\nimport { SuspectCard } from 'components/cards/SuspectCard';\n\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useMemo } from 'react';\n\ntype ActorsSelectionsProps = {\n  actors: ActingRole['candidates'];\n  selection: CardId[];\n  players: GamePlayers;\n};\n\nexport function ActorsSelections({ actors, players, selection }: ActorsSelectionsProps) {\n  const cardWidth = useCardWidth(4, { gap: 16, minWidth: 80, maxWidth: 150, margin: 16 });\n\n  const playersSelections = useMemo(() => {\n    return Object.values(players).reduce((acc: Record<CardId, PlayerId[]>, player) => {\n      if (acc[player.actorId] === undefined) {\n        acc[player.actorId] = [];\n      }\n      acc[player.actorId].push(player.id);\n      return acc;\n    }, {});\n  }, [players]);\n\n  return (\n    <Space className=\"actors-board space-container\" wrap>\n      {selection.map((actorId) => {\n        const actor = actors[actorId];\n\n        return (\n          <Space key={actor.id} className=\"actors-board__actor\" direction=\"vertical\">\n            <Space className=\"space-container\">\n              <AntAvatar.Group maxCount={7}>\n                {playersSelections[actorId].map((playerId) => (\n                  <Avatar\n                    id={players[playerId].avatarId}\n                    key={`actor-avatar-${players[playerId].avatarId}`}\n                  />\n                ))}\n              </AntAvatar.Group>\n            </Space>\n\n            <SuspectCard suspect={actor} width={cardWidth} />\n          </Space>\n        );\n      })}\n    </Space>\n  );\n}\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Components\nimport { Step } from 'components/steps';\nimport { Instruction, TextHighlight, Title } from 'components/text';\nimport { DualTranslate, Translate } from 'components/language';\nimport { RoleBoard } from './components/RoleBoard';\nimport { TimedButton } from 'components/buttons';\nimport { SuspectCard } from 'components/cards/SuspectCard';\nimport { ImageCard } from 'components/image-cards';\nimport { ActorsSelections } from './components/ActorsSelections';\n\ntype StepResultProps = {\n  user: GamePlayer;\n  activeRole: ActingRole;\n  outcome: string;\n  players: GamePlayers;\n  goToNextStep: GenericFunction;\n} & AnnouncementProps;\n\nexport function StepResult({\n  user,\n  announcement,\n  activeRole,\n  goToNextStep,\n  outcome,\n  players,\n}: StepResultProps) {\n  return (\n    <Step fullWidth announcement={announcement}>\n      <Title size=\"x-small\">\n        <Translate pt=\"Resultado\" en=\"Results\" />\n      </Title>\n\n      <RoleBoard activeRole={activeRole} instruction=\"RESULT\" outcome={outcome}>\n        {outcome === 'CAST' ? (\n          <SuspectCard suspect={activeRole.candidates[activeRole.actor]} width={120} />\n        ) : (\n          <ImageCard imageId=\"us-unknown\" cardWidth={120} preview={false} />\n        )}\n      </RoleBoard>\n\n      <Instruction contained>\n        {outcome === 'CONTINUE' && (\n          <Translate\n            pt=\"Os diretores não chegaram num consenso. Aqui estão os atores selecionados para a próxima fase:\"\n            en=\"The directors did not reach a consensus. Here are the selected actors for the next phase:\"\n          />\n        )}\n        {outcome === 'CAST' && (\n          <Translate\n            pt={\n              <>\n                <TextHighlight>\n                  <DualTranslate>{activeRole.candidates[activeRole.actor].name}</DualTranslate>\n                </TextHighlight>{' '}\n                foi escolhido(a) para o papel!\n              </>\n            }\n            en={\n              <>\n                <TextHighlight>\n                  <DualTranslate>{activeRole.candidates[activeRole.actor].name}</DualTranslate>\n                </TextHighlight>{' '}\n                was chosen for the role!\n              </>\n            }\n          />\n        )}\n        {outcome === 'FAIL' && (\n          <Translate\n            pt=\"Deu ruim! Ninguém foi escolhido para o papel! E vão remover o personagem do roteiro\"\n            en=\"Oh no! Nobody was chosen for the role! And they will remove the character from the script\"\n          />\n        )}\n      </Instruction>\n\n      <ActorsSelections actors={activeRole.candidates} selection={activeRole.selection} players={players} />\n\n      <Space className=\"space-container\" align=\"center\">\n        <TimedButton duration={15} onExpire={goToNextStep} onClick={goToNextStep}>\n          <Translate pt=\"Ver Ranking\" en=\"See Ranking\" />\n        </TimedButton>\n      </Space>\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useUser } from 'hooks/useUser';\nimport { useStep } from 'hooks/useStep';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\nimport { Icons } from './utils/helpers';\n// Icons\nimport { MovieGenreIcon } from 'icons/MovieGenreIcon';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { DualTranslate, Translate } from 'components/language';\nimport { StepRanking } from './StepRanking';\nimport { StepResult } from './StepResult';\n\nexport function PhaseResult({ players, state, info }: PhaseProps) {\n  const user = useUser(players, state);\n  const { step, goToNextStep, goToPreviousStep } = useStep(0);\n\n  const activeRole = state.movie.roles[state.activeRoleId];\n\n  const Icon = Icons?.[state?.movie?.id] ?? MovieGenreIcon;\n\n  const announcement = (\n    <PhaseAnnouncement\n      icon={<Icon />}\n      title={\n        <>\n          <Translate pt=\"Resultado\" en=\"Results\" />: <DualTranslate>{activeRole.title}</DualTranslate>\n        </>\n      }\n      currentRound={state?.round?.current}\n      type=\"overlay\"\n      duration={4}\n    >\n      <Instruction>\n        <Translate pt={<>E o papel foi escolhido?</>} en={<>So was the role cast?</>} />\n      </Instruction>\n    </PhaseAnnouncement>\n  );\n\n  //\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.TESTE_DE_ELENCO.RESULT}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <StepResult\n          user={user}\n          activeRole={activeRole}\n          outcome={state.outcome}\n          players={players}\n          announcement={announcement}\n          goToNextStep={goToNextStep}\n        />\n\n        {/* Step 1 */}\n        <StepRanking\n          players={players}\n          round={state.round}\n          ranking={state.ranking}\n          goToPreviousStep={goToPreviousStep}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n","// Ant Design Resources\nimport { Space } from 'antd';\n// Utils\nimport { achievementsReference } from './utils/achievements';\nimport { Icons } from './utils/helpers';\n// Icons\nimport { CrownIcon } from 'icons/CrownIcon';\nimport { MovieGenreIcon } from 'icons/MovieGenreIcon';\n// Components\nimport { GameOverWrapper } from 'components/game-over';\nimport { Achievements } from 'components/general/Achievements';\nimport { Container } from 'components/general/Container';\nimport { DualTranslate, Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { RoleBoard } from './components/RoleBoard';\nimport { SuspectCard } from 'components/cards/SuspectCard';\nimport { ImageCard } from 'components/image-cards';\n\nexport function PhaseGameOver({ state, info, players }: PhaseProps) {\n  const movie: FeatureFilm = state.movie;\n  const movieId = movie?.id ?? '';\n  const Icon = Icons?.[movieId] ?? MovieGenreIcon;\n\n  return (\n    <GameOverWrapper info={info} state={state} players={players} announcementIcon={<CrownIcon />}>\n      <Achievements players={players} achievements={state.achievements} reference={achievementsReference} />\n\n      <Container\n        title={<Translate pt=\"O Filme\" en=\"The Movie\" />}\n        childrenContainerProps={{ className: 'final-gallery' }}\n      >\n        <Space className=\"role\" direction=\"vertical\" align=\"center\">\n          {movie && (\n            <>\n              <Icon width={75} />\n              <Title size=\"small\" className=\"role__title\">\n                <DualTranslate>{movie.title}</DualTranslate>\n              </Title>\n\n              {movie.rolesOrder.map((roleId) => {\n                const role = movie.roles[roleId];\n\n                if (role.cast) {\n                  return (\n                    <RoleBoard activeRole={role} instruction=\"CAST\" key={roleId}>\n                      <SuspectCard suspect={role.candidates[role.actor]} width={100} />\n                    </RoleBoard>\n                  );\n                }\n                return (\n                  <RoleBoard activeRole={role} instruction=\"CAST\" key={roleId}>\n                    <ImageCard imageId=\"us-unknown\" cardWidth={120} preview={false} />\n                  </RoleBoard>\n                );\n              })}\n            </>\n          )}\n        </Space>\n      </Container>\n    </GameOverWrapper>\n  );\n}\n","import { ConfigProvider } from 'antd';\n// Constants\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport { LoadingPage } from 'components/loaders';\nimport { PhaseMovieGenreSelection } from './PhaseMovieGenreSelection';\nimport { PhaseActorSelection } from './PhaseActorSelection';\nimport { PhaseResult } from './PhaseResult';\nimport { PhaseGameOver } from './PhaseGameOver';\n// Sass\nimport './teste-de-elenco.scss';\n\nfunction getActiveComponent(state: GameState) {\n  // If phase is not defined, it is likely that the game is still loading\n  if (state && !state.phase) return LoadingPage;\n\n  switch (state.phase) {\n    case PHASES.DEFAULT.LOBBY:\n      return PhaseLobby;\n    case PHASES.DEFAULT.RULES:\n      return PhaseRules;\n    case PHASES.DEFAULT.SETUP:\n      return PhaseSetup;\n    case PHASES.TESTE_DE_ELENCO.MOVIE_GENRE_SELECTION:\n      return PhaseMovieGenreSelection;\n    case PHASES.TESTE_DE_ELENCO.ACTOR_SELECTION:\n      return PhaseActorSelection;\n    case PHASES.TESTE_DE_ELENCO.RESULT:\n      return PhaseResult;\n    case PHASES.DEFAULT.GAME_OVER:\n      return PhaseGameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionTesteDeElenco() {\n  return (\n    <ConfigProvider\n      theme={{\n        token: {\n          colorPrimary: THEME_COLORS.DEFAULT,\n          colorLink: THEME_COLORS.DEFAULT,\n        },\n      }}\n    >\n      <Session gameCollection={GAME_COLLECTION.TESTE_DE_ELENCO} getActiveComponent={getActiveComponent} />\n    </ConfigProvider>\n  );\n}\n\nexport default SessionTesteDeElenco;\n","export const ACHIEVEMENTS = {\n  ALONE_VOTES: 'ALONE_VOTES',\n  TOGETHER_VOTES: 'TOGETHER_VOTES',\n  MOST_CAST: 'MOST_CAST',\n  FEWEST_CAST: 'FEWEST_CAST',\n  CONSISTENCY: 'CONSISTENCY',\n  CHANGELING: 'CHANGELING',\n};\n\nexport const achievementsReference: AchievementReference = {\n  [ACHIEVEMENTS.ALONE_VOTES]: {\n    icon: 'person',\n    title: {\n      pt: 'Iniciante',\n      en: 'Beginner',\n    },\n    description: {\n      pt: 'Votou sozinho em um ator mais vezes',\n      en: 'Voted alone on an actor the most',\n    },\n  },\n  [ACHIEVEMENTS.TOGETHER_VOTES]: {\n    icon: 'people',\n    title: {\n      pt: 'Profissional',\n      en: 'Professional',\n    },\n    description: {\n      pt: 'Votou com alguém em um ator mais vezes',\n      en: 'Voted with someone on an actor the most',\n    },\n  },\n  [ACHIEVEMENTS.MOST_CAST]: {\n    icon: 'eye',\n    title: {\n      pt: 'Melhor olheiro',\n      en: 'Best scout',\n    },\n    description: {\n      pt: 'Escalou mais atores',\n      en: 'Cast the most actors',\n    },\n  },\n  [ACHIEVEMENTS.FEWEST_CAST]: {\n    icon: 'broken-bulb',\n    title: {\n      pt: 'Pior olheiro',\n      en: 'Wrost scout',\n    },\n    description: {\n      pt: 'Escalou menos atores',\n      en: 'Cast the fewest actors',\n    },\n  },\n  [ACHIEVEMENTS.CONSISTENCY]: {\n    icon: 'scale',\n    title: {\n      pt: 'Mais Persistente',\n      en: 'Most Persistent',\n    },\n    description: {\n      pt: 'Votou nos mesmos atores mais vezes',\n      en: 'Voted on the same actors the most',\n    },\n  },\n  [ACHIEVEMENTS.CHANGELING]: {\n    icon: 'arrows',\n    title: {\n      pt: 'Troca-troca',\n      en: 'Mind changer',\n    },\n    description: {\n      pt: 'Votou em mais atores diferentes',\n      en: 'Voted on the most different actors',\n    },\n  },\n};\n\nexport default achievementsReference;\n","export function CrownIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M445.512 460.432H66.488c-16.01 0-28.988-12.978-28.988-28.988 0-16.01 12.978-28.988 28.988-28.988h379.024c16.01 0 28.988 12.978 28.988 28.988 0 16.01-12.978 28.988-28.988 28.988z\"\n      ></path>\n      <path\n        fill=\"#fee97d\"\n        d=\"M445.512 402.456h-30c16.01 0 28.988 12.978 28.988 28.988 0 16.01-12.979 28.988-28.988 28.988h30c16.01 0 28.988-12.978 28.988-28.988 0-16.01-12.979-28.988-28.988-28.988zm28.988-240l-143.5 75-75-135-90 135-128.5-75 45 240h347z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M331 237.46l-75-135.004-16.364 24.546 54.327 97.789c7.274 13.091 23.269 18.563 37.037 12.669zm110.241-57.621L399.5 402.456h30l45-240zM166 237.46L37.5 162.456l3.687 19.661 98.271 57.357A23.432 23.432 0 00166 237.46z\"\n      ></path>\n      <path\n        fill=\"#f58a97\"\n        d=\"M251.05 150.169l-43.326-43.326a6.999 6.999 0 010-9.899l43.326-43.326a6.999 6.999 0 019.899 0l43.326 43.326a6.999 6.999 0 010 9.899l-43.326 43.326a6.999 6.999 0 01-9.899 0z\"\n      ></path>\n      <path\n        fill=\"#f07281\"\n        d=\"M304.276 96.944L260.95 53.618a6.999 6.999 0 00-9.899 0L241 63.668l33.276 33.276a7 7 0 010 9.9L241 140.119l10.05 10.05a6.999 6.999 0 009.899 0l43.326-43.326a7 7 0 00.001-9.899z\"\n      ></path>\n      <path\n        fill=\"#8795de\"\n        d=\"M371.05 331.348l-20.296-20.296a7 7 0 010-9.9l20.296-20.296a6.999 6.999 0 019.899 0l20.296 20.296a7 7 0 010 9.9l-20.296 20.296a6.999 6.999 0 01-9.899 0z\"\n      ></path>\n      <path\n        fill=\"#6c7fd8\"\n        d=\"M401.246 301.152l-20.296-20.296a6.999 6.999 0 00-9.899 0L361 290.906l10.246 10.246a6.999 6.999 0 010 9.899L361 321.298l10.05 10.05a6.999 6.999 0 009.899 0l20.296-20.296a7 7 0 00.001-9.9z\"\n      ></path>\n      <path\n        fill=\"#8795de\"\n        d=\"M131.05 331.348l-20.296-20.296a7 7 0 010-9.9l20.296-20.296a7 7 0 019.9 0l20.296 20.296a7 7 0 010 9.9l-20.296 20.296a7 7 0 01-9.9 0z\"\n      ></path>\n      <path\n        fill=\"#6c7fd8\"\n        d=\"M161.246 301.152l-20.296-20.296a6.999 6.999 0 00-9.899 0L121 290.906l10.246 10.246a6.999 6.999 0 010 9.899L121 321.298l10.05 10.05a6.999 6.999 0 009.899 0l20.296-20.296a7 7 0 00.001-9.9z\"\n      ></path>\n      <path\n        fill=\"#f58a97\"\n        d=\"M278.747 259.703h-45.494a6.999 6.999 0 00-6.062 3.5l-22.747 39.399a7.002 7.002 0 000 7l22.747 39.399a6.999 6.999 0 006.062 3.5h45.494a6.999 6.999 0 006.062-3.5l22.747-39.399a7.002 7.002 0 000-7l-22.747-39.399a7 7 0 00-6.062-3.5z\"\n      ></path>\n      <path\n        fill=\"#f07281\"\n        d=\"M307.556 302.602l-22.747-39.399a6.999 6.999 0 00-6.062-3.5h-30a6.999 6.999 0 016.062 3.5l22.747 39.399a7.002 7.002 0 010 7l-22.747 39.399a6.999 6.999 0 01-6.062 3.5h30a6.999 6.999 0 006.062-3.5l22.747-39.399a7.002 7.002 0 000-7z\"\n      ></path>\n      <circle cx=\"37.625\" cy=\"162.591\" r=\"30.125\" fill=\"#8795de\"></circle>\n      <circle cx=\"474.375\" cy=\"162.591\" r=\"30.125\" fill=\"#8795de\"></circle>\n      <path\n        fill=\"#6c7fd8\"\n        d=\"M474.375 132.466a29.981 29.981 0 00-15 4.004c9.037 5.201 15.125 14.947 15.125 26.121s-6.089 20.921-15.125 26.121a29.981 29.981 0 0015 4.004c16.638 0 30.125-13.488 30.125-30.125 0-16.638-13.488-30.125-30.125-30.125zm-436.75 0a29.981 29.981 0 00-15 4.004c9.037 5.201 15.125 14.947 15.125 26.121s-6.089 20.921-15.125 26.121a29.981 29.981 0 0015 4.004c16.638 0 30.125-13.488 30.125-30.125.001-16.638-13.487-30.125-30.125-30.125z\"\n      ></path>\n      <path d=\"M136 271.306a14.401 14.401 0 00-10.253 4.247L105.45 295.85c-5.653 5.654-5.653 14.853 0 20.505l20.296 20.296c2.827 2.827 6.54 4.24 10.253 4.24s7.426-1.414 10.253-4.24l20.296-20.296c5.653-5.653 5.653-14.852 0-20.506l-20.296-20.295A14.394 14.394 0 00136 271.306zm0 54.385l-19.589-19.589L136 286.513l19.589 19.589zm229.747 10.961A14.455 14.455 0 00376 340.89a14.46 14.46 0 0010.254-4.239l20.296-20.296c5.652-5.653 5.652-14.852 0-20.506l-20.297-20.296c-5.654-5.652-14.853-5.653-20.507 0L345.45 295.85c-5.652 5.654-5.652 14.853 0 20.505zM376 286.513l19.589 19.589L376 325.692l-19.589-19.59zm-178.051 26.839l22.747 39.399a14.54 14.54 0 0012.557 7.25h45.494c5.163 0 9.975-2.778 12.558-7.25l22.745-39.397a14.534 14.534 0 00.001-14.501l-22.747-39.4a14.544 14.544 0 00-12.557-7.249h-45.494a14.54 14.54 0 00-12.557 7.25l-22.747 39.399a14.538 14.538 0 000 14.499zm35.593-46.149h44.917l22.457 38.899-22.457 38.899h-44.917l-22.458-38.899zM512 162.591c0-20.747-16.879-37.625-37.625-37.625-20.747 0-37.626 16.879-37.626 37.625 0 3.596.518 7.072 1.464 10.368l-104.208 54.467-49.893-89.813 25.465-25.465a14.406 14.406 0 004.248-10.254c0-3.873-1.509-7.515-4.247-10.253l-43.326-43.326a14.404 14.404 0 00-10.253-4.247 14.401 14.401 0 00-10.253 4.247L202.42 91.641a14.404 14.404 0 00-4.247 10.253c0 3.874 1.508 7.515 4.247 10.253l22.868 22.868-20.788 31.179a7.5 7.5 0 002.08 10.401c3.412 2.275 8.083 1.397 10.401-2.08l19.125-28.684 9.641 9.641a14.452 14.452 0 0010.252 4.24c3.712 0 7.427-1.414 10.254-4.24l6.828-6.828 51.362 92.457c1.994 3.594 6.486 4.864 10.03 3.005l110.679-57.849a37.809 37.809 0 0015.151 11.219l-37.027 197.479h-63.799c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h86.034c11.849 0 21.488 9.639 21.488 21.488s-9.64 21.488-21.488 21.488H66.488c-11.849 0-21.488-9.64-21.488-21.488s9.64-21.488 21.488-21.488h257.989c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5H88.724L51.696 197.477a37.774 37.774 0 0014.007-9.875l96.516 56.336c3.375 1.973 7.799 1.017 10.021-2.317l25.34-38.006a7.5 7.5 0 00-12.481-8.321l-21.42 32.127-90.42-52.778a37.453 37.453 0 001.991-12.052c0-20.747-16.879-37.625-37.625-37.625S0 141.845 0 162.591c0 20.519 16.512 37.243 36.945 37.608l36.517 194.757h-6.974c-20.12 0-36.488 16.368-36.488 36.488s16.369 36.488 36.488 36.488h379.023c20.12 0 36.488-16.369 36.488-36.488s-16.368-36.488-36.488-36.488h-6.975L475.054 200.2c20.433-.365 36.946-17.09 36.946-37.609zm-256-18.078l-42.619-42.619L256 59.275l42.618 42.619zM15 162.591c0-12.476 10.15-22.625 22.625-22.625s22.625 10.15 22.625 22.625-10.15 22.625-22.625 22.625S15 175.067 15 162.591zm436.749 0c0-12.476 10.15-22.625 22.626-22.625S497 150.116 497 162.591s-10.149 22.625-22.625 22.625-22.626-10.149-22.626-22.625z\"></path>\n    </svg>\n  );\n}\n","export function NoIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path fill=\"none\" d=\"M.09.09h512v512H.09z\"></path>\n      <path\n        fill=\"#e94444\"\n        d=\"M256.09 441.78a184.89 184.89 0 01-85.58-20.86c-4.22-2.2-8.36-4.55-12.38-7.05a3.33 3.33 0 01-.62-5.19l251.16-251.17a3.34 3.34 0 015.2.62c2.49 4 4.85 8.16 7.05 12.38a185.75 185.75 0 01-164.83 271.27M98.33 354.09q-3.75-6-7-12.37a184.43 184.43 0 01-20.8-79.76c-3.24-105 82.25-192.47 187.33-191.5a185 185 0 0183.88 20.85q6.33 3.3 12.36 7.06a3.33 3.33 0 01.61 5.19L103.52 354.65a3.33 3.33 0 01-5.19-.61M256.09 7.5C118.8 7.5 7.5 118.8 7.5 256.09s111.3 248.59 248.59 248.59 248.59-111.29 248.59-248.59S393.38 7.5 256.09 7.5\"\n      ></path>\n      <path\n        fill=\"#d83131\"\n        d=\"M398.28 52.16a248 248 0 0189.35 190.93c0 137.29-111.29 248.59-248.59 248.59a247.45 247.45 0 01-142.18-44.69 247.53 247.53 0 00159.23 57.69c137.29 0 248.59-111.29 248.59-248.59a248.28 248.28 0 00-106.4-203.93\"\n      ></path>\n      <path d=\"M256.09 512.18A256.09 256.09 0 0175.01 75.01a256.11 256.11 0 11291.08 412.4 7.5 7.5 0 01-6.45-13.54 239.89 239.89 0 10-31.63 12.4 7.5 7.5 0 114.47 14.32 256.11 256.11 0 01-76.39 11.59z\"></path>\n      <path d=\"M101.2 363.09a10.48 10.48 0 01-1.25-.07 10.8 10.8 0 01-8-5 191.8 191.8 0 01-7.34-12.88 191 191 0 01-21.64-83c-1.63-52.89 18-103 55.21-141s86.85-58.74 139.71-58.23a191.22 191.22 0 0187.27 21.7c4.37 2.28 8.69 4.75 12.86 7.34a10.83 10.83 0 011.95 16.86L108.83 359.95a10.76 10.76 0 01-7.63 3.14zM256.09 77.9c-48.12 0-93.22 19-127.16 53.72-34.35 35.1-52.44 81.29-50.94 130.06a176 176 0 0020 76.52c1.29 2.47 2.64 4.94 4.06 7.37l243.54-243.6a175.7 175.7 0 00-7.36-4.06 176.41 176.41 0 00-80.47-20zm0 371.38a193.54 193.54 0 01-89-21.71 192.5 192.5 0 01-12.88-7.34 10.82 10.82 0 01-2-16.86l137.55-137.55a7.5 7.5 0 1110.6 10.61L166.59 410.2c2.42 1.41 4.89 2.77 7.38 4.06a178.52 178.52 0 0082.12 20c98.26 0 178.19-79.93 178.19-178.19a176.22 176.22 0 00-20-82.12c-1.29-2.49-2.65-5-4.06-7.38l-84.87 84.87a7.5 7.5 0 01-10.61-10.6l88.65-88.65a10.83 10.83 0 0116.86 1.95c2.58 4.16 5.05 8.49 7.34 12.89a191.11 191.11 0 0121.71 89c-.02 106.59-86.68 193.25-193.21 193.25z\"></path>\n    </svg>\n  );\n}\n","export function StarIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffb820\"\n        d=\"M491.64 188.725l-153.53-22.31-68.66-139.12c-2.75-5.57-8.1-8.36-13.45-8.36l.02 400.2 137.3 72.19c11.01 5.78 23.86-3.56 21.76-15.81l-26.22-152.92 111.09-108.29c8.91-8.68 3.99-23.79-8.31-25.58z\"\n      ></path>\n      <path\n        fill=\"#ffd06a\"\n        d=\"M356.62 312.125s23.68 138.03 23.76 138.49c-.08-.01-122.45-31-124.36-31.48-.02-.01-137.34 72.19-137.34 72.19-11.01 5.78-23.86-3.56-21.76-15.81l26.22-152.92-111.09-108.29c-8.91-8.68-3.99-23.79 8.31-25.58l153.53-22.31 68.66-139.12c2.75-5.57 8.1-8.36 13.45-8.36l62.19 174.9 139.06 20.21z\"\n      ></path>\n      <path d=\"M510.883 196.615c-2.666-8.204-9.625-14.07-18.16-15.311l-149.632-21.743-66.918-135.588c-3.817-7.735-11.547-12.54-20.173-12.54s-16.356 4.805-20.173 12.54L168.91 159.561 19.278 181.305c-8.537 1.24-15.495 7.106-18.161 15.311s-.484 17.04 5.693 23.062l108.274 105.541-9.911 57.786a7.501 7.501 0 006.124 8.66 7.499 7.499 0 008.66-6.125l10.578-61.672a7.502 7.502 0 00-2.157-6.639L17.28 208.934c-2.089-2.036-2.798-4.909-1.897-7.684.902-2.775 3.164-4.683 6.052-5.103l153.534-22.31a7.498 7.498 0 005.647-4.103l68.662-139.125c1.292-2.617 3.804-4.179 6.722-4.179s5.431 1.562 6.722 4.179l68.663 139.125a7.5 7.5 0 005.647 4.103l153.534 22.31c2.888.42 5.15 2.327 6.051 5.102.902 2.775.193 5.648-1.896 7.685L383.622 317.228a7.499 7.499 0 00-2.157 6.639l26.227 152.913c.494 2.876-.621 5.617-2.982 7.332-2.361 1.714-5.312 1.929-7.895.57L259.49 412.487a7.504 7.504 0 00-6.98 0l-137.325 72.195c-2.583 1.358-5.535 1.144-7.894-.57-2.361-1.715-3.476-4.456-2.982-7.332l10.578-61.673a7.501 7.501 0 00-6.124-8.66 7.501 7.501 0 00-8.66 6.125l-10.578 61.673c-1.458 8.502 1.971 16.933 8.95 22.003 3.943 2.865 8.557 4.32 13.201 4.32a22.51 22.51 0 0010.49-2.608L256 427.6l133.834 70.36c7.635 4.014 16.713 3.357 23.692-1.712 6.979-5.07 10.408-13.502 8.949-22.003l-25.56-149.027L505.19 219.677c6.177-6.022 8.359-14.859 5.693-23.062z\"></path>\n    </svg>\n  );\n}\n","// This icon file is generated automatically.\nvar DownCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M690 405h-46.9c-10.2 0-19.9 4.9-25.9 13.2L512 563.6 406.8 418.2c-6-8.3-15.6-13.2-25.9-13.2H334c-6.5 0-10.3 7.4-6.5 12.7l178 246c3.2 4.4 9.7 4.4 12.9 0l178-246c3.9-5.3.1-12.7-6.4-12.7z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"down-circle\", \"theme\": \"outlined\" };\nexport default DownCircleOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport DownCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/DownCircleOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar DownCircleOutlined = function DownCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: DownCircleOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  DownCircleOutlined.displayName = 'DownCircleOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(DownCircleOutlined);","// This icon file is generated automatically.\nvar UpCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M518.5 360.3a7.95 7.95 0 00-12.9 0l-178 246c-3.8 5.3 0 12.7 6.5 12.7H381c10.2 0 19.9-4.9 25.9-13.2L512 460.4l105.2 145.4c6 8.3 15.6 13.2 25.9 13.2H690c6.5 0 10.3-7.4 6.5-12.7l-178-246z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"up-circle\", \"theme\": \"outlined\" };\nexport default UpCircleOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport UpCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/UpCircleOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar UpCircleOutlined = function UpCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: UpCircleOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  UpCircleOutlined.displayName = 'UpCircleOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(UpCircleOutlined);"],"names":["SuspectCard","suspect","width","className","imageId","id","cardWidth","preview","name","unknownText","pt","en","Achievements","players","achievements","reference","clsx","getAnimationClass","size","level","map","achievement","index","type","icon","achievementObj","player","playerId","delay","length","title","avatarId","Boolean","description","content","value","shape","Container","children","contained","titleProps","childrenContainerProps","spaceProps","restTitleProps","childrenClassName","wrap","direction","childrenDirection","restChildrenContainerProps","ImageBlurButton","cardId","ghost","useBlurCards","blurCard","isBlurEnabled","shouldBeBlurred","placement","onClick","EyeOutlined","EyeInvisibleOutlined","ImageBlurButtonContainer","position","rest","ImageCard","previewImageId","fileExtension","baseUrl","useTDBaseUrl","baseClass","fallbackName","imageURL","replace","isBlurred","booleanPreviewConfig","maskClassName","src","placeholder","fallback","PUBLIC_URL","ImageCardBack","ImageCardButton","buttonPosition","over","disabled","buttonText","buttonProps","isTop","iconComponent","DownCircleOutlined","UpCircleOutlined","buttonClassName","restButtonProps","button","ImageCardHand","hand","onSelectCard","selectButtonText","selectButtonIcon","selectButtonClass","sizeRatio","cardSize","minCardSize","disabledSelectButton","selectedCards","cardClassName","useCardWidth","Math","max","minWidth","ImageCardPreloadHand","ImageCardSelectButton","selectLabel","deselectLabel","isSelected","custom","MetricHighlight","iconSize","iconPlacement","PointsHighlight","GainedPoint","gainedPoint","order","isPositive","isNegative","color","GainedPoints","gainedPoints","gainedPointsDescriptions","points","Array","isArray","RankingBoard","ranking","hideGainedPoints","useState","displayStep","setDisplayStep","sortedRanking","setSortedRanking","reRank","setReRank","useDimensions","height","maxPoints","useMemo","scores","newScore","seconds","useCountdown","duration","autoStart","onExpire","useEffectOnce","positions","lastPosition","lastPoints","rankByFinalScoreDict","orderBy","reduce","acc","entry","rankByPreviousScore","tempSortedRanking","newEntry","previousScore","useEffect","style","hPosition","top","CrownFilled","undefined","StepRankingWrapper","subtitle","white","useTemporarilyHidePlayersBar","CaretUpOutlined","submitAction","httpsCallable","functions","Icons","ACTION","MovieActionIcon","COMEDY","MovieComedyIcon","DRAMA","MovieDramaIcon","HORROR","MovieHorrorIcon","SCI_FI","MovieSciFiIcon","StepSelectGenre","user","announcement","genres","onSubmitGenre","isLoading","useLoading","useMock","genre","getRandomItem","key","fullWidth","Icon","MovieGenreIcon","ready","PhaseMovieGenreSelection","state","info","useUser","useStep","step","setStep","translate","useLanguage","request","useAPICall","apiFunction","actionName","onSuccess","onError","successMessage","errorMessage","payload","action","useOnSubmitMovieGenreAPIRequest","currentRound","round","current","phase","allowedPhase","PHASES","ActorsBoard","actors","onSubmitActor","selection","gap","maxWidth","margin","language","actorId","actor","onConfirm","okText","cancelText","RoleBoard","activeRole","instruction","movie","outcome","traitCount","traits","movieId","align","backgroundColor","pluralize","cast","NoIcon","trait","StepSelectActor","candidates","PhaseActorSelection","useOnSubmitMovieActorAPIRequest","roles","activeRoleId","SofaIcon","StepRanking","goToPreviousStep","ActorsSelections","playersSelections","Object","values","push","maxCount","StepResult","goToNextStep","PhaseResult","PhaseGameOver","announcementIcon","CrownIcon","C","achievementsReference","rolesOrder","roleId","role","getActiveComponent","LoadingPage","PhaseLobby","PhaseRules","PhaseSetup","PageError","theme","token","colorPrimary","THEME_COLORS","colorLink","gameCollection","GAME_COLLECTION","ACHIEVEMENTS","props","xmlns","viewBox","fill","d","cx","cy","r","StarIcon","ref","React","AntdIcon","_extends","DownCircleOutlinedSvg","UpCircleOutlinedSvg"],"sourceRoot":""}