{"version":3,"file":"static/js/page-hub.a4adec3c.chunk.js","mappings":"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","sources":["hooks/useDevFeatures.ts","pages/Dev/DevMenu.tsx","pages/Dev/DevHeader.tsx","pages/Hub/components/DevEmulatorAlert.tsx","pages/Hub/components/Filters.tsx","components/auth/LogoutButton.tsx","pages/Hub/Hub.tsx"],"sourcesContent":["import { isDevEnv } from '../utils/helpers';\nimport { useGlobalState } from './useGlobalState';\n\n/**\n * Controls debug and dev environment\n * @returns\n */\nexport function useDevFeatures() {\n  const [isDebugEnabled, setIsDebugEnabled] = useGlobalState('isDebugEnabled');\n\n  const toggleDevFeatures = () => {\n    setIsDebugEnabled((s) => !s);\n  };\n\n  return {\n    isDevEnv,\n    isDebugEnabled,\n    toggleDevFeatures,\n  };\n}\n","import { Segmented } from 'antd';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nexport function DevMenu() {\n  const { pathname } = useLocation();\n  const navigate = useNavigate();\n\n  const options = [\n    { label: 'Home', value: '/', disabled: pathname === '/' },\n    { label: 'Hub', value: '/hub', disabled: pathname === '/hub' },\n    { label: 'Icons', value: '/dev/icons', disabled: pathname === '/dev/icons' },\n    { label: 'Colors', value: '/dev/colors', disabled: pathname === '/dev/colors' },\n    { label: 'Sprites', value: '/dev/sprites', disabled: pathname === '/dev/sprites' },\n    { label: 'Resources', value: '/dev/resources', disabled: pathname === '/dev/resources' },\n    { label: 'Playground', value: '/dev/playground', disabled: pathname === '/dev/playground' },\n    { label: 'Showcase', value: '/showcase', disabled: pathname === '/showcase' },\n  ];\n\n  const onNavigate = (path: any) => {\n    navigate(path);\n  };\n\n  return <Segmented options={options} defaultValue={pathname} onChange={onNavigate} />;\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { Space } from 'antd';\n// Components\nimport { DevMenu } from './DevMenu';\n\ntype DevHeaderProps = {\n  title: ReactNode;\n  subTitle?: ReactNode;\n  extra?: ReactNode;\n};\n\nexport function DevHeader({ title, subTitle, extra }: DevHeaderProps) {\n  return (\n    <header className=\"dev-header\">\n      <div className=\"dev-header__heading\">\n        <div className=\"dev-header__left\">\n          <span className=\"dev-header__title\">{title} </span>\n          <span className=\"dev-header__subtitle\">{subTitle}</span>\n        </div>\n        <div className=\"dev-header__extra\">\n          <Space className=\"dev-header__extra-space\">{extra}</Space>\n          <DevMenu />\n        </div>\n      </div>\n    </header>\n  );\n}\n","import { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { Alert, Button, Modal } from 'antd';\nimport { useDevFeatures } from 'hooks/useDevFeatures';\nimport { useState } from 'react';\nimport { useEffectOnce } from 'react-use';\n\n/**\n * The emulator only properly works if using the local ip, to allow multi device testing\n * including mobile, this component will display an alert in case the current port is localhost\n */\nexport function DevEmulatorAlert() {\n  const { isDevEnv } = useDevFeatures();\n  const [stay, setStay] = useState(false);\n\n  const ip = process.env.REACT_APP_LOCAL_IP;\n  const displayDevWarningMessage = isDevEnv && window.location.hostname !== ip;\n  const { port, pathname, hash, protocol } = window.location;\n  const newPath = `${ip}:${port}${pathname}/${hash}`.replace('//', '/');\n  const emulatorUrl = `${protocol}//${newPath}`;\n\n  useEffectOnce(() => {\n    if (!stay && isDevEnv && displayDevWarningMessage) {\n      Modal.confirm({\n        title: 'Wrong Dev Environment',\n        icon: <ExclamationCircleOutlined />,\n        content: 'You are in a development environment and not using the emulator.',\n        okText: 'Switch Routes',\n        cancelText: 'Stay in Localhost',\n        onOk: () => {\n          setStay(true);\n          window.location.href = emulatorUrl;\n        },\n      });\n    }\n  });\n\n  if (!isDevEnv) return <></>;\n\n  return (\n    <>\n      {displayDevWarningMessage && (\n        <Alert\n          message={\n            <>\n              You are in a development environment and not using the emulator.{' '}\n              <Button href={emulatorUrl} type=\"link\">\n                Switch Routes\n              </Button>\n            </>\n          }\n          type=\"warning\"\n          showIcon\n          banner\n        />\n      )}\n    </>\n  );\n}\n","import { FilterOutlined } from '@ant-design/icons';\nimport { Checkbox, InputNumber, TreeSelect } from 'antd';\nimport { DefaultOptionType } from 'antd/lib/select';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { capitalize } from 'lodash';\nimport { useMemo } from 'react';\nimport { SEPARATOR, TAG_DICT } from 'utils/constants';\n\nconst { SHOW_PARENT } = TreeSelect;\n\ntype FiltersProps = {\n  setTagFilters: GenericFunction;\n  setNumberFilters: GenericFunction;\n  availabilityCount: number;\n};\nexport function Filters({ availabilityCount, setTagFilters, setNumberFilters }: FiltersProps) {\n  const onNumberFiltersUpdate = (key: string, value: number) => {\n    setNumberFilters((prevState: NumberDictionary) => ({\n      ...prevState,\n      [key]: value,\n    }));\n  };\n\n  return (\n    <div className=\"hub-filters\">\n      <FilterOutlined />({availabilityCount}){' '}\n      <div className=\"hub-filters__entry\">\n        <label>Players</label>\n        <InputNumber\n          min={2}\n          max={12}\n          size=\"small\"\n          className=\"hub-filters__input-number\"\n          onChange={(value) => onNumberFiltersUpdate('players', value ?? 0)}\n        />\n      </div>\n      <div className=\"hub-filters__entry\">\n        <label>Recommended with</label>\n        <Checkbox onChange={(e) => onNumberFiltersUpdate('recommendedWith', Number(e.target?.checked))} />\n      </div>\n      <div className=\"hub-filters__entry\">\n        <label>Best with</label>\n        <Checkbox onChange={(e) => onNumberFiltersUpdate('bestWith', Number(e.target?.checked))} />\n      </div>\n      <div className=\"hub-filters__entry\">\n        <label>Duration</label>\n        <InputNumber\n          min={15}\n          step={15}\n          size=\"small\"\n          className=\"hub-filters__input-number\"\n          onChange={(value) => onNumberFiltersUpdate('duration', value ?? 0)}\n        />\n      </div>\n      <div className=\"hub-filters__entry\">\n        <label>Tags</label>\n        <TagTreeSelect value={undefined} onTreeSelectChange={setTagFilters} />\n      </div>\n    </div>\n  );\n}\n\nfunction TagTreeSelect({ value, onTreeSelectChange }: any) {\n  const { dualTranslate } = useLanguage();\n\n  const onChange = (tags: string[]) => {\n    onTreeSelectChange(\n      tags\n      // .map((tag) => {\n      //   if (tag.includes(SEPARATOR)) {\n      //     return tag.split(SEPARATOR);\n      //   }\n      //   return tag;\n      // })\n      // .flat()\n    );\n  };\n\n  const treeData: DefaultOptionType[] = useMemo(\n    () =>\n      Object.values(\n        Object.keys(TAG_DICT).reduce((acc: any, tagKey: string) => {\n          const tagObj = TAG_DICT[tagKey];\n          if (acc[tagObj.group] === undefined) {\n            acc[tagObj.group] = {\n              title: capitalize(tagObj.group),\n              value: tagObj.group,\n              children: [],\n            };\n          }\n\n          acc[tagObj.group].children.push({\n            title: capitalize(dualTranslate(tagObj.label)),\n            value: `${tagObj.group}${SEPARATOR}${tagKey}`,\n          });\n\n          return acc;\n        }, {})\n      ),\n    [dualTranslate]\n  );\n\n  return (\n    <TreeSelect\n      treeData={treeData}\n      value={value}\n      onChange={onChange}\n      treeCheckable={true}\n      showCheckedStrategy={SHOW_PARENT}\n      placeholder=\"Select Game Tags\"\n      size=\"small\"\n      style={{\n        width: '100%',\n        minWidth: '400px',\n      }}\n    />\n  );\n}\n","import { useQuery } from 'react-query';\nimport { useNavigate } from 'react-router-dom';\n// Ant Design Resources\nimport { Button, ButtonProps, Popconfirm, message } from 'antd';\n// Services\nimport { signOut } from 'services/firebase';\n// Components\nimport { Translate } from 'components/language';\n\nexport function LogoutButton(props: ButtonProps) {\n  const navigate = useNavigate();\n\n  const { isLoading, refetch } = useQuery({\n    queryKey: 'sign-out',\n    queryFn: async () => await signOut(),\n    enabled: false,\n    onSuccess: () => {\n      navigate('/');\n    },\n    onError: (error: any) => {\n      message.error(`Something went wrong: ${JSON.stringify(error, null, 2)}`);\n    },\n  });\n\n  return (\n    <Popconfirm\n      title={<Translate pt=\"Tem certeza que quer deslogar?\" en=\"Are you sure you want to log out?\" />}\n      onConfirm={() => refetch()}\n      key=\"logout-button\"\n    >\n      <Button danger ghost {...props} loading={isLoading}>\n        Logout\n      </Button>\n    </Popconfirm>\n  );\n}\n","import { useMemo, useState } from 'react';\nimport { useEffectOnce, useTitle } from 'react-use';\n// Ant Design Resources\nimport { Typography, Layout, Space, Divider } from 'antd';\nimport { DatabaseFilled } from '@ant-design/icons';\n\n// Hooks\nimport { useGlobalState } from 'hooks/useGlobalState';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLocalStorage } from 'hooks/useLocalStorage';\n// Utils\nimport GAME_LIST from 'utils/info';\nimport { SEPARATOR, TAG_RULES } from 'utils/constants';\nimport { calculateGameAverageDuration, isDevEnv } from 'utils/helpers';\n// Components\nimport { GameCard } from './components/GameCard';\nimport { LanguageSwitch, Translate } from 'components/language';\nimport { DevHeader } from 'pages/Dev/DevHeader';\nimport { DevEmulatorAlert } from './components/DevEmulatorAlert';\nimport { Filters } from './components/Filters';\nimport { LogoutButton } from 'components/auth/LogoutButton';\n\nfunction Hub() {\n  useTitle('Hub - Tarde Divertida');\n\n  const { language } = useLanguage();\n  const [getLocalStorage] = useLocalStorage();\n  const [, setLanguage] = useGlobalState('language');\n  const [tagFilters, setTagFilters] = useState<string[]>([]);\n  const [numberFilters, setNumberFilters] = useState<NumberDictionary>({});\n\n  useEffectOnce(() => {\n    const prevLanguage = getLocalStorage('language');\n    if (prevLanguage) {\n      setLanguage(prevLanguage);\n    }\n  });\n\n  const gameList = useMemo(\n    () =>\n      Object.values(GAME_LIST).filter((game) => {\n        let result = [];\n\n        // Check player count\n        if (numberFilters.players) {\n          result.push(\n            game.playerCount.min <= numberFilters.players && game.playerCount.max >= numberFilters.players\n          );\n\n          if (numberFilters.bestWith) {\n            result.push(numberFilters.players === game.playerCount.best);\n          }\n\n          if (numberFilters.recommendedWith) {\n            result.push(game.playerCount.recommended.includes(numberFilters.players));\n          }\n        }\n\n        // Check tags\n        // TODO: this does not account for tagGroups and concurrent tags\n        tagFilters.forEach((tagKey) => {\n          const [tagGroup, tag] = tagKey.split(SEPARATOR);\n\n          if (tagGroup && tag && TAG_RULES?.[tagGroup] === 'exclusive') {\n            result.push(game.tags.includes(tag));\n          } else if (tag) {\n            result.push(game.tags.includes(tag));\n          }\n        });\n\n        // Check time\n        if (numberFilters.duration) {\n          const duration = calculateGameAverageDuration(game, numberFilters.players ?? 0);\n\n          if (numberFilters.players) {\n            result.push(\n              numberFilters.duration >= duration.customTime - 10 &&\n                numberFilters.duration <= duration.customTime + 10\n            );\n          } else {\n            result.push(numberFilters.duration >= duration.min && numberFilters.duration <= duration.max);\n          }\n        }\n\n        return result.every(Boolean);\n      }),\n    [tagFilters, numberFilters]\n  );\n\n  const { availableGames, comingSoonGames, devGames } = useMemo(() => {\n    const sortedGameList = gameList.sort((a, b) => (a.title[language] > b.title[language] ? 1 : -1));\n\n    return sortedGameList.reduce(\n      (acc: any, game) => {\n        if (game.available[language]) {\n          if (['alpha', 'dev'].includes(game.version) || game.version.startsWith('beta')) {\n            acc.devGames.push(game);\n          } else {\n            acc.availableGames.push(game);\n          }\n        } else {\n          acc.comingSoonGames.push(game);\n        }\n        return acc;\n      },\n      {\n        availableGames: [],\n        devGames: [],\n        comingSoonGames: [],\n      }\n    );\n  }, [gameList, language]);\n\n  return (\n    <Layout className=\"dev-layout\">\n      <DevHeader\n        title={\n          <>\n            <DatabaseFilled /> Hub\n          </>\n        }\n        subTitle={<Translate pt=\"Selecione um jogo para começar\" en=\"Select a game to start\" />}\n        extra={[\n          <LanguageSwitch key=\"language-switch\" />,\n          <LogoutButton key=\"logout-button\" danger ghost size=\"small\" />,\n        ]}\n      />\n\n      <DevEmulatorAlert />\n\n      <Filters\n        setTagFilters={setTagFilters}\n        setNumberFilters={setNumberFilters}\n        availabilityCount={availableGames.length}\n      />\n\n      <Layout.Content className=\"container\" id=\"main-container\">\n        {isDevEnv && (\n          <>\n            <Typography.Title level={2}>\n              <Translate pt=\"Em Desenvolvimento\" en=\"Under Development\" />\n            </Typography.Title>\n            <Space size={[8, 16]} wrap align=\"start\" className=\"game-card-collection\">\n              {devGames.map((game: GameInfo, index: number) => (\n                <GameCard key={`${game.gameCode}-${index}`} game={game} />\n              ))}\n            </Space>\n            <Divider />\n          </>\n        )}\n        <Typography.Title level={2}>\n          <Translate pt=\"Disponíveis\" en=\"Available\" />\n        </Typography.Title>\n        <Space size={[8, 16]} wrap align=\"start\" className=\"game-card-collection\">\n          {availableGames.map((game: GameInfo, index: number) => (\n            <GameCard key={`${game.gameCode}-${index}`} game={game} />\n          ))}\n        </Space>\n        <Divider />\n        {!isDevEnv && (\n          <>\n            <Typography.Title level={2}>\n              <Translate pt=\"Em Desenvolvimento\" en=\"Under Development\" />\n            </Typography.Title>\n            <Space size={[8, 16]} wrap align=\"start\" className=\"game-card-collection\">\n              {devGames.map((game: GameInfo, index: number) => (\n                <GameCard key={`${game.gameCode}-${index}`} game={game} />\n              ))}\n            </Space>\n            <Divider />\n          </>\n        )}\n        <Typography.Title level={2}>\n          <Translate pt=\"Em Breve\" en=\"Coming Soon\" />\n        </Typography.Title>\n        <Space size={[8, 16]} wrap align=\"start\" className=\"game-card-collection\">\n          {comingSoonGames.map((game: GameInfo, index: number) => (\n            <GameCard key={`${game.gameCode}-${index}`} game={game} />\n          ))}\n        </Space>\n      </Layout.Content>\n    </Layout>\n  );\n}\n\nexport default Hub;\n"],"names":["useDevFeatures","useGlobalState","isDebugEnabled","setIsDebugEnabled","isDevEnv","toggleDevFeatures","s","DevMenu","pathname","useLocation","navigate","useNavigate","options","label","value","disabled","defaultValue","onChange","path","DevHeader","title","subTitle","extra","className","DevEmulatorAlert","useState","stay","setStay","ip","process","displayDevWarningMessage","window","location","hostname","port","hash","protocol","newPath","replace","emulatorUrl","useEffectOnce","Modal","icon","ExclamationCircleOutlined","content","okText","cancelText","onOk","href","message","type","showIcon","banner","SHOW_PARENT","TreeSelect","Filters","availabilityCount","setTagFilters","setNumberFilters","onNumberFiltersUpdate","key","prevState","FilterOutlined","min","max","size","e","Number","target","checked","step","TagTreeSelect","undefined","onTreeSelectChange","dualTranslate","useLanguage","treeData","useMemo","Object","values","keys","TAG_DICT","reduce","acc","tagKey","tagObj","group","capitalize","children","push","SEPARATOR","tags","treeCheckable","showCheckedStrategy","placeholder","style","width","minWidth","LogoutButton","props","useQuery","queryKey","queryFn","signOut","enabled","onSuccess","onError","error","JSON","stringify","isLoading","refetch","pt","en","onConfirm","danger","ghost","loading","useTitle","language","useLocalStorage","getLocalStorage","setLanguage","tagFilters","numberFilters","prevLanguage","gameList","GAME_LIST","filter","game","result","players","playerCount","bestWith","best","recommendedWith","recommended","includes","forEach","split","tagGroup","tag","TAG_RULES","duration","calculateGameAverageDuration","customTime","every","Boolean","sort","a","b","available","version","startsWith","devGames","availableGames","comingSoonGames","DatabaseFilled","length","id","level","wrap","align","map","index","GameCard","gameCode"],"sourceRoot":""}