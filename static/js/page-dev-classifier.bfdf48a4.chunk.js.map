{"version":3,"file":"static/js/page-dev-classifier.bfdf48a4.chunk.js","mappings":"gWAmFO,SAASA,EAAT,GAAuG,IAA5EC,EAA2E,EAA3EA,KAAMC,EAAqE,EAArEA,SAAUC,EAA2D,EAA3DA,QAASC,EAAkD,EAAlDA,UAAWC,EAAuC,EAAvCA,KAASC,GAA8B,YAC3G,OACE,gBAAKF,WAAWG,EAAAA,EAAAA,GAAK,oBAAD,6BAA4CL,GAAYE,GAA5E,SACY,YAATH,GACC,SAAC,IAAD,CAASO,UAAU,aAAaL,QAASA,EAASM,QAAQ,QAAQJ,KAAMA,EAAxE,UACE,SAACK,GAAD,UAA4BJ,OAG9B,SAACI,GAAD,UAA4BJ,KAInC,CAED,SAASI,EAAT,GAMmC,IALjCC,EAKgC,EALhCA,KACAC,EAIgC,EAJhCA,MACAC,EAGgC,EAHhCA,UACAC,EAEgC,EAFhCA,QACAC,EACgC,EADhCA,YAEA,GAA8BC,EAAAA,EAAAA,UAASH,GAAvC,eAAOI,EAAP,KAAiBC,EAAjB,KACMC,EAAWC,QAAQR,GAMzB,OAJAS,EAAAA,EAAAA,IAAc,WACZH,EAAUL,EACX,KAGC,SAAC,MAAD,gBACES,MAAOH,GAAYF,EAAW,QAAU,SACxCM,KAAK,SACLC,YAAa,kBAAMN,GAAU,EAAhB,EACbO,aAAc,kBAAMP,EAAS,OAACL,QAAD,IAACA,GAAAA,EAAhB,EACdC,QAASA,QAAoBY,EAC7Bf,KAAMA,EACNgB,OAAK,EACL1B,KAAK,WACDc,GATN,aAWGE,GAAYE,IAAY,iBAAMf,UAAU,2BAAhB,SAA4CQ,MAG1E,C,iFCpGM,SAASgB,EAAT,GAQe,IAAD,IAPnBC,SAAAA,OAOmB,MAPR,GAOQ,EANnBC,EAMmB,EANnBA,SACAC,EAKmB,EALnBA,SACA9B,EAImB,EAJnBA,KACAa,EAGmB,EAHnBA,QAGmB,IAFnBkB,UAAAA,OAEmB,SADhB1B,GACgB,YACX2B,GAAaC,EAAAA,EAAAA,GAAa,CAChCL,SAAAA,EACAM,WAAW,EACXJ,SAAAA,EACAK,SAAUJ,IAJJC,SAOFI,EAAY,qBAElB,OACE,UAAC,MAAD,kBAAY/B,GAAZ,IAAkBL,KAAMA,EAAMa,QAAO,OAAEA,QAAF,IAAEA,EAAAA,EAAWiB,EAAlD,UACGD,EACAV,QAAQU,IAAaE,IAAc,KAClCA,IAAa,iBAAM5B,WAAWG,EAAAA,EAAAA,GAAK8B,EAAD,UAAeA,EAAf,aAA6BpC,IAAlD,SAA4DgC,OAGhF,C,kECrBYK,EAAoB,SAAC,GAOH,IAN7BR,EAM4B,EAN5BA,SAM4B,IAL5BS,OAAAA,OAK4B,aAJ5BC,YAAAA,OAI4B,MAJd,GAIc,MAH5BpC,UAAAA,OAG4B,MAHhB,GAGgB,MAF5BqC,UAAAA,OAE4B,MAFhB,QAEgB,EADzBnC,GACyB,YAC5B,OACE,mCACEF,WAAWG,EAAAA,EAAAA,GACT,qBADa,8BAEUkC,GACvBF,IAAWC,GAAe,8BAC1BpC,IAEEE,GAPN,aASGwB,IAGN,C,6LClBYY,EAAc,SAAC,GAA6E,IAA3EZ,EAA0E,EAA1EA,SAAUa,EAAgE,EAAhEA,MAAOvC,EAAyD,EAAzDA,UAAWwC,EAA8C,EAA9CA,UAAWC,EAAmC,EAAnCA,UAC7DC,EAAY,cAElB,OACE,SAAC,SAAD,CACE1C,WAAWG,EAAAA,EAAAA,GACTuC,EACAF,GAAS,UAAOE,EAAP,eACTH,GAAK,UAAOG,EAAP,WACLD,GAAS,UAAOC,EAAP,gBACT1C,GAEF,cAAY,cARd,SAUG0B,GAGN,E,sBCnCM,SAASiB,EAAT,GAAuE,IAAD,IAArCC,EAAqC,EAArCA,MAChCC,GAAO,iBAACD,QAAD,IAACA,OAAD,EAACA,EAAOE,aAAR,QAAiB,IAAjB,iBAAuBF,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAOG,eAA9B,QAAyC,GAEtD,OAAa,IAATF,GAAcD,EAAMI,gBAEpB,SAAC,EAAD,CAAiBnD,KAAK,QAAtB,UACE,SAAC,KAAD,CAAWoD,GAAG,8BAA2BC,GAAG,2BAMhD,SAAC,EAAD,CAAiBrD,KAAK,MAAtB,UACE,SAAC,KAAD,CACEoD,IACE,iCACGE,EAAAA,EAAAA,IAAUN,EAAM,QAAS,UAD5B,KACuC,4BAASA,IADhD,KACgEM,EAAAA,EAAAA,IAAUN,EAAM,UADhF,8BAKFK,IACE,iCACE,4BAASL,IADX,KAC2BM,EAAAA,EAAAA,IAAUN,EAAM,SAD3C,qCAOT,CC3BM,SAASO,EAAT,GAAqE,IAA5C1B,EAA2C,EAA3CA,SAAU1B,EAAiC,EAAjCA,UACxC,OAAO,iBAAMA,WAAWG,EAAAA,EAAAA,GAAK,iBAAkBH,GAAxC,SAAqD0B,GAC7D,CCoBM,IAAM2B,EAAQ,SAAC,GAQH,IAPjB3B,EAOgB,EAPhBA,SACAa,EAMgB,EANhBA,MACAhC,EAKgB,EALhBA,KACAP,EAIgB,EAJhBA,UAIgB,IAHhBsD,MAAAA,OAGgB,MAHR,EAGQ,MAFhBnC,KAAAA,OAEgB,MAFT,SAES,MADhBoC,MAAAA,OACgB,MADR,SACQ,EAChB,OACE,UAAC,UAAD,CACED,MAAOA,EACPtD,WAAWG,EAAAA,EAAAA,GAAK,QAAD,iBAAoBgB,GAApB,uBAA4CoC,GAAShB,GAAS,eAAgBvC,GAF/F,UAIGgB,QAAQT,IAASA,EACjBmB,IAGN,E,8GCDY8B,EAAkB,SAAC,GAMF,IAL5B9B,EAK2B,EAL3BA,SACA1B,EAI2B,EAJ3BA,UACAyC,EAG2B,EAH3BA,UAG2B,IAF3B5C,KAAAA,OAE2B,MAFpB,OAEoB,EAD3B4D,EAC2B,EAD3BA,IAEMf,EAAY,mBAEZnC,EAAO,CACXmD,QAAQ,SAACC,EAAA,EAAD,IACRC,OAAO,SAACC,EAAA,EAAD,IACPC,OAAO,SAACC,EAAA,EAAD,IACPC,MAAM,SAACC,EAAA,EAAD,IACNC,MAAM,SAACC,EAAA,EAAD,IACNC,KAAK,SAACC,EAAA,EAAD,IACLC,SAAS,SAACC,EAAA,EAAD,IACTC,MAAM,SAACC,EAAA,EAAD,IACNC,KAAK,SAACC,EAAA,EAAD,KACL9E,GAEI+E,EAAiB,CACrBlB,QAAQmB,EAAAA,EAAAA,IAAkB,UAC1BjB,OAAOiB,EAAAA,EAAAA,IAAkB,QAAS,CAAEC,UAAU,EAAMC,MAAO,SAC3DjB,OAAOe,EAAAA,EAAAA,IAAkB,OAAQ,CAAEG,OAAQ,EAAGD,MAAO,SACrDf,MAAMa,EAAAA,EAAAA,IAAkB,SACxBX,MAAMW,EAAAA,EAAAA,IAAkB,SACxBT,KAAKS,EAAAA,EAAAA,IAAkB,SACvBP,SAASO,EAAAA,EAAAA,IAAkB,SAC3BL,MAAMK,EAAAA,EAAAA,IAAkB,SACxBH,KAAKG,EAAAA,EAAAA,IAAkB,UACvBhF,GAEMoF,EAAUC,EAAAA,EAAAA,WAAVD,MACFE,EAAiB,WAATtF,EAAoB,CAAEuF,WAAYH,EAAMI,cAAiB,CAAC,EAExE,OACE,iBACErF,WAAWG,EAAAA,EAAAA,GAAKuC,EAAWD,GAAS,UAAOC,EAAP,gBAAgC1C,GACpE,cAAY,mBAFd,WAIE,gBAAKA,WAAWG,EAAAA,EAAAA,GAAK,GAAD,OAAIuC,EAAJ,oBAA0BA,EAA1B,mBAA8C7C,IAASyF,MAAOH,EAAlF,UACE,gBAAKnF,UAAW4E,EAAhB,SAAiCrE,MAElCkD,GACD,SAAC,cAAD,CAAsBzD,WAAWG,EAAAA,EAAAA,GAAK,GAAD,OAAIuC,EAAJ,cAArC,SAAiEhB,MAGtE,C,6IC3EM,SAASI,EAAT,GAK4C,IAJjDL,EAIgD,EAJhDA,SACAE,EAGgD,EAHhDA,SAGgD,IAFhDK,SAAAA,OAEgD,SAD7C9B,GAC6C,YAC1CqF,GAAQC,EAAAA,EAAAA,WAAS,QACrBC,iBAAiBC,EAAAA,EAAAA,IAAWjE,GAC5BE,SAAUK,OAAWV,EAAYK,GAC9BzB,IAGC2B,EAA2B,GAAhB0D,EAAMI,QAAeJ,EAAMK,QAE5C,OAAO,kBACFL,GADL,IAEE1D,SAAAA,GAEH,C,4FC3CM,SAASgE,IAAqE,IAAtDC,EAAqD,uDAAJ,CAAC,EAC/E,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAOMC,EAAM,SAACC,EAAaC,QACV9E,IAAV8E,EACFJ,EAAaK,OAAOF,GAEpBH,EAAaM,IAAIH,EAAKI,OAAOH,IAG/BH,EAAgBD,EACjB,EAMKQ,EAAS,SAACL,GACdH,EAAaK,OAAOF,GACpBF,EAAgBD,EACjB,GAEDS,EAAAA,EAAAA,YAAU,WACRC,OAAOC,QAAQb,GAAec,SAAQ,YAAmB,IAAD,eAAhBT,EAAgB,KAAXC,EAAW,KACjDJ,EAAaa,IAAIV,IACpBD,EAAIC,EAAKC,EAEZ,GACF,GAAE,IAEH,IAAMU,EAAcd,EACjBe,WACAC,MAAM,KACNC,QAAO,SAACC,EAA4BC,GACnC,MAAqBA,EAAMH,MAAM,KAAjC,eAAOb,EAAP,KAAYC,EAAZ,KAIA,OAHID,QAAiB7E,IAAV8E,IACTc,EAAGf,GAAOC,GAELc,CACR,GAAE,CAAC,GAEN,MAAO,CACLhB,IAAAA,EACAM,OAAAA,EACAM,YAAAA,EAEH,C,wBC/CM,SAASM,EAAaC,GAC3B,IAAMC,EAAOC,6BAEb,OAAQF,GACN,IAAK,MACH,MAAM,GAAN,OAAUC,EAAV,YAAkBC,eACpB,IAAK,MACH,MAAM,GAAN,OAAUD,EAAV,YAAkBC,iBACpB,IAAK,WACH,MAAM,GAAN,OAAUD,EAAV,YAAkBC,YACpB,QACE,MAAO,GAEZ,C,gHCpBM,SAASC,EAAyBC,GACvC,OACE,iCAAKC,MAAM,6BAA6BC,QAAQ,eAAkBF,GAAlE,eACE,iBACEG,KAAK,UACLC,EAAE,8SAEJ,mBAAQC,GAAG,MAAMC,GAAG,UAAUC,EAAE,UAAUJ,KAAK,aAC/C,iBACEA,KAAK,UACLC,EAAE,kQAEJ,mBAAQC,GAAG,MAAMC,GAAG,UAAUC,EAAE,UAAUJ,KAAK,aAC/C,iBACEA,KAAK,UACLC,EAAE,6PAEJ,iBACED,KAAK,UACLC,EAAE,wQAEJ,0BACE,iBAAMA,EAAE,4gCACR,iBAAMA,EAAE,yjBACR,iBAAMA,EAAE,o3BAIf,C,kFC5BM,SAASI,EAAyBR,GACvC,OACE,iCAAKC,MAAM,6BAA6BC,QAAQ,eAAkBF,GAAlE,eACE,iBACEG,KAAK,UACLC,EAAE,+SAEJ,mBAAQC,GAAG,MAAMC,GAAG,SAASC,EAAE,UAAUJ,KAAK,aAC9C,iBACEA,KAAK,UACLC,EAAE,gQAEJ,mBAAQC,GAAG,MAAMC,GAAG,MAAMC,EAAE,UAAUJ,KAAK,aAC3C,iBACEA,KAAK,UACLC,EAAE,sPAEJ,iBACED,KAAK,UACLC,EAAE,kZAEJ,0BACE,iBAAMA,EAAE,miCACR,iBAAMA,EAAE,yvBACR,iBAAMA,EAAE,ssCAIf,C,sNCzBYK,EAAa,CACxBC,MAAO,CAAEC,GAAI,QAASC,KAAM,CAAEnF,GAAI,QAASD,GAAI,SAC/CqF,UAAW,CAAEF,GAAI,YAAaC,KAAM,CAAEnF,GAAI,YAAaD,GAAI,WAC3DsF,IAAK,CAAEH,GAAI,MAAOC,KAAM,CAAEnF,GAAI,MAAOD,GAAI,WACzCuF,OAAQ,CAAEJ,GAAI,SAAUC,KAAM,CAAEnF,GAAI,SAAUD,GAAI,WAClDwF,QAAS,CAAEL,GAAI,UAAWC,KAAM,CAAEnF,GAAI,UAAWD,GAAI,eACrDyF,OAAQ,CAAEN,GAAI,SAAUC,KAAM,CAAEnF,GAAI,SAAUD,GAAI,WAClD0F,QAAS,CAAEP,GAAI,UAAWC,KAAM,CAAEnF,GAAI,UAAWD,GAAI,WACrD2F,KAAM,CAAER,GAAI,OAAQC,KAAM,CAAEnF,GAAI,OAAQD,GAAI,cAC5C4F,KAAM,CAAET,GAAI,OAAQC,KAAM,CAAEnF,GAAI,OAAQD,GAAI,UAC5C6F,OAAQ,CAAEV,GAAI,SAAUC,KAAM,CAAEnF,GAAI,SAAUD,GAAI,WAClD8F,KAAM,CAAEX,GAAI,OAAQC,KAAM,CAAEnF,GAAI,OAAQD,GAAI,WAC5C+F,MAAO,CAAEZ,GAAI,QAASC,KAAM,CAAEnF,GAAI,QAASD,GAAI,WAC/CgG,MAAO,CAAEb,GAAI,QAASC,KAAM,CAAEnF,GAAI,QAASD,GAAI,WAC/CiG,UAAW,CAAEd,GAAI,YAAaC,KAAM,CAAEnF,GAAI,YAAaD,GAAI,iBAC3DkG,OAAQ,CAAEf,GAAI,SAAUC,KAAM,CAAEnF,GAAI,SAAUD,GAAI,eAClDmG,KAAM,CAAEhB,GAAI,OAAQC,KAAM,CAAEnF,GAAI,OAAQD,GAAI,UAC5CoG,QAAS,CAAEjB,GAAI,UAAWC,KAAM,CAAEnF,GAAI,UAAWD,GAAI,eACrDqG,MAAO,CAAElB,GAAI,QAASC,KAAM,CAAEnF,GAAI,QAASD,GAAI,UAC/CsG,KAAM,CAAEnB,GAAI,OAAQC,KAAM,CAAEnF,GAAI,OAAQD,GAAI,WAC5CuG,IAAK,CAAEpB,GAAI,MAAOC,KAAM,CAAEnF,GAAI,MAAOD,GAAI,UACzCwG,MAAO,CAAErB,GAAI,QAASC,KAAM,CAAEnF,GAAI,QAASD,GAAI,WAC/CyG,MAAO,CAAEtB,GAAI,QAASC,KAAM,CAAEnF,GAAI,QAASD,GAAI,aAC/CL,MAAO,CAAEwF,GAAI,QAASC,KAAM,CAAEnF,GAAI,QAASD,GAAI,YAC/C0G,MAAO,CAAEvB,GAAI,QAASC,KAAM,CAAEnF,GAAI,QAASD,GAAI,WAE/C2G,KAAM,CAAExB,GAAI,OAAQC,KAAM,CAAEnF,GAAI,OAAQD,GAAI,SAC5C4G,MAAO,CAAEzB,GAAI,QAASC,KAAM,CAAEnF,GAAI,QAASD,GAAI,cAC/C6G,MAAO,CAAE1B,GAAI,QAASC,KAAM,CAAEnF,GAAI,QAASD,GAAI,QAC/C8G,KAAM,CAAE3B,GAAI,OAAQC,KAAM,CAAEnF,GAAI,OAAQD,GAAI,eAC5C+G,SAAU,CAAE5B,GAAI,WAAYC,KAAM,CAAEnF,GAAI,WAAYD,GAAI,YACxDgH,KAAM,CAAE7B,GAAI,OAAQC,KAAM,CAAEnF,GAAI,OAAQD,GAAI,WAC5CiH,OAAQ,CAAE9B,GAAI,SAAUC,KAAM,CAAEnF,GAAI,SAAUD,GAAI,SAElDkH,SAAU,CAAE/B,GAAI,WAAYC,KAAM,CAAEnF,GAAI,WAAYD,GAAI,iBACxDmH,SAAU,CAAEhC,GAAI,WAAYC,KAAM,CAAEnF,GAAI,WAAYD,GAAI,YACxDoH,SAAU,CAAEjC,GAAI,WAAYC,KAAM,CAAEnF,GAAI,WAAYD,GAAI,gBACxDqH,QAAS,CAAElC,GAAI,UAAWC,KAAM,CAAEnF,GAAI,UAAWD,GAAI,cACrDsH,IAAK,CAAEnC,GAAI,MAAOC,KAAM,CAAEnF,GAAI,MAAOD,GAAI,eAG9BuH,EAAW,IAGXC,GAAoBC,EAAAA,EAAAA,SAAQhE,OAAOiE,OAAOzC,GAAa,CAAC,WAAY,CAAC,QAErE0C,EAAsBH,EAAkBxD,QACnD,SAAC4D,EAA8BC,EAAWC,GAExC,OADAF,EAAIC,EAAU1C,IAAM7B,OAAOwE,GACpBF,CACR,GACD,CAAC,GAGUG,EAAsBP,EAAkBxD,QACnD,SAAC4D,EAAgCC,EAAWC,GAE1C,OADAF,EAAIE,GAASD,EAAU1C,GAChByC,CACR,GACD,CAAC,GAGUI,EAAgBR,EAAkBS,KAAI,SAACJ,EAAWC,GAAZ,MAAuB,CACxE5E,IAAK2E,EAAU1C,GACf0C,UAAWA,EAAUzC,KACrB8C,OAAQ5E,OAAOwE,GAHkC,I,WCnB5C,SAASK,EAAuBC,GAErC,IADA,IAAIC,EAAQ,EACZ,MAAqB5E,OAAOiE,OAAOU,EAAKE,YAAxC,eAAqD,CACpC,IADA,MAEbD,GAEH,CACD,OAAOA,CACR,CAqFM,IAAME,EAAwB9E,OAAO+E,KAAKvD,GAAYjB,QAAO,SAAC4D,EAAU1E,GAE7E,OADA0E,EAAI1E,GAAO,EACJ0E,CACR,GAAE,CAAC,GAgEG,IAAMa,EAA+B,SAACC,GAC3C,IAAMC,EAAiC,CAAC,EAcxC,OAbAlF,OAAOiE,OAAOgB,GAAM/E,SAAQ,SAACyE,GAC3BO,EAAQP,EAAKjD,IAAM,CACjBA,GAAIiD,EAAKjD,GACTC,KAAMgD,EAAKhD,KACXwD,cAAeC,KAAKC,UAAUV,EAAKE,aAEjCF,EAAKW,OACPJ,EAAQP,EAAKjD,IAAI4D,MAAO,GAEtBX,EAAKY,aACPL,EAAQP,EAAKjD,IAAI6D,WAAaZ,EAAKY,WAEtC,IACML,CACR,EAEYM,EAA6B,SAACP,GACzC,IAAMC,EAAyB,CAAC,EAUhC,OATAlF,OAAOiE,OAAOgB,GAAM/E,SAAQ,SAACyE,GAAU,IAAD,EACpCO,EAAQP,EAAKjD,IAAM,CACjBA,GAAIiD,EAAKjD,GACTC,KAAMgD,EAAKhD,KACXkD,WAAYF,EAAKE,WAAaF,EAAKE,WAAaO,KAAKK,MAAL,UAAWd,EAAKQ,qBAAhB,QAAiC,MACjFG,KAAMX,EAAKW,KACXC,WAAYZ,EAAKY,WAEpB,IACML,CACR,E,iICxMYQ,GAAoBC,EAAAA,EAAAA,eAAqC,CACpEC,WAAW,EACXC,WAAW,EACXC,SAAS,EACTC,UAAU,EACVd,KAAM,CAAC,EACPe,KAAM,WAAQ,EACdC,SAAS,EACTC,OAAQ,WAAQ,EAChBC,UAAW,CACTC,SAAU,GACVC,OAAQ,WAAQ,EAChBC,aAAc,WAAQ,EACtBC,aAAc,WAAQ,EACtBC,qBAAsB,WAAQ,EAC9BC,WAAY,WAAQ,KAQXC,EAAqB,SAAC,GAA2C,IAAzC1L,EAAwC,EAAxCA,SAC7B2L,GAAcC,EAAAA,EAAAA,MACZC,EAAiBC,EAAAA,EAAAA,SAAjBD,aACFE,EAAW,CAAC,mBAClB,GAAwB7M,EAAAA,EAAAA,UAAwB,CAAC,GAAjD,eAAO+K,EAAP,KAAa+B,EAAb,KACA,GAA8B9M,EAAAA,EAAAA,WAAS,GAAvC,eAAO+L,EAAP,KAAgBgB,EAAhB,KAEMC,GAAUxG,EAAAA,EAAAA,GAAa,OAE7B,GAKIyG,EAAAA,EAAAA,GAAwB,CAC1BJ,SAAU,CAAC,MAAO,cAClBK,QAAQ,WAAD,wBAAE,oGACgBC,MAAM,GAAD,OAAIH,EAAJ,sBADrB,cACDI,EADC,gBAEMA,EAASC,OAFf,mFAAF,kDAAC,KANGC,EADb,EACE5B,UACS6B,EAFX,EAEE3B,QACM4B,EAHR,EAGEzC,KACW0C,EAJb,EAIE9B,UASF,GAMIsB,EAAAA,EAAAA,GAAgD,CAClDJ,SAAAA,EACAK,QAAQ,WAAD,wBAAE,iGACDQ,GAASC,EAAAA,EAAAA,IAAIC,EAAAA,GAAW,mBADvB,UAEqBC,EAAAA,EAAAA,IAAOH,GAF5B,cAEDI,EAFC,OAGDC,EAHC,UAGcD,EAAc/C,cAH5B,QAGsC,CAAC,EAHvC,kBAIAO,EAA2ByC,IAJ3B,2CAAF,kDAAC,GAMRC,QAASP,EACTQ,UAAW,SAACb,GACVT,EAAauB,KAAK,CAChBC,QAAS,cACT3O,UAAW,eAEb,IAAM4O,GAASC,EAAAA,EAAAA,OAAM,CAAC,EAAGb,EAAQJ,GAEjCtH,OAAOiE,OAAOqE,GAAQpI,SAAQ,SAACyE,GAC7B,IAAKA,EAAKE,WAAW3B,KAAM,CAAC,IAAD,EACnBsF,GAAyC,GAA/B,UAAC7D,EAAKE,WAAW4D,YAAjB,QAAyB,GACzC9D,EAAKE,WAAW3B,KAAOsF,CACxB,CACI7D,EAAKE,WAAW1B,QACnBwB,EAAKE,WAAW1B,MAAQ,GAErBwB,EAAKE,WAAWlB,WACnBgB,EAAKE,WAAWlB,SAAW,GAExBgB,EAAKE,WAAWjB,UACnBe,EAAKE,WAAWjB,QAAU,GAEvBe,EAAKE,WAAWnB,WACnBiB,EAAKE,WAAWnB,SAAW,GAExBiB,EAAKE,WAAWpB,WACnBkB,EAAKE,WAAWpB,SAAW,GAExBkB,EAAKE,WAAWhB,MACnBc,EAAKE,WAAWhB,IAAM,UAGjBc,EAAKE,WAAW6D,gBAChB/D,EAAKE,WAAW4D,KACvBzB,EAAQsB,GACiB,kBAAd3D,EAAKhD,OACdgD,EAAKhD,KAAO,CACVnF,GAAImI,EAAKhD,KACTpF,GAAI,IAGT,IAED0K,GAAW,EACZ,EACD0B,QAAS,WACP9B,EAAa+B,MAAM,CACjBP,QAAS,qBACT3O,UAAW,cAEd,IA9DUmP,EAFb,EAEEjD,UACAC,EAHF,EAGEA,UACAC,EAJF,EAIEA,QACSgD,EALX,EAKEC,QA8DF,GAKIC,EAAAA,EAAAA,GAAoE,CACtEC,YAAalC,EACbmC,WAAW,WAAD,wBAAE,WAAOhE,GAAP,gFACJ0C,GAASC,EAAAA,EAAAA,IAAIC,EAAAA,GAAW,mBACxBqB,EAAkBnE,EAA6BE,GAF3C,UAGJkE,EAAAA,EAAAA,IAAOxB,EAAQuB,GAHX,gCAIHA,GAJG,2CAAF,mDAAC,GAMXhB,UAAW,SAACkB,EAAGC,GACbzC,EAAa0C,QAAQ,CACnBlB,QAAS,QACT3O,UAAW,eAEbiN,EAAY6C,aAAazC,EAAUuC,GACnCrC,GAAW,EACZ,IAnBUwC,EADb,EACE7D,UACS8D,EAFX,EAEE5D,QACW6D,EAHb,EAGE9D,UACA+D,EAJF,EAIEA,OAmBIxD,EAAWvG,ODtJgB,SAACoF,GAKlC,IAJA,IAAM4E,EAAqB7J,OAAO+E,KAAKE,GACpCT,IAAIsF,QACJC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,CAAd,IAECC,EAAI,EAAGA,EAAIL,EAAmBM,OAAQD,IAAK,CAClD,IAAMxI,EAAKmI,EAAmBK,GACxBvF,EAAOM,EAAKvD,GAClB,GAAI1B,OAAOiE,OAAOU,EAAKE,YAAYuF,SAAS,GAC1C,OAAO1I,CAEV,CAED,GAAImI,EAAmBM,OAAS,EAC9B,OAAOrG,EAGT,IAAK,IAAIoG,EAAI,EAAGA,EAAIL,EAAmBM,OAAQD,IAC7C,GAAIL,EAAmBK,GAAKL,EAAmBK,EAAI,KAAO,EACxD,OAAOL,EAAmBK,GAG9B,OAAOL,EAAmBA,EAAmBM,OAAS,EACvD,CC+HyBE,CAAoBpF,IAwE5C,OACE,SAACS,EAAkB4E,SAAnB,CACE5K,MAAO,CACLkG,UAAW4B,GAAeqB,EAC1B/C,QAAS2B,GAAa3B,GAAW4D,EACjC7D,UAAWA,GAAa8D,EACxB5D,SAAU0D,EACVxE,KAAAA,EACAe,KAAM4D,EACN3D,QAAAA,EACAC,OAAQ4C,EACR3C,UAAW,CACTC,SAAAA,EACAC,OAnFc,SAACkE,GACrBtD,GAAW,GACXD,GAAQ,SAACwD,GAAD,eAAC,UACJA,GADG,cAELD,EAAS,CACR7I,GAAI6I,EACJ5I,KAAM,CACJnF,GAAI,GACJD,GAAI,IAENsI,YAAY4F,EAAAA,EAAAA,WAAU3F,KARlB,GAWT,EAuEOwB,aArEiB,SAACiE,EAAgB5I,GACxCsF,GAAW,GACXD,GAAQ,SAACwD,GAAD,qBAAC,UACJA,GADG,cAELD,GAFK,QAAC,UAGFC,EAASD,IAHR,IAIJ5I,KAAM,CACJpF,GAAE,UAAEiO,EAASD,GAAQ5I,KAAKpF,UAAxB,QAA8B,GAChCC,GAAImF,MANF,GAUT,EA0DO4E,aAxDiB,SAACgE,EAAgB5I,GACxCsF,GAAW,GACXD,GAAQ,SAACwD,GAAD,qBAAC,UACJA,GADG,cAELD,GAFK,QAAC,UAGFC,EAASD,IAHR,IAIJ5I,KAAM,CACJnF,GAAE,UAAEgO,EAASD,GAAQ5I,KAAKnF,UAAxB,QAA8B,GAChCD,GAAIoF,MANF,GAUT,EA6CO6E,qBA3CyB,SAAC+D,EAAgBG,EAAqBhL,GACrEuH,GAAW,GACXD,GAAQ,SAACwD,GAAD,eAAC,UACJA,GADG,cAELD,GAFK,QAAC,UAGFC,EAASD,IAHR,IAIJ1F,YAAW,kBACN2F,EAASD,GAAQ1F,YADZ,cAEP6F,EAAchL,OANb,GAUT,EAgCO+G,WA9BW,SAAC8D,EAAgBjF,GAClC2B,GAAW,GACXD,GAAQ,SAACwD,GACP,IAAMG,GAAOF,EAAAA,EAAAA,WAAUD,GAMvB,OALIlF,EACFqF,EAAKJ,GAAQjF,MAAO,SAEbqF,EAAKJ,GAAQjF,KAEfqF,CACR,GACF,IAGC,SAoBG3P,GAGN,EAEY4P,EAAgB,kBAAMC,EAAAA,EAAAA,YAAWnF,EAAjB,E,2CC9PvBoF,EAAiC,CACrC,KAAM,MACN,KAAM,SACN,KAAM,SACN,EAAG,OACH,EAAG,QACH,EAAG,OACH,EAAG,QAGE,SAASC,EAAT,GAAqE,IAAD,EAApD3G,EAAoD,EAApDA,UAAW1E,EAAyC,EAAzCA,MAAOsL,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,IAAKC,EAAuB,EAAvBA,SAClD,OACE,UAAC,IAAD,CAAOzQ,KAAK,QAAQ0Q,UAAU,WAAWtO,MAAM,SAASvD,UAAU,OAAlE,WACE,SAAC8R,EAAA,EAAD,CACE1J,GAAIwC,EAAoBE,GACxBiH,MAAO,GACP/R,WAAWG,EAAAA,EAAAA,GAAKuR,GAAQ,uBAAwBC,GAAO,0BAEvDC,IACA,iBAAM5R,UAAU,iBAAhB,UACE,SAAC,KAAD,UAAgBkI,EAAW4C,GAAWzC,cAG/B/G,IAAV8E,IACC,SAAC,IAAD,CACEpG,UAAU,iBACVsL,MAAOlF,EACPjF,KAAK,QACLgE,MAAK,iBAAEqM,QAAF,IAAEA,OAAF,EAAEA,EAASjL,OAAOH,WAAlB,QAA6B,WAK3C,CCrCM,SAAS4L,IACd,IAAQrG,EAAS2F,IAAT3F,KAIFsG,GAAQC,EAAAA,EAAAA,UAAQ,kBHuDA,SAACvG,GACvB,IAAMwG,EAA0D,CAAC,EAC3DC,EAA+B,GAC/BC,EAA+B,GACjCC,EAAgB,EAChBC,EAAgB,EAEpB7L,OAAOiE,OAAOgB,GAAM/E,SAAQ,SAACyE,EAAMN,GACjCqH,EAAmBrH,GAAS,EAC5BsH,EAAmBtH,GAAS,EAC5B,IAAIyH,GAAO,EACPC,GAAY,EAChB/L,OAAOC,QAAQ0E,EAAKE,YAAY3E,SAAQ,YAA0B,IAAD,eAAvBkE,EAAuB,KAAZ4H,EAAY,UAE5BpR,IAA/B6Q,EAAgBrH,KAClBqH,EAAgBrH,GAAa,CAC3B,KAAM,EACN,KAAM,EACN,KAAM,EACN,EAAK,EACL,EAAK,EACL,EAAG,EACH,EAAG,IAGPqH,EAAgBrH,GAAWvE,OAAOmM,KAAY,EAG1CA,EAAS,EACXN,EAAmBrH,IAAU2H,EAE7BL,EAAmBtH,IAAU2H,EAGhB,IAAXA,GAAiBF,IACnBF,GAAiB,EACjBE,GAAO,IAGO,IAAZE,GAAkBD,IACpBF,GAAiB,EACjBE,GAAY,EAEf,GACF,IAED,IAAME,EAAajM,OAAO+E,KAAKE,GAAMkF,OAErC,MAAO,CACLsB,gBAAAA,EACAG,cAAeM,KAAKhQ,MAAuB,IAAhB0P,EAAuBK,GAClDJ,cAAeK,KAAKhQ,MAAuB,IAAhB2P,EAAuBI,GAClDE,wBAAwBC,EAAAA,EAAAA,MAAKV,GAC7BW,wBAAwBD,EAAAA,EAAAA,MAAKT,GAC7BvP,MAAO6P,EAEV,CG/G6BK,CAASrH,EAAf,GAAsB,CAACA,IAE7C,GAA8B/K,EAAAA,EAAAA,UAAS,QAAvC,eAAOqS,EAAP,KAAgBC,EAAhB,KAEMC,GAAgBjB,EAAAA,EAAAA,UAAQ,WAC5B,OAAOxH,EAAAA,EAAAA,SACLhE,OAAOiE,OAAOzC,GACd,CACE,SAACkL,GACC,GAAgB,SAAZH,EAAoB,OAAOG,EAAI/K,KAAKnF,GACxC,IAAMqI,EAAa0G,EAAME,gBAAgBiB,EAAIhL,IAC7C,MAAgB,kBAAZ6K,EAAoC1H,EAAW,GACnC,aAAZ0H,EAA+B1H,EAAW,GAAOA,EAAW,GAChD,YAAZ0H,EAA8B1H,EAAW,GAAOA,GAAW,GAC/C,aAAZ0H,EAA+B1H,GAAW,GAAQA,GAAW,GACjD,kBAAZ0H,EAAoC1H,GAAW,GAC5C6H,EAAIhL,EACZ,GAEH,CAAa,SAAZ6K,EAAqB,MAAQ,QAEjC,GAAE,CAAChB,EAAME,gBAAiBc,IAE3B,OACE,SAAC,IAAD,CAAOjT,UAAU,uBAAuB6R,UAAU,WAAlD,UACE,UAAC,IAAD,CAAMwB,MAAK,QAAX,WACE,UAAC,IAAD,CAAOC,MAAI,EAACnS,KAAK,QAAjB,WACE,SAAC,IAAD,CAAWkS,MAAM,iBAAiBjN,MAAO6L,EAAMK,cAAeiB,OAAO,OACrE,SAAC,IAAD,CAAWF,MAAM,iBAAiBjN,MAAO6L,EAAMM,cAAegB,OAAO,OACrE,SAAC,IAAD,CACEF,MAAM,oCACNjN,MAAO6L,EAAMY,uBACbW,UAAW,KAEb,SAAC,IAAD,CACEH,MAAM,oCACNjN,MAAO6L,EAAMc,uBACbS,UAAW,KAGb,4BACE,sCAAqB,KACrB,UAAC,IAAD,CAAQC,SAAU,SAACC,GAAD,OAAOR,EAAWQ,EAAlB,EAAsBtN,MAAO6M,EAAS9R,KAAK,QAAQmE,MAAO,CAAEqO,SAAU,QAAxF,WACE,SAAC,WAAD,CAAevN,MAAM,OAArB,mBACA,SAAC,WAAD,CAAeA,MAAM,gBAArB,iCACA,SAAC,WAAD,CAAeA,MAAM,WAArB,4BACA,SAAC,WAAD,CAAeA,MAAM,UAArB,2BACA,SAAC,WAAD,CAAeA,MAAM,WAArB,4BACA,SAAC,WAAD,CAAeA,MAAM,gBAArB,0CAIN,SAAC,IAAD,KAEA,SAAC,IAAD,CAAOkN,MAAI,EAACnS,KAAK,QAAjB,SACGgS,EAAcjI,KAAI,SAAC/D,EAAO4D,GACzB,IAAMD,EAAYmH,EAAME,gBAAgBhL,EAAMiB,IAC9C,OACE,UAAC,IAAD,CACEiL,OACE,4BACE,mCAASlM,EAAMkB,KAAKnF,GAApB,cAA4BiE,EAAMkB,KAAKpF,OACvC,SAACwO,EAAD,CAAM3G,UAAW3D,EAAMiB,GAAiBwJ,UAAQ,OAJtD,WASE,SAAC,IAAD,CACEyB,MAAM,gBACNjN,MAAyB,IAAjB0E,EAAU,GAAcmH,EAAMnP,MACtCyQ,OAAO,IACPC,UAAW,KAEb,SAAC,IAAD,CACEH,MAAM,WACNjN,MAA4C,KAAnC0E,EAAU,GAAOA,EAAU,IAAemH,EAAMnP,MACzDyQ,OAAO,IACPC,UAAW,KAEb,SAAC,IAAD,CACEH,MAAM,UACNjN,MAA6C,KAApC0E,GAAU,GAAQA,EAAU,IAAemH,EAAMnP,MAC1DyQ,OAAO,IACPC,UAAW,EACXxT,UAAU,UAEZ,SAAC,IAAD,CACEqT,MAAM,WACNjN,MAA8C,KAArC0E,GAAU,GAAQA,GAAU,IAAgBmH,EAAMnP,MAC3DyQ,OAAO,IACPC,UAAW,KAEb,SAAC,IAAD,CACEH,MAAM,gBACNjN,MAA0B,IAAlB0E,GAAU,GAAemH,EAAMnP,MACvCyQ,OAAO,IACPC,UAAW,EACXxT,UAAU,WAhCPmH,EAAMiB,GAoChB,UAKV,C,8FCvHM,SAASwL,KAAiC,IAAzBC,EAAwB,uDAAVrJ,EACpC,GAA4B5J,EAAAA,EAAAA,UAASiT,GAArC,eAAO5C,EAAP,KAAe6C,EAAf,KAEMC,EAAe,WACnBD,GAAU,SAACE,GACT,OAAOzN,OAAOiK,OAAOwD,GAAO,EAC7B,GACF,EAEKC,EAAW,WACfH,GAAU,SAACE,GACT,OAAOzN,OAAOiK,OAAOwD,GAAO,EAC7B,GACF,EAEKE,EAAO,SAACC,GACZL,GAAU,SAACE,GACT,GAAe,UAAXG,EACF,OAAO3J,EAGT,GAAe,SAAX2J,EACF,OAAON,EAGT,IAAMO,EAAS5D,OAAOwD,GAChBK,EAASF,EAASC,EACxB,OAAIC,EAAS,GAAKA,GAAU7D,OAAOqD,GAAe,EACzCtN,OAAOiK,OAAOwD,GAAOG,GAG1BA,EAAS,EACJ3J,EAGFqJ,CACR,GACF,EAED,MAAO,CACL5C,OAAAA,EACA8C,aAAAA,EACAE,SAAAA,EACAH,UAAAA,EACAQ,WAAY9D,OAAOS,GACnBiD,KAAAA,EAEH,C,gBC3CM,SAASK,GAAT,GAAuF,IAAnDnO,EAAkD,EAAlDA,MAAOqN,EAA2C,EAA3CA,SAChD,OACE,UAAC,YAAD,CAAarN,MAAOA,EAAOqN,SAAUA,EAAUe,WAAW,SAASC,YAAY,QAA/E,WACE,SAAC,aAAD,CAAc5U,KAAK,UAAUuG,OAAQ,EAArC,iBAGA,SAAC,aAAD,CAAcA,OAAQ,EAAtB,iBACA,SAAC,aAAD,CAAcA,OAAQ,EAAtB,iBACA,SAAC,aAAD,CACEA,MAAO,EACPd,MAAO,CACLoP,gBAA2B,IAAVtO,EAAc,MAAQ,SAH3C,gBAQA,SAAC,aAAD,CAAcA,MAAO,EAArB,gBACA,SAAC,aAAD,CAAcA,MAAO,EAArB,gBACA,SAAC,aAAD,CAAcA,MAAO,EAArB,iBAGL,C,uCCXKqE,IAAoBC,EAAAA,EAAAA,SAAQhE,OAAOiE,OAAOzC,GAAa,CAAC,WAAY,CAAC,QAEpE,SAASyM,KAAY,IAAD,IACzB,EAAqDrD,IAA7C3F,EAAR,EAAQA,KAAMgB,EAAd,EAAcA,QAASF,EAAvB,EAAuBA,SAAUC,EAAjC,EAAiCA,KAAMG,EAAvC,EAAuCA,UACvC,EAA8B+G,GAAQ,IAA9B3C,EAAR,EAAQA,OAAQ6C,EAAhB,EAAgBA,UAChB,GAA8ClT,EAAAA,EAAAA,UAAQ,oBAAC6J,GAAkB,UAAnB,aAAC,EAAsBrC,UAAvB,QAA6B,SAAnF,eAAOwM,EAAP,KAAwBC,EAAxB,KACA,GAA8BjU,EAAAA,EAAAA,UAAS,MAAvC,eAAOqS,EAAP,KAAgBC,EAAhB,KACA,GAAgCtS,EAAAA,EAAAA,UAAS,MAAzC,eAAOkU,EAAP,KAAiBC,EAAjB,KACA,GAAwBnU,EAAAA,EAAAA,UAAS,OAAjC,eAAOoU,EAAP,KAAaC,EAAb,KAEMC,GAAYhD,EAAAA,EAAAA,UAAQ,WACxB,OAAOxH,EAAAA,EAAAA,SACLhE,OAAOiE,OAAOgB,GACd,CAAC,SAACyH,GAAD,MAAsB,OAAZH,EAAmBzC,OAAO4C,EAAIhL,KAAM+M,EAAAA,EAAAA,KAAI/B,EAAKH,EAAvD,GACD,CAAC,OAEJ,GAAE,CAACtH,EAAMsH,IAEJmC,GAA+BlD,EAAAA,EAAAA,UAAQ,WAC3C,OAAOgD,EAAUjO,QAAO,SAAC4D,EAAwBQ,GAI/C,ON+GC,SAAuBA,EAAiBP,EAAsBgK,GACnE,MAAiB,OAAbA,EACKzJ,EAAKE,WAAWT,GAAa,EAErB,OAAbgK,EACKzJ,EAAKE,WAAWT,GAAa,EAGrB,OAAbgK,EACKzJ,EAAKE,WAAWT,GAAa,EAErB,OAAbgK,EACKzJ,EAAKE,WAAWT,GAAa,EAGrB,MAAbgK,EACoC,IAA/BzJ,EAAKE,WAAWT,GAGR,MAAbgK,EACoC,IAA/BzJ,EAAKE,WAAWT,GAGR,MAAbgK,EACoC,IAA/BzJ,EAAKE,WAAWT,GAGR,OAAbgK,GACqC,IAAhCzJ,EAAKE,WAAWT,GAGR,OAAbgK,GACqC,IAAhCzJ,EAAKE,WAAWT,GAGR,OAAbgK,GACqC,IAAhCzJ,EAAKE,WAAWT,GAGR,MAAbgK,GACoC,IAA/BzJ,EAAKE,WAAWT,EAI1B,CM9JSuK,CAAchK,EAAMuJ,EAA8BE,KACpDjK,EAAIQ,EAAKjD,KAAM,GAEVyC,CACR,GAAE,CAAC,EACL,GAAE,CAACqK,EAAWN,EAAiBE,IAc1BQ,EAAa3J,EAAKsF,GAExB,OACE,SAAC,IAAD,CAAOjR,UAAU,uBAAuB6R,UAAU,WAAlD,UACE,UAAC,IAAD,CACEwB,MAAM,WACNkC,OACE,SAAC,KAAD,CACE1V,KAAK,UACLa,QAAS,kBAAMgM,EAAKf,EAAX,EACT6J,QAAS/I,EACTzK,SAAUyK,IAAaE,EAJzB,kBAHJ,UAaGA,IACC,SAAC,IAAD,CACE9M,KAAK,UACLa,QAAU+L,EAA8B,WAAQ,EAA3B,kBAAMC,EAAKf,EAAX,EACrBzK,MAAM,SACNX,KAAOkM,GAA4B,SAACgJ,GAAA,EAAD,KAAjB,SAACC,GAAA,EAAD,IAClBC,QAAQ,UAIZ,SAACC,GAAD,CACER,UAAWA,EACXR,gBAAiBA,EACjBC,mBAAoBA,EACpB5B,QAASA,EACTC,WAAYA,EACZ4B,SAAUA,EACVC,YAAaA,EACbC,KAAMA,EACNC,QAASA,IAEG,MAAbH,GAA6B,aAATE,IACnB,SAAC,IAAD,CAAY3B,MAAM,gBAAgBwC,UA/Cd,WAC1BX,EAAUtO,SAAQ,SAACyE,GACJ,aAAT2J,GAAuBI,EAAU/J,EAAKjD,KACxCyE,EAAUK,qBAAqB7B,EAAKjD,GAAIwM,GAAkB,EAE7D,GACF,EAyCO,UACE,SAAC,KAAD,CAAQzT,KAAK,QAAQtB,KAAK,UAA1B,+BAMJ,SAAC,IAAD,CAAOyT,MAAI,EAAX,SACG4B,EAAUhK,KAAI,SAACG,GAAU,IAAD,IACvB,MAAa,aAAT2J,GAAwBI,EAAU/J,EAAKjD,IAI9B,iBAAT4M,GAA2BI,EAAU/J,EAAKjD,IACrC,MAIP,UAAC,MAAD,CAEEpI,UAAU,4BACVU,QAAS,kBAxEC0H,EAwEoBiD,EAAKjD,QAvE/C0L,EAAU1L,GADW,IAACA,CAwED,EAHX,WAKE,SAAC,IAAD,CAAOkD,MAAOkF,OAAOnF,EAAKjD,IAAKjH,KAAK,QAAQgE,MAAM,OAAO2Q,cAAe,IAAxE,UACE,SAACC,GAAA,EAAD,CACE3N,GAAIiD,EAAKjD,GACT2J,MAAO,IACP/R,WAAWG,EAAAA,EAAAA,GAAKiV,EAAU/J,EAAKjD,KAAO,gCAG1C,iBAAMpI,UAAU,4BAAhB,SAC6B,kBAA1B,OAAOqL,QAAP,IAAOA,GAAP,UAAOA,EAAMhD,YAAb,aAAO,EAAYnF,IAAnB,OAAqCmI,QAArC,IAAqCA,GAArC,UAAqCA,EAAMhD,YAA3C,aAAqC,EAAYnF,GAAK,QAZpDmI,EAAKjD,IATL,IAyBV,OAGH,SAAC,IAAD,CACEiL,MAAM,kBACNpT,KAAMe,QAAQiQ,GACd+E,SAAU,kBAAMlC,EAAU,GAAhB,EACVmC,cAAe,CAAE3Q,MAAO,CAAE4Q,QAAS,SAJrC,SAMGlV,QAAQsU,KACP,iBAAKtV,UAAU,mBAAf,WACE,SAAC+V,GAAA,EAAD,CAAU3N,GAAIkN,EAAWlN,GAAI2J,MAAO,OACpC,4BACE,UAAC,UAAD,CAAkBzO,MAAO,EAAzB,WACE,SAAC,MAAD,UAAgBsR,IADlB,KACqDU,EAAWjN,KAAKnF,IAAM,IAD3E,KACkF,IAC/EoS,EAAWjN,KAAKpF,IAAM,IAFzB,IAE+BqS,EAAWtJ,OAAQ,SAAC,KAAD,CAAK7G,MAAM,UAAX,sBAElD,SAACoP,GAAD,CACEnO,MAAOkP,EAAW/J,WAAWqJ,GAC7BnB,SAAU,SAACC,GACT7G,EAAUK,qBAAqB+D,EAAQ2D,EAAiBlB,EAAES,OAAO/N,OACjE0N,EAAU,GACX,gBASlB,CAcD,SAAS8B,GAAT,GAUkB,IAThBR,EASe,EATfA,UACAR,EAQe,EARfA,gBACAC,EAOe,EAPfA,mBACA5B,EAMe,EANfA,QACAC,EAKe,EALfA,WACA4B,EAIe,EAJfA,SACAC,EAGe,EAHfA,YACAC,EAEe,EAFfA,KACAC,EACe,EADfA,QAEA,OACE,UAAC,IAAD,CAAO3B,MAAI,EAACtT,UAAU,SAAtB,WACE,UAAC,IAAD,CAAOmB,KAAK,QAAZ,WACE,yCACA,SAAC,IAAD,CACEsS,SAAU,SAACC,GAAD,OAAOmB,EAAmBnB,EAA1B,EACVtN,MAAOwO,EACPzT,KAAK,QACLmE,MAAO,CAAEqO,SAAU,QAJrB,SAMGlJ,GAAkBS,KAAI,SAAC/D,GAAD,OACrB,SAAC,WAAD,CAA8Bf,MAAOe,EAAMiB,GAA3C,SACGjB,EAAMkB,KAAKnF,IADMiE,EAAMiB,GADL,UAQ3B,UAAC,IAAD,CAAOjH,KAAK,QAAZ,WACE,uCACA,UAAC,IAAD,CAAQsS,SAAU,SAACC,GAAD,OAAOR,EAAWQ,EAAlB,EAAsBtN,MAAO6M,EAAS9R,KAAK,QAAQmE,MAAO,CAAEqO,SAAU,QAAxF,WACE,SAAC,WAAD,CAAevN,MAAM,KAArB,iBACA,SAAC,WAAD,CAAeA,MAAM,UAArB,yBAIJ,UAAC,IAAD,CAAOjF,KAAK,QAAZ,WACE,wCACA,UAAC,IAAD,CAAQsS,SAAU,SAACC,GAAD,OAAOqB,EAAYrB,EAAnB,EAAuBtN,MAAO0O,EAAU3T,KAAK,QAAQmE,MAAO,CAAEqO,SAAU,QAA1F,WACE,SAAC,WAAD,CAAevN,MAAM,KAArB,4BACA,SAAC,WAAD,CAAeA,MAAM,KAArB,uBACA,SAAC,WAAD,CAAeA,MAAM,IAArB,gBACA,SAAC,WAAD,CAAeA,MAAM,IAArB,gBACA,SAAC,WAAD,CAAeA,MAAM,IAArB,gBACA,SAAC,WAAD,CAAeA,MAAM,IAArB,qBACA,SAAC,WAAD,CAAeA,MAAM,KAArB,iBACA,SAAC,WAAD,CAAeA,MAAM,KAArB,iBACA,SAAC,WAAD,CAAeA,MAAM,KAArB,iBACA,SAAC,WAAD,CAAeA,MAAM,MAArB,uBACA,SAAC,WAAD,CAAeA,MAAM,MAArB,kCAIJ,UAAC,IAAD,CAAOjF,KAAK,QAAZ,WACE,oCACA,UAAC,IAAD,CAAQsS,SAAU,SAACC,GAAD,OAAOuB,EAAQvB,EAAf,EAAmBtN,MAAO4O,EAAM7T,KAAK,QAAQmE,MAAO,CAAEqO,SAAU,QAAlF,WACE,SAAC,WAAD,CAAevN,MAAM,MAArB,kBACA,SAAC,WAAD,CAAeA,MAAM,WAArB,4BACA,SAAC,WAAD,CAAeA,MAAM,eAArB,sCAIJ,UAAC,IAAD,CAAOjF,KAAK,QAAZ,WACE,wCACA,SAAC,IAAD,CAAOmK,MAAO5E,OAAO+E,KAAK2J,GAAWvE,OAAQ1L,MAAM,OAAO2Q,cAAe,WAIhF,CC/NM,SAASK,GAAT,GAWY,IAVjBlF,EAUgB,EAVhBA,OACAqD,EASgB,EAThBA,WACAP,EAQgB,EARhBA,aACAE,EAOgB,EAPhBA,SACAC,EAMgB,EANhBA,KACAxH,EAKgB,EALhBA,KACAD,EAIgB,EAJhBA,SACAd,EAGgB,EAHhBA,KACAmB,EAEgB,EAFhBA,SACAH,EACgB,EADhBA,QAEA,OACE,UAAC,IAAD,CAAO3M,UAAU,yBAAyBsT,MAAI,EAA9C,WACE,SAAC,IAAD,CAAOA,MAAI,EAAX,UACE,SAAC,KAAD,CAAQzT,KAAK,UAAUa,QAAS,kBAAMgM,EAAKf,EAAX,EAAkB6J,QAAS/I,EAAUzK,SAAUyK,IAAaE,EAA5F,qBAIF,UAAC,IAAD,CAAO2G,MAAI,EAAX,WACE,SAAC,KAAD,CAAQ5S,QAAS,kBAAMwT,EAAK,QAAX,EAAqBlS,SAAUiP,IAAWzG,EAA3D,oBAGA,SAAC,KAAD,CAAQ9J,QAAS,kBAAMwT,GAAM,GAAZ,EAAiBlS,SAAUsS,GAAc,GAA1D,0BAGA,SAAC,KAAD,CAAQ5T,QAASqT,EAAc/R,SAAUiP,IAAWzG,EAApD,uBAGA,SAAC,IAAD,CAAS3K,KAAK,cACd,SAAC,KAAD,CAAQa,QAASuT,EAAUjS,SRNZ,QQMsBiP,EAArC,mBAGA,SAAC,KAAD,CAAQvQ,QAAS,kBAAMwT,EAAK,GAAX,EAAgBlS,SAAUsS,GAAc9D,ORT1C,OQS4D,GAA3E,sBAGA,SAAC,KAAD,CAAQ9P,QAAS,kBAAMwT,EAAK,OAAX,EAAoBlS,SAAUsS,GAAc9D,OAAO1D,GAAY,EAAhF,wBAIF,SAAC,IAAD,CAAOwG,MAAI,EAAX,UACE,SAAC,KAAD,CACE5S,QAAS,kBPsIZ,SAA8B0S,EAAkBgD,GACrD,IAAMC,EAAO,IAAIC,KAAK,CAACxK,KAAKC,UAAUqH,EAAK,KAAM,IAAK,CAAEvT,KAAM,qBACxD0W,EAAgBC,SAASC,cAAc,KAC7CF,EAAcG,KAAOC,OAAOC,IAAIC,gBAAgBR,GAChDE,EAAcO,SAAWV,EACzBG,EAAcQ,QACdJ,OAAOC,IAAII,gBAAgBT,EAAcG,KAC1C,CO7IwBO,CAAqBtL,EAAM,cAAjC,EACT6J,QAAS/I,EACTzK,SAAUyK,EAHZ,+BAUP,C,wCC8BYyK,I,SAAqC,SAChDC,EACAC,GAGA,IAAMC,EAAeC,GAAsBH,EAAgBC,GAErDG,EAA8B,CAClC,OACA,SACA,QACA,WACA,SACA,UACA,YACA,QACA,QACA,SACA,QACA,QACA,OACA,QACA,UACA,YACA,SACA,QACA,SACA,UACA,OACA,MACA,OACA,OACA,QACA,OACA,MACA,UACA,WACA,OACA,OACA,WACA,WACA,QACA,MACA,SA8BF,OA1ByB7Q,OAAOC,QAAQ0Q,GAErC5G,MAAK,cAAmD,IAAD,eAAhD+G,EAAgD,KAApCC,EAAoC,oBAAzBC,EAAyB,KAAbC,EAAa,KACtD,OAAIF,IAAYE,EACCJ,EAAeK,QAAQJ,GACvBD,EAAeK,QAAQF,GAKjCC,EAAUF,CAClB,IAEAI,QAAO,YAAkB,IAAhB/M,GAAe,eACvB,OAAOqM,EAAeW,OACpB,SAAC7G,GAAD,OACEmG,EAAsBnG,GAAQ1F,WAAWT,GAA0B,IACG,IAAtEsM,EAAsBnG,GAAQ1F,WAAWT,EAF3C,GAIH,IAEAI,KAAI,qCAAyB,CAC5BJ,UADG,KAEH1E,MAFG,QAMR,GAQYkR,GAAwB,SACnCS,EACAX,GAEA,IAAMC,EAAiC,CAAC,EAYxC,OAVAU,EAAQnR,SAAQ,SAACqK,GACf,IAAM5F,EAAO+L,EAAsBnG,GACnCvK,OAAOC,QAAQ0E,EAAKE,YAAY3E,SAAQ,YAA0B,IAAD,eAAvBkE,EAAuB,KAAZ4H,EAAY,UAC/BpR,IAA5B+V,EAAavM,KACfuM,EAAavM,GAAa,GAE5BuM,EAAavM,IAAc4H,CAC5B,GACF,IAEM2E,CACR,EAkLD,SAASW,GAAmBC,EAAgBC,GAC1C,OAAOD,EAAKJ,QAAO,SAACxM,GAAD,OAAW6M,EAAKpH,SAASzF,EAAzB,GACpB,CC5WM,SAAS8M,GAAT,GAMgB,IALrBlH,EAKoB,EALpBA,OACAjE,EAIoB,EAJpBA,aACAC,EAGoB,EAHpBA,aACAqI,EAEoB,EAFpBA,WACAnI,EACoB,EADpBA,WAEMiL,GAAoBlG,EAAAA,EAAAA,UACxB,kBAAMgF,GAAmC,CAACjG,IAAF,UAAcA,EAASqE,GAA/D,GACA,CAACrE,EAAQqE,IAEX,OACE,UAAC,IAAD,CAAOtV,UAAU,mBAAmB6R,UAAU,WAA9C,WACE,SAAC,KAAD,CAAOwG,YAAY,YAAY5E,SAAUzG,EAAc5G,MAAOkP,EAAWjN,KAAKnF,MAC9E,SAAC,KAAD,CAAOmV,YAAY,YAAY5E,SAAUxG,EAAc7G,MAAOkP,EAAWjN,KAAKpF,MAC9E,SAAC8S,GAAA,EAAD,CAAU3N,GAAI6I,EAAQc,MAAO,OAC7B,SAAC,KAAD,CACEuG,gBAAgB,OAChBC,kBAAkB,MAClB9E,SAAUtG,EACVqL,QAAO,OAAElD,QAAF,IAAEA,OAAF,EAAEA,EAAYtJ,QAEvB,SAAC,IAAD,KAEA,SAAC,cAAD,CAAsByM,QAAM,EAACzY,UAAU,SAAvC,+BAICoY,EAAkBlN,KAAI,YAA2B,IAAxBJ,EAAuB,EAAvBA,UAAW1E,EAAY,EAAZA,MACnC,OAAO,SAACqL,EAAD,CAAM3G,UAAWA,EAA2B4G,KAAgB,IAAVtL,EAAauL,KAAgB,IAAXvL,GAAnC0E,EACzC,MAGN,C,gBCzCM,SAAS4N,GAAT,GAAmD,IAAjC/M,EAAgC,EAAhCA,KAAMmI,EAA0B,EAA1BA,UACvB6E,EAAYjS,OAAOiE,OAAOgB,GAAM1E,QAAO,SAAC4D,EAA6B1D,GAEzE,OADA0D,EAAI1D,EAAMkB,KAAKnF,IAAMiE,EAAMiB,GACpByC,CACR,GAAE,CAAC,GACE+N,EAAQlS,OAAO+E,KAAKkN,GAAWzN,KAAI,SAAC7C,GAAD,MAAW,CAAEjC,MAAOiC,EAApB,IAQzC,OACE,SAAC,IAAD,WACE,SAAC,KAAD,CACEwQ,QAASD,EACTtT,MAAO,CAAEyM,MAAO,KAChB+G,SAXW,SAACzQ,GACZsQ,EAAUtQ,IACZyL,EAAU6E,EAAUtQ,GAEvB,EAQKgQ,YAAY,WACZU,aAAc,SAACC,EAAYC,GAAb,OACuD,IAAnEA,EAAQ7S,MAAM8S,cAActB,QAAQoB,EAAWE,cADnC,KAMrB,C,4BC5BM,SAASC,GAAT,GAAoD,IAAhC3Y,EAA+B,EAA/BA,MAAO4F,EAAwB,EAAxBA,MAChC,OACE,iBAAKpG,UAAU,uBAAf,UACGQ,EADH,IACW,IACR4F,GACC,SAACgT,GAAA,EAAD,CAAmB9T,MAAO,CAAEH,MAAO,YAEnC,SAACkU,GAAA,EAAD,CAAqB/T,MAAO,CAAEH,MAAO,WAI5C,C,eCAKgO,IAAgBzI,EAAAA,EAAAA,SAAQhE,OAAOiE,OAAOzC,GAAa,CAAC,WAAY,CAAC,QAEhE,SAASoR,KACd,MAAqDhI,IAA7C3F,EAAR,EAAQA,KAAMe,EAAd,EAAcA,KAAMD,EAApB,EAAoBA,SAAUI,EAA9B,EAA8BA,UAAWF,EAAzC,EAAyCA,QACzC,EAAwEiH,GAAQ/G,EAAUC,UAAlFmE,EAAR,EAAQA,OAAQ8C,EAAhB,EAAgBA,aAAcE,EAA9B,EAA8BA,SAAUK,EAAxC,EAAwCA,WAAYJ,EAApD,EAAoDA,KAAMJ,EAA1D,EAA0DA,UACpD5M,GAAKrB,EAAAA,GAAAA,KAEL9C,EAAU4I,EAAKsF,IAErBxK,EAAAA,EAAAA,YAAU,WACH1D,GACH8J,EAAUE,OAAOkE,EAEpB,GAAE,CAAClO,KAEJ0D,EAAAA,EAAAA,YAAU,WACJS,EAAGJ,YAAYuE,MACjByI,EAAU5M,EAAGJ,YAAYuE,KAE5B,GAAE,CAACnE,EAAGJ,YAAYuE,OAkBnB,IAAKtI,EACH,OACE,SAAC,IAAD,CAAO/C,UAAU,kBAAjB,UACE,SAAC,KAAD,MAKN,IAAMuZ,EZPD,SAAsBlO,EAAiBmO,GAC5C,IAAMjO,EAAa7E,OAAOiE,QAAP,kBAAmB6O,GAAkBnO,EAAKE,aAM7D,MAAO,CACLkO,QANczY,QAAQqK,EAAKhD,MAO3BqR,QANcnO,EAAWuF,SAAS,GAOlC6I,aANmBpO,EAAWuF,SAAS,GAOvC8I,YANkBrO,EAAWsO,MAAK,SAACC,GAAD,OAAOA,EAAI,CAAX,IAQrC,CYNoBC,CAAahX,EAASyI,GAEnCwO,GACJ,SAAC7B,GAAD,CACElH,OAAQA,EACRqE,WAAYvS,EACZiK,aA9BiB,SAAC0G,GACpB7G,EAAUG,aAAaiE,EAAQyC,EAAES,OAAO/N,MAAM6T,cAC/C,EA6BGhN,aA3BiB,SAACyG,GACpB7G,EAAUI,aAAagE,EAAQyC,EAAES,OAAO/N,MAAM6T,cAC/C,EA0BG9M,WApBe,SAAC/G,GAClByG,EAAUM,WAAW8D,EAAQ7K,EAC9B,IAsBK8T,GACJ,SAAC/D,GAAD,CACElF,OAAQA,EACRqD,WAAYA,EACZP,aAAcA,EACdE,SAAUA,EACVC,KAAMA,EACNzH,SAAUA,EACVC,KAAMA,EACNI,SAAUD,EAAUC,SACpBnB,KAAMA,EACNgB,QAASA,IAIb,OACE,UAAC,IAAD,CAAO3M,UAAU,uBAAuB6R,UAAU,WAAlD,UACGqI,GAED,UAAC,IAAD,CACE7G,OACE,+CACepC,EADf,MAC0BlO,EAAQsF,KAAKnF,GADvC,OAC+CkI,EAAuBrI,GADtE,UAIFwS,OAAO,SAACmD,GAAD,CAAQ5E,UAAWA,EAAWnI,KAAMA,IAN7C,WAQE,UAAC,IAAD,CAAO3L,UAAU,mBAAjB,WACE,yBAAMga,KAEN,SAAC,IAAD,CAAOha,UAAU,yBAAyBsT,MAAI,EAA9C,SACGH,GAAcjI,KAAI,SAAC/D,GAClB,OACE,UAAC,IAAD,CAAOnH,UAAU,oBAAoB6R,UAAU,WAA/C,WACE,gBAAK7R,UAAU,QAAf,mBAA2BmH,EAAMkB,KAAKnF,GAAtC,cAA8CiE,EAAMkB,KAAKpF,OACzD,SAACsR,GAAD,CACEnO,MAAOrD,EAAQwI,WAAWpE,EAAMiB,IAChCqL,SAAU,SAACC,GAAD,OAjEEtC,EAiE0BjK,EAAMiB,GAjEXhC,EAiEesN,EAAES,OAAO/N,WAhEzEyG,EAAUK,qBAAqB+D,EAAQG,EAAahL,GADzB,IAACgL,EAAqBhL,CAiEvB,MAJiDe,EAAMiB,GAQxE,MAGF4R,MAEH,UAAC,IAAD,CAAOha,UAAU,wCAAjB,WACE,qBACA,SAACmZ,GAAD,CAAU3Y,MAAM,WAAW4F,MAAOmT,EAAWE,WAC7C,SAACN,GAAD,CAAU3Y,MAAM,gBAAgB4F,MAAOmT,EAAWI,eAClD,SAACR,GAAD,CAAU3Y,MAAM,sBAAsB4F,MAAOmT,EAAWK,eACxD,SAACT,GAAD,CAAU3Y,MAAM,qBAAqB4F,MAAOmT,EAAWG,gBAI1DQ,IAGN,C,mDCnIYC,GAAuC,CAClD,CACEC,YAAa,oBACbC,QAAS,CAAC,KACV9O,WAAY,GACZ+O,gBAAiB,GACjBC,SAAU,SAEZ,CACEH,YAAa,oBACbC,QAAS,CAAC,KAAM,KAChB9O,WAAY,GACZ+O,gBAAiB,GACjBC,SAAU,SAEZ,CACEH,YAAa,oBACbC,QAAS,CAAC,KAAM,KAAM,KAAM,MAAO,OACnC9O,WAAY,GACZ+O,gBAAiB,GACjBC,SAAU,SAEZ,CACEH,YAAa,wBACbC,QAAS,CAAC,MACV9O,WAAY,GACZ+O,gBAAiB,GACjBC,SAAU,aAEZ,CACEH,YAAa,qCACbC,QAAS,CAAC,IAAK,MACf9O,WAAY,GACZ+O,gBAAiB,GACjBC,SAAU,OAEZ,CACEH,YAAa,uCACbC,QAAS,CAAC,IAAK,KAAM,KAAM,KAAM,MACjC9O,WAAY,GACZ+O,gBAAiB,GACjBC,SAAU,SAEZ,CACEH,YAAa,uCACbC,QAAS,CAAC,IAAK,KAAM,KAAM,MAC3B9O,WAAY,GACZ+O,gBAAiB,GACjBC,SAAU,SAEZ,CACEH,YAAa,sCACbC,QAAS,CAAC,IAAK,IAAK,IAAK,KAAM,MAC/B9O,WAAY,GACZ+O,gBAAiB,GACjBC,SAAU,QAEZ,CACEH,YAAa,uCACbC,QAAS,CAAC,IAAK,KAAM,MACrB9O,WAAY,GACZ+O,gBAAiB,GACjBC,SAAU,SAEZ,CACEH,YAAa,wCACbC,QAAS,CAAC,IAAK,KACf9O,WAAY,GACZ+O,gBAAiB,GACjBC,SAAU,UAEZ,CACEH,YAAa,yCACbC,QAAS,CAAC,IAAK,KAAM,MACrB9O,WAAY,GACZ+O,gBAAiB,GACjBC,SAAU,WAEZ,CACEH,YAAa,SACbC,QAAS,CAAC,KACV9O,WAAY,GACZ+O,gBAAiB,GACjBC,SAAU,QAEZ,CACEH,YAAa,SACbC,QAAS,CAAC,KACV9O,WAAY,GACZ+O,gBAAiB,CAAC,QAClBC,SAAU,SC7EP,SAASC,KACd,IAAQ7O,EAAS2F,IAAT3F,KAER,OACE,UAAC,IAAD,CAAO3L,UAAU,uBAAuB6R,UAAU,WAAlD,WACE,SAAC,IAAD,CAAMwB,MAAM,YAAZ,UACE,SAAC,IAAD,CAAOC,MAAI,EAAX,SACG6G,GAAkBjP,KAAI,SAACuP,EAAU1P,GAChC,OACE,SAAC2P,GAAD,CAEEtS,GAAI2C,EAAQ,EACZqP,YAAaK,EAASL,YACtBva,KAAK,UACLwa,QAASI,EAASJ,QAClB9O,WAA2C,IAA/BkP,EAASlP,WAAWsF,OAAe,GAAK4J,EAASlP,WAC7D+O,gBAAiBG,EAASH,gBAC1BC,SAAUE,EAASF,SACnB5O,KAAMA,GATR,kBACkBZ,GAWrB,SAIL,SAAC,IAAD,CAAMsI,MAAM,aAAZ,UACE,SAAC,IAAD,CAAOC,MAAI,EAAX,SACG7I,EAAkBS,KAAI,SAACJ,EAAWC,GACjC,OACE,UAAC,IAAD,CAAO5J,KAAK,QAAQoC,MAAM,SAASsO,UAAU,WAA7C,WACE,SAACC,EAAA,EAAD,CAA6B1J,GAAIwC,EAAoBE,EAAU1C,IAAK2J,MAAO,IAA5DjH,EAAU1C,KACzB,UAAC,SAAD,WACG2C,EADH,MACaD,EAAUzC,KAAKnF,QAIjC,UAKV,CAaD,SAASwX,GAAT,GAAiG,IAA7EtS,EAA4E,EAA5EA,GAAIiS,EAAwE,EAAxEA,QAASE,EAA+D,EAA/DA,SAAU5O,EAAqD,EAArDA,KAAMyO,EAA+C,EAA/CA,YAAaE,EAAkC,EAAlCA,gBACtDlD,GAAwBlF,EAAAA,EAAAA,UAAQ,WACpC,OAAOmI,EAAQpT,QAAO,SAAC4D,EAAoBoG,GAEzC,OADApG,EAAIoG,GAAUtF,EAAKsF,GACZpG,CACR,GAAE,CAAC,EACL,GAAE,CAACwP,EAAS1O,IAEPgP,GAA4CzI,EAAAA,EAAAA,UAAQ,WACxD,OAAOoI,EAAgBrT,QAAO,SAAC4D,EAAyBM,GAEtD,OADAN,EAAIM,GAAU,GACPN,CACR,GAAE,CAAC,EACL,GAAE,CAACyP,IAEEjG,EN1E8B,SACpC8C,EACAC,EACAuD,EACAC,GACI,IAAD,sBAEGvD,EAAeC,GAAsBH,EAAgBC,GAErDyD,EAAmBnU,OAAOC,QAAQ0Q,GAErC5G,MAAK,kBAAIgH,GAAJ,qCAAwCA,CAAxC,IAELI,QAAO,YAAkB,IAAhB/M,GAAe,eACvB,OAAOqM,EAAeW,OACpB,SAAC7G,GAAD,OAAYmG,EAAsBnG,GAAQ1F,WAAWT,GAA0B,CAA/E,GAEH,IAEAI,KAAI,qCAGH4P,EACF3D,EAAetG,OAAS,EAAImH,GAAmB6C,EAAkBnU,OAAO+E,KAAKkP,IAA0B,GAErGI,EAAS,oBAAGD,SAAH,aAAG,EAAgB,UAAnB,QAAyBD,EAAiB,GAEnDG,EAAeJ,EAAMK,MAAK,SAACC,GAAD,OAAUA,EAAK/U,MAAQ4U,CAAvB,IAG9B,UAAIC,SAAJ,OAAI,EAAc7U,WACgC7E,IAA5CqZ,EAAsBK,EAAa7U,OACrCwU,EAAsBK,EAAa7U,KAAO,IAG5CwU,EAAsBK,EAAa7U,KAAnC,mBAA8CwU,EAAsBK,EAAa7U,OAAjF,QAA0FgR,KAG5F,IAAI9C,EAAM,oBAAG2G,SAAH,aAAG,EAAc7P,cAAjB,QAA2B,GAErC,GAAIkJ,EACF,OAAOA,EAIT,IAAM8G,EAA0BzU,OAAOC,QAAQ0Q,GAE5C5G,MAAK,uDAELoH,QAAO,YAAkB,IAAhB/M,GAAe,eACvB,OAAOqM,EAAeW,OACpB,SAAC7G,GAAD,OAAYmG,EAAsBnG,GAAQ1F,WAAWT,GAA0B,CAA/E,GAEH,IAEAI,KAAI,qCAcP,GAXA4P,EACE3D,EAAetG,OAAS,EACpBmH,GAAmBmD,EAAyBzU,OAAO+E,KAAKkP,IACxD,GAENI,EAAS,oBAAGD,SAAH,aAAG,EAAgB,UAAnB,QAAyBK,EAAwB,GAI1D9G,EAAM,oBAFN2G,EAAeJ,EAAMK,MAAK,SAACC,GAAD,OAAUA,EAAK/U,MAAQ4U,CAAvB,WAEpB,aAAG,EAAc5P,cAAjB,QAA2B,GAG/B,OAAOkJ,EAIT,IAAM+G,EAAsB1U,OAAOC,QAAQ0Q,GAExC5G,MAAK,uDAELvF,KAAI,qCAKP,OAJA6P,EAAYK,EAAoB,GAIhC,oBAFAJ,EAAeJ,EAAMK,MAAK,SAACC,GAAD,OAAUA,EAAK/U,MAAQ4U,CAAvB,WAE1B,aAAO,EAAc5P,cAArB,QAA+B,GAChC,CMVgBkQ,CAAuBhB,EAASjD,EAAuBuD,EAAuB1P,GAEvFqQ,EAAUjH,IAAWzJ,EAAoB2P,GAEzCgB,EAAoC,CACxC,CACEpV,IAAK,IACL3F,MAAO,OACPkB,UAAU,SAAC,SAAD,UAAkB0Y,KAE9B,CACEjU,IAAK,IACL3F,MAAO,SACPgb,KAAM,EACN9Z,UACE,SAAC,IAAD,CAAOP,KAAK,QAAZ,SACGkZ,EAAQnP,KAAI,SAAC+F,GACZ,OACE,0BACE,SAAC8E,GAAA,EAAD,CAAU3N,GAAI6I,EAAqBc,MAAO,IAAfd,IADnBA,EAIb,OAIP,CACE9K,IAAK,IACL3F,MAAO,WACPkB,UACE,SAAC,IAAD,CAAOP,KAAK,QAAZ,UACE,SAACsQ,EAAD,CAAM3G,UAAWyP,OAIvB,CACEpU,IAAK,IACL3F,MAAO,SACPkB,UACE,SAAC,IAAD,CAAOP,KAAK,QAAZ,UACE,SAACsQ,EAAD,CAAM3G,UAAWE,EAAoBqJ,QAI3C,CACElO,IAAK,IACL3F,MAAO,SACPkB,SAAU4Z,GACR,SAAC,MAAD,CAAY/a,MAAM,SAACiH,GAAA,EAAD,OAElB,SAAC,MAAD,CAAYjH,MAAM,SAAC0H,GAAA,EAAD,QAKxB,OAAO,SAAC,KAAD,CAAcoL,MAAK,kBAAajL,GAAMmT,MAAOA,EAAOpa,KAAK,QAAQsa,OAAQ,EAAGC,OAAO,YAC3F,C,eChIM,SAASC,KACd,IAAQhQ,EAAS2F,IAAT3F,KACFzE,GAAKrB,EAAAA,GAAAA,KAEL+V,EAAuC,CAC3C,CACEvI,MAAO,KACPwI,UAAW,KACX1V,IAAK,KACL2V,OAAQ,SAAC1T,GAAD,OACN,SAAC,KAAD,CACElH,MAAM,QACNR,QAAS,WACPwG,EAAGhB,IAAI,OAAQkC,GACflB,EAAGhB,IAAI,OAAQ,UAChB,EALH,SAOGkC,GARG,GAYV,CACEiL,MAAO,OACPwI,UAAW,OACX1V,IAAK,OACL2V,OAAQ,SAACzT,GAAD,OAAU,SAAC,KAAD,UAAgBA,GAA1B,GAEV,CACEgL,MAAO,OACPwI,UAAW,KACX1V,IAAK,QACL2V,OAAQ,SAAC1T,GAAD,OAAQ,SAAC2N,GAAA,EAAD,CAAU3N,GAAIA,EAAI2J,MAAO,IAAjC,GAEV,CACEsB,MAAO,WACPlN,IAAK,aACL0V,UAAW,aACXC,OAAQ,SAAC/L,EAAG1E,GACV,IAAM+M,EAAoBlB,GAAmC,CAAC7L,EAAKjD,KAAP,UAAeiD,EAAKjD,GAAKiD,IACrF,OACE,SAAC,IAAD,CAAOlK,KAAK,QAAQnB,UAAU,sBAA9B,SACGoY,EAAkBlN,KAAI,gBAAGJ,EAAH,EAAGA,UAAW1E,EAAd,EAAcA,MAAd,OACrB,SAACqL,EAAD,CAAM3G,UAAWA,EAA2B1E,MAAOA,GAAlB0E,EADZ,KAK5B,IAIL,OACE,SAAC,IAAD,CAAO9K,UAAU,uBAAuB6R,UAAU,WAAlD,UACE,SAAC,IAAD,CAAMwB,MAAM,WAAWkC,OAAO,SAAC,KAAD,IAA9B,UACE,SAAC,KAAD,CAAOqG,QAASA,EAASG,WAAYrV,OAAOiE,OAAOgB,QAI1D,CClDD,SAASqQ,KACP,MAAqC1K,IAA7BhF,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,QAASb,EAA5B,EAA4BA,KAC5B,GAAwB/K,EAAAA,EAAAA,UAAS,WAAjC,eAAOqb,EAAP,KAAaC,EAAb,KACMhV,GAAKrB,EAAAA,GAAAA,GAAe,CAAEoW,KAAM,YAMlC,IAJAxV,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACdyV,EAAO,UAAChV,EAAGJ,YAAYmV,YAAhB,QAAwB,UAChC,GAAE,CAAC/U,EAAGJ,YAAYmV,QAEfE,EAAAA,EAAAA,SAAQxQ,IAASW,EACnB,OAAO,SAAC,KAAD,IAGT,GAAIE,EACF,OAAO,SAAC,IAAD,CAAWuC,QAAQ,uBAG5B,IAAMqN,EAAW,CACf,CAAE5b,MAAO,aAAc4F,MAAO,UAAWpE,SAAmB,YAATia,GACnD,CAAEzb,MAAO,WAAY4F,MAAO,WAAYpE,SAAmB,aAATia,GAClD,CAAEzb,MAAO,QAAS4F,MAAO,QAASpE,SAAmB,UAATia,GAC5C,CAAEzb,MAAO,WAAY4F,MAAO,WAAYpE,SAAmB,aAATia,GAClD,CAAEzb,MAAO,YAAa4F,MAAO,YAAapE,SAAmB,cAATia,IAGtD,OACE,4BACE,SAACI,EAAA,EAAD,CACEhJ,MAAM,aACNkC,OAAO,SAAC,IAAD,CAAWsD,QAASuD,EAAUE,aAAcL,EAAMxI,SAAU,SAACqG,GAAD,OAAY5S,EAAGhB,IAAI,OAAQ4T,EAA3B,MAG3D,YAATmC,IAAsB,SAAC3C,GAAD,IACb,aAAT2C,IAAuB,SAACtH,GAAD,IACd,UAATsH,IAAoB,SAACjK,EAAD,IACX,aAATiK,IAAuB,SAACN,GAAD,IACd,cAATM,IAAwB,SAACzB,GAAD,MAG9B,CAYD,OAVA,WAGE,OAFA+B,EAAAA,EAAAA,GAAS,6CAGP,SAACnP,EAAD,WACE,SAAC,GAAD,KAGL,C,wGCjEM,SAASoP,IACd,IAAQC,GAAaC,EAAAA,EAAAA,MAAbD,SACFE,GAAWC,EAAAA,EAAAA,MAEX/D,EAAU,CACd,CAAErY,MAAO,OAAQ4F,MAAO,IAAKpE,SAAuB,MAAbya,GACvC,CAAEjc,MAAO,MAAO4F,MAAO,OAAQpE,SAAuB,SAAbya,GACzC,CAAEjc,MAAO,QAAS4F,MAAO,aAAcpE,SAAuB,eAAbya,GACjD,CAAEjc,MAAO,SAAU4F,MAAO,cAAepE,SAAuB,gBAAbya,GACnD,CAAEjc,MAAO,UAAW4F,MAAO,eAAgBpE,SAAuB,iBAAbya,GACrD,CAAEjc,MAAO,YAAa4F,MAAO,iBAAkBpE,SAAuB,mBAAbya,GACzD,CAAEjc,MAAO,aAAc4F,MAAO,kBAAmBpE,SAAuB,oBAAbya,GAC3D,CAAEjc,MAAO,cAAe4F,MAAO,kBAAmBpE,SAAuB,oBAAbya,GAC5D,CAAEjc,MAAO,WAAY4F,MAAO,YAAapE,SAAuB,cAAbya,IAOrD,OAAO,SAAC,IAAD,CAAW5D,QAASA,EAASyD,aAAcG,EAAUhJ,SAJzC,SAACoJ,GAClBF,EAASE,EACV,GAGF,CCZM,SAASR,EAAT,GAAgE,IAA3ChJ,EAA0C,EAA1CA,MAAOyJ,EAAmC,EAAnCA,SAAUvH,EAAyB,EAAzBA,MAC3C,OACE,mBAAQvV,UAAU,aAAlB,UACE,iBAAKA,UAAU,sBAAf,WACE,iBAAKA,UAAU,mBAAf,WACE,kBAAMA,UAAU,oBAAhB,UAAqCqT,EAArC,QACA,iBAAMrT,UAAU,uBAAhB,SAAwC8c,QAE1C,iBAAK9c,UAAU,oBAAf,WACE,SAAC,IAAD,CAAOA,UAAU,0BAA0BsT,MAAI,EAA/C,SACGiC,KAEH,SAACiH,EAAD,WAKT,C","sources":["components/buttons/FixedMenuButton.tsx","components/buttons/TimedButton.tsx","components/buttons/TransparentButton.tsx","components/text/Instruction.tsx","components/text/RoundsLeftInstruction.tsx","components/text/TextHighlight.tsx","components/text/Title.tsx","components/text/RuleInstruction.tsx","hooks/useCountdown.ts","hooks/useQueryParams.ts","hooks/useTDBaseUrl.ts","icons/SpeechBubbleAcceptedIcon.tsx","icons/SpeechBubbleDeclinedIcon.tsx","pages/Dev/Classifier/constants.ts","pages/Dev/Classifier/helpers.ts","pages/Dev/Classifier/ClassifierContext.tsx","pages/Dev/Classifier/Sign.tsx","pages/Dev/Classifier/StatsCard.tsx","pages/Dev/Classifier/hooks.ts","pages/Dev/Classifier/AttributeLevelRadioGroup.tsx","pages/Dev/Classifier/Grouping.tsx","pages/Dev/Classifier/Controls.tsx","pages/Dev/Classifier/bot-utils.ts","pages/Dev/Classifier/CurrentItem.tsx","pages/Dev/Classifier/Search.tsx","pages/Dev/Classifier/Verifier.tsx","pages/Dev/Classifier/ClassifyingCard.tsx","pages/Dev/Classifier/sample-scenarios.ts","pages/Dev/Classifier/Scenarios.tsx","pages/Dev/Classifier/Priority.tsx","pages/Dev/Classifier/ItemClassifier.tsx","pages/Dev/DevMenu.tsx","pages/Dev/DevHeader.tsx"],"sourcesContent":["import clsx from 'clsx';\nimport { ReactNode, useState } from 'react';\nimport { useEffectOnce } from 'react-use';\n// Ant Design Resources\nimport { Button, ButtonProps, Popover } from 'antd';\n// Sass\nimport './FixedMenuButton.scss';\n\ntype FixedMenuButtonDefaultProps = {\n  /**\n   * What order it will show up in the screen\n   * 0 for rules\n   * 1 for extras (e.g. card size)\n   * 2 for extras\n   * 3 for rating\n   * -1 for admin only\n   */\n  position: 0 | 1 | 2 | 3 | -1;\n  /**\n   * The displayed icon\n   */\n  icon: ReactNode;\n  /**\n   * The optional label to follow the icon when hover\n   */\n  label?: ReactNode;\n  /**\n   * The custom class\n   */\n  className?: string;\n  /**\n   * Determine if label should be visible\n   */\n  showLabel?: boolean;\n  /**\n   * Any ant design button props\n   */\n  buttonProps?: ButtonProps;\n};\n\ninterface FixedMenuButtonPopoverProps extends FixedMenuButtonDefaultProps {\n  /**\n   * The type of the floater\n   */\n  type: 'popover';\n  /**\n   * Content of popover, required when popover rule\n   */\n  content: ReactNode;\n  /**\n   * Guard onclick from button only\n   */\n  onClick?: never;\n  /**\n   * If popover should be open\n   */\n  open?: boolean;\n}\n\ninterface FixedMenuButtonButtonOnlyProps extends FixedMenuButtonDefaultProps {\n  /**\n   * The type of the floater\n   */\n  type: 'button';\n  /**\n   * The click function for the button\n   */\n  onClick: GenericFunction;\n  /**\n   * Guard content from popover\n   */\n  content?: never;\n  /**\n   * If popover should be open\n   */\n  open?: never;\n}\n\ntype FixedMenuButtonProps = FixedMenuButtonPopoverProps | FixedMenuButtonButtonOnlyProps;\n\n/**\n * Button position on the top left of the screen to display rules, admin button and other features\n */\nexport function FixedMenuButton({ type, position, content, className, open, ...rest }: FixedMenuButtonProps) {\n  return (\n    <div className={clsx('fixed-menu-button', `fixed-menu-button--${position}`, className)}>\n      {type === 'popover' ? (\n        <Popover placement=\"bottomLeft\" content={content} trigger=\"click\" open={open}>\n          <FixedMenuButtonContent {...rest} />\n        </Popover>\n      ) : (\n        <FixedMenuButtonContent {...rest} />\n      )}\n    </div>\n  );\n}\n\nfunction FixedMenuButtonContent({\n  icon,\n  label,\n  showLabel,\n  onClick,\n  buttonProps,\n}: Partial<FixedMenuButtonProps>) {\n  const [isActive, setActive] = useState(showLabel);\n  const hasLabel = Boolean(label);\n\n  useEffectOnce(() => {\n    setActive(showLabel);\n  });\n\n  return (\n    <Button\n      shape={hasLabel && isActive ? 'round' : 'circle'}\n      size=\"middle\"\n      onMouseOver={() => setActive(true)}\n      onMouseLeave={() => setActive(showLabel ?? false)}\n      onClick={onClick ? onClick : undefined}\n      icon={icon}\n      ghost\n      type=\"primary\"\n      {...buttonProps}\n    >\n      {isActive && hasLabel && <span className=\"fixed-menu-button__label\">{label}</span>}\n    </Button>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, ButtonProps } from 'antd';\n// Hook and Utils\nimport { useCountdown } from 'hooks/useCountdown';\n// Sass\nimport './TimedButton.scss';\n\ninterface TimedButtonProps extends ButtonProps {\n  /**\n   * Duration to call onExpire in seconds\n   */\n  duration?: number;\n  /**\n   * Function to be called when the time expires\n   */\n  onExpire?: GenericFunction;\n  /**\n   * Flag indicating if the timer should be hidden (this cancels the onExpire function)\n   */\n  hideTimer?: boolean;\n}\n\n/**\n * Button component that triggers a function when given duration is over\n */\nexport function TimedButton({\n  duration = 10,\n  children,\n  onExpire,\n  type,\n  onClick,\n  hideTimer = false,\n  ...rest\n}: TimedButtonProps) {\n  const { timeLeft } = useCountdown({\n    duration,\n    autoStart: true,\n    onExpire,\n    disabled: hideTimer,\n  });\n\n  const timeClass = 'timed-button__time';\n\n  return (\n    <Button {...rest} type={type} onClick={onClick ?? onExpire}>\n      {children}\n      {Boolean(children && !hideTimer) && ' '}\n      {!hideTimer && <span className={clsx(timeClass, `${timeClass}--${type}`)}>{timeLeft}</span>}\n    </Button>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Sass\nimport './TransparentButton.scss';\ninterface TransparentButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  /**\n   * The content of the button\n   */\n  children: ReactNode;\n  /**\n   * Flag indicating if the button is on its active state\n   */\n  active?: boolean;\n  /**\n   * Custom active class\n   */\n  activeClass?: string;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Behavior when the mouse hovers the button (default: scale)\n   */\n  hoverType?: 'scale' | 'sepia';\n}\n\n/**\n * Transparent button that has all the functionality of a button but no visible styling\n */\nexport const TransparentButton = ({\n  children,\n  active = false,\n  activeClass = '',\n  className = '',\n  hoverType = 'scale',\n  ...rest\n}: TransparentButtonProps) => {\n  return (\n    <button\n      className={clsx(\n        'transparent-button',\n        `transparent-button--${hoverType}`,\n        active && (activeClass || 'transparent-button--active'),\n        className\n      )}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n};\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Sass\nimport './Instruction.scss';\n\ntype InstructionsProps = {\n  /**\n   * The content of the instruction\n   */\n  children: ReactNode;\n  /**\n   * Adds a semi transparent background (white or black opposite to the white property)\n   */\n  contained?: boolean;\n  /**\n   * Make text color white\n   */\n  white?: boolean;\n  /**\n   * Makes instruction width 100%\n   */\n  fullWidth?: boolean;\n  /**\n   * Custom class name\n   */\n  className?: string;\n};\n\n/**\n * Typography container for instructions\n */\nexport const Instruction = ({ children, white, className, contained, fullWidth }: InstructionsProps) => {\n  const baseClass = 'instruction';\n\n  return (\n    <Typography.Text\n      className={clsx(\n        baseClass,\n        contained && `${baseClass}--contained`,\n        white && `${baseClass}--white`,\n        fullWidth && `${baseClass}--full-width`,\n        className\n      )}\n      data-testid=\"instruction\"\n    >\n      {children}\n    </Typography.Text>\n  );\n};\n","// Components\nimport { Translate } from 'components/language';\nimport { RuleInstruction } from 'components/text';\nimport { pluralize } from 'utils/helpers';\n\ntype RoundsLeftInstructionProps = {\n  /**\n   * The state round object with current and total values\n   */\n  round: GameRound;\n};\n\n/**\n * Displays instructional sentence based on the number of rounds left for the game to end\n */\nexport function RoundsLeftInstruction({ round }: RoundsLeftInstructionProps) {\n  const left = (round?.total ?? 0) - (round?.current ?? 0);\n\n  if (left === 0 || round.forceLastRound) {\n    return (\n      <RuleInstruction type=\"event\">\n        <Translate pt=\"Essa foi a última rodada\" en=\"No more rounds left\" />\n      </RuleInstruction>\n    );\n  }\n\n  return (\n    <RuleInstruction type=\"tip\">\n      <Translate\n        pt={\n          <>\n            {pluralize(left, 'Falta', 'Faltam')} <strong>{left}</strong> {pluralize(left, 'rodada')} para o\n            jogo terminar...\n          </>\n        }\n        en={\n          <>\n            <strong>{left}</strong> {pluralize(left, 'round')} left for the game to end...\n          </>\n        }\n      />\n    </RuleInstruction>\n  );\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Sass\nimport './TextHighlight.scss';\n\ntype TextHighlightProps = {\n  /**\n   * The text to be highlighted\n   */\n  children: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n};\n\nexport function TextHighlight({ children, className }: TextHighlightProps) {\n  return <span className={clsx('text-highlight', className)}>{children}</span>;\n}\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Typography } from 'antd';\n// Sass\nimport './Title.scss';\n\nexport type TitleProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Makes text white\n   */\n  white?: boolean;\n  /**\n   * Icon prefixing the title\n   */\n  icon?: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * The heading level (default: 2)\n   */\n  level?: 1 | 2 | 3 | 4 | 5;\n  /**\n   * The size of the title (default: medium)\n   */\n  size?: 'xx-small' | 'x-small' | 'small' | 'medium' | 'large';\n  /**\n   * The alignment of the text (default: center)\n   */\n  align?: 'left' | 'right' | 'center';\n};\n\nexport const Title = ({\n  children,\n  white,\n  icon,\n  className,\n  level = 2,\n  size = 'medium',\n  align = 'center',\n}: TitleProps) => {\n  return (\n    <Typography.Title\n      level={level}\n      className={clsx('title', `title--${size}`, `title--align-${align}`, white && 'title--white', className)}\n    >\n      {Boolean(icon) && icon}\n      {children}\n    </Typography.Title>\n  );\n};\n","import clsx from 'clsx';\nimport { ReactNode } from 'react';\n// Ant Design Resources\nimport { Typography, theme } from 'antd';\nimport {\n  AlertFilled,\n  BulbFilled,\n  ClockCircleFilled,\n  ExclamationCircleFilled,\n  MessageFilled,\n  PlayCircleFilled,\n  ReadFilled,\n  RobotFilled,\n  StarFilled,\n} from '@ant-design/icons';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Sass\nimport './RuleInstruction.scss';\n\ntype RuleInstructionsProps = {\n  /**\n   * The content of the rule instruction\n   */\n  children: ReactNode;\n  /**\n   * Makes instruction width 100%\n   */\n  fullWidth?: boolean;\n  /**\n   * Custom class name\n   */\n  className?: string;\n  /**\n   * The type of the rule instruction (default: rule)\n   * Rule is used for general rules\n   * Action is used when the player must do something\n   * Event is used when something happens like the result of an action or decision\n   * Alert is used when something very important needs attention (constant animation)\n   * Lore is used for story elements\n   * Scoring for result points (not rule)\n   * Wait for when the player must wait for something to happen\n   */\n  type: 'rule' | 'action' | 'event' | 'alert' | 'lore' | 'tip' | 'scoring' | 'wait' | 'bot';\n  /**\n   * Optional sound effect played when the component is rendered\n   */\n  sfx?: ReactNode;\n};\n\n/**\n * Typography container for rules instructions, if multiple lines, use <br /> to break lines\n * Do not use lists (ul, ol, li) inside this component\n * Add an icon on the left side\n */\nexport const RuleInstruction = ({\n  children,\n  className,\n  fullWidth,\n  type = 'rule',\n  sfx,\n}: RuleInstructionsProps) => {\n  const baseClass = 'rule-instruction';\n\n  const icon = {\n    action: <PlayCircleFilled />,\n    alert: <AlertFilled />,\n    event: <ExclamationCircleFilled />,\n    lore: <MessageFilled />,\n    rule: <ReadFilled />,\n    tip: <BulbFilled />,\n    scoring: <StarFilled />,\n    wait: <ClockCircleFilled />,\n    bot: <RobotFilled />,\n  }[type];\n\n  const animationClass = {\n    action: getAnimationClass('shakeX'),\n    alert: getAnimationClass('flash', { infinite: true, speed: 'fast' }),\n    event: getAnimationClass('tada', { repeat: 3, speed: 'fast' }),\n    lore: getAnimationClass('pulse'),\n    rule: getAnimationClass('pulse'),\n    tip: getAnimationClass('pulse'),\n    scoring: getAnimationClass('pulse'),\n    wait: getAnimationClass('pulse'),\n    bot: getAnimationClass('pulse'),\n  }[type];\n\n  const { token } = theme.useToken();\n  const color = type === 'action' ? { background: token.colorPrimary } : {};\n\n  return (\n    <div\n      className={clsx(baseClass, fullWidth && `${baseClass}--full-width`, className)}\n      data-testid=\"rule-instruction\"\n    >\n      <div className={clsx(`${baseClass}__icon`, `${baseClass}__icon--${type}`)} style={color}>\n        <div className={animationClass}>{icon}</div>\n      </div>\n      {sfx}\n      <Typography.Paragraph className={clsx(`${baseClass}__content`)}>{children}</Typography.Paragraph>\n    </div>\n  );\n};\n","import { TimerResult, TimerSettings, useTimer } from 'react-timer-hook';\nimport { inNSeconds } from 'utils/helpers';\n\ntype SelectedTimeSettings = Omit<TimerSettings, 'expiryTimestamp'>;\n\nexport interface useCountdownSettings extends SelectedTimeSettings {\n  /**\n   * The duration of the countdown in seconds\n   */\n  duration: number;\n  /**\n   * Disable timer\n   */\n  disabled?: boolean;\n}\n\ninterface useCountdownReturnValue extends TimerResult {\n  /**\n   * Time left in total seconds (minutes + seconds)\n   */\n  timeLeft: number;\n}\n\n/**\n * Timer countdown to perform actions\n * @param settings\n * @returns\n */\nexport function useCountdown({\n  duration,\n  onExpire,\n  disabled = false,\n  ...rest\n}: useCountdownSettings): useCountdownReturnValue {\n  const timer = useTimer({\n    expiryTimestamp: inNSeconds(duration),\n    onExpire: disabled ? undefined : onExpire,\n    ...rest,\n  });\n\n  const timeLeft = timer.minutes * 60 + timer.seconds;\n\n  return {\n    ...timer,\n    timeLeft,\n  };\n}\n","import { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport function useQueryParams(defaultParams: Record<string, string | number> = {}) {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  /**\n   * Adds a query param\n   * @param key - the key of the query param to add\n   * @param value - the value of the query param to add\n   */\n  const add = (key: string, value: unknown) => {\n    if (value === undefined) {\n      searchParams.delete(key);\n    } else {\n      searchParams.set(key, String(value));\n    }\n\n    setSearchParams(searchParams);\n  };\n\n  /**\n   * Removes a query param\n   * @param key - the key of the query param to remove\n   */\n  const remove = (key: string) => {\n    searchParams.delete(key);\n    setSearchParams(searchParams);\n  };\n\n  useEffect(() => {\n    Object.entries(defaultParams).forEach(([key, value]) => {\n      if (!searchParams.has(key)) {\n        add(key, value);\n      }\n    });\n  }, []); // eslint-disable-line\n\n  const queryParams = searchParams\n    .toString()\n    .split('&')\n    .reduce((qp: Record<string, string>, entry) => {\n      const [key, value] = entry.split('=');\n      if (key && value !== undefined) {\n        qp[key] = value;\n      }\n      return qp;\n    }, {});\n\n  return {\n    add,\n    remove,\n    queryParams,\n  };\n}\n","type TDUrlKind = 'tdi' | 'tdr' | 'tdi-data';\n\n/**\n * Returns the URL for the given kind of resource\n * @param kind the kind of resource\n * @returns the URL for the given kind of resource\n */\nexport function useTDBaseUrl(kind: TDUrlKind): string {\n  const base = process.env.REACT_APP_TD_BASE_URL;\n\n  switch (kind) {\n    case 'tdi':\n      return `${base}/${process.env.REACT_APP_TDI_IMAGES}`;\n    case 'tdr':\n      return `${base}/${process.env.REACT_APP_TD_RESOURCES}`;\n    case 'tdi-data':\n      return `${base}/${process.env.REACT_APP_TDI_DATA}`;\n    default:\n      return '';\n  }\n}\n","export function SpeechBubbleAcceptedIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#23f1a8\"\n        d=\"M252.932 7.518C115.087 9.181 5.716 121.473 7.522 259.316c.53 40.45 10.739 78.56 28.394 112.144L11.518 485.69c-1.887 8.834 5.957 16.678 14.791 14.791l114.23-24.398c33.584 17.655 71.694 27.864 112.144 28.394 137.843 1.806 250.135-107.565 251.798-245.409C506.167 119.394 392.605 5.832 252.932 7.518z\"\n      ></path>\n      <circle cx=\"256\" cy=\"290.169\" r=\"186.061\" fill=\"#26d192\"></circle>\n      <path\n        fill=\"#26d192\"\n        d=\"M504.495 255.995c0 136.564-108.744 246.767-245.295 248.482a247.716 247.716 0 01-33.52-1.823c124.788-13.532 220.756-118.467 220.756-246.659 0-127.854-96.711-233.126-220.958-246.659A252.799 252.799 0 01256 7.499c137.239 0 248.495 111.256 248.495 248.496z\"\n      ></path>\n      <circle cx=\"256\" cy=\"255.999\" r=\"186.066\" fill=\"#f5f7f8\"></circle>\n      <path\n        fill=\"#d9e7eb\"\n        d=\"M442.061 255.999c0 102.764-83.296 186.061-186.061 186.061-14.762 0-29.119-1.718-42.882-4.966 98.007-2.342 176.743-82.516 176.743-181.095S311.125 77.247 213.118 74.904c13.763-3.248 28.119-4.966 42.882-4.966 102.765 0 186.061 83.297 186.061 186.061z\"\n      ></path>\n      <path\n        fill=\"#26d192\"\n        d=\"M229.364 328.182a24.499 24.499 0 01-17.324-7.176l-30.104-30.104c-9.568-9.568-9.568-25.08 0-34.648s25.08-9.568 34.648 0l12.78 12.78 66.047-66.048c9.568-9.568 25.08-9.568 34.648 0 9.567 9.567 9.567 25.08 0 34.648l-83.371 83.372a24.499 24.499 0 01-17.324 7.176z\"\n      ></path>\n      <g>\n        <path d=\"M483.889 139.28a7.499 7.499 0 00-10.097-3.249 7.5 7.5 0 00-3.249 10.097c17.77 34.627 26.912 73.649 26.439 112.849-.78 64.621-26.529 124.899-72.504 169.731-46.016 44.871-107.019 69.09-171.697 68.27-38.366-.502-74.955-9.766-108.752-27.533a7.513 7.513 0 00-5.056-.696l-114.23 24.398c-2.382.513-3.972-.771-4.546-1.344-.574-.574-1.853-2.165-1.344-4.546l24.398-114.23a7.504 7.504 0 00-.696-5.057c-17.767-33.796-27.03-70.385-27.533-108.752-.848-64.705 23.397-125.682 68.27-171.697 44.832-45.976 105.11-71.724 169.73-72.504 78.884-.979 153.324 36.827 199.209 101.059a7.5 7.5 0 1012.205-8.719C415.701 39.134 336.616-.986 252.841.019c-68.63.827-132.658 28.184-180.289 77.029C24.881 125.935-.878 190.7.023 259.415c.522 39.838 9.94 77.878 27.997 113.111L4.183 484.124c-1.419 6.645.602 13.48 5.407 18.285s11.641 6.822 18.286 5.407l111.598-23.837c35.234 18.058 73.274 27.476 113.112 27.996 1.166.016 2.32.023 3.484.023 67.413-.003 130.825-25.689 178.882-72.552 48.846-47.631 76.202-111.659 77.029-180.289.502-41.632-9.212-83.086-28.092-119.877z\"></path>\n        <path d=\"M78.312 273.759a7.496 7.496 0 00-8.201-6.728 7.5 7.5 0 00-6.727 8.2c4.694 47.557 26.81 91.548 62.275 123.87 35.705 32.542 81.995 50.463 130.341 50.463 106.732 0 193.566-86.833 193.566-193.565S362.733 62.433 256 62.433c-48.474 0-94.853 18.005-130.594 50.697-35.509 32.48-57.559 76.647-62.087 124.366a7.5 7.5 0 1014.933 1.417c4.176-44.009 24.518-84.749 57.278-114.715C168.5 94.041 211.284 77.433 256 77.433c98.462 0 178.566 80.104 178.566 178.566 0 98.461-80.104 178.565-178.566 178.565-44.6 0-87.301-16.531-120.237-46.549-32.719-29.82-53.122-70.397-57.451-114.256z\"></path>\n        <path d=\"M306.03 251.056a7.5 7.5 0 0010.607 10.607l18.726-18.727c12.476-12.478 12.476-32.778 0-45.255-12.479-12.477-32.777-12.477-45.256 0l-60.743 60.745-7.477-7.478c-12.476-12.476-32.777-12.478-45.255.001-12.477 12.477-12.477 32.777 0 45.255l30.104 30.104c6.044 6.044 14.08 9.372 22.627 9.372s16.583-3.328 22.627-9.372l38.986-38.985a7.5 7.5 0 00-10.607-10.607l-38.985 38.985c-3.211 3.211-7.48 4.979-12.021 4.979s-8.81-1.769-12.021-4.979l-30.104-30.104c-6.628-6.629-6.628-17.414 0-24.042 6.629-6.629 17.413-6.629 24.042 0l12.78 12.78a7.5 7.5 0 0010.606 0l66.047-66.048c6.627-6.629 17.414-6.629 24.041 0 6.629 6.628 6.628 17.413 0 24.041zm-133.271-54.747a7.5 7.5 0 00-7.5 7.5v4.493h-4.493c-4.142 0-7.5 3.357-7.5 7.5s3.358 7.5 7.5 7.5h4.493v4.493c0 4.143 3.358 7.5 7.5 7.5s7.5-3.357 7.5-7.5v-4.493h4.493c4.142 0 7.5-3.357 7.5-7.5s-3.358-7.5-7.5-7.5h-4.493v-4.493a7.5 7.5 0 00-7.5-7.5z\"></path>\n      </g>\n    </svg>\n  );\n}\n","export function SpeechBubbleDeclinedIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fb4a59\"\n        d=\"M252.932 7.519C115.087 9.182 5.716 121.475 7.523 259.317c.53 40.45 10.739 78.56 28.394 112.144l-24.398 114.23c-1.887 8.834 5.957 16.678 14.791 14.791l114.23-24.398c33.584 17.655 71.694 27.864 112.144 28.394 137.843 1.806 250.135-107.565 251.798-245.409 1.685-139.674-111.877-253.236-251.55-251.55z\"\n      ></path>\n      <circle cx=\"256\" cy=\"290.17\" r=\"186.061\" fill=\"#f82f40\"></circle>\n      <path\n        fill=\"#f82f40\"\n        d=\"M504.495 255.996c0 136.564-108.744 246.767-245.295 248.482a247.716 247.716 0 01-33.52-1.823c124.788-13.532 220.756-118.467 220.756-246.659 0-127.854-96.711-233.126-220.958-246.659A252.799 252.799 0 01256 7.5c137.239 0 248.495 111.256 248.495 248.496z\"\n      ></path>\n      <circle cx=\"256\" cy=\"256\" r=\"186.066\" fill=\"#f5f7f8\"></circle>\n      <path\n        fill=\"#d9e7eb\"\n        d=\"M442.061 256c0 102.764-83.296 186.061-186.061 186.061-14.762 0-29.119-1.718-42.882-4.966C311.125 434.753 389.862 354.58 389.862 256S311.125 77.248 213.119 74.905c13.763-3.248 28.119-4.966 42.882-4.966 102.764 0 186.06 83.297 186.06 186.061z\"\n      ></path>\n      <path\n        fill=\"#fb4a59\"\n        d=\"M320.38 291.528L290.853 262l29.528-29.528c9.624-9.624 9.624-25.228 0-34.852-9.624-9.624-25.228-9.624-34.852 0L256 227.148l-29.528-29.528c-9.624-9.624-25.228-9.624-34.852 0-9.624 9.624-9.624 25.228 0 34.852L221.148 262l-29.528 29.528c-9.624 9.624-9.624 25.228 0 34.852 9.624 9.624 25.228 9.624 34.852 0L256 296.853l29.528 29.528c9.624 9.624 25.228 9.624 34.852 0 9.624-9.625 9.624-25.229 0-34.853z\"\n      ></path>\n      <g>\n        <path d=\"M437.02 74.981C388.591 26.552 324.434 0 256.035 0c-1.06 0-2.132.006-3.193.02-68.678.828-132.736 28.217-180.376 77.118a7.498 7.498 0 00.139 10.605 7.5 7.5 0 0010.605-.139c44.84-46.027 105.147-71.806 169.812-72.587 65.506-.771 127.093 24.272 173.392 70.569 46.297 46.298 71.359 107.876 70.569 173.391-.78 64.621-26.529 124.9-72.504 169.732-46.016 44.871-106.987 69.078-171.697 68.269-38.366-.502-74.956-9.766-108.752-27.533a7.512 7.512 0 00-5.056-.696l-114.23 24.398c-2.382.513-3.972-.771-4.546-1.344-.574-.574-1.853-2.165-1.344-4.546l24.398-114.23a7.504 7.504 0 00-.696-5.057c-17.767-33.796-27.03-70.385-27.533-108.752-.688-52.544 15.087-102.61 45.622-144.787a7.501 7.501 0 00-12.15-8.797C16.055 150.445-.706 203.62.024 259.415c.522 39.838 9.94 77.878 27.997 113.111L4.184 484.125A19.892 19.892 0 009.59 502.41a19.902 19.902 0 0018.286 5.407l111.598-23.837c35.233 18.058 73.273 27.476 113.112 27.996 1.166.016 2.32.023 3.484.023 67.413-.003 130.824-25.689 178.881-72.551 48.846-47.632 76.203-111.66 77.031-180.29.839-69.588-25.783-134.998-74.962-184.177z\"></path>\n        <path d=\"M273.698 433.695a7.5 7.5 0 001.468 14.928c47.572-4.679 91.58-26.789 123.917-62.258 32.555-35.709 50.484-82.007 50.484-130.364 0-44.422-14.647-86.207-42.359-120.839a7.5 7.5 0 10-11.712 9.371c25.561 31.944 39.071 70.488 39.071 111.468 0 44.61-16.539 87.318-46.569 120.258-29.834 32.723-70.427 53.12-114.3 57.436zm107.178-325.58C346.025 78.657 301.677 62.434 256 62.434 149.268 62.434 62.435 149.267 62.435 256c0 48.462 17.997 94.833 50.676 130.57 32.466 35.506 76.617 57.562 124.321 62.104a7.502 7.502 0 008.178-6.755 7.5 7.5 0 00-6.755-8.177c-43.996-4.19-84.721-24.538-114.673-57.295C94.036 343.483 77.435 300.706 77.435 256c0-98.462 80.104-178.566 178.566-178.566 42.136 0 83.045 14.964 115.193 42.136a7.497 7.497 0 0010.569-.886 7.5 7.5 0 00-.887-10.569z\"></path>\n        <path d=\"M186.317 331.684c12.533 12.531 32.926 12.531 45.459 0L256 307.459l24.224 24.225c6.267 6.266 14.498 9.399 22.729 9.399s16.463-3.134 22.729-9.399c12.533-12.533 12.533-32.927 0-45.46L301.459 262l24.224-24.224c12.533-12.533 12.533-32.927 0-45.46-12.533-12.531-32.926-12.531-45.458 0L256 216.541l-24.225-24.225c-12.533-12.531-32.925-12.532-45.458 0-12.533 12.533-12.533 32.927 0 45.46L210.541 262l-24.224 24.224c-12.533 12.533-12.533 32.927 0 45.46zm10.607-34.853l29.528-29.527a7.5 7.5 0 000-10.608l-29.528-29.527c-6.685-6.685-6.685-17.561 0-24.245 6.685-6.686 17.562-6.685 24.246 0l29.528 29.527a7.501 7.501 0 0010.606 0l29.528-29.527c6.685-6.686 17.561-6.686 24.246 0 6.685 6.685 6.685 17.561 0 24.245l-29.528 29.527a7.5 7.5 0 000 10.608l29.528 29.527c6.685 6.685 6.685 17.561 0 24.245-6.685 6.685-17.562 6.685-24.246 0l-29.527-29.527c-1.464-1.464-3.384-2.196-5.303-2.196s-3.839.732-5.303 2.196l-29.527 29.527c-6.685 6.685-17.562 6.685-24.246 0s-6.687-17.56-.002-24.245zm-30.165-110.196a7.5 7.5 0 007.5-7.5v-4.492h4.493c4.142 0 7.5-3.357 7.5-7.5s-3.358-7.5-7.5-7.5h-4.493v-4.493c0-4.143-3.358-7.5-7.5-7.5s-7.5 3.357-7.5 7.5v4.493h-4.493c-4.142 0-7.5 3.357-7.5 7.5s3.358 7.5 7.5 7.5h4.493v4.492a7.5 7.5 0 007.5 7.5z\"></path>\n      </g>\n    </svg>\n  );\n}\n","import { orderBy } from 'lodash';\nimport { Attribute, SignKey } from './types';\n\nexport const ATTRIBUTES = {\n  alive: { id: 'alive', name: { en: 'Alive', pt: 'Vivo' } },\n  beautiful: { id: 'beautiful', name: { en: 'Beautiful', pt: 'Bonito' } },\n  big: { id: 'big', name: { en: 'Big', pt: 'Grande' } },\n  bright: { id: 'bright', name: { en: 'Bright', pt: 'Brilho' } },\n  clothes: { id: 'clothes', name: { en: 'Clothes', pt: 'Vestimenta' } },\n  danger: { id: 'danger', name: { en: 'Danger', pt: 'Perigo' } },\n  defense: { id: 'defense', name: { en: 'Defense', pt: 'Defesa' } },\n  fast: { id: 'fast', name: { en: 'Fast', pt: 'Rápido' } },\n  flat: { id: 'flat', name: { en: 'Flat', pt: 'Plano' } }, // New\n  flight: { id: 'flight', name: { en: 'Flight', pt: 'Vôo' } },\n  food: { id: 'food', name: { en: 'Food', pt: 'Comida' } },\n  heavy: { id: 'heavy', name: { en: 'Heavy', pt: 'Pesado' } },\n  human: { id: 'human', name: { en: 'Human', pt: 'Humano' } },\n  knowledge: { id: 'knowledge', name: { en: 'Knowledge', pt: 'Conhecimento' } },\n  liquid: { id: 'liquid', name: { en: 'Liquid', pt: 'Líquido' } },\n  long: { id: 'long', name: { en: 'Long', pt: 'Longo' } },\n  machine: { id: 'machine', name: { en: 'Machine', pt: 'Máquina' } }, // New\n  metal: { id: 'metal', name: { en: 'Metal', pt: 'Metal' } },\n  odor: { id: 'odor', name: { en: 'Odor', pt: 'Cheiro' } }, // New\n  old: { id: 'old', name: { en: 'Old', pt: 'Velho' } }, // New\n  plant: { id: 'plant', name: { en: 'Plant', pt: 'Planta' } },\n  power: { id: 'power', name: { en: 'Power', pt: 'Força' } },\n  round: { id: 'round', name: { en: 'Round', pt: 'Redondo' } },\n  sharp: { id: 'sharp', name: { en: 'Sharp', pt: 'Afiado' } },\n  // singular: { id: 'singular', name: { en: 'Singular', pt: 'Singular' } }, // deprecated\n  soft: { id: 'soft', name: { en: 'Soft', pt: 'Mole' } }, // Newer\n  solid: { id: 'solid', name: { en: 'Solid', pt: 'Sólido' } }, // Newer\n  sound: { id: 'sound', name: { en: 'Sound', pt: 'Som' } }, // New\n  tool: { id: 'tool', name: { en: 'Tool', pt: 'Ferramenta' } },\n  valuable: { id: 'valuable', name: { en: 'Valuable', pt: 'Valioso' } },\n  warm: { id: 'warm', name: { en: 'Warm', pt: 'Quente' } },\n  weapon: { id: 'weapon', name: { en: 'Weapon', pt: 'Arma' } },\n  // hard: { id: 'hard', name: { en: 'Hard', pt: 'Duro' } }, // deprecated\n  holdable: { id: 'holdable', name: { en: 'Holdable', pt: 'Segurável' } }, // Newest\n  personal: { id: 'personal', name: { en: 'Personal', pt: 'Pessoal' } }, // Newest\n  multiple: { id: 'multiple', name: { en: 'Multiple', pt: 'Múltiplo' } }, // Newest\n  fragile: { id: 'fragile', name: { en: 'Fragile', pt: 'Frágil' } }, // Newest\n  toy: { id: 'toy', name: { en: 'Toy', pt: 'Brinquedo' } }, // Newest\n};\n\nexport const FIRST_ID = '1';\nexport const LAST_ID = '512';\n\nexport const SORTED_ATTRIBUTES = orderBy(Object.values(ATTRIBUTES), ['name.en'], ['asc']);\n\nexport const ATTRIBUTE_SIGN_DICT = SORTED_ATTRIBUTES.reduce(\n  (acc: Record<string, SignKey>, attribute, index) => {\n    acc[attribute.id] = String(index);\n    return acc;\n  },\n  {}\n);\n\nexport const SIGN_ATTRIBUTE_DICT = SORTED_ATTRIBUTES.reduce(\n  (acc: Record<string, Attribute>, attribute, index) => {\n    acc[index] = attribute.id as Attribute;\n    return acc;\n  },\n  {}\n);\n\nexport const SIGNS: Sign[] = SORTED_ATTRIBUTES.map((attribute, index) => ({\n  key: attribute.id,\n  attribute: attribute.name,\n  signId: String(index),\n}));\n","import { mean } from 'lodash';\nimport { ATTRIBUTES, FIRST_ID } from './constants';\nimport type { AlienItem, AlienItemDict, Attribute, Weight, FirebaseAlienItemDict } from './types';\n\nexport const findLatestId = (data: AlienItemDict) => {\n  const orderedNumberedIds = Object.keys(data)\n    .map(Number)\n    .sort((a, b) => a - b);\n\n  if (orderedNumberedIds.length < 1) {\n    return FIRST_ID;\n  }\n\n  for (let i = 1; i < orderedNumberedIds.length; i++) {\n    if (orderedNumberedIds[i] - orderedNumberedIds[i - 1] !== 1) {\n      return orderedNumberedIds[i];\n    }\n  }\n  return orderedNumberedIds[orderedNumberedIds.length - 1];\n};\n\nexport const findFirstIncomplete = (data: AlienItemDict) => {\n  const orderedNumberedIds = Object.keys(data)\n    .map(Number)\n    .sort((a, b) => a - b);\n\n  for (let i = 0; i < orderedNumberedIds.length; i++) {\n    const id = orderedNumberedIds[i];\n    const item = data[id];\n    if (Object.values(item.attributes).includes(0)) {\n      return id;\n    }\n  }\n\n  if (orderedNumberedIds.length < 1) {\n    return FIRST_ID;\n  }\n\n  for (let i = 1; i < orderedNumberedIds.length; i++) {\n    if (orderedNumberedIds[i] - orderedNumberedIds[i - 1] !== 1) {\n      return orderedNumberedIds[i];\n    }\n  }\n  return orderedNumberedIds[orderedNumberedIds.length - 1];\n};\n\nexport function countNonZeroAttributes(item: AlienItem): number {\n  let count = 0;\n  for (const weight of Object.values(item.attributes)) {\n    if (weight !== 0) {\n      count++;\n    }\n  }\n  return count;\n}\n\nexport function validateItem(item: AlienItem, allAttributes: Record<Attribute, Weight>) {\n  const attributes = Object.values({ ...allAttributes, ...item.attributes });\n  const hasName = Boolean(item.name);\n  const hasFive = attributes.includes(5);\n  const hasNoZeroes = !attributes.includes(0);\n  const hasPositive = attributes.some((v) => v > 1);\n\n  return {\n    hasName,\n    hasFive,\n    hasNoZeroes,\n    hasPositive,\n  };\n}\n\nexport const getStats = (data: AlienItemDict) => {\n  const attributeCounts: Record<string, Record<string, number>> = {};\n  const positiveAttributes: number[] = [];\n  const negativeAttributes: number[] = [];\n  let positiveFives = 0;\n  let negativeFives = 0;\n\n  Object.values(data).forEach((item, index) => {\n    positiveAttributes[index] = 0;\n    negativeAttributes[index] = 0;\n    let has5 = false;\n    let hasMinus5 = false;\n    Object.entries(item.attributes).forEach(([attribute, weight]) => {\n      // Count attributes\n      if (attributeCounts[attribute] === undefined) {\n        attributeCounts[attribute] = {\n          '-5': 0,\n          '-3': 0,\n          '-1': 0,\n          '0': 0,\n          '1': 0,\n          3: 0,\n          5: 0,\n        };\n      }\n      attributeCounts[attribute][String(weight)] += 1;\n\n      // Count weights\n      if (weight > 0) {\n        positiveAttributes[index] += weight;\n      } else {\n        negativeAttributes[index] += weight;\n      }\n\n      if (weight === 5 && !has5) {\n        positiveFives += 1;\n        has5 = true;\n      }\n\n      if (weight === -1 && !hasMinus5) {\n        negativeFives += 1;\n        hasMinus5 = true;\n      }\n    });\n  });\n\n  const totalItems = Object.keys(data).length;\n\n  return {\n    attributeCounts,\n    positiveFives: Math.round((positiveFives * 100) / totalItems),\n    negativeFives: Math.round((negativeFives * 100) / totalItems),\n    positiveAttributesMean: mean(positiveAttributes),\n    negativeAttributesMean: mean(negativeAttributes),\n    total: totalItems,\n  };\n};\n\nexport function replaceAttributes(newData: Record<string, Record<string, Record<string, number>>>) {\n  Object.values(newData).forEach((item) => {\n    item.attributes.hard = item.attributes.solid;\n    delete item.attributes.solid;\n  });\n}\n\n/**\n * Generates a new items with attributes in their initial states\n */\nexport const initialAttributeState = Object.keys(ATTRIBUTES).reduce((acc: any, key) => {\n  acc[key] = 0;\n  return acc;\n}, {}) as Record<Attribute, Weight>;\n\n/**\n * Checks if an item matches the criteria\n * @param item\n * @param attribute\n * @param criteria\n * @returns\n */\nexport function checkCriteria(item: AlienItem, attribute: Attribute, criteria: string) {\n  if (criteria === '>0') {\n    return item.attributes[attribute] > 0;\n  }\n  if (criteria === '>1') {\n    return item.attributes[attribute] > 1;\n  }\n\n  if (criteria === '<0') {\n    return item.attributes[attribute] < 0;\n  }\n  if (criteria === '<1') {\n    return item.attributes[attribute] < 1;\n  }\n\n  if (criteria === '5') {\n    return item.attributes[attribute] === 5;\n  }\n\n  if (criteria === '3') {\n    return item.attributes[attribute] === 3;\n  }\n\n  if (criteria === '1') {\n    return item.attributes[attribute] === 1;\n  }\n\n  if (criteria === '-1') {\n    return item.attributes[attribute] === -1;\n  }\n\n  if (criteria === '-3') {\n    return item.attributes[attribute] === -3;\n  }\n\n  if (criteria === '-5') {\n    return item.attributes[attribute] === -5;\n  }\n\n  if (criteria === '0') {\n    return item.attributes[attribute] === 0;\n  }\n\n  return true;\n}\n\nexport function downloadObjectAsFile(obj: PlainObject, filename: string): void {\n  const blob = new Blob([JSON.stringify(obj, null, 2)], { type: 'application/json' });\n  const anchorElement = document.createElement('a');\n  anchorElement.href = window.URL.createObjectURL(blob);\n  anchorElement.download = filename;\n  anchorElement.click();\n  window.URL.revokeObjectURL(anchorElement.href);\n}\n\nexport const prepareFirebaseAlienItemDict = (data: AlienItemDict): FirebaseAlienItemDict => {\n  const newData: FirebaseAlienItemDict = {};\n  Object.values(data).forEach((item) => {\n    newData[item.id] = {\n      id: item.id,\n      name: item.name,\n      attributesStr: JSON.stringify(item.attributes),\n    };\n    if (item.nsfw) {\n      newData[item.id].nsfw = true;\n    }\n    if (item.categories) {\n      newData[item.id].categories = item.categories;\n    }\n  });\n  return newData;\n};\n\nexport const parseFirebaseAlienItemDict = (data: FirebaseAlienItemDict): AlienItemDict => {\n  const newData: AlienItemDict = {};\n  Object.values(data).forEach((item) => {\n    newData[item.id] = {\n      id: item.id,\n      name: item.name,\n      attributes: item.attributes ? item.attributes : JSON.parse(item.attributesStr ?? '{}'),\n      nsfw: item.nsfw,\n      categories: item.categories,\n    };\n  });\n  return newData;\n};\n","import { App } from 'antd';\nimport { doc, getDoc, setDoc } from 'firebase/firestore';\nimport { useTDBaseUrl } from 'hooks/useTDBaseUrl';\nimport { cloneDeep, merge } from 'lodash';\nimport { createContext, ReactNode, useContext, useState } from 'react';\nimport { QueryKey, UseMutateFunction, useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { firestore } from 'services/firebase';\n\nimport {\n  findFirstIncomplete,\n  initialAttributeState,\n  parseFirebaseAlienItemDict,\n  prepareFirebaseAlienItemDict,\n} from './helpers';\n\nimport type { AlienItemDict, FirebaseAlienItemDict } from './types';\n\nexport type ClassifierContextType = {\n  isLoading: boolean;\n  isSuccess: boolean;\n  isError: boolean;\n  isSaving: boolean;\n  data: AlienItemDict;\n  save: UseMutateFunction<FirebaseAlienItemDict, unknown, AlienItemDict, unknown>;\n  isDirty: boolean;\n  reload: () => void;\n  itemUtils: {\n    latestId: string;\n    create: (itemId: string) => void;\n    updateNameEN: (itemId: string, name: string) => void;\n    updateNamePT: (itemId: string, name: string) => void;\n    updateAttributeValue: (itemId: string, attributeId: string, value: number) => void;\n    updateNSFW: (itemId: string, value: boolean) => void;\n  };\n};\n\nexport const ClassifierContext = createContext<ClassifierContextType>({\n  isLoading: false,\n  isSuccess: false,\n  isError: false,\n  isSaving: false,\n  data: {},\n  save: () => {},\n  isDirty: false,\n  reload: () => {},\n  itemUtils: {\n    latestId: '',\n    create: () => {},\n    updateNameEN: () => {},\n    updateNamePT: () => {},\n    updateAttributeValue: () => {},\n    updateNSFW: () => {},\n  },\n});\n\ntype ClassifierProviderProps = {\n  children: ReactNode;\n};\n\nexport const ClassifierProvider = ({ children }: ClassifierProviderProps) => {\n  const queryClient = useQueryClient();\n  const { notification } = App.useApp();\n  const queryKey = ['data/alienItems'];\n  const [data, setData] = useState<AlienItemDict>({});\n  const [isDirty, setIsDirty] = useState(false);\n\n  const baseUrl = useTDBaseUrl('tdr');\n\n  const {\n    isLoading: isLoadingTR,\n    isError: isTRError,\n    data: trData,\n    isSuccess: isSuccessTR,\n  } = useQuery<AlienItemDict>({\n    queryKey: ['tdr', 'alienItems'],\n    queryFn: async () => {\n      const response = await fetch(`${baseUrl}/alien-items.json`);\n      return await response.json();\n    },\n  });\n\n  const {\n    // data: firebaseData = {},\n    isLoading: isLoadingFirestore,\n    isSuccess,\n    isError,\n    refetch: fetchItems,\n  } = useQuery<any, unknown, AlienItemDict, QueryKey>({\n    queryKey,\n    queryFn: async () => {\n      const docRef = doc(firestore, 'data/alienItems');\n      const querySnapshot = await getDoc(docRef);\n      const firebaseData = querySnapshot.data() ?? {};\n      return parseFirebaseAlienItemDict(firebaseData);\n    },\n    enabled: isSuccessTR,\n    onSuccess: (response) => {\n      notification.info({\n        message: 'Data loaded',\n        placement: 'bottomLeft',\n      });\n      const merged = merge({}, trData, response) as any;\n      // Remove hard\n      Object.values(merged).forEach((item: any) => {\n        if (!item.attributes.soft) {\n          const softVal = (item.attributes.hard ?? 0) * -1;\n          item.attributes.soft = softVal;\n        }\n        if (!item.attributes.solid) {\n          item.attributes.solid = 1;\n        }\n        if (!item.attributes.multiple) {\n          item.attributes.multiple = 0;\n        }\n        if (!item.attributes.fragile) {\n          item.attributes.fragile = 0;\n        }\n        if (!item.attributes.personal) {\n          item.attributes.personal = 0;\n        }\n        if (!item.attributes.holdable) {\n          item.attributes.holdable = 0;\n        }\n        if (!item.attributes.toy) {\n          item.attributes.toy = 0;\n        }\n\n        delete item.attributes.singular;\n        delete item.attributes.hard;\n        setData(merged);\n        if (typeof item.name === 'string') {\n          item.name = {\n            en: item.name,\n            pt: '',\n          };\n        }\n      });\n      // Make it dual language\n      setIsDirty(false);\n    },\n    onError: () => {\n      notification.error({\n        message: 'Error loading data',\n        placement: 'bottomLeft',\n      });\n    },\n  });\n\n  const {\n    isLoading: isMutating,\n    isError: isMutationError,\n    isSuccess: isSaved,\n    mutate,\n  } = useMutation<FirebaseAlienItemDict, unknown, AlienItemDict, unknown>({\n    mutationKey: queryKey,\n    mutationFn: async (newData: AlienItemDict) => {\n      const docRef = doc(firestore, 'data/alienItems');\n      const stringifiedData = prepareFirebaseAlienItemDict(newData);\n      await setDoc(docRef, stringifiedData);\n      return stringifiedData;\n    },\n    onSuccess: (_, variables) => {\n      notification.success({\n        message: 'Saved',\n        placement: 'bottomLeft',\n      });\n      queryClient.setQueryData(queryKey, variables);\n      setIsDirty(false);\n    },\n  });\n\n  const latestId = String(findFirstIncomplete(data));\n\n  const createNewItem = (itemId: string) => {\n    setIsDirty(true);\n    setData((prevData) => ({\n      ...prevData,\n      [itemId]: {\n        id: itemId,\n        name: {\n          en: '',\n          pt: '',\n        },\n        attributes: cloneDeep(initialAttributeState),\n      },\n    }));\n  };\n\n  const updateItemNameEN = (itemId: string, name: string) => {\n    setIsDirty(true);\n    setData((prevData) => ({\n      ...prevData,\n      [itemId]: {\n        ...prevData[itemId],\n        name: {\n          pt: prevData[itemId].name.pt ?? '',\n          en: name,\n        },\n      },\n    }));\n  };\n\n  const updateItemNamePT = (itemId: string, name: string) => {\n    setIsDirty(true);\n    setData((prevData) => ({\n      ...prevData,\n      [itemId]: {\n        ...prevData[itemId],\n        name: {\n          en: prevData[itemId].name.en ?? '',\n          pt: name,\n        },\n      },\n    }));\n  };\n\n  const updateItemAttributeValue = (itemId: string, attributeId: string, value: number) => {\n    setIsDirty(true);\n    setData((prevData) => ({\n      ...prevData,\n      [itemId]: {\n        ...prevData[itemId],\n        attributes: {\n          ...prevData[itemId].attributes,\n          [attributeId]: value,\n        },\n      },\n    }));\n  };\n\n  const updateNSFW = (itemId: string, nsfw: boolean) => {\n    setIsDirty(true);\n    setData((prevData) => {\n      const copy = cloneDeep(prevData);\n      if (nsfw) {\n        copy[itemId].nsfw = true;\n      } else {\n        delete copy[itemId].nsfw;\n      }\n      return copy;\n    });\n  };\n\n  return (\n    <ClassifierContext.Provider\n      value={{\n        isLoading: isLoadingTR || isLoadingFirestore,\n        isError: isTRError || isError || isMutationError,\n        isSuccess: isSuccess || isSaved,\n        isSaving: isMutating,\n        data,\n        save: mutate,\n        isDirty,\n        reload: fetchItems,\n        itemUtils: {\n          latestId,\n          create: createNewItem,\n          updateNameEN: updateItemNameEN,\n          updateNamePT: updateItemNamePT,\n          updateAttributeValue: updateItemAttributeValue,\n          updateNSFW,\n        },\n      }}\n    >\n      {children}\n    </ClassifierContext.Provider>\n  );\n};\n\nexport const useClassifier = () => useContext(ClassifierContext);\n","import { Badge, Space } from 'antd';\nimport { Attribute } from './types';\nimport { SignCard } from 'components/cards/SignCard';\nimport { ATTRIBUTES, ATTRIBUTE_SIGN_DICT } from './constants';\nimport { DualTranslate } from 'components/language';\nimport clsx from 'clsx';\n\ntype SignProps = {\n  attribute: Attribute;\n  value?: number;\n  very?: boolean;\n  not?: boolean;\n  hideName?: boolean;\n};\n\nconst colors: Record<string, string> = {\n  '-5': 'red',\n  '-3': 'orange',\n  '-1': 'yellow',\n  0: 'gray',\n  1: 'green',\n  3: 'cyan',\n  5: 'blue',\n};\n\nexport function Sign({ attribute, value, very, not, hideName }: SignProps) {\n  return (\n    <Space size=\"small\" direction=\"vertical\" align=\"center\" className=\"sign\">\n      <SignCard\n        id={ATTRIBUTE_SIGN_DICT[attribute]}\n        width={35}\n        className={clsx(very && 'sign-attribute__very', not && 'sign-attribute__not')}\n      />\n      {!hideName && (\n        <span className=\"sign-attribute\">\n          <DualTranslate>{ATTRIBUTES[attribute].name}</DualTranslate>\n        </span>\n      )}\n      {value !== undefined && (\n        <Badge\n          className=\"sign-attribute\"\n          count={value}\n          size=\"small\"\n          color={colors?.[String(value)] ?? 'gray'}\n        />\n      )}\n    </Space>\n  );\n}\n","import { Card, Divider, Select, Space, Statistic } from 'antd';\n\nimport { ATTRIBUTES } from './constants';\nimport { getStats } from './helpers';\n\nimport { orderBy } from 'lodash';\nimport { useMemo, useState } from 'react';\nimport { useClassifier } from './ClassifierContext';\nimport { Sign } from './Sign';\nimport { Attribute } from './types';\n\nexport function StatsCard() {\n  const { data } = useClassifier();\n  // Count 5s and -5s among objects\n  // Counts attribute values for -5 -3 -1 0 1 3 5\n  // Positive vs Negative\n  const stats = useMemo(() => getStats(data), [data]);\n\n  const [sorting, setSorting] = useState('name');\n\n  const attributeList = useMemo(() => {\n    return orderBy(\n      Object.values(ATTRIBUTES),\n      [\n        (obj) => {\n          if (sorting === 'name') return obj.name.en;\n          const attributes = stats.attributeCounts[obj.id];\n          if (sorting === 'positive-five') return attributes['5'];\n          if (sorting === 'positive') return attributes['5'] + attributes['3'];\n          if (sorting === 'neutral') return attributes['1'] + attributes['-1'];\n          if (sorting === 'negative') return attributes['-5'] + attributes['-3'];\n          if (sorting === 'negative-five') return attributes['-5'];\n          return obj.id;\n        },\n      ],\n      [sorting === 'name' ? 'asc' : 'desc']\n    );\n  }, [stats.attributeCounts, sorting]);\n\n  return (\n    <Space className=\"container classifier\" direction=\"vertical\">\n      <Card title={`Stats`}>\n        <Space wrap size=\"large\">\n          <Statistic title=\"Positive Fives\" value={stats.positiveFives} suffix=\"%\" />\n          <Statistic title=\"Negative Fives\" value={stats.negativeFives} suffix=\"%\" />\n          <Statistic\n            title=\"Positive Attributes Total Average\"\n            value={stats.positiveAttributesMean}\n            precision={1}\n          />\n          <Statistic\n            title=\"Negative Attributes Total Average\"\n            value={stats.negativeAttributesMean}\n            precision={1}\n          />\n\n          <div>\n            <span>Sorting</span>{' '}\n            <Select onChange={(e) => setSorting(e)} value={sorting} size=\"small\" style={{ minWidth: '15ch' }}>\n              <Select.Option value=\"name\">name</Select.Option>\n              <Select.Option value=\"positive-five\">Most Positive Five</Select.Option>\n              <Select.Option value=\"positive\">Most Positive</Select.Option>\n              <Select.Option value=\"neutral\">Most Neutral</Select.Option>\n              <Select.Option value=\"negative\">Most Negative</Select.Option>\n              <Select.Option value=\"negative-five\">Most Negative Five</Select.Option>\n            </Select>\n          </div>\n        </Space>\n        <Divider />\n\n        <Space wrap size=\"small\">\n          {attributeList.map((entry, index) => {\n            const attribute = stats.attributeCounts[entry.id];\n            return (\n              <Card\n                title={\n                  <div>\n                    <div>{`${entry.name.en} - ${entry.name.pt}`}</div>\n                    <Sign attribute={entry.id as Attribute} hideName />\n                  </div>\n                }\n                key={entry.id}\n              >\n                <Statistic\n                  title=\"Positive Five\"\n                  value={(attribute['5'] * 100) / stats.total}\n                  suffix=\"%\"\n                  precision={1}\n                />\n                <Statistic\n                  title=\"Positive\"\n                  value={((attribute['5'] + attribute['3']) * 100) / stats.total}\n                  suffix=\"%\"\n                  precision={1}\n                />\n                <Statistic\n                  title=\"Neutral\"\n                  value={((attribute['-1'] + attribute['1']) * 100) / stats.total}\n                  suffix=\"%\"\n                  precision={1}\n                  className=\"stat\"\n                />\n                <Statistic\n                  title=\"Negative\"\n                  value={((attribute['-5'] + attribute['-3']) * 100) / stats.total}\n                  suffix=\"%\"\n                  precision={1}\n                />\n                <Statistic\n                  title=\"Negative Five\"\n                  value={(attribute['-5'] * 100) / stats.total}\n                  suffix=\"%\"\n                  precision={1}\n                  className=\"stat\"\n                />\n              </Card>\n            );\n          })}\n        </Space>\n      </Card>\n    </Space>\n  );\n}\n","import { useState } from 'react';\nimport { FIRST_ID } from './constants';\n\nexport function useItem(initialItem = FIRST_ID) {\n  const [itemId, setItemId] = useState(initialItem);\n\n  const previousItem = () => {\n    setItemId((cur) => {\n      return String(Number(cur) - 1);\n    });\n  };\n\n  const nextItem = () => {\n    setItemId((cur) => {\n      return String(Number(cur) + 1);\n    });\n  };\n\n  const goTo = (target: number | 'first' | 'last') => {\n    setItemId((cur) => {\n      if (target === 'first') {\n        return FIRST_ID;\n      }\n\n      if (target === 'last') {\n        return initialItem;\n      }\n\n      const curNum = Number(cur);\n      const result = target + curNum;\n      if (result > 0 && result <= Number(initialItem) + 1) {\n        return String(Number(cur) + target);\n      }\n\n      if (target < 0) {\n        return FIRST_ID;\n      }\n\n      return initialItem;\n    });\n  };\n\n  return {\n    itemId,\n    previousItem,\n    nextItem,\n    setItemId,\n    itemNumber: Number(itemId),\n    goTo,\n  };\n}\n","import { Radio, RadioChangeEvent } from 'antd';\n\ntype AttributeLevelRadioGroupProps = {\n  value: number;\n  onChange: (e: RadioChangeEvent) => void;\n};\n\nexport function AttributeLevelRadioGroup({ value, onChange }: AttributeLevelRadioGroupProps) {\n  return (\n    <Radio.Group value={value} onChange={onChange} optionType=\"button\" buttonStyle=\"solid\">\n      <Radio.Button type=\"primary\" value={-5}>\n        -5\n      </Radio.Button>\n      <Radio.Button value={-3}>-3</Radio.Button>\n      <Radio.Button value={-1}>-1</Radio.Button>\n      <Radio.Button\n        value={0}\n        style={{\n          backgroundColor: value === 0 ? 'red' : 'white',\n        }}\n      >\n        0\n      </Radio.Button>\n      <Radio.Button value={1}>1</Radio.Button>\n      <Radio.Button value={3}>3</Radio.Button>\n      <Radio.Button value={5}>5</Radio.Button>\n    </Radio.Group>\n  );\n}\n","import { Badge, Button, Card, FloatButton, Modal, Popconfirm, Select, Space, Tag, Typography } from 'antd';\nimport clsx from 'clsx';\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { get, orderBy } from 'lodash';\nimport { useMemo, useState } from 'react';\n\nimport { ATTRIBUTES } from './constants';\nimport { checkCriteria } from './helpers';\n\nimport type { Attribute, Weight } from './types';\nimport { useClassifier } from './ClassifierContext';\nimport { TransparentButton } from 'components/buttons';\nimport { useItem } from './hooks';\nimport { AttributeLevelRadioGroup } from './AttributeLevelRadioGroup';\nimport { TextHighlight } from 'components/text';\nimport { SaveFilled, SaveOutlined } from '@ant-design/icons';\n\nconst SORTED_ATTRIBUTES = orderBy(Object.values(ATTRIBUTES), ['name.en'], ['asc']);\n\nexport function Grouping() {\n  const { data, isDirty, isSaving, save, itemUtils } = useClassifier();\n  const { itemId, setItemId } = useItem('');\n  const [activeAttribute, setActiveAttribute] = useState(SORTED_ATTRIBUTES[0]?.id ?? 'alive');\n  const [sorting, setSorting] = useState('id');\n  const [criteria, setCriteria] = useState('>1');\n  const [show, setShow] = useState('all');\n\n  const itemsList = useMemo(() => {\n    return orderBy(\n      Object.values(data),\n      [(obj) => (sorting === 'id' ? Number(obj.id) : get(obj, sorting))],\n      ['asc']\n    );\n  }, [data, sorting]);\n\n  const selection: BooleanDictionary = useMemo(() => {\n    return itemsList.reduce((acc: BooleanDictionary, item) => {\n      if (checkCriteria(item, activeAttribute as Attribute, criteria)) {\n        acc[item.id] = true;\n      }\n      return acc;\n    }, {});\n  }, [itemsList, activeAttribute, criteria]);\n\n  const handleOpenItem = (id: string) => {\n    setItemId(id);\n  };\n\n  const markAllAsMinusThree = () => {\n    itemsList.forEach((item) => {\n      if (show === 'selected' && selection[item.id]) {\n        itemUtils.updateAttributeValue(item.id, activeAttribute, -3);\n      }\n    });\n  };\n\n  const activeItem = data[itemId];\n\n  return (\n    <Space className=\"container classifier\" direction=\"vertical\">\n      <Card\n        title=\"Grouping\"\n        extra={\n          <Button\n            type=\"primary\"\n            onClick={() => save(data)}\n            loading={isSaving}\n            disabled={isSaving || !isDirty}\n          >\n            Save\n          </Button>\n        }\n      >\n        {isDirty && (\n          <FloatButton\n            type=\"primary\"\n            onClick={!isSaving ? () => save(data) : () => {}}\n            shape=\"square\"\n            icon={!isSaving ? <SaveFilled /> : <SaveOutlined />}\n            tooltip=\"Save\"\n          />\n        )}\n\n        <Filters\n          selection={selection}\n          activeAttribute={activeAttribute}\n          setActiveAttribute={setActiveAttribute}\n          sorting={sorting}\n          setSorting={setSorting}\n          criteria={criteria}\n          setCriteria={setCriteria}\n          show={show}\n          setShow={setShow}\n        />\n        {criteria === '0' && show === 'selected' && (\n          <Popconfirm title=\"Are you sure?\" onConfirm={markAllAsMinusThree}>\n            <Button size=\"small\" type=\"primary\">\n              Mark all as -3\n            </Button>\n          </Popconfirm>\n        )}\n\n        <Space wrap>\n          {itemsList.map((item) => {\n            if (show === 'selected' && !selection[item.id]) {\n              return null;\n            }\n\n            if (show === 'non-selected' && selection[item.id]) {\n              return null;\n            }\n\n            return (\n              <TransparentButton\n                key={item.id}\n                className=\"classifier__grouping-item\"\n                onClick={() => handleOpenItem(item.id)}\n              >\n                <Badge count={Number(item.id)} size=\"small\" color=\"cyan\" overflowCount={1000}>\n                  <ItemCard\n                    id={item.id}\n                    width={100}\n                    className={clsx(selection[item.id] && 'classifier__active-item')}\n                  />\n                </Badge>\n                <span className=\"classifier__grouping-name\">\n                  {typeof item?.name?.en === 'string' ? item?.name?.en : '?'}\n                </span>\n              </TransparentButton>\n            );\n          })}\n        </Space>\n\n        <Modal\n          title=\"Item Quick Edit\"\n          open={Boolean(itemId)}\n          onCancel={() => setItemId('')}\n          okButtonProps={{ style: { display: 'none' } }}\n        >\n          {Boolean(activeItem) && (\n            <div className=\"quick-edit-modal\">\n              <ItemCard id={activeItem.id} width={100} />\n              <div>\n                <Typography.Title level={4}>\n                  <TextHighlight>{activeAttribute}</TextHighlight>- {activeItem.name.en || '?'} |{' '}\n                  {activeItem.name.pt || '?'} {activeItem.nsfw && <Tag color=\"magenta\">NSFW</Tag>}\n                </Typography.Title>\n                <AttributeLevelRadioGroup\n                  value={activeItem.attributes[activeAttribute as Attribute]}\n                  onChange={(e) => {\n                    itemUtils.updateAttributeValue(itemId, activeAttribute, e.target.value as Weight);\n                    setItemId('');\n                  }}\n                />\n              </div>\n            </div>\n          )}\n        </Modal>\n      </Card>\n    </Space>\n  );\n}\n\ntype FiltersProps = {\n  selection: BooleanDictionary;\n  activeAttribute: string;\n  setActiveAttribute: (e: string) => void;\n  sorting: string;\n  setSorting: (e: string) => void;\n  criteria: string;\n  setCriteria: (e: string) => void;\n  show: string;\n  setShow: (e: string) => void;\n};\n\nfunction Filters({\n  selection,\n  activeAttribute,\n  setActiveAttribute,\n  sorting,\n  setSorting,\n  criteria,\n  setCriteria,\n  show,\n  setShow,\n}: FiltersProps) {\n  return (\n    <Space wrap className=\"margin\">\n      <Space size=\"small\">\n        <span>Attribute</span>\n        <Select\n          onChange={(e) => setActiveAttribute(e)}\n          value={activeAttribute}\n          size=\"small\"\n          style={{ minWidth: '15ch' }}\n        >\n          {SORTED_ATTRIBUTES.map((entry) => (\n            <Select.Option key={entry.id} value={entry.id}>\n              {entry.name.en}\n            </Select.Option>\n          ))}\n        </Select>\n      </Space>\n\n      <Space size=\"small\">\n        <span>Sorting</span>\n        <Select onChange={(e) => setSorting(e)} value={sorting} size=\"small\" style={{ minWidth: '15ch' }}>\n          <Select.Option value=\"id\">id</Select.Option>\n          <Select.Option value=\"name.en\">name</Select.Option>\n        </Select>\n      </Space>\n\n      <Space size=\"small\">\n        <span>Criteria</span>\n        <Select onChange={(e) => setCriteria(e)} value={criteria} size=\"small\" style={{ minWidth: '15ch' }}>\n          <Select.Option value=\">1\">Very Positive</Select.Option>\n          <Select.Option value=\">0\">Positive</Select.Option>\n          <Select.Option value=\"5\">5</Select.Option>\n          <Select.Option value=\"3\">3</Select.Option>\n          <Select.Option value=\"1\">1</Select.Option>\n          <Select.Option value=\"0\">Zeroes</Select.Option>\n          <Select.Option value=\"-1\">-1</Select.Option>\n          <Select.Option value=\"-3\">-3</Select.Option>\n          <Select.Option value=\"-5\">-5</Select.Option>\n          <Select.Option value=\"<0>\">Negative</Select.Option>\n          <Select.Option value=\"<1>\">Very Negative</Select.Option>\n        </Select>\n      </Space>\n\n      <Space size=\"small\">\n        <span>Show</span>\n        <Select onChange={(e) => setShow(e)} value={show} size=\"small\" style={{ minWidth: '15ch' }}>\n          <Select.Option value=\"all\">All</Select.Option>\n          <Select.Option value=\"selected\">Selected Only</Select.Option>\n          <Select.Option value=\"non-selected\">Non-Selected Only</Select.Option>\n        </Select>\n      </Space>\n\n      <Space size=\"small\">\n        <span>Selected</span>\n        <Badge count={Object.keys(selection).length} color=\"cyan\" overflowCount={1000} />\n      </Space>\n    </Space>\n  );\n}\n","import { Button, Divider, Space } from 'antd';\n\nimport { FIRST_ID, LAST_ID } from './constants';\n\nimport type { AlienItemDict } from './types';\nimport { downloadObjectAsFile } from './helpers';\nimport { ClassifierContextType } from './ClassifierContext';\n\ntype ControlsProps = {\n  itemId: string;\n  itemNumber: number;\n  previousItem: () => void;\n  nextItem: () => void;\n  goTo: (target: number | 'first' | 'last') => void;\n  isSaving: boolean;\n  save: ClassifierContextType['save'];\n  latestId: string;\n  data: AlienItemDict;\n  isDirty: boolean;\n};\n\nexport function Controls({\n  itemId,\n  itemNumber,\n  previousItem,\n  nextItem,\n  goTo,\n  save,\n  isSaving,\n  data,\n  latestId,\n  isDirty,\n}: ControlsProps) {\n  return (\n    <Space className=\"classifier__navigation\" wrap>\n      <Space wrap>\n        <Button type=\"primary\" onClick={() => save(data)} loading={isSaving} disabled={isSaving || !isDirty}>\n          Save\n        </Button>\n      </Space>\n      <Space wrap>\n        <Button onClick={() => goTo('first')} disabled={itemId === FIRST_ID}>\n          First\n        </Button>\n        <Button onClick={() => goTo(-10)} disabled={itemNumber <= 10}>\n          Previous 10\n        </Button>\n        <Button onClick={previousItem} disabled={itemId === FIRST_ID}>\n          Previous\n        </Button>\n        <Divider type=\"vertical\" />\n        <Button onClick={nextItem} disabled={itemId === LAST_ID}>\n          Next\n        </Button>\n        <Button onClick={() => goTo(10)} disabled={itemNumber >= Number(LAST_ID) - 10}>\n          Next 10\n        </Button>\n        <Button onClick={() => goTo('last')} disabled={itemNumber >= Number(latestId) - 1}>\n          Latest\n        </Button>\n      </Space>\n      <Space wrap>\n        <Button\n          onClick={() => downloadObjectAsFile(data, 'alien-items')}\n          loading={isSaving}\n          disabled={isSaving}\n        >\n          Download JSON\n        </Button>\n      </Space>\n    </Space>\n  );\n}\n","import { removeDuplicates, shuffle } from 'utils/helpers';\nimport { AlienItem, AlienItemDict, AlienSignKnowledge, Attribute, ItemId, SignKey } from './types';\n\n/**\n * Generates the Alien response when a player asks about a set of items\n * @param currentInquiry\n * @param store\n * @param signs\n * @returns the attributes related to the set of items\n */\nexport const determineAlienResponse = (\n  currentInquiry: ItemId[],\n  botAlienItemKnowledge: AlienItemDict,\n  botAlienSignKnowledge: AlienSignKnowledge,\n  signs: Sign[]\n) => {\n  // Calculate total weight of attributes in current inquiry\n  const totalWeights = calculateTotalWeights(currentInquiry, botAlienItemKnowledge);\n\n  const sortedAttributes = Object.entries(totalWeights)\n    // Sort counts by total weight\n    .sort(([, weightA], [, weightB]) => weightB - weightA)\n    // Remove any attribute that could be negative for any item\n    .filter(([attribute]) => {\n      return currentInquiry.every(\n        (itemId) => botAlienItemKnowledge[itemId].attributes[attribute as Attribute] > 0\n      );\n    })\n    // Get attribute name only\n    .map(([attribute]) => attribute);\n\n  // Filter only attributes that will be new to players, however, if only one item, return the best one\n  let uniqueMatches =\n    currentInquiry.length > 1 ? getArrayUniqueness(sortedAttributes, Object.keys(botAlienSignKnowledge)) : [];\n\n  let bestMatch = uniqueMatches?.[0] ?? sortedAttributes[0];\n\n  let matchingSign = signs.find((sign) => sign.key === bestMatch);\n\n  // Save that the humans know about this sign now\n  if (matchingSign?.key) {\n    if (botAlienSignKnowledge[matchingSign.key] === undefined) {\n      botAlienSignKnowledge[matchingSign.key] = [];\n    }\n\n    botAlienSignKnowledge[matchingSign.key] = [...botAlienSignKnowledge[matchingSign.key], ...currentInquiry];\n  }\n\n  let result = matchingSign?.signId ?? '';\n\n  if (result) {\n    return result;\n  }\n\n  // If no positive attribute is found, try the most known negative\n  const sortedAttributesReverse = Object.entries(totalWeights)\n    // Sort counts by total weight\n    .sort(([, weightA], [, weightB]) => weightA - weightB)\n    // Remove any attribute that could be negative for any item\n    .filter(([attribute]) => {\n      return currentInquiry.every(\n        (itemId) => botAlienItemKnowledge[itemId].attributes[attribute as Attribute] < 0\n      );\n    })\n    // Get attribute name only\n    .map(([attribute]) => attribute);\n\n  // Filter only attributes that will be new to players, however, if only one item, return the best one\n  uniqueMatches =\n    currentInquiry.length > 1\n      ? getArrayUniqueness(sortedAttributesReverse, Object.keys(botAlienSignKnowledge))\n      : [];\n\n  bestMatch = uniqueMatches?.[0] ?? sortedAttributesReverse[0];\n\n  matchingSign = signs.find((sign) => sign.key === bestMatch);\n\n  result = matchingSign?.signId ?? '';\n\n  if (result) {\n    return result;\n  }\n\n  // If still there's no good icon, respond with the best one regardless if every one is positive\n  const sortedAttributesAny = Object.entries(totalWeights)\n    // Sort counts by total weight\n    .sort(([, weightA], [, weightB]) => weightA - weightB)\n    // Get attribute name only\n    .map(([attribute]) => attribute);\n  bestMatch = sortedAttributesAny[0];\n\n  matchingSign = signs.find((sign) => sign.key === bestMatch);\n\n  return matchingSign?.signId ?? '?';\n};\n\n/**\n * Calculates and returns a list of attributes sorted by priority in a inquiry response\n * @param currentInquiry\n * @param botAlienItemKnowledge\n * @returns\n */\nexport const determineAttributePriorityResponse = (\n  currentInquiry: ItemId[],\n  botAlienItemKnowledge: AlienItemDict\n) => {\n  // Calculate total weight of attributes in current inquiry\n  const totalWeights = calculateTotalWeights(currentInquiry, botAlienItemKnowledge);\n\n  const PRIORITY_ORDER: Attribute[] = [\n    'food',\n    'weapon',\n    'plant',\n    'valuable',\n    'liquid',\n    'clothes',\n    'beautiful',\n    'sharp',\n    'human',\n    'flight',\n    'alive',\n    'power',\n    'warm',\n    'sound',\n    'machine',\n    'knowledge',\n    'bright',\n    'round',\n    'danger',\n    'defense',\n    'fast',\n    'toy',\n    'tool',\n    'long',\n    'metal',\n    'odor',\n    'old',\n    'fragile',\n    'multiple',\n    'flat',\n    'soft',\n    'holdable',\n    'personal',\n    'heavy',\n    'big',\n    'solid',\n  ];\n\n  //\n  const sortedAttributes = Object.entries(totalWeights)\n    // Sort counts by total weight\n    .sort(([attributeA, weightA], [attributeB, weightB]) => {\n      if (weightA === weightB) {\n        const indexA = PRIORITY_ORDER.indexOf(attributeA as Attribute);\n        const indexB = PRIORITY_ORDER.indexOf(attributeB as Attribute);\n\n        return indexA - indexB;\n      }\n\n      return weightB - weightA;\n    })\n    // Remove any attribute that could be negative for any item\n    .filter(([attribute]) => {\n      return currentInquiry.every(\n        (itemId) =>\n          botAlienItemKnowledge[itemId].attributes[attribute as Attribute] > 1 ||\n          botAlienItemKnowledge[itemId].attributes[attribute as Attribute] === -5\n      );\n    })\n    // Get attribute name only\n    .map(([attribute, value]) => ({\n      attribute: attribute as Attribute,\n      value: value as number,\n    }));\n\n  return sortedAttributes;\n};\n\n/**\n * Calculate the total eights for a set of items for each attribute\n * @param itemIds\n * @param botAlienItemKnowledge\n * @returns\n */\nexport const calculateTotalWeights = (\n  itemIds: ItemId[],\n  botAlienItemKnowledge: Record<string, AlienItem>\n) => {\n  const totalWeights: NumberDictionary = {};\n\n  itemIds.forEach((itemId) => {\n    const item = botAlienItemKnowledge[itemId];\n    Object.entries(item.attributes).forEach(([attribute, weight]) => {\n      if (totalWeights[attribute] === undefined) {\n        totalWeights[attribute] = 0;\n      }\n      totalWeights[attribute] += weight;\n    });\n  });\n\n  return totalWeights;\n};\n\n/**\n * Calculates the usage of attributes for a list of items. It prioritizes 5s and -5s\n * @param items\n * @returns\n */\nexport const calculateAttributeUsage = (items: AlienItem[]) => {\n  const fiveUsage: NumberDictionary = {};\n  const totalUsage: NumberDictionary = {};\n\n  items.forEach((item) => {\n    Object.entries(item.attributes).forEach(([attribute, weight]) => {\n      // Count any fives\n      if (weight === 5) {\n        if (fiveUsage[attribute] === undefined) {\n          fiveUsage[attribute] = 5;\n        }\n\n        fiveUsage[attribute] += 1;\n      }\n\n      // Count other weights\n      if (totalUsage[attribute] === undefined) {\n        totalUsage[attribute] = 0;\n      }\n\n      totalUsage[attribute] +=\n        {\n          '-5': 2,\n          '-3': 1,\n          '-1': 0,\n          0: 0,\n          1: 1,\n          3: 2,\n          5: 0,\n        }?.[weight] ?? 0;\n    });\n  });\n\n  const fiveAttributes = Object.entries(fiveUsage)\n    // Sort counts by total count of useful values\n    .sort(([, countA], [, countB]) => countB - countA)\n    // Get attribute name only\n    .map(([attribute]) => attribute);\n\n  const otherAttributes = Object.entries(totalUsage)\n    // Sort counts by total count of useful values\n    .sort(([, countA], [, countB]) => countB - countA)\n    // Get attribute name only\n    .map(([attribute]) => attribute);\n\n  return (\n    removeDuplicates([...fiveAttributes, ...otherAttributes])\n      // Get only the necessary\n      .slice(0, 25)\n  );\n};\n\n/**\n * Determines the alien's request based on the current state of the game.\n * @param store - The store containing the bot's knowledge of the game.\n * @param signs - The list of all available signs.\n * @param  items - The list of all available items.\n * @returns An object containing the alien's request and intention.\n */\nexport function determineAlienRequest(\n  botAlienSignKnowledge: AlienSignKnowledge,\n  botAlienItemKnowledge: AlienItemDict,\n  signs: Sign[],\n  items: Item[]\n) {\n  const itemsWithInformationDict = Object.values(botAlienSignKnowledge).reduce(\n    (acc: NumberDictionary, itemIds) => {\n      itemIds.forEach((itemId) => {\n        if (acc[itemId] === undefined) {\n          acc[itemId] = 0;\n        }\n\n        acc[itemId] += 1;\n      });\n\n      return acc;\n    },\n    {}\n  );\n\n  const itemsWithInformation = getKeysSortedByValue(itemsWithInformationDict);\n\n  const knownSigns = Object.keys(botAlienSignKnowledge);\n\n  // Get all needed items that haven't been offered\n  const neededItemsIds = sortArrayByPriority(\n    items.filter((item) => !item.offered && item.type === 'ITEM').map((e) => e.id),\n    itemsWithInformation\n  );\n\n  const neededItems = neededItemsIds.map((id) => botAlienItemKnowledge[id]);\n\n  // Get all cursed items that haven't been offered\n  const cursedItems = shuffle(items.filter((item) => !item.offered && item.type === 'CURSE'))\n    .map((e) => e.id)\n    .map((id) => botAlienItemKnowledge[id]);\n\n  const bestAttributesDict: string[][] = [];\n\n  neededItems.forEach((neededItem) => {\n    bestAttributesDict.push(sortItemAttributesBySpecificWeight(neededItem, knownSigns));\n  });\n\n  const bestCursedAttributesDict: string[][] = [];\n\n  cursedItems.forEach((cursedItem) => {\n    bestCursedAttributesDict.push(sortItemAttributesBySpecificWeight(cursedItem, knownSigns));\n  });\n\n  const signKeyIdDict = signs.reduce((acc: Record<string, string>, sign) => {\n    acc[sign.key] = sign.signId;\n    acc[`!${sign.key}`] = `!${sign.signId}`;\n    return acc;\n  }, {});\n\n  for (let i = 0; i < bestAttributesDict.length; i++) {\n    const needList = bestAttributesDict[i];\n    const isMatched = bestCursedAttributesDict.some((cursedList) => {\n      return needList.every((attr) => cursedList.includes(attr));\n    });\n\n    if (!isMatched) {\n      return {\n        request: needList.map((attributeKey) => signKeyIdDict[attributeKey]),\n        intention: neededItems[i].id,\n      };\n    }\n  }\n\n  return {\n    request: bestAttributesDict[0].map((attributeKey) => signKeyIdDict[attributeKey]),\n    intention: neededItems[0].id,\n  };\n}\n\n/**\n * Sorts an item's attributes by specific weights and returns a list of up to 5 known attributes,\n * marked with a '!' prefix if they have a negative weight.\n *\n * @param item - The item to sort and filter the attributes of.\n * @param knownSigns - The list of known attributes to filter the result by.\n * @returns The list of up to 5 attributes sorted by weight and filtered by the known attributes.\n */\nfunction sortItemAttributesBySpecificWeight(item: AlienItem, knownSigns: SignKey[]) {\n  const order = [5, 3, -5, 1, -3, -1];\n  const keys = Object.keys(item.attributes);\n\n  // Sort the keys by their values according to the order\n  keys.sort((a, b) => {\n    const valueA = item.attributes[a as Attribute];\n    const valueB = item.attributes[b as Attribute];\n\n    const indexA = order.indexOf(valueA);\n    const indexB = order.indexOf(valueB);\n\n    return indexA - indexB;\n  });\n  // Only include known signs and ignore -1 values\n  return keys\n    .filter((attribute) => knownSigns.includes(attribute) && item.attributes[attribute as Attribute] !== -1)\n    .map((attr) => {\n      const weight = item.attributes[attr as Attribute];\n      if (weight && weight < 0) {\n        return `!${attr}`;\n      } else {\n        return attr;\n      }\n    })\n    .slice(0, 5);\n}\n\nfunction getArrayUniqueness(list: string[], used: string[]) {\n  return list.filter((item) => !used.includes(item));\n}\n\n/**\n * Sorts an array of strings based on a priority list.\n *\n * @param arr The array to be sorted\n * @param priorityList The priority list to use for sorting\n * @returns The sorted array\n */\nfunction sortArrayByPriority(arr: string[], priorityList: string[]): string[] {\n  // Create a new array to store the sorted strings\n  const sortedArr: string[] = [];\n\n  // Loop through the priority list\n  for (let i = 0; i < priorityList.length; i++) {\n    // Loop through the original array to find matching strings\n    for (let j = 0; j < arr.length; j++) {\n      // If the string in the original array matches the current priority string\n      if (arr[j] === priorityList[i]) {\n        // Add it to the sorted array\n        sortedArr.push(arr[j]);\n        // Remove the string from the original array to prevent duplicates\n        arr.splice(j, 1);\n        // Decrement j since we just removed an element\n        j--;\n      }\n    }\n  }\n\n  // Add any remaining strings from the original array to the end of the sorted array\n  sortedArr.push(...arr);\n\n  return sortedArr;\n}\n\n/**\n * Returns a list of sorted keys in a `Record<string, number>` by value,\n * returning the keys in order from largest to smallest value number.\n * @param dict The dictionary to sort.\n * @returns An array of keys sorted by value in descending order.\n */\nfunction getKeysSortedByValue(dict: Record<string, number>): string[] {\n  return Object.keys(dict).sort((a, b) => dict[b] - dict[a]);\n}\n","import { Divider, Input, Space, Switch, Typography } from 'antd';\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { useMemo } from 'react';\n\nimport { determineAttributePriorityResponse } from './bot-utils';\n\nimport type { ItemId, AlienItem } from './types';\nimport { Sign } from './Sign';\n\ntype CurrentItemsProps = {\n  itemId: ItemId;\n  updateNameEN: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  updateNamePT: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  activeItem: AlienItem;\n  updateNSFW: any;\n};\n\nexport function CurrentItem({\n  itemId,\n  updateNameEN,\n  updateNamePT,\n  activeItem,\n  updateNSFW,\n}: CurrentItemsProps) {\n  const attributePriority = useMemo(\n    () => determineAttributePriorityResponse([itemId], { [itemId]: activeItem }),\n    [itemId, activeItem]\n  );\n  return (\n    <Space className=\"classifier__item\" direction=\"vertical\">\n      <Input placeholder=\"Type name\" onChange={updateNameEN} value={activeItem.name.en} />\n      <Input placeholder=\"Type nome\" onChange={updateNamePT} value={activeItem.name.pt} />\n      <ItemCard id={itemId} width={100} />\n      <Switch\n        checkedChildren=\"NSFW\"\n        unCheckedChildren=\"SFW\"\n        onChange={updateNSFW}\n        checked={activeItem?.nsfw}\n      />\n      <Divider />\n\n      <Typography.Paragraph strong className=\"center\">\n        Response Priority\n      </Typography.Paragraph>\n\n      {attributePriority.map(({ attribute, value }) => {\n        return <Sign attribute={attribute} key={attribute} very={value === 5} not={value === -5} />;\n      })}\n    </Space>\n  );\n}\n","import { AutoComplete, Space } from 'antd';\n\nimport type { AlienItemDict, ItemId } from './types';\n\ntype SearchProps = {\n  data: AlienItemDict;\n  setItemId: React.Dispatch<React.SetStateAction<string>>;\n};\n\nexport function Search({ data, setItemId }: SearchProps) {\n  const namesDict = Object.values(data).reduce((acc: Record<string, ItemId>, entry) => {\n    acc[entry.name.en] = entry.id;\n    return acc;\n  }, {});\n  const names = Object.keys(namesDict).map((name) => ({ value: name }));\n\n  const onSelect = (name: string) => {\n    if (namesDict[name]) {\n      setItemId(namesDict[name]);\n    }\n  };\n\n  return (\n    <Space>\n      <AutoComplete\n        options={names}\n        style={{ width: 150 }}\n        onSelect={onSelect}\n        placeholder=\"Go to...\"\n        filterOption={(inputValue, option) =>\n          option!.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n        }\n      />\n    </Space>\n  );\n}\n","import { CheckCircleFilled, CloseCircleOutlined } from '@ant-design/icons';\n\ntype VerifierProps = {\n  label: string;\n  value: boolean;\n};\n\nexport function Verifier({ label, value }: VerifierProps) {\n  return (\n    <div className=\"classifier__verifier\">\n      {label}:{' '}\n      {value ? (\n        <CheckCircleFilled style={{ color: 'green' }} />\n      ) : (\n        <CloseCircleOutlined style={{ color: 'red' }} />\n      )}\n    </div>\n  );\n}\n","import { Card, Space } from 'antd';\nimport { Loading } from 'components/loaders';\nimport { useEffect } from 'react';\n\nimport { AttributeLevelRadioGroup } from './AttributeLevelRadioGroup';\nimport { useClassifier } from './ClassifierContext';\nimport { ATTRIBUTES } from './constants';\nimport { Controls } from './Controls';\nimport { CurrentItem } from './CurrentItem';\nimport { countNonZeroAttributes, initialAttributeState, validateItem } from './helpers';\nimport { useItem } from './hooks';\nimport { Search } from './Search';\nimport { Verifier } from './Verifier';\n\nimport type { Attribute, Weight } from './types';\nimport { useQueryParams } from 'hooks/useQueryParams';\nimport { orderBy } from 'lodash';\n\nconst attributeList = orderBy(Object.values(ATTRIBUTES), ['name.en'], ['asc']);\n\nexport function ClassifyingCard() {\n  const { data, save, isSaving, itemUtils, isDirty } = useClassifier();\n  const { itemId, previousItem, nextItem, itemNumber, goTo, setItemId } = useItem(itemUtils.latestId);\n  const qp = useQueryParams();\n\n  const current = data[itemId];\n\n  useEffect(() => {\n    if (!current) {\n      itemUtils.create(itemId);\n    }\n  }, [current]); // eslint-disable-line\n\n  useEffect(() => {\n    if (qp.queryParams.item) {\n      setItemId(qp.queryParams.item);\n    }\n  }, [qp.queryParams.item]); // eslint-disable-line\n\n  const updateNameEN = (e: React.ChangeEvent<HTMLInputElement>) => {\n    itemUtils.updateNameEN(itemId, e.target.value.toLowerCase());\n  };\n\n  const updateNamePT = (e: React.ChangeEvent<HTMLInputElement>) => {\n    itemUtils.updateNamePT(itemId, e.target.value.toLowerCase());\n  };\n\n  const updateAttributeValue = (attributeId: string, value: number) => {\n    itemUtils.updateAttributeValue(itemId, attributeId, value as Weight);\n  };\n\n  const updateNSFW = (value: boolean) => {\n    itemUtils.updateNSFW(itemId, value);\n  };\n\n  if (!current) {\n    return (\n      <Space className=\"space-container\">\n        <Loading />\n      </Space>\n    );\n  }\n\n  const validation = validateItem(current, initialAttributeState);\n\n  const currentItemComponent = (\n    <CurrentItem\n      itemId={itemId}\n      activeItem={current}\n      updateNameEN={updateNameEN}\n      updateNamePT={updateNamePT}\n      updateNSFW={updateNSFW}\n    />\n  );\n\n  const controls = (\n    <Controls\n      itemId={itemId}\n      itemNumber={itemNumber}\n      previousItem={previousItem}\n      nextItem={nextItem}\n      goTo={goTo}\n      isSaving={isSaving}\n      save={save}\n      latestId={itemUtils.latestId}\n      data={data}\n      isDirty={isDirty}\n    />\n  );\n\n  return (\n    <Space className=\"container classifier\" direction=\"vertical\">\n      {controls}\n\n      <Card\n        title={\n          <>\n            Classifying {itemId} - {current.name.en} - ({countNonZeroAttributes(current)}/30)\n          </>\n        }\n        extra={<Search setItemId={setItemId} data={data} />}\n      >\n        <Space className=\"classifier__grid\">\n          <div>{currentItemComponent}</div>\n\n          <Space className=\"classifier__attributes\" wrap>\n            {attributeList.map((entry) => {\n              return (\n                <Space className=\"classifier__entry\" direction=\"vertical\" key={entry.id}>\n                  <div className=\"title\">{`${entry.name.en} - ${entry.name.pt}`}</div>\n                  <AttributeLevelRadioGroup\n                    value={current.attributes[entry.id as Attribute]}\n                    onChange={(e) => updateAttributeValue(entry.id, e.target.value)}\n                  />\n                </Space>\n              );\n            })}\n          </Space>\n\n          {currentItemComponent}\n        </Space>\n        <Space className=\"classifier__verifiers space-container\">\n          <span></span>\n          <Verifier label=\"Has name\" value={validation.hasName} />\n          <Verifier label=\"Has no zeroes\" value={validation.hasNoZeroes} />\n          <Verifier label=\"Has positive values\" value={validation.hasPositive} />\n          <Verifier label=\"Has at least one 5\" value={validation.hasFive} />\n        </Space>\n      </Card>\n\n      {controls}\n    </Space>\n  );\n}\n","import { InquiryScenario } from './types';\n\nexport const INQUIRY_SCENARIOS: InquiryScenario[] = [\n  {\n    description: 'alive with 1 item',\n    inquiry: ['5'],\n    attributes: [],\n    knownAttributes: [],\n    expected: 'alive',\n  },\n  {\n    description: 'alive with 3 item',\n    inquiry: ['59', '5'],\n    attributes: [],\n    knownAttributes: [],\n    expected: 'alive',\n  },\n  {\n    description: 'alive with 5 item',\n    inquiry: ['99', '88', '82', '162', '225'],\n    attributes: [],\n    knownAttributes: [],\n    expected: 'alive',\n  },\n  {\n    description: 'beautiful with 1 item',\n    inquiry: ['20'],\n    attributes: [],\n    knownAttributes: [],\n    expected: 'beautiful',\n  },\n  {\n    description: 'Real life sample with flaviane old',\n    inquiry: ['6', '13'],\n    attributes: [],\n    knownAttributes: [],\n    expected: 'old',\n  },\n  {\n    description: 'Real life sample with flaviane metal',\n    inquiry: ['3', '10', '12', '17', '21'],\n    attributes: [],\n    knownAttributes: [],\n    expected: 'metal',\n  },\n  {\n    description: 'Real life sample with flaviane sound',\n    inquiry: ['4', '10', '12', '23'],\n    attributes: [],\n    knownAttributes: [],\n    expected: 'sound',\n  },\n  {\n    description: 'Real life sample with flaviane long',\n    inquiry: ['1', '2', '3', '19', '21'],\n    attributes: [],\n    knownAttributes: [],\n    expected: 'long',\n  },\n  {\n    description: 'Real life sample with flaviane plant',\n    inquiry: ['2', '14', '20'],\n    attributes: [],\n    knownAttributes: [],\n    expected: 'plant',\n  },\n  {\n    description: 'Real life sample with flaviane weapon',\n    inquiry: ['3', '4'],\n    attributes: [],\n    knownAttributes: [],\n    expected: 'weapon',\n  },\n  {\n    description: 'Real life sample with flaviane clothes',\n    inquiry: ['8', '15', '22'],\n    attributes: [],\n    knownAttributes: [],\n    expected: 'clothes',\n  },\n  {\n    description: 'Sample',\n    inquiry: ['1'],\n    attributes: [],\n    knownAttributes: [],\n    expected: 'flat',\n  },\n  {\n    description: 'Sample',\n    inquiry: ['1'],\n    attributes: [],\n    knownAttributes: ['flat'],\n    expected: 'long',\n  },\n];\n","import { Card, Descriptions, DescriptionsProps, Space, Typography } from 'antd';\nimport { IconAvatar } from 'components/avatars';\nimport { ItemCard } from 'components/cards/ItemCard';\nimport { SignCard } from 'components/cards/SignCard';\nimport { SpeechBubbleAcceptedIcon } from 'icons/SpeechBubbleAcceptedIcon';\nimport { SpeechBubbleDeclinedIcon } from 'icons/SpeechBubbleDeclinedIcon';\nimport { useMemo } from 'react';\n\nimport { determineAlienResponse } from './bot-utils';\nimport { useClassifier } from './ClassifierContext';\nimport { ATTRIBUTE_SIGN_DICT, SIGN_ATTRIBUTE_DICT, SIGNS, SORTED_ATTRIBUTES } from './constants';\nimport { Sign } from './Sign';\nimport { INQUIRY_SCENARIOS } from './sample-scenarios';\n\nimport type { AlienItemDict, AlienSignKnowledge, Attribute, ItemId, SignKey } from './types';\nexport function Scenarios() {\n  const { data } = useClassifier();\n\n  return (\n    <Space className=\"container classifier\" direction=\"vertical\">\n      <Card title=\"Scenarios\">\n        <Space wrap>\n          {INQUIRY_SCENARIOS.map((scenario, index) => {\n            return (\n              <Scenario\n                key={`inquiry-${index}`}\n                id={index + 1}\n                description={scenario.description}\n                type=\"inquiry\"\n                inquiry={scenario.inquiry}\n                attributes={scenario.attributes.length === 0 ? [] : scenario.attributes}\n                knownAttributes={scenario.knownAttributes}\n                expected={scenario.expected}\n                data={data}\n              />\n            );\n          })}\n        </Space>\n      </Card>\n\n      <Card title=\"Attributes\">\n        <Space wrap>\n          {SORTED_ATTRIBUTES.map((attribute, index) => {\n            return (\n              <Space size=\"small\" align=\"center\" direction=\"vertical\">\n                <SignCard key={attribute.id} id={ATTRIBUTE_SIGN_DICT[attribute.id]} width={50} />\n                <Typography.Text>\n                  {index} - {attribute.name.en}\n                </Typography.Text>\n              </Space>\n            );\n          })}\n        </Space>\n      </Card>\n    </Space>\n  );\n}\n\ntype ScenarioProps = {\n  id: number;\n  description: string;\n  type: 'inquiry' | 'request';\n  inquiry: ItemId[];\n  attributes: Attribute[];\n  knownAttributes: SignKey[];\n  expected: Attribute;\n  data: AlienItemDict;\n};\n\nfunction Scenario({ id, inquiry, expected, data, description, knownAttributes }: ScenarioProps) {\n  const botAlienItemKnowledge = useMemo(() => {\n    return inquiry.reduce((acc: AlienItemDict, itemId) => {\n      acc[itemId] = data[itemId];\n      return acc;\n    }, {});\n  }, [inquiry, data]);\n\n  const botAlienSignKnowledge: AlienSignKnowledge = useMemo(() => {\n    return knownAttributes.reduce((acc: AlienSignKnowledge, signId) => {\n      acc[signId] = [];\n      return acc;\n    }, {});\n  }, [knownAttributes]);\n\n  const result = determineAlienResponse(inquiry, botAlienItemKnowledge, botAlienSignKnowledge, SIGNS);\n\n  const correct = result === ATTRIBUTE_SIGN_DICT[expected];\n\n  const items: DescriptionsProps['items'] = [\n    {\n      key: '1',\n      label: 'Case',\n      children: <Typography.Text>{description}</Typography.Text>,\n    },\n    {\n      key: '2',\n      label: 'Sample',\n      span: 2,\n      children: (\n        <Space size=\"small\">\n          {inquiry.map((itemId) => {\n            return (\n              <div key={itemId}>\n                <ItemCard id={itemId} key={itemId} width={50} />\n              </div>\n            );\n          })}\n        </Space>\n      ),\n    },\n    {\n      key: '3',\n      label: 'Expected',\n      children: (\n        <Space size=\"small\">\n          <Sign attribute={expected} />\n        </Space>\n      ),\n    },\n    {\n      key: '4',\n      label: 'Output',\n      children: (\n        <Space size=\"small\">\n          <Sign attribute={SIGN_ATTRIBUTE_DICT[result] as Attribute} />\n        </Space>\n      ),\n    },\n    {\n      key: '5',\n      label: 'Result',\n      children: correct ? (\n        <IconAvatar icon={<SpeechBubbleAcceptedIcon />} />\n      ) : (\n        <IconAvatar icon={<SpeechBubbleDeclinedIcon />} />\n      ),\n    },\n  ];\n\n  return <Descriptions title={`Inquiry ${id}`} items={items} size=\"small\" column={6} layout=\"vertical\" />;\n}\n","import { Button, Card, Space, Table, TableColumnsType } from 'antd';\nimport { ItemCard } from 'components/cards/ItemCard';\n\nimport { determineAttributePriorityResponse } from './bot-utils';\nimport { useClassifier } from './ClassifierContext';\n\nimport type { AlienItem } from './types';\nimport { Sign } from './Sign';\n\nimport { DualTranslate, LanguageSwitch } from 'components/language';\nimport { useQueryParams } from 'hooks/useQueryParams';\n\nexport function Priority() {\n  const { data } = useClassifier();\n  const qp = useQueryParams();\n\n  const columns: TableColumnsType<AlienItem> = [\n    {\n      title: 'Id',\n      dataIndex: 'id',\n      key: 'id',\n      render: (id) => (\n        <Button\n          shape=\"round\"\n          onClick={() => {\n            qp.add('item', id);\n            qp.add('view', 'default');\n          }}\n        >\n          {id}\n        </Button>\n      ),\n    },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      render: (name) => <DualTranslate>{name}</DualTranslate>,\n    },\n    {\n      title: 'Item',\n      dataIndex: 'id',\n      key: 'image',\n      render: (id) => <ItemCard id={id} width={50} />,\n    },\n    {\n      title: 'Priority',\n      key: 'attributes',\n      dataIndex: 'attributes',\n      render: (_, item) => {\n        const attributePriority = determineAttributePriorityResponse([item.id], { [item.id]: item });\n        return (\n          <Space size=\"small\" className=\"priority-attributes\">\n            {attributePriority.map(({ attribute, value }) => (\n              <Sign attribute={attribute} key={attribute} value={value} />\n            ))}\n          </Space>\n        );\n      },\n    },\n  ];\n\n  return (\n    <Space className=\"container classifier\" direction=\"vertical\">\n      <Card title=\"Priority\" extra={<LanguageSwitch />}>\n        <Table columns={columns} dataSource={Object.values(data)} />\n      </Card>\n    </Space>\n  );\n}\n","import { Segmented } from 'antd';\nimport { PageError } from 'components/errors';\nimport { LoadingPage } from 'components/loaders';\nimport { isEmpty } from 'lodash';\nimport { useEffect, useState } from 'react';\nimport { useTitle } from 'react-use';\n\nimport { DevHeader } from '../DevHeader';\n\nimport { StatsCard } from './StatsCard';\nimport { Grouping } from './Grouping';\nimport { ClassifyingCard } from './ClassifyingCard';\nimport { ClassifierProvider, useClassifier } from './ClassifierContext';\n\nimport './ItemClassifier.scss';\nimport { useQueryParams } from 'hooks/useQueryParams';\nimport { Scenarios } from './Scenarios';\nimport { Priority } from './Priority';\n\nfunction ItemClassifier() {\n  const { isLoading, isError, data } = useClassifier();\n  const [view, setView] = useState('default');\n  const qp = useQueryParams({ view: 'default' });\n\n  useEffect(() => {\n    setView(qp.queryParams.view ?? 'default');\n  }, [qp.queryParams.view]);\n\n  if (isEmpty(data) && isLoading) {\n    return <LoadingPage />;\n  }\n\n  if (isError) {\n    return <PageError message=\"Something is wrong\" />;\n  }\n\n  const segments = [\n    { label: 'Classifier', value: 'default', disabled: view === 'default' },\n    { label: 'Grouping', value: 'grouping', disabled: view === 'grouping' },\n    { label: 'Stats', value: 'stats', disabled: view === 'stats' },\n    { label: 'Priority', value: 'priority', disabled: view === 'priority' },\n    { label: 'Scenarios', value: 'scenarios', disabled: view === 'scenarios' },\n  ];\n\n  return (\n    <div>\n      <DevHeader\n        title=\"Classifier\"\n        extra={<Segmented options={segments} defaultValue={view} onChange={(v: any) => qp.add('view', v)} />}\n      />\n\n      {view === 'default' && <ClassifyingCard />}\n      {view === 'grouping' && <Grouping />}\n      {view === 'stats' && <StatsCard />}\n      {view === 'priority' && <Priority />}\n      {view === 'scenarios' && <Scenarios />}\n    </div>\n  );\n}\n\nfunction ItemClassifierPage() {\n  useTitle('Items Classifier | Dev | Tarde Divertida');\n\n  return (\n    <ClassifierProvider>\n      <ItemClassifier />\n    </ClassifierProvider>\n  );\n}\n\nexport default ItemClassifierPage;\n","import { Segmented } from 'antd';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nexport function DevMenu() {\n  const { pathname } = useLocation();\n  const navigate = useNavigate();\n\n  const options = [\n    { label: 'Home', value: '/', disabled: pathname === '/' },\n    { label: 'Hub', value: '/hub', disabled: pathname === '/hub' },\n    { label: 'Icons', value: '/dev/icons', disabled: pathname === '/dev/icons' },\n    { label: 'Colors', value: '/dev/colors', disabled: pathname === '/dev/colors' },\n    { label: 'Sprites', value: '/dev/sprites', disabled: pathname === '/dev/sprites' },\n    { label: 'Resources', value: '/dev/resources', disabled: pathname === '/dev/resources' },\n    { label: 'Playground', value: '/dev/playground', disabled: pathname === '/dev/playground' },\n    { label: 'Daily Setup', value: '/dev/dailysetup', disabled: pathname === '/dev/dailysetup' },\n    { label: 'Showcase', value: '/showcase', disabled: pathname === '/showcase' },\n  ];\n\n  const onNavigate = (path: any) => {\n    navigate(path);\n  };\n\n  return <Segmented options={options} defaultValue={pathname} onChange={onNavigate} />;\n}\n","import { ReactNode } from 'react';\n// Ant Design Resources\nimport { Space } from 'antd';\n// Components\nimport { DevMenu } from './DevMenu';\n\ntype DevHeaderProps = {\n  title: ReactNode;\n  subTitle?: ReactNode;\n  extra?: ReactNode;\n};\n\nexport function DevHeader({ title, subTitle, extra }: DevHeaderProps) {\n  return (\n    <header className=\"dev-header\">\n      <div className=\"dev-header__heading\">\n        <div className=\"dev-header__left\">\n          <span className=\"dev-header__title\">{title} </span>\n          <span className=\"dev-header__subtitle\">{subTitle}</span>\n        </div>\n        <div className=\"dev-header__extra\">\n          <Space className=\"dev-header__extra-space\" wrap>\n            {extra}\n          </Space>\n          <DevMenu />\n        </div>\n      </div>\n    </header>\n  );\n}\n"],"names":["FixedMenuButton","type","position","content","className","open","rest","clsx","placement","trigger","FixedMenuButtonContent","icon","label","showLabel","onClick","buttonProps","useState","isActive","setActive","hasLabel","Boolean","useEffectOnce","shape","size","onMouseOver","onMouseLeave","undefined","ghost","TimedButton","duration","children","onExpire","hideTimer","timeLeft","useCountdown","autoStart","disabled","timeClass","TransparentButton","active","activeClass","hoverType","Instruction","white","contained","fullWidth","baseClass","RoundsLeftInstruction","round","left","total","current","forceLastRound","pt","en","pluralize","TextHighlight","Title","level","align","RuleInstruction","sfx","action","PlayCircleFilled","alert","AlertFilled","event","ExclamationCircleFilled","lore","MessageFilled","rule","ReadFilled","tip","BulbFilled","scoring","StarFilled","wait","ClockCircleFilled","bot","RobotFilled","animationClass","getAnimationClass","infinite","speed","repeat","token","theme","color","background","colorPrimary","style","timer","useTimer","expiryTimestamp","inNSeconds","minutes","seconds","useQueryParams","defaultParams","useSearchParams","searchParams","setSearchParams","add","key","value","delete","set","String","remove","useEffect","Object","entries","forEach","has","queryParams","toString","split","reduce","qp","entry","useTDBaseUrl","kind","base","process","SpeechBubbleAcceptedIcon","props","xmlns","viewBox","fill","d","cx","cy","r","SpeechBubbleDeclinedIcon","ATTRIBUTES","alive","id","name","beautiful","big","bright","clothes","danger","defense","fast","flat","flight","food","heavy","human","knowledge","liquid","long","machine","metal","odor","old","plant","power","sharp","soft","solid","sound","tool","valuable","warm","weapon","holdable","personal","multiple","fragile","toy","FIRST_ID","SORTED_ATTRIBUTES","orderBy","values","ATTRIBUTE_SIGN_DICT","acc","attribute","index","SIGN_ATTRIBUTE_DICT","SIGNS","map","signId","countNonZeroAttributes","item","count","attributes","initialAttributeState","keys","prepareFirebaseAlienItemDict","data","newData","attributesStr","JSON","stringify","nsfw","categories","parseFirebaseAlienItemDict","parse","ClassifierContext","createContext","isLoading","isSuccess","isError","isSaving","save","isDirty","reload","itemUtils","latestId","create","updateNameEN","updateNamePT","updateAttributeValue","updateNSFW","ClassifierProvider","queryClient","useQueryClient","notification","App","queryKey","setData","setIsDirty","baseUrl","useQuery","queryFn","fetch","response","json","isLoadingTR","isTRError","trData","isSuccessTR","docRef","doc","firestore","getDoc","querySnapshot","firebaseData","enabled","onSuccess","info","message","merged","merge","softVal","hard","singular","onError","error","isLoadingFirestore","fetchItems","refetch","useMutation","mutationKey","mutationFn","stringifiedData","setDoc","_","variables","success","setQueryData","isMutating","isMutationError","isSaved","mutate","orderedNumberedIds","Number","sort","a","b","i","length","includes","findFirstIncomplete","Provider","itemId","prevData","cloneDeep","attributeId","copy","useClassifier","useContext","colors","Sign","very","not","hideName","direction","SignCard","width","StatsCard","stats","useMemo","attributeCounts","positiveAttributes","negativeAttributes","positiveFives","negativeFives","has5","hasMinus5","weight","totalItems","Math","positiveAttributesMean","mean","negativeAttributesMean","getStats","sorting","setSorting","attributeList","obj","title","wrap","suffix","precision","onChange","e","minWidth","useItem","initialItem","setItemId","previousItem","cur","nextItem","goTo","target","curNum","result","itemNumber","AttributeLevelRadioGroup","optionType","buttonStyle","backgroundColor","Grouping","activeAttribute","setActiveAttribute","criteria","setCriteria","show","setShow","itemsList","get","selection","checkCriteria","activeItem","extra","loading","SaveOutlined","SaveFilled","tooltip","Filters","onConfirm","overflowCount","ItemCard","onCancel","okButtonProps","display","Controls","filename","blob","Blob","anchorElement","document","createElement","href","window","URL","createObjectURL","download","click","revokeObjectURL","downloadObjectAsFile","determineAttributePriorityResponse","currentInquiry","botAlienItemKnowledge","totalWeights","calculateTotalWeights","PRIORITY_ORDER","attributeA","weightA","attributeB","weightB","indexOf","filter","every","itemIds","getArrayUniqueness","list","used","CurrentItem","attributePriority","placeholder","checkedChildren","unCheckedChildren","checked","strong","Search","namesDict","names","options","onSelect","filterOption","inputValue","option","toUpperCase","Verifier","CheckCircleFilled","CloseCircleOutlined","ClassifyingCard","validation","allAttributes","hasName","hasFive","hasNoZeroes","hasPositive","some","v","validateItem","currentItemComponent","toLowerCase","controls","INQUIRY_SCENARIOS","description","inquiry","knownAttributes","expected","Scenarios","scenario","Scenario","botAlienSignKnowledge","signs","sortedAttributes","uniqueMatches","bestMatch","matchingSign","find","sign","sortedAttributesReverse","sortedAttributesAny","determineAlienResponse","correct","items","span","column","layout","Priority","columns","dataIndex","render","dataSource","ItemClassifier","view","setView","isEmpty","segments","DevHeader","defaultValue","useTitle","DevMenu","pathname","useLocation","navigate","useNavigate","path","subTitle"],"sourceRoot":""}