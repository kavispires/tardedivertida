{"version":3,"sources":["reportWebVitals.js","services/firebase.js","hooks/useActivePlayer.js","hooks/useGlobalState.js","hooks/useAmIActive.js","hooks/useAmIReady.js","hooks/useAPICall.js","hooks/useGamePlayers.js","hooks/useGameState.js","hooks/useIsMyTeamActive.js","hooks/useLoading.js","hooks/useMe.js","images/tarde-divertida-logo.svg","components/Home.jsx","utils/constants.js","adapters/index.js","components/loaders/Loading.jsx","components/shared/Instruction.jsx","components/shared/Title.jsx","components/modals/CreateGameModal.jsx","components/rules/RulesCarousel.jsx","components/modals/RulesModal.jsx","components/Admin.jsx","adapters/auth.js","components/Login.jsx","utils/index.js","components/loaders/LoadingPage.jsx","components/errors/PageError.jsx","components/shared/PhaseContainer.jsx","images/avatars.svg","components/avatars/Avatar.jsx","components/avatars/AvatarEntry.jsx","services/localStorage.js","components/lobby/Join.jsx","components/shared/AdminOnly.jsx","components/lobby/Waiting.jsx","components/lobby/CloudBackground.jsx","components/lobby/Lobby.jsx","components/shared/ReadyPlayersBar.jsx","components/rules/Rules.jsx","sounds/arte-ruim-timer.mp3","components/games/arte-ruim/DrawingCanvas.jsx","components/cards/Card.jsx","components/games/arte-ruim/DrawPhaseDrawStep.jsx","components/shared/WaitingRoom.jsx","images/rodada-title.svg","components/avatars/AvatarName.jsx","components/shared/TimedButton.jsx","components/shared/RoundAnnouncement.jsx","components/shared/StepSwitcher.jsx","components/shared/AdminForceNextPhase.jsx","components/games/arte-ruim/DrawPhase.jsx","components/games/arte-ruim/CanvasSVG.jsx","components/games/arte-ruim/Ribbon.jsx","components/games/arte-ruim/EvaluationAllDrawings.jsx","components/cards/ArteRuimCard.jsx","components/games/arte-ruim/EvaluationAllCards.jsx","components/games/arte-ruim/CanvasResizer.jsx","components/games/arte-ruim/EvaluationPhase.jsx","components/games/arte-ruim/GalleryWindowCredits.jsx","components/games/arte-ruim/GalleryWindowGuesses.jsx","components/games/arte-ruim/GalleryWindowControls.jsx","components/shared/StarPoints.jsx","components/games/arte-ruim/GalleryWindowResult.jsx","components/games/arte-ruim/GalleryWindow.jsx","components/shared/RankingBoard.jsx","components/games/arte-ruim/GalleryPhase.jsx","images/game-over-title.svg","components/shared/GameOver.jsx","components/games/arte-ruim/DrawingGrade.jsx","components/games/arte-ruim/GameOverPhase.jsx","components/shared/GameInfoDrawer.jsx","components/games/arte-ruim/SessionArteRuim.jsx","components/cards/EspiaoEntreNosCard.jsx","components/games/espiao-entre-nos/List.jsx","components/games/espiao-entre-nos/Notes.jsx","components/games/espiao-entre-nos/AdminTimerControlButton.jsx","components/games/espiao-entre-nos/AssignmentPhase.jsx","components/games/espiao-entre-nos/PlayerSelect.jsx","components/games/espiao-entre-nos/LocationSelect.jsx","components/games/espiao-entre-nos/Timer.jsx","components/games/espiao-entre-nos/InvestigationPhase.jsx","components/games/espiao-entre-nos/AssessmentPhase.jsx","components/games/espiao-entre-nos/ResolutionPhase.jsx","components/games/espiao-entre-nos/FinalAssessmentPhase.jsx","components/games/espiao-entre-nos/SessionEspiaoEntreNos.jsx","components/games/onda-telepatica/Card.jsx","components/games/onda-telepatica/CardSelection.jsx","components/games/onda-telepatica/DialSidesPhase.jsx","components/games/onda-telepatica/Dial.jsx","components/games/onda-telepatica/DialClueWriting.jsx","components/games/onda-telepatica/DialCluePhase.jsx","components/games/onda-telepatica/DialGuessSelection.jsx","components/games/onda-telepatica/GuessPhase.jsx","components/games/onda-telepatica/DialRivalSelection.jsx","components/games/onda-telepatica/RivalPhase.jsx","components/games/onda-telepatica/RevealPhase.jsx","components/games/onda-telepatica/SessionOndaTelepatica.jsx","components/games/ue-so-isso/WordSelectionStep.jsx","components/games/ue-so-isso/WordSelectionPhase.jsx","components/cards/UeSoIssoCard.jsx","components/games/ue-so-isso/SuggestionStep.jsx","components/games/ue-so-isso/SuggestPhase.jsx","components/games/ue-so-isso/SuggestionCard.jsx","components/games/ue-so-isso/CompareSuggestionsStep.jsx","components/games/ue-so-isso/ComparePhase.jsx","components/games/ue-so-isso/Guess.jsx","components/games/ue-so-isso/GuessPhase.jsx","components/games/ue-so-isso/SessionUeSoIsso.jsx","components/games/index.js","components/Game.jsx","hooks/useIsGameStale.js","components/TestingZone.jsx","components/loaders/LoadingBar.jsx","components/App.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","firestore","functions","window","location","hostname","includes","useEmulator","useActivePlayer","state","players","propertyName","useState","activePlayer","setActivePlayer","useEffect","initialState","isLoading","loaders","isAuthenticated","appStartedAt","Date","now","gameId","gameName","gameMeta","me","myAvatar","isAdmin","canvasSize","espiaoEntreNosCache","createGlobalState","useGlobalState","setGlobalState","getGlobalState","useAmIActive","amIActive","setAmIActive","useAmIReady","amIReady","setAmIReady","ready","updatedAt","useAPICall","apiFunction","actionName","onBeforeCall","onAfterCall","onError","successMessage","errorMessage","useLoading","setLoader","useCallback","payload","a","playerName","data","message","success","notification","error","description","JSON","stringify","placement","console","useGamePlayers","useDocument","doc","snapshotListenOptions","includeMetadataChanges","snapshot","loading","log","useGameState","useIsMyTeamActive","isMyTeamActive","setIsMyTeamActive","activeTeam","team","setLoading","setLoaders","Object","values","some","v","key","value","useMe","completeMe","setCompleteMe","Home","className","src","logo","preview","alt","PUBLIC_URL","BANNERS","RULES","TAG_DICT","competitive","label","color","cooperative","traitor","timed","drawing","guessing","writing","images","discussion","AVATAR_IDS","Array","fill","map","i","index","LETTERS","AVATAR_DESCRIPTIONS_BR","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","GAME_COLLECTION","PHASES","LOBBY","DRAW","EVALUATION","GALLERY","GAME_OVER","ASSIGNMENT","INVESTIGATION","ASSESSMENT","FINAL_ASSESSMENT","RESOLUTION","DIAL_SIDES","DIAL_CLUE","GUESS","RIVAL_GUESS","REVEAL","WORD_SELECTION","SUGGEST","COMPARE","GAME_API","helloWorld","httpsCallable","initializeGame","loadGame","addPlayer","lockGame","playAgain","ARTE_RUIM_API","makeMeReady","submitDrawing","submitVoting","submitRating","goToNextPhase","ESPIAO_ENTRE_NOS_API","handleAdminAction","makeAccusation","guessLocation","ONDA_TELEPATICA","submitSides","submitClue","submitGuess","submitRivalGuess","UE_SO_ISSO_API","submitWordSelectionVotes","submitSuggestions","submitValidation","confirmGuess","sendGuess","getAPI","Error","Loading","margin","clsx","Boolean","Text","defaultProps","Instruction","children","white","contained","baseClass","memo","Title","icon","level","CreateGameModal","gameInfo","history","useHistory","isVisible","setVisibility","setGameId","onCloseModal","gameCode","response","createGame","type","onClick","title","visible","onCancel","onOk","push","info","fallback","RulesCarousel","ruleClass","autoplay","autoplaySpeed","rules","rule","Paragraph","RulesModal","ReadOutlined","footer","Admin","Content","size","wrap","align","gameList","game","hoverable","style","width","cover","Meta","summary","min","max","recommended","tags","tag","available","signIn","email","password","signInWithEmailAndPassword","layout","labelCol","span","wrapperCol","tailLayout","offset","Login","setIsAuthenticated","setError","setEmail","setPassword","onHandleSubmit","user","uid","showIcon","name","onValuesChange","trim","autoComplete","Item","isValidGameId","length","getRandomItem","list","Math","floor","random","inNSeconds","seconds","getColorFromLetter","letter","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","getColorFromIndex","LoadingPage","PageError","PhaseContainer","phase","allowedPhase","fullScreen","Avatar","id","shape","viewBox","href","avatars","AvatarEntry","animate","propTypes","PropTypes","number","string","bool","this","store","notLoaded","appName","init","load","get","localStorage","parse","getItem","entries","forEach","item","undefined","save","setItem","Join","setMe","setMyAvatar","availableAvatars","setAvailableAvatars","tempAvatar","setTempAvatar","tempMe","setTempMe","sameGameId","setSameGameId","localStorageAvatar","setLocalStorageAvatar","usedAvatars","reduce","acc","p","avatarId","newAvailableAvatars","filter","lsAvatarId","lsMe","lsGameId","onPreviousAvatar","indexOf","newIndex","onNextAvatar","onAddPlayer","playerAvatarId","set","CaretLeftOutlined","CaretRightOutlined","onChange","e","target","placeholder","maxLength","suffix","InfoCircleOutlined","disabled","AdminOnly","AdminButton","action","RocketFilled","danger","AdminOnlyButton","Waiting","onLockGameAndStart","isLocked","numPlayers","keys","CloudBackground","class","Lobby","player","ReadyPlayersBar","readyLabel","readyLabelPlural","readyPlayers","Group","LikeFilled","Rules","onBeReady","onBeReadyQue","CheckCircleFilled","SmileFilled","MehFilled","RobotFilled","DrawingCanvas","lines","setLines","isDrawing","useRef","height","onMouseDown","current","pos","getStage","getPointerPosition","x","y","onMousemove","point","lastLine","concat","splice","onMouseup","line","points","stroke","strokeWidth","tension","lineCap","globalCompositeOperation","Card","header","randomColor","headerClassName","footerClassName","bgColor","DrawPhaseDrawStep","secretCard","onSubmitDrawing","useTimer","expiryTimestamp","autoStart","onExpire","cardId","join","text","WaitingRoom","instruction","AvatarName","withDescription","uppercase","TimedButton","duration","showTimer","props","timeClass","Team","members","score","RoundAnnouncement","round","onPressButton","buttonText","time","teams","rodadaTitle","StepSwitcher","step","conditions","AdminForceNextPhase","onGoToNextPhase","FireFilled","DrawPhase","setStep","setSecretCard","useSound","arteRuimTimer","volume","play","currentCard","CanvasSVG","konvaLines","paths","lineArr","path","xmlns","overflow","d","strokeLinecap","strokeLinejoin","strokeMiterlimit","Ribbon","cardEntryId","split","EvaluationAllDrawings","drawings","activeItem","onActivateItem","votes","liButtonBaseClass","drawingEntry","canvasEntryId","isActive","ArteRuimCard","WarningOutlined","EvaluationAllCards","cards","cardEntry","isUsed","role","CanvasResizer","setCanvasSize","defaultValue","prepareVotes","drawingEntryId","drawingId","EvaluationPhase","setVotes","setActiveItem","onSubmitVoting","entryId","startsWith","prevVotes","CloudUploadOutlined","GalleryWindowCredits","artist","artistAvatarId","GalleryWindowGuesses","playersSay","playersNames","card","find","MessageFilled","GalleryWindowControls","galleryLength","activeIndex","setActiveIndex","isRunning","pause","resume","s","abs","StepBackwardOutlined","PauseOutlined","PlayCircleOutlined","StepForwardOutlined","TrophyOutlined","StarPoints","quantity","keyPrefix","starsArray","from","_","StarFilled","GalleryWindowResult","correctAnswerId","correctAnswerText","playersPoints","correctGuesses","CrownFilled","DeleteFilled","GalleryWindow","correctAnswer","correctAnswerLevel","RankingBoard","ranking","displayStep","setDisplayStep","sortedRanking","setSortedRanking","positions","setPositions","maxPoints","newScore","sort","b","previousScore","property","lastPosition","lastPoints","entry","gainedPoints","GalleryPhase","cachedCanvasSize","setCachedCanvasSize","onGoToNextRound","gallery","pointsToVictory","PictureOutlined","GameOver","onPlayAgain","gameOverTitle","winners","winner","strokeColor","percent","victory","onConfirm","okText","cancelText","grades","minValues","DrawingGrade","grade","findIndex","GameOverPhase","successRate","SectionMe","isTeamGame","count","SectionMeta","roundsToEndGame","groupScore","isNaN","backgroundColor","SectionTeams","SectionTeamPlayers","sortedPlayers","useMemo","memberName","SectionRankedPlayers","rankedPlayers","GameInfoDrawer","setVisible","offsetTop","closable","onClose","SessionArteRuim","setInfo","ActiveComponent","getActiveComponent","EspiaoEntreNosCard","QuestionCircleFilled","List","headerIcon","items","column","cache","setCache","ghost","ClearOutlined","newState","onCross","Notes","cols","rows","AdminTimerControlButton","onControlStopwatch","AssignmentPhase","isSpy","EnvironmentOutlined","possibleLocations","PlayerSelect","playersList","onSend","selectedPlayer","setSelectedPlayer","playersWithoutMe","Option","vote","LoadingOutlined","LocationSelect","locations","selectedLocation","setSelectedLocation","guess","Timer","timeRemaining","onAdminControl","minutes","InvestigationPhase","onMakeAccusation","onGuessLocation","outcome","warning","votedYes","usedAccusation","AimOutlined","AssessmentPhase","amITheTarget","amITheAccuser","submittedAction","setSubmitAction","accuser","ResolutionPhase","missionOutcomeText","spyWin","resolutionType","currentSpy","currentLocation","FinalAssessmentPhase","setAccuser","setTarget","playerOrder","SessionEspiaoEntreNos","getColorModifier","left","right","leftColor","rightColor","cardSideClass","ArrowLeftOutlined","MinusOutlined","ArrowRightOutlined","cardName","CardSelection","onSendChosenSide","DialSidesPhase","psychic","amIThePsychic","getBracketClass","showNeedle","needle","showTarget","baseBracketClass","modifier","Dial","rivalGuess","rivalTeam","showPoints","basePointsClass","baseRivalClass","transform","textAnchor","getHint","DialClueWriting","onSendClue","clue","setClue","toUpperCase","DialCluePhase","DialGuessSelection","teamController","amITheController","onSendGuess","setNeedle","GuessPhase","controller","DialRivalSelection","rivalController","amITheRivalController","onSendRivalGuess","BackwardOutlined","ForwardOutlined","RivalPhase","getResultInstructionLine","pointsBreakdown","catchup","got","getRivalResultInstructionLine","RevealPhase","rival","shouldCatchup","SessionOndaTelepatica","WordSelectionStep","words","onSendSelectedWords","guesser","selectedWords","setSelectedWords","selectedWordsArray","noSelection","word","wordId","randomSelection","WordSelectionPhase","amITheGuesser","previousSecretWord","nextGuesser","status","UeSoIssoCard","SuggestionStep","onSendSuggestions","secretWord","suggestionsNumber","suggestions","setSuggestions","onChangeInput","indexStr","Number","suggestionsValues","SuggestPhase","SuggestionCard","suggestion","invalid","CloseOutlined","CompareSuggestionsStep","onValidateSuggestions","myRecommendation","setMyRecommendation","amITheNextGuesser","ExclamationCircleOutlined","suggestionEntry","notAllowed","arr","newArr","onSetValidation","validSuggestions","ComparePhase","Guess","onSubmitGuess","setGuess","QuestionCircleOutlined","CheckOutlined","SessionUeSoIsso","games","ArteRuim","EspiaoEntreNos","OndaTelepatica","UeSoIsso","Game","setGameName","setGameMeta","isPageLoading","setPageLoading","isGameStale","gameCreatedAt","setGameStale","useIsGameStale","createdAt","urlGameId","pathname","substring","getGameIdFromURL","listen","getGameIdFromLocation","meta","loadGameSession","warn","TestingZone","Flaviane","Kavis","Stephanie","table","LoadingBar","PrivateRoute","Component","component","authenticated","rest","render","to","PublicRoute","fromPath","App","setIsLoading","setIsAdmin","onAuthStateChanged","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"oLAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,kGCQdQ,IAASC,cAVc,CACrBC,OAAQC,0CACRC,WAAYD,+BACZE,YAAaF,sCACbG,UAAWH,eACXI,cAAeJ,2BACfK,kBAAmBL,eACnBM,MAAON,8CAMF,IAAMO,EAAOV,IAASU,OAChBC,EAAYX,IAASW,YACrBC,EAAYZ,IAASY,YAE9BC,OAAOC,SAASC,SAASC,SAAS,eACpCL,EAAUM,YAAY,YAAa,MACnCL,EAAUK,YAAY,YAAa,OAGtBjB,EAAf,ECzBO,SAASkB,EAAgBC,EAAOC,GAAyC,IAAhCC,EAA+B,uDAAhB,eAAgB,EACrCC,mBAAS,IAD4B,mBACtEC,EADsE,KACxDC,EADwD,KAS7E,OALAC,qBAAU,WACR,IAAMF,EAAY,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAQE,GAC7BG,EAAe,OAACJ,QAAD,IAACA,OAAD,EAACA,EAAUG,MACzB,CAACH,EAASC,EAAcF,IAEpBI,E,aCTHG,EAAe,CACnBC,WAAW,EACXC,SAAS,EACTC,iBAAiB,EACjBC,aAAcC,KAAKC,MAEnBC,OAAQ,KACRC,SAAU,KACVC,SAAU,GACVC,GAAI,GACJC,SAAU,GACVC,SAAS,EAETC,WAAY,IAEZC,oBAAqB,I,EAGoCC,YAAkBf,GAArEgB,E,EAAAA,eAIOA,G,EAJSC,e,EAAgBC,eAIzBF,GCrBR,SAASG,EAAa1B,GAAuC,IAAhCE,EAA+B,uDAAhB,eAAgB,EACpDqB,EAAe,MADqC,mBAC1DN,EAD0D,OAE/Bd,oBAAS,GAFsB,mBAE1DwB,EAF0D,KAE/CC,EAF+C,KASjE,OAJAtB,qBAAU,WACRsB,GAAkB,OAAL5B,QAAK,IAALA,OAAA,EAAAA,EAAQE,MAAkBe,KACtC,CAACjB,EAAOiB,EAAIf,IAERyB,ECTF,SAASE,EAAY5B,GAAsB,IAAbD,EAAY,uDAAJ,GAAI,EAClCuB,EAAe,MADmB,mBACxCN,EADwC,OAEfd,oBAAS,GAFM,mBAExC2B,EAFwC,KAE9BC,EAF8B,KAyB/C,OArBAzB,qBAAU,WAAO,IAAD,GAEY,IAAtBL,EAAQgB,GAAIe,OAKZ,OAAChC,QAAD,IAACA,OAAD,EAACA,EAAOiC,aAMR,UAAAhC,EAAQgB,UAAR,eAAagB,YAAb,OAAyBjC,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAOiC,WAClCF,GAAY,GANZA,GAAY,GALZA,GAAY,KAgBb,CAACd,EAAIhB,EAAL,OAAcD,QAAd,IAAcA,OAAd,EAAcA,EAAOiC,YAEjBH,E,sCCZF,SAASI,EAAT,GAQH,IAPFC,EAOC,EAPDA,YAOC,IANDC,kBAMC,MANY,aAMZ,MALDC,oBAKC,MALc,aAKd,MAJDC,mBAIC,MAJa,aAIb,MAHDC,eAGC,MAHS,aAGT,MAFDC,sBAEC,MAFgB,0BAEhB,MADDC,oBACC,MADc,sBACd,IACqBC,IAAbC,EADR,sBAEgBpB,EAAe,UAAzBT,EAFN,sBAGkBS,EAAe,YAA3BR,EAHN,sBAIYQ,EAAe,MAArBN,EAJN,oBAiDD,OA3CkB2B,sBAAW,uCAC3B,WAAOC,GAAP,SAAAC,EAAA,sEAEIH,EAAUP,GAAY,GAF1B,SAGUC,IAHV,uBAI2BF,EAAY,aACjCrB,SACAC,WACAgC,WAAY9B,GACT4B,IART,cAWiBG,MACXC,IAAQC,QAAQV,GAZtB,kDAeIW,IAAaC,MAAM,CACjBH,QAASR,EACTY,YAAaC,KAAKC,UAAU,KAAEN,SAC9BO,UAAW,eAEbC,QAAQL,MAAR,MACAb,IArBJ,mCAuBUD,IAvBV,eAwBIK,EAAUP,GAAY,GAxB1B,6EAD2B,sDA4B3B,CACEA,EACAD,EACAM,EACA3B,EACAC,EACAE,EACA0B,EACAH,EACAH,EACAC,EACAC,I,aChEC,SAASmB,EAAe5C,EAAQC,GAAW,IAAD,IACZ4C,YAAYnE,EAAUoE,IAAV,UAAiB7C,EAAjB,YAA6BD,EAA7B,qBAAwD,CACrG+C,sBAAuB,CAAEC,wBAAwB,KAFJ,mBACxCC,EADwC,KAC9BC,EAD8B,KACrBZ,EADqB,KAkB/C,OAbIA,IACFD,IAAaC,MAAM,CACjBH,QAAS,iEACTI,YAAaC,KAAKC,UAAUH,GAC5BI,UAAW,eAEbC,QAAQL,MAAMA,IAGZY,GACFP,QAAQQ,IAAI,0BAA2B,gBAGzC,iBAAOF,QAAP,IAAOA,OAAP,EAAOA,EAAUf,cAAjB,QAA2B,GClBtB,SAASkB,EAAapD,EAAQC,GAAW,IAAD,IACV4C,YAAYnE,EAAUoE,IAAV,UAAiB7C,EAAjB,YAA6BD,EAA7B,mBAAsD,CACnG+C,sBAAuB,CAAEC,wBAAwB,KAFN,mBACtCC,EADsC,KAC5BC,EAD4B,KACnBZ,EADmB,KAkB7C,OAbIA,IACFD,IAAaC,MAAM,CACjBH,QAAS,oEACTI,YAAaC,KAAKC,UAAUH,GAC5BI,UAAW,eAEbC,QAAQL,MAAMA,IAGZY,GACFP,QAAQQ,IAAI,wBAAyB,gBAGvC,iBAAOF,QAAP,IAAOA,OAAP,EAAOA,EAAUf,cAAjB,QAA2B,GCpBtB,SAASmB,EAAkBnE,EAAOC,GAAU,IAAD,EACnCsB,EAAe,MAArBN,EADyC,sBAEJd,oBAAS,GAFL,mBAEzCiE,EAFyC,KAEzBC,EAFyB,KAShD,OAJA/D,qBAAU,WAAO,IAAD,EACd+D,GAAuB,OAALrE,QAAK,IAALA,OAAA,EAAAA,EAAOsE,eAAP,OAAsBrE,QAAtB,IAAsBA,GAAtB,UAAsBA,EAAUgB,UAAhC,aAAsB,EAAesD,SACtD,CAACvE,EAAOiB,EAAIhB,IAERmE,E,YCJF,SAAS1B,IAAc,IAAD,EACKnB,EAAe,aADpB,mBACpBf,EADoB,KACTgE,EADS,OAEGjD,EAAe,WAFlB,mBAEpBd,EAFoB,KAEXgE,EAFW,KAI3BnE,qBAAU,WACRkE,EAAWE,OAAOC,OAAOlE,GAASmE,MAAK,SAACC,GAAD,OAAOA,QAC7C,CAACpE,EAAS+D,IASb,MAAO,CAAChE,EAPU,SAACsE,EAAKC,GACtBN,GAAW,SAACE,GAAD,mBAAC,eACPA,GADM,kBAERG,EAAMC,QAImBtE,GCpBzB,SAASuE,EAAM/E,GAAU,IAAD,EAChBsB,EAAe,MAArBN,EADsB,sBAEOd,mBAAS,IAFhB,mBAEtB8E,EAFsB,KAEVC,EAFU,KAS7B,OAJA5E,qBAAU,WACR4E,EAAa,OAACjF,QAAD,IAACA,OAAD,EAACA,EAAUgB,MACvB,CAAChB,EAASgB,IAENgE,E,aCZM,MAA0B,iD,OCqC1BE,MAhCf,WACE,OACE,eAAC,IAAD,CAAQC,UAAU,OAAlB,UACE,qBAAKA,UAAU,uBAAf,SACE,cAAC,IAAD,CAAOC,IAAKC,EAAMF,UAAU,aAAaG,SAAS,EAAOC,IAAI,2BAE/D,sBAAKJ,UAAU,mBAAf,UACE,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,yBACA,gC,qDC5BKK,EAAa,CACxBC,QAAQ,GAAD,OAAK1G,kBAAL,oBACP2G,MAAM,GAAD,OAAK3G,kBAAL,mBAMM4G,EAAW,CACtBC,YAAa,CACXC,MAAO,cACPC,MAAO,OAETC,YAAa,CACXF,MAAO,cACPC,MAAO,SAETE,QAAS,CACPH,MAAO,UACPC,MAAO,WAET,YAAa,CACXD,MAAO,SACPC,MAAO,WAET,aAAc,CACZD,MAAO,MACPC,MAAO,WAETG,MAAO,CACLJ,MAAO,QACPC,MAAO,UAETI,QAAS,CACPL,MAAO,UACPC,MAAO,QAETK,SAAU,CACRN,MAAO,YACPC,MAAO,QAETM,QAAS,CACPP,MAAO,WACPC,MAAO,QAETO,OAAQ,CACNR,MAAO,UACPC,MAAO,UAETQ,WAAY,CACVT,MAAO,oBACPC,MAAO,aAOES,EAAa,IAAIC,MAAM,IAAIC,KAAK,GAAGC,KAAI,SAACC,EAAGC,GAAJ,OAAcD,EAAIC,KAEzDC,EAAU,6BAEVC,EAAyB,CACpCC,EAAG,YACHC,EAAG,cACHC,EAAG,WACHC,EAAG,SACHC,EAAG,eACHC,EAAG,aACHC,EAAG,YACHC,EAAG,UACHC,EAAG,WACHC,EAAG,eACHC,GAAI,aACJC,GAAI,WACJC,GAAI,kBACJC,GAAI,iBACJC,GAAI,SACJC,GAAI,UACJC,GAAI,aACJC,GAAI,WACJC,GAAI,YACJC,GAAI,SACJC,GAAI,WACJC,GAAI,WACJC,GAAI,cACJC,GAAI,YACJC,GAAI,WAMOC,GACA,YADAA,GAEO,mBAFPA,GAGM,kBAHNA,GAIC,aAMDC,GACA,CACTC,MAAO,QACPhD,MAAO,QACPiD,KAAM,OACNC,WAAY,aACZC,QAAS,UACTC,UAAW,aAPFL,GASO,CAChBC,MAAO,QACPhD,MAAO,QACPqD,WAAY,aACZC,cAAe,gBACfC,WAAY,aACZC,iBAAkB,mBAClBC,WAAY,aACZL,UAAW,aAjBFL,GAmBM,CACfC,MAAO,QACPhD,MAAO,QACP0D,WAAY,aACZC,UAAW,YACXC,MAAO,QACPC,YAAa,cACbC,OAAQ,SACRV,UAAW,aA3BFL,GA6BC,CACVC,MAAO,QACPhD,MAAO,QACP+D,eAAgB,iBAChBC,QAAS,UACTC,QAAS,UACTL,MAAO,QACPR,UAAW,a,mBC3IFc,GAAW,CACtBC,WAAYrK,EAAUsK,cAAc,cACpCC,eAAgBvK,EAAUsK,cAAc,kBACxCE,SAAUxK,EAAUsK,cAAc,YAClCG,UAAWzK,EAAUsK,cAAc,aACnCI,SAAU1K,EAAUsK,cAAc,YAClCK,UAAW3K,EAAUsK,cAAc,cAGxBM,GAAgB,CAC3BC,YAAa7K,EAAUsK,cAAc,uBACrCQ,cAAe9K,EAAUsK,cAAc,yBACvCS,aAAc/K,EAAUsK,cAAc,wBACtCU,aAAchL,EAAUsK,cAAc,wBACtCW,cAAejL,EAAUsK,cAAc,0BAG5BY,GAAuB,CAClCL,YAAa7K,EAAUsK,cAAc,6BACrCa,kBAAmBnL,EAAUsK,cAAc,mCAC3Cc,eAAgBpL,EAAUsK,cAAc,gCACxCe,cAAerL,EAAUsK,cAAc,+BACvCS,aAAc/K,EAAUsK,cAAc,+BAG3BgB,GAAkB,CAC7BT,YAAa7K,EAAUsK,cAAc,6BACrCiB,YAAavL,EAAUsK,cAAc,6BACrCkB,WAAYxL,EAAUsK,cAAc,4BACpCmB,YAAazL,EAAUsK,cAAc,6BACrCoB,iBAAkB1L,EAAUsK,cAAc,kCAC1CW,cAAejL,EAAUsK,cAAc,gCAG5BqB,GAAiB,CAC5Bd,YAAa7K,EAAUsK,cAAc,uBACrCsB,yBAA0B5L,EAAUsK,cAAc,oCAClDuB,kBAAmB7L,EAAUsK,cAAc,6BAC3CwB,iBAAkB9L,EAAUsK,cAAc,4BAC1CyB,aAAc/L,EAAUsK,cAAc,wBACtC0B,UAAWhM,EAAUsK,cAAc,sBAQxB2B,GAAS,SAAC3K,GACrB,OAAQA,GACN,KAAK0H,GACH,OAAO4B,GACT,KAAK5B,GACH,OAAOkC,GACT,KAAKlC,GACH,OAAOsC,GACT,KAAKtC,GACH,OAAO2C,GACT,QACE,MAAMO,MAAM,eAAD,OAAgB5K,EAAhB,sB,mBCxDjB,SAAS6K,GAAT,GAAuC,IAApB3I,EAAmB,EAAnBA,QAAS4I,EAAU,EAAVA,OAC1B,OACE,eAAC,IAAD,CAAOzG,UAAW0G,aAAK,UAAWD,GAAU,mBAA5C,UACE,cAAC,KAAD,IACCE,QAAQ9I,IAAY,cAAC,IAAW+I,KAAZ,UAAkB/I,OAU7C2I,GAAQK,aAAe,CACrBJ,QAAQ,GAGKD,UClBf,SAASM,GAAT,GAAiE,IAA1CC,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,MAAOhH,EAAwB,EAAxBA,UAAWiH,EAAa,EAAbA,UAC3CC,EAAY,cAElB,OACE,cAAC,IAAWN,KAAZ,CACE5G,UAAW0G,aACTQ,EACAD,GAAS,UAAOC,EAAP,eACTF,GAAK,UAAOE,EAAP,WACLlH,GALJ,SAQG+G,IAWQI,sBAAKL,ICvBpB,SAASM,GAAT,GAA6D,IAA5CL,EAA2C,EAA3CA,SAAUC,EAAiC,EAAjCA,MAAOK,EAA0B,EAA1BA,KAAMrH,EAAoB,EAApBA,UAAWsH,EAAS,EAATA,MACjD,OACE,eAAC,IAAWF,MAAZ,CAAkBE,MAAOA,EAAOtH,UAAW0G,aAAK,QAASM,GAAS,eAAgBhH,GAAlF,UACG2G,QAAQU,IAASA,EACjBN,KAaPK,GAAMP,aAAe,CACnB7G,UAAW,GACXsH,MAAO,GAGMH,sBAAKC,IC+ELG,OA3Ff,YAAwC,IAAbC,EAAY,EAAZA,SACnBC,EAAUC,cADqB,EAEfpK,IAAbC,EAF4B,sBAGFxC,oBAAS,GAHP,mBAG9B4M,EAH8B,KAGnBC,EAHmB,OAIL7M,oBAAS,GAJJ,mBAI9BK,EAJ8B,KAInBgE,EAJmB,OAKTrE,mBAAS,MALA,mBAK9BW,EAL8B,KAKtBmM,EALsB,KAO/BC,EAAetK,uBAAY,WAC/BoK,GAAc,KACb,IAqCH,OAnCA1M,qBAAU,WAAM,4CACd,4BAAAwC,EAAA,sEAEIH,EAAU,UAAU,GAFxB,SAG2BkH,GAASG,eAAe,CAAEmD,SAAUP,EAASO,WAHxE,QAGUC,EAHV,QAIiBpK,KAAKlC,QAChBmM,EAAUG,EAASpK,KAAKlC,QAL9B,gDAQIqC,IAAaC,MAAM,CACjBH,QAAS,uDACTI,YAAaC,KAAKC,UAAU,KAAEN,SAC9BO,UAAW,eAEbC,QAAQL,MAAR,MACA4J,GAAc,GAdlB,yBAgBIxI,GAAW,GACX7B,EAAU,UAAU,GAjBxB,6EADc,sBAsBVoK,GAtBW,WAAD,wBAuBZM,KAED,CAACN,IAWF,eAAC,WAAD,WACE,cAAC,KAAD,CAAQO,KAAK,UAAUC,QAAS,kBAAMP,GAAc,IAApD,wBAGCD,GACC,cAAC,KAAD,CACES,MAAK,wBAAmBZ,EAASY,OACjCC,QAASV,EACTW,SAAUR,EACVS,KAlBc,WAChB7M,EACF+L,EAAQe,KAAR,WAAiB9M,IAEjBmC,IAAQ4K,KAAK,mDAUX,SAME,eAAC,WAAD,WACE,cAAC,IAAD,CACErI,IAAKoH,EAASY,MACdnI,IAAG,UAAKI,EAAWC,QAAhB,sBAAqCkH,EAAS7L,SAA9C,QACH+M,SAAQ,UAAKrI,EAAWC,QAAhB,8BAGTlF,EACC,eAAC,WAAD,WACE,cAAC,GAAD,6CACA,cAAC,GAAD,CAASyC,QAAQ,aAAa4I,QAAM,OAGtC,gCACE,eAAC,GAAD,CAAOzG,UAAU,SAAjB,gCAA8CtE,KAC9C,cAAC,GAAD,sF,oBCjFhB,SAASiN,GAAT,GAAwD,IAA/BF,EAA8B,EAA9BA,KAAMzI,EAAwB,EAAxBA,UAAW4I,EAAa,EAAbA,UACxC,OACE,cAAC,KAAD,CAAU5I,UAAW0G,aAAK,iBAAkB1G,GAAY6I,UAAQ,EAACC,cAAe,KAAhF,SACGL,EAAKM,MAAMxH,KAAI,SAACyH,EAAMvH,GAAP,OACd,sBAAKzB,UAAW0G,aAAK,uBAAwBkC,GAA7C,UACE,cAAC,IAAD,CACE5I,UAAU,wBACVC,IACY,IAAVwB,EAAA,UACOpB,EAAWC,QADlB,sBACuCmI,EAAK9M,SAD5C,kBAEO0E,EAAWE,MAFlB,qBAEoCkI,EAAK9M,SAFzC,YAEqD8F,EAFrD,QAIFiH,SAAQ,UAAKrI,EAAWE,MAAhB,2BACRH,IAAK4I,IAEP,cAAC,IAAWC,UAAZ,CAAsBjJ,UAAU,4BAAhC,SAA6DgJ,MAXDA,QA4BtEL,GAAc9B,aAAe,CAC3B7G,UAAW,GACX4I,UAAW,IAGED,UCGAO,OAvCf,YAAmC,IAAb1B,EAAY,EAAZA,SAAY,EACGzM,oBAAS,GADZ,mBACzB4M,EADyB,KACdC,EADc,KAG1BE,EAAe,WACnBF,GAAc,IAGhB,OACE,eAAC,WAAD,WACE,cAAC,KAAD,CAAQM,KAAK,UAAUC,QAAS,kBAAMP,GAAc,IAAOP,KAAM,cAAC8B,GAAA,EAAD,IAAjE,oBAGCxB,GACC,cAAC,KAAD,CACES,MAAK,iBAAYZ,EAASY,OAC1BC,QAASV,EACTW,SAAUR,EACV9H,UAAU,cACVoJ,OAAQ,CACN,cAAC,KAAD,CAAoBjB,QAASL,EAA7B,mBAAY,UANhB,SAWE,cAAC,GAAD,CAAeW,KAAMjB,UCsBhB6B,OA5Cf,WACE,OACE,eAAC,IAAOC,QAAR,CAAgBtJ,UAAU,YAA1B,UACE,cAAC,IAAWoH,MAAZ,wBACA,cAAC,IAAW6B,UAAZ,gDAEA,cAAC,IAAD,CAAOM,KAAM,CAAC,EAAG,IAAKC,MAAI,EAACC,MAAM,QAAjC,SACGnK,OAAOC,OAAOmK,GAAUnI,KAAI,SAACoI,GAAD,OAC3B,eAAC,IAAD,CAEEC,WAAS,EACTC,MAAO,CAAEC,MAAO,KAChBC,MACE,cAAC,IAAD,CACE3J,IAAKuJ,EAAKvB,MACVnI,IAAG,UAAKI,EAAWC,QAAhB,sBAAqCqJ,EAAKhO,SAA1C,QACH+M,SAAQ,UAAKrI,EAAWC,QAAhB,8BARd,UAYE,cAAC,IAAK0J,KAAN,CAAW5B,MAAOuB,EAAKvB,MAAOnK,YAAa0L,EAAKM,UAChD,cAAC,IAAD,IACA,cAAC,IAAKD,KAAN,CAAW/L,YAAW,eAAU0L,EAAKO,IAAf,YAAsBP,EAAKQ,IAA3B,gBACtB,cAAC,IAAKH,KAAN,CAAW/L,YAAW,gCAA2B0L,EAAKS,eACtD,cAAC,IAAD,IACA,cAAC,IAAD,CAAOZ,MAAI,EAACD,KAAM,CAAC,EAAG,GAAtB,SACGI,EAAKU,KAAK9I,KAAI,SAAC+I,GAAD,eACb,cAAC,IAAD,CAAqC3J,MAAK,UAAEH,EAAS8J,UAAX,aAAE,EAAe3J,MAA3D,mBACGH,EAAS8J,UADZ,aACG,EAAe5J,OADlB,UAAaiJ,EAAK5B,SAAlB,YAA8BuC,SAKlC,cAAC,IAAD,IACA,eAAC,IAAD,WACE,cAAC,GAAD,CAAY9C,SAAUmC,IACrBhD,QAAQgD,EAAKY,YAAc,cAAC,GAAD,CAAiB/C,SAAUmC,SA1BpDA,EAAKhO,mB,8BCFf,SAAS6O,GAAOC,EAAOC,GAC5B,OAAOvQ,EAAKwQ,2BAA2BF,EAAOC,GCPhD,IAAME,GAAS,CACbC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAEhBE,GAAa,CACjBD,WAAY,CAAEE,OAAQ,EAAGH,KAAM,IAoElBI,OAjEf,WACE,IAAMzD,EAAUC,cADD,EAEgBvL,EAAe,mBAArCgP,EAFM,sBAIWpQ,mBAAS,MAJpB,mBAIRiD,EAJQ,KAIDoN,EAJC,OAKWrQ,mBAAS,IALpB,mBAKR0P,EALQ,KAKDY,EALC,OAMiBtQ,mBAAS,IAN1B,mBAMR2P,EANQ,KAMEY,EANF,KAiBTC,EAAc,uCAAG,8BAAA7N,EAAA,6DACrB0N,EAAS,IADY,kBAGIZ,GAAOC,EAAOC,GAHlB,QAInB,QADM1C,EAHa,cAInB,IAAIA,GAAJ,UAAIA,EAAUwD,YAAd,aAAI,EAAgBC,OAClBN,GAAmB,GACnB1D,EAAQe,KAAK,WANI,gDASnB4C,EAAS,KAAMvN,SATI,yDAAH,qDAapB,OACE,cAAC,IAAOyL,QAAR,CAAgBtJ,UAAU,QAA1B,SACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,cAAf,SACE,cAAC,IAAD,CAAOC,IAAKC,EAAMC,SAAS,MAG5BwG,QAAQ3I,IACP,cAAC,KAAD,CAAOH,QAAQ,QAAQI,YAAaD,EAAOkK,KAAK,QAAQwD,UAAQ,EAAC1L,UAAU,uBAE7E,eAAC,KAAD,2BACM4K,IADN,IAEEA,OAAO,aACPe,KAAK,UACLC,eApCe,SAAChO,GAClBA,EAAK6M,OACPY,EAASzN,EAAK6M,MAAMoB,QAElBjO,EAAK8M,UACPY,EAAY1N,EAAK8M,SAASmB,SAgCtB7L,UAAU,cACV8L,aAAa,MANf,UAQE,cAAC,KAAKC,KAAN,2BAAef,IAAf,IAA2BtK,MAAM,SAASiL,KAAK,QAAQ3L,UAAU,mBAAjE,SACE,cAAC,KAAD,CAAOkI,KAAK,aAEd,cAAC,KAAK6D,KAAN,2BAAef,IAAf,IAA2BtK,MAAM,WAAWiL,KAAK,WAAW3L,UAAU,mBAAtE,SACE,cAAC,KAAD,CAAOkI,KAAK,gBAEd,qBAAKlI,UAAU,qBAAf,SACE,cAAC,KAAD,CAAQkI,KAAK,UAAUC,QAASoD,EAAhC,+BClDCS,GAAgB,SAACtQ,GAC5B,OAAOA,GAA4B,IAAlBA,EAAOuQ,QAQbC,GAAgB,SAACC,GAC5B,OAAOA,EAAKC,KAAKC,MAAMD,KAAKE,SAAWH,EAAKF,UAQjCM,GAAa,SAACC,GACzB,OAAOhR,KAAKC,MAAkB,IAAV+Q,GAQTC,GAAqB,SAACC,GAAY,IAAD,EAC5C,iBACE,CACEC,EAAG,MACHC,EAAG,OACHC,EAAG,QACHC,EAAG,SACHC,EAAG,OACHC,EAAG,SACHC,EAAG,OACHC,EAAG,SACHC,EAAG,SACHC,EAAG,OACHC,EAAG,cACHC,EAAG,QACHC,EAAG,WACHC,EAAG,SACHC,EAAG,SACHC,EAAG,QAGHC,EAAG,MACHC,EAAG,OACHC,EAAG,QACHC,EAAG,SACHC,EAAG,OACHC,EAAG,SACHC,EAAG,OACHC,EAAG,OACHC,EAAG,SACHC,EAAG,UACH1B,UA9BJ,QA8Be,QASJ2B,GAAoB,SAAC3B,GAAY,IAAD,EAC3C,iBACE,CACE,MACA,OACA,QACA,SACA,OACA,SACA,OACA,SACA,SACA,OACA,cACA,QACA,WACA,SACA,SACA,SACAA,UAlBJ,QAkBe,QC1GjB,SAAS4B,GAAT,GAAmC,IAAZzQ,EAAW,EAAXA,QACrB,OACE,eAAC,IAAOyL,QAAR,CAAgBtJ,UAAU,eAA1B,UACE,cAAC,KAAD,CAAMuJ,KAAK,UACX,cAAC,IAAW3C,KAAZ,UAAkB/I,OASxByQ,GAAYzH,aAAe,CACzBhJ,QAAS,iBAGIyQ,UCjBf,SAASC,GAAT,GAA8C,IAAzB1Q,EAAwB,EAAxBA,QAASI,EAAe,EAAfA,YAC5B,OACE,qBAAK+B,UAAU,8BAAf,SACE,cAAC,KAAD,CAAOnC,QAASA,EAASI,YAAaA,EAAaiK,KAAK,QAAQwD,UAAQ,MAU9E6C,GAAU1H,aAAe,CACvBhJ,QAAS,mCACTI,YAAa,qDAGAsQ,UCTf,SAASC,GAAT,GAAgG,IAAtE/F,EAAqE,EAArEA,KAAMgG,EAA+D,EAA/DA,MAAOC,EAAwD,EAAxDA,aAAc3H,EAA0C,EAA1CA,SAAU/G,EAAgC,EAAhCA,UAAW2O,EAAqB,EAArBA,WAAY3H,EAAS,EAATA,MACpF,KAAI,OAACyB,QAAD,IAACA,OAAD,EAACA,EAAM9M,WAAY+S,IAAiBD,EACtC,OAAO,cAAC,GAAD,IAGT,IAAKA,EACH,OAAO,cAAC,GAAD,CAAW5Q,QAAQ,mCAA6BI,YAAY,0CAGrE,IAAMiJ,EAAY,kBAElB,OACE,eAAC,IAAOoC,QAAR,CACEtJ,UAAW0G,aACTQ,EACAyH,GAAU,UAAOzH,EAAP,iBACVF,GAAK,UAAOE,EAAP,WACLlH,GALJ,UAQE,sBAAMA,UAAS,UAAKkH,EAAL,WAAf,SAAyCuB,EAAKL,QAC7CrB,KAePyH,GAAe3H,aAAe,CAC5B6H,aAAc,GACd1O,UAAW,GACX2O,YAAY,EACZF,MAAO,GACPzH,OAAO,GAGMG,sBAAKqH,I,8BC1DL,OAA0B,oCCQzC,SAASI,GAAT,GAAgG,IAAD,IAA7EC,UAA6E,MAAxE,GAAwE,MAApEtF,YAAoE,MAA7D,QAA6D,MAApDuF,aAAoD,MAA5C,SAA4C,MAAlC1O,WAAkC,MAA5B,SAA4B,MAAlBJ,iBAAkB,MAAN,GAAM,EAC7F,OACE,cAAC,KAAD,CACEA,UAAW0G,aAAK,SAAU1G,GAC1BuJ,KAAMA,EACNuF,MAAOA,EACP1O,IAAKA,EACLH,IACE,qBAAK8O,QAAQ,cAAb,SACE,qBAAKC,KAAMC,GAAO,kBAAcJ,SAe3B1H,sBAAKyH,IC1BpB,SAASM,GAAT,GAAqF,IAAD,IAA7DL,UAA6D,MAAxD,GAAwD,MAApDlD,YAAoD,MAA7C,SAA6C,MAAnCwD,eAAmC,aAAlBnP,iBAAkB,MAAN,GAAM,EAClF,OACE,sBAAKA,UAAW0G,aAAK,eAAgByI,GAAW,yBAA0BnP,GAA1E,UACE,cAAC,GAAD,CAAQ6O,GAAIA,EAAI7O,UAAU,yBAC1B,qBAAKA,UAAU,qBAAf,SAAqC2L,OAK3CiD,GAAOQ,UAAY,CACjBP,GAAIQ,KAAUC,OACd3D,KAAM0D,KAAUE,OAChBJ,QAASE,KAAUG,KACnBxP,UAAWqP,KAAUE,QAGRpI,sBAAK+H,I,2DCsDL,O,WA3Eb,aAAe,qBACbO,KAAKC,MAAQ,GACbD,KAAKE,WAAY,EACjBF,KAAKG,QAAU,kBAEfH,KAAKI,O,yCAGP,WAEE,OADAJ,KAAKK,OACEL,KAAKM,Q,iBAGd,SAAIrQ,GAKF,OAJI+P,KAAKE,WACPF,KAAKK,OAGHpQ,EACK+P,KAAKC,MAAMhQ,IAAQ,KAErB+P,KAAKC,Q,kBAGd,WACE,IAAMM,EAAe9R,KAAK+R,MAAM3V,OAAO0V,aAAaE,QAAQT,KAAKG,UAC7DI,IACFP,KAAKC,MAAQM,EACbP,KAAKE,WAAY,K,iBAMrB,SAAIhQ,GACE8P,KAAKE,WACPF,KAAKK,OAGP,IAAM5H,SAAcvI,EACP,WAATuI,GAA8B,WAATA,GAMJ,kBAAVvI,EACT8P,KAAKC,MAAM/P,IAAU8P,KAAKC,MAAM/P,IAGhCL,OAAO6Q,QAAQxQ,GAAOyQ,SAAQ,YAAkB,IAAD,mBAAf1Q,EAAe,KAAV2Q,EAAU,KAChC,OAATA,QAA0BC,IAATD,UACZ1Q,EAAMD,MAIjB+P,KAAKC,MAAL,2BACKD,KAAKC,OACL/P,IAIP8P,KAAKc,QArBHlS,QAAQL,MAAM,mE,kBAwBlB,WACMyR,KAAKE,WACPF,KAAKK,OAGPxV,OAAO0V,aAAaQ,QAAQf,KAAKG,QAAS1R,KAAKC,UAAUsR,KAAKC,QAC9DD,KAAKK,W,MCqGMW,OA7Jf,YAAkC,IAAlB5V,EAAiB,EAAjBA,QAAS4N,EAAQ,EAARA,KAAQ,EACAnL,IADA,mBACxBlC,EADwB,KACbmC,EADa,OAEdpB,EAAe,UAAzBT,EAFwB,sBAGZS,EAAe,YAA3BR,EAHwB,sBAIbQ,EAAe,MAAxBuU,EAJsB,sBAKPvU,EAAe,YAA9BwU,EALsB,sBAOiB5V,mBAASqG,GAP1B,mBAOxBwP,EAPwB,KAONC,EAPM,OAQK9V,mBAASmR,GAAc9K,IAR5B,mBAQxB0P,EARwB,KAQZC,EARY,OASHhW,mBAAS,IATN,mBASxBiW,EATwB,KAShBC,EATgB,OAUKlW,oBAAS,GAVd,mBAUxBmW,EAVwB,KAUZC,EAVY,OAYqBpW,mBAAS,MAZ9B,mBAYxBqW,EAZwB,KAYJC,EAZI,KAe/BnW,qBAAU,WACR,IAAMoW,EAAchS,OAAOC,OAAO1E,GAAS0W,QAAO,SAACC,EAAKC,GAEtD,OADAD,EAAIC,EAAEC,WAAY,EACXF,IACN,IAEGG,EAAsBvQ,EAAWwQ,QAAO,SAACF,GAAD,YAAwCpB,IAA1BgB,EAAYI,MAEpEC,EAAoBlX,SAASqW,KAAgBM,GAC/CL,EAAc7E,GAAcyF,IAG9Bd,EAAoBc,KACnB,CAAC9W,IAGJK,qBAAU,WACR,IAIwB,EAJlB2W,EAAa7B,GAAaD,IAAI,YAC9B+B,EAAO9B,GAAaD,IAAI,MACxBgC,EAAW/B,GAAaD,IAAI,UAE9B8B,GAAcC,IAChBf,EAAcf,GAAaD,IAAI,aAC/BkB,EAAS,UAACjB,GAAaD,IAAI,aAAlB,QAA2B,IACpCsB,EAAsBQ,GAElBE,IAAarW,GACfyV,GAAc,MAGjB,IAEH,IAAMa,EAAmBxU,uBAAY,WACnC,IAAMiE,EAAQmP,EAAiBqB,QAAQnB,GACjCoB,EAAqB,IAAVzQ,EAAcmP,EAAiB3E,OAAS,EAAIxK,EAAQ,EACrEsP,EAAcH,EAAiBsB,MAC9B,CAACtB,EAAkBE,IAEhBqB,EAAe3U,uBAAY,WAC/B,IAAMiE,EAAQmP,EAAiBqB,QAAQnB,GACjCoB,EAAWzQ,IAAUmP,EAAiB3E,OAAS,EAAI,EAAIxK,EAAQ,EACrEsP,EAAcH,EAAiBsB,MAC9B,CAACtB,EAAkBE,IAEhBsB,EAAc5U,sBAAW,sBAAC,4BAAAE,EAAA,sEAE5BH,EAAU,cAAc,GAFI,SAGLkH,GAASK,UAAU,CACxCpJ,SACAC,WACAgC,WAAYqT,EACZqB,eAAgBvB,IAPU,OAGtB9I,EAHsB,OAU5B0I,EAAM1I,EAASpK,KAAK+N,MACpBgF,EAAY3I,EAASpK,KAAK8T,UAC1B1B,GAAasC,IAAI,CACfzW,GAAImM,EAASpK,KAAK+N,KAClB+F,SAAU1J,EAASpK,KAAK8T,SACxBhW,WAf0B,kDAkB5BqC,IAAaC,MAAM,CACjBH,QAAS,2EACTI,YAAaC,KAAKC,UAAU,KAAEN,SAC9BO,UAAW,eAEbC,QAAQL,MAAR,MAvB4B,yBAyB5BT,EAAU,cAAc,GAzBI,6EA2B7B,CAAC7B,EAAQC,EAAUqV,EAAQF,IAE9B,OACE,sBAAK9Q,UAAU,aAAf,UACE,cAAC,IAAD,CACEI,IAAG,OAAEqI,QAAF,IAAEA,OAAF,EAAEA,EAAML,MACXnI,IAAG,UAAKI,EAAWC,QAAhB,6BAAqCmI,QAArC,IAAqCA,OAArC,EAAqCA,EAAM9M,SAA3C,QACH+M,SAAQ,UAAKrI,EAAWC,QAAhB,4BACRN,UAAU,2BAEZ,oBAAIA,UAAU,oBAAd,SACG2G,QAAQyK,GAAsB,sBAAwB,yBAEzD,sBAAKpR,UAAU,+BAAf,UACE,cAAC,KAAD,CAAQkI,KAAK,SAASC,QAAS6J,EAAkBhS,UAAU,gCAA3D,SACE,cAACuS,GAAA,EAAD,MAEF,qBAAKxD,QAAQ,cAAc/O,UAAU,qCAArC,SACE,qBAAKgP,KAAMC,GAAO,kBAAc6B,OAElC,cAAC,KAAD,CAAQ5I,KAAK,SAASC,QAASgK,EAAcnS,UAAU,gCAAvD,SACE,cAACwS,GAAA,EAAD,SAIH7L,QAAQyK,GACP,cAAC,KAAD,CACEpR,UAAU,2BACVkI,KAAK,UACLrK,QAAQ,2DAGV,cAAC,KAAD,CACEmC,UAAU,2BACVkI,KAAK,UACLrK,QAAQ,oGAIX8I,QAAQuK,IACP,cAAC,KAAD,CACElR,UAAU,2BACVkI,KAAK,QACLrK,QAAQ,sKAIZ,cAAC,KAAD,CACEmC,UAAU,yBACVyS,SAAU,SAACC,GAAD,OAAOzB,EAAUyB,EAAEC,OAAOhT,QACpCiT,YAAY,kBACZjT,MAAOqR,EACP6B,UAAW,GACXC,OACE,cAAC,KAAD,CAAS1K,MAAM,8BAAf,SACE,cAAC2K,GAAA,EAAD,QAIN,cAAC,KAAD,CACE/S,UAAU,0BACVkI,KAAK,UACL8K,UAAWrM,QAAQqK,IAAW5V,EAC9B+M,QAASiK,EAJX,SAMGhX,EAAY,cAAC,KAAD,CAAMmO,KAAK,UAAa,uB,UC9J7C,SAAS0J,GAAT,GAAkD,IAA7BlM,EAA4B,EAA5BA,SAA4B,IAAlB/G,iBAAkB,MAAN,GAAM,IAC7B7D,EAAe,WAEjC,OAH+C,oBAKxC,cAAC,IAAD,CAAO6D,UAAW0G,aAAK,uBAAwB1G,GAA/C,SAA4D+G,IAF9C,yBAURI,sBAAK8L,IAEb,SAASC,GAAT,GAAyC,IAAlBC,EAAiB,EAAjBA,OAAQzS,EAAS,EAATA,MAAS,EACzBpD,IAAblC,EADsC,oBAE7C,OACE,cAAC,KAAD,CAAQiM,KAAM,cAAC+L,GAAA,EAAD,IAAkBC,QAAM,EAACnL,KAAK,UAAUC,QAASgL,EAAQH,SAAU5X,EAAjF,SACGsF,IAKA,SAAS4S,GAAT,GAA6C,IAAlBH,EAAiB,EAAjBA,OAAQzS,EAAS,EAATA,MACxC,OACE,cAACuS,GAAD,UACE,cAACC,GAAD,CAAaC,OAAQA,EAAQzS,MAAOA,MCyC3B6S,OA/Df,YAAqC,IAAlB9K,EAAiB,EAAjBA,KAAM5N,EAAW,EAAXA,QAAW,EACHyC,IADG,mBAC3BlC,EAD2B,KAChBmC,EADgB,OAEjBpB,EAAe,UAAzBT,EAF2B,sBAGfS,EAAe,YAA3BR,EAH2B,sBAIfQ,EAAe,YAA3BP,EAJ2B,sBAMrBO,EAAe,MAArBN,EAN2B,sBAOfM,EAAe,YAA3BL,EAP2B,oBAS5B0X,EAAqBhW,sBAAW,sBAAC,sBAAAE,EAAA,sEAEnCH,EAAU,aAAa,GAFY,SAGZkH,GAASM,SAAS,CACvCrJ,SACAC,aALiC,cAOtBiC,KAAK6V,UAChB5V,IAAQC,QAAQ,yCARiB,gDAWnCC,IAAaC,MAAM,CACjBH,QAAS,0EACTI,YAAaC,KAAKC,UAAU,KAAEN,SAC9BO,UAAW,eAEbC,QAAQL,MAAR,MAhBmC,yBAkBnCT,EAAU,aAAa,GAlBY,4EAoBpC,CAAC7B,EAAQC,EAAU4B,IAEhBmW,EAAapU,OAAOqU,KAAK9Y,GAASoR,OAExC,OACE,sBAAKjM,UAAU,gBAAf,UACE,cAAC,IAAD,CACEI,IAAG,OAAEqI,QAAF,IAAEA,OAAF,EAAEA,EAAML,MACXnI,IAAG,UAAKI,EAAWC,QAAhB,6BAAqCmI,QAArC,IAAqCA,OAArC,EAAqCA,EAAM9M,SAA3C,QACH+M,SAAQ,UAAKrI,EAAWC,QAAhB,8BAGV,qBAAIN,UAAU,SAAd,UAAwBnE,GAAM,SAA9B,OACA,qBAAKkT,QAAQ,cAAc/O,UAAU,wBAArC,SACE,qBAAKgP,KAAMC,GAAO,kBAAcnT,OAElC,oBAAIkE,UAAU,SAAd,mDACA,eAAC,GAAD,CAAWA,UAAU,6BAArB,UACE,eAAC,IAAW4G,KAAZ,CAAiB5G,UAAU,iBAA3B,uCAC0B0T,EAD1B,IACuC9X,EAASsO,OAEhD,cAAC,KAAD,CACEhC,KAAK,UACLmL,QAAM,EACNlL,QAASqL,EACTR,SAAU5X,GAAasY,EAAa9X,EAASsO,IAJ/C,2CCpCO0J,OA1Bf,WACE,OACE,sBAAKC,MAAM,mBAAX,UACE,qBAAKA,MAAM,gCAAX,SACE,qBAAKA,MAAM,8BAGb,qBAAKA,MAAM,gCAAX,SACE,qBAAKA,MAAM,8BAGb,qBAAKA,MAAM,gCAAX,SACE,qBAAKA,MAAM,8BAGb,qBAAKA,MAAM,gCAAX,SACE,qBAAKA,MAAM,8BAGb,qBAAKA,MAAM,gCAAX,SACE,qBAAKA,MAAM,kCCaJC,OAzBf,YAAmC,IAAlBjZ,EAAiB,EAAjBA,QAAS4N,EAAQ,EAARA,KAAQ,EACnBtM,EAAe,MAArBN,EADyB,sBAEbM,EAAe,YAA3BL,EAFyB,oBAIhC,OACE,eAAC,GAAD,CAAgB2S,MAAM,QAAQC,aAAa,QAAQjG,KAAMA,EAAzD,UACE,sBAAKzI,UAAU,cAAf,UACGV,OAAOC,OAAO1E,GAAS0G,KAAI,SAACwS,EAAQtS,GAAT,OAC1B,cAAC,GAAD,CAEEoN,GAAIkF,EAAOrC,SACX/F,KAAMoI,EAAOpI,KACb3L,UAAS,mCAA8ByB,GACvC0N,SAAO,GAJF4E,EAAOpI,SAQf9P,GAAMC,EAAW,cAAC,GAAD,CAASjB,QAASA,EAAS4N,KAAMA,IAAW,cAAC,GAAD,CAAM5N,QAASA,EAAS4N,KAAMA,OAG9F,cAAC,GAAD,Q,iDCtBN,SAASuL,GAAT,GAA4G,IAAjFnZ,EAAgF,EAAhFA,QAAgF,IAAvEoZ,kBAAuE,MAA1D,gBAA0D,MAAzCC,wBAAyC,MAAtB,mBAAsB,EACnGC,EAAe7U,OAAOC,OAAO1E,GAAS+W,QAAO,SAACmC,GAAD,OAAYA,EAAOnX,SAEtE,OAA4B,IAAxBuX,EAAalI,OACR,yBAIP,sBAAKjM,UAAU,mBAAf,UACE,cAAC,KAAUoU,MAAX,CAAiB7K,KAAK,QAAtB,SACG4K,EAAa5S,KAAI,SAACwS,GAAD,OAChB,cAAC,GAAD,CAA0BlF,GAAIkF,EAAOrC,UAAxBqC,EAAOpI,WAGxB,uBAAM3L,UAAU,kCAAhB,UACE,cAAC,IAAW4G,KAAZ,UAAkBuN,EAAalI,OAAS,EAAIiI,EAAmBD,IAC/D,cAACI,GAAA,EAAD,CAAYrU,UAAU,+CAY9BgU,GAAgBnN,aAAe,CAC7BoN,WAAY,gBACZC,iBAAkB,oBAGLF,UCgCAM,OA5Df,YAAmC,IAAlBzZ,EAAiB,EAAjBA,QAAS4N,EAAQ,EAARA,KAAQ,EACZnL,IAAblC,EADyB,sBAEbe,EAAe,YAA3BR,EAFyB,oBAG1Be,EAAWD,EAAY5B,GAEvB0Z,EAAYzX,EAAW,CAC3BC,YAAauJ,GAAO3K,GAAUuJ,YAC9BlI,WAAY,WACZI,eAAgB,sDAChBC,aAAc,6DAGVmX,EAAe1X,EAAW,CAC9BC,YAAauJ,GAAO3K,GAAUuJ,YAC9BlI,WAAY,WACZI,eAAgB,qDAChBC,aAAc,6DAGhB,OAAI,OAACoL,QAAD,IAACA,OAAD,EAACA,EAAM9M,UAKT,eAAC,IAAO2N,QAAR,CAAgBtJ,UAAU,QAA1B,UACE,cAAC,IAAWoH,MAAZ,CAAkBpH,UAAU,SAA5B,4BAEA,cAAC,GAAD,CAAeyI,KAAMA,EAAMzI,UAAU,kBAAkB4I,UAAU,gBAEjE,eAAC,IAAD,CAAO5I,UAAU,iBAAjB,UACE,cAAC,KAAD,CACEkI,KAAK,UACLb,KAAM3K,EAAW,cAAC+X,GAAA,EAAD,IAAwB,cAACC,GAAA,EAAD,IACzC1B,SAAU5X,GAAasB,EACvByL,QAAS,kBAAMoM,EAAU,KAJ3B,qDAQA,cAAC,KAAD,CACElN,KAAM3K,EAAW,cAAC+X,GAAA,EAAD,IAAwB,cAACE,GAAA,EAAD,IACzC3B,SAAU5X,GAAasB,EACvByL,QAAS,kBAAMoM,EAAU,KAH3B,kDAOA,cAAC,KAAD,CACErM,KAAK,UACLmL,QAAM,EACNhM,KAAM3K,EAAW,cAAC+X,GAAA,EAAD,IAAwB,cAACG,GAAA,EAAD,IACzC5B,SAAU5X,GAAasB,EACvByL,QAAS,kBAAMqM,EAAa,KAL9B,qBAUF,cAAC,GAAD,CAAiB3Z,QAASA,OAnCrB,cAAC,GAAD,K,UCjCI,OAA0B,4C,6BCkE1Bga,GA7DO,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,SAA+B,IAArB/U,iBAAqB,MAAT,GAAS,EACvDgV,EAAYC,kBAAO,GA4BzB,OACE,cAAC,KAAD,CACEnL,MAAO,IACPoL,OAAQ,IACRC,YA9BoB,SAACzC,GACvBsC,EAAUI,SAAU,EACpB,IAAMC,EAAM3C,EAAEC,OAAO2C,WAAWC,qBAChCR,EAAS,GAAD,oBAAKD,GAAL,CAAY,CAACO,EAAIG,EAAGH,EAAII,OA4B9BC,YAzBoB,SAAChD,GAEvB,GAAKsC,EAAUI,QAAf,CAGA,IACMO,EADQjD,EAAEC,OAAO2C,WACHC,qBAChBK,EAAWd,EAAMA,EAAM7I,OAAS,GAEpC2J,EAAWA,EAASC,OAAO,CAACF,EAAMH,EAAGG,EAAMF,IAG3CX,EAAMgB,OAAOhB,EAAM7I,OAAS,EAAG,EAAG2J,GAClCb,EAASD,EAAMe,YAabE,UAVkB,WACpBf,EAAUI,SAAU,GAUlBpV,UAAW0G,aAAK,mBAAoB1G,GANtC,SAQE,cAAC,KAAD,UACG8U,EAAMvT,KAAI,SAACyU,EAAMxU,GAAP,OACT,cAAC,KAAD,CAEEyU,OAAQD,EACRE,OAAO,UACPC,YAAa,EACbC,QAAS,GACTC,QAAQ,QACRC,yBAAyB,eANpB9U,WCzCjB,SAAS+U,GAAT,GAUI,IATFxP,EASC,EATDA,SACAyP,EAQC,EARDA,OACApN,EAOC,EAPDA,OACAzI,EAMC,EANDA,MACA4I,EAKC,EALDA,KACAkN,EAIC,EAJDA,YACAzW,EAGC,EAHDA,UACA0W,EAEC,EAFDA,gBACAC,EACC,EADDA,gBAEMzP,EAAY,OAEZ0P,EAAUH,EAAchK,GAAuC,kBAAb1F,EAAwBA,EAAS,GAAK,KAAOpG,EAErG,OACE,sBAAKX,UAAW0G,aAAKQ,EAAD,UAAeA,EAAf,aAA6BqC,GAAQvJ,GAAzD,UACE,sBAAMA,UAAW0G,aAAK,GAAD,OAAIQ,EAAJ,wCAA8C0P,GAAWF,GAA9E,SACGF,IAEH,sBAAMxW,UAAS,UAAKkH,EAAL,UAAf,SAAwCH,IACvCqC,GAAU,sBAAMpJ,UAAW0G,aAAK,GAAD,OAAIQ,EAAJ,YAAyByP,GAA9C,SAAiEvN,OAiBlFmN,GAAK1P,aAAe,CAClB2P,OAAQ,QACR7V,MAAO,OACP4I,KAAM,SACNkN,aAAa,EACbzW,UAAW,GACX0W,gBAAiB,GACjBC,gBAAiB,IAGJxP,sBAAKoP,ICNLM,OAtCf,YAA6D,IAAhCC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,gBAAmB,EAChChc,mBAAS,IADuB,mBACnD+Z,EADmD,KAC5CC,EAD4C,KAGlDvI,EAAYwK,oBAAS,CAC3BC,gBAAiB1K,GAAW,IAC5B2K,WAAW,EACXC,SAAU,kBACRJ,EAAgB,CACdhW,QAAS7C,KAAKC,UAAU2W,GACxBsC,OAAQN,EAAWjI,QANjBrC,QAUR,OACE,sBAAKxM,UAAU,yBAAf,UACE,eAAC,GAAD,CACEuJ,KAAK,QACLiN,OAAO,UACPpN,OAAQ/H,MAAK,OAACyV,QAAD,IAACA,OAAD,EAACA,EAAYxP,OAAOhG,KAAK,UAAK+V,KAAK,IAChDrX,UAAU,+BACVW,MAAM,SALR,iBAOGmW,QAPH,IAOGA,OAPH,EAOGA,EAAYQ,KACb,sBAAMtX,UAAU,gCAAhB,SAAiDwM,EAAU,OAE7D,cAAC,GAAD,CAAesI,MAAOA,EAAOC,SAAUA,QCN9BwC,GAnBK,SAAC,GAA+C,IAA7C1c,EAA4C,EAA5CA,QAASuN,EAAmC,EAAnCA,MAAOoP,EAA4B,EAA5BA,YAAazQ,EAAe,EAAfA,SAClD,OACE,sBAAK/G,UAAU,eAAf,UACE,cAAC,GAAD,UAAQoI,IACR,cAAC,KAAD,IACA,cAAC,GAAD,UAAcoP,IACbzQ,EACD,cAAC,GAAD,CAAiBlM,QAASA,QChBjB,OAA0B,yCCQzC,SAAS4c,GAAT,GAMI,IALF1D,EAKC,EALDA,OAKC,IAJDxK,YAIC,MAJM,UAIN,MAHDvJ,iBAGC,MAHW,GAGX,MAFD0X,uBAEC,aADDC,iBACC,SACKzQ,EAAY,cAElB,OACE,uBACElH,UAAW0G,aAAKQ,EAAD,UAAeA,EAAf,aAA6BqC,GAAQoO,GAAS,UAAOzQ,EAAP,eAA+BlH,GAD9F,UAGE,cAAC,GAAD,CAAQ6O,GAAIkF,EAAOrC,SAAU1R,UAAU,sBAAsBuJ,KAAMA,IACnE,sBAAMvJ,UAAU,oBAAhB,SAAqC+T,EAAOpI,OAC3C+L,GACC,uBAAM1X,UAAU,oBAAhB,eAAuC2B,EAAuBoS,EAAOrC,gBAiB9DvK,sBAAKsQ,IChCpB,SAASG,GAAT,GAA0E,IAAnDC,EAAkD,EAAlDA,SAAUnX,EAAwC,EAAxCA,MAAOyW,EAAiC,EAAjCA,SAAUW,EAAuB,EAAvBA,UAAcC,EAAS,2DAC/DvL,EAAYwK,oBAAS,CAC3BC,gBAAiB1K,GAAWsL,GAC5BX,WAAW,EACXC,SAAUW,EAAYX,OAAW7G,IAH3B9D,QAMFwL,EAAY,qBAElB,OACE,eAAC,KAAD,2BAAYD,GAAZ,cACGrX,EADH,IACWoX,GAAa,sBAAM9X,UAAW0G,aAAKsR,EAAD,UAAeA,EAAf,aAA6BD,EAAM7P,OAAxD,SAAkEsE,QAY9FoL,GAAY/Q,aAAe,CACzBgR,SAAU,GACVC,WAAW,GAGEF,UC3Bf,SAASK,GAAT,GAA6C,IAA7B9Y,EAA4B,EAA5BA,KAAMtE,EAAsB,EAAtBA,QAASmF,EAAa,EAAbA,UAC7B,OACE,sBAAKA,UAAWA,EAAhB,UACE,uCAAUb,EAAKwM,QACf,oBAAI3L,UAAU,mCAAd,SACGb,EAAK+Y,QAAQ3W,KAAI,SAAC5D,GAAD,OAChB,oBAAsCqC,UAAU,kCAAhD,SACE,cAAC,GAAD,CAAY+T,OAAQlZ,EAAQ8C,MAD9B,sBAAwBA,SAK5B,eAAC,IAAD,CAAKqC,UAAU,6BAA6BW,MAAM,OAAlD,UACGxB,EAAKgZ,MADR,IACgBhZ,EAAKgZ,MAAQ,EAAI,SAAW,cAMlD,SAASC,GAAT,GAAkG,IAArEC,EAAoE,EAApEA,MAAOC,EAA6D,EAA7DA,cAAeC,EAA8C,EAA9CA,WAAYC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,MAAO5d,EAAqB,EAArBA,QAASkM,EAAY,EAAZA,SACnF,OACE,sBAAK/G,UAAU,qBAAf,UACG2G,QAAO,OAAC8R,QAAD,IAACA,OAAD,EAACA,EAAO9L,IACd,cAACsL,GAAD,CAAMjY,UAAU,gCAAgCb,KAAMsZ,EAAM9L,EAAG9R,QAASA,IAG1E,sBAAKmF,UAAU,2BAAf,UACE,qBAAKA,UAAU,4BAAf,SACE,qBAAKC,IAAKyY,GAAatY,IAAI,aAE7B,sBAAKJ,UAAU,oCAAf,UACE,qBAAKA,UAAU,+BACf,qBAAKA,UAAU,6BAAf,gBAA6CqY,QAA7C,IAA6CA,IAAS,OAGvDtR,EAEAJ,QAAQ2R,KAAmB3R,QAAQ6R,IAClC,cAAC,KAAD,CAAQtQ,KAAK,UAAUC,QAASmQ,EAAetY,UAAU,gCAAzD,SACGuY,IAIJ5R,QAAQ2R,IAAkB3R,QAAQ6R,IACjC,cAAC,GAAD,CACE9X,MAAO6X,EACPrQ,KAAK,UACLC,QAASmQ,EACTnB,SAAUmB,EACVT,SAAUW,EACVV,WAAS,OAKdnR,QAAO,OAAC8R,QAAD,IAACA,OAAD,EAACA,EAAO7L,IACd,cAACqL,GAAD,CAAMjY,UAAU,iCAAiCb,KAAMsZ,EAAM7L,EAAG/R,QAASA,OAejFud,GAAkBvR,aAAe,CAC/B0R,WAAY,aACZC,KAAM,GAGOJ,UCnEAO,OAdf,YAAuD,IAAD,EAA9B5R,EAA8B,EAA9BA,SAAU6R,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WACtC,OAAK9R,EAAS6R,IAIP,iBAACC,QAAD,IAACA,OAAD,EAACA,EAAaD,UAAd,WAAgC,cAAC,WAAD,UAAW7R,EAAS6R,KAHlD,cAAC,GAAD,K,UCqCIE,OAjCf,YAAiE,IAAlCxT,EAAiC,EAAjCA,cAAiC,IAAlBtF,iBAAkB,MAAN,GAAM,IAC1C1C,IAAblC,EADuD,sBAE5Ce,EAAe,WAA1BJ,EAFuD,oBAIxDgd,EAAkBjc,EAAW,CACjCC,YAAauI,EACbtI,WAAY,mBACZI,eAAgB,8BAChBC,aAAc,6EAGhB,OAAKtB,EAGH,cAAC,IAAD,CAAOiE,UAAW0G,aAAK,uBAAwB1G,GAA/C,SACE,cAAC,KAAD,CACEqH,KAAM,cAAC2R,GAAA,EAAD,IACN9Q,KAAK,UACLmL,QAAM,EACNlL,QAAS,kBAAM4Q,EAAgB,KAC/B/F,SAAU5X,EALZ,uCAJiB,0BC4DR6d,OA/Df,YAA8C,IAAzBpe,EAAwB,EAAxBA,QAASD,EAAe,EAAfA,MAAO6N,EAAQ,EAARA,KAC7B/L,EAAWD,EAAY5B,EAASD,GADK,EAE9BuB,EAAe,MAArBN,EAFoC,sBAGnBd,mBAAS,GAHU,mBAGpC6d,EAHoC,KAG9BM,EAH8B,OAIPne,mBAAS,IAJF,mBAIpC+b,EAJoC,KAIxBqC,EAJwB,OAK5BC,aAASC,GAAe,CAAEC,OAAQ,KAA1CC,EALoC,oBAO3Cre,qBAAU,WAAO,IAAD,EACdie,EAAa,UAACte,EAAQgB,GAAI2d,mBAAb,QAA4B,MACxC,CAAC3e,EAASgB,IAEb,IAAMkb,EAAkBja,EAAW,CACjCC,YAAakI,GAAcE,cAC3BnI,WAAY,iBACZC,aAAc,kBAAMic,EAAQ,IAC5B/b,QAAS,kBAAM+b,EAAQ,IACvB9b,eAAgB,oEAChBC,aAAc,oEAQhB,OACE,cAAC,GAAD,CACEoL,KAAMA,EACNgG,MAAK,OAAE7T,QAAF,IAAEA,OAAF,EAAEA,EAAO6T,MACdC,aAAcpL,GAAiBE,KAC/BxD,UAAU,aAJZ,SAME,eAAC,GAAD,CAAc4Y,KAAMA,EAAMC,WAAY,EAAEnc,GAAWA,GAAnD,UAEE,cAAC,GAAD,CACE2b,MAAK,OAAEzd,QAAF,IAAEA,OAAF,EAAEA,EAAOyd,MACdC,cAhBe,WACrBiB,IACAL,EAAQ,IAeFX,WAAW,4CAHb,SAKE,eAAC,GAAD,CAAavR,OAAK,EAAlB,uHAEE,uBAFF,sFAQF,cAAC,GAAD,CAAmB8P,WAAYA,EAAYC,gBAAiBA,IAG5D,eAAC,WAAD,WACE,cAAC,GAAD,CACElc,QAASA,EACTuN,MAAM,UACNoP,YAAY,wEAEd,cAAC,GAAD,CAAqBlS,cAAeL,GAAcK,yB,UCxD5D,SAASmU,GAAT,GAAkE,IAAD,IAA5C1Y,eAA4C,MAAlC,GAAkC,MAA9Bf,iBAA8B,MAAlB,GAAkB,MAAduJ,YAAc,MAAP,IAAO,EACzDmQ,EAAaxb,KAAK+R,MAAMlP,GACxB4Y,EAA8BD,EAhBfnY,KAAI,SAACqY,GAExB,IADA,IAAIC,EAAO,GACFrE,EAAI,EAAGC,EAAI,EAAGA,EAAImE,EAAQ3N,OAAQuJ,GAAK,EAAGC,GAAK,EAClDmE,EAAQpE,EAAI,IAAMoE,EAAQnE,EAAI,KAChCoE,GAAI,WAAQD,EAAQpE,GAAhB,YAAsBoE,EAAQnE,GAA9B,aAAqCmE,EAAQpE,EAAI,GAAjD,YAAuDoE,EAAQnE,EAAI,KAI3E,OAAOoE,KAUT,OACE,sBACEC,MAAM,6BACN/K,QAAQ,cACRgL,SAAS,SACT/Z,UAAWA,EACX6J,MAAO,CAAEC,MAAM,GAAD,OAAKP,EAAL,OALhB,UAOE,yBACCoQ,EAAMpY,KAAI,SAACsY,EAAMpY,GAAP,OACT,sBAEEuY,EAAGH,EACHvY,KAAK,OACL4U,OAAO,OACPC,YAAY,IACZ8D,cAAc,QACdC,eAAe,QACfC,iBAAiB,MARnB,UACUpZ,EADV,YACqBU,UAmBd0F,sBAAKsS,IClCLW,OAff,YAAkC,IAAD,IAAfC,YACiBC,MAAM,KAA5B5N,EADoB,oBAE/B,OACE,qBAAK1M,UAAU,WAAf,SACE,qBACEA,UAAS,+CAA0C0M,EAA1C,8BAAsED,GAC7EC,IAFJ,SAKGA,OCoCM6N,OAzCf,YAA6F,IAA5DC,EAA2D,EAA3DA,SAAUC,EAAiD,EAAjDA,WAAYC,EAAqC,EAArCA,eAAgBC,EAAqB,EAArBA,MAAO3e,EAAc,EAAdA,WACtE4e,EAAoB,+CAE1B,OACE,oBAAI5a,UAAU,4BAAd,gBACGwa,QADH,IACGA,OADH,EACGA,EAAUjZ,KAAI,SAACsZ,GACd,IAAMC,EAAa,kBAAcD,EAAahM,IACxCkM,EAAWN,IAAeK,EAChC,OACE,qBAEE9a,UAAW0G,aAAKkU,EAAmBG,GAAQ,UAAOH,EAAP,aAC3CzS,QAAS,kBAAMuS,EAAeI,IAHhC,WAKQ,OAALH,QAAK,IAALA,OAAA,EAAAA,EAAQG,KAAkB,cAAC,GAAD,CAAQT,YAAaM,EAAMG,KACtD,cAAC,GAAD,CACE/Z,QAAS8Z,EAAa9Z,QACtBf,UAAU,qCACVuJ,KAAMvN,IAER,sBAAMgE,UAAU,oCAAhB,SAAqD6a,EAAald,eAV7Dmd,S,UCTjB,SAASE,GAAT,GAAsD,IAA9B1D,EAA6B,EAA7BA,KAAMhQ,EAAuB,EAAvBA,MAAuB,IAAhBkP,cAAgB,MAAP,IAAO,EACnD,OACE,cAAC,GAAD,CACE7V,MAAO8L,GAAmB+J,GAC1BA,OAAQA,EACRjN,KAAK,SACLH,OAAQ/H,MAAMiG,GAAOhG,KAAK,UAAK+V,KAAK,IAJtC,gBAMGC,QANH,IAMGA,IAAQ,cAAC2D,GAAA,EAAD,MAWA9T,sBAAK6T,ICsBLE,OAzCf,YAA2E,IAA7CC,EAA4C,EAA5CA,MAAOV,EAAqC,EAArCA,WAAYC,EAAyB,EAAzBA,eAAgBC,EAAS,EAATA,MACzDC,EAAoB,yCAE1B,OACE,oBAAI5a,UAAU,yBAAd,SACGmb,EAAM5Z,KAAI,SAAC6Z,EAAW3Z,GACrB,IAAMiL,EAAShL,EAAQD,GACjB4Y,EAAW,eAAWe,EAAUvM,GAArB,YAA2BnC,GACtCqO,EAAWN,IAAeJ,EAC1BgB,EAAS/b,OAAOC,OAAOob,GAAOlgB,SAAS4f,GAE7C,OACE,oBACEiB,KAAK,SAELtb,UAAW0G,aACTkU,EACAG,GAAQ,UAAOH,EAAP,YACRS,GAAM,UAAOT,EAAP,WAERzS,QAAS,kBAAMuS,EAAeL,IARhC,SAUE,cAAC,GAAD,CAAM/C,KAAM8D,EAAU9D,KAAMhQ,MAAO8T,EAAU9T,MAAOkP,OAAQ9J,KARvD2N,S,UChBXkB,GAAgB,WAAO,IAAD,EACUpf,EAAe,cADzB,mBACnBH,EADmB,KACPwf,EADO,KAG1B,OACE,sBAAKxb,UAAU,mBAAf,UACE,qBAAKA,UAAU,0BAAf,gCACA,cAAC,KAAD,CACEA,UAAU,2BACVyb,aAAczf,EACdkO,IAAK,IACLC,IAAK,IACLyO,KAAM,GACNnG,SAAU+I,QAMHrU,kBAAKoU,ICJpB,SAASG,GAAaf,GACpB,OAAOrb,OAAO6Q,QAAQwK,GAAOpJ,QAAO,SAACC,EAAD,GAAyC,IAAD,mBAAjCmK,EAAiC,KAAjBtB,EAAiB,OACpDsB,EAAerB,MAAM,KAAlCsB,EADiE,sBAEvDvB,EAAYC,MAAM,KAA5BlD,EAFiE,oBAI1E,OADA5F,EAAIoK,GAAaxE,EACV5F,IACN,IA4GUqK,OAzGf,YAAoD,IAAD,IAAxBhhB,EAAwB,EAAxBA,QAASD,EAAe,EAAfA,MAAO6N,EAAQ,EAARA,KACnC/L,EAAWD,EAAY5B,EAASD,GADW,EAE5BuB,EAAe,cAA7BH,EAF0C,sBAGzBjB,mBAAS,GAHgB,mBAG1C6d,EAH0C,KAGpCM,EAHoC,OAIvBne,mBAAS,IAJc,mBAI1C4f,EAJ0C,KAInCmB,EAJmC,OAKb/gB,mBAAS,MALI,mBAK1C0f,EAL0C,KAK9BsB,EAL8B,KAO3CC,EAAiBlf,EAAW,CAChCC,YAAakI,GAAcG,aAC3BpI,WAAY,iBACZC,aAAc,kBAAMic,EAAQ,IAC5B/b,QAAS,kBAAM+b,EAAQ,IACvB9b,eAAgB,6DAChBC,aAAc,8EAGVqd,EAAiBld,uBACrB,SAACye,GAAa,IAAD,EACIA,EAAQ3B,MAAM,KAAtBpS,EADI,qBAENuS,GAAcA,EAAWyB,WAAWhU,GACvC6T,EAAcE,IAGZH,EADW,SAAT5T,EACO,SAACiU,GACR,OAAO,2BACFA,GADL,kBAEG1B,EAAawB,KAIT,SAACE,GACR,OAAO,2BACFA,GADL,kBAEGF,EAAUxB,MAIjBsB,EAAc,SAGlB,CAACtB,IAGH,OACE,cAAC,GAAD,CACEhS,KAAMA,EACNgG,MAAK,OAAE7T,QAAF,IAAEA,OAAF,EAAEA,EAAO6T,MACdC,aAAcpL,GAAiBG,WAC/BzD,UAAU,qBAJZ,SAME,eAAC,GAAD,CAAc4Y,KAAMA,EAAMC,WAAY,EAAEnc,GAAxC,UAEE,sBAAKsD,UAAU,+BAAf,UACE,cAAC,GAAD,IACA,cAAC,GAAD,gCACA,cAAC,GAAD,sHAIA,cAAC,GAAD,kLAKA,cAAC,GAAD,CACEwa,SAAQ,iBAAE5f,QAAF,IAAEA,OAAF,EAAEA,EAAO4f,gBAAT,QAAqB,GAC7BC,WAAYA,EACZC,eAAgBA,EAChBC,MAAOA,EACP3e,WAAYA,IAGd,cAAC,GAAD,CACEmf,MAAK,iBAAEvgB,QAAF,IAAEA,OAAF,EAAEA,EAAOugB,aAAT,QAAkB,GACvBV,WAAYA,EACZC,eAAgBA,EAChBC,MAAOA,IAGT,cAAC,IAAD,CAAO3a,UAAU,oCAAjB,SACE,cAAC,KAAD,CACEkI,KAAK,UACLC,QAAS,kBAAM6T,EAAe,CAAErB,MAAOe,GAAaf,MACpD3H,SAAU1T,OAAOC,OAAOob,GAAO1O,OAASrR,EAAM4f,SAASvO,OACvD5E,KAAM,cAAC+U,GAAA,EAAD,IAJR,6CAYJ,eAAC,WAAD,WACE,cAAC,GAAD,CACEvhB,QAASA,EACTuN,MAAM,UACNoP,YAAY,qEAEd,cAAC,GAAD,CAAqBlS,cAAeL,GAAcK,yB,UC1H5D,SAAS+W,GAAT,GAA2D,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,eACtC,OACE,sBAAKvc,UAAU,4BAAf,UACE,qBAAKA,UAAU,0BAAf,qBACA,sBAAMA,UAAU,gCAAhB,SACE,cAAC,GAAD,CAAa6O,GAAI0N,EAAgB5Q,KAAM2Q,SAWhCnV,sBAAKkV,I,UCbpB,SAASG,GAAT,GAA+D,IAA/BC,EAA8B,EAA9BA,WAAY5hB,EAAkB,EAAlBA,QAASsgB,EAAS,EAATA,MACnD,OACE,sBAAKnb,UAAU,4BAAf,UACE,qBAAKA,UAAU,0BAAf,mCACCV,OAAO6Q,QAAQsM,GAAYlb,KAAI,WAAyBE,GAAW,IAAD,mBAAjC2V,EAAiC,KAAzBsF,EAAyB,KAC3DC,EAAOxB,EAAMyB,MAAK,SAACpb,GAAD,OAAOA,EAAEqN,KAAOuI,KACxC,OACE,sBAAsCpX,UAAU,0BAAhD,UACE,sBAAKA,UAAU,kCAAf,UACE,cAAC6c,GAAA,EAAD,CAAe7c,UAAU,yCAD3B,IACsE2c,EAAKrF,QAE3E,sBAAKtX,UAAU,4BAAf,UACE,cAAC,KAAUoU,MAAX,UACGsI,EAAanb,KAAI,SAAC5D,GAAD,OAChB,cAAC,GAAD,CACEkR,GAAIhU,EAAQ8C,GAAY+T,UAD1B,uBAEuB7W,EAAQ8C,GAAY+T,gBAI/C,sBAAM1R,UAAU,kCAAhB,SAAmD0c,EAAarF,KAAK,aAbzE,gBAAmBD,EAAnB,YAA6B3V,UA2BxB0F,sBAAKqV,I,kDC8BLM,OAzDf,YAAyF,IAAxDC,EAAuD,EAAvDA,cAAeC,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,eAAgB/D,EAAW,EAAXA,QAAW,EACxClC,oBAAS,CACrDC,gBAAiB1K,GAAW,GAAKwQ,GACjC7F,WAAW,EACXC,SAAU,kBAAM+B,EAAQ,MAHlB1M,EAD8E,EAC9EA,QAAS0Q,EADqE,EACrEA,UAAWC,EAD0D,EAC1DA,MAAOC,EADmD,EACnDA,OAqBnC,OAdAliB,qBAAU,WACJsR,EAAU,GAAKuQ,GAAiBvQ,EAAU,GAAKA,EAAU,KAAO,GAClEyQ,GAAe,SAACI,GAAD,OAAOjR,KAAKlC,IAAImT,EAAI,EAAGN,EAAgB,QAEvD,CAACvQ,EAASyQ,EAAgBF,IAW3B,sBAAK/c,UAAU,6BAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,sBAAM6J,MAAO,CAAEC,MAAM,GAAD,OAAKsC,KAAKkR,IAAK,GAAK9Q,EAAWuQ,EAAgB,KAA/C,UAEtB,cAAC,KAAD,CACExT,KAAK,QACLlC,KAAM,cAACkW,GAAA,EAAD,IACNpV,QAhBe,WACnB8U,GAAe,SAACI,GAAD,OAAOjR,KAAKjC,IAAIkT,EAAI,EAAG,OAgBlCrK,SAA0B,IAAhBgK,EAJZ,8BAQA,cAAC,KAAD,CACEzT,KAAK,QACLlC,KAAM6V,EAAY,cAACM,GAAA,EAAD,IAAoB,cAACC,GAAA,EAAD,IACtCtV,QAAS+U,EAAYC,EAAQC,IAE/B,eAAC,KAAD,CAAQ7T,KAAK,QAAQpB,QAtBR,WACf8U,GAAe,SAACI,GAAD,OAAOjR,KAAKlC,IAAImT,EAAI,EAAGN,EAAgB,OAqBZ/J,SAAUgK,IAAgBD,EAAgB,EAAlF,gCACkB,cAACW,GAAA,EAAD,OAElB,cAAC,KAAD,CAAQnU,KAAK,QAAQpB,QAAS,kBAAM+Q,EAAQ,IAAI7R,KAAM,cAACsW,GAAA,EAAD,IAAtD,6B,8BCpDN,SAASC,GAAT,GAA8D,IAAxCC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,UAA6B,IAAlB9d,iBAAkB,MAAN,GAAM,EAC3D,IAAK6d,GAAYA,EAAW,EAC1B,OAAO,yBAET,IAAME,EAAa1c,MAAM2c,KAAK,CAAE/R,OAAQ4R,IAAY,SAACI,EAAGzc,GAAJ,OAAU,cAAC0c,GAAA,EAAD,aAAoBJ,EAApB,YAAiCtc,OAC/F,OACE,uBAAMxB,UAAW0G,aAAK,cAAe1G,GAArC,eACI,sBAAMA,UAAU,qBAAhB,SAAsC+d,IAD1C,SACmEF,EAAW,EAAI,IAAM,MAW7E1W,sBAAKyW,ICfpB,SAASO,GAAT,GAOI,IAAD,EAND7B,EAMC,EANDA,OACA8B,EAKC,EALDA,gBACAC,EAIC,EAJDA,kBACAC,EAGC,EAHDA,cACA7B,EAEC,EAFDA,WACA5hB,EACC,EADDA,QAEM0jB,EAAiBjf,OAAOC,OAAP,iBAAckd,QAAd,IAAcA,OAAd,EAAcA,EAAa2B,UAA3B,QAA+C,IAEtE,OACE,sBAAKpe,UAAU,2BAAf,UACE,qBAAKA,UAAU,0BAAf,oCACA,sBAAKA,UAAU,kCAAf,UACE,cAACwe,GAAA,EAAD,CAAaxe,UAAU,yCACtBqe,KAEFE,EAAetS,OACd,eAAC,WAAD,WACE,sBAAKjM,UAAU,4BAAf,UACE,cAAC,KAAUoU,MAAX,UACGmK,EAAehd,KAAI,SAAC5D,GACnB,OACE,cAAC,GAAD,CAAmDkR,GAAIhU,EAAQ8C,GAAY+T,UAA3E,+BAAqC/T,SAI3C,cAAC,GAAD,CAAYkgB,SAAU,EAAGC,UAAS,0BAAqBxB,KACvD,sBAAMtc,UAAU,kCAAhB,SAAmDue,EAAelH,KAAK,WAEzE,sBAAKrX,UAAU,kCAAf,UACE,cAAC,GAAD,CAAQ6O,GAAIhU,EAAQyhB,GAAQ5K,WAAa,IACzC,cAAC,GAAD,CAAYmM,SAAQ,OAAES,QAAF,IAAEA,OAAF,EAAEA,EAAgBhC,GAASwB,UAAS,wBAAmBxB,KAAa,IACxF,sBAAMtc,UAAU,kCAAhB,SAAmDsc,UAIvD,eAAC,IAAW1V,KAAZ,CAAiB5G,UAAU,4BAA3B,UACE,cAACye,GAAA,EAAD,IADF,2EAgBOtX,sBAAKgX,IClDpB,SAASO,GAAT,GAAyG,IAAhFpkB,EAA+E,EAA/EA,OAAQyiB,EAAuE,EAAvEA,cAAeliB,EAAwD,EAAxDA,QAASmiB,EAA+C,EAA/CA,YAAaC,EAAkC,EAAlCA,eAAgB/D,EAAkB,EAAlBA,QAASiC,EAAS,EAATA,MAAS,EACjFhf,EAAe,cAA7BH,EAD+F,oBAG9F+E,EAAgEzG,EAAhEyG,QAASub,EAAuDhiB,EAAvDgiB,OAAQzN,EAA+CvU,EAA/CuU,GAAIyI,EAA2Chd,EAA3Cgd,KAAMhQ,EAAqChN,EAArCgN,MAAOgX,EAA8BhkB,EAA9BgkB,cAAe7B,EAAeniB,EAAfmiB,WAEzD,OACE,sBAAKzc,UAAU,mBAAf,UACE,cAAC,GAAD,IACA,qBAAKA,UAAU,sCAAf,SACE,cAAC,GAAD,CAEEe,QAASA,EACTwI,KAAMvN,EACNgE,UAAU,6BAHL1F,EAAOqkB,iBAOhB,cAAC,GAAD,CAAsBrC,OAAQA,EAAQC,eAAgB1hB,EAAQyhB,GAAQ5K,WAEtE,cAAC,GAAD,CAAsB7W,QAASA,EAAS4hB,WAAYA,EAAYtB,MAAOA,IAEvE,cAAC,GAAD,CACEmB,OAAQA,EACR8B,gBAAiBvP,EACjBwP,kBAAmB/G,EACnBsH,mBAAoBtX,EACpBgX,cAAeA,EACf7B,WAAYA,EACZ5hB,QAASA,IAGX,cAAC,GAAD,CACEkiB,cAAeA,EACfC,YAAaA,EACbC,eAAgBA,EAChB/D,QAASA,OAMF/R,sBAAKuX,IC+CLG,OA1Ff,YAA6C,IAArBhkB,EAAoB,EAApBA,QAASikB,EAAW,EAAXA,QAAW,EACJ/jB,mBAAS,GADL,mBACnCgkB,EADmC,KACtBC,EADsB,OAEAjkB,mBAAS,IAFT,mBAEnCkkB,EAFmC,KAEpBC,EAFoB,OAGRnkB,mBAAS,IAHD,mBAGnCokB,EAHmC,KAGxBC,EAHwB,KAKpCC,EAAYP,EAAQ,GAAGQ,SAOrB9S,EAAYwK,oBAAS,CAC3BC,gBAAiB1K,GAAW,GAC5B2K,WAAW,EACXC,SAAU,kBAPV+H,EAAiBJ,EAAQS,MAAK,SAAC7hB,EAAG8hB,GAAJ,OAAW9hB,EAAE4hB,SAAWE,EAAEF,SAAW,GAAK,WACxEN,EAAe,MAGTxS,QAsCR,OA/BAtR,qBAAU,WACRgkB,EAAiBJ,EAAQS,MAAK,SAAC7hB,EAAG8hB,GAAJ,OAAW9hB,EAAE+hB,cAAgBD,EAAEC,cAAgB,GAAK,QACjF,IAGHvkB,qBAAU,WACQ,IAAZsR,EACFwS,EAAe,GACM,IAAZxS,GACTwS,EAAe,KAEhB,CAACxS,IAGJtR,qBAAU,WAAO,IAAD,IACRwkB,EAAWX,EAAc,EAAI,gBAAkB,WAEjDY,EAAe,EACfC,EAAU,iBAAGX,QAAH,IAAGA,GAAH,UAAGA,EAAgB,UAAnB,aAAG,EAAqBS,UAAxB,QAAqC,EACnDN,EACEH,EAAc1d,KAAI,SAACse,GAMjB,OALIA,EAAMH,GAAYE,IACpBA,EAAaC,EAAMH,GACnBC,GAAgB,GAGXA,QAGV,CAACV,EAAeF,IAGjB,qBAAK/e,UAAU,gBAAf,SACGif,EAAc1d,KAAI,SAACse,EAAOpe,GAAW,IAAD,EAC3B9D,EAAsDkiB,EAAtDliB,WAAY2hB,EAA0CO,EAA1CP,SAAUG,EAAgCI,EAAhCJ,cAAeK,EAAiBD,EAAjBC,aAC7C,OACE,sBAAK9f,UAAS,iDAA4CyB,GAA1D,UACE,qBAAKzB,UAAU,4BAAf,SACGsf,EAAW,GAAKD,IAAcC,GAAYP,GAAe,GACxD,cAACP,GAAA,EAAD,CAAaxe,UAAU,gCAG3B,sBAAKA,UAAU,+BAAf,+BAAgDmf,QAAhD,IAAgDA,OAAhD,EAAgDA,EAAY1d,UAA5D,QAAsE,MACtE,sBAAKzB,UAAU,6BAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,cAAC,GAAD,CAAQ6O,GAAIhU,EAAQ8C,GAAY+T,aAElC,qBAAK1R,UAAU,sBAAf,SAAsCrC,OAExC,qBAAKqC,UAAU,6BAAf,SAA6Cyf,IAC5CV,GAAe,GAAK,sBAAK/e,UAAU,kCAAf,cAAmD8f,KACvEf,GAAe,GAAK,qBAAK/e,UAAU,mCAAf,SAAmDsf,MAf1E,kBAAmF3hB,UCqB9EoiB,OAnEf,YAAiD,IAAzBllB,EAAwB,EAAxBA,QAASD,EAAe,EAAfA,MAAO6N,EAAQ,EAARA,KAAQ,EACR1N,mBAAS,GADD,mBACvCiiB,EADuC,KAC1BC,EAD0B,OAEtBliB,mBAAS,GAFa,mBAEvC6d,EAFuC,KAEjCM,EAFiC,OAGV/c,EAAe,cAHL,mBAGvCH,EAHuC,KAG3Bwf,EAH2B,OAIEzgB,mBAASiB,GAJX,mBAIvCgkB,EAJuC,KAIrBC,EAJqB,KAO9C/kB,qBAAU,WACK,IAAT0d,GACFqH,EAAoBjkB,GACpBwf,EAAc,MAEdA,EAAcwE,KAEf,CAACpH,IAEJ,IAAMsH,EAAkBpjB,EAAW,CACjCC,YAAakI,GAAcK,cAC3BtI,WAAY,mBACZI,eAAgB,WAChBC,aAAc,6EAGhB,OACE,cAAC,GAAD,CACEoL,KAAMA,EACNgG,MAAK,OAAE7T,QAAF,IAAEA,OAAF,EAAEA,EAAO6T,MACdC,aAAcpL,GAAiBI,QAC/B1D,UAAU,kBAJZ,SAME,eAAC,GAAD,CAAc4Y,KAAMA,EAApB,UAEE,sBAAK5Y,UAAU,2BAAf,UACE,cAAC,GAAD,+BACM,OAALpF,QAAK,IAALA,OAAA,EAAAA,EAAOulB,UACN,cAAC,GAAD,CACE7lB,OAAQM,EAAMulB,QAAQnD,GACtBD,cAAeniB,EAAMulB,QAAQlU,OAC7BkP,MAAOvgB,EAAMugB,MACbtgB,QAASA,EACTmiB,YAAaA,EACbC,eAAgBA,EAChB/D,QAASA,OAMf,eAAC,WAAD,WACE,cAAC,GAAD,UAAQte,EAAMwlB,iBAAmB,EAAI,UAAY,cACjD,cAAC,GAAD,CAAcvlB,QAASA,EAASikB,QAASlkB,EAAMkkB,UAC9ClkB,EAAMwlB,iBAAmB,GACxB,eAAC,GAAD,CAAanZ,WAAS,EAAtB,oBACS,iCAASrM,EAAMwlB,kBADxB,mCAKF,cAAC,KAAD,CAAQ7W,KAAK,QAAQpB,QAAS,kBAAM+Q,EAAQ,IAAI7R,KAAM,cAACgZ,GAAA,EAAD,IAAtD,yBAGA,cAAC/M,GAAD,CAAiBH,OAAQ,kBAAM+M,EAAgB,KAAKxf,MAAM,oD,oBC/ErD,OAA0B,4CC2F1B4f,OA5Ef,YAA8C,IAAD,EAAzB7X,EAAyB,EAAzBA,KAAM7N,EAAmB,EAAnBA,MAAOmM,EAAY,EAAZA,SAAY,EACvBzJ,IAAblC,EADoC,oBAGrCmlB,EAAczjB,EAAW,CAC7BC,YAAa0H,GAASO,UACtBhI,WAAY,cACZI,eAAgB,kCAChBC,aAAc,wDAGhB,OACE,eAAC,GAAD,CAAgBoL,KAAMA,EAAMgG,MAAK,OAAE7T,QAAF,IAAEA,OAAF,EAAEA,EAAO6T,MAAOC,aAAa,YAAY1O,UAAU,YAApF,UACE,qBAAKA,UAAU,mBAAf,SACE,qBAAKC,IAAKugB,GAAepgB,IAAI,gBAG9BuG,QAAQ/L,EAAM6lB,UACb,sBAAKzgB,UAAU,8BAAf,UACE,sBAAKA,UAAU,kBAAf,8BACoBpF,EAAM6lB,QAAQxU,OAAS,EAAI,uBAAsB,kBADrE,OAGA,oBAAIjM,UAAU,qBAAd,SACGpF,EAAM6lB,QAAQlf,KAAI,SAACmf,GAAY,IAAD,IAC7B,OACE,qBAAI1gB,UAAU,oBAAd,UACE,cAAC,GAAD,CAAQA,UAAU,oBAAoB6O,GAAE,UAAE6R,EAAOhP,gBAAT,QAAqB,KAC7D,sBAAK1R,UAAU,yBAAf,UACE,2CAAS0gB,EAAO/U,YAAhB,QAAwB,MAD1B,KAC0ChK,EAAuB+e,EAAOhP,eAH1E,iBAAiDgP,EAAO/U,eAYjEhF,QAAQ/L,EAAMuE,OACb,sBAAKa,UAAU,oBAAf,UACE,qBAAKA,UAAU,kBAAf,6BACA,cAAC,KAAD,CACEkI,KAAK,SACLyY,YAAa,CACX,KAAM,UACN,MAAO,UACP,OAAQ,WAEVC,QAAO,UAAEhmB,EAAMuE,KAAKgZ,aAAb,QAAsB,IAE/B,qBAAKnY,UAAU,kBAAf,SACGpF,EAAMuE,KAAK0hB,QAAU,kCAA8B,iDAKxDla,QAAQ/L,EAAM6lB,WAAa9Z,QAAQ/L,EAAMuE,OACzC,qBAAKa,UAAU,kBAAf,6BAGD+G,EAED,cAAC,GAAD,UACE,cAAC,KAAD,CACEqB,MAAM,kDACN0Y,UAAW,kBAAMP,EAAY,KAC7BQ,OAAO,MACPC,WAAW,SAJb,SAME,cAAC,KAAD,CAAQ3Z,KAAM,cAAC+L,GAAA,EAAD,IAAkBC,QAAM,EAACnL,KAAK,UAAU8K,SAAU5X,EAAhE,qCC7EJ6lB,GAAS,CAAC,KAAM,IAAK,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,KACxEC,GAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAEzDC,GAAe,SAAC,GAAe,IAAD,EAAZxhB,EAAY,EAAZA,MAChByhB,EAAQH,GAAM,UAACC,GAAUG,WAAU,SAAC7f,GAAD,OAAe,IAAR7B,GAAe6B,YAA3C,QAAiD,IAE/D0F,EAAY,kBAElB,OAAO,cAAC,KAAD,CAAQlH,UAAW0G,aAAKQ,EAAD,UAAeA,EAAf,aAA6Bka,EAAM,KAA1D,SAAkEA,KAO5Dja,kBAAKga,ICMLG,OApBf,YAAyC,IAAhB1mB,EAAe,EAAfA,MAAO6N,EAAQ,EAARA,KAC9B,OACE,cAAC,GAAD,CAAUA,KAAMA,EAAM7N,MAAOA,EAA7B,SACE,oBAAIoF,UAAU,uBAAd,SACGpF,EAAM4f,SAASjZ,KAAI,SAACse,GACnB,OACE,qBAAI7f,UAAU,4BAAd,UACE,cAAC,GAAD,CAAWe,QAAS8e,EAAM9e,QAASwI,KAAM,IAAKvJ,UAAU,gCACxD,uBAAMA,UAAU,uBAAhB,cACI6f,EAAMvI,KADV,SACsBuI,EAAMliB,cAE5B,cAAC,GAAD,CAAcgC,MAAOkgB,EAAM0B,yB,8BCPzC,SAASC,GAAT,GAA4C,IAAD,EAAtBzN,EAAsB,EAAtBA,OAAQ0N,EAAc,EAAdA,WAC3B,OACE,sBAAKzhB,UAAU,+BAAf,UACE,sBAAKA,UAAU,0BAAf,yBAAgDyhB,GAAU,oCAAgB1N,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAQ5U,YAAxB,QAAgC,QAC1F,sBAAKa,UAAU,uBAAf,UACE,cAAC,KAAD,CAAO0hB,MAAO3N,EAAOoE,MAAOnY,UAAU,sCAAtC,SACE,cAAC,GAAD,CAAQ6O,GAAIkF,EAAOrC,SAAU5C,MAAM,aAEpCiF,EAAOpI,KAJV,KAIkBhK,EAAuBoS,EAAOrC,gBAMtD,SAASiQ,GAAT,GAAkG,IAAD,QAA1EtJ,EAA0E,EAA1EA,MAAOuJ,EAAmE,EAAnEA,gBAAiBC,EAAkD,EAAlDA,WAAYzB,EAAsC,EAAtCA,gBAAiBqB,EAAqB,EAArBA,WAAYhJ,EAAS,EAATA,MACtF,OACE,qBAAIzY,UAAU,yBAAd,UACE,qBAAIA,UAAU,8BAAd,UACE,qBAAKA,UAAU,iCAAf,qBACA,cAAC,KAAD,CAAWA,UAAU,0BAA0BuJ,KAAK,QAApD,SACG8O,IAEF1R,QAAQib,KAAqBE,MAAMzJ,IAClC,eAAC,WAAD,WACE,sBAAMrY,UAAU,qCAAhB,gBACA,cAAC,KAAD,CAAWA,UAAU,0BAA0BuJ,KAAK,QAApD,SACG8O,EAAQuJ,UAMhBjb,QAAQkb,IACP,qBAAI7hB,UAAU,8BAAd,UACE,qBAAKA,UAAU,iCAAf,qBACA,cAAC,KAAD,CAAWA,UAAU,0BAA0BuJ,KAAK,UAAUM,MAAO,CAAEkY,gBAAiB,QAAxF,gBACGF,QADH,IACGA,IAAc,OAKpBlb,QAAQ8R,IACP,qBAAIzY,UAAU,8BAAd,UACE,qBAAKA,UAAU,iCAAf,4BACA,cAAC,KAAD,CAAWA,UAAU,0BAA0BuJ,KAAK,UAApD,0BACGkP,QADH,IACGA,GADH,UACGA,EAAO9L,SADV,aACG,EAAUwL,aADb,QACsB,MAEtB,sBAAMnY,UAAU,qCAAhB,gBACA,cAAC,KAAD,CAAWA,UAAU,0BAA0BuJ,KAAK,UAApD,0BACGkP,QADH,IACGA,GADH,UACGA,EAAO7L,SADV,aACG,EAAUuL,aADb,QACsB,SAKzBxR,QAAQyZ,IACP,gCACE,sBAAKpgB,UAAU,iCAAf,mCACyByhB,EAAa,UAAY,YADlD,cAGA,cAAC,KAAD,CAAWzhB,UAAU,0BAA0BuJ,KAAK,QAApD,SACG6W,UAQb,SAAS4B,GAAT,GAA2C,IAAnBnnB,EAAkB,EAAlBA,QAAS4d,EAAS,EAATA,MAC/B,OACE,qBAAKzY,UAAU,iCAAf,SACGV,OAAOC,OAAOkZ,GAAOlX,KAAI,SAACpC,GAAD,OACxB,cAAC8iB,GAAD,CAAoC9iB,KAAMA,EAAMtE,QAASA,GAAhCsE,EAAKwM,WAMtC,SAASsW,GAAT,GAAgD,IAAlB9iB,EAAiB,EAAjBA,KAAMtE,EAAW,EAAXA,QAC5BqnB,EAAgBC,mBACpB,kBACEhjB,EAAK+Y,QACF3W,KAAI,SAAC6gB,GACJ,OAAOvnB,EAAQunB,MAEhB7C,MAAK,SAAC7hB,EAAG8hB,GAAJ,OAAW9hB,EAAEiO,KAAO6T,EAAE7T,KAAO,GAAK,OAC5C,CAAC9Q,EAASsE,IAGZ,OACE,sBAAKa,UAAU,yBAAf,UACE,uCAAUb,EAAKwM,QACf,6BACGuW,EAAc3gB,KAAI,SAACwS,EAAQtS,GAC1B,OACE,sBAAKzB,UAAU,kCAAf,UACE,cAAC,GAAD,CAAQ6O,GAAIkF,EAAOrC,SAAU5C,MAAM,SAAS9O,UAAU,wCACrD+T,EAAOpI,KAFV,KAEkBhK,EAAuBoS,EAAOrC,YAFhD,iBAAgEqC,EAAOpI,cALlCxM,EAAKwM,MAgBtD,SAAS0W,GAAT,GAA4C,IAAZxnB,EAAW,EAAXA,QACxBynB,EAAgBH,mBAAQ,kBAAM7iB,OAAOC,OAAO1E,GAAS0kB,MAAK,SAAC7hB,EAAG8hB,GAAJ,OAAW9hB,EAAEya,MAAQqH,EAAErH,MAAQ,GAAK,OAAK,CACvGtd,IAEF,OACE,6BACGynB,EAAc/gB,KAAI,SAACwS,EAAQtS,GAC1B,OACE,sBAAKzB,UAAU,kCAAf,UACGyB,EAAQ,EADX,IACe,IACb,cAAC,KAAD,CAAOigB,MAAO3N,EAAOoE,MAAOnY,UAAU,sCAAtC,SACE,cAAC,GAAD,CAAQ6O,GAAIkF,EAAOrC,SAAU5C,MAAM,aAEpCiF,EAAOpI,KALV,KAKkBhK,EAAuBoS,EAAOrC,YALhD,iBAAgEqC,EAAOpI,YAyElE4W,OA5Df,YAAuD,IAAD,EAA5B1nB,EAA4B,EAA5BA,QAASD,EAAmB,EAAnBA,MAAO6N,EAAY,EAAZA,KAAM5M,EAAM,EAANA,GAAM,EACtBd,oBAAS,GADa,mBAC7CsN,EAD6C,KACpCma,EADoC,KAGpD,GAAoB,UAAhB5nB,EAAM6T,MACR,OAAO,6BAGT,IAOM5O,EAAU,iBAAGhF,QAAH,IAAGA,OAAH,EAAGA,EAAUgB,UAAb,QAAoB,GAC9B4lB,EAAa9a,QAAO,OAAC9G,QAAD,IAACA,OAAD,EAACA,EAAYV,OAASwH,QAAQ/L,EAAM6d,OAE9D,OACE,eAAC,WAAD,WACE,cAAC,KAAD,CAAOgK,UAAW,GAAIziB,UAAU,iCAAhC,SACE,cAAC,KAAD,CACEkI,KAAK,UACL4G,MAAM,SACNvF,KAAK,QACLvJ,UAAU,2BACVmI,QAlBW,WACjBqa,GAAW,IAkBLnb,KAAM,cAAC0L,GAAA,EAAD,QAIV,eAAC,KAAD,CAAQ3K,MAAOK,EAAKL,MAAOhK,UAAU,QAAQskB,UAAU,EAAOC,QApBlD,WACdH,GAAW,IAmBuEna,QAASA,EAAzF,UACGxI,GAAc,cAAC2hB,GAAD,CAAWzN,OAAQlU,EAAY4hB,WAAYA,IAE1D,cAAC,IAAD,IAEA,cAAC,GAAD,CAAYja,SAAUiB,IAEtB,cAAC,IAAD,IAEA,cAACkZ,GAAD,CACEtJ,OAAY,OAALzd,QAAK,IAALA,OAAA,EAAAA,EAAOyd,QAAS,IACvBuJ,gBAAe,OAAEhnB,QAAF,IAAEA,OAAF,EAAEA,EAAOgnB,gBACxBC,WAAU,OAAEjnB,QAAF,IAAEA,OAAF,EAAEA,EAAOinB,WACnBzB,gBAAe,OAAExlB,QAAF,IAAEA,OAAF,EAAEA,EAAOwlB,gBACxBqB,WAAYA,EACZhJ,MAAK,OAAE7d,QAAF,IAAEA,OAAF,EAAEA,EAAO6d,QAGhB,cAAC,IAAD,IAECgJ,EACC,cAACO,GAAD,CAAcnnB,QAASA,EAAS4d,MAAK,OAAE7d,QAAF,IAAEA,OAAF,EAAEA,EAAO6d,QAE9C,cAAC4J,GAAD,CAAsBxnB,QAASA,WC3H1B+nB,OA9Bf,YAAsC,IAAXlnB,EAAU,EAAVA,OACnBb,EAAUyD,EAAe5C,EAAQ2H,IACjCzI,EAAQkE,EAAapD,EAAQ2H,IAFA,EAGtBlH,EAAe,MAArBN,EAH4B,sBAIXd,mBAAS,IAJE,mBAI5B0N,EAJ4B,KAItBoa,EAJsB,KAgBnC,GATA3nB,qBAAU,WACR2nB,GAAc,OAANnnB,QAAM,IAANA,OAAA,EAAAA,EAAS,IAAKgO,EAAShO,EAAO,IAAM,MAC3C,CAACA,KAOCG,EACH,OAAO,cAAC,GAAD,CAAOhB,QAASA,EAASD,MAAOA,EAAO6N,KAAMA,IAGtD,IAAMqa,EAvCR,SAA4BrU,GAC1B,OAAQA,GACN,KAAKnL,GAAiBC,MACpB,OAAOuQ,GACT,KAAKxQ,GAAiB/C,MACpB,OAAO+T,GACT,KAAKhR,GAAiBE,KACpB,OAAOyV,GACT,KAAK3V,GAAiBG,WACpB,OAAOoY,GACT,KAAKvY,GAAiBI,QACpB,OAAOqc,GACT,KAAKzc,GAAiBK,UACpB,OAAO2d,GACT,QACE,OAAO/S,IAwBawU,CAAmBnoB,EAAM6T,OAEjD,OACE,eAAC,WAAD,WACE,cAAC,GAAD,CAAgB5T,QAASA,EAASD,MAAOA,EAAO6N,KAAMA,EAAM5M,GAAIA,IAChE,cAACinB,EAAD,CAAiBjoB,QAASA,EAASD,MAAOA,EAAO6N,KAAMA,Q,UCvD7D,SAASua,GAAT,GAAmE,IAArCzoB,EAAoC,EAApCA,SAAU+gB,EAA0B,EAA1BA,KAA0B,IAApB9E,cAAoB,MAAX,QAAW,EAChE,OACE,cAAC,GAAD,CACE7V,MAAoB,QAAbpG,EAAqB,MAAQ,OACpCic,OAAqB,QAAbjc,EAAqB,qBAAuBic,EACpDjN,KAAK,QACLH,OAAM,uBAAqB,QAATkS,EAAiB,cAAjB,gBAAuCA,GAAnD,KACNtb,UAAU,SACV2W,gBAAgB,iBANlB,SAQgB,QAAbpc,EAAqB,cAAC0oB,GAAA,EAAD,IAA2B1oB,IAWxC4M,sBAAK6b,I,oBCnBpB,SAASE,GAAT,GAAsD,IAAtC1M,EAAqC,EAArCA,OAAQ2M,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,OAAU,EACzBlnB,EAAe,uBADU,mBAC5CmnB,EAD4C,KACrCC,EADqC,KAmBnD,OACE,sBAAKvjB,UAAW0G,aAAK,SAAU2c,GAAU,kBAAzC,UACE,qBAAIrjB,UAAU,gBAAd,UACGmjB,EADH,IACgB3M,EAAQ,IACtB,cAAC,KAAD,CAASpO,MAAM,eAAf,SACE,cAAC,KAAD,CACE0G,MAAM,SACN0U,OAAK,EACLtb,KAAK,UACLqB,KAAK,QACLlC,KAAM,cAACoc,GAAA,EAAD,IACNtb,QAba,kBAAMob,EAAS,YAiBlC,oBAAIvjB,UAAW0G,aAAK,eAAgB2c,GAAU,wBAA9C,SACGD,EAAM7hB,KAAI,SAAC8O,GAAD,OACT,oBACErQ,UAAW0G,aAAK,eAAgB4c,EAAMjT,IAAS,yBAE/CiL,KAAK,SACLnT,QAAS,kBAnCH,SAACkI,GACfkT,GAAS,SAAClG,GACR,IAAMqG,EAAQ,eAAQrG,GAMtB,OALIqG,EAASrT,UACJqT,EAASrT,GAEhBqT,EAASrT,IAAQ,EAEZqT,KA2BcC,CAAQtT,IAJzB,SAMGA,GAJIA,WAmBjB6S,GAAKrc,aAAe,CAClBwc,QAAQ,GAGKlc,sBAAK+b,ICpEpB,SAASU,KACP,OACE,0BACEjY,KAAK,GACLkD,GAAG,GACHgV,KAAK,KACLC,KAAK,KACL9jB,UAAU,UACV4S,YAAY,0FAOHzL,sBAAKyc,ICQLG,OAhBf,YAA8E,IAAD,IAA1CrjB,aAA0C,MAAlC,YAAkC,MAArByS,cAAqB,MAAZ,SAAY,EACrE6Q,EAAqBlnB,EAAW,CACpCC,YAAawI,GAAqBC,kBAClCxI,WAAY,gBACZI,eAAgB,2BAChBC,aAAc,qEAGhB,OAAO,cAACiW,GAAD,CAAiBH,OAAQ,kBAAM6Q,EAAmB,CAAE7Q,YAAWzS,MAAOA,KC0DhEujB,OAvDf,YAAoD,IAAzBrpB,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,QAAS4N,EAAQ,EAARA,KACnC/L,EAAWD,EAAY5B,EAASD,GAChC4Q,EAAO5L,EAAM/E,GACbqpB,EAAQ5nB,EAAa1B,EAAO,cAHe,EAIzBG,mBAAS,GAJgB,mBAI1C6d,EAJ0C,KAIpCM,EAJoC,KAMjD,OACE,cAAC,GAAD,CACEzQ,KAAMA,EACNgG,MAAK,OAAE7T,QAAF,IAAEA,OAAF,EAAEA,EAAO6T,MACdC,aAAcpL,GAAwBM,WACtC5D,UAAU,UAJZ,SAME,eAAC,GAAD,CAAc4Y,KAAMA,EAAMC,WAAY,EAAEnc,GAAxC,UAEE,cAAC,GAAD,CAAmB2b,MAAOzd,EAAMyd,MAAOC,cAAe,kBAAMY,EAAQ,IAAIV,KAAM,EAA9E,SACE,cAAC,GAAD,CAAaxY,UAAU,sBAAvB,gDAIF,sBAAKA,UAAU,eAAf,UACE,cAAC,GAAD,CAAOsH,MAAO,EAAGtH,UAAU,gBAA3B,sCAIA,cAAC,GAAD,CAAMzF,SAAUiR,EAAKjR,SAAU+gB,KAAM9P,EAAK8P,OAE1C,cAAC,GAAD,CAAyB5a,MAAM,2BAAqByS,OAAO,UAE3D,cAAC,GAAD,CAAanT,UAAU,sBAAvB,SACGkkB,EACG,iFACA,sFAGN,cAAC,GAAD,CAAalkB,UAAU,UAAvB,SACE,cAAC,GAAD,CACEwW,OAAO,sBACP2M,WAAY,cAACgB,GAAA,EAAD,IACZf,MAAOxoB,EAAMwpB,sBAGjB,cAAC,GAAD,a,6BCbKC,OAzCf,YAAgD,IAAxBC,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,OAAU,EACzBjnB,IAAblC,EADsC,sBAEhCe,EAAe,MAArBN,EAFsC,sBAIDd,mBAAS,MAJR,mBAItCypB,EAJsC,KAItBC,EAJsB,KAMvCC,EAAmBJ,EAAY1S,QAAO,SAACjU,GAAD,OAAgBA,IAAe9B,KAE3E,OACE,eAAC,IAAD,WACE,cAAC,KAAD,CAAQ4W,SAAUgS,EAAmBzkB,UAAU,WAAW4S,YAAY,mBAAtE,SACG8R,EAAiBnjB,KAAI,SAAC5D,GAAD,OACpB,cAAC,KAAOgnB,OAAR,CAAgChlB,MAAOhC,EAAvC,SACGA,GADiBA,QAKxB,cAAC,KAAD,CACEyK,MAAK,wFAA6Eoc,EAA7E,KACL1D,UAAW,kBAAMyD,EAAO,CAAEK,KAAMJ,KAChCzD,OAAO,MACPC,WAAW,SAJb,SAME,eAAC,KAAD,CACE9Y,KAAK,UACL8K,UAAWwR,GAAkBppB,EAC7BiM,KAAMjM,EAAY,cAACypB,GAAA,EAAD,IAAsB,KAH1C,mBAKSL,EAAc,YAAQA,GAAmB,YCS3CM,OArCf,YAAgD,IAAtBC,EAAqB,EAArBA,UAAWR,EAAU,EAAVA,OAAU,EACzBjnB,IAAblC,EADsC,sBAEGL,mBAAS,MAFZ,mBAEtCiqB,EAFsC,KAEpBC,EAFoB,KAI7C,OACE,eAAC,IAAD,CAAOjlB,UAAU,mDAAjB,UACE,cAAC,KAAD,CAAQyS,SAAUwS,EAAqBrS,YAAY,iBAAnD,SACGmS,EAAUxjB,KAAI,SAAChH,GAAD,OACb,cAAC,KAAOoqB,OAAR,CAA0ChlB,MAAOpF,EAAjD,SACGA,GADH,iBAA8BA,SAKlC,cAAC,KAAD,CACE6N,MAAK,wFAA6E4c,EAA7E,KACLlE,UAAW,kBAAMyD,EAAO,CAAEW,MAAOF,KACjCjE,OAAO,MACPC,WAAW,SAJb,SAME,eAAC,KAAD,CACE9Y,KAAK,UACL8K,UAAWgS,GAAoB5pB,EAC/BiM,KAAMjM,EAAY,cAACypB,GAAA,EAAD,IAAsB,KAH1C,mBAKSG,EAAgB,YAAQA,GAAqB,YCJ/CG,OAvBf,YAAmC,IAAlBC,EAAiB,EAAjBA,cAAiB,EACdjpB,EAAe,WAA1BJ,EADyB,oBAG1BspB,EAAiBvoB,EAAW,CAChCC,YAAawI,GAAqBC,kBAClCxI,WAAY,gBACZI,eAAgB,2BAChBC,aAAc,qEAPgB,EAUH2Z,oBAAS,CACpCC,gBAAiBzb,KAAKC,MAAQ2pB,EAC9BlO,WAAW,EACXC,SAAUpb,EAAU,kBAAMspB,EAAe,CAAElS,OAAQ,WAAa,OAH1DmS,EAVwB,EAUxBA,QAAS9Y,EAVe,EAUfA,QAMjB,OACE,sBAAKxM,UAAU,UAAf,UACGslB,EADH,IACa9Y,EAAU,GAAV,WAAmBA,GAAYA,MC0EjC+Y,OA3Ef,YAAuD,IAAzB3qB,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,QAAS4N,EAAQ,EAARA,KACtC+C,EAAO5L,EAAM/E,GACbqpB,EAAQ5nB,EAAa1B,EAAO,cAE5B4qB,EAAmB1oB,EAAW,CAClCC,YAAawI,GAAqBE,eAClCzI,WAAY,SACZI,eAAgB,8BAChBC,aAAc,0DAGVooB,EAAkB3oB,EAAW,CACjCC,YAAawI,GAAqBG,cAClC1I,WAAY,QACZI,eAAgB,4BAChBC,aAAc,kEAUhB,OAPAnC,qBAAU,WACe,eAAd,OAALN,QAAK,IAALA,OAAA,EAAAA,EAAO8qB,WACT7nB,IAAQ8nB,QAAR,wCAA6C,GAC7C9nB,IAAQ4K,MAAU,OAAL7N,QAAK,IAALA,OAAA,EAAAA,EAAOgrB,UAAP,8BAAkChrB,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAOgrB,UAAa,uBAAqB,MAEzF,IAGD,eAAC,GAAD,CACEnd,KAAMA,EACNgG,MAAK,OAAE7T,QAAF,IAAEA,OAAF,EAAEA,EAAO6T,MACdC,aAAcpL,GAAwBO,cACtC7D,UAAU,UAJZ,UAME,sBAAKA,UAAU,sBAAf,UACE,qBAAKA,UAAU,uCAAf,SACE,cAAC,GAAD,CAAOolB,cAAexqB,EAAMwqB,kBAG9B,sBAAKplB,UAAU,8BAAf,UACE,cAAC,GAAD,CAAOsH,MAAO,EAAGtH,UAAU,gBAA3B,SACGkkB,EAAQ,sBAAqB,2BAEhC,cAAC,GAAD,CAAM3pB,SAAUiR,EAAKjR,SAAU+gB,KAAM9P,EAAK8P,aAI7C4I,GAAS,cAAC,GAAD,CAAgBa,UAAWnqB,EAAMwpB,kBAAmBG,OAAQkB,KAErE,OAACja,QAAD,IAACA,OAAD,EAACA,EAAMqa,gBAGN,cAAC,GAAD,CAAa7lB,UAAU,sBAAvB,qDAFA,cAAC,GAAD,CAAcskB,YAAahlB,OAAOqU,KAAK9Y,GAAU0pB,OAAQiB,IAK3D,eAAC,GAAD,CAAaxlB,UAAU,UAAvB,UACE,cAAC,GAAD,CAAMwW,OAAO,YAAY2M,WAAY,cAAC2C,GAAA,EAAD,IAAiB1C,MAAO9jB,OAAOqU,KAAK9Y,KACzE,cAAC,GAAD,CACE2b,OAAO,sBACP2M,WAAY,cAACgB,GAAA,EAAD,IACZf,MAAOxoB,EAAMwpB,uBAIjB,cAAC,GAAD,IAEA,cAAC,GAAD,CAAyB1jB,MAAM,iCAA2ByS,OAAO,cCIxD4S,OAtEf,YAAoD,IAAzBnrB,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,QAAS4N,EAAQ,EAARA,KACnC+C,EAAO5L,EAAM/E,GACbmrB,EAAe1pB,EAAa1B,EAAO,UACnCqrB,EAAgB3pB,EAAa1B,EAAO,WAHO,EAING,oBAAS,GAJH,mBAI1CmrB,EAJ0C,KAIzBC,EAJyB,KAM3CnK,EAAiBlf,EAAW,CAChCC,YAAawI,GAAqBH,aAClCpI,WAAY,QACZC,aAAc,kBAAMkpB,GAAgB,IACpChpB,QAAS,kBAAMgpB,GAAgB,IAC/B/oB,eAAgB,2BAChBC,aAAc,mEAGhB,OACE,eAAC,GAAD,CACEoL,KAAMA,EACNgG,MAAK,OAAE7T,QAAF,IAAEA,OAAF,EAAEA,EAAO6T,MACdC,aAAcpL,GAAwBQ,WACtC9D,UAAU,UAJZ,UAME,eAAC,GAAD,CAAOsH,MAAO,EAAGtH,UAAU,gBAA3B,UACGpF,EAAMwrB,QADT,qBACiCxrB,EAAM+X,OADvC,oCAIA,8BACGsT,GAAiBD,EAChB,eAAC,GAAD,CAAahmB,UAAU,sBAAvB,+DAC4C,IACzCgmB,EAAe,2CAAiC,0BAGnD,eAAC,IAAD,CAAOhmB,UAAU,IAAjB,UACE,cAAC,KAAD,CAAQwjB,OAAK,EAACxQ,SAAUkT,EAAiB/d,QAAS,kBAAM6T,EAAe,CAAE4I,MAAM,KAA/E,6BAGA,cAAC,KAAD,CAAQpB,OAAK,EAACxQ,SAAUkT,EAAiB/d,QAAS,kBAAM6T,EAAe,CAAE4I,MAAM,KAA/E,qCAON,cAAC,GAAD,CAAMrqB,SAAUiR,EAAKjR,SAAU+gB,KAAM9P,EAAK8P,OAE1C,cAAC,GAAD,CAAiBzgB,QAASA,EAASoZ,WAAW,QAAQC,iBAAiB,YAEvE,eAAC,GAAD,CAAalU,UAAU,UAAvB,UACE,cAAC,GAAD,CAAMwW,OAAO,YAAY2M,WAAY,cAAC2C,GAAA,EAAD,IAAiB1C,MAAO9jB,OAAOqU,KAAK9Y,KACzE,cAAC,GAAD,CACE2b,OAAO,sBACP2M,WAAY,cAACgB,GAAA,EAAD,IACZf,MAAOxoB,EAAMwpB,uBAIjB,cAAC,GAAD,IAEA,cAAC,GAAD,CAAyB1jB,MAAM,oCAA8ByS,OAAO,eCwC3DkT,OAxGf,YAAoD,IAAzBzrB,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,QAAS4N,EAAQ,EAARA,KACnC+C,EAAO5L,EAAM/E,GACbqpB,EAAQ5nB,EAAa1B,EAAO,cAE5ByqB,EAAiBvoB,EAAW,CAChCC,YAAawI,GAAqBC,kBAClCxI,WAAY,gBACZI,eAAgB,2BAChBC,aAAc,qEAGVipB,EAAqBpC,IAAUtpB,EAAM2rB,OAAS,sBAAqB,wBAYzE,OAVArrB,qBAAU,WACsB,eAArB,OAALN,QAAK,IAALA,OAAA,EAAAA,EAAO4rB,kBACL5rB,EAAM2rB,OACR1oB,IAAQ8nB,QAAR,UAAmB/qB,EAAM6rB,WAAzB,mBAA8C7rB,EAAMsqB,MAApD,cAAuE,GAEvErnB,IAAQ8nB,QAAR,UAAmB/qB,EAAM6rB,WAAzB,mBAA8C7rB,EAAMsqB,MAApD,iBAA0E,MAG7E,IAGD,eAAC,GAAD,CACEzc,KAAMA,EACNgG,MAAK,OAAE7T,QAAF,IAAEA,OAAF,EAAEA,EAAO6T,MACdC,aAAcpL,GAAwBU,WACtChE,UAAU,0BAJZ,UAM4B,cAAzBpF,EAAM4rB,gBACL,qBAAKxmB,UAAU,eAAf,SACGpF,EAAM2rB,OACL,sBAAKvmB,UAAU,GAAf,UACE,cAAC,GAAD,CAAOsH,MAAO,EAAGtH,UAAU,gBAA3B,SACGsmB,IAEH,eAAC,GAAD,CAAatmB,UAAU,sBAAvB,yBACYpF,EAAM6rB,WADlB,iIAMF,sBAAKzmB,UAAU,GAAf,UACE,cAAC,GAAD,CAAOsH,MAAO,EAAGtH,UAAU,gBAA3B,SACGsmB,IAEH,eAAC,GAAD,CAAatmB,UAAU,sBAAvB,yBACYpF,EAAM6rB,WADlB,2BACsD,IACnDvC,EAAK,gCAAyB1Y,EAAKG,KAA9B,KAAwC,qDAO9B,cAAzB/Q,EAAM4rB,gBACL,qBAAKxmB,UAAU,eAAf,SACGpF,EAAM2rB,OACL,sBAAKvmB,UAAU,GAAf,UACE,cAAC,GAAD,CAAOsH,MAAO,EAAGtH,UAAU,gBAA3B,SACGsmB,IAEH,eAAC,GAAD,CAAatmB,UAAU,sBAAvB,yBACYpF,EAAM6rB,WADlB,0CACqE7rB,EAAM8rB,gBAD3E,UAKF,sBAAK1mB,UAAU,GAAf,UACE,cAAC,GAAD,CAAOsH,MAAO,EAAGtH,UAAU,gBAA3B,SACGsmB,IAEH,eAAC,GAAD,CAAatmB,UAAU,sBAAvB,yBACYpF,EAAM6rB,WADlB,+CACuE7rB,EAAM8rB,gBAD7E,IAC+F,IAC5FxC,EAAK,gCAAyB1Y,EAAKG,KAA9B,KAAwC,qDAOxD,eAAC,GAAD,CAAa3L,UAAU,sBAAvB,uCAEGV,OAAOC,OAAO1E,GAAS0G,KAAI,SAACwS,GAAD,OAC1B,+BACGA,EAAOpI,KADV,SACsBoI,EAAOuH,cAKjC,eAAC,GAAD,WACE,cAACpI,GAAD,CAAaC,OAAQ,kBAAMkS,EAAe,CAAElS,OAAQ,WAAYzS,MAAM,wBACtE,cAACwS,GAAD,CAAaC,OAAQ,kBAAMkS,EAAe,CAAElS,OAAQ,SAAUzS,MAAM,2BCI7DimB,OA5Ff,YAAyD,IAAzB/rB,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,QAAS4N,EAAQ,EAARA,KACxC+C,EAAO5L,EAAM/E,GADmC,EAExBE,mBAAS,MAFe,mBAE/CqrB,EAF+C,KAEtCQ,EAFsC,OAG1B7rB,mBAAS,MAHiB,mBAG/C4X,EAH+C,KAGvCkU,EAHuC,KAKhDxB,EAAiBvoB,EAAW,CAChCC,YAAawI,GAAqBC,kBAClCxI,WAAY,gBACZI,eAAgB,2BAChBC,aAAc,qEAGhB,OACE,eAAC,GAAD,CACEoL,KAAMA,EACNgG,MAAK,OAAE7T,QAAF,IAAEA,OAAF,EAAEA,EAAO6T,MACdC,aAAcpL,GAAwBS,iBACtC/D,UAAU,UAJZ,UAME,cAAC,GAAD,CAAOsH,MAAO,EAAGtH,UAAU,gBAA3B,+BAIA,eAAC,GAAD,CAAaA,UAAU,sBAAvB,qGAEE,+BACE,mFAC0CpF,QAD1C,IAC0CA,OAD1C,EAC0CA,EAAOksB,YAAY,GAD7D,wDAIA,0GACA,qHACA,oHACA,0DAAsBlsB,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAOksB,YAAYzP,KAAK,eAIlD,cAAC,GAAD,CAAM9c,SAAUiR,EAAKjR,SAAU+gB,KAAM9P,EAAK8P,OAE1C,eAAC,GAAD,CAAatb,UAAU,UAAvB,UACE,cAAC,GAAD,CAAMwW,OAAO,YAAY2M,WAAY,cAAC2C,GAAA,EAAD,IAAiB1C,MAAO9jB,OAAOqU,KAAK9Y,KACzE,cAAC,GAAD,CACE2b,OAAO,sBACP2M,WAAY,cAACgB,GAAA,EAAD,IACZf,MAAOxoB,EAAMwpB,uBAIjB,cAAC,GAAD,IAEA,eAAC,GAAD,CAAWpkB,UAAU,2BAArB,UACE,6CACA,cAAC,KAAD,CAAQyS,SAAUmU,EAAY5mB,UAAU,WAAW4S,YAAY,WAA/D,SACGtT,OAAOqU,KAAK9Y,GAAS0G,KAAI,SAAC5D,GAAD,OACxB,cAAC,KAAOgnB,OAAR,CAAgChlB,MAAOhC,EAAvC,SACGA,GADiBA,QAKxB,4CACA,cAAC,KAAD,CAAQ8U,SAAUoU,EAAW7mB,UAAU,WAAW4S,YAAY,UAA9D,SACGtT,OAAOqU,KAAK9Y,GAAS0G,KAAI,SAAC5D,GAAD,OACxB,cAAC,KAAOgnB,OAAR,CAAgChlB,MAAOhC,EAAvC,SACGA,GADiBA,QAKxB,cAAC,KAAD,CACEuK,KAAK,UACL8K,UAAWoT,IAAYzT,GAAUyT,IAAYzT,EAC7CxK,QAAS,kBACPkd,EAAe,CACblS,OAAQ,CACNiT,UACAzT,aAPR,4CCbOoU,OA9Bf,YAA4C,IAAXrrB,EAAU,EAAVA,OACzBb,EAAUyD,EAAe5C,EAAQ2H,IACjCzI,EAAQkE,EAAapD,EAAQ2H,IAFM,EAG5BlH,EAAe,MAArBN,EAHkC,sBAIjBd,mBAAS,IAJQ,mBAIlC0N,EAJkC,KAI5Boa,EAJ4B,KAgBzC,GATA3nB,qBAAU,WACR2nB,GAAc,OAANnnB,QAAM,IAANA,OAAA,EAAAA,EAAS,IAAKgO,EAAShO,EAAO,IAAM,MAC3C,CAACA,KAOCG,EACH,OAAO,cAAC,GAAD,CAAOhB,QAASA,EAASD,MAAOA,EAAO6N,KAAMA,IAGtD,IAAMqa,EA3CR,SAA4BrU,GAC1B,OAAQA,GACN,KAAKnL,GAAwBC,MAC3B,OAAOuQ,GACT,KAAKxQ,GAAwB/C,MAC3B,OAAO+T,GACT,KAAKhR,GAAwBM,WAC3B,OAAOqgB,GACT,KAAK3gB,GAAwBO,cAC3B,OAAO0hB,GACT,KAAKjiB,GAAwBQ,WAC3B,OAAOiiB,GACT,KAAKziB,GAAwBS,iBAC3B,OAAO4iB,GACT,KAAKrjB,GAAwBU,WAC3B,OAAOqiB,GACT,KAAK/iB,GAAwBK,UAC3B,OAAO2c,GACT,QACE,OAAO/R,IAwBawU,CAAmBnoB,EAAM6T,OAEjD,OACE,eAAC,WAAD,WACE,cAAC,GAAD,CAAgB5T,QAASA,EAASD,MAAOA,EAAO6N,KAAMA,EAAM5M,GAAIA,IAChE,cAACinB,EAAD,CAAiBjoB,QAASA,EAASD,MAAOA,EAAO6N,KAAMA,Q,8BC7DvDue,GAAmB,SAACta,GACxB,IAAMjL,EAAQC,EAAQuQ,QAAQvF,GAC9B,OAAON,KAAKkR,IAAI7b,GAAS,GAG3B,SAAS8U,GAAT,GAA2C,IAA3B0Q,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,MAAOlnB,EAAa,EAAbA,UACrBmnB,EAAYH,GAAiBC,EAAK,IAClCG,EAAaJ,GAAiBE,EAAM,IACpCG,EAAgB,eAEtB,OACE,sBAAKrnB,UAAW0G,aAAK,SAAU1G,GAA/B,UACE,sBAAKA,UAAW0G,aAAK2gB,EAAD,UAAmBA,EAAnB,oBAA6CA,EAA7C,cAAgEF,IAApF,UACE,uBAAMnnB,UAAU,gBAAhB,UACE,cAACsnB,GAAA,EAAD,IADF,IACwB,cAACC,GAAA,EAAD,IADxB,IAC0C,cAACA,GAAA,EAAD,OAE1C,sBAAMvnB,UAAU,eAAhB,SAAgCinB,OAElC,sBAAKjnB,UAAW0G,aAAK2gB,EAAD,UAAmBA,EAAnB,qBAA8CA,EAA9C,cAAiED,IAArF,UACE,uBAAMpnB,UAAU,gBAAhB,UACE,cAACunB,GAAA,EAAD,IADF,IACoB,cAACA,GAAA,EAAD,IADpB,IACsC,cAACC,GAAA,EAAD,OAEtC,sBAAMxnB,UAAU,eAAhB,SAAgCknB,UAYxC3Q,GAAK1P,aAAe,CAClB4gB,SAAU,IAGGtgB,sBAAKoP,ICNLmR,OA/Bf,YAAqD,IAA5BC,EAA2B,EAA3BA,iBAAkBxM,EAAS,EAATA,MACzC,OACE,sBAAKnb,UAAU,mBAAf,UACE,cAAC,GAAD,gEACA,cAAC,GAAD,CAAaiH,WAAS,EAAtB,sFACA,qBAAKjH,UAAU,8BAAf,SACGmb,EAAM5Z,KAAI,SAACob,GAAD,OACT,wBAEE3c,UAAU,2BACVmI,QAAS,kBAAMwf,EAAiB,CAAEvQ,OAAQuF,EAAK9N,MAHjD,SAKE,cAAC,GAAD,CAAMoY,KAAMtK,EAAKsK,KAAMC,MAAOvK,EAAKuK,SALrC,sBACsBvK,EAAK9N,cC2EtB+Y,OA3Ef,YAAmD,IAAzBhtB,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,QAAS4N,EAAQ,EAARA,KAClC/L,EAAWD,EAAY5B,EAASD,GADU,EAExBG,mBAAS,GAFe,mBAEzC6d,EAFyC,KAEnCM,EAFmC,KAG1C2O,EAAUltB,EAAgBC,EAAOC,EAAS,WAC1CitB,EAAgBxrB,EAAa1B,EAAO,WAEpC+sB,EAAmB7qB,EAAW,CAClCC,YAAa4I,GAAgBC,YAC7B5I,WAAY,cACZC,aAAc,kBAAMic,EAAQ,IAC5B/b,QAAS,kBAAM+b,EAAQ,IACvB9b,eAAgB,gCAChBC,aAAc,mDAGhB,OACE,cAAC,GAAD,CACEoL,KAAMA,EACNgG,MAAK,OAAE7T,QAAF,IAAEA,OAAF,EAAEA,EAAO6T,MACdC,aAAcpL,GAAuBW,WACrCjE,UAAU,qBAJZ,SAME,eAAC,GAAD,CAAc4Y,KAAMA,EAAMC,WAAY,EAAEnc,GAAxC,UAEE,eAAC,GAAD,CACE2b,MAAOzd,EAAMyd,MACbC,cAAe,kBAAMY,EAAQ,IAC7Bre,QAASA,EACT4d,MAAO7d,EAAM6d,MACbD,KAAM,GALR,UAOE,eAAC,GAAD,CAAavR,WAAS,EAAtB,0BAEE,uBAAMjH,UAAU,oDAAhB,kBAA0EpF,EAAMsE,cAChF,uBACC4oB,EACC,sBAAM9nB,UAAU,oDAAhB,qBAEA,cAAC,GAAD,CAAY+T,OAAQ8T,EAASlQ,WAAS,EAACpO,KAAK,UAPhD,yBAWA,qBAAKvJ,UAAU,2CAIjB,cAAC,WAAD,UACI8nB,EAOA,cAAC,GAAD,CAAeH,iBAAkBA,EAAkBxM,MAAOvgB,EAAMugB,QANhE,cAAC,GAAD,CACEtgB,QAASA,EACTuN,MAAK,UAAKyf,EAAQlc,KAAb,oCACL6L,YAAY,6EAQlB,cAAC,GAAD,CACE3c,QAASA,EACTuN,MAAM,UACNoP,YAAY,2DCzEhBuQ,GAAkB,SAACzY,EAAQ0Y,EAAYC,EAAQC,EAAYvV,GAC/D,IAAMwV,EAAmB,iBACnBC,EAAW9Y,EAAS,IAAM,EAAI,OAAS,MAC7C,OAAO5I,aACLyhB,EADS,UAENA,EAFM,aAEeC,GACxBJ,GAAcC,IAAW3Y,GAAzB,UAAsC6Y,EAAtC,YACAD,GAAcvV,IAAWrD,GAAzB,UAAsC6Y,EAAtC,cAIJ,SAASE,GAAT,GAUI,IATF1L,EASC,EATDA,KASC,IARDsL,cAQC,MARQ,EAQR,MAPDD,kBAOC,aANDrV,cAMC,MANQ,EAMR,MALDuV,kBAKC,aAJDI,kBAIC,MAJY,EAIZ,MAHDC,iBAGC,MAHW,QAGX,MAFDpZ,eAEC,SADDqZ,EACC,EADDA,WAEMthB,EAAY,SACZuhB,EAAkB,gBAClBC,EAAiB,eACjBzS,EAAS7J,KAAKkR,IAAI2K,EAAStV,GAEjC,OACE,sBAAK3S,UAAW0G,aAAK,GAAD,OAAIQ,GAAaiI,GAAO,UAAOjI,EAAP,eAA5C,UACE,sBACE4S,MAAM,6BACN/K,QAAQ,cACRgL,SAAS,UACT/Z,UAAW0G,aAAK,GAAD,OAAIQ,EAAJ,UAJjB,UAME,yBAEA,sBACE8S,EAAE,mNACF1Y,KAAK,YAGN4mB,GACC,sBACErZ,GAAG,SACH7O,UAAW0G,aAAK,GAAD,OAAIQ,EAAJ,YAAyBiI,GAAO,UAAOsZ,EAAP,iBAC/C5e,MAAO,CAAE8e,UAAU,UAAD,OAAqB,EAAThW,EAAZ,SAClBqH,EAAE,uFAIN,oBAAGnG,MAAM,iBAAT,UACE,sBACEhF,GAAG,sBACH7O,UAAW+nB,GAAgB,GAAIC,EAAYC,EAAQC,EAAYvV,GAC/DqH,EAAE,qZAEJ,sBACEnL,GAAG,qBACH7O,UAAW+nB,GAAgB,EAAGC,EAAYC,EAAQC,EAAYvV,GAC9DqH,EAAE,uaAEJ,sBACEnL,GAAG,qBACH7O,UAAW+nB,GAAgB,EAAGC,EAAYC,EAAQC,EAAYvV,GAC9DqH,EAAE,smBAEJ,sBACEnL,GAAG,qBACH7O,UAAW+nB,GAAgB,EAAGC,EAAYC,EAAQC,EAAYvV,GAC9DqH,EAAE,0IAGJ,sBACEnL,GAAG,qBACH7O,UAAW+nB,GAAgB,EAAGC,EAAYC,EAAQC,EAAYvV,GAC9DqH,EAAE,gbAGJ,sBACEnL,GAAG,qBACH7O,UAAW+nB,GAAgB,EAAGC,EAAYC,EAAQC,EAAYvV,GAC9DqH,EAAE,4PAGJ,sBACEnL,GAAG,qBACH7O,UAAW+nB,GAAgB,EAAGC,EAAYC,EAAQC,EAAYvV,GAC9DqH,EAAE,2HAGJ,sBACEnL,GAAG,qBACH7O,UAAW+nB,GAAgB,EAAGC,EAAYC,EAAQC,EAAYvV,GAC9DqH,EAAE,sQAGJ,sBACEnL,GAAG,qBACH7O,UAAW+nB,GAAgB,EAAGC,EAAYC,EAAQC,EAAYvV,GAC9DqH,EAAE,uRAEJ,sBACEnL,GAAG,qBACH7O,UAAW+nB,GAAgB,EAAGC,EAAYC,EAAQC,EAAYvV,GAC9DqH,EAAE,kFAGJ,sBACEnL,GAAG,sBACH7O,UAAW+nB,IAAiB,GAAIC,EAAYC,EAAQC,EAAYvV,GAChEqH,EAAE,qZAEJ,sBACEnL,GAAG,qBACH7O,UAAW+nB,IAAiB,EAAGC,EAAYC,EAAQC,EAAYvV,GAC/DqH,EAAE,uaAEJ,sBACEnL,GAAG,qBACH7O,UAAW+nB,IAAiB,EAAGC,EAAYC,EAAQC,EAAYvV,GAC/DqH,EAAE,smBAEJ,sBACEnL,GAAG,qBACH7O,UAAW+nB,IAAiB,EAAGC,EAAYC,EAAQC,EAAYvV,GAC/DqH,EAAE,0IAEJ,sBACEnL,GAAG,qBACH7O,UAAW+nB,IAAiB,EAAGC,EAAYC,EAAQC,EAAYvV,GAC/DqH,EAAE,gbAEJ,sBACEnL,GAAG,qBACH7O,UAAW+nB,IAAiB,EAAGC,EAAYC,EAAQC,EAAYvV,GAC/DqH,EAAE,4PAEJ,sBACEnL,GAAG,qBACH7O,UAAW+nB,IAAiB,EAAGC,EAAYC,EAAQC,EAAYvV,GAC/DqH,EAAE,2HAEJ,sBACEnL,GAAG,qBACH7O,UAAW+nB,IAAiB,EAAGC,EAAYC,EAAQC,EAAYvV,GAC/DqH,EAAE,sQAEJ,sBACEnL,GAAG,qBACH7O,UAAW+nB,IAAiB,EAAGC,EAAYC,EAAQC,EAAYvV,GAC/DqH,EAAE,uRAEJ,sBACEnL,GAAG,qBACH7O,UAAW+nB,IAAiB,EAAGC,EAAYC,EAAQC,EAAYvV,GAC/DqH,EAAE,kFAGJ,sBACEnL,GAAG,mBACH7O,UAAW+nB,GAAgB,EAAGC,EAAYC,EAAQC,EAAYvV,GAC9DqH,EAAE,qXAILgO,GACC,sBACEnZ,GAAG,SACH7O,UAAW0G,aAAK,GAAD,OAAIQ,EAAJ,YAAyBiI,GAAO,UAAOsZ,EAAP,iBAC/C5e,MAAO,CAAE8e,UAAU,UAAD,OAAqB,EAATV,EAAZ,SAClBjO,EAAE,4GAILwO,GACC,oBAAGxoB,UAAW0G,aAAK,GAAD,OAAIQ,EAAJ,aAAlB,UACc,IAAX+O,GACC,8BACE,sBACE3U,KAAK,UACL0Y,EAAE,kGAEJ,sBACEA,EAAE,yGACF1Y,KAAK,YAKC,IAAX2U,GACC,8BACE,sBACE3U,KAAK,UACL0Y,EAAE,kGAEJ,sBACEA,EAAE,8RACF1Y,KAAK,YAKC,IAAX2U,GACC,oBAAGjW,UAAW0G,aAAK,GAAD,OAAIQ,EAAJ,aAAlB,UACE,sBACE5F,KAAK,UACL0Y,EAAE,kGAEJ,sBACEA,EAAE,yRACF1Y,KAAK,gBAOE,IAAhBgnB,GACC,oBAAGtoB,UAAW0G,aAAK,GAAD,OAAIgiB,EAAJ,YAAsBA,EAAtB,SAAlB,UACE,sBACEpnB,KAAK,UACL0Y,EAAE,kNAEJ,sBACE1Y,KAAK,UACL0Y,EAAE,4HAEJ,uBAAMxE,EAAE,KAAKC,EAAE,KAAKnU,KAAK,UAAUuI,MAAO,CAAE+e,WAAY,SAAxD,oBACUL,EADV,yCAMY,IAAfD,GACC,oBAAGtoB,UAAW0G,aAAK,GAAD,OAAIgiB,EAAJ,YAAsBA,EAAtB,SAAlB,UACE,uBAAMlT,EAAE,MAAMC,EAAE,KAAKnU,KAAK,UAAUuI,MAAO,CAAE+e,WAAY,OAAzD,oBACUL,EADV,sCAGA,sBACEjnB,KAAK,UACL0Y,EAAE,kNAEJ,sBACE1Y,KAAK,UACL0Y,EAAE,oIAKV,cAAC,GAAD,CAAMiN,KAAMtK,EAAKsK,KAAMC,MAAOvK,EAAKuK,MAAOlnB,UAAU,oBAqB1DqoB,GAAKxhB,aAAe,CAClBohB,OAAQ,EACRD,YAAY,EACZrV,OAAQ,EACRuV,YAAY,EACZM,YAAY,EACZF,WAAY,EACZC,UAAW,QACXpZ,SAAS,GAGIhI,sBAAKkhB,ICtRdQ,GAAU,SAAClM,GACf,OAAoB,IAAhBA,EAAKhK,OACA,8BAGLgK,EAAKhK,OAAS,EACV,IAAN,OAAWvG,KAAKkR,IAAIX,EAAKhK,QAAzB,sBAA8CgK,EAAKsK,KAAnD,KAGI,IAAN,OAAWtK,EAAKhK,OAAhB,sBAAoCgK,EAAKuK,MAAzC,MAwDa4B,OArDf,YAAgD,IAArBC,EAAoB,EAApBA,WAAYpM,EAAQ,EAARA,KAAQ,EACrB5hB,mBAAS,IADY,mBACtCiuB,EADsC,KAChCC,EADgC,KAG7C,OACE,sBAAKjpB,UAAU,sBAAf,UACE,cAAC,GAAD,gCACA,eAAC,GAAD,CAAaiH,WAAS,EAAtB,4EAC4D4hB,GAAQlM,GADpE,uCAGE,uBAHF,UAKE,+BACE,0IAGA,qIACA,8HACA,iGACA,2GAIJ,cAAC,GAAD,CAAMA,KAAMA,EAAMuL,YAAU,EAACvV,OAAQgK,EAAKhK,SAE1C,eAAC,IAAD,CAAO3S,UAAU,qDAAjB,UACE,cAAC,KAAD,CACEyS,SAAU,SAACC,GAAD,OAAOuW,EAAQvW,EAAEC,OAAOhT,MAAMupB,gBACxCtW,YAAY,uBACZ5S,UAAU,oBAEZ,cAAC,KAAD,CACEkI,KAAK,UACL8K,UAAWrM,QAAQqiB,GACnB7gB,QAAS,WACP4gB,EAAW,CAAEC,UAJjB,gCCoBOG,OAzDf,YAAkD,IAAzBvuB,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,QAAS4N,EAAQ,EAARA,KACjC/L,EAAWD,EAAY5B,EAASD,GADS,EAEvBG,mBAAS,GAFc,mBAExC6d,EAFwC,KAElCM,EAFkC,KAGzC2O,EAAUltB,EAAgBC,EAAOC,EAAS,WAC1CitB,EAAgBxrB,EAAa1B,EAAO,WAEpCmuB,EAAajsB,EAAW,CAC5BC,YAAa4I,GAAgBE,WAC7B7I,WAAY,cACZC,aAAc,kBAAMic,EAAQ,IAC5B/b,QAAS,kBAAM+b,EAAQ,IACvB9b,eAAgB,6BAChBC,aAAc,kDAGhB,OACE,cAAC,GAAD,CACEoL,KAAMA,EACNgG,MAAK,OAAE7T,QAAF,IAAEA,OAAF,EAAEA,EAAO6T,MACdC,aAAcpL,GAAuBY,UACrClE,UAAU,oBAJZ,SAME,eAAC,GAAD,CAAc4Y,KAAMA,EAAMC,WAAY,EAAEnc,GAAxC,UAEE,cAAC,WAAD,UACIorB,EAWA,cAAC,GAAD,CAAiBnL,KAAM/hB,EAAM+hB,KAAMoM,WAAYA,IAV/C,cAAC,GAAD,CACEluB,QAASA,EACTuN,MAAK,UAAKyf,EAAQlc,KAAb,oCACL6L,YAAY,iDAHd,SAKE,qBAAKxX,UAAU,8BAAf,SACE,cAAC,GAAD,CAAMinB,KAAMrsB,EAAM+hB,KAAKsK,KAAMC,MAAOtsB,EAAM+hB,KAAKuK,cASvD,cAAC,GAAD,CACErsB,QAASA,EACTuN,MAAM,UACNoP,YAAY,2DC6CP4R,OA7Ff,YAQI,IAPFlqB,EAOC,EAPDA,WACAmqB,EAMC,EANDA,eACAC,EAKC,EALDA,iBACAtqB,EAIC,EAJDA,eACAuqB,EAGC,EAHDA,YACA5M,EAEC,EAFDA,KACAmL,EACC,EADDA,cACC,EAC2B/sB,mBAAS,GADpC,mBACMktB,EADN,KACcuB,EADd,KAGD,OACE,sBAAKxpB,UAAU,yBAAf,UACE,cAAC,GAAD,UACG8nB,EACC,gEAEA,iDAAoB5oB,EAApB,iBAGJ,eAAC,GAAD,CAAa+H,WAAS,EAAtB,0CAC4B,sBAAMjH,UAAU,+BAAhB,SAAgD2c,EAAKqM,OADjF,gBAEK,IACH,mCACGrM,EAAKsK,KADR,IACetK,EAAKuK,SAJtB,OASA,cAAC,GAAD,CAAMvK,KAAMA,EAAMuL,YAAY,EAAOvV,OAAQgK,EAAKhK,OAAQqV,WAAYhpB,EAAgBipB,OAAQA,IAE7FjpB,EACC,cAAC,GAAD,CAAaiI,WAAS,EAAtB,SACG6gB,EACC,kGAEA,+BACE,sJAIA,qGACsE,IACnEwB,EAAmB,WAAU,cAAC,GAAD,CAAYvV,OAAQsV,IAFpD,gEASN,cAAC,GAAD,CAAapiB,WAAS,EAAtB,4SAODjI,GACC,gCACE,cAAC,KAAD,CAAQyc,aAAc,EAAGvR,KAAM,GAAIC,IAAK,GAAIsI,SAAU+W,IACrDF,GACC,qBAAKtpB,UAAU,qDAAf,SACE,eAAC,KAAD,CACEkI,KAAK,UACLC,QAAS,WACPohB,EAAY,CAAErE,MAAO+C,KAEvBjV,UAAWsW,EALb,8BAOoBrB,cCXnBwB,OAvDf,YAA+C,IAAzB7uB,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,QAAS4N,EAAQ,EAARA,KAC9B/L,EAAWD,EAAY5B,EAASD,GADM,EAEpBG,mBAAS,GAFW,mBAErC6d,EAFqC,KAE/BM,EAF+B,KAGtC2O,EAAUltB,EAAgBC,EAAOC,EAAS,WAC1C6uB,EAAa/uB,EAAgBC,EAAOC,EAAS,kBAC7CyuB,EAAmBhtB,EAAa1B,EAAO,kBACvCktB,EAAgBxrB,EAAa1B,EAAO,WACpCoE,EAAiBD,EAAkBnE,EAAOC,GAE1C0uB,EAAczsB,EAAW,CAC7BC,YAAa4I,GAAgBG,YAC7B9I,WAAY,eACZC,aAAc,kBAAMic,EAAQ,IAC5B/b,QAAS,kBAAM+b,EAAQ,IACvB9b,eAAgB,8BAChBC,aAAc,qDAGhB,OACE,cAAC,GAAD,CACEoL,KAAMA,EACNgG,MAAK,OAAE7T,QAAF,IAAEA,OAAF,EAAEA,EAAO6T,MACdC,aAAcpL,GAAuBa,MACrCnE,UAAU,gBAJZ,SAME,eAAC,GAAD,CAAc4Y,KAAMA,EAAMC,WAAY,EAAEnc,GAAxC,UAEE,cAAC,GAAD,CACEwC,WAAYtE,EAAMsE,WAClB2oB,QAASA,EACTwB,eAAgBK,EAChBJ,iBAAkBA,EAClBC,YAAaA,EACbvqB,eAAgBA,EAChB2d,KAAM/hB,EAAM+hB,KACZmL,cAAeA,IAIjB,cAAC,GAAD,CACEjtB,QAASA,EACTuN,MAAM,UACNoP,YAAY,2D,oBCgCPmS,OA5Ef,YAOI,IANFzqB,EAMC,EANDA,WACA0qB,EAKC,EALDA,gBACAC,EAIC,EAJDA,sBACA7qB,EAGC,EAHDA,eACA8qB,EAEC,EAFDA,iBACAnN,EACC,EADDA,KAEA,OACE,sBAAK3c,UAAU,yBAAf,UACE,eAAC,GAAD,2BAAqBd,EAArB,qBACA,eAAC,GAAD,CAAa+H,WAAS,EAAtB,oFACiE0V,EAAKsL,OADtE,eAC0F,IACxF,sBAAMjoB,UAAU,+BAAhB,SAAgD2c,EAAKqM,OAFvD,gBAEiF,IAC/E,mCACGrM,EAAKsK,KADR,IACetK,EAAKuK,SAJtB,OASA,cAAC,GAAD,CAAMvK,KAAMA,EAAMuL,YAAY,EAAOvV,OAAQgK,EAAKhK,OAAQqV,YAAU,EAACC,OAAQtL,EAAKsL,SAEjFjpB,EACC,eAAC,GAAD,CAAaiI,WAAS,EAAtB,8EAEE,uBACC4iB,EAAwB,WAAU,cAAC,GAAD,CAAY9V,OAAQ6V,IAHzD,iDAIqB,uBAJrB,2GAQA,cAAC,GAAD,CAAa3iB,WAAS,EAAtB,wLAMD4iB,GACC,qBAAK7pB,UAAU,qDAAf,SACE,eAAC,IAAD,WACE,eAAC,KAAD,CACEkI,KAAK,UACLC,QAAS,WACP2hB,EAAiB,CAAExB,YAAa,KAHpC,UAME,cAACyB,GAAA,EAAD,IANF,2BAQA,eAAC,KAAD,CACE7hB,KAAK,UACLC,QAAS,WACP2hB,EAAiB,CAAExB,WAAY,KAHnC,iCAMsB,cAAC0B,GAAA,EAAD,gBCCnBC,OArDf,YAA+C,IAAzBrvB,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,QAAS4N,EAAQ,EAARA,KAC9B/L,EAAWD,EAAY5B,EAASD,GADM,EAEpBG,mBAAS,GAFW,mBAErC6d,EAFqC,KAE/BM,EAF+B,KAGtC2O,EAAUltB,EAAgBC,EAAOC,EAAS,WAC1C+uB,EAAkBjvB,EAAgBC,EAAOC,EAAS,mBAClDgvB,EAAwBvtB,EAAa1B,EAAO,mBAC5CoE,EAAiBD,EAAkBnE,EAAOC,GAE1CivB,EAAmBhtB,EAAW,CAClCC,YAAa4I,GAAgBI,iBAC7B/I,WAAY,qBACZC,aAAc,kBAAMic,EAAQ,IAC5B/b,QAAS,kBAAM+b,EAAQ,IACvB9b,eAAgB,8BAChBC,aAAc,qDAGhB,OACE,cAAC,GAAD,CACEoL,KAAMA,EACNgG,MAAK,OAAE7T,QAAF,IAAEA,OAAF,EAAEA,EAAO6T,MACdC,aAAcpL,GAAuBc,YACrCpE,UAAU,gBAJZ,SAME,eAAC,GAAD,CAAc4Y,KAAMA,EAAMC,WAAY,EAAEnc,GAAxC,UAEE,cAAC,GAAD,CACEwC,WAAiC,MAArBtE,EAAMsE,WAAqB,IAAM,IAC7C2oB,QAASA,EACT+B,gBAAiBA,EACjBC,sBAAuBA,EACvBC,iBAAkBA,EAClB9qB,gBAAiBA,EACjB2d,KAAM/hB,EAAM+hB,OAId,cAAC,GAAD,CACE9hB,QAASA,EACTuN,MAAM,UACNoP,YAAY,2DCrCtB,SAAS0S,GAAyBC,EAAiBhrB,GAAwB,IAAlBirB,EAAiB,wDAChEC,EAAaF,EAAbE,IAAK5uB,EAAQ0uB,EAAR1uB,IAEb,OAAY,IAAR4uB,EACI,UAAN,OAAiBlrB,EAAjB,mEAA6E1D,EAA7E,oBAIU,IAAR4uB,EACI,0BAAN,OAAiClrB,EAAjC,qBAGU,IAARkrB,GAAaD,EACT,yBAAN,OACkBjrB,EADlB,mBACiCkrB,EADjC,4CACwE5uB,EADxE,4FAMU,IAAR4uB,EACI,oCAAN,OAA2ClrB,GAGvC,kBAAN,OACaA,EADb,mBAC4BkrB,EAD5B,kDACsE5uB,EADtE,kBAKF,SAAS6uB,GAA8BH,EAAiBhrB,GAAO,IACrDkrB,EAAQF,EAARE,IAER,OAAY,IAARA,EACI,gDAAN,OACyClrB,EADzC,aAKI,kBAAN,OACaA,EADb,6CACsDkrB,EADtD,iBA6DaE,OAxDf,YAAgD,IAAD,EAAxB3vB,EAAwB,EAAxBA,MAAgB6N,GAAQ,EAAjB5N,QAAiB,EAAR4N,MAC/ByX,EAAkBpjB,EAAW,CACjCC,YAAa4I,GAAgBL,cAC7BtI,WAAY,aACZI,eAAgB,sCAChBC,aAAc,2DAGRmP,EAAYwK,oBAAS,CAC3BC,gBAAiB1K,GAAW,GAC5B2K,WAAW,IAFL1K,QAKF+b,EAAiC,MAArB3tB,EAAMsE,WAAqB,IAAM,IAEnD,OACE,eAAC,GAAD,CACEuJ,KAAMA,EACNgG,MAAK,OAAE7T,QAAF,IAAEA,OAAF,EAAEA,EAAO6T,MACdC,aAAcpL,GAAuBe,OACrCrE,UAAU,gBAJZ,UAME,cAAC,GAAD,oCACA,cAAC,GAAD,CACE2c,KAAM/hB,EAAM+hB,KACZqL,WAAYxb,EAAU,EACtByb,OAAQrtB,EAAM+hB,KAAKsL,OACnBC,WAAY1b,EAAU,EACtBmG,OAAQ/X,EAAM+hB,KAAKhK,OACnB6V,WAAYhc,EAAU,EACtByJ,OAAM,OAAErb,QAAF,IAAEA,GAAF,UAAEA,EAAOuvB,uBAAT,aAAE,SAAyBvvB,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAOsE,YAAYmrB,IACpD/B,WAAY1tB,EAAM+hB,KAAK6N,MACvBjC,UAAWA,EACXpZ,SAAO,IAET,eAAC,GAAD,CAAalI,WAAS,EAAtB,UACGijB,GACCtvB,EAAMuvB,gBAAgBvvB,EAAMsE,YAC5BtE,EAAMsE,WACNtE,EAAM6vB,eAER,uBACCH,GAA8B1vB,EAAMuvB,gBAAgB5B,GAAYA,MAGnE,cAACjV,GAAD,CAAiBH,OAAQ,kBAAM+M,EAAgB,KAAKxf,MAAM,+CC9BjDgqB,OA9Bf,YAA4C,IAAXhvB,EAAU,EAAVA,OACzBb,EAAUyD,EAAe5C,EAAQ2H,IACjCzI,EAAQkE,EAAapD,EAAQ2H,IAFM,EAG5BlH,EAAe,MAArBN,EAHkC,sBAIjBd,mBAAS,IAJQ,mBAIlC0N,EAJkC,KAI5Boa,EAJ4B,KAgBzC,GATA3nB,qBAAU,WACR2nB,GAAc,OAANnnB,QAAM,IAANA,OAAA,EAAAA,EAAS,IAAKgO,EAAShO,EAAO,IAAM,MAC3C,CAACA,KAOCG,EACH,OAAO,cAAC,GAAD,CAAOhB,QAASA,EAASD,MAAOA,EAAO6N,KAAMA,IAGtD,IAAMqa,EA3CR,SAA4BrU,GAC1B,OAAQA,GACN,KAAKnL,GAAuBC,MAC1B,OAAOuQ,GACT,KAAKxQ,GAAuB/C,MAC1B,OAAO+T,GACT,KAAKhR,GAAuBW,WAC1B,OAAO2jB,GACT,KAAKtkB,GAAuBY,UAC1B,OAAOilB,GACT,KAAK7lB,GAAuBa,MAC1B,OAAOslB,GACT,KAAKnmB,GAAuBc,YAC1B,OAAO6lB,GACT,KAAK3mB,GAAuBe,OAC1B,OAAOkmB,GACT,KAAKjnB,GAAuBK,UAC1B,OAAO2c,GACT,QACE,OAAO/R,IAwBawU,CAAmBnoB,EAAM6T,OAEjD,OACE,eAAC,WAAD,WACE,cAAC,GAAD,CAAgB5T,QAASA,EAASD,MAAOA,EAAO6N,KAAMA,EAAM5M,GAAIA,IAChE,cAACinB,EAAD,CAAiBjoB,QAASA,EAASD,MAAOA,EAAO6N,KAAMA,QCF9CkiB,OA1Df,YAA0E,IAAD,IAA5CC,aAA4C,MAApC,GAAoC,EAAhCC,EAAgC,EAAhCA,oBAAqBC,EAAW,EAAXA,QAAW,EAC7B/vB,mBAAS,IADoB,mBAChEgwB,EADgE,KACjDC,EADiD,KAGjEC,EAAqB3rB,OAAOqU,KAAKoX,GACjCG,EAA4C,IAA9BD,EAAmBhf,OAmBvC,OACE,sBAAKjM,UAAU,wBAAf,UACE,eAAC,GAAD,CAAOgH,OAAK,EAAZ,8CAA+C8jB,EAAQnf,QAEvD,cAAC,GAAD,CAAa3E,OAAK,EAAlB,0HAIA,oBAAIhH,UAAU,cAAd,SACG4qB,EAAMrpB,KAAI,SAAC4pB,GACV,OACE,oBAAInrB,UAAU,oBAAd,SACE,yBAAQA,UAAU,sBAAsBmI,QAAS,kBAxBvCijB,EAwB0DD,EAAKtc,QAvBnFmc,GAAiB,SAAC3N,GAChB,IAAMqG,EAAQ,eAAQrG,GAMtB,OALIqG,EAAS0H,UACJ1H,EAAS0H,GAEhB1H,EAAS0H,IAAU,EAEd1H,KARU,IAAC0H,GAwBV,UACE,sBAAMprB,UAAU,oBAAhB,SAAqCmrB,EAAK7T,OAC1C,sBAAMtX,UAAU,oBAAhB,SAAqC+qB,EAAcI,EAAKtc,KAAO,cAAC4F,GAAA,EAAD,UAH5B0W,EAAKtc,SAUlD,cAAC,GAAD,CACEnO,MAAM,eACN2G,KAAM,cAAC+U,GAAA,EAAD,IACNlU,KAAK,UACLC,QAAS,kBAAM0iB,EAAoB,CAAElQ,MAAOsQ,KAC5CjY,SAAUkY,EACV/T,SA5CuB,WAC3B,IAAMkU,EAAkBT,EAAM,GAAG/b,GACjCgc,EAAoB,CAAElQ,MAAO,CAAC0Q,MA2C1BxT,SAAU,GACVC,UAAWoT,QCgDJI,OA1Ff,YAAuD,IAAD,EAAxB1wB,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,QAAS4N,EAAQ,EAARA,KACtC/L,EAAWD,EAAY5B,EAASD,GAChCkwB,EAAUnwB,EAAgBC,EAAOC,EAAS,WAC1C0wB,EAAgBjvB,EAAa1B,EAAO,WAHU,EAI5BG,mBAAS,GAJmB,mBAI7C6d,EAJ6C,KAIvCM,EAJuC,KAMpDhe,qBAAU,WAAO,IAAD,EACD,IAAT0d,IAAA,UAAche,EAAM4wB,0BAApB,aAAc,EAA0BlU,OAC1CzZ,IAAQ4K,KAAR,0CAAgD7N,EAAM4wB,mBAAmBlU,MAAQ,KAElF,CAACsB,EAAD,OAAOhe,QAAP,IAAOA,OAAP,EAAOA,EAAO4wB,mBAAmBlU,OAEpC,IAAMuT,EAAsB/tB,EAAW,CACrCC,YAAaiJ,GAAeC,yBAC5BjJ,WAAY,eACZC,aAAc,kBAAMic,EAAQ,IAC5B/b,QAAS,kBAAM+b,EAAQ,IACvB9b,eAAgB,iEAChBC,aAAc,qEAGhB,OACE,cAAC,GAAD,CACEoL,KAAMA,EACNgG,MAAK,OAAE7T,QAAF,IAAEA,OAAF,EAAEA,EAAO6T,MACdC,aAAcpL,GAAkBgB,eAChCtE,UAAU,yBAJZ,SAME,eAAC,GAAD,CAAc4Y,KAAMA,EAAMC,WAAY,EAAEnc,GAAxC,UAEE,eAAC,GAAD,CAAmB2b,MAAOzd,EAAMyd,MAAOC,cAAe,kBAAMY,EAAQ,IAAIV,KAAM,EAA9E,UACE,eAAC,GAAD,CAAavR,WAAS,EAAtB,8BAEE,sBAAMjH,UAAU,oDAAhB,SACGurB,EACC,UAEA,qCACE,cAAC,GAAD,CAAQ1c,GAAIic,EAAQpZ,WADtB,IACoCoZ,EAAQnf,UAPlD,+BAW2B,wBACnB,OAAL/Q,QAAK,IAALA,OAAA,EAAAA,EAAO6wB,aAAP,qCAAgD7wB,EAAM6wB,aAAgB,kCAEzE,sBAAKzrB,UAAU,sCAAf,6BAEE,uBACA,cAAC,KAAD,CACE4gB,QAAO,UAAEhmB,EAAMinB,kBAAR,QAAsB,EAC7B6J,OAAO,SACP/K,YAAa,CACX,KAAM,UACN,MAAO,UACP,OAAQ,mBAOhB,cAAC,WAAD,UACG4K,EACC,cAAC,GAAD,CACE1wB,QAASA,EACTuN,MAAM,mCACNoP,YAAY,6DAGd,cAAC,GAAD,CACEoT,MAAK,OAAEhwB,QAAF,IAAEA,OAAF,EAAEA,EAAOgwB,MACdC,oBAAqBA,EACrBC,QAASA,MAMf,cAAC,GAAD,CAAajwB,QAASA,EAASuN,MAAM,UAAUoP,YAAY,6CCzFnE,SAASmU,GAAT,GAA6D,IAArCR,EAAoC,EAApCA,KAAoC,IAA9B3U,cAA8B,MAArB,kBAAqB,EAC1D,OACE,cAAC,GAAD,CAAM7V,MAAM,SAAS6V,OAAQA,EAAQjN,KAAK,QAA1C,gBACG4hB,QADH,IACGA,IAAQ,cAAClQ,GAAA,EAAD,MAUA9T,sBAAKwkB,IC2DLC,OAtEf,YAA4F,IAAlEC,EAAiE,EAAjEA,kBAAmBC,EAA8C,EAA9CA,WAA8C,IAAlCC,yBAAkC,MAAd,EAAc,EAAXjB,EAAW,EAAXA,QAAW,EACnD/vB,mBAAS,IAD0C,mBAClFixB,EADkF,KACrEC,EADqE,KAGnFC,EAAgB,SAACxZ,GAAO,IAAD,EACLA,EAAEC,OAAhB9D,EADmB,EACnBA,GAAIlP,EADe,EACfA,MACZ,GAAIkP,IAAW,OAALlP,QAAK,IAALA,OAAA,EAAAA,EAAOsM,QAAS,EAAG,CAC3B,IAAMkgB,EAAWtd,EAAGyL,MAAM,KAAK,GACzB7Y,EAAQ2qB,OAAOD,GAAY,EACjCF,GAAe,SAAC5O,GACd,IAAMqG,EAAQ,eAAQrG,GAEtB,OADAqG,EAASjiB,GAAS9B,EAAMupB,cAAcrd,OAC/B6X,OAKP2I,EAAoB/sB,OAAOC,OAAOysB,GAExC,OACE,sBAAKhsB,UAAU,yBAAf,UACE,eAAC,GAAD,oCAA8B8qB,EAAQnf,QAEtC,eAAC,GAAD,CAAa1E,WAAS,EAAtB,0FAEE,uBAFF,wFAIE,uBAJF,8EAME,0BAGF,cAAC,GAAD,CAAMkkB,KAAMW,EAAWxU,KAAMd,OAAO,oBAEnCuV,EAAoB,GACnB,eAAC,GAAD,CAAa9kB,WAAS,EAAtB,+EAC+D8kB,EAD/D,mBAKF,cAAC,IAAD,CAAO/rB,UAAU,iCAAjB,SACGqB,MAAM0qB,GACJzqB,KAAK,GACLC,KAAI,SAACse,EAAOpe,GACX,IAAMoN,EAAE,qBAAiBgR,EAAQpe,GACjC,OACE,cAAC,KAAD,CACEmR,YAAY,eAEZ/D,GAAIA,EACJ4D,SAAUyZ,EACVlsB,UAAU,iCAHL6O,QASf,cAAC,IAAD,CAAO7O,UAAU,iCAAjB,SACE,cAAC,KAAD,CACEqH,KAAM,cAAC+U,GAAA,EAAD,IACNlU,KAAK,UACLC,QAAS,kBAAM0jB,EAAkBQ,IACjCrZ,SAAUqZ,EAAkBpgB,OAAS8f,EAJvC,SAMGA,EAAoB,EAAI,sBAAqB,6BCwBzCO,OAjFf,YAAiD,IAAzB1xB,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,QAAS4N,EAAQ,EAARA,KAAQ,EACxBnL,IAAbC,EADqC,oBAExCb,EAAWD,EAAY5B,EAASD,GAFQ,EAG7BuB,EAAe,UAAzBT,EAHuC,sBAI3BS,EAAe,YAA3BR,EAJuC,sBAKjCQ,EAAe,MAArBN,EALuC,sBAMtBd,mBAAS,GANa,mBAMvC6d,EANuC,KAMjCM,EANiC,KAOxC4R,EAAUnwB,EAAgBC,EAAOC,EAAS,WAC1C0wB,EAAgBjvB,EAAa1B,EAAO,WAEpCixB,EAAoBruB,sBAAW,uCACnC,WAAOwuB,GAAP,SAAAtuB,EAAA,sEAEIH,EAAU,qBAAqB,GAC/B2b,EAAQ,GAHZ,SAI2BlT,GAAeE,kBAAkB,CACtDxK,SACAC,WACAgC,WAAY9B,EACZmwB,gBARN,cAWiBpuB,MACXC,IAAQC,QACN,kGAbR,gDAiBIC,IAAaC,MAAM,CACjBH,QAAS,uEACTI,YAAaC,KAAKC,UAAU,KAAEN,SAC9BO,UAAW,eAEbC,QAAQL,MAAR,MACAkb,EAAQ,GAvBZ,yBAyBI3b,EAAU,qBAAqB,GAzBnC,4EADmC,sDA6BnC,CAAC7B,EAAQC,EAAUE,EAAI0B,IAGzB,OACE,cAAC,GAAD,CACEkL,KAAMA,EACNgG,MAAK,OAAE7T,QAAF,IAAEA,OAAF,EAAEA,EAAO6T,MACdC,aAAcpL,GAAkBiB,QAChCvE,UAAU,uBAJZ,SAME,eAAC,GAAD,CAAc4Y,KAAMA,EAAMC,WAAY,EAAEnc,GAAxC,UAEE,cAAC,WAAD,UACG6uB,EACC,cAAC,GAAD,CACE1wB,QAASA,EACTuN,MAAM,mCACNoP,YAAY,6DAGd,cAAC,GAAD,CACEsT,QAASA,EACTe,kBAAmBA,EACnBC,WAAYlxB,EAAMkxB,WAClBC,kBAAmBnxB,EAAMmxB,sBAM/B,cAAC,GAAD,CAAalxB,QAASA,EAASuN,MAAM,UAAUoP,YAAY,6C,kBCzEnE,SAAS+U,GAAT,GAAmE,IAAzCC,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,QAAS/a,EAAmB,EAAnBA,SAAUjQ,EAAS,EAATA,MACvD,OACE,eAAC,GAAD,CACE8H,KAAK,SACL5I,MAAO0N,GAAkB5M,GACzBzB,UAAW0G,aAAK+lB,GAAW,8BAC3BjW,OAAQ9U,EAAQD,GAJlB,UAMGgrB,EACC,cAAC,KAAD,CAAWljB,KAAK,QAAQvJ,UAAU,uCAAlC,SACE,cAAC0sB,GAAA,EAAD,MAGF,cAAC,GAAD,CAAQ7d,GAAI6C,EAAUnI,KAAK,QAAQvJ,UAAU,yCAE9CwsB,KAKQrlB,sBAAKolB,IC8FLI,OAhHf,YAOI,IANFlB,EAMC,EANDA,YACA5vB,EAKC,EALDA,GACAiwB,EAIC,EAJDA,WACAE,EAGC,EAHDA,YACAY,EAEC,EAFDA,sBACA/xB,EACC,EADDA,QACC,EACmByC,IAAblC,EADN,sBAE+CL,mBAASixB,GAFxD,mBAEMa,EAFN,KAEwBC,EAFxB,OAGiB3wB,EAAe,WAA1BJ,EAHN,oBAsBKswB,EAAoB/sB,OAAOC,OAAOstB,GAClCE,EAAoBtB,IAAgB5vB,EAE1C,OACE,sBAAKmE,UAAU,kCAAf,UACE,cAAC,GAAD,CAAOgH,OAAK,EAAZ,sCACA,cAAC,GAAD,CAAMmkB,KAAMW,EAAWxU,KAAMd,OAAO,oBACpC,eAAC,GAAD,CAAavP,WAAS,EAAtB,0GAEE,uBAFF,gRAME,uBACA,cAAC+lB,GAAA,EAAD,IAPF,yCAOgE,IAC9D,iCACE,4BAAIvB,MACI,IAVZ,2FAWoF,uBAXpF,8EAeA,cAAC,IAAD,CAAOzrB,UAAU,+CAAjB,SACGgsB,EAAYzqB,KAAI,SAAC0rB,EAAiBxrB,GAAW,IAAD,IAC3C,OAAKsrB,GAAsBhxB,EAczB,wBAEEiE,UAAU,qDACVmI,QAAS,kBA1DG,SAAC1G,EAAOwrB,EAAiBC,GAC3CA,GAEJJ,GAAoB,SAACK,GACnB,IAAMC,EAAM,aAAOD,GASnB,OARIC,EAAO3rB,GACT2rB,EAAO3rB,GAAOgrB,SAAWW,EAAO3rB,GAAOgrB,QAEvCW,EAAO3rB,GAAP,2BACKwrB,GADL,IAEER,SAAS,IAGNW,KA6CgBC,CAAgB5rB,EAAOwrB,EAAiBA,EAAgBR,UAHzE,SAKE,cAAC,GAAD,CACED,WAAYS,EAAgBT,WAC5BC,QAAO,iBAAEI,QAAF,IAAEA,GAAF,UAAEA,EAAmBprB,UAArB,aAAE,EAA2BgrB,eAA7B,QAAwCQ,EAAgBR,QAC/D/a,SAAU7W,EAAQoyB,EAAgBtvB,YAAY+T,SAC9CjQ,MAAOA,KATX,UACUwrB,EAAgBT,WAD1B,YACwC/qB,IAbtC,8BACE,cAAC,GAAD,CACE+qB,WAAYS,EAAgBT,WAC5BC,QAASQ,EAAgBR,QACzB/a,SAAU7W,EAAQoyB,EAAgBtvB,YAAY+T,SAC9CjQ,MAAOA,KALX,UAAawrB,EAAgBT,WAA7B,YAA2C/qB,SA4BlDsrB,GACC,cAAC,IAAD,CAAO/sB,UAAU,0CAAjB,SACE,cAAC,KAAD,CACEqH,KAAM,cAAC+U,GAAA,EAAD,IACNlU,KAAK,UACLC,QAAS,kBACPykB,EAAsB,CACpBU,iBAAkBjB,EAAkBza,QAAO,SAAC4a,GAAD,OAAiBA,EAAWC,cAG3EzZ,SAAU5X,EARZ,0CAeJ,cAACkY,GAAD,CACEH,OAAQ,kBACNyZ,EAAsB,CACpBU,iBAAkBjB,EAAkBza,QAAO,SAAC4a,GAAD,OAAiBA,EAAWC,cAG3E/rB,MAAM,8CCnDC6sB,OAvDf,YAAiD,IAAzB3yB,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,QAAS4N,EAAQ,EAARA,KAAQ,EACjCtM,EAAe,MAArBN,EADuC,sBAEtBd,mBAAS,GAFa,mBAEvC6d,EAFuC,KAEjCM,EAFiC,KAGxCqS,EAAgBjvB,EAAa1B,EAAO,WAEpCgyB,EAAwB9vB,EAAW,CACvCC,YAAaiJ,GAAeG,iBAC5BnJ,WAAY,uBACZC,aAAc,kBAAMic,EAAQ,IAC5B/b,QAAS,kBAAM+b,EAAQ,IACvB9b,eAAgB,uCAChBC,aAAc,+FAGhB,OACE,cAAC,GAAD,CACEoL,KAAMA,EACNgG,MAAK,OAAE7T,QAAF,IAAEA,OAAF,EAAEA,EAAO6T,MACdC,aAAcpL,GAAkBkB,QAChCxE,UAAU,kBAJZ,SAME,eAAC,GAAD,CAAc4Y,KAAMA,EAApB,UAEE,qBAAK5Y,UAAU,wBAAf,SACGurB,EACC,cAAC,GAAD,CACE1wB,QAASA,EACTuN,MAAM,mCACNoP,YAAY,kEAGd,cAAC,GAAD,CACEiU,YAAa7wB,EAAM6wB,YACnBK,WAAYlxB,EAAMkxB,WAClBE,YAAapxB,EAAMoxB,YACnBnwB,GAAIA,EACJhB,QAASA,EACT+xB,sBAAuBA,MAM7B,cAAC,GAAD,CAAa/xB,QAASA,EAASuN,MAAM,+CAAsCoP,YAAY,qB,oBCLhFgW,OAzCf,YAAmC,IAAlBC,EAAiB,EAAjBA,cAAiB,EACZnwB,IAAblC,EADyB,sBAENL,mBAAS,IAFH,mBAEzBmqB,EAFyB,KAElBwI,EAFkB,KAI1BnE,EAAczsB,EAAW,CAC7BC,YAAaiJ,GAAeK,UAC5BrJ,WAAY,QACZI,eAAgB,iCAChBC,aAAc,sEAGhB,OACE,eAAC,WAAD,WACE,eAAC,IAAD,CAAO2C,UAAU,kCAAjB,UACE,cAAC,KAAD,CAAO4S,YAAY,wBAAwBH,SAAU,SAACC,GAAD,OAAOgb,EAAShb,EAAEC,OAAOhT,UAC9E,cAAC,KAAD,CACEuI,KAAK,UACLC,QAAS,kBAAMohB,EAAY,CAAErE,WAC7BlS,SAAUkS,EAAMjZ,OAAS,GAAK7Q,EAHhC,uBAQF,cAAC,IAAD,CAAO4E,UAAU,kCAAjB,SACE,cAAC,KAAD,CACEqH,KAAM,cAACkgB,GAAA,EAAD,IACNrf,KAAK,UACLC,QAAS,kBAAMslB,EAAc,CAAEvI,MAAO,UACtClS,SAAU5X,EAJZ,mCCwGOquB,OApHf,YAA+C,IAAzB7uB,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,QAAS4N,EAAQ,EAARA,KAAQ,EACxBnL,IAAblC,EADqC,sBAE1Be,EAAe,WAA1BJ,EAFqC,sBAGpBhB,mBAAS,GAHW,mBAGrC6d,EAHqC,KAG/BM,EAH+B,KAItC4R,EAAUnwB,EAAgBC,EAAOC,EAAS,WAC1CkyB,EAAoBzwB,EAAa1B,EAAO,eACxC2wB,EAAgBjvB,EAAa1B,EAAO,WAEpC6yB,EAAgB3wB,EAAW,CAC/BC,YAAaiJ,GAAeI,aAC5BpJ,WAAY,QACZC,aAAc,kBAAMic,EAAQ,IAC5B/b,QAAS,kBAAM+b,EAAQ,IACvB9b,eAAgB,iCAChBC,aAAc,sEAGhB,OACE,cAAC,GAAD,CACEoL,KAAMA,EACNgG,MAAK,OAAE7T,QAAF,IAAEA,OAAF,EAAEA,EAAO6T,MACdC,aAAcpL,GAAkBa,MAChCnE,UAAU,qBAJZ,SAME,eAAC,GAAD,CAAc4Y,KAAMA,EAApB,UAEE,sBAAK5Y,UAAU,2BAAf,UACE,cAAC,GAAD,UACGpF,EAAMsqB,MACL,iCACE,cAAC,GAAD,CAAQrW,GAAIic,EAAQpZ,WADtB,IACoCoZ,EAAQnf,KAD5C,WAC0D/Q,EAAMsqB,MADhE,OAIA,oDACkB,cAAC,GAAD,CAAQrW,GAAIic,EAAQpZ,WADtC,IACoDoZ,EAAQnf,KAD5D,SAKJ,eAAC,GAAD,CAAa1E,WAAS,EAAtB,UACGskB,EAAgB,UAAST,EAAQnf,KADpC,8DAGA,cAAC,GAAD,CACEwf,KAAMI,EAAgB,cAACoC,GAAA,EAAD,IAA6B/yB,EAAMkxB,WAAWxU,KACpEd,OAAO,2BAGR5b,EAAMsqB,MACL,eAAC,GAAD,CAAaje,WAAS,EAAtB,UACGrM,EAAM6wB,YADT,iFACuF,uBADvF,wGAE2F,uBAF3F,sBAMA,cAAC,GAAD,CAAaxkB,WAAS,EAAtB,SACGskB,EACC,qEAEA,iCAAOT,EAAQnf,KAAf,4BAKN,cAAC,IAAD,CAAO3L,UAAU,kCAAjB,SACGpF,EAAM0yB,iBAAiB/rB,KAAI,SAAC0rB,EAAiBxrB,GAC5C,OACE,8BACE,cAAC,GAAD,CACE+qB,WAAYS,EAAgBT,WAC5BC,SAAS,EACT/a,SAAU7W,EAAQoyB,EAAgBtvB,YAAY+T,SAC9CjQ,MAAOA,KALX,UAAawrB,EAAgBT,WAA7B,YAA2C/qB,SAYhD8pB,IAAkB3wB,EAAMsqB,OAAS,cAAC,GAAD,CAAOuI,cAAeA,IAEvD7yB,EAAMsqB,QAAU6H,GAAqBhxB,IACpC,eAAC,IAAD,CAAOiE,UAAW0G,aAAK,mCAAoC3K,GAAW,mBAAtE,UACE,cAAC,KAAD,CACEsL,KAAM,cAACumB,GAAA,EAAD,IACN1lB,KAAK,UACL2B,MAAO,CAAEkY,gBAAiB,SAC1B5Z,QAAS,kBAAMslB,EAAc,CAAEvI,MAAO,aACtClS,SAAU5X,EALZ,qBASA,cAAC,KAAD,CACEiM,KAAM,cAACqlB,GAAA,EAAD,IACNxkB,KAAK,UACLmL,QAAM,EACNlL,QAAS,kBAAMslB,EAAc,CAAEvI,MAAO,WACtClS,SAAU5X,EALZ,yBAcN,cAAC,GAAD,CAAaP,QAASA,EAASuN,MAAM,+CAAsCoP,YAAY,qBCxDhFqW,IC1DAC,GAPD,CACZC,YACAC,kBACAC,kBACAC,SD+BF,YAAsC,IAAXxyB,EAAU,EAAVA,OACnBb,EAAUyD,EAAe5C,EAAQ2H,IACjCzI,EAAQkE,EAAapD,EAAQ2H,IAFA,EAGtBlH,EAAe,MAArBN,EAH4B,sBAIXd,mBAAS,IAJE,mBAI5B0N,EAJ4B,KAItBoa,EAJsB,KAgBnC,GATA3nB,qBAAU,WACR2nB,GAAc,OAANnnB,QAAM,IAANA,OAAA,EAAAA,EAAS,IAAKgO,EAAShO,EAAO,IAAM,MAC3C,CAACA,KAOCG,EACH,OAAO,cAAC,GAAD,CAAOhB,QAASA,EAASD,MAAOA,EAAO6N,KAAMA,IAGtD,IAAMqa,EAzCR,SAA4BrU,GAC1B,OAAQA,GACN,KAAKnL,GAAkBC,MACrB,OAAOuQ,GACT,KAAKxQ,GAAkB/C,MACrB,OAAO+T,GACT,KAAKhR,GAAkBgB,eACrB,OAAOgnB,GACT,KAAKhoB,GAAkBiB,QACrB,OAAO+nB,GACT,KAAKhpB,GAAkBkB,QACrB,OAAO+oB,GACT,KAAKjqB,GAAkBa,MACrB,OAAOslB,GACT,KAAKnmB,GAAkBK,UACrB,OAAO2c,GACT,QACE,OAAO/R,IAwBawU,CAAmBnoB,EAAM6T,OAEjD,OACE,eAAC,WAAD,WACE,cAAC,GAAD,CAAgB5T,QAASA,EAASD,MAAOA,EAAO6N,KAAMA,EAAM5M,GAAIA,IAChE,cAACinB,EAAD,CAAiBjoB,QAASA,EAASD,MAAOA,EAAO6N,KAAMA,SE+C9C0lB,OAhGf,WACE,IAAM1mB,EAAUC,cADF,EAEQpK,IAAbC,EAFK,sBAGcpB,EAAe,UAH7B,mBAGPT,EAHO,KAGCmM,EAHD,OAIkB1L,EAAe,YAJjC,mBAIPR,EAJO,KAIGyyB,EAJH,OAKkBjyB,EAAe,YALjC,mBAKPP,EALO,KAKGyyB,EALH,OAMIlyB,EAAe,MAAxBuU,EANK,sBAOUvU,EAAe,YAA9BwU,EAPK,sBAS0B5V,oBAAS,GATnC,mBASPuzB,EATO,KASQC,EATR,KAURC,ECxBD,SAAwBC,GAAgB,IAAD,EACR1zB,oBAAS,GADD,mBACrCyzB,EADqC,KACxBE,EADwB,KAO5C,OAJAxzB,qBAAU,WACRwzB,EAAalzB,KAAKC,MAAQ,MAAsBgzB,KAC/C,CAACA,EAAeC,IAEZF,EDiBaG,CAAc,OAAC/yB,QAAD,IAACA,OAAD,EAACA,EAAUgzB,WAyD7C,GAtDA1zB,qBAAU,WACR,IAAM2zB,ErFzBsB,SAACpnB,GAAa,IAAD,sBAChBA,QADgB,IAChBA,OADgB,EAChBA,EAASlN,gBADO,QACK,IAAxCu0B,SACR,YAF2C,MACxB,IADwB,GAE3BC,UAAU,GqFuBNC,CAAiBvnB,GAC/BuE,GAAc6iB,GAChBhnB,EAAUgnB,IAEVhxB,IAAQG,MAAM,4DACdyJ,EAAQe,KAAK,QAEd,CAACf,EAASI,EAAW6I,EAAOC,IAG/BzV,qBAAU,WACR,OAAOuM,EAAQwnB,QAAO,SAAC10B,GACrB,IAAMs0B,ErF3ByB,SAACt0B,GAAc,IAAD,UACtBA,QADsB,IACtBA,IAAY,IAA/Bu0B,SACR,YAFiD,MAC9B,IAD8B,GAEjCC,UAAU,GqFyBJG,CAAsB30B,GACpCyR,GAAc6iB,IAChBhnB,EAAUgnB,GACVne,EAAM,IACNC,EAAY,IACZ9S,IAAQ4K,KAAK,qCAEb5K,IAAQG,MAAM,4DACdyJ,EAAQe,KAAK,WAGhB,CAACf,EAASI,EAAW6I,EAAOC,IAG/BzV,qBAAU,WAAM,4CAEd,4BAAAwC,EAAA,sEAEIH,EAAU,QAAQ,GAFtB,SAGuBkH,GAASI,SAAS,CAAEnJ,WAH3C,OAGUyzB,EAHV,OAIIf,EAAYe,EAAKvxB,KAAKjC,UACtB0yB,EAAYc,EAAKvxB,MALrB,gDAOIS,QAAQL,MAAR,MACAD,IAAaC,MAAM,CACjBH,QAAS,0BACTI,YAAaC,KAAKC,UAAU,KAAEN,WAEhCQ,QAAQL,MAAR,MAZJ,yBAcIuwB,GAAe,GACfhxB,EAAU,QAAQ,GAftB,6EAFc,sBACdgxB,GAAe,GAoBX7yB,GArBU,mCAsBZ0zB,KAED,CAAC1zB,IAGA4yB,EACF,OAAO,cAAC,GAAD,IAGT,GAAIE,EACF,OACE,cAAC,GAAD,CAAW3wB,QAAQ,gBAAgBI,YAAY,6DAInD,GAAIvC,GAAUC,EACZ,OAAQA,GACN,KAAK0H,GACH,OAAO,cAAC,GAAa0qB,SAAd,CAAuBryB,OAAQA,IACxC,KAAK2H,GACH,OAAO,cAAC,GAAa2qB,eAAd,CAA6BtyB,OAAQA,IAC9C,KAAK2H,GACH,OAAO,cAAC,GAAa4qB,eAAd,CAA6BvyB,OAAQA,IAC9C,KAAK2H,GACH,OAAO,cAAC,GAAa6qB,SAAd,CAAuBxyB,OAAQA,IACxC,QACE2C,QAAQgxB,KAAK,+BAKnB,OAAO,cAAC,GAAD,KEhCMC,OA3Df,WACE,IAAM7mB,EAAOiB,EAAQ,EAEf7O,EAAU,CACd00B,SAAU,CACR7d,SAAU,GACV/F,KAAM,WACN/O,OAAO,EACPub,MAAO,EACPtb,UAAWrB,KAAKC,OAElB+zB,MAAO,CACL9d,SAAU,GACV/F,KAAM,QACN/O,OAAO,EACPub,MAAO,EACPtb,UAAWrB,KAAKC,OAElBg0B,UAAW,CACT/d,SAAU,GACV/F,KAAM,YACN/O,OAAO,EACPub,MAAO,EACPtb,UAAWrB,KAAKC,QAKdb,EAAQ,CACZ6T,MAAO,iBACPqc,QAAS,QACThE,YAAa,CAAC,WAAY,YAAa,QAAS,WAAY,YAAa,SACzEzO,MAAO,EACPuS,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,IAStBvsB,QAAQQ,IAAI,cACZR,QAAQQ,IAAI,CAAE4J,SACdpK,QAAQqxB,MAAM70B,GACdwD,QAAQQ,IAAI,CAAEjE,UACdyD,QAAQQ,IAAI,cAEZ,IAAMisB,EAAUjwB,EAAQD,EAAMkwB,SAI9B,OAHAzsB,QAAQQ,IAAIisB,GAIV,cAAC,GAAD,CAAgBriB,KAAMA,EAAMgG,MAAO7T,EAAM6T,MAAOC,aAAa,iBAAiB1O,UAAU,GAAG2O,YAAU,EAArG,SACE,qBAAK3O,UAAU,wBC9DN2vB,OANf,WAAuB,IAAD,EACAryB,IAEpB,OAHoB,oBAGD,qBAAK0C,UAAU,gBAAuB,8BCW3D,SAAS4vB,GAAT,GAAyE,IAAtCC,EAAqC,EAAhDC,UAAsBC,EAA0B,EAA1BA,cAAkBC,EAAQ,6CACtE,OACE,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAAClY,GAAD,OACY,IAAlBgY,EACE,cAACF,EAAD,eAAe9X,IAEf,cAAC,IAAD,CAAUmY,GAAI,CAAEpB,SAAU,SAAUl0B,MAAO,CAAEojB,KAAMjG,EAAMxd,iBAOnE,SAAS41B,GAAT,GAAwE,IAAD,QAArCN,EAAqC,EAAhDC,UAAsBC,EAA0B,EAA1BA,cAAkBC,EAAQ,6CAC/DI,EAAQ,iBAAGJ,QAAH,IAAGA,GAAH,UAAGA,EAAMz1B,gBAAT,iBAAG,EAAgBK,aAAnB,iBAAG,EAAuBojB,YAA1B,aAAG,EAA6B8Q,gBAAhC,QAA4C,IAC1D,OACE,cAAC,IAAD,2BACMkB,GADN,IAEEC,OAAQ,SAAClY,GAAD,OAA8B,IAAlBgY,EAA0B,cAACF,EAAD,eAAe9X,IAAY,cAAC,IAAD,CAAUmY,GAAIE,QA6C9EC,OAxCf,WAAgB,IAAD,EACqBt1B,oBAAS,GAD9B,mBACNK,EADM,KACKk1B,EADL,OAEiCn0B,EAAe,mBAFhD,mBAENb,EAFM,KAEW6P,EAFX,OAGUhP,EAAe,WAA7Bo0B,EAHI,oBAoBb,OAfAr1B,qBAAU,WACRf,EAAKq2B,oBAAmB,SAAChlB,GACnBA,GACF8kB,GAAa,GACbnlB,GAAmB,GACnBolB,GAAW,GACX1yB,IAAQ4K,KAAK,kDAEb6nB,GAAa,GACbnlB,GAAmB,GACnBolB,GAAW,SAGd,IAGD,eAAC,IAAD,CAAQvwB,UAAU,MAAlB,UACE,cAAC,GAAD,IACA,cAAC,IAAD,UACG5E,EACC,cAAC,GAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOq1B,OAAK,EAAC5W,KAAK,IAAIiW,UAAW/vB,IACjC,cAAC6vB,GAAD,CAAc/V,KAAK,SAASkW,cAAez0B,EAAiBw0B,UAAWzmB,KACvE,cAAC8mB,GAAD,CAAatW,KAAK,SAASkW,cAAez0B,EAAiBw0B,UAAW5kB,KACtE,cAAC0kB,GAAD,CAAc/V,KAAK,gBAAgBkW,cAAez0B,EAAiBw0B,UAAWR,KAC9E,cAAC,IAAD,CAAOzV,KAAK,IAAIiW,UAAW3B,cCnEvCuC,IAAST,OACP,cAAC,IAAMU,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1B73B,K","file":"static/js/main.90568626.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/functions';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_API_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n// firebase.analytics();\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const functions = firebase.functions();\n\nif (window.location.hostname.includes('localhost')) {\n  firestore.useEmulator('localhost', 8091);\n  functions.useEmulator('localhost', 5001);\n}\n\nexport default firebase;\n","import { useEffect, useState } from 'react';\n\nexport function useActivePlayer(state, players, propertyName = 'activePlayer') {\n  const [activePlayer, setActivePlayer] = useState({});\n\n  // Determine if user is active as the guesser, the clue giver, the psychic, the storyteller, etc\n  useEffect(() => {\n    const activePlayer = state?.[propertyName];\n    setActivePlayer(players?.[activePlayer]);\n  }, [players, propertyName, state]);\n\n  return activePlayer;\n}\n","import { createGlobalState } from 'react-hooks-global-state';\n\nconst initialState = {\n  isLoading: false,\n  loaders: false,\n  isAuthenticated: false,\n  appStartedAt: Date.now(),\n  // Meta\n  gameId: null,\n  gameName: null,\n  gameMeta: {},\n  me: '',\n  myAvatar: '',\n  isAdmin: false,\n  // Arte-Ruim\n  canvasSize: 250,\n  // Espiao-entre-nos\n  espiaoEntreNosCache: {},\n};\n\nconst { useGlobalState, setGlobalState, getGlobalState } = createGlobalState(initialState);\n\nexport { setGlobalState, getGlobalState, useGlobalState };\n\nexport default useGlobalState;\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\nexport function useAmIActive(state, propertyName = 'activePlayer') {\n  const [me] = useGlobalState('me');\n  const [amIActive, setAmIActive] = useState(false);\n\n  // Determine if user is active as the guesser, the clue giver, the psychic, the storyteller, etc\n  useEffect(() => {\n    setAmIActive(state?.[propertyName] === me);\n  }, [state, me, propertyName]);\n\n  return amIActive;\n}\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\nexport function useAmIReady(players, state = {}) {\n  const [me] = useGlobalState('me');\n  const [amIReady, setAmIReady] = useState(false);\n\n  useEffect(() => {\n    // Check if user is ready and check if user has been ready after the last state change\n    if (players[me].ready === false) {\n      setAmIReady(false);\n      return;\n    }\n\n    if (!state?.updatedAt) {\n      setAmIReady(true);\n      return;\n    }\n\n    // If state was updated after the player was updated, data might not be synced\n    if (players[me]?.updatedAt < state?.updatedAt) {\n      setAmIReady(false);\n      return;\n    }\n\n    setAmIReady(true);\n  }, [me, players, state?.updatedAt]);\n\n  return amIReady;\n}\n","import { useCallback } from 'react';\nimport { message, notification } from 'antd';\nimport { useGlobalState, useLoading } from './index';\n\n/**\n * Wrapper around common firebase http call\n * @param {object} data\n * @param {Function} data.apiFunction\n * @param {Function} [data.onBeforeCall]\n * @param {Function} [data.onAfterCall]\n * @param {Function} [data.onError]\n * @param {string} [data.actionName] the name used in the loader hook\n * @param {string} [data.successMessage]\n * @param {string} [data.errorMessage]\n * @returns\n */\nexport function useAPICall({\n  apiFunction,\n  actionName = 'api-action',\n  onBeforeCall = () => {},\n  onAfterCall = () => {},\n  onError = () => {},\n  successMessage = 'API call was successful',\n  errorMessage = 'API call has failed',\n}) {\n  const [, setLoader] = useLoading();\n  const [gameId] = useGlobalState('gameId');\n  const [gameName] = useGlobalState('gameName');\n  const [me] = useGlobalState('me');\n\n  const onAPICall = useCallback(\n    async (payload) => {\n      try {\n        setLoader(actionName, true);\n        await onBeforeCall();\n        const response = await apiFunction({\n          gameId,\n          gameName,\n          playerName: me,\n          ...payload,\n        });\n\n        if (response.data) {\n          message.success(successMessage);\n        }\n      } catch (e) {\n        notification.error({\n          message: errorMessage,\n          description: JSON.stringify(e.message),\n          placement: 'bottomLeft',\n        });\n        console.error(e);\n        onError();\n      } finally {\n        await onAfterCall();\n        setLoader(actionName, false);\n      }\n    },\n    [\n      actionName,\n      apiFunction,\n      errorMessage,\n      gameId,\n      gameName,\n      me,\n      setLoader,\n      successMessage,\n      onBeforeCall,\n      onAfterCall,\n      onError,\n    ]\n  );\n\n  return onAPICall;\n}\n","import { notification } from 'antd';\nimport { useDocument } from 'react-firebase-hooks/firestore';\n// Services\nimport { firestore } from '../services/firebase';\n\nexport function useGamePlayers(gameId, gameName) {\n  const [snapshot, loading, error] = useDocument(firestore.doc(`${gameName}/${gameId}/session/players`), {\n    snapshotListenOptions: { includeMetadataChanges: true },\n  });\n\n  if (error) {\n    notification.error({\n      message: 'Applicativo encontrou um erro ao tentar atualizar os jogadores',\n      description: JSON.stringify(error),\n      placement: 'bottomLeft',\n    });\n    console.error(error);\n  }\n\n  if (loading) {\n    console.log('%cRefreshing players...', 'color:orange');\n  }\n\n  return snapshot?.data() ?? {};\n}\n","import { notification } from 'antd';\nimport { useDocument } from 'react-firebase-hooks/firestore';\n// Services\nimport { firestore } from '../services/firebase';\n\nexport function useGameState(gameId, gameName) {\n  const [snapshot, loading, error] = useDocument(firestore.doc(`${gameName}/${gameId}/session/state`), {\n    snapshotListenOptions: { includeMetadataChanges: true },\n  });\n\n  if (error) {\n    notification.error({\n      message: 'Aplicativo encontrou um erro ao tentar atualizar o estado do jogo',\n      description: JSON.stringify(error),\n      placement: 'bottomLeft',\n    });\n    console.error(error);\n  }\n\n  if (loading) {\n    console.log('%cRefreshing state...', 'color:tomato');\n  }\n\n  return snapshot?.data() ?? {};\n}\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\nexport function useIsMyTeamActive(state, players) {\n  const [me] = useGlobalState('me');\n  const [isMyTeamActive, setIsMyTeamActive] = useState(false);\n\n  // Determine if user's team is active\n  useEffect(() => {\n    setIsMyTeamActive(state?.activeTeam === players?.[me]?.team);\n  }, [state, me, players]);\n\n  return isMyTeamActive;\n}\n","import { useEffect } from 'react';\n\nimport { useGlobalState } from './index';\n\n/**\n * Aggregate loading states into a single object, and single isLoading state\n * @returns [boolean, function, object]\n */\nexport function useLoading() {\n  const [isLoading, setLoading] = useGlobalState('isLoading');\n  const [loaders, setLoaders] = useGlobalState('loaders');\n\n  useEffect(() => {\n    setLoading(Object.values(loaders).some((v) => v));\n  }, [loaders, setLoading]);\n\n  const setLoader = (key, value) => {\n    setLoaders((values) => ({\n      ...values,\n      [key]: value,\n    }));\n  };\n\n  return [isLoading, setLoader, loaders];\n}\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\nexport function useMe(players) {\n  const [me] = useGlobalState('me');\n  const [completeMe, setCompleteMe] = useState({});\n\n  // Determine if user is active as the guesser, the clue giver, the psychic, the storyteller, etc\n  useEffect(() => {\n    setCompleteMe(players?.[me]);\n  }, [players, me]);\n\n  return completeMe;\n}\n","export default __webpack_public_path__ + \"static/media/tarde-divertida-logo.7e15410c.svg\";","import React from 'react';\nimport { Image, Layout } from 'antd';\n\nimport logo from '../images/tarde-divertida-logo.svg';\n\nfunction Home() {\n  return (\n    <Layout className=\"home\">\n      <div className=\"home__logo-container\">\n        <Image src={logo} className=\"home__logo\" preview={false} alt=\"Tarde Divertida logo\" />\n      </div>\n      <div className=\"home__background\">\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n      </div>\n    </Layout>\n  );\n}\n\nexport default Home;\n","/**\n * List of urls residing in the public folder\n */\nexport const PUBLIC_URL = {\n  BANNERS: `${process.env.PUBLIC_URL}/images/banners/`,\n  RULES: `${process.env.PUBLIC_URL}/images/rules/`,\n};\n\n/**\n * List of tags translation and color\n */\nexport const TAG_DICT = {\n  competitive: {\n    label: 'competitivo',\n    color: 'red',\n  },\n  cooperative: {\n    label: 'cooperativo',\n    color: 'green',\n  },\n  traitor: {\n    label: 'inimigo',\n    color: 'volcano',\n  },\n  'real-time': {\n    label: 'juntos',\n    color: 'volcano',\n  },\n  'turn-based': {\n    label: 'vez',\n    color: 'volcano',\n  },\n  timed: {\n    label: 'tempo',\n    color: 'orange',\n  },\n  drawing: {\n    label: 'desenho',\n    color: 'gold',\n  },\n  guessing: {\n    label: 'adivinhar',\n    color: 'cyan',\n  },\n  writing: {\n    label: 'escrever',\n    color: 'blue',\n  },\n  images: {\n    label: 'imagens',\n    color: 'purple',\n  },\n  discussion: {\n    label: 'discussão/fala',\n    color: 'geekblue',\n  },\n};\n\n/**\n * List of avatar ids\n */\nexport const AVATAR_IDS = new Array(25).fill(0).map((i, index) => i + index);\n\nexport const LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\nexport const AVATAR_DESCRIPTIONS_BR = {\n  0: 'o axolote',\n  1: 'a tartaruga',\n  2: 'a raposa',\n  3: 'o sapo',\n  4: 'a salamandra',\n  5: 'a toupeira',\n  6: 'o esquilo',\n  7: 'o corvo',\n  8: 'a lontra',\n  9: 'o camundongo',\n  10: 'o sabiá',\n  11: 'a cojura',\n  12: 'o porco-espinho',\n  13: 'o ornitorrinco',\n  14: 'o rato',\n  15: 'a rã',\n  16: 'o caramujo',\n  17: 'a abelha',\n  18: 'o morcego',\n  19: 'o gato',\n  20: 'o coelho',\n  21: 'a aranha',\n  22: 'a borboleta',\n  23: 'o arminho',\n  24: 'o porco',\n};\n\n/**\n * Enum of available games\n */\nexport const GAME_COLLECTION = {\n  ARTE_RUIM: 'arte-ruim',\n  ESPIAO_ENTRE_NOS: 'espiao-entre-nos',\n  ONDA_TELEPATICA: 'onda-telepatica',\n  UE_SO_ISSO: 'ue-so-isso',\n};\n\n/**\n * Enum of Game Phases\n */\nexport const PHASES = {\n  ARTE_RUIM: {\n    LOBBY: 'LOBBY',\n    RULES: 'RULES',\n    DRAW: 'DRAW',\n    EVALUATION: 'EVALUATION',\n    GALLERY: 'GALLERY',\n    GAME_OVER: 'GAME_OVER',\n  },\n  ESPIAO_ENTRE_NOS: {\n    LOBBY: 'LOBBY',\n    RULES: 'RULES',\n    ASSIGNMENT: 'ASSIGNMENT',\n    INVESTIGATION: 'INVESTIGATION',\n    ASSESSMENT: 'ASSESSMENT',\n    FINAL_ASSESSMENT: 'FINAL_ASSESSMENT',\n    RESOLUTION: 'RESOLUTION',\n    GAME_OVER: 'GAME_OVER',\n  },\n  ONDA_TELEPATICA: {\n    LOBBY: 'LOBBY',\n    RULES: 'RULES',\n    DIAL_SIDES: 'DIAL_SIDES',\n    DIAL_CLUE: 'DIAL_CLUE',\n    GUESS: 'GUESS',\n    RIVAL_GUESS: 'RIVAL_GUESS',\n    REVEAL: 'REVEAL',\n    GAME_OVER: 'GAME_OVER',\n  },\n  UE_SO_ISSO: {\n    LOBBY: 'LOBBY',\n    RULES: 'RULES',\n    WORD_SELECTION: 'WORD_SELECTION',\n    SUGGEST: 'SUGGEST',\n    COMPARE: 'COMPARE',\n    GUESS: 'GUESS',\n    GAME_OVER: 'GAME_OVER',\n  },\n};\n","import { functions } from '../services/firebase';\nimport { GAME_COLLECTION } from '../utils/constants';\n\nexport const GAME_API = {\n  helloWorld: functions.httpsCallable('helloWorld'),\n  initializeGame: functions.httpsCallable('initializeGame'),\n  loadGame: functions.httpsCallable('loadGame'),\n  addPlayer: functions.httpsCallable('addPlayer'),\n  lockGame: functions.httpsCallable('lockGame'),\n  playAgain: functions.httpsCallable('playAgain'),\n};\n\nexport const ARTE_RUIM_API = {\n  makeMeReady: functions.httpsCallable('arteRuimMakeMeReady'),\n  submitDrawing: functions.httpsCallable('arteRuimSubmitDrawing'),\n  submitVoting: functions.httpsCallable('arteRuimSubmitVoting'),\n  submitRating: functions.httpsCallable('arteRuimSubmitRating'),\n  goToNextPhase: functions.httpsCallable('arteRuimGoToNextPhase'),\n};\n\nexport const ESPIAO_ENTRE_NOS_API = {\n  makeMeReady: functions.httpsCallable('espiaoEntreNosMakeMeReady'),\n  handleAdminAction: functions.httpsCallable('espiaoEntreNosHandleAdminAction'),\n  makeAccusation: functions.httpsCallable('espiaoEntreNosMakeAccusation'),\n  guessLocation: functions.httpsCallable('espiaoEntreNosGuessLocation'),\n  submitVoting: functions.httpsCallable('espiaoEntreNosSubmitVoting'),\n};\n\nexport const ONDA_TELEPATICA = {\n  makeMeReady: functions.httpsCallable('ondaTelepaticaMakeMeReady'),\n  submitSides: functions.httpsCallable('ondaTelepaticaSubmitSides'),\n  submitClue: functions.httpsCallable('ondaTelepaticaSubmitClue'),\n  submitGuess: functions.httpsCallable('ondaTelepaticaSubmitGuess'),\n  submitRivalGuess: functions.httpsCallable('ondaTelepaticaSubmitRivalGuess'),\n  goToNextPhase: functions.httpsCallable('ondaTelepaticaGoToNextPhase'),\n};\n\nexport const UE_SO_ISSO_API = {\n  makeMeReady: functions.httpsCallable('ueSoIssoMakeMeReady'),\n  submitWordSelectionVotes: functions.httpsCallable('ueSoIssoSubmitWordSelectionVotes'),\n  submitSuggestions: functions.httpsCallable('ueSoIssoSubmitSuggestions'),\n  submitValidation: functions.httpsCallable('ueSoIssoSubmitValidation'),\n  confirmGuess: functions.httpsCallable('ueSoIssoConfirmGuess'),\n  sendGuess: functions.httpsCallable('ueSoIssoSendGuess'),\n};\n\n/**\n * Gets the game specific API http functions\n * @param {string} gameName\n * @returns\n */\nexport const getAPI = (gameName) => {\n  switch (gameName) {\n    case GAME_COLLECTION.ARTE_RUIM:\n      return ARTE_RUIM_API;\n    case GAME_COLLECTION.ESPIAO_ENTRE_NOS:\n      return ESPIAO_ENTRE_NOS_API;\n    case GAME_COLLECTION.ONDA_TELEPATICA:\n      return ONDA_TELEPATICA;\n    case GAME_COLLECTION.UE_SO_ISSO:\n      return UE_SO_ISSO_API;\n    default:\n      throw Error(`Adapter for ${gameName} does not exist`);\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Space, Spin, Typography } from 'antd';\n\nfunction Loading({ message, margin }) {\n  return (\n    <Space className={clsx('loading', margin && 'loading--margin')}>\n      <Spin />\n      {Boolean(message) && <Typography.Text>{message}</Typography.Text>}\n    </Space>\n  );\n}\n\nLoading.propTypes = {\n  message: PropTypes.string,\n  margin: PropTypes.bool,\n};\n\nLoading.defaultProps = {\n  margin: false,\n};\n\nexport default Loading;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Typography } from 'antd';\nimport clsx from 'clsx';\n\nfunction Instruction({ children, white, className, contained }) {\n  const baseClass = 'instruction';\n\n  return (\n    <Typography.Text\n      className={clsx(\n        baseClass,\n        contained && `${baseClass}--contained`,\n        white && `${baseClass}--white`,\n        className\n      )}\n    >\n      {children}\n    </Typography.Text>\n  );\n}\n\nInstruction.propTypes = {\n  children: PropTypes.any.isRequired,\n  white: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nexport default memo(Instruction);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Typography } from 'antd';\nimport clsx from 'clsx';\n\nfunction Title({ children, white, icon, className, level }) {\n  return (\n    <Typography.Title level={level} className={clsx('title', white && 'title--white', className)}>\n      {Boolean(icon) && icon}\n      {children}\n    </Typography.Title>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.any.isRequired,\n  white: PropTypes.bool,\n  icon: PropTypes.element,\n  className: PropTypes.string,\n  level: PropTypes.number,\n};\n\nTitle.defaultProps = {\n  className: '',\n  level: 1,\n};\n\nexport default memo(Title);\n","import React, { Fragment, useCallback, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Image, Modal, message, Button, notification } from 'antd';\n// Adapters\nimport { GAME_API } from '../../adapters';\n// Hooks\nimport { useLoading } from '../../hooks';\n// Constants\nimport { PUBLIC_URL } from '../../utils/constants';\n// Components\nimport Loading from '../loaders/Loading';\nimport Instruction from '../shared/Instruction';\nimport Title from '../shared/Title';\n\nfunction CreateGameModal({ gameInfo }) {\n  const history = useHistory();\n  const [, setLoader] = useLoading();\n  const [isVisible, setVisibility] = useState(false);\n  const [isLoading, setLoading] = useState(true);\n  const [gameId, setGameId] = useState(null);\n\n  const onCloseModal = useCallback(() => {\n    setVisibility(false);\n  }, []);\n\n  useEffect(() => {\n    async function createGame() {\n      try {\n        setLoader('create', true);\n        const response = await GAME_API.initializeGame({ gameCode: gameInfo.gameCode });\n        if (response.data.gameId) {\n          setGameId(response.data.gameId);\n        }\n      } catch (e) {\n        notification.error({\n          message: 'Applicativo encontrou um erro ao tentar criar o jogo',\n          description: JSON.stringify(e.message),\n          placement: 'bottomLeft',\n        });\n        console.error(e);\n        setVisibility(false);\n      } finally {\n        setLoading(false);\n        setLoader('create', false);\n      }\n    }\n\n    if (isVisible) {\n      createGame();\n    }\n  }, [isVisible]); // eslint-disable-line\n\n  const onConfirmGame = () => {\n    if (gameId) {\n      history.push(`/${gameId}`);\n    } else {\n      message.info('Péra! O jogo ainda não foi inicializado.');\n    }\n  };\n\n  return (\n    <Fragment>\n      <Button type=\"primary\" onClick={() => setVisibility(true)}>\n        Criar Jogo\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`Criando jogo: ${gameInfo.title}`}\n          visible={isVisible}\n          onCancel={onCloseModal}\n          onOk={onConfirmGame}\n        >\n          <Fragment>\n            <Image\n              alt={gameInfo.title}\n              src={`${PUBLIC_URL.BANNERS}game-image-${gameInfo.gameName}.jpg`}\n              fallback={`${PUBLIC_URL.BANNERS}/game-image-em-breve.jpg`}\n            />\n\n            {isLoading ? (\n              <Fragment>\n                <Instruction>O jogo está sendo criado...</Instruction>\n                <Loading message=\"Gerando...\" margin />\n              </Fragment>\n            ) : (\n              <div>\n                <Title className=\"center\">Jogo inicializado: {gameId}</Title>\n                <Instruction>Pressione OK para ser redirecionadx à página do jogo.</Instruction>\n              </div>\n            )}\n          </Fragment>\n        </Modal>\n      )}\n    </Fragment>\n  );\n}\n\nCreateGameModal.propTypes = {\n  gameInfo: PropTypes.shape({\n    gameCode: PropTypes.string.isRequired,\n    gameName: PropTypes.string,\n    title: PropTypes.string,\n  }),\n};\n\nexport default CreateGameModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Typography, Image, Carousel } from 'antd';\n// Constants\nimport { PUBLIC_URL } from '../../utils/constants';\n\nfunction RulesCarousel({ info, className, ruleClass }) {\n  return (\n    <Carousel className={clsx('rules-carousel', className)} autoplay autoplaySpeed={15000}>\n      {info.rules.map((rule, index) => (\n        <div className={clsx('rules-carousel__rule', ruleClass)} key={rule}>\n          <Image\n            className=\"rules-carousel__image\"\n            src={\n              index === 0\n                ? `${PUBLIC_URL.BANNERS}game-image-${info.gameName}.jpg`\n                : `${PUBLIC_URL.RULES}game-rule-${info.gameName}-${index}.jpg`\n            }\n            fallback={`${PUBLIC_URL.RULES}game-rule-not-found.jpg`}\n            alt={rule}\n          />\n          <Typography.Paragraph className=\"rules-carousel__rule-text\">{rule}</Typography.Paragraph>\n        </div>\n      ))}\n    </Carousel>\n  );\n}\n\nRulesCarousel.propTypes = {\n  info: PropTypes.shape({\n    gameName: PropTypes.string,\n    rules: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string,\n  }),\n  className: PropTypes.string,\n  ruleClass: PropTypes.string,\n};\n\nRulesCarousel.defaultProps = {\n  className: '',\n  ruleClass: '',\n};\n\nexport default RulesCarousel;\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\n\n// Design Resources\nimport { Button, Modal } from 'antd';\nimport { ReadOutlined } from '@ant-design/icons';\n// Components\nimport RulesCarousel from '../rules/RulesCarousel';\n\nfunction RulesModal({ gameInfo }) {\n  const [isVisible, setVisibility] = useState(false);\n\n  const onCloseModal = () => {\n    setVisibility(false);\n  };\n\n  return (\n    <Fragment>\n      <Button type=\"default\" onClick={() => setVisibility(true)} icon={<ReadOutlined />}>\n        Regras\n      </Button>\n      {isVisible && (\n        <Modal\n          title={`Rules: ${gameInfo.title}`}\n          visible={isVisible}\n          onCancel={onCloseModal}\n          className=\"rules-modal\"\n          footer={[\n            <Button key=\"close\" onClick={onCloseModal}>\n              Fechar\n            </Button>,\n          ]}\n        >\n          <RulesCarousel info={gameInfo} />\n        </Modal>\n      )}\n    </Fragment>\n  );\n}\n\nRulesModal.propTypes = {\n  gameInfo: PropTypes.shape({\n    gameName: PropTypes.string,\n    rules: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string,\n  }),\n};\n\nexport default RulesModal;\n","import React from 'react';\n\n// Design Resources\nimport { Typography, Layout, Space, Card, Image, Divider, Tag } from 'antd';\n// Utils\nimport gameList from '../resources/games.json';\nimport { PUBLIC_URL, TAG_DICT } from '../utils/constants';\n// Components\nimport CreateGameModal from './modals/CreateGameModal';\nimport RulesModal from './modals/RulesModal';\n\nfunction Admin() {\n  return (\n    <Layout.Content className=\"container\">\n      <Typography.Title>Admin Hub</Typography.Title>\n      <Typography.Paragraph>Select the game you want to start</Typography.Paragraph>\n\n      <Space size={[8, 16]} wrap align=\"start\">\n        {Object.values(gameList).map((game) => (\n          <Card\n            key={game.gameName}\n            hoverable\n            style={{ width: 240 }}\n            cover={\n              <Image\n                alt={game.title}\n                src={`${PUBLIC_URL.BANNERS}game-image-${game.gameName}.jpg`}\n                fallback={`${PUBLIC_URL.BANNERS}/game-image-em-breve.jpg`}\n              />\n            }\n          >\n            <Card.Meta title={game.title} description={game.summary} />\n            <Divider />\n            <Card.Meta description={`Para ${game.min}-${game.max} jogadores`} />\n            <Card.Meta description={`Recomendado jogar com ${game.recommended}`} />\n            <Divider />\n            <Space wrap size={[1, 6]}>\n              {game.tags.map((tag) => (\n                <Tag key={`${game.gameCode}-${tag}`} color={TAG_DICT[tag]?.color}>\n                  {TAG_DICT[tag]?.label}\n                </Tag>\n              ))}\n            </Space>\n            <Divider />\n            <Space>\n              <RulesModal gameInfo={game} />\n              {Boolean(game.available) && <CreateGameModal gameInfo={game} />}\n            </Space>\n          </Card>\n        ))}\n      </Space>\n    </Layout.Content>\n  );\n}\n\nexport default Admin;\n","import { auth } from '../services/firebase';\n\n/**\n * Sign up user via email through firebase auth\n * @param {string} email\n * @param {string} password\n * @returns {Promise}\n */\nexport function signUp(email, password) {\n  return auth.createUserWithEmailAndPassword(email, password);\n}\n\n/**\n * Sign in user via email through firebase auth\n * @param {string} email\n * @param {string} password\n * @returns {Promise}\n */\nexport function signIn(email, password) {\n  return auth.signInWithEmailAndPassword(email, password);\n}\n\n/**\n * Sign out current user\n * @returns {Promise}\n */\nexport async function signOut() {\n  return auth.signOut().then(() => {\n    alert(`You've been signed out`);\n  });\n}\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\n// Design Resources\nimport { Layout, Button, Form, Input, Alert, Image } from 'antd';\n// API\nimport { signIn } from '../adapters/auth';\n// State\nimport { useGlobalState } from '../hooks';\n// Image\nimport logo from '../images/tarde-divertida-logo.svg';\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 0, span: 8 },\n};\n\nfunction Login() {\n  const history = useHistory();\n  const [, setIsAuthenticated] = useGlobalState('isAuthenticated');\n\n  const [error, setError] = useState(null);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const onValuesChange = (data) => {\n    if (data.email) {\n      setEmail(data.email.trim());\n    }\n    if (data.password) {\n      setPassword(data.password.trim());\n    }\n  };\n\n  const onHandleSubmit = async () => {\n    setError('');\n    try {\n      const response = await signIn(email, password);\n      if (response?.user?.uid) {\n        setIsAuthenticated(true);\n        history.push('/admin');\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <Layout.Content className=\"login\">\n      <div className=\"login__content\">\n        <div className=\"login__logo\">\n          <Image src={logo} preview={false} />\n        </div>\n\n        {Boolean(error) && (\n          <Alert message=\"Error\" description={error} type=\"error\" showIcon className=\"login__error-alert\" />\n        )}\n        <Form\n          {...layout}\n          layout=\"horizontal\"\n          name=\"sign-in\"\n          onValuesChange={onValuesChange}\n          className=\"login__form\"\n          autoComplete=\"off\"\n        >\n          <Form.Item {...tailLayout} label=\"E-mail\" name=\"email\" className=\"login__form-item\">\n            <Input type=\"email\" />\n          </Form.Item>\n          <Form.Item {...tailLayout} label=\"Password\" name=\"password\" className=\"login__form-item\">\n            <Input type=\"password\" />\n          </Form.Item>\n          <div className=\"login__form-action\">\n            <Button type=\"primary\" onClick={onHandleSubmit}>\n              Login\n            </Button>\n          </div>\n        </Form>\n      </div>\n    </Layout.Content>\n  );\n}\n\nexport default Login;\n","/**\n * Extract the gameId from react history\n * @param {object} history\n * @returns {string}\n */\nexport const getGameIdFromURL = (history) => {\n  const { pathname = '/' } = history?.location ?? {};\n  return pathname.substring(1);\n};\n\n/**\n * Extract the gameId from react history.location\n * @param {object} history\n * @returns {string}\n */\nexport const getGameIdFromLocation = (location) => {\n  const { pathname = '/' } = location ?? {};\n  return pathname.substring(1);\n};\n\n/**\n * Verify if the game id exists and has the correct length\n * @param {string} gameId\n * @returns\n */\nexport const isValidGameId = (gameId) => {\n  return gameId && gameId.length === 4;\n};\n\n/**\n * Get random element/item from a list\n * @param {array} list\n * @returns one random item\n */\nexport const getRandomItem = (list) => {\n  return list[Math.floor(Math.random() * list.length)];\n};\n\n/**\n * Get date from now within the given seconds\n * @param {number} seconds\n * @returns\n */\nexport const inNSeconds = (seconds) => {\n  return Date.now() + seconds * 1000;\n};\n\n/**\n * Get color name from letter\n * @param {string} letter\n * @returns\n */\nexport const getColorFromLetter = (letter) => {\n  return (\n    {\n      A: 'red',\n      B: 'blue',\n      C: 'green',\n      D: 'yellow',\n      E: 'pink',\n      F: 'purple',\n      G: 'teal',\n      H: 'orange',\n      I: 'coffee',\n      J: 'navy',\n      K: 'light-green',\n      L: 'brown',\n      M: 'hot-pink',\n      N: 'violet',\n      O: 'forest',\n      P: 'cream',\n\n      // repeats\n      Q: 'red',\n      R: 'blue',\n      S: 'green',\n      T: 'yellow',\n      U: 'pink',\n      V: 'purple',\n      W: 'teal',\n      X: 'none',\n      Y: 'orange',\n      Z: 'coffee',\n    }[letter] ?? 'none'\n  );\n};\n\n/**\n * Gets color name from index\n * @param {number} letter\n * @returns\n */\nexport const getColorFromIndex = (letter) => {\n  return (\n    [\n      'red',\n      'blue',\n      'green',\n      'yellow',\n      'pink',\n      'purple',\n      'teal',\n      'orange',\n      'coffee',\n      'navy',\n      'light-green',\n      'brown',\n      'hot-pink',\n      'violet',\n      'forest',\n      'cream',\n    ][letter] ?? 'none'\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Layout, Spin, Typography } from 'antd';\n\nfunction LoadingPage({ message }) {\n  return (\n    <Layout.Content className=\"loading-page\">\n      <Spin size=\"large\" />\n      <Typography.Text>{message}</Typography.Text>\n    </Layout.Content>\n  );\n}\n\nLoadingPage.propTypes = {\n  message: PropTypes.string,\n};\n\nLoadingPage.defaultProps = {\n  message: 'Carregando...',\n};\n\nexport default LoadingPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Alert } from 'antd';\n\nfunction PageError({ message, description }) {\n  return (\n    <div className=\"container container--center\">\n      <Alert message={message} description={description} type=\"error\" showIcon />\n    </div>\n  );\n}\n\nPageError.propTypes = {\n  message: PropTypes.string,\n  description: PropTypes.string,\n};\n\nPageError.defaultProps = {\n  message: 'Algo errado não está certo',\n  description: 'Não era pra você estar vendo esta mensagem.',\n};\n\nexport default PageError;\n","import React, { memo } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Layout } from 'antd';\n// Components\nimport LoadingPage from '../loaders/LoadingPage';\nimport PageError from '../errors/PageError';\n\n/**\n * Wrapping container around a game screen\n * @param {*} props\n * @returns\n */\nfunction PhaseContainer({ info, phase, allowedPhase, children, className, fullScreen, white }) {\n  if (!info?.gameName || allowedPhase !== phase) {\n    return <LoadingPage />;\n  }\n\n  if (!phase) {\n    return <PageError message=\"Algo errado não está certo\" description=\"Estado do jogo não está correto\" />;\n  }\n\n  const baseClass = 'phase-container';\n\n  return (\n    <Layout.Content\n      className={clsx(\n        baseClass,\n        fullScreen && `${baseClass}--full-screen`,\n        white && `${baseClass}--white`,\n        className\n      )}\n    >\n      <span className={`${baseClass}__title`}>{info.title}</span>\n      {children}\n    </Layout.Content>\n  );\n}\n\nPhaseContainer.propTypes = {\n  children: PropTypes.any.isRequired,\n  allowedPhase: PropTypes.string,\n  className: PropTypes.string,\n  fullScreen: PropTypes.bool,\n  info: PropTypes.object,\n  phase: PropTypes.string,\n  white: PropTypes.bool,\n};\n\nPhaseContainer.defaultProps = {\n  allowedPhase: '',\n  className: '',\n  fullScreen: false,\n  phase: '',\n  white: false,\n};\n\nexport default memo(PhaseContainer);\n","export default __webpack_public_path__ + \"static/media/avatars.a2364409.svg\";","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Avatar as AntAvatar } from 'antd';\n// Images\nimport avatars from '../../images/avatars.svg';\n\nfunction Avatar({ id = 25, size = 'large', shape = 'circle', alt = 'Fulano', className = '' }) {\n  return (\n    <AntAvatar\n      className={clsx('avatar', className)}\n      size={size}\n      shape={shape}\n      alt={alt}\n      src={\n        <svg viewBox=\"0 0 100 100\">\n          <use href={avatars + `#avatar-${id}`}></use>\n        </svg>\n      }\n    />\n  );\n}\n\nAvatar.propTypes = {\n  id: PropTypes.number,\n  className: PropTypes.string,\n  size: PropTypes.string,\n  shape: PropTypes.string,\n  alt: PropTypes.string,\n};\n\nexport default memo(Avatar);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Components\nimport Avatar from './Avatar';\n\nfunction AvatarEntry({ id = 25, name = 'Fulano', animate = false, className = '' }) {\n  return (\n    <div className={clsx('avatar-entry', animate && 'avatar-entry--floating', className)}>\n      <Avatar id={id} className=\"avatar-entry__avatar\" />\n      <div className=\"avatar-entry__name\">{name}</div>\n    </div>\n  );\n}\n\nAvatar.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  animate: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nexport default memo(AvatarEntry);\n","class LocalStorage {\n  constructor() {\n    this.store = {};\n    this.notLoaded = true;\n    this.appName = 'tarde-divertida';\n\n    this.init();\n  }\n\n  init() {\n    this.load();\n    return this.get();\n  }\n\n  get(key) {\n    if (this.notLoaded) {\n      this.load();\n    }\n\n    if (key) {\n      return this.store[key] || null;\n    }\n    return this.store;\n  }\n\n  load() {\n    const localStorage = JSON.parse(window.localStorage.getItem(this.appName));\n    if (localStorage) {\n      this.store = localStorage;\n      this.notLoaded = false;\n    }\n  }\n\n  // To Remove a property, you can use the set method, but passing an object with the key and value\n  // null, the property will be removed from local storage\n  set(value) {\n    if (this.notLoaded) {\n      this.load();\n    }\n\n    const type = typeof value;\n    if (type !== 'string' && type !== 'object') {\n      console.error('localStorage set value must be a string or a key-value object');\n      return;\n    }\n\n    // When value is a string, use as a property toggle\n    if (typeof value === 'string') {\n      this.store[value] = !this.store[value];\n    } else {\n      // Remove any null or undefined property\n      Object.entries(value).forEach(([key, item]) => {\n        if (item === null || item === undefined) {\n          delete value[key];\n        }\n      });\n\n      this.store = {\n        ...this.store,\n        ...value,\n      };\n    }\n\n    this.save();\n  }\n\n  save() {\n    if (this.notLoaded) {\n      this.load();\n    }\n\n    window.localStorage.setItem(this.appName, JSON.stringify(this.store));\n    this.load();\n  }\n}\n\nexport default new LocalStorage();\n","import React, { useCallback, useEffect, useState } from 'react';\n// Design Resources\nimport { Alert, Button, Image, Input, notification, Spin, Tooltip } from 'antd';\nimport { CaretLeftOutlined, CaretRightOutlined, InfoCircleOutlined } from '@ant-design/icons';\n// API & Hooks\nimport { GAME_API } from '../../adapters';\nimport { useLoading } from '../../hooks';\nimport useGlobalState from '../../hooks/useGlobalState';\n// Images\nimport avatars from '../../images/avatars.svg';\n// Services\nimport localStorage from '../../services/localStorage';\n// Utils\nimport { AVATAR_IDS, PUBLIC_URL } from '../../utils/constants';\nimport { getRandomItem } from '../../utils/index';\n\nfunction Join({ players, info }) {\n  const [isLoading, setLoader] = useLoading();\n  const [gameId] = useGlobalState('gameId');\n  const [gameName] = useGlobalState('gameName');\n  const [, setMe] = useGlobalState('me');\n  const [, setMyAvatar] = useGlobalState('myAvatar');\n\n  const [availableAvatars, setAvailableAvatars] = useState(AVATAR_IDS);\n  const [tempAvatar, setTempAvatar] = useState(getRandomItem(AVATAR_IDS));\n  const [tempMe, setTempMe] = useState('');\n  const [sameGameId, setSameGameId] = useState(false);\n\n  const [localStorageAvatar, setLocalStorageAvatar] = useState(null);\n\n  // Calculate available avatars and monitor if user chose a non-available one\n  useEffect(() => {\n    const usedAvatars = Object.values(players).reduce((acc, p) => {\n      acc[p.avatarId] = true;\n      return acc;\n    }, {});\n\n    const newAvailableAvatars = AVATAR_IDS.filter((avatarId) => usedAvatars[avatarId] === undefined);\n\n    if (newAvailableAvatars.includes(tempAvatar) && !localStorageAvatar) {\n      setTempAvatar(getRandomItem(newAvailableAvatars));\n    }\n\n    setAvailableAvatars(newAvailableAvatars);\n  }, [players]); // eslint-disable-line\n\n  // Load name and avatarId from localStorage\n  useEffect(() => {\n    const lsAvatarId = localStorage.get('avatarId');\n    const lsMe = localStorage.get('me');\n    const lsGameId = localStorage.get('gameId');\n\n    if (lsAvatarId && lsMe) {\n      setTempAvatar(localStorage.get('avatarId'));\n      setTempMe(localStorage.get('me') ?? '');\n      setLocalStorageAvatar(lsAvatarId);\n\n      if (lsGameId === gameId) {\n        setSameGameId(true);\n      }\n    }\n  }, []); // eslint-disable-line\n\n  const onPreviousAvatar = useCallback(() => {\n    const index = availableAvatars.indexOf(tempAvatar);\n    const newIndex = index === 0 ? availableAvatars.length - 1 : index - 1;\n    setTempAvatar(availableAvatars[newIndex]);\n  }, [availableAvatars, tempAvatar]);\n\n  const onNextAvatar = useCallback(() => {\n    const index = availableAvatars.indexOf(tempAvatar);\n    const newIndex = index === availableAvatars.length - 1 ? 0 : index + 1;\n    setTempAvatar(availableAvatars[newIndex]);\n  }, [availableAvatars, tempAvatar]);\n\n  const onAddPlayer = useCallback(async () => {\n    try {\n      setLoader('add-player', true);\n      const response = await GAME_API.addPlayer({\n        gameId,\n        gameName,\n        playerName: tempMe,\n        playerAvatarId: tempAvatar,\n      });\n\n      setMe(response.data.name);\n      setMyAvatar(response.data.avatarId);\n      localStorage.set({\n        me: response.data.name,\n        avatarId: response.data.avatarId,\n        gameId,\n      });\n    } catch (e) {\n      notification.error({\n        message: 'Vixi, o aplicativo encontrou um erro ao tentar te adicionar como jogador',\n        description: JSON.stringify(e.message),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n    } finally {\n      setLoader('add-player', false);\n    }\n  }, [gameId, gameName, tempMe, tempAvatar]); // eslint-disable-line\n\n  return (\n    <div className=\"lobby-join\">\n      <Image\n        alt={info?.title}\n        src={`${PUBLIC_URL.BANNERS}game-image-${info?.gameName}.jpg`}\n        fallback={`${PUBLIC_URL.BANNERS}/game-image-em-breve.jpg`}\n        className=\"lobby-join__game-image\"\n      />\n      <h1 className=\"lobby-join__title\">\n        {Boolean(localStorageAvatar) ? 'Bem-vindo de volta!' : 'Selecione seu avatar'}\n      </h1>\n      <div className=\"lobby-join__avatar-selection\">\n        <Button type=\"dashed\" onClick={onPreviousAvatar} className=\"lobby-join__avatar-nav-button\">\n          <CaretLeftOutlined />\n        </Button>\n        <svg viewBox=\"0 0 100 100\" className=\"lobby-join__avatar-selection-image\">\n          <use href={avatars + `#avatar-${tempAvatar}`}></use>\n        </svg>\n        <Button type=\"dashed\" onClick={onNextAvatar} className=\"lobby-join__avatar-nav-button\">\n          <CaretRightOutlined />\n        </Button>\n      </div>\n\n      {Boolean(localStorageAvatar) ? (\n        <Alert\n          className=\"lobby-join__avatar-alert\"\n          type=\"success\"\n          message=\"Você está de volta! Lembramos seu nome e avatar!\"\n        />\n      ) : (\n        <Alert\n          className=\"lobby-join__avatar-alert\"\n          type=\"warning\"\n          message=\"Se alguém selecionar um mesmo avatar, um avatar aleatório será atribuido à você.\"\n        />\n      )}\n\n      {Boolean(sameGameId) && (\n        <Alert\n          className=\"lobby-join__avatar-alert\"\n          type=\"error\"\n          message=\"Se você está retornando a um jogo, NÃO mude seu apelido! Se o apelido for modificado, você será adicionado como um novo jogador e tudo pode bugar.\"\n        />\n      )}\n\n      <Input\n        className=\"lobby-join__name-input\"\n        onChange={(e) => setTempMe(e.target.value)}\n        placeholder=\"Insira seu nome\"\n        value={tempMe}\n        maxLength={10}\n        suffix={\n          <Tooltip title=\"Máximo de 10 characteres\">\n            <InfoCircleOutlined />\n          </Tooltip>\n        }\n      />\n      <Button\n        className=\"lobby-join__join-button\"\n        type=\"primary\"\n        disabled={!Boolean(tempMe) || isLoading}\n        onClick={onAddPlayer}\n      >\n        {isLoading ? <Spin size=\"small\" /> : 'Entrar no jogo'}\n      </Button>\n    </div>\n  );\n}\n\nexport default Join;\n","import React, { memo } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Space } from 'antd';\nimport { RocketFilled } from '@ant-design/icons';\n// State\nimport { useLoading, useGlobalState } from '../../hooks';\n\nfunction AdminOnly({ children, className = '' }) {\n  const [isAdmin] = useGlobalState('isAdmin');\n\n  if (!isAdmin) return <span></span>;\n\n  return <Space className={clsx('admin-only-container', className)}>{children}</Space>;\n}\n\nAdminOnly.propTypes = {\n  children: PropTypes.element.isRequired,\n  className: PropTypes.string,\n};\n\nexport default memo(AdminOnly);\n\nexport function AdminButton({ action, label }) {\n  const [isLoading] = useLoading();\n  return (\n    <Button icon={<RocketFilled />} danger type=\"primary\" onClick={action} disabled={isLoading}>\n      {label}\n    </Button>\n  );\n}\n\nexport function AdminOnlyButton({ action, label }) {\n  return (\n    <AdminOnly>\n      <AdminButton action={action} label={label} />\n    </AdminOnly>\n  );\n}\n","import React, { useCallback } from 'react';\n// Design Resources\nimport { Button, Image, message, notification, Typography } from 'antd';\n// API & Hooks\nimport { GAME_API } from '../../adapters';\nimport useGlobalState from '../../hooks/useGlobalState';\nimport { useLoading } from '../../hooks';\n// Images\nimport avatars from '../../images/avatars.svg';\n// Utils and Resources\nimport { PUBLIC_URL } from '../../utils/constants';\n// Components\nimport AdminOnly from '../shared/AdminOnly';\n\nfunction Waiting({ info, players }) {\n  const [isLoading, setLoader] = useLoading();\n  const [gameId] = useGlobalState('gameId');\n  const [gameName] = useGlobalState('gameName');\n  const [gameMeta] = useGlobalState('gameMeta');\n\n  const [me] = useGlobalState('me');\n  const [myAvatar] = useGlobalState('myAvatar');\n\n  const onLockGameAndStart = useCallback(async () => {\n    try {\n      setLoader('lock-game', true);\n      const response = await GAME_API.lockGame({\n        gameId,\n        gameName,\n      });\n      if (response.data.isLocked) {\n        message.success('Jogo trancado e iniciado com sucesso!');\n      }\n    } catch (e) {\n      notification.error({\n        message: 'Vixi, o aplicativo encontrou um erro ao tentar trancar e iniciar o jogo',\n        description: JSON.stringify(e.message),\n        placement: 'bottomLeft',\n      });\n      console.error(e);\n    } finally {\n      setLoader('lock-game', false);\n    }\n  }, [gameId, gameName, setLoader]);\n\n  const numPlayers = Object.keys(players).length;\n\n  return (\n    <div className=\"lobby-waiting\">\n      <Image\n        alt={info?.title}\n        src={`${PUBLIC_URL.BANNERS}game-image-${info?.gameName}.jpg`}\n        fallback={`${PUBLIC_URL.BANNERS}/game-image-em-breve.jpg`}\n      />\n\n      <h1 className=\"center\">{me || 'Fulano'},</h1>\n      <svg viewBox=\"0 0 100 100\" className=\"lobby-waiting__avatar\">\n        <use href={avatars + `#avatar-${myAvatar}`}></use>\n      </svg>\n      <h3 className=\"center\">Aguarde os outros jogadores entrarem.</h3>\n      <AdminOnly className=\"lobby-waiting__lock-button\">\n        <Typography.Text className=\"center padding\">\n          Jogadores necessários: {numPlayers}/{gameMeta.min}\n        </Typography.Text>\n        <Button\n          type=\"primary\"\n          danger\n          onClick={onLockGameAndStart}\n          disabled={isLoading || numPlayers < gameMeta.min}\n        >\n          Trancar e Iniciar Jogo\n        </Button>\n      </AdminOnly>\n    </div>\n  );\n}\n\nexport default Waiting;\n","import React from 'react';\n\nfunction CloudBackground() {\n  return (\n    <div class=\"cloud-background\">\n      <div class=\"cloud-background__animation-1\">\n        <div class=\"cloud-background__cloud\"></div>\n      </div>\n\n      <div class=\"cloud-background__animation-2\">\n        <div class=\"cloud-background__cloud\"></div>\n      </div>\n\n      <div class=\"cloud-background__animation-3\">\n        <div class=\"cloud-background__cloud\"></div>\n      </div>\n\n      <div class=\"cloud-background__animation-4\">\n        <div class=\"cloud-background__cloud\"></div>\n      </div>\n\n      <div class=\"cloud-background__animation-5\">\n        <div class=\"cloud-background__cloud\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default CloudBackground;\n","import React from 'react';\n// Hooks\nimport useGlobalState from '../../hooks/useGlobalState';\n// Components\nimport PhaseContainer from '../shared/PhaseContainer';\nimport AvatarEntry from '../avatars/AvatarEntry';\nimport Join from './Join';\nimport Waiting from './Waiting';\nimport CloudBackground from './CloudBackground';\n\nfunction Lobby({ players, info }) {\n  const [me] = useGlobalState('me');\n  const [myAvatar] = useGlobalState('myAvatar');\n\n  return (\n    <PhaseContainer phase=\"LOBBY\" allowedPhase=\"LOBBY\" info={info}>\n      <div className=\"lobby__room\">\n        {Object.values(players).map((player, index) => (\n          <AvatarEntry\n            key={player.name}\n            id={player.avatarId}\n            name={player.name}\n            className={`lobby__seat lobby__seat--${index}`}\n            animate\n          />\n        ))}\n\n        {me && myAvatar ? <Waiting players={players} info={info} /> : <Join players={players} info={info} />}\n      </div>\n\n      <CloudBackground />\n    </PhaseContainer>\n  );\n}\n\nexport default Lobby;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Avatar as AntAvatar, Typography } from 'antd';\nimport { LikeFilled } from '@ant-design/icons';\n// Components\nimport Avatar from '../avatars/Avatar';\n\nfunction ReadyPlayersBar({ players, readyLabel = 'Estou pronto!', readyLabelPlural = 'Estamos prontos!' }) {\n  const readyPlayers = Object.values(players).filter((player) => player.ready);\n\n  if (readyPlayers.length === 0) {\n    return <span></span>;\n  }\n\n  return (\n    <div className=\"ready-player-bar\">\n      <AntAvatar.Group size=\"small\">\n        {readyPlayers.map((player) => (\n          <Avatar key={player.name} id={player.avatarId} />\n        ))}\n      </AntAvatar.Group>\n      <span className=\"ready-player-bar__speech-bubble\">\n        <Typography.Text>{readyPlayers.length > 1 ? readyLabelPlural : readyLabel}</Typography.Text>\n        <LikeFilled className=\"ready-player-bar__speech-bubble-icon\" />\n      </span>\n    </div>\n  );\n}\n\nReadyPlayersBar.propTypes = {\n  players: PropTypes.object.isRequired,\n  readyLabel: PropTypes.string,\n  readyLabelPlural: PropTypes.string,\n};\n\nReadyPlayersBar.defaultProps = {\n  readyLabel: 'Estou pronto!',\n  readyLabelPlural: 'Estamos prontos!',\n};\n\nexport default ReadyPlayersBar;\n","import React from 'react';\n// Design Resources\nimport { Button, Layout, Space, Typography } from 'antd';\n// State\nimport { useGlobalState, useAmIReady, useAPICall } from '../../hooks';\n// Components\nimport RulesCarousel from './RulesCarousel';\nimport LoadingPage from '../loaders/LoadingPage';\nimport { CheckCircleFilled, MehFilled, RobotFilled, SmileFilled } from '@ant-design/icons';\nimport { useLoading } from '../../hooks';\nimport { getAPI } from '../../adapters';\nimport ReadyPlayersBar from '../shared/ReadyPlayersBar';\n\nfunction Rules({ players, info }) {\n  const [isLoading] = useLoading();\n  const [gameName] = useGlobalState('gameName');\n  const amIReady = useAmIReady(players);\n\n  const onBeReady = useAPICall({\n    apiFunction: getAPI(gameName).makeMeReady,\n    actionName: 'be-ready',\n    successMessage: 'Pronto! Aguarde os outros jogadores estarem prontos',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar continuar',\n  });\n\n  const onBeReadyQue = useAPICall({\n    apiFunction: getAPI(gameName).makeMeReady,\n    actionName: 'be-ready',\n    successMessage: 'Vixi, se fudeu então, pq o jogo vai começar!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar continuar',\n  });\n\n  if (!info?.gameName) {\n    return <LoadingPage />;\n  }\n\n  return (\n    <Layout.Content className=\"rules\">\n      <Typography.Title className=\"center\">Regras do Jogo</Typography.Title>\n\n      <RulesCarousel info={info} className=\"rules__carousel\" ruleClass=\"rules__rule\" />\n\n      <Space className=\"rules__actions\">\n        <Button\n          type=\"primary\"\n          icon={amIReady ? <CheckCircleFilled /> : <SmileFilled />}\n          disabled={isLoading || amIReady}\n          onClick={() => onBeReady({})}\n        >\n          Entendi tudo e estou pronto para jogar!\n        </Button>\n        <Button\n          icon={amIReady ? <CheckCircleFilled /> : <MehFilled />}\n          disabled={isLoading || amIReady}\n          onClick={() => onBeReady({})}\n        >\n          Não entendi nada, mas vamos lá\n        </Button>\n        <Button\n          type=\"primary\"\n          danger\n          icon={amIReady ? <CheckCircleFilled /> : <RobotFilled />}\n          disabled={isLoading || amIReady}\n          onClick={() => onBeReadyQue({})}\n        >\n          Que?\n        </Button>\n      </Space>\n      <ReadyPlayersBar players={players} />\n    </Layout.Content>\n  );\n}\n\nexport default Rules;\n","export default __webpack_public_path__ + \"static/media/arte-ruim-timer.1f16745a.mp3\";","import React, { useRef } from 'react';\nimport { Stage, Layer, Line } from 'react-konva';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n\nconst DrawingCanvas = ({ lines, setLines, className = '' }) => {\n  const isDrawing = useRef(false);\n\n  const handleMouseDown = (e) => {\n    isDrawing.current = true;\n    const pos = e.target.getStage().getPointerPosition();\n    setLines([...lines, [pos.x, pos.y]]);\n  };\n\n  const handleMouseMove = (e) => {\n    // no drawing - skipping\n    if (!isDrawing.current) {\n      return;\n    }\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n    let lastLine = lines[lines.length - 1];\n    // add point\n    lastLine = lastLine.concat([point.x, point.y]);\n\n    // replace last\n    lines.splice(lines.length - 1, 1, lastLine);\n    setLines(lines.concat());\n  };\n\n  const handleMouseUp = () => {\n    isDrawing.current = false;\n  };\n\n  return (\n    <Stage\n      width={500}\n      height={500}\n      onMouseDown={handleMouseDown}\n      onMousemove={handleMouseMove}\n      onMouseup={handleMouseUp}\n      className={clsx('a-drawing-canvas', className)}\n    >\n      <Layer>\n        {lines.map((line, i) => (\n          <Line\n            key={i}\n            points={line}\n            stroke=\"#222222\"\n            strokeWidth={5}\n            tension={0.5}\n            lineCap=\"round\"\n            globalCompositeOperation=\"source-over\"\n          />\n        ))}\n      </Layer>\n    </Stage>\n  );\n};\n\nDrawingCanvas.propTypes = {\n  lines: PropTypes.array.isRequired,\n  setLines: PropTypes.func.isRequired,\n  className: PropTypes.string,\n};\n\nexport default DrawingCanvas;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { getColorFromLetter } from '../../utils';\n\nfunction Card({\n  children,\n  header,\n  footer,\n  color,\n  size,\n  randomColor,\n  className,\n  headerClassName,\n  footerClassName,\n}) {\n  const baseClass = 'card';\n\n  const bgColor = randomColor ? getColorFromLetter(typeof children === 'string' ? children[0] : 'X') : color;\n\n  return (\n    <div className={clsx(baseClass, `${baseClass}--${size}`, className)}>\n      <span className={clsx(`${baseClass}__header`, `color-background--${bgColor}`, headerClassName)}>\n        {header}\n      </span>\n      <span className={`${baseClass}__text`}>{children}</span>\n      {footer && <span className={clsx(`${baseClass}__footer`, footerClassName)}>{footer}</span>}\n    </div>\n  );\n}\n\nCard.propTypes = {\n  children: PropTypes.any.isRequired,\n  header: PropTypes.string,\n  footer: PropTypes.string,\n  color: PropTypes.string,\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  randomColor: PropTypes.bool,\n  className: PropTypes.string,\n  headerClassName: PropTypes.string,\n  footerClassName: PropTypes.string,\n};\n\nCard.defaultProps = {\n  header: 'Carta',\n  color: 'none',\n  size: 'medium',\n  randomColor: false,\n  className: '',\n  headerClassName: '',\n  footerClassName: '',\n};\n\nexport default memo(Card);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTimer } from 'react-timer-hook';\n// Utils\nimport { inNSeconds } from '../../../utils';\n// Components\nimport DrawingCanvas from './DrawingCanvas';\nimport Card from '../../cards/Card';\n\nfunction DrawPhaseDrawStep({ secretCard, onSubmitDrawing }) {\n  const [lines, setLines] = useState([]);\n\n  const { seconds } = useTimer({\n    expiryTimestamp: inNSeconds(11),\n    autoStart: true,\n    onExpire: () =>\n      onSubmitDrawing({\n        drawing: JSON.stringify(lines),\n        cardId: secretCard.id,\n      }),\n  });\n\n  return (\n    <div className=\"a-draw-phase-draw-step\">\n      <Card\n        size=\"large\"\n        header=\"Desenhe\"\n        footer={Array(secretCard?.level).fill('•').join('')}\n        className=\"a-draw-phase-draw-step__card\"\n        color=\"yellow\"\n      >\n        {secretCard?.text}\n        <span className=\"a-draw-phase-draw-step__timer\">{seconds - 1}</span>\n      </Card>\n      <DrawingCanvas lines={lines} setLines={setLines} />\n    </div>\n  );\n}\n\nDrawPhaseDrawStep.propTypes = {\n  secretCard: PropTypes.shape({\n    text: PropTypes.string,\n    level: PropTypes.number,\n  }).isRequired,\n  onSubmitDrawing: PropTypes.func.isRequired,\n};\n\nexport default DrawPhaseDrawStep;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Spin } from 'antd';\n// Components\nimport ReadyPlayersBar from './ReadyPlayersBar';\nimport Title from './Title';\nimport Instruction from './Instruction';\n\nconst WaitingRoom = ({ players, title, instruction, children }) => {\n  return (\n    <div className=\"waiting-room\">\n      <Title>{title}</Title>\n      <Spin />\n      <Instruction>{instruction}</Instruction>\n      {children}\n      <ReadyPlayersBar players={players} />\n    </div>\n  );\n};\n\nWaitingRoom.propTypes = {\n  players: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n  instruction: PropTypes.string.isRequired,\n  children: PropTypes.any,\n};\n\nexport default WaitingRoom;\n","export default __webpack_public_path__ + \"static/media/rodada-title.2e3f9c1d.svg\";","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Resources\nimport { AVATAR_DESCRIPTIONS_BR } from '../../utils/constants';\n// Components\nimport Avatar from './Avatar';\n\nfunction AvatarName({\n  player,\n  size = 'default',\n  className = '',\n  withDescription = false,\n  uppercase = false,\n}) {\n  const baseClass = 'avatar-name';\n\n  return (\n    <span\n      className={clsx(baseClass, `${baseClass}--${size}`, uppercase && `${baseClass}--uppercase`, className)}\n    >\n      <Avatar id={player.avatarId} className=\"avatar-name__avatar\" size={size} />\n      <span className=\"avatar-name__name\">{player.name}</span>\n      {withDescription && (\n        <span className=\"avatar-name__name\">, {AVATAR_DESCRIPTIONS_BR[player.avatarId]}</span>\n      )}\n    </span>\n  );\n}\n\nAvatarName.propTypes = {\n  player: PropTypes.shape({\n    avatarId: PropTypes.number,\n    name: PropTypes.string,\n  }).isRequired,\n  size: PropTypes.oneOf(['small', 'default', 'large']),\n  withDescription: PropTypes.bool,\n  uppercase: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nexport default memo(AvatarName);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { Button } from 'antd';\n// Hook and Utils\nimport { useTimer } from 'react-timer-hook';\nimport { inNSeconds } from '../../utils';\n\nfunction TimedButton({ duration, label, onExpire, showTimer, ...props }) {\n  const { seconds } = useTimer({\n    expiryTimestamp: inNSeconds(duration),\n    autoStart: true,\n    onExpire: showTimer ? onExpire : undefined,\n  });\n\n  const timeClass = 'timed-button__time';\n\n  return (\n    <Button {...props}>\n      {label} {showTimer && <span className={clsx(timeClass, `${timeClass}--${props.type}`)}>{seconds}</span>}\n    </Button>\n  );\n}\n\nTimedButton.propTypes = {\n  duration: PropTypes.number,\n  label: PropTypes.any.isRequired,\n  onExpire: PropTypes.func.isRequired,\n  showTimer: PropTypes.bool,\n};\n\nTimedButton.defaultProps = {\n  duration: 10,\n  showTimer: true,\n};\n\nexport default TimedButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Tag } from 'antd';\n// Images\nimport rodadaTitle from '../../images/rodada-title.svg';\n// Components\nimport AvatarName from '../avatars/AvatarName';\nimport TimedButton from './TimedButton';\n\nfunction Team({ team, players, className }) {\n  return (\n    <div className={className}>\n      <h1>Time {team.name}</h1>\n      <ul className=\"round-announcement__team-members\">\n        {team.members.map((playerName) => (\n          <li key={`team-member-${playerName}`} className=\"round-announcement__team-member\">\n            <AvatarName player={players[playerName]} />\n          </li>\n        ))}\n      </ul>\n      <Tag className=\"round-announcement__points\" color=\"blue\">\n        {team.score} {team.score > 1 ? 'pontos' : 'ponto'}\n      </Tag>\n    </div>\n  );\n}\n\nfunction RoundAnnouncement({ round, onPressButton, buttonText, time, teams, players, children }) {\n  return (\n    <div className=\"round-announcement\">\n      {Boolean(teams?.A) && (\n        <Team className=\"round-announcement__team-left\" team={teams.A} players={players} />\n      )}\n\n      <div className=\"round-announcement__main\">\n        <div className=\"round-announcement__title\">\n          <img src={rodadaTitle} alt=\"Rodada\" />\n        </div>\n        <div className=\"round-announcement__round-wrapper\">\n          <div className=\"round-announcement__circle\"></div>\n          <div className=\"round-announcement__number\">{round ?? 0}</div>\n        </div>\n\n        {children}\n\n        {Boolean(onPressButton) && !Boolean(time) && (\n          <Button type=\"primary\" onClick={onPressButton} className=\"round-announcement__go-button\">\n            {buttonText}\n          </Button>\n        )}\n\n        {Boolean(onPressButton) && Boolean(time) && (\n          <TimedButton\n            label={buttonText}\n            type=\"primary\"\n            onClick={onPressButton}\n            onExpire={onPressButton}\n            duration={time}\n            showTimer\n          />\n        )}\n      </div>\n\n      {Boolean(teams?.B) && (\n        <Team className=\"round-announcement__team-right\" team={teams.B} players={players} />\n      )}\n    </div>\n  );\n}\n\nRoundAnnouncement.propTypes = {\n  round: PropTypes.number,\n  onPressButton: PropTypes.func,\n  buttonText: PropTypes.string,\n  time: PropTypes.number,\n  players: PropTypes.object,\n  teams: PropTypes.object,\n};\n\nRoundAnnouncement.defaultProps = {\n  buttonText: 'Prosseguir',\n  time: 0,\n};\n\nexport default RoundAnnouncement;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Loading from '../loaders/Loading';\n\nfunction StepSwitcher({ children, step, conditions }) {\n  if (!children[step]) {\n    return <Loading />;\n  }\n\n  return (conditions?.[step] ?? true) && <Fragment>{children[step]}</Fragment>;\n}\n\nStepSwitcher.propTypes = {\n  children: PropTypes.any.isRequired,\n  step: PropTypes.number.isRequired,\n  conditions: PropTypes.arrayOf(PropTypes.bool),\n};\n\nexport default StepSwitcher;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Space } from 'antd';\nimport { FireFilled } from '@ant-design/icons';\n// State & Hooks\nimport useGlobalState from '../../hooks/useGlobalState';\nimport { useAPICall, useLoading } from '../../hooks';\n\nfunction AdminForceNextPhase({ goToNextPhase, className = '' }) {\n  const [isLoading] = useLoading();\n  const [isAdmin] = useGlobalState('isAdmin');\n\n  const onGoToNextPhase = useAPICall({\n    apiFunction: goToNextPhase,\n    actionName: 'force-next-phase',\n    successMessage: 'Funcionou, próxima fase!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar ir para a próxima fase',\n  });\n\n  if (!isAdmin) return <span></span>;\n\n  return (\n    <Space className={clsx('admin-only-container', className)}>\n      <Button\n        icon={<FireFilled />}\n        type=\"primary\"\n        danger\n        onClick={() => onGoToNextPhase({})}\n        disabled={isLoading}\n      >\n        ADMIN: Force Next Phase\n      </Button>\n    </Space>\n  );\n}\n\nAdminForceNextPhase.propTypes = {\n  goToNextPhase: PropTypes.func.isRequired,\n  className: PropTypes.string,\n};\n\nexport default AdminForceNextPhase;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport useSound from 'use-sound';\n\n// State & Hooks\nimport { useGlobalState, useAmIReady, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { ARTE_RUIM_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\nimport arteRuimTimer from '../../../sounds/arte-ruim-timer.mp3';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport DrawPhaseDrawStep from './DrawPhaseDrawStep';\nimport WaitingRoom from '../../shared/WaitingRoom';\nimport RoundAnnouncement from '../../shared/RoundAnnouncement';\nimport Instruction from '../../shared/Instruction';\nimport StepSwitcher from '../../shared/StepSwitcher';\nimport AdminForceNextPhase from '../../shared/AdminForceNextPhase';\n\nfunction DrawPhase({ players, state, info }) {\n  const amIReady = useAmIReady(players, state);\n  const [me] = useGlobalState('me');\n  const [step, setStep] = useState(0);\n  const [secretCard, setSecretCard] = useState({});\n  const [play] = useSound(arteRuimTimer, { volume: 0.4 });\n\n  useEffect(() => {\n    setSecretCard(players[me].currentCard ?? {});\n  }, [players, me]);\n\n  const onSubmitDrawing = useAPICall({\n    apiFunction: ARTE_RUIM_API.submitDrawing,\n    actionName: 'submit-drawing',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: 'Acabou o tempo! Aguarde enquanto os outros participantes desenham',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar o desenho',\n  });\n\n  const onStartDrawing = () => {\n    play();\n    setStep(1);\n  };\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ARTE_RUIM.DRAW}\n      className=\"draw-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!amIReady, !amIReady]}>\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state?.round}\n          onPressButton={onStartDrawing}\n          buttonText=\"Um dó, lá, si... vamos ir... já!\"\n        >\n          <Instruction white>\n            Você terá 10 segundos para ler a sua carta e desenhá-la. Aperte o botão quando estiver pronto!\n            <br />\n            Fique esperto porque começa assim que você apertar. Não 'seje' lerdo.\n          </Instruction>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <DrawPhaseDrawStep secretCard={secretCard} onSubmitDrawing={onSubmitDrawing} />\n\n        {/* Step 2 */}\n        <Fragment>\n          <WaitingRoom\n            players={players}\n            title=\"Pronto!\"\n            instruction=\"Vamos aguardar enquanto os outros jogadores terminam seus desenhos!\"\n          />\n          <AdminForceNextPhase goToNextPhase={ARTE_RUIM_API.goToNextPhase} />\n        </Fragment>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default DrawPhase;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nconst getPathFromKonvaLines = (lines) => {\n  const result = lines.map((lineArr) => {\n    let path = '';\n    for (let x = 0, y = 1; y < lineArr.length; x += 2, y += 2) {\n      if (lineArr[x + 2] && lineArr[y + 2]) {\n        path += `M${lineArr[x]},${lineArr[y]} L${lineArr[x + 2]},${lineArr[y + 2]}`;\n      }\n    }\n\n    return path;\n  });\n\n  return result;\n};\n\nfunction CanvasSVG({ drawing = '', className = '', size = 250 }) {\n  const konvaLines = JSON.parse(drawing);\n  const paths = getPathFromKonvaLines(konvaLines);\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 500 500\"\n      overflow=\"hidden\"\n      className={className}\n      style={{ width: `${size}px` }}\n    >\n      <defs />\n      {paths.map((path, index) => (\n        <path\n          key={`${drawing}-${index}`}\n          d={path}\n          fill=\"none\"\n          stroke=\"#000\"\n          strokeWidth=\"4\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit=\"10\"\n        />\n      ))}\n    </svg>\n  );\n}\n\nCanvasSVG.propTypes = {\n  drawing: PropTypes.string.isRequired,\n  className: PropTypes.string,\n};\n\nexport default memo(CanvasSVG);\n","import React from 'react';\nimport { getColorFromLetter } from '../../../utils';\n\nfunction Ribbon({ cardEntryId }) {\n  const [, , letter] = cardEntryId.split('-');\n  return (\n    <div className=\"a-ribbon\">\n      <div\n        className={`a-ribbon__content a-ribbon__content--${letter} color-background--${getColorFromLetter(\n          letter\n        )}`}\n      >\n        {letter}\n      </div>\n    </div>\n  );\n}\n\nexport default Ribbon;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Components\nimport CanvasSVG from './CanvasSVG';\nimport Ribbon from './Ribbon';\n\nfunction EvaluationAllDrawings({ drawings, activeItem, onActivateItem, votes, canvasSize }) {\n  const liButtonBaseClass = 'a-evaluation-all-drawings__li-drawing-button';\n\n  return (\n    <ul className=\"a-evaluation-all-drawings\">\n      {drawings?.map((drawingEntry) => {\n        const canvasEntryId = `drawing-${drawingEntry.id}`;\n        const isActive = activeItem === canvasEntryId;\n        return (\n          <li\n            key={canvasEntryId}\n            className={clsx(liButtonBaseClass, isActive && `${liButtonBaseClass}--active`)}\n            onClick={() => onActivateItem(canvasEntryId)}\n          >\n            {votes?.[canvasEntryId] && <Ribbon cardEntryId={votes[canvasEntryId]} />}\n            <CanvasSVG\n              drawing={drawingEntry.drawing}\n              className=\"a-evaluation-all-drawings__drawing\"\n              size={canvasSize}\n            />\n            <span className=\"a-evaluation-all-drawings__artist\">{drawingEntry.playerName}</span>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nEvaluationAllDrawings.propTypes = {\n  activeItem: PropTypes.string,\n  drawings: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      drawing: PropTypes.string,\n    })\n  ),\n  onActiveItem: PropTypes.func,\n  votes: PropTypes.object,\n  canvasSize: PropTypes.number,\n};\n\nexport default EvaluationAllDrawings;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { WarningOutlined } from '@ant-design/icons';\nimport { getColorFromLetter } from '../../utils';\n// Components\nimport Card from './Card';\n\nfunction ArteRuimCard({ text, level, header = 'X' }) {\n  return (\n    <Card\n      color={getColorFromLetter(header)}\n      header={header}\n      size=\"medium\"\n      footer={Array(level).fill('•').join('')}\n    >\n      {text ?? <WarningOutlined />}\n    </Card>\n  );\n}\n\nArteRuimCard.propTypes = {\n  text: PropTypes.string.isRequired,\n  header: PropTypes.string,\n  level: PropTypes.number,\n};\n\nexport default memo(ArteRuimCard);\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// Utils\nimport { LETTERS } from '../../../utils/constants';\n// Components\nimport Card from '../../cards/ArteRuimCard';\n\nfunction EvaluationAllCards({ cards, activeItem, onActivateItem, votes }) {\n  const liButtonBaseClass = 'a-evaluation-all-cards__li-card-button';\n\n  return (\n    <ul className=\"a-evaluation-all-cards\">\n      {cards.map((cardEntry, index) => {\n        const letter = LETTERS[index];\n        const cardEntryId = `card-${cardEntry.id}-${letter}`;\n        const isActive = activeItem === cardEntryId;\n        const isUsed = Object.values(votes).includes(cardEntryId);\n\n        return (\n          <li\n            role=\"button\"\n            key={cardEntryId}\n            className={clsx(\n              liButtonBaseClass,\n              isActive && `${liButtonBaseClass}--active`,\n              isUsed && `${liButtonBaseClass}--used`\n            )}\n            onClick={() => onActivateItem(cardEntryId)}\n          >\n            <Card text={cardEntry.text} level={cardEntry.level} header={letter} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nEvaluationAllCards.propTypes = {\n  activeItem: PropTypes.string,\n  cards: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n    })\n  ),\n  onActiveItem: PropTypes.func,\n  votes: PropTypes.object,\n};\n\nexport default EvaluationAllCards;\n","import React, { memo } from 'react';\n// Design Resources\nimport { Slider } from 'antd';\n// State & Hooks\nimport { useGlobalState } from '../../../hooks';\n\nconst CanvasResizer = () => {\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n\n  return (\n    <div className=\"a-canvas-resizer\">\n      <div className=\"a-canvas-resizer__label\">Tamanho das Images</div>\n      <Slider\n        className=\"a-canvas-resizer__slider\"\n        defaultValue={canvasSize}\n        min={100}\n        max={500}\n        step={50}\n        onChange={setCanvasSize}\n      />\n    </div>\n  );\n};\n\nexport default memo(CanvasResizer);\n","import React, { Fragment, useCallback, useState } from 'react';\n// Design Resources\nimport { Button, Space } from 'antd';\nimport { CloudUploadOutlined } from '@ant-design/icons';\n// Hooks\nimport { useAmIReady, useGlobalState, useAPICall } from '../../../hooks';\n// Utils\nimport { ARTE_RUIM_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport WaitingRoom from '../../shared/WaitingRoom';\nimport EvaluationAllDrawings from './EvaluationAllDrawings';\nimport EvaluationAllCards from './EvaluationAllCards';\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport CanvasResizer from './CanvasResizer';\nimport Title from '../../shared/Title';\nimport Instruction from '../../shared/Instruction';\nimport StepSwitcher from '../../shared/StepSwitcher';\nimport AdminForceNextPhase from '../../shared/AdminForceNextPhase';\n\nfunction prepareVotes(votes) {\n  return Object.entries(votes).reduce((acc, [drawingEntryId, cardEntryId]) => {\n    const [, drawingId] = drawingEntryId.split('-');\n    const [, cardId] = cardEntryId.split('-');\n    acc[drawingId] = cardId;\n    return acc;\n  }, {});\n}\n\nfunction EvaluationPhase({ players, state, info }) {\n  const amIReady = useAmIReady(players, state);\n  const [canvasSize] = useGlobalState('canvasSize');\n  const [step, setStep] = useState(0);\n  const [votes, setVotes] = useState({});\n  const [activeItem, setActiveItem] = useState(null);\n\n  const onSubmitVoting = useAPICall({\n    apiFunction: ARTE_RUIM_API.submitVoting,\n    actionName: 'submit-drawing',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage: 'Avaliação enviada! Agora aguarde os outros jogadores',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar sua avaliação',\n  });\n\n  const onActivateItem = useCallback(\n    (entryId) => {\n      const [type] = entryId.split('-');\n      if (!activeItem || activeItem.startsWith(type)) {\n        setActiveItem(entryId);\n      } else {\n        if (type === 'card') {\n          setVotes((prevVotes) => {\n            return {\n              ...prevVotes,\n              [activeItem]: entryId,\n            };\n          });\n        } else {\n          setVotes((prevVotes) => {\n            return {\n              ...prevVotes,\n              [entryId]: activeItem,\n            };\n          });\n        }\n        setActiveItem(null);\n      }\n    },\n    [activeItem]\n  );\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ARTE_RUIM.EVALUATION}\n      className=\"a-evaluation-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!amIReady]}>\n        {/*Step 0 */}\n        <div className=\"a-evaluation-phase__step-one\">\n          <CanvasResizer />\n          <Title>Adivinhação</Title>\n          <Instruction>\n            Encontre os pares de desenho e carta clicando em uma carta ou desenho e em seguida clicando em seu\n            par.\n          </Instruction>\n          <Instruction>\n            Uma bandeirinha aparecerá no topo de cada desenho com a cor e letra da carta que você selecionou.\n            Quando encontrar todos os pares, envie sua avaliação!\n          </Instruction>\n\n          <EvaluationAllDrawings\n            drawings={state?.drawings ?? []}\n            activeItem={activeItem}\n            onActivateItem={onActivateItem}\n            votes={votes}\n            canvasSize={canvasSize}\n          />\n\n          <EvaluationAllCards\n            cards={state?.cards ?? []}\n            activeItem={activeItem}\n            onActivateItem={onActivateItem}\n            votes={votes}\n          />\n\n          <Space className=\"a-evaluation-phase__action-button\">\n            <Button\n              type=\"primary\"\n              onClick={() => onSubmitVoting({ votes: prepareVotes(votes) })}\n              disabled={Object.values(votes).length < state.drawings.length}\n              icon={<CloudUploadOutlined />}\n            >\n              Enviar sua avaliação\n            </Button>\n          </Space>\n        </div>\n\n        {/*Step 1 */}\n        <Fragment>\n          <WaitingRoom\n            players={players}\n            title=\"Pronto!\"\n            instruction=\"Vamos aguardar enquanto os outros jogadores terminam de avaliar!\"\n          />\n          <AdminForceNextPhase goToNextPhase={ARTE_RUIM_API.goToNextPhase} />\n        </Fragment>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default EvaluationPhase;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Components\nimport AvatarEntry from '../../avatars/AvatarEntry';\n\nfunction GalleryWindowCredits({ artist, artistAvatarId }) {\n  return (\n    <div className=\"a-gallery-window__credits\">\n      <div className=\"a-gallery-window__label\">Artista</div>\n      <span className=\"a-gallery-window__artist-name\">\n        <AvatarEntry id={artistAvatarId} name={artist} />\n      </span>\n    </div>\n  );\n}\n\nGalleryWindowCredits.propTypes = {\n  artist: PropTypes.string,\n  artistAvatarId: PropTypes.number,\n};\n\nexport default memo(GalleryWindowCredits);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Avatar as AntAvatar } from 'antd';\nimport { MessageFilled } from '@ant-design/icons';\n// Components\nimport Avatar from '../../avatars/Avatar';\n\nfunction GalleryWindowGuesses({ playersSay, players, cards }) {\n  return (\n    <div className=\"a-gallery-window__guesses\">\n      <div className=\"a-gallery-window__label\">Participantes votaram</div>\n      {Object.entries(playersSay).map(([cardId, playersNames], index) => {\n        const card = cards.find((i) => i.id === cardId);\n        return (\n          <div key={`guess-${cardId}-${index}`} className=\"a-gallery-window__guess\">\n            <div className=\"a-gallery-window__speech-bubble\">\n              <MessageFilled className=\"a-gallery-window__speech-bubble-icon\" /> {card.text}\n            </div>\n            <div className=\"a-gallery-window__players\">\n              <AntAvatar.Group>\n                {playersNames.map((playerName) => (\n                  <Avatar\n                    id={players[playerName].avatarId}\n                    key={`guess-avatar-${players[playerName].avatarId}`}\n                  />\n                ))}\n              </AntAvatar.Group>\n              <span className=\"a-gallery-window__players-names\">{playersNames.join(', ')}</span>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nGalleryWindowGuesses.propTypes = {\n  playersSay: PropTypes.object,\n  players: PropTypes.object,\n};\n\nexport default memo(GalleryWindowGuesses);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTimer } from 'react-timer-hook';\n// Design Resources\nimport { Button } from 'antd';\nimport {\n  PauseOutlined,\n  PlayCircleOutlined,\n  StepBackwardOutlined,\n  StepForwardOutlined,\n  TrophyOutlined,\n} from '@ant-design/icons';\n// Utils\nimport { inNSeconds } from '../../../utils';\n\nfunction GalleryWindowControls({ galleryLength, activeIndex, setActiveIndex, setStep }) {\n  const { seconds, isRunning, pause, resume } = useTimer({\n    expiryTimestamp: inNSeconds(10 * galleryLength),\n    autoStart: true,\n    onExpire: () => setStep(1),\n  });\n\n  // Automatically go to the next window every 10 seconds\n  useEffect(() => {\n    if (seconds < 10 * galleryLength && seconds > 0 && seconds % 10 === 0) {\n      setActiveIndex((s) => Math.min(s + 1, galleryLength - 1));\n    }\n  }, [seconds, setActiveIndex, galleryLength]);\n\n  const previousStep = () => {\n    setActiveIndex((s) => Math.max(s - 1, 0));\n  };\n\n  const nextStep = () => {\n    setActiveIndex((s) => Math.min(s + 1, galleryLength - 1));\n  };\n\n  return (\n    <div className=\"a-gallery-window__controls\">\n      <div className=\"a-gallery-window__timer-bar\">\n        <span style={{ width: `${Math.abs((10 * seconds) / galleryLength - 100)}%` }}></span>\n      </div>\n      <Button\n        size=\"large\"\n        icon={<StepBackwardOutlined />}\n        onClick={previousStep}\n        disabled={activeIndex === 0}\n      >\n        Desenho Anterior\n      </Button>\n      <Button\n        size=\"large\"\n        icon={isRunning ? <PauseOutlined /> : <PlayCircleOutlined />}\n        onClick={isRunning ? pause : resume}\n      />\n      <Button size=\"large\" onClick={nextStep} disabled={activeIndex === galleryLength - 1}>\n        Próximo Desenho <StepForwardOutlined />\n      </Button>\n      <Button size=\"large\" onClick={() => setStep(1)} icon={<TrophyOutlined />}>\n        Ver Ranking\n      </Button>\n    </div>\n  );\n}\n\nGalleryWindowControls.propTypes = {\n  galleryLength: PropTypes.number,\n  activeIndex: PropTypes.number,\n  setActiveIndex: PropTypes.func,\n  setStep: PropTypes.func,\n};\n\nexport default GalleryWindowControls;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n// Design Resources\nimport { StarFilled } from '@ant-design/icons';\n\nfunction StarPoints({ quantity, keyPrefix, className = '' }) {\n  if (!quantity || quantity < 1) {\n    return <span></span>;\n  }\n  const starsArray = Array.from({ length: quantity }, (_, i) => <StarFilled key={`${keyPrefix}-${i}`} />);\n  return (\n    <span className={clsx('star-points', className)}>\n      + <span className=\"star-points__stars\">{starsArray}</span> point{quantity > 1 ? 's' : ''}\n    </span>\n  );\n}\n\nStarPoints.propTypes = {\n  quantity: PropTypes.number,\n  className: PropTypes.string,\n  keyPrefix: PropTypes.string.isRequired,\n};\n\nexport default memo(StarPoints);\n","import React, { Fragment, memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Avatar as AntAvatar, Typography } from 'antd';\nimport { CrownFilled, DeleteFilled } from '@ant-design/icons';\n// Components\nimport Avatar from '../../avatars/Avatar';\nimport StarPoints from '../../shared/StarPoints';\n\nfunction GalleryWindowResult({\n  artist,\n  correctAnswerId,\n  correctAnswerText,\n  playersPoints,\n  playersSay,\n  players,\n}) {\n  const correctGuesses = Object.values(playersSay?.[correctAnswerId] ?? {});\n\n  return (\n    <div className=\"a-gallery-window__result\">\n      <div className=\"a-gallery-window__label\">E a carta correta é</div>\n      <div className=\"a-gallery-window__speech-bubble\">\n        <CrownFilled className=\"a-gallery-window__speech-bubble-icon\" />\n        {correctAnswerText}\n      </div>\n      {correctGuesses.length ? (\n        <Fragment>\n          <div className=\"a-gallery-window__players\">\n            <AntAvatar.Group>\n              {correctGuesses.map((playerName) => {\n                return (\n                  <Avatar key={`correct-guess-avatar-${playerName}`} id={players[playerName].avatarId} />\n                );\n              })}\n            </AntAvatar.Group>\n            <StarPoints quantity={2} keyPrefix={`guessers-points-${artist}`} />\n            <span className=\"a-gallery-window__players-names\">{correctGuesses.join(', ')}</span>\n          </div>\n          <div className=\"a-gallery-window__artist-points\">\n            <Avatar id={players[artist].avatarId} />{' '}\n            <StarPoints quantity={playersPoints?.[artist]} keyPrefix={`artist-points-${artist}`} />{' '}\n            <span className=\"a-gallery-window__players-names\">{artist}</span>\n          </div>\n        </Fragment>\n      ) : (\n        <Typography.Text className=\"a-gallery-window__no-wins\">\n          <DeleteFilled /> Nossa, ninguém acertou. Esse desenho deve ter sido muito ruim.\n        </Typography.Text>\n      )}\n    </div>\n  );\n}\n\nGalleryWindowResult.propTypes = {\n  artist: PropTypes.string,\n  correctAnswer: PropTypes.string,\n  playersPoints: PropTypes.object,\n  playersSay: PropTypes.object,\n  players: PropTypes.object,\n};\n\nexport default memo(GalleryWindowResult);\n","import React, { memo } from 'react';\n\n// Hooks\nimport { useGlobalState } from '../../../hooks';\n// Components\nimport CanvasSVG from './CanvasSVG';\nimport GalleryWindowCredits from './GalleryWindowCredits';\nimport GalleryWindowGuesses from './GalleryWindowGuesses';\nimport GalleryWindowControls from './GalleryWindowControls';\nimport GalleryWindowResult from './GalleryWindowResult';\nimport CanvasResizer from './CanvasResizer';\n\nfunction GalleryWindow({ window, galleryLength, players, activeIndex, setActiveIndex, setStep, cards }) {\n  const [canvasSize] = useGlobalState('canvasSize');\n\n  const { drawing, artist, id, text, level, playersPoints, playersSay } = window;\n\n  return (\n    <div className=\"a-gallery-window\">\n      <CanvasResizer />\n      <div className=\"a-gallery-window__drawing-container\">\n        <CanvasSVG\n          key={window.correctAnswer}\n          drawing={drawing}\n          size={canvasSize}\n          className=\"a-gallery-window__drawing\"\n        />\n      </div>\n\n      <GalleryWindowCredits artist={artist} artistAvatarId={players[artist].avatarId} />\n\n      <GalleryWindowGuesses players={players} playersSay={playersSay} cards={cards} />\n\n      <GalleryWindowResult\n        artist={artist}\n        correctAnswerId={id}\n        correctAnswerText={text}\n        correctAnswerLevel={level}\n        playersPoints={playersPoints}\n        playersSay={playersSay}\n        players={players}\n      />\n\n      <GalleryWindowControls\n        galleryLength={galleryLength}\n        activeIndex={activeIndex}\n        setActiveIndex={setActiveIndex}\n        setStep={setStep}\n      />\n    </div>\n  );\n}\n\nexport default memo(GalleryWindow);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTimer } from 'react-timer-hook';\n// Design Resources\nimport { CrownFilled } from '@ant-design/icons';\n// Utils\nimport { inNSeconds } from '../../utils';\n// Components\nimport Avatar from '../avatars/Avatar';\n\nfunction RankingBoard({ players, ranking }) {\n  const [displayStep, setDisplayStep] = useState(0);\n  const [sortedRanking, setSortedRanking] = useState([]);\n  const [positions, setPositions] = useState([]);\n\n  const maxPoints = ranking[0].newScore;\n\n  const rankByFinalScore = () => {\n    setSortedRanking(ranking.sort((a, b) => (a.newScore < b.newScore ? 1 : -1)));\n    setDisplayStep(3);\n  };\n\n  const { seconds } = useTimer({\n    expiryTimestamp: inNSeconds(4),\n    autoStart: true,\n    onExpire: () => rankByFinalScore(),\n  });\n\n  // Rank by previousScore\n  useEffect(() => {\n    setSortedRanking(ranking.sort((a, b) => (a.previousScore < b.previousScore ? 1 : -1)));\n  }, []); // eslint-disable-line\n\n  // Show gained points\n  useEffect(() => {\n    if (seconds === 3) {\n      setDisplayStep(1);\n    } else if (seconds === 2) {\n      setDisplayStep(2);\n    }\n  }, [seconds]);\n\n  // Determine position number in rank\n  useEffect(() => {\n    const property = displayStep < 3 ? 'previousScore' : 'newScore';\n\n    let lastPosition = 1;\n    let lastPoints = sortedRanking?.[0]?.[property] ?? 0;\n    setPositions(\n      sortedRanking.map((entry) => {\n        if (entry[property] < lastPoints) {\n          lastPoints = entry[property];\n          lastPosition += 1;\n        }\n\n        return lastPosition;\n      })\n    );\n  }, [sortedRanking, displayStep]);\n\n  return (\n    <div className=\"ranking-board\">\n      {sortedRanking.map((entry, index) => {\n        const { playerName, newScore, previousScore, gainedPoints } = entry;\n        return (\n          <div className={`ranking-board__row ranking-board__row--${index}`} key={`ranking-${playerName}`}>\n            <div className=\"ranking-board__cell-crown\">\n              {newScore > 0 && maxPoints === newScore && displayStep >= 3 && (\n                <CrownFilled className=\"ranking-board__crown-icon\" />\n              )}\n            </div>\n            <div className=\"ranking-board__cell-position\">#{positions?.[index] ?? ''}</div>\n            <div className=\"ranking-board__cell-player\">\n              <div className=\"ranking-board__avatar\">\n                <Avatar id={players[playerName].avatarId} />\n              </div>\n              <div className=\"ranking-board__name\">{playerName}</div>\n            </div>\n            <div className=\"ranking-board__cell-points\">{previousScore}</div>\n            {displayStep >= 1 && <div className=\"ranking-board__cell-points-plus\">+{gainedPoints}</div>}\n            {displayStep >= 2 && <div className=\"ranking-board__cell-points-total\">{newScore}</div>}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nRankingBoard.propTypes = {\n  players: PropTypes.object,\n  ranking: PropTypes.arrayOf(\n    PropTypes.shape({\n      playerName: PropTypes.string,\n      previousScore: PropTypes.number,\n      gainedPoints: PropTypes.number,\n      newScore: PropTypes.number,\n    })\n  ),\n};\n\nexport default RankingBoard;\n","import React, { Fragment, useEffect, useState } from 'react';\n// Design Resources\nimport { Button } from 'antd';\nimport { PictureOutlined } from '@ant-design/icons';\n// State & Hooks\nimport useGlobalState from '../../../hooks/useGlobalState';\nimport { useAPICall } from '../../../hooks';\n// Resources and Utils\nimport { ARTE_RUIM_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport GalleryWindow from './GalleryWindow';\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport { AdminOnlyButton } from '../../shared/AdminOnly';\nimport RankingBoard from '../../shared/RankingBoard';\nimport Title from '../../shared/Title';\nimport Instruction from '../../shared/Instruction';\nimport StepSwitcher from '../../shared/StepSwitcher';\n\nfunction GalleryPhase({ players, state, info }) {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [step, setStep] = useState(0);\n  const [canvasSize, setCanvasSize] = useGlobalState('canvasSize');\n  const [cachedCanvasSize, setCachedCanvasSize] = useState(canvasSize);\n\n  // The gallery needs a bigger image, its annoying that we are changing the users settings but whatever\n  useEffect(() => {\n    if (step === 0) {\n      setCachedCanvasSize(canvasSize);\n      setCanvasSize(500);\n    } else {\n      setCanvasSize(cachedCanvasSize);\n    }\n  }, [step]); // eslint-disable-line\n\n  const onGoToNextRound = useAPICall({\n    apiFunction: ARTE_RUIM_API.goToNextPhase,\n    actionName: 'go-to-next-phase',\n    successMessage: 'Ranking!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar ir para a próxima fase',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ARTE_RUIM.GALLERY}\n      className=\"a-gallery-phase\"\n    >\n      <StepSwitcher step={step}>\n        {/* Step 0 */}\n        <div className=\"a-gallery-phase__windows\">\n          <Title>Galeria de Arte</Title>\n          {state?.gallery && (\n            <GalleryWindow\n              window={state.gallery[activeIndex]}\n              galleryLength={state.gallery.length}\n              cards={state.cards}\n              players={players}\n              activeIndex={activeIndex}\n              setActiveIndex={setActiveIndex}\n              setStep={setStep}\n            />\n          )}\n        </div>\n\n        {/* Step 1 */}\n        <Fragment>\n          <Title>{state.pointsToVictory >= 0 ? 'Ranking' : 'Game Over'}</Title>\n          <RankingBoard players={players} ranking={state.ranking} />\n          {state.pointsToVictory >= 0 && (\n            <Instruction contained>\n              Faltam <strong>{state.pointsToVictory}</strong> pontos para o jogo acabar...\n            </Instruction>\n          )}\n\n          <Button size=\"large\" onClick={() => setStep(0)} icon={<PictureOutlined />}>\n            Ver Galeria\n          </Button>\n          <AdminOnlyButton action={() => onGoToNextRound({})} label=\"Ir para próxima rodada ou game over\" />\n        </Fragment>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default GalleryPhase;\n","export default __webpack_public_path__ + \"static/media/game-over-title.7073f1c0.svg\";","import React from 'react';\n// Design Resources\nimport { Button, Popconfirm, Progress } from 'antd';\nimport { RocketFilled } from '@ant-design/icons';\n// Images\nimport gameOverTitle from '../../images/game-over-title.svg';\n// Utils\nimport { useAPICall, useLoading } from '../../hooks';\nimport { GAME_API } from '../../adapters';\nimport { AVATAR_DESCRIPTIONS_BR } from '../../utils/constants';\n// Components\nimport PhaseContainer from './PhaseContainer';\nimport Avatar from '../avatars/Avatar';\nimport AdminOnly from './AdminOnly';\n\nfunction GameOver({ info, state, children }) {\n  const [isLoading] = useLoading();\n\n  const onPlayAgain = useAPICall({\n    apiFunction: GAME_API.playAgain,\n    actionName: 'play-=again',\n    successMessage: 'Jogando novamente o mesmo jogo!',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar ir reiniciar o jogo',\n  });\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase=\"GAME_OVER\" className=\"game-over\">\n      <div className=\"game-over__title\">\n        <img src={gameOverTitle} alt=\"Game Over\" />\n      </div>\n\n      {Boolean(state.winners) && (\n        <div className=\"game-over__winner-container\">\n          <div className=\"game-over__text\">\n            Jogo concluido e {state.winners.length > 1 ? 'os vencedores são' : 'o vencedor é'}:\n          </div>\n          <ul className=\"game-over__winners\">\n            {state.winners.map((winner) => {\n              return (\n                <li className=\"game-over__winner\" key={`winner-${winner.name}`}>\n                  <Avatar className=\"game-over__avatar\" id={winner.avatarId ?? 25} />\n                  <div className=\"game-over__winner-name\">\n                    <strong>{winner.name ?? '?'}</strong>, {AVATAR_DESCRIPTIONS_BR[winner.avatarId]}\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      )}\n\n      {Boolean(state.team) && (\n        <div className=\"game-over__winner\">\n          <div className=\"game-over__text\">Jogo concluido.</div>\n          <Progress\n            type=\"circle\"\n            strokeColor={{\n              '0%': '#ff0000',\n              '70%': '#ff0000',\n              '100%': '#87d068',\n            }}\n            percent={state.team.score ?? 0}\n          />\n          <div className=\"game-over__text\">\n            {state.team.victory ? 'Parabéns, vocês ganharam!' : 'Não foi dessa vez, que vergonha heim!'}\n          </div>\n        </div>\n      )}\n\n      {!Boolean(state.winners) && !Boolean(state.team) && (\n        <div className=\"game-over__text\">Jogo concluido.</div>\n      )}\n\n      {children}\n\n      <AdminOnly>\n        <Popconfirm\n          title=\"Tem certeza que que jogar este jogo novamente??\"\n          onConfirm={() => onPlayAgain({})}\n          okText=\"Sim\"\n          cancelText=\"Não\"\n        >\n          <Button icon={<RocketFilled />} danger type=\"primary\" disabled={isLoading}>\n            Jogar novamente\n          </Button>\n        </Popconfirm>\n      </AdminOnly>\n    </PhaseContainer>\n  );\n}\n\nexport default GameOver;\n","import React, { memo } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Avatar } from 'antd';\n\nconst grades = ['A+', 'A', 'A-', 'B+', 'B', 'B-', 'C+', 'C', 'C-', 'D+', 'D', 'F'];\nconst minValues = [97, 93, 90, 87, 83, 80, 77, 73, 70, 67, 65, 0];\n\nconst DrawingGrade = ({ value }) => {\n  const grade = grades[minValues.findIndex((i) => value * 100 >= i) ?? 11];\n\n  const baseClass = 'a-drawing-grade';\n\n  return <Avatar className={clsx(baseClass, `${baseClass}--${grade[0]}`)}>{grade}</Avatar>;\n};\n\nDrawingGrade.propTypes = {\n  value: PropTypes.number.isRequired,\n};\n\nexport default memo(DrawingGrade);\n","import React from 'react';\n// Components\nimport GameOver from '../../shared/GameOver';\nimport CanvasSVG from './CanvasSVG';\nimport DrawingGrade from './DrawingGrade';\n\nfunction GameOverPhase({ state, info }) {\n  return (\n    <GameOver info={info} state={state}>\n      <ul className=\"a-game-over__gallery\">\n        {state.drawings.map((entry) => {\n          return (\n            <li className=\"a-game-over__gallery-item\">\n              <CanvasSVG drawing={entry.drawing} size={200} className=\"a-game-over__gallery-canvas\" />\n              <span className=\"a-game-over__credits\">\n                \"{entry.text}\" por {entry.playerName}\n              </span>\n              <DrawingGrade value={entry.successRate} />\n            </li>\n          );\n        })}\n      </ul>\n    </GameOver>\n  );\n}\n\nexport default GameOverPhase;\n","import React, { Fragment, useMemo, useState } from 'react';\n// Design Resources\nimport { Affix, Avatar as AntAvatar, Badge, Button, Divider, Drawer } from 'antd';\nimport { InfoCircleOutlined } from '@ant-design/icons';\n// Utils\nimport { AVATAR_DESCRIPTIONS_BR } from '../../utils/constants';\n// Components\nimport Avatar from '../avatars/Avatar';\nimport RulesModal from '../modals/RulesModal';\n\nfunction SectionMe({ player, isTeamGame }) {\n  return (\n    <div className=\"game-info-drawer__section-me\">\n      <div className=\"game-info-drawer__label\">Você é{isTeamGame && ` do time ${player?.team ?? '?'}`}</div>\n      <div className=\"game-info-drawer__me\">\n        <Badge count={player.score} className=\"game-info-drawer__avatar-with-badge\">\n          <Avatar id={player.avatarId} shape=\"square\" />\n        </Badge>\n        {player.name}, {AVATAR_DESCRIPTIONS_BR[player.avatarId]}\n      </div>\n    </div>\n  );\n}\n\nfunction SectionMeta({ round, roundsToEndGame, groupScore, pointsToVictory, isTeamGame, teams }) {\n  return (\n    <ul className=\"game-info-drawer__meta\">\n      <li className=\"game-info-drawer__meta-item\">\n        <div className=\"game-info-drawer__label-inline\">Rodada:</div>\n        <AntAvatar className=\"game-info-drawer__round\" size=\"small\">\n          {round}\n        </AntAvatar>\n        {Boolean(roundsToEndGame) && !isNaN(round) && (\n          <Fragment>\n            <span className=\"game-info-drawer__inline-separator\">de</span>\n            <AntAvatar className=\"game-info-drawer__round\" size=\"small\">\n              {round + roundsToEndGame}\n            </AntAvatar>\n          </Fragment>\n        )}\n      </li>\n\n      {Boolean(groupScore) && (\n        <li className=\"game-info-drawer__meta-item\">\n          <div className=\"game-info-drawer__label-inline\">Pontos:</div>\n          <AntAvatar className=\"game-info-drawer__round\" size=\"default\" style={{ backgroundColor: 'gold' }}>\n            {groupScore ?? 0}\n          </AntAvatar>\n        </li>\n      )}\n\n      {Boolean(teams) && (\n        <li className=\"game-info-drawer__meta-item\">\n          <div className=\"game-info-drawer__label-inline\">Pontos A vs B:</div>\n          <AntAvatar className=\"game-info-drawer__round\" size=\"default\">\n            {teams?.A?.score ?? '?'}\n          </AntAvatar>\n          <span className=\"game-info-drawer__inline-separator\">vs</span>\n          <AntAvatar className=\"game-info-drawer__round\" size=\"default\">\n            {teams?.B?.score ?? '?'}\n          </AntAvatar>\n        </li>\n      )}\n\n      {Boolean(pointsToVictory) && (\n        <div>\n          <div className=\"game-info-drawer__label-inline\">\n            Pontos restantes para {isTeamGame ? 'um time' : 'alguém'} ganhar:\n          </div>\n          <AntAvatar className=\"game-info-drawer__round\" size=\"small\">\n            {pointsToVictory}\n          </AntAvatar>\n        </div>\n      )}\n    </ul>\n  );\n}\n\nfunction SectionTeams({ players, teams }) {\n  return (\n    <div className=\"game-info-drawer__team-players\">\n      {Object.values(teams).map((team) => (\n        <SectionTeamPlayers key={team.name} team={team} players={players} />\n      ))}\n    </div>\n  );\n}\n\nfunction SectionTeamPlayers({ team, players }) {\n  const sortedPlayers = useMemo(\n    () =>\n      team.members\n        .map((memberName) => {\n          return players[memberName];\n        })\n        .sort((a, b) => (a.name > b.name ? 1 : -1)),\n    [players, team]\n  );\n\n  return (\n    <div className=\"game-info-drawer__team\" key={team.name}>\n      <h3>Team {team.name}</h3>\n      <ul>\n        {sortedPlayers.map((player, index) => {\n          return (\n            <div className=\"game-info-drawer__ranked-player\" key={`ranked-${player.name}`}>\n              <Avatar id={player.avatarId} shape=\"square\" className=\"game-info-drawer__avatar-with-badge\" />\n              {player.name}, {AVATAR_DESCRIPTIONS_BR[player.avatarId]}\n            </div>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nfunction SectionRankedPlayers({ players }) {\n  const rankedPlayers = useMemo(() => Object.values(players).sort((a, b) => (a.score < b.score ? 1 : -1)), [\n    players,\n  ]);\n  return (\n    <ul>\n      {rankedPlayers.map((player, index) => {\n        return (\n          <div className=\"game-info-drawer__ranked-player\" key={`ranked-${player.name}`}>\n            {index + 1}.{' '}\n            <Badge count={player.score} className=\"game-info-drawer__avatar-with-badge\">\n              <Avatar id={player.avatarId} shape=\"square\" />\n            </Badge>\n            {player.name}, {AVATAR_DESCRIPTIONS_BR[player.avatarId]}\n          </div>\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction GameInfoDrawer({ players, state, info, me }) {\n  const [visible, setVisible] = useState(false);\n\n  if (state.phase === 'LOBBY') {\n    return <></>;\n  }\n\n  const showDrawer = () => {\n    setVisible(true);\n  };\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  const completeMe = players?.[me] ?? {};\n  const isTeamGame = Boolean(completeMe?.team) && Boolean(state.teams);\n\n  return (\n    <Fragment>\n      <Affix offsetTop={10} className=\"game-info-drawer__affix-button\">\n        <Button\n          type=\"primary\"\n          shape=\"circle\"\n          size=\"large\"\n          className=\"game-info-drawer__button\"\n          onClick={showDrawer}\n          icon={<InfoCircleOutlined />}\n        />\n      </Affix>\n\n      <Drawer title={info.title} placement=\"right\" closable={false} onClose={onClose} visible={visible}>\n        {completeMe && <SectionMe player={completeMe} isTeamGame={isTeamGame} />}\n\n        <Divider />\n\n        <RulesModal gameInfo={info} />\n\n        <Divider />\n\n        <SectionMeta\n          round={state?.round || '?'}\n          roundsToEndGame={state?.roundsToEndGame}\n          groupScore={state?.groupScore}\n          pointsToVictory={state?.pointsToVictory}\n          isTeamGame={isTeamGame}\n          teams={state?.teams}\n        />\n\n        <Divider />\n\n        {isTeamGame ? (\n          <SectionTeams players={players} teams={state?.teams} />\n        ) : (\n          <SectionRankedPlayers players={players} />\n        )}\n      </Drawer>\n    </Fragment>\n  );\n}\n\nexport default GameInfoDrawer;\n","import React, { Fragment, useEffect, useState } from 'react';\n// Hooks\nimport { useGameState, useGlobalState } from '../../../hooks';\nimport { GAME_COLLECTION, PHASES } from '../../../utils/constants';\n// Hooks\nimport { useGamePlayers } from '../../../hooks/useGamePlayers';\n// Utils\nimport gameList from '../../../resources/games.json';\n// Components\nimport Lobby from '../../lobby/Lobby';\nimport Rules from '../../rules/Rules';\nimport PageError from '../../errors/PageError';\nimport DrawPhase from './DrawPhase';\nimport EvaluationPhase from './EvaluationPhase';\nimport GalleryPhase from './GalleryPhase';\nimport GameOverPhase from './GameOverPhase';\nimport GameInfoDrawer from '../../shared/GameInfoDrawer';\n\nfunction getActiveComponent(phase) {\n  switch (phase) {\n    case PHASES.ARTE_RUIM.LOBBY:\n      return Lobby;\n    case PHASES.ARTE_RUIM.RULES:\n      return Rules;\n    case PHASES.ARTE_RUIM.DRAW:\n      return DrawPhase;\n    case PHASES.ARTE_RUIM.EVALUATION:\n      return EvaluationPhase;\n    case PHASES.ARTE_RUIM.GALLERY:\n      return GalleryPhase;\n    case PHASES.ARTE_RUIM.GAME_OVER:\n      return GameOverPhase;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionArteRuim({ gameId }) {\n  const players = useGamePlayers(gameId, GAME_COLLECTION.ARTE_RUIM);\n  const state = useGameState(gameId, GAME_COLLECTION.ARTE_RUIM);\n  const [me] = useGlobalState('me');\n  const [info, setInfo] = useState({});\n\n  // Update game description as the gameId comes in\n  useEffect(() => {\n    setInfo(gameId?.[0] ? gameList[gameId[0]] : {});\n  }, [gameId]);\n\n  if (process.env.NODE_ENV === 'development') {\n    console.table(players);\n    console.log({ state });\n  }\n\n  if (!me) {\n    return <Lobby players={players} state={state} info={info} />;\n  }\n\n  const ActiveComponent = getActiveComponent(state.phase);\n\n  return (\n    <Fragment>\n      <GameInfoDrawer players={players} state={state} info={info} me={me} />\n      <ActiveComponent players={players} state={state} info={info} />\n    </Fragment>\n  );\n}\n\nexport default SessionArteRuim;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { QuestionCircleFilled } from '@ant-design/icons';\n// Components\nimport Card from './Card';\n\nfunction EspiaoEntreNosCard({ location, role, header = 'Local' }) {\n  return (\n    <Card\n      color={location === 'SPY' ? 'red' : 'lime'}\n      header={location === 'SPY' ? 'Local Desconhecido' : header}\n      size=\"large\"\n      footer={`Você é ${role === 'SPY' ? 'o espião' : `um(a) ${role}`} `}\n      className=\"e-card\"\n      footerClassName=\"e-card__footer\"\n    >\n      {location === 'SPY' ? <QuestionCircleFilled /> : location}\n    </Card>\n  );\n}\n\nEspiaoEntreNosCard.propTypes = {\n  location: PropTypes.string.isRequired,\n  header: PropTypes.string,\n  role: PropTypes.string.isRequired,\n};\n\nexport default memo(EspiaoEntreNosCard);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Tooltip } from 'antd';\nimport { ClearOutlined } from '@ant-design/icons';\n// Components\nimport clsx from 'clsx';\nimport { useGlobalState } from '../../../hooks';\n\nfunction List({ header, headerIcon, items, column }) {\n  const [cache, setCache] = useGlobalState('espiaoEntreNosCache');\n\n  // const [crossed, setCrossed] = useState({});\n\n  const onCross = (item) => {\n    setCache((s) => {\n      const newState = { ...s };\n      if (newState[item]) {\n        delete newState[item];\n      } else {\n        newState[item] = true;\n      }\n      return newState;\n    });\n  };\n\n  const onClearCrossed = () => setCache({});\n\n  return (\n    <div className={clsx('e-list', column && 'e-list--column')}>\n      <h3 className=\"e-list__title\">\n        {headerIcon} {header}{' '}\n        <Tooltip title=\"Limpar nomes\">\n          <Button\n            shape=\"circle\"\n            ghost\n            type=\"default\"\n            size=\"small\"\n            icon={<ClearOutlined />}\n            onClick={onClearCrossed}\n          />\n        </Tooltip>\n      </h3>\n      <ul className={clsx('e-list__list', column && 'e-list__list--column')}>\n        {items.map((item) => (\n          <li\n            className={clsx('e-list__item', cache[item] && 'e-list__item--crossed')}\n            key={item}\n            role=\"button\"\n            onClick={() => onCross(item)}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nList.propTypes = {\n  header: PropTypes.string.isRequired,\n  headerIcon: PropTypes.element.isRequired,\n  items: PropTypes.arrayOf(PropTypes.string),\n  column: PropTypes.bool,\n};\n\nList.defaultProps = {\n  column: false,\n};\n\nexport default memo(List);\n","import React, { memo } from 'react';\n\nfunction Notes() {\n  return (\n    <textarea\n      name=\"\"\n      id=\"\"\n      cols=\"30\"\n      rows=\"10\"\n      className=\"e-notes\"\n      placeholder=\"Escreva anotações aqui se quiser, mas cuidado com o teclado fazendo mto barulho\"\n    ></textarea>\n  );\n}\n\nNotes.propTypes = {};\n\nexport default memo(Notes);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { ESPIAO_ENTRE_NOS_API } from '../../../adapters';\n// Components\nimport { AdminOnlyButton } from '../../shared/AdminOnly';\n\nfunction AdminTimerControlButton({ label = 'Continuar', action = 'resume' }) {\n  const onControlStopwatch = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.handleAdminAction,\n    actionName: 'timer-control',\n    successMessage: 'Admin action com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar ação',\n  });\n\n  return <AdminOnlyButton action={() => onControlStopwatch({ action })} label={label} />;\n}\n\nAdminTimerControlButton.propTypes = {\n  label: PropTypes.string,\n  action: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nexport default AdminTimerControlButton;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\n// Hooks\nimport { useAmIReady, useMe, useAmIActive } from '../../../hooks';\n// Resources & Utils\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport RoundAnnouncement from '../../shared/RoundAnnouncement';\nimport Instruction from '../../shared/Instruction';\nimport StepSwitcher from '../../shared/StepSwitcher';\n\nimport Title from '../../shared/Title';\nimport Card from '../../cards/EspiaoEntreNosCard';\nimport { EnvironmentOutlined } from '@ant-design/icons';\nimport List from './List';\nimport Notes from './Notes';\nimport AdminTimerControlButton from './AdminTimerControlButton';\n\nfunction AssignmentPhase({ state, players, info }) {\n  const amIReady = useAmIReady(players, state);\n  const user = useMe(players);\n  const isSpy = useAmIActive(state, 'currentSpy');\n  const [step, setStep] = useState(0);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ESPIAO_ENTRE_NOS.ASSIGNMENT}\n      className=\"e-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!amIReady]}>\n        {/* Step 0 */}\n        <RoundAnnouncement round={state.round} onPressButton={() => setStep(1)} time={5}>\n          <Instruction className=\"e-phase-instruction\">Há um espião entre nós!</Instruction>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <div className=\"e-phase-step\">\n          <Title level={2} className=\"e-phase-title\">\n            Você está no(a)...\n          </Title>\n\n          <Card location={user.location} role={user.role} />\n\n          <AdminTimerControlButton label=\"Começar cronômetro\" action=\"start\" />\n\n          <Instruction className=\"e-phase-instruction\">\n            {isSpy\n              ? 'Você tem 10 minutos para descobrir onde os outros agentes estão! Pronto?'\n              : 'Você tem 10 minutos para descobrir quem é o espião entre nós! Pronto?'}\n          </Instruction>\n\n          <Instruction className=\"e-lists\">\n            <List\n              header=\"Possíveis Locais\"\n              headerIcon={<EnvironmentOutlined />}\n              items={state.possibleLocations}\n            />\n          </Instruction>\n          <Notes />\n        </div>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nAssignmentPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default AssignmentPhase;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Popconfirm, Select, Space } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n// Hooks\nimport { useGlobalState, useLoading } from '../../../hooks';\n\nfunction PlayerSelect({ playersList, onSend }) {\n  const [isLoading] = useLoading();\n  const [me] = useGlobalState('me');\n\n  const [selectedPlayer, setSelectedPlayer] = useState(null);\n\n  const playersWithoutMe = playersList.filter((playerName) => playerName !== me);\n\n  return (\n    <Space>\n      <Select onChange={setSelectedPlayer} className=\"e-select\" placeholder=\"Acuse um jogador\">\n        {playersWithoutMe.map((playerName) => (\n          <Select.Option key={playerName} value={playerName}>\n            {playerName}\n          </Select.Option>\n        ))}\n      </Select>\n      <Popconfirm\n        title={`Você só pode acusar uma vez durante o jogo! Tem certeza que quer acusar ${selectedPlayer}?`}\n        onConfirm={() => onSend({ vote: selectedPlayer })}\n        okText=\"Sim\"\n        cancelText=\"Não\"\n      >\n        <Button\n          type=\"primary\"\n          disabled={!selectedPlayer || isLoading}\n          icon={isLoading ? <LoadingOutlined /> : null}\n        >\n          Acusar{selectedPlayer ? `: ${selectedPlayer}` : ''}\n        </Button>\n      </Popconfirm>\n    </Space>\n  );\n}\n\nPlayerSelect.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default PlayerSelect;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Popconfirm, Select, Space } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLoading } from '../../../hooks';\n\nfunction LocationSelect({ locations, onSend }) {\n  const [isLoading] = useLoading();\n  const [selectedLocation, setSelectedLocation] = useState(null);\n\n  return (\n    <Space className=\"e-select-container e-select-container--locations\">\n      <Select onChange={setSelectedLocation} placeholder=\"Chute um local\">\n        {locations.map((location) => (\n          <Select.Option key={`select-${location}`} value={location}>\n            {location}\n          </Select.Option>\n        ))}\n      </Select>\n      <Popconfirm\n        title={`Você só pode chutar uma vez durante o jogo! Tem certeza que quer chutar ${selectedLocation}?`}\n        onConfirm={() => onSend({ guess: selectedLocation })}\n        okText=\"Sim\"\n        cancelText=\"Não\"\n      >\n        <Button\n          type=\"primary\"\n          disabled={!selectedLocation || isLoading}\n          icon={isLoading ? <LoadingOutlined /> : null}\n        >\n          Chutar{selectedLocation ? `: ${selectedLocation}` : ''}\n        </Button>\n      </Popconfirm>\n    </Space>\n  );\n}\n\nLocationSelect.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default LocationSelect;\n","import React from 'react';\nimport { useTimer } from 'react-timer-hook';\nimport { ESPIAO_ENTRE_NOS_API } from '../../../adapters';\nimport { useAPICall, useGlobalState } from '../../../hooks';\n\nfunction Timer({ timeRemaining }) {\n  const [isAdmin] = useGlobalState('isAdmin');\n\n  const onAdminControl = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.handleAdminAction,\n    actionName: 'admin-control',\n    successMessage: 'Admin action com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar ação',\n  });\n\n  const { minutes, seconds } = useTimer({\n    expiryTimestamp: Date.now() + timeRemaining,\n    autoStart: true,\n    onExpire: isAdmin ? () => onAdminControl({ action: 'final' }) : null,\n  });\n\n  return (\n    <div className=\"e-timer\">\n      {minutes}:{seconds < 10 ? `0${seconds}` : seconds}\n    </div>\n  );\n}\n\nexport default Timer;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { AimOutlined, EnvironmentOutlined } from '@ant-design/icons';\nimport { message } from 'antd';\n// Hooks\nimport { useMe, useAPICall, useAmIActive } from '../../../hooks';\n// Resources & Utils\nimport { ESPIAO_ENTRE_NOS_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport Instruction from '../../shared/Instruction';\nimport Title from '../../shared/Title';\nimport Card from '../../cards/EspiaoEntreNosCard';\nimport List from './List';\nimport Notes from './Notes';\nimport PlayerSelect from './PlayerSelect';\nimport LocationSelect from './LocationSelect';\nimport Timer from './Timer';\nimport AdminTimerControlButton from './AdminTimerControlButton';\n\nfunction InvestigationPhase({ state, players, info }) {\n  const user = useMe(players);\n  const isSpy = useAmIActive(state, 'currentSpy');\n\n  const onMakeAccusation = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.makeAccusation,\n    actionName: 'accuse',\n    successMessage: 'Jogador acusado com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar acusar',\n  });\n\n  const onGuessLocation = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.guessLocation,\n    actionName: 'guess',\n    successMessage: 'Chute enviado com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar chutar o local',\n  });\n\n  useEffect(() => {\n    if (state?.outcome === 'VOTE_FAIL') {\n      message.warning(`A votação não foi unânime`, 4);\n      message.info(state?.votedYes ? `Votaram sim: ${state?.votedYes}` : 'Ninguém votou sim', 6);\n    }\n  }, []); // eslint-disable-line\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ESPIAO_ENTRE_NOS.INVESTIGATION}\n      className=\"e-phase\"\n    >\n      <div className=\"e-phase-step-header\">\n        <div className=\"e-phase-step-header__timer-container\">\n          <Timer timeRemaining={state.timeRemaining} />\n        </div>\n\n        <div className=\"e-phase-step-header__center\">\n          <Title level={2} className=\"e-phase-title\">\n            {isSpy ? 'Onde eles estão?' : 'Quem é o Espião?'}\n          </Title>\n          <Card location={user.location} role={user.role} />\n        </div>\n      </div>\n\n      {isSpy && <LocationSelect locations={state.possibleLocations} onSend={onGuessLocation} />}\n\n      {!user?.usedAccusation ? (\n        <PlayerSelect playersList={Object.keys(players)} onSend={onMakeAccusation} />\n      ) : (\n        <Instruction className=\"e-phase-instruction\">Você já usou sua chance de acusar</Instruction>\n      )}\n\n      <Instruction className=\"e-lists\">\n        <List header=\"Suspeitos\" headerIcon={<AimOutlined />} items={Object.keys(players)} />\n        <List\n          header=\"Possíveis Locais\"\n          headerIcon={<EnvironmentOutlined />}\n          items={state.possibleLocations}\n        />\n      </Instruction>\n\n      <Notes />\n\n      <AdminTimerControlButton label=\"Forçar pausar cronômetro\" action=\"pause\" />\n    </PhaseContainer>\n  );\n}\n\nInvestigationPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default InvestigationPhase;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Space } from 'antd';\nimport { AimOutlined, EnvironmentOutlined } from '@ant-design/icons';\n// Hooks\nimport { useMe, useAPICall, useAmIActive } from '../../../hooks';\n// Resources & Utils\nimport { ESPIAO_ENTRE_NOS_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport Instruction from '../../shared/Instruction';\nimport Title from '../../shared/Title';\nimport Card from '../../cards/EspiaoEntreNosCard';\nimport List from './List';\nimport Notes from './Notes';\nimport AdminTimerControlButton from './AdminTimerControlButton';\nimport ReadyPlayersBar from '../../shared/ReadyPlayersBar';\n\nfunction AssessmentPhase({ state, players, info }) {\n  const user = useMe(players);\n  const amITheTarget = useAmIActive(state, 'target');\n  const amITheAccuser = useAmIActive(state, 'accuser');\n  const [submittedAction, setSubmitAction] = useState(false);\n\n  const onSubmitVoting = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.submitVoting,\n    actionName: 'guess',\n    onBeforeCall: () => setSubmitAction(true),\n    onError: () => setSubmitAction(false),\n    successMessage: 'Voto enviado com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar seu voto',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ESPIAO_ENTRE_NOS.ASSESSMENT}\n      className=\"e-phase\"\n    >\n      <Title level={2} className=\"e-phase-title\">\n        {state.accuser} está acusando {state.target} de ser o espião. Concorda?\n      </Title>\n\n      <div>\n        {amITheAccuser || amITheTarget ? (\n          <Instruction className=\"e-phase-instruction\">\n            Você não participa dessa votacão, afinal,{' '}\n            {amITheTarget ? 'é você quem está no paredão!' : 'você quem acusou!'}\n          </Instruction>\n        ) : (\n          <Space className=\"a\">\n            <Button ghost disabled={submittedAction} onClick={() => onSubmitVoting({ vote: true })}>\n              Também acho!\n            </Button>\n            <Button ghost disabled={submittedAction} onClick={() => onSubmitVoting({ vote: false })}>\n              Não é ele(a)\n            </Button>\n          </Space>\n        )}\n      </div>\n\n      <Card location={user.location} role={user.role} />\n\n      <ReadyPlayersBar players={players} readyLabel=\"Votei\" readyLabelPlural=\"Votamos\" />\n\n      <Instruction className=\"e-lists\">\n        <List header=\"Suspeitos\" headerIcon={<AimOutlined />} items={Object.keys(players)} />\n        <List\n          header=\"Possíveis Locais\"\n          headerIcon={<EnvironmentOutlined />}\n          items={state.possibleLocations}\n        />\n      </Instruction>\n\n      <Notes />\n\n      <AdminTimerControlButton label=\"Forçar continuar cronômetro\" action=\"resume\" />\n    </PhaseContainer>\n  );\n}\n\nAssessmentPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default AssessmentPhase;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { message } from 'antd';\n// Hooks\nimport { useMe, useAPICall, useAmIActive } from '../../../hooks';\n// Resources & Utils\nimport { ESPIAO_ENTRE_NOS_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport Instruction from '../../shared/Instruction';\nimport Title from '../../shared/Title';\nimport AdminOnly, { AdminButton } from '../../shared/AdminOnly';\n\nfunction ResolutionPhase({ state, players, info }) {\n  const user = useMe(players);\n  const isSpy = useAmIActive(state, 'currentSpy');\n\n  const onAdminControl = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.handleAdminAction,\n    actionName: 'admin-control',\n    successMessage: 'Admin action com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar ação',\n  });\n\n  const missionOutcomeText = isSpy === state.spyWin ? 'Missão Cumprida!' : 'Missão Fracassada!';\n\n  useEffect(() => {\n    if (state?.resolutionType === 'SPY_GUESS') {\n      if (state.spyWin) {\n        message.warning(`${state.currentSpy} chutou ${state.guess} e acertou`, 6);\n      } else {\n        message.warning(`${state.currentSpy} chutou ${state.guess} e error feio`, 6);\n      }\n    }\n  }, []); // eslint-disable-line\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ESPIAO_ENTRE_NOS.RESOLUTION}\n      className=\"e-phase e-phase--center\"\n    >\n      {state.resolutionType === 'SPY_FOUND' && (\n        <div className=\"e-phase-step\">\n          {state.spyWin ? (\n            <div className=\"\">\n              <Title level={2} className=\"e-phase-title\">\n                {missionOutcomeText}\n              </Title>\n              <Instruction className=\"e-phase-instruction\">\n                O espião {state.currentSpy} não foi encontrado a tempo! Todos os segredos da agência foram\n                revelados e agora o mundo vai acabar. Parabéns.\n              </Instruction>\n            </div>\n          ) : (\n            <div className=\"\">\n              <Title level={2} className=\"e-phase-title\">\n                {missionOutcomeText}\n              </Title>\n              <Instruction className=\"e-phase-instruction\">\n                O espião {state.currentSpy} foi encontrado a tempo!{' '}\n                {isSpy ? `Não foi dessa vez, ${user.name}.` : 'O mundo está salvo graças a você!'}\n              </Instruction>\n            </div>\n          )}\n        </div>\n      )}\n\n      {state.resolutionType === 'SPY_GUESS' && (\n        <div className=\"e-phase-step\">\n          {state.spyWin ? (\n            <div className=\"\">\n              <Title level={2} className=\"e-phase-title\">\n                {missionOutcomeText}\n              </Title>\n              <Instruction className=\"e-phase-instruction\">\n                O espião {state.currentSpy} conseguiu descobrir que estamos no(a) {state.currentLocation}.\n              </Instruction>\n            </div>\n          ) : (\n            <div className=\"\">\n              <Title level={2} className=\"e-phase-title\">\n                {missionOutcomeText}\n              </Title>\n              <Instruction className=\"e-phase-instruction\">\n                O espião {state.currentSpy} não descobriu a tempo que estamos no(a) {state.currentLocation}!{' '}\n                {isSpy ? `Não foi dessa vez, ${user.name}.` : 'O mundo está salvo graças a você!'}\n              </Instruction>\n            </div>\n          )}\n        </div>\n      )}\n\n      <Instruction className=\"e-phase-instruction\">\n        Desfarces dos infiltrados:\n        {Object.values(players).map((player) => (\n          <li>\n            {player.name} como {player.role}\n          </li>\n        ))}\n      </Instruction>\n\n      <AdminOnly>\n        <AdminButton action={() => onAdminControl({ action: 'round' })} label=\"Iniciar nova rodada\" />\n        <AdminButton action={() => onAdminControl({ action: 'end' })} label=\"Terminar o jogo\" />\n      </AdminOnly>\n    </PhaseContainer>\n  );\n}\n\nResolutionPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default ResolutionPhase;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Select } from 'antd';\nimport { AimOutlined, EnvironmentOutlined } from '@ant-design/icons';\n// Hooks\nimport { useMe, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { ESPIAO_ENTRE_NOS_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport Instruction from '../../shared/Instruction';\nimport Title from '../../shared/Title';\nimport Card from '../../cards/EspiaoEntreNosCard';\nimport List from './List';\nimport Notes from './Notes';\nimport AdminOnly from '../../shared/AdminOnly';\n\nfunction FinalAssessmentPhase({ state, players, info }) {\n  const user = useMe(players);\n  const [accuser, setAccuser] = useState(null);\n  const [target, setTarget] = useState(null);\n\n  const onAdminControl = useAPICall({\n    apiFunction: ESPIAO_ENTRE_NOS_API.handleAdminAction,\n    actionName: 'admin-control',\n    successMessage: 'Admin action com sucesso',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar ação',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ESPIAO_ENTRE_NOS.FINAL_ASSESSMENT}\n      className=\"e-phase\"\n    >\n      <Title level={2} className=\"e-phase-title\">\n        Última Chance!\n      </Title>\n\n      <Instruction className=\"e-phase-instruction\">\n        Já que vocês falharam em encontrar o espião, há uma última possibilidade!\n        <ul>\n          <li>\n            Um jogador de cada vez e começando por {state?.playerOrder[0]}, cada jogador faz uma acusação em\n            voz alta.\n          </li>\n          <li>Os outros jogadores votam também em voz alta (menos o acusado, claro)</li>\n          <li>Se a votação for unânime, o admnistrador vai enviar o voto para o servidor</li>\n          <li>Sem discussão dessa vez, simplesmente acuse alguém! Não temos mais tempo!</li>\n          <li>Siga essa ordem: {state?.playerOrder.join(', ')}</li>\n        </ul>\n      </Instruction>\n\n      <Card location={user.location} role={user.role} />\n\n      <Instruction className=\"e-lists\">\n        <List header=\"Suspeitos\" headerIcon={<AimOutlined />} items={Object.keys(players)} />\n        <List\n          header=\"Possíveis Locais\"\n          headerIcon={<EnvironmentOutlined />}\n          items={state.possibleLocations}\n        />\n      </Instruction>\n\n      <Notes />\n\n      <AdminOnly className=\"e-admin-final-assessment\">\n        <span>Acusador:</span>\n        <Select onChange={setAccuser} className=\"e-select\" placeholder=\"Acusador\">\n          {Object.keys(players).map((playerName) => (\n            <Select.Option key={playerName} value={playerName}>\n              {playerName}\n            </Select.Option>\n          ))}\n        </Select>\n        <span>Acusado:</span>\n        <Select onChange={setTarget} className=\"e-select\" placeholder=\"Acusado\">\n          {Object.keys(players).map((playerName) => (\n            <Select.Option key={playerName} value={playerName}>\n              {playerName}\n            </Select.Option>\n          ))}\n        </Select>\n        <Button\n          type=\"primary\"\n          disabled={!accuser || !target || accuser === target}\n          onClick={() =>\n            onAdminControl({\n              action: {\n                accuser,\n                target,\n              },\n            })\n          }\n        >\n          Enviar decisão final\n        </Button>\n      </AdminOnly>\n    </PhaseContainer>\n  );\n}\n\nFinalAssessmentPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default FinalAssessmentPhase;\n","import React, { Fragment, useEffect, useState } from 'react';\n// Hooks\nimport { useGameState, useGlobalState } from '../../../hooks';\nimport { GAME_COLLECTION, PHASES } from '../../../utils/constants';\n// Hooks\nimport { useGamePlayers } from '../../../hooks/useGamePlayers';\n// Utils\nimport gameList from '../../../resources/games.json';\n// Components\nimport Lobby from '../../lobby/Lobby';\nimport Rules from '../../rules/Rules';\nimport PageError from '../../errors/PageError';\nimport GameOver from '../../shared/GameOver';\nimport GameInfoDrawer from '../../shared/GameInfoDrawer';\nimport AssignmentPhase from './AssignmentPhase';\nimport InvestigationPhase from './InvestigationPhase';\nimport AssessmentPhase from './AssessmentPhase';\nimport ResolutionPhase from './ResolutionPhase';\nimport FinalAssessmentPhase from './FinalAssessmentPhase';\n\nfunction getActiveComponent(phase) {\n  switch (phase) {\n    case PHASES.ESPIAO_ENTRE_NOS.LOBBY:\n      return Lobby;\n    case PHASES.ESPIAO_ENTRE_NOS.RULES:\n      return Rules;\n    case PHASES.ESPIAO_ENTRE_NOS.ASSIGNMENT:\n      return AssignmentPhase;\n    case PHASES.ESPIAO_ENTRE_NOS.INVESTIGATION:\n      return InvestigationPhase;\n    case PHASES.ESPIAO_ENTRE_NOS.ASSESSMENT:\n      return AssessmentPhase;\n    case PHASES.ESPIAO_ENTRE_NOS.FINAL_ASSESSMENT:\n      return FinalAssessmentPhase;\n    case PHASES.ESPIAO_ENTRE_NOS.RESOLUTION:\n      return ResolutionPhase;\n    case PHASES.ESPIAO_ENTRE_NOS.GAME_OVER:\n      return GameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionEspiaoEntreNos({ gameId }) {\n  const players = useGamePlayers(gameId, GAME_COLLECTION.ESPIAO_ENTRE_NOS);\n  const state = useGameState(gameId, GAME_COLLECTION.ESPIAO_ENTRE_NOS);\n  const [me] = useGlobalState('me');\n  const [info, setInfo] = useState({});\n\n  // Update game description as the gameId comes in\n  useEffect(() => {\n    setInfo(gameId?.[0] ? gameList[gameId[0]] : {});\n  }, [gameId]);\n\n  if (process.env.NODE_ENV === 'development') {\n    console.table(players);\n    console.log({ state });\n  }\n\n  if (!me) {\n    return <Lobby players={players} state={state} info={info} />;\n  }\n\n  const ActiveComponent = getActiveComponent(state.phase);\n\n  return (\n    <Fragment>\n      <GameInfoDrawer players={players} state={state} info={info} me={me} />\n      <ActiveComponent players={players} state={state} info={info} />\n    </Fragment>\n  );\n}\n\nexport default SessionEspiaoEntreNos;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { ArrowLeftOutlined, ArrowRightOutlined, MinusOutlined } from '@ant-design/icons';\nimport { LETTERS } from '../../../utils/constants';\nimport clsx from 'clsx';\n\nconst getColorModifier = (letter) => {\n  const index = LETTERS.indexOf(letter);\n  return Math.abs(index) % 4;\n};\n\nfunction Card({ left, right, className }) {\n  const leftColor = getColorModifier(left[0]);\n  const rightColor = getColorModifier(right[0]);\n  const cardSideClass = 'o-card__side';\n\n  return (\n    <div className={clsx('o-card', className)}>\n      <div className={clsx(cardSideClass, `${cardSideClass}--left`, `${cardSideClass}--L${leftColor}`)}>\n        <span className=\"o-card__arrow\">\n          <ArrowLeftOutlined /> <MinusOutlined /> <MinusOutlined />\n        </span>\n        <span className=\"o-card__text\">{left}</span>\n      </div>\n      <div className={clsx(cardSideClass, `${cardSideClass}--right`, `${cardSideClass}--R${rightColor}`)}>\n        <span className=\"o-card__arrow\">\n          <MinusOutlined /> <MinusOutlined /> <ArrowRightOutlined />\n        </span>\n        <span className=\"o-card__text\">{right}</span>\n      </div>\n    </div>\n  );\n}\n\nCard.propTypes = {\n  left: PropTypes.string.isRequired,\n  right: PropTypes.string.isRequired,\n  className: PropTypes.string,\n};\n\nCard.defaultProps = {\n  cardName: '',\n};\n\nexport default memo(Card);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Components\nimport Title from '../../shared/Title';\nimport Instruction from '../../shared/Instruction';\nimport Card from './Card';\n\nfunction CardSelection({ onSendChosenSide, cards }) {\n  return (\n    <div className=\"o-card-selection\">\n      <Title>Selecione a carta que será usada nessa rodada!</Title>\n      <Instruction contained>Escolha uma carta que você acredita que conseguirá criar uma dica.</Instruction>\n      <div className=\"o-card-selection__container\">\n        {cards.map((card) => (\n          <button\n            key={`card-button-${card.id}`}\n            className=\"o-card-selection__button\"\n            onClick={() => onSendChosenSide({ cardId: card.id })}\n          >\n            <Card left={card.left} right={card.right} />\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nCardSelection.propTypes = {\n  onSendChosenSide: PropTypes.func.isRequired,\n  cards: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      left: PropTypes.string,\n      right: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default CardSelection;\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useAmIReady, useActivePlayer, useAmIActive, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { ONDA_TELEPATICA } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport WaitingRoom from '../../shared/WaitingRoom';\nimport StepSwitcher from '../../shared/StepSwitcher';\nimport CardSelection from './CardSelection';\nimport RoundAnnouncement from '../../shared/RoundAnnouncement';\nimport Instruction from '../../shared/Instruction';\nimport AvatarName from '../../avatars/AvatarName';\n\nfunction DialSidesPhase({ state, players, info }) {\n  const amIReady = useAmIReady(players, state);\n  const [step, setStep] = useState(0);\n  const psychic = useActivePlayer(state, players, 'psychic');\n  const amIThePsychic = useAmIActive(state, 'psychic');\n\n  const onSendChosenSide = useAPICall({\n    apiFunction: ONDA_TELEPATICA.submitSides,\n    actionName: 'submit-side',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: 'Carta selecionada com sucesso',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar enviar a carta',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ONDA_TELEPATICA.DIAL_SIDES}\n      className=\"o-dial-sides-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!amIReady]}>\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state.round}\n          onPressButton={() => setStep(1)}\n          players={players}\n          teams={state.teams}\n          time={10}\n        >\n          <Instruction contained>\n            É a vez do\n            <span className=\"u-word-selection-phase__guesser-name-announcement\">TIME {state.activeTeam}</span>\n            <br />\n            {amIThePsychic ? (\n              <span className=\"u-word-selection-phase__guesser-name-announcement\">VOCÊ</span>\n            ) : (\n              <AvatarName player={psychic} uppercase size=\"large\" />\n            )}\n            será o(a) medium\n          </Instruction>\n          <div className=\"u-word-selection-phase__team-points\"></div>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <Fragment>\n          {!amIThePsychic ? (\n            <WaitingRoom\n              players={players}\n              title={`${psychic.name} está escolhendo uma carta...`}\n              instruction=\"Aguarde enquanto ele(a) decide a carta que será usada nessa rodada.\"\n            />\n          ) : (\n            <CardSelection onSendChosenSide={onSendChosenSide} cards={state.cards} />\n          )}\n        </Fragment>\n\n        {/* Step 2 */}\n        <WaitingRoom\n          players={players}\n          title=\"Pronto!\"\n          instruction=\"Vamos aguardar o jogo iniciar a próxima fase.\"\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nDialSidesPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default DialSidesPhase;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Card from './Card';\n\nconst getBracketClass = (number, showNeedle, needle, showTarget, target) => {\n  const baseBracketClass = 'o-dial-numbers';\n  const modifier = number % 2 === 0 ? 'even' : 'odd';\n  return clsx(\n    baseBracketClass,\n    `${baseBracketClass}--${modifier}`,\n    showNeedle && needle === number && `${baseBracketClass}--active`,\n    showTarget && target === number && `${baseBracketClass}--target`\n  );\n};\n\nfunction Dial({\n  card,\n  needle = 0,\n  showNeedle = false,\n  target = 0,\n  showTarget = false,\n  rivalGuess = 0,\n  rivalTeam = 'rival',\n  animate = false,\n  showPoints,\n}) {\n  const baseClass = 'o-dial';\n  const basePointsClass = 'o-dial-points';\n  const baseRivalClass = 'o-dial-rival';\n  const points = Math.abs(needle - target);\n\n  return (\n    <div className={clsx(`${baseClass}`, animate && `${baseClass}--animated`)}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 670 340\"\n        overflow=\"visible\"\n        className={clsx(`${baseClass}__svg`)}\n      >\n        <defs />\n\n        <path\n          d=\"M669.9 329.9c-1.1-21-6.1-71.9-27.3-127.7C591.2 83.3 472.8 0 335 0h-.2C198.2.1 80.7 81.9 28.7 199.2 5.7 258 1 312.1 0 332c-.1 1.1.1 2.1.5 3 1.1 2.9 3.9 5 7.2 5h654.6c3.3 0 6.1-2.1 7.2-5 .2-.5.3-1.1.4-1.7v-3.4z\"\n          fill=\"#181d44\"\n        />\n\n        {showTarget && (\n          <path\n            id=\"target\"\n            className={clsx(`${baseClass}__target`, animate && `${basePointsClass}--animated-2`)}\n            style={{ transform: `rotate(${target * 8}deg)` }}\n            d=\"M335.2 0l7.1 11.4 13 3.2-8.6 10.3.9 13.4-12.4-5.1-12.5 5.1 1-13.4-8.6-10.3 13-3.2z\"\n          />\n        )}\n\n        <g class=\"o-dial-numbers\">\n          <path\n            id=\"bracket-number-10-r\"\n            className={getBracketClass(10, showNeedle, needle, showTarget, target)}\n            d=\"M341.2 51.9l-3 5.4v-5.1c0-.4.1-.8.4-1.1.3-.3.6-.4 1.1-.4.8 0 1.3.4 1.5 1.2zm-2.5 9c.2.2.6.3 1 .3s.8-.1 1.1-.5c.3-.3.4-.7.4-1.1v-5.1l-3 5.3c.1.6.2.9.5 1.1zm16.8-20.2L335 340 314.5 40.7h41zm-23.8 8.5h-1.5l-3 1.5v1.5h1.5v10.5h3V49.2zm12.5 10.5v-7.5c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v7.5c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.6.9-1.3.9-2.1z\"\n          />\n          <path\n            id=\"bracket-number-9-r\"\n            className={getBracketClass(9, showNeedle, needle, showTarget, target)}\n            d=\"M336 51.1c.3.3.4.7.4 1.1v3c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.8-.1-1.1-.5-.3-.3-.4-.7-.4-1.1v-3c0-.4.1-.8.4-1.1s.6-.5 1.1-.5c.5.1.8.2 1.1.5zm19.5-10.4L335 340 314.5 40.7h41zm-16.1 16.7v-5.2c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v3c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h1.5c.9 0 1.4-.5 1.5-1.5v1.5c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-1.5v1.5h2.2c1.4 0 2.7-.5 3.7-1.5s1.6-2.3 1.6-3.8z\"\n          />\n          <path\n            id=\"bracket-number-8-r\"\n            className={getBracketClass(8, showNeedle, needle, showTarget, target)}\n            d=\"M336.4 58.2v1.5c0 .4-.1.8-.4 1.1s-.7.4-1.1.4c-.4 0-.8-.1-1.1-.4s-.4-.7-.4-1.1v-1.5c0-1 .5-1.5 1.5-1.5s1.5.5 1.5 1.5zm-1.5-7.5c-.4 0-.8.1-1.1.4-.3.3-.4.7-.4 1.1v1.5c0 .4.1.8.4 1.1.3.3.6.4 1.1.4.4 0 .8-.1 1.1-.4.3-.3.4-.6.4-1.1v-1.5c0-.4-.1-.8-.4-1.1-.3-.3-.6-.4-1.1-.4zm20.6-10L335 340 314.5 40.7h41zm-19.1 15.2c1-.1 1.7-.4 2.2-.9.5-.5.7-1.2.7-2.1v-.7c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v.7c0 .9.3 1.6.8 2.1s1.3.8 2.2.9c-1 0-1.7.3-2.2 1-.5.6-.8 1.3-.8 2v.7c0 .7.3 1.3.9 2 .6.7 1.3 1 2.1 1h3c.8 0 1.5-.3 2.1-1 .6-.7.9-1.3.9-2V59c0-.7-.2-1.4-.7-2-.4-.7-1.2-1.1-2.2-1.1z\"\n          />\n          <path\n            id=\"bracket-number-7-r\"\n            className={getBracketClass(7, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm24.2 13l-.8 1.5c-1 2.1-1.5 3.6-1.5 4.5v3h-3v-3c0-1 .5-2.5 1.5-4.5l1.5-3v-1.5h-6v-1.5h9v3l-.7 1.5z\"\n          />\n\n          <path\n            id=\"bracket-number-6-r\"\n            className={getBracketClass(6, showNeedle, needle, showTarget, target)}\n            d=\"M336 55.6c.3.3.4.7.4 1.1v3c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.8-.1-1.1-.5-.3-.3-.4-.7-.4-1.1v-3c0-.4.1-.8.4-1.1.3-.3.6-.4 1.1-.4.5 0 .8.1 1.1.4zm19.5-14.9L335 340 314.5 40.7h41zm-16.1 19v-3c0-.8-.3-1.5-.9-2.1s-1.3-.9-2.1-.9h-1.5c-.4 0-.8.1-1 .4-.3.3-.4.6-.5 1.1v-1.5c0-.8.3-1.5.9-2.1s1.3-.9 2.1-.9h1.5v-1.5h-2.2c-1.4 0-2.7.5-3.7 1.5s-1.6 2.3-1.6 3.7v5.2c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.5.9-1.2.9-2z\"\n          />\n\n          <path\n            id=\"bracket-number-5-r\"\n            className={getBracketClass(5, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm21.9 13c.8 0 1.5.3 2.1.9s.9 1.3.9 2.1v3c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-3c-1.8 0-2.8-1-3-3h1.5c.1 1 .6 1.5 1.5 1.5h1.5c.4 0 .8-.1 1.1-.4s.4-.7.4-1.1v-3c0-.4-.1-.8-.4-1.1-.3-.3-.7-.4-1.1-.4h-4.5v-6h9v1.5h-6v3h3z\"\n          />\n\n          <path\n            id=\"bracket-number-4-r\"\n            className={getBracketClass(4, showNeedle, needle, showTarget, target)}\n            d=\"M330.4 56.7l4.5-5.6v5.6h-4.5zm25.1-16L335 340 314.5 40.7h41zm-16.1 17.5v-1.5h-1.5v-7.5h-3l-6 7.5v1.5h6v4.5h3v-4.5h1.5z\"\n          />\n\n          <path\n            id=\"bracket-number-3-r\"\n            className={getBracketClass(3, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm21.9 13c.9 0 1.6.3 2.1 1s.8 1.3.8 2v3c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-3c-1.8 0-2.8-1-3-3h1.5c.1 1 .6 1.5 1.5 1.5h1.5c.4 0 .8-.1 1.1-.4s.4-.7.4-1.1v-3c0-.2-.1-.6-.4-.9s-.6-.6-1.1-.6h-3v-1.5l4.5-3h-6v-1.5h9v1.5l-4.5 3h1.6z\"\n          />\n\n          <path\n            id=\"bracket-number-2-r\"\n            className={getBracketClass(2, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm24.9 20.5v1.5h-9v-1.5c0-1 1-2.4 2.9-4l.2-.2c1.9-1.7 2.9-3 2.9-4v-.7c0-.4-.1-.8-.4-1.1-.3-.3-.7-.4-1.1-.4h-1.5c-.9 0-1.4.5-1.5 1.5h-1.5c.2-2 1.2-3 3-3h3c.8 0 1.5.3 2.1.9.6.6.9 1.3.9 2.1v.7c0 1-1 2.4-2.9 4l-.2.2c-1.9 1.7-2.9 3-2.9 3.9v.1h6z\"\n          />\n          <path\n            id=\"bracket-number-1-r\"\n            className={getBracketClass(1, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm18.9 22V52.2h-1.5v-1.5l3-1.5h1.5v13.5h-3z\"\n          />\n\n          <path\n            id=\"bracket-number-10-l\"\n            className={getBracketClass(-10, showNeedle, needle, showTarget, target)}\n            d=\"M341.2 51.9l-3 5.4v-5.1c0-.4.1-.8.4-1.1.3-.3.6-.4 1.1-.4.8 0 1.3.4 1.5 1.2zm-2.5 9c.2.2.6.3 1 .3s.8-.1 1.1-.5c.3-.3.4-.7.4-1.1v-5.1l-3 5.3c.1.6.2.9.5 1.1zm16.8-20.2L335 340 314.5 40.7h41zm-23.8 8.5h-1.5l-3 1.5v1.5h1.5v10.5h3V49.2zm12.5 10.5v-7.5c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v7.5c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.6.9-1.3.9-2.1z\"\n          />\n          <path\n            id=\"bracket-number-9-l\"\n            className={getBracketClass(-9, showNeedle, needle, showTarget, target)}\n            d=\"M336 51.1c.3.3.4.7.4 1.1v3c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.8-.1-1.1-.5-.3-.3-.4-.7-.4-1.1v-3c0-.4.1-.8.4-1.1s.6-.5 1.1-.5c.5.1.8.2 1.1.5zm19.5-10.4L335 340 314.5 40.7h41zm-16.1 16.7v-5.2c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v3c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h1.5c.9 0 1.4-.5 1.5-1.5v1.5c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-1.5v1.5h2.2c1.4 0 2.7-.5 3.7-1.5s1.6-2.3 1.6-3.8z\"\n          />\n          <path\n            id=\"bracket-number-8-l\"\n            className={getBracketClass(-8, showNeedle, needle, showTarget, target)}\n            d=\"M336.4 58.2v1.5c0 .4-.1.8-.4 1.1s-.7.4-1.1.4c-.4 0-.8-.1-1.1-.4s-.4-.7-.4-1.1v-1.5c0-1 .5-1.5 1.5-1.5s1.5.5 1.5 1.5zm-1.5-7.5c-.4 0-.8.1-1.1.4-.3.3-.4.7-.4 1.1v1.5c0 .4.1.8.4 1.1.3.3.6.4 1.1.4.4 0 .8-.1 1.1-.4.3-.3.4-.6.4-1.1v-1.5c0-.4-.1-.8-.4-1.1-.3-.3-.6-.4-1.1-.4zm20.6-10L335 340 314.5 40.7h41zm-19.1 15.2c1-.1 1.7-.4 2.2-.9.5-.5.7-1.2.7-2.1v-.7c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v.7c0 .9.3 1.6.8 2.1s1.3.8 2.2.9c-1 0-1.7.3-2.2 1-.5.6-.8 1.3-.8 2v.7c0 .7.3 1.3.9 2 .6.7 1.3 1 2.1 1h3c.8 0 1.5-.3 2.1-1 .6-.7.9-1.3.9-2V59c0-.7-.2-1.4-.7-2-.4-.7-1.2-1.1-2.2-1.1z\"\n          />\n          <path\n            id=\"bracket-number-7-l\"\n            className={getBracketClass(-7, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm24.2 13l-.8 1.5c-1 2.1-1.5 3.6-1.5 4.5v3h-3v-3c0-1 .5-2.5 1.5-4.5l1.5-3v-1.5h-6v-1.5h9v3l-.7 1.5z\"\n          />\n          <path\n            id=\"bracket-number-6-l\"\n            className={getBracketClass(-6, showNeedle, needle, showTarget, target)}\n            d=\"M336 55.6c.3.3.4.7.4 1.1v3c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.8-.1-1.1-.5-.3-.3-.4-.7-.4-1.1v-3c0-.4.1-.8.4-1.1.3-.3.6-.4 1.1-.4.5 0 .8.1 1.1.4zm19.5-14.9L335 340 314.5 40.7h41zm-16.1 19v-3c0-.8-.3-1.5-.9-2.1s-1.3-.9-2.1-.9h-1.5c-.4 0-.8.1-1 .4-.3.3-.4.6-.5 1.1v-1.5c0-.8.3-1.5.9-2.1s1.3-.9 2.1-.9h1.5v-1.5h-2.2c-1.4 0-2.7.5-3.7 1.5s-1.6 2.3-1.6 3.7v5.2c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.5.9-1.2.9-2z\"\n          />\n          <path\n            id=\"bracket-number-5-l\"\n            className={getBracketClass(-5, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm21.9 13c.8 0 1.5.3 2.1.9s.9 1.3.9 2.1v3c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-3c-1.8 0-2.8-1-3-3h1.5c.1 1 .6 1.5 1.5 1.5h1.5c.4 0 .8-.1 1.1-.4s.4-.7.4-1.1v-3c0-.4-.1-.8-.4-1.1-.3-.3-.7-.4-1.1-.4h-4.5v-6h9v1.5h-6v3h3z\"\n          />\n          <path\n            id=\"bracket-number-4-l\"\n            className={getBracketClass(-4, showNeedle, needle, showTarget, target)}\n            d=\"M330.4 56.7l4.5-5.6v5.6h-4.5zm25.1-16L335 340 314.5 40.7h41zm-16.1 17.5v-1.5h-1.5v-7.5h-3l-6 7.5v1.5h6v4.5h3v-4.5h1.5z\"\n          />\n          <path\n            id=\"bracket-number-3-l\"\n            className={getBracketClass(-3, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm21.9 13c.9 0 1.6.3 2.1 1s.8 1.3.8 2v3c0 .8-.3 1.5-.9 2.1s-1.3.9-2.1.9h-3c-1.8 0-2.8-1-3-3h1.5c.1 1 .6 1.5 1.5 1.5h1.5c.4 0 .8-.1 1.1-.4s.4-.7.4-1.1v-3c0-.2-.1-.6-.4-.9s-.6-.6-1.1-.6h-3v-1.5l4.5-3h-6v-1.5h9v1.5l-4.5 3h1.6z\"\n          />\n          <path\n            id=\"bracket-number-2-l\"\n            className={getBracketClass(-2, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm24.9 20.5v1.5h-9v-1.5c0-1 1-2.4 2.9-4l.2-.2c1.9-1.7 2.9-3 2.9-4v-.7c0-.4-.1-.8-.4-1.1-.3-.3-.7-.4-1.1-.4h-1.5c-.9 0-1.4.5-1.5 1.5h-1.5c.2-2 1.2-3 3-3h3c.8 0 1.5.3 2.1.9.6.6.9 1.3.9 2.1v.7c0 1-1 2.4-2.9 4l-.2.2c-1.9 1.7-2.9 3-2.9 3.9v.1h6z\"\n          />\n          <path\n            id=\"bracket-number-1-l\"\n            className={getBracketClass(-1, showNeedle, needle, showTarget, target)}\n            d=\"M314.5 40.7L335 340l20.5-299.3h-41zm18.9 22V52.2h-1.5v-1.5l3-1.5h1.5v13.5h-3z\"\n          />\n\n          <path\n            id=\"bracket-number-0\"\n            className={getBracketClass(0, showNeedle, needle, showTarget, target)}\n            d=\"M333.5 59.9l3-5.3v5.1c0 .4-.1.8-.4 1.1-.3.3-.7.5-1.1.5-.4 0-.7-.1-1-.3-.3-.3-.5-.6-.5-1.1zm1.4-9.2c-.4 0-.8.1-1.1.4-.3.3-.4.7-.4 1.1v5.1l3-5.4c-.2-.8-.7-1.2-1.5-1.2zm20.6-10L335 340 314.5 40.7h41zm-16.1 19v-7.5c0-.8-.3-1.5-.9-2.1-.6-.6-1.3-.9-2.1-.9h-3c-.8 0-1.5.3-2.1.9-.6.6-.9 1.3-.9 2.1v7.5c0 .8.3 1.5.9 2.1.6.6 1.3.9 2.1.9h3c.8 0 1.5-.3 2.1-.9.6-.6.9-1.3.9-2.1z\"\n          />\n        </g>\n\n        {showNeedle && (\n          <path\n            id=\"needle\"\n            className={clsx(`${baseClass}__needle`, animate && `${basePointsClass}--animated-1`)}\n            style={{ transform: `rotate(${needle * 8}deg)` }}\n            d=\"M335 340c-.9 0-3.7-.8-3.7-1.8l2-260.6c0-1 .8-1.8 1.7-1.8.9 0 1.7.8 1.7 1.8l2 260.6c0 1-2.8 1.8-3.7 1.8z\"\n          />\n        )}\n\n        {showPoints && (\n          <g className={clsx(`${baseClass}__points`)}>\n            {points === 0 && (\n              <g>\n                <path\n                  fill=\"#29abe2\"\n                  d=\"M335.2 102.7l14 22.5 25.8 6.4-17.1 20.3 1.9 26.5-24.6-10-24.6 10 1.9-26.5-17.1-20.3 25.7-6.4z\"\n                />\n                <path\n                  d=\"M334.9 158.7v-10.1h-13.5v-3.4l13.5-16.9h6.8v16.9h3.4v3.4h-3.4v10.1h-6.8zm0-13.4v-12.7l-10.1 12.7h10.1z\"\n                  fill=\"#fff\"\n                />\n              </g>\n            )}\n\n            {points === 1 && (\n              <g>\n                <path\n                  fill=\"#a45467\"\n                  d=\"M335.2 102.7l14 22.5 25.8 6.4-17.1 20.3 1.9 26.5-24.6-10-24.6 10 1.9-26.5-17.1-20.3 25.7-6.4z\"\n                />\n                <path\n                  d=\"M324.8 130.4H345v3.4l-10.1 6.8h3.4c1.9 0 3.6.7 4.8 2.2 1.3 1.5 1.9 3 1.9 4.5v6.7c0 1.9-.7 3.5-2 4.8-1.3 1.3-2.9 2-4.7 2h-6.8c-4 0-6.2-2.3-6.8-6.8h3.4c.2 2.3 1.3 3.4 3.4 3.4h3.4c.9 0 1.7-.3 2.4-1s1-1.5 1-2.4v-6.7c0-.5-.3-1.2-.9-2.1-.6-.9-1.4-1.3-2.6-1.3h-6.7v-3.4l10.1-6.8h-13.5v-3.3z\"\n                  fill=\"#fff\"\n                />\n              </g>\n            )}\n\n            {points === 2 && (\n              <g className={clsx(`${baseClass}__points`)}>\n                <path\n                  fill=\"#a45467\"\n                  d=\"M335.2 102.7l14 22.5 25.8 6.4-17.1 20.3 1.9 26.5-24.6-10-24.6 10 1.9-26.5-17.1-20.3 25.7-6.4z\"\n                />\n                <path\n                  d=\"M328.2 136.1h-3.4c.5-4.5 2.8-6.8 6.8-6.8h6.8c1.8 0 3.4.7 4.7 2 1.3 1.3 2 2.9 2 4.8v1.7c0 2.3-2.2 5.4-6.5 9.1l-.4.4c-4.3 3.7-6.5 6.7-6.5 8.8v.3H345v3.4h-20.3v-3.4c0-2.4 2.2-5.4 6.6-9.1l.4-.4c4.3-3.7 6.5-6.8 6.5-9.1v-1.7c0-.9-.3-1.7-1-2.4s-1.5-1-2.4-1h-3.4c-1.9 0-3.1 1.2-3.2 3.4z\"\n                  fill=\"#fff\"\n                />\n              </g>\n            )}\n          </g>\n        )}\n\n        {rivalGuess === -1 && (\n          <g className={clsx(`${baseRivalClass} ${baseRivalClass}---1`)}>\n            <path\n              fill=\"#FFFFFF\"\n              d=\"M64.6 14.1c-23.9 0-43.3 14.4-43.3 32.1 0 8.8 4.8 16.8 12.6 22.6-5.3 4.6-12.3 7-19.4 6.6 1.8 1.5 3.7 2.7 5.9 3.7 9 4 19.1 2.2 26.2-3.6 5.5 1.9 11.6 2.9 18 2.9 23.9 0 43.3-14.4 43.3-32.1S88.5 14.1 64.6 14.1z\"\n            />\n            <path\n              fill=\"#f7931e\"\n              d=\"M45.4 49.1c-2.3-1.3-2.3-4.6 0-5.9l13.1-7.6L71.6 28c2.3-1.3 5.1.3 5.1 2.9v30.2c0 2.6-2.8 4.2-5.1 2.9l-13.1-7.6-13.1-7.3z\"\n            />\n            <text x=\"10\" y=\"11\" fill=\"#FFFFFF\" style={{ textAnchor: 'start' }}>\n              O time {rivalTeam} disse que tá mais pra cá!\n            </text>\n          </g>\n        )}\n\n        {rivalGuess === 1 && (\n          <g className={clsx(`${baseRivalClass} ${baseRivalClass}---1`)}>\n            <text x=\"660\" y=\"11\" fill=\"#FFFFFF\" style={{ textAnchor: 'end' }}>\n              O time {rivalTeam} disse que tá mais pra cá!\n            </text>\n            <path\n              fill=\"#FFFFFF\"\n              d=\"M605.4 14.1c23.9 0 43.3 14.4 43.3 32.1 0 8.8-4.8 16.8-12.6 22.6 5.3 4.6 12.3 7 19.4 6.6-1.8 1.5-3.7 2.7-5.9 3.7-9 4-19.1 2.2-26.2-3.6-5.5 1.9-11.6 2.9-18 2.9-23.9 0-43.3-14.4-43.3-32.1s19.4-32.2 43.3-32.2z\"\n            />\n            <path\n              fill=\"#f7931e\"\n              d=\"M624.6 49.1c2.3-1.3 2.3-4.6 0-5.9l-13.1-7.6-13.1-7.6c-2.3-1.3-5.1.3-5.1 2.9v30.2c0 2.6 2.8 4.2 5.1 2.9l13.1-7.6 13.1-7.3z\"\n            />\n          </g>\n        )}\n      </svg>\n      <Card left={card.left} right={card.right} className=\"o-dial__card\" />\n    </div>\n  );\n}\n\nDial.propTypes = {\n  card: PropTypes.shape({\n    id: PropTypes.string,\n    left: PropTypes.string,\n    right: PropTypes.string,\n  }).isRequired,\n  needle: PropTypes.number,\n  showNeedle: PropTypes.bool,\n  target: PropTypes.number,\n  showTarget: PropTypes.bool,\n  showPoints: PropTypes.bool,\n  rivalGuess: PropTypes.number,\n  rivalTeam: PropTypes.string,\n  animate: PropTypes.bool,\n};\n\nDial.defaultProps = {\n  needle: 0,\n  showNeedle: false,\n  target: 0,\n  showTarget: false,\n  showPoints: false,\n  rivalGuess: 0,\n  rivalTeam: 'rival',\n  animate: false,\n};\n\nexport default memo(Dial);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Input, Space } from 'antd';\n// Components\nimport Title from '../../shared/Title';\nimport Instruction from '../../shared/Instruction';\nimport Dial from './Dial';\n\nconst getHint = (card) => {\n  if (card.target === 0) {\n    return 'número 0, bem no centro,';\n  }\n\n  if (card.target < 0) {\n    return `\"${Math.abs(card.target)}\" do lado \"${card.left}\"`;\n  }\n\n  return `\"${card.target}\" do lado \"${card.right}\"`;\n};\n\nfunction DialClueWriting({ onSendClue, card }) {\n  const [clue, setClue] = useState('');\n\n  return (\n    <div className=\"o-dial-clue-writing\">\n      <Title>Escreva uma dica!</Title>\n      <Instruction contained>\n        Escreva uma dica que ajudará seu time a apontar o número {getHint(card)} do medidor de ondas\n        telepáticas.\n        <br />\n        Regras:\n        <ul>\n          <li>\n            Use uma única idea. Evite usar \"mas\", \"enquanto\", \"quando\", e também superlativos \"super\", \"muito\"\n          </li>\n          <li>Não invente coisas. Exemplo: 'Nicolas Cage cantando uma música dos Beatles' é inválido.</li>\n          <li>Mantenha-se no assunto da carta. Exemplo: 'Amor' não é uma dica válida para 'Sujo'.</li>\n          <li>Não use números para sugerir a posição do espectro.</li>\n          <li>Não use partes, derivados ou sinônimos das palavras da carta.</li>\n        </ul>\n      </Instruction>\n\n      <Dial card={card} showTarget target={card.target} />\n\n      <Space className=\"container container--center container--transparent\">\n        <Input\n          onChange={(e) => setClue(e.target.value.toUpperCase())}\n          placeholder=\"Digite sua dica aqui\"\n          className=\"uppercase-input\"\n        />\n        <Button\n          type=\"primary\"\n          disabled={!Boolean(clue)}\n          onClick={() => {\n            onSendClue({ clue });\n          }}\n        >\n          Enviar dica\n        </Button>\n      </Space>\n    </div>\n  );\n}\n\nDialClueWriting.propTypes = {\n  onSendClue: PropTypes.func.isRequired,\n  card: PropTypes.shape({\n    id: PropTypes.string,\n    left: PropTypes.string,\n    right: PropTypes.string,\n  }).isRequired,\n};\n\nexport default DialClueWriting;\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useAmIReady, useActivePlayer, useAmIActive, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { ONDA_TELEPATICA } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport WaitingRoom from '../../shared/WaitingRoom';\nimport StepSwitcher from '../../shared/StepSwitcher';\nimport Card from './Card';\nimport DialClueWriting from './DialClueWriting';\n\nfunction DialCluePhase({ state, players, info }) {\n  const amIReady = useAmIReady(players, state);\n  const [step, setStep] = useState(0);\n  const psychic = useActivePlayer(state, players, 'psychic');\n  const amIThePsychic = useAmIActive(state, 'psychic');\n\n  const onSendClue = useAPICall({\n    apiFunction: ONDA_TELEPATICA.submitClue,\n    actionName: 'submit-clue',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage: 'Dica submetida com sucesso',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar enviar a dica',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ONDA_TELEPATICA.DIAL_CLUE}\n      className=\"o-dial-clue-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!amIReady]}>\n        {/* Step 0 */}\n        <Fragment>\n          {!amIThePsychic ? (\n            <WaitingRoom\n              players={players}\n              title={`${psychic.name} está pensando em uma dica...`}\n              instruction=\"Aguarde enquanto ele(a) escreve uma dica para:\"\n            >\n              <div className=\"container container--center\">\n                <Card left={state.card.left} right={state.card.right} />\n              </div>\n            </WaitingRoom>\n          ) : (\n            <DialClueWriting card={state.card} onSendClue={onSendClue} />\n          )}\n        </Fragment>\n\n        {/* Step 1 */}\n        <WaitingRoom\n          players={players}\n          title=\"Pronto!\"\n          instruction=\"Vamos aguardar o jogo iniciar a próxima fase.\"\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nDialCluePhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default DialCluePhase;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Slider } from 'antd';\n// Components\nimport Title from '../../shared/Title';\nimport Instruction from '../../shared/Instruction';\nimport Dial from './Dial';\nimport AvatarName from '../../avatars/AvatarName';\n\nfunction DialGuessSelection({\n  activeTeam,\n  teamController,\n  amITheController,\n  isMyTeamActive,\n  onSendGuess,\n  card,\n  amIThePsychic,\n}) {\n  const [needle, setNeedle] = useState(0);\n\n  return (\n    <div className=\"o-dial-guess-selection\">\n      <Title>\n        {amIThePsychic ? (\n          <span>Seu time está pensando...</span>\n        ) : (\n          <span>Hora do time {activeTeam} brilhar!</span>\n        )}\n      </Title>\n      <Instruction contained>\n        Qual número melhor indica <span className=\"o-dial-guess-selection__clue\">{card.clue}</span> na escala\n        de{' '}\n        <strong>\n          {card.left}-{card.right}\n        </strong>\n        ?\n      </Instruction>\n\n      <Dial card={card} showTarget={false} target={card.target} showNeedle={isMyTeamActive} needle={needle} />\n\n      {isMyTeamActive ? (\n        <Instruction contained>\n          {amIThePsychic ? (\n            <span>Pokerface e bico fechada! MAs pode brincar com a barrra aí!</span>\n          ) : (\n            <ul>\n              <li>\n                Discuta com seu time em qual número do medidor de ondas telepáticas você acha que a dica se\n                melhor encaixa.\n              </li>\n              <li>\n                Todos podem controlar o ponteiro usando a barra abaixo, mas somente{' '}\n                {amITheController ? 'VOCÊ ' : <AvatarName player={teamController} />}pode apertar o botão para\n                enviar a resposta final.\n              </li>\n            </ul>\n          )}\n        </Instruction>\n      ) : (\n        <Instruction contained>\n          O outro time agora está tentando adivinhar onde no medidor de ondas telepáticas a dica se encaixa\n          melhor. Na próxima fase, você e seu time terão a change de contra-atacar dizendo se a solução está\n          mais para esquerda ou mais para a direita do que eles escolheram!\n        </Instruction>\n      )}\n\n      {isMyTeamActive && (\n        <div>\n          <Slider defaultValue={0} min={-10} max={10} onChange={setNeedle} />\n          {amITheController && (\n            <div className=\"container container--transparent container--center\">\n              <Button\n                type=\"primary\"\n                onClick={() => {\n                  onSendGuess({ guess: needle });\n                }}\n                disabled={!amITheController}\n              >\n                Enviar resposta: {needle}\n              </Button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nDialGuessSelection.propTypes = {\n  onSendGuess: PropTypes.func.isRequired,\n  card: PropTypes.shape({\n    id: PropTypes.string,\n    left: PropTypes.string,\n    right: PropTypes.string,\n  }).isRequired,\n  activeTeam: PropTypes.oneOf(['A', 'B']),\n  teamController: PropTypes.object,\n  amITheController: PropTypes.bool,\n  isMyTeamActive: PropTypes.bool,\n  amIThePsychic: PropTypes.bool,\n};\n\nexport default DialGuessSelection;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useAmIReady, useActivePlayer, useAmIActive, useAPICall, useIsMyTeamActive } from '../../../hooks';\n// Resources & Utils\nimport { ONDA_TELEPATICA } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport WaitingRoom from '../../shared/WaitingRoom';\nimport StepSwitcher from '../../shared/StepSwitcher';\nimport DialGuessSelection from './DialGuessSelection';\n\nfunction GuessPhase({ state, players, info }) {\n  const amIReady = useAmIReady(players, state);\n  const [step, setStep] = useState(0);\n  const psychic = useActivePlayer(state, players, 'psychic');\n  const controller = useActivePlayer(state, players, 'teamController');\n  const amITheController = useAmIActive(state, 'teamController');\n  const amIThePsychic = useAmIActive(state, 'psychic');\n  const isMyTeamActive = useIsMyTeamActive(state, players);\n\n  const onSendGuess = useAPICall({\n    apiFunction: ONDA_TELEPATICA.submitGuess,\n    actionName: 'submit-guess',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage: 'Chute submetido com sucesso',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar enviar seu chute',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ONDA_TELEPATICA.GUESS}\n      className=\"o-guess-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!amIReady]}>\n        {/* Step 0 */}\n        <DialGuessSelection\n          activeTeam={state.activeTeam}\n          psychic={psychic}\n          teamController={controller}\n          amITheController={amITheController}\n          onSendGuess={onSendGuess}\n          isMyTeamActive={isMyTeamActive}\n          card={state.card}\n          amIThePsychic={amIThePsychic}\n        />\n\n        {/* Step 1 */}\n        <WaitingRoom\n          players={players}\n          title=\"Pronto!\"\n          instruction=\"Vamos aguardar o jogo iniciar a próxima fase.\"\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nGuessPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default GuessPhase;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Space } from 'antd';\n// Components\nimport Title from '../../shared/Title';\nimport Instruction from '../../shared/Instruction';\nimport Dial from './Dial';\nimport AvatarName from '../../avatars/AvatarName';\nimport { BackwardOutlined, ForwardOutlined } from '@ant-design/icons';\n\nfunction DialRivalSelection({\n  activeTeam,\n  rivalController,\n  amITheRivalController,\n  isMyTeamActive,\n  onSendRivalGuess,\n  card,\n}) {\n  return (\n    <div className=\"o-dial-guess-selection\">\n      <Title>Hora do time {activeTeam} contra-atacar!</Title>\n      <Instruction contained>\n        A solução esta mais pra esquerda ou mais pr direita do número {card.needle} para a dica{' '}\n        <span className=\"o-dial-guess-selection__clue\">{card.clue}</span> na escala de{' '}\n        <strong>\n          {card.left}-{card.right}\n        </strong>\n        ?\n      </Instruction>\n\n      <Dial card={card} showTarget={false} target={card.target} showNeedle needle={card.needle} />\n\n      {isMyTeamActive ? (\n        <Instruction contained>\n          Você pode ganhar um ponto se escolher a direção correta.\n          <br />\n          {amITheRivalController ? 'VOCÊ ' : <AvatarName player={rivalController} />}está no comando para\n          apertar os botões! <br />E então, a solução está mais para a esquerda ou mais para a direita do\n          ponteiro vermelho?\n        </Instruction>\n      ) : (\n        <Instruction contained>\n          Agora, o time oposto tem a chance de ganhar 1 ponto ao tentar adivinhar se a solução está mais para\n          a esquerda ou mais para a direita do que o seu time escolheu.\n        </Instruction>\n      )}\n\n      {amITheRivalController && (\n        <div className=\"container container--center container--transparent\">\n          <Space>\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                onSendRivalGuess({ rivalGuess: -1 });\n              }}\n            >\n              <BackwardOutlined /> Mais para a esquerda\n            </Button>\n            <Button\n              type=\"primary\"\n              onClick={() => {\n                onSendRivalGuess({ rivalGuess: 1 });\n              }}\n            >\n              Mais para a direita <ForwardOutlined />\n            </Button>\n          </Space>\n        </div>\n      )}\n    </div>\n  );\n}\n\nDialRivalSelection.propTypes = {\n  onSendRivalGuess: PropTypes.func.isRequired,\n  card: PropTypes.shape({\n    id: PropTypes.string,\n    left: PropTypes.string,\n    right: PropTypes.string,\n  }).isRequired,\n  activeTeam: PropTypes.oneOf(['A', 'B']),\n  rivalController: PropTypes.object,\n  amITheRivalController: PropTypes.bool,\n  isMyTeamActive: PropTypes.bool,\n};\n\nexport default DialRivalSelection;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useAmIReady, useActivePlayer, useAmIActive, useAPICall, useIsMyTeamActive } from '../../../hooks';\n// Resources & Utils\nimport { ONDA_TELEPATICA } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport WaitingRoom from '../../shared/WaitingRoom';\nimport StepSwitcher from '../../shared/StepSwitcher';\nimport DialRivalSelection from './DialRivalSelection';\n\nfunction RivalPhase({ state, players, info }) {\n  const amIReady = useAmIReady(players, state);\n  const [step, setStep] = useState(0);\n  const psychic = useActivePlayer(state, players, 'psychic');\n  const rivalController = useActivePlayer(state, players, 'rivalController');\n  const amITheRivalController = useAmIActive(state, 'rivalController');\n  const isMyTeamActive = useIsMyTeamActive(state, players);\n\n  const onSendRivalGuess = useAPICall({\n    apiFunction: ONDA_TELEPATICA.submitRivalGuess,\n    actionName: 'submit-rival-guess',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage: 'Chute submetido com sucesso',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar enviar seu chute',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ONDA_TELEPATICA.RIVAL_GUESS}\n      className=\"o-guess-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!amIReady]}>\n        {/* Step 0 */}\n        <DialRivalSelection\n          activeTeam={state.activeTeam === 'A' ? 'B' : 'A'}\n          psychic={psychic}\n          rivalController={rivalController}\n          amITheRivalController={amITheRivalController}\n          onSendRivalGuess={onSendRivalGuess}\n          isMyTeamActive={!isMyTeamActive}\n          card={state.card}\n        />\n\n        {/* Step 1 */}\n        <WaitingRoom\n          players={players}\n          title=\"Pronto!\"\n          instruction=\"Vamos aguardar o jogo iniciar a próxima fase.\"\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nRivalPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default RivalPhase;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { ONDA_TELEPATICA } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport Title from '../../shared/Title';\nimport Dial from './Dial';\nimport Instruction from '../../shared/Instruction';\nimport { AdminOnlyButton } from '../../shared/AdminOnly';\nimport { useTimer } from 'react-timer-hook';\nimport { inNSeconds } from '../../../utils';\n\nfunction getResultInstructionLine(pointsBreakdown, team, catchup = false) {\n  const { got, now } = pointsBreakdown;\n\n  if (got === 0) {\n    return `O time ${team} não conseguiu nenhum ponto dessa vez e continua com ${now} pontos.\n      `;\n  }\n\n  if (got === 3) {\n    return `Quase na mosca! O time ${team} ganhou 3 pontos!`;\n  }\n\n  if (got === 4 && catchup) {\n    return `\n        Wow! O time ${team} ganhou ${got} pontos nessa rodada e agora tem ${now} pontos, mas como eles estão indo\n        muito mal vão ter rodada dupla!\n      `;\n  }\n\n  if (got === 4) {\n    return `Na mosca!!! 4 pontos para o time ${team}`;\n  }\n\n  return `\n      O time ${team} ganhou ${got} pontos nessa rodada e agora tá com ${now} pontos.\n    `;\n}\n\nfunction getRivalResultInstructionLine(pointsBreakdown, team) {\n  const { got } = pointsBreakdown;\n\n  if (got === 0) {\n    return `\n        O contra-ataque falhou para o time ${team}.\n      `;\n  }\n\n  return `\n      O time ${team} conseguiu contra atacar e ganhou ${got} ponto!\n    `;\n}\n\nfunction RevealPhase({ state, players, info }) {\n  const onGoToNextRound = useAPICall({\n    apiFunction: ONDA_TELEPATICA.goToNextPhase,\n    actionName: 'next-phase',\n    successMessage: 'Próxima fase ativada com success',\n    errorMessage: 'Vixi, ocorreu um erro ao tentar ir pra próxima fase',\n  });\n\n  const { seconds } = useTimer({\n    expiryTimestamp: inNSeconds(7),\n    autoStart: true,\n  });\n\n  const rivalTeam = state.activeTeam === 'A' ? 'B' : 'A';\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.ONDA_TELEPATICA.REVEAL}\n      className=\"o-guess-phase\"\n    >\n      <Title>E o resultado é...</Title>\n      <Dial\n        card={state.card}\n        showNeedle={seconds < 6}\n        needle={state.card.needle}\n        showTarget={seconds < 4}\n        target={state.card.target}\n        showPoints={seconds < 2}\n        points={state?.pointsBreakdown?.[state?.activeTeam].got}\n        rivalGuess={state.card.rival}\n        rivalTeam={rivalTeam}\n        animate\n      />\n      <Instruction contained>\n        {getResultInstructionLine(\n          state.pointsBreakdown[state.activeTeam],\n          state.activeTeam,\n          state.shouldCatchup\n        )}\n        <br />\n        {getRivalResultInstructionLine(state.pointsBreakdown[rivalTeam], rivalTeam)}\n      </Instruction>\n\n      <AdminOnlyButton action={() => onGoToNextRound({})} label=\"Ir para próxima rodada ou game over\" />\n    </PhaseContainer>\n  );\n}\n\nRevealPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default RevealPhase;\n","import React, { Fragment, useEffect, useState } from 'react';\n// Hooks\nimport { useGameState, useGlobalState } from '../../../hooks';\nimport { GAME_COLLECTION, PHASES } from '../../../utils/constants';\n// Hooks\nimport { useGamePlayers } from '../../../hooks/useGamePlayers';\n// Utils\nimport gameList from '../../../resources/games.json';\n// Components\nimport Lobby from '../../lobby/Lobby';\nimport Rules from '../../rules/Rules';\nimport PageError from '../../errors/PageError';\nimport GameOver from '../../shared/GameOver';\nimport GameInfoDrawer from '../../shared/GameInfoDrawer';\nimport DialSidesPhase from './DialSidesPhase';\nimport DialCluePhase from './DialCluePhase';\nimport GuessPhase from './GuessPhase';\nimport RivalPhase from './RivalPhase';\nimport RevealPhase from './RevealPhase';\n\nfunction getActiveComponent(phase) {\n  switch (phase) {\n    case PHASES.ONDA_TELEPATICA.LOBBY:\n      return Lobby;\n    case PHASES.ONDA_TELEPATICA.RULES:\n      return Rules;\n    case PHASES.ONDA_TELEPATICA.DIAL_SIDES:\n      return DialSidesPhase;\n    case PHASES.ONDA_TELEPATICA.DIAL_CLUE:\n      return DialCluePhase;\n    case PHASES.ONDA_TELEPATICA.GUESS:\n      return GuessPhase;\n    case PHASES.ONDA_TELEPATICA.RIVAL_GUESS:\n      return RivalPhase;\n    case PHASES.ONDA_TELEPATICA.REVEAL:\n      return RevealPhase;\n    case PHASES.ONDA_TELEPATICA.GAME_OVER:\n      return GameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionOndaTelepatica({ gameId }) {\n  const players = useGamePlayers(gameId, GAME_COLLECTION.ONDA_TELEPATICA);\n  const state = useGameState(gameId, GAME_COLLECTION.ONDA_TELEPATICA);\n  const [me] = useGlobalState('me');\n  const [info, setInfo] = useState({});\n\n  // Update game description as the gameId comes in\n  useEffect(() => {\n    setInfo(gameId?.[0] ? gameList[gameId[0]] : {});\n  }, [gameId]);\n\n  if (process.env.NODE_ENV === 'development') {\n    console.table(players);\n    console.log({ state });\n  }\n\n  if (!me) {\n    return <Lobby players={players} state={state} info={info} />;\n  }\n\n  const ActiveComponent = getActiveComponent(state.phase);\n\n  return (\n    <Fragment>\n      <GameInfoDrawer players={players} state={state} info={info} me={me} />\n      <ActiveComponent players={players} state={state} info={info} />\n    </Fragment>\n  );\n}\n\nexport default SessionOndaTelepatica;\n","import React, { useState } from 'react';\n// Design Resources\nimport { CheckCircleFilled, CloudUploadOutlined } from '@ant-design/icons';\n// Components\nimport Title from '../../shared/Title';\nimport Instruction from '../../shared/Instruction';\nimport TimedButton from '../../shared/TimedButton';\n\nfunction WordSelectionStep({ words = [], onSendSelectedWords, guesser }) {\n  const [selectedWords, setSelectedWords] = useState({});\n\n  const selectedWordsArray = Object.keys(selectedWords);\n  const noSelection = selectedWordsArray.length === 0;\n\n  const autoSelectRandomWord = () => {\n    const randomSelection = words[0].id;\n    onSendSelectedWords({ votes: [randomSelection] });\n  };\n\n  const onSelectWord = (wordId) => {\n    setSelectedWords((s) => {\n      const newState = { ...s };\n      if (newState[wordId]) {\n        delete newState[wordId];\n      } else {\n        newState[wordId] = true;\n      }\n      return newState;\n    });\n  };\n\n  return (\n    <div className=\"u-word-selection-step\">\n      <Title white>Selecione a Palavra-Secreta para {guesser.name}</Title>\n\n      <Instruction white>\n        A palavra secreta com mais votos será escolhida para essa rodada. Você pode selecionar quantas quiser!\n      </Instruction>\n\n      <ul className=\"u-word-card\">\n        {words.map((word) => {\n          return (\n            <li className=\"u-word-card__word\" key={word.id}>\n              <button className=\"u-word-card__button\" onClick={() => onSelectWord(word.id)}>\n                <span className=\"u-word-card__text\">{word.text}</span>\n                <span className=\"u-word-card__icon\">{selectedWords[word.id] && <CheckCircleFilled />}</span>\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n\n      <TimedButton\n        label=\"Enviar votos\"\n        icon={<CloudUploadOutlined />}\n        type=\"primary\"\n        onClick={() => onSendSelectedWords({ votes: selectedWordsArray })}\n        disabled={noSelection}\n        onExpire={autoSelectRandomWord}\n        duration={10}\n        showTimer={noSelection}\n      />\n    </div>\n  );\n}\n\nexport default WordSelectionStep;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { message, Progress } from 'antd';\n// Hooks\nimport { useAmIReady, useAmIActive, useActivePlayer, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { UE_SO_ISSO_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport Avatar from '../../avatars/Avatar';\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport RoundAnnouncement from '../../shared/RoundAnnouncement';\nimport Instruction from '../../shared/Instruction';\nimport WaitingRoom from '../../shared/WaitingRoom';\nimport StepSwitcher from '../../shared/StepSwitcher';\nimport WordSelectionStep from './WordSelectionStep';\n\nfunction WordSelectionPhase({ state, players, info }) {\n  const amIReady = useAmIReady(players, state);\n  const guesser = useActivePlayer(state, players, 'guesser');\n  const amITheGuesser = useAmIActive(state, 'guesser');\n  const [step, setStep] = useState(0);\n\n  useEffect(() => {\n    if (step === 0 && state.previousSecretWord?.text) {\n      message.info(`A palavra secreta anterior era: ${state.previousSecretWord.text}`, 5);\n    }\n  }, [step, state?.previousSecretWord.text]);\n\n  const onSendSelectedWords = useAPICall({\n    apiFunction: UE_SO_ISSO_API.submitWordSelectionVotes,\n    actionName: 'submit-votes',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(0),\n    successMessage: 'Acabou o tempo! Aguarde enquanto os outros participantes votam',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar seus votos',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.UE_SO_ISSO.WORD_SELECTION}\n      className=\"u-word-selection-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!amIReady]}>\n        {/* Step 0 */}\n        <RoundAnnouncement round={state.round} onPressButton={() => setStep(1)} time={7}>\n          <Instruction contained>\n            Para essa rodada,\n            <span className=\"u-word-selection-phase__guesser-name-announcement\">\n              {amITheGuesser ? (\n                'VOCÊ'\n              ) : (\n                <>\n                  <Avatar id={guesser.avatarId} /> {guesser.name}\n                </>\n              )}\n            </span>\n            será o(a) adivinhador(a) <br />\n            {state?.nextGuesser ? `Próximo adivinhador(a): ${state.nextGuesser}` : 'Essa é a última rodada'}\n          </Instruction>\n          <div className=\"u-word-selection-phase__team-points\">\n            Pontos do Grupo:\n            <br />\n            <Progress\n              percent={state.groupScore ?? 0}\n              status=\"active\"\n              strokeColor={{\n                '0%': '#ff0000',\n                '70%': '#ff0000',\n                '100%': '#87d068',\n              }}\n            />\n          </div>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <Fragment>\n          {amITheGuesser ? (\n            <WaitingRoom\n              players={players}\n              title=\"Você é o(a) adivinhador(a)\"\n              instruction=\"Aguarde os outros jogadores decidirem a palavra secreta.\"\n            />\n          ) : (\n            <WordSelectionStep\n              words={state?.words}\n              onSendSelectedWords={onSendSelectedWords}\n              guesser={guesser}\n            />\n          )}\n        </Fragment>\n\n        {/* Step 2 */}\n        <WaitingRoom players={players} title=\"Pronto!\" instruction=\"Vamos aguardar os outros joadores.\" />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nWordSelectionPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default WordSelectionPhase;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { WarningOutlined } from '@ant-design/icons';\n// Components\nimport Card from './Card';\n\nfunction UeSoIssoCard({ word, header = 'Palavra Secreta' }) {\n  return (\n    <Card color=\"purple\" header={header} size=\"large\">\n      {word ?? <WarningOutlined />}\n    </Card>\n  );\n}\n\nUeSoIssoCard.propTypes = {\n  word: PropTypes.any.isRequired,\n  title: PropTypes.string,\n};\n\nexport default memo(UeSoIssoCard);\n","import React, { useState } from 'react';\n// Design Resources\nimport { Button, Input, Space } from 'antd';\nimport { CloudUploadOutlined } from '@ant-design/icons';\n// Components\nimport Title from '../../shared/Title';\nimport Instruction from '../../shared/Instruction';\nimport Card from '../../cards/UeSoIssoCard';\n\nfunction SuggestionStep({ onSendSuggestions, secretWord, suggestionsNumber = 1, guesser }) {\n  const [suggestions, setSuggestions] = useState([]);\n\n  const onChangeInput = (e) => {\n    const { id, value } = e.target;\n    if (id && value?.length > 1) {\n      const indexStr = id.split('-')[1];\n      const index = Number(indexStr) - 1;\n      setSuggestions((s) => {\n        const newState = { ...s };\n        newState[index] = value.toUpperCase().trim();\n        return newState;\n      });\n    }\n  };\n\n  const suggestionsValues = Object.values(suggestions);\n\n  return (\n    <div className=\"u-word-suggestion-step\">\n      <Title>Escreva uma dica para {guesser.name}</Title>\n\n      <Instruction contained>\n        A dica tem que ser uma palavra única que ajude o adivinhador... adivinhar.\n        <br />\n        É proibido usar derivados, partes da palavra ou traduções em outras linguas.\n        <br />\n        E não seja tão óbvio, já que dicas similares são eliminadas.\n        <br />\n      </Instruction>\n\n      <Card word={secretWord.text} header=\"Palavra Secreta\" />\n\n      {suggestionsNumber > 1 && (\n        <Instruction contained>\n          Já que esse jogo tem menos jogadores, você tem que escrever {suggestionsNumber} sugestões\n        </Instruction>\n      )}\n\n      <Space className=\"u-word-suggestion-step__inputs\">\n        {Array(suggestionsNumber)\n          .fill(1)\n          .map((entry, index) => {\n            const id = `suggestion-${entry + index}`;\n            return (\n              <Input\n                placeholder=\"Escreva dica\"\n                key={id}\n                id={id}\n                onChange={onChangeInput}\n                className=\"u-word-suggestion-step__input\"\n              />\n            );\n          })}\n      </Space>\n\n      <Space className=\"u-word-suggestion-step__submit\">\n        <Button\n          icon={<CloudUploadOutlined />}\n          type=\"primary\"\n          onClick={() => onSendSuggestions(suggestionsValues)}\n          disabled={suggestionsValues.length < suggestionsNumber}\n        >\n          {suggestionsNumber > 1 ? 'Enviar sugestões' : 'Enviar sugestão'}\n        </Button>\n      </Space>\n    </div>\n  );\n}\n\nexport default SuggestionStep;\n","import React, { Fragment, useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { message, notification } from 'antd';\n// Hooks\nimport { useGlobalState, useLoading, useAmIReady, useActivePlayer, useAmIActive } from '../../../hooks';\n// Resources & Utils\nimport { UE_SO_ISSO_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport WaitingRoom from '../../shared/WaitingRoom';\nimport StepSwitcher from '../../shared/StepSwitcher';\nimport SuggestionStep from './SuggestionStep';\n\nfunction SuggestPhase({ state, players, info }) {\n  const [, setLoader] = useLoading();\n  const amIReady = useAmIReady(players, state);\n  const [gameId] = useGlobalState('gameId');\n  const [gameName] = useGlobalState('gameName');\n  const [me] = useGlobalState('me');\n  const [step, setStep] = useState(0);\n  const guesser = useActivePlayer(state, players, 'guesser');\n  const amITheGuesser = useAmIActive(state, 'guesser');\n\n  const onSendSuggestions = useCallback(\n    async (suggestions) => {\n      try {\n        setLoader('submit-suggestion', true);\n        setStep(1);\n        const response = await UE_SO_ISSO_API.submitSuggestions({\n          gameId,\n          gameName,\n          playerName: me,\n          suggestions,\n        });\n\n        if (response.data) {\n          message.success(\n            'Sugestão enviada com successo! Aguarde enquanto os outros participantes escrevem suas dicas'\n          );\n        }\n      } catch (e) {\n        notification.error({\n          message: 'Vixi, o aplicativo encontrou um erro ao tentar enviar sua(s) dica(s)',\n          description: JSON.stringify(e.message),\n          placement: 'bottomLeft',\n        });\n        console.error(e);\n        setStep(0);\n      } finally {\n        setLoader('submit-suggestion', false);\n      }\n    },\n    [gameId, gameName, me, setLoader]\n  );\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.UE_SO_ISSO.SUGGEST}\n      className=\"word-selection-phase\"\n    >\n      <StepSwitcher step={step} conditions={[!amIReady]}>\n        {/* Step 0 */}\n        <Fragment>\n          {amITheGuesser ? (\n            <WaitingRoom\n              players={players}\n              title=\"Você é o(a) adivinhador(a)\"\n              instruction=\"Aguarde os outros jogadores decidirem a palavra secreta.\"\n            />\n          ) : (\n            <SuggestionStep\n              guesser={guesser}\n              onSendSuggestions={onSendSuggestions}\n              secretWord={state.secretWord}\n              suggestionsNumber={state.suggestionsNumber}\n            />\n          )}\n        </Fragment>\n\n        {/* Step 1 */}\n        <WaitingRoom players={players} title=\"Pronto!\" instruction=\"Vamos aguardar os outros joadores.\" />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nSuggestPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default SuggestPhase;\n","import React, { memo } from 'react';\n// Design Resources\nimport { Avatar as AntAvatar } from 'antd';\nimport { CloseOutlined } from '@ant-design/icons';\n// Components\nimport BasicCard from '../../cards/Card';\nimport clsx from 'clsx';\nimport Avatar from '../../avatars/Avatar';\nimport { getColorFromIndex } from '../../../utils';\nimport { LETTERS } from '../../../utils/constants';\n\nfunction SuggestionCard({ suggestion, invalid, avatarId, index }) {\n  return (\n    <BasicCard\n      size=\"medium\"\n      color={getColorFromIndex(index)}\n      className={clsx(invalid && 'u-suggestion-card__invalid')}\n      header={LETTERS[index]}\n    >\n      {invalid ? (\n        <AntAvatar size=\"small\" className=\"u-suggestion-card__suggestion-avatar\">\n          <CloseOutlined />\n        </AntAvatar>\n      ) : (\n        <Avatar id={avatarId} size=\"small\" className=\"u-suggestion-card__suggestion-avatar\" />\n      )}\n      {suggestion}\n    </BasicCard>\n  );\n}\n\nexport default memo(SuggestionCard);\n","import React, { useState } from 'react';\n// Design Resources\nimport { Button, Space } from 'antd';\nimport { CloudUploadOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\n// State\nimport { useGlobalState, useLoading } from '../../../hooks';\n// Components\nimport Title from '../../shared/Title';\nimport Instruction from '../../shared/Instruction';\nimport { AdminOnlyButton } from '../../shared/AdminOnly';\nimport Card from '../../cards/UeSoIssoCard';\nimport SuggestionCard from './SuggestionCard';\n\nfunction CompareSuggestionsStep({\n  nextGuesser,\n  me,\n  secretWord,\n  suggestions,\n  onValidateSuggestions,\n  players,\n}) {\n  const [isLoading] = useLoading();\n  const [myRecommendation, setMyRecommendation] = useState(suggestions);\n  const [isAdmin] = useGlobalState('isAdmin');\n\n  const onSetValidation = (index, suggestionEntry, notAllowed) => {\n    if (notAllowed) return;\n\n    setMyRecommendation((arr) => {\n      const newArr = [...arr];\n      if (newArr[index]) {\n        newArr[index].invalid = !newArr[index].invalid;\n      } else {\n        newArr[index] = {\n          ...suggestionEntry,\n          invalid: true,\n        };\n      }\n      return newArr;\n    });\n  };\n\n  const suggestionsValues = Object.values(myRecommendation);\n  const amITheNextGuesser = nextGuesser === me;\n\n  return (\n    <div className=\"u-word-compare-suggestions-step\">\n      <Title white>Comparem as sugestões</Title>\n      <Card word={secretWord.text} header=\"Palavra Secreta\" />\n      <Instruction contained>\n        Já eliminamos todas as palavras iguais, agora, elimine palavras inválidas ou similares.\n        <br />\n        Lembre-se que são consideradas dicas iguais palavras derividadas, conjugações: piloto = pilotar =\n        pilotando. Variações como pluralidade, gênero e erros ortográficos também devem ser\n        eliminadas: príncipe = princesa = principes = pryncip.\n        <br />\n        <ExclamationCircleOutlined /> Para não virar bagunça, somente{' '}\n        <strong>\n          <u>{nextGuesser}</u>\n        </strong>{' '}\n        pode clicar nas palavras para eliminá-las ou ativá-las, mas todos podem discutir. <br /> Refiram às\n        palavras por número, o Adivinhador pode estar ouvindo!\n      </Instruction>\n\n      <Space className=\"u-word-compare-suggestions-step__suggestions\">\n        {suggestions.map((suggestionEntry, index) => {\n          if (!amITheNextGuesser && !isAdmin) {\n            return (\n              <div key={`${suggestionEntry.suggestion}-${index}`}>\n                <SuggestionCard\n                  suggestion={suggestionEntry.suggestion}\n                  invalid={suggestionEntry.invalid}\n                  avatarId={players[suggestionEntry.playerName].avatarId}\n                  index={index}\n                />\n              </div>\n            );\n          }\n\n          return (\n            <button\n              key={`${suggestionEntry.suggestion}-${index}`}\n              className=\"u-word-compare-suggestions-step__suggestion-button\"\n              onClick={() => onSetValidation(index, suggestionEntry, suggestionEntry.invalid)}\n            >\n              <SuggestionCard\n                suggestion={suggestionEntry.suggestion}\n                invalid={myRecommendation?.[index]?.invalid ?? suggestionEntry.invalid}\n                avatarId={players[suggestionEntry.playerName].avatarId}\n                index={index}\n              />\n            </button>\n          );\n        })}\n      </Space>\n\n      {amITheNextGuesser && (\n        <Space className=\"u-word-compare-suggestions-step__submit\">\n          <Button\n            icon={<CloudUploadOutlined />}\n            type=\"primary\"\n            onClick={() =>\n              onValidateSuggestions({\n                validSuggestions: suggestionsValues.filter((suggestion) => !suggestion.invalid),\n              })\n            }\n            disabled={isLoading}\n          >\n            Confirmar dicas válidas\n          </Button>\n        </Space>\n      )}\n\n      <AdminOnlyButton\n        action={() =>\n          onValidateSuggestions({\n            validSuggestions: suggestionsValues.filter((suggestion) => !suggestion.invalid),\n          })\n        }\n        label=\"Confirmar dicas válidas como Admin\"\n      />\n    </div>\n  );\n}\n\nexport default CompareSuggestionsStep;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Hooks\nimport { useGlobalState, useAmIActive, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { UE_SO_ISSO_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport WaitingRoom from '../../shared/WaitingRoom';\nimport StepSwitcher from '../../shared/StepSwitcher';\nimport CompareSuggestionsStep from './CompareSuggestionsStep';\n\nfunction ComparePhase({ state, players, info }) {\n  const [me] = useGlobalState('me');\n  const [step, setStep] = useState(0);\n  const amITheGuesser = useAmIActive(state, 'guesser');\n\n  const onValidateSuggestions = useAPICall({\n    apiFunction: UE_SO_ISSO_API.submitValidation,\n    actionName: 'validate-suggestions',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage: 'Validação enviada com sucesso!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar a confirmação das sugestões',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.UE_SO_ISSO.COMPARE}\n      className=\"u-compare-phase\"\n    >\n      <StepSwitcher step={step}>\n        {/* Step 0 */}\n        <div className=\"u-compare-phase__step\">\n          {amITheGuesser ? (\n            <WaitingRoom\n              players={players}\n              title=\"Você é o(a) adivinhador(a)\"\n              instruction=\"Aguarde os outros jogadores selecionarem as dicas válidas.\"\n            />\n          ) : (\n            <CompareSuggestionsStep\n              nextGuesser={state.nextGuesser}\n              secretWord={state.secretWord}\n              suggestions={state.suggestions}\n              me={me}\n              players={players}\n              onValidateSuggestions={onValidateSuggestions}\n            />\n          )}\n        </div>\n\n        {/* Step 1 */}\n        <WaitingRoom players={players} title=\"Enviando a confirmação de sugestões\" instruction=\"Aguarde...\" />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nComparePhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default ComparePhase;\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Input, Space } from 'antd';\n// Hooks\nimport { useLoading, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { UE_SO_ISSO_API } from '../../../adapters';\nimport { MinusOutlined } from '@ant-design/icons';\n\nfunction Guess({ onSubmitGuess }) {\n  const [isLoading] = useLoading();\n  const [guess, setGuess] = useState('');\n\n  const onSendGuess = useAPICall({\n    apiFunction: UE_SO_ISSO_API.sendGuess,\n    actionName: 'guess',\n    successMessage: 'Resultado enviado com sucesso!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar o resultado',\n  });\n\n  return (\n    <Fragment>\n      <Space className=\"u-word-guess-phase__suggestions\">\n        <Input placeholder=\"Digite aqui seu chute\" onChange={(e) => setGuess(e.target.value)} />\n        <Button\n          type=\"primary\"\n          onClick={() => onSendGuess({ guess })}\n          disabled={guess.length < 3 || isLoading}\n        >\n          Enviar\n        </Button>\n      </Space>\n      <Space className=\"u-word-guess-phase__suggestions\">\n        <Button\n          icon={<MinusOutlined />}\n          type=\"default\"\n          onClick={() => onSubmitGuess({ guess: 'PASS' })}\n          disabled={isLoading}\n        >\n          Passar a vez...\n        </Button>\n      </Space>\n    </Fragment>\n  );\n}\n\nGuess.propTypes = {\n  onSubmitGuess: PropTypes.func.isRequired,\n};\n\nexport default Guess;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Design Resources\nimport { Button, Space } from 'antd';\nimport { CheckOutlined, CloseOutlined, QuestionCircleOutlined } from '@ant-design/icons';\n// Hooks\nimport { useGlobalState, useLoading, useActivePlayer, useAmIActive, useAPICall } from '../../../hooks';\n// Resources & Utils\nimport { UE_SO_ISSO_API } from '../../../adapters';\nimport { PHASES } from '../../../utils/constants';\n// Components\nimport PhaseContainer from '../../shared/PhaseContainer';\nimport WaitingRoom from '../../shared/WaitingRoom';\nimport StepSwitcher from '../../shared/StepSwitcher';\nimport Title from '../../shared/Title';\nimport Avatar from '../../avatars/Avatar';\nimport Instruction from '../../shared/Instruction';\nimport UeSoIssoCard from '../../cards/UeSoIssoCard';\nimport SuggestionCard from './SuggestionCard';\nimport clsx from 'clsx';\nimport Guess from './Guess';\n\nfunction GuessPhase({ state, players, info }) {\n  const [isLoading] = useLoading();\n  const [isAdmin] = useGlobalState('isAdmin');\n  const [step, setStep] = useState(0);\n  const guesser = useActivePlayer(state, players, 'guesser');\n  const amITheNextGuesser = useAmIActive(state, 'nextGuesser');\n  const amITheGuesser = useAmIActive(state, 'guesser');\n\n  const onSubmitGuess = useAPICall({\n    apiFunction: UE_SO_ISSO_API.confirmGuess,\n    actionName: 'guess',\n    onBeforeCall: () => setStep(1),\n    onError: () => setStep(0),\n    successMessage: 'Resultado enviado com sucesso!',\n    errorMessage: 'Vixi, o aplicativo encontrou um erro ao tentar enviar o resultado',\n  });\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.UE_SO_ISSO.GUESS}\n      className=\"u-word-guess-phase\"\n    >\n      <StepSwitcher step={step}>\n        {/* Step 0 */}\n        <div className=\"u-word-guess-phase__step\">\n          <Title>\n            {state.guess ? (\n              <span>\n                <Avatar id={guesser.avatarId} /> {guesser.name} disse \"{state.guess}\"\n              </span>\n            ) : (\n              <span>\n                Hora de brilhar <Avatar id={guesser.avatarId} /> {guesser.name}!\n              </span>\n            )}\n          </Title>\n          <Instruction contained>\n            {amITheGuesser ? 'Você' : guesser.name} tem uma única change de adivinhar a palavra secreta!\n          </Instruction>\n          <UeSoIssoCard\n            word={amITheGuesser ? <QuestionCircleOutlined /> : state.secretWord.text}\n            header=\"A Palavra Secreta é\"\n          />\n\n          {state.guess ? (\n            <Instruction contained>\n              {state.nextGuesser} está encarregado(a) de apertar os botões se você acertou ou não. <br />\n              São 3 pontos se você acertar, -1 se errar, mas você pode passar e não tentar, covarde!.. <br />\n              As dicas são:\n            </Instruction>\n          ) : (\n            <Instruction contained>\n              {amITheGuesser ? (\n                <span>Escreva seu chute no campo abaixo</span>\n              ) : (\n                <span>{guesser.name} está pensando...</span>\n              )}\n            </Instruction>\n          )}\n\n          <Space className=\"u-word-guess-phase__suggestions\">\n            {state.validSuggestions.map((suggestionEntry, index) => {\n              return (\n                <div key={`${suggestionEntry.suggestion}-${index}`}>\n                  <SuggestionCard\n                    suggestion={suggestionEntry.suggestion}\n                    invalid={false}\n                    avatarId={players[suggestionEntry.playerName].avatarId}\n                    index={index}\n                  />\n                </div>\n              );\n            })}\n          </Space>\n\n          {amITheGuesser && !state.guess && <Guess onSubmitGuess={onSubmitGuess} />}\n\n          {state.guess && (amITheNextGuesser || isAdmin) && (\n            <Space className={clsx('u-word-guess-phase__guess-submit', isAdmin && 'admin-container')}>\n              <Button\n                icon={<CheckOutlined />}\n                type=\"primary\"\n                style={{ backgroundColor: 'green' }}\n                onClick={() => onSubmitGuess({ guess: 'CORRECT' })}\n                disabled={isLoading}\n              >\n                Acertou\n              </Button>\n              <Button\n                icon={<CloseOutlined />}\n                type=\"primary\"\n                danger\n                onClick={() => onSubmitGuess({ guess: 'WRONG' })}\n                disabled={isLoading}\n              >\n                Errou\n              </Button>\n            </Space>\n          )}\n        </div>\n\n        {/* Step 1 */}\n        <WaitingRoom players={players} title=\"Enviando a confirmação de sugestões\" instruction=\"Aguarde...\" />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nGuessPhase.propTypes = {\n  info: PropTypes.object,\n  players: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default GuessPhase;\n","import React, { Fragment, useEffect, useState } from 'react';\n// Hooks\nimport { useGameState, useGlobalState } from '../../../hooks';\nimport { GAME_COLLECTION, PHASES } from '../../../utils/constants';\n// Hooks\nimport { useGamePlayers } from '../../../hooks/useGamePlayers';\n// Utils\nimport gameList from '../../../resources/games.json';\n// Components\nimport Lobby from '../../lobby/Lobby';\nimport Rules from '../../rules/Rules';\nimport PageError from '../../errors/PageError';\nimport WordSelectionPhase from './WordSelectionPhase';\nimport SuggestPhase from './SuggestPhase';\nimport ComparePhase from './ComparePhase';\nimport GuessPhase from './GuessPhase';\nimport GameOver from '../../shared/GameOver';\nimport GameInfoDrawer from '../../shared/GameInfoDrawer';\n\nfunction getActiveComponent(phase) {\n  switch (phase) {\n    case PHASES.UE_SO_ISSO.LOBBY:\n      return Lobby;\n    case PHASES.UE_SO_ISSO.RULES:\n      return Rules;\n    case PHASES.UE_SO_ISSO.WORD_SELECTION:\n      return WordSelectionPhase;\n    case PHASES.UE_SO_ISSO.SUGGEST:\n      return SuggestPhase;\n    case PHASES.UE_SO_ISSO.COMPARE:\n      return ComparePhase;\n    case PHASES.UE_SO_ISSO.GUESS:\n      return GuessPhase;\n    case PHASES.UE_SO_ISSO.GAME_OVER:\n      return GameOver;\n    default:\n      return PageError;\n  }\n}\n\nfunction SessionUeSoIsso({ gameId }) {\n  const players = useGamePlayers(gameId, GAME_COLLECTION.UE_SO_ISSO);\n  const state = useGameState(gameId, GAME_COLLECTION.UE_SO_ISSO);\n  const [me] = useGlobalState('me');\n  const [info, setInfo] = useState({});\n\n  // Update game description as the gameId comes in\n  useEffect(() => {\n    setInfo(gameId?.[0] ? gameList[gameId[0]] : {});\n  }, [gameId]);\n\n  if (process.env.NODE_ENV === 'development') {\n    console.table(players);\n    console.log({ state });\n  }\n\n  if (!me) {\n    return <Lobby players={players} state={state} info={info} />;\n  }\n\n  const ActiveComponent = getActiveComponent(state.phase);\n\n  return (\n    <Fragment>\n      <GameInfoDrawer players={players} state={state} info={info} me={me} />\n      <ActiveComponent players={players} state={state} info={info} />\n    </Fragment>\n  );\n}\n\nexport default SessionUeSoIsso;\n","import ArteRuim from './arte-ruim/SessionArteRuim';\nimport EspiaoEntreNos from './espiao-entre-nos/SessionEspiaoEntreNos';\nimport OndaTelepatica from './onda-telepatica/SessionOndaTelepatica';\nimport UeSoIsso from './ue-so-isso/SessionUeSoIsso';\n\nconst games = {\n  ArteRuim,\n  EspiaoEntreNos,\n  OndaTelepatica,\n  UeSoIsso,\n};\n\nexport default games;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n// Design Resources\nimport { message, notification } from 'antd';\n// Adapters\nimport { GAME_API } from '../adapters';\n// Hooks\nimport { useIsGameStale, useLoading, useGlobalState } from '../hooks';\n// Utils\nimport { getGameIdFromURL, getGameIdFromLocation, isValidGameId } from '../utils';\nimport { GAME_COLLECTION } from '../utils/constants';\n// Components\nimport LoadingPage from './loaders/LoadingPage';\nimport PageError from './errors/PageError';\nimport GameSessions from './games';\n\nfunction Game() {\n  const history = useHistory();\n  const [, setLoader] = useLoading();\n  const [gameId, setGameId] = useGlobalState('gameId');\n  const [gameName, setGameName] = useGlobalState('gameName');\n  const [gameMeta, setGameMeta] = useGlobalState('gameMeta');\n  const [, setMe] = useGlobalState('me');\n  const [, setMyAvatar] = useGlobalState('myAvatar');\n\n  const [isPageLoading, setPageLoading] = useState(true);\n  const isGameStale = useIsGameStale(gameMeta?.createdAt);\n\n  // Verify url game code\n  useEffect(() => {\n    const urlGameId = getGameIdFromURL(history);\n    if (isValidGameId(urlGameId)) {\n      setGameId(urlGameId);\n    } else {\n      message.error('Vixi, a id do jogo na barra de endereços tá errada');\n      history.push('/');\n    }\n  }, [history, setGameId, setMe, setMyAvatar]);\n\n  // Keeps track of url changes\n  useEffect(() => {\n    return history.listen((location) => {\n      const urlGameId = getGameIdFromLocation(location);\n      if (isValidGameId(urlGameId)) {\n        setGameId(urlGameId);\n        setMe('');\n        setMyAvatar('');\n        message.info('Uma nova id de jogo foi provida');\n      } else {\n        message.error('Vixi, a id do jogo na barra de endereços tá errada');\n        history.push('/');\n      }\n    });\n  }, [history, setGameId, setMe, setMyAvatar]);\n\n  // Load game\n  useEffect(() => {\n    setPageLoading(true);\n    async function loadGameSession() {\n      try {\n        setLoader('load', true);\n        const meta = await GAME_API.loadGame({ gameId });\n        setGameName(meta.data.gameName);\n        setGameMeta(meta.data);\n      } catch (e) {\n        console.error(e);\n        notification.error({\n          message: 'Erro ao carregar o jogo',\n          description: JSON.stringify(e.message),\n        });\n        console.error(e);\n      } finally {\n        setPageLoading(false);\n        setLoader('load', false);\n      }\n    }\n\n    if (gameId) {\n      loadGameSession();\n    }\n  }, [gameId]); // eslint-disable-line\n\n  // Deffer to load screen if any major API call is running\n  if (isPageLoading) {\n    return <LoadingPage />;\n  }\n\n  if (isGameStale) {\n    return (\n      <PageError message=\"Jogo expirado\" description=\"Esse jogo é muito antigo e não pode ser usado mais\" />\n    );\n  }\n\n  if (gameId && gameName) {\n    switch (gameName) {\n      case GAME_COLLECTION.ARTE_RUIM:\n        return <GameSessions.ArteRuim gameId={gameId} />;\n      case GAME_COLLECTION.ESPIAO_ENTRE_NOS:\n        return <GameSessions.EspiaoEntreNos gameId={gameId} />;\n      case GAME_COLLECTION.ONDA_TELEPATICA:\n        return <GameSessions.OndaTelepatica gameId={gameId} />;\n      case GAME_COLLECTION.UE_SO_ISSO:\n        return <GameSessions.UeSoIsso gameId={gameId} />;\n      default:\n        console.warn('Wrong game library provided');\n    }\n  }\n\n  // If switch fails, it's an error\n  return <PageError />;\n}\n\nexport default Game;\n","import { useEffect, useState } from 'react';\n\nexport function useIsGameStale(gameCreatedAt) {\n  const [isGameStale, setGameStale] = useState(false);\n\n  useEffect(() => {\n    setGameStale(Date.now() - 24 * 60 * 60 * 1000 > gameCreatedAt);\n  }, [gameCreatedAt, setGameStale]);\n\n  return isGameStale;\n}\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\n// import { Image, Layout } from 'antd';\nimport gameList from '../resources/games.json';\nimport Avatar from './avatars/Avatar';\nimport AvatarEntry from './avatars/AvatarEntry';\nimport GameOver from './shared/GameOver';\nimport Instruction from './shared/Instruction';\nimport PhaseContainer from './shared/PhaseContainer';\nimport RoundAnnouncement from './shared/RoundAnnouncement';\n// Resources\nimport { CheckCircleFilled, CheckCircleOutlined } from '@ant-design/icons';\nimport { Button, Input } from 'antd';\nimport Title from './shared/Title';\nimport { LETTERS } from '../utils/constants';\nimport Card from './cards/Card';\nimport { getColorFromLetter } from '../utils';\n\nfunction TestingZone() {\n  const info = gameList['U'];\n\n  const players = {\n    Flaviane: {\n      avatarId: 10,\n      name: 'Flaviane',\n      ready: false,\n      score: 0,\n      updatedAt: Date.now(),\n    },\n    Kavis: {\n      avatarId: 11,\n      name: 'Kavis',\n      ready: false,\n      score: 0,\n      updatedAt: Date.now(),\n    },\n    Stephanie: {\n      avatarId: 12,\n      name: 'Stephanie',\n      ready: false,\n      score: 0,\n      updatedAt: Date.now(),\n    },\n  };\n\n  // Mock State\n  const state = {\n    phase: 'WORD_SELECTION',\n    guesser: 'Kavis',\n    playerOrder: ['Flaviane', 'Stephanie', 'Kavis', 'Flaviane', 'Stephanie', 'Kavis'],\n    round: 3,\n    words: [1, 2, 3, 4, 5],\n    // phase: 'GAME_OVER',\n    // winner: {\n    //   name: 'Flaviane',\n    //   avatarId: 15,\n    //   score: 35,\n    // },\n  };\n\n  console.log('==========');\n  console.log({ info });\n  console.table(players);\n  console.log({ state });\n  console.log('==========');\n\n  const guesser = players[state.guesser];\n  console.log(guesser);\n\n  // return <GameOver info={info} state={state} players={players} />;\n  return (\n    <PhaseContainer info={info} phase={state.phase} allowedPhase=\"WORD_SELECTION\" className=\"\" fullScreen>\n      <div className=\"u-word-selection\"></div>\n    </PhaseContainer>\n  );\n}\n\nexport default TestingZone;\n","import React from 'react';\n// Hooks\nimport { useLoading } from '../../hooks';\n\nfunction LoadingBar() {\n  const [isLoading] = useLoading();\n\n  return isLoading ? <div className=\"loading-bar\"></div> : <></>;\n}\n\nexport default LoadingBar;\n","import React, { useState, useEffect } from 'react';\nimport { HashRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\n\n// Design Resources\nimport { Layout, message } from 'antd';\n// Firebase\nimport { auth } from '../services/firebase';\n// State\nimport { useGlobalState } from '../hooks';\n// Pages\nimport Home from './Home';\nimport Admin from './Admin';\nimport Login from './Login';\nimport Game from './Game';\nimport TestingZone from './TestingZone';\nimport LoadingPage from './loaders/LoadingPage';\nimport LoadingBar from './loaders/LoadingBar';\n\nfunction PrivateRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authenticated === true ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        )\n      }\n    />\n  );\n}\n\nfunction PublicRoute({ component: Component, authenticated, ...rest }) {\n  const fromPath = rest?.location?.state?.from?.pathname ?? '/';\n  return (\n    <Route\n      {...rest}\n      render={(props) => (authenticated === false ? <Component {...props} /> : <Redirect to={fromPath} />)}\n    />\n  );\n}\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useGlobalState('isAuthenticated');\n  const [, setIsAdmin] = useGlobalState('isAdmin');\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoading(false);\n        setIsAuthenticated(true);\n        setIsAdmin(true);\n        message.info('Você foi logado de volta automaticamente.');\n      } else {\n        setIsLoading(false);\n        setIsAuthenticated(false);\n        setIsAdmin(false);\n      }\n    });\n  }, []); // eslint-disable-line\n\n  return (\n    <Layout className=\"app\">\n      <LoadingBar />\n      <Router>\n        {isLoading ? (\n          <LoadingPage />\n        ) : (\n          <Switch>\n            <Route exact path=\"/\" component={Home}></Route>\n            <PrivateRoute path=\"/admin\" authenticated={isAuthenticated} component={Admin} />\n            <PublicRoute path=\"/login\" authenticated={isAuthenticated} component={Login} />\n            <PrivateRoute path=\"/testing-zone\" authenticated={isAuthenticated} component={TestingZone} />\n            <Route path=\"*\" component={Game} />\n          </Switch>\n        )}\n      </Router>\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport './styles/index.css';\n\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}