{"version":3,"file":"static/js/8426.675553cd.chunk.js","mappings":"sQAkBO,SAASA,EAAT,GAOe,IANpBC,EAMmB,EANnBA,KACAC,EAKmB,EALnBA,KAKmB,IAJnBC,SAAAA,OAImB,MAJR,EAIQ,EAHnBC,EAGmB,EAHnBA,KAGmB,IAFnBC,cAAAA,OAEmB,MAFH,GAEG,EADhBC,GACgB,YACbC,GAAUC,EAAAA,EAAAA,SAAQP,EAAM,CAAC,SAACQ,GAAD,OAAOA,EAAEC,MAAF,OAASR,QAAT,IAASA,OAAT,EAASA,EAAMQ,GAAtB,EAA0B,QAAS,CAAC,OAAQ,QAE3E,OACE,SAAC,EAAAC,EAAUC,MAAX,CAAiBC,IAAK,CAAEC,MAAOX,GAAYC,KAAMA,EAAjD,SACGG,EAAQQ,KAAI,SAACC,GAAD,OACX,SAAC,IAAD,CAA2CC,MAAK,UAAKZ,GAAL,OAAqBW,EAAOE,MAAQC,QAAQ,QAA5F,UACE,SAAC,KAAD,QAAQT,GAAIM,EAAOI,SAAUC,IAAKL,EAAOE,KAAMd,KAAMA,GAAUE,KADjE,uBAA8BU,EAAON,IAD1B,KAOlB,C,sNCCKY,EAAc,CAAEC,GAAI,eAAgBC,GAAI,WAEvC,SAASC,EAAT,GAA6F,IAArElB,EAAoE,EAApEA,QAASmB,EAA2D,EAA3DA,aAAcC,EAA6C,EAA7CA,UAAWC,EAAkC,EAAlCA,YAC/D,OACE,UAAC,IAAD,CACEX,OAAO,SAAC,KAAD,CAAWM,GAAG,WAAWC,GAAG,iBACnCK,WAAY,CACVD,YAAAA,EACAxB,KAAM,SAER0B,WAAWC,EAAAA,EAAAA,GAAK,gBAAgBC,EAAAA,EAAAA,IAAkB,WANpD,UAQ2B,IAAxBN,EAAaO,SACZ,SAAC,KAAD,CAAaC,WAAS,EAAtB,UACE,SAAC,KAAD,CACEX,IACE,+EAEE,kBAFF,kFAMFC,IACE,+EAEE,kBAFF,kEASR,eAAIM,UAAU,oBAAd,SACGJ,EAAaX,KAAI,SAACoB,EAAaC,GAAW,IAAD,MACxC,YAA6CT,EAAUQ,EAAYE,aAAnE,QAA4E,CAAC,EAA7E,IAAQC,KAAAA,OAAR,MAAe,OAAf,EAA0BC,GAA1B,YACMvB,EAAST,EAAQ4B,EAAYK,UACnC,OACE,UAAC,IAAOC,IAAR,gBAEEX,UAAW,uBACPY,EAAAA,EAAAA,GAAa,UAAW,CAC1BC,SAAU,EACVC,OAAQR,EAAQV,EAAaO,OAAS,EAAIG,EAAQV,EAAaO,OAAS,EAAIG,GAAS,OALzF,eAQE,gBAAKN,UAAU,qBAAf,UACE,SAAC,IAAD,CAAOpB,GAAI4B,OAEb,eAAIR,UAAU,qBAAd,UACE,SAAC,KAAD,oBAAgBS,EAAetB,aAA/B,QAAwCK,OAE1C,gBAAKQ,UAAU,sBAAf,UACE,SAAC,KAAD,CAAQpB,GAAIM,EAAOI,cAErB,gBAAKU,UAAU,oBAAf,SAAoCd,EAAOE,OAC1C2B,QAAQN,EAAeO,eACtB,gBAAKhB,UAAU,2BAAf,UACE,SAAC,IAAD,CACEiB,SACE,6BACE,SAAC,KAAD,oBAAgBR,EAAeO,mBAA/B,QAA8CxB,IADhD,KAEG0B,OAAOb,EAAYc,OAFtB,OAFJ,UAQE,SAAC,KAAD,CAAQX,MAAM,SAAC,IAAD,IAA4BY,MAAM,SAASb,KAAK,OAAOjC,KAAK,iBA5BlF,sBACsB+B,EAAYE,MAiCrC,QAIR,C,0OC5FM,SAASc,EAAT,GAQa,IAPlBlC,EAOiB,EAPjBA,MACAmC,EAMiB,EANjBA,SACAtB,EAKiB,EALjBA,UACAI,EAIiB,EAJjBA,UACAL,EAGiB,EAHjBA,WACAwB,EAEiB,EAFjBA,aACGC,GACc,YACjB,SAA4DzB,QAA5D,IAA4DA,EAAAA,EAAc,CAAC,EAA3E,IAAQ0B,MAAAA,OAAR,MAAgB,EAAhB,MAAmBnD,KAAAA,OAAnB,MAA0B,WAA1B,EAAyCoD,GAAzC,YAEA,SAKIH,QALJ,IAKIA,EAAAA,EAAgB,CAAC,EAJRI,EADb,EACE3B,UADF,IAEE4B,KAAAA,OAFF,aAGEC,UAAWC,OAHb,MAGiC,aAHjC,EAIKC,GAJL,YAOA,OACE,UAAC,KAAD,gBAAOF,UAAU,WAAW7B,WAAWC,EAAAA,EAAAA,GAAK,oBAAqBD,IAAgBwB,GAAjF,eACE,SAAC,MAAD,gBAAOC,MAAOA,EAAOnD,KAAMA,GAAUoD,GAArC,aACGvC,MAGH,SAAC,KAAD,gBACE0C,UAAWC,EACXF,KAAMA,EACN5B,WAAWC,EAAAA,EAAAA,GACT,8BACAG,GAAa,yCACbuB,IAEEI,GARN,aAUGT,QAIR,C,wECtDM,SAASU,EAAT,GAAmF,IAAxDV,EAAuD,EAAvDA,SAAUf,EAA6C,EAA7CA,KAAM0B,EAAuC,EAAvCA,SAAUjC,EAA6B,EAA7BA,UAC1D,OACE,SAAC,IAAD,CAAiBQ,MAAM,SAAC,IAAD,IAAcD,KAAMA,EAAM0B,SAAUA,EAAUjC,UAAWA,EAAhF,SACGsB,GAGN,C,oNCaD,SAASY,EAAT,GAA6E,IAAtDC,EAAqD,EAArDA,YAAaC,EAAwC,EAAxCA,MAAOpB,EAAiC,EAAjCA,YACnCqB,EAAaF,EAAc,EAC3BG,EAAaH,EAAc,EACjC,OACE,eACEnC,WAAWC,EAAAA,EAAAA,GACT,8BACAoC,GAAc,oCACdC,GAAc,qCAHD,uCAImBF,IALpC,UAQE,UAAC,IAAD,CACEjD,MAAK,OAAE6B,QAAF,IAAEA,EAAAA,GAAe,SAAC,KAAD,CAAWvB,GAAG,gBAAgBC,GAAG,kBACvD6C,MAAOF,EAAa,OAASC,EAAa,MAAQ,OAFpD,UAIGD,EAAa,IAAM,GACnBF,MAIR,CAQD,SAASK,EAAT,GAAqG,IAA7EC,EAA4E,EAA5EA,aAAc/B,EAA8D,EAA9DA,SAA8D,IAApDgC,yBAAAA,OAAoD,MAAzB,GAAyB,EAC5FC,EAASC,MAAMC,QAAQJ,GAAgBA,EAAe,CAACA,GAC7D,OACE,eAAIzC,UAAU,oCAAd,SACG2C,EAAO1D,KAAI,SAACkD,EAAa7B,GAAd,OACV,SAAC4B,EAAD,CAEEC,YAAaA,EACbC,MAAO9B,EACPU,YAAa0B,EAAyBpC,IAJxC,uBACuBI,EADvB,YACmCJ,GAFzB,KAUjB,CAUM,SAASwC,EAAT,GAMgB,IALrBrE,EAKoB,EALpBA,QACAsE,EAIoB,EAJpBA,QACAL,EAGoB,EAHpBA,yBAGoB,IAFpBM,iBAAAA,OAEoB,aADpBlC,MAAAA,OACoB,MADZ,EACY,EACpB,GAAsCmC,EAAAA,EAAAA,UAAS,GAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0CF,EAAAA,EAAAA,UAAsB,IAAhE,eAAOG,EAAP,KAAsBC,EAAtB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,GAArC,eAAOK,EAAP,KAAeC,EAAf,KACA,GAA0BC,EAAAA,EAAAA,KAA1B,eAAOC,EAAP,KAAcC,EAAd,KAAcA,OAERC,GAAYC,EAAAA,EAAAA,UAAQ,kBAAMC,KAAK9E,IAAL,MAAA8E,MAAI,OAAQd,EAAQ9D,KAAI,SAAC6E,GAAD,OAAYA,EAAOC,QAAnB,KAA9B,GAA6D,CAAChB,IAEhFiB,GAAYC,EAAAA,EAAAA,GAAa,CAC/BpD,SAAU,EAAIC,EACdoD,WAAW,EACXC,SAAU,WACRZ,EAAU,GACVJ,EAAe,EAChB,IANKa,QA6DR,OAnDAI,EAAAA,EAAAA,IAAc,WACZ,IAAMC,EAAyB,CAAC,EAC5BC,EAAe,EACfC,EAAa,EAEXC,GAAuB9F,EAAAA,EAAAA,SAAQqE,EAAS,CAAC,WAAY,QAAS,CAAC,OAAQ,QAAQ0B,QACnF,SAACC,EAAkBC,EAAOrE,GAQxB,OAPAoE,EAAIC,EAAMjE,UAAYJ,GAEH,IAAfiE,GAAoBI,EAAMZ,SAAWQ,KACvCA,EAAaI,EAAMZ,SACnBO,GAAgB,GAElBD,EAAUM,EAAMjE,UAAY,CAAC,EAAG4D,GACzBI,CACR,GACD,CAAC,GAGGE,GAAsBlG,EAAAA,EAAAA,SAAQqE,EAAS,CAAC,gBAAiB,QAAS,CAAC,OAAQ,QAGjFuB,EAAe,EACfC,EAAa,EAEb,IAAMM,EAAiCD,EAAoB3F,KAAI,SAAC0F,EAAOrE,GACrE,IAAMwE,GAAQ,UAAQH,GAUtB,OARAG,EAAS1C,MAAQ,CAAC9B,EAAOkE,EAAqBM,EAASpE,WACvDoE,EAASC,SAAWV,EAAUS,EAASpE,WAEpB,IAAf6D,GAAoBI,EAAMK,cAAgBT,KAC5CA,EAAaI,EAAMK,cACnBV,GAAgB,GAElBQ,EAASC,SAAS,GAAKT,EAChBQ,CACR,IAEDzB,EAAiBwB,EAClB,KAGDI,EAAAA,EAAAA,YAAU,WACJjB,IAAY,EAAIlD,EAClBqC,EAAe,GACNa,IAAY,EAAIlD,GACzBqC,EAAe,EAElB,GAAE,CAACa,EAASlD,KAGX,iBACEd,WAAWC,EAAAA,EAAAA,GACT,gBACA+D,EAAU,GAAK,wBACH,IAAZA,IAAiB9D,EAAAA,EAAAA,IAAkB,WAErCgF,MAAO,CACLxB,OAAO,GAAD,QAAMG,KAAK9E,IAAI,GAAI2E,GAAU,GAAKN,EAAcjD,OAAhD,OAPV,WAUE,iBACEH,UAAU,qBACVpB,GAAG,0BACHsG,MAAO,CAAEC,QAAS,GAClB1B,IAAKA,EAJP,WAME,gBAAKzD,UAAU,4BAAf,UACE,SAACoF,EAAA,EAAD,CAAapF,UAAU,iCAEzB,gBAAKA,UAAU,+BAAf,iBACA,iBAAKA,UAAU,6BAAf,WACE,gBAAKA,UAAU,wBAAf,UACE,SAAC,KAAD,CAAQpB,GAAG,SAEb,gBAAKoB,UAAU,sBAAf,6BAEF,SAAC,IAAD,CAASb,OAAO,SAAC,KAAD,CAAWM,GAAG,oBAAoBC,GAAG,oBAAsB6C,MAAM,OAAjF,UACE,gBAAKvC,UAAU,6BAAf,kBAGF,SAACwC,EAAD,CAAcC,aAAc,EAAG/B,SAAS,OAExC,SAAC,IAAD,CAASvB,MAAM,QAAQoD,MAAM,OAA7B,UACE,iBAAMvC,UAAU,mCAAhB,oBAIHoD,EAAcnE,KAAI,SAAC0F,EAAOrE,GAAW,IAAD,IAC3BI,EAAqEiE,EAArEjE,SAAUqD,EAA2DY,EAA3DZ,SAAUiB,EAAiDL,EAAjDK,cAAevC,EAAkCkC,EAAlClC,aAAcL,EAAoBuC,EAApBvC,MAAO2C,EAAaJ,EAAbI,SAC1DM,GAAaxB,KAAK9E,IAAI,GAAI2E,GAAU,IAAxB,UAA8BtB,EAAMkB,UAApC,QAA+C,GAEjE,OACE,iBACEtD,UAAS,iDAA4CM,GAGrD4E,MAAO,CAAEI,IAAI,GAAD,OAAKD,EAAL,OAJd,WAME,gBAAKrF,UAAU,4BAAf,SACG+D,EAAW,GAAKJ,IAAcI,GAAYb,GAAe,IACxD,SAACkC,EAAA,EAAD,CAAapF,UAAU,iCAG3B,iBAAKA,UAAU,+BAAf,wBAAgD+E,EAASzB,UAAzD,QAAoE,OACpE,iBAAKtD,UAAU,6BAAf,WACE,gBAAKA,UAAU,wBAAf,UACE,SAAC,KAAD,CAAQpB,GAAIH,EAAQiC,GAAUpB,cAEhC,gBAAKU,UAAU,sBAAf,SAAsCvB,EAAQiC,GAAUtB,WAE1D,SAAC,IAAD,CAASD,OAAO,SAAC,KAAD,CAAWM,GAAG,oBAAoBC,GAAG,oBAAsB6C,MAAM,OAAjF,UACE,gBAAKvC,UAAU,6BAAf,SAA6CgF,OAE7ChC,GAAoBE,GAAe,QAAsBqC,IAAjB9C,IACxC,SAACD,EAAD,CACEC,aAAcA,EACd/B,SAAUA,EACVgC,yBAA0BA,KAI9B,SAAC,IAAD,CAASvD,MAAM,QAAQoD,MAAM,OAA7B,SACGW,GAAe,GACd,iBAAMlD,UAAU,mCAAhB,SAAoD+D,KAEpD,iBAAM/D,UAAU,+CAAhB,SAAgE+D,QAjCtE,kBAEkBrD,GAoCrB,MAGN,C,2DC7LM,SAAS8E,EAAT,GAQsB,IAAD,EAP1B/G,EAO0B,EAP1BA,QACAsE,EAM0B,EAN1BA,QACAL,EAK0B,EAL1BA,yBACApB,EAI0B,EAJ1BA,SACAnC,EAG0B,EAH1BA,MACAsG,EAE0B,EAF1BA,SACA3F,EAC0B,EAD1BA,aAEA4F,EAAAA,EAAAA,KACA,IAAMC,GAAaC,EAAAA,EAAAA,MAEbC,EAAM,iBAAG/F,QAAH,IAAGA,EAAAA,EAAe6F,EAAW7F,mBAA7B,QAA4C,QAExD,OACE,UAAC,IAAD,YACE,SAAC,KAAD,CAAWA,YAAa+F,EAAxB,gBAAiC1G,QAAjC,IAAiCA,EAAAA,EAAS,YAEzCsG,GAED,SAAC3C,EAAD,CAAcrE,QAASA,EAASsE,QAASA,EAASL,yBAA0BA,KAC5E,UAAC,KAAD,CAAa1C,UAAU,iDAAiDF,YAAa+F,EAArF,WACE,SAACC,EAAA,EAAD,KACA,SAAC,KAAD,CACErG,GAAG,iFACHC,GAAG,0DAEL,SAACoG,EAAA,EAAD,OAGDxE,IAGN,C,8ECvEM,SAASyE,EAAT,GAAwC,IAAxBzE,EAAuB,EAAvBA,SACrB,OAAO,8BAAGA,GACX,CCKM,SAAS0E,EAAT,GAA+D,IAAD,IAA5CC,UAAAA,OAA4C,SAAzB3E,EAAyB,EAAzBA,SAC1C,OAAO2E,GAAY,8BAAG3E,KAAe,uBACtC,CCFM,SAAS4E,EAAT,GAA+D,IAAD,IAA5CD,UAAAA,OAA4C,SAAzB3E,EAAyB,EAAzBA,SAC1C,OAAO2E,GAAY,8BAAG3E,EAAS,MAAS,8BAAGA,EAAS,IACrD,CCVM,SAAS6E,EAAT,GAA2D,IAArCC,EAAoC,EAApCA,MAAO9E,EAA6B,EAA7BA,SAClC,GAAI8E,EAAMjG,OAAS,EACjB,MAAMkG,MAAM,0CAGd,OAAID,EAAM,IAAM9E,EAAS,GAChBA,EAAS,GAGd8E,EAAM,IAAM9E,EAAS,GAChBA,EAAS,GAGd8E,EAAM,IAAM9E,EAAS,GAChBA,EAAS,GAGd8E,EAAM,IAAM9E,EAAS,GAChBA,EAAS,GAGd8E,EAAM,IAAM9E,EAAS,GAChBA,EAAS,IAElBgF,QAAQC,KAAK,4CACNjF,EACR,C,kFCnBM,SAASkF,IAIU,IAHxBC,EAGuB,uDAHR,eACfC,EAEuB,uDAFF,CAAC,EACtBjI,EACuB,uDADA,CAAC,EAExB,GAAiBkI,EAAAA,EAAAA,IAAe,UAAhC,eAAOC,EAAP,KACA,GAAwC3D,EAAAA,EAAAA,UAAqB4D,EAAAA,IAA7D,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4B9D,EAAAA,EAAAA,WAAS,GAArC,eAAO+D,EAAP,KAAeC,EAAf,KASA,OANAhC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACR6B,EAAY,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAQD,GAC7BM,EAAe,iBAACtI,QAAD,IAACA,OAAD,EAACA,EAAUqI,UAAX,QAA4B,CAAC,GAC5CG,GAAe,OAALP,QAAK,IAALA,OAAA,EAAAA,EAAQD,MAAkBG,EACrC,GAAE,CAACnI,EAASgI,EAAcC,EAAOE,IAE3B,CAACE,EAAcE,EACvB,C,6DChCM,SAASE,EAASC,GACvB,OACE,iCAAKC,MAAM,6BAA6BC,QAAQ,eAAkBF,GAAlE,eACE,iBACEG,KAAK,UACLC,EAAE,oMAEJ,iBACED,KAAK,UACLC,EAAE,iSAEJ,iBAAMA,EAAE,0xCAGb,C","sources":["components/avatars/AvatarGroup.tsx","components/general/Achievements.tsx","components/layout/Container.tsx","components/metrics/PointsHighlight.tsx","components/ranking/RankingBoard.tsx","components/ranking/StepRankingWrapper.tsx","components/views/View.tsx","components/views/ViewIf.tsx","components/views/ViewOr.tsx","components/views/ViewSwitch.tsx","hooks/useWhichPlayerIsThe.ts","icons/StarIcon.tsx"],"sourcesContent":["import { orderBy } from 'lodash';\n// Ant Design Resources\nimport { Avatar as AntAvatar, type AvatarProps, Tooltip } from 'antd';\n// Types\nimport type { GamePlayer } from 'types/player';\n// Internal\nimport { Avatar } from './Avatar';\n\ntype AvatarGroupProps = {\n  list: GamePlayer[];\n  user?: GamePlayer;\n  maxCount?: number;\n  tooltipPrefix?: string;\n} & AvatarProps;\n\n/**\n * Displays a group of avatars\n */\nexport function AvatarGroup({\n  list,\n  user,\n  maxCount = 3,\n  size,\n  tooltipPrefix = '',\n  ...avatarProps\n}: AvatarGroupProps) {\n  const players = orderBy(list, [(v) => v.id === user?.id, 'name'], ['desc', 'asc']);\n\n  return (\n    <AntAvatar.Group max={{ count: maxCount }} size={size}>\n      {players.map((player) => (\n        <Tooltip key={`avatar-group-${player.id}`} title={`${tooltipPrefix}${player.name}`} trigger=\"hover\">\n          <Avatar id={player.avatarId} alt={player.name} size={size} {...avatarProps} />\n        </Tooltip>\n      ))}\n    </AntAvatar.Group>\n  );\n}\n","import clsx from 'clsx';\nimport { motion } from 'framer-motion';\n// Ant Design Resources\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport { Button, Popover } from 'antd';\n// Types\nimport type { Achievement, AchievementReference } from 'types/achievements';\nimport type { GamePlayers } from 'types/player';\n// Utils\nimport { getAnimation } from 'utils/animations';\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { DualTranslate, Translate } from 'components/language';\nimport { Container } from 'components/layout/Container';\nimport { Instruction } from 'components/text';\n// Internal\nimport { Medal } from './Medal';\n\ntype AchievementsProps = {\n  /**\n   * Players of the game\n   */\n  players: GamePlayers;\n  /**\n   * Achievements to be displayed\n   */\n  achievements: Achievement[];\n  /**\n   * Reference for the achievements\n   */\n  reference: AchievementReference;\n  /**\n   * Color scheme for the component\n   */\n  colorScheme?: ColorScheme;\n};\n\nconst unknownText = { pt: 'Desconhecido', en: 'Unknown' };\n\nexport function Achievements({ players, achievements, reference, colorScheme }: AchievementsProps) {\n  return (\n    <Container\n      title={<Translate pt=\"Medalhas\" en=\"Achievements\" />}\n      titleProps={{\n        colorScheme,\n        size: 'small',\n      }}\n      className={clsx('achievements', getAnimationClass('fadeIn'))}\n    >\n      {achievements.length === 0 && (\n        <Instruction contained>\n          <Translate\n            pt={\n              <>\n                Nenhuma medalha foi conquistada nesse jogo.\n                <br />\n                Para ganhar uma medalha, apenas uma jogador pode atender o pré-requisito.\n              </>\n            }\n            en={\n              <>\n                No achievements were achieved in this game.\n                <br />\n                To win a medal, only one player can meet the condition.\n              </>\n            }\n          />\n        </Instruction>\n      )}\n      <ul className=\"achievements-list\">\n        {achievements.map((achievement, index) => {\n          const { icon = 'star', ...achievementObj } = reference[achievement.type] ?? {};\n          const player = players[achievement.playerId];\n          return (\n            <motion.li\n              key={`achievement-${achievement.type}`}\n              className={'achievements-entry'}\n              {...getAnimation('flipInY', {\n                duration: 2,\n                delay: (index < achievements.length / 2 ? index : achievements.length - 1 - index) + 2.5,\n              })}\n            >\n              <div className=\"achievement__medal\">\n                <Medal id={icon} />\n              </div>\n              <h4 className=\"achievement__title\">\n                <DualTranslate>{achievementObj.title ?? unknownText}</DualTranslate>\n              </h4>\n              <div className=\"achievement__avatar\">\n                <Avatar id={player.avatarId} />\n              </div>\n              <div className=\"achievement__name\">{player.name}</div>\n              {Boolean(achievementObj.description) && (\n                <div className=\"achievement__description\">\n                  <Popover\n                    content={\n                      <span>\n                        <DualTranslate>{achievementObj.description ?? unknownText}</DualTranslate> (\n                        {String(achievement.value)})\n                      </span>\n                    }\n                  >\n                    <Button icon={<QuestionCircleOutlined />} shape=\"circle\" type=\"text\" size=\"small\" />\n                  </Popover>\n                </div>\n              )}\n            </motion.li>\n          );\n        })}\n      </ul>\n    </Container>\n  );\n}\n","import clsx from 'clsx';\nimport type { ReactNode } from 'react';\n// Ant Design Resources\nimport { Space, type SpaceProps } from 'antd';\n// Components\nimport { Title, type TitleProps } from 'components/text';\n// Sass\nimport './Container.scss';\n\ntype ContainerProps = {\n  title: ReactNode;\n  children: ReactNode;\n  contained?: boolean;\n  className?: string;\n  titleProps?: Omit<TitleProps, 'children'>;\n  contentProps?: SpaceProps;\n} & Omit<SpaceProps, 'title' | 'children'>;\n\n/**\n * Container component with title and center aligned children\n */\nexport function Container({\n  title,\n  children,\n  className,\n  contained,\n  titleProps,\n  contentProps,\n  ...spaceProps\n}: ContainerProps) {\n  const { level = 4, size = 'xx-small', ...restTitleProps } = titleProps ?? {};\n\n  const {\n    className: childrenClassName,\n    wrap = true,\n    direction: childrenDirection = 'horizontal',\n    ...restChildrenContainerProps\n  } = contentProps ?? {};\n\n  return (\n    <Space direction=\"vertical\" className={clsx('container-wrapper', className)} {...spaceProps}>\n      <Title level={level} size={size} {...restTitleProps}>\n        {title}\n      </Title>\n\n      <Space\n        direction={childrenDirection}\n        wrap={wrap}\n        className={clsx(\n          'container-wrapper__children',\n          contained && 'container-wrapper__children--contained',\n          childrenClassName,\n        )}\n        {...restChildrenContainerProps}\n      >\n        {children}\n      </Space>\n    </Space>\n  );\n}\n","// Icons\nimport { StarIcon } from 'icons/StarIcon';\n// Components\nimport { type HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function PointsHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<StarIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import clsx from 'clsx';\nimport { orderBy } from 'lodash';\nimport { type LegacyRef, type ReactNode, useEffect, useMemo, useState } from 'react';\nimport { useEffectOnce, useMeasure } from 'react-use';\n// Ant Design Resources\nimport { CrownFilled } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\n// Types\nimport type { GameRanking } from 'types/game';\nimport type { GamePlayers } from 'types/player';\n// Hooks\nimport { useCountdown } from 'hooks/useCountdown';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\n\ntype GainedPointProps = {\n  gainedPoint: number;\n  order: number;\n  description?: any;\n};\n\nfunction GainedPoint({ gainedPoint, order, description }: GainedPointProps) {\n  const isPositive = gainedPoint > 0;\n  const isNegative = gainedPoint < 0;\n  return (\n    <li\n      className={clsx(\n        'ranking-board__gained-point',\n        isPositive && 'ranking-board__gained-point--plus',\n        isNegative && 'ranking-board__gained-point--minus',\n        `ranking-board__gained-point--${order}`,\n      )}\n    >\n      <Tooltip\n        title={description ?? <Translate pt=\"Pontos ganhos\" en=\"Gained Points\" />}\n        color={isPositive ? 'gold' : isNegative ? 'red' : 'gray'}\n      >\n        {isPositive ? '+' : ''}\n        {gainedPoint}\n      </Tooltip>\n    </li>\n  );\n}\n\ntype GainedPointsProps = {\n  gainedPoints: number[] | number;\n  playerId: PlayerId;\n  gainedPointsDescriptions?: any[];\n};\n\nfunction GainedPoints({ gainedPoints, playerId, gainedPointsDescriptions = [] }: GainedPointsProps) {\n  const points = Array.isArray(gainedPoints) ? gainedPoints : [gainedPoints];\n  return (\n    <ul className=\"ranking-board__cell-gained-points\">\n      {points.map((gainedPoint, index) => (\n        <GainedPoint\n          key={`gained-point-${playerId}-${index}`}\n          gainedPoint={gainedPoint}\n          order={index}\n          description={gainedPointsDescriptions[index]}\n        />\n      ))}\n    </ul>\n  );\n}\n\ntype RankingBoardProps = {\n  players: GamePlayers;\n  ranking: GameRanking;\n  gainedPointsDescriptions?: ReactNode[];\n  hideGainedPoints?: boolean;\n  delay?: number;\n};\n\nexport function RankingBoard({\n  players,\n  ranking,\n  gainedPointsDescriptions,\n  hideGainedPoints = false,\n  delay = 0,\n}: RankingBoardProps) {\n  const [displayStep, setDisplayStep] = useState(0);\n  const [sortedRanking, setSortedRanking] = useState<GameRanking>([]);\n  const [reRank, setReRank] = useState(0);\n  const [ref, { height }] = useMeasure();\n\n  const maxPoints = useMemo(() => Math.max(...ranking.map((scores) => scores.newScore)), [ranking]);\n\n  const { seconds } = useCountdown({\n    duration: 5 + delay,\n    autoStart: true,\n    onExpire: () => {\n      setReRank(1);\n      setDisplayStep(3);\n    },\n  });\n\n  // Rank by previousScore\n  useEffectOnce(() => {\n    const positions: PlainObject = {};\n    let lastPosition = 0;\n    let lastPoints = 0;\n\n    const rankByFinalScoreDict = orderBy(ranking, ['newScore', 'name'], ['desc', 'asc']).reduce(\n      (acc: PlainObject, entry, index) => {\n        acc[entry.playerId] = index;\n        // Calculate position\n        if (lastPoints === 0 || entry.newScore < lastPoints) {\n          lastPoints = entry.newScore;\n          lastPosition += 1;\n        }\n        positions[entry.playerId] = [0, lastPosition];\n        return acc;\n      },\n      {},\n    );\n\n    const rankByPreviousScore = orderBy(ranking, ['previousScore', 'name'], ['desc', 'asc']);\n\n    // Reset position trackers\n    lastPosition = 0;\n    lastPoints = 0;\n\n    const tempSortedRanking: GameRanking = rankByPreviousScore.map((entry, index) => {\n      const newEntry = { ...entry };\n\n      newEntry.order = [index, rankByFinalScoreDict[newEntry.playerId]];\n      newEntry.position = positions[newEntry.playerId];\n      // Calculate position\n      if (lastPoints === 0 || entry.previousScore < lastPoints) {\n        lastPoints = entry.previousScore;\n        lastPosition += 1;\n      }\n      newEntry.position[0] = lastPosition;\n      return newEntry;\n    });\n\n    setSortedRanking(tempSortedRanking);\n  });\n\n  // Show gained points\n  useEffect(() => {\n    if (seconds === 4 + delay) {\n      setDisplayStep(1);\n    } else if (seconds === 2 + delay) {\n      setDisplayStep(2);\n    }\n  }, [seconds, delay]);\n\n  return (\n    <div\n      className={clsx(\n        'ranking-board',\n        seconds > 4 && 'ranking-board--hidden',\n        seconds === 4 && getAnimationClass('fadeIn'),\n      )}\n      style={{\n        height: `${(Math.max(60, height) + 8) * sortedRanking.length}px`,\n      }}\n    >\n      <div\n        className=\"ranking-board__row\"\n        id=\"ranking-row-placeholder\"\n        style={{ opacity: 0 }}\n        ref={ref as LegacyRef<HTMLDivElement>}\n      >\n        <div className=\"ranking-board__cell-crown\">\n          <CrownFilled className=\"ranking-board__crown-icon\" />\n        </div>\n        <div className=\"ranking-board__cell-position\">#0</div>\n        <div className=\"ranking-board__cell-player\">\n          <div className=\"ranking-board__avatar\">\n            <Avatar id=\"A\" />\n          </div>\n          <div className=\"ranking-board__name\">Placeholder</div>\n        </div>\n        <Tooltip title={<Translate pt=\"Pontos Anteriores\" en=\"Previous Points\" />} color=\"gray\">\n          <div className=\"ranking-board__cell-points\">0</div>\n        </Tooltip>\n\n        <GainedPoints gainedPoints={0} playerId=\"A\" />\n\n        <Tooltip title=\"Total\" color=\"gold\">\n          <span className=\"ranking-board__cell-points-total\">0</span>\n        </Tooltip>\n      </div>\n\n      {sortedRanking.map((entry, index) => {\n        const { playerId, newScore, previousScore, gainedPoints, order, position } = entry;\n        const hPosition = (Math.max(60, height) + 8) * (order[reRank] ?? 0);\n\n        return (\n          <div\n            className={`ranking-board__row ranking-board__row--${index}`}\n            key={`ranking-${playerId}`}\n            // id={`ranking-row-${index}`}\n            style={{ top: `${hPosition}px` }}\n          >\n            <div className=\"ranking-board__cell-crown\">\n              {newScore > 0 && maxPoints === newScore && displayStep >= 3 && (\n                <CrownFilled className=\"ranking-board__crown-icon\" />\n              )}\n            </div>\n            <div className=\"ranking-board__cell-position\">#{position[reRank] ?? ''}</div>\n            <div className=\"ranking-board__cell-player\">\n              <div className=\"ranking-board__avatar\">\n                <Avatar id={players[playerId].avatarId} />\n              </div>\n              <div className=\"ranking-board__name\">{players[playerId].name}</div>\n            </div>\n            <Tooltip title={<Translate pt=\"Pontos Anteriores\" en=\"Previous Points\" />} color=\"gray\">\n              <div className=\"ranking-board__cell-points\">{previousScore}</div>\n            </Tooltip>\n            {!hideGainedPoints && displayStep >= 1 && gainedPoints !== undefined && (\n              <GainedPoints\n                gainedPoints={gainedPoints}\n                playerId={playerId}\n                gainedPointsDescriptions={gainedPointsDescriptions}\n              />\n            )}\n\n            <Tooltip title=\"Total\" color=\"gold\">\n              {displayStep >= 2 ? (\n                <span className=\"ranking-board__cell-points-total\">{newScore}</span>\n              ) : (\n                <span className=\"ranking-board__cell-points-total-preliminary\">{newScore}</span>\n              )}\n            </Tooltip>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import type { ReactNode } from 'react';\n// Ant Design Resources\nimport { CaretUpOutlined } from '@ant-design/icons';\n// Types\nimport type { GameRanking } from 'types/game';\nimport type { GamePlayers } from 'types/player';\n// Hooks\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Components\nimport { Translate } from 'components/language';\nimport { useGameAppearance } from 'components/session/GameInfoContext';\nimport { Step } from 'components/steps';\nimport { Instruction, StepTitle } from 'components/text';\n// Internal\nimport { RankingBoard } from './RankingBoard';\n\ntype StepRankingWrapperProps = {\n  /**\n   * The players\n   */\n  players: GamePlayers;\n  /**\n   * The ranking array\n   */\n  ranking: GameRanking;\n  /**\n   * Gained points descriptions for the popover\n   */\n  gainedPointsDescriptions: ReactNode[];\n  /**\n   * Additional content\n   */\n  children?: ReactNode;\n  /**\n   * Replacement title for Ranking\n   */\n  title?: ReactNode;\n  /**\n   * Optional node that goes under the title\n   */\n  subtitle?: ReactNode;\n  /**\n   * Whether the title should be white or not\n   */\n  colorScheme?: ColorScheme;\n};\n\nexport function StepRankingWrapper({\n  players,\n  ranking,\n  gainedPointsDescriptions,\n  children,\n  title,\n  subtitle,\n  colorScheme,\n}: StepRankingWrapperProps) {\n  useTemporarilyHidePlayersBar();\n  const appearance = useGameAppearance();\n\n  const scheme = colorScheme ?? appearance.colorScheme ?? 'light';\n\n  return (\n    <Step>\n      <StepTitle colorScheme={scheme}>{title ?? 'Ranking'}</StepTitle>\n\n      {subtitle}\n\n      <RankingBoard players={players} ranking={ranking} gainedPointsDescriptions={gainedPointsDescriptions} />\n      <Instruction className=\"step-ranking-wrapper-gained-points-instruction\" colorScheme={scheme}>\n        <CaretUpOutlined />\n        <Translate\n          pt=\"Passe o mouse em cada um dos pontos para saber como eles foram distribuídos\"\n          en=\"Hover over the scores to learn how they were granted\"\n        />\n        <CaretUpOutlined />\n      </Instruction>\n\n      {children}\n    </Step>\n  );\n}\n","import type { ReactNode } from 'react';\n\ntype ViewProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n};\n\nexport function View({ children }: ViewProps) {\n  return <>{children}</>;\n}\n","import type { ReactNode } from 'react';\n\ntype ViewIfProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  /**\n   * Displays children only if condition is truthy\n   */\n  condition?: boolean;\n};\n\n/**\n * Wrapper component that only renders the children if the condition is truthy\n */\nexport function ViewIf({ condition = false, children }: ViewIfProps) {\n  return condition ? <>{children}</> : <></>;\n}\n","import type { ReactNode } from 'react';\n\ntype ViewOrProps = {\n  /**\n   * The content of the component to be toggled\n   */\n  children: [ReactNode, ReactNode];\n  /**\n   * The condition to be met to render the first children\n   */\n  condition?: boolean;\n};\n\n/**\n * View wrapper that renders one of two children depending on a condition\n */\nexport function ViewOr({ condition = false, children }: ViewOrProps) {\n  return condition ? <>{children[0]}</> : <>{children[1]}</>;\n}\n","type ViewSwitchProps = {\n  cases: boolean[];\n  /**\n   * The content of the component\n   */\n  children: any;\n};\n\nexport function ViewSwitch({ cases, children }: ViewSwitchProps) {\n  if (cases.length > 5) {\n    throw Error('ViewSwitch only supports up to 5 cases');\n  }\n\n  if (cases[0] && children[0]) {\n    return children[0];\n  }\n\n  if (cases[1] && children[1]) {\n    return children[1];\n  }\n\n  if (cases[2] && children[2]) {\n    return children[2];\n  }\n\n  if (cases[3] && children[3]) {\n    return children[3];\n  }\n\n  if (cases[4] && children[4]) {\n    return children[4];\n  }\n  console.warn('Rendering all children in the ViewSwitch');\n  return children;\n}\n","import { useEffect, useState } from 'react';\n// Types\nimport type { GamePlayers, GamePlayer } from 'types/player';\n// Utils\nimport { PLACEHOLDER_PLAYER } from 'utils/constants';\n// Internal\nimport { useGlobalState } from './useGlobalState';\n\n/**\n * Gets player that is assigned to a property in the state\n * @param propertyName\n * @param state\n * @param players\n * @returns a player instance, a boolean if the player is assigned to given property\n */\nexport function useWhichPlayerIsThe(\n  propertyName = 'activePlayer',\n  state: PlainObject = {},\n  players: GamePlayers = {},\n): [GamePlayer, boolean] {\n  const [userId] = useGlobalState('userId');\n  const [activePlayer, setActivePlayer] = useState<GamePlayer>(PLACEHOLDER_PLAYER);\n  const [isUser, setIsUser] = useState(false);\n\n  // Determine if user is active as the guesser, the clue giver, the psychic, the storyteller, etc\n  useEffect(() => {\n    const activePlayer = state?.[propertyName];\n    setActivePlayer(players?.[activePlayer] ?? {});\n    setIsUser(state?.[propertyName] === userId);\n  }, [players, propertyName, state, userId]);\n\n  return [activePlayer, isUser];\n}\n","export function StarIcon(props: React.SVGProps<SVGSVGElement>) {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffb820\"\n        d=\"M491.64 188.725l-153.53-22.31-68.66-139.12c-2.75-5.57-8.1-8.36-13.45-8.36l.02 400.2 137.3 72.19c11.01 5.78 23.86-3.56 21.76-15.81l-26.22-152.92 111.09-108.29c8.91-8.68 3.99-23.79-8.31-25.58z\"\n      ></path>\n      <path\n        fill=\"#ffd06a\"\n        d=\"M356.62 312.125s23.68 138.03 23.76 138.49c-.08-.01-122.45-31-124.36-31.48-.02-.01-137.34 72.19-137.34 72.19-11.01 5.78-23.86-3.56-21.76-15.81l26.22-152.92-111.09-108.29c-8.91-8.68-3.99-23.79 8.31-25.58l153.53-22.31 68.66-139.12c2.75-5.57 8.1-8.36 13.45-8.36l62.19 174.9 139.06 20.21z\"\n      ></path>\n      <path d=\"M510.883 196.615c-2.666-8.204-9.625-14.07-18.16-15.311l-149.632-21.743-66.918-135.588c-3.817-7.735-11.547-12.54-20.173-12.54s-16.356 4.805-20.173 12.54L168.91 159.561 19.278 181.305c-8.537 1.24-15.495 7.106-18.161 15.311s-.484 17.04 5.693 23.062l108.274 105.541-9.911 57.786a7.501 7.501 0 006.124 8.66 7.499 7.499 0 008.66-6.125l10.578-61.672a7.502 7.502 0 00-2.157-6.639L17.28 208.934c-2.089-2.036-2.798-4.909-1.897-7.684.902-2.775 3.164-4.683 6.052-5.103l153.534-22.31a7.498 7.498 0 005.647-4.103l68.662-139.125c1.292-2.617 3.804-4.179 6.722-4.179s5.431 1.562 6.722 4.179l68.663 139.125a7.5 7.5 0 005.647 4.103l153.534 22.31c2.888.42 5.15 2.327 6.051 5.102.902 2.775.193 5.648-1.896 7.685L383.622 317.228a7.499 7.499 0 00-2.157 6.639l26.227 152.913c.494 2.876-.621 5.617-2.982 7.332-2.361 1.714-5.312 1.929-7.895.57L259.49 412.487a7.504 7.504 0 00-6.98 0l-137.325 72.195c-2.583 1.358-5.535 1.144-7.894-.57-2.361-1.715-3.476-4.456-2.982-7.332l10.578-61.673a7.501 7.501 0 00-6.124-8.66 7.501 7.501 0 00-8.66 6.125l-10.578 61.673c-1.458 8.502 1.971 16.933 8.95 22.003 3.943 2.865 8.557 4.32 13.201 4.32a22.51 22.51 0 0010.49-2.608L256 427.6l133.834 70.36c7.635 4.014 16.713 3.357 23.692-1.712 6.979-5.07 10.408-13.502 8.949-22.003l-25.56-149.027L505.19 219.677c6.177-6.022 8.359-14.859 5.693-23.062z\"></path>\n    </svg>\n  );\n}\n"],"names":["AvatarGroup","list","user","maxCount","size","tooltipPrefix","avatarProps","players","orderBy","v","id","A","Group","max","count","map","player","title","name","trigger","avatarId","alt","unknownText","pt","en","Achievements","achievements","reference","colorScheme","titleProps","className","clsx","getAnimationClass","length","contained","achievement","index","type","icon","achievementObj","playerId","li","getAnimation","duration","delay","Boolean","description","content","String","value","shape","Container","children","contentProps","spaceProps","level","restTitleProps","childrenClassName","wrap","direction","childrenDirection","restChildrenContainerProps","PointsHighlight","iconSize","GainedPoint","gainedPoint","order","isPositive","isNegative","color","GainedPoints","gainedPoints","gainedPointsDescriptions","points","Array","isArray","RankingBoard","ranking","hideGainedPoints","useState","displayStep","setDisplayStep","sortedRanking","setSortedRanking","reRank","setReRank","useMeasure","ref","height","maxPoints","useMemo","Math","scores","newScore","seconds","useCountdown","autoStart","onExpire","useEffectOnce","positions","lastPosition","lastPoints","rankByFinalScoreDict","reduce","acc","entry","rankByPreviousScore","tempSortedRanking","newEntry","position","previousScore","useEffect","style","opacity","CrownFilled","hPosition","top","undefined","StepRankingWrapper","subtitle","useTemporarilyHidePlayersBar","appearance","useGameAppearance","scheme","CaretUpOutlined","View","ViewIf","condition","ViewOr","ViewSwitch","cases","Error","console","warn","useWhichPlayerIsThe","propertyName","state","useGlobalState","userId","PLACEHOLDER_PLAYER","activePlayer","setActivePlayer","isUser","setIsUser","StarIcon","props","xmlns","viewBox","fill","d"],"sourceRoot":""}