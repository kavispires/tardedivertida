{"version":3,"file":"static/js/crimes-hediondos.4e4fd113.chunk.js","mappings":"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","sources":["games/crimes-hediondos/utils/mock.ts","games/crimes-hediondos/components/RulesBlobs.tsx","games/crimes-hediondos/components/ItemCard.tsx","games/crimes-hediondos/components/ContinueButton.tsx","games/crimes-hediondos/StepItemsSelection.tsx","games/crimes-hediondos/components/SceneTile.tsx","../node_modules/@ant-design/icons-svg/es/asn/PlusSquareFilled.js","../node_modules/@ant-design/icons/es/icons/PlusSquareFilled.js","games/crimes-hediondos/components/SelectedItems.tsx","games/crimes-hediondos/StepCauseOfDeathSelection.tsx","games/crimes-hediondos/StepLocationSelection.tsx","games/crimes-hediondos/StepReviewCrime.tsx","games/crimes-hediondos/StepReasonForEvidence.tsx","games/crimes-hediondos/PhaseCrimeSelection.tsx","games/crimes-hediondos/utils/api-requests.ts","../node_modules/@ant-design/icons-svg/es/asn/ClockCircleFilled.js","../node_modules/@ant-design/icons/es/icons/ClockCircleFilled.js","../node_modules/@ant-design/icons-svg/es/asn/SafetyOutlined.js","../node_modules/@ant-design/icons/es/icons/SafetyOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/GiftOutlined.js","../node_modules/@ant-design/icons/es/icons/GiftOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/ExceptionOutlined.js","../node_modules/@ant-design/icons/es/icons/ExceptionOutlined.js","games/crimes-hediondos/components/ItemCardEmpty.tsx","../node_modules/@ant-design/icons-svg/es/asn/WarningFilled.js","../node_modules/@ant-design/icons/es/icons/WarningFilled.js","games/crimes-hediondos/components/CrimeGuessStatus.tsx","games/crimes-hediondos/components/Crime.tsx","games/crimes-hediondos/components/GroupedItemsBoard.tsx","games/crimes-hediondos/StepNewScene.tsx","games/crimes-hediondos/PhaseSceneMarking.tsx","games/crimes-hediondos/utils/helpers.tsx","games/crimes-hediondos/components/PlayersCards.tsx","games/crimes-hediondos/components/SelectableGroupedItemsBoard.tsx","games/crimes-hediondos/StepGuessing.tsx","games/crimes-hediondos/PhaseGuessing.tsx","games/crimes-hediondos/components/ResultsTable.tsx","games/crimes-hediondos/StepReveal.tsx","games/crimes-hediondos/StepRanking.tsx","games/crimes-hediondos/PhaseReveal.tsx","games/crimes-hediondos/PhaseGameOver.tsx","games/crimes-hediondos/SessionCrimesHediondos.tsx","../node_modules/@ant-design/icons-svg/es/asn/CloudUploadOutlined.js","../node_modules/@ant-design/icons/es/icons/CloudUploadOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/EnvironmentOutlined.js","../node_modules/@ant-design/icons/es/icons/EnvironmentOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/LockFilled.js","../node_modules/@ant-design/icons/es/icons/LockFilled.js","../node_modules/@ant-design/icons-svg/es/asn/QuestionCircleFilled.js","../node_modules/@ant-design/icons/es/icons/QuestionCircleFilled.js"],"sourcesContent":["import { SEPARATOR } from 'utils/constants';\nimport { getLastItem, getRandomItem, shuffle } from 'utils/helpers';\n\nexport const mockCrime = (itemsGroup: string[]): SubmitCrimePayload => {\n  const shuffledItems = shuffle(itemsGroup);\n  const weapon = shuffledItems.find((e) => e?.includes('wp'));\n  const evidence = shuffledItems.find((e) => e?.includes('ev'));\n  const locationTileId = `location-tile-${getRandomItem([1, 2, 3, 4])}`;\n  const options = [0, 1, 2, 3, 4, 5];\n\n  return {\n    weaponId: weapon,\n    evidenceId: evidence,\n    causeOfDeath: getRandomItem(options),\n    reasonForEvidence: getRandomItem(options),\n    locationTile: locationTileId,\n    locationIndex: getRandomItem(options),\n  };\n};\n\nexport const mockGuesses = (groupedItems: GroupedItems, players: GamePlayers, user: GamePlayer) => {\n  // TODO: intelligent guessing based on history\n\n  return Object.values(players).reduce((acc: any, player) => {\n    if (player.id !== user.id) {\n      const historyForThisTarget = user.history?.[player.id] ?? [];\n\n      const lastGuess: GuessHistoryEntry = getLastItem(historyForThisTarget);\n\n      if (lastGuess) {\n        // If correct or locked\n        if (lastGuess.status === 'CORRECT' || lastGuess.status === 'LOCKED') {\n          acc[player.id] = {\n            weaponId: lastGuess.weaponId,\n            evidenceId: lastGuess.evidenceId,\n          };\n          return acc;\n        }\n\n        // If half or wrong\n        if (lastGuess.status === 'HALF' || lastGuess.status === 'WRONG') {\n          const group = groupedItems[lastGuess.groupIndex];\n          const weapons: string[] = group.filter((e) => e?.includes('wp'));\n          const evidences: string[] = group.filter((e) => e?.includes('ev'));\n\n          const previousPicksDict = historyForThisTarget.reduce(\n            (acc: BooleanDictionary, entry: GuessHistoryEntry) => {\n              acc[`${entry.weaponId}${SEPARATOR}${entry.evidenceId}`] = true;\n              return acc;\n            },\n            {}\n          );\n          let pair = `${getRandomItem(weapons)}${SEPARATOR}${getRandomItem(evidences)}`;\n\n          while (previousPicksDict[pair]) {\n            pair = `${getRandomItem(weapons)}${SEPARATOR}${getRandomItem(evidences)}`;\n          }\n\n          const [weaponId, evidenceId] = pair.split(SEPARATOR);\n\n          acc[player.id] = {\n            weaponId,\n            evidenceId,\n          };\n          return acc;\n        }\n\n        // If wrong group\n        const previouslyWrongGroups = historyForThisTarget.reduce((t: number[], guess: GuessHistoryEntry) => {\n          if (guess.status === 'WRONG_GROUP') {\n            t.push(guess.groupIndex);\n          }\n          return t;\n        }, []);\n        const availableGroups = [0, 1, 2, 3]\n          .filter((i) => !previouslyWrongGroups.includes(i))\n          .map((i) => groupedItems[i]);\n        const randomGroup = getRandomItem(availableGroups);\n\n        const weapons: string[] = randomGroup.filter((e) => e?.includes('wp'));\n        const evidences: string[] = randomGroup.filter((e) => e?.includes('ev'));\n        acc[player.id] = {\n          weaponId: getRandomItem(weapons),\n          evidenceId: getRandomItem(evidences),\n        };\n        return acc;\n      }\n\n      // If no history exists\n      const randomGroup = getRandomItem(Object.values(groupedItems));\n      const weapons: string[] = randomGroup.filter((e) => e?.includes('wp'));\n      const evidences: string[] = randomGroup.filter((e) => e?.includes('ev'));\n      acc[player.id] = {\n        weaponId: getRandomItem(weapons),\n        evidenceId: getRandomItem(evidences),\n      };\n    }\n    return acc;\n  }, {});\n};\n\nexport const mockSceneMark = () => {\n  return getRandomItem([0, 1, 2, 3, 4, 5]);\n};\n","// Components\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\n\nexport function WelcomeMessage(): JSX.Element {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Bem-vindo à Convenção Anual de Serial Killers!\n            <br />\n            Você e os outros serial killers decidiram fazer um jogo de adivinhação.\n            <br />\n            O objetivo é todos darem dicas sobre as circunstâncias que seus últimos crimes aconteceram para\n            ajudar os outros jogadores a descobrirem qual arma e qual objeto foram usados durante o crime.\n            <br />\n            Prontos para aterrorizar?\n          </>\n        }\n        en={\n          <>\n            Welcome to the Annual Serial Killers Con!\n            <br />\n            You and the other serial killers decided to make it a game out of it.\n            <br />\n            The goal is to give clues about the circunstancies your latest crime occurred so the other players\n            can guess what weapon and evidence were used during the crime.\n            <br />\n            Ready to terrorize?\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function GuessMessage(): JSX.Element {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Baseado nas informações dadas pelos jogadores, tente adivinhar qual arma e objeto cada jogador\n            usou em seu crime.\n            <br />\n            Você ganha pontos se adivinhar uma das cartas ou ambas as cartas, e você também ganha 1 ponto para\n            cada uma de suas cartas que os outros adivinharem, mas essa pontuação é secreta.\n          </>\n        }\n        en={\n          <>\n            Based on the information given by other players, try to guess the weapon and object used on their\n            crimes.\n            <br />\n            You get points for getting one or both cards correctly, and you get 1 point when other players get\n            each of your cards correctly, but these points are kept secret.\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function ScoringMessage({ round }: { round: GameRound }): JSX.Element {\n  const points = round.total - round.current + 1;\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Você ganha 1 ponto para cada arma ou objeto que você acertar.\n            <br />\n            Se você acertar o par de um jogador, você ganha {points} pontos.\n            <br />\n            Para todos os seus acertos, seus respectivos autores ganham 1 ponto.\n            <br />\n            Ganha o jogo o primeiro jogador que acertar tudo.\n          </>\n        }\n        en={\n          <>\n            You get 1 point for each weapon or evidence you get correctly.\n            <br />\n            If you get the pair for a player, you get {points} points instead.\n            <br />\n            All of your correct guesses grant 1 extra point to the authors.\n            <br />\n            Wins the game the player who get all correctly first.\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\nexport function GenericMessage(): JSX.Element {\n  return (\n    <Instruction contained>\n      <Translate\n        pt={\n          <>\n            Escrever msg aqui.\n            <br />\n            Prontos para aterrorizar?\n          </>\n        }\n        en={\n          <>\n            Message comes here.\n            <br />\n            Ready to terrorize?\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Popover, Tag } from 'antd';\n// Hooks\nimport { useDevFeatures } from 'hooks/useDevFeatures';\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { ImageCard } from 'components/cards';\n\ntype ItemCardProps = {\n  item: HCard;\n  cardWidth: number;\n  preview?: boolean;\n  isSelected?: boolean;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  activeColor?: string;\n};\n\nexport function ItemCard({\n  item,\n  cardWidth,\n  activeColor,\n  preview = true,\n  isSelected = false,\n  className = '',\n}: ItemCardProps) {\n  const { language } = useLanguage();\n  const { isDebugEnabled } = useDevFeatures();\n  return (\n    <div\n      className={clsx('h-item-card', isSelected && 'h-item-card--selected', className)}\n      style={activeColor && isSelected ? { borderColor: 'black', backgroundColor: activeColor } : {}}\n    >\n      <Popover content={item.name[language].toUpperCase()}>\n        <Tag\n          className=\"h-item-card__name\"\n          color={item.type === 'weapon' ? 'geekblue' : 'volcano'}\n          style={{ maxWidth: `${cardWidth + 16}px` }}\n        >\n          <span>{isDebugEnabled ? item.id : item.name[language]}</span>\n        </Tag>\n      </Popover>\n      <ImageCard imageId={item.id} cardWidth={cardWidth} className=\"h-item-card__image\" preview={preview} />\n    </div>\n  );\n}\n","// Ant Design Resources\nimport { Button, ButtonProps } from 'antd';\n// State\nimport { Translate } from 'components/language';\n\ninterface ContinueButtonProps extends ButtonProps {\n  onClick: GenericFunction;\n  disabled?: boolean;\n  children?: string;\n}\n\nexport function ContinueButton({ onClick, children, disabled = false, ...props }: ContinueButtonProps) {\n  return (\n    <Button type=\"primary\" size=\"large\" disabled={disabled} onClick={onClick} {...props}>\n      {children ?? (\n        <>\n          »» <Translate pt=\"Próximo\" en=\"Next\" /> »»\n        </>\n      )}\n    </Button>\n  );\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Utils\nimport { shuffle } from 'utils/helpers';\n// Components\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { TransparentButton } from 'components/buttons';\nimport { ItemCard } from './components/ItemCard';\nimport { ContinueButton } from './components/ContinueButton';\n\ntype StepItemsSelectionProps = {\n  user: GamePlayer;\n  groupedItems: GroupedItems;\n  items: ItemsDict;\n  selections: PlainObject;\n  updateSelections: GenericFunction;\n};\n\nexport function StepItemsSelection({\n  user,\n  items,\n  groupedItems,\n  selections,\n  updateSelections,\n}: StepItemsSelectionProps) {\n  const [weaponId, setWeaponId] = useState<string>(selections.weaponId);\n  const [evidenceId, setEvidenceId] = useState<string>(selections.evidenceId);\n  const cardWidth = useCardWidth(12, 8, 50, 200);\n\n  const userItems = groupedItems[user.itemGroupIndex];\n\n  const onSelectItem = (item: HCard) => {\n    if (item.type === 'weapon') {\n      setWeaponId(item.id);\n    } else {\n      setEvidenceId(item.id);\n    }\n  };\n\n  const onRandomSelect = () => {\n    let randomWeaponId = '';\n    let randomEvidenceId = '';\n    shuffle(userItems).forEach((itemId) => {\n      if (items[itemId].type === 'weapon') {\n        randomWeaponId = itemId;\n      } else {\n        randomEvidenceId = itemId;\n      }\n    });\n    setWeaponId(randomWeaponId);\n    setEvidenceId(randomEvidenceId);\n  };\n\n  return (\n    <Step>\n      <Title>\n        <Translate pt=\"Qual foi seu último crime?\" en=\"How was your last crime?\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Selecione uma carta azul e uma carta vermelha.\n              <br />\n              Elas representam a arma usada em seu último crime e um objeto da cena do crime.\n              <br />O jogo contém 16 armas e 16 objetos, mas para essa parte, você vê apenas 4 opções de cada.\n            </>\n          }\n          en={\n            <>\n              Select a blue card and a red card.\n              <br />\n              They represent the weapon used in your latest crime and an object that was in the crime scene.\n              <br />\n              The game has 16 weapons and 16 objects, but for this phase, you only see 4 options of each.\n            </>\n          }\n        />\n      </Instruction>\n\n      <Space className=\"space-container\" align=\"center\">\n        <Button onClick={onRandomSelect} size=\"large\">\n          <Translate pt=\"Selecionar aleatoriamente\" en=\"Random picks\" />\n        </Button>\n\n        <ContinueButton\n          disabled={!weaponId || !evidenceId}\n          onClick={() => updateSelections({ weaponId, evidenceId })}\n        />\n      </Space>\n\n      <ul className=\"h-items-selection\">\n        {userItems.map((itemId) => (\n          <li key={itemId} className=\"h-items-selection__item\">\n            <TransparentButton onClick={() => onSelectItem(items[itemId])}>\n              <ItemCard\n                item={items[itemId]}\n                cardWidth={cardWidth}\n                preview={false}\n                isSelected={[weaponId, evidenceId].includes(itemId)}\n              />\n            </TransparentButton>\n          </li>\n        ))}\n      </ul>\n    </Step>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Popover } from 'antd';\nimport { CheckCircleFilled } from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n\ntype SceneTileProps = {\n  tile: SceneTile;\n  index?: number;\n  onSelectValue?: GenericFunction;\n};\n\nexport function SceneTile({ tile, index, onSelectValue }: SceneTileProps) {\n  const { language } = useLanguage();\n  return (\n    <div className={clsx('h-scene-tile', `h-scene-tile--${tile.type}`)}>\n      <Popover content={tile.description[language]}>\n        <h4 className=\"h-scene-tile__title\">{tile.title[language]}</h4>\n      </Popover>\n      <ul className=\"h-scene-tile__options\">\n        {tile.values.map((entry, i) => {\n          const isActive = i === index;\n          return (\n            <li key={`${tile.id}-value-${i}`}>\n              <Button\n                className={clsx('h-scene-tile__button', `h-scene-tile__button--${tile.type}`)}\n                icon={isActive ? <CheckCircleFilled className=\"h-scene-tile__icon\" /> : undefined}\n                onClick={onSelectValue ? () => onSelectValue({ tileId: tile.id, value: i }) : () => {}}\n              >\n                {entry[language]}\n              </Button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","// This icon file is generated automatically.\nvar PlusSquareFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM704 536c0 4.4-3.6 8-8 8H544v152c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V544H328c-4.4 0-8-3.6-8-8v-48c0-4.4 3.6-8 8-8h152V328c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v152h152c4.4 0 8 3.6 8 8v48z\" } }] }, \"name\": \"plus-square\", \"theme\": \"filled\" };\nexport default PlusSquareFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusSquareFilledSvg from \"@ant-design/icons-svg/es/asn/PlusSquareFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PlusSquareFilled = function PlusSquareFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PlusSquareFilledSvg\n  }));\n};\n\nPlusSquareFilled.displayName = 'PlusSquareFilled';\nexport default /*#__PURE__*/React.forwardRef(PlusSquareFilled);","import clsx from 'clsx';\n// Ant Design Resources\nimport { PlusSquareFilled } from '@ant-design/icons';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { ItemCard } from './ItemCard';\n\ntype SelectedItemsProps = {\n  items: ItemsDict;\n  weaponId: string;\n  evidenceId: string;\n  fadeWeapon?: boolean;\n  fadeEvidence?: boolean;\n};\n\nexport function SelectedItems({\n  items,\n  weaponId,\n  evidenceId,\n  fadeWeapon = false,\n  fadeEvidence = false,\n}: SelectedItemsProps) {\n  const cardWidth = useCardWidth(12, 8, 50, 200);\n\n  return (\n    <ul className=\"h-items-crime-selection\">\n      <li>\n        <ItemCard\n          item={items[weaponId]}\n          cardWidth={cardWidth}\n          preview\n          className={clsx(fadeWeapon && 'h-items-crime-selection__faded')}\n        />\n      </li>\n      <li>\n        <PlusSquareFilled style={{ color: 'white' }} />\n      </li>\n      <li>\n        <ItemCard\n          item={items[evidenceId]}\n          cardWidth={cardWidth}\n          preview\n          className={clsx(fadeEvidence && 'h-items-crime-selection__faded')}\n        />\n      </li>\n    </ul>\n  );\n}\n","import { useState } from 'react';\nimport { Space } from 'antd';\n// Components\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { SceneTile } from './components/SceneTile';\nimport { SelectedItems } from './components/SelectedItems';\nimport { ContinueButton } from './components/ContinueButton';\n\ntype StepCauseOfDeathSelectionProps = {\n  items: ItemsDict;\n  selections: PlainObject;\n  updateSelections: GenericFunction;\n  causeOfDeathTile: SceneTile;\n};\n\nexport function StepCauseOfDeathSelection({\n  items,\n  selections,\n  updateSelections,\n  causeOfDeathTile,\n}: StepCauseOfDeathSelectionProps) {\n  const [causeOfDeathIndex, setCauseOfDeathIndex] = useState<number>();\n\n  const onSelectItem = (payload: SceneTilePayload) => {\n    setCauseOfDeathIndex(payload.value);\n  };\n\n  return (\n    <Step>\n      <Title>\n        <Translate pt=\"Qual foi seu último crime?\" en=\"How was your last crime?\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>Baseado somente em sua arma do crime (carta azul), selecione a causa da morte de sua vítima.</>\n          }\n          en={<>Based solely on the weapon (blue card) you've chosen, select your victim's cause of death.</>}\n        />\n      </Instruction>\n\n      <Space className=\"space-container\" align=\"center\">\n        <SelectedItems\n          items={items}\n          weaponId={selections.weaponId}\n          evidenceId={selections.evidenceId}\n          fadeEvidence\n        />\n\n        <SceneTile tile={causeOfDeathTile} onSelectValue={onSelectItem} index={causeOfDeathIndex} />\n      </Space>\n\n      <Space className=\"space-container\" align=\"center\">\n        <ContinueButton\n          disabled={causeOfDeathIndex === undefined}\n          onClick={() => updateSelections({ causeOfDeath: causeOfDeathIndex })}\n        />\n      </Space>\n    </Step>\n  );\n}\n","import { useState } from 'react';\nimport { Space } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { ItemCard } from './components/ItemCard';\nimport { SceneTile } from './components/SceneTile';\nimport { ContinueButton } from './components/ContinueButton';\n\ntype StepLocationSelectionProps = {\n  user: GamePlayer;\n  items: ItemsDict;\n  selections: PlainObject;\n  updateSelections: GenericFunction;\n  locationTiles: SceneTile[];\n  groupedItems: GroupedItems;\n};\n\nexport function StepLocationSelection({\n  user,\n  items,\n  selections,\n  updateSelections,\n  locationTiles,\n  groupedItems,\n}: StepLocationSelectionProps) {\n  const cardWidth = useCardWidth(12, 8, 50, 200);\n  const [location, setLocation] = useState<PlainObject>();\n\n  const userItems = groupedItems[user.itemGroupIndex];\n\n  const onSelectItem = (payload: SceneTilePayload) => {\n    setLocation(payload);\n  };\n\n  return (\n    <Step>\n      <Title>\n        <Translate pt=\"Onde foi o crime?\" en=\"Where was the crime?\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Baseado em qualquer uma das suas cartas (ou ambas), selecione o local onde o crime aconteceu.\n              <br />\n              Temos 4 colunas de locais agrupador por tema, selecione qualquer um.\n              <br />\n              Lembre-se que você está tentando ajudar os outros jogadores adivinhar o seu crime, seja\n              inteligente!\n            </>\n          }\n          en={\n            <>\n              Based on any card (or both), select where the crime occurred.\n              <br />\n              There are 4 columns of locations grouped by theme, you may select any.\n              <br />\n              Remember you are trying to help the players guess your crime, so be smart!\n            </>\n          }\n        />\n      </Instruction>\n\n      <ul className=\"h-items-selection\">\n        {userItems.map((itemId) => (\n          <li key={itemId} className=\"h-items-selection__item\">\n            <ItemCard\n              item={items[itemId]}\n              cardWidth={cardWidth}\n              preview={false}\n              isSelected={[selections.weaponId, selections.evidenceId].includes(itemId)}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"h-scene-tiles-list\">\n        {locationTiles.map((tile) => (\n          <SceneTile\n            key={tile.id}\n            tile={tile}\n            onSelectValue={onSelectItem}\n            index={location?.tileId === tile.id ? location?.value : undefined}\n          />\n        ))}\n      </div>\n\n      <Space className=\"space-container\" align=\"center\">\n        <ContinueButton\n          disabled={location?.tileId === undefined}\n          onClick={() => updateSelections({ locationTile: location?.tileId, locationIndex: location?.value })}\n        />\n      </Space>\n    </Step>\n  );\n}\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\nimport { CloudUploadOutlined } from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { Translate } from 'components/language';\nimport { ReadyPlayersBar } from 'components/players';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { SceneTile } from './components/SceneTile';\nimport { SelectedItems } from './components/SelectedItems';\n\ntype StepReviewCrimeProps = {\n  items: ItemsDict;\n  selections: PlainObject;\n  onSubmitCrime: GenericFunction;\n  locationTiles: SceneTile[];\n  causeOfDeathTile: SceneTile;\n  reasonForEvidenceTile: SceneTile;\n  updateSelection: GenericFunction;\n  players: GamePlayers;\n};\n\nexport function StepReviewCrime({\n  items,\n  causeOfDeathTile,\n  reasonForEvidenceTile,\n  locationTiles,\n  selections,\n  onSubmitCrime,\n  updateSelection,\n  players,\n}: StepReviewCrimeProps) {\n  const { translate } = useLanguage();\n\n  const locationTile = locationTiles.find((location) => location.id === selections.locationTile);\n\n  return (\n    <Step>\n      <Title>\n        <Translate pt=\"Seu crime tá bom?\" en=\"Is your crime alright?\" />\n      </Title>\n      <Instruction contained>\n        <Translate pt={<>Revise seu crime.</>} en={<>Recap your crime.</>} />\n      </Instruction>\n\n      <SelectedItems items={items} weaponId={selections.weaponId} evidenceId={selections.evidenceId} />\n\n      <div className=\"h-scene-tiles-list\">\n        <SceneTile\n          tile={causeOfDeathTile}\n          index={selections.causeOfDeath}\n          onSelectValue={(payload) => updateSelection({ causeOfDeath: payload.value })}\n        />\n        <SceneTile\n          tile={reasonForEvidenceTile}\n          index={selections.reasonForEvidence}\n          onSelectValue={(payload) => updateSelection({ reasonForEvidence: payload.value })}\n        />\n        <SceneTile\n          tile={locationTile!}\n          index={selections.locationIndex}\n          onSelectValue={(payload) =>\n            updateSelection({ locationTile: payload.tileId, locationIndex: payload.value })\n          }\n        />\n      </div>\n\n      <Space className=\"space-container\" align=\"center\">\n        <Button type=\"primary\" size=\"large\" onClick={onSubmitCrime} icon={<CloudUploadOutlined />}>\n          <Translate pt=\"Enviar\" en=\"Submit\" />\n        </Button>\n      </Space>\n\n      <ReadyPlayersBar\n        players={players}\n        readyText={translate('Já cometi meu crime', \"I'm done committing my crime\")}\n        readyTextPlural={translate('Já cometemos nossos crimes', \"We're done committing our crimes\")}\n      />\n    </Step>\n  );\n}\n","import { useState } from 'react';\n// Components\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { SceneTile } from './components/SceneTile';\nimport { SelectedItems } from './components/SelectedItems';\nimport { ContinueButton } from './components/ContinueButton';\nimport { Space } from 'antd';\n\ntype StepReasonForEvidenceProps = {\n  items: ItemsDict;\n  selections: PlainObject;\n  updateSelections: GenericFunction;\n  reasonForEvidenceTile: SceneTile;\n};\n\nexport function StepReasonForEvidence({\n  items,\n  selections,\n  updateSelections,\n  reasonForEvidenceTile,\n}: StepReasonForEvidenceProps) {\n  const [reasonForEvidenceIndex, setReasonForEvidenceIndex] = useState<number>();\n\n  const onSelectItem = (payload: SceneTilePayload) => {\n    setReasonForEvidenceIndex(payload.value);\n  };\n\n  return (\n    <Step>\n      <Title>\n        <Translate pt=\"Qual foi seu último crime?\" en=\"How was your last crime?\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Baseado somente em seu objeto (carta vermelha), selecione o que o objeto significa para o crime.\n            </>\n          }\n          en={\n            <>Based solely on the object (red card) you've chosen, select the meaning of it to the crime.</>\n          }\n        />\n      </Instruction>\n\n      <Space className=\"space-container\" align=\"center\">\n        <SelectedItems\n          items={items}\n          weaponId={selections.weaponId}\n          evidenceId={selections.evidenceId}\n          fadeWeapon\n        />\n\n        <SceneTile tile={reasonForEvidenceTile} onSelectValue={onSelectItem} index={reasonForEvidenceIndex} />\n      </Space>\n\n      <Space className=\"space-container\" align=\"center\">\n        <ContinueButton\n          disabled={reasonForEvidenceIndex === undefined}\n          onClick={() => updateSelections({ reasonForEvidence: reasonForEvidenceIndex })}\n        />\n      </Space>\n    </Step>\n  );\n}\n","import { useState } from 'react';\n// State & Hooks\nimport { useIsUserReady } from 'hooks/useIsUserReady';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useMock } from 'hooks/useMock';\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\nimport { useOnSubmitCrimeAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\nimport { mockCrime } from './utils/mock';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { RoundAnnouncement } from 'components/round';\nimport { ImageCardPreloadHand } from 'components/cards';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { WelcomeMessage } from './components/RulesBlobs';\nimport { StepItemsSelection } from './StepItemsSelection';\nimport { StepCauseOfDeathSelection } from './StepCauseOfDeathSelection';\nimport { StepLocationSelection } from './StepLocationSelection';\nimport { StepReviewCrime } from './StepReviewCrime';\nimport { StepReasonForEvidence } from './StepReasonForEvidence';\nimport { EventIcon } from 'components/icons/EventIcon';\nimport { SkullIcon } from 'components/icons/SkullIcon';\nimport { CrimeSceneIcon } from 'components/icons/CrimeSceneIcon';\nimport { LocationIcon } from 'components/icons/LocationIcon';\nimport { CrimeTapeIcon } from 'components/icons/CrimeTapeIcon';\n\nfunction PhaseCrimeSelection({ players, state, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, setStep, goToNextStep } = useStep(0);\n  const user = useUser(players);\n  const isUserReady = useIsUserReady(players, state);\n  const [selections, setSelections] = useState<SubmitCrimePayload>({});\n\n  const onSubmitCrimeRequest = useOnSubmitCrimeAPIRequest(setStep);\n\n  const onSubmitCrime = () => {\n    onSubmitCrimeRequest(selections);\n  };\n\n  const updateSelections = (payload: SubmitCrimePayload) => {\n    setSelections((prevState: SubmitCrimePayload) => ({ ...prevState, ...payload }));\n    goToNextStep();\n  };\n\n  const updateSelection = (payload: SubmitCrimePayload) => {\n    setSelections((prevState: SubmitCrimePayload) => ({ ...prevState, ...payload }));\n  };\n\n  useMock(() => {\n    if (step === 1) {\n      onSubmitCrimeRequest(mockCrime(state.groupedItems[user.itemGroupIndex]));\n    }\n  }, [step]);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.CRIMES_HEDIONDOS.CRIME_SELECTION}>\n      <StepSwitcher step={step} conditions={[!isUserReady, !isUserReady, !isUserReady]} players={players}>\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state?.round}\n          onPressButton={goToNextStep}\n          buttonText=\" \"\n          time={5}\n          circleColor=\"black\"\n        >\n          <ImageCardPreloadHand hand={Object.keys(state.items)} />\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <PhaseAnnouncement\n          icon={<EventIcon />}\n          title={translate('A Convenção', 'The Convention')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          duration={30}\n        >\n          <WelcomeMessage />\n        </PhaseAnnouncement>\n\n        {/* Step 2 */}\n        <StepItemsSelection\n          user={user}\n          groupedItems={state.groupedItems}\n          items={state.items}\n          selections={selections}\n          updateSelections={updateSelections}\n        />\n\n        {/* Step 3 */}\n        <PhaseAnnouncement\n          icon={<SkullIcon />}\n          title={translate('Causa da Morte', 'Cause of Death')}\n          onClose={goToNextStep}\n          duration={5}\n        >\n          <Instruction>\n            <Translate pt=\"Como a vítima morreu?\" en=\"How did the victim die?\" />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 4 */}\n        <StepCauseOfDeathSelection\n          items={state.items}\n          causeOfDeathTile={state.causeOfDeathTile}\n          selections={selections}\n          updateSelections={updateSelections}\n        />\n\n        {/* Step 5 */}\n        <PhaseAnnouncement\n          icon={<CrimeSceneIcon />}\n          title={translate('Evidências?', 'Evidence?')}\n          onClose={goToNextStep}\n          duration={5}\n        >\n          <Instruction>\n            <Translate\n              pt=\"Conte-nos sobre o objeto que você escolheu.\"\n              en=\"Tell us about the object you selected.\"\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 6 */}\n        <StepReasonForEvidence\n          items={state.items}\n          reasonForEvidenceTile={state.reasonForEvidenceTile}\n          selections={selections}\n          updateSelections={updateSelections}\n        />\n\n        {/* Step 7 */}\n        <PhaseAnnouncement\n          icon={<LocationIcon />}\n          title={translate('Local do Crime', 'Crime Location')}\n          onClose={goToNextStep}\n          duration={5}\n        >\n          <Instruction>\n            <Translate pt=\"Onde que foi?\" en=\"Where was it?\" />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 8 */}\n        <StepLocationSelection\n          user={user}\n          items={state.items}\n          groupedItems={state.groupedItems}\n          locationTiles={state.locationTiles}\n          selections={selections}\n          updateSelections={updateSelections}\n        />\n\n        {/* Step 9 */}\n        <PhaseAnnouncement\n          icon={<CrimeTapeIcon />}\n          title={translate('Revisão', 'Review')}\n          onClose={goToNextStep}\n          duration={5}\n        />\n\n        {/* Step 10 */}\n        <StepReviewCrime\n          items={state.items}\n          causeOfDeathTile={state.causeOfDeathTile}\n          reasonForEvidenceTile={state.reasonForEvidenceTile}\n          locationTiles={state.locationTiles}\n          selections={selections}\n          onSubmitCrime={onSubmitCrime}\n          updateSelection={updateSelection}\n          players={players}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseCrimeSelection;\n","import { CRIMES_HEDIONDOS_API } from 'services/adapters';\nimport { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\n\nexport function useOnSubmitCrimeAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: CRIMES_HEDIONDOS_API.submitAction,\n    actionName: 'submit-crime',\n    onBeforeCall: () => setStep(11),\n    onError: () => setStep(9),\n    successMessage: translate('Crime enviado com sucesso', 'Crime submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar seu crime',\n      'Oops, the application failed to send your crime'\n    ),\n  });\n\n  return (payload: SubmitCrimePayload) => {\n    request({\n      action: 'SUBMIT_CRIME',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitMarkAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: CRIMES_HEDIONDOS_API.submitAction,\n    actionName: 'submit-mark',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(2),\n    successMessage: translate(\n      'Nova informação enviadas com sucesso',\n      'New information submitted successfully'\n    ),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar a nova informação',\n      'Oops, the application failed to send the new information'\n    ),\n  });\n\n  return (payload: SubmitMarkPayload) => {\n    request({\n      action: 'SUBMIT_MARK',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitGuessesAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: CRIMES_HEDIONDOS_API.submitAction,\n    actionName: 'submit-guesses',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate('Respostas enviadas com sucesso', 'Guesses submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar suas respostas',\n      'Oops, the application failed to send your guesses'\n    ),\n  });\n\n  return (payload: SubmitGuessesPayload) => {\n    request({\n      action: 'SUBMIT_GUESSES',\n      ...payload,\n    });\n  };\n}\n","// This icon file is generated automatically.\nvar ClockCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm176.5 585.7l-28.6 39a7.99 7.99 0 01-11.2 1.7L483.3 569.8a7.92 7.92 0 01-3.3-6.5V288c0-4.4 3.6-8 8-8h48.1c4.4 0 8 3.6 8 8v247.5l142.6 103.1c3.6 2.5 4.4 7.5 1.8 11.1z\" } }] }, \"name\": \"clock-circle\", \"theme\": \"filled\" };\nexport default ClockCircleFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ClockCircleFilledSvg from \"@ant-design/icons-svg/es/asn/ClockCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ClockCircleFilled = function ClockCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ClockCircleFilledSvg\n  }));\n};\n\nClockCircleFilled.displayName = 'ClockCircleFilled';\nexport default /*#__PURE__*/React.forwardRef(ClockCircleFilled);","// This icon file is generated automatically.\nvar SafetyOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"0 0 1024 1024\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64L128 192v384c0 212.1 171.9 384 384 384s384-171.9 384-384V192L512 64zm312 512c0 172.3-139.7 312-312 312S200 748.3 200 576V246l312-110 312 110v330z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M378.4 475.1a35.91 35.91 0 00-50.9 0 35.91 35.91 0 000 50.9l129.4 129.4 2.1 2.1a33.98 33.98 0 0048.1 0L730.6 434a33.98 33.98 0 000-48.1l-2.8-2.8a33.98 33.98 0 00-48.1 0L483 579.7 378.4 475.1z\" } }] }, \"name\": \"safety\", \"theme\": \"outlined\" };\nexport default SafetyOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SafetyOutlinedSvg from \"@ant-design/icons-svg/es/asn/SafetyOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar SafetyOutlined = function SafetyOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: SafetyOutlinedSvg\n  }));\n};\n\nSafetyOutlined.displayName = 'SafetyOutlined';\nexport default /*#__PURE__*/React.forwardRef(SafetyOutlined);","// This icon file is generated automatically.\nvar GiftOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M880 310H732.4c13.6-21.4 21.6-46.8 21.6-74 0-76.1-61.9-138-138-138-41.4 0-78.7 18.4-104 47.4-25.3-29-62.6-47.4-104-47.4-76.1 0-138 61.9-138 138 0 27.2 7.9 52.6 21.6 74H144c-17.7 0-32 14.3-32 32v200c0 4.4 3.6 8 8 8h40v344c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V550h40c4.4 0 8-3.6 8-8V342c0-17.7-14.3-32-32-32zm-334-74c0-38.6 31.4-70 70-70s70 31.4 70 70-31.4 70-70 70h-70v-70zm-138-70c38.6 0 70 31.4 70 70v70h-70c-38.6 0-70-31.4-70-70s31.4-70 70-70zM180 482V378h298v104H180zm48 68h250v308H228V550zm568 308H546V550h250v308zm48-376H546V378h298v104z\" } }] }, \"name\": \"gift\", \"theme\": \"outlined\" };\nexport default GiftOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport GiftOutlinedSvg from \"@ant-design/icons-svg/es/asn/GiftOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar GiftOutlined = function GiftOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: GiftOutlinedSvg\n  }));\n};\n\nGiftOutlined.displayName = 'GiftOutlined';\nexport default /*#__PURE__*/React.forwardRef(GiftOutlined);","// This icon file is generated automatically.\nvar ExceptionOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm376 116c-119.3 0-216 96.7-216 216s96.7 216 216 216 216-96.7 216-216-96.7-216-216-216zm107.5 323.5C750.8 868.2 712.6 884 672 884s-78.8-15.8-107.5-44.5C535.8 810.8 520 772.6 520 732s15.8-78.8 44.5-107.5C593.2 595.8 631.4 580 672 580s78.8 15.8 107.5 44.5C808.2 653.2 824 691.4 824 732s-15.8 78.8-44.5 107.5zM640 812a32 32 0 1064 0 32 32 0 10-64 0zm12-64h40c4.4 0 8-3.6 8-8V628c0-4.4-3.6-8-8-8h-40c-4.4 0-8 3.6-8 8v112c0 4.4 3.6 8 8 8zM440 852H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"exception\", \"theme\": \"outlined\" };\nexport default ExceptionOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ExceptionOutlinedSvg from \"@ant-design/icons-svg/es/asn/ExceptionOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar ExceptionOutlined = function ExceptionOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ExceptionOutlinedSvg\n  }));\n};\n\nExceptionOutlined.displayName = 'ExceptionOutlined';\nexport default /*#__PURE__*/React.forwardRef(ExceptionOutlined);","// Components\nimport { ItemCard } from './ItemCard';\n\ntype ItemCardEmptyProps = {\n  cardWidth: number;\n  cardType: 'evidence' | 'weapon';\n};\n\nexport function ItemCardEmpty({ cardWidth, cardType }: ItemCardEmptyProps) {\n  return (\n    <ItemCard\n      item={{\n        id: `dmhk-${cardType === 'evidence' ? 'ev' : 'wp'}-000`,\n        type: cardType,\n        name: {\n          pt: '?',\n          en: '?',\n        },\n      }}\n      cardWidth={cardWidth}\n      isSelected={false}\n      preview={false}\n    />\n  );\n}\n","// This icon file is generated automatically.\nvar WarningFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M955.7 856l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48zM480 416c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v184c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V416zm32 352a48.01 48.01 0 010-96 48.01 48.01 0 010 96z\" } }] }, \"name\": \"warning\", \"theme\": \"filled\" };\nexport default WarningFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport WarningFilledSvg from \"@ant-design/icons-svg/es/asn/WarningFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar WarningFilled = function WarningFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: WarningFilledSvg\n  }));\n};\n\nWarningFilled.displayName = 'WarningFilled';\nexport default /*#__PURE__*/React.forwardRef(WarningFilled);","import clsx from 'clsx';\n// Ant Design Resources\nimport {\n  CheckCircleFilled,\n  CloseCircleFilled,\n  LockFilled,\n  MinusCircleFilled,\n  QuestionCircleFilled,\n  WarningFilled,\n} from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\n\ntype CrimeGuessStatusProps = {\n  status: string;\n  withDescription?: boolean;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n};\n\nexport function CrimeGuessStatus({ status, withDescription = false, className = '' }: CrimeGuessStatusProps) {\n  const baseClass = 'crime-guess-status';\n\n  switch (status) {\n    case 'LOCKED':\n      return (\n        <span className={clsx(baseClass, `${baseClass}--${status}`, className)}>\n          <LockFilled color=\"gray\" />\n          <Translate pt=\"TRAVADO\" en=\"LOCKED\" />\n          {withDescription && (\n            <Translate\n              pt=\": Você já tinha adivinhado esse corretamente\"\n              en=\": You already guessed this one correctly\"\n            />\n          )}\n        </span>\n      );\n    case 'CORRECT':\n      return (\n        <span className={clsx(baseClass, `${baseClass}--${status}`, className)}>\n          <CheckCircleFilled color=\"green\" />\n          <Translate pt=\"CORRETO\" en=\"CORRECT\" />\n          {withDescription && (\n            <Translate pt=\": Você acertou arma e objeto\" en=\": You got the weapon and object correctly\" />\n          )}\n        </span>\n      );\n    case 'HALF':\n      return (\n        <span className={clsx(baseClass, `${baseClass}--${status}`, className)}>\n          <MinusCircleFilled />\n          <Translate pt=\"SOMENTE UM\" en=\"ONE ONLY\" />\n          {withDescription && (\n            <Translate pt=\": Um dos items está correto\" en=\": One of the items is correct\" />\n          )}\n        </span>\n      );\n    case 'WRONG':\n      return (\n        <span className={clsx(baseClass, `${baseClass}--${status}`, className)}>\n          <CloseCircleFilled color=\"red\" />\n          <Translate pt=\"ERRADO\" en=\"WRONG\" />\n          {withDescription && (\n            <Translate\n              pt=\": Você errou ambos arma e objeto, mas está no quadrante certo\"\n              en=\": You got both weapon and object wrong but you are in the right group\"\n            />\n          )}\n        </span>\n      );\n    case 'WRONG_GROUP':\n      return (\n        <span className={clsx(baseClass, `${baseClass}--${status}`, className)}>\n          <WarningFilled color=\"red\" />\n          <Translate pt=\"GRUPO ERRADO\" en=\"WRONG GROUP\" />\n          {withDescription && (\n            <Translate\n              pt=\": Você é tão burro que você escolheu items no grupo errado\"\n              en=\": You're so dumb you chose items in the wrong group\"\n            />\n          )}\n        </span>\n      );\n    default:\n      return (\n        <span className={clsx(baseClass, `${baseClass}--${status}`, className)}>\n          <QuestionCircleFilled />\n          <Translate pt=\"?\" en=\"?\" />\n          );\n          {withDescription && (\n            <Translate pt=\": Recebido status desconhecido\" en=\": Received unknown guess status\" />\n          )}\n        </span>\n      );\n  }\n}\n","import { useState } from 'react';\nimport clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Tooltip } from 'antd';\nimport {\n  CheckCircleFilled,\n  ClockCircleFilled,\n  EnvironmentOutlined,\n  ExceptionOutlined,\n  GiftOutlined,\n  LockFilled,\n  SafetyOutlined,\n} from '@ant-design/icons';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Utils\nimport { getAvatarColorById } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { ItemCard } from './ItemCard';\nimport { ItemCardEmpty } from './ItemCardEmpty';\nimport { CrimeGuessStatus } from './CrimeGuessStatus';\n\nconst CARD_WIDTH = 100;\n\ntype CrimeProps = {\n  history?: GuessHistoryEntry[];\n  crime: Crime;\n  items: ItemsDict;\n  player: GamePlayer;\n  scenes: ScenesDict;\n  scenesOrder: string[];\n  selectedWeaponId?: CardId;\n  selectedEvidenceId?: CardId;\n  isLocked?: boolean;\n};\n\nexport function Crime({\n  crime,\n  player,\n  scenesOrder,\n  scenes,\n  selectedWeaponId,\n  selectedEvidenceId,\n  history,\n  items,\n  isLocked,\n}: CrimeProps) {\n  const [historyEntryIndex, setHistoryEntryIndex] = useState(-1);\n  const isComplete = Boolean(selectedWeaponId && selectedWeaponId);\n\n  const activeWeaponId =\n    historyEntryIndex >= 0 && history ? history[historyEntryIndex].weaponId : selectedWeaponId;\n\n  const evidenceWeaponId =\n    historyEntryIndex >= 0 && history ? history[historyEntryIndex].evidenceId : selectedEvidenceId;\n\n  const color = getAvatarColorById(player.avatarId);\n  const hasHistory = history && history.length;\n\n  return (\n    <div className=\"h-crime\">\n      <div className=\"h-crime__player\" style={{ backgroundColor: color }}>\n        <span className=\"h-crime__player-avatar\">\n          <Avatar id={player.avatarId} />\n        </span>\n        <span className=\"h-crime__player-name\">{player.name}</span>\n      </div>\n\n      <div className=\"h-crime__scenes\">\n        {scenesOrder\n          .filter((sceneId) => crime.scenes[sceneId] !== undefined)\n          .map((sceneId) => {\n            const scene = scenes[sceneId];\n\n            return (\n              <CrimeScene\n                key={`crime-scene-${sceneId}-by-${crime.playerId}`}\n                scene={scene}\n                playerIndex={crime.scenes[sceneId]}\n              />\n            );\n          })}\n      </div>\n\n      <div className=\"h-crime__history\" style={{ borderColor: hasHistory ? color : 'transparent' }}>\n        {hasHistory && (\n          <>\n            <div className=\"h-crime__history-header\">\n              <Tooltip\n                title={\n                  <Translate\n                    pt=\"Histórico: passe o mouse nas rodadas\"\n                    en=\"History: hover the round numbers\"\n                  />\n                }\n              >\n                <ClockCircleFilled />\n              </Tooltip>\n            </div>\n            {history?.map((_, index) => {\n              return (\n                <Button\n                  key={`history-entry-${index}`}\n                  ghost\n                  shape=\"circle\"\n                  size=\"small\"\n                  onMouseOver={() => setHistoryEntryIndex(index)}\n                  onMouseLeave={() => setHistoryEntryIndex(-1)}\n                >\n                  {index + 1}\n                </Button>\n              );\n            })}\n          </>\n        )}\n      </div>\n\n      <div className=\"h-crime-selections\">\n        {activeWeaponId ? (\n          <ItemCard item={items[activeWeaponId]} cardWidth={CARD_WIDTH} preview />\n        ) : (\n          <ItemCardEmpty cardWidth={CARD_WIDTH} cardType=\"weapon\" />\n        )}\n\n        {evidenceWeaponId ? (\n          <ItemCard item={items[evidenceWeaponId]} cardWidth={CARD_WIDTH} preview />\n        ) : (\n          <ItemCardEmpty cardWidth={CARD_WIDTH} cardType=\"evidence\" />\n        )}\n\n        <div className=\"h-crime-selections__status\">\n          {historyEntryIndex >= 0 && history && history[historyEntryIndex] && (\n            <CrimeGuessStatus status={history[historyEntryIndex].status} />\n          )}\n          {historyEntryIndex === -1 && isLocked && <CrimeGuessStatus status=\"LOCKED\" />}\n        </div>\n      </div>\n\n      <div className=\"h-crime__player\" style={{ backgroundColor: isComplete ? color : undefined }}>\n        {isLocked && <LockFilled />}\n        {!isLocked && isComplete && <CheckCircleFilled />}\n      </div>\n    </div>\n  );\n}\n\ntype CrimeSceneProps = {\n  scene: SceneTile;\n  playerIndex: number;\n};\n\nfunction CrimeScene({ scene, playerIndex }: CrimeSceneProps) {\n  const { language } = useLanguage();\n  return (\n    <li className={clsx('h-crime-scene', `h-crime-scene--${scene.type}`)}>\n      <div className={clsx('h-crime-scene__label', `h-crime-scene__label--${scene.type}`)}>\n        <CrimeSceneIcon type={scene.type} /> {scene.title[language]}\n      </div>\n      <div className=\"h-crime-scene__value\">{scene.values[playerIndex][language]}</div>\n    </li>\n  );\n}\n\ntype CrimeSceneIconProps = {\n  type: string;\n};\n\nfunction CrimeSceneIcon({ type }: CrimeSceneIconProps) {\n  switch (type) {\n    case 'cause':\n      return <SafetyOutlined />;\n    case 'evidence':\n      return <GiftOutlined />;\n    case 'location':\n      return <EnvironmentOutlined />;\n    default:\n      return <ExceptionOutlined />;\n  }\n}\n","// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { ItemCard } from './ItemCard';\n\ntype GroupedItemsBoardProps = {\n  groupedItems: GroupedItems;\n  items: ItemsDict;\n  weaponId?: string;\n  evidenceId?: string;\n};\n\nexport function GroupedItemsBoard({ items, weaponId, evidenceId, groupedItems }: GroupedItemsBoardProps) {\n  const cardWidth = useCardWidth(12, 8, 30, 200);\n  return (\n    <ul className=\"h-grouped-items-board\">\n      {Object.values(groupedItems).map((group, index) => (\n        <li key={`group-${index}`}>\n          <ul className=\"h-grouped-items-board__group\">\n            {group.map((itemId) => (\n              <li key={itemId}>\n                <ItemCard\n                  item={items[itemId]}\n                  cardWidth={cardWidth}\n                  isSelected={[weaponId, evidenceId].includes(itemId)}\n                />\n              </li>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, Collapse, Space } from 'antd';\n// Components\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Crime } from './components/Crime';\nimport { GroupedItemsBoard } from './components/GroupedItemsBoard';\nimport { SceneTile } from './components/SceneTile';\n\ntype StepNewSceneProps = {\n  user: GamePlayer;\n  items: ItemsDict;\n  groupedItems: GroupedItems;\n  onSubmitMark: GenericFunction;\n  sceneTile: SceneTile;\n  crimes: Crime[];\n  scenes: ScenesDict;\n  scenesOrder: string[];\n  players: GamePlayers;\n};\n\nexport function StepNewScene({\n  user,\n  items,\n  groupedItems,\n  onSubmitMark,\n  sceneTile,\n  crimes,\n  players,\n  scenes,\n  scenesOrder,\n}: StepNewSceneProps) {\n  const [sceneMarkIndex, setSceneMarkIndex] = useState<number>();\n\n  const onSelectItem = (payload: SceneTilePayload) => {\n    setSceneMarkIndex(payload.value);\n  };\n\n  const crime = crimes.find((crime) => crime.playerId === user.id);\n\n  return (\n    <Step>\n      <Title>\n        <Translate pt=\"Dê mais detalhes do crime\" en=\"Give us more details\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Baseado em suas cartas, selecione uma opção na nova carta de detalhes da Cena do Crime abaixo.\n            </>\n          }\n          en={<>Based on your cards, select an option in the new Scene card below.</>}\n        />\n      </Instruction>\n\n      <Collapse>\n        <Collapse.Panel\n          key=\"weapons-evidences\"\n          header={\n            <Translate\n              pt=\"Clique para ver todas Armas e Evidências\"\n              en=\"Click to see all Weapons and Evidence\"\n            />\n          }\n        >\n          <GroupedItemsBoard\n            groupedItems={groupedItems}\n            items={items}\n            weaponId={user.weaponId}\n            evidenceId={user.evidenceId}\n          />\n        </Collapse.Panel>\n      </Collapse>\n\n      <div className=\"\">\n        <Crime\n          key={`crime-by-${crime!.playerId}`}\n          crime={crime!}\n          scenes={scenes}\n          scenesOrder={scenesOrder}\n          items={items}\n          player={user}\n          selectedWeaponId={user.weaponId}\n          selectedEvidenceId={user.evidenceId}\n        />\n      </div>\n\n      <SceneTile tile={sceneTile} onSelectValue={onSelectItem} index={sceneMarkIndex} />\n\n      <Space className=\"space-container\" align=\"center\">\n        <Button\n          type=\"primary\"\n          size=\"large\"\n          disabled={sceneMarkIndex === undefined}\n          onClick={() => onSubmitMark({ sceneIndex: sceneMarkIndex })}\n        >\n          <Translate pt=\"Enviar\" en=\"Send\" />\n        </Button>\n      </Space>\n    </Step>\n  );\n}\n","// State & Hooks\nimport { useMock } from 'hooks/useMock';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\nimport { useOnSubmitMarkAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\nimport { mockSceneMark } from './utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { RoundAnnouncement } from 'components/round';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { StepNewScene } from './StepNewScene';\nimport { LoupeIcon } from 'components/icons/LoupeIcon';\n\nfunction PhaseSceneMarking({ players, state, info }: PhaseProps) {\n  const { language, translate } = useLanguage();\n  const user = useUser(players);\n  const { step, setStep, goToNextStep } = useStep(0);\n\n  const onSubmitMark = useOnSubmitMarkAPIRequest(setStep);\n\n  useMock(() => {\n    onSubmitMark({ sceneIndex: mockSceneMark() });\n  }, []);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.CRIMES_HEDIONDOS.SCENE_MARKING}>\n      <StepSwitcher step={step} conditions={[!user.ready, !user.ready, !user.ready]} players={players}>\n        {/* Step 0 */}\n        <RoundAnnouncement round={state?.round} onPressButton={goToNextStep} buttonText=\" \" time={5} />\n\n        {/* Step 1 */}\n        <PhaseAnnouncement\n          icon={<LoupeIcon />}\n          title={translate('Nova pista', 'New clue')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <Translate\n              pt=\"Compartilhe mais uma pista sobre seu crime:\"\n              en=\"Share one more piece of information about your crime:\"\n            />\n            <br />\n            {state.currentScene.description[language]}\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 2 */}\n        <StepNewScene\n          user={user}\n          groupedItems={state.groupedItems}\n          items={state.items}\n          onSubmitMark={onSubmitMark}\n          sceneTile={state.currentScene}\n          scenes={state.scenes}\n          scenesOrder={state.scenesOrder}\n          crimes={state.crimes}\n          players={players}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseSceneMarking;\n","import { orderBy } from 'lodash';\nimport { getLastItem } from 'utils/helpers';\n\ntype SplitWeaponsAndEvidence = {\n  weapons: HCard[];\n  evidences: HCard[];\n};\nexport const splitWeaponsAndEvidence = (items: ItemsDict, language: Language): SplitWeaponsAndEvidence => {\n  const { weapons, evidences } = Object.values(items).reduce(\n    (acc: PlainObject, item) => {\n      if (item.type === 'weapon') {\n        acc.weapons.push(item);\n      } else {\n        acc.evidences.push(item);\n      }\n      return acc;\n    },\n    {\n      weapons: [],\n      evidences: [],\n    }\n  );\n\n  const sortedWeapons = orderBy(weapons, [`name.${language}`], ['asc']);\n  const sortedEvidences = orderBy(evidences, [`name.${language}`], ['asc']);\n\n  return {\n    weapons: sortedWeapons,\n    evidences: sortedEvidences,\n  };\n};\n\nexport const getHistory = (playerHistory: HHistory, activePlayerId: PlayerId) => {\n  return playerHistory?.[activePlayerId] ?? [];\n};\n\nexport const isHistoryLocked = (history: HHistory, activePlayerId: PlayerId): boolean => {\n  const lastGuessHistory = getLastItem(getHistory(history, activePlayerId));\n  return Boolean(['CORRECT', 'LOCKED'].includes(lastGuessHistory?.status));\n};\n\nexport const isEntryLocked = (historyEntry: GuessHistoryEntry): boolean => {\n  return Boolean(['CORRECT', 'LOCKED'].includes(historyEntry?.status));\n};\n\nexport const autoSelectCorrectGuesses = (history: HHistory) => {\n  const guesses: PlainObject = {};\n  Object.entries(history).forEach(([key, historyEntryArray]: any) => {\n    const historyEntry: GuessHistoryEntry = getLastItem(historyEntryArray);\n    if (['CORRECT', 'LOCKED'].includes(historyEntry.status)) {\n      guesses[key] = {\n        weaponId: historyEntry.weaponId,\n        evidenceId: historyEntry.evidenceId,\n        isComplete: true,\n      };\n    }\n  });\n  return guesses;\n};\n","import { orderBy } from 'lodash';\n// Helpers\nimport { isHistoryLocked } from '../utils/helpers';\n// Components\nimport { AvatarCard } from 'components/avatars';\nimport { TransparentButton } from 'components/buttons';\nimport { IconAvatar } from 'components/icons/IconAvatar';\nimport { LockIcon } from 'components/icons/LockIcon';\nimport { KnifeIcon } from 'components/icons/KnifeIcon';\n\ntype PlayersCardsProps = {\n  activePlayerId: PlayerId;\n  setActivePlayerId: GenericFunction;\n  guesses: PlainObject;\n  players: GamePlayers;\n  user: GamePlayer;\n  history: HHistory;\n};\n\nexport function PlayersCards({\n  activePlayerId,\n  setActivePlayerId,\n  players,\n  guesses,\n  user,\n  history,\n}: PlayersCardsProps) {\n  return (\n    <ul className=\"h-players-cards\">\n      {orderBy(Object.values(players), ['name']).map((player) => {\n        const isActive = activePlayerId === player.id;\n        const isComplete =\n          user.id === player.id || Boolean(guesses[player.id]?.weaponId && guesses[player.id]?.evidenceId);\n        const isLocked = isHistoryLocked(history, player.id);\n        return (\n          <li key={`player-card-${player.id}`}>\n            <TransparentButton onClick={() => setActivePlayerId(player.id)} active={isActive}>\n              <AvatarCard\n                size=\"small\"\n                player={player}\n                withName\n                replacementAvatar={\n                  (isLocked && <IconAvatar icon={<LockIcon />} className=\"h-players-cards__seal\" />) ||\n                  (isComplete && <IconAvatar icon={<KnifeIcon />} className=\"h-players-cards__seal\" />)\n                }\n              />\n            </TransparentButton>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\n// Components\nimport { TransparentButton } from 'components/buttons';\nimport { ItemCard } from './ItemCard';\n\nconst getEliminatedCard = (cardType: string) => ({\n  id: `dmhk-${cardType === 'ev' ? 'ev' : 'wp'}-xxx`,\n  type: cardType,\n  name: {\n    pt: 'x',\n    en: 'x',\n  },\n});\n\ntype SelectableGroupedItemsBoardProps = {\n  groupedItems: GroupedItems;\n  items: ItemsDict;\n  weaponId?: string;\n  evidenceId?: string;\n  onSelectItem: GenericFunction;\n  activeColor?: string;\n  isLocked?: boolean;\n  wrongGroups?: number[];\n};\n\nexport function SelectableGroupedItemsBoard({\n  items,\n  weaponId,\n  evidenceId,\n  groupedItems,\n  onSelectItem,\n  activeColor,\n  isLocked,\n  wrongGroups = [],\n}: SelectableGroupedItemsBoardProps) {\n  const cardWidth = useCardWidth(12, 8, 30, 200);\n\n  return (\n    <ul className=\"h-grouped-items-board\">\n      {Object.values(groupedItems).map((group, index) => {\n        const isGroupWrong = wrongGroups.includes(index);\n\n        return (\n          <li key={`group-${index}`}>\n            <ul\n              className=\"h-grouped-items-board__group\"\n              style={Boolean(activeColor) ? { borderColor: activeColor } : {}}\n            >\n              {group.map((itemId) => (\n                <li key={itemId}>\n                  <TransparentButton\n                    onClick={isLocked || isGroupWrong ? undefined : () => onSelectItem(itemId)}\n                  >\n                    <ItemCard\n                      item={isGroupWrong ? getEliminatedCard(itemId.split('-')[1]) : items[itemId]}\n                      cardWidth={cardWidth}\n                      isSelected={[weaponId, evidenceId].includes(itemId)}\n                      preview={false}\n                      activeColor={activeColor}\n                    />\n                  </TransparentButton>\n                </li>\n              ))}\n            </ul>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import { useEffect, useState } from 'react';\n// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Hooks\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { getAvatarColorById, getLastItem } from 'utils/helpers';\nimport { mockGuesses } from './utils/mock';\nimport { autoSelectCorrectGuesses, getHistory } from './utils/helpers';\n// Components\nimport { Crime } from './components/Crime';\nimport { PlayersCards } from './components/PlayersCards';\nimport { SelectableGroupedItemsBoard } from './components/SelectableGroupedItemsBoard';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { DebugOnly } from 'components/debug';\nimport { FloatingHand } from 'components/cards';\n\ntype StepGuessingProps = {\n  user: GamePlayer;\n  players: GamePlayers;\n  items: ItemsDict;\n  groupedItems: GroupedItems;\n  scenes: ScenesDict;\n  scenesOrder: string[];\n  crimes: Crime[];\n  onSubmitGuesses: GenericFunction;\n};\n\nexport function StepGuessing({\n  user,\n  groupedItems,\n  items,\n  players,\n  scenes,\n  scenesOrder,\n  crimes,\n  onSubmitGuesses,\n}: StepGuessingProps) {\n  const [guesses, setGuesses] = useState<PlainObject>({});\n  const [activePlayerId, setActivePlayerId] = useState<PlayerId>('');\n\n  // DEV: Auto guesses\n  useMock(() => {\n    onSubmitGuesses({ guesses: mockGuesses(groupedItems, players, user) });\n  }, []);\n\n  // If last guess was CORRECT or LOCK, auto-guess\n  useEffect(() => {\n    setGuesses((g) => ({ ...g, ...autoSelectCorrectGuesses(user.history) }));\n  }, [user]);\n\n  const onUpdateGuesses = (itemId: string) => {\n    if (activePlayerId && itemId) {\n      const guessObj = {\n        ...(guesses[activePlayerId] ?? {\n          weaponId: undefined,\n          evidenceId: undefined,\n          isComplete: false,\n        }),\n      };\n\n      const isWeapon = itemId.includes('wp');\n\n      if (isWeapon) {\n        guessObj.weaponId = itemId;\n      } else {\n        guessObj.evidenceId = itemId;\n      }\n\n      setGuesses((s: PlainObject) => ({\n        ...s,\n        [activePlayerId]: {\n          ...guessObj,\n          isComplete: Boolean(guessObj?.weaponId && guessObj?.evidenceId),\n        },\n      }));\n    }\n  };\n\n  const playerCount = Object.keys(players).length;\n  const isAllComplete =\n    Object.values(guesses).length === playerCount - 1 &&\n    Object.values(guesses).every((guess) => guess.weaponId && guess.evidenceId);\n  const activeCrime = crimes.find((crime) => crime.playerId === activePlayerId);\n  const isOwnCrime = activePlayerId === user.id;\n  const activePlayerGuesses = guesses?.[activePlayerId] ?? {};\n\n  const lastGuessHistory = getLastItem(getHistory(user.history, activePlayerId));\n  const isLocked = ['CORRECT', 'LOCKED'].includes(lastGuessHistory?.status);\n\n  // Active stuff\n  const { activeWeaponId, activeEvidenceId } = getActiveStuff(\n    isOwnCrime,\n    isLocked,\n    user,\n    activePlayerGuesses,\n    lastGuessHistory\n  );\n\n  return (\n    <Step>\n      <Title>\n        <Translate pt=\"Quais foram os crimes?\" en=\"What were the crimes?\" />\n      </Title>\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Selecione cada jogador abaixo, analise suas respostas sobre o crime, e selecione uma arma e um\n              objeto.\n              <br />O par sempre estará no mesmo quadrante, mas os objetos não são exclusivos e diferentes\n              crimes podem usar as mesmas cartas.\n              <br />\n              Crimes que já tem ambos selecionados são indicados por uma faca.\n            </>\n          }\n          en={\n            <>\n              Select each player below, analyze their answers about their crimes, then select a weapon and an\n              object.\n              <br />\n              The pair will always be in the same quadrant, but object are non-exclusive so different crimes\n              might use the same cards.\n              <br />\n              Crimes with both cards selected are indicated by a knife.\n            </>\n          }\n        />\n      </Instruction>\n\n      <DebugOnly dev>\n        <Space className=\"space-container\" align=\"center\">\n          <Button type=\"dashed\" ghost onClick={() => setGuesses(mockGuesses(groupedItems, players, user))}>\n            <Translate pt=\"Seleção Aleatória Semi-inteligente\" en=\"Semi-intelligent Random Selection\" />\n          </Button>\n        </Space>\n      </DebugOnly>\n\n      <PlayersCards\n        user={user}\n        activePlayerId={activePlayerId}\n        setActivePlayerId={setActivePlayerId}\n        players={players}\n        guesses={guesses}\n        history={user.history}\n      />\n\n      {isAllComplete && (\n        <Space className=\"space-container\" align=\"center\">\n          <Button\n            size=\"large\"\n            type=\"primary\"\n            disabled={!isAllComplete}\n            onClick={() => onSubmitGuesses({ guesses })}\n          >\n            <Translate pt=\"Enviar Respostas\" en=\"Send Guesses\" />\n          </Button>\n        </Space>\n      )}\n\n      <SelectableGroupedItemsBoard\n        items={items}\n        weaponId={activeWeaponId}\n        evidenceId={activeEvidenceId}\n        groupedItems={groupedItems}\n        onSelectItem={onUpdateGuesses}\n        activeColor={getAvatarColorById(players[activePlayerId]?.avatarId)}\n        isLocked={isOwnCrime || isLocked}\n        wrongGroups={user?.wrongGroups?.[activePlayerId] ?? []}\n      />\n\n      {activeCrime && (\n        <FloatingHand type=\"stats\">\n          <Crime\n            key={`crime-by-${activeCrime.playerId}`}\n            crime={activeCrime}\n            scenes={scenes}\n            scenesOrder={scenesOrder}\n            items={items}\n            history={user?.history[activeCrime.playerId] ?? []}\n            player={players[activeCrime.playerId]}\n            selectedWeaponId={activeWeaponId}\n            selectedEvidenceId={activeEvidenceId}\n            isLocked={isOwnCrime || isLocked}\n          />\n        </FloatingHand>\n      )}\n\n      {/* This makes sure people can open the floating hand and still see all ItemBoard */}\n      <div className=\"h-empty-space\"></div>\n    </Step>\n  );\n}\n\nconst getActiveStuff = (\n  isOwnCrime: boolean,\n  isLocked: boolean,\n  user: GamePlayer,\n  activePlayerGuesses: any,\n  lastGuessHistory: GuessHistoryEntry\n): { activeWeaponId: string; activeEvidenceId: string } => {\n  if (isOwnCrime) {\n    return {\n      activeWeaponId: user.weaponId,\n      activeEvidenceId: user.evidenceId,\n    };\n  }\n\n  if (isLocked) {\n    return {\n      activeWeaponId: lastGuessHistory.weaponId,\n      activeEvidenceId: lastGuessHistory.evidenceId,\n    };\n  }\n\n  return {\n    activeWeaponId: activePlayerGuesses.weaponId,\n    activeEvidenceId: activePlayerGuesses.evidenceId,\n  };\n};\n","// State & Hooks\nimport { useIsUserReady } from 'hooks/useIsUserReady';\nimport { useUser } from 'hooks/useUser';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitGuessesAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { GuessMessage } from './components/RulesBlobs';\nimport { StepGuessing } from './StepGuessing';\nimport { GuessIcon } from 'components/icons/GuessIcon';\n\nfunction PhaseGuessing({ players, state, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, setStep, goToNextStep } = useStep(0);\n  const user = useUser(players);\n  const isUserReady = useIsUserReady(players, state);\n\n  const onSubmitGuesses = useOnSubmitGuessesAPIRequest(setStep);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.CRIMES_HEDIONDOS.GUESSING}>\n      <StepSwitcher step={step} conditions={[!isUserReady, !isUserReady]} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<GuessIcon />}\n          title={translate('Tente Adivinhar', 'Try to guess')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <GuessMessage />\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepGuessing\n          user={user}\n          groupedItems={state.groupedItems}\n          items={state.items}\n          players={players}\n          scenes={state.scenes}\n          scenesOrder={state.scenesOrder}\n          crimes={state.crimes}\n          onSubmitGuesses={onSubmitGuesses}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseGuessing;\n","import { orderBy } from 'lodash';\n// Ant Design Resources\nimport { Table, Tooltip } from 'antd';\n// Components\nimport { AvatarName, Avatar } from 'components/avatars';\nimport { CrimeGuessStatus } from './CrimeGuessStatus';\nimport { IconAvatar } from 'components/icons/IconAvatar';\nimport { BoxCheckMarkIcon } from 'components/icons/BoxCheckMarkIcon';\nimport { BoxXIcon } from 'components/icons/BoxXIcon';\nimport { BoxMinusIcon } from 'components/icons/BoxMinusIcon';\nimport { BoxOneIcon } from 'components/icons/BoxOneIcon';\n\ntype ResultsTableProps = {\n  players: GamePlayers;\n  results: HResults;\n};\n\nexport function ResultsTable({ players, results }: ResultsTableProps) {\n  const columns = [\n    {\n      title: '',\n      dataIndex: 'playerId',\n      render: (playerId: string) => <AvatarName player={players[playerId]} size=\"small\" addressUser />,\n    },\n    ...orderBy(Object.keys(results)).map((playerId) => ({\n      title: <Avatar id={players[playerId].avatarId} size=\"small\" />,\n      dataIndex: playerId,\n      render: (status: string) => <ResultsTableCell status={status} />,\n    })),\n  ];\n\n  const data = orderBy(Object.entries(results))\n    .filter(([key, _]) => !players[key].bot)\n    .map(([key, result]) => {\n      return {\n        playerId: key,\n        ...result,\n      };\n    });\n\n  return <Table columns={columns} dataSource={data} pagination={false} size=\"small\" bordered />;\n}\n\ntype ResultsTableCellProps = {\n  status: string;\n};\n\nfunction ResultsTableCell({ status }: ResultsTableCellProps) {\n  switch (status) {\n    case 'LOCKED':\n    case 'CORRECT':\n      return (\n        <Tooltip title={<CrimeGuessStatus status={status} withDescription />} color=\"white\">\n          <IconAvatar icon={<BoxCheckMarkIcon />} shape=\"square\" alt={status} />\n        </Tooltip>\n      );\n    case 'HALF':\n      return (\n        <Tooltip title={<CrimeGuessStatus status={status} withDescription />} color=\"white\">\n          <IconAvatar icon={<BoxOneIcon />} shape=\"square\" alt={status} />\n        </Tooltip>\n      );\n    case 'WRONG':\n      return (\n        <Tooltip title={<CrimeGuessStatus status={status} withDescription />} color=\"white\">\n          <IconAvatar icon={<BoxMinusIcon />} shape=\"square\" alt={status} />\n        </Tooltip>\n      );\n    case 'WRONG_GROUP':\n      return (\n        <Tooltip title={<CrimeGuessStatus status={status} withDescription />} color=\"white\">\n          <IconAvatar icon={<BoxXIcon />} shape=\"square\" alt={status} />\n        </Tooltip>\n      );\n    default:\n      return <span>•</span>;\n  }\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, Collapse, Space } from 'antd';\nimport { TrophyOutlined } from '@ant-design/icons';\n// Utils\nimport { getAnimationClass, getLastItem } from 'utils/helpers';\nimport { isEntryLocked } from './utils/helpers';\n// Hooks\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Components\nimport { Crime } from './components/Crime';\nimport { GroupedItemsBoard } from './components/GroupedItemsBoard';\nimport { ScoringMessage } from './components/RulesBlobs';\nimport { PlayersCards } from './components/PlayersCards';\nimport { CrimeGuessStatus } from './components/CrimeGuessStatus';\nimport { ResultsTable } from './components/ResultsTable';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { PopoverRule } from 'components/rules';\nimport { TimedButton } from 'components/buttons';\n\ntype StepRevealProps = {\n  user: GamePlayer;\n  players: GamePlayers;\n  items: ItemsDict;\n  groupedItems: GroupedItems;\n  scenes: ScenesDict;\n  scenesOrder: string[];\n  crimes: Crime[];\n  onSeeRanking: GenericFunction;\n  round: GameRound;\n  results: HResults;\n  isFirstRunThrough: boolean;\n};\n\nexport function StepReveal({\n  user,\n  groupedItems,\n  items,\n  players,\n  scenes,\n  scenesOrder,\n  crimes,\n  onSeeRanking,\n  round,\n  results,\n  isFirstRunThrough,\n}: StepRevealProps) {\n  useTemporarilyHidePlayersBar();\n\n  const [activePlayerId, setActivePlayerId] = useState<PlayerId>('');\n\n  const playerCount = Object.keys(players).length;\n\n  const activeCrime = crimes.find((crime) => crime.playerId === activePlayerId);\n  const isOwnCrime = activePlayerId === user.id;\n  const history: GuessHistoryEntry[] = user.history?.[(activeCrime! ?? {})?.playerId] ?? [];\n  const latestHistoryEntry = getLastItem(history);\n  const isLocked = isEntryLocked(latestHistoryEntry);\n\n  return (\n    <Step>\n      <Title>\n        <Translate pt=\"Resultado\" en=\"Results\" />\n      </Title>\n\n      <PopoverRule content={<ScoringMessage round={round} />} />\n      <Instruction contained>\n        <Translate\n          pt={\n            <>\n              Veja aqui como todos os jogadores foram. Passe o mouse nos ícones para saber mais detalhes.\n              <br />\n              As colunas são os crimes e as linhas são os chutes dessa rodada de cada jogador.\n            </>\n          }\n          en={\n            <>\n              See how all players did. Hover the icons to see details.\n              <br />\n              The columns are the crimes and the rows are the guesses for each player.\n            </>\n          }\n        />\n        \n        <ResultsTable players={players} results={results} />\n        \n        <Translate\n          pt={\n            <>\n              Você acertou {user.correctCrimes} pares e está com um total (secreto) de{' '}\n              {user.score + user.secretScore} pontos.\n            </>\n          }\n          en={\n            <>\n              You guesses {user.correctCrimes} crimes and have a (secret) total of{' '}\n              {user.score + user.secretScore} points.\n            </>\n          }\n        />\n      </Instruction>\n\n      <Space className=\"space-container\" align=\"center\">\n        <Collapse>\n          <Collapse.Panel\n            key=\"weapons-evidences\"\n            header={<Translate pt=\" Ver todas Armas e Evidências\" en=\"See all Weapons and Evidence\" />}\n          >\n            <GroupedItemsBoard\n              items={items}\n              weaponId={user.weaponId}\n              evidenceId={user.evidenceId}\n              groupedItems={groupedItems}\n            />\n          </Collapse.Panel>\n        </Collapse>\n      </Space>\n\n      <PlayersCards\n        user={user}\n        activePlayerId={activePlayerId}\n        setActivePlayerId={setActivePlayerId}\n        players={players}\n        guesses={{}}\n        history={user.history}\n      />\n\n      {Boolean(activePlayerId) && (\n        <Instruction\n          contained\n          className={!isLocked && !isOwnCrime ? getAnimationClass('tada') : ''}\n          key={`instruction-status-${activePlayerId}`}\n        >\n          {Boolean(latestHistoryEntry) ? (\n            <CrimeGuessStatus status={latestHistoryEntry.status} withDescription />\n          ) : isOwnCrime ? (\n            <Translate pt=\"Este é o seu próprio crime\" en=\"This is your own crime\" />\n          ) : (\n            ''\n          )}\n        </Instruction>\n      )}\n\n      {activeCrime && (\n        <div\n          className={getAnimationClass('slideInUp', undefined, 'fast')}\n          key={`crime-by-${activeCrime.playerId}`}\n        >\n          <Crime\n            crime={activeCrime}\n            scenes={scenes}\n            scenesOrder={scenesOrder}\n            items={items}\n            history={user.history[activeCrime.playerId]}\n            player={players[activeCrime.playerId]}\n            selectedWeaponId={isOwnCrime ? user.weaponId : latestHistoryEntry.weaponId}\n            selectedEvidenceId={isOwnCrime ? user.evidenceId : latestHistoryEntry.evidenceId}\n            isLocked={isLocked}\n          />\n        </div>\n      )}\n\n      <Space className=\"space-container\" align=\"center\">\n        {isFirstRunThrough ? (\n          <TimedButton\n            onClick={onSeeRanking}\n            onExpire={onSeeRanking}\n            duration={Math.min(playerCount * 10, 60)}\n            icon={<TrophyOutlined />}\n          >\n            <Translate pt=\"Ver Ranking\" en=\"See Ranking\" />\n          </TimedButton>\n        ) : (\n          <Button onClick={onSeeRanking} icon={<TrophyOutlined />}>\n            <Translate pt=\"Ver Ranking\" en=\"See Ranking\" />\n          </Button>\n        )}\n      </Space>\n    </Step>\n  );\n}\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Components\nimport { AdminNextPhaseButton } from 'components/admin';\nimport { Translate } from 'components/language';\nimport { StepRankingWrapper } from 'components/ranking';\n\ntype StepRankingProps = {\n  ranking: GameRanking;\n  players: GamePlayers;\n  goToPreviousStep: GenericFunction;\n  round: GameRound;\n  lastRound?: boolean;\n};\n\nexport function StepRanking({ ranking, players, goToPreviousStep, round, lastRound }: StepRankingProps) {\n  const roundPoints = round.total - round.current + 1;\n\n  return (\n    <StepRankingWrapper\n      players={players}\n      ranking={ranking}\n      gainedPointsDescriptions={[\n        <Translate\n          pt={<>Pares corretos ganham {roundPoints} pontos nessa rodada. 1 ponto a menos na próxima.</>}\n          en={<>Correct pairs get {roundPoints} points this round. 1 point less next round.</>}\n        />,\n      ]}\n    >\n      <Space className=\"space-container\" align=\"center\">\n        <Button onClick={goToPreviousStep}>\n          <Translate pt=\"Ver resultado novamente\" en=\"See results again\" />\n        </Button>\n      </Space>\n      <AdminNextPhaseButton round={round} lastRound={lastRound} />\n    </StepRankingWrapper>\n  );\n}\n","import { useEffect, useState } from 'react';\n// State & Hooks\nimport { useIsUserReady } from 'hooks/useIsUserReady';\nimport { useUser } from 'hooks/useUser';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useStep } from 'hooks/useStep';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { StepReveal } from './StepReveal';\nimport { ScoringMessage } from './components/RulesBlobs';\nimport { StepRanking } from './StepRanking';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { RankIcon } from 'components/icons/RankIcon';\n\nfunction PhaseReveal({ players, state, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, goToNextStep, goToPreviousStep } = useStep(0);\n  const user = useUser(players);\n  const isUserReady = useIsUserReady(players, state);\n  const [isFirstRunThrough, setIsFirstRunThrough] = useState(true);\n\n  // Changes isFirstGalleryRunThrough property which disables controls, after the first gallery run through\n  useEffect(() => {\n    if (isFirstRunThrough && step > 1) {\n      setIsFirstRunThrough(false);\n    }\n  }, [step, isFirstRunThrough]);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.CRIMES_HEDIONDOS.REVEAL}>\n      <StepSwitcher step={step} conditions={[!isUserReady, !isUserReady, !isUserReady]} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<RankIcon />}\n          title={translate('Resultado', 'Results')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <ScoringMessage round={state.round} />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepReveal\n          user={user}\n          groupedItems={state.groupedItems}\n          items={state.items}\n          players={players}\n          scenes={state.scenes}\n          scenesOrder={state.scenesOrder}\n          crimes={state.crimes}\n          onSeeRanking={goToNextStep}\n          round={state.round}\n          results={state.results}\n          isFirstRunThrough={isFirstRunThrough}\n        />\n\n        {/* Step 2 */}\n        <StepRanking\n          ranking={state.ranking}\n          players={players}\n          goToPreviousStep={goToPreviousStep}\n          round={state.round}\n          lastRound={state?.lastRound}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseReveal;\n","import { orderBy } from 'lodash';\n// Hooks\nimport { useUser } from 'hooks/useUser';\n// Components\nimport { GameOverWrapper } from 'components/game-over';\nimport { Crime } from './components/Crime';\nimport { TrophyIcon } from 'components/icons/TrophyIcon';\n\nfunction PhaseGameOver({ state, players, info }: PhaseProps) {\n  const crimes: Crime[] = state.crimes;\n  const user = useUser(players);\n\n  return (\n    <GameOverWrapper info={info} state={state} announcementIcon={<TrophyIcon />}>\n      <ul>\n        {orderBy(crimes, ['playerId']).map((crime) => (\n          <Crime\n            key={`crime-by-${crime.playerId}`}\n            crime={crime}\n            items={state.items}\n            player={players[crime.playerId]}\n            scenes={state.scenes}\n            scenesOrder={state.scenesOrder}\n            selectedEvidenceId={crime.evidenceId}\n            selectedWeaponId={crime.weaponId}\n            history={user.history?.[crime.playerId]}\n          />\n        ))}\n      </ul>\n    </GameOverWrapper>\n  );\n}\n\nexport default PhaseGameOver;\n","import { ConfigProvider } from 'antd';\n// Constants\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport PhaseCrimeSelection from './PhaseCrimeSelection';\nimport PhaseSceneMarking from './PhaseSceneMarking';\nimport PhaseGuessing from './PhaseGuessing';\nimport PhaseReveal from './PhaseReveal';\nimport PhaseGameOver from './PhaseGameOver';\n\nConfigProvider.config({\n  theme: {\n    primaryColor: THEME_COLORS.BLOOD,\n  },\n});\n\nfunction SessionCrimesHediondos({ gameId }: SessionProps) {\n  function getActiveComponent(phase: string) {\n    switch (phase) {\n      case PHASES.DEFAULT.LOBBY:\n        return PhaseLobby;\n      case PHASES.DEFAULT.RULES:\n        return PhaseRules;\n      case PHASES.DEFAULT.SETUP:\n        return PhaseSetup;\n      case PHASES.CRIMES_HEDIONDOS.CRIME_SELECTION:\n        return PhaseCrimeSelection;\n      case PHASES.CRIMES_HEDIONDOS.SCENE_MARKING:\n        return PhaseSceneMarking;\n      case PHASES.CRIMES_HEDIONDOS.GUESSING:\n        return PhaseGuessing;\n      case PHASES.CRIMES_HEDIONDOS.REVEAL:\n        return PhaseReveal;\n      case PHASES.DEFAULT.GAME_OVER:\n        return PhaseGameOver;\n      default:\n        return PageError;\n    }\n  }\n\n  return (\n    <Session\n      gameId={gameId}\n      gameCollection={GAME_COLLECTION.CRIMES_HEDIONDOS}\n      getActiveComponent={getActiveComponent}\n    />\n  );\n}\n\nexport default SessionCrimesHediondos;\n","// This icon file is generated automatically.\nvar CloudUploadOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M518.3 459a8 8 0 00-12.6 0l-112 141.7a7.98 7.98 0 006.3 12.9h73.9V856c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V613.7H624c6.7 0 10.4-7.7 6.3-12.9L518.3 459z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M811.4 366.7C765.6 245.9 648.9 160 512.2 160S258.8 245.8 213 366.6C127.3 389.1 64 467.2 64 560c0 110.5 89.5 200 199.9 200H304c4.4 0 8-3.6 8-8v-60c0-4.4-3.6-8-8-8h-40.1c-33.7 0-65.4-13.4-89-37.7-23.5-24.2-36-56.8-34.9-90.6.9-26.4 9.9-51.2 26.2-72.1 16.7-21.3 40.1-36.8 66.1-43.7l37.9-9.9 13.9-36.6c8.6-22.8 20.6-44.1 35.7-63.4a245.6 245.6 0 0152.4-49.9c41.1-28.9 89.5-44.2 140-44.2s98.9 15.3 140 44.2c19.9 14 37.5 30.8 52.4 49.9 15.1 19.3 27.1 40.7 35.7 63.4l13.8 36.5 37.8 10C846.1 454.5 884 503.8 884 560c0 33.1-12.9 64.3-36.3 87.7a123.07 123.07 0 01-87.6 36.3H720c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h40.1C870.5 760 960 670.5 960 560c0-92.7-63.1-170.7-148.6-193.3z\" } }] }, \"name\": \"cloud-upload\", \"theme\": \"outlined\" };\nexport default CloudUploadOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloudUploadOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloudUploadOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CloudUploadOutlined = function CloudUploadOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CloudUploadOutlinedSvg\n  }));\n};\n\nCloudUploadOutlined.displayName = 'CloudUploadOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloudUploadOutlined);","// This icon file is generated automatically.\nvar EnvironmentOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M854.6 289.1a362.49 362.49 0 00-79.9-115.7 370.83 370.83 0 00-118.2-77.8C610.7 76.6 562.1 67 512 67c-50.1 0-98.7 9.6-144.5 28.5-44.3 18.3-84 44.5-118.2 77.8A363.6 363.6 0 00169.4 289c-19.5 45-29.4 92.8-29.4 142 0 70.6 16.9 140.9 50.1 208.7 26.7 54.5 64 107.6 111 158.1 80.3 86.2 164.5 138.9 188.4 153a43.9 43.9 0 0022.4 6.1c7.8 0 15.5-2 22.4-6.1 23.9-14.1 108.1-66.8 188.4-153 47-50.4 84.3-103.6 111-158.1C867.1 572 884 501.8 884 431.1c0-49.2-9.9-97-29.4-142zM512 880.2c-65.9-41.9-300-207.8-300-449.1 0-77.9 31.1-151.1 87.6-206.3C356.3 169.5 431.7 139 512 139s155.7 30.5 212.4 85.9C780.9 280 812 353.2 812 431.1c0 241.3-234.1 407.2-300 449.1zm0-617.2c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm79.2 255.2A111.6 111.6 0 01512 551c-29.9 0-58-11.7-79.2-32.8A111.6 111.6 0 01400 439c0-29.9 11.7-58 32.8-79.2C454 338.6 482.1 327 512 327c29.9 0 58 11.6 79.2 32.8C612.4 381 624 409.1 624 439c0 29.9-11.6 58-32.8 79.2z\" } }] }, \"name\": \"environment\", \"theme\": \"outlined\" };\nexport default EnvironmentOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EnvironmentOutlinedSvg from \"@ant-design/icons-svg/es/asn/EnvironmentOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar EnvironmentOutlined = function EnvironmentOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: EnvironmentOutlinedSvg\n  }));\n};\n\nEnvironmentOutlined.displayName = 'EnvironmentOutlined';\nexport default /*#__PURE__*/React.forwardRef(EnvironmentOutlined);","// This icon file is generated automatically.\nvar LockFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM540 701v53c0 4.4-3.6 8-8 8h-40c-4.4 0-8-3.6-8-8v-53a48.01 48.01 0 1156 0zm152-237H332V240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224z\" } }] }, \"name\": \"lock\", \"theme\": \"filled\" };\nexport default LockFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LockFilledSvg from \"@ant-design/icons-svg/es/asn/LockFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar LockFilled = function LockFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: LockFilledSvg\n  }));\n};\n\nLockFilled.displayName = 'LockFilled';\nexport default /*#__PURE__*/React.forwardRef(LockFilled);","// This icon file is generated automatically.\nvar QuestionCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 708c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zm62.9-219.5a48.3 48.3 0 00-30.9 44.8V620c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-21.5c0-23.1 6.7-45.9 19.9-64.9 12.9-18.6 30.9-32.8 52.1-40.9 34-13.1 56-41.6 56-72.7 0-44.1-43.1-80-96-80s-96 35.9-96 80v7.6c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V420c0-39.3 17.2-76 48.4-103.3C430.4 290.4 470 276 512 276s81.6 14.5 111.6 40.7C654.8 344 672 380.7 672 420c0 57.8-38.1 109.8-97.1 132.5z\" } }] }, \"name\": \"question-circle\", \"theme\": \"filled\" };\nexport default QuestionCircleFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport QuestionCircleFilledSvg from \"@ant-design/icons-svg/es/asn/QuestionCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar QuestionCircleFilled = function QuestionCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: QuestionCircleFilledSvg\n  }));\n};\n\nQuestionCircleFilled.displayName = 'QuestionCircleFilled';\nexport default /*#__PURE__*/React.forwardRef(QuestionCircleFilled);"],"names":["mockGuesses","groupedItems","players","user","Object","values","reduce","acc","player","id","historyForThisTarget","history","lastGuess","getLastItem","status","weaponId","evidenceId","group","groupIndex","weapons","filter","e","includes","evidences","previousPicksDict","entry","SEPARATOR","pair","getRandomItem","split","previouslyWrongGroups","t","guess","push","availableGroups","i","map","randomGroup","WelcomeMessage","contained","pt","en","GuessMessage","ScoringMessage","round","points","total","current","ItemCard","item","cardWidth","activeColor","preview","isSelected","className","language","useLanguage","isDebugEnabled","useDevFeatures","clsx","style","borderColor","backgroundColor","content","name","toUpperCase","color","type","maxWidth","imageId","ContinueButton","onClick","children","disabled","props","size","StepItemsSelection","items","selections","updateSelections","useState","setWeaponId","setEvidenceId","useCardWidth","userItems","itemGroupIndex","align","randomWeaponId","randomEvidenceId","shuffle","forEach","itemId","SceneTile","tile","index","onSelectValue","description","title","isActive","icon","CheckCircleFilled","undefined","tileId","value","PlusSquareFilled","ref","React","AntdIcon","_objectSpread","PlusSquareFilledSvg","displayName","SelectedItems","fadeWeapon","fadeEvidence","StepCauseOfDeathSelection","causeOfDeathTile","causeOfDeathIndex","setCauseOfDeathIndex","payload","causeOfDeath","StepLocationSelection","locationTiles","location","setLocation","onSelectItem","locationTile","locationIndex","StepReviewCrime","reasonForEvidenceTile","onSubmitCrime","updateSelection","translate","find","reasonForEvidence","CloudUploadOutlined","readyText","readyTextPlural","StepReasonForEvidence","reasonForEvidenceIndex","setReasonForEvidenceIndex","state","info","useStep","step","setStep","goToNextStep","useUser","isUserReady","useIsUserReady","setSelections","onSubmitCrimeRequest","request","useAPICall","apiFunction","CRIMES_HEDIONDOS_API","actionName","onBeforeCall","onError","successMessage","errorMessage","action","useOnSubmitCrimeAPIRequest","prevState","useMock","itemsGroup","shuffledItems","weapon","evidence","locationTileId","options","mockCrime","phase","allowedPhase","PHASES","conditions","onPressButton","buttonText","time","circleColor","hand","keys","EventIcon","onClose","currentRound","duration","SkullIcon","CrimeSceneIcon","LocationIcon","CrimeTapeIcon","C","ClockCircleFilled","ClockCircleFilledSvg","SafetyOutlined","SafetyOutlinedSvg","GiftOutlined","GiftOutlinedSvg","ExceptionOutlined","ExceptionOutlinedSvg","ItemCardEmpty","cardType","WarningFilled","WarningFilledSvg","CrimeGuessStatus","withDescription","baseClass","LockFilled","MinusCircleFilled","CloseCircleFilled","QuestionCircleFilled","CARD_WIDTH","Crime","crime","scenesOrder","scenes","selectedWeaponId","selectedEvidenceId","isLocked","historyEntryIndex","setHistoryEntryIndex","isComplete","Boolean","activeWeaponId","evidenceWeaponId","getAvatarColorById","avatarId","hasHistory","length","sceneId","scene","CrimeScene","playerIndex","playerId","_","ghost","shape","onMouseOver","onMouseLeave","EnvironmentOutlined","GroupedItemsBoard","StepNewScene","onSubmitMark","sceneTile","crimes","sceneMarkIndex","setSceneMarkIndex","header","sceneIndex","useOnSubmitMarkAPIRequest","ready","LoupeIcon","currentScene","getHistory","playerHistory","activePlayerId","PlayersCards","setActivePlayerId","guesses","orderBy","lastGuessHistory","isHistoryLocked","active","withName","replacementAvatar","IconAvatar","LockIcon","KnifeIcon","SelectableGroupedItemsBoard","wrongGroups","isGroupWrong","StepGuessing","onSubmitGuesses","setGuesses","useEffect","g","entries","key","historyEntryArray","historyEntry","autoSelectCorrectGuesses","playerCount","isAllComplete","every","activeCrime","isOwnCrime","activePlayerGuesses","getActiveStuff","activeEvidenceId","dev","guessObj","s","useOnSubmitGuessesAPIRequest","GuessIcon","ResultsTable","results","columns","dataIndex","render","addressUser","ResultsTableCell","data","bot","result","dataSource","pagination","bordered","BoxCheckMarkIcon","alt","BoxOneIcon","BoxMinusIcon","BoxXIcon","StepReveal","onSeeRanking","isFirstRunThrough","useTemporarilyHidePlayersBar","latestHistoryEntry","correctCrimes","score","secretScore","getAnimationClass","onExpire","Math","min","TrophyOutlined","StepRanking","ranking","goToPreviousStep","lastRound","roundPoints","gainedPointsDescriptions","setIsFirstRunThrough","RankIcon","announcementIcon","TrophyIcon","ConfigProvider","theme","primaryColor","THEME_COLORS","gameId","gameCollection","GAME_COLLECTION","getActiveComponent","PhaseLobby","PhaseRules","PhaseSetup","PhaseCrimeSelection","PhaseSceneMarking","PhaseGuessing","PhaseReveal","PhaseGameOver","PageError","CloudUploadOutlinedSvg","EnvironmentOutlinedSvg","LockFilledSvg","QuestionCircleFilledSvg"],"sourceRoot":""}