{"version":3,"file":"static/js/page-me.3b16716d.chunk.js","mappings":"8VAkBO,SAASA,EAAT,GAA6C,IAA3BC,EAA0B,EAA1BA,UACvB,EAAeC,EAAAA,EAAAA,UAARC,GAAP,eACQC,GAAcC,EAAAA,EAAAA,KAAdD,UACR,GAAoDE,EAAAA,EAAAA,WAAS,GAA7D,eAAOC,EAAP,KAA2BC,EAA3B,KAEA,GAAuCC,EAAAA,EAAAA,cAAW,iBAChD,+FAAkBC,EAAAA,EAAAA,IAAOP,EAAKQ,cAAc,YAAaR,EAAKQ,cAAc,aAA5E,mFACA,CACEV,UAAW,WACTA,GACD,IALGW,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OAAQC,EAA3B,EAA2BA,QAa3B,OACE,iBAAKC,UAAU,UAAf,WACE,gBAAKA,UAAU,gBAAf,UACE,SAAC,IAAD,CAAOC,IAAKC,EAAAA,EAAMC,SAAS,OAG7B,UAAC,IAAD,CACEC,KAAK,QACLhB,KAAMA,EACNiB,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,IACpBE,MAAO,CAAEC,SAAU,KACnBC,cAAe,CAAEC,UAAU,GAC3BC,SAjBW,WACfd,GACD,EAgBKe,aAAa,MARf,WAUE,SAAC,SAAD,CACEC,OAAO,SAAC,KAAD,CAAWC,GAAG,SAASC,GAAG,WACjCZ,KAAK,WACLa,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS9B,EAAU,sCAAiC,wBAJ1E,UAOE,SAAC,IAAD,OAGF,SAAC,SAAD,CACEyB,OAAO,SAAC,KAAD,CAAWC,GAAG,QAAQC,GAAG,aAChCZ,KAAK,WACLa,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS9B,EAAU,sCAAiC,wBAExE+B,KAAM/B,EAAU,yBAAuB,2BANzC,UAQE,SAAC,aAAD,MAGDU,IACC,SAAC,SAAD,CAAWQ,WAAY,CAAEc,OAAQ,EAAGf,KAAM,IAA1C,UACE,SAAC,IAAD,CACEgB,aACE,SAAC,KAAD,CACEP,GAAG,mCACHC,GAAG,2CAGPO,KAAK,QACLC,UAAQ,EACRxB,UAAU,4BAKhB,UAAC,SAAD,CAAWO,WAAY,CAAEc,OAAQ,EAAGf,KAAM,IAA1C,WACE,SAAC,KAAD,CAAQiB,KAAK,UAAUE,SAAS,SAASC,QAAS7B,EAAlD,UACE,SAAC,KAAD,CAAWkB,GAAG,SAASC,GAAG,cAG5B,SAAC,KAAD,CAAQO,KAAK,OAAOI,QAAS,kBAAMlC,GAAsB,SAACmC,GAAD,OAAQA,CAAR,GAA5B,EAA7B,UACE,SAAC,KAAD,CAAWb,GAAG,sBAAsBC,GAAG,+BAI5CxB,IACC,SAAC,IAAD,CACE+B,KAAK,OACLJ,SACE,SAACU,EAAD,CACEC,MAAO1C,EAAKQ,cAAc,YAC1BV,UAAW,kBAAMO,GAAsB,EAA5B,QAOxB,CAOD,SAASoC,EAAT,GAA0E,IAA7CC,EAA4C,EAA5CA,MAAO5C,EAAqC,EAArCA,UAC1BiC,EAAYY,EAAAA,EAAAA,SAAZZ,QACR,EAAehC,EAAAA,EAAAA,UAARC,GAAP,eACQC,GAAcC,EAAAA,EAAAA,KAAdD,UAER,GAAuCK,EAAAA,EAAAA,cAAW,iBAChD,+FAAkBsC,EAAAA,EAAAA,IAAc5C,EAAKQ,cAAc,aAAnD,mFACA,CACEV,UAAW,WACTA,IACAiC,EAAQc,QACN5C,EACE,0DACA,4CAGL,IAXGQ,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OAAQC,EAA3B,EAA2BA,QAmB3B,OACE,UAAC,IAAD,CACEK,KAAK,kBACLhB,KAAMA,EACNiB,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,IACpBE,MAAO,CAAEC,SAAU,KACnBC,cAAe,CAAEwB,SAAUJ,EAAOnB,UAAU,GAC5CC,SAZa,WACfd,GACD,EAWGe,aAAa,MARf,WAUE,SAAC,SAAD,WACE,SAAC,KAAD,CAAOsB,MAAO,EAAGC,KAAK,WAAtB,UACE,SAAC,KAAD,CAAWrB,GAAG,oBAAoBC,GAAG,wBAGzC,SAAC,SAAD,CACEF,OAAO,SAAC,KAAD,CAAWC,GAAG,SAASC,GAAG,WACjCZ,KAAK,WACLa,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS9B,EAAU,sCAAiC,wBAJ1E,UAOE,SAAC,IAAD,MAGDU,IACC,SAAC,SAAD,CAAWQ,WAAY,CAAEc,OAAQ,EAAGf,KAAM,IAA1C,UACE,SAAC,IAAD,CACEgB,aACE,SAAC,KAAD,CACEP,GAAG,gGACHC,GAAG,2CAGPO,KAAK,QACLC,UAAQ,EACRxB,UAAU,4BAKhB,SAAC,SAAD,CAAWO,WAAY,CAAEc,OAAQ,EAAGf,KAAM,IAA1C,UACE,SAAC,KAAD,CAAQiB,KAAK,UAAUE,SAAS,SAASY,SAAUxC,EAAnD,UACE,SAAC,KAAD,CAAWkB,GAAG,SAASC,GAAG,iBAKnC,C,oICrKD,UAhBA,YACEsB,EAAAA,EAAAA,GAAS,wBACT,OAAyCC,EAAAA,EAAAA,KAAjCC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,YACzB,GAAwBC,EAAAA,EAAAA,IAAe,YAA9BC,GAAT,eAQA,OANAC,EAAAA,EAAAA,YAAU,WACJH,EAAYI,UACdF,EAAYF,EAAYI,SAE3B,GAAE,CAACJ,EAAYI,SAAUF,KAGxB,SAAC,IAAD,CAAWG,KAAML,EAAaM,mBAAmB,SAAC,IAAD,CAAYP,gBAAiBA,KAEjF,C,mHCbM,SAASQ,EAAT,GAA2D,IAArCR,EAAoC,EAApCA,gBAC3B,OACE,SAAC,IAAD,CACES,MAAOT,EACPU,OAAO,SAAC,KAAD,CAAWnC,GAAG,QAAQC,GAAG,UAChCmC,YAAY,SAAC,KAAD,CAAWpC,GAAG,WAAWC,GAAG,WACxCoC,SAAUC,EAAAA,GACVC,cAAe,CACb9C,MAAO,CAAE+C,QAAS,SAEpBC,kBAAmB,CACjBhD,MAAO,CAAE+C,QAAS,SAEpBE,UAAU,EAXZ,UAaE,SAAC,IAAD,CAAQvE,UAAWmE,EAAAA,MAGxB,C","sources":["components/auth/SignIn.tsx","pages/Me/Me.tsx","pages/Me/components/LoginModal.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { useMutation } from 'react-query';\n// Ant Design Resources\nimport { Button, Form, Input, Alert, Image, App } from 'antd';\n// API\nimport { resetPassword, signIn } from 'services/firebase';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Image\nimport logo from 'assets/images/tarde-divertida-logo.svg';\nimport { Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { UserCredential } from 'firebase/auth';\n\ntype SignInProps = {\n  onSuccess: GenericFunction;\n};\n\nexport function SignIn({ onSuccess }: SignInProps) {\n  const [form] = Form.useForm();\n  const { translate } = useLanguage();\n  const [showForgotPassword, setShowForgotPassword] = useState(false);\n\n  const { isLoading, mutate, isError } = useMutation<UserCredential, Error, void, unknown>(\n    async () => await signIn(form.getFieldValue('username'), form.getFieldValue('password')),\n    {\n      onSuccess: () => {\n        onSuccess();\n      },\n    }\n  );\n\n  const onFinish = () => {\n    mutate();\n  };\n\n  return (\n    <div className=\"sign-in\">\n      <div className=\"sign-in__logo\">\n        <Image src={logo} preview={false} />\n      </div>\n\n      <Form\n        name=\"login\"\n        form={form}\n        labelCol={{ span: 8 }}\n        wrapperCol={{ span: 16 }}\n        style={{ maxWidth: 600 }}\n        initialValues={{ remember: true }}\n        onFinish={onFinish}\n        autoComplete=\"off\"\n      >\n        <Form.Item\n          label={<Translate pt=\"E-mail\" en=\"E-mail\" />}\n          name=\"username\"\n          rules={[\n            { required: true, message: translate('e-mail é um campo obrigatório', 'e-mail is required') },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label={<Translate pt=\"Senha\" en=\"Password\" />}\n          name=\"password\"\n          rules={[\n            { required: true, message: translate('e-mail é um campo obrigatório', 'e-mail is required') },\n          ]}\n          help={translate('Mínimo 6 caracteres', 'Minimum of 6 characters')}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        {isError && (\n          <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n            <Alert\n              description={\n                <Translate\n                  pt=\"Algo deu errado, tente novamente\"\n                  en=\"Something went wrong. Please try again\"\n                />\n              }\n              type=\"error\"\n              showIcon\n              className=\"sign-in__error-alert\"\n            />\n          </Form.Item>\n        )}\n\n        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n          <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\n            <Translate pt=\"Entrar\" en=\"Submit\" />\n          </Button>\n\n          <Button type=\"link\" onClick={() => setShowForgotPassword((v) => !v)}>\n            <Translate pt=\"Esqueci minha senha\" en=\"Forgot my password\" />\n          </Button>\n        </Form.Item>\n      </Form>\n      {showForgotPassword && (\n        <Alert\n          type=\"info\"\n          message={\n            <ResetPasswordForm\n              email={form.getFieldValue('username')}\n              onSuccess={() => setShowForgotPassword(false)}\n            />\n          }\n        />\n      )}\n    </div>\n  );\n}\n\ntype ResetPasswordFormProps = {\n  email?: string;\n  onSuccess: GenericFunction;\n};\n\nfunction ResetPasswordForm({ email, onSuccess }: ResetPasswordFormProps) {\n  const { message } = App.useApp();\n  const [form] = Form.useForm();\n  const { translate } = useLanguage();\n\n  const { isLoading, mutate, isError } = useMutation(\n    async () => await resetPassword(form.getFieldValue('username')),\n    {\n      onSuccess: () => {\n        onSuccess();\n        message.success(\n          translate(\n            'Verifique seu e-mail enviado para redefinir a sua senha',\n            'Verify your email to reset your password'\n          )\n        );\n      },\n    }\n  );\n\n  const onFinish = () => {\n    mutate();\n  };\n\n  return (\n    <Form\n      name=\"forgot-password\"\n      form={form}\n      labelCol={{ span: 8 }}\n      wrapperCol={{ span: 16 }}\n      style={{ maxWidth: 600 }}\n      initialValues={{ username: email, remember: true }}\n      onFinish={onFinish}\n      autoComplete=\"off\"\n    >\n      <Form.Item>\n        <Title level={4} size=\"xx-small\">\n          <Translate pt=\"Redefinir a senha\" en=\"Password Reset\" />\n        </Title>\n      </Form.Item>\n      <Form.Item\n        label={<Translate pt=\"E-mail\" en=\"E-mail\" />}\n        name=\"username\"\n        rules={[\n          { required: true, message: translate('e-mail é um campo obrigatório', 'e-mail is required') },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      {isError && (\n        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n          <Alert\n            description={\n              <Translate\n                pt=\"Algo deu errado, provavelmente este e-mail não existe no banco de dados da Tarde Divertida\"\n                en=\"Something went wrong. Please try again\"\n              />\n            }\n            type=\"error\"\n            showIcon\n            className=\"sign-in__error-alert\"\n          />\n        </Form.Item>\n      )}\n\n      <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n        <Button type=\"primary\" htmlType=\"submit\" disabled={isLoading}>\n          <Translate pt=\"Enviar\" en=\"Submit\" />\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n","import { useTitle } from 'react-use';\n// Hooks\nimport { useCurrentUserContext } from 'hooks/useCurrentUserContext';\n// Components\nimport { LoginModal } from './components/LoginModal';\nimport { MeContent } from './components/MeContent';\n// Sass\nimport './Me.scss';\nimport { useEffect } from 'react';\nimport { useGlobalState } from 'hooks/useGlobalState';\n\nfunction Me() {\n  useTitle('Me - Tarde Divertida');\n  const { isAuthenticated, currentUser } = useCurrentUserContext();\n  const [, setLanguage] = useGlobalState('language');\n\n  useEffect(() => {\n    if (currentUser.language) {\n      setLanguage(currentUser.language);\n    }\n  }, [currentUser.language, setLanguage]);\n\n  return (\n    <MeContent user={currentUser} additionalContent={<LoginModal isAuthenticated={isAuthenticated} />} />\n  );\n}\n\nexport default Me;\n","// Ant Design Resources\nimport { Modal } from 'antd';\n// Utils\nimport { NOOP } from 'utils/constants';\n// Components\nimport { SignIn } from 'components/auth/SignIn';\nimport { Translate } from 'components/language';\n\ntype LoginModalProps = {\n  isAuthenticated: boolean;\n};\n\nexport function LoginModal({ isAuthenticated }: LoginModalProps) {\n  return (\n    <Modal\n      open={!isAuthenticated}\n      title={<Translate pt=\"Logar\" en=\"LogIn\" />}\n      cancelText={<Translate pt=\"Cancelar\" en=\"Cancel\" />}\n      onCancel={NOOP}\n      okButtonProps={{\n        style: { display: 'none' },\n      }}\n      cancelButtonProps={{\n        style: { display: 'none' },\n      }}\n      closable={false}\n    >\n      <SignIn onSuccess={NOOP} />\n    </Modal>\n  );\n}\n"],"names":["SignIn","onSuccess","Form","form","translate","useLanguage","useState","showForgotPassword","setShowForgotPassword","useMutation","signIn","getFieldValue","isLoading","mutate","isError","className","src","logo","preview","name","labelCol","span","wrapperCol","style","maxWidth","initialValues","remember","onFinish","autoComplete","label","pt","en","rules","required","message","help","offset","description","type","showIcon","htmlType","loading","onClick","v","ResetPasswordForm","email","App","resetPassword","success","username","level","size","disabled","useTitle","useCurrentUserContext","isAuthenticated","currentUser","useGlobalState","setLanguage","useEffect","language","user","additionalContent","LoginModal","open","title","cancelText","onCancel","NOOP","okButtonProps","display","cancelButtonProps","closable"],"sourceRoot":""}