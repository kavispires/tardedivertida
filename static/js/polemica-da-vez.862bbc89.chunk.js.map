{"version":3,"file":"static/js/polemica-da-vez.862bbc89.chunk.js","mappings":"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","sources":["components/icons/StarIcon.tsx","components/icons/TrophyIcon.tsx","components/metrics/MetricHighlight.tsx","components/metrics/PointsHighlight.tsx","components/points/StarPoints.tsx","components/views/View.tsx","components/views/ViewIf.tsx","components/views/ViewOr.tsx","components/views/ViewSwitch.tsx","games/polemica-da-vez/StepTopicSelection.tsx","components/metrics/TargetHighlight.tsx","games/polemica-da-vez/PhaseTopicSelection.tsx","games/polemica-da-vez/utils/api-requests.ts","games/polemica-da-vez/utils/mock.ts","games/polemica-da-vez/components/Topic.tsx","games/polemica-da-vez/StepLiking.tsx","games/polemica-da-vez/PhaseReact.tsx","games/polemica-da-vez/components/CommentText.tsx","games/polemica-da-vez/components/TweetComment.tsx","games/polemica-da-vez/StepResolution.tsx","games/polemica-da-vez/StepRanking.tsx","games/polemica-da-vez/PhaseResolution.tsx","games/polemica-da-vez/PhaseGameOver.tsx","games/polemica-da-vez/SessionPolemicaDaVez.tsx","hooks/useWhichPlayerIsThe.ts"],"sourcesContent":["export function StarIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#ffb820\"\n        d=\"M491.64 188.725l-153.53-22.31-68.66-139.12c-2.75-5.57-8.1-8.36-13.45-8.36l.02 400.2 137.3 72.19c11.01 5.78 23.86-3.56 21.76-15.81l-26.22-152.92 111.09-108.29c8.91-8.68 3.99-23.79-8.31-25.58z\"\n      ></path>\n      <path\n        fill=\"#ffd06a\"\n        d=\"M356.62 312.125s23.68 138.03 23.76 138.49c-.08-.01-122.45-31-124.36-31.48-.02-.01-137.34 72.19-137.34 72.19-11.01 5.78-23.86-3.56-21.76-15.81l26.22-152.92-111.09-108.29c-8.91-8.68-3.99-23.79 8.31-25.58l153.53-22.31 68.66-139.12c2.75-5.57 8.1-8.36 13.45-8.36l62.19 174.9 139.06 20.21z\"\n      ></path>\n      <path d=\"M510.883 196.615c-2.666-8.204-9.625-14.07-18.16-15.311l-149.632-21.743-66.918-135.588c-3.817-7.735-11.547-12.54-20.173-12.54s-16.356 4.805-20.173 12.54L168.91 159.561 19.278 181.305c-8.537 1.24-15.495 7.106-18.161 15.311s-.484 17.04 5.693 23.062l108.274 105.541-9.911 57.786a7.501 7.501 0 006.124 8.66 7.499 7.499 0 008.66-6.125l10.578-61.672a7.502 7.502 0 00-2.157-6.639L17.28 208.934c-2.089-2.036-2.798-4.909-1.897-7.684.902-2.775 3.164-4.683 6.052-5.103l153.534-22.31a7.498 7.498 0 005.647-4.103l68.662-139.125c1.292-2.617 3.804-4.179 6.722-4.179s5.431 1.562 6.722 4.179l68.663 139.125a7.5 7.5 0 005.647 4.103l153.534 22.31c2.888.42 5.15 2.327 6.051 5.102.902 2.775.193 5.648-1.896 7.685L383.622 317.228a7.499 7.499 0 00-2.157 6.639l26.227 152.913c.494 2.876-.621 5.617-2.982 7.332-2.361 1.714-5.312 1.929-7.895.57L259.49 412.487a7.504 7.504 0 00-6.98 0l-137.325 72.195c-2.583 1.358-5.535 1.144-7.894-.57-2.361-1.715-3.476-4.456-2.982-7.332l10.578-61.673a7.501 7.501 0 00-6.124-8.66 7.501 7.501 0 00-8.66 6.125l-10.578 61.673c-1.458 8.502 1.971 16.933 8.95 22.003 3.943 2.865 8.557 4.32 13.201 4.32a22.51 22.51 0 0010.49-2.608L256 427.6l133.834 70.36c7.635 4.014 16.713 3.357 23.692-1.712 6.979-5.07 10.408-13.502 8.949-22.003l-25.56-149.027L505.19 219.677c6.177-6.022 8.359-14.859 5.693-23.062z\"></path>\n    </svg>\n  );\n}\n","export function TrophyIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M397.763 87.5h-98.509v213.476h98.509c58.855 0 106.737-47.882 106.737-106.738S456.618 87.5 397.763 87.5zm0 183.476h-68.509V117.5h68.509c42.381 0 76.738 34.357 76.738 76.738-.001 42.381-34.357 76.738-76.738 76.738zM114.237 87.5C55.382 87.5 7.5 135.382 7.5 194.238s47.882 106.738 106.737 106.738h98.509V87.5zm68.509 183.476h-68.509c-42.381 0-76.738-34.357-76.738-76.738S71.856 117.5 114.237 117.5h68.509zM314 419.5H198l15-91h86z\"\n      ></path>\n      <path fill=\"#fee97d\" d=\"M299 328.5h-30l15 91h30z\"></path>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M382.221 504.5H129.779a7 7 0 01-7-7v-11.629c0-22.091 17.909-40 40-40h186.442c22.091 0 40 17.909 40 40V497.5a7 7 0 01-7 7z\"\n      ></path>\n      <path\n        fill=\"#fee97d\"\n        d=\"M349.221 445.871h-30c22.092 0 40 17.909 40 40V497.5a7 7 0 01-7 7h30a7 7 0 007-7v-11.629c0-22.092-17.909-40-40-40zm-5 0H167.779v-3.629c0-22.091 17.909-40 40-40h96.442c22.091 0 40 17.909 40 40z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M304.221 402.241h-30c22.092 0 40 17.909 40 40v3.629h30v-3.629c0-22.091-17.909-40-40-40z\"\n      ></path>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M411.5 57.5h-311c-13.807 0-25-11.193-25-25s11.193-25 25-25h311c13.807 0 25 11.193 25 25s-11.193 25-25 25z\"\n      ></path>\n      <path\n        fill=\"#fee97d\"\n        d=\"M411.5 7.5h-30c13.807 0 25 11.193 25 25s-11.193 25-25 25h30c13.807 0 25-11.193 25-25s-11.193-25-25-25zM256 362.5c-83.119 0-150.5-67.381-150.5-150.5V57.5h301V212c0 83.119-67.381 150.5-150.5 150.5z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M376.5 57.5V212c0 78.056-59.424 142.229-135.5 149.757 4.934.488 9.937.743 15 .743 83.119 0 150.5-67.381 150.5-150.5V57.5z\"\n      ></path>\n      <circle cx=\"256\" cy=\"207.96\" r=\"94.169\" fill=\"#fff\"></circle>\n      <path\n        fill=\"#fee97d\"\n        d=\"M262.277 154.391l13.139 26.623a7 7 0 005.271 3.829l29.38 4.269c5.742.834 8.034 7.89 3.879 11.94l-21.26 20.723a6.998 6.998 0 00-2.013 6.196l5.019 29.261c.981 5.718-5.021 10.079-10.157 7.379l-26.278-13.815a7.001 7.001 0 00-6.515 0l-26.278 13.815c-5.135 2.7-11.137-1.661-10.157-7.379l5.019-29.261a7 7 0 00-2.013-6.196l-21.26-20.723c-4.155-4.05-1.862-11.106 3.879-11.94l29.38-4.269a7 7 0 005.271-3.829l13.139-26.623c2.569-5.203 9.987-5.203 12.555 0z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M313.946 201.052c4.155-4.05 1.862-11.106-3.88-11.94l-29.38-4.269a6.997 6.997 0 01-5.27-3.829l-13.139-26.623c-2.568-5.203-9.987-5.203-12.554 0l-10.888 22.061 3.874 7.85a18.632 18.632 0 0014.03 10.193c15.284 2.221 21.386 21.003 10.327 31.783a18.632 18.632 0 00-5.359 16.493l1.755 10.236 22.073 11.604c5.135 2.7 11.137-1.661 10.157-7.379l-5.019-29.261a7 7 0 012.013-6.196z\"\n      ></path>\n      <path d=\"M282.025 177.458l-13.022-26.387c-2.462-4.985-7.443-8.082-13.003-8.082s-10.541 3.097-13.003 8.083l-13.022 26.387-29.119 4.231c-5.502.799-9.987 4.581-11.706 9.868-1.718 5.288-.312 10.983 3.669 14.865l21.071 20.539-4.975 29.003c-.939 5.479 1.271 10.914 5.77 14.182s10.349 3.691 15.271 1.104L256 257.557l26.045 13.693c4.903 2.578 10.759 2.174 15.271-1.104 4.498-3.268 6.709-8.702 5.769-14.182l-4.974-29.003 21.071-20.539c3.981-3.881 5.387-9.577 3.669-14.865-1.719-5.287-6.204-9.068-11.706-9.867zm5.426 38.946a14.494 14.494 0 00-4.169 12.834l4.847 28.264-25.382-13.345a14.498 14.498 0 00-13.495 0l-25.381 13.344 4.847-28.262a14.495 14.495 0 00-4.169-12.835l-20.534-20.016 28.377-4.124a14.494 14.494 0 0010.918-7.932L256 158.618l12.69 25.714a14.494 14.494 0 0010.918 7.932l28.377 4.124zm194.096-99.749c-17.941-19.36-41.716-31.799-67.547-35.49v-16.27c16.756-1.282 30-15.316 30-32.394C444 14.58 429.421 0 411.5 0h-311C82.579 0 68 14.58 68 32.5c0 17.078 13.244 31.112 30 32.394v16.27c-25.714 3.676-49.409 16.029-67.321 35.248a7.5 7.5 0 0010.972 10.228C56.721 110.471 76.495 99.908 98 96.352v15.236c-39.204 7.62-68 42.024-68 82.652 0 22.509 8.765 43.663 24.675 59.561 15.532 15.543 36.076 24.242 57.996 24.641a157.847 157.847 0 008.007 15.038h-6.438c-54.722 0-99.24-44.519-99.24-99.24 0-14.091 2.904-27.711 8.633-40.48a7.5 7.5 0 00-13.685-6.14C3.347 162.333 0 178.019 0 194.24c0 62.992 51.248 114.24 114.24 114.24h16.729c17.756 22.957 41.679 40.906 69.267 51.348l-6.089 36.917c-18.396 5.522-32.123 21.915-33.701 41.685-25.112 1.221-45.167 22.032-45.167 47.441V497.5c0 7.995 6.505 14.5 14.5 14.5H382.22c7.995 0 14.5-6.505 14.5-14.5v-11.629c0-25.409-20.055-46.22-45.167-47.441-1.579-19.771-15.306-36.163-33.701-41.685l-6.089-36.917c27.588-10.441 51.511-28.391 69.267-51.348h16.729c62.992 0 114.24-51.248 114.24-114.24.001-28.841-10.814-56.394-30.452-77.585zM65.281 243.195C52.203 230.126 45 212.74 45 194.24c0-32.392 22.265-59.968 53-67.308V212c0 17.851 2.98 35.018 8.461 51.034-15.554-1.728-29.958-8.609-41.18-19.839zM100.5 50C90.851 50 83 42.149 83 32.5S90.851 15 100.5 15h311c9.649 0 17.5 7.851 17.5 17.5S421.149 50 411.5 50zM414 126.932c30.735 7.34 53 34.916 53 67.308 0 18.5-7.203 35.886-20.286 48.958-11.218 11.227-25.621 18.108-41.175 19.836C411.02 247.018 414 229.851 414 212zm-77.518 311.439h-22.895c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h35.634c17.921 0 32.5 14.58 32.5 32.5V497H130.279v-11.129c0-17.92 14.579-32.5 32.5-32.5h115.808c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5H175.518c1.921-16.101 15.651-28.629 32.261-28.629h96.441c16.611-.001 30.342 12.527 32.262 28.629zm-126.801-43.63l4.987-30.237C227.849 368.08 241.703 370 256 370s28.151-1.92 41.332-5.496l4.987 30.237zM256 355c-78.851 0-143-64.149-143-143V65h286v147c0 78.851-64.149 143-143 143zm141.76-61.52h-6.438a157.741 157.741 0 008.007-15.038c21.919-.399 42.463-9.097 57.991-24.637C473.235 237.903 482 216.749 482 194.24c0-40.627-28.796-75.032-68-82.652V96.352c21.605 3.57 41.449 14.208 56.545 30.498C487.604 145.259 497 169.192 497 194.24c0 54.721-44.519 99.24-99.24 99.24zM256 106.291c-56.061 0-101.67 45.609-101.67 101.669S199.939 309.629 256 309.629 357.67 264.02 357.67 207.96 312.061 106.291 256 106.291zm0 188.338c-47.79 0-86.67-38.88-86.67-86.669s38.88-86.669 86.67-86.669 86.67 38.88 86.67 86.669-38.88 86.669-86.67 86.669z\"></path>\n    </svg>\n  );\n}\n","import { ReactNode } from 'react';\nimport clsx from 'clsx';\n// Components\nimport { IconAvatar } from 'components/icons/IconAvatar';\n\nimport { AvatarSize } from 'antd/lib/avatar/SizeContext';\n\nexport type MetricHighlightProps = {\n  /**\n   * The text to be highlighted\n   */\n  children: ReactNode;\n  /**\n   * The icon representing the metric\n   */\n  icon: ReactNode;\n  /**\n   * Indicates if it's a negative metric\n   */\n  type?: 'positive' | 'negative' | 'default';\n  /**\n   *\n   */\n  iconSize?: AvatarSize;\n  /**\n   * Custom class\n   */\n  className?: string;\n};\n\nexport function MetricHighlight({\n  children,\n  icon,\n  type,\n  className,\n  iconSize = 'small',\n}: MetricHighlightProps) {\n  return (\n    <span className={clsx('metric-highlight', type && `metric-highlight--${type}`, className)}>\n      {children} <IconAvatar size={iconSize} icon={icon} />\n    </span>\n  );\n}\n\nexport type HighlightProps = Pick<MetricHighlightProps, 'children' | 'type' | 'iconSize' | 'className'>;\n","import { StarIcon } from 'components/icons/StarIcon';\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function PointsHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<StarIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { StarFilled } from '@ant-design/icons';\n// Components\nimport { Translate } from 'components/language';\n\ntype StarPointsProps = {\n  keyPrefix: string;\n  quantity?: number;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  hideText?: boolean;\n};\n\nexport const StarPoints = ({ keyPrefix, quantity, className, hideText }: StarPointsProps) => {\n  if (!quantity) {\n    return <span />;\n  }\n\n  const isNegative = quantity < 0;\n  const num = Math.abs(quantity);\n\n  const StarsArray = Array.from({ length: num }, (_, i) => <StarFilled key={`${keyPrefix}-${i}`} />);\n\n  return (\n    <span className={clsx('star-points', isNegative && 'star-points--negative', className)}>\n      {isNegative ? '-' : '+'} <span className=\"star-points__stars\">{StarsArray}</span>\n      {!hideText && (\n        <>\n          <Translate pt=\"ponto\" en=\"point\" />\n          {num > 1 ? 's' : ''}\n        </>\n      )}\n    </span>\n  );\n};\n","import { ReactNode } from 'react';\n\ntype ViewProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n};\n\nexport function View({ children }: ViewProps) {\n  return <>{children}</>;\n}\n","import { ReactNode } from 'react';\n\ntype ViewIfProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  isVisible?: boolean;\n};\n\nexport function ViewIf({ isVisible = false, children }: ViewIfProps) {\n  return isVisible ? <>{children}</> : <></>;\n}\n","type ViewOrProps = {\n  children: [any, any];\n  orCondition?: boolean;\n};\n\nexport function ViewOr({ orCondition = false, children }: ViewOrProps) {\n  return orCondition ? <>{children[0]}</> : <>{children[1]}</>;\n}\n","type ViewSwitchProps = {\n  cases: boolean[];\n  /**\n   * The content of the component\n   */\n  children: any;\n};\n\nexport function ViewSwitch({ cases, children }: ViewSwitchProps) {\n  if (cases.length > 5) {\n    throw Error('ViewSwitch only supports up to 5 cases');\n  }\n\n  if (cases[0] && children[0]) {\n    return children[0];\n  }\n\n  if (cases[1] && children[1]) {\n    return children[1];\n  }\n\n  if (cases[2] && children[2]) {\n    return children[2];\n  }\n\n  if (cases[3] && children[3]) {\n    return children[3];\n  }\n\n  if (cases[4] && children[4]) {\n    return children[4];\n  }\n  console.warn('Rendering all children in the ViewSwitch');\n  return children;\n}\n","import { useState } from 'react';\n//Design Resources\nimport { Button, Input } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\nimport { Translate } from 'components/language';\n// Components\n\ntype StepTopicSelectionProps = {\n  currentTopics: Topic[];\n  currentCustomTopic: Topic;\n  onSubmitTopic: GenericFunction;\n};\n\nexport function StepTopicSelection({\n  currentTopics,\n  currentCustomTopic,\n  onSubmitTopic,\n}: StepTopicSelectionProps) {\n  const { translate } = useLanguage();\n\n  const [customTopic, setCustomTopic] = useState('');\n\n  const onSubmitCustomTopic = () => {\n    if (customTopic) {\n      onSubmitTopic({ topicId: currentCustomTopic.id, customTopic });\n    }\n  };\n\n  return (\n    <Step fullWidth>\n      <Title>\n        <Translate pt=\"Selecione uma assunto\" en=\"Select one topic\" />\n      </Title>\n\n      <ul className=\"p-topics-card\">\n        {currentTopics.map((topic) => (\n          <li className=\"p-topics-card__item\" key={topic.id}>\n            <button onClick={() => onSubmitTopic({ topicId: topic.id })} className=\"p-topic p-topic--button\">\n              {topic.text}\n            </button>\n          </li>\n        ))}\n        <li className=\"p-topics-card__item p-topics-card__item--or\">\n          <Translate pt=\"ou\" en=\"or\" />\n        </li>\n        <li className=\"p-topics-card__item p-topics-card__item--custom\">\n          <div className=\"p-topic\">{currentCustomTopic.text}</div>\n          <Input\n            className=\"p-custom-topic__input\"\n            placeholder={translate('Escreva aqui', 'Write here')}\n            onChange={(e) => setCustomTopic(e.target.value)}\n            onPressEnter={onSubmitCustomTopic}\n          />\n          {Boolean(customTopic) && (\n            <Button type=\"primary\" onClick={onSubmitCustomTopic} className=\"p-custom-topic__button\">\n              <Translate pt=\"Enviar sugestão\" en=\"Send suggestion\" />\n            </Button>\n          )}\n        </li>\n      </ul>\n    </Step>\n  );\n}\n","import { TargetIcon } from 'components/icons/TargetIcon';\nimport { HighlightProps, MetricHighlight } from 'components/metrics/MetricHighlight';\n\nexport function TargetHighlight({ children, type, iconSize, className }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<TargetIcon />} type={type} iconSize={iconSize} className={className}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","// Hooks\nimport { useMock } from 'hooks/useMock';\nimport { useStep } from 'hooks/useStep';\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\nimport { useOnSubmitTopicAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\nimport { mockTopicSelection } from './utils/mock';\n// Components\nimport { StepTopicSelection } from './StepTopicSelection';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { Step, StepSwitcher } from 'components/steps';\nimport { RoundAnnouncement } from 'components/round';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { AvatarName } from 'components/avatars';\nimport { ViewOr } from 'components/views';\nimport { TurnOrder, WaitingRoom } from 'components/players';\nimport { TrendingIcon } from 'components/icons/TrendingIcon';\nimport { PointsHighlight } from 'components/metrics/PointsHighlight';\nimport { TargetHighlight } from 'components/metrics/TargetHighlight';\n\nfunction PhaseTopicSelection({ state, players, info, meta }: PhaseProps) {\n  const { step, goToNextStep, setStep } = useStep(0);\n  const [activePlayer, isUserTheActivePlayer] = useWhichPlayerIsThe('activePlayerId', state, players);\n\n  const onSubmitTopic = useOnSubmitTopicAPIRequest(setStep);\n  const isFixedRounds = Boolean(meta?.options?.fixedRounds);\n\n  useMock(() => {\n    if (step === 1 && isUserTheActivePlayer) {\n      onSubmitTopic(mockTopicSelection(state.currentTopics));\n    }\n  }, [step]);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.POLEMICA_DA_VEZ.TOPIC_SELECTION}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <RoundAnnouncement\n          round={state.round}\n          onPressButton={goToNextStep}\n          time={4}\n          circleColor={info?.appearance?.color}\n        >\n          <Instruction contained>\n            <Translate\n              pt=\"Cada rodada um novo assunto, a sua opinião e a opinião dos outros.\"\n              en=\"Every round a new topic, your opinion and everybody else's.\"\n            />\n          </Instruction>\n        </RoundAnnouncement>\n\n        {/* Step 1 */}\n        <PhaseAnnouncement\n          icon={<TrendingIcon />}\n          title={<Translate pt=\"Você sabe qual a polêmica da vez?\" en=\"Do you know what's trending now?\" />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          duration={state?.round?.current < 3 ? 30 : undefined}\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  Todos vão curtir ou des-curtir a polêmica da vez e então devem tentar adivinhar quantas\n                  curtidas o assunto vai ganhar. Se você adivinhar corretamente, você ganha{' '}\n                  <PointsHighlight>3</PointsHighlight> pontos.\n                  <br />\n                  Se você escolheu um número a menos ou a mais, você ganha{' '}\n                  <PointsHighlight>1</PointsHighlight> ponto.\n                  <br />\n                  {isFixedRounds ? (\n                    <>O jogo tem {state.round.total} rodadas.</>\n                  ) : (\n                    <>\n                      O primeiro jogador a receber <TargetHighlight>10</TargetHighlight> pontos ganha o jogo\n                      (ou no máximo {state.round.total} rodadas)\n                    </>\n                  )}\n                  <br />\n                  <Instruction contained>\n                    <AvatarName player={activePlayer} addressUser /> escolherá o assunto para essa rodada.\n                  </Instruction>\n                </>\n              }\n              en={\n                <>\n                  All players must like or dislike a topic then must vote how trendy it is (how many players\n                  liked the topic). If you guess correctly you get <PointsHighlight>3</PointsHighlight>{' '}\n                  points.\n                  <br />\n                  If you got 1 number off (more or less), you get <PointsHighlight>1</PointsHighlight> point.\n                  <br />\n                  {isFixedRounds ? (\n                    <>\n                      The game will have\n                      {state.round.total} rounds.\n                    </>\n                  ) : (\n                    <>\n                      The first players to get <TargetHighlight>10</TargetHighlight> points wins the game (or\n                      a maximum of {state.round.total} rounds)\n                    </>\n                  )}\n                  <br />\n                  <Instruction contained>\n                    <AvatarName player={activePlayer} addressUser /> will choose the topic for this round.\n                  </Instruction>\n                </>\n              }\n            />\n            <TurnOrder order={state.gameOrder} players={players} activePlayerId={state.activePlayerId} />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 2 */}\n        <ViewOr orCondition={isUserTheActivePlayer}>\n          <StepTopicSelection\n            currentTopics={state.currentTopics}\n            currentCustomTopic={state.currentCustomTopic}\n            onSubmitTopic={onSubmitTopic}\n          />\n\n          <Step fullWidth>\n            <WaitingRoom\n              title={<Translate pt=\"Aguarde...\" en=\"Please wait...\" />}\n              instruction={\n                <>\n                  <AvatarName player={activePlayer} addressUser />{' '}\n                  <Translate\n                    pt=\"está escolhendo a polêmica da rodada.\"\n                    en=\"is choosing the topic for the round.\"\n                  />\n                  <TurnOrder\n                    order={state.gameOrder}\n                    players={players}\n                    activePlayerId={state.activePlayerId}\n                  />\n                </>\n              }\n              players={players}\n            />\n          </Step>\n        </ViewOr>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseTopicSelection;\n","import { POLEMICA_DA_VEZ_API } from 'services/adapters';\n\nimport { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\n\nexport function useOnSubmitTopicAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: POLEMICA_DA_VEZ_API.submitAction,\n    actionName: 'submit-topic',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(2),\n    successMessage: translate('Assunto enviada com sucesso!', 'Topic send successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar seu assunto',\n      'Oops, the application failed to submit the topic'\n    ),\n  });\n\n  return (payload: SubmitTopicPayload) => {\n    request({\n      action: 'SUBMIT_TOPIC',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitReactionAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: POLEMICA_DA_VEZ_API.submitAction,\n    actionName: 'submit-reaction',\n    onBeforeCall: () => setStep(2),\n    onError: () => setStep(1),\n    successMessage: translate('Reação enviada com sucesso!', 'Reaction send successfully!'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua reação',\n      'Oops, the application failed to submit your reaction'\n    ),\n  });\n\n  return (payload: SubmitReactionPayload) => {\n    request({\n      action: 'SUBMIT_REACTION',\n      ...payload,\n    });\n  };\n}\n","import { getRandomItem } from 'utils/helpers';\n\nexport function mockTopicSelection(currentTopics: Topic[]) {\n  return {\n    topicId: getRandomItem(currentTopics).id,\n  };\n}\n\nexport function mockGuess(playerCount: number) {\n  return {\n    reaction: getRandomItem([true, false]),\n    likesGuess: getRandomItem(\n      Array(playerCount + 1)\n        .fill(0)\n        .map((e, i) => e + i)\n    ),\n  };\n}\n","// Ant Design Resources\nimport { Avatar } from 'antd';\nimport { RiseOutlined, TwitterOutlined } from '@ant-design/icons';\n// Components\nimport clsx from 'clsx';\nimport { SpeechBubbleThumbsUpIcon } from 'components/icons/SpeechBubbleThumbsUpIcon';\n\ntype TopicProps = {\n  topic: string;\n  likes?: number;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n};\n\nexport function Topic({ topic, likes, className = '' }: TopicProps) {\n  return (\n    <div className={clsx('p-trending-topic', className)}>\n      <TwitterOutlined /> {topic} <RiseOutlined />{' '}\n      {Boolean(likes) && (\n        <span className=\"p-trending-topic__likes\">\n          <Avatar\n            src={<SpeechBubbleThumbsUpIcon />}\n            shape=\"square\"\n            size=\"large\"\n            className=\"p-trending-topic__icon-like\"\n          />{' '}\n          {likes}\n        </span>\n      )}\n    </div>\n  );\n}\n","import { useMemo, useState } from 'react';\nimport clsx from 'clsx';\n//Design Resources\nimport { Button } from 'antd';\n// Hooks\nimport { useLoading } from 'hooks/useLoading';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { Topic } from './components/Topic';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { TransparentButton } from 'components/buttons';\nimport { IconAvatar } from 'components/icons/IconAvatar';\nimport { SpeechBubbleThumbsUpIcon } from 'components/icons/SpeechBubbleThumbsUpIcon';\nimport { SpeechBubbleThumbsDownIcon } from 'components/icons/SpeechBubbleThumbsDownIcon';\n\ntype StepLikingProps = {\n  currentTopic: Topic;\n  customTopic: string;\n  onSubmitReaction: GenericFunction;\n  players: GamePlayers;\n};\n\nexport function StepLiking({ currentTopic, customTopic, onSubmitReaction, players }: StepLikingProps) {\n  const { isLoading } = useLoading();\n  const [like, setLike] = useState<boolean | null>(null);\n\n  const onSubmitReactions = (likes: number) => {\n    onSubmitReaction({ reaction: like, likesGuess: likes });\n  };\n\n  const countOptions = useMemo(\n    () =>\n      Array(Object.keys(players).length + 1)\n        .fill(0)\n        .map((e, i) => e + i),\n    [players]\n  );\n\n  return (\n    <Step fullWidth className=\"p-step\">\n      <Title>\n        <Translate pt=\"O que você acha da polêmica da vez?\" en=\"What do you think of this trending topic?\" />\n      </Title>\n\n      <div className=\"p-reaction-buttons\">\n        <Topic topic={customTopic ?? currentTopic?.text} className=\"p-reaction-buttons__topic\" />\n        <TransparentButton\n          className={clsx(\n            'p-reaction-button',\n            'p-reaction-button--like',\n            like === true && 'p-reaction-button--active'\n          )}\n          onClick={() => setLike(true)}\n        >\n          <IconAvatar icon={<SpeechBubbleThumbsUpIcon />} shape=\"square\" className=\"p-like-icon\" />\n          <Translate pt=\"Curtir\" en=\"Like\" />\n        </TransparentButton>\n        <TransparentButton\n          className={clsx(\n            'p-reaction-button',\n            'p-reaction-button--dislike',\n            like === false && 'p-reaction-button--active'\n          )}\n          onClick={() => setLike(false)}\n        >\n          <IconAvatar icon={<SpeechBubbleThumbsDownIcon />} shape=\"square\" className=\"p-like-icon\" />\n          <Translate pt=\"Não curto\" en=\"Dislike\" />\n        </TransparentButton>\n      </div>\n\n      {like !== null && (\n        <div className={getAnimationClass('fadeIn')}>\n          <Instruction contained>\n            <Translate\n              pt=\"Quantas curtidas esse assunto vai receber?\"\n              en=\"How many likes will this topic get?\"\n            />\n          </Instruction>\n\n          <ul className=\"p-votes\">\n            {countOptions.map((option) => {\n              const key = `quantity-${option}`;\n              return (\n                <li key={key}>\n                  <Button\n                    type=\"primary\"\n                    disabled={isLoading || like === null}\n                    onClick={() => onSubmitReactions(option)}\n                    size=\"large\"\n                    shape=\"circle\"\n                  >\n                    {option}\n                  </Button>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      )}\n    </Step>\n  );\n}\n","// Hooks\nimport { useMock } from 'hooks/useMock';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitReactionAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\nimport { mockGuess } from './utils/mock';\n// Components\nimport { Translate } from 'components/language';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { StepLiking } from './StepLiking';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { FeedbackIcon } from 'components/icons/FeedbackIcon';\n\nfunction PhaseReact({ state, players, info }: PhaseProps) {\n  const { step, goToNextStep, setStep } = useStep(0);\n\n  const onSubmitReaction = useOnSubmitReactionAPIRequest(setStep);\n\n  useMock(() => {\n    onSubmitReaction(mockGuess(Object.keys(players).length));\n  }, []);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.POLEMICA_DA_VEZ.REACT}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<FeedbackIcon />}\n          title={<Translate pt=\"O que você acha?\" en=\"What do you think?\" />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  Um assunto polêmico está abalando as redes sociais!\n                  <br />\n                  Curta (ou não) e tente descobrir quantas curtidas ele vai receber.\n                </>\n              }\n              en={\n                <>\n                  A topic is trending in all social media!\n                  <br />\n                  Like (or not) and try to guess how many likes it will get!\n                </>\n              }\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepLiking\n          currentTopic={state.currentTopic}\n          customTopic={state.customTopic}\n          onSubmitReaction={onSubmitReaction}\n          players={players}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseReact;\n","import clsx from 'clsx';\nimport { IconAvatar } from 'components/icons/IconAvatar';\nimport { SpeechBubbleThumbsDownIcon } from 'components/icons/SpeechBubbleThumbsDownIcon';\nimport { SpeechBubbleThumbsUpIcon } from 'components/icons/SpeechBubbleThumbsUpIcon';\nimport { Translate } from 'components/language';\nimport { StarPoints } from 'components/points';\n// Components\n\ntype CommentTextProps = {\n  reaction: boolean;\n  likes: boolean;\n  playerId: PlayerId;\n  points: number;\n};\n\nexport function CommentText({ reaction, likes, playerId, points }: CommentTextProps) {\n  return (\n    <span>\n      {reaction ? (\n        <>\n          <IconAvatar icon={<SpeechBubbleThumbsUpIcon />} shape=\"square\" className=\"p-like-icon\" size={20} />{' '}\n          <Translate pt=\"Curto e \" en=\"I like it and\" />\n        </>\n      ) : (\n        <>\n          <IconAvatar\n            icon={<SpeechBubbleThumbsDownIcon />}\n            shape=\"square\"\n            className=\"p-like-icon\"\n            size={20}\n          />{' '}\n          <Translate pt=\"Não curto, mas\" en=\"I dislike it but\" />\n        </>\n      )}\n\n      <Translate pt={<>eu acho que </>} en={<>I think </>} />\n\n      <span\n        className={clsx(\n          points === 3 && 'p-tweet-comment__correct',\n          points === 1 && 'p-tweet-comment__almost',\n          points === 0 && 'p-tweet-comment__incorrect'\n        )}\n      >\n        <Translate pt={<>{likes} jogadores</>} en={<>{likes} players</>} />\n      </span>\n\n      <Translate pt={<> curtem.</>} en={<> do like it.</>} />\n      <br />\n      <span className=\"p-tweet-comment__points\">\n        <StarPoints keyPrefix={playerId} quantity={points} />\n      </span>\n    </span>\n  );\n}\n","import moment from 'moment';\n// Ant Design Resources\nimport { Comment } from 'antd';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { CommentText } from './CommentText';\n\ntype TweetCommentProps = {\n  player: GamePlayer;\n  totalLikes: number;\n};\n\nexport function TweetComment({ player, totalLikes }: TweetCommentProps) {\n  const isCorrect = player.likesGuess === totalLikes;\n  const isAlmost = [totalLikes - 1, totalLikes + 1].includes(player.likesGuess);\n  const points = isCorrect ? 3 : isAlmost ? 1 : 0;\n\n  return (\n    <Comment\n      author={player.name}\n      avatar={<Avatar id={player.avatarId} />}\n      content={\n        <CommentText\n          reaction={player.reaction}\n          likes={player.likesGuess}\n          points={points}\n          playerId={player.id}\n        />\n      }\n      datetime={moment(player.updatedAt).fromNow()}\n      className=\"p-tweet-comment\"\n    />\n  );\n}\n","// Ant Design Resources\nimport { Space } from 'antd';\nimport { CommentOutlined, LikeFilled, ShareAltOutlined } from '@ant-design/icons';\n// Hooks\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Utils\nimport { sortPlayers } from 'utils/helpers';\n// Components\nimport { Topic } from './components/Topic';\nimport { TimedButton } from 'components/buttons';\nimport { Translate } from 'components/language';\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\nimport { TweetComment } from './components/TweetComment';\n\ntype StepResolutionProps = {\n  players: GamePlayers;\n  totalLikes: number;\n  customTopic: string;\n  currentTopic: Topic;\n  goToNextStep: GenericFunction;\n};\nexport function StepResolution({\n  players,\n  totalLikes,\n  customTopic,\n  currentTopic,\n  goToNextStep,\n}: StepResolutionProps) {\n  useTemporarilyHidePlayersBar();\n\n  return (\n    <Step fullWidth className=\"p-step\">\n      <Title level={1}>\n        <Translate pt=\"Resultado\" en=\"Results\" />\n      </Title>\n\n      <div className=\"p-tweet-container\">\n        <div className=\"p-tweet\">\n          <div className=\"p-tweet__topic\">\n            <Topic topic={customTopic ?? currentTopic?.text} />\n          </div>\n          <div className=\"p-tweet__actions\">\n            <div className=\"p-tweet__action\" style={{ color: totalLikes > 0 ? 'DodgerBlue' : 'gray' }}>\n              <LikeFilled className=\"p-tweet__icon\" />\n              {totalLikes}\n            </div>\n            <div className=\"p-tweet__action p-tweet__action-active\">\n              <CommentOutlined className=\"p-tweet__icon\" /> <Translate pt=\"Comentários\" en=\"Comments\" />\n            </div>\n            <div className=\"p-tweet__action\">\n              <ShareAltOutlined className=\"p-tweet__icon\" /> <Translate pt=\"Compartilhar\" en=\"Share\" />\n            </div>\n          </div>\n        </div>\n\n        <ul className=\"p-tweet-comments\">\n          {sortPlayers(players).map((player) => {\n            const key = `player-result-${player.id}`;\n\n            return (\n              <li className=\"p-player-reaction\" key={key}>\n                <TweetComment player={player} totalLikes={totalLikes} />\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <Space className=\"space-container\" align=\"center\">\n        <TimedButton duration={20} onExpire={goToNextStep} onClick={goToNextStep}>\n          <Translate pt=\"Ver Ranking\" en=\"See Ranking\" />\n        </TimedButton>\n      </Space>\n    </Step>\n  );\n}\n","// Ant Design Resources\nimport { Button, Space } from 'antd';\n// Components\nimport { Translate } from 'components/language';\nimport { StepRankingWrapper } from 'components/ranking';\nimport { AdminNextPhaseButton } from 'components/admin';\n\ntype StepRankingProps = {\n  players: GamePlayers;\n  round: GameRound;\n  ranking: GameRanking;\n  goToPreviousStep: GenericFunction;\n  isLastRound?: boolean;\n};\n\nexport function StepRanking({ players, ranking, goToPreviousStep, round, isLastRound }: StepRankingProps) {\n  return (\n    <StepRankingWrapper\n      players={players}\n      ranking={ranking}\n      gainedPointsDescriptions={[<Translate pt=\"Escolha correta ou próxima\" en=\"Correct or close guess\" />]}\n    >\n      <Space className=\"space-container\" align=\"center\">\n        <Button onClick={goToPreviousStep}>\n          <Translate pt=\"Ver resultado novamente\" en=\"See results again\" />\n        </Button>\n      </Space>\n      <AdminNextPhaseButton round={round} lastRound={isLastRound} />\n    </StepRankingWrapper>\n  );\n}\n","// Hooks\nimport { useStep } from 'hooks/useStep';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { StepResolution } from './StepResolution';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { ReviewIcon } from 'components/icons/ReviewIcon';\nimport { StepRanking } from './StepRanking';\nimport { PointsHighlight } from 'components/metrics/PointsHighlight';\n\nfunction PhaseReact({ state, players, info }: PhaseProps) {\n  const { step, goToNextStep, goToPreviousStep } = useStep(0);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.POLEMICA_DA_VEZ.RESOLUTION}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<ReviewIcon />}\n          title={<Translate pt=\"Resultado\" en=\"Results\" />}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  E aí? Será que o assunto bombou?\n                  <br />\n                  Se você acertou a quantidade de curtidas, você ganha <PointsHighlight>\n                    3\n                  </PointsHighlight>{' '}\n                  pontos.\n                  <br />\n                  Se você quase acertou, você ganha <PointsHighlight>1</PointsHighlight> ponto.\n                </>\n              }\n              en={\n                <>\n                  So... did the topic trend?\n                  <br />\n                  If you guessed the correct number of likes, you get <PointsHighlight>\n                    3\n                  </PointsHighlight>{' '}\n                  points.\n                  <br />\n                  If you were one off, you get <PointsHighlight>1</PointsHighlight> point.\n                </>\n              }\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepResolution\n          players={players}\n          customTopic={state.customTopic}\n          currentTopic={state.currentTopic}\n          totalLikes={state.totalLikes}\n          goToNextStep={goToNextStep}\n        />\n\n        {/* Step 2 */}\n        <StepRanking\n          players={players}\n          round={state.round}\n          ranking={state.ranking}\n          goToPreviousStep={goToPreviousStep}\n          isLastRound={state?.lastRound}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseReact;\n","import { orderBy } from 'lodash';\n// Ant Design Resources\nimport { FallOutlined, RiseOutlined } from '@ant-design/icons';\n// Components\nimport { GameOverWrapper } from 'components/game-over';\nimport { Translate } from 'components/language';\nimport { IconAvatar } from 'components/icons/IconAvatar';\nimport { SpeechBubbleThumbsUpIcon } from 'components/icons/SpeechBubbleThumbsUpIcon';\nimport { TrophyIcon } from 'components/icons/TrophyIcon';\n\nfunction PhaseGameOver({ state, players, info }: PhaseProps) {\n  const playerCount = Object.keys(players).length;\n\n  return (\n    <GameOverWrapper announcementIcon={<TrophyIcon />} info={info} state={state}>\n      <ul\n        className=\"p-all-topics\"\n        style={{ gridTemplateColumns: `repeat(${playerCount % 3 === 0 ? 3 : 5}, 1fr)` }}\n      >\n        {orderBy(state.allTopics, ['likes', 'text'], ['desc', 'asc']).map((topic: PastTopic) => {\n          const trended = topic.likes > playerCount / 2;\n          return (\n            <li className=\"p-all-topics__topic\" key={topic.id}>\n              <h3>\n                {trended ? <RiseOutlined /> : <FallOutlined />} {topic.text}\n              </h3>\n              <div className=\"p-all-topics__comment\">\n                <IconAvatar icon={<SpeechBubbleThumbsUpIcon />} shape=\"square\" className=\"p-like-icon\" />{' '}\n                {topic.likes} <Translate pt=\"curtidas\" en=\"likes\" />\n              </div>\n              {}\n            </li>\n          );\n        })}\n      </ul>\n    </GameOverWrapper>\n  );\n}\n\nexport default PhaseGameOver;\n","import { ConfigProvider } from 'antd';\n// Constants\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport PhaseTopicSelection from './PhaseTopicSelection';\nimport PhaseReact from './PhaseReact';\nimport PhaseResolution from './PhaseResolution';\nimport PhaseGameOver from './PhaseGameOver';\n// Fonts\nimport 'assets/fonts/architects-daughter.scss';\n\nConfigProvider.config({\n  theme: {\n    primaryColor: THEME_COLORS.DEFAULT,\n  },\n});\n\nfunction SessionPolemicaDaVez({ gameId }: SessionProps) {\n  function getActiveComponent(phase: string) {\n    switch (phase) {\n      case PHASES.DEFAULT.LOBBY:\n        return PhaseLobby;\n      case PHASES.DEFAULT.RULES:\n        return PhaseRules;\n      case PHASES.DEFAULT.SETUP:\n        return PhaseSetup;\n      case PHASES.POLEMICA_DA_VEZ.TOPIC_SELECTION:\n        return PhaseTopicSelection;\n      case PHASES.POLEMICA_DA_VEZ.REACT:\n        return PhaseReact;\n      case PHASES.POLEMICA_DA_VEZ.RESOLUTION:\n        return PhaseResolution;\n      case PHASES.DEFAULT.GAME_OVER:\n        return PhaseGameOver;\n      default:\n        return PageError;\n    }\n  }\n\n  return (\n    <Session\n      gameId={gameId}\n      gameCollection={GAME_COLLECTION.POLEMICA_DA_VEZ}\n      getActiveComponent={getActiveComponent}\n    />\n  );\n}\n\nexport default SessionPolemicaDaVez;\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\n/**\n * Gets player that is assigned to a property in the state\n * @param propertyName\n * @param state\n * @param players\n * @returns a player instance, a boolean if the player is assigned to given property\n */\nexport function useWhichPlayerIsThe(\n  propertyName = 'activePlayer',\n  state: PlainObject = {},\n  players: Players = {}\n): [GamePlayer, boolean] {\n  const [userId] = useGlobalState('userId');\n  const [activePlayer, setActivePlayer] = useState<GamePlayer>({});\n  const [isUser, setIsUser] = useState(false);\n\n  // Determine if user is active as the guesser, the clue giver, the psychic, the storyteller, etc\n  useEffect(() => {\n    const activePlayer = state?.[propertyName];\n    setActivePlayer(players?.[activePlayer] ?? {});\n    setIsUser(state?.[propertyName] === userId);\n  }, [players, propertyName, state, userId]);\n\n  return [activePlayer, isUser];\n}\n"],"names":["StarIcon","props","xmlns","viewBox","fill","d","TrophyIcon","cx","cy","r","MetricHighlight","children","icon","type","className","iconSize","clsx","size","PointsHighlight","StarPoints","keyPrefix","quantity","hideText","isNegative","num","Math","abs","StarsArray","Array","from","length","_","i","StarFilled","pt","en","View","ViewIf","isVisible","ViewOr","orCondition","ViewSwitch","cases","Error","console","warn","StepTopicSelection","currentTopics","currentCustomTopic","onSubmitTopic","translate","useLanguage","useState","customTopic","setCustomTopic","onSubmitCustomTopic","topicId","id","fullWidth","map","topic","onClick","text","placeholder","onChange","e","target","value","onPressEnter","Boolean","TargetHighlight","TargetIcon","state","players","info","meta","useStep","step","goToNextStep","setStep","useWhichPlayerIsThe","activePlayer","isUserTheActivePlayer","request","useAPICall","apiFunction","POLEMICA_DA_VEZ_API","actionName","onBeforeCall","onError","successMessage","errorMessage","payload","action","useOnSubmitTopicAPIRequest","isFixedRounds","options","fixedRounds","useMock","getRandomItem","phase","allowedPhase","PHASES","round","onPressButton","time","circleColor","appearance","color","contained","TrendingIcon","title","onClose","currentRound","current","duration","undefined","total","player","addressUser","order","gameOrder","activePlayerId","instruction","Topic","likes","TwitterOutlined","RiseOutlined","src","SpeechBubbleThumbsUpIcon","shape","StepLiking","currentTopic","onSubmitReaction","isLoading","useLoading","like","setLike","countOptions","useMemo","Object","keys","IconAvatar","SpeechBubbleThumbsDownIcon","getAnimationClass","option","key","disabled","reaction","likesGuess","useOnSubmitReactionAPIRequest","playerCount","FeedbackIcon","CommentText","playerId","points","TweetComment","totalLikes","isCorrect","isAlmost","includes","author","name","avatar","avatarId","content","datetime","moment","updatedAt","fromNow","StepResolution","useTemporarilyHidePlayersBar","level","style","LikeFilled","CommentOutlined","ShareAltOutlined","sortPlayers","align","onExpire","StepRanking","ranking","goToPreviousStep","isLastRound","gainedPointsDescriptions","lastRound","ReviewIcon","announcementIcon","gridTemplateColumns","orderBy","allTopics","trended","FallOutlined","ConfigProvider","theme","primaryColor","THEME_COLORS","gameId","gameCollection","GAME_COLLECTION","getActiveComponent","PhaseLobby","PhaseRules","PhaseSetup","PhaseTopicSelection","PhaseReact","PhaseResolution","PhaseGameOver","PageError","propertyName","useGlobalState","userId","setActivePlayer","isUser","setIsUser","useEffect"],"sourceRoot":""}