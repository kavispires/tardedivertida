{"version":3,"file":"static/js/contadores-historias.3d0307e3.chunk.js","mappings":"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","sources":["components/general/Achievements.tsx","components/icons/AnimatedClockIcon.tsx","components/icons/TrophyIcon.tsx","components/players/TableOrder.tsx","components/text/MetricHighlight.tsx","components/views/View.tsx","components/views/ViewIf.tsx","components/views/ViewOr.tsx","components/views/ViewSwitch.tsx","games/contadores-historias/components/StoryWaiting.tsx","games/contadores-historias/utils/mock.ts","games/contadores-historias/components/BookPages.tsx","games/contadores-historias/components/StoryWriting.tsx","games/contadores-historias/PhaseStory.tsx","games/contadores-historias/utils/api-requests.ts","games/contadores-historias/components/TableFaceDown.tsx","games/contadores-historias/StepPlayCard.tsx","games/contadores-historias/components/Highlights.tsx","games/contadores-historias/PhaseCardPlay.tsx","games/contadores-historias/components/RulesBlobs.tsx","games/contadores-historias/StepVoting.tsx","games/contadores-historias/PhaseVoting.tsx","games/contadores-historias/StepResolution.tsx","games/contadores-historias/StepRanking.tsx","games/contadores-historias/PhaseResolution.tsx","games/contadores-historias/utils/achievements.ts","games/contadores-historias/PhaseGameOver.tsx","games/contadores-historias/SessionContadoresHistorias.tsx","hooks/useWhichPlayerIsThe.ts","../node_modules/@ant-design/icons-svg/es/asn/CaretUpOutlined.js","../node_modules/@ant-design/icons/es/icons/CaretUpOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/CrownFilled.js","../node_modules/@ant-design/icons/es/icons/CrownFilled.js","../node_modules/@ant-design/icons-svg/es/asn/DownSquareOutlined.js","../node_modules/@ant-design/icons/es/icons/DownSquareOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/StarFilled.js","../node_modules/@ant-design/icons/es/icons/StarFilled.js","../node_modules/@ant-design/icons-svg/es/asn/UpCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/UpCircleOutlined.js","../node_modules/rc-rate/es/Star.js","../node_modules/rc-rate/es/Rate.js","../node_modules/rc-rate/es/util.js","../node_modules/rc-rate/es/index.js","../node_modules/antd/es/rate/index.js"],"sourcesContent":["import clsx from 'clsx';\n// Ant Design Resources\nimport { Button, Popover } from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\n// Utils\nimport { getAnimationClass } from 'utils/helpers';\n// Components\nimport { Avatar } from 'components/avatars';\nimport { IconAvatar } from 'components/icons/IconAvatar';\nimport { DualTranslate, Translate } from 'components/language';\nimport { Title } from 'components/text';\nimport { MedalStarIcon } from 'components/icons/MedalStarIcon';\n\ntype AchievementsProps = {\n  players: GamePlayers;\n  achievements: Achievement[];\n  reference: AchievementReference;\n};\n\nexport function Achievements({ players, achievements, reference }: AchievementsProps) {\n  const unknownText = { pt: 'Desconhecido', en: 'Unknown' };\n\n  return (\n    <div className={clsx('achievements', getAnimationClass('fadeIn'))}>\n      <Title size=\"small\" level={3}>\n        <Translate pt=\"Medalhas\" en=\"Achievements\" />\n      </Title>\n      <ul className=\"achievements-list\">\n        {achievements.map((achievement, index) => {\n          const { Icon = MedalStarIcon, ...achievementObj } = reference[achievement.type] ?? {};\n          const player = players[achievement.playerId];\n          return (\n            <li\n              key={`achievement-${achievement.type}`}\n              className={clsx(\n                'achievements-entry',\n                getAnimationClass(\n                  'flipInY',\n                  index < achievements.length / 2 ? index : achievements.length - 1 - index\n                )\n              )}\n            >\n              <div className=\"achievement__medal\">\n                <IconAvatar icon={<Icon />} size=\"large\" />\n              </div>\n              <h4 className=\"achievement__title\">\n                <DualTranslate>{achievementObj.title ?? unknownText}</DualTranslate>\n              </h4>\n              <div className=\"achievement__avatar\">\n                <Avatar id={player.avatarId} />\n              </div>\n              <div className=\"achievement__name\">{player.name}</div>\n              {Boolean(achievementObj.description) && (\n                <div className=\"achievement__description\">\n                  <Popover\n                    content={\n                      <>\n                        <DualTranslate>{achievementObj.description ?? unknownText}</DualTranslate> (\n                        {achievement.value})\n                      </>\n                    }\n                  >\n                    <Button icon={<QuestionCircleOutlined />} shape=\"circle\" type=\"text\" size=\"small\" />\n                  </Popover>\n                </div>\n              )}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","export function AnimatedClockIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fbfbfb\"\n        d=\"M464 256c0 114.9-93.1 208-208 208S48 370.9 48 256 141.1 48 256 48s208 93.1 208 208z\"\n      ></path>\n      <path\n        fill=\"#e3effa\"\n        d=\"M464 256c0-114.9-93.2-208-208.1-207.9-67 0-130 32.4-169 86.9 93.4-66.9 223.3-45.4 290.2 47.9 51.9 72.4 51.9 169.8 0 242.3C431.7 386.1 464 323.1 464 256z\"\n      ></path>\n      <path\n        fill=\"#fcc369\"\n        d=\"M256 8c137 0 248 111 248 248S393 504 256 504 8 393 8 256 119 8 256 8zm0 456c114.9 0 208-93.1 208-208S370.9 48 256 48 48 141.1 48 256s93.1 208 208 208z\"\n      ></path>\n      <path\n        fill=\"#ed9b52\"\n        d=\"M256 32C132.3 32 32 132.3 32 256s100.3 224 224 224 224-100.3 224-224S379.7 32 256 32zm0 432c-114.9 0-208-93.1-208-208S141.1 48 256 48s208 93.1 208 208-93.1 208-208 208z\"\n      ></path>\n      <path d=\"M256 496c-132.5-.1-239.9-107.5-240-240 0-4.4-3.6-8-8-8s-8 3.6-8 8c0 141.4 114.6 256 256 256.1 109.6 0 207-69.7 242.4-173.5l-15.1-5.2C450.1 430.7 358.7 496 256 496zm0-496C133.8.1 28.6 86.6 4.8 206.5l15.7 3.1C46.3 79.5 172.6-5 302.6 20.7s214.6 152.1 188.8 282.1c-1 5.1-2.2 10.1-3.5 15.1l15.5 4.1c36.4-136.7-45-277-181.8-313.4C300.2 2.9 278.1 0 256 0zM18 225l-15.9-2c-.7 5.4-1.2 10.9-1.6 16.5l16 1c.3-5.2.8-10.4 1.5-15.5z\"></path>\n      <path d=\"M256 472c119.3 0 216-96.7 216-216S375.3 40 256 40 40 136.7 40 256c.1 119.2 96.8 215.9 216 216zm-8-415.8V88h16V56.2c104.1 4.3 187.5 87.7 191.8 191.8H424v16h31.8c-4.3 104.1-87.7 187.5-191.8 191.8V424h-16v31.8C143.9 451.5 60.5 368.1 56.2 264H88v-16H56.2C60.5 143.9 143.9 60.5 248 56.2z\"></path>\n\n      <g>\n        <path\n          fill=\"#555fa3\"\n          d=\"M273 141.6v114.24a15.55 15.55 0 01-3.68 10.16l-50.24 61.12a14.47 14.47 0 01-20.42 1.25 14.32 14.32 0 01-2.78-3.33 18.75 18.75 0 012.4-22.64l40.8-48.16A7.77 7.77 0 00241 249V141.6a16.07 16.07 0 1132-3 15.44 15.44 0 010 3z\"\n        ></path>\n        <path d=\"M206.6 339.94c.56 0 1.11.06 1.67.06a22.7 22.7 0 0016.95-7.83l50.31-61.05a24 24 0 005.47-15.26V141.6a24 24 0 10-48-3 25.69 25.69 0 000 3v107.47l-40.62 48a26.49 26.49 0 00-3.2 32.38 23.05 23.05 0 0017.42 10.49zm-2.18-32.34l40.8-48.18a16.1 16.1 0 003.78-10.36V141.6a8.14 8.14 0 1116 0v114.26a8 8 0 01-1.82 5.08l-50.05 60.76a6.37 6.37 0 01-5.32 2.28 7.05 7.05 0 01-5.29-3.39 10.81 10.81 0 011.89-13z\"></path>\n        <animateTransform\n          attributeName=\"transform\"\n          dur=\"2s\"\n          from=\"0 256 256\"\n          repeatCount=\"indefinite\"\n          to=\"360 256 256\"\n          type=\"rotate\"\n        ></animateTransform>\n      </g>\n    </svg>\n  );\n}\n","export function TrophyIcon(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" {...props}>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M397.763 87.5h-98.509v213.476h98.509c58.855 0 106.737-47.882 106.737-106.738S456.618 87.5 397.763 87.5zm0 183.476h-68.509V117.5h68.509c42.381 0 76.738 34.357 76.738 76.738-.001 42.381-34.357 76.738-76.738 76.738zM114.237 87.5C55.382 87.5 7.5 135.382 7.5 194.238s47.882 106.738 106.737 106.738h98.509V87.5zm68.509 183.476h-68.509c-42.381 0-76.738-34.357-76.738-76.738S71.856 117.5 114.237 117.5h68.509zM314 419.5H198l15-91h86z\"\n      ></path>\n      <path fill=\"#fee97d\" d=\"M299 328.5h-30l15 91h30z\"></path>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M382.221 504.5H129.779a7 7 0 01-7-7v-11.629c0-22.091 17.909-40 40-40h186.442c22.091 0 40 17.909 40 40V497.5a7 7 0 01-7 7z\"\n      ></path>\n      <path\n        fill=\"#fee97d\"\n        d=\"M349.221 445.871h-30c22.092 0 40 17.909 40 40V497.5a7 7 0 01-7 7h30a7 7 0 007-7v-11.629c0-22.092-17.909-40-40-40zm-5 0H167.779v-3.629c0-22.091 17.909-40 40-40h96.442c22.091 0 40 17.909 40 40z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M304.221 402.241h-30c22.092 0 40 17.909 40 40v3.629h30v-3.629c0-22.091-17.909-40-40-40z\"\n      ></path>\n      <path\n        fill=\"#fef0ae\"\n        d=\"M411.5 57.5h-311c-13.807 0-25-11.193-25-25s11.193-25 25-25h311c13.807 0 25 11.193 25 25s-11.193 25-25 25z\"\n      ></path>\n      <path\n        fill=\"#fee97d\"\n        d=\"M411.5 7.5h-30c13.807 0 25 11.193 25 25s-11.193 25-25 25h30c13.807 0 25-11.193 25-25s-11.193-25-25-25zM256 362.5c-83.119 0-150.5-67.381-150.5-150.5V57.5h301V212c0 83.119-67.381 150.5-150.5 150.5z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M376.5 57.5V212c0 78.056-59.424 142.229-135.5 149.757 4.934.488 9.937.743 15 .743 83.119 0 150.5-67.381 150.5-150.5V57.5z\"\n      ></path>\n      <circle cx=\"256\" cy=\"207.96\" r=\"94.169\" fill=\"#fff\"></circle>\n      <path\n        fill=\"#fee97d\"\n        d=\"M262.277 154.391l13.139 26.623a7 7 0 005.271 3.829l29.38 4.269c5.742.834 8.034 7.89 3.879 11.94l-21.26 20.723a6.998 6.998 0 00-2.013 6.196l5.019 29.261c.981 5.718-5.021 10.079-10.157 7.379l-26.278-13.815a7.001 7.001 0 00-6.515 0l-26.278 13.815c-5.135 2.7-11.137-1.661-10.157-7.379l5.019-29.261a7 7 0 00-2.013-6.196l-21.26-20.723c-4.155-4.05-1.862-11.106 3.879-11.94l29.38-4.269a7 7 0 005.271-3.829l13.139-26.623c2.569-5.203 9.987-5.203 12.555 0z\"\n      ></path>\n      <path\n        fill=\"#f4da6e\"\n        d=\"M313.946 201.052c4.155-4.05 1.862-11.106-3.88-11.94l-29.38-4.269a6.997 6.997 0 01-5.27-3.829l-13.139-26.623c-2.568-5.203-9.987-5.203-12.554 0l-10.888 22.061 3.874 7.85a18.632 18.632 0 0014.03 10.193c15.284 2.221 21.386 21.003 10.327 31.783a18.632 18.632 0 00-5.359 16.493l1.755 10.236 22.073 11.604c5.135 2.7 11.137-1.661 10.157-7.379l-5.019-29.261a7 7 0 012.013-6.196z\"\n      ></path>\n      <path d=\"M282.025 177.458l-13.022-26.387c-2.462-4.985-7.443-8.082-13.003-8.082s-10.541 3.097-13.003 8.083l-13.022 26.387-29.119 4.231c-5.502.799-9.987 4.581-11.706 9.868-1.718 5.288-.312 10.983 3.669 14.865l21.071 20.539-4.975 29.003c-.939 5.479 1.271 10.914 5.77 14.182s10.349 3.691 15.271 1.104L256 257.557l26.045 13.693c4.903 2.578 10.759 2.174 15.271-1.104 4.498-3.268 6.709-8.702 5.769-14.182l-4.974-29.003 21.071-20.539c3.981-3.881 5.387-9.577 3.669-14.865-1.719-5.287-6.204-9.068-11.706-9.867zm5.426 38.946a14.494 14.494 0 00-4.169 12.834l4.847 28.264-25.382-13.345a14.498 14.498 0 00-13.495 0l-25.381 13.344 4.847-28.262a14.495 14.495 0 00-4.169-12.835l-20.534-20.016 28.377-4.124a14.494 14.494 0 0010.918-7.932L256 158.618l12.69 25.714a14.494 14.494 0 0010.918 7.932l28.377 4.124zm194.096-99.749c-17.941-19.36-41.716-31.799-67.547-35.49v-16.27c16.756-1.282 30-15.316 30-32.394C444 14.58 429.421 0 411.5 0h-311C82.579 0 68 14.58 68 32.5c0 17.078 13.244 31.112 30 32.394v16.27c-25.714 3.676-49.409 16.029-67.321 35.248a7.5 7.5 0 0010.972 10.228C56.721 110.471 76.495 99.908 98 96.352v15.236c-39.204 7.62-68 42.024-68 82.652 0 22.509 8.765 43.663 24.675 59.561 15.532 15.543 36.076 24.242 57.996 24.641a157.847 157.847 0 008.007 15.038h-6.438c-54.722 0-99.24-44.519-99.24-99.24 0-14.091 2.904-27.711 8.633-40.48a7.5 7.5 0 00-13.685-6.14C3.347 162.333 0 178.019 0 194.24c0 62.992 51.248 114.24 114.24 114.24h16.729c17.756 22.957 41.679 40.906 69.267 51.348l-6.089 36.917c-18.396 5.522-32.123 21.915-33.701 41.685-25.112 1.221-45.167 22.032-45.167 47.441V497.5c0 7.995 6.505 14.5 14.5 14.5H382.22c7.995 0 14.5-6.505 14.5-14.5v-11.629c0-25.409-20.055-46.22-45.167-47.441-1.579-19.771-15.306-36.163-33.701-41.685l-6.089-36.917c27.588-10.441 51.511-28.391 69.267-51.348h16.729c62.992 0 114.24-51.248 114.24-114.24.001-28.841-10.814-56.394-30.452-77.585zM65.281 243.195C52.203 230.126 45 212.74 45 194.24c0-32.392 22.265-59.968 53-67.308V212c0 17.851 2.98 35.018 8.461 51.034-15.554-1.728-29.958-8.609-41.18-19.839zM100.5 50C90.851 50 83 42.149 83 32.5S90.851 15 100.5 15h311c9.649 0 17.5 7.851 17.5 17.5S421.149 50 411.5 50zM414 126.932c30.735 7.34 53 34.916 53 67.308 0 18.5-7.203 35.886-20.286 48.958-11.218 11.227-25.621 18.108-41.175 19.836C411.02 247.018 414 229.851 414 212zm-77.518 311.439h-22.895c-4.143 0-7.5 3.358-7.5 7.5s3.357 7.5 7.5 7.5h35.634c17.921 0 32.5 14.58 32.5 32.5V497H130.279v-11.129c0-17.92 14.579-32.5 32.5-32.5h115.808c4.143 0 7.5-3.358 7.5-7.5s-3.357-7.5-7.5-7.5H175.518c1.921-16.101 15.651-28.629 32.261-28.629h96.441c16.611-.001 30.342 12.527 32.262 28.629zm-126.801-43.63l4.987-30.237C227.849 368.08 241.703 370 256 370s28.151-1.92 41.332-5.496l4.987 30.237zM256 355c-78.851 0-143-64.149-143-143V65h286v147c0 78.851-64.149 143-143 143zm141.76-61.52h-6.438a157.741 157.741 0 008.007-15.038c21.919-.399 42.463-9.097 57.991-24.637C473.235 237.903 482 216.749 482 194.24c0-40.627-28.796-75.032-68-82.652V96.352c21.605 3.57 41.449 14.208 56.545 30.498C487.604 145.259 497 169.192 497 194.24c0 54.721-44.519 99.24-99.24 99.24zM256 106.291c-56.061 0-101.67 45.609-101.67 101.669S199.939 309.629 256 309.629 357.67 264.02 357.67 207.96 312.061 106.291 256 106.291zm0 188.338c-47.79 0-86.67-38.88-86.67-86.669s38.88-86.669 86.67-86.669 86.67 38.88 86.67 86.669-38.88 86.669-86.67 86.669z\"></path>\n    </svg>\n  );\n}\n","import { Fragment, ReactNode, useMemo } from 'react';\nimport clsx from 'clsx';\n// Helpers\nimport { getAvatarColorById } from 'utils/helpers';\nimport { reorder } from './reorder';\n// Components\nimport { Translate } from 'components/language';\nimport { AvatarName } from 'components/avatars';\nimport { RotationIcon } from 'components/icons/RotationIcon';\nimport { ForwardFilled } from '@ant-design/icons';\n\ntype TableOrderProps = {\n  /**\n   * Game players\n   */\n  players: GamePlayers;\n  /**\n   * The order array\n   */\n  order: PlayerId[];\n  /**\n   * The active player who should be highlighted\n   */\n  activePlayerId?: PlayerId;\n  /**\n   * Optional custom title\n   */\n  title?: ReactNode;\n  /**\n   * Optional custom class name\n   */\n  className?: string;\n  /**\n   * Reorder turn order so it starts with given player\n   */\n  reorderByUser?: PlayerId;\n  /**\n   * The size of the table order\n   */\n  size?: 'default' | 'small';\n};\n\n/**\n * Circular Table/Turn order display\n * @param props\n * @returns\n */\nexport function TableOrder({\n  players,\n  order,\n  activePlayerId,\n  reorderByUser,\n  title,\n  className = '',\n  size,\n}: TableOrderProps) {\n  const orderedList = useMemo(\n    () => (Boolean(reorderByUser) ? reorder(order, reorderByUser!) : order),\n    [reorderByUser, order]\n  );\n  const doublePlayerCount = orderedList.length * 2;\n\n  return (\n    <div className={clsx('table-order', size && `table-order--${size}`, className)}>\n      <ol className=\"table-order__players\">\n        {orderedList.map((playerId, index) => {\n          const player = players[playerId];\n          const isActive = activePlayerId === playerId;\n          const color = getAvatarColorById(player.avatarId);\n          return (\n            <Fragment key={`table-order-${playerId}`}>\n              <li\n                // @ts-ignore\n                style={{ '--t': doublePlayerCount, '--i': index * 2 }}\n                className={clsx('table-order__player', isActive && 'table-order__player--active')}\n              >\n                <span className=\"table-order__icon\" style={isActive ? { backgroundColor: color } : undefined}>\n                  <AvatarName player={player} upright />\n                </span>\n              </li>\n              <li\n                // @ts-ignore\n                style={{ '--t': doublePlayerCount, '--i': index * 2 + 1 }}\n                className=\"table-order__chevron\"\n              >\n                <span className=\"table-order__icon\">\n                  <ForwardFilled />\n                </span>\n              </li>\n            </Fragment>\n          );\n        })}\n        <li className=\"table-order__center\">\n          <div className=\"table-order__center-container\">\n            <RotationIcon style={{ width: '3rem' }} />\n            <header className=\"table-order__title\">\n              <Translate en=\"Player Order\" pt=\"Ordem dos Jogadores\" custom={title} />\n            </header>\n          </div>\n        </li>\n      </ol>\n    </div>\n  );\n}\n","import { ReactNode } from 'react';\nimport clsx from 'clsx';\n// Components\nimport { IconAvatar } from 'components/icons/IconAvatar';\n\nexport type MetricHighlightProps = {\n  /**\n   * The text to be highlighted\n   */\n  children: ReactNode;\n  /**\n   * The icon representing the metric\n   */\n  icon: ReactNode;\n  /**\n   * Indicates if it's a negative metric\n   */\n  type?: 'positive' | 'negative' | 'default';\n  /**\n   * Custom class\n   */\n  className?: string;\n};\n\nexport function MetricHighlight({ children, icon, type, className }: MetricHighlightProps) {\n  return (\n    <span className={clsx('metric-highlight', type && `metric-highlight--${type}`, className)}>\n      {children} <IconAvatar size=\"small\" icon={icon} />\n    </span>\n  );\n}\n","import { ReactNode } from 'react';\n\ntype ViewProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n};\n\nexport function View({ children }: ViewProps) {\n  return <>{children}</>;\n}\n","import { ReactNode } from 'react';\n\ntype ViewIfProps = {\n  /**\n   * The content of the component\n   */\n  children: ReactNode;\n  isVisible?: boolean;\n};\n\nexport function ViewIf({ isVisible = false, children }: ViewIfProps) {\n  return isVisible ? <>{children}</> : <></>;\n}\n","type ViewOrProps = {\n  children: [any, any];\n  orCondition?: boolean;\n};\n\nexport function ViewOr({ orCondition = false, children }: ViewOrProps) {\n  return orCondition ? <>{children[0]}</> : <>{children[1]}</>;\n}\n","type ViewSwitchProps = {\n  cases: boolean[];\n  /**\n   * The content of the component\n   */\n  children: any;\n};\n\nexport function ViewSwitch({ cases, children }: ViewSwitchProps) {\n  if (cases.length > 5) {\n    throw Error('ViewSwitch only supports up to 5 cases');\n  }\n\n  if (cases[0] && children[0]) {\n    return children[0];\n  }\n\n  if (cases[1] && children[1]) {\n    return children[1];\n  }\n\n  if (cases[2] && children[2]) {\n    return children[2];\n  }\n\n  if (cases[3] && children[3]) {\n    return children[3];\n  }\n\n  if (cases[4] && children[4]) {\n    return children[4];\n  }\n  console.warn('Rendering all children in the ViewSwitch');\n  return children;\n}\n","// Components\nimport { AvatarName } from 'components/avatars';\nimport { FloatingHand, ImageCardHand } from 'components/cards';\nimport { AnimatedClockIcon } from 'components/icons/AnimatedClockIcon';\nimport { IconAvatar } from 'components/icons/IconAvatar';\nimport { Translate } from 'components/language';\nimport { TableOrder } from 'components/players/TableOrder';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\n\ntype StoryWaitingProps = {\n  storyteller: GamePlayer;\n  user: GamePlayer;\n  players: GamePlayers;\n  gameOrder: PlayerId[];\n};\n\nexport function StoryWaiting({ storyteller, user, players, gameOrder }: StoryWaitingProps) {\n  return (\n    <Step fullWidth className=\"c-story-waiting\">\n      <Title>\n        <IconAvatar icon={<AnimatedClockIcon />} size=\"large\" />{' '}\n        <Translate pt=\"Aguarde...\" en=\"Please wait...\" />\n      </Title>\n      <Instruction contained>\n        <AvatarName player={storyteller} addressUser />{' '}\n        <Translate\n          pt=\"está escrevendo uma história para essa rodada.\"\n          en=\"is writing a story for this round.\"\n        />\n        <br />\n        <Translate\n          pt=\"Enquanto isso, examine suas cartas! Você as usará durante esta rodada.\"\n          en=\"In the meantime, examine your cards. You're gonna use them this round.\"\n        />\n      </Instruction>\n\n      <TableOrder\n        players={players}\n        activePlayerId={storyteller.id}\n        order={gameOrder}\n        size=\"small\"\n        reorderByUser={storyteller.id}\n      />\n\n      <FloatingHand>\n        <ImageCardHand hand={user.hand} sizeRatio={user.hand.length} />\n      </FloatingHand>\n    </Step>\n  );\n}\n","import { getRandomItem } from 'utils/helpers';\n\nconst randomWords = ['avocado', 'bell pepper', 'crustaceous', 'dinner'];\n\nexport function mockStory(hand: string[]) {\n  return {\n    story: getRandomItem(randomWords),\n    cardId: getRandomItem(hand),\n  };\n}\n\nexport function mockPlayCard(hand: string[]) {\n  return {\n    cardId: getRandomItem(hand),\n  };\n}\n\nexport function mockVote(table: TableEntry[], hand: string[]) {\n  return {\n    vote: getRandomItem(\n      table.map((tableEntry) => tableEntry.cardId).filter((cardId) => !hand.includes(cardId))\n    ),\n  };\n}\n","type BookPagesProps = {\n  leftPage: any;\n  rightPage: any;\n};\n\nexport function BookPages({ leftPage, rightPage }: BookPagesProps) {\n  return (\n    <svg viewBox=\"0 0 590 320\" className=\"c-book-pages\">\n      <path\n        d=\"M4 12.46s71.16 8 145.65 0S295 16 295 16s90.78-12.42 156 0S586 5.14 586 5.14v296s-43.23 24.6-158.29 8S295 314 295 314s-94.44-17.89-143.33-3.59c-29.88 8.74-147.64-4-147.64-4z\"\n        fill=\"#ffffff\"\n      ></path>\n      <foreignObject x=\"13\" y=\"23\" width=\"280\" height=\"276\">\n        <div>{leftPage}</div>\n      </foreignObject>\n\n      <foreignObject x=\"295\" y=\"23\" width=\"280\" height=\"276\">\n        <div>{rightPage}</div>\n      </foreignObject>\n      <path d=\"M294.75 23.77h.5v280.66h-.5z\" fill=\"grey\"></path>\n    </svg>\n  );\n}\n","import { useState } from 'react';\n// Ant Design Resources\nimport { Button, Input, Space } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Utils\nimport { mockStory } from '../utils/mock';\n// Components\nimport { BookPages } from './BookPages';\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\nimport { Translate } from 'components/language';\nimport { FloatingHand, ImageCard, ImageCardHand } from 'components/cards';\n\ntype StoryWritingProps = {\n  user: GamePlayer;\n  onSubmitStory: GenericFunction;\n};\n\nexport function StoryWriting({ user, onSubmitStory }: StoryWritingProps) {\n  const { translate } = useLanguage();\n  const { isLoading } = useLoading();\n  const [story, setStory] = useState('');\n  const [cardId, setCardId] = useState('');\n\n  const onButtonClick = () => {\n    if (cardId && story) {\n      onSubmitStory({\n        story: story.trim(),\n        cardId,\n      });\n    }\n  };\n\n  useMock(() => {\n    onSubmitStory(mockStory(user.hand));\n  }, []);\n\n  return (\n    <Step fullWidth className=\"c-story-writing\">\n      <Title>\n        <Translate pt=\"Escreva uma história\" en=\"Tell us a story\" />\n      </Title>\n      <div className=\"c-story-book\">\n        <BookPages\n          leftPage={\n            <div className=\"c-story-book__selected-card\">\n              {cardId && <ImageCard imageId={cardId} cardWidth={175} />}\n            </div>\n          }\n          rightPage={\n            <div className=\"c-story-book__instructions\">\n              <ul>\n                <li>\n                  <Translate\n                    pt=\"Selecione uma carta abaixo e escreva algo sobre ela.\"\n                    en=\"Select a card below and write something about it.\"\n                  />\n                </li>\n                <li>\n                  <Translate\n                    pt=\"Escreva o que você quiser: uma frase, uma palavra única, uma expressão, letra de música. Não há restrições.\"\n                    en=\"Write whatever you want: a sentence, a single word, an expression, a song lyric. There are no restrictions.\"\n                  />\n                </li>\n                <li>\n                  <Translate\n                    pt=\"Pense em algo que ajudará os outros jogadores a escolher a carta selecionada. Não seja óbvio, se todos escolherem a carta correta você não ganha pontos, e não seja muito vago porque se ninguém acerta, você também fica sem pontos.\"\n                    en=\"You want something that will help players to find the selected card. Don't be too obvious, because if all players guess correctly you get no points. And also don't be too vague, if nobody guesses the card you also get no points.\"\n                  />\n                </li>\n                <li>\n                  <Input\n                    className=\"c-story-writing-input\"\n                    placeholder={translate('Escreva aqui', 'Write your clue here')}\n                    onChange={(e) => setStory(e.target.value)}\n                    onPressEnter={onButtonClick}\n                  />\n                </li>\n              </ul>\n            </div>\n          }\n        />\n      </div>\n\n      <Space className=\"space-container c-input-container\" align=\"center\">\n        <Button type=\"primary\" disabled={isLoading || story.length < 1 || !cardId} onClick={onButtonClick}>\n          <Translate pt=\"Enviar pista secreta e carta\" en=\"Send secret clue and card\" />\n        </Button>\n      </Space>\n\n      <FloatingHand>\n        <ImageCardHand\n          hand={user.hand}\n          onSelectCard={setCardId}\n          disabledSelectButton={isLoading}\n          sizeRatio={user.hand.length}\n        />\n      </FloatingHand>\n    </Step>\n  );\n}\n","// Hooks\nimport { useIsUserReady } from 'hooks/useIsUserReady';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useStep } from 'hooks/useStep';\nimport { useUser } from 'hooks/useUser';\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\nimport { useOnSubmitStoryAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { StoryWaiting } from './components/StoryWaiting';\nimport { StoryWriting } from './components/StoryWriting';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { RoundAnnouncement } from 'components/round';\nimport { Instruction } from 'components/text';\nimport { Translate } from 'components/language';\nimport { AvatarName } from 'components/avatars';\nimport { TurnOrder } from 'components/players';\nimport { ImageCardPreloadHand } from 'components/cards';\nimport { ViewOr } from 'components/views';\nimport { FairyTaleIcon } from 'components/icons/FairyTaleIcon';\n\nfunction PhaseStory({ state, players, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, goToNextStep, setStep } = useStep(0);\n  const user = useUser(players);\n  const isUserReady = useIsUserReady(players, state);\n  const [storyteller, isUserTheStoryTeller] = useWhichPlayerIsThe('storytellerId', state, players);\n\n  const onSubmitStory = useOnSubmitStoryAPIRequest(setStep);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.CONTADORES_HISTORIAS.STORY}>\n      <StepSwitcher step={step} conditions={[!isUserReady]} players={players}>\n        {/* Step 0 */}\n        <RoundAnnouncement round={state.round} onPressButton={goToNextStep} time={5} circleColor=\"blue\" />\n\n        {/* Step 1 */}\n        <PhaseAnnouncement\n          icon={<FairyTaleIcon />}\n          title={translate('Conte-nos uma história', 'Tell us a story...')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n          buttonText=\"\"\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  Para essa rodada, <AvatarName player={storyteller} addressUser size=\"small\" /> será o(a)\n                  Contador(a) de Histórias.\n                </>\n              }\n              en={\n                <>\n                  For this round, <AvatarName player={storyteller} addressUser /> will be the Storyteller.\n                </>\n              }\n            />\n            <TurnOrder players={players} order={state.gameOrder} activePlayerId={state.storytellerId} />\n            <ImageCardPreloadHand hand={user?.hand} />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 2 */}\n        <ViewOr orCondition={isUserTheStoryTeller}>\n          <StoryWriting user={user} onSubmitStory={onSubmitStory} />\n          <StoryWaiting user={user} storyteller={storyteller} players={players} gameOrder={state.gameOrder} />\n        </ViewOr>\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseStory;\n","import { CONTADORES_HISTORIAS_API } from 'services/adapters';\nimport { useAPICall } from 'hooks/useAPICall';\nimport { useLanguage } from 'hooks/useLanguage';\n\nexport function useOnSubmitStoryAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: CONTADORES_HISTORIAS_API.submitAction,\n    actionName: 'submit-story',\n    onBeforeCall: () => setStep(3),\n    onError: () => setStep(0),\n    successMessage: translate('História submetida com sucesso', 'Story submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua história',\n      'Oops, the application found an error while trying to submit your story'\n    ),\n  });\n\n  return (payload: SubmitStoryPayload) => {\n    request({\n      action: 'SUBMIT_STORY',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnPlayCardAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: CONTADORES_HISTORIAS_API.submitAction,\n    actionName: 'play-card',\n    onError: () => setStep(1),\n    successMessage: translate('Carta submetida com sucesso', 'Card submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar sua carta',\n      'Oops, the application found an error while trying to submit your card'\n    ),\n  });\n\n  return (payload: PlayCardPayload) => {\n    request({\n      action: 'PLAY_CARD',\n      ...payload,\n    });\n  };\n}\n\nexport function useOnSubmitVoteAPIRequest(setStep: GenericFunction) {\n  const { translate } = useLanguage();\n\n  const request = useAPICall({\n    apiFunction: CONTADORES_HISTORIAS_API.submitAction,\n    actionName: 'submit-vote',\n    onError: () => setStep(1),\n    successMessage: translate('Voto submetido com sucesso', 'Vote submitted successfully'),\n    errorMessage: translate(\n      'Vixi, o aplicativo encontrou um erro ao tentar enviar seu voto',\n      'Oops, the application found an error while trying to submit your vote'\n    ),\n  });\n\n  return (payload: SubmitVotePayload) => {\n    request({\n      action: 'SUBMIT_VOTE',\n      ...payload,\n    });\n  };\n}\n","import clsx from 'clsx';\n// Components\nimport { ImageCardBack } from 'components/cards';\n\ntype TableFaceDownProps = {\n  players: GamePlayers;\n  user: GamePlayer;\n};\n\nexport function TableFaceDown({ players, user }: TableFaceDownProps) {\n  const baseClass = 'c-table-face-down-card';\n\n  return (\n    <div className=\"c-table-face-down\">\n      {Object.values(players).map((player, index) => {\n        const isHidden = !player.cardId;\n        const hiddenClassModifier = player.id === user.id ? 'hidden-user' : 'hidden';\n\n        return (\n          <ImageCardBack\n            key={`card-back-${player.id}`}\n            cardWidth={150}\n            className={clsx(\n              baseClass,\n              `${baseClass}--${index}`,\n              isHidden && `${baseClass}--${hiddenClassModifier}`\n            )}\n          />\n        );\n      })}\n    </div>\n  );\n}\n","// Hooks\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\n// Components\nimport { TableFaceDown } from './components/TableFaceDown';\nimport { mockPlayCard } from './utils/mock';\nimport { Step } from 'components/steps';\nimport { Instruction, Title } from 'components/text';\nimport { Card, FloatingHand, ImageCardHand } from 'components/cards';\nimport { ViewOr } from 'components/views';\nimport { Translate } from 'components/language';\n\ntype StepPlayCardProps = {\n  players: GamePlayers;\n  story: string;\n  user: GamePlayer;\n  onPlayCard: GenericFunction;\n  storyteller: GamePlayer;\n  isUserTheStoryTeller: boolean;\n};\n\nexport function StepPlayCard({\n  players,\n  story,\n  user,\n  onPlayCard,\n  storyteller,\n  isUserTheStoryTeller,\n}: StepPlayCardProps) {\n  const { isLoading } = useLoading();\n  const hasPlayedCardAlready = Boolean(user.cardId);\n\n  const onSelectCard = (cardId: string) => {\n    onPlayCard({\n      cardId,\n    });\n  };\n\n  useMock(() => {\n    if (!isUserTheStoryTeller) {\n      onPlayCard(mockPlayCard(user.hand));\n    }\n  }, []);\n\n  return (\n    <Step fullWidth>\n      <Title>\n        <Card header={storyteller.name} className=\"c-story-card\" randomColor>\n          {story}\n        </Card>\n      </Title>\n\n      <Instruction contained>\n        <ViewOr orCondition={isUserTheStoryTeller}>\n          <Translate\n            pt=\"Agora, cada jogador escolherá uma carta em mão que mais combine com a história que você escreveu.\"\n            en=\"Now every other player will play a card that best matches the story you wrote.\"\n          />\n\n          <Translate\n            pt=\"Agora, escolha uma carta que mais combine com a história da rodada. Você está tentando convencer os outros jogadores a escolherem sua carta ao invés da carta correta.\"\n            en=\"Now you select a card that matches the story the best. You are trying to convince other players that your card is the correct one.\"\n          />\n        </ViewOr>\n      </Instruction>\n\n      <TableFaceDown players={players} user={user} />\n\n      <FloatingHand>\n        <ImageCardHand\n          hand={user.hand}\n          onSelectCard={hasPlayedCardAlready ? undefined : onSelectCard}\n          disabledSelectButton={isLoading || hasPlayedCardAlready}\n          sizeRatio={user.hand.length}\n        />\n      </FloatingHand>\n    </Step>\n  );\n}\n","import { StarIcon } from 'components/icons/StarIcon';\nimport { MetricHighlight, MetricHighlightProps } from 'components/text/MetricHighlight';\n\ntype HighlightProps = Pick<MetricHighlightProps, 'children' | 'type'>;\n\nexport function PointsHighlight({ children, type }: HighlightProps) {\n  return (\n    <MetricHighlight icon={<StarIcon />} type={type}>\n      {children}\n    </MetricHighlight>\n  );\n}\n","// Hooks\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\nimport { useUser } from 'hooks/useUser';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useStep } from 'hooks/useStep';\nimport { useOnPlayCardAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Translate } from 'components/language';\nimport { StepSwitcher } from 'components/steps';\nimport { Instruction } from 'components/text';\nimport { StepPlayCard } from './StepPlayCard';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { ImageCardsIcon } from 'components/icons/ImageCardsIcon';\nimport { PointsHighlight } from './components/Highlights';\n\nfunction PhaseCardPlay({ state, players, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, goToNextStep, setStep } = useStep(0);\n  const user = useUser(players);\n  const [storyteller, isUserTheStoryTeller] = useWhichPlayerIsThe('storytellerId', state, players);\n\n  const onPlayCard = useOnPlayCardAPIRequest(setStep);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.CONTADORES_HISTORIAS.CARD_PLAY}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<ImageCardsIcon />}\n          title={translate('Selecione uma carta', 'Play a card...')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <Instruction>\n            <Translate\n              pt={\n                <>\n                  Agora, jogadores verão a história da rodada e selecionarão uma de suas cartas que mais se\n                  aproxime da história. Na próxima fase, se algum outro jogador selecionar sua carta, você\n                  ganha <PointsHighlight>1</PointsHighlight> ponto!\n                </>\n              }\n              en={\n                <>\n                  Now players will see the story for the round and select one of their cards that best match\n                  the story. If any other player vote for your card later, you will get{' '}\n                  <PointsHighlight>1</PointsHighlight> point.\n                </>\n              }\n            />\n          </Instruction>\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepPlayCard\n          players={players}\n          user={user}\n          story={state.story}\n          onPlayCard={onPlayCard}\n          storyteller={storyteller}\n          isUserTheStoryTeller={isUserTheStoryTeller}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseCardPlay;\n","import { Avatar } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { Instruction } from 'components/text';\nimport { PointsHighlight } from './Highlights';\n\nexport function VotingRules(): JSX.Element {\n  return (\n    <Instruction>\n      <Translate\n        pt={\n          <>\n            Hora de selecionar a carta correta!\n            <br />\n            Se todos acertarem ou todos errarem, cada jogador ganha <PointsHighlight>2</PointsHighlight>{' '}\n            pontos, menos o contador de histórias.\n            <br />\n            Se somente alguns acertarem, cada acertador e contador de histórias recebe{' '}\n            <PointsHighlight>3</PointsHighlight> pontos.\n            <br />\n            Sua carta (se você não for o contador de histórias) ganha <PointsHighlight>\n              1\n            </PointsHighlight>{' '}\n            ponto se alguém selecionar.\n          </>\n        }\n        en={\n          <>\n            Time to select the correct card!\n            <br />\n            If every player gets it correct or wrong, each player but the storyteller gets{' '}\n            <PointsHighlight>2</PointsHighlight> points.\n            <br />\n            If only some get it correct, those players (and the storyteller) get{' '}\n            <PointsHighlight>3</PointsHighlight>3 points.\n            <br />\n            You get <PointsHighlight>1</PointsHighlight> point for every vote your card gets (if you are not\n            the storyteller).\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n\ntype ScoringRulesProps = {\n  storyteller: GamePlayer;\n};\n\nexport function ScoringRules({ storyteller }: ScoringRulesProps) {\n  return (\n    <Instruction>\n      <Translate\n        pt={\n          <>\n            Hora de revelar a resposta correta!\n            <br />O Contador de Histórias {<Avatar id={storyteller.avatarId} size=\"small\" />} ganha{' '}\n            <PointsHighlight>3</PointsHighlight> pontos se pelo menos uma pessoa acertar (mas não todas).\n            <br />\n            Cada jogador que votou corretamente ganha <PointsHighlight>3</PointsHighlight> pontos.\n            <br />\n            Para cada voto que sua carta recebeu (menos {<Avatar id={storyteller.avatarId} size=\"small\" />}),\n            você ganha <PointsHighlight>1</PointsHighlight> ponto.\n            <br />\n            Mas se todos jogadores votarem corretamente ou incorretamente, todos ganham{' '}\n            <PointsHighlight>2</PointsHighlight> pontos e o Contador de Histórias não ganha nada.\n          </>\n        }\n        en={\n          <>\n            Time to reveal the answer!\n            <br />\n            The Storyteller {<Avatar id={storyteller.avatarId} size=\"small\" />} gets{' '}\n            <PointsHighlight>3</PointsHighlight> points if at least one player got it correctly (but not all).\n            <br />\n            Each player who voted correctly gets <PointsHighlight>3</PointsHighlight> points.\n            <br />\n            Each vote your card receives grants you <PointsHighlight>1</PointsHighlight> points (except{' '}\n            {<Avatar id={storyteller.avatarId} size=\"small\" />}).\n            <br />\n            But if all players vote correctly or incorrectly, they get <PointsHighlight>\n              2\n            </PointsHighlight>{' '}\n            points each and the Storyteller gets nothing.\n          </>\n        }\n      />\n    </Instruction>\n  );\n}\n","import clsx from 'clsx';\n// Ant Design Resources\nimport { Button } from 'antd';\nimport { DownSquareOutlined } from '@ant-design/icons';\n// Hooks & Utils\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useLoading } from 'hooks/useLoading';\nimport { useMock } from 'hooks/useMock';\nimport { mockVote } from './utils/mock';\n// Components\nimport { Card, ImageBlurButton, ImageCard } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { PopoverRule } from 'components/rules';\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\nimport { VotingRules } from './components/RulesBlobs';\nimport { DebugOnly } from 'components/debug';\n\ntype StepVotingProps = {\n  players: GamePlayers;\n  story: string;\n  user: GamePlayer;\n  onSubmitVote: GenericFunction;\n  storyteller: GamePlayer;\n  table: TableEntry[];\n  isUserTheStoryTeller: boolean;\n};\n\nexport function StepVoting({\n  players,\n  story,\n  user,\n  onSubmitVote,\n  storyteller,\n  table,\n  isUserTheStoryTeller,\n}: StepVotingProps) {\n  const { isLoading } = useLoading();\n  const cardWidth = useCardWidth(Math.max(Object.keys(players).length, 8), 32, 150);\n\n  const hasPlayedCardAlready = Boolean(user.vote);\n\n  const onSelectCard = (vote: string) => {\n    onSubmitVote({\n      vote,\n    });\n  };\n\n  useMock(() => {\n    if (!isUserTheStoryTeller) {\n      onSubmitVote(mockVote(table, user.hand));\n    }\n  }, []);\n\n  return (\n    <Step fullWidth className=\"c-step-play-card\">\n      <Title>\n        <Translate pt=\"Qual carta é a ilustração correta?\" en=\"What card is the correct one?\" />\n        <Card header={storyteller.name} className=\"c-story-card\" color=\"yellow\">\n          {story}\n        </Card>\n      </Title>\n      <PopoverRule content={<VotingRules />} />\n\n      <div className=\"c-game-table\">\n        {table.map((cardEntry) => {\n          const isUserCard = cardEntry.playerId === user.id;\n          const isUserVote = cardEntry.cardId === user.vote;\n          return (\n            <div key={`hand-${cardEntry.cardId}`} className=\"c-game-table__card-container\">\n              {!hasPlayedCardAlready && (\n                <Button\n                  icon={<DownSquareOutlined />}\n                  onClick={() => onSelectCard(cardEntry.cardId)}\n                  size=\"small\"\n                  disabled={isLoading || isUserCard}\n                  shape=\"round\"\n                >\n                  {isUserCard ? <Translate pt=\"Sua\" en=\"Yours\" /> : <Translate pt=\"Votar\" en=\"Vote\" />}\n                </Button>\n              )}\n              <ImageCard\n                imageId={cardEntry.cardId}\n                cardWidth={cardWidth}\n                className={clsx(isUserVote && 'c-game-table--vote')}\n              />\n              <DebugOnly div>{cardEntry.cardId}</DebugOnly>\n\n              <ImageBlurButton cardId={cardEntry.cardId} />\n            </div>\n          );\n        })}\n      </div>\n    </Step>\n  );\n}\n","// Hooks\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\nimport { useUser } from 'hooks/useUser';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useStep } from 'hooks/useStep';\nimport { useOnSubmitVoteAPIRequest } from './utils/api-requests';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { StepSwitcher } from 'components/steps';\nimport { ImageCardPreloadHand } from 'components/cards';\nimport { StepVoting } from './StepVoting';\nimport { VotingRules } from './components/RulesBlobs';\nimport { VoteIcon } from 'components/icons/VoteIcon';\n\nfunction PhaseVoting({ state, players, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, goToNextStep, setStep } = useStep(0);\n  const user = useUser(players);\n  const [storyteller, isUserTheStoryTeller] = useWhichPlayerIsThe('storytellerId', state, players);\n\n  const onSubmitVote = useOnSubmitVoteAPIRequest(setStep);\n\n  return (\n    <PhaseContainer\n      info={info}\n      phase={state?.phase}\n      allowedPhase={PHASES.CONTADORES_HISTORIAS.VOTING}\n      className=\"c-phase\"\n    >\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<VoteIcon />}\n          title={translate('Votação', 'Voting')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <VotingRules />\n          <ImageCardPreloadHand hand={state.table.map((entry: PlainObject) => entry.cardId)} />\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepVoting\n          players={players}\n          user={user}\n          story={state.story}\n          onSubmitVote={onSubmitVote}\n          storyteller={storyteller}\n          table={state.table}\n          isUserTheStoryTeller={isUserTheStoryTeller}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseVoting;\n","// Ant Design Resources\nimport { Avatar as AntAvatar, Space } from 'antd';\n// Hooks\nimport { useCardWidth } from 'hooks/useCardWidth';\nimport { useTemporarilyHidePlayersBar } from 'hooks/useTemporarilyHidePlayersBar';\n// Components\nimport { Avatar, AvatarName, AvatarNPC } from 'components/avatars';\nimport { TimedButton } from 'components/buttons';\nimport { ImageBlurButton, ImageCard } from 'components/cards';\nimport { Translate } from 'components/language';\nimport { PopoverRule } from 'components/rules';\nimport { Step } from 'components/steps';\nimport { Title } from 'components/text';\nimport { BookPages } from './components/BookPages';\nimport { ScoringRules } from './components/RulesBlobs';\n\ntype StepResolutionProps = {\n  players: GamePlayers;\n  story: string;\n  storyteller: GamePlayer;\n  table: TableEntry[];\n  goToNextStep: GenericFunction;\n};\n\nexport function StepResolution({ players, story, storyteller, table, goToNextStep }: StepResolutionProps) {\n  useTemporarilyHidePlayersBar();\n\n  const cardWidth = useCardWidth(10, 32, 75);\n\n  const solution = table.find((entry) => entry.playerId === storyteller.id);\n  const otherCards = table.filter((entry) => entry.playerId !== storyteller.id);\n\n  return (\n    <Step fullWidth className=\"c-step-play-card\">\n      <Title>\n        <Translate pt=\"Solução\" en=\"Solution\" />\n      </Title>\n      <PopoverRule content={<ScoringRules storyteller={storyteller} />} />\n\n      <div className=\"c-story-book\">\n        <BookPages\n          leftPage={\n            <div className=\"c-story-book__selected-card\">\n              {solution && (\n                <>\n                  <ImageCard imageId={solution.cardId} cardWidth={160} />\n                  <ImageBlurButton cardId={solution.cardId} />\n                </>\n              )}\n            </div>\n          }\n          rightPage={\n            <div className=\"c-story-book__solution\">\n              <p>\n                <Translate pt=\"Era uma vez...\" en=\"Once upon a time...\" />\n              </p>\n              <p className=\"c-story-book__story\">{story}</p>\n\n              <div>\n                <Translate pt=\"Votaram corretamente:\" en=\"Voted correctly:\" />\n                <ul className=\"c-story-book__correct-players\">\n                  {solution &&\n                    solution\n                      .votes!.filter((entry) => entry !== storyteller.id)\n                      .map((playerId) => {\n                        return (\n                          <li key={`correct-vote-player-${playerId}`}>\n                            <AvatarName player={players[playerId]} size=\"small\" />\n                          </li>\n                        );\n                      })}\n                  {(solution?.votes?.length ?? 0) < 2 && (\n                    <li className=\"c-story-book__nobody\">\n                      <Translate pt=\"Vixi, ninguém acertou...\" en=\"Well, nobody got it...\" />\n                    </li>\n                  )}\n                </ul>\n              </div>\n            </div>\n          }\n        />\n      </div>\n      <ul className=\"c-other-cards\">\n        {otherCards.map((cardEntry: TableEntry, index) => {\n          return (\n            <li className=\"c-other-cards__entry\" key={`other-card-votes-${cardEntry.playerId}-${index}`}>\n              <div className=\"c-other-cards__player\">\n                {cardEntry.playerId === 'NPC' ? (\n                  <AvatarNPC size=\"small\" />\n                ) : (\n                  <AvatarName player={players[cardEntry.playerId]} size=\"small\" />\n                )}\n              </div>\n\n              <ImageCard imageId={cardEntry.cardId} cardWidth={cardWidth} className={'c-other-cards__card'} />\n              <ImageBlurButton cardId={cardEntry.cardId} />\n\n              <div className=\"c-other-cards__votes\">\n                <AntAvatar.Group size=\"small\">\n                  {(cardEntry?.votes ?? []).map((votePlayerId) => {\n                    return (\n                      <Avatar\n                        id={players[votePlayerId].avatarId}\n                        key={`incorrect-vote-player-${votePlayerId}`}\n                      />\n                    );\n                  })}\n                </AntAvatar.Group>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n      <Space className=\"space-container\" align=\"center\">\n        <TimedButton onClick={goToNextStep} onExpire={goToNextStep} duration={20}>\n          <Translate pt=\"Continuar\" en=\"Continue\" />\n        </TimedButton>\n      </Space>\n    </Step>\n  );\n}\n","import { Button, Space } from 'antd';\n// Hooks\nimport { useLanguage } from 'hooks/useLanguage';\n// Components\nimport { AdminNextPhaseButton } from 'components/admin';\nimport { AvatarName } from 'components/avatars';\nimport { Translate } from 'components/language';\nimport { StepRankingWrapper } from 'components/ranking';\nimport { PopoverRule } from 'components/rules';\nimport { Instruction } from 'components/text';\nimport { ScoringRules } from './components/RulesBlobs';\nimport { PointsHighlight } from './components/Highlights';\n\ntype StepRankingProps = {\n  players: GamePlayers;\n  storyteller: GamePlayer;\n  outcome: COutcome;\n  ranking: GameRanking;\n  round: GameRound;\n  lastRound?: boolean;\n  goToPreviousStep: GenericFunction;\n};\n\nconst getGainedPointsText = (\n  outcome: COutcome,\n  translate: (pt: string, en: string, custom?: string | undefined) => string\n) => {\n  switch (outcome) {\n    case 'EVERYBODY_GOT':\n      return translate(\n        'Pontos porque o Contador de Histórias foi muito obscuro',\n        'Points because the Storyteller was too vague'\n      );\n    case 'NOBODY_GOT':\n      return translate(\n        'Pontos porque o Contador de Histórias foi óbvio',\n        'Points because the Storyteller was too obvious'\n      );\n    default:\n      return translate('Pontos por acertar', 'Points for getting it right');\n  }\n};\n\nexport function StepRanking({\n  players,\n  ranking,\n  outcome,\n  storyteller,\n  round,\n  lastRound = false,\n  goToPreviousStep,\n}: StepRankingProps) {\n  const { translate } = useLanguage();\n\n  return (\n    <StepRankingWrapper\n      players={players}\n      ranking={ranking}\n      gainedPointsDescriptions={[getGainedPointsText(outcome, translate), 'Pontos por votos em sua carta']}\n      subtitle={\n        <Instruction contained>\n          {outcome === 'EVERYBODY_GOT' && (\n            <Translate\n              pt={\n                <>\n                  Todo mundo acertou! <AvatarName player={storyteller} />, da próxima vez, seja menos\n                  óbvio(a).\n                </>\n              }\n              en={\n                <>\n                  Everybody guessed it right! <AvatarName player={storyteller} />, be less obvious next time.\n                </>\n              }\n            />\n          )}\n          {outcome === 'NOBODY_GOT' && (\n            <Translate\n              pt={\n                <>\n                  Ninguém acertou! <AvatarName player={storyteller} />, da próxima vez seja menos obscuro.\n                </>\n              }\n              en={\n                <>\n                  Nobody guessed it right! <AvatarName player={storyteller} />, next time be less obscure.\n                </>\n              }\n            />\n          )}\n\n          {outcome === 'NORMAL' && (\n            <Translate\n              pt={\n                <>\n                  Quem acertou ganha <PointsHighlight type=\"positive\">3</PointsHighlight> pontos! Bom\n                  trabalho, <AvatarName player={storyteller} />.\n                </>\n              }\n              en={\n                <>\n                  Whoever guessed it right got <PointsHighlight type=\"positive\">3</PointsHighlight> points!\n                  Good job, <AvatarName player={storyteller} />\n                </>\n              }\n            />\n          )}\n        </Instruction>\n      }\n    >\n      <PopoverRule content={<ScoringRules storyteller={storyteller} />} />\n\n      <Space className=\"space-container\" align=\"center\">\n        <Button onClick={goToPreviousStep}>{translate('Voltar para Solução', 'Back to Solution')}</Button>\n      </Space>\n\n      <AdminNextPhaseButton round={round} lastRound={lastRound} />\n    </StepRankingWrapper>\n  );\n}\n","// Hooks\nimport { useWhichPlayerIsThe } from 'hooks/useWhichPlayerIsThe';\nimport { useLanguage } from 'hooks/useLanguage';\nimport { useStep } from 'hooks/useStep';\n// Resources & Utils\nimport { PHASES } from 'utils/phases';\n// Components\nimport { StepSwitcher } from 'components/steps';\nimport { StepResolution } from './StepResolution';\nimport { StepRanking } from './StepRanking';\nimport { ScoringRules } from './components/RulesBlobs';\nimport { PhaseAnnouncement, PhaseContainer } from 'components/phases';\nimport { SealIcon } from 'components/icons/SealIcon';\n\nfunction PhaseResolution({ state, players, info }: PhaseProps) {\n  const { translate } = useLanguage();\n  const { step, goToNextStep, goToPreviousStep } = useStep(0);\n  const [storyteller] = useWhichPlayerIsThe('storytellerId', state, players);\n\n  return (\n    <PhaseContainer info={info} phase={state?.phase} allowedPhase={PHASES.CONTADORES_HISTORIAS.RESOLUTION}>\n      <StepSwitcher step={step} players={players}>\n        {/* Step 0 */}\n        <PhaseAnnouncement\n          icon={<SealIcon />}\n          title={translate('Solução', 'Solution')}\n          onClose={goToNextStep}\n          currentRound={state?.round?.current}\n        >\n          <ScoringRules storyteller={storyteller} />\n        </PhaseAnnouncement>\n\n        {/* Step 1 */}\n        <StepResolution\n          players={players}\n          story={state.story}\n          storyteller={storyteller}\n          table={state.table}\n          goToNextStep={goToNextStep}\n        />\n\n        {/* Step 2 */}\n        <StepRanking\n          players={players}\n          ranking={state.ranking}\n          outcome={state.outcome}\n          storyteller={storyteller}\n          round={state.round}\n          lastRound={state.lastRound}\n          goToPreviousStep={goToPreviousStep}\n        />\n      </StepSwitcher>\n    </PhaseContainer>\n  );\n}\n\nexport default PhaseResolution;\n","import { MedalCloseIcon } from 'components/icons/MedalCloseIcon';\nimport { MedalLightBulbIcon } from 'components/icons/MedalLightBulbIcon';\nimport { MedalRobotIcon } from 'components/icons/MedalRobotIcon';\nimport { MedalSufferingIcon } from 'components/icons/MedalSufferingIcon';\nimport { MedalThumbsDownIcon } from 'components/icons/MedalThumbsDownIcon';\nimport { MedalThumbsUpIcon } from 'components/icons/MedalThumbsUpIcon';\n\nexport const achievementsReference: AchievementReference = {\n  MOST_DECEIVING: {\n    Icon: MedalLightBulbIcon,\n    title: {\n      pt: 'Mais Convincente',\n      en: 'Most Deceiving',\n    },\n    description: {\n      pt: 'Suas cartas foram escolhidas mais vezes quando não era o Contador de Histórias',\n      en: 'Their cards were chosen the most when they were not the Storyteller',\n    },\n  },\n  WORST_CARDS: {\n    Icon: MedalCloseIcon,\n    title: {\n      pt: 'Piores Cartas',\n      en: 'Worst Cards',\n    },\n    description: {\n      pt: 'Suas cartas foram escolhidas menos vezes quando não era o Contador de Histórias',\n      en: 'Their cards were chosen the least when they were not the Storyteller',\n    },\n  },\n  WORST_CLUES: {\n    Icon: MedalSufferingIcon,\n    title: {\n      pt: 'Histórias mais Cabulosas',\n      en: 'Most Obscure',\n    },\n    description: {\n      pt: 'As histórias que deram nenhum match mais vezes',\n      en: 'Their stories got no matches more times',\n    },\n  },\n  EASIEST_CLUES: {\n    Icon: MedalThumbsUpIcon,\n    title: {\n      pt: 'Histórias Mais Simples',\n      en: 'Easiest Stories',\n    },\n    description: {\n      pt: 'Os jogadores adivinharam as histórias mais vezes',\n      en: 'Players guessed their story correctly more times',\n    },\n  },\n  HARDEST_CLUES: {\n    Icon: MedalThumbsDownIcon,\n    title: {\n      pt: 'Histórias Mais Difíceis',\n      en: 'Hardest Stories',\n    },\n    description: {\n      pt: 'Os jogadores adivinharam as histórias menos vezes',\n      en: 'Players guessed their story correctly fewer times',\n    },\n  },\n  TABLE_VOTES: {\n    Icon: MedalRobotIcon,\n    title: {\n      pt: 'Melhor Votador Pra Mesa',\n      en: 'Best Table Voter',\n    },\n    description: {\n      pt: 'Votou nas cartas extras que não eram de nenhum jogador mais vezes',\n      en: \"Voted for extra cards that didn't belong to any player the most\",\n    },\n  },\n};\n","// Utils\nimport { achievementsReference } from './utils/achievements';\n// Components\nimport { GameOverWrapper } from 'components/game-over';\nimport { Achievements } from 'components/general/Achievements';\nimport { TrophyIcon } from 'components/icons/TrophyIcon';\n\nfunction PhaseGameOver({ state, info, players }: PhaseProps) {\n  return (\n    <GameOverWrapper info={info} state={state} announcementIcon={<TrophyIcon />}>\n      <Achievements players={players} achievements={state.achievements} reference={achievementsReference} />\n    </GameOverWrapper>\n  );\n}\n\nexport default PhaseGameOver;\n","import { ConfigProvider } from 'antd';\n// Constants\nimport { GAME_COLLECTION, THEME_COLORS } from 'utils/constants';\nimport { PHASES } from 'utils/phases';\n// Components\nimport { Session } from 'components/session';\nimport { PhaseLobby, PhaseRules, PhaseSetup } from 'components/phases';\nimport { PageError } from 'components/errors';\nimport PhaseStory from './PhaseStory';\nimport PhaseCardPlay from './PhaseCardPlay';\nimport PhaseVoting from './PhaseVoting';\nimport PhaseResolution from './PhaseResolution';\nimport PhaseGameOver from './PhaseGameOver';\n// Fonts\nimport 'assets/fonts/dancing-script.scss';\n\nConfigProvider.config({\n  theme: {\n    primaryColor: THEME_COLORS.DEFAULT,\n  },\n});\n\nfunction SessionDetetivesImaginativos({ gameId }: SessionProps) {\n  function getActiveComponent(phase: string) {\n    switch (phase) {\n      case PHASES.DEFAULT.LOBBY:\n        return PhaseLobby;\n      case PHASES.DEFAULT.RULES:\n        return PhaseRules;\n      case PHASES.DEFAULT.SETUP:\n        return PhaseSetup;\n      case PHASES.CONTADORES_HISTORIAS.STORY:\n        return PhaseStory;\n      case PHASES.CONTADORES_HISTORIAS.CARD_PLAY:\n        return PhaseCardPlay;\n      case PHASES.CONTADORES_HISTORIAS.VOTING:\n        return PhaseVoting;\n      case PHASES.CONTADORES_HISTORIAS.RESOLUTION:\n        return PhaseResolution;\n      case PHASES.DEFAULT.GAME_OVER:\n        return PhaseGameOver;\n      default:\n        return PageError;\n    }\n  }\n\n  return (\n    <Session\n      gameId={gameId}\n      gameCollection={GAME_COLLECTION.CONTADORES_HISTORIAS}\n      getActiveComponent={getActiveComponent}\n    />\n  );\n}\n\nexport default SessionDetetivesImaginativos;\n","import { useEffect, useState } from 'react';\nimport { useGlobalState } from './useGlobalState';\n\n/**\n * Gets player that is assigned to a property in the state\n * @param propertyName\n * @param state\n * @param players\n * @returns a player instance, a boolean if the player is assigned to given property\n */\nexport function useWhichPlayerIsThe(\n  propertyName = 'activePlayer',\n  state: PlainObject = {},\n  players: Players = {}\n): [GamePlayer, boolean] {\n  const [userId] = useGlobalState('userId');\n  const [activePlayer, setActivePlayer] = useState<GamePlayer>({});\n  const [isUser, setIsUser] = useState(false);\n\n  // Determine if user is active as the guesser, the clue giver, the psychic, the storyteller, etc\n  useEffect(() => {\n    const activePlayer = state?.[propertyName];\n    setActivePlayer(players?.[activePlayer] ?? {});\n    setIsUser(state?.[propertyName] === userId);\n  }, [players, propertyName, state, userId]);\n\n  return [activePlayer, isUser];\n}\n","// This icon file is generated automatically.\nvar CaretUpOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"0 0 1024 1024\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M858.9 689L530.5 308.2c-9.4-10.9-27.5-10.9-37 0L165.1 689c-12.2 14.2-1.2 35 18.5 35h656.8c19.7 0 30.7-20.8 18.5-35z\" } }] }, \"name\": \"caret-up\", \"theme\": \"outlined\" };\nexport default CaretUpOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CaretUpOutlinedSvg from \"@ant-design/icons-svg/es/asn/CaretUpOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CaretUpOutlined = function CaretUpOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CaretUpOutlinedSvg\n  }));\n};\n\nCaretUpOutlined.displayName = 'CaretUpOutlined';\nexport default /*#__PURE__*/React.forwardRef(CaretUpOutlined);","// This icon file is generated automatically.\nvar CrownFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M899.6 276.5L705 396.4 518.4 147.5a8.06 8.06 0 00-12.9 0L319 396.4 124.3 276.5c-5.7-3.5-13.1 1.2-12.2 7.9L188.5 865c1.1 7.9 7.9 14 16 14h615.1c8 0 14.9-6 15.9-14l76.4-580.6c.8-6.7-6.5-11.4-12.3-7.9zM512 734.2c-62.1 0-112.6-50.5-112.6-112.6S449.9 509 512 509s112.6 50.5 112.6 112.6S574.1 734.2 512 734.2zm0-160.9c-26.6 0-48.2 21.6-48.2 48.3 0 26.6 21.6 48.3 48.2 48.3s48.2-21.6 48.2-48.3c0-26.6-21.6-48.3-48.2-48.3z\" } }] }, \"name\": \"crown\", \"theme\": \"filled\" };\nexport default CrownFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CrownFilledSvg from \"@ant-design/icons-svg/es/asn/CrownFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CrownFilled = function CrownFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CrownFilledSvg\n  }));\n};\n\nCrownFilled.displayName = 'CrownFilled';\nexport default /*#__PURE__*/React.forwardRef(CrownFilled);","// This icon file is generated automatically.\nvar DownSquareOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M505.5 658.7c3.2 4.4 9.7 4.4 12.9 0l178-246c3.8-5.3 0-12.7-6.5-12.7H643c-10.2 0-19.9 4.9-25.9 13.2L512 558.6 406.8 413.2c-6-8.3-15.6-13.2-25.9-13.2H334c-6.5 0-10.3 7.4-6.5 12.7l178 246z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zm-40 728H184V184h656v656z\" } }] }, \"name\": \"down-square\", \"theme\": \"outlined\" };\nexport default DownSquareOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DownSquareOutlinedSvg from \"@ant-design/icons-svg/es/asn/DownSquareOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar DownSquareOutlined = function DownSquareOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: DownSquareOutlinedSvg\n  }));\n};\n\nDownSquareOutlined.displayName = 'DownSquareOutlined';\nexport default /*#__PURE__*/React.forwardRef(DownSquareOutlined);","// This icon file is generated automatically.\nvar StarFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M908.1 353.1l-253.9-36.9L540.7 86.1c-3.1-6.3-8.2-11.4-14.5-14.5-15.8-7.8-35-1.3-42.9 14.5L369.8 316.2l-253.9 36.9c-7 1-13.4 4.3-18.3 9.3a32.05 32.05 0 00.6 45.3l183.7 179.1-43.4 252.9a31.95 31.95 0 0046.4 33.7L512 754l227.1 119.4c6.2 3.3 13.4 4.4 20.3 3.2 17.4-3 29.1-19.5 26.1-36.9l-43.4-252.9 183.7-179.1c5-4.9 8.3-11.3 9.3-18.3 2.7-17.5-9.5-33.7-27-36.3z\" } }] }, \"name\": \"star\", \"theme\": \"filled\" };\nexport default StarFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport StarFilledSvg from \"@ant-design/icons-svg/es/asn/StarFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar StarFilled = function StarFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: StarFilledSvg\n  }));\n};\n\nStarFilled.displayName = 'StarFilled';\nexport default /*#__PURE__*/React.forwardRef(StarFilled);","// This icon file is generated automatically.\nvar UpCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M518.5 360.3a7.95 7.95 0 00-12.9 0l-178 246c-3.8 5.3 0 12.7 6.5 12.7H381c10.2 0 19.9-4.9 25.9-13.2L512 460.4l105.2 145.4c6 8.3 15.6 13.2 25.9 13.2H690c6.5 0 10.3-7.4 6.5-12.7l-178-246z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"up-circle\", \"theme\": \"outlined\" };\nexport default UpCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport UpCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/UpCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar UpCircleOutlined = function UpCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: UpCircleOutlinedSvg\n  }));\n};\n\nUpCircleOutlined.displayName = 'UpCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(UpCircleOutlined);","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport React from 'react';\n\nvar Star = /*#__PURE__*/function (_React$Component) {\n  _inherits(Star, _React$Component);\n\n  var _super = _createSuper(Star);\n\n  function Star() {\n    var _this;\n\n    _classCallCheck(this, Star);\n\n    _this = _super.apply(this, arguments);\n\n    _this.onHover = function (e) {\n      var _this$props = _this.props,\n          onHover = _this$props.onHover,\n          index = _this$props.index;\n      onHover(e, index);\n    };\n\n    _this.onClick = function (e) {\n      var _this$props2 = _this.props,\n          onClick = _this$props2.onClick,\n          index = _this$props2.index;\n      onClick(e, index);\n    };\n\n    _this.onKeyDown = function (e) {\n      var _this$props3 = _this.props,\n          onClick = _this$props3.onClick,\n          index = _this$props3.index;\n\n      if (e.keyCode === 13) {\n        onClick(e, index);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Star, [{\n    key: \"getClassName\",\n    value: function getClassName() {\n      var _this$props4 = this.props,\n          prefixCls = _this$props4.prefixCls,\n          index = _this$props4.index,\n          value = _this$props4.value,\n          allowHalf = _this$props4.allowHalf,\n          focused = _this$props4.focused;\n      var starValue = index + 1;\n      var className = prefixCls;\n\n      if (value === 0 && index === 0 && focused) {\n        className += \" \".concat(prefixCls, \"-focused\");\n      } else if (allowHalf && value + 0.5 >= starValue && value < starValue) {\n        className += \" \".concat(prefixCls, \"-half \").concat(prefixCls, \"-active\");\n\n        if (focused) {\n          className += \" \".concat(prefixCls, \"-focused\");\n        }\n      } else {\n        className += starValue <= value ? \" \".concat(prefixCls, \"-full\") : \" \".concat(prefixCls, \"-zero\");\n\n        if (starValue === value && focused) {\n          className += \" \".concat(prefixCls, \"-focused\");\n        }\n      }\n\n      return className;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var onHover = this.onHover,\n          onClick = this.onClick,\n          onKeyDown = this.onKeyDown;\n      var _this$props5 = this.props,\n          disabled = _this$props5.disabled,\n          prefixCls = _this$props5.prefixCls,\n          character = _this$props5.character,\n          characterRender = _this$props5.characterRender,\n          index = _this$props5.index,\n          count = _this$props5.count,\n          value = _this$props5.value;\n      var characterNode = typeof character === 'function' ? character(this.props) : character;\n      var start = /*#__PURE__*/React.createElement(\"li\", {\n        className: this.getClassName()\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onClick: disabled ? null : onClick,\n        onKeyDown: disabled ? null : onKeyDown,\n        onMouseMove: disabled ? null : onHover,\n        role: \"radio\",\n        \"aria-checked\": value > index ? 'true' : 'false',\n        \"aria-posinset\": index + 1,\n        \"aria-setsize\": count,\n        tabIndex: disabled ? -1 : 0\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-first\")\n      }, characterNode), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-second\")\n      }, characterNode)));\n\n      if (characterRender) {\n        start = characterRender(start, this.props);\n      }\n\n      return start;\n    }\n  }]);\n\n  return Star;\n}(React.Component);\n\nexport { Star as default };","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport React from 'react';\nimport findDOMNode from \"rc-util/es/Dom/findDOMNode\";\nimport classNames from 'classnames';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport { getOffsetLeft } from './util';\nimport Star from './Star';\n\nfunction noop() {}\n\nvar Rate = /*#__PURE__*/function (_React$Component) {\n  _inherits(Rate, _React$Component);\n\n  var _super = _createSuper(Rate);\n\n  function Rate(props) {\n    var _this;\n\n    _classCallCheck(this, Rate);\n\n    _this = _super.call(this, props);\n\n    _this.onHover = function (event, index) {\n      var onHoverChange = _this.props.onHoverChange;\n\n      var hoverValue = _this.getStarValue(index, event.pageX);\n\n      var cleanedValue = _this.state.cleanedValue;\n\n      if (hoverValue !== cleanedValue) {\n        _this.setState({\n          hoverValue: hoverValue,\n          cleanedValue: null\n        });\n      }\n\n      onHoverChange(hoverValue);\n    };\n\n    _this.onMouseLeave = function () {\n      var onHoverChange = _this.props.onHoverChange;\n\n      _this.setState({\n        hoverValue: undefined,\n        cleanedValue: null\n      });\n\n      onHoverChange(undefined);\n    };\n\n    _this.onClick = function (event, index) {\n      var allowClear = _this.props.allowClear;\n      var value = _this.state.value;\n\n      var newValue = _this.getStarValue(index, event.pageX);\n\n      var isReset = false;\n\n      if (allowClear) {\n        isReset = newValue === value;\n      }\n\n      _this.onMouseLeave();\n\n      _this.changeValue(isReset ? 0 : newValue);\n\n      _this.setState({\n        cleanedValue: isReset ? newValue : null\n      });\n    };\n\n    _this.onFocus = function () {\n      var onFocus = _this.props.onFocus;\n\n      _this.setState({\n        focused: true\n      });\n\n      if (onFocus) {\n        onFocus();\n      }\n    };\n\n    _this.onBlur = function () {\n      var onBlur = _this.props.onBlur;\n\n      _this.setState({\n        focused: false\n      });\n\n      if (onBlur) {\n        onBlur();\n      }\n    };\n\n    _this.onKeyDown = function (event) {\n      var keyCode = event.keyCode;\n      var _this$props = _this.props,\n          count = _this$props.count,\n          allowHalf = _this$props.allowHalf,\n          onKeyDown = _this$props.onKeyDown,\n          direction = _this$props.direction;\n      var reverse = direction === 'rtl';\n      var value = _this.state.value;\n\n      if (keyCode === KeyCode.RIGHT && value < count && !reverse) {\n        if (allowHalf) {\n          value += 0.5;\n        } else {\n          value += 1;\n        }\n\n        _this.changeValue(value);\n\n        event.preventDefault();\n      } else if (keyCode === KeyCode.LEFT && value > 0 && !reverse) {\n        if (allowHalf) {\n          value -= 0.5;\n        } else {\n          value -= 1;\n        }\n\n        _this.changeValue(value);\n\n        event.preventDefault();\n      } else if (keyCode === KeyCode.RIGHT && value > 0 && reverse) {\n        if (allowHalf) {\n          value -= 0.5;\n        } else {\n          value -= 1;\n        }\n\n        _this.changeValue(value);\n\n        event.preventDefault();\n      } else if (keyCode === KeyCode.LEFT && value < count && reverse) {\n        if (allowHalf) {\n          value += 0.5;\n        } else {\n          value += 1;\n        }\n\n        _this.changeValue(value);\n\n        event.preventDefault();\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event);\n      }\n    };\n\n    _this.saveRef = function (index) {\n      return function (node) {\n        _this.stars[index] = node;\n      };\n    };\n\n    _this.saveRate = function (node) {\n      _this.rate = node;\n    };\n\n    var value = props.value;\n\n    if (value === undefined) {\n      value = props.defaultValue;\n    }\n\n    _this.stars = {};\n    _this.state = {\n      value: value,\n      focused: false,\n      cleanedValue: null\n    };\n    return _this;\n  }\n\n  _createClass(Rate, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props2 = this.props,\n          autoFocus = _this$props2.autoFocus,\n          disabled = _this$props2.disabled;\n\n      if (autoFocus && !disabled) {\n        this.focus();\n      }\n    }\n  }, {\n    key: \"getStarDOM\",\n    value: function getStarDOM(index) {\n      return findDOMNode(this.stars[index]);\n    }\n  }, {\n    key: \"getStarValue\",\n    value: function getStarValue(index, x) {\n      var _this$props3 = this.props,\n          allowHalf = _this$props3.allowHalf,\n          direction = _this$props3.direction;\n      var reverse = direction === 'rtl';\n      var value = index + 1;\n\n      if (allowHalf) {\n        var starEle = this.getStarDOM(index);\n        var leftDis = getOffsetLeft(starEle);\n        var width = starEle.clientWidth;\n\n        if (reverse && x - leftDis > width / 2) {\n          value -= 0.5;\n        } else if (!reverse && x - leftDis < width / 2) {\n          value -= 0.5;\n        }\n      }\n\n      return value;\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      var disabled = this.props.disabled;\n\n      if (!disabled) {\n        this.rate.focus();\n      }\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      var disabled = this.props.disabled;\n\n      if (!disabled) {\n        this.rate.blur();\n      }\n    }\n  }, {\n    key: \"changeValue\",\n    value: function changeValue(value) {\n      var onChange = this.props.onChange;\n\n      if (!('value' in this.props)) {\n        this.setState({\n          value: value\n        });\n      }\n\n      onChange(value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          count = _this$props4.count,\n          allowHalf = _this$props4.allowHalf,\n          style = _this$props4.style,\n          prefixCls = _this$props4.prefixCls,\n          disabled = _this$props4.disabled,\n          className = _this$props4.className,\n          character = _this$props4.character,\n          characterRender = _this$props4.characterRender,\n          tabIndex = _this$props4.tabIndex,\n          direction = _this$props4.direction;\n      var _this$state = this.state,\n          value = _this$state.value,\n          hoverValue = _this$state.hoverValue,\n          focused = _this$state.focused;\n      var stars = [];\n      var disabledClass = disabled ? \"\".concat(prefixCls, \"-disabled\") : '';\n\n      for (var index = 0; index < count; index += 1) {\n        stars.push( /*#__PURE__*/React.createElement(Star, {\n          ref: this.saveRef(index),\n          index: index,\n          count: count,\n          disabled: disabled,\n          prefixCls: \"\".concat(prefixCls, \"-star\"),\n          allowHalf: allowHalf,\n          value: hoverValue === undefined ? value : hoverValue,\n          onClick: this.onClick,\n          onHover: this.onHover,\n          key: index,\n          character: character,\n          characterRender: characterRender,\n          focused: focused\n        }));\n      }\n\n      var rateClassName = classNames(prefixCls, disabledClass, className, _defineProperty({}, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'));\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        className: rateClassName,\n        style: style,\n        onMouseLeave: disabled ? null : this.onMouseLeave,\n        tabIndex: disabled ? -1 : tabIndex,\n        onFocus: disabled ? null : this.onFocus,\n        onBlur: disabled ? null : this.onBlur,\n        onKeyDown: disabled ? null : this.onKeyDown,\n        ref: this.saveRate,\n        role: \"radiogroup\"\n      }, stars);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, state) {\n      if ('value' in nextProps && nextProps.value !== undefined) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          value: nextProps.value\n        });\n      }\n\n      return state;\n    }\n  }]);\n\n  return Rate;\n}(React.Component);\n\nRate.defaultProps = {\n  defaultValue: 0,\n  count: 5,\n  allowHalf: false,\n  allowClear: true,\n  style: {},\n  prefixCls: 'rc-rate',\n  onChange: noop,\n  character: '★',\n  onHoverChange: noop,\n  tabIndex: 0,\n  direction: 'ltr'\n};\nexport default Rate;","/* eslint-disable import/prefer-default-export */\nfunction getScroll(w) {\n  var ret = w.pageXOffset;\n  var method = 'scrollLeft';\n\n  if (typeof ret !== 'number') {\n    var d = w.document; // ie6,7,8 standard mode\n\n    ret = d.documentElement[method];\n\n    if (typeof ret !== 'number') {\n      // quirks mode\n      ret = d.body[method];\n    }\n  }\n\n  return ret;\n}\n\nfunction getClientPosition(elem) {\n  var x;\n  var y;\n  var doc = elem.ownerDocument;\n  var body = doc.body;\n  var docElem = doc && doc.documentElement;\n  var box = elem.getBoundingClientRect();\n  x = box.left;\n  y = box.top;\n  x -= docElem.clientLeft || body.clientLeft || 0;\n  y -= docElem.clientTop || body.clientTop || 0;\n  return {\n    left: x,\n    top: y\n  };\n}\n\nexport function getOffsetLeft(el) {\n  var pos = getClientPosition(el);\n  var doc = el.ownerDocument; // Only IE use `parentWindow`\n\n  var w = doc.defaultView || doc.parentWindow;\n  pos.left += getScroll(w);\n  return pos.left;\n}","import Rate from './Rate';\nexport default Rate;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport StarFilled from \"@ant-design/icons/es/icons/StarFilled\";\nimport RcRate from 'rc-rate';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport Tooltip from '../tooltip';\nvar Rate = /*#__PURE__*/React.forwardRef(function (_a, ref) {\n  var prefixCls = _a.prefixCls,\n      tooltips = _a.tooltips,\n      props = __rest(_a, [\"prefixCls\", \"tooltips\"]);\n\n  var characterRender = function characterRender(node, _ref) {\n    var index = _ref.index;\n    if (!tooltips) return node;\n    return /*#__PURE__*/React.createElement(Tooltip, {\n      title: tooltips[index]\n    }, node);\n  };\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var ratePrefixCls = getPrefixCls('rate', prefixCls);\n  return /*#__PURE__*/React.createElement(RcRate, _extends({\n    ref: ref,\n    characterRender: characterRender\n  }, props, {\n    prefixCls: ratePrefixCls,\n    direction: direction\n  }));\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Rate.displayName = 'Rate';\n}\n\nRate.defaultProps = {\n  character: /*#__PURE__*/React.createElement(StarFilled, null)\n};\nexport default Rate;"],"names":["Achievements","players","achievements","reference","unknownText","pt","en","className","clsx","getAnimationClass","size","level","map","achievement","index","type","Icon","MedalStarIcon","achievementObj","player","playerId","length","icon","title","id","avatarId","name","Boolean","description","content","value","shape","AnimatedClockIcon","props","xmlns","viewBox","fill","d","attributeName","dur","from","repeatCount","to","TrophyIcon","cx","cy","r","TableOrder","order","activePlayerId","reorderByUser","orderedList","useMemo","reorder","doublePlayerCount","isActive","color","getAvatarColorById","Fragment","style","backgroundColor","undefined","upright","width","custom","MetricHighlight","children","View","ViewIf","isVisible","ViewOr","orCondition","ViewSwitch","cases","Error","console","warn","StoryWaiting","storyteller","user","gameOrder","fullWidth","IconAvatar","contained","addressUser","hand","sizeRatio","randomWords","BookPages","leftPage","rightPage","x","y","height","StoryWriting","onSubmitStory","translate","useLanguage","isLoading","useLoading","useState","story","setStory","cardId","setCardId","onButtonClick","trim","useMock","getRandomItem","imageId","cardWidth","placeholder","onChange","e","target","onPressEnter","align","disabled","onClick","onSelectCard","disabledSelectButton","state","info","useStep","step","goToNextStep","setStep","useUser","isUserReady","useIsUserReady","useWhichPlayerIsThe","isUserTheStoryTeller","request","useAPICall","apiFunction","CONTADORES_HISTORIAS_API","actionName","onBeforeCall","onError","successMessage","errorMessage","payload","action","useOnSubmitStoryAPIRequest","phase","allowedPhase","PHASES","conditions","round","onPressButton","time","circleColor","FairyTaleIcon","onClose","currentRound","current","buttonText","storytellerId","TableFaceDown","baseClass","Object","values","isHidden","hiddenClassModifier","StepPlayCard","onPlayCard","hasPlayedCardAlready","header","randomColor","PointsHighlight","StarIcon","useOnPlayCardAPIRequest","ImageCardsIcon","VotingRules","ScoringRules","StepVoting","onSubmitVote","table","useCardWidth","Math","max","keys","vote","tableEntry","filter","includes","mockVote","cardEntry","isUserCard","isUserVote","DownSquareOutlined","div","useOnSubmitVoteAPIRequest","VoteIcon","entry","StepResolution","useTemporarilyHidePlayersBar","solution","find","otherCards","votes","votePlayerId","onExpire","duration","getGainedPointsText","outcome","StepRanking","ranking","lastRound","goToPreviousStep","gainedPointsDescriptions","subtitle","SealIcon","achievementsReference","MOST_DECEIVING","MedalLightBulbIcon","WORST_CARDS","MedalCloseIcon","WORST_CLUES","MedalSufferingIcon","EASIEST_CLUES","MedalThumbsUpIcon","HARDEST_CLUES","MedalThumbsDownIcon","TABLE_VOTES","MedalRobotIcon","announcementIcon","ConfigProvider","theme","primaryColor","THEME_COLORS","gameId","gameCollection","GAME_COLLECTION","getActiveComponent","PhaseLobby","PhaseRules","PhaseSetup","PhaseStory","PhaseCardPlay","PhaseVoting","PhaseResolution","PhaseGameOver","PageError","propertyName","useGlobalState","userId","activePlayer","setActivePlayer","isUser","setIsUser","useEffect","CaretUpOutlined","ref","React","AntdIcon","_objectSpread","CaretUpOutlinedSvg","displayName","CrownFilled","CrownFilledSvg","DownSquareOutlinedSvg","StarFilled","StarFilledSvg","UpCircleOutlined","UpCircleOutlinedSvg","Star","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","this","apply","arguments","onHover","_this$props","_this$props2","onKeyDown","_this$props3","keyCode","_createClass","key","_this$props4","prefixCls","allowHalf","focused","starValue","concat","_this$props5","character","characterRender","count","characterNode","start","getClassName","onMouseMove","role","tabIndex","noop","Rate","call","event","onHoverChange","hoverValue","getStarValue","pageX","cleanedValue","setState","onMouseLeave","allowClear","newValue","isReset","changeValue","onFocus","onBlur","reverse","direction","KeyCode","preventDefault","saveRef","node","stars","saveRate","rate","defaultValue","autoFocus","focus","findDOMNode","starEle","getStarDOM","leftDis","el","pos","elem","doc","ownerDocument","body","docElem","documentElement","box","getBoundingClientRect","left","top","clientLeft","clientTop","getClientPosition","w","defaultView","parentWindow","ret","pageXOffset","method","document","getScroll","getOffsetLeft","clientWidth","blur","_this$state","disabledClass","push","rateClassName","classNames","_defineProperty","nextProps","defaultProps","__rest","s","t","p","prototype","hasOwnProperty","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","_a","tooltips","_React$useContext","ConfigContext","getPrefixCls","ratePrefixCls","RcRate","_extends","_ref","Tooltip"],"sourceRoot":""}